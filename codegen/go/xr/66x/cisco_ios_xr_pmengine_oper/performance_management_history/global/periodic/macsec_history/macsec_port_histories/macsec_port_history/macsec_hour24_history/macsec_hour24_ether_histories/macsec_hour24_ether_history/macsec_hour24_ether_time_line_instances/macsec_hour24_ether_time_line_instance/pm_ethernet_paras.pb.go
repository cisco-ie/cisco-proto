/*
Copyright 2019 Cisco Systems

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: pm_ethernet_paras.proto

package cisco_ios_xr_pmengine_oper_performance_management_history_global_periodic_macsec_history_macsec_port_histories_macsec_port_history_macsec_hour24_history_macsec_hour24_ether_histories_macsec_hour24_ether_history_macsec_hour24_ether_time_line_instances_macsec_hour24_ether_time_line_instance

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type PmEthernetParas_KEYS struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Number               uint32   `protobuf:"varint,2,opt,name=number,proto3" json:"number,omitempty"`
	Number_1             uint32   `protobuf:"varint,3,opt,name=number_1,json=number1,proto3" json:"number_1,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PmEthernetParas_KEYS) Reset()         { *m = PmEthernetParas_KEYS{} }
func (m *PmEthernetParas_KEYS) String() string { return proto.CompactTextString(m) }
func (*PmEthernetParas_KEYS) ProtoMessage()    {}
func (*PmEthernetParas_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_cf3f43479a88ef2e, []int{0}
}

func (m *PmEthernetParas_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PmEthernetParas_KEYS.Unmarshal(m, b)
}
func (m *PmEthernetParas_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PmEthernetParas_KEYS.Marshal(b, m, deterministic)
}
func (m *PmEthernetParas_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PmEthernetParas_KEYS.Merge(m, src)
}
func (m *PmEthernetParas_KEYS) XXX_Size() int {
	return xxx_messageInfo_PmEthernetParas_KEYS.Size(m)
}
func (m *PmEthernetParas_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_PmEthernetParas_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_PmEthernetParas_KEYS proto.InternalMessageInfo

func (m *PmEthernetParas_KEYS) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *PmEthernetParas_KEYS) GetNumber() uint32 {
	if m != nil {
		return m.Number
	}
	return 0
}

func (m *PmEthernetParas_KEYS) GetNumber_1() uint32 {
	if m != nil {
		return m.Number_1
	}
	return 0
}

type PmEtherParam struct {
	Data                 uint64   `protobuf:"varint,1,opt,name=data,proto3" json:"data,omitempty"`
	Threshold            uint64   `protobuf:"varint,2,opt,name=threshold,proto3" json:"threshold,omitempty"`
	TcaReport            bool     `protobuf:"varint,3,opt,name=tca_report,json=tcaReport,proto3" json:"tca_report,omitempty"`
	Valid                bool     `protobuf:"varint,4,opt,name=valid,proto3" json:"valid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PmEtherParam) Reset()         { *m = PmEtherParam{} }
func (m *PmEtherParam) String() string { return proto.CompactTextString(m) }
func (*PmEtherParam) ProtoMessage()    {}
func (*PmEtherParam) Descriptor() ([]byte, []int) {
	return fileDescriptor_cf3f43479a88ef2e, []int{1}
}

func (m *PmEtherParam) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PmEtherParam.Unmarshal(m, b)
}
func (m *PmEtherParam) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PmEtherParam.Marshal(b, m, deterministic)
}
func (m *PmEtherParam) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PmEtherParam.Merge(m, src)
}
func (m *PmEtherParam) XXX_Size() int {
	return xxx_messageInfo_PmEtherParam.Size(m)
}
func (m *PmEtherParam) XXX_DiscardUnknown() {
	xxx_messageInfo_PmEtherParam.DiscardUnknown(m)
}

var xxx_messageInfo_PmEtherParam proto.InternalMessageInfo

func (m *PmEtherParam) GetData() uint64 {
	if m != nil {
		return m.Data
	}
	return 0
}

func (m *PmEtherParam) GetThreshold() uint64 {
	if m != nil {
		return m.Threshold
	}
	return 0
}

func (m *PmEtherParam) GetTcaReport() bool {
	if m != nil {
		return m.TcaReport
	}
	return false
}

func (m *PmEtherParam) GetValid() bool {
	if m != nil {
		return m.Valid
	}
	return false
}

type PmEtherParamString struct {
	Data                 string   `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	Threshold            string   `protobuf:"bytes,2,opt,name=threshold,proto3" json:"threshold,omitempty"`
	TcaReport            bool     `protobuf:"varint,3,opt,name=tca_report,json=tcaReport,proto3" json:"tca_report,omitempty"`
	Valid                bool     `protobuf:"varint,4,opt,name=valid,proto3" json:"valid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PmEtherParamString) Reset()         { *m = PmEtherParamString{} }
func (m *PmEtherParamString) String() string { return proto.CompactTextString(m) }
func (*PmEtherParamString) ProtoMessage()    {}
func (*PmEtherParamString) Descriptor() ([]byte, []int) {
	return fileDescriptor_cf3f43479a88ef2e, []int{2}
}

func (m *PmEtherParamString) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PmEtherParamString.Unmarshal(m, b)
}
func (m *PmEtherParamString) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PmEtherParamString.Marshal(b, m, deterministic)
}
func (m *PmEtherParamString) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PmEtherParamString.Merge(m, src)
}
func (m *PmEtherParamString) XXX_Size() int {
	return xxx_messageInfo_PmEtherParamString.Size(m)
}
func (m *PmEtherParamString) XXX_DiscardUnknown() {
	xxx_messageInfo_PmEtherParamString.DiscardUnknown(m)
}

var xxx_messageInfo_PmEtherParamString proto.InternalMessageInfo

func (m *PmEtherParamString) GetData() string {
	if m != nil {
		return m.Data
	}
	return ""
}

func (m *PmEtherParamString) GetThreshold() string {
	if m != nil {
		return m.Threshold
	}
	return ""
}

func (m *PmEtherParamString) GetTcaReport() bool {
	if m != nil {
		return m.TcaReport
	}
	return false
}

func (m *PmEtherParamString) GetValid() bool {
	if m != nil {
		return m.Valid
	}
	return false
}

type PmEthernetParas struct {
	Index                  uint32              `protobuf:"varint,50,opt,name=index,proto3" json:"index,omitempty"`
	Valid                  bool                `protobuf:"varint,51,opt,name=valid,proto3" json:"valid,omitempty"`
	Timestamp              string              `protobuf:"bytes,52,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	LastClearTime          string              `protobuf:"bytes,53,opt,name=last_clear_time,json=lastClearTime,proto3" json:"last_clear_time,omitempty"`
	LastClear30SecTime     string              `protobuf:"bytes,54,opt,name=last_clear30_sec_time,json=lastClear30SecTime,proto3" json:"last_clear30_sec_time,omitempty"`
	LastClear15MinTime     string              `protobuf:"bytes,55,opt,name=last_clear15_min_time,json=lastClear15MinTime,proto3" json:"last_clear15_min_time,omitempty"`
	LastClear24HrTime      string              `protobuf:"bytes,56,opt,name=last_clear24_hr_time,json=lastClear24HrTime,proto3" json:"last_clear24_hr_time,omitempty"`
	Sec30Support           bool                `protobuf:"varint,57,opt,name=sec30_support,json=sec30Support,proto3" json:"sec30_support,omitempty"`
	RxPkt                  *PmEtherParam       `protobuf:"bytes,58,opt,name=rx_pkt,json=rxPkt,proto3" json:"rx_pkt,omitempty"`
	StatPkt                *PmEtherParam       `protobuf:"bytes,59,opt,name=stat_pkt,json=statPkt,proto3" json:"stat_pkt,omitempty"`
	OctetStat              *PmEtherParam       `protobuf:"bytes,60,opt,name=octet_stat,json=octetStat,proto3" json:"octet_stat,omitempty"`
	OversizePktStat        *PmEtherParam       `protobuf:"bytes,61,opt,name=oversize_pkt_stat,json=oversizePktStat,proto3" json:"oversize_pkt_stat,omitempty"`
	FcsErrorsStat          *PmEtherParam       `protobuf:"bytes,62,opt,name=fcs_errors_stat,json=fcsErrorsStat,proto3" json:"fcs_errors_stat,omitempty"`
	LongFramesStat         *PmEtherParam       `protobuf:"bytes,63,opt,name=long_frames_stat,json=longFramesStat,proto3" json:"long_frames_stat,omitempty"`
	JabberStat             *PmEtherParam       `protobuf:"bytes,64,opt,name=jabber_stat,json=jabberStat,proto3" json:"jabber_stat,omitempty"`
	Ether64Octets          *PmEtherParam       `protobuf:"bytes,65,opt,name=ether64_octets,json=ether64Octets,proto3" json:"ether64_octets,omitempty"`
	Ether65127Octet        *PmEtherParam       `protobuf:"bytes,66,opt,name=ether65127_octet,json=ether65127Octet,proto3" json:"ether65127_octet,omitempty"`
	Ether128255Octet       *PmEtherParam       `protobuf:"bytes,67,opt,name=ether128255_octet,json=ether128255Octet,proto3" json:"ether128255_octet,omitempty"`
	Ether256511Octet       *PmEtherParam       `protobuf:"bytes,68,opt,name=ether256511_octet,json=ether256511Octet,proto3" json:"ether256511_octet,omitempty"`
	Ether5121023Octet      *PmEtherParam       `protobuf:"bytes,69,opt,name=ether5121023_octet,json=ether5121023Octet,proto3" json:"ether5121023_octet,omitempty"`
	Ether10241518Octet     *PmEtherParam       `protobuf:"bytes,70,opt,name=ether10241518_octet,json=ether10241518Octet,proto3" json:"ether10241518_octet,omitempty"`
	InUcastPkt             *PmEtherParam       `protobuf:"bytes,71,opt,name=in_ucast_pkt,json=inUcastPkt,proto3" json:"in_ucast_pkt,omitempty"`
	InMcastPkt             *PmEtherParam       `protobuf:"bytes,72,opt,name=in_mcast_pkt,json=inMcastPkt,proto3" json:"in_mcast_pkt,omitempty"`
	InBcastPkt             *PmEtherParam       `protobuf:"bytes,73,opt,name=in_bcast_pkt,json=inBcastPkt,proto3" json:"in_bcast_pkt,omitempty"`
	OutUcastPkt            *PmEtherParam       `protobuf:"bytes,74,opt,name=out_ucast_pkt,json=outUcastPkt,proto3" json:"out_ucast_pkt,omitempty"`
	OutBcastPkt            *PmEtherParam       `protobuf:"bytes,75,opt,name=out_bcast_pkt,json=outBcastPkt,proto3" json:"out_bcast_pkt,omitempty"`
	OutMcastPkt            *PmEtherParam       `protobuf:"bytes,76,opt,name=out_mcast_pkt,json=outMcastPkt,proto3" json:"out_mcast_pkt,omitempty"`
	TxPkt                  *PmEtherParam       `protobuf:"bytes,77,opt,name=tx_pkt,json=txPkt,proto3" json:"tx_pkt,omitempty"`
	IfInErrors             *PmEtherParam       `protobuf:"bytes,78,opt,name=if_in_errors,json=ifInErrors,proto3" json:"if_in_errors,omitempty"`
	IfInOctets             *PmEtherParam       `protobuf:"bytes,79,opt,name=if_in_octets,json=ifInOctets,proto3" json:"if_in_octets,omitempty"`
	EtherStatMulticastPkt  *PmEtherParam       `protobuf:"bytes,80,opt,name=ether_stat_multicast_pkt,json=etherStatMulticastPkt,proto3" json:"ether_stat_multicast_pkt,omitempty"`
	EtherStatBroadcastPkt  *PmEtherParam       `protobuf:"bytes,81,opt,name=ether_stat_broadcast_pkt,json=etherStatBroadcastPkt,proto3" json:"ether_stat_broadcast_pkt,omitempty"`
	EtherStatUndersizedPkt *PmEtherParam       `protobuf:"bytes,82,opt,name=ether_stat_undersized_pkt,json=etherStatUndersizedPkt,proto3" json:"ether_stat_undersized_pkt,omitempty"`
	OutOctets              *PmEtherParam       `protobuf:"bytes,83,opt,name=out_octets,json=outOctets,proto3" json:"out_octets,omitempty"`
	InPauseFrame           *PmEtherParam       `protobuf:"bytes,84,opt,name=in_pause_frame,json=inPauseFrame,proto3" json:"in_pause_frame,omitempty"`
	InGoodBytes            *PmEtherParam       `protobuf:"bytes,85,opt,name=in_good_bytes,json=inGoodBytes,proto3" json:"in_good_bytes,omitempty"`
	In8021QFrames          *PmEtherParam       `protobuf:"bytes,86,opt,name=in8021q_frames,json=in8021qFrames,proto3" json:"in8021q_frames,omitempty"`
	InPkts1519MaxOctets    *PmEtherParam       `protobuf:"bytes,87,opt,name=in_pkts1519_max_octets,json=inPkts1519MaxOctets,proto3" json:"in_pkts1519_max_octets,omitempty"`
	InGoodPkts             *PmEtherParam       `protobuf:"bytes,88,opt,name=in_good_pkts,json=inGoodPkts,proto3" json:"in_good_pkts,omitempty"`
	InDropOverrun          *PmEtherParam       `protobuf:"bytes,89,opt,name=in_drop_overrun,json=inDropOverrun,proto3" json:"in_drop_overrun,omitempty"`
	InDropAbort            *PmEtherParam       `protobuf:"bytes,90,opt,name=in_drop_abort,json=inDropAbort,proto3" json:"in_drop_abort,omitempty"`
	InDropInvalidVlan      *PmEtherParam       `protobuf:"bytes,91,opt,name=in_drop_invalid_vlan,json=inDropInvalidVlan,proto3" json:"in_drop_invalid_vlan,omitempty"`
	InDropInvalidDmac      *PmEtherParam       `protobuf:"bytes,92,opt,name=in_drop_invalid_dmac,json=inDropInvalidDmac,proto3" json:"in_drop_invalid_dmac,omitempty"`
	InDropInvalidEncap     *PmEtherParam       `protobuf:"bytes,93,opt,name=in_drop_invalid_encap,json=inDropInvalidEncap,proto3" json:"in_drop_invalid_encap,omitempty"`
	InDropOther            *PmEtherParam       `protobuf:"bytes,94,opt,name=in_drop_other,json=inDropOther,proto3" json:"in_drop_other,omitempty"`
	InMibGiant             *PmEtherParam       `protobuf:"bytes,95,opt,name=in_mib_giant,json=inMibGiant,proto3" json:"in_mib_giant,omitempty"`
	InMibJabber            *PmEtherParam       `protobuf:"bytes,96,opt,name=in_mib_jabber,json=inMibJabber,proto3" json:"in_mib_jabber,omitempty"`
	InMibcrc               *PmEtherParam       `protobuf:"bytes,97,opt,name=in_mibcrc,json=inMibcrc,proto3" json:"in_mibcrc,omitempty"`
	InErrorCollisions      *PmEtherParam       `protobuf:"bytes,98,opt,name=in_error_collisions,json=inErrorCollisions,proto3" json:"in_error_collisions,omitempty"`
	InErrorSymbol          *PmEtherParam       `protobuf:"bytes,99,opt,name=in_error_symbol,json=inErrorSymbol,proto3" json:"in_error_symbol,omitempty"`
	OutGoodBytes           *PmEtherParam       `protobuf:"bytes,100,opt,name=out_good_bytes,json=outGoodBytes,proto3" json:"out_good_bytes,omitempty"`
	Out8021QFrames         *PmEtherParam       `protobuf:"bytes,101,opt,name=out8021q_frames,json=out8021qFrames,proto3" json:"out8021q_frames,omitempty"`
	OutPauseFrames         *PmEtherParam       `protobuf:"bytes,102,opt,name=out_pause_frames,json=outPauseFrames,proto3" json:"out_pause_frames,omitempty"`
	OutPkts1519MaxOctets   *PmEtherParam       `protobuf:"bytes,103,opt,name=out_pkts1519_max_octets,json=outPkts1519MaxOctets,proto3" json:"out_pkts1519_max_octets,omitempty"`
	OutGoodPkts            *PmEtherParam       `protobuf:"bytes,104,opt,name=out_good_pkts,json=outGoodPkts,proto3" json:"out_good_pkts,omitempty"`
	OutDropUnderrun        *PmEtherParam       `protobuf:"bytes,105,opt,name=out_drop_underrun,json=outDropUnderrun,proto3" json:"out_drop_underrun,omitempty"`
	OutDropAbort           *PmEtherParam       `protobuf:"bytes,106,opt,name=out_drop_abort,json=outDropAbort,proto3" json:"out_drop_abort,omitempty"`
	OutDropOther           *PmEtherParam       `protobuf:"bytes,107,opt,name=out_drop_other,json=outDropOther,proto3" json:"out_drop_other,omitempty"`
	OutErrorOther          *PmEtherParam       `protobuf:"bytes,108,opt,name=out_error_other,json=outErrorOther,proto3" json:"out_error_other,omitempty"`
	InErrorGiant           *PmEtherParam       `protobuf:"bytes,109,opt,name=in_error_giant,json=inErrorGiant,proto3" json:"in_error_giant,omitempty"`
	InErrorRunt            *PmEtherParam       `protobuf:"bytes,110,opt,name=in_error_runt,json=inErrorRunt,proto3" json:"in_error_runt,omitempty"`
	InErrorJabbers         *PmEtherParam       `protobuf:"bytes,111,opt,name=in_error_jabbers,json=inErrorJabbers,proto3" json:"in_error_jabbers,omitempty"`
	InErrorFragments       *PmEtherParam       `protobuf:"bytes,112,opt,name=in_error_fragments,json=inErrorFragments,proto3" json:"in_error_fragments,omitempty"`
	InErrorOther           *PmEtherParam       `protobuf:"bytes,113,opt,name=in_error_other,json=inErrorOther,proto3" json:"in_error_other,omitempty"`
	InPkt64Octet           *PmEtherParam       `protobuf:"bytes,114,opt,name=in_pkt64_octet,json=inPkt64Octet,proto3" json:"in_pkt64_octet,omitempty"`
	InPkts65To127Octets    *PmEtherParam       `protobuf:"bytes,115,opt,name=in_pkts65_to127_octets,json=inPkts65To127Octets,proto3" json:"in_pkts65_to127_octets,omitempty"`
	InPkts128To255Octets   *PmEtherParam       `protobuf:"bytes,116,opt,name=in_pkts128_to255_octets,json=inPkts128To255Octets,proto3" json:"in_pkts128_to255_octets,omitempty"`
	InPkts256To511Octets   *PmEtherParam       `protobuf:"bytes,117,opt,name=in_pkts256_to511_octets,json=inPkts256To511Octets,proto3" json:"in_pkts256_to511_octets,omitempty"`
	InPkts512To1023Octets  *PmEtherParam       `protobuf:"bytes,118,opt,name=in_pkts512_to1023_octets,json=inPkts512To1023Octets,proto3" json:"in_pkts512_to1023_octets,omitempty"`
	InPkts1024To1518Octets *PmEtherParam       `protobuf:"bytes,119,opt,name=in_pkts1024_to1518_octets,json=inPkts1024To1518Octets,proto3" json:"in_pkts1024_to1518_octets,omitempty"`
	Outpkt64Octet          *PmEtherParam       `protobuf:"bytes,120,opt,name=outpkt64octet,proto3" json:"outpkt64octet,omitempty"`
	OutPkts65127Octets     *PmEtherParam       `protobuf:"bytes,121,opt,name=out_pkts65127_octets,json=outPkts65127Octets,proto3" json:"out_pkts65127_octets,omitempty"`
	OutPkts128255Octets    *PmEtherParam       `protobuf:"bytes,122,opt,name=out_pkts128255_octets,json=outPkts128255Octets,proto3" json:"out_pkts128255_octets,omitempty"`
	OutPkts256511Octets    *PmEtherParam       `protobuf:"bytes,123,opt,name=out_pkts256511_octets,json=outPkts256511Octets,proto3" json:"out_pkts256511_octets,omitempty"`
	OutPkts5121023Octets   *PmEtherParam       `protobuf:"bytes,124,opt,name=out_pkts5121023_octets,json=outPkts5121023Octets,proto3" json:"out_pkts5121023_octets,omitempty"`
	OutPkts10241518Octets  *PmEtherParam       `protobuf:"bytes,125,opt,name=out_pkts10241518_octets,json=outPkts10241518Octets,proto3" json:"out_pkts10241518_octets,omitempty"`
	RxUtil                 *PmEtherParamString `protobuf:"bytes,126,opt,name=rx_util,json=rxUtil,proto3" json:"rx_util,omitempty"`
	TxUtil                 *PmEtherParamString `protobuf:"bytes,127,opt,name=tx_util,json=txUtil,proto3" json:"tx_util,omitempty"`
	TxUndersizedPkt        *PmEtherParam       `protobuf:"bytes,128,opt,name=tx_undersized_pkt,json=txUndersizedPkt,proto3" json:"tx_undersized_pkt,omitempty"`
	TxOversizedPkt         *PmEtherParam       `protobuf:"bytes,129,opt,name=tx_oversized_pkt,json=txOversizedPkt,proto3" json:"tx_oversized_pkt,omitempty"`
	TxFragments            *PmEtherParam       `protobuf:"bytes,130,opt,name=tx_fragments,json=txFragments,proto3" json:"tx_fragments,omitempty"`
	TxJabber               *PmEtherParam       `protobuf:"bytes,131,opt,name=tx_jabber,json=txJabber,proto3" json:"tx_jabber,omitempty"`
	TxBadFcs               *PmEtherParam       `protobuf:"bytes,132,opt,name=tx_bad_fcs,json=txBadFcs,proto3" json:"tx_bad_fcs,omitempty"`
	XXX_NoUnkeyedLiteral   struct{}            `json:"-"`
	XXX_unrecognized       []byte              `json:"-"`
	XXX_sizecache          int32               `json:"-"`
}

func (m *PmEthernetParas) Reset()         { *m = PmEthernetParas{} }
func (m *PmEthernetParas) String() string { return proto.CompactTextString(m) }
func (*PmEthernetParas) ProtoMessage()    {}
func (*PmEthernetParas) Descriptor() ([]byte, []int) {
	return fileDescriptor_cf3f43479a88ef2e, []int{3}
}

func (m *PmEthernetParas) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PmEthernetParas.Unmarshal(m, b)
}
func (m *PmEthernetParas) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PmEthernetParas.Marshal(b, m, deterministic)
}
func (m *PmEthernetParas) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PmEthernetParas.Merge(m, src)
}
func (m *PmEthernetParas) XXX_Size() int {
	return xxx_messageInfo_PmEthernetParas.Size(m)
}
func (m *PmEthernetParas) XXX_DiscardUnknown() {
	xxx_messageInfo_PmEthernetParas.DiscardUnknown(m)
}

var xxx_messageInfo_PmEthernetParas proto.InternalMessageInfo

func (m *PmEthernetParas) GetIndex() uint32 {
	if m != nil {
		return m.Index
	}
	return 0
}

func (m *PmEthernetParas) GetValid() bool {
	if m != nil {
		return m.Valid
	}
	return false
}

func (m *PmEthernetParas) GetTimestamp() string {
	if m != nil {
		return m.Timestamp
	}
	return ""
}

func (m *PmEthernetParas) GetLastClearTime() string {
	if m != nil {
		return m.LastClearTime
	}
	return ""
}

func (m *PmEthernetParas) GetLastClear30SecTime() string {
	if m != nil {
		return m.LastClear30SecTime
	}
	return ""
}

func (m *PmEthernetParas) GetLastClear15MinTime() string {
	if m != nil {
		return m.LastClear15MinTime
	}
	return ""
}

func (m *PmEthernetParas) GetLastClear24HrTime() string {
	if m != nil {
		return m.LastClear24HrTime
	}
	return ""
}

func (m *PmEthernetParas) GetSec30Support() bool {
	if m != nil {
		return m.Sec30Support
	}
	return false
}

func (m *PmEthernetParas) GetRxPkt() *PmEtherParam {
	if m != nil {
		return m.RxPkt
	}
	return nil
}

func (m *PmEthernetParas) GetStatPkt() *PmEtherParam {
	if m != nil {
		return m.StatPkt
	}
	return nil
}

func (m *PmEthernetParas) GetOctetStat() *PmEtherParam {
	if m != nil {
		return m.OctetStat
	}
	return nil
}

func (m *PmEthernetParas) GetOversizePktStat() *PmEtherParam {
	if m != nil {
		return m.OversizePktStat
	}
	return nil
}

func (m *PmEthernetParas) GetFcsErrorsStat() *PmEtherParam {
	if m != nil {
		return m.FcsErrorsStat
	}
	return nil
}

func (m *PmEthernetParas) GetLongFramesStat() *PmEtherParam {
	if m != nil {
		return m.LongFramesStat
	}
	return nil
}

func (m *PmEthernetParas) GetJabberStat() *PmEtherParam {
	if m != nil {
		return m.JabberStat
	}
	return nil
}

func (m *PmEthernetParas) GetEther64Octets() *PmEtherParam {
	if m != nil {
		return m.Ether64Octets
	}
	return nil
}

func (m *PmEthernetParas) GetEther65127Octet() *PmEtherParam {
	if m != nil {
		return m.Ether65127Octet
	}
	return nil
}

func (m *PmEthernetParas) GetEther128255Octet() *PmEtherParam {
	if m != nil {
		return m.Ether128255Octet
	}
	return nil
}

func (m *PmEthernetParas) GetEther256511Octet() *PmEtherParam {
	if m != nil {
		return m.Ether256511Octet
	}
	return nil
}

func (m *PmEthernetParas) GetEther5121023Octet() *PmEtherParam {
	if m != nil {
		return m.Ether5121023Octet
	}
	return nil
}

func (m *PmEthernetParas) GetEther10241518Octet() *PmEtherParam {
	if m != nil {
		return m.Ether10241518Octet
	}
	return nil
}

func (m *PmEthernetParas) GetInUcastPkt() *PmEtherParam {
	if m != nil {
		return m.InUcastPkt
	}
	return nil
}

func (m *PmEthernetParas) GetInMcastPkt() *PmEtherParam {
	if m != nil {
		return m.InMcastPkt
	}
	return nil
}

func (m *PmEthernetParas) GetInBcastPkt() *PmEtherParam {
	if m != nil {
		return m.InBcastPkt
	}
	return nil
}

func (m *PmEthernetParas) GetOutUcastPkt() *PmEtherParam {
	if m != nil {
		return m.OutUcastPkt
	}
	return nil
}

func (m *PmEthernetParas) GetOutBcastPkt() *PmEtherParam {
	if m != nil {
		return m.OutBcastPkt
	}
	return nil
}

func (m *PmEthernetParas) GetOutMcastPkt() *PmEtherParam {
	if m != nil {
		return m.OutMcastPkt
	}
	return nil
}

func (m *PmEthernetParas) GetTxPkt() *PmEtherParam {
	if m != nil {
		return m.TxPkt
	}
	return nil
}

func (m *PmEthernetParas) GetIfInErrors() *PmEtherParam {
	if m != nil {
		return m.IfInErrors
	}
	return nil
}

func (m *PmEthernetParas) GetIfInOctets() *PmEtherParam {
	if m != nil {
		return m.IfInOctets
	}
	return nil
}

func (m *PmEthernetParas) GetEtherStatMulticastPkt() *PmEtherParam {
	if m != nil {
		return m.EtherStatMulticastPkt
	}
	return nil
}

func (m *PmEthernetParas) GetEtherStatBroadcastPkt() *PmEtherParam {
	if m != nil {
		return m.EtherStatBroadcastPkt
	}
	return nil
}

func (m *PmEthernetParas) GetEtherStatUndersizedPkt() *PmEtherParam {
	if m != nil {
		return m.EtherStatUndersizedPkt
	}
	return nil
}

func (m *PmEthernetParas) GetOutOctets() *PmEtherParam {
	if m != nil {
		return m.OutOctets
	}
	return nil
}

func (m *PmEthernetParas) GetInPauseFrame() *PmEtherParam {
	if m != nil {
		return m.InPauseFrame
	}
	return nil
}

func (m *PmEthernetParas) GetInGoodBytes() *PmEtherParam {
	if m != nil {
		return m.InGoodBytes
	}
	return nil
}

func (m *PmEthernetParas) GetIn8021QFrames() *PmEtherParam {
	if m != nil {
		return m.In8021QFrames
	}
	return nil
}

func (m *PmEthernetParas) GetInPkts1519MaxOctets() *PmEtherParam {
	if m != nil {
		return m.InPkts1519MaxOctets
	}
	return nil
}

func (m *PmEthernetParas) GetInGoodPkts() *PmEtherParam {
	if m != nil {
		return m.InGoodPkts
	}
	return nil
}

func (m *PmEthernetParas) GetInDropOverrun() *PmEtherParam {
	if m != nil {
		return m.InDropOverrun
	}
	return nil
}

func (m *PmEthernetParas) GetInDropAbort() *PmEtherParam {
	if m != nil {
		return m.InDropAbort
	}
	return nil
}

func (m *PmEthernetParas) GetInDropInvalidVlan() *PmEtherParam {
	if m != nil {
		return m.InDropInvalidVlan
	}
	return nil
}

func (m *PmEthernetParas) GetInDropInvalidDmac() *PmEtherParam {
	if m != nil {
		return m.InDropInvalidDmac
	}
	return nil
}

func (m *PmEthernetParas) GetInDropInvalidEncap() *PmEtherParam {
	if m != nil {
		return m.InDropInvalidEncap
	}
	return nil
}

func (m *PmEthernetParas) GetInDropOther() *PmEtherParam {
	if m != nil {
		return m.InDropOther
	}
	return nil
}

func (m *PmEthernetParas) GetInMibGiant() *PmEtherParam {
	if m != nil {
		return m.InMibGiant
	}
	return nil
}

func (m *PmEthernetParas) GetInMibJabber() *PmEtherParam {
	if m != nil {
		return m.InMibJabber
	}
	return nil
}

func (m *PmEthernetParas) GetInMibcrc() *PmEtherParam {
	if m != nil {
		return m.InMibcrc
	}
	return nil
}

func (m *PmEthernetParas) GetInErrorCollisions() *PmEtherParam {
	if m != nil {
		return m.InErrorCollisions
	}
	return nil
}

func (m *PmEthernetParas) GetInErrorSymbol() *PmEtherParam {
	if m != nil {
		return m.InErrorSymbol
	}
	return nil
}

func (m *PmEthernetParas) GetOutGoodBytes() *PmEtherParam {
	if m != nil {
		return m.OutGoodBytes
	}
	return nil
}

func (m *PmEthernetParas) GetOut8021QFrames() *PmEtherParam {
	if m != nil {
		return m.Out8021QFrames
	}
	return nil
}

func (m *PmEthernetParas) GetOutPauseFrames() *PmEtherParam {
	if m != nil {
		return m.OutPauseFrames
	}
	return nil
}

func (m *PmEthernetParas) GetOutPkts1519MaxOctets() *PmEtherParam {
	if m != nil {
		return m.OutPkts1519MaxOctets
	}
	return nil
}

func (m *PmEthernetParas) GetOutGoodPkts() *PmEtherParam {
	if m != nil {
		return m.OutGoodPkts
	}
	return nil
}

func (m *PmEthernetParas) GetOutDropUnderrun() *PmEtherParam {
	if m != nil {
		return m.OutDropUnderrun
	}
	return nil
}

func (m *PmEthernetParas) GetOutDropAbort() *PmEtherParam {
	if m != nil {
		return m.OutDropAbort
	}
	return nil
}

func (m *PmEthernetParas) GetOutDropOther() *PmEtherParam {
	if m != nil {
		return m.OutDropOther
	}
	return nil
}

func (m *PmEthernetParas) GetOutErrorOther() *PmEtherParam {
	if m != nil {
		return m.OutErrorOther
	}
	return nil
}

func (m *PmEthernetParas) GetInErrorGiant() *PmEtherParam {
	if m != nil {
		return m.InErrorGiant
	}
	return nil
}

func (m *PmEthernetParas) GetInErrorRunt() *PmEtherParam {
	if m != nil {
		return m.InErrorRunt
	}
	return nil
}

func (m *PmEthernetParas) GetInErrorJabbers() *PmEtherParam {
	if m != nil {
		return m.InErrorJabbers
	}
	return nil
}

func (m *PmEthernetParas) GetInErrorFragments() *PmEtherParam {
	if m != nil {
		return m.InErrorFragments
	}
	return nil
}

func (m *PmEthernetParas) GetInErrorOther() *PmEtherParam {
	if m != nil {
		return m.InErrorOther
	}
	return nil
}

func (m *PmEthernetParas) GetInPkt64Octet() *PmEtherParam {
	if m != nil {
		return m.InPkt64Octet
	}
	return nil
}

func (m *PmEthernetParas) GetInPkts65To127Octets() *PmEtherParam {
	if m != nil {
		return m.InPkts65To127Octets
	}
	return nil
}

func (m *PmEthernetParas) GetInPkts128To255Octets() *PmEtherParam {
	if m != nil {
		return m.InPkts128To255Octets
	}
	return nil
}

func (m *PmEthernetParas) GetInPkts256To511Octets() *PmEtherParam {
	if m != nil {
		return m.InPkts256To511Octets
	}
	return nil
}

func (m *PmEthernetParas) GetInPkts512To1023Octets() *PmEtherParam {
	if m != nil {
		return m.InPkts512To1023Octets
	}
	return nil
}

func (m *PmEthernetParas) GetInPkts1024To1518Octets() *PmEtherParam {
	if m != nil {
		return m.InPkts1024To1518Octets
	}
	return nil
}

func (m *PmEthernetParas) GetOutpkt64Octet() *PmEtherParam {
	if m != nil {
		return m.Outpkt64Octet
	}
	return nil
}

func (m *PmEthernetParas) GetOutPkts65127Octets() *PmEtherParam {
	if m != nil {
		return m.OutPkts65127Octets
	}
	return nil
}

func (m *PmEthernetParas) GetOutPkts128255Octets() *PmEtherParam {
	if m != nil {
		return m.OutPkts128255Octets
	}
	return nil
}

func (m *PmEthernetParas) GetOutPkts256511Octets() *PmEtherParam {
	if m != nil {
		return m.OutPkts256511Octets
	}
	return nil
}

func (m *PmEthernetParas) GetOutPkts5121023Octets() *PmEtherParam {
	if m != nil {
		return m.OutPkts5121023Octets
	}
	return nil
}

func (m *PmEthernetParas) GetOutPkts10241518Octets() *PmEtherParam {
	if m != nil {
		return m.OutPkts10241518Octets
	}
	return nil
}

func (m *PmEthernetParas) GetRxUtil() *PmEtherParamString {
	if m != nil {
		return m.RxUtil
	}
	return nil
}

func (m *PmEthernetParas) GetTxUtil() *PmEtherParamString {
	if m != nil {
		return m.TxUtil
	}
	return nil
}

func (m *PmEthernetParas) GetTxUndersizedPkt() *PmEtherParam {
	if m != nil {
		return m.TxUndersizedPkt
	}
	return nil
}

func (m *PmEthernetParas) GetTxOversizedPkt() *PmEtherParam {
	if m != nil {
		return m.TxOversizedPkt
	}
	return nil
}

func (m *PmEthernetParas) GetTxFragments() *PmEtherParam {
	if m != nil {
		return m.TxFragments
	}
	return nil
}

func (m *PmEthernetParas) GetTxJabber() *PmEtherParam {
	if m != nil {
		return m.TxJabber
	}
	return nil
}

func (m *PmEthernetParas) GetTxBadFcs() *PmEtherParam {
	if m != nil {
		return m.TxBadFcs
	}
	return nil
}

func init() {
	proto.RegisterType((*PmEthernetParas_KEYS)(nil), "cisco_ios_xr_pmengine_oper.performance_management_history.global.periodic.macsec_history.macsec_port_histories.macsec_port_history.macsec_hour24_history.macsec_hour24_ether_histories.macsec_hour24_ether_history.macsec_hour24_ether_time_line_instances.macsec_hour24_ether_time_line_instance.pm_ethernet_paras_KEYS")
	proto.RegisterType((*PmEtherParam)(nil), "cisco_ios_xr_pmengine_oper.performance_management_history.global.periodic.macsec_history.macsec_port_histories.macsec_port_history.macsec_hour24_history.macsec_hour24_ether_histories.macsec_hour24_ether_history.macsec_hour24_ether_time_line_instances.macsec_hour24_ether_time_line_instance.pm_ether_param")
	proto.RegisterType((*PmEtherParamString)(nil), "cisco_ios_xr_pmengine_oper.performance_management_history.global.periodic.macsec_history.macsec_port_histories.macsec_port_history.macsec_hour24_history.macsec_hour24_ether_histories.macsec_hour24_ether_history.macsec_hour24_ether_time_line_instances.macsec_hour24_ether_time_line_instance.pm_ether_param_string")
	proto.RegisterType((*PmEthernetParas)(nil), "cisco_ios_xr_pmengine_oper.performance_management_history.global.periodic.macsec_history.macsec_port_histories.macsec_port_history.macsec_hour24_history.macsec_hour24_ether_histories.macsec_hour24_ether_history.macsec_hour24_ether_time_line_instances.macsec_hour24_ether_time_line_instance.pm_ethernet_paras")
}

func init() { proto.RegisterFile("pm_ethernet_paras.proto", fileDescriptor_cf3f43479a88ef2e) }

var fileDescriptor_cf3f43479a88ef2e = []byte{
	// 2029 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xec, 0xdd, 0xdb, 0x72, 0xe4, 0x46,
	0x19, 0x00, 0xe0, 0x72, 0xb3, 0xf1, 0xae, 0x7b, 0xd7, 0xbb, 0xb6, 0xd6, 0x76, 0x3a, 0x55, 0x50,
	0xb5, 0xb5, 0x54, 0x51, 0x7b, 0x65, 0x2c, 0xd9, 0xe3, 0x38, 0x9c, 0xe3, 0x3d, 0x65, 0x13, 0x8c,
	0xcd, 0xd8, 0x0e, 0x84, 0x53, 0xd3, 0xa3, 0xd1, 0x8c, 0x3b, 0x1e, 0x75, 0x4f, 0xd4, 0x2d, 0x47,
	0x0e, 0x10, 0x8e, 0x2f, 0xc2, 0x23, 0x70, 0xc7, 0x2b, 0xe4, 0x82, 0x0a, 0x01, 0x2a, 0x05, 0x21,
	0x21, 0x40, 0x08, 0xc7, 0xe2, 0x1d, 0xa8, 0xee, 0x96, 0x34, 0x1a, 0xdb, 0x29, 0xa0, 0x95, 0xcb,
	0xff, 0xce, 0x6a, 0x1d, 0xfd, 0xad, 0xf6, 0x97, 0xf4, 0xff, 0xdd, 0x6d, 0xfc, 0xf8, 0x38, 0xa5,
	0x89, 0x3e, 0x4a, 0x32, 0x91, 0x68, 0x3a, 0x66, 0x19, 0x53, 0xab, 0xe3, 0x4c, 0x6a, 0x19, 0xfc,
	0x14, 0xc5, 0x5c, 0xc5, 0x92, 0x72, 0xa9, 0x68, 0x91, 0xd1, 0x71, 0x9a, 0x88, 0x21, 0x17, 0x09,
	0x95, 0xe3, 0x24, 0x5b, 0x1d, 0x27, 0xd9, 0x40, 0x66, 0x29, 0x13, 0x71, 0x42, 0x53, 0x26, 0xd8,
	0x30, 0x49, 0x13, 0xa1, 0xe9, 0x11, 0x57, 0x5a, 0x66, 0xa7, 0xab, 0xc3, 0x91, 0xec, 0xb1, 0x91,
	0xd9, 0x8a, 0xcb, 0x3e, 0x8f, 0x57, 0x53, 0x16, 0xab, 0x24, 0xae, 0x57, 0x97, 0x8b, 0x63, 0x99,
	0x55, 0xbb, 0xf0, 0x44, 0x5d, 0xd0, 0x5a, 0x6f, 0x79, 0x24, 0xf3, 0x2c, 0xda, 0xf8, 0x80, 0x56,
	0x7b, 0xf5, 0xe7, 0x8f, 0x73, 0xc1, 0xda, 0x8b, 0xf7, 0xd4, 0x3c, 0x4d, 0xe8, 0xc8, 0xfc, 0x6a,
	0x5c, 0x28, 0x6d, 0x7e, 0x25, 0xf5, 0x3f, 0x6e, 0x77, 0x9b, 0xe2, 0x95, 0x73, 0x7c, 0xf4, 0xb9,
	0xfb, 0x2f, 0xec, 0x07, 0x01, 0xbe, 0x24, 0x58, 0x9a, 0x90, 0x99, 0x5b, 0x33, 0x77, 0xe6, 0xba,
	0xf6, 0xe7, 0x60, 0x05, 0xcf, 0x8a, 0x3c, 0xed, 0x25, 0x19, 0x41, 0xb7, 0x66, 0xee, 0xcc, 0x77,
	0xcb, 0xa5, 0xe0, 0x09, 0x7c, 0xc5, 0xfd, 0x44, 0x43, 0xf2, 0x11, 0xbb, 0xe6, 0xb2, 0x5b, 0x0e,
	0x6f, 0xbf, 0x8c, 0xaf, 0x57, 0x27, 0xb0, 0x47, 0x4f, 0xcd, 0x81, 0xfb, 0x4c, 0x33, 0x7b, 0xe0,
	0x4b, 0x5d, 0xfb, 0x73, 0xf0, 0x51, 0x3c, 0xa7, 0x8f, 0xb2, 0x44, 0x1d, 0xc9, 0x51, 0xdf, 0x1e,
	0xfb, 0x52, 0x77, 0xd2, 0x10, 0x7c, 0x0c, 0x63, 0x1d, 0x33, 0x9a, 0x25, 0x46, 0xd6, 0x9e, 0xe0,
	0x4a, 0x77, 0x4e, 0xc7, 0xac, 0x6b, 0x1b, 0x82, 0x25, 0xfc, 0xd8, 0x09, 0x1b, 0xf1, 0x3e, 0xb9,
	0x64, 0xd7, 0xb8, 0x85, 0xdb, 0xaf, 0xe2, 0xe5, 0xe9, 0x13, 0x53, 0xa5, 0x33, 0x2e, 0x86, 0x53,
	0xe7, 0x9f, 0xfb, 0xa0, 0xf3, 0xcf, 0xb5, 0x3e, 0xff, 0xfb, 0xaf, 0xcf, 0xe0, 0xc5, 0x73, 0xb6,
	0x66, 0x63, 0x2e, 0xfa, 0x49, 0x41, 0x22, 0xeb, 0xe4, 0x16, 0x26, 0x87, 0x58, 0x6f, 0x1c, 0xc2,
	0x5e, 0x15, 0x4f, 0x13, 0xa5, 0x59, 0x3a, 0x26, 0x1b, 0xe5, 0x55, 0x55, 0x0d, 0xc1, 0x27, 0xf0,
	0x8d, 0x11, 0x53, 0x9a, 0xc6, 0xa3, 0x84, 0xb9, 0x7f, 0x5b, 0xd2, 0xb1, 0xdb, 0xcc, 0x9b, 0xe6,
	0xbb, 0xa6, 0xf5, 0x80, 0xa7, 0x49, 0x10, 0xe2, 0xe5, 0xc9, 0x76, 0xeb, 0x6b, 0xd4, 0xdc, 0x16,
	0x76, 0xeb, 0x4d, 0xbb, 0x75, 0x50, 0x6f, 0xbd, 0xbe, 0xb6, 0x9f, 0xc4, 0xe7, 0x77, 0x09, 0x3b,
	0x34, 0xe5, 0xc2, 0xed, 0xf2, 0xe4, 0x99, 0x5d, 0xc2, 0xce, 0x0e, 0x17, 0x76, 0x97, 0x4f, 0xe2,
	0xa5, 0xc9, 0x2e, 0xe6, 0x4e, 0x2f, 0x2f, 0x69, 0xcb, 0xee, 0xb1, 0x58, 0xef, 0x11, 0x6d, 0x3c,
	0xe3, 0x2e, 0xeb, 0xe3, 0x78, 0x5e, 0x25, 0xb1, 0xb9, 0x9e, 0x7c, 0x6c, 0x5d, 0x9f, 0xb2, 0xbf,
	0xfa, 0x35, 0xdb, 0xb8, 0xef, 0xda, 0x82, 0xd7, 0x10, 0x9e, 0xcd, 0x0a, 0x3a, 0x3e, 0xd6, 0xe4,
	0x53, 0xb7, 0x66, 0xee, 0x5c, 0x8d, 0x7e, 0x86, 0x56, 0xe1, 0x3f, 0xf5, 0x7f, 0xd9, 0x6e, 0x75,
	0xfa, 0xbe, 0xef, 0x3e, 0x96, 0x15, 0x7b, 0xc7, 0x3a, 0xf8, 0x05, 0xc2, 0x57, 0x94, 0x66, 0xda,
	0x6a, 0x7e, 0x1a, 0x34, 0x3d, 0x35, 0x2f, 0x1b, 0x43, 0xe3, 0xf9, 0x06, 0xc2, 0x58, 0xc6, 0x3a,
	0xd1, 0xd4, 0xb4, 0x90, 0xcf, 0x80, 0xa8, 0xa7, 0xe8, 0x9c, 0x55, 0xdc, 0xd7, 0x4c, 0x07, 0x7f,
	0x40, 0x78, 0x51, 0x9e, 0x24, 0x99, 0xe2, 0xaf, 0x24, 0xe6, 0x3e, 0x75, 0xb4, 0x9f, 0x05, 0x5a,
	0x4f, 0xda, 0x1b, 0x15, 0xe6, 0xde, 0xb1, 0x03, 0x7e, 0x0b, 0xe1, 0x1b, 0x83, 0x58, 0xd1, 0x24,
	0xcb, 0x64, 0xa6, 0x1c, 0xef, 0xe7, 0x80, 0xd7, 0x93, 0x77, 0x7e, 0x10, 0xab, 0xfb, 0x56, 0xd2,
	0xe2, 0xbe, 0x8d, 0xf0, 0xc2, 0x48, 0x8a, 0x21, 0x1d, 0x64, 0x2c, 0x4d, 0x4a, 0xdd, 0xcf, 0x83,
	0xae, 0xa7, 0xee, 0x75, 0x63, 0xf9, 0xc0, 0x52, 0x5a, 0xde, 0x5f, 0x23, 0x7c, 0xf5, 0x45, 0xd6,
	0x33, 0xaf, 0x99, 0x56, 0xf6, 0x0b, 0x20, 0xeb, 0x29, 0x8b, 0x1d, 0xa3, 0x55, 0xfd, 0x1d, 0xc2,
	0xd7, 0xed, 0xba, 0xcd, 0x0d, 0x6a, 0x03, 0xb1, 0x22, 0x4f, 0x03, 0xac, 0x6f, 0x40, 0x28, 0x25,
	0x77, 0x2d, 0x64, 0xf0, 0x0e, 0xc2, 0x0b, 0xae, 0xa5, 0x13, 0x46, 0x4f, 0x3a, 0x5e, 0xb2, 0x0d,
	0xba, 0xbe, 0x4f, 0xb3, 0x89, 0xa5, 0x05, 0x0e, 0xde, 0x45, 0x78, 0xd1, 0xb6, 0x85, 0xd1, 0x56,
	0xd4, 0xe9, 0x94, 0xc0, 0x77, 0x01, 0xd8, 0x13, 0x78, 0xa1, 0x81, 0x79, 0x46, 0x38, 0xea, 0x6c,
	0x76, 0xc2, 0xb0, 0x14, 0xbe, 0x07, 0xc2, 0xad, 0x84, 0x1d, 0xa6, 0x13, 0xfe, 0x13, 0xc2, 0x81,
	0x6d, 0xec, 0x84, 0x51, 0xb8, 0x16, 0xad, 0x97, 0xc4, 0xf7, 0x81, 0xd8, 0x93, 0x78, 0xb1, 0xa9,
	0xe9, 0x8c, 0xdf, 0x43, 0xf8, 0xa6, 0xbb, 0xb5, 0xd7, 0xa2, 0x8d, 0xb0, 0x13, 0x6e, 0x95, 0xc8,
	0x0f, 0x00, 0xd9, 0x13, 0x39, 0x98, 0xe2, 0x74, 0xca, 0xbf, 0x41, 0xf8, 0x1a, 0x17, 0x34, 0x8f,
	0x99, 0x72, 0x49, 0x86, 0x87, 0xc0, 0xeb, 0xfb, 0x82, 0xc6, 0xc5, 0xa1, 0x61, 0xdc, 0x3b, 0xae,
	0x59, 0xd3, 0x9a, 0xf5, 0x19, 0x60, 0xf5, 0x67, 0xdd, 0x39, 0xc3, 0xda, 0xab, 0x59, 0x1f, 0x01,
	0xab, 0x3f, 0xeb, 0x76, 0xc5, 0xfa, 0x26, 0xc2, 0xf3, 0x32, 0xd7, 0x8d, 0x28, 0xf0, 0x2c, 0xb8,
	0x7a, 0xba, 0x5e, 0x95, 0xb9, 0x3e, 0x3c, 0x0b, 0x3b, 0xb9, 0x61, 0x9f, 0x03, 0xd8, 0x16, 0xb0,
	0xe7, 0xee, 0xd8, 0x49, 0x80, 0xfd, 0x22, 0xc0, 0xb6, 0x80, 0xad, 0x23, 0xec, 0x6b, 0x08, 0xcf,
	0x6a, 0x57, 0xbc, 0xd9, 0x01, 0x51, 0xdf, 0xe2, 0x8d, 0x2e, 0xea, 0xa7, 0xd5, 0x80, 0x72, 0x51,
	0x66, 0x6e, 0xc9, 0x97, 0x40, 0xd4, 0xfb, 0x69, 0x35, 0x78, 0x24, 0x5c, 0xd6, 0xb6, 0xc1, 0x5a,
	0xa6, 0xbe, 0x76, 0x81, 0xb5, 0x0d, 0x6b, 0x99, 0xf7, 0xfa, 0x17, 0xc2, 0xc4, 0xad, 0xb3, 0x05,
	0xc7, 0x34, 0x1f, 0x69, 0x5e, 0x47, 0xd7, 0x3d, 0x20, 0xf6, 0x24, 0x5e, 0xb6, 0x0b, 0xfb, 0x9a,
	0xe9, 0x9d, 0x4a, 0xd4, 0xc4, 0x86, 0x33, 0xda, 0xbd, 0x4c, 0xb2, 0x7e, 0xad, 0xfd, 0x65, 0xd0,
	0x6e, 0xad, 0xbd, 0x5d, 0x89, 0x1a, 0xed, 0x7f, 0x23, 0xfc, 0x44, 0x43, 0x3b, 0x17, 0x7d, 0x57,
	0x61, 0xeb, 0x5b, 0xee, 0x2e, 0x70, 0x7b, 0x72, 0xaf, 0xd4, 0xdc, 0x87, 0x35, 0x69, 0x5d, 0x66,
	0xcf, 0x75, 0x15, 0xa0, 0xf7, 0x01, 0xd8, 0xbb, 0xcc, 0x9e, 0xeb, 0x32, 0x3e, 0xff, 0x16, 0xe1,
	0xeb, 0x5c, 0xd0, 0x31, 0xcb, 0x55, 0xe2, 0x8a, 0x95, 0xe4, 0x00, 0x5c, 0x3d, 0x5d, 0xaf, 0x71,
	0xb1, 0x67, 0x20, 0x6d, 0xa5, 0xd2, 0x7e, 0x4d, 0x70, 0x41, 0x87, 0x52, 0xf6, 0x69, 0xef, 0x54,
	0x27, 0x8a, 0x1c, 0x82, 0xac, 0xef, 0xd7, 0x04, 0x17, 0x0f, 0xa5, 0xec, 0x6f, 0x1b, 0x46, 0x5b,
	0xa7, 0xe4, 0x62, 0x6b, 0x2d, 0x0a, 0x5f, 0x2a, 0xeb, 0xeb, 0xe4, 0x79, 0x90, 0xf5, 0xad, 0x53,
	0x96, 0x92, 0xae, 0xba, 0x1e, 0xfc, 0x0d, 0xe1, 0x15, 0x13, 0x0f, 0x8e, 0xb5, 0x0a, 0x3b, 0xe1,
	0x53, 0x34, 0x65, 0x45, 0x15, 0x6f, 0xbf, 0x02, 0xc6, 0x9e, 0xc6, 0x37, 0xb9, 0xd8, 0x2b, 0x41,
	0x77, 0x58, 0x51, 0x46, 0xde, 0x32, 0xeb, 0x68, 0xc3, 0x83, 0xe1, 0x26, 0x5f, 0x05, 0x5f, 0xff,
	0xac, 0xa3, 0x89, 0x0e, 0xc6, 0xd8, 0x76, 0x6b, 0xe2, 0x82, 0xf6, 0x33, 0x39, 0xa6, 0xf2, 0x24,
	0xc9, 0xb2, 0x5c, 0x90, 0x17, 0x40, 0xd6, 0x3f, 0x3a, 0xdc, 0xcb, 0xe4, 0x78, 0xd7, 0x41, 0x56,
	0x8f, 0x34, 0x8b, 0xcb, 0x7a, 0x32, 0xd3, 0xe4, 0x6b, 0x40, 0xeb, 0xff, 0x48, 0x33, 0xb4, 0x4f,
	0x1b, 0xc6, 0xe0, 0x3d, 0x84, 0x97, 0x2a, 0x58, 0x2e, 0x6c, 0x9f, 0x6f, 0x7a, 0x32, 0x62, 0x82,
	0x7c, 0x1d, 0x7c, 0x7d, 0x8b, 0xbf, 0xce, 0xf7, 0x91, 0xd3, 0x7c, 0x7e, 0xc4, 0xc4, 0x85, 0xca,
	0xfd, 0x94, 0xc5, 0xe4, 0x1b, 0xa0, 0xfc, 0xa1, 0x28, 0xdf, 0x4b, 0x59, 0x1c, 0xbc, 0x8f, 0xf0,
	0xf2, 0x59, 0xe5, 0x44, 0xc4, 0x6c, 0x4c, 0xbe, 0x09, 0xcc, 0xbe, 0x45, 0xf6, 0x29, 0xe6, 0xfb,
	0x46, 0x73, 0x2a, 0x18, 0x4b, 0xb3, 0x2d, 0xf9, 0x16, 0xf8, 0xb6, 0x0b, 0xc6, 0xbb, 0xa6, 0xa9,
	0x2e, 0xb3, 0xf3, 0x1e, 0x1d, 0x72, 0x26, 0x34, 0xa1, 0xe0, 0xda, 0xa2, 0xcc, 0xce, 0x7b, 0x0f,
	0x8d, 0x62, 0x75, 0xbf, 0x1a, 0x56, 0xd7, 0xe9, 0x94, 0x7c, 0x1b, 0x5c, 0xfd, 0xef, 0xd7, 0x1d,
	0xde, 0x7b, 0xd6, 0x32, 0x06, 0xaf, 0x23, 0x3c, 0xe7, 0x60, 0xe3, 0x2c, 0x26, 0x0c, 0x50, 0x3d,
	0x51, 0xaf, 0x58, 0xd4, 0x38, 0x8b, 0x83, 0x3f, 0x23, 0x7c, 0xb3, 0x2a, 0xb0, 0xd1, 0x58, 0x8e,
	0x46, 0x5c, 0x71, 0x29, 0x14, 0xe9, 0x81, 0xad, 0xff, 0x7b, 0x82, 0x2d, 0xb4, 0xdd, 0xad, 0x31,
	0xab, 0x2f, 0x35, 0x87, 0xac, 0x4e, 0xd3, 0x9e, 0x1c, 0x91, 0x18, 0x80, 0xfd, 0xbf, 0xd4, 0x2c,
	0xf0, 0xbe, 0x85, 0xb4, 0x79, 0x5d, 0x99, 0xeb, 0x66, 0xf6, 0xb1, 0x0f, 0xb6, 0xbe, 0x79, 0x5d,
	0x99, 0xeb, 0x49, 0xfa, 0xf1, 0xf7, 0x08, 0xdf, 0x90, 0xb9, 0x9e, 0xca, 0x3f, 0x26, 0x60, 0xeb,
	0x3b, 0xb4, 0xa7, 0xa2, 0x2c, 0x13, 0x90, 0x6f, 0x23, 0xbc, 0x60, 0x6e, 0xdc, 0x46, 0x45, 0x42,
	0x91, 0x01, 0xf0, 0xb6, 0xe0, 0x9d, 0xd4, 0x24, 0x54, 0xf0, 0x0f, 0x84, 0x1f, 0xb7, 0xbc, 0x17,
	0x24, 0x78, 0x87, 0xa0, 0xec, 0xa9, 0xbc, 0x64, 0x94, 0xcf, 0x65, 0x78, 0xab, 0xee, 0x64, 0x93,
	0x14, 0xef, 0x11, 0x08, 0xb7, 0xe8, 0x4e, 0x56, 0xe7, 0x78, 0xed, 0xd8, 0xe0, 0x5c, 0xbb, 0x4f,
	0x5f, 0x5b, 0x76, 0xcf, 0x72, 0x41, 0x38, 0xe0, 0x7a, 0x8f, 0x0d, 0xce, 0xb5, 0xf9, 0xfc, 0x3d,
	0x2c, 0x29, 0xeb, 0xb7, 0x87, 0x46, 0xa2, 0xf7, 0x45, 0xd0, 0x6d, 0xf1, 0xf6, 0x30, 0xc9, 0xf4,
	0x4e, 0xd1, 0xba, 0xb4, 0xcd, 0x31, 0xd0, 0xb6, 0xa4, 0x75, 0x79, 0x9b, 0xb7, 0xdc, 0x8b, 0x59,
	0xf9, 0x45, 0xe1, 0x6c, 0x47, 0x60, 0xeb, 0xfb, 0x41, 0x21, 0x73, 0x6d, 0xbf, 0x28, 0x1c, 0x6e,
	0xd9, 0x51, 0xc4, 0xd9, 0xba, 0xb4, 0x58, 0x0a, 0xb6, 0xfe, 0x1d, 0x45, 0x2c, 0xed, 0x54, 0x62,
	0xcc, 0xd1, 0x66, 0xb9, 0xd0, 0x44, 0x80, 0xac, 0x7f, 0x62, 0xcc, 0xca, 0x76, 0x73, 0xe1, 0x66,
	0x61, 0xa8, 0x61, 0x5d, 0xce, 0x51, 0x11, 0x09, 0xb6, 0xbe, 0xdf, 0x12, 0xa5, 0xad, 0x4b, 0x3b,
	0xaa, 0xe0, 0x8f, 0x08, 0x07, 0x35, 0xef, 0x20, 0x63, 0x43, 0x83, 0xa4, 0xc8, 0x18, 0x80, 0x7d,
	0x87, 0x04, 0x97, 0xc0, 0x0f, 0x2a, 0xcb, 0xe9, 0xa8, 0xeb, 0x9e, 0x68, 0x2f, 0x01, 0x6f, 0xcb,
	0xa8, 0x3b, 0xf5, 0x40, 0x1b, 0x1f, 0xeb, 0x6a, 0xba, 0x0b, 0x92, 0x01, 0x6d, 0x8b, 0x9e, 0x8f,
	0x06, 0xd2, 0x0d, 0xff, 0x6d, 0x74, 0x22, 0xdb, 0xec, 0x50, 0x2d, 0xeb, 0x19, 0x2f, 0x14, 0x51,
	0x40, 0xdc, 0xae, 0x13, 0xd9, 0x66, 0xe7, 0x40, 0x56, 0xb3, 0x5e, 0xb8, 0x74, 0x4e, 0xd5, 0x5d,
	0x2f, 0xda, 0xa2, 0x5a, 0xd6, 0x73, 0x5f, 0x28, 0xa2, 0x81, 0xda, 0x37, 0x9d, 0x53, 0xf6, 0xd7,
	0x8b, 0xb6, 0x0e, 0x64, 0x35, 0xff, 0xc5, 0x94, 0x75, 0xd4, 0xd9, 0xa4, 0x5a, 0xd6, 0xb3, 0x60,
	0x28, 0x92, 0x83, 0x75, 0x3b, 0xeb, 0xa8, 0xb3, 0x79, 0x20, 0xab, 0x99, 0x30, 0xdc, 0xb0, 0xa1,
	0xd2, 0xba, 0x13, 0x46, 0x26, 0x84, 0xd4, 0xf3, 0x61, 0x28, 0x72, 0x02, 0xd8, 0xbe, 0x03, 0x59,
	0x1c, 0x76, 0x27, 0x8c, 0x0e, 0x64, 0x3d, 0x27, 0x86, 0xb2, 0x03, 0x59, 0xaa, 0x28, 0xb2, 0x16,
	0x6d, 0x18, 0xee, 0x7a, 0x66, 0x0c, 0x45, 0x5e, 0x06, 0x6e, 0xdf, 0x81, 0x2c, 0x65, 0x1c, 0x59,
	0x8b, 0x36, 0x0e, 0x64, 0x3d, 0x3b, 0x86, 0x7d, 0xab, 0x33, 0x5f, 0xd7, 0xf6, 0xd5, 0xc3, 0xbd,
	0x79, 0x14, 0x60, 0xdc, 0x22, 0x4d, 0x31, 0x81, 0x0c, 0xfe, 0x82, 0xf0, 0x52, 0x55, 0xdf, 0x68,
	0x4c, 0xb5, 0xa5, 0xc8, 0x29, 0x08, 0xfb, 0xf6, 0x3d, 0x2b, 0x8b, 0x1b, 0x93, 0xd9, 0xb6, 0x54,
	0xf0, 0x57, 0x84, 0x97, 0xeb, 0x32, 0x52, 0x63, 0xc6, 0x2d, 0x45, 0x5e, 0x01, 0x67, 0xdf, 0x17,
	0xbc, 0xaa, 0x88, 0x34, 0x99, 0x74, 0x6b, 0x1a, 0xba, 0x39, 0xf1, 0x96, 0x22, 0xdf, 0x01, 0xe8,
	0x96, 0xd0, 0x8d, 0xb9, 0xb7, 0x54, 0xf0, 0x77, 0x84, 0x57, 0x2a, 0xe8, 0xa9, 0xf9, 0xb7, 0x14,
	0xf9, 0x2e, 0x48, 0xb7, 0xac, 0x8b, 0x36, 0xa7, 0xe0, 0x52, 0xc1, 0x3f, 0x9b, 0x35, 0xe8, 0xa9,
	0x69, 0xb8, 0x14, 0xf9, 0x1e, 0x58, 0xfb, 0xbe, 0xdb, 0x55, 0xe1, 0xa3, 0x39, 0x13, 0x97, 0x0a,
	0x7e, 0x85, 0xf0, 0xe5, 0xac, 0xa0, 0xb9, 0xe6, 0x23, 0xf2, 0xaa, 0xc5, 0xfd, 0x39, 0xe0, 0xfe,
	0xbf, 0xb8, 0xe5, 0x1f, 0x0c, 0xe8, 0xce, 0x66, 0xc5, 0xa1, 0xe6, 0x23, 0x8b, 0xaa, 0x4b, 0xd4,
	0xef, 0x03, 0x6a, 0x4b, 0x54, 0xed, 0x50, 0xdf, 0x45, 0x78, 0xd1, 0xa0, 0x4e, 0x0f, 0xa3, 0xff,
	0xc1, 0x0c, 0x44, 0x04, 0xdf, 0xb2, 0xbe, 0x2e, 0xa6, 0x07, 0xd0, 0xbf, 0x83, 0xf0, 0x82, 0x2e,
	0x68, 0x35, 0x13, 0xb8, 0x03, 0xfe, 0x21, 0x00, 0x7b, 0x17, 0x44, 0x74, 0xb1, 0x7b, 0xd2, 0xf0,
	0x7d, 0x13, 0xe1, 0x6b, 0xba, 0x68, 0x94, 0x42, 0x7e, 0x04, 0xb6, 0xde, 0x85, 0x3c, 0x5d, 0x4c,
	0xca, 0x20, 0xbf, 0x44, 0x78, 0x4e, 0x17, 0xd5, 0xb0, 0x81, 0x1f, 0x83, 0xaa, 0x77, 0x17, 0x77,
	0x5d, 0x94, 0x83, 0x06, 0xde, 0x40, 0x18, 0xeb, 0x82, 0xf6, 0x58, 0x9f, 0x0e, 0x62, 0x45, 0x7e,
	0x02, 0xa6, 0x2d, 0x4c, 0xb7, 0x59, 0xff, 0x41, 0xac, 0x7a, 0xb3, 0xf6, 0xaf, 0x4d, 0xad, 0xff,
	0x27, 0x00, 0x00, 0xff, 0xff, 0x60, 0xf4, 0x89, 0xba, 0x88, 0x6a, 0x00, 0x00,
}
