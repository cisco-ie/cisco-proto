/*
Copyright 2019 Cisco Systems

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: wanphy_edm_info.proto

package cisco_ios_xr_wanphy_ui_oper_wanphy_controllers_controller_info

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type WanphyEdmInfo_KEYS struct {
	ControllerName       string   `protobuf:"bytes,1,opt,name=controller_name,json=controllerName,proto3" json:"controller_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WanphyEdmInfo_KEYS) Reset()         { *m = WanphyEdmInfo_KEYS{} }
func (m *WanphyEdmInfo_KEYS) String() string { return proto.CompactTextString(m) }
func (*WanphyEdmInfo_KEYS) ProtoMessage()    {}
func (*WanphyEdmInfo_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_f196e53041c94f81, []int{0}
}

func (m *WanphyEdmInfo_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WanphyEdmInfo_KEYS.Unmarshal(m, b)
}
func (m *WanphyEdmInfo_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WanphyEdmInfo_KEYS.Marshal(b, m, deterministic)
}
func (m *WanphyEdmInfo_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WanphyEdmInfo_KEYS.Merge(m, src)
}
func (m *WanphyEdmInfo_KEYS) XXX_Size() int {
	return xxx_messageInfo_WanphyEdmInfo_KEYS.Size(m)
}
func (m *WanphyEdmInfo_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_WanphyEdmInfo_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_WanphyEdmInfo_KEYS proto.InternalMessageInfo

func (m *WanphyEdmInfo_KEYS) GetControllerName() string {
	if m != nil {
		return m.ControllerName
	}
	return ""
}

type WanphyEdmInfo struct {
	AdminMode            string   `protobuf:"bytes,50,opt,name=admin_mode,json=adminMode,proto3" json:"admin_mode,omitempty"`
	PortState            uint32   `protobuf:"varint,51,opt,name=port_state,json=portState,proto3" json:"port_state,omitempty"`
	SectionLof           uint32   `protobuf:"varint,52,opt,name=section_lof,json=sectionLof,proto3" json:"section_lof,omitempty"`
	SectionLos           uint32   `protobuf:"varint,53,opt,name=section_los,json=sectionLos,proto3" json:"section_los,omitempty"`
	SectionBip           uint64   `protobuf:"varint,54,opt,name=section_bip,json=sectionBip,proto3" json:"section_bip,omitempty"`
	LineAis              uint32   `protobuf:"varint,55,opt,name=line_ais,json=lineAis,proto3" json:"line_ais,omitempty"`
	LineRdi              uint32   `protobuf:"varint,56,opt,name=line_rdi,json=lineRdi,proto3" json:"line_rdi,omitempty"`
	LineFebe             uint64   `protobuf:"varint,57,opt,name=line_febe,json=lineFebe,proto3" json:"line_febe,omitempty"`
	LineBip              uint64   `protobuf:"varint,58,opt,name=line_bip,json=lineBip,proto3" json:"line_bip,omitempty"`
	PathAis              uint32   `protobuf:"varint,59,opt,name=path_ais,json=pathAis,proto3" json:"path_ais,omitempty"`
	PathRdi              uint32   `protobuf:"varint,60,opt,name=path_rdi,json=pathRdi,proto3" json:"path_rdi,omitempty"`
	PathFebe             uint64   `protobuf:"varint,61,opt,name=path_febe,json=pathFebe,proto3" json:"path_febe,omitempty"`
	PathBip              uint64   `protobuf:"varint,62,opt,name=path_bip,json=pathBip,proto3" json:"path_bip,omitempty"`
	PathLop              uint32   `protobuf:"varint,63,opt,name=path_lop,json=pathLop,proto3" json:"path_lop,omitempty"`
	PathNewptr           uint32   `protobuf:"varint,64,opt,name=path_newptr,json=pathNewptr,proto3" json:"path_newptr,omitempty"`
	PathPse              uint32   `protobuf:"varint,65,opt,name=path_pse,json=pathPse,proto3" json:"path_pse,omitempty"`
	PathNse              uint32   `protobuf:"varint,66,opt,name=path_nse,json=pathNse,proto3" json:"path_nse,omitempty"`
	WisAlarmsSer         uint32   `protobuf:"varint,67,opt,name=wis_alarms_ser,json=wisAlarmsSer,proto3" json:"wis_alarms_ser,omitempty"`
	WisAlarmsFelcdp      uint32   `protobuf:"varint,68,opt,name=wis_alarms_felcdp,json=wisAlarmsFelcdp,proto3" json:"wis_alarms_felcdp,omitempty"`
	WisAlarmsFeaisp      uint32   `protobuf:"varint,69,opt,name=wis_alarms_feaisp,json=wisAlarmsFeaisp,proto3" json:"wis_alarms_feaisp,omitempty"`
	WisAlarmsWlos        uint32   `protobuf:"varint,70,opt,name=wis_alarms_wlos,json=wisAlarmsWlos,proto3" json:"wis_alarms_wlos,omitempty"`
	WisAlarmsPlcd        uint32   `protobuf:"varint,71,opt,name=wis_alarms_plcd,json=wisAlarmsPlcd,proto3" json:"wis_alarms_plcd,omitempty"`
	WisAlarmsLfebip      uint64   `protobuf:"varint,72,opt,name=wis_alarms_lfebip,json=wisAlarmsLfebip,proto3" json:"wis_alarms_lfebip,omitempty"`
	WisAlarmsPbec        uint64   `protobuf:"varint,73,opt,name=wis_alarms_pbec,json=wisAlarmsPbec,proto3" json:"wis_alarms_pbec,omitempty"`
	WisAlarmsPlmp        uint32   `protobuf:"varint,74,opt,name=wis_alarms_plmp,json=wisAlarmsPlmp,proto3" json:"wis_alarms_plmp,omitempty"`
	SfBerThreshold       uint32   `protobuf:"varint,75,opt,name=sf_ber_threshold,json=sfBerThreshold,proto3" json:"sf_ber_threshold,omitempty"`
	SdBerThreshold       uint32   `protobuf:"varint,76,opt,name=sd_ber_threshold,json=sdBerThreshold,proto3" json:"sd_ber_threshold,omitempty"`
	SfBerReport          string   `protobuf:"bytes,77,opt,name=sf_ber_report,json=sfBerReport,proto3" json:"sf_ber_report,omitempty"`
	SdBerReport          string   `protobuf:"bytes,78,opt,name=sd_ber_report,json=sdBerReport,proto3" json:"sd_ber_report,omitempty"`
	OperationalMode      string   `protobuf:"bytes,79,opt,name=operational_mode,json=operationalMode,proto3" json:"operational_mode,omitempty"`
	RemoteIp             string   `protobuf:"bytes,80,opt,name=remote_ip,json=remoteIp,proto3" json:"remote_ip,omitempty"`
	RegisterPFebe        uint32   `protobuf:"varint,81,opt,name=register_p_febe,json=registerPFebe,proto3" json:"register_p_febe,omitempty"`
	RegisterLFeBip       uint32   `protobuf:"varint,82,opt,name=register_l_fe_bip,json=registerLFeBip,proto3" json:"register_l_fe_bip,omitempty"`
	RegisterLBip         uint32   `protobuf:"varint,83,opt,name=register_l_bip,json=registerLBip,proto3" json:"register_l_bip,omitempty"`
	RegisterPBec         uint32   `protobuf:"varint,84,opt,name=register_p_bec,json=registerPBec,proto3" json:"register_p_bec,omitempty"`
	RegisterSBip         uint32   `protobuf:"varint,85,opt,name=register_s_bip,json=registerSBip,proto3" json:"register_s_bip,omitempty"`
	RegisterJ1Rx0        uint32   `protobuf:"varint,86,opt,name=register_j1_rx0,json=registerJ1Rx0,proto3" json:"register_j1_rx0,omitempty"`
	RegisterJ1Rx1        uint32   `protobuf:"varint,87,opt,name=register_j1_rx1,json=registerJ1Rx1,proto3" json:"register_j1_rx1,omitempty"`
	RegisterJ1Rx2        uint32   `protobuf:"varint,88,opt,name=register_j1_rx2,json=registerJ1Rx2,proto3" json:"register_j1_rx2,omitempty"`
	RegisterJ1Rx3        uint32   `protobuf:"varint,89,opt,name=register_j1_rx3,json=registerJ1Rx3,proto3" json:"register_j1_rx3,omitempty"`
	RegisterJ1Rx4        uint32   `protobuf:"varint,90,opt,name=register_j1_rx4,json=registerJ1Rx4,proto3" json:"register_j1_rx4,omitempty"`
	RegisterJ1Rx5        uint32   `protobuf:"varint,91,opt,name=register_j1_rx5,json=registerJ1Rx5,proto3" json:"register_j1_rx5,omitempty"`
	RegisterJ1Rx6        uint32   `protobuf:"varint,92,opt,name=register_j1_rx6,json=registerJ1Rx6,proto3" json:"register_j1_rx6,omitempty"`
	RegisterJ1Rx7        uint32   `protobuf:"varint,93,opt,name=register_j1_rx7,json=registerJ1Rx7,proto3" json:"register_j1_rx7,omitempty"`
	WanphyPollTimer      uint32   `protobuf:"varint,94,opt,name=wanphy_poll_timer,json=wanphyPollTimer,proto3" json:"wanphy_poll_timer,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WanphyEdmInfo) Reset()         { *m = WanphyEdmInfo{} }
func (m *WanphyEdmInfo) String() string { return proto.CompactTextString(m) }
func (*WanphyEdmInfo) ProtoMessage()    {}
func (*WanphyEdmInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_f196e53041c94f81, []int{1}
}

func (m *WanphyEdmInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WanphyEdmInfo.Unmarshal(m, b)
}
func (m *WanphyEdmInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WanphyEdmInfo.Marshal(b, m, deterministic)
}
func (m *WanphyEdmInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WanphyEdmInfo.Merge(m, src)
}
func (m *WanphyEdmInfo) XXX_Size() int {
	return xxx_messageInfo_WanphyEdmInfo.Size(m)
}
func (m *WanphyEdmInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_WanphyEdmInfo.DiscardUnknown(m)
}

var xxx_messageInfo_WanphyEdmInfo proto.InternalMessageInfo

func (m *WanphyEdmInfo) GetAdminMode() string {
	if m != nil {
		return m.AdminMode
	}
	return ""
}

func (m *WanphyEdmInfo) GetPortState() uint32 {
	if m != nil {
		return m.PortState
	}
	return 0
}

func (m *WanphyEdmInfo) GetSectionLof() uint32 {
	if m != nil {
		return m.SectionLof
	}
	return 0
}

func (m *WanphyEdmInfo) GetSectionLos() uint32 {
	if m != nil {
		return m.SectionLos
	}
	return 0
}

func (m *WanphyEdmInfo) GetSectionBip() uint64 {
	if m != nil {
		return m.SectionBip
	}
	return 0
}

func (m *WanphyEdmInfo) GetLineAis() uint32 {
	if m != nil {
		return m.LineAis
	}
	return 0
}

func (m *WanphyEdmInfo) GetLineRdi() uint32 {
	if m != nil {
		return m.LineRdi
	}
	return 0
}

func (m *WanphyEdmInfo) GetLineFebe() uint64 {
	if m != nil {
		return m.LineFebe
	}
	return 0
}

func (m *WanphyEdmInfo) GetLineBip() uint64 {
	if m != nil {
		return m.LineBip
	}
	return 0
}

func (m *WanphyEdmInfo) GetPathAis() uint32 {
	if m != nil {
		return m.PathAis
	}
	return 0
}

func (m *WanphyEdmInfo) GetPathRdi() uint32 {
	if m != nil {
		return m.PathRdi
	}
	return 0
}

func (m *WanphyEdmInfo) GetPathFebe() uint64 {
	if m != nil {
		return m.PathFebe
	}
	return 0
}

func (m *WanphyEdmInfo) GetPathBip() uint64 {
	if m != nil {
		return m.PathBip
	}
	return 0
}

func (m *WanphyEdmInfo) GetPathLop() uint32 {
	if m != nil {
		return m.PathLop
	}
	return 0
}

func (m *WanphyEdmInfo) GetPathNewptr() uint32 {
	if m != nil {
		return m.PathNewptr
	}
	return 0
}

func (m *WanphyEdmInfo) GetPathPse() uint32 {
	if m != nil {
		return m.PathPse
	}
	return 0
}

func (m *WanphyEdmInfo) GetPathNse() uint32 {
	if m != nil {
		return m.PathNse
	}
	return 0
}

func (m *WanphyEdmInfo) GetWisAlarmsSer() uint32 {
	if m != nil {
		return m.WisAlarmsSer
	}
	return 0
}

func (m *WanphyEdmInfo) GetWisAlarmsFelcdp() uint32 {
	if m != nil {
		return m.WisAlarmsFelcdp
	}
	return 0
}

func (m *WanphyEdmInfo) GetWisAlarmsFeaisp() uint32 {
	if m != nil {
		return m.WisAlarmsFeaisp
	}
	return 0
}

func (m *WanphyEdmInfo) GetWisAlarmsWlos() uint32 {
	if m != nil {
		return m.WisAlarmsWlos
	}
	return 0
}

func (m *WanphyEdmInfo) GetWisAlarmsPlcd() uint32 {
	if m != nil {
		return m.WisAlarmsPlcd
	}
	return 0
}

func (m *WanphyEdmInfo) GetWisAlarmsLfebip() uint64 {
	if m != nil {
		return m.WisAlarmsLfebip
	}
	return 0
}

func (m *WanphyEdmInfo) GetWisAlarmsPbec() uint64 {
	if m != nil {
		return m.WisAlarmsPbec
	}
	return 0
}

func (m *WanphyEdmInfo) GetWisAlarmsPlmp() uint32 {
	if m != nil {
		return m.WisAlarmsPlmp
	}
	return 0
}

func (m *WanphyEdmInfo) GetSfBerThreshold() uint32 {
	if m != nil {
		return m.SfBerThreshold
	}
	return 0
}

func (m *WanphyEdmInfo) GetSdBerThreshold() uint32 {
	if m != nil {
		return m.SdBerThreshold
	}
	return 0
}

func (m *WanphyEdmInfo) GetSfBerReport() string {
	if m != nil {
		return m.SfBerReport
	}
	return ""
}

func (m *WanphyEdmInfo) GetSdBerReport() string {
	if m != nil {
		return m.SdBerReport
	}
	return ""
}

func (m *WanphyEdmInfo) GetOperationalMode() string {
	if m != nil {
		return m.OperationalMode
	}
	return ""
}

func (m *WanphyEdmInfo) GetRemoteIp() string {
	if m != nil {
		return m.RemoteIp
	}
	return ""
}

func (m *WanphyEdmInfo) GetRegisterPFebe() uint32 {
	if m != nil {
		return m.RegisterPFebe
	}
	return 0
}

func (m *WanphyEdmInfo) GetRegisterLFeBip() uint32 {
	if m != nil {
		return m.RegisterLFeBip
	}
	return 0
}

func (m *WanphyEdmInfo) GetRegisterLBip() uint32 {
	if m != nil {
		return m.RegisterLBip
	}
	return 0
}

func (m *WanphyEdmInfo) GetRegisterPBec() uint32 {
	if m != nil {
		return m.RegisterPBec
	}
	return 0
}

func (m *WanphyEdmInfo) GetRegisterSBip() uint32 {
	if m != nil {
		return m.RegisterSBip
	}
	return 0
}

func (m *WanphyEdmInfo) GetRegisterJ1Rx0() uint32 {
	if m != nil {
		return m.RegisterJ1Rx0
	}
	return 0
}

func (m *WanphyEdmInfo) GetRegisterJ1Rx1() uint32 {
	if m != nil {
		return m.RegisterJ1Rx1
	}
	return 0
}

func (m *WanphyEdmInfo) GetRegisterJ1Rx2() uint32 {
	if m != nil {
		return m.RegisterJ1Rx2
	}
	return 0
}

func (m *WanphyEdmInfo) GetRegisterJ1Rx3() uint32 {
	if m != nil {
		return m.RegisterJ1Rx3
	}
	return 0
}

func (m *WanphyEdmInfo) GetRegisterJ1Rx4() uint32 {
	if m != nil {
		return m.RegisterJ1Rx4
	}
	return 0
}

func (m *WanphyEdmInfo) GetRegisterJ1Rx5() uint32 {
	if m != nil {
		return m.RegisterJ1Rx5
	}
	return 0
}

func (m *WanphyEdmInfo) GetRegisterJ1Rx6() uint32 {
	if m != nil {
		return m.RegisterJ1Rx6
	}
	return 0
}

func (m *WanphyEdmInfo) GetRegisterJ1Rx7() uint32 {
	if m != nil {
		return m.RegisterJ1Rx7
	}
	return 0
}

func (m *WanphyEdmInfo) GetWanphyPollTimer() uint32 {
	if m != nil {
		return m.WanphyPollTimer
	}
	return 0
}

func init() {
	proto.RegisterType((*WanphyEdmInfo_KEYS)(nil), "cisco_ios_xr_wanphy_ui_oper.wanphy.controllers.controller.info.wanphy_edm_info_KEYS")
	proto.RegisterType((*WanphyEdmInfo)(nil), "cisco_ios_xr_wanphy_ui_oper.wanphy.controllers.controller.info.wanphy_edm_info")
}

func init() { proto.RegisterFile("wanphy_edm_info.proto", fileDescriptor_f196e53041c94f81) }

var fileDescriptor_f196e53041c94f81 = []byte{
	// 732 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x64, 0x95, 0x7d, 0x4f, 0xeb, 0x36,
	0x14, 0xc6, 0x55, 0x69, 0xda, 0xa8, 0x81, 0x16, 0xa2, 0x4d, 0xf2, 0x84, 0xa6, 0x21, 0x84, 0xb6,
	0xb2, 0x3f, 0x2a, 0x4a, 0x79, 0xd9, 0x2b, 0x8c, 0x6e, 0x74, 0x03, 0x4a, 0xd7, 0xb5, 0x6c, 0x8c,
	0xbd, 0x59, 0x69, 0x72, 0x72, 0xeb, 0x2b, 0x27, 0xb6, 0xec, 0x5c, 0x95, 0xfb, 0x69, 0xef, 0x57,
	0xb9, 0xf2, 0x49, 0x9a, 0xa4, 0xf1, 0x7f, 0xf8, 0x79, 0x7e, 0xe7, 0x3c, 0xf2, 0xc1, 0xa7, 0x21,
	0x9f, 0x2c, 0xfd, 0x44, 0x2d, 0xde, 0x32, 0x08, 0x63, 0xc6, 0x93, 0x48, 0x76, 0x95, 0x96, 0xa9,
	0xf4, 0x2e, 0x03, 0x6e, 0x02, 0xc9, 0xb8, 0x34, 0xec, 0x45, 0xb3, 0x9c, 0x79, 0xc3, 0x99, 0x54,
	0xa0, 0xbb, 0xd9, 0xb1, 0x1b, 0xc8, 0x24, 0xd5, 0x52, 0x08, 0xd0, 0xa6, 0xf2, 0x77, 0xd7, 0x76,
	0x39, 0xb8, 0x22, 0x1f, 0xd7, 0x1a, 0xb3, 0xfb, 0x9b, 0xe7, 0x99, 0xf7, 0x25, 0x69, 0x97, 0x28,
	0x4b, 0xfc, 0x18, 0x68, 0x63, 0xbf, 0xd1, 0x69, 0x4e, 0x5b, 0xa5, 0x3c, 0xf6, 0x63, 0x38, 0x78,
	0xb7, 0x45, 0xda, 0xb5, 0x0e, 0xde, 0x67, 0x84, 0xf8, 0x61, 0xcc, 0x13, 0x16, 0xcb, 0x10, 0xe8,
	0x09, 0xd6, 0x35, 0x51, 0x79, 0x90, 0x21, 0x58, 0x5b, 0x49, 0x9d, 0x32, 0x93, 0xfa, 0x29, 0xd0,
	0xfe, 0x7e, 0xa3, 0xb3, 0x3d, 0x6d, 0x5a, 0x65, 0x66, 0x05, 0xef, 0x73, 0xb2, 0x69, 0x20, 0x48,
	0xb9, 0x4c, 0x98, 0x90, 0x11, 0x3d, 0x45, 0x9f, 0xe4, 0xd2, 0x48, 0x46, 0xeb, 0x80, 0xa1, 0x67,
	0x35, 0xc0, 0x54, 0x81, 0x39, 0x57, 0xf4, 0x7c, 0xbf, 0xd1, 0xf9, 0xa0, 0x00, 0x06, 0x5c, 0x79,
	0x9f, 0x92, 0x0d, 0xc1, 0x13, 0x60, 0x3e, 0x37, 0xf4, 0x02, 0xcb, 0x3f, 0xb2, 0xe7, 0x6b, 0x6e,
	0x0a, 0x4b, 0x87, 0x9c, 0x7e, 0x5d, 0x5a, 0xd3, 0x90, 0x7b, 0x7b, 0xa4, 0x89, 0x56, 0x04, 0x73,
	0xa0, 0xdf, 0x60, 0x53, 0x64, 0x87, 0x30, 0x87, 0xa2, 0xce, 0x06, 0x7e, 0x8b, 0x1e, 0xd6, 0xe5,
	0x69, 0xca, 0x4f, 0x17, 0x98, 0xf6, 0x5d, 0xd6, 0xd2, 0x9e, 0xf3, 0x34, 0xb4, 0x6c, 0xda, 0xf7,
	0xa5, 0x95, 0xa7, 0xa1, 0x85, 0x69, 0x3f, 0x64, 0x69, 0x56, 0x58, 0xa5, 0xa1, 0x69, 0xd3, 0x2e,
	0xb3, 0x34, 0x7b, 0xae, 0xa6, 0x09, 0xa9, 0xe8, 0x55, 0xd9, 0x72, 0x24, 0x95, 0x9d, 0x0b, 0x5a,
	0x09, 0x2c, 0x55, 0xaa, 0xe9, 0x8f, 0xd9, 0xe0, 0xac, 0x34, 0x46, 0xa5, 0xa8, 0x55, 0x06, 0xe8,
	0x75, 0x59, 0x3b, 0x31, 0x65, 0x62, 0x62, 0x80, 0x0e, 0x4a, 0x6b, 0x6c, 0xc0, 0x3b, 0x24, 0xad,
	0x25, 0x37, 0xcc, 0x17, 0xbe, 0x8e, 0x0d, 0x33, 0xa0, 0xe9, 0x4f, 0x08, 0x6c, 0x2d, 0xb9, 0xb9,
	0x46, 0x71, 0x06, 0xda, 0xfb, 0x8a, 0xec, 0x56, 0xa8, 0x08, 0x44, 0x10, 0x2a, 0xfa, 0x33, 0x82,
	0xed, 0x02, 0x1c, 0xa2, 0xec, 0xb0, 0x3e, 0x37, 0x8a, 0xde, 0x38, 0xac, 0x95, 0xbd, 0x2f, 0x48,
	0xbb, 0xc2, 0x2e, 0xed, 0x8b, 0x18, 0x22, 0xb9, 0x5d, 0x90, 0x4f, 0x42, 0x9a, 0x1a, 0xa7, 0x44,
	0x10, 0xd2, 0x5f, 0x6a, 0xdc, 0x44, 0x04, 0x61, 0x2d, 0x5b, 0x44, 0x60, 0x67, 0xfc, 0x2b, 0xce,
	0xb8, 0xcc, 0x1e, 0xa1, 0x5c, 0xef, 0x39, 0x87, 0x80, 0xde, 0x22, 0x59, 0xe9, 0x39, 0x87, 0xc0,
	0xc9, 0x8e, 0x15, 0xbd, 0x73, 0xb2, 0x63, 0xe5, 0x75, 0xc8, 0x8e, 0x89, 0xd8, 0x1c, 0x34, 0x4b,
	0x17, 0x1a, 0xcc, 0x42, 0x8a, 0x90, 0xde, 0x23, 0xd8, 0x32, 0xd1, 0x00, 0xf4, 0xe3, 0x4a, 0x45,
	0x32, 0xac, 0x91, 0xa3, 0x9c, 0x0c, 0xd7, 0xc8, 0x03, 0xb2, 0x9d, 0xf7, 0xd4, 0x60, 0x97, 0x8c,
	0x3e, 0xe0, 0x3e, 0x6e, 0x62, 0xc3, 0x29, 0x4a, 0xc8, 0x84, 0x55, 0x66, 0x9c, 0x33, 0x61, 0xc9,
	0x1c, 0x91, 0x1d, 0xfb, 0xa3, 0xe2, 0xdb, 0x1d, 0xf2, 0x45, 0xb6, 0xda, 0xbf, 0x21, 0xd6, 0xae,
	0xe8, 0xb8, 0xe0, 0x7b, 0xa4, 0xa9, 0x21, 0x96, 0x29, 0x30, 0xae, 0xe8, 0x04, 0x99, 0x8d, 0x4c,
	0xb8, 0xc5, 0x99, 0x69, 0x78, 0xc5, 0x4d, 0x0a, 0x9a, 0xa9, 0xec, 0x75, 0xff, 0x9e, 0xcd, 0x62,
	0x25, 0x4f, 0xf0, 0x89, 0x1f, 0x91, 0xdd, 0x82, 0x13, 0x2c, 0xca, 0x36, 0x6b, 0x9a, 0x5d, 0x71,
	0x65, 0x8c, 0x86, 0xb8, 0x60, 0x87, 0xa4, 0x55, 0x41, 0x2d, 0x37, 0xcb, 0x1e, 0x60, 0xc1, 0xd5,
	0x29, 0xc5, 0xec, 0xff, 0xea, 0x71, 0x9d, 0x9a, 0x0c, 0x20, 0x58, 0xa3, 0x0c, 0xf6, 0xfa, 0x63,
	0x9d, 0x9a, 0x0d, 0xf8, 0xfa, 0x25, 0x5e, 0xf7, 0x98, 0x7e, 0x39, 0xa6, 0x7f, 0xae, 0x5f, 0xe2,
	0xae, 0x37, 0x7d, 0x39, 0x76, 0xb9, 0x1e, 0x7d, 0x72, 0xb9, 0x9e, 0xcb, 0x9d, 0xd0, 0xbf, 0x5c,
	0xee, 0xc4, 0xe5, 0xfa, 0xf4, 0xd9, 0xe5, 0xfa, 0x2e, 0x77, 0x4a, 0xff, 0x76, 0xb9, 0x53, 0x97,
	0x3b, 0xa3, 0xff, 0xb8, 0xdc, 0x99, 0xcb, 0x9d, 0xd3, 0x7f, 0x5d, 0xee, 0xdc, 0xe5, 0x2e, 0xe8,
	0x7f, 0x2e, 0x77, 0x81, 0x4b, 0x96, 0x7d, 0x34, 0x94, 0x14, 0x82, 0xa5, 0x3c, 0x06, 0x4d, 0xff,
	0xcf, 0x17, 0x1c, 0x8d, 0x89, 0x14, 0xe2, 0xd1, 0xca, 0xf3, 0x0f, 0xf1, 0x4b, 0xd7, 0x7f, 0x1f,
	0x00, 0x00, 0xff, 0xff, 0x3c, 0xdd, 0x49, 0x1e, 0x02, 0x07, 0x00, 0x00,
}
