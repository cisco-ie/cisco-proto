/*
Copyright 2019 Cisco Systems

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: mpls_te_topology_node.proto

package cisco_ios_xr_mpls_te_oper_mpls_te_standby_topology_briefs_topology_brief

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type MplsTeTopologyNode_KEYS struct {
	Protocol             string   `protobuf:"bytes,1,opt,name=protocol,proto3" json:"protocol,omitempty"`
	IgpId                string   `protobuf:"bytes,2,opt,name=igp_id,json=igpId,proto3" json:"igp_id,omitempty"`
	Area                 uint32   `protobuf:"varint,3,opt,name=area,proto3" json:"area,omitempty"`
	TopologyNodeType     string   `protobuf:"bytes,4,opt,name=topology_node_type,json=topologyNodeType,proto3" json:"topology_node_type,omitempty"`
	IgpNodeId            string   `protobuf:"bytes,5,opt,name=igp_node_id,json=igpNodeId,proto3" json:"igp_node_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MplsTeTopologyNode_KEYS) Reset()         { *m = MplsTeTopologyNode_KEYS{} }
func (m *MplsTeTopologyNode_KEYS) String() string { return proto.CompactTextString(m) }
func (*MplsTeTopologyNode_KEYS) ProtoMessage()    {}
func (*MplsTeTopologyNode_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_0620906162f5cd5b, []int{0}
}

func (m *MplsTeTopologyNode_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsTeTopologyNode_KEYS.Unmarshal(m, b)
}
func (m *MplsTeTopologyNode_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsTeTopologyNode_KEYS.Marshal(b, m, deterministic)
}
func (m *MplsTeTopologyNode_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsTeTopologyNode_KEYS.Merge(m, src)
}
func (m *MplsTeTopologyNode_KEYS) XXX_Size() int {
	return xxx_messageInfo_MplsTeTopologyNode_KEYS.Size(m)
}
func (m *MplsTeTopologyNode_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsTeTopologyNode_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_MplsTeTopologyNode_KEYS proto.InternalMessageInfo

func (m *MplsTeTopologyNode_KEYS) GetProtocol() string {
	if m != nil {
		return m.Protocol
	}
	return ""
}

func (m *MplsTeTopologyNode_KEYS) GetIgpId() string {
	if m != nil {
		return m.IgpId
	}
	return ""
}

func (m *MplsTeTopologyNode_KEYS) GetArea() uint32 {
	if m != nil {
		return m.Area
	}
	return 0
}

func (m *MplsTeTopologyNode_KEYS) GetTopologyNodeType() string {
	if m != nil {
		return m.TopologyNodeType
	}
	return ""
}

func (m *MplsTeTopologyNode_KEYS) GetIgpNodeId() string {
	if m != nil {
		return m.IgpNodeId
	}
	return ""
}

type MplsSrlgInfo struct {
	SharedRiskGroup      uint32   `protobuf:"varint,1,opt,name=shared_risk_group,json=sharedRiskGroup,proto3" json:"shared_risk_group,omitempty"`
	SrlgName             string   `protobuf:"bytes,2,opt,name=srlg_name,json=srlgName,proto3" json:"srlg_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MplsSrlgInfo) Reset()         { *m = MplsSrlgInfo{} }
func (m *MplsSrlgInfo) String() string { return proto.CompactTextString(m) }
func (*MplsSrlgInfo) ProtoMessage()    {}
func (*MplsSrlgInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_0620906162f5cd5b, []int{1}
}

func (m *MplsSrlgInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsSrlgInfo.Unmarshal(m, b)
}
func (m *MplsSrlgInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsSrlgInfo.Marshal(b, m, deterministic)
}
func (m *MplsSrlgInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsSrlgInfo.Merge(m, src)
}
func (m *MplsSrlgInfo) XXX_Size() int {
	return xxx_messageInfo_MplsSrlgInfo.Size(m)
}
func (m *MplsSrlgInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsSrlgInfo.DiscardUnknown(m)
}

var xxx_messageInfo_MplsSrlgInfo proto.InternalMessageInfo

func (m *MplsSrlgInfo) GetSharedRiskGroup() uint32 {
	if m != nil {
		return m.SharedRiskGroup
	}
	return 0
}

func (m *MplsSrlgInfo) GetSrlgName() string {
	if m != nil {
		return m.SrlgName
	}
	return ""
}

type MplsTeTopologyLinkBwPrestdDetail struct {
	TopologyLinkPrestandardBandwidthAllocated        []uint32 `protobuf:"varint,1,rep,packed,name=topology_link_prestandard_bandwidth_allocated,json=topologyLinkPrestandardBandwidthAllocated,proto3" json:"topology_link_prestandard_bandwidth_allocated,omitempty"`
	TopologyLinkPrestandardBandwidthAvailableGlobal  []uint32 `protobuf:"varint,2,rep,packed,name=topology_link_prestandard_bandwidth_available_global,json=topologyLinkPrestandardBandwidthAvailableGlobal,proto3" json:"topology_link_prestandard_bandwidth_available_global,omitempty"`
	TopologyLinkPrestandardBandwidthAvailableSubpool []uint32 `protobuf:"varint,3,rep,packed,name=topology_link_prestandard_bandwidth_available_subpool,json=topologyLinkPrestandardBandwidthAvailableSubpool,proto3" json:"topology_link_prestandard_bandwidth_available_subpool,omitempty"`
	XXX_NoUnkeyedLiteral                             struct{} `json:"-"`
	XXX_unrecognized                                 []byte   `json:"-"`
	XXX_sizecache                                    int32    `json:"-"`
}

func (m *MplsTeTopologyLinkBwPrestdDetail) Reset()         { *m = MplsTeTopologyLinkBwPrestdDetail{} }
func (m *MplsTeTopologyLinkBwPrestdDetail) String() string { return proto.CompactTextString(m) }
func (*MplsTeTopologyLinkBwPrestdDetail) ProtoMessage()    {}
func (*MplsTeTopologyLinkBwPrestdDetail) Descriptor() ([]byte, []int) {
	return fileDescriptor_0620906162f5cd5b, []int{2}
}

func (m *MplsTeTopologyLinkBwPrestdDetail) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsTeTopologyLinkBwPrestdDetail.Unmarshal(m, b)
}
func (m *MplsTeTopologyLinkBwPrestdDetail) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsTeTopologyLinkBwPrestdDetail.Marshal(b, m, deterministic)
}
func (m *MplsTeTopologyLinkBwPrestdDetail) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsTeTopologyLinkBwPrestdDetail.Merge(m, src)
}
func (m *MplsTeTopologyLinkBwPrestdDetail) XXX_Size() int {
	return xxx_messageInfo_MplsTeTopologyLinkBwPrestdDetail.Size(m)
}
func (m *MplsTeTopologyLinkBwPrestdDetail) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsTeTopologyLinkBwPrestdDetail.DiscardUnknown(m)
}

var xxx_messageInfo_MplsTeTopologyLinkBwPrestdDetail proto.InternalMessageInfo

func (m *MplsTeTopologyLinkBwPrestdDetail) GetTopologyLinkPrestandardBandwidthAllocated() []uint32 {
	if m != nil {
		return m.TopologyLinkPrestandardBandwidthAllocated
	}
	return nil
}

func (m *MplsTeTopologyLinkBwPrestdDetail) GetTopologyLinkPrestandardBandwidthAvailableGlobal() []uint32 {
	if m != nil {
		return m.TopologyLinkPrestandardBandwidthAvailableGlobal
	}
	return nil
}

func (m *MplsTeTopologyLinkBwPrestdDetail) GetTopologyLinkPrestandardBandwidthAvailableSubpool() []uint32 {
	if m != nil {
		return m.TopologyLinkPrestandardBandwidthAvailableSubpool
	}
	return nil
}

type MplsTeTopologyLinkBwPrestd struct {
	TopologyLinkPrestandardBandwidthPhysical           uint32                            `protobuf:"varint,1,opt,name=topology_link_prestandard_bandwidth_physical,json=topologyLinkPrestandardBandwidthPhysical,proto3" json:"topology_link_prestandard_bandwidth_physical,omitempty"`
	TopologyLinkPrestandardBandwidthReservationGlobal  uint32                            `protobuf:"varint,2,opt,name=topology_link_prestandard_bandwidth_reservation_global,json=topologyLinkPrestandardBandwidthReservationGlobal,proto3" json:"topology_link_prestandard_bandwidth_reservation_global,omitempty"`
	TopologyLinkPrestandardBandwidthReservationSubpool uint32                            `protobuf:"varint,3,opt,name=topology_link_prestandard_bandwidth_reservation_subpool,json=topologyLinkPrestandardBandwidthReservationSubpool,proto3" json:"topology_link_prestandard_bandwidth_reservation_subpool,omitempty"`
	TopologyLinkPrestandardBandwidthDetail             *MplsTeTopologyLinkBwPrestdDetail `protobuf:"bytes,4,opt,name=topology_link_prestandard_bandwidth_detail,json=topologyLinkPrestandardBandwidthDetail,proto3" json:"topology_link_prestandard_bandwidth_detail,omitempty"`
	XXX_NoUnkeyedLiteral                               struct{}                          `json:"-"`
	XXX_unrecognized                                   []byte                            `json:"-"`
	XXX_sizecache                                      int32                             `json:"-"`
}

func (m *MplsTeTopologyLinkBwPrestd) Reset()         { *m = MplsTeTopologyLinkBwPrestd{} }
func (m *MplsTeTopologyLinkBwPrestd) String() string { return proto.CompactTextString(m) }
func (*MplsTeTopologyLinkBwPrestd) ProtoMessage()    {}
func (*MplsTeTopologyLinkBwPrestd) Descriptor() ([]byte, []int) {
	return fileDescriptor_0620906162f5cd5b, []int{3}
}

func (m *MplsTeTopologyLinkBwPrestd) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsTeTopologyLinkBwPrestd.Unmarshal(m, b)
}
func (m *MplsTeTopologyLinkBwPrestd) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsTeTopologyLinkBwPrestd.Marshal(b, m, deterministic)
}
func (m *MplsTeTopologyLinkBwPrestd) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsTeTopologyLinkBwPrestd.Merge(m, src)
}
func (m *MplsTeTopologyLinkBwPrestd) XXX_Size() int {
	return xxx_messageInfo_MplsTeTopologyLinkBwPrestd.Size(m)
}
func (m *MplsTeTopologyLinkBwPrestd) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsTeTopologyLinkBwPrestd.DiscardUnknown(m)
}

var xxx_messageInfo_MplsTeTopologyLinkBwPrestd proto.InternalMessageInfo

func (m *MplsTeTopologyLinkBwPrestd) GetTopologyLinkPrestandardBandwidthPhysical() uint32 {
	if m != nil {
		return m.TopologyLinkPrestandardBandwidthPhysical
	}
	return 0
}

func (m *MplsTeTopologyLinkBwPrestd) GetTopologyLinkPrestandardBandwidthReservationGlobal() uint32 {
	if m != nil {
		return m.TopologyLinkPrestandardBandwidthReservationGlobal
	}
	return 0
}

func (m *MplsTeTopologyLinkBwPrestd) GetTopologyLinkPrestandardBandwidthReservationSubpool() uint32 {
	if m != nil {
		return m.TopologyLinkPrestandardBandwidthReservationSubpool
	}
	return 0
}

func (m *MplsTeTopologyLinkBwPrestd) GetTopologyLinkPrestandardBandwidthDetail() *MplsTeTopologyLinkBwPrestdDetail {
	if m != nil {
		return m.TopologyLinkPrestandardBandwidthDetail
	}
	return nil
}

type MplsTeTopologyLinkBwStdDetail struct {
	TopoLinkStdBwAllocated []uint32 `protobuf:"varint,1,rep,packed,name=topo_link_std_bw_allocated,json=topoLinkStdBwAllocated,proto3" json:"topo_link_std_bw_allocated,omitempty"`
	TopoLinkStdBwAvailable []uint32 `protobuf:"varint,2,rep,packed,name=topo_link_std_bw_available,json=topoLinkStdBwAvailable,proto3" json:"topo_link_std_bw_available,omitempty"`
	XXX_NoUnkeyedLiteral   struct{} `json:"-"`
	XXX_unrecognized       []byte   `json:"-"`
	XXX_sizecache          int32    `json:"-"`
}

func (m *MplsTeTopologyLinkBwStdDetail) Reset()         { *m = MplsTeTopologyLinkBwStdDetail{} }
func (m *MplsTeTopologyLinkBwStdDetail) String() string { return proto.CompactTextString(m) }
func (*MplsTeTopologyLinkBwStdDetail) ProtoMessage()    {}
func (*MplsTeTopologyLinkBwStdDetail) Descriptor() ([]byte, []int) {
	return fileDescriptor_0620906162f5cd5b, []int{4}
}

func (m *MplsTeTopologyLinkBwStdDetail) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsTeTopologyLinkBwStdDetail.Unmarshal(m, b)
}
func (m *MplsTeTopologyLinkBwStdDetail) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsTeTopologyLinkBwStdDetail.Marshal(b, m, deterministic)
}
func (m *MplsTeTopologyLinkBwStdDetail) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsTeTopologyLinkBwStdDetail.Merge(m, src)
}
func (m *MplsTeTopologyLinkBwStdDetail) XXX_Size() int {
	return xxx_messageInfo_MplsTeTopologyLinkBwStdDetail.Size(m)
}
func (m *MplsTeTopologyLinkBwStdDetail) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsTeTopologyLinkBwStdDetail.DiscardUnknown(m)
}

var xxx_messageInfo_MplsTeTopologyLinkBwStdDetail proto.InternalMessageInfo

func (m *MplsTeTopologyLinkBwStdDetail) GetTopoLinkStdBwAllocated() []uint32 {
	if m != nil {
		return m.TopoLinkStdBwAllocated
	}
	return nil
}

func (m *MplsTeTopologyLinkBwStdDetail) GetTopoLinkStdBwAvailable() []uint32 {
	if m != nil {
		return m.TopoLinkStdBwAvailable
	}
	return nil
}

type MplsTeTopologyLinkBwStd struct {
	TopoLinkStdBwPhysical uint32                         `protobuf:"varint,1,opt,name=topo_link_std_bw_physical,json=topoLinkStdBwPhysical,proto3" json:"topo_link_std_bw_physical,omitempty"`
	TopoLinkStdBwResMax   uint32                         `protobuf:"varint,2,opt,name=topo_link_std_bw_res_max,json=topoLinkStdBwResMax,proto3" json:"topo_link_std_bw_res_max,omitempty"`
	TopoLinkStdBwResPool0 uint32                         `protobuf:"varint,3,opt,name=topo_link_std_bw_res_pool0,json=topoLinkStdBwResPool0,proto3" json:"topo_link_std_bw_res_pool0,omitempty"`
	TopoLinkStdBwResPool1 uint32                         `protobuf:"varint,4,opt,name=topo_link_std_bw_res_pool1,json=topoLinkStdBwResPool1,proto3" json:"topo_link_std_bw_res_pool1,omitempty"`
	TopoLinkStdBwDetail   *MplsTeTopologyLinkBwStdDetail `protobuf:"bytes,5,opt,name=topo_link_std_bw_detail,json=topoLinkStdBwDetail,proto3" json:"topo_link_std_bw_detail,omitempty"`
	XXX_NoUnkeyedLiteral  struct{}                       `json:"-"`
	XXX_unrecognized      []byte                         `json:"-"`
	XXX_sizecache         int32                          `json:"-"`
}

func (m *MplsTeTopologyLinkBwStd) Reset()         { *m = MplsTeTopologyLinkBwStd{} }
func (m *MplsTeTopologyLinkBwStd) String() string { return proto.CompactTextString(m) }
func (*MplsTeTopologyLinkBwStd) ProtoMessage()    {}
func (*MplsTeTopologyLinkBwStd) Descriptor() ([]byte, []int) {
	return fileDescriptor_0620906162f5cd5b, []int{5}
}

func (m *MplsTeTopologyLinkBwStd) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsTeTopologyLinkBwStd.Unmarshal(m, b)
}
func (m *MplsTeTopologyLinkBwStd) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsTeTopologyLinkBwStd.Marshal(b, m, deterministic)
}
func (m *MplsTeTopologyLinkBwStd) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsTeTopologyLinkBwStd.Merge(m, src)
}
func (m *MplsTeTopologyLinkBwStd) XXX_Size() int {
	return xxx_messageInfo_MplsTeTopologyLinkBwStd.Size(m)
}
func (m *MplsTeTopologyLinkBwStd) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsTeTopologyLinkBwStd.DiscardUnknown(m)
}

var xxx_messageInfo_MplsTeTopologyLinkBwStd proto.InternalMessageInfo

func (m *MplsTeTopologyLinkBwStd) GetTopoLinkStdBwPhysical() uint32 {
	if m != nil {
		return m.TopoLinkStdBwPhysical
	}
	return 0
}

func (m *MplsTeTopologyLinkBwStd) GetTopoLinkStdBwResMax() uint32 {
	if m != nil {
		return m.TopoLinkStdBwResMax
	}
	return 0
}

func (m *MplsTeTopologyLinkBwStd) GetTopoLinkStdBwResPool0() uint32 {
	if m != nil {
		return m.TopoLinkStdBwResPool0
	}
	return 0
}

func (m *MplsTeTopologyLinkBwStd) GetTopoLinkStdBwResPool1() uint32 {
	if m != nil {
		return m.TopoLinkStdBwResPool1
	}
	return 0
}

func (m *MplsTeTopologyLinkBwStd) GetTopoLinkStdBwDetail() *MplsTeTopologyLinkBwStdDetail {
	if m != nil {
		return m.TopoLinkStdBwDetail
	}
	return nil
}

type MplsTeTopologyLinkBw struct {
	BandwidthMigrationMode           string                      `protobuf:"bytes,1,opt,name=bandwidth_migration_mode,json=bandwidthMigrationMode,proto3" json:"bandwidth_migration_mode,omitempty"`
	TopologyLinkBandwidthPrestandard *MplsTeTopologyLinkBwPrestd `protobuf:"bytes,2,opt,name=topology_link_bandwidth_prestandard,json=topologyLinkBandwidthPrestandard,proto3" json:"topology_link_bandwidth_prestandard,omitempty"`
	TopologyLinkBandwidthStandard    *MplsTeTopologyLinkBwStd    `protobuf:"bytes,3,opt,name=topology_link_bandwidth_standard,json=topologyLinkBandwidthStandard,proto3" json:"topology_link_bandwidth_standard,omitempty"`
	XXX_NoUnkeyedLiteral             struct{}                    `json:"-"`
	XXX_unrecognized                 []byte                      `json:"-"`
	XXX_sizecache                    int32                       `json:"-"`
}

func (m *MplsTeTopologyLinkBw) Reset()         { *m = MplsTeTopologyLinkBw{} }
func (m *MplsTeTopologyLinkBw) String() string { return proto.CompactTextString(m) }
func (*MplsTeTopologyLinkBw) ProtoMessage()    {}
func (*MplsTeTopologyLinkBw) Descriptor() ([]byte, []int) {
	return fileDescriptor_0620906162f5cd5b, []int{6}
}

func (m *MplsTeTopologyLinkBw) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsTeTopologyLinkBw.Unmarshal(m, b)
}
func (m *MplsTeTopologyLinkBw) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsTeTopologyLinkBw.Marshal(b, m, deterministic)
}
func (m *MplsTeTopologyLinkBw) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsTeTopologyLinkBw.Merge(m, src)
}
func (m *MplsTeTopologyLinkBw) XXX_Size() int {
	return xxx_messageInfo_MplsTeTopologyLinkBw.Size(m)
}
func (m *MplsTeTopologyLinkBw) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsTeTopologyLinkBw.DiscardUnknown(m)
}

var xxx_messageInfo_MplsTeTopologyLinkBw proto.InternalMessageInfo

func (m *MplsTeTopologyLinkBw) GetBandwidthMigrationMode() string {
	if m != nil {
		return m.BandwidthMigrationMode
	}
	return ""
}

func (m *MplsTeTopologyLinkBw) GetTopologyLinkBandwidthPrestandard() *MplsTeTopologyLinkBwPrestd {
	if m != nil {
		return m.TopologyLinkBandwidthPrestandard
	}
	return nil
}

func (m *MplsTeTopologyLinkBw) GetTopologyLinkBandwidthStandard() *MplsTeTopologyLinkBwStd {
	if m != nil {
		return m.TopologyLinkBandwidthStandard
	}
	return nil
}

type OduCapabilityFixed struct {
	MaximumOdUs          uint32   `protobuf:"varint,1,opt,name=maximum_od_us,json=maximumOdUs,proto3" json:"maximum_od_us,omitempty"`
	UnreservedOdUs       uint32   `protobuf:"varint,2,opt,name=unreserved_od_us,json=unreservedOdUs,proto3" json:"unreserved_od_us,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OduCapabilityFixed) Reset()         { *m = OduCapabilityFixed{} }
func (m *OduCapabilityFixed) String() string { return proto.CompactTextString(m) }
func (*OduCapabilityFixed) ProtoMessage()    {}
func (*OduCapabilityFixed) Descriptor() ([]byte, []int) {
	return fileDescriptor_0620906162f5cd5b, []int{7}
}

func (m *OduCapabilityFixed) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OduCapabilityFixed.Unmarshal(m, b)
}
func (m *OduCapabilityFixed) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OduCapabilityFixed.Marshal(b, m, deterministic)
}
func (m *OduCapabilityFixed) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OduCapabilityFixed.Merge(m, src)
}
func (m *OduCapabilityFixed) XXX_Size() int {
	return xxx_messageInfo_OduCapabilityFixed.Size(m)
}
func (m *OduCapabilityFixed) XXX_DiscardUnknown() {
	xxx_messageInfo_OduCapabilityFixed.DiscardUnknown(m)
}

var xxx_messageInfo_OduCapabilityFixed proto.InternalMessageInfo

func (m *OduCapabilityFixed) GetMaximumOdUs() uint32 {
	if m != nil {
		return m.MaximumOdUs
	}
	return 0
}

func (m *OduCapabilityFixed) GetUnreservedOdUs() uint32 {
	if m != nil {
		return m.UnreservedOdUs
	}
	return 0
}

type OduCapabilityFlex struct {
	MaxBandwidth         uint32   `protobuf:"varint,1,opt,name=max_bandwidth,json=maxBandwidth,proto3" json:"max_bandwidth,omitempty"`
	UnreservedBandwidth  uint32   `protobuf:"varint,2,opt,name=unreserved_bandwidth,json=unreservedBandwidth,proto3" json:"unreserved_bandwidth,omitempty"`
	MaxLspBandwidth      uint32   `protobuf:"varint,3,opt,name=max_lsp_bandwidth,json=maxLspBandwidth,proto3" json:"max_lsp_bandwidth,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OduCapabilityFlex) Reset()         { *m = OduCapabilityFlex{} }
func (m *OduCapabilityFlex) String() string { return proto.CompactTextString(m) }
func (*OduCapabilityFlex) ProtoMessage()    {}
func (*OduCapabilityFlex) Descriptor() ([]byte, []int) {
	return fileDescriptor_0620906162f5cd5b, []int{8}
}

func (m *OduCapabilityFlex) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OduCapabilityFlex.Unmarshal(m, b)
}
func (m *OduCapabilityFlex) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OduCapabilityFlex.Marshal(b, m, deterministic)
}
func (m *OduCapabilityFlex) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OduCapabilityFlex.Merge(m, src)
}
func (m *OduCapabilityFlex) XXX_Size() int {
	return xxx_messageInfo_OduCapabilityFlex.Size(m)
}
func (m *OduCapabilityFlex) XXX_DiscardUnknown() {
	xxx_messageInfo_OduCapabilityFlex.DiscardUnknown(m)
}

var xxx_messageInfo_OduCapabilityFlex proto.InternalMessageInfo

func (m *OduCapabilityFlex) GetMaxBandwidth() uint32 {
	if m != nil {
		return m.MaxBandwidth
	}
	return 0
}

func (m *OduCapabilityFlex) GetUnreservedBandwidth() uint32 {
	if m != nil {
		return m.UnreservedBandwidth
	}
	return 0
}

func (m *OduCapabilityFlex) GetMaxLspBandwidth() uint32 {
	if m != nil {
		return m.MaxLspBandwidth
	}
	return 0
}

type OduCapBw struct {
	Type                 string              `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Fixed                *OduCapabilityFixed `protobuf:"bytes,2,opt,name=fixed,proto3" json:"fixed,omitempty"`
	Flex                 *OduCapabilityFlex  `protobuf:"bytes,3,opt,name=flex,proto3" json:"flex,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *OduCapBw) Reset()         { *m = OduCapBw{} }
func (m *OduCapBw) String() string { return proto.CompactTextString(m) }
func (*OduCapBw) ProtoMessage()    {}
func (*OduCapBw) Descriptor() ([]byte, []int) {
	return fileDescriptor_0620906162f5cd5b, []int{9}
}

func (m *OduCapBw) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OduCapBw.Unmarshal(m, b)
}
func (m *OduCapBw) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OduCapBw.Marshal(b, m, deterministic)
}
func (m *OduCapBw) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OduCapBw.Merge(m, src)
}
func (m *OduCapBw) XXX_Size() int {
	return xxx_messageInfo_OduCapBw.Size(m)
}
func (m *OduCapBw) XXX_DiscardUnknown() {
	xxx_messageInfo_OduCapBw.DiscardUnknown(m)
}

var xxx_messageInfo_OduCapBw proto.InternalMessageInfo

func (m *OduCapBw) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *OduCapBw) GetFixed() *OduCapabilityFixed {
	if m != nil {
		return m.Fixed
	}
	return nil
}

func (m *OduCapBw) GetFlex() *OduCapabilityFlex {
	if m != nil {
		return m.Flex
	}
	return nil
}

type OduCapability struct {
	SignalType           string    `protobuf:"bytes,1,opt,name=signal_type,json=signalType,proto3" json:"signal_type,omitempty"`
	Stage1               string    `protobuf:"bytes,2,opt,name=stage1,proto3" json:"stage1,omitempty"`
	Stage2               string    `protobuf:"bytes,3,opt,name=stage2,proto3" json:"stage2,omitempty"`
	Stage3               string    `protobuf:"bytes,4,opt,name=stage3,proto3" json:"stage3,omitempty"`
	Stage4               string    `protobuf:"bytes,5,opt,name=stage4,proto3" json:"stage4,omitempty"`
	Terminable           bool      `protobuf:"varint,6,opt,name=terminable,proto3" json:"terminable,omitempty"`
	Switchable           bool      `protobuf:"varint,7,opt,name=switchable,proto3" json:"switchable,omitempty"`
	Tsg1P25              bool      `protobuf:"varint,8,opt,name=tsg1p25,proto3" json:"tsg1p25,omitempty"`
	Tsg2P5               bool      `protobuf:"varint,9,opt,name=tsg2p5,proto3" json:"tsg2p5,omitempty"`
	VcatCapable          bool      `protobuf:"varint,10,opt,name=vcat_capable,json=vcatCapable,proto3" json:"vcat_capable,omitempty"`
	LcasCapable          bool      `protobuf:"varint,11,opt,name=lcas_capable,json=lcasCapable,proto3" json:"lcas_capable,omitempty"`
	BandwidthInfo        *OduCapBw `protobuf:"bytes,12,opt,name=bandwidth_info,json=bandwidthInfo,proto3" json:"bandwidth_info,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *OduCapability) Reset()         { *m = OduCapability{} }
func (m *OduCapability) String() string { return proto.CompactTextString(m) }
func (*OduCapability) ProtoMessage()    {}
func (*OduCapability) Descriptor() ([]byte, []int) {
	return fileDescriptor_0620906162f5cd5b, []int{10}
}

func (m *OduCapability) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OduCapability.Unmarshal(m, b)
}
func (m *OduCapability) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OduCapability.Marshal(b, m, deterministic)
}
func (m *OduCapability) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OduCapability.Merge(m, src)
}
func (m *OduCapability) XXX_Size() int {
	return xxx_messageInfo_OduCapability.Size(m)
}
func (m *OduCapability) XXX_DiscardUnknown() {
	xxx_messageInfo_OduCapability.DiscardUnknown(m)
}

var xxx_messageInfo_OduCapability proto.InternalMessageInfo

func (m *OduCapability) GetSignalType() string {
	if m != nil {
		return m.SignalType
	}
	return ""
}

func (m *OduCapability) GetStage1() string {
	if m != nil {
		return m.Stage1
	}
	return ""
}

func (m *OduCapability) GetStage2() string {
	if m != nil {
		return m.Stage2
	}
	return ""
}

func (m *OduCapability) GetStage3() string {
	if m != nil {
		return m.Stage3
	}
	return ""
}

func (m *OduCapability) GetStage4() string {
	if m != nil {
		return m.Stage4
	}
	return ""
}

func (m *OduCapability) GetTerminable() bool {
	if m != nil {
		return m.Terminable
	}
	return false
}

func (m *OduCapability) GetSwitchable() bool {
	if m != nil {
		return m.Switchable
	}
	return false
}

func (m *OduCapability) GetTsg1P25() bool {
	if m != nil {
		return m.Tsg1P25
	}
	return false
}

func (m *OduCapability) GetTsg2P5() bool {
	if m != nil {
		return m.Tsg2P5
	}
	return false
}

func (m *OduCapability) GetVcatCapable() bool {
	if m != nil {
		return m.VcatCapable
	}
	return false
}

func (m *OduCapability) GetLcasCapable() bool {
	if m != nil {
		return m.LcasCapable
	}
	return false
}

func (m *OduCapability) GetBandwidthInfo() *OduCapBw {
	if m != nil {
		return m.BandwidthInfo
	}
	return nil
}

type OduLinkCapabilities struct {
	MaxLspBandwidth      []uint32         `protobuf:"varint,1,rep,packed,name=max_lsp_bandwidth,json=maxLspBandwidth,proto3" json:"max_lsp_bandwidth,omitempty"`
	OduCapability        []*OduCapability `protobuf:"bytes,2,rep,name=odu_capability,json=oduCapability,proto3" json:"odu_capability,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *OduLinkCapabilities) Reset()         { *m = OduLinkCapabilities{} }
func (m *OduLinkCapabilities) String() string { return proto.CompactTextString(m) }
func (*OduLinkCapabilities) ProtoMessage()    {}
func (*OduLinkCapabilities) Descriptor() ([]byte, []int) {
	return fileDescriptor_0620906162f5cd5b, []int{11}
}

func (m *OduLinkCapabilities) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OduLinkCapabilities.Unmarshal(m, b)
}
func (m *OduLinkCapabilities) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OduLinkCapabilities.Marshal(b, m, deterministic)
}
func (m *OduLinkCapabilities) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OduLinkCapabilities.Merge(m, src)
}
func (m *OduLinkCapabilities) XXX_Size() int {
	return xxx_messageInfo_OduLinkCapabilities.Size(m)
}
func (m *OduLinkCapabilities) XXX_DiscardUnknown() {
	xxx_messageInfo_OduLinkCapabilities.DiscardUnknown(m)
}

var xxx_messageInfo_OduLinkCapabilities proto.InternalMessageInfo

func (m *OduLinkCapabilities) GetMaxLspBandwidth() []uint32 {
	if m != nil {
		return m.MaxLspBandwidth
	}
	return nil
}

func (m *OduLinkCapabilities) GetOduCapability() []*OduCapability {
	if m != nil {
		return m.OduCapability
	}
	return nil
}

type TeSrAdjSid struct {
	AdjacencySid         uint32   `protobuf:"varint,1,opt,name=adjacency_sid,json=adjacencySid,proto3" json:"adjacency_sid,omitempty"`
	LinkType             string   `protobuf:"bytes,2,opt,name=link_type,json=linkType,proto3" json:"link_type,omitempty"`
	LocalAddr            string   `protobuf:"bytes,3,opt,name=local_addr,json=localAddr,proto3" json:"local_addr,omitempty"`
	RemoteAddr           string   `protobuf:"bytes,4,opt,name=remote_addr,json=remoteAddr,proto3" json:"remote_addr,omitempty"`
	NbrNodeIgpid         string   `protobuf:"bytes,5,opt,name=nbr_node_igpid,json=nbrNodeIgpid,proto3" json:"nbr_node_igpid,omitempty"`
	NbrNodeTeRouterId    string   `protobuf:"bytes,6,opt,name=nbr_node_te_router_id,json=nbrNodeTeRouterId,proto3" json:"nbr_node_te_router_id,omitempty"`
	FlagF                bool     `protobuf:"varint,7,opt,name=flag_f,json=flagF,proto3" json:"flag_f,omitempty"`
	FlagB                bool     `protobuf:"varint,8,opt,name=flag_b,json=flagB,proto3" json:"flag_b,omitempty"`
	FlagV                bool     `protobuf:"varint,9,opt,name=flag_v,json=flagV,proto3" json:"flag_v,omitempty"`
	FlagL                bool     `protobuf:"varint,10,opt,name=flag_l,json=flagL,proto3" json:"flag_l,omitempty"`
	FlagS                bool     `protobuf:"varint,11,opt,name=flag_s,json=flagS,proto3" json:"flag_s,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TeSrAdjSid) Reset()         { *m = TeSrAdjSid{} }
func (m *TeSrAdjSid) String() string { return proto.CompactTextString(m) }
func (*TeSrAdjSid) ProtoMessage()    {}
func (*TeSrAdjSid) Descriptor() ([]byte, []int) {
	return fileDescriptor_0620906162f5cd5b, []int{12}
}

func (m *TeSrAdjSid) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TeSrAdjSid.Unmarshal(m, b)
}
func (m *TeSrAdjSid) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TeSrAdjSid.Marshal(b, m, deterministic)
}
func (m *TeSrAdjSid) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TeSrAdjSid.Merge(m, src)
}
func (m *TeSrAdjSid) XXX_Size() int {
	return xxx_messageInfo_TeSrAdjSid.Size(m)
}
func (m *TeSrAdjSid) XXX_DiscardUnknown() {
	xxx_messageInfo_TeSrAdjSid.DiscardUnknown(m)
}

var xxx_messageInfo_TeSrAdjSid proto.InternalMessageInfo

func (m *TeSrAdjSid) GetAdjacencySid() uint32 {
	if m != nil {
		return m.AdjacencySid
	}
	return 0
}

func (m *TeSrAdjSid) GetLinkType() string {
	if m != nil {
		return m.LinkType
	}
	return ""
}

func (m *TeSrAdjSid) GetLocalAddr() string {
	if m != nil {
		return m.LocalAddr
	}
	return ""
}

func (m *TeSrAdjSid) GetRemoteAddr() string {
	if m != nil {
		return m.RemoteAddr
	}
	return ""
}

func (m *TeSrAdjSid) GetNbrNodeIgpid() string {
	if m != nil {
		return m.NbrNodeIgpid
	}
	return ""
}

func (m *TeSrAdjSid) GetNbrNodeTeRouterId() string {
	if m != nil {
		return m.NbrNodeTeRouterId
	}
	return ""
}

func (m *TeSrAdjSid) GetFlagF() bool {
	if m != nil {
		return m.FlagF
	}
	return false
}

func (m *TeSrAdjSid) GetFlagB() bool {
	if m != nil {
		return m.FlagB
	}
	return false
}

func (m *TeSrAdjSid) GetFlagV() bool {
	if m != nil {
		return m.FlagV
	}
	return false
}

func (m *TeSrAdjSid) GetFlagL() bool {
	if m != nil {
		return m.FlagL
	}
	return false
}

func (m *TeSrAdjSid) GetFlagS() bool {
	if m != nil {
		return m.FlagS
	}
	return false
}

type MplsTeTopologyLinkMinMaxDelay struct {
	AnomalousBit         bool     `protobuf:"varint,1,opt,name=anomalous_bit,json=anomalousBit,proto3" json:"anomalous_bit,omitempty"`
	MinimumDelay         uint32   `protobuf:"varint,2,opt,name=minimum_delay,json=minimumDelay,proto3" json:"minimum_delay,omitempty"`
	MaximumDelay         uint32   `protobuf:"varint,3,opt,name=maximum_delay,json=maximumDelay,proto3" json:"maximum_delay,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MplsTeTopologyLinkMinMaxDelay) Reset()         { *m = MplsTeTopologyLinkMinMaxDelay{} }
func (m *MplsTeTopologyLinkMinMaxDelay) String() string { return proto.CompactTextString(m) }
func (*MplsTeTopologyLinkMinMaxDelay) ProtoMessage()    {}
func (*MplsTeTopologyLinkMinMaxDelay) Descriptor() ([]byte, []int) {
	return fileDescriptor_0620906162f5cd5b, []int{13}
}

func (m *MplsTeTopologyLinkMinMaxDelay) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsTeTopologyLinkMinMaxDelay.Unmarshal(m, b)
}
func (m *MplsTeTopologyLinkMinMaxDelay) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsTeTopologyLinkMinMaxDelay.Marshal(b, m, deterministic)
}
func (m *MplsTeTopologyLinkMinMaxDelay) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsTeTopologyLinkMinMaxDelay.Merge(m, src)
}
func (m *MplsTeTopologyLinkMinMaxDelay) XXX_Size() int {
	return xxx_messageInfo_MplsTeTopologyLinkMinMaxDelay.Size(m)
}
func (m *MplsTeTopologyLinkMinMaxDelay) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsTeTopologyLinkMinMaxDelay.DiscardUnknown(m)
}

var xxx_messageInfo_MplsTeTopologyLinkMinMaxDelay proto.InternalMessageInfo

func (m *MplsTeTopologyLinkMinMaxDelay) GetAnomalousBit() bool {
	if m != nil {
		return m.AnomalousBit
	}
	return false
}

func (m *MplsTeTopologyLinkMinMaxDelay) GetMinimumDelay() uint32 {
	if m != nil {
		return m.MinimumDelay
	}
	return 0
}

func (m *MplsTeTopologyLinkMinMaxDelay) GetMaximumDelay() uint32 {
	if m != nil {
		return m.MaximumDelay
	}
	return 0
}

type MplsTeTopologyLinkLoss struct {
	AnomalousBit         bool     `protobuf:"varint,1,opt,name=anomalous_bit,json=anomalousBit,proto3" json:"anomalous_bit,omitempty"`
	LossValue            uint32   `protobuf:"varint,2,opt,name=loss_value,json=lossValue,proto3" json:"loss_value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MplsTeTopologyLinkLoss) Reset()         { *m = MplsTeTopologyLinkLoss{} }
func (m *MplsTeTopologyLinkLoss) String() string { return proto.CompactTextString(m) }
func (*MplsTeTopologyLinkLoss) ProtoMessage()    {}
func (*MplsTeTopologyLinkLoss) Descriptor() ([]byte, []int) {
	return fileDescriptor_0620906162f5cd5b, []int{14}
}

func (m *MplsTeTopologyLinkLoss) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsTeTopologyLinkLoss.Unmarshal(m, b)
}
func (m *MplsTeTopologyLinkLoss) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsTeTopologyLinkLoss.Marshal(b, m, deterministic)
}
func (m *MplsTeTopologyLinkLoss) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsTeTopologyLinkLoss.Merge(m, src)
}
func (m *MplsTeTopologyLinkLoss) XXX_Size() int {
	return xxx_messageInfo_MplsTeTopologyLinkLoss.Size(m)
}
func (m *MplsTeTopologyLinkLoss) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsTeTopologyLinkLoss.DiscardUnknown(m)
}

var xxx_messageInfo_MplsTeTopologyLinkLoss proto.InternalMessageInfo

func (m *MplsTeTopologyLinkLoss) GetAnomalousBit() bool {
	if m != nil {
		return m.AnomalousBit
	}
	return false
}

func (m *MplsTeTopologyLinkLoss) GetLossValue() uint32 {
	if m != nil {
		return m.LossValue
	}
	return 0
}

type MplsTeTopologyLink struct {
	TopologyLinkType                string                         `protobuf:"bytes,1,opt,name=topology_link_type,json=topologyLinkType,proto3" json:"topology_link_type,omitempty"`
	TopologyLinkInterfaceAddress    string                         `protobuf:"bytes,2,opt,name=topology_link_interface_address,json=topologyLinkInterfaceAddress,proto3" json:"topology_link_interface_address,omitempty"`
	TopologyLinkInterfaceId         uint32                         `protobuf:"varint,3,opt,name=topology_link_interface_id,json=topologyLinkInterfaceId,proto3" json:"topology_link_interface_id,omitempty"`
	TopologyLinkNeighborAddress     string                         `protobuf:"bytes,4,opt,name=topology_link_neighbor_address,json=topologyLinkNeighborAddress,proto3" json:"topology_link_neighbor_address,omitempty"`
	TopologyLinkNeighborId          uint32                         `protobuf:"varint,5,opt,name=topology_link_neighbor_id,json=topologyLinkNeighborId,proto3" json:"topology_link_neighbor_id,omitempty"`
	TopologyLinkNeighborSystemId    string                         `protobuf:"bytes,6,opt,name=topology_link_neighbor_system_id,json=topologyLinkNeighborSystemId,proto3" json:"topology_link_neighbor_system_id,omitempty"`
	TopologyLinkNeighborNodeId      uint32                         `protobuf:"varint,7,opt,name=topology_link_neighbor_node_id,json=topologyLinkNeighborNodeId,proto3" json:"topology_link_neighbor_node_id,omitempty"`
	TopologyLinkNeighborGeneration  uint32                         `protobuf:"varint,8,opt,name=topology_link_neighbor_generation,json=topologyLinkNeighborGeneration,proto3" json:"topology_link_neighbor_generation,omitempty"`
	TopologyLinkFragmentId          uint32                         `protobuf:"varint,9,opt,name=topology_link_fragment_id,json=topologyLinkFragmentId,proto3" json:"topology_link_fragment_id,omitempty"`
	TopologyLinkTeMetric            uint32                         `protobuf:"varint,10,opt,name=topology_link_te_metric,json=topologyLinkTeMetric,proto3" json:"topology_link_te_metric,omitempty"`
	TopologyLinkIgpMetric           uint32                         `protobuf:"varint,11,opt,name=topology_link_igp_metric,json=topologyLinkIgpMetric,proto3" json:"topology_link_igp_metric,omitempty"`
	TopologyLinkUniDelay            uint32                         `protobuf:"varint,12,opt,name=topology_link_uni_delay,json=topologyLinkUniDelay,proto3" json:"topology_link_uni_delay,omitempty"`
	TopologyLinkAffinityBits        uint32                         `protobuf:"varint,13,opt,name=topology_link_affinity_bits,json=topologyLinkAffinityBits,proto3" json:"topology_link_affinity_bits,omitempty"`
	TopologyLinkExtendedAffinityBit []uint32                       `protobuf:"varint,14,rep,packed,name=topology_link_extended_affinity_bit,json=topologyLinkExtendedAffinityBit,proto3" json:"topology_link_extended_affinity_bit,omitempty"`
	TopologyLinkSwitchingCapability uint32                         `protobuf:"varint,15,opt,name=topology_link_switching_capability,json=topologyLinkSwitchingCapability,proto3" json:"topology_link_switching_capability,omitempty"`
	TopologyLinkEncoding            uint32                         `protobuf:"varint,16,opt,name=topology_link_encoding,json=topologyLinkEncoding,proto3" json:"topology_link_encoding,omitempty"`
	SharedRiskLinkGroup             []*MplsSrlgInfo                `protobuf:"bytes,17,rep,name=shared_risk_link_group,json=sharedRiskLinkGroup,proto3" json:"shared_risk_link_group,omitempty"`
	TopologyLinkBandwidthModel      string                         `protobuf:"bytes,18,opt,name=topology_link_bandwidth_model,json=topologyLinkBandwidthModel,proto3" json:"topology_link_bandwidth_model,omitempty"`
	TopologyLinkBandwidth           *MplsTeTopologyLinkBw          `protobuf:"bytes,19,opt,name=topology_link_bandwidth,json=topologyLinkBandwidth,proto3" json:"topology_link_bandwidth,omitempty"`
	OduLinkCapabilities             *OduLinkCapabilities           `protobuf:"bytes,20,opt,name=odu_link_capabilities,json=oduLinkCapabilities,proto3" json:"odu_link_capabilities,omitempty"`
	AdjacencySid                    []*TeSrAdjSid                  `protobuf:"bytes,21,rep,name=adjacency_sid,json=adjacencySid,proto3" json:"adjacency_sid,omitempty"`
	MinMaxDelay                     *MplsTeTopologyLinkMinMaxDelay `protobuf:"bytes,22,opt,name=min_max_delay,json=minMaxDelay,proto3" json:"min_max_delay,omitempty"`
	DelayVariation                  uint32                         `protobuf:"varint,23,opt,name=delay_variation,json=delayVariation,proto3" json:"delay_variation,omitempty"`
	Loss                            *MplsTeTopologyLinkLoss        `protobuf:"bytes,24,opt,name=loss,proto3" json:"loss,omitempty"`
	ResidualBandwidth               uint32                         `protobuf:"varint,25,opt,name=residual_bandwidth,json=residualBandwidth,proto3" json:"residual_bandwidth,omitempty"`
	AvailableBandwidth              uint32                         `protobuf:"varint,26,opt,name=available_bandwidth,json=availableBandwidth,proto3" json:"available_bandwidth,omitempty"`
	UtilizedBandwidth               uint32                         `protobuf:"varint,27,opt,name=utilized_bandwidth,json=utilizedBandwidth,proto3" json:"utilized_bandwidth,omitempty"`
	XXX_NoUnkeyedLiteral            struct{}                       `json:"-"`
	XXX_unrecognized                []byte                         `json:"-"`
	XXX_sizecache                   int32                          `json:"-"`
}

func (m *MplsTeTopologyLink) Reset()         { *m = MplsTeTopologyLink{} }
func (m *MplsTeTopologyLink) String() string { return proto.CompactTextString(m) }
func (*MplsTeTopologyLink) ProtoMessage()    {}
func (*MplsTeTopologyLink) Descriptor() ([]byte, []int) {
	return fileDescriptor_0620906162f5cd5b, []int{15}
}

func (m *MplsTeTopologyLink) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsTeTopologyLink.Unmarshal(m, b)
}
func (m *MplsTeTopologyLink) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsTeTopologyLink.Marshal(b, m, deterministic)
}
func (m *MplsTeTopologyLink) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsTeTopologyLink.Merge(m, src)
}
func (m *MplsTeTopologyLink) XXX_Size() int {
	return xxx_messageInfo_MplsTeTopologyLink.Size(m)
}
func (m *MplsTeTopologyLink) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsTeTopologyLink.DiscardUnknown(m)
}

var xxx_messageInfo_MplsTeTopologyLink proto.InternalMessageInfo

func (m *MplsTeTopologyLink) GetTopologyLinkType() string {
	if m != nil {
		return m.TopologyLinkType
	}
	return ""
}

func (m *MplsTeTopologyLink) GetTopologyLinkInterfaceAddress() string {
	if m != nil {
		return m.TopologyLinkInterfaceAddress
	}
	return ""
}

func (m *MplsTeTopologyLink) GetTopologyLinkInterfaceId() uint32 {
	if m != nil {
		return m.TopologyLinkInterfaceId
	}
	return 0
}

func (m *MplsTeTopologyLink) GetTopologyLinkNeighborAddress() string {
	if m != nil {
		return m.TopologyLinkNeighborAddress
	}
	return ""
}

func (m *MplsTeTopologyLink) GetTopologyLinkNeighborId() uint32 {
	if m != nil {
		return m.TopologyLinkNeighborId
	}
	return 0
}

func (m *MplsTeTopologyLink) GetTopologyLinkNeighborSystemId() string {
	if m != nil {
		return m.TopologyLinkNeighborSystemId
	}
	return ""
}

func (m *MplsTeTopologyLink) GetTopologyLinkNeighborNodeId() uint32 {
	if m != nil {
		return m.TopologyLinkNeighborNodeId
	}
	return 0
}

func (m *MplsTeTopologyLink) GetTopologyLinkNeighborGeneration() uint32 {
	if m != nil {
		return m.TopologyLinkNeighborGeneration
	}
	return 0
}

func (m *MplsTeTopologyLink) GetTopologyLinkFragmentId() uint32 {
	if m != nil {
		return m.TopologyLinkFragmentId
	}
	return 0
}

func (m *MplsTeTopologyLink) GetTopologyLinkTeMetric() uint32 {
	if m != nil {
		return m.TopologyLinkTeMetric
	}
	return 0
}

func (m *MplsTeTopologyLink) GetTopologyLinkIgpMetric() uint32 {
	if m != nil {
		return m.TopologyLinkIgpMetric
	}
	return 0
}

func (m *MplsTeTopologyLink) GetTopologyLinkUniDelay() uint32 {
	if m != nil {
		return m.TopologyLinkUniDelay
	}
	return 0
}

func (m *MplsTeTopologyLink) GetTopologyLinkAffinityBits() uint32 {
	if m != nil {
		return m.TopologyLinkAffinityBits
	}
	return 0
}

func (m *MplsTeTopologyLink) GetTopologyLinkExtendedAffinityBit() []uint32 {
	if m != nil {
		return m.TopologyLinkExtendedAffinityBit
	}
	return nil
}

func (m *MplsTeTopologyLink) GetTopologyLinkSwitchingCapability() uint32 {
	if m != nil {
		return m.TopologyLinkSwitchingCapability
	}
	return 0
}

func (m *MplsTeTopologyLink) GetTopologyLinkEncoding() uint32 {
	if m != nil {
		return m.TopologyLinkEncoding
	}
	return 0
}

func (m *MplsTeTopologyLink) GetSharedRiskLinkGroup() []*MplsSrlgInfo {
	if m != nil {
		return m.SharedRiskLinkGroup
	}
	return nil
}

func (m *MplsTeTopologyLink) GetTopologyLinkBandwidthModel() string {
	if m != nil {
		return m.TopologyLinkBandwidthModel
	}
	return ""
}

func (m *MplsTeTopologyLink) GetTopologyLinkBandwidth() *MplsTeTopologyLinkBw {
	if m != nil {
		return m.TopologyLinkBandwidth
	}
	return nil
}

func (m *MplsTeTopologyLink) GetOduLinkCapabilities() *OduLinkCapabilities {
	if m != nil {
		return m.OduLinkCapabilities
	}
	return nil
}

func (m *MplsTeTopologyLink) GetAdjacencySid() []*TeSrAdjSid {
	if m != nil {
		return m.AdjacencySid
	}
	return nil
}

func (m *MplsTeTopologyLink) GetMinMaxDelay() *MplsTeTopologyLinkMinMaxDelay {
	if m != nil {
		return m.MinMaxDelay
	}
	return nil
}

func (m *MplsTeTopologyLink) GetDelayVariation() uint32 {
	if m != nil {
		return m.DelayVariation
	}
	return 0
}

func (m *MplsTeTopologyLink) GetLoss() *MplsTeTopologyLinkLoss {
	if m != nil {
		return m.Loss
	}
	return nil
}

func (m *MplsTeTopologyLink) GetResidualBandwidth() uint32 {
	if m != nil {
		return m.ResidualBandwidth
	}
	return 0
}

func (m *MplsTeTopologyLink) GetAvailableBandwidth() uint32 {
	if m != nil {
		return m.AvailableBandwidth
	}
	return 0
}

func (m *MplsTeTopologyLink) GetUtilizedBandwidth() uint32 {
	if m != nil {
		return m.UtilizedBandwidth
	}
	return 0
}

type TeSrNodeInfo struct {
	SegmentId                   uint32   `protobuf:"varint,1,opt,name=segment_id,json=segmentId,proto3" json:"segment_id,omitempty"`
	SegmentIdLocalAbsoluteValue uint32   `protobuf:"varint,2,opt,name=segment_id_local_absolute_value,json=segmentIdLocalAbsoluteValue,proto3" json:"segment_id_local_absolute_value,omitempty"`
	SrgbStart                   uint32   `protobuf:"varint,3,opt,name=srgb_start,json=srgbStart,proto3" json:"srgb_start,omitempty"`
	SrgbSize                    uint32   `protobuf:"varint,4,opt,name=srgb_size,json=srgbSize,proto3" json:"srgb_size,omitempty"`
	XXX_NoUnkeyedLiteral        struct{} `json:"-"`
	XXX_unrecognized            []byte   `json:"-"`
	XXX_sizecache               int32    `json:"-"`
}

func (m *TeSrNodeInfo) Reset()         { *m = TeSrNodeInfo{} }
func (m *TeSrNodeInfo) String() string { return proto.CompactTextString(m) }
func (*TeSrNodeInfo) ProtoMessage()    {}
func (*TeSrNodeInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_0620906162f5cd5b, []int{16}
}

func (m *TeSrNodeInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TeSrNodeInfo.Unmarshal(m, b)
}
func (m *TeSrNodeInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TeSrNodeInfo.Marshal(b, m, deterministic)
}
func (m *TeSrNodeInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TeSrNodeInfo.Merge(m, src)
}
func (m *TeSrNodeInfo) XXX_Size() int {
	return xxx_messageInfo_TeSrNodeInfo.Size(m)
}
func (m *TeSrNodeInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_TeSrNodeInfo.DiscardUnknown(m)
}

var xxx_messageInfo_TeSrNodeInfo proto.InternalMessageInfo

func (m *TeSrNodeInfo) GetSegmentId() uint32 {
	if m != nil {
		return m.SegmentId
	}
	return 0
}

func (m *TeSrNodeInfo) GetSegmentIdLocalAbsoluteValue() uint32 {
	if m != nil {
		return m.SegmentIdLocalAbsoluteValue
	}
	return 0
}

func (m *TeSrNodeInfo) GetSrgbStart() uint32 {
	if m != nil {
		return m.SrgbStart
	}
	return 0
}

func (m *TeSrNodeInfo) GetSrgbSize() uint32 {
	if m != nil {
		return m.SrgbSize
	}
	return 0
}

type MplsTeTopologyNode struct {
	TopologyNodeTeRouterId string                `protobuf:"bytes,50,opt,name=topology_node_te_router_id,json=topologyNodeTeRouterId,proto3" json:"topology_node_te_router_id,omitempty"`
	TopologyNodeOverloaded bool                  `protobuf:"varint,51,opt,name=topology_node_overloaded,json=topologyNodeOverloaded,proto3" json:"topology_node_overloaded,omitempty"`
	TopologyNodeLink       []*MplsTeTopologyLink `protobuf:"bytes,52,rep,name=topology_node_link,json=topologyNodeLink,proto3" json:"topology_node_link,omitempty"`
	TopologyNodeSidAndSrbg *TeSrNodeInfo         `protobuf:"bytes,53,opt,name=topology_node_sid_and_srbg,json=topologyNodeSidAndSrbg,proto3" json:"topology_node_sid_and_srbg,omitempty"`
	XXX_NoUnkeyedLiteral   struct{}              `json:"-"`
	XXX_unrecognized       []byte                `json:"-"`
	XXX_sizecache          int32                 `json:"-"`
}

func (m *MplsTeTopologyNode) Reset()         { *m = MplsTeTopologyNode{} }
func (m *MplsTeTopologyNode) String() string { return proto.CompactTextString(m) }
func (*MplsTeTopologyNode) ProtoMessage()    {}
func (*MplsTeTopologyNode) Descriptor() ([]byte, []int) {
	return fileDescriptor_0620906162f5cd5b, []int{17}
}

func (m *MplsTeTopologyNode) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsTeTopologyNode.Unmarshal(m, b)
}
func (m *MplsTeTopologyNode) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsTeTopologyNode.Marshal(b, m, deterministic)
}
func (m *MplsTeTopologyNode) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsTeTopologyNode.Merge(m, src)
}
func (m *MplsTeTopologyNode) XXX_Size() int {
	return xxx_messageInfo_MplsTeTopologyNode.Size(m)
}
func (m *MplsTeTopologyNode) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsTeTopologyNode.DiscardUnknown(m)
}

var xxx_messageInfo_MplsTeTopologyNode proto.InternalMessageInfo

func (m *MplsTeTopologyNode) GetTopologyNodeTeRouterId() string {
	if m != nil {
		return m.TopologyNodeTeRouterId
	}
	return ""
}

func (m *MplsTeTopologyNode) GetTopologyNodeOverloaded() bool {
	if m != nil {
		return m.TopologyNodeOverloaded
	}
	return false
}

func (m *MplsTeTopologyNode) GetTopologyNodeLink() []*MplsTeTopologyLink {
	if m != nil {
		return m.TopologyNodeLink
	}
	return nil
}

func (m *MplsTeTopologyNode) GetTopologyNodeSidAndSrbg() *TeSrNodeInfo {
	if m != nil {
		return m.TopologyNodeSidAndSrbg
	}
	return nil
}

func init() {
	proto.RegisterType((*MplsTeTopologyNode_KEYS)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te_standby.topology_briefs.topology_brief.mpls_te_topology_node_KEYS")
	proto.RegisterType((*MplsSrlgInfo)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te_standby.topology_briefs.topology_brief.mpls_srlg_info")
	proto.RegisterType((*MplsTeTopologyLinkBwPrestdDetail)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te_standby.topology_briefs.topology_brief.mpls_te_topology_link_bw_prestd_detail")
	proto.RegisterType((*MplsTeTopologyLinkBwPrestd)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te_standby.topology_briefs.topology_brief.mpls_te_topology_link_bw_prestd")
	proto.RegisterType((*MplsTeTopologyLinkBwStdDetail)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te_standby.topology_briefs.topology_brief.mpls_te_topology_link_bw_std_detail")
	proto.RegisterType((*MplsTeTopologyLinkBwStd)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te_standby.topology_briefs.topology_brief.mpls_te_topology_link_bw_std")
	proto.RegisterType((*MplsTeTopologyLinkBw)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te_standby.topology_briefs.topology_brief.mpls_te_topology_link_bw")
	proto.RegisterType((*OduCapabilityFixed)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te_standby.topology_briefs.topology_brief.odu_capability_fixed")
	proto.RegisterType((*OduCapabilityFlex)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te_standby.topology_briefs.topology_brief.odu_capability_flex")
	proto.RegisterType((*OduCapBw)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te_standby.topology_briefs.topology_brief.odu_cap_bw")
	proto.RegisterType((*OduCapability)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te_standby.topology_briefs.topology_brief.odu_capability")
	proto.RegisterType((*OduLinkCapabilities)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te_standby.topology_briefs.topology_brief.odu_link_capabilities")
	proto.RegisterType((*TeSrAdjSid)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te_standby.topology_briefs.topology_brief.te_sr_adj_sid")
	proto.RegisterType((*MplsTeTopologyLinkMinMaxDelay)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te_standby.topology_briefs.topology_brief.mpls_te_topology_link_min_max_delay")
	proto.RegisterType((*MplsTeTopologyLinkLoss)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te_standby.topology_briefs.topology_brief.mpls_te_topology_link_loss")
	proto.RegisterType((*MplsTeTopologyLink)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te_standby.topology_briefs.topology_brief.mpls_te_topology_link")
	proto.RegisterType((*TeSrNodeInfo)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te_standby.topology_briefs.topology_brief.te_sr_node_info")
	proto.RegisterType((*MplsTeTopologyNode)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te_standby.topology_briefs.topology_brief.mpls_te_topology_node")
}

func init() { proto.RegisterFile("mpls_te_topology_node.proto", fileDescriptor_0620906162f5cd5b) }

var fileDescriptor_0620906162f5cd5b = []byte{
	// 2049 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x59, 0xcb, 0x6f, 0x1c, 0x49,
	0x19, 0x57, 0xfb, 0x15, 0xbb, 0xc6, 0x63, 0xc7, 0xe5, 0xd8, 0xe9, 0xb5, 0x93, 0xd8, 0x3b, 0x41,
	0x8b, 0x89, 0x36, 0xde, 0xd8, 0x89, 0xd9, 0x2c, 0x88, 0x83, 0x9d, 0x17, 0xa3, 0xb5, 0xb3, 0x51,
	0x4f, 0x36, 0x90, 0x03, 0x5b, 0x5b, 0x3d, 0x55, 0xd3, 0xae, 0x4d, 0xbf, 0xb6, 0xab, 0xc7, 0x1e,
	0x07, 0x24, 0xce, 0x1c, 0x38, 0x20, 0xe0, 0x00, 0x12, 0x27, 0x8e, 0x1c, 0x10, 0x48, 0x48, 0x7b,
	0x45, 0x42, 0x9c, 0xf8, 0x13, 0xf6, 0x2f, 0xe0, 0xaf, 0x58, 0xd5, 0x57, 0xd5, 0xaf, 0x79, 0xc4,
	0x8e, 0x64, 0xe7, 0x36, 0xf5, 0xbd, 0xe7, 0xab, 0xdf, 0x57, 0xf5, 0x7d, 0xd5, 0x68, 0x35, 0x88,
	0x7d, 0x49, 0x52, 0x4e, 0xd2, 0x28, 0x8e, 0xfc, 0xc8, 0x3b, 0x21, 0x61, 0xc4, 0xf8, 0x66, 0x9c,
	0x44, 0x69, 0x84, 0x7f, 0xda, 0x16, 0xb2, 0x1d, 0x11, 0x11, 0x49, 0xd2, 0x4b, 0x48, 0x26, 0x19,
	0xc5, 0x3c, 0xd9, 0xcc, 0x16, 0x32, 0xa5, 0x21, 0x73, 0x4f, 0x36, 0x73, 0x75, 0x37, 0x11, 0xbc,
	0x23, 0xfb, 0xd6, 0x8d, 0x7f, 0x58, 0x68, 0x65, 0xa8, 0x27, 0xf2, 0xe9, 0xa3, 0x97, 0x2d, 0xbc,
	0x82, 0xa6, 0xc1, 0x63, 0x3b, 0xf2, 0x6d, 0x6b, 0xdd, 0xda, 0x98, 0x71, 0xf2, 0x35, 0x5e, 0x42,
	0x53, 0xc2, 0x8b, 0x89, 0x60, 0xf6, 0x18, 0x70, 0x26, 0x85, 0x17, 0x37, 0x19, 0xc6, 0x68, 0x82,
	0x26, 0x9c, 0xda, 0xe3, 0xeb, 0xd6, 0x46, 0xdd, 0x81, 0xdf, 0xf8, 0x43, 0x84, 0xab, 0xc6, 0xd3,
	0x93, 0x98, 0xdb, 0x13, 0xa0, 0x76, 0x39, 0xe3, 0x3c, 0x8d, 0x18, 0x7f, 0x7e, 0x12, 0x73, 0x7c,
	0x03, 0xd5, 0x94, 0x61, 0x10, 0x14, 0xcc, 0x9e, 0x04, 0xb1, 0x19, 0xe1, 0xc5, 0x4a, 0xa2, 0xc9,
	0x1a, 0x2f, 0xd1, 0x1c, 0x84, 0x2c, 0x13, 0xdf, 0x23, 0x22, 0xec, 0x44, 0xf8, 0x16, 0x5a, 0x90,
	0x87, 0x34, 0xe1, 0x8c, 0x24, 0x42, 0xbe, 0x22, 0x5e, 0x12, 0x75, 0x63, 0x88, 0xb7, 0xee, 0xcc,
	0x6b, 0x86, 0x23, 0xe4, 0xab, 0x27, 0x8a, 0x8c, 0x57, 0xd1, 0x0c, 0x28, 0x86, 0x34, 0xe0, 0x26,
	0xf2, 0x69, 0x45, 0x78, 0x4a, 0x03, 0xde, 0xf8, 0xff, 0x18, 0xfa, 0x60, 0x20, 0x1d, 0xbe, 0x08,
	0x5f, 0x11, 0xf7, 0x98, 0xc4, 0x09, 0x97, 0x29, 0x23, 0x8c, 0xa7, 0x54, 0xf8, 0xf8, 0x4b, 0x74,
	0xbb, 0x2a, 0x01, 0x6c, 0x1a, 0x32, 0x9a, 0x30, 0xe2, 0xd2, 0x90, 0x1d, 0x0b, 0x96, 0x1e, 0x12,
	0xea, 0xfb, 0x51, 0x9b, 0xa6, 0x9c, 0xd9, 0xd6, 0xfa, 0xf8, 0x46, 0xdd, 0xf9, 0x41, 0xa6, 0xb4,
	0x2f, 0xc2, 0x57, 0xcf, 0x0a, 0x95, 0xbd, 0x4c, 0x63, 0x37, 0x53, 0xc0, 0x01, 0xba, 0x77, 0x26,
	0x0f, 0x47, 0x54, 0xf8, 0xd4, 0xf5, 0x39, 0xf1, 0xfc, 0xc8, 0xa5, 0xbe, 0x3d, 0x06, 0x8e, 0x3e,
	0x3a, 0xd5, 0x51, 0xa6, 0xf7, 0x04, 0xd4, 0x70, 0x84, 0x76, 0xde, 0xce, 0x9d, 0xec, 0xba, 0x71,
	0x14, 0xf9, 0xf6, 0x38, 0xf8, 0xbb, 0x73, 0x66, 0x7f, 0x2d, 0xad, 0xd7, 0xf8, 0x66, 0x02, 0xad,
	0x9d, 0x92, 0x6c, 0xfc, 0x05, 0xfa, 0xf0, 0x2c, 0x41, 0xc5, 0x87, 0x27, 0x52, 0xb4, 0xa9, 0x6f,
	0x36, 0x7d, 0xe3, 0xb4, 0x58, 0x9e, 0x19, 0x79, 0xfc, 0x35, 0xfa, 0xe1, 0x59, 0xec, 0x27, 0x5c,
	0xf2, 0xe4, 0x88, 0xa6, 0x22, 0x0a, 0x8b, 0x2c, 0x2b, 0x4f, 0x5b, 0xa7, 0x79, 0x72, 0x0a, 0x4d,
	0x93, 0x67, 0x89, 0x3e, 0x7e, 0x5b, 0x97, 0x45, 0xa6, 0x95, 0xcf, 0xed, 0xb7, 0xf0, 0x69, 0x72,
	0x8d, 0xff, 0x67, 0xa1, 0x5b, 0x67, 0xf1, 0xaa, 0xc1, 0x0d, 0xa5, 0x59, 0xdb, 0x8e, 0x37, 0xcf,
	0xeb, 0x9c, 0xd9, 0x3c, 0x5b, 0x51, 0x39, 0x1f, 0x9c, 0xf6, 0xd7, 0x1e, 0x82, 0x5c, 0xe3, 0x2f,
	0x16, 0xba, 0x39, 0xd2, 0x64, 0xa9, 0x48, 0x7f, 0x84, 0x56, 0x14, 0x5b, 0xb3, 0x14, 0xdd, 0x3d,
	0x1e, 0xa8, 0xc8, 0x65, 0x25, 0xa1, 0xfc, 0xb5, 0x52, 0xb6, 0x77, 0x5c, 0x94, 0xdf, 0x50, 0xdd,
	0x0c, 0xc3, 0xa6, 0xc8, 0xfa, 0x74, 0x33, 0x6e, 0xe3, 0x6f, 0xe3, 0xe8, 0xda, 0x9b, 0xe2, 0xc3,
	0xf7, 0xd1, 0x7b, 0x03, 0xc6, 0xfb, 0x40, 0xbc, 0x54, 0xb1, 0x9d, 0x23, 0x76, 0x07, 0xd9, 0x03,
	0x9a, 0x09, 0x97, 0x24, 0xa0, 0x3d, 0x83, 0xc9, 0xc5, 0x8a, 0xa2, 0xc3, 0xe5, 0x01, 0xed, 0xe1,
	0x4f, 0x86, 0xfc, 0x1b, 0xa5, 0xa6, 0xd0, 0x71, 0xc7, 0x00, 0x6b, 0xa9, 0x5f, 0xf1, 0x99, 0x62,
	0xbe, 0x51, 0x75, 0x0b, 0xa0, 0x32, 0x42, 0x75, 0x0b, 0xff, 0xd5, 0x42, 0x57, 0x07, 0x74, 0x0d,
	0xc6, 0x26, 0x01, 0x63, 0xc1, 0x3b, 0xc0, 0x58, 0x09, 0x60, 0xd5, 0xdc, 0x18, 0x34, 0xfd, 0x7b,
	0x1c, 0xd9, 0xa3, 0x94, 0xf1, 0x7d, 0x64, 0x17, 0xe5, 0x11, 0x08, 0x2f, 0xd1, 0x25, 0x19, 0x44,
	0x8c, 0x9b, 0x2b, 0x71, 0x39, 0xe7, 0x1f, 0x64, 0xec, 0x83, 0x88, 0x71, 0xfc, 0x8d, 0x85, 0x6e,
	0xf6, 0x99, 0x2b, 0x0e, 0xac, 0x02, 0xdb, 0xb0, 0x6b, 0xb5, 0x6d, 0xf1, 0xce, 0x8a, 0xcd, 0x59,
	0x2f, 0x57, 0x59, 0x71, 0x26, 0x16, 0x21, 0xe1, 0xbf, 0x5b, 0x68, 0x7d, 0x54, 0xe8, 0x79, 0xdc,
	0xe3, 0x10, 0x77, 0xe7, 0xdd, 0x6c, 0xa0, 0x73, 0x7d, 0x68, 0xd0, 0x2d, 0x13, 0x4c, 0x83, 0xa1,
	0x2b, 0x11, 0xeb, 0x92, 0x36, 0x8d, 0xa9, 0x2b, 0x7c, 0x91, 0x9e, 0x90, 0x8e, 0xe8, 0x71, 0x86,
	0x1b, 0xa8, 0x1e, 0xd0, 0x9e, 0x08, 0xba, 0x01, 0x89, 0x18, 0xe9, 0x4a, 0x53, 0x5c, 0x35, 0x43,
	0xfc, 0x8c, 0x7d, 0x2e, 0xf1, 0x06, 0xba, 0xdc, 0x0d, 0xf5, 0x79, 0xcb, 0x99, 0x11, 0xd3, 0xa5,
	0x34, 0x57, 0xd0, 0x95, 0x64, 0xe3, 0x4f, 0x16, 0x5a, 0xec, 0x77, 0xe3, 0xf3, 0x1e, 0xbe, 0x09,
	0x5e, 0x8a, 0x24, 0x19, 0x2f, 0xb3, 0x01, 0xed, 0xe5, 0xa1, 0xe2, 0x2d, 0x74, 0xa5, 0xe4, 0xa6,
	0x90, 0x35, 0x55, 0x5b, 0xf0, 0x0a, 0x95, 0x5b, 0x68, 0x41, 0xd9, 0xf5, 0x65, 0x5c, 0x92, 0xd7,
	0xc5, 0x3a, 0x1f, 0xd0, 0xde, 0xbe, 0x8c, 0x73, 0xd9, 0xc6, 0x6f, 0xc6, 0x10, 0x32, 0xb1, 0x29,
	0xdc, 0x62, 0x34, 0x01, 0x5d, 0x96, 0xc6, 0x28, 0xfc, 0xc6, 0x29, 0x9a, 0x84, 0xac, 0x18, 0xc8,
	0x7d, 0x71, 0x7e, 0x5b, 0x37, 0x2c, 0xf7, 0x8e, 0x76, 0x86, 0xbf, 0x46, 0x13, 0x2a, 0x49, 0x06,
	0x2f, 0xbf, 0xb8, 0x38, 0xa7, 0x3e, 0xef, 0x39, 0xe0, 0xaa, 0xf1, 0xdf, 0x71, 0x34, 0x57, 0xe5,
	0xe2, 0x35, 0x54, 0x93, 0xc2, 0x0b, 0xa9, 0x4f, 0x4a, 0x69, 0x41, 0x9a, 0x04, 0x6d, 0xe7, 0x32,
	0x9a, 0x92, 0x29, 0xf5, 0xf8, 0x96, 0xe9, 0x0a, 0xcd, 0x2a, 0xa7, 0x6f, 0xc3, 0x1f, 0xc8, 0xe8,
	0xdb, 0x39, 0xfd, 0xae, 0x69, 0x64, 0xcd, 0x2a, 0xa7, 0xdf, 0x33, 0x9d, 0xab, 0x59, 0xe1, 0x1b,
	0x08, 0xa5, 0x3c, 0x09, 0x44, 0x08, 0xf7, 0xc7, 0xd4, 0xba, 0xb5, 0x31, 0xed, 0x94, 0x28, 0x8a,
	0x2f, 0x8f, 0x45, 0xda, 0x3e, 0x04, 0xfe, 0x25, 0xcd, 0x2f, 0x28, 0xd8, 0x46, 0x97, 0x52, 0xe9,
	0x6d, 0xc5, 0xdb, 0x3b, 0xf6, 0x34, 0x30, 0xb3, 0xa5, 0xf2, 0x98, 0x4a, 0x6f, 0x3b, 0xde, 0xb1,
	0x67, 0x80, 0x61, 0x56, 0xf8, 0x7d, 0x34, 0x7b, 0xd4, 0xa6, 0xa9, 0xce, 0x82, 0xcf, 0x6d, 0x04,
	0xdc, 0x9a, 0xa2, 0x3d, 0xd0, 0x24, 0x25, 0xe2, 0xb7, 0xa9, 0xcc, 0x45, 0x6a, 0x5a, 0x44, 0xd1,
	0x32, 0x91, 0x5f, 0xa2, 0xb9, 0xa2, 0xf8, 0x55, 0xbb, 0x6d, 0xcf, 0xc2, 0x46, 0x3e, 0x3f, 0xf7,
	0x8d, 0x24, 0xee, 0xb1, 0x53, 0xcf, 0x7d, 0x35, 0xc3, 0x4e, 0xd4, 0xf8, 0x8f, 0x85, 0x96, 0x14,
	0x17, 0x4e, 0x82, 0x7c, 0x37, 0x05, 0x97, 0xc3, 0x4b, 0x43, 0xdf, 0xe8, 0xfd, 0xa5, 0x81, 0x7f,
	0xdd, 0x8f, 0x06, 0xb8, 0xbe, 0x6b, 0xdb, 0x3f, 0xbf, 0x28, 0x2c, 0x3a, 0xf5, 0x88, 0x75, 0x1f,
	0xe4, 0xcb, 0xc6, 0xb7, 0x63, 0xa8, 0xae, 0x6c, 0x25, 0x84, 0xb2, 0xaf, 0x88, 0x14, 0x4c, 0x9d,
	0x18, 0x94, 0x7d, 0x45, 0xdb, 0x3c, 0x6c, 0x9f, 0x28, 0x42, 0x76, 0x62, 0xe4, 0xc4, 0x96, 0x60,
	0x6a, 0x56, 0x81, 0x3f, 0x0e, 0x88, 0x35, 0xb3, 0x8a, 0x22, 0x00, 0x5e, 0xaf, 0x23, 0xa4, 0x5a,
	0x15, 0x9f, 0x50, 0xc6, 0x12, 0x83, 0xcd, 0x19, 0xa0, 0xec, 0x32, 0x96, 0x28, 0xbc, 0x27, 0x3c,
	0x88, 0x52, 0xae, 0xf9, 0x1a, 0xa3, 0x48, 0x93, 0x40, 0xe0, 0x7b, 0x68, 0x2e, 0x74, 0x13, 0x33,
	0x66, 0x79, 0x71, 0x3e, 0x69, 0xcd, 0x86, 0x6e, 0x02, 0x93, 0x96, 0xa2, 0xe1, 0x3b, 0x68, 0x29,
	0x97, 0x4a, 0x39, 0x49, 0xa2, 0x6e, 0xca, 0x13, 0x35, 0x96, 0x4d, 0x81, 0xf0, 0x82, 0x11, 0x7e,
	0xce, 0x1d, 0xe0, 0x34, 0x99, 0x9a, 0x0b, 0x3b, 0x3e, 0xf5, 0x48, 0xc7, 0x60, 0x78, 0x52, 0xad,
	0x1e, 0xe7, 0x64, 0xd7, 0xa0, 0x17, 0xc8, 0x7b, 0x39, 0xf9, 0xc8, 0x60, 0x17, 0xc8, 0x2f, 0x72,
	0xb2, 0x6f, 0x40, 0x0b, 0xe4, 0xfd, 0x9c, 0x2c, 0x0d, 0x50, 0x81, 0xdc, 0x6a, 0xfc, 0x61, 0x64,
	0x3b, 0x18, 0x88, 0x50, 0x75, 0x46, 0x84, 0x71, 0x9f, 0x9e, 0x40, 0xd2, 0xc3, 0x28, 0xa0, 0x7e,
	0xd4, 0x95, 0xc4, 0x15, 0x29, 0x24, 0x7d, 0xda, 0x99, 0xcd, 0x89, 0x7b, 0x22, 0x85, 0xb3, 0x5c,
	0x84, 0x70, 0x63, 0x80, 0x96, 0x39, 0x9f, 0x67, 0x0d, 0xf1, 0x61, 0x66, 0x29, 0xbb, 0x56, 0xb4,
	0xd0, 0x78, 0x7e, 0xe0, 0xe7, 0x42, 0x8d, 0x2f, 0x87, 0xcc, 0xd6, 0x10, 0x95, 0x1f, 0x49, 0x79,
	0xb6, 0x60, 0x60, 0x93, 0xa5, 0x24, 0x47, 0xd4, 0xef, 0x72, 0x13, 0xc9, 0x8c, 0xa2, 0xbc, 0x50,
	0x84, 0xc6, 0xb7, 0x97, 0xd1, 0xd2, 0x50, 0x17, 0x95, 0x91, 0xbb, 0xc0, 0x90, 0x55, 0x1d, 0xb9,
	0xf7, 0x33, 0x2c, 0x3d, 0x42, 0x6b, 0x55, 0x69, 0x11, 0xa6, 0x3c, 0xe9, 0xd0, 0xb6, 0x46, 0x0f,
	0x97, 0xd2, 0xc0, 0xef, 0x5a, 0x59, 0xb5, 0x99, 0x09, 0xed, 0x6a, 0x19, 0xfc, 0x63, 0xdd, 0x29,
	0x0e, 0x33, 0x23, 0x98, 0x49, 0xd1, 0xd5, 0xa1, 0x16, 0x9a, 0x0c, 0x3f, 0x40, 0x37, 0xaa, 0xca,
	0x21, 0x17, 0xde, 0xa1, 0x1b, 0x25, 0x79, 0x08, 0x1a, 0xc3, 0xab, 0x65, 0x03, 0x4f, 0x8d, 0x4c,
	0x16, 0xc1, 0x27, 0xba, 0xaf, 0x1e, 0x62, 0xc4, 0xe0, 0xdb, 0xf4, 0xec, 0xfd, 0xfa, 0x4d, 0x86,
	0x1f, 0xf7, 0xb7, 0x3c, 0xb9, 0xaa, 0x3c, 0x91, 0x29, 0x0f, 0x0a, 0xd0, 0x5f, 0x1b, 0x66, 0xa1,
	0x05, 0x42, 0x4d, 0x86, 0xf7, 0x46, 0xfe, 0x8f, 0xec, 0x45, 0xe3, 0x12, 0xc4, 0xb1, 0x32, 0xcc,
	0x8a, 0x7e, 0xe2, 0xc0, 0x4d, 0xf4, 0xfe, 0x08, 0x1b, 0x1e, 0x0f, 0xb9, 0xee, 0x31, 0xa1, 0x8e,
	0xea, 0xce, 0x8d, 0x61, 0x66, 0x9e, 0xe4, 0x52, 0x83, 0x19, 0xe9, 0x24, 0xd4, 0x0b, 0x78, 0x98,
	0xaa, 0x48, 0x66, 0x06, 0x33, 0xf2, 0xd8, 0xb0, 0x9b, 0x0c, 0xef, 0xa0, 0xab, 0x7d, 0x18, 0xe2,
	0x24, 0xe0, 0x69, 0x22, 0xda, 0x50, 0x95, 0x75, 0xe7, 0x4a, 0x05, 0x48, 0xfc, 0x00, 0x78, 0xf8,
	0x63, 0x3d, 0xa1, 0x94, 0x50, 0xe0, 0xc5, 0x99, 0x5e, 0xad, 0x98, 0x16, 0x72, 0x0c, 0x78, 0xb1,
	0x51, 0x1c, 0xf0, 0xd7, 0x0d, 0x85, 0x29, 0xaf, 0xd9, 0x41, 0x7f, 0x9f, 0x87, 0x42, 0xd7, 0xe2,
	0x4f, 0xd0, 0x6a, 0x55, 0x8d, 0x76, 0x3a, 0x22, 0x54, 0x1d, 0x81, 0x2b, 0x52, 0x69, 0xd7, 0x41,
	0xd5, 0x2e, 0xab, 0xee, 0x1a, 0x81, 0x3d, 0x91, 0x4a, 0xbc, 0xdf, 0xdf, 0xa5, 0xf3, 0x5e, 0xca,
	0x43, 0xc6, 0x59, 0xc5, 0x8e, 0x3d, 0x07, 0x57, 0xcb, 0x5a, 0xd9, 0xcc, 0x23, 0x23, 0x58, 0x32,
	0x87, 0x3f, 0x45, 0x8d, 0xaa, 0x35, 0x7d, 0x83, 0x8b, 0xd0, 0x2b, 0x5f, 0x3f, 0xf3, 0x10, 0x53,
	0xc5, 0x58, 0x2b, 0x93, 0x2b, 0xae, 0x0d, 0x7c, 0x0f, 0x2d, 0xf7, 0x85, 0x16, 0xb6, 0x23, 0x26,
	0x42, 0xcf, 0xbe, 0x3c, 0x98, 0x8f, 0x47, 0x86, 0x87, 0x7f, 0x6b, 0xa1, 0xe5, 0xf2, 0x73, 0x18,
	0x68, 0xea, 0x37, 0xb1, 0x85, 0xf3, 0xbe, 0xf6, 0xaa, 0x0f, 0x71, 0xce, 0x62, 0xf1, 0xda, 0xa6,
	0x42, 0xd2, 0x2f, 0x6e, 0xbb, 0xe8, 0xfa, 0xa8, 0x59, 0x42, 0x4d, 0x51, 0xbe, 0x8d, 0xa1, 0xaa,
	0x56, 0x86, 0x36, 0xf8, 0x6a, 0x92, 0xf2, 0xf1, 0x9f, 0xad, 0x7e, 0x68, 0x14, 0x77, 0xfe, 0x22,
	0x74, 0x23, 0xee, 0xc5, 0x8f, 0x21, 0x55, 0xd8, 0x16, 0xdd, 0xc5, 0xef, 0x47, 0xf5, 0x28, 0xf6,
	0x15, 0x08, 0x8d, 0x9c, 0x6f, 0x97, 0x31, 0xe0, 0xc6, 0x51, 0x23, 0x89, 0x0a, 0xe9, 0x41, 0xb9,
	0x3f, 0xfa, 0x55, 0x7f, 0x83, 0xb1, 0x04, 0x7b, 0xff, 0xb3, 0xf3, 0x0b, 0xa6, 0xd2, 0xd0, 0xf4,
	0x75, 0x2e, 0xbf, 0xb3, 0xe0, 0x16, 0x2d, 0xee, 0x5e, 0x7b, 0xf9, 0xdd, 0x8c, 0xfb, 0x15, 0xa7,
	0x4e, 0x2d, 0x10, 0xe1, 0x01, 0xed, 0xe9, 0x73, 0xe2, 0xfb, 0x68, 0x1e, 0xa8, 0xe4, 0x88, 0x26,
	0x42, 0x1f, 0xa1, 0x57, 0xf5, 0x94, 0x07, 0xe4, 0x17, 0x19, 0x15, 0xf7, 0xd0, 0x84, 0xba, 0x62,
	0x6d, 0x1b, 0x42, 0x66, 0x17, 0x1d, 0xb2, 0xf2, 0xe5, 0x80, 0x47, 0x7c, 0x1b, 0xe1, 0x84, 0x4b,
	0xc1, 0xba, 0xd4, 0x2f, 0x21, 0xfc, 0x3d, 0x88, 0x72, 0x21, 0xe3, 0x14, 0xc8, 0xfb, 0x08, 0x2d,
	0x16, 0xcf, 0xb1, 0x85, 0xfc, 0x0a, 0xc8, 0xe3, 0x9c, 0x55, 0x28, 0xdc, 0x46, 0xb8, 0x9b, 0x0a,
	0x5f, 0xbc, 0xae, 0x0c, 0xa0, 0xab, 0xda, 0x7e, 0xc6, 0x29, 0x46, 0xca, 0x7f, 0x5a, 0x68, 0x5e,
	0xef, 0xb2, 0xbe, 0xba, 0xc2, 0x4e, 0xa4, 0x3a, 0x12, 0xc9, 0xf3, 0x0b, 0x44, 0x77, 0xad, 0x33,
	0x86, 0xd2, 0x64, 0xf8, 0x21, 0x5a, 0x2b, 0xd8, 0xc4, 0x34, 0xa8, 0xae, 0x8c, 0xfc, 0x6e, 0xca,
	0x2b, 0x5d, 0xcc, 0x6a, 0xae, 0xb3, 0x0f, 0x3d, 0xab, 0x91, 0x81, 0xbe, 0x06, 0x9c, 0x24, 0x9e,
	0xab, 0xf2, 0x9a, 0xa4, 0xa6, 0x71, 0x98, 0x51, 0x94, 0x96, 0x22, 0xe8, 0x37, 0x7c, 0xc5, 0x16,
	0xaf, 0xb9, 0x79, 0x80, 0x9a, 0x06, 0xae, 0x78, 0xcd, 0x1b, 0xff, 0x1a, 0x1f, 0xd2, 0x13, 0xa9,
	0xf8, 0xb3, 0x17, 0xbd, 0xd2, 0x67, 0x88, 0x72, 0x43, 0xbb, 0xad, 0x1f, 0x73, 0x2a, 0x9f, 0x23,
	0x8a, 0xae, 0xf6, 0x7e, 0xe9, 0x52, 0x03, 0xdd, 0xe8, 0x88, 0x27, 0x7e, 0x44, 0x19, 0x67, 0xf6,
	0x5d, 0x68, 0xdc, 0x2a, 0x9a, 0x9f, 0xe5, 0x5c, 0x75, 0x1c, 0xf7, 0x7d, 0xfd, 0x50, 0xbb, 0x6e,
	0xdf, 0x83, 0x72, 0x24, 0x17, 0x0c, 0xae, 0xea, 0xe7, 0x15, 0x75, 0x48, 0xe0, 0x3f, 0x5a, 0xfd,
	0x69, 0x90, 0x82, 0x11, 0x1a, 0x32, 0x22, 0x13, 0xd7, 0xb3, 0x77, 0x00, 0xf4, 0x2f, 0xcf, 0xfb,
	0x98, 0xc8, 0x01, 0x54, 0xcd, 0x53, 0x4b, 0xb0, 0xdd, 0x90, 0xb5, 0x12, 0xd7, 0x73, 0xa7, 0xe0,
	0xcb, 0xd2, 0xdd, 0xef, 0x02, 0x00, 0x00, 0xff, 0xff, 0x73, 0x3e, 0xdd, 0xad, 0xfa, 0x1a, 0x00,
	0x00,
}
