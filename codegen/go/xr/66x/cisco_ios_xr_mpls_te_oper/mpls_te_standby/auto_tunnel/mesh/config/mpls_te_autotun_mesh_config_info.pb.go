/*
Copyright 2019 Cisco Systems

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: mpls_te_autotun_mesh_config_info.proto

package cisco_ios_xr_mpls_te_oper_mpls_te_standby_auto_tunnel_mesh_config

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type MplsTeAutotunMeshConfigInfo_KEYS struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MplsTeAutotunMeshConfigInfo_KEYS) Reset()         { *m = MplsTeAutotunMeshConfigInfo_KEYS{} }
func (m *MplsTeAutotunMeshConfigInfo_KEYS) String() string { return proto.CompactTextString(m) }
func (*MplsTeAutotunMeshConfigInfo_KEYS) ProtoMessage()    {}
func (*MplsTeAutotunMeshConfigInfo_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_b4e508faf8c23d57, []int{0}
}

func (m *MplsTeAutotunMeshConfigInfo_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsTeAutotunMeshConfigInfo_KEYS.Unmarshal(m, b)
}
func (m *MplsTeAutotunMeshConfigInfo_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsTeAutotunMeshConfigInfo_KEYS.Marshal(b, m, deterministic)
}
func (m *MplsTeAutotunMeshConfigInfo_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsTeAutotunMeshConfigInfo_KEYS.Merge(m, src)
}
func (m *MplsTeAutotunMeshConfigInfo_KEYS) XXX_Size() int {
	return xxx_messageInfo_MplsTeAutotunMeshConfigInfo_KEYS.Size(m)
}
func (m *MplsTeAutotunMeshConfigInfo_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsTeAutotunMeshConfigInfo_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_MplsTeAutotunMeshConfigInfo_KEYS proto.InternalMessageInfo

type MplsTeAutotunMeshConfigInfo struct {
	IsConfigured                   bool     `protobuf:"varint,50,opt,name=is_configured,json=isConfigured,proto3" json:"is_configured,omitempty"`
	UnusedRemovalTimeoutConfigured uint32   `protobuf:"varint,51,opt,name=unused_removal_timeout_configured,json=unusedRemovalTimeoutConfigured,proto3" json:"unused_removal_timeout_configured,omitempty"`
	MinTunnelId                    uint32   `protobuf:"varint,52,opt,name=min_tunnel_id,json=minTunnelId,proto3" json:"min_tunnel_id,omitempty"`
	MaxTunnelId                    uint32   `protobuf:"varint,53,opt,name=max_tunnel_id,json=maxTunnelId,proto3" json:"max_tunnel_id,omitempty"`
	XXX_NoUnkeyedLiteral           struct{} `json:"-"`
	XXX_unrecognized               []byte   `json:"-"`
	XXX_sizecache                  int32    `json:"-"`
}

func (m *MplsTeAutotunMeshConfigInfo) Reset()         { *m = MplsTeAutotunMeshConfigInfo{} }
func (m *MplsTeAutotunMeshConfigInfo) String() string { return proto.CompactTextString(m) }
func (*MplsTeAutotunMeshConfigInfo) ProtoMessage()    {}
func (*MplsTeAutotunMeshConfigInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_b4e508faf8c23d57, []int{1}
}

func (m *MplsTeAutotunMeshConfigInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsTeAutotunMeshConfigInfo.Unmarshal(m, b)
}
func (m *MplsTeAutotunMeshConfigInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsTeAutotunMeshConfigInfo.Marshal(b, m, deterministic)
}
func (m *MplsTeAutotunMeshConfigInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsTeAutotunMeshConfigInfo.Merge(m, src)
}
func (m *MplsTeAutotunMeshConfigInfo) XXX_Size() int {
	return xxx_messageInfo_MplsTeAutotunMeshConfigInfo.Size(m)
}
func (m *MplsTeAutotunMeshConfigInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsTeAutotunMeshConfigInfo.DiscardUnknown(m)
}

var xxx_messageInfo_MplsTeAutotunMeshConfigInfo proto.InternalMessageInfo

func (m *MplsTeAutotunMeshConfigInfo) GetIsConfigured() bool {
	if m != nil {
		return m.IsConfigured
	}
	return false
}

func (m *MplsTeAutotunMeshConfigInfo) GetUnusedRemovalTimeoutConfigured() uint32 {
	if m != nil {
		return m.UnusedRemovalTimeoutConfigured
	}
	return 0
}

func (m *MplsTeAutotunMeshConfigInfo) GetMinTunnelId() uint32 {
	if m != nil {
		return m.MinTunnelId
	}
	return 0
}

func (m *MplsTeAutotunMeshConfigInfo) GetMaxTunnelId() uint32 {
	if m != nil {
		return m.MaxTunnelId
	}
	return 0
}

func init() {
	proto.RegisterType((*MplsTeAutotunMeshConfigInfo_KEYS)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te_standby.auto_tunnel.mesh.config.mpls_te_autotun_mesh_config_info_KEYS")
	proto.RegisterType((*MplsTeAutotunMeshConfigInfo)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te_standby.auto_tunnel.mesh.config.mpls_te_autotun_mesh_config_info")
}

func init() {
	proto.RegisterFile("mpls_te_autotun_mesh_config_info.proto", fileDescriptor_b4e508faf8c23d57)
}

var fileDescriptor_b4e508faf8c23d57 = []byte{
	// 233 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0xd0, 0xb1, 0x4e, 0xc3, 0x30,
	0x10, 0x06, 0x60, 0x65, 0x41, 0xc8, 0x90, 0x25, 0x53, 0x27, 0x14, 0x82, 0x80, 0x4e, 0x1e, 0x28,
	0x3c, 0x00, 0x42, 0x0c, 0x15, 0x5b, 0xe8, 0xc2, 0x74, 0x72, 0x13, 0x17, 0x4e, 0x8a, 0xef, 0x22,
	0xfb, 0x8c, 0xc2, 0xab, 0xf2, 0x34, 0xa8, 0x71, 0x82, 0xb2, 0x75, 0xf4, 0xaf, 0xef, 0xff, 0x2d,
	0x5b, 0xdd, 0xb9, 0xbe, 0x0b, 0x20, 0x16, 0x4c, 0x14, 0x96, 0x48, 0xe0, 0x6c, 0xf8, 0x82, 0x86,
	0xe9, 0x80, 0x9f, 0x80, 0x74, 0x60, 0xdd, 0x7b, 0x16, 0x2e, 0x9e, 0x1b, 0x0c, 0x0d, 0x03, 0x72,
	0x80, 0xc1, 0xc3, 0x5c, 0xe2, 0xde, 0x7a, 0x3d, 0x1f, 0x82, 0x18, 0x6a, 0xf7, 0x3f, 0xfa, 0xb8,
	0x04, 0x12, 0x89, 0x6c, 0xa7, 0x8f, 0x6b, 0x3a, 0xad, 0x55, 0xf7, 0xea, 0xf6, 0xd4, 0x65, 0xf0,
	0xf6, 0xfa, 0xf1, 0x5e, 0xfd, 0x66, 0xaa, 0x3c, 0x25, 0x8b, 0x1b, 0x95, 0x63, 0x98, 0x92, 0xe8,
	0x6d, 0xbb, 0x7a, 0x28, 0xb3, 0xf5, 0x79, 0x7d, 0x89, 0xe1, 0xe5, 0x3f, 0x2b, 0xb6, 0xea, 0x3a,
	0x52, 0x0c, 0xb6, 0x05, 0x6f, 0x1d, 0x7f, 0x9b, 0x0e, 0x04, 0x9d, 0xe5, 0x28, 0xcb, 0xe2, 0xa6,
	0xcc, 0xd6, 0x79, 0x7d, 0x95, 0x60, 0x9d, 0xdc, 0x2e, 0xb1, 0xc5, 0x54, 0xa5, 0x72, 0x87, 0x34,
	0xbd, 0x0b, 0xb0, 0x5d, 0x3d, 0x8e, 0xb5, 0x0b, 0x87, 0xb4, 0x1b, 0xb3, 0x6d, 0x32, 0x66, 0x58,
	0x98, 0xa7, 0xc9, 0x98, 0x61, 0x36, 0xfb, 0xb3, 0xf1, 0x3f, 0x37, 0x7f, 0x01, 0x00, 0x00, 0xff,
	0xff, 0xcd, 0xff, 0xb8, 0x0f, 0x79, 0x01, 0x00, 0x00,
}
