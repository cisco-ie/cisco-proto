/*
Copyright 2019 Cisco Systems

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: te_sh_igp.proto

package cisco_ios_xr_mpls_te_oper_mpls_te_igp_areas_igp_area

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type TeShIgp_KEYS struct {
	Protocol             string   `protobuf:"bytes,1,opt,name=protocol,proto3" json:"protocol,omitempty"`
	ProcessTag           string   `protobuf:"bytes,2,opt,name=process_tag,json=processTag,proto3" json:"process_tag,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TeShIgp_KEYS) Reset()         { *m = TeShIgp_KEYS{} }
func (m *TeShIgp_KEYS) String() string { return proto.CompactTextString(m) }
func (*TeShIgp_KEYS) ProtoMessage()    {}
func (*TeShIgp_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_9d3a45ebb1af4017, []int{0}
}

func (m *TeShIgp_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TeShIgp_KEYS.Unmarshal(m, b)
}
func (m *TeShIgp_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TeShIgp_KEYS.Marshal(b, m, deterministic)
}
func (m *TeShIgp_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TeShIgp_KEYS.Merge(m, src)
}
func (m *TeShIgp_KEYS) XXX_Size() int {
	return xxx_messageInfo_TeShIgp_KEYS.Size(m)
}
func (m *TeShIgp_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_TeShIgp_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_TeShIgp_KEYS proto.InternalMessageInfo

func (m *TeShIgp_KEYS) GetProtocol() string {
	if m != nil {
		return m.Protocol
	}
	return ""
}

func (m *TeShIgp_KEYS) GetProcessTag() string {
	if m != nil {
		return m.ProcessTag
	}
	return ""
}

type TeShIgpAreaStats struct {
	AreaAdjacencyRequestMessages    uint32   `protobuf:"varint,1,opt,name=area_adjacency_request_messages,json=areaAdjacencyRequestMessages,proto3" json:"area_adjacency_request_messages,omitempty"`
	AreaAdjacencyAnnounceMessages   uint32   `protobuf:"varint,2,opt,name=area_adjacency_announce_messages,json=areaAdjacencyAnnounceMessages,proto3" json:"area_adjacency_announce_messages,omitempty"`
	AreaFloodMessages               uint32   `protobuf:"varint,3,opt,name=area_flood_messages,json=areaFloodMessages,proto3" json:"area_flood_messages,omitempty"`
	AreaLsaAnnounceMessages         uint32   `protobuf:"varint,4,opt,name=area_lsa_announce_messages,json=areaLsaAnnounceMessages,proto3" json:"area_lsa_announce_messages,omitempty"`
	AreaLsaFragmentAnnounceMessages uint32   `protobuf:"varint,5,opt,name=area_lsa_fragment_announce_messages,json=areaLsaFragmentAnnounceMessages,proto3" json:"area_lsa_fragment_announce_messages,omitempty"`
	AreaLsaDeleteMessages           uint32   `protobuf:"varint,6,opt,name=area_lsa_delete_messages,json=areaLsaDeleteMessages,proto3" json:"area_lsa_delete_messages,omitempty"`
	AreaLsaFragmentDeleteMessages   uint32   `protobuf:"varint,7,opt,name=area_lsa_fragment_delete_messages,json=areaLsaFragmentDeleteMessages,proto3" json:"area_lsa_fragment_delete_messages,omitempty"`
	AreaTunnelAnnounceMessages      uint32   `protobuf:"varint,8,opt,name=area_tunnel_announce_messages,json=areaTunnelAnnounceMessages,proto3" json:"area_tunnel_announce_messages,omitempty"`
	XXX_NoUnkeyedLiteral            struct{} `json:"-"`
	XXX_unrecognized                []byte   `json:"-"`
	XXX_sizecache                   int32    `json:"-"`
}

func (m *TeShIgpAreaStats) Reset()         { *m = TeShIgpAreaStats{} }
func (m *TeShIgpAreaStats) String() string { return proto.CompactTextString(m) }
func (*TeShIgpAreaStats) ProtoMessage()    {}
func (*TeShIgpAreaStats) Descriptor() ([]byte, []int) {
	return fileDescriptor_9d3a45ebb1af4017, []int{1}
}

func (m *TeShIgpAreaStats) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TeShIgpAreaStats.Unmarshal(m, b)
}
func (m *TeShIgpAreaStats) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TeShIgpAreaStats.Marshal(b, m, deterministic)
}
func (m *TeShIgpAreaStats) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TeShIgpAreaStats.Merge(m, src)
}
func (m *TeShIgpAreaStats) XXX_Size() int {
	return xxx_messageInfo_TeShIgpAreaStats.Size(m)
}
func (m *TeShIgpAreaStats) XXX_DiscardUnknown() {
	xxx_messageInfo_TeShIgpAreaStats.DiscardUnknown(m)
}

var xxx_messageInfo_TeShIgpAreaStats proto.InternalMessageInfo

func (m *TeShIgpAreaStats) GetAreaAdjacencyRequestMessages() uint32 {
	if m != nil {
		return m.AreaAdjacencyRequestMessages
	}
	return 0
}

func (m *TeShIgpAreaStats) GetAreaAdjacencyAnnounceMessages() uint32 {
	if m != nil {
		return m.AreaAdjacencyAnnounceMessages
	}
	return 0
}

func (m *TeShIgpAreaStats) GetAreaFloodMessages() uint32 {
	if m != nil {
		return m.AreaFloodMessages
	}
	return 0
}

func (m *TeShIgpAreaStats) GetAreaLsaAnnounceMessages() uint32 {
	if m != nil {
		return m.AreaLsaAnnounceMessages
	}
	return 0
}

func (m *TeShIgpAreaStats) GetAreaLsaFragmentAnnounceMessages() uint32 {
	if m != nil {
		return m.AreaLsaFragmentAnnounceMessages
	}
	return 0
}

func (m *TeShIgpAreaStats) GetAreaLsaDeleteMessages() uint32 {
	if m != nil {
		return m.AreaLsaDeleteMessages
	}
	return 0
}

func (m *TeShIgpAreaStats) GetAreaLsaFragmentDeleteMessages() uint32 {
	if m != nil {
		return m.AreaLsaFragmentDeleteMessages
	}
	return 0
}

func (m *TeShIgpAreaStats) GetAreaTunnelAnnounceMessages() uint32 {
	if m != nil {
		return m.AreaTunnelAnnounceMessages
	}
	return 0
}

type TeShIgpAreaActive struct {
	InterfacesCount             uint32            `protobuf:"varint,1,opt,name=interfaces_count,json=interfacesCount,proto3" json:"interfaces_count,omitempty"`
	LinkIdtReceived             bool              `protobuf:"varint,2,opt,name=link_idt_received,json=linkIdtReceived,proto3" json:"link_idt_received,omitempty"`
	TopologyIdtReceived         bool              `protobuf:"varint,3,opt,name=topology_idt_received,json=topologyIdtReceived,proto3" json:"topology_idt_received,omitempty"`
	SrStrict                    bool              `protobuf:"varint,4,opt,name=sr_strict,json=srStrict,proto3" json:"sr_strict,omitempty"`
	P2PHeadsCount               uint32            `protobuf:"varint,5,opt,name=p2p_heads_count,json=p2pHeadsCount,proto3" json:"p2p_heads_count,omitempty"`
	P2PAutorouteAnnouncedCount  uint32            `protobuf:"varint,6,opt,name=p2p_autoroute_announced_count,json=p2pAutorouteAnnouncedCount,proto3" json:"p2p_autoroute_announced_count,omitempty"`
	P2PForwardingAdjacencyCount uint32            `protobuf:"varint,7,opt,name=p2p_forwarding_adjacency_count,json=p2pForwardingAdjacencyCount,proto3" json:"p2p_forwarding_adjacency_count,omitempty"`
	P2MpDestinationCount        uint32            `protobuf:"varint,8,opt,name=p2mp_destination_count,json=p2mpDestinationCount,proto3" json:"p2mp_destination_count,omitempty"`
	TunnelLooseHops             uint32            `protobuf:"varint,9,opt,name=tunnel_loose_hops,json=tunnelLooseHops,proto3" json:"tunnel_loose_hops,omitempty"`
	AreaStatistics              *TeShIgpAreaStats `protobuf:"bytes,10,opt,name=area_statistics,json=areaStatistics,proto3" json:"area_statistics,omitempty"`
	XXX_NoUnkeyedLiteral        struct{}          `json:"-"`
	XXX_unrecognized            []byte            `json:"-"`
	XXX_sizecache               int32             `json:"-"`
}

func (m *TeShIgpAreaActive) Reset()         { *m = TeShIgpAreaActive{} }
func (m *TeShIgpAreaActive) String() string { return proto.CompactTextString(m) }
func (*TeShIgpAreaActive) ProtoMessage()    {}
func (*TeShIgpAreaActive) Descriptor() ([]byte, []int) {
	return fileDescriptor_9d3a45ebb1af4017, []int{2}
}

func (m *TeShIgpAreaActive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TeShIgpAreaActive.Unmarshal(m, b)
}
func (m *TeShIgpAreaActive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TeShIgpAreaActive.Marshal(b, m, deterministic)
}
func (m *TeShIgpAreaActive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TeShIgpAreaActive.Merge(m, src)
}
func (m *TeShIgpAreaActive) XXX_Size() int {
	return xxx_messageInfo_TeShIgpAreaActive.Size(m)
}
func (m *TeShIgpAreaActive) XXX_DiscardUnknown() {
	xxx_messageInfo_TeShIgpAreaActive.DiscardUnknown(m)
}

var xxx_messageInfo_TeShIgpAreaActive proto.InternalMessageInfo

func (m *TeShIgpAreaActive) GetInterfacesCount() uint32 {
	if m != nil {
		return m.InterfacesCount
	}
	return 0
}

func (m *TeShIgpAreaActive) GetLinkIdtReceived() bool {
	if m != nil {
		return m.LinkIdtReceived
	}
	return false
}

func (m *TeShIgpAreaActive) GetTopologyIdtReceived() bool {
	if m != nil {
		return m.TopologyIdtReceived
	}
	return false
}

func (m *TeShIgpAreaActive) GetSrStrict() bool {
	if m != nil {
		return m.SrStrict
	}
	return false
}

func (m *TeShIgpAreaActive) GetP2PHeadsCount() uint32 {
	if m != nil {
		return m.P2PHeadsCount
	}
	return 0
}

func (m *TeShIgpAreaActive) GetP2PAutorouteAnnouncedCount() uint32 {
	if m != nil {
		return m.P2PAutorouteAnnouncedCount
	}
	return 0
}

func (m *TeShIgpAreaActive) GetP2PForwardingAdjacencyCount() uint32 {
	if m != nil {
		return m.P2PForwardingAdjacencyCount
	}
	return 0
}

func (m *TeShIgpAreaActive) GetP2MpDestinationCount() uint32 {
	if m != nil {
		return m.P2MpDestinationCount
	}
	return 0
}

func (m *TeShIgpAreaActive) GetTunnelLooseHops() uint32 {
	if m != nil {
		return m.TunnelLooseHops
	}
	return 0
}

func (m *TeShIgpAreaActive) GetAreaStatistics() *TeShIgpAreaStats {
	if m != nil {
		return m.AreaStatistics
	}
	return nil
}

type TeShIgpArea struct {
	AreaIndex            uint32             `protobuf:"varint,1,opt,name=area_index,json=areaIndex,proto3" json:"area_index,omitempty"`
	AreaNumber           uint32             `protobuf:"varint,2,opt,name=area_number,json=areaNumber,proto3" json:"area_number,omitempty"`
	AreaFormat           string             `protobuf:"bytes,3,opt,name=area_format,json=areaFormat,proto3" json:"area_format,omitempty"`
	IsConfigReady        bool               `protobuf:"varint,4,opt,name=is_config_ready,json=isConfigReady,proto3" json:"is_config_ready,omitempty"`
	ActiveData           *TeShIgpAreaActive `protobuf:"bytes,5,opt,name=active_data,json=activeData,proto3" json:"active_data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *TeShIgpArea) Reset()         { *m = TeShIgpArea{} }
func (m *TeShIgpArea) String() string { return proto.CompactTextString(m) }
func (*TeShIgpArea) ProtoMessage()    {}
func (*TeShIgpArea) Descriptor() ([]byte, []int) {
	return fileDescriptor_9d3a45ebb1af4017, []int{3}
}

func (m *TeShIgpArea) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TeShIgpArea.Unmarshal(m, b)
}
func (m *TeShIgpArea) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TeShIgpArea.Marshal(b, m, deterministic)
}
func (m *TeShIgpArea) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TeShIgpArea.Merge(m, src)
}
func (m *TeShIgpArea) XXX_Size() int {
	return xxx_messageInfo_TeShIgpArea.Size(m)
}
func (m *TeShIgpArea) XXX_DiscardUnknown() {
	xxx_messageInfo_TeShIgpArea.DiscardUnknown(m)
}

var xxx_messageInfo_TeShIgpArea proto.InternalMessageInfo

func (m *TeShIgpArea) GetAreaIndex() uint32 {
	if m != nil {
		return m.AreaIndex
	}
	return 0
}

func (m *TeShIgpArea) GetAreaNumber() uint32 {
	if m != nil {
		return m.AreaNumber
	}
	return 0
}

func (m *TeShIgpArea) GetAreaFormat() string {
	if m != nil {
		return m.AreaFormat
	}
	return ""
}

func (m *TeShIgpArea) GetIsConfigReady() bool {
	if m != nil {
		return m.IsConfigReady
	}
	return false
}

func (m *TeShIgpArea) GetActiveData() *TeShIgpAreaActive {
	if m != nil {
		return m.ActiveData
	}
	return nil
}

type TeShIgp struct {
	IgpType                string         `protobuf:"bytes,50,opt,name=igp_type,json=igpType,proto3" json:"igp_type,omitempty"`
	InstanceName           string         `protobuf:"bytes,51,opt,name=instance_name,json=instanceName,proto3" json:"instance_name,omitempty"`
	IgpSystemId            string         `protobuf:"bytes,52,opt,name=igp_system_id,json=igpSystemId,proto3" json:"igp_system_id,omitempty"`
	ConfiguredTeRouterId   string         `protobuf:"bytes,53,opt,name=configured_te_router_id,json=configuredTeRouterId,proto3" json:"configured_te_router_id,omitempty"`
	GlobalRouterId         string         `protobuf:"bytes,54,opt,name=global_router_id,json=globalRouterId,proto3" json:"global_router_id,omitempty"`
	SecondaryRouterId      []string       `protobuf:"bytes,55,rep,name=secondary_router_id,json=secondaryRouterId,proto3" json:"secondary_router_id,omitempty"`
	GloballRouterIdOptical string         `protobuf:"bytes,56,opt,name=globall_router_id_optical,json=globallRouterIdOptical,proto3" json:"globall_router_id_optical,omitempty"`
	InUseTeRouterId        string         `protobuf:"bytes,57,opt,name=in_use_te_router_id,json=inUseTeRouterId,proto3" json:"in_use_te_router_id,omitempty"`
	IsConnectionUp         bool           `protobuf:"varint,58,opt,name=is_connection_up,json=isConnectionUp,proto3" json:"is_connection_up,omitempty"`
	ConnectionUpCount      uint32         `protobuf:"varint,59,opt,name=connection_up_count,json=connectionUpCount,proto3" json:"connection_up_count,omitempty"`
	ConnectionDownCount    uint32         `protobuf:"varint,60,opt,name=connection_down_count,json=connectionDownCount,proto3" json:"connection_down_count,omitempty"`
	Area                   []*TeShIgpArea `protobuf:"bytes,61,rep,name=area,proto3" json:"area,omitempty"`
	XXX_NoUnkeyedLiteral   struct{}       `json:"-"`
	XXX_unrecognized       []byte         `json:"-"`
	XXX_sizecache          int32          `json:"-"`
}

func (m *TeShIgp) Reset()         { *m = TeShIgp{} }
func (m *TeShIgp) String() string { return proto.CompactTextString(m) }
func (*TeShIgp) ProtoMessage()    {}
func (*TeShIgp) Descriptor() ([]byte, []int) {
	return fileDescriptor_9d3a45ebb1af4017, []int{4}
}

func (m *TeShIgp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TeShIgp.Unmarshal(m, b)
}
func (m *TeShIgp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TeShIgp.Marshal(b, m, deterministic)
}
func (m *TeShIgp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TeShIgp.Merge(m, src)
}
func (m *TeShIgp) XXX_Size() int {
	return xxx_messageInfo_TeShIgp.Size(m)
}
func (m *TeShIgp) XXX_DiscardUnknown() {
	xxx_messageInfo_TeShIgp.DiscardUnknown(m)
}

var xxx_messageInfo_TeShIgp proto.InternalMessageInfo

func (m *TeShIgp) GetIgpType() string {
	if m != nil {
		return m.IgpType
	}
	return ""
}

func (m *TeShIgp) GetInstanceName() string {
	if m != nil {
		return m.InstanceName
	}
	return ""
}

func (m *TeShIgp) GetIgpSystemId() string {
	if m != nil {
		return m.IgpSystemId
	}
	return ""
}

func (m *TeShIgp) GetConfiguredTeRouterId() string {
	if m != nil {
		return m.ConfiguredTeRouterId
	}
	return ""
}

func (m *TeShIgp) GetGlobalRouterId() string {
	if m != nil {
		return m.GlobalRouterId
	}
	return ""
}

func (m *TeShIgp) GetSecondaryRouterId() []string {
	if m != nil {
		return m.SecondaryRouterId
	}
	return nil
}

func (m *TeShIgp) GetGloballRouterIdOptical() string {
	if m != nil {
		return m.GloballRouterIdOptical
	}
	return ""
}

func (m *TeShIgp) GetInUseTeRouterId() string {
	if m != nil {
		return m.InUseTeRouterId
	}
	return ""
}

func (m *TeShIgp) GetIsConnectionUp() bool {
	if m != nil {
		return m.IsConnectionUp
	}
	return false
}

func (m *TeShIgp) GetConnectionUpCount() uint32 {
	if m != nil {
		return m.ConnectionUpCount
	}
	return 0
}

func (m *TeShIgp) GetConnectionDownCount() uint32 {
	if m != nil {
		return m.ConnectionDownCount
	}
	return 0
}

func (m *TeShIgp) GetArea() []*TeShIgpArea {
	if m != nil {
		return m.Area
	}
	return nil
}

func init() {
	proto.RegisterType((*TeShIgp_KEYS)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.igp_areas.igp_area.te_sh_igp_KEYS")
	proto.RegisterType((*TeShIgpAreaStats)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.igp_areas.igp_area.te_sh_igp_area_stats")
	proto.RegisterType((*TeShIgpAreaActive)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.igp_areas.igp_area.te_sh_igp_area_active")
	proto.RegisterType((*TeShIgpArea)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.igp_areas.igp_area.te_sh_igp_area")
	proto.RegisterType((*TeShIgp)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.igp_areas.igp_area.te_sh_igp")
}

func init() { proto.RegisterFile("te_sh_igp.proto", fileDescriptor_9d3a45ebb1af4017) }

var fileDescriptor_9d3a45ebb1af4017 = []byte{
	// 942 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x95, 0x51, 0x73, 0x1b, 0x35,
	0x10, 0xc7, 0xa7, 0x49, 0x68, 0xed, 0x35, 0x89, 0x9b, 0x4b, 0xd2, 0x5e, 0x53, 0x42, 0x82, 0x3b,
	0xc3, 0x18, 0x86, 0xf1, 0xc3, 0x35, 0xa5, 0x94, 0xc2, 0x83, 0x27, 0x6e, 0x48, 0x68, 0x5a, 0x66,
	0x2e, 0xe9, 0x0c, 0x3c, 0x69, 0x94, 0x93, 0x7c, 0x11, 0x9c, 0x25, 0x21, 0xe9, 0x9a, 0xfa, 0x13,
	0xf0, 0x51, 0xf8, 0x26, 0xbc, 0xf3, 0x8d, 0x18, 0xad, 0xce, 0xe7, 0xb3, 0x93, 0x27, 0xa6, 0x4f,
	0xf6, 0xed, 0xff, 0xb7, 0x7f, 0x9d, 0xb4, 0xbb, 0x3a, 0xe8, 0x3a, 0x4e, 0xec, 0x15, 0x11, 0xb9,
	0x1e, 0x68, 0xa3, 0x9c, 0x8a, 0x0e, 0x33, 0x61, 0x33, 0x45, 0x84, 0xb2, 0xe4, 0x83, 0x21, 0x13,
	0x5d, 0x58, 0xe2, 0x38, 0x51, 0x9a, 0x9b, 0x41, 0xf5, 0x30, 0x10, 0xb9, 0x26, 0xd4, 0x70, 0x6a,
	0xeb, 0x7f, 0xbd, 0x37, 0xb0, 0x51, 0x1b, 0x91, 0xd7, 0xaf, 0x7e, 0x3b, 0x8f, 0x76, 0xa1, 0x85,
	0x86, 0x99, 0x2a, 0xe2, 0x3b, 0x07, 0x77, 0xfa, 0xed, 0xb4, 0x7e, 0x8e, 0xf6, 0xa1, 0xa3, 0x8d,
	0xca, 0xb8, 0xb5, 0xc4, 0xd1, 0x3c, 0x5e, 0x41, 0x19, 0xaa, 0xd0, 0x05, 0xcd, 0x7b, 0x7f, 0xaf,
	0xc1, 0xf6, 0xdc, 0xcf, 0xaf, 0x40, 0xac, 0xa3, 0xce, 0x46, 0xaf, 0x60, 0x1f, 0x9f, 0x28, 0xfb,
	0x9d, 0x66, 0x5c, 0x66, 0x53, 0x62, 0xf8, 0x9f, 0x25, 0xb7, 0x8e, 0x4c, 0xb8, 0xb5, 0x34, 0xe7,
	0x16, 0x17, 0x5b, 0x4f, 0x3f, 0xf3, 0xd8, 0x70, 0x46, 0xa5, 0x01, 0x7a, 0x53, 0x31, 0xd1, 0x4f,
	0x70, 0xb0, 0x64, 0x43, 0xa5, 0x54, 0xa5, 0xcc, 0xf8, 0xdc, 0x67, 0x05, 0x7d, 0xf6, 0x16, 0x7c,
	0x86, 0x15, 0x55, 0x1b, 0x0d, 0x60, 0x0b, 0x8d, 0xc6, 0x85, 0x52, 0x6c, 0x9e, 0xbb, 0x8a, 0xb9,
	0x9b, 0x5e, 0x3a, 0xf6, 0x4a, 0xcd, 0xbf, 0x84, 0x5d, 0xe4, 0x0b, 0x4b, 0x6f, 0x59, 0x72, 0x0d,
	0xd3, 0x1e, 0x7a, 0xe2, 0xcc, 0xd2, 0x1b, 0x8b, 0x9d, 0xc1, 0x93, 0x3a, 0x79, 0x6c, 0x68, 0x3e,
	0xe1, 0xd2, 0xdd, 0xe2, 0xf2, 0x09, 0xba, 0xec, 0x57, 0x2e, 0xc7, 0x15, 0x78, 0xc3, 0xed, 0x39,
	0xc4, 0xb5, 0x1b, 0xe3, 0x05, 0x77, 0x0d, 0x8b, 0xbb, 0x68, 0xb1, 0x53, 0x59, 0x8c, 0x50, 0xad,
	0x13, 0x4f, 0xe0, 0x8b, 0x9b, 0xaf, 0xb1, 0xec, 0x70, 0x6f, 0x7e, 0x7a, 0x8d, 0x97, 0x58, 0x72,
	0x1a, 0x02, 0x02, 0xc4, 0x95, 0x52, 0xf2, 0xe2, 0x96, 0xad, 0xb4, 0xd0, 0x05, 0x8f, 0xec, 0x02,
	0x99, 0xe5, 0x5d, 0xf4, 0xfe, 0x59, 0x83, 0x9d, 0xa5, 0x4e, 0xa1, 0x99, 0x13, 0xef, 0x79, 0xf4,
	0x15, 0xdc, 0x17, 0xd2, 0x71, 0x33, 0xa6, 0x19, 0xb7, 0x24, 0x53, 0xa5, 0x74, 0x55, 0x6f, 0x74,
	0xe7, 0xf1, 0x23, 0x1f, 0x8e, 0xbe, 0x86, 0xcd, 0x42, 0xc8, 0x3f, 0x88, 0x60, 0x8e, 0x18, 0x9e,
	0x71, 0xf1, 0x9e, 0x33, 0xac, 0x7f, 0x2b, 0xed, 0x7a, 0xe1, 0x94, 0xb9, 0xb4, 0x0a, 0x47, 0x09,
	0xec, 0x38, 0xa5, 0x55, 0xa1, 0xf2, 0xe9, 0x22, 0xbf, 0x8a, 0xfc, 0xd6, 0x4c, 0x6c, 0xe6, 0x3c,
	0x86, 0xb6, 0x35, 0xc4, 0x3a, 0x23, 0x32, 0x87, 0x45, 0x6e, 0xa5, 0x2d, 0x6b, 0xce, 0xf1, 0x39,
	0xfa, 0x12, 0xba, 0x3a, 0xd1, 0xe4, 0x8a, 0x53, 0x36, 0x7b, 0xcd, 0x50, 0xc1, 0x75, 0x9d, 0xe8,
	0x13, 0x1f, 0x0d, 0x2f, 0x39, 0x84, 0x3d, 0xcf, 0xd1, 0xd2, 0x29, 0xa3, 0x4a, 0xc7, 0xeb, 0xe3,
	0x62, 0x55, 0x56, 0x28, 0xda, 0xae, 0x4e, 0xf4, 0x70, 0xc6, 0xcc, 0x8e, 0x8b, 0x05, 0x8b, 0x23,
	0xf8, 0xdc, 0x5b, 0x8c, 0x95, 0xb9, 0xa6, 0x86, 0x09, 0x99, 0x37, 0x06, 0x20, 0x78, 0x84, 0xb2,
	0x3d, 0xd6, 0x89, 0x3e, 0xae, 0xa1, 0xba, 0xfb, 0x83, 0xc9, 0x21, 0x3c, 0xd0, 0xc9, 0x44, 0x13,
	0xc6, 0xad, 0x13, 0x92, 0x3a, 0xa1, 0x64, 0x95, 0x1c, 0xaa, 0xb5, 0xed, 0xd5, 0xd1, 0x5c, 0xac,
	0x8f, 0xb8, 0xaa, 0x72, 0xa1, 0x94, 0xe5, 0xe4, 0x4a, 0x69, 0x1b, 0xb7, 0x43, 0x39, 0x82, 0x70,
	0xe6, 0xe3, 0x27, 0x4a, 0xdb, 0xc8, 0x42, 0xb7, 0x1e, 0x79, 0x61, 0x9d, 0xc8, 0x6c, 0x0c, 0x07,
	0x77, 0xfa, 0x9d, 0xe4, 0xe7, 0xc1, 0xff, 0xb9, 0x9c, 0x06, 0xb7, 0xdd, 0x24, 0xe9, 0x86, 0xff,
	0x7f, 0x5e, 0xaf, 0xd0, 0xfb, 0x6b, 0xa5, 0x79, 0x85, 0x79, 0x31, 0xda, 0x03, 0xc0, 0x04, 0x21,
	0x19, 0xff, 0x50, 0xf5, 0x4e, 0xdb, 0x47, 0x4e, 0x7d, 0xc0, 0xdf, 0x62, 0x28, 0xcb, 0x72, 0x72,
	0xc9, 0x4d, 0x75, 0x5f, 0x60, 0xc6, 0x5b, 0x8c, 0xd4, 0xc0, 0x58, 0x99, 0x09, 0x75, 0xd8, 0x20,
	0xed, 0x00, 0x1c, 0x63, 0xc4, 0x97, 0x5e, 0xf8, 0x9a, 0xcb, 0xb1, 0xc8, 0x89, 0xe1, 0x94, 0x4d,
	0xab, 0xee, 0x58, 0x17, 0xf6, 0x08, 0xa3, 0xa9, 0x0f, 0x46, 0x05, 0x74, 0x42, 0x53, 0x13, 0x46,
	0x1d, 0xc5, 0xf6, 0xe8, 0x24, 0xaf, 0x3f, 0xca, 0x61, 0x04, 0xdf, 0x14, 0xc2, 0xef, 0x88, 0x3a,
	0xda, 0xfb, 0x77, 0x0d, 0xda, 0x35, 0x15, 0x3d, 0x82, 0x96, 0x87, 0xdd, 0x54, 0xf3, 0x38, 0xc1,
	0x1d, 0xdc, 0x13, 0xb9, 0xbe, 0x98, 0x6a, 0x1e, 0x3d, 0x81, 0x75, 0x21, 0xad, 0xa3, 0x7e, 0x64,
	0x25, 0x9d, 0xf0, 0xf8, 0x29, 0xea, 0x9f, 0xce, 0x82, 0x6f, 0xe9, 0x84, 0x47, 0x3d, 0x58, 0xf7,
	0xf9, 0x76, 0x6a, 0x1d, 0x9f, 0x10, 0xc1, 0xe2, 0x43, 0x84, 0x3a, 0x22, 0xd7, 0xe7, 0x18, 0x3b,
	0x65, 0xd1, 0x33, 0x78, 0x18, 0x0e, 0xa1, 0x34, 0x9c, 0xf9, 0x4d, 0x60, 0xf3, 0x1a, 0x4f, 0x3f,
	0x43, 0x7a, 0x7b, 0x2e, 0x5f, 0xf0, 0x14, 0xc5, 0x53, 0x16, 0xf5, 0xe1, 0x7e, 0x5e, 0xa8, 0x4b,
	0x5a, 0x34, 0xf8, 0x6f, 0x91, 0xdf, 0x08, 0xf1, 0x9a, 0x1c, 0xc0, 0x96, 0xe5, 0x99, 0x92, 0x8c,
	0x9a, 0x69, 0x03, 0x7e, 0x7e, 0xb0, 0xda, 0x6f, 0xa7, 0x9b, 0xb5, 0x54, 0xf3, 0x2f, 0xe0, 0x51,
	0x70, 0x68, 0x58, 0x13, 0xa5, 0x9d, 0xc8, 0x68, 0x11, 0x7f, 0x87, 0x4b, 0x3c, 0xa8, 0x80, 0x59,
	0xce, 0x2f, 0x41, 0x8d, 0xbe, 0x81, 0x2d, 0x21, 0x49, 0x69, 0xf9, 0xe2, 0x3e, 0x5e, 0x60, 0x52,
	0x57, 0xc8, 0x77, 0x96, 0x2f, 0x6e, 0x21, 0x74, 0x80, 0xe4, 0x19, 0x4e, 0x52, 0xa9, 0xe3, 0xef,
	0xb1, 0x05, 0x36, 0xb0, 0x05, 0xaa, 0xf0, 0x3b, 0xed, 0xb7, 0xb0, 0x80, 0x55, 0x33, 0xf7, 0x32,
	0x7c, 0x69, 0xb2, 0x06, 0x1a, 0x06, 0x2e, 0x81, 0x9d, 0x06, 0xcf, 0xd4, 0xf5, 0x6c, 0x4a, 0x7f,
	0xc0, 0x8c, 0x86, 0xd9, 0x48, 0x5d, 0x57, 0x43, 0xfa, 0x2b, 0xac, 0xf9, 0xa6, 0x88, 0x7f, 0x3c,
	0x58, 0xed, 0x77, 0x92, 0xd1, 0xc7, 0x68, 0xb0, 0x14, 0x1d, 0x2f, 0xef, 0xe2, 0xb7, 0xff, 0xe9,
	0x7f, 0x01, 0x00, 0x00, 0xff, 0xff, 0xfd, 0x2b, 0x53, 0x9f, 0x6f, 0x08, 0x00, 0x00,
}
