/*
Copyright 2019 Cisco Systems

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: mpls_te_p2mp_tunnel_bag.proto

package cisco_ios_xr_mpls_te_oper_mpls_te_p2p_p2mp_tunnel_tunnel_heads_tunnel_head

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type MplsTeP2MpTunnelBag_KEYS struct {
	TunnelName           string   `protobuf:"bytes,1,opt,name=tunnel_name,json=tunnelName,proto3" json:"tunnel_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MplsTeP2MpTunnelBag_KEYS) Reset()         { *m = MplsTeP2MpTunnelBag_KEYS{} }
func (m *MplsTeP2MpTunnelBag_KEYS) String() string { return proto.CompactTextString(m) }
func (*MplsTeP2MpTunnelBag_KEYS) ProtoMessage()    {}
func (*MplsTeP2MpTunnelBag_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_97fd10a364dd9ffd, []int{0}
}

func (m *MplsTeP2MpTunnelBag_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsTeP2MpTunnelBag_KEYS.Unmarshal(m, b)
}
func (m *MplsTeP2MpTunnelBag_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsTeP2MpTunnelBag_KEYS.Marshal(b, m, deterministic)
}
func (m *MplsTeP2MpTunnelBag_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsTeP2MpTunnelBag_KEYS.Merge(m, src)
}
func (m *MplsTeP2MpTunnelBag_KEYS) XXX_Size() int {
	return xxx_messageInfo_MplsTeP2MpTunnelBag_KEYS.Size(m)
}
func (m *MplsTeP2MpTunnelBag_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsTeP2MpTunnelBag_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_MplsTeP2MpTunnelBag_KEYS proto.InternalMessageInfo

func (m *MplsTeP2MpTunnelBag_KEYS) GetTunnelName() string {
	if m != nil {
		return m.TunnelName
	}
	return ""
}

type AffinityNameBag struct {
	ConstraintType          uint32   `protobuf:"varint,1,opt,name=constraint_type,json=constraintType,proto3" json:"constraint_type,omitempty"`
	ConstraintValue         uint32   `protobuf:"varint,2,opt,name=constraint_value,json=constraintValue,proto3" json:"constraint_value,omitempty"`
	ForwardRefValue         uint32   `protobuf:"varint,3,opt,name=forward_ref_value,json=forwardRefValue,proto3" json:"forward_ref_value,omitempty"`
	ConstraintExtendedValue []uint32 `protobuf:"varint,4,rep,packed,name=constraint_extended_value,json=constraintExtendedValue,proto3" json:"constraint_extended_value,omitempty"`
	ExtendedForwardRefValue []uint32 `protobuf:"varint,5,rep,packed,name=extended_forward_ref_value,json=extendedForwardRefValue,proto3" json:"extended_forward_ref_value,omitempty"`
	XXX_NoUnkeyedLiteral    struct{} `json:"-"`
	XXX_unrecognized        []byte   `json:"-"`
	XXX_sizecache           int32    `json:"-"`
}

func (m *AffinityNameBag) Reset()         { *m = AffinityNameBag{} }
func (m *AffinityNameBag) String() string { return proto.CompactTextString(m) }
func (*AffinityNameBag) ProtoMessage()    {}
func (*AffinityNameBag) Descriptor() ([]byte, []int) {
	return fileDescriptor_97fd10a364dd9ffd, []int{1}
}

func (m *AffinityNameBag) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AffinityNameBag.Unmarshal(m, b)
}
func (m *AffinityNameBag) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AffinityNameBag.Marshal(b, m, deterministic)
}
func (m *AffinityNameBag) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AffinityNameBag.Merge(m, src)
}
func (m *AffinityNameBag) XXX_Size() int {
	return xxx_messageInfo_AffinityNameBag.Size(m)
}
func (m *AffinityNameBag) XXX_DiscardUnknown() {
	xxx_messageInfo_AffinityNameBag.DiscardUnknown(m)
}

var xxx_messageInfo_AffinityNameBag proto.InternalMessageInfo

func (m *AffinityNameBag) GetConstraintType() uint32 {
	if m != nil {
		return m.ConstraintType
	}
	return 0
}

func (m *AffinityNameBag) GetConstraintValue() uint32 {
	if m != nil {
		return m.ConstraintValue
	}
	return 0
}

func (m *AffinityNameBag) GetForwardRefValue() uint32 {
	if m != nil {
		return m.ForwardRefValue
	}
	return 0
}

func (m *AffinityNameBag) GetConstraintExtendedValue() []uint32 {
	if m != nil {
		return m.ConstraintExtendedValue
	}
	return nil
}

func (m *AffinityNameBag) GetExtendedForwardRefValue() []uint32 {
	if m != nil {
		return m.ExtendedForwardRefValue
	}
	return nil
}

type MplsTeTunnelsAffinityInfo struct {
	AffinityBits         uint32             `protobuf:"varint,1,opt,name=affinity_bits,json=affinityBits,proto3" json:"affinity_bits,omitempty"`
	AffinityMask         uint32             `protobuf:"varint,2,opt,name=affinity_mask,json=affinityMask,proto3" json:"affinity_mask,omitempty"`
	NamedAffinity        []*AffinityNameBag `protobuf:"bytes,3,rep,name=named_affinity,json=namedAffinity,proto3" json:"named_affinity,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *MplsTeTunnelsAffinityInfo) Reset()         { *m = MplsTeTunnelsAffinityInfo{} }
func (m *MplsTeTunnelsAffinityInfo) String() string { return proto.CompactTextString(m) }
func (*MplsTeTunnelsAffinityInfo) ProtoMessage()    {}
func (*MplsTeTunnelsAffinityInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_97fd10a364dd9ffd, []int{2}
}

func (m *MplsTeTunnelsAffinityInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsTeTunnelsAffinityInfo.Unmarshal(m, b)
}
func (m *MplsTeTunnelsAffinityInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsTeTunnelsAffinityInfo.Marshal(b, m, deterministic)
}
func (m *MplsTeTunnelsAffinityInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsTeTunnelsAffinityInfo.Merge(m, src)
}
func (m *MplsTeTunnelsAffinityInfo) XXX_Size() int {
	return xxx_messageInfo_MplsTeTunnelsAffinityInfo.Size(m)
}
func (m *MplsTeTunnelsAffinityInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsTeTunnelsAffinityInfo.DiscardUnknown(m)
}

var xxx_messageInfo_MplsTeTunnelsAffinityInfo proto.InternalMessageInfo

func (m *MplsTeTunnelsAffinityInfo) GetAffinityBits() uint32 {
	if m != nil {
		return m.AffinityBits
	}
	return 0
}

func (m *MplsTeTunnelsAffinityInfo) GetAffinityMask() uint32 {
	if m != nil {
		return m.AffinityMask
	}
	return 0
}

func (m *MplsTeTunnelsAffinityInfo) GetNamedAffinity() []*AffinityNameBag {
	if m != nil {
		return m.NamedAffinity
	}
	return nil
}

type MplsTeTunnelBidirConfigInfo struct {
	AssociationType      uint32   `protobuf:"varint,1,opt,name=association_type,json=associationType,proto3" json:"association_type,omitempty"`
	AssociationId        uint32   `protobuf:"varint,2,opt,name=association_id,json=associationId,proto3" json:"association_id,omitempty"`
	AssociationSource    string   `protobuf:"bytes,3,opt,name=association_source,json=associationSource,proto3" json:"association_source,omitempty"`
	AssociationGlobalId  uint32   `protobuf:"varint,4,opt,name=association_global_id,json=associationGlobalId,proto3" json:"association_global_id,omitempty"`
	AssociationCorouted  bool     `protobuf:"varint,5,opt,name=association_corouted,json=associationCorouted,proto3" json:"association_corouted,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MplsTeTunnelBidirConfigInfo) Reset()         { *m = MplsTeTunnelBidirConfigInfo{} }
func (m *MplsTeTunnelBidirConfigInfo) String() string { return proto.CompactTextString(m) }
func (*MplsTeTunnelBidirConfigInfo) ProtoMessage()    {}
func (*MplsTeTunnelBidirConfigInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_97fd10a364dd9ffd, []int{3}
}

func (m *MplsTeTunnelBidirConfigInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsTeTunnelBidirConfigInfo.Unmarshal(m, b)
}
func (m *MplsTeTunnelBidirConfigInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsTeTunnelBidirConfigInfo.Marshal(b, m, deterministic)
}
func (m *MplsTeTunnelBidirConfigInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsTeTunnelBidirConfigInfo.Merge(m, src)
}
func (m *MplsTeTunnelBidirConfigInfo) XXX_Size() int {
	return xxx_messageInfo_MplsTeTunnelBidirConfigInfo.Size(m)
}
func (m *MplsTeTunnelBidirConfigInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsTeTunnelBidirConfigInfo.DiscardUnknown(m)
}

var xxx_messageInfo_MplsTeTunnelBidirConfigInfo proto.InternalMessageInfo

func (m *MplsTeTunnelBidirConfigInfo) GetAssociationType() uint32 {
	if m != nil {
		return m.AssociationType
	}
	return 0
}

func (m *MplsTeTunnelBidirConfigInfo) GetAssociationId() uint32 {
	if m != nil {
		return m.AssociationId
	}
	return 0
}

func (m *MplsTeTunnelBidirConfigInfo) GetAssociationSource() string {
	if m != nil {
		return m.AssociationSource
	}
	return ""
}

func (m *MplsTeTunnelBidirConfigInfo) GetAssociationGlobalId() uint32 {
	if m != nil {
		return m.AssociationGlobalId
	}
	return 0
}

func (m *MplsTeTunnelBidirConfigInfo) GetAssociationCorouted() bool {
	if m != nil {
		return m.AssociationCorouted
	}
	return false
}

type MplsTeTunnelBfdConfigInfo struct {
	BfdFastDetectingEnabled        bool     `protobuf:"varint,1,opt,name=bfd_fast_detecting_enabled,json=bfdFastDetectingEnabled,proto3" json:"bfd_fast_detecting_enabled,omitempty"`
	BfdType                        string   `protobuf:"bytes,2,opt,name=bfd_type,json=bfdType,proto3" json:"bfd_type,omitempty"`
	MinInterval                    uint32   `protobuf:"varint,3,opt,name=min_interval,json=minInterval,proto3" json:"min_interval,omitempty"`
	MinIntervalDefault             bool     `protobuf:"varint,4,opt,name=min_interval_default,json=minIntervalDefault,proto3" json:"min_interval_default,omitempty"`
	Multiplier                     uint32   `protobuf:"varint,5,opt,name=multiplier,proto3" json:"multiplier,omitempty"`
	MultiplierDefault              bool     `protobuf:"varint,6,opt,name=multiplier_default,json=multiplierDefault,proto3" json:"multiplier_default,omitempty"`
	BringUpTimeout                 uint32   `protobuf:"varint,7,opt,name=bring_up_timeout,json=bringUpTimeout,proto3" json:"bring_up_timeout,omitempty"`
	BringUpTimeoutDefault          bool     `protobuf:"varint,8,opt,name=bring_up_timeout_default,json=bringUpTimeoutDefault,proto3" json:"bring_up_timeout_default,omitempty"`
	DampeningInitialWait           uint32   `protobuf:"varint,9,opt,name=dampening_initial_wait,json=dampeningInitialWait,proto3" json:"dampening_initial_wait,omitempty"`
	DampeningInitialWaitDefault    bool     `protobuf:"varint,10,opt,name=dampening_initial_wait_default,json=dampeningInitialWaitDefault,proto3" json:"dampening_initial_wait_default,omitempty"`
	DampeningMaxWait               uint32   `protobuf:"varint,11,opt,name=dampening_max_wait,json=dampeningMaxWait,proto3" json:"dampening_max_wait,omitempty"`
	DampeningMaxWaitDefault        bool     `protobuf:"varint,12,opt,name=dampening_max_wait_default,json=dampeningMaxWaitDefault,proto3" json:"dampening_max_wait_default,omitempty"`
	DampeningSecondaryWait         uint32   `protobuf:"varint,13,opt,name=dampening_secondary_wait,json=dampeningSecondaryWait,proto3" json:"dampening_secondary_wait,omitempty"`
	DampeningSecondaryWaitDefault  bool     `protobuf:"varint,14,opt,name=dampening_secondary_wait_default,json=dampeningSecondaryWaitDefault,proto3" json:"dampening_secondary_wait_default,omitempty"`
	PeriodicLspPingDisabled        bool     `protobuf:"varint,15,opt,name=periodic_lsp_ping_disabled,json=periodicLspPingDisabled,proto3" json:"periodic_lsp_ping_disabled,omitempty"`
	PeriodicLspPingInterval        uint32   `protobuf:"varint,16,opt,name=periodic_lsp_ping_interval,json=periodicLspPingInterval,proto3" json:"periodic_lsp_ping_interval,omitempty"`
	PeriodicLspPingIntervalDefault bool     `protobuf:"varint,17,opt,name=periodic_lsp_ping_interval_default,json=periodicLspPingIntervalDefault,proto3" json:"periodic_lsp_ping_interval_default,omitempty"`
	BfdSessionDownAction           string   `protobuf:"bytes,18,opt,name=bfd_session_down_action,json=bfdSessionDownAction,proto3" json:"bfd_session_down_action,omitempty"`
	BfdSessionDownReoptTimeout     uint32   `protobuf:"varint,19,opt,name=bfd_session_down_reopt_timeout,json=bfdSessionDownReoptTimeout,proto3" json:"bfd_session_down_reopt_timeout,omitempty"`
	BfdEncapMode                   string   `protobuf:"bytes,20,opt,name=bfd_encap_mode,json=bfdEncapMode,proto3" json:"bfd_encap_mode,omitempty"`
	SbfdTargetId                   string   `protobuf:"bytes,21,opt,name=sbfd_target_id,json=sbfdTargetId,proto3" json:"sbfd_target_id,omitempty"`
	XXX_NoUnkeyedLiteral           struct{} `json:"-"`
	XXX_unrecognized               []byte   `json:"-"`
	XXX_sizecache                  int32    `json:"-"`
}

func (m *MplsTeTunnelBfdConfigInfo) Reset()         { *m = MplsTeTunnelBfdConfigInfo{} }
func (m *MplsTeTunnelBfdConfigInfo) String() string { return proto.CompactTextString(m) }
func (*MplsTeTunnelBfdConfigInfo) ProtoMessage()    {}
func (*MplsTeTunnelBfdConfigInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_97fd10a364dd9ffd, []int{4}
}

func (m *MplsTeTunnelBfdConfigInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsTeTunnelBfdConfigInfo.Unmarshal(m, b)
}
func (m *MplsTeTunnelBfdConfigInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsTeTunnelBfdConfigInfo.Marshal(b, m, deterministic)
}
func (m *MplsTeTunnelBfdConfigInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsTeTunnelBfdConfigInfo.Merge(m, src)
}
func (m *MplsTeTunnelBfdConfigInfo) XXX_Size() int {
	return xxx_messageInfo_MplsTeTunnelBfdConfigInfo.Size(m)
}
func (m *MplsTeTunnelBfdConfigInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsTeTunnelBfdConfigInfo.DiscardUnknown(m)
}

var xxx_messageInfo_MplsTeTunnelBfdConfigInfo proto.InternalMessageInfo

func (m *MplsTeTunnelBfdConfigInfo) GetBfdFastDetectingEnabled() bool {
	if m != nil {
		return m.BfdFastDetectingEnabled
	}
	return false
}

func (m *MplsTeTunnelBfdConfigInfo) GetBfdType() string {
	if m != nil {
		return m.BfdType
	}
	return ""
}

func (m *MplsTeTunnelBfdConfigInfo) GetMinInterval() uint32 {
	if m != nil {
		return m.MinInterval
	}
	return 0
}

func (m *MplsTeTunnelBfdConfigInfo) GetMinIntervalDefault() bool {
	if m != nil {
		return m.MinIntervalDefault
	}
	return false
}

func (m *MplsTeTunnelBfdConfigInfo) GetMultiplier() uint32 {
	if m != nil {
		return m.Multiplier
	}
	return 0
}

func (m *MplsTeTunnelBfdConfigInfo) GetMultiplierDefault() bool {
	if m != nil {
		return m.MultiplierDefault
	}
	return false
}

func (m *MplsTeTunnelBfdConfigInfo) GetBringUpTimeout() uint32 {
	if m != nil {
		return m.BringUpTimeout
	}
	return 0
}

func (m *MplsTeTunnelBfdConfigInfo) GetBringUpTimeoutDefault() bool {
	if m != nil {
		return m.BringUpTimeoutDefault
	}
	return false
}

func (m *MplsTeTunnelBfdConfigInfo) GetDampeningInitialWait() uint32 {
	if m != nil {
		return m.DampeningInitialWait
	}
	return 0
}

func (m *MplsTeTunnelBfdConfigInfo) GetDampeningInitialWaitDefault() bool {
	if m != nil {
		return m.DampeningInitialWaitDefault
	}
	return false
}

func (m *MplsTeTunnelBfdConfigInfo) GetDampeningMaxWait() uint32 {
	if m != nil {
		return m.DampeningMaxWait
	}
	return 0
}

func (m *MplsTeTunnelBfdConfigInfo) GetDampeningMaxWaitDefault() bool {
	if m != nil {
		return m.DampeningMaxWaitDefault
	}
	return false
}

func (m *MplsTeTunnelBfdConfigInfo) GetDampeningSecondaryWait() uint32 {
	if m != nil {
		return m.DampeningSecondaryWait
	}
	return 0
}

func (m *MplsTeTunnelBfdConfigInfo) GetDampeningSecondaryWaitDefault() bool {
	if m != nil {
		return m.DampeningSecondaryWaitDefault
	}
	return false
}

func (m *MplsTeTunnelBfdConfigInfo) GetPeriodicLspPingDisabled() bool {
	if m != nil {
		return m.PeriodicLspPingDisabled
	}
	return false
}

func (m *MplsTeTunnelBfdConfigInfo) GetPeriodicLspPingInterval() uint32 {
	if m != nil {
		return m.PeriodicLspPingInterval
	}
	return 0
}

func (m *MplsTeTunnelBfdConfigInfo) GetPeriodicLspPingIntervalDefault() bool {
	if m != nil {
		return m.PeriodicLspPingIntervalDefault
	}
	return false
}

func (m *MplsTeTunnelBfdConfigInfo) GetBfdSessionDownAction() string {
	if m != nil {
		return m.BfdSessionDownAction
	}
	return ""
}

func (m *MplsTeTunnelBfdConfigInfo) GetBfdSessionDownReoptTimeout() uint32 {
	if m != nil {
		return m.BfdSessionDownReoptTimeout
	}
	return 0
}

func (m *MplsTeTunnelBfdConfigInfo) GetBfdEncapMode() string {
	if m != nil {
		return m.BfdEncapMode
	}
	return ""
}

func (m *MplsTeTunnelBfdConfigInfo) GetSbfdTargetId() string {
	if m != nil {
		return m.SbfdTargetId
	}
	return ""
}

type MplsTeAutorouteDestinationBag struct {
	DestinationAddress   string   `protobuf:"bytes,1,opt,name=destination_address,json=destinationAddress,proto3" json:"destination_address,omitempty"`
	PrefixLength         uint32   `protobuf:"varint,2,opt,name=prefix_length,json=prefixLength,proto3" json:"prefix_length,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MplsTeAutorouteDestinationBag) Reset()         { *m = MplsTeAutorouteDestinationBag{} }
func (m *MplsTeAutorouteDestinationBag) String() string { return proto.CompactTextString(m) }
func (*MplsTeAutorouteDestinationBag) ProtoMessage()    {}
func (*MplsTeAutorouteDestinationBag) Descriptor() ([]byte, []int) {
	return fileDescriptor_97fd10a364dd9ffd, []int{5}
}

func (m *MplsTeAutorouteDestinationBag) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsTeAutorouteDestinationBag.Unmarshal(m, b)
}
func (m *MplsTeAutorouteDestinationBag) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsTeAutorouteDestinationBag.Marshal(b, m, deterministic)
}
func (m *MplsTeAutorouteDestinationBag) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsTeAutorouteDestinationBag.Merge(m, src)
}
func (m *MplsTeAutorouteDestinationBag) XXX_Size() int {
	return xxx_messageInfo_MplsTeAutorouteDestinationBag.Size(m)
}
func (m *MplsTeAutorouteDestinationBag) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsTeAutorouteDestinationBag.DiscardUnknown(m)
}

var xxx_messageInfo_MplsTeAutorouteDestinationBag proto.InternalMessageInfo

func (m *MplsTeAutorouteDestinationBag) GetDestinationAddress() string {
	if m != nil {
		return m.DestinationAddress
	}
	return ""
}

func (m *MplsTeAutorouteDestinationBag) GetPrefixLength() uint32 {
	if m != nil {
		return m.PrefixLength
	}
	return 0
}

type MplsTeTunnelLogging struct {
	All                    bool     `protobuf:"varint,1,opt,name=all,proto3" json:"all,omitempty"`
	Reoptimize             bool     `protobuf:"varint,2,opt,name=reoptimize,proto3" json:"reoptimize,omitempty"`
	State                  bool     `protobuf:"varint,3,opt,name=state,proto3" json:"state,omitempty"`
	Reroute                bool     `protobuf:"varint,4,opt,name=reroute,proto3" json:"reroute,omitempty"`
	BandwidthChange        bool     `protobuf:"varint,5,opt,name=bandwidth_change,json=bandwidthChange,proto3" json:"bandwidth_change,omitempty"`
	Switchover             bool     `protobuf:"varint,6,opt,name=switchover,proto3" json:"switchover,omitempty"`
	RecordRoute            bool     `protobuf:"varint,7,opt,name=record_route,json=recordRoute,proto3" json:"record_route,omitempty"`
	PathCalculationFailure bool     `protobuf:"varint,8,opt,name=path_calculation_failure,json=pathCalculationFailure,proto3" json:"path_calculation_failure,omitempty"`
	ReoptimizationAttempt  bool     `protobuf:"varint,9,opt,name=reoptimization_attempt,json=reoptimizationAttempt,proto3" json:"reoptimization_attempt,omitempty"`
	InsufficientBandwidth  bool     `protobuf:"varint,10,opt,name=insufficient_bandwidth,json=insufficientBandwidth,proto3" json:"insufficient_bandwidth,omitempty"`
	XXX_NoUnkeyedLiteral   struct{} `json:"-"`
	XXX_unrecognized       []byte   `json:"-"`
	XXX_sizecache          int32    `json:"-"`
}

func (m *MplsTeTunnelLogging) Reset()         { *m = MplsTeTunnelLogging{} }
func (m *MplsTeTunnelLogging) String() string { return proto.CompactTextString(m) }
func (*MplsTeTunnelLogging) ProtoMessage()    {}
func (*MplsTeTunnelLogging) Descriptor() ([]byte, []int) {
	return fileDescriptor_97fd10a364dd9ffd, []int{6}
}

func (m *MplsTeTunnelLogging) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsTeTunnelLogging.Unmarshal(m, b)
}
func (m *MplsTeTunnelLogging) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsTeTunnelLogging.Marshal(b, m, deterministic)
}
func (m *MplsTeTunnelLogging) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsTeTunnelLogging.Merge(m, src)
}
func (m *MplsTeTunnelLogging) XXX_Size() int {
	return xxx_messageInfo_MplsTeTunnelLogging.Size(m)
}
func (m *MplsTeTunnelLogging) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsTeTunnelLogging.DiscardUnknown(m)
}

var xxx_messageInfo_MplsTeTunnelLogging proto.InternalMessageInfo

func (m *MplsTeTunnelLogging) GetAll() bool {
	if m != nil {
		return m.All
	}
	return false
}

func (m *MplsTeTunnelLogging) GetReoptimize() bool {
	if m != nil {
		return m.Reoptimize
	}
	return false
}

func (m *MplsTeTunnelLogging) GetState() bool {
	if m != nil {
		return m.State
	}
	return false
}

func (m *MplsTeTunnelLogging) GetReroute() bool {
	if m != nil {
		return m.Reroute
	}
	return false
}

func (m *MplsTeTunnelLogging) GetBandwidthChange() bool {
	if m != nil {
		return m.BandwidthChange
	}
	return false
}

func (m *MplsTeTunnelLogging) GetSwitchover() bool {
	if m != nil {
		return m.Switchover
	}
	return false
}

func (m *MplsTeTunnelLogging) GetRecordRoute() bool {
	if m != nil {
		return m.RecordRoute
	}
	return false
}

func (m *MplsTeTunnelLogging) GetPathCalculationFailure() bool {
	if m != nil {
		return m.PathCalculationFailure
	}
	return false
}

func (m *MplsTeTunnelLogging) GetReoptimizationAttempt() bool {
	if m != nil {
		return m.ReoptimizationAttempt
	}
	return false
}

func (m *MplsTeTunnelLogging) GetInsufficientBandwidth() bool {
	if m != nil {
		return m.InsufficientBandwidth
	}
	return false
}

type MplsTeP2MpTunCfgBag struct {
	TunnelName                    string                           `protobuf:"bytes,1,opt,name=tunnel_name,json=tunnelName,proto3" json:"tunnel_name,omitempty"`
	TunnelId                      uint32                           `protobuf:"varint,2,opt,name=tunnel_id,json=tunnelId,proto3" json:"tunnel_id,omitempty"`
	IsP2Mp                        bool                             `protobuf:"varint,3,opt,name=is_p2mp,json=isP2mp,proto3" json:"is_p2mp,omitempty"`
	SignaledName                  string                           `protobuf:"bytes,4,opt,name=signaled_name,json=signaledName,proto3" json:"signaled_name,omitempty"`
	ConfiguredBandwidth           uint32                           `protobuf:"varint,5,opt,name=configured_bandwidth,json=configuredBandwidth,proto3" json:"configured_bandwidth,omitempty"`
	InterfaceConfiguredBandwidth  uint32                           `protobuf:"varint,6,opt,name=interface_configured_bandwidth,json=interfaceConfiguredBandwidth,proto3" json:"interface_configured_bandwidth,omitempty"`
	BandwidthType                 string                           `protobuf:"bytes,7,opt,name=bandwidth_type,json=bandwidthType,proto3" json:"bandwidth_type,omitempty"`
	SetupPriority                 uint32                           `protobuf:"varint,8,opt,name=setup_priority,json=setupPriority,proto3" json:"setup_priority,omitempty"`
	HoldPriority                  uint32                           `protobuf:"varint,9,opt,name=hold_priority,json=holdPriority,proto3" json:"hold_priority,omitempty"`
	PolicyClass                   uint32                           `protobuf:"varint,10,opt,name=policy_class,json=policyClass,proto3" json:"policy_class,omitempty"`
	PolicyClassEntry              []uint32                         `protobuf:"varint,11,rep,packed,name=policy_class_entry,json=policyClassEntry,proto3" json:"policy_class_entry,omitempty"`
	ForwardClass                  uint32                           `protobuf:"varint,12,opt,name=forward_class,json=forwardClass,proto3" json:"forward_class,omitempty"`
	IsForwardClassConfigured      bool                             `protobuf:"varint,13,opt,name=is_forward_class_configured,json=isForwardClassConfigured,proto3" json:"is_forward_class_configured,omitempty"`
	Affinity                      *MplsTeTunnelsAffinityInfo       `protobuf:"bytes,14,opt,name=affinity,proto3" json:"affinity,omitempty"`
	BackupBandwidth               uint32                           `protobuf:"varint,15,opt,name=backup_bandwidth,json=backupBandwidth,proto3" json:"backup_bandwidth,omitempty"`
	BackupBandwidthFlags          uint32                           `protobuf:"varint,16,opt,name=backup_bandwidth_flags,json=backupBandwidthFlags,proto3" json:"backup_bandwidth_flags,omitempty"`
	ConfigLoadShare               uint32                           `protobuf:"varint,17,opt,name=config_load_share,json=configLoadShare,proto3" json:"config_load_share,omitempty"`
	PayloadType                   uint32                           `protobuf:"varint,18,opt,name=payload_type,json=payloadType,proto3" json:"payload_type,omitempty"`
	IsInConfig                    bool                             `protobuf:"varint,19,opt,name=is_in_config,json=isInConfig,proto3" json:"is_in_config,omitempty"`
	ExplicitNullImposition        bool                             `protobuf:"varint,20,opt,name=explicit_null_imposition,json=explicitNullImposition,proto3" json:"explicit_null_imposition,omitempty"`
	FastReroute                   bool                             `protobuf:"varint,21,opt,name=fast_reroute,json=fastReroute,proto3" json:"fast_reroute,omitempty"`
	IsBackupTunnel                bool                             `protobuf:"varint,22,opt,name=is_backup_tunnel,json=isBackupTunnel,proto3" json:"is_backup_tunnel,omitempty"`
	RecordRoute                   bool                             `protobuf:"varint,23,opt,name=record_route,json=recordRoute,proto3" json:"record_route,omitempty"`
	SrlgDiscovery                 bool                             `protobuf:"varint,24,opt,name=srlg_discovery,json=srlgDiscovery,proto3" json:"srlg_discovery,omitempty"`
	PathProtectionEnabled         bool                             `protobuf:"varint,25,opt,name=path_protection_enabled,json=pathProtectionEnabled,proto3" json:"path_protection_enabled,omitempty"`
	HopLimit                      uint32                           `protobuf:"varint,26,opt,name=hop_limit,json=hopLimit,proto3" json:"hop_limit,omitempty"`
	CostLimit                     uint32                           `protobuf:"varint,27,opt,name=cost_limit,json=costLimit,proto3" json:"cost_limit,omitempty"`
	CostLimitGlobal               uint32                           `protobuf:"varint,28,opt,name=cost_limit_global,json=costLimitGlobal,proto3" json:"cost_limit_global,omitempty"`
	DelayLimit                    uint32                           `protobuf:"varint,29,opt,name=delay_limit,json=delayLimit,proto3" json:"delay_limit,omitempty"`
	DelayLimitGlobal              uint32                           `protobuf:"varint,30,opt,name=delay_limit_global,json=delayLimitGlobal,proto3" json:"delay_limit_global,omitempty"`
	PathInvalidationTimeoutSource uint32                           `protobuf:"varint,31,opt,name=path_invalidation_timeout_source,json=pathInvalidationTimeoutSource,proto3" json:"path_invalidation_timeout_source,omitempty"`
	PathInvalidationTimeout       uint32                           `protobuf:"varint,32,opt,name=path_invalidation_timeout,json=pathInvalidationTimeout,proto3" json:"path_invalidation_timeout,omitempty"`
	PathInvalidationActionSource  uint32                           `protobuf:"varint,33,opt,name=path_invalidation_action_source,json=pathInvalidationActionSource,proto3" json:"path_invalidation_action_source,omitempty"`
	PathInvalidationAction        uint32                           `protobuf:"varint,34,opt,name=path_invalidation_action,json=pathInvalidationAction,proto3" json:"path_invalidation_action,omitempty"`
	SoftPreempt                   bool                             `protobuf:"varint,35,opt,name=soft_preempt,json=softPreempt,proto3" json:"soft_preempt,omitempty"`
	BidirectionalConfig           *MplsTeTunnelBidirConfigInfo     `protobuf:"bytes,36,opt,name=bidirectional_config,json=bidirectionalConfig,proto3" json:"bidirectional_config,omitempty"`
	BfdConfig                     *MplsTeTunnelBfdConfigInfo       `protobuf:"bytes,37,opt,name=bfd_config,json=bfdConfig,proto3" json:"bfd_config,omitempty"`
	DisableAffinityFailureReopt   bool                             `protobuf:"varint,38,opt,name=disable_affinity_failure_reopt,json=disableAffinityFailureReopt,proto3" json:"disable_affinity_failure_reopt,omitempty"`
	AffinityFailureReoptTimer     uint32                           `protobuf:"varint,39,opt,name=affinity_failure_reopt_timer,json=affinityFailureReoptTimer,proto3" json:"affinity_failure_reopt_timer,omitempty"`
	SegmentRoutingPathSelection   string                           `protobuf:"bytes,40,opt,name=segment_routing_path_selection,json=segmentRoutingPathSelection,proto3" json:"segment_routing_path_selection,omitempty"`
	AutorouteDestination          []*MplsTeAutorouteDestinationBag `protobuf:"bytes,41,rep,name=autoroute_destination,json=autorouteDestination,proto3" json:"autoroute_destination,omitempty"`
	Logging                       *MplsTeTunnelLogging             `protobuf:"bytes,42,opt,name=logging,proto3" json:"logging,omitempty"`
	XXX_NoUnkeyedLiteral          struct{}                         `json:"-"`
	XXX_unrecognized              []byte                           `json:"-"`
	XXX_sizecache                 int32                            `json:"-"`
}

func (m *MplsTeP2MpTunCfgBag) Reset()         { *m = MplsTeP2MpTunCfgBag{} }
func (m *MplsTeP2MpTunCfgBag) String() string { return proto.CompactTextString(m) }
func (*MplsTeP2MpTunCfgBag) ProtoMessage()    {}
func (*MplsTeP2MpTunCfgBag) Descriptor() ([]byte, []int) {
	return fileDescriptor_97fd10a364dd9ffd, []int{7}
}

func (m *MplsTeP2MpTunCfgBag) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsTeP2MpTunCfgBag.Unmarshal(m, b)
}
func (m *MplsTeP2MpTunCfgBag) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsTeP2MpTunCfgBag.Marshal(b, m, deterministic)
}
func (m *MplsTeP2MpTunCfgBag) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsTeP2MpTunCfgBag.Merge(m, src)
}
func (m *MplsTeP2MpTunCfgBag) XXX_Size() int {
	return xxx_messageInfo_MplsTeP2MpTunCfgBag.Size(m)
}
func (m *MplsTeP2MpTunCfgBag) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsTeP2MpTunCfgBag.DiscardUnknown(m)
}

var xxx_messageInfo_MplsTeP2MpTunCfgBag proto.InternalMessageInfo

func (m *MplsTeP2MpTunCfgBag) GetTunnelName() string {
	if m != nil {
		return m.TunnelName
	}
	return ""
}

func (m *MplsTeP2MpTunCfgBag) GetTunnelId() uint32 {
	if m != nil {
		return m.TunnelId
	}
	return 0
}

func (m *MplsTeP2MpTunCfgBag) GetIsP2Mp() bool {
	if m != nil {
		return m.IsP2Mp
	}
	return false
}

func (m *MplsTeP2MpTunCfgBag) GetSignaledName() string {
	if m != nil {
		return m.SignaledName
	}
	return ""
}

func (m *MplsTeP2MpTunCfgBag) GetConfiguredBandwidth() uint32 {
	if m != nil {
		return m.ConfiguredBandwidth
	}
	return 0
}

func (m *MplsTeP2MpTunCfgBag) GetInterfaceConfiguredBandwidth() uint32 {
	if m != nil {
		return m.InterfaceConfiguredBandwidth
	}
	return 0
}

func (m *MplsTeP2MpTunCfgBag) GetBandwidthType() string {
	if m != nil {
		return m.BandwidthType
	}
	return ""
}

func (m *MplsTeP2MpTunCfgBag) GetSetupPriority() uint32 {
	if m != nil {
		return m.SetupPriority
	}
	return 0
}

func (m *MplsTeP2MpTunCfgBag) GetHoldPriority() uint32 {
	if m != nil {
		return m.HoldPriority
	}
	return 0
}

func (m *MplsTeP2MpTunCfgBag) GetPolicyClass() uint32 {
	if m != nil {
		return m.PolicyClass
	}
	return 0
}

func (m *MplsTeP2MpTunCfgBag) GetPolicyClassEntry() []uint32 {
	if m != nil {
		return m.PolicyClassEntry
	}
	return nil
}

func (m *MplsTeP2MpTunCfgBag) GetForwardClass() uint32 {
	if m != nil {
		return m.ForwardClass
	}
	return 0
}

func (m *MplsTeP2MpTunCfgBag) GetIsForwardClassConfigured() bool {
	if m != nil {
		return m.IsForwardClassConfigured
	}
	return false
}

func (m *MplsTeP2MpTunCfgBag) GetAffinity() *MplsTeTunnelsAffinityInfo {
	if m != nil {
		return m.Affinity
	}
	return nil
}

func (m *MplsTeP2MpTunCfgBag) GetBackupBandwidth() uint32 {
	if m != nil {
		return m.BackupBandwidth
	}
	return 0
}

func (m *MplsTeP2MpTunCfgBag) GetBackupBandwidthFlags() uint32 {
	if m != nil {
		return m.BackupBandwidthFlags
	}
	return 0
}

func (m *MplsTeP2MpTunCfgBag) GetConfigLoadShare() uint32 {
	if m != nil {
		return m.ConfigLoadShare
	}
	return 0
}

func (m *MplsTeP2MpTunCfgBag) GetPayloadType() uint32 {
	if m != nil {
		return m.PayloadType
	}
	return 0
}

func (m *MplsTeP2MpTunCfgBag) GetIsInConfig() bool {
	if m != nil {
		return m.IsInConfig
	}
	return false
}

func (m *MplsTeP2MpTunCfgBag) GetExplicitNullImposition() bool {
	if m != nil {
		return m.ExplicitNullImposition
	}
	return false
}

func (m *MplsTeP2MpTunCfgBag) GetFastReroute() bool {
	if m != nil {
		return m.FastReroute
	}
	return false
}

func (m *MplsTeP2MpTunCfgBag) GetIsBackupTunnel() bool {
	if m != nil {
		return m.IsBackupTunnel
	}
	return false
}

func (m *MplsTeP2MpTunCfgBag) GetRecordRoute() bool {
	if m != nil {
		return m.RecordRoute
	}
	return false
}

func (m *MplsTeP2MpTunCfgBag) GetSrlgDiscovery() bool {
	if m != nil {
		return m.SrlgDiscovery
	}
	return false
}

func (m *MplsTeP2MpTunCfgBag) GetPathProtectionEnabled() bool {
	if m != nil {
		return m.PathProtectionEnabled
	}
	return false
}

func (m *MplsTeP2MpTunCfgBag) GetHopLimit() uint32 {
	if m != nil {
		return m.HopLimit
	}
	return 0
}

func (m *MplsTeP2MpTunCfgBag) GetCostLimit() uint32 {
	if m != nil {
		return m.CostLimit
	}
	return 0
}

func (m *MplsTeP2MpTunCfgBag) GetCostLimitGlobal() uint32 {
	if m != nil {
		return m.CostLimitGlobal
	}
	return 0
}

func (m *MplsTeP2MpTunCfgBag) GetDelayLimit() uint32 {
	if m != nil {
		return m.DelayLimit
	}
	return 0
}

func (m *MplsTeP2MpTunCfgBag) GetDelayLimitGlobal() uint32 {
	if m != nil {
		return m.DelayLimitGlobal
	}
	return 0
}

func (m *MplsTeP2MpTunCfgBag) GetPathInvalidationTimeoutSource() uint32 {
	if m != nil {
		return m.PathInvalidationTimeoutSource
	}
	return 0
}

func (m *MplsTeP2MpTunCfgBag) GetPathInvalidationTimeout() uint32 {
	if m != nil {
		return m.PathInvalidationTimeout
	}
	return 0
}

func (m *MplsTeP2MpTunCfgBag) GetPathInvalidationActionSource() uint32 {
	if m != nil {
		return m.PathInvalidationActionSource
	}
	return 0
}

func (m *MplsTeP2MpTunCfgBag) GetPathInvalidationAction() uint32 {
	if m != nil {
		return m.PathInvalidationAction
	}
	return 0
}

func (m *MplsTeP2MpTunCfgBag) GetSoftPreempt() bool {
	if m != nil {
		return m.SoftPreempt
	}
	return false
}

func (m *MplsTeP2MpTunCfgBag) GetBidirectionalConfig() *MplsTeTunnelBidirConfigInfo {
	if m != nil {
		return m.BidirectionalConfig
	}
	return nil
}

func (m *MplsTeP2MpTunCfgBag) GetBfdConfig() *MplsTeTunnelBfdConfigInfo {
	if m != nil {
		return m.BfdConfig
	}
	return nil
}

func (m *MplsTeP2MpTunCfgBag) GetDisableAffinityFailureReopt() bool {
	if m != nil {
		return m.DisableAffinityFailureReopt
	}
	return false
}

func (m *MplsTeP2MpTunCfgBag) GetAffinityFailureReoptTimer() uint32 {
	if m != nil {
		return m.AffinityFailureReoptTimer
	}
	return 0
}

func (m *MplsTeP2MpTunCfgBag) GetSegmentRoutingPathSelection() string {
	if m != nil {
		return m.SegmentRoutingPathSelection
	}
	return ""
}

func (m *MplsTeP2MpTunCfgBag) GetAutorouteDestination() []*MplsTeAutorouteDestinationBag {
	if m != nil {
		return m.AutorouteDestination
	}
	return nil
}

func (m *MplsTeP2MpTunCfgBag) GetLogging() *MplsTeTunnelLogging {
	if m != nil {
		return m.Logging
	}
	return nil
}

type MplsTeAttributeSetVersion struct {
	AttributeType        string   `protobuf:"bytes,1,opt,name=attribute_type,json=attributeType,proto3" json:"attribute_type,omitempty"`
	Generation           uint32   `protobuf:"varint,2,opt,name=generation,proto3" json:"generation,omitempty"`
	IsDefault            bool     `protobuf:"varint,3,opt,name=is_default,json=isDefault,proto3" json:"is_default,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MplsTeAttributeSetVersion) Reset()         { *m = MplsTeAttributeSetVersion{} }
func (m *MplsTeAttributeSetVersion) String() string { return proto.CompactTextString(m) }
func (*MplsTeAttributeSetVersion) ProtoMessage()    {}
func (*MplsTeAttributeSetVersion) Descriptor() ([]byte, []int) {
	return fileDescriptor_97fd10a364dd9ffd, []int{8}
}

func (m *MplsTeAttributeSetVersion) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsTeAttributeSetVersion.Unmarshal(m, b)
}
func (m *MplsTeAttributeSetVersion) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsTeAttributeSetVersion.Marshal(b, m, deterministic)
}
func (m *MplsTeAttributeSetVersion) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsTeAttributeSetVersion.Merge(m, src)
}
func (m *MplsTeAttributeSetVersion) XXX_Size() int {
	return xxx_messageInfo_MplsTeAttributeSetVersion.Size(m)
}
func (m *MplsTeAttributeSetVersion) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsTeAttributeSetVersion.DiscardUnknown(m)
}

var xxx_messageInfo_MplsTeAttributeSetVersion proto.InternalMessageInfo

func (m *MplsTeAttributeSetVersion) GetAttributeType() string {
	if m != nil {
		return m.AttributeType
	}
	return ""
}

func (m *MplsTeAttributeSetVersion) GetGeneration() uint32 {
	if m != nil {
		return m.Generation
	}
	return 0
}

func (m *MplsTeAttributeSetVersion) GetIsDefault() bool {
	if m != nil {
		return m.IsDefault
	}
	return false
}

type MplsTeAttributeSetBfdRevPath struct {
	PathType             string   `protobuf:"bytes,1,opt,name=path_type,json=pathType,proto3" json:"path_type,omitempty"`
	BindingLabel         uint32   `protobuf:"varint,2,opt,name=binding_label,json=bindingLabel,proto3" json:"binding_label,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MplsTeAttributeSetBfdRevPath) Reset()         { *m = MplsTeAttributeSetBfdRevPath{} }
func (m *MplsTeAttributeSetBfdRevPath) String() string { return proto.CompactTextString(m) }
func (*MplsTeAttributeSetBfdRevPath) ProtoMessage()    {}
func (*MplsTeAttributeSetBfdRevPath) Descriptor() ([]byte, []int) {
	return fileDescriptor_97fd10a364dd9ffd, []int{9}
}

func (m *MplsTeAttributeSetBfdRevPath) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsTeAttributeSetBfdRevPath.Unmarshal(m, b)
}
func (m *MplsTeAttributeSetBfdRevPath) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsTeAttributeSetBfdRevPath.Marshal(b, m, deterministic)
}
func (m *MplsTeAttributeSetBfdRevPath) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsTeAttributeSetBfdRevPath.Merge(m, src)
}
func (m *MplsTeAttributeSetBfdRevPath) XXX_Size() int {
	return xxx_messageInfo_MplsTeAttributeSetBfdRevPath.Size(m)
}
func (m *MplsTeAttributeSetBfdRevPath) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsTeAttributeSetBfdRevPath.DiscardUnknown(m)
}

var xxx_messageInfo_MplsTeAttributeSetBfdRevPath proto.InternalMessageInfo

func (m *MplsTeAttributeSetBfdRevPath) GetPathType() string {
	if m != nil {
		return m.PathType
	}
	return ""
}

func (m *MplsTeAttributeSetBfdRevPath) GetBindingLabel() uint32 {
	if m != nil {
		return m.BindingLabel
	}
	return 0
}

type MplsTeAttributeSetPathOption struct {
	ConfiguredBandwidth                 uint32                        `protobuf:"varint,1,opt,name=configured_bandwidth,json=configuredBandwidth,proto3" json:"configured_bandwidth,omitempty"`
	CostLimit                           uint32                        `protobuf:"varint,2,opt,name=cost_limit,json=costLimit,proto3" json:"cost_limit,omitempty"`
	DsteClassType                       uint32                        `protobuf:"varint,3,opt,name=dste_class_type,json=dsteClassType,proto3" json:"dste_class_type,omitempty"`
	BandwidthType                       string                        `protobuf:"bytes,4,opt,name=bandwidth_type,json=bandwidthType,proto3" json:"bandwidth_type,omitempty"`
	IsBandwidthConfigured               bool                          `protobuf:"varint,5,opt,name=is_bandwidth_configured,json=isBandwidthConfigured,proto3" json:"is_bandwidth_configured,omitempty"`
	IsCostLimitConfigured               bool                          `protobuf:"varint,6,opt,name=is_cost_limit_configured,json=isCostLimitConfigured,proto3" json:"is_cost_limit_configured,omitempty"`
	Affinity                            *MplsTeTunnelsAffinityInfo    `protobuf:"bytes,7,opt,name=affinity,proto3" json:"affinity,omitempty"`
	IsAffinityConfigured                bool                          `protobuf:"varint,8,opt,name=is_affinity_configured,json=isAffinityConfigured,proto3" json:"is_affinity_configured,omitempty"`
	TunnelId                            []uint32                      `protobuf:"varint,9,rep,packed,name=tunnel_id,json=tunnelId,proto3" json:"tunnel_id,omitempty"`
	Generation                          uint32                        `protobuf:"varint,10,opt,name=generation,proto3" json:"generation,omitempty"`
	VersionInfo                         []*MplsTeAttributeSetVersion  `protobuf:"bytes,11,rep,name=version_info,json=versionInfo,proto3" json:"version_info,omitempty"`
	PathInvalidationTimeout             uint32                        `protobuf:"varint,12,opt,name=path_invalidation_timeout,json=pathInvalidationTimeout,proto3" json:"path_invalidation_timeout,omitempty"`
	PathInvalidationAction              uint32                        `protobuf:"varint,13,opt,name=path_invalidation_action,json=pathInvalidationAction,proto3" json:"path_invalidation_action,omitempty"`
	IsPathInvalidationTimeoutConfigured bool                          `protobuf:"varint,14,opt,name=is_path_invalidation_timeout_configured,json=isPathInvalidationTimeoutConfigured,proto3" json:"is_path_invalidation_timeout_configured,omitempty"`
	IsPathInvalidationActionConfigured  bool                          `protobuf:"varint,15,opt,name=is_path_invalidation_action_configured,json=isPathInvalidationActionConfigured,proto3" json:"is_path_invalidation_action_configured,omitempty"`
	ExcludeListName                     string                        `protobuf:"bytes,16,opt,name=exclude_list_name,json=excludeListName,proto3" json:"exclude_list_name,omitempty"`
	IsExcludeListNameConfigured         bool                          `protobuf:"varint,17,opt,name=is_exclude_list_name_configured,json=isExcludeListNameConfigured,proto3" json:"is_exclude_list_name_configured,omitempty"`
	IsPceConfigured                     bool                          `protobuf:"varint,18,opt,name=is_pce_configured,json=isPceConfigured,proto3" json:"is_pce_configured,omitempty"`
	IsPceDisjSourceConfigured           bool                          `protobuf:"varint,19,opt,name=is_pce_disj_source_configured,json=isPceDisjSourceConfigured,proto3" json:"is_pce_disj_source_configured,omitempty"`
	IsPceDisjTypeConfigured             bool                          `protobuf:"varint,20,opt,name=is_pce_disj_type_configured,json=isPceDisjTypeConfigured,proto3" json:"is_pce_disj_type_configured,omitempty"`
	IsPceDisjGroupIdConfigured          bool                          `protobuf:"varint,21,opt,name=is_pce_disj_group_id_configured,json=isPceDisjGroupIdConfigured,proto3" json:"is_pce_disj_group_id_configured,omitempty"`
	PcedpSourceAddress                  uint32                        `protobuf:"varint,22,opt,name=pcedp_source_address,json=pcedpSourceAddress,proto3" json:"pcedp_source_address,omitempty"`
	PcedpType                           string                        `protobuf:"bytes,23,opt,name=pcedp_type,json=pcedpType,proto3" json:"pcedp_type,omitempty"`
	PcedpGroupId                        uint32                        `protobuf:"varint,24,opt,name=pcedp_group_id,json=pcedpGroupId,proto3" json:"pcedp_group_id,omitempty"`
	IsPcebDjSourceConfigured            bool                          `protobuf:"varint,25,opt,name=is_pceb_dj_source_configured,json=isPcebDjSourceConfigured,proto3" json:"is_pceb_dj_source_configured,omitempty"`
	IsPcebdGroupIdConfigured            bool                          `protobuf:"varint,26,opt,name=is_pcebd_group_id_configured,json=isPcebdGroupIdConfigured,proto3" json:"is_pcebd_group_id_configured,omitempty"`
	PcebdSourceAddress                  uint32                        `protobuf:"varint,27,opt,name=pcebd_source_address,json=pcebdSourceAddress,proto3" json:"pcebd_source_address,omitempty"`
	PcebdGroupId                        uint32                        `protobuf:"varint,28,opt,name=pcebd_group_id,json=pcebdGroupId,proto3" json:"pcebd_group_id,omitempty"`
	BfdReversePath                      *MplsTeAttributeSetBfdRevPath `protobuf:"bytes,29,opt,name=bfd_reverse_path,json=bfdReversePath,proto3" json:"bfd_reverse_path,omitempty"`
	IsBfdReversePatConfigured           bool                          `protobuf:"varint,30,opt,name=is_bfd_reverse_pat_configured,json=isBfdReversePatConfigured,proto3" json:"is_bfd_reverse_pat_configured,omitempty"`
	IsDelayLimitConfigured              bool                          `protobuf:"varint,31,opt,name=is_delay_limit_configured,json=isDelayLimitConfigured,proto3" json:"is_delay_limit_configured,omitempty"`
	DelayLimit                          uint32                        `protobuf:"varint,32,opt,name=delay_limit,json=delayLimit,proto3" json:"delay_limit,omitempty"`
	XXX_NoUnkeyedLiteral                struct{}                      `json:"-"`
	XXX_unrecognized                    []byte                        `json:"-"`
	XXX_sizecache                       int32                         `json:"-"`
}

func (m *MplsTeAttributeSetPathOption) Reset()         { *m = MplsTeAttributeSetPathOption{} }
func (m *MplsTeAttributeSetPathOption) String() string { return proto.CompactTextString(m) }
func (*MplsTeAttributeSetPathOption) ProtoMessage()    {}
func (*MplsTeAttributeSetPathOption) Descriptor() ([]byte, []int) {
	return fileDescriptor_97fd10a364dd9ffd, []int{10}
}

func (m *MplsTeAttributeSetPathOption) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsTeAttributeSetPathOption.Unmarshal(m, b)
}
func (m *MplsTeAttributeSetPathOption) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsTeAttributeSetPathOption.Marshal(b, m, deterministic)
}
func (m *MplsTeAttributeSetPathOption) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsTeAttributeSetPathOption.Merge(m, src)
}
func (m *MplsTeAttributeSetPathOption) XXX_Size() int {
	return xxx_messageInfo_MplsTeAttributeSetPathOption.Size(m)
}
func (m *MplsTeAttributeSetPathOption) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsTeAttributeSetPathOption.DiscardUnknown(m)
}

var xxx_messageInfo_MplsTeAttributeSetPathOption proto.InternalMessageInfo

func (m *MplsTeAttributeSetPathOption) GetConfiguredBandwidth() uint32 {
	if m != nil {
		return m.ConfiguredBandwidth
	}
	return 0
}

func (m *MplsTeAttributeSetPathOption) GetCostLimit() uint32 {
	if m != nil {
		return m.CostLimit
	}
	return 0
}

func (m *MplsTeAttributeSetPathOption) GetDsteClassType() uint32 {
	if m != nil {
		return m.DsteClassType
	}
	return 0
}

func (m *MplsTeAttributeSetPathOption) GetBandwidthType() string {
	if m != nil {
		return m.BandwidthType
	}
	return ""
}

func (m *MplsTeAttributeSetPathOption) GetIsBandwidthConfigured() bool {
	if m != nil {
		return m.IsBandwidthConfigured
	}
	return false
}

func (m *MplsTeAttributeSetPathOption) GetIsCostLimitConfigured() bool {
	if m != nil {
		return m.IsCostLimitConfigured
	}
	return false
}

func (m *MplsTeAttributeSetPathOption) GetAffinity() *MplsTeTunnelsAffinityInfo {
	if m != nil {
		return m.Affinity
	}
	return nil
}

func (m *MplsTeAttributeSetPathOption) GetIsAffinityConfigured() bool {
	if m != nil {
		return m.IsAffinityConfigured
	}
	return false
}

func (m *MplsTeAttributeSetPathOption) GetTunnelId() []uint32 {
	if m != nil {
		return m.TunnelId
	}
	return nil
}

func (m *MplsTeAttributeSetPathOption) GetGeneration() uint32 {
	if m != nil {
		return m.Generation
	}
	return 0
}

func (m *MplsTeAttributeSetPathOption) GetVersionInfo() []*MplsTeAttributeSetVersion {
	if m != nil {
		return m.VersionInfo
	}
	return nil
}

func (m *MplsTeAttributeSetPathOption) GetPathInvalidationTimeout() uint32 {
	if m != nil {
		return m.PathInvalidationTimeout
	}
	return 0
}

func (m *MplsTeAttributeSetPathOption) GetPathInvalidationAction() uint32 {
	if m != nil {
		return m.PathInvalidationAction
	}
	return 0
}

func (m *MplsTeAttributeSetPathOption) GetIsPathInvalidationTimeoutConfigured() bool {
	if m != nil {
		return m.IsPathInvalidationTimeoutConfigured
	}
	return false
}

func (m *MplsTeAttributeSetPathOption) GetIsPathInvalidationActionConfigured() bool {
	if m != nil {
		return m.IsPathInvalidationActionConfigured
	}
	return false
}

func (m *MplsTeAttributeSetPathOption) GetExcludeListName() string {
	if m != nil {
		return m.ExcludeListName
	}
	return ""
}

func (m *MplsTeAttributeSetPathOption) GetIsExcludeListNameConfigured() bool {
	if m != nil {
		return m.IsExcludeListNameConfigured
	}
	return false
}

func (m *MplsTeAttributeSetPathOption) GetIsPceConfigured() bool {
	if m != nil {
		return m.IsPceConfigured
	}
	return false
}

func (m *MplsTeAttributeSetPathOption) GetIsPceDisjSourceConfigured() bool {
	if m != nil {
		return m.IsPceDisjSourceConfigured
	}
	return false
}

func (m *MplsTeAttributeSetPathOption) GetIsPceDisjTypeConfigured() bool {
	if m != nil {
		return m.IsPceDisjTypeConfigured
	}
	return false
}

func (m *MplsTeAttributeSetPathOption) GetIsPceDisjGroupIdConfigured() bool {
	if m != nil {
		return m.IsPceDisjGroupIdConfigured
	}
	return false
}

func (m *MplsTeAttributeSetPathOption) GetPcedpSourceAddress() uint32 {
	if m != nil {
		return m.PcedpSourceAddress
	}
	return 0
}

func (m *MplsTeAttributeSetPathOption) GetPcedpType() string {
	if m != nil {
		return m.PcedpType
	}
	return ""
}

func (m *MplsTeAttributeSetPathOption) GetPcedpGroupId() uint32 {
	if m != nil {
		return m.PcedpGroupId
	}
	return 0
}

func (m *MplsTeAttributeSetPathOption) GetIsPcebDjSourceConfigured() bool {
	if m != nil {
		return m.IsPcebDjSourceConfigured
	}
	return false
}

func (m *MplsTeAttributeSetPathOption) GetIsPcebdGroupIdConfigured() bool {
	if m != nil {
		return m.IsPcebdGroupIdConfigured
	}
	return false
}

func (m *MplsTeAttributeSetPathOption) GetPcebdSourceAddress() uint32 {
	if m != nil {
		return m.PcebdSourceAddress
	}
	return 0
}

func (m *MplsTeAttributeSetPathOption) GetPcebdGroupId() uint32 {
	if m != nil {
		return m.PcebdGroupId
	}
	return 0
}

func (m *MplsTeAttributeSetPathOption) GetBfdReversePath() *MplsTeAttributeSetBfdRevPath {
	if m != nil {
		return m.BfdReversePath
	}
	return nil
}

func (m *MplsTeAttributeSetPathOption) GetIsBfdReversePatConfigured() bool {
	if m != nil {
		return m.IsBfdReversePatConfigured
	}
	return false
}

func (m *MplsTeAttributeSetPathOption) GetIsDelayLimitConfigured() bool {
	if m != nil {
		return m.IsDelayLimitConfigured
	}
	return false
}

func (m *MplsTeAttributeSetPathOption) GetDelayLimit() uint32 {
	if m != nil {
		return m.DelayLimit
	}
	return 0
}

type MplsTeAttributeSetSigName struct {
	Name                   string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	SourceType             string   `protobuf:"bytes,2,opt,name=source_type,json=sourceType,proto3" json:"source_type,omitempty"`
	ProtectedInterfaceType string   `protobuf:"bytes,3,opt,name=protected_interface_type,json=protectedInterfaceType,proto3" json:"protected_interface_type,omitempty"`
	IsMpAddresses          bool     `protobuf:"varint,4,opt,name=is_mp_addresses,json=isMpAddresses,proto3" json:"is_mp_addresses,omitempty"`
	XXX_NoUnkeyedLiteral   struct{} `json:"-"`
	XXX_unrecognized       []byte   `json:"-"`
	XXX_sizecache          int32    `json:"-"`
}

func (m *MplsTeAttributeSetSigName) Reset()         { *m = MplsTeAttributeSetSigName{} }
func (m *MplsTeAttributeSetSigName) String() string { return proto.CompactTextString(m) }
func (*MplsTeAttributeSetSigName) ProtoMessage()    {}
func (*MplsTeAttributeSetSigName) Descriptor() ([]byte, []int) {
	return fileDescriptor_97fd10a364dd9ffd, []int{11}
}

func (m *MplsTeAttributeSetSigName) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsTeAttributeSetSigName.Unmarshal(m, b)
}
func (m *MplsTeAttributeSetSigName) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsTeAttributeSetSigName.Marshal(b, m, deterministic)
}
func (m *MplsTeAttributeSetSigName) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsTeAttributeSetSigName.Merge(m, src)
}
func (m *MplsTeAttributeSetSigName) XXX_Size() int {
	return xxx_messageInfo_MplsTeAttributeSetSigName.Size(m)
}
func (m *MplsTeAttributeSetSigName) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsTeAttributeSetSigName.DiscardUnknown(m)
}

var xxx_messageInfo_MplsTeAttributeSetSigName proto.InternalMessageInfo

func (m *MplsTeAttributeSetSigName) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *MplsTeAttributeSetSigName) GetSourceType() string {
	if m != nil {
		return m.SourceType
	}
	return ""
}

func (m *MplsTeAttributeSetSigName) GetProtectedInterfaceType() string {
	if m != nil {
		return m.ProtectedInterfaceType
	}
	return ""
}

func (m *MplsTeAttributeSetSigName) GetIsMpAddresses() bool {
	if m != nil {
		return m.IsMpAddresses
	}
	return false
}

type MplsTeLoggingAttributes struct {
	LspState                      bool     `protobuf:"varint,1,opt,name=lsp_state,json=lspState,proto3" json:"lsp_state,omitempty"`
	S2LState                      bool     `protobuf:"varint,2,opt,name=s2l_state,json=s2lState,proto3" json:"s2l_state,omitempty"`
	LspReRoute                    bool     `protobuf:"varint,3,opt,name=lsp_re_route,json=lspReRoute,proto3" json:"lsp_re_route,omitempty"`
	LspReOpt                      bool     `protobuf:"varint,4,opt,name=lsp_re_opt,json=lspReOpt,proto3" json:"lsp_re_opt,omitempty"`
	LspInsufficientBw             bool     `protobuf:"varint,5,opt,name=lsp_insufficient_bw,json=lspInsufficientBw,proto3" json:"lsp_insufficient_bw,omitempty"`
	LspBandwidthChange            bool     `protobuf:"varint,6,opt,name=lsp_bandwidth_change,json=lspBandwidthChange,proto3" json:"lsp_bandwidth_change,omitempty"`
	LspPcalcFailureLoggingEnabled bool     `protobuf:"varint,7,opt,name=lsp_pcalc_failure_logging_enabled,json=lspPcalcFailureLoggingEnabled,proto3" json:"lsp_pcalc_failure_logging_enabled,omitempty"`
	AllLoggingEnabled             bool     `protobuf:"varint,8,opt,name=all_logging_enabled,json=allLoggingEnabled,proto3" json:"all_logging_enabled,omitempty"`
	XXX_NoUnkeyedLiteral          struct{} `json:"-"`
	XXX_unrecognized              []byte   `json:"-"`
	XXX_sizecache                 int32    `json:"-"`
}

func (m *MplsTeLoggingAttributes) Reset()         { *m = MplsTeLoggingAttributes{} }
func (m *MplsTeLoggingAttributes) String() string { return proto.CompactTextString(m) }
func (*MplsTeLoggingAttributes) ProtoMessage()    {}
func (*MplsTeLoggingAttributes) Descriptor() ([]byte, []int) {
	return fileDescriptor_97fd10a364dd9ffd, []int{12}
}

func (m *MplsTeLoggingAttributes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsTeLoggingAttributes.Unmarshal(m, b)
}
func (m *MplsTeLoggingAttributes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsTeLoggingAttributes.Marshal(b, m, deterministic)
}
func (m *MplsTeLoggingAttributes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsTeLoggingAttributes.Merge(m, src)
}
func (m *MplsTeLoggingAttributes) XXX_Size() int {
	return xxx_messageInfo_MplsTeLoggingAttributes.Size(m)
}
func (m *MplsTeLoggingAttributes) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsTeLoggingAttributes.DiscardUnknown(m)
}

var xxx_messageInfo_MplsTeLoggingAttributes proto.InternalMessageInfo

func (m *MplsTeLoggingAttributes) GetLspState() bool {
	if m != nil {
		return m.LspState
	}
	return false
}

func (m *MplsTeLoggingAttributes) GetS2LState() bool {
	if m != nil {
		return m.S2LState
	}
	return false
}

func (m *MplsTeLoggingAttributes) GetLspReRoute() bool {
	if m != nil {
		return m.LspReRoute
	}
	return false
}

func (m *MplsTeLoggingAttributes) GetLspReOpt() bool {
	if m != nil {
		return m.LspReOpt
	}
	return false
}

func (m *MplsTeLoggingAttributes) GetLspInsufficientBw() bool {
	if m != nil {
		return m.LspInsufficientBw
	}
	return false
}

func (m *MplsTeLoggingAttributes) GetLspBandwidthChange() bool {
	if m != nil {
		return m.LspBandwidthChange
	}
	return false
}

func (m *MplsTeLoggingAttributes) GetLspPcalcFailureLoggingEnabled() bool {
	if m != nil {
		return m.LspPcalcFailureLoggingEnabled
	}
	return false
}

func (m *MplsTeLoggingAttributes) GetAllLoggingEnabled() bool {
	if m != nil {
		return m.AllLoggingEnabled
	}
	return false
}

type MplsTeProtectedIfNameStr struct {
	ProtectedInterface   string   `protobuf:"bytes,1,opt,name=protected_interface,json=protectedInterface,proto3" json:"protected_interface,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MplsTeProtectedIfNameStr) Reset()         { *m = MplsTeProtectedIfNameStr{} }
func (m *MplsTeProtectedIfNameStr) String() string { return proto.CompactTextString(m) }
func (*MplsTeProtectedIfNameStr) ProtoMessage()    {}
func (*MplsTeProtectedIfNameStr) Descriptor() ([]byte, []int) {
	return fileDescriptor_97fd10a364dd9ffd, []int{13}
}

func (m *MplsTeProtectedIfNameStr) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsTeProtectedIfNameStr.Unmarshal(m, b)
}
func (m *MplsTeProtectedIfNameStr) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsTeProtectedIfNameStr.Marshal(b, m, deterministic)
}
func (m *MplsTeProtectedIfNameStr) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsTeProtectedIfNameStr.Merge(m, src)
}
func (m *MplsTeProtectedIfNameStr) XXX_Size() int {
	return xxx_messageInfo_MplsTeProtectedIfNameStr.Size(m)
}
func (m *MplsTeProtectedIfNameStr) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsTeProtectedIfNameStr.DiscardUnknown(m)
}

var xxx_messageInfo_MplsTeProtectedIfNameStr proto.InternalMessageInfo

func (m *MplsTeProtectedIfNameStr) GetProtectedInterface() string {
	if m != nil {
		return m.ProtectedInterface
	}
	return ""
}

type MplsTeAttributeSetAutoBackup struct {
	IsSignalledNameConfigured bool                        `protobuf:"varint,1,opt,name=is_signalled_name_configured,json=isSignalledNameConfigured,proto3" json:"is_signalled_name_configured,omitempty"`
	SignalledName             *MplsTeAttributeSetSigName  `protobuf:"bytes,2,opt,name=signalled_name,json=signalledName,proto3" json:"signalled_name,omitempty"`
	SetupPriority             uint32                      `protobuf:"varint,3,opt,name=setup_priority,json=setupPriority,proto3" json:"setup_priority,omitempty"`
	HoldPriority              uint32                      `protobuf:"varint,4,opt,name=hold_priority,json=holdPriority,proto3" json:"hold_priority,omitempty"`
	IsPriorityConfigured      bool                        `protobuf:"varint,5,opt,name=is_priority_configured,json=isPriorityConfigured,proto3" json:"is_priority_configured,omitempty"`
	PolicyClass               uint32                      `protobuf:"varint,6,opt,name=policy_class,json=policyClass,proto3" json:"policy_class,omitempty"`
	PolicyClassEntry          []uint32                    `protobuf:"varint,7,rep,packed,name=policy_class_entry,json=policyClassEntry,proto3" json:"policy_class_entry,omitempty"`
	IsPolicyclassConfigured   bool                        `protobuf:"varint,8,opt,name=is_policyclass_configured,json=isPolicyclassConfigured,proto3" json:"is_policyclass_configured,omitempty"`
	Affinity                  *MplsTeTunnelsAffinityInfo  `protobuf:"bytes,9,opt,name=affinity,proto3" json:"affinity,omitempty"`
	IsAffinityConfigured      bool                        `protobuf:"varint,10,opt,name=is_affinity_configured,json=isAffinityConfigured,proto3" json:"is_affinity_configured,omitempty"`
	RecordRoute               bool                        `protobuf:"varint,11,opt,name=record_route,json=recordRoute,proto3" json:"record_route,omitempty"`
	Logging                   *MplsTeLoggingAttributes    `protobuf:"bytes,12,opt,name=logging,proto3" json:"logging,omitempty"`
	ProtectedInterface        []*MplsTeProtectedIfNameStr `protobuf:"bytes,13,rep,name=protected_interface,json=protectedInterface,proto3" json:"protected_interface,omitempty"`
	TunnelId                  []uint32                    `protobuf:"varint,14,rep,packed,name=tunnel_id,json=tunnelId,proto3" json:"tunnel_id,omitempty"`
	XXX_NoUnkeyedLiteral      struct{}                    `json:"-"`
	XXX_unrecognized          []byte                      `json:"-"`
	XXX_sizecache             int32                       `json:"-"`
}

func (m *MplsTeAttributeSetAutoBackup) Reset()         { *m = MplsTeAttributeSetAutoBackup{} }
func (m *MplsTeAttributeSetAutoBackup) String() string { return proto.CompactTextString(m) }
func (*MplsTeAttributeSetAutoBackup) ProtoMessage()    {}
func (*MplsTeAttributeSetAutoBackup) Descriptor() ([]byte, []int) {
	return fileDescriptor_97fd10a364dd9ffd, []int{14}
}

func (m *MplsTeAttributeSetAutoBackup) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsTeAttributeSetAutoBackup.Unmarshal(m, b)
}
func (m *MplsTeAttributeSetAutoBackup) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsTeAttributeSetAutoBackup.Marshal(b, m, deterministic)
}
func (m *MplsTeAttributeSetAutoBackup) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsTeAttributeSetAutoBackup.Merge(m, src)
}
func (m *MplsTeAttributeSetAutoBackup) XXX_Size() int {
	return xxx_messageInfo_MplsTeAttributeSetAutoBackup.Size(m)
}
func (m *MplsTeAttributeSetAutoBackup) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsTeAttributeSetAutoBackup.DiscardUnknown(m)
}

var xxx_messageInfo_MplsTeAttributeSetAutoBackup proto.InternalMessageInfo

func (m *MplsTeAttributeSetAutoBackup) GetIsSignalledNameConfigured() bool {
	if m != nil {
		return m.IsSignalledNameConfigured
	}
	return false
}

func (m *MplsTeAttributeSetAutoBackup) GetSignalledName() *MplsTeAttributeSetSigName {
	if m != nil {
		return m.SignalledName
	}
	return nil
}

func (m *MplsTeAttributeSetAutoBackup) GetSetupPriority() uint32 {
	if m != nil {
		return m.SetupPriority
	}
	return 0
}

func (m *MplsTeAttributeSetAutoBackup) GetHoldPriority() uint32 {
	if m != nil {
		return m.HoldPriority
	}
	return 0
}

func (m *MplsTeAttributeSetAutoBackup) GetIsPriorityConfigured() bool {
	if m != nil {
		return m.IsPriorityConfigured
	}
	return false
}

func (m *MplsTeAttributeSetAutoBackup) GetPolicyClass() uint32 {
	if m != nil {
		return m.PolicyClass
	}
	return 0
}

func (m *MplsTeAttributeSetAutoBackup) GetPolicyClassEntry() []uint32 {
	if m != nil {
		return m.PolicyClassEntry
	}
	return nil
}

func (m *MplsTeAttributeSetAutoBackup) GetIsPolicyclassConfigured() bool {
	if m != nil {
		return m.IsPolicyclassConfigured
	}
	return false
}

func (m *MplsTeAttributeSetAutoBackup) GetAffinity() *MplsTeTunnelsAffinityInfo {
	if m != nil {
		return m.Affinity
	}
	return nil
}

func (m *MplsTeAttributeSetAutoBackup) GetIsAffinityConfigured() bool {
	if m != nil {
		return m.IsAffinityConfigured
	}
	return false
}

func (m *MplsTeAttributeSetAutoBackup) GetRecordRoute() bool {
	if m != nil {
		return m.RecordRoute
	}
	return false
}

func (m *MplsTeAttributeSetAutoBackup) GetLogging() *MplsTeLoggingAttributes {
	if m != nil {
		return m.Logging
	}
	return nil
}

func (m *MplsTeAttributeSetAutoBackup) GetProtectedInterface() []*MplsTeProtectedIfNameStr {
	if m != nil {
		return m.ProtectedInterface
	}
	return nil
}

func (m *MplsTeAttributeSetAutoBackup) GetTunnelId() []uint32 {
	if m != nil {
		return m.TunnelId
	}
	return nil
}

type MplsTeAttributeSetAutoMesh struct {
	ConfiguredBandwidth      uint32                     `protobuf:"varint,1,opt,name=configured_bandwidth,json=configuredBandwidth,proto3" json:"configured_bandwidth,omitempty"`
	DsteClassType            uint32                     `protobuf:"varint,2,opt,name=dste_class_type,json=dsteClassType,proto3" json:"dste_class_type,omitempty"`
	IsBandwidthConfigured    bool                       `protobuf:"varint,3,opt,name=is_bandwidth_configured,json=isBandwidthConfigured,proto3" json:"is_bandwidth_configured,omitempty"`
	SetupPriority            uint32                     `protobuf:"varint,4,opt,name=setup_priority,json=setupPriority,proto3" json:"setup_priority,omitempty"`
	HoldPriority             uint32                     `protobuf:"varint,5,opt,name=hold_priority,json=holdPriority,proto3" json:"hold_priority,omitempty"`
	IsPriorityConfigured     bool                       `protobuf:"varint,6,opt,name=is_priority_configured,json=isPriorityConfigured,proto3" json:"is_priority_configured,omitempty"`
	PolicyClass              uint32                     `protobuf:"varint,7,opt,name=policy_class,json=policyClass,proto3" json:"policy_class,omitempty"`
	PolicyClassEntry         []uint32                   `protobuf:"varint,8,rep,packed,name=policy_class_entry,json=policyClassEntry,proto3" json:"policy_class_entry,omitempty"`
	IsPolicyclassConfigured  bool                       `protobuf:"varint,9,opt,name=is_policyclass_configured,json=isPolicyclassConfigured,proto3" json:"is_policyclass_configured,omitempty"`
	ForwardClass             uint32                     `protobuf:"varint,10,opt,name=forward_class,json=forwardClass,proto3" json:"forward_class,omitempty"`
	IsForwardClassConfigured bool                       `protobuf:"varint,11,opt,name=is_forward_class_configured,json=isForwardClassConfigured,proto3" json:"is_forward_class_configured,omitempty"`
	Affinity                 *MplsTeTunnelsAffinityInfo `protobuf:"bytes,12,opt,name=affinity,proto3" json:"affinity,omitempty"`
	IsAffinityConfigured     bool                       `protobuf:"varint,13,opt,name=is_affinity_configured,json=isAffinityConfigured,proto3" json:"is_affinity_configured,omitempty"`
	FastReroute              bool                       `protobuf:"varint,14,opt,name=fast_reroute,json=fastReroute,proto3" json:"fast_reroute,omitempty"`
	FrrNodeProtection        bool                       `protobuf:"varint,15,opt,name=frr_node_protection,json=frrNodeProtection,proto3" json:"frr_node_protection,omitempty"`
	FrrBandwidthProtection   bool                       `protobuf:"varint,16,opt,name=frr_bandwidth_protection,json=frrBandwidthProtection,proto3" json:"frr_bandwidth_protection,omitempty"`
	RecordRoute              bool                       `protobuf:"varint,17,opt,name=record_route,json=recordRoute,proto3" json:"record_route,omitempty"`
	AutoBandwidthCollect     bool                       `protobuf:"varint,18,opt,name=auto_bandwidth_collect,json=autoBandwidthCollect,proto3" json:"auto_bandwidth_collect,omitempty"`
	AutoRouteAnnounce        bool                       `protobuf:"varint,19,opt,name=auto_route_announce,json=autoRouteAnnounce,proto3" json:"auto_route_announce,omitempty"`
	SoftPreemptionConfigured bool                       `protobuf:"varint,20,opt,name=soft_preemption_configured,json=softPreemptionConfigured,proto3" json:"soft_preemption_configured,omitempty"`
	Logging                  *MplsTeLoggingAttributes   `protobuf:"bytes,21,opt,name=logging,proto3" json:"logging,omitempty"`
	Bandwidth                uint32                     `protobuf:"varint,22,opt,name=bandwidth,proto3" json:"bandwidth,omitempty"`
	LoadShare                uint32                     `protobuf:"varint,23,opt,name=load_share,json=loadShare,proto3" json:"load_share,omitempty"`
	IsInterfaceBwConfigured  bool                       `protobuf:"varint,24,opt,name=is_interface_bw_configured,json=isInterfaceBwConfigured,proto3" json:"is_interface_bw_configured,omitempty"`
	MeshGroupId              []uint32                   `protobuf:"varint,25,rep,packed,name=mesh_group_id,json=meshGroupId,proto3" json:"mesh_group_id,omitempty"`
	TunnelId                 []uint32                   `protobuf:"varint,26,rep,packed,name=tunnel_id,json=tunnelId,proto3" json:"tunnel_id,omitempty"`
	XXX_NoUnkeyedLiteral     struct{}                   `json:"-"`
	XXX_unrecognized         []byte                     `json:"-"`
	XXX_sizecache            int32                      `json:"-"`
}

func (m *MplsTeAttributeSetAutoMesh) Reset()         { *m = MplsTeAttributeSetAutoMesh{} }
func (m *MplsTeAttributeSetAutoMesh) String() string { return proto.CompactTextString(m) }
func (*MplsTeAttributeSetAutoMesh) ProtoMessage()    {}
func (*MplsTeAttributeSetAutoMesh) Descriptor() ([]byte, []int) {
	return fileDescriptor_97fd10a364dd9ffd, []int{15}
}

func (m *MplsTeAttributeSetAutoMesh) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsTeAttributeSetAutoMesh.Unmarshal(m, b)
}
func (m *MplsTeAttributeSetAutoMesh) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsTeAttributeSetAutoMesh.Marshal(b, m, deterministic)
}
func (m *MplsTeAttributeSetAutoMesh) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsTeAttributeSetAutoMesh.Merge(m, src)
}
func (m *MplsTeAttributeSetAutoMesh) XXX_Size() int {
	return xxx_messageInfo_MplsTeAttributeSetAutoMesh.Size(m)
}
func (m *MplsTeAttributeSetAutoMesh) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsTeAttributeSetAutoMesh.DiscardUnknown(m)
}

var xxx_messageInfo_MplsTeAttributeSetAutoMesh proto.InternalMessageInfo

func (m *MplsTeAttributeSetAutoMesh) GetConfiguredBandwidth() uint32 {
	if m != nil {
		return m.ConfiguredBandwidth
	}
	return 0
}

func (m *MplsTeAttributeSetAutoMesh) GetDsteClassType() uint32 {
	if m != nil {
		return m.DsteClassType
	}
	return 0
}

func (m *MplsTeAttributeSetAutoMesh) GetIsBandwidthConfigured() bool {
	if m != nil {
		return m.IsBandwidthConfigured
	}
	return false
}

func (m *MplsTeAttributeSetAutoMesh) GetSetupPriority() uint32 {
	if m != nil {
		return m.SetupPriority
	}
	return 0
}

func (m *MplsTeAttributeSetAutoMesh) GetHoldPriority() uint32 {
	if m != nil {
		return m.HoldPriority
	}
	return 0
}

func (m *MplsTeAttributeSetAutoMesh) GetIsPriorityConfigured() bool {
	if m != nil {
		return m.IsPriorityConfigured
	}
	return false
}

func (m *MplsTeAttributeSetAutoMesh) GetPolicyClass() uint32 {
	if m != nil {
		return m.PolicyClass
	}
	return 0
}

func (m *MplsTeAttributeSetAutoMesh) GetPolicyClassEntry() []uint32 {
	if m != nil {
		return m.PolicyClassEntry
	}
	return nil
}

func (m *MplsTeAttributeSetAutoMesh) GetIsPolicyclassConfigured() bool {
	if m != nil {
		return m.IsPolicyclassConfigured
	}
	return false
}

func (m *MplsTeAttributeSetAutoMesh) GetForwardClass() uint32 {
	if m != nil {
		return m.ForwardClass
	}
	return 0
}

func (m *MplsTeAttributeSetAutoMesh) GetIsForwardClassConfigured() bool {
	if m != nil {
		return m.IsForwardClassConfigured
	}
	return false
}

func (m *MplsTeAttributeSetAutoMesh) GetAffinity() *MplsTeTunnelsAffinityInfo {
	if m != nil {
		return m.Affinity
	}
	return nil
}

func (m *MplsTeAttributeSetAutoMesh) GetIsAffinityConfigured() bool {
	if m != nil {
		return m.IsAffinityConfigured
	}
	return false
}

func (m *MplsTeAttributeSetAutoMesh) GetFastReroute() bool {
	if m != nil {
		return m.FastReroute
	}
	return false
}

func (m *MplsTeAttributeSetAutoMesh) GetFrrNodeProtection() bool {
	if m != nil {
		return m.FrrNodeProtection
	}
	return false
}

func (m *MplsTeAttributeSetAutoMesh) GetFrrBandwidthProtection() bool {
	if m != nil {
		return m.FrrBandwidthProtection
	}
	return false
}

func (m *MplsTeAttributeSetAutoMesh) GetRecordRoute() bool {
	if m != nil {
		return m.RecordRoute
	}
	return false
}

func (m *MplsTeAttributeSetAutoMesh) GetAutoBandwidthCollect() bool {
	if m != nil {
		return m.AutoBandwidthCollect
	}
	return false
}

func (m *MplsTeAttributeSetAutoMesh) GetAutoRouteAnnounce() bool {
	if m != nil {
		return m.AutoRouteAnnounce
	}
	return false
}

func (m *MplsTeAttributeSetAutoMesh) GetSoftPreemptionConfigured() bool {
	if m != nil {
		return m.SoftPreemptionConfigured
	}
	return false
}

func (m *MplsTeAttributeSetAutoMesh) GetLogging() *MplsTeLoggingAttributes {
	if m != nil {
		return m.Logging
	}
	return nil
}

func (m *MplsTeAttributeSetAutoMesh) GetBandwidth() uint32 {
	if m != nil {
		return m.Bandwidth
	}
	return 0
}

func (m *MplsTeAttributeSetAutoMesh) GetLoadShare() uint32 {
	if m != nil {
		return m.LoadShare
	}
	return 0
}

func (m *MplsTeAttributeSetAutoMesh) GetIsInterfaceBwConfigured() bool {
	if m != nil {
		return m.IsInterfaceBwConfigured
	}
	return false
}

func (m *MplsTeAttributeSetAutoMesh) GetMeshGroupId() []uint32 {
	if m != nil {
		return m.MeshGroupId
	}
	return nil
}

func (m *MplsTeAttributeSetAutoMesh) GetTunnelId() []uint32 {
	if m != nil {
		return m.TunnelId
	}
	return nil
}

type TeXroSubobjIpv4 struct {
	Address              string   `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	PrefixLen            uint32   `protobuf:"varint,2,opt,name=prefix_len,json=prefixLen,proto3" json:"prefix_len,omitempty"`
	Attribute            string   `protobuf:"bytes,3,opt,name=attribute,proto3" json:"attribute,omitempty"`
	ExclusionType        string   `protobuf:"bytes,4,opt,name=exclusion_type,json=exclusionType,proto3" json:"exclusion_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TeXroSubobjIpv4) Reset()         { *m = TeXroSubobjIpv4{} }
func (m *TeXroSubobjIpv4) String() string { return proto.CompactTextString(m) }
func (*TeXroSubobjIpv4) ProtoMessage()    {}
func (*TeXroSubobjIpv4) Descriptor() ([]byte, []int) {
	return fileDescriptor_97fd10a364dd9ffd, []int{16}
}

func (m *TeXroSubobjIpv4) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TeXroSubobjIpv4.Unmarshal(m, b)
}
func (m *TeXroSubobjIpv4) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TeXroSubobjIpv4.Marshal(b, m, deterministic)
}
func (m *TeXroSubobjIpv4) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TeXroSubobjIpv4.Merge(m, src)
}
func (m *TeXroSubobjIpv4) XXX_Size() int {
	return xxx_messageInfo_TeXroSubobjIpv4.Size(m)
}
func (m *TeXroSubobjIpv4) XXX_DiscardUnknown() {
	xxx_messageInfo_TeXroSubobjIpv4.DiscardUnknown(m)
}

var xxx_messageInfo_TeXroSubobjIpv4 proto.InternalMessageInfo

func (m *TeXroSubobjIpv4) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *TeXroSubobjIpv4) GetPrefixLen() uint32 {
	if m != nil {
		return m.PrefixLen
	}
	return 0
}

func (m *TeXroSubobjIpv4) GetAttribute() string {
	if m != nil {
		return m.Attribute
	}
	return ""
}

func (m *TeXroSubobjIpv4) GetExclusionType() string {
	if m != nil {
		return m.ExclusionType
	}
	return ""
}

type TeXroSubobjIpv6 struct {
	Address              string   `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	PrefixLen            uint32   `protobuf:"varint,2,opt,name=prefix_len,json=prefixLen,proto3" json:"prefix_len,omitempty"`
	Attribute            string   `protobuf:"bytes,3,opt,name=attribute,proto3" json:"attribute,omitempty"`
	ExclusionType        string   `protobuf:"bytes,4,opt,name=exclusion_type,json=exclusionType,proto3" json:"exclusion_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TeXroSubobjIpv6) Reset()         { *m = TeXroSubobjIpv6{} }
func (m *TeXroSubobjIpv6) String() string { return proto.CompactTextString(m) }
func (*TeXroSubobjIpv6) ProtoMessage()    {}
func (*TeXroSubobjIpv6) Descriptor() ([]byte, []int) {
	return fileDescriptor_97fd10a364dd9ffd, []int{17}
}

func (m *TeXroSubobjIpv6) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TeXroSubobjIpv6.Unmarshal(m, b)
}
func (m *TeXroSubobjIpv6) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TeXroSubobjIpv6.Marshal(b, m, deterministic)
}
func (m *TeXroSubobjIpv6) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TeXroSubobjIpv6.Merge(m, src)
}
func (m *TeXroSubobjIpv6) XXX_Size() int {
	return xxx_messageInfo_TeXroSubobjIpv6.Size(m)
}
func (m *TeXroSubobjIpv6) XXX_DiscardUnknown() {
	xxx_messageInfo_TeXroSubobjIpv6.DiscardUnknown(m)
}

var xxx_messageInfo_TeXroSubobjIpv6 proto.InternalMessageInfo

func (m *TeXroSubobjIpv6) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *TeXroSubobjIpv6) GetPrefixLen() uint32 {
	if m != nil {
		return m.PrefixLen
	}
	return 0
}

func (m *TeXroSubobjIpv6) GetAttribute() string {
	if m != nil {
		return m.Attribute
	}
	return ""
}

func (m *TeXroSubobjIpv6) GetExclusionType() string {
	if m != nil {
		return m.ExclusionType
	}
	return ""
}

type TeXroSubobjUnnum struct {
	TeRouterId           string   `protobuf:"bytes,1,opt,name=te_router_id,json=teRouterId,proto3" json:"te_router_id,omitempty"`
	InterfaceId          uint32   `protobuf:"varint,2,opt,name=interface_id,json=interfaceId,proto3" json:"interface_id,omitempty"`
	Attribute            string   `protobuf:"bytes,3,opt,name=attribute,proto3" json:"attribute,omitempty"`
	ExclusionType        string   `protobuf:"bytes,4,opt,name=exclusion_type,json=exclusionType,proto3" json:"exclusion_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TeXroSubobjUnnum) Reset()         { *m = TeXroSubobjUnnum{} }
func (m *TeXroSubobjUnnum) String() string { return proto.CompactTextString(m) }
func (*TeXroSubobjUnnum) ProtoMessage()    {}
func (*TeXroSubobjUnnum) Descriptor() ([]byte, []int) {
	return fileDescriptor_97fd10a364dd9ffd, []int{18}
}

func (m *TeXroSubobjUnnum) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TeXroSubobjUnnum.Unmarshal(m, b)
}
func (m *TeXroSubobjUnnum) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TeXroSubobjUnnum.Marshal(b, m, deterministic)
}
func (m *TeXroSubobjUnnum) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TeXroSubobjUnnum.Merge(m, src)
}
func (m *TeXroSubobjUnnum) XXX_Size() int {
	return xxx_messageInfo_TeXroSubobjUnnum.Size(m)
}
func (m *TeXroSubobjUnnum) XXX_DiscardUnknown() {
	xxx_messageInfo_TeXroSubobjUnnum.DiscardUnknown(m)
}

var xxx_messageInfo_TeXroSubobjUnnum proto.InternalMessageInfo

func (m *TeXroSubobjUnnum) GetTeRouterId() string {
	if m != nil {
		return m.TeRouterId
	}
	return ""
}

func (m *TeXroSubobjUnnum) GetInterfaceId() uint32 {
	if m != nil {
		return m.InterfaceId
	}
	return 0
}

func (m *TeXroSubobjUnnum) GetAttribute() string {
	if m != nil {
		return m.Attribute
	}
	return ""
}

func (m *TeXroSubobjUnnum) GetExclusionType() string {
	if m != nil {
		return m.ExclusionType
	}
	return ""
}

type TeXroSubobjAs struct {
	AsNumber             uint32   `protobuf:"varint,1,opt,name=as_number,json=asNumber,proto3" json:"as_number,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TeXroSubobjAs) Reset()         { *m = TeXroSubobjAs{} }
func (m *TeXroSubobjAs) String() string { return proto.CompactTextString(m) }
func (*TeXroSubobjAs) ProtoMessage()    {}
func (*TeXroSubobjAs) Descriptor() ([]byte, []int) {
	return fileDescriptor_97fd10a364dd9ffd, []int{19}
}

func (m *TeXroSubobjAs) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TeXroSubobjAs.Unmarshal(m, b)
}
func (m *TeXroSubobjAs) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TeXroSubobjAs.Marshal(b, m, deterministic)
}
func (m *TeXroSubobjAs) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TeXroSubobjAs.Merge(m, src)
}
func (m *TeXroSubobjAs) XXX_Size() int {
	return xxx_messageInfo_TeXroSubobjAs.Size(m)
}
func (m *TeXroSubobjAs) XXX_DiscardUnknown() {
	xxx_messageInfo_TeXroSubobjAs.DiscardUnknown(m)
}

var xxx_messageInfo_TeXroSubobjAs proto.InternalMessageInfo

func (m *TeXroSubobjAs) GetAsNumber() uint32 {
	if m != nil {
		return m.AsNumber
	}
	return 0
}

type TeXroSubobjSrlg struct {
	SrlgId               uint32   `protobuf:"varint,1,opt,name=srlg_id,json=srlgId,proto3" json:"srlg_id,omitempty"`
	ExclusionType        string   `protobuf:"bytes,2,opt,name=exclusion_type,json=exclusionType,proto3" json:"exclusion_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TeXroSubobjSrlg) Reset()         { *m = TeXroSubobjSrlg{} }
func (m *TeXroSubobjSrlg) String() string { return proto.CompactTextString(m) }
func (*TeXroSubobjSrlg) ProtoMessage()    {}
func (*TeXroSubobjSrlg) Descriptor() ([]byte, []int) {
	return fileDescriptor_97fd10a364dd9ffd, []int{20}
}

func (m *TeXroSubobjSrlg) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TeXroSubobjSrlg.Unmarshal(m, b)
}
func (m *TeXroSubobjSrlg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TeXroSubobjSrlg.Marshal(b, m, deterministic)
}
func (m *TeXroSubobjSrlg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TeXroSubobjSrlg.Merge(m, src)
}
func (m *TeXroSubobjSrlg) XXX_Size() int {
	return xxx_messageInfo_TeXroSubobjSrlg.Size(m)
}
func (m *TeXroSubobjSrlg) XXX_DiscardUnknown() {
	xxx_messageInfo_TeXroSubobjSrlg.DiscardUnknown(m)
}

var xxx_messageInfo_TeXroSubobjSrlg proto.InternalMessageInfo

func (m *TeXroSubobjSrlg) GetSrlgId() uint32 {
	if m != nil {
		return m.SrlgId
	}
	return 0
}

func (m *TeXroSubobjSrlg) GetExclusionType() string {
	if m != nil {
		return m.ExclusionType
	}
	return ""
}

type TeLspFecCtypeDataT struct {
	FecCtype             string   `protobuf:"bytes,1,opt,name=fec_ctype,json=fecCtype,proto3" json:"fec_ctype,omitempty"`
	P2PLspDestination    string   `protobuf:"bytes,2,opt,name=p2p_lsp_destination,json=p2pLspDestination,proto3" json:"p2p_lsp_destination,omitempty"`
	FecDestinationP2MpId uint32   `protobuf:"varint,3,opt,name=fec_destination_p2mp_id,json=fecDestinationP2mpId,proto3" json:"fec_destination_p2mp_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TeLspFecCtypeDataT) Reset()         { *m = TeLspFecCtypeDataT{} }
func (m *TeLspFecCtypeDataT) String() string { return proto.CompactTextString(m) }
func (*TeLspFecCtypeDataT) ProtoMessage()    {}
func (*TeLspFecCtypeDataT) Descriptor() ([]byte, []int) {
	return fileDescriptor_97fd10a364dd9ffd, []int{21}
}

func (m *TeLspFecCtypeDataT) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TeLspFecCtypeDataT.Unmarshal(m, b)
}
func (m *TeLspFecCtypeDataT) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TeLspFecCtypeDataT.Marshal(b, m, deterministic)
}
func (m *TeLspFecCtypeDataT) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TeLspFecCtypeDataT.Merge(m, src)
}
func (m *TeLspFecCtypeDataT) XXX_Size() int {
	return xxx_messageInfo_TeLspFecCtypeDataT.Size(m)
}
func (m *TeLspFecCtypeDataT) XXX_DiscardUnknown() {
	xxx_messageInfo_TeLspFecCtypeDataT.DiscardUnknown(m)
}

var xxx_messageInfo_TeLspFecCtypeDataT proto.InternalMessageInfo

func (m *TeLspFecCtypeDataT) GetFecCtype() string {
	if m != nil {
		return m.FecCtype
	}
	return ""
}

func (m *TeLspFecCtypeDataT) GetP2PLspDestination() string {
	if m != nil {
		return m.P2PLspDestination
	}
	return ""
}

func (m *TeLspFecCtypeDataT) GetFecDestinationP2MpId() uint32 {
	if m != nil {
		return m.FecDestinationP2MpId
	}
	return 0
}

type TeLspFecT struct {
	FecLspId             uint32              `protobuf:"varint,1,opt,name=fec_lsp_id,json=fecLspId,proto3" json:"fec_lsp_id,omitempty"`
	FecTunnelId          uint32              `protobuf:"varint,2,opt,name=fec_tunnel_id,json=fecTunnelId,proto3" json:"fec_tunnel_id,omitempty"`
	FecExtendedTunnelId  string              `protobuf:"bytes,3,opt,name=fec_extended_tunnel_id,json=fecExtendedTunnelId,proto3" json:"fec_extended_tunnel_id,omitempty"`
	FecSource            string              `protobuf:"bytes,4,opt,name=fec_source,json=fecSource,proto3" json:"fec_source,omitempty"`
	FecDestinationInfo   *TeLspFecCtypeDataT `protobuf:"bytes,5,opt,name=fec_destination_info,json=fecDestinationInfo,proto3" json:"fec_destination_info,omitempty"`
	FecVrf               string              `protobuf:"bytes,6,opt,name=fec_vrf,json=fecVrf,proto3" json:"fec_vrf,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *TeLspFecT) Reset()         { *m = TeLspFecT{} }
func (m *TeLspFecT) String() string { return proto.CompactTextString(m) }
func (*TeLspFecT) ProtoMessage()    {}
func (*TeLspFecT) Descriptor() ([]byte, []int) {
	return fileDescriptor_97fd10a364dd9ffd, []int{22}
}

func (m *TeLspFecT) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TeLspFecT.Unmarshal(m, b)
}
func (m *TeLspFecT) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TeLspFecT.Marshal(b, m, deterministic)
}
func (m *TeLspFecT) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TeLspFecT.Merge(m, src)
}
func (m *TeLspFecT) XXX_Size() int {
	return xxx_messageInfo_TeLspFecT.Size(m)
}
func (m *TeLspFecT) XXX_DiscardUnknown() {
	xxx_messageInfo_TeLspFecT.DiscardUnknown(m)
}

var xxx_messageInfo_TeLspFecT proto.InternalMessageInfo

func (m *TeLspFecT) GetFecLspId() uint32 {
	if m != nil {
		return m.FecLspId
	}
	return 0
}

func (m *TeLspFecT) GetFecTunnelId() uint32 {
	if m != nil {
		return m.FecTunnelId
	}
	return 0
}

func (m *TeLspFecT) GetFecExtendedTunnelId() string {
	if m != nil {
		return m.FecExtendedTunnelId
	}
	return ""
}

func (m *TeLspFecT) GetFecSource() string {
	if m != nil {
		return m.FecSource
	}
	return ""
}

func (m *TeLspFecT) GetFecDestinationInfo() *TeLspFecCtypeDataT {
	if m != nil {
		return m.FecDestinationInfo
	}
	return nil
}

func (m *TeLspFecT) GetFecVrf() string {
	if m != nil {
		return m.FecVrf
	}
	return ""
}

type TeXroSubobjP2PLsp struct {
	Fec                      *TeLspFecT `protobuf:"bytes,1,opt,name=fec,proto3" json:"fec,omitempty"`
	IgnoreLspId              bool       `protobuf:"varint,2,opt,name=ignore_lsp_id,json=ignoreLspId,proto3" json:"ignore_lsp_id,omitempty"`
	ProcessingNodeException  bool       `protobuf:"varint,3,opt,name=processing_node_exception,json=processingNodeException,proto3" json:"processing_node_exception,omitempty"`
	PenultimateNodeException bool       `protobuf:"varint,4,opt,name=penultimate_node_exception,json=penultimateNodeException,proto3" json:"penultimate_node_exception,omitempty"`
	DestinationNodeException bool       `protobuf:"varint,5,opt,name=destination_node_exception,json=destinationNodeException,proto3" json:"destination_node_exception,omitempty"`
	ExclusionType            string     `protobuf:"bytes,6,opt,name=exclusion_type,json=exclusionType,proto3" json:"exclusion_type,omitempty"`
	XXX_NoUnkeyedLiteral     struct{}   `json:"-"`
	XXX_unrecognized         []byte     `json:"-"`
	XXX_sizecache            int32      `json:"-"`
}

func (m *TeXroSubobjP2PLsp) Reset()         { *m = TeXroSubobjP2PLsp{} }
func (m *TeXroSubobjP2PLsp) String() string { return proto.CompactTextString(m) }
func (*TeXroSubobjP2PLsp) ProtoMessage()    {}
func (*TeXroSubobjP2PLsp) Descriptor() ([]byte, []int) {
	return fileDescriptor_97fd10a364dd9ffd, []int{23}
}

func (m *TeXroSubobjP2PLsp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TeXroSubobjP2PLsp.Unmarshal(m, b)
}
func (m *TeXroSubobjP2PLsp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TeXroSubobjP2PLsp.Marshal(b, m, deterministic)
}
func (m *TeXroSubobjP2PLsp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TeXroSubobjP2PLsp.Merge(m, src)
}
func (m *TeXroSubobjP2PLsp) XXX_Size() int {
	return xxx_messageInfo_TeXroSubobjP2PLsp.Size(m)
}
func (m *TeXroSubobjP2PLsp) XXX_DiscardUnknown() {
	xxx_messageInfo_TeXroSubobjP2PLsp.DiscardUnknown(m)
}

var xxx_messageInfo_TeXroSubobjP2PLsp proto.InternalMessageInfo

func (m *TeXroSubobjP2PLsp) GetFec() *TeLspFecT {
	if m != nil {
		return m.Fec
	}
	return nil
}

func (m *TeXroSubobjP2PLsp) GetIgnoreLspId() bool {
	if m != nil {
		return m.IgnoreLspId
	}
	return false
}

func (m *TeXroSubobjP2PLsp) GetProcessingNodeException() bool {
	if m != nil {
		return m.ProcessingNodeException
	}
	return false
}

func (m *TeXroSubobjP2PLsp) GetPenultimateNodeException() bool {
	if m != nil {
		return m.PenultimateNodeException
	}
	return false
}

func (m *TeXroSubobjP2PLsp) GetDestinationNodeException() bool {
	if m != nil {
		return m.DestinationNodeException
	}
	return false
}

func (m *TeXroSubobjP2PLsp) GetExclusionType() string {
	if m != nil {
		return m.ExclusionType
	}
	return ""
}

type TeXroSubobj struct {
	Type                 string             `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Ipv4Subobject        *TeXroSubobjIpv4   `protobuf:"bytes,2,opt,name=ipv4_subobject,json=ipv4Subobject,proto3" json:"ipv4_subobject,omitempty"`
	Ipv6Subobject        *TeXroSubobjIpv6   `protobuf:"bytes,3,opt,name=ipv6_subobject,json=ipv6Subobject,proto3" json:"ipv6_subobject,omitempty"`
	UnnumberedSubobject  *TeXroSubobjUnnum  `protobuf:"bytes,4,opt,name=unnumbered_subobject,json=unnumberedSubobject,proto3" json:"unnumbered_subobject,omitempty"`
	AsSubobject          *TeXroSubobjAs     `protobuf:"bytes,5,opt,name=as_subobject,json=asSubobject,proto3" json:"as_subobject,omitempty"`
	SrlgSubobject        *TeXroSubobjSrlg   `protobuf:"bytes,6,opt,name=srlg_subobject,json=srlgSubobject,proto3" json:"srlg_subobject,omitempty"`
	LspSubobject         *TeXroSubobjP2PLsp `protobuf:"bytes,7,opt,name=lsp_subobject,json=lspSubobject,proto3" json:"lsp_subobject,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *TeXroSubobj) Reset()         { *m = TeXroSubobj{} }
func (m *TeXroSubobj) String() string { return proto.CompactTextString(m) }
func (*TeXroSubobj) ProtoMessage()    {}
func (*TeXroSubobj) Descriptor() ([]byte, []int) {
	return fileDescriptor_97fd10a364dd9ffd, []int{24}
}

func (m *TeXroSubobj) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TeXroSubobj.Unmarshal(m, b)
}
func (m *TeXroSubobj) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TeXroSubobj.Marshal(b, m, deterministic)
}
func (m *TeXroSubobj) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TeXroSubobj.Merge(m, src)
}
func (m *TeXroSubobj) XXX_Size() int {
	return xxx_messageInfo_TeXroSubobj.Size(m)
}
func (m *TeXroSubobj) XXX_DiscardUnknown() {
	xxx_messageInfo_TeXroSubobj.DiscardUnknown(m)
}

var xxx_messageInfo_TeXroSubobj proto.InternalMessageInfo

func (m *TeXroSubobj) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *TeXroSubobj) GetIpv4Subobject() *TeXroSubobjIpv4 {
	if m != nil {
		return m.Ipv4Subobject
	}
	return nil
}

func (m *TeXroSubobj) GetIpv6Subobject() *TeXroSubobjIpv6 {
	if m != nil {
		return m.Ipv6Subobject
	}
	return nil
}

func (m *TeXroSubobj) GetUnnumberedSubobject() *TeXroSubobjUnnum {
	if m != nil {
		return m.UnnumberedSubobject
	}
	return nil
}

func (m *TeXroSubobj) GetAsSubobject() *TeXroSubobjAs {
	if m != nil {
		return m.AsSubobject
	}
	return nil
}

func (m *TeXroSubobj) GetSrlgSubobject() *TeXroSubobjSrlg {
	if m != nil {
		return m.SrlgSubobject
	}
	return nil
}

func (m *TeXroSubobj) GetLspSubobject() *TeXroSubobjP2PLsp {
	if m != nil {
		return m.LspSubobject
	}
	return nil
}

type TeXro struct {
	XroSubobject         []*TeXroSubobj `protobuf:"bytes,1,rep,name=xro_subobject,json=xroSubobject,proto3" json:"xro_subobject,omitempty"`
	MutualDiversityFlag  bool           `protobuf:"varint,2,opt,name=mutual_diversity_flag,json=mutualDiversityFlag,proto3" json:"mutual_diversity_flag,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *TeXro) Reset()         { *m = TeXro{} }
func (m *TeXro) String() string { return proto.CompactTextString(m) }
func (*TeXro) ProtoMessage()    {}
func (*TeXro) Descriptor() ([]byte, []int) {
	return fileDescriptor_97fd10a364dd9ffd, []int{25}
}

func (m *TeXro) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TeXro.Unmarshal(m, b)
}
func (m *TeXro) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TeXro.Marshal(b, m, deterministic)
}
func (m *TeXro) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TeXro.Merge(m, src)
}
func (m *TeXro) XXX_Size() int {
	return xxx_messageInfo_TeXro.Size(m)
}
func (m *TeXro) XXX_DiscardUnknown() {
	xxx_messageInfo_TeXro.DiscardUnknown(m)
}

var xxx_messageInfo_TeXro proto.InternalMessageInfo

func (m *TeXro) GetXroSubobject() []*TeXroSubobj {
	if m != nil {
		return m.XroSubobject
	}
	return nil
}

func (m *TeXro) GetMutualDiversityFlag() bool {
	if m != nil {
		return m.MutualDiversityFlag
	}
	return false
}

type MplsTeAttributeSetXro struct {
	Xro                  *TeXro   `protobuf:"bytes,1,opt,name=xro,proto3" json:"xro,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MplsTeAttributeSetXro) Reset()         { *m = MplsTeAttributeSetXro{} }
func (m *MplsTeAttributeSetXro) String() string { return proto.CompactTextString(m) }
func (*MplsTeAttributeSetXro) ProtoMessage()    {}
func (*MplsTeAttributeSetXro) Descriptor() ([]byte, []int) {
	return fileDescriptor_97fd10a364dd9ffd, []int{26}
}

func (m *MplsTeAttributeSetXro) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsTeAttributeSetXro.Unmarshal(m, b)
}
func (m *MplsTeAttributeSetXro) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsTeAttributeSetXro.Marshal(b, m, deterministic)
}
func (m *MplsTeAttributeSetXro) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsTeAttributeSetXro.Merge(m, src)
}
func (m *MplsTeAttributeSetXro) XXX_Size() int {
	return xxx_messageInfo_MplsTeAttributeSetXro.Size(m)
}
func (m *MplsTeAttributeSetXro) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsTeAttributeSetXro.DiscardUnknown(m)
}

var xxx_messageInfo_MplsTeAttributeSetXro proto.InternalMessageInfo

func (m *MplsTeAttributeSetXro) GetXro() *TeXro {
	if m != nil {
		return m.Xro
	}
	return nil
}

type MplsTeAttributeSetP2MpTe struct {
	FastReroute            bool                       `protobuf:"varint,1,opt,name=fast_reroute,json=fastReroute,proto3" json:"fast_reroute,omitempty"`
	FrrBandwidthProtection bool                       `protobuf:"varint,2,opt,name=frr_bandwidth_protection,json=frrBandwidthProtection,proto3" json:"frr_bandwidth_protection,omitempty"`
	SetupPriority          uint32                     `protobuf:"varint,3,opt,name=setup_priority,json=setupPriority,proto3" json:"setup_priority,omitempty"`
	HoldPriority           uint32                     `protobuf:"varint,4,opt,name=hold_priority,json=holdPriority,proto3" json:"hold_priority,omitempty"`
	IsPriorityConfigured   bool                       `protobuf:"varint,5,opt,name=is_priority_configured,json=isPriorityConfigured,proto3" json:"is_priority_configured,omitempty"`
	ConfiguredBandwidth    uint32                     `protobuf:"varint,6,opt,name=configured_bandwidth,json=configuredBandwidth,proto3" json:"configured_bandwidth,omitempty"`
	DsteClassType          uint32                     `protobuf:"varint,7,opt,name=dste_class_type,json=dsteClassType,proto3" json:"dste_class_type,omitempty"`
	IsBandwidthConfigured  bool                       `protobuf:"varint,8,opt,name=is_bandwidth_configured,json=isBandwidthConfigured,proto3" json:"is_bandwidth_configured,omitempty"`
	TunnelId               []uint32                   `protobuf:"varint,9,rep,packed,name=tunnel_id,json=tunnelId,proto3" json:"tunnel_id,omitempty"`
	Affinity               *MplsTeTunnelsAffinityInfo `protobuf:"bytes,10,opt,name=affinity,proto3" json:"affinity,omitempty"`
	IsAffinityConfigured   bool                       `protobuf:"varint,11,opt,name=is_affinity_configured,json=isAffinityConfigured,proto3" json:"is_affinity_configured,omitempty"`
	XXX_NoUnkeyedLiteral   struct{}                   `json:"-"`
	XXX_unrecognized       []byte                     `json:"-"`
	XXX_sizecache          int32                      `json:"-"`
}

func (m *MplsTeAttributeSetP2MpTe) Reset()         { *m = MplsTeAttributeSetP2MpTe{} }
func (m *MplsTeAttributeSetP2MpTe) String() string { return proto.CompactTextString(m) }
func (*MplsTeAttributeSetP2MpTe) ProtoMessage()    {}
func (*MplsTeAttributeSetP2MpTe) Descriptor() ([]byte, []int) {
	return fileDescriptor_97fd10a364dd9ffd, []int{27}
}

func (m *MplsTeAttributeSetP2MpTe) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsTeAttributeSetP2MpTe.Unmarshal(m, b)
}
func (m *MplsTeAttributeSetP2MpTe) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsTeAttributeSetP2MpTe.Marshal(b, m, deterministic)
}
func (m *MplsTeAttributeSetP2MpTe) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsTeAttributeSetP2MpTe.Merge(m, src)
}
func (m *MplsTeAttributeSetP2MpTe) XXX_Size() int {
	return xxx_messageInfo_MplsTeAttributeSetP2MpTe.Size(m)
}
func (m *MplsTeAttributeSetP2MpTe) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsTeAttributeSetP2MpTe.DiscardUnknown(m)
}

var xxx_messageInfo_MplsTeAttributeSetP2MpTe proto.InternalMessageInfo

func (m *MplsTeAttributeSetP2MpTe) GetFastReroute() bool {
	if m != nil {
		return m.FastReroute
	}
	return false
}

func (m *MplsTeAttributeSetP2MpTe) GetFrrBandwidthProtection() bool {
	if m != nil {
		return m.FrrBandwidthProtection
	}
	return false
}

func (m *MplsTeAttributeSetP2MpTe) GetSetupPriority() uint32 {
	if m != nil {
		return m.SetupPriority
	}
	return 0
}

func (m *MplsTeAttributeSetP2MpTe) GetHoldPriority() uint32 {
	if m != nil {
		return m.HoldPriority
	}
	return 0
}

func (m *MplsTeAttributeSetP2MpTe) GetIsPriorityConfigured() bool {
	if m != nil {
		return m.IsPriorityConfigured
	}
	return false
}

func (m *MplsTeAttributeSetP2MpTe) GetConfiguredBandwidth() uint32 {
	if m != nil {
		return m.ConfiguredBandwidth
	}
	return 0
}

func (m *MplsTeAttributeSetP2MpTe) GetDsteClassType() uint32 {
	if m != nil {
		return m.DsteClassType
	}
	return 0
}

func (m *MplsTeAttributeSetP2MpTe) GetIsBandwidthConfigured() bool {
	if m != nil {
		return m.IsBandwidthConfigured
	}
	return false
}

func (m *MplsTeAttributeSetP2MpTe) GetTunnelId() []uint32 {
	if m != nil {
		return m.TunnelId
	}
	return nil
}

func (m *MplsTeAttributeSetP2MpTe) GetAffinity() *MplsTeTunnelsAffinityInfo {
	if m != nil {
		return m.Affinity
	}
	return nil
}

func (m *MplsTeAttributeSetP2MpTe) GetIsAffinityConfigured() bool {
	if m != nil {
		return m.IsAffinityConfigured
	}
	return false
}

type TeRevertSchT struct {
	Schedulename         []string `protobuf:"bytes,1,rep,name=schedulename,proto3" json:"schedulename,omitempty"`
	ScheduleDate         uint32   `protobuf:"varint,2,opt,name=schedule_date,json=scheduleDate,proto3" json:"schedule_date,omitempty"`
	ScheduleFrequency    string   `protobuf:"bytes,3,opt,name=schedule_frequency,json=scheduleFrequency,proto3" json:"schedule_frequency,omitempty"`
	Duration             uint32   `protobuf:"varint,4,opt,name=duration,proto3" json:"duration,omitempty"`
	MaxTries             uint32   `protobuf:"varint,5,opt,name=max_tries,json=maxTries,proto3" json:"max_tries,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TeRevertSchT) Reset()         { *m = TeRevertSchT{} }
func (m *TeRevertSchT) String() string { return proto.CompactTextString(m) }
func (*TeRevertSchT) ProtoMessage()    {}
func (*TeRevertSchT) Descriptor() ([]byte, []int) {
	return fileDescriptor_97fd10a364dd9ffd, []int{28}
}

func (m *TeRevertSchT) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TeRevertSchT.Unmarshal(m, b)
}
func (m *TeRevertSchT) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TeRevertSchT.Marshal(b, m, deterministic)
}
func (m *TeRevertSchT) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TeRevertSchT.Merge(m, src)
}
func (m *TeRevertSchT) XXX_Size() int {
	return xxx_messageInfo_TeRevertSchT.Size(m)
}
func (m *TeRevertSchT) XXX_DiscardUnknown() {
	xxx_messageInfo_TeRevertSchT.DiscardUnknown(m)
}

var xxx_messageInfo_TeRevertSchT proto.InternalMessageInfo

func (m *TeRevertSchT) GetSchedulename() []string {
	if m != nil {
		return m.Schedulename
	}
	return nil
}

func (m *TeRevertSchT) GetScheduleDate() uint32 {
	if m != nil {
		return m.ScheduleDate
	}
	return 0
}

func (m *TeRevertSchT) GetScheduleFrequency() string {
	if m != nil {
		return m.ScheduleFrequency
	}
	return ""
}

func (m *TeRevertSchT) GetDuration() uint32 {
	if m != nil {
		return m.Duration
	}
	return 0
}

func (m *TeRevertSchT) GetMaxTries() uint32 {
	if m != nil {
		return m.MaxTries
	}
	return 0
}

type MplsTeAttributeSetApsPp struct {
	SncMode              string        `protobuf:"bytes,1,opt,name=snc_mode,json=sncMode,proto3" json:"snc_mode,omitempty"`
	TcmId                uint32        `protobuf:"varint,2,opt,name=tcm_id,json=tcmId,proto3" json:"tcm_id,omitempty"`
	ProtectionType       string        `protobuf:"bytes,3,opt,name=protection_type,json=protectionType,proto3" json:"protection_type,omitempty"`
	ProtectionMode       string        `protobuf:"bytes,4,opt,name=protection_mode,json=protectionMode,proto3" json:"protection_mode,omitempty"`
	WaitToRestoreTime    uint32        `protobuf:"varint,5,opt,name=wait_to_restore_time,json=waitToRestoreTime,proto3" json:"wait_to_restore_time,omitempty"`
	HoldOffTime          uint32        `protobuf:"varint,6,opt,name=hold_off_time,json=holdOffTime,proto3" json:"hold_off_time,omitempty"`
	RevertSchedule       *TeRevertSchT `protobuf:"bytes,7,opt,name=revert_schedule,json=revertSchedule,proto3" json:"revert_schedule,omitempty"`
	PathProtProfileType  string        `protobuf:"bytes,8,opt,name=path_prot_profile_type,json=pathProtProfileType,proto3" json:"path_prot_profile_type,omitempty"`
	RestorationStyle     string        `protobuf:"bytes,9,opt,name=restoration_style,json=restorationStyle,proto3" json:"restoration_style,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *MplsTeAttributeSetApsPp) Reset()         { *m = MplsTeAttributeSetApsPp{} }
func (m *MplsTeAttributeSetApsPp) String() string { return proto.CompactTextString(m) }
func (*MplsTeAttributeSetApsPp) ProtoMessage()    {}
func (*MplsTeAttributeSetApsPp) Descriptor() ([]byte, []int) {
	return fileDescriptor_97fd10a364dd9ffd, []int{29}
}

func (m *MplsTeAttributeSetApsPp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsTeAttributeSetApsPp.Unmarshal(m, b)
}
func (m *MplsTeAttributeSetApsPp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsTeAttributeSetApsPp.Marshal(b, m, deterministic)
}
func (m *MplsTeAttributeSetApsPp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsTeAttributeSetApsPp.Merge(m, src)
}
func (m *MplsTeAttributeSetApsPp) XXX_Size() int {
	return xxx_messageInfo_MplsTeAttributeSetApsPp.Size(m)
}
func (m *MplsTeAttributeSetApsPp) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsTeAttributeSetApsPp.DiscardUnknown(m)
}

var xxx_messageInfo_MplsTeAttributeSetApsPp proto.InternalMessageInfo

func (m *MplsTeAttributeSetApsPp) GetSncMode() string {
	if m != nil {
		return m.SncMode
	}
	return ""
}

func (m *MplsTeAttributeSetApsPp) GetTcmId() uint32 {
	if m != nil {
		return m.TcmId
	}
	return 0
}

func (m *MplsTeAttributeSetApsPp) GetProtectionType() string {
	if m != nil {
		return m.ProtectionType
	}
	return ""
}

func (m *MplsTeAttributeSetApsPp) GetProtectionMode() string {
	if m != nil {
		return m.ProtectionMode
	}
	return ""
}

func (m *MplsTeAttributeSetApsPp) GetWaitToRestoreTime() uint32 {
	if m != nil {
		return m.WaitToRestoreTime
	}
	return 0
}

func (m *MplsTeAttributeSetApsPp) GetHoldOffTime() uint32 {
	if m != nil {
		return m.HoldOffTime
	}
	return 0
}

func (m *MplsTeAttributeSetApsPp) GetRevertSchedule() *TeRevertSchT {
	if m != nil {
		return m.RevertSchedule
	}
	return nil
}

func (m *MplsTeAttributeSetApsPp) GetPathProtProfileType() string {
	if m != nil {
		return m.PathProtProfileType
	}
	return ""
}

func (m *MplsTeAttributeSetApsPp) GetRestorationStyle() string {
	if m != nil {
		return m.RestorationStyle
	}
	return ""
}

type MplsTeAttributeSetSrPrependEntry struct {
	Type                 string   `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Index                uint32   `protobuf:"varint,2,opt,name=index,proto3" json:"index,omitempty"`
	NextLabel            uint32   `protobuf:"varint,3,opt,name=next_label,json=nextLabel,proto3" json:"next_label,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MplsTeAttributeSetSrPrependEntry) Reset()         { *m = MplsTeAttributeSetSrPrependEntry{} }
func (m *MplsTeAttributeSetSrPrependEntry) String() string { return proto.CompactTextString(m) }
func (*MplsTeAttributeSetSrPrependEntry) ProtoMessage()    {}
func (*MplsTeAttributeSetSrPrependEntry) Descriptor() ([]byte, []int) {
	return fileDescriptor_97fd10a364dd9ffd, []int{30}
}

func (m *MplsTeAttributeSetSrPrependEntry) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsTeAttributeSetSrPrependEntry.Unmarshal(m, b)
}
func (m *MplsTeAttributeSetSrPrependEntry) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsTeAttributeSetSrPrependEntry.Marshal(b, m, deterministic)
}
func (m *MplsTeAttributeSetSrPrependEntry) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsTeAttributeSetSrPrependEntry.Merge(m, src)
}
func (m *MplsTeAttributeSetSrPrependEntry) XXX_Size() int {
	return xxx_messageInfo_MplsTeAttributeSetSrPrependEntry.Size(m)
}
func (m *MplsTeAttributeSetSrPrependEntry) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsTeAttributeSetSrPrependEntry.DiscardUnknown(m)
}

var xxx_messageInfo_MplsTeAttributeSetSrPrependEntry proto.InternalMessageInfo

func (m *MplsTeAttributeSetSrPrependEntry) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *MplsTeAttributeSetSrPrependEntry) GetIndex() uint32 {
	if m != nil {
		return m.Index
	}
	return 0
}

func (m *MplsTeAttributeSetSrPrependEntry) GetNextLabel() uint32 {
	if m != nil {
		return m.NextLabel
	}
	return 0
}

type MplsTeAttributeSetSrPrependList struct {
	PrependEntry         []*MplsTeAttributeSetSrPrependEntry `protobuf:"bytes,1,rep,name=prepend_entry,json=prependEntry,proto3" json:"prepend_entry,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                            `json:"-"`
	XXX_unrecognized     []byte                              `json:"-"`
	XXX_sizecache        int32                               `json:"-"`
}

func (m *MplsTeAttributeSetSrPrependList) Reset()         { *m = MplsTeAttributeSetSrPrependList{} }
func (m *MplsTeAttributeSetSrPrependList) String() string { return proto.CompactTextString(m) }
func (*MplsTeAttributeSetSrPrependList) ProtoMessage()    {}
func (*MplsTeAttributeSetSrPrependList) Descriptor() ([]byte, []int) {
	return fileDescriptor_97fd10a364dd9ffd, []int{31}
}

func (m *MplsTeAttributeSetSrPrependList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsTeAttributeSetSrPrependList.Unmarshal(m, b)
}
func (m *MplsTeAttributeSetSrPrependList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsTeAttributeSetSrPrependList.Marshal(b, m, deterministic)
}
func (m *MplsTeAttributeSetSrPrependList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsTeAttributeSetSrPrependList.Merge(m, src)
}
func (m *MplsTeAttributeSetSrPrependList) XXX_Size() int {
	return xxx_messageInfo_MplsTeAttributeSetSrPrependList.Size(m)
}
func (m *MplsTeAttributeSetSrPrependList) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsTeAttributeSetSrPrependList.DiscardUnknown(m)
}

var xxx_messageInfo_MplsTeAttributeSetSrPrependList proto.InternalMessageInfo

func (m *MplsTeAttributeSetSrPrependList) GetPrependEntry() []*MplsTeAttributeSetSrPrependEntry {
	if m != nil {
		return m.PrependEntry
	}
	return nil
}

type MplsTeAttributeSetP2PTe struct {
	TunnelId                                                   []uint32                         `protobuf:"varint,1,rep,packed,name=tunnel_id,json=tunnelId,proto3" json:"tunnel_id,omitempty"`
	Affinity                                                   *MplsTeTunnelsAffinityInfo       `protobuf:"bytes,2,opt,name=affinity,proto3" json:"affinity,omitempty"`
	IsAffinityConfigured                                       bool                             `protobuf:"varint,3,opt,name=is_affinity_configured,json=isAffinityConfigured,proto3" json:"is_affinity_configured,omitempty"`
	PathSelectionSegmentRoutingAdjacencyProtection             string                           `protobuf:"bytes,4,opt,name=path_selection_segment_routing_adjacency_protection,json=pathSelectionSegmentRoutingAdjacencyProtection,proto3" json:"path_selection_segment_routing_adjacency_protection,omitempty"`
	IsPathSelectionSegmentRoutingAdjacencyProtectionConfigured bool                             `protobuf:"varint,5,opt,name=is_path_selection_segment_routing_adjacency_protection_configured,json=isPathSelectionSegmentRoutingAdjacencyProtectionConfigured,proto3" json:"is_path_selection_segment_routing_adjacency_protection_configured,omitempty"`
	PathInvalidationTimeout                                    uint32                           `protobuf:"varint,6,opt,name=path_invalidation_timeout,json=pathInvalidationTimeout,proto3" json:"path_invalidation_timeout,omitempty"`
	PathSelectionInvalidationAction                            string                           `protobuf:"bytes,7,opt,name=path_selection_invalidation_action,json=pathSelectionInvalidationAction,proto3" json:"path_selection_invalidation_action,omitempty"`
	IsPathInvalidationTimeoutConfigured                        bool                             `protobuf:"varint,8,opt,name=is_path_invalidation_timeout_configured,json=isPathInvalidationTimeoutConfigured,proto3" json:"is_path_invalidation_timeout_configured,omitempty"`
	IsPathInvalidationActionConfigured                         bool                             `protobuf:"varint,9,opt,name=is_path_invalidation_action_configured,json=isPathInvalidationActionConfigured,proto3" json:"is_path_invalidation_action_configured,omitempty"`
	PathSelectionMetric                                        string                           `protobuf:"bytes,10,opt,name=path_selection_metric,json=pathSelectionMetric,proto3" json:"path_selection_metric,omitempty"`
	IsPathSelectionMetricConfigured                            bool                             `protobuf:"varint,11,opt,name=is_path_selection_metric_configured,json=isPathSelectionMetricConfigured,proto3" json:"is_path_selection_metric_configured,omitempty"`
	PathSelectionSegmentRoutingMargin                          uint32                           `protobuf:"varint,12,opt,name=path_selection_segment_routing_margin,json=pathSelectionSegmentRoutingMargin,proto3" json:"path_selection_segment_routing_margin,omitempty"`
	IsPathSelectionSegmentRoutingMarginRelative                bool                             `protobuf:"varint,13,opt,name=is_path_selection_segment_routing_margin_relative,json=isPathSelectionSegmentRoutingMarginRelative,proto3" json:"is_path_selection_segment_routing_margin_relative,omitempty"`
	IsPathSelectionSegmentRoutingMarginConfigured              bool                             `protobuf:"varint,14,opt,name=is_path_selection_segment_routing_margin_configured,json=isPathSelectionSegmentRoutingMarginConfigured,proto3" json:"is_path_selection_segment_routing_margin_configured,omitempty"`
	PathSelectionSegmentRoutingSegmentLimit                    uint32                           `protobuf:"varint,15,opt,name=path_selection_segment_routing_segment_limit,json=pathSelectionSegmentRoutingSegmentLimit,proto3" json:"path_selection_segment_routing_segment_limit,omitempty"`
	IsPathSelectionSegmentRoutingSegmentLimitConfigured        bool                             `protobuf:"varint,16,opt,name=is_path_selection_segment_routing_segment_limit_configured,json=isPathSelectionSegmentRoutingSegmentLimitConfigured,proto3" json:"is_path_selection_segment_routing_segment_limit_configured,omitempty"`
	IsPathSelectConfigured                                     bool                             `protobuf:"varint,17,opt,name=is_path_select_configured,json=isPathSelectConfigured,proto3" json:"is_path_select_configured,omitempty"`
	Logging                                                    *MplsTeLoggingAttributes         `protobuf:"bytes,18,opt,name=logging,proto3" json:"logging,omitempty"`
	PrependList                                                *MplsTeAttributeSetSrPrependList `protobuf:"bytes,19,opt,name=prepend_list,json=prependList,proto3" json:"prepend_list,omitempty"`
	IsPrependListConfigured                                    bool                             `protobuf:"varint,20,opt,name=is_prepend_list_configured,json=isPrependListConfigured,proto3" json:"is_prepend_list_configured,omitempty"`
	IsPceConfigured                                            bool                             `protobuf:"varint,21,opt,name=is_pce_configured,json=isPceConfigured,proto3" json:"is_pce_configured,omitempty"`
	IsPceDisjSourceConfigured                                  bool                             `protobuf:"varint,22,opt,name=is_pce_disj_source_configured,json=isPceDisjSourceConfigured,proto3" json:"is_pce_disj_source_configured,omitempty"`
	IsPceDisjTypeConfigured                                    bool                             `protobuf:"varint,23,opt,name=is_pce_disj_type_configured,json=isPceDisjTypeConfigured,proto3" json:"is_pce_disj_type_configured,omitempty"`
	IsPceDisjGroupIdConfigured                                 bool                             `protobuf:"varint,24,opt,name=is_pce_disj_group_id_configured,json=isPceDisjGroupIdConfigured,proto3" json:"is_pce_disj_group_id_configured,omitempty"`
	PcedpSourceAddress                                         uint32                           `protobuf:"varint,25,opt,name=pcedp_source_address,json=pcedpSourceAddress,proto3" json:"pcedp_source_address,omitempty"`
	PcedpType                                                  string                           `protobuf:"bytes,26,opt,name=pcedp_type,json=pcedpType,proto3" json:"pcedp_type,omitempty"`
	PcedpGroupId                                               uint32                           `protobuf:"varint,27,opt,name=pcedp_group_id,json=pcedpGroupId,proto3" json:"pcedp_group_id,omitempty"`
	IsPcebDjSourceConfigured                                   bool                             `protobuf:"varint,28,opt,name=is_pceb_dj_source_configured,json=isPcebDjSourceConfigured,proto3" json:"is_pceb_dj_source_configured,omitempty"`
	IsPcebdGroupIdConfigured                                   bool                             `protobuf:"varint,29,opt,name=is_pcebd_group_id_configured,json=isPcebdGroupIdConfigured,proto3" json:"is_pcebd_group_id_configured,omitempty"`
	PcebdSourceAddress                                         uint32                           `protobuf:"varint,30,opt,name=pcebd_source_address,json=pcebdSourceAddress,proto3" json:"pcebd_source_address,omitempty"`
	PcebdGroupId                                               uint32                           `protobuf:"varint,31,opt,name=pcebd_group_id,json=pcebdGroupId,proto3" json:"pcebd_group_id,omitempty"`
	XXX_NoUnkeyedLiteral                                       struct{}                         `json:"-"`
	XXX_unrecognized                                           []byte                           `json:"-"`
	XXX_sizecache                                              int32                            `json:"-"`
}

func (m *MplsTeAttributeSetP2PTe) Reset()         { *m = MplsTeAttributeSetP2PTe{} }
func (m *MplsTeAttributeSetP2PTe) String() string { return proto.CompactTextString(m) }
func (*MplsTeAttributeSetP2PTe) ProtoMessage()    {}
func (*MplsTeAttributeSetP2PTe) Descriptor() ([]byte, []int) {
	return fileDescriptor_97fd10a364dd9ffd, []int{32}
}

func (m *MplsTeAttributeSetP2PTe) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsTeAttributeSetP2PTe.Unmarshal(m, b)
}
func (m *MplsTeAttributeSetP2PTe) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsTeAttributeSetP2PTe.Marshal(b, m, deterministic)
}
func (m *MplsTeAttributeSetP2PTe) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsTeAttributeSetP2PTe.Merge(m, src)
}
func (m *MplsTeAttributeSetP2PTe) XXX_Size() int {
	return xxx_messageInfo_MplsTeAttributeSetP2PTe.Size(m)
}
func (m *MplsTeAttributeSetP2PTe) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsTeAttributeSetP2PTe.DiscardUnknown(m)
}

var xxx_messageInfo_MplsTeAttributeSetP2PTe proto.InternalMessageInfo

func (m *MplsTeAttributeSetP2PTe) GetTunnelId() []uint32 {
	if m != nil {
		return m.TunnelId
	}
	return nil
}

func (m *MplsTeAttributeSetP2PTe) GetAffinity() *MplsTeTunnelsAffinityInfo {
	if m != nil {
		return m.Affinity
	}
	return nil
}

func (m *MplsTeAttributeSetP2PTe) GetIsAffinityConfigured() bool {
	if m != nil {
		return m.IsAffinityConfigured
	}
	return false
}

func (m *MplsTeAttributeSetP2PTe) GetPathSelectionSegmentRoutingAdjacencyProtection() string {
	if m != nil {
		return m.PathSelectionSegmentRoutingAdjacencyProtection
	}
	return ""
}

func (m *MplsTeAttributeSetP2PTe) GetIsPathSelectionSegmentRoutingAdjacencyProtectionConfigured() bool {
	if m != nil {
		return m.IsPathSelectionSegmentRoutingAdjacencyProtectionConfigured
	}
	return false
}

func (m *MplsTeAttributeSetP2PTe) GetPathInvalidationTimeout() uint32 {
	if m != nil {
		return m.PathInvalidationTimeout
	}
	return 0
}

func (m *MplsTeAttributeSetP2PTe) GetPathSelectionInvalidationAction() string {
	if m != nil {
		return m.PathSelectionInvalidationAction
	}
	return ""
}

func (m *MplsTeAttributeSetP2PTe) GetIsPathInvalidationTimeoutConfigured() bool {
	if m != nil {
		return m.IsPathInvalidationTimeoutConfigured
	}
	return false
}

func (m *MplsTeAttributeSetP2PTe) GetIsPathInvalidationActionConfigured() bool {
	if m != nil {
		return m.IsPathInvalidationActionConfigured
	}
	return false
}

func (m *MplsTeAttributeSetP2PTe) GetPathSelectionMetric() string {
	if m != nil {
		return m.PathSelectionMetric
	}
	return ""
}

func (m *MplsTeAttributeSetP2PTe) GetIsPathSelectionMetricConfigured() bool {
	if m != nil {
		return m.IsPathSelectionMetricConfigured
	}
	return false
}

func (m *MplsTeAttributeSetP2PTe) GetPathSelectionSegmentRoutingMargin() uint32 {
	if m != nil {
		return m.PathSelectionSegmentRoutingMargin
	}
	return 0
}

func (m *MplsTeAttributeSetP2PTe) GetIsPathSelectionSegmentRoutingMarginRelative() bool {
	if m != nil {
		return m.IsPathSelectionSegmentRoutingMarginRelative
	}
	return false
}

func (m *MplsTeAttributeSetP2PTe) GetIsPathSelectionSegmentRoutingMarginConfigured() bool {
	if m != nil {
		return m.IsPathSelectionSegmentRoutingMarginConfigured
	}
	return false
}

func (m *MplsTeAttributeSetP2PTe) GetPathSelectionSegmentRoutingSegmentLimit() uint32 {
	if m != nil {
		return m.PathSelectionSegmentRoutingSegmentLimit
	}
	return 0
}

func (m *MplsTeAttributeSetP2PTe) GetIsPathSelectionSegmentRoutingSegmentLimitConfigured() bool {
	if m != nil {
		return m.IsPathSelectionSegmentRoutingSegmentLimitConfigured
	}
	return false
}

func (m *MplsTeAttributeSetP2PTe) GetIsPathSelectConfigured() bool {
	if m != nil {
		return m.IsPathSelectConfigured
	}
	return false
}

func (m *MplsTeAttributeSetP2PTe) GetLogging() *MplsTeLoggingAttributes {
	if m != nil {
		return m.Logging
	}
	return nil
}

func (m *MplsTeAttributeSetP2PTe) GetPrependList() *MplsTeAttributeSetSrPrependList {
	if m != nil {
		return m.PrependList
	}
	return nil
}

func (m *MplsTeAttributeSetP2PTe) GetIsPrependListConfigured() bool {
	if m != nil {
		return m.IsPrependListConfigured
	}
	return false
}

func (m *MplsTeAttributeSetP2PTe) GetIsPceConfigured() bool {
	if m != nil {
		return m.IsPceConfigured
	}
	return false
}

func (m *MplsTeAttributeSetP2PTe) GetIsPceDisjSourceConfigured() bool {
	if m != nil {
		return m.IsPceDisjSourceConfigured
	}
	return false
}

func (m *MplsTeAttributeSetP2PTe) GetIsPceDisjTypeConfigured() bool {
	if m != nil {
		return m.IsPceDisjTypeConfigured
	}
	return false
}

func (m *MplsTeAttributeSetP2PTe) GetIsPceDisjGroupIdConfigured() bool {
	if m != nil {
		return m.IsPceDisjGroupIdConfigured
	}
	return false
}

func (m *MplsTeAttributeSetP2PTe) GetPcedpSourceAddress() uint32 {
	if m != nil {
		return m.PcedpSourceAddress
	}
	return 0
}

func (m *MplsTeAttributeSetP2PTe) GetPcedpType() string {
	if m != nil {
		return m.PcedpType
	}
	return ""
}

func (m *MplsTeAttributeSetP2PTe) GetPcedpGroupId() uint32 {
	if m != nil {
		return m.PcedpGroupId
	}
	return 0
}

func (m *MplsTeAttributeSetP2PTe) GetIsPcebDjSourceConfigured() bool {
	if m != nil {
		return m.IsPcebDjSourceConfigured
	}
	return false
}

func (m *MplsTeAttributeSetP2PTe) GetIsPcebdGroupIdConfigured() bool {
	if m != nil {
		return m.IsPcebdGroupIdConfigured
	}
	return false
}

func (m *MplsTeAttributeSetP2PTe) GetPcebdSourceAddress() uint32 {
	if m != nil {
		return m.PcebdSourceAddress
	}
	return 0
}

func (m *MplsTeAttributeSetP2PTe) GetPcebdGroupId() uint32 {
	if m != nil {
		return m.PcebdGroupId
	}
	return 0
}

type MplsTeAttributeSetUnion struct {
	TunnelAttributeSetType string                        `protobuf:"bytes,1,opt,name=tunnel_attribute_set_type,json=tunnelAttributeSetType,proto3" json:"tunnel_attribute_set_type,omitempty"`
	AttributeSetPathOption *MplsTeAttributeSetPathOption `protobuf:"bytes,2,opt,name=attribute_set_path_option,json=attributeSetPathOption,proto3" json:"attribute_set_path_option,omitempty"`
	AttributeSetAutobackup *MplsTeAttributeSetAutoBackup `protobuf:"bytes,3,opt,name=attribute_set_autobackup,json=attributeSetAutobackup,proto3" json:"attribute_set_autobackup,omitempty"`
	AttributeSetAutomesh   *MplsTeAttributeSetAutoMesh   `protobuf:"bytes,4,opt,name=attribute_set_automesh,json=attributeSetAutomesh,proto3" json:"attribute_set_automesh,omitempty"`
	AttributeSetXro        *MplsTeAttributeSetXro        `protobuf:"bytes,5,opt,name=attribute_set_xro,json=attributeSetXro,proto3" json:"attribute_set_xro,omitempty"`
	AttributeSetP2Mpte     *MplsTeAttributeSetP2MpTe     `protobuf:"bytes,6,opt,name=attribute_set_p2mpte,json=attributeSetP2mpte,proto3" json:"attribute_set_p2mpte,omitempty"`
	AttributeSetApsPp      *MplsTeAttributeSetApsPp      `protobuf:"bytes,7,opt,name=attribute_set_aps_pp,json=attributeSetApsPp,proto3" json:"attribute_set_aps_pp,omitempty"`
	AttributeSetP2PTe      *MplsTeAttributeSetP2PTe      `protobuf:"bytes,8,opt,name=attribute_set_p2p_te,json=attributeSetP2pTe,proto3" json:"attribute_set_p2p_te,omitempty"`
	XXX_NoUnkeyedLiteral   struct{}                      `json:"-"`
	XXX_unrecognized       []byte                        `json:"-"`
	XXX_sizecache          int32                         `json:"-"`
}

func (m *MplsTeAttributeSetUnion) Reset()         { *m = MplsTeAttributeSetUnion{} }
func (m *MplsTeAttributeSetUnion) String() string { return proto.CompactTextString(m) }
func (*MplsTeAttributeSetUnion) ProtoMessage()    {}
func (*MplsTeAttributeSetUnion) Descriptor() ([]byte, []int) {
	return fileDescriptor_97fd10a364dd9ffd, []int{33}
}

func (m *MplsTeAttributeSetUnion) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsTeAttributeSetUnion.Unmarshal(m, b)
}
func (m *MplsTeAttributeSetUnion) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsTeAttributeSetUnion.Marshal(b, m, deterministic)
}
func (m *MplsTeAttributeSetUnion) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsTeAttributeSetUnion.Merge(m, src)
}
func (m *MplsTeAttributeSetUnion) XXX_Size() int {
	return xxx_messageInfo_MplsTeAttributeSetUnion.Size(m)
}
func (m *MplsTeAttributeSetUnion) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsTeAttributeSetUnion.DiscardUnknown(m)
}

var xxx_messageInfo_MplsTeAttributeSetUnion proto.InternalMessageInfo

func (m *MplsTeAttributeSetUnion) GetTunnelAttributeSetType() string {
	if m != nil {
		return m.TunnelAttributeSetType
	}
	return ""
}

func (m *MplsTeAttributeSetUnion) GetAttributeSetPathOption() *MplsTeAttributeSetPathOption {
	if m != nil {
		return m.AttributeSetPathOption
	}
	return nil
}

func (m *MplsTeAttributeSetUnion) GetAttributeSetAutobackup() *MplsTeAttributeSetAutoBackup {
	if m != nil {
		return m.AttributeSetAutobackup
	}
	return nil
}

func (m *MplsTeAttributeSetUnion) GetAttributeSetAutomesh() *MplsTeAttributeSetAutoMesh {
	if m != nil {
		return m.AttributeSetAutomesh
	}
	return nil
}

func (m *MplsTeAttributeSetUnion) GetAttributeSetXro() *MplsTeAttributeSetXro {
	if m != nil {
		return m.AttributeSetXro
	}
	return nil
}

func (m *MplsTeAttributeSetUnion) GetAttributeSetP2Mpte() *MplsTeAttributeSetP2MpTe {
	if m != nil {
		return m.AttributeSetP2Mpte
	}
	return nil
}

func (m *MplsTeAttributeSetUnion) GetAttributeSetApsPp() *MplsTeAttributeSetApsPp {
	if m != nil {
		return m.AttributeSetApsPp
	}
	return nil
}

func (m *MplsTeAttributeSetUnion) GetAttributeSetP2PTe() *MplsTeAttributeSetP2PTe {
	if m != nil {
		return m.AttributeSetP2PTe
	}
	return nil
}

type MplsTeAttributeSet struct {
	TunnelAttributeSetName      string                   `protobuf:"bytes,1,opt,name=tunnel_attribute_set_name,json=tunnelAttributeSetName,proto3" json:"tunnel_attribute_set_name,omitempty"`
	TunnelAttributeSetNameCrc32 uint32                   `protobuf:"varint,2,opt,name=tunnel_attribute_set_name_crc32,json=tunnelAttributeSetNameCrc32,proto3" json:"tunnel_attribute_set_name_crc32,omitempty"`
	AttributeSetUnion           *MplsTeAttributeSetUnion `protobuf:"bytes,3,opt,name=attribute_set_union,json=attributeSetUnion,proto3" json:"attribute_set_union,omitempty"`
	XXX_NoUnkeyedLiteral        struct{}                 `json:"-"`
	XXX_unrecognized            []byte                   `json:"-"`
	XXX_sizecache               int32                    `json:"-"`
}

func (m *MplsTeAttributeSet) Reset()         { *m = MplsTeAttributeSet{} }
func (m *MplsTeAttributeSet) String() string { return proto.CompactTextString(m) }
func (*MplsTeAttributeSet) ProtoMessage()    {}
func (*MplsTeAttributeSet) Descriptor() ([]byte, []int) {
	return fileDescriptor_97fd10a364dd9ffd, []int{34}
}

func (m *MplsTeAttributeSet) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsTeAttributeSet.Unmarshal(m, b)
}
func (m *MplsTeAttributeSet) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsTeAttributeSet.Marshal(b, m, deterministic)
}
func (m *MplsTeAttributeSet) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsTeAttributeSet.Merge(m, src)
}
func (m *MplsTeAttributeSet) XXX_Size() int {
	return xxx_messageInfo_MplsTeAttributeSet.Size(m)
}
func (m *MplsTeAttributeSet) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsTeAttributeSet.DiscardUnknown(m)
}

var xxx_messageInfo_MplsTeAttributeSet proto.InternalMessageInfo

func (m *MplsTeAttributeSet) GetTunnelAttributeSetName() string {
	if m != nil {
		return m.TunnelAttributeSetName
	}
	return ""
}

func (m *MplsTeAttributeSet) GetTunnelAttributeSetNameCrc32() uint32 {
	if m != nil {
		return m.TunnelAttributeSetNameCrc32
	}
	return 0
}

func (m *MplsTeAttributeSet) GetAttributeSetUnion() *MplsTeAttributeSetUnion {
	if m != nil {
		return m.AttributeSetUnion
	}
	return nil
}

type MplsTeP2MpPcalcError struct {
	ErrorMessage         string   `protobuf:"bytes,1,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	LspMode              string   `protobuf:"bytes,2,opt,name=lsp_mode,json=lspMode,proto3" json:"lsp_mode,omitempty"`
	LogTime              uint32   `protobuf:"varint,3,opt,name=log_time,json=logTime,proto3" json:"log_time,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MplsTeP2MpPcalcError) Reset()         { *m = MplsTeP2MpPcalcError{} }
func (m *MplsTeP2MpPcalcError) String() string { return proto.CompactTextString(m) }
func (*MplsTeP2MpPcalcError) ProtoMessage()    {}
func (*MplsTeP2MpPcalcError) Descriptor() ([]byte, []int) {
	return fileDescriptor_97fd10a364dd9ffd, []int{35}
}

func (m *MplsTeP2MpPcalcError) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsTeP2MpPcalcError.Unmarshal(m, b)
}
func (m *MplsTeP2MpPcalcError) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsTeP2MpPcalcError.Marshal(b, m, deterministic)
}
func (m *MplsTeP2MpPcalcError) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsTeP2MpPcalcError.Merge(m, src)
}
func (m *MplsTeP2MpPcalcError) XXX_Size() int {
	return xxx_messageInfo_MplsTeP2MpPcalcError.Size(m)
}
func (m *MplsTeP2MpPcalcError) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsTeP2MpPcalcError.DiscardUnknown(m)
}

var xxx_messageInfo_MplsTeP2MpPcalcError proto.InternalMessageInfo

func (m *MplsTeP2MpPcalcError) GetErrorMessage() string {
	if m != nil {
		return m.ErrorMessage
	}
	return ""
}

func (m *MplsTeP2MpPcalcError) GetLspMode() string {
	if m != nil {
		return m.LspMode
	}
	return ""
}

func (m *MplsTeP2MpPcalcError) GetLogTime() uint32 {
	if m != nil {
		return m.LogTime
	}
	return 0
}

type MplsTeP2MpSigError struct {
	ErrorNode            uint32   `protobuf:"varint,1,opt,name=error_node,json=errorNode,proto3" json:"error_node,omitempty"`
	Error                uint32   `protobuf:"varint,2,opt,name=error,proto3" json:"error,omitempty"`
	SubCode              uint32   `protobuf:"varint,3,opt,name=sub_code,json=subCode,proto3" json:"sub_code,omitempty"`
	LspMode              string   `protobuf:"bytes,4,opt,name=lsp_mode,json=lspMode,proto3" json:"lsp_mode,omitempty"`
	LogTime              uint32   `protobuf:"varint,5,opt,name=log_time,json=logTime,proto3" json:"log_time,omitempty"`
	SignallingLspId      uint32   `protobuf:"varint,6,opt,name=signalling_lsp_id,json=signallingLspId,proto3" json:"signalling_lsp_id,omitempty"`
	ErrorMessage         string   `protobuf:"bytes,7,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	ReverseLsp           bool     `protobuf:"varint,8,opt,name=reverse_lsp,json=reverseLsp,proto3" json:"reverse_lsp,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MplsTeP2MpSigError) Reset()         { *m = MplsTeP2MpSigError{} }
func (m *MplsTeP2MpSigError) String() string { return proto.CompactTextString(m) }
func (*MplsTeP2MpSigError) ProtoMessage()    {}
func (*MplsTeP2MpSigError) Descriptor() ([]byte, []int) {
	return fileDescriptor_97fd10a364dd9ffd, []int{36}
}

func (m *MplsTeP2MpSigError) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsTeP2MpSigError.Unmarshal(m, b)
}
func (m *MplsTeP2MpSigError) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsTeP2MpSigError.Marshal(b, m, deterministic)
}
func (m *MplsTeP2MpSigError) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsTeP2MpSigError.Merge(m, src)
}
func (m *MplsTeP2MpSigError) XXX_Size() int {
	return xxx_messageInfo_MplsTeP2MpSigError.Size(m)
}
func (m *MplsTeP2MpSigError) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsTeP2MpSigError.DiscardUnknown(m)
}

var xxx_messageInfo_MplsTeP2MpSigError proto.InternalMessageInfo

func (m *MplsTeP2MpSigError) GetErrorNode() uint32 {
	if m != nil {
		return m.ErrorNode
	}
	return 0
}

func (m *MplsTeP2MpSigError) GetError() uint32 {
	if m != nil {
		return m.Error
	}
	return 0
}

func (m *MplsTeP2MpSigError) GetSubCode() uint32 {
	if m != nil {
		return m.SubCode
	}
	return 0
}

func (m *MplsTeP2MpSigError) GetLspMode() string {
	if m != nil {
		return m.LspMode
	}
	return ""
}

func (m *MplsTeP2MpSigError) GetLogTime() uint32 {
	if m != nil {
		return m.LogTime
	}
	return 0
}

func (m *MplsTeP2MpSigError) GetSignallingLspId() uint32 {
	if m != nil {
		return m.SignallingLspId
	}
	return 0
}

func (m *MplsTeP2MpSigError) GetErrorMessage() string {
	if m != nil {
		return m.ErrorMessage
	}
	return ""
}

func (m *MplsTeP2MpSigError) GetReverseLsp() bool {
	if m != nil {
		return m.ReverseLsp
	}
	return false
}

type MplsTeP2MpPathOption struct {
	OptionIndexIsValid          bool                    `protobuf:"varint,1,opt,name=option_index_is_valid,json=optionIndexIsValid,proto3" json:"option_index_is_valid,omitempty"`
	OptionIndex                 uint32                  `protobuf:"varint,2,opt,name=option_index,json=optionIndex,proto3" json:"option_index,omitempty"`
	PathOptionName              string                  `protobuf:"bytes,3,opt,name=path_option_name,json=pathOptionName,proto3" json:"path_option_name,omitempty"`
	PathOptionType              string                  `protobuf:"bytes,4,opt,name=path_option_type,json=pathOptionType,proto3" json:"path_option_type,omitempty"`
	ExplicitPathName            string                  `protobuf:"bytes,5,opt,name=explicit_path_name,json=explicitPathName,proto3" json:"explicit_path_name,omitempty"`
	ExplicitPathId              uint32                  `protobuf:"varint,6,opt,name=explicit_path_id,json=explicitPathId,proto3" json:"explicit_path_id,omitempty"`
	HolddownDuration            uint32                  `protobuf:"varint,7,opt,name=holddown_duration,json=holddownDuration,proto3" json:"holddown_duration,omitempty"`
	PceAddress                  string                  `protobuf:"bytes,8,opt,name=pce_address,json=pceAddress,proto3" json:"pce_address,omitempty"`
	PathOptionAreaId            string                  `protobuf:"bytes,9,opt,name=path_option_area_id,json=pathOptionAreaId,proto3" json:"path_option_area_id,omitempty"`
	IsStrictExplicitPath        bool                    `protobuf:"varint,10,opt,name=is_strict_explicit_path,json=isStrictExplicitPath,proto3" json:"is_strict_explicit_path,omitempty"`
	IsHelddown                  bool                    `protobuf:"varint,11,opt,name=is_helddown,json=isHelddown,proto3" json:"is_helddown,omitempty"`
	IsLockdown                  bool                    `protobuf:"varint,12,opt,name=is_lockdown,json=isLockdown,proto3" json:"is_lockdown,omitempty"`
	IsVerbatim                  bool                    `protobuf:"varint,13,opt,name=is_verbatim,json=isVerbatim,proto3" json:"is_verbatim,omitempty"`
	IsDisabled                  bool                    `protobuf:"varint,14,opt,name=is_disabled,json=isDisabled,proto3" json:"is_disabled,omitempty"`
	HasAttributeSet             bool                    `protobuf:"varint,15,opt,name=has_attribute_set,json=hasAttributeSet,proto3" json:"has_attribute_set,omitempty"`
	AttributeSet                *MplsTeAttributeSet     `protobuf:"bytes,16,opt,name=attribute_set,json=attributeSet,proto3" json:"attribute_set,omitempty"`
	AttributeSetFound           bool                    `protobuf:"varint,17,opt,name=attribute_set_found,json=attributeSetFound,proto3" json:"attribute_set_found,omitempty"`
	PathCalculationError        []*MplsTeP2MpPcalcError `protobuf:"bytes,18,rep,name=path_calculation_error,json=pathCalculationError,proto3" json:"path_calculation_error,omitempty"`
	RemergeError                []*MplsTeP2MpPcalcError `protobuf:"bytes,19,rep,name=remerge_error,json=remergeError,proto3" json:"remerge_error,omitempty"`
	SignallingError             []*MplsTeP2MpSigError   `protobuf:"bytes,20,rep,name=signalling_error,json=signallingError,proto3" json:"signalling_error,omitempty"`
	HasXroAttributeSet          bool                    `protobuf:"varint,21,opt,name=has_xro_attribute_set,json=hasXroAttributeSet,proto3" json:"has_xro_attribute_set,omitempty"`
	XroAttributeSetFound        bool                    `protobuf:"varint,22,opt,name=xro_attribute_set_found,json=xroAttributeSetFound,proto3" json:"xro_attribute_set_found,omitempty"`
	XroAttributeSet             *MplsTeAttributeSet     `protobuf:"bytes,23,opt,name=xro_attribute_set,json=xroAttributeSet,proto3" json:"xro_attribute_set,omitempty"`
	IsSegmentRouting            bool                    `protobuf:"varint,24,opt,name=is_segment_routing,json=isSegmentRouting,proto3" json:"is_segment_routing,omitempty"`
	ProtectedByPathOptionIndex  uint32                  `protobuf:"varint,25,opt,name=protected_by_path_option_index,json=protectedByPathOptionIndex,proto3" json:"protected_by_path_option_index,omitempty"`
	RestoredFromPathOptionIndex uint32                  `protobuf:"varint,26,opt,name=restored_from_path_option_index,json=restoredFromPathOptionIndex,proto3" json:"restored_from_path_option_index,omitempty"`
	XXX_NoUnkeyedLiteral        struct{}                `json:"-"`
	XXX_unrecognized            []byte                  `json:"-"`
	XXX_sizecache               int32                   `json:"-"`
}

func (m *MplsTeP2MpPathOption) Reset()         { *m = MplsTeP2MpPathOption{} }
func (m *MplsTeP2MpPathOption) String() string { return proto.CompactTextString(m) }
func (*MplsTeP2MpPathOption) ProtoMessage()    {}
func (*MplsTeP2MpPathOption) Descriptor() ([]byte, []int) {
	return fileDescriptor_97fd10a364dd9ffd, []int{37}
}

func (m *MplsTeP2MpPathOption) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsTeP2MpPathOption.Unmarshal(m, b)
}
func (m *MplsTeP2MpPathOption) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsTeP2MpPathOption.Marshal(b, m, deterministic)
}
func (m *MplsTeP2MpPathOption) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsTeP2MpPathOption.Merge(m, src)
}
func (m *MplsTeP2MpPathOption) XXX_Size() int {
	return xxx_messageInfo_MplsTeP2MpPathOption.Size(m)
}
func (m *MplsTeP2MpPathOption) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsTeP2MpPathOption.DiscardUnknown(m)
}

var xxx_messageInfo_MplsTeP2MpPathOption proto.InternalMessageInfo

func (m *MplsTeP2MpPathOption) GetOptionIndexIsValid() bool {
	if m != nil {
		return m.OptionIndexIsValid
	}
	return false
}

func (m *MplsTeP2MpPathOption) GetOptionIndex() uint32 {
	if m != nil {
		return m.OptionIndex
	}
	return 0
}

func (m *MplsTeP2MpPathOption) GetPathOptionName() string {
	if m != nil {
		return m.PathOptionName
	}
	return ""
}

func (m *MplsTeP2MpPathOption) GetPathOptionType() string {
	if m != nil {
		return m.PathOptionType
	}
	return ""
}

func (m *MplsTeP2MpPathOption) GetExplicitPathName() string {
	if m != nil {
		return m.ExplicitPathName
	}
	return ""
}

func (m *MplsTeP2MpPathOption) GetExplicitPathId() uint32 {
	if m != nil {
		return m.ExplicitPathId
	}
	return 0
}

func (m *MplsTeP2MpPathOption) GetHolddownDuration() uint32 {
	if m != nil {
		return m.HolddownDuration
	}
	return 0
}

func (m *MplsTeP2MpPathOption) GetPceAddress() string {
	if m != nil {
		return m.PceAddress
	}
	return ""
}

func (m *MplsTeP2MpPathOption) GetPathOptionAreaId() string {
	if m != nil {
		return m.PathOptionAreaId
	}
	return ""
}

func (m *MplsTeP2MpPathOption) GetIsStrictExplicitPath() bool {
	if m != nil {
		return m.IsStrictExplicitPath
	}
	return false
}

func (m *MplsTeP2MpPathOption) GetIsHelddown() bool {
	if m != nil {
		return m.IsHelddown
	}
	return false
}

func (m *MplsTeP2MpPathOption) GetIsLockdown() bool {
	if m != nil {
		return m.IsLockdown
	}
	return false
}

func (m *MplsTeP2MpPathOption) GetIsVerbatim() bool {
	if m != nil {
		return m.IsVerbatim
	}
	return false
}

func (m *MplsTeP2MpPathOption) GetIsDisabled() bool {
	if m != nil {
		return m.IsDisabled
	}
	return false
}

func (m *MplsTeP2MpPathOption) GetHasAttributeSet() bool {
	if m != nil {
		return m.HasAttributeSet
	}
	return false
}

func (m *MplsTeP2MpPathOption) GetAttributeSet() *MplsTeAttributeSet {
	if m != nil {
		return m.AttributeSet
	}
	return nil
}

func (m *MplsTeP2MpPathOption) GetAttributeSetFound() bool {
	if m != nil {
		return m.AttributeSetFound
	}
	return false
}

func (m *MplsTeP2MpPathOption) GetPathCalculationError() []*MplsTeP2MpPcalcError {
	if m != nil {
		return m.PathCalculationError
	}
	return nil
}

func (m *MplsTeP2MpPathOption) GetRemergeError() []*MplsTeP2MpPcalcError {
	if m != nil {
		return m.RemergeError
	}
	return nil
}

func (m *MplsTeP2MpPathOption) GetSignallingError() []*MplsTeP2MpSigError {
	if m != nil {
		return m.SignallingError
	}
	return nil
}

func (m *MplsTeP2MpPathOption) GetHasXroAttributeSet() bool {
	if m != nil {
		return m.HasXroAttributeSet
	}
	return false
}

func (m *MplsTeP2MpPathOption) GetXroAttributeSetFound() bool {
	if m != nil {
		return m.XroAttributeSetFound
	}
	return false
}

func (m *MplsTeP2MpPathOption) GetXroAttributeSet() *MplsTeAttributeSet {
	if m != nil {
		return m.XroAttributeSet
	}
	return nil
}

func (m *MplsTeP2MpPathOption) GetIsSegmentRouting() bool {
	if m != nil {
		return m.IsSegmentRouting
	}
	return false
}

func (m *MplsTeP2MpPathOption) GetProtectedByPathOptionIndex() uint32 {
	if m != nil {
		return m.ProtectedByPathOptionIndex
	}
	return 0
}

func (m *MplsTeP2MpPathOption) GetRestoredFromPathOptionIndex() uint32 {
	if m != nil {
		return m.RestoredFromPathOptionIndex
	}
	return 0
}

type MplsTeInterareaReoptInfo struct {
	SentPathQueries                 uint32   `protobuf:"varint,1,opt,name=sent_path_queries,json=sentPathQueries,proto3" json:"sent_path_queries,omitempty"`
	TimeSinceLastQuerySent          uint32   `protobuf:"varint,2,opt,name=time_since_last_query_sent,json=timeSinceLastQuerySent,proto3" json:"time_since_last_query_sent,omitempty"`
	ReceivedPreferredPathErrors     uint32   `protobuf:"varint,3,opt,name=received_preferred_path_errors,json=receivedPreferredPathErrors,proto3" json:"received_preferred_path_errors,omitempty"`
	TimeSinceLastPreferredPathError uint32   `protobuf:"varint,4,opt,name=time_since_last_preferred_path_error,json=timeSinceLastPreferredPathError,proto3" json:"time_since_last_preferred_path_error,omitempty"`
	ReceivedPreferredTreeErrors     uint32   `protobuf:"varint,5,opt,name=received_preferred_tree_errors,json=receivedPreferredTreeErrors,proto3" json:"received_preferred_tree_errors,omitempty"`
	TimeSinceLastPreferredTreeError uint32   `protobuf:"varint,6,opt,name=time_since_last_preferred_tree_error,json=timeSinceLastPreferredTreeError,proto3" json:"time_since_last_preferred_tree_error,omitempty"`
	PreferredPathErrorNode          string   `protobuf:"bytes,7,opt,name=preferred_path_error_node,json=preferredPathErrorNode,proto3" json:"preferred_path_error_node,omitempty"`
	PreferredTreeErrorNode          string   `protobuf:"bytes,8,opt,name=preferred_tree_error_node,json=preferredTreeErrorNode,proto3" json:"preferred_tree_error_node,omitempty"`
	XXX_NoUnkeyedLiteral            struct{} `json:"-"`
	XXX_unrecognized                []byte   `json:"-"`
	XXX_sizecache                   int32    `json:"-"`
}

func (m *MplsTeInterareaReoptInfo) Reset()         { *m = MplsTeInterareaReoptInfo{} }
func (m *MplsTeInterareaReoptInfo) String() string { return proto.CompactTextString(m) }
func (*MplsTeInterareaReoptInfo) ProtoMessage()    {}
func (*MplsTeInterareaReoptInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_97fd10a364dd9ffd, []int{38}
}

func (m *MplsTeInterareaReoptInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsTeInterareaReoptInfo.Unmarshal(m, b)
}
func (m *MplsTeInterareaReoptInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsTeInterareaReoptInfo.Marshal(b, m, deterministic)
}
func (m *MplsTeInterareaReoptInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsTeInterareaReoptInfo.Merge(m, src)
}
func (m *MplsTeInterareaReoptInfo) XXX_Size() int {
	return xxx_messageInfo_MplsTeInterareaReoptInfo.Size(m)
}
func (m *MplsTeInterareaReoptInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsTeInterareaReoptInfo.DiscardUnknown(m)
}

var xxx_messageInfo_MplsTeInterareaReoptInfo proto.InternalMessageInfo

func (m *MplsTeInterareaReoptInfo) GetSentPathQueries() uint32 {
	if m != nil {
		return m.SentPathQueries
	}
	return 0
}

func (m *MplsTeInterareaReoptInfo) GetTimeSinceLastQuerySent() uint32 {
	if m != nil {
		return m.TimeSinceLastQuerySent
	}
	return 0
}

func (m *MplsTeInterareaReoptInfo) GetReceivedPreferredPathErrors() uint32 {
	if m != nil {
		return m.ReceivedPreferredPathErrors
	}
	return 0
}

func (m *MplsTeInterareaReoptInfo) GetTimeSinceLastPreferredPathError() uint32 {
	if m != nil {
		return m.TimeSinceLastPreferredPathError
	}
	return 0
}

func (m *MplsTeInterareaReoptInfo) GetReceivedPreferredTreeErrors() uint32 {
	if m != nil {
		return m.ReceivedPreferredTreeErrors
	}
	return 0
}

func (m *MplsTeInterareaReoptInfo) GetTimeSinceLastPreferredTreeError() uint32 {
	if m != nil {
		return m.TimeSinceLastPreferredTreeError
	}
	return 0
}

func (m *MplsTeInterareaReoptInfo) GetPreferredPathErrorNode() string {
	if m != nil {
		return m.PreferredPathErrorNode
	}
	return ""
}

func (m *MplsTeInterareaReoptInfo) GetPreferredTreeErrorNode() string {
	if m != nil {
		return m.PreferredTreeErrorNode
	}
	return ""
}

type MplsTeP2MpDest struct {
	DestinationAddress           string                    `protobuf:"bytes,1,opt,name=destination_address,json=destinationAddress,proto3" json:"destination_address,omitempty"`
	PathOptionEntry              []*MplsTeP2MpPathOption   `protobuf:"bytes,2,rep,name=path_option_entry,json=pathOptionEntry,proto3" json:"path_option_entry,omitempty"`
	PathOption                   []*MplsTeP2MpPathOption   `protobuf:"bytes,3,rep,name=path_option,json=pathOption,proto3" json:"path_option,omitempty"`
	DestinationState             string                    `protobuf:"bytes,4,opt,name=destination_state,json=destinationState,proto3" json:"destination_state,omitempty"`
	ActivePathOptionIndex        uint32                    `protobuf:"varint,5,opt,name=active_path_option_index,json=activePathOptionIndex,proto3" json:"active_path_option_index,omitempty"`
	PathOptionExhausted          bool                      `protobuf:"varint,6,opt,name=path_option_exhausted,json=pathOptionExhausted,proto3" json:"path_option_exhausted,omitempty"`
	Uptime                       uint32                    `protobuf:"varint,7,opt,name=uptime,proto3" json:"uptime,omitempty"`
	PathChangeTime               uint32                    `protobuf:"varint,8,opt,name=path_change_time,json=pathChangeTime,proto3" json:"path_change_time,omitempty"`
	TotalUptime                  uint32                    `protobuf:"varint,9,opt,name=total_uptime,json=totalUptime,proto3" json:"total_uptime,omitempty"`
	S2LExist                     bool                      `protobuf:"varint,10,opt,name=s2l_exist,json=s2lExist,proto3" json:"s2l_exist,omitempty"`
	DestinationDeletionCause     string                    `protobuf:"bytes,11,opt,name=destination_deletion_cause,json=destinationDeletionCause,proto3" json:"destination_deletion_cause,omitempty"`
	DestinationDeletionSubCause  string                    `protobuf:"bytes,12,opt,name=destination_deletion_sub_cause,json=destinationDeletionSubCause,proto3" json:"destination_deletion_sub_cause,omitempty"`
	DestinationDeletionTimestamp uint32                    `protobuf:"varint,13,opt,name=destination_deletion_timestamp,json=destinationDeletionTimestamp,proto3" json:"destination_deletion_timestamp,omitempty"`
	IsInterArea                  bool                      `protobuf:"varint,14,opt,name=is_inter_area,json=isInterArea,proto3" json:"is_inter_area,omitempty"`
	InterAreaReoptimization      *MplsTeInterareaReoptInfo `protobuf:"bytes,15,opt,name=inter_area_reoptimization,json=interAreaReoptimization,proto3" json:"inter_area_reoptimization,omitempty"`
	XXX_NoUnkeyedLiteral         struct{}                  `json:"-"`
	XXX_unrecognized             []byte                    `json:"-"`
	XXX_sizecache                int32                     `json:"-"`
}

func (m *MplsTeP2MpDest) Reset()         { *m = MplsTeP2MpDest{} }
func (m *MplsTeP2MpDest) String() string { return proto.CompactTextString(m) }
func (*MplsTeP2MpDest) ProtoMessage()    {}
func (*MplsTeP2MpDest) Descriptor() ([]byte, []int) {
	return fileDescriptor_97fd10a364dd9ffd, []int{39}
}

func (m *MplsTeP2MpDest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsTeP2MpDest.Unmarshal(m, b)
}
func (m *MplsTeP2MpDest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsTeP2MpDest.Marshal(b, m, deterministic)
}
func (m *MplsTeP2MpDest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsTeP2MpDest.Merge(m, src)
}
func (m *MplsTeP2MpDest) XXX_Size() int {
	return xxx_messageInfo_MplsTeP2MpDest.Size(m)
}
func (m *MplsTeP2MpDest) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsTeP2MpDest.DiscardUnknown(m)
}

var xxx_messageInfo_MplsTeP2MpDest proto.InternalMessageInfo

func (m *MplsTeP2MpDest) GetDestinationAddress() string {
	if m != nil {
		return m.DestinationAddress
	}
	return ""
}

func (m *MplsTeP2MpDest) GetPathOptionEntry() []*MplsTeP2MpPathOption {
	if m != nil {
		return m.PathOptionEntry
	}
	return nil
}

func (m *MplsTeP2MpDest) GetPathOption() []*MplsTeP2MpPathOption {
	if m != nil {
		return m.PathOption
	}
	return nil
}

func (m *MplsTeP2MpDest) GetDestinationState() string {
	if m != nil {
		return m.DestinationState
	}
	return ""
}

func (m *MplsTeP2MpDest) GetActivePathOptionIndex() uint32 {
	if m != nil {
		return m.ActivePathOptionIndex
	}
	return 0
}

func (m *MplsTeP2MpDest) GetPathOptionExhausted() bool {
	if m != nil {
		return m.PathOptionExhausted
	}
	return false
}

func (m *MplsTeP2MpDest) GetUptime() uint32 {
	if m != nil {
		return m.Uptime
	}
	return 0
}

func (m *MplsTeP2MpDest) GetPathChangeTime() uint32 {
	if m != nil {
		return m.PathChangeTime
	}
	return 0
}

func (m *MplsTeP2MpDest) GetTotalUptime() uint32 {
	if m != nil {
		return m.TotalUptime
	}
	return 0
}

func (m *MplsTeP2MpDest) GetS2LExist() bool {
	if m != nil {
		return m.S2LExist
	}
	return false
}

func (m *MplsTeP2MpDest) GetDestinationDeletionCause() string {
	if m != nil {
		return m.DestinationDeletionCause
	}
	return ""
}

func (m *MplsTeP2MpDest) GetDestinationDeletionSubCause() string {
	if m != nil {
		return m.DestinationDeletionSubCause
	}
	return ""
}

func (m *MplsTeP2MpDest) GetDestinationDeletionTimestamp() uint32 {
	if m != nil {
		return m.DestinationDeletionTimestamp
	}
	return 0
}

func (m *MplsTeP2MpDest) GetIsInterArea() bool {
	if m != nil {
		return m.IsInterArea
	}
	return false
}

func (m *MplsTeP2MpDest) GetInterAreaReoptimization() *MplsTeInterareaReoptInfo {
	if m != nil {
		return m.InterAreaReoptimization
	}
	return nil
}

type TeS2LFecT struct {
	S2LFecSubgroupId         uint32   `protobuf:"varint,1,opt,name=s2l_fec_subgroup_id,json=s2lFecSubgroupId,proto3" json:"s2l_fec_subgroup_id,omitempty"`
	S2LFecLspId              uint32   `protobuf:"varint,2,opt,name=s2l_fec_lsp_id,json=s2lFecLspId,proto3" json:"s2l_fec_lsp_id,omitempty"`
	S2LFecTunnelId           uint32   `protobuf:"varint,3,opt,name=s2l_fec_tunnel_id,json=s2lFecTunnelId,proto3" json:"s2l_fec_tunnel_id,omitempty"`
	S2LFecExtendedTunnelId   string   `protobuf:"bytes,4,opt,name=s2l_fec_extended_tunnel_id,json=s2lFecExtendedTunnelId,proto3" json:"s2l_fec_extended_tunnel_id,omitempty"`
	S2LFecSource             string   `protobuf:"bytes,5,opt,name=s2l_fec_source,json=s2lFecSource,proto3" json:"s2l_fec_source,omitempty"`
	S2LFecDest               string   `protobuf:"bytes,6,opt,name=s2l_fec_dest,json=s2lFecDest,proto3" json:"s2l_fec_dest,omitempty"`
	S2LFecP2MpId             uint32   `protobuf:"varint,7,opt,name=s2l_fec_p2mp_id,json=s2lFecP2mpId,proto3" json:"s2l_fec_p2mp_id,omitempty"`
	S2LFecSubgroupOriginator string   `protobuf:"bytes,8,opt,name=s2l_fec_subgroup_originator,json=s2lFecSubgroupOriginator,proto3" json:"s2l_fec_subgroup_originator,omitempty"`
	S2LFecCtype              string   `protobuf:"bytes,9,opt,name=s2l_fec_ctype,json=s2lFecCtype,proto3" json:"s2l_fec_ctype,omitempty"`
	S2LFecVrf                string   `protobuf:"bytes,10,opt,name=s2l_fec_vrf,json=s2lFecVrf,proto3" json:"s2l_fec_vrf,omitempty"`
	XXX_NoUnkeyedLiteral     struct{} `json:"-"`
	XXX_unrecognized         []byte   `json:"-"`
	XXX_sizecache            int32    `json:"-"`
}

func (m *TeS2LFecT) Reset()         { *m = TeS2LFecT{} }
func (m *TeS2LFecT) String() string { return proto.CompactTextString(m) }
func (*TeS2LFecT) ProtoMessage()    {}
func (*TeS2LFecT) Descriptor() ([]byte, []int) {
	return fileDescriptor_97fd10a364dd9ffd, []int{40}
}

func (m *TeS2LFecT) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TeS2LFecT.Unmarshal(m, b)
}
func (m *TeS2LFecT) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TeS2LFecT.Marshal(b, m, deterministic)
}
func (m *TeS2LFecT) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TeS2LFecT.Merge(m, src)
}
func (m *TeS2LFecT) XXX_Size() int {
	return xxx_messageInfo_TeS2LFecT.Size(m)
}
func (m *TeS2LFecT) XXX_DiscardUnknown() {
	xxx_messageInfo_TeS2LFecT.DiscardUnknown(m)
}

var xxx_messageInfo_TeS2LFecT proto.InternalMessageInfo

func (m *TeS2LFecT) GetS2LFecSubgroupId() uint32 {
	if m != nil {
		return m.S2LFecSubgroupId
	}
	return 0
}

func (m *TeS2LFecT) GetS2LFecLspId() uint32 {
	if m != nil {
		return m.S2LFecLspId
	}
	return 0
}

func (m *TeS2LFecT) GetS2LFecTunnelId() uint32 {
	if m != nil {
		return m.S2LFecTunnelId
	}
	return 0
}

func (m *TeS2LFecT) GetS2LFecExtendedTunnelId() string {
	if m != nil {
		return m.S2LFecExtendedTunnelId
	}
	return ""
}

func (m *TeS2LFecT) GetS2LFecSource() string {
	if m != nil {
		return m.S2LFecSource
	}
	return ""
}

func (m *TeS2LFecT) GetS2LFecDest() string {
	if m != nil {
		return m.S2LFecDest
	}
	return ""
}

func (m *TeS2LFecT) GetS2LFecP2MpId() uint32 {
	if m != nil {
		return m.S2LFecP2MpId
	}
	return 0
}

func (m *TeS2LFecT) GetS2LFecSubgroupOriginator() string {
	if m != nil {
		return m.S2LFecSubgroupOriginator
	}
	return ""
}

func (m *TeS2LFecT) GetS2LFecCtype() string {
	if m != nil {
		return m.S2LFecCtype
	}
	return ""
}

func (m *TeS2LFecT) GetS2LFecVrf() string {
	if m != nil {
		return m.S2LFecVrf
	}
	return ""
}

type MplsSrlgInfo struct {
	SharedRiskGroup      uint32   `protobuf:"varint,1,opt,name=shared_risk_group,json=sharedRiskGroup,proto3" json:"shared_risk_group,omitempty"`
	SrlgName             string   `protobuf:"bytes,2,opt,name=srlg_name,json=srlgName,proto3" json:"srlg_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MplsSrlgInfo) Reset()         { *m = MplsSrlgInfo{} }
func (m *MplsSrlgInfo) String() string { return proto.CompactTextString(m) }
func (*MplsSrlgInfo) ProtoMessage()    {}
func (*MplsSrlgInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_97fd10a364dd9ffd, []int{41}
}

func (m *MplsSrlgInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsSrlgInfo.Unmarshal(m, b)
}
func (m *MplsSrlgInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsSrlgInfo.Marshal(b, m, deterministic)
}
func (m *MplsSrlgInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsSrlgInfo.Merge(m, src)
}
func (m *MplsSrlgInfo) XXX_Size() int {
	return xxx_messageInfo_MplsSrlgInfo.Size(m)
}
func (m *MplsSrlgInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsSrlgInfo.DiscardUnknown(m)
}

var xxx_messageInfo_MplsSrlgInfo proto.InternalMessageInfo

func (m *MplsSrlgInfo) GetSharedRiskGroup() uint32 {
	if m != nil {
		return m.SharedRiskGroup
	}
	return 0
}

func (m *MplsSrlgInfo) GetSrlgName() string {
	if m != nil {
		return m.SrlgName
	}
	return ""
}

type RsvpMgmtEroIpv4Subobj struct {
	IsStrictRoute        bool     `protobuf:"varint,1,opt,name=is_strict_route,json=isStrictRoute,proto3" json:"is_strict_route,omitempty"`
	EroAddress           string   `protobuf:"bytes,2,opt,name=ero_address,json=eroAddress,proto3" json:"ero_address,omitempty"`
	PrefixLength         uint32   `protobuf:"varint,3,opt,name=prefix_length,json=prefixLength,proto3" json:"prefix_length,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RsvpMgmtEroIpv4Subobj) Reset()         { *m = RsvpMgmtEroIpv4Subobj{} }
func (m *RsvpMgmtEroIpv4Subobj) String() string { return proto.CompactTextString(m) }
func (*RsvpMgmtEroIpv4Subobj) ProtoMessage()    {}
func (*RsvpMgmtEroIpv4Subobj) Descriptor() ([]byte, []int) {
	return fileDescriptor_97fd10a364dd9ffd, []int{42}
}

func (m *RsvpMgmtEroIpv4Subobj) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RsvpMgmtEroIpv4Subobj.Unmarshal(m, b)
}
func (m *RsvpMgmtEroIpv4Subobj) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RsvpMgmtEroIpv4Subobj.Marshal(b, m, deterministic)
}
func (m *RsvpMgmtEroIpv4Subobj) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RsvpMgmtEroIpv4Subobj.Merge(m, src)
}
func (m *RsvpMgmtEroIpv4Subobj) XXX_Size() int {
	return xxx_messageInfo_RsvpMgmtEroIpv4Subobj.Size(m)
}
func (m *RsvpMgmtEroIpv4Subobj) XXX_DiscardUnknown() {
	xxx_messageInfo_RsvpMgmtEroIpv4Subobj.DiscardUnknown(m)
}

var xxx_messageInfo_RsvpMgmtEroIpv4Subobj proto.InternalMessageInfo

func (m *RsvpMgmtEroIpv4Subobj) GetIsStrictRoute() bool {
	if m != nil {
		return m.IsStrictRoute
	}
	return false
}

func (m *RsvpMgmtEroIpv4Subobj) GetEroAddress() string {
	if m != nil {
		return m.EroAddress
	}
	return ""
}

func (m *RsvpMgmtEroIpv4Subobj) GetPrefixLength() uint32 {
	if m != nil {
		return m.PrefixLength
	}
	return 0
}

type RsvpMgmtEroUnnumSubobj struct {
	IsStrictRoute        bool     `protobuf:"varint,1,opt,name=is_strict_route,json=isStrictRoute,proto3" json:"is_strict_route,omitempty"`
	EroInterfaceId       uint32   `protobuf:"varint,2,opt,name=ero_interface_id,json=eroInterfaceId,proto3" json:"ero_interface_id,omitempty"`
	EroRouterId          string   `protobuf:"bytes,3,opt,name=ero_router_id,json=eroRouterId,proto3" json:"ero_router_id,omitempty"`
	Status               string   `protobuf:"bytes,4,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RsvpMgmtEroUnnumSubobj) Reset()         { *m = RsvpMgmtEroUnnumSubobj{} }
func (m *RsvpMgmtEroUnnumSubobj) String() string { return proto.CompactTextString(m) }
func (*RsvpMgmtEroUnnumSubobj) ProtoMessage()    {}
func (*RsvpMgmtEroUnnumSubobj) Descriptor() ([]byte, []int) {
	return fileDescriptor_97fd10a364dd9ffd, []int{43}
}

func (m *RsvpMgmtEroUnnumSubobj) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RsvpMgmtEroUnnumSubobj.Unmarshal(m, b)
}
func (m *RsvpMgmtEroUnnumSubobj) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RsvpMgmtEroUnnumSubobj.Marshal(b, m, deterministic)
}
func (m *RsvpMgmtEroUnnumSubobj) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RsvpMgmtEroUnnumSubobj.Merge(m, src)
}
func (m *RsvpMgmtEroUnnumSubobj) XXX_Size() int {
	return xxx_messageInfo_RsvpMgmtEroUnnumSubobj.Size(m)
}
func (m *RsvpMgmtEroUnnumSubobj) XXX_DiscardUnknown() {
	xxx_messageInfo_RsvpMgmtEroUnnumSubobj.DiscardUnknown(m)
}

var xxx_messageInfo_RsvpMgmtEroUnnumSubobj proto.InternalMessageInfo

func (m *RsvpMgmtEroUnnumSubobj) GetIsStrictRoute() bool {
	if m != nil {
		return m.IsStrictRoute
	}
	return false
}

func (m *RsvpMgmtEroUnnumSubobj) GetEroInterfaceId() uint32 {
	if m != nil {
		return m.EroInterfaceId
	}
	return 0
}

func (m *RsvpMgmtEroUnnumSubobj) GetEroRouterId() string {
	if m != nil {
		return m.EroRouterId
	}
	return ""
}

func (m *RsvpMgmtEroUnnumSubobj) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

type RsvpMgmtEroSubobj struct {
	EroType                string                  `protobuf:"bytes,1,opt,name=ero_type,json=eroType,proto3" json:"ero_type,omitempty"`
	Ipv4EroSubObject       *RsvpMgmtEroIpv4Subobj  `protobuf:"bytes,2,opt,name=ipv4ero_sub_object,json=ipv4eroSubObject,proto3" json:"ipv4ero_sub_object,omitempty"`
	UnnumberedEroSubObject *RsvpMgmtEroUnnumSubobj `protobuf:"bytes,3,opt,name=unnumbered_ero_sub_object,json=unnumberedEroSubObject,proto3" json:"unnumbered_ero_sub_object,omitempty"`
	XXX_NoUnkeyedLiteral   struct{}                `json:"-"`
	XXX_unrecognized       []byte                  `json:"-"`
	XXX_sizecache          int32                   `json:"-"`
}

func (m *RsvpMgmtEroSubobj) Reset()         { *m = RsvpMgmtEroSubobj{} }
func (m *RsvpMgmtEroSubobj) String() string { return proto.CompactTextString(m) }
func (*RsvpMgmtEroSubobj) ProtoMessage()    {}
func (*RsvpMgmtEroSubobj) Descriptor() ([]byte, []int) {
	return fileDescriptor_97fd10a364dd9ffd, []int{44}
}

func (m *RsvpMgmtEroSubobj) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RsvpMgmtEroSubobj.Unmarshal(m, b)
}
func (m *RsvpMgmtEroSubobj) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RsvpMgmtEroSubobj.Marshal(b, m, deterministic)
}
func (m *RsvpMgmtEroSubobj) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RsvpMgmtEroSubobj.Merge(m, src)
}
func (m *RsvpMgmtEroSubobj) XXX_Size() int {
	return xxx_messageInfo_RsvpMgmtEroSubobj.Size(m)
}
func (m *RsvpMgmtEroSubobj) XXX_DiscardUnknown() {
	xxx_messageInfo_RsvpMgmtEroSubobj.DiscardUnknown(m)
}

var xxx_messageInfo_RsvpMgmtEroSubobj proto.InternalMessageInfo

func (m *RsvpMgmtEroSubobj) GetEroType() string {
	if m != nil {
		return m.EroType
	}
	return ""
}

func (m *RsvpMgmtEroSubobj) GetIpv4EroSubObject() *RsvpMgmtEroIpv4Subobj {
	if m != nil {
		return m.Ipv4EroSubObject
	}
	return nil
}

func (m *RsvpMgmtEroSubobj) GetUnnumberedEroSubObject() *RsvpMgmtEroUnnumSubobj {
	if m != nil {
		return m.UnnumberedEroSubObject
	}
	return nil
}

type RsvpMgmtRroIpv4SubobjFlags struct {
	IsProtectionAvailable     bool     `protobuf:"varint,1,opt,name=is_protection_available,json=isProtectionAvailable,proto3" json:"is_protection_available,omitempty"`
	IsProtectionInUse         bool     `protobuf:"varint,2,opt,name=is_protection_in_use,json=isProtectionInUse,proto3" json:"is_protection_in_use,omitempty"`
	IsBandwidthProtected      bool     `protobuf:"varint,3,opt,name=is_bandwidth_protected,json=isBandwidthProtected,proto3" json:"is_bandwidth_protected,omitempty"`
	IsNodeProtectionAvailable bool     `protobuf:"varint,4,opt,name=is_node_protection_available,json=isNodeProtectionAvailable,proto3" json:"is_node_protection_available,omitempty"`
	IsNodeId                  bool     `protobuf:"varint,5,opt,name=is_node_id,json=isNodeId,proto3" json:"is_node_id,omitempty"`
	XXX_NoUnkeyedLiteral      struct{} `json:"-"`
	XXX_unrecognized          []byte   `json:"-"`
	XXX_sizecache             int32    `json:"-"`
}

func (m *RsvpMgmtRroIpv4SubobjFlags) Reset()         { *m = RsvpMgmtRroIpv4SubobjFlags{} }
func (m *RsvpMgmtRroIpv4SubobjFlags) String() string { return proto.CompactTextString(m) }
func (*RsvpMgmtRroIpv4SubobjFlags) ProtoMessage()    {}
func (*RsvpMgmtRroIpv4SubobjFlags) Descriptor() ([]byte, []int) {
	return fileDescriptor_97fd10a364dd9ffd, []int{45}
}

func (m *RsvpMgmtRroIpv4SubobjFlags) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RsvpMgmtRroIpv4SubobjFlags.Unmarshal(m, b)
}
func (m *RsvpMgmtRroIpv4SubobjFlags) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RsvpMgmtRroIpv4SubobjFlags.Marshal(b, m, deterministic)
}
func (m *RsvpMgmtRroIpv4SubobjFlags) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RsvpMgmtRroIpv4SubobjFlags.Merge(m, src)
}
func (m *RsvpMgmtRroIpv4SubobjFlags) XXX_Size() int {
	return xxx_messageInfo_RsvpMgmtRroIpv4SubobjFlags.Size(m)
}
func (m *RsvpMgmtRroIpv4SubobjFlags) XXX_DiscardUnknown() {
	xxx_messageInfo_RsvpMgmtRroIpv4SubobjFlags.DiscardUnknown(m)
}

var xxx_messageInfo_RsvpMgmtRroIpv4SubobjFlags proto.InternalMessageInfo

func (m *RsvpMgmtRroIpv4SubobjFlags) GetIsProtectionAvailable() bool {
	if m != nil {
		return m.IsProtectionAvailable
	}
	return false
}

func (m *RsvpMgmtRroIpv4SubobjFlags) GetIsProtectionInUse() bool {
	if m != nil {
		return m.IsProtectionInUse
	}
	return false
}

func (m *RsvpMgmtRroIpv4SubobjFlags) GetIsBandwidthProtected() bool {
	if m != nil {
		return m.IsBandwidthProtected
	}
	return false
}

func (m *RsvpMgmtRroIpv4SubobjFlags) GetIsNodeProtectionAvailable() bool {
	if m != nil {
		return m.IsNodeProtectionAvailable
	}
	return false
}

func (m *RsvpMgmtRroIpv4SubobjFlags) GetIsNodeId() bool {
	if m != nil {
		return m.IsNodeId
	}
	return false
}

type RsvpMgmtRroIpv4Subobj struct {
	Flags                *RsvpMgmtRroIpv4SubobjFlags `protobuf:"bytes,1,opt,name=flags,proto3" json:"flags,omitempty"`
	RroAddress           string                      `protobuf:"bytes,2,opt,name=rro_address,json=rroAddress,proto3" json:"rro_address,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *RsvpMgmtRroIpv4Subobj) Reset()         { *m = RsvpMgmtRroIpv4Subobj{} }
func (m *RsvpMgmtRroIpv4Subobj) String() string { return proto.CompactTextString(m) }
func (*RsvpMgmtRroIpv4Subobj) ProtoMessage()    {}
func (*RsvpMgmtRroIpv4Subobj) Descriptor() ([]byte, []int) {
	return fileDescriptor_97fd10a364dd9ffd, []int{46}
}

func (m *RsvpMgmtRroIpv4Subobj) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RsvpMgmtRroIpv4Subobj.Unmarshal(m, b)
}
func (m *RsvpMgmtRroIpv4Subobj) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RsvpMgmtRroIpv4Subobj.Marshal(b, m, deterministic)
}
func (m *RsvpMgmtRroIpv4Subobj) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RsvpMgmtRroIpv4Subobj.Merge(m, src)
}
func (m *RsvpMgmtRroIpv4Subobj) XXX_Size() int {
	return xxx_messageInfo_RsvpMgmtRroIpv4Subobj.Size(m)
}
func (m *RsvpMgmtRroIpv4Subobj) XXX_DiscardUnknown() {
	xxx_messageInfo_RsvpMgmtRroIpv4Subobj.DiscardUnknown(m)
}

var xxx_messageInfo_RsvpMgmtRroIpv4Subobj proto.InternalMessageInfo

func (m *RsvpMgmtRroIpv4Subobj) GetFlags() *RsvpMgmtRroIpv4SubobjFlags {
	if m != nil {
		return m.Flags
	}
	return nil
}

func (m *RsvpMgmtRroIpv4Subobj) GetRroAddress() string {
	if m != nil {
		return m.RroAddress
	}
	return ""
}

type RsvpMgmtRroLabelSubobjFlags struct {
	IsGlobalLabel        bool     `protobuf:"varint,1,opt,name=is_global_label,json=isGlobalLabel,proto3" json:"is_global_label,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RsvpMgmtRroLabelSubobjFlags) Reset()         { *m = RsvpMgmtRroLabelSubobjFlags{} }
func (m *RsvpMgmtRroLabelSubobjFlags) String() string { return proto.CompactTextString(m) }
func (*RsvpMgmtRroLabelSubobjFlags) ProtoMessage()    {}
func (*RsvpMgmtRroLabelSubobjFlags) Descriptor() ([]byte, []int) {
	return fileDescriptor_97fd10a364dd9ffd, []int{47}
}

func (m *RsvpMgmtRroLabelSubobjFlags) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RsvpMgmtRroLabelSubobjFlags.Unmarshal(m, b)
}
func (m *RsvpMgmtRroLabelSubobjFlags) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RsvpMgmtRroLabelSubobjFlags.Marshal(b, m, deterministic)
}
func (m *RsvpMgmtRroLabelSubobjFlags) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RsvpMgmtRroLabelSubobjFlags.Merge(m, src)
}
func (m *RsvpMgmtRroLabelSubobjFlags) XXX_Size() int {
	return xxx_messageInfo_RsvpMgmtRroLabelSubobjFlags.Size(m)
}
func (m *RsvpMgmtRroLabelSubobjFlags) XXX_DiscardUnknown() {
	xxx_messageInfo_RsvpMgmtRroLabelSubobjFlags.DiscardUnknown(m)
}

var xxx_messageInfo_RsvpMgmtRroLabelSubobjFlags proto.InternalMessageInfo

func (m *RsvpMgmtRroLabelSubobjFlags) GetIsGlobalLabel() bool {
	if m != nil {
		return m.IsGlobalLabel
	}
	return false
}

type RsvpMgmtRroLabelSubobj struct {
	Flags                 *RsvpMgmtRroLabelSubobjFlags `protobuf:"bytes,1,opt,name=flags,proto3" json:"flags,omitempty"`
	Label                 uint32                       `protobuf:"varint,2,opt,name=label,proto3" json:"label,omitempty"`
	IsLabelVariableLength bool                         `protobuf:"varint,3,opt,name=is_label_variable_length,json=isLabelVariableLength,proto3" json:"is_label_variable_length,omitempty"`
	VariableLengthLabel   []uint32                     `protobuf:"varint,4,rep,packed,name=variable_length_label,json=variableLengthLabel,proto3" json:"variable_length_label,omitempty"`
	XXX_NoUnkeyedLiteral  struct{}                     `json:"-"`
	XXX_unrecognized      []byte                       `json:"-"`
	XXX_sizecache         int32                        `json:"-"`
}

func (m *RsvpMgmtRroLabelSubobj) Reset()         { *m = RsvpMgmtRroLabelSubobj{} }
func (m *RsvpMgmtRroLabelSubobj) String() string { return proto.CompactTextString(m) }
func (*RsvpMgmtRroLabelSubobj) ProtoMessage()    {}
func (*RsvpMgmtRroLabelSubobj) Descriptor() ([]byte, []int) {
	return fileDescriptor_97fd10a364dd9ffd, []int{48}
}

func (m *RsvpMgmtRroLabelSubobj) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RsvpMgmtRroLabelSubobj.Unmarshal(m, b)
}
func (m *RsvpMgmtRroLabelSubobj) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RsvpMgmtRroLabelSubobj.Marshal(b, m, deterministic)
}
func (m *RsvpMgmtRroLabelSubobj) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RsvpMgmtRroLabelSubobj.Merge(m, src)
}
func (m *RsvpMgmtRroLabelSubobj) XXX_Size() int {
	return xxx_messageInfo_RsvpMgmtRroLabelSubobj.Size(m)
}
func (m *RsvpMgmtRroLabelSubobj) XXX_DiscardUnknown() {
	xxx_messageInfo_RsvpMgmtRroLabelSubobj.DiscardUnknown(m)
}

var xxx_messageInfo_RsvpMgmtRroLabelSubobj proto.InternalMessageInfo

func (m *RsvpMgmtRroLabelSubobj) GetFlags() *RsvpMgmtRroLabelSubobjFlags {
	if m != nil {
		return m.Flags
	}
	return nil
}

func (m *RsvpMgmtRroLabelSubobj) GetLabel() uint32 {
	if m != nil {
		return m.Label
	}
	return 0
}

func (m *RsvpMgmtRroLabelSubobj) GetIsLabelVariableLength() bool {
	if m != nil {
		return m.IsLabelVariableLength
	}
	return false
}

func (m *RsvpMgmtRroLabelSubobj) GetVariableLengthLabel() []uint32 {
	if m != nil {
		return m.VariableLengthLabel
	}
	return nil
}

type RsvpMgmtRroUnnumberedSubobjFlags struct {
	IsProtectionAvailable     bool     `protobuf:"varint,1,opt,name=is_protection_available,json=isProtectionAvailable,proto3" json:"is_protection_available,omitempty"`
	IsProtectionInUse         bool     `protobuf:"varint,2,opt,name=is_protection_in_use,json=isProtectionInUse,proto3" json:"is_protection_in_use,omitempty"`
	IsBandwidthProtected      bool     `protobuf:"varint,3,opt,name=is_bandwidth_protected,json=isBandwidthProtected,proto3" json:"is_bandwidth_protected,omitempty"`
	IsNodeProtectionAvailable bool     `protobuf:"varint,4,opt,name=is_node_protection_available,json=isNodeProtectionAvailable,proto3" json:"is_node_protection_available,omitempty"`
	IsNodeId                  bool     `protobuf:"varint,5,opt,name=is_node_id,json=isNodeId,proto3" json:"is_node_id,omitempty"`
	XXX_NoUnkeyedLiteral      struct{} `json:"-"`
	XXX_unrecognized          []byte   `json:"-"`
	XXX_sizecache             int32    `json:"-"`
}

func (m *RsvpMgmtRroUnnumberedSubobjFlags) Reset()         { *m = RsvpMgmtRroUnnumberedSubobjFlags{} }
func (m *RsvpMgmtRroUnnumberedSubobjFlags) String() string { return proto.CompactTextString(m) }
func (*RsvpMgmtRroUnnumberedSubobjFlags) ProtoMessage()    {}
func (*RsvpMgmtRroUnnumberedSubobjFlags) Descriptor() ([]byte, []int) {
	return fileDescriptor_97fd10a364dd9ffd, []int{49}
}

func (m *RsvpMgmtRroUnnumberedSubobjFlags) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RsvpMgmtRroUnnumberedSubobjFlags.Unmarshal(m, b)
}
func (m *RsvpMgmtRroUnnumberedSubobjFlags) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RsvpMgmtRroUnnumberedSubobjFlags.Marshal(b, m, deterministic)
}
func (m *RsvpMgmtRroUnnumberedSubobjFlags) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RsvpMgmtRroUnnumberedSubobjFlags.Merge(m, src)
}
func (m *RsvpMgmtRroUnnumberedSubobjFlags) XXX_Size() int {
	return xxx_messageInfo_RsvpMgmtRroUnnumberedSubobjFlags.Size(m)
}
func (m *RsvpMgmtRroUnnumberedSubobjFlags) XXX_DiscardUnknown() {
	xxx_messageInfo_RsvpMgmtRroUnnumberedSubobjFlags.DiscardUnknown(m)
}

var xxx_messageInfo_RsvpMgmtRroUnnumberedSubobjFlags proto.InternalMessageInfo

func (m *RsvpMgmtRroUnnumberedSubobjFlags) GetIsProtectionAvailable() bool {
	if m != nil {
		return m.IsProtectionAvailable
	}
	return false
}

func (m *RsvpMgmtRroUnnumberedSubobjFlags) GetIsProtectionInUse() bool {
	if m != nil {
		return m.IsProtectionInUse
	}
	return false
}

func (m *RsvpMgmtRroUnnumberedSubobjFlags) GetIsBandwidthProtected() bool {
	if m != nil {
		return m.IsBandwidthProtected
	}
	return false
}

func (m *RsvpMgmtRroUnnumberedSubobjFlags) GetIsNodeProtectionAvailable() bool {
	if m != nil {
		return m.IsNodeProtectionAvailable
	}
	return false
}

func (m *RsvpMgmtRroUnnumberedSubobjFlags) GetIsNodeId() bool {
	if m != nil {
		return m.IsNodeId
	}
	return false
}

type RsvpMgmtRroUnnumberedSubobj struct {
	Flags                *RsvpMgmtRroUnnumberedSubobjFlags `protobuf:"bytes,1,opt,name=flags,proto3" json:"flags,omitempty"`
	InterfaceAddress     string                            `protobuf:"bytes,2,opt,name=interface_address,json=interfaceAddress,proto3" json:"interface_address,omitempty"`
	InterfaceId          uint32                            `protobuf:"varint,3,opt,name=interface_id,json=interfaceId,proto3" json:"interface_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                          `json:"-"`
	XXX_unrecognized     []byte                            `json:"-"`
	XXX_sizecache        int32                             `json:"-"`
}

func (m *RsvpMgmtRroUnnumberedSubobj) Reset()         { *m = RsvpMgmtRroUnnumberedSubobj{} }
func (m *RsvpMgmtRroUnnumberedSubobj) String() string { return proto.CompactTextString(m) }
func (*RsvpMgmtRroUnnumberedSubobj) ProtoMessage()    {}
func (*RsvpMgmtRroUnnumberedSubobj) Descriptor() ([]byte, []int) {
	return fileDescriptor_97fd10a364dd9ffd, []int{50}
}

func (m *RsvpMgmtRroUnnumberedSubobj) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RsvpMgmtRroUnnumberedSubobj.Unmarshal(m, b)
}
func (m *RsvpMgmtRroUnnumberedSubobj) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RsvpMgmtRroUnnumberedSubobj.Marshal(b, m, deterministic)
}
func (m *RsvpMgmtRroUnnumberedSubobj) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RsvpMgmtRroUnnumberedSubobj.Merge(m, src)
}
func (m *RsvpMgmtRroUnnumberedSubobj) XXX_Size() int {
	return xxx_messageInfo_RsvpMgmtRroUnnumberedSubobj.Size(m)
}
func (m *RsvpMgmtRroUnnumberedSubobj) XXX_DiscardUnknown() {
	xxx_messageInfo_RsvpMgmtRroUnnumberedSubobj.DiscardUnknown(m)
}

var xxx_messageInfo_RsvpMgmtRroUnnumberedSubobj proto.InternalMessageInfo

func (m *RsvpMgmtRroUnnumberedSubobj) GetFlags() *RsvpMgmtRroUnnumberedSubobjFlags {
	if m != nil {
		return m.Flags
	}
	return nil
}

func (m *RsvpMgmtRroUnnumberedSubobj) GetInterfaceAddress() string {
	if m != nil {
		return m.InterfaceAddress
	}
	return ""
}

func (m *RsvpMgmtRroUnnumberedSubobj) GetInterfaceId() uint32 {
	if m != nil {
		return m.InterfaceId
	}
	return 0
}

type RsvpMgmtRroSrlgSubobj struct {
	SrlGs                []uint32 `protobuf:"varint,1,rep,packed,name=srl_gs,json=srlGs,proto3" json:"srl_gs,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RsvpMgmtRroSrlgSubobj) Reset()         { *m = RsvpMgmtRroSrlgSubobj{} }
func (m *RsvpMgmtRroSrlgSubobj) String() string { return proto.CompactTextString(m) }
func (*RsvpMgmtRroSrlgSubobj) ProtoMessage()    {}
func (*RsvpMgmtRroSrlgSubobj) Descriptor() ([]byte, []int) {
	return fileDescriptor_97fd10a364dd9ffd, []int{51}
}

func (m *RsvpMgmtRroSrlgSubobj) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RsvpMgmtRroSrlgSubobj.Unmarshal(m, b)
}
func (m *RsvpMgmtRroSrlgSubobj) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RsvpMgmtRroSrlgSubobj.Marshal(b, m, deterministic)
}
func (m *RsvpMgmtRroSrlgSubobj) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RsvpMgmtRroSrlgSubobj.Merge(m, src)
}
func (m *RsvpMgmtRroSrlgSubobj) XXX_Size() int {
	return xxx_messageInfo_RsvpMgmtRroSrlgSubobj.Size(m)
}
func (m *RsvpMgmtRroSrlgSubobj) XXX_DiscardUnknown() {
	xxx_messageInfo_RsvpMgmtRroSrlgSubobj.DiscardUnknown(m)
}

var xxx_messageInfo_RsvpMgmtRroSrlgSubobj proto.InternalMessageInfo

func (m *RsvpMgmtRroSrlgSubobj) GetSrlGs() []uint32 {
	if m != nil {
		return m.SrlGs
	}
	return nil
}

type RsvpMgmtRroSubobj struct {
	RroType                string                       `protobuf:"bytes,1,opt,name=rro_type,json=rroType,proto3" json:"rro_type,omitempty"`
	Ipv4RroSubObject       *RsvpMgmtRroIpv4Subobj       `protobuf:"bytes,2,opt,name=ipv4rro_sub_object,json=ipv4rroSubObject,proto3" json:"ipv4rro_sub_object,omitempty"`
	LabelRroSubObject      *RsvpMgmtRroLabelSubobj      `protobuf:"bytes,3,opt,name=label_rro_sub_object,json=labelRroSubObject,proto3" json:"label_rro_sub_object,omitempty"`
	UnnumberedRroSubObject *RsvpMgmtRroUnnumberedSubobj `protobuf:"bytes,4,opt,name=unnumbered_rro_sub_object,json=unnumberedRroSubObject,proto3" json:"unnumbered_rro_sub_object,omitempty"`
	SrlgRroSubObject       *RsvpMgmtRroSrlgSubobj       `protobuf:"bytes,5,opt,name=srlg_rro_sub_object,json=srlgRroSubObject,proto3" json:"srlg_rro_sub_object,omitempty"`
	XXX_NoUnkeyedLiteral   struct{}                     `json:"-"`
	XXX_unrecognized       []byte                       `json:"-"`
	XXX_sizecache          int32                        `json:"-"`
}

func (m *RsvpMgmtRroSubobj) Reset()         { *m = RsvpMgmtRroSubobj{} }
func (m *RsvpMgmtRroSubobj) String() string { return proto.CompactTextString(m) }
func (*RsvpMgmtRroSubobj) ProtoMessage()    {}
func (*RsvpMgmtRroSubobj) Descriptor() ([]byte, []int) {
	return fileDescriptor_97fd10a364dd9ffd, []int{52}
}

func (m *RsvpMgmtRroSubobj) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RsvpMgmtRroSubobj.Unmarshal(m, b)
}
func (m *RsvpMgmtRroSubobj) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RsvpMgmtRroSubobj.Marshal(b, m, deterministic)
}
func (m *RsvpMgmtRroSubobj) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RsvpMgmtRroSubobj.Merge(m, src)
}
func (m *RsvpMgmtRroSubobj) XXX_Size() int {
	return xxx_messageInfo_RsvpMgmtRroSubobj.Size(m)
}
func (m *RsvpMgmtRroSubobj) XXX_DiscardUnknown() {
	xxx_messageInfo_RsvpMgmtRroSubobj.DiscardUnknown(m)
}

var xxx_messageInfo_RsvpMgmtRroSubobj proto.InternalMessageInfo

func (m *RsvpMgmtRroSubobj) GetRroType() string {
	if m != nil {
		return m.RroType
	}
	return ""
}

func (m *RsvpMgmtRroSubobj) GetIpv4RroSubObject() *RsvpMgmtRroIpv4Subobj {
	if m != nil {
		return m.Ipv4RroSubObject
	}
	return nil
}

func (m *RsvpMgmtRroSubobj) GetLabelRroSubObject() *RsvpMgmtRroLabelSubobj {
	if m != nil {
		return m.LabelRroSubObject
	}
	return nil
}

func (m *RsvpMgmtRroSubobj) GetUnnumberedRroSubObject() *RsvpMgmtRroUnnumberedSubobj {
	if m != nil {
		return m.UnnumberedRroSubObject
	}
	return nil
}

func (m *RsvpMgmtRroSubobj) GetSrlgRroSubObject() *RsvpMgmtRroSrlgSubobj {
	if m != nil {
		return m.SrlgRroSubObject
	}
	return nil
}

type TunnelHopInfo struct {
	HopAddress           string   `protobuf:"bytes,1,opt,name=hop_address,json=hopAddress,proto3" json:"hop_address,omitempty"`
	HopAffinity          uint32   `protobuf:"varint,2,opt,name=hop_affinity,json=hopAffinity,proto3" json:"hop_affinity,omitempty"`
	HopExtendedAffinity  []uint32 `protobuf:"varint,3,rep,packed,name=hop_extended_affinity,json=hopExtendedAffinity,proto3" json:"hop_extended_affinity,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TunnelHopInfo) Reset()         { *m = TunnelHopInfo{} }
func (m *TunnelHopInfo) String() string { return proto.CompactTextString(m) }
func (*TunnelHopInfo) ProtoMessage()    {}
func (*TunnelHopInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_97fd10a364dd9ffd, []int{53}
}

func (m *TunnelHopInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TunnelHopInfo.Unmarshal(m, b)
}
func (m *TunnelHopInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TunnelHopInfo.Marshal(b, m, deterministic)
}
func (m *TunnelHopInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TunnelHopInfo.Merge(m, src)
}
func (m *TunnelHopInfo) XXX_Size() int {
	return xxx_messageInfo_TunnelHopInfo.Size(m)
}
func (m *TunnelHopInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_TunnelHopInfo.DiscardUnknown(m)
}

var xxx_messageInfo_TunnelHopInfo proto.InternalMessageInfo

func (m *TunnelHopInfo) GetHopAddress() string {
	if m != nil {
		return m.HopAddress
	}
	return ""
}

func (m *TunnelHopInfo) GetHopAffinity() uint32 {
	if m != nil {
		return m.HopAffinity
	}
	return 0
}

func (m *TunnelHopInfo) GetHopExtendedAffinity() []uint32 {
	if m != nil {
		return m.HopExtendedAffinity
	}
	return nil
}

type BandwidthSpecBag struct {
	AverageRate          uint64   `protobuf:"varint,1,opt,name=average_rate,json=averageRate,proto3" json:"average_rate,omitempty"`
	MaximumBurst         uint64   `protobuf:"varint,2,opt,name=maximum_burst,json=maximumBurst,proto3" json:"maximum_burst,omitempty"`
	PeakRate             uint64   `protobuf:"varint,3,opt,name=peak_rate,json=peakRate,proto3" json:"peak_rate,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BandwidthSpecBag) Reset()         { *m = BandwidthSpecBag{} }
func (m *BandwidthSpecBag) String() string { return proto.CompactTextString(m) }
func (*BandwidthSpecBag) ProtoMessage()    {}
func (*BandwidthSpecBag) Descriptor() ([]byte, []int) {
	return fileDescriptor_97fd10a364dd9ffd, []int{54}
}

func (m *BandwidthSpecBag) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BandwidthSpecBag.Unmarshal(m, b)
}
func (m *BandwidthSpecBag) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BandwidthSpecBag.Marshal(b, m, deterministic)
}
func (m *BandwidthSpecBag) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BandwidthSpecBag.Merge(m, src)
}
func (m *BandwidthSpecBag) XXX_Size() int {
	return xxx_messageInfo_BandwidthSpecBag.Size(m)
}
func (m *BandwidthSpecBag) XXX_DiscardUnknown() {
	xxx_messageInfo_BandwidthSpecBag.DiscardUnknown(m)
}

var xxx_messageInfo_BandwidthSpecBag proto.InternalMessageInfo

func (m *BandwidthSpecBag) GetAverageRate() uint64 {
	if m != nil {
		return m.AverageRate
	}
	return 0
}

func (m *BandwidthSpecBag) GetMaximumBurst() uint64 {
	if m != nil {
		return m.MaximumBurst
	}
	return 0
}

func (m *BandwidthSpecBag) GetPeakRate() uint64 {
	if m != nil {
		return m.PeakRate
	}
	return 0
}

type TeMgmtG709OtnTspec struct {
	SignalType           uint32   `protobuf:"varint,1,opt,name=signal_type,json=signalType,proto3" json:"signal_type,omitempty"`
	NmcOrTolerance       uint32   `protobuf:"varint,2,opt,name=nmc_or_tolerance,json=nmcOrTolerance,proto3" json:"nmc_or_tolerance,omitempty"`
	Nvc                  uint32   `protobuf:"varint,3,opt,name=nvc,proto3" json:"nvc,omitempty"`
	Multiplier           uint32   `protobuf:"varint,4,opt,name=multiplier,proto3" json:"multiplier,omitempty"`
	BitRate              uint32   `protobuf:"varint,5,opt,name=bit_rate,json=bitRate,proto3" json:"bit_rate,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TeMgmtG709OtnTspec) Reset()         { *m = TeMgmtG709OtnTspec{} }
func (m *TeMgmtG709OtnTspec) String() string { return proto.CompactTextString(m) }
func (*TeMgmtG709OtnTspec) ProtoMessage()    {}
func (*TeMgmtG709OtnTspec) Descriptor() ([]byte, []int) {
	return fileDescriptor_97fd10a364dd9ffd, []int{55}
}

func (m *TeMgmtG709OtnTspec) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TeMgmtG709OtnTspec.Unmarshal(m, b)
}
func (m *TeMgmtG709OtnTspec) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TeMgmtG709OtnTspec.Marshal(b, m, deterministic)
}
func (m *TeMgmtG709OtnTspec) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TeMgmtG709OtnTspec.Merge(m, src)
}
func (m *TeMgmtG709OtnTspec) XXX_Size() int {
	return xxx_messageInfo_TeMgmtG709OtnTspec.Size(m)
}
func (m *TeMgmtG709OtnTspec) XXX_DiscardUnknown() {
	xxx_messageInfo_TeMgmtG709OtnTspec.DiscardUnknown(m)
}

var xxx_messageInfo_TeMgmtG709OtnTspec proto.InternalMessageInfo

func (m *TeMgmtG709OtnTspec) GetSignalType() uint32 {
	if m != nil {
		return m.SignalType
	}
	return 0
}

func (m *TeMgmtG709OtnTspec) GetNmcOrTolerance() uint32 {
	if m != nil {
		return m.NmcOrTolerance
	}
	return 0
}

func (m *TeMgmtG709OtnTspec) GetNvc() uint32 {
	if m != nil {
		return m.Nvc
	}
	return 0
}

func (m *TeMgmtG709OtnTspec) GetMultiplier() uint32 {
	if m != nil {
		return m.Multiplier
	}
	return 0
}

func (m *TeMgmtG709OtnTspec) GetBitRate() uint32 {
	if m != nil {
		return m.BitRate
	}
	return 0
}

type TeMgmtGenericTspec struct {
	TspecType            string              `protobuf:"bytes,1,opt,name=tspec_type,json=tspecType,proto3" json:"tspec_type,omitempty"`
	Otntspec             *TeMgmtG709OtnTspec `protobuf:"bytes,2,opt,name=otntspec,proto3" json:"otntspec,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *TeMgmtGenericTspec) Reset()         { *m = TeMgmtGenericTspec{} }
func (m *TeMgmtGenericTspec) String() string { return proto.CompactTextString(m) }
func (*TeMgmtGenericTspec) ProtoMessage()    {}
func (*TeMgmtGenericTspec) Descriptor() ([]byte, []int) {
	return fileDescriptor_97fd10a364dd9ffd, []int{56}
}

func (m *TeMgmtGenericTspec) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TeMgmtGenericTspec.Unmarshal(m, b)
}
func (m *TeMgmtGenericTspec) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TeMgmtGenericTspec.Marshal(b, m, deterministic)
}
func (m *TeMgmtGenericTspec) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TeMgmtGenericTspec.Merge(m, src)
}
func (m *TeMgmtGenericTspec) XXX_Size() int {
	return xxx_messageInfo_TeMgmtGenericTspec.Size(m)
}
func (m *TeMgmtGenericTspec) XXX_DiscardUnknown() {
	xxx_messageInfo_TeMgmtGenericTspec.DiscardUnknown(m)
}

var xxx_messageInfo_TeMgmtGenericTspec proto.InternalMessageInfo

func (m *TeMgmtGenericTspec) GetTspecType() string {
	if m != nil {
		return m.TspecType
	}
	return ""
}

func (m *TeMgmtGenericTspec) GetOtntspec() *TeMgmtG709OtnTspec {
	if m != nil {
		return m.Otntspec
	}
	return nil
}

type TeMgmtG709OtnFspec struct {
	SignalType           uint32   `protobuf:"varint,1,opt,name=signal_type,json=signalType,proto3" json:"signal_type,omitempty"`
	NmcOrTolerance       uint32   `protobuf:"varint,2,opt,name=nmc_or_tolerance,json=nmcOrTolerance,proto3" json:"nmc_or_tolerance,omitempty"`
	Nvc                  uint32   `protobuf:"varint,3,opt,name=nvc,proto3" json:"nvc,omitempty"`
	Multiplier           uint32   `protobuf:"varint,4,opt,name=multiplier,proto3" json:"multiplier,omitempty"`
	BitRate              uint32   `protobuf:"varint,5,opt,name=bit_rate,json=bitRate,proto3" json:"bit_rate,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TeMgmtG709OtnFspec) Reset()         { *m = TeMgmtG709OtnFspec{} }
func (m *TeMgmtG709OtnFspec) String() string { return proto.CompactTextString(m) }
func (*TeMgmtG709OtnFspec) ProtoMessage()    {}
func (*TeMgmtG709OtnFspec) Descriptor() ([]byte, []int) {
	return fileDescriptor_97fd10a364dd9ffd, []int{57}
}

func (m *TeMgmtG709OtnFspec) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TeMgmtG709OtnFspec.Unmarshal(m, b)
}
func (m *TeMgmtG709OtnFspec) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TeMgmtG709OtnFspec.Marshal(b, m, deterministic)
}
func (m *TeMgmtG709OtnFspec) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TeMgmtG709OtnFspec.Merge(m, src)
}
func (m *TeMgmtG709OtnFspec) XXX_Size() int {
	return xxx_messageInfo_TeMgmtG709OtnFspec.Size(m)
}
func (m *TeMgmtG709OtnFspec) XXX_DiscardUnknown() {
	xxx_messageInfo_TeMgmtG709OtnFspec.DiscardUnknown(m)
}

var xxx_messageInfo_TeMgmtG709OtnFspec proto.InternalMessageInfo

func (m *TeMgmtG709OtnFspec) GetSignalType() uint32 {
	if m != nil {
		return m.SignalType
	}
	return 0
}

func (m *TeMgmtG709OtnFspec) GetNmcOrTolerance() uint32 {
	if m != nil {
		return m.NmcOrTolerance
	}
	return 0
}

func (m *TeMgmtG709OtnFspec) GetNvc() uint32 {
	if m != nil {
		return m.Nvc
	}
	return 0
}

func (m *TeMgmtG709OtnFspec) GetMultiplier() uint32 {
	if m != nil {
		return m.Multiplier
	}
	return 0
}

func (m *TeMgmtG709OtnFspec) GetBitRate() uint32 {
	if m != nil {
		return m.BitRate
	}
	return 0
}

type TeMgmtGenericFspec struct {
	FspecType            string              `protobuf:"bytes,1,opt,name=fspec_type,json=fspecType,proto3" json:"fspec_type,omitempty"`
	Otnfspec             *TeMgmtG709OtnFspec `protobuf:"bytes,2,opt,name=otnfspec,proto3" json:"otnfspec,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *TeMgmtGenericFspec) Reset()         { *m = TeMgmtGenericFspec{} }
func (m *TeMgmtGenericFspec) String() string { return proto.CompactTextString(m) }
func (*TeMgmtGenericFspec) ProtoMessage()    {}
func (*TeMgmtGenericFspec) Descriptor() ([]byte, []int) {
	return fileDescriptor_97fd10a364dd9ffd, []int{58}
}

func (m *TeMgmtGenericFspec) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TeMgmtGenericFspec.Unmarshal(m, b)
}
func (m *TeMgmtGenericFspec) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TeMgmtGenericFspec.Marshal(b, m, deterministic)
}
func (m *TeMgmtGenericFspec) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TeMgmtGenericFspec.Merge(m, src)
}
func (m *TeMgmtGenericFspec) XXX_Size() int {
	return xxx_messageInfo_TeMgmtGenericFspec.Size(m)
}
func (m *TeMgmtGenericFspec) XXX_DiscardUnknown() {
	xxx_messageInfo_TeMgmtGenericFspec.DiscardUnknown(m)
}

var xxx_messageInfo_TeMgmtGenericFspec proto.InternalMessageInfo

func (m *TeMgmtGenericFspec) GetFspecType() string {
	if m != nil {
		return m.FspecType
	}
	return ""
}

func (m *TeMgmtGenericFspec) GetOtnfspec() *TeMgmtG709OtnFspec {
	if m != nil {
		return m.Otnfspec
	}
	return nil
}

type TeAddrTypeIpv4Unnum struct {
	RouterId             string   `protobuf:"bytes,1,opt,name=router_id,json=routerId,proto3" json:"router_id,omitempty"`
	InterfaceIndex       uint32   `protobuf:"varint,2,opt,name=interface_index,json=interfaceIndex,proto3" json:"interface_index,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TeAddrTypeIpv4Unnum) Reset()         { *m = TeAddrTypeIpv4Unnum{} }
func (m *TeAddrTypeIpv4Unnum) String() string { return proto.CompactTextString(m) }
func (*TeAddrTypeIpv4Unnum) ProtoMessage()    {}
func (*TeAddrTypeIpv4Unnum) Descriptor() ([]byte, []int) {
	return fileDescriptor_97fd10a364dd9ffd, []int{59}
}

func (m *TeAddrTypeIpv4Unnum) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TeAddrTypeIpv4Unnum.Unmarshal(m, b)
}
func (m *TeAddrTypeIpv4Unnum) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TeAddrTypeIpv4Unnum.Marshal(b, m, deterministic)
}
func (m *TeAddrTypeIpv4Unnum) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TeAddrTypeIpv4Unnum.Merge(m, src)
}
func (m *TeAddrTypeIpv4Unnum) XXX_Size() int {
	return xxx_messageInfo_TeAddrTypeIpv4Unnum.Size(m)
}
func (m *TeAddrTypeIpv4Unnum) XXX_DiscardUnknown() {
	xxx_messageInfo_TeAddrTypeIpv4Unnum.DiscardUnknown(m)
}

var xxx_messageInfo_TeAddrTypeIpv4Unnum proto.InternalMessageInfo

func (m *TeAddrTypeIpv4Unnum) GetRouterId() string {
	if m != nil {
		return m.RouterId
	}
	return ""
}

func (m *TeAddrTypeIpv4Unnum) GetInterfaceIndex() uint32 {
	if m != nil {
		return m.InterfaceIndex
	}
	return 0
}

type Addr struct {
	Type                  string               `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Ipv4Address           string               `protobuf:"bytes,2,opt,name=ipv4_address,json=ipv4Address,proto3" json:"ipv4_address,omitempty"`
	Ipv4UnnumberedAddress *TeAddrTypeIpv4Unnum `protobuf:"bytes,3,opt,name=ipv4_unnumbered_address,json=ipv4UnnumberedAddress,proto3" json:"ipv4_unnumbered_address,omitempty"`
	XXX_NoUnkeyedLiteral  struct{}             `json:"-"`
	XXX_unrecognized      []byte               `json:"-"`
	XXX_sizecache         int32                `json:"-"`
}

func (m *Addr) Reset()         { *m = Addr{} }
func (m *Addr) String() string { return proto.CompactTextString(m) }
func (*Addr) ProtoMessage()    {}
func (*Addr) Descriptor() ([]byte, []int) {
	return fileDescriptor_97fd10a364dd9ffd, []int{60}
}

func (m *Addr) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Addr.Unmarshal(m, b)
}
func (m *Addr) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Addr.Marshal(b, m, deterministic)
}
func (m *Addr) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Addr.Merge(m, src)
}
func (m *Addr) XXX_Size() int {
	return xxx_messageInfo_Addr.Size(m)
}
func (m *Addr) XXX_DiscardUnknown() {
	xxx_messageInfo_Addr.DiscardUnknown(m)
}

var xxx_messageInfo_Addr proto.InternalMessageInfo

func (m *Addr) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *Addr) GetIpv4Address() string {
	if m != nil {
		return m.Ipv4Address
	}
	return ""
}

func (m *Addr) GetIpv4UnnumberedAddress() *TeAddrTypeIpv4Unnum {
	if m != nil {
		return m.Ipv4UnnumberedAddress
	}
	return nil
}

type TeAddrT_ struct {
	TeAddr               *Addr    `protobuf:"bytes,1,opt,name=te_addr,json=teAddr,proto3" json:"te_addr,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TeAddrT_) Reset()         { *m = TeAddrT_{} }
func (m *TeAddrT_) String() string { return proto.CompactTextString(m) }
func (*TeAddrT_) ProtoMessage()    {}
func (*TeAddrT_) Descriptor() ([]byte, []int) {
	return fileDescriptor_97fd10a364dd9ffd, []int{61}
}

func (m *TeAddrT_) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TeAddrT_.Unmarshal(m, b)
}
func (m *TeAddrT_) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TeAddrT_.Marshal(b, m, deterministic)
}
func (m *TeAddrT_) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TeAddrT_.Merge(m, src)
}
func (m *TeAddrT_) XXX_Size() int {
	return xxx_messageInfo_TeAddrT_.Size(m)
}
func (m *TeAddrT_) XXX_DiscardUnknown() {
	xxx_messageInfo_TeAddrT_.DiscardUnknown(m)
}

var xxx_messageInfo_TeAddrT_ proto.InternalMessageInfo

func (m *TeAddrT_) GetTeAddr() *Addr {
	if m != nil {
		return m.TeAddr
	}
	return nil
}

type TeLspConvergenceInfo struct {
	PathIn               uint64   `protobuf:"varint,1,opt,name=path_in,json=pathIn,proto3" json:"path_in,omitempty"`
	PathOut              uint64   `protobuf:"varint,2,opt,name=path_out,json=pathOut,proto3" json:"path_out,omitempty"`
	ResvIn               uint64   `protobuf:"varint,3,opt,name=resv_in,json=resvIn,proto3" json:"resv_in,omitempty"`
	ResvOut              uint64   `protobuf:"varint,4,opt,name=resv_out,json=resvOut,proto3" json:"resv_out,omitempty"`
	LabelRewrite         uint64   `protobuf:"varint,5,opt,name=label_rewrite,json=labelRewrite,proto3" json:"label_rewrite,omitempty"`
	TunnelRewrite        uint64   `protobuf:"varint,6,opt,name=tunnel_rewrite,json=tunnelRewrite,proto3" json:"tunnel_rewrite,omitempty"`
	CreationTime         uint64   `protobuf:"varint,7,opt,name=creation_time,json=creationTime,proto3" json:"creation_time,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TeLspConvergenceInfo) Reset()         { *m = TeLspConvergenceInfo{} }
func (m *TeLspConvergenceInfo) String() string { return proto.CompactTextString(m) }
func (*TeLspConvergenceInfo) ProtoMessage()    {}
func (*TeLspConvergenceInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_97fd10a364dd9ffd, []int{62}
}

func (m *TeLspConvergenceInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TeLspConvergenceInfo.Unmarshal(m, b)
}
func (m *TeLspConvergenceInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TeLspConvergenceInfo.Marshal(b, m, deterministic)
}
func (m *TeLspConvergenceInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TeLspConvergenceInfo.Merge(m, src)
}
func (m *TeLspConvergenceInfo) XXX_Size() int {
	return xxx_messageInfo_TeLspConvergenceInfo.Size(m)
}
func (m *TeLspConvergenceInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_TeLspConvergenceInfo.DiscardUnknown(m)
}

var xxx_messageInfo_TeLspConvergenceInfo proto.InternalMessageInfo

func (m *TeLspConvergenceInfo) GetPathIn() uint64 {
	if m != nil {
		return m.PathIn
	}
	return 0
}

func (m *TeLspConvergenceInfo) GetPathOut() uint64 {
	if m != nil {
		return m.PathOut
	}
	return 0
}

func (m *TeLspConvergenceInfo) GetResvIn() uint64 {
	if m != nil {
		return m.ResvIn
	}
	return 0
}

func (m *TeLspConvergenceInfo) GetResvOut() uint64 {
	if m != nil {
		return m.ResvOut
	}
	return 0
}

func (m *TeLspConvergenceInfo) GetLabelRewrite() uint64 {
	if m != nil {
		return m.LabelRewrite
	}
	return 0
}

func (m *TeLspConvergenceInfo) GetTunnelRewrite() uint64 {
	if m != nil {
		return m.TunnelRewrite
	}
	return 0
}

func (m *TeLspConvergenceInfo) GetCreationTime() uint64 {
	if m != nil {
		return m.CreationTime
	}
	return 0
}

type MplsTeSoftPreemptionLspInfo struct {
	Status                  string   `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	SoftPreemptionTimestamp uint32   `protobuf:"varint,2,opt,name=soft_preemption_timestamp,json=softPreemptionTimestamp,proto3" json:"soft_preemption_timestamp,omitempty"`
	SoftPreemptionLink      string   `protobuf:"bytes,3,opt,name=soft_preemption_link,json=softPreemptionLink,proto3" json:"soft_preemption_link,omitempty"`
	PreemptingLinkAddress   string   `protobuf:"bytes,4,opt,name=preempting_link_address,json=preemptingLinkAddress,proto3" json:"preempting_link_address,omitempty"`
	TimeToHardPreemption    uint32   `protobuf:"varint,5,opt,name=time_to_hard_preemption,json=timeToHardPreemption,proto3" json:"time_to_hard_preemption,omitempty"`
	FrRrewrite              bool     `protobuf:"varint,6,opt,name=fr_rrewrite,json=frRrewrite,proto3" json:"fr_rrewrite,omitempty"`
	FrRrewriteTunnelName    string   `protobuf:"bytes,7,opt,name=fr_rrewrite_tunnel_name,json=frRrewriteTunnelName,proto3" json:"fr_rrewrite_tunnel_name,omitempty"`
	XXX_NoUnkeyedLiteral    struct{} `json:"-"`
	XXX_unrecognized        []byte   `json:"-"`
	XXX_sizecache           int32    `json:"-"`
}

func (m *MplsTeSoftPreemptionLspInfo) Reset()         { *m = MplsTeSoftPreemptionLspInfo{} }
func (m *MplsTeSoftPreemptionLspInfo) String() string { return proto.CompactTextString(m) }
func (*MplsTeSoftPreemptionLspInfo) ProtoMessage()    {}
func (*MplsTeSoftPreemptionLspInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_97fd10a364dd9ffd, []int{63}
}

func (m *MplsTeSoftPreemptionLspInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsTeSoftPreemptionLspInfo.Unmarshal(m, b)
}
func (m *MplsTeSoftPreemptionLspInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsTeSoftPreemptionLspInfo.Marshal(b, m, deterministic)
}
func (m *MplsTeSoftPreemptionLspInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsTeSoftPreemptionLspInfo.Merge(m, src)
}
func (m *MplsTeSoftPreemptionLspInfo) XXX_Size() int {
	return xxx_messageInfo_MplsTeSoftPreemptionLspInfo.Size(m)
}
func (m *MplsTeSoftPreemptionLspInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsTeSoftPreemptionLspInfo.DiscardUnknown(m)
}

var xxx_messageInfo_MplsTeSoftPreemptionLspInfo proto.InternalMessageInfo

func (m *MplsTeSoftPreemptionLspInfo) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *MplsTeSoftPreemptionLspInfo) GetSoftPreemptionTimestamp() uint32 {
	if m != nil {
		return m.SoftPreemptionTimestamp
	}
	return 0
}

func (m *MplsTeSoftPreemptionLspInfo) GetSoftPreemptionLink() string {
	if m != nil {
		return m.SoftPreemptionLink
	}
	return ""
}

func (m *MplsTeSoftPreemptionLspInfo) GetPreemptingLinkAddress() string {
	if m != nil {
		return m.PreemptingLinkAddress
	}
	return ""
}

func (m *MplsTeSoftPreemptionLspInfo) GetTimeToHardPreemption() uint32 {
	if m != nil {
		return m.TimeToHardPreemption
	}
	return 0
}

func (m *MplsTeSoftPreemptionLspInfo) GetFrRrewrite() bool {
	if m != nil {
		return m.FrRrewrite
	}
	return false
}

func (m *MplsTeSoftPreemptionLspInfo) GetFrRrewriteTunnelName() string {
	if m != nil {
		return m.FrRrewriteTunnelName
	}
	return ""
}

type MplsTeMgmtWdmFixedGridLabel struct {
	LabelSet             bool     `protobuf:"varint,1,opt,name=label_set,json=labelSet,proto3" json:"label_set,omitempty"`
	Grid                 string   `protobuf:"bytes,2,opt,name=grid,proto3" json:"grid,omitempty"`
	ChannelSpacing       string   `protobuf:"bytes,3,opt,name=channel_spacing,json=channelSpacing,proto3" json:"channel_spacing,omitempty"`
	Identifier           uint32   `protobuf:"varint,4,opt,name=identifier,proto3" json:"identifier,omitempty"`
	Channel              string   `protobuf:"bytes,5,opt,name=channel,proto3" json:"channel,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MplsTeMgmtWdmFixedGridLabel) Reset()         { *m = MplsTeMgmtWdmFixedGridLabel{} }
func (m *MplsTeMgmtWdmFixedGridLabel) String() string { return proto.CompactTextString(m) }
func (*MplsTeMgmtWdmFixedGridLabel) ProtoMessage()    {}
func (*MplsTeMgmtWdmFixedGridLabel) Descriptor() ([]byte, []int) {
	return fileDescriptor_97fd10a364dd9ffd, []int{64}
}

func (m *MplsTeMgmtWdmFixedGridLabel) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsTeMgmtWdmFixedGridLabel.Unmarshal(m, b)
}
func (m *MplsTeMgmtWdmFixedGridLabel) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsTeMgmtWdmFixedGridLabel.Marshal(b, m, deterministic)
}
func (m *MplsTeMgmtWdmFixedGridLabel) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsTeMgmtWdmFixedGridLabel.Merge(m, src)
}
func (m *MplsTeMgmtWdmFixedGridLabel) XXX_Size() int {
	return xxx_messageInfo_MplsTeMgmtWdmFixedGridLabel.Size(m)
}
func (m *MplsTeMgmtWdmFixedGridLabel) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsTeMgmtWdmFixedGridLabel.DiscardUnknown(m)
}

var xxx_messageInfo_MplsTeMgmtWdmFixedGridLabel proto.InternalMessageInfo

func (m *MplsTeMgmtWdmFixedGridLabel) GetLabelSet() bool {
	if m != nil {
		return m.LabelSet
	}
	return false
}

func (m *MplsTeMgmtWdmFixedGridLabel) GetGrid() string {
	if m != nil {
		return m.Grid
	}
	return ""
}

func (m *MplsTeMgmtWdmFixedGridLabel) GetChannelSpacing() string {
	if m != nil {
		return m.ChannelSpacing
	}
	return ""
}

func (m *MplsTeMgmtWdmFixedGridLabel) GetIdentifier() uint32 {
	if m != nil {
		return m.Identifier
	}
	return 0
}

func (m *MplsTeMgmtWdmFixedGridLabel) GetChannel() string {
	if m != nil {
		return m.Channel
	}
	return ""
}

type MplsTeMgmtG709OtnFixedSizeLabel struct {
	Tpn                  uint32   `protobuf:"varint,1,opt,name=tpn,proto3" json:"tpn,omitempty"`
	BitMapLength         uint32   `protobuf:"varint,2,opt,name=bit_map_length,json=bitMapLength,proto3" json:"bit_map_length,omitempty"`
	BitMap               []uint32 `protobuf:"varint,3,rep,packed,name=bit_map,json=bitMap,proto3" json:"bit_map,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MplsTeMgmtG709OtnFixedSizeLabel) Reset()         { *m = MplsTeMgmtG709OtnFixedSizeLabel{} }
func (m *MplsTeMgmtG709OtnFixedSizeLabel) String() string { return proto.CompactTextString(m) }
func (*MplsTeMgmtG709OtnFixedSizeLabel) ProtoMessage()    {}
func (*MplsTeMgmtG709OtnFixedSizeLabel) Descriptor() ([]byte, []int) {
	return fileDescriptor_97fd10a364dd9ffd, []int{65}
}

func (m *MplsTeMgmtG709OtnFixedSizeLabel) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsTeMgmtG709OtnFixedSizeLabel.Unmarshal(m, b)
}
func (m *MplsTeMgmtG709OtnFixedSizeLabel) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsTeMgmtG709OtnFixedSizeLabel.Marshal(b, m, deterministic)
}
func (m *MplsTeMgmtG709OtnFixedSizeLabel) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsTeMgmtG709OtnFixedSizeLabel.Merge(m, src)
}
func (m *MplsTeMgmtG709OtnFixedSizeLabel) XXX_Size() int {
	return xxx_messageInfo_MplsTeMgmtG709OtnFixedSizeLabel.Size(m)
}
func (m *MplsTeMgmtG709OtnFixedSizeLabel) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsTeMgmtG709OtnFixedSizeLabel.DiscardUnknown(m)
}

var xxx_messageInfo_MplsTeMgmtG709OtnFixedSizeLabel proto.InternalMessageInfo

func (m *MplsTeMgmtG709OtnFixedSizeLabel) GetTpn() uint32 {
	if m != nil {
		return m.Tpn
	}
	return 0
}

func (m *MplsTeMgmtG709OtnFixedSizeLabel) GetBitMapLength() uint32 {
	if m != nil {
		return m.BitMapLength
	}
	return 0
}

func (m *MplsTeMgmtG709OtnFixedSizeLabel) GetBitMap() []uint32 {
	if m != nil {
		return m.BitMap
	}
	return nil
}

type MplsTeMgmtGmplsLabel struct {
	LabelType            string                           `protobuf:"bytes,1,opt,name=label_type,json=labelType,proto3" json:"label_type,omitempty"`
	Wdm                  *MplsTeMgmtWdmFixedGridLabel     `protobuf:"bytes,2,opt,name=wdm,proto3" json:"wdm,omitempty"`
	Otn                  *MplsTeMgmtG709OtnFixedSizeLabel `protobuf:"bytes,3,opt,name=otn,proto3" json:"otn,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                         `json:"-"`
	XXX_unrecognized     []byte                           `json:"-"`
	XXX_sizecache        int32                            `json:"-"`
}

func (m *MplsTeMgmtGmplsLabel) Reset()         { *m = MplsTeMgmtGmplsLabel{} }
func (m *MplsTeMgmtGmplsLabel) String() string { return proto.CompactTextString(m) }
func (*MplsTeMgmtGmplsLabel) ProtoMessage()    {}
func (*MplsTeMgmtGmplsLabel) Descriptor() ([]byte, []int) {
	return fileDescriptor_97fd10a364dd9ffd, []int{66}
}

func (m *MplsTeMgmtGmplsLabel) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsTeMgmtGmplsLabel.Unmarshal(m, b)
}
func (m *MplsTeMgmtGmplsLabel) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsTeMgmtGmplsLabel.Marshal(b, m, deterministic)
}
func (m *MplsTeMgmtGmplsLabel) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsTeMgmtGmplsLabel.Merge(m, src)
}
func (m *MplsTeMgmtGmplsLabel) XXX_Size() int {
	return xxx_messageInfo_MplsTeMgmtGmplsLabel.Size(m)
}
func (m *MplsTeMgmtGmplsLabel) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsTeMgmtGmplsLabel.DiscardUnknown(m)
}

var xxx_messageInfo_MplsTeMgmtGmplsLabel proto.InternalMessageInfo

func (m *MplsTeMgmtGmplsLabel) GetLabelType() string {
	if m != nil {
		return m.LabelType
	}
	return ""
}

func (m *MplsTeMgmtGmplsLabel) GetWdm() *MplsTeMgmtWdmFixedGridLabel {
	if m != nil {
		return m.Wdm
	}
	return nil
}

func (m *MplsTeMgmtGmplsLabel) GetOtn() *MplsTeMgmtG709OtnFixedSizeLabel {
	if m != nil {
		return m.Otn
	}
	return nil
}

type MplsTeMgmtGmplsLabels struct {
	PathIngressLabel     *MplsTeMgmtGmplsLabel `protobuf:"bytes,1,opt,name=path_ingress_label,json=pathIngressLabel,proto3" json:"path_ingress_label,omitempty"`
	PathEgressLabel      *MplsTeMgmtGmplsLabel `protobuf:"bytes,2,opt,name=path_egress_label,json=pathEgressLabel,proto3" json:"path_egress_label,omitempty"`
	ResvIngressLabel     *MplsTeMgmtGmplsLabel `protobuf:"bytes,3,opt,name=resv_ingress_label,json=resvIngressLabel,proto3" json:"resv_ingress_label,omitempty"`
	ResvEgressLabel      *MplsTeMgmtGmplsLabel `protobuf:"bytes,4,opt,name=resv_egress_label,json=resvEgressLabel,proto3" json:"resv_egress_label,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *MplsTeMgmtGmplsLabels) Reset()         { *m = MplsTeMgmtGmplsLabels{} }
func (m *MplsTeMgmtGmplsLabels) String() string { return proto.CompactTextString(m) }
func (*MplsTeMgmtGmplsLabels) ProtoMessage()    {}
func (*MplsTeMgmtGmplsLabels) Descriptor() ([]byte, []int) {
	return fileDescriptor_97fd10a364dd9ffd, []int{67}
}

func (m *MplsTeMgmtGmplsLabels) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsTeMgmtGmplsLabels.Unmarshal(m, b)
}
func (m *MplsTeMgmtGmplsLabels) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsTeMgmtGmplsLabels.Marshal(b, m, deterministic)
}
func (m *MplsTeMgmtGmplsLabels) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsTeMgmtGmplsLabels.Merge(m, src)
}
func (m *MplsTeMgmtGmplsLabels) XXX_Size() int {
	return xxx_messageInfo_MplsTeMgmtGmplsLabels.Size(m)
}
func (m *MplsTeMgmtGmplsLabels) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsTeMgmtGmplsLabels.DiscardUnknown(m)
}

var xxx_messageInfo_MplsTeMgmtGmplsLabels proto.InternalMessageInfo

func (m *MplsTeMgmtGmplsLabels) GetPathIngressLabel() *MplsTeMgmtGmplsLabel {
	if m != nil {
		return m.PathIngressLabel
	}
	return nil
}

func (m *MplsTeMgmtGmplsLabels) GetPathEgressLabel() *MplsTeMgmtGmplsLabel {
	if m != nil {
		return m.PathEgressLabel
	}
	return nil
}

func (m *MplsTeMgmtGmplsLabels) GetResvIngressLabel() *MplsTeMgmtGmplsLabel {
	if m != nil {
		return m.ResvIngressLabel
	}
	return nil
}

func (m *MplsTeMgmtGmplsLabels) GetResvEgressLabel() *MplsTeMgmtGmplsLabel {
	if m != nil {
		return m.ResvEgressLabel
	}
	return nil
}

type TeOduFlexCbrInfo struct {
	BitRate              uint32   `protobuf:"varint,1,opt,name=bit_rate,json=bitRate,proto3" json:"bit_rate,omitempty"`
	Tolerance            uint32   `protobuf:"varint,2,opt,name=tolerance,proto3" json:"tolerance,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TeOduFlexCbrInfo) Reset()         { *m = TeOduFlexCbrInfo{} }
func (m *TeOduFlexCbrInfo) String() string { return proto.CompactTextString(m) }
func (*TeOduFlexCbrInfo) ProtoMessage()    {}
func (*TeOduFlexCbrInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_97fd10a364dd9ffd, []int{68}
}

func (m *TeOduFlexCbrInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TeOduFlexCbrInfo.Unmarshal(m, b)
}
func (m *TeOduFlexCbrInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TeOduFlexCbrInfo.Marshal(b, m, deterministic)
}
func (m *TeOduFlexCbrInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TeOduFlexCbrInfo.Merge(m, src)
}
func (m *TeOduFlexCbrInfo) XXX_Size() int {
	return xxx_messageInfo_TeOduFlexCbrInfo.Size(m)
}
func (m *TeOduFlexCbrInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_TeOduFlexCbrInfo.DiscardUnknown(m)
}

var xxx_messageInfo_TeOduFlexCbrInfo proto.InternalMessageInfo

func (m *TeOduFlexCbrInfo) GetBitRate() uint32 {
	if m != nil {
		return m.BitRate
	}
	return 0
}

func (m *TeOduFlexCbrInfo) GetTolerance() uint32 {
	if m != nil {
		return m.Tolerance
	}
	return 0
}

type TeOduFlexGfpFResInfo struct {
	BitRate              uint32   `protobuf:"varint,1,opt,name=bit_rate,json=bitRate,proto3" json:"bit_rate,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TeOduFlexGfpFResInfo) Reset()         { *m = TeOduFlexGfpFResInfo{} }
func (m *TeOduFlexGfpFResInfo) String() string { return proto.CompactTextString(m) }
func (*TeOduFlexGfpFResInfo) ProtoMessage()    {}
func (*TeOduFlexGfpFResInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_97fd10a364dd9ffd, []int{69}
}

func (m *TeOduFlexGfpFResInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TeOduFlexGfpFResInfo.Unmarshal(m, b)
}
func (m *TeOduFlexGfpFResInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TeOduFlexGfpFResInfo.Marshal(b, m, deterministic)
}
func (m *TeOduFlexGfpFResInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TeOduFlexGfpFResInfo.Merge(m, src)
}
func (m *TeOduFlexGfpFResInfo) XXX_Size() int {
	return xxx_messageInfo_TeOduFlexGfpFResInfo.Size(m)
}
func (m *TeOduFlexGfpFResInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_TeOduFlexGfpFResInfo.DiscardUnknown(m)
}

var xxx_messageInfo_TeOduFlexGfpFResInfo proto.InternalMessageInfo

func (m *TeOduFlexGfpFResInfo) GetBitRate() uint32 {
	if m != nil {
		return m.BitRate
	}
	return 0
}

type TeOduFlexGfpFNonResInfo struct {
	BitRate              uint32   `protobuf:"varint,1,opt,name=bit_rate,json=bitRate,proto3" json:"bit_rate,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TeOduFlexGfpFNonResInfo) Reset()         { *m = TeOduFlexGfpFNonResInfo{} }
func (m *TeOduFlexGfpFNonResInfo) String() string { return proto.CompactTextString(m) }
func (*TeOduFlexGfpFNonResInfo) ProtoMessage()    {}
func (*TeOduFlexGfpFNonResInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_97fd10a364dd9ffd, []int{70}
}

func (m *TeOduFlexGfpFNonResInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TeOduFlexGfpFNonResInfo.Unmarshal(m, b)
}
func (m *TeOduFlexGfpFNonResInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TeOduFlexGfpFNonResInfo.Marshal(b, m, deterministic)
}
func (m *TeOduFlexGfpFNonResInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TeOduFlexGfpFNonResInfo.Merge(m, src)
}
func (m *TeOduFlexGfpFNonResInfo) XXX_Size() int {
	return xxx_messageInfo_TeOduFlexGfpFNonResInfo.Size(m)
}
func (m *TeOduFlexGfpFNonResInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_TeOduFlexGfpFNonResInfo.DiscardUnknown(m)
}

var xxx_messageInfo_TeOduFlexGfpFNonResInfo proto.InternalMessageInfo

func (m *TeOduFlexGfpFNonResInfo) GetBitRate() uint32 {
	if m != nil {
		return m.BitRate
	}
	return 0
}

type TeOduV3Bw struct {
	OduLevel             string                   `protobuf:"bytes,1,opt,name=odu_level,json=oduLevel,proto3" json:"odu_level,omitempty"`
	OduFlexCbr           *TeOduFlexCbrInfo        `protobuf:"bytes,2,opt,name=odu_flex_cbr,json=oduFlexCbr,proto3" json:"odu_flex_cbr,omitempty"`
	OduFlexGfpFRes       *TeOduFlexGfpFResInfo    `protobuf:"bytes,3,opt,name=odu_flex_gfp_f_res,json=oduFlexGfpFRes,proto3" json:"odu_flex_gfp_f_res,omitempty"`
	OduFlexGfpFNonRes    *TeOduFlexGfpFNonResInfo `protobuf:"bytes,4,opt,name=odu_flex_gfp_f_non_res,json=oduFlexGfpFNonRes,proto3" json:"odu_flex_gfp_f_non_res,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *TeOduV3Bw) Reset()         { *m = TeOduV3Bw{} }
func (m *TeOduV3Bw) String() string { return proto.CompactTextString(m) }
func (*TeOduV3Bw) ProtoMessage()    {}
func (*TeOduV3Bw) Descriptor() ([]byte, []int) {
	return fileDescriptor_97fd10a364dd9ffd, []int{71}
}

func (m *TeOduV3Bw) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TeOduV3Bw.Unmarshal(m, b)
}
func (m *TeOduV3Bw) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TeOduV3Bw.Marshal(b, m, deterministic)
}
func (m *TeOduV3Bw) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TeOduV3Bw.Merge(m, src)
}
func (m *TeOduV3Bw) XXX_Size() int {
	return xxx_messageInfo_TeOduV3Bw.Size(m)
}
func (m *TeOduV3Bw) XXX_DiscardUnknown() {
	xxx_messageInfo_TeOduV3Bw.DiscardUnknown(m)
}

var xxx_messageInfo_TeOduV3Bw proto.InternalMessageInfo

func (m *TeOduV3Bw) GetOduLevel() string {
	if m != nil {
		return m.OduLevel
	}
	return ""
}

func (m *TeOduV3Bw) GetOduFlexCbr() *TeOduFlexCbrInfo {
	if m != nil {
		return m.OduFlexCbr
	}
	return nil
}

func (m *TeOduV3Bw) GetOduFlexGfpFRes() *TeOduFlexGfpFResInfo {
	if m != nil {
		return m.OduFlexGfpFRes
	}
	return nil
}

func (m *TeOduV3Bw) GetOduFlexGfpFNonRes() *TeOduFlexGfpFNonResInfo {
	if m != nil {
		return m.OduFlexGfpFNonRes
	}
	return nil
}

type MplsTeS2LOtnInfo struct {
	IncomingController            string                 `protobuf:"bytes,1,opt,name=incoming_controller,json=incomingController,proto3" json:"incoming_controller,omitempty"`
	IncomingControllerState       string                 `protobuf:"bytes,2,opt,name=incoming_controller_state,json=incomingControllerState,proto3" json:"incoming_controller_state,omitempty"`
	IncomingSubController         string                 `protobuf:"bytes,3,opt,name=incoming_sub_controller,json=incomingSubController,proto3" json:"incoming_sub_controller,omitempty"`
	IncomingSubControllerState    string                 `protobuf:"bytes,4,opt,name=incoming_sub_controller_state,json=incomingSubControllerState,proto3" json:"incoming_sub_controller_state,omitempty"`
	OutgoingController            string                 `protobuf:"bytes,5,opt,name=outgoing_controller,json=outgoingController,proto3" json:"outgoing_controller,omitempty"`
	OutgoingControllerState       string                 `protobuf:"bytes,6,opt,name=outgoing_controller_state,json=outgoingControllerState,proto3" json:"outgoing_controller_state,omitempty"`
	OutgoingSubController         string                 `protobuf:"bytes,7,opt,name=outgoing_sub_controller,json=outgoingSubController,proto3" json:"outgoing_sub_controller,omitempty"`
	OutgoingSubControllerState    string                 `protobuf:"bytes,8,opt,name=outgoing_sub_controller_state,json=outgoingSubControllerState,proto3" json:"outgoing_sub_controller_state,omitempty"`
	Bandwidth                     *TeOduV3Bw             `protobuf:"bytes,9,opt,name=bandwidth,proto3" json:"bandwidth,omitempty"`
	Labels                        *MplsTeMgmtGmplsLabels `protobuf:"bytes,10,opt,name=labels,proto3" json:"labels,omitempty"`
	CrossConnectId                uint32                 `protobuf:"varint,11,opt,name=cross_connect_id,json=crossConnectId,proto3" json:"cross_connect_id,omitempty"`
	IsConnected                   bool                   `protobuf:"varint,12,opt,name=is_connected,json=isConnected,proto3" json:"is_connected,omitempty"`
	Uptime                        uint32                 `protobuf:"varint,13,opt,name=uptime,proto3" json:"uptime,omitempty"`
	OutgoingControllerIfhandle    string                 `protobuf:"bytes,14,opt,name=outgoing_controller_ifhandle,json=outgoingControllerIfhandle,proto3" json:"outgoing_controller_ifhandle,omitempty"`
	OutgoingSubControllerIfhandle string                 `protobuf:"bytes,15,opt,name=outgoing_sub_controller_ifhandle,json=outgoingSubControllerIfhandle,proto3" json:"outgoing_sub_controller_ifhandle,omitempty"`
	IncomingControllerIfhandle    string                 `protobuf:"bytes,16,opt,name=incoming_controller_ifhandle,json=incomingControllerIfhandle,proto3" json:"incoming_controller_ifhandle,omitempty"`
	IncomingSubControllerIfhandle string                 `protobuf:"bytes,17,opt,name=incoming_sub_controller_ifhandle,json=incomingSubControllerIfhandle,proto3" json:"incoming_sub_controller_ifhandle,omitempty"`
	Gpid                          uint32                 `protobuf:"varint,18,opt,name=gpid,proto3" json:"gpid,omitempty"`
	XXX_NoUnkeyedLiteral          struct{}               `json:"-"`
	XXX_unrecognized              []byte                 `json:"-"`
	XXX_sizecache                 int32                  `json:"-"`
}

func (m *MplsTeS2LOtnInfo) Reset()         { *m = MplsTeS2LOtnInfo{} }
func (m *MplsTeS2LOtnInfo) String() string { return proto.CompactTextString(m) }
func (*MplsTeS2LOtnInfo) ProtoMessage()    {}
func (*MplsTeS2LOtnInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_97fd10a364dd9ffd, []int{72}
}

func (m *MplsTeS2LOtnInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsTeS2LOtnInfo.Unmarshal(m, b)
}
func (m *MplsTeS2LOtnInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsTeS2LOtnInfo.Marshal(b, m, deterministic)
}
func (m *MplsTeS2LOtnInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsTeS2LOtnInfo.Merge(m, src)
}
func (m *MplsTeS2LOtnInfo) XXX_Size() int {
	return xxx_messageInfo_MplsTeS2LOtnInfo.Size(m)
}
func (m *MplsTeS2LOtnInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsTeS2LOtnInfo.DiscardUnknown(m)
}

var xxx_messageInfo_MplsTeS2LOtnInfo proto.InternalMessageInfo

func (m *MplsTeS2LOtnInfo) GetIncomingController() string {
	if m != nil {
		return m.IncomingController
	}
	return ""
}

func (m *MplsTeS2LOtnInfo) GetIncomingControllerState() string {
	if m != nil {
		return m.IncomingControllerState
	}
	return ""
}

func (m *MplsTeS2LOtnInfo) GetIncomingSubController() string {
	if m != nil {
		return m.IncomingSubController
	}
	return ""
}

func (m *MplsTeS2LOtnInfo) GetIncomingSubControllerState() string {
	if m != nil {
		return m.IncomingSubControllerState
	}
	return ""
}

func (m *MplsTeS2LOtnInfo) GetOutgoingController() string {
	if m != nil {
		return m.OutgoingController
	}
	return ""
}

func (m *MplsTeS2LOtnInfo) GetOutgoingControllerState() string {
	if m != nil {
		return m.OutgoingControllerState
	}
	return ""
}

func (m *MplsTeS2LOtnInfo) GetOutgoingSubController() string {
	if m != nil {
		return m.OutgoingSubController
	}
	return ""
}

func (m *MplsTeS2LOtnInfo) GetOutgoingSubControllerState() string {
	if m != nil {
		return m.OutgoingSubControllerState
	}
	return ""
}

func (m *MplsTeS2LOtnInfo) GetBandwidth() *TeOduV3Bw {
	if m != nil {
		return m.Bandwidth
	}
	return nil
}

func (m *MplsTeS2LOtnInfo) GetLabels() *MplsTeMgmtGmplsLabels {
	if m != nil {
		return m.Labels
	}
	return nil
}

func (m *MplsTeS2LOtnInfo) GetCrossConnectId() uint32 {
	if m != nil {
		return m.CrossConnectId
	}
	return 0
}

func (m *MplsTeS2LOtnInfo) GetIsConnected() bool {
	if m != nil {
		return m.IsConnected
	}
	return false
}

func (m *MplsTeS2LOtnInfo) GetUptime() uint32 {
	if m != nil {
		return m.Uptime
	}
	return 0
}

func (m *MplsTeS2LOtnInfo) GetOutgoingControllerIfhandle() string {
	if m != nil {
		return m.OutgoingControllerIfhandle
	}
	return ""
}

func (m *MplsTeS2LOtnInfo) GetOutgoingSubControllerIfhandle() string {
	if m != nil {
		return m.OutgoingSubControllerIfhandle
	}
	return ""
}

func (m *MplsTeS2LOtnInfo) GetIncomingControllerIfhandle() string {
	if m != nil {
		return m.IncomingControllerIfhandle
	}
	return ""
}

func (m *MplsTeS2LOtnInfo) GetIncomingSubControllerIfhandle() string {
	if m != nil {
		return m.IncomingSubControllerIfhandle
	}
	return ""
}

func (m *MplsTeS2LOtnInfo) GetGpid() uint32 {
	if m != nil {
		return m.Gpid
	}
	return 0
}

type TePvtProtObjT struct {
	Sbit                 bool     `protobuf:"varint,1,opt,name=sbit,proto3" json:"sbit,omitempty"`
	Pbit                 bool     `protobuf:"varint,2,opt,name=pbit,proto3" json:"pbit,omitempty"`
	Nbit                 bool     `protobuf:"varint,3,opt,name=nbit,proto3" json:"nbit,omitempty"`
	Obit                 bool     `protobuf:"varint,4,opt,name=obit,proto3" json:"obit,omitempty"`
	ProtectType          string   `protobuf:"bytes,5,opt,name=protect_type,json=protectType,proto3" json:"protect_type,omitempty"`
	IsWtrPresent         bool     `protobuf:"varint,6,opt,name=is_wtr_present,json=isWtrPresent,proto3" json:"is_wtr_present,omitempty"`
	WtrTimeout           uint32   `protobuf:"varint,7,opt,name=wtr_timeout,json=wtrTimeout,proto3" json:"wtr_timeout,omitempty"`
	IsHopresent          bool     `protobuf:"varint,8,opt,name=is_hopresent,json=isHopresent,proto3" json:"is_hopresent,omitempty"`
	HoTimeout            uint32   `protobuf:"varint,9,opt,name=ho_timeout,json=hoTimeout,proto3" json:"ho_timeout,omitempty"`
	IsSncModePresent     bool     `protobuf:"varint,10,opt,name=is_snc_mode_present,json=isSncModePresent,proto3" json:"is_snc_mode_present,omitempty"`
	SncMode              string   `protobuf:"bytes,11,opt,name=snc_mode,json=sncMode,proto3" json:"snc_mode,omitempty"`
	TcmId                uint32   `protobuf:"varint,12,opt,name=tcm_id,json=tcmId,proto3" json:"tcm_id,omitempty"`
	PathProtProfileType  string   `protobuf:"bytes,13,opt,name=path_prot_profile_type,json=pathProtProfileType,proto3" json:"path_prot_profile_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TePvtProtObjT) Reset()         { *m = TePvtProtObjT{} }
func (m *TePvtProtObjT) String() string { return proto.CompactTextString(m) }
func (*TePvtProtObjT) ProtoMessage()    {}
func (*TePvtProtObjT) Descriptor() ([]byte, []int) {
	return fileDescriptor_97fd10a364dd9ffd, []int{73}
}

func (m *TePvtProtObjT) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TePvtProtObjT.Unmarshal(m, b)
}
func (m *TePvtProtObjT) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TePvtProtObjT.Marshal(b, m, deterministic)
}
func (m *TePvtProtObjT) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TePvtProtObjT.Merge(m, src)
}
func (m *TePvtProtObjT) XXX_Size() int {
	return xxx_messageInfo_TePvtProtObjT.Size(m)
}
func (m *TePvtProtObjT) XXX_DiscardUnknown() {
	xxx_messageInfo_TePvtProtObjT.DiscardUnknown(m)
}

var xxx_messageInfo_TePvtProtObjT proto.InternalMessageInfo

func (m *TePvtProtObjT) GetSbit() bool {
	if m != nil {
		return m.Sbit
	}
	return false
}

func (m *TePvtProtObjT) GetPbit() bool {
	if m != nil {
		return m.Pbit
	}
	return false
}

func (m *TePvtProtObjT) GetNbit() bool {
	if m != nil {
		return m.Nbit
	}
	return false
}

func (m *TePvtProtObjT) GetObit() bool {
	if m != nil {
		return m.Obit
	}
	return false
}

func (m *TePvtProtObjT) GetProtectType() string {
	if m != nil {
		return m.ProtectType
	}
	return ""
}

func (m *TePvtProtObjT) GetIsWtrPresent() bool {
	if m != nil {
		return m.IsWtrPresent
	}
	return false
}

func (m *TePvtProtObjT) GetWtrTimeout() uint32 {
	if m != nil {
		return m.WtrTimeout
	}
	return 0
}

func (m *TePvtProtObjT) GetIsHopresent() bool {
	if m != nil {
		return m.IsHopresent
	}
	return false
}

func (m *TePvtProtObjT) GetHoTimeout() uint32 {
	if m != nil {
		return m.HoTimeout
	}
	return 0
}

func (m *TePvtProtObjT) GetIsSncModePresent() bool {
	if m != nil {
		return m.IsSncModePresent
	}
	return false
}

func (m *TePvtProtObjT) GetSncMode() string {
	if m != nil {
		return m.SncMode
	}
	return ""
}

func (m *TePvtProtObjT) GetTcmId() uint32 {
	if m != nil {
		return m.TcmId
	}
	return 0
}

func (m *TePvtProtObjT) GetPathProtProfileType() string {
	if m != nil {
		return m.PathProtProfileType
	}
	return ""
}

type MplsTeS2LApsInfo struct {
	ProtectionInfo       *TePvtProtObjT `protobuf:"bytes,1,opt,name=protection_info,json=protectionInfo,proto3" json:"protection_info,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *MplsTeS2LApsInfo) Reset()         { *m = MplsTeS2LApsInfo{} }
func (m *MplsTeS2LApsInfo) String() string { return proto.CompactTextString(m) }
func (*MplsTeS2LApsInfo) ProtoMessage()    {}
func (*MplsTeS2LApsInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_97fd10a364dd9ffd, []int{74}
}

func (m *MplsTeS2LApsInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsTeS2LApsInfo.Unmarshal(m, b)
}
func (m *MplsTeS2LApsInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsTeS2LApsInfo.Marshal(b, m, deterministic)
}
func (m *MplsTeS2LApsInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsTeS2LApsInfo.Merge(m, src)
}
func (m *MplsTeS2LApsInfo) XXX_Size() int {
	return xxx_messageInfo_MplsTeS2LApsInfo.Size(m)
}
func (m *MplsTeS2LApsInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsTeS2LApsInfo.DiscardUnknown(m)
}

var xxx_messageInfo_MplsTeS2LApsInfo proto.InternalMessageInfo

func (m *MplsTeS2LApsInfo) GetProtectionInfo() *TePvtProtObjT {
	if m != nil {
		return m.ProtectionInfo
	}
	return nil
}

type MplsTeOtnS2LInfo struct {
	Otn                  *MplsTeS2LOtnInfo `protobuf:"bytes,1,opt,name=otn,proto3" json:"otn,omitempty"`
	Aps                  *MplsTeS2LApsInfo `protobuf:"bytes,2,opt,name=aps,proto3" json:"aps,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *MplsTeOtnS2LInfo) Reset()         { *m = MplsTeOtnS2LInfo{} }
func (m *MplsTeOtnS2LInfo) String() string { return proto.CompactTextString(m) }
func (*MplsTeOtnS2LInfo) ProtoMessage()    {}
func (*MplsTeOtnS2LInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_97fd10a364dd9ffd, []int{75}
}

func (m *MplsTeOtnS2LInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsTeOtnS2LInfo.Unmarshal(m, b)
}
func (m *MplsTeOtnS2LInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsTeOtnS2LInfo.Marshal(b, m, deterministic)
}
func (m *MplsTeOtnS2LInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsTeOtnS2LInfo.Merge(m, src)
}
func (m *MplsTeOtnS2LInfo) XXX_Size() int {
	return xxx_messageInfo_MplsTeOtnS2LInfo.Size(m)
}
func (m *MplsTeOtnS2LInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsTeOtnS2LInfo.DiscardUnknown(m)
}

var xxx_messageInfo_MplsTeOtnS2LInfo proto.InternalMessageInfo

func (m *MplsTeOtnS2LInfo) GetOtn() *MplsTeS2LOtnInfo {
	if m != nil {
		return m.Otn
	}
	return nil
}

func (m *MplsTeOtnS2LInfo) GetAps() *MplsTeS2LApsInfo {
	if m != nil {
		return m.Aps
	}
	return nil
}

type MplsTeBfdSessionInfo struct {
	State                string   `protobuf:"bytes,1,opt,name=state,proto3" json:"state,omitempty"`
	StateChangeTime      uint32   `protobuf:"varint,2,opt,name=state_change_time,json=stateChangeTime,proto3" json:"state_change_time,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MplsTeBfdSessionInfo) Reset()         { *m = MplsTeBfdSessionInfo{} }
func (m *MplsTeBfdSessionInfo) String() string { return proto.CompactTextString(m) }
func (*MplsTeBfdSessionInfo) ProtoMessage()    {}
func (*MplsTeBfdSessionInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_97fd10a364dd9ffd, []int{76}
}

func (m *MplsTeBfdSessionInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsTeBfdSessionInfo.Unmarshal(m, b)
}
func (m *MplsTeBfdSessionInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsTeBfdSessionInfo.Marshal(b, m, deterministic)
}
func (m *MplsTeBfdSessionInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsTeBfdSessionInfo.Merge(m, src)
}
func (m *MplsTeBfdSessionInfo) XXX_Size() int {
	return xxx_messageInfo_MplsTeBfdSessionInfo.Size(m)
}
func (m *MplsTeBfdSessionInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsTeBfdSessionInfo.DiscardUnknown(m)
}

var xxx_messageInfo_MplsTeBfdSessionInfo proto.InternalMessageInfo

func (m *MplsTeBfdSessionInfo) GetState() string {
	if m != nil {
		return m.State
	}
	return ""
}

func (m *MplsTeBfdSessionInfo) GetStateChangeTime() uint32 {
	if m != nil {
		return m.StateChangeTime
	}
	return 0
}

type MplsTeBfdDeletionHistory struct {
	LspId                  uint32   `protobuf:"varint,1,opt,name=lsp_id,json=lspId,proto3" json:"lsp_id,omitempty"`
	DeletionTime           uint32   `protobuf:"varint,2,opt,name=deletion_time,json=deletionTime,proto3" json:"deletion_time,omitempty"`
	DeletionReason         string   `protobuf:"bytes,3,opt,name=deletion_reason,json=deletionReason,proto3" json:"deletion_reason,omitempty"`
	DeletionDiagnosticCode uint32   `protobuf:"varint,4,opt,name=deletion_diagnostic_code,json=deletionDiagnosticCode,proto3" json:"deletion_diagnostic_code,omitempty"`
	XXX_NoUnkeyedLiteral   struct{} `json:"-"`
	XXX_unrecognized       []byte   `json:"-"`
	XXX_sizecache          int32    `json:"-"`
}

func (m *MplsTeBfdDeletionHistory) Reset()         { *m = MplsTeBfdDeletionHistory{} }
func (m *MplsTeBfdDeletionHistory) String() string { return proto.CompactTextString(m) }
func (*MplsTeBfdDeletionHistory) ProtoMessage()    {}
func (*MplsTeBfdDeletionHistory) Descriptor() ([]byte, []int) {
	return fileDescriptor_97fd10a364dd9ffd, []int{77}
}

func (m *MplsTeBfdDeletionHistory) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsTeBfdDeletionHistory.Unmarshal(m, b)
}
func (m *MplsTeBfdDeletionHistory) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsTeBfdDeletionHistory.Marshal(b, m, deterministic)
}
func (m *MplsTeBfdDeletionHistory) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsTeBfdDeletionHistory.Merge(m, src)
}
func (m *MplsTeBfdDeletionHistory) XXX_Size() int {
	return xxx_messageInfo_MplsTeBfdDeletionHistory.Size(m)
}
func (m *MplsTeBfdDeletionHistory) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsTeBfdDeletionHistory.DiscardUnknown(m)
}

var xxx_messageInfo_MplsTeBfdDeletionHistory proto.InternalMessageInfo

func (m *MplsTeBfdDeletionHistory) GetLspId() uint32 {
	if m != nil {
		return m.LspId
	}
	return 0
}

func (m *MplsTeBfdDeletionHistory) GetDeletionTime() uint32 {
	if m != nil {
		return m.DeletionTime
	}
	return 0
}

func (m *MplsTeBfdDeletionHistory) GetDeletionReason() string {
	if m != nil {
		return m.DeletionReason
	}
	return ""
}

func (m *MplsTeBfdDeletionHistory) GetDeletionDiagnosticCode() uint32 {
	if m != nil {
		return m.DeletionDiagnosticCode
	}
	return 0
}

type MplsTeHeadBfdInfo struct {
	CreationTime         uint32                    `protobuf:"varint,1,opt,name=creation_time,json=creationTime,proto3" json:"creation_time,omitempty"`
	SessionInfo          *MplsTeBfdSessionInfo     `protobuf:"bytes,2,opt,name=session_info,json=sessionInfo,proto3" json:"session_info,omitempty"`
	DeletionHistory      *MplsTeBfdDeletionHistory `protobuf:"bytes,3,opt,name=deletion_history,json=deletionHistory,proto3" json:"deletion_history,omitempty"`
	LspbfdType           string                    `protobuf:"bytes,4,opt,name=lspbfd_type,json=lspbfdType,proto3" json:"lspbfd_type,omitempty"`
	IsRedundant          bool                      `protobuf:"varint,5,opt,name=is_redundant,json=isRedundant,proto3" json:"is_redundant,omitempty"`
	BfdReversePathLabel  []uint32                  `protobuf:"varint,6,rep,packed,name=bfd_reverse_path_label,json=bfdReversePathLabel,proto3" json:"bfd_reverse_path_label,omitempty"`
	BfdReversePathStale  bool                      `protobuf:"varint,7,opt,name=bfd_reverse_path_stale,json=bfdReversePathStale,proto3" json:"bfd_reverse_path_stale,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *MplsTeHeadBfdInfo) Reset()         { *m = MplsTeHeadBfdInfo{} }
func (m *MplsTeHeadBfdInfo) String() string { return proto.CompactTextString(m) }
func (*MplsTeHeadBfdInfo) ProtoMessage()    {}
func (*MplsTeHeadBfdInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_97fd10a364dd9ffd, []int{78}
}

func (m *MplsTeHeadBfdInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsTeHeadBfdInfo.Unmarshal(m, b)
}
func (m *MplsTeHeadBfdInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsTeHeadBfdInfo.Marshal(b, m, deterministic)
}
func (m *MplsTeHeadBfdInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsTeHeadBfdInfo.Merge(m, src)
}
func (m *MplsTeHeadBfdInfo) XXX_Size() int {
	return xxx_messageInfo_MplsTeHeadBfdInfo.Size(m)
}
func (m *MplsTeHeadBfdInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsTeHeadBfdInfo.DiscardUnknown(m)
}

var xxx_messageInfo_MplsTeHeadBfdInfo proto.InternalMessageInfo

func (m *MplsTeHeadBfdInfo) GetCreationTime() uint32 {
	if m != nil {
		return m.CreationTime
	}
	return 0
}

func (m *MplsTeHeadBfdInfo) GetSessionInfo() *MplsTeBfdSessionInfo {
	if m != nil {
		return m.SessionInfo
	}
	return nil
}

func (m *MplsTeHeadBfdInfo) GetDeletionHistory() *MplsTeBfdDeletionHistory {
	if m != nil {
		return m.DeletionHistory
	}
	return nil
}

func (m *MplsTeHeadBfdInfo) GetLspbfdType() string {
	if m != nil {
		return m.LspbfdType
	}
	return ""
}

func (m *MplsTeHeadBfdInfo) GetIsRedundant() bool {
	if m != nil {
		return m.IsRedundant
	}
	return false
}

func (m *MplsTeHeadBfdInfo) GetBfdReversePathLabel() []uint32 {
	if m != nil {
		return m.BfdReversePathLabel
	}
	return nil
}

func (m *MplsTeHeadBfdInfo) GetBfdReversePathStale() bool {
	if m != nil {
		return m.BfdReversePathStale
	}
	return false
}

type MplsTeTailBfdInfo struct {
	SessionInfo           *MplsTeBfdSessionInfo `protobuf:"bytes,1,opt,name=session_info,json=sessionInfo,proto3" json:"session_info,omitempty"`
	FailureDiagnosticCode uint32                `protobuf:"varint,2,opt,name=failure_diagnostic_code,json=failureDiagnosticCode,proto3" json:"failure_diagnostic_code,omitempty"`
	FailureReason         string                `protobuf:"bytes,3,opt,name=failure_reason,json=failureReason,proto3" json:"failure_reason,omitempty"`
	LocalDiscriminator    uint32                `protobuf:"varint,4,opt,name=local_discriminator,json=localDiscriminator,proto3" json:"local_discriminator,omitempty"`
	RemoteDiscriminator   uint32                `protobuf:"varint,5,opt,name=remote_discriminator,json=remoteDiscriminator,proto3" json:"remote_discriminator,omitempty"`
	MinInterval           uint32                `protobuf:"varint,6,opt,name=min_interval,json=minInterval,proto3" json:"min_interval,omitempty"`
	MinIntervalDefault    bool                  `protobuf:"varint,7,opt,name=min_interval_default,json=minIntervalDefault,proto3" json:"min_interval_default,omitempty"`
	Multiplier            uint32                `protobuf:"varint,8,opt,name=multiplier,proto3" json:"multiplier,omitempty"`
	MultiplierDefault     bool                  `protobuf:"varint,9,opt,name=multiplier_default,json=multiplierDefault,proto3" json:"multiplier_default,omitempty"`
	XXX_NoUnkeyedLiteral  struct{}              `json:"-"`
	XXX_unrecognized      []byte                `json:"-"`
	XXX_sizecache         int32                 `json:"-"`
}

func (m *MplsTeTailBfdInfo) Reset()         { *m = MplsTeTailBfdInfo{} }
func (m *MplsTeTailBfdInfo) String() string { return proto.CompactTextString(m) }
func (*MplsTeTailBfdInfo) ProtoMessage()    {}
func (*MplsTeTailBfdInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_97fd10a364dd9ffd, []int{79}
}

func (m *MplsTeTailBfdInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsTeTailBfdInfo.Unmarshal(m, b)
}
func (m *MplsTeTailBfdInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsTeTailBfdInfo.Marshal(b, m, deterministic)
}
func (m *MplsTeTailBfdInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsTeTailBfdInfo.Merge(m, src)
}
func (m *MplsTeTailBfdInfo) XXX_Size() int {
	return xxx_messageInfo_MplsTeTailBfdInfo.Size(m)
}
func (m *MplsTeTailBfdInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsTeTailBfdInfo.DiscardUnknown(m)
}

var xxx_messageInfo_MplsTeTailBfdInfo proto.InternalMessageInfo

func (m *MplsTeTailBfdInfo) GetSessionInfo() *MplsTeBfdSessionInfo {
	if m != nil {
		return m.SessionInfo
	}
	return nil
}

func (m *MplsTeTailBfdInfo) GetFailureDiagnosticCode() uint32 {
	if m != nil {
		return m.FailureDiagnosticCode
	}
	return 0
}

func (m *MplsTeTailBfdInfo) GetFailureReason() string {
	if m != nil {
		return m.FailureReason
	}
	return ""
}

func (m *MplsTeTailBfdInfo) GetLocalDiscriminator() uint32 {
	if m != nil {
		return m.LocalDiscriminator
	}
	return 0
}

func (m *MplsTeTailBfdInfo) GetRemoteDiscriminator() uint32 {
	if m != nil {
		return m.RemoteDiscriminator
	}
	return 0
}

func (m *MplsTeTailBfdInfo) GetMinInterval() uint32 {
	if m != nil {
		return m.MinInterval
	}
	return 0
}

func (m *MplsTeTailBfdInfo) GetMinIntervalDefault() bool {
	if m != nil {
		return m.MinIntervalDefault
	}
	return false
}

func (m *MplsTeTailBfdInfo) GetMultiplier() uint32 {
	if m != nil {
		return m.Multiplier
	}
	return 0
}

func (m *MplsTeTailBfdInfo) GetMultiplierDefault() bool {
	if m != nil {
		return m.MultiplierDefault
	}
	return false
}

type TeS2LSrlgCollectInfo struct {
	SrlgCollectType      string   `protobuf:"bytes,1,opt,name=srlg_collect_type,json=srlgCollectType,proto3" json:"srlg_collect_type,omitempty"`
	DiscoveredSrlg       []uint32 `protobuf:"varint,2,rep,packed,name=discovered_srlg,json=discoveredSrlg,proto3" json:"discovered_srlg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TeS2LSrlgCollectInfo) Reset()         { *m = TeS2LSrlgCollectInfo{} }
func (m *TeS2LSrlgCollectInfo) String() string { return proto.CompactTextString(m) }
func (*TeS2LSrlgCollectInfo) ProtoMessage()    {}
func (*TeS2LSrlgCollectInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_97fd10a364dd9ffd, []int{80}
}

func (m *TeS2LSrlgCollectInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TeS2LSrlgCollectInfo.Unmarshal(m, b)
}
func (m *TeS2LSrlgCollectInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TeS2LSrlgCollectInfo.Marshal(b, m, deterministic)
}
func (m *TeS2LSrlgCollectInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TeS2LSrlgCollectInfo.Merge(m, src)
}
func (m *TeS2LSrlgCollectInfo) XXX_Size() int {
	return xxx_messageInfo_TeS2LSrlgCollectInfo.Size(m)
}
func (m *TeS2LSrlgCollectInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_TeS2LSrlgCollectInfo.DiscardUnknown(m)
}

var xxx_messageInfo_TeS2LSrlgCollectInfo proto.InternalMessageInfo

func (m *TeS2LSrlgCollectInfo) GetSrlgCollectType() string {
	if m != nil {
		return m.SrlgCollectType
	}
	return ""
}

func (m *TeS2LSrlgCollectInfo) GetDiscoveredSrlg() []uint32 {
	if m != nil {
		return m.DiscoveredSrlg
	}
	return nil
}

type MplsTeS2LAssociationObject struct {
	S2LAssociationType    uint32   `protobuf:"varint,1,opt,name=s2l_association_type,json=s2lAssociationType,proto3" json:"s2l_association_type,omitempty"`
	S2LAssociationTieRole string   `protobuf:"bytes,2,opt,name=s2l_association_tie_role,json=s2lAssociationTieRole,proto3" json:"s2l_association_tie_role,omitempty"`
	S2LAssociationId      uint32   `protobuf:"varint,3,opt,name=s2l_association_id,json=s2lAssociationId,proto3" json:"s2l_association_id,omitempty"`
	S2LAssociationSource  string   `protobuf:"bytes,4,opt,name=s2l_association_source,json=s2lAssociationSource,proto3" json:"s2l_association_source,omitempty"`
	S2LGlobalSource       uint32   `protobuf:"varint,5,opt,name=s2l_global_source,json=s2lGlobalSource,proto3" json:"s2l_global_source,omitempty"`
	S2LExtendedId         []uint32 `protobuf:"varint,6,rep,packed,name=s2l_extended_id,json=s2lExtendedId,proto3" json:"s2l_extended_id,omitempty"`
	XXX_NoUnkeyedLiteral  struct{} `json:"-"`
	XXX_unrecognized      []byte   `json:"-"`
	XXX_sizecache         int32    `json:"-"`
}

func (m *MplsTeS2LAssociationObject) Reset()         { *m = MplsTeS2LAssociationObject{} }
func (m *MplsTeS2LAssociationObject) String() string { return proto.CompactTextString(m) }
func (*MplsTeS2LAssociationObject) ProtoMessage()    {}
func (*MplsTeS2LAssociationObject) Descriptor() ([]byte, []int) {
	return fileDescriptor_97fd10a364dd9ffd, []int{81}
}

func (m *MplsTeS2LAssociationObject) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsTeS2LAssociationObject.Unmarshal(m, b)
}
func (m *MplsTeS2LAssociationObject) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsTeS2LAssociationObject.Marshal(b, m, deterministic)
}
func (m *MplsTeS2LAssociationObject) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsTeS2LAssociationObject.Merge(m, src)
}
func (m *MplsTeS2LAssociationObject) XXX_Size() int {
	return xxx_messageInfo_MplsTeS2LAssociationObject.Size(m)
}
func (m *MplsTeS2LAssociationObject) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsTeS2LAssociationObject.DiscardUnknown(m)
}

var xxx_messageInfo_MplsTeS2LAssociationObject proto.InternalMessageInfo

func (m *MplsTeS2LAssociationObject) GetS2LAssociationType() uint32 {
	if m != nil {
		return m.S2LAssociationType
	}
	return 0
}

func (m *MplsTeS2LAssociationObject) GetS2LAssociationTieRole() string {
	if m != nil {
		return m.S2LAssociationTieRole
	}
	return ""
}

func (m *MplsTeS2LAssociationObject) GetS2LAssociationId() uint32 {
	if m != nil {
		return m.S2LAssociationId
	}
	return 0
}

func (m *MplsTeS2LAssociationObject) GetS2LAssociationSource() string {
	if m != nil {
		return m.S2LAssociationSource
	}
	return ""
}

func (m *MplsTeS2LAssociationObject) GetS2LGlobalSource() uint32 {
	if m != nil {
		return m.S2LGlobalSource
	}
	return 0
}

func (m *MplsTeS2LAssociationObject) GetS2LExtendedId() []uint32 {
	if m != nil {
		return m.S2LExtendedId
	}
	return nil
}

type MplsTeS2LProtectionObject struct {
	S2LSecondary         bool     `protobuf:"varint,1,opt,name=s2l_secondary,json=s2lSecondary,proto3" json:"s2l_secondary,omitempty"`
	S2LProtecting        bool     `protobuf:"varint,2,opt,name=s2l_protecting,json=s2lProtecting,proto3" json:"s2l_protecting,omitempty"`
	S2LNotification      bool     `protobuf:"varint,3,opt,name=s2l_notification,json=s2lNotification,proto3" json:"s2l_notification,omitempty"`
	S2LOperational       bool     `protobuf:"varint,4,opt,name=s2l_operational,json=s2lOperational,proto3" json:"s2l_operational,omitempty"`
	Enhanced             bool     `protobuf:"varint,5,opt,name=enhanced,proto3" json:"enhanced,omitempty"`
	Ded1Plus1            bool     `protobuf:"varint,6,opt,name=ded1_plus1,json=ded1Plus1,proto3" json:"ded1_plus1,omitempty"`
	Ded1To1              bool     `protobuf:"varint,7,opt,name=ded1_to1,json=ded1To1,proto3" json:"ded1_to1,omitempty"`
	Shared               bool     `protobuf:"varint,8,opt,name=shared,proto3" json:"shared,omitempty"`
	LinkUnprotected      bool     `protobuf:"varint,9,opt,name=link_unprotected,json=linkUnprotected,proto3" json:"link_unprotected,omitempty"`
	ExtraTraffic         bool     `protobuf:"varint,10,opt,name=extra_traffic,json=extraTraffic,proto3" json:"extra_traffic,omitempty"`
	Any                  bool     `protobuf:"varint,11,opt,name=any,proto3" json:"any,omitempty"`
	Rerouting            bool     `protobuf:"varint,12,opt,name=rerouting,proto3" json:"rerouting,omitempty"`
	ReroutingNoEt        bool     `protobuf:"varint,13,opt,name=rerouting_no_et,json=reroutingNoEt,proto3" json:"rerouting_no_et,omitempty"`
	OneToNProtectionEt   bool     `protobuf:"varint,14,opt,name=one_to_n_protection_et,json=oneToNProtectionEt,proto3" json:"one_to_n_protection_et,omitempty"`
	OnePlusOneUni        bool     `protobuf:"varint,15,opt,name=one_plus_one_uni,json=onePlusOneUni,proto3" json:"one_plus_one_uni,omitempty"`
	OnePlusOneBi         bool     `protobuf:"varint,16,opt,name=one_plus_one_bi,json=onePlusOneBi,proto3" json:"one_plus_one_bi,omitempty"`
	LspUnprotected       bool     `protobuf:"varint,17,opt,name=lsp_unprotected,json=lspUnprotected,proto3" json:"lsp_unprotected,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MplsTeS2LProtectionObject) Reset()         { *m = MplsTeS2LProtectionObject{} }
func (m *MplsTeS2LProtectionObject) String() string { return proto.CompactTextString(m) }
func (*MplsTeS2LProtectionObject) ProtoMessage()    {}
func (*MplsTeS2LProtectionObject) Descriptor() ([]byte, []int) {
	return fileDescriptor_97fd10a364dd9ffd, []int{82}
}

func (m *MplsTeS2LProtectionObject) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsTeS2LProtectionObject.Unmarshal(m, b)
}
func (m *MplsTeS2LProtectionObject) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsTeS2LProtectionObject.Marshal(b, m, deterministic)
}
func (m *MplsTeS2LProtectionObject) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsTeS2LProtectionObject.Merge(m, src)
}
func (m *MplsTeS2LProtectionObject) XXX_Size() int {
	return xxx_messageInfo_MplsTeS2LProtectionObject.Size(m)
}
func (m *MplsTeS2LProtectionObject) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsTeS2LProtectionObject.DiscardUnknown(m)
}

var xxx_messageInfo_MplsTeS2LProtectionObject proto.InternalMessageInfo

func (m *MplsTeS2LProtectionObject) GetS2LSecondary() bool {
	if m != nil {
		return m.S2LSecondary
	}
	return false
}

func (m *MplsTeS2LProtectionObject) GetS2LProtecting() bool {
	if m != nil {
		return m.S2LProtecting
	}
	return false
}

func (m *MplsTeS2LProtectionObject) GetS2LNotification() bool {
	if m != nil {
		return m.S2LNotification
	}
	return false
}

func (m *MplsTeS2LProtectionObject) GetS2LOperational() bool {
	if m != nil {
		return m.S2LOperational
	}
	return false
}

func (m *MplsTeS2LProtectionObject) GetEnhanced() bool {
	if m != nil {
		return m.Enhanced
	}
	return false
}

func (m *MplsTeS2LProtectionObject) GetDed1Plus1() bool {
	if m != nil {
		return m.Ded1Plus1
	}
	return false
}

func (m *MplsTeS2LProtectionObject) GetDed1To1() bool {
	if m != nil {
		return m.Ded1To1
	}
	return false
}

func (m *MplsTeS2LProtectionObject) GetShared() bool {
	if m != nil {
		return m.Shared
	}
	return false
}

func (m *MplsTeS2LProtectionObject) GetLinkUnprotected() bool {
	if m != nil {
		return m.LinkUnprotected
	}
	return false
}

func (m *MplsTeS2LProtectionObject) GetExtraTraffic() bool {
	if m != nil {
		return m.ExtraTraffic
	}
	return false
}

func (m *MplsTeS2LProtectionObject) GetAny() bool {
	if m != nil {
		return m.Any
	}
	return false
}

func (m *MplsTeS2LProtectionObject) GetRerouting() bool {
	if m != nil {
		return m.Rerouting
	}
	return false
}

func (m *MplsTeS2LProtectionObject) GetReroutingNoEt() bool {
	if m != nil {
		return m.ReroutingNoEt
	}
	return false
}

func (m *MplsTeS2LProtectionObject) GetOneToNProtectionEt() bool {
	if m != nil {
		return m.OneToNProtectionEt
	}
	return false
}

func (m *MplsTeS2LProtectionObject) GetOnePlusOneUni() bool {
	if m != nil {
		return m.OnePlusOneUni
	}
	return false
}

func (m *MplsTeS2LProtectionObject) GetOnePlusOneBi() bool {
	if m != nil {
		return m.OnePlusOneBi
	}
	return false
}

func (m *MplsTeS2LProtectionObject) GetLspUnprotected() bool {
	if m != nil {
		return m.LspUnprotected
	}
	return false
}

type MplsTeS2LFlexInfo struct {
	EntryExists          bool       `protobuf:"varint,1,opt,name=entry_exists,json=entryExists,proto3" json:"entry_exists,omitempty"`
	InLabel              uint32     `protobuf:"varint,2,opt,name=in_label,json=inLabel,proto3" json:"in_label,omitempty"`
	BfdCreated           bool       `protobuf:"varint,3,opt,name=bfd_created,json=bfdCreated,proto3" json:"bfd_created,omitempty"`
	BfdUp                bool       `protobuf:"varint,4,opt,name=bfd_up,json=bfdUp,proto3" json:"bfd_up,omitempty"`
	OamCreated           bool       `protobuf:"varint,5,opt,name=oam_created,json=oamCreated,proto3" json:"oam_created,omitempty"`
	FlexFec              *TeS2LFecT `protobuf:"bytes,6,opt,name=flex_fec,json=flexFec,proto3" json:"flex_fec,omitempty"`
	BfdNextHop           string     `protobuf:"bytes,7,opt,name=bfd_next_hop,json=bfdNextHop,proto3" json:"bfd_next_hop,omitempty"`
	BfdTunIfh            string     `protobuf:"bytes,8,opt,name=bfd_tun_ifh,json=bfdTunIfh,proto3" json:"bfd_tun_ifh,omitempty"`
	BfdOutIfh            string     `protobuf:"bytes,9,opt,name=bfd_out_ifh,json=bfdOutIfh,proto3" json:"bfd_out_ifh,omitempty"`
	BfdIntLabel          uint32     `protobuf:"varint,10,opt,name=bfd_int_label,json=bfdIntLabel,proto3" json:"bfd_int_label,omitempty"`
	BfdEgressLabel       uint32     `protobuf:"varint,11,opt,name=bfd_egress_label,json=bfdEgressLabel,proto3" json:"bfd_egress_label,omitempty"`
	FaultLdiLockout      bool       `protobuf:"varint,12,opt,name=fault_ldi_lockout,json=faultLdiLockout,proto3" json:"fault_ldi_lockout,omitempty"`
	FaultLdi             bool       `protobuf:"varint,13,opt,name=fault_ldi,json=faultLdi,proto3" json:"fault_ldi,omitempty"`
	FaultLkr             bool       `protobuf:"varint,14,opt,name=fault_lkr,json=faultLkr,proto3" json:"fault_lkr,omitempty"`
	FaultAis             bool       `protobuf:"varint,15,opt,name=fault_ais,json=faultAis,proto3" json:"fault_ais,omitempty"`
	FaultTime            uint32     `protobuf:"varint,16,opt,name=fault_time,json=faultTime,proto3" json:"fault_time,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *MplsTeS2LFlexInfo) Reset()         { *m = MplsTeS2LFlexInfo{} }
func (m *MplsTeS2LFlexInfo) String() string { return proto.CompactTextString(m) }
func (*MplsTeS2LFlexInfo) ProtoMessage()    {}
func (*MplsTeS2LFlexInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_97fd10a364dd9ffd, []int{83}
}

func (m *MplsTeS2LFlexInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsTeS2LFlexInfo.Unmarshal(m, b)
}
func (m *MplsTeS2LFlexInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsTeS2LFlexInfo.Marshal(b, m, deterministic)
}
func (m *MplsTeS2LFlexInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsTeS2LFlexInfo.Merge(m, src)
}
func (m *MplsTeS2LFlexInfo) XXX_Size() int {
	return xxx_messageInfo_MplsTeS2LFlexInfo.Size(m)
}
func (m *MplsTeS2LFlexInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsTeS2LFlexInfo.DiscardUnknown(m)
}

var xxx_messageInfo_MplsTeS2LFlexInfo proto.InternalMessageInfo

func (m *MplsTeS2LFlexInfo) GetEntryExists() bool {
	if m != nil {
		return m.EntryExists
	}
	return false
}

func (m *MplsTeS2LFlexInfo) GetInLabel() uint32 {
	if m != nil {
		return m.InLabel
	}
	return 0
}

func (m *MplsTeS2LFlexInfo) GetBfdCreated() bool {
	if m != nil {
		return m.BfdCreated
	}
	return false
}

func (m *MplsTeS2LFlexInfo) GetBfdUp() bool {
	if m != nil {
		return m.BfdUp
	}
	return false
}

func (m *MplsTeS2LFlexInfo) GetOamCreated() bool {
	if m != nil {
		return m.OamCreated
	}
	return false
}

func (m *MplsTeS2LFlexInfo) GetFlexFec() *TeS2LFecT {
	if m != nil {
		return m.FlexFec
	}
	return nil
}

func (m *MplsTeS2LFlexInfo) GetBfdNextHop() string {
	if m != nil {
		return m.BfdNextHop
	}
	return ""
}

func (m *MplsTeS2LFlexInfo) GetBfdTunIfh() string {
	if m != nil {
		return m.BfdTunIfh
	}
	return ""
}

func (m *MplsTeS2LFlexInfo) GetBfdOutIfh() string {
	if m != nil {
		return m.BfdOutIfh
	}
	return ""
}

func (m *MplsTeS2LFlexInfo) GetBfdIntLabel() uint32 {
	if m != nil {
		return m.BfdIntLabel
	}
	return 0
}

func (m *MplsTeS2LFlexInfo) GetBfdEgressLabel() uint32 {
	if m != nil {
		return m.BfdEgressLabel
	}
	return 0
}

func (m *MplsTeS2LFlexInfo) GetFaultLdiLockout() bool {
	if m != nil {
		return m.FaultLdiLockout
	}
	return false
}

func (m *MplsTeS2LFlexInfo) GetFaultLdi() bool {
	if m != nil {
		return m.FaultLdi
	}
	return false
}

func (m *MplsTeS2LFlexInfo) GetFaultLkr() bool {
	if m != nil {
		return m.FaultLkr
	}
	return false
}

func (m *MplsTeS2LFlexInfo) GetFaultAis() bool {
	if m != nil {
		return m.FaultAis
	}
	return false
}

func (m *MplsTeS2LFlexInfo) GetFaultTime() uint32 {
	if m != nil {
		return m.FaultTime
	}
	return 0
}

type TeS2LSrPathHop struct {
	SidType              string   `protobuf:"bytes,1,opt,name=sid_type,json=sidType,proto3" json:"sid_type,omitempty"`
	HasIpAddresses       bool     `protobuf:"varint,2,opt,name=has_ip_addresses,json=hasIpAddresses,proto3" json:"has_ip_addresses,omitempty"`
	LocalAddr            string   `protobuf:"bytes,3,opt,name=local_addr,json=localAddr,proto3" json:"local_addr,omitempty"`
	RemoteAddr           string   `protobuf:"bytes,4,opt,name=remote_addr,json=remoteAddr,proto3" json:"remote_addr,omitempty"`
	HasMplsLabel         bool     `protobuf:"varint,5,opt,name=has_mpls_label,json=hasMplsLabel,proto3" json:"has_mpls_label,omitempty"`
	MplsLabelValue       uint32   `protobuf:"varint,6,opt,name=mpls_label_value,json=mplsLabelValue,proto3" json:"mpls_label_value,omitempty"`
	HasEntropyLabel      bool     `protobuf:"varint,7,opt,name=has_entropy_label,json=hasEntropyLabel,proto3" json:"has_entropy_label,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TeS2LSrPathHop) Reset()         { *m = TeS2LSrPathHop{} }
func (m *TeS2LSrPathHop) String() string { return proto.CompactTextString(m) }
func (*TeS2LSrPathHop) ProtoMessage()    {}
func (*TeS2LSrPathHop) Descriptor() ([]byte, []int) {
	return fileDescriptor_97fd10a364dd9ffd, []int{84}
}

func (m *TeS2LSrPathHop) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TeS2LSrPathHop.Unmarshal(m, b)
}
func (m *TeS2LSrPathHop) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TeS2LSrPathHop.Marshal(b, m, deterministic)
}
func (m *TeS2LSrPathHop) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TeS2LSrPathHop.Merge(m, src)
}
func (m *TeS2LSrPathHop) XXX_Size() int {
	return xxx_messageInfo_TeS2LSrPathHop.Size(m)
}
func (m *TeS2LSrPathHop) XXX_DiscardUnknown() {
	xxx_messageInfo_TeS2LSrPathHop.DiscardUnknown(m)
}

var xxx_messageInfo_TeS2LSrPathHop proto.InternalMessageInfo

func (m *TeS2LSrPathHop) GetSidType() string {
	if m != nil {
		return m.SidType
	}
	return ""
}

func (m *TeS2LSrPathHop) GetHasIpAddresses() bool {
	if m != nil {
		return m.HasIpAddresses
	}
	return false
}

func (m *TeS2LSrPathHop) GetLocalAddr() string {
	if m != nil {
		return m.LocalAddr
	}
	return ""
}

func (m *TeS2LSrPathHop) GetRemoteAddr() string {
	if m != nil {
		return m.RemoteAddr
	}
	return ""
}

func (m *TeS2LSrPathHop) GetHasMplsLabel() bool {
	if m != nil {
		return m.HasMplsLabel
	}
	return false
}

func (m *TeS2LSrPathHop) GetMplsLabelValue() uint32 {
	if m != nil {
		return m.MplsLabelValue
	}
	return 0
}

func (m *TeS2LSrPathHop) GetHasEntropyLabel() bool {
	if m != nil {
		return m.HasEntropyLabel
	}
	return false
}

type TunnelMidpointLspWrapInfoBag struct {
	LspWrapProtectionEnable bool     `protobuf:"varint,1,opt,name=lsp_wrap_protection_enable,json=lspWrapProtectionEnable,proto3" json:"lsp_wrap_protection_enable,omitempty"`
	LspWrapProtectionLabel  uint32   `protobuf:"varint,2,opt,name=lsp_wrap_protection_label,json=lspWrapProtectionLabel,proto3" json:"lsp_wrap_protection_label,omitempty"`
	ReverseEgressInterface  string   `protobuf:"bytes,3,opt,name=reverse_egress_interface,json=reverseEgressInterface,proto3" json:"reverse_egress_interface,omitempty"`
	ReverseLspLabel         uint32   `protobuf:"varint,4,opt,name=reverse_lsp_label,json=reverseLspLabel,proto3" json:"reverse_lsp_label,omitempty"`
	LspWrapProtectionState  string   `protobuf:"bytes,5,opt,name=lsp_wrap_protection_state,json=lspWrapProtectionState,proto3" json:"lsp_wrap_protection_state,omitempty"`
	XXX_NoUnkeyedLiteral    struct{} `json:"-"`
	XXX_unrecognized        []byte   `json:"-"`
	XXX_sizecache           int32    `json:"-"`
}

func (m *TunnelMidpointLspWrapInfoBag) Reset()         { *m = TunnelMidpointLspWrapInfoBag{} }
func (m *TunnelMidpointLspWrapInfoBag) String() string { return proto.CompactTextString(m) }
func (*TunnelMidpointLspWrapInfoBag) ProtoMessage()    {}
func (*TunnelMidpointLspWrapInfoBag) Descriptor() ([]byte, []int) {
	return fileDescriptor_97fd10a364dd9ffd, []int{85}
}

func (m *TunnelMidpointLspWrapInfoBag) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TunnelMidpointLspWrapInfoBag.Unmarshal(m, b)
}
func (m *TunnelMidpointLspWrapInfoBag) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TunnelMidpointLspWrapInfoBag.Marshal(b, m, deterministic)
}
func (m *TunnelMidpointLspWrapInfoBag) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TunnelMidpointLspWrapInfoBag.Merge(m, src)
}
func (m *TunnelMidpointLspWrapInfoBag) XXX_Size() int {
	return xxx_messageInfo_TunnelMidpointLspWrapInfoBag.Size(m)
}
func (m *TunnelMidpointLspWrapInfoBag) XXX_DiscardUnknown() {
	xxx_messageInfo_TunnelMidpointLspWrapInfoBag.DiscardUnknown(m)
}

var xxx_messageInfo_TunnelMidpointLspWrapInfoBag proto.InternalMessageInfo

func (m *TunnelMidpointLspWrapInfoBag) GetLspWrapProtectionEnable() bool {
	if m != nil {
		return m.LspWrapProtectionEnable
	}
	return false
}

func (m *TunnelMidpointLspWrapInfoBag) GetLspWrapProtectionLabel() uint32 {
	if m != nil {
		return m.LspWrapProtectionLabel
	}
	return 0
}

func (m *TunnelMidpointLspWrapInfoBag) GetReverseEgressInterface() string {
	if m != nil {
		return m.ReverseEgressInterface
	}
	return ""
}

func (m *TunnelMidpointLspWrapInfoBag) GetReverseLspLabel() uint32 {
	if m != nil {
		return m.ReverseLspLabel
	}
	return 0
}

func (m *TunnelMidpointLspWrapInfoBag) GetLspWrapProtectionState() string {
	if m != nil {
		return m.LspWrapProtectionState
	}
	return ""
}

type MplsTeS2LDiversityInfo struct {
	DiversityType        string   `protobuf:"bytes,1,opt,name=diversity_type,json=diversityType,proto3" json:"diversity_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MplsTeS2LDiversityInfo) Reset()         { *m = MplsTeS2LDiversityInfo{} }
func (m *MplsTeS2LDiversityInfo) String() string { return proto.CompactTextString(m) }
func (*MplsTeS2LDiversityInfo) ProtoMessage()    {}
func (*MplsTeS2LDiversityInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_97fd10a364dd9ffd, []int{86}
}

func (m *MplsTeS2LDiversityInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsTeS2LDiversityInfo.Unmarshal(m, b)
}
func (m *MplsTeS2LDiversityInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsTeS2LDiversityInfo.Marshal(b, m, deterministic)
}
func (m *MplsTeS2LDiversityInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsTeS2LDiversityInfo.Merge(m, src)
}
func (m *MplsTeS2LDiversityInfo) XXX_Size() int {
	return xxx_messageInfo_MplsTeS2LDiversityInfo.Size(m)
}
func (m *MplsTeS2LDiversityInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsTeS2LDiversityInfo.DiscardUnknown(m)
}

var xxx_messageInfo_MplsTeS2LDiversityInfo proto.InternalMessageInfo

func (m *MplsTeS2LDiversityInfo) GetDiversityType() string {
	if m != nil {
		return m.DiversityType
	}
	return ""
}

type MplsTePathMetrics struct {
	TeMetric             uint64   `protobuf:"varint,1,opt,name=te_metric,json=teMetric,proto3" json:"te_metric,omitempty"`
	IgpMetric            uint64   `protobuf:"varint,2,opt,name=igp_metric,json=igpMetric,proto3" json:"igp_metric,omitempty"`
	DelayMetric          uint64   `protobuf:"varint,3,opt,name=delay_metric,json=delayMetric,proto3" json:"delay_metric,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MplsTePathMetrics) Reset()         { *m = MplsTePathMetrics{} }
func (m *MplsTePathMetrics) String() string { return proto.CompactTextString(m) }
func (*MplsTePathMetrics) ProtoMessage()    {}
func (*MplsTePathMetrics) Descriptor() ([]byte, []int) {
	return fileDescriptor_97fd10a364dd9ffd, []int{87}
}

func (m *MplsTePathMetrics) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsTePathMetrics.Unmarshal(m, b)
}
func (m *MplsTePathMetrics) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsTePathMetrics.Marshal(b, m, deterministic)
}
func (m *MplsTePathMetrics) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsTePathMetrics.Merge(m, src)
}
func (m *MplsTePathMetrics) XXX_Size() int {
	return xxx_messageInfo_MplsTePathMetrics.Size(m)
}
func (m *MplsTePathMetrics) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsTePathMetrics.DiscardUnknown(m)
}

var xxx_messageInfo_MplsTePathMetrics proto.InternalMessageInfo

func (m *MplsTePathMetrics) GetTeMetric() uint64 {
	if m != nil {
		return m.TeMetric
	}
	return 0
}

func (m *MplsTePathMetrics) GetIgpMetric() uint64 {
	if m != nil {
		return m.IgpMetric
	}
	return 0
}

func (m *MplsTePathMetrics) GetDelayMetric() uint64 {
	if m != nil {
		return m.DelayMetric
	}
	return 0
}

type MplsTeP2MpS2L struct {
	S2LFec                                  *TeS2LFecT                    `protobuf:"bytes,1,opt,name=s2l_fec,json=s2lFec,proto3" json:"s2l_fec,omitempty"`
	ActivePathOption                        *MplsTeP2MpPathOption         `protobuf:"bytes,2,opt,name=active_path_option,json=activePathOption,proto3" json:"active_path_option,omitempty"`
	SharedRiskLinkGroup                     []*MplsSrlgInfo               `protobuf:"bytes,3,rep,name=shared_risk_link_group,json=sharedRiskLinkGroup,proto3" json:"shared_risk_link_group,omitempty"`
	PcalcArea                               string                        `protobuf:"bytes,4,opt,name=pcalc_area,json=pcalcArea,proto3" json:"pcalc_area,omitempty"`
	IsExpandedEro                           bool                          `protobuf:"varint,5,opt,name=is_expanded_ero,json=isExpandedEro,proto3" json:"is_expanded_ero,omitempty"`
	PathReevalQueryMid                      uint32                        `protobuf:"varint,6,opt,name=path_reeval_query_mid,json=pathReevalQueryMid,proto3" json:"path_reeval_query_mid,omitempty"`
	TimeSinceLastQueryReceivedMid           uint32                        `protobuf:"varint,7,opt,name=time_since_last_query_received_mid,json=timeSinceLastQueryReceivedMid,proto3" json:"time_since_last_query_received_mid,omitempty"`
	TimeSinceLastPreferredPathExistsSendMid uint32                        `protobuf:"varint,8,opt,name=time_since_last_preferred_path_exists_send_mid,json=timeSinceLastPreferredPathExistsSendMid,proto3" json:"time_since_last_preferred_path_exists_send_mid,omitempty"`
	TimeSinceLastPreferredTreeExistsSendMid uint32                        `protobuf:"varint,9,opt,name=time_since_last_preferred_tree_exists_send_mid,json=timeSinceLastPreferredTreeExistsSendMid,proto3" json:"time_since_last_preferred_tree_exists_send_mid,omitempty"`
	ExpandedEroAreaId                       string                        `protobuf:"bytes,10,opt,name=expanded_ero_area_id,json=expandedEroAreaId,proto3" json:"expanded_ero_area_id,omitempty"`
	ExpandedEroAffinityBits                 uint32                        `protobuf:"varint,11,opt,name=expanded_ero_affinity_bits,json=expandedEroAffinityBits,proto3" json:"expanded_ero_affinity_bits,omitempty"`
	ExpandedEroAffinityMask                 uint32                        `protobuf:"varint,12,opt,name=expanded_ero_affinity_mask,json=expandedEroAffinityMask,proto3" json:"expanded_ero_affinity_mask,omitempty"`
	ExpandedEroMetricType                   string                        `protobuf:"bytes,13,opt,name=expanded_ero_metric_type,json=expandedEroMetricType,proto3" json:"expanded_ero_metric_type,omitempty"`
	ExpandedEroMetric                       uint32                        `protobuf:"varint,14,opt,name=expanded_ero_metric,json=expandedEroMetric,proto3" json:"expanded_ero_metric,omitempty"`
	AbrAutoDiscovered                       string                        `protobuf:"bytes,15,opt,name=abr_auto_discovered,json=abrAutoDiscovered,proto3" json:"abr_auto_discovered,omitempty"`
	IsFrrEnabled                            bool                          `protobuf:"varint,16,opt,name=is_frr_enabled,json=isFrrEnabled,proto3" json:"is_frr_enabled,omitempty"`
	IsNodeProtected                         bool                          `protobuf:"varint,17,opt,name=is_node_protected,json=isNodeProtected,proto3" json:"is_node_protected,omitempty"`
	IsBandwidthProtect                      bool                          `protobuf:"varint,18,opt,name=is_bandwidth_protect,json=isBandwidthProtect,proto3" json:"is_bandwidth_protect,omitempty"`
	PathRroEnabled                          bool                          `protobuf:"varint,19,opt,name=path_rro_enabled,json=pathRroEnabled,proto3" json:"path_rro_enabled,omitempty"`
	OutEro                                  []*RsvpMgmtEroSubobj          `protobuf:"bytes,20,rep,name=out_ero,json=outEro,proto3" json:"out_ero,omitempty"`
	InEro                                   []*RsvpMgmtEroSubobj          `protobuf:"bytes,21,rep,name=in_ero,json=inEro,proto3" json:"in_ero,omitempty"`
	OutXro                                  *TeXro                        `protobuf:"bytes,22,opt,name=out_xro,json=outXro,proto3" json:"out_xro,omitempty"`
	InXro                                   *TeXro                        `protobuf:"bytes,23,opt,name=in_xro,json=inXro,proto3" json:"in_xro,omitempty"`
	PathRro                                 []*RsvpMgmtRroSubobj          `protobuf:"bytes,24,rep,name=path_rro,json=pathRro,proto3" json:"path_rro,omitempty"`
	ResvRro                                 []*RsvpMgmtRroSubobj          `protobuf:"bytes,25,rep,name=resv_rro,json=resvRro,proto3" json:"resv_rro,omitempty"`
	PathAffinityArray                       []*TunnelHopInfo              `protobuf:"bytes,26,rep,name=path_affinity_array,json=pathAffinityArray,proto3" json:"path_affinity_array,omitempty"`
	Tspec                                   *BandwidthSpecBag             `protobuf:"bytes,27,opt,name=tspec,proto3" json:"tspec,omitempty"`
	GenericTspec                            *TeMgmtGenericTspec           `protobuf:"bytes,28,opt,name=generic_tspec,json=genericTspec,proto3" json:"generic_tspec,omitempty"`
	Fspec                                   *BandwidthSpecBag             `protobuf:"bytes,29,opt,name=fspec,proto3" json:"fspec,omitempty"`
	GenericFspec                            *TeMgmtGenericFspec           `protobuf:"bytes,30,opt,name=generic_fspec,json=genericFspec,proto3" json:"generic_fspec,omitempty"`
	Weight                                  uint64                        `protobuf:"varint,31,opt,name=weight,proto3" json:"weight,omitempty"`
	ReverseWeight                           uint64                        `protobuf:"varint,32,opt,name=reverse_weight,json=reverseWeight,proto3" json:"reverse_weight,omitempty"`
	Uptime                                  uint32                        `protobuf:"varint,33,opt,name=uptime,proto3" json:"uptime,omitempty"`
	EgressInterface                         string                        `protobuf:"bytes,34,opt,name=egress_interface,json=egressInterface,proto3" json:"egress_interface,omitempty"`
	EgressInterfaceState                    string                        `protobuf:"bytes,35,opt,name=egress_interface_state,json=egressInterfaceState,proto3" json:"egress_interface_state,omitempty"`
	EgressInterfaceBrief                    string                        `protobuf:"bytes,36,opt,name=egress_interface_brief,json=egressInterfaceBrief,proto3" json:"egress_interface_brief,omitempty"`
	IngressInterface                        string                        `protobuf:"bytes,37,opt,name=ingress_interface,json=ingressInterface,proto3" json:"ingress_interface,omitempty"`
	IngressInterfaceState                   string                        `protobuf:"bytes,38,opt,name=ingress_interface_state,json=ingressInterfaceState,proto3" json:"ingress_interface_state,omitempty"`
	IngressInterfaceBrief                   string                        `protobuf:"bytes,39,opt,name=ingress_interface_brief,json=ingressInterfaceBrief,proto3" json:"ingress_interface_brief,omitempty"`
	S2LLocalLabel                           uint32                        `protobuf:"varint,40,opt,name=s2l_local_label,json=s2lLocalLabel,proto3" json:"s2l_local_label,omitempty"`
	S2LOutLabel                             uint32                        `protobuf:"varint,41,opt,name=s2l_out_label,json=s2lOutLabel,proto3" json:"s2l_out_label,omitempty"`
	OutboundFrrState                        string                        `protobuf:"bytes,42,opt,name=outbound_frr_state,json=outboundFrrState,proto3" json:"outbound_frr_state,omitempty"`
	FrrOutTunnelInterface                   string                        `protobuf:"bytes,43,opt,name=frr_out_tunnel_interface,json=frrOutTunnelInterface,proto3" json:"frr_out_tunnel_interface,omitempty"`
	Role                                    string                        `protobuf:"bytes,44,opt,name=role,proto3" json:"role,omitempty"`
	SignallingStatus                        string                        `protobuf:"bytes,45,opt,name=signalling_status,json=signallingStatus,proto3" json:"signalling_status,omitempty"`
	LocalRouterId                           string                        `protobuf:"bytes,46,opt,name=local_router_id,json=localRouterId,proto3" json:"local_router_id,omitempty"`
	UpstreamRouterId                        string                        `protobuf:"bytes,47,opt,name=upstream_router_id,json=upstreamRouterId,proto3" json:"upstream_router_id,omitempty"`
	DownstreamRouterId                      string                        `protobuf:"bytes,48,opt,name=downstream_router_id,json=downstreamRouterId,proto3" json:"downstream_router_id,omitempty"`
	NextHopAddress                          string                        `protobuf:"bytes,49,opt,name=next_hop_address,json=nextHopAddress,proto3" json:"next_hop_address,omitempty"`
	NextNextHopAddress                      string                        `protobuf:"bytes,50,opt,name=next_next_hop_address,json=nextNextHopAddress,proto3" json:"next_next_hop_address,omitempty"`
	NextHopAddressGeneric                   *TeAddrT_                     `protobuf:"bytes,51,opt,name=next_hop_address_generic,json=nextHopAddressGeneric,proto3" json:"next_hop_address_generic,omitempty"`
	PreviousHopAddress                      string                        `protobuf:"bytes,52,opt,name=previous_hop_address,json=previousHopAddress,proto3" json:"previous_hop_address,omitempty"`
	PreviousHopAddressGeneric               *TeAddrT_                     `protobuf:"bytes,53,opt,name=previous_hop_address_generic,json=previousHopAddressGeneric,proto3" json:"previous_hop_address_generic,omitempty"`
	IncomingAddress                         string                        `protobuf:"bytes,54,opt,name=incoming_address,json=incomingAddress,proto3" json:"incoming_address,omitempty"`
	IncomingAddressGeneric                  *TeAddrT_                     `protobuf:"bytes,55,opt,name=incoming_address_generic,json=incomingAddressGeneric,proto3" json:"incoming_address_generic,omitempty"`
	BackupTunnelInterface                   string                        `protobuf:"bytes,56,opt,name=backup_tunnel_interface,json=backupTunnelInterface,proto3" json:"backup_tunnel_interface,omitempty"`
	NodeHopCount                            uint32                        `protobuf:"varint,57,opt,name=node_hop_count,json=nodeHopCount,proto3" json:"node_hop_count,omitempty"`
	S2LConvergence                          *TeLspConvergenceInfo         `protobuf:"bytes,58,opt,name=s2l_convergence,json=s2lConvergence,proto3" json:"s2l_convergence,omitempty"`
	SoftPreemption                          *MplsTeSoftPreemptionLspInfo  `protobuf:"bytes,59,opt,name=soft_preemption,json=softPreemption,proto3" json:"soft_preemption,omitempty"`
	IsOptical                               bool                          `protobuf:"varint,60,opt,name=is_optical,json=isOptical,proto3" json:"is_optical,omitempty"`
	GmplsLabels                             *MplsTeMgmtGmplsLabels        `protobuf:"bytes,61,opt,name=gmpls_labels,json=gmplsLabels,proto3" json:"gmpls_labels,omitempty"`
	OtnS2L                                  *MplsTeOtnS2LInfo             `protobuf:"bytes,62,opt,name=otn_s2l,json=otnS2l,proto3" json:"otn_s2l,omitempty"`
	HeadEndBfdInfo                          *MplsTeHeadBfdInfo            `protobuf:"bytes,63,opt,name=head_end_bfd_info,json=headEndBfdInfo,proto3" json:"head_end_bfd_info,omitempty"`
	TailEndBfdInfo                          *MplsTeTailBfdInfo            `protobuf:"bytes,64,opt,name=tail_end_bfd_info,json=tailEndBfdInfo,proto3" json:"tail_end_bfd_info,omitempty"`
	SrlgCollection                          *TeS2LSrlgCollectInfo         `protobuf:"bytes,65,opt,name=srlg_collection,json=srlgCollection,proto3" json:"srlg_collection,omitempty"`
	Association                             *MplsTeS2LAssociationObject   `protobuf:"bytes,66,opt,name=association,proto3" json:"association,omitempty"`
	Protection                              *MplsTeS2LProtectionObject    `protobuf:"bytes,67,opt,name=protection,proto3" json:"protection,omitempty"`
	S2LReverseEroObjPresent                 bool                          `protobuf:"varint,68,opt,name=s2l_reverse_ero_obj_present,json=s2lReverseEroObjPresent,proto3" json:"s2l_reverse_ero_obj_present,omitempty"`
	ReverseEroIn                            []*RsvpMgmtEroSubobj          `protobuf:"bytes,69,rep,name=reverse_ero_in,json=reverseEroIn,proto3" json:"reverse_ero_in,omitempty"`
	ReverseLspPresent                       bool                          `protobuf:"varint,70,opt,name=reverse_lsp_present,json=reverseLspPresent,proto3" json:"reverse_lsp_present,omitempty"`
	ReverseLspConnected                     bool                          `protobuf:"varint,71,opt,name=reverse_lsp_connected,json=reverseLspConnected,proto3" json:"reverse_lsp_connected,omitempty"`
	ReverseLspFec                           *TeLspFecT                    `protobuf:"bytes,72,opt,name=reverse_lsp_fec,json=reverseLspFec,proto3" json:"reverse_lsp_fec,omitempty"`
	ReverseLspName                          string                        `protobuf:"bytes,73,opt,name=reverse_lsp_name,json=reverseLspName,proto3" json:"reverse_lsp_name,omitempty"`
	S2LReverseTspecObjPresent               bool                          `protobuf:"varint,74,opt,name=s2l_reverse_tspec_obj_present,json=s2lReverseTspecObjPresent,proto3" json:"s2l_reverse_tspec_obj_present,omitempty"`
	ReverseTspec                            *BandwidthSpecBag             `protobuf:"bytes,75,opt,name=reverse_tspec,json=reverseTspec,proto3" json:"reverse_tspec,omitempty"`
	S2LReverseLspSubObj                     []uint32                      `protobuf:"varint,76,rep,packed,name=s2l_reverse_lsp_sub_obj,json=s2lReverseLspSubObj,proto3" json:"s2l_reverse_lsp_sub_obj,omitempty"`
	FlexInfo                                *MplsTeS2LFlexInfo            `protobuf:"bytes,77,opt,name=flex_info,json=flexInfo,proto3" json:"flex_info,omitempty"`
	S2LSegmentRoutingPath                   []*TeS2LSrPathHop             `protobuf:"bytes,78,rep,name=s2l_segment_routing_path,json=s2lSegmentRoutingPath,proto3" json:"s2l_segment_routing_path,omitempty"`
	LspWrapInfo                             *TunnelMidpointLspWrapInfoBag `protobuf:"bytes,79,opt,name=lsp_wrap_info,json=lspWrapInfo,proto3" json:"lsp_wrap_info,omitempty"`
	PathUsingStrictSpf                      bool                          `protobuf:"varint,80,opt,name=path_using_strict_spf,json=pathUsingStrictSpf,proto3" json:"path_using_strict_spf,omitempty"`
	DiversityInfo                           *MplsTeS2LDiversityInfo       `protobuf:"bytes,81,opt,name=diversity_info,json=diversityInfo,proto3" json:"diversity_info,omitempty"`
	AccumulatedPathMetrics                  *MplsTePathMetrics            `protobuf:"bytes,82,opt,name=accumulated_path_metrics,json=accumulatedPathMetrics,proto3" json:"accumulated_path_metrics,omitempty"`
	AccumulatedReversePathMetrics           *MplsTePathMetrics            `protobuf:"bytes,83,opt,name=accumulated_reverse_path_metrics,json=accumulatedReversePathMetrics,proto3" json:"accumulated_reverse_path_metrics,omitempty"`
	XXX_NoUnkeyedLiteral                    struct{}                      `json:"-"`
	XXX_unrecognized                        []byte                        `json:"-"`
	XXX_sizecache                           int32                         `json:"-"`
}

func (m *MplsTeP2MpS2L) Reset()         { *m = MplsTeP2MpS2L{} }
func (m *MplsTeP2MpS2L) String() string { return proto.CompactTextString(m) }
func (*MplsTeP2MpS2L) ProtoMessage()    {}
func (*MplsTeP2MpS2L) Descriptor() ([]byte, []int) {
	return fileDescriptor_97fd10a364dd9ffd, []int{88}
}

func (m *MplsTeP2MpS2L) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsTeP2MpS2L.Unmarshal(m, b)
}
func (m *MplsTeP2MpS2L) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsTeP2MpS2L.Marshal(b, m, deterministic)
}
func (m *MplsTeP2MpS2L) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsTeP2MpS2L.Merge(m, src)
}
func (m *MplsTeP2MpS2L) XXX_Size() int {
	return xxx_messageInfo_MplsTeP2MpS2L.Size(m)
}
func (m *MplsTeP2MpS2L) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsTeP2MpS2L.DiscardUnknown(m)
}

var xxx_messageInfo_MplsTeP2MpS2L proto.InternalMessageInfo

func (m *MplsTeP2MpS2L) GetS2LFec() *TeS2LFecT {
	if m != nil {
		return m.S2LFec
	}
	return nil
}

func (m *MplsTeP2MpS2L) GetActivePathOption() *MplsTeP2MpPathOption {
	if m != nil {
		return m.ActivePathOption
	}
	return nil
}

func (m *MplsTeP2MpS2L) GetSharedRiskLinkGroup() []*MplsSrlgInfo {
	if m != nil {
		return m.SharedRiskLinkGroup
	}
	return nil
}

func (m *MplsTeP2MpS2L) GetPcalcArea() string {
	if m != nil {
		return m.PcalcArea
	}
	return ""
}

func (m *MplsTeP2MpS2L) GetIsExpandedEro() bool {
	if m != nil {
		return m.IsExpandedEro
	}
	return false
}

func (m *MplsTeP2MpS2L) GetPathReevalQueryMid() uint32 {
	if m != nil {
		return m.PathReevalQueryMid
	}
	return 0
}

func (m *MplsTeP2MpS2L) GetTimeSinceLastQueryReceivedMid() uint32 {
	if m != nil {
		return m.TimeSinceLastQueryReceivedMid
	}
	return 0
}

func (m *MplsTeP2MpS2L) GetTimeSinceLastPreferredPathExistsSendMid() uint32 {
	if m != nil {
		return m.TimeSinceLastPreferredPathExistsSendMid
	}
	return 0
}

func (m *MplsTeP2MpS2L) GetTimeSinceLastPreferredTreeExistsSendMid() uint32 {
	if m != nil {
		return m.TimeSinceLastPreferredTreeExistsSendMid
	}
	return 0
}

func (m *MplsTeP2MpS2L) GetExpandedEroAreaId() string {
	if m != nil {
		return m.ExpandedEroAreaId
	}
	return ""
}

func (m *MplsTeP2MpS2L) GetExpandedEroAffinityBits() uint32 {
	if m != nil {
		return m.ExpandedEroAffinityBits
	}
	return 0
}

func (m *MplsTeP2MpS2L) GetExpandedEroAffinityMask() uint32 {
	if m != nil {
		return m.ExpandedEroAffinityMask
	}
	return 0
}

func (m *MplsTeP2MpS2L) GetExpandedEroMetricType() string {
	if m != nil {
		return m.ExpandedEroMetricType
	}
	return ""
}

func (m *MplsTeP2MpS2L) GetExpandedEroMetric() uint32 {
	if m != nil {
		return m.ExpandedEroMetric
	}
	return 0
}

func (m *MplsTeP2MpS2L) GetAbrAutoDiscovered() string {
	if m != nil {
		return m.AbrAutoDiscovered
	}
	return ""
}

func (m *MplsTeP2MpS2L) GetIsFrrEnabled() bool {
	if m != nil {
		return m.IsFrrEnabled
	}
	return false
}

func (m *MplsTeP2MpS2L) GetIsNodeProtected() bool {
	if m != nil {
		return m.IsNodeProtected
	}
	return false
}

func (m *MplsTeP2MpS2L) GetIsBandwidthProtect() bool {
	if m != nil {
		return m.IsBandwidthProtect
	}
	return false
}

func (m *MplsTeP2MpS2L) GetPathRroEnabled() bool {
	if m != nil {
		return m.PathRroEnabled
	}
	return false
}

func (m *MplsTeP2MpS2L) GetOutEro() []*RsvpMgmtEroSubobj {
	if m != nil {
		return m.OutEro
	}
	return nil
}

func (m *MplsTeP2MpS2L) GetInEro() []*RsvpMgmtEroSubobj {
	if m != nil {
		return m.InEro
	}
	return nil
}

func (m *MplsTeP2MpS2L) GetOutXro() *TeXro {
	if m != nil {
		return m.OutXro
	}
	return nil
}

func (m *MplsTeP2MpS2L) GetInXro() *TeXro {
	if m != nil {
		return m.InXro
	}
	return nil
}

func (m *MplsTeP2MpS2L) GetPathRro() []*RsvpMgmtRroSubobj {
	if m != nil {
		return m.PathRro
	}
	return nil
}

func (m *MplsTeP2MpS2L) GetResvRro() []*RsvpMgmtRroSubobj {
	if m != nil {
		return m.ResvRro
	}
	return nil
}

func (m *MplsTeP2MpS2L) GetPathAffinityArray() []*TunnelHopInfo {
	if m != nil {
		return m.PathAffinityArray
	}
	return nil
}

func (m *MplsTeP2MpS2L) GetTspec() *BandwidthSpecBag {
	if m != nil {
		return m.Tspec
	}
	return nil
}

func (m *MplsTeP2MpS2L) GetGenericTspec() *TeMgmtGenericTspec {
	if m != nil {
		return m.GenericTspec
	}
	return nil
}

func (m *MplsTeP2MpS2L) GetFspec() *BandwidthSpecBag {
	if m != nil {
		return m.Fspec
	}
	return nil
}

func (m *MplsTeP2MpS2L) GetGenericFspec() *TeMgmtGenericFspec {
	if m != nil {
		return m.GenericFspec
	}
	return nil
}

func (m *MplsTeP2MpS2L) GetWeight() uint64 {
	if m != nil {
		return m.Weight
	}
	return 0
}

func (m *MplsTeP2MpS2L) GetReverseWeight() uint64 {
	if m != nil {
		return m.ReverseWeight
	}
	return 0
}

func (m *MplsTeP2MpS2L) GetUptime() uint32 {
	if m != nil {
		return m.Uptime
	}
	return 0
}

func (m *MplsTeP2MpS2L) GetEgressInterface() string {
	if m != nil {
		return m.EgressInterface
	}
	return ""
}

func (m *MplsTeP2MpS2L) GetEgressInterfaceState() string {
	if m != nil {
		return m.EgressInterfaceState
	}
	return ""
}

func (m *MplsTeP2MpS2L) GetEgressInterfaceBrief() string {
	if m != nil {
		return m.EgressInterfaceBrief
	}
	return ""
}

func (m *MplsTeP2MpS2L) GetIngressInterface() string {
	if m != nil {
		return m.IngressInterface
	}
	return ""
}

func (m *MplsTeP2MpS2L) GetIngressInterfaceState() string {
	if m != nil {
		return m.IngressInterfaceState
	}
	return ""
}

func (m *MplsTeP2MpS2L) GetIngressInterfaceBrief() string {
	if m != nil {
		return m.IngressInterfaceBrief
	}
	return ""
}

func (m *MplsTeP2MpS2L) GetS2LLocalLabel() uint32 {
	if m != nil {
		return m.S2LLocalLabel
	}
	return 0
}

func (m *MplsTeP2MpS2L) GetS2LOutLabel() uint32 {
	if m != nil {
		return m.S2LOutLabel
	}
	return 0
}

func (m *MplsTeP2MpS2L) GetOutboundFrrState() string {
	if m != nil {
		return m.OutboundFrrState
	}
	return ""
}

func (m *MplsTeP2MpS2L) GetFrrOutTunnelInterface() string {
	if m != nil {
		return m.FrrOutTunnelInterface
	}
	return ""
}

func (m *MplsTeP2MpS2L) GetRole() string {
	if m != nil {
		return m.Role
	}
	return ""
}

func (m *MplsTeP2MpS2L) GetSignallingStatus() string {
	if m != nil {
		return m.SignallingStatus
	}
	return ""
}

func (m *MplsTeP2MpS2L) GetLocalRouterId() string {
	if m != nil {
		return m.LocalRouterId
	}
	return ""
}

func (m *MplsTeP2MpS2L) GetUpstreamRouterId() string {
	if m != nil {
		return m.UpstreamRouterId
	}
	return ""
}

func (m *MplsTeP2MpS2L) GetDownstreamRouterId() string {
	if m != nil {
		return m.DownstreamRouterId
	}
	return ""
}

func (m *MplsTeP2MpS2L) GetNextHopAddress() string {
	if m != nil {
		return m.NextHopAddress
	}
	return ""
}

func (m *MplsTeP2MpS2L) GetNextNextHopAddress() string {
	if m != nil {
		return m.NextNextHopAddress
	}
	return ""
}

func (m *MplsTeP2MpS2L) GetNextHopAddressGeneric() *TeAddrT_ {
	if m != nil {
		return m.NextHopAddressGeneric
	}
	return nil
}

func (m *MplsTeP2MpS2L) GetPreviousHopAddress() string {
	if m != nil {
		return m.PreviousHopAddress
	}
	return ""
}

func (m *MplsTeP2MpS2L) GetPreviousHopAddressGeneric() *TeAddrT_ {
	if m != nil {
		return m.PreviousHopAddressGeneric
	}
	return nil
}

func (m *MplsTeP2MpS2L) GetIncomingAddress() string {
	if m != nil {
		return m.IncomingAddress
	}
	return ""
}

func (m *MplsTeP2MpS2L) GetIncomingAddressGeneric() *TeAddrT_ {
	if m != nil {
		return m.IncomingAddressGeneric
	}
	return nil
}

func (m *MplsTeP2MpS2L) GetBackupTunnelInterface() string {
	if m != nil {
		return m.BackupTunnelInterface
	}
	return ""
}

func (m *MplsTeP2MpS2L) GetNodeHopCount() uint32 {
	if m != nil {
		return m.NodeHopCount
	}
	return 0
}

func (m *MplsTeP2MpS2L) GetS2LConvergence() *TeLspConvergenceInfo {
	if m != nil {
		return m.S2LConvergence
	}
	return nil
}

func (m *MplsTeP2MpS2L) GetSoftPreemption() *MplsTeSoftPreemptionLspInfo {
	if m != nil {
		return m.SoftPreemption
	}
	return nil
}

func (m *MplsTeP2MpS2L) GetIsOptical() bool {
	if m != nil {
		return m.IsOptical
	}
	return false
}

func (m *MplsTeP2MpS2L) GetGmplsLabels() *MplsTeMgmtGmplsLabels {
	if m != nil {
		return m.GmplsLabels
	}
	return nil
}

func (m *MplsTeP2MpS2L) GetOtnS2L() *MplsTeOtnS2LInfo {
	if m != nil {
		return m.OtnS2L
	}
	return nil
}

func (m *MplsTeP2MpS2L) GetHeadEndBfdInfo() *MplsTeHeadBfdInfo {
	if m != nil {
		return m.HeadEndBfdInfo
	}
	return nil
}

func (m *MplsTeP2MpS2L) GetTailEndBfdInfo() *MplsTeTailBfdInfo {
	if m != nil {
		return m.TailEndBfdInfo
	}
	return nil
}

func (m *MplsTeP2MpS2L) GetSrlgCollection() *TeS2LSrlgCollectInfo {
	if m != nil {
		return m.SrlgCollection
	}
	return nil
}

func (m *MplsTeP2MpS2L) GetAssociation() *MplsTeS2LAssociationObject {
	if m != nil {
		return m.Association
	}
	return nil
}

func (m *MplsTeP2MpS2L) GetProtection() *MplsTeS2LProtectionObject {
	if m != nil {
		return m.Protection
	}
	return nil
}

func (m *MplsTeP2MpS2L) GetS2LReverseEroObjPresent() bool {
	if m != nil {
		return m.S2LReverseEroObjPresent
	}
	return false
}

func (m *MplsTeP2MpS2L) GetReverseEroIn() []*RsvpMgmtEroSubobj {
	if m != nil {
		return m.ReverseEroIn
	}
	return nil
}

func (m *MplsTeP2MpS2L) GetReverseLspPresent() bool {
	if m != nil {
		return m.ReverseLspPresent
	}
	return false
}

func (m *MplsTeP2MpS2L) GetReverseLspConnected() bool {
	if m != nil {
		return m.ReverseLspConnected
	}
	return false
}

func (m *MplsTeP2MpS2L) GetReverseLspFec() *TeLspFecT {
	if m != nil {
		return m.ReverseLspFec
	}
	return nil
}

func (m *MplsTeP2MpS2L) GetReverseLspName() string {
	if m != nil {
		return m.ReverseLspName
	}
	return ""
}

func (m *MplsTeP2MpS2L) GetS2LReverseTspecObjPresent() bool {
	if m != nil {
		return m.S2LReverseTspecObjPresent
	}
	return false
}

func (m *MplsTeP2MpS2L) GetReverseTspec() *BandwidthSpecBag {
	if m != nil {
		return m.ReverseTspec
	}
	return nil
}

func (m *MplsTeP2MpS2L) GetS2LReverseLspSubObj() []uint32 {
	if m != nil {
		return m.S2LReverseLspSubObj
	}
	return nil
}

func (m *MplsTeP2MpS2L) GetFlexInfo() *MplsTeS2LFlexInfo {
	if m != nil {
		return m.FlexInfo
	}
	return nil
}

func (m *MplsTeP2MpS2L) GetS2LSegmentRoutingPath() []*TeS2LSrPathHop {
	if m != nil {
		return m.S2LSegmentRoutingPath
	}
	return nil
}

func (m *MplsTeP2MpS2L) GetLspWrapInfo() *TunnelMidpointLspWrapInfoBag {
	if m != nil {
		return m.LspWrapInfo
	}
	return nil
}

func (m *MplsTeP2MpS2L) GetPathUsingStrictSpf() bool {
	if m != nil {
		return m.PathUsingStrictSpf
	}
	return false
}

func (m *MplsTeP2MpS2L) GetDiversityInfo() *MplsTeS2LDiversityInfo {
	if m != nil {
		return m.DiversityInfo
	}
	return nil
}

func (m *MplsTeP2MpS2L) GetAccumulatedPathMetrics() *MplsTePathMetrics {
	if m != nil {
		return m.AccumulatedPathMetrics
	}
	return nil
}

func (m *MplsTeP2MpS2L) GetAccumulatedReversePathMetrics() *MplsTePathMetrics {
	if m != nil {
		return m.AccumulatedReversePathMetrics
	}
	return nil
}

type MplsTeP2MpLsp struct {
	SignaledName         string           `protobuf:"bytes,1,opt,name=signaled_name,json=signaledName,proto3" json:"signaled_name,omitempty"`
	IsFrrFailed          bool             `protobuf:"varint,2,opt,name=is_frr_failed,json=isFrrFailed,proto3" json:"is_frr_failed,omitempty"`
	FrrActiveReason      uint32           `protobuf:"varint,3,opt,name=frr_active_reason,json=frrActiveReason,proto3" json:"frr_active_reason,omitempty"`
	LspBandwidth         uint32           `protobuf:"varint,4,opt,name=lsp_bandwidth,json=lspBandwidth,proto3" json:"lsp_bandwidth,omitempty"`
	LspSetupPriority     uint32           `protobuf:"varint,5,opt,name=lsp_setup_priority,json=lspSetupPriority,proto3" json:"lsp_setup_priority,omitempty"`
	LspHoldPriority      uint32           `protobuf:"varint,6,opt,name=lsp_hold_priority,json=lspHoldPriority,proto3" json:"lsp_hold_priority,omitempty"`
	LspBandwidthType     string           `protobuf:"bytes,7,opt,name=lsp_bandwidth_type,json=lspBandwidthType,proto3" json:"lsp_bandwidth_type,omitempty"`
	DsteClassMatch       bool             `protobuf:"varint,8,opt,name=dste_class_match,json=dsteClassMatch,proto3" json:"dste_class_match,omitempty"`
	DsteClassIndex       uint32           `protobuf:"varint,9,opt,name=dste_class_index,json=dsteClassIndex,proto3" json:"dste_class_index,omitempty"`
	LspFec               *TeLspFecT       `protobuf:"bytes,10,opt,name=lsp_fec,json=lspFec,proto3" json:"lsp_fec,omitempty"`
	Type                 string           `protobuf:"bytes,11,opt,name=type,proto3" json:"type,omitempty"`
	S2L                  []*MplsTeP2MpS2L `protobuf:"bytes,12,rep,name=s2l,proto3" json:"s2l,omitempty"`
	Uptime               uint32           `protobuf:"varint,13,opt,name=uptime,proto3" json:"uptime,omitempty"`
	S2LsUp               uint32           `protobuf:"varint,14,opt,name=s2_ls_up,json=s2LsUp,proto3" json:"s2_ls_up,omitempty"`
	S2LsProceeding       uint32           `protobuf:"varint,15,opt,name=s2_ls_proceeding,json=s2LsProceeding,proto3" json:"s2_ls_proceeding,omitempty"`
	S2LsDown             uint32           `protobuf:"varint,16,opt,name=s2_ls_down,json=s2LsDown,proto3" json:"s2_ls_down,omitempty"`
	ReoptimizeReason     string           `protobuf:"bytes,17,opt,name=reoptimize_reason,json=reoptimizeReason,proto3" json:"reoptimize_reason,omitempty"`
	ReoptimizeTrigger    string           `protobuf:"bytes,18,opt,name=reoptimize_trigger,json=reoptimizeTrigger,proto3" json:"reoptimize_trigger,omitempty"`
	TimerLeft            uint32           `protobuf:"varint,19,opt,name=timer_left,json=timerLeft,proto3" json:"timer_left,omitempty"`
	IsPassive            bool             `protobuf:"varint,20,opt,name=is_passive,json=isPassive,proto3" json:"is_passive,omitempty"`
	IsInterface          bool             `protobuf:"varint,21,opt,name=is_interface,json=isInterface,proto3" json:"is_interface,omitempty"`
	LastPathChange       uint32           `protobuf:"varint,22,opt,name=last_path_change,json=lastPathChange,proto3" json:"last_path_change,omitempty"`
	PersistentBytes      uint64           `protobuf:"varint,23,opt,name=persistent_bytes,json=persistentBytes,proto3" json:"persistent_bytes,omitempty"`
	PersistentPackets    uint64           `protobuf:"varint,24,opt,name=persistent_packets,json=persistentPackets,proto3" json:"persistent_packets,omitempty"`
	ProtectionRole       string           `protobuf:"bytes,25,opt,name=protection_role,json=protectionRole,proto3" json:"protection_role,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *MplsTeP2MpLsp) Reset()         { *m = MplsTeP2MpLsp{} }
func (m *MplsTeP2MpLsp) String() string { return proto.CompactTextString(m) }
func (*MplsTeP2MpLsp) ProtoMessage()    {}
func (*MplsTeP2MpLsp) Descriptor() ([]byte, []int) {
	return fileDescriptor_97fd10a364dd9ffd, []int{89}
}

func (m *MplsTeP2MpLsp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsTeP2MpLsp.Unmarshal(m, b)
}
func (m *MplsTeP2MpLsp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsTeP2MpLsp.Marshal(b, m, deterministic)
}
func (m *MplsTeP2MpLsp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsTeP2MpLsp.Merge(m, src)
}
func (m *MplsTeP2MpLsp) XXX_Size() int {
	return xxx_messageInfo_MplsTeP2MpLsp.Size(m)
}
func (m *MplsTeP2MpLsp) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsTeP2MpLsp.DiscardUnknown(m)
}

var xxx_messageInfo_MplsTeP2MpLsp proto.InternalMessageInfo

func (m *MplsTeP2MpLsp) GetSignaledName() string {
	if m != nil {
		return m.SignaledName
	}
	return ""
}

func (m *MplsTeP2MpLsp) GetIsFrrFailed() bool {
	if m != nil {
		return m.IsFrrFailed
	}
	return false
}

func (m *MplsTeP2MpLsp) GetFrrActiveReason() uint32 {
	if m != nil {
		return m.FrrActiveReason
	}
	return 0
}

func (m *MplsTeP2MpLsp) GetLspBandwidth() uint32 {
	if m != nil {
		return m.LspBandwidth
	}
	return 0
}

func (m *MplsTeP2MpLsp) GetLspSetupPriority() uint32 {
	if m != nil {
		return m.LspSetupPriority
	}
	return 0
}

func (m *MplsTeP2MpLsp) GetLspHoldPriority() uint32 {
	if m != nil {
		return m.LspHoldPriority
	}
	return 0
}

func (m *MplsTeP2MpLsp) GetLspBandwidthType() string {
	if m != nil {
		return m.LspBandwidthType
	}
	return ""
}

func (m *MplsTeP2MpLsp) GetDsteClassMatch() bool {
	if m != nil {
		return m.DsteClassMatch
	}
	return false
}

func (m *MplsTeP2MpLsp) GetDsteClassIndex() uint32 {
	if m != nil {
		return m.DsteClassIndex
	}
	return 0
}

func (m *MplsTeP2MpLsp) GetLspFec() *TeLspFecT {
	if m != nil {
		return m.LspFec
	}
	return nil
}

func (m *MplsTeP2MpLsp) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *MplsTeP2MpLsp) GetS2L() []*MplsTeP2MpS2L {
	if m != nil {
		return m.S2L
	}
	return nil
}

func (m *MplsTeP2MpLsp) GetUptime() uint32 {
	if m != nil {
		return m.Uptime
	}
	return 0
}

func (m *MplsTeP2MpLsp) GetS2LsUp() uint32 {
	if m != nil {
		return m.S2LsUp
	}
	return 0
}

func (m *MplsTeP2MpLsp) GetS2LsProceeding() uint32 {
	if m != nil {
		return m.S2LsProceeding
	}
	return 0
}

func (m *MplsTeP2MpLsp) GetS2LsDown() uint32 {
	if m != nil {
		return m.S2LsDown
	}
	return 0
}

func (m *MplsTeP2MpLsp) GetReoptimizeReason() string {
	if m != nil {
		return m.ReoptimizeReason
	}
	return ""
}

func (m *MplsTeP2MpLsp) GetReoptimizeTrigger() string {
	if m != nil {
		return m.ReoptimizeTrigger
	}
	return ""
}

func (m *MplsTeP2MpLsp) GetTimerLeft() uint32 {
	if m != nil {
		return m.TimerLeft
	}
	return 0
}

func (m *MplsTeP2MpLsp) GetIsPassive() bool {
	if m != nil {
		return m.IsPassive
	}
	return false
}

func (m *MplsTeP2MpLsp) GetIsInterface() bool {
	if m != nil {
		return m.IsInterface
	}
	return false
}

func (m *MplsTeP2MpLsp) GetLastPathChange() uint32 {
	if m != nil {
		return m.LastPathChange
	}
	return 0
}

func (m *MplsTeP2MpLsp) GetPersistentBytes() uint64 {
	if m != nil {
		return m.PersistentBytes
	}
	return 0
}

func (m *MplsTeP2MpLsp) GetPersistentPackets() uint64 {
	if m != nil {
		return m.PersistentPackets
	}
	return 0
}

func (m *MplsTeP2MpLsp) GetProtectionRole() string {
	if m != nil {
		return m.ProtectionRole
	}
	return ""
}

type MplsTeTunnelsAutobwStatus struct {
	IsAutoBandwidthEnabled bool     `protobuf:"varint,1,opt,name=is_auto_bandwidth_enabled,json=isAutoBandwidthEnabled,proto3" json:"is_auto_bandwidth_enabled,omitempty"`
	ReactivationTime       uint32   `protobuf:"varint,2,opt,name=reactivation_time,json=reactivationTime,proto3" json:"reactivation_time,omitempty"`
	XXX_NoUnkeyedLiteral   struct{} `json:"-"`
	XXX_unrecognized       []byte   `json:"-"`
	XXX_sizecache          int32    `json:"-"`
}

func (m *MplsTeTunnelsAutobwStatus) Reset()         { *m = MplsTeTunnelsAutobwStatus{} }
func (m *MplsTeTunnelsAutobwStatus) String() string { return proto.CompactTextString(m) }
func (*MplsTeTunnelsAutobwStatus) ProtoMessage()    {}
func (*MplsTeTunnelsAutobwStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_97fd10a364dd9ffd, []int{90}
}

func (m *MplsTeTunnelsAutobwStatus) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsTeTunnelsAutobwStatus.Unmarshal(m, b)
}
func (m *MplsTeTunnelsAutobwStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsTeTunnelsAutobwStatus.Marshal(b, m, deterministic)
}
func (m *MplsTeTunnelsAutobwStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsTeTunnelsAutobwStatus.Merge(m, src)
}
func (m *MplsTeTunnelsAutobwStatus) XXX_Size() int {
	return xxx_messageInfo_MplsTeTunnelsAutobwStatus.Size(m)
}
func (m *MplsTeTunnelsAutobwStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsTeTunnelsAutobwStatus.DiscardUnknown(m)
}

var xxx_messageInfo_MplsTeTunnelsAutobwStatus proto.InternalMessageInfo

func (m *MplsTeTunnelsAutobwStatus) GetIsAutoBandwidthEnabled() bool {
	if m != nil {
		return m.IsAutoBandwidthEnabled
	}
	return false
}

func (m *MplsTeTunnelsAutobwStatus) GetReactivationTime() uint32 {
	if m != nil {
		return m.ReactivationTime
	}
	return 0
}

type MplsTeTunnelsAutobwConfig struct {
	IsAutoBandwidthCollectOnly   bool     `protobuf:"varint,1,opt,name=is_auto_bandwidth_collect_only,json=isAutoBandwidthCollectOnly,proto3" json:"is_auto_bandwidth_collect_only,omitempty"`
	MinimumBandwidth             uint32   `protobuf:"varint,2,opt,name=minimum_bandwidth,json=minimumBandwidth,proto3" json:"minimum_bandwidth,omitempty"`
	MaximumBandwidth             uint32   `protobuf:"varint,3,opt,name=maximum_bandwidth,json=maximumBandwidth,proto3" json:"maximum_bandwidth,omitempty"`
	ApplicationFrequency         uint32   `protobuf:"varint,4,opt,name=application_frequency,json=applicationFrequency,proto3" json:"application_frequency,omitempty"`
	CollectionFrequency          uint32   `protobuf:"varint,5,opt,name=collection_frequency,json=collectionFrequency,proto3" json:"collection_frequency,omitempty"`
	AdjustmentThresholdPercent   uint32   `protobuf:"varint,6,opt,name=adjustment_threshold_percent,json=adjustmentThresholdPercent,proto3" json:"adjustment_threshold_percent,omitempty"`
	AdjustmentThresholdValue     uint32   `protobuf:"varint,7,opt,name=adjustment_threshold_value,json=adjustmentThresholdValue,proto3" json:"adjustment_threshold_value,omitempty"`
	OverflowThresholdPercent     uint32   `protobuf:"varint,8,opt,name=overflow_threshold_percent,json=overflowThresholdPercent,proto3" json:"overflow_threshold_percent,omitempty"`
	OverflowThresholdValue       uint32   `protobuf:"varint,9,opt,name=overflow_threshold_value,json=overflowThresholdValue,proto3" json:"overflow_threshold_value,omitempty"`
	OverflowThresholdLimit       uint32   `protobuf:"varint,10,opt,name=overflow_threshold_limit,json=overflowThresholdLimit,proto3" json:"overflow_threshold_limit,omitempty"`
	UnderflowThresholdPercent    uint32   `protobuf:"varint,11,opt,name=underflow_threshold_percent,json=underflowThresholdPercent,proto3" json:"underflow_threshold_percent,omitempty"`
	UnderflowThresholdValue      uint32   `protobuf:"varint,12,opt,name=underflow_threshold_value,json=underflowThresholdValue,proto3" json:"underflow_threshold_value,omitempty"`
	UnderflowThresholdLimit      uint32   `protobuf:"varint,13,opt,name=underflow_threshold_limit,json=underflowThresholdLimit,proto3" json:"underflow_threshold_limit,omitempty"`
	ResignalLastBandwidthEnabled bool     `protobuf:"varint,14,opt,name=resignal_last_bandwidth_enabled,json=resignalLastBandwidthEnabled,proto3" json:"resignal_last_bandwidth_enabled,omitempty"`
	ResignalLastBandwidthTimeout uint32   `protobuf:"varint,15,opt,name=resignal_last_bandwidth_timeout,json=resignalLastBandwidthTimeout,proto3" json:"resignal_last_bandwidth_timeout,omitempty"`
	XXX_NoUnkeyedLiteral         struct{} `json:"-"`
	XXX_unrecognized             []byte   `json:"-"`
	XXX_sizecache                int32    `json:"-"`
}

func (m *MplsTeTunnelsAutobwConfig) Reset()         { *m = MplsTeTunnelsAutobwConfig{} }
func (m *MplsTeTunnelsAutobwConfig) String() string { return proto.CompactTextString(m) }
func (*MplsTeTunnelsAutobwConfig) ProtoMessage()    {}
func (*MplsTeTunnelsAutobwConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_97fd10a364dd9ffd, []int{91}
}

func (m *MplsTeTunnelsAutobwConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsTeTunnelsAutobwConfig.Unmarshal(m, b)
}
func (m *MplsTeTunnelsAutobwConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsTeTunnelsAutobwConfig.Marshal(b, m, deterministic)
}
func (m *MplsTeTunnelsAutobwConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsTeTunnelsAutobwConfig.Merge(m, src)
}
func (m *MplsTeTunnelsAutobwConfig) XXX_Size() int {
	return xxx_messageInfo_MplsTeTunnelsAutobwConfig.Size(m)
}
func (m *MplsTeTunnelsAutobwConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsTeTunnelsAutobwConfig.DiscardUnknown(m)
}

var xxx_messageInfo_MplsTeTunnelsAutobwConfig proto.InternalMessageInfo

func (m *MplsTeTunnelsAutobwConfig) GetIsAutoBandwidthCollectOnly() bool {
	if m != nil {
		return m.IsAutoBandwidthCollectOnly
	}
	return false
}

func (m *MplsTeTunnelsAutobwConfig) GetMinimumBandwidth() uint32 {
	if m != nil {
		return m.MinimumBandwidth
	}
	return 0
}

func (m *MplsTeTunnelsAutobwConfig) GetMaximumBandwidth() uint32 {
	if m != nil {
		return m.MaximumBandwidth
	}
	return 0
}

func (m *MplsTeTunnelsAutobwConfig) GetApplicationFrequency() uint32 {
	if m != nil {
		return m.ApplicationFrequency
	}
	return 0
}

func (m *MplsTeTunnelsAutobwConfig) GetCollectionFrequency() uint32 {
	if m != nil {
		return m.CollectionFrequency
	}
	return 0
}

func (m *MplsTeTunnelsAutobwConfig) GetAdjustmentThresholdPercent() uint32 {
	if m != nil {
		return m.AdjustmentThresholdPercent
	}
	return 0
}

func (m *MplsTeTunnelsAutobwConfig) GetAdjustmentThresholdValue() uint32 {
	if m != nil {
		return m.AdjustmentThresholdValue
	}
	return 0
}

func (m *MplsTeTunnelsAutobwConfig) GetOverflowThresholdPercent() uint32 {
	if m != nil {
		return m.OverflowThresholdPercent
	}
	return 0
}

func (m *MplsTeTunnelsAutobwConfig) GetOverflowThresholdValue() uint32 {
	if m != nil {
		return m.OverflowThresholdValue
	}
	return 0
}

func (m *MplsTeTunnelsAutobwConfig) GetOverflowThresholdLimit() uint32 {
	if m != nil {
		return m.OverflowThresholdLimit
	}
	return 0
}

func (m *MplsTeTunnelsAutobwConfig) GetUnderflowThresholdPercent() uint32 {
	if m != nil {
		return m.UnderflowThresholdPercent
	}
	return 0
}

func (m *MplsTeTunnelsAutobwConfig) GetUnderflowThresholdValue() uint32 {
	if m != nil {
		return m.UnderflowThresholdValue
	}
	return 0
}

func (m *MplsTeTunnelsAutobwConfig) GetUnderflowThresholdLimit() uint32 {
	if m != nil {
		return m.UnderflowThresholdLimit
	}
	return 0
}

func (m *MplsTeTunnelsAutobwConfig) GetResignalLastBandwidthEnabled() bool {
	if m != nil {
		return m.ResignalLastBandwidthEnabled
	}
	return false
}

func (m *MplsTeTunnelsAutobwConfig) GetResignalLastBandwidthTimeout() uint32 {
	if m != nil {
		return m.ResignalLastBandwidthTimeout
	}
	return 0
}

type MplsTeTunnelsAutobwOper struct {
	LastBandwidthApplied            uint32   `protobuf:"varint,1,opt,name=last_bandwidth_applied,json=lastBandwidthApplied,proto3" json:"last_bandwidth_applied,omitempty"`
	BandwidthPoolType               string   `protobuf:"bytes,2,opt,name=bandwidth_pool_type,json=bandwidthPoolType,proto3" json:"bandwidth_pool_type,omitempty"`
	BandwidthApplications           uint32   `protobuf:"varint,3,opt,name=bandwidth_applications,json=bandwidthApplications,proto3" json:"bandwidth_applications,omitempty"`
	LastApplicationTrigger          string   `protobuf:"bytes,4,opt,name=last_application_trigger,json=lastApplicationTrigger,proto3" json:"last_application_trigger,omitempty"`
	ApplicationJitter               uint32   `protobuf:"varint,5,opt,name=application_jitter,json=applicationJitter,proto3" json:"application_jitter,omitempty"`
	TimeLeftApplication             uint32   `protobuf:"varint,6,opt,name=time_left_application,json=timeLeftApplication,proto3" json:"time_left_application,omitempty"`
	SamplesCollected                uint32   `protobuf:"varint,7,opt,name=samples_collected,json=samplesCollected,proto3" json:"samples_collected,omitempty"`
	TimeLeftCollection              uint32   `protobuf:"varint,8,opt,name=time_left_collection,json=timeLeftCollection,proto3" json:"time_left_collection,omitempty"`
	HighestBandwidth                uint32   `protobuf:"varint,9,opt,name=highest_bandwidth,json=highestBandwidth,proto3" json:"highest_bandwidth,omitempty"`
	UnderflowHighestBandwidth       uint32   `protobuf:"varint,10,opt,name=underflow_highest_bandwidth,json=underflowHighestBandwidth,proto3" json:"underflow_highest_bandwidth,omitempty"`
	ThresholdOverflows              uint32   `protobuf:"varint,11,opt,name=threshold_overflows,json=thresholdOverflows,proto3" json:"threshold_overflows,omitempty"`
	OverflowEarlyBwApplications     uint32   `protobuf:"varint,12,opt,name=overflow_early_bw_applications,json=overflowEarlyBwApplications,proto3" json:"overflow_early_bw_applications,omitempty"`
	ThresholdUnderflows             uint32   `protobuf:"varint,13,opt,name=threshold_underflows,json=thresholdUnderflows,proto3" json:"threshold_underflows,omitempty"`
	UnderflowEarlyBwApplications    uint32   `protobuf:"varint,14,opt,name=underflow_early_bw_applications,json=underflowEarlyBwApplications,proto3" json:"underflow_early_bw_applications,omitempty"`
	CollectOnlyRequestedBandwidth   uint32   `protobuf:"varint,15,opt,name=collect_only_requested_bandwidth,json=collectOnlyRequestedBandwidth,proto3" json:"collect_only_requested_bandwidth,omitempty"`
	ApplicationRejectReason         string   `protobuf:"bytes,16,opt,name=application_reject_reason,json=applicationRejectReason,proto3" json:"application_reject_reason,omitempty"`
	ResignalLastBandwidthExpireTime uint32   `protobuf:"varint,17,opt,name=resignal_last_bandwidth_expire_time,json=resignalLastBandwidthExpireTime,proto3" json:"resignal_last_bandwidth_expire_time,omitempty"`
	XXX_NoUnkeyedLiteral            struct{} `json:"-"`
	XXX_unrecognized                []byte   `json:"-"`
	XXX_sizecache                   int32    `json:"-"`
}

func (m *MplsTeTunnelsAutobwOper) Reset()         { *m = MplsTeTunnelsAutobwOper{} }
func (m *MplsTeTunnelsAutobwOper) String() string { return proto.CompactTextString(m) }
func (*MplsTeTunnelsAutobwOper) ProtoMessage()    {}
func (*MplsTeTunnelsAutobwOper) Descriptor() ([]byte, []int) {
	return fileDescriptor_97fd10a364dd9ffd, []int{92}
}

func (m *MplsTeTunnelsAutobwOper) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsTeTunnelsAutobwOper.Unmarshal(m, b)
}
func (m *MplsTeTunnelsAutobwOper) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsTeTunnelsAutobwOper.Marshal(b, m, deterministic)
}
func (m *MplsTeTunnelsAutobwOper) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsTeTunnelsAutobwOper.Merge(m, src)
}
func (m *MplsTeTunnelsAutobwOper) XXX_Size() int {
	return xxx_messageInfo_MplsTeTunnelsAutobwOper.Size(m)
}
func (m *MplsTeTunnelsAutobwOper) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsTeTunnelsAutobwOper.DiscardUnknown(m)
}

var xxx_messageInfo_MplsTeTunnelsAutobwOper proto.InternalMessageInfo

func (m *MplsTeTunnelsAutobwOper) GetLastBandwidthApplied() uint32 {
	if m != nil {
		return m.LastBandwidthApplied
	}
	return 0
}

func (m *MplsTeTunnelsAutobwOper) GetBandwidthPoolType() string {
	if m != nil {
		return m.BandwidthPoolType
	}
	return ""
}

func (m *MplsTeTunnelsAutobwOper) GetBandwidthApplications() uint32 {
	if m != nil {
		return m.BandwidthApplications
	}
	return 0
}

func (m *MplsTeTunnelsAutobwOper) GetLastApplicationTrigger() string {
	if m != nil {
		return m.LastApplicationTrigger
	}
	return ""
}

func (m *MplsTeTunnelsAutobwOper) GetApplicationJitter() uint32 {
	if m != nil {
		return m.ApplicationJitter
	}
	return 0
}

func (m *MplsTeTunnelsAutobwOper) GetTimeLeftApplication() uint32 {
	if m != nil {
		return m.TimeLeftApplication
	}
	return 0
}

func (m *MplsTeTunnelsAutobwOper) GetSamplesCollected() uint32 {
	if m != nil {
		return m.SamplesCollected
	}
	return 0
}

func (m *MplsTeTunnelsAutobwOper) GetTimeLeftCollection() uint32 {
	if m != nil {
		return m.TimeLeftCollection
	}
	return 0
}

func (m *MplsTeTunnelsAutobwOper) GetHighestBandwidth() uint32 {
	if m != nil {
		return m.HighestBandwidth
	}
	return 0
}

func (m *MplsTeTunnelsAutobwOper) GetUnderflowHighestBandwidth() uint32 {
	if m != nil {
		return m.UnderflowHighestBandwidth
	}
	return 0
}

func (m *MplsTeTunnelsAutobwOper) GetThresholdOverflows() uint32 {
	if m != nil {
		return m.ThresholdOverflows
	}
	return 0
}

func (m *MplsTeTunnelsAutobwOper) GetOverflowEarlyBwApplications() uint32 {
	if m != nil {
		return m.OverflowEarlyBwApplications
	}
	return 0
}

func (m *MplsTeTunnelsAutobwOper) GetThresholdUnderflows() uint32 {
	if m != nil {
		return m.ThresholdUnderflows
	}
	return 0
}

func (m *MplsTeTunnelsAutobwOper) GetUnderflowEarlyBwApplications() uint32 {
	if m != nil {
		return m.UnderflowEarlyBwApplications
	}
	return 0
}

func (m *MplsTeTunnelsAutobwOper) GetCollectOnlyRequestedBandwidth() uint32 {
	if m != nil {
		return m.CollectOnlyRequestedBandwidth
	}
	return 0
}

func (m *MplsTeTunnelsAutobwOper) GetApplicationRejectReason() string {
	if m != nil {
		return m.ApplicationRejectReason
	}
	return ""
}

func (m *MplsTeTunnelsAutobwOper) GetResignalLastBandwidthExpireTime() uint32 {
	if m != nil {
		return m.ResignalLastBandwidthExpireTime
	}
	return 0
}

type MplsTeP2PInfoBag struct {
	AutoBandwidthStatus  *MplsTeTunnelsAutobwStatus `protobuf:"bytes,1,opt,name=auto_bandwidth_status,json=autoBandwidthStatus,proto3" json:"auto_bandwidth_status,omitempty"`
	AutoBandwidthConfig  *MplsTeTunnelsAutobwConfig `protobuf:"bytes,2,opt,name=auto_bandwidth_config,json=autoBandwidthConfig,proto3" json:"auto_bandwidth_config,omitempty"`
	AutoBandwidthOper    *MplsTeTunnelsAutobwOper   `protobuf:"bytes,3,opt,name=auto_bandwidth_oper,json=autoBandwidthOper,proto3" json:"auto_bandwidth_oper,omitempty"`
	IsBidirectional      bool                       `protobuf:"varint,4,opt,name=is_bidirectional,json=isBidirectional,proto3" json:"is_bidirectional,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *MplsTeP2PInfoBag) Reset()         { *m = MplsTeP2PInfoBag{} }
func (m *MplsTeP2PInfoBag) String() string { return proto.CompactTextString(m) }
func (*MplsTeP2PInfoBag) ProtoMessage()    {}
func (*MplsTeP2PInfoBag) Descriptor() ([]byte, []int) {
	return fileDescriptor_97fd10a364dd9ffd, []int{93}
}

func (m *MplsTeP2PInfoBag) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsTeP2PInfoBag.Unmarshal(m, b)
}
func (m *MplsTeP2PInfoBag) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsTeP2PInfoBag.Marshal(b, m, deterministic)
}
func (m *MplsTeP2PInfoBag) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsTeP2PInfoBag.Merge(m, src)
}
func (m *MplsTeP2PInfoBag) XXX_Size() int {
	return xxx_messageInfo_MplsTeP2PInfoBag.Size(m)
}
func (m *MplsTeP2PInfoBag) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsTeP2PInfoBag.DiscardUnknown(m)
}

var xxx_messageInfo_MplsTeP2PInfoBag proto.InternalMessageInfo

func (m *MplsTeP2PInfoBag) GetAutoBandwidthStatus() *MplsTeTunnelsAutobwStatus {
	if m != nil {
		return m.AutoBandwidthStatus
	}
	return nil
}

func (m *MplsTeP2PInfoBag) GetAutoBandwidthConfig() *MplsTeTunnelsAutobwConfig {
	if m != nil {
		return m.AutoBandwidthConfig
	}
	return nil
}

func (m *MplsTeP2PInfoBag) GetAutoBandwidthOper() *MplsTeTunnelsAutobwOper {
	if m != nil {
		return m.AutoBandwidthOper
	}
	return nil
}

func (m *MplsTeP2PInfoBag) GetIsBidirectional() bool {
	if m != nil {
		return m.IsBidirectional
	}
	return false
}

type MplsTeAutocapacityConfig struct {
	MinimumClones        uint32   `protobuf:"varint,1,opt,name=minimum_clones,json=minimumClones,proto3" json:"minimum_clones,omitempty"`
	MaximumClones        uint32   `protobuf:"varint,2,opt,name=maximum_clones,json=maximumClones,proto3" json:"maximum_clones,omitempty"`
	MergeBandwidth       uint32   `protobuf:"varint,3,opt,name=merge_bandwidth,json=mergeBandwidth,proto3" json:"merge_bandwidth,omitempty"`
	SplitBandwidth       uint32   `protobuf:"varint,4,opt,name=split_bandwidth,json=splitBandwidth,proto3" json:"split_bandwidth,omitempty"`
	NominalBandwidth     uint32   `protobuf:"varint,5,opt,name=nominal_bandwidth,json=nominalBandwidth,proto3" json:"nominal_bandwidth,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MplsTeAutocapacityConfig) Reset()         { *m = MplsTeAutocapacityConfig{} }
func (m *MplsTeAutocapacityConfig) String() string { return proto.CompactTextString(m) }
func (*MplsTeAutocapacityConfig) ProtoMessage()    {}
func (*MplsTeAutocapacityConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_97fd10a364dd9ffd, []int{94}
}

func (m *MplsTeAutocapacityConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsTeAutocapacityConfig.Unmarshal(m, b)
}
func (m *MplsTeAutocapacityConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsTeAutocapacityConfig.Marshal(b, m, deterministic)
}
func (m *MplsTeAutocapacityConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsTeAutocapacityConfig.Merge(m, src)
}
func (m *MplsTeAutocapacityConfig) XXX_Size() int {
	return xxx_messageInfo_MplsTeAutocapacityConfig.Size(m)
}
func (m *MplsTeAutocapacityConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsTeAutocapacityConfig.DiscardUnknown(m)
}

var xxx_messageInfo_MplsTeAutocapacityConfig proto.InternalMessageInfo

func (m *MplsTeAutocapacityConfig) GetMinimumClones() uint32 {
	if m != nil {
		return m.MinimumClones
	}
	return 0
}

func (m *MplsTeAutocapacityConfig) GetMaximumClones() uint32 {
	if m != nil {
		return m.MaximumClones
	}
	return 0
}

func (m *MplsTeAutocapacityConfig) GetMergeBandwidth() uint32 {
	if m != nil {
		return m.MergeBandwidth
	}
	return 0
}

func (m *MplsTeAutocapacityConfig) GetSplitBandwidth() uint32 {
	if m != nil {
		return m.SplitBandwidth
	}
	return 0
}

func (m *MplsTeAutocapacityConfig) GetNominalBandwidth() uint32 {
	if m != nil {
		return m.NominalBandwidth
	}
	return 0
}

type MplsTeAutocapacityStats struct {
	Splits               uint32   `protobuf:"varint,1,opt,name=splits,proto3" json:"splits,omitempty"`
	Merges               uint32   `protobuf:"varint,2,opt,name=merges,proto3" json:"merges,omitempty"`
	TotalClonesCreated   uint32   `protobuf:"varint,3,opt,name=total_clones_created,json=totalClonesCreated,proto3" json:"total_clones_created,omitempty"`
	TotalClonesDeleted   uint32   `protobuf:"varint,4,opt,name=total_clones_deleted,json=totalClonesDeleted,proto3" json:"total_clones_deleted,omitempty"`
	HighWatermarkClones  uint32   `protobuf:"varint,5,opt,name=high_watermark_clones,json=highWatermarkClones,proto3" json:"high_watermark_clones,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MplsTeAutocapacityStats) Reset()         { *m = MplsTeAutocapacityStats{} }
func (m *MplsTeAutocapacityStats) String() string { return proto.CompactTextString(m) }
func (*MplsTeAutocapacityStats) ProtoMessage()    {}
func (*MplsTeAutocapacityStats) Descriptor() ([]byte, []int) {
	return fileDescriptor_97fd10a364dd9ffd, []int{95}
}

func (m *MplsTeAutocapacityStats) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsTeAutocapacityStats.Unmarshal(m, b)
}
func (m *MplsTeAutocapacityStats) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsTeAutocapacityStats.Marshal(b, m, deterministic)
}
func (m *MplsTeAutocapacityStats) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsTeAutocapacityStats.Merge(m, src)
}
func (m *MplsTeAutocapacityStats) XXX_Size() int {
	return xxx_messageInfo_MplsTeAutocapacityStats.Size(m)
}
func (m *MplsTeAutocapacityStats) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsTeAutocapacityStats.DiscardUnknown(m)
}

var xxx_messageInfo_MplsTeAutocapacityStats proto.InternalMessageInfo

func (m *MplsTeAutocapacityStats) GetSplits() uint32 {
	if m != nil {
		return m.Splits
	}
	return 0
}

func (m *MplsTeAutocapacityStats) GetMerges() uint32 {
	if m != nil {
		return m.Merges
	}
	return 0
}

func (m *MplsTeAutocapacityStats) GetTotalClonesCreated() uint32 {
	if m != nil {
		return m.TotalClonesCreated
	}
	return 0
}

func (m *MplsTeAutocapacityStats) GetTotalClonesDeleted() uint32 {
	if m != nil {
		return m.TotalClonesDeleted
	}
	return 0
}

func (m *MplsTeAutocapacityStats) GetHighWatermarkClones() uint32 {
	if m != nil {
		return m.HighWatermarkClones
	}
	return 0
}

type MplsTeAutocapacityClone struct {
	Name                   string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	CreationTimestamp      uint32   `protobuf:"varint,2,opt,name=creation_timestamp,json=creationTimestamp,proto3" json:"creation_timestamp,omitempty"`
	State                  string   `protobuf:"bytes,3,opt,name=state,proto3" json:"state,omitempty"`
	SignaledBandwidth      uint32   `protobuf:"varint,4,opt,name=signaled_bandwidth,json=signaledBandwidth,proto3" json:"signaled_bandwidth,omitempty"`
	CurrentBandwidthDemand uint32   `protobuf:"varint,5,opt,name=current_bandwidth_demand,json=currentBandwidthDemand,proto3" json:"current_bandwidth_demand,omitempty"`
	XXX_NoUnkeyedLiteral   struct{} `json:"-"`
	XXX_unrecognized       []byte   `json:"-"`
	XXX_sizecache          int32    `json:"-"`
}

func (m *MplsTeAutocapacityClone) Reset()         { *m = MplsTeAutocapacityClone{} }
func (m *MplsTeAutocapacityClone) String() string { return proto.CompactTextString(m) }
func (*MplsTeAutocapacityClone) ProtoMessage()    {}
func (*MplsTeAutocapacityClone) Descriptor() ([]byte, []int) {
	return fileDescriptor_97fd10a364dd9ffd, []int{96}
}

func (m *MplsTeAutocapacityClone) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsTeAutocapacityClone.Unmarshal(m, b)
}
func (m *MplsTeAutocapacityClone) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsTeAutocapacityClone.Marshal(b, m, deterministic)
}
func (m *MplsTeAutocapacityClone) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsTeAutocapacityClone.Merge(m, src)
}
func (m *MplsTeAutocapacityClone) XXX_Size() int {
	return xxx_messageInfo_MplsTeAutocapacityClone.Size(m)
}
func (m *MplsTeAutocapacityClone) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsTeAutocapacityClone.DiscardUnknown(m)
}

var xxx_messageInfo_MplsTeAutocapacityClone proto.InternalMessageInfo

func (m *MplsTeAutocapacityClone) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *MplsTeAutocapacityClone) GetCreationTimestamp() uint32 {
	if m != nil {
		return m.CreationTimestamp
	}
	return 0
}

func (m *MplsTeAutocapacityClone) GetState() string {
	if m != nil {
		return m.State
	}
	return ""
}

func (m *MplsTeAutocapacityClone) GetSignaledBandwidth() uint32 {
	if m != nil {
		return m.SignaledBandwidth
	}
	return 0
}

func (m *MplsTeAutocapacityClone) GetCurrentBandwidthDemand() uint32 {
	if m != nil {
		return m.CurrentBandwidthDemand
	}
	return 0
}

type MplsTeAutocapacity struct {
	AutoCapacityConfiguration *MplsTeAutocapacityConfig  `protobuf:"bytes,1,opt,name=auto_capacity_configuration,json=autoCapacityConfiguration,proto3" json:"auto_capacity_configuration,omitempty"`
	AutoCapacityStats         *MplsTeAutocapacityStats   `protobuf:"bytes,2,opt,name=auto_capacity_stats,json=autoCapacityStats,proto3" json:"auto_capacity_stats,omitempty"`
	Clone                     []*MplsTeAutocapacityClone `protobuf:"bytes,3,rep,name=clone,proto3" json:"clone,omitempty"`
	XXX_NoUnkeyedLiteral      struct{}                   `json:"-"`
	XXX_unrecognized          []byte                     `json:"-"`
	XXX_sizecache             int32                      `json:"-"`
}

func (m *MplsTeAutocapacity) Reset()         { *m = MplsTeAutocapacity{} }
func (m *MplsTeAutocapacity) String() string { return proto.CompactTextString(m) }
func (*MplsTeAutocapacity) ProtoMessage()    {}
func (*MplsTeAutocapacity) Descriptor() ([]byte, []int) {
	return fileDescriptor_97fd10a364dd9ffd, []int{97}
}

func (m *MplsTeAutocapacity) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsTeAutocapacity.Unmarshal(m, b)
}
func (m *MplsTeAutocapacity) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsTeAutocapacity.Marshal(b, m, deterministic)
}
func (m *MplsTeAutocapacity) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsTeAutocapacity.Merge(m, src)
}
func (m *MplsTeAutocapacity) XXX_Size() int {
	return xxx_messageInfo_MplsTeAutocapacity.Size(m)
}
func (m *MplsTeAutocapacity) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsTeAutocapacity.DiscardUnknown(m)
}

var xxx_messageInfo_MplsTeAutocapacity proto.InternalMessageInfo

func (m *MplsTeAutocapacity) GetAutoCapacityConfiguration() *MplsTeAutocapacityConfig {
	if m != nil {
		return m.AutoCapacityConfiguration
	}
	return nil
}

func (m *MplsTeAutocapacity) GetAutoCapacityStats() *MplsTeAutocapacityStats {
	if m != nil {
		return m.AutoCapacityStats
	}
	return nil
}

func (m *MplsTeAutocapacity) GetClone() []*MplsTeAutocapacityClone {
	if m != nil {
		return m.Clone
	}
	return nil
}

type MplsTeTunnelsHistoryCurrentConnected struct {
	CurrentLspUptime     uint32   `protobuf:"varint,1,opt,name=current_lsp_uptime,json=currentLspUptime,proto3" json:"current_lsp_uptime,omitempty"`
	CurrentUptime        uint32   `protobuf:"varint,2,opt,name=current_uptime,json=currentUptime,proto3" json:"current_uptime,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MplsTeTunnelsHistoryCurrentConnected) Reset()         { *m = MplsTeTunnelsHistoryCurrentConnected{} }
func (m *MplsTeTunnelsHistoryCurrentConnected) String() string { return proto.CompactTextString(m) }
func (*MplsTeTunnelsHistoryCurrentConnected) ProtoMessage()    {}
func (*MplsTeTunnelsHistoryCurrentConnected) Descriptor() ([]byte, []int) {
	return fileDescriptor_97fd10a364dd9ffd, []int{98}
}

func (m *MplsTeTunnelsHistoryCurrentConnected) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsTeTunnelsHistoryCurrentConnected.Unmarshal(m, b)
}
func (m *MplsTeTunnelsHistoryCurrentConnected) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsTeTunnelsHistoryCurrentConnected.Marshal(b, m, deterministic)
}
func (m *MplsTeTunnelsHistoryCurrentConnected) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsTeTunnelsHistoryCurrentConnected.Merge(m, src)
}
func (m *MplsTeTunnelsHistoryCurrentConnected) XXX_Size() int {
	return xxx_messageInfo_MplsTeTunnelsHistoryCurrentConnected.Size(m)
}
func (m *MplsTeTunnelsHistoryCurrentConnected) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsTeTunnelsHistoryCurrentConnected.DiscardUnknown(m)
}

var xxx_messageInfo_MplsTeTunnelsHistoryCurrentConnected proto.InternalMessageInfo

func (m *MplsTeTunnelsHistoryCurrentConnected) GetCurrentLspUptime() uint32 {
	if m != nil {
		return m.CurrentLspUptime
	}
	return 0
}

func (m *MplsTeTunnelsHistoryCurrentConnected) GetCurrentUptime() uint32 {
	if m != nil {
		return m.CurrentUptime
	}
	return 0
}

type MplsTeTunnelsHistoryCurrent struct {
	ConnectedUptimes      *MplsTeTunnelsHistoryCurrentConnected `protobuf:"bytes,1,opt,name=connected_uptimes,json=connectedUptimes,proto3" json:"connected_uptimes,omitempty"`
	CurrentSetupTimer     uint32                                `protobuf:"varint,2,opt,name=current_setup_timer,json=currentSetupTimer,proto3" json:"current_setup_timer,omitempty"`
	SelectionReason       string                                `protobuf:"bytes,3,opt,name=selection_reason,json=selectionReason,proto3" json:"selection_reason,omitempty"`
	CurrentSetupLastError string                                `protobuf:"bytes,4,opt,name=current_setup_last_error,json=currentSetupLastError,proto3" json:"current_setup_last_error,omitempty"`
	ProtectionRole        string                                `protobuf:"bytes,5,opt,name=protection_role,json=protectionRole,proto3" json:"protection_role,omitempty"`
	XXX_NoUnkeyedLiteral  struct{}                              `json:"-"`
	XXX_unrecognized      []byte                                `json:"-"`
	XXX_sizecache         int32                                 `json:"-"`
}

func (m *MplsTeTunnelsHistoryCurrent) Reset()         { *m = MplsTeTunnelsHistoryCurrent{} }
func (m *MplsTeTunnelsHistoryCurrent) String() string { return proto.CompactTextString(m) }
func (*MplsTeTunnelsHistoryCurrent) ProtoMessage()    {}
func (*MplsTeTunnelsHistoryCurrent) Descriptor() ([]byte, []int) {
	return fileDescriptor_97fd10a364dd9ffd, []int{99}
}

func (m *MplsTeTunnelsHistoryCurrent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsTeTunnelsHistoryCurrent.Unmarshal(m, b)
}
func (m *MplsTeTunnelsHistoryCurrent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsTeTunnelsHistoryCurrent.Marshal(b, m, deterministic)
}
func (m *MplsTeTunnelsHistoryCurrent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsTeTunnelsHistoryCurrent.Merge(m, src)
}
func (m *MplsTeTunnelsHistoryCurrent) XXX_Size() int {
	return xxx_messageInfo_MplsTeTunnelsHistoryCurrent.Size(m)
}
func (m *MplsTeTunnelsHistoryCurrent) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsTeTunnelsHistoryCurrent.DiscardUnknown(m)
}

var xxx_messageInfo_MplsTeTunnelsHistoryCurrent proto.InternalMessageInfo

func (m *MplsTeTunnelsHistoryCurrent) GetConnectedUptimes() *MplsTeTunnelsHistoryCurrentConnected {
	if m != nil {
		return m.ConnectedUptimes
	}
	return nil
}

func (m *MplsTeTunnelsHistoryCurrent) GetCurrentSetupTimer() uint32 {
	if m != nil {
		return m.CurrentSetupTimer
	}
	return 0
}

func (m *MplsTeTunnelsHistoryCurrent) GetSelectionReason() string {
	if m != nil {
		return m.SelectionReason
	}
	return ""
}

func (m *MplsTeTunnelsHistoryCurrent) GetCurrentSetupLastError() string {
	if m != nil {
		return m.CurrentSetupLastError
	}
	return ""
}

func (m *MplsTeTunnelsHistoryCurrent) GetProtectionRole() string {
	if m != nil {
		return m.ProtectionRole
	}
	return ""
}

type MplsTeTunnelsHistoryReopt struct {
	ReoptimizedSetupUptime    uint32   `protobuf:"varint,1,opt,name=reoptimized_setup_uptime,json=reoptimizedSetupUptime,proto3" json:"reoptimized_setup_uptime,omitempty"`
	ReoptimizedSetupTimer     uint32   `protobuf:"varint,2,opt,name=reoptimized_setup_timer,json=reoptimizedSetupTimer,proto3" json:"reoptimized_setup_timer,omitempty"`
	ReoptimizedSetupLastError string   `protobuf:"bytes,3,opt,name=reoptimized_setup_last_error,json=reoptimizedSetupLastError,proto3" json:"reoptimized_setup_last_error,omitempty"`
	ProtectionRole            string   `protobuf:"bytes,4,opt,name=protection_role,json=protectionRole,proto3" json:"protection_role,omitempty"`
	XXX_NoUnkeyedLiteral      struct{} `json:"-"`
	XXX_unrecognized          []byte   `json:"-"`
	XXX_sizecache             int32    `json:"-"`
}

func (m *MplsTeTunnelsHistoryReopt) Reset()         { *m = MplsTeTunnelsHistoryReopt{} }
func (m *MplsTeTunnelsHistoryReopt) String() string { return proto.CompactTextString(m) }
func (*MplsTeTunnelsHistoryReopt) ProtoMessage()    {}
func (*MplsTeTunnelsHistoryReopt) Descriptor() ([]byte, []int) {
	return fileDescriptor_97fd10a364dd9ffd, []int{100}
}

func (m *MplsTeTunnelsHistoryReopt) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsTeTunnelsHistoryReopt.Unmarshal(m, b)
}
func (m *MplsTeTunnelsHistoryReopt) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsTeTunnelsHistoryReopt.Marshal(b, m, deterministic)
}
func (m *MplsTeTunnelsHistoryReopt) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsTeTunnelsHistoryReopt.Merge(m, src)
}
func (m *MplsTeTunnelsHistoryReopt) XXX_Size() int {
	return xxx_messageInfo_MplsTeTunnelsHistoryReopt.Size(m)
}
func (m *MplsTeTunnelsHistoryReopt) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsTeTunnelsHistoryReopt.DiscardUnknown(m)
}

var xxx_messageInfo_MplsTeTunnelsHistoryReopt proto.InternalMessageInfo

func (m *MplsTeTunnelsHistoryReopt) GetReoptimizedSetupUptime() uint32 {
	if m != nil {
		return m.ReoptimizedSetupUptime
	}
	return 0
}

func (m *MplsTeTunnelsHistoryReopt) GetReoptimizedSetupTimer() uint32 {
	if m != nil {
		return m.ReoptimizedSetupTimer
	}
	return 0
}

func (m *MplsTeTunnelsHistoryReopt) GetReoptimizedSetupLastError() string {
	if m != nil {
		return m.ReoptimizedSetupLastError
	}
	return ""
}

func (m *MplsTeTunnelsHistoryReopt) GetProtectionRole() string {
	if m != nil {
		return m.ProtectionRole
	}
	return ""
}

type MplsTeTunnelsHistoryPathProtect struct {
	ProtectingSetupUptime    uint32   `protobuf:"varint,1,opt,name=protecting_setup_uptime,json=protectingSetupUptime,proto3" json:"protecting_setup_uptime,omitempty"`
	ProtectingSetupTimer     uint32   `protobuf:"varint,2,opt,name=protecting_setup_timer,json=protectingSetupTimer,proto3" json:"protecting_setup_timer,omitempty"`
	ProtectingSetupLastError string   `protobuf:"bytes,3,opt,name=protecting_setup_last_error,json=protectingSetupLastError,proto3" json:"protecting_setup_last_error,omitempty"`
	XXX_NoUnkeyedLiteral     struct{} `json:"-"`
	XXX_unrecognized         []byte   `json:"-"`
	XXX_sizecache            int32    `json:"-"`
}

func (m *MplsTeTunnelsHistoryPathProtect) Reset()         { *m = MplsTeTunnelsHistoryPathProtect{} }
func (m *MplsTeTunnelsHistoryPathProtect) String() string { return proto.CompactTextString(m) }
func (*MplsTeTunnelsHistoryPathProtect) ProtoMessage()    {}
func (*MplsTeTunnelsHistoryPathProtect) Descriptor() ([]byte, []int) {
	return fileDescriptor_97fd10a364dd9ffd, []int{101}
}

func (m *MplsTeTunnelsHistoryPathProtect) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsTeTunnelsHistoryPathProtect.Unmarshal(m, b)
}
func (m *MplsTeTunnelsHistoryPathProtect) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsTeTunnelsHistoryPathProtect.Marshal(b, m, deterministic)
}
func (m *MplsTeTunnelsHistoryPathProtect) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsTeTunnelsHistoryPathProtect.Merge(m, src)
}
func (m *MplsTeTunnelsHistoryPathProtect) XXX_Size() int {
	return xxx_messageInfo_MplsTeTunnelsHistoryPathProtect.Size(m)
}
func (m *MplsTeTunnelsHistoryPathProtect) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsTeTunnelsHistoryPathProtect.DiscardUnknown(m)
}

var xxx_messageInfo_MplsTeTunnelsHistoryPathProtect proto.InternalMessageInfo

func (m *MplsTeTunnelsHistoryPathProtect) GetProtectingSetupUptime() uint32 {
	if m != nil {
		return m.ProtectingSetupUptime
	}
	return 0
}

func (m *MplsTeTunnelsHistoryPathProtect) GetProtectingSetupTimer() uint32 {
	if m != nil {
		return m.ProtectingSetupTimer
	}
	return 0
}

func (m *MplsTeTunnelsHistoryPathProtect) GetProtectingSetupLastError() string {
	if m != nil {
		return m.ProtectingSetupLastError
	}
	return ""
}

type MplsTeTunnelsHistoryPrevious struct {
	PreviousPathOption     string   `protobuf:"bytes,1,opt,name=previous_path_option,json=previousPathOption,proto3" json:"previous_path_option,omitempty"`
	PreviousTunnelInstance uint32   `protobuf:"varint,2,opt,name=previous_tunnel_instance,json=previousTunnelInstance,proto3" json:"previous_tunnel_instance,omitempty"`
	PreviousFailReason     string   `protobuf:"bytes,3,opt,name=previous_fail_reason,json=previousFailReason,proto3" json:"previous_fail_reason,omitempty"`
	PreviousSetupLastError string   `protobuf:"bytes,4,opt,name=previous_setup_last_error,json=previousSetupLastError,proto3" json:"previous_setup_last_error,omitempty"`
	XXX_NoUnkeyedLiteral   struct{} `json:"-"`
	XXX_unrecognized       []byte   `json:"-"`
	XXX_sizecache          int32    `json:"-"`
}

func (m *MplsTeTunnelsHistoryPrevious) Reset()         { *m = MplsTeTunnelsHistoryPrevious{} }
func (m *MplsTeTunnelsHistoryPrevious) String() string { return proto.CompactTextString(m) }
func (*MplsTeTunnelsHistoryPrevious) ProtoMessage()    {}
func (*MplsTeTunnelsHistoryPrevious) Descriptor() ([]byte, []int) {
	return fileDescriptor_97fd10a364dd9ffd, []int{102}
}

func (m *MplsTeTunnelsHistoryPrevious) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsTeTunnelsHistoryPrevious.Unmarshal(m, b)
}
func (m *MplsTeTunnelsHistoryPrevious) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsTeTunnelsHistoryPrevious.Marshal(b, m, deterministic)
}
func (m *MplsTeTunnelsHistoryPrevious) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsTeTunnelsHistoryPrevious.Merge(m, src)
}
func (m *MplsTeTunnelsHistoryPrevious) XXX_Size() int {
	return xxx_messageInfo_MplsTeTunnelsHistoryPrevious.Size(m)
}
func (m *MplsTeTunnelsHistoryPrevious) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsTeTunnelsHistoryPrevious.DiscardUnknown(m)
}

var xxx_messageInfo_MplsTeTunnelsHistoryPrevious proto.InternalMessageInfo

func (m *MplsTeTunnelsHistoryPrevious) GetPreviousPathOption() string {
	if m != nil {
		return m.PreviousPathOption
	}
	return ""
}

func (m *MplsTeTunnelsHistoryPrevious) GetPreviousTunnelInstance() uint32 {
	if m != nil {
		return m.PreviousTunnelInstance
	}
	return 0
}

func (m *MplsTeTunnelsHistoryPrevious) GetPreviousFailReason() string {
	if m != nil {
		return m.PreviousFailReason
	}
	return ""
}

func (m *MplsTeTunnelsHistoryPrevious) GetPreviousSetupLastError() string {
	if m != nil {
		return m.PreviousSetupLastError
	}
	return ""
}

type MplsTeTunnelsHistoryPreviousProtect struct {
	PreviousProtectPathOption     string   `protobuf:"bytes,1,opt,name=previous_protect_path_option,json=previousProtectPathOption,proto3" json:"previous_protect_path_option,omitempty"`
	PreviousProtectTunnelInstance uint32   `protobuf:"varint,2,opt,name=previous_protect_tunnel_instance,json=previousProtectTunnelInstance,proto3" json:"previous_protect_tunnel_instance,omitempty"`
	PreviousProtectFailReason     string   `protobuf:"bytes,3,opt,name=previous_protect_fail_reason,json=previousProtectFailReason,proto3" json:"previous_protect_fail_reason,omitempty"`
	PreviousProtectSetupLastError string   `protobuf:"bytes,4,opt,name=previous_protect_setup_last_error,json=previousProtectSetupLastError,proto3" json:"previous_protect_setup_last_error,omitempty"`
	XXX_NoUnkeyedLiteral          struct{} `json:"-"`
	XXX_unrecognized              []byte   `json:"-"`
	XXX_sizecache                 int32    `json:"-"`
}

func (m *MplsTeTunnelsHistoryPreviousProtect) Reset()         { *m = MplsTeTunnelsHistoryPreviousProtect{} }
func (m *MplsTeTunnelsHistoryPreviousProtect) String() string { return proto.CompactTextString(m) }
func (*MplsTeTunnelsHistoryPreviousProtect) ProtoMessage()    {}
func (*MplsTeTunnelsHistoryPreviousProtect) Descriptor() ([]byte, []int) {
	return fileDescriptor_97fd10a364dd9ffd, []int{103}
}

func (m *MplsTeTunnelsHistoryPreviousProtect) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsTeTunnelsHistoryPreviousProtect.Unmarshal(m, b)
}
func (m *MplsTeTunnelsHistoryPreviousProtect) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsTeTunnelsHistoryPreviousProtect.Marshal(b, m, deterministic)
}
func (m *MplsTeTunnelsHistoryPreviousProtect) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsTeTunnelsHistoryPreviousProtect.Merge(m, src)
}
func (m *MplsTeTunnelsHistoryPreviousProtect) XXX_Size() int {
	return xxx_messageInfo_MplsTeTunnelsHistoryPreviousProtect.Size(m)
}
func (m *MplsTeTunnelsHistoryPreviousProtect) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsTeTunnelsHistoryPreviousProtect.DiscardUnknown(m)
}

var xxx_messageInfo_MplsTeTunnelsHistoryPreviousProtect proto.InternalMessageInfo

func (m *MplsTeTunnelsHistoryPreviousProtect) GetPreviousProtectPathOption() string {
	if m != nil {
		return m.PreviousProtectPathOption
	}
	return ""
}

func (m *MplsTeTunnelsHistoryPreviousProtect) GetPreviousProtectTunnelInstance() uint32 {
	if m != nil {
		return m.PreviousProtectTunnelInstance
	}
	return 0
}

func (m *MplsTeTunnelsHistoryPreviousProtect) GetPreviousProtectFailReason() string {
	if m != nil {
		return m.PreviousProtectFailReason
	}
	return ""
}

func (m *MplsTeTunnelsHistoryPreviousProtect) GetPreviousProtectSetupLastError() string {
	if m != nil {
		return m.PreviousProtectSetupLastError
	}
	return ""
}

type MplsTeTunnelsHistoryOtherSetup struct {
	PathOptionIndex      uint32   `protobuf:"varint,1,opt,name=path_option_index,json=pathOptionIndex,proto3" json:"path_option_index,omitempty"`
	OtherSetupError      string   `protobuf:"bytes,2,opt,name=other_setup_error,json=otherSetupError,proto3" json:"other_setup_error,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MplsTeTunnelsHistoryOtherSetup) Reset()         { *m = MplsTeTunnelsHistoryOtherSetup{} }
func (m *MplsTeTunnelsHistoryOtherSetup) String() string { return proto.CompactTextString(m) }
func (*MplsTeTunnelsHistoryOtherSetup) ProtoMessage()    {}
func (*MplsTeTunnelsHistoryOtherSetup) Descriptor() ([]byte, []int) {
	return fileDescriptor_97fd10a364dd9ffd, []int{104}
}

func (m *MplsTeTunnelsHistoryOtherSetup) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsTeTunnelsHistoryOtherSetup.Unmarshal(m, b)
}
func (m *MplsTeTunnelsHistoryOtherSetup) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsTeTunnelsHistoryOtherSetup.Marshal(b, m, deterministic)
}
func (m *MplsTeTunnelsHistoryOtherSetup) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsTeTunnelsHistoryOtherSetup.Merge(m, src)
}
func (m *MplsTeTunnelsHistoryOtherSetup) XXX_Size() int {
	return xxx_messageInfo_MplsTeTunnelsHistoryOtherSetup.Size(m)
}
func (m *MplsTeTunnelsHistoryOtherSetup) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsTeTunnelsHistoryOtherSetup.DiscardUnknown(m)
}

var xxx_messageInfo_MplsTeTunnelsHistoryOtherSetup proto.InternalMessageInfo

func (m *MplsTeTunnelsHistoryOtherSetup) GetPathOptionIndex() uint32 {
	if m != nil {
		return m.PathOptionIndex
	}
	return 0
}

func (m *MplsTeTunnelsHistoryOtherSetup) GetOtherSetupError() string {
	if m != nil {
		return m.OtherSetupError
	}
	return ""
}

type MplsTeTunnelsHistoryStandbySetup struct {
	StandbyLspUptime     uint32   `protobuf:"varint,1,opt,name=standby_lsp_uptime,json=standbyLspUptime,proto3" json:"standby_lsp_uptime,omitempty"`
	StandbySetupTimer    uint32   `protobuf:"varint,2,opt,name=standby_setup_timer,json=standbySetupTimer,proto3" json:"standby_setup_timer,omitempty"`
	ProtectionRole       string   `protobuf:"bytes,3,opt,name=protection_role,json=protectionRole,proto3" json:"protection_role,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MplsTeTunnelsHistoryStandbySetup) Reset()         { *m = MplsTeTunnelsHistoryStandbySetup{} }
func (m *MplsTeTunnelsHistoryStandbySetup) String() string { return proto.CompactTextString(m) }
func (*MplsTeTunnelsHistoryStandbySetup) ProtoMessage()    {}
func (*MplsTeTunnelsHistoryStandbySetup) Descriptor() ([]byte, []int) {
	return fileDescriptor_97fd10a364dd9ffd, []int{105}
}

func (m *MplsTeTunnelsHistoryStandbySetup) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsTeTunnelsHistoryStandbySetup.Unmarshal(m, b)
}
func (m *MplsTeTunnelsHistoryStandbySetup) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsTeTunnelsHistoryStandbySetup.Marshal(b, m, deterministic)
}
func (m *MplsTeTunnelsHistoryStandbySetup) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsTeTunnelsHistoryStandbySetup.Merge(m, src)
}
func (m *MplsTeTunnelsHistoryStandbySetup) XXX_Size() int {
	return xxx_messageInfo_MplsTeTunnelsHistoryStandbySetup.Size(m)
}
func (m *MplsTeTunnelsHistoryStandbySetup) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsTeTunnelsHistoryStandbySetup.DiscardUnknown(m)
}

var xxx_messageInfo_MplsTeTunnelsHistoryStandbySetup proto.InternalMessageInfo

func (m *MplsTeTunnelsHistoryStandbySetup) GetStandbyLspUptime() uint32 {
	if m != nil {
		return m.StandbyLspUptime
	}
	return 0
}

func (m *MplsTeTunnelsHistoryStandbySetup) GetStandbySetupTimer() uint32 {
	if m != nil {
		return m.StandbySetupTimer
	}
	return 0
}

func (m *MplsTeTunnelsHistoryStandbySetup) GetProtectionRole() string {
	if m != nil {
		return m.ProtectionRole
	}
	return ""
}

type MplsTeTunnelsTunnelLastReoptFailInfo struct {
	ReOptLastFailReason    string   `protobuf:"bytes,1,opt,name=re_opt_last_fail_reason,json=reOptLastFailReason,proto3" json:"re_opt_last_fail_reason,omitempty"`
	ReOptFailedDestination string   `protobuf:"bytes,2,opt,name=re_opt_failed_destination,json=reOptFailedDestination,proto3" json:"re_opt_failed_destination,omitempty"`
	ReOptFailedTimestamp   uint32   `protobuf:"varint,3,opt,name=re_opt_failed_timestamp,json=reOptFailedTimestamp,proto3" json:"re_opt_failed_timestamp,omitempty"`
	XXX_NoUnkeyedLiteral   struct{} `json:"-"`
	XXX_unrecognized       []byte   `json:"-"`
	XXX_sizecache          int32    `json:"-"`
}

func (m *MplsTeTunnelsTunnelLastReoptFailInfo) Reset()         { *m = MplsTeTunnelsTunnelLastReoptFailInfo{} }
func (m *MplsTeTunnelsTunnelLastReoptFailInfo) String() string { return proto.CompactTextString(m) }
func (*MplsTeTunnelsTunnelLastReoptFailInfo) ProtoMessage()    {}
func (*MplsTeTunnelsTunnelLastReoptFailInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_97fd10a364dd9ffd, []int{106}
}

func (m *MplsTeTunnelsTunnelLastReoptFailInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsTeTunnelsTunnelLastReoptFailInfo.Unmarshal(m, b)
}
func (m *MplsTeTunnelsTunnelLastReoptFailInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsTeTunnelsTunnelLastReoptFailInfo.Marshal(b, m, deterministic)
}
func (m *MplsTeTunnelsTunnelLastReoptFailInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsTeTunnelsTunnelLastReoptFailInfo.Merge(m, src)
}
func (m *MplsTeTunnelsTunnelLastReoptFailInfo) XXX_Size() int {
	return xxx_messageInfo_MplsTeTunnelsTunnelLastReoptFailInfo.Size(m)
}
func (m *MplsTeTunnelsTunnelLastReoptFailInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsTeTunnelsTunnelLastReoptFailInfo.DiscardUnknown(m)
}

var xxx_messageInfo_MplsTeTunnelsTunnelLastReoptFailInfo proto.InternalMessageInfo

func (m *MplsTeTunnelsTunnelLastReoptFailInfo) GetReOptLastFailReason() string {
	if m != nil {
		return m.ReOptLastFailReason
	}
	return ""
}

func (m *MplsTeTunnelsTunnelLastReoptFailInfo) GetReOptFailedDestination() string {
	if m != nil {
		return m.ReOptFailedDestination
	}
	return ""
}

func (m *MplsTeTunnelsTunnelLastReoptFailInfo) GetReOptFailedTimestamp() uint32 {
	if m != nil {
		return m.ReOptFailedTimestamp
	}
	return 0
}

type MplsTeTunnelsHistoryBag struct {
	CurrentSetup                  *MplsTeTunnelsHistoryCurrent          `protobuf:"bytes,1,opt,name=current_setup,json=currentSetup,proto3" json:"current_setup,omitempty"`
	ReoptSetup                    *MplsTeTunnelsHistoryReopt            `protobuf:"bytes,2,opt,name=reopt_setup,json=reoptSetup,proto3" json:"reopt_setup,omitempty"`
	GmplsPathProtectSetup         *MplsTeTunnelsHistoryPathProtect      `protobuf:"bytes,3,opt,name=gmpls_path_protect_setup,json=gmplsPathProtectSetup,proto3" json:"gmpls_path_protect_setup,omitempty"`
	PreviousSetup                 *MplsTeTunnelsHistoryPrevious         `protobuf:"bytes,4,opt,name=previous_setup,json=previousSetup,proto3" json:"previous_setup,omitempty"`
	PreviousGmplsPathProtectSetup *MplsTeTunnelsHistoryPreviousProtect  `protobuf:"bytes,5,opt,name=previous_gmpls_path_protect_setup,json=previousGmplsPathProtectSetup,proto3" json:"previous_gmpls_path_protect_setup,omitempty"`
	GmplsOtherSetup               *MplsTeTunnelsHistoryOtherSetup       `protobuf:"bytes,6,opt,name=gmpls_other_setup,json=gmplsOtherSetup,proto3" json:"gmpls_other_setup,omitempty"`
	GmplsOtherProtectSetup        *MplsTeTunnelsHistoryOtherSetup       `protobuf:"bytes,7,opt,name=gmpls_other_protect_setup,json=gmplsOtherProtectSetup,proto3" json:"gmpls_other_protect_setup,omitempty"`
	StandbySetup                  *MplsTeTunnelsHistoryStandbySetup     `protobuf:"bytes,8,opt,name=standby_setup,json=standbySetup,proto3" json:"standby_setup,omitempty"`
	StandbyReoptSetup             *MplsTeTunnelsHistoryReopt            `protobuf:"bytes,9,opt,name=standby_reopt_setup,json=standbyReoptSetup,proto3" json:"standby_reopt_setup,omitempty"`
	LastReOptFail                 *MplsTeTunnelsTunnelLastReoptFailInfo `protobuf:"bytes,10,opt,name=last_re_opt_fail,json=lastReOptFail,proto3" json:"last_re_opt_fail,omitempty"`
	LastStdbyReOptFail            *MplsTeTunnelsTunnelLastReoptFailInfo `protobuf:"bytes,11,opt,name=last_stdby_re_opt_fail,json=lastStdbyReOptFail,proto3" json:"last_stdby_re_opt_fail,omitempty"`
	XXX_NoUnkeyedLiteral          struct{}                              `json:"-"`
	XXX_unrecognized              []byte                                `json:"-"`
	XXX_sizecache                 int32                                 `json:"-"`
}

func (m *MplsTeTunnelsHistoryBag) Reset()         { *m = MplsTeTunnelsHistoryBag{} }
func (m *MplsTeTunnelsHistoryBag) String() string { return proto.CompactTextString(m) }
func (*MplsTeTunnelsHistoryBag) ProtoMessage()    {}
func (*MplsTeTunnelsHistoryBag) Descriptor() ([]byte, []int) {
	return fileDescriptor_97fd10a364dd9ffd, []int{107}
}

func (m *MplsTeTunnelsHistoryBag) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsTeTunnelsHistoryBag.Unmarshal(m, b)
}
func (m *MplsTeTunnelsHistoryBag) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsTeTunnelsHistoryBag.Marshal(b, m, deterministic)
}
func (m *MplsTeTunnelsHistoryBag) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsTeTunnelsHistoryBag.Merge(m, src)
}
func (m *MplsTeTunnelsHistoryBag) XXX_Size() int {
	return xxx_messageInfo_MplsTeTunnelsHistoryBag.Size(m)
}
func (m *MplsTeTunnelsHistoryBag) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsTeTunnelsHistoryBag.DiscardUnknown(m)
}

var xxx_messageInfo_MplsTeTunnelsHistoryBag proto.InternalMessageInfo

func (m *MplsTeTunnelsHistoryBag) GetCurrentSetup() *MplsTeTunnelsHistoryCurrent {
	if m != nil {
		return m.CurrentSetup
	}
	return nil
}

func (m *MplsTeTunnelsHistoryBag) GetReoptSetup() *MplsTeTunnelsHistoryReopt {
	if m != nil {
		return m.ReoptSetup
	}
	return nil
}

func (m *MplsTeTunnelsHistoryBag) GetGmplsPathProtectSetup() *MplsTeTunnelsHistoryPathProtect {
	if m != nil {
		return m.GmplsPathProtectSetup
	}
	return nil
}

func (m *MplsTeTunnelsHistoryBag) GetPreviousSetup() *MplsTeTunnelsHistoryPrevious {
	if m != nil {
		return m.PreviousSetup
	}
	return nil
}

func (m *MplsTeTunnelsHistoryBag) GetPreviousGmplsPathProtectSetup() *MplsTeTunnelsHistoryPreviousProtect {
	if m != nil {
		return m.PreviousGmplsPathProtectSetup
	}
	return nil
}

func (m *MplsTeTunnelsHistoryBag) GetGmplsOtherSetup() *MplsTeTunnelsHistoryOtherSetup {
	if m != nil {
		return m.GmplsOtherSetup
	}
	return nil
}

func (m *MplsTeTunnelsHistoryBag) GetGmplsOtherProtectSetup() *MplsTeTunnelsHistoryOtherSetup {
	if m != nil {
		return m.GmplsOtherProtectSetup
	}
	return nil
}

func (m *MplsTeTunnelsHistoryBag) GetStandbySetup() *MplsTeTunnelsHistoryStandbySetup {
	if m != nil {
		return m.StandbySetup
	}
	return nil
}

func (m *MplsTeTunnelsHistoryBag) GetStandbyReoptSetup() *MplsTeTunnelsHistoryReopt {
	if m != nil {
		return m.StandbyReoptSetup
	}
	return nil
}

func (m *MplsTeTunnelsHistoryBag) GetLastReOptFail() *MplsTeTunnelsTunnelLastReoptFailInfo {
	if m != nil {
		return m.LastReOptFail
	}
	return nil
}

func (m *MplsTeTunnelsHistoryBag) GetLastStdbyReOptFail() *MplsTeTunnelsTunnelLastReoptFailInfo {
	if m != nil {
		return m.LastStdbyReOptFail
	}
	return nil
}

type TePpSwLogEntryBag struct {
	PathProtectionSwitchoverEventIndex uint32   `protobuf:"varint,1,opt,name=path_protection_switchover_event_index,json=pathProtectionSwitchoverEventIndex,proto3" json:"path_protection_switchover_event_index,omitempty"`
	PathProtectionTunnelId             uint32   `protobuf:"varint,2,opt,name=path_protection_tunnel_id,json=pathProtectionTunnelId,proto3" json:"path_protection_tunnel_id,omitempty"`
	FromLspId                          uint32   `protobuf:"varint,3,opt,name=from_lsp_id,json=fromLspId,proto3" json:"from_lsp_id,omitempty"`
	ToLspId                            uint32   `protobuf:"varint,4,opt,name=to_lsp_id,json=toLspId,proto3" json:"to_lsp_id,omitempty"`
	DateOfErrorDetection               uint32   `protobuf:"varint,5,opt,name=date_of_error_detection,json=dateOfErrorDetection,proto3" json:"date_of_error_detection,omitempty"`
	DateOfErrorDetectionMillisec       uint32   `protobuf:"varint,6,opt,name=date_of_error_detection_millisec,json=dateOfErrorDetectionMillisec,proto3" json:"date_of_error_detection_millisec,omitempty"`
	SwitchoverDurationMillisec         uint32   `protobuf:"varint,7,opt,name=switchover_duration_millisec,json=switchoverDurationMillisec,proto3" json:"switchover_duration_millisec,omitempty"`
	PathProtectionSwitchoverReason     string   `protobuf:"bytes,8,opt,name=path_protection_switchover_reason,json=pathProtectionSwitchoverReason,proto3" json:"path_protection_switchover_reason,omitempty"`
	XXX_NoUnkeyedLiteral               struct{} `json:"-"`
	XXX_unrecognized                   []byte   `json:"-"`
	XXX_sizecache                      int32    `json:"-"`
}

func (m *TePpSwLogEntryBag) Reset()         { *m = TePpSwLogEntryBag{} }
func (m *TePpSwLogEntryBag) String() string { return proto.CompactTextString(m) }
func (*TePpSwLogEntryBag) ProtoMessage()    {}
func (*TePpSwLogEntryBag) Descriptor() ([]byte, []int) {
	return fileDescriptor_97fd10a364dd9ffd, []int{108}
}

func (m *TePpSwLogEntryBag) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TePpSwLogEntryBag.Unmarshal(m, b)
}
func (m *TePpSwLogEntryBag) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TePpSwLogEntryBag.Marshal(b, m, deterministic)
}
func (m *TePpSwLogEntryBag) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TePpSwLogEntryBag.Merge(m, src)
}
func (m *TePpSwLogEntryBag) XXX_Size() int {
	return xxx_messageInfo_TePpSwLogEntryBag.Size(m)
}
func (m *TePpSwLogEntryBag) XXX_DiscardUnknown() {
	xxx_messageInfo_TePpSwLogEntryBag.DiscardUnknown(m)
}

var xxx_messageInfo_TePpSwLogEntryBag proto.InternalMessageInfo

func (m *TePpSwLogEntryBag) GetPathProtectionSwitchoverEventIndex() uint32 {
	if m != nil {
		return m.PathProtectionSwitchoverEventIndex
	}
	return 0
}

func (m *TePpSwLogEntryBag) GetPathProtectionTunnelId() uint32 {
	if m != nil {
		return m.PathProtectionTunnelId
	}
	return 0
}

func (m *TePpSwLogEntryBag) GetFromLspId() uint32 {
	if m != nil {
		return m.FromLspId
	}
	return 0
}

func (m *TePpSwLogEntryBag) GetToLspId() uint32 {
	if m != nil {
		return m.ToLspId
	}
	return 0
}

func (m *TePpSwLogEntryBag) GetDateOfErrorDetection() uint32 {
	if m != nil {
		return m.DateOfErrorDetection
	}
	return 0
}

func (m *TePpSwLogEntryBag) GetDateOfErrorDetectionMillisec() uint32 {
	if m != nil {
		return m.DateOfErrorDetectionMillisec
	}
	return 0
}

func (m *TePpSwLogEntryBag) GetSwitchoverDurationMillisec() uint32 {
	if m != nil {
		return m.SwitchoverDurationMillisec
	}
	return 0
}

func (m *TePpSwLogEntryBag) GetPathProtectionSwitchoverReason() string {
	if m != nil {
		return m.PathProtectionSwitchoverReason
	}
	return ""
}

type MplsTePpInfo struct {
	TimeOfSwitchoverSec                 uint32             `protobuf:"varint,1,opt,name=time_of_switchover_sec,json=timeOfSwitchoverSec,proto3" json:"time_of_switchover_sec,omitempty"`
	SwitchoverTotal                     uint32             `protobuf:"varint,2,opt,name=switchover_total,json=switchoverTotal,proto3" json:"switchover_total,omitempty"`
	SwitchoverReady                     uint32             `protobuf:"varint,3,opt,name=switchover_ready,json=switchoverReady,proto3" json:"switchover_ready,omitempty"`
	StandbyReoptimizedNumber            uint32             `protobuf:"varint,4,opt,name=standby_reoptimized_number,json=standbyReoptimizedNumber,proto3" json:"standby_reoptimized_number,omitempty"`
	SwitchoverReason                    uint32             `protobuf:"varint,5,opt,name=switchover_reason,json=switchoverReason,proto3" json:"switchover_reason,omitempty"`
	DiversityType                       string             `protobuf:"bytes,6,opt,name=diversity_type,json=diversityType,proto3" json:"diversity_type,omitempty"`
	IsPathProtectConfigured             bool               `protobuf:"varint,7,opt,name=is_path_protect_configured,json=isPathProtectConfigured,proto3" json:"is_path_protect_configured,omitempty"`
	PathProtectionProtectedById         uint32             `protobuf:"varint,8,opt,name=path_protection_protected_by_id,json=pathProtectionProtectedById,proto3" json:"path_protection_protected_by_id,omitempty"`
	ValidPathProtectionPathOptionExists bool               `protobuf:"varint,9,opt,name=valid_path_protection_path_option_exists,json=validPathProtectionPathOptionExists,proto3" json:"valid_path_protection_path_option_exists,omitempty"`
	IsPathProtectSwitchOverUnderway     bool               `protobuf:"varint,10,opt,name=is_path_protect_switch_over_underway,json=isPathProtectSwitchOverUnderway,proto3" json:"is_path_protect_switch_over_underway,omitempty"`
	Switchover                          *TePpSwLogEntryBag `protobuf:"bytes,11,opt,name=switchover,proto3" json:"switchover,omitempty"`
	ReoptimizationTimeRemaining         uint32             `protobuf:"varint,12,opt,name=reoptimization_time_remaining,json=reoptimizationTimeRemaining,proto3" json:"reoptimization_time_remaining,omitempty"`
	XXX_NoUnkeyedLiteral                struct{}           `json:"-"`
	XXX_unrecognized                    []byte             `json:"-"`
	XXX_sizecache                       int32              `json:"-"`
}

func (m *MplsTePpInfo) Reset()         { *m = MplsTePpInfo{} }
func (m *MplsTePpInfo) String() string { return proto.CompactTextString(m) }
func (*MplsTePpInfo) ProtoMessage()    {}
func (*MplsTePpInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_97fd10a364dd9ffd, []int{109}
}

func (m *MplsTePpInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsTePpInfo.Unmarshal(m, b)
}
func (m *MplsTePpInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsTePpInfo.Marshal(b, m, deterministic)
}
func (m *MplsTePpInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsTePpInfo.Merge(m, src)
}
func (m *MplsTePpInfo) XXX_Size() int {
	return xxx_messageInfo_MplsTePpInfo.Size(m)
}
func (m *MplsTePpInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsTePpInfo.DiscardUnknown(m)
}

var xxx_messageInfo_MplsTePpInfo proto.InternalMessageInfo

func (m *MplsTePpInfo) GetTimeOfSwitchoverSec() uint32 {
	if m != nil {
		return m.TimeOfSwitchoverSec
	}
	return 0
}

func (m *MplsTePpInfo) GetSwitchoverTotal() uint32 {
	if m != nil {
		return m.SwitchoverTotal
	}
	return 0
}

func (m *MplsTePpInfo) GetSwitchoverReady() uint32 {
	if m != nil {
		return m.SwitchoverReady
	}
	return 0
}

func (m *MplsTePpInfo) GetStandbyReoptimizedNumber() uint32 {
	if m != nil {
		return m.StandbyReoptimizedNumber
	}
	return 0
}

func (m *MplsTePpInfo) GetSwitchoverReason() uint32 {
	if m != nil {
		return m.SwitchoverReason
	}
	return 0
}

func (m *MplsTePpInfo) GetDiversityType() string {
	if m != nil {
		return m.DiversityType
	}
	return ""
}

func (m *MplsTePpInfo) GetIsPathProtectConfigured() bool {
	if m != nil {
		return m.IsPathProtectConfigured
	}
	return false
}

func (m *MplsTePpInfo) GetPathProtectionProtectedById() uint32 {
	if m != nil {
		return m.PathProtectionProtectedById
	}
	return 0
}

func (m *MplsTePpInfo) GetValidPathProtectionPathOptionExists() bool {
	if m != nil {
		return m.ValidPathProtectionPathOptionExists
	}
	return false
}

func (m *MplsTePpInfo) GetIsPathProtectSwitchOverUnderway() bool {
	if m != nil {
		return m.IsPathProtectSwitchOverUnderway
	}
	return false
}

func (m *MplsTePpInfo) GetSwitchover() *TePpSwLogEntryBag {
	if m != nil {
		return m.Switchover
	}
	return nil
}

func (m *MplsTePpInfo) GetReoptimizationTimeRemaining() uint32 {
	if m != nil {
		return m.ReoptimizationTimeRemaining
	}
	return 0
}

type MplsTeWsrlgValueBag struct {
	Srlg                 uint32   `protobuf:"varint,1,opt,name=srlg,proto3" json:"srlg,omitempty"`
	SrlgName             string   `protobuf:"bytes,2,opt,name=srlg_name,json=srlgName,proto3" json:"srlg_name,omitempty"`
	AdminWeight          uint32   `protobuf:"varint,3,opt,name=admin_weight,json=adminWeight,proto3" json:"admin_weight,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MplsTeWsrlgValueBag) Reset()         { *m = MplsTeWsrlgValueBag{} }
func (m *MplsTeWsrlgValueBag) String() string { return proto.CompactTextString(m) }
func (*MplsTeWsrlgValueBag) ProtoMessage()    {}
func (*MplsTeWsrlgValueBag) Descriptor() ([]byte, []int) {
	return fileDescriptor_97fd10a364dd9ffd, []int{110}
}

func (m *MplsTeWsrlgValueBag) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsTeWsrlgValueBag.Unmarshal(m, b)
}
func (m *MplsTeWsrlgValueBag) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsTeWsrlgValueBag.Marshal(b, m, deterministic)
}
func (m *MplsTeWsrlgValueBag) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsTeWsrlgValueBag.Merge(m, src)
}
func (m *MplsTeWsrlgValueBag) XXX_Size() int {
	return xxx_messageInfo_MplsTeWsrlgValueBag.Size(m)
}
func (m *MplsTeWsrlgValueBag) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsTeWsrlgValueBag.DiscardUnknown(m)
}

var xxx_messageInfo_MplsTeWsrlgValueBag proto.InternalMessageInfo

func (m *MplsTeWsrlgValueBag) GetSrlg() uint32 {
	if m != nil {
		return m.Srlg
	}
	return 0
}

func (m *MplsTeWsrlgValueBag) GetSrlgName() string {
	if m != nil {
		return m.SrlgName
	}
	return ""
}

func (m *MplsTeWsrlgValueBag) GetAdminWeight() uint32 {
	if m != nil {
		return m.AdminWeight
	}
	return 0
}

type MplsTeWsrlgHopBag struct {
	FromAddress          string   `protobuf:"bytes,1,opt,name=from_address,json=fromAddress,proto3" json:"from_address,omitempty"`
	ToAddress            string   `protobuf:"bytes,2,opt,name=to_address,json=toAddress,proto3" json:"to_address,omitempty"`
	AggregateAdminWeight uint64   `protobuf:"varint,3,opt,name=aggregate_admin_weight,json=aggregateAdminWeight,proto3" json:"aggregate_admin_weight,omitempty"`
	CommonSrlg           []uint32 `protobuf:"varint,4,rep,packed,name=common_srlg,json=commonSrlg,proto3" json:"common_srlg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MplsTeWsrlgHopBag) Reset()         { *m = MplsTeWsrlgHopBag{} }
func (m *MplsTeWsrlgHopBag) String() string { return proto.CompactTextString(m) }
func (*MplsTeWsrlgHopBag) ProtoMessage()    {}
func (*MplsTeWsrlgHopBag) Descriptor() ([]byte, []int) {
	return fileDescriptor_97fd10a364dd9ffd, []int{111}
}

func (m *MplsTeWsrlgHopBag) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsTeWsrlgHopBag.Unmarshal(m, b)
}
func (m *MplsTeWsrlgHopBag) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsTeWsrlgHopBag.Marshal(b, m, deterministic)
}
func (m *MplsTeWsrlgHopBag) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsTeWsrlgHopBag.Merge(m, src)
}
func (m *MplsTeWsrlgHopBag) XXX_Size() int {
	return xxx_messageInfo_MplsTeWsrlgHopBag.Size(m)
}
func (m *MplsTeWsrlgHopBag) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsTeWsrlgHopBag.DiscardUnknown(m)
}

var xxx_messageInfo_MplsTeWsrlgHopBag proto.InternalMessageInfo

func (m *MplsTeWsrlgHopBag) GetFromAddress() string {
	if m != nil {
		return m.FromAddress
	}
	return ""
}

func (m *MplsTeWsrlgHopBag) GetToAddress() string {
	if m != nil {
		return m.ToAddress
	}
	return ""
}

func (m *MplsTeWsrlgHopBag) GetAggregateAdminWeight() uint64 {
	if m != nil {
		return m.AggregateAdminWeight
	}
	return 0
}

func (m *MplsTeWsrlgHopBag) GetCommonSrlg() []uint32 {
	if m != nil {
		return m.CommonSrlg
	}
	return nil
}

type MplsTeWsrlgInfoBag struct {
	ProtectedInterfaceSrlg []*MplsTeWsrlgValueBag `protobuf:"bytes,1,rep,name=protected_interface_srlg,json=protectedInterfaceSrlg,proto3" json:"protected_interface_srlg,omitempty"`
	WeightedSrlgHop        []*MplsTeWsrlgHopBag   `protobuf:"bytes,2,rep,name=weighted_srlg_hop,json=weightedSrlgHop,proto3" json:"weighted_srlg_hop,omitempty"`
	XXX_NoUnkeyedLiteral   struct{}               `json:"-"`
	XXX_unrecognized       []byte                 `json:"-"`
	XXX_sizecache          int32                  `json:"-"`
}

func (m *MplsTeWsrlgInfoBag) Reset()         { *m = MplsTeWsrlgInfoBag{} }
func (m *MplsTeWsrlgInfoBag) String() string { return proto.CompactTextString(m) }
func (*MplsTeWsrlgInfoBag) ProtoMessage()    {}
func (*MplsTeWsrlgInfoBag) Descriptor() ([]byte, []int) {
	return fileDescriptor_97fd10a364dd9ffd, []int{112}
}

func (m *MplsTeWsrlgInfoBag) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsTeWsrlgInfoBag.Unmarshal(m, b)
}
func (m *MplsTeWsrlgInfoBag) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsTeWsrlgInfoBag.Marshal(b, m, deterministic)
}
func (m *MplsTeWsrlgInfoBag) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsTeWsrlgInfoBag.Merge(m, src)
}
func (m *MplsTeWsrlgInfoBag) XXX_Size() int {
	return xxx_messageInfo_MplsTeWsrlgInfoBag.Size(m)
}
func (m *MplsTeWsrlgInfoBag) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsTeWsrlgInfoBag.DiscardUnknown(m)
}

var xxx_messageInfo_MplsTeWsrlgInfoBag proto.InternalMessageInfo

func (m *MplsTeWsrlgInfoBag) GetProtectedInterfaceSrlg() []*MplsTeWsrlgValueBag {
	if m != nil {
		return m.ProtectedInterfaceSrlg
	}
	return nil
}

func (m *MplsTeWsrlgInfoBag) GetWeightedSrlgHop() []*MplsTeWsrlgHopBag {
	if m != nil {
		return m.WeightedSrlgHop
	}
	return nil
}

type MplsTeIepHopBag struct {
	HopIndex             uint32   `protobuf:"varint,1,opt,name=hop_index,json=hopIndex,proto3" json:"hop_index,omitempty"`
	IepHopType           string   `protobuf:"bytes,2,opt,name=iep_hop_type,json=iepHopType,proto3" json:"iep_hop_type,omitempty"`
	IepHopAddress        string   `protobuf:"bytes,3,opt,name=iep_hop_address,json=iepHopAddress,proto3" json:"iep_hop_address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MplsTeIepHopBag) Reset()         { *m = MplsTeIepHopBag{} }
func (m *MplsTeIepHopBag) String() string { return proto.CompactTextString(m) }
func (*MplsTeIepHopBag) ProtoMessage()    {}
func (*MplsTeIepHopBag) Descriptor() ([]byte, []int) {
	return fileDescriptor_97fd10a364dd9ffd, []int{113}
}

func (m *MplsTeIepHopBag) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsTeIepHopBag.Unmarshal(m, b)
}
func (m *MplsTeIepHopBag) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsTeIepHopBag.Marshal(b, m, deterministic)
}
func (m *MplsTeIepHopBag) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsTeIepHopBag.Merge(m, src)
}
func (m *MplsTeIepHopBag) XXX_Size() int {
	return xxx_messageInfo_MplsTeIepHopBag.Size(m)
}
func (m *MplsTeIepHopBag) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsTeIepHopBag.DiscardUnknown(m)
}

var xxx_messageInfo_MplsTeIepHopBag proto.InternalMessageInfo

func (m *MplsTeIepHopBag) GetHopIndex() uint32 {
	if m != nil {
		return m.HopIndex
	}
	return 0
}

func (m *MplsTeIepHopBag) GetIepHopType() string {
	if m != nil {
		return m.IepHopType
	}
	return ""
}

func (m *MplsTeIepHopBag) GetIepHopAddress() string {
	if m != nil {
		return m.IepHopAddress
	}
	return ""
}

type MplsTeIepBag struct {
	PathOptionId         uint32             `protobuf:"varint,1,opt,name=path_option_id,json=pathOptionId,proto3" json:"path_option_id,omitempty"`
	IepHop               []*MplsTeIepHopBag `protobuf:"bytes,2,rep,name=iep_hop,json=iepHop,proto3" json:"iep_hop,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *MplsTeIepBag) Reset()         { *m = MplsTeIepBag{} }
func (m *MplsTeIepBag) String() string { return proto.CompactTextString(m) }
func (*MplsTeIepBag) ProtoMessage()    {}
func (*MplsTeIepBag) Descriptor() ([]byte, []int) {
	return fileDescriptor_97fd10a364dd9ffd, []int{114}
}

func (m *MplsTeIepBag) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsTeIepBag.Unmarshal(m, b)
}
func (m *MplsTeIepBag) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsTeIepBag.Marshal(b, m, deterministic)
}
func (m *MplsTeIepBag) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsTeIepBag.Merge(m, src)
}
func (m *MplsTeIepBag) XXX_Size() int {
	return xxx_messageInfo_MplsTeIepBag.Size(m)
}
func (m *MplsTeIepBag) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsTeIepBag.DiscardUnknown(m)
}

var xxx_messageInfo_MplsTeIepBag proto.InternalMessageInfo

func (m *MplsTeIepBag) GetPathOptionId() uint32 {
	if m != nil {
		return m.PathOptionId
	}
	return 0
}

func (m *MplsTeIepBag) GetIepHop() []*MplsTeIepHopBag {
	if m != nil {
		return m.IepHop
	}
	return nil
}

type MplsTeAutobackupInfo struct {
	ProtectedLsPs               uint32              `protobuf:"varint,1,opt,name=protected_ls_ps,json=protectedLsPs,proto3" json:"protected_ls_ps,omitempty"`
	ProtectedS2Ls               uint32              `protobuf:"varint,2,opt,name=protected_s2_ls,json=protectedS2Ls,proto3" json:"protected_s2_ls,omitempty"`
	SharingFamilies             uint32              `protobuf:"varint,3,opt,name=sharing_families,json=sharingFamilies,proto3" json:"sharing_families,omitempty"`
	AbProtectionType            string              `protobuf:"bytes,4,opt,name=ab_protection_type,json=abProtectionType,proto3" json:"ab_protection_type,omitempty"`
	IsUsingSrlg                 bool                `protobuf:"varint,5,opt,name=is_using_srlg,json=isUsingSrlg,proto3" json:"is_using_srlg,omitempty"`
	SrlgProtType                string              `protobuf:"bytes,6,opt,name=srlg_prot_type,json=srlgProtType,proto3" json:"srlg_prot_type,omitempty"`
	AbProtectedInterface        string              `protobuf:"bytes,7,opt,name=ab_protected_interface,json=abProtectedInterface,proto3" json:"ab_protected_interface,omitempty"`
	WeightedSrlgInfo            *MplsTeWsrlgInfoBag `protobuf:"bytes,8,opt,name=weighted_srlg_info,json=weightedSrlgInfo,proto3" json:"weighted_srlg_info,omitempty"`
	ProtectedAddress            string              `protobuf:"bytes,9,opt,name=protected_address,json=protectedAddress,proto3" json:"protected_address,omitempty"`
	TunnelAttributeSetName      string              `protobuf:"bytes,10,opt,name=tunnel_attribute_set_name,json=tunnelAttributeSetName,proto3" json:"tunnel_attribute_set_name,omitempty"`
	Iep                         []*MplsTeIepBag     `protobuf:"bytes,11,rep,name=iep,proto3" json:"iep,omitempty"`
	IsUnusedRemovalTimerRunning bool                `protobuf:"varint,12,opt,name=is_unused_removal_timer_running,json=isUnusedRemovalTimerRunning,proto3" json:"is_unused_removal_timer_running,omitempty"`
	UnusedRemovalRemainingTime  uint32              `protobuf:"varint,13,opt,name=unused_removal_remaining_time,json=unusedRemovalRemainingTime,proto3" json:"unused_removal_remaining_time,omitempty"`
	XXX_NoUnkeyedLiteral        struct{}            `json:"-"`
	XXX_unrecognized            []byte              `json:"-"`
	XXX_sizecache               int32               `json:"-"`
}

func (m *MplsTeAutobackupInfo) Reset()         { *m = MplsTeAutobackupInfo{} }
func (m *MplsTeAutobackupInfo) String() string { return proto.CompactTextString(m) }
func (*MplsTeAutobackupInfo) ProtoMessage()    {}
func (*MplsTeAutobackupInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_97fd10a364dd9ffd, []int{115}
}

func (m *MplsTeAutobackupInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsTeAutobackupInfo.Unmarshal(m, b)
}
func (m *MplsTeAutobackupInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsTeAutobackupInfo.Marshal(b, m, deterministic)
}
func (m *MplsTeAutobackupInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsTeAutobackupInfo.Merge(m, src)
}
func (m *MplsTeAutobackupInfo) XXX_Size() int {
	return xxx_messageInfo_MplsTeAutobackupInfo.Size(m)
}
func (m *MplsTeAutobackupInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsTeAutobackupInfo.DiscardUnknown(m)
}

var xxx_messageInfo_MplsTeAutobackupInfo proto.InternalMessageInfo

func (m *MplsTeAutobackupInfo) GetProtectedLsPs() uint32 {
	if m != nil {
		return m.ProtectedLsPs
	}
	return 0
}

func (m *MplsTeAutobackupInfo) GetProtectedS2Ls() uint32 {
	if m != nil {
		return m.ProtectedS2Ls
	}
	return 0
}

func (m *MplsTeAutobackupInfo) GetSharingFamilies() uint32 {
	if m != nil {
		return m.SharingFamilies
	}
	return 0
}

func (m *MplsTeAutobackupInfo) GetAbProtectionType() string {
	if m != nil {
		return m.AbProtectionType
	}
	return ""
}

func (m *MplsTeAutobackupInfo) GetIsUsingSrlg() bool {
	if m != nil {
		return m.IsUsingSrlg
	}
	return false
}

func (m *MplsTeAutobackupInfo) GetSrlgProtType() string {
	if m != nil {
		return m.SrlgProtType
	}
	return ""
}

func (m *MplsTeAutobackupInfo) GetAbProtectedInterface() string {
	if m != nil {
		return m.AbProtectedInterface
	}
	return ""
}

func (m *MplsTeAutobackupInfo) GetWeightedSrlgInfo() *MplsTeWsrlgInfoBag {
	if m != nil {
		return m.WeightedSrlgInfo
	}
	return nil
}

func (m *MplsTeAutobackupInfo) GetProtectedAddress() string {
	if m != nil {
		return m.ProtectedAddress
	}
	return ""
}

func (m *MplsTeAutobackupInfo) GetTunnelAttributeSetName() string {
	if m != nil {
		return m.TunnelAttributeSetName
	}
	return ""
}

func (m *MplsTeAutobackupInfo) GetIep() []*MplsTeIepBag {
	if m != nil {
		return m.Iep
	}
	return nil
}

func (m *MplsTeAutobackupInfo) GetIsUnusedRemovalTimerRunning() bool {
	if m != nil {
		return m.IsUnusedRemovalTimerRunning
	}
	return false
}

func (m *MplsTeAutobackupInfo) GetUnusedRemovalRemainingTime() uint32 {
	if m != nil {
		return m.UnusedRemovalRemainingTime
	}
	return 0
}

type MplsTeAutomeshInfo struct {
	MeshGroupId                uint32   `protobuf:"varint,1,opt,name=mesh_group_id,json=meshGroupId,proto3" json:"mesh_group_id,omitempty"`
	TunnelDestinationListName  string   `protobuf:"bytes,2,opt,name=tunnel_destination_list_name,json=tunnelDestinationListName,proto3" json:"tunnel_destination_list_name,omitempty"`
	IsTunnelUnusedTimerRunning bool     `protobuf:"varint,3,opt,name=is_tunnel_unused_timer_running,json=isTunnelUnusedTimerRunning,proto3" json:"is_tunnel_unused_timer_running,omitempty"`
	RemainingUnusedTime        uint32   `protobuf:"varint,4,opt,name=remaining_unused_time,json=remainingUnusedTime,proto3" json:"remaining_unused_time,omitempty"`
	MeshGroupType              string   `protobuf:"bytes,5,opt,name=mesh_group_type,json=meshGroupType,proto3" json:"mesh_group_type,omitempty"`
	XXX_NoUnkeyedLiteral       struct{} `json:"-"`
	XXX_unrecognized           []byte   `json:"-"`
	XXX_sizecache              int32    `json:"-"`
}

func (m *MplsTeAutomeshInfo) Reset()         { *m = MplsTeAutomeshInfo{} }
func (m *MplsTeAutomeshInfo) String() string { return proto.CompactTextString(m) }
func (*MplsTeAutomeshInfo) ProtoMessage()    {}
func (*MplsTeAutomeshInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_97fd10a364dd9ffd, []int{116}
}

func (m *MplsTeAutomeshInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsTeAutomeshInfo.Unmarshal(m, b)
}
func (m *MplsTeAutomeshInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsTeAutomeshInfo.Marshal(b, m, deterministic)
}
func (m *MplsTeAutomeshInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsTeAutomeshInfo.Merge(m, src)
}
func (m *MplsTeAutomeshInfo) XXX_Size() int {
	return xxx_messageInfo_MplsTeAutomeshInfo.Size(m)
}
func (m *MplsTeAutomeshInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsTeAutomeshInfo.DiscardUnknown(m)
}

var xxx_messageInfo_MplsTeAutomeshInfo proto.InternalMessageInfo

func (m *MplsTeAutomeshInfo) GetMeshGroupId() uint32 {
	if m != nil {
		return m.MeshGroupId
	}
	return 0
}

func (m *MplsTeAutomeshInfo) GetTunnelDestinationListName() string {
	if m != nil {
		return m.TunnelDestinationListName
	}
	return ""
}

func (m *MplsTeAutomeshInfo) GetIsTunnelUnusedTimerRunning() bool {
	if m != nil {
		return m.IsTunnelUnusedTimerRunning
	}
	return false
}

func (m *MplsTeAutomeshInfo) GetRemainingUnusedTime() uint32 {
	if m != nil {
		return m.RemainingUnusedTime
	}
	return 0
}

func (m *MplsTeAutomeshInfo) GetMeshGroupType() string {
	if m != nil {
		return m.MeshGroupType
	}
	return ""
}

type MplsTeAutopccInfo struct {
	OwnerAddress         string   `protobuf:"bytes,1,opt,name=owner_address,json=ownerAddress,proto3" json:"owner_address,omitempty"`
	CreatorAddress       string   `protobuf:"bytes,2,opt,name=creator_address,json=creatorAddress,proto3" json:"creator_address,omitempty"`
	HasCreatorId         bool     `protobuf:"varint,3,opt,name=has_creator_id,json=hasCreatorId,proto3" json:"has_creator_id,omitempty"`
	CreatorId            string   `protobuf:"bytes,4,opt,name=creator_id,json=creatorId,proto3" json:"creator_id,omitempty"`
	Plspid               uint32   `protobuf:"varint,5,opt,name=plspid,proto3" json:"plspid,omitempty"`
	SymbolicName         string   `protobuf:"bytes,6,opt,name=symbolic_name,json=symbolicName,proto3" json:"symbolic_name,omitempty"`
	OperationallyUp      bool     `protobuf:"varint,7,opt,name=operationally_up,json=operationallyUp,proto3" json:"operationally_up,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MplsTeAutopccInfo) Reset()         { *m = MplsTeAutopccInfo{} }
func (m *MplsTeAutopccInfo) String() string { return proto.CompactTextString(m) }
func (*MplsTeAutopccInfo) ProtoMessage()    {}
func (*MplsTeAutopccInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_97fd10a364dd9ffd, []int{117}
}

func (m *MplsTeAutopccInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsTeAutopccInfo.Unmarshal(m, b)
}
func (m *MplsTeAutopccInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsTeAutopccInfo.Marshal(b, m, deterministic)
}
func (m *MplsTeAutopccInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsTeAutopccInfo.Merge(m, src)
}
func (m *MplsTeAutopccInfo) XXX_Size() int {
	return xxx_messageInfo_MplsTeAutopccInfo.Size(m)
}
func (m *MplsTeAutopccInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsTeAutopccInfo.DiscardUnknown(m)
}

var xxx_messageInfo_MplsTeAutopccInfo proto.InternalMessageInfo

func (m *MplsTeAutopccInfo) GetOwnerAddress() string {
	if m != nil {
		return m.OwnerAddress
	}
	return ""
}

func (m *MplsTeAutopccInfo) GetCreatorAddress() string {
	if m != nil {
		return m.CreatorAddress
	}
	return ""
}

func (m *MplsTeAutopccInfo) GetHasCreatorId() bool {
	if m != nil {
		return m.HasCreatorId
	}
	return false
}

func (m *MplsTeAutopccInfo) GetCreatorId() string {
	if m != nil {
		return m.CreatorId
	}
	return ""
}

func (m *MplsTeAutopccInfo) GetPlspid() uint32 {
	if m != nil {
		return m.Plspid
	}
	return 0
}

func (m *MplsTeAutopccInfo) GetSymbolicName() string {
	if m != nil {
		return m.SymbolicName
	}
	return ""
}

func (m *MplsTeAutopccInfo) GetOperationallyUp() bool {
	if m != nil {
		return m.OperationallyUp
	}
	return false
}

type MplsTePceDelegationInfo struct {
	PlspId               uint32   `protobuf:"varint,1,opt,name=plsp_id,json=plspId,proto3" json:"plsp_id,omitempty"`
	SymbolicName         string   `protobuf:"bytes,2,opt,name=symbolic_name,json=symbolicName,proto3" json:"symbolic_name,omitempty"`
	OwnerAddress         string   `protobuf:"bytes,3,opt,name=owner_address,json=ownerAddress,proto3" json:"owner_address,omitempty"`
	OperationallyUp      bool     `protobuf:"varint,4,opt,name=operationally_up,json=operationallyUp,proto3" json:"operationally_up,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MplsTePceDelegationInfo) Reset()         { *m = MplsTePceDelegationInfo{} }
func (m *MplsTePceDelegationInfo) String() string { return proto.CompactTextString(m) }
func (*MplsTePceDelegationInfo) ProtoMessage()    {}
func (*MplsTePceDelegationInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_97fd10a364dd9ffd, []int{118}
}

func (m *MplsTePceDelegationInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsTePceDelegationInfo.Unmarshal(m, b)
}
func (m *MplsTePceDelegationInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsTePceDelegationInfo.Marshal(b, m, deterministic)
}
func (m *MplsTePceDelegationInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsTePceDelegationInfo.Merge(m, src)
}
func (m *MplsTePceDelegationInfo) XXX_Size() int {
	return xxx_messageInfo_MplsTePceDelegationInfo.Size(m)
}
func (m *MplsTePceDelegationInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsTePceDelegationInfo.DiscardUnknown(m)
}

var xxx_messageInfo_MplsTePceDelegationInfo proto.InternalMessageInfo

func (m *MplsTePceDelegationInfo) GetPlspId() uint32 {
	if m != nil {
		return m.PlspId
	}
	return 0
}

func (m *MplsTePceDelegationInfo) GetSymbolicName() string {
	if m != nil {
		return m.SymbolicName
	}
	return ""
}

func (m *MplsTePceDelegationInfo) GetOwnerAddress() string {
	if m != nil {
		return m.OwnerAddress
	}
	return ""
}

func (m *MplsTePceDelegationInfo) GetOperationallyUp() bool {
	if m != nil {
		return m.OperationallyUp
	}
	return false
}

type MplsTeSoftPreemptionPathError struct {
	Timestamp             uint32   `protobuf:"varint,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	PreemptingLinkAddress string   `protobuf:"bytes,2,opt,name=preempting_link_address,json=preemptingLinkAddress,proto3" json:"preempting_link_address,omitempty"`
	XXX_NoUnkeyedLiteral  struct{} `json:"-"`
	XXX_unrecognized      []byte   `json:"-"`
	XXX_sizecache         int32    `json:"-"`
}

func (m *MplsTeSoftPreemptionPathError) Reset()         { *m = MplsTeSoftPreemptionPathError{} }
func (m *MplsTeSoftPreemptionPathError) String() string { return proto.CompactTextString(m) }
func (*MplsTeSoftPreemptionPathError) ProtoMessage()    {}
func (*MplsTeSoftPreemptionPathError) Descriptor() ([]byte, []int) {
	return fileDescriptor_97fd10a364dd9ffd, []int{119}
}

func (m *MplsTeSoftPreemptionPathError) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsTeSoftPreemptionPathError.Unmarshal(m, b)
}
func (m *MplsTeSoftPreemptionPathError) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsTeSoftPreemptionPathError.Marshal(b, m, deterministic)
}
func (m *MplsTeSoftPreemptionPathError) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsTeSoftPreemptionPathError.Merge(m, src)
}
func (m *MplsTeSoftPreemptionPathError) XXX_Size() int {
	return xxx_messageInfo_MplsTeSoftPreemptionPathError.Size(m)
}
func (m *MplsTeSoftPreemptionPathError) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsTeSoftPreemptionPathError.DiscardUnknown(m)
}

var xxx_messageInfo_MplsTeSoftPreemptionPathError proto.InternalMessageInfo

func (m *MplsTeSoftPreemptionPathError) GetTimestamp() uint32 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *MplsTeSoftPreemptionPathError) GetPreemptingLinkAddress() string {
	if m != nil {
		return m.PreemptingLinkAddress
	}
	return ""
}

type MplsTeSoftPreemptionHeadCounters struct {
	SoftPreemptionEvents         uint32   `protobuf:"varint,1,opt,name=soft_preemption_events,json=softPreemptionEvents,proto3" json:"soft_preemption_events,omitempty"`
	ReoptCompletedLsPs           uint32   `protobuf:"varint,2,opt,name=reopt_completed_ls_ps,json=reoptCompletedLsPs,proto3" json:"reopt_completed_ls_ps,omitempty"`
	TornDownLsPs                 uint32   `protobuf:"varint,3,opt,name=torn_down_ls_ps,json=tornDownLsPs,proto3" json:"torn_down_ls_ps,omitempty"`
	PathProtectionSwitchoverLsPs uint32   `protobuf:"varint,4,opt,name=path_protection_switchover_ls_ps,json=pathProtectionSwitchoverLsPs,proto3" json:"path_protection_switchover_ls_ps,omitempty"`
	FrrTriggeredLsPs             uint32   `protobuf:"varint,5,opt,name=frr_triggered_ls_ps,json=frrTriggeredLsPs,proto3" json:"frr_triggered_ls_ps,omitempty"`
	TimeInPreemptionPendingMin   uint32   `protobuf:"varint,6,opt,name=time_in_preemption_pending_min,json=timeInPreemptionPendingMin,proto3" json:"time_in_preemption_pending_min,omitempty"`
	TimeInPreemptionPendingMax   uint32   `protobuf:"varint,7,opt,name=time_in_preemption_pending_max,json=timeInPreemptionPendingMax,proto3" json:"time_in_preemption_pending_max,omitempty"`
	TimeInPreemptionPendingAvg   uint32   `protobuf:"varint,8,opt,name=time_in_preemption_pending_avg,json=timeInPreemptionPendingAvg,proto3" json:"time_in_preemption_pending_avg,omitempty"`
	XXX_NoUnkeyedLiteral         struct{} `json:"-"`
	XXX_unrecognized             []byte   `json:"-"`
	XXX_sizecache                int32    `json:"-"`
}

func (m *MplsTeSoftPreemptionHeadCounters) Reset()         { *m = MplsTeSoftPreemptionHeadCounters{} }
func (m *MplsTeSoftPreemptionHeadCounters) String() string { return proto.CompactTextString(m) }
func (*MplsTeSoftPreemptionHeadCounters) ProtoMessage()    {}
func (*MplsTeSoftPreemptionHeadCounters) Descriptor() ([]byte, []int) {
	return fileDescriptor_97fd10a364dd9ffd, []int{120}
}

func (m *MplsTeSoftPreemptionHeadCounters) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsTeSoftPreemptionHeadCounters.Unmarshal(m, b)
}
func (m *MplsTeSoftPreemptionHeadCounters) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsTeSoftPreemptionHeadCounters.Marshal(b, m, deterministic)
}
func (m *MplsTeSoftPreemptionHeadCounters) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsTeSoftPreemptionHeadCounters.Merge(m, src)
}
func (m *MplsTeSoftPreemptionHeadCounters) XXX_Size() int {
	return xxx_messageInfo_MplsTeSoftPreemptionHeadCounters.Size(m)
}
func (m *MplsTeSoftPreemptionHeadCounters) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsTeSoftPreemptionHeadCounters.DiscardUnknown(m)
}

var xxx_messageInfo_MplsTeSoftPreemptionHeadCounters proto.InternalMessageInfo

func (m *MplsTeSoftPreemptionHeadCounters) GetSoftPreemptionEvents() uint32 {
	if m != nil {
		return m.SoftPreemptionEvents
	}
	return 0
}

func (m *MplsTeSoftPreemptionHeadCounters) GetReoptCompletedLsPs() uint32 {
	if m != nil {
		return m.ReoptCompletedLsPs
	}
	return 0
}

func (m *MplsTeSoftPreemptionHeadCounters) GetTornDownLsPs() uint32 {
	if m != nil {
		return m.TornDownLsPs
	}
	return 0
}

func (m *MplsTeSoftPreemptionHeadCounters) GetPathProtectionSwitchoverLsPs() uint32 {
	if m != nil {
		return m.PathProtectionSwitchoverLsPs
	}
	return 0
}

func (m *MplsTeSoftPreemptionHeadCounters) GetFrrTriggeredLsPs() uint32 {
	if m != nil {
		return m.FrrTriggeredLsPs
	}
	return 0
}

func (m *MplsTeSoftPreemptionHeadCounters) GetTimeInPreemptionPendingMin() uint32 {
	if m != nil {
		return m.TimeInPreemptionPendingMin
	}
	return 0
}

func (m *MplsTeSoftPreemptionHeadCounters) GetTimeInPreemptionPendingMax() uint32 {
	if m != nil {
		return m.TimeInPreemptionPendingMax
	}
	return 0
}

func (m *MplsTeSoftPreemptionHeadCounters) GetTimeInPreemptionPendingAvg() uint32 {
	if m != nil {
		return m.TimeInPreemptionPendingAvg
	}
	return 0
}

type MplsTeSoftPreemptionTunnelInfo struct {
	Status                      string                            `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	SoftPreemptionPathError     []*MplsTeSoftPreemptionPathError  `protobuf:"bytes,2,rep,name=soft_preemption_path_error,json=softPreemptionPathError,proto3" json:"soft_preemption_path_error,omitempty"`
	TimeInPreemptionPending     uint32                            `protobuf:"varint,3,opt,name=time_in_preemption_pending,json=timeInPreemptionPending,proto3" json:"time_in_preemption_pending,omitempty"`
	PreemptionPendingResolution string                            `protobuf:"bytes,4,opt,name=preemption_pending_resolution,json=preemptionPendingResolution,proto3" json:"preemption_pending_resolution,omitempty"`
	SoftPreemptionCounters      *MplsTeSoftPreemptionHeadCounters `protobuf:"bytes,5,opt,name=soft_preemption_counters,json=softPreemptionCounters,proto3" json:"soft_preemption_counters,omitempty"`
	XXX_NoUnkeyedLiteral        struct{}                          `json:"-"`
	XXX_unrecognized            []byte                            `json:"-"`
	XXX_sizecache               int32                             `json:"-"`
}

func (m *MplsTeSoftPreemptionTunnelInfo) Reset()         { *m = MplsTeSoftPreemptionTunnelInfo{} }
func (m *MplsTeSoftPreemptionTunnelInfo) String() string { return proto.CompactTextString(m) }
func (*MplsTeSoftPreemptionTunnelInfo) ProtoMessage()    {}
func (*MplsTeSoftPreemptionTunnelInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_97fd10a364dd9ffd, []int{121}
}

func (m *MplsTeSoftPreemptionTunnelInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsTeSoftPreemptionTunnelInfo.Unmarshal(m, b)
}
func (m *MplsTeSoftPreemptionTunnelInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsTeSoftPreemptionTunnelInfo.Marshal(b, m, deterministic)
}
func (m *MplsTeSoftPreemptionTunnelInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsTeSoftPreemptionTunnelInfo.Merge(m, src)
}
func (m *MplsTeSoftPreemptionTunnelInfo) XXX_Size() int {
	return xxx_messageInfo_MplsTeSoftPreemptionTunnelInfo.Size(m)
}
func (m *MplsTeSoftPreemptionTunnelInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsTeSoftPreemptionTunnelInfo.DiscardUnknown(m)
}

var xxx_messageInfo_MplsTeSoftPreemptionTunnelInfo proto.InternalMessageInfo

func (m *MplsTeSoftPreemptionTunnelInfo) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *MplsTeSoftPreemptionTunnelInfo) GetSoftPreemptionPathError() []*MplsTeSoftPreemptionPathError {
	if m != nil {
		return m.SoftPreemptionPathError
	}
	return nil
}

func (m *MplsTeSoftPreemptionTunnelInfo) GetTimeInPreemptionPending() uint32 {
	if m != nil {
		return m.TimeInPreemptionPending
	}
	return 0
}

func (m *MplsTeSoftPreemptionTunnelInfo) GetPreemptionPendingResolution() string {
	if m != nil {
		return m.PreemptionPendingResolution
	}
	return ""
}

func (m *MplsTeSoftPreemptionTunnelInfo) GetSoftPreemptionCounters() *MplsTeSoftPreemptionHeadCounters {
	if m != nil {
		return m.SoftPreemptionCounters
	}
	return nil
}

type MplsTeMgmtWdmUniTunnelInfo struct {
	TunnelState           string   `protobuf:"bytes,1,opt,name=tunnel_state,json=tunnelState,proto3" json:"tunnel_state,omitempty"`
	TunnelRole            string   `protobuf:"bytes,2,opt,name=tunnel_role,json=tunnelRole,proto3" json:"tunnel_role,omitempty"`
	TunnelId              uint32   `protobuf:"varint,3,opt,name=tunnel_id,json=tunnelId,proto3" json:"tunnel_id,omitempty"`
	LspId                 uint32   `protobuf:"varint,4,opt,name=lsp_id,json=lspId,proto3" json:"lsp_id,omitempty"`
	LocalOpticalRouterId  string   `protobuf:"bytes,5,opt,name=local_optical_router_id,json=localOpticalRouterId,proto3" json:"local_optical_router_id,omitempty"`
	RemoteOpticalRouterId string   `protobuf:"bytes,6,opt,name=remote_optical_router_id,json=remoteOpticalRouterId,proto3" json:"remote_optical_router_id,omitempty"`
	ControlledInterface   string   `protobuf:"bytes,7,opt,name=controlled_interface,json=controlledInterface,proto3" json:"controlled_interface,omitempty"`
	SourceAddress         string   `protobuf:"bytes,8,opt,name=source_address,json=sourceAddress,proto3" json:"source_address,omitempty"`
	DestinationAddress    string   `protobuf:"bytes,9,opt,name=destination_address,json=destinationAddress,proto3" json:"destination_address,omitempty"`
	ExtendedTunnelId      string   `protobuf:"bytes,10,opt,name=extended_tunnel_id,json=extendedTunnelId,proto3" json:"extended_tunnel_id,omitempty"`
	LabelOrigin           string   `protobuf:"bytes,11,opt,name=label_origin,json=labelOrigin,proto3" json:"label_origin,omitempty"`
	SrlgDiscovery         bool     `protobuf:"varint,12,opt,name=srlg_discovery,json=srlgDiscovery,proto3" json:"srlg_discovery,omitempty"`
	XXX_NoUnkeyedLiteral  struct{} `json:"-"`
	XXX_unrecognized      []byte   `json:"-"`
	XXX_sizecache         int32    `json:"-"`
}

func (m *MplsTeMgmtWdmUniTunnelInfo) Reset()         { *m = MplsTeMgmtWdmUniTunnelInfo{} }
func (m *MplsTeMgmtWdmUniTunnelInfo) String() string { return proto.CompactTextString(m) }
func (*MplsTeMgmtWdmUniTunnelInfo) ProtoMessage()    {}
func (*MplsTeMgmtWdmUniTunnelInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_97fd10a364dd9ffd, []int{122}
}

func (m *MplsTeMgmtWdmUniTunnelInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsTeMgmtWdmUniTunnelInfo.Unmarshal(m, b)
}
func (m *MplsTeMgmtWdmUniTunnelInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsTeMgmtWdmUniTunnelInfo.Marshal(b, m, deterministic)
}
func (m *MplsTeMgmtWdmUniTunnelInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsTeMgmtWdmUniTunnelInfo.Merge(m, src)
}
func (m *MplsTeMgmtWdmUniTunnelInfo) XXX_Size() int {
	return xxx_messageInfo_MplsTeMgmtWdmUniTunnelInfo.Size(m)
}
func (m *MplsTeMgmtWdmUniTunnelInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsTeMgmtWdmUniTunnelInfo.DiscardUnknown(m)
}

var xxx_messageInfo_MplsTeMgmtWdmUniTunnelInfo proto.InternalMessageInfo

func (m *MplsTeMgmtWdmUniTunnelInfo) GetTunnelState() string {
	if m != nil {
		return m.TunnelState
	}
	return ""
}

func (m *MplsTeMgmtWdmUniTunnelInfo) GetTunnelRole() string {
	if m != nil {
		return m.TunnelRole
	}
	return ""
}

func (m *MplsTeMgmtWdmUniTunnelInfo) GetTunnelId() uint32 {
	if m != nil {
		return m.TunnelId
	}
	return 0
}

func (m *MplsTeMgmtWdmUniTunnelInfo) GetLspId() uint32 {
	if m != nil {
		return m.LspId
	}
	return 0
}

func (m *MplsTeMgmtWdmUniTunnelInfo) GetLocalOpticalRouterId() string {
	if m != nil {
		return m.LocalOpticalRouterId
	}
	return ""
}

func (m *MplsTeMgmtWdmUniTunnelInfo) GetRemoteOpticalRouterId() string {
	if m != nil {
		return m.RemoteOpticalRouterId
	}
	return ""
}

func (m *MplsTeMgmtWdmUniTunnelInfo) GetControlledInterface() string {
	if m != nil {
		return m.ControlledInterface
	}
	return ""
}

func (m *MplsTeMgmtWdmUniTunnelInfo) GetSourceAddress() string {
	if m != nil {
		return m.SourceAddress
	}
	return ""
}

func (m *MplsTeMgmtWdmUniTunnelInfo) GetDestinationAddress() string {
	if m != nil {
		return m.DestinationAddress
	}
	return ""
}

func (m *MplsTeMgmtWdmUniTunnelInfo) GetExtendedTunnelId() string {
	if m != nil {
		return m.ExtendedTunnelId
	}
	return ""
}

func (m *MplsTeMgmtWdmUniTunnelInfo) GetLabelOrigin() string {
	if m != nil {
		return m.LabelOrigin
	}
	return ""
}

func (m *MplsTeMgmtWdmUniTunnelInfo) GetSrlgDiscovery() bool {
	if m != nil {
		return m.SrlgDiscovery
	}
	return false
}

type MplsTeTunnelOtnInfo struct {
	BandwidthCfg         *TeOduV3Bw `protobuf:"bytes,1,opt,name=bandwidth_cfg,json=bandwidthCfg,proto3" json:"bandwidth_cfg,omitempty"`
	ConfigBitRate        uint32     `protobuf:"varint,2,opt,name=config_bit_rate,json=configBitRate,proto3" json:"config_bit_rate,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *MplsTeTunnelOtnInfo) Reset()         { *m = MplsTeTunnelOtnInfo{} }
func (m *MplsTeTunnelOtnInfo) String() string { return proto.CompactTextString(m) }
func (*MplsTeTunnelOtnInfo) ProtoMessage()    {}
func (*MplsTeTunnelOtnInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_97fd10a364dd9ffd, []int{123}
}

func (m *MplsTeTunnelOtnInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsTeTunnelOtnInfo.Unmarshal(m, b)
}
func (m *MplsTeTunnelOtnInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsTeTunnelOtnInfo.Marshal(b, m, deterministic)
}
func (m *MplsTeTunnelOtnInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsTeTunnelOtnInfo.Merge(m, src)
}
func (m *MplsTeTunnelOtnInfo) XXX_Size() int {
	return xxx_messageInfo_MplsTeTunnelOtnInfo.Size(m)
}
func (m *MplsTeTunnelOtnInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsTeTunnelOtnInfo.DiscardUnknown(m)
}

var xxx_messageInfo_MplsTeTunnelOtnInfo proto.InternalMessageInfo

func (m *MplsTeTunnelOtnInfo) GetBandwidthCfg() *TeOduV3Bw {
	if m != nil {
		return m.BandwidthCfg
	}
	return nil
}

func (m *MplsTeTunnelOtnInfo) GetConfigBitRate() uint32 {
	if m != nil {
		return m.ConfigBitRate
	}
	return 0
}

type TeTermInterfaceSrlgCbT_ struct {
	DiscoveredSrlg       []uint32 `protobuf:"varint,1,rep,packed,name=discovered_srlg,json=discoveredSrlg,proto3" json:"discovered_srlg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TeTermInterfaceSrlgCbT_) Reset()         { *m = TeTermInterfaceSrlgCbT_{} }
func (m *TeTermInterfaceSrlgCbT_) String() string { return proto.CompactTextString(m) }
func (*TeTermInterfaceSrlgCbT_) ProtoMessage()    {}
func (*TeTermInterfaceSrlgCbT_) Descriptor() ([]byte, []int) {
	return fileDescriptor_97fd10a364dd9ffd, []int{124}
}

func (m *TeTermInterfaceSrlgCbT_) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TeTermInterfaceSrlgCbT_.Unmarshal(m, b)
}
func (m *TeTermInterfaceSrlgCbT_) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TeTermInterfaceSrlgCbT_.Marshal(b, m, deterministic)
}
func (m *TeTermInterfaceSrlgCbT_) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TeTermInterfaceSrlgCbT_.Merge(m, src)
}
func (m *TeTermInterfaceSrlgCbT_) XXX_Size() int {
	return xxx_messageInfo_TeTermInterfaceSrlgCbT_.Size(m)
}
func (m *TeTermInterfaceSrlgCbT_) XXX_DiscardUnknown() {
	xxx_messageInfo_TeTermInterfaceSrlgCbT_.DiscardUnknown(m)
}

var xxx_messageInfo_TeTermInterfaceSrlgCbT_ proto.InternalMessageInfo

func (m *TeTermInterfaceSrlgCbT_) GetDiscoveredSrlg() []uint32 {
	if m != nil {
		return m.DiscoveredSrlg
	}
	return nil
}

type MplsTeTunnelStaticUniInfo struct {
	ClientPort           string                   `protobuf:"bytes,1,opt,name=client_port,json=clientPort,proto3" json:"client_port,omitempty"`
	ClientIfHandle       string                   `protobuf:"bytes,2,opt,name=client_if_handle,json=clientIfHandle,proto3" json:"client_if_handle,omitempty"`
	ClientOduName        string                   `protobuf:"bytes,3,opt,name=client_odu_name,json=clientOduName,proto3" json:"client_odu_name,omitempty"`
	ClientOduIfHandle    string                   `protobuf:"bytes,4,opt,name=client_odu_if_handle,json=clientOduIfHandle,proto3" json:"client_odu_if_handle,omitempty"`
	CrossConnectId       uint32                   `protobuf:"varint,5,opt,name=cross_connect_id,json=crossConnectId,proto3" json:"cross_connect_id,omitempty"`
	IsConnected          bool                     `protobuf:"varint,6,opt,name=is_connected,json=isConnected,proto3" json:"is_connected,omitempty"`
	Uptime               uint32                   `protobuf:"varint,7,opt,name=uptime,proto3" json:"uptime,omitempty"`
	LocalTermination     string                   `protobuf:"bytes,8,opt,name=local_termination,json=localTermination,proto3" json:"local_termination,omitempty"`
	StaticUniType        string                   `protobuf:"bytes,9,opt,name=static_uni_type,json=staticUniType,proto3" json:"static_uni_type,omitempty"`
	TermClientPort       string                   `protobuf:"bytes,10,opt,name=term_client_port,json=termClientPort,proto3" json:"term_client_port,omitempty"`
	TermClientIfHandle   string                   `protobuf:"bytes,11,opt,name=term_client_if_handle,json=termClientIfHandle,proto3" json:"term_client_if_handle,omitempty"`
	TermInterfaceSrlg    *TeTermInterfaceSrlgCbT_ `protobuf:"bytes,12,opt,name=term_interface_srlg,json=termInterfaceSrlg,proto3" json:"term_interface_srlg,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *MplsTeTunnelStaticUniInfo) Reset()         { *m = MplsTeTunnelStaticUniInfo{} }
func (m *MplsTeTunnelStaticUniInfo) String() string { return proto.CompactTextString(m) }
func (*MplsTeTunnelStaticUniInfo) ProtoMessage()    {}
func (*MplsTeTunnelStaticUniInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_97fd10a364dd9ffd, []int{125}
}

func (m *MplsTeTunnelStaticUniInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsTeTunnelStaticUniInfo.Unmarshal(m, b)
}
func (m *MplsTeTunnelStaticUniInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsTeTunnelStaticUniInfo.Marshal(b, m, deterministic)
}
func (m *MplsTeTunnelStaticUniInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsTeTunnelStaticUniInfo.Merge(m, src)
}
func (m *MplsTeTunnelStaticUniInfo) XXX_Size() int {
	return xxx_messageInfo_MplsTeTunnelStaticUniInfo.Size(m)
}
func (m *MplsTeTunnelStaticUniInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsTeTunnelStaticUniInfo.DiscardUnknown(m)
}

var xxx_messageInfo_MplsTeTunnelStaticUniInfo proto.InternalMessageInfo

func (m *MplsTeTunnelStaticUniInfo) GetClientPort() string {
	if m != nil {
		return m.ClientPort
	}
	return ""
}

func (m *MplsTeTunnelStaticUniInfo) GetClientIfHandle() string {
	if m != nil {
		return m.ClientIfHandle
	}
	return ""
}

func (m *MplsTeTunnelStaticUniInfo) GetClientOduName() string {
	if m != nil {
		return m.ClientOduName
	}
	return ""
}

func (m *MplsTeTunnelStaticUniInfo) GetClientOduIfHandle() string {
	if m != nil {
		return m.ClientOduIfHandle
	}
	return ""
}

func (m *MplsTeTunnelStaticUniInfo) GetCrossConnectId() uint32 {
	if m != nil {
		return m.CrossConnectId
	}
	return 0
}

func (m *MplsTeTunnelStaticUniInfo) GetIsConnected() bool {
	if m != nil {
		return m.IsConnected
	}
	return false
}

func (m *MplsTeTunnelStaticUniInfo) GetUptime() uint32 {
	if m != nil {
		return m.Uptime
	}
	return 0
}

func (m *MplsTeTunnelStaticUniInfo) GetLocalTermination() string {
	if m != nil {
		return m.LocalTermination
	}
	return ""
}

func (m *MplsTeTunnelStaticUniInfo) GetStaticUniType() string {
	if m != nil {
		return m.StaticUniType
	}
	return ""
}

func (m *MplsTeTunnelStaticUniInfo) GetTermClientPort() string {
	if m != nil {
		return m.TermClientPort
	}
	return ""
}

func (m *MplsTeTunnelStaticUniInfo) GetTermClientIfHandle() string {
	if m != nil {
		return m.TermClientIfHandle
	}
	return ""
}

func (m *MplsTeTunnelStaticUniInfo) GetTermInterfaceSrlg() *TeTermInterfaceSrlgCbT_ {
	if m != nil {
		return m.TermInterfaceSrlg
	}
	return nil
}

type MplsTeTunnelEgressStaticUniInfo struct {
	EgressPort           *TeAddrT_ `protobuf:"bytes,1,opt,name=egress_port,json=egressPort,proto3" json:"egress_port,omitempty"`
	LocalTermination     string    `protobuf:"bytes,2,opt,name=local_termination,json=localTermination,proto3" json:"local_termination,omitempty"`
	RemoteUniType        string    `protobuf:"bytes,3,opt,name=remote_uni_type,json=remoteUniType,proto3" json:"remote_uni_type,omitempty"`
	TermEgressPort       *TeAddrT_ `protobuf:"bytes,4,opt,name=term_egress_port,json=termEgressPort,proto3" json:"term_egress_port,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *MplsTeTunnelEgressStaticUniInfo) Reset()         { *m = MplsTeTunnelEgressStaticUniInfo{} }
func (m *MplsTeTunnelEgressStaticUniInfo) String() string { return proto.CompactTextString(m) }
func (*MplsTeTunnelEgressStaticUniInfo) ProtoMessage()    {}
func (*MplsTeTunnelEgressStaticUniInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_97fd10a364dd9ffd, []int{126}
}

func (m *MplsTeTunnelEgressStaticUniInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsTeTunnelEgressStaticUniInfo.Unmarshal(m, b)
}
func (m *MplsTeTunnelEgressStaticUniInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsTeTunnelEgressStaticUniInfo.Marshal(b, m, deterministic)
}
func (m *MplsTeTunnelEgressStaticUniInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsTeTunnelEgressStaticUniInfo.Merge(m, src)
}
func (m *MplsTeTunnelEgressStaticUniInfo) XXX_Size() int {
	return xxx_messageInfo_MplsTeTunnelEgressStaticUniInfo.Size(m)
}
func (m *MplsTeTunnelEgressStaticUniInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsTeTunnelEgressStaticUniInfo.DiscardUnknown(m)
}

var xxx_messageInfo_MplsTeTunnelEgressStaticUniInfo proto.InternalMessageInfo

func (m *MplsTeTunnelEgressStaticUniInfo) GetEgressPort() *TeAddrT_ {
	if m != nil {
		return m.EgressPort
	}
	return nil
}

func (m *MplsTeTunnelEgressStaticUniInfo) GetLocalTermination() string {
	if m != nil {
		return m.LocalTermination
	}
	return ""
}

func (m *MplsTeTunnelEgressStaticUniInfo) GetRemoteUniType() string {
	if m != nil {
		return m.RemoteUniType
	}
	return ""
}

func (m *MplsTeTunnelEgressStaticUniInfo) GetTermEgressPort() *TeAddrT_ {
	if m != nil {
		return m.TermEgressPort
	}
	return nil
}

type MplsTeTunnelVifDiversityInfo struct {
	TunnelId             uint32   `protobuf:"varint,1,opt,name=tunnel_id,json=tunnelId,proto3" json:"tunnel_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MplsTeTunnelVifDiversityInfo) Reset()         { *m = MplsTeTunnelVifDiversityInfo{} }
func (m *MplsTeTunnelVifDiversityInfo) String() string { return proto.CompactTextString(m) }
func (*MplsTeTunnelVifDiversityInfo) ProtoMessage()    {}
func (*MplsTeTunnelVifDiversityInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_97fd10a364dd9ffd, []int{127}
}

func (m *MplsTeTunnelVifDiversityInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsTeTunnelVifDiversityInfo.Unmarshal(m, b)
}
func (m *MplsTeTunnelVifDiversityInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsTeTunnelVifDiversityInfo.Marshal(b, m, deterministic)
}
func (m *MplsTeTunnelVifDiversityInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsTeTunnelVifDiversityInfo.Merge(m, src)
}
func (m *MplsTeTunnelVifDiversityInfo) XXX_Size() int {
	return xxx_messageInfo_MplsTeTunnelVifDiversityInfo.Size(m)
}
func (m *MplsTeTunnelVifDiversityInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsTeTunnelVifDiversityInfo.DiscardUnknown(m)
}

var xxx_messageInfo_MplsTeTunnelVifDiversityInfo proto.InternalMessageInfo

func (m *MplsTeTunnelVifDiversityInfo) GetTunnelId() uint32 {
	if m != nil {
		return m.TunnelId
	}
	return 0
}

type MplsTeTransportTunnelInfo struct {
	Otn                   *MplsTeTunnelOtnInfo             `protobuf:"bytes,1,opt,name=otn,proto3" json:"otn,omitempty"`
	StaticUni             *MplsTeTunnelStaticUniInfo       `protobuf:"bytes,2,opt,name=static_uni,json=staticUni,proto3" json:"static_uni,omitempty"`
	EgressStaticUni       *MplsTeTunnelEgressStaticUniInfo `protobuf:"bytes,3,opt,name=egress_static_uni,json=egressStaticUni,proto3" json:"egress_static_uni,omitempty"`
	HomepathEro           []*RsvpMgmtEroSubobj             `protobuf:"bytes,4,rep,name=homepath_ero,json=homepathEro,proto3" json:"homepath_ero,omitempty"`
	StatusHomepathWorking bool                             `protobuf:"varint,5,opt,name=status_homepath_working,json=statusHomepathWorking,proto3" json:"status_homepath_working,omitempty"`
	DiversityInfo         []*MplsTeTunnelVifDiversityInfo  `protobuf:"bytes,6,rep,name=diversity_info,json=diversityInfo,proto3" json:"diversity_info,omitempty"`
	XXX_NoUnkeyedLiteral  struct{}                         `json:"-"`
	XXX_unrecognized      []byte                           `json:"-"`
	XXX_sizecache         int32                            `json:"-"`
}

func (m *MplsTeTransportTunnelInfo) Reset()         { *m = MplsTeTransportTunnelInfo{} }
func (m *MplsTeTransportTunnelInfo) String() string { return proto.CompactTextString(m) }
func (*MplsTeTransportTunnelInfo) ProtoMessage()    {}
func (*MplsTeTransportTunnelInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_97fd10a364dd9ffd, []int{128}
}

func (m *MplsTeTransportTunnelInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsTeTransportTunnelInfo.Unmarshal(m, b)
}
func (m *MplsTeTransportTunnelInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsTeTransportTunnelInfo.Marshal(b, m, deterministic)
}
func (m *MplsTeTransportTunnelInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsTeTransportTunnelInfo.Merge(m, src)
}
func (m *MplsTeTransportTunnelInfo) XXX_Size() int {
	return xxx_messageInfo_MplsTeTransportTunnelInfo.Size(m)
}
func (m *MplsTeTransportTunnelInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsTeTransportTunnelInfo.DiscardUnknown(m)
}

var xxx_messageInfo_MplsTeTransportTunnelInfo proto.InternalMessageInfo

func (m *MplsTeTransportTunnelInfo) GetOtn() *MplsTeTunnelOtnInfo {
	if m != nil {
		return m.Otn
	}
	return nil
}

func (m *MplsTeTransportTunnelInfo) GetStaticUni() *MplsTeTunnelStaticUniInfo {
	if m != nil {
		return m.StaticUni
	}
	return nil
}

func (m *MplsTeTransportTunnelInfo) GetEgressStaticUni() *MplsTeTunnelEgressStaticUniInfo {
	if m != nil {
		return m.EgressStaticUni
	}
	return nil
}

func (m *MplsTeTransportTunnelInfo) GetHomepathEro() []*RsvpMgmtEroSubobj {
	if m != nil {
		return m.HomepathEro
	}
	return nil
}

func (m *MplsTeTransportTunnelInfo) GetStatusHomepathWorking() bool {
	if m != nil {
		return m.StatusHomepathWorking
	}
	return false
}

func (m *MplsTeTransportTunnelInfo) GetDiversityInfo() []*MplsTeTunnelVifDiversityInfo {
	if m != nil {
		return m.DiversityInfo
	}
	return nil
}

type MplsTeBfdLspCounters struct {
	SessionCreateEvents              uint32   `protobuf:"varint,1,opt,name=session_create_events,json=sessionCreateEvents,proto3" json:"session_create_events,omitempty"`
	SessionUpEvents                  uint32   `protobuf:"varint,2,opt,name=session_up_events,json=sessionUpEvents,proto3" json:"session_up_events,omitempty"`
	SessionCreationFailedEvents      uint32   `protobuf:"varint,3,opt,name=session_creation_failed_events,json=sessionCreationFailedEvents,proto3" json:"session_creation_failed_events,omitempty"`
	SessionDownEvents                uint32   `protobuf:"varint,4,opt,name=session_down_events,json=sessionDownEvents,proto3" json:"session_down_events,omitempty"`
	SessionAdminDownEvents           uint32   `protobuf:"varint,5,opt,name=session_admin_down_events,json=sessionAdminDownEvents,proto3" json:"session_admin_down_events,omitempty"`
	SessionGracefullyDeleteEvents    uint32   `protobuf:"varint,6,opt,name=session_gracefully_delete_events,json=sessionGracefullyDeleteEvents,proto3" json:"session_gracefully_delete_events,omitempty"`
	SessionNonGracefullyDeleteEvents uint32   `protobuf:"varint,7,opt,name=session_non_gracefully_delete_events,json=sessionNonGracefullyDeleteEvents,proto3" json:"session_non_gracefully_delete_events,omitempty"`
	SessionCreateTimeoutEvents       uint32   `protobuf:"varint,8,opt,name=session_create_timeout_events,json=sessionCreateTimeoutEvents,proto3" json:"session_create_timeout_events,omitempty"`
	SessionReplayEvents              uint32   `protobuf:"varint,9,opt,name=session_replay_events,json=sessionReplayEvents,proto3" json:"session_replay_events,omitempty"`
	XXX_NoUnkeyedLiteral             struct{} `json:"-"`
	XXX_unrecognized                 []byte   `json:"-"`
	XXX_sizecache                    int32    `json:"-"`
}

func (m *MplsTeBfdLspCounters) Reset()         { *m = MplsTeBfdLspCounters{} }
func (m *MplsTeBfdLspCounters) String() string { return proto.CompactTextString(m) }
func (*MplsTeBfdLspCounters) ProtoMessage()    {}
func (*MplsTeBfdLspCounters) Descriptor() ([]byte, []int) {
	return fileDescriptor_97fd10a364dd9ffd, []int{129}
}

func (m *MplsTeBfdLspCounters) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsTeBfdLspCounters.Unmarshal(m, b)
}
func (m *MplsTeBfdLspCounters) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsTeBfdLspCounters.Marshal(b, m, deterministic)
}
func (m *MplsTeBfdLspCounters) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsTeBfdLspCounters.Merge(m, src)
}
func (m *MplsTeBfdLspCounters) XXX_Size() int {
	return xxx_messageInfo_MplsTeBfdLspCounters.Size(m)
}
func (m *MplsTeBfdLspCounters) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsTeBfdLspCounters.DiscardUnknown(m)
}

var xxx_messageInfo_MplsTeBfdLspCounters proto.InternalMessageInfo

func (m *MplsTeBfdLspCounters) GetSessionCreateEvents() uint32 {
	if m != nil {
		return m.SessionCreateEvents
	}
	return 0
}

func (m *MplsTeBfdLspCounters) GetSessionUpEvents() uint32 {
	if m != nil {
		return m.SessionUpEvents
	}
	return 0
}

func (m *MplsTeBfdLspCounters) GetSessionCreationFailedEvents() uint32 {
	if m != nil {
		return m.SessionCreationFailedEvents
	}
	return 0
}

func (m *MplsTeBfdLspCounters) GetSessionDownEvents() uint32 {
	if m != nil {
		return m.SessionDownEvents
	}
	return 0
}

func (m *MplsTeBfdLspCounters) GetSessionAdminDownEvents() uint32 {
	if m != nil {
		return m.SessionAdminDownEvents
	}
	return 0
}

func (m *MplsTeBfdLspCounters) GetSessionGracefullyDeleteEvents() uint32 {
	if m != nil {
		return m.SessionGracefullyDeleteEvents
	}
	return 0
}

func (m *MplsTeBfdLspCounters) GetSessionNonGracefullyDeleteEvents() uint32 {
	if m != nil {
		return m.SessionNonGracefullyDeleteEvents
	}
	return 0
}

func (m *MplsTeBfdLspCounters) GetSessionCreateTimeoutEvents() uint32 {
	if m != nil {
		return m.SessionCreateTimeoutEvents
	}
	return 0
}

func (m *MplsTeBfdLspCounters) GetSessionReplayEvents() uint32 {
	if m != nil {
		return m.SessionReplayEvents
	}
	return 0
}

type MplsTePathOptionDampeningInfo struct {
	OptionIndex          uint32   `protobuf:"varint,1,opt,name=option_index,json=optionIndex,proto3" json:"option_index,omitempty"`
	HoldDownTime         uint32   `protobuf:"varint,2,opt,name=hold_down_time,json=holdDownTime,proto3" json:"hold_down_time,omitempty"`
	RemainedTime         uint32   `protobuf:"varint,3,opt,name=remained_time,json=remainedTime,proto3" json:"remained_time,omitempty"`
	BackoffCount         uint32   `protobuf:"varint,4,opt,name=backoff_count,json=backoffCount,proto3" json:"backoff_count,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MplsTePathOptionDampeningInfo) Reset()         { *m = MplsTePathOptionDampeningInfo{} }
func (m *MplsTePathOptionDampeningInfo) String() string { return proto.CompactTextString(m) }
func (*MplsTePathOptionDampeningInfo) ProtoMessage()    {}
func (*MplsTePathOptionDampeningInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_97fd10a364dd9ffd, []int{130}
}

func (m *MplsTePathOptionDampeningInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsTePathOptionDampeningInfo.Unmarshal(m, b)
}
func (m *MplsTePathOptionDampeningInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsTePathOptionDampeningInfo.Marshal(b, m, deterministic)
}
func (m *MplsTePathOptionDampeningInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsTePathOptionDampeningInfo.Merge(m, src)
}
func (m *MplsTePathOptionDampeningInfo) XXX_Size() int {
	return xxx_messageInfo_MplsTePathOptionDampeningInfo.Size(m)
}
func (m *MplsTePathOptionDampeningInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsTePathOptionDampeningInfo.DiscardUnknown(m)
}

var xxx_messageInfo_MplsTePathOptionDampeningInfo proto.InternalMessageInfo

func (m *MplsTePathOptionDampeningInfo) GetOptionIndex() uint32 {
	if m != nil {
		return m.OptionIndex
	}
	return 0
}

func (m *MplsTePathOptionDampeningInfo) GetHoldDownTime() uint32 {
	if m != nil {
		return m.HoldDownTime
	}
	return 0
}

func (m *MplsTePathOptionDampeningInfo) GetRemainedTime() uint32 {
	if m != nil {
		return m.RemainedTime
	}
	return 0
}

func (m *MplsTePathOptionDampeningInfo) GetBackoffCount() uint32 {
	if m != nil {
		return m.BackoffCount
	}
	return 0
}

type MplsTeTunnelBfdInfo struct {
	BfdSessionUp             bool                             `protobuf:"varint,1,opt,name=bfd_session_up,json=bfdSessionUp,proto3" json:"bfd_session_up,omitempty"`
	SessionUpTime            uint32                           `protobuf:"varint,2,opt,name=session_up_time,json=sessionUpTime,proto3" json:"session_up_time,omitempty"`
	FailureDiagnosticCode    uint32                           `protobuf:"varint,3,opt,name=failure_diagnostic_code,json=failureDiagnosticCode,proto3" json:"failure_diagnostic_code,omitempty"`
	FailureReason            string                           `protobuf:"bytes,4,opt,name=failure_reason,json=failureReason,proto3" json:"failure_reason,omitempty"`
	MinimumSessionUpInterval uint32                           `protobuf:"varint,5,opt,name=minimum_session_up_interval,json=minimumSessionUpInterval,proto3" json:"minimum_session_up_interval,omitempty"`
	MaximumSessionUpInterval uint32                           `protobuf:"varint,6,opt,name=maximum_session_up_interval,json=maximumSessionUpInterval,proto3" json:"maximum_session_up_interval,omitempty"`
	EventCounters            *MplsTeBfdLspCounters            `protobuf:"bytes,7,opt,name=event_counters,json=eventCounters,proto3" json:"event_counters,omitempty"`
	DampeningInfo            []*MplsTePathOptionDampeningInfo `protobuf:"bytes,8,rep,name=dampening_info,json=dampeningInfo,proto3" json:"dampening_info,omitempty"`
	XXX_NoUnkeyedLiteral     struct{}                         `json:"-"`
	XXX_unrecognized         []byte                           `json:"-"`
	XXX_sizecache            int32                            `json:"-"`
}

func (m *MplsTeTunnelBfdInfo) Reset()         { *m = MplsTeTunnelBfdInfo{} }
func (m *MplsTeTunnelBfdInfo) String() string { return proto.CompactTextString(m) }
func (*MplsTeTunnelBfdInfo) ProtoMessage()    {}
func (*MplsTeTunnelBfdInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_97fd10a364dd9ffd, []int{131}
}

func (m *MplsTeTunnelBfdInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsTeTunnelBfdInfo.Unmarshal(m, b)
}
func (m *MplsTeTunnelBfdInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsTeTunnelBfdInfo.Marshal(b, m, deterministic)
}
func (m *MplsTeTunnelBfdInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsTeTunnelBfdInfo.Merge(m, src)
}
func (m *MplsTeTunnelBfdInfo) XXX_Size() int {
	return xxx_messageInfo_MplsTeTunnelBfdInfo.Size(m)
}
func (m *MplsTeTunnelBfdInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsTeTunnelBfdInfo.DiscardUnknown(m)
}

var xxx_messageInfo_MplsTeTunnelBfdInfo proto.InternalMessageInfo

func (m *MplsTeTunnelBfdInfo) GetBfdSessionUp() bool {
	if m != nil {
		return m.BfdSessionUp
	}
	return false
}

func (m *MplsTeTunnelBfdInfo) GetSessionUpTime() uint32 {
	if m != nil {
		return m.SessionUpTime
	}
	return 0
}

func (m *MplsTeTunnelBfdInfo) GetFailureDiagnosticCode() uint32 {
	if m != nil {
		return m.FailureDiagnosticCode
	}
	return 0
}

func (m *MplsTeTunnelBfdInfo) GetFailureReason() string {
	if m != nil {
		return m.FailureReason
	}
	return ""
}

func (m *MplsTeTunnelBfdInfo) GetMinimumSessionUpInterval() uint32 {
	if m != nil {
		return m.MinimumSessionUpInterval
	}
	return 0
}

func (m *MplsTeTunnelBfdInfo) GetMaximumSessionUpInterval() uint32 {
	if m != nil {
		return m.MaximumSessionUpInterval
	}
	return 0
}

func (m *MplsTeTunnelBfdInfo) GetEventCounters() *MplsTeBfdLspCounters {
	if m != nil {
		return m.EventCounters
	}
	return nil
}

func (m *MplsTeTunnelBfdInfo) GetDampeningInfo() []*MplsTePathOptionDampeningInfo {
	if m != nil {
		return m.DampeningInfo
	}
	return nil
}

type MplsTeTunnelApsInfo struct {
	ProtectionProfile    *MplsTeAttributeSetApsPp `protobuf:"bytes,1,opt,name=protection_profile,json=protectionProfile,proto3" json:"protection_profile,omitempty"`
	ActiveLsp            string                   `protobuf:"bytes,2,opt,name=active_lsp,json=activeLsp,proto3" json:"active_lsp,omitempty"`
	DiversityType        string                   `protobuf:"bytes,3,opt,name=diversity_type,json=diversityType,proto3" json:"diversity_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *MplsTeTunnelApsInfo) Reset()         { *m = MplsTeTunnelApsInfo{} }
func (m *MplsTeTunnelApsInfo) String() string { return proto.CompactTextString(m) }
func (*MplsTeTunnelApsInfo) ProtoMessage()    {}
func (*MplsTeTunnelApsInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_97fd10a364dd9ffd, []int{132}
}

func (m *MplsTeTunnelApsInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsTeTunnelApsInfo.Unmarshal(m, b)
}
func (m *MplsTeTunnelApsInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsTeTunnelApsInfo.Marshal(b, m, deterministic)
}
func (m *MplsTeTunnelApsInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsTeTunnelApsInfo.Merge(m, src)
}
func (m *MplsTeTunnelApsInfo) XXX_Size() int {
	return xxx_messageInfo_MplsTeTunnelApsInfo.Size(m)
}
func (m *MplsTeTunnelApsInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsTeTunnelApsInfo.DiscardUnknown(m)
}

var xxx_messageInfo_MplsTeTunnelApsInfo proto.InternalMessageInfo

func (m *MplsTeTunnelApsInfo) GetProtectionProfile() *MplsTeAttributeSetApsPp {
	if m != nil {
		return m.ProtectionProfile
	}
	return nil
}

func (m *MplsTeTunnelApsInfo) GetActiveLsp() string {
	if m != nil {
		return m.ActiveLsp
	}
	return ""
}

func (m *MplsTeTunnelApsInfo) GetDiversityType() string {
	if m != nil {
		return m.DiversityType
	}
	return ""
}

type MplsTeTunnelRestorationInfo struct {
	RevertOption         string   `protobuf:"bytes,1,opt,name=revert_option,json=revertOption,proto3" json:"revert_option,omitempty"`
	DiverseLsp           string   `protobuf:"bytes,2,opt,name=diverse_lsp,json=diverseLsp,proto3" json:"diverse_lsp,omitempty"`
	DiversityType        string   `protobuf:"bytes,3,opt,name=diversity_type,json=diversityType,proto3" json:"diversity_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MplsTeTunnelRestorationInfo) Reset()         { *m = MplsTeTunnelRestorationInfo{} }
func (m *MplsTeTunnelRestorationInfo) String() string { return proto.CompactTextString(m) }
func (*MplsTeTunnelRestorationInfo) ProtoMessage()    {}
func (*MplsTeTunnelRestorationInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_97fd10a364dd9ffd, []int{133}
}

func (m *MplsTeTunnelRestorationInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsTeTunnelRestorationInfo.Unmarshal(m, b)
}
func (m *MplsTeTunnelRestorationInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsTeTunnelRestorationInfo.Marshal(b, m, deterministic)
}
func (m *MplsTeTunnelRestorationInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsTeTunnelRestorationInfo.Merge(m, src)
}
func (m *MplsTeTunnelRestorationInfo) XXX_Size() int {
	return xxx_messageInfo_MplsTeTunnelRestorationInfo.Size(m)
}
func (m *MplsTeTunnelRestorationInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsTeTunnelRestorationInfo.DiscardUnknown(m)
}

var xxx_messageInfo_MplsTeTunnelRestorationInfo proto.InternalMessageInfo

func (m *MplsTeTunnelRestorationInfo) GetRevertOption() string {
	if m != nil {
		return m.RevertOption
	}
	return ""
}

func (m *MplsTeTunnelRestorationInfo) GetDiverseLsp() string {
	if m != nil {
		return m.DiverseLsp
	}
	return ""
}

func (m *MplsTeTunnelRestorationInfo) GetDiversityType() string {
	if m != nil {
		return m.DiversityType
	}
	return ""
}

type MplsTeTunnelOtnBidirInfo struct {
	Aps                  *MplsTeTunnelApsInfo         `protobuf:"bytes,1,opt,name=aps,proto3" json:"aps,omitempty"`
	Restoration          *MplsTeTunnelRestorationInfo `protobuf:"bytes,2,opt,name=restoration,proto3" json:"restoration,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                     `json:"-"`
	XXX_unrecognized     []byte                       `json:"-"`
	XXX_sizecache        int32                        `json:"-"`
}

func (m *MplsTeTunnelOtnBidirInfo) Reset()         { *m = MplsTeTunnelOtnBidirInfo{} }
func (m *MplsTeTunnelOtnBidirInfo) String() string { return proto.CompactTextString(m) }
func (*MplsTeTunnelOtnBidirInfo) ProtoMessage()    {}
func (*MplsTeTunnelOtnBidirInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_97fd10a364dd9ffd, []int{134}
}

func (m *MplsTeTunnelOtnBidirInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsTeTunnelOtnBidirInfo.Unmarshal(m, b)
}
func (m *MplsTeTunnelOtnBidirInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsTeTunnelOtnBidirInfo.Marshal(b, m, deterministic)
}
func (m *MplsTeTunnelOtnBidirInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsTeTunnelOtnBidirInfo.Merge(m, src)
}
func (m *MplsTeTunnelOtnBidirInfo) XXX_Size() int {
	return xxx_messageInfo_MplsTeTunnelOtnBidirInfo.Size(m)
}
func (m *MplsTeTunnelOtnBidirInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsTeTunnelOtnBidirInfo.DiscardUnknown(m)
}

var xxx_messageInfo_MplsTeTunnelOtnBidirInfo proto.InternalMessageInfo

func (m *MplsTeTunnelOtnBidirInfo) GetAps() *MplsTeTunnelApsInfo {
	if m != nil {
		return m.Aps
	}
	return nil
}

func (m *MplsTeTunnelOtnBidirInfo) GetRestoration() *MplsTeTunnelRestorationInfo {
	if m != nil {
		return m.Restoration
	}
	return nil
}

type MplsTeTunnelsReverseEroErrorBag struct {
	ReverseLspId                    uint32                  `protobuf:"varint,1,opt,name=reverse_lsp_id,json=reverseLspId,proto3" json:"reverse_lsp_id,omitempty"`
	PathRejectReasonBw              bool                    `protobuf:"varint,2,opt,name=path_reject_reason_bw,json=pathRejectReasonBw,proto3" json:"path_reject_reason_bw,omitempty"`
	PathRejectReasonAffinity        bool                    `protobuf:"varint,3,opt,name=path_reject_reason_affinity,json=pathRejectReasonAffinity,proto3" json:"path_reject_reason_affinity,omitempty"`
	PathRejectReasonIpAddr          bool                    `protobuf:"varint,4,opt,name=path_reject_reason_ip_addr,json=pathRejectReasonIpAddr,proto3" json:"path_reject_reason_ip_addr,omitempty"`
	PathRejectReasonReverseLink     bool                    `protobuf:"varint,5,opt,name=path_reject_reason_reverse_link,json=pathRejectReasonReverseLink,proto3" json:"path_reject_reason_reverse_link,omitempty"`
	PathRejectReasonIxcd            bool                    `protobuf:"varint,6,opt,name=path_reject_reason_ixcd,json=pathRejectReasonIxcd,proto3" json:"path_reject_reason_ixcd,omitempty"`
	PathRejectReasonHolddown        bool                    `protobuf:"varint,7,opt,name=path_reject_reason_holddown,json=pathRejectReasonHolddown,proto3" json:"path_reject_reason_holddown,omitempty"`
	PathRejectReasonExcludeNode     bool                    `protobuf:"varint,8,opt,name=path_reject_reason_exclude_node,json=pathRejectReasonExcludeNode,proto3" json:"path_reject_reason_exclude_node,omitempty"`
	PathRejectReasonExcludeLink     bool                    `protobuf:"varint,9,opt,name=path_reject_reason_exclude_link,json=pathRejectReasonExcludeLink,proto3" json:"path_reject_reason_exclude_link,omitempty"`
	PathRejectReasonExcludeSrlg     bool                    `protobuf:"varint,10,opt,name=path_reject_reason_exclude_srlg,json=pathRejectReasonExcludeSrlg,proto3" json:"path_reject_reason_exclude_srlg,omitempty"`
	PathRejectReasonHopLimit        bool                    `protobuf:"varint,11,opt,name=path_reject_reason_hop_limit,json=pathRejectReasonHopLimit,proto3" json:"path_reject_reason_hop_limit,omitempty"`
	PathRejectReasonNodeOlUnknown   bool                    `protobuf:"varint,12,opt,name=path_reject_reason_node_ol_unknown,json=pathRejectReasonNodeOlUnknown,proto3" json:"path_reject_reason_node_ol_unknown,omitempty"`
	PathRejectReasonNodeOlHead      bool                    `protobuf:"varint,13,opt,name=path_reject_reason_node_ol_head,json=pathRejectReasonNodeOlHead,proto3" json:"path_reject_reason_node_ol_head,omitempty"`
	PathRejectReasonNodeOlMid       bool                    `protobuf:"varint,14,opt,name=path_reject_reason_node_ol_mid,json=pathRejectReasonNodeOlMid,proto3" json:"path_reject_reason_node_ol_mid,omitempty"`
	PathRejectReasonNodeOlTail      bool                    `protobuf:"varint,15,opt,name=path_reject_reason_node_ol_tail,json=pathRejectReasonNodeOlTail,proto3" json:"path_reject_reason_node_ol_tail,omitempty"`
	PathRejectReasonReverseBw       bool                    `protobuf:"varint,16,opt,name=path_reject_reason_reverse_bw,json=pathRejectReasonReverseBw,proto3" json:"path_reject_reason_reverse_bw,omitempty"`
	PathRejectReasonNodeUnreachable bool                    `protobuf:"varint,17,opt,name=path_reject_reason_node_unreachable,json=pathRejectReasonNodeUnreachable,proto3" json:"path_reject_reason_node_unreachable,omitempty"`
	PathOptionIndex                 uint32                  `protobuf:"varint,18,opt,name=path_option_index,json=pathOptionIndex,proto3" json:"path_option_index,omitempty"`
	PathOptionType                  string                  `protobuf:"bytes,19,opt,name=path_option_type,json=pathOptionType,proto3" json:"path_option_type,omitempty"`
	PathCalculationError            []*MplsTeP2MpPcalcError `protobuf:"bytes,20,rep,name=path_calculation_error,json=pathCalculationError,proto3" json:"path_calculation_error,omitempty"`
	EroRejectReason                 string                  `protobuf:"bytes,21,opt,name=ero_reject_reason,json=eroRejectReason,proto3" json:"ero_reject_reason,omitempty"`
	XXX_NoUnkeyedLiteral            struct{}                `json:"-"`
	XXX_unrecognized                []byte                  `json:"-"`
	XXX_sizecache                   int32                   `json:"-"`
}

func (m *MplsTeTunnelsReverseEroErrorBag) Reset()         { *m = MplsTeTunnelsReverseEroErrorBag{} }
func (m *MplsTeTunnelsReverseEroErrorBag) String() string { return proto.CompactTextString(m) }
func (*MplsTeTunnelsReverseEroErrorBag) ProtoMessage()    {}
func (*MplsTeTunnelsReverseEroErrorBag) Descriptor() ([]byte, []int) {
	return fileDescriptor_97fd10a364dd9ffd, []int{135}
}

func (m *MplsTeTunnelsReverseEroErrorBag) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsTeTunnelsReverseEroErrorBag.Unmarshal(m, b)
}
func (m *MplsTeTunnelsReverseEroErrorBag) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsTeTunnelsReverseEroErrorBag.Marshal(b, m, deterministic)
}
func (m *MplsTeTunnelsReverseEroErrorBag) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsTeTunnelsReverseEroErrorBag.Merge(m, src)
}
func (m *MplsTeTunnelsReverseEroErrorBag) XXX_Size() int {
	return xxx_messageInfo_MplsTeTunnelsReverseEroErrorBag.Size(m)
}
func (m *MplsTeTunnelsReverseEroErrorBag) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsTeTunnelsReverseEroErrorBag.DiscardUnknown(m)
}

var xxx_messageInfo_MplsTeTunnelsReverseEroErrorBag proto.InternalMessageInfo

func (m *MplsTeTunnelsReverseEroErrorBag) GetReverseLspId() uint32 {
	if m != nil {
		return m.ReverseLspId
	}
	return 0
}

func (m *MplsTeTunnelsReverseEroErrorBag) GetPathRejectReasonBw() bool {
	if m != nil {
		return m.PathRejectReasonBw
	}
	return false
}

func (m *MplsTeTunnelsReverseEroErrorBag) GetPathRejectReasonAffinity() bool {
	if m != nil {
		return m.PathRejectReasonAffinity
	}
	return false
}

func (m *MplsTeTunnelsReverseEroErrorBag) GetPathRejectReasonIpAddr() bool {
	if m != nil {
		return m.PathRejectReasonIpAddr
	}
	return false
}

func (m *MplsTeTunnelsReverseEroErrorBag) GetPathRejectReasonReverseLink() bool {
	if m != nil {
		return m.PathRejectReasonReverseLink
	}
	return false
}

func (m *MplsTeTunnelsReverseEroErrorBag) GetPathRejectReasonIxcd() bool {
	if m != nil {
		return m.PathRejectReasonIxcd
	}
	return false
}

func (m *MplsTeTunnelsReverseEroErrorBag) GetPathRejectReasonHolddown() bool {
	if m != nil {
		return m.PathRejectReasonHolddown
	}
	return false
}

func (m *MplsTeTunnelsReverseEroErrorBag) GetPathRejectReasonExcludeNode() bool {
	if m != nil {
		return m.PathRejectReasonExcludeNode
	}
	return false
}

func (m *MplsTeTunnelsReverseEroErrorBag) GetPathRejectReasonExcludeLink() bool {
	if m != nil {
		return m.PathRejectReasonExcludeLink
	}
	return false
}

func (m *MplsTeTunnelsReverseEroErrorBag) GetPathRejectReasonExcludeSrlg() bool {
	if m != nil {
		return m.PathRejectReasonExcludeSrlg
	}
	return false
}

func (m *MplsTeTunnelsReverseEroErrorBag) GetPathRejectReasonHopLimit() bool {
	if m != nil {
		return m.PathRejectReasonHopLimit
	}
	return false
}

func (m *MplsTeTunnelsReverseEroErrorBag) GetPathRejectReasonNodeOlUnknown() bool {
	if m != nil {
		return m.PathRejectReasonNodeOlUnknown
	}
	return false
}

func (m *MplsTeTunnelsReverseEroErrorBag) GetPathRejectReasonNodeOlHead() bool {
	if m != nil {
		return m.PathRejectReasonNodeOlHead
	}
	return false
}

func (m *MplsTeTunnelsReverseEroErrorBag) GetPathRejectReasonNodeOlMid() bool {
	if m != nil {
		return m.PathRejectReasonNodeOlMid
	}
	return false
}

func (m *MplsTeTunnelsReverseEroErrorBag) GetPathRejectReasonNodeOlTail() bool {
	if m != nil {
		return m.PathRejectReasonNodeOlTail
	}
	return false
}

func (m *MplsTeTunnelsReverseEroErrorBag) GetPathRejectReasonReverseBw() bool {
	if m != nil {
		return m.PathRejectReasonReverseBw
	}
	return false
}

func (m *MplsTeTunnelsReverseEroErrorBag) GetPathRejectReasonNodeUnreachable() bool {
	if m != nil {
		return m.PathRejectReasonNodeUnreachable
	}
	return false
}

func (m *MplsTeTunnelsReverseEroErrorBag) GetPathOptionIndex() uint32 {
	if m != nil {
		return m.PathOptionIndex
	}
	return 0
}

func (m *MplsTeTunnelsReverseEroErrorBag) GetPathOptionType() string {
	if m != nil {
		return m.PathOptionType
	}
	return ""
}

func (m *MplsTeTunnelsReverseEroErrorBag) GetPathCalculationError() []*MplsTeP2MpPcalcError {
	if m != nil {
		return m.PathCalculationError
	}
	return nil
}

func (m *MplsTeTunnelsReverseEroErrorBag) GetEroRejectReason() string {
	if m != nil {
		return m.EroRejectReason
	}
	return ""
}

type MplsTeTunnelBidirInfo struct {
	ReverseBandwidth            uint32                           `protobuf:"varint,1,opt,name=reverse_bandwidth,json=reverseBandwidth,proto3" json:"reverse_bandwidth,omitempty"`
	ReverseBandwidthStandby     uint32                           `protobuf:"varint,2,opt,name=reverse_bandwidth_standby,json=reverseBandwidthStandby,proto3" json:"reverse_bandwidth_standby,omitempty"`
	ReverseEroErrorCurrent      *MplsTeTunnelsReverseEroErrorBag `protobuf:"bytes,3,opt,name=reverse_ero_error_current,json=reverseEroErrorCurrent,proto3" json:"reverse_ero_error_current,omitempty"`
	ReverseEroErrorReopt        *MplsTeTunnelsReverseEroErrorBag `protobuf:"bytes,4,opt,name=reverse_ero_error_reopt,json=reverseEroErrorReopt,proto3" json:"reverse_ero_error_reopt,omitempty"`
	ReverseEroErrorStandby      *MplsTeTunnelsReverseEroErrorBag `protobuf:"bytes,5,opt,name=reverse_ero_error_standby,json=reverseEroErrorStandby,proto3" json:"reverse_ero_error_standby,omitempty"`
	ReverseEroErrorStandbyReopt *MplsTeTunnelsReverseEroErrorBag `protobuf:"bytes,6,opt,name=reverse_ero_error_standby_reopt,json=reverseEroErrorStandbyReopt,proto3" json:"reverse_ero_error_standby_reopt,omitempty"`
	XXX_NoUnkeyedLiteral        struct{}                         `json:"-"`
	XXX_unrecognized            []byte                           `json:"-"`
	XXX_sizecache               int32                            `json:"-"`
}

func (m *MplsTeTunnelBidirInfo) Reset()         { *m = MplsTeTunnelBidirInfo{} }
func (m *MplsTeTunnelBidirInfo) String() string { return proto.CompactTextString(m) }
func (*MplsTeTunnelBidirInfo) ProtoMessage()    {}
func (*MplsTeTunnelBidirInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_97fd10a364dd9ffd, []int{136}
}

func (m *MplsTeTunnelBidirInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsTeTunnelBidirInfo.Unmarshal(m, b)
}
func (m *MplsTeTunnelBidirInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsTeTunnelBidirInfo.Marshal(b, m, deterministic)
}
func (m *MplsTeTunnelBidirInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsTeTunnelBidirInfo.Merge(m, src)
}
func (m *MplsTeTunnelBidirInfo) XXX_Size() int {
	return xxx_messageInfo_MplsTeTunnelBidirInfo.Size(m)
}
func (m *MplsTeTunnelBidirInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsTeTunnelBidirInfo.DiscardUnknown(m)
}

var xxx_messageInfo_MplsTeTunnelBidirInfo proto.InternalMessageInfo

func (m *MplsTeTunnelBidirInfo) GetReverseBandwidth() uint32 {
	if m != nil {
		return m.ReverseBandwidth
	}
	return 0
}

func (m *MplsTeTunnelBidirInfo) GetReverseBandwidthStandby() uint32 {
	if m != nil {
		return m.ReverseBandwidthStandby
	}
	return 0
}

func (m *MplsTeTunnelBidirInfo) GetReverseEroErrorCurrent() *MplsTeTunnelsReverseEroErrorBag {
	if m != nil {
		return m.ReverseEroErrorCurrent
	}
	return nil
}

func (m *MplsTeTunnelBidirInfo) GetReverseEroErrorReopt() *MplsTeTunnelsReverseEroErrorBag {
	if m != nil {
		return m.ReverseEroErrorReopt
	}
	return nil
}

func (m *MplsTeTunnelBidirInfo) GetReverseEroErrorStandby() *MplsTeTunnelsReverseEroErrorBag {
	if m != nil {
		return m.ReverseEroErrorStandby
	}
	return nil
}

func (m *MplsTeTunnelBidirInfo) GetReverseEroErrorStandbyReopt() *MplsTeTunnelsReverseEroErrorBag {
	if m != nil {
		return m.ReverseEroErrorStandbyReopt
	}
	return nil
}

type TeVifConvergenceInfo struct {
	IsConvergenceInProgress bool                  `protobuf:"varint,1,opt,name=is_convergence_in_progress,json=isConvergenceInProgress,proto3" json:"is_convergence_in_progress,omitempty"`
	FrrTriggerTime          uint64                `protobuf:"varint,2,opt,name=frr_trigger_time,json=frrTriggerTime,proto3" json:"frr_trigger_time,omitempty"`
	PcalcCompleteTime       uint64                `protobuf:"varint,3,opt,name=pcalc_complete_time,json=pcalcCompleteTime,proto3" json:"pcalc_complete_time,omitempty"`
	ConvergenceCompleteTime uint64                `protobuf:"varint,4,opt,name=convergence_complete_time,json=convergenceCompleteTime,proto3" json:"convergence_complete_time,omitempty"`
	ConvergenceLsp          *TeLspConvergenceInfo `protobuf:"bytes,5,opt,name=convergence_lsp,json=convergenceLsp,proto3" json:"convergence_lsp,omitempty"`
	BindingLabelRewriteTime uint64                `protobuf:"varint,6,opt,name=binding_label_rewrite_time,json=bindingLabelRewriteTime,proto3" json:"binding_label_rewrite_time,omitempty"`
	VifCreationTime         uint64                `protobuf:"varint,7,opt,name=vif_creation_time,json=vifCreationTime,proto3" json:"vif_creation_time,omitempty"`
	XXX_NoUnkeyedLiteral    struct{}              `json:"-"`
	XXX_unrecognized        []byte                `json:"-"`
	XXX_sizecache           int32                 `json:"-"`
}

func (m *TeVifConvergenceInfo) Reset()         { *m = TeVifConvergenceInfo{} }
func (m *TeVifConvergenceInfo) String() string { return proto.CompactTextString(m) }
func (*TeVifConvergenceInfo) ProtoMessage()    {}
func (*TeVifConvergenceInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_97fd10a364dd9ffd, []int{137}
}

func (m *TeVifConvergenceInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TeVifConvergenceInfo.Unmarshal(m, b)
}
func (m *TeVifConvergenceInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TeVifConvergenceInfo.Marshal(b, m, deterministic)
}
func (m *TeVifConvergenceInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TeVifConvergenceInfo.Merge(m, src)
}
func (m *TeVifConvergenceInfo) XXX_Size() int {
	return xxx_messageInfo_TeVifConvergenceInfo.Size(m)
}
func (m *TeVifConvergenceInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_TeVifConvergenceInfo.DiscardUnknown(m)
}

var xxx_messageInfo_TeVifConvergenceInfo proto.InternalMessageInfo

func (m *TeVifConvergenceInfo) GetIsConvergenceInProgress() bool {
	if m != nil {
		return m.IsConvergenceInProgress
	}
	return false
}

func (m *TeVifConvergenceInfo) GetFrrTriggerTime() uint64 {
	if m != nil {
		return m.FrrTriggerTime
	}
	return 0
}

func (m *TeVifConvergenceInfo) GetPcalcCompleteTime() uint64 {
	if m != nil {
		return m.PcalcCompleteTime
	}
	return 0
}

func (m *TeVifConvergenceInfo) GetConvergenceCompleteTime() uint64 {
	if m != nil {
		return m.ConvergenceCompleteTime
	}
	return 0
}

func (m *TeVifConvergenceInfo) GetConvergenceLsp() *TeLspConvergenceInfo {
	if m != nil {
		return m.ConvergenceLsp
	}
	return nil
}

func (m *TeVifConvergenceInfo) GetBindingLabelRewriteTime() uint64 {
	if m != nil {
		return m.BindingLabelRewriteTime
	}
	return 0
}

func (m *TeVifConvergenceInfo) GetVifCreationTime() uint64 {
	if m != nil {
		return m.VifCreationTime
	}
	return 0
}

type MplsTeTunnelFlexInfo struct {
	FaultLdiLockout      bool     `protobuf:"varint,1,opt,name=fault_ldi_lockout,json=faultLdiLockout,proto3" json:"fault_ldi_lockout,omitempty"`
	FaultLdi             bool     `protobuf:"varint,2,opt,name=fault_ldi,json=faultLdi,proto3" json:"fault_ldi,omitempty"`
	FaultLkr             bool     `protobuf:"varint,3,opt,name=fault_lkr,json=faultLkr,proto3" json:"fault_lkr,omitempty"`
	FaultAis             bool     `protobuf:"varint,4,opt,name=fault_ais,json=faultAis,proto3" json:"fault_ais,omitempty"`
	FaultTime            uint32   `protobuf:"varint,5,opt,name=fault_time,json=faultTime,proto3" json:"fault_time,omitempty"`
	FaultInLabel         uint32   `protobuf:"varint,6,opt,name=fault_in_label,json=faultInLabel,proto3" json:"fault_in_label,omitempty"`
	IsLockout            bool     `protobuf:"varint,7,opt,name=is_lockout,json=isLockout,proto3" json:"is_lockout,omitempty"`
	LockoutTimestamp     uint32   `protobuf:"varint,8,opt,name=lockout_timestamp,json=lockoutTimestamp,proto3" json:"lockout_timestamp,omitempty"`
	LockoutLspId         uint32   `protobuf:"varint,9,opt,name=lockout_lsp_id,json=lockoutLspId,proto3" json:"lockout_lsp_id,omitempty"`
	Origination          string   `protobuf:"bytes,10,opt,name=origination,proto3" json:"origination,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MplsTeTunnelFlexInfo) Reset()         { *m = MplsTeTunnelFlexInfo{} }
func (m *MplsTeTunnelFlexInfo) String() string { return proto.CompactTextString(m) }
func (*MplsTeTunnelFlexInfo) ProtoMessage()    {}
func (*MplsTeTunnelFlexInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_97fd10a364dd9ffd, []int{138}
}

func (m *MplsTeTunnelFlexInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsTeTunnelFlexInfo.Unmarshal(m, b)
}
func (m *MplsTeTunnelFlexInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsTeTunnelFlexInfo.Marshal(b, m, deterministic)
}
func (m *MplsTeTunnelFlexInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsTeTunnelFlexInfo.Merge(m, src)
}
func (m *MplsTeTunnelFlexInfo) XXX_Size() int {
	return xxx_messageInfo_MplsTeTunnelFlexInfo.Size(m)
}
func (m *MplsTeTunnelFlexInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsTeTunnelFlexInfo.DiscardUnknown(m)
}

var xxx_messageInfo_MplsTeTunnelFlexInfo proto.InternalMessageInfo

func (m *MplsTeTunnelFlexInfo) GetFaultLdiLockout() bool {
	if m != nil {
		return m.FaultLdiLockout
	}
	return false
}

func (m *MplsTeTunnelFlexInfo) GetFaultLdi() bool {
	if m != nil {
		return m.FaultLdi
	}
	return false
}

func (m *MplsTeTunnelFlexInfo) GetFaultLkr() bool {
	if m != nil {
		return m.FaultLkr
	}
	return false
}

func (m *MplsTeTunnelFlexInfo) GetFaultAis() bool {
	if m != nil {
		return m.FaultAis
	}
	return false
}

func (m *MplsTeTunnelFlexInfo) GetFaultTime() uint32 {
	if m != nil {
		return m.FaultTime
	}
	return 0
}

func (m *MplsTeTunnelFlexInfo) GetFaultInLabel() uint32 {
	if m != nil {
		return m.FaultInLabel
	}
	return 0
}

func (m *MplsTeTunnelFlexInfo) GetIsLockout() bool {
	if m != nil {
		return m.IsLockout
	}
	return false
}

func (m *MplsTeTunnelFlexInfo) GetLockoutTimestamp() uint32 {
	if m != nil {
		return m.LockoutTimestamp
	}
	return 0
}

func (m *MplsTeTunnelFlexInfo) GetLockoutLspId() uint32 {
	if m != nil {
		return m.LockoutLspId
	}
	return 0
}

func (m *MplsTeTunnelFlexInfo) GetOrigination() string {
	if m != nil {
		return m.Origination
	}
	return ""
}

type MplsTeP2MpTunnelBag struct {
	RoleStandby                            bool                            `protobuf:"varint,50,opt,name=role_standby,json=roleStandby,proto3" json:"role_standby,omitempty"`
	TunnelInterfaceName                    string                          `protobuf:"bytes,51,opt,name=tunnel_interface_name,json=tunnelInterfaceName,proto3" json:"tunnel_interface_name,omitempty"`
	Config                                 *MplsTeP2MpTunCfgBag            `protobuf:"bytes,52,opt,name=config,proto3" json:"config,omitempty"`
	AdminState                             string                          `protobuf:"bytes,53,opt,name=admin_state,json=adminState,proto3" json:"admin_state,omitempty"`
	OperationalState                       string                          `protobuf:"bytes,54,opt,name=operational_state,json=operationalState,proto3" json:"operational_state,omitempty"`
	OperationalStateChanges                uint32                          `protobuf:"varint,55,opt,name=operational_state_changes,json=operationalStateChanges,proto3" json:"operational_state_changes,omitempty"`
	SignaledName                           string                          `protobuf:"bytes,56,opt,name=signaled_name,json=signaledName,proto3" json:"signaled_name,omitempty"`
	FailReason                             string                          `protobuf:"bytes,57,opt,name=fail_reason,json=failReason,proto3" json:"fail_reason,omitempty"`
	DestinationUpCount                     uint32                          `protobuf:"varint,58,opt,name=destination_up_count,json=destinationUpCount,proto3" json:"destination_up_count,omitempty"`
	DestinationDisabledCount               uint32                          `protobuf:"varint,59,opt,name=destination_disabled_count,json=destinationDisabledCount,proto3" json:"destination_disabled_count,omitempty"`
	DestinationDownCount                   uint32                          `protobuf:"varint,60,opt,name=destination_down_count,json=destinationDownCount,proto3" json:"destination_down_count,omitempty"`
	Destination                            []*MplsTeP2MpDest               `protobuf:"bytes,61,rep,name=destination,proto3" json:"destination,omitempty"`
	TunnelCurrentLsp                       *MplsTeP2MpLsp                  `protobuf:"bytes,62,opt,name=tunnel_current_lsp,json=tunnelCurrentLsp,proto3" json:"tunnel_current_lsp,omitempty"`
	ReoptimizedP2MpLsp                     *MplsTeP2MpLsp                  `protobuf:"bytes,63,opt,name=reoptimized_p2mp_lsp,json=reoptimizedP2mpLsp,proto3" json:"reoptimized_p2mp_lsp,omitempty"`
	TunnelStandbyLsp                       *MplsTeP2MpLsp                  `protobuf:"bytes,64,opt,name=tunnel_standby_lsp,json=tunnelStandbyLsp,proto3" json:"tunnel_standby_lsp,omitempty"`
	ReoptimizedStandbyP2MpLsp              *MplsTeP2MpLsp                  `protobuf:"bytes,65,opt,name=reoptimized_standby_p2mp_lsp,json=reoptimizedStandbyP2mpLsp,proto3" json:"reoptimized_standby_p2mp_lsp,omitempty"`
	TunnelRestorationLsp                   *MplsTeP2MpLsp                  `protobuf:"bytes,66,opt,name=tunnel_restoration_lsp,json=tunnelRestorationLsp,proto3" json:"tunnel_restoration_lsp,omitempty"`
	DelayCleanPpLsp                        *MplsTeP2MpLsp                  `protobuf:"bytes,67,opt,name=delay_clean_pp_lsp,json=delayCleanPpLsp,proto3" json:"delay_clean_pp_lsp,omitempty"`
	CleanedLsp                             *MplsTeP2MpLsp                  `protobuf:"bytes,68,opt,name=cleaned_lsp,json=cleanedLsp,proto3" json:"cleaned_lsp,omitempty"`
	ReOptHoldDownTimerRemaining            uint32                          `protobuf:"varint,69,opt,name=re_opt_hold_down_timer_remaining,json=reOptHoldDownTimerRemaining,proto3" json:"re_opt_hold_down_timer_remaining,omitempty"`
	BandwidthRequested                     uint32                          `protobuf:"varint,70,opt,name=bandwidth_requested,json=bandwidthRequested,proto3" json:"bandwidth_requested,omitempty"`
	BandwidthType                          string                          `protobuf:"bytes,71,opt,name=bandwidth_type,json=bandwidthType,proto3" json:"bandwidth_type,omitempty"`
	IsNodeProtected                        bool                            `protobuf:"varint,72,opt,name=is_node_protected,json=isNodeProtected,proto3" json:"is_node_protected,omitempty"`
	IsBandwidthProtect                     bool                            `protobuf:"varint,73,opt,name=is_bandwidth_protect,json=isBandwidthProtect,proto3" json:"is_bandwidth_protect,omitempty"`
	TunnelRecovering                       bool                            `protobuf:"varint,74,opt,name=tunnel_recovering,json=tunnelRecovering,proto3" json:"tunnel_recovering,omitempty"`
	ReroutePending                         bool                            `protobuf:"varint,75,opt,name=reroute_pending,json=reroutePending,proto3" json:"reroute_pending,omitempty"`
	ExplicitPathChange                     bool                            `protobuf:"varint,76,opt,name=explicit_path_change,json=explicitPathChange,proto3" json:"explicit_path_change,omitempty"`
	PathOptionChange                       bool                            `protobuf:"varint,77,opt,name=path_option_change,json=pathOptionChange,proto3" json:"path_option_change,omitempty"`
	AffinityFailureReoptDisabled           bool                            `protobuf:"varint,78,opt,name=affinity_failure_reopt_disabled,json=affinityFailureReoptDisabled,proto3" json:"affinity_failure_reopt_disabled,omitempty"`
	AffinityFailureReoptTimeRemained       uint32                          `protobuf:"varint,79,opt,name=affinity_failure_reopt_time_remained,json=affinityFailureReoptTimeRemained,proto3" json:"affinity_failure_reopt_time_remained,omitempty"`
	AffinityFailureDelayedTearTimeRemained uint32                          `protobuf:"varint,80,opt,name=affinity_failure_delayed_tear_time_remained,json=affinityFailureDelayedTearTimeRemained,proto3" json:"affinity_failure_delayed_tear_time_remained,omitempty"`
	InvalidationTimeRemained               uint32                          `protobuf:"varint,81,opt,name=invalidation_time_remained,json=invalidationTimeRemained,proto3" json:"invalidation_time_remained,omitempty"`
	DropMode                               bool                            `protobuf:"varint,82,opt,name=drop_mode,json=dropMode,proto3" json:"drop_mode,omitempty"`
	AutoRoute                              bool                            `protobuf:"varint,83,opt,name=auto_route,json=autoRoute,proto3" json:"auto_route,omitempty"`
	ForwardingAdjacency                    bool                            `protobuf:"varint,84,opt,name=forwarding_adjacency,json=forwardingAdjacency,proto3" json:"forwarding_adjacency,omitempty"`
	LoadShareFactor                        uint32                          `protobuf:"varint,85,opt,name=load_share_factor,json=loadShareFactor,proto3" json:"load_share_factor,omitempty"`
	LoadShareType                          string                          `protobuf:"bytes,86,opt,name=load_share_type,json=loadShareType,proto3" json:"load_share_type,omitempty"`
	CreateTime                             uint32                          `protobuf:"varint,87,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	Uptime                                 uint32                          `protobuf:"varint,88,opt,name=uptime,proto3" json:"uptime,omitempty"`
	MetricType                             string                          `protobuf:"bytes,89,opt,name=metric_type,json=metricType,proto3" json:"metric_type,omitempty"`
	TieBreaker                             string                          `protobuf:"bytes,90,opt,name=tie_breaker,json=tieBreaker,proto3" json:"tie_breaker,omitempty"`
	TiebreakerType                         uint32                          `protobuf:"varint,91,opt,name=tiebreaker_type,json=tiebreakerType,proto3" json:"tiebreaker_type,omitempty"`
	TiebreakerQualifier                    string                          `protobuf:"bytes,92,opt,name=tiebreaker_qualifier,json=tiebreakerQualifier,proto3" json:"tiebreaker_qualifier,omitempty"`
	MetricQualifier                        string                          `protobuf:"bytes,93,opt,name=metric_qualifier,json=metricQualifier,proto3" json:"metric_qualifier,omitempty"`
	IsHopLimitIgnore                       bool                            `protobuf:"varint,94,opt,name=is_hop_limit_ignore,json=isHopLimitIgnore,proto3" json:"is_hop_limit_ignore,omitempty"`
	HopLimitIgnoredReason                  string                          `protobuf:"bytes,95,opt,name=hop_limit_ignored_reason,json=hopLimitIgnoredReason,proto3" json:"hop_limit_ignored_reason,omitempty"`
	OutboundFrrState                       string                          `protobuf:"bytes,96,opt,name=outbound_frr_state,json=outboundFrrState,proto3" json:"outbound_frr_state,omitempty"`
	AreaId                                 string                          `protobuf:"bytes,97,opt,name=area_id,json=areaId,proto3" json:"area_id,omitempty"`
	P2PInfo                                *MplsTeP2PInfoBag               `protobuf:"bytes,98,opt,name=p2p_info,json=p2pInfo,proto3" json:"p2p_info,omitempty"`
	AutoCapacity                           *MplsTeAutocapacity             `protobuf:"bytes,99,opt,name=auto_capacity,json=autoCapacity,proto3" json:"auto_capacity,omitempty"`
	PceFailReason                          string                          `protobuf:"bytes,100,opt,name=pce_fail_reason,json=pceFailReason,proto3" json:"pce_fail_reason,omitempty"`
	SnmpIndex                              uint32                          `protobuf:"varint,101,opt,name=snmp_index,json=snmpIndex,proto3" json:"snmp_index,omitempty"`
	History                                *MplsTeTunnelsHistoryBag        `protobuf:"bytes,102,opt,name=history,proto3" json:"history,omitempty"`
	PathProtection                         *MplsTePpInfo                   `protobuf:"bytes,103,opt,name=path_protection,json=pathProtection,proto3" json:"path_protection,omitempty"`
	IsInterAreaTunnel                      bool                            `protobuf:"varint,104,opt,name=is_inter_area_tunnel,json=isInterAreaTunnel,proto3" json:"is_inter_area_tunnel,omitempty"`
	AutoBackup                             *MplsTeAutobackupInfo           `protobuf:"bytes,105,opt,name=auto_backup,json=autoBackup,proto3" json:"auto_backup,omitempty"`
	IsAutoBackup                           bool                            `protobuf:"varint,106,opt,name=is_auto_backup,json=isAutoBackup,proto3" json:"is_auto_backup,omitempty"`
	AutoMesh                               *MplsTeAutomeshInfo             `protobuf:"bytes,107,opt,name=auto_mesh,json=autoMesh,proto3" json:"auto_mesh,omitempty"`
	IsAutoPcc                              bool                            `protobuf:"varint,108,opt,name=is_auto_pcc,json=isAutoPcc,proto3" json:"is_auto_pcc,omitempty"`
	AutoPcc                                *MplsTeAutopccInfo              `protobuf:"bytes,109,opt,name=auto_pcc,json=autoPcc,proto3" json:"auto_pcc,omitempty"`
	IsPceDelegated                         bool                            `protobuf:"varint,110,opt,name=is_pce_delegated,json=isPceDelegated,proto3" json:"is_pce_delegated,omitempty"`
	PceDelegation                          *MplsTePceDelegationInfo        `protobuf:"bytes,111,opt,name=pce_delegation,json=pceDelegation,proto3" json:"pce_delegation,omitempty"`
	TunnelAttributeSetName                 string                          `protobuf:"bytes,112,opt,name=tunnel_attribute_set_name,json=tunnelAttributeSetName,proto3" json:"tunnel_attribute_set_name,omitempty"`
	TunnelAttributeSetType                 string                          `protobuf:"bytes,113,opt,name=tunnel_attribute_set_type,json=tunnelAttributeSetType,proto3" json:"tunnel_attribute_set_type,omitempty"`
	SoftPreemption                         *MplsTeSoftPreemptionTunnelInfo `protobuf:"bytes,114,opt,name=soft_preemption,json=softPreemption,proto3" json:"soft_preemption,omitempty"`
	WdmUnitunnel                           *MplsTeMgmtWdmUniTunnelInfo     `protobuf:"bytes,115,opt,name=wdm_unitunnel,json=wdmUnitunnel,proto3" json:"wdm_unitunnel,omitempty"`
	TransportTunnelInfo                    *MplsTeTransportTunnelInfo      `protobuf:"bytes,116,opt,name=transport_tunnel_info,json=transportTunnelInfo,proto3" json:"transport_tunnel_info,omitempty"`
	BfdInfo                                *MplsTeTunnelBfdInfo            `protobuf:"bytes,117,opt,name=bfd_info,json=bfdInfo,proto3" json:"bfd_info,omitempty"`
	OtnBidir                               *MplsTeTunnelOtnBidirInfo       `protobuf:"bytes,118,opt,name=otn_bidir,json=otnBidir,proto3" json:"otn_bidir,omitempty"`
	Bidir                                  *MplsTeTunnelBidirInfo          `protobuf:"bytes,119,opt,name=bidir,proto3" json:"bidir,omitempty"`
	XroAttributeSetName                    string                          `protobuf:"bytes,120,opt,name=xro_attribute_set_name,json=xroAttributeSetName,proto3" json:"xro_attribute_set_name,omitempty"`
	XroAttributeSet                        *MplsTeAttributeSet             `protobuf:"bytes,121,opt,name=xro_attribute_set,json=xroAttributeSet,proto3" json:"xro_attribute_set,omitempty"`
	TeTunnelConvergence                    *TeVifConvergenceInfo           `protobuf:"bytes,122,opt,name=te_tunnel_convergence,json=teTunnelConvergence,proto3" json:"te_tunnel_convergence,omitempty"`
	IsPassive                              bool                            `protobuf:"varint,123,opt,name=is_passive,json=isPassive,proto3" json:"is_passive,omitempty"`
	PassiveTunnelName                      string                          `protobuf:"bytes,124,opt,name=passive_tunnel_name,json=passiveTunnelName,proto3" json:"passive_tunnel_name,omitempty"`
	FlexInfo                               *MplsTeTunnelFlexInfo           `protobuf:"bytes,125,opt,name=flex_info,json=flexInfo,proto3" json:"flex_info,omitempty"`
	BindingLabelExists                     bool                            `protobuf:"varint,126,opt,name=binding_label_exists,json=bindingLabelExists,proto3" json:"binding_label_exists,omitempty"`
	BindingLabel                           uint32                          `protobuf:"varint,127,opt,name=binding_label,json=bindingLabel,proto3" json:"binding_label,omitempty"`
	LastHopIfindex                         uint32                          `protobuf:"varint,128,opt,name=last_hop_ifindex,json=lastHopIfindex,proto3" json:"last_hop_ifindex,omitempty"`
	IsNamed                                bool                            `protobuf:"varint,129,opt,name=is_named,json=isNamed,proto3" json:"is_named,omitempty"`
	LspWrapProtectionEnabled               bool                            `protobuf:"varint,130,opt,name=lsp_wrap_protection_enabled,json=lspWrapProtectionEnabled,proto3" json:"lsp_wrap_protection_enabled,omitempty"`
	LspWrapLabel                           uint32                          `protobuf:"varint,131,opt,name=lsp_wrap_label,json=lspWrapLabel,proto3" json:"lsp_wrap_label,omitempty"`
	IsInterface                            bool                            `protobuf:"varint,132,opt,name=is_interface,json=isInterface,proto3" json:"is_interface,omitempty"`
	LastPathChange                         uint32                          `protobuf:"varint,133,opt,name=last_path_change,json=lastPathChange,proto3" json:"last_path_change,omitempty"`
	PersistentBytes                        uint64                          `protobuf:"varint,134,opt,name=persistent_bytes,json=persistentBytes,proto3" json:"persistent_bytes,omitempty"`
	PersistentPackets                      uint64                          `protobuf:"varint,135,opt,name=persistent_packets,json=persistentPackets,proto3" json:"persistent_packets,omitempty"`
	AutorouteAnnounceExcludeSegmentRouting bool                            `protobuf:"varint,136,opt,name=autoroute_announce_exclude_segment_routing,json=autorouteAnnounceExcludeSegmentRouting,proto3" json:"autoroute_announce_exclude_segment_routing,omitempty"`
	LastWorkingLspId                       uint32                          `protobuf:"varint,137,opt,name=last_working_lsp_id,json=lastWorkingLspId,proto3" json:"last_working_lsp_id,omitempty"`
	XXX_NoUnkeyedLiteral                   struct{}                        `json:"-"`
	XXX_unrecognized                       []byte                          `json:"-"`
	XXX_sizecache                          int32                           `json:"-"`
}

func (m *MplsTeP2MpTunnelBag) Reset()         { *m = MplsTeP2MpTunnelBag{} }
func (m *MplsTeP2MpTunnelBag) String() string { return proto.CompactTextString(m) }
func (*MplsTeP2MpTunnelBag) ProtoMessage()    {}
func (*MplsTeP2MpTunnelBag) Descriptor() ([]byte, []int) {
	return fileDescriptor_97fd10a364dd9ffd, []int{139}
}

func (m *MplsTeP2MpTunnelBag) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsTeP2MpTunnelBag.Unmarshal(m, b)
}
func (m *MplsTeP2MpTunnelBag) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsTeP2MpTunnelBag.Marshal(b, m, deterministic)
}
func (m *MplsTeP2MpTunnelBag) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsTeP2MpTunnelBag.Merge(m, src)
}
func (m *MplsTeP2MpTunnelBag) XXX_Size() int {
	return xxx_messageInfo_MplsTeP2MpTunnelBag.Size(m)
}
func (m *MplsTeP2MpTunnelBag) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsTeP2MpTunnelBag.DiscardUnknown(m)
}

var xxx_messageInfo_MplsTeP2MpTunnelBag proto.InternalMessageInfo

func (m *MplsTeP2MpTunnelBag) GetRoleStandby() bool {
	if m != nil {
		return m.RoleStandby
	}
	return false
}

func (m *MplsTeP2MpTunnelBag) GetTunnelInterfaceName() string {
	if m != nil {
		return m.TunnelInterfaceName
	}
	return ""
}

func (m *MplsTeP2MpTunnelBag) GetConfig() *MplsTeP2MpTunCfgBag {
	if m != nil {
		return m.Config
	}
	return nil
}

func (m *MplsTeP2MpTunnelBag) GetAdminState() string {
	if m != nil {
		return m.AdminState
	}
	return ""
}

func (m *MplsTeP2MpTunnelBag) GetOperationalState() string {
	if m != nil {
		return m.OperationalState
	}
	return ""
}

func (m *MplsTeP2MpTunnelBag) GetOperationalStateChanges() uint32 {
	if m != nil {
		return m.OperationalStateChanges
	}
	return 0
}

func (m *MplsTeP2MpTunnelBag) GetSignaledName() string {
	if m != nil {
		return m.SignaledName
	}
	return ""
}

func (m *MplsTeP2MpTunnelBag) GetFailReason() string {
	if m != nil {
		return m.FailReason
	}
	return ""
}

func (m *MplsTeP2MpTunnelBag) GetDestinationUpCount() uint32 {
	if m != nil {
		return m.DestinationUpCount
	}
	return 0
}

func (m *MplsTeP2MpTunnelBag) GetDestinationDisabledCount() uint32 {
	if m != nil {
		return m.DestinationDisabledCount
	}
	return 0
}

func (m *MplsTeP2MpTunnelBag) GetDestinationDownCount() uint32 {
	if m != nil {
		return m.DestinationDownCount
	}
	return 0
}

func (m *MplsTeP2MpTunnelBag) GetDestination() []*MplsTeP2MpDest {
	if m != nil {
		return m.Destination
	}
	return nil
}

func (m *MplsTeP2MpTunnelBag) GetTunnelCurrentLsp() *MplsTeP2MpLsp {
	if m != nil {
		return m.TunnelCurrentLsp
	}
	return nil
}

func (m *MplsTeP2MpTunnelBag) GetReoptimizedP2MpLsp() *MplsTeP2MpLsp {
	if m != nil {
		return m.ReoptimizedP2MpLsp
	}
	return nil
}

func (m *MplsTeP2MpTunnelBag) GetTunnelStandbyLsp() *MplsTeP2MpLsp {
	if m != nil {
		return m.TunnelStandbyLsp
	}
	return nil
}

func (m *MplsTeP2MpTunnelBag) GetReoptimizedStandbyP2MpLsp() *MplsTeP2MpLsp {
	if m != nil {
		return m.ReoptimizedStandbyP2MpLsp
	}
	return nil
}

func (m *MplsTeP2MpTunnelBag) GetTunnelRestorationLsp() *MplsTeP2MpLsp {
	if m != nil {
		return m.TunnelRestorationLsp
	}
	return nil
}

func (m *MplsTeP2MpTunnelBag) GetDelayCleanPpLsp() *MplsTeP2MpLsp {
	if m != nil {
		return m.DelayCleanPpLsp
	}
	return nil
}

func (m *MplsTeP2MpTunnelBag) GetCleanedLsp() *MplsTeP2MpLsp {
	if m != nil {
		return m.CleanedLsp
	}
	return nil
}

func (m *MplsTeP2MpTunnelBag) GetReOptHoldDownTimerRemaining() uint32 {
	if m != nil {
		return m.ReOptHoldDownTimerRemaining
	}
	return 0
}

func (m *MplsTeP2MpTunnelBag) GetBandwidthRequested() uint32 {
	if m != nil {
		return m.BandwidthRequested
	}
	return 0
}

func (m *MplsTeP2MpTunnelBag) GetBandwidthType() string {
	if m != nil {
		return m.BandwidthType
	}
	return ""
}

func (m *MplsTeP2MpTunnelBag) GetIsNodeProtected() bool {
	if m != nil {
		return m.IsNodeProtected
	}
	return false
}

func (m *MplsTeP2MpTunnelBag) GetIsBandwidthProtect() bool {
	if m != nil {
		return m.IsBandwidthProtect
	}
	return false
}

func (m *MplsTeP2MpTunnelBag) GetTunnelRecovering() bool {
	if m != nil {
		return m.TunnelRecovering
	}
	return false
}

func (m *MplsTeP2MpTunnelBag) GetReroutePending() bool {
	if m != nil {
		return m.ReroutePending
	}
	return false
}

func (m *MplsTeP2MpTunnelBag) GetExplicitPathChange() bool {
	if m != nil {
		return m.ExplicitPathChange
	}
	return false
}

func (m *MplsTeP2MpTunnelBag) GetPathOptionChange() bool {
	if m != nil {
		return m.PathOptionChange
	}
	return false
}

func (m *MplsTeP2MpTunnelBag) GetAffinityFailureReoptDisabled() bool {
	if m != nil {
		return m.AffinityFailureReoptDisabled
	}
	return false
}

func (m *MplsTeP2MpTunnelBag) GetAffinityFailureReoptTimeRemained() uint32 {
	if m != nil {
		return m.AffinityFailureReoptTimeRemained
	}
	return 0
}

func (m *MplsTeP2MpTunnelBag) GetAffinityFailureDelayedTearTimeRemained() uint32 {
	if m != nil {
		return m.AffinityFailureDelayedTearTimeRemained
	}
	return 0
}

func (m *MplsTeP2MpTunnelBag) GetInvalidationTimeRemained() uint32 {
	if m != nil {
		return m.InvalidationTimeRemained
	}
	return 0
}

func (m *MplsTeP2MpTunnelBag) GetDropMode() bool {
	if m != nil {
		return m.DropMode
	}
	return false
}

func (m *MplsTeP2MpTunnelBag) GetAutoRoute() bool {
	if m != nil {
		return m.AutoRoute
	}
	return false
}

func (m *MplsTeP2MpTunnelBag) GetForwardingAdjacency() bool {
	if m != nil {
		return m.ForwardingAdjacency
	}
	return false
}

func (m *MplsTeP2MpTunnelBag) GetLoadShareFactor() uint32 {
	if m != nil {
		return m.LoadShareFactor
	}
	return 0
}

func (m *MplsTeP2MpTunnelBag) GetLoadShareType() string {
	if m != nil {
		return m.LoadShareType
	}
	return ""
}

func (m *MplsTeP2MpTunnelBag) GetCreateTime() uint32 {
	if m != nil {
		return m.CreateTime
	}
	return 0
}

func (m *MplsTeP2MpTunnelBag) GetUptime() uint32 {
	if m != nil {
		return m.Uptime
	}
	return 0
}

func (m *MplsTeP2MpTunnelBag) GetMetricType() string {
	if m != nil {
		return m.MetricType
	}
	return ""
}

func (m *MplsTeP2MpTunnelBag) GetTieBreaker() string {
	if m != nil {
		return m.TieBreaker
	}
	return ""
}

func (m *MplsTeP2MpTunnelBag) GetTiebreakerType() uint32 {
	if m != nil {
		return m.TiebreakerType
	}
	return 0
}

func (m *MplsTeP2MpTunnelBag) GetTiebreakerQualifier() string {
	if m != nil {
		return m.TiebreakerQualifier
	}
	return ""
}

func (m *MplsTeP2MpTunnelBag) GetMetricQualifier() string {
	if m != nil {
		return m.MetricQualifier
	}
	return ""
}

func (m *MplsTeP2MpTunnelBag) GetIsHopLimitIgnore() bool {
	if m != nil {
		return m.IsHopLimitIgnore
	}
	return false
}

func (m *MplsTeP2MpTunnelBag) GetHopLimitIgnoredReason() string {
	if m != nil {
		return m.HopLimitIgnoredReason
	}
	return ""
}

func (m *MplsTeP2MpTunnelBag) GetOutboundFrrState() string {
	if m != nil {
		return m.OutboundFrrState
	}
	return ""
}

func (m *MplsTeP2MpTunnelBag) GetAreaId() string {
	if m != nil {
		return m.AreaId
	}
	return ""
}

func (m *MplsTeP2MpTunnelBag) GetP2PInfo() *MplsTeP2PInfoBag {
	if m != nil {
		return m.P2PInfo
	}
	return nil
}

func (m *MplsTeP2MpTunnelBag) GetAutoCapacity() *MplsTeAutocapacity {
	if m != nil {
		return m.AutoCapacity
	}
	return nil
}

func (m *MplsTeP2MpTunnelBag) GetPceFailReason() string {
	if m != nil {
		return m.PceFailReason
	}
	return ""
}

func (m *MplsTeP2MpTunnelBag) GetSnmpIndex() uint32 {
	if m != nil {
		return m.SnmpIndex
	}
	return 0
}

func (m *MplsTeP2MpTunnelBag) GetHistory() *MplsTeTunnelsHistoryBag {
	if m != nil {
		return m.History
	}
	return nil
}

func (m *MplsTeP2MpTunnelBag) GetPathProtection() *MplsTePpInfo {
	if m != nil {
		return m.PathProtection
	}
	return nil
}

func (m *MplsTeP2MpTunnelBag) GetIsInterAreaTunnel() bool {
	if m != nil {
		return m.IsInterAreaTunnel
	}
	return false
}

func (m *MplsTeP2MpTunnelBag) GetAutoBackup() *MplsTeAutobackupInfo {
	if m != nil {
		return m.AutoBackup
	}
	return nil
}

func (m *MplsTeP2MpTunnelBag) GetIsAutoBackup() bool {
	if m != nil {
		return m.IsAutoBackup
	}
	return false
}

func (m *MplsTeP2MpTunnelBag) GetAutoMesh() *MplsTeAutomeshInfo {
	if m != nil {
		return m.AutoMesh
	}
	return nil
}

func (m *MplsTeP2MpTunnelBag) GetIsAutoPcc() bool {
	if m != nil {
		return m.IsAutoPcc
	}
	return false
}

func (m *MplsTeP2MpTunnelBag) GetAutoPcc() *MplsTeAutopccInfo {
	if m != nil {
		return m.AutoPcc
	}
	return nil
}

func (m *MplsTeP2MpTunnelBag) GetIsPceDelegated() bool {
	if m != nil {
		return m.IsPceDelegated
	}
	return false
}

func (m *MplsTeP2MpTunnelBag) GetPceDelegation() *MplsTePceDelegationInfo {
	if m != nil {
		return m.PceDelegation
	}
	return nil
}

func (m *MplsTeP2MpTunnelBag) GetTunnelAttributeSetName() string {
	if m != nil {
		return m.TunnelAttributeSetName
	}
	return ""
}

func (m *MplsTeP2MpTunnelBag) GetTunnelAttributeSetType() string {
	if m != nil {
		return m.TunnelAttributeSetType
	}
	return ""
}

func (m *MplsTeP2MpTunnelBag) GetSoftPreemption() *MplsTeSoftPreemptionTunnelInfo {
	if m != nil {
		return m.SoftPreemption
	}
	return nil
}

func (m *MplsTeP2MpTunnelBag) GetWdmUnitunnel() *MplsTeMgmtWdmUniTunnelInfo {
	if m != nil {
		return m.WdmUnitunnel
	}
	return nil
}

func (m *MplsTeP2MpTunnelBag) GetTransportTunnelInfo() *MplsTeTransportTunnelInfo {
	if m != nil {
		return m.TransportTunnelInfo
	}
	return nil
}

func (m *MplsTeP2MpTunnelBag) GetBfdInfo() *MplsTeTunnelBfdInfo {
	if m != nil {
		return m.BfdInfo
	}
	return nil
}

func (m *MplsTeP2MpTunnelBag) GetOtnBidir() *MplsTeTunnelOtnBidirInfo {
	if m != nil {
		return m.OtnBidir
	}
	return nil
}

func (m *MplsTeP2MpTunnelBag) GetBidir() *MplsTeTunnelBidirInfo {
	if m != nil {
		return m.Bidir
	}
	return nil
}

func (m *MplsTeP2MpTunnelBag) GetXroAttributeSetName() string {
	if m != nil {
		return m.XroAttributeSetName
	}
	return ""
}

func (m *MplsTeP2MpTunnelBag) GetXroAttributeSet() *MplsTeAttributeSet {
	if m != nil {
		return m.XroAttributeSet
	}
	return nil
}

func (m *MplsTeP2MpTunnelBag) GetTeTunnelConvergence() *TeVifConvergenceInfo {
	if m != nil {
		return m.TeTunnelConvergence
	}
	return nil
}

func (m *MplsTeP2MpTunnelBag) GetIsPassive() bool {
	if m != nil {
		return m.IsPassive
	}
	return false
}

func (m *MplsTeP2MpTunnelBag) GetPassiveTunnelName() string {
	if m != nil {
		return m.PassiveTunnelName
	}
	return ""
}

func (m *MplsTeP2MpTunnelBag) GetFlexInfo() *MplsTeTunnelFlexInfo {
	if m != nil {
		return m.FlexInfo
	}
	return nil
}

func (m *MplsTeP2MpTunnelBag) GetBindingLabelExists() bool {
	if m != nil {
		return m.BindingLabelExists
	}
	return false
}

func (m *MplsTeP2MpTunnelBag) GetBindingLabel() uint32 {
	if m != nil {
		return m.BindingLabel
	}
	return 0
}

func (m *MplsTeP2MpTunnelBag) GetLastHopIfindex() uint32 {
	if m != nil {
		return m.LastHopIfindex
	}
	return 0
}

func (m *MplsTeP2MpTunnelBag) GetIsNamed() bool {
	if m != nil {
		return m.IsNamed
	}
	return false
}

func (m *MplsTeP2MpTunnelBag) GetLspWrapProtectionEnabled() bool {
	if m != nil {
		return m.LspWrapProtectionEnabled
	}
	return false
}

func (m *MplsTeP2MpTunnelBag) GetLspWrapLabel() uint32 {
	if m != nil {
		return m.LspWrapLabel
	}
	return 0
}

func (m *MplsTeP2MpTunnelBag) GetIsInterface() bool {
	if m != nil {
		return m.IsInterface
	}
	return false
}

func (m *MplsTeP2MpTunnelBag) GetLastPathChange() uint32 {
	if m != nil {
		return m.LastPathChange
	}
	return 0
}

func (m *MplsTeP2MpTunnelBag) GetPersistentBytes() uint64 {
	if m != nil {
		return m.PersistentBytes
	}
	return 0
}

func (m *MplsTeP2MpTunnelBag) GetPersistentPackets() uint64 {
	if m != nil {
		return m.PersistentPackets
	}
	return 0
}

func (m *MplsTeP2MpTunnelBag) GetAutorouteAnnounceExcludeSegmentRouting() bool {
	if m != nil {
		return m.AutorouteAnnounceExcludeSegmentRouting
	}
	return false
}

func (m *MplsTeP2MpTunnelBag) GetLastWorkingLspId() uint32 {
	if m != nil {
		return m.LastWorkingLspId
	}
	return 0
}

func init() {
	proto.RegisterType((*MplsTeP2MpTunnelBag_KEYS)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.p2p_p2mp_tunnel.tunnel_heads.tunnel_head.mpls_te_p2mp_tunnel_bag_KEYS")
	proto.RegisterType((*AffinityNameBag)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.p2p_p2mp_tunnel.tunnel_heads.tunnel_head.affinity_name_bag")
	proto.RegisterType((*MplsTeTunnelsAffinityInfo)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.p2p_p2mp_tunnel.tunnel_heads.tunnel_head.mpls_te_tunnels_affinity_info")
	proto.RegisterType((*MplsTeTunnelBidirConfigInfo)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.p2p_p2mp_tunnel.tunnel_heads.tunnel_head.mpls_te_tunnel_bidir_config_info")
	proto.RegisterType((*MplsTeTunnelBfdConfigInfo)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.p2p_p2mp_tunnel.tunnel_heads.tunnel_head.mpls_te_tunnel_bfd_config_info")
	proto.RegisterType((*MplsTeAutorouteDestinationBag)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.p2p_p2mp_tunnel.tunnel_heads.tunnel_head.mpls_te_autoroute_destination_bag")
	proto.RegisterType((*MplsTeTunnelLogging)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.p2p_p2mp_tunnel.tunnel_heads.tunnel_head.mpls_te_tunnel_logging")
	proto.RegisterType((*MplsTeP2MpTunCfgBag)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.p2p_p2mp_tunnel.tunnel_heads.tunnel_head.mpls_te_p2mp_tun_cfg_bag")
	proto.RegisterType((*MplsTeAttributeSetVersion)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.p2p_p2mp_tunnel.tunnel_heads.tunnel_head.mpls_te_attribute_set_version")
	proto.RegisterType((*MplsTeAttributeSetBfdRevPath)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.p2p_p2mp_tunnel.tunnel_heads.tunnel_head.mpls_te_attribute_set_bfd_rev_path")
	proto.RegisterType((*MplsTeAttributeSetPathOption)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.p2p_p2mp_tunnel.tunnel_heads.tunnel_head.mpls_te_attribute_set_path_option")
	proto.RegisterType((*MplsTeAttributeSetSigName)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.p2p_p2mp_tunnel.tunnel_heads.tunnel_head.mpls_te_attribute_set_sig_name")
	proto.RegisterType((*MplsTeLoggingAttributes)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.p2p_p2mp_tunnel.tunnel_heads.tunnel_head.mpls_te_logging_attributes")
	proto.RegisterType((*MplsTeProtectedIfNameStr)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.p2p_p2mp_tunnel.tunnel_heads.tunnel_head.mpls_te_protected_if_name_str")
	proto.RegisterType((*MplsTeAttributeSetAutoBackup)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.p2p_p2mp_tunnel.tunnel_heads.tunnel_head.mpls_te_attribute_set_auto_backup")
	proto.RegisterType((*MplsTeAttributeSetAutoMesh)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.p2p_p2mp_tunnel.tunnel_heads.tunnel_head.mpls_te_attribute_set_auto_mesh")
	proto.RegisterType((*TeXroSubobjIpv4)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.p2p_p2mp_tunnel.tunnel_heads.tunnel_head.te_xro_subobj_ipv4")
	proto.RegisterType((*TeXroSubobjIpv6)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.p2p_p2mp_tunnel.tunnel_heads.tunnel_head.te_xro_subobj_ipv6")
	proto.RegisterType((*TeXroSubobjUnnum)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.p2p_p2mp_tunnel.tunnel_heads.tunnel_head.te_xro_subobj_unnum")
	proto.RegisterType((*TeXroSubobjAs)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.p2p_p2mp_tunnel.tunnel_heads.tunnel_head.te_xro_subobj_as")
	proto.RegisterType((*TeXroSubobjSrlg)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.p2p_p2mp_tunnel.tunnel_heads.tunnel_head.te_xro_subobj_srlg")
	proto.RegisterType((*TeLspFecCtypeDataT)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.p2p_p2mp_tunnel.tunnel_heads.tunnel_head.te_lsp_fec_ctype_data_t")
	proto.RegisterType((*TeLspFecT)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.p2p_p2mp_tunnel.tunnel_heads.tunnel_head.te_lsp_fec_t")
	proto.RegisterType((*TeXroSubobjP2PLsp)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.p2p_p2mp_tunnel.tunnel_heads.tunnel_head.te_xro_subobj_p2p_lsp")
	proto.RegisterType((*TeXroSubobj)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.p2p_p2mp_tunnel.tunnel_heads.tunnel_head.te_xro_subobj")
	proto.RegisterType((*TeXro)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.p2p_p2mp_tunnel.tunnel_heads.tunnel_head.te_xro")
	proto.RegisterType((*MplsTeAttributeSetXro)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.p2p_p2mp_tunnel.tunnel_heads.tunnel_head.mpls_te_attribute_set_xro")
	proto.RegisterType((*MplsTeAttributeSetP2MpTe)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.p2p_p2mp_tunnel.tunnel_heads.tunnel_head.mpls_te_attribute_set_p2mp_te")
	proto.RegisterType((*TeRevertSchT)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.p2p_p2mp_tunnel.tunnel_heads.tunnel_head.te_revert_sch_t")
	proto.RegisterType((*MplsTeAttributeSetApsPp)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.p2p_p2mp_tunnel.tunnel_heads.tunnel_head.mpls_te_attribute_set_aps_pp")
	proto.RegisterType((*MplsTeAttributeSetSrPrependEntry)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.p2p_p2mp_tunnel.tunnel_heads.tunnel_head.mpls_te_attribute_set_sr_prepend_entry")
	proto.RegisterType((*MplsTeAttributeSetSrPrependList)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.p2p_p2mp_tunnel.tunnel_heads.tunnel_head.mpls_te_attribute_set_sr_prepend_list")
	proto.RegisterType((*MplsTeAttributeSetP2PTe)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.p2p_p2mp_tunnel.tunnel_heads.tunnel_head.mpls_te_attribute_set_p2p_te")
	proto.RegisterType((*MplsTeAttributeSetUnion)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.p2p_p2mp_tunnel.tunnel_heads.tunnel_head.mpls_te_attribute_set_union")
	proto.RegisterType((*MplsTeAttributeSet)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.p2p_p2mp_tunnel.tunnel_heads.tunnel_head.mpls_te_attribute_set")
	proto.RegisterType((*MplsTeP2MpPcalcError)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.p2p_p2mp_tunnel.tunnel_heads.tunnel_head.mpls_te_p2mp_pcalc_error")
	proto.RegisterType((*MplsTeP2MpSigError)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.p2p_p2mp_tunnel.tunnel_heads.tunnel_head.mpls_te_p2mp_sig_error")
	proto.RegisterType((*MplsTeP2MpPathOption)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.p2p_p2mp_tunnel.tunnel_heads.tunnel_head.mpls_te_p2mp_path_option")
	proto.RegisterType((*MplsTeInterareaReoptInfo)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.p2p_p2mp_tunnel.tunnel_heads.tunnel_head.mpls_te_interarea_reopt_info")
	proto.RegisterType((*MplsTeP2MpDest)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.p2p_p2mp_tunnel.tunnel_heads.tunnel_head.mpls_te_p2mp_dest")
	proto.RegisterType((*TeS2LFecT)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.p2p_p2mp_tunnel.tunnel_heads.tunnel_head.te_s2l_fec_t")
	proto.RegisterType((*MplsSrlgInfo)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.p2p_p2mp_tunnel.tunnel_heads.tunnel_head.mpls_srlg_info")
	proto.RegisterType((*RsvpMgmtEroIpv4Subobj)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.p2p_p2mp_tunnel.tunnel_heads.tunnel_head.rsvp_mgmt_ero_ipv4_subobj")
	proto.RegisterType((*RsvpMgmtEroUnnumSubobj)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.p2p_p2mp_tunnel.tunnel_heads.tunnel_head.rsvp_mgmt_ero_unnum_subobj")
	proto.RegisterType((*RsvpMgmtEroSubobj)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.p2p_p2mp_tunnel.tunnel_heads.tunnel_head.rsvp_mgmt_ero_subobj")
	proto.RegisterType((*RsvpMgmtRroIpv4SubobjFlags)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.p2p_p2mp_tunnel.tunnel_heads.tunnel_head.rsvp_mgmt_rro_ipv4_subobj_flags")
	proto.RegisterType((*RsvpMgmtRroIpv4Subobj)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.p2p_p2mp_tunnel.tunnel_heads.tunnel_head.rsvp_mgmt_rro_ipv4_subobj")
	proto.RegisterType((*RsvpMgmtRroLabelSubobjFlags)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.p2p_p2mp_tunnel.tunnel_heads.tunnel_head.rsvp_mgmt_rro_label_subobj_flags")
	proto.RegisterType((*RsvpMgmtRroLabelSubobj)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.p2p_p2mp_tunnel.tunnel_heads.tunnel_head.rsvp_mgmt_rro_label_subobj")
	proto.RegisterType((*RsvpMgmtRroUnnumberedSubobjFlags)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.p2p_p2mp_tunnel.tunnel_heads.tunnel_head.rsvp_mgmt_rro_unnumbered_subobj_flags")
	proto.RegisterType((*RsvpMgmtRroUnnumberedSubobj)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.p2p_p2mp_tunnel.tunnel_heads.tunnel_head.rsvp_mgmt_rro_unnumbered_subobj")
	proto.RegisterType((*RsvpMgmtRroSrlgSubobj)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.p2p_p2mp_tunnel.tunnel_heads.tunnel_head.rsvp_mgmt_rro_srlg_subobj")
	proto.RegisterType((*RsvpMgmtRroSubobj)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.p2p_p2mp_tunnel.tunnel_heads.tunnel_head.rsvp_mgmt_rro_subobj")
	proto.RegisterType((*TunnelHopInfo)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.p2p_p2mp_tunnel.tunnel_heads.tunnel_head.tunnel_hop_info")
	proto.RegisterType((*BandwidthSpecBag)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.p2p_p2mp_tunnel.tunnel_heads.tunnel_head.bandwidth_spec_bag")
	proto.RegisterType((*TeMgmtG709OtnTspec)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.p2p_p2mp_tunnel.tunnel_heads.tunnel_head.te_mgmt_g709_otn_tspec")
	proto.RegisterType((*TeMgmtGenericTspec)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.p2p_p2mp_tunnel.tunnel_heads.tunnel_head.te_mgmt_generic_tspec")
	proto.RegisterType((*TeMgmtG709OtnFspec)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.p2p_p2mp_tunnel.tunnel_heads.tunnel_head.te_mgmt_g709_otn_fspec")
	proto.RegisterType((*TeMgmtGenericFspec)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.p2p_p2mp_tunnel.tunnel_heads.tunnel_head.te_mgmt_generic_fspec")
	proto.RegisterType((*TeAddrTypeIpv4Unnum)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.p2p_p2mp_tunnel.tunnel_heads.tunnel_head.te_addr_type_ipv4_unnum")
	proto.RegisterType((*Addr)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.p2p_p2mp_tunnel.tunnel_heads.tunnel_head.addr")
	proto.RegisterType((*TeAddrT_)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.p2p_p2mp_tunnel.tunnel_heads.tunnel_head.te_addr_t_")
	proto.RegisterType((*TeLspConvergenceInfo)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.p2p_p2mp_tunnel.tunnel_heads.tunnel_head.te_lsp_convergence_info")
	proto.RegisterType((*MplsTeSoftPreemptionLspInfo)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.p2p_p2mp_tunnel.tunnel_heads.tunnel_head.mpls_te_soft_preemption_lsp_info")
	proto.RegisterType((*MplsTeMgmtWdmFixedGridLabel)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.p2p_p2mp_tunnel.tunnel_heads.tunnel_head.mpls_te_mgmt_wdm_fixed_grid_label")
	proto.RegisterType((*MplsTeMgmtG709OtnFixedSizeLabel)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.p2p_p2mp_tunnel.tunnel_heads.tunnel_head.mpls_te_mgmt_g709_otn_fixed_size_label")
	proto.RegisterType((*MplsTeMgmtGmplsLabel)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.p2p_p2mp_tunnel.tunnel_heads.tunnel_head.mpls_te_mgmt_gmpls_label")
	proto.RegisterType((*MplsTeMgmtGmplsLabels)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.p2p_p2mp_tunnel.tunnel_heads.tunnel_head.mpls_te_mgmt_gmpls_labels")
	proto.RegisterType((*TeOduFlexCbrInfo)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.p2p_p2mp_tunnel.tunnel_heads.tunnel_head.te_odu_flex_cbr_info")
	proto.RegisterType((*TeOduFlexGfpFResInfo)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.p2p_p2mp_tunnel.tunnel_heads.tunnel_head.te_odu_flex_gfp_f_res_info")
	proto.RegisterType((*TeOduFlexGfpFNonResInfo)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.p2p_p2mp_tunnel.tunnel_heads.tunnel_head.te_odu_flex_gfp_f_non_res_info")
	proto.RegisterType((*TeOduV3Bw)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.p2p_p2mp_tunnel.tunnel_heads.tunnel_head.te_odu_v3_bw")
	proto.RegisterType((*MplsTeS2LOtnInfo)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.p2p_p2mp_tunnel.tunnel_heads.tunnel_head.mpls_te_s2l_otn_info")
	proto.RegisterType((*TePvtProtObjT)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.p2p_p2mp_tunnel.tunnel_heads.tunnel_head.te_pvt_prot_obj_t")
	proto.RegisterType((*MplsTeS2LApsInfo)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.p2p_p2mp_tunnel.tunnel_heads.tunnel_head.mpls_te_s2l_aps_info")
	proto.RegisterType((*MplsTeOtnS2LInfo)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.p2p_p2mp_tunnel.tunnel_heads.tunnel_head.mpls_te_otn_s2l_info")
	proto.RegisterType((*MplsTeBfdSessionInfo)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.p2p_p2mp_tunnel.tunnel_heads.tunnel_head.mpls_te_bfd_session_info")
	proto.RegisterType((*MplsTeBfdDeletionHistory)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.p2p_p2mp_tunnel.tunnel_heads.tunnel_head.mpls_te_bfd_deletion_history")
	proto.RegisterType((*MplsTeHeadBfdInfo)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.p2p_p2mp_tunnel.tunnel_heads.tunnel_head.mpls_te_head_bfd_info")
	proto.RegisterType((*MplsTeTailBfdInfo)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.p2p_p2mp_tunnel.tunnel_heads.tunnel_head.mpls_te_tail_bfd_info")
	proto.RegisterType((*TeS2LSrlgCollectInfo)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.p2p_p2mp_tunnel.tunnel_heads.tunnel_head.te_s2l_srlg_collect_info")
	proto.RegisterType((*MplsTeS2LAssociationObject)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.p2p_p2mp_tunnel.tunnel_heads.tunnel_head.mpls_te_s2l_association_object")
	proto.RegisterType((*MplsTeS2LProtectionObject)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.p2p_p2mp_tunnel.tunnel_heads.tunnel_head.mpls_te_s2l_protection_object")
	proto.RegisterType((*MplsTeS2LFlexInfo)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.p2p_p2mp_tunnel.tunnel_heads.tunnel_head.mpls_te_s2l_flex_info")
	proto.RegisterType((*TeS2LSrPathHop)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.p2p_p2mp_tunnel.tunnel_heads.tunnel_head.te_s2l_sr_path_hop")
	proto.RegisterType((*TunnelMidpointLspWrapInfoBag)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.p2p_p2mp_tunnel.tunnel_heads.tunnel_head.tunnel_midpoint_lsp_wrap_info_bag")
	proto.RegisterType((*MplsTeS2LDiversityInfo)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.p2p_p2mp_tunnel.tunnel_heads.tunnel_head.mpls_te_s2l_diversity_info")
	proto.RegisterType((*MplsTePathMetrics)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.p2p_p2mp_tunnel.tunnel_heads.tunnel_head.mpls_te_path_metrics")
	proto.RegisterType((*MplsTeP2MpS2L)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.p2p_p2mp_tunnel.tunnel_heads.tunnel_head.mpls_te_p2mp_s2l")
	proto.RegisterType((*MplsTeP2MpLsp)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.p2p_p2mp_tunnel.tunnel_heads.tunnel_head.mpls_te_p2mp_lsp")
	proto.RegisterType((*MplsTeTunnelsAutobwStatus)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.p2p_p2mp_tunnel.tunnel_heads.tunnel_head.mpls_te_tunnels_autobw_status")
	proto.RegisterType((*MplsTeTunnelsAutobwConfig)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.p2p_p2mp_tunnel.tunnel_heads.tunnel_head.mpls_te_tunnels_autobw_config")
	proto.RegisterType((*MplsTeTunnelsAutobwOper)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.p2p_p2mp_tunnel.tunnel_heads.tunnel_head.mpls_te_tunnels_autobw_oper")
	proto.RegisterType((*MplsTeP2PInfoBag)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.p2p_p2mp_tunnel.tunnel_heads.tunnel_head.mpls_te_p2p_info_bag")
	proto.RegisterType((*MplsTeAutocapacityConfig)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.p2p_p2mp_tunnel.tunnel_heads.tunnel_head.mpls_te_autocapacity_config")
	proto.RegisterType((*MplsTeAutocapacityStats)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.p2p_p2mp_tunnel.tunnel_heads.tunnel_head.mpls_te_autocapacity_stats")
	proto.RegisterType((*MplsTeAutocapacityClone)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.p2p_p2mp_tunnel.tunnel_heads.tunnel_head.mpls_te_autocapacity_clone")
	proto.RegisterType((*MplsTeAutocapacity)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.p2p_p2mp_tunnel.tunnel_heads.tunnel_head.mpls_te_autocapacity")
	proto.RegisterType((*MplsTeTunnelsHistoryCurrentConnected)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.p2p_p2mp_tunnel.tunnel_heads.tunnel_head.mpls_te_tunnels_history_current_connected")
	proto.RegisterType((*MplsTeTunnelsHistoryCurrent)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.p2p_p2mp_tunnel.tunnel_heads.tunnel_head.mpls_te_tunnels_history_current")
	proto.RegisterType((*MplsTeTunnelsHistoryReopt)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.p2p_p2mp_tunnel.tunnel_heads.tunnel_head.mpls_te_tunnels_history_reopt")
	proto.RegisterType((*MplsTeTunnelsHistoryPathProtect)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.p2p_p2mp_tunnel.tunnel_heads.tunnel_head.mpls_te_tunnels_history_path_protect")
	proto.RegisterType((*MplsTeTunnelsHistoryPrevious)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.p2p_p2mp_tunnel.tunnel_heads.tunnel_head.mpls_te_tunnels_history_previous")
	proto.RegisterType((*MplsTeTunnelsHistoryPreviousProtect)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.p2p_p2mp_tunnel.tunnel_heads.tunnel_head.mpls_te_tunnels_history_previous_protect")
	proto.RegisterType((*MplsTeTunnelsHistoryOtherSetup)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.p2p_p2mp_tunnel.tunnel_heads.tunnel_head.mpls_te_tunnels_history_other_setup")
	proto.RegisterType((*MplsTeTunnelsHistoryStandbySetup)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.p2p_p2mp_tunnel.tunnel_heads.tunnel_head.mpls_te_tunnels_history_standby_setup")
	proto.RegisterType((*MplsTeTunnelsTunnelLastReoptFailInfo)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.p2p_p2mp_tunnel.tunnel_heads.tunnel_head.mpls_te_tunnels_tunnel_last_reopt_fail_info")
	proto.RegisterType((*MplsTeTunnelsHistoryBag)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.p2p_p2mp_tunnel.tunnel_heads.tunnel_head.mpls_te_tunnels_history_bag")
	proto.RegisterType((*TePpSwLogEntryBag)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.p2p_p2mp_tunnel.tunnel_heads.tunnel_head.te_pp_sw_log_entry_bag")
	proto.RegisterType((*MplsTePpInfo)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.p2p_p2mp_tunnel.tunnel_heads.tunnel_head.mpls_te_pp_info")
	proto.RegisterType((*MplsTeWsrlgValueBag)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.p2p_p2mp_tunnel.tunnel_heads.tunnel_head.mpls_te_wsrlg_value_bag")
	proto.RegisterType((*MplsTeWsrlgHopBag)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.p2p_p2mp_tunnel.tunnel_heads.tunnel_head.mpls_te_wsrlg_hop_bag")
	proto.RegisterType((*MplsTeWsrlgInfoBag)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.p2p_p2mp_tunnel.tunnel_heads.tunnel_head.mpls_te_wsrlg_info_bag")
	proto.RegisterType((*MplsTeIepHopBag)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.p2p_p2mp_tunnel.tunnel_heads.tunnel_head.mpls_te_iep_hop_bag")
	proto.RegisterType((*MplsTeIepBag)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.p2p_p2mp_tunnel.tunnel_heads.tunnel_head.mpls_te_iep_bag")
	proto.RegisterType((*MplsTeAutobackupInfo)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.p2p_p2mp_tunnel.tunnel_heads.tunnel_head.mpls_te_autobackup_info")
	proto.RegisterType((*MplsTeAutomeshInfo)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.p2p_p2mp_tunnel.tunnel_heads.tunnel_head.mpls_te_automesh_info")
	proto.RegisterType((*MplsTeAutopccInfo)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.p2p_p2mp_tunnel.tunnel_heads.tunnel_head.mpls_te_autopcc_info")
	proto.RegisterType((*MplsTePceDelegationInfo)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.p2p_p2mp_tunnel.tunnel_heads.tunnel_head.mpls_te_pce_delegation_info")
	proto.RegisterType((*MplsTeSoftPreemptionPathError)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.p2p_p2mp_tunnel.tunnel_heads.tunnel_head.mpls_te_soft_preemption_path_error")
	proto.RegisterType((*MplsTeSoftPreemptionHeadCounters)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.p2p_p2mp_tunnel.tunnel_heads.tunnel_head.mpls_te_soft_preemption_head_counters")
	proto.RegisterType((*MplsTeSoftPreemptionTunnelInfo)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.p2p_p2mp_tunnel.tunnel_heads.tunnel_head.mpls_te_soft_preemption_tunnel_info")
	proto.RegisterType((*MplsTeMgmtWdmUniTunnelInfo)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.p2p_p2mp_tunnel.tunnel_heads.tunnel_head.mpls_te_mgmt_wdm_uni_tunnel_info")
	proto.RegisterType((*MplsTeTunnelOtnInfo)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.p2p_p2mp_tunnel.tunnel_heads.tunnel_head.mpls_te_tunnel_otn_info")
	proto.RegisterType((*TeTermInterfaceSrlgCbT_)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.p2p_p2mp_tunnel.tunnel_heads.tunnel_head.te_term_interface_srlg_cb_t_")
	proto.RegisterType((*MplsTeTunnelStaticUniInfo)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.p2p_p2mp_tunnel.tunnel_heads.tunnel_head.mpls_te_tunnel_static_uni_info")
	proto.RegisterType((*MplsTeTunnelEgressStaticUniInfo)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.p2p_p2mp_tunnel.tunnel_heads.tunnel_head.mpls_te_tunnel_egress_static_uni_info")
	proto.RegisterType((*MplsTeTunnelVifDiversityInfo)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.p2p_p2mp_tunnel.tunnel_heads.tunnel_head.mpls_te_tunnel_vif_diversity_info")
	proto.RegisterType((*MplsTeTransportTunnelInfo)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.p2p_p2mp_tunnel.tunnel_heads.tunnel_head.mpls_te_transport_tunnel_info")
	proto.RegisterType((*MplsTeBfdLspCounters)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.p2p_p2mp_tunnel.tunnel_heads.tunnel_head.mpls_te_bfd_lsp_counters")
	proto.RegisterType((*MplsTePathOptionDampeningInfo)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.p2p_p2mp_tunnel.tunnel_heads.tunnel_head.mpls_te_path_option_dampening_info")
	proto.RegisterType((*MplsTeTunnelBfdInfo)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.p2p_p2mp_tunnel.tunnel_heads.tunnel_head.mpls_te_tunnel_bfd_info")
	proto.RegisterType((*MplsTeTunnelApsInfo)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.p2p_p2mp_tunnel.tunnel_heads.tunnel_head.mpls_te_tunnel_aps_info")
	proto.RegisterType((*MplsTeTunnelRestorationInfo)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.p2p_p2mp_tunnel.tunnel_heads.tunnel_head.mpls_te_tunnel_restoration_info")
	proto.RegisterType((*MplsTeTunnelOtnBidirInfo)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.p2p_p2mp_tunnel.tunnel_heads.tunnel_head.mpls_te_tunnel_otn_bidir_info")
	proto.RegisterType((*MplsTeTunnelsReverseEroErrorBag)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.p2p_p2mp_tunnel.tunnel_heads.tunnel_head.mpls_te_tunnels_reverse_ero_error_bag")
	proto.RegisterType((*MplsTeTunnelBidirInfo)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.p2p_p2mp_tunnel.tunnel_heads.tunnel_head.mpls_te_tunnel_bidir_info")
	proto.RegisterType((*TeVifConvergenceInfo)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.p2p_p2mp_tunnel.tunnel_heads.tunnel_head.te_vif_convergence_info")
	proto.RegisterType((*MplsTeTunnelFlexInfo)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.p2p_p2mp_tunnel.tunnel_heads.tunnel_head.mpls_te_tunnel_flex_info")
	proto.RegisterType((*MplsTeP2MpTunnelBag)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.p2p_p2mp_tunnel.tunnel_heads.tunnel_head.mpls_te_p2mp_tunnel_bag")
}

func init() { proto.RegisterFile("mpls_te_p2mp_tunnel_bag.proto", fileDescriptor_97fd10a364dd9ffd) }

var fileDescriptor_97fd10a364dd9ffd = []byte{
	// 18043 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xec, 0xbd, 0x5b, 0x8c, 0x25, 0xc9,
	0x75, 0x20, 0x86, 0xec, 0xaa, 0xae, 0xc7, 0xa9, 0xba, 0xf5, 0xc8, 0x7a, 0xdd, 0xaa, 0x7e, 0xce,
	0x9d, 0xe9, 0x79, 0x3f, 0x6b, 0x5e, 0xe4, 0x0c, 0x1f, 0xd3, 0x5d, 0xdd, 0x3d, 0x5d, 0x54, 0xf7,
	0x74, 0x29, 0xab, 0x9b, 0xa4, 0x56, 0xa2, 0x52, 0x79, 0x6f, 0xc6, 0xad, 0xca, 0xe9, 0xbc, 0x99,
	0x39, 0x99, 0x79, 0xeb, 0x21, 0x91, 0x14, 0x49, 0x91, 0x94, 0xa8, 0x25, 0x57, 0xa4, 0x5e, 0xd4,
	0x52, 0x26, 0xb4, 0x5a, 0x48, 0xfb, 0x92, 0x61, 0xac, 0x0d, 0xd8, 0x02, 0xbc, 0x6b, 0x7b, 0xd7,
	0xfe, 0xb0, 0xe1, 0x5f, 0x63, 0x61, 0xc0, 0x06, 0x0c, 0x03, 0x5e, 0xfb, 0x63, 0x77, 0x81, 0x5d,
	0xac, 0xb1, 0x6b, 0x7b, 0x05, 0x18, 0x46, 0x9c, 0x73, 0x22, 0x32, 0x32, 0x6f, 0xde, 0xea, 0x19,
	0xaa, 0x6f, 0x0d, 0x0d, 0xec, 0x4f, 0x77, 0xdd, 0x13, 0xe7, 0x44, 0x9c, 0x88, 0x8c, 0x38, 0x71,
	0x22, 0xe2, 0x3c, 0xe0, 0x42, 0x2f, 0x09, 0x33, 0x37, 0x17, 0x6e, 0xb2, 0xd9, 0x4b, 0xdc, 0xbc,
	0x1f, 0x45, 0x22, 0x74, 0xdb, 0xde, 0xde, 0x8b, 0x49, 0x1a, 0xe7, 0xb1, 0xfd, 0xb9, 0x4e, 0x90,
	0x75, 0x62, 0x37, 0x88, 0x33, 0xf7, 0x28, 0x75, 0x15, 0x6e, 0x9c, 0x88, 0xf4, 0x45, 0xfe, 0xf1,
	0x62, 0xb2, 0x99, 0x98, 0xc4, 0x2f, 0x72, 0x1d, 0xfb, 0xc2, 0xf3, 0x33, 0xf3, 0x47, 0xeb, 0xb3,
	0x70, 0x7e, 0x48, 0x63, 0xee, 0xcf, 0xdc, 0xf8, 0xb9, 0x5d, 0xfb, 0x12, 0xcc, 0x30, 0x28, 0xf2,
	0x7a, 0xa2, 0x69, 0x5d, 0xb6, 0x9e, 0x9e, 0x76, 0x80, 0x40, 0xef, 0x79, 0x3d, 0xd1, 0xfa, 0xee,
	0x19, 0x58, 0xf4, 0xba, 0xdd, 0x20, 0x0a, 0xf2, 0x63, 0xc4, 0x91, 0xb4, 0xf6, 0x53, 0x30, 0xdf,
	0x89, 0xa3, 0x2c, 0x4f, 0xbd, 0x20, 0xca, 0xdd, 0xfc, 0x38, 0x21, 0xd2, 0x86, 0x33, 0x57, 0x80,
	0xef, 0x1d, 0x27, 0xc2, 0x7e, 0x06, 0x16, 0x0c, 0xc4, 0x03, 0x2f, 0xec, 0x8b, 0xe6, 0x19, 0xc4,
	0x34, 0x2a, 0xf8, 0xbc, 0x04, 0xdb, 0xcf, 0xc2, 0x62, 0x37, 0x4e, 0x0f, 0xbd, 0xd4, 0x77, 0x53,
	0xd1, 0x65, 0xdc, 0x31, 0xc2, 0xe5, 0x02, 0x47, 0x74, 0x09, 0xf7, 0x2d, 0x58, 0x37, 0xaa, 0x15,
	0x47, 0xb9, 0x88, 0x7c, 0xe1, 0x33, 0xcd, 0xf8, 0xe5, 0xb1, 0xa7, 0x1b, 0xce, 0x5a, 0x81, 0x70,
	0x83, 0xcb, 0x89, 0xf6, 0x6d, 0xd8, 0xd0, 0x04, 0x83, 0x0d, 0x9e, 0x25, 0x62, 0x85, 0x71, 0xb3,
	0xdc, 0x70, 0xeb, 0x5f, 0x59, 0xc5, 0xd7, 0xa3, 0x51, 0xca, 0x5c, 0x3d, 0x3c, 0x41, 0xd4, 0x8d,
	0xed, 0xc7, 0xa1, 0xa1, 0x01, 0xed, 0x20, 0xcf, 0x78, 0x60, 0x66, 0x15, 0xf0, 0x5a, 0x90, 0x67,
	0x25, 0xa4, 0x9e, 0x97, 0x3d, 0xe0, 0x31, 0xd1, 0x48, 0x77, 0xbc, 0xec, 0x81, 0xfd, 0x4d, 0x0b,
	0xe6, 0xe4, 0x88, 0xfb, 0xba, 0x85, 0xe6, 0xd8, 0xe5, 0xb1, 0xa7, 0x67, 0x36, 0xbf, 0xf4, 0xe2,
	0xa3, 0x9b, 0x21, 0x2f, 0x0e, 0x7c, 0x5c, 0xa7, 0x81, 0x8d, 0x5e, 0x65, 0x78, 0xeb, 0x37, 0xcf,
	0xc0, 0xe5, 0x72, 0x97, 0xdd, 0x76, 0xe0, 0x07, 0xa9, 0xdb, 0x89, 0xa3, 0x6e, 0xb0, 0x47, 0xbd,
	0x7e, 0x06, 0x16, 0xbc, 0x2c, 0x8b, 0x3b, 0x81, 0x97, 0x07, 0x71, 0x64, 0xce, 0x88, 0x79, 0x03,
	0x8e, 0x53, 0xe2, 0x0a, 0xcc, 0x99, 0xa8, 0x81, 0xcf, 0x9d, 0x6f, 0x18, 0xd0, 0x6d, 0xdf, 0x7e,
	0x01, 0x6c, 0x13, 0x2d, 0x8b, 0xfb, 0x69, 0x87, 0xe6, 0xc3, 0xb4, 0xb3, 0x68, 0x94, 0xec, 0x62,
	0x81, 0xbd, 0x09, 0x2b, 0x26, 0xfa, 0x5e, 0x18, 0xb7, 0xbd, 0x50, 0x56, 0x3e, 0x8e, 0x95, 0x2f,
	0x19, 0x85, 0xef, 0x62, 0xd9, 0xb6, 0x6f, 0xbf, 0x02, 0xcb, 0x26, 0x4d, 0x27, 0x4e, 0xe3, 0x7e,
	0x2e, 0xfc, 0xe6, 0xd9, 0xcb, 0xd6, 0xd3, 0x53, 0x25, 0x92, 0x2d, 0x2e, 0x6a, 0xfd, 0x9b, 0x29,
	0xb8, 0x58, 0x1d, 0x8c, 0xae, 0x5f, 0x1a, 0x8a, 0xb7, 0x61, 0x43, 0x82, 0xba, 0x5e, 0x96, 0xbb,
	0xbe, 0xc8, 0x45, 0x27, 0x0f, 0xa2, 0x3d, 0x57, 0x44, 0x5e, 0x3b, 0x14, 0x3e, 0x0e, 0xca, 0x94,
	0xb3, 0xd6, 0xee, 0xfa, 0x37, 0xbd, 0x2c, 0xbf, 0xae, 0xca, 0x6f, 0x50, 0xb1, 0xbd, 0x0e, 0x53,
	0x92, 0x18, 0xc7, 0xef, 0x0c, 0xf6, 0x75, 0xb2, 0xdd, 0xf5, 0x71, 0xdc, 0x1e, 0x83, 0xd9, 0x5e,
	0x10, 0xb9, 0x41, 0x94, 0x8b, 0xf4, 0xc0, 0x0b, 0x79, 0x69, 0xcc, 0xf4, 0x82, 0x68, 0x9b, 0x41,
	0xf6, 0xcb, 0xb0, 0x6c, 0xa2, 0xb8, 0xbe, 0xe8, 0x7a, 0xfd, 0x30, 0xc7, 0x31, 0x98, 0x72, 0x6c,
	0x03, 0xf5, 0x3a, 0x95, 0xd8, 0x17, 0x01, 0x7a, 0xfd, 0x30, 0x0f, 0x92, 0x30, 0x10, 0x29, 0x76,
	0xbc, 0xe1, 0x18, 0x10, 0xf9, 0x15, 0x8a, 0x5f, 0xba, 0xbe, 0x09, 0xac, 0x6f, 0xb1, 0x28, 0x51,
	0xd5, 0x3d, 0x0d, 0x0b, 0xed, 0x54, 0x76, 0xb7, 0x9f, 0xb8, 0x79, 0xd0, 0x13, 0x71, 0x3f, 0x6f,
	0x4e, 0x92, 0x60, 0x40, 0xf8, 0xfd, 0xe4, 0x1e, 0x41, 0xed, 0x37, 0xa1, 0x59, 0xc5, 0xd4, 0xd5,
	0x4f, 0x61, 0xf5, 0x2b, 0x65, 0x0a, 0xd5, 0xc4, 0x6b, 0xb0, 0xea, 0x7b, 0xbd, 0x44, 0x44, 0x92,
	0x58, 0xce, 0xd0, 0xc0, 0x0b, 0xdd, 0x43, 0x2f, 0xc8, 0x9b, 0xd3, 0xd8, 0xd0, 0xb2, 0x2e, 0xdd,
	0xa6, 0xc2, 0x2f, 0x78, 0x41, 0x6e, 0x6f, 0xc1, 0xc5, 0x7a, 0x2a, 0xdd, 0x28, 0x60, 0xa3, 0xe7,
	0xea, 0xa8, 0x55, 0xd3, 0xcf, 0x83, 0x5d, 0x54, 0xd2, 0xf3, 0x8e, 0xa8, 0xd9, 0x19, 0x6c, 0x76,
	0x41, 0x97, 0xdc, 0xf1, 0x8e, 0xb0, 0xc9, 0xb7, 0x61, 0x63, 0x10, 0x5b, 0x37, 0x37, 0x4b, 0xf3,
	0xa0, 0x4a, 0xa5, 0x9a, 0xfa, 0x04, 0x34, 0x0b, 0xe2, 0x4c, 0x74, 0xe2, 0xc8, 0xf7, 0xd2, 0x63,
	0x6a, 0xb0, 0x81, 0x0d, 0x16, 0xa3, 0xb0, 0xab, 0x8a, 0xb1, 0xd9, 0x77, 0xe1, 0xf2, 0x30, 0x4a,
	0xdd, 0xf8, 0x1c, 0x36, 0x7e, 0xa1, 0xbe, 0x06, 0xc5, 0xc2, 0xdb, 0xb0, 0x91, 0x88, 0x34, 0x88,
	0xfd, 0xa0, 0xe3, 0x86, 0x59, 0xe2, 0x26, 0xb2, 0x42, 0x3f, 0xc8, 0x68, 0x1e, 0xcf, 0x13, 0xff,
	0x0a, 0xe3, 0x76, 0x96, 0xec, 0x04, 0xd1, 0xde, 0x75, 0x2e, 0xae, 0x27, 0xd6, 0x53, 0x77, 0x01,
	0x7b, 0x50, 0x25, 0xd6, 0xd3, 0xf8, 0x73, 0xd0, 0x1a, 0x4e, 0xac, 0x3b, 0xb1, 0x88, 0x1c, 0x5c,
	0x1c, 0x52, 0x89, 0xea, 0xc5, 0xeb, 0x20, 0xd7, 0x9a, 0x9b, 0x89, 0x2c, 0x93, 0x6b, 0xdc, 0x8f,
	0x0f, 0x23, 0xd7, 0xeb, 0xc8, 0x35, 0xdd, 0xb4, 0x71, 0x7d, 0x2d, 0xb7, 0xbb, 0xfe, 0x2e, 0x95,
	0x5e, 0x8f, 0x0f, 0xa3, 0xab, 0x58, 0x66, 0x5f, 0x83, 0x8b, 0x03, 0x64, 0xa9, 0x88, 0x93, 0x5c,
	0x4f, 0xeb, 0x25, 0xec, 0xc3, 0x46, 0x99, 0xda, 0x91, 0x28, 0x6a, 0x8a, 0x3f, 0x01, 0x73, 0xb2,
	0x0e, 0x11, 0x75, 0xbc, 0xc4, 0xed, 0xc5, 0xbe, 0x68, 0x2e, 0x63, 0x8b, 0xb3, 0xed, 0xae, 0x7f,
	0x43, 0x02, 0xef, 0xc4, 0xbe, 0x90, 0x58, 0x19, 0x2e, 0x79, 0x2f, 0xdd, 0x13, 0xb9, 0x94, 0x58,
	0x2b, 0x84, 0x25, 0xa1, 0xf7, 0x10, 0xb8, 0xed, 0xb7, 0x8e, 0xe1, 0x31, 0x25, 0x76, 0xbc, 0x7e,
	0x4e, 0xd2, 0xc8, 0xf5, 0x45, 0x96, 0x07, 0x11, 0x09, 0x2f, 0xb9, 0x2b, 0xbf, 0x04, 0x4b, 0x26,
	0xc8, 0xf3, 0xfd, 0x54, 0x64, 0x19, 0x6f, 0xea, 0xb6, 0x51, 0x74, 0x95, 0x4a, 0xe4, 0x36, 0x94,
	0xa4, 0xa2, 0x1b, 0x1c, 0xb9, 0xa1, 0x88, 0xf6, 0xf2, 0x7d, 0xb5, 0x0d, 0x11, 0xf0, 0x36, 0xc2,
	0x5a, 0xdf, 0x1f, 0x83, 0xd5, 0x8a, 0xc8, 0x0b, 0xe3, 0xbd, 0xbd, 0x20, 0xda, 0xb3, 0x17, 0x60,
	0xcc, 0x0b, 0x43, 0x96, 0x69, 0xf2, 0x4f, 0x29, 0x4f, 0x70, 0x98, 0x82, 0x5e, 0xf0, 0xcb, 0x24,
	0xc1, 0xa6, 0x1c, 0x03, 0x62, 0x2f, 0xc3, 0xd9, 0x2c, 0xf7, 0x72, 0x12, 0xe4, 0x53, 0x0e, 0xfd,
	0xb0, 0x9b, 0x30, 0x99, 0x0a, 0xec, 0x13, 0x8b, 0x2a, 0xf5, 0x53, 0xee, 0x2b, 0x6d, 0x2f, 0xf2,
	0x0f, 0x03, 0x3f, 0xdf, 0x77, 0x3b, 0xfb, 0x5e, 0xb4, 0x27, 0x58, 0x3c, 0xcf, 0x6b, 0xf8, 0x16,
	0x82, 0x65, 0xd3, 0xd9, 0x61, 0x90, 0x77, 0xf6, 0xe3, 0x03, 0x91, 0xb2, 0x88, 0x32, 0x20, 0x52,
	0x7e, 0xa6, 0xa2, 0x13, 0xcb, 0xdd, 0x1e, 0x5b, 0x9a, 0x44, 0x8c, 0x19, 0x82, 0x39, 0xd8, 0xda,
	0x27, 0xa0, 0x99, 0x78, 0xb2, 0x21, 0x2f, 0xec, 0xf4, 0x43, 0x1a, 0xc5, 0xae, 0x17, 0x84, 0xfd,
	0x54, 0xb0, 0x50, 0x5a, 0x95, 0xe5, 0x5b, 0x45, 0xf1, 0x4d, 0x2a, 0xb5, 0x5f, 0x87, 0x55, 0xdd,
	0x4b, 0x1e, 0xfd, 0x3c, 0x17, 0xbd, 0x84, 0xa4, 0xd2, 0x94, 0xb3, 0x52, 0x2e, 0xbd, 0x4a, 0x85,
	0x92, 0x2c, 0x88, 0xb2, 0x7e, 0xb7, 0x1b, 0x74, 0x02, 0x11, 0xe5, 0xae, 0xee, 0x13, 0x8b, 0xa3,
	0x15, 0xb3, 0xf4, 0x9a, 0x2a, 0x6c, 0xfd, 0xfe, 0x12, 0x34, 0xab, 0x6a, 0x9d, 0xdb, 0xe9, 0xee,
	0xe1, 0x2c, 0x78, 0x98, 0x4a, 0x67, 0x9f, 0x83, 0x69, 0x46, 0xd0, 0x7b, 0xef, 0x14, 0x01, 0xb6,
	0x7d, 0x7b, 0x0d, 0x26, 0x83, 0x0c, 0x2b, 0xe5, 0x4f, 0x34, 0x11, 0x64, 0x3b, 0x9b, 0xbd, 0x44,
	0xce, 0x95, 0x2c, 0xd8, 0x8b, 0xbc, 0x50, 0xf8, 0x54, 0xf1, 0x38, 0x4f, 0x53, 0x06, 0x62, 0xd5,
	0xaf, 0xc0, 0x32, 0x6d, 0x85, 0xfd, 0x54, 0xf8, 0x46, 0x6f, 0x68, 0x63, 0x59, 0x2a, 0xca, 0x74,
	0x5f, 0xec, 0xeb, 0x70, 0x11, 0x97, 0x76, 0xd7, 0xeb, 0x08, 0xb7, 0x96, 0x78, 0x02, 0x89, 0xcf,
	0x6b, 0xac, 0xad, 0x9a, 0x5a, 0xae, 0xc0, 0x5c, 0x31, 0x4f, 0x70, 0xf7, 0x9c, 0x44, 0xf6, 0x1a,
	0x1a, 0xaa, 0x74, 0x8f, 0x4c, 0xe4, 0xfd, 0xc4, 0x4d, 0xd2, 0x20, 0x4e, 0xa5, 0x46, 0x35, 0x45,
	0xba, 0x07, 0x42, 0x77, 0x18, 0x28, 0xfb, 0xba, 0x1f, 0x87, 0x7e, 0x81, 0x45, 0x5b, 0xcb, 0xac,
	0x04, 0x6a, 0xa4, 0xc7, 0x60, 0x36, 0x89, 0xc3, 0xa0, 0x73, 0xec, 0x76, 0x42, 0x2f, 0xcb, 0xf0,
	0x8b, 0x35, 0x9c, 0x19, 0x82, 0x6d, 0x49, 0x90, 0xdc, 0x30, 0x4c, 0x14, 0x57, 0x44, 0x79, 0x7a,
	0xdc, 0x9c, 0x41, 0x15, 0x73, 0xc1, 0x40, 0xbc, 0x21, 0xe1, 0xb2, 0x55, 0xa5, 0x8f, 0x52, 0x8d,
	0xb3, 0xd4, 0x2a, 0x03, 0xa9, 0xca, 0x4f, 0xc3, 0xb9, 0x20, 0x73, 0x4b, 0x78, 0xc6, 0xa8, 0xe1,
	0xde, 0x30, 0xe5, 0x34, 0x83, 0xec, 0xa6, 0x41, 0x54, 0x0c, 0x98, 0xfd, 0x2d, 0x0b, 0xa6, 0xb4,
	0x36, 0x29, 0xb7, 0x81, 0x99, 0xcd, 0xe0, 0x51, 0x6a, 0x93, 0x27, 0xea, 0xc6, 0x8e, 0x6e, 0x9a,
	0xd6, 0x75, 0xe7, 0x41, 0x3f, 0x31, 0xbe, 0xf3, 0x3c, 0xe9, 0x8b, 0x04, 0x2f, 0x3e, 0xed, 0x6b,
	0xb0, 0x5a, 0x45, 0x75, 0xbb, 0xa1, 0xb7, 0x97, 0xf1, 0x36, 0xb2, 0x5c, 0x21, 0xb8, 0x29, 0xcb,
	0xe4, 0x69, 0x82, 0x95, 0xb2, 0x30, 0xf6, 0x7c, 0x37, 0xdb, 0xf7, 0x52, 0x81, 0x5b, 0x06, 0x9d,
	0x3c, 0xba, 0xc1, 0xde, 0xed, 0xd8, 0xf3, 0x77, 0x25, 0x18, 0xbf, 0xa4, 0x77, 0x8c, 0x78, 0x38,
	0x75, 0x6c, 0xfe, 0x92, 0x04, 0xc3, 0x89, 0x73, 0x19, 0x66, 0x83, 0xcc, 0x0d, 0x22, 0x1e, 0x6b,
	0x94, 0xfe, 0x53, 0x0e, 0x04, 0xd9, 0x76, 0x44, 0xa3, 0x2b, 0x65, 0x87, 0x38, 0x4a, 0xc2, 0xa0,
	0x13, 0xe4, 0x6e, 0xd4, 0x0f, 0x43, 0x37, 0xe8, 0x25, 0x71, 0x16, 0xe0, 0x4e, 0xb3, 0x4c, 0xb2,
	0x43, 0x95, 0xbf, 0xd7, 0x0f, 0xc3, 0x6d, 0x5d, 0x2a, 0x9b, 0x47, 0x65, 0x51, 0x89, 0xc0, 0x15,
	0x12, 0x4c, 0x12, 0xe6, 0xb0, 0x18, 0x7c, 0x1a, 0x16, 0x82, 0xcc, 0xe5, 0x61, 0xa0, 0xb1, 0x6d,
	0xae, 0x22, 0xda, 0x5c, 0x90, 0x5d, 0x43, 0xf0, 0x3d, 0x84, 0x0e, 0x48, 0xb9, 0xb5, 0x41, 0x29,
	0x27, 0x17, 0x41, 0x1a, 0xe2, 0x5e, 0xde, 0x91, 0x92, 0xf1, 0xb8, 0xd9, 0x44, 0xa4, 0x86, 0x84,
	0x5e, 0x57, 0x40, 0xfb, 0x0d, 0x58, 0x43, 0x61, 0x28, 0x0f, 0xa5, 0x02, 0x77, 0x45, 0xad, 0xc4,
	0xae, 0x93, 0x70, 0x92, 0xc5, 0x3b, 0xba, 0x54, 0xa9, 0xb0, 0xe7, 0x60, 0x7a, 0x3f, 0x4e, 0xdc,
	0x30, 0xe8, 0x05, 0x79, 0x73, 0x83, 0xc4, 0xcb, 0x7e, 0x9c, 0xdc, 0x96, 0xbf, 0xed, 0x0b, 0x00,
	0x9d, 0x38, 0xcb, 0xb9, 0xf4, 0x1c, 0x96, 0x4e, 0x4b, 0x08, 0x15, 0xe3, 0x57, 0x53, 0xc5, 0xac,
	0xc4, 0x37, 0xcf, 0xab, 0xaf, 0xc6, 0x58, 0xa4, 0xbf, 0x4b, 0x39, 0xe7, 0x8b, 0xd0, 0x3b, 0xe6,
	0xba, 0x2e, 0x90, 0xee, 0x8a, 0x20, 0xaa, 0x4c, 0xaa, 0x6b, 0x05, 0x82, 0xaa, 0xed, 0x22, 0xab,
	0x6b, 0x1a, 0x8f, 0xab, 0x7b, 0x17, 0x2e, 0x63, 0x77, 0x83, 0xe8, 0xc0, 0x0b, 0x03, 0x9f, 0xcf,
	0x31, 0xac, 0x99, 0xf2, 0xe9, 0xe3, 0x12, 0xd2, 0x5e, 0x90, 0x78, 0xdb, 0x06, 0x1a, 0x6f, 0xf8,
	0x7c, 0x12, 0x79, 0x0b, 0xd6, 0x87, 0x56, 0xd4, 0xbc, 0xcc, 0x9a, 0x4f, 0x7d, 0x0d, 0xf6, 0x0d,
	0xb8, 0x34, 0x48, 0x4b, 0xea, 0x8a, 0xe2, 0xe1, 0x31, 0x92, 0x86, 0xd5, 0x1a, 0x48, 0x6f, 0x61,
	0x16, 0xd4, 0x3e, 0x56, 0x53, 0x4d, 0xb3, 0x45, 0xda, 0x63, 0x3d, 0xbd, 0x9c, 0x3e, 0x59, 0xdc,
	0xcd, 0xdd, 0x24, 0x15, 0xb8, 0x7b, 0x3d, 0x4e, 0xd3, 0x47, 0xc2, 0x76, 0x08, 0x64, 0xff, 0x91,
	0x05, 0xcb, 0x78, 0x00, 0xa4, 0xcf, 0xee, 0x85, 0x6a, 0x4d, 0x3c, 0x81, 0xe2, 0x24, 0x1c, 0x9d,
	0x38, 0x19, 0x3c, 0x77, 0x3a, 0x4b, 0x25, 0x4e, 0x78, 0x29, 0x7e, 0xc7, 0x02, 0x28, 0x4e, 0x65,
	0xcd, 0x2b, 0xc8, 0xd7, 0xfb, 0xa3, 0xe4, 0xab, 0x7c, 0x04, 0x74, 0xa6, 0xdb, 0x5d, 0x9f, 0x79,
	0x91, 0x07, 0x0f, 0x52, 0x8a, 0x0b, 0x59, 0xc8, 0x2a, 0x05, 0x29, 0x94, 0xcd, 0x27, 0xf9, 0xe0,
	0x41, 0x58, 0xea, 0xd8, 0xcd, 0x8a, 0x05, 0x2a, 0x94, 0xf6, 0x67, 0xe1, 0x7c, 0x3d, 0x31, 0xce,
	0xab, 0xb4, 0xf9, 0x14, 0x7e, 0xd3, 0x75, 0xaf, 0x86, 0x56, 0xce, 0xac, 0x54, 0x72, 0x91, 0x89,
	0xbd, 0x9e, 0x54, 0x31, 0xa4, 0x58, 0x90, 0xfa, 0x34, 0x4e, 0x90, 0x4c, 0x84, 0x34, 0x76, 0xcd,
	0xa7, 0x71, 0xbb, 0x3c, 0xc7, 0x58, 0x0e, 0x21, 0xed, 0x78, 0xf9, 0xfe, 0xae, 0x42, 0xb1, 0xff,
	0xa6, 0x05, 0x2b, 0xb5, 0xca, 0x67, 0xf3, 0x19, 0xbc, 0x96, 0xe8, 0x8d, 0x62, 0x84, 0x87, 0x6a,
	0xbb, 0xce, 0xb2, 0x2e, 0xba, 0x5e, 0x94, 0xd8, 0x5f, 0x86, 0x49, 0xd6, 0x4e, 0x9b, 0xcf, 0xe2,
	0x77, 0x6f, 0x8f, 0xf0, 0xbb, 0x73, 0x4b, 0x8e, 0x6a, 0xb2, 0xf5, 0x2d, 0xe3, 0x7a, 0xc8, 0xcb,
	0xf3, 0x34, 0x68, 0x4b, 0xce, 0x33, 0x91, 0xbb, 0x07, 0x22, 0x95, 0x87, 0x04, 0xbc, 0xfd, 0xd0,
	0x05, 0xfa, 0x9a, 0x64, 0xda, 0x69, 0x68, 0x28, 0xee, 0x37, 0x17, 0x01, 0xf6, 0x44, 0x24, 0x52,
	0x1a, 0x5f, 0x52, 0xd2, 0x0c, 0x88, 0x94, 0xa3, 0x41, 0xa6, 0x8f, 0x42, 0xa4, 0xa9, 0x4d, 0x07,
	0x19, 0x9f, 0x7a, 0x5a, 0x5d, 0x68, 0xd5, 0xb3, 0x21, 0x67, 0x6a, 0x2a, 0x0e, 0xf0, 0xeb, 0x4b,
	0x49, 0x8d, 0xb3, 0xc0, 0x60, 0x63, 0x4a, 0x02, 0x90, 0x83, 0xc7, 0xa1, 0xd1, 0x0e, 0x22, 0x5f,
	0x4e, 0x95, 0xd0, 0x6b, 0x8b, 0x50, 0x9d, 0x0d, 0x18, 0x78, 0x5b, 0xc2, 0x5a, 0xff, 0xfd, 0xbc,
	0x71, 0x2e, 0x29, 0x35, 0x84, 0x15, 0x4b, 0x95, 0x37, 0x8e, 0x86, 0x6a, 0x85, 0xd6, 0x70, 0xad,
	0xb0, 0xbc, 0x4f, 0x9c, 0xa9, 0xee, 0x13, 0x4f, 0xc2, 0xbc, 0x9f, 0xe5, 0x82, 0xf5, 0x1f, 0xe4,
	0x9f, 0xae, 0x43, 0x1a, 0x12, 0x8c, 0x4a, 0x8f, 0xd2, 0xf7, 0x2a, 0x6a, 0xe1, 0x78, 0x9d, 0x5a,
	0xf8, 0x06, 0xac, 0xe1, 0xf6, 0xaa, 0x0f, 0x1a, 0x85, 0x42, 0x75, 0x96, 0xf5, 0xf0, 0x4c, 0xf3,
	0x66, 0x68, 0x53, 0x6f, 0x42, 0x33, 0x90, 0xea, 0x97, 0xde, 0xb1, 0x0c, 0xc2, 0x09, 0x45, 0xb8,
	0xa5, 0xb8, 0x1e, 0xa6, 0x86, 0x4d, 0x7e, 0x7c, 0x6a, 0xd8, 0x6b, 0xb0, 0x1a, 0x18, 0xa5, 0x06,
	0xfb, 0x74, 0xdc, 0x59, 0x0e, 0x32, 0x25, 0x90, 0x0c, 0xee, 0x4b, 0x07, 0x88, 0x69, 0xd4, 0x66,
	0x8b, 0x03, 0x44, 0x79, 0xe6, 0xc2, 0xc0, 0xcc, 0xfd, 0xae, 0x05, 0xb3, 0xbc, 0x18, 0x90, 0x1b,
	0x54, 0x87, 0x47, 0xd4, 0xfd, 0xda, 0x25, 0xe8, 0xcc, 0xf0, 0x1f, 0xdb, 0x51, 0x37, 0x3e, 0x79,
	0xb7, 0x9e, 0x3d, 0x79, 0xb7, 0x3e, 0x69, 0x9b, 0x6d, 0x9c, 0xb8, 0xcd, 0xde, 0x83, 0xa7, 0xe4,
	0x29, 0x6b, 0xa8, 0xbe, 0x61, 0x7c, 0x08, 0xba, 0xab, 0x79, 0x3c, 0xc8, 0x76, 0xea, 0xb9, 0x30,
	0xbe, 0x8b, 0x03, 0x4f, 0xd6, 0xd6, 0xca, 0x0a, 0x84, 0x51, 0x29, 0xdd, 0xde, 0xb4, 0x06, 0x2b,
	0x25, 0xfe, 0x8c, 0x3a, 0x9f, 0x85, 0x45, 0x71, 0xd4, 0x09, 0xfb, 0xbe, 0x70, 0xc3, 0x20, 0xcb,
	0xe9, 0xe8, 0xb7, 0x80, 0x8b, 0x68, 0x9e, 0x0b, 0x6e, 0x07, 0x59, 0x8e, 0xa7, 0xbf, 0xeb, 0x70,
	0x29, 0xc8, 0xdc, 0x01, 0x74, 0xb3, 0x61, 0xba, 0xb4, 0x39, 0x17, 0x64, 0x37, 0xca, 0xb4, 0xe5,
	0x16, 0x65, 0x2f, 0x4a, 0xa7, 0x41, 0x54, 0xc9, 0xa7, 0x9c, 0xf9, 0x20, 0xdb, 0x31, 0xcf, 0x7f,
	0xf6, 0x3b, 0x70, 0x81, 0x71, 0xfd, 0x20, 0x7b, 0x9f, 0x55, 0x24, 0x93, 0x8e, 0xf4, 0xf4, 0x75,
	0xa4, 0xbb, 0x1e, 0x64, 0xef, 0x93, 0x82, 0x64, 0xd4, 0xf0, 0x29, 0x3c, 0x4f, 0xe9, 0x1a, 0xa4,
	0x8c, 0x30, 0xe9, 0x49, 0x73, 0x5f, 0xd3, 0xf4, 0x52, 0x5c, 0x18, 0xd4, 0x5b, 0xd8, 0x63, 0x4d,
	0xbd, 0x97, 0xc6, 0xfd, 0xc4, 0x0d, 0x7c, 0xb3, 0x06, 0xd2, 0xe6, 0x37, 0x74, 0x0d, 0xef, 0x4a,
	0x9c, 0x6d, 0xdf, 0xa8, 0xe4, 0x65, 0x58, 0x4e, 0x3a, 0xc2, 0x4f, 0x14, 0xfb, 0xea, 0xde, 0x66,
	0x15, 0xa7, 0x90, 0x8d, 0x65, 0xc4, 0xb7, 0xba, 0xb7, 0xb9, 0x00, 0x40, 0x14, 0x28, 0xd2, 0xd6,
	0xf0, 0x6b, 0x4c, 0x23, 0x04, 0xc5, 0xd9, 0x13, 0x30, 0x47, 0xc5, 0x8a, 0x1f, 0x54, 0xf0, 0x1b,
	0xce, 0x2c, 0x42, 0x99, 0x01, 0xfb, 0x33, 0x70, 0x9e, 0x78, 0x6f, 0xbb, 0x7e, 0xdd, 0xd0, 0xad,
	0xab, 0xa3, 0xe4, 0x4e, 0x47, 0xb4, 0xaf, 0x0f, 0x8e, 0x5c, 0x41, 0xef, 0xd7, 0x76, 0x7c, 0xc3,
	0xa4, 0xf7, 0x87, 0x75, 0xbb, 0xed, 0x57, 0xbb, 0x7d, 0x4e, 0x77, 0xbb, 0xed, 0x97, 0xbb, 0x4d,
	0xfd, 0x32, 0x9a, 0xe3, 0xa3, 0xc1, 0x6c, 0x62, 0xb4, 0x60, 0xff, 0x81, 0x05, 0x0b, 0xbc, 0xcd,
	0x89, 0x34, 0x13, 0xb8, 0x1e, 0xf0, 0x74, 0x30, 0xb3, 0x19, 0x8d, 0x5e, 0xc8, 0x98, 0x1b, 0xac,
	0x33, 0xd7, 0xee, 0xfa, 0x0e, 0xb1, 0x21, 0x17, 0x1a, 0x4f, 0xd7, 0x0a, 0x73, 0xe6, 0x98, 0x5d,
	0x54, 0xd3, 0xf5, 0x9a, 0x49, 0x68, 0x0c, 0xda, 0x27, 0x61, 0x1d, 0xf7, 0xfd, 0xe2, 0x58, 0x63,
	0x50, 0x5f, 0xa2, 0x63, 0xa6, 0x54, 0x03, 0xd4, 0xe1, 0xc6, 0x20, 0xad, 0x9c, 0x97, 0x2e, 0x57,
	0xcf, 0x4b, 0xad, 0x3f, 0xb7, 0x8a, 0xb7, 0x8d, 0x72, 0xa7, 0xb2, 0x60, 0x0f, 0x57, 0xb2, 0x6d,
	0xc3, 0xb8, 0x71, 0xa9, 0x84, 0x7f, 0xcb, 0x7a, 0xf9, 0x0b, 0x1a, 0xaf, 0x16, 0x40, 0x20, 0x9c,
	0x8e, 0x52, 0x4c, 0xd2, 0x29, 0x51, 0xf8, 0x6e, 0x71, 0xd7, 0xa3, 0x77, 0xed, 0x69, 0x67, 0x55,
	0x97, 0x6f, 0xab, 0x62, 0xa4, 0x7c, 0x12, 0xe6, 0x83, 0xcc, 0xed, 0x25, 0x6a, 0x6e, 0x88, 0x8c,
	0xef, 0x07, 0x1b, 0x41, 0x76, 0x27, 0xb9, 0xaa, 0x80, 0xad, 0x7f, 0x7d, 0x06, 0x36, 0x14, 0xe7,
	0xac, 0x8a, 0x15, 0x3d, 0xc8, 0xe4, 0x7e, 0x15, 0x66, 0x89, 0x4b, 0x17, 0x8f, 0x74, 0x59, 0x39,
	0x15, 0x66, 0xc9, 0x2e, 0xde, 0x3d, 0x9e, 0x83, 0xe9, 0x6c, 0x33, 0xe4, 0x42, 0xba, 0xb0, 0x9c,
	0xca, 0x36, 0x43, 0x2a, 0xbc, 0x0c, 0xb3, 0x92, 0x52, 0xaa, 0xdb, 0x78, 0x9a, 0x26, 0x45, 0x0b,
	0xc2, 0x2c, 0x71, 0x04, 0x1d, 0xa6, 0xcf, 0x03, 0x30, 0x86, 0xd4, 0xe5, 0xc7, 0x75, 0xe5, 0x8e,
	0xb8, 0x9b, 0xe4, 0xf6, 0x8b, 0xb0, 0x24, 0x4b, 0xcb, 0x77, 0x7c, 0x87, 0xac, 0x54, 0x2c, 0x86,
	0x59, 0xb2, 0x6d, 0xde, 0xef, 0x1d, 0xca, 0x35, 0x21, 0xf1, 0x07, 0xae, 0x3c, 0x49, 0x99, 0xb0,
	0xc3, 0xac, 0xb8, 0xe6, 0xe0, 0x5b, 0xcf, 0x5b, 0xf0, 0x18, 0x5e, 0x91, 0x77, 0xbc, 0xb0, 0xa3,
	0xcf, 0x06, 0x6a, 0x0c, 0xd4, 0x79, 0x9d, 0xae, 0x3a, 0x2f, 0x84, 0x59, 0xb2, 0x23, 0xf1, 0xf8,
	0x7c, 0x70, 0x9b, 0xb0, 0xd4, 0xb9, 0xfd, 0x45, 0x58, 0xf2, 0xc2, 0x70, 0x80, 0x96, 0x14, 0x81,
	0x45, 0x2f, 0x0c, 0xcb, 0xf8, 0xad, 0x1d, 0xe3, 0x1d, 0xbb, 0xf8, 0xbc, 0x5d, 0x12, 0xf9, 0x59,
	0x9e, 0xda, 0x2f, 0xc1, 0x52, 0xcd, 0x77, 0x57, 0xd7, 0xd1, 0x83, 0x9f, 0xbc, 0xf5, 0xa7, 0x53,
	0xc3, 0xb4, 0x49, 0xa9, 0xea, 0xf3, 0xf5, 0x87, 0x3c, 0x0c, 0x05, 0x99, 0x4b, 0xd7, 0x8e, 0xea,
	0x32, 0xd2, 0x5c, 0x05, 0x96, 0x5a, 0x43, 0xbb, 0x0a, 0xa5, 0xb2, 0xc1, 0xfc, 0xc0, 0x82, 0xb9,
	0x32, 0x39, 0x7e, 0xf7, 0x11, 0x1d, 0x11, 0xeb, 0x57, 0x92, 0xd3, 0xc8, 0x4c, 0xee, 0x6a, 0x2e,
	0x26, 0xc7, 0x3e, 0xd4, 0xc5, 0xe4, 0x78, 0xcd, 0xc5, 0x24, 0x29, 0x75, 0x0a, 0x65, 0x50, 0x99,
	0x5d, 0x0e, 0x32, 0x85, 0x6b, 0x8c, 0x4a, 0xf5, 0x3a, 0x73, 0xe2, 0xc3, 0x5e, 0x67, 0x4e, 0x0e,
	0xb9, 0xce, 0x7c, 0x0b, 0x45, 0x15, 0x81, 0x07, 0xee, 0x29, 0xa7, 0xf4, 0xbe, 0x5a, 0x94, 0x0f,
	0xd3, 0x8f, 0xa7, 0x7f, 0x1a, 0xf5, 0x63, 0x38, 0x41, 0x3f, 0xae, 0xde, 0xc1, 0xcd, 0x0c, 0xde,
	0xc1, 0x7d, 0xcd, 0x2a, 0xce, 0xa9, 0xb3, 0xd8, 0xbf, 0xee, 0x28, 0xfa, 0x37, 0x28, 0x0c, 0xf5,
	0x59, 0xd5, 0xfe, 0x91, 0x55, 0xbf, 0x3e, 0x1b, 0xa3, 0xd3, 0xc7, 0x6b, 0xe5, 0x44, 0x9d, 0x28,
	0x28, 0x1f, 0x31, 0xe6, 0xca, 0x47, 0x8c, 0xd6, 0xff, 0x05, 0x70, 0xe9, 0x04, 0x39, 0xd1, 0x13,
	0xd9, 0xfe, 0x4f, 0x72, 0xe6, 0xac, 0x39, 0x54, 0x9e, 0xa9, 0x3b, 0x54, 0x9e, 0x70, 0x5a, 0x1c,
	0x3b, 0xe9, 0xb4, 0x38, 0xb8, 0xc6, 0xc7, 0x3f, 0xd4, 0x1a, 0x3f, 0xfb, 0x91, 0xd6, 0xf8, 0xc4,
	0x47, 0x58, 0xe3, 0x93, 0x1f, 0x76, 0x8d, 0x4f, 0xfd, 0x24, 0x6b, 0x7c, 0xfa, 0xe4, 0x35, 0x3e,
	0xf0, 0xdc, 0x01, 0x1f, 0xfd, 0xb9, 0x63, 0xe6, 0xa3, 0x3c, 0x77, 0xcc, 0xfe, 0x34, 0xca, 0x91,
	0xc6, 0xc9, 0x72, 0xa4, 0xf4, 0x30, 0x30, 0x37, 0xf8, 0x30, 0xf0, 0x22, 0x2c, 0x75, 0xd3, 0xd4,
	0x8d, 0x62, 0x5f, 0x18, 0x17, 0xf5, 0x7c, 0xbe, 0x5b, 0xec, 0xa6, 0xe9, 0x7b, 0xb1, 0x2f, 0x8a,
	0x3b, 0x7a, 0xa9, 0x8b, 0x49, 0xfc, 0x62, 0xf2, 0x1a, 0x44, 0x0b, 0xa4, 0x3e, 0x76, 0xd3, 0x54,
	0xcf, 0x5e, 0x83, 0xb2, 0x2a, 0xd4, 0x16, 0x07, 0x85, 0xda, 0x6b, 0xb0, 0xca, 0x1b, 0x75, 0xb1,
	0x34, 0xc2, 0x50, 0x74, 0x72, 0x3e, 0xbe, 0xe1, 0x8d, 0x9d, 0xb1, 0x32, 0xb0, 0x0c, 0xf5, 0x0e,
	0x49, 0x45, 0xb7, 0x7c, 0x5e, 0x14, 0xc5, 0xfd, 0xa8, 0x23, 0xf8, 0xe4, 0xb6, 0x28, 0x8b, 0xb0,
	0xf6, 0xab, 0x5c, 0x60, 0x7f, 0x0a, 0x36, 0xcc, 0x2b, 0xea, 0xca, 0xc9, 0x96, 0x0e, 0x6c, 0x4d,
	0xe3, 0xc2, 0xba, 0x7c, 0x9e, 0x35, 0x05, 0xef, 0xca, 0xc7, 0x23, 0x78, 0xcf, 0xc3, 0x74, 0x21,
	0x8f, 0xe8, 0x90, 0x57, 0x00, 0xe4, 0xd9, 0xce, 0x78, 0xb1, 0x5a, 0xa3, 0xe2, 0x50, 0xbf, 0x55,
	0xbd, 0x0d, 0x1b, 0xf8, 0x10, 0xa5, 0xb4, 0xe8, 0xf6, 0xa1, 0xd9, 0xfb, 0xa6, 0x5a, 0x72, 0x5a,
	0x92, 0x5e, 0x3b, 0x34, 0x3a, 0xdf, 0x82, 0x86, 0x14, 0x8e, 0xc5, 0xf9, 0x69, 0x1d, 0xd7, 0xf5,
	0x8c, 0x04, 0xaa, 0xe3, 0x53, 0x49, 0xf2, 0x6e, 0x54, 0x24, 0xef, 0x6f, 0x5b, 0x60, 0xe7, 0xc2,
	0x3d, 0x4a, 0x63, 0x37, 0xeb, 0xb7, 0xe3, 0xf6, 0xfb, 0x6e, 0x90, 0x1c, 0xbc, 0x66, 0x37, 0x61,
	0xb2, 0x6c, 0x6c, 0xa0, 0x7e, 0xe2, 0x49, 0x55, 0x5b, 0x18, 0xa8, 0x7b, 0x3c, 0x6d, 0x5e, 0x20,
	0x87, 0x42, 0x8f, 0x10, 0x9f, 0x05, 0x0a, 0x80, 0x14, 0x98, 0x78, 0x99, 0x90, 0x69, 0x93, 0x32,
	0xbe, 0xbd, 0xd3, 0x50, 0x29, 0x8f, 0xeb, 0x99, 0x7a, 0xe3, 0x63, 0x66, 0xea, 0x8f, 0x2c, 0x58,
	0x2a, 0x33, 0xd5, 0x8f, 0xa2, 0x7e, 0x4f, 0x9e, 0x28, 0x72, 0x3e, 0x4d, 0xa4, 0x72, 0x84, 0xd5,
	0xf3, 0x3c, 0x1d, 0x27, 0xd2, 0x6d, 0x5c, 0xf5, 0xc5, 0xe7, 0xd5, 0x2f, 0xf4, 0x33, 0x1a, 0xb6,
	0xed, 0x3f, 0x1a, 0x0e, 0x5f, 0x82, 0x85, 0x32, 0x83, 0x1e, 0x9e, 0x94, 0xbc, 0xcc, 0x8d, 0xfa,
	0xbd, 0xb6, 0x48, 0x79, 0xab, 0x9c, 0xf2, 0xb2, 0xf7, 0xf0, 0x77, 0xeb, 0x5e, 0x75, 0x98, 0xb3,
	0x34, 0xdc, 0xb3, 0xd7, 0x60, 0x12, 0x5f, 0x13, 0xb9, 0x2f, 0x0d, 0x67, 0x42, 0xfe, 0xdc, 0xf6,
	0x6b, 0xd8, 0x38, 0x53, 0xc7, 0xc6, 0x8f, 0x2d, 0x58, 0x93, 0x0b, 0x26, 0x4b, 0xdc, 0xae, 0xe8,
	0xb8, 0x1d, 0xbc, 0x81, 0xf1, 0xbd, 0xdc, 0x73, 0x73, 0xc9, 0x8e, 0x86, 0xa9, 0x0b, 0xea, 0xae,
	0xe8, 0x6c, 0xc9, 0xdf, 0x52, 0x6e, 0xc8, 0x65, 0x29, 0x09, 0xcd, 0xb7, 0x08, 0x6a, 0x64, 0x31,
	0xd9, 0x4c, 0x6e, 0x67, 0x89, 0xf9, 0x32, 0xf0, 0x3a, 0xac, 0xc9, 0xca, 0xcc, 0x67, 0x04, 0x5c,
	0xd2, 0x81, 0xcf, 0xba, 0xf6, 0x72, 0x57, 0x74, 0x0c, 0x82, 0x9d, 0xcd, 0x5e, 0xb2, 0xed, 0xb7,
	0xfe, 0xc9, 0x19, 0xfc, 0x62, 0x8a, 0xbf, 0x5c, 0x9e, 0xf8, 0xe4, 0x1f, 0x78, 0xae, 0x53, 0x7d,
	0x96, 0x5c, 0xdd, 0xce, 0xe4, 0xf2, 0x69, 0x41, 0x03, 0xd1, 0x2a, 0x06, 0x16, 0x33, 0x5d, 0xd1,
	0xb9, 0xa7, 0xae, 0x48, 0x5f, 0x85, 0x55, 0x89, 0xa3, 0xad, 0x50, 0x0b, 0x64, 0xfa, 0x96, 0x4b,
	0x5d, 0xd1, 0x51, 0x36, 0xab, 0x9a, 0xe8, 0x02, 0x35, 0xcb, 0xaf, 0x80, 0xf4, 0x45, 0xe5, 0xe8,
	0xf0, 0x93, 0xdf, 0xef, 0x59, 0xb0, 0x5c, 0xed, 0x1e, 0x5e, 0xaf, 0x9e, 0x45, 0x21, 0xd7, 0x79,
	0x94, 0x42, 0x6e, 0xc8, 0xe7, 0x72, 0xec, 0xf2, 0x00, 0xe2, 0xfd, 0xea, 0x1a, 0x4c, 0x4a, 0xbc,
	0x83, 0xb4, 0x8b, 0x9a, 0xc9, 0xb4, 0x33, 0xd1, 0x15, 0x9d, 0xcf, 0xa7, 0xdd, 0xd6, 0xb7, 0xc7,
	0x60, 0xa5, 0x3c, 0x9d, 0xf8, 0x6b, 0xda, 0xef, 0xc3, 0x58, 0x57, 0x74, 0x70, 0x64, 0x67, 0x36,
	0xbf, 0x38, 0x22, 0xc6, 0x73, 0x47, 0x36, 0x22, 0x3f, 0x57, 0xb0, 0x17, 0xc5, 0xa9, 0x50, 0xdf,
	0x93, 0x6e, 0x00, 0x66, 0x08, 0x48, 0x9f, 0xf4, 0x2d, 0x58, 0x4f, 0xd2, 0xb8, 0x23, 0xb2, 0x4c,
	0x4a, 0x74, 0xdc, 0x6a, 0xc5, 0x51, 0x47, 0xe0, 0xce, 0xc2, 0x1a, 0xdf, 0x5a, 0x81, 0x20, 0x37,
	0xdc, 0x1b, 0xaa, 0x58, 0x6e, 0x56, 0x89, 0x88, 0xfa, 0x61, 0x1e, 0xf4, 0xbc, 0x5c, 0x54, 0x89,
	0xe9, 0xba, 0xa0, 0x69, 0x60, 0x0c, 0x50, 0x9b, 0xdf, 0xb3, 0x42, 0x4d, 0xa7, 0xb9, 0xa6, 0x81,
	0x51, 0xa6, 0x1e, 0x5c, 0x80, 0x13, 0x75, 0x0b, 0xf0, 0x7f, 0x9a, 0x80, 0x46, 0xe9, 0x43, 0xd8,
	0x36, 0x8c, 0x1b, 0x2b, 0x0e, 0xff, 0x96, 0x9a, 0xd4, 0x9c, 0x94, 0xf5, 0x8c, 0x23, 0x37, 0x75,
	0x3a, 0x34, 0xff, 0xe2, 0x23, 0xfe, 0x40, 0x95, 0xbd, 0xc5, 0x69, 0xc8, 0x7f, 0x77, 0x55, 0xa3,
	0x8a, 0x8f, 0x37, 0x0c, 0x3e, 0xc6, 0x4e, 0x81, 0x8f, 0x37, 0x90, 0x8f, 0x37, 0x0a, 0x3e, 0x7e,
	0xdb, 0x82, 0x65, 0x94, 0xe8, 0x6d, 0x21, 0x0f, 0x18, 0x05, 0x37, 0xe3, 0xc8, 0x8d, 0x3b, 0x3a,
	0x6e, 0xb0, 0x55, 0x67, 0xa9, 0x68, 0xbc, 0x60, 0xea, 0x57, 0x61, 0xd6, 0xcb, 0x0c, 0x5e, 0x68,
	0xed, 0xff, 0xc2, 0xe8, 0x78, 0xf1, 0x32, 0x67, 0xc6, 0xcb, 0xca, 0x5f, 0x07, 0x77, 0x83, 0x82,
	0x87, 0x89, 0x51, 0x7f, 0x1d, 0xd9, 0x1e, 0xd9, 0xae, 0x14, 0x7c, 0x7c, 0xdb, 0x82, 0x06, 0x5e,
	0xf9, 0x69, 0x36, 0xe8, 0x91, 0xcd, 0x1b, 0x1d, 0x1b, 0x2c, 0xbd, 0x9c, 0xd9, 0x30, 0x4b, 0x34,
	0x23, 0xad, 0x7f, 0x68, 0xc1, 0x04, 0xe1, 0xd9, 0x5f, 0x85, 0x46, 0x81, 0x2e, 0x59, 0xb2, 0xf0,
	0xa0, 0xfd, 0x73, 0x23, 0x63, 0xc9, 0x99, 0x3d, 0x4a, 0xe3, 0x62, 0x4c, 0x36, 0x61, 0xa5, 0xd7,
	0xcf, 0xfb, 0x5e, 0xe8, 0xfa, 0x01, 0xbe, 0x80, 0xe5, 0xc7, 0x68, 0x47, 0xc5, 0x22, 0x6f, 0x89,
	0x0a, 0xaf, 0xab, 0xb2, 0x9b, 0xa1, 0xb7, 0xd7, 0xfa, 0xba, 0x05, 0xeb, 0xf5, 0x27, 0x6d, 0xd9,
	0x23, 0x1f, 0xc6, 0x8e, 0xd2, 0x98, 0x05, 0xb5, 0xf3, 0xe8, 0xfb, 0xe1, 0xc8, 0xea, 0x5b, 0xff,
	0x62, 0x7c, 0xd8, 0x9b, 0x3a, 0x55, 0x25, 0x06, 0xce, 0x49, 0xd6, 0xe0, 0x39, 0xe9, 0xa4, 0x73,
	0xcf, 0x99, 0x13, 0xcf, 0x3d, 0x1f, 0xff, 0xcd, 0xdc, 0xb0, 0xab, 0x8c, 0x89, 0x8f, 0x74, 0x95,
	0x31, 0xf9, 0x11, 0xaf, 0x32, 0xa6, 0x4e, 0xba, 0xca, 0x38, 0xf1, 0x05, 0xb8, 0x74, 0xe8, 0x86,
	0x9f, 0xc6, 0x43, 0xf7, 0xcc, 0xf0, 0x43, 0x77, 0xeb, 0xbf, 0xb6, 0x60, 0x5e, 0x6a, 0xe8, 0xe2,
	0x40, 0xa4, 0xb9, 0x9b, 0x75, 0xf6, 0xdd, 0xdc, 0x6e, 0xc1, 0x6c, 0xd6, 0xd9, 0x17, 0x7e, 0x3f,
	0x14, 0xfc, 0xfc, 0x31, 0x86, 0xa6, 0xaf, 0x06, 0x0c, 0xed, 0x63, 0xf9, 0xb7, 0xd4, 0x87, 0xd4,
	0xdd, 0x91, 0x46, 0xba, 0xee, 0xe5, 0xc2, 0x7e, 0x01, 0x6c, 0x8d, 0xd4, 0x4d, 0xc5, 0x07, 0x7d,
	0x11, 0x75, 0x8e, 0x95, 0x53, 0x8b, 0x2a, 0xb9, 0xa9, 0x0a, 0xec, 0x0d, 0x98, 0xf2, 0xfb, 0xfc,
	0x92, 0x4e, 0xf3, 0x49, 0xff, 0x96, 0x9f, 0xa0, 0xe7, 0x1d, 0xb9, 0x79, 0x1a, 0x88, 0x8c, 0xaf,
	0x88, 0xa6, 0x7a, 0xde, 0xd1, 0x3d, 0xf9, 0xbb, 0xf5, 0xbf, 0x8e, 0x15, 0x7e, 0x5f, 0x95, 0x1b,
	0xb2, 0x24, 0x73, 0x93, 0xc4, 0x5e, 0x87, 0xa9, 0x2c, 0xea, 0x90, 0x55, 0x3a, 0x9f, 0x8e, 0xb2,
	0xa8, 0x83, 0x06, 0xe9, 0x2b, 0x30, 0x91, 0x77, 0x7a, 0x85, 0xea, 0x7a, 0x36, 0xef, 0xf4, 0xb6,
	0x7d, 0xfb, 0x29, 0x98, 0x37, 0x2c, 0x01, 0x8d, 0xc7, 0x9b, 0xb9, 0x02, 0x8c, 0x73, 0xaa, 0x8c,
	0x88, 0x2d, 0x8c, 0x57, 0x11, 0xb1, 0xa1, 0x97, 0x60, 0x19, 0xbd, 0x12, 0xe4, 0xd9, 0x5f, 0x64,
	0xb9, 0x54, 0xc2, 0xf2, 0xa0, 0x27, 0xb8, 0x33, 0x8b, 0xb2, 0xec, 0x5e, 0xec, 0x50, 0xc9, 0xbd,
	0xa0, 0x27, 0xa4, 0xb2, 0x86, 0x6b, 0x2c, 0xee, 0x76, 0x09, 0x93, 0xef, 0xa8, 0x25, 0xf0, 0x6e,
	0xb7, 0x8b, 0x38, 0xdf, 0xb4, 0x60, 0xbe, 0xf8, 0x76, 0x38, 0x9e, 0x2c, 0xfb, 0x7f, 0xfe, 0x11,
	0x0b, 0x28, 0x73, 0x86, 0x38, 0x73, 0xf4, 0x6b, 0x97, 0x9b, 0x94, 0x2a, 0xbe, 0x36, 0x9e, 0x94,
	0xff, 0x74, 0x83, 0x90, 0x5f, 0xbc, 0xa6, 0x48, 0xc5, 0x57, 0xb6, 0x93, 0x3b, 0x54, 0x86, 0x23,
	0xf7, 0x1c, 0x2c, 0xd2, 0x40, 0xb0, 0xcb, 0x53, 0x7e, 0x1c, 0x0a, 0xbc, 0x45, 0x9b, 0x76, 0x16,
	0x8c, 0x82, 0x5d, 0x09, 0x6f, 0x7d, 0x00, 0x4f, 0x0e, 0x79, 0x62, 0x48, 0xdd, 0x24, 0x15, 0x89,
	0x88, 0x7c, 0xba, 0xbc, 0xab, 0x55, 0xe7, 0x96, 0xe1, 0x6c, 0x10, 0xf9, 0xe2, 0x48, 0x7d, 0x63,
	0xfc, 0x21, 0xcf, 0x18, 0x91, 0x38, 0xca, 0xd9, 0xe0, 0x87, 0xe4, 0xdc, 0xb4, 0x84, 0x90, 0xb5,
	0xcf, 0x3f, 0xb6, 0xe0, 0xca, 0x43, 0xdb, 0x0c, 0x83, 0x2c, 0xb7, 0x7f, 0x68, 0xa1, 0x67, 0x41,
	0xc1, 0x04, 0x6f, 0x76, 0xe9, 0x29, 0xbc, 0xb0, 0x54, 0xba, 0x8f, 0xde, 0x0c, 0xf2, 0x27, 0xde,
	0x58, 0xb6, 0xfe, 0x4f, 0x7b, 0xd8, 0xca, 0x90, 0xed, 0xe6, 0x95, 0x9b, 0x67, 0xeb, 0x24, 0xd1,
	0x76, 0xe6, 0xa7, 0x51, 0xb4, 0x8d, 0x9d, 0x70, 0x9f, 0xf8, 0x00, 0x5e, 0x2d, 0x5b, 0xfd, 0xb9,
	0x55, 0xa3, 0x40, 0xcf, 0x7f, 0xdf, 0xeb, 0x48, 0xd1, 0x63, 0xee, 0x8f, 0xb4, 0x7a, 0x5f, 0x4c,
	0x4c, 0x63, 0xc0, 0xdd, 0x92, 0x9d, 0xe0, 0x55, 0x45, 0x66, 0xec, 0x9b, 0xdf, 0xb2, 0xe0, 0xaa,
	0xb2, 0x46, 0xf9, 0x68, 0x0d, 0x0e, 0xee, 0x8b, 0x6f, 0x91, 0xa1, 0xca, 0x87, 0x6f, 0xdd, 0xe8,
	0xf4, 0x89, 0x06, 0x3e, 0x13, 0x27, 0x1b, 0xf8, 0xfc, 0x0c, 0xb4, 0x2a, 0xfc, 0xd7, 0x99, 0xfa,
	0x90, 0xa7, 0xc1, 0xa5, 0xd2, 0xf8, 0xfc, 0xe5, 0x6c, 0x7e, 0xa6, 0x46, 0x61, 0xf3, 0x33, 0xfd,
	0xa1, 0x6d, 0x7e, 0x36, 0x61, 0xa5, 0xd2, 0xed, 0x9e, 0xc8, 0xd3, 0xa0, 0x83, 0x9b, 0x39, 0xcb,
	0x2e, 0xdd, 0xd3, 0x3b, 0x58, 0x64, 0xdf, 0x86, 0xc7, 0x07, 0xbf, 0x36, 0x91, 0x0d, 0xee, 0xbc,
	0x97, 0x2a, 0xdf, 0x93, 0xea, 0x30, 0x38, 0xd8, 0x81, 0x2b, 0x0f, 0x99, 0x38, 0x3d, 0x2f, 0xdd,
	0x0b, 0x22, 0xb6, 0xd0, 0x7a, 0xec, 0x84, 0xb9, 0x79, 0x07, 0x11, 0xed, 0x2e, 0xbc, 0xf2, 0xf0,
	0xd9, 0x48, 0x95, 0xba, 0xa9, 0x08, 0xbd, 0x3c, 0x38, 0x10, 0x7c, 0x39, 0xff, 0xdc, 0x89, 0xb3,
	0x8f, 0xea, 0x77, 0x98, 0xc4, 0x7e, 0x1f, 0x5e, 0xfd, 0xd0, 0xed, 0x0c, 0x58, 0x79, 0xbd, 0xf0,
	0x21, 0x5a, 0x32, 0x46, 0xe9, 0x4b, 0xf0, 0xfc, 0x43, 0x1a, 0x52, 0xbf, 0xc9, 0xe4, 0x83, 0x1c,
	0x2c, 0x9e, 0x3a, 0x61, 0xb0, 0xf8, 0x17, 0x19, 0x59, 0x1e, 0xc2, 0x5b, 0x0f, 0xef, 0x4a, 0xa9,
	0x05, 0xb3, 0x47, 0xf4, 0x9a, 0xf0, 0xea, 0x89, 0x3d, 0x32, 0x9b, 0x1b, 0x30, 0x72, 0x31, 0x1a,
	0x1e, 0xb4, 0x20, 0x5b, 0x35, 0xeb, 0x1d, 0x72, 0xbd, 0x6f, 0x7f, 0x3c, 0xd7, 0xfb, 0xbf, 0x6b,
	0xc1, 0xac, 0xb9, 0x19, 0xe2, 0x4b, 0xc6, 0xcc, 0xe6, 0x07, 0xa7, 0xba, 0xf5, 0xc9, 0x86, 0x9d,
	0x19, 0xfe, 0x75, 0x5b, 0x6e, 0xc9, 0xf4, 0x70, 0x60, 0x96, 0xd7, 0xdb, 0xb9, 0x15, 0x24, 0x0f,
	0xb3, 0xc9, 0x5b, 0xf9, 0x09, 0x6d, 0xf2, 0x56, 0xff, 0x92, 0x36, 0x79, 0x6b, 0x7f, 0x69, 0x9b,
	0xbc, 0xe6, 0x4f, 0x6c, 0x93, 0xb7, 0xfe, 0x21, 0x6d, 0xf2, 0x36, 0x1e, 0x6e, 0x93, 0x77, 0xee,
	0x27, 0xb0, 0xc9, 0x3b, 0xff, 0x97, 0xb4, 0xc9, 0xbb, 0xf0, 0x13, 0xda, 0xe4, 0x5d, 0xfc, 0x08,
	0x36, 0x79, 0x97, 0x06, 0x6d, 0xf2, 0x5a, 0xff, 0x60, 0x1a, 0xce, 0xd5, 0xcf, 0xd9, 0x7e, 0x24,
	0xf7, 0xc6, 0x4f, 0xc2, 0x3a, 0x4f, 0xef, 0x72, 0xa9, 0xa1, 0xb7, 0xae, 0x12, 0xc2, 0x55, 0x55,
	0xbe, 0x2b, 0x28, 0xc2, 0xc4, 0xdf, 0xb1, 0x60, 0x7d, 0xa8, 0xe9, 0x39, 0xeb, 0x68, 0xbd, 0xd1,
	0xaf, 0x3d, 0xa3, 0x51, 0x67, 0xd5, 0x33, 0x98, 0x94, 0x62, 0xea, 0x2e, 0x5d, 0xc8, 0xfe, 0x6d,
	0x0b, 0x9a, 0x83, 0xf6, 0x0a, 0x64, 0xd6, 0xc4, 0xb7, 0x98, 0xa7, 0xc0, 0xa9, 0x61, 0x4b, 0x55,
	0xe6, 0xf4, 0xaa, 0x66, 0xc6, 0xfe, 0x63, 0x0b, 0x56, 0x07, 0xa9, 0x7a, 0x22, 0xdb, 0xe7, 0xfb,
	0xcd, 0x07, 0xa7, 0xc4, 0xa7, 0x6c, 0xd2, 0x59, 0xae, 0x72, 0x89, 0x16, 0x1e, 0x3f, 0xb0, 0x60,
	0x71, 0xe0, 0x4e, 0x8a, 0xaf, 0x3c, 0xc5, 0xe8, 0xd9, 0x3b, 0x4a, 0x63, 0x67, 0xde, 0x64, 0xec,
	0x8b, 0x69, 0x6c, 0xff, 0xa1, 0x05, 0xcb, 0x83, 0x77, 0x54, 0xb9, 0xe0, 0x5b, 0xd0, 0x53, 0x30,
	0x72, 0xe7, 0x3b, 0x31, 0xc7, 0x2e, 0xcd, 0x41, 0x64, 0xc2, 0xfe, 0xeb, 0x03, 0xdc, 0xd1, 0x6d,
	0x00, 0x1f, 0x90, 0xf7, 0x4f, 0xe1, 0x9b, 0x62, 0x7b, 0xce, 0x62, 0xe9, 0x83, 0x26, 0xd9, 0x4e,
	0x52, 0xc3, 0x1b, 0x9d, 0xc7, 0x50, 0x17, 0x3e, 0x15, 0xde, 0xa8, 0xbd, 0x32, 0x6f, 0x3b, 0x9b,
	0xc9, 0x3d, 0xd1, 0xfa, 0x4f, 0xce, 0xc0, 0x4a, 0x2d, 0xcd, 0x50, 0xb9, 0x65, 0x18, 0xc9, 0xd6,
	0xc8, 0x2d, 0x65, 0x2c, 0x3f, 0x94, 0xd4, 0xed, 0xa4, 0x9d, 0x57, 0x37, 0xf9, 0x6c, 0x7e, 0xae,
	0xbe, 0x82, 0x2d, 0x89, 0x22, 0x0f, 0xda, 0x4b, 0x35, 0x02, 0x95, 0xa5, 0xc9, 0xde, 0xe8, 0x47,
	0x0d, 0x9b, 0x2b, 0x0f, 0xda, 0x7d, 0x09, 0x6a, 0xf5, 0x2b, 0x2e, 0xea, 0x64, 0xa1, 0x2a, 0xd2,
	0x34, 0x4e, 0xed, 0xc7, 0xa1, 0x81, 0x7f, 0xc8, 0xe5, 0x9d, 0x79, 0x7b, 0x6a, 0xa8, 0x66, 0x11,
	0x78, 0x87, 0x60, 0xf6, 0x3a, 0x4c, 0x85, 0x19, 0x07, 0x4e, 0xe0, 0x50, 0x28, 0x61, 0x46, 0x31,
	0x13, 0x64, 0x51, 0xbc, 0x47, 0x77, 0x40, 0x74, 0x4b, 0x21, 0xb5, 0x2f, 0x79, 0x38, 0x6a, 0x7d,
	0xff, 0x4c, 0x11, 0xad, 0x00, 0xdb, 0xcd, 0x82, 0x3d, 0x6e, 0xf5, 0x02, 0x00, 0xb5, 0x1a, 0xa9,
	0x5b, 0xaf, 0x86, 0x33, 0x8d, 0x90, 0xf7, 0x64, 0xa5, 0xcb, 0x70, 0x16, 0x7f, 0xa8, 0x2b, 0x11,
	0x22, 0x5a, 0x87, 0xa9, 0xac, 0xdf, 0x76, 0x3b, 0x92, 0x84, 0x9b, 0xca, 0xfa, 0xed, 0x2d, 0xc5,
	0x85, 0x62, 0x70, 0x7c, 0x38, 0x83, 0x67, 0x4b, 0x0c, 0x4a, 0x55, 0x8a, 0x4d, 0x3f, 0xd1, 0xb5,
	0x8a, 0x5e, 0x1d, 0xe9, 0x1c, 0x3a, 0x5f, 0x14, 0xd0, 0xcb, 0xe3, 0xc0, 0x38, 0x4d, 0xd6, 0x8c,
	0xd3, 0x25, 0x98, 0x51, 0xd6, 0xe4, 0x61, 0x96, 0xf0, 0xd9, 0x11, 0x18, 0x74, 0x3b, 0x4b, 0x5a,
	0x7f, 0xd2, 0xa8, 0x7e, 0x8a, 0x92, 0x6f, 0xd6, 0x0a, 0xfd, 0xe5, 0xe2, 0x15, 0x90, 0x1b, 0x64,
	0x2e, 0x9e, 0x0c, 0xf9, 0x12, 0xdd, 0xa6, 0xc2, 0x6d, 0x59, 0xb6, 0x9d, 0x7d, 0x5e, 0x96, 0xd8,
	0x8f, 0xc1, 0xac, 0x49, 0xa2, 0x5e, 0xb8, 0x0d, 0x4c, 0xfb, 0x69, 0x58, 0x30, 0x1a, 0xa1, 0xe5,
	0xa0, 0x6e, 0x0b, 0xf5, 0x7e, 0x88, 0xcb, 0xa0, 0x82, 0x69, 0x98, 0x2b, 0x18, 0x98, 0xb8, 0xd1,
	0x3f, 0x0f, 0xb6, 0x76, 0xb0, 0x46, 0x12, 0xac, 0xf5, 0x2c, 0x5d, 0x8f, 0xa9, 0x12, 0xb9, 0xdb,
	0xaa, 0x7a, 0xcb, 0xd8, 0x7a, 0x94, 0xe7, 0x4c, 0xdc, 0x6d, 0xdf, 0x7e, 0x0e, 0x16, 0xf7, 0xe3,
	0xd0, 0xc7, 0x10, 0x1f, 0xfa, 0xb6, 0x95, 0x6e, 0xcb, 0x17, 0x54, 0xc1, 0x75, 0x75, 0xeb, 0x7a,
	0x09, 0x66, 0x12, 0x43, 0x2f, 0xa2, 0xcb, 0x3c, 0xa9, 0xf8, 0x29, 0x7d, 0xe8, 0x05, 0x58, 0x32,
	0xfb, 0xe3, 0xa5, 0xc2, 0xa3, 0x3b, 0x72, 0x64, 0xb3, 0xe8, 0xd2, 0xd5, 0x54, 0x78, 0xdb, 0xbe,
	0xfd, 0x3a, 0x5e, 0xc0, 0x67, 0xf2, 0xf8, 0x9b, 0xbb, 0x25, 0x86, 0x0b, 0x0b, 0xd3, 0x5d, 0x2c,
	0xbd, 0x61, 0x70, 0x2d, 0xd9, 0x08, 0x32, 0x77, 0x5f, 0x10, 0x77, 0x7c, 0xaa, 0x86, 0x20, 0xbb,
	0xc5, 0x10, 0x46, 0x08, 0xe3, 0xce, 0x03, 0x44, 0x98, 0x55, 0x08, 0xb7, 0x19, 0xc2, 0x08, 0x07,
	0x22, 0x6d, 0x7b, 0x79, 0xd0, 0xe3, 0x93, 0x2e, 0x04, 0xd9, 0xe7, 0x19, 0xc2, 0x08, 0x3a, 0xde,
	0xcb, 0x9c, 0x42, 0xd0, 0x21, 0x5e, 0x9e, 0x85, 0xc5, 0x7d, 0x2f, 0x2b, 0x8b, 0x03, 0x36, 0x3c,
	0x9b, 0xdf, 0xf7, 0x32, 0x53, 0x5e, 0xe1, 0x7b, 0x5c, 0x19, 0x71, 0xe1, 0xd1, 0xbf, 0xc7, 0xd5,
	0x0a, 0x28, 0x67, 0xd6, 0x14, 0x4d, 0x68, 0x6c, 0x56, 0x92, 0x5f, 0xdd, 0xb8, 0x1f, 0xa9, 0x43,
	0x65, 0x49, 0x8a, 0xdd, 0x94, 0x05, 0xf6, 0x8f, 0x2c, 0xbe, 0xc8, 0x35, 0x43, 0x82, 0x90, 0x98,
	0xb0, 0xf1, 0x46, 0xd3, 0x1f, 0x89, 0x9d, 0x6c, 0x45, 0x60, 0x3a, 0xcb, 0x95, 0xb0, 0x23, 0x37,
	0x50, 0x36, 0x7d, 0xc7, 0x82, 0x46, 0x2a, 0x7a, 0x22, 0xdd, 0x13, 0xcc, 0xd3, 0xd2, 0x29, 0xf2,
	0x34, 0xcb, 0x4d, 0x13, 0x2f, 0xdf, 0xb3, 0x60, 0xc1, 0x90, 0x6b, 0xc4, 0xce, 0x32, 0xb2, 0xd3,
	0x1e, 0x19, 0x3b, 0x5a, 0xb6, 0x9b, 0xa2, 0x93, 0xf8, 0x79, 0x05, 0x56, 0xe4, 0xec, 0x3c, 0x4a,
	0xe3, 0xca, 0x0c, 0xa5, 0x53, 0xab, 0xbd, 0xef, 0x65, 0x5f, 0x4c, 0xe3, 0xd2, 0x24, 0x7d, 0x1d,
	0xd6, 0x06, 0xd0, 0x79, 0x7e, 0xd0, 0x91, 0x75, 0xf9, 0xa8, 0x4c, 0x41, 0x53, 0xe4, 0x7b, 0x16,
	0x2c, 0x0e, 0x36, 0xb3, 0x76, 0x5a, 0xf3, 0x7b, 0xbe, 0xc2, 0x94, 0x94, 0x93, 0x52, 0xa4, 0x94,
	0xef, 0x69, 0xf8, 0xc8, 0xbb, 0x10, 0x64, 0xe5, 0x1b, 0x18, 0xfb, 0x1a, 0x5c, 0x2c, 0xac, 0xb2,
	0xdb, 0xc7, 0xe6, 0xde, 0xc0, 0xe2, 0x9d, 0x8e, 0xbc, 0x1b, 0x1a, 0xeb, 0xda, 0x71, 0x71, 0xa4,
	0x21, 0x69, 0x7f, 0x1d, 0x2e, 0xf1, 0x03, 0x8e, 0xef, 0x76, 0xd3, 0xb8, 0x57, 0x53, 0x09, 0xc5,
	0x81, 0x38, 0xa7, 0xd0, 0x6e, 0xa6, 0x71, 0xaf, 0x52, 0x4b, 0xeb, 0x4f, 0xc6, 0x8b, 0x9b, 0x79,
	0x34, 0x76, 0x43, 0xd9, 0x49, 0x6e, 0xee, 0x18, 0x58, 0x4d, 0xee, 0x9c, 0xb2, 0x4b, 0x58, 0xfb,
	0x07, 0x7d, 0x81, 0x2f, 0x5f, 0x1c, 0x64, 0x4e, 0x16, 0xc8, 0x0a, 0x7f, 0x96, 0xc0, 0xf6, 0x5b,
	0xb0, 0x21, 0x37, 0x5f, 0x37, 0x0b, 0xa2, 0x8e, 0x70, 0x43, 0x2f, 0xcb, 0x91, 0xe2, 0xd8, 0x95,
	0x88, 0xbc, 0x63, 0xad, 0x4a, 0x8c, 0x5d, 0x89, 0x70, 0xdb, 0xcb, 0x72, 0x49, 0x79, 0xbc, 0x2b,
	0x22, 0x8c, 0x15, 0x96, 0x8a, 0x8e, 0x08, 0x0e, 0x84, 0xef, 0x26, 0xa9, 0xe8, 0x8a, 0x54, 0x76,
	0x0c, 0x5b, 0xc5, 0xc9, 0x96, 0xb1, 0x22, 0x70, 0x4e, 0x61, 0xed, 0x28, 0x24, 0xc9, 0x01, 0x4e,
	0xbf, 0xcc, 0xbe, 0x03, 0x4f, 0x54, 0x19, 0xa8, 0xab, 0x8b, 0x9f, 0xf5, 0x2e, 0x95, 0x58, 0x19,
	0xac, 0x6f, 0x08, 0x4f, 0x79, 0x2a, 0x84, 0xe2, 0xe9, 0xec, 0x10, 0x9e, 0xee, 0xa5, 0x42, 0x7c,
	0x18, 0x9e, 0x8a, 0xba, 0x78, 0x9f, 0x1c, 0xc2, 0x93, 0xae, 0x4f, 0x2a, 0xbf, 0x75, 0x5d, 0x22,
	0xf5, 0x6a, 0x52, 0x39, 0x76, 0x55, 0xbb, 0x82, 0xba, 0x56, 0x89, 0xb4, 0x68, 0x99, 0x48, 0xa7,
	0x2a, 0xa4, 0xba, 0x45, 0x49, 0xda, 0xfa, 0xad, 0x29, 0x58, 0x2c, 0x09, 0x01, 0x5f, 0x64, 0xf9,
	0x47, 0x0f, 0x7d, 0xf5, 0x7d, 0x0b, 0x16, 0xcd, 0x69, 0x4a, 0xaf, 0x54, 0x67, 0x46, 0x2d, 0x3f,
	0x8d, 0x5b, 0x82, 0xf9, 0x42, 0x19, 0x20, 0x63, 0xfa, 0x6f, 0x59, 0x30, 0x63, 0xde, 0x5d, 0x8c,
	0x9d, 0x22, 0x33, 0x50, 0x30, 0x23, 0x15, 0x22, 0x73, 0x2c, 0xc9, 0x33, 0x8e, 0x74, 0xb2, 0x05,
	0xa3, 0x80, 0x3c, 0xe4, 0xde, 0x84, 0xa6, 0xd7, 0xc9, 0x83, 0x03, 0x51, 0xb3, 0xe8, 0x69, 0x4a,
	0xae, 0x50, 0x79, 0x55, 0x68, 0xa8, 0x47, 0x06, 0x35, 0xfe, 0x47, 0xfb, 0x5e, 0x3f, 0xcb, 0xb5,
	0x03, 0xc3, 0x92, 0x31, 0x3a, 0xaa, 0xc8, 0x5e, 0x85, 0x89, 0x7e, 0x82, 0x4a, 0x35, 0xe9, 0x67,
	0xfc, 0x4b, 0x2b, 0x91, 0xe4, 0x2d, 0x47, 0x6a, 0x37, 0x05, 0x76, 0x42, 0x25, 0x92, 0x5c, 0xe5,
	0x50, 0xfb, 0x7e, 0x0c, 0x66, 0xf3, 0x38, 0xf7, 0x42, 0x97, 0xeb, 0xa1, 0xc0, 0x4e, 0x33, 0x08,
	0xbb, 0x4f, 0x95, 0xb1, 0x43, 0xa0, 0x38, 0x0a, 0x32, 0x15, 0x15, 0x70, 0x2a, 0xdb, 0x0c, 0x6f,
	0xc8, 0xdf, 0x55, 0x8b, 0x3c, 0x5f, 0x84, 0x82, 0xde, 0x59, 0xbc, 0x7e, 0x46, 0x8e, 0x3e, 0xd3,
	0x25, 0x8b, 0xbc, 0xeb, 0x8c, 0xb0, 0x25, 0xcb, 0x31, 0x18, 0x48, 0x1d, 0x35, 0x9e, 0x30, 0xb0,
	0x86, 0x59, 0x0a, 0xc3, 0x51, 0x53, 0xc3, 0x6e, 0xbf, 0x4d, 0x95, 0x5c, 0x1f, 0x52, 0x89, 0x64,
	0x3e, 0xcb, 0xbd, 0x5e, 0xc2, 0xbe, 0xe7, 0xe7, 0x6b, 0x2a, 0xb9, 0xa7, 0x70, 0xd0, 0xf0, 0x91,
	0xed, 0xc8, 0x51, 0x49, 0x55, 0xce, 0x05, 0x6c, 0x3a, 0x2e, 0xd5, 0x53, 0xfb, 0x4f, 0x2c, 0x58,
	0x2f, 0x30, 0xdc, 0x72, 0x08, 0x33, 0x54, 0xf5, 0x46, 0x74, 0x30, 0xaf, 0x13, 0xff, 0xce, 0x5a,
	0xa0, 0x18, 0x73, 0x4a, 0x8c, 0xb4, 0xfe, 0xc1, 0x18, 0x5a, 0xe8, 0xca, 0x8f, 0x46, 0x16, 0xba,
	0x2f, 0xc0, 0x92, 0xfa, 0x91, 0xf5, 0xdb, 0xfa, 0x62, 0x92, 0xb6, 0x8a, 0x85, 0x6c, 0x33, 0xbc,
	0x29, 0x3a, 0xbb, 0x5c, 0x80, 0xa7, 0xac, 0x39, 0x85, 0x6e, 0x18, 0x81, 0x36, 0x9c, 0x19, 0xc2,
	0xa4, 0xa3, 0xd8, 0x33, 0xb0, 0xa8, 0x1b, 0x28, 0x99, 0xeb, 0x36, 0x9c, 0x39, 0xc2, 0xd3, 0x96,
	0xba, 0x6f, 0xc1, 0x86, 0x42, 0xad, 0x31, 0xf1, 0xa5, 0x85, 0xb4, 0x4a, 0x34, 0x03, 0x56, 0xbe,
	0x4f, 0x14, 0xbc, 0xb0, 0xa5, 0xef, 0x59, 0x0e, 0xb3, 0x46, 0x5c, 0x93, 0xb1, 0xef, 0x65, 0x98,
	0x55, 0x58, 0xf2, 0x23, 0xb3, 0x5d, 0x27, 0x10, 0xce, 0x75, 0x29, 0x0f, 0xaf, 0xc0, 0xbc, 0xc2,
	0x50, 0x46, 0xce, 0x93, 0x6c, 0x8f, 0x82, 0x48, 0x64, 0xdc, 0x6c, 0x7f, 0x1a, 0xce, 0x0d, 0x8c,
	0x54, 0x9c, 0x06, 0x7b, 0x72, 0xda, 0xc4, 0x29, 0x4b, 0xe2, 0x66, 0x79, 0xc4, 0xee, 0xea, 0x72,
	0x39, 0x89, 0x14, 0x39, 0xd9, 0x68, 0xd3, 0x31, 0x87, 0x07, 0x8e, 0xcc, 0xb4, 0x2f, 0xc2, 0x8c,
	0xc2, 0x39, 0x48, 0xbb, 0xfc, 0x84, 0x38, 0x4d, 0x18, 0x9f, 0x4f, 0xbb, 0xad, 0x9f, 0x83, 0x39,
	0xfc, 0xec, 0x64, 0x44, 0xae, 0xf6, 0xf9, 0x7d, 0x4f, 0xee, 0x0c, 0x69, 0x90, 0x3d, 0xa0, 0x8b,
	0x65, 0xbd, 0xcf, 0x63, 0x81, 0x13, 0x64, 0x0f, 0xf0, 0x6a, 0x19, 0x17, 0xab, 0x24, 0xd4, 0x5e,
	0x9c, 0xd3, 0xce, 0x94, 0x04, 0x60, 0xec, 0xe2, 0xef, 0x58, 0xb0, 0x9e, 0x66, 0x07, 0x89, 0xdb,
	0xdb, 0xeb, 0xe5, 0xae, 0x48, 0x63, 0xd7, 0xb0, 0x60, 0x65, 0xe7, 0x62, 0x3e, 0x7a, 0x99, 0x86,
	0x63, 0x0d, 0x75, 0xe4, 0x22, 0xaf, 0x96, 0x4b, 0x30, 0x23, 0x49, 0xd5, 0x96, 0xc2, 0xfe, 0xcd,
	0x22, 0x8d, 0x87, 0x46, 0x51, 0x1c, 0xab, 0x89, 0xa2, 0xf8, 0xf7, 0x2c, 0xd8, 0x28, 0xf3, 0x82,
	0x06, 0x9c, 0x1f, 0x95, 0x19, 0x79, 0xac, 0x95, 0xfd, 0x18, 0x74, 0x10, 0x98, 0x13, 0x69, 0xbc,
	0x6d, 0xf8, 0x08, 0xb4, 0xa0, 0x21, 0x31, 0x0b, 0x4f, 0x03, 0x3a, 0x7f, 0xcb, 0xbe, 0x68, 0x57,
	0x83, 0x55, 0x98, 0x90, 0xd2, 0xbd, 0x9f, 0xf1, 0xac, 0xe4, 0x5f, 0xad, 0x7f, 0x7e, 0x06, 0x96,
	0xcb, 0xcc, 0x32, 0x9b, 0xeb, 0x30, 0x25, 0x7f, 0x19, 0xd7, 0xf2, 0x93, 0x22, 0x8d, 0xf1, 0x78,
	0xfe, 0x3b, 0x16, 0xd8, 0x72, 0x78, 0x19, 0xdb, 0x2d, 0x19, 0x09, 0x3f, 0xd2, 0xfb, 0xd8, 0xa1,
	0x9f, 0xd4, 0x59, 0x60, 0x06, 0x76, 0xfb, 0xed, 0xbb, 0x64, 0xf4, 0xf8, 0xc7, 0x16, 0xac, 0x1b,
	0x66, 0xba, 0x15, 0xe6, 0xc6, 0x1e, 0xfd, 0x0b, 0xe1, 0xf0, 0x6f, 0xec, 0xac, 0x16, 0x8c, 0xdc,
	0x30, 0x78, 0x6c, 0xfd, 0xd1, 0x19, 0xb8, 0x54, 0x90, 0xa5, 0xe5, 0x3e, 0x51, 0xa8, 0x3b, 0x36,
	0xd4, 0x33, 0x6c, 0x24, 0xbc, 0x03, 0x2f, 0x08, 0xe5, 0x41, 0x9c, 0xe7, 0xc9, 0x4a, 0x90, 0x15,
	0xe6, 0x0f, 0x57, 0x55, 0xa1, 0xfd, 0x12, 0x2c, 0x97, 0xe9, 0x82, 0xc8, 0x95, 0xfb, 0x0c, 0xd9,
	0x3c, 0x2e, 0x9a, 0x44, 0xdb, 0xd1, 0xfd, 0x4c, 0xb0, 0x65, 0xc9, 0x80, 0x9d, 0xa4, 0x69, 0x59,
	0x52, 0xb5, 0x92, 0x14, 0x3e, 0xfb, 0x64, 0x57, 0xbc, 0xd0, 0x0c, 0x1e, 0xc7, 0xd5, 0x93, 0x5f,
	0xd9, 0x1d, 0xad, 0xe0, 0xf3, 0x3c, 0xc6, 0x33, 0xc2, 0x0a, 0x02, 0x65, 0xf5, 0x31, 0x45, 0xe8,
	0xdb, 0x7e, 0xeb, 0x1f, 0x95, 0x16, 0x72, 0x65, 0x84, 0xec, 0xaf, 0x5b, 0x70, 0x96, 0x02, 0x02,
	0x5a, 0x8f, 0xfe, 0x6d, 0xe2, 0x21, 0x1f, 0xc6, 0xa1, 0x96, 0xf1, 0x12, 0x6e, 0x50, 0x48, 0xa4,
	0x5a, 0x48, 0xb4, 0x3e, 0x07, 0x97, 0xcb, 0x55, 0xa1, 0x8d, 0x55, 0xf9, 0x23, 0x93, 0x10, 0xe0,
	0xd0, 0xd5, 0x64, 0x83, 0xa5, 0x85, 0x00, 0x45, 0xa9, 0x23, 0x3b, 0xac, 0x3f, 0x39, 0x63, 0xca,
	0x92, 0x6a, 0x65, 0xf6, 0x37, 0x2a, 0xe3, 0x11, 0x8e, 0x6e, 0x3c, 0x06, 0x3b, 0xa1, 0x06, 0x64,
	0x19, 0xce, 0x9a, 0x61, 0xa3, 0xe8, 0x07, 0x07, 0x4c, 0x22, 0xaa, 0x03, 0x2f, 0x0d, 0x30, 0x2e,
	0x9a, 0x21, 0x35, 0x71, 0x1e, 0x63, 0x27, 0x3f, 0xcf, 0xa5, 0x24, 0x3e, 0xa5, 0xb6, 0x58, 0xc1,
	0xe7, 0x01, 0xa2, 0x60, 0xef, 0x4b, 0x07, 0x25, 0x74, 0x1a, 0xa6, 0x3f, 0x3d, 0x03, 0x57, 0xca,
	0xec, 0x0e, 0x18, 0xec, 0xff, 0xfb, 0xd5, 0xb5, 0xed, 0xb7, 0xfe, 0xc2, 0xaa, 0xca, 0x9f, 0x81,
	0x71, 0xb2, 0x7f, 0xbd, 0x32, 0xa7, 0x3e, 0x18, 0xdd, 0x9c, 0x1a, 0xf2, 0x91, 0xd4, 0xc4, 0x7a,
	0x0e, 0x16, 0x8b, 0xdd, 0xaf, 0xbc, 0xde, 0x16, 0x74, 0x81, 0xda, 0x9a, 0xab, 0xbe, 0x74, 0x63,
	0x03, 0xbe, 0x74, 0xad, 0xcd, 0xaa, 0x68, 0x31, 0xfc, 0x17, 0xec, 0x15, 0x98, 0xc8, 0xd2, 0xd0,
	0xc5, 0x6e, 0xcb, 0x79, 0x76, 0x36, 0x4b, 0xc3, 0x77, 0xb3, 0xd6, 0x1f, 0x9f, 0x35, 0xf7, 0xc7,
	0xb4, 0xb4, 0x3f, 0xa6, 0x95, 0xfd, 0x31, 0xad, 0xec, 0x8f, 0xe9, 0x29, 0xee, 0x8f, 0x69, 0xdd,
	0xfe, 0x98, 0x9a, 0xfb, 0xe3, 0x0f, 0x2d, 0x58, 0xa6, 0xe5, 0x98, 0x9e, 0xe2, 0xd6, 0x58, 0x15,
	0x1d, 0xce, 0x22, 0xfe, 0x72, 0x4c, 0xce, 0xfe, 0x56, 0x79, 0xe7, 0xae, 0xb0, 0x37, 0x3e, 0x6a,
	0x49, 0x3f, 0x30, 0x0b, 0xcd, 0xed, 0xbb, 0xc4, 0xe8, 0xef, 0x5a, 0xb0, 0x84, 0x73, 0xa6, 0xc2,
	0xe2, 0xd9, 0x51, 0x7f, 0x59, 0x63, 0xa2, 0x3a, 0x0b, 0xe8, 0x05, 0x63, 0x6a, 0x15, 0xdf, 0xb1,
	0x60, 0x5e, 0xd1, 0xc6, 0x09, 0x69, 0xd6, 0x97, 0x60, 0x46, 0xfe, 0x5d, 0xbe, 0x1d, 0x81, 0xfd,
	0x38, 0x31, 0xd6, 0x0b, 0x22, 0x98, 0x26, 0xae, 0x68, 0x60, 0x9d, 0x28, 0x73, 0x52, 0x29, 0x89,
	0x25, 0x8a, 0x3e, 0xd9, 0x94, 0x72, 0x53, 0x34, 0x9c, 0xa5, 0xfd, 0x38, 0x51, 0xa7, 0x1a, 0x9d,
	0x42, 0xe2, 0x18, 0xec, 0x42, 0xe6, 0x65, 0x89, 0xe8, 0x60, 0xa0, 0xea, 0xc7, 0x60, 0xd6, 0x3b,
	0x10, 0xa9, 0xb7, 0x27, 0xdc, 0x54, 0x45, 0xe6, 0x19, 0x77, 0x66, 0x18, 0xe6, 0x78, 0x39, 0x1a,
	0xd5, 0xf7, 0xbc, 0xa3, 0xa0, 0xd7, 0xef, 0xb9, 0xed, 0x7e, 0x9a, 0xd1, 0x72, 0x19, 0x77, 0x66,
	0x19, 0x78, 0x4d, 0xc2, 0x30, 0x8c, 0xa1, 0xf0, 0x1e, 0x50, 0x25, 0x63, 0x88, 0x30, 0x25, 0x01,
	0xb2, 0x86, 0xd6, 0xdf, 0xb7, 0x60, 0x35, 0x17, 0x34, 0x68, 0x7b, 0x6f, 0xbe, 0xfc, 0x49, 0x37,
	0xce, 0x23, 0x37, 0x97, 0x3c, 0x60, 0xe0, 0x22, 0xbc, 0x35, 0x36, 0xd3, 0x55, 0x00, 0x81, 0x70,
	0xc9, 0x3e, 0x0d, 0x0b, 0x51, 0xaf, 0xe3, 0xc6, 0xa9, 0x9b, 0xc7, 0xa1, 0x48, 0xbd, 0xa8, 0xa3,
	0xac, 0xfa, 0xe7, 0xa2, 0x5e, 0xe7, 0x6e, 0x7a, 0x4f, 0x41, 0xed, 0x05, 0x18, 0x8b, 0x0e, 0x3a,
	0x2c, 0x5e, 0xe4, 0x9f, 0x95, 0xc4, 0x0a, 0xe3, 0x03, 0x89, 0x15, 0xd6, 0x61, 0xaa, 0x1d, 0xe4,
	0xc4, 0x33, 0xbf, 0x10, 0xb6, 0x83, 0x1c, 0x59, 0xfe, 0xcf, 0x2c, 0xf4, 0x8c, 0x24, 0x96, 0x45,
	0x24, 0xd2, 0xa0, 0xc3, 0x1c, 0x5f, 0x00, 0xc0, 0x3f, 0x4c, 0x01, 0x33, 0x8d, 0x10, 0xe4, 0xf7,
	0xab, 0x30, 0x15, 0xe7, 0x11, 0xfe, 0x66, 0xb9, 0xd2, 0x7e, 0xc4, 0x36, 0xef, 0x35, 0xc3, 0xe8,
	0xe8, 0x36, 0xeb, 0xc7, 0xba, 0xfb, 0xff, 0xbb, 0xb1, 0xee, 0xaa, 0xb1, 0xee, 0x0e, 0x8c, 0x75,
	0xb7, 0x32, 0xd6, 0xdd, 0x53, 0x1b, 0xeb, 0xae, 0x1e, 0x6b, 0xfc, 0xab, 0xe5, 0xa2, 0xd7, 0xb4,
	0x5c, 0xc9, 0x64, 0x1f, 0x87, 0x62, 0x9e, 0x5c, 0xcc, 0xcf, 0xc1, 0x74, 0xd5, 0xbf, 0x7c, 0x2a,
	0x55, 0x47, 0xbe, 0xa7, 0x60, 0xde, 0xd8, 0x11, 0x8d, 0xf7, 0xdb, 0xb9, 0x62, 0x53, 0xc4, 0xeb,
	0xf8, 0xff, 0xd9, 0x82, 0x71, 0x59, 0x7d, 0xad, 0xfb, 0x80, 0xdc, 0x57, 0x65, 0x83, 0xe5, 0xfd,
	0x77, 0x46, 0xc2, 0x94, 0x28, 0xf9, 0x43, 0x0b, 0xd6, 0x0a, 0xa6, 0x48, 0x92, 0x2a, 0xf4, 0xb1,
	0x91, 0xf8, 0x24, 0xd7, 0x0d, 0x86, 0xb3, 0x22, 0xff, 0xbe, 0xaf, 0x59, 0x50, 0xea, 0xf8, 0x21,
	0x80, 0xa6, 0x70, 0xed, 0x00, 0x26, 0xf9, 0x17, 0xab, 0x37, 0x3b, 0x8f, 0x34, 0xc3, 0x8e, 0xef,
	0xa7, 0xce, 0x44, 0x8e, 0x4a, 0x49, 0xeb, 0x5f, 0x17, 0xee, 0xee, 0x9d, 0x38, 0x3a, 0x10, 0xe9,
	0x9e, 0x88, 0xf0, 0x4b, 0x90, 0xaf, 0x34, 0x1b, 0x72, 0xb3, 0x2c, 0x9c, 0x20, 0xc3, 0x74, 0x39,
	0x81, 0xe9, 0xae, 0xb4, 0xaf, 0x24, 0x20, 0x22, 0xde, 0xed, 0xe7, 0x92, 0x26, 0x15, 0xd9, 0x81,
	0xa4, 0x21, 0xd1, 0x37, 0x21, 0x7f, 0x12, 0x0d, 0x16, 0x48, 0x9a, 0x71, 0xa2, 0x91, 0xbf, 0x25,
	0xcd, 0xe3, 0xd0, 0xe0, 0x3d, 0x5f, 0x1c, 0xa6, 0x01, 0x2f, 0x8a, 0x71, 0x67, 0x96, 0x36, 0x61,
	0x82, 0xd9, 0x57, 0x60, 0x8e, 0x3b, 0xa1, 0xb0, 0x26, 0x10, 0xab, 0x41, 0x50, 0x85, 0xf6, 0x38,
	0x34, 0x3a, 0xa9, 0x28, 0x2c, 0xd9, 0xf1, 0x9a, 0x69, 0xdc, 0x99, 0x55, 0x40, 0x34, 0xca, 0xf8,
	0x97, 0x46, 0x0a, 0xa1, 0x6a, 0xec, 0x0e, 0x8a, 0x8f, 0xd6, 0x8d, 0x8d, 0xcb, 0x08, 0xcb, 0xbc,
	0x8c, 0xb0, 0xdf, 0x82, 0xf5, 0x2a, 0x4d, 0x71, 0xd5, 0x49, 0x73, 0x77, 0xad, 0x1c, 0xee, 0xa3,
	0xb8, 0xe5, 0x7c, 0x19, 0x96, 0x07, 0xda, 0x0b, 0xa2, 0x07, 0x7c, 0x17, 0x62, 0x97, 0xc9, 0x6e,
	0x07, 0xd1, 0x03, 0x8c, 0x7a, 0xce, 0x90, 0x68, 0x0f, 0x91, 0xf5, 0xac, 0xa5, 0x3b, 0x92, 0x95,
	0xa2, 0x58, 0x12, 0xa8, 0xe9, 0xfe, 0x3a, 0xac, 0xe1, 0xdb, 0x4a, 0x1e, 0xbb, 0xfb, 0x5e, 0xea,
	0x1b, 0x2d, 0xb2, 0xc8, 0x59, 0x96, 0xc5, 0xf7, 0xe2, 0x5b, 0x5e, 0xea, 0x17, 0x4d, 0x4a, 0xb9,
	0xd8, 0x4d, 0xdd, 0xd4, 0x1c, 0xe2, 0x29, 0x07, 0xba, 0xa9, 0xc3, 0x10, 0x8c, 0x5a, 0x50, 0x20,
	0xb8, 0x66, 0x66, 0x07, 0x7a, 0x62, 0x59, 0x2e, 0x90, 0xef, 0x15, 0x69, 0xbb, 0xfe, 0xdc, 0x2a,
	0x42, 0xa9, 0xa1, 0x20, 0x39, 0xf4, 0x7b, 0x6e, 0x37, 0x38, 0x12, 0xbe, 0xbb, 0x97, 0x06, 0x3e,
	0x69, 0x5f, 0x18, 0x18, 0x8f, 0xd4, 0x30, 0x91, 0xeb, 0xc0, 0x78, 0x12, 0xb0, 0x2b, 0x72, 0xb9,
	0xee, 0x25, 0x2a, 0xaf, 0x6d, 0xfc, 0x1b, 0xf3, 0x7e, 0xed, 0x7b, 0xc8, 0x42, 0x96, 0x78, 0x9d,
	0x20, 0xda, 0x53, 0x66, 0x1d, 0x0c, 0xde, 0x25, 0xa8, 0x14, 0xc9, 0x81, 0x2f, 0xa2, 0x3c, 0xe8,
	0x1a, 0x22, 0xb9, 0x80, 0xd8, 0x4d, 0x98, 0x64, 0x0a, 0xbe, 0xe0, 0x54, 0x3f, 0x5b, 0xc7, 0x85,
	0x5f, 0x53, 0x45, 0x02, 0x22, 0xf7, 0x59, 0xf0, 0xcb, 0x82, 0xb9, 0x5f, 0x80, 0xb1, 0x3c, 0x89,
	0x78, 0x2f, 0x91, 0x7f, 0x62, 0xc6, 0x95, 0x20, 0x77, 0x7b, 0x5e, 0x52, 0x49, 0x68, 0xd2, 0x0e,
	0xf2, 0x3b, 0x5e, 0xc2, 0x67, 0xc9, 0x35, 0x98, 0x64, 0x2c, 0xd6, 0x59, 0x26, 0xa8, 0xb8, 0xf5,
	0x8f, 0xcf, 0x14, 0x86, 0x32, 0xd4, 0x36, 0xfe, 0xa2, 0xd6, 0x2e, 0x00, 0xd0, 0x58, 0x99, 0xfb,
	0x01, 0x42, 0x70, 0x3f, 0xf8, 0x55, 0x18, 0x3b, 0xf4, 0x7b, 0xa3, 0xb4, 0x37, 0x1d, 0xfa, 0x19,
	0x1d, 0xd9, 0xb2, 0xfd, 0x4d, 0x0b, 0xc6, 0xe2, 0x5c, 0x59, 0x7e, 0xa5, 0x23, 0xe3, 0x60, 0xe8,
	0xf7, 0x70, 0x64, 0xf3, 0xad, 0x7f, 0x3e, 0x5e, 0x78, 0x0c, 0x57, 0xc7, 0x30, 0xb3, 0x7f, 0xdb,
	0x02, 0x9b, 0x45, 0xdc, 0x9e, 0x5c, 0x36, 0xc6, 0x2d, 0xc7, 0x88, 0x5e, 0xba, 0xaa, 0x3c, 0x90,
	0x0d, 0xce, 0x36, 0x35, 0x8f, 0xf7, 0x04, 0xc5, 0x53, 0xa0, 0x30, 0x79, 0x3a, 0x73, 0x8a, 0x3c,
	0xe1, 0x53, 0xe0, 0x0d, 0x83, 0x25, 0x39, 0x4e, 0x2c, 0xd6, 0x4d, 0x9e, 0xc6, 0x4e, 0x73, 0x9c,
	0x68, 0x1f, 0xa9, 0x8c, 0x13, 0x32, 0x55, 0x1a, 0xa7, 0xf1, 0xd3, 0x1c, 0x27, 0xd9, 0xbc, 0x31,
	0x4e, 0xad, 0xbb, 0xb0, 0x2c, 0x5b, 0xf1, 0xfb, 0x6e, 0x37, 0x14, 0x47, 0x6e, 0xa7, 0x9d, 0xd2,
	0x5e, 0x62, 0x6a, 0x7c, 0x56, 0x49, 0xe3, 0xb3, 0xcf, 0xc3, 0x74, 0x55, 0xc3, 0x2c, 0x00, 0xad,
	0x37, 0x61, 0xc3, 0xac, 0x70, 0xaf, 0x9b, 0xb8, 0x5d, 0x37, 0x15, 0xd9, 0xc3, 0xaa, 0x6d, 0xbd,
	0x0d, 0x17, 0x07, 0x09, 0xa3, 0x38, 0xfa, 0x50, 0xc4, 0xff, 0x3b, 0xbd, 0x60, 0x49, 0xea, 0x83,
	0x57, 0xdd, 0xf6, 0xa1, 0x14, 0xcc, 0xf2, 0x47, 0x28, 0x0e, 0x78, 0x75, 0x4c, 0x3b, 0x53, 0xb1,
	0xdf, 0xbf, 0x2d, 0x7f, 0xdb, 0xdf, 0xb0, 0x60, 0xd6, 0xec, 0x32, 0x4f, 0xd5, 0x5f, 0x7a, 0xc4,
	0xea, 0xd4, 0xc0, 0xa8, 0x3a, 0x10, 0xfb, 0xfd, 0x9b, 0xa1, 0x38, 0xda, 0x6a, 0xa7, 0x38, 0x43,
	0x07, 0x87, 0x69, 0x14, 0xd7, 0x06, 0xc3, 0xbf, 0x87, 0x33, 0xc7, 0x0c, 0xbd, 0xdb, 0x4d, 0x6e,
	0x3a, 0x22, 0xb3, 0x7f, 0x6c, 0xc1, 0x6a, 0xfd, 0x27, 0xe0, 0x69, 0xfa, 0xfe, 0x68, 0x19, 0x33,
	0xbf, 0xb7, 0xb3, 0x68, 0x30, 0xf7, 0x5e, 0x1c, 0x39, 0x22, 0x6b, 0xfd, 0x8b, 0x29, 0x58, 0xd6,
	0x7a, 0xd0, 0x66, 0x88, 0x62, 0x14, 0xe7, 0xc6, 0x4b, 0xb0, 0x14, 0x44, 0x9d, 0xb8, 0x27, 0x75,
	0x8e, 0x4e, 0x1c, 0xe5, 0x69, 0x1c, 0x86, 0x1c, 0x81, 0x69, 0xda, 0xb1, 0x55, 0xd1, 0x96, 0x2e,
	0xc1, 0xc0, 0x7b, 0x83, 0x04, 0x46, 0x14, 0xdb, 0x69, 0x67, 0x6d, 0x90, 0x8c, 0x9e, 0xec, 0xdf,
	0x00, 0x5d, 0x44, 0x2f, 0xcf, 0x45, 0x83, 0xb4, 0x99, 0xaf, 0xa8, 0xe2, 0xdd, 0x7e, 0xdb, 0x68,
	0xf3, 0x2a, 0x5c, 0x18, 0x42, 0x57, 0xb2, 0x11, 0xd8, 0xa8, 0xa5, 0xa6, 0xa6, 0x5f, 0x82, 0xa5,
	0xb8, 0x9f, 0xef, 0xc5, 0x95, 0x7e, 0x92, 0x0a, 0x60, 0xab, 0xa2, 0x72, 0x3f, 0x6b, 0x08, 0xb8,
	0x3d, 0x7a, 0xf6, 0x5c, 0x1b, 0x24, 0xd3, 0xfd, 0xd4, 0xb4, 0x95, 0x7e, 0x92, 0xea, 0xb4, 0xa2,
	0x8a, 0x07, 0xfa, 0x39, 0x84, 0x8e, 0xdb, 0xa5, 0x67, 0xd1, 0x8d, 0x5a, 0x6a, 0x6a, 0xfa, 0xc0,
	0x0c, 0xf1, 0x36, 0x3d, 0x92, 0x40, 0x46, 0x5a, 0x58, 0x98, 0xc1, 0xe3, 0xbe, 0x02, 0x13, 0xb4,
	0xd3, 0x72, 0xdc, 0x05, 0x71, 0x1a, 0x62, 0x39, 0x73, 0xb8, 0x51, 0x79, 0x88, 0xef, 0xa4, 0x31,
	0x85, 0x68, 0x8c, 0x44, 0x07, 0xb3, 0xd9, 0xcd, 0x70, 0x5e, 0x58, 0x09, 0xdf, 0x22, 0x30, 0x07,
	0x39, 0xd3, 0x68, 0xc2, 0x67, 0x03, 0xd5, 0x99, 0x40, 0xa1, 0x94, 0x8c, 0x3d, 0x1a, 0x25, 0x63,
	0x8f, 0x77, 0xe0, 0x7c, 0xdd, 0x94, 0x08, 0xba, 0xfb, 0x5e, 0xe4, 0x87, 0x14, 0x25, 0xd1, 0xf8,
	0x3a, 0xc5, 0xa7, 0xd9, 0x66, 0x0c, 0xfb, 0x5d, 0xb8, 0x3c, 0xec, 0x03, 0xeb, 0x5a, 0xe6, 0xb1,
	0x96, 0x0b, 0xb5, 0xdf, 0x58, 0x57, 0xf4, 0x0e, 0x9c, 0xaf, 0x5b, 0x85, 0xba, 0x92, 0x85, 0xf2,
	0x82, 0xa8, 0x67, 0x65, 0xd8, 0x9a, 0xd2, 0xb5, 0x2c, 0x12, 0x2b, 0xb5, 0xcb, 0x4a, 0x57, 0x24,
	0xb5, 0xf5, 0x24, 0xf0, 0x39, 0x77, 0x15, 0xfe, 0xdd, 0xfa, 0xd3, 0x31, 0x58, 0xcc, 0x85, 0x9b,
	0x1c, 0xe4, 0x14, 0x87, 0x20, 0x6e, 0xbf, 0xef, 0xa2, 0x5e, 0x9f, 0xb5, 0x03, 0xa5, 0xef, 0xe3,
	0xdf, 0x12, 0x96, 0xb4, 0x39, 0xd1, 0xc6, 0x94, 0x83, 0x7f, 0x63, 0xac, 0x6f, 0x09, 0xa3, 0x97,
	0x09, 0xfc, 0x5b, 0xc2, 0x62, 0x09, 0xa3, 0x17, 0x07, 0xfc, 0x1b, 0x83, 0x8a, 0xd2, 0x9b, 0x03,
	0xa9, 0xc6, 0xb4, 0x98, 0x67, 0x18, 0xa6, 0x9c, 0xdf, 0x82, 0xcc, 0x3d, 0xcc, 0xd1, 0x3f, 0x11,
	0x2d, 0xf0, 0xe8, 0xa0, 0x33, 0x1b, 0x64, 0x5f, 0xc8, 0xd3, 0x1d, 0x82, 0xc9, 0xb3, 0x90, 0x44,
	0x29, 0xe7, 0x0d, 0x85, 0xc3, 0x3c, 0x55, 0xee, 0xd8, 0x34, 0x69, 0xf6, 0x63, 0x55, 0xc9, 0x94,
	0x9a, 0x34, 0xb7, 0x14, 0x48, 0x6a, 0xe9, 0xfb, 0xb1, 0xae, 0x82, 0xac, 0x7b, 0xa6, 0xf7, 0x63,
	0x55, 0xc3, 0x0b, 0xb0, 0x14, 0x64, 0xae, 0x8a, 0x7c, 0xa1, 0xb9, 0x01, 0x6d, 0x1c, 0x49, 0x31,
	0x30, 0x14, 0x47, 0x66, 0x94, 0x8c, 0x99, 0x61, 0x51, 0x32, 0x66, 0xcd, 0x28, 0x19, 0xc3, 0xe3,
	0x3e, 0x34, 0x86, 0xc6, 0x7d, 0x68, 0xfd, 0x91, 0x55, 0xde, 0x16, 0xbc, 0x84, 0x55, 0x86, 0x6f,
	0x5b, 0xa5, 0x58, 0x1a, 0x18, 0xcf, 0x8d, 0x74, 0xe5, 0x2f, 0x3d, 0x62, 0x69, 0x52, 0x9e, 0x23,
	0x66, 0xa8, 0x8e, 0xed, 0xa8, 0x1b, 0xb7, 0xfe, 0x5f, 0x83, 0x43, 0xb9, 0x69, 0x49, 0x2e, 0x91,
	0xc3, 0x94, 0x0e, 0x1d, 0xd6, 0xa3, 0xd7, 0x40, 0xea, 0xf6, 0x49, 0x3c, 0x62, 0xc8, 0x36, 0xbd,
	0x24, 0x1b, 0x85, 0xd6, 0x53, 0xf7, 0x11, 0x1c, 0xd9, 0x58, 0xeb, 0x17, 0x8a, 0x93, 0xa1, 0x99,
	0x17, 0x14, 0xc7, 0x40, 0xe7, 0xb4, 0xa4, 0xed, 0x9a, 0x73, 0x5a, 0x3e, 0x0b, 0x8b, 0xf8, 0x47,
	0xc9, 0x28, 0x8d, 0x53, 0x5f, 0x63, 0x41, 0x61, 0x95, 0xd6, 0xfa, 0x2f, 0xac, 0xc2, 0xf4, 0x55,
	0x56, 0xaf, 0x6d, 0xba, 0xf6, 0x83, 0x2c, 0x8f, 0xd3, 0x63, 0x39, 0xdb, 0x4a, 0xf1, 0x06, 0xcf,
	0x86, 0xca, 0x3f, 0xa4, 0x64, 0xfe, 0xa5, 0x8e, 0xbb, 0xbe, 0x61, 0xee, 0x25, 0xcf, 0xec, 0x1a,
	0x29, 0x15, 0x5e, 0xc6, 0xde, 0x41, 0xd3, 0xce, 0x9c, 0x02, 0x3b, 0x08, 0xc5, 0x9c, 0xb3, 0x0a,
	0xd1, 0x0f, 0xbc, 0xbd, 0x28, 0xce, 0x72, 0xf4, 0xde, 0x67, 0xff, 0x96, 0x86, 0xb3, 0xaa, 0xca,
	0xaf, 0xeb, 0xe2, 0xad, 0xd8, 0x17, 0xad, 0xdf, 0x1c, 0x2f, 0x1c, 0xa4, 0xe4, 0x40, 0x62, 0x27,
	0x54, 0x36, 0xec, 0xf2, 0xf5, 0x10, 0x67, 0xc3, 0x36, 0xaf, 0x87, 0xec, 0x5f, 0xb7, 0x60, 0xd6,
	0x1c, 0xd1, 0x51, 0x9e, 0xbd, 0xaa, 0x5f, 0xcf, 0x99, 0xe1, 0x5f, 0x18, 0xad, 0xf0, 0x77, 0x2c,
	0x58, 0xa8, 0x0e, 0x3e, 0xeb, 0xb4, 0xfb, 0xa3, 0xe2, 0xa6, 0xda, 0x9e, 0xa3, 0x3f, 0xd7, 0x2d,
	0xfe, 0xfa, 0x97, 0x60, 0x26, 0xcc, 0x12, 0x9d, 0x17, 0x9a, 0xd4, 0x2c, 0x20, 0x90, 0x4a, 0x0d,
	0x1d, 0x64, 0x6e, 0x2a, 0xfc, 0x7e, 0xe4, 0x7b, 0x51, 0xce, 0x2f, 0xbc, 0x33, 0x41, 0xe6, 0x28,
	0x90, 0x14, 0x4c, 0xd5, 0xa4, 0x18, 0x7c, 0x80, 0x9b, 0xa0, 0x77, 0x9b, 0x72, 0xaa, 0x0a, 0x3a,
	0xf1, 0xd5, 0x11, 0x65, 0xb9, 0x17, 0xaa, 0xe4, 0xa9, 0x15, 0xa2, 0x5d, 0x59, 0xd4, 0xfa, 0x0d,
	0x63, 0x32, 0xe4, 0x5e, 0x10, 0x16, 0x93, 0x61, 0xe0, 0x3b, 0x5b, 0x1f, 0xd7, 0x77, 0x7e, 0x03,
	0xd6, 0x54, 0xae, 0x84, 0xea, 0x4c, 0xa7, 0x25, 0xb4, 0xc2, 0xc5, 0xe5, 0x89, 0x6e, 0x5f, 0x81,
	0xb9, 0x22, 0xff, 0x9a, 0xb1, 0x94, 0x1a, 0x5d, 0x95, 0x72, 0x0d, 0x57, 0xd2, 0x4b, 0xb0, 0x14,
	0xc6, 0x1d, 0x8c, 0xb4, 0x96, 0x75, 0xd2, 0xa0, 0xc7, 0xe6, 0x74, 0xb4, 0x88, 0x6c, 0x2c, 0xba,
	0x6e, 0x96, 0xd8, 0xaf, 0xc0, 0x72, 0x2a, 0x7a, 0x71, 0x2e, 0x2a, 0x14, 0x9c, 0x37, 0x95, 0xca,
	0xca, 0x24, 0xd5, 0x74, 0xe0, 0x13, 0x1f, 0x3e, 0x1d, 0xf8, 0xe4, 0x87, 0x4c, 0x07, 0x3e, 0xf5,
	0x21, 0xd3, 0x81, 0x4f, 0x0f, 0x49, 0x07, 0xde, 0x8a, 0xa1, 0xc9, 0xd2, 0x14, 0xdf, 0x2a, 0x39,
	0x1a, 0x74, 0x61, 0xe5, 0x67, 0x02, 0x8d, 0x6b, 0xb5, 0x79, 0x59, 0xc0, 0xe1, 0xa1, 0x55, 0x48,
	0x29, 0x95, 0xac, 0x52, 0xf8, 0x58, 0x17, 0x5a, 0x6a, 0x37, 0x9c, 0xb9, 0x02, 0xbc, 0x9b, 0x86,
	0x7b, 0xad, 0xff, 0xe6, 0x4c, 0x91, 0xc2, 0x04, 0x85, 0xb8, 0x91, 0xde, 0x9d, 0xc3, 0xe0, 0xbd,
	0x0c, 0xcb, 0xd5, 0x12, 0xe3, 0x49, 0xca, 0xce, 0x36, 0xc3, 0xab, 0x95, 0x84, 0xf5, 0x6f, 0x42,
	0x73, 0x80, 0x22, 0x10, 0x6e, 0x1a, 0x87, 0xea, 0xa8, 0xb5, 0x52, 0xa1, 0x0a, 0x84, 0x13, 0x87,
	0xe8, 0xb1, 0x56, 0x25, 0xd4, 0x36, 0x08, 0x0b, 0x65, 0x92, 0x6d, 0xdf, 0x7e, 0x0d, 0x56, 0xab,
	0xd8, 0xa5, 0x60, 0xaf, 0xcb, 0x65, 0x0a, 0x36, 0x05, 0x7d, 0x96, 0xec, 0x52, 0xd9, 0x68, 0xc8,
	0xb0, 0x19, 0x95, 0xdb, 0xcc, 0x66, 0x48, 0x66, 0x43, 0x8c, 0xfb, 0x24, 0x19, 0x85, 0xea, 0xa7,
	0x5b, 0x74, 0x89, 0x1b, 0xc3, 0x58, 0x76, 0x9b, 0xa1, 0x7a, 0xb4, 0xdd, 0xf6, 0x5b, 0xdf, 0x38,
	0x5b, 0x44, 0xdc, 0x93, 0x04, 0x86, 0x0a, 0xc2, 0x83, 0xf8, 0x38, 0x19, 0x7e, 0xea, 0xf4, 0xe2,
	0xac, 0x4c, 0xce, 0x66, 0x9b, 0xa1, 0xce, 0x25, 0x8e, 0x91, 0xf3, 0x0c, 0xea, 0x48, 0x45, 0x1a,
	0x94, 0xa4, 0x3b, 0x1a, 0x68, 0x3f, 0x03, 0x72, 0x2c, 0xdc, 0x28, 0xce, 0x83, 0x6e, 0xd0, 0xf1,
	0x8c, 0xa8, 0xaa, 0x92, 0xdb, 0xf7, 0x0c, 0xb0, 0x9c, 0x07, 0xa8, 0x0e, 0x24, 0x9c, 0x4c, 0xcc,
	0x0b, 0x59, 0x13, 0x95, 0x0d, 0xdd, 0x2d, 0xa0, 0xf6, 0x06, 0x4c, 0x89, 0x68, 0xdf, 0x8b, 0x3a,
	0x3a, 0x84, 0x90, 0xfe, 0x2d, 0x55, 0x44, 0x5f, 0xf8, 0xaf, 0xb8, 0x49, 0xd8, 0xcf, 0x5e, 0x61,
	0x45, 0x74, 0x5a, 0x42, 0x76, 0x24, 0x40, 0xea, 0x7c, 0x58, 0x9c, 0xc7, 0xaf, 0xf0, 0x42, 0x99,
	0x94, 0xbf, 0xef, 0xc5, 0xaf, 0xe0, 0x0b, 0x05, 0xda, 0x9f, 0xb2, 0xe6, 0xc9, 0xbf, 0x64, 0x0f,
	0xf0, 0xa1, 0xa0, 0x1f, 0x15, 0xf6, 0x3c, 0xb4, 0x26, 0xe6, 0x25, 0xfc, 0x7e, 0x01, 0x46, 0x8f,
	0xce, 0xa3, 0x3c, 0xf5, 0xdc, 0x3c, 0xf5, 0xba, 0x5d, 0x0e, 0xa9, 0x33, 0xe5, 0xcc, 0x22, 0xf0,
	0x1e, 0xc1, 0x30, 0xad, 0x76, 0x74, 0xcc, 0x5e, 0x7d, 0xf2, 0x4f, 0xfb, 0x3c, 0x4c, 0x53, 0x70,
	0x43, 0x95, 0x2f, 0x62, 0xca, 0x29, 0x00, 0xf2, 0xbb, 0xea, 0x1f, 0x6e, 0x14, 0xbb, 0x22, 0x67,
	0x7f, 0xbe, 0x86, 0x06, 0xbf, 0x17, 0xdf, 0xc8, 0xed, 0x4d, 0x58, 0x8d, 0x23, 0x7c, 0xa2, 0x88,
	0x4a, 0x59, 0x5d, 0x55, 0x42, 0x78, 0x3b, 0x8e, 0xc4, 0xbd, 0xf8, 0x3d, 0x23, 0xa5, 0x6b, 0x6e,
	0x3f, 0x05, 0x0b, 0x92, 0x46, 0x0e, 0x96, 0x2b, 0xff, 0xe8, 0x47, 0x01, 0x3b, 0xf9, 0x35, 0xe2,
	0x48, 0xc8, 0x21, 0xbb, 0x1b, 0x89, 0xfb, 0x51, 0x60, 0x5f, 0x81, 0xf9, 0x12, 0x62, 0x3b, 0xe0,
	0x10, 0x30, 0xb3, 0x05, 0xde, 0xb5, 0x40, 0x7e, 0x42, 0xa9, 0xc9, 0x98, 0x43, 0x45, 0xce, 0x77,
	0x73, 0x61, 0x96, 0x18, 0x23, 0xd5, 0xfa, 0x37, 0xc6, 0x36, 0x82, 0x06, 0xc4, 0xa1, 0x38, 0x22,
	0xc9, 0xf1, 0x18, 0xcc, 0xa2, 0xb7, 0x06, 0x99, 0xe8, 0x67, 0x2a, 0xdc, 0x23, 0xc2, 0xd0, 0x4a,
	0x3f, 0x93, 0x1f, 0x31, 0x88, 0x4a, 0x79, 0x0b, 0x27, 0x83, 0x88, 0xf6, 0xb4, 0x4b, 0x30, 0x83,
	0xe9, 0x3a, 0xa5, 0x02, 0xa2, 0xed, 0xae, 0xa0, 0xdd, 0xf5, 0xb7, 0x08, 0x22, 0x75, 0x2d, 0x89,
	0xd0, 0x4f, 0x78, 0x6e, 0x9d, 0x6d, 0x77, 0xfd, 0xfb, 0x89, 0xa4, 0x8b, 0xbd, 0x9e, 0xa6, 0xa3,
	0x59, 0x05, 0xb1, 0xd7, 0x53, 0x74, 0x19, 0x4c, 0x21, 0x8f, 0x5d, 0xd1, 0x61, 0x77, 0xff, 0x47,
	0x7d, 0xe4, 0xd7, 0x06, 0xe8, 0xce, 0xa4, 0x6c, 0xe9, 0xa6, 0xe8, 0xd8, 0x97, 0x61, 0x56, 0x32,
	0x8b, 0x51, 0xdb, 0xf6, 0xe3, 0x84, 0x2f, 0x36, 0x64, 0x77, 0xde, 0x13, 0x47, 0xf9, 0xad, 0x38,
	0xb1, 0x2f, 0x52, 0x7f, 0xf3, 0x7e, 0x24, 0x4f, 0x94, 0x7c, 0x77, 0x31, 0x2d, 0x35, 0x87, 0x7e,
	0xb4, 0xdd, 0xdd, 0x57, 0xe5, 0x71, 0x3f, 0xc7, 0xf2, 0x69, 0x5d, 0x7e, 0xb7, 0x9f, 0xcb, 0xf2,
	0x16, 0x34, 0x68, 0x03, 0x57, 0x61, 0xe1, 0x38, 0xcf, 0x75, 0xbb, 0xeb, 0x6f, 0x47, 0x14, 0x18,
	0x4e, 0x9e, 0xfb, 0x31, 0xd3, 0xbd, 0x79, 0x2f, 0xcc, 0xe7, 0xfe, 0x76, 0xd7, 0x37, 0x2f, 0xb6,
	0x9f, 0x85, 0x45, 0xdc, 0x1a, 0xdc, 0xd0, 0x0f, 0xd0, 0x3d, 0x55, 0xa5, 0xd9, 0x9b, 0x72, 0xe6,
	0xb1, 0xe0, 0xb6, 0x1f, 0xdc, 0x26, 0x30, 0x46, 0xff, 0x56, 0xb8, 0x3c, 0xa1, 0xa7, 0x14, 0x8e,
	0x51, 0xf8, 0x20, 0xe5, 0xe9, 0xcb, 0x85, 0x0f, 0xd2, 0xa2, 0xd0, 0x0b, 0x32, 0x9e, 0xad, 0x54,
	0x78, 0x35, 0xc0, 0x40, 0x2d, 0x54, 0x88, 0xfa, 0x28, 0xe5, 0x90, 0x26, 0x74, 0xd4, 0xc5, 0x7f,
	0xef, 0x0c, 0x86, 0x39, 0xa7, 0x4d, 0x8b, 0x54, 0x9e, 0xfd, 0x98, 0x02, 0x26, 0x06, 0x7e, 0xc9,
	0xb2, 0x2b, 0x0b, 0x7c, 0x65, 0xba, 0xb0, 0xef, 0x65, 0x6e, 0x60, 0xa6, 0xa9, 0x22, 0x49, 0x37,
	0xb7, 0xef, 0x65, 0xdb, 0x45, 0x9e, 0x2a, 0x8a, 0xed, 0x2f, 0xf5, 0x02, 0x7c, 0x6a, 0xe6, 0xc0,
	0xed, 0x08, 0x91, 0x38, 0xe4, 0xc9, 0x8d, 0x5a, 0x00, 0x96, 0xb3, 0x9e, 0x47, 0x20, 0x44, 0x78,
	0x02, 0x64, 0x8d, 0x6e, 0x71, 0xf5, 0xc2, 0xd3, 0x70, 0x76, 0xdf, 0xcb, 0xee, 0x24, 0x61, 0xa6,
	0xbf, 0x46, 0x81, 0xe1, 0x1e, 0x78, 0x61, 0x5f, 0x45, 0x4a, 0x44, 0x4b, 0x7b, 0x36, 0xaf, 0x0c,
	0xfb, 0x42, 0xb9, 0xf0, 0xca, 0x95, 0x13, 0x27, 0xc7, 0x5c, 0xe5, 0xa4, 0x76, 0xe1, 0xbd, 0x41,
	0x70, 0xba, 0x6a, 0xff, 0x87, 0x67, 0xe0, 0x31, 0x9e, 0x8f, 0xbd, 0xc0, 0x4f, 0x62, 0x9c, 0x10,
	0x59, 0xe2, 0x1e, 0xa6, 0x1e, 0x3d, 0xe0, 0xa2, 0x4d, 0xcf, 0xdb, 0xb0, 0xa1, 0x81, 0x03, 0x89,
	0xa3, 0x79, 0xa5, 0xae, 0x85, 0x59, 0xf2, 0x85, 0xd4, 0x4b, 0xaa, 0xa9, 0xa3, 0xed, 0x4f, 0xc2,
	0x7a, 0x1d, 0xb1, 0xb9, 0x8c, 0x57, 0x07, 0x68, 0xa9, 0xcf, 0x9f, 0x80, 0xa6, 0xd2, 0x52, 0x79,
	0x16, 0x16, 0x09, 0x6d, 0x38, 0xc7, 0x18, 0x97, 0xd3, 0x6c, 0x2c, 0x32, 0xcd, 0x3c, 0x0b, 0x8b,
	0x86, 0xfb, 0xbc, 0xf1, 0xa8, 0xd1, 0x70, 0xe6, 0x0b, 0x27, 0x7a, 0x6a, 0x65, 0x08, 0x83, 0x74,
	0xfa, 0xa3, 0x7b, 0x8f, 0x41, 0x06, 0xf1, 0x46, 0xb0, 0xb5, 0x55, 0x64, 0x28, 0x93, 0x53, 0xab,
	0x08, 0xc1, 0x8b, 0x22, 0xed, 0x0a, 0xcc, 0x15, 0x10, 0x33, 0x2b, 0xac, 0x86, 0xe2, 0x45, 0x41,
	0xbf, 0x38, 0x85, 0xe3, 0xc4, 0xa4, 0xf8, 0x6a, 0x18, 0xb6, 0x3f, 0x17, 0x2a, 0x48, 0x1b, 0x99,
	0x0e, 0x4c, 0xe5, 0x82, 0x23, 0xb3, 0x5d, 0x00, 0x08, 0xf6, 0x12, 0x55, 0x4a, 0xe6, 0x03, 0xd3,
	0xc1, 0x5e, 0xc2, 0xc5, 0x8f, 0xc1, 0x2c, 0xa5, 0x85, 0x63, 0x04, 0xb2, 0x22, 0xa0, 0x54, 0x71,
	0x84, 0xd2, 0xfa, 0x77, 0x6f, 0xf2, 0x8c, 0xd2, 0x7e, 0xb7, 0x9b, 0xa1, 0xfd, 0x01, 0x4c, 0xb2,
	0x3c, 0x1a, 0x51, 0xa4, 0xf6, 0x42, 0xda, 0x4d, 0x90, 0xb7, 0x08, 0xbe, 0x39, 0x0c, 0x3a, 0x9b,
	0x8d, 0xf2, 0xb4, 0x38, 0xe0, 0x27, 0xb7, 0x50, 0x75, 0x66, 0xb3, 0x7f, 0xcb, 0x82, 0x55, 0xd3,
	0x5d, 0x05, 0x35, 0x01, 0xf2, 0x59, 0x21, 0x07, 0xbe, 0xbf, 0xf2, 0xc8, 0x19, 0xd3, 0xae, 0x32,
	0xce, 0x52, 0xe1, 0x0f, 0x73, 0x3b, 0x88, 0xd8, 0x27, 0x06, 0x23, 0x51, 0x79, 0x61, 0x87, 0xfc,
	0xba, 0xc6, 0x55, 0x24, 0x2a, 0x2f, 0xec, 0xa0, 0x57, 0x17, 0x59, 0x99, 0x8b, 0xa3, 0xc4, 0x43,
	0x25, 0x50, 0x70, 0xd0, 0x1c, 0xb4, 0x32, 0xbf, 0xc1, 0xd0, 0x1b, 0x69, 0x6c, 0xbf, 0xc2, 0x0e,
	0x7a, 0xa9, 0x10, 0xf2, 0xf0, 0x40, 0xee, 0xb3, 0x3d, 0x1d, 0x46, 0x01, 0xdf, 0x71, 0x1d, 0x2c,
	0x43, 0xd7, 0xd9, 0x3b, 0x81, 0x6f, 0x6f, 0x43, 0xab, 0xde, 0xeb, 0x56, 0xfb, 0xae, 0xf6, 0xb4,
	0x23, 0xd2, 0x85, 0x41, 0xef, 0x5b, 0x87, 0xb1, 0x64, 0x55, 0x2e, 0xbc, 0xf8, 0x30, 0xff, 0x59,
	0xdc, 0xea, 0xdd, 0x4c, 0x44, 0x54, 0x2d, 0x9d, 0x56, 0x9e, 0x3a, 0xc1, 0x93, 0x16, 0x09, 0x76,
	0x45, 0xf4, 0xf0, 0x06, 0xc8, 0x25, 0xb5, 0xd2, 0xc0, 0xf4, 0x49, 0x0d, 0xa0, 0x93, 0x6a, 0xa9,
	0x81, 0x97, 0x60, 0xd9, 0x1c, 0x64, 0x1d, 0x0a, 0x82, 0x3c, 0xa0, 0x16, 0x45, 0x31, 0xd4, 0x1c,
	0x0b, 0xe2, 0x6d, 0xd8, 0x28, 0x13, 0xa8, 0xf0, 0x9e, 0xed, 0x20, 0xcf, 0x78, 0x3f, 0x5d, 0x33,
	0xc9, 0xb8, 0xfc, 0x5a, 0x90, 0x67, 0xc3, 0x89, 0x7b, 0x5e, 0xf6, 0x40, 0x25, 0xb2, 0xad, 0x21,
	0xbe, 0xe3, 0x65, 0x0f, 0xe4, 0x09, 0xa7, 0x44, 0xcc, 0x71, 0x1b, 0x8d, 0x7b, 0xcb, 0x15, 0x83,
	0x94, 0xa4, 0xc2, 0x3d, 0xce, 0xc1, 0x51, 0x43, 0x88, 0xfb, 0x71, 0xa3, 0xd4, 0x45, 0x16, 0x36,
	0x2f, 0xc2, 0x92, 0xd7, 0x4e, 0x29, 0xb4, 0x53, 0x71, 0x74, 0xe3, 0xcb, 0xf6, 0x45, 0xaf, 0x9d,
	0x5e, 0xed, 0xe7, 0xf1, 0x75, 0x5d, 0xc0, 0x17, 0xc7, 0xdd, 0x34, 0xd5, 0xe9, 0x08, 0x17, 0xd4,
	0xc5, 0xf1, 0xcd, 0x34, 0x55, 0x99, 0x0b, 0x29, 0x3a, 0x9d, 0x69, 0x1f, 0xaf, 0xb5, 0xca, 0xf9,
	0x92, 0x51, 0x3c, 0x45, 0x38, 0xab, 0xb3, 0xc0, 0xe7, 0x0c, 0x45, 0xf6, 0xa0, 0xfd, 0xbd, 0x76,
	0x2e, 0x4d, 0xd3, 0x58, 0x73, 0x41, 0xc9, 0x89, 0xd0, 0xb9, 0xd4, 0x49, 0x63, 0xc5, 0xc7, 0x31,
	0x4c, 0x4a, 0x35, 0x4a, 0xae, 0x28, 0x8a, 0x7c, 0xf0, 0x4b, 0xa3, 0xf3, 0x2c, 0x62, 0xbb, 0xdf,
	0x89, 0xb8, 0x9f, 0xcb, 0xc5, 0x7a, 0x08, 0x13, 0x41, 0x84, 0x2d, 0xaf, 0x9c, 0x52, 0xcb, 0x67,
	0x83, 0x48, 0x36, 0xfc, 0x80, 0xfa, 0x7c, 0x94, 0xc6, 0x18, 0x24, 0x61, 0x34, 0x71, 0xe0, 0x65,
	0x2f, 0xbf, 0x98, 0xc6, 0x76, 0x80, 0xbd, 0x94, 0x6d, 0xad, 0x8d, 0xac, 0xad, 0xb3, 0x41, 0x24,
	0x9b, 0xfa, 0x15, 0x36, 0xb9, 0x4b, 0xd3, 0xb8, 0xd9, 0x1c, 0xe5, 0x90, 0x16, 0xde, 0x03, 0x64,
	0xd4, 0xe7, 0x50, 0xe3, 0x68, 0x68, 0x21, 0x1b, 0x5f, 0x3f, 0xad, 0xc6, 0x65, 0x8b, 0xb2, 0xf1,
	0xbf, 0x6a, 0x71, 0x08, 0x1b, 0x2d, 0x42, 0xbc, 0x34, 0xf5, 0x8e, 0x31, 0x17, 0xd4, 0xa3, 0x8e,
	0xa2, 0x5d, 0xb6, 0x4f, 0x77, 0xd0, 0x0c, 0x47, 0x49, 0xa6, 0xab, 0xb2, 0x55, 0x3b, 0x87, 0xb3,
	0x64, 0xd0, 0x7c, 0xee, 0xd1, 0xe7, 0x91, 0x18, 0xb4, 0x49, 0x77, 0xa8, 0x31, 0x8c, 0x57, 0x53,
	0x32, 0xbd, 0xc6, 0xc8, 0x8b, 0x8f, 0x3e, 0x7f, 0xc4, 0xa0, 0x8d, 0xb7, 0x33, 0xcb, 0x3f, 0xef,
	0x21, 0x23, 0x39, 0x9c, 0x25, 0x1b, 0xe3, 0x0b, 0xa7, 0xd3, 0xfd, 0xee, 0x40, 0xf7, 0xa9, 0xf9,
	0x8b, 0xa3, 0xef, 0x7e, 0xb7, 0xd4, 0xfd, 0x9b, 0xc8, 0xc8, 0x2a, 0x4c, 0x1c, 0x8a, 0x60, 0x6f,
	0x3f, 0xc7, 0xa8, 0x92, 0xe3, 0x0e, 0xff, 0x92, 0xfa, 0xb2, 0x52, 0xda, 0xb9, 0xfc, 0x32, 0x19,
	0xa7, 0x32, 0xf4, 0x0b, 0x84, 0x56, 0x3c, 0x21, 0x3f, 0x56, 0x7a, 0x42, 0x7e, 0x06, 0x16, 0x06,
	0x4e, 0x09, 0x2d, 0xce, 0x69, 0x5e, 0x39, 0x1e, 0xbc, 0x06, 0xab, 0x55, 0x54, 0xd6, 0xf7, 0x1f,
	0xa7, 0x5b, 0xb9, 0x0a, 0x01, 0xbd, 0xff, 0xd7, 0x51, 0xb5, 0xd3, 0x40, 0x74, 0x9b, 0x4f, 0xd4,
	0x52, 0x5d, 0x93, 0x65, 0xe4, 0xda, 0x54, 0xe5, 0xeb, 0x8a, 0x72, 0x6d, 0xaa, 0x30, 0x86, 0x56,
	0x1c, 0xf5, 0x9c, 0x3d, 0xa9, 0xac, 0x38, 0xea, 0x58, 0xab, 0xa5, 0x23, 0xde, 0x9e, 0xaa, 0xa7,
	0x23, 0xe6, 0xf8, 0xf2, 0x90, 0xce, 0xaf, 0x74, 0x4a, 0x7a, 0x9a, 0x13, 0x61, 0x6c, 0x86, 0xb7,
	0x25, 0x94, 0xce, 0x48, 0xec, 0x13, 0x2e, 0x37, 0x05, 0xc2, 0x7a, 0x46, 0x3b, 0xd3, 0xdf, 0xed,
	0xf3, 0x7d, 0xc1, 0xf3, 0x60, 0xc7, 0xfd, 0xbc, 0x1d, 0xf7, 0x23, 0x1f, 0x37, 0x77, 0x62, 0xfb,
	0x59, 0xea, 0xa9, 0x2a, 0xb9, 0x99, 0xa6, 0x3a, 0xc4, 0x84, 0x44, 0x92, 0x35, 0x2a, 0x37, 0x7a,
	0x3d, 0x3a, 0xcf, 0x11, 0xcb, 0xdd, 0x34, 0xbd, 0xdb, 0xcf, 0xd9, 0x8b, 0x5e, 0x0f, 0x91, 0x0d,
	0xe3, 0x78, 0x49, 0xfb, 0x3c, 0x59, 0xb0, 0xca, 0xbf, 0xe5, 0x18, 0x1b, 0x61, 0x8a, 0xd8, 0xe0,
	0xf8, 0x05, 0x6a, 0xb9, 0x28, 0xd8, 0x25, 0xd3, 0xe3, 0x27, 0x61, 0x9e, 0xfa, 0x5b, 0xd8, 0xd3,
	0xbf, 0x48, 0xe7, 0x32, 0x04, 0x6b, 0x3f, 0xea, 0xe7, 0xc1, 0xee, 0x27, 0x59, 0x9e, 0x0a, 0xaf,
	0x67, 0xa0, 0xbe, 0x44, 0xb5, 0xaa, 0x12, 0x8d, 0xfd, 0x32, 0x2c, 0xfb, 0xf1, 0x61, 0x34, 0x80,
	0xff, 0x32, 0x07, 0x2b, 0xd1, 0x65, 0x9a, 0xe2, 0x69, 0x58, 0x50, 0x37, 0x3c, 0xda, 0x1a, 0xf9,
	0x15, 0x7a, 0xc3, 0x8b, 0xe8, 0x9a, 0x47, 0x99, 0x21, 0xbf, 0x02, 0x2b, 0x88, 0x39, 0x80, 0xbe,
	0x49, 0x95, 0x4b, 0xf8, 0x7b, 0x65, 0x92, 0xdf, 0xb2, 0xa0, 0x59, 0x45, 0x57, 0x8b, 0xb2, 0xf9,
	0x2a, 0xae, 0xfb, 0xcf, 0x8f, 0xc4, 0x52, 0xdf, 0x75, 0x56, 0xca, 0xdc, 0xbf, 0x4b, 0x8d, 0x62,
	0x14, 0xda, 0x54, 0x1c, 0x04, 0x71, 0x3f, 0x2b, 0xf5, 0xe1, 0x35, 0x95, 0x39, 0x9a, 0xca, 0x8c,
	0x3e, 0xfc, 0xd0, 0x82, 0xf3, 0x75, 0x24, 0xba, 0x1f, 0xaf, 0x8f, 0xb4, 0x1f, 0xeb, 0x83, 0x2c,
	0xa9, 0xbe, 0x3c, 0x03, 0x0b, 0xda, 0xc0, 0x43, 0xf5, 0xe3, 0x0d, 0x12, 0x35, 0x0a, 0x6e, 0x84,
	0xa4, 0x69, 0x56, 0x71, 0x75, 0x07, 0xde, 0x1c, 0x69, 0x07, 0x56, 0x2b, 0xbc, 0x28, 0xee, 0xdf,
	0x80, 0x35, 0x8a, 0x08, 0x3b, 0xb8, 0xf2, 0x3e, 0x41, 0x2b, 0x8f, 0x8a, 0xab, 0x2b, 0xef, 0x09,
	0x98, 0x43, 0x75, 0x5c, 0x7e, 0x8a, 0x4e, 0xdc, 0x8f, 0xf2, 0xe6, 0x27, 0xe9, 0xdd, 0x57, 0x42,
	0x6f, 0xc5, 0xc9, 0x96, 0x84, 0xd9, 0xdf, 0xb5, 0x48, 0xa6, 0x18, 0x8e, 0x10, 0xcd, 0xb7, 0x46,
	0x96, 0xae, 0xae, 0xea, 0x6e, 0x81, 0x8f, 0x06, 0x5b, 0x05, 0xd0, 0xfe, 0x3d, 0xc9, 0x4e, 0xd9,
	0x5b, 0xa0, 0xf9, 0xf6, 0xa3, 0xf7, 0xa0, 0x7e, 0x98, 0x23, 0x84, 0x33, 0x57, 0x76, 0x4b, 0xc0,
	0x0b, 0x9c, 0x0c, 0x2f, 0x20, 0x3a, 0x5e, 0xd8, 0xfc, 0x14, 0xdd, 0xfe, 0x07, 0xd9, 0x5d, 0x02,
	0xd8, 0xbf, 0x61, 0xc1, 0xac, 0x69, 0x8d, 0xd5, 0xfc, 0xf4, 0x69, 0x9a, 0x7e, 0xcd, 0xec, 0xe9,
	0x3b, 0xc5, 0x0c, 0x0f, 0x40, 0x64, 0x1d, 0xd2, 0xfc, 0xcc, 0xe8, 0xac, 0x33, 0x4c, 0x03, 0x14,
	0x67, 0x22, 0xce, 0xa3, 0xdd, 0xcd, 0x50, 0xce, 0xa5, 0x45, 0x34, 0x3d, 0x90, 0xa7, 0x75, 0xf5,
	0xe2, 0xdc, 0xfc, 0xec, 0xe8, 0xa2, 0xb0, 0x95, 0xec, 0x1c, 0x9c, 0x39, 0xf9, 0xf3, 0x46, 0xe4,
	0x5f, 0xeb, 0xfa, 0xf8, 0xc0, 0x2c, 0xd9, 0xc1, 0xc7, 0xef, 0x12, 0x3b, 0xef, 0x8c, 0x8e, 0x9d,
	0xd2, 0x4b, 0xbb, 0x33, 0x27, 0x7f, 0x1a, 0xec, 0x7c, 0x4f, 0x4e, 0x6d, 0xe3, 0xb5, 0x55, 0x4e,
	0xed, 0xab, 0x8f, 0xfe, 0xda, 0x6c, 0xd8, 0x63, 0xaf, 0x33, 0x67, 0xbc, 0xe8, 0xca, 0x29, 0xfd,
	0x5d, 0x0b, 0x66, 0x8c, 0x87, 0xce, 0xe6, 0xb5, 0xd1, 0xe5, 0xdf, 0xaf, 0x7f, 0x06, 0x76, 0xcc,
	0xe6, 0xed, 0xef, 0x58, 0x00, 0x46, 0xc2, 0x93, 0xad, 0xd1, 0x05, 0x6b, 0xae, 0x7d, 0x4e, 0x75,
	0x8c, 0xc6, 0xed, 0x4f, 0x51, 0x48, 0x1e, 0x7d, 0x9b, 0x9d, 0xc6, 0x68, 0x93, 0xa5, 0x4c, 0xd5,
	0xae, 0xd3, 0x15, 0x7a, 0xb6, 0x19, 0xb2, 0xe1, 0xc5, 0x8d, 0x34, 0xbe, 0xdb, 0x7e, 0x5f, 0x59,
	0xac, 0x7d, 0xdb, 0x2a, 0x34, 0x63, 0x0a, 0x14, 0xd3, 0xbc, 0x71, 0x4a, 0x17, 0x02, 0xb3, 0xa9,
	0x66, 0x68, 0x3b, 0xb2, 0x5f, 0x84, 0x25, 0xf3, 0x5a, 0x5d, 0xb1, 0x7f, 0x93, 0x4c, 0x05, 0x8a,
	0x8b, 0x75, 0xc5, 0xf8, 0x26, 0xac, 0x98, 0xf8, 0x85, 0x65, 0xe8, 0xbb, 0x64, 0x69, 0x52, 0x50,
	0x14, 0x16, 0xa2, 0x5f, 0x53, 0xb9, 0x9e, 0x32, 0x9d, 0xd7, 0xb3, 0x79, 0x6b, 0xc4, 0x59, 0x43,
	0x1b, 0x05, 0x23, 0x37, 0x45, 0x47, 0x6a, 0x66, 0x26, 0x07, 0xe8, 0x97, 0xb5, 0x4d, 0x9a, 0x59,
	0x81, 0x88, 0x01, 0x69, 0xdf, 0x81, 0x0b, 0xe6, 0x77, 0x25, 0x3f, 0x5e, 0xf3, 0xcb, 0x7e, 0x8e,
	0xa2, 0x38, 0x14, 0x5f, 0x16, 0x4f, 0x80, 0xc6, 0xb7, 0xfd, 0x35, 0x0c, 0xf7, 0x69, 0x90, 0x37,
	0x7f, 0xe6, 0x54, 0x0e, 0x85, 0xea, 0xc3, 0xd2, 0x89, 0xf4, 0x35, 0x58, 0x33, 0xfb, 0xc1, 0x59,
	0x16, 0x65, 0x4f, 0x9a, 0xb7, 0xc9, 0x92, 0xa8, 0xe8, 0xc1, 0x6d, 0x4c, 0x85, 0x78, 0xb7, 0xfd,
	0xbe, 0xfd, 0x55, 0x98, 0xd6, 0x0f, 0xb8, 0xcd, 0x3b, 0xa3, 0x13, 0x83, 0xa5, 0x97, 0x62, 0x07,
	0x1f, 0x64, 0x51, 0x00, 0xfe, 0xd0, 0x22, 0x23, 0x8e, 0x6a, 0xfa, 0x12, 0x8c, 0xb4, 0xfb, 0x1e,
	0xae, 0x90, 0x5f, 0x1c, 0x89, 0x24, 0xd4, 0x2f, 0x88, 0x68, 0x24, 0x52, 0x0e, 0xbe, 0x89, 0xa1,
	0x7c, 0x7f, 0xc0, 0xa9, 0x2a, 0xf5, 0x3b, 0x5a, 0xf3, 0xee, 0xa3, 0xf7, 0x21, 0x7b, 0xe8, 0xc3,
	0x9d, 0x33, 0xc3, 0xef, 0x56, 0x38, 0x5a, 0xea, 0xea, 0xbf, 0x9f, 0xd1, 0x21, 0x09, 0xa3, 0x52,
	0x65, 0x49, 0xb7, 0xb9, 0x43, 0xb7, 0xa4, 0xb2, 0xf0, 0x7e, 0x86, 0xe7, 0x24, 0x59, 0xb4, 0x9b,
	0x74, 0xe5, 0x0e, 0x33, 0x57, 0x7e, 0xd4, 0x6a, 0xfe, 0xec, 0xe8, 0xf2, 0xaf, 0x0c, 0x3e, 0xa1,
	0x19, 0x4f, 0x65, 0xd8, 0x85, 0x1f, 0x59, 0xd0, 0xf4, 0x3a, 0x9d, 0x7e, 0xaf, 0x1f, 0x7a, 0xb9,
	0x7a, 0x32, 0xe0, 0xf7, 0xb2, 0xa6, 0x33, 0x3a, 0xe5, 0xc4, 0x6c, 0xc7, 0x59, 0x35, 0x38, 0x90,
	0x1f, 0xfb, 0x0e, 0xbf, 0xd7, 0xfd, 0x5d, 0x0b, 0x2e, 0x9b, 0xcc, 0x95, 0x0c, 0xec, 0x14, 0x93,
	0xbb, 0xa7, 0xc4, 0xe4, 0x05, 0x83, 0x13, 0xc3, 0x98, 0x8f, 0x79, 0x6d, 0xfd, 0x6f, 0x53, 0x95,
	0xc7, 0xbf, 0x30, 0x4b, 0xd0, 0xfe, 0x07, 0x0f, 0xcb, 0xc2, 0x37, 0x63, 0xdd, 0xcf, 0x2a, 0x20,
	0x4a, 0x3c, 0x0a, 0x31, 0x28, 0x8f, 0xee, 0x5d, 0x2f, 0x08, 0x45, 0x91, 0x5b, 0x39, 0xbb, 0x99,
	0xa6, 0x37, 0x11, 0x84, 0xf6, 0x00, 0x69, 0xea, 0xf2, 0xab, 0x9e, 0x61, 0x53, 0xd7, 0x70, 0xe6,
	0xbb, 0x69, 0x7a, 0x15, 0xe1, 0x6c, 0x55, 0xf7, 0x38, 0x2d, 0x94, 0xc2, 0xb1, 0x82, 0x53, 0x6c,
	0x86, 0x59, 0x52, 0x64, 0xbe, 0x7c, 0x1e, 0x6c, 0x14, 0x49, 0xe5, 0x94, 0x9d, 0x64, 0x10, 0xb5,
	0x10, 0x66, 0xc9, 0x6e, 0x29, 0x6b, 0xe7, 0xb3, 0xb0, 0x28, 0xb1, 0xcb, 0x99, 0x3b, 0x39, 0x18,
	0x7b, 0x98, 0x25, 0xb7, 0xcc, 0xe4, 0x9d, 0x5c, 0x73, 0x21, 0x20, 0x75, 0x5a, 0xcd, 0x69, 0xac,
	0x59, 0xf3, 0xa0, 0x8c, 0x02, 0x8c, 0x0c, 0x9c, 0x3d, 0x2f, 0xef, 0xec, 0xb3, 0xd5, 0xd0, 0x9c,
	0x4e, 0xc1, 0x79, 0x47, 0x42, 0x2b, 0x98, 0xe4, 0x92, 0x4f, 0x4f, 0x4d, 0x05, 0x26, 0x85, 0xcc,
	0xfc, 0x00, 0x26, 0xd5, 0x36, 0x07, 0x23, 0xde, 0xe6, 0x26, 0x42, 0xda, 0xdf, 0x94, 0xf3, 0xff,
	0x8c, 0xe1, 0xfc, 0x1f, 0xc1, 0x98, 0xd4, 0xf0, 0x67, 0x51, 0x6a, 0xfe, 0xc2, 0xe8, 0x82, 0x3b,
	0x6f, 0x86, 0x8e, 0x6c, 0x68, 0xa8, 0x23, 0x48, 0x13, 0xa6, 0xb2, 0x4d, 0x37, 0xcc, 0xdc, 0x7e,
	0xc2, 0x2f, 0x4e, 0x13, 0xd9, 0xe6, 0xed, 0xec, 0x7e, 0x22, 0x87, 0x94, 0x4a, 0x30, 0x2d, 0xb7,
	0xf0, 0x83, 0x68, 0x8f, 0x93, 0x5f, 0xcd, 0x49, 0x8c, 0x1d, 0x0d, 0xb5, 0xcf, 0x03, 0x10, 0x26,
	0x86, 0x49, 0x27, 0x63, 0x90, 0x29, 0x89, 0x73, 0x3d, 0x3e, 0x8c, 0x28, 0x21, 0x23, 0xc7, 0x9a,
	0xd4, 0xb3, 0x73, 0x51, 0x25, 0x64, 0x54, 0x05, 0x3c, 0x3d, 0x5f, 0x00, 0xdb, 0x40, 0xce, 0xd3,
	0x60, 0x6f, 0x4f, 0xa4, 0xf8, 0xae, 0x34, 0xed, 0x18, 0xd5, 0xdc, 0xa3, 0x02, 0x8c, 0xe5, 0x11,
	0xf4, 0x44, 0xea, 0x86, 0xa2, 0x4b, 0x39, 0xa2, 0x1a, 0xce, 0x34, 0x42, 0x6e, 0x8b, 0x6e, 0xce,
	0x87, 0xbe, 0xc4, 0xcb, 0xb2, 0xe0, 0x40, 0x70, 0x7a, 0xa6, 0xe9, 0x20, 0xdb, 0x21, 0x00, 0x5b,
	0xfc, 0x16, 0xa7, 0xf1, 0x95, 0x52, 0xf4, 0x4e, 0x3c, 0x83, 0x3f, 0x0d, 0x0b, 0xf4, 0xaa, 0x59,
	0x44, 0x46, 0xc5, 0x27, 0x9a, 0x86, 0x33, 0x27, 0xe1, 0x3b, 0x3a, 0x30, 0xaa, 0xfd, 0x0c, 0x2c,
	0x24, 0x52, 0x74, 0x66, 0xb9, 0xdc, 0x1a, 0xdb, 0xc7, 0xb9, 0xc8, 0xf0, 0x81, 0x65, 0xdc, 0x99,
	0x2f, 0xe0, 0xd7, 0x24, 0x58, 0x76, 0xd2, 0x40, 0x4d, 0xbc, 0xce, 0x03, 0x91, 0x67, 0x18, 0x5c,
	0x7a, 0xdc, 0x59, 0x2c, 0x4a, 0x76, 0xa8, 0xa0, 0x92, 0x0b, 0x14, 0x2f, 0xe3, 0xd6, 0xab, 0xb9,
	0x40, 0x9d, 0x38, 0x14, 0xad, 0x5f, 0xb7, 0x0a, 0x93, 0x43, 0x9d, 0xfc, 0xb0, 0x9f, 0xc7, 0xed,
	0x43, 0xbe, 0xa3, 0xe3, 0xa4, 0x60, 0x9c, 0xbc, 0x46, 0x2d, 0x41, 0xf5, 0x1e, 0x67, 0xa9, 0xa4,
	0x60, 0x57, 0xfb, 0x79, 0xac, 0x17, 0xa2, 0x7a, 0x97, 0xc3, 0xcf, 0x88, 0x22, 0xc6, 0xab, 0x9a,
	0xca, 0x2f, 0x98, 0x05, 0x68, 0xff, 0xf3, 0xe3, 0xc9, 0xa1, 0x9c, 0x50, 0x22, 0x25, 0xfb, 0x1a,
	0x5c, 0x1c, 0xe4, 0x44, 0x1d, 0x77, 0xe2, 0x28, 0x54, 0xd6, 0x90, 0x1b, 0x15, 0x76, 0xf8, 0xfc,
	0x73, 0x37, 0x0a, 0x8f, 0x25, 0x4b, 0xbd, 0x20, 0xa2, 0xc0, 0x36, 0x5a, 0x9e, 0x31, 0x4b, 0x5c,
	0x50, 0xc8, 0x34, 0x89, 0xac, 0xa2, 0xe0, 0x68, 0x64, 0x36, 0x23, 0x55, 0x91, 0x70, 0x34, 0xf2,
	0xab, 0xb0, 0xe2, 0x25, 0x49, 0xc8, 0x26, 0x93, 0x46, 0x96, 0x59, 0x92, 0x96, 0xcb, 0x46, 0x61,
	0x91, 0x68, 0x16, 0x53, 0x0c, 0xab, 0xd3, 0x99, 0x41, 0x73, 0x56, 0xa5, 0x18, 0x56, 0x65, 0x05,
	0xc9, 0x3b, 0x70, 0xde, 0xf3, 0xdf, 0xef, 0x67, 0x39, 0xea, 0x53, 0xf9, 0x7e, 0x2a, 0x32, 0x12,
	0xa3, 0x22, 0xed, 0x28, 0x0f, 0x9f, 0x86, 0xb3, 0x51, 0xe0, 0xdc, 0x53, 0x28, 0x3b, 0x84, 0x61,
	0x7f, 0x0a, 0x36, 0x6a, 0x6b, 0x20, 0x8b, 0x25, 0xb2, 0x12, 0x68, 0xd6, 0xd0, 0x93, 0xed, 0xd2,
	0xa7, 0x60, 0x23, 0x3e, 0x10, 0x69, 0x37, 0x8c, 0x0f, 0x6b, 0x5a, 0x27, 0x63, 0x80, 0xa6, 0xc2,
	0x18, 0x68, 0xfb, 0x13, 0xd0, 0xac, 0xa1, 0xa6, 0x96, 0x49, 0xf8, 0xae, 0x0e, 0xd0, 0x52, 0xbb,
	0xf5, 0x94, 0x94, 0x60, 0x0f, 0x86, 0x50, 0x52, 0x3e, 0xbd, 0xcf, 0xc0, 0xb9, 0x7e, 0xe4, 0x0f,
	0x65, 0x99, 0x1e, 0xf8, 0xd7, 0x35, 0xca, 0x00, 0xcf, 0x6f, 0xc1, 0x7a, 0x1d, 0x3d, 0x31, 0xcd,
	0x2f, 0xfc, 0x83, 0xd4, 0xc4, 0xf5, 0x10, 0x5a, 0x62, 0xbb, 0x31, 0x8c, 0x96, 0xf8, 0xbe, 0x81,
	0xe1, 0xdd, 0x29, 0x7a, 0x0f, 0x4a, 0x94, 0xc1, 0xf5, 0x47, 0x06, 0x78, 0xe7, 0x15, 0xda, 0x6d,
	0x2f, 0xcb, 0x07, 0x56, 0xe1, 0x09, 0xd5, 0x28, 0x7f, 0x2d, 0x92, 0xd1, 0xf5, 0xd5, 0xb0, 0x0b,
	0x57, 0xeb, 0xff, 0x98, 0x2c, 0x52, 0x89, 0x55, 0xd6, 0xa7, 0xdc, 0x74, 0xec, 0xd7, 0x60, 0xb5,
	0x52, 0x3b, 0xce, 0x78, 0xa1, 0x5c, 0x67, 0x96, 0x43, 0xb3, 0xd6, 0xab, 0x54, 0x26, 0x8f, 0xab,
	0x86, 0x4d, 0x40, 0x1c, 0x73, 0x98, 0x07, 0x32, 0xef, 0x5e, 0xd4, 0x45, 0x3b, 0x71, 0x4c, 0xe1,
	0x1e, 0x5e, 0x87, 0xd5, 0x4a, 0x03, 0xb4, 0xa4, 0x54, 0x6c, 0xf8, 0x95, 0x76, 0xa9, 0x05, 0x2e,
	0x94, 0x93, 0x07, 0x99, 0x33, 0x57, 0xa8, 0xda, 0x29, 0x38, 0x30, 0xb0, 0x2c, 0x37, 0x68, 0xd4,
	0x76, 0xf1, 0x02, 0xd8, 0x26, 0xd1, 0xfb, 0x41, 0x9e, 0x0b, 0xe5, 0x1f, 0xb0, 0x68, 0x94, 0x7c,
	0x0e, 0x0b, 0xe4, 0x71, 0x1a, 0xad, 0x5b, 0xe4, 0xe6, 0x62, 0xb6, 0xa6, 0x92, 0x86, 0xcb, 0x42,
	0xb9, 0xcf, 0x18, 0x2d, 0xe1, 0xd3, 0x88, 0xd7, 0x4b, 0x42, 0x91, 0x29, 0x69, 0x26, 0x94, 0xb1,
	0xce, 0x02, 0x17, 0x6c, 0x29, 0xb8, 0xfd, 0x32, 0x2c, 0x17, 0x0d, 0x18, 0xb7, 0x4a, 0xb4, 0xf0,
	0x6c, 0x55, 0xbf, 0x71, 0xe7, 0xf3, 0x1c, 0x2c, 0xee, 0x07, 0x7b, 0xfb, 0xc2, 0xfc, 0x36, 0xbc,
	0xd6, 0x16, 0xb8, 0xa0, 0x90, 0x62, 0xa5, 0xb5, 0x32, 0x48, 0x06, 0x95, 0xb5, 0x72, 0xab, 0x4a,
	0xff, 0x12, 0x2c, 0x15, 0xb3, 0x5c, 0xad, 0x47, 0x65, 0x44, 0x63, 0xeb, 0xa2, 0xbb, 0xaa, 0xc4,
	0xde, 0x82, 0x8b, 0x7a, 0x59, 0x0b, 0x2f, 0x0d, 0x8f, 0xdd, 0xf6, 0x61, 0xf9, 0xc3, 0xd2, 0x0a,
	0x3b, 0xa7, 0xb0, 0x6e, 0x48, 0xa4, 0x6b, 0x87, 0xa5, 0xcf, 0xfb, 0x0a, 0x2c, 0x17, 0xad, 0x6a,
	0xe6, 0x32, 0x5e, 0x60, 0x05, 0x47, 0xf7, 0x75, 0x91, 0x5c, 0x15, 0x45, 0x47, 0xeb, 0x1b, 0x26,
	0xdd, 0xe6, 0xbc, 0x46, 0xab, 0x6b, 0xf9, 0x5d, 0xb8, 0x6c, 0xee, 0x40, 0x2e, 0x8a, 0xe9, 0x2c,
	0x2f, 0xe5, 0x8b, 0xa7, 0xd5, 0x75, 0xa1, 0x53, 0x6c, 0x43, 0x8e, 0xc2, 0x2a, 0x06, 0xee, 0x2d,
	0x58, 0x37, 0xe7, 0x59, 0x2a, 0xde, 0x97, 0x75, 0xb2, 0xea, 0x43, 0xfe, 0xac, 0x6b, 0x06, 0x82,
	0x83, 0xe5, 0xac, 0x01, 0xdd, 0x86, 0xc7, 0x87, 0x0a, 0x8a, 0xa3, 0x24, 0x50, 0xf9, 0xbd, 0x17,
	0x29, 0xbd, 0x40, 0xbd, 0xb0, 0x40, 0x3c, 0xdc, 0x88, 0xff, 0x70, 0xdc, 0xb0, 0x76, 0xdc, 0x34,
	0x6c, 0x4c, 0x7f, 0x6c, 0xc1, 0x4a, 0x65, 0xf7, 0x35, 0x02, 0x07, 0x8d, 0x3a, 0x23, 0xb3, 0xa9,
	0x94, 0x38, 0x4b, 0x9e, 0xb9, 0xc1, 0xf3, 0xab, 0x61, 0x0d, 0x7f, 0xa4, 0x39, 0x9c, 0x4a, 0xc6,
	0x68, 0x53, 0x55, 0xa9, 0xf0, 0x47, 0x89, 0x1e, 0x29, 0x67, 0x58, 0x99, 0x3f, 0xd9, 0xf6, 0x28,
	0x73, 0x86, 0xd5, 0x08, 0x6a, 0x67, 0xb1, 0xc4, 0xdb, 0x5d, 0x29, 0xbb, 0x9f, 0x81, 0x85, 0x20,
	0x73, 0xdb, 0x81, 0x1f, 0xa4, 0x24, 0x34, 0xb4, 0x83, 0xc7, 0x7c, 0x90, 0x5d, 0x33, 0xc1, 0xad,
	0x7f, 0x66, 0x19, 0x19, 0x25, 0xfb, 0x79, 0xdc, 0xf1, 0x12, 0xaf, 0x53, 0xe4, 0xc2, 0xb6, 0xaf,
	0xc0, 0x9c, 0x52, 0xb0, 0x3a, 0x61, 0x1c, 0xe9, 0x4c, 0x21, 0x0d, 0x86, 0x6e, 0x21, 0x10, 0xd1,
	0x58, 0xb5, 0x62, 0xb4, 0x33, 0x8c, 0x46, 0x50, 0x46, 0x7b, 0x0a, 0xe6, 0x29, 0xcd, 0x4e, 0x55,
	0xff, 0x9a, 0x43, 0x70, 0xb1, 0x7c, 0x9e, 0x82, 0xf9, 0x2c, 0x09, 0x83, 0x7c, 0xe0, 0x94, 0x3a,
	0x87, 0xe0, 0x92, 0x4e, 0x17, 0xc5, 0xbd, 0x40, 0x2e, 0x95, 0x02, 0x95, 0x8f, 0xa9, 0x5c, 0xa0,
	0x91, 0x5b, 0xff, 0xd4, 0x2a, 0xac, 0x87, 0x4b, 0x9d, 0x95, 0xd3, 0x30, 0x43, 0xbf, 0x14, 0x59,
	0xbb, 0xea, 0x23, 0xff, 0x92, 0x70, 0x64, 0x4f, 0x75, 0x8a, 0x7f, 0xa1, 0xec, 0xc6, 0x24, 0x08,
	0xd4, 0xe5, 0x92, 0x2f, 0x84, 0x94, 0x8e, 0xb2, 0x8c, 0x3a, 0xae, 0x7c, 0x1b, 0xaa, 0x14, 0xe8,
	0xa1, 0x28, 0x7c, 0xe5, 0xd1, 0x66, 0x50, 0x5c, 0xa7, 0x12, 0x0c, 0x13, 0x19, 0xec, 0xed, 0xbb,
	0x87, 0x5e, 0x2e, 0xd2, 0x9e, 0x97, 0x3e, 0x50, 0xe3, 0xcb, 0x2a, 0xa5, 0x2c, 0xfc, 0x82, 0x2a,
	0x23, 0xd2, 0xd6, 0xff, 0x32, 0xac, 0x9b, 0x48, 0x8a, 0x0e, 0xe9, 0xc5, 0x5d, 0x03, 0xfe, 0x2d,
	0xb7, 0xc5, 0x92, 0x7f, 0xa9, 0x19, 0x15, 0x6c, 0xd1, 0x74, 0x32, 0xa5, 0x78, 0x60, 0xda, 0x55,
	0x77, 0xcc, 0x74, 0xd5, 0x7d, 0x01, 0x6c, 0x7d, 0x9b, 0x51, 0xfd, 0x6e, 0x8b, 0xaa, 0xa4, 0xf8,
	0x74, 0x9f, 0x80, 0x66, 0xa7, 0x9f, 0xa6, 0x78, 0x56, 0xd2, 0x2b, 0xc8, 0x17, 0x3d, 0x2f, 0xf2,
	0xb9, 0x77, 0xab, 0x5c, 0xae, 0x69, 0xae, 0x63, 0x69, 0xeb, 0x7f, 0x1c, 0x2b, 0x44, 0x9a, 0xd9,
	0x41, 0xfb, 0x6f, 0x5b, 0x70, 0x0e, 0x97, 0x64, 0x65, 0x1a, 0xab, 0x74, 0x64, 0xd6, 0x08, 0xd3,
	0xf9, 0x0d, 0x2e, 0x1e, 0x67, 0x5d, 0x02, 0xb7, 0x18, 0xb8, 0x65, 0x72, 0x62, 0xff, 0xbe, 0x12,
	0x1e, 0xe5, 0x39, 0xc8, 0xa2, 0xad, 0x3b, 0x72, 0x0e, 0xb1, 0x35, 0x92, 0x1d, 0x8a, 0xc1, 0x5d,
	0x5c, 0x04, 0x5f, 0x86, 0xb3, 0x38, 0x4d, 0xd8, 0xea, 0x7a, 0xf4, 0x9c, 0x60, 0x6b, 0x0e, 0x35,
	0xda, 0xfa, 0x9a, 0x05, 0xcf, 0x54, 0x85, 0x1d, 0xfb, 0xf3, 0xba, 0x6a, 0xb2, 0xe8, 0x37, 0x0d,
	0xfb, 0x79, 0xb0, 0x15, 0x10, 0x9d, 0xa1, 0x12, 0xc3, 0x35, 0x7a, 0x81, 0x4b, 0x6e, 0x67, 0x09,
	0x27, 0x24, 0xb9, 0x02, 0x73, 0x0a, 0x9b, 0x31, 0x59, 0x46, 0x31, 0x94, 0xd0, 0x5a, 0xbf, 0x36,
	0x06, 0x97, 0x1e, 0xc2, 0x82, 0xfd, 0x37, 0x2d, 0x58, 0xd4, 0x6c, 0x70, 0x6d, 0x6a, 0xdb, 0xec,
	0x8f, 0x52, 0xf0, 0x0f, 0x1d, 0x0b, 0x67, 0x41, 0xff, 0x49, 0xfd, 0xc8, 0xa4, 0x2e, 0xae, 0xd0,
	0xe8, 0x1a, 0x0f, 0x6f, 0x45, 0xf4, 0xa2, 0xa6, 0x22, 0xbc, 0xc7, 0x93, 0x0b, 0x1b, 0x77, 0x8d,
	0x22, 0x3f, 0x79, 0xc9, 0x2d, 0x77, 0x5e, 0xc3, 0x59, 0x43, 0x79, 0xb3, 0x58, 0xba, 0x54, 0x35,
	0xaa, 0x29, 0x45, 0x26, 0xa6, 0x69, 0x67, 0xc5, 0xac, 0x5f, 0xaa, 0x26, 0x94, 0xeb, 0xa8, 0xe6,
	0x22, 0xe3, 0x6c, 0xed, 0x45, 0xc6, 0x5f, 0xd4, 0x5c, 0x64, 0xa8, 0xce, 0xe3, 0x25, 0x10, 0xb9,
	0xaa, 0xa8, 0xdb, 0x20, 0x9f, 0xf9, 0x28, 0x4d, 0x81, 0x55, 0xa3, 0x1c, 0xf9, 0xe0, 0x89, 0xf0,
	0x06, 0xac, 0x0d, 0x52, 0x9a, 0x83, 0xb3, 0x52, 0x25, 0xa4, 0x01, 0xfa, 0x2c, 0x9c, 0x1f, 0xa4,
	0x33, 0x7a, 0x4e, 0x83, 0xb5, 0x5e, 0x25, 0x3e, 0xb1, 0xf7, 0xe3, 0xb5, 0xbd, 0xff, 0x1f, 0x2c,
	0x78, 0x62, 0x58, 0xef, 0x75, 0x5c, 0x0c, 0xd1, 0xc9, 0x29, 0xcc, 0xa2, 0x72, 0x01, 0xad, 0x1b,
	0x83, 0x95, 0xa2, 0xd8, 0x1c, 0x82, 0xd7, 0x60, 0x75, 0x80, 0xce, 0x1c, 0x81, 0xe5, 0x0a, 0x19,
	0x0d, 0xc0, 0xa7, 0xe1, 0xdc, 0x00, 0xd5, 0x40, 0xff, 0x9b, 0x15, 0x52, 0xdd, 0x7d, 0xf9, 0x4d,
	0x2f, 0x0f, 0xed, 0x15, 0x5b, 0xfe, 0x94, 0x8c, 0x96, 0x4c, 0xef, 0x14, 0xab, 0x6c, 0xb4, 0x64,
	0x78, 0x8e, 0x7c, 0x02, 0x9a, 0x9a, 0x42, 0x9b, 0xd7, 0x64, 0xb9, 0x11, 0x98, 0x6c, 0x55, 0x95,
	0x2b, 0xfb, 0x1a, 0x2a, 0x2d, 0xb5, 0xd5, 0xf5, 0x82, 0xb0, 0x3c, 0xeb, 0x75, 0x5b, 0x37, 0xbd,
	0x20, 0xe4, 0x89, 0x4f, 0x09, 0xb7, 0x88, 0x62, 0xc8, 0xcc, 0xd7, 0x8d, 0x55, 0x7a, 0xff, 0x5f,
	0x9d, 0x81, 0xa7, 0x1f, 0xd6, 0x7b, 0xfd, 0x5d, 0x3f, 0x6b, 0xd8, 0x61, 0xa9, 0xa8, 0x30, 0x83,
	0xa3, 0xa1, 0x79, 0x61, 0x1b, 0x7b, 0x63, 0x50, 0xde, 0x85, 0xcb, 0x03, 0x15, 0xd4, 0x0f, 0xce,
	0x85, 0x4a, 0x25, 0x95, 0x31, 0xaa, 0xe3, 0x64, 0x70, 0xac, 0xaa, 0x9c, 0x18, 0x43, 0x76, 0x0b,
	0x1e, 0x1b, 0xa8, 0x60, 0xc8, 0xd0, 0x55, 0x59, 0xa9, 0x8c, 0xe0, 0x57, 0xe0, 0xf1, 0x61, 0x03,
	0x18, 0xe7, 0xfb, 0x22, 0xa5, 0x6a, 0xed, 0x67, 0xcb, 0x19, 0xc9, 0xe8, 0x25, 0x80, 0xf3, 0xde,
	0x24, 0x95, 0xec, 0x59, 0xcf, 0xc2, 0xa2, 0x41, 0xea, 0x16, 0x89, 0x6b, 0xa7, 0x9d, 0x79, 0x2c,
	0x40, 0x16, 0xa8, 0xf9, 0xff, 0xc8, 0x82, 0x2b, 0xc3, 0xda, 0x97, 0x83, 0xe5, 0xb7, 0x8f, 0x99,
	0x83, 0xe7, 0xc1, 0x56, 0x80, 0xc1, 0x7d, 0x89, 0x4b, 0x8a, 0x7d, 0xe9, 0x45, 0x58, 0x2a, 0x91,
	0x97, 0xe5, 0x34, 0x17, 0x19, 0xab, 0xb0, 0x46, 0x8a, 0x8c, 0xd5, 0x4a, 0x91, 0x7f, 0x62, 0xc1,
	0x73, 0x55, 0x86, 0x79, 0x0e, 0xe0, 0xd0, 0x53, 0x52, 0x28, 0xfc, 0x98, 0xe8, 0x3d, 0xf7, 0x9a,
	0x94, 0x8b, 0x72, 0xd8, 0xa8, 0xd8, 0xfc, 0xca, 0x34, 0xdf, 0x96, 0x52, 0x71, 0x37, 0xc9, 0xe5,
	0x07, 0x29, 0x2f, 0x09, 0xa6, 0xa2, 0xe7, 0x29, 0xd7, 0xc8, 0x97, 0xc5, 0x43, 0xb9, 0x8a, 0x74,
	0xf4, 0x54, 0x75, 0xbd, 0x28, 0xb5, 0x5f, 0xd7, 0x0d, 0x32, 0x69, 0xa1, 0x7a, 0x92, 0x0e, 0xbd,
	0x6c, 0x10, 0x6a, 0xed, 0xb3, 0xf5, 0x83, 0xb9, 0xc1, 0xab, 0x2b, 0xf5, 0x21, 0xe4, 0xc1, 0xf6,
	0xfb, 0x16, 0x34, 0x4a, 0xdb, 0xd3, 0x28, 0x12, 0x9a, 0x3c, 0x64, 0x67, 0x76, 0x66, 0xcd, 0x0d,
	0xd0, 0xfe, 0x4d, 0x0b, 0x66, 0x68, 0xb8, 0x89, 0xa1, 0x53, 0x38, 0xc1, 0x96, 0x76, 0x4b, 0x07,
	0xf0, 0x3f, 0x62, 0xe6, 0xef, 0x5a, 0xd0, 0x24, 0xe3, 0x33, 0x73, 0x2f, 0x61, 0xce, 0xe8, 0xf4,
	0x9a, 0x9c, 0x06, 0x67, 0x66, 0xeb, 0xce, 0x0a, 0x72, 0xb4, 0xe3, 0x69, 0x87, 0x21, 0xe2, 0xf5,
	0x77, 0x2c, 0x98, 0x2b, 0x4b, 0x5c, 0x0e, 0x41, 0x18, 0x9e, 0x0a, 0x87, 0xdc, 0xb2, 0xd3, 0x28,
	0x09, 0x75, 0xfb, 0xbf, 0xb4, 0x0c, 0xa1, 0x36, 0x74, 0x28, 0x29, 0x73, 0x41, 0x7e, 0x9a, 0x8c,
	0xea, 0xe1, 0xd4, 0xa2, 0xf4, 0xdd, 0xda, 0x61, 0xfd, 0x43, 0x0b, 0x16, 0x89, 0x6f, 0x43, 0xfc,
	0xb1, 0xbb, 0x7d, 0x7c, 0x1a, 0x0c, 0x1b, 0xcd, 0x3a, 0xf3, 0xc8, 0xc9, 0x5d, 0x2d, 0x6e, 0xed,
	0xbf, 0x67, 0xc1, 0xba, 0xc9, 0x5d, 0x79, 0x58, 0x27, 0x3f, 0x1e, 0x2e, 0x57, 0x0b, 0x2e, 0x4b,
	0x43, 0xf9, 0xfb, 0x16, 0x34, 0x4a, 0xf2, 0x9b, 0x53, 0xed, 0x7f, 0x70, 0x1a, 0x0c, 0x96, 0x1a,
	0x76, 0x66, 0xcd, 0xcd, 0xc2, 0xfe, 0xeb, 0x56, 0xb1, 0xb1, 0x98, 0xb2, 0x67, 0xfa, 0xb4, 0x65,
	0x8f, 0xda, 0xc3, 0x9c, 0x42, 0x04, 0xfd, 0x0d, 0x8b, 0x5f, 0x55, 0x0d, 0xf9, 0xcf, 0x8f, 0xf1,
	0x87, 0xa3, 0x64, 0xec, 0x84, 0xed, 0xcf, 0x69, 0x48, 0xa8, 0xa3, 0x36, 0x1c, 0xfb, 0xcf, 0x2c,
	0x7e, 0x01, 0xc9, 0x72, 0x1a, 0xc1, 0x82, 0xd1, 0x99, 0x8f, 0x97, 0x51, 0x5b, 0x42, 0x77, 0x73,
	0x1c, 0x51, 0xe6, 0xb6, 0xf5, 0x2f, 0xc7, 0x30, 0x67, 0x44, 0x92, 0xb8, 0xd9, 0xa1, 0x1b, 0xc6,
	0x7b, 0x94, 0x88, 0x15, 0xb7, 0x43, 0x07, 0x9e, 0x34, 0x85, 0x13, 0x7a, 0xda, 0x1f, 0x06, 0x79,
	0x67, 0x3f, 0x3e, 0x10, 0xa9, 0x2b, 0x0e, 0xe4, 0x36, 0x69, 0x2a, 0x49, 0xad, 0xa4, 0x90, 0x16,
	0x41, 0x1c, 0xed, 0x6a, 0xdc, 0x1b, 0x12, 0x95, 0xf4, 0x26, 0xa9, 0x07, 0x57, 0xea, 0x2c, 0x52,
	0x33, 0x2a, 0xa5, 0xbb, 0x54, 0x8d, 0x4e, 0xcd, 0x78, 0x11, 0x66, 0x30, 0xb9, 0x31, 0x07, 0x62,
	0x1b, 0xe3, 0xc0, 0x11, 0x69, 0xdc, 0xa3, 0x0c, 0x91, 0x1b, 0x30, 0x9d, 0xc7, 0xaa, 0x94, 0x2e,
	0x8f, 0x26, 0xf3, 0x98, 0xca, 0x5e, 0x87, 0x35, 0xdf, 0x93, 0x63, 0xdc, 0xe5, 0x44, 0xb7, 0xbe,
	0x50, 0xc6, 0xa6, 0x1c, 0x1d, 0x5e, 0x16, 0xdf, 0xed, 0xa2, 0xc2, 0x76, 0x5d, 0x95, 0xd9, 0x37,
	0xe1, 0xf2, 0x10, 0x32, 0xb7, 0x17, 0x84, 0x61, 0x90, 0x71, 0xa8, 0x91, 0x86, 0x73, 0xbe, 0x8e,
	0xfe, 0x0e, 0xe3, 0xd8, 0xef, 0xc0, 0x79, 0x63, 0xe4, 0x54, 0x92, 0xfb, 0xa2, 0x0e, 0x7a, 0xe4,
	0xd9, 0x28, 0x70, 0x54, 0xbe, 0x7b, 0x5d, 0xc3, 0x36, 0x3c, 0x76, 0xc2, 0xb7, 0x60, 0x65, 0x8b,
	0x62, 0x8b, 0x5c, 0x1c, 0xf6, 0x19, 0x48, 0xef, 0x6a, 0xfd, 0x8d, 0x09, 0x98, 0xd7, 0xf7, 0xfa,
	0x1c, 0xfb, 0xff, 0x55, 0xc0, 0x64, 0xcc, 0xb2, 0xa3, 0x46, 0xb5, 0x19, 0xc7, 0x16, 0xe0, 0xf7,
	0xaa, 0xbb, 0xdd, 0xa2, 0xae, 0x5d, 0x81, 0xae, 0x15, 0x06, 0x32, 0xde, 0x41, 0xea, 0x00, 0x7b,
	0x1a, 0x7e, 0x4f, 0x82, 0x2b, 0xa8, 0xa9, 0xf0, 0xfc, 0x63, 0x65, 0x65, 0x94, 0x99, 0xfc, 0xf9,
	0xc7, 0xf6, 0xa7, 0x60, 0xa3, 0x24, 0x7c, 0xf8, 0xd0, 0x4c, 0x09, 0x24, 0xf8, 0xbb, 0x36, 0x4d,
	0xc1, 0x40, 0x08, 0xef, 0x61, 0x39, 0xbe, 0xa1, 0x0d, 0x8c, 0x0b, 0x5f, 0xeb, 0x66, 0x95, 0x91,
	0xa8, 0x89, 0xfa, 0x30, 0x51, 0x13, 0xf5, 0xc1, 0x7e, 0x1b, 0x36, 0x82, 0xca, 0x3e, 0xad, 0x6e,
	0x07, 0xf9, 0x81, 0x6e, 0xca, 0x59, 0x0b, 0xcc, 0xbd, 0x72, 0x4b, 0x17, 0xdb, 0xd7, 0xe1, 0x52,
	0xf5, 0xc3, 0x95, 0xf2, 0x7d, 0x6b, 0xc7, 0xf9, 0x73, 0xe5, 0xcf, 0xb6, 0x53, 0xa4, 0xfb, 0xde,
	0xf6, 0xed, 0xfb, 0xf0, 0xf4, 0x81, 0x17, 0x06, 0xbe, 0x3b, 0x50, 0x57, 0x29, 0x85, 0x2f, 0x86,
	0xe3, 0xa1, 0xc8, 0x47, 0x8f, 0x23, 0xfe, 0x4e, 0xb9, 0x4e, 0x23, 0xa5, 0x2f, 0x86, 0xe9, 0xb9,
	0x03, 0x4f, 0x54, 0x7b, 0x46, 0x83, 0x84, 0x4f, 0x76, 0xf4, 0x82, 0x76, 0xe8, 0x1d, 0x73, 0x90,
	0xa4, 0x4b, 0xa5, 0x3e, 0xd2, 0x5c, 0xb8, 0x7b, 0x20, 0xd2, 0xfb, 0x8c, 0x66, 0x7f, 0xc3, 0x02,
	0x28, 0x06, 0x99, 0xa5, 0xdd, 0xa3, 0x4e, 0xcb, 0x52, 0x23, 0xa9, 0x1c, 0xa3, 0x55, 0xfb, 0x1a,
	0x5c, 0x28, 0x27, 0xca, 0xc5, 0xc3, 0x81, 0x9b, 0x8a, 0x9e, 0x17, 0x44, 0x2a, 0x7c, 0x13, 0x26,
	0xea, 0x36, 0x91, 0xe4, 0x21, 0xc1, 0x51, 0x28, 0xad, 0x1e, 0xac, 0x29, 0x3e, 0x0f, 0xd1, 0x98,
	0x1e, 0xdf, 0xf8, 0x51, 0x28, 0xda, 0x30, 0x8e, 0xf1, 0xcf, 0x68, 0x5d, 0xe0, 0xdf, 0x27, 0x26,
	0x41, 0xc5, 0x2c, 0x4b, 0x7e, 0x2f, 0x88, 0x94, 0xa3, 0x24, 0xa7, 0x40, 0x43, 0x18, 0xb9, 0x49,
	0xb6, 0xfe, 0xbe, 0x55, 0x84, 0x5a, 0xa2, 0xf6, 0xf6, 0xe3, 0x44, 0xa5, 0x68, 0x42, 0x99, 0x57,
	0xce, 0x18, 0x85, 0x72, 0x50, 0x79, 0x2d, 0x5d, 0x00, 0xc8, 0xab, 0x89, 0x0f, 0xa7, 0x73, 0x9d,
	0x1c, 0xf5, 0x35, 0x58, 0xf5, 0xf6, 0xf6, 0x52, 0xb1, 0xe7, 0xa1, 0xbb, 0x51, 0x85, 0x91, 0x71,
	0x67, 0x59, 0x97, 0x5e, 0x2d, 0x38, 0xb2, 0x2f, 0xc1, 0x4c, 0x27, 0xee, 0xf5, 0xa4, 0x94, 0x91,
	0x9d, 0xa5, 0x24, 0x7f, 0x40, 0x20, 0x0c, 0xf4, 0xf6, 0xdf, 0x9d, 0x81, 0xd5, 0x32, 0xcb, 0xe6,
	0xf3, 0x60, 0xb3, 0x98, 0xe2, 0x86, 0x6f, 0x24, 0x0d, 0xdb, 0xd8, 0xa3, 0x76, 0x2f, 0x1a, 0xf2,
	0xa5, 0x9c, 0x55, 0xcd, 0x44, 0xe1, 0x81, 0x29, 0xbf, 0xd6, 0xf7, 0x2c, 0x58, 0xa4, 0x21, 0xe0,
	0x58, 0x76, 0x18, 0xb8, 0x89, 0x32, 0x8f, 0x7b, 0xa3, 0x63, 0x8c, 0x3f, 0xa9, 0x33, 0xaf, 0xda,
	0x96, 0xcc, 0xdc, 0x8a, 0x93, 0xd6, 0x97, 0x61, 0x49, 0xe7, 0x5d, 0x16, 0x89, 0xfe, 0xf4, 0xe7,
	0x60, 0x9a, 0xfc, 0xb2, 0x8b, 0x0d, 0x76, 0x6a, 0x3f, 0x4e, 0x68, 0x1b, 0xbd, 0x0c, 0xb3, 0x0a,
	0xd7, 0xb0, 0x93, 0x80, 0x40, 0x24, 0xb7, 0xe2, 0x04, 0x85, 0xd6, 0x93, 0x30, 0xaf, 0x30, 0xcc,
	0xac, 0x3f, 0xd3, 0x4e, 0x83, 0x90, 0x54, 0x22, 0x9e, 0xff, 0xd8, 0x2a, 0x76, 0x03, 0x49, 0x20,
	0x9b, 0x7e, 0x02, 0xe6, 0x4a, 0x17, 0x21, 0xca, 0x74, 0x63, 0xd6, 0xb8, 0x05, 0xf1, 0xed, 0x23,
	0x98, 0xe4, 0x16, 0x78, 0xf0, 0xdc, 0x91, 0xa4, 0xa2, 0x2e, 0x86, 0xc4, 0x99, 0x20, 0xd6, 0x5b,
	0xff, 0xe9, 0x44, 0xb1, 0x3e, 0xf1, 0x45, 0x93, 0x5c, 0xe4, 0x70, 0x27, 0x7b, 0x52, 0x5f, 0x72,
	0x08, 0x1f, 0x2d, 0x10, 0xf5, 0xc3, 0xa3, 0x06, 0xdf, 0xce, 0x76, 0xb2, 0x32, 0x1e, 0x9a, 0x20,
	0xaa, 0x5b, 0x7d, 0x0d, 0xde, 0xdd, 0xbc, 0x9d, 0xe1, 0xce, 0xb5, 0xef, 0xa5, 0x41, 0xb4, 0xe7,
	0x76, 0xbd, 0x5e, 0x10, 0x06, 0x22, 0xd3, 0x3b, 0x17, 0xc1, 0x6f, 0x32, 0xd8, 0x7e, 0x1e, 0x6c,
	0xaf, 0x5d, 0xd2, 0x6c, 0x8a, 0x68, 0xa1, 0x0b, 0x5e, 0xdb, 0x50, 0x69, 0xe4, 0x07, 0x22, 0xeb,
	0x5c, 0xb6, 0xf0, 0x96, 0x4b, 0x43, 0x07, 0x0d, 0x25, 0xcb, 0x6e, 0x39, 0x55, 0x9f, 0x00, 0x74,
	0xdc, 0xa1, 0xc8, 0xc0, 0xc6, 0x06, 0x35, 0x2b, 0xa1, 0xb2, 0x3e, 0xac, 0x49, 0x2e, 0xf1, 0xb6,
	0x5b, 0xb3, 0xe4, 0x54, 0x86, 0x1a, 0xdd, 0xb6, 0xb1, 0x14, 0xec, 0xef, 0x5b, 0x60, 0x97, 0x97,
	0x01, 0x1a, 0x8d, 0x4f, 0x3d, 0x7a, 0xa1, 0x5d, 0x2f, 0x27, 0x9c, 0x05, 0x73, 0x21, 0xa0, 0xcd,
	0xf8, 0x73, 0xb0, 0x58, 0xf4, 0x42, 0xcd, 0x5a, 0x0a, 0x88, 0xb6, 0xa0, 0x0b, 0x94, 0x60, 0xfb,
	0x24, 0xac, 0x73, 0x23, 0x5e, 0x9e, 0xa7, 0x41, 0xbb, 0x9f, 0x0b, 0x79, 0x4e, 0x21, 0x21, 0x4c,
	0x31, 0x5e, 0x56, 0x09, 0xe1, 0xaa, 0x2a, 0xdf, 0x15, 0x39, 0x8a, 0xe4, 0x1e, 0x8c, 0x05, 0x22,
	0x69, 0xce, 0x3c, 0xfa, 0x80, 0x0a, 0x95, 0x95, 0xe4, 0xc8, 0x76, 0xa4, 0x0a, 0x20, 0xbf, 0x74,
	0xd4, 0xcf, 0xd0, 0xd4, 0xbc, 0x17, 0x1f, 0x78, 0x21, 0xdd, 0xd5, 0xb9, 0x69, 0x3f, 0x8a, 0x8a,
	0x90, 0x82, 0xe7, 0x82, 0xec, 0x3e, 0x62, 0x39, 0x84, 0x84, 0xd7, 0x76, 0x0e, 0xa1, 0xd8, 0x57,
	0xe1, 0x42, 0xa5, 0x0a, 0xbd, 0xa5, 0xb9, 0x86, 0x71, 0xee, 0x46, 0xdf, 0xac, 0x41, 0x6f, 0x69,
	0x68, 0xd1, 0xf1, 0x1f, 0x9c, 0x29, 0xf6, 0x19, 0xb9, 0x6e, 0x7a, 0x22, 0xdb, 0xa7, 0x55, 0xd3,
	0x82, 0x06, 0xfe, 0xa8, 0xe4, 0x6a, 0x9f, 0x91, 0xc0, 0x77, 0x39, 0x4d, 0xfb, 0x67, 0xe1, 0x3c,
	0x77, 0xd5, 0x4c, 0x7f, 0x1f, 0x06, 0x59, 0x6e, 0x6e, 0x7c, 0xfc, 0x51, 0x8c, 0xdb, 0xba, 0xdb,
	0x41, 0x46, 0xc3, 0x4e, 0x76, 0x9b, 0x5c, 0x07, 0xf7, 0xa5, 0x3c, 0x0c, 0x63, 0xca, 0x6e, 0x93,
	0x94, 0x7e, 0x1a, 0x8c, 0xd2, 0x28, 0xa0, 0x9b, 0x92, 0xea, 0xb6, 0x51, 0x07, 0x2b, 0x86, 0x4b,
	0xba, 0xb0, 0xa0, 0x95, 0x4b, 0xdd, 0xe8, 0x9c, 0x11, 0x23, 0xbd, 0xa1, 0xbb, 0x87, 0xd1, 0xbd,
	0x7e, 0x70, 0xa6, 0xfc, 0x3a, 0x9c, 0x74, 0x3a, 0x3a, 0x88, 0x72, 0x7c, 0x18, 0x89, 0xb4, 0xb2,
	0x0d, 0xcf, 0x22, 0x50, 0xcd, 0xc7, 0xa7, 0x60, 0x1e, 0xdf, 0xbb, 0xe3, 0xb4, 0xb2, 0x19, 0xcf,
	0x31, 0x58, 0x21, 0x72, 0x10, 0x39, 0x85, 0x1c, 0xa8, 0x18, 0x88, 0xb3, 0xfb, 0x1e, 0xbd, 0xf7,
	0xc7, 0xe9, 0x36, 0x46, 0xc9, 0x34, 0x30, 0x38, 0x88, 0x54, 0x47, 0x17, 0xaf, 0xc2, 0x44, 0x12,
	0x66, 0x49, 0xa0, 0x5e, 0xbc, 0xf9, 0x17, 0x3a, 0x06, 0x1c, 0xf7, 0xda, 0x71, 0x18, 0x74, 0xe8,
	0xab, 0x28, 0x81, 0xc1, 0x40, 0xfc, 0x10, 0xcf, 0xc0, 0x82, 0x11, 0xc2, 0x33, 0x3c, 0x76, 0xf9,
	0x72, 0x64, 0xca, 0x99, 0x2f, 0xc1, 0xef, 0x27, 0xad, 0x3f, 0x33, 0xcc, 0x3c, 0x92, 0x8e, 0x40,
	0xc3, 0x83, 0x3d, 0x4f, 0x47, 0x43, 0xc7, 0x94, 0x69, 0xa5, 0xc8, 0xd8, 0xc8, 0xc8, 0x76, 0x0d,
	0x23, 0x67, 0x6a, 0x18, 0x19, 0x18, 0xd8, 0xb1, 0x9a, 0x81, 0xad, 0xe3, 0x76, 0xbc, 0x9e, 0xdb,
	0x5f, 0x86, 0xd6, 0x30, 0xef, 0x5e, 0x0a, 0x59, 0x85, 0xaf, 0x69, 0xe7, 0x61, 0xba, 0xb8, 0x2f,
	0xb6, 0x0a, 0xc3, 0x6f, 0x32, 0x51, 0x38, 0x21, 0x01, 0xd9, 0x99, 0x13, 0x12, 0x90, 0xb5, 0xfe,
	0xdd, 0x58, 0x71, 0xcb, 0x5f, 0x6d, 0x1c, 0x7d, 0x55, 0xd1, 0x0f, 0x5b, 0xa4, 0xa8, 0x92, 0x55,
	0x11, 0xf0, 0x30, 0xad, 0x76, 0xaa, 0xe5, 0xb2, 0xff, 0x31, 0x9e, 0x9e, 0x31, 0xb2, 0x00, 0x9d,
	0xe7, 0x3b, 0x71, 0x2f, 0x41, 0x1b, 0x0f, 0xde, 0xde, 0x68, 0xdb, 0x22, 0xdb, 0xf7, 0x2d, 0x55,
	0x86, 0x7b, 0xdc, 0x15, 0x98, 0xcf, 0xe3, 0x34, 0x42, 0xdb, 0x7a, 0x46, 0xe6, 0xd4, 0xf8, 0x12,
	0x7c, 0x3d, 0x3e, 0x8c, 0x10, 0xed, 0x26, 0x5c, 0x3e, 0xe1, 0x6c, 0x49, 0x74, 0xb4, 0xbc, 0xce,
	0x0f, 0x3b, 0x5a, 0x62, 0x3d, 0x2f, 0xc0, 0x52, 0x37, 0x4d, 0x95, 0x3d, 0xa5, 0xe6, 0x8f, 0x4f,
	0x5f, 0xdd, 0x34, 0xbd, 0xa7, 0x4a, 0x10, 0xfd, 0x1a, 0x5c, 0x44, 0xcd, 0x3c, 0x88, 0x4a, 0xdf,
	0x49, 0x44, 0xbe, 0x1c, 0xf8, 0x5e, 0xa0, 0x6c, 0x25, 0x37, 0x24, 0xd6, 0x76, 0x54, 0x0c, 0xc8,
	0x0e, 0xa1, 0xdc, 0x09, 0xa2, 0x87, 0xd5, 0xe1, 0x1d, 0xa9, 0xa3, 0xf5, 0xb0, 0x3a, 0xbc, 0xa3,
	0x87, 0xd4, 0xe1, 0x1d, 0xec, 0xf1, 0x01, 0x6d, 0x58, 0x1d, 0x57, 0x0f, 0xf6, 0x5a, 0x3f, 0x1a,
	0x2f, 0x9e, 0x98, 0x06, 0x92, 0xe5, 0xa9, 0xd7, 0xb3, 0x13, 0x72, 0xec, 0xfd, 0x99, 0x05, 0x1b,
	0xc3, 0x67, 0x2c, 0xeb, 0x57, 0xd1, 0x69, 0x78, 0xc1, 0x17, 0xad, 0x56, 0xb3, 0xfa, 0x61, 0x08,
	0x37, 0x5c, 0x40, 0x6f, 0xc3, 0xc6, 0xf0, 0x11, 0xe3, 0x29, 0xb6, 0x36, 0x64, 0xb4, 0xe4, 0xf9,
	0xac, 0x66, 0x98, 0x53, 0x91, 0xc5, 0x61, 0x1f, 0x2f, 0x64, 0x48, 0xd6, 0x9d, 0x4b, 0xaa, 0x94,
	0x8e, 0x46, 0x91, 0xc3, 0xd5, 0xac, 0x32, 0xae, 0x96, 0x17, 0xdf, 0x9e, 0x7f, 0x70, 0x1a, 0x83,
	0x55, 0x5a, 0xd7, 0xce, 0x6a, 0x79, 0xbc, 0xb6, 0x18, 0xde, 0xfa, 0xde, 0x78, 0xf1, 0x7c, 0xad,
	0x93, 0xc8, 0xf5, 0xa3, 0xa0, 0x34, 0x33, 0x1e, 0x83, 0x59, 0xfe, 0x69, 0xe6, 0x32, 0x98, 0x21,
	0x18, 0xc5, 0x61, 0xb9, 0x04, 0x33, 0x2a, 0x23, 0x64, 0x11, 0xfa, 0x1a, 0x38, 0x1d, 0x64, 0x1c,
	0x0a, 0x0c, 0x43, 0xa9, 0x2f, 0xd3, 0xe8, 0x33, 0x4c, 0xe5, 0xea, 0xfa, 0xac, 0x48, 0x61, 0x30,
	0x6e, 0xa6, 0x30, 0x78, 0x1d, 0xd6, 0x28, 0xc4, 0x0a, 0xc7, 0x37, 0x30, 0xe2, 0xa1, 0xd0, 0x26,
	0xb9, 0x8c, 0xc5, 0x1c, 0xec, 0x40, 0x47, 0x44, 0x79, 0x13, 0x9a, 0x1c, 0x2a, 0x75, 0x90, 0x8e,
	0xb6, 0x9c, 0x15, 0x2a, 0xaf, 0x12, 0xa2, 0xa7, 0x03, 0x67, 0x4f, 0x19, 0x54, 0x55, 0x97, 0x8a,
	0xb2, 0x42, 0x53, 0xbd, 0x02, 0x73, 0x14, 0x57, 0x5b, 0x0b, 0x62, 0xba, 0xe8, 0x6a, 0x10, 0x54,
	0xed, 0x13, 0x2f, 0xc1, 0x92, 0xa9, 0x98, 0x94, 0xf5, 0x47, 0xdb, 0x28, 0x52, 0x04, 0xcf, 0x83,
	0xad, 0x43, 0x71, 0x17, 0xe3, 0x46, 0xaa, 0xe3, 0x82, 0x2a, 0xd1, 0xd7, 0x8f, 0x8f, 0x01, 0xe5,
	0xe7, 0x74, 0xe3, 0x34, 0xd8, 0x0b, 0x22, 0xf6, 0xc8, 0x9a, 0x41, 0xd8, 0x5d, 0x04, 0x21, 0xa3,
	0x52, 0xc5, 0x55, 0x91, 0xf5, 0x8e, 0x59, 0xaf, 0x6b, 0x48, 0xa8, 0x8a, 0xaa, 0x77, 0xdc, 0xfa,
	0x47, 0x56, 0x71, 0x7c, 0xe1, 0x76, 0x75, 0x22, 0xaa, 0xaf, 0x40, 0xc3, 0xb0, 0x5a, 0xed, 0xee,
	0x8d, 0x28, 0xb6, 0x67, 0x91, 0xbc, 0x68, 0x56, 0x37, 0xb7, 0xd5, 0xc5, 0x48, 0xd6, 0x74, 0xb5,
	0xe5, 0xea, 0x54, 0x69, 0xca, 0xd6, 0x09, 0xc1, 0xd7, 0x38, 0x61, 0xda, 0xbb, 0x70, 0x5e, 0x32,
	0x2f, 0xd2, 0x5e, 0xe5, 0x80, 0xef, 0x76, 0xda, 0x6e, 0xee, 0xd6, 0x05, 0x8c, 0xb7, 0x6a, 0x03,
	0xc6, 0xff, 0xdb, 0xf1, 0x22, 0x60, 0xbc, 0x31, 0xff, 0x83, 0x0e, 0x2e, 0x10, 0x95, 0x34, 0xbb,
	0x13, 0x06, 0xe8, 0xee, 0x14, 0xa7, 0xb9, 0x4a, 0x9a, 0x4d, 0xa0, 0x9d, 0x38, 0xc5, 0x00, 0x81,
	0x8c, 0x10, 0x74, 0x5d, 0xce, 0xd9, 0xa3, 0x54, 0x2f, 0x84, 0x6f, 0x77, 0x6f, 0x51, 0x92, 0x1e,
	0xd9, 0x3d, 0xc2, 0x94, 0x03, 0x80, 0x6a, 0x09, 0x1f, 0x8a, 0x09, 0x7c, 0xd7, 0xef, 0xa3, 0x5e,
	0xf2, 0x12, 0x2c, 0x1b, 0x78, 0x45, 0xad, 0x24, 0x9a, 0x16, 0x35, 0xb2, 0xae, 0xb8, 0x2e, 0xf1,
	0xd2, 0xd9, 0x0f, 0x95, 0x78, 0x69, 0xe2, 0xa4, 0xc4, 0x4b, 0x93, 0x25, 0x7f, 0xbb, 0xe7, 0x60,
	0x91, 0x96, 0xaa, 0x1c, 0x77, 0xf5, 0x50, 0x3e, 0xc5, 0xfe, 0x8f, 0xb2, 0xe0, 0x5e, 0x01, 0xc7,
	0x70, 0x51, 0xc5, 0x40, 0xa2, 0xd2, 0x3b, 0xcd, 0xab, 0x06, 0xc1, 0xf7, 0xa3, 0x40, 0xf9, 0x49,
	0xe2, 0x67, 0x34, 0x87, 0x98, 0x96, 0xc0, 0x9c, 0x84, 0x6f, 0x15, 0xc3, 0xfc, 0x0a, 0xac, 0x98,
	0x98, 0xc5, 0xa8, 0xd0, 0x4a, 0xb0, 0x0b, 0x74, 0x3d, 0x2c, 0x7f, 0x60, 0xc1, 0x52, 0xcd, 0x24,
	0xc1, 0x65, 0xf1, 0x88, 0x33, 0x7a, 0x9c, 0x34, 0x1d, 0x9d, 0x45, 0x59, 0x54, 0xba, 0x05, 0x6a,
	0xfd, 0xdf, 0x67, 0xaa, 0x46, 0x19, 0x2a, 0x70, 0x71, 0x75, 0xfe, 0x1d, 0xc2, 0x0c, 0x97, 0xe8,
	0xf9, 0x37, 0xba, 0x40, 0x40, 0x40, 0x4d, 0xe1, 0x80, 0xd7, 0x7e, 0xef, 0x33, 0xc3, 0xbf, 0x37,
	0x0b, 0x64, 0xfd, 0xbd, 0x79, 0x6a, 0x13, 0x58, 0x7d, 0xef, 0xaf, 0x59, 0xfc, 0xc1, 0xcd, 0x3e,
	0x8d, 0x8f, 0xb4, 0x4f, 0x38, 0x91, 0x6e, 0xe8, 0x7e, 0xb5, 0xde, 0x29, 0x52, 0xe3, 0x32, 0xc5,
	0x41, 0xd0, 0xad, 0x46, 0x64, 0x2e, 0xed, 0x65, 0x56, 0x79, 0x2f, 0x6b, 0xfd, 0x70, 0xc2, 0x30,
	0xf2, 0x4b, 0xbd, 0x28, 0x93, 0xbd, 0x28, 0x6d, 0xa7, 0x7d, 0x33, 0x2f, 0x52, 0x67, 0x74, 0x0f,
	0x6e, 0x95, 0xd4, 0x48, 0xdf, 0xb1, 0x00, 0x8a, 0xf9, 0xc3, 0xd6, 0x1a, 0xef, 0x8f, 0xb0, 0xf9,
	0xca, 0x64, 0x75, 0xa6, 0xf5, 0xea, 0xb6, 0x7f, 0x6c, 0xc1, 0xe2, 0xc0, 0x94, 0x66, 0x33, 0x8d,
	0x11, 0xbe, 0x31, 0x0f, 0x59, 0x46, 0x2a, 0xb2, 0xdf, 0xae, 0xe6, 0xef, 0xd7, 0x2c, 0x98, 0xdd,
	0x8f, 0x7b, 0x82, 0x35, 0xce, 0x18, 0x6f, 0x99, 0x4f, 0x23, 0x50, 0xca, 0x8c, 0x6a, 0xf5, 0x46,
	0x8a, 0x99, 0x68, 0x48, 0x07, 0x77, 0x35, 0x2f, 0x87, 0x71, 0xfa, 0x40, 0x2a, 0xb2, 0x74, 0x21,
	0xb7, 0x42, 0xc5, 0xb7, 0xb8, 0xf4, 0x0b, 0x54, 0x68, 0xff, 0xee, 0x60, 0xbc, 0x85, 0x09, 0xe4,
	0xbf, 0x37, 0xc2, 0xa1, 0x1d, 0x5c, 0x27, 0x95, 0xb0, 0x0b, 0xad, 0xff, 0x7c, 0xbc, 0x9c, 0x28,
	0x8b, 0x62, 0xb9, 0xf0, 0xc1, 0x73, 0x13, 0x56, 0x54, 0x4a, 0x1e, 0x72, 0x39, 0x28, 0x9f, 0x3b,
	0x97, 0xb8, 0x90, 0x9c, 0x0e, 0xf8, 0xd8, 0xf9, 0x2c, 0x2c, 0x2a, 0x9a, 0x7e, 0xa2, 0xf0, 0xd5,
	0x2b, 0x1f, 0x15, 0xdc, 0x4f, 0x18, 0x77, 0x0b, 0x2e, 0x96, 0xea, 0x47, 0x5f, 0x56, 0x32, 0xd0,
	0x62, 0x42, 0x52, 0x4a, 0xcf, 0x99, 0x0d, 0x05, 0x71, 0x44, 0x76, 0x5a, 0x5c, 0xc9, 0x8b, 0xa0,
	0xf8, 0xa0, 0x73, 0x2b, 0x53, 0x2a, 0x6f, 0x00, 0x2a, 0x92, 0x67, 0x57, 0xc6, 0xff, 0x24, 0xac,
	0x2b, 0x7c, 0x7a, 0xde, 0x30, 0xa9, 0xd8, 0x1d, 0x80, 0x11, 0xf0, 0x85, 0xc3, 0x20, 0x7d, 0x17,
	0x2e, 0x2b, 0xd2, 0xbd, 0xd4, 0xeb, 0x88, 0x6e, 0x3f, 0x0c, 0x8f, 0xd9, 0xb7, 0x42, 0xd5, 0x40,
	0x67, 0xd0, 0x0b, 0x8c, 0xf7, 0xae, 0x46, 0x23, 0x3f, 0x0b, 0xae, 0xe8, 0x3d, 0x78, 0x42, 0x55,
	0x14, 0x9d, 0x54, 0x19, 0xed, 0xe7, 0xaa, 0xd1, 0xf7, 0x86, 0xd6, 0x77, 0x15, 0x2e, 0x54, 0x3e,
	0x14, 0x7b, 0x68, 0xaa, 0x8a, 0xf8, 0x44, 0x5a, 0xfa, 0x60, 0xec, 0xa0, 0xc9, 0x55, 0x18, 0xdf,
	0x3a, 0x15, 0x49, 0xe8, 0x1d, 0x2b, 0xd2, 0xe9, 0xd2, 0xb7, 0x76, 0xb0, 0x8c, 0x68, 0x5a, 0x7f,
	0x6e, 0x15, 0xf7, 0x27, 0xe6, 0x03, 0x80, 0xef, 0xf5, 0x12, 0x81, 0x37, 0x6e, 0xea, 0xa8, 0x52,
	0x63, 0x22, 0x39, 0x13, 0x1b, 0xe6, 0x91, 0x4f, 0xc0, 0x1c, 0xfa, 0xe0, 0xe1, 0xb7, 0x30, 0x33,
	0xa3, 0x49, 0xa8, 0xfc, 0x02, 0x78, 0x31, 0xf7, 0x38, 0x34, 0xe8, 0xbe, 0x4e, 0x5d, 0xe2, 0xf1,
	0xed, 0x84, 0x02, 0x2a, 0xa4, 0xb6, 0xd7, 0x79, 0x10, 0x77, 0xbb, 0x1c, 0xc9, 0x8e, 0xa3, 0x4e,
	0x30, 0x10, 0x4f, 0x59, 0xad, 0x7f, 0x36, 0x3e, 0xa0, 0x52, 0xeb, 0xac, 0x57, 0x4f, 0xc0, 0x9c,
	0x99, 0x8c, 0x8a, 0xad, 0xfa, 0xa6, 0x9c, 0xd9, 0x76, 0xd7, 0xdf, 0x55, 0x33, 0x18, 0xf5, 0xa5,
	0x62, 0x9e, 0x9b, 0x56, 0xfe, 0x7a, 0x96, 0xdf, 0x63, 0x1b, 0xf0, 0x61, 0x99, 0xab, 0xc6, 0x3e,
	0x5a, 0xe6, 0xaa, 0xf1, 0xba, 0xcc, 0x55, 0x9f, 0x86, 0x73, 0xca, 0x6d, 0xca, 0x60, 0x47, 0x27,
	0x99, 0xa2, 0xf9, 0xdc, 0x64, 0x14, 0xcd, 0xbd, 0xce, 0x38, 0x25, 0xc9, 0xd9, 0x9d, 0xaa, 0x8e,
	0x7c, 0x82, 0xc9, 0x09, 0x65, 0x90, 0xfc, 0xaf, 0x5a, 0x30, 0x47, 0x76, 0x1d, 0xfa, 0x34, 0x3d,
	0x39, 0xda, 0x14, 0x61, 0xa6, 0x7c, 0x72, 0x1a, 0xd8, 0xb6, 0x3a, 0x37, 0xdb, 0xbf, 0x27, 0x45,
	0x6c, 0x69, 0xea, 0x35, 0xa7, 0x46, 0x77, 0x11, 0x32, 0x7c, 0xc2, 0x3b, 0x0d, 0xfd, 0x1b, 0x65,
	0xec, 0xff, 0x33, 0x78, 0x7e, 0xd3, 0x19, 0x23, 0x7f, 0x68, 0x81, 0x5d, 0x7e, 0xea, 0xef, 0x06,
	0x9c, 0x78, 0x63, 0x44, 0x29, 0xec, 0xca, 0xaf, 0x1f, 0x92, 0x91, 0x24, 0x71, 0x16, 0x13, 0xd3,
	0x90, 0x40, 0xb2, 0x60, 0x5f, 0x00, 0xe0, 0x28, 0x2f, 0x61, 0x96, 0xa8, 0x77, 0x62, 0x82, 0xdc,
	0xce, 0x92, 0x1a, 0x5b, 0x88, 0xb1, 0xba, 0x0c, 0x18, 0x7f, 0xcd, 0xaa, 0x3a, 0xb9, 0xb8, 0xa9,
	0xc8, 0xf2, 0x38, 0x35, 0xee, 0x84, 0x1f, 0xe7, 0x30, 0x59, 0x79, 0xd9, 0xe8, 0x9c, 0xc2, 0x58,
	0xe5, 0x6c, 0x67, 0x7e, 0x09, 0x66, 0xa8, 0x66, 0x93, 0x1f, 0x60, 0xd0, 0x47, 0x60, 0xe8, 0x6f,
	0x9d, 0xa9, 0xfa, 0x7b, 0xa0, 0x4a, 0x86, 0x3e, 0x8c, 0x5a, 0x15, 0xf4, 0x92, 0xec, 0x14, 0x54,
	0xc1, 0x52, 0xc6, 0x4a, 0xfb, 0x7b, 0x68, 0xb9, 0xab, 0x87, 0x86, 0x75, 0xc1, 0x11, 0x9a, 0x12,
	0x0f, 0x7c, 0x08, 0xc7, 0x6c, 0xbf, 0xf5, 0xfd, 0x99, 0x41, 0x2b, 0x74, 0x33, 0x52, 0x1d, 0x19,
	0x38, 0xf1, 0xf3, 0xaf, 0x19, 0x5d, 0xac, 0x78, 0xfe, 0x2d, 0x22, 0xaa, 0xe1, 0x45, 0x8e, 0x4a,
	0x4f, 0x61, 0x78, 0x28, 0xbb, 0xed, 0x43, 0x8e, 0x32, 0xc4, 0xe9, 0x29, 0x0a, 0xef, 0xe4, 0x6b,
	0x87, 0xe8, 0x06, 0x32, 0x48, 0xa2, 0xc2, 0x9c, 0xf3, 0x33, 0x48, 0xb3, 0x4a, 0xa8, 0xe2, 0x91,
	0xdb, 0x6f, 0xc1, 0x46, 0x0d, 0x39, 0xa7, 0xfd, 0xe1, 0x27, 0x81, 0xd5, 0x2a, 0x35, 0xa5, 0xff,
	0xd1, 0x66, 0x38, 0x65, 0x5a, 0xdd, 0xcd, 0x20, 0x7a, 0xc0, 0xea, 0xde, 0xb9, 0x6a, 0x05, 0x2a,
	0x94, 0x5a, 0x10, 0x3d, 0xb0, 0x5f, 0x87, 0xb5, 0x3a, 0x0e, 0x8e, 0x3a, 0xea, 0x1c, 0xbf, 0x3c,
	0xd0, 0xfc, 0x51, 0xc7, 0x1f, 0xd2, 0x6f, 0xb9, 0x15, 0x62, 0xd4, 0x9b, 0xc9, 0xfa, 0x7e, 0xdf,
	0xe2, 0xf2, 0x21, 0xbc, 0x8b, 0xa3, 0x4e, 0xd8, 0xf7, 0x05, 0xa6, 0x5d, 0xe0, 0xc8, 0x46, 0x03,
	0xbc, 0xdf, 0x20, 0x9c, 0xf7, 0xe4, 0x06, 0x74, 0x72, 0x2d, 0x38, 0x02, 0xd3, 0x27, 0xd6, 0x82,
	0x23, 0x70, 0x72, 0x2d, 0x78, 0xb8, 0x87, 0x13, 0x6b, 0xc1, 0x77, 0xed, 0xcf, 0xc0, 0xf9, 0xda,
	0x01, 0x49, 0x38, 0x20, 0xc6, 0xcc, 0xb0, 0x11, 0x49, 0x28, 0x22, 0xc6, 0x36, 0xb4, 0x6a, 0xe8,
	0x31, 0xe2, 0x6d, 0x1c, 0xba, 0xfd, 0xe8, 0x41, 0x24, 0xc7, 0x95, 0x2e, 0xdf, 0x2e, 0x54, 0x6b,
	0x91, 0xa3, 0x71, 0x37, 0xbc, 0x4f, 0x48, 0xf6, 0x56, 0x6d, 0x87, 0x54, 0x55, 0x72, 0x99, 0x71,
	0xea, 0xab, 0x8d, 0xfa, 0x7a, 0x6e, 0x09, 0xcf, 0xb7, 0xaf, 0xc2, 0xc5, 0x13, 0x2a, 0xe9, 0x05,
	0x2a, 0x40, 0xc7, 0x7a, 0x7d, 0x1d, 0x77, 0x02, 0xff, 0x21, 0x7c, 0xe4, 0x5e, 0x10, 0x72, 0x22,
	0xad, 0x21, 0x7c, 0xdc, 0xf3, 0x82, 0xd0, 0x7e, 0x07, 0x2e, 0x9c, 0x30, 0xcb, 0xdb, 0x87, 0x9c,
	0xbd, 0x63, 0x7d, 0xc8, 0x1c, 0xbf, 0x76, 0x68, 0xdf, 0x86, 0xc7, 0x87, 0xb1, 0xd1, 0x8f, 0x52,
	0xe1, 0x75, 0xf6, 0x31, 0x91, 0x14, 0x25, 0xf7, 0xb8, 0x54, 0xc7, 0xca, 0xfd, 0x02, 0xad, 0xde,
	0xa3, 0xc6, 0xae, 0xf7, 0xa8, 0x51, 0x69, 0x3e, 0x18, 0x17, 0x25, 0xfe, 0x12, 0xbb, 0xa7, 0x68,
	0x54, 0xbc, 0xc2, 0xf8, 0x91, 0xc5, 0x49, 0x9e, 0x3b, 0x5e, 0xd8, 0xe9, 0x87, 0x24, 0xf0, 0xe8,
	0xa1, 0x84, 0xd2, 0x7e, 0x8c, 0x30, 0x15, 0x11, 0xe6, 0xf5, 0xa1, 0xe7, 0x11, 0x5c, 0xeb, 0x5b,
	0x05, 0x0b, 0xf4, 0x36, 0xf2, 0x2c, 0x2c, 0x4a, 0x69, 0x5a, 0x8e, 0xdb, 0xb0, 0xc2, 0xb1, 0xed,
	0xd3, 0xd8, 0x1c, 0xad, 0xd6, 0x7f, 0x3b, 0x01, 0xeb, 0x55, 0xad, 0xb5, 0xd8, 0xb7, 0x9e, 0x2b,
	0x12, 0x63, 0x15, 0x4e, 0xd1, 0x96, 0x8a, 0x9a, 0x44, 0x1f, 0xcc, 0x0c, 0x1b, 0x31, 0x80, 0xac,
	0x8c, 0xbc, 0x59, 0x91, 0x5d, 0xab, 0x12, 0xed, 0x52, 0xb1, 0xfd, 0x1f, 0x5a, 0x05, 0x71, 0xb1,
	0x13, 0xb0, 0x1b, 0xca, 0xe8, 0x2f, 0x0c, 0x86, 0x6c, 0x43, 0x45, 0xc2, 0xb0, 0x34, 0xc6, 0xa1,
	0xdd, 0x62, 0x1f, 0xda, 0xbf, 0x63, 0xc1, 0xda, 0x20, 0x05, 0x3e, 0x7f, 0xf2, 0x45, 0xd6, 0xc7,
	0xc0, 0xec, 0x72, 0x85, 0x59, 0xb4, 0x4c, 0x1d, 0x32, 0xb2, 0xea, 0xb3, 0x9c, 0xfd, 0x69, 0x19,
	0x59, 0x35, 0x11, 0xfe, 0xdc, 0x82, 0x4b, 0x43, 0xd9, 0xe5, 0x11, 0x9e, 0xf8, 0xb8, 0x98, 0x3e,
	0x57, 0xcf, 0x34, 0x0e, 0x74, 0xeb, 0x9f, 0x8e, 0xc1, 0x5a, 0x2e, 0xf0, 0x7e, 0xa4, 0x1a, 0x66,
	0x9c, 0xcd, 0x77, 0xcb, 0x60, 0xa9, 0x98, 0xef, 0x69, 0x53, 0x0e, 0x34, 0xdf, 0x35, 0x22, 0x91,
	0x6f, 0x4b, 0xa5, 0x19, 0x8b, 0xa5, 0x54, 0x32, 0xde, 0xb4, 0x8b, 0x73, 0xe1, 0xb8, 0x33, 0x57,
	0x3c, 0x68, 0xdf, 0x63, 0x6f, 0x3c, 0x92, 0x0e, 0xea, 0x7d, 0xbe, 0x38, 0xd2, 0x8e, 0x3b, 0x8b,
	0x58, 0xa4, 0x5e, 0xe7, 0x11, 0xff, 0x2d, 0x58, 0x37, 0x79, 0x2a, 0x53, 0x8d, 0x23, 0xd5, 0x9a,
	0x81, 0x50, 0xa2, 0xfd, 0xae, 0x85, 0xef, 0x34, 0x9a, 0x58, 0x6a, 0xd0, 0x67, 0x4f, 0x31, 0x70,
	0xbb, 0x01, 0x91, 0xaa, 0xfa, 0xdb, 0xb0, 0xd1, 0x0e, 0xe8, 0x1d, 0x97, 0x9e, 0xc8, 0x52, 0x71,
	0x98, 0x06, 0xaa, 0x2f, 0x13, 0xd4, 0x17, 0xc6, 0xc0, 0x48, 0xe5, 0x0e, 0x95, 0x63, 0x5f, 0x9e,
	0x85, 0x45, 0xfc, 0x6c, 0xa5, 0x2c, 0xe5, 0x93, 0x14, 0xfd, 0xee, 0x20, 0xe8, 0x6e, 0x19, 0x31,
	0x24, 0x5a, 0xff, 0xf6, 0x4c, 0x71, 0xbb, 0xc5, 0x8c, 0x16, 0x69, 0x49, 0x6b, 0x53, 0x5b, 0x5a,
	0x1f, 0x22, 0xb5, 0xe5, 0x99, 0x93, 0x52, 0x5b, 0x8e, 0x9d, 0x94, 0xda, 0x72, 0xfc, 0xc4, 0xd4,
	0x96, 0x67, 0x2b, 0xa9, 0x2d, 0xa5, 0x62, 0x4d, 0xc5, 0x3a, 0x37, 0x2a, 0x1d, 0xc8, 0x67, 0x11,
	0xba, 0xcd, 0xa9, 0x14, 0x29, 0xf2, 0xa0, 0xea, 0xc0, 0xa4, 0x8a, 0x3c, 0xa8, 0x58, 0xa7, 0x57,
	0x81, 0x07, 0x98, 0x8d, 0x43, 0x5b, 0xb1, 0x4c, 0x71, 0x7c, 0x4d, 0x2a, 0x28, 0xe2, 0x6d, 0x3c,
	0x01, 0x73, 0x0a, 0x99, 0x55, 0xf9, 0x69, 0x8e, 0xd9, 0x49, 0x50, 0x52, 0xe5, 0x2f, 0xc3, 0x0c,
	0x3d, 0x6a, 0xd2, 0x49, 0x85, 0x9e, 0x7f, 0x4c, 0x50, 0xeb, 0x5f, 0x6d, 0x16, 0x47, 0x5e, 0x63,
	0xea, 0x28, 0x1b, 0xe5, 0x34, 0x0e, 0x85, 0x16, 0x6b, 0x9b, 0xf4, 0xa2, 0x25, 0x61, 0x4a, 0xb0,
	0x6c, 0xc2, 0x4a, 0x35, 0x7f, 0x01, 0xbd, 0xbe, 0xbd, 0x4a, 0xaf, 0xbe, 0x79, 0x39, 0x7d, 0x01,
	0xbe, 0xc1, 0x7d, 0x19, 0x26, 0x38, 0x6a, 0xcf, 0x6b, 0x23, 0xce, 0x2f, 0x98, 0xf7, 0x23, 0xb7,
	0xd3, 0xdd, 0x23, 0x13, 0x53, 0x0e, 0x5f, 0x73, 0x09, 0xc8, 0x42, 0x9b, 0x5f, 0xe3, 0x5f, 0xa7,
	0xe3, 0x29, 0x82, 0xe8, 0x31, 0xfe, 0x39, 0x58, 0x34, 0xac, 0x8f, 0x18, 0xed, 0x0d, 0xce, 0xa0,
	0x52, 0x14, 0x10, 0xf2, 0x5b, 0xb0, 0x3e, 0x80, 0xcc, 0x21, 0x21, 0x33, 0xcc, 0x2c, 0xd1, 0x70,
	0xd6, 0xaa, 0x44, 0x14, 0x1b, 0x32, 0x1b, 0x0c, 0xf5, 0xfa, 0x89, 0x9a, 0x50, 0xaf, 0x97, 0x60,
	0xc6, 0xf4, 0xba, 0xfd, 0x24, 0xb1, 0xdb, 0x2d, 0x9c, 0x6d, 0x5f, 0x86, 0x65, 0xf3, 0x71, 0xbc,
	0xaf, 0xd2, 0x42, 0xbc, 0x45, 0xc6, 0x43, 0x46, 0xd9, 0x7d, 0x4e, 0x0e, 0xf1, 0x29, 0xd8, 0x30,
	0x29, 0xfc, 0x20, 0xc3, 0x30, 0x72, 0x4c, 0xf7, 0x36, 0xdd, 0x24, 0x19, 0x18, 0xd7, 0x19, 0x81,
	0xa8, 0x5f, 0x83, 0xd5, 0x12, 0x75, 0x7c, 0xc8, 0x16, 0x1a, 0x98, 0x3f, 0xa1, 0xe1, 0x98, 0xdc,
	0x5c, 0x8f, 0x0f, 0xc9, 0x58, 0xc2, 0xfe, 0x55, 0x98, 0x31, 0x9d, 0x80, 0x3f, 0x8d, 0xda, 0xdc,
	0x97, 0x46, 0xf6, 0xe1, 0x65, 0x5b, 0x8e, 0xd9, 0xa2, 0xfd, 0x9b, 0x16, 0xd8, 0x8c, 0x6e, 0x04,
	0x08, 0xe1, 0x64, 0x0a, 0xa3, 0x0b, 0xb5, 0x1a, 0x66, 0x89, 0xb3, 0x40, 0xa5, 0x5b, 0x3a, 0xfa,
	0x88, 0xfd, 0xd7, 0x2c, 0x58, 0x36, 0x5d, 0x60, 0x14, 0x2a, 0x67, 0x55, 0x18, 0x2d, 0x3b, 0x46,
	0x2c, 0x55, 0x7f, 0x67, 0xb3, 0x97, 0x48, 0x86, 0x8c, 0xd1, 0x31, 0xdc, 0xd4, 0x39, 0xab, 0xc2,
	0xa9, 0x8c, 0xce, 0xae, 0xf6, 0x81, 0xb7, 0x7f, 0x6c, 0x55, 0xa2, 0x6a, 0x30, 0x47, 0x7a, 0x94,
	0xae, 0x9e, 0x02, 0x5b, 0xa5, 0x98, 0x1d, 0xc4, 0x80, 0x1a, 0xac, 0xdf, 0xb6, 0x60, 0xb5, 0xe6,
	0x62, 0x46, 0x72, 0x76, 0xed, 0x14, 0x38, 0x5b, 0x66, 0xbb, 0xa0, 0xa2, 0x69, 0xc9, 0xd4, 0x77,
	0x2c, 0xb0, 0x29, 0xdb, 0x6c, 0x27, 0x14, 0x5e, 0xe4, 0x26, 0x34, 0x54, 0x5b, 0xa7, 0xc0, 0xd0,
	0x3c, 0xb6, 0xbb, 0x25, 0x9b, 0xdd, 0xc1, 0x01, 0xfa, 0x0a, 0xcc, 0x20, 0x13, 0x68, 0x28, 0x98,
	0x60, 0x62, 0x85, 0x51, 0xf3, 0x00, 0xdc, 0xa0, 0x6c, 0xfe, 0x06, 0x5c, 0x66, 0xd7, 0xcc, 0xf2,
	0x4b, 0x45, 0x6a, 0xb8, 0x0a, 0xdd, 0x50, 0xae, 0x42, 0x77, 0x93, 0xfc, 0x96, 0xf1, 0x72, 0x91,
	0x6a, 0xbb, 0x6a, 0xfb, 0x25, 0x33, 0x70, 0xa5, 0x8e, 0xfa, 0x87, 0x79, 0x16, 0x1a, 0x8e, 0xad,
	0x8b, 0x74, 0xa4, 0x3f, 0xfb, 0x0a, 0xcc, 0x55, 0x42, 0x58, 0xbf, 0x4b, 0xf7, 0x9a, 0xed, 0x52,
	0xfc, 0xea, 0xda, 0x9c, 0x9a, 0xb7, 0x3e, 0x5a, 0x4e, 0xcd, 0xed, 0xa1, 0x39, 0x35, 0x9f, 0x83,
	0x45, 0x3d, 0x37, 0xd1, 0x1c, 0x47, 0xf6, 0x96, 0x12, 0x20, 0x2c, 0xa8, 0x89, 0xa3, 0xe0, 0xf6,
	0x53, 0x2a, 0xbd, 0xbd, 0xd0, 0x36, 0x7e, 0x3f, 0x43, 0x91, 0xb4, 0x19, 0xac, 0x4c, 0xfb, 0x5e,
	0xc6, 0x8c, 0xab, 0x61, 0xd0, 0x09, 0xca, 0x51, 0x8f, 0x6f, 0x13, 0x1f, 0xaa, 0xcc, 0x88, 0x7c,
	0xfc, 0x3c, 0xd8, 0xe6, 0xa1, 0x9f, 0xf1, 0xef, 0x10, 0x23, 0xc5, 0xb1, 0x9f, 0xb1, 0x6f, 0xc0,
	0x25, 0x9d, 0x13, 0xb1, 0x78, 0x4c, 0x91, 0x9f, 0x50, 0xed, 0x4e, 0xcd, 0xf7, 0x28, 0x10, 0xaa,
	0x42, 0xbb, 0xa9, 0x1e, 0x57, 0xe2, 0x24, 0x57, 0x1b, 0x94, 0xfd, 0x1e, 0x3c, 0x31, 0xa4, 0x1a,
	0xc3, 0x53, 0x4c, 0xf8, 0x98, 0x07, 0xa0, 0xe1, 0x5c, 0xae, 0xab, 0xab, 0x70, 0x17, 0x13, 0xbe,
	0xfd, 0xf3, 0xf0, 0xdc, 0x40, 0x7d, 0x38, 0xd9, 0x85, 0xef, 0xe6, 0xc2, 0x4b, 0x2b, 0xd5, 0xee,
	0x60, 0xb5, 0x4f, 0x56, 0xaa, 0xbd, 0x4e, 0x04, 0xf7, 0x84, 0x97, 0x96, 0x2a, 0xff, 0x14, 0x6c,
	0x04, 0x11, 0xfa, 0xf2, 0x0d, 0x38, 0xb3, 0x09, 0x1f, 0x43, 0xfc, 0x37, 0x9c, 0xa6, 0x89, 0x51,
	0xa2, 0x3e, 0x07, 0xd3, 0x7e, 0x1a, 0x27, 0x6e, 0x2f, 0xf6, 0x05, 0x46, 0xdd, 0x9f, 0x72, 0xa6,
	0x24, 0xe0, 0x4e, 0xec, 0xd3, 0x8b, 0x40, 0x3f, 0x8f, 0xc9, 0x72, 0x0f, 0xc3, 0xdd, 0x4f, 0x39,
	0xd3, 0x12, 0x82, 0xc6, 0x7a, 0xf6, 0x2b, 0xb0, 0xdc, 0x8d, 0xd3, 0x43, 0x2f, 0x25, 0x3b, 0x58,
	0xff, 0x7d, 0xaf, 0x83, 0x31, 0x89, 0xef, 0x51, 0x42, 0x90, 0xa2, 0xec, 0xaa, 0x2a, 0xc2, 0x70,
	0xee, 0xb1, 0xe7, 0xbb, 0x98, 0x15, 0xd9, 0xed, 0x7a, 0x9d, 0x3c, 0x4e, 0x9b, 0xf7, 0x39, 0x9c,
	0x7b, 0xec, 0xf9, 0xbb, 0x12, 0x7e, 0x13, 0xc1, 0x94, 0xdb, 0x4d, 0xe3, 0xe2, 0x42, 0xf8, 0xbc,
	0xca, 0xed, 0xc6, 0x98, 0xb8, 0x10, 0x2e, 0xc1, 0x8c, 0xf1, 0x06, 0xda, 0xfc, 0x02, 0xd6, 0x46,
	0xb6, 0xf1, 0x74, 0x80, 0x28, 0xcc, 0xa5, 0xbe, 0x58, 0x32, 0x97, 0xba, 0x04, 0x33, 0x66, 0x1e,
	0xdd, 0x9f, 0x23, 0x9d, 0xa8, 0x57, 0x24, 0xcf, 0xbd, 0x04, 0x33, 0x79, 0x20, 0xdc, 0x76, 0x2a,
	0xbc, 0x07, 0x22, 0x6d, 0xfe, 0x15, 0xb6, 0xa7, 0x0c, 0xc4, 0x35, 0x82, 0xc8, 0x89, 0x9f, 0x07,
	0x82, 0xcb, 0xa9, 0x96, 0x9f, 0x27, 0xa3, 0xae, 0x02, 0x8c, 0x35, 0xbd, 0x02, 0xcb, 0x06, 0xe2,
	0x07, 0x7d, 0x2f, 0x0c, 0xba, 0x81, 0x48, 0x9b, 0xbf, 0xc0, 0xea, 0xad, 0x2e, 0xfb, 0x59, 0x55,
	0x64, 0x3f, 0x03, 0x0b, 0xcc, 0x5d, 0x81, 0xfe, 0x25, 0xba, 0x26, 0x22, 0x78, 0x81, 0xfa, 0x02,
	0x2c, 0x05, 0x59, 0x71, 0x3b, 0xea, 0x06, 0x7b, 0x51, 0x9c, 0x8a, 0xe6, 0x2f, 0xd2, 0x2a, 0x09,
	0x32, 0x75, 0x2d, 0xba, 0x8d, 0x70, 0xfb, 0x4d, 0x68, 0x56, 0x71, 0x7d, 0xa5, 0x18, 0xba, 0x64,
	0x9a, 0xb9, 0x5f, 0xa2, 0xf0, 0x59, 0x47, 0xac, 0xcf, 0x0a, 0xf8, 0x4b, 0x43, 0xb2, 0x02, 0xae,
	0xc1, 0xa4, 0xca, 0xa8, 0xec, 0x91, 0x2d, 0xb3, 0x47, 0x69, 0x94, 0x7f, 0x05, 0xa6, 0x54, 0xb8,
	0xd0, 0x66, 0x7b, 0x84, 0x39, 0x14, 0x8c, 0x90, 0xa4, 0xce, 0x64, 0xb2, 0x49, 0x99, 0x33, 0xbe,
	0x65, 0x41, 0xa3, 0x14, 0x1e, 0xaf, 0xd9, 0x19, 0x1d, 0x0b, 0x66, 0x38, 0x3a, 0x67, 0xd6, 0x0c,
	0x89, 0x87, 0xee, 0x65, 0x1d, 0x51, 0x0a, 0x85, 0xe3, 0xd3, 0xec, 0x4e, 0x3a, 0xc2, 0x08, 0x82,
	0x73, 0x01, 0x20, 0x8b, 0x7a, 0xca, 0xcd, 0x4f, 0xd0, 0x89, 0x51, 0x42, 0xe8, 0x52, 0xf4, 0xeb,
	0x16, 0x4c, 0x72, 0x4c, 0x84, 0x66, 0x77, 0xf4, 0xe1, 0x41, 0x8d, 0x60, 0x38, 0x8e, 0x6a, 0xd7,
	0xfe, 0xa6, 0x05, 0xf3, 0x15, 0xff, 0x80, 0xe6, 0x1e, 0xf2, 0x32, 0x12, 0xd7, 0xa9, 0x44, 0x65,
	0x61, 0x2b, 0xfb, 0x1a, 0xd8, 0x2f, 0xe1, 0x26, 0x87, 0xe7, 0x47, 0x4a, 0xe5, 0x4d, 0xc4, 0xcd,
	0x7d, 0xca, 0x68, 0xc4, 0x91, 0xf7, 0xaf, 0xa6, 0xc2, 0x23, 0x93, 0x5d, 0xc9, 0xf7, 0x0c, 0x87,
	0x59, 0xed, 0x3c, 0xe8, 0x27, 0xcd, 0x60, 0x74, 0x0f, 0x80, 0x15, 0x27, 0x44, 0x07, 0x28, 0xb4,
	0xaa, 0x04, 0x70, 0x0a, 0x6d, 0x93, 0x91, 0xf7, 0x55, 0x0a, 0xed, 0xab, 0x05, 0xd6, 0x57, 0x01,
	0x25, 0xaf, 0xdb, 0x13, 0xd9, 0x7e, 0xf3, 0xc1, 0xe8, 0xf2, 0xf3, 0x94, 0xdc, 0xbe, 0x9c, 0x29,
	0xf9, 0xf3, 0x8e, 0xc8, 0xf6, 0xed, 0x8b, 0x30, 0xa3, 0xb8, 0x4c, 0x3a, 0x9d, 0x66, 0xa8, 0x6e,
	0x1d, 0x24, 0x8b, 0x3b, 0x9d, 0x8e, 0x5c, 0xd4, 0xba, 0xb0, 0x37, 0xda, 0x15, 0xa5, 0xdc, 0xae,
	0x9c, 0x49, 0x8f, 0x1b, 0x7f, 0x1a, 0xc3, 0xd2, 0x1a, 0xee, 0x47, 0xc2, 0x6f, 0x46, 0xa4, 0x81,
	0x04, 0xd9, 0x4e, 0x47, 0xee, 0x9d, 0x04, 0x95, 0x47, 0xa6, 0xb9, 0xb2, 0x9b, 0x52, 0x33, 0x1e,
	0xdd, 0xb2, 0xa9, 0x71, 0x88, 0xc2, 0xf5, 0x7d, 0x5d, 0xc3, 0x4e, 0xf6, 0x52, 0x4c, 0x4e, 0xf4,
	0x52, 0x1c, 0x46, 0x8a, 0xfb, 0xd0, 0x07, 0xc3, 0x48, 0x71, 0x3f, 0xfa, 0x83, 0x9a, 0x4c, 0x8a,
	0xe9, 0xe8, 0xa2, 0xdf, 0x9c, 0xe0, 0xf1, 0x32, 0x90, 0x4c, 0xf1, 0x07, 0x16, 0x34, 0xd8, 0xff,
	0x81, 0x17, 0x70, 0x36, 0xba, 0xb0, 0x4c, 0xc3, 0xbc, 0x2d, 0x9c, 0xd9, 0x43, 0xbf, 0x77, 0x5f,
	0x71, 0x80, 0x01, 0xa3, 0x6b, 0xcd, 0x48, 0x9b, 0xf9, 0x08, 0x43, 0xde, 0xd4, 0x35, 0xe8, 0x2c,
	0x69, 0xb0, 0x0a, 0xa7, 0xd7, 0x8d, 0xed, 0xaf, 0xc2, 0x94, 0x4e, 0x61, 0xd8, 0x1f, 0xb9, 0x19,
	0x83, 0x4e, 0x62, 0x38, 0xd9, 0xe6, 0xec, 0x85, 0xdf, 0xb6, 0x60, 0x5a, 0x1b, 0x55, 0x34, 0x0f,
	0x46, 0x1d, 0x06, 0xa8, 0x62, 0xc0, 0xe1, 0x4c, 0xc5, 0x79, 0x84, 0xc1, 0xa7, 0xed, 0x5f, 0x81,
	0xb3, 0xc4, 0xc3, 0xe1, 0xe8, 0x52, 0x6c, 0x0e, 0x3c, 0xc4, 0x39, 0xd4, 0xa6, 0xfd, 0x2a, 0xac,
	0x1e, 0xa5, 0x71, 0xdd, 0x3a, 0x3e, 0x22, 0x35, 0xef, 0x28, 0x8d, 0x07, 0x16, 0xf1, 0xf7, 0x2c,
	0x58, 0x1c, 0xa0, 0x6a, 0x1e, 0x8f, 0x50, 0xc0, 0x9b, 0x0d, 0x39, 0xf3, 0x15, 0x9e, 0xec, 0x1f,
	0xca, 0xa9, 0xae, 0x3b, 0x69, 0x26, 0x7e, 0xfd, 0xe5, 0x91, 0xbc, 0x1f, 0xd4, 0xbd, 0xc8, 0x38,
	0x4b, 0xb9, 0xa0, 0xd9, 0x6d, 0x66, 0x7f, 0x2d, 0x27, 0xdc, 0xf9, 0x95, 0x6a, 0xc2, 0x9d, 0x17,
	0x61, 0x89, 0xcb, 0x14, 0xf3, 0x38, 0xf4, 0x5f, 0x26, 0x8f, 0x0c, 0x2e, 0xa2, 0x5a, 0x71, 0xe0,
	0xbf, 0x6e, 0x99, 0x19, 0xef, 0xbe, 0x32, 0xba, 0x2b, 0xe4, 0xea, 0x3b, 0x84, 0x91, 0xf4, 0xee,
	0x65, 0x58, 0x2e, 0xbf, 0x8b, 0x70, 0x84, 0x96, 0xaf, 0xd2, 0x79, 0xd8, 0x7c, 0x11, 0xe1, 0x80,
	0x2c, 0x8f, 0x43, 0xa3, 0x44, 0xd1, 0xfc, 0x55, 0x36, 0x76, 0x34, 0x50, 0xe5, 0xd1, 0x01, 0xc3,
	0x3b, 0x61, 0x78, 0x88, 0x2e, 0x69, 0x8e, 0x5f, 0xb3, 0x8a, 0xcc, 0x42, 0xb7, 0xe2, 0x64, 0x9b,
	0xc0, 0xf6, 0x06, 0x4c, 0x05, 0x19, 0x8e, 0x94, 0xdf, 0xfc, 0x3a, 0xbd, 0x85, 0x4c, 0x06, 0x99,
	0x1c, 0x20, 0xdf, 0xfe, 0x0c, 0x9c, 0xd3, 0x69, 0xe8, 0x0c, 0x93, 0x35, 0x95, 0x52, 0xe4, 0x1b,
	0x84, 0xde, 0xe4, 0xbc, 0x74, 0x85, 0x26, 0xa6, 0xf2, 0x89, 0x5c, 0x81, 0x39, 0x4d, 0x4f, 0xcc,
	0xfe, 0x9a, 0xa5, 0x13, 0x82, 0x49, 0x12, 0x95, 0x8f, 0xbc, 0x9c, 0x29, 0xe9, 0x9b, 0xd6, 0x60,
	0xaa, 0xa4, 0x67, 0x6a, 0x52, 0x25, 0x7d, 0xcb, 0xaa, 0xcd, 0x95, 0xf4, 0x6c, 0x4d, 0xae, 0xa4,
	0x6f, 0x5b, 0xf5, 0xc9, 0x92, 0x5e, 0xac, 0x4d, 0x96, 0xf4, 0xeb, 0xd6, 0xb0, 0x6c, 0x49, 0x3f,
	0x0f, 0xcf, 0x4a, 0x95, 0x83, 0xae, 0x3a, 0xbc, 0x28, 0x8a, 0xfb, 0x72, 0xca, 0x6a, 0xe3, 0x96,
	0x72, 0xea, 0xc2, 0xe6, 0x6f, 0x50, 0x47, 0x9e, 0xd4, 0x24, 0x57, 0x99, 0x42, 0x59, 0xba, 0x94,
	0x72, 0x0d, 0xca, 0x09, 0x8c, 0x7d, 0x64, 0xeb, 0x72, 0xf5, 0x1e, 0xf3, 0x1d, 0x7e, 0xd1, 0x97,
	0x65, 0x6c, 0x5b, 0x8e, 0x8f, 0x32, 0xed, 0x09, 0xf9, 0x4d, 0xe2, 0x57, 0xff, 0xbf, 0x00, 0x00,
	0x00, 0xff, 0xff, 0xe9, 0x4c, 0x23, 0xc9, 0xad, 0x14, 0x01, 0x00,
}
