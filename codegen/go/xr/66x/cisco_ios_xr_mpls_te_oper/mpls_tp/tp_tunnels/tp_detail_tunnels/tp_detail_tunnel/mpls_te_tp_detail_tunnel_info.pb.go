/*
Copyright 2019 Cisco Systems

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: mpls_te_tp_detail_tunnel_info.proto

package cisco_ios_xr_mpls_te_oper_mpls_tp_tp_tunnels_tp_detail_tunnels_tp_detail_tunnel

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type MplsTeTpDetailTunnelInfo_KEYS struct {
	TpTunnelName         string   `protobuf:"bytes,1,opt,name=tp_tunnel_name,json=tpTunnelName,proto3" json:"tp_tunnel_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MplsTeTpDetailTunnelInfo_KEYS) Reset()         { *m = MplsTeTpDetailTunnelInfo_KEYS{} }
func (m *MplsTeTpDetailTunnelInfo_KEYS) String() string { return proto.CompactTextString(m) }
func (*MplsTeTpDetailTunnelInfo_KEYS) ProtoMessage()    {}
func (*MplsTeTpDetailTunnelInfo_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_419cbb6788e8c883, []int{0}
}

func (m *MplsTeTpDetailTunnelInfo_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsTeTpDetailTunnelInfo_KEYS.Unmarshal(m, b)
}
func (m *MplsTeTpDetailTunnelInfo_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsTeTpDetailTunnelInfo_KEYS.Marshal(b, m, deterministic)
}
func (m *MplsTeTpDetailTunnelInfo_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsTeTpDetailTunnelInfo_KEYS.Merge(m, src)
}
func (m *MplsTeTpDetailTunnelInfo_KEYS) XXX_Size() int {
	return xxx_messageInfo_MplsTeTpDetailTunnelInfo_KEYS.Size(m)
}
func (m *MplsTeTpDetailTunnelInfo_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsTeTpDetailTunnelInfo_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_MplsTeTpDetailTunnelInfo_KEYS proto.InternalMessageInfo

func (m *MplsTeTpDetailTunnelInfo_KEYS) GetTpTunnelName() string {
	if m != nil {
		return m.TpTunnelName
	}
	return ""
}

type MplsTeTpTunnelLspInfo struct {
	LspId                uint32   `protobuf:"varint,1,opt,name=lsp_id,json=lspId,proto3" json:"lsp_id,omitempty"`
	State                string   `protobuf:"bytes,2,opt,name=state,proto3" json:"state,omitempty"`
	LockOut              bool     `protobuf:"varint,3,opt,name=lock_out,json=lockOut,proto3" json:"lock_out,omitempty"`
	RxOamState           string   `protobuf:"bytes,4,opt,name=rx_oam_state,json=rxOamState,proto3" json:"rx_oam_state,omitempty"`
	TxOamState           string   `protobuf:"bytes,5,opt,name=tx_oam_state,json=txOamState,proto3" json:"tx_oam_state,omitempty"`
	BfdState             string   `protobuf:"bytes,6,opt,name=bfd_state,json=bfdState,proto3" json:"bfd_state,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MplsTeTpTunnelLspInfo) Reset()         { *m = MplsTeTpTunnelLspInfo{} }
func (m *MplsTeTpTunnelLspInfo) String() string { return proto.CompactTextString(m) }
func (*MplsTeTpTunnelLspInfo) ProtoMessage()    {}
func (*MplsTeTpTunnelLspInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_419cbb6788e8c883, []int{1}
}

func (m *MplsTeTpTunnelLspInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsTeTpTunnelLspInfo.Unmarshal(m, b)
}
func (m *MplsTeTpTunnelLspInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsTeTpTunnelLspInfo.Marshal(b, m, deterministic)
}
func (m *MplsTeTpTunnelLspInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsTeTpTunnelLspInfo.Merge(m, src)
}
func (m *MplsTeTpTunnelLspInfo) XXX_Size() int {
	return xxx_messageInfo_MplsTeTpTunnelLspInfo.Size(m)
}
func (m *MplsTeTpTunnelLspInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsTeTpTunnelLspInfo.DiscardUnknown(m)
}

var xxx_messageInfo_MplsTeTpTunnelLspInfo proto.InternalMessageInfo

func (m *MplsTeTpTunnelLspInfo) GetLspId() uint32 {
	if m != nil {
		return m.LspId
	}
	return 0
}

func (m *MplsTeTpTunnelLspInfo) GetState() string {
	if m != nil {
		return m.State
	}
	return ""
}

func (m *MplsTeTpTunnelLspInfo) GetLockOut() bool {
	if m != nil {
		return m.LockOut
	}
	return false
}

func (m *MplsTeTpTunnelLspInfo) GetRxOamState() string {
	if m != nil {
		return m.RxOamState
	}
	return ""
}

func (m *MplsTeTpTunnelLspInfo) GetTxOamState() string {
	if m != nil {
		return m.TxOamState
	}
	return ""
}

func (m *MplsTeTpTunnelLspInfo) GetBfdState() string {
	if m != nil {
		return m.BfdState
	}
	return ""
}

type MplsTeTpTunnelInfo struct {
	TunnelName           string                 `protobuf:"bytes,1,opt,name=tunnel_name,json=tunnelName,proto3" json:"tunnel_name,omitempty"`
	SourceTunnelId       uint32                 `protobuf:"varint,2,opt,name=source_tunnel_id,json=sourceTunnelId,proto3" json:"source_tunnel_id,omitempty"`
	SourceNodeId         string                 `protobuf:"bytes,3,opt,name=source_node_id,json=sourceNodeId,proto3" json:"source_node_id,omitempty"`
	SourceGlobalId       uint32                 `protobuf:"varint,4,opt,name=source_global_id,json=sourceGlobalId,proto3" json:"source_global_id,omitempty"`
	DestinationNodeId    string                 `protobuf:"bytes,5,opt,name=destination_node_id,json=destinationNodeId,proto3" json:"destination_node_id,omitempty"`
	DestinationGlobalId  uint32                 `protobuf:"varint,6,opt,name=destination_global_id,json=destinationGlobalId,proto3" json:"destination_global_id,omitempty"`
	RemoteTunnelId       uint32                 `protobuf:"varint,7,opt,name=remote_tunnel_id,json=remoteTunnelId,proto3" json:"remote_tunnel_id,omitempty"`
	AdminStatus          string                 `protobuf:"bytes,8,opt,name=admin_status,json=adminStatus,proto3" json:"admin_status,omitempty"`
	OperationStatus      string                 `protobuf:"bytes,9,opt,name=operation_status,json=operationStatus,proto3" json:"operation_status,omitempty"`
	WorkingLsp           *MplsTeTpTunnelLspInfo `protobuf:"bytes,10,opt,name=working_lsp,json=workingLsp,proto3" json:"working_lsp,omitempty"`
	ProtectLsp           *MplsTeTpTunnelLspInfo `protobuf:"bytes,11,opt,name=protect_lsp,json=protectLsp,proto3" json:"protect_lsp,omitempty"`
	ActiveLsp            string                 `protobuf:"bytes,12,opt,name=active_lsp,json=activeLsp,proto3" json:"active_lsp,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *MplsTeTpTunnelInfo) Reset()         { *m = MplsTeTpTunnelInfo{} }
func (m *MplsTeTpTunnelInfo) String() string { return proto.CompactTextString(m) }
func (*MplsTeTpTunnelInfo) ProtoMessage()    {}
func (*MplsTeTpTunnelInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_419cbb6788e8c883, []int{2}
}

func (m *MplsTeTpTunnelInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsTeTpTunnelInfo.Unmarshal(m, b)
}
func (m *MplsTeTpTunnelInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsTeTpTunnelInfo.Marshal(b, m, deterministic)
}
func (m *MplsTeTpTunnelInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsTeTpTunnelInfo.Merge(m, src)
}
func (m *MplsTeTpTunnelInfo) XXX_Size() int {
	return xxx_messageInfo_MplsTeTpTunnelInfo.Size(m)
}
func (m *MplsTeTpTunnelInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsTeTpTunnelInfo.DiscardUnknown(m)
}

var xxx_messageInfo_MplsTeTpTunnelInfo proto.InternalMessageInfo

func (m *MplsTeTpTunnelInfo) GetTunnelName() string {
	if m != nil {
		return m.TunnelName
	}
	return ""
}

func (m *MplsTeTpTunnelInfo) GetSourceTunnelId() uint32 {
	if m != nil {
		return m.SourceTunnelId
	}
	return 0
}

func (m *MplsTeTpTunnelInfo) GetSourceNodeId() string {
	if m != nil {
		return m.SourceNodeId
	}
	return ""
}

func (m *MplsTeTpTunnelInfo) GetSourceGlobalId() uint32 {
	if m != nil {
		return m.SourceGlobalId
	}
	return 0
}

func (m *MplsTeTpTunnelInfo) GetDestinationNodeId() string {
	if m != nil {
		return m.DestinationNodeId
	}
	return ""
}

func (m *MplsTeTpTunnelInfo) GetDestinationGlobalId() uint32 {
	if m != nil {
		return m.DestinationGlobalId
	}
	return 0
}

func (m *MplsTeTpTunnelInfo) GetRemoteTunnelId() uint32 {
	if m != nil {
		return m.RemoteTunnelId
	}
	return 0
}

func (m *MplsTeTpTunnelInfo) GetAdminStatus() string {
	if m != nil {
		return m.AdminStatus
	}
	return ""
}

func (m *MplsTeTpTunnelInfo) GetOperationStatus() string {
	if m != nil {
		return m.OperationStatus
	}
	return ""
}

func (m *MplsTeTpTunnelInfo) GetWorkingLsp() *MplsTeTpTunnelLspInfo {
	if m != nil {
		return m.WorkingLsp
	}
	return nil
}

func (m *MplsTeTpTunnelInfo) GetProtectLsp() *MplsTeTpTunnelLspInfo {
	if m != nil {
		return m.ProtectLsp
	}
	return nil
}

func (m *MplsTeTpTunnelInfo) GetActiveLsp() string {
	if m != nil {
		return m.ActiveLsp
	}
	return ""
}

type MplsTeTpDetailTunnelLspInfo struct {
	BriefInformation     *MplsTeTpTunnelLspInfo `protobuf:"bytes,1,opt,name=brief_information,json=briefInformation,proto3" json:"brief_information,omitempty"`
	OamRefreshInterval   uint32                 `protobuf:"varint,2,opt,name=oam_refresh_interval,json=oamRefreshInterval,proto3" json:"oam_refresh_interval,omitempty"`
	TpOutLabel           uint32                 `protobuf:"varint,3,opt,name=tp_out_label,json=tpOutLabel,proto3" json:"tp_out_label,omitempty"`
	LinkId               uint32                 `protobuf:"varint,4,opt,name=link_id,json=linkId,proto3" json:"link_id,omitempty"`
	OutInterfaceName     string                 `protobuf:"bytes,5,opt,name=out_interface_name,json=outInterfaceName,proto3" json:"out_interface_name,omitempty"`
	OutNextHop           string                 `protobuf:"bytes,6,opt,name=out_next_hop,json=outNextHop,proto3" json:"out_next_hop,omitempty"`
	InLabel              uint32                 `protobuf:"varint,7,opt,name=in_label,json=inLabel,proto3" json:"in_label,omitempty"`
	ReservedBandwidth    uint32                 `protobuf:"varint,8,opt,name=reserved_bandwidth,json=reservedBandwidth,proto3" json:"reserved_bandwidth,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *MplsTeTpDetailTunnelLspInfo) Reset()         { *m = MplsTeTpDetailTunnelLspInfo{} }
func (m *MplsTeTpDetailTunnelLspInfo) String() string { return proto.CompactTextString(m) }
func (*MplsTeTpDetailTunnelLspInfo) ProtoMessage()    {}
func (*MplsTeTpDetailTunnelLspInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_419cbb6788e8c883, []int{3}
}

func (m *MplsTeTpDetailTunnelLspInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsTeTpDetailTunnelLspInfo.Unmarshal(m, b)
}
func (m *MplsTeTpDetailTunnelLspInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsTeTpDetailTunnelLspInfo.Marshal(b, m, deterministic)
}
func (m *MplsTeTpDetailTunnelLspInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsTeTpDetailTunnelLspInfo.Merge(m, src)
}
func (m *MplsTeTpDetailTunnelLspInfo) XXX_Size() int {
	return xxx_messageInfo_MplsTeTpDetailTunnelLspInfo.Size(m)
}
func (m *MplsTeTpDetailTunnelLspInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsTeTpDetailTunnelLspInfo.DiscardUnknown(m)
}

var xxx_messageInfo_MplsTeTpDetailTunnelLspInfo proto.InternalMessageInfo

func (m *MplsTeTpDetailTunnelLspInfo) GetBriefInformation() *MplsTeTpTunnelLspInfo {
	if m != nil {
		return m.BriefInformation
	}
	return nil
}

func (m *MplsTeTpDetailTunnelLspInfo) GetOamRefreshInterval() uint32 {
	if m != nil {
		return m.OamRefreshInterval
	}
	return 0
}

func (m *MplsTeTpDetailTunnelLspInfo) GetTpOutLabel() uint32 {
	if m != nil {
		return m.TpOutLabel
	}
	return 0
}

func (m *MplsTeTpDetailTunnelLspInfo) GetLinkId() uint32 {
	if m != nil {
		return m.LinkId
	}
	return 0
}

func (m *MplsTeTpDetailTunnelLspInfo) GetOutInterfaceName() string {
	if m != nil {
		return m.OutInterfaceName
	}
	return ""
}

func (m *MplsTeTpDetailTunnelLspInfo) GetOutNextHop() string {
	if m != nil {
		return m.OutNextHop
	}
	return ""
}

func (m *MplsTeTpDetailTunnelLspInfo) GetInLabel() uint32 {
	if m != nil {
		return m.InLabel
	}
	return 0
}

func (m *MplsTeTpDetailTunnelLspInfo) GetReservedBandwidth() uint32 {
	if m != nil {
		return m.ReservedBandwidth
	}
	return 0
}

type MplsTeTpOamProtTrigger struct {
	Ais                  bool     `protobuf:"varint,1,opt,name=ais,proto3" json:"ais,omitempty"`
	Ldi                  bool     `protobuf:"varint,2,opt,name=ldi,proto3" json:"ldi,omitempty"`
	Lkr                  bool     `protobuf:"varint,3,opt,name=lkr,proto3" json:"lkr,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MplsTeTpOamProtTrigger) Reset()         { *m = MplsTeTpOamProtTrigger{} }
func (m *MplsTeTpOamProtTrigger) String() string { return proto.CompactTextString(m) }
func (*MplsTeTpOamProtTrigger) ProtoMessage()    {}
func (*MplsTeTpOamProtTrigger) Descriptor() ([]byte, []int) {
	return fileDescriptor_419cbb6788e8c883, []int{4}
}

func (m *MplsTeTpOamProtTrigger) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsTeTpOamProtTrigger.Unmarshal(m, b)
}
func (m *MplsTeTpOamProtTrigger) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsTeTpOamProtTrigger.Marshal(b, m, deterministic)
}
func (m *MplsTeTpOamProtTrigger) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsTeTpOamProtTrigger.Merge(m, src)
}
func (m *MplsTeTpOamProtTrigger) XXX_Size() int {
	return xxx_messageInfo_MplsTeTpOamProtTrigger.Size(m)
}
func (m *MplsTeTpOamProtTrigger) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsTeTpOamProtTrigger.DiscardUnknown(m)
}

var xxx_messageInfo_MplsTeTpOamProtTrigger proto.InternalMessageInfo

func (m *MplsTeTpOamProtTrigger) GetAis() bool {
	if m != nil {
		return m.Ais
	}
	return false
}

func (m *MplsTeTpOamProtTrigger) GetLdi() bool {
	if m != nil {
		return m.Ldi
	}
	return false
}

func (m *MplsTeTpOamProtTrigger) GetLkr() bool {
	if m != nil {
		return m.Lkr
	}
	return false
}

type MplsTeTpDetailTunnelInfo struct {
	Tunnel                       *MplsTeTpTunnelInfo          `protobuf:"bytes,50,opt,name=tunnel,proto3" json:"tunnel,omitempty"`
	WorkingLsp                   *MplsTeTpDetailTunnelLspInfo `protobuf:"bytes,51,opt,name=working_lsp,json=workingLsp,proto3" json:"working_lsp,omitempty"`
	ProtectLsp                   *MplsTeTpDetailTunnelLspInfo `protobuf:"bytes,52,opt,name=protect_lsp,json=protectLsp,proto3" json:"protect_lsp,omitempty"`
	ReqBandwidth                 uint32                       `protobuf:"varint,53,opt,name=req_bandwidth,json=reqBandwidth,proto3" json:"req_bandwidth,omitempty"`
	OamInterval                  uint32                       `protobuf:"varint,54,opt,name=oam_interval,json=oamInterval,proto3" json:"oam_interval,omitempty"`
	BfdIntervalActive            uint32                       `protobuf:"varint,55,opt,name=bfd_interval_active,json=bfdIntervalActive,proto3" json:"bfd_interval_active,omitempty"`
	BfdIntervalActiveInMicroSec  bool                         `protobuf:"varint,56,opt,name=bfd_interval_active_in_micro_sec,json=bfdIntervalActiveInMicroSec,proto3" json:"bfd_interval_active_in_micro_sec,omitempty"`
	BfdMultiplierActive          uint32                       `protobuf:"varint,57,opt,name=bfd_multiplier_active,json=bfdMultiplierActive,proto3" json:"bfd_multiplier_active,omitempty"`
	BfdIntervalStandby           uint32                       `protobuf:"varint,58,opt,name=bfd_interval_standby,json=bfdIntervalStandby,proto3" json:"bfd_interval_standby,omitempty"`
	BfdIntervalStandbyInMicroSec bool                         `protobuf:"varint,59,opt,name=bfd_interval_standby_in_micro_sec,json=bfdIntervalStandbyInMicroSec,proto3" json:"bfd_interval_standby_in_micro_sec,omitempty"`
	BfdMultiplierStandby         uint32                       `protobuf:"varint,60,opt,name=bfd_multiplier_standby,json=bfdMultiplierStandby,proto3" json:"bfd_multiplier_standby,omitempty"`
	TunnelUpTime                 uint32                       `protobuf:"varint,61,opt,name=tunnel_up_time,json=tunnelUpTime,proto3" json:"tunnel_up_time,omitempty"`
	OamProtectionTriggers        *MplsTeTpOamProtTrigger      `protobuf:"bytes,62,opt,name=oam_protection_triggers,json=oamProtectionTriggers,proto3" json:"oam_protection_triggers,omitempty"`
	SwitchoverTrig               string                       `protobuf:"bytes,63,opt,name=switchover_trig,json=switchoverTrig,proto3" json:"switchover_trig,omitempty"`
	SwitchOverTime               uint32                       `protobuf:"varint,64,opt,name=switch_over_time,json=switchOverTime,proto3" json:"switch_over_time,omitempty"`
	XXX_NoUnkeyedLiteral         struct{}                     `json:"-"`
	XXX_unrecognized             []byte                       `json:"-"`
	XXX_sizecache                int32                        `json:"-"`
}

func (m *MplsTeTpDetailTunnelInfo) Reset()         { *m = MplsTeTpDetailTunnelInfo{} }
func (m *MplsTeTpDetailTunnelInfo) String() string { return proto.CompactTextString(m) }
func (*MplsTeTpDetailTunnelInfo) ProtoMessage()    {}
func (*MplsTeTpDetailTunnelInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_419cbb6788e8c883, []int{5}
}

func (m *MplsTeTpDetailTunnelInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsTeTpDetailTunnelInfo.Unmarshal(m, b)
}
func (m *MplsTeTpDetailTunnelInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsTeTpDetailTunnelInfo.Marshal(b, m, deterministic)
}
func (m *MplsTeTpDetailTunnelInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsTeTpDetailTunnelInfo.Merge(m, src)
}
func (m *MplsTeTpDetailTunnelInfo) XXX_Size() int {
	return xxx_messageInfo_MplsTeTpDetailTunnelInfo.Size(m)
}
func (m *MplsTeTpDetailTunnelInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsTeTpDetailTunnelInfo.DiscardUnknown(m)
}

var xxx_messageInfo_MplsTeTpDetailTunnelInfo proto.InternalMessageInfo

func (m *MplsTeTpDetailTunnelInfo) GetTunnel() *MplsTeTpTunnelInfo {
	if m != nil {
		return m.Tunnel
	}
	return nil
}

func (m *MplsTeTpDetailTunnelInfo) GetWorkingLsp() *MplsTeTpDetailTunnelLspInfo {
	if m != nil {
		return m.WorkingLsp
	}
	return nil
}

func (m *MplsTeTpDetailTunnelInfo) GetProtectLsp() *MplsTeTpDetailTunnelLspInfo {
	if m != nil {
		return m.ProtectLsp
	}
	return nil
}

func (m *MplsTeTpDetailTunnelInfo) GetReqBandwidth() uint32 {
	if m != nil {
		return m.ReqBandwidth
	}
	return 0
}

func (m *MplsTeTpDetailTunnelInfo) GetOamInterval() uint32 {
	if m != nil {
		return m.OamInterval
	}
	return 0
}

func (m *MplsTeTpDetailTunnelInfo) GetBfdIntervalActive() uint32 {
	if m != nil {
		return m.BfdIntervalActive
	}
	return 0
}

func (m *MplsTeTpDetailTunnelInfo) GetBfdIntervalActiveInMicroSec() bool {
	if m != nil {
		return m.BfdIntervalActiveInMicroSec
	}
	return false
}

func (m *MplsTeTpDetailTunnelInfo) GetBfdMultiplierActive() uint32 {
	if m != nil {
		return m.BfdMultiplierActive
	}
	return 0
}

func (m *MplsTeTpDetailTunnelInfo) GetBfdIntervalStandby() uint32 {
	if m != nil {
		return m.BfdIntervalStandby
	}
	return 0
}

func (m *MplsTeTpDetailTunnelInfo) GetBfdIntervalStandbyInMicroSec() bool {
	if m != nil {
		return m.BfdIntervalStandbyInMicroSec
	}
	return false
}

func (m *MplsTeTpDetailTunnelInfo) GetBfdMultiplierStandby() uint32 {
	if m != nil {
		return m.BfdMultiplierStandby
	}
	return 0
}

func (m *MplsTeTpDetailTunnelInfo) GetTunnelUpTime() uint32 {
	if m != nil {
		return m.TunnelUpTime
	}
	return 0
}

func (m *MplsTeTpDetailTunnelInfo) GetOamProtectionTriggers() *MplsTeTpOamProtTrigger {
	if m != nil {
		return m.OamProtectionTriggers
	}
	return nil
}

func (m *MplsTeTpDetailTunnelInfo) GetSwitchoverTrig() string {
	if m != nil {
		return m.SwitchoverTrig
	}
	return ""
}

func (m *MplsTeTpDetailTunnelInfo) GetSwitchOverTime() uint32 {
	if m != nil {
		return m.SwitchOverTime
	}
	return 0
}

func init() {
	proto.RegisterType((*MplsTeTpDetailTunnelInfo_KEYS)(nil), "cisco_ios_xr_mpls_te_oper.mpls_tp.tp_tunnels.tp_detail_tunnels.tp_detail_tunnel.mpls_te_tp_detail_tunnel_info_KEYS")
	proto.RegisterType((*MplsTeTpTunnelLspInfo)(nil), "cisco_ios_xr_mpls_te_oper.mpls_tp.tp_tunnels.tp_detail_tunnels.tp_detail_tunnel.mpls_te_tp_tunnel_lsp_info")
	proto.RegisterType((*MplsTeTpTunnelInfo)(nil), "cisco_ios_xr_mpls_te_oper.mpls_tp.tp_tunnels.tp_detail_tunnels.tp_detail_tunnel.mpls_te_tp_tunnel_info")
	proto.RegisterType((*MplsTeTpDetailTunnelLspInfo)(nil), "cisco_ios_xr_mpls_te_oper.mpls_tp.tp_tunnels.tp_detail_tunnels.tp_detail_tunnel.mpls_te_tp_detail_tunnel_lsp_info")
	proto.RegisterType((*MplsTeTpOamProtTrigger)(nil), "cisco_ios_xr_mpls_te_oper.mpls_tp.tp_tunnels.tp_detail_tunnels.tp_detail_tunnel.mpls_te_tp_oam_prot_trigger")
	proto.RegisterType((*MplsTeTpDetailTunnelInfo)(nil), "cisco_ios_xr_mpls_te_oper.mpls_tp.tp_tunnels.tp_detail_tunnels.tp_detail_tunnel.mpls_te_tp_detail_tunnel_info")
}

func init() {
	proto.RegisterFile("mpls_te_tp_detail_tunnel_info.proto", fileDescriptor_419cbb6788e8c883)
}

var fileDescriptor_419cbb6788e8c883 = []byte{
	// 1005 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xc4, 0x56, 0xcf, 0x6e, 0xdb, 0xc6,
	0x13, 0x86, 0x7e, 0x8e, 0x65, 0x79, 0x24, 0x3b, 0xf2, 0xc6, 0x4e, 0xf8, 0xab, 0x1b, 0x54, 0x56,
	0x0a, 0x54, 0x05, 0x5a, 0x21, 0x70, 0xd2, 0xff, 0xff, 0x0b, 0x04, 0xa9, 0x5a, 0xc7, 0x2a, 0x28,
	0xf7, 0xd0, 0xd3, 0x82, 0xe4, 0xae, 0xe4, 0x85, 0x48, 0x2e, 0xb3, 0x5c, 0xda, 0xea, 0xa9, 0x2f,
	0xd0, 0x43, 0x81, 0x5c, 0xfa, 0x00, 0x7d, 0x95, 0xdc, 0xfa, 0x50, 0xc5, 0xce, 0x2e, 0x29, 0x5a,
	0x72, 0x72, 0x6a, 0x92, 0x1b, 0x77, 0xe6, 0x9b, 0x99, 0x6f, 0x87, 0xf3, 0x0d, 0x09, 0xf7, 0x92,
	0x2c, 0xce, 0xa9, 0xe6, 0x54, 0x67, 0x94, 0x71, 0x1d, 0x88, 0x98, 0xea, 0x22, 0x4d, 0x79, 0x4c,
	0x45, 0x3a, 0x95, 0xc3, 0x4c, 0x49, 0x2d, 0xc9, 0x38, 0x12, 0x79, 0x24, 0xa9, 0x90, 0x39, 0x5d,
	0x28, 0x5a, 0x46, 0xc8, 0x8c, 0xab, 0xa1, 0x3d, 0x64, 0x43, 0x9d, 0xb9, 0xb8, 0x7c, 0xb8, 0x9a,
	0x69, 0xdd, 0xd2, 0xff, 0x11, 0xfa, 0x2f, 0xad, 0x4b, 0x7f, 0x7a, 0xf4, 0xeb, 0x84, 0xbc, 0x0b,
	0xbb, 0x55, 0x5a, 0x9a, 0x06, 0x09, 0xf7, 0x1a, 0xbd, 0xc6, 0x60, 0xdb, 0xef, 0xe8, 0xec, 0x0c,
	0x8d, 0xa7, 0x41, 0xc2, 0xfb, 0xcf, 0x1b, 0xf0, 0x56, 0x2d, 0x99, 0x83, 0xc7, 0x79, 0x86, 0x99,
	0xc8, 0x01, 0x34, 0xf1, 0x99, 0x61, 0xf0, 0x8e, 0xbf, 0x19, 0xe7, 0xd9, 0x88, 0x91, 0x7d, 0xd8,
	0xcc, 0x75, 0xa0, 0xb9, 0xf7, 0x3f, 0x4c, 0x69, 0x0f, 0xe4, 0xff, 0xd0, 0x8a, 0x65, 0x34, 0xa7,
	0xb2, 0xd0, 0xde, 0x46, 0xaf, 0x31, 0x68, 0xf9, 0x5b, 0xe6, 0x3c, 0x2e, 0x34, 0xe9, 0x41, 0x47,
	0x2d, 0xa8, 0x0c, 0x12, 0x6a, 0xe3, 0x6e, 0x60, 0x1c, 0xa8, 0xc5, 0x38, 0x48, 0x26, 0x18, 0xdc,
	0x83, 0x8e, 0xae, 0x23, 0x36, 0x2d, 0x42, 0x2f, 0x11, 0x87, 0xb0, 0x1d, 0x4e, 0x99, 0x73, 0x37,
	0xd1, 0xdd, 0x0a, 0xa7, 0x0c, 0x9d, 0xfd, 0x7f, 0x36, 0xe1, 0xf6, 0xfa, 0x3d, 0xf0, 0x0e, 0xef,
	0x40, 0x7b, 0xbd, 0x0b, 0xa0, 0xab, 0x1e, 0x90, 0x01, 0x74, 0x73, 0x59, 0xa8, 0x88, 0x57, 0x61,
	0x0c, 0x2f, 0xb6, 0xe3, 0xef, 0x5a, 0xbb, 0xed, 0xd7, 0x88, 0x99, 0x9e, 0x3a, 0x64, 0x2a, 0x19,
	0x37, 0xb8, 0x0d, 0xdb, 0x53, 0x6b, 0x3d, 0x95, 0x8c, 0x8f, 0x58, 0x2d, 0xdf, 0x2c, 0x96, 0x61,
	0x80, 0xf9, 0x6e, 0xd4, 0xf3, 0x3d, 0x46, 0xf3, 0x88, 0x91, 0x21, 0xdc, 0x62, 0x3c, 0xd7, 0x22,
	0x0d, 0xb4, 0x90, 0x69, 0x95, 0xd4, 0xde, 0x7d, 0xaf, 0xe6, 0x72, 0x99, 0x8f, 0xe1, 0xa0, 0x8e,
	0x5f, 0xa6, 0x6f, 0x62, 0xfa, 0x7a, 0xb2, 0xaa, 0xc6, 0x00, 0xba, 0x8a, 0x27, 0x52, 0xd7, 0x6f,
	0xb7, 0x65, 0xd9, 0x58, 0x7b, 0x75, 0xbb, 0x23, 0xe8, 0x04, 0x2c, 0x11, 0x29, 0xb6, 0xb8, 0xc8,
	0xbd, 0x16, 0xd2, 0x68, 0xa3, 0x6d, 0x82, 0x26, 0xf2, 0x3e, 0x74, 0xcd, 0xe0, 0xda, 0xf2, 0x0e,
	0xb6, 0x8d, 0xb0, 0x9b, 0x95, 0xdd, 0x41, 0xff, 0x68, 0x40, 0xfb, 0x52, 0xaa, 0xb9, 0x48, 0x67,
	0x66, 0x9e, 0x3c, 0xe8, 0x35, 0x06, 0xed, 0xe3, 0xf9, 0xf0, 0x3f, 0x56, 0xc3, 0xf0, 0xc5, 0xd3,
	0xeb, 0x83, 0xab, 0x7f, 0x92, 0x67, 0x48, 0xc7, 0xe8, 0x91, 0x47, 0x1a, 0xe9, 0xb4, 0xdf, 0x00,
	0x1d, 0x57, 0xdf, 0xd0, 0xb9, 0x0b, 0x10, 0x44, 0x5a, 0x5c, 0x70, 0x24, 0xd3, 0xc1, 0x16, 0x6e,
	0x5b, 0xcb, 0x49, 0x9e, 0xf5, 0x9f, 0x6f, 0xc0, 0xd1, 0x0b, 0x35, 0x5e, 0xa9, 0xf3, 0xaf, 0x06,
	0xec, 0x85, 0x4a, 0xf0, 0x29, 0x1e, 0x55, 0x82, 0xed, 0xc7, 0x01, 0x7f, 0xcd, 0x37, 0xeb, 0x22,
	0x8b, 0xd1, 0x92, 0x04, 0xb9, 0x0f, 0xfb, 0x46, 0xcb, 0x8a, 0x4f, 0x15, 0xcf, 0xcf, 0xa9, 0x48,
	0x35, 0x57, 0x17, 0x41, 0xec, 0x74, 0x45, 0x64, 0x90, 0xf8, 0xd6, 0x35, 0x72, 0x1e, 0x5c, 0x00,
	0x99, 0xd9, 0x1d, 0x34, 0x0e, 0x42, 0x1e, 0xa3, 0xb2, 0x76, 0x7c, 0xd0, 0xd9, 0xb8, 0xd0, 0x27,
	0xc6, 0x42, 0xee, 0xc0, 0x56, 0x2c, 0xd2, 0xf9, 0x52, 0x4e, 0x4d, 0x73, 0x1c, 0x31, 0xf2, 0x01,
	0x10, 0x13, 0x87, 0x45, 0xa6, 0x81, 0x51, 0xa7, 0x11, 0xba, 0x55, 0x51, 0x57, 0x16, 0x7a, 0x54,
	0x3a, 0x50, 0xee, 0x3d, 0xe8, 0x18, 0x74, 0xca, 0x17, 0x9a, 0x9e, 0xcb, 0xcc, 0xad, 0x12, 0x90,
	0x85, 0x3e, 0xe5, 0x0b, 0xfd, 0x83, 0xcc, 0xcc, 0x22, 0x13, 0xa9, 0xa3, 0x61, 0xa5, 0xb2, 0x25,
	0x52, 0xcb, 0xe1, 0x43, 0x20, 0x8a, 0xe7, 0x5c, 0x5d, 0x70, 0x46, 0xc3, 0x20, 0x65, 0x97, 0x82,
	0xe9, 0x73, 0x54, 0xca, 0x8e, 0xbf, 0x57, 0x7a, 0xbe, 0x2f, 0x1d, 0xfd, 0x09, 0x1c, 0xd6, 0xda,
	0x66, 0x3a, 0x62, 0x66, 0x80, 0x6a, 0x25, 0x66, 0x33, 0xae, 0x48, 0x17, 0x36, 0x02, 0x91, 0xe3,
	0x1b, 0x6b, 0xf9, 0xe6, 0xd1, 0x58, 0x62, 0x26, 0xb0, 0x4d, 0x2d, 0xdf, 0x3c, 0xa2, 0x65, 0xae,
	0xdc, 0x42, 0x35, 0x8f, 0xfd, 0x3f, 0xb7, 0xe1, 0xee, 0x4b, 0x3f, 0x00, 0xe4, 0x77, 0x68, 0xda,
	0xa3, 0x77, 0x8c, 0xc3, 0x30, 0x7b, 0x0d, 0xc3, 0x80, 0x83, 0xe0, 0xca, 0x92, 0x67, 0x2b, 0xe2,
	0x7f, 0x80, 0x34, 0xd4, 0xab, 0xa4, 0x71, 0xbd, 0x46, 0xae, 0xec, 0x80, 0x67, 0x2b, 0x3b, 0xe0,
	0xe1, 0x9b, 0x63, 0x55, 0x5b, 0x05, 0xf7, 0x60, 0x47, 0xf1, 0xa7, 0xb5, 0x69, 0xfa, 0x08, 0xa7,
	0xa9, 0xa3, 0xf8, 0xd3, 0x6a, 0x90, 0xcc, 0x6e, 0x36, 0xd3, 0x53, 0xe9, 0xe8, 0x63, 0xc4, 0xb4,
	0x65, 0x90, 0x54, 0x02, 0x1a, 0xc2, 0x2d, 0xf3, 0x7d, 0x2c, 0x21, 0xd4, 0x6e, 0x13, 0xef, 0x13,
	0x3b, 0x9b, 0xe1, 0x94, 0x95, 0xc8, 0xef, 0xd0, 0x41, 0x1e, 0x41, 0xef, 0x1a, 0x3c, 0x15, 0x29,
	0x4d, 0x44, 0xa4, 0x24, 0xcd, 0x79, 0xe4, 0x7d, 0x8a, 0x53, 0x77, 0xb8, 0x16, 0x3c, 0x4a, 0x9f,
	0x18, 0xcc, 0x84, 0x47, 0xe6, 0x9b, 0x64, 0xd2, 0x24, 0x45, 0xac, 0x45, 0x16, 0x0b, 0xae, 0xca,
	0xc2, 0x9f, 0xd9, 0x6f, 0x52, 0x38, 0x65, 0x4f, 0x2a, 0x9f, 0x2b, 0x7d, 0x1f, 0xf6, 0xaf, 0x94,
	0xce, 0x75, 0x90, 0xb2, 0xf0, 0x37, 0xef, 0x73, 0xbb, 0x1d, 0x6a, 0xe5, 0x26, 0xd6, 0x43, 0x1e,
	0xc3, 0xd1, 0x75, 0x11, 0x57, 0xd9, 0x7e, 0x81, 0x6c, 0xdf, 0x5e, 0x0f, 0xaf, 0xd1, 0x7d, 0x08,
	0xb7, 0x57, 0xe8, 0x96, 0xc5, 0xbf, 0xc4, 0xe2, 0xfb, 0x57, 0xf8, 0x96, 0xe5, 0xcd, 0xcf, 0x94,
	0x7d, 0x85, 0x45, 0x46, 0xb5, 0x48, 0xb8, 0xf7, 0x95, 0x7d, 0x49, 0xd6, 0xfa, 0x4b, 0x76, 0x26,
	0x12, 0x4e, 0xfe, 0x6e, 0xc0, 0x9d, 0x52, 0xe3, 0x3c, 0xc2, 0x6f, 0xa4, 0x53, 0x7a, 0xee, 0x7d,
	0x8d, 0xb3, 0x16, 0xbf, 0xca, 0x59, 0x5b, 0x5d, 0x2f, 0xfe, 0x81, 0x0c, 0x92, 0x9f, 0x2b, 0x2e,
	0x67, 0x8e, 0x0a, 0x79, 0x0f, 0x6e, 0xe6, 0x97, 0x42, 0x47, 0xe7, 0xf2, 0x82, 0x2b, 0x04, 0x7b,
	0xdf, 0xe0, 0x0e, 0xdc, 0x5d, 0x9a, 0x0d, 0x18, 0x7f, 0x64, 0xd0, 0x42, 0x2d, 0xd2, 0xdc, 0xfb,
	0x5b, 0xf7, 0x23, 0x83, 0xf6, 0xb1, 0x41, 0x8a, 0x84, 0x87, 0x4d, 0xfc, 0xd5, 0x7d, 0xf0, 0x6f,
	0x00, 0x00, 0x00, 0xff, 0xff, 0x27, 0xc5, 0x50, 0x6f, 0x11, 0x0b, 0x00, 0x00,
}
