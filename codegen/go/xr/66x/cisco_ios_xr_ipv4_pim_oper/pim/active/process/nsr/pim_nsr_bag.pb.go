/*
Copyright 2019 Cisco Systems

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: pim_nsr_bag.proto

package cisco_ios_xr_ipv4_pim_oper_pim_active_process_nsr

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type PimNsrBag_KEYS struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PimNsrBag_KEYS) Reset()         { *m = PimNsrBag_KEYS{} }
func (m *PimNsrBag_KEYS) String() string { return proto.CompactTextString(m) }
func (*PimNsrBag_KEYS) ProtoMessage()    {}
func (*PimNsrBag_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_51e55d05dc99ee35, []int{0}
}

func (m *PimNsrBag_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PimNsrBag_KEYS.Unmarshal(m, b)
}
func (m *PimNsrBag_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PimNsrBag_KEYS.Marshal(b, m, deterministic)
}
func (m *PimNsrBag_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PimNsrBag_KEYS.Merge(m, src)
}
func (m *PimNsrBag_KEYS) XXX_Size() int {
	return xxx_messageInfo_PimNsrBag_KEYS.Size(m)
}
func (m *PimNsrBag_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_PimNsrBag_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_PimNsrBag_KEYS proto.InternalMessageInfo

type PimNsrBag struct {
	State                uint32   `protobuf:"varint,50,opt,name=state,proto3" json:"state,omitempty"`
	PartnerConnected     bool     `protobuf:"varint,51,opt,name=partner_connected,json=partnerConnected,proto3" json:"partner_connected,omitempty"`
	RmfNotificationDone  bool     `protobuf:"varint,52,opt,name=rmf_notification_done,json=rmfNotificationDone,proto3" json:"rmf_notification_done,omitempty"`
	RmfTimerValid        bool     `protobuf:"varint,53,opt,name=rmf_timer_valid,json=rmfTimerValid,proto3" json:"rmf_timer_valid,omitempty"`
	RmfTimerExpiry       uint64   `protobuf:"varint,54,opt,name=rmf_timer_expiry,json=rmfTimerExpiry,proto3" json:"rmf_timer_expiry,omitempty"`
	LastConnectionUp     uint64   `protobuf:"varint,55,opt,name=last_connection_up,json=lastConnectionUp,proto3" json:"last_connection_up,omitempty"`
	LastConnectionDn     uint64   `protobuf:"varint,56,opt,name=last_connection_dn,json=lastConnectionDn,proto3" json:"last_connection_dn,omitempty"`
	LastRmfReady         uint64   `protobuf:"varint,57,opt,name=last_rmf_ready,json=lastRmfReady,proto3" json:"last_rmf_ready,omitempty"`
	LastRmfNotReady      uint64   `protobuf:"varint,58,opt,name=last_rmf_not_ready,json=lastRmfNotReady,proto3" json:"last_rmf_not_ready,omitempty"`
	CountConnectionUp    uint32   `protobuf:"varint,59,opt,name=count_connection_up,json=countConnectionUp,proto3" json:"count_connection_up,omitempty"`
	CountConnectionDn    uint32   `protobuf:"varint,60,opt,name=count_connection_dn,json=countConnectionDn,proto3" json:"count_connection_dn,omitempty"`
	CountRmfReady        uint32   `protobuf:"varint,61,opt,name=count_rmf_ready,json=countRmfReady,proto3" json:"count_rmf_ready,omitempty"`
	CountRmfNotReady     uint32   `protobuf:"varint,62,opt,name=count_rmf_not_ready,json=countRmfNotReady,proto3" json:"count_rmf_not_ready,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PimNsrBag) Reset()         { *m = PimNsrBag{} }
func (m *PimNsrBag) String() string { return proto.CompactTextString(m) }
func (*PimNsrBag) ProtoMessage()    {}
func (*PimNsrBag) Descriptor() ([]byte, []int) {
	return fileDescriptor_51e55d05dc99ee35, []int{1}
}

func (m *PimNsrBag) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PimNsrBag.Unmarshal(m, b)
}
func (m *PimNsrBag) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PimNsrBag.Marshal(b, m, deterministic)
}
func (m *PimNsrBag) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PimNsrBag.Merge(m, src)
}
func (m *PimNsrBag) XXX_Size() int {
	return xxx_messageInfo_PimNsrBag.Size(m)
}
func (m *PimNsrBag) XXX_DiscardUnknown() {
	xxx_messageInfo_PimNsrBag.DiscardUnknown(m)
}

var xxx_messageInfo_PimNsrBag proto.InternalMessageInfo

func (m *PimNsrBag) GetState() uint32 {
	if m != nil {
		return m.State
	}
	return 0
}

func (m *PimNsrBag) GetPartnerConnected() bool {
	if m != nil {
		return m.PartnerConnected
	}
	return false
}

func (m *PimNsrBag) GetRmfNotificationDone() bool {
	if m != nil {
		return m.RmfNotificationDone
	}
	return false
}

func (m *PimNsrBag) GetRmfTimerValid() bool {
	if m != nil {
		return m.RmfTimerValid
	}
	return false
}

func (m *PimNsrBag) GetRmfTimerExpiry() uint64 {
	if m != nil {
		return m.RmfTimerExpiry
	}
	return 0
}

func (m *PimNsrBag) GetLastConnectionUp() uint64 {
	if m != nil {
		return m.LastConnectionUp
	}
	return 0
}

func (m *PimNsrBag) GetLastConnectionDn() uint64 {
	if m != nil {
		return m.LastConnectionDn
	}
	return 0
}

func (m *PimNsrBag) GetLastRmfReady() uint64 {
	if m != nil {
		return m.LastRmfReady
	}
	return 0
}

func (m *PimNsrBag) GetLastRmfNotReady() uint64 {
	if m != nil {
		return m.LastRmfNotReady
	}
	return 0
}

func (m *PimNsrBag) GetCountConnectionUp() uint32 {
	if m != nil {
		return m.CountConnectionUp
	}
	return 0
}

func (m *PimNsrBag) GetCountConnectionDn() uint32 {
	if m != nil {
		return m.CountConnectionDn
	}
	return 0
}

func (m *PimNsrBag) GetCountRmfReady() uint32 {
	if m != nil {
		return m.CountRmfReady
	}
	return 0
}

func (m *PimNsrBag) GetCountRmfNotReady() uint32 {
	if m != nil {
		return m.CountRmfNotReady
	}
	return 0
}

func init() {
	proto.RegisterType((*PimNsrBag_KEYS)(nil), "cisco_ios_xr_ipv4_pim_oper.pim.active.process.nsr.pim_nsr_bag_KEYS")
	proto.RegisterType((*PimNsrBag)(nil), "cisco_ios_xr_ipv4_pim_oper.pim.active.process.nsr.pim_nsr_bag")
}

func init() { proto.RegisterFile("pim_nsr_bag.proto", fileDescriptor_51e55d05dc99ee35) }

var fileDescriptor_51e55d05dc99ee35 = []byte{
	// 364 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0xd2, 0x5b, 0x6b, 0xc2, 0x30,
	0x18, 0x06, 0x60, 0x04, 0x37, 0x46, 0x36, 0xb5, 0xc6, 0x0d, 0x72, 0x29, 0x32, 0x46, 0xc1, 0xad,
	0x30, 0x75, 0xe7, 0xc3, 0x8d, 0x7a, 0x35, 0xf0, 0xa2, 0x3b, 0xc0, 0xae, 0x42, 0x4c, 0xd3, 0x11,
	0xb0, 0x49, 0x48, 0xa2, 0xe8, 0x7f, 0xdb, 0x8f, 0x1b, 0x89, 0xad, 0x87, 0xd1, 0xcb, 0xbe, 0xdf,
	0x93, 0x8f, 0x97, 0x34, 0xa0, 0xa9, 0x78, 0x86, 0x85, 0xd1, 0x78, 0x4a, 0x7e, 0x22, 0xa5, 0xa5,
	0x95, 0xf0, 0x9a, 0x72, 0x43, 0x25, 0xe6, 0xd2, 0xe0, 0xa5, 0xc6, 0x5c, 0x2d, 0x06, 0xd8, 0x21,
	0xa9, 0x98, 0x8e, 0x14, 0xcf, 0x22, 0x42, 0x2d, 0x5f, 0x30, 0x87, 0x29, 0x33, 0x26, 0x12, 0x46,
	0x77, 0x20, 0x08, 0x76, 0xf6, 0xe0, 0xb7, 0xf1, 0xf7, 0x7b, 0xe7, 0xb7, 0x0a, 0x8e, 0x77, 0x42,
	0x78, 0x0a, 0x0e, 0x8c, 0x25, 0x96, 0xa1, 0x5e, 0xbb, 0x12, 0xd6, 0xe2, 0xf5, 0x07, 0xec, 0x82,
	0xa6, 0x22, 0xda, 0x0a, 0xa6, 0x31, 0x95, 0x42, 0x30, 0x6a, 0x59, 0x82, 0xfa, 0xed, 0x4a, 0x78,
	0x14, 0x07, 0xf9, 0x60, 0x58, 0xe4, 0xb0, 0x07, 0xce, 0x74, 0x96, 0x62, 0x21, 0x2d, 0x4f, 0x39,
	0x25, 0x96, 0x4b, 0x81, 0x13, 0x29, 0x18, 0x1a, 0xf8, 0x03, 0x2d, 0x9d, 0xa5, 0x93, 0x9d, 0xd9,
	0x48, 0x0a, 0x06, 0x2f, 0x40, 0xc3, 0x9d, 0xb1, 0x3c, 0x63, 0x1a, 0x2f, 0xc8, 0x8c, 0x27, 0xe8,
	0xc6, 0xeb, 0x9a, 0xce, 0xd2, 0x0f, 0x97, 0x7e, 0xb9, 0x10, 0x86, 0x20, 0xd8, 0x3a, 0xb6, 0x54,
	0x5c, 0xaf, 0xd0, 0x6d, 0xbb, 0x12, 0x56, 0xe3, 0x7a, 0x01, 0xc7, 0x3e, 0x85, 0x97, 0x00, 0xce,
	0x88, 0xb1, 0x45, 0x5f, 0x57, 0x62, 0xae, 0xd0, 0x9d, 0xb7, 0x81, 0x9b, 0x0c, 0x37, 0x83, 0x4f,
	0x55, 0xa6, 0x13, 0x81, 0xee, 0xcb, 0xf4, 0x48, 0xc0, 0x73, 0x50, 0xf7, 0xda, 0x55, 0xd1, 0x8c,
	0x24, 0x2b, 0xf4, 0xe0, 0xe5, 0x89, 0x4b, 0xe3, 0x2c, 0x8d, 0x5d, 0x06, 0xbb, 0xf9, 0xce, 0xfc,
	0x32, 0x72, 0xf9, 0xe8, 0x65, 0x23, 0x97, 0x13, 0x69, 0xd7, 0x38, 0x02, 0x2d, 0x2a, 0xe7, 0xe2,
	0x7f, 0xdf, 0x27, 0xff, 0x17, 0x9a, 0x7e, 0xb4, 0x57, 0xb8, 0xcc, 0x27, 0x02, 0x3d, 0x97, 0xfa,
	0x91, 0x70, 0x17, 0xbc, 0xf6, 0xdb, 0xce, 0x2f, 0xde, 0xd6, 0x7c, 0xbc, 0x29, 0x7d, 0x55, 0xec,
	0xdd, 0x6f, 0xfd, 0xea, 0x6d, 0x50, 0xd8, 0xa2, 0xf6, 0xf4, 0xd0, 0x3f, 0xc6, 0xfe, 0x5f, 0x00,
	0x00, 0x00, 0xff, 0xff, 0xb6, 0x46, 0x2e, 0xf4, 0xa1, 0x02, 0x00, 0x00,
}
