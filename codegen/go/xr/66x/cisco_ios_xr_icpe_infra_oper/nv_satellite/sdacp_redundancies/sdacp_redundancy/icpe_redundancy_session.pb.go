/*
Copyright 2019 Cisco Systems

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: icpe_redundancy_session.proto

package cisco_ios_xr_icpe_infra_oper_nv_satellite_sdacp_redundancies_sdacp_redundancy

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type IcpeRedundancySession_KEYS struct {
	IccpGroup            uint32   `protobuf:"varint,1,opt,name=iccp_group,json=iccpGroup,proto3" json:"iccp_group,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IcpeRedundancySession_KEYS) Reset()         { *m = IcpeRedundancySession_KEYS{} }
func (m *IcpeRedundancySession_KEYS) String() string { return proto.CompactTextString(m) }
func (*IcpeRedundancySession_KEYS) ProtoMessage()    {}
func (*IcpeRedundancySession_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_c5e400290e2a8ab6, []int{0}
}

func (m *IcpeRedundancySession_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IcpeRedundancySession_KEYS.Unmarshal(m, b)
}
func (m *IcpeRedundancySession_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IcpeRedundancySession_KEYS.Marshal(b, m, deterministic)
}
func (m *IcpeRedundancySession_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IcpeRedundancySession_KEYS.Merge(m, src)
}
func (m *IcpeRedundancySession_KEYS) XXX_Size() int {
	return xxx_messageInfo_IcpeRedundancySession_KEYS.Size(m)
}
func (m *IcpeRedundancySession_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_IcpeRedundancySession_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_IcpeRedundancySession_KEYS proto.InternalMessageInfo

func (m *IcpeRedundancySession_KEYS) GetIccpGroup() uint32 {
	if m != nil {
		return m.IccpGroup
	}
	return 0
}

type IcpeTimestamp struct {
	Seconds              uint32   `protobuf:"varint,1,opt,name=seconds,proto3" json:"seconds,omitempty"`
	Nanoseconds          uint32   `protobuf:"varint,2,opt,name=nanoseconds,proto3" json:"nanoseconds,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IcpeTimestamp) Reset()         { *m = IcpeTimestamp{} }
func (m *IcpeTimestamp) String() string { return proto.CompactTextString(m) }
func (*IcpeTimestamp) ProtoMessage()    {}
func (*IcpeTimestamp) Descriptor() ([]byte, []int) {
	return fileDescriptor_c5e400290e2a8ab6, []int{1}
}

func (m *IcpeTimestamp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IcpeTimestamp.Unmarshal(m, b)
}
func (m *IcpeTimestamp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IcpeTimestamp.Marshal(b, m, deterministic)
}
func (m *IcpeTimestamp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IcpeTimestamp.Merge(m, src)
}
func (m *IcpeTimestamp) XXX_Size() int {
	return xxx_messageInfo_IcpeTimestamp.Size(m)
}
func (m *IcpeTimestamp) XXX_DiscardUnknown() {
	xxx_messageInfo_IcpeTimestamp.DiscardUnknown(m)
}

var xxx_messageInfo_IcpeTimestamp proto.InternalMessageInfo

func (m *IcpeTimestamp) GetSeconds() uint32 {
	if m != nil {
		return m.Seconds
	}
	return 0
}

func (m *IcpeTimestamp) GetNanoseconds() uint32 {
	if m != nil {
		return m.Nanoseconds
	}
	return 0
}

type IcpeRedundancyChan struct {
	ChannelId               uint32         `protobuf:"varint,1,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
	ChanState               string         `protobuf:"bytes,2,opt,name=chan_state,json=chanState,proto3" json:"chan_state,omitempty"`
	ChannelStateTimestamp   *IcpeTimestamp `protobuf:"bytes,3,opt,name=channel_state_timestamp,json=channelStateTimestamp,proto3" json:"channel_state_timestamp,omitempty"`
	ResyncState             string         `protobuf:"bytes,4,opt,name=resync_state,json=resyncState,proto3" json:"resync_state,omitempty"`
	ResyncStateTimestamp    *IcpeTimestamp `protobuf:"bytes,5,opt,name=resync_state_timestamp,json=resyncStateTimestamp,proto3" json:"resync_state_timestamp,omitempty"`
	ControlMessagesSent     uint64         `protobuf:"varint,6,opt,name=control_messages_sent,json=controlMessagesSent,proto3" json:"control_messages_sent,omitempty"`
	NormalMessagesSent      uint64         `protobuf:"varint,7,opt,name=normal_messages_sent,json=normalMessagesSent,proto3" json:"normal_messages_sent,omitempty"`
	ControlMessagesReceived uint64         `protobuf:"varint,8,opt,name=control_messages_received,json=controlMessagesReceived,proto3" json:"control_messages_received,omitempty"`
	NormalMessagesReceived  uint64         `protobuf:"varint,9,opt,name=normal_messages_received,json=normalMessagesReceived,proto3" json:"normal_messages_received,omitempty"`
	XXX_NoUnkeyedLiteral    struct{}       `json:"-"`
	XXX_unrecognized        []byte         `json:"-"`
	XXX_sizecache           int32          `json:"-"`
}

func (m *IcpeRedundancyChan) Reset()         { *m = IcpeRedundancyChan{} }
func (m *IcpeRedundancyChan) String() string { return proto.CompactTextString(m) }
func (*IcpeRedundancyChan) ProtoMessage()    {}
func (*IcpeRedundancyChan) Descriptor() ([]byte, []int) {
	return fileDescriptor_c5e400290e2a8ab6, []int{2}
}

func (m *IcpeRedundancyChan) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IcpeRedundancyChan.Unmarshal(m, b)
}
func (m *IcpeRedundancyChan) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IcpeRedundancyChan.Marshal(b, m, deterministic)
}
func (m *IcpeRedundancyChan) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IcpeRedundancyChan.Merge(m, src)
}
func (m *IcpeRedundancyChan) XXX_Size() int {
	return xxx_messageInfo_IcpeRedundancyChan.Size(m)
}
func (m *IcpeRedundancyChan) XXX_DiscardUnknown() {
	xxx_messageInfo_IcpeRedundancyChan.DiscardUnknown(m)
}

var xxx_messageInfo_IcpeRedundancyChan proto.InternalMessageInfo

func (m *IcpeRedundancyChan) GetChannelId() uint32 {
	if m != nil {
		return m.ChannelId
	}
	return 0
}

func (m *IcpeRedundancyChan) GetChanState() string {
	if m != nil {
		return m.ChanState
	}
	return ""
}

func (m *IcpeRedundancyChan) GetChannelStateTimestamp() *IcpeTimestamp {
	if m != nil {
		return m.ChannelStateTimestamp
	}
	return nil
}

func (m *IcpeRedundancyChan) GetResyncState() string {
	if m != nil {
		return m.ResyncState
	}
	return ""
}

func (m *IcpeRedundancyChan) GetResyncStateTimestamp() *IcpeTimestamp {
	if m != nil {
		return m.ResyncStateTimestamp
	}
	return nil
}

func (m *IcpeRedundancyChan) GetControlMessagesSent() uint64 {
	if m != nil {
		return m.ControlMessagesSent
	}
	return 0
}

func (m *IcpeRedundancyChan) GetNormalMessagesSent() uint64 {
	if m != nil {
		return m.NormalMessagesSent
	}
	return 0
}

func (m *IcpeRedundancyChan) GetControlMessagesReceived() uint64 {
	if m != nil {
		return m.ControlMessagesReceived
	}
	return 0
}

func (m *IcpeRedundancyChan) GetNormalMessagesReceived() uint64 {
	if m != nil {
		return m.NormalMessagesReceived
	}
	return 0
}

type IcpeRedundancySession struct {
	IccpGroupXr            uint32                `protobuf:"varint,50,opt,name=iccp_group_xr,json=iccpGroupXr,proto3" json:"iccp_group_xr,omitempty"`
	ProtocolState          string                `protobuf:"bytes,51,opt,name=protocol_state,json=protocolState,proto3" json:"protocol_state,omitempty"`
	ProtocolStateTimestamp *IcpeTimestamp        `protobuf:"bytes,52,opt,name=protocol_state_timestamp,json=protocolStateTimestamp,proto3" json:"protocol_state_timestamp,omitempty"`
	TransportState         string                `protobuf:"bytes,53,opt,name=transport_state,json=transportState,proto3" json:"transport_state,omitempty"`
	AuthenticationState    string                `protobuf:"bytes,54,opt,name=authentication_state,json=authenticationState,proto3" json:"authentication_state,omitempty"`
	ArbitrationState       string                `protobuf:"bytes,55,opt,name=arbitration_state,json=arbitrationState,proto3" json:"arbitration_state,omitempty"`
	SynchronizationState   string                `protobuf:"bytes,56,opt,name=synchronization_state,json=synchronizationState,proto3" json:"synchronization_state,omitempty"`
	Primacy                string                `protobuf:"bytes,57,opt,name=primacy,proto3" json:"primacy,omitempty"`
	SystemMac              string                `protobuf:"bytes,58,opt,name=system_mac,json=systemMac,proto3" json:"system_mac,omitempty"`
	Isolated               bool                  `protobuf:"varint,59,opt,name=isolated,proto3" json:"isolated,omitempty"`
	Channel                []*IcpeRedundancyChan `protobuf:"bytes,60,rep,name=channel,proto3" json:"channel,omitempty"`
	XXX_NoUnkeyedLiteral   struct{}              `json:"-"`
	XXX_unrecognized       []byte                `json:"-"`
	XXX_sizecache          int32                 `json:"-"`
}

func (m *IcpeRedundancySession) Reset()         { *m = IcpeRedundancySession{} }
func (m *IcpeRedundancySession) String() string { return proto.CompactTextString(m) }
func (*IcpeRedundancySession) ProtoMessage()    {}
func (*IcpeRedundancySession) Descriptor() ([]byte, []int) {
	return fileDescriptor_c5e400290e2a8ab6, []int{3}
}

func (m *IcpeRedundancySession) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IcpeRedundancySession.Unmarshal(m, b)
}
func (m *IcpeRedundancySession) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IcpeRedundancySession.Marshal(b, m, deterministic)
}
func (m *IcpeRedundancySession) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IcpeRedundancySession.Merge(m, src)
}
func (m *IcpeRedundancySession) XXX_Size() int {
	return xxx_messageInfo_IcpeRedundancySession.Size(m)
}
func (m *IcpeRedundancySession) XXX_DiscardUnknown() {
	xxx_messageInfo_IcpeRedundancySession.DiscardUnknown(m)
}

var xxx_messageInfo_IcpeRedundancySession proto.InternalMessageInfo

func (m *IcpeRedundancySession) GetIccpGroupXr() uint32 {
	if m != nil {
		return m.IccpGroupXr
	}
	return 0
}

func (m *IcpeRedundancySession) GetProtocolState() string {
	if m != nil {
		return m.ProtocolState
	}
	return ""
}

func (m *IcpeRedundancySession) GetProtocolStateTimestamp() *IcpeTimestamp {
	if m != nil {
		return m.ProtocolStateTimestamp
	}
	return nil
}

func (m *IcpeRedundancySession) GetTransportState() string {
	if m != nil {
		return m.TransportState
	}
	return ""
}

func (m *IcpeRedundancySession) GetAuthenticationState() string {
	if m != nil {
		return m.AuthenticationState
	}
	return ""
}

func (m *IcpeRedundancySession) GetArbitrationState() string {
	if m != nil {
		return m.ArbitrationState
	}
	return ""
}

func (m *IcpeRedundancySession) GetSynchronizationState() string {
	if m != nil {
		return m.SynchronizationState
	}
	return ""
}

func (m *IcpeRedundancySession) GetPrimacy() string {
	if m != nil {
		return m.Primacy
	}
	return ""
}

func (m *IcpeRedundancySession) GetSystemMac() string {
	if m != nil {
		return m.SystemMac
	}
	return ""
}

func (m *IcpeRedundancySession) GetIsolated() bool {
	if m != nil {
		return m.Isolated
	}
	return false
}

func (m *IcpeRedundancySession) GetChannel() []*IcpeRedundancyChan {
	if m != nil {
		return m.Channel
	}
	return nil
}

func init() {
	proto.RegisterType((*IcpeRedundancySession_KEYS)(nil), "cisco_ios_xr_icpe_infra_oper.nv_satellite.sdacp_redundancies.sdacp_redundancy.icpe_redundancy_session_KEYS")
	proto.RegisterType((*IcpeTimestamp)(nil), "cisco_ios_xr_icpe_infra_oper.nv_satellite.sdacp_redundancies.sdacp_redundancy.icpe_timestamp")
	proto.RegisterType((*IcpeRedundancyChan)(nil), "cisco_ios_xr_icpe_infra_oper.nv_satellite.sdacp_redundancies.sdacp_redundancy.icpe_redundancy_chan")
	proto.RegisterType((*IcpeRedundancySession)(nil), "cisco_ios_xr_icpe_infra_oper.nv_satellite.sdacp_redundancies.sdacp_redundancy.icpe_redundancy_session")
}

func init() { proto.RegisterFile("icpe_redundancy_session.proto", fileDescriptor_c5e400290e2a8ab6) }

var fileDescriptor_c5e400290e2a8ab6 = []byte{
	// 588 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x54, 0x5b, 0x8b, 0x13, 0x3f,
	0x14, 0x67, 0xfe, 0x7b, 0xe9, 0xf6, 0xf4, 0xdf, 0xaa, 0xd9, 0x5e, 0xa2, 0xb8, 0x30, 0x16, 0xc4,
	0x82, 0x50, 0xb4, 0xf5, 0xb2, 0xae, 0xfa, 0x28, 0x22, 0xda, 0x97, 0xa9, 0x0f, 0xfa, 0x20, 0x21,
	0x9b, 0x89, 0xdb, 0x40, 0x27, 0x19, 0x92, 0x74, 0xd9, 0x0a, 0x3e, 0xf8, 0x0d, 0x04, 0x11, 0xbf,
	0xae, 0x4c, 0x32, 0xd3, 0xce, 0x8c, 0xec, 0x9b, 0xee, 0xd3, 0x90, 0xdf, 0x65, 0xce, 0x2f, 0x39,
	0x39, 0x81, 0x23, 0xc1, 0x52, 0x4e, 0x34, 0x8f, 0x57, 0x32, 0xa6, 0x92, 0xad, 0x89, 0xe1, 0xc6,
	0x08, 0x25, 0xc7, 0xa9, 0x56, 0x56, 0xa1, 0x19, 0x13, 0x86, 0x29, 0x22, 0x94, 0x21, 0x17, 0x9a,
	0x38, 0xad, 0x90, 0x9f, 0x35, 0x25, 0x2a, 0xe5, 0x7a, 0x2c, 0xcf, 0x89, 0xa1, 0x96, 0x2f, 0x97,
	0xc2, 0xf2, 0xb1, 0x89, 0x29, 0x4b, 0xb7, 0x7f, 0x12, 0xdc, 0xd4, 0xa1, 0xf5, 0xf0, 0x25, 0xdc,
	0xbe, 0xa4, 0x1e, 0x79, 0xfb, 0xea, 0xe3, 0x1c, 0x1d, 0x01, 0x08, 0xc6, 0x52, 0x72, 0xa6, 0xd5,
	0x2a, 0xc5, 0x41, 0x18, 0x8c, 0xda, 0x51, 0x33, 0x43, 0x5e, 0x67, 0xc0, 0xf0, 0x1d, 0x74, 0x9c,
	0xdd, 0x8a, 0x84, 0x1b, 0x4b, 0x93, 0x14, 0x61, 0x68, 0x18, 0xce, 0x94, 0x8c, 0x4d, 0xae, 0x2e,
	0x96, 0x28, 0x84, 0x96, 0xa4, 0x52, 0x15, 0xec, 0x7f, 0x8e, 0x2d, 0x43, 0xc3, 0x6f, 0x7b, 0xd0,
	0xad, 0xa7, 0x61, 0x0b, 0x2a, 0xb3, 0x14, 0xd9, 0x57, 0xf2, 0x25, 0x11, 0x71, 0x91, 0x22, 0x47,
	0xde, 0xc4, 0x05, 0x4d, 0x8c, 0xa5, 0x96, 0xbb, 0x1f, 0x37, 0x3d, 0x3d, 0xcf, 0x00, 0xf4, 0x33,
	0x80, 0x41, 0x61, 0x77, 0x92, 0x6d, 0x5c, 0xbc, 0x13, 0x06, 0xa3, 0xd6, 0xe4, 0xd3, 0xf8, 0xaf,
	0x9e, 0xea, 0xb8, 0x7a, 0x26, 0x51, 0x2f, 0xaf, 0xee, 0xe2, 0xbc, 0xdf, 0x1c, 0xd5, 0x1d, 0xf8,
	0x5f, 0x73, 0xb3, 0x96, 0x2c, 0x0f, 0xbe, 0xeb, 0x82, 0xb7, 0x3c, 0xe6, 0xa3, 0xff, 0x08, 0xa0,
	0x5f, 0xd6, 0x94, 0x92, 0xef, 0x5d, 0x45, 0xf2, 0x6e, 0x29, 0xcc, 0x36, 0xf8, 0x04, 0x7a, 0x4c,
	0x49, 0xab, 0xd5, 0x92, 0x24, 0xdc, 0x18, 0x7a, 0xc6, 0x0d, 0x31, 0x5c, 0x5a, 0xbc, 0x1f, 0x06,
	0xa3, 0xdd, 0xe8, 0x30, 0x27, 0x67, 0x39, 0x37, 0xe7, 0xd2, 0xa2, 0x07, 0xd0, 0x95, 0x4a, 0x27,
	0xb4, 0x6e, 0x69, 0x38, 0x0b, 0xf2, 0x5c, 0xc5, 0x71, 0x02, 0x37, 0xff, 0xa8, 0xa2, 0x39, 0xe3,
	0xe2, 0x9c, 0xc7, 0xf8, 0xc0, 0xd9, 0x06, 0xb5, 0x4a, 0x51, 0x4e, 0xa3, 0x63, 0xc0, 0xf5, 0x6a,
	0x1b, 0x6b, 0xd3, 0x59, 0xfb, 0xd5, 0x8a, 0x85, 0x73, 0xf8, 0x7d, 0x0f, 0x06, 0x97, 0x4c, 0x04,
	0x1a, 0x42, 0x7b, 0x3b, 0x0c, 0xe4, 0x42, 0xe3, 0x89, 0xbf, 0xc3, 0x9b, 0x79, 0xf8, 0xa0, 0xd1,
	0x5d, 0xe8, 0xb8, 0x41, 0x65, 0x2a, 0xbf, 0x6c, 0x78, 0xea, 0xda, 0xda, 0x2e, 0x50, 0xdf, 0xd8,
	0x5f, 0x01, 0xe0, 0xaa, 0xae, 0xd4, 0xda, 0x47, 0x57, 0xd1, 0xda, 0x7e, 0x25, 0xd0, 0xb6, 0xb9,
	0xf7, 0xe0, 0x9a, 0xd5, 0x54, 0x9a, 0x54, 0x69, 0x9b, 0xef, 0xe0, 0xb1, 0xdb, 0x41, 0x67, 0x03,
	0xfb, 0x2d, 0x3c, 0x84, 0x2e, 0x5d, 0xd9, 0x05, 0x97, 0x56, 0x30, 0x6a, 0xb3, 0x17, 0xc3, 0xab,
	0x9f, 0x38, 0xf5, 0x61, 0x95, 0xf3, 0x96, 0xfb, 0x70, 0x83, 0xea, 0x53, 0x61, 0x75, 0x59, 0xff,
	0xd4, 0xe9, 0xaf, 0x97, 0x08, 0x2f, 0x9e, 0x42, 0x2f, 0xbb, 0x7b, 0x0b, 0xad, 0xa4, 0xf8, 0x52,
	0x36, 0x1c, 0x3b, 0x43, 0xb7, 0x46, 0x7a, 0x13, 0x86, 0x46, 0xaa, 0x45, 0x42, 0xd9, 0x1a, 0x3f,
	0x73, 0xb2, 0x62, 0x99, 0x3d, 0x12, 0x66, 0x6d, 0x2c, 0x4f, 0x48, 0x42, 0x19, 0x3e, 0xf1, 0x8f,
	0x84, 0x47, 0x66, 0x94, 0xa1, 0x5b, 0x70, 0x20, 0x8c, 0x5a, 0x52, 0xcb, 0x63, 0xfc, 0x3c, 0x0c,
	0x46, 0x07, 0xd1, 0x66, 0x8d, 0xbe, 0x42, 0x23, 0x9f, 0x60, 0xfc, 0x22, 0xdc, 0x19, 0xb5, 0x26,
	0xec, 0x5f, 0xb4, 0xa6, 0xf6, 0xe8, 0x45, 0x45, 0xcd, 0xd3, 0x7d, 0xd7, 0xa9, 0xe9, 0xef, 0x00,
	0x00, 0x00, 0xff, 0xff, 0xb8, 0x2e, 0x10, 0x8e, 0x1a, 0x06, 0x00, 0x00,
}
