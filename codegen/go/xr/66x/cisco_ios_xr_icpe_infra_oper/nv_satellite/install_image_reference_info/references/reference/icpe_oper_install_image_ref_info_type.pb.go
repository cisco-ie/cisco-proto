/*
Copyright 2019 Cisco Systems

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: icpe_oper_install_image_ref_info_type.proto

package cisco_ios_xr_icpe_infra_oper_nv_satellite_install_image_reference_info_references_reference

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type IcpeOperInstallImageRefInfoType_KEYS struct {
	ReferenceName        string   `protobuf:"bytes,1,opt,name=reference_name,json=referenceName,proto3" json:"reference_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IcpeOperInstallImageRefInfoType_KEYS) Reset()         { *m = IcpeOperInstallImageRefInfoType_KEYS{} }
func (m *IcpeOperInstallImageRefInfoType_KEYS) String() string { return proto.CompactTextString(m) }
func (*IcpeOperInstallImageRefInfoType_KEYS) ProtoMessage()    {}
func (*IcpeOperInstallImageRefInfoType_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_fbaffdf7a3aeeebe, []int{0}
}

func (m *IcpeOperInstallImageRefInfoType_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IcpeOperInstallImageRefInfoType_KEYS.Unmarshal(m, b)
}
func (m *IcpeOperInstallImageRefInfoType_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IcpeOperInstallImageRefInfoType_KEYS.Marshal(b, m, deterministic)
}
func (m *IcpeOperInstallImageRefInfoType_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IcpeOperInstallImageRefInfoType_KEYS.Merge(m, src)
}
func (m *IcpeOperInstallImageRefInfoType_KEYS) XXX_Size() int {
	return xxx_messageInfo_IcpeOperInstallImageRefInfoType_KEYS.Size(m)
}
func (m *IcpeOperInstallImageRefInfoType_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_IcpeOperInstallImageRefInfoType_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_IcpeOperInstallImageRefInfoType_KEYS proto.InternalMessageInfo

func (m *IcpeOperInstallImageRefInfoType_KEYS) GetReferenceName() string {
	if m != nil {
		return m.ReferenceName
	}
	return ""
}

type IcpeOperInstallImageRefInfoType struct {
	ReferenceNameXr      string   `protobuf:"bytes,50,opt,name=reference_name_xr,json=referenceNameXr,proto3" json:"reference_name_xr,omitempty"`
	ReferenceFile        []string `protobuf:"bytes,51,rep,name=reference_file,json=referenceFile,proto3" json:"reference_file,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IcpeOperInstallImageRefInfoType) Reset()         { *m = IcpeOperInstallImageRefInfoType{} }
func (m *IcpeOperInstallImageRefInfoType) String() string { return proto.CompactTextString(m) }
func (*IcpeOperInstallImageRefInfoType) ProtoMessage()    {}
func (*IcpeOperInstallImageRefInfoType) Descriptor() ([]byte, []int) {
	return fileDescriptor_fbaffdf7a3aeeebe, []int{1}
}

func (m *IcpeOperInstallImageRefInfoType) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IcpeOperInstallImageRefInfoType.Unmarshal(m, b)
}
func (m *IcpeOperInstallImageRefInfoType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IcpeOperInstallImageRefInfoType.Marshal(b, m, deterministic)
}
func (m *IcpeOperInstallImageRefInfoType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IcpeOperInstallImageRefInfoType.Merge(m, src)
}
func (m *IcpeOperInstallImageRefInfoType) XXX_Size() int {
	return xxx_messageInfo_IcpeOperInstallImageRefInfoType.Size(m)
}
func (m *IcpeOperInstallImageRefInfoType) XXX_DiscardUnknown() {
	xxx_messageInfo_IcpeOperInstallImageRefInfoType.DiscardUnknown(m)
}

var xxx_messageInfo_IcpeOperInstallImageRefInfoType proto.InternalMessageInfo

func (m *IcpeOperInstallImageRefInfoType) GetReferenceNameXr() string {
	if m != nil {
		return m.ReferenceNameXr
	}
	return ""
}

func (m *IcpeOperInstallImageRefInfoType) GetReferenceFile() []string {
	if m != nil {
		return m.ReferenceFile
	}
	return nil
}

func init() {
	proto.RegisterType((*IcpeOperInstallImageRefInfoType_KEYS)(nil), "cisco_ios_xr_icpe_infra_oper.nv_satellite.install_image_reference_info.references.reference.icpe_oper_install_image_ref_info_type_KEYS")
	proto.RegisterType((*IcpeOperInstallImageRefInfoType)(nil), "cisco_ios_xr_icpe_infra_oper.nv_satellite.install_image_reference_info.references.reference.icpe_oper_install_image_ref_info_type")
}

func init() {
	proto.RegisterFile("icpe_oper_install_image_ref_info_type.proto", fileDescriptor_fbaffdf7a3aeeebe)
}

var fileDescriptor_fbaffdf7a3aeeebe = []byte{
	// 202 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0xd0, 0xc1, 0x4a, 0xc4, 0x30,
	0x10, 0x06, 0x60, 0x8a, 0x20, 0x18, 0x50, 0xb1, 0xa7, 0x1e, 0x4b, 0xa1, 0x20, 0x15, 0x72, 0xb0,
	0xcf, 0xa0, 0x17, 0xc1, 0x83, 0xbd, 0x28, 0x1e, 0x86, 0x6c, 0x98, 0x2c, 0x03, 0x69, 0x12, 0x26,
	0x61, 0xe9, 0xee, 0xd3, 0x2f, 0xe4, 0xd0, 0x12, 0xf6, 0xd2, 0x5b, 0x12, 0xf2, 0x7f, 0xff, 0x30,
	0xe2, 0x8d, 0x74, 0x40, 0xf0, 0x01, 0x19, 0xc8, 0xc5, 0xa4, 0xac, 0x05, 0x9a, 0xd5, 0x11, 0x81,
	0xd1, 0x00, 0x39, 0xe3, 0x21, 0x9d, 0x03, 0xca, 0xc0, 0x3e, 0xf9, 0xfa, 0x5f, 0x53, 0xd4, 0x1e,
	0xc8, 0x47, 0x58, 0x18, 0x72, 0x92, 0x9c, 0x61, 0x95, 0xf3, 0xd2, 0x9d, 0x20, 0xaa, 0x84, 0xd6,
	0x52, 0x42, 0x79, 0x83, 0x21, 0xa3, 0xd3, 0xf9, 0xbf, 0x97, 0xeb, 0x35, 0x6e, 0xc7, 0x6e, 0x12,
	0xc3, 0xae, 0x59, 0xe0, 0xeb, 0xe3, 0x6f, 0xaa, 0x7b, 0xf1, 0xb4, 0xa1, 0x4e, 0xcd, 0xd8, 0x54,
	0x6d, 0xf5, 0xfa, 0xf0, 0xf3, 0xb8, 0xbe, 0x7e, 0xab, 0x19, 0xbb, 0x8b, 0xe8, 0x77, 0xa1, 0xf5,
	0x20, 0x5e, 0x4a, 0x0f, 0x16, 0x6e, 0xde, 0x33, 0xf9, 0x5c, 0x90, 0xbf, 0x5c, 0x76, 0x1b, 0xb2,
	0xd8, 0x8c, 0xed, 0x5d, 0xd1, 0xfd, 0x49, 0x16, 0x0f, 0xf7, 0x79, 0x69, 0xe3, 0x35, 0x00, 0x00,
	0xff, 0xff, 0xdd, 0xaa, 0xdb, 0x18, 0x63, 0x01, 0x00, 0x00,
}
