/*
Copyright 2019 Cisco Systems

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: pm_intf_bag.proto

package cisco_ios_xr_perf_meas_oper_performance_measurement_nodes_node_interfaces_interface_details_interface_detail

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type PmIntfBag_KEYS struct {
	Node                 string   `protobuf:"bytes,1,opt,name=node,proto3" json:"node,omitempty"`
	InterfaceName        string   `protobuf:"bytes,2,opt,name=interface_name,json=interfaceName,proto3" json:"interface_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PmIntfBag_KEYS) Reset()         { *m = PmIntfBag_KEYS{} }
func (m *PmIntfBag_KEYS) String() string { return proto.CompactTextString(m) }
func (*PmIntfBag_KEYS) ProtoMessage()    {}
func (*PmIntfBag_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_2b65a16745038ed0, []int{0}
}

func (m *PmIntfBag_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PmIntfBag_KEYS.Unmarshal(m, b)
}
func (m *PmIntfBag_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PmIntfBag_KEYS.Marshal(b, m, deterministic)
}
func (m *PmIntfBag_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PmIntfBag_KEYS.Merge(m, src)
}
func (m *PmIntfBag_KEYS) XXX_Size() int {
	return xxx_messageInfo_PmIntfBag_KEYS.Size(m)
}
func (m *PmIntfBag_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_PmIntfBag_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_PmIntfBag_KEYS proto.InternalMessageInfo

func (m *PmIntfBag_KEYS) GetNode() string {
	if m != nil {
		return m.Node
	}
	return ""
}

func (m *PmIntfBag_KEYS) GetInterfaceName() string {
	if m != nil {
		return m.InterfaceName
	}
	return ""
}

type PmValuesBag struct {
	Average              uint32   `protobuf:"varint,1,opt,name=average,proto3" json:"average,omitempty"`
	Minimum              uint32   `protobuf:"varint,2,opt,name=minimum,proto3" json:"minimum,omitempty"`
	Maximum              uint32   `protobuf:"varint,3,opt,name=maximum,proto3" json:"maximum,omitempty"`
	Variance             uint32   `protobuf:"varint,4,opt,name=variance,proto3" json:"variance,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PmValuesBag) Reset()         { *m = PmValuesBag{} }
func (m *PmValuesBag) String() string { return proto.CompactTextString(m) }
func (*PmValuesBag) ProtoMessage()    {}
func (*PmValuesBag) Descriptor() ([]byte, []int) {
	return fileDescriptor_2b65a16745038ed0, []int{1}
}

func (m *PmValuesBag) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PmValuesBag.Unmarshal(m, b)
}
func (m *PmValuesBag) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PmValuesBag.Marshal(b, m, deterministic)
}
func (m *PmValuesBag) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PmValuesBag.Merge(m, src)
}
func (m *PmValuesBag) XXX_Size() int {
	return xxx_messageInfo_PmValuesBag.Size(m)
}
func (m *PmValuesBag) XXX_DiscardUnknown() {
	xxx_messageInfo_PmValuesBag.DiscardUnknown(m)
}

var xxx_messageInfo_PmValuesBag proto.InternalMessageInfo

func (m *PmValuesBag) GetAverage() uint32 {
	if m != nil {
		return m.Average
	}
	return 0
}

func (m *PmValuesBag) GetMinimum() uint32 {
	if m != nil {
		return m.Minimum
	}
	return 0
}

func (m *PmValuesBag) GetMaximum() uint32 {
	if m != nil {
		return m.Maximum
	}
	return 0
}

func (m *PmValuesBag) GetVariance() uint32 {
	if m != nil {
		return m.Variance
	}
	return 0
}

type PmScbProbeBag struct {
	ProbeStartTimeStamp                   uint64       `protobuf:"varint,1,opt,name=probe_start_time_stamp,json=probeStartTimeStamp,proto3" json:"probe_start_time_stamp,omitempty"`
	NextProbeStartTimeRemainingInMillisec uint32       `protobuf:"varint,2,opt,name=next_probe_start_time_remaining_in_millisec,json=nextProbeStartTimeRemainingInMillisec,proto3" json:"next_probe_start_time_remaining_in_millisec,omitempty"`
	NextPacketSentTimeRemainingInMillisec uint32       `protobuf:"varint,3,opt,name=next_packet_sent_time_remaining_in_millisec,json=nextPacketSentTimeRemainingInMillisec,proto3" json:"next_packet_sent_time_remaining_in_millisec,omitempty"`
	NumberOfPacketsSent                   uint32       `protobuf:"varint,4,opt,name=number_of_packets_sent,json=numberOfPacketsSent,proto3" json:"number_of_packets_sent,omitempty"`
	NumberOfPacketsReceived               uint32       `protobuf:"varint,5,opt,name=number_of_packets_received,json=numberOfPacketsReceived,proto3" json:"number_of_packets_received,omitempty"`
	ProbeResults                          *PmValuesBag `protobuf:"bytes,6,opt,name=probe_results,json=probeResults,proto3" json:"probe_results,omitempty"`
	ProbeNotRunningReason                 string       `protobuf:"bytes,7,opt,name=probe_not_running_reason,json=probeNotRunningReason,proto3" json:"probe_not_running_reason,omitempty"`
	XXX_NoUnkeyedLiteral                  struct{}     `json:"-"`
	XXX_unrecognized                      []byte       `json:"-"`
	XXX_sizecache                         int32        `json:"-"`
}

func (m *PmScbProbeBag) Reset()         { *m = PmScbProbeBag{} }
func (m *PmScbProbeBag) String() string { return proto.CompactTextString(m) }
func (*PmScbProbeBag) ProtoMessage()    {}
func (*PmScbProbeBag) Descriptor() ([]byte, []int) {
	return fileDescriptor_2b65a16745038ed0, []int{2}
}

func (m *PmScbProbeBag) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PmScbProbeBag.Unmarshal(m, b)
}
func (m *PmScbProbeBag) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PmScbProbeBag.Marshal(b, m, deterministic)
}
func (m *PmScbProbeBag) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PmScbProbeBag.Merge(m, src)
}
func (m *PmScbProbeBag) XXX_Size() int {
	return xxx_messageInfo_PmScbProbeBag.Size(m)
}
func (m *PmScbProbeBag) XXX_DiscardUnknown() {
	xxx_messageInfo_PmScbProbeBag.DiscardUnknown(m)
}

var xxx_messageInfo_PmScbProbeBag proto.InternalMessageInfo

func (m *PmScbProbeBag) GetProbeStartTimeStamp() uint64 {
	if m != nil {
		return m.ProbeStartTimeStamp
	}
	return 0
}

func (m *PmScbProbeBag) GetNextProbeStartTimeRemainingInMillisec() uint32 {
	if m != nil {
		return m.NextProbeStartTimeRemainingInMillisec
	}
	return 0
}

func (m *PmScbProbeBag) GetNextPacketSentTimeRemainingInMillisec() uint32 {
	if m != nil {
		return m.NextPacketSentTimeRemainingInMillisec
	}
	return 0
}

func (m *PmScbProbeBag) GetNumberOfPacketsSent() uint32 {
	if m != nil {
		return m.NumberOfPacketsSent
	}
	return 0
}

func (m *PmScbProbeBag) GetNumberOfPacketsReceived() uint32 {
	if m != nil {
		return m.NumberOfPacketsReceived
	}
	return 0
}

func (m *PmScbProbeBag) GetProbeResults() *PmValuesBag {
	if m != nil {
		return m.ProbeResults
	}
	return nil
}

func (m *PmScbProbeBag) GetProbeNotRunningReason() string {
	if m != nil {
		return m.ProbeNotRunningReason
	}
	return ""
}

type PmScbSampleBag struct {
	MeasurementValue     uint64   `protobuf:"varint,1,opt,name=measurement_value,json=measurementValue,proto3" json:"measurement_value,omitempty"`
	QueryTimestamp       uint64   `protobuf:"varint,2,opt,name=query_timestamp,json=queryTimestamp,proto3" json:"query_timestamp,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PmScbSampleBag) Reset()         { *m = PmScbSampleBag{} }
func (m *PmScbSampleBag) String() string { return proto.CompactTextString(m) }
func (*PmScbSampleBag) ProtoMessage()    {}
func (*PmScbSampleBag) Descriptor() ([]byte, []int) {
	return fileDescriptor_2b65a16745038ed0, []int{3}
}

func (m *PmScbSampleBag) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PmScbSampleBag.Unmarshal(m, b)
}
func (m *PmScbSampleBag) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PmScbSampleBag.Marshal(b, m, deterministic)
}
func (m *PmScbSampleBag) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PmScbSampleBag.Merge(m, src)
}
func (m *PmScbSampleBag) XXX_Size() int {
	return xxx_messageInfo_PmScbSampleBag.Size(m)
}
func (m *PmScbSampleBag) XXX_DiscardUnknown() {
	xxx_messageInfo_PmScbSampleBag.DiscardUnknown(m)
}

var xxx_messageInfo_PmScbSampleBag proto.InternalMessageInfo

func (m *PmScbSampleBag) GetMeasurementValue() uint64 {
	if m != nil {
		return m.MeasurementValue
	}
	return 0
}

func (m *PmScbSampleBag) GetQueryTimestamp() uint64 {
	if m != nil {
		return m.QueryTimestamp
	}
	return 0
}

type PmQuerierDelayCountersBag struct {
	QueryPacketsSent                         uint64   `protobuf:"varint,1,opt,name=query_packets_sent,json=queryPacketsSent,proto3" json:"query_packets_sent,omitempty"`
	QueryPacketSentErrors                    uint64   `protobuf:"varint,2,opt,name=query_packet_sent_errors,json=queryPacketSentErrors,proto3" json:"query_packet_sent_errors,omitempty"`
	QueryPacketSentErrorNoIpAddress          uint64   `protobuf:"varint,3,opt,name=query_packet_sent_error_no_ip_address,json=queryPacketSentErrorNoIpAddress,proto3" json:"query_packet_sent_error_no_ip_address,omitempty"`
	QueryPacketsReceived                     uint64   `protobuf:"varint,4,opt,name=query_packets_received,json=queryPacketsReceived,proto3" json:"query_packets_received,omitempty"`
	ReceivedPacketErrorNegativeDelay         uint64   `protobuf:"varint,5,opt,name=received_packet_error_negative_delay,json=receivedPacketErrorNegativeDelay,proto3" json:"received_packet_error_negative_delay,omitempty"`
	ReceivedPacketErrorDelayExceedsThreshold uint64   `protobuf:"varint,6,opt,name=received_packet_error_delay_exceeds_threshold,json=receivedPacketErrorDelayExceedsThreshold,proto3" json:"received_packet_error_delay_exceeds_threshold,omitempty"`
	ReceivedPacketErrorMissingTxTimestamp    uint64   `protobuf:"varint,7,opt,name=received_packet_error_missing_tx_timestamp,json=receivedPacketErrorMissingTxTimestamp,proto3" json:"received_packet_error_missing_tx_timestamp,omitempty"`
	ReceivedPacketErrorMissingRxTimestamp    uint64   `protobuf:"varint,8,opt,name=received_packet_error_missing_rx_timestamp,json=receivedPacketErrorMissingRxTimestamp,proto3" json:"received_packet_error_missing_rx_timestamp,omitempty"`
	ReceivedPacketErrorProbeFull             uint64   `protobuf:"varint,9,opt,name=received_packet_error_probe_full,json=receivedPacketErrorProbeFull,proto3" json:"received_packet_error_probe_full,omitempty"`
	ReceivedPacketErrorProbeNotStarted       uint64   `protobuf:"varint,10,opt,name=received_packet_error_probe_not_started,json=receivedPacketErrorProbeNotStarted,proto3" json:"received_packet_error_probe_not_started,omitempty"`
	ReceivedPacketControlCodeError           uint64   `protobuf:"varint,11,opt,name=received_packet_control_code_error,json=receivedPacketControlCodeError,proto3" json:"received_packet_control_code_error,omitempty"`
	ReceivedPacketControlCodeNotification    uint64   `protobuf:"varint,12,opt,name=received_packet_control_code_notification,json=receivedPacketControlCodeNotification,proto3" json:"received_packet_control_code_notification,omitempty"`
	ProbesStarted                            uint64   `protobuf:"varint,13,opt,name=probes_started,json=probesStarted,proto3" json:"probes_started,omitempty"`
	ProbesComplete                           uint64   `protobuf:"varint,14,opt,name=probes_complete,json=probesComplete,proto3" json:"probes_complete,omitempty"`
	ProbesIncomplete                         uint64   `protobuf:"varint,15,opt,name=probes_incomplete,json=probesIncomplete,proto3" json:"probes_incomplete,omitempty"`
	Advertisement                            uint64   `protobuf:"varint,16,opt,name=advertisement,proto3" json:"advertisement,omitempty"`
	XXX_NoUnkeyedLiteral                     struct{} `json:"-"`
	XXX_unrecognized                         []byte   `json:"-"`
	XXX_sizecache                            int32    `json:"-"`
}

func (m *PmQuerierDelayCountersBag) Reset()         { *m = PmQuerierDelayCountersBag{} }
func (m *PmQuerierDelayCountersBag) String() string { return proto.CompactTextString(m) }
func (*PmQuerierDelayCountersBag) ProtoMessage()    {}
func (*PmQuerierDelayCountersBag) Descriptor() ([]byte, []int) {
	return fileDescriptor_2b65a16745038ed0, []int{4}
}

func (m *PmQuerierDelayCountersBag) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PmQuerierDelayCountersBag.Unmarshal(m, b)
}
func (m *PmQuerierDelayCountersBag) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PmQuerierDelayCountersBag.Marshal(b, m, deterministic)
}
func (m *PmQuerierDelayCountersBag) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PmQuerierDelayCountersBag.Merge(m, src)
}
func (m *PmQuerierDelayCountersBag) XXX_Size() int {
	return xxx_messageInfo_PmQuerierDelayCountersBag.Size(m)
}
func (m *PmQuerierDelayCountersBag) XXX_DiscardUnknown() {
	xxx_messageInfo_PmQuerierDelayCountersBag.DiscardUnknown(m)
}

var xxx_messageInfo_PmQuerierDelayCountersBag proto.InternalMessageInfo

func (m *PmQuerierDelayCountersBag) GetQueryPacketsSent() uint64 {
	if m != nil {
		return m.QueryPacketsSent
	}
	return 0
}

func (m *PmQuerierDelayCountersBag) GetQueryPacketSentErrors() uint64 {
	if m != nil {
		return m.QueryPacketSentErrors
	}
	return 0
}

func (m *PmQuerierDelayCountersBag) GetQueryPacketSentErrorNoIpAddress() uint64 {
	if m != nil {
		return m.QueryPacketSentErrorNoIpAddress
	}
	return 0
}

func (m *PmQuerierDelayCountersBag) GetQueryPacketsReceived() uint64 {
	if m != nil {
		return m.QueryPacketsReceived
	}
	return 0
}

func (m *PmQuerierDelayCountersBag) GetReceivedPacketErrorNegativeDelay() uint64 {
	if m != nil {
		return m.ReceivedPacketErrorNegativeDelay
	}
	return 0
}

func (m *PmQuerierDelayCountersBag) GetReceivedPacketErrorDelayExceedsThreshold() uint64 {
	if m != nil {
		return m.ReceivedPacketErrorDelayExceedsThreshold
	}
	return 0
}

func (m *PmQuerierDelayCountersBag) GetReceivedPacketErrorMissingTxTimestamp() uint64 {
	if m != nil {
		return m.ReceivedPacketErrorMissingTxTimestamp
	}
	return 0
}

func (m *PmQuerierDelayCountersBag) GetReceivedPacketErrorMissingRxTimestamp() uint64 {
	if m != nil {
		return m.ReceivedPacketErrorMissingRxTimestamp
	}
	return 0
}

func (m *PmQuerierDelayCountersBag) GetReceivedPacketErrorProbeFull() uint64 {
	if m != nil {
		return m.ReceivedPacketErrorProbeFull
	}
	return 0
}

func (m *PmQuerierDelayCountersBag) GetReceivedPacketErrorProbeNotStarted() uint64 {
	if m != nil {
		return m.ReceivedPacketErrorProbeNotStarted
	}
	return 0
}

func (m *PmQuerierDelayCountersBag) GetReceivedPacketControlCodeError() uint64 {
	if m != nil {
		return m.ReceivedPacketControlCodeError
	}
	return 0
}

func (m *PmQuerierDelayCountersBag) GetReceivedPacketControlCodeNotification() uint64 {
	if m != nil {
		return m.ReceivedPacketControlCodeNotification
	}
	return 0
}

func (m *PmQuerierDelayCountersBag) GetProbesStarted() uint64 {
	if m != nil {
		return m.ProbesStarted
	}
	return 0
}

func (m *PmQuerierDelayCountersBag) GetProbesComplete() uint64 {
	if m != nil {
		return m.ProbesComplete
	}
	return 0
}

func (m *PmQuerierDelayCountersBag) GetProbesIncomplete() uint64 {
	if m != nil {
		return m.ProbesIncomplete
	}
	return 0
}

func (m *PmQuerierDelayCountersBag) GetAdvertisement() uint64 {
	if m != nil {
		return m.Advertisement
	}
	return 0
}

type PmIntfExclusiveDelayCountersInfoBag struct {
	QueryPacketSentErrorInterfaceDown uint64   `protobuf:"varint,1,opt,name=query_packet_sent_error_interface_down,json=queryPacketSentErrorInterfaceDown,proto3" json:"query_packet_sent_error_interface_down,omitempty"`
	QueryPacketSentErrorNoMplsCaps    uint64   `protobuf:"varint,2,opt,name=query_packet_sent_error_no_mpls_caps,json=queryPacketSentErrorNoMplsCaps,proto3" json:"query_packet_sent_error_no_mpls_caps,omitempty"`
	XXX_NoUnkeyedLiteral              struct{} `json:"-"`
	XXX_unrecognized                  []byte   `json:"-"`
	XXX_sizecache                     int32    `json:"-"`
}

func (m *PmIntfExclusiveDelayCountersInfoBag) Reset()         { *m = PmIntfExclusiveDelayCountersInfoBag{} }
func (m *PmIntfExclusiveDelayCountersInfoBag) String() string { return proto.CompactTextString(m) }
func (*PmIntfExclusiveDelayCountersInfoBag) ProtoMessage()    {}
func (*PmIntfExclusiveDelayCountersInfoBag) Descriptor() ([]byte, []int) {
	return fileDescriptor_2b65a16745038ed0, []int{5}
}

func (m *PmIntfExclusiveDelayCountersInfoBag) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PmIntfExclusiveDelayCountersInfoBag.Unmarshal(m, b)
}
func (m *PmIntfExclusiveDelayCountersInfoBag) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PmIntfExclusiveDelayCountersInfoBag.Marshal(b, m, deterministic)
}
func (m *PmIntfExclusiveDelayCountersInfoBag) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PmIntfExclusiveDelayCountersInfoBag.Merge(m, src)
}
func (m *PmIntfExclusiveDelayCountersInfoBag) XXX_Size() int {
	return xxx_messageInfo_PmIntfExclusiveDelayCountersInfoBag.Size(m)
}
func (m *PmIntfExclusiveDelayCountersInfoBag) XXX_DiscardUnknown() {
	xxx_messageInfo_PmIntfExclusiveDelayCountersInfoBag.DiscardUnknown(m)
}

var xxx_messageInfo_PmIntfExclusiveDelayCountersInfoBag proto.InternalMessageInfo

func (m *PmIntfExclusiveDelayCountersInfoBag) GetQueryPacketSentErrorInterfaceDown() uint64 {
	if m != nil {
		return m.QueryPacketSentErrorInterfaceDown
	}
	return 0
}

func (m *PmIntfExclusiveDelayCountersInfoBag) GetQueryPacketSentErrorNoMplsCaps() uint64 {
	if m != nil {
		return m.QueryPacketSentErrorNoMplsCaps
	}
	return 0
}

type PmExclusiveDelayCountersInfoUnion struct {
	Type                       string                               `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	InterfaceExclusiveCounters *PmIntfExclusiveDelayCountersInfoBag `protobuf:"bytes,2,opt,name=interface_exclusive_counters,json=interfaceExclusiveCounters,proto3" json:"interface_exclusive_counters,omitempty"`
	XXX_NoUnkeyedLiteral       struct{}                             `json:"-"`
	XXX_unrecognized           []byte                               `json:"-"`
	XXX_sizecache              int32                                `json:"-"`
}

func (m *PmExclusiveDelayCountersInfoUnion) Reset()         { *m = PmExclusiveDelayCountersInfoUnion{} }
func (m *PmExclusiveDelayCountersInfoUnion) String() string { return proto.CompactTextString(m) }
func (*PmExclusiveDelayCountersInfoUnion) ProtoMessage()    {}
func (*PmExclusiveDelayCountersInfoUnion) Descriptor() ([]byte, []int) {
	return fileDescriptor_2b65a16745038ed0, []int{6}
}

func (m *PmExclusiveDelayCountersInfoUnion) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PmExclusiveDelayCountersInfoUnion.Unmarshal(m, b)
}
func (m *PmExclusiveDelayCountersInfoUnion) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PmExclusiveDelayCountersInfoUnion.Marshal(b, m, deterministic)
}
func (m *PmExclusiveDelayCountersInfoUnion) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PmExclusiveDelayCountersInfoUnion.Merge(m, src)
}
func (m *PmExclusiveDelayCountersInfoUnion) XXX_Size() int {
	return xxx_messageInfo_PmExclusiveDelayCountersInfoUnion.Size(m)
}
func (m *PmExclusiveDelayCountersInfoUnion) XXX_DiscardUnknown() {
	xxx_messageInfo_PmExclusiveDelayCountersInfoUnion.DiscardUnknown(m)
}

var xxx_messageInfo_PmExclusiveDelayCountersInfoUnion proto.InternalMessageInfo

func (m *PmExclusiveDelayCountersInfoUnion) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *PmExclusiveDelayCountersInfoUnion) GetInterfaceExclusiveCounters() *PmIntfExclusiveDelayCountersInfoBag {
	if m != nil {
		return m.InterfaceExclusiveCounters
	}
	return nil
}

type PmDelayCountersInfoBag struct {
	GenericCounters      *PmQuerierDelayCountersBag         `protobuf:"bytes,1,opt,name=generic_counters,json=genericCounters,proto3" json:"generic_counters,omitempty"`
	ExclusiveCounters    *PmExclusiveDelayCountersInfoUnion `protobuf:"bytes,2,opt,name=exclusive_counters,json=exclusiveCounters,proto3" json:"exclusive_counters,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                           `json:"-"`
	XXX_unrecognized     []byte                             `json:"-"`
	XXX_sizecache        int32                              `json:"-"`
}

func (m *PmDelayCountersInfoBag) Reset()         { *m = PmDelayCountersInfoBag{} }
func (m *PmDelayCountersInfoBag) String() string { return proto.CompactTextString(m) }
func (*PmDelayCountersInfoBag) ProtoMessage()    {}
func (*PmDelayCountersInfoBag) Descriptor() ([]byte, []int) {
	return fileDescriptor_2b65a16745038ed0, []int{7}
}

func (m *PmDelayCountersInfoBag) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PmDelayCountersInfoBag.Unmarshal(m, b)
}
func (m *PmDelayCountersInfoBag) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PmDelayCountersInfoBag.Marshal(b, m, deterministic)
}
func (m *PmDelayCountersInfoBag) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PmDelayCountersInfoBag.Merge(m, src)
}
func (m *PmDelayCountersInfoBag) XXX_Size() int {
	return xxx_messageInfo_PmDelayCountersInfoBag.Size(m)
}
func (m *PmDelayCountersInfoBag) XXX_DiscardUnknown() {
	xxx_messageInfo_PmDelayCountersInfoBag.DiscardUnknown(m)
}

var xxx_messageInfo_PmDelayCountersInfoBag proto.InternalMessageInfo

func (m *PmDelayCountersInfoBag) GetGenericCounters() *PmQuerierDelayCountersBag {
	if m != nil {
		return m.GenericCounters
	}
	return nil
}

func (m *PmDelayCountersInfoBag) GetExclusiveCounters() *PmExclusiveDelayCountersInfoUnion {
	if m != nil {
		return m.ExclusiveCounters
	}
	return nil
}

type PmScbLastAdvertBag struct {
	TimeOfAdvertisement  uint64       `protobuf:"varint,1,opt,name=time_of_advertisement,json=timeOfAdvertisement,proto3" json:"time_of_advertisement,omitempty"`
	AdvertisementReason  string       `protobuf:"bytes,2,opt,name=advertisement_reason,json=advertisementReason,proto3" json:"advertisement_reason,omitempty"`
	AdvertisedValues     *PmValuesBag `protobuf:"bytes,3,opt,name=advertised_values,json=advertisedValues,proto3" json:"advertised_values,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *PmScbLastAdvertBag) Reset()         { *m = PmScbLastAdvertBag{} }
func (m *PmScbLastAdvertBag) String() string { return proto.CompactTextString(m) }
func (*PmScbLastAdvertBag) ProtoMessage()    {}
func (*PmScbLastAdvertBag) Descriptor() ([]byte, []int) {
	return fileDescriptor_2b65a16745038ed0, []int{8}
}

func (m *PmScbLastAdvertBag) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PmScbLastAdvertBag.Unmarshal(m, b)
}
func (m *PmScbLastAdvertBag) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PmScbLastAdvertBag.Marshal(b, m, deterministic)
}
func (m *PmScbLastAdvertBag) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PmScbLastAdvertBag.Merge(m, src)
}
func (m *PmScbLastAdvertBag) XXX_Size() int {
	return xxx_messageInfo_PmScbLastAdvertBag.Size(m)
}
func (m *PmScbLastAdvertBag) XXX_DiscardUnknown() {
	xxx_messageInfo_PmScbLastAdvertBag.DiscardUnknown(m)
}

var xxx_messageInfo_PmScbLastAdvertBag proto.InternalMessageInfo

func (m *PmScbLastAdvertBag) GetTimeOfAdvertisement() uint64 {
	if m != nil {
		return m.TimeOfAdvertisement
	}
	return 0
}

func (m *PmScbLastAdvertBag) GetAdvertisementReason() string {
	if m != nil {
		return m.AdvertisementReason
	}
	return ""
}

func (m *PmScbLastAdvertBag) GetAdvertisedValues() *PmValuesBag {
	if m != nil {
		return m.AdvertisedValues
	}
	return nil
}

type PmScbNextAdvertBag struct {
	AdvertisementIntervalProbesRemaining uint32       `protobuf:"varint,1,opt,name=advertisement_interval_probes_remaining,json=advertisementIntervalProbesRemaining,proto3" json:"advertisement_interval_probes_remaining,omitempty"`
	AdvertisementIntervalValues          *PmValuesBag `protobuf:"bytes,2,opt,name=advertisement_interval_values,json=advertisementIntervalValues,proto3" json:"advertisement_interval_values,omitempty"`
	RollingAverage                       uint32       `protobuf:"varint,3,opt,name=rolling_average,json=rollingAverage,proto3" json:"rolling_average,omitempty"`
	XXX_NoUnkeyedLiteral                 struct{}     `json:"-"`
	XXX_unrecognized                     []byte       `json:"-"`
	XXX_sizecache                        int32        `json:"-"`
}

func (m *PmScbNextAdvertBag) Reset()         { *m = PmScbNextAdvertBag{} }
func (m *PmScbNextAdvertBag) String() string { return proto.CompactTextString(m) }
func (*PmScbNextAdvertBag) ProtoMessage()    {}
func (*PmScbNextAdvertBag) Descriptor() ([]byte, []int) {
	return fileDescriptor_2b65a16745038ed0, []int{9}
}

func (m *PmScbNextAdvertBag) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PmScbNextAdvertBag.Unmarshal(m, b)
}
func (m *PmScbNextAdvertBag) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PmScbNextAdvertBag.Marshal(b, m, deterministic)
}
func (m *PmScbNextAdvertBag) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PmScbNextAdvertBag.Merge(m, src)
}
func (m *PmScbNextAdvertBag) XXX_Size() int {
	return xxx_messageInfo_PmScbNextAdvertBag.Size(m)
}
func (m *PmScbNextAdvertBag) XXX_DiscardUnknown() {
	xxx_messageInfo_PmScbNextAdvertBag.DiscardUnknown(m)
}

var xxx_messageInfo_PmScbNextAdvertBag proto.InternalMessageInfo

func (m *PmScbNextAdvertBag) GetAdvertisementIntervalProbesRemaining() uint32 {
	if m != nil {
		return m.AdvertisementIntervalProbesRemaining
	}
	return 0
}

func (m *PmScbNextAdvertBag) GetAdvertisementIntervalValues() *PmValuesBag {
	if m != nil {
		return m.AdvertisementIntervalValues
	}
	return nil
}

func (m *PmScbNextAdvertBag) GetRollingAverage() uint32 {
	if m != nil {
		return m.RollingAverage
	}
	return 0
}

type PmScbControlCode struct {
	ControlCode          uint32   `protobuf:"varint,1,opt,name=control_code,json=controlCode,proto3" json:"control_code,omitempty"`
	Timestamp            uint64   `protobuf:"varint,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PmScbControlCode) Reset()         { *m = PmScbControlCode{} }
func (m *PmScbControlCode) String() string { return proto.CompactTextString(m) }
func (*PmScbControlCode) ProtoMessage()    {}
func (*PmScbControlCode) Descriptor() ([]byte, []int) {
	return fileDescriptor_2b65a16745038ed0, []int{10}
}

func (m *PmScbControlCode) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PmScbControlCode.Unmarshal(m, b)
}
func (m *PmScbControlCode) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PmScbControlCode.Marshal(b, m, deterministic)
}
func (m *PmScbControlCode) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PmScbControlCode.Merge(m, src)
}
func (m *PmScbControlCode) XXX_Size() int {
	return xxx_messageInfo_PmScbControlCode.Size(m)
}
func (m *PmScbControlCode) XXX_DiscardUnknown() {
	xxx_messageInfo_PmScbControlCode.DiscardUnknown(m)
}

var xxx_messageInfo_PmScbControlCode proto.InternalMessageInfo

func (m *PmScbControlCode) GetControlCode() uint32 {
	if m != nil {
		return m.ControlCode
	}
	return 0
}

func (m *PmScbControlCode) GetTimestamp() uint64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

type PmScbBag struct {
	SessionId                          uint32                  `protobuf:"varint,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	TransportType                      string                  `protobuf:"bytes,2,opt,name=transport_type,json=transportType,proto3" json:"transport_type,omitempty"`
	MeasurementType                    string                  `protobuf:"bytes,3,opt,name=measurement_type,json=measurementType,proto3" json:"measurement_type,omitempty"`
	CurrentProbe                       *PmScbProbeBag          `protobuf:"bytes,4,opt,name=current_probe,json=currentProbe,proto3" json:"current_probe,omitempty"`
	ProbeHistory                       []*PmScbSampleBag       `protobuf:"bytes,5,rep,name=probe_history,json=probeHistory,proto3" json:"probe_history,omitempty"`
	SessionCounters                    *PmDelayCountersInfoBag `protobuf:"bytes,6,opt,name=session_counters,json=sessionCounters,proto3" json:"session_counters,omitempty"`
	PeriodicAdvertisementIntervalInSec uint32                  `protobuf:"varint,7,opt,name=periodic_advertisement_interval_in_sec,json=periodicAdvertisementIntervalInSec,proto3" json:"periodic_advertisement_interval_in_sec,omitempty"`
	LastAdvertisementInformation       *PmScbLastAdvertBag     `protobuf:"bytes,8,opt,name=last_advertisement_information,json=lastAdvertisementInformation,proto3" json:"last_advertisement_information,omitempty"`
	NextAdvertisementInformation       *PmScbNextAdvertBag     `protobuf:"bytes,9,opt,name=next_advertisement_information,json=nextAdvertisementInformation,proto3" json:"next_advertisement_information,omitempty"`
	LastNotificationControlCode        *PmScbControlCode       `protobuf:"bytes,10,opt,name=last_notification_control_code,json=lastNotificationControlCode,proto3" json:"last_notification_control_code,omitempty"`
	LastErrorControlCode               *PmScbControlCode       `protobuf:"bytes,11,opt,name=last_error_control_code,json=lastErrorControlCode,proto3" json:"last_error_control_code,omitempty"`
	XXX_NoUnkeyedLiteral               struct{}                `json:"-"`
	XXX_unrecognized                   []byte                  `json:"-"`
	XXX_sizecache                      int32                   `json:"-"`
}

func (m *PmScbBag) Reset()         { *m = PmScbBag{} }
func (m *PmScbBag) String() string { return proto.CompactTextString(m) }
func (*PmScbBag) ProtoMessage()    {}
func (*PmScbBag) Descriptor() ([]byte, []int) {
	return fileDescriptor_2b65a16745038ed0, []int{11}
}

func (m *PmScbBag) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PmScbBag.Unmarshal(m, b)
}
func (m *PmScbBag) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PmScbBag.Marshal(b, m, deterministic)
}
func (m *PmScbBag) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PmScbBag.Merge(m, src)
}
func (m *PmScbBag) XXX_Size() int {
	return xxx_messageInfo_PmScbBag.Size(m)
}
func (m *PmScbBag) XXX_DiscardUnknown() {
	xxx_messageInfo_PmScbBag.DiscardUnknown(m)
}

var xxx_messageInfo_PmScbBag proto.InternalMessageInfo

func (m *PmScbBag) GetSessionId() uint32 {
	if m != nil {
		return m.SessionId
	}
	return 0
}

func (m *PmScbBag) GetTransportType() string {
	if m != nil {
		return m.TransportType
	}
	return ""
}

func (m *PmScbBag) GetMeasurementType() string {
	if m != nil {
		return m.MeasurementType
	}
	return ""
}

func (m *PmScbBag) GetCurrentProbe() *PmScbProbeBag {
	if m != nil {
		return m.CurrentProbe
	}
	return nil
}

func (m *PmScbBag) GetProbeHistory() []*PmScbSampleBag {
	if m != nil {
		return m.ProbeHistory
	}
	return nil
}

func (m *PmScbBag) GetSessionCounters() *PmDelayCountersInfoBag {
	if m != nil {
		return m.SessionCounters
	}
	return nil
}

func (m *PmScbBag) GetPeriodicAdvertisementIntervalInSec() uint32 {
	if m != nil {
		return m.PeriodicAdvertisementIntervalInSec
	}
	return 0
}

func (m *PmScbBag) GetLastAdvertisementInformation() *PmScbLastAdvertBag {
	if m != nil {
		return m.LastAdvertisementInformation
	}
	return nil
}

func (m *PmScbBag) GetNextAdvertisementInformation() *PmScbNextAdvertBag {
	if m != nil {
		return m.NextAdvertisementInformation
	}
	return nil
}

func (m *PmScbBag) GetLastNotificationControlCode() *PmScbControlCode {
	if m != nil {
		return m.LastNotificationControlCode
	}
	return nil
}

func (m *PmScbBag) GetLastErrorControlCode() *PmScbControlCode {
	if m != nil {
		return m.LastErrorControlCode
	}
	return nil
}

type PmIntfBag struct {
	InterfaceNameXr         string      `protobuf:"bytes,50,opt,name=interface_name_xr,json=interfaceNameXr,proto3" json:"interface_name_xr,omitempty"`
	InterfaceHandle         uint32      `protobuf:"varint,51,opt,name=interface_handle,json=interfaceHandle,proto3" json:"interface_handle,omitempty"`
	InterfaceState          bool        `protobuf:"varint,52,opt,name=interface_state,json=interfaceState,proto3" json:"interface_state,omitempty"`
	SourceAddress           string      `protobuf:"bytes,53,opt,name=source_address,json=sourceAddress,proto3" json:"source_address,omitempty"`
	SourceV6Address         string      `protobuf:"bytes,54,opt,name=source_v6_address,json=sourceV6Address,proto3" json:"source_v6_address,omitempty"`
	SourceMacAddress        string      `protobuf:"bytes,55,opt,name=source_mac_address,json=sourceMacAddress,proto3" json:"source_mac_address,omitempty"`
	PrimaryVlanTag          uint32      `protobuf:"varint,56,opt,name=primary_vlan_tag,json=primaryVlanTag,proto3" json:"primary_vlan_tag,omitempty"`
	SecondaryVlanTag        uint32      `protobuf:"varint,57,opt,name=secondary_vlan_tag,json=secondaryVlanTag,proto3" json:"secondary_vlan_tag,omitempty"`
	DelayMeasurementSession []*PmScbBag `protobuf:"bytes,58,rep,name=delay_measurement_session,json=delayMeasurementSession,proto3" json:"delay_measurement_session,omitempty"`
	XXX_NoUnkeyedLiteral    struct{}    `json:"-"`
	XXX_unrecognized        []byte      `json:"-"`
	XXX_sizecache           int32       `json:"-"`
}

func (m *PmIntfBag) Reset()         { *m = PmIntfBag{} }
func (m *PmIntfBag) String() string { return proto.CompactTextString(m) }
func (*PmIntfBag) ProtoMessage()    {}
func (*PmIntfBag) Descriptor() ([]byte, []int) {
	return fileDescriptor_2b65a16745038ed0, []int{12}
}

func (m *PmIntfBag) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PmIntfBag.Unmarshal(m, b)
}
func (m *PmIntfBag) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PmIntfBag.Marshal(b, m, deterministic)
}
func (m *PmIntfBag) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PmIntfBag.Merge(m, src)
}
func (m *PmIntfBag) XXX_Size() int {
	return xxx_messageInfo_PmIntfBag.Size(m)
}
func (m *PmIntfBag) XXX_DiscardUnknown() {
	xxx_messageInfo_PmIntfBag.DiscardUnknown(m)
}

var xxx_messageInfo_PmIntfBag proto.InternalMessageInfo

func (m *PmIntfBag) GetInterfaceNameXr() string {
	if m != nil {
		return m.InterfaceNameXr
	}
	return ""
}

func (m *PmIntfBag) GetInterfaceHandle() uint32 {
	if m != nil {
		return m.InterfaceHandle
	}
	return 0
}

func (m *PmIntfBag) GetInterfaceState() bool {
	if m != nil {
		return m.InterfaceState
	}
	return false
}

func (m *PmIntfBag) GetSourceAddress() string {
	if m != nil {
		return m.SourceAddress
	}
	return ""
}

func (m *PmIntfBag) GetSourceV6Address() string {
	if m != nil {
		return m.SourceV6Address
	}
	return ""
}

func (m *PmIntfBag) GetSourceMacAddress() string {
	if m != nil {
		return m.SourceMacAddress
	}
	return ""
}

func (m *PmIntfBag) GetPrimaryVlanTag() uint32 {
	if m != nil {
		return m.PrimaryVlanTag
	}
	return 0
}

func (m *PmIntfBag) GetSecondaryVlanTag() uint32 {
	if m != nil {
		return m.SecondaryVlanTag
	}
	return 0
}

func (m *PmIntfBag) GetDelayMeasurementSession() []*PmScbBag {
	if m != nil {
		return m.DelayMeasurementSession
	}
	return nil
}

func init() {
	proto.RegisterType((*PmIntfBag_KEYS)(nil), "cisco_ios_xr_perf_meas_oper.performance_measurement.nodes.node.interfaces.interface_details.interface_detail.pm_intf_bag_KEYS")
	proto.RegisterType((*PmValuesBag)(nil), "cisco_ios_xr_perf_meas_oper.performance_measurement.nodes.node.interfaces.interface_details.interface_detail.pm_values_bag")
	proto.RegisterType((*PmScbProbeBag)(nil), "cisco_ios_xr_perf_meas_oper.performance_measurement.nodes.node.interfaces.interface_details.interface_detail.pm_scb_probe_bag")
	proto.RegisterType((*PmScbSampleBag)(nil), "cisco_ios_xr_perf_meas_oper.performance_measurement.nodes.node.interfaces.interface_details.interface_detail.pm_scb_sample_bag")
	proto.RegisterType((*PmQuerierDelayCountersBag)(nil), "cisco_ios_xr_perf_meas_oper.performance_measurement.nodes.node.interfaces.interface_details.interface_detail.pm_querier_delay_counters_bag")
	proto.RegisterType((*PmIntfExclusiveDelayCountersInfoBag)(nil), "cisco_ios_xr_perf_meas_oper.performance_measurement.nodes.node.interfaces.interface_details.interface_detail.pm_intf_exclusive_delay_counters_info_bag")
	proto.RegisterType((*PmExclusiveDelayCountersInfoUnion)(nil), "cisco_ios_xr_perf_meas_oper.performance_measurement.nodes.node.interfaces.interface_details.interface_detail.pm_exclusive_delay_counters_info_union")
	proto.RegisterType((*PmDelayCountersInfoBag)(nil), "cisco_ios_xr_perf_meas_oper.performance_measurement.nodes.node.interfaces.interface_details.interface_detail.pm_delay_counters_info_bag")
	proto.RegisterType((*PmScbLastAdvertBag)(nil), "cisco_ios_xr_perf_meas_oper.performance_measurement.nodes.node.interfaces.interface_details.interface_detail.pm_scb_last_advert_bag")
	proto.RegisterType((*PmScbNextAdvertBag)(nil), "cisco_ios_xr_perf_meas_oper.performance_measurement.nodes.node.interfaces.interface_details.interface_detail.pm_scb_next_advert_bag")
	proto.RegisterType((*PmScbControlCode)(nil), "cisco_ios_xr_perf_meas_oper.performance_measurement.nodes.node.interfaces.interface_details.interface_detail.pm_scb_control_code")
	proto.RegisterType((*PmScbBag)(nil), "cisco_ios_xr_perf_meas_oper.performance_measurement.nodes.node.interfaces.interface_details.interface_detail.pm_scb_bag")
	proto.RegisterType((*PmIntfBag)(nil), "cisco_ios_xr_perf_meas_oper.performance_measurement.nodes.node.interfaces.interface_details.interface_detail.pm_intf_bag")
}

func init() { proto.RegisterFile("pm_intf_bag.proto", fileDescriptor_2b65a16745038ed0) }

var fileDescriptor_2b65a16745038ed0 = []byte{
	// 1681 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xcc, 0x58, 0xcd, 0x6f, 0x24, 0x39,
	0x15, 0x57, 0x25, 0xcd, 0x4e, 0xf2, 0x7a, 0x7a, 0xd2, 0xf1, 0x7c, 0x15, 0xb3, 0x99, 0x21, 0xdb,
	0x9a, 0x8f, 0xcc, 0xec, 0x12, 0x89, 0xcc, 0x32, 0xc3, 0xc7, 0x69, 0x94, 0xcd, 0x6a, 0x03, 0x24,
	0x0b, 0xd5, 0x21, 0xda, 0xe5, 0x62, 0x39, 0x55, 0xee, 0xc4, 0xa2, 0xca, 0x2e, 0xec, 0xea, 0xde,
	0x8e, 0x90, 0x40, 0x48, 0x1c, 0x90, 0xb8, 0x22, 0x21, 0x0e, 0x2b, 0x21, 0xc1, 0x01, 0x71, 0x5e,
	0x09, 0x71, 0xe2, 0x82, 0xc4, 0x01, 0xf8, 0x03, 0xd8, 0x7f, 0x84, 0x2b, 0xf2, 0xb3, 0xeb, 0x2b,
	0xe9, 0xce, 0xec, 0x29, 0xe1, 0xd2, 0xea, 0x7a, 0xef, 0xe7, 0x9f, 0xdf, 0xb3, 0x9f, 0xdf, 0x7b,
	0x36, 0xac, 0xe6, 0x19, 0x15, 0xb2, 0x18, 0xd1, 0x23, 0x76, 0xbc, 0x99, 0x6b, 0x55, 0x28, 0x92,
	0xc6, 0xc2, 0xc4, 0x8a, 0x0a, 0x65, 0xe8, 0x54, 0xd3, 0x9c, 0xeb, 0x11, 0xcd, 0x38, 0x33, 0x54,
	0xe5, 0x5c, 0x6f, 0xda, 0x4f, 0xa5, 0x33, 0x26, 0x63, 0x8e, 0xd2, 0xb1, 0xe6, 0x19, 0x97, 0xc5,
	0xa6, 0x54, 0x09, 0x37, 0xf8, 0xbb, 0x29, 0x64, 0xc1, 0xf5, 0x88, 0xc5, 0xdc, 0xd4, 0x7f, 0x69,
	0xc2, 0x0b, 0x26, 0xd2, 0xf3, 0x92, 0xc1, 0x1e, 0xf4, 0x1b, 0x26, 0xd0, 0xef, 0xee, 0x7c, 0x3c,
	0x24, 0x04, 0x3a, 0x96, 0x29, 0x0c, 0xd6, 0x83, 0x8d, 0xe5, 0x08, 0xff, 0x93, 0x47, 0x70, 0xa3,
	0x1e, 0x2b, 0x59, 0xc6, 0xc3, 0x05, 0xd4, 0xf6, 0x2a, 0xe9, 0x3e, 0xcb, 0xf8, 0xe0, 0x14, 0x7a,
	0x79, 0x46, 0x27, 0x2c, 0x1d, 0x73, 0x63, 0x09, 0x49, 0x08, 0xd7, 0xd8, 0x84, 0x6b, 0x76, 0xec,
	0xe8, 0x7a, 0x51, 0xf9, 0x69, 0x35, 0x99, 0x90, 0x22, 0x1b, 0x67, 0x48, 0xd5, 0x8b, 0xca, 0x4f,
	0xd4, 0xb0, 0x29, 0x6a, 0x16, 0xbd, 0xc6, 0x7d, 0x92, 0x7b, 0xb0, 0x34, 0x61, 0x5a, 0x58, 0xf7,
	0xc3, 0x0e, 0xaa, 0xaa, 0xef, 0xc1, 0xbf, 0x3b, 0xe8, 0x8a, 0x89, 0x8f, 0x68, 0xae, 0xd5, 0x11,
	0xc7, 0xe9, 0x9f, 0xc3, 0x1d, 0xf7, 0x61, 0x0a, 0xa6, 0x0b, 0x5a, 0x88, 0x0c, 0xff, 0x66, 0x39,
	0x5a, 0xd3, 0x89, 0x6e, 0xa2, 0x76, 0x68, 0x95, 0x07, 0x22, 0xb3, 0x7f, 0xb2, 0x9c, 0xfc, 0x08,
	0xde, 0x96, 0x7c, 0x5a, 0xd0, 0x73, 0x23, 0x35, 0xcf, 0x98, 0x90, 0x42, 0x1e, 0x53, 0x21, 0x69,
	0x26, 0xd2, 0x54, 0x18, 0x1e, 0x7b, 0xeb, 0x1f, 0xd9, 0x21, 0xdf, 0x6f, 0xb1, 0x45, 0x25, 0x7c,
	0x57, 0xee, 0x79, 0x70, 0xcd, 0xcd, 0xe2, 0x1f, 0xf3, 0x82, 0x1a, 0x2e, 0x2f, 0xe4, 0x5e, 0x6c,
	0x70, 0xe3, 0x88, 0x21, 0x97, 0x73, 0xb9, 0x9f, 0xc3, 0x1d, 0x39, 0xce, 0x8e, 0xb8, 0xa6, 0x6a,
	0xe4, 0x27, 0x30, 0x38, 0x83, 0x5f, 0xab, 0x9b, 0x4e, 0xfb, 0xe1, 0xc8, 0x51, 0x19, 0xcb, 0x45,
	0xbe, 0x0d, 0xf7, 0xce, 0x0f, 0xd2, 0x3c, 0xe6, 0x62, 0xc2, 0x93, 0xf0, 0x4b, 0x38, 0xf0, 0xee,
	0x99, 0x81, 0x91, 0x57, 0x93, 0xdf, 0x07, 0xd0, 0x73, 0xab, 0xa4, 0xb9, 0x19, 0xa7, 0x85, 0x09,
	0xdf, 0x58, 0x0f, 0x36, 0xba, 0x5b, 0x3f, 0xdd, 0xbc, 0xcc, 0x20, 0xde, 0x6c, 0x85, 0x5c, 0x74,
	0x1d, 0x2d, 0x8a, 0x9c, 0x41, 0xe4, 0x25, 0x84, 0xce, 0x42, 0xa9, 0x0a, 0xaa, 0xc7, 0x12, 0x97,
	0x58, 0x73, 0x66, 0x94, 0x0c, 0xaf, 0x61, 0x08, 0xdf, 0x46, 0xfd, 0xbe, 0x2a, 0x22, 0xa7, 0x8d,
	0x50, 0x39, 0x10, 0x78, 0x38, 0x6d, 0x38, 0x19, 0x96, 0xe5, 0xa9, 0x8b, 0xa7, 0xb7, 0x61, 0xb5,
	0x61, 0xb1, 0x9b, 0xd5, 0x87, 0x52, 0xbf, 0xa1, 0x38, 0xb4, 0x72, 0xf2, 0x04, 0x56, 0x7e, 0x32,
	0xe6, 0xfa, 0x14, 0x37, 0xd8, 0x45, 0xdd, 0x02, 0x42, 0x6f, 0xa0, 0xf8, 0xa0, 0x94, 0x0e, 0xfe,
	0xb3, 0x04, 0xf7, 0xf3, 0x8c, 0x5a, 0xa9, 0xe0, 0x9a, 0x26, 0x3c, 0x65, 0xa7, 0x34, 0x56, 0x63,
	0xeb, 0xa7, 0x3b, 0x46, 0xef, 0x00, 0x71, 0x54, 0xad, 0x6d, 0xf5, 0x13, 0xa3, 0xa6, 0xb9, 0xa7,
	0x2f, 0x21, 0x6c, 0xa2, 0x5d, 0x94, 0x71, 0xad, 0x95, 0x36, 0xde, 0x82, 0xdb, 0x8d, 0x31, 0x76,
	0xc8, 0x0e, 0x2a, 0xc9, 0x3e, 0x3c, 0x9a, 0x33, 0x90, 0x4a, 0x45, 0x45, 0x4e, 0x59, 0x92, 0x68,
	0x6e, 0x0c, 0xc6, 0x65, 0x27, 0xfa, 0xca, 0x2c, 0x96, 0x7d, 0xb5, 0x9b, 0xbf, 0x72, 0x30, 0xf2,
	0x2e, 0xdc, 0x69, 0x9b, 0x5d, 0x05, 0x56, 0x07, 0x09, 0x6e, 0x35, 0x4d, 0xaf, 0xa2, 0x6a, 0x1f,
	0x1e, 0x96, 0xb8, 0xd2, 0x10, 0x6f, 0x03, 0x3f, 0x66, 0x85, 0x98, 0x70, 0xb7, 0x42, 0x18, 0x9c,
	0x9d, 0x68, 0xbd, 0xc4, 0x3a, 0x1a, 0x67, 0x83, 0x07, 0xbe, 0x67, 0x71, 0x84, 0xc2, 0x57, 0x67,
	0xf3, 0xb9, 0x85, 0xe6, 0xd3, 0x98, 0xf3, 0xc4, 0xd0, 0xe2, 0x44, 0x73, 0x73, 0xa2, 0xd2, 0x04,
	0x83, 0xb8, 0x13, 0x6d, 0xcc, 0x20, 0x46, 0xc2, 0x1d, 0x37, 0xe0, 0xa0, 0xc4, 0x93, 0x8f, 0xe1,
	0xd9, 0xec, 0x09, 0x32, 0x61, 0x8c, 0x8d, 0xb7, 0x62, 0xda, 0x88, 0x81, 0x6b, 0xc8, 0xfe, 0x68,
	0x06, 0xfb, 0x9e, 0x83, 0x1f, 0x4c, 0xab, 0xd0, 0x78, 0x3d, 0xb5, 0x6e, 0x52, 0x2f, 0xbd, 0x8e,
	0x3a, 0x6a, 0x50, 0xbf, 0x0f, 0xeb, 0xb3, 0xa9, 0xdd, 0x79, 0x19, 0x8d, 0xd3, 0x34, 0x5c, 0x46,
	0xc2, 0xb5, 0x19, 0x84, 0x98, 0xea, 0xde, 0x1f, 0xa7, 0x29, 0x19, 0xc2, 0x93, 0x8b, 0x78, 0xec,
	0xb9, 0xc3, 0x1c, 0xca, 0x93, 0x10, 0x90, 0x6e, 0x30, 0x8f, 0x6e, 0x5f, 0x15, 0x43, 0x87, 0x24,
	0xdf, 0x81, 0xc1, 0x59, 0xd2, 0x58, 0xc9, 0x42, 0xab, 0x94, 0xc6, 0x2a, 0xe1, 0x6e, 0x86, 0xb0,
	0x8b, 0x7c, 0x0f, 0xda, 0x7c, 0xdb, 0x0e, 0xb7, 0xad, 0x12, 0x8e, 0xd4, 0xe4, 0x23, 0x78, 0x7a,
	0x21, 0x97, 0x54, 0x85, 0x18, 0x89, 0x98, 0x15, 0x42, 0xc9, 0xf0, 0xfa, 0xac, 0x25, 0x6c, 0x50,
	0xee, 0x37, 0xc0, 0xb6, 0x2a, 0xa2, 0x93, 0xa6, 0xf2, 0xb0, 0x87, 0xc3, 0x5d, 0x52, 0x34, 0xa5,
	0x33, 0x4f, 0x60, 0xc5, 0xc3, 0x62, 0x65, 0x53, 0x49, 0xc1, 0xc3, 0x1b, 0x2e, 0x11, 0x38, 0xf1,
	0xb6, 0x97, 0xda, 0xf4, 0xe2, 0x81, 0x42, 0x56, 0xd0, 0x15, 0x77, 0xca, 0x9d, 0x62, 0xb7, 0x92,
	0x93, 0x87, 0xd0, 0x63, 0xc9, 0x84, 0xeb, 0x42, 0x18, 0x4c, 0x3a, 0x61, 0xdf, 0xcd, 0xdd, 0x12,
	0x0e, 0xfe, 0x15, 0xc0, 0xd3, 0xb2, 0xc2, 0xf3, 0x69, 0x9c, 0x8e, 0x4d, 0x75, 0x80, 0xea, 0x14,
	0x23, 0xe4, 0x48, 0x61, 0x9e, 0xf9, 0x01, 0x3c, 0x9e, 0x97, 0x00, 0x1a, 0x59, 0x57, 0x7d, 0x22,
	0x7d, 0xee, 0x79, 0x6b, 0x56, 0x06, 0xd8, 0x2d, 0x91, 0xef, 0xa9, 0x4f, 0x24, 0xf9, 0x1e, 0x3c,
	0xbc, 0x20, 0xa7, 0x64, 0x79, 0x6a, 0x68, 0xcc, 0xf2, 0x32, 0x31, 0x3d, 0x98, 0x9d, 0x52, 0xf6,
	0xf2, 0xd4, 0x6c, 0xb3, 0xdc, 0x0c, 0x7e, 0xb7, 0x00, 0x8f, 0xf3, 0xec, 0x35, 0x9e, 0x8c, 0xa5,
	0xdd, 0x1c, 0x02, 0x9d, 0xe2, 0x34, 0xaf, 0xda, 0x18, 0xfb, 0x9f, 0x7c, 0x1e, 0xc0, 0x5a, 0xed,
	0x48, 0xcd, 0x52, 0x8e, 0x47, 0x2b, 0xba, 0x5b, 0xbf, 0x0d, 0x2e, 0xbd, 0x80, 0x7d, 0xb1, 0x0d,
	0x8a, 0xee, 0x55, 0x63, 0x77, 0x4a, 0xec, 0xb6, 0x07, 0x0d, 0x3e, 0x5d, 0x84, 0x7b, 0x79, 0x36,
	0x77, 0x6f, 0xff, 0x12, 0x40, 0xff, 0x98, 0x4b, 0xae, 0x45, 0x5c, 0xfb, 0x1b, 0xa0, 0xbf, 0xbf,
	0xbe, 0x7c, 0x7f, 0xe7, 0x17, 0xbb, 0x68, 0xc5, 0x5b, 0x59, 0x3a, 0x46, 0xfe, 0x1e, 0x00, 0x99,
	0xbb, 0x57, 0xbf, 0xb9, 0x7c, 0xdb, 0xbf, 0x40, 0xf4, 0x45, 0xab, 0xfc, 0xdc, 0xfe, 0xfc, 0x79,
	0x01, 0xee, 0xf8, 0x96, 0x22, 0x65, 0xa6, 0xa0, 0xee, 0xa0, 0xe2, 0xde, 0x6c, 0xc1, 0x6d, 0xec,
	0x02, 0xd5, 0x88, 0xb6, 0xcf, 0xb4, 0x6f, 0x53, 0xad, 0xf2, 0xc3, 0xd1, 0xab, 0xa6, 0x8a, 0x7c,
	0x0d, 0x6e, 0xb5, 0xb0, 0x65, 0x57, 0xe3, 0x1a, 0xf3, 0x9b, 0x2d, 0x9d, 0xeb, 0x69, 0xc8, 0x9f,
	0x02, 0x58, 0xad, 0xe4, 0x89, 0x6f, 0x9a, 0xb0, 0x98, 0x5f, 0x71, 0xcf, 0xd6, 0xaf, 0xad, 0xc2,
	0xde, 0xc9, 0x0c, 0x3e, 0xaf, 0x17, 0x0b, 0x1b, 0xe6, 0xc6, 0x62, 0xfd, 0x10, 0x9e, 0xb4, 0x1d,
	0x47, 0xf2, 0x09, 0x4b, 0xa9, 0x4f, 0x9e, 0x55, 0x2f, 0xed, 0xef, 0x1c, 0x0f, 0x5b, 0xf0, 0x5d,
	0x8f, 0xc6, 0x92, 0x63, 0xaa, 0x46, 0x9a, 0xfc, 0x2d, 0x80, 0xfb, 0x73, 0x78, 0xfd, 0x42, 0x2d,
	0x5c, 0xfd, 0x42, 0xbd, 0x39, 0xd3, 0x15, 0xb7, 0x66, 0xb6, 0xce, 0x68, 0x95, 0xa6, 0xb6, 0x2d,
	0x28, 0x2f, 0x5d, 0xee, 0x02, 0x71, 0xc3, 0x8b, 0x5f, 0x39, 0xe9, 0xe0, 0x10, 0x6e, 0xfa, 0xb5,
	0x6d, 0x16, 0x42, 0xf2, 0x16, 0x5c, 0x6f, 0x7e, 0xfb, 0xd5, 0xeb, 0xc6, 0x75, 0xf5, 0x23, 0x6b,
	0xb0, 0x7c, 0xb6, 0x9b, 0xad, 0x05, 0x83, 0xff, 0x76, 0x01, 0x3c, 0xb1, 0xdd, 0xa8, 0xfb, 0x00,
	0x86, 0x1b, 0x23, 0x94, 0xa4, 0x22, 0xf1, 0x6c, 0xcb, 0x5e, 0xb2, 0x9b, 0xd8, 0xea, 0x59, 0x68,
	0x26, 0x4d, 0xae, 0xec, 0x05, 0xcb, 0xa6, 0x6a, 0x7f, 0xa7, 0xac, 0xa4, 0x07, 0x36, 0x67, 0x3f,
	0x85, 0x66, 0x6b, 0xed, 0x80, 0x8b, 0x08, 0x5c, 0x69, 0xc8, 0x11, 0xfa, 0x87, 0x00, 0x7a, 0xf1,
	0x58, 0x6b, 0x8b, 0xc3, 0x58, 0xc0, 0x3e, 0xb3, 0xbb, 0xf5, 0xb3, 0x4b, 0xdf, 0xb2, 0xd6, 0x35,
	0x34, 0xba, 0xee, 0x8d, 0xc2, 0x90, 0x23, 0x7f, 0xac, 0x6e, 0x4d, 0x27, 0xc2, 0x14, 0x4a, 0xdb,
	0x4e, 0x76, 0x71, 0xa3, 0xbb, 0xf5, 0xf3, 0x2b, 0xb1, 0xb2, 0xbe, 0xdd, 0xf8, 0x9b, 0xd3, 0x07,
	0xce, 0x28, 0xf2, 0x59, 0x00, 0xfd, 0x72, 0xfb, 0xaa, 0x9c, 0xeb, 0xee, 0x77, 0xbf, 0xba, 0xfc,
	0x9c, 0x3b, 0xaf, 0x20, 0xae, 0x78, 0x13, 0xab, 0x62, 0x11, 0xc1, 0xe3, 0x9c, 0x6b, 0xa1, 0x12,
	0x11, 0xd3, 0x39, 0xc7, 0x59, 0x48, 0x6a, 0x2f, 0xd7, 0xd7, 0x30, 0x20, 0x07, 0x25, 0xfa, 0xd5,
	0xac, 0x93, 0xb5, 0x2b, 0x87, 0x3c, 0x26, 0xff, 0x0c, 0xe0, 0x41, 0x23, 0x65, 0xd7, 0x84, 0xe8,
	0x26, 0xf6, 0x8d, 0x4b, 0xb8, 0x30, 0xbf, 0x0c, 0xae, 0x64, 0x0f, 0xcf, 0x94, 0x93, 0x68, 0xcd,
	0x0a, 0xce, 0xf8, 0x53, 0x99, 0x8a, 0xde, 0x34, 0x72, 0xea, 0x2c, 0x6f, 0x96, 0xaf, 0xd2, 0x9b,
	0x33, 0xf9, 0x3e, 0x5a, 0xb3, 0x82, 0xb9, 0xde, 0xfc, 0xa3, 0xdc, 0x9b, 0x66, 0x1b, 0xdf, 0xca,
	0x6b, 0x78, 0xed, 0xe8, 0x6e, 0xfd, 0xe2, 0x6a, 0xbc, 0x69, 0x5a, 0x12, 0xbd, 0x69, 0x2d, 0x6d,
	0x5e, 0x21, 0x1a, 0x37, 0x0b, 0xf2, 0xd7, 0x00, 0xee, 0xa2, 0x27, 0xae, 0x3b, 0x6e, 0xb9, 0xd0,
	0xfd, 0xbf, 0x71, 0xe1, 0x96, 0x35, 0x11, 0xdb, 0xf2, 0x86, 0xed, 0x83, 0x4f, 0x3b, 0xd0, 0x6d,
	0x3c, 0x24, 0x92, 0x67, 0xb0, 0xda, 0x7e, 0x2f, 0xa4, 0x53, 0x1d, 0x6e, 0xb9, 0xac, 0xdd, 0x7a,
	0x32, 0xfc, 0x48, 0xdb, 0x04, 0x5f, 0x63, 0x4f, 0x98, 0x4c, 0x52, 0x1e, 0x3e, 0xc7, 0xb3, 0x59,
	0x43, 0x3f, 0x40, 0xb1, 0xad, 0x70, 0x35, 0xd4, 0x14, 0xac, 0xe0, 0xe1, 0xbb, 0xeb, 0xc1, 0xc6,
	0x52, 0x54, 0xbf, 0x4e, 0x0e, 0xad, 0xd4, 0xd6, 0x16, 0xa3, 0xc6, 0x3a, 0xe6, 0xd5, 0x93, 0xc5,
	0xd7, 0x5d, 0x6d, 0x71, 0xd2, 0xf2, 0x81, 0xe2, 0x19, 0xac, 0x7a, 0xd8, 0xe4, 0x45, 0x85, 0x7c,
	0xe1, 0xcc, 0x74, 0x8a, 0xc3, 0x17, 0x25, 0xf6, 0x1d, 0x20, 0x1e, 0x9b, 0xb1, 0xb8, 0x02, 0xbf,
	0x44, 0x70, 0xdf, 0x69, 0xf6, 0x58, 0x5c, 0xa2, 0x37, 0xa0, 0x9f, 0x6b, 0x91, 0x31, 0x7d, 0x4a,
	0x27, 0x29, 0x93, 0xb4, 0x60, 0xc7, 0xe1, 0x37, 0x5c, 0x31, 0xf6, 0xf2, 0xc3, 0x94, 0xc9, 0x03,
	0xf7, 0xb6, 0x63, 0x78, 0xac, 0x64, 0xd2, 0xc2, 0x7e, 0x13, 0xb1, 0xfd, 0x4a, 0x53, 0xa2, 0x3f,
	0x0b, 0xe0, 0xcb, 0x2e, 0x17, 0x36, 0x8b, 0xa2, 0x4f, 0x82, 0xe1, 0xb7, 0xb0, 0x90, 0x4c, 0xaf,
	0x24, 0x4a, 0xec, 0x51, 0xbd, 0x8b, 0xa6, 0xed, 0xd5, 0xac, 0x43, 0x67, 0xd8, 0xd1, 0x1b, 0xf8,
	0xb8, 0xfd, 0xfc, 0x7f, 0x01, 0x00, 0x00, 0xff, 0xff, 0x96, 0x4d, 0x00, 0x88, 0xf1, 0x16, 0x00,
	0x00,
}
