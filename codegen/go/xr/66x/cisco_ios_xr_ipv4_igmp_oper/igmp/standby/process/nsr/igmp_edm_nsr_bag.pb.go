/*
Copyright 2019 Cisco Systems

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: igmp_edm_nsr_bag.proto

package cisco_ios_xr_ipv4_igmp_oper_igmp_standby_process_nsr

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type IgmpEdmNsrBag_KEYS struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IgmpEdmNsrBag_KEYS) Reset()         { *m = IgmpEdmNsrBag_KEYS{} }
func (m *IgmpEdmNsrBag_KEYS) String() string { return proto.CompactTextString(m) }
func (*IgmpEdmNsrBag_KEYS) ProtoMessage()    {}
func (*IgmpEdmNsrBag_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_893a9427d26c16e0, []int{0}
}

func (m *IgmpEdmNsrBag_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IgmpEdmNsrBag_KEYS.Unmarshal(m, b)
}
func (m *IgmpEdmNsrBag_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IgmpEdmNsrBag_KEYS.Marshal(b, m, deterministic)
}
func (m *IgmpEdmNsrBag_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IgmpEdmNsrBag_KEYS.Merge(m, src)
}
func (m *IgmpEdmNsrBag_KEYS) XXX_Size() int {
	return xxx_messageInfo_IgmpEdmNsrBag_KEYS.Size(m)
}
func (m *IgmpEdmNsrBag_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_IgmpEdmNsrBag_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_IgmpEdmNsrBag_KEYS proto.InternalMessageInfo

type IgmpEdmNsrBag struct {
	State                 uint32   `protobuf:"varint,50,opt,name=state,proto3" json:"state,omitempty"`
	PartnerProcConnected  bool     `protobuf:"varint,51,opt,name=partner_proc_connected,json=partnerProcConnected,proto3" json:"partner_proc_connected,omitempty"`
	CollabConvDone        bool     `protobuf:"varint,52,opt,name=collab_conv_done,json=collabConvDone,proto3" json:"collab_conv_done,omitempty"`
	RmfNotificationDone   bool     `protobuf:"varint,53,opt,name=rmf_notification_done,json=rmfNotificationDone,proto3" json:"rmf_notification_done,omitempty"`
	LastProc              uint64   `protobuf:"varint,54,opt,name=last_proc,json=lastProc,proto3" json:"last_proc,omitempty"`
	LastProcConnectionUp  uint64   `protobuf:"varint,55,opt,name=last_proc_connection_up,json=lastProcConnectionUp,proto3" json:"last_proc_connection_up,omitempty"`
	LastProcConnectionDn  uint64   `protobuf:"varint,56,opt,name=last_proc_connection_dn,json=lastProcConnectionDn,proto3" json:"last_proc_connection_dn,omitempty"`
	LastRmfReady          uint64   `protobuf:"varint,57,opt,name=last_rmf_ready,json=lastRmfReady,proto3" json:"last_rmf_ready,omitempty"`
	LastRmfNotReady       uint64   `protobuf:"varint,58,opt,name=last_rmf_not_ready,json=lastRmfNotReady,proto3" json:"last_rmf_not_ready,omitempty"`
	CountProcConnectionUp uint32   `protobuf:"varint,59,opt,name=count_proc_connection_up,json=countProcConnectionUp,proto3" json:"count_proc_connection_up,omitempty"`
	CountProcConnectionDn uint32   `protobuf:"varint,60,opt,name=count_proc_connection_dn,json=countProcConnectionDn,proto3" json:"count_proc_connection_dn,omitempty"`
	CountRmfReady         uint32   `protobuf:"varint,61,opt,name=count_rmf_ready,json=countRmfReady,proto3" json:"count_rmf_ready,omitempty"`
	CountRmfNotReady      uint32   `protobuf:"varint,62,opt,name=count_rmf_not_ready,json=countRmfNotReady,proto3" json:"count_rmf_not_ready,omitempty"`
	XXX_NoUnkeyedLiteral  struct{} `json:"-"`
	XXX_unrecognized      []byte   `json:"-"`
	XXX_sizecache         int32    `json:"-"`
}

func (m *IgmpEdmNsrBag) Reset()         { *m = IgmpEdmNsrBag{} }
func (m *IgmpEdmNsrBag) String() string { return proto.CompactTextString(m) }
func (*IgmpEdmNsrBag) ProtoMessage()    {}
func (*IgmpEdmNsrBag) Descriptor() ([]byte, []int) {
	return fileDescriptor_893a9427d26c16e0, []int{1}
}

func (m *IgmpEdmNsrBag) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IgmpEdmNsrBag.Unmarshal(m, b)
}
func (m *IgmpEdmNsrBag) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IgmpEdmNsrBag.Marshal(b, m, deterministic)
}
func (m *IgmpEdmNsrBag) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IgmpEdmNsrBag.Merge(m, src)
}
func (m *IgmpEdmNsrBag) XXX_Size() int {
	return xxx_messageInfo_IgmpEdmNsrBag.Size(m)
}
func (m *IgmpEdmNsrBag) XXX_DiscardUnknown() {
	xxx_messageInfo_IgmpEdmNsrBag.DiscardUnknown(m)
}

var xxx_messageInfo_IgmpEdmNsrBag proto.InternalMessageInfo

func (m *IgmpEdmNsrBag) GetState() uint32 {
	if m != nil {
		return m.State
	}
	return 0
}

func (m *IgmpEdmNsrBag) GetPartnerProcConnected() bool {
	if m != nil {
		return m.PartnerProcConnected
	}
	return false
}

func (m *IgmpEdmNsrBag) GetCollabConvDone() bool {
	if m != nil {
		return m.CollabConvDone
	}
	return false
}

func (m *IgmpEdmNsrBag) GetRmfNotificationDone() bool {
	if m != nil {
		return m.RmfNotificationDone
	}
	return false
}

func (m *IgmpEdmNsrBag) GetLastProc() uint64 {
	if m != nil {
		return m.LastProc
	}
	return 0
}

func (m *IgmpEdmNsrBag) GetLastProcConnectionUp() uint64 {
	if m != nil {
		return m.LastProcConnectionUp
	}
	return 0
}

func (m *IgmpEdmNsrBag) GetLastProcConnectionDn() uint64 {
	if m != nil {
		return m.LastProcConnectionDn
	}
	return 0
}

func (m *IgmpEdmNsrBag) GetLastRmfReady() uint64 {
	if m != nil {
		return m.LastRmfReady
	}
	return 0
}

func (m *IgmpEdmNsrBag) GetLastRmfNotReady() uint64 {
	if m != nil {
		return m.LastRmfNotReady
	}
	return 0
}

func (m *IgmpEdmNsrBag) GetCountProcConnectionUp() uint32 {
	if m != nil {
		return m.CountProcConnectionUp
	}
	return 0
}

func (m *IgmpEdmNsrBag) GetCountProcConnectionDn() uint32 {
	if m != nil {
		return m.CountProcConnectionDn
	}
	return 0
}

func (m *IgmpEdmNsrBag) GetCountRmfReady() uint32 {
	if m != nil {
		return m.CountRmfReady
	}
	return 0
}

func (m *IgmpEdmNsrBag) GetCountRmfNotReady() uint32 {
	if m != nil {
		return m.CountRmfNotReady
	}
	return 0
}

func init() {
	proto.RegisterType((*IgmpEdmNsrBag_KEYS)(nil), "cisco_ios_xr_ipv4_igmp_oper.igmp.standby.process.nsr.igmp_edm_nsr_bag_KEYS")
	proto.RegisterType((*IgmpEdmNsrBag)(nil), "cisco_ios_xr_ipv4_igmp_oper.igmp.standby.process.nsr.igmp_edm_nsr_bag")
}

func init() { proto.RegisterFile("igmp_edm_nsr_bag.proto", fileDescriptor_893a9427d26c16e0) }

var fileDescriptor_893a9427d26c16e0 = []byte{
	// 376 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x92, 0xcb, 0xca, 0xdb, 0x30,
	0x10, 0x85, 0x09, 0xfc, 0x2d, 0xa9, 0x68, 0x2e, 0x28, 0x37, 0x41, 0x37, 0x21, 0x94, 0x62, 0x28,
	0xf5, 0x22, 0x71, 0x9a, 0xde, 0x37, 0x49, 0x57, 0x85, 0x50, 0x5c, 0xba, 0xe8, 0x4a, 0xc8, 0xb2,
	0x1c, 0x0c, 0xf1, 0x8c, 0x91, 0x94, 0xd0, 0x3c, 0x6f, 0x5f, 0xa4, 0x48, 0x8e, 0x9d, 0x92, 0xfe,
	0xde, 0x49, 0xe7, 0x7c, 0x67, 0x98, 0x83, 0x44, 0xa6, 0xf9, 0xa1, 0x28, 0xb9, 0x4a, 0x0b, 0x0e,
	0x46, 0xf3, 0x44, 0x1c, 0xc2, 0x52, 0xa3, 0x45, 0x1a, 0xc9, 0xdc, 0x48, 0xe4, 0x39, 0x1a, 0xfe,
	0x5b, 0xf3, 0xbc, 0x3c, 0x47, 0xdc, 0x93, 0x58, 0x2a, 0x1d, 0xba, 0x53, 0x68, 0xac, 0x80, 0x34,
	0xb9, 0x38, 0x5e, 0x2a, 0x63, 0x42, 0x30, 0x7a, 0x31, 0x23, 0x93, 0xfb, 0x79, 0xfc, 0xdb, 0xd7,
	0x5f, 0x3f, 0x16, 0x7f, 0x1e, 0xc8, 0xf0, 0xde, 0xa1, 0x63, 0xf2, 0xc4, 0x58, 0x61, 0x15, 0x5b,
	0xce, 0x3b, 0x41, 0x2f, 0xae, 0x2e, 0x34, 0x22, 0xd3, 0x52, 0x68, 0x0b, 0x4a, 0x73, 0x37, 0x9a,
	0x4b, 0x04, 0x50, 0xd2, 0xaa, 0x94, 0xad, 0xe6, 0x9d, 0xa0, 0x1b, 0x8f, 0xaf, 0xee, 0x77, 0x8d,
	0x72, 0x5b, 0x7b, 0x34, 0x20, 0x43, 0x89, 0xc7, 0xa3, 0x48, 0x1c, 0x7f, 0xe6, 0x29, 0x82, 0x62,
	0x91, 0xe7, 0xfb, 0x95, 0xbe, 0x45, 0x38, 0xef, 0x10, 0x14, 0x5d, 0x92, 0x89, 0x2e, 0x32, 0x0e,
	0x68, 0xf3, 0x2c, 0x97, 0xc2, 0xe6, 0x08, 0x15, 0xbe, 0xf6, 0xf8, 0x48, 0x17, 0xd9, 0xfe, 0x1f,
	0xcf, 0x67, 0x5e, 0x90, 0x67, 0x47, 0x61, 0xac, 0x5f, 0x88, 0xbd, 0x9d, 0x77, 0x82, 0x87, 0xb8,
	0xeb, 0x04, 0xb7, 0x03, 0x5d, 0x93, 0x59, 0x63, 0xd6, 0xdb, 0xba, 0xa1, 0xa7, 0x92, 0x6d, 0x3c,
	0x3a, 0xae, 0xd1, 0x6d, 0x63, 0xfe, 0x2c, 0x5b, 0x63, 0x29, 0xb0, 0x77, 0x6d, 0xb1, 0x1d, 0xd0,
	0x97, 0xa4, 0xef, 0x63, 0xae, 0x83, 0x56, 0x22, 0xbd, 0xb0, 0xf7, 0x9e, 0x7e, 0xee, 0xd4, 0xb8,
	0xc8, 0x62, 0xa7, 0xd1, 0xd7, 0x84, 0x36, 0x14, 0xa0, 0xbd, 0x92, 0x1f, 0x3c, 0x39, 0xb8, 0x92,
	0x7b, 0xb4, 0x15, 0xbc, 0x21, 0x4c, 0xe2, 0x09, 0x1e, 0x6d, 0xf0, 0xd1, 0x3f, 0xcd, 0xc4, 0xfb,
	0xff, 0x55, 0x68, 0x0d, 0xa6, 0xc0, 0x3e, 0xb5, 0x06, 0x77, 0x40, 0x5f, 0x91, 0x41, 0x15, 0xbc,
	0xb5, 0xf8, 0xec, 0xf9, 0x9e, 0x97, 0x9b, 0x1a, 0x6f, 0xc8, 0xe8, 0xc6, 0xdd, 0x7a, 0x7c, 0xf1,
	0xec, 0xb0, 0x66, 0xeb, 0x22, 0xc9, 0x53, 0xff, 0x77, 0x57, 0x7f, 0x03, 0x00, 0x00, 0xff, 0xff,
	0x7b, 0x5e, 0xb2, 0x78, 0xd5, 0x02, 0x00, 0x00,
}
