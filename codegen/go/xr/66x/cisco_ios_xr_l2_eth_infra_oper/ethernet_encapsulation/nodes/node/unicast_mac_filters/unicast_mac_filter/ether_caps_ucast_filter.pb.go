/*
Copyright 2019 Cisco Systems

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: ether_caps_ucast_filter.proto

package cisco_ios_xr_l2_eth_infra_oper_ethernet_encapsulation_nodes_node_unicast_mac_filters_unicast_mac_filter

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type EtherCapsUcastFilter_KEYS struct {
	NodeName             string   `protobuf:"bytes,1,opt,name=node_name,json=nodeName,proto3" json:"node_name,omitempty"`
	InterfaceName        string   `protobuf:"bytes,2,opt,name=interface_name,json=interfaceName,proto3" json:"interface_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EtherCapsUcastFilter_KEYS) Reset()         { *m = EtherCapsUcastFilter_KEYS{} }
func (m *EtherCapsUcastFilter_KEYS) String() string { return proto.CompactTextString(m) }
func (*EtherCapsUcastFilter_KEYS) ProtoMessage()    {}
func (*EtherCapsUcastFilter_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_bf56024d4bb84104, []int{0}
}

func (m *EtherCapsUcastFilter_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EtherCapsUcastFilter_KEYS.Unmarshal(m, b)
}
func (m *EtherCapsUcastFilter_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EtherCapsUcastFilter_KEYS.Marshal(b, m, deterministic)
}
func (m *EtherCapsUcastFilter_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EtherCapsUcastFilter_KEYS.Merge(m, src)
}
func (m *EtherCapsUcastFilter_KEYS) XXX_Size() int {
	return xxx_messageInfo_EtherCapsUcastFilter_KEYS.Size(m)
}
func (m *EtherCapsUcastFilter_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_EtherCapsUcastFilter_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_EtherCapsUcastFilter_KEYS proto.InternalMessageInfo

func (m *EtherCapsUcastFilter_KEYS) GetNodeName() string {
	if m != nil {
		return m.NodeName
	}
	return ""
}

func (m *EtherCapsUcastFilter_KEYS) GetInterfaceName() string {
	if m != nil {
		return m.InterfaceName
	}
	return ""
}

type EthCapsUcastMacEntry_ struct {
	MacAddress           string   `protobuf:"bytes,1,opt,name=mac_address,json=macAddress,proto3" json:"mac_address,omitempty"`
	Mode                 string   `protobuf:"bytes,2,opt,name=mode,proto3" json:"mode,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EthCapsUcastMacEntry_) Reset()         { *m = EthCapsUcastMacEntry_{} }
func (m *EthCapsUcastMacEntry_) String() string { return proto.CompactTextString(m) }
func (*EthCapsUcastMacEntry_) ProtoMessage()    {}
func (*EthCapsUcastMacEntry_) Descriptor() ([]byte, []int) {
	return fileDescriptor_bf56024d4bb84104, []int{1}
}

func (m *EthCapsUcastMacEntry_) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EthCapsUcastMacEntry_.Unmarshal(m, b)
}
func (m *EthCapsUcastMacEntry_) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EthCapsUcastMacEntry_.Marshal(b, m, deterministic)
}
func (m *EthCapsUcastMacEntry_) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EthCapsUcastMacEntry_.Merge(m, src)
}
func (m *EthCapsUcastMacEntry_) XXX_Size() int {
	return xxx_messageInfo_EthCapsUcastMacEntry_.Size(m)
}
func (m *EthCapsUcastMacEntry_) XXX_DiscardUnknown() {
	xxx_messageInfo_EthCapsUcastMacEntry_.DiscardUnknown(m)
}

var xxx_messageInfo_EthCapsUcastMacEntry_ proto.InternalMessageInfo

func (m *EthCapsUcastMacEntry_) GetMacAddress() string {
	if m != nil {
		return m.MacAddress
	}
	return ""
}

func (m *EthCapsUcastMacEntry_) GetMode() string {
	if m != nil {
		return m.Mode
	}
	return ""
}

type EtherCapsUcastFilter struct {
	UnicastFilter        []*EthCapsUcastMacEntry_ `protobuf:"bytes,50,rep,name=unicast_filter,json=unicastFilter,proto3" json:"unicast_filter,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *EtherCapsUcastFilter) Reset()         { *m = EtherCapsUcastFilter{} }
func (m *EtherCapsUcastFilter) String() string { return proto.CompactTextString(m) }
func (*EtherCapsUcastFilter) ProtoMessage()    {}
func (*EtherCapsUcastFilter) Descriptor() ([]byte, []int) {
	return fileDescriptor_bf56024d4bb84104, []int{2}
}

func (m *EtherCapsUcastFilter) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EtherCapsUcastFilter.Unmarshal(m, b)
}
func (m *EtherCapsUcastFilter) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EtherCapsUcastFilter.Marshal(b, m, deterministic)
}
func (m *EtherCapsUcastFilter) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EtherCapsUcastFilter.Merge(m, src)
}
func (m *EtherCapsUcastFilter) XXX_Size() int {
	return xxx_messageInfo_EtherCapsUcastFilter.Size(m)
}
func (m *EtherCapsUcastFilter) XXX_DiscardUnknown() {
	xxx_messageInfo_EtherCapsUcastFilter.DiscardUnknown(m)
}

var xxx_messageInfo_EtherCapsUcastFilter proto.InternalMessageInfo

func (m *EtherCapsUcastFilter) GetUnicastFilter() []*EthCapsUcastMacEntry_ {
	if m != nil {
		return m.UnicastFilter
	}
	return nil
}

func init() {
	proto.RegisterType((*EtherCapsUcastFilter_KEYS)(nil), "cisco_ios_xr_l2_eth_infra_oper.ethernet_encapsulation.nodes.node.unicast_mac_filters.unicast_mac_filter.ether_caps_ucast_filter_KEYS")
	proto.RegisterType((*EthCapsUcastMacEntry_)(nil), "cisco_ios_xr_l2_eth_infra_oper.ethernet_encapsulation.nodes.node.unicast_mac_filters.unicast_mac_filter.eth_caps_ucast_mac_entry_")
	proto.RegisterType((*EtherCapsUcastFilter)(nil), "cisco_ios_xr_l2_eth_infra_oper.ethernet_encapsulation.nodes.node.unicast_mac_filters.unicast_mac_filter.ether_caps_ucast_filter")
}

func init() { proto.RegisterFile("ether_caps_ucast_filter.proto", fileDescriptor_bf56024d4bb84104) }

var fileDescriptor_bf56024d4bb84104 = []byte{
	// 271 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x91, 0xb1, 0x4a, 0x04, 0x31,
	0x10, 0x86, 0x59, 0x15, 0xf1, 0xe6, 0xb8, 0x2b, 0xd2, 0x78, 0xa2, 0xe2, 0xb1, 0x20, 0x5c, 0x95,
	0x62, 0x7d, 0x02, 0x0b, 0x6d, 0x04, 0x91, 0xb3, 0xb2, 0x1a, 0xe6, 0xb2, 0xb3, 0x5e, 0x60, 0x93,
	0x2c, 0x49, 0x16, 0xb4, 0xf5, 0x71, 0x7c, 0x10, 0x9f, 0x4b, 0x92, 0xdb, 0x13, 0x0b, 0xb7, 0xb5,
	0x09, 0xc9, 0xcf, 0x9f, 0x6f, 0xfe, 0x3f, 0x81, 0x4b, 0x8e, 0x5b, 0xf6, 0xa8, 0xa8, 0x0b, 0xd8,
	0x2b, 0x0a, 0x11, 0x1b, 0xdd, 0x46, 0xf6, 0xb2, 0xf3, 0x2e, 0x3a, 0xf1, 0xaa, 0x74, 0x50, 0x0e,
	0xb5, 0x0b, 0xf8, 0xe6, 0xb1, 0xad, 0x90, 0xe3, 0x16, 0xb5, 0x6d, 0x3c, 0xa1, 0xeb, 0xd8, 0xcb,
	0x7c, 0xdb, 0x72, 0x44, 0xb6, 0x09, 0xd1, 0xb7, 0x14, 0xb5, 0xb3, 0xd2, 0xba, 0x9a, 0x43, 0x5e,
	0x65, 0x6f, 0x75, 0xc6, 0x1a, 0x52, 0x03, 0x3a, 0xfc, 0xa1, 0x95, 0x1b, 0xb8, 0x18, 0x49, 0x82,
	0x0f, 0x77, 0x2f, 0xcf, 0xe2, 0x1c, 0x26, 0x09, 0x87, 0x96, 0x0c, 0x2f, 0x8a, 0x65, 0xb1, 0x9a,
	0xac, 0x4f, 0x92, 0xf0, 0x48, 0x86, 0xc5, 0x35, 0xcc, 0xb5, 0x8d, 0xec, 0x1b, 0x52, 0x83, 0xe3,
	0x20, 0x3b, 0x66, 0x3f, 0x6a, 0xb2, 0x95, 0x4f, 0x70, 0x96, 0xe2, 0xff, 0x9a, 0x90, 0x02, 0xb0,
	0x8d, 0xfe, 0x1d, 0xc5, 0x15, 0x4c, 0xd3, 0x89, 0xea, 0xda, 0x73, 0x08, 0xc3, 0x08, 0x30, 0xa4,
	0x6e, 0x77, 0x8a, 0x10, 0x70, 0x64, 0x5c, 0xbd, 0x47, 0xe7, 0x7d, 0xf9, 0x55, 0xc0, 0xe9, 0x48,
	0x6c, 0xf1, 0x59, 0xc0, 0x7c, 0x5f, 0x74, 0x27, 0x2d, 0xaa, 0xe5, 0xe1, 0x6a, 0x5a, 0x7d, 0x14,
	0xf2, 0x9f, 0x5e, 0x55, 0x8e, 0xd6, 0x5d, 0xcf, 0x06, 0xf7, 0x7d, 0x36, 0x6e, 0x8e, 0xf3, 0x77,
	0xdf, 0x7c, 0x07, 0x00, 0x00, 0xff, 0xff, 0xee, 0x14, 0x0a, 0x02, 0x0f, 0x02, 0x00, 0x00,
}
