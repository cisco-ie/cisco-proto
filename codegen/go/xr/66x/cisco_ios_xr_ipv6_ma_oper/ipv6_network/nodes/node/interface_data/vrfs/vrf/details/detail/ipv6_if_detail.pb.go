/*
Copyright 2019 Cisco Systems

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: ipv6_if_detail.proto

package cisco_ios_xr_ipv6_ma_oper_ipv6_network_nodes_node_interface_data_vrfs_vrf_details_detail

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Ipv6IfDetail_KEYS struct {
	NodeName             string   `protobuf:"bytes,1,opt,name=node_name,json=nodeName,proto3" json:"node_name,omitempty"`
	VrfName              string   `protobuf:"bytes,2,opt,name=vrf_name,json=vrfName,proto3" json:"vrf_name,omitempty"`
	InterfaceName        string   `protobuf:"bytes,3,opt,name=interface_name,json=interfaceName,proto3" json:"interface_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Ipv6IfDetail_KEYS) Reset()         { *m = Ipv6IfDetail_KEYS{} }
func (m *Ipv6IfDetail_KEYS) String() string { return proto.CompactTextString(m) }
func (*Ipv6IfDetail_KEYS) ProtoMessage()    {}
func (*Ipv6IfDetail_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_18e8a81a5edd963e, []int{0}
}

func (m *Ipv6IfDetail_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Ipv6IfDetail_KEYS.Unmarshal(m, b)
}
func (m *Ipv6IfDetail_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Ipv6IfDetail_KEYS.Marshal(b, m, deterministic)
}
func (m *Ipv6IfDetail_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Ipv6IfDetail_KEYS.Merge(m, src)
}
func (m *Ipv6IfDetail_KEYS) XXX_Size() int {
	return xxx_messageInfo_Ipv6IfDetail_KEYS.Size(m)
}
func (m *Ipv6IfDetail_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_Ipv6IfDetail_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_Ipv6IfDetail_KEYS proto.InternalMessageInfo

func (m *Ipv6IfDetail_KEYS) GetNodeName() string {
	if m != nil {
		return m.NodeName
	}
	return ""
}

func (m *Ipv6IfDetail_KEYS) GetVrfName() string {
	if m != nil {
		return m.VrfName
	}
	return ""
}

func (m *Ipv6IfDetail_KEYS) GetInterfaceName() string {
	if m != nil {
		return m.InterfaceName
	}
	return ""
}

type Ipv6McastGroup struct {
	Address              string   `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Ipv6McastGroup) Reset()         { *m = Ipv6McastGroup{} }
func (m *Ipv6McastGroup) String() string { return proto.CompactTextString(m) }
func (*Ipv6McastGroup) ProtoMessage()    {}
func (*Ipv6McastGroup) Descriptor() ([]byte, []int) {
	return fileDescriptor_18e8a81a5edd963e, []int{1}
}

func (m *Ipv6McastGroup) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Ipv6McastGroup.Unmarshal(m, b)
}
func (m *Ipv6McastGroup) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Ipv6McastGroup.Marshal(b, m, deterministic)
}
func (m *Ipv6McastGroup) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Ipv6McastGroup.Merge(m, src)
}
func (m *Ipv6McastGroup) XXX_Size() int {
	return xxx_messageInfo_Ipv6McastGroup.Size(m)
}
func (m *Ipv6McastGroup) XXX_DiscardUnknown() {
	xxx_messageInfo_Ipv6McastGroup.DiscardUnknown(m)
}

var xxx_messageInfo_Ipv6McastGroup proto.InternalMessageInfo

func (m *Ipv6McastGroup) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

type Ipv6AddrNode struct {
	Address              string   `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	PrefixLength         uint32   `protobuf:"varint,2,opt,name=prefix_length,json=prefixLength,proto3" json:"prefix_length,omitempty"`
	AddressState         string   `protobuf:"bytes,3,opt,name=address_state,json=addressState,proto3" json:"address_state,omitempty"`
	IsAnycast            bool     `protobuf:"varint,4,opt,name=is_anycast,json=isAnycast,proto3" json:"is_anycast,omitempty"`
	RouteTag             uint32   `protobuf:"varint,5,opt,name=route_tag,json=routeTag,proto3" json:"route_tag,omitempty"`
	ArmFlags             uint32   `protobuf:"varint,6,opt,name=arm_flags,json=armFlags,proto3" json:"arm_flags,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Ipv6AddrNode) Reset()         { *m = Ipv6AddrNode{} }
func (m *Ipv6AddrNode) String() string { return proto.CompactTextString(m) }
func (*Ipv6AddrNode) ProtoMessage()    {}
func (*Ipv6AddrNode) Descriptor() ([]byte, []int) {
	return fileDescriptor_18e8a81a5edd963e, []int{2}
}

func (m *Ipv6AddrNode) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Ipv6AddrNode.Unmarshal(m, b)
}
func (m *Ipv6AddrNode) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Ipv6AddrNode.Marshal(b, m, deterministic)
}
func (m *Ipv6AddrNode) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Ipv6AddrNode.Merge(m, src)
}
func (m *Ipv6AddrNode) XXX_Size() int {
	return xxx_messageInfo_Ipv6AddrNode.Size(m)
}
func (m *Ipv6AddrNode) XXX_DiscardUnknown() {
	xxx_messageInfo_Ipv6AddrNode.DiscardUnknown(m)
}

var xxx_messageInfo_Ipv6AddrNode proto.InternalMessageInfo

func (m *Ipv6AddrNode) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *Ipv6AddrNode) GetPrefixLength() uint32 {
	if m != nil {
		return m.PrefixLength
	}
	return 0
}

func (m *Ipv6AddrNode) GetAddressState() string {
	if m != nil {
		return m.AddressState
	}
	return ""
}

func (m *Ipv6AddrNode) GetIsAnycast() bool {
	if m != nil {
		return m.IsAnycast
	}
	return false
}

func (m *Ipv6AddrNode) GetRouteTag() uint32 {
	if m != nil {
		return m.RouteTag
	}
	return 0
}

func (m *Ipv6AddrNode) GetArmFlags() uint32 {
	if m != nil {
		return m.ArmFlags
	}
	return 0
}

type Ipv6AclConfig struct {
	InBound              string   `protobuf:"bytes,1,opt,name=in_bound,json=inBound,proto3" json:"in_bound,omitempty"`
	OutBound             string   `protobuf:"bytes,2,opt,name=out_bound,json=outBound,proto3" json:"out_bound,omitempty"`
	CommonInBound        string   `protobuf:"bytes,3,opt,name=common_in_bound,json=commonInBound,proto3" json:"common_in_bound,omitempty"`
	CommonOutBound       string   `protobuf:"bytes,4,opt,name=common_out_bound,json=commonOutBound,proto3" json:"common_out_bound,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Ipv6AclConfig) Reset()         { *m = Ipv6AclConfig{} }
func (m *Ipv6AclConfig) String() string { return proto.CompactTextString(m) }
func (*Ipv6AclConfig) ProtoMessage()    {}
func (*Ipv6AclConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_18e8a81a5edd963e, []int{3}
}

func (m *Ipv6AclConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Ipv6AclConfig.Unmarshal(m, b)
}
func (m *Ipv6AclConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Ipv6AclConfig.Marshal(b, m, deterministic)
}
func (m *Ipv6AclConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Ipv6AclConfig.Merge(m, src)
}
func (m *Ipv6AclConfig) XXX_Size() int {
	return xxx_messageInfo_Ipv6AclConfig.Size(m)
}
func (m *Ipv6AclConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_Ipv6AclConfig.DiscardUnknown(m)
}

var xxx_messageInfo_Ipv6AclConfig proto.InternalMessageInfo

func (m *Ipv6AclConfig) GetInBound() string {
	if m != nil {
		return m.InBound
	}
	return ""
}

func (m *Ipv6AclConfig) GetOutBound() string {
	if m != nil {
		return m.OutBound
	}
	return ""
}

func (m *Ipv6AclConfig) GetCommonInBound() string {
	if m != nil {
		return m.CommonInBound
	}
	return ""
}

func (m *Ipv6AclConfig) GetCommonOutBound() string {
	if m != nil {
		return m.CommonOutBound
	}
	return ""
}

type Ipv6MultiAclConfig struct {
	Inbound              []string `protobuf:"bytes,1,rep,name=inbound,proto3" json:"inbound,omitempty"`
	Outbound             []string `protobuf:"bytes,2,rep,name=outbound,proto3" json:"outbound,omitempty"`
	Common               []string `protobuf:"bytes,3,rep,name=common,proto3" json:"common,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Ipv6MultiAclConfig) Reset()         { *m = Ipv6MultiAclConfig{} }
func (m *Ipv6MultiAclConfig) String() string { return proto.CompactTextString(m) }
func (*Ipv6MultiAclConfig) ProtoMessage()    {}
func (*Ipv6MultiAclConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_18e8a81a5edd963e, []int{4}
}

func (m *Ipv6MultiAclConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Ipv6MultiAclConfig.Unmarshal(m, b)
}
func (m *Ipv6MultiAclConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Ipv6MultiAclConfig.Marshal(b, m, deterministic)
}
func (m *Ipv6MultiAclConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Ipv6MultiAclConfig.Merge(m, src)
}
func (m *Ipv6MultiAclConfig) XXX_Size() int {
	return xxx_messageInfo_Ipv6MultiAclConfig.Size(m)
}
func (m *Ipv6MultiAclConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_Ipv6MultiAclConfig.DiscardUnknown(m)
}

var xxx_messageInfo_Ipv6MultiAclConfig proto.InternalMessageInfo

func (m *Ipv6MultiAclConfig) GetInbound() []string {
	if m != nil {
		return m.Inbound
	}
	return nil
}

func (m *Ipv6MultiAclConfig) GetOutbound() []string {
	if m != nil {
		return m.Outbound
	}
	return nil
}

func (m *Ipv6MultiAclConfig) GetCommon() []string {
	if m != nil {
		return m.Common
	}
	return nil
}

type RpfConfig struct {
	Enable               bool     `protobuf:"varint,1,opt,name=enable,proto3" json:"enable,omitempty"`
	AllowDefaultRoute    bool     `protobuf:"varint,2,opt,name=allow_default_route,json=allowDefaultRoute,proto3" json:"allow_default_route,omitempty"`
	AllowSelfPing        bool     `protobuf:"varint,3,opt,name=allow_self_ping,json=allowSelfPing,proto3" json:"allow_self_ping,omitempty"`
	Mode                 uint32   `protobuf:"varint,4,opt,name=mode,proto3" json:"mode,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RpfConfig) Reset()         { *m = RpfConfig{} }
func (m *RpfConfig) String() string { return proto.CompactTextString(m) }
func (*RpfConfig) ProtoMessage()    {}
func (*RpfConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_18e8a81a5edd963e, []int{5}
}

func (m *RpfConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RpfConfig.Unmarshal(m, b)
}
func (m *RpfConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RpfConfig.Marshal(b, m, deterministic)
}
func (m *RpfConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RpfConfig.Merge(m, src)
}
func (m *RpfConfig) XXX_Size() int {
	return xxx_messageInfo_RpfConfig.Size(m)
}
func (m *RpfConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_RpfConfig.DiscardUnknown(m)
}

var xxx_messageInfo_RpfConfig proto.InternalMessageInfo

func (m *RpfConfig) GetEnable() bool {
	if m != nil {
		return m.Enable
	}
	return false
}

func (m *RpfConfig) GetAllowDefaultRoute() bool {
	if m != nil {
		return m.AllowDefaultRoute
	}
	return false
}

func (m *RpfConfig) GetAllowSelfPing() bool {
	if m != nil {
		return m.AllowSelfPing
	}
	return false
}

func (m *RpfConfig) GetMode() uint32 {
	if m != nil {
		return m.Mode
	}
	return 0
}

type BgpPaDir struct {
	Enable               uint32   `protobuf:"varint,1,opt,name=enable,proto3" json:"enable,omitempty"`
	Source               bool     `protobuf:"varint,2,opt,name=source,proto3" json:"source,omitempty"`
	Destination          bool     `protobuf:"varint,3,opt,name=destination,proto3" json:"destination,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BgpPaDir) Reset()         { *m = BgpPaDir{} }
func (m *BgpPaDir) String() string { return proto.CompactTextString(m) }
func (*BgpPaDir) ProtoMessage()    {}
func (*BgpPaDir) Descriptor() ([]byte, []int) {
	return fileDescriptor_18e8a81a5edd963e, []int{6}
}

func (m *BgpPaDir) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BgpPaDir.Unmarshal(m, b)
}
func (m *BgpPaDir) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BgpPaDir.Marshal(b, m, deterministic)
}
func (m *BgpPaDir) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BgpPaDir.Merge(m, src)
}
func (m *BgpPaDir) XXX_Size() int {
	return xxx_messageInfo_BgpPaDir.Size(m)
}
func (m *BgpPaDir) XXX_DiscardUnknown() {
	xxx_messageInfo_BgpPaDir.DiscardUnknown(m)
}

var xxx_messageInfo_BgpPaDir proto.InternalMessageInfo

func (m *BgpPaDir) GetEnable() uint32 {
	if m != nil {
		return m.Enable
	}
	return 0
}

func (m *BgpPaDir) GetSource() bool {
	if m != nil {
		return m.Source
	}
	return false
}

func (m *BgpPaDir) GetDestination() bool {
	if m != nil {
		return m.Destination
	}
	return false
}

type BgpPaConfig struct {
	Input                *BgpPaDir `protobuf:"bytes,1,opt,name=input,proto3" json:"input,omitempty"`
	Output               *BgpPaDir `protobuf:"bytes,2,opt,name=output,proto3" json:"output,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *BgpPaConfig) Reset()         { *m = BgpPaConfig{} }
func (m *BgpPaConfig) String() string { return proto.CompactTextString(m) }
func (*BgpPaConfig) ProtoMessage()    {}
func (*BgpPaConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_18e8a81a5edd963e, []int{7}
}

func (m *BgpPaConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BgpPaConfig.Unmarshal(m, b)
}
func (m *BgpPaConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BgpPaConfig.Marshal(b, m, deterministic)
}
func (m *BgpPaConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BgpPaConfig.Merge(m, src)
}
func (m *BgpPaConfig) XXX_Size() int {
	return xxx_messageInfo_BgpPaConfig.Size(m)
}
func (m *BgpPaConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_BgpPaConfig.DiscardUnknown(m)
}

var xxx_messageInfo_BgpPaConfig proto.InternalMessageInfo

func (m *BgpPaConfig) GetInput() *BgpPaDir {
	if m != nil {
		return m.Input
	}
	return nil
}

func (m *BgpPaConfig) GetOutput() *BgpPaDir {
	if m != nil {
		return m.Output
	}
	return nil
}

type TimevalEntry struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TimevalEntry) Reset()         { *m = TimevalEntry{} }
func (m *TimevalEntry) String() string { return proto.CompactTextString(m) }
func (*TimevalEntry) ProtoMessage()    {}
func (*TimevalEntry) Descriptor() ([]byte, []int) {
	return fileDescriptor_18e8a81a5edd963e, []int{8}
}

func (m *TimevalEntry) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TimevalEntry.Unmarshal(m, b)
}
func (m *TimevalEntry) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TimevalEntry.Marshal(b, m, deterministic)
}
func (m *TimevalEntry) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TimevalEntry.Merge(m, src)
}
func (m *TimevalEntry) XXX_Size() int {
	return xxx_messageInfo_TimevalEntry.Size(m)
}
func (m *TimevalEntry) XXX_DiscardUnknown() {
	xxx_messageInfo_TimevalEntry.DiscardUnknown(m)
}

var xxx_messageInfo_TimevalEntry proto.InternalMessageInfo

type Ipv6IfDetail struct {
	LineState              string              `protobuf:"bytes,50,opt,name=line_state,json=lineState,proto3" json:"line_state,omitempty"`
	MulticastGroup         []*Ipv6McastGroup   `protobuf:"bytes,51,rep,name=multicast_group,json=multicastGroup,proto3" json:"multicast_group,omitempty"`
	Mtu                    uint32              `protobuf:"varint,52,opt,name=mtu,proto3" json:"mtu,omitempty"`
	OperationState         string              `protobuf:"bytes,53,opt,name=operation_state,json=operationState,proto3" json:"operation_state,omitempty"`
	Ipv6ConfigFlag         uint32              `protobuf:"varint,54,opt,name=ipv6_config_flag,json=ipv6ConfigFlag,proto3" json:"ipv6_config_flag,omitempty"`
	Ipv6OperFlag           uint32              `protobuf:"varint,55,opt,name=ipv6_oper_flag,json=ipv6OperFlag,proto3" json:"ipv6_oper_flag,omitempty"`
	VrfName                string              `protobuf:"bytes,56,opt,name=vrf_name,json=vrfName,proto3" json:"vrf_name,omitempty"`
	Address                []*Ipv6AddrNode     `protobuf:"bytes,57,rep,name=address,proto3" json:"address,omitempty"`
	LinkLocalAddress       *Ipv6AddrNode       `protobuf:"bytes,58,opt,name=link_local_address,json=linkLocalAddress,proto3" json:"link_local_address,omitempty"`
	AccessControlList      *Ipv6AclConfig      `protobuf:"bytes,59,opt,name=access_control_list,json=accessControlList,proto3" json:"access_control_list,omitempty"`
	MultiAccessControlList *Ipv6MultiAclConfig `protobuf:"bytes,60,opt,name=multi_access_control_list,json=multiAccessControlList,proto3" json:"multi_access_control_list,omitempty"`
	IsIcmpUnreachEnabled   bool                `protobuf:"varint,61,opt,name=is_icmp_unreach_enabled,json=isIcmpUnreachEnabled,proto3" json:"is_icmp_unreach_enabled,omitempty"`
	Rpf                    *RpfConfig          `protobuf:"bytes,62,opt,name=rpf,proto3" json:"rpf,omitempty"`
	BgpPa                  *BgpPaConfig        `protobuf:"bytes,63,opt,name=bgp_pa,json=bgpPa,proto3" json:"bgp_pa,omitempty"`
	RgIdExists             bool                `protobuf:"varint,64,opt,name=rg_id_exists,json=rgIdExists,proto3" json:"rg_id_exists,omitempty"`
	MlacpActive            bool                `protobuf:"varint,65,opt,name=mlacp_active,json=mlacpActive,proto3" json:"mlacp_active,omitempty"`
	FlowTagSrc             bool                `protobuf:"varint,66,opt,name=flow_tag_src,json=flowTagSrc,proto3" json:"flow_tag_src,omitempty"`
	FlowTagDst             bool                `protobuf:"varint,67,opt,name=flow_tag_dst,json=flowTagDst,proto3" json:"flow_tag_dst,omitempty"`
	Utime                  *TimevalEntry       `protobuf:"bytes,68,opt,name=utime,proto3" json:"utime,omitempty"`
	IdbUtime               *TimevalEntry       `protobuf:"bytes,69,opt,name=idb_utime,json=idbUtime,proto3" json:"idb_utime,omitempty"`
	CapsUtime              *TimevalEntry       `protobuf:"bytes,70,opt,name=caps_utime,json=capsUtime,proto3" json:"caps_utime,omitempty"`
	FwdEnUtime             *TimevalEntry       `protobuf:"bytes,71,opt,name=fwd_en_utime,json=fwdEnUtime,proto3" json:"fwd_en_utime,omitempty"`
	FwdDisUtime            *TimevalEntry       `protobuf:"bytes,72,opt,name=fwd_dis_utime,json=fwdDisUtime,proto3" json:"fwd_dis_utime,omitempty"`
	ClientMulticastGroup   []*Ipv6McastGroup   `protobuf:"bytes,73,rep,name=client_multicast_group,json=clientMulticastGroup,proto3" json:"client_multicast_group,omitempty"`
	IdbPointer             uint64              `protobuf:"varint,74,opt,name=idb_pointer,json=idbPointer,proto3" json:"idb_pointer,omitempty"`
	XXX_NoUnkeyedLiteral   struct{}            `json:"-"`
	XXX_unrecognized       []byte              `json:"-"`
	XXX_sizecache          int32               `json:"-"`
}

func (m *Ipv6IfDetail) Reset()         { *m = Ipv6IfDetail{} }
func (m *Ipv6IfDetail) String() string { return proto.CompactTextString(m) }
func (*Ipv6IfDetail) ProtoMessage()    {}
func (*Ipv6IfDetail) Descriptor() ([]byte, []int) {
	return fileDescriptor_18e8a81a5edd963e, []int{9}
}

func (m *Ipv6IfDetail) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Ipv6IfDetail.Unmarshal(m, b)
}
func (m *Ipv6IfDetail) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Ipv6IfDetail.Marshal(b, m, deterministic)
}
func (m *Ipv6IfDetail) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Ipv6IfDetail.Merge(m, src)
}
func (m *Ipv6IfDetail) XXX_Size() int {
	return xxx_messageInfo_Ipv6IfDetail.Size(m)
}
func (m *Ipv6IfDetail) XXX_DiscardUnknown() {
	xxx_messageInfo_Ipv6IfDetail.DiscardUnknown(m)
}

var xxx_messageInfo_Ipv6IfDetail proto.InternalMessageInfo

func (m *Ipv6IfDetail) GetLineState() string {
	if m != nil {
		return m.LineState
	}
	return ""
}

func (m *Ipv6IfDetail) GetMulticastGroup() []*Ipv6McastGroup {
	if m != nil {
		return m.MulticastGroup
	}
	return nil
}

func (m *Ipv6IfDetail) GetMtu() uint32 {
	if m != nil {
		return m.Mtu
	}
	return 0
}

func (m *Ipv6IfDetail) GetOperationState() string {
	if m != nil {
		return m.OperationState
	}
	return ""
}

func (m *Ipv6IfDetail) GetIpv6ConfigFlag() uint32 {
	if m != nil {
		return m.Ipv6ConfigFlag
	}
	return 0
}

func (m *Ipv6IfDetail) GetIpv6OperFlag() uint32 {
	if m != nil {
		return m.Ipv6OperFlag
	}
	return 0
}

func (m *Ipv6IfDetail) GetVrfName() string {
	if m != nil {
		return m.VrfName
	}
	return ""
}

func (m *Ipv6IfDetail) GetAddress() []*Ipv6AddrNode {
	if m != nil {
		return m.Address
	}
	return nil
}

func (m *Ipv6IfDetail) GetLinkLocalAddress() *Ipv6AddrNode {
	if m != nil {
		return m.LinkLocalAddress
	}
	return nil
}

func (m *Ipv6IfDetail) GetAccessControlList() *Ipv6AclConfig {
	if m != nil {
		return m.AccessControlList
	}
	return nil
}

func (m *Ipv6IfDetail) GetMultiAccessControlList() *Ipv6MultiAclConfig {
	if m != nil {
		return m.MultiAccessControlList
	}
	return nil
}

func (m *Ipv6IfDetail) GetIsIcmpUnreachEnabled() bool {
	if m != nil {
		return m.IsIcmpUnreachEnabled
	}
	return false
}

func (m *Ipv6IfDetail) GetRpf() *RpfConfig {
	if m != nil {
		return m.Rpf
	}
	return nil
}

func (m *Ipv6IfDetail) GetBgpPa() *BgpPaConfig {
	if m != nil {
		return m.BgpPa
	}
	return nil
}

func (m *Ipv6IfDetail) GetRgIdExists() bool {
	if m != nil {
		return m.RgIdExists
	}
	return false
}

func (m *Ipv6IfDetail) GetMlacpActive() bool {
	if m != nil {
		return m.MlacpActive
	}
	return false
}

func (m *Ipv6IfDetail) GetFlowTagSrc() bool {
	if m != nil {
		return m.FlowTagSrc
	}
	return false
}

func (m *Ipv6IfDetail) GetFlowTagDst() bool {
	if m != nil {
		return m.FlowTagDst
	}
	return false
}

func (m *Ipv6IfDetail) GetUtime() *TimevalEntry {
	if m != nil {
		return m.Utime
	}
	return nil
}

func (m *Ipv6IfDetail) GetIdbUtime() *TimevalEntry {
	if m != nil {
		return m.IdbUtime
	}
	return nil
}

func (m *Ipv6IfDetail) GetCapsUtime() *TimevalEntry {
	if m != nil {
		return m.CapsUtime
	}
	return nil
}

func (m *Ipv6IfDetail) GetFwdEnUtime() *TimevalEntry {
	if m != nil {
		return m.FwdEnUtime
	}
	return nil
}

func (m *Ipv6IfDetail) GetFwdDisUtime() *TimevalEntry {
	if m != nil {
		return m.FwdDisUtime
	}
	return nil
}

func (m *Ipv6IfDetail) GetClientMulticastGroup() []*Ipv6McastGroup {
	if m != nil {
		return m.ClientMulticastGroup
	}
	return nil
}

func (m *Ipv6IfDetail) GetIdbPointer() uint64 {
	if m != nil {
		return m.IdbPointer
	}
	return 0
}

func init() {
	proto.RegisterType((*Ipv6IfDetail_KEYS)(nil), "cisco_ios_xr_ipv6_ma_oper.ipv6_network.nodes.node.interface_data.vrfs.vrf.details.detail.ipv6_if_detail_KEYS")
	proto.RegisterType((*Ipv6McastGroup)(nil), "cisco_ios_xr_ipv6_ma_oper.ipv6_network.nodes.node.interface_data.vrfs.vrf.details.detail.ipv6_mcast_group")
	proto.RegisterType((*Ipv6AddrNode)(nil), "cisco_ios_xr_ipv6_ma_oper.ipv6_network.nodes.node.interface_data.vrfs.vrf.details.detail.ipv6_addr_node")
	proto.RegisterType((*Ipv6AclConfig)(nil), "cisco_ios_xr_ipv6_ma_oper.ipv6_network.nodes.node.interface_data.vrfs.vrf.details.detail.ipv6_acl_config")
	proto.RegisterType((*Ipv6MultiAclConfig)(nil), "cisco_ios_xr_ipv6_ma_oper.ipv6_network.nodes.node.interface_data.vrfs.vrf.details.detail.ipv6_multi_acl_config")
	proto.RegisterType((*RpfConfig)(nil), "cisco_ios_xr_ipv6_ma_oper.ipv6_network.nodes.node.interface_data.vrfs.vrf.details.detail.rpf_config")
	proto.RegisterType((*BgpPaDir)(nil), "cisco_ios_xr_ipv6_ma_oper.ipv6_network.nodes.node.interface_data.vrfs.vrf.details.detail.bgp_pa_dir")
	proto.RegisterType((*BgpPaConfig)(nil), "cisco_ios_xr_ipv6_ma_oper.ipv6_network.nodes.node.interface_data.vrfs.vrf.details.detail.bgp_pa_config")
	proto.RegisterType((*TimevalEntry)(nil), "cisco_ios_xr_ipv6_ma_oper.ipv6_network.nodes.node.interface_data.vrfs.vrf.details.detail.timeval_entry")
	proto.RegisterType((*Ipv6IfDetail)(nil), "cisco_ios_xr_ipv6_ma_oper.ipv6_network.nodes.node.interface_data.vrfs.vrf.details.detail.ipv6_if_detail")
}

func init() { proto.RegisterFile("ipv6_if_detail.proto", fileDescriptor_18e8a81a5edd963e) }

var fileDescriptor_18e8a81a5edd963e = []byte{
	// 1119 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x97, 0x4b, 0x6f, 0x23, 0x45,
	0x10, 0xc7, 0x35, 0xeb, 0xc4, 0x6b, 0x57, 0xe2, 0x3c, 0x26, 0x21, 0xcc, 0x82, 0x10, 0xc6, 0xbc,
	0x7c, 0x40, 0x3e, 0x64, 0xd9, 0xe5, 0xfd, 0xc8, 0x26, 0xd9, 0x25, 0x10, 0xd8, 0x68, 0xb2, 0x2b,
	0xc1, 0x85, 0x56, 0x7b, 0xa6, 0x67, 0xd2, 0xec, 0x4c, 0xf7, 0xa8, 0xbb, 0xc7, 0xc9, 0x22, 0xe0,
	0x80, 0x10, 0xd2, 0x8a, 0x0b, 0x12, 0x12, 0x12, 0xe2, 0xc2, 0x99, 0xef, 0xc2, 0xe7, 0xe1, 0x8a,
	0xba, 0xba, 0x6d, 0xc7, 0x59, 0x71, 0xb4, 0x2f, 0x8e, 0xfb, 0x5f, 0x95, 0xaa, 0x5f, 0x57, 0x7a,
	0xfe, 0x3d, 0x81, 0x6d, 0x5e, 0x8d, 0x6e, 0x13, 0x9e, 0x91, 0x94, 0x19, 0xca, 0x8b, 0x41, 0xa5,
	0xa4, 0x91, 0xe1, 0x97, 0x09, 0xd7, 0x89, 0x24, 0x5c, 0x6a, 0x72, 0xa1, 0x08, 0xa6, 0x94, 0x94,
	0xc8, 0x8a, 0xa9, 0x01, 0x2e, 0x04, 0x33, 0xe7, 0x52, 0x3d, 0x1a, 0x08, 0x99, 0x32, 0x8d, 0x9f,
	0x03, 0x2e, 0x0c, 0x53, 0x19, 0x4d, 0x18, 0x49, 0xa9, 0xa1, 0x83, 0x91, 0xca, 0xb4, 0xfd, 0x18,
	0xb8, 0xba, 0xda, 0xff, 0xec, 0x19, 0xd8, 0x9a, 0xed, 0x48, 0x3e, 0x3b, 0xfc, 0xea, 0x34, 0x7c,
	0x1e, 0xda, 0xb6, 0x0a, 0x11, 0xb4, 0x64, 0x51, 0xd0, 0x0d, 0xfa, 0xed, 0xb8, 0x65, 0x85, 0x2f,
	0x68, 0xc9, 0xc2, 0x1b, 0xd0, 0x1a, 0xa9, 0xcc, 0xc5, 0xae, 0x61, 0xec, 0xfa, 0x48, 0x65, 0x18,
	0x7a, 0x15, 0xd6, 0xa6, 0x8d, 0x31, 0xa1, 0x81, 0x09, 0x9d, 0x89, 0x6a, 0xd3, 0x7a, 0x6f, 0xc0,
	0x86, 0xdb, 0x44, 0x42, 0xb5, 0x21, 0xb9, 0x92, 0x75, 0x15, 0x46, 0x70, 0x9d, 0xa6, 0xa9, 0x62,
	0x5a, 0xfb, 0x86, 0xe3, 0x65, 0xef, 0x9f, 0x00, 0xd6, 0x30, 0xdd, 0x0a, 0xc4, 0x62, 0xfc, 0x7f,
	0x72, 0xf8, 0x32, 0x74, 0x2a, 0xc5, 0x32, 0x7e, 0x41, 0x0a, 0x26, 0x72, 0x73, 0x86, 0x84, 0x9d,
	0x78, 0xd5, 0x89, 0xc7, 0xa8, 0xd9, 0x24, 0x9f, 0x4f, 0xb4, 0xa1, 0x66, 0x4c, 0xb9, 0xea, 0xc5,
	0x53, 0xab, 0x85, 0x2f, 0x00, 0x70, 0x4d, 0xa8, 0x78, 0x6c, 0x21, 0xa3, 0xa5, 0x6e, 0xd0, 0x6f,
	0xc5, 0x6d, 0xae, 0xf7, 0x9c, 0x60, 0x47, 0xa4, 0x64, 0x6d, 0x18, 0x31, 0x34, 0x8f, 0x96, 0xb1,
	0x49, 0x0b, 0x85, 0x07, 0x34, 0xb7, 0x41, 0xaa, 0x4a, 0x92, 0x15, 0x34, 0xd7, 0x51, 0xd3, 0x05,
	0xa9, 0x2a, 0xef, 0xda, 0x75, 0xef, 0xcf, 0x00, 0xd6, 0xdd, 0x7e, 0x92, 0x82, 0x24, 0x52, 0x64,
	0x3c, 0xb7, 0x33, 0xe5, 0x82, 0x0c, 0x65, 0x2d, 0xd2, 0xf1, 0x8e, 0xb8, 0xb8, 0x63, 0x97, 0xb6,
	0x96, 0xac, 0x8d, 0x8f, 0xb9, 0x79, 0xb7, 0x64, 0x6d, 0x5c, 0xf0, 0x35, 0x58, 0x4f, 0x64, 0x59,
	0x4a, 0x41, 0x26, 0xbf, 0xee, 0x27, 0xee, 0xe4, 0x23, 0x5f, 0xa4, 0x0f, 0x1b, 0x3e, 0x6f, 0x5a,
	0x6b, 0x09, 0x13, 0xd7, 0x9c, 0x7e, 0xdf, 0x57, 0xec, 0x31, 0x78, 0xc6, 0xfd, 0x6d, 0xea, 0xc2,
	0xf0, 0xcb, 0x88, 0x11, 0x5c, 0xe7, 0x62, 0x4c, 0xd8, 0x70, 0x84, 0xb8, 0x0c, 0x9f, 0x03, 0x0b,
	0x34, 0x06, 0x6c, 0x78, 0x40, 0x17, 0xdb, 0x81, 0xa6, 0x6b, 0x10, 0x35, 0x30, 0xe2, 0x57, 0xbd,
	0x5f, 0x03, 0x00, 0x55, 0x65, 0xe3, 0xe2, 0x3b, 0xd0, 0x64, 0x82, 0x0e, 0x0b, 0x77, 0xda, 0x5a,
	0xb1, 0x5f, 0x85, 0x03, 0xd8, 0xa2, 0x45, 0x21, 0xcf, 0x49, 0xca, 0x32, 0x5a, 0x17, 0x86, 0xe0,
	0x88, 0x71, 0x0c, 0xad, 0x78, 0x13, 0x43, 0x07, 0x2e, 0x12, 0xdb, 0x80, 0x9d, 0x87, 0xcb, 0xd7,
	0xac, 0xc8, 0x48, 0xc5, 0x45, 0x8e, 0xf3, 0x68, 0xc5, 0x1d, 0x94, 0x4f, 0x59, 0x91, 0x9d, 0x70,
	0x91, 0x87, 0x21, 0x2c, 0x95, 0x32, 0x65, 0x38, 0x83, 0x4e, 0x8c, 0xdf, 0x7b, 0x5f, 0x03, 0x0c,
	0xf3, 0x8a, 0x54, 0x94, 0xa4, 0x5c, 0x5d, 0x21, 0xea, 0x4c, 0x88, 0x76, 0xa0, 0xa9, 0x65, 0xad,
	0x92, 0x31, 0x84, 0x5f, 0x85, 0x5d, 0x58, 0x49, 0x99, 0x36, 0x5c, 0x50, 0xc3, 0x71, 0xb7, 0x36,
	0x78, 0x59, 0xea, 0x3d, 0xb9, 0x06, 0x1d, 0xdf, 0xc0, 0xef, 0xfa, 0x5b, 0x58, 0xe6, 0xa2, 0xaa,
	0x0d, 0xb6, 0x58, 0xd9, 0x4d, 0x07, 0xf3, 0x7a, 0xce, 0x07, 0xd3, 0x8d, 0xc5, 0xae, 0x65, 0xf8,
	0x1d, 0x34, 0x65, 0x6d, 0x6c, 0xf3, 0x6b, 0x0b, 0x6c, 0xee, 0x7b, 0xf6, 0xd6, 0xa1, 0x63, 0x78,
	0xc9, 0x46, 0xb4, 0x20, 0x4c, 0x18, 0xf5, 0xb8, 0xf7, 0xef, 0xa6, 0x7f, 0xc8, 0x27, 0x4e, 0x64,
	0x1f, 0xc0, 0x82, 0x0b, 0xe6, 0x1f, 0xd1, 0x5d, 0x3c, 0xad, 0x6d, 0xab, 0xb8, 0xe7, 0xf3, 0xb7,
	0x00, 0xd6, 0xf1, 0x90, 0x4e, 0x4d, 0x24, 0xba, 0xd9, 0x6d, 0xf4, 0x57, 0x76, 0xbf, 0x99, 0xdf,
	0x56, 0xae, 0xda, 0x56, 0xbc, 0x36, 0x41, 0xb8, 0x87, 0x36, 0xb6, 0x01, 0x8d, 0xd2, 0xd4, 0xd1,
	0x9b, 0x78, 0x66, 0xec, 0xd7, 0xf0, 0x75, 0x58, 0xb7, 0x9d, 0xf1, 0x0c, 0xf8, 0xbd, 0xdc, 0x72,
	0x4f, 0xde, 0x44, 0x76, 0x1b, 0xea, 0x7b, 0x57, 0x74, 0x87, 0x03, 0xcd, 0x23, 0xba, 0x8d, 0x75,
	0x70, 0x32, 0xfb, 0x28, 0x5b, 0x0b, 0x09, 0x5f, 0xf1, 0xb3, 0xb2, 0x05, 0x5c, 0xde, 0x5b, 0xce,
	0xe5, 0xac, 0x7a, 0xbf, 0x62, 0x0a, 0xb3, 0x2e, 0xfb, 0xf4, 0xdb, 0xb3, 0x3e, 0xfd, 0x63, 0x30,
	0x35, 0xd0, 0x77, 0x70, 0x66, 0x67, 0x73, 0x9e, 0xd9, 0xc4, 0xbb, 0xa7, 0x56, 0xfd, 0x7b, 0x00,
	0x61, 0xc1, 0xc5, 0x23, 0x52, 0xc8, 0x84, 0x16, 0x64, 0xcc, 0xf3, 0x2e, 0x1e, 0xc7, 0xc5, 0xf1,
	0x6c, 0x58, 0x86, 0x63, 0x8b, 0xb0, 0xe7, 0xc1, 0xfe, 0x08, 0x60, 0x8b, 0x26, 0x89, 0xbd, 0x1e,
	0x12, 0x29, 0x8c, 0x92, 0x05, 0x29, 0xb8, 0x36, 0xd1, 0x7b, 0x48, 0xc6, 0xe7, 0x4d, 0x36, 0xb1,
	0xdc, 0x78, 0xd3, 0x51, 0xec, 0x3b, 0x88, 0x63, 0xae, 0x4d, 0xf8, 0x77, 0x00, 0x37, 0xc6, 0xd6,
	0xfc, 0x34, 0xe1, 0xfb, 0x48, 0x28, 0xe7, 0x7d, 0xfe, 0xaf, 0x5c, 0x0d, 0xf1, 0x0e, 0x2a, 0x7b,
	0x4f, 0xc1, 0xde, 0x82, 0x67, 0xb9, 0x26, 0x3c, 0x29, 0x2b, 0x52, 0x0b, 0xc5, 0x68, 0x72, 0x46,
	0x9c, 0x8b, 0xa6, 0xd1, 0x07, 0xe8, 0x8f, 0xdb, 0x5c, 0x1f, 0x25, 0x65, 0xf5, 0xd0, 0x05, 0x0f,
	0x5d, 0x2c, 0x1c, 0x41, 0x43, 0x55, 0x59, 0xf4, 0xe1, 0xbc, 0x7d, 0x69, 0x7a, 0xff, 0xc4, 0xb6,
	0x61, 0xf8, 0x03, 0x34, 0x9d, 0x55, 0x45, 0x1f, 0x61, 0xeb, 0x7c, 0xee, 0x96, 0xe8, 0xbb, 0x2f,
	0x0f, 0xf3, 0xea, 0x84, 0x86, 0x5d, 0x58, 0x55, 0x39, 0xe1, 0x29, 0x61, 0x17, 0x5c, 0x1b, 0x1d,
	0x7d, 0x8c, 0x33, 0x02, 0x95, 0x1f, 0xa5, 0x87, 0xa8, 0x84, 0x2f, 0xc1, 0x6a, 0x59, 0xd0, 0xa4,
	0x22, 0x34, 0x31, 0x7c, 0xc4, 0xa2, 0x3d, 0x77, 0xcb, 0xa0, 0xb6, 0x87, 0x92, 0x2d, 0x92, 0xd9,
	0x0b, 0xd0, 0xd0, 0x9c, 0x68, 0x95, 0x44, 0x77, 0x5c, 0x11, 0xab, 0x3d, 0xa0, 0xf9, 0xa9, 0x4a,
	0x66, 0x32, 0x52, 0x6d, 0xa2, 0xfd, 0x99, 0x8c, 0x03, 0x6d, 0xc2, 0xef, 0x61, 0xb9, 0xb6, 0xf6,
	0x1c, 0x1d, 0xcc, 0x7b, 0x0e, 0x33, 0x97, 0x40, 0xec, 0xba, 0x86, 0x3f, 0x05, 0xd0, 0xe6, 0xe9,
	0x90, 0x38, 0x86, 0xc3, 0xc5, 0x32, 0xb4, 0x78, 0x3a, 0x7c, 0x88, 0x18, 0x3f, 0x07, 0x00, 0x09,
	0xad, 0xb4, 0xe7, 0xb8, 0xbb, 0x58, 0x8e, 0xb6, 0x6d, 0xed, 0x40, 0x9e, 0x04, 0xb0, 0x9a, 0x9d,
	0xa7, 0x84, 0x09, 0x8f, 0x72, 0x6f, 0xb1, 0x28, 0x90, 0x9d, 0xa7, 0x87, 0xc2, 0xb1, 0xfc, 0x12,
	0x40, 0xc7, 0xb2, 0xa4, 0x7c, 0x3c, 0x97, 0x4f, 0x16, 0x0b, 0xb3, 0x92, 0x9d, 0xa7, 0x07, 0xdc,
	0x4f, 0xe6, 0xaf, 0x00, 0x76, 0x92, 0x82, 0x33, 0x61, 0xc8, 0xd5, 0x57, 0x81, 0xa3, 0x85, 0xbf,
	0x0a, 0x6c, 0x3b, 0x92, 0xcf, 0x67, 0x5f, 0x08, 0x5e, 0x84, 0x15, 0x7b, 0x96, 0x2b, 0x89, 0x65,
	0xa3, 0x4f, 0xbb, 0x41, 0x7f, 0x29, 0x06, 0x9e, 0x0e, 0x4f, 0x9c, 0x32, 0x6c, 0xe2, 0xff, 0x78,
	0x37, 0xff, 0x0b, 0x00, 0x00, 0xff, 0xff, 0x0a, 0x04, 0x76, 0x4e, 0xfb, 0x0d, 0x00, 0x00,
}
