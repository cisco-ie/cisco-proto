/*
Copyright 2019 Cisco Systems

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: ospf_sh_virtual_links.proto

package cisco_ios_xr_ipv4_ospf_oper_ospf_processes_process_vrfs_vrf_interface_information_virtual_links_virtual_link

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type OspfShVirtualLinks_KEYS struct {
	ProcessName          string   `protobuf:"bytes,1,opt,name=process_name,json=processName,proto3" json:"process_name,omitempty"`
	VrfName              string   `protobuf:"bytes,2,opt,name=vrf_name,json=vrfName,proto3" json:"vrf_name,omitempty"`
	VirtualLinkName      string   `protobuf:"bytes,3,opt,name=virtual_link_name,json=virtualLinkName,proto3" json:"virtual_link_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OspfShVirtualLinks_KEYS) Reset()         { *m = OspfShVirtualLinks_KEYS{} }
func (m *OspfShVirtualLinks_KEYS) String() string { return proto.CompactTextString(m) }
func (*OspfShVirtualLinks_KEYS) ProtoMessage()    {}
func (*OspfShVirtualLinks_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_75fc92be622eb975, []int{0}
}

func (m *OspfShVirtualLinks_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OspfShVirtualLinks_KEYS.Unmarshal(m, b)
}
func (m *OspfShVirtualLinks_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OspfShVirtualLinks_KEYS.Marshal(b, m, deterministic)
}
func (m *OspfShVirtualLinks_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OspfShVirtualLinks_KEYS.Merge(m, src)
}
func (m *OspfShVirtualLinks_KEYS) XXX_Size() int {
	return xxx_messageInfo_OspfShVirtualLinks_KEYS.Size(m)
}
func (m *OspfShVirtualLinks_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_OspfShVirtualLinks_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_OspfShVirtualLinks_KEYS proto.InternalMessageInfo

func (m *OspfShVirtualLinks_KEYS) GetProcessName() string {
	if m != nil {
		return m.ProcessName
	}
	return ""
}

func (m *OspfShVirtualLinks_KEYS) GetVrfName() string {
	if m != nil {
		return m.VrfName
	}
	return ""
}

func (m *OspfShVirtualLinks_KEYS) GetVirtualLinkName() string {
	if m != nil {
		return m.VirtualLinkName
	}
	return ""
}

type OspfShNeighborRetrans struct {
	DbdRetransmissionCount         uint32   `protobuf:"varint,1,opt,name=dbd_retransmission_count,json=dbdRetransmissionCount,proto3" json:"dbd_retransmission_count,omitempty"`
	DbdRetransmissionTotalCount    uint32   `protobuf:"varint,2,opt,name=dbd_retransmission_total_count,json=dbdRetransmissionTotalCount,proto3" json:"dbd_retransmission_total_count,omitempty"`
	AreaFloodingIndex              uint32   `protobuf:"varint,3,opt,name=area_flooding_index,json=areaFloodingIndex,proto3" json:"area_flooding_index,omitempty"`
	AsFloodIndex                   uint32   `protobuf:"varint,4,opt,name=as_flood_index,json=asFloodIndex,proto3" json:"as_flood_index,omitempty"`
	NeighborRetransmissionCount    uint32   `protobuf:"varint,5,opt,name=neighbor_retransmission_count,json=neighborRetransmissionCount,proto3" json:"neighbor_retransmission_count,omitempty"`
	NumberOfRetransmissions        uint32   `protobuf:"varint,6,opt,name=number_of_retransmissions,json=numberOfRetransmissions,proto3" json:"number_of_retransmissions,omitempty"`
	AreaFirstFloodInformation      uint32   `protobuf:"varint,7,opt,name=area_first_flood_information,json=areaFirstFloodInformation,proto3" json:"area_first_flood_information,omitempty"`
	AreaFirstFloodInformationIndex uint32   `protobuf:"varint,8,opt,name=area_first_flood_information_index,json=areaFirstFloodInformationIndex,proto3" json:"area_first_flood_information_index,omitempty"`
	AsFirstFloodInformation        uint32   `protobuf:"varint,9,opt,name=as_first_flood_information,json=asFirstFloodInformation,proto3" json:"as_first_flood_information,omitempty"`
	AsFirstFloodInformationIndex   uint32   `protobuf:"varint,10,opt,name=as_first_flood_information_index,json=asFirstFloodInformationIndex,proto3" json:"as_first_flood_information_index,omitempty"`
	AreaNextFloodInformation       uint32   `protobuf:"varint,11,opt,name=area_next_flood_information,json=areaNextFloodInformation,proto3" json:"area_next_flood_information,omitempty"`
	AreaNextFloodInformationIndex  uint32   `protobuf:"varint,12,opt,name=area_next_flood_information_index,json=areaNextFloodInformationIndex,proto3" json:"area_next_flood_information_index,omitempty"`
	AsNextFloodInformation         uint32   `protobuf:"varint,13,opt,name=as_next_flood_information,json=asNextFloodInformation,proto3" json:"as_next_flood_information,omitempty"`
	AsNextFloodInformationIndex    uint32   `protobuf:"varint,14,opt,name=as_next_flood_information_index,json=asNextFloodInformationIndex,proto3" json:"as_next_flood_information_index,omitempty"`
	LastRetransmissionLength       uint32   `protobuf:"varint,15,opt,name=last_retransmission_length,json=lastRetransmissionLength,proto3" json:"last_retransmission_length,omitempty"`
	MaximumRetransmissionLength    uint32   `protobuf:"varint,16,opt,name=maximum_retransmission_length,json=maximumRetransmissionLength,proto3" json:"maximum_retransmission_length,omitempty"`
	LastRetransmissionTime         uint32   `protobuf:"varint,17,opt,name=last_retransmission_time,json=lastRetransmissionTime,proto3" json:"last_retransmission_time,omitempty"`
	MaximumRetransmissionTime      uint32   `protobuf:"varint,18,opt,name=maximum_retransmission_time,json=maximumRetransmissionTime,proto3" json:"maximum_retransmission_time,omitempty"`
	LsaRetransmissionTimer         uint32   `protobuf:"varint,19,opt,name=lsa_retransmission_timer,json=lsaRetransmissionTimer,proto3" json:"lsa_retransmission_timer,omitempty"`
	XXX_NoUnkeyedLiteral           struct{} `json:"-"`
	XXX_unrecognized               []byte   `json:"-"`
	XXX_sizecache                  int32    `json:"-"`
}

func (m *OspfShNeighborRetrans) Reset()         { *m = OspfShNeighborRetrans{} }
func (m *OspfShNeighborRetrans) String() string { return proto.CompactTextString(m) }
func (*OspfShNeighborRetrans) ProtoMessage()    {}
func (*OspfShNeighborRetrans) Descriptor() ([]byte, []int) {
	return fileDescriptor_75fc92be622eb975, []int{1}
}

func (m *OspfShNeighborRetrans) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OspfShNeighborRetrans.Unmarshal(m, b)
}
func (m *OspfShNeighborRetrans) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OspfShNeighborRetrans.Marshal(b, m, deterministic)
}
func (m *OspfShNeighborRetrans) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OspfShNeighborRetrans.Merge(m, src)
}
func (m *OspfShNeighborRetrans) XXX_Size() int {
	return xxx_messageInfo_OspfShNeighborRetrans.Size(m)
}
func (m *OspfShNeighborRetrans) XXX_DiscardUnknown() {
	xxx_messageInfo_OspfShNeighborRetrans.DiscardUnknown(m)
}

var xxx_messageInfo_OspfShNeighborRetrans proto.InternalMessageInfo

func (m *OspfShNeighborRetrans) GetDbdRetransmissionCount() uint32 {
	if m != nil {
		return m.DbdRetransmissionCount
	}
	return 0
}

func (m *OspfShNeighborRetrans) GetDbdRetransmissionTotalCount() uint32 {
	if m != nil {
		return m.DbdRetransmissionTotalCount
	}
	return 0
}

func (m *OspfShNeighborRetrans) GetAreaFloodingIndex() uint32 {
	if m != nil {
		return m.AreaFloodingIndex
	}
	return 0
}

func (m *OspfShNeighborRetrans) GetAsFloodIndex() uint32 {
	if m != nil {
		return m.AsFloodIndex
	}
	return 0
}

func (m *OspfShNeighborRetrans) GetNeighborRetransmissionCount() uint32 {
	if m != nil {
		return m.NeighborRetransmissionCount
	}
	return 0
}

func (m *OspfShNeighborRetrans) GetNumberOfRetransmissions() uint32 {
	if m != nil {
		return m.NumberOfRetransmissions
	}
	return 0
}

func (m *OspfShNeighborRetrans) GetAreaFirstFloodInformation() uint32 {
	if m != nil {
		return m.AreaFirstFloodInformation
	}
	return 0
}

func (m *OspfShNeighborRetrans) GetAreaFirstFloodInformationIndex() uint32 {
	if m != nil {
		return m.AreaFirstFloodInformationIndex
	}
	return 0
}

func (m *OspfShNeighborRetrans) GetAsFirstFloodInformation() uint32 {
	if m != nil {
		return m.AsFirstFloodInformation
	}
	return 0
}

func (m *OspfShNeighborRetrans) GetAsFirstFloodInformationIndex() uint32 {
	if m != nil {
		return m.AsFirstFloodInformationIndex
	}
	return 0
}

func (m *OspfShNeighborRetrans) GetAreaNextFloodInformation() uint32 {
	if m != nil {
		return m.AreaNextFloodInformation
	}
	return 0
}

func (m *OspfShNeighborRetrans) GetAreaNextFloodInformationIndex() uint32 {
	if m != nil {
		return m.AreaNextFloodInformationIndex
	}
	return 0
}

func (m *OspfShNeighborRetrans) GetAsNextFloodInformation() uint32 {
	if m != nil {
		return m.AsNextFloodInformation
	}
	return 0
}

func (m *OspfShNeighborRetrans) GetAsNextFloodInformationIndex() uint32 {
	if m != nil {
		return m.AsNextFloodInformationIndex
	}
	return 0
}

func (m *OspfShNeighborRetrans) GetLastRetransmissionLength() uint32 {
	if m != nil {
		return m.LastRetransmissionLength
	}
	return 0
}

func (m *OspfShNeighborRetrans) GetMaximumRetransmissionLength() uint32 {
	if m != nil {
		return m.MaximumRetransmissionLength
	}
	return 0
}

func (m *OspfShNeighborRetrans) GetLastRetransmissionTime() uint32 {
	if m != nil {
		return m.LastRetransmissionTime
	}
	return 0
}

func (m *OspfShNeighborRetrans) GetMaximumRetransmissionTime() uint32 {
	if m != nil {
		return m.MaximumRetransmissionTime
	}
	return 0
}

func (m *OspfShNeighborRetrans) GetLsaRetransmissionTimer() uint32 {
	if m != nil {
		return m.LsaRetransmissionTimer
	}
	return 0
}

type OspfShVlinkNeighbor struct {
	VirtualLinkSuppressHello  bool                   `protobuf:"varint,1,opt,name=virtual_link_suppress_hello,json=virtualLinkSuppressHello,proto3" json:"virtual_link_suppress_hello,omitempty"`
	VirtualLinkState          string                 `protobuf:"bytes,2,opt,name=virtual_link_state,json=virtualLinkState,proto3" json:"virtual_link_state,omitempty"`
	VirtualLinkRetransmissoin *OspfShNeighborRetrans `protobuf:"bytes,3,opt,name=virtual_link_retransmissoin,json=virtualLinkRetransmissoin,proto3" json:"virtual_link_retransmissoin,omitempty"`
	XXX_NoUnkeyedLiteral      struct{}               `json:"-"`
	XXX_unrecognized          []byte                 `json:"-"`
	XXX_sizecache             int32                  `json:"-"`
}

func (m *OspfShVlinkNeighbor) Reset()         { *m = OspfShVlinkNeighbor{} }
func (m *OspfShVlinkNeighbor) String() string { return proto.CompactTextString(m) }
func (*OspfShVlinkNeighbor) ProtoMessage()    {}
func (*OspfShVlinkNeighbor) Descriptor() ([]byte, []int) {
	return fileDescriptor_75fc92be622eb975, []int{2}
}

func (m *OspfShVlinkNeighbor) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OspfShVlinkNeighbor.Unmarshal(m, b)
}
func (m *OspfShVlinkNeighbor) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OspfShVlinkNeighbor.Marshal(b, m, deterministic)
}
func (m *OspfShVlinkNeighbor) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OspfShVlinkNeighbor.Merge(m, src)
}
func (m *OspfShVlinkNeighbor) XXX_Size() int {
	return xxx_messageInfo_OspfShVlinkNeighbor.Size(m)
}
func (m *OspfShVlinkNeighbor) XXX_DiscardUnknown() {
	xxx_messageInfo_OspfShVlinkNeighbor.DiscardUnknown(m)
}

var xxx_messageInfo_OspfShVlinkNeighbor proto.InternalMessageInfo

func (m *OspfShVlinkNeighbor) GetVirtualLinkSuppressHello() bool {
	if m != nil {
		return m.VirtualLinkSuppressHello
	}
	return false
}

func (m *OspfShVlinkNeighbor) GetVirtualLinkState() string {
	if m != nil {
		return m.VirtualLinkState
	}
	return ""
}

func (m *OspfShVlinkNeighbor) GetVirtualLinkRetransmissoin() *OspfShNeighborRetrans {
	if m != nil {
		return m.VirtualLinkRetransmissoin
	}
	return nil
}

type OspfShVirtualLinks struct {
	VirtualLinkNameXr                 string               `protobuf:"bytes,50,opt,name=virtual_link_name_xr,json=virtualLinkNameXr,proto3" json:"virtual_link_name_xr,omitempty"`
	VirtualLinkNeighborId             string               `protobuf:"bytes,51,opt,name=virtual_link_neighbor_id,json=virtualLinkNeighborId,proto3" json:"virtual_link_neighbor_id,omitempty"`
	VirtualLinkState                  string               `protobuf:"bytes,52,opt,name=virtual_link_state,json=virtualLinkState,proto3" json:"virtual_link_state,omitempty"`
	VirtualLinkDemandCircuit          bool                 `protobuf:"varint,53,opt,name=virtual_link_demand_circuit,json=virtualLinkDemandCircuit,proto3" json:"virtual_link_demand_circuit,omitempty"`
	VirtualLinkDcBitlessLsa           uint32               `protobuf:"varint,54,opt,name=virtual_link_dc_bitless_lsa,json=virtualLinkDcBitlessLsa,proto3" json:"virtual_link_dc_bitless_lsa,omitempty"`
	TransitArea                       string               `protobuf:"bytes,55,opt,name=transit_area,json=transitArea,proto3" json:"transit_area,omitempty"`
	VirtualLinkInterfaceName          string               `protobuf:"bytes,56,opt,name=virtual_link_interface_name,json=virtualLinkInterfaceName,proto3" json:"virtual_link_interface_name,omitempty"`
	VirtualLinkCost                   uint32               `protobuf:"varint,57,opt,name=virtual_link_cost,json=virtualLinkCost,proto3" json:"virtual_link_cost,omitempty"`
	VirualLinkTransmissionDelay       uint32               `protobuf:"varint,58,opt,name=virual_link_transmission_delay,json=virualLinkTransmissionDelay,proto3" json:"virual_link_transmission_delay,omitempty"`
	VirtualLinkHelloInterval          uint32               `protobuf:"varint,59,opt,name=virtual_link_hello_interval,json=virtualLinkHelloInterval,proto3" json:"virtual_link_hello_interval,omitempty"`
	VirtualLinkHelloIntervalMs        uint32               `protobuf:"varint,60,opt,name=virtual_link_hello_interval_ms,json=virtualLinkHelloIntervalMs,proto3" json:"virtual_link_hello_interval_ms,omitempty"`
	VirtualLinkDeadInterval           uint32               `protobuf:"varint,61,opt,name=virtual_link_dead_interval,json=virtualLinkDeadInterval,proto3" json:"virtual_link_dead_interval,omitempty"`
	VirtualLinkWaitInterval           uint32               `protobuf:"varint,62,opt,name=virtual_link_wait_interval,json=virtualLinkWaitInterval,proto3" json:"virtual_link_wait_interval,omitempty"`
	VirtaulLinkRetransmissionInterval uint32               `protobuf:"varint,63,opt,name=virtaul_link_retransmission_interval,json=virtaulLinkRetransmissionInterval,proto3" json:"virtaul_link_retransmission_interval,omitempty"`
	VirtualLinkNextHello              uint32               `protobuf:"varint,64,opt,name=virtual_link_next_hello,json=virtualLinkNextHello,proto3" json:"virtual_link_next_hello,omitempty"`
	VirtualLinkNextHelloMs            uint32               `protobuf:"varint,65,opt,name=virtual_link_next_hello_ms,json=virtualLinkNextHelloMs,proto3" json:"virtual_link_next_hello_ms,omitempty"`
	VirtualLinkPassive                bool                 `protobuf:"varint,66,opt,name=virtual_link_passive,json=virtualLinkPassive,proto3" json:"virtual_link_passive,omitempty"`
	VirtualLinkAuthenticationType     string               `protobuf:"bytes,67,opt,name=virtual_link_authentication_type,json=virtualLinkAuthenticationType,proto3" json:"virtual_link_authentication_type,omitempty"`
	VirtualLinkYoungestMdKey          bool                 `protobuf:"varint,68,opt,name=virtual_link_youngest_md_key,json=virtualLinkYoungestMdKey,proto3" json:"virtual_link_youngest_md_key,omitempty"`
	VirtualLinkYoungestMdKeyId        uint32               `protobuf:"varint,69,opt,name=virtual_link_youngest_md_key_id,json=virtualLinkYoungestMdKeyId,proto3" json:"virtual_link_youngest_md_key_id,omitempty"`
	VirtualLinkOldMdKeyCount          uint32               `protobuf:"varint,70,opt,name=virtual_link_old_md_key_count,json=virtualLinkOldMdKeyCount,proto3" json:"virtual_link_old_md_key_count,omitempty"`
	VirtualLinkMdKey                  []uint32             `protobuf:"varint,71,rep,packed,name=virtual_link_md_key,json=virtualLinkMdKey,proto3" json:"virtual_link_md_key,omitempty"`
	KeychainName                      string               `protobuf:"bytes,72,opt,name=keychain_name,json=keychainName,proto3" json:"keychain_name,omitempty"`
	VirtualLinkKeychainKeyConf        bool                 `protobuf:"varint,73,opt,name=virtual_link_keychain_key_conf,json=virtualLinkKeychainKeyConf,proto3" json:"virtual_link_keychain_key_conf,omitempty"`
	VirtualLinkKeychainId             uint64               `protobuf:"varint,74,opt,name=virtual_link_keychain_id,json=virtualLinkKeychainId,proto3" json:"virtual_link_keychain_id,omitempty"`
	VirtualLinkKeychainAlg            string               `protobuf:"bytes,75,opt,name=virtual_link_keychain_alg,json=virtualLinkKeychainAlg,proto3" json:"virtual_link_keychain_alg,omitempty"`
	VirtualLinkNsfEnabled             bool                 `protobuf:"varint,76,opt,name=virtual_link_nsf_enabled,json=virtualLinkNsfEnabled,proto3" json:"virtual_link_nsf_enabled,omitempty"`
	VirtualLinkNsf                    bool                 `protobuf:"varint,77,opt,name=virtual_link_nsf,json=virtualLinkNsf,proto3" json:"virtual_link_nsf,omitempty"`
	VirtualLinkLastNsf                uint32               `protobuf:"varint,78,opt,name=virtual_link_last_nsf,json=virtualLinkLastNsf,proto3" json:"virtual_link_last_nsf,omitempty"`
	VirtualLinkNeighbor               *OspfShVlinkNeighbor `protobuf:"bytes,79,opt,name=virtual_link_neighbor,json=virtualLinkNeighbor,proto3" json:"virtual_link_neighbor,omitempty"`
	XXX_NoUnkeyedLiteral              struct{}             `json:"-"`
	XXX_unrecognized                  []byte               `json:"-"`
	XXX_sizecache                     int32                `json:"-"`
}

func (m *OspfShVirtualLinks) Reset()         { *m = OspfShVirtualLinks{} }
func (m *OspfShVirtualLinks) String() string { return proto.CompactTextString(m) }
func (*OspfShVirtualLinks) ProtoMessage()    {}
func (*OspfShVirtualLinks) Descriptor() ([]byte, []int) {
	return fileDescriptor_75fc92be622eb975, []int{3}
}

func (m *OspfShVirtualLinks) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OspfShVirtualLinks.Unmarshal(m, b)
}
func (m *OspfShVirtualLinks) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OspfShVirtualLinks.Marshal(b, m, deterministic)
}
func (m *OspfShVirtualLinks) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OspfShVirtualLinks.Merge(m, src)
}
func (m *OspfShVirtualLinks) XXX_Size() int {
	return xxx_messageInfo_OspfShVirtualLinks.Size(m)
}
func (m *OspfShVirtualLinks) XXX_DiscardUnknown() {
	xxx_messageInfo_OspfShVirtualLinks.DiscardUnknown(m)
}

var xxx_messageInfo_OspfShVirtualLinks proto.InternalMessageInfo

func (m *OspfShVirtualLinks) GetVirtualLinkNameXr() string {
	if m != nil {
		return m.VirtualLinkNameXr
	}
	return ""
}

func (m *OspfShVirtualLinks) GetVirtualLinkNeighborId() string {
	if m != nil {
		return m.VirtualLinkNeighborId
	}
	return ""
}

func (m *OspfShVirtualLinks) GetVirtualLinkState() string {
	if m != nil {
		return m.VirtualLinkState
	}
	return ""
}

func (m *OspfShVirtualLinks) GetVirtualLinkDemandCircuit() bool {
	if m != nil {
		return m.VirtualLinkDemandCircuit
	}
	return false
}

func (m *OspfShVirtualLinks) GetVirtualLinkDcBitlessLsa() uint32 {
	if m != nil {
		return m.VirtualLinkDcBitlessLsa
	}
	return 0
}

func (m *OspfShVirtualLinks) GetTransitArea() string {
	if m != nil {
		return m.TransitArea
	}
	return ""
}

func (m *OspfShVirtualLinks) GetVirtualLinkInterfaceName() string {
	if m != nil {
		return m.VirtualLinkInterfaceName
	}
	return ""
}

func (m *OspfShVirtualLinks) GetVirtualLinkCost() uint32 {
	if m != nil {
		return m.VirtualLinkCost
	}
	return 0
}

func (m *OspfShVirtualLinks) GetVirualLinkTransmissionDelay() uint32 {
	if m != nil {
		return m.VirualLinkTransmissionDelay
	}
	return 0
}

func (m *OspfShVirtualLinks) GetVirtualLinkHelloInterval() uint32 {
	if m != nil {
		return m.VirtualLinkHelloInterval
	}
	return 0
}

func (m *OspfShVirtualLinks) GetVirtualLinkHelloIntervalMs() uint32 {
	if m != nil {
		return m.VirtualLinkHelloIntervalMs
	}
	return 0
}

func (m *OspfShVirtualLinks) GetVirtualLinkDeadInterval() uint32 {
	if m != nil {
		return m.VirtualLinkDeadInterval
	}
	return 0
}

func (m *OspfShVirtualLinks) GetVirtualLinkWaitInterval() uint32 {
	if m != nil {
		return m.VirtualLinkWaitInterval
	}
	return 0
}

func (m *OspfShVirtualLinks) GetVirtaulLinkRetransmissionInterval() uint32 {
	if m != nil {
		return m.VirtaulLinkRetransmissionInterval
	}
	return 0
}

func (m *OspfShVirtualLinks) GetVirtualLinkNextHello() uint32 {
	if m != nil {
		return m.VirtualLinkNextHello
	}
	return 0
}

func (m *OspfShVirtualLinks) GetVirtualLinkNextHelloMs() uint32 {
	if m != nil {
		return m.VirtualLinkNextHelloMs
	}
	return 0
}

func (m *OspfShVirtualLinks) GetVirtualLinkPassive() bool {
	if m != nil {
		return m.VirtualLinkPassive
	}
	return false
}

func (m *OspfShVirtualLinks) GetVirtualLinkAuthenticationType() string {
	if m != nil {
		return m.VirtualLinkAuthenticationType
	}
	return ""
}

func (m *OspfShVirtualLinks) GetVirtualLinkYoungestMdKey() bool {
	if m != nil {
		return m.VirtualLinkYoungestMdKey
	}
	return false
}

func (m *OspfShVirtualLinks) GetVirtualLinkYoungestMdKeyId() uint32 {
	if m != nil {
		return m.VirtualLinkYoungestMdKeyId
	}
	return 0
}

func (m *OspfShVirtualLinks) GetVirtualLinkOldMdKeyCount() uint32 {
	if m != nil {
		return m.VirtualLinkOldMdKeyCount
	}
	return 0
}

func (m *OspfShVirtualLinks) GetVirtualLinkMdKey() []uint32 {
	if m != nil {
		return m.VirtualLinkMdKey
	}
	return nil
}

func (m *OspfShVirtualLinks) GetKeychainName() string {
	if m != nil {
		return m.KeychainName
	}
	return ""
}

func (m *OspfShVirtualLinks) GetVirtualLinkKeychainKeyConf() bool {
	if m != nil {
		return m.VirtualLinkKeychainKeyConf
	}
	return false
}

func (m *OspfShVirtualLinks) GetVirtualLinkKeychainId() uint64 {
	if m != nil {
		return m.VirtualLinkKeychainId
	}
	return 0
}

func (m *OspfShVirtualLinks) GetVirtualLinkKeychainAlg() string {
	if m != nil {
		return m.VirtualLinkKeychainAlg
	}
	return ""
}

func (m *OspfShVirtualLinks) GetVirtualLinkNsfEnabled() bool {
	if m != nil {
		return m.VirtualLinkNsfEnabled
	}
	return false
}

func (m *OspfShVirtualLinks) GetVirtualLinkNsf() bool {
	if m != nil {
		return m.VirtualLinkNsf
	}
	return false
}

func (m *OspfShVirtualLinks) GetVirtualLinkLastNsf() uint32 {
	if m != nil {
		return m.VirtualLinkLastNsf
	}
	return 0
}

func (m *OspfShVirtualLinks) GetVirtualLinkNeighbor() *OspfShVlinkNeighbor {
	if m != nil {
		return m.VirtualLinkNeighbor
	}
	return nil
}

func init() {
	proto.RegisterType((*OspfShVirtualLinks_KEYS)(nil), "cisco_ios_xr_ipv4_ospf_oper.ospf.processes.process.vrfs.vrf.interface_information.virtual_links.virtual_link.ospf_sh_virtual_links_KEYS")
	proto.RegisterType((*OspfShNeighborRetrans)(nil), "cisco_ios_xr_ipv4_ospf_oper.ospf.processes.process.vrfs.vrf.interface_information.virtual_links.virtual_link.ospf_sh_neighbor_retrans")
	proto.RegisterType((*OspfShVlinkNeighbor)(nil), "cisco_ios_xr_ipv4_ospf_oper.ospf.processes.process.vrfs.vrf.interface_information.virtual_links.virtual_link.ospf_sh_vlink_neighbor")
	proto.RegisterType((*OspfShVirtualLinks)(nil), "cisco_ios_xr_ipv4_ospf_oper.ospf.processes.process.vrfs.vrf.interface_information.virtual_links.virtual_link.ospf_sh_virtual_links")
}

func init() { proto.RegisterFile("ospf_sh_virtual_links.proto", fileDescriptor_75fc92be622eb975) }

var fileDescriptor_75fc92be622eb975 = []byte{
	// 1225 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xc4, 0x57, 0x49, 0x53, 0x1b, 0x47,
	0x14, 0x2e, 0x61, 0xc7, 0x86, 0x66, 0x31, 0x34, 0x06, 0x37, 0x9b, 0x0d, 0xc4, 0x07, 0x2a, 0x95,
	0x28, 0x89, 0x97, 0x18, 0x63, 0x6c, 0x02, 0x02, 0x8c, 0xcc, 0x96, 0x92, 0xa9, 0x4a, 0x7c, 0x9a,
	0x6a, 0xcd, 0xf4, 0x48, 0x5d, 0xcc, 0xa2, 0x9a, 0x6e, 0x29, 0xd2, 0x3d, 0xe5, 0xff, 0x94, 0x63,
	0x4e, 0x39, 0xe6, 0x27, 0xe4, 0xaf, 0xa4, 0xfa, 0x75, 0x4b, 0x4c, 0xcf, 0xc2, 0x31, 0xbe, 0xb8,
	0xd0, 0xbc, 0xef, 0xfb, 0xfa, 0x7b, 0x3d, 0x6f, 0x19, 0xa3, 0x95, 0x58, 0x74, 0x7c, 0x47, 0xb4,
	0x9d, 0x1e, 0x4f, 0x64, 0x97, 0x06, 0x4e, 0xc0, 0xa3, 0x6b, 0x51, 0xed, 0x24, 0xb1, 0x8c, 0x71,
	0xe0, 0x72, 0xe1, 0xc6, 0x0e, 0x8f, 0x85, 0xd3, 0x4f, 0x1c, 0xde, 0xe9, 0xbd, 0x70, 0x00, 0x1e,
	0x77, 0x58, 0x52, 0x55, 0x7f, 0x29, 0x9c, 0xcb, 0x84, 0x60, 0x62, 0xf8, 0x57, 0xb5, 0x97, 0xf8,
	0xf0, 0x4f, 0x95, 0x47, 0x92, 0x25, 0x3e, 0x75, 0x99, 0xc3, 0x23, 0x3f, 0x4e, 0x42, 0x2a, 0x79,
	0x1c, 0x55, 0xed, 0x63, 0xd2, 0xbf, 0x36, 0x3f, 0x57, 0xd0, 0x72, 0xa1, 0x1b, 0xe7, 0xf4, 0xe8,
	0xd3, 0x47, 0xbc, 0x81, 0xa6, 0xcc, 0x19, 0x4e, 0x44, 0x43, 0x46, 0x2a, 0xeb, 0x95, 0xad, 0x89,
	0xc6, 0xa4, 0x79, 0x76, 0x41, 0x43, 0x86, 0x97, 0xd0, 0x78, 0x2f, 0xf1, 0x75, 0x78, 0x0c, 0xc2,
	0xf7, 0x7b, 0x89, 0x0f, 0xa1, 0x6f, 0xd0, 0x5c, 0x5a, 0x53, 0x63, 0xee, 0x00, 0xe6, 0x81, 0x09,
	0x9c, 0xf1, 0xe8, 0x5a, 0x61, 0x37, 0xff, 0x9a, 0x40, 0x64, 0x68, 0x24, 0x62, 0xbc, 0xd5, 0x6e,
	0xc6, 0x89, 0x93, 0x30, 0x99, 0xd0, 0x48, 0xe0, 0x6d, 0x44, 0xbc, 0xa6, 0x37, 0xfc, 0x19, 0x72,
	0x21, 0x78, 0x1c, 0x39, 0x6e, 0xdc, 0x8d, 0x24, 0x58, 0x9a, 0x6e, 0x2c, 0x7a, 0x4d, 0xaf, 0x61,
	0x85, 0x6b, 0x2a, 0x8a, 0x6b, 0xe8, 0x71, 0x01, 0x53, 0xc6, 0x92, 0x06, 0x86, 0x3f, 0x06, 0xfc,
	0x95, 0x1c, 0xff, 0x4a, 0x61, 0xb4, 0x48, 0x15, 0xcd, 0xd3, 0x84, 0x51, 0xc7, 0x0f, 0xe2, 0xd8,
	0xe3, 0x51, 0xcb, 0xe1, 0x91, 0xc7, 0xfa, 0x90, 0xc9, 0x74, 0x63, 0x4e, 0x85, 0x8e, 0x4d, 0xa4,
	0xae, 0x02, 0xf8, 0x29, 0x9a, 0xa1, 0x42, 0xa3, 0x0d, 0xf4, 0x2e, 0x40, 0xa7, 0xa8, 0x00, 0xa0,
	0x46, 0x1d, 0xa0, 0xb5, 0x6c, 0xa2, 0x76, 0x66, 0x5f, 0x69, 0x67, 0x43, 0x50, 0x51, 0x7a, 0x3b,
	0x68, 0x29, 0xea, 0x86, 0x4d, 0x96, 0x38, 0xb1, 0x9f, 0x11, 0x11, 0xe4, 0x1e, 0xf0, 0x1f, 0x69,
	0xc0, 0xa5, 0x6f, 0xf3, 0x05, 0xde, 0x43, 0xab, 0x3a, 0x2b, 0x9e, 0x08, 0x39, 0x72, 0x3b, 0xaa,
	0x1a, 0x72, 0x1f, 0xe8, 0x4b, 0x90, 0x9e, 0x82, 0x18, 0xeb, 0x23, 0x00, 0xfe, 0x80, 0x36, 0x6f,
	0x13, 0x30, 0xa9, 0x8f, 0x83, 0xcc, 0xe3, 0x52, 0x19, 0x7d, 0x19, 0x6f, 0xd0, 0xb2, 0xba, 0xb2,
	0x12, 0x2b, 0x13, 0x3a, 0x13, 0x2a, 0x8a, 0x8d, 0x1c, 0xa3, 0xf5, 0x72, 0xb2, 0xb1, 0x81, 0x40,
	0x62, 0xb5, 0x44, 0x42, 0x9b, 0x78, 0x8b, 0x56, 0x20, 0xa1, 0x88, 0xf5, 0x8b, 0x5c, 0x4c, 0x82,
	0x04, 0x51, 0x90, 0x0b, 0xd6, 0xcf, 0xdb, 0x38, 0x41, 0x1b, 0xb7, 0xd0, 0x8d, 0x8f, 0x29, 0x10,
	0x59, 0x2b, 0x13, 0xd1, 0x46, 0x5e, 0xa3, 0x25, 0x2a, 0xca, 0x6c, 0x4c, 0xeb, 0x82, 0xa7, 0xa2,
	0xd0, 0xc4, 0x21, 0x7a, 0x52, 0x4a, 0x35, 0x16, 0x66, 0x74, 0x5d, 0x15, 0x0b, 0x68, 0x03, 0xbb,
	0x68, 0x39, 0xa0, 0x42, 0x66, 0xeb, 0x32, 0x60, 0x51, 0x4b, 0xb6, 0xc9, 0x03, 0x7d, 0x11, 0x0a,
	0x61, 0x17, 0xd5, 0x19, 0xc4, 0x55, 0x65, 0x87, 0xb4, 0xcf, 0xc3, 0x6e, 0x58, 0x22, 0x30, 0xab,
	0x1d, 0x18, 0x50, 0xa1, 0xc6, 0x36, 0x22, 0x45, 0x0e, 0x24, 0x0f, 0x19, 0x99, 0xd3, 0x37, 0x90,
	0x3f, 0xff, 0x8a, 0x87, 0x0c, 0xbf, 0x43, 0x2b, 0x25, 0xa7, 0x03, 0x19, 0xeb, 0xb2, 0x2e, 0x3c,
	0x1b, 0xf8, 0xea, 0x64, 0x41, 0x8b, 0xb8, 0x09, 0x99, 0x37, 0x27, 0x0b, 0x9a, 0x27, 0x26, 0x9b,
	0xff, 0x8c, 0xa1, 0xc5, 0xd1, 0x30, 0xd5, 0x13, 0xcf, 0xf4, 0xae, 0x2a, 0x2d, 0x6b, 0x14, 0x8a,
	0x6e, 0xa7, 0x93, 0xa8, 0xb1, 0xda, 0x66, 0x41, 0x10, 0xc3, 0x10, 0x1b, 0x6f, 0x90, 0xd4, 0x50,
	0xfc, 0x68, 0x00, 0x27, 0x2a, 0x8e, 0xbf, 0x45, 0xd8, 0xa6, 0x4b, 0x2a, 0x87, 0xe3, 0x76, 0x36,
	0xcd, 0x52, 0xcf, 0xf1, 0xdf, 0x95, 0xcc, 0x69, 0xa9, 0x5c, 0x62, 0x1e, 0xc1, 0xe0, 0x9a, 0x7c,
	0xf6, 0xb9, 0x52, 0xfd, 0x3f, 0x57, 0x4d, 0xb5, 0x6c, 0xba, 0x37, 0x96, 0x52, 0x09, 0x34, 0x2c,
	0xa7, 0x9b, 0xff, 0xce, 0xa0, 0x85, 0xc2, 0xf5, 0x84, 0xbf, 0x47, 0x0f, 0x73, 0xbb, 0xc5, 0xe9,
	0x27, 0xe4, 0x19, 0xdc, 0xc9, 0x5c, 0x66, 0xbd, 0xfc, 0x96, 0xe0, 0x57, 0x88, 0xd8, 0x84, 0xa1,
	0x0d, 0xee, 0x91, 0xe7, 0x40, 0x5a, 0x48, 0x93, 0x4c, 0xb4, 0xee, 0x95, 0xdc, 0xfd, 0x8b, 0x92,
	0xbb, 0xcf, 0xbe, 0x68, 0x8f, 0x85, 0x34, 0xf2, 0x1c, 0x97, 0x27, 0x6e, 0x97, 0x4b, 0xf2, 0x32,
	0xf7, 0xa2, 0x0f, 0x01, 0x50, 0xd3, 0x71, 0xbc, 0x9b, 0xa5, 0xbb, 0x4e, 0x93, 0xcb, 0x40, 0x55,
	0x4a, 0x20, 0x28, 0xf9, 0x49, 0x0f, 0xc2, 0x34, 0xdd, 0x3d, 0xd0, 0xf1, 0x33, 0x41, 0xd5, 0xba,
	0x86, 0xeb, 0xe3, 0xd2, 0x51, 0x03, 0x86, 0xbc, 0xd2, 0xeb, 0xda, 0x3c, 0xdb, 0x4f, 0x18, 0xcd,
	0xf9, 0xbb, 0x79, 0x8d, 0xb0, 0x9d, 0xb7, 0x81, 0x91, 0xf6, 0x57, 0x1f, 0x02, 0x0a, 0x57, 0xba,
	0x1b, 0x0b, 0x49, 0x5e, 0x83, 0xab, 0xf4, 0x4a, 0xaf, 0xc5, 0x02, 0x76, 0x6f, 0x8f, 0x27, 0x23,
	0xa8, 0xd5, 0x4e, 0x1e, 0x0b, 0xe8, 0x80, 0xec, 0xe8, 0x39, 0xa0, 0x51, 0x8a, 0x77, 0x95, 0xc2,
	0x1c, 0x2a, 0x48, 0xce, 0x2f, 0xf4, 0x8b, 0x76, 0xdd, 0xa3, 0x01, 0x79, 0xa3, 0x47, 0x51, 0xea,
	0x68, 0x68, 0x98, 0xba, 0x89, 0xe3, 0x03, 0xf0, 0x50, 0x46, 0x77, 0x42, 0x41, 0x76, 0x41, 0x61,
	0xb9, 0x4c, 0xe1, 0x5c, 0xa8, 0xdd, 0x94, 0x79, 0xa5, 0xd4, 0xbb, 0x71, 0xf0, 0x36, 0xff, 0x4a,
	0x18, 0xf5, 0x46, 0x06, 0xb2, 0xe4, 0xdf, 0x29, 0x97, 0x37, 0xe4, 0x77, 0x39, 0xf2, 0xaf, 0x94,
	0xcb, 0x11, 0xf9, 0x12, 0x3d, 0x55, 0x21, 0xda, 0xcd, 0xf7, 0xb1, 0x1e, 0xe7, 0x46, 0x66, 0x0f,
	0x64, 0x36, 0x0c, 0x36, 0xd3, 0x47, 0x30, 0xd4, 0x8d, 0xe0, 0x4b, 0xf4, 0x28, 0xd3, 0x04, 0x7d,
	0x69, 0x46, 0xd0, 0xcf, 0xa0, 0xf1, 0xd0, 0xea, 0x81, 0xbe, 0xd4, 0xe3, 0x67, 0x27, 0x93, 0xc4,
	0x0d, 0x4d, 0xdd, 0xe0, 0xbe, 0x1e, 0x8a, 0x45, 0xcc, 0x73, 0x81, 0x7f, 0xc8, 0x34, 0x6a, 0x87,
	0x0a, 0xc1, 0x7b, 0x8c, 0x1c, 0x40, 0x27, 0xe0, 0x14, 0xeb, 0x17, 0x1d, 0xc1, 0xef, 0xd1, 0xba,
	0xc5, 0xa0, 0x5d, 0xd9, 0x66, 0x91, 0xe4, 0xae, 0x5e, 0x62, 0x72, 0xd0, 0x61, 0xa4, 0x06, 0x75,
	0xba, 0x96, 0x62, 0xef, 0x5b, 0xa8, 0xab, 0x41, 0x47, 0x6d, 0x82, 0x55, 0x4b, 0x68, 0x10, 0x77,
	0xa3, 0x16, 0x13, 0xd2, 0x09, 0x3d, 0xe7, 0x9a, 0x0d, 0xc8, 0x61, 0xae, 0x19, 0x3f, 0x19, 0xc4,
	0xb9, 0x77, 0xca, 0x06, 0xb8, 0x86, 0x9e, 0xdc, 0xc6, 0x57, 0x93, 0xe3, 0x28, 0x57, 0x3d, 0x96,
	0x44, 0xdd, 0xc3, 0x7b, 0x68, 0xcd, 0x12, 0x89, 0x03, 0x6f, 0xc8, 0xd7, 0x9f, 0x79, 0xc7, 0xb9,
	0x12, 0xbe, 0x0c, 0x3c, 0x60, 0xeb, 0x6f, 0xbc, 0xef, 0xd0, 0xbc, 0x25, 0x60, 0xcc, 0xbf, 0x5f,
	0xbf, 0xb3, 0x35, 0x6d, 0x0d, 0x20, 0x6d, 0xfa, 0x6b, 0x34, 0x7d, 0xcd, 0x06, 0x6e, 0x9b, 0xf2,
	0x48, 0xb7, 0xf4, 0x09, 0x5c, 0xd5, 0xd4, 0xf0, 0x21, 0xb4, 0x71, 0xb6, 0x2d, 0x46, 0x0c, 0x6d,
	0x2b, 0xf2, 0x49, 0x1d, 0xee, 0x26, 0x9d, 0xd8, 0xa9, 0xc1, 0x80, 0xb1, 0xc8, 0xcf, 0x0d, 0xd4,
	0x91, 0x06, 0xf7, 0xc8, 0x87, 0xf5, 0xca, 0xd6, 0x5d, 0x6b, 0xa0, 0x0e, 0xd9, 0x75, 0x4f, 0x7d,
	0xdd, 0x14, 0x13, 0x69, 0xd0, 0x22, 0xa7, 0xe0, 0x76, 0xb1, 0x80, 0xb9, 0x1f, 0xb4, 0xf2, 0x43,
	0x5c, 0xf8, 0x0e, 0x8b, 0x68, 0x33, 0x60, 0x1e, 0x39, 0x03, 0xc7, 0xd6, 0x10, 0x17, 0xfe, 0x91,
	0x0e, 0xe2, 0x2d, 0x34, 0x9b, 0x25, 0x92, 0x73, 0x20, 0xcc, 0xd8, 0x04, 0xfc, 0x23, 0x5a, 0xb0,
	0x90, 0xf0, 0x15, 0xa2, 0xe0, 0x17, 0xf0, 0x9e, 0xd2, 0x05, 0x7b, 0x46, 0x85, 0x54, 0x94, 0x3f,
	0x2b, 0x19, 0xce, 0x70, 0xb7, 0x90, 0x4b, 0xd8, 0xb4, 0x7f, 0x7c, 0xa1, 0x4d, 0x6b, 0x7f, 0x83,
	0x34, 0xe6, 0x0b, 0xf6, 0x5b, 0xf3, 0x1e, 0xfc, 0xaf, 0xf3, 0xf9, 0x7f, 0x01, 0x00, 0x00, 0xff,
	0xff, 0x72, 0xf4, 0xe8, 0x4f, 0x94, 0x0e, 0x00, 0x00,
}
