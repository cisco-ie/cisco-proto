/*
Copyright 2019 Cisco Systems

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: ospf_sh_adj_sid.proto

package cisco_ios_xr_ipv4_ospf_oper_ospf_processes_process_vrfs_vrf_segment_routing_adjacency_sids_adjacency_sid

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type OspfShAdjSid_KEYS struct {
	ProcessName          string   `protobuf:"bytes,1,opt,name=process_name,json=processName,proto3" json:"process_name,omitempty"`
	VrfName              string   `protobuf:"bytes,2,opt,name=vrf_name,json=vrfName,proto3" json:"vrf_name,omitempty"`
	AdjSid               uint32   `protobuf:"varint,3,opt,name=adj_sid,json=adjSid,proto3" json:"adj_sid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OspfShAdjSid_KEYS) Reset()         { *m = OspfShAdjSid_KEYS{} }
func (m *OspfShAdjSid_KEYS) String() string { return proto.CompactTextString(m) }
func (*OspfShAdjSid_KEYS) ProtoMessage()    {}
func (*OspfShAdjSid_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_96ba3521bacfe387, []int{0}
}

func (m *OspfShAdjSid_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OspfShAdjSid_KEYS.Unmarshal(m, b)
}
func (m *OspfShAdjSid_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OspfShAdjSid_KEYS.Marshal(b, m, deterministic)
}
func (m *OspfShAdjSid_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OspfShAdjSid_KEYS.Merge(m, src)
}
func (m *OspfShAdjSid_KEYS) XXX_Size() int {
	return xxx_messageInfo_OspfShAdjSid_KEYS.Size(m)
}
func (m *OspfShAdjSid_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_OspfShAdjSid_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_OspfShAdjSid_KEYS proto.InternalMessageInfo

func (m *OspfShAdjSid_KEYS) GetProcessName() string {
	if m != nil {
		return m.ProcessName
	}
	return ""
}

func (m *OspfShAdjSid_KEYS) GetVrfName() string {
	if m != nil {
		return m.VrfName
	}
	return ""
}

func (m *OspfShAdjSid_KEYS) GetAdjSid() uint32 {
	if m != nil {
		return m.AdjSid
	}
	return 0
}

type OspfShAdjSidPathInfo struct {
	InterfaceHandle      string   `protobuf:"bytes,1,opt,name=interface_handle,json=interfaceHandle,proto3" json:"interface_handle,omitempty"`
	NexthopIpAddress     string   `protobuf:"bytes,2,opt,name=nexthop_ip_address,json=nexthopIpAddress,proto3" json:"nexthop_ip_address,omitempty"`
	LoadMetric           uint32   `protobuf:"varint,3,opt,name=load_metric,json=loadMetric,proto3" json:"load_metric,omitempty"`
	LabelStack           []uint32 `protobuf:"varint,4,rep,packed,name=label_stack,json=labelStack,proto3" json:"label_stack,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OspfShAdjSidPathInfo) Reset()         { *m = OspfShAdjSidPathInfo{} }
func (m *OspfShAdjSidPathInfo) String() string { return proto.CompactTextString(m) }
func (*OspfShAdjSidPathInfo) ProtoMessage()    {}
func (*OspfShAdjSidPathInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_96ba3521bacfe387, []int{1}
}

func (m *OspfShAdjSidPathInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OspfShAdjSidPathInfo.Unmarshal(m, b)
}
func (m *OspfShAdjSidPathInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OspfShAdjSidPathInfo.Marshal(b, m, deterministic)
}
func (m *OspfShAdjSidPathInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OspfShAdjSidPathInfo.Merge(m, src)
}
func (m *OspfShAdjSidPathInfo) XXX_Size() int {
	return xxx_messageInfo_OspfShAdjSidPathInfo.Size(m)
}
func (m *OspfShAdjSidPathInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_OspfShAdjSidPathInfo.DiscardUnknown(m)
}

var xxx_messageInfo_OspfShAdjSidPathInfo proto.InternalMessageInfo

func (m *OspfShAdjSidPathInfo) GetInterfaceHandle() string {
	if m != nil {
		return m.InterfaceHandle
	}
	return ""
}

func (m *OspfShAdjSidPathInfo) GetNexthopIpAddress() string {
	if m != nil {
		return m.NexthopIpAddress
	}
	return ""
}

func (m *OspfShAdjSidPathInfo) GetLoadMetric() uint32 {
	if m != nil {
		return m.LoadMetric
	}
	return 0
}

func (m *OspfShAdjSidPathInfo) GetLabelStack() []uint32 {
	if m != nil {
		return m.LabelStack
	}
	return nil
}

type OspfShAdjSidNbrAssoc struct {
	NeighborId           string                `protobuf:"bytes,1,opt,name=neighbor_id,json=neighborId,proto3" json:"neighbor_id,omitempty"`
	SrAdjSidIsProtected  bool                  `protobuf:"varint,2,opt,name=sr_adj_sid_is_protected,json=srAdjSidIsProtected,proto3" json:"sr_adj_sid_is_protected,omitempty"`
	SrAdjSidHasBackup    bool                  `protobuf:"varint,3,opt,name=sr_adj_sid_has_backup,json=srAdjSidHasBackup,proto3" json:"sr_adj_sid_has_backup,omitempty"`
	PrimaryPathInfo      *OspfShAdjSidPathInfo `protobuf:"bytes,4,opt,name=primary_path_info,json=primaryPathInfo,proto3" json:"primary_path_info,omitempty"`
	BackupPathInfo       *OspfShAdjSidPathInfo `protobuf:"bytes,5,opt,name=backup_path_info,json=backupPathInfo,proto3" json:"backup_path_info,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *OspfShAdjSidNbrAssoc) Reset()         { *m = OspfShAdjSidNbrAssoc{} }
func (m *OspfShAdjSidNbrAssoc) String() string { return proto.CompactTextString(m) }
func (*OspfShAdjSidNbrAssoc) ProtoMessage()    {}
func (*OspfShAdjSidNbrAssoc) Descriptor() ([]byte, []int) {
	return fileDescriptor_96ba3521bacfe387, []int{2}
}

func (m *OspfShAdjSidNbrAssoc) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OspfShAdjSidNbrAssoc.Unmarshal(m, b)
}
func (m *OspfShAdjSidNbrAssoc) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OspfShAdjSidNbrAssoc.Marshal(b, m, deterministic)
}
func (m *OspfShAdjSidNbrAssoc) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OspfShAdjSidNbrAssoc.Merge(m, src)
}
func (m *OspfShAdjSidNbrAssoc) XXX_Size() int {
	return xxx_messageInfo_OspfShAdjSidNbrAssoc.Size(m)
}
func (m *OspfShAdjSidNbrAssoc) XXX_DiscardUnknown() {
	xxx_messageInfo_OspfShAdjSidNbrAssoc.DiscardUnknown(m)
}

var xxx_messageInfo_OspfShAdjSidNbrAssoc proto.InternalMessageInfo

func (m *OspfShAdjSidNbrAssoc) GetNeighborId() string {
	if m != nil {
		return m.NeighborId
	}
	return ""
}

func (m *OspfShAdjSidNbrAssoc) GetSrAdjSidIsProtected() bool {
	if m != nil {
		return m.SrAdjSidIsProtected
	}
	return false
}

func (m *OspfShAdjSidNbrAssoc) GetSrAdjSidHasBackup() bool {
	if m != nil {
		return m.SrAdjSidHasBackup
	}
	return false
}

func (m *OspfShAdjSidNbrAssoc) GetPrimaryPathInfo() *OspfShAdjSidPathInfo {
	if m != nil {
		return m.PrimaryPathInfo
	}
	return nil
}

func (m *OspfShAdjSidNbrAssoc) GetBackupPathInfo() *OspfShAdjSidPathInfo {
	if m != nil {
		return m.BackupPathInfo
	}
	return nil
}

type OspfShAdjSid struct {
	SrAdjacencySid                  uint32                  `protobuf:"varint,50,opt,name=sr_adjacency_sid,json=srAdjacencySid,proto3" json:"sr_adjacency_sid,omitempty"`
	SrAdjSidIsConfigured            bool                    `protobuf:"varint,51,opt,name=sr_adj_sid_is_configured,json=srAdjSidIsConfigured,proto3" json:"sr_adj_sid_is_configured,omitempty"`
	IsDeletedAdjacencyProtected     bool                    `protobuf:"varint,52,opt,name=is_deleted_adjacency_protected,json=isDeletedAdjacencyProtected,proto3" json:"is_deleted_adjacency_protected,omitempty"`
	DeletedAdjacencyProtectionTimer uint32                  `protobuf:"varint,53,opt,name=deleted_adjacency_protection_timer,json=deletedAdjacencyProtectionTimer,proto3" json:"deleted_adjacency_protection_timer,omitempty"`
	SrAdjSidNeighbor                []*OspfShAdjSidNbrAssoc `protobuf:"bytes,54,rep,name=sr_adj_sid_neighbor,json=srAdjSidNeighbor,proto3" json:"sr_adj_sid_neighbor,omitempty"`
	XXX_NoUnkeyedLiteral            struct{}                `json:"-"`
	XXX_unrecognized                []byte                  `json:"-"`
	XXX_sizecache                   int32                   `json:"-"`
}

func (m *OspfShAdjSid) Reset()         { *m = OspfShAdjSid{} }
func (m *OspfShAdjSid) String() string { return proto.CompactTextString(m) }
func (*OspfShAdjSid) ProtoMessage()    {}
func (*OspfShAdjSid) Descriptor() ([]byte, []int) {
	return fileDescriptor_96ba3521bacfe387, []int{3}
}

func (m *OspfShAdjSid) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OspfShAdjSid.Unmarshal(m, b)
}
func (m *OspfShAdjSid) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OspfShAdjSid.Marshal(b, m, deterministic)
}
func (m *OspfShAdjSid) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OspfShAdjSid.Merge(m, src)
}
func (m *OspfShAdjSid) XXX_Size() int {
	return xxx_messageInfo_OspfShAdjSid.Size(m)
}
func (m *OspfShAdjSid) XXX_DiscardUnknown() {
	xxx_messageInfo_OspfShAdjSid.DiscardUnknown(m)
}

var xxx_messageInfo_OspfShAdjSid proto.InternalMessageInfo

func (m *OspfShAdjSid) GetSrAdjacencySid() uint32 {
	if m != nil {
		return m.SrAdjacencySid
	}
	return 0
}

func (m *OspfShAdjSid) GetSrAdjSidIsConfigured() bool {
	if m != nil {
		return m.SrAdjSidIsConfigured
	}
	return false
}

func (m *OspfShAdjSid) GetIsDeletedAdjacencyProtected() bool {
	if m != nil {
		return m.IsDeletedAdjacencyProtected
	}
	return false
}

func (m *OspfShAdjSid) GetDeletedAdjacencyProtectionTimer() uint32 {
	if m != nil {
		return m.DeletedAdjacencyProtectionTimer
	}
	return 0
}

func (m *OspfShAdjSid) GetSrAdjSidNeighbor() []*OspfShAdjSidNbrAssoc {
	if m != nil {
		return m.SrAdjSidNeighbor
	}
	return nil
}

func init() {
	proto.RegisterType((*OspfShAdjSid_KEYS)(nil), "cisco_ios_xr_ipv4_ospf_oper.ospf.processes.process.vrfs.vrf.segment_routing.adjacency_sids.adjacency_sid.ospf_sh_adj_sid_KEYS")
	proto.RegisterType((*OspfShAdjSidPathInfo)(nil), "cisco_ios_xr_ipv4_ospf_oper.ospf.processes.process.vrfs.vrf.segment_routing.adjacency_sids.adjacency_sid.ospf_sh_adj_sid_path_info")
	proto.RegisterType((*OspfShAdjSidNbrAssoc)(nil), "cisco_ios_xr_ipv4_ospf_oper.ospf.processes.process.vrfs.vrf.segment_routing.adjacency_sids.adjacency_sid.ospf_sh_adj_sid_nbr_assoc")
	proto.RegisterType((*OspfShAdjSid)(nil), "cisco_ios_xr_ipv4_ospf_oper.ospf.processes.process.vrfs.vrf.segment_routing.adjacency_sids.adjacency_sid.ospf_sh_adj_sid")
}

func init() { proto.RegisterFile("ospf_sh_adj_sid.proto", fileDescriptor_96ba3521bacfe387) }

var fileDescriptor_96ba3521bacfe387 = []byte{
	// 564 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xcc, 0x54, 0x41, 0x6f, 0xd3, 0x30,
	0x14, 0x56, 0x68, 0xd9, 0x8a, 0x0b, 0x6b, 0xe7, 0x6d, 0x5a, 0x26, 0x24, 0x56, 0x7a, 0x2a, 0x12,
	0x8a, 0xd0, 0x56, 0x76, 0x1f, 0x03, 0x69, 0xd5, 0xc4, 0x34, 0xa5, 0x5c, 0x38, 0x59, 0x6e, 0xfc,
	0xd2, 0xb8, 0x6b, 0xec, 0xc8, 0xcf, 0xad, 0xb6, 0x33, 0x17, 0x7e, 0x0d, 0x42, 0x42, 0xe2, 0xc2,
	0x9f, 0x43, 0x71, 0x92, 0xb6, 0x2b, 0xec, 0x0a, 0xbb, 0x54, 0xee, 0xf7, 0xbe, 0xf7, 0xde, 0x67,
	0x7f, 0x5f, 0x4b, 0xf6, 0x34, 0x66, 0x31, 0xc3, 0x84, 0x71, 0x31, 0x61, 0x28, 0x45, 0x90, 0x19,
	0x6d, 0x35, 0x4d, 0x22, 0x89, 0x91, 0x66, 0x52, 0x23, 0xbb, 0x31, 0x4c, 0x66, 0xf3, 0x3e, 0x73,
	0x44, 0x9d, 0x81, 0x09, 0xf2, 0x53, 0xce, 0x8b, 0x00, 0x11, 0xb0, 0x3a, 0x05, 0x73, 0x13, 0xbb,
	0x8f, 0x00, 0x61, 0x9c, 0x82, 0xb2, 0xcc, 0xe8, 0x99, 0x95, 0x6a, 0x1c, 0x70, 0x31, 0xe1, 0x11,
	0xa8, 0xe8, 0x36, 0x5f, 0x80, 0x77, 0xbf, 0x76, 0x53, 0xb2, 0xbb, 0x26, 0x81, 0x5d, 0x7c, 0xf8,
	0x3c, 0xa4, 0x2f, 0xc9, 0xd3, 0x72, 0x30, 0x53, 0x3c, 0x05, 0xdf, 0xeb, 0x78, 0xbd, 0x27, 0x61,
	0xb3, 0xc4, 0x2e, 0x79, 0x0a, 0xf4, 0x80, 0x34, 0xe6, 0x26, 0x2e, 0xca, 0x8f, 0x5c, 0x79, 0x73,
	0x6e, 0x62, 0x57, 0xda, 0x27, 0x9b, 0xe5, 0x34, 0xbf, 0xd6, 0xf1, 0x7a, 0xcf, 0xc2, 0x0d, 0x2e,
	0x26, 0x43, 0x29, 0xba, 0x3f, 0x3d, 0x72, 0xb0, 0xbe, 0x2f, 0xe3, 0x36, 0x61, 0x52, 0xc5, 0x9a,
	0xbe, 0x22, 0x6d, 0xa9, 0x2c, 0x98, 0x98, 0x47, 0xc0, 0x12, 0xae, 0xc4, 0xb4, 0x5a, 0xdc, 0x5a,
	0xe0, 0xe7, 0x0e, 0xa6, 0xaf, 0x09, 0x55, 0x70, 0x63, 0x13, 0x9d, 0x31, 0x99, 0x31, 0x2e, 0x84,
	0x01, 0xc4, 0x52, 0x46, 0xbb, 0xac, 0x0c, 0xb2, 0xd3, 0x02, 0xa7, 0x87, 0xa4, 0x39, 0xd5, 0x5c,
	0xb0, 0x14, 0xac, 0x91, 0x51, 0xa9, 0x89, 0xe4, 0xd0, 0x47, 0x87, 0x38, 0x02, 0x1f, 0xc1, 0x94,
	0xa1, 0xe5, 0xd1, 0xb5, 0x5f, 0xef, 0xd4, 0x1c, 0x21, 0x87, 0x86, 0x39, 0xd2, 0xfd, 0x5a, 0xff,
	0x53, 0xb8, 0x1a, 0x19, 0xc6, 0x11, 0xb5, 0x6b, 0x57, 0x20, 0xc7, 0xc9, 0x48, 0x1b, 0x26, 0x45,
	0xa9, 0x99, 0x54, 0xd0, 0x40, 0xd0, 0x3e, 0xd9, 0x47, 0xb3, 0x68, 0x94, 0xc8, 0x72, 0x9f, 0x21,
	0xb2, 0x20, 0x9c, 0xe6, 0x46, 0xb8, 0x83, 0xe6, 0xd4, 0x3d, 0xd1, 0x00, 0xaf, 0xaa, 0x12, 0x7d,
	0x43, 0xf6, 0x56, 0xba, 0x12, 0x8e, 0x6c, 0xc4, 0xa3, 0xeb, 0x59, 0xe6, 0x2e, 0xd0, 0x08, 0xb7,
	0xab, 0x9e, 0x73, 0x8e, 0xef, 0x5c, 0x81, 0x7e, 0xf7, 0xc8, 0x76, 0x66, 0x64, 0xca, 0xcd, 0xed,
	0xf2, 0x5d, 0xfd, 0x7a, 0xc7, 0xeb, 0x35, 0x8f, 0xbe, 0x78, 0xc1, 0xbf, 0x8a, 0x55, 0x70, 0xaf,
	0xc7, 0x61, 0xab, 0x94, 0x77, 0xc5, 0x6d, 0x32, 0xc8, 0x4d, 0xff, 0xe6, 0x91, 0x76, 0x71, 0xad,
	0x15, 0xc5, 0x8f, 0x1f, 0x90, 0xe2, 0xad, 0x42, 0x5d, 0x25, 0xb8, 0xfb, 0xab, 0x46, 0x5a, 0x6b,
	0x6c, 0xda, 0x23, 0xed, 0xc2, 0xa9, 0xe5, 0x44, 0xff, 0xc8, 0xa5, 0x6c, 0xcb, 0x99, 0x54, 0xc0,
	0x43, 0x29, 0xe8, 0x09, 0xf1, 0xef, 0x26, 0x21, 0xd2, 0x2a, 0x96, 0xe3, 0x99, 0x01, 0xe1, 0x1f,
	0x3b, 0x5b, 0x77, 0x97, 0x51, 0x38, 0x5b, 0xd4, 0xe8, 0x19, 0x79, 0x21, 0x91, 0x09, 0x98, 0x82,
	0x05, 0xb1, 0xb2, 0x69, 0x19, 0xa4, 0xbe, 0xeb, 0x7e, 0x2e, 0xf1, 0x7d, 0x41, 0x5a, 0xac, 0x5d,
	0x06, 0xea, 0x82, 0x74, 0xef, 0x9d, 0x20, 0xb5, 0x62, 0x56, 0xa6, 0x60, 0xfc, 0xb7, 0x4e, 0xf8,
	0xa1, 0xf8, 0xfb, 0x18, 0xa9, 0xd5, 0xa7, 0x9c, 0x46, 0x7f, 0x78, 0x64, 0x67, 0xe5, 0x2a, 0x55,
	0xda, 0xfd, 0x93, 0x4e, 0xed, 0x3f, 0x7b, 0xb7, 0xf8, 0x61, 0x86, 0xed, 0xea, 0x2d, 0x2f, 0x4b,
	0x75, 0xa3, 0x0d, 0xf7, 0x0f, 0x7b, 0xfc, 0x3b, 0x00, 0x00, 0xff, 0xff, 0x95, 0xd1, 0xd0, 0xa3,
	0x7a, 0x05, 0x00, 0x00,
}
