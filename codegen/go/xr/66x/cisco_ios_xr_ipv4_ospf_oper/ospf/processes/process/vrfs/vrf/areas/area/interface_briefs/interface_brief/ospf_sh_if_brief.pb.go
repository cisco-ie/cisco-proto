/*
Copyright 2019 Cisco Systems

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: ospf_sh_if_brief.proto

package cisco_ios_xr_ipv4_ospf_oper_ospf_processes_process_vrfs_vrf_areas_area_interface_briefs_interface_brief

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type OspfShIfBrief_KEYS struct {
	ProcessName          string   `protobuf:"bytes,1,opt,name=process_name,json=processName,proto3" json:"process_name,omitempty"`
	VrfName              string   `protobuf:"bytes,2,opt,name=vrf_name,json=vrfName,proto3" json:"vrf_name,omitempty"`
	AreaId               uint32   `protobuf:"varint,3,opt,name=area_id,json=areaId,proto3" json:"area_id,omitempty"`
	InterfaceName        string   `protobuf:"bytes,4,opt,name=interface_name,json=interfaceName,proto3" json:"interface_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OspfShIfBrief_KEYS) Reset()         { *m = OspfShIfBrief_KEYS{} }
func (m *OspfShIfBrief_KEYS) String() string { return proto.CompactTextString(m) }
func (*OspfShIfBrief_KEYS) ProtoMessage()    {}
func (*OspfShIfBrief_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_d0466f349213f248, []int{0}
}

func (m *OspfShIfBrief_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OspfShIfBrief_KEYS.Unmarshal(m, b)
}
func (m *OspfShIfBrief_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OspfShIfBrief_KEYS.Marshal(b, m, deterministic)
}
func (m *OspfShIfBrief_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OspfShIfBrief_KEYS.Merge(m, src)
}
func (m *OspfShIfBrief_KEYS) XXX_Size() int {
	return xxx_messageInfo_OspfShIfBrief_KEYS.Size(m)
}
func (m *OspfShIfBrief_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_OspfShIfBrief_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_OspfShIfBrief_KEYS proto.InternalMessageInfo

func (m *OspfShIfBrief_KEYS) GetProcessName() string {
	if m != nil {
		return m.ProcessName
	}
	return ""
}

func (m *OspfShIfBrief_KEYS) GetVrfName() string {
	if m != nil {
		return m.VrfName
	}
	return ""
}

func (m *OspfShIfBrief_KEYS) GetAreaId() uint32 {
	if m != nil {
		return m.AreaId
	}
	return 0
}

func (m *OspfShIfBrief_KEYS) GetInterfaceName() string {
	if m != nil {
		return m.InterfaceName
	}
	return ""
}

type OspfShInterfaceMadj struct {
	InterfaceArea             string   `protobuf:"bytes,1,opt,name=interface_area,json=interfaceArea,proto3" json:"interface_area,omitempty"`
	MadjAreaId                uint32   `protobuf:"varint,2,opt,name=madj_area_id,json=madjAreaId,proto3" json:"madj_area_id,omitempty"`
	InterfaceNeighborCount    uint32   `protobuf:"varint,3,opt,name=interface_neighbor_count,json=interfaceNeighborCount,proto3" json:"interface_neighbor_count,omitempty"`
	InterfaceAdjNeighborCount uint32   `protobuf:"varint,4,opt,name=interface_adj_neighbor_count,json=interfaceAdjNeighborCount,proto3" json:"interface_adj_neighbor_count,omitempty"`
	InterfaceLinkCost         uint32   `protobuf:"varint,5,opt,name=interface_link_cost,json=interfaceLinkCost,proto3" json:"interface_link_cost,omitempty"`
	OspfInterfaceState        string   `protobuf:"bytes,6,opt,name=ospf_interface_state,json=ospfInterfaceState,proto3" json:"ospf_interface_state,omitempty"`
	XXX_NoUnkeyedLiteral      struct{} `json:"-"`
	XXX_unrecognized          []byte   `json:"-"`
	XXX_sizecache             int32    `json:"-"`
}

func (m *OspfShInterfaceMadj) Reset()         { *m = OspfShInterfaceMadj{} }
func (m *OspfShInterfaceMadj) String() string { return proto.CompactTextString(m) }
func (*OspfShInterfaceMadj) ProtoMessage()    {}
func (*OspfShInterfaceMadj) Descriptor() ([]byte, []int) {
	return fileDescriptor_d0466f349213f248, []int{1}
}

func (m *OspfShInterfaceMadj) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OspfShInterfaceMadj.Unmarshal(m, b)
}
func (m *OspfShInterfaceMadj) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OspfShInterfaceMadj.Marshal(b, m, deterministic)
}
func (m *OspfShInterfaceMadj) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OspfShInterfaceMadj.Merge(m, src)
}
func (m *OspfShInterfaceMadj) XXX_Size() int {
	return xxx_messageInfo_OspfShInterfaceMadj.Size(m)
}
func (m *OspfShInterfaceMadj) XXX_DiscardUnknown() {
	xxx_messageInfo_OspfShInterfaceMadj.DiscardUnknown(m)
}

var xxx_messageInfo_OspfShInterfaceMadj proto.InternalMessageInfo

func (m *OspfShInterfaceMadj) GetInterfaceArea() string {
	if m != nil {
		return m.InterfaceArea
	}
	return ""
}

func (m *OspfShInterfaceMadj) GetMadjAreaId() uint32 {
	if m != nil {
		return m.MadjAreaId
	}
	return 0
}

func (m *OspfShInterfaceMadj) GetInterfaceNeighborCount() uint32 {
	if m != nil {
		return m.InterfaceNeighborCount
	}
	return 0
}

func (m *OspfShInterfaceMadj) GetInterfaceAdjNeighborCount() uint32 {
	if m != nil {
		return m.InterfaceAdjNeighborCount
	}
	return 0
}

func (m *OspfShInterfaceMadj) GetInterfaceLinkCost() uint32 {
	if m != nil {
		return m.InterfaceLinkCost
	}
	return 0
}

func (m *OspfShInterfaceMadj) GetOspfInterfaceState() string {
	if m != nil {
		return m.OspfInterfaceState
	}
	return ""
}

type OspfShIfBrief struct {
	InterfaceNameXr             string                 `protobuf:"bytes,50,opt,name=interface_name_xr,json=interfaceNameXr,proto3" json:"interface_name_xr,omitempty"`
	InterfaceArea               string                 `protobuf:"bytes,51,opt,name=interface_area,json=interfaceArea,proto3" json:"interface_area,omitempty"`
	InterfaceAddress            string                 `protobuf:"bytes,52,opt,name=interface_address,json=interfaceAddress,proto3" json:"interface_address,omitempty"`
	InterfaceMask               uint32                 `protobuf:"varint,53,opt,name=interface_mask,json=interfaceMask,proto3" json:"interface_mask,omitempty"`
	InterfaceLinkCost           uint32                 `protobuf:"varint,54,opt,name=interface_link_cost,json=interfaceLinkCost,proto3" json:"interface_link_cost,omitempty"`
	OspfInterfaceState          string                 `protobuf:"bytes,55,opt,name=ospf_interface_state,json=ospfInterfaceState,proto3" json:"ospf_interface_state,omitempty"`
	InterfaceFastDetectHoldDown bool                   `protobuf:"varint,56,opt,name=interface_fast_detect_hold_down,json=interfaceFastDetectHoldDown,proto3" json:"interface_fast_detect_hold_down,omitempty"`
	InterfaceNeighborCount      uint32                 `protobuf:"varint,57,opt,name=interface_neighbor_count,json=interfaceNeighborCount,proto3" json:"interface_neighbor_count,omitempty"`
	InterfaceAdjNeighborCount   uint32                 `protobuf:"varint,58,opt,name=interface_adj_neighbor_count,json=interfaceAdjNeighborCount,proto3" json:"interface_adj_neighbor_count,omitempty"`
	InterfaceisMadj             bool                   `protobuf:"varint,59,opt,name=interfaceis_madj,json=interfaceisMadj,proto3" json:"interfaceis_madj,omitempty"`
	InterfaceMadjCount          uint32                 `protobuf:"varint,60,opt,name=interface_madj_count,json=interfaceMadjCount,proto3" json:"interface_madj_count,omitempty"`
	InterfaceMadj               []*OspfShInterfaceMadj `protobuf:"bytes,61,rep,name=interface_madj,json=interfaceMadj,proto3" json:"interface_madj,omitempty"`
	XXX_NoUnkeyedLiteral        struct{}               `json:"-"`
	XXX_unrecognized            []byte                 `json:"-"`
	XXX_sizecache               int32                  `json:"-"`
}

func (m *OspfShIfBrief) Reset()         { *m = OspfShIfBrief{} }
func (m *OspfShIfBrief) String() string { return proto.CompactTextString(m) }
func (*OspfShIfBrief) ProtoMessage()    {}
func (*OspfShIfBrief) Descriptor() ([]byte, []int) {
	return fileDescriptor_d0466f349213f248, []int{2}
}

func (m *OspfShIfBrief) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OspfShIfBrief.Unmarshal(m, b)
}
func (m *OspfShIfBrief) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OspfShIfBrief.Marshal(b, m, deterministic)
}
func (m *OspfShIfBrief) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OspfShIfBrief.Merge(m, src)
}
func (m *OspfShIfBrief) XXX_Size() int {
	return xxx_messageInfo_OspfShIfBrief.Size(m)
}
func (m *OspfShIfBrief) XXX_DiscardUnknown() {
	xxx_messageInfo_OspfShIfBrief.DiscardUnknown(m)
}

var xxx_messageInfo_OspfShIfBrief proto.InternalMessageInfo

func (m *OspfShIfBrief) GetInterfaceNameXr() string {
	if m != nil {
		return m.InterfaceNameXr
	}
	return ""
}

func (m *OspfShIfBrief) GetInterfaceArea() string {
	if m != nil {
		return m.InterfaceArea
	}
	return ""
}

func (m *OspfShIfBrief) GetInterfaceAddress() string {
	if m != nil {
		return m.InterfaceAddress
	}
	return ""
}

func (m *OspfShIfBrief) GetInterfaceMask() uint32 {
	if m != nil {
		return m.InterfaceMask
	}
	return 0
}

func (m *OspfShIfBrief) GetInterfaceLinkCost() uint32 {
	if m != nil {
		return m.InterfaceLinkCost
	}
	return 0
}

func (m *OspfShIfBrief) GetOspfInterfaceState() string {
	if m != nil {
		return m.OspfInterfaceState
	}
	return ""
}

func (m *OspfShIfBrief) GetInterfaceFastDetectHoldDown() bool {
	if m != nil {
		return m.InterfaceFastDetectHoldDown
	}
	return false
}

func (m *OspfShIfBrief) GetInterfaceNeighborCount() uint32 {
	if m != nil {
		return m.InterfaceNeighborCount
	}
	return 0
}

func (m *OspfShIfBrief) GetInterfaceAdjNeighborCount() uint32 {
	if m != nil {
		return m.InterfaceAdjNeighborCount
	}
	return 0
}

func (m *OspfShIfBrief) GetInterfaceisMadj() bool {
	if m != nil {
		return m.InterfaceisMadj
	}
	return false
}

func (m *OspfShIfBrief) GetInterfaceMadjCount() uint32 {
	if m != nil {
		return m.InterfaceMadjCount
	}
	return 0
}

func (m *OspfShIfBrief) GetInterfaceMadj() []*OspfShInterfaceMadj {
	if m != nil {
		return m.InterfaceMadj
	}
	return nil
}

func init() {
	proto.RegisterType((*OspfShIfBrief_KEYS)(nil), "cisco_ios_xr_ipv4_ospf_oper.ospf.processes.process.vrfs.vrf.areas.area.interface_briefs.interface_brief.ospf_sh_if_brief_KEYS")
	proto.RegisterType((*OspfShInterfaceMadj)(nil), "cisco_ios_xr_ipv4_ospf_oper.ospf.processes.process.vrfs.vrf.areas.area.interface_briefs.interface_brief.ospf_sh_interface_madj")
	proto.RegisterType((*OspfShIfBrief)(nil), "cisco_ios_xr_ipv4_ospf_oper.ospf.processes.process.vrfs.vrf.areas.area.interface_briefs.interface_brief.ospf_sh_if_brief")
}

func init() { proto.RegisterFile("ospf_sh_if_brief.proto", fileDescriptor_d0466f349213f248) }

var fileDescriptor_d0466f349213f248 = []byte{
	// 537 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x54, 0xdd, 0x6e, 0xd3, 0x30,
	0x14, 0x56, 0xf6, 0xd3, 0x0d, 0x6f, 0x63, 0x9b, 0x19, 0xc3, 0x13, 0x48, 0x84, 0x4a, 0x48, 0x05,
	0xa4, 0x68, 0xda, 0x06, 0x8c, 0x3f, 0xa1, 0x69, 0x05, 0x31, 0xc1, 0xb8, 0xe8, 0x6e, 0xe0, 0xca,
	0x72, 0x63, 0x67, 0x75, 0xda, 0xc6, 0x95, 0x8f, 0xe9, 0x76, 0xc7, 0x53, 0xf0, 0x0a, 0x3c, 0x06,
	0x0f, 0xc3, 0x93, 0x20, 0x9f, 0xa6, 0x4d, 0x52, 0x75, 0x20, 0x84, 0xc4, 0x4d, 0x94, 0x9c, 0xef,
	0x3b, 0x5f, 0x3e, 0x7f, 0x39, 0x27, 0x64, 0xdb, 0xc0, 0x20, 0xe1, 0xd0, 0xe1, 0x3a, 0xe1, 0x6d,
	0xab, 0x55, 0x12, 0x0d, 0xac, 0x71, 0x86, 0x9e, 0xc7, 0x1a, 0x62, 0xc3, 0xb5, 0x01, 0x7e, 0x69,
	0xb9, 0x1e, 0x0c, 0x0f, 0x38, 0x32, 0xcd, 0x40, 0xd9, 0xc8, 0xdf, 0x79, 0x5e, 0xac, 0x00, 0x14,
	0x8c, 0xef, 0xa2, 0xa1, 0x4d, 0xf0, 0x12, 0x09, 0xab, 0x04, 0xe0, 0x35, 0xd2, 0x99, 0x53, 0x36,
	0x11, 0xb1, 0x1a, 0xa9, 0xc3, 0x74, 0xa1, 0xfe, 0x2d, 0x20, 0x37, 0xa7, 0x3d, 0xf0, 0xf7, 0x6f,
	0x3e, 0x9f, 0xd1, 0x7b, 0x64, 0x35, 0x57, 0xe6, 0x99, 0xe8, 0x2b, 0x16, 0x84, 0x41, 0xe3, 0x5a,
	0x6b, 0x25, 0xaf, 0x7d, 0x14, 0x7d, 0x45, 0x77, 0xc8, 0xf2, 0xd0, 0x26, 0x23, 0x78, 0x0e, 0xe1,
	0xa5, 0xa1, 0x4d, 0x10, 0xba, 0x45, 0x96, 0xbc, 0x01, 0xae, 0x25, 0x9b, 0x0f, 0x83, 0xc6, 0x5a,
	0xab, 0xe6, 0x1f, 0x4f, 0x24, 0xbd, 0x4f, 0xae, 0x17, 0x1e, 0xb0, 0x73, 0x01, 0x3b, 0xd7, 0x26,
	0x55, 0xdf, 0x5f, 0xff, 0x31, 0x57, 0xca, 0x66, 0xc2, 0xef, 0x0b, 0x99, 0x56, 0x15, 0xbc, 0x6a,
	0x6e, 0xad, 0x50, 0x38, 0xb2, 0x4a, 0xd0, 0x90, 0xac, 0x7a, 0x3a, 0x1f, 0xdb, 0x98, 0x43, 0x1b,
	0xc4, 0xd7, 0x8e, 0x46, 0x56, 0x0e, 0x09, 0x2b, 0x59, 0x51, 0xfa, 0xbc, 0xd3, 0x36, 0x96, 0xc7,
	0xe6, 0x4b, 0xe6, 0x72, 0xd3, 0xdb, 0x85, 0xa9, 0x1c, 0x3e, 0xf6, 0x28, 0x7d, 0x4d, 0xee, 0x94,
	0x2c, 0xc8, 0x74, 0xba, 0x7b, 0x01, 0xbb, 0x77, 0x0a, 0x43, 0x32, 0xad, 0x0a, 0x44, 0xe4, 0x46,
	0x21, 0xd0, 0xd3, 0x59, 0x97, 0xc7, 0x06, 0x1c, 0x5b, 0xc4, 0xbe, 0xcd, 0x09, 0xf4, 0x41, 0x67,
	0xdd, 0x63, 0x03, 0x8e, 0xee, 0x92, 0x2d, 0x4c, 0xa3, 0x68, 0x02, 0x27, 0x9c, 0x62, 0x35, 0x3c,
	0x39, 0xf5, 0xd8, 0xc9, 0x18, 0x3a, 0xf3, 0x48, 0xfd, 0xe7, 0x22, 0xd9, 0x98, 0xfe, 0xb0, 0xf4,
	0x21, 0xd9, 0xac, 0x86, 0xcf, 0x2f, 0x2d, 0xdb, 0x43, 0x8d, 0xf5, 0x4a, 0xfe, 0x9f, 0xec, 0x8c,
	0x98, 0xf7, 0x67, 0xc5, 0xfc, 0xa8, 0x2c, 0x29, 0xa4, 0xb4, 0x0a, 0x80, 0x1d, 0x20, 0x73, 0xa3,
	0x74, 0x7e, 0xac, 0x57, 0x35, 0xfb, 0x02, 0xba, 0xec, 0x31, 0x9e, 0xb8, 0xd0, 0x3c, 0x15, 0xd0,
	0xbd, 0x2a, 0x9d, 0x27, 0x7f, 0x9b, 0xce, 0xd3, 0xab, 0xd2, 0xa1, 0x4d, 0x72, 0xb7, 0x20, 0x27,
	0x02, 0x1c, 0x97, 0xca, 0xa9, 0xd8, 0xf1, 0x8e, 0xe9, 0x49, 0x2e, 0xcd, 0x45, 0xc6, 0x0e, 0xc3,
	0xa0, 0xb1, 0xdc, 0xba, 0x3d, 0xa1, 0xbd, 0x15, 0xe0, 0x9a, 0x48, 0x7a, 0x67, 0x7a, 0xb2, 0x69,
	0x2e, 0xb2, 0xdf, 0x0e, 0xd0, 0xb3, 0x7f, 0x1a, 0xa0, 0xe7, 0x7f, 0x1a, 0xa0, 0x07, 0xa4, 0x48,
	0x57, 0x03, 0x2e, 0x06, 0x7b, 0x81, 0x8e, 0xd7, 0x4b, 0xf5, 0x53, 0xbf, 0x2f, 0xbb, 0x64, 0xab,
	0xba, 0x41, 0xf9, 0x3b, 0x5e, 0xe2, 0x3b, 0x68, 0x29, 0x7a, 0x99, 0x8e, 0xc4, 0xbf, 0x07, 0xd5,
	0xef, 0x24, 0x53, 0xf6, 0x2a, 0x9c, 0x6f, 0xac, 0xec, 0x7d, 0x8d, 0xfe, 0xd3, 0x7f, 0x29, 0x9a,
	0xbd, 0xfb, 0x95, 0x41, 0x91, 0x69, 0xbb, 0x86, 0x7f, 0xcb, 0xfd, 0x5f, 0x01, 0x00, 0x00, 0xff,
	0xff, 0xf8, 0x1c, 0x1b, 0xfd, 0x47, 0x05, 0x00, 0x00,
}
