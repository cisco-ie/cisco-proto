/*
Copyright 2019 Cisco Systems

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: ospf_sh_database.proto

package cisco_ios_xr_ipv4_ospf_oper_ospf_processes_process_vrfs_vrf_database_database_areas_database_area_lsa_summaries_lsa_summary

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type OspfShDatabase_KEYS struct {
	ProcessName          string   `protobuf:"bytes,1,opt,name=process_name,json=processName,proto3" json:"process_name,omitempty"`
	VrfName              string   `protobuf:"bytes,2,opt,name=vrf_name,json=vrfName,proto3" json:"vrf_name,omitempty"`
	AreaId               uint32   `protobuf:"varint,3,opt,name=area_id,json=areaId,proto3" json:"area_id,omitempty"`
	AreaId_1             uint32   `protobuf:"varint,4,opt,name=area_id_1,json=areaId1,proto3" json:"area_id_1,omitempty"`
	LsType               string   `protobuf:"bytes,5,opt,name=ls_type,json=lsType,proto3" json:"ls_type,omitempty"`
	LsId                 string   `protobuf:"bytes,6,opt,name=ls_id,json=lsId,proto3" json:"ls_id,omitempty"`
	AdvertisingRouter    string   `protobuf:"bytes,7,opt,name=advertising_router,json=advertisingRouter,proto3" json:"advertising_router,omitempty"`
	InterfaceName        string   `protobuf:"bytes,8,opt,name=interface_name,json=interfaceName,proto3" json:"interface_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OspfShDatabase_KEYS) Reset()         { *m = OspfShDatabase_KEYS{} }
func (m *OspfShDatabase_KEYS) String() string { return proto.CompactTextString(m) }
func (*OspfShDatabase_KEYS) ProtoMessage()    {}
func (*OspfShDatabase_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_b9f78b00611f1589, []int{0}
}

func (m *OspfShDatabase_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OspfShDatabase_KEYS.Unmarshal(m, b)
}
func (m *OspfShDatabase_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OspfShDatabase_KEYS.Marshal(b, m, deterministic)
}
func (m *OspfShDatabase_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OspfShDatabase_KEYS.Merge(m, src)
}
func (m *OspfShDatabase_KEYS) XXX_Size() int {
	return xxx_messageInfo_OspfShDatabase_KEYS.Size(m)
}
func (m *OspfShDatabase_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_OspfShDatabase_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_OspfShDatabase_KEYS proto.InternalMessageInfo

func (m *OspfShDatabase_KEYS) GetProcessName() string {
	if m != nil {
		return m.ProcessName
	}
	return ""
}

func (m *OspfShDatabase_KEYS) GetVrfName() string {
	if m != nil {
		return m.VrfName
	}
	return ""
}

func (m *OspfShDatabase_KEYS) GetAreaId() uint32 {
	if m != nil {
		return m.AreaId
	}
	return 0
}

func (m *OspfShDatabase_KEYS) GetAreaId_1() uint32 {
	if m != nil {
		return m.AreaId_1
	}
	return 0
}

func (m *OspfShDatabase_KEYS) GetLsType() string {
	if m != nil {
		return m.LsType
	}
	return ""
}

func (m *OspfShDatabase_KEYS) GetLsId() string {
	if m != nil {
		return m.LsId
	}
	return ""
}

func (m *OspfShDatabase_KEYS) GetAdvertisingRouter() string {
	if m != nil {
		return m.AdvertisingRouter
	}
	return ""
}

func (m *OspfShDatabase_KEYS) GetInterfaceName() string {
	if m != nil {
		return m.InterfaceName
	}
	return ""
}

type OspfShDbHeader struct {
	LsType               string   `protobuf:"bytes,1,opt,name=ls_type,json=lsType,proto3" json:"ls_type,omitempty"`
	Lsid                 string   `protobuf:"bytes,2,opt,name=lsid,proto3" json:"lsid,omitempty"`
	AdvertisingRouter    string   `protobuf:"bytes,3,opt,name=advertising_router,json=advertisingRouter,proto3" json:"advertising_router,omitempty"`
	LsaAreaId            string   `protobuf:"bytes,4,opt,name=lsa_area_id,json=lsaAreaId,proto3" json:"lsa_area_id,omitempty"`
	LsaAge               uint32   `protobuf:"varint,5,opt,name=lsa_age,json=lsaAge,proto3" json:"lsa_age,omitempty"`
	DnAgeLsa             bool     `protobuf:"varint,6,opt,name=dn_age_lsa,json=dnAgeLsa,proto3" json:"dn_age_lsa,omitempty"`
	Nsf                  bool     `protobuf:"varint,7,opt,name=nsf,proto3" json:"nsf,omitempty"`
	SequenceNumber       uint32   `protobuf:"varint,8,opt,name=sequence_number,json=sequenceNumber,proto3" json:"sequence_number,omitempty"`
	Checksum             uint32   `protobuf:"varint,9,opt,name=checksum,proto3" json:"checksum,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OspfShDbHeader) Reset()         { *m = OspfShDbHeader{} }
func (m *OspfShDbHeader) String() string { return proto.CompactTextString(m) }
func (*OspfShDbHeader) ProtoMessage()    {}
func (*OspfShDbHeader) Descriptor() ([]byte, []int) {
	return fileDescriptor_b9f78b00611f1589, []int{1}
}

func (m *OspfShDbHeader) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OspfShDbHeader.Unmarshal(m, b)
}
func (m *OspfShDbHeader) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OspfShDbHeader.Marshal(b, m, deterministic)
}
func (m *OspfShDbHeader) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OspfShDbHeader.Merge(m, src)
}
func (m *OspfShDbHeader) XXX_Size() int {
	return xxx_messageInfo_OspfShDbHeader.Size(m)
}
func (m *OspfShDbHeader) XXX_DiscardUnknown() {
	xxx_messageInfo_OspfShDbHeader.DiscardUnknown(m)
}

var xxx_messageInfo_OspfShDbHeader proto.InternalMessageInfo

func (m *OspfShDbHeader) GetLsType() string {
	if m != nil {
		return m.LsType
	}
	return ""
}

func (m *OspfShDbHeader) GetLsid() string {
	if m != nil {
		return m.Lsid
	}
	return ""
}

func (m *OspfShDbHeader) GetAdvertisingRouter() string {
	if m != nil {
		return m.AdvertisingRouter
	}
	return ""
}

func (m *OspfShDbHeader) GetLsaAreaId() string {
	if m != nil {
		return m.LsaAreaId
	}
	return ""
}

func (m *OspfShDbHeader) GetLsaAge() uint32 {
	if m != nil {
		return m.LsaAge
	}
	return 0
}

func (m *OspfShDbHeader) GetDnAgeLsa() bool {
	if m != nil {
		return m.DnAgeLsa
	}
	return false
}

func (m *OspfShDbHeader) GetNsf() bool {
	if m != nil {
		return m.Nsf
	}
	return false
}

func (m *OspfShDbHeader) GetSequenceNumber() uint32 {
	if m != nil {
		return m.SequenceNumber
	}
	return 0
}

func (m *OspfShDbHeader) GetChecksum() uint32 {
	if m != nil {
		return m.Checksum
	}
	return 0
}

type OspfShDatabase struct {
	LsaHeader            *OspfShDbHeader `protobuf:"bytes,50,opt,name=lsa_header,json=lsaHeader,proto3" json:"lsa_header,omitempty"`
	ExternalTag          uint32          `protobuf:"varint,51,opt,name=external_tag,json=externalTag,proto3" json:"external_tag,omitempty"`
	LinkCount            uint32          `protobuf:"varint,52,opt,name=link_count,json=linkCount,proto3" json:"link_count,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *OspfShDatabase) Reset()         { *m = OspfShDatabase{} }
func (m *OspfShDatabase) String() string { return proto.CompactTextString(m) }
func (*OspfShDatabase) ProtoMessage()    {}
func (*OspfShDatabase) Descriptor() ([]byte, []int) {
	return fileDescriptor_b9f78b00611f1589, []int{2}
}

func (m *OspfShDatabase) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OspfShDatabase.Unmarshal(m, b)
}
func (m *OspfShDatabase) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OspfShDatabase.Marshal(b, m, deterministic)
}
func (m *OspfShDatabase) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OspfShDatabase.Merge(m, src)
}
func (m *OspfShDatabase) XXX_Size() int {
	return xxx_messageInfo_OspfShDatabase.Size(m)
}
func (m *OspfShDatabase) XXX_DiscardUnknown() {
	xxx_messageInfo_OspfShDatabase.DiscardUnknown(m)
}

var xxx_messageInfo_OspfShDatabase proto.InternalMessageInfo

func (m *OspfShDatabase) GetLsaHeader() *OspfShDbHeader {
	if m != nil {
		return m.LsaHeader
	}
	return nil
}

func (m *OspfShDatabase) GetExternalTag() uint32 {
	if m != nil {
		return m.ExternalTag
	}
	return 0
}

func (m *OspfShDatabase) GetLinkCount() uint32 {
	if m != nil {
		return m.LinkCount
	}
	return 0
}

func init() {
	proto.RegisterType((*OspfShDatabase_KEYS)(nil), "cisco_ios_xr_ipv4_ospf_oper.ospf.processes.process.vrfs.vrf.database.database_areas.database_area.lsa_summaries.lsa_summary.ospf_sh_database_KEYS")
	proto.RegisterType((*OspfShDbHeader)(nil), "cisco_ios_xr_ipv4_ospf_oper.ospf.processes.process.vrfs.vrf.database.database_areas.database_area.lsa_summaries.lsa_summary.ospf_sh_db_header")
	proto.RegisterType((*OspfShDatabase)(nil), "cisco_ios_xr_ipv4_ospf_oper.ospf.processes.process.vrfs.vrf.database.database_areas.database_area.lsa_summaries.lsa_summary.ospf_sh_database")
}

func init() { proto.RegisterFile("ospf_sh_database.proto", fileDescriptor_b9f78b00611f1589) }

var fileDescriptor_b9f78b00611f1589 = []byte{
	// 500 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xc4, 0x53, 0xcd, 0x6e, 0xd3, 0x5c,
	0x10, 0x95, 0xd3, 0x34, 0x71, 0x26, 0x4d, 0xbf, 0xf6, 0x7e, 0x02, 0x4c, 0x05, 0x28, 0x8d, 0x84,
	0xc8, 0x06, 0x4b, 0xfd, 0x79, 0x81, 0x08, 0x21, 0x51, 0x81, 0xba, 0x30, 0xdd, 0xb0, 0xba, 0x9a,
	0xd8, 0x63, 0xc7, 0xaa, 0xff, 0xb8, 0x63, 0x47, 0x8d, 0x58, 0xb3, 0xed, 0x1b, 0xf0, 0x0a, 0x3c,
	0x23, 0xba, 0xe3, 0x24, 0x4a, 0x8b, 0xba, 0x66, 0x13, 0xcd, 0x9c, 0x73, 0x72, 0xe7, 0xdc, 0x33,
	0xd7, 0xf0, 0xbc, 0xe4, 0x2a, 0xd6, 0xbc, 0xd0, 0x11, 0xd6, 0x38, 0x47, 0x26, 0xbf, 0x32, 0x65,
	0x5d, 0xaa, 0x1f, 0x61, 0xca, 0x61, 0xa9, 0xd3, 0x92, 0xf5, 0x9d, 0xd1, 0x69, 0xb5, 0xbc, 0xd4,
	0xa2, 0x2c, 0x2b, 0x32, 0xbe, 0xad, 0xac, 0x2e, 0x24, 0x66, 0xe2, 0x4d, 0xe5, 0x2f, 0x4d, 0x2c,
	0x3f, 0xfe, 0xf6, 0xac, 0x4d, 0xa1, 0xd1, 0x10, 0xf2, 0xc3, 0xd6, 0xcf, 0x18, 0x35, 0x37, 0x79,
	0x8e, 0x26, 0x25, 0xde, 0xe9, 0x56, 0x93, 0xfb, 0x0e, 0x3c, 0x7b, 0xec, 0x4b, 0x7f, 0xfe, 0xf8,
	0xed, 0xab, 0x3a, 0x85, 0x83, 0xf5, 0x34, 0x5d, 0x60, 0x4e, 0x9e, 0x33, 0x76, 0xa6, 0x83, 0x60,
	0xb8, 0xc6, 0xae, 0x31, 0x27, 0xf5, 0x12, 0xdc, 0xa5, 0x89, 0x5b, 0xba, 0x23, 0x74, 0x7f, 0x69,
	0x62, 0xa1, 0x5e, 0x40, 0xdf, 0x4e, 0xd6, 0x69, 0xe4, 0xed, 0x8d, 0x9d, 0xe9, 0x28, 0xe8, 0xd9,
	0xf6, 0x2a, 0x52, 0x27, 0x30, 0x58, 0x13, 0xfa, 0xcc, 0xeb, 0x0a, 0xd5, 0x6f, 0xa9, 0x33, 0xfb,
	0xa7, 0x8c, 0x75, 0xbd, 0xaa, 0xc8, 0xdb, 0x97, 0xe3, 0x7a, 0x19, 0xdf, 0xac, 0x2a, 0x52, 0xff,
	0xc3, 0x7e, 0xc6, 0xf6, 0xac, 0x9e, 0xc0, 0xdd, 0x8c, 0xaf, 0x22, 0xf5, 0x1e, 0x14, 0x46, 0x4b,
	0x32, 0x75, 0xca, 0x69, 0x91, 0x68, 0x53, 0x36, 0x35, 0x19, 0xaf, 0x2f, 0x8a, 0xe3, 0x1d, 0x26,
	0x10, 0x42, 0xbd, 0x85, 0xc3, 0xb4, 0xa8, 0xc9, 0xc4, 0x18, 0x52, 0x6b, 0xd9, 0x15, 0xe9, 0x68,
	0x8b, 0x5a, 0xe3, 0x93, 0x5f, 0x1d, 0x38, 0xde, 0x06, 0x32, 0xd7, 0x0b, 0xc2, 0x88, 0xcc, 0xae,
	0x33, 0xe7, 0x81, 0x33, 0x05, 0xdd, 0x8c, 0xd3, 0x68, 0x7d, 0x7d, 0xa9, 0x9f, 0x30, 0xb6, 0xf7,
	0x94, 0xb1, 0x37, 0x30, 0xb4, 0x1b, 0xd9, 0xc4, 0xd5, 0x15, 0xdd, 0x20, 0x63, 0x9c, 0xb5, 0x89,
	0xc9, 0x6c, 0xd4, 0x98, 0xb4, 0xa9, 0x8c, 0xec, 0x6c, 0x9c, 0x25, 0xa4, 0x5e, 0x01, 0x44, 0x85,
	0xc5, 0x75, 0xc6, 0x28, 0xd1, 0xb8, 0x81, 0x1b, 0x15, 0xb3, 0x84, 0xbe, 0x30, 0xaa, 0x23, 0xd8,
	0x2b, 0x38, 0x96, 0x3c, 0xdc, 0xc0, 0x96, 0xea, 0x1d, 0xfc, 0xc7, 0xf4, 0xbd, 0xa1, 0xc2, 0x06,
	0xd0, 0xe4, 0x73, 0x32, 0x12, 0xc1, 0x28, 0x38, 0xdc, 0xc0, 0xd7, 0x82, 0xaa, 0x13, 0x70, 0xc3,
	0x05, 0x85, 0xb7, 0xdc, 0xe4, 0xde, 0x40, 0x14, 0xdb, 0x7e, 0xf2, 0xb3, 0x03, 0x47, 0x8f, 0x1f,
	0x8c, 0xfa, 0xed, 0x00, 0x58, 0x8f, 0x6d, 0x5a, 0xde, 0xf9, 0xd8, 0x99, 0x0e, 0xcf, 0xef, 0x1d,
	0xff, 0x1f, 0xbe, 0x6c, 0xff, 0xaf, 0x25, 0x4a, 0xa6, 0x9f, 0xda, 0x7d, 0x9e, 0xc2, 0x01, 0xdd,
	0xd5, 0x64, 0x0a, 0xcc, 0x74, 0x8d, 0x89, 0x77, 0x21, 0xb7, 0x1c, 0x6e, 0xb0, 0x1b, 0x4c, 0xd4,
	0x6b, 0x80, 0x2c, 0x2d, 0x6e, 0x75, 0x58, 0x36, 0x45, 0xed, 0x5d, 0x8a, 0x60, 0x60, 0x91, 0x0f,
	0x16, 0x98, 0xf7, 0xe4, 0xe3, 0xbd, 0xf8, 0x13, 0x00, 0x00, 0xff, 0xff, 0xee, 0xe8, 0x99, 0xf4,
	0xd6, 0x03, 0x00, 0x00,
}
