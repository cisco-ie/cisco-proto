/*
Copyright 2019 Cisco Systems

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: ospf_sh_redist.proto

package cisco_ios_xr_ipv4_ospf_oper_ospf_processes_process_vrfs_vrf_process_information_redistributions_redistribution

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type OspfShRedist_KEYS struct {
	ProcessName          string   `protobuf:"bytes,1,opt,name=process_name,json=processName,proto3" json:"process_name,omitempty"`
	VrfName              string   `protobuf:"bytes,2,opt,name=vrf_name,json=vrfName,proto3" json:"vrf_name,omitempty"`
	ProtocolName         string   `protobuf:"bytes,3,opt,name=protocol_name,json=protocolName,proto3" json:"protocol_name,omitempty"`
	ProcessName_1        string   `protobuf:"bytes,4,opt,name=process_name_1,json=processName1,proto3" json:"process_name_1,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OspfShRedist_KEYS) Reset()         { *m = OspfShRedist_KEYS{} }
func (m *OspfShRedist_KEYS) String() string { return proto.CompactTextString(m) }
func (*OspfShRedist_KEYS) ProtoMessage()    {}
func (*OspfShRedist_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_128e14098b86f6e9, []int{0}
}

func (m *OspfShRedist_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OspfShRedist_KEYS.Unmarshal(m, b)
}
func (m *OspfShRedist_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OspfShRedist_KEYS.Marshal(b, m, deterministic)
}
func (m *OspfShRedist_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OspfShRedist_KEYS.Merge(m, src)
}
func (m *OspfShRedist_KEYS) XXX_Size() int {
	return xxx_messageInfo_OspfShRedist_KEYS.Size(m)
}
func (m *OspfShRedist_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_OspfShRedist_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_OspfShRedist_KEYS proto.InternalMessageInfo

func (m *OspfShRedist_KEYS) GetProcessName() string {
	if m != nil {
		return m.ProcessName
	}
	return ""
}

func (m *OspfShRedist_KEYS) GetVrfName() string {
	if m != nil {
		return m.VrfName
	}
	return ""
}

func (m *OspfShRedist_KEYS) GetProtocolName() string {
	if m != nil {
		return m.ProtocolName
	}
	return ""
}

func (m *OspfShRedist_KEYS) GetProcessName_1() string {
	if m != nil {
		return m.ProcessName_1
	}
	return ""
}

type OspfShRedistProto struct {
	ProtocolType         string   `protobuf:"bytes,1,opt,name=protocol_type,json=protocolType,proto3" json:"protocol_type,omitempty"`
	IsisInstanceId       string   `protobuf:"bytes,2,opt,name=isis_instance_id,json=isisInstanceId,proto3" json:"isis_instance_id,omitempty"`
	OspfProcessId        string   `protobuf:"bytes,3,opt,name=ospf_process_id,json=ospfProcessId,proto3" json:"ospf_process_id,omitempty"`
	BgpAsNumber          string   `protobuf:"bytes,4,opt,name=bgp_as_number,json=bgpAsNumber,proto3" json:"bgp_as_number,omitempty"`
	EigrpAsNumber        string   `protobuf:"bytes,5,opt,name=eigrp_as_number,json=eigrpAsNumber,proto3" json:"eigrp_as_number,omitempty"`
	ConnectedInstance    string   `protobuf:"bytes,6,opt,name=connected_instance,json=connectedInstance,proto3" json:"connected_instance,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OspfShRedistProto) Reset()         { *m = OspfShRedistProto{} }
func (m *OspfShRedistProto) String() string { return proto.CompactTextString(m) }
func (*OspfShRedistProto) ProtoMessage()    {}
func (*OspfShRedistProto) Descriptor() ([]byte, []int) {
	return fileDescriptor_128e14098b86f6e9, []int{1}
}

func (m *OspfShRedistProto) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OspfShRedistProto.Unmarshal(m, b)
}
func (m *OspfShRedistProto) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OspfShRedistProto.Marshal(b, m, deterministic)
}
func (m *OspfShRedistProto) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OspfShRedistProto.Merge(m, src)
}
func (m *OspfShRedistProto) XXX_Size() int {
	return xxx_messageInfo_OspfShRedistProto.Size(m)
}
func (m *OspfShRedistProto) XXX_DiscardUnknown() {
	xxx_messageInfo_OspfShRedistProto.DiscardUnknown(m)
}

var xxx_messageInfo_OspfShRedistProto proto.InternalMessageInfo

func (m *OspfShRedistProto) GetProtocolType() string {
	if m != nil {
		return m.ProtocolType
	}
	return ""
}

func (m *OspfShRedistProto) GetIsisInstanceId() string {
	if m != nil {
		return m.IsisInstanceId
	}
	return ""
}

func (m *OspfShRedistProto) GetOspfProcessId() string {
	if m != nil {
		return m.OspfProcessId
	}
	return ""
}

func (m *OspfShRedistProto) GetBgpAsNumber() string {
	if m != nil {
		return m.BgpAsNumber
	}
	return ""
}

func (m *OspfShRedistProto) GetEigrpAsNumber() string {
	if m != nil {
		return m.EigrpAsNumber
	}
	return ""
}

func (m *OspfShRedistProto) GetConnectedInstance() string {
	if m != nil {
		return m.ConnectedInstance
	}
	return ""
}

type OspfShRedist struct {
	RedistributionProtocol *OspfShRedistProto `protobuf:"bytes,50,opt,name=redistribution_protocol,json=redistributionProtocol,proto3" json:"redistribution_protocol,omitempty"`
	MetricFlag             bool               `protobuf:"varint,51,opt,name=metric_flag,json=metricFlag,proto3" json:"metric_flag,omitempty"`
	Metric                 uint32             `protobuf:"varint,52,opt,name=metric,proto3" json:"metric,omitempty"`
	Classless              bool               `protobuf:"varint,53,opt,name=classless,proto3" json:"classless,omitempty"`
	NssaOnly               bool               `protobuf:"varint,54,opt,name=nssa_only,json=nssaOnly,proto3" json:"nssa_only,omitempty"`
	XXX_NoUnkeyedLiteral   struct{}           `json:"-"`
	XXX_unrecognized       []byte             `json:"-"`
	XXX_sizecache          int32              `json:"-"`
}

func (m *OspfShRedist) Reset()         { *m = OspfShRedist{} }
func (m *OspfShRedist) String() string { return proto.CompactTextString(m) }
func (*OspfShRedist) ProtoMessage()    {}
func (*OspfShRedist) Descriptor() ([]byte, []int) {
	return fileDescriptor_128e14098b86f6e9, []int{2}
}

func (m *OspfShRedist) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OspfShRedist.Unmarshal(m, b)
}
func (m *OspfShRedist) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OspfShRedist.Marshal(b, m, deterministic)
}
func (m *OspfShRedist) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OspfShRedist.Merge(m, src)
}
func (m *OspfShRedist) XXX_Size() int {
	return xxx_messageInfo_OspfShRedist.Size(m)
}
func (m *OspfShRedist) XXX_DiscardUnknown() {
	xxx_messageInfo_OspfShRedist.DiscardUnknown(m)
}

var xxx_messageInfo_OspfShRedist proto.InternalMessageInfo

func (m *OspfShRedist) GetRedistributionProtocol() *OspfShRedistProto {
	if m != nil {
		return m.RedistributionProtocol
	}
	return nil
}

func (m *OspfShRedist) GetMetricFlag() bool {
	if m != nil {
		return m.MetricFlag
	}
	return false
}

func (m *OspfShRedist) GetMetric() uint32 {
	if m != nil {
		return m.Metric
	}
	return 0
}

func (m *OspfShRedist) GetClassless() bool {
	if m != nil {
		return m.Classless
	}
	return false
}

func (m *OspfShRedist) GetNssaOnly() bool {
	if m != nil {
		return m.NssaOnly
	}
	return false
}

func init() {
	proto.RegisterType((*OspfShRedist_KEYS)(nil), "cisco_ios_xr_ipv4_ospf_oper.ospf.processes.process.vrfs.vrf.process_information.redistributions.redistribution.ospf_sh_redist_KEYS")
	proto.RegisterType((*OspfShRedistProto)(nil), "cisco_ios_xr_ipv4_ospf_oper.ospf.processes.process.vrfs.vrf.process_information.redistributions.redistribution.ospf_sh_redist_proto")
	proto.RegisterType((*OspfShRedist)(nil), "cisco_ios_xr_ipv4_ospf_oper.ospf.processes.process.vrfs.vrf.process_information.redistributions.redistribution.ospf_sh_redist")
}

func init() { proto.RegisterFile("ospf_sh_redist.proto", fileDescriptor_128e14098b86f6e9) }

var fileDescriptor_128e14098b86f6e9 = []byte{
	// 440 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x92, 0xcf, 0x8e, 0xd3, 0x30,
	0x10, 0xc6, 0x95, 0x02, 0xa5, 0x9d, 0x6e, 0x0b, 0x18, 0xb4, 0x04, 0x81, 0x44, 0x29, 0x08, 0xe5,
	0x42, 0xa4, 0xfd, 0x03, 0x77, 0x0e, 0x20, 0x55, 0x48, 0xcb, 0xaa, 0x70, 0xe1, 0x34, 0x72, 0x1c,
	0x27, 0x58, 0x4a, 0xec, 0xc8, 0x93, 0xad, 0xe8, 0x9d, 0x03, 0x4f, 0xc1, 0xa3, 0x70, 0xe3, 0xbd,
	0x50, 0xec, 0x38, 0xb4, 0x2b, 0xce, 0x5c, 0x2a, 0xcf, 0xef, 0xfb, 0x3a, 0xf3, 0x79, 0x1c, 0x78,
	0x60, 0xa8, 0x29, 0x90, 0xbe, 0xa2, 0x95, 0xb9, 0xa2, 0x36, 0x6d, 0xac, 0x69, 0x0d, 0xd3, 0x42,
	0x91, 0x30, 0xa8, 0x0c, 0xe1, 0x37, 0x8b, 0xaa, 0xd9, 0x9e, 0xa3, 0xf3, 0x99, 0x46, 0xda, 0xb4,
	0x3b, 0x75, 0x3e, 0x21, 0x89, 0x24, 0x85, 0x53, 0xba, 0xb5, 0x85, 0xfb, 0x09, 0x00, 0x95, 0x2e,
	0x8c, 0xad, 0x79, 0xab, 0x8c, 0x4e, 0x7d, 0x77, 0xab, 0xb2, 0xab, 0xae, 0xa4, 0x6b, 0xf5, 0xea,
	0x67, 0x04, 0xf7, 0x0f, 0x83, 0xe0, 0x87, 0x77, 0x5f, 0x3e, 0xb1, 0x67, 0x70, 0x14, 0xba, 0x69,
	0x5e, 0xcb, 0x38, 0x5a, 0x46, 0xc9, 0x74, 0x33, 0xeb, 0xd9, 0x05, 0xaf, 0x25, 0x7b, 0x04, 0x93,
	0xad, 0x2d, 0xbc, 0x3c, 0x72, 0xf2, 0xed, 0xad, 0x2d, 0x9c, 0xf4, 0x1c, 0xe6, 0xee, 0x3a, 0xc2,
	0x54, 0x5e, 0xbf, 0xe1, 0xf4, 0xa3, 0x00, 0x9d, 0xe9, 0x05, 0x2c, 0xf6, 0x47, 0xe0, 0x49, 0x7c,
	0x73, 0x70, 0x85, 0x21, 0x27, 0xab, 0x1f, 0xa3, 0xeb, 0x9b, 0x42, 0xbf, 0xa9, 0xfd, 0x19, 0xed,
	0xae, 0x09, 0x11, 0x87, 0x19, 0x9f, 0x77, 0x8d, 0x64, 0x09, 0xdc, 0x55, 0xa4, 0xba, 0x8d, 0x50,
	0xcb, 0xb5, 0x90, 0xa8, 0xf2, 0x3e, 0xeb, 0xa2, 0xe3, 0xeb, 0x1e, 0xaf, 0x73, 0xf6, 0x12, 0xee,
	0xb8, 0x31, 0xc3, 0x0e, 0xf3, 0x3e, 0xf4, 0xbc, 0xc3, 0x97, 0x9e, 0xae, 0x73, 0xb6, 0x82, 0x79,
	0x56, 0x36, 0xc8, 0x09, 0xf5, 0x55, 0x9d, 0x49, 0xdb, 0x87, 0x9e, 0x65, 0x65, 0xf3, 0x96, 0x2e,
	0x1c, 0xea, 0x7a, 0x49, 0x55, 0xda, 0x7d, 0xd7, 0x2d, 0xdf, 0xcb, 0xe1, 0xc1, 0xf7, 0x0a, 0x98,
	0x30, 0x5a, 0x4b, 0xd1, 0xca, 0x7c, 0x88, 0x18, 0x8f, 0x9d, 0xf5, 0xde, 0xa0, 0x84, 0x90, 0xab,
	0xdf, 0x23, 0x58, 0x1c, 0xae, 0x82, 0xfd, 0x8a, 0xe0, 0xe1, 0xe1, 0x8b, 0x62, 0xb8, 0x7f, 0x7c,
	0xba, 0x8c, 0x92, 0xd9, 0xe9, 0xf7, 0x28, 0xfd, 0xbf, 0x9f, 0x54, 0xfa, 0xaf, 0xd7, 0xda, 0x1c,
	0x1f, 0x9a, 0x2e, 0xfb, 0x90, 0xec, 0x29, 0xcc, 0x6a, 0xd9, 0x5a, 0x25, 0xb0, 0xa8, 0x78, 0x19,
	0x9f, 0x2d, 0xa3, 0x64, 0xb2, 0x01, 0x8f, 0xde, 0x57, 0xbc, 0x64, 0xc7, 0x30, 0xf6, 0x55, 0x7c,
	0xbe, 0x8c, 0x92, 0xf9, 0xa6, 0xaf, 0xd8, 0x13, 0x98, 0x8a, 0x8a, 0x13, 0x55, 0x92, 0x28, 0x7e,
	0xed, 0xfe, 0xf6, 0x17, 0xb0, 0xc7, 0x30, 0xd5, 0x44, 0x1c, 0x8d, 0xae, 0x76, 0xf1, 0x1b, 0xa7,
	0x4e, 0x3a, 0xf0, 0x51, 0x57, 0xbb, 0x6c, 0xec, 0x22, 0x9d, 0xfd, 0x09, 0x00, 0x00, 0xff, 0xff,
	0x1a, 0x1a, 0x0e, 0xd1, 0x82, 0x03, 0x00, 0x00,
}
