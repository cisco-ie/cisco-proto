/*
Copyright 2019 Cisco Systems

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: ospf_sh_sham_links.proto

package cisco_ios_xr_ipv4_ospf_oper_ospf_processes_process_vrfs_vrf_interface_vrf_information_sham_links_sham_link

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type OspfShShamLinks_KEYS struct {
	ProcessName          string   `protobuf:"bytes,1,opt,name=process_name,json=processName,proto3" json:"process_name,omitempty"`
	VrfName              string   `protobuf:"bytes,2,opt,name=vrf_name,json=vrfName,proto3" json:"vrf_name,omitempty"`
	ShamLinkName         string   `protobuf:"bytes,3,opt,name=sham_link_name,json=shamLinkName,proto3" json:"sham_link_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OspfShShamLinks_KEYS) Reset()         { *m = OspfShShamLinks_KEYS{} }
func (m *OspfShShamLinks_KEYS) String() string { return proto.CompactTextString(m) }
func (*OspfShShamLinks_KEYS) ProtoMessage()    {}
func (*OspfShShamLinks_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_e1787917a16480c7, []int{0}
}

func (m *OspfShShamLinks_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OspfShShamLinks_KEYS.Unmarshal(m, b)
}
func (m *OspfShShamLinks_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OspfShShamLinks_KEYS.Marshal(b, m, deterministic)
}
func (m *OspfShShamLinks_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OspfShShamLinks_KEYS.Merge(m, src)
}
func (m *OspfShShamLinks_KEYS) XXX_Size() int {
	return xxx_messageInfo_OspfShShamLinks_KEYS.Size(m)
}
func (m *OspfShShamLinks_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_OspfShShamLinks_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_OspfShShamLinks_KEYS proto.InternalMessageInfo

func (m *OspfShShamLinks_KEYS) GetProcessName() string {
	if m != nil {
		return m.ProcessName
	}
	return ""
}

func (m *OspfShShamLinks_KEYS) GetVrfName() string {
	if m != nil {
		return m.VrfName
	}
	return ""
}

func (m *OspfShShamLinks_KEYS) GetShamLinkName() string {
	if m != nil {
		return m.ShamLinkName
	}
	return ""
}

type OspfShNeighborRetrans struct {
	DbdRetransmissionCount         uint32   `protobuf:"varint,1,opt,name=dbd_retransmission_count,json=dbdRetransmissionCount,proto3" json:"dbd_retransmission_count,omitempty"`
	DbdRetransmissionTotalCount    uint32   `protobuf:"varint,2,opt,name=dbd_retransmission_total_count,json=dbdRetransmissionTotalCount,proto3" json:"dbd_retransmission_total_count,omitempty"`
	AreaFloodingIndex              uint32   `protobuf:"varint,3,opt,name=area_flooding_index,json=areaFloodingIndex,proto3" json:"area_flooding_index,omitempty"`
	AsFloodIndex                   uint32   `protobuf:"varint,4,opt,name=as_flood_index,json=asFloodIndex,proto3" json:"as_flood_index,omitempty"`
	NeighborRetransmissionCount    uint32   `protobuf:"varint,5,opt,name=neighbor_retransmission_count,json=neighborRetransmissionCount,proto3" json:"neighbor_retransmission_count,omitempty"`
	NumberOfRetransmissions        uint32   `protobuf:"varint,6,opt,name=number_of_retransmissions,json=numberOfRetransmissions,proto3" json:"number_of_retransmissions,omitempty"`
	AreaFirstFloodInformation      uint32   `protobuf:"varint,7,opt,name=area_first_flood_information,json=areaFirstFloodInformation,proto3" json:"area_first_flood_information,omitempty"`
	AreaFirstFloodInformationIndex uint32   `protobuf:"varint,8,opt,name=area_first_flood_information_index,json=areaFirstFloodInformationIndex,proto3" json:"area_first_flood_information_index,omitempty"`
	AsFirstFloodInformation        uint32   `protobuf:"varint,9,opt,name=as_first_flood_information,json=asFirstFloodInformation,proto3" json:"as_first_flood_information,omitempty"`
	AsFirstFloodInformationIndex   uint32   `protobuf:"varint,10,opt,name=as_first_flood_information_index,json=asFirstFloodInformationIndex,proto3" json:"as_first_flood_information_index,omitempty"`
	AreaNextFloodInformation       uint32   `protobuf:"varint,11,opt,name=area_next_flood_information,json=areaNextFloodInformation,proto3" json:"area_next_flood_information,omitempty"`
	AreaNextFloodInformationIndex  uint32   `protobuf:"varint,12,opt,name=area_next_flood_information_index,json=areaNextFloodInformationIndex,proto3" json:"area_next_flood_information_index,omitempty"`
	AsNextFloodInformation         uint32   `protobuf:"varint,13,opt,name=as_next_flood_information,json=asNextFloodInformation,proto3" json:"as_next_flood_information,omitempty"`
	AsNextFloodInformationIndex    uint32   `protobuf:"varint,14,opt,name=as_next_flood_information_index,json=asNextFloodInformationIndex,proto3" json:"as_next_flood_information_index,omitempty"`
	LastRetransmissionLength       uint32   `protobuf:"varint,15,opt,name=last_retransmission_length,json=lastRetransmissionLength,proto3" json:"last_retransmission_length,omitempty"`
	MaximumRetransmissionLength    uint32   `protobuf:"varint,16,opt,name=maximum_retransmission_length,json=maximumRetransmissionLength,proto3" json:"maximum_retransmission_length,omitempty"`
	LastRetransmissionTime         uint32   `protobuf:"varint,17,opt,name=last_retransmission_time,json=lastRetransmissionTime,proto3" json:"last_retransmission_time,omitempty"`
	MaximumRetransmissionTime      uint32   `protobuf:"varint,18,opt,name=maximum_retransmission_time,json=maximumRetransmissionTime,proto3" json:"maximum_retransmission_time,omitempty"`
	LsaRetransmissionTimer         uint32   `protobuf:"varint,19,opt,name=lsa_retransmission_timer,json=lsaRetransmissionTimer,proto3" json:"lsa_retransmission_timer,omitempty"`
	XXX_NoUnkeyedLiteral           struct{} `json:"-"`
	XXX_unrecognized               []byte   `json:"-"`
	XXX_sizecache                  int32    `json:"-"`
}

func (m *OspfShNeighborRetrans) Reset()         { *m = OspfShNeighborRetrans{} }
func (m *OspfShNeighborRetrans) String() string { return proto.CompactTextString(m) }
func (*OspfShNeighborRetrans) ProtoMessage()    {}
func (*OspfShNeighborRetrans) Descriptor() ([]byte, []int) {
	return fileDescriptor_e1787917a16480c7, []int{1}
}

func (m *OspfShNeighborRetrans) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OspfShNeighborRetrans.Unmarshal(m, b)
}
func (m *OspfShNeighborRetrans) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OspfShNeighborRetrans.Marshal(b, m, deterministic)
}
func (m *OspfShNeighborRetrans) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OspfShNeighborRetrans.Merge(m, src)
}
func (m *OspfShNeighborRetrans) XXX_Size() int {
	return xxx_messageInfo_OspfShNeighborRetrans.Size(m)
}
func (m *OspfShNeighborRetrans) XXX_DiscardUnknown() {
	xxx_messageInfo_OspfShNeighborRetrans.DiscardUnknown(m)
}

var xxx_messageInfo_OspfShNeighborRetrans proto.InternalMessageInfo

func (m *OspfShNeighborRetrans) GetDbdRetransmissionCount() uint32 {
	if m != nil {
		return m.DbdRetransmissionCount
	}
	return 0
}

func (m *OspfShNeighborRetrans) GetDbdRetransmissionTotalCount() uint32 {
	if m != nil {
		return m.DbdRetransmissionTotalCount
	}
	return 0
}

func (m *OspfShNeighborRetrans) GetAreaFloodingIndex() uint32 {
	if m != nil {
		return m.AreaFloodingIndex
	}
	return 0
}

func (m *OspfShNeighborRetrans) GetAsFloodIndex() uint32 {
	if m != nil {
		return m.AsFloodIndex
	}
	return 0
}

func (m *OspfShNeighborRetrans) GetNeighborRetransmissionCount() uint32 {
	if m != nil {
		return m.NeighborRetransmissionCount
	}
	return 0
}

func (m *OspfShNeighborRetrans) GetNumberOfRetransmissions() uint32 {
	if m != nil {
		return m.NumberOfRetransmissions
	}
	return 0
}

func (m *OspfShNeighborRetrans) GetAreaFirstFloodInformation() uint32 {
	if m != nil {
		return m.AreaFirstFloodInformation
	}
	return 0
}

func (m *OspfShNeighborRetrans) GetAreaFirstFloodInformationIndex() uint32 {
	if m != nil {
		return m.AreaFirstFloodInformationIndex
	}
	return 0
}

func (m *OspfShNeighborRetrans) GetAsFirstFloodInformation() uint32 {
	if m != nil {
		return m.AsFirstFloodInformation
	}
	return 0
}

func (m *OspfShNeighborRetrans) GetAsFirstFloodInformationIndex() uint32 {
	if m != nil {
		return m.AsFirstFloodInformationIndex
	}
	return 0
}

func (m *OspfShNeighborRetrans) GetAreaNextFloodInformation() uint32 {
	if m != nil {
		return m.AreaNextFloodInformation
	}
	return 0
}

func (m *OspfShNeighborRetrans) GetAreaNextFloodInformationIndex() uint32 {
	if m != nil {
		return m.AreaNextFloodInformationIndex
	}
	return 0
}

func (m *OspfShNeighborRetrans) GetAsNextFloodInformation() uint32 {
	if m != nil {
		return m.AsNextFloodInformation
	}
	return 0
}

func (m *OspfShNeighborRetrans) GetAsNextFloodInformationIndex() uint32 {
	if m != nil {
		return m.AsNextFloodInformationIndex
	}
	return 0
}

func (m *OspfShNeighborRetrans) GetLastRetransmissionLength() uint32 {
	if m != nil {
		return m.LastRetransmissionLength
	}
	return 0
}

func (m *OspfShNeighborRetrans) GetMaximumRetransmissionLength() uint32 {
	if m != nil {
		return m.MaximumRetransmissionLength
	}
	return 0
}

func (m *OspfShNeighborRetrans) GetLastRetransmissionTime() uint32 {
	if m != nil {
		return m.LastRetransmissionTime
	}
	return 0
}

func (m *OspfShNeighborRetrans) GetMaximumRetransmissionTime() uint32 {
	if m != nil {
		return m.MaximumRetransmissionTime
	}
	return 0
}

func (m *OspfShNeighborRetrans) GetLsaRetransmissionTimer() uint32 {
	if m != nil {
		return m.LsaRetransmissionTimer
	}
	return 0
}

type OspfShSlinkNeighbor struct {
	ShamLinkSuppressHello  bool                   `protobuf:"varint,1,opt,name=sham_link_suppress_hello,json=shamLinkSuppressHello,proto3" json:"sham_link_suppress_hello,omitempty"`
	ShamLinkState          string                 `protobuf:"bytes,2,opt,name=sham_link_state,json=shamLinkState,proto3" json:"sham_link_state,omitempty"`
	ShamLinkRetransmissoin *OspfShNeighborRetrans `protobuf:"bytes,3,opt,name=sham_link_retransmissoin,json=shamLinkRetransmissoin,proto3" json:"sham_link_retransmissoin,omitempty"`
	XXX_NoUnkeyedLiteral   struct{}               `json:"-"`
	XXX_unrecognized       []byte                 `json:"-"`
	XXX_sizecache          int32                  `json:"-"`
}

func (m *OspfShSlinkNeighbor) Reset()         { *m = OspfShSlinkNeighbor{} }
func (m *OspfShSlinkNeighbor) String() string { return proto.CompactTextString(m) }
func (*OspfShSlinkNeighbor) ProtoMessage()    {}
func (*OspfShSlinkNeighbor) Descriptor() ([]byte, []int) {
	return fileDescriptor_e1787917a16480c7, []int{2}
}

func (m *OspfShSlinkNeighbor) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OspfShSlinkNeighbor.Unmarshal(m, b)
}
func (m *OspfShSlinkNeighbor) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OspfShSlinkNeighbor.Marshal(b, m, deterministic)
}
func (m *OspfShSlinkNeighbor) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OspfShSlinkNeighbor.Merge(m, src)
}
func (m *OspfShSlinkNeighbor) XXX_Size() int {
	return xxx_messageInfo_OspfShSlinkNeighbor.Size(m)
}
func (m *OspfShSlinkNeighbor) XXX_DiscardUnknown() {
	xxx_messageInfo_OspfShSlinkNeighbor.DiscardUnknown(m)
}

var xxx_messageInfo_OspfShSlinkNeighbor proto.InternalMessageInfo

func (m *OspfShSlinkNeighbor) GetShamLinkSuppressHello() bool {
	if m != nil {
		return m.ShamLinkSuppressHello
	}
	return false
}

func (m *OspfShSlinkNeighbor) GetShamLinkState() string {
	if m != nil {
		return m.ShamLinkState
	}
	return ""
}

func (m *OspfShSlinkNeighbor) GetShamLinkRetransmissoin() *OspfShNeighborRetrans {
	if m != nil {
		return m.ShamLinkRetransmissoin
	}
	return nil
}

type OspfShShamLinks struct {
	ShamLinkNameXr                 string               `protobuf:"bytes,50,opt,name=sham_link_name_xr,json=shamLinkNameXr,proto3" json:"sham_link_name_xr,omitempty"`
	ShamLinkNeighborId             string               `protobuf:"bytes,51,opt,name=sham_link_neighbor_id,json=shamLinkNeighborId,proto3" json:"sham_link_neighbor_id,omitempty"`
	ShamLinkSourceAddress          string               `protobuf:"bytes,52,opt,name=sham_link_source_address,json=shamLinkSourceAddress,proto3" json:"sham_link_source_address,omitempty"`
	ShamLinkDestAddress            string               `protobuf:"bytes,53,opt,name=sham_link_dest_address,json=shamLinkDestAddress,proto3" json:"sham_link_dest_address,omitempty"`
	ShamLinkState                  string               `protobuf:"bytes,54,opt,name=sham_link_state,json=shamLinkState,proto3" json:"sham_link_state,omitempty"`
	ShamLinkDemandCircuit          bool                 `protobuf:"varint,55,opt,name=sham_link_demand_circuit,json=shamLinkDemandCircuit,proto3" json:"sham_link_demand_circuit,omitempty"`
	ShamLinkDcBitlessLsa           uint32               `protobuf:"varint,56,opt,name=sham_link_dc_bitless_lsa,json=shamLinkDcBitlessLsa,proto3" json:"sham_link_dc_bitless_lsa,omitempty"`
	ShamLinkIfindex                uint32               `protobuf:"varint,57,opt,name=sham_link_ifindex,json=shamLinkIfindex,proto3" json:"sham_link_ifindex,omitempty"`
	ShamLinkArea                   string               `protobuf:"bytes,58,opt,name=sham_link_area,json=shamLinkArea,proto3" json:"sham_link_area,omitempty"`
	ShamLinkCost                   uint32               `protobuf:"varint,59,opt,name=sham_link_cost,json=shamLinkCost,proto3" json:"sham_link_cost,omitempty"`
	ShamLinkTransmissionDelay      uint32               `protobuf:"varint,60,opt,name=sham_link_transmission_delay,json=shamLinkTransmissionDelay,proto3" json:"sham_link_transmission_delay,omitempty"`
	ShamLinkHelloInterval          uint32               `protobuf:"varint,61,opt,name=sham_link_hello_interval,json=shamLinkHelloInterval,proto3" json:"sham_link_hello_interval,omitempty"`
	ShamLinkHelloIntervalMs        uint32               `protobuf:"varint,62,opt,name=sham_link_hello_interval_ms,json=shamLinkHelloIntervalMs,proto3" json:"sham_link_hello_interval_ms,omitempty"`
	ShamLinkDeadInterval           uint32               `protobuf:"varint,63,opt,name=sham_link_dead_interval,json=shamLinkDeadInterval,proto3" json:"sham_link_dead_interval,omitempty"`
	ShamLinkWaitInterval           uint32               `protobuf:"varint,64,opt,name=sham_link_wait_interval,json=shamLinkWaitInterval,proto3" json:"sham_link_wait_interval,omitempty"`
	ShamLinkRetransmissionInterval uint32               `protobuf:"varint,65,opt,name=sham_link_retransmission_interval,json=shamLinkRetransmissionInterval,proto3" json:"sham_link_retransmission_interval,omitempty"`
	ShamLinkNextHello              uint32               `protobuf:"varint,66,opt,name=sham_link_next_hello,json=shamLinkNextHello,proto3" json:"sham_link_next_hello,omitempty"`
	ShamLinkNextHelloMs            uint32               `protobuf:"varint,67,opt,name=sham_link_next_hello_ms,json=shamLinkNextHelloMs,proto3" json:"sham_link_next_hello_ms,omitempty"`
	ShamLinkPassive                bool                 `protobuf:"varint,68,opt,name=sham_link_passive,json=shamLinkPassive,proto3" json:"sham_link_passive,omitempty"`
	ShamLinkAuthenticationType     string               `protobuf:"bytes,69,opt,name=sham_link_authentication_type,json=shamLinkAuthenticationType,proto3" json:"sham_link_authentication_type,omitempty"`
	ShamLinkYoungestMdKey          bool                 `protobuf:"varint,70,opt,name=sham_link_youngest_md_key,json=shamLinkYoungestMdKey,proto3" json:"sham_link_youngest_md_key,omitempty"`
	ShamLinkYoungestMdKeyId        uint32               `protobuf:"varint,71,opt,name=sham_link_youngest_md_key_id,json=shamLinkYoungestMdKeyId,proto3" json:"sham_link_youngest_md_key_id,omitempty"`
	ShamLinkOldMdKeyCount          uint32               `protobuf:"varint,72,opt,name=sham_link_old_md_key_count,json=shamLinkOldMdKeyCount,proto3" json:"sham_link_old_md_key_count,omitempty"`
	ShamLinkMdKey                  []uint32             `protobuf:"varint,73,rep,packed,name=sham_link_md_key,json=shamLinkMdKey,proto3" json:"sham_link_md_key,omitempty"`
	KeychainName                   string               `protobuf:"bytes,74,opt,name=keychain_name,json=keychainName,proto3" json:"keychain_name,omitempty"`
	ShamLinkKeychainKeyConf        bool                 `protobuf:"varint,75,opt,name=sham_link_keychain_key_conf,json=shamLinkKeychainKeyConf,proto3" json:"sham_link_keychain_key_conf,omitempty"`
	ShamLinkKeychainId             uint64               `protobuf:"varint,76,opt,name=sham_link_keychain_id,json=shamLinkKeychainId,proto3" json:"sham_link_keychain_id,omitempty"`
	ShamLinkKeychainAlg            string               `protobuf:"bytes,77,opt,name=sham_link_keychain_alg,json=shamLinkKeychainAlg,proto3" json:"sham_link_keychain_alg,omitempty"`
	ShamLinkNsfEnabled             bool                 `protobuf:"varint,78,opt,name=sham_link_nsf_enabled,json=shamLinkNsfEnabled,proto3" json:"sham_link_nsf_enabled,omitempty"`
	ShamLinkNsf                    bool                 `protobuf:"varint,79,opt,name=sham_link_nsf,json=shamLinkNsf,proto3" json:"sham_link_nsf,omitempty"`
	ShamLinkLastNsf                uint32               `protobuf:"varint,80,opt,name=sham_link_last_nsf,json=shamLinkLastNsf,proto3" json:"sham_link_last_nsf,omitempty"`
	ShamLinkNeighbor               *OspfShSlinkNeighbor `protobuf:"bytes,81,opt,name=sham_link_neighbor,json=shamLinkNeighbor,proto3" json:"sham_link_neighbor,omitempty"`
	XXX_NoUnkeyedLiteral           struct{}             `json:"-"`
	XXX_unrecognized               []byte               `json:"-"`
	XXX_sizecache                  int32                `json:"-"`
}

func (m *OspfShShamLinks) Reset()         { *m = OspfShShamLinks{} }
func (m *OspfShShamLinks) String() string { return proto.CompactTextString(m) }
func (*OspfShShamLinks) ProtoMessage()    {}
func (*OspfShShamLinks) Descriptor() ([]byte, []int) {
	return fileDescriptor_e1787917a16480c7, []int{3}
}

func (m *OspfShShamLinks) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OspfShShamLinks.Unmarshal(m, b)
}
func (m *OspfShShamLinks) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OspfShShamLinks.Marshal(b, m, deterministic)
}
func (m *OspfShShamLinks) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OspfShShamLinks.Merge(m, src)
}
func (m *OspfShShamLinks) XXX_Size() int {
	return xxx_messageInfo_OspfShShamLinks.Size(m)
}
func (m *OspfShShamLinks) XXX_DiscardUnknown() {
	xxx_messageInfo_OspfShShamLinks.DiscardUnknown(m)
}

var xxx_messageInfo_OspfShShamLinks proto.InternalMessageInfo

func (m *OspfShShamLinks) GetShamLinkNameXr() string {
	if m != nil {
		return m.ShamLinkNameXr
	}
	return ""
}

func (m *OspfShShamLinks) GetShamLinkNeighborId() string {
	if m != nil {
		return m.ShamLinkNeighborId
	}
	return ""
}

func (m *OspfShShamLinks) GetShamLinkSourceAddress() string {
	if m != nil {
		return m.ShamLinkSourceAddress
	}
	return ""
}

func (m *OspfShShamLinks) GetShamLinkDestAddress() string {
	if m != nil {
		return m.ShamLinkDestAddress
	}
	return ""
}

func (m *OspfShShamLinks) GetShamLinkState() string {
	if m != nil {
		return m.ShamLinkState
	}
	return ""
}

func (m *OspfShShamLinks) GetShamLinkDemandCircuit() bool {
	if m != nil {
		return m.ShamLinkDemandCircuit
	}
	return false
}

func (m *OspfShShamLinks) GetShamLinkDcBitlessLsa() uint32 {
	if m != nil {
		return m.ShamLinkDcBitlessLsa
	}
	return 0
}

func (m *OspfShShamLinks) GetShamLinkIfindex() uint32 {
	if m != nil {
		return m.ShamLinkIfindex
	}
	return 0
}

func (m *OspfShShamLinks) GetShamLinkArea() string {
	if m != nil {
		return m.ShamLinkArea
	}
	return ""
}

func (m *OspfShShamLinks) GetShamLinkCost() uint32 {
	if m != nil {
		return m.ShamLinkCost
	}
	return 0
}

func (m *OspfShShamLinks) GetShamLinkTransmissionDelay() uint32 {
	if m != nil {
		return m.ShamLinkTransmissionDelay
	}
	return 0
}

func (m *OspfShShamLinks) GetShamLinkHelloInterval() uint32 {
	if m != nil {
		return m.ShamLinkHelloInterval
	}
	return 0
}

func (m *OspfShShamLinks) GetShamLinkHelloIntervalMs() uint32 {
	if m != nil {
		return m.ShamLinkHelloIntervalMs
	}
	return 0
}

func (m *OspfShShamLinks) GetShamLinkDeadInterval() uint32 {
	if m != nil {
		return m.ShamLinkDeadInterval
	}
	return 0
}

func (m *OspfShShamLinks) GetShamLinkWaitInterval() uint32 {
	if m != nil {
		return m.ShamLinkWaitInterval
	}
	return 0
}

func (m *OspfShShamLinks) GetShamLinkRetransmissionInterval() uint32 {
	if m != nil {
		return m.ShamLinkRetransmissionInterval
	}
	return 0
}

func (m *OspfShShamLinks) GetShamLinkNextHello() uint32 {
	if m != nil {
		return m.ShamLinkNextHello
	}
	return 0
}

func (m *OspfShShamLinks) GetShamLinkNextHelloMs() uint32 {
	if m != nil {
		return m.ShamLinkNextHelloMs
	}
	return 0
}

func (m *OspfShShamLinks) GetShamLinkPassive() bool {
	if m != nil {
		return m.ShamLinkPassive
	}
	return false
}

func (m *OspfShShamLinks) GetShamLinkAuthenticationType() string {
	if m != nil {
		return m.ShamLinkAuthenticationType
	}
	return ""
}

func (m *OspfShShamLinks) GetShamLinkYoungestMdKey() bool {
	if m != nil {
		return m.ShamLinkYoungestMdKey
	}
	return false
}

func (m *OspfShShamLinks) GetShamLinkYoungestMdKeyId() uint32 {
	if m != nil {
		return m.ShamLinkYoungestMdKeyId
	}
	return 0
}

func (m *OspfShShamLinks) GetShamLinkOldMdKeyCount() uint32 {
	if m != nil {
		return m.ShamLinkOldMdKeyCount
	}
	return 0
}

func (m *OspfShShamLinks) GetShamLinkMdKey() []uint32 {
	if m != nil {
		return m.ShamLinkMdKey
	}
	return nil
}

func (m *OspfShShamLinks) GetKeychainName() string {
	if m != nil {
		return m.KeychainName
	}
	return ""
}

func (m *OspfShShamLinks) GetShamLinkKeychainKeyConf() bool {
	if m != nil {
		return m.ShamLinkKeychainKeyConf
	}
	return false
}

func (m *OspfShShamLinks) GetShamLinkKeychainId() uint64 {
	if m != nil {
		return m.ShamLinkKeychainId
	}
	return 0
}

func (m *OspfShShamLinks) GetShamLinkKeychainAlg() string {
	if m != nil {
		return m.ShamLinkKeychainAlg
	}
	return ""
}

func (m *OspfShShamLinks) GetShamLinkNsfEnabled() bool {
	if m != nil {
		return m.ShamLinkNsfEnabled
	}
	return false
}

func (m *OspfShShamLinks) GetShamLinkNsf() bool {
	if m != nil {
		return m.ShamLinkNsf
	}
	return false
}

func (m *OspfShShamLinks) GetShamLinkLastNsf() uint32 {
	if m != nil {
		return m.ShamLinkLastNsf
	}
	return 0
}

func (m *OspfShShamLinks) GetShamLinkNeighbor() *OspfShSlinkNeighbor {
	if m != nil {
		return m.ShamLinkNeighbor
	}
	return nil
}

func init() {
	proto.RegisterType((*OspfShShamLinks_KEYS)(nil), "cisco_ios_xr_ipv4_ospf_oper.ospf.processes.process.vrfs.vrf.interface_vrf_information.sham_links.sham_link.ospf_sh_sham_links_KEYS")
	proto.RegisterType((*OspfShNeighborRetrans)(nil), "cisco_ios_xr_ipv4_ospf_oper.ospf.processes.process.vrfs.vrf.interface_vrf_information.sham_links.sham_link.ospf_sh_neighbor_retrans")
	proto.RegisterType((*OspfShSlinkNeighbor)(nil), "cisco_ios_xr_ipv4_ospf_oper.ospf.processes.process.vrfs.vrf.interface_vrf_information.sham_links.sham_link.ospf_sh_slink_neighbor")
	proto.RegisterType((*OspfShShamLinks)(nil), "cisco_ios_xr_ipv4_ospf_oper.ospf.processes.process.vrfs.vrf.interface_vrf_information.sham_links.sham_link.ospf_sh_sham_links")
}

func init() { proto.RegisterFile("ospf_sh_sham_links.proto", fileDescriptor_e1787917a16480c7) }

var fileDescriptor_e1787917a16480c7 = []byte{
	// 1244 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xc4, 0x57, 0x5b, 0x73, 0x5b, 0x35,
	0x17, 0x1d, 0xb7, 0xfd, 0x7a, 0x51, 0xe2, 0xb4, 0x55, 0xda, 0x54, 0x49, 0xda, 0x7e, 0xa9, 0x61,
	0xa0, 0xc0, 0x8c, 0x19, 0x7a, 0x4f, 0x9b, 0xb4, 0xe4, 0x4a, 0xdc, 0xdc, 0x8a, 0x9b, 0x19, 0xe8,
	0x93, 0x46, 0x3e, 0xd2, 0xb1, 0x45, 0xce, 0xc5, 0x73, 0x24, 0x1b, 0xfb, 0x81, 0x17, 0x86, 0x1f,
	0xc1, 0xdf, 0xe0, 0x99, 0x07, 0x86, 0x7f, 0xc6, 0x68, 0xeb, 0xdc, 0x64, 0x1f, 0xf7, 0x11, 0x5e,
	0x3a, 0xae, 0xf6, 0x5a, 0x5b, 0x4b, 0xfb, 0x6c, 0xad, 0xad, 0x20, 0x12, 0xab, 0xbe, 0x4f, 0x55,
	0x8f, 0xaa, 0x1e, 0x0b, 0x69, 0x20, 0xa3, 0x73, 0xd5, 0xec, 0x27, 0xb1, 0x8e, 0xf1, 0x4f, 0x9e,
	0x54, 0x5e, 0x4c, 0x65, 0xac, 0xe8, 0x28, 0xa1, 0xb2, 0x3f, 0x7c, 0x42, 0x01, 0x1b, 0xf7, 0x45,
	0xd2, 0x34, 0xbf, 0x0c, 0xce, 0x13, 0x4a, 0x09, 0x95, 0xfd, 0x6a, 0x0e, 0x13, 0x1f, 0xfe, 0x69,
	0xca, 0x48, 0x8b, 0xc4, 0x67, 0x9e, 0xa0, 0xc3, 0xc4, 0xa7, 0x32, 0xf2, 0xe3, 0x24, 0x64, 0x5a,
	0xc6, 0x51, 0xb3, 0xb4, 0x4f, 0xfe, 0xb3, 0xf1, 0x0b, 0xba, 0x33, 0xad, 0x83, 0x1e, 0xee, 0x7d,
	0x78, 0x8f, 0x1f, 0xa0, 0xf9, 0x34, 0x3b, 0x8d, 0x58, 0x28, 0x48, 0x6d, 0xad, 0xf6, 0xf0, 0x5a,
	0x7b, 0x2e, 0x5d, 0x3b, 0x61, 0xa1, 0xc0, 0xcb, 0xe8, 0xaa, 0xd9, 0x05, 0xc2, 0x17, 0x20, 0x7c,
	0x65, 0x98, 0xf8, 0x10, 0xfa, 0x14, 0x2d, 0xe4, 0x09, 0x2d, 0xe0, 0x22, 0x00, 0xe6, 0xcd, 0xea,
	0x91, 0x8c, 0xce, 0x0d, 0xaa, 0xf1, 0xf7, 0xb5, 0xa2, 0x0e, 0x91, 0x90, 0xdd, 0x5e, 0x27, 0x4e,
	0x68, 0x22, 0x74, 0xc2, 0x22, 0x85, 0x5f, 0x20, 0xc2, 0x3b, 0x3c, 0xfb, 0x6f, 0x28, 0x95, 0x92,
	0x71, 0x44, 0xbd, 0x78, 0x10, 0x69, 0x10, 0x53, 0x6f, 0x2f, 0xf1, 0x0e, 0x6f, 0x3b, 0xe1, 0x1d,
	0x13, 0xc5, 0x3b, 0xe8, 0x7e, 0x05, 0x53, 0xc7, 0x9a, 0x05, 0x29, 0xff, 0x02, 0xf0, 0x57, 0xa7,
	0xf8, 0x67, 0x06, 0x63, 0x93, 0x34, 0xd1, 0x22, 0x4b, 0x04, 0xa3, 0x7e, 0x10, 0xc7, 0x5c, 0x46,
	0x5d, 0x2a, 0x23, 0x2e, 0x46, 0x70, 0x8c, 0x7a, 0xfb, 0xa6, 0x09, 0xed, 0xa7, 0x91, 0x96, 0x09,
	0x98, 0x13, 0x33, 0x65, 0xd1, 0x29, 0xf4, 0x12, 0x40, 0xe7, 0x99, 0x02, 0xa0, 0x45, 0x6d, 0xa3,
	0x7b, 0x93, 0x07, 0x75, 0x4f, 0xf6, 0x3f, 0xab, 0x2c, 0x03, 0x55, 0x1d, 0xef, 0x25, 0x5a, 0x8e,
	0x06, 0x61, 0x47, 0x24, 0x34, 0xf6, 0x27, 0x92, 0x28, 0x72, 0x19, 0xf8, 0x77, 0x2c, 0xe0, 0xd4,
	0x77, 0xf9, 0x0a, 0xbf, 0x41, 0x77, 0xed, 0xa9, 0x64, 0xa2, 0x74, 0xae, 0x36, 0xef, 0x12, 0x72,
	0x05, 0xe8, 0xcb, 0x70, 0x3c, 0x03, 0x49, 0xa5, 0xe7, 0x00, 0xfc, 0x16, 0x35, 0x3e, 0x96, 0x20,
	0x3d, 0xfa, 0x55, 0x48, 0x73, 0x7f, 0x66, 0x1a, 0x5b, 0x8c, 0x57, 0x68, 0xc5, 0x94, 0x6c, 0x86,
	0x94, 0x6b, 0xf6, 0x24, 0x4c, 0x55, 0x0b, 0xd9, 0x47, 0x6b, 0xb3, 0xc9, 0xa9, 0x0c, 0x04, 0x29,
	0xee, 0xce, 0x48, 0x61, 0x45, 0x6c, 0xa2, 0x55, 0x38, 0x50, 0x24, 0x46, 0x55, 0x2a, 0xe6, 0x20,
	0x05, 0x31, 0x90, 0x13, 0x31, 0x9a, 0x96, 0x71, 0x80, 0x1e, 0x7c, 0x84, 0x9e, 0xea, 0x98, 0x87,
	0x24, 0xf7, 0x66, 0x25, 0xb1, 0x42, 0xd6, 0xd1, 0x32, 0x53, 0xb3, 0x64, 0xd4, 0x6d, 0xc3, 0x33,
	0x55, 0x29, 0x62, 0x17, 0xfd, 0x7f, 0x26, 0x35, 0x95, 0xb0, 0x60, 0xfb, 0xaa, 0x3a, 0x81, 0x15,
	0xb0, 0x81, 0x56, 0x02, 0xa6, 0xf4, 0x64, 0x5f, 0x06, 0x22, 0xea, 0xea, 0x1e, 0xb9, 0x6e, 0x0b,
	0x61, 0x10, 0x6e, 0x53, 0x1d, 0x41, 0xdc, 0x74, 0x76, 0xc8, 0x46, 0x32, 0x1c, 0x84, 0x33, 0x12,
	0xdc, 0xb0, 0x0a, 0x52, 0x50, 0x65, 0x8e, 0x17, 0x88, 0x54, 0x29, 0xd0, 0x32, 0x14, 0xe4, 0xa6,
	0xad, 0xc0, 0xf4, 0xfe, 0x67, 0x32, 0x14, 0xf8, 0x35, 0x5a, 0x9d, 0xb1, 0x3b, 0x90, 0xb1, 0x6d,
	0xeb, 0xca, 0xbd, 0x81, 0x6f, 0x76, 0x56, 0xac, 0x8a, 0x9b, 0x90, 0xc5, 0x74, 0x67, 0xc5, 0xa6,
	0x89, 0x49, 0xe3, 0xcf, 0x0b, 0x68, 0x29, 0xf7, 0x50, 0x6b, 0x77, 0xe9, 0xdd, 0xc5, 0xcf, 0x11,
	0x29, 0x4c, 0x50, 0x0d, 0xfa, 0xfd, 0xc4, 0xb8, 0x69, 0x4f, 0x04, 0x41, 0x0c, 0x0e, 0x76, 0xb5,
	0x7d, 0x3b, 0xb3, 0xc3, 0xf7, 0x69, 0xf4, 0xc0, 0x04, 0xf1, 0x67, 0xe8, 0x7a, 0x89, 0xa8, 0x99,
	0xce, 0xfc, 0xb5, 0x9e, 0xe3, 0xcd, 0x22, 0xfe, 0xab, 0x56, 0xde, 0xa1, 0x24, 0x3e, 0x96, 0x11,
	0x38, 0xd5, 0xdc, 0xa3, 0xdf, 0x6a, 0xcd, 0x7f, 0x6f, 0x9e, 0x34, 0x67, 0x99, 0x79, 0x7b, 0x29,
	0x13, 0xde, 0x76, 0x44, 0x36, 0x7e, 0x5f, 0x40, 0x78, 0x7a, 0x02, 0xe1, 0x2f, 0xd0, 0x4d, 0x77,
	0x7c, 0xd0, 0x51, 0x42, 0x1e, 0x41, 0x09, 0x16, 0xca, 0x13, 0xe4, 0xc7, 0x04, 0x7f, 0x83, 0x6e,
	0x97, 0xa0, 0xd9, 0xbe, 0x92, 0x93, 0xc7, 0x00, 0xc7, 0x39, 0x3c, 0x0d, 0xb5, 0xf8, 0xc4, 0x77,
	0x89, 0x07, 0x89, 0x27, 0x28, 0xe3, 0xdc, 0xd4, 0x9f, 0x3c, 0x01, 0x56, 0xf1, 0x5d, 0x20, 0xba,
	0x65, 0x83, 0xf8, 0x31, 0x5a, 0x2a, 0x88, 0x5c, 0x28, 0x9d, 0xd3, 0x9e, 0x02, 0x6d, 0x31, 0xa3,
	0xed, 0x0a, 0xa5, 0x33, 0x52, 0xc5, 0xc7, 0x7c, 0x56, 0xf5, 0x31, 0x1d, 0x55, 0x5c, 0x84, 0x2c,
	0xe2, 0xd4, 0x93, 0x89, 0x37, 0x90, 0x9a, 0x3c, 0x77, 0xbb, 0x65, 0x17, 0xa2, 0x3b, 0x36, 0x88,
	0x9f, 0x39, 0x44, 0x8f, 0x76, 0xa4, 0x0e, 0x4c, 0xa3, 0x05, 0x8a, 0x91, 0x17, 0xd0, 0xbb, 0xb7,
	0x72, 0xa2, 0xb7, 0x6d, 0x83, 0x47, 0x8a, 0xe1, 0x2f, 0xcb, 0x45, 0x96, 0xbe, 0xf5, 0x89, 0x75,
	0x20, 0x5c, 0xcf, 0x08, 0x2d, 0xbb, 0xec, 0xce, 0x73, 0xe3, 0x63, 0xe4, 0xa5, 0x3b, 0xcf, 0xb7,
	0x12, 0xc1, 0x5c, 0x94, 0x17, 0x2b, 0x4d, 0x5e, 0xd9, 0x19, 0x98, 0xa1, 0x76, 0x62, 0xa5, 0xcd,
	0x0c, 0x2a, 0x50, 0xce, 0x7d, 0xe3, 0x22, 0x60, 0x63, 0xb2, 0x61, 0x2f, 0x6b, 0xc6, 0x39, 0x2b,
	0x21, 0x76, 0x0d, 0xc0, 0xad, 0x14, 0x5c, 0x27, 0x0a, 0x7d, 0x3a, 0x64, 0x01, 0xd9, 0x04, 0x72,
	0x5e, 0x29, 0xb8, 0x4f, 0xad, 0x34, 0x88, 0x37, 0xd0, 0xea, 0x2c, 0x22, 0x0d, 0x15, 0x79, 0x6d,
	0x27, 0x4e, 0x25, 0xf7, 0x58, 0xe1, 0xa7, 0xe8, 0x4e, 0xf9, 0x03, 0x31, 0x5e, 0xec, 0xfa, 0x66,
	0xa2, 0xcc, 0x82, 0xf1, 0x7c, 0x53, 0x87, 0xf6, 0x33, 0x93, 0xba, 0xa0, 0x7d, 0xeb, 0xd2, 0x7e,
	0x60, 0x52, 0xe7, 0xb4, 0x16, 0x7a, 0x50, 0x79, 0xb5, 0xad, 0xa5, 0xa7, 0x09, 0xb6, 0xec, 0x9c,
	0xad, 0xb8, 0x5c, 0xe0, 0xea, 0x69, 0xaa, 0xaf, 0xd1, 0xad, 0xf2, 0x15, 0x19, 0xe9, 0xd4, 0x83,
	0xb6, 0xed, 0x5b, 0xa6, 0xb8, 0x21, 0x23, 0x6d, 0xfd, 0xe7, 0x49, 0x59, 0x72, 0x41, 0x30, 0x35,
	0xda, 0x01, 0xce, 0xe2, 0x14, 0xe7, 0x58, 0xb9, 0xfd, 0xd4, 0x67, 0x4a, 0xc9, 0xa1, 0x20, 0xbb,
	0xd0, 0xb9, 0x79, 0x3f, 0xbd, 0xb3, 0xcb, 0x78, 0x0b, 0xdd, 0x2b, 0xf5, 0xd3, 0x40, 0xf7, 0x44,
	0xa4, 0xa5, 0x67, 0x07, 0x96, 0x1e, 0xf7, 0x05, 0xd9, 0x83, 0xf6, 0x5a, 0xc9, 0xdb, 0xcb, 0x81,
	0x9c, 0x8d, 0xfb, 0xc6, 0xb2, 0x97, 0x8b, 0x14, 0xe3, 0x78, 0x10, 0x75, 0xcd, 0x85, 0x0c, 0x39,
	0x3d, 0x17, 0x63, 0xb2, 0xef, 0x5e, 0x98, 0x0f, 0x69, 0xf8, 0x98, 0x1f, 0x8a, 0x31, 0xde, 0x2c,
	0x37, 0xe0, 0x04, 0xd3, 0x38, 0xc7, 0x77, 0x6e, 0x1f, 0x38, 0xe4, 0x16, 0xc7, 0xeb, 0x68, 0xa5,
	0xa0, 0xc7, 0x01, 0xcf, 0x98, 0xf6, 0x01, 0x77, 0xe0, 0x36, 0xe0, 0x69, 0xc0, 0x81, 0x67, 0x9f,
	0x6e, 0x9f, 0xa3, 0x1b, 0x05, 0x35, 0x95, 0xda, 0x5a, 0xbb, 0xf8, 0xb0, 0x5e, 0x98, 0x81, 0x95,
	0xf8, 0x09, 0xaa, 0x9f, 0x8b, 0xb1, 0xd7, 0x63, 0x32, 0xb2, 0xcf, 0xe7, 0xb7, 0xf6, 0xba, 0x65,
	0x8b, 0xf0, 0xc8, 0x76, 0xda, 0x39, 0x87, 0x5b, 0x29, 0x91, 0x4f, 0x0e, 0xa1, 0x06, 0xf9, 0x31,
	0x0e, 0x53, 0x00, 0x88, 0x89, 0x7c, 0xd7, 0x38, 0x73, 0xb6, 0xe4, 0xe4, 0x68, 0xad, 0xf6, 0xf0,
	0x52, 0x61, 0x9c, 0x19, 0xaf, 0xc5, 0x5d, 0xff, 0xcb, 0x29, 0x2c, 0xe8, 0x92, 0x63, 0xd7, 0xff,
	0x32, 0xce, 0x56, 0xd0, 0x9d, 0x30, 0x68, 0xe5, 0x53, 0x11, 0xb1, 0x4e, 0x20, 0x38, 0x39, 0x01,
	0x7d, 0x85, 0x41, 0x2b, 0x7f, 0xcf, 0x46, 0x70, 0x03, 0xd5, 0x1d, 0x0a, 0x39, 0x05, 0xe8, 0x5c,
	0x09, 0x8a, 0xbf, 0x42, 0xb8, 0xc0, 0xc0, 0xab, 0xc1, 0x00, 0xdf, 0xb9, 0xf6, 0x75, 0xc4, 0x94,
	0x36, 0xe0, 0x3f, 0x6a, 0x65, 0x74, 0x36, 0x25, 0xc8, 0xf7, 0x30, 0x22, 0x7f, 0xfd, 0x4f, 0x46,
	0xa4, 0xfb, 0x56, 0x68, 0xdf, 0x98, 0x9c, 0x53, 0x9d, 0xcb, 0xf0, 0xe7, 0xe0, 0xe3, 0x7f, 0x02,
	0x00, 0x00, 0xff, 0xff, 0x3d, 0x1c, 0x14, 0xe0, 0x2a, 0x0e, 0x00, 0x00,
}
