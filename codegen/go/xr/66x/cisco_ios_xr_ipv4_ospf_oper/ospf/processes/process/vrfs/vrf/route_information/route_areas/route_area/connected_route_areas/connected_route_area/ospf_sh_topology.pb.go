/*
Copyright 2019 Cisco Systems

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: ospf_sh_topology.proto

package cisco_ios_xr_ipv4_ospf_oper_ospf_processes_process_vrfs_vrf_route_information_route_areas_route_area_connected_route_areas_connected_route_area

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type OspfShTopology_KEYS struct {
	ProcessName          string   `protobuf:"bytes,1,opt,name=process_name,json=processName,proto3" json:"process_name,omitempty"`
	VrfName              string   `protobuf:"bytes,2,opt,name=vrf_name,json=vrfName,proto3" json:"vrf_name,omitempty"`
	AreaId               uint32   `protobuf:"varint,3,opt,name=area_id,json=areaId,proto3" json:"area_id,omitempty"`
	Prefix               string   `protobuf:"bytes,4,opt,name=prefix,proto3" json:"prefix,omitempty"`
	PrefixLength         uint32   `protobuf:"varint,5,opt,name=prefix_length,json=prefixLength,proto3" json:"prefix_length,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OspfShTopology_KEYS) Reset()         { *m = OspfShTopology_KEYS{} }
func (m *OspfShTopology_KEYS) String() string { return proto.CompactTextString(m) }
func (*OspfShTopology_KEYS) ProtoMessage()    {}
func (*OspfShTopology_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_4169ff6e5af11206, []int{0}
}

func (m *OspfShTopology_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OspfShTopology_KEYS.Unmarshal(m, b)
}
func (m *OspfShTopology_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OspfShTopology_KEYS.Marshal(b, m, deterministic)
}
func (m *OspfShTopology_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OspfShTopology_KEYS.Merge(m, src)
}
func (m *OspfShTopology_KEYS) XXX_Size() int {
	return xxx_messageInfo_OspfShTopology_KEYS.Size(m)
}
func (m *OspfShTopology_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_OspfShTopology_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_OspfShTopology_KEYS proto.InternalMessageInfo

func (m *OspfShTopology_KEYS) GetProcessName() string {
	if m != nil {
		return m.ProcessName
	}
	return ""
}

func (m *OspfShTopology_KEYS) GetVrfName() string {
	if m != nil {
		return m.VrfName
	}
	return ""
}

func (m *OspfShTopology_KEYS) GetAreaId() uint32 {
	if m != nil {
		return m.AreaId
	}
	return 0
}

func (m *OspfShTopology_KEYS) GetPrefix() string {
	if m != nil {
		return m.Prefix
	}
	return ""
}

func (m *OspfShTopology_KEYS) GetPrefixLength() uint32 {
	if m != nil {
		return m.PrefixLength
	}
	return 0
}

type OspfShTime struct {
	Second               uint32   `protobuf:"varint,1,opt,name=second,proto3" json:"second,omitempty"`
	Nanosecond           uint32   `protobuf:"varint,2,opt,name=nanosecond,proto3" json:"nanosecond,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OspfShTime) Reset()         { *m = OspfShTime{} }
func (m *OspfShTime) String() string { return proto.CompactTextString(m) }
func (*OspfShTime) ProtoMessage()    {}
func (*OspfShTime) Descriptor() ([]byte, []int) {
	return fileDescriptor_4169ff6e5af11206, []int{1}
}

func (m *OspfShTime) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OspfShTime.Unmarshal(m, b)
}
func (m *OspfShTime) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OspfShTime.Marshal(b, m, deterministic)
}
func (m *OspfShTime) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OspfShTime.Merge(m, src)
}
func (m *OspfShTime) XXX_Size() int {
	return xxx_messageInfo_OspfShTime.Size(m)
}
func (m *OspfShTime) XXX_DiscardUnknown() {
	xxx_messageInfo_OspfShTime.DiscardUnknown(m)
}

var xxx_messageInfo_OspfShTime proto.InternalMessageInfo

func (m *OspfShTime) GetSecond() uint32 {
	if m != nil {
		return m.Second
	}
	return 0
}

func (m *OspfShTime) GetNanosecond() uint32 {
	if m != nil {
		return m.Nanosecond
	}
	return 0
}

type OspfShTopCommon struct {
	RouteAreaId               uint32      `protobuf:"varint,1,opt,name=route_area_id,json=routeAreaId,proto3" json:"route_area_id,omitempty"`
	RouteTeMetric             uint32      `protobuf:"varint,2,opt,name=route_te_metric,json=routeTeMetric,proto3" json:"route_te_metric,omitempty"`
	RouteRibVersion           uint32      `protobuf:"varint,3,opt,name=route_rib_version,json=routeRibVersion,proto3" json:"route_rib_version,omitempty"`
	RouteSpfVersion           uint64      `protobuf:"varint,4,opt,name=route_spf_version,json=routeSpfVersion,proto3" json:"route_spf_version,omitempty"`
	RouteForwardDistance      uint32      `protobuf:"varint,5,opt,name=route_forward_distance,json=routeForwardDistance,proto3" json:"route_forward_distance,omitempty"`
	RouteSource               uint32      `protobuf:"varint,6,opt,name=route_source,json=routeSource,proto3" json:"route_source,omitempty"`
	RouteUpdateTime           *OspfShTime `protobuf:"bytes,7,opt,name=route_update_time,json=routeUpdateTime,proto3" json:"route_update_time,omitempty"`
	RouteFailTime             *OspfShTime `protobuf:"bytes,8,opt,name=route_fail_time,json=routeFailTime,proto3" json:"route_fail_time,omitempty"`
	RouteSpfPriority          uint32      `protobuf:"varint,9,opt,name=route_spf_priority,json=routeSpfPriority,proto3" json:"route_spf_priority,omitempty"`
	RouteAutoExcluded         bool        `protobuf:"varint,10,opt,name=route_auto_excluded,json=routeAutoExcluded,proto3" json:"route_auto_excluded,omitempty"`
	RouteSrtePrefixRegistered bool        `protobuf:"varint,11,opt,name=route_srte_prefix_registered,json=routeSrtePrefixRegistered,proto3" json:"route_srte_prefix_registered,omitempty"`
	RouteSrteNbrRegistered    uint32      `protobuf:"varint,12,opt,name=route_srte_nbr_registered,json=routeSrteNbrRegistered,proto3" json:"route_srte_nbr_registered,omitempty"`
	RouteLabelType            uint32      `protobuf:"varint,13,opt,name=route_label_type,json=routeLabelType,proto3" json:"route_label_type,omitempty"`
	RouteLabel                uint32      `protobuf:"varint,14,opt,name=route_label,json=routeLabel,proto3" json:"route_label,omitempty"`
	RouteSspfLabel            uint32      `protobuf:"varint,15,opt,name=route_sspf_label,json=routeSspfLabel,proto3" json:"route_sspf_label,omitempty"`
	XXX_NoUnkeyedLiteral      struct{}    `json:"-"`
	XXX_unrecognized          []byte      `json:"-"`
	XXX_sizecache             int32       `json:"-"`
}

func (m *OspfShTopCommon) Reset()         { *m = OspfShTopCommon{} }
func (m *OspfShTopCommon) String() string { return proto.CompactTextString(m) }
func (*OspfShTopCommon) ProtoMessage()    {}
func (*OspfShTopCommon) Descriptor() ([]byte, []int) {
	return fileDescriptor_4169ff6e5af11206, []int{2}
}

func (m *OspfShTopCommon) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OspfShTopCommon.Unmarshal(m, b)
}
func (m *OspfShTopCommon) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OspfShTopCommon.Marshal(b, m, deterministic)
}
func (m *OspfShTopCommon) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OspfShTopCommon.Merge(m, src)
}
func (m *OspfShTopCommon) XXX_Size() int {
	return xxx_messageInfo_OspfShTopCommon.Size(m)
}
func (m *OspfShTopCommon) XXX_DiscardUnknown() {
	xxx_messageInfo_OspfShTopCommon.DiscardUnknown(m)
}

var xxx_messageInfo_OspfShTopCommon proto.InternalMessageInfo

func (m *OspfShTopCommon) GetRouteAreaId() uint32 {
	if m != nil {
		return m.RouteAreaId
	}
	return 0
}

func (m *OspfShTopCommon) GetRouteTeMetric() uint32 {
	if m != nil {
		return m.RouteTeMetric
	}
	return 0
}

func (m *OspfShTopCommon) GetRouteRibVersion() uint32 {
	if m != nil {
		return m.RouteRibVersion
	}
	return 0
}

func (m *OspfShTopCommon) GetRouteSpfVersion() uint64 {
	if m != nil {
		return m.RouteSpfVersion
	}
	return 0
}

func (m *OspfShTopCommon) GetRouteForwardDistance() uint32 {
	if m != nil {
		return m.RouteForwardDistance
	}
	return 0
}

func (m *OspfShTopCommon) GetRouteSource() uint32 {
	if m != nil {
		return m.RouteSource
	}
	return 0
}

func (m *OspfShTopCommon) GetRouteUpdateTime() *OspfShTime {
	if m != nil {
		return m.RouteUpdateTime
	}
	return nil
}

func (m *OspfShTopCommon) GetRouteFailTime() *OspfShTime {
	if m != nil {
		return m.RouteFailTime
	}
	return nil
}

func (m *OspfShTopCommon) GetRouteSpfPriority() uint32 {
	if m != nil {
		return m.RouteSpfPriority
	}
	return 0
}

func (m *OspfShTopCommon) GetRouteAutoExcluded() bool {
	if m != nil {
		return m.RouteAutoExcluded
	}
	return false
}

func (m *OspfShTopCommon) GetRouteSrtePrefixRegistered() bool {
	if m != nil {
		return m.RouteSrtePrefixRegistered
	}
	return false
}

func (m *OspfShTopCommon) GetRouteSrteNbrRegistered() uint32 {
	if m != nil {
		return m.RouteSrteNbrRegistered
	}
	return 0
}

func (m *OspfShTopCommon) GetRouteLabelType() uint32 {
	if m != nil {
		return m.RouteLabelType
	}
	return 0
}

func (m *OspfShTopCommon) GetRouteLabel() uint32 {
	if m != nil {
		return m.RouteLabel
	}
	return 0
}

func (m *OspfShTopCommon) GetRouteSspfLabel() uint32 {
	if m != nil {
		return m.RouteSspfLabel
	}
	return 0
}

type OspfShRepEl struct {
	RepairElementId      string   `protobuf:"bytes,1,opt,name=repair_element_id,json=repairElementId,proto3" json:"repair_element_id,omitempty"`
	RepairLabel          uint32   `protobuf:"varint,2,opt,name=repair_label,json=repairLabel,proto3" json:"repair_label,omitempty"`
	RepairElementType    uint32   `protobuf:"varint,3,opt,name=repair_element_type,json=repairElementType,proto3" json:"repair_element_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OspfShRepEl) Reset()         { *m = OspfShRepEl{} }
func (m *OspfShRepEl) String() string { return proto.CompactTextString(m) }
func (*OspfShRepEl) ProtoMessage()    {}
func (*OspfShRepEl) Descriptor() ([]byte, []int) {
	return fileDescriptor_4169ff6e5af11206, []int{3}
}

func (m *OspfShRepEl) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OspfShRepEl.Unmarshal(m, b)
}
func (m *OspfShRepEl) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OspfShRepEl.Marshal(b, m, deterministic)
}
func (m *OspfShRepEl) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OspfShRepEl.Merge(m, src)
}
func (m *OspfShRepEl) XXX_Size() int {
	return xxx_messageInfo_OspfShRepEl.Size(m)
}
func (m *OspfShRepEl) XXX_DiscardUnknown() {
	xxx_messageInfo_OspfShRepEl.DiscardUnknown(m)
}

var xxx_messageInfo_OspfShRepEl proto.InternalMessageInfo

func (m *OspfShRepEl) GetRepairElementId() string {
	if m != nil {
		return m.RepairElementId
	}
	return ""
}

func (m *OspfShRepEl) GetRepairLabel() uint32 {
	if m != nil {
		return m.RepairLabel
	}
	return 0
}

func (m *OspfShRepEl) GetRepairElementType() uint32 {
	if m != nil {
		return m.RepairElementType
	}
	return 0
}

type OspfShSrUloopPath struct {
	MicroloopRepair              []*OspfShRepEl `protobuf:"bytes,1,rep,name=microloop_repair,json=microloopRepair,proto3" json:"microloop_repair,omitempty"`
	MicroloopRepairListSize      uint32         `protobuf:"varint,2,opt,name=microloop_repair_list_size,json=microloopRepairListSize,proto3" json:"microloop_repair_list_size,omitempty"`
	MicroloopTunnelInterfaceName string         `protobuf:"bytes,3,opt,name=microloop_tunnel_interface_name,json=microloopTunnelInterfaceName,proto3" json:"microloop_tunnel_interface_name,omitempty"`
	MicroloopStrictSpf           bool           `protobuf:"varint,4,opt,name=microloop_strict_spf,json=microloopStrictSpf,proto3" json:"microloop_strict_spf,omitempty"`
	XXX_NoUnkeyedLiteral         struct{}       `json:"-"`
	XXX_unrecognized             []byte         `json:"-"`
	XXX_sizecache                int32          `json:"-"`
}

func (m *OspfShSrUloopPath) Reset()         { *m = OspfShSrUloopPath{} }
func (m *OspfShSrUloopPath) String() string { return proto.CompactTextString(m) }
func (*OspfShSrUloopPath) ProtoMessage()    {}
func (*OspfShSrUloopPath) Descriptor() ([]byte, []int) {
	return fileDescriptor_4169ff6e5af11206, []int{4}
}

func (m *OspfShSrUloopPath) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OspfShSrUloopPath.Unmarshal(m, b)
}
func (m *OspfShSrUloopPath) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OspfShSrUloopPath.Marshal(b, m, deterministic)
}
func (m *OspfShSrUloopPath) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OspfShSrUloopPath.Merge(m, src)
}
func (m *OspfShSrUloopPath) XXX_Size() int {
	return xxx_messageInfo_OspfShSrUloopPath.Size(m)
}
func (m *OspfShSrUloopPath) XXX_DiscardUnknown() {
	xxx_messageInfo_OspfShSrUloopPath.DiscardUnknown(m)
}

var xxx_messageInfo_OspfShSrUloopPath proto.InternalMessageInfo

func (m *OspfShSrUloopPath) GetMicroloopRepair() []*OspfShRepEl {
	if m != nil {
		return m.MicroloopRepair
	}
	return nil
}

func (m *OspfShSrUloopPath) GetMicroloopRepairListSize() uint32 {
	if m != nil {
		return m.MicroloopRepairListSize
	}
	return 0
}

func (m *OspfShSrUloopPath) GetMicroloopTunnelInterfaceName() string {
	if m != nil {
		return m.MicroloopTunnelInterfaceName
	}
	return ""
}

func (m *OspfShSrUloopPath) GetMicroloopStrictSpf() bool {
	if m != nil {
		return m.MicroloopStrictSpf
	}
	return false
}

type OspfShNnhInfo struct {
	NeighborNextHopValueType string   `protobuf:"bytes,1,opt,name=neighbor_next_hop_value_type,json=neighborNextHopValueType,proto3" json:"neighbor_next_hop_value_type,omitempty"`
	NeighborNextHopIpAddr    string   `protobuf:"bytes,2,opt,name=neighbor_next_hop_ip_addr,json=neighborNextHopIpAddr,proto3" json:"neighbor_next_hop_ip_addr,omitempty"`
	NeighborNextHopIntfIndex uint32   `protobuf:"varint,3,opt,name=neighbor_next_hop_intf_index,json=neighborNextHopIntfIndex,proto3" json:"neighbor_next_hop_intf_index,omitempty"`
	XXX_NoUnkeyedLiteral     struct{} `json:"-"`
	XXX_unrecognized         []byte   `json:"-"`
	XXX_sizecache            int32    `json:"-"`
}

func (m *OspfShNnhInfo) Reset()         { *m = OspfShNnhInfo{} }
func (m *OspfShNnhInfo) String() string { return proto.CompactTextString(m) }
func (*OspfShNnhInfo) ProtoMessage()    {}
func (*OspfShNnhInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_4169ff6e5af11206, []int{5}
}

func (m *OspfShNnhInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OspfShNnhInfo.Unmarshal(m, b)
}
func (m *OspfShNnhInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OspfShNnhInfo.Marshal(b, m, deterministic)
}
func (m *OspfShNnhInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OspfShNnhInfo.Merge(m, src)
}
func (m *OspfShNnhInfo) XXX_Size() int {
	return xxx_messageInfo_OspfShNnhInfo.Size(m)
}
func (m *OspfShNnhInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_OspfShNnhInfo.DiscardUnknown(m)
}

var xxx_messageInfo_OspfShNnhInfo proto.InternalMessageInfo

func (m *OspfShNnhInfo) GetNeighborNextHopValueType() string {
	if m != nil {
		return m.NeighborNextHopValueType
	}
	return ""
}

func (m *OspfShNnhInfo) GetNeighborNextHopIpAddr() string {
	if m != nil {
		return m.NeighborNextHopIpAddr
	}
	return ""
}

func (m *OspfShNnhInfo) GetNeighborNextHopIntfIndex() uint32 {
	if m != nil {
		return m.NeighborNextHopIntfIndex
	}
	return 0
}

type OspfShTopPath struct {
	RouteInterfaceName       string             `protobuf:"bytes,1,opt,name=route_interface_name,json=routeInterfaceName,proto3" json:"route_interface_name,omitempty"`
	RouteInterfaceSnmpIndex  uint32             `protobuf:"varint,2,opt,name=route_interface_snmp_index,json=routeInterfaceSnmpIndex,proto3" json:"route_interface_snmp_index,omitempty"`
	RouteNextHopAddress      string             `protobuf:"bytes,3,opt,name=route_next_hop_address,json=routeNextHopAddress,proto3" json:"route_next_hop_address,omitempty"`
	RouteSource              string             `protobuf:"bytes,4,opt,name=route_source,json=routeSource,proto3" json:"route_source,omitempty"`
	RouteLsaid               string             `protobuf:"bytes,5,opt,name=route_lsaid,json=routeLsaid,proto3" json:"route_lsaid,omitempty"`
	RoutePathIsMcastIntact   bool               `protobuf:"varint,6,opt,name=route_path_is_mcast_intact,json=routePathIsMcastIntact,proto3" json:"route_path_is_mcast_intact,omitempty"`
	RoutePathIsUcmpPath      bool               `protobuf:"varint,7,opt,name=route_path_is_ucmp_path,json=routePathIsUcmpPath,proto3" json:"route_path_is_ucmp_path,omitempty"`
	RouteMetric              uint32             `protobuf:"varint,8,opt,name=route_metric,json=routeMetric,proto3" json:"route_metric,omitempty"`
	LsaType                  uint32             `protobuf:"varint,9,opt,name=lsa_type,json=lsaType,proto3" json:"lsa_type,omitempty"`
	AreaId                   uint32             `protobuf:"varint,10,opt,name=area_id,json=areaId,proto3" json:"area_id,omitempty"`
	AreaFormat               bool               `protobuf:"varint,11,opt,name=area_format,json=areaFormat,proto3" json:"area_format,omitempty"`
	SrMicroloopAvoidancePath *OspfShSrUloopPath `protobuf:"bytes,12,opt,name=sr_microloop_avoidance_path,json=srMicroloopAvoidancePath,proto3" json:"sr_microloop_avoidance_path,omitempty"`
	RoutePathId              uint32             `protobuf:"varint,13,opt,name=route_path_id,json=routePathId,proto3" json:"route_path_id,omitempty"`
	RoutePathIsRsvpTePath    bool               `protobuf:"varint,14,opt,name=route_path_is_rsvp_te_path,json=routePathIsRsvpTePath,proto3" json:"route_path_is_rsvp_te_path,omitempty"`
	RoutePathIsSrTePath      bool               `protobuf:"varint,15,opt,name=route_path_is_sr_te_path,json=routePathIsSrTePath,proto3" json:"route_path_is_sr_te_path,omitempty"`
	RoutePathIsSrExclPath    bool               `protobuf:"varint,16,opt,name=route_path_is_sr_excl_path,json=routePathIsSrExclPath,proto3" json:"route_path_is_sr_excl_path,omitempty"`
	RoutePathIsSrTeSspfPath  bool               `protobuf:"varint,17,opt,name=route_path_is_sr_te_sspf_path,json=routePathIsSrTeSspfPath,proto3" json:"route_path_is_sr_te_sspf_path,omitempty"`
	NeighborNextHop          []*OspfShNnhInfo   `protobuf:"bytes,18,rep,name=neighbor_next_hop,json=neighborNextHop,proto3" json:"neighbor_next_hop,omitempty"`
	Weight                   uint32             `protobuf:"varint,19,opt,name=weight,proto3" json:"weight,omitempty"`
	XXX_NoUnkeyedLiteral     struct{}           `json:"-"`
	XXX_unrecognized         []byte             `json:"-"`
	XXX_sizecache            int32              `json:"-"`
}

func (m *OspfShTopPath) Reset()         { *m = OspfShTopPath{} }
func (m *OspfShTopPath) String() string { return proto.CompactTextString(m) }
func (*OspfShTopPath) ProtoMessage()    {}
func (*OspfShTopPath) Descriptor() ([]byte, []int) {
	return fileDescriptor_4169ff6e5af11206, []int{6}
}

func (m *OspfShTopPath) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OspfShTopPath.Unmarshal(m, b)
}
func (m *OspfShTopPath) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OspfShTopPath.Marshal(b, m, deterministic)
}
func (m *OspfShTopPath) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OspfShTopPath.Merge(m, src)
}
func (m *OspfShTopPath) XXX_Size() int {
	return xxx_messageInfo_OspfShTopPath.Size(m)
}
func (m *OspfShTopPath) XXX_DiscardUnknown() {
	xxx_messageInfo_OspfShTopPath.DiscardUnknown(m)
}

var xxx_messageInfo_OspfShTopPath proto.InternalMessageInfo

func (m *OspfShTopPath) GetRouteInterfaceName() string {
	if m != nil {
		return m.RouteInterfaceName
	}
	return ""
}

func (m *OspfShTopPath) GetRouteInterfaceSnmpIndex() uint32 {
	if m != nil {
		return m.RouteInterfaceSnmpIndex
	}
	return 0
}

func (m *OspfShTopPath) GetRouteNextHopAddress() string {
	if m != nil {
		return m.RouteNextHopAddress
	}
	return ""
}

func (m *OspfShTopPath) GetRouteSource() string {
	if m != nil {
		return m.RouteSource
	}
	return ""
}

func (m *OspfShTopPath) GetRouteLsaid() string {
	if m != nil {
		return m.RouteLsaid
	}
	return ""
}

func (m *OspfShTopPath) GetRoutePathIsMcastIntact() bool {
	if m != nil {
		return m.RoutePathIsMcastIntact
	}
	return false
}

func (m *OspfShTopPath) GetRoutePathIsUcmpPath() bool {
	if m != nil {
		return m.RoutePathIsUcmpPath
	}
	return false
}

func (m *OspfShTopPath) GetRouteMetric() uint32 {
	if m != nil {
		return m.RouteMetric
	}
	return 0
}

func (m *OspfShTopPath) GetLsaType() uint32 {
	if m != nil {
		return m.LsaType
	}
	return 0
}

func (m *OspfShTopPath) GetAreaId() uint32 {
	if m != nil {
		return m.AreaId
	}
	return 0
}

func (m *OspfShTopPath) GetAreaFormat() bool {
	if m != nil {
		return m.AreaFormat
	}
	return false
}

func (m *OspfShTopPath) GetSrMicroloopAvoidancePath() *OspfShSrUloopPath {
	if m != nil {
		return m.SrMicroloopAvoidancePath
	}
	return nil
}

func (m *OspfShTopPath) GetRoutePathId() uint32 {
	if m != nil {
		return m.RoutePathId
	}
	return 0
}

func (m *OspfShTopPath) GetRoutePathIsRsvpTePath() bool {
	if m != nil {
		return m.RoutePathIsRsvpTePath
	}
	return false
}

func (m *OspfShTopPath) GetRoutePathIsSrTePath() bool {
	if m != nil {
		return m.RoutePathIsSrTePath
	}
	return false
}

func (m *OspfShTopPath) GetRoutePathIsSrExclPath() bool {
	if m != nil {
		return m.RoutePathIsSrExclPath
	}
	return false
}

func (m *OspfShTopPath) GetRoutePathIsSrTeSspfPath() bool {
	if m != nil {
		return m.RoutePathIsSrTeSspfPath
	}
	return false
}

func (m *OspfShTopPath) GetNeighborNextHop() []*OspfShNnhInfo {
	if m != nil {
		return m.NeighborNextHop
	}
	return nil
}

func (m *OspfShTopPath) GetWeight() uint32 {
	if m != nil {
		return m.Weight
	}
	return 0
}

type OspfShTopology struct {
	RoutePrefix          string           `protobuf:"bytes,50,opt,name=route_prefix,json=routePrefix,proto3" json:"route_prefix,omitempty"`
	RoutePrefixLength    uint32           `protobuf:"varint,51,opt,name=route_prefix_length,json=routePrefixLength,proto3" json:"route_prefix_length,omitempty"`
	RouteMetric          uint32           `protobuf:"varint,52,opt,name=route_metric,json=routeMetric,proto3" json:"route_metric,omitempty"`
	RouteType            string           `protobuf:"bytes,53,opt,name=route_type,json=routeType,proto3" json:"route_type,omitempty"`
	RouteConnected       bool             `protobuf:"varint,54,opt,name=route_connected,json=routeConnected,proto3" json:"route_connected,omitempty"`
	RouteInfo            *OspfShTopCommon `protobuf:"bytes,55,opt,name=route_info,json=routeInfo,proto3" json:"route_info,omitempty"`
	RoutePath            []*OspfShTopPath `protobuf:"bytes,56,rep,name=route_path,json=routePath,proto3" json:"route_path,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *OspfShTopology) Reset()         { *m = OspfShTopology{} }
func (m *OspfShTopology) String() string { return proto.CompactTextString(m) }
func (*OspfShTopology) ProtoMessage()    {}
func (*OspfShTopology) Descriptor() ([]byte, []int) {
	return fileDescriptor_4169ff6e5af11206, []int{7}
}

func (m *OspfShTopology) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OspfShTopology.Unmarshal(m, b)
}
func (m *OspfShTopology) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OspfShTopology.Marshal(b, m, deterministic)
}
func (m *OspfShTopology) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OspfShTopology.Merge(m, src)
}
func (m *OspfShTopology) XXX_Size() int {
	return xxx_messageInfo_OspfShTopology.Size(m)
}
func (m *OspfShTopology) XXX_DiscardUnknown() {
	xxx_messageInfo_OspfShTopology.DiscardUnknown(m)
}

var xxx_messageInfo_OspfShTopology proto.InternalMessageInfo

func (m *OspfShTopology) GetRoutePrefix() string {
	if m != nil {
		return m.RoutePrefix
	}
	return ""
}

func (m *OspfShTopology) GetRoutePrefixLength() uint32 {
	if m != nil {
		return m.RoutePrefixLength
	}
	return 0
}

func (m *OspfShTopology) GetRouteMetric() uint32 {
	if m != nil {
		return m.RouteMetric
	}
	return 0
}

func (m *OspfShTopology) GetRouteType() string {
	if m != nil {
		return m.RouteType
	}
	return ""
}

func (m *OspfShTopology) GetRouteConnected() bool {
	if m != nil {
		return m.RouteConnected
	}
	return false
}

func (m *OspfShTopology) GetRouteInfo() *OspfShTopCommon {
	if m != nil {
		return m.RouteInfo
	}
	return nil
}

func (m *OspfShTopology) GetRoutePath() []*OspfShTopPath {
	if m != nil {
		return m.RoutePath
	}
	return nil
}

func init() {
	proto.RegisterType((*OspfShTopology_KEYS)(nil), "cisco_ios_xr_ipv4_ospf_oper.ospf.processes.process.vrfs.vrf.route_information.route_areas.route_area.connected_route_areas.connected_route_area.ospf_sh_topology_KEYS")
	proto.RegisterType((*OspfShTime)(nil), "cisco_ios_xr_ipv4_ospf_oper.ospf.processes.process.vrfs.vrf.route_information.route_areas.route_area.connected_route_areas.connected_route_area.ospf_sh_time")
	proto.RegisterType((*OspfShTopCommon)(nil), "cisco_ios_xr_ipv4_ospf_oper.ospf.processes.process.vrfs.vrf.route_information.route_areas.route_area.connected_route_areas.connected_route_area.ospf_sh_top_common")
	proto.RegisterType((*OspfShRepEl)(nil), "cisco_ios_xr_ipv4_ospf_oper.ospf.processes.process.vrfs.vrf.route_information.route_areas.route_area.connected_route_areas.connected_route_area.ospf_sh_rep_el")
	proto.RegisterType((*OspfShSrUloopPath)(nil), "cisco_ios_xr_ipv4_ospf_oper.ospf.processes.process.vrfs.vrf.route_information.route_areas.route_area.connected_route_areas.connected_route_area.ospf_sh_sr_uloop_path")
	proto.RegisterType((*OspfShNnhInfo)(nil), "cisco_ios_xr_ipv4_ospf_oper.ospf.processes.process.vrfs.vrf.route_information.route_areas.route_area.connected_route_areas.connected_route_area.ospf_sh_nnh_info")
	proto.RegisterType((*OspfShTopPath)(nil), "cisco_ios_xr_ipv4_ospf_oper.ospf.processes.process.vrfs.vrf.route_information.route_areas.route_area.connected_route_areas.connected_route_area.ospf_sh_top_path")
	proto.RegisterType((*OspfShTopology)(nil), "cisco_ios_xr_ipv4_ospf_oper.ospf.processes.process.vrfs.vrf.route_information.route_areas.route_area.connected_route_areas.connected_route_area.ospf_sh_topology")
}

func init() { proto.RegisterFile("ospf_sh_topology.proto", fileDescriptor_4169ff6e5af11206) }

var fileDescriptor_4169ff6e5af11206 = []byte{
	// 1333 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xd4, 0x57, 0xdf, 0x6e, 0x1c, 0x35,
	0x17, 0xd7, 0x34, 0xfd, 0x92, 0x8d, 0x37, 0x69, 0x12, 0xb7, 0x4d, 0x26, 0xfd, 0x5a, 0x1a, 0x16,
	0x09, 0x22, 0x84, 0x56, 0x55, 0x9b, 0x42, 0xa1, 0x52, 0x51, 0x04, 0x89, 0x58, 0xd1, 0x56, 0xd5,
	0x6c, 0x5a, 0x89, 0x2b, 0x6b, 0x32, 0xe3, 0x49, 0x2c, 0xcd, 0xd8, 0x96, 0xed, 0xdd, 0x26, 0x7d,
	0x89, 0x3e, 0x00, 0x42, 0x08, 0x21, 0x71, 0xc3, 0x53, 0x20, 0x24, 0x90, 0x00, 0xf1, 0x00, 0x3c,
	0x00, 0x8f, 0xc0, 0x35, 0xf2, 0x39, 0x9e, 0x9d, 0xd9, 0xdd, 0x3e, 0x40, 0xb8, 0x59, 0xed, 0x9c,
	0x73, 0x7e, 0xc7, 0xe7, 0xff, 0xb1, 0xc9, 0xa6, 0xb2, 0xba, 0x60, 0xf6, 0x94, 0x39, 0xa5, 0x55,
	0xa9, 0x4e, 0xce, 0xfb, 0xda, 0x28, 0xa7, 0xe8, 0xeb, 0x28, 0x13, 0x36, 0x53, 0x4c, 0x28, 0xcb,
	0xce, 0x0c, 0x13, 0x7a, 0xbc, 0xc7, 0x40, 0x54, 0x69, 0x6e, 0xfa, 0xfe, 0x9f, 0x17, 0xcc, 0xb8,
	0xb5, 0xdc, 0xd6, 0xff, 0xfa, 0x63, 0x53, 0xc0, 0x4f, 0xdf, 0xa8, 0x91, 0xe3, 0x4c, 0xc8, 0x42,
	0x99, 0x2a, 0x75, 0x42, 0xc9, 0x40, 0x49, 0x0d, 0x4f, 0x6d, 0xeb, 0x7f, 0x3f, 0x53, 0x52, 0xf2,
	0xcc, 0xf1, 0x9c, 0xb5, 0x05, 0xde, 0x44, 0xed, 0xfd, 0x18, 0x91, 0xeb, 0xb3, 0xc6, 0xb2, 0x2f,
	0x0f, 0xbe, 0x1a, 0xd2, 0xb7, 0xc9, 0x4a, 0xb0, 0x80, 0xc9, 0xb4, 0xe2, 0x71, 0xb4, 0x13, 0xed,
	0x2e, 0x27, 0xdd, 0x40, 0x7b, 0x9a, 0x56, 0x9c, 0x6e, 0x93, 0xce, 0xd8, 0x14, 0xc8, 0xbe, 0x04,
	0xec, 0xa5, 0xb1, 0x29, 0x80, 0xb5, 0x45, 0x96, 0xbc, 0x7e, 0x26, 0xf2, 0x78, 0x61, 0x27, 0xda,
	0x5d, 0x4d, 0x16, 0xfd, 0xe7, 0x20, 0xa7, 0x9b, 0x64, 0x51, 0x1b, 0x5e, 0x88, 0xb3, 0xf8, 0x32,
	0x20, 0xc2, 0x17, 0x7d, 0x87, 0xac, 0xe2, 0x3f, 0x56, 0x72, 0x79, 0xe2, 0x4e, 0xe3, 0xff, 0x01,
	0x6c, 0x05, 0x89, 0x8f, 0x81, 0xd6, 0x3b, 0x24, 0x2b, 0x13, 0x63, 0x45, 0xc5, 0xbd, 0x32, 0xcb,
	0x33, 0x25, 0x73, 0xb0, 0x6e, 0x35, 0x09, 0x5f, 0xf4, 0x2d, 0x42, 0x64, 0x2a, 0x55, 0xe0, 0x5d,
	0x02, 0x5e, 0x8b, 0xd2, 0xfb, 0x67, 0x89, 0xd0, 0x96, 0xd7, 0x2c, 0x53, 0x55, 0xa5, 0x24, 0xed,
	0x91, 0xd5, 0x26, 0x34, 0xde, 0x74, 0xd4, 0xda, 0x05, 0xe2, 0x3e, 0xda, 0xff, 0x2e, 0x59, 0x43,
	0x19, 0xc7, 0x59, 0xc5, 0x9d, 0x11, 0x59, 0xd0, 0x8f, 0xd0, 0x23, 0xfe, 0x04, 0x88, 0xf4, 0x7d,
	0xb2, 0x81, 0x72, 0x46, 0x1c, 0xb3, 0x31, 0x37, 0x56, 0x28, 0x19, 0x42, 0x81, 0x0a, 0x12, 0x71,
	0xfc, 0x02, 0xc9, 0x8d, 0xac, 0x37, 0xa9, 0x96, 0xf5, 0xe1, 0xb9, 0x1c, 0x64, 0x87, 0xba, 0xa8,
	0x65, 0xf7, 0xc8, 0x26, 0xca, 0x16, 0xca, 0xbc, 0x4c, 0x4d, 0xce, 0x72, 0x61, 0x5d, 0x2a, 0x33,
	0x1e, 0x02, 0x76, 0x0d, 0xb8, 0x87, 0xc8, 0xfc, 0x3c, 0xf0, 0x7c, 0x32, 0xc3, 0x09, 0x6a, 0x64,
	0x32, 0x1e, 0x2f, 0xb6, 0x1c, 0x1b, 0x02, 0x89, 0xfe, 0x16, 0xd5, 0x56, 0x8c, 0x74, 0x9e, 0x7a,
	0x07, 0x45, 0xc5, 0xe3, 0xa5, 0x9d, 0x68, 0xb7, 0x7b, 0xf7, 0x9b, 0xa8, 0x7f, 0xc1, 0x0a, 0xb7,
	0xdf, 0xae, 0x83, 0x10, 0xa5, 0xe7, 0x60, 0xf7, 0x91, 0x2f, 0x8c, 0x5f, 0xa2, 0x3a, 0x4d, 0x45,
	0x2a, 0x4a, 0x74, 0xa5, 0xf3, 0x9f, 0x70, 0x05, 0xcb, 0xe8, 0x30, 0x15, 0x25, 0x38, 0xf2, 0x01,
	0xa1, 0x4d, 0x69, 0x68, 0x23, 0x94, 0x11, 0xee, 0x3c, 0x5e, 0x86, 0xf4, 0xad, 0xd7, 0xb5, 0xf1,
	0x2c, 0xd0, 0x69, 0x9f, 0x5c, 0x0d, 0x7a, 0x47, 0x4e, 0x31, 0x7e, 0x96, 0x95, 0xa3, 0x9c, 0xe7,
	0x31, 0xd9, 0x89, 0x76, 0x3b, 0x09, 0x66, 0x77, 0x7f, 0xe4, 0xd4, 0x41, 0x60, 0xd0, 0x4f, 0xc9,
	0xcd, 0xa0, 0xdd, 0x38, 0xce, 0x42, 0xff, 0x19, 0x7e, 0x22, 0xac, 0xe3, 0x86, 0xe7, 0x71, 0x17,
	0x80, 0xdb, 0x78, 0x8e, 0x71, 0xfc, 0x19, 0x48, 0x24, 0x13, 0x01, 0xfa, 0x31, 0xd9, 0x6e, 0x29,
	0x90, 0xc7, 0xa6, 0x8d, 0x5e, 0x01, 0x2b, 0x37, 0x27, 0xe8, 0xa7, 0xc7, 0xa6, 0x05, 0xdd, 0x25,
	0x68, 0x3f, 0x2b, 0xd3, 0x63, 0x5e, 0x32, 0x77, 0xae, 0x79, 0xbc, 0x0a, 0x88, 0x2b, 0x40, 0x7f,
	0xec, 0xc9, 0x47, 0xe7, 0x9a, 0xd3, 0xdb, 0xa4, 0xdb, 0x92, 0x8c, 0xaf, 0x60, 0x3b, 0x37, 0x42,
	0x8d, 0x2a, 0xeb, 0xa3, 0x84, 0x52, 0x6b, 0x2d, 0x55, 0x43, 0xab, 0x0b, 0x90, 0xec, 0xbd, 0x8e,
	0xc8, 0x95, 0x3a, 0xdc, 0x86, 0x6b, 0xc6, 0x4b, 0x68, 0x3e, 0xae, 0x53, 0x61, 0x18, 0x2f, 0x79,
	0xc5, 0xa5, 0xab, 0x1b, 0x7f, 0x39, 0x59, 0x43, 0xc6, 0x01, 0xd2, 0x07, 0x39, 0xb4, 0x11, 0xca,
	0xe2, 0x21, 0x97, 0x42, 0x1b, 0x01, 0x0d, 0x6d, 0xf1, 0x29, 0x98, 0x56, 0x07, 0x9e, 0x61, 0xe7,
	0x6f, 0x4c, 0x29, 0xf4, 0xce, 0xf5, 0xbe, 0x5e, 0x68, 0x06, 0xb0, 0x35, 0x6c, 0x54, 0x2a, 0xa5,
	0x99, 0x4e, 0xdd, 0x29, 0xfd, 0x3d, 0x22, 0xeb, 0x95, 0xc8, 0x8c, 0x02, 0x12, 0x22, 0xe3, 0x68,
	0x67, 0x61, 0xb7, 0x7b, 0xf7, 0xdb, 0x8b, 0x5b, 0xc4, 0x18, 0xd5, 0x64, 0x6d, 0x62, 0x79, 0x02,
	0x86, 0xd3, 0x87, 0xe4, 0xc6, 0xac, 0x33, 0xac, 0x14, 0xd6, 0x31, 0x2b, 0x5e, 0xf1, 0x10, 0xc8,
	0xad, 0x19, 0xd0, 0x63, 0x61, 0xdd, 0x50, 0xbc, 0xe2, 0xf4, 0x80, 0xdc, 0x6e, 0xc0, 0x6e, 0x24,
	0x25, 0x2f, 0x99, 0x90, 0x8e, 0x9b, 0x22, 0xcd, 0x38, 0xee, 0x9f, 0x05, 0xc8, 0xd8, 0xcd, 0x89,
	0xd8, 0x11, 0x48, 0x0d, 0x6a, 0x21, 0x58, 0x4a, 0x77, 0xc8, 0xb5, 0x46, 0x8d, 0xf5, 0x63, 0xda,
	0xf9, 0xbe, 0x82, 0x51, 0xdb, 0x49, 0xe8, 0x84, 0x37, 0x04, 0xd6, 0x50, 0x17, 0xbd, 0x3f, 0x22,
	0xb2, 0x5e, 0x7b, 0x26, 0xe5, 0x29, 0xc4, 0x8c, 0x3e, 0x22, 0x37, 0x25, 0x17, 0x27, 0xa7, 0xc7,
	0xca, 0x30, 0xc9, 0xcf, 0x1c, 0x3b, 0x55, 0x9a, 0x8d, 0xd3, 0x72, 0xc4, 0x31, 0xd7, 0x58, 0x3c,
	0x71, 0x2d, 0xf3, 0x94, 0x9f, 0xb9, 0x2f, 0x94, 0x7e, 0xe1, 0x05, 0xa0, 0x9e, 0x1f, 0x90, 0xed,
	0x79, 0xbc, 0xd0, 0x2c, 0xcd, 0x73, 0x13, 0xf6, 0xe8, 0xf5, 0x19, 0xf0, 0x40, 0xef, 0xe7, 0xb9,
	0x79, 0xf3, 0xc9, 0x42, 0xba, 0x82, 0x09, 0x99, 0xf3, 0xb3, 0x50, 0x65, 0xb3, 0x27, 0x0f, 0xa4,
	0x2b, 0x06, 0x9e, 0xdf, 0xfb, 0x75, 0xb9, 0x71, 0xc7, 0xd5, 0x75, 0x76, 0x87, 0x5c, 0xab, 0x0b,
	0x62, 0x2a, 0xa2, 0xe8, 0x06, 0x8e, 0x9f, 0xe9, 0x38, 0x3e, 0x24, 0x37, 0x66, 0x11, 0x56, 0x56,
	0x3a, 0x18, 0x11, 0x72, 0x39, 0x8d, 0x1b, 0xca, 0x4a, 0x83, 0x0d, 0xf4, 0x5e, 0xbd, 0xc0, 0x26,
	0x0e, 0x78, 0xbf, 0xb9, 0xb5, 0x21, 0x85, 0x38, 0xc1, 0x82, 0xe9, 0xfb, 0xc8, 0x9a, 0xdb, 0x5f,
	0x78, 0x77, 0x98, 0xda, 0x5f, 0xcd, 0x94, 0xb0, 0xa9, 0xc8, 0x61, 0x1b, 0x2e, 0xd7, 0x53, 0xc2,
	0x53, 0xe8, 0x27, 0xb5, 0xd5, 0xde, 0x6b, 0x26, 0x2c, 0xab, 0xb2, 0xd4, 0x3a, 0xef, 0x43, 0x9a,
	0x39, 0xd8, 0x88, 0x9d, 0x30, 0xac, 0x9e, 0xa5, 0xee, 0x74, 0x60, 0x9f, 0x78, 0xf6, 0x00, 0xb8,
	0x74, 0x8f, 0x6c, 0x4d, 0x63, 0x47, 0x59, 0x85, 0xe1, 0x83, 0x0d, 0xd9, 0x09, 0x56, 0x23, 0xf0,
	0x79, 0x56, 0x69, 0xff, 0xaf, 0xb1, 0x3a, 0x5c, 0x14, 0x3a, 0xad, 0xad, 0x1b, 0xae, 0x09, 0xdb,
	0xa4, 0x53, 0xda, 0x14, 0xeb, 0x06, 0xa7, 0xfa, 0x52, 0x69, 0x53, 0x28, 0x93, 0xd6, 0x15, 0x8a,
	0x4c, 0x5d, 0xa1, 0x6e, 0x93, 0x2e, 0x30, 0xb0, 0x7d, 0xc3, 0x90, 0x26, 0x9e, 0x74, 0x08, 0x14,
	0xfa, 0x77, 0x44, 0xfe, 0x6f, 0x0d, 0x6b, 0x6a, 0x3d, 0x1d, 0x2b, 0x91, 0xfb, 0x8b, 0x00, 0x9a,
	0xbc, 0x02, 0x9b, 0xf0, 0x87, 0x8b, 0x3b, 0x44, 0xa6, 0x06, 0x61, 0x12, 0x5b, 0xf3, 0xa4, 0x76,
	0x65, 0xbf, 0xf6, 0x04, 0x02, 0x3c, 0xb9, 0xb0, 0x61, 0x5a, 0xf2, 0xb0, 0x40, 0xba, 0x4d, 0x32,
	0xfc, 0x8a, 0x9a, 0x49, 0xbb, 0xb1, 0x63, 0xcd, 0xc2, 0x37, 0x2c, 0x93, 0x4e, 0x72, 0xbd, 0x95,
	0xbd, 0xc4, 0x8e, 0xf5, 0x11, 0xaa, 0xbf, 0x4f, 0xe2, 0x69, 0xa8, 0x35, 0x13, 0xe0, 0xda, 0x5c,
	0xda, 0x87, 0x26, 0xc0, 0xe6, 0x4e, 0xb4, 0x06, 0x76, 0x31, 0x02, 0xd7, 0xe7, 0x4e, 0x1c, 0x1a,
	0xbf, 0x90, 0x01, 0xfa, 0x88, 0xdc, 0x7a, 0xd3, 0x89, 0xb0, 0xd7, 0x00, 0xbd, 0x01, 0xe8, 0xad,
	0x99, 0x63, 0xfd, 0x82, 0x03, 0xfc, 0x9f, 0x11, 0xd9, 0x98, 0x9b, 0x10, 0x31, 0x85, 0xa5, 0xf1,
	0xdd, 0xc5, 0xcd, 0x77, 0x3d, 0x5a, 0x93, 0xb5, 0x99, 0xd1, 0xe5, 0x6f, 0xf8, 0x2f, 0x3d, 0xc9,
	0xc5, 0x57, 0xb1, 0x07, 0xf0, 0xab, 0xf7, 0xd7, 0xe5, 0xa9, 0x49, 0x06, 0xef, 0x96, 0xa6, 0xdf,
	0xc2, 0x0b, 0xe3, 0x6e, 0x6b, 0x4a, 0xe0, 0xd5, 0xa5, 0xb9, 0x21, 0x4d, 0x3f, 0x36, 0xee, 0x85,
	0xf5, 0xdc, 0x48, 0xe2, 0x8b, 0x63, 0xae, 0x85, 0xf7, 0xe6, 0x5b, 0xf8, 0x16, 0x21, 0xe1, 0x45,
	0xe0, 0x9b, 0xf8, 0x3e, 0x9c, 0xb9, 0x8c, 0x8f, 0x01, 0xdf, 0xc6, 0xef, 0xd5, 0x37, 0xd1, 0x49,
	0x04, 0xe2, 0x0f, 0x21, 0x89, 0x78, 0x37, 0xf9, 0xac, 0xa6, 0xd2, 0x9f, 0xa3, 0x5a, 0x91, 0x0f,
	0x45, 0xfc, 0x11, 0x34, 0xe9, 0xf7, 0x17, 0xf8, 0xba, 0x3a, 0x79, 0x38, 0x05, 0x77, 0x07, 0x7e,
	0x39, 0xfe, 0x34, 0xf1, 0x02, 0xea, 0xf5, 0xc1, 0x45, 0x2f, 0xbd, 0x7a, 0x0d, 0x06, 0x1f, 0x7c,
	0x17, 0x1d, 0x2f, 0xc2, 0x6b, 0xfd, 0xde, 0xbf, 0x01, 0x00, 0x00, 0xff, 0xff, 0xf4, 0x60, 0x45,
	0xba, 0xc7, 0x0f, 0x00, 0x00,
}
