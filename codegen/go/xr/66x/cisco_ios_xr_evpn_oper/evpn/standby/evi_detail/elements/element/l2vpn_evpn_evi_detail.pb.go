/*
Copyright 2019 Cisco Systems

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: l2vpn_evpn_evi_detail.proto

package cisco_ios_xr_evpn_oper_evpn_standby_evi_detail_elements_element

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type L2VpnEvpnEviDetail_KEYS struct {
	Evi                  uint32   `protobuf:"varint,1,opt,name=evi,proto3" json:"evi,omitempty"`
	Encapsulation        uint32   `protobuf:"varint,2,opt,name=encapsulation,proto3" json:"encapsulation,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *L2VpnEvpnEviDetail_KEYS) Reset()         { *m = L2VpnEvpnEviDetail_KEYS{} }
func (m *L2VpnEvpnEviDetail_KEYS) String() string { return proto.CompactTextString(m) }
func (*L2VpnEvpnEviDetail_KEYS) ProtoMessage()    {}
func (*L2VpnEvpnEviDetail_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_5c6cf984c5964754, []int{0}
}

func (m *L2VpnEvpnEviDetail_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_L2VpnEvpnEviDetail_KEYS.Unmarshal(m, b)
}
func (m *L2VpnEvpnEviDetail_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_L2VpnEvpnEviDetail_KEYS.Marshal(b, m, deterministic)
}
func (m *L2VpnEvpnEviDetail_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_L2VpnEvpnEviDetail_KEYS.Merge(m, src)
}
func (m *L2VpnEvpnEviDetail_KEYS) XXX_Size() int {
	return xxx_messageInfo_L2VpnEvpnEviDetail_KEYS.Size(m)
}
func (m *L2VpnEvpnEviDetail_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_L2VpnEvpnEviDetail_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_L2VpnEvpnEviDetail_KEYS proto.InternalMessageInfo

func (m *L2VpnEvpnEviDetail_KEYS) GetEvi() uint32 {
	if m != nil {
		return m.Evi
	}
	return 0
}

func (m *L2VpnEvpnEviDetail_KEYS) GetEncapsulation() uint32 {
	if m != nil {
		return m.Encapsulation
	}
	return 0
}

type L2VpnEvpnEviSummary struct {
	EthernetVpnId        uint32   `protobuf:"varint,1,opt,name=ethernet_vpn_id,json=ethernetVpnId,proto3" json:"ethernet_vpn_id,omitempty"`
	EncapsulationXr      uint32   `protobuf:"varint,2,opt,name=encapsulation_xr,json=encapsulationXr,proto3" json:"encapsulation_xr,omitempty"`
	BdName               string   `protobuf:"bytes,3,opt,name=bd_name,json=bdName,proto3" json:"bd_name,omitempty"`
	Type                 string   `protobuf:"bytes,4,opt,name=type,proto3" json:"type,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *L2VpnEvpnEviSummary) Reset()         { *m = L2VpnEvpnEviSummary{} }
func (m *L2VpnEvpnEviSummary) String() string { return proto.CompactTextString(m) }
func (*L2VpnEvpnEviSummary) ProtoMessage()    {}
func (*L2VpnEvpnEviSummary) Descriptor() ([]byte, []int) {
	return fileDescriptor_5c6cf984c5964754, []int{1}
}

func (m *L2VpnEvpnEviSummary) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_L2VpnEvpnEviSummary.Unmarshal(m, b)
}
func (m *L2VpnEvpnEviSummary) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_L2VpnEvpnEviSummary.Marshal(b, m, deterministic)
}
func (m *L2VpnEvpnEviSummary) XXX_Merge(src proto.Message) {
	xxx_messageInfo_L2VpnEvpnEviSummary.Merge(m, src)
}
func (m *L2VpnEvpnEviSummary) XXX_Size() int {
	return xxx_messageInfo_L2VpnEvpnEviSummary.Size(m)
}
func (m *L2VpnEvpnEviSummary) XXX_DiscardUnknown() {
	xxx_messageInfo_L2VpnEvpnEviSummary.DiscardUnknown(m)
}

var xxx_messageInfo_L2VpnEvpnEviSummary proto.InternalMessageInfo

func (m *L2VpnEvpnEviSummary) GetEthernetVpnId() uint32 {
	if m != nil {
		return m.EthernetVpnId
	}
	return 0
}

func (m *L2VpnEvpnEviSummary) GetEncapsulationXr() uint32 {
	if m != nil {
		return m.EncapsulationXr
	}
	return 0
}

func (m *L2VpnEvpnEviSummary) GetBdName() string {
	if m != nil {
		return m.BdName
	}
	return ""
}

func (m *L2VpnEvpnEviSummary) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

type L2VpnEvpnFlowLabel struct {
	StaticFlowLabel      bool     `protobuf:"varint,1,opt,name=static_flow_label,json=staticFlowLabel,proto3" json:"static_flow_label,omitempty"`
	GlobalFlowLabel      bool     `protobuf:"varint,2,opt,name=global_flow_label,json=globalFlowLabel,proto3" json:"global_flow_label,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *L2VpnEvpnFlowLabel) Reset()         { *m = L2VpnEvpnFlowLabel{} }
func (m *L2VpnEvpnFlowLabel) String() string { return proto.CompactTextString(m) }
func (*L2VpnEvpnFlowLabel) ProtoMessage()    {}
func (*L2VpnEvpnFlowLabel) Descriptor() ([]byte, []int) {
	return fileDescriptor_5c6cf984c5964754, []int{2}
}

func (m *L2VpnEvpnFlowLabel) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_L2VpnEvpnFlowLabel.Unmarshal(m, b)
}
func (m *L2VpnEvpnFlowLabel) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_L2VpnEvpnFlowLabel.Marshal(b, m, deterministic)
}
func (m *L2VpnEvpnFlowLabel) XXX_Merge(src proto.Message) {
	xxx_messageInfo_L2VpnEvpnFlowLabel.Merge(m, src)
}
func (m *L2VpnEvpnFlowLabel) XXX_Size() int {
	return xxx_messageInfo_L2VpnEvpnFlowLabel.Size(m)
}
func (m *L2VpnEvpnFlowLabel) XXX_DiscardUnknown() {
	xxx_messageInfo_L2VpnEvpnFlowLabel.DiscardUnknown(m)
}

var xxx_messageInfo_L2VpnEvpnFlowLabel proto.InternalMessageInfo

func (m *L2VpnEvpnFlowLabel) GetStaticFlowLabel() bool {
	if m != nil {
		return m.StaticFlowLabel
	}
	return false
}

func (m *L2VpnEvpnFlowLabel) GetGlobalFlowLabel() bool {
	if m != nil {
		return m.GlobalFlowLabel
	}
	return false
}

type L2VpnRdAuto struct {
	RouterId             string   `protobuf:"bytes,1,opt,name=router_id,json=routerId,proto3" json:"router_id,omitempty"`
	AutoIndex            uint32   `protobuf:"varint,2,opt,name=auto_index,json=autoIndex,proto3" json:"auto_index,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *L2VpnRdAuto) Reset()         { *m = L2VpnRdAuto{} }
func (m *L2VpnRdAuto) String() string { return proto.CompactTextString(m) }
func (*L2VpnRdAuto) ProtoMessage()    {}
func (*L2VpnRdAuto) Descriptor() ([]byte, []int) {
	return fileDescriptor_5c6cf984c5964754, []int{3}
}

func (m *L2VpnRdAuto) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_L2VpnRdAuto.Unmarshal(m, b)
}
func (m *L2VpnRdAuto) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_L2VpnRdAuto.Marshal(b, m, deterministic)
}
func (m *L2VpnRdAuto) XXX_Merge(src proto.Message) {
	xxx_messageInfo_L2VpnRdAuto.Merge(m, src)
}
func (m *L2VpnRdAuto) XXX_Size() int {
	return xxx_messageInfo_L2VpnRdAuto.Size(m)
}
func (m *L2VpnRdAuto) XXX_DiscardUnknown() {
	xxx_messageInfo_L2VpnRdAuto.DiscardUnknown(m)
}

var xxx_messageInfo_L2VpnRdAuto proto.InternalMessageInfo

func (m *L2VpnRdAuto) GetRouterId() string {
	if m != nil {
		return m.RouterId
	}
	return ""
}

func (m *L2VpnRdAuto) GetAutoIndex() uint32 {
	if m != nil {
		return m.AutoIndex
	}
	return 0
}

type L2VpnRd_2ByteAs struct {
	TwoByteAs            uint32   `protobuf:"varint,1,opt,name=two_byte_as,json=twoByteAs,proto3" json:"two_byte_as,omitempty"`
	FourByteIndex        uint32   `protobuf:"varint,2,opt,name=four_byte_index,json=fourByteIndex,proto3" json:"four_byte_index,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *L2VpnRd_2ByteAs) Reset()         { *m = L2VpnRd_2ByteAs{} }
func (m *L2VpnRd_2ByteAs) String() string { return proto.CompactTextString(m) }
func (*L2VpnRd_2ByteAs) ProtoMessage()    {}
func (*L2VpnRd_2ByteAs) Descriptor() ([]byte, []int) {
	return fileDescriptor_5c6cf984c5964754, []int{4}
}

func (m *L2VpnRd_2ByteAs) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_L2VpnRd_2ByteAs.Unmarshal(m, b)
}
func (m *L2VpnRd_2ByteAs) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_L2VpnRd_2ByteAs.Marshal(b, m, deterministic)
}
func (m *L2VpnRd_2ByteAs) XXX_Merge(src proto.Message) {
	xxx_messageInfo_L2VpnRd_2ByteAs.Merge(m, src)
}
func (m *L2VpnRd_2ByteAs) XXX_Size() int {
	return xxx_messageInfo_L2VpnRd_2ByteAs.Size(m)
}
func (m *L2VpnRd_2ByteAs) XXX_DiscardUnknown() {
	xxx_messageInfo_L2VpnRd_2ByteAs.DiscardUnknown(m)
}

var xxx_messageInfo_L2VpnRd_2ByteAs proto.InternalMessageInfo

func (m *L2VpnRd_2ByteAs) GetTwoByteAs() uint32 {
	if m != nil {
		return m.TwoByteAs
	}
	return 0
}

func (m *L2VpnRd_2ByteAs) GetFourByteIndex() uint32 {
	if m != nil {
		return m.FourByteIndex
	}
	return 0
}

type L2VpnRd_4ByteAs struct {
	FourByteAs           uint32   `protobuf:"varint,1,opt,name=four_byte_as,json=fourByteAs,proto3" json:"four_byte_as,omitempty"`
	TwoByteIndex         uint32   `protobuf:"varint,2,opt,name=two_byte_index,json=twoByteIndex,proto3" json:"two_byte_index,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *L2VpnRd_4ByteAs) Reset()         { *m = L2VpnRd_4ByteAs{} }
func (m *L2VpnRd_4ByteAs) String() string { return proto.CompactTextString(m) }
func (*L2VpnRd_4ByteAs) ProtoMessage()    {}
func (*L2VpnRd_4ByteAs) Descriptor() ([]byte, []int) {
	return fileDescriptor_5c6cf984c5964754, []int{5}
}

func (m *L2VpnRd_4ByteAs) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_L2VpnRd_4ByteAs.Unmarshal(m, b)
}
func (m *L2VpnRd_4ByteAs) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_L2VpnRd_4ByteAs.Marshal(b, m, deterministic)
}
func (m *L2VpnRd_4ByteAs) XXX_Merge(src proto.Message) {
	xxx_messageInfo_L2VpnRd_4ByteAs.Merge(m, src)
}
func (m *L2VpnRd_4ByteAs) XXX_Size() int {
	return xxx_messageInfo_L2VpnRd_4ByteAs.Size(m)
}
func (m *L2VpnRd_4ByteAs) XXX_DiscardUnknown() {
	xxx_messageInfo_L2VpnRd_4ByteAs.DiscardUnknown(m)
}

var xxx_messageInfo_L2VpnRd_4ByteAs proto.InternalMessageInfo

func (m *L2VpnRd_4ByteAs) GetFourByteAs() uint32 {
	if m != nil {
		return m.FourByteAs
	}
	return 0
}

func (m *L2VpnRd_4ByteAs) GetTwoByteIndex() uint32 {
	if m != nil {
		return m.TwoByteIndex
	}
	return 0
}

type L2VpnRdV4Addr struct {
	Ipv4Address          string   `protobuf:"bytes,1,opt,name=ipv4_address,json=ipv4Address,proto3" json:"ipv4_address,omitempty"`
	TwoByteIndex         uint32   `protobuf:"varint,2,opt,name=two_byte_index,json=twoByteIndex,proto3" json:"two_byte_index,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *L2VpnRdV4Addr) Reset()         { *m = L2VpnRdV4Addr{} }
func (m *L2VpnRdV4Addr) String() string { return proto.CompactTextString(m) }
func (*L2VpnRdV4Addr) ProtoMessage()    {}
func (*L2VpnRdV4Addr) Descriptor() ([]byte, []int) {
	return fileDescriptor_5c6cf984c5964754, []int{6}
}

func (m *L2VpnRdV4Addr) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_L2VpnRdV4Addr.Unmarshal(m, b)
}
func (m *L2VpnRdV4Addr) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_L2VpnRdV4Addr.Marshal(b, m, deterministic)
}
func (m *L2VpnRdV4Addr) XXX_Merge(src proto.Message) {
	xxx_messageInfo_L2VpnRdV4Addr.Merge(m, src)
}
func (m *L2VpnRdV4Addr) XXX_Size() int {
	return xxx_messageInfo_L2VpnRdV4Addr.Size(m)
}
func (m *L2VpnRdV4Addr) XXX_DiscardUnknown() {
	xxx_messageInfo_L2VpnRdV4Addr.DiscardUnknown(m)
}

var xxx_messageInfo_L2VpnRdV4Addr proto.InternalMessageInfo

func (m *L2VpnRdV4Addr) GetIpv4Address() string {
	if m != nil {
		return m.Ipv4Address
	}
	return ""
}

func (m *L2VpnRdV4Addr) GetTwoByteIndex() uint32 {
	if m != nil {
		return m.TwoByteIndex
	}
	return 0
}

type L2VpnRd struct {
	Rd                   string           `protobuf:"bytes,1,opt,name=rd,proto3" json:"rd,omitempty"`
	Auto                 *L2VpnRdAuto     `protobuf:"bytes,2,opt,name=auto,proto3" json:"auto,omitempty"`
	TwoByteAs            *L2VpnRd_2ByteAs `protobuf:"bytes,3,opt,name=two_byte_as,json=twoByteAs,proto3" json:"two_byte_as,omitempty"`
	FourByteAs           *L2VpnRd_4ByteAs `protobuf:"bytes,4,opt,name=four_byte_as,json=fourByteAs,proto3" json:"four_byte_as,omitempty"`
	V4Addr               *L2VpnRdV4Addr   `protobuf:"bytes,5,opt,name=v4_addr,json=v4Addr,proto3" json:"v4_addr,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *L2VpnRd) Reset()         { *m = L2VpnRd{} }
func (m *L2VpnRd) String() string { return proto.CompactTextString(m) }
func (*L2VpnRd) ProtoMessage()    {}
func (*L2VpnRd) Descriptor() ([]byte, []int) {
	return fileDescriptor_5c6cf984c5964754, []int{7}
}

func (m *L2VpnRd) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_L2VpnRd.Unmarshal(m, b)
}
func (m *L2VpnRd) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_L2VpnRd.Marshal(b, m, deterministic)
}
func (m *L2VpnRd) XXX_Merge(src proto.Message) {
	xxx_messageInfo_L2VpnRd.Merge(m, src)
}
func (m *L2VpnRd) XXX_Size() int {
	return xxx_messageInfo_L2VpnRd.Size(m)
}
func (m *L2VpnRd) XXX_DiscardUnknown() {
	xxx_messageInfo_L2VpnRd.DiscardUnknown(m)
}

var xxx_messageInfo_L2VpnRd proto.InternalMessageInfo

func (m *L2VpnRd) GetRd() string {
	if m != nil {
		return m.Rd
	}
	return ""
}

func (m *L2VpnRd) GetAuto() *L2VpnRdAuto {
	if m != nil {
		return m.Auto
	}
	return nil
}

func (m *L2VpnRd) GetTwoByteAs() *L2VpnRd_2ByteAs {
	if m != nil {
		return m.TwoByteAs
	}
	return nil
}

func (m *L2VpnRd) GetFourByteAs() *L2VpnRd_4ByteAs {
	if m != nil {
		return m.FourByteAs
	}
	return nil
}

func (m *L2VpnRd) GetV4Addr() *L2VpnRdV4Addr {
	if m != nil {
		return m.V4Addr
	}
	return nil
}

type L2VpnRt_2ByteAs struct {
	TwoByteAs            uint32   `protobuf:"varint,1,opt,name=two_byte_as,json=twoByteAs,proto3" json:"two_byte_as,omitempty"`
	FourByteIndex        uint32   `protobuf:"varint,2,opt,name=four_byte_index,json=fourByteIndex,proto3" json:"four_byte_index,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *L2VpnRt_2ByteAs) Reset()         { *m = L2VpnRt_2ByteAs{} }
func (m *L2VpnRt_2ByteAs) String() string { return proto.CompactTextString(m) }
func (*L2VpnRt_2ByteAs) ProtoMessage()    {}
func (*L2VpnRt_2ByteAs) Descriptor() ([]byte, []int) {
	return fileDescriptor_5c6cf984c5964754, []int{8}
}

func (m *L2VpnRt_2ByteAs) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_L2VpnRt_2ByteAs.Unmarshal(m, b)
}
func (m *L2VpnRt_2ByteAs) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_L2VpnRt_2ByteAs.Marshal(b, m, deterministic)
}
func (m *L2VpnRt_2ByteAs) XXX_Merge(src proto.Message) {
	xxx_messageInfo_L2VpnRt_2ByteAs.Merge(m, src)
}
func (m *L2VpnRt_2ByteAs) XXX_Size() int {
	return xxx_messageInfo_L2VpnRt_2ByteAs.Size(m)
}
func (m *L2VpnRt_2ByteAs) XXX_DiscardUnknown() {
	xxx_messageInfo_L2VpnRt_2ByteAs.DiscardUnknown(m)
}

var xxx_messageInfo_L2VpnRt_2ByteAs proto.InternalMessageInfo

func (m *L2VpnRt_2ByteAs) GetTwoByteAs() uint32 {
	if m != nil {
		return m.TwoByteAs
	}
	return 0
}

func (m *L2VpnRt_2ByteAs) GetFourByteIndex() uint32 {
	if m != nil {
		return m.FourByteIndex
	}
	return 0
}

type L2VpnRt_4ByteAs struct {
	FourByteAs           uint32   `protobuf:"varint,1,opt,name=four_byte_as,json=fourByteAs,proto3" json:"four_byte_as,omitempty"`
	TwoByteIndex         uint32   `protobuf:"varint,2,opt,name=two_byte_index,json=twoByteIndex,proto3" json:"two_byte_index,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *L2VpnRt_4ByteAs) Reset()         { *m = L2VpnRt_4ByteAs{} }
func (m *L2VpnRt_4ByteAs) String() string { return proto.CompactTextString(m) }
func (*L2VpnRt_4ByteAs) ProtoMessage()    {}
func (*L2VpnRt_4ByteAs) Descriptor() ([]byte, []int) {
	return fileDescriptor_5c6cf984c5964754, []int{9}
}

func (m *L2VpnRt_4ByteAs) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_L2VpnRt_4ByteAs.Unmarshal(m, b)
}
func (m *L2VpnRt_4ByteAs) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_L2VpnRt_4ByteAs.Marshal(b, m, deterministic)
}
func (m *L2VpnRt_4ByteAs) XXX_Merge(src proto.Message) {
	xxx_messageInfo_L2VpnRt_4ByteAs.Merge(m, src)
}
func (m *L2VpnRt_4ByteAs) XXX_Size() int {
	return xxx_messageInfo_L2VpnRt_4ByteAs.Size(m)
}
func (m *L2VpnRt_4ByteAs) XXX_DiscardUnknown() {
	xxx_messageInfo_L2VpnRt_4ByteAs.DiscardUnknown(m)
}

var xxx_messageInfo_L2VpnRt_4ByteAs proto.InternalMessageInfo

func (m *L2VpnRt_4ByteAs) GetFourByteAs() uint32 {
	if m != nil {
		return m.FourByteAs
	}
	return 0
}

func (m *L2VpnRt_4ByteAs) GetTwoByteIndex() uint32 {
	if m != nil {
		return m.TwoByteIndex
	}
	return 0
}

type L2VpnRtV4Addr struct {
	Ipv4Address          string   `protobuf:"bytes,1,opt,name=ipv4_address,json=ipv4Address,proto3" json:"ipv4_address,omitempty"`
	TwoByteIndex         uint32   `protobuf:"varint,2,opt,name=two_byte_index,json=twoByteIndex,proto3" json:"two_byte_index,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *L2VpnRtV4Addr) Reset()         { *m = L2VpnRtV4Addr{} }
func (m *L2VpnRtV4Addr) String() string { return proto.CompactTextString(m) }
func (*L2VpnRtV4Addr) ProtoMessage()    {}
func (*L2VpnRtV4Addr) Descriptor() ([]byte, []int) {
	return fileDescriptor_5c6cf984c5964754, []int{10}
}

func (m *L2VpnRtV4Addr) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_L2VpnRtV4Addr.Unmarshal(m, b)
}
func (m *L2VpnRtV4Addr) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_L2VpnRtV4Addr.Marshal(b, m, deterministic)
}
func (m *L2VpnRtV4Addr) XXX_Merge(src proto.Message) {
	xxx_messageInfo_L2VpnRtV4Addr.Merge(m, src)
}
func (m *L2VpnRtV4Addr) XXX_Size() int {
	return xxx_messageInfo_L2VpnRtV4Addr.Size(m)
}
func (m *L2VpnRtV4Addr) XXX_DiscardUnknown() {
	xxx_messageInfo_L2VpnRtV4Addr.DiscardUnknown(m)
}

var xxx_messageInfo_L2VpnRtV4Addr proto.InternalMessageInfo

func (m *L2VpnRtV4Addr) GetIpv4Address() string {
	if m != nil {
		return m.Ipv4Address
	}
	return ""
}

func (m *L2VpnRtV4Addr) GetTwoByteIndex() uint32 {
	if m != nil {
		return m.TwoByteIndex
	}
	return 0
}

type L2VpnRtEsImport struct {
	HighBytes            uint32   `protobuf:"varint,1,opt,name=high_bytes,json=highBytes,proto3" json:"high_bytes,omitempty"`
	LowBytes             uint32   `protobuf:"varint,2,opt,name=low_bytes,json=lowBytes,proto3" json:"low_bytes,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *L2VpnRtEsImport) Reset()         { *m = L2VpnRtEsImport{} }
func (m *L2VpnRtEsImport) String() string { return proto.CompactTextString(m) }
func (*L2VpnRtEsImport) ProtoMessage()    {}
func (*L2VpnRtEsImport) Descriptor() ([]byte, []int) {
	return fileDescriptor_5c6cf984c5964754, []int{11}
}

func (m *L2VpnRtEsImport) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_L2VpnRtEsImport.Unmarshal(m, b)
}
func (m *L2VpnRtEsImport) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_L2VpnRtEsImport.Marshal(b, m, deterministic)
}
func (m *L2VpnRtEsImport) XXX_Merge(src proto.Message) {
	xxx_messageInfo_L2VpnRtEsImport.Merge(m, src)
}
func (m *L2VpnRtEsImport) XXX_Size() int {
	return xxx_messageInfo_L2VpnRtEsImport.Size(m)
}
func (m *L2VpnRtEsImport) XXX_DiscardUnknown() {
	xxx_messageInfo_L2VpnRtEsImport.DiscardUnknown(m)
}

var xxx_messageInfo_L2VpnRtEsImport proto.InternalMessageInfo

func (m *L2VpnRtEsImport) GetHighBytes() uint32 {
	if m != nil {
		return m.HighBytes
	}
	return 0
}

func (m *L2VpnRtEsImport) GetLowBytes() uint32 {
	if m != nil {
		return m.LowBytes
	}
	return 0
}

type L2VpnRt struct {
	Rt                   string           `protobuf:"bytes,1,opt,name=rt,proto3" json:"rt,omitempty"`
	TwoByteAs            *L2VpnRt_2ByteAs `protobuf:"bytes,2,opt,name=two_byte_as,json=twoByteAs,proto3" json:"two_byte_as,omitempty"`
	FourByteAs           *L2VpnRt_4ByteAs `protobuf:"bytes,3,opt,name=four_byte_as,json=fourByteAs,proto3" json:"four_byte_as,omitempty"`
	V4Addr               *L2VpnRtV4Addr   `protobuf:"bytes,4,opt,name=v4_addr,json=v4Addr,proto3" json:"v4_addr,omitempty"`
	EsImport             *L2VpnRtEsImport `protobuf:"bytes,5,opt,name=es_import,json=esImport,proto3" json:"es_import,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *L2VpnRt) Reset()         { *m = L2VpnRt{} }
func (m *L2VpnRt) String() string { return proto.CompactTextString(m) }
func (*L2VpnRt) ProtoMessage()    {}
func (*L2VpnRt) Descriptor() ([]byte, []int) {
	return fileDescriptor_5c6cf984c5964754, []int{12}
}

func (m *L2VpnRt) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_L2VpnRt.Unmarshal(m, b)
}
func (m *L2VpnRt) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_L2VpnRt.Marshal(b, m, deterministic)
}
func (m *L2VpnRt) XXX_Merge(src proto.Message) {
	xxx_messageInfo_L2VpnRt.Merge(m, src)
}
func (m *L2VpnRt) XXX_Size() int {
	return xxx_messageInfo_L2VpnRt.Size(m)
}
func (m *L2VpnRt) XXX_DiscardUnknown() {
	xxx_messageInfo_L2VpnRt.DiscardUnknown(m)
}

var xxx_messageInfo_L2VpnRt proto.InternalMessageInfo

func (m *L2VpnRt) GetRt() string {
	if m != nil {
		return m.Rt
	}
	return ""
}

func (m *L2VpnRt) GetTwoByteAs() *L2VpnRt_2ByteAs {
	if m != nil {
		return m.TwoByteAs
	}
	return nil
}

func (m *L2VpnRt) GetFourByteAs() *L2VpnRt_4ByteAs {
	if m != nil {
		return m.FourByteAs
	}
	return nil
}

func (m *L2VpnRt) GetV4Addr() *L2VpnRtV4Addr {
	if m != nil {
		return m.V4Addr
	}
	return nil
}

func (m *L2VpnRt) GetEsImport() *L2VpnRtEsImport {
	if m != nil {
		return m.EsImport
	}
	return nil
}

type L2VpnEvpnEviDetail struct {
	EviXr                          uint32               `protobuf:"varint,50,opt,name=evi_xr,json=eviXr,proto3" json:"evi_xr,omitempty"`
	EncapsulationXr                uint32               `protobuf:"varint,51,opt,name=encapsulation_xr,json=encapsulationXr,proto3" json:"encapsulation_xr,omitempty"`
	BdName                         string               `protobuf:"bytes,52,opt,name=bd_name,json=bdName,proto3" json:"bd_name,omitempty"`
	Type                           string               `protobuf:"bytes,53,opt,name=type,proto3" json:"type,omitempty"`
	EvpnInstance                   *L2VpnEvpnEviSummary `protobuf:"bytes,54,opt,name=evpn_instance,json=evpnInstance,proto3" json:"evpn_instance,omitempty"`
	Description                    string               `protobuf:"bytes,55,opt,name=description,proto3" json:"description,omitempty"`
	UnicastLabel                   uint32               `protobuf:"varint,56,opt,name=unicast_label,json=unicastLabel,proto3" json:"unicast_label,omitempty"`
	MulticastLabel                 uint32               `protobuf:"varint,57,opt,name=multicast_label,json=multicastLabel,proto3" json:"multicast_label,omitempty"`
	FlowLabel                      *L2VpnEvpnFlowLabel  `protobuf:"bytes,58,opt,name=flow_label,json=flowLabel,proto3" json:"flow_label,omitempty"`
	CwDisable                      bool                 `protobuf:"varint,59,opt,name=cw_disable,json=cwDisable,proto3" json:"cw_disable,omitempty"`
	TablePolicyName                string               `protobuf:"bytes,60,opt,name=table_policy_name,json=tablePolicyName,proto3" json:"table_policy_name,omitempty"`
	ForwardClass                   uint32               `protobuf:"varint,61,opt,name=forward_class,json=forwardClass,proto3" json:"forward_class,omitempty"`
	RdAuto                         *L2VpnRd             `protobuf:"bytes,62,opt,name=rd_auto,json=rdAuto,proto3" json:"rd_auto,omitempty"`
	RdConfigured                   *L2VpnRd             `protobuf:"bytes,63,opt,name=rd_configured,json=rdConfigured,proto3" json:"rd_configured,omitempty"`
	RtAuto                         *L2VpnRt             `protobuf:"bytes,64,opt,name=rt_auto,json=rtAuto,proto3" json:"rt_auto,omitempty"`
	RtImportBlockSet               bool                 `protobuf:"varint,65,opt,name=rt_import_block_set,json=rtImportBlockSet,proto3" json:"rt_import_block_set,omitempty"`
	RtExportBlockSet               bool                 `protobuf:"varint,66,opt,name=rt_export_block_set,json=rtExportBlockSet,proto3" json:"rt_export_block_set,omitempty"`
	AdvertiseMac                   bool                 `protobuf:"varint,67,opt,name=advertise_mac,json=advertiseMac,proto3" json:"advertise_mac,omitempty"`
	EtreeLeaf                      bool                 `protobuf:"varint,68,opt,name=etree_leaf,json=etreeLeaf,proto3" json:"etree_leaf,omitempty"`
	AdvertiseBviMac                bool                 `protobuf:"varint,69,opt,name=advertise_bvi_mac,json=advertiseBviMac,proto3" json:"advertise_bvi_mac,omitempty"`
	AliasingDisabled               bool                 `protobuf:"varint,70,opt,name=aliasing_disabled,json=aliasingDisabled,proto3" json:"aliasing_disabled,omitempty"`
	UnknownUnicastFloodingDisabled bool                 `protobuf:"varint,71,opt,name=unknown_unicast_flooding_disabled,json=unknownUnicastFloodingDisabled,proto3" json:"unknown_unicast_flooding_disabled,omitempty"`
	ReoriginateDisabled            bool                 `protobuf:"varint,72,opt,name=reoriginate_disabled,json=reoriginateDisabled,proto3" json:"reoriginate_disabled,omitempty"`
	Stitching                      bool                 `protobuf:"varint,73,opt,name=stitching,proto3" json:"stitching,omitempty"`
	MulticastSourceConnected       bool                 `protobuf:"varint,74,opt,name=multicast_source_connected,json=multicastSourceConnected,proto3" json:"multicast_source_connected,omitempty"`
	BgpImplicitImportDisabled      bool                 `protobuf:"varint,75,opt,name=bgp_implicit_import_disabled,json=bgpImplicitImportDisabled,proto3" json:"bgp_implicit_import_disabled,omitempty"`
	VrfName                        string               `protobuf:"bytes,76,opt,name=vrf_name,json=vrfName,proto3" json:"vrf_name,omitempty"`
	XXX_NoUnkeyedLiteral           struct{}             `json:"-"`
	XXX_unrecognized               []byte               `json:"-"`
	XXX_sizecache                  int32                `json:"-"`
}

func (m *L2VpnEvpnEviDetail) Reset()         { *m = L2VpnEvpnEviDetail{} }
func (m *L2VpnEvpnEviDetail) String() string { return proto.CompactTextString(m) }
func (*L2VpnEvpnEviDetail) ProtoMessage()    {}
func (*L2VpnEvpnEviDetail) Descriptor() ([]byte, []int) {
	return fileDescriptor_5c6cf984c5964754, []int{13}
}

func (m *L2VpnEvpnEviDetail) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_L2VpnEvpnEviDetail.Unmarshal(m, b)
}
func (m *L2VpnEvpnEviDetail) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_L2VpnEvpnEviDetail.Marshal(b, m, deterministic)
}
func (m *L2VpnEvpnEviDetail) XXX_Merge(src proto.Message) {
	xxx_messageInfo_L2VpnEvpnEviDetail.Merge(m, src)
}
func (m *L2VpnEvpnEviDetail) XXX_Size() int {
	return xxx_messageInfo_L2VpnEvpnEviDetail.Size(m)
}
func (m *L2VpnEvpnEviDetail) XXX_DiscardUnknown() {
	xxx_messageInfo_L2VpnEvpnEviDetail.DiscardUnknown(m)
}

var xxx_messageInfo_L2VpnEvpnEviDetail proto.InternalMessageInfo

func (m *L2VpnEvpnEviDetail) GetEviXr() uint32 {
	if m != nil {
		return m.EviXr
	}
	return 0
}

func (m *L2VpnEvpnEviDetail) GetEncapsulationXr() uint32 {
	if m != nil {
		return m.EncapsulationXr
	}
	return 0
}

func (m *L2VpnEvpnEviDetail) GetBdName() string {
	if m != nil {
		return m.BdName
	}
	return ""
}

func (m *L2VpnEvpnEviDetail) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *L2VpnEvpnEviDetail) GetEvpnInstance() *L2VpnEvpnEviSummary {
	if m != nil {
		return m.EvpnInstance
	}
	return nil
}

func (m *L2VpnEvpnEviDetail) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *L2VpnEvpnEviDetail) GetUnicastLabel() uint32 {
	if m != nil {
		return m.UnicastLabel
	}
	return 0
}

func (m *L2VpnEvpnEviDetail) GetMulticastLabel() uint32 {
	if m != nil {
		return m.MulticastLabel
	}
	return 0
}

func (m *L2VpnEvpnEviDetail) GetFlowLabel() *L2VpnEvpnFlowLabel {
	if m != nil {
		return m.FlowLabel
	}
	return nil
}

func (m *L2VpnEvpnEviDetail) GetCwDisable() bool {
	if m != nil {
		return m.CwDisable
	}
	return false
}

func (m *L2VpnEvpnEviDetail) GetTablePolicyName() string {
	if m != nil {
		return m.TablePolicyName
	}
	return ""
}

func (m *L2VpnEvpnEviDetail) GetForwardClass() uint32 {
	if m != nil {
		return m.ForwardClass
	}
	return 0
}

func (m *L2VpnEvpnEviDetail) GetRdAuto() *L2VpnRd {
	if m != nil {
		return m.RdAuto
	}
	return nil
}

func (m *L2VpnEvpnEviDetail) GetRdConfigured() *L2VpnRd {
	if m != nil {
		return m.RdConfigured
	}
	return nil
}

func (m *L2VpnEvpnEviDetail) GetRtAuto() *L2VpnRt {
	if m != nil {
		return m.RtAuto
	}
	return nil
}

func (m *L2VpnEvpnEviDetail) GetRtImportBlockSet() bool {
	if m != nil {
		return m.RtImportBlockSet
	}
	return false
}

func (m *L2VpnEvpnEviDetail) GetRtExportBlockSet() bool {
	if m != nil {
		return m.RtExportBlockSet
	}
	return false
}

func (m *L2VpnEvpnEviDetail) GetAdvertiseMac() bool {
	if m != nil {
		return m.AdvertiseMac
	}
	return false
}

func (m *L2VpnEvpnEviDetail) GetEtreeLeaf() bool {
	if m != nil {
		return m.EtreeLeaf
	}
	return false
}

func (m *L2VpnEvpnEviDetail) GetAdvertiseBviMac() bool {
	if m != nil {
		return m.AdvertiseBviMac
	}
	return false
}

func (m *L2VpnEvpnEviDetail) GetAliasingDisabled() bool {
	if m != nil {
		return m.AliasingDisabled
	}
	return false
}

func (m *L2VpnEvpnEviDetail) GetUnknownUnicastFloodingDisabled() bool {
	if m != nil {
		return m.UnknownUnicastFloodingDisabled
	}
	return false
}

func (m *L2VpnEvpnEviDetail) GetReoriginateDisabled() bool {
	if m != nil {
		return m.ReoriginateDisabled
	}
	return false
}

func (m *L2VpnEvpnEviDetail) GetStitching() bool {
	if m != nil {
		return m.Stitching
	}
	return false
}

func (m *L2VpnEvpnEviDetail) GetMulticastSourceConnected() bool {
	if m != nil {
		return m.MulticastSourceConnected
	}
	return false
}

func (m *L2VpnEvpnEviDetail) GetBgpImplicitImportDisabled() bool {
	if m != nil {
		return m.BgpImplicitImportDisabled
	}
	return false
}

func (m *L2VpnEvpnEviDetail) GetVrfName() string {
	if m != nil {
		return m.VrfName
	}
	return ""
}

func init() {
	proto.RegisterType((*L2VpnEvpnEviDetail_KEYS)(nil), "cisco_ios_xr_evpn_oper.evpn.standby.evi_detail.elements.element.l2vpn_evpn_evi_detail_KEYS")
	proto.RegisterType((*L2VpnEvpnEviSummary)(nil), "cisco_ios_xr_evpn_oper.evpn.standby.evi_detail.elements.element.l2vpn_evpn_evi_summary")
	proto.RegisterType((*L2VpnEvpnFlowLabel)(nil), "cisco_ios_xr_evpn_oper.evpn.standby.evi_detail.elements.element.l2vpn_evpn_flow_label")
	proto.RegisterType((*L2VpnRdAuto)(nil), "cisco_ios_xr_evpn_oper.evpn.standby.evi_detail.elements.element.l2vpn_rd_auto")
	proto.RegisterType((*L2VpnRd_2ByteAs)(nil), "cisco_ios_xr_evpn_oper.evpn.standby.evi_detail.elements.element.l2vpn_rd_2byte_as")
	proto.RegisterType((*L2VpnRd_4ByteAs)(nil), "cisco_ios_xr_evpn_oper.evpn.standby.evi_detail.elements.element.l2vpn_rd_4byte_as")
	proto.RegisterType((*L2VpnRdV4Addr)(nil), "cisco_ios_xr_evpn_oper.evpn.standby.evi_detail.elements.element.l2vpn_rd_v4addr")
	proto.RegisterType((*L2VpnRd)(nil), "cisco_ios_xr_evpn_oper.evpn.standby.evi_detail.elements.element.l2vpn_rd")
	proto.RegisterType((*L2VpnRt_2ByteAs)(nil), "cisco_ios_xr_evpn_oper.evpn.standby.evi_detail.elements.element.l2vpn_rt_2byte_as")
	proto.RegisterType((*L2VpnRt_4ByteAs)(nil), "cisco_ios_xr_evpn_oper.evpn.standby.evi_detail.elements.element.l2vpn_rt_4byte_as")
	proto.RegisterType((*L2VpnRtV4Addr)(nil), "cisco_ios_xr_evpn_oper.evpn.standby.evi_detail.elements.element.l2vpn_rt_v4addr")
	proto.RegisterType((*L2VpnRtEsImport)(nil), "cisco_ios_xr_evpn_oper.evpn.standby.evi_detail.elements.element.l2vpn_rt_es_import")
	proto.RegisterType((*L2VpnRt)(nil), "cisco_ios_xr_evpn_oper.evpn.standby.evi_detail.elements.element.l2vpn_rt")
	proto.RegisterType((*L2VpnEvpnEviDetail)(nil), "cisco_ios_xr_evpn_oper.evpn.standby.evi_detail.elements.element.l2vpn_evpn_evi_detail")
}

func init() { proto.RegisterFile("l2vpn_evpn_evi_detail.proto", fileDescriptor_5c6cf984c5964754) }

var fileDescriptor_5c6cf984c5964754 = []byte{
	// 1118 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x57, 0xeb, 0x6e, 0x1c, 0x35,
	0x14, 0x56, 0x2e, 0xdd, 0xec, 0x9e, 0xec, 0x76, 0x5b, 0x97, 0xc2, 0xf4, 0xaa, 0x74, 0x53, 0x41,
	0x01, 0xb1, 0x12, 0x69, 0xb8, 0x17, 0x42, 0x92, 0x26, 0xb0, 0x24, 0x54, 0xd1, 0x04, 0x4a, 0x81,
	0x1f, 0x96, 0x67, 0xec, 0xdd, 0x58, 0x9d, 0x1d, 0x8f, 0x6c, 0xef, 0x4d, 0xe2, 0x41, 0x78, 0x20,
	0xde, 0x80, 0x27, 0xe0, 0x4d, 0x90, 0xed, 0x19, 0xef, 0xec, 0x12, 0xa9, 0x95, 0x98, 0xfe, 0x89,
	0xbc, 0xdf, 0xf9, 0xce, 0x77, 0x7c, 0x7c, 0xce, 0x19, 0x3b, 0x70, 0x27, 0xd9, 0x19, 0x67, 0x29,
	0x66, 0xee, 0x0f, 0xc7, 0x94, 0x69, 0xc2, 0x93, 0x6e, 0x26, 0x85, 0x16, 0x68, 0x2f, 0xe6, 0x2a,
	0x16, 0x98, 0x0b, 0x85, 0xa7, 0xd2, 0x71, 0x44, 0xc6, 0x64, 0xd7, 0xac, 0xba, 0x4a, 0x93, 0x94,
	0x46, 0xb3, 0x6e, 0xc9, 0x8b, 0x25, 0x6c, 0xc8, 0x52, 0xad, 0x8a, 0x45, 0xe7, 0x27, 0xb8, 0x7d,
	0xa9, 0x3e, 0x3e, 0x39, 0xfa, 0xf5, 0x1c, 0x5d, 0x83, 0x35, 0x36, 0xe6, 0xc1, 0xca, 0xd6, 0xca,
	0xa3, 0x56, 0x68, 0x96, 0xe8, 0x21, 0xb4, 0x58, 0x1a, 0x93, 0x4c, 0x8d, 0x12, 0xa2, 0xb9, 0x48,
	0x83, 0x55, 0x6b, 0x5b, 0x04, 0x3b, 0x7f, 0xae, 0xc0, 0xdb, 0x4b, 0xb2, 0x6a, 0x34, 0x1c, 0x12,
	0x39, 0x43, 0xef, 0x42, 0x9b, 0xe9, 0x0b, 0x26, 0x53, 0xa6, 0xb1, 0xb1, 0x71, 0x9a, 0xcb, 0xb7,
	0x0a, 0xf8, 0x79, 0x96, 0xf6, 0x28, 0x7a, 0x1f, 0xae, 0x2d, 0x68, 0xe2, 0xa9, 0xcc, 0x63, 0xb5,
	0x17, 0xf0, 0x17, 0x12, 0xbd, 0x03, 0x1b, 0x11, 0xc5, 0x29, 0x19, 0xb2, 0x60, 0x6d, 0x6b, 0xe5,
	0x51, 0x23, 0xac, 0x45, 0xf4, 0x19, 0x19, 0x32, 0x84, 0x60, 0x5d, 0xcf, 0x32, 0x16, 0xac, 0x5b,
	0xd4, 0xae, 0x3b, 0x02, 0x6e, 0x96, 0x76, 0xd6, 0x4f, 0xc4, 0x04, 0x27, 0x24, 0x62, 0x09, 0xfa,
	0x00, 0xae, 0x2b, 0x4d, 0x34, 0x8f, 0x4b, 0xa0, 0xdd, 0x5a, 0x3d, 0x6c, 0x3b, 0xc3, 0x71, 0x22,
	0x26, 0xa7, 0x05, 0x77, 0x90, 0x88, 0x88, 0x24, 0x65, 0xee, 0xaa, 0xe3, 0x3a, 0x83, 0xe7, 0x76,
	0x4e, 0xa0, 0xe5, 0x02, 0x4a, 0x8a, 0xc9, 0x48, 0x0b, 0x74, 0x07, 0x1a, 0x52, 0x8c, 0x34, 0x93,
	0x45, 0xee, 0x8d, 0xb0, 0xee, 0x80, 0x1e, 0x45, 0xf7, 0x00, 0x0c, 0x09, 0xf3, 0x94, 0xb2, 0x69,
	0x9e, 0x70, 0xc3, 0x20, 0x3d, 0x03, 0x74, 0x7e, 0x87, 0xeb, 0x5e, 0x6c, 0x27, 0x9a, 0x69, 0x86,
	0x89, 0x42, 0xf7, 0x61, 0x53, 0x4f, 0x04, 0xce, 0x7f, 0xe6, 0xc7, 0xd9, 0xd0, 0x13, 0x71, 0x30,
	0xd3, 0x6c, 0x5f, 0x99, 0x23, 0xef, 0x8b, 0x91, 0x74, 0x84, 0xb2, 0x70, 0xcb, 0xc0, 0x86, 0xf4,
	0x5f, 0xf1, 0xdd, 0x42, 0x7c, 0x0b, 0x9a, 0x73, 0x67, 0xaf, 0x0e, 0x85, 0xe7, 0xbe, 0x42, 0x0f,
	0xe1, 0xaa, 0x0f, 0x5f, 0x56, 0x6f, 0xe6, 0x3b, 0x70, 0xe2, 0xbf, 0x41, 0xdb, 0x8b, 0x8f, 0x77,
	0x09, 0xa5, 0x12, 0x3d, 0x80, 0x26, 0xcf, 0xc6, 0xbb, 0xd8, 0xfc, 0x60, 0x4a, 0xe5, 0x67, 0xb1,
	0x69, 0xb0, 0x7d, 0x07, 0xbd, 0xa6, 0xf6, 0xdf, 0x6b, 0x50, 0x2f, 0xc4, 0xd1, 0x55, 0x58, 0x95,
	0xc5, 0xb9, 0xae, 0x4a, 0x8a, 0x22, 0x58, 0x37, 0xe7, 0x67, 0x1d, 0x37, 0x77, 0x9e, 0x75, 0xff,
	0xe7, 0xc4, 0x74, 0x17, 0x8a, 0x19, 0x5a, 0x6d, 0x24, 0x17, 0x2b, 0xb0, 0x66, 0x43, 0x85, 0xd5,
	0x85, 0x2a, 0x4a, 0x5d, 0xae, 0xaa, 0x5e, 0x2a, 0xcc, 0x7a, 0xd5, 0x41, 0x8b, 0x16, 0x58, 0x28,
	0x36, 0x87, 0x8d, 0xbc, 0x62, 0xc1, 0x15, 0x1b, 0xf0, 0xac, 0xba, 0x80, 0xae, 0x2d, 0xc2, 0x9a,
	0x2b, 0x7f, 0xa9, 0x1d, 0xf5, 0x9b, 0xec, 0x75, 0xfd, 0x26, 0x7b, 0x5d, 0x57, 0xde, 0xeb, 0x67,
	0x80, 0xbc, 0x36, 0x53, 0x98, 0x0f, 0x33, 0x21, 0xb5, 0xf9, 0x6c, 0x5c, 0xf0, 0xc1, 0x85, 0x75,
	0xf6, 0xa7, 0x62, 0x10, 0xe3, 0xa8, 0xcc, 0x27, 0xc7, 0x7c, 0xa7, 0x9c, 0xd5, 0xa9, 0xd6, 0x13,
	0x31, 0xb1, 0xc6, 0xce, 0x3f, 0xf3, 0xe9, 0xd1, 0x76, 0x7a, 0xb4, 0x9f, 0x1e, 0xbd, 0xdc, 0xd9,
	0xab, 0xd5, 0x36, 0x99, 0x7e, 0xad, 0xce, 0x5e, 0xab, 0x3a, 0xe8, 0xab, 0x3a, 0x7b, 0xbd, 0xda,
	0xce, 0xd6, 0x4b, 0x9d, 0x8d, 0x32, 0x68, 0xf8, 0xd2, 0xe5, 0x63, 0x74, 0x5e, 0x5d, 0x30, 0x2f,
	0x1d, 0xd6, 0x99, 0xea, 0xd9, 0x55, 0xe7, 0xaf, 0xcd, 0x85, 0x6b, 0x6f, 0xae, 0x83, 0x6e, 0x42,
	0xcd, 0xfc, 0x9a, 0xca, 0x60, 0xc7, 0xf6, 0xc5, 0x15, 0x36, 0xe6, 0x2f, 0xe4, 0xa5, 0xd7, 0xef,
	0xe3, 0x57, 0x5e, 0xbf, 0xbb, 0x97, 0x5e, 0xbf, 0x9f, 0xcc, 0xaf, 0x5f, 0xf4, 0x07, 0xb4, 0xec,
	0x0e, 0x78, 0x6a, 0x72, 0x8a, 0x59, 0xf0, 0xa9, 0x4d, 0xff, 0x97, 0x8a, 0xd2, 0x5f, 0x7e, 0x6e,
	0x84, 0x4d, 0x83, 0xf4, 0xf2, 0x60, 0x68, 0x0b, 0x36, 0x29, 0x53, 0xb1, 0xe4, 0x99, 0x7d, 0xbb,
	0x7c, 0xe6, 0x86, 0xb0, 0x04, 0xa1, 0x6d, 0x68, 0x8d, 0x52, 0x1e, 0x13, 0xa5, 0xf3, 0x5b, 0xfd,
	0x73, 0x37, 0x83, 0x39, 0xe8, 0xae, 0xff, 0xf7, 0xa0, 0x3d, 0x1c, 0x25, 0xba, 0x4c, 0xfb, 0xc2,
	0xd2, 0xae, 0x7a, 0xd8, 0x11, 0x47, 0x00, 0xa5, 0x07, 0xc2, 0x97, 0x36, 0xd5, 0xe7, 0x55, 0xa6,
	0x3a, 0x57, 0x0f, 0x1b, 0x7d, 0xff, 0x3c, 0xb9, 0x07, 0x10, 0x4f, 0x30, 0xe5, 0x8a, 0x44, 0x09,
	0x0b, 0xbe, 0xb2, 0xef, 0x92, 0x46, 0x3c, 0x79, 0xea, 0x00, 0xf3, 0x7a, 0xd1, 0x66, 0x81, 0x33,
	0x91, 0xf0, 0x78, 0xe6, 0x4a, 0xf7, 0xc4, 0x9e, 0x45, 0xdb, 0x1a, 0xce, 0x2c, 0x6e, 0x6b, 0xb8,
	0x0d, 0xad, 0xbe, 0x90, 0x13, 0x22, 0x29, 0x8e, 0x13, 0xa2, 0x54, 0xf0, 0xb5, 0x3b, 0x8f, 0x1c,
	0x3c, 0x34, 0x18, 0x8a, 0x60, 0x23, 0xbf, 0x0f, 0x83, 0x6f, 0x6c, 0x8e, 0xbd, 0xca, 0x2e, 0x85,
	0xb0, 0x26, 0xe9, 0xbe, 0xb9, 0x62, 0x53, 0x68, 0x99, 0x3d, 0x88, 0xb4, 0xcf, 0x07, 0x23, 0xc9,
	0x68, 0xb0, 0x57, 0x75, 0xa4, 0xa6, 0xa4, 0x87, 0x5e, 0xde, 0xe6, 0xa4, 0x5d, 0x4e, 0xdf, 0x56,
	0x1b, 0x49, 0x87, 0x35, 0xa9, 0x6d, 0x4e, 0x1f, 0xc1, 0x0d, 0xa9, 0xf3, 0x61, 0xc5, 0x51, 0x22,
	0xe2, 0x97, 0x58, 0x31, 0x1d, 0xec, 0xdb, 0x82, 0x5d, 0x93, 0xda, 0x0d, 0xef, 0x81, 0x31, 0x9c,
	0x33, 0x9d, 0xd3, 0xd9, 0x74, 0x89, 0x7e, 0x50, 0xd0, 0x8f, 0xa6, 0x0b, 0xf4, 0x6d, 0x68, 0x11,
	0x3a, 0x66, 0x52, 0x73, 0xc5, 0xf0, 0x90, 0xc4, 0xc1, 0xa1, 0x25, 0x36, 0x3d, 0xf8, 0x23, 0x89,
	0x4d, 0xab, 0x30, 0x2d, 0x19, 0xc3, 0x09, 0x23, 0xfd, 0xe0, 0xa9, 0x6b, 0x15, 0x8b, 0x9c, 0x32,
	0xd2, 0x37, 0xad, 0x32, 0xd7, 0x88, 0xc6, 0xdc, 0xea, 0x1c, 0xb9, 0x87, 0xae, 0x37, 0x1c, 0x8c,
	0xb9, 0x91, 0xfa, 0x10, 0xae, 0x93, 0x84, 0x13, 0xc5, 0xd3, 0x41, 0xd1, 0x7b, 0x34, 0x38, 0x76,
	0x9b, 0x2b, 0x0c, 0x79, 0x0b, 0x52, 0xd4, 0x83, 0x07, 0xa3, 0xf4, 0x65, 0x2a, 0x26, 0x29, 0x2e,
	0xe6, 0xad, 0x9f, 0x08, 0x41, 0x17, 0x9c, 0xbf, 0xb3, 0xce, 0xf7, 0x73, 0xe2, 0xcf, 0x8e, 0x77,
	0x9c, 0xd3, 0xbc, 0xd4, 0xc7, 0xf0, 0x96, 0x64, 0x42, 0xf2, 0x01, 0x4f, 0x89, 0x66, 0x73, 0xef,
	0xef, 0xad, 0xf7, 0x8d, 0x92, 0xcd, 0xbb, 0xdc, 0x85, 0x86, 0xd2, 0x5c, 0xc7, 0x17, 0x3c, 0x1d,
	0x04, 0x3d, 0x97, 0xb4, 0x07, 0xd0, 0x13, 0xb8, 0x3d, 0x1f, 0x6f, 0x25, 0x46, 0x32, 0x66, 0xa6,
	0xf1, 0x52, 0x16, 0x6b, 0x46, 0x83, 0x1f, 0x2c, 0x3d, 0xf0, 0x8c, 0x73, 0x4b, 0x38, 0x2c, 0xec,
	0x68, 0x0f, 0xee, 0x46, 0x83, 0xcc, 0x54, 0x35, 0xe1, 0x31, 0xf7, 0xe5, 0xf5, 0xdb, 0x3a, 0xb1,
	0xfe, 0xb7, 0xa2, 0x41, 0xd6, 0xcb, 0x29, 0xae, 0xcc, 0x7e, 0x73, 0xb7, 0xa0, 0x3e, 0x96, 0x7d,
	0x37, 0x95, 0xa7, 0x76, 0x2a, 0x37, 0xc6, 0xb2, 0x6f, 0xa6, 0x31, 0xaa, 0xd9, 0xff, 0xfa, 0x1e,
	0xff, 0x1b, 0x00, 0x00, 0xff, 0xff, 0x43, 0xa4, 0x1c, 0x8a, 0x14, 0x0e, 0x00, 0x00,
}
