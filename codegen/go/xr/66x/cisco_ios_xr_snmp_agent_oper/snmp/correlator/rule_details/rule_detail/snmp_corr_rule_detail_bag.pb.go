/*
Copyright 2019 Cisco Systems

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: snmp_corr_rule_detail_bag.proto

package cisco_ios_xr_snmp_agent_oper_snmp_correlator_rule_details_rule_detail

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type SnmpCorrRuleDetailBag_KEYS struct {
	RuleName             string   `protobuf:"bytes,1,opt,name=rule_name,json=ruleName,proto3" json:"rule_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SnmpCorrRuleDetailBag_KEYS) Reset()         { *m = SnmpCorrRuleDetailBag_KEYS{} }
func (m *SnmpCorrRuleDetailBag_KEYS) String() string { return proto.CompactTextString(m) }
func (*SnmpCorrRuleDetailBag_KEYS) ProtoMessage()    {}
func (*SnmpCorrRuleDetailBag_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_6fcd35ab78981ee8, []int{0}
}

func (m *SnmpCorrRuleDetailBag_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SnmpCorrRuleDetailBag_KEYS.Unmarshal(m, b)
}
func (m *SnmpCorrRuleDetailBag_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SnmpCorrRuleDetailBag_KEYS.Marshal(b, m, deterministic)
}
func (m *SnmpCorrRuleDetailBag_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SnmpCorrRuleDetailBag_KEYS.Merge(m, src)
}
func (m *SnmpCorrRuleDetailBag_KEYS) XXX_Size() int {
	return xxx_messageInfo_SnmpCorrRuleDetailBag_KEYS.Size(m)
}
func (m *SnmpCorrRuleDetailBag_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_SnmpCorrRuleDetailBag_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_SnmpCorrRuleDetailBag_KEYS proto.InternalMessageInfo

func (m *SnmpCorrRuleDetailBag_KEYS) GetRuleName() string {
	if m != nil {
		return m.RuleName
	}
	return ""
}

type SnmpCorrRuleSummaryBag struct {
	RuleName             string   `protobuf:"bytes,1,opt,name=rule_name,json=ruleName,proto3" json:"rule_name,omitempty"`
	RuleState            string   `protobuf:"bytes,2,opt,name=rule_state,json=ruleState,proto3" json:"rule_state,omitempty"`
	BufferedTrapsCount   uint32   `protobuf:"varint,3,opt,name=buffered_traps_count,json=bufferedTrapsCount,proto3" json:"buffered_traps_count,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SnmpCorrRuleSummaryBag) Reset()         { *m = SnmpCorrRuleSummaryBag{} }
func (m *SnmpCorrRuleSummaryBag) String() string { return proto.CompactTextString(m) }
func (*SnmpCorrRuleSummaryBag) ProtoMessage()    {}
func (*SnmpCorrRuleSummaryBag) Descriptor() ([]byte, []int) {
	return fileDescriptor_6fcd35ab78981ee8, []int{1}
}

func (m *SnmpCorrRuleSummaryBag) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SnmpCorrRuleSummaryBag.Unmarshal(m, b)
}
func (m *SnmpCorrRuleSummaryBag) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SnmpCorrRuleSummaryBag.Marshal(b, m, deterministic)
}
func (m *SnmpCorrRuleSummaryBag) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SnmpCorrRuleSummaryBag.Merge(m, src)
}
func (m *SnmpCorrRuleSummaryBag) XXX_Size() int {
	return xxx_messageInfo_SnmpCorrRuleSummaryBag.Size(m)
}
func (m *SnmpCorrRuleSummaryBag) XXX_DiscardUnknown() {
	xxx_messageInfo_SnmpCorrRuleSummaryBag.DiscardUnknown(m)
}

var xxx_messageInfo_SnmpCorrRuleSummaryBag proto.InternalMessageInfo

func (m *SnmpCorrRuleSummaryBag) GetRuleName() string {
	if m != nil {
		return m.RuleName
	}
	return ""
}

func (m *SnmpCorrRuleSummaryBag) GetRuleState() string {
	if m != nil {
		return m.RuleState
	}
	return ""
}

func (m *SnmpCorrRuleSummaryBag) GetBufferedTrapsCount() uint32 {
	if m != nil {
		return m.BufferedTrapsCount
	}
	return 0
}

type SnmpCorrVbindMatch struct {
	Oid                  string   `protobuf:"bytes,1,opt,name=oid,proto3" json:"oid,omitempty"`
	MatchType            string   `protobuf:"bytes,2,opt,name=match_type,json=matchType,proto3" json:"match_type,omitempty"`
	RegExp               string   `protobuf:"bytes,3,opt,name=reg_exp,json=regExp,proto3" json:"reg_exp,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SnmpCorrVbindMatch) Reset()         { *m = SnmpCorrVbindMatch{} }
func (m *SnmpCorrVbindMatch) String() string { return proto.CompactTextString(m) }
func (*SnmpCorrVbindMatch) ProtoMessage()    {}
func (*SnmpCorrVbindMatch) Descriptor() ([]byte, []int) {
	return fileDescriptor_6fcd35ab78981ee8, []int{2}
}

func (m *SnmpCorrVbindMatch) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SnmpCorrVbindMatch.Unmarshal(m, b)
}
func (m *SnmpCorrVbindMatch) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SnmpCorrVbindMatch.Marshal(b, m, deterministic)
}
func (m *SnmpCorrVbindMatch) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SnmpCorrVbindMatch.Merge(m, src)
}
func (m *SnmpCorrVbindMatch) XXX_Size() int {
	return xxx_messageInfo_SnmpCorrVbindMatch.Size(m)
}
func (m *SnmpCorrVbindMatch) XXX_DiscardUnknown() {
	xxx_messageInfo_SnmpCorrVbindMatch.DiscardUnknown(m)
}

var xxx_messageInfo_SnmpCorrVbindMatch proto.InternalMessageInfo

func (m *SnmpCorrVbindMatch) GetOid() string {
	if m != nil {
		return m.Oid
	}
	return ""
}

func (m *SnmpCorrVbindMatch) GetMatchType() string {
	if m != nil {
		return m.MatchType
	}
	return ""
}

func (m *SnmpCorrVbindMatch) GetRegExp() string {
	if m != nil {
		return m.RegExp
	}
	return ""
}

type SnmpCorrTrapMatch struct {
	Oid                  string                `protobuf:"bytes,1,opt,name=oid,proto3" json:"oid,omitempty"`
	VarBind              []*SnmpCorrVbindMatch `protobuf:"bytes,2,rep,name=var_bind,json=varBind,proto3" json:"var_bind,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *SnmpCorrTrapMatch) Reset()         { *m = SnmpCorrTrapMatch{} }
func (m *SnmpCorrTrapMatch) String() string { return proto.CompactTextString(m) }
func (*SnmpCorrTrapMatch) ProtoMessage()    {}
func (*SnmpCorrTrapMatch) Descriptor() ([]byte, []int) {
	return fileDescriptor_6fcd35ab78981ee8, []int{3}
}

func (m *SnmpCorrTrapMatch) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SnmpCorrTrapMatch.Unmarshal(m, b)
}
func (m *SnmpCorrTrapMatch) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SnmpCorrTrapMatch.Marshal(b, m, deterministic)
}
func (m *SnmpCorrTrapMatch) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SnmpCorrTrapMatch.Merge(m, src)
}
func (m *SnmpCorrTrapMatch) XXX_Size() int {
	return xxx_messageInfo_SnmpCorrTrapMatch.Size(m)
}
func (m *SnmpCorrTrapMatch) XXX_DiscardUnknown() {
	xxx_messageInfo_SnmpCorrTrapMatch.DiscardUnknown(m)
}

var xxx_messageInfo_SnmpCorrTrapMatch proto.InternalMessageInfo

func (m *SnmpCorrTrapMatch) GetOid() string {
	if m != nil {
		return m.Oid
	}
	return ""
}

func (m *SnmpCorrTrapMatch) GetVarBind() []*SnmpCorrVbindMatch {
	if m != nil {
		return m.VarBind
	}
	return nil
}

type SnmpCorrHost struct {
	IpAddress            string   `protobuf:"bytes,1,opt,name=ip_address,json=ipAddress,proto3" json:"ip_address,omitempty"`
	Port                 uint32   `protobuf:"varint,2,opt,name=port,proto3" json:"port,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SnmpCorrHost) Reset()         { *m = SnmpCorrHost{} }
func (m *SnmpCorrHost) String() string { return proto.CompactTextString(m) }
func (*SnmpCorrHost) ProtoMessage()    {}
func (*SnmpCorrHost) Descriptor() ([]byte, []int) {
	return fileDescriptor_6fcd35ab78981ee8, []int{4}
}

func (m *SnmpCorrHost) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SnmpCorrHost.Unmarshal(m, b)
}
func (m *SnmpCorrHost) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SnmpCorrHost.Marshal(b, m, deterministic)
}
func (m *SnmpCorrHost) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SnmpCorrHost.Merge(m, src)
}
func (m *SnmpCorrHost) XXX_Size() int {
	return xxx_messageInfo_SnmpCorrHost.Size(m)
}
func (m *SnmpCorrHost) XXX_DiscardUnknown() {
	xxx_messageInfo_SnmpCorrHost.DiscardUnknown(m)
}

var xxx_messageInfo_SnmpCorrHost proto.InternalMessageInfo

func (m *SnmpCorrHost) GetIpAddress() string {
	if m != nil {
		return m.IpAddress
	}
	return ""
}

func (m *SnmpCorrHost) GetPort() uint32 {
	if m != nil {
		return m.Port
	}
	return 0
}

type SnmpCorrRuleDetailBag struct {
	RuleSummary          *SnmpCorrRuleSummaryBag `protobuf:"bytes,50,opt,name=rule_summary,json=ruleSummary,proto3" json:"rule_summary,omitempty"`
	Timeout              uint32                  `protobuf:"varint,51,opt,name=timeout,proto3" json:"timeout,omitempty"`
	RootCause            *SnmpCorrTrapMatch      `protobuf:"bytes,52,opt,name=root_cause,json=rootCause,proto3" json:"root_cause,omitempty"`
	NonRootCause         []*SnmpCorrTrapMatch    `protobuf:"bytes,53,rep,name=non_root_cause,json=nonRootCause,proto3" json:"non_root_cause,omitempty"`
	ApplyHost            []*SnmpCorrHost         `protobuf:"bytes,54,rep,name=apply_host,json=applyHost,proto3" json:"apply_host,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *SnmpCorrRuleDetailBag) Reset()         { *m = SnmpCorrRuleDetailBag{} }
func (m *SnmpCorrRuleDetailBag) String() string { return proto.CompactTextString(m) }
func (*SnmpCorrRuleDetailBag) ProtoMessage()    {}
func (*SnmpCorrRuleDetailBag) Descriptor() ([]byte, []int) {
	return fileDescriptor_6fcd35ab78981ee8, []int{5}
}

func (m *SnmpCorrRuleDetailBag) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SnmpCorrRuleDetailBag.Unmarshal(m, b)
}
func (m *SnmpCorrRuleDetailBag) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SnmpCorrRuleDetailBag.Marshal(b, m, deterministic)
}
func (m *SnmpCorrRuleDetailBag) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SnmpCorrRuleDetailBag.Merge(m, src)
}
func (m *SnmpCorrRuleDetailBag) XXX_Size() int {
	return xxx_messageInfo_SnmpCorrRuleDetailBag.Size(m)
}
func (m *SnmpCorrRuleDetailBag) XXX_DiscardUnknown() {
	xxx_messageInfo_SnmpCorrRuleDetailBag.DiscardUnknown(m)
}

var xxx_messageInfo_SnmpCorrRuleDetailBag proto.InternalMessageInfo

func (m *SnmpCorrRuleDetailBag) GetRuleSummary() *SnmpCorrRuleSummaryBag {
	if m != nil {
		return m.RuleSummary
	}
	return nil
}

func (m *SnmpCorrRuleDetailBag) GetTimeout() uint32 {
	if m != nil {
		return m.Timeout
	}
	return 0
}

func (m *SnmpCorrRuleDetailBag) GetRootCause() *SnmpCorrTrapMatch {
	if m != nil {
		return m.RootCause
	}
	return nil
}

func (m *SnmpCorrRuleDetailBag) GetNonRootCause() []*SnmpCorrTrapMatch {
	if m != nil {
		return m.NonRootCause
	}
	return nil
}

func (m *SnmpCorrRuleDetailBag) GetApplyHost() []*SnmpCorrHost {
	if m != nil {
		return m.ApplyHost
	}
	return nil
}

func init() {
	proto.RegisterType((*SnmpCorrRuleDetailBag_KEYS)(nil), "cisco_ios_xr_snmp_agent_oper.snmp.correlator.rule_details.rule_detail.snmp_corr_rule_detail_bag_KEYS")
	proto.RegisterType((*SnmpCorrRuleSummaryBag)(nil), "cisco_ios_xr_snmp_agent_oper.snmp.correlator.rule_details.rule_detail.snmp_corr_rule_summary_bag")
	proto.RegisterType((*SnmpCorrVbindMatch)(nil), "cisco_ios_xr_snmp_agent_oper.snmp.correlator.rule_details.rule_detail.snmp_corr_vbind_match")
	proto.RegisterType((*SnmpCorrTrapMatch)(nil), "cisco_ios_xr_snmp_agent_oper.snmp.correlator.rule_details.rule_detail.snmp_corr_trap_match")
	proto.RegisterType((*SnmpCorrHost)(nil), "cisco_ios_xr_snmp_agent_oper.snmp.correlator.rule_details.rule_detail.snmp_corr_host")
	proto.RegisterType((*SnmpCorrRuleDetailBag)(nil), "cisco_ios_xr_snmp_agent_oper.snmp.correlator.rule_details.rule_detail.snmp_corr_rule_detail_bag")
}

func init() { proto.RegisterFile("snmp_corr_rule_detail_bag.proto", fileDescriptor_6fcd35ab78981ee8) }

var fileDescriptor_6fcd35ab78981ee8 = []byte{
	// 471 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x94, 0xc1, 0x6e, 0x13, 0x31,
	0x10, 0x86, 0xb5, 0x4d, 0xd5, 0x74, 0x27, 0x6d, 0x85, 0xac, 0x22, 0x0c, 0x08, 0x88, 0xf6, 0x94,
	0xd3, 0x0a, 0xa5, 0xc0, 0x8d, 0x03, 0x44, 0x91, 0x90, 0x90, 0x38, 0xb8, 0xe5, 0x80, 0x40, 0x1a,
	0x39, 0xbb, 0x6e, 0x6a, 0x29, 0x6b, 0x5b, 0xb6, 0x37, 0x24, 0xdc, 0x90, 0x38, 0xf1, 0x16, 0xbc,
	0x02, 0x4f, 0x88, 0x3c, 0x69, 0x9b, 0xa8, 0x22, 0x9c, 0xc2, 0xcd, 0xfe, 0xc7, 0x33, 0xff, 0x37,
	0x3b, 0xa3, 0x85, 0x67, 0xc1, 0x34, 0x0e, 0x2b, 0xeb, 0x3d, 0xfa, 0x76, 0xa6, 0xb0, 0x56, 0x51,
	0xea, 0x19, 0x4e, 0xe4, 0xb4, 0x74, 0xde, 0x46, 0xcb, 0xc6, 0x95, 0x0e, 0x95, 0x45, 0x6d, 0x03,
	0x2e, 0x3c, 0xd2, 0x6b, 0x39, 0x55, 0x26, 0xa2, 0x75, 0xca, 0x97, 0xe9, 0x5e, 0xa6, 0x6c, 0x35,
	0x93, 0xd1, 0xfa, 0x72, 0xa3, 0x46, 0xd8, 0xbc, 0x14, 0xaf, 0xe1, 0xe9, 0x56, 0x27, 0x7c, 0x3f,
	0xfe, 0x74, 0xce, 0x1e, 0x43, 0x4e, 0xba, 0x91, 0x8d, 0xe2, 0x59, 0x3f, 0x1b, 0xe4, 0xe2, 0x30,
	0x09, 0x1f, 0x64, 0xa3, 0x8a, 0x9f, 0x19, 0x3c, 0xba, 0x93, 0x1f, 0xda, 0xa6, 0x91, 0x7e, 0x99,
	0x0a, 0xfc, 0x33, 0x97, 0x3d, 0x01, 0x58, 0x25, 0x44, 0x19, 0x15, 0xdf, 0xa3, 0x28, 0x3d, 0x3f,
	0x4f, 0x02, 0x7b, 0x0e, 0xa7, 0x93, 0xf6, 0xf2, 0x52, 0x79, 0x55, 0x63, 0xf4, 0xd2, 0x05, 0xac,
	0x6c, 0x6b, 0x22, 0xef, 0xf4, 0xb3, 0xc1, 0xb1, 0x60, 0x37, 0xb1, 0x8b, 0x14, 0x1a, 0xa5, 0x48,
	0x21, 0xe1, 0xfe, 0x9a, 0x65, 0x3e, 0xd1, 0xa6, 0xc6, 0x46, 0xc6, 0xea, 0x8a, 0xdd, 0x83, 0x8e,
	0xd5, 0xf5, 0x35, 0x40, 0x3a, 0x26, 0x6f, 0x0a, 0x61, 0x5c, 0xba, 0x5b, 0x6f, 0x52, 0x2e, 0x96,
	0x4e, 0xb1, 0x07, 0xd0, 0xf5, 0x6a, 0x8a, 0x6a, 0xe1, 0xc8, 0x2e, 0x17, 0x07, 0x5e, 0x4d, 0xc7,
	0x0b, 0x57, 0xfc, 0xca, 0xe0, 0x74, 0xed, 0x91, 0xb0, 0xb6, 0x5a, 0x7c, 0x85, 0xc3, 0xb9, 0xf4,
	0x98, 0x30, 0xf8, 0x5e, 0xbf, 0x33, 0xe8, 0x0d, 0xbf, 0x94, 0x3b, 0x99, 0x59, 0xf9, 0xd7, 0x26,
	0x45, 0x77, 0x2e, 0xfd, 0x5b, 0x6d, 0xea, 0x62, 0x04, 0x27, 0xeb, 0x17, 0x57, 0x36, 0xc4, 0xd4,
	0xad, 0x76, 0x28, 0xeb, 0xda, 0xab, 0x10, 0xae, 0x19, 0x73, 0xed, 0xde, 0xac, 0x04, 0xc6, 0x60,
	0xdf, 0x59, 0x1f, 0xe9, 0x33, 0x1c, 0x0b, 0x3a, 0x17, 0xbf, 0xf7, 0xe1, 0xe1, 0xd6, 0xc5, 0x60,
	0x3f, 0x32, 0x38, 0xda, 0x1c, 0x36, 0x1f, 0xf6, 0xb3, 0x41, 0x6f, 0x28, 0x77, 0xde, 0xe0, 0xdd,
	0x8d, 0x12, 0x3d, 0x5a, 0x90, 0x95, 0xc0, 0x38, 0x74, 0xa3, 0x6e, 0x94, 0x6d, 0x23, 0x3f, 0x23,
	0xf6, 0x9b, 0x2b, 0xfb, 0x06, 0xe0, 0xad, 0x8d, 0x58, 0xc9, 0x36, 0x28, 0xfe, 0x82, 0xe8, 0x3e,
	0xef, 0x9c, 0x6e, 0x3d, 0x7f, 0x91, 0x27, 0xbb, 0x51, 0x72, 0x63, 0xdf, 0x33, 0x38, 0x31, 0xd6,
	0xe0, 0x06, 0xc0, 0x4b, 0x9a, 0xff, 0x7f, 0x05, 0x38, 0x32, 0xd6, 0x88, 0x5b, 0x86, 0x08, 0x20,
	0x9d, 0x9b, 0x2d, 0x69, 0xfe, 0xfc, 0x15, 0xd9, 0x7f, 0xdc, 0xb9, 0x7d, 0x2a, 0x2e, 0x72, 0x32,
	0x7a, 0x67, 0x43, 0x9c, 0x1c, 0xd0, 0xaf, 0xe9, 0xec, 0x4f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x8e,
	0xe0, 0x90, 0x0d, 0xbd, 0x04, 0x00, 0x00,
}
