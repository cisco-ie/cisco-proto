/*
Copyright 2019 Cisco Systems

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: snmp_pdu_stats.proto

package cisco_ios_xr_snmp_agent_oper_snmp_information_serial_numbers_serial_number

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type SnmpPduStats_KEYS struct {
	Number               string   `protobuf:"bytes,1,opt,name=number,proto3" json:"number,omitempty"`
	ReqId                uint32   `protobuf:"varint,2,opt,name=req_id,json=reqId,proto3" json:"req_id,omitempty"`
	Port                 uint32   `protobuf:"varint,3,opt,name=port,proto3" json:"port,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SnmpPduStats_KEYS) Reset()         { *m = SnmpPduStats_KEYS{} }
func (m *SnmpPduStats_KEYS) String() string { return proto.CompactTextString(m) }
func (*SnmpPduStats_KEYS) ProtoMessage()    {}
func (*SnmpPduStats_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_fff43f005e7db12f, []int{0}
}

func (m *SnmpPduStats_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SnmpPduStats_KEYS.Unmarshal(m, b)
}
func (m *SnmpPduStats_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SnmpPduStats_KEYS.Marshal(b, m, deterministic)
}
func (m *SnmpPduStats_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SnmpPduStats_KEYS.Merge(m, src)
}
func (m *SnmpPduStats_KEYS) XXX_Size() int {
	return xxx_messageInfo_SnmpPduStats_KEYS.Size(m)
}
func (m *SnmpPduStats_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_SnmpPduStats_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_SnmpPduStats_KEYS proto.InternalMessageInfo

func (m *SnmpPduStats_KEYS) GetNumber() string {
	if m != nil {
		return m.Number
	}
	return ""
}

func (m *SnmpPduStats_KEYS) GetReqId() uint32 {
	if m != nil {
		return m.ReqId
	}
	return 0
}

func (m *SnmpPduStats_KEYS) GetPort() uint32 {
	if m != nil {
		return m.Port
	}
	return 0
}

type SnmpPduStats struct {
	Nms                  string   `protobuf:"bytes,50,opt,name=nms,proto3" json:"nms,omitempty"`
	RequestId            uint32   `protobuf:"varint,51,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	PortXr               uint32   `protobuf:"varint,52,opt,name=port_xr,json=portXr,proto3" json:"port_xr,omitempty"`
	PduType              uint32   `protobuf:"varint,53,opt,name=pdu_type,json=pduType,proto3" json:"pdu_type,omitempty"`
	ErrorStatus          uint32   `protobuf:"varint,54,opt,name=error_status,json=errorStatus,proto3" json:"error_status,omitempty"`
	SerialNum            uint32   `protobuf:"varint,55,opt,name=serial_num,json=serialNum,proto3" json:"serial_num,omitempty"`
	InputQ               string   `protobuf:"bytes,56,opt,name=input_q,json=inputQ,proto3" json:"input_q,omitempty"`
	OutputQ              uint32   `protobuf:"varint,57,opt,name=output_q,json=outputQ,proto3" json:"output_q,omitempty"`
	PendingQ             uint32   `protobuf:"varint,58,opt,name=pending_q,json=pendingQ,proto3" json:"pending_q,omitempty"`
	ResponseOut          uint32   `protobuf:"varint,59,opt,name=response_out,json=responseOut,proto3" json:"response_out,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SnmpPduStats) Reset()         { *m = SnmpPduStats{} }
func (m *SnmpPduStats) String() string { return proto.CompactTextString(m) }
func (*SnmpPduStats) ProtoMessage()    {}
func (*SnmpPduStats) Descriptor() ([]byte, []int) {
	return fileDescriptor_fff43f005e7db12f, []int{1}
}

func (m *SnmpPduStats) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SnmpPduStats.Unmarshal(m, b)
}
func (m *SnmpPduStats) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SnmpPduStats.Marshal(b, m, deterministic)
}
func (m *SnmpPduStats) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SnmpPduStats.Merge(m, src)
}
func (m *SnmpPduStats) XXX_Size() int {
	return xxx_messageInfo_SnmpPduStats.Size(m)
}
func (m *SnmpPduStats) XXX_DiscardUnknown() {
	xxx_messageInfo_SnmpPduStats.DiscardUnknown(m)
}

var xxx_messageInfo_SnmpPduStats proto.InternalMessageInfo

func (m *SnmpPduStats) GetNms() string {
	if m != nil {
		return m.Nms
	}
	return ""
}

func (m *SnmpPduStats) GetRequestId() uint32 {
	if m != nil {
		return m.RequestId
	}
	return 0
}

func (m *SnmpPduStats) GetPortXr() uint32 {
	if m != nil {
		return m.PortXr
	}
	return 0
}

func (m *SnmpPduStats) GetPduType() uint32 {
	if m != nil {
		return m.PduType
	}
	return 0
}

func (m *SnmpPduStats) GetErrorStatus() uint32 {
	if m != nil {
		return m.ErrorStatus
	}
	return 0
}

func (m *SnmpPduStats) GetSerialNum() uint32 {
	if m != nil {
		return m.SerialNum
	}
	return 0
}

func (m *SnmpPduStats) GetInputQ() string {
	if m != nil {
		return m.InputQ
	}
	return ""
}

func (m *SnmpPduStats) GetOutputQ() uint32 {
	if m != nil {
		return m.OutputQ
	}
	return 0
}

func (m *SnmpPduStats) GetPendingQ() uint32 {
	if m != nil {
		return m.PendingQ
	}
	return 0
}

func (m *SnmpPduStats) GetResponseOut() uint32 {
	if m != nil {
		return m.ResponseOut
	}
	return 0
}

func init() {
	proto.RegisterType((*SnmpPduStats_KEYS)(nil), "cisco_ios_xr_snmp_agent_oper.snmp.information.serial_numbers.serial_number.snmp_pdu_stats_KEYS")
	proto.RegisterType((*SnmpPduStats)(nil), "cisco_ios_xr_snmp_agent_oper.snmp.information.serial_numbers.serial_number.snmp_pdu_stats")
}

func init() { proto.RegisterFile("snmp_pdu_stats.proto", fileDescriptor_fff43f005e7db12f) }

var fileDescriptor_fff43f005e7db12f = []byte{
	// 330 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x54, 0x91, 0x4f, 0x4f, 0x2a, 0x31,
	0x14, 0xc5, 0x03, 0xbc, 0x37, 0x40, 0xdf, 0xd3, 0x98, 0xfa, 0xaf, 0xc6, 0x98, 0x20, 0x2b, 0x56,
	0xb3, 0x10, 0xff, 0xbb, 0x76, 0x81, 0x26, 0x1a, 0xc0, 0x05, 0xae, 0x9a, 0x81, 0xb9, 0x92, 0x26,
	0x4e, 0xdb, 0xb9, 0x6d, 0x13, 0xf8, 0x4c, 0x7e, 0x49, 0xd3, 0x5b, 0x8c, 0x61, 0x77, 0xcf, 0x39,
	0x77, 0xce, 0xef, 0xce, 0x0c, 0x3b, 0x70, 0xba, 0xb2, 0xd2, 0x96, 0x41, 0x3a, 0x5f, 0x78, 0x97,
	0x5b, 0x34, 0xde, 0xf0, 0xa7, 0x85, 0x72, 0x0b, 0x23, 0x95, 0x71, 0x72, 0x85, 0x92, 0x56, 0x8a,
	0x25, 0x68, 0x2f, 0x8d, 0x05, 0xcc, 0xa3, 0xce, 0x95, 0xfe, 0x30, 0x58, 0x15, 0x5e, 0x19, 0x9d,
	0x3b, 0x40, 0x55, 0x7c, 0x4a, 0x1d, 0xaa, 0x39, 0xa0, 0xdb, 0x96, 0xfd, 0x19, 0xdb, 0xdf, 0x66,
	0xc8, 0xe7, 0xc7, 0xf7, 0x29, 0x3f, 0x62, 0x59, 0x5a, 0x10, 0x8d, 0x5e, 0x63, 0xd0, 0x9d, 0x6c,
	0x14, 0x3f, 0x64, 0x19, 0x42, 0x2d, 0x55, 0x29, 0x9a, 0xbd, 0xc6, 0x60, 0x67, 0xf2, 0x17, 0xa1,
	0x1e, 0x95, 0x9c, 0xb3, 0x3f, 0xd6, 0xa0, 0x17, 0x2d, 0x32, 0x69, 0xee, 0x7f, 0x35, 0xd9, 0xee,
	0x76, 0x35, 0xdf, 0x63, 0x2d, 0x5d, 0x39, 0x71, 0x41, 0x95, 0x71, 0xe4, 0x67, 0x8c, 0x21, 0xd4,
	0x01, 0x9c, 0x8f, 0x9d, 0x43, 0x7a, 0xbc, 0xbb, 0x71, 0x46, 0x25, 0x3f, 0x66, 0xed, 0xd8, 0x25,
	0x57, 0x28, 0x2e, 0x29, 0xcb, 0xa2, 0x9c, 0x21, 0x3f, 0x61, 0x9d, 0x58, 0xeb, 0xd7, 0x16, 0xc4,
	0x15, 0x25, 0x6d, 0x5b, 0x86, 0xb7, 0xb5, 0x05, 0x7e, 0xce, 0xfe, 0x03, 0xa2, 0x41, 0x62, 0x06,
	0x27, 0xae, 0x29, 0xfe, 0x47, 0xde, 0x94, 0xac, 0x48, 0xfd, 0xfd, 0x0a, 0xe2, 0x26, 0x51, 0x93,
	0xf3, 0x12, 0xaa, 0x48, 0x55, 0xda, 0x06, 0x2f, 0x6b, 0x71, 0x9b, 0xde, 0x9e, 0xe4, 0x38, 0x52,
	0x4d, 0xf0, 0x29, 0xb9, 0x4b, 0xd4, 0xa4, 0xc7, 0xfc, 0x94, 0x75, 0x2d, 0xe8, 0x52, 0xe9, 0xa5,
	0xac, 0xc5, 0x3d, 0x65, 0x9d, 0x8d, 0x31, 0x8e, 0x27, 0x21, 0x38, 0x6b, 0xb4, 0x03, 0x69, 0x82,
	0x17, 0x0f, 0xe9, 0xa4, 0x1f, 0xef, 0x35, 0xf8, 0x79, 0x46, 0xbf, 0x76, 0xf8, 0x1d, 0x00, 0x00,
	0xff, 0xff, 0xc7, 0xff, 0x98, 0x75, 0xf2, 0x01, 0x00, 0x00,
}
