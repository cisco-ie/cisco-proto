/*
Copyright 2019 Cisco Systems

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: bgp_updgen_nbr_bag.proto

package cisco_ios_xr_ipv4_bgp_oper_bgp_instances_instance_instance_standby_vrfs_vrf_afs_af_update_generation_neighbors_update_generation_neighbor

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type BgpUpdgenNbrBag_KEYS struct {
	InstanceName         string   `protobuf:"bytes,1,opt,name=instance_name,json=instanceName,proto3" json:"instance_name,omitempty"`
	VrfName              string   `protobuf:"bytes,2,opt,name=vrf_name,json=vrfName,proto3" json:"vrf_name,omitempty"`
	AfName               string   `protobuf:"bytes,3,opt,name=af_name,json=afName,proto3" json:"af_name,omitempty"`
	UpdateGroupIndex     uint32   `protobuf:"varint,4,opt,name=update_group_index,json=updateGroupIndex,proto3" json:"update_group_index,omitempty"`
	SubGroupIndex        uint32   `protobuf:"varint,5,opt,name=sub_group_index,json=subGroupIndex,proto3" json:"sub_group_index,omitempty"`
	SubGroupId           uint32   `protobuf:"varint,6,opt,name=sub_group_id,json=subGroupId,proto3" json:"sub_group_id,omitempty"`
	FilterGroupIndex     uint32   `protobuf:"varint,7,opt,name=filter_group_index,json=filterGroupIndex,proto3" json:"filter_group_index,omitempty"`
	NeighborAddress      string   `protobuf:"bytes,8,opt,name=neighbor_address,json=neighborAddress,proto3" json:"neighbor_address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BgpUpdgenNbrBag_KEYS) Reset()         { *m = BgpUpdgenNbrBag_KEYS{} }
func (m *BgpUpdgenNbrBag_KEYS) String() string { return proto.CompactTextString(m) }
func (*BgpUpdgenNbrBag_KEYS) ProtoMessage()    {}
func (*BgpUpdgenNbrBag_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_61b710e9faccf897, []int{0}
}

func (m *BgpUpdgenNbrBag_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BgpUpdgenNbrBag_KEYS.Unmarshal(m, b)
}
func (m *BgpUpdgenNbrBag_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BgpUpdgenNbrBag_KEYS.Marshal(b, m, deterministic)
}
func (m *BgpUpdgenNbrBag_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BgpUpdgenNbrBag_KEYS.Merge(m, src)
}
func (m *BgpUpdgenNbrBag_KEYS) XXX_Size() int {
	return xxx_messageInfo_BgpUpdgenNbrBag_KEYS.Size(m)
}
func (m *BgpUpdgenNbrBag_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_BgpUpdgenNbrBag_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_BgpUpdgenNbrBag_KEYS proto.InternalMessageInfo

func (m *BgpUpdgenNbrBag_KEYS) GetInstanceName() string {
	if m != nil {
		return m.InstanceName
	}
	return ""
}

func (m *BgpUpdgenNbrBag_KEYS) GetVrfName() string {
	if m != nil {
		return m.VrfName
	}
	return ""
}

func (m *BgpUpdgenNbrBag_KEYS) GetAfName() string {
	if m != nil {
		return m.AfName
	}
	return ""
}

func (m *BgpUpdgenNbrBag_KEYS) GetUpdateGroupIndex() uint32 {
	if m != nil {
		return m.UpdateGroupIndex
	}
	return 0
}

func (m *BgpUpdgenNbrBag_KEYS) GetSubGroupIndex() uint32 {
	if m != nil {
		return m.SubGroupIndex
	}
	return 0
}

func (m *BgpUpdgenNbrBag_KEYS) GetSubGroupId() uint32 {
	if m != nil {
		return m.SubGroupId
	}
	return 0
}

func (m *BgpUpdgenNbrBag_KEYS) GetFilterGroupIndex() uint32 {
	if m != nil {
		return m.FilterGroupIndex
	}
	return 0
}

func (m *BgpUpdgenNbrBag_KEYS) GetNeighborAddress() string {
	if m != nil {
		return m.NeighborAddress
	}
	return ""
}

type BgpL2VpnAddrT struct {
	L2VpnAddress         []uint32 `protobuf:"varint,1,rep,packed,name=l2vpn_address,json=l2vpnAddress,proto3" json:"l2vpn_address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BgpL2VpnAddrT) Reset()         { *m = BgpL2VpnAddrT{} }
func (m *BgpL2VpnAddrT) String() string { return proto.CompactTextString(m) }
func (*BgpL2VpnAddrT) ProtoMessage()    {}
func (*BgpL2VpnAddrT) Descriptor() ([]byte, []int) {
	return fileDescriptor_61b710e9faccf897, []int{1}
}

func (m *BgpL2VpnAddrT) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BgpL2VpnAddrT.Unmarshal(m, b)
}
func (m *BgpL2VpnAddrT) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BgpL2VpnAddrT.Marshal(b, m, deterministic)
}
func (m *BgpL2VpnAddrT) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BgpL2VpnAddrT.Merge(m, src)
}
func (m *BgpL2VpnAddrT) XXX_Size() int {
	return xxx_messageInfo_BgpL2VpnAddrT.Size(m)
}
func (m *BgpL2VpnAddrT) XXX_DiscardUnknown() {
	xxx_messageInfo_BgpL2VpnAddrT.DiscardUnknown(m)
}

var xxx_messageInfo_BgpL2VpnAddrT proto.InternalMessageInfo

func (m *BgpL2VpnAddrT) GetL2VpnAddress() []uint32 {
	if m != nil {
		return m.L2VpnAddress
	}
	return nil
}

type BgpL2VpnMspwAddrT struct {
	L2VpnAddress         []uint32 `protobuf:"varint,1,rep,packed,name=l2vpn_address,json=l2vpnAddress,proto3" json:"l2vpn_address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BgpL2VpnMspwAddrT) Reset()         { *m = BgpL2VpnMspwAddrT{} }
func (m *BgpL2VpnMspwAddrT) String() string { return proto.CompactTextString(m) }
func (*BgpL2VpnMspwAddrT) ProtoMessage()    {}
func (*BgpL2VpnMspwAddrT) Descriptor() ([]byte, []int) {
	return fileDescriptor_61b710e9faccf897, []int{2}
}

func (m *BgpL2VpnMspwAddrT) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BgpL2VpnMspwAddrT.Unmarshal(m, b)
}
func (m *BgpL2VpnMspwAddrT) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BgpL2VpnMspwAddrT.Marshal(b, m, deterministic)
}
func (m *BgpL2VpnMspwAddrT) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BgpL2VpnMspwAddrT.Merge(m, src)
}
func (m *BgpL2VpnMspwAddrT) XXX_Size() int {
	return xxx_messageInfo_BgpL2VpnMspwAddrT.Size(m)
}
func (m *BgpL2VpnMspwAddrT) XXX_DiscardUnknown() {
	xxx_messageInfo_BgpL2VpnMspwAddrT.DiscardUnknown(m)
}

var xxx_messageInfo_BgpL2VpnMspwAddrT proto.InternalMessageInfo

func (m *BgpL2VpnMspwAddrT) GetL2VpnAddress() []uint32 {
	if m != nil {
		return m.L2VpnAddress
	}
	return nil
}

type BgpIpv4SrpolicyAddrT struct {
	Ipv4SrpolicyAddress  []uint32 `protobuf:"varint,1,rep,packed,name=ipv4_srpolicy_address,json=ipv4SrpolicyAddress,proto3" json:"ipv4_srpolicy_address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BgpIpv4SrpolicyAddrT) Reset()         { *m = BgpIpv4SrpolicyAddrT{} }
func (m *BgpIpv4SrpolicyAddrT) String() string { return proto.CompactTextString(m) }
func (*BgpIpv4SrpolicyAddrT) ProtoMessage()    {}
func (*BgpIpv4SrpolicyAddrT) Descriptor() ([]byte, []int) {
	return fileDescriptor_61b710e9faccf897, []int{3}
}

func (m *BgpIpv4SrpolicyAddrT) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BgpIpv4SrpolicyAddrT.Unmarshal(m, b)
}
func (m *BgpIpv4SrpolicyAddrT) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BgpIpv4SrpolicyAddrT.Marshal(b, m, deterministic)
}
func (m *BgpIpv4SrpolicyAddrT) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BgpIpv4SrpolicyAddrT.Merge(m, src)
}
func (m *BgpIpv4SrpolicyAddrT) XXX_Size() int {
	return xxx_messageInfo_BgpIpv4SrpolicyAddrT.Size(m)
}
func (m *BgpIpv4SrpolicyAddrT) XXX_DiscardUnknown() {
	xxx_messageInfo_BgpIpv4SrpolicyAddrT.DiscardUnknown(m)
}

var xxx_messageInfo_BgpIpv4SrpolicyAddrT proto.InternalMessageInfo

func (m *BgpIpv4SrpolicyAddrT) GetIpv4SrpolicyAddress() []uint32 {
	if m != nil {
		return m.Ipv4SrpolicyAddress
	}
	return nil
}

type BgpIpv6SrpolicyAddrT struct {
	Ipv6SrpolicyAddress  []uint32 `protobuf:"varint,1,rep,packed,name=ipv6_srpolicy_address,json=ipv6SrpolicyAddress,proto3" json:"ipv6_srpolicy_address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BgpIpv6SrpolicyAddrT) Reset()         { *m = BgpIpv6SrpolicyAddrT{} }
func (m *BgpIpv6SrpolicyAddrT) String() string { return proto.CompactTextString(m) }
func (*BgpIpv6SrpolicyAddrT) ProtoMessage()    {}
func (*BgpIpv6SrpolicyAddrT) Descriptor() ([]byte, []int) {
	return fileDescriptor_61b710e9faccf897, []int{4}
}

func (m *BgpIpv6SrpolicyAddrT) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BgpIpv6SrpolicyAddrT.Unmarshal(m, b)
}
func (m *BgpIpv6SrpolicyAddrT) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BgpIpv6SrpolicyAddrT.Marshal(b, m, deterministic)
}
func (m *BgpIpv6SrpolicyAddrT) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BgpIpv6SrpolicyAddrT.Merge(m, src)
}
func (m *BgpIpv6SrpolicyAddrT) XXX_Size() int {
	return xxx_messageInfo_BgpIpv6SrpolicyAddrT.Size(m)
}
func (m *BgpIpv6SrpolicyAddrT) XXX_DiscardUnknown() {
	xxx_messageInfo_BgpIpv6SrpolicyAddrT.DiscardUnknown(m)
}

var xxx_messageInfo_BgpIpv6SrpolicyAddrT proto.InternalMessageInfo

func (m *BgpIpv6SrpolicyAddrT) GetIpv6SrpolicyAddress() []uint32 {
	if m != nil {
		return m.Ipv6SrpolicyAddress
	}
	return nil
}

type BgpAddrtype struct {
	Afi                    string                `protobuf:"bytes,1,opt,name=afi,proto3" json:"afi,omitempty"`
	Ipv4Address            string                `protobuf:"bytes,2,opt,name=ipv4_address,json=ipv4Address,proto3" json:"ipv4_address,omitempty"`
	Ipv4McastAddress       string                `protobuf:"bytes,3,opt,name=ipv4_mcast_address,json=ipv4McastAddress,proto3" json:"ipv4_mcast_address,omitempty"`
	Ipv4LabelAddress       string                `protobuf:"bytes,4,opt,name=ipv4_label_address,json=ipv4LabelAddress,proto3" json:"ipv4_label_address,omitempty"`
	Ipv4TunnelAddress      string                `protobuf:"bytes,5,opt,name=ipv4_tunnel_address,json=ipv4TunnelAddress,proto3" json:"ipv4_tunnel_address,omitempty"`
	Ipv4MdtAddress         string                `protobuf:"bytes,6,opt,name=ipv4_mdt_address,json=ipv4MdtAddress,proto3" json:"ipv4_mdt_address,omitempty"`
	Ipv4VpnAddress         string                `protobuf:"bytes,7,opt,name=ipv4vpn_address,json=ipv4vpnAddress,proto3" json:"ipv4vpn_address,omitempty"`
	Ipv4VpnaMcastddress    string                `protobuf:"bytes,8,opt,name=ipv4vpna_mcastddress,json=ipv4vpnaMcastddress,proto3" json:"ipv4vpna_mcastddress,omitempty"`
	Ipv6Address            string                `protobuf:"bytes,9,opt,name=ipv6_address,json=ipv6Address,proto3" json:"ipv6_address,omitempty"`
	Ipv6McastAddress       string                `protobuf:"bytes,10,opt,name=ipv6_mcast_address,json=ipv6McastAddress,proto3" json:"ipv6_mcast_address,omitempty"`
	Ipv6LabelAddress       string                `protobuf:"bytes,11,opt,name=ipv6_label_address,json=ipv6LabelAddress,proto3" json:"ipv6_label_address,omitempty"`
	Ipv6VpnAddress         string                `protobuf:"bytes,12,opt,name=ipv6vpn_address,json=ipv6vpnAddress,proto3" json:"ipv6vpn_address,omitempty"`
	Ipv6VpnMcastAddress    string                `protobuf:"bytes,13,opt,name=ipv6vpn_mcast_address,json=ipv6vpnMcastAddress,proto3" json:"ipv6vpn_mcast_address,omitempty"`
	L2VpnVplsAddress       *BgpL2VpnAddrT        `protobuf:"bytes,14,opt,name=l2vpn_vpls_address,json=l2vpnVplsAddress,proto3" json:"l2vpn_vpls_address,omitempty"`
	RtConstraintAddress    string                `protobuf:"bytes,15,opt,name=rt_constraint_address,json=rtConstraintAddress,proto3" json:"rt_constraint_address,omitempty"`
	Ipv6MvpnAddress        string                `protobuf:"bytes,16,opt,name=ipv6mvpn_address,json=ipv6mvpnAddress,proto3" json:"ipv6mvpn_address,omitempty"`
	Ipv4MvpnAddress        string                `protobuf:"bytes,17,opt,name=ipv4mvpn_address,json=ipv4mvpnAddress,proto3" json:"ipv4mvpn_address,omitempty"`
	L2VpnEvpnAddress       string                `protobuf:"bytes,18,opt,name=l2vpn_evpn_address,json=l2vpnEvpnAddress,proto3" json:"l2vpn_evpn_address,omitempty"`
	LsLsAddress            string                `protobuf:"bytes,19,opt,name=ls_ls_address,json=lsLsAddress,proto3" json:"ls_ls_address,omitempty"`
	L2VpnMspwAddress       *BgpL2VpnMspwAddrT    `protobuf:"bytes,20,opt,name=l2vpn_mspw_address,json=l2vpnMspwAddress,proto3" json:"l2vpn_mspw_address,omitempty"`
	Ipv4FlowspecAddress    string                `protobuf:"bytes,21,opt,name=ipv4_flowspec_address,json=ipv4FlowspecAddress,proto3" json:"ipv4_flowspec_address,omitempty"`
	Ipv6FlowspecAddress    string                `protobuf:"bytes,22,opt,name=ipv6_flowspec_address,json=ipv6FlowspecAddress,proto3" json:"ipv6_flowspec_address,omitempty"`
	Ipv4VpnFlowspecAddress string                `protobuf:"bytes,23,opt,name=ipv4vpn_flowspec_address,json=ipv4vpnFlowspecAddress,proto3" json:"ipv4vpn_flowspec_address,omitempty"`
	Ipv6VpnFlowspecAddress string                `protobuf:"bytes,24,opt,name=ipv6vpn_flowspec_address,json=ipv6vpnFlowspecAddress,proto3" json:"ipv6vpn_flowspec_address,omitempty"`
	Ipv4SrPolicyAddress    *BgpIpv4SrpolicyAddrT `protobuf:"bytes,25,opt,name=ipv4_sr_policy_address,json=ipv4SrPolicyAddress,proto3" json:"ipv4_sr_policy_address,omitempty"`
	Ipv6SrPolicyAddress    *BgpIpv6SrpolicyAddrT `protobuf:"bytes,26,opt,name=ipv6_sr_policy_address,json=ipv6SrPolicyAddress,proto3" json:"ipv6_sr_policy_address,omitempty"`
	XXX_NoUnkeyedLiteral   struct{}              `json:"-"`
	XXX_unrecognized       []byte                `json:"-"`
	XXX_sizecache          int32                 `json:"-"`
}

func (m *BgpAddrtype) Reset()         { *m = BgpAddrtype{} }
func (m *BgpAddrtype) String() string { return proto.CompactTextString(m) }
func (*BgpAddrtype) ProtoMessage()    {}
func (*BgpAddrtype) Descriptor() ([]byte, []int) {
	return fileDescriptor_61b710e9faccf897, []int{5}
}

func (m *BgpAddrtype) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BgpAddrtype.Unmarshal(m, b)
}
func (m *BgpAddrtype) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BgpAddrtype.Marshal(b, m, deterministic)
}
func (m *BgpAddrtype) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BgpAddrtype.Merge(m, src)
}
func (m *BgpAddrtype) XXX_Size() int {
	return xxx_messageInfo_BgpAddrtype.Size(m)
}
func (m *BgpAddrtype) XXX_DiscardUnknown() {
	xxx_messageInfo_BgpAddrtype.DiscardUnknown(m)
}

var xxx_messageInfo_BgpAddrtype proto.InternalMessageInfo

func (m *BgpAddrtype) GetAfi() string {
	if m != nil {
		return m.Afi
	}
	return ""
}

func (m *BgpAddrtype) GetIpv4Address() string {
	if m != nil {
		return m.Ipv4Address
	}
	return ""
}

func (m *BgpAddrtype) GetIpv4McastAddress() string {
	if m != nil {
		return m.Ipv4McastAddress
	}
	return ""
}

func (m *BgpAddrtype) GetIpv4LabelAddress() string {
	if m != nil {
		return m.Ipv4LabelAddress
	}
	return ""
}

func (m *BgpAddrtype) GetIpv4TunnelAddress() string {
	if m != nil {
		return m.Ipv4TunnelAddress
	}
	return ""
}

func (m *BgpAddrtype) GetIpv4MdtAddress() string {
	if m != nil {
		return m.Ipv4MdtAddress
	}
	return ""
}

func (m *BgpAddrtype) GetIpv4VpnAddress() string {
	if m != nil {
		return m.Ipv4VpnAddress
	}
	return ""
}

func (m *BgpAddrtype) GetIpv4VpnaMcastddress() string {
	if m != nil {
		return m.Ipv4VpnaMcastddress
	}
	return ""
}

func (m *BgpAddrtype) GetIpv6Address() string {
	if m != nil {
		return m.Ipv6Address
	}
	return ""
}

func (m *BgpAddrtype) GetIpv6McastAddress() string {
	if m != nil {
		return m.Ipv6McastAddress
	}
	return ""
}

func (m *BgpAddrtype) GetIpv6LabelAddress() string {
	if m != nil {
		return m.Ipv6LabelAddress
	}
	return ""
}

func (m *BgpAddrtype) GetIpv6VpnAddress() string {
	if m != nil {
		return m.Ipv6VpnAddress
	}
	return ""
}

func (m *BgpAddrtype) GetIpv6VpnMcastAddress() string {
	if m != nil {
		return m.Ipv6VpnMcastAddress
	}
	return ""
}

func (m *BgpAddrtype) GetL2VpnVplsAddress() *BgpL2VpnAddrT {
	if m != nil {
		return m.L2VpnVplsAddress
	}
	return nil
}

func (m *BgpAddrtype) GetRtConstraintAddress() string {
	if m != nil {
		return m.RtConstraintAddress
	}
	return ""
}

func (m *BgpAddrtype) GetIpv6MvpnAddress() string {
	if m != nil {
		return m.Ipv6MvpnAddress
	}
	return ""
}

func (m *BgpAddrtype) GetIpv4MvpnAddress() string {
	if m != nil {
		return m.Ipv4MvpnAddress
	}
	return ""
}

func (m *BgpAddrtype) GetL2VpnEvpnAddress() string {
	if m != nil {
		return m.L2VpnEvpnAddress
	}
	return ""
}

func (m *BgpAddrtype) GetLsLsAddress() string {
	if m != nil {
		return m.LsLsAddress
	}
	return ""
}

func (m *BgpAddrtype) GetL2VpnMspwAddress() *BgpL2VpnMspwAddrT {
	if m != nil {
		return m.L2VpnMspwAddress
	}
	return nil
}

func (m *BgpAddrtype) GetIpv4FlowspecAddress() string {
	if m != nil {
		return m.Ipv4FlowspecAddress
	}
	return ""
}

func (m *BgpAddrtype) GetIpv6FlowspecAddress() string {
	if m != nil {
		return m.Ipv6FlowspecAddress
	}
	return ""
}

func (m *BgpAddrtype) GetIpv4VpnFlowspecAddress() string {
	if m != nil {
		return m.Ipv4VpnFlowspecAddress
	}
	return ""
}

func (m *BgpAddrtype) GetIpv6VpnFlowspecAddress() string {
	if m != nil {
		return m.Ipv6VpnFlowspecAddress
	}
	return ""
}

func (m *BgpAddrtype) GetIpv4SrPolicyAddress() *BgpIpv4SrpolicyAddrT {
	if m != nil {
		return m.Ipv4SrPolicyAddress
	}
	return nil
}

func (m *BgpAddrtype) GetIpv6SrPolicyAddress() *BgpIpv6SrpolicyAddrT {
	if m != nil {
		return m.Ipv6SrPolicyAddress
	}
	return nil
}

type BgpTimespec struct {
	Seconds              uint32   `protobuf:"varint,1,opt,name=seconds,proto3" json:"seconds,omitempty"`
	Nanoseconds          uint32   `protobuf:"varint,2,opt,name=nanoseconds,proto3" json:"nanoseconds,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BgpTimespec) Reset()         { *m = BgpTimespec{} }
func (m *BgpTimespec) String() string { return proto.CompactTextString(m) }
func (*BgpTimespec) ProtoMessage()    {}
func (*BgpTimespec) Descriptor() ([]byte, []int) {
	return fileDescriptor_61b710e9faccf897, []int{6}
}

func (m *BgpTimespec) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BgpTimespec.Unmarshal(m, b)
}
func (m *BgpTimespec) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BgpTimespec.Marshal(b, m, deterministic)
}
func (m *BgpTimespec) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BgpTimespec.Merge(m, src)
}
func (m *BgpTimespec) XXX_Size() int {
	return xxx_messageInfo_BgpTimespec.Size(m)
}
func (m *BgpTimespec) XXX_DiscardUnknown() {
	xxx_messageInfo_BgpTimespec.DiscardUnknown(m)
}

var xxx_messageInfo_BgpTimespec proto.InternalMessageInfo

func (m *BgpTimespec) GetSeconds() uint32 {
	if m != nil {
		return m.Seconds
	}
	return 0
}

func (m *BgpTimespec) GetNanoseconds() uint32 {
	if m != nil {
		return m.Nanoseconds
	}
	return 0
}

type BgpUpdgenStatsBag struct {
	UpdateOutQueueMessagesHigh              uint32       `protobuf:"varint,1,opt,name=update_out_queue_messages_high,json=updateOutQueueMessagesHigh,proto3" json:"update_out_queue_messages_high,omitempty"`
	UpdateOutQueueMessagesCumulative        uint32       `protobuf:"varint,2,opt,name=update_out_queue_messages_cumulative,json=updateOutQueueMessagesCumulative,proto3" json:"update_out_queue_messages_cumulative,omitempty"`
	UpdateOutQueueMessagesDiscarded         uint32       `protobuf:"varint,3,opt,name=update_out_queue_messages_discarded,json=updateOutQueueMessagesDiscarded,proto3" json:"update_out_queue_messages_discarded,omitempty"`
	UpdateOutQueueMessagesCleared           uint32       `protobuf:"varint,4,opt,name=update_out_queue_messages_cleared,json=updateOutQueueMessagesCleared,proto3" json:"update_out_queue_messages_cleared,omitempty"`
	UpdateOutQueueSizeHigh                  uint32       `protobuf:"varint,5,opt,name=update_out_queue_size_high,json=updateOutQueueSizeHigh,proto3" json:"update_out_queue_size_high,omitempty"`
	UpdateOutQueueSizeCumulative            uint64       `protobuf:"varint,6,opt,name=update_out_queue_size_cumulative,json=updateOutQueueSizeCumulative,proto3" json:"update_out_queue_size_cumulative,omitempty"`
	UpdateOutQueueSizeDiscarded             uint64       `protobuf:"varint,7,opt,name=update_out_queue_size_discarded,json=updateOutQueueSizeDiscarded,proto3" json:"update_out_queue_size_discarded,omitempty"`
	UpdateOutQueueSizeCleared               uint64       `protobuf:"varint,8,opt,name=update_out_queue_size_cleared,json=updateOutQueueSizeCleared,proto3" json:"update_out_queue_size_cleared,omitempty"`
	LastUpdateDiscardTimestamp              *BgpTimespec `protobuf:"bytes,9,opt,name=last_update_discard_timestamp,json=lastUpdateDiscardTimestamp,proto3" json:"last_update_discard_timestamp,omitempty"`
	LastUpdateDiscardAge                    uint32       `protobuf:"varint,10,opt,name=last_update_discard_age,json=lastUpdateDiscardAge,proto3" json:"last_update_discard_age,omitempty"`
	LastUpdateClearedTimestamp              *BgpTimespec `protobuf:"bytes,11,opt,name=last_update_cleared_timestamp,json=lastUpdateClearedTimestamp,proto3" json:"last_update_cleared_timestamp,omitempty"`
	LastUpdateCleardAge                     uint32       `protobuf:"varint,12,opt,name=last_update_cleard_age,json=lastUpdateCleardAge,proto3" json:"last_update_cleard_age,omitempty"`
	UpdateThrottleCount                     uint32       `protobuf:"varint,13,opt,name=update_throttle_count,json=updateThrottleCount,proto3" json:"update_throttle_count,omitempty"`
	LastUpdateThrottleTimestamp             *BgpTimespec `protobuf:"bytes,14,opt,name=last_update_throttle_timestamp,json=lastUpdateThrottleTimestamp,proto3" json:"last_update_throttle_timestamp,omitempty"`
	LastUpdateThrottleAge                   uint32       `protobuf:"varint,15,opt,name=last_update_throttle_age,json=lastUpdateThrottleAge,proto3" json:"last_update_throttle_age,omitempty"`
	UpdateRecoveryCount                     uint32       `protobuf:"varint,16,opt,name=update_recovery_count,json=updateRecoveryCount,proto3" json:"update_recovery_count,omitempty"`
	LastUpdateRecoveryTimestamp             *BgpTimespec `protobuf:"bytes,17,opt,name=last_update_recovery_timestamp,json=lastUpdateRecoveryTimestamp,proto3" json:"last_update_recovery_timestamp,omitempty"`
	LastUpdateRecoveryAge                   uint32       `protobuf:"varint,18,opt,name=last_update_recovery_age,json=lastUpdateRecoveryAge,proto3" json:"last_update_recovery_age,omitempty"`
	UpdateMemoryAllocationFailCount         uint32       `protobuf:"varint,19,opt,name=update_memory_allocation_fail_count,json=updateMemoryAllocationFailCount,proto3" json:"update_memory_allocation_fail_count,omitempty"`
	LastUpdateMemoryAllocationFailTimestamp *BgpTimespec `protobuf:"bytes,20,opt,name=last_update_memory_allocation_fail_timestamp,json=lastUpdateMemoryAllocationFailTimestamp,proto3" json:"last_update_memory_allocation_fail_timestamp,omitempty"`
	LastUpdateMemoryAllocationFailAge       uint32       `protobuf:"varint,21,opt,name=last_update_memory_allocation_fail_age,json=lastUpdateMemoryAllocationFailAge,proto3" json:"last_update_memory_allocation_fail_age,omitempty"`
	XXX_NoUnkeyedLiteral                    struct{}     `json:"-"`
	XXX_unrecognized                        []byte       `json:"-"`
	XXX_sizecache                           int32        `json:"-"`
}

func (m *BgpUpdgenStatsBag) Reset()         { *m = BgpUpdgenStatsBag{} }
func (m *BgpUpdgenStatsBag) String() string { return proto.CompactTextString(m) }
func (*BgpUpdgenStatsBag) ProtoMessage()    {}
func (*BgpUpdgenStatsBag) Descriptor() ([]byte, []int) {
	return fileDescriptor_61b710e9faccf897, []int{7}
}

func (m *BgpUpdgenStatsBag) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BgpUpdgenStatsBag.Unmarshal(m, b)
}
func (m *BgpUpdgenStatsBag) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BgpUpdgenStatsBag.Marshal(b, m, deterministic)
}
func (m *BgpUpdgenStatsBag) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BgpUpdgenStatsBag.Merge(m, src)
}
func (m *BgpUpdgenStatsBag) XXX_Size() int {
	return xxx_messageInfo_BgpUpdgenStatsBag.Size(m)
}
func (m *BgpUpdgenStatsBag) XXX_DiscardUnknown() {
	xxx_messageInfo_BgpUpdgenStatsBag.DiscardUnknown(m)
}

var xxx_messageInfo_BgpUpdgenStatsBag proto.InternalMessageInfo

func (m *BgpUpdgenStatsBag) GetUpdateOutQueueMessagesHigh() uint32 {
	if m != nil {
		return m.UpdateOutQueueMessagesHigh
	}
	return 0
}

func (m *BgpUpdgenStatsBag) GetUpdateOutQueueMessagesCumulative() uint32 {
	if m != nil {
		return m.UpdateOutQueueMessagesCumulative
	}
	return 0
}

func (m *BgpUpdgenStatsBag) GetUpdateOutQueueMessagesDiscarded() uint32 {
	if m != nil {
		return m.UpdateOutQueueMessagesDiscarded
	}
	return 0
}

func (m *BgpUpdgenStatsBag) GetUpdateOutQueueMessagesCleared() uint32 {
	if m != nil {
		return m.UpdateOutQueueMessagesCleared
	}
	return 0
}

func (m *BgpUpdgenStatsBag) GetUpdateOutQueueSizeHigh() uint32 {
	if m != nil {
		return m.UpdateOutQueueSizeHigh
	}
	return 0
}

func (m *BgpUpdgenStatsBag) GetUpdateOutQueueSizeCumulative() uint64 {
	if m != nil {
		return m.UpdateOutQueueSizeCumulative
	}
	return 0
}

func (m *BgpUpdgenStatsBag) GetUpdateOutQueueSizeDiscarded() uint64 {
	if m != nil {
		return m.UpdateOutQueueSizeDiscarded
	}
	return 0
}

func (m *BgpUpdgenStatsBag) GetUpdateOutQueueSizeCleared() uint64 {
	if m != nil {
		return m.UpdateOutQueueSizeCleared
	}
	return 0
}

func (m *BgpUpdgenStatsBag) GetLastUpdateDiscardTimestamp() *BgpTimespec {
	if m != nil {
		return m.LastUpdateDiscardTimestamp
	}
	return nil
}

func (m *BgpUpdgenStatsBag) GetLastUpdateDiscardAge() uint32 {
	if m != nil {
		return m.LastUpdateDiscardAge
	}
	return 0
}

func (m *BgpUpdgenStatsBag) GetLastUpdateClearedTimestamp() *BgpTimespec {
	if m != nil {
		return m.LastUpdateClearedTimestamp
	}
	return nil
}

func (m *BgpUpdgenStatsBag) GetLastUpdateCleardAge() uint32 {
	if m != nil {
		return m.LastUpdateCleardAge
	}
	return 0
}

func (m *BgpUpdgenStatsBag) GetUpdateThrottleCount() uint32 {
	if m != nil {
		return m.UpdateThrottleCount
	}
	return 0
}

func (m *BgpUpdgenStatsBag) GetLastUpdateThrottleTimestamp() *BgpTimespec {
	if m != nil {
		return m.LastUpdateThrottleTimestamp
	}
	return nil
}

func (m *BgpUpdgenStatsBag) GetLastUpdateThrottleAge() uint32 {
	if m != nil {
		return m.LastUpdateThrottleAge
	}
	return 0
}

func (m *BgpUpdgenStatsBag) GetUpdateRecoveryCount() uint32 {
	if m != nil {
		return m.UpdateRecoveryCount
	}
	return 0
}

func (m *BgpUpdgenStatsBag) GetLastUpdateRecoveryTimestamp() *BgpTimespec {
	if m != nil {
		return m.LastUpdateRecoveryTimestamp
	}
	return nil
}

func (m *BgpUpdgenStatsBag) GetLastUpdateRecoveryAge() uint32 {
	if m != nil {
		return m.LastUpdateRecoveryAge
	}
	return 0
}

func (m *BgpUpdgenStatsBag) GetUpdateMemoryAllocationFailCount() uint32 {
	if m != nil {
		return m.UpdateMemoryAllocationFailCount
	}
	return 0
}

func (m *BgpUpdgenStatsBag) GetLastUpdateMemoryAllocationFailTimestamp() *BgpTimespec {
	if m != nil {
		return m.LastUpdateMemoryAllocationFailTimestamp
	}
	return nil
}

func (m *BgpUpdgenStatsBag) GetLastUpdateMemoryAllocationFailAge() uint32 {
	if m != nil {
		return m.LastUpdateMemoryAllocationFailAge
	}
	return 0
}

type BgpUpdgenNbrBag struct {
	ProcessId                        uint32             `protobuf:"varint,50,opt,name=process_id,json=processId,proto3" json:"process_id,omitempty"`
	UpdateVrfName                    string             `protobuf:"bytes,51,opt,name=update_vrf_name,json=updateVrfName,proto3" json:"update_vrf_name,omitempty"`
	UpdateGroupAfName                string             `protobuf:"bytes,52,opt,name=update_group_af_name,json=updateGroupAfName,proto3" json:"update_group_af_name,omitempty"`
	UpdateNeighborAddress            *BgpAddrtype       `protobuf:"bytes,53,opt,name=update_neighbor_address,json=updateNeighborAddress,proto3" json:"update_neighbor_address,omitempty"`
	UpdateFilterGroupIndex           uint32             `protobuf:"varint,54,opt,name=update_filter_group_index,json=updateFilterGroupIndex,proto3" json:"update_filter_group_index,omitempty"`
	RefreshFilterGroupIndex          uint32             `protobuf:"varint,55,opt,name=refresh_filter_group_index,json=refreshFilterGroupIndex,proto3" json:"refresh_filter_group_index,omitempty"`
	SubGroupIndexXr                  uint32             `protobuf:"varint,56,opt,name=sub_group_index_xr,json=subGroupIndexXr,proto3" json:"sub_group_index_xr,omitempty"`
	RefreshSubGroupIndex             uint32             `protobuf:"varint,57,opt,name=refresh_sub_group_index,json=refreshSubGroupIndex,proto3" json:"refresh_sub_group_index,omitempty"`
	RefreshSubGroupId                uint32             `protobuf:"varint,58,opt,name=refresh_sub_group_id,json=refreshSubGroupId,proto3" json:"refresh_sub_group_id,omitempty"`
	UpdateGroupIndexXr               uint32             `protobuf:"varint,59,opt,name=update_group_index_xr,json=updateGroupIndexXr,proto3" json:"update_group_index_xr,omitempty"`
	UpdateMainTableVersion           uint32             `protobuf:"varint,60,opt,name=update_main_table_version,json=updateMainTableVersion,proto3" json:"update_main_table_version,omitempty"`
	UpdateVrfTableRibVersion         uint32             `protobuf:"varint,61,opt,name=update_vrf_table_rib_version,json=updateVrfTableRibVersion,proto3" json:"update_vrf_table_rib_version,omitempty"`
	UpdateOutQueueMessages           uint32             `protobuf:"varint,62,opt,name=update_out_queue_messages,json=updateOutQueueMessages,proto3" json:"update_out_queue_messages,omitempty"`
	UpdateOutQueueSize               uint32             `protobuf:"varint,63,opt,name=update_out_queue_size,json=updateOutQueueSize,proto3" json:"update_out_queue_size,omitempty"`
	RefreshUpdateOutQueueMessages    uint32             `protobuf:"varint,64,opt,name=refresh_update_out_queue_messages,json=refreshUpdateOutQueueMessages,proto3" json:"refresh_update_out_queue_messages,omitempty"`
	RefreshUpdateOutQueueSize        uint32             `protobuf:"varint,65,opt,name=refresh_update_out_queue_size,json=refreshUpdateOutQueueSize,proto3" json:"refresh_update_out_queue_size,omitempty"`
	UpdateFilterGroupMessages        uint32             `protobuf:"varint,66,opt,name=update_filter_group_messages,json=updateFilterGroupMessages,proto3" json:"update_filter_group_messages,omitempty"`
	LastSubGroupAddTimestamp         *BgpTimespec       `protobuf:"bytes,67,opt,name=last_sub_group_add_timestamp,json=lastSubGroupAddTimestamp,proto3" json:"last_sub_group_add_timestamp,omitempty"`
	LastSubGroupRemoveTimestamp      *BgpTimespec       `protobuf:"bytes,68,opt,name=last_sub_group_remove_timestamp,json=lastSubGroupRemoveTimestamp,proto3" json:"last_sub_group_remove_timestamp,omitempty"`
	LastFilterGroupAddTimestamp      *BgpTimespec       `protobuf:"bytes,69,opt,name=last_filter_group_add_timestamp,json=lastFilterGroupAddTimestamp,proto3" json:"last_filter_group_add_timestamp,omitempty"`
	LastFilterGroupRemoveTimestamp   *BgpTimespec       `protobuf:"bytes,70,opt,name=last_filter_group_remove_timestamp,json=lastFilterGroupRemoveTimestamp,proto3" json:"last_filter_group_remove_timestamp,omitempty"`
	Version                          uint32             `protobuf:"varint,71,opt,name=version,proto3" json:"version,omitempty"`
	PendingTargetVersion             uint32             `protobuf:"varint,72,opt,name=pending_target_version,json=pendingTargetVersion,proto3" json:"pending_target_version,omitempty"`
	NextResumeVersion                uint32             `protobuf:"varint,73,opt,name=next_resume_version,json=nextResumeVersion,proto3" json:"next_resume_version,omitempty"`
	AckVersion                       uint32             `protobuf:"varint,74,opt,name=ack_version,json=ackVersion,proto3" json:"ack_version,omitempty"`
	SyncedAckVersion                 uint32             `protobuf:"varint,75,opt,name=synced_ack_version,json=syncedAckVersion,proto3" json:"synced_ack_version,omitempty"`
	OutstandingVersionCount          uint32             `protobuf:"varint,76,opt,name=outstanding_version_count,json=outstandingVersionCount,proto3" json:"outstanding_version_count,omitempty"`
	UpdateRefreshVersion             uint32             `protobuf:"varint,77,opt,name=update_refresh_version,json=updateRefreshVersion,proto3" json:"update_refresh_version,omitempty"`
	RefreshRequestedTargetVersion    uint32             `protobuf:"varint,78,opt,name=refresh_requested_target_version,json=refreshRequestedTargetVersion,proto3" json:"refresh_requested_target_version,omitempty"`
	UpdateRefreshTargetVersion       uint32             `protobuf:"varint,79,opt,name=update_refresh_target_version,json=updateRefreshTargetVersion,proto3" json:"update_refresh_target_version,omitempty"`
	RefreshPendingTargetVersion      uint32             `protobuf:"varint,80,opt,name=refresh_pending_target_version,json=refreshPendingTargetVersion,proto3" json:"refresh_pending_target_version,omitempty"`
	RefreshNextResumeVersion         uint32             `protobuf:"varint,81,opt,name=refresh_next_resume_version,json=refreshNextResumeVersion,proto3" json:"refresh_next_resume_version,omitempty"`
	RefreshAckVersion                uint32             `protobuf:"varint,82,opt,name=refresh_ack_version,json=refreshAckVersion,proto3" json:"refresh_ack_version,omitempty"`
	FirstDefaultOriginateTimestamp   *BgpTimespec       `protobuf:"bytes,83,opt,name=first_default_originate_timestamp,json=firstDefaultOriginateTimestamp,proto3" json:"first_default_originate_timestamp,omitempty"`
	LastDefaultOriginateTimestamp    *BgpTimespec       `protobuf:"bytes,84,opt,name=last_default_originate_timestamp,json=lastDefaultOriginateTimestamp,proto3" json:"last_default_originate_timestamp,omitempty"`
	LastDefaultOriginateAge          uint32             `protobuf:"varint,85,opt,name=last_default_originate_age,json=lastDefaultOriginateAge,proto3" json:"last_default_originate_age,omitempty"`
	DefaultOriginateState            int32              `protobuf:"zigzag32,86,opt,name=default_originate_state,json=defaultOriginateState,proto3" json:"default_originate_state,omitempty"`
	DefaultOriginateInternalContext  int32              `protobuf:"zigzag32,87,opt,name=default_originate_internal_context,json=defaultOriginateInternalContext,proto3" json:"default_originate_internal_context,omitempty"`
	IsEorOutstanding                 bool               `protobuf:"varint,88,opt,name=is_eor_outstanding,json=isEorOutstanding,proto3" json:"is_eor_outstanding,omitempty"`
	OutboundRefreshCount             uint32             `protobuf:"varint,89,opt,name=outbound_refresh_count,json=outboundRefreshCount,proto3" json:"outbound_refresh_count,omitempty"`
	InboundRefreshCount              uint32             `protobuf:"varint,90,opt,name=inbound_refresh_count,json=inboundRefreshCount,proto3" json:"inbound_refresh_count,omitempty"`
	LastUpdateGroupStartTimestamp    *BgpTimespec       `protobuf:"bytes,91,opt,name=last_update_group_start_timestamp,json=lastUpdateGroupStartTimestamp,proto3" json:"last_update_group_start_timestamp,omitempty"`
	LastUpdateGroupExpiryTimestamp   *BgpTimespec       `protobuf:"bytes,92,opt,name=last_update_group_expiry_timestamp,json=lastUpdateGroupExpiryTimestamp,proto3" json:"last_update_group_expiry_timestamp,omitempty"`
	IsUpdateGroupTimerRunning        bool               `protobuf:"varint,93,opt,name=is_update_group_timer_running,json=isUpdateGroupTimerRunning,proto3" json:"is_update_group_timer_running,omitempty"`
	CurrentUpdateGroupAfName         string             `protobuf:"bytes,94,opt,name=current_update_group_af_name,json=currentUpdateGroupAfName,proto3" json:"current_update_group_af_name,omitempty"`
	LastUpdateGroupAfName            string             `protobuf:"bytes,95,opt,name=last_update_group_af_name,json=lastUpdateGroupAfName,proto3" json:"last_update_group_af_name,omitempty"`
	FirstUpdateQueuedTimestamp       *BgpTimespec       `protobuf:"bytes,96,opt,name=first_update_queued_timestamp,json=firstUpdateQueuedTimestamp,proto3" json:"first_update_queued_timestamp,omitempty"`
	LastUpdateQueuedTimestamp        *BgpTimespec       `protobuf:"bytes,97,opt,name=last_update_queued_timestamp,json=lastUpdateQueuedTimestamp,proto3" json:"last_update_queued_timestamp,omitempty"`
	LastUpdateQueuedAge              uint32             `protobuf:"varint,98,opt,name=last_update_queued_age,json=lastUpdateQueuedAge,proto3" json:"last_update_queued_age,omitempty"`
	LastRefreshUpdateQueuedTimestamp *BgpTimespec       `protobuf:"bytes,99,opt,name=last_refresh_update_queued_timestamp,json=lastRefreshUpdateQueuedTimestamp,proto3" json:"last_refresh_update_queued_timestamp,omitempty"`
	LastRefreshUpdateQueuedAge       uint32             `protobuf:"varint,100,opt,name=last_refresh_update_queued_age,json=lastRefreshUpdateQueuedAge,proto3" json:"last_refresh_update_queued_age,omitempty"`
	FirstUpdateWriteTimestamp        *BgpTimespec       `protobuf:"bytes,101,opt,name=first_update_write_timestamp,json=firstUpdateWriteTimestamp,proto3" json:"first_update_write_timestamp,omitempty"`
	LastUpdateWriteTimestamp         *BgpTimespec       `protobuf:"bytes,102,opt,name=last_update_write_timestamp,json=lastUpdateWriteTimestamp,proto3" json:"last_update_write_timestamp,omitempty"`
	LastUpdateWriteAge               uint32             `protobuf:"varint,103,opt,name=last_update_write_age,json=lastUpdateWriteAge,proto3" json:"last_update_write_age,omitempty"`
	LastRefreshUpdateWriteTimestamp  *BgpTimespec       `protobuf:"bytes,104,opt,name=last_refresh_update_write_timestamp,json=lastRefreshUpdateWriteTimestamp,proto3" json:"last_refresh_update_write_timestamp,omitempty"`
	LastRefreshUpdateWriteAge        uint32             `protobuf:"varint,105,opt,name=last_refresh_update_write_age,json=lastRefreshUpdateWriteAge,proto3" json:"last_refresh_update_write_age,omitempty"`
	UpdateStatistics                 *BgpUpdgenStatsBag `protobuf:"bytes,106,opt,name=update_statistics,json=updateStatistics,proto3" json:"update_statistics,omitempty"`
	XXX_NoUnkeyedLiteral             struct{}           `json:"-"`
	XXX_unrecognized                 []byte             `json:"-"`
	XXX_sizecache                    int32              `json:"-"`
}

func (m *BgpUpdgenNbrBag) Reset()         { *m = BgpUpdgenNbrBag{} }
func (m *BgpUpdgenNbrBag) String() string { return proto.CompactTextString(m) }
func (*BgpUpdgenNbrBag) ProtoMessage()    {}
func (*BgpUpdgenNbrBag) Descriptor() ([]byte, []int) {
	return fileDescriptor_61b710e9faccf897, []int{8}
}

func (m *BgpUpdgenNbrBag) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BgpUpdgenNbrBag.Unmarshal(m, b)
}
func (m *BgpUpdgenNbrBag) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BgpUpdgenNbrBag.Marshal(b, m, deterministic)
}
func (m *BgpUpdgenNbrBag) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BgpUpdgenNbrBag.Merge(m, src)
}
func (m *BgpUpdgenNbrBag) XXX_Size() int {
	return xxx_messageInfo_BgpUpdgenNbrBag.Size(m)
}
func (m *BgpUpdgenNbrBag) XXX_DiscardUnknown() {
	xxx_messageInfo_BgpUpdgenNbrBag.DiscardUnknown(m)
}

var xxx_messageInfo_BgpUpdgenNbrBag proto.InternalMessageInfo

func (m *BgpUpdgenNbrBag) GetProcessId() uint32 {
	if m != nil {
		return m.ProcessId
	}
	return 0
}

func (m *BgpUpdgenNbrBag) GetUpdateVrfName() string {
	if m != nil {
		return m.UpdateVrfName
	}
	return ""
}

func (m *BgpUpdgenNbrBag) GetUpdateGroupAfName() string {
	if m != nil {
		return m.UpdateGroupAfName
	}
	return ""
}

func (m *BgpUpdgenNbrBag) GetUpdateNeighborAddress() *BgpAddrtype {
	if m != nil {
		return m.UpdateNeighborAddress
	}
	return nil
}

func (m *BgpUpdgenNbrBag) GetUpdateFilterGroupIndex() uint32 {
	if m != nil {
		return m.UpdateFilterGroupIndex
	}
	return 0
}

func (m *BgpUpdgenNbrBag) GetRefreshFilterGroupIndex() uint32 {
	if m != nil {
		return m.RefreshFilterGroupIndex
	}
	return 0
}

func (m *BgpUpdgenNbrBag) GetSubGroupIndexXr() uint32 {
	if m != nil {
		return m.SubGroupIndexXr
	}
	return 0
}

func (m *BgpUpdgenNbrBag) GetRefreshSubGroupIndex() uint32 {
	if m != nil {
		return m.RefreshSubGroupIndex
	}
	return 0
}

func (m *BgpUpdgenNbrBag) GetRefreshSubGroupId() uint32 {
	if m != nil {
		return m.RefreshSubGroupId
	}
	return 0
}

func (m *BgpUpdgenNbrBag) GetUpdateGroupIndexXr() uint32 {
	if m != nil {
		return m.UpdateGroupIndexXr
	}
	return 0
}

func (m *BgpUpdgenNbrBag) GetUpdateMainTableVersion() uint32 {
	if m != nil {
		return m.UpdateMainTableVersion
	}
	return 0
}

func (m *BgpUpdgenNbrBag) GetUpdateVrfTableRibVersion() uint32 {
	if m != nil {
		return m.UpdateVrfTableRibVersion
	}
	return 0
}

func (m *BgpUpdgenNbrBag) GetUpdateOutQueueMessages() uint32 {
	if m != nil {
		return m.UpdateOutQueueMessages
	}
	return 0
}

func (m *BgpUpdgenNbrBag) GetUpdateOutQueueSize() uint32 {
	if m != nil {
		return m.UpdateOutQueueSize
	}
	return 0
}

func (m *BgpUpdgenNbrBag) GetRefreshUpdateOutQueueMessages() uint32 {
	if m != nil {
		return m.RefreshUpdateOutQueueMessages
	}
	return 0
}

func (m *BgpUpdgenNbrBag) GetRefreshUpdateOutQueueSize() uint32 {
	if m != nil {
		return m.RefreshUpdateOutQueueSize
	}
	return 0
}

func (m *BgpUpdgenNbrBag) GetUpdateFilterGroupMessages() uint32 {
	if m != nil {
		return m.UpdateFilterGroupMessages
	}
	return 0
}

func (m *BgpUpdgenNbrBag) GetLastSubGroupAddTimestamp() *BgpTimespec {
	if m != nil {
		return m.LastSubGroupAddTimestamp
	}
	return nil
}

func (m *BgpUpdgenNbrBag) GetLastSubGroupRemoveTimestamp() *BgpTimespec {
	if m != nil {
		return m.LastSubGroupRemoveTimestamp
	}
	return nil
}

func (m *BgpUpdgenNbrBag) GetLastFilterGroupAddTimestamp() *BgpTimespec {
	if m != nil {
		return m.LastFilterGroupAddTimestamp
	}
	return nil
}

func (m *BgpUpdgenNbrBag) GetLastFilterGroupRemoveTimestamp() *BgpTimespec {
	if m != nil {
		return m.LastFilterGroupRemoveTimestamp
	}
	return nil
}

func (m *BgpUpdgenNbrBag) GetVersion() uint32 {
	if m != nil {
		return m.Version
	}
	return 0
}

func (m *BgpUpdgenNbrBag) GetPendingTargetVersion() uint32 {
	if m != nil {
		return m.PendingTargetVersion
	}
	return 0
}

func (m *BgpUpdgenNbrBag) GetNextResumeVersion() uint32 {
	if m != nil {
		return m.NextResumeVersion
	}
	return 0
}

func (m *BgpUpdgenNbrBag) GetAckVersion() uint32 {
	if m != nil {
		return m.AckVersion
	}
	return 0
}

func (m *BgpUpdgenNbrBag) GetSyncedAckVersion() uint32 {
	if m != nil {
		return m.SyncedAckVersion
	}
	return 0
}

func (m *BgpUpdgenNbrBag) GetOutstandingVersionCount() uint32 {
	if m != nil {
		return m.OutstandingVersionCount
	}
	return 0
}

func (m *BgpUpdgenNbrBag) GetUpdateRefreshVersion() uint32 {
	if m != nil {
		return m.UpdateRefreshVersion
	}
	return 0
}

func (m *BgpUpdgenNbrBag) GetRefreshRequestedTargetVersion() uint32 {
	if m != nil {
		return m.RefreshRequestedTargetVersion
	}
	return 0
}

func (m *BgpUpdgenNbrBag) GetUpdateRefreshTargetVersion() uint32 {
	if m != nil {
		return m.UpdateRefreshTargetVersion
	}
	return 0
}

func (m *BgpUpdgenNbrBag) GetRefreshPendingTargetVersion() uint32 {
	if m != nil {
		return m.RefreshPendingTargetVersion
	}
	return 0
}

func (m *BgpUpdgenNbrBag) GetRefreshNextResumeVersion() uint32 {
	if m != nil {
		return m.RefreshNextResumeVersion
	}
	return 0
}

func (m *BgpUpdgenNbrBag) GetRefreshAckVersion() uint32 {
	if m != nil {
		return m.RefreshAckVersion
	}
	return 0
}

func (m *BgpUpdgenNbrBag) GetFirstDefaultOriginateTimestamp() *BgpTimespec {
	if m != nil {
		return m.FirstDefaultOriginateTimestamp
	}
	return nil
}

func (m *BgpUpdgenNbrBag) GetLastDefaultOriginateTimestamp() *BgpTimespec {
	if m != nil {
		return m.LastDefaultOriginateTimestamp
	}
	return nil
}

func (m *BgpUpdgenNbrBag) GetLastDefaultOriginateAge() uint32 {
	if m != nil {
		return m.LastDefaultOriginateAge
	}
	return 0
}

func (m *BgpUpdgenNbrBag) GetDefaultOriginateState() int32 {
	if m != nil {
		return m.DefaultOriginateState
	}
	return 0
}

func (m *BgpUpdgenNbrBag) GetDefaultOriginateInternalContext() int32 {
	if m != nil {
		return m.DefaultOriginateInternalContext
	}
	return 0
}

func (m *BgpUpdgenNbrBag) GetIsEorOutstanding() bool {
	if m != nil {
		return m.IsEorOutstanding
	}
	return false
}

func (m *BgpUpdgenNbrBag) GetOutboundRefreshCount() uint32 {
	if m != nil {
		return m.OutboundRefreshCount
	}
	return 0
}

func (m *BgpUpdgenNbrBag) GetInboundRefreshCount() uint32 {
	if m != nil {
		return m.InboundRefreshCount
	}
	return 0
}

func (m *BgpUpdgenNbrBag) GetLastUpdateGroupStartTimestamp() *BgpTimespec {
	if m != nil {
		return m.LastUpdateGroupStartTimestamp
	}
	return nil
}

func (m *BgpUpdgenNbrBag) GetLastUpdateGroupExpiryTimestamp() *BgpTimespec {
	if m != nil {
		return m.LastUpdateGroupExpiryTimestamp
	}
	return nil
}

func (m *BgpUpdgenNbrBag) GetIsUpdateGroupTimerRunning() bool {
	if m != nil {
		return m.IsUpdateGroupTimerRunning
	}
	return false
}

func (m *BgpUpdgenNbrBag) GetCurrentUpdateGroupAfName() string {
	if m != nil {
		return m.CurrentUpdateGroupAfName
	}
	return ""
}

func (m *BgpUpdgenNbrBag) GetLastUpdateGroupAfName() string {
	if m != nil {
		return m.LastUpdateGroupAfName
	}
	return ""
}

func (m *BgpUpdgenNbrBag) GetFirstUpdateQueuedTimestamp() *BgpTimespec {
	if m != nil {
		return m.FirstUpdateQueuedTimestamp
	}
	return nil
}

func (m *BgpUpdgenNbrBag) GetLastUpdateQueuedTimestamp() *BgpTimespec {
	if m != nil {
		return m.LastUpdateQueuedTimestamp
	}
	return nil
}

func (m *BgpUpdgenNbrBag) GetLastUpdateQueuedAge() uint32 {
	if m != nil {
		return m.LastUpdateQueuedAge
	}
	return 0
}

func (m *BgpUpdgenNbrBag) GetLastRefreshUpdateQueuedTimestamp() *BgpTimespec {
	if m != nil {
		return m.LastRefreshUpdateQueuedTimestamp
	}
	return nil
}

func (m *BgpUpdgenNbrBag) GetLastRefreshUpdateQueuedAge() uint32 {
	if m != nil {
		return m.LastRefreshUpdateQueuedAge
	}
	return 0
}

func (m *BgpUpdgenNbrBag) GetFirstUpdateWriteTimestamp() *BgpTimespec {
	if m != nil {
		return m.FirstUpdateWriteTimestamp
	}
	return nil
}

func (m *BgpUpdgenNbrBag) GetLastUpdateWriteTimestamp() *BgpTimespec {
	if m != nil {
		return m.LastUpdateWriteTimestamp
	}
	return nil
}

func (m *BgpUpdgenNbrBag) GetLastUpdateWriteAge() uint32 {
	if m != nil {
		return m.LastUpdateWriteAge
	}
	return 0
}

func (m *BgpUpdgenNbrBag) GetLastRefreshUpdateWriteTimestamp() *BgpTimespec {
	if m != nil {
		return m.LastRefreshUpdateWriteTimestamp
	}
	return nil
}

func (m *BgpUpdgenNbrBag) GetLastRefreshUpdateWriteAge() uint32 {
	if m != nil {
		return m.LastRefreshUpdateWriteAge
	}
	return 0
}

func (m *BgpUpdgenNbrBag) GetUpdateStatistics() *BgpUpdgenStatsBag {
	if m != nil {
		return m.UpdateStatistics
	}
	return nil
}

func init() {
	proto.RegisterType((*BgpUpdgenNbrBag_KEYS)(nil), "cisco_ios_xr_ipv4_bgp_oper.bgp.instances.instance.instance_standby.vrfs.vrf.afs.af.update_generation_neighbors.update_generation_neighbor.bgp_updgen_nbr_bag_KEYS")
	proto.RegisterType((*BgpL2VpnAddrT)(nil), "cisco_ios_xr_ipv4_bgp_oper.bgp.instances.instance.instance_standby.vrfs.vrf.afs.af.update_generation_neighbors.update_generation_neighbor.bgp_l2vpn_addr_t")
	proto.RegisterType((*BgpL2VpnMspwAddrT)(nil), "cisco_ios_xr_ipv4_bgp_oper.bgp.instances.instance.instance_standby.vrfs.vrf.afs.af.update_generation_neighbors.update_generation_neighbor.bgp_l2vpn_mspw_addr_t")
	proto.RegisterType((*BgpIpv4SrpolicyAddrT)(nil), "cisco_ios_xr_ipv4_bgp_oper.bgp.instances.instance.instance_standby.vrfs.vrf.afs.af.update_generation_neighbors.update_generation_neighbor.bgp_ipv4_srpolicy_addr_t")
	proto.RegisterType((*BgpIpv6SrpolicyAddrT)(nil), "cisco_ios_xr_ipv4_bgp_oper.bgp.instances.instance.instance_standby.vrfs.vrf.afs.af.update_generation_neighbors.update_generation_neighbor.bgp_ipv6_srpolicy_addr_t")
	proto.RegisterType((*BgpAddrtype)(nil), "cisco_ios_xr_ipv4_bgp_oper.bgp.instances.instance.instance_standby.vrfs.vrf.afs.af.update_generation_neighbors.update_generation_neighbor.bgp_addrtype")
	proto.RegisterType((*BgpTimespec)(nil), "cisco_ios_xr_ipv4_bgp_oper.bgp.instances.instance.instance_standby.vrfs.vrf.afs.af.update_generation_neighbors.update_generation_neighbor.bgp_timespec")
	proto.RegisterType((*BgpUpdgenStatsBag)(nil), "cisco_ios_xr_ipv4_bgp_oper.bgp.instances.instance.instance_standby.vrfs.vrf.afs.af.update_generation_neighbors.update_generation_neighbor.bgp_updgen_stats_bag")
	proto.RegisterType((*BgpUpdgenNbrBag)(nil), "cisco_ios_xr_ipv4_bgp_oper.bgp.instances.instance.instance_standby.vrfs.vrf.afs.af.update_generation_neighbors.update_generation_neighbor.bgp_updgen_nbr_bag")
}

func init() { proto.RegisterFile("bgp_updgen_nbr_bag.proto", fileDescriptor_61b710e9faccf897) }

var fileDescriptor_61b710e9faccf897 = []byte{
	// 2365 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xd4, 0x5a, 0x5b, 0x6f, 0x14, 0xc9,
	0x15, 0x56, 0x2f, 0x2c, 0x86, 0x63, 0x0f, 0xb6, 0xdb, 0xb7, 0xb6, 0xc1, 0x78, 0x30, 0x2b, 0xd6,
	0xab, 0xa0, 0x59, 0x61, 0xbc, 0x03, 0x0b, 0x7b, 0xc1, 0x98, 0xeb, 0x82, 0x0d, 0xb4, 0x0d, 0xcb,
	0xe6, 0xd6, 0xe9, 0x99, 0xae, 0x19, 0x57, 0xb6, 0xa7, 0xbb, 0xb7, 0xaa, 0xda, 0x98, 0xfd, 0x05,
	0xc9, 0x2f, 0xc8, 0x43, 0x1e, 0x12, 0x29, 0x8f, 0xf9, 0x13, 0x91, 0xf2, 0x16, 0x29, 0x4a, 0xde,
	0x92, 0xd5, 0x2a, 0x91, 0x72, 0x51, 0x94, 0x7f, 0x90, 0xd7, 0xa8, 0x6e, 0xdd, 0xd5, 0x97, 0xb1,
	0x92, 0xb7, 0xf1, 0x0b, 0xcc, 0xd4, 0xb9, 0xf4, 0xf9, 0xbe, 0x73, 0xba, 0xea, 0xd4, 0x19, 0x83,
	0xd3, 0xe9, 0x27, 0x5e, 0x9a, 0x04, 0x7d, 0x14, 0x79, 0x51, 0x87, 0x78, 0x1d, 0xbf, 0xdf, 0x4a,
	0x48, 0xcc, 0x62, 0xfb, 0xa7, 0x56, 0x17, 0xd3, 0x6e, 0xec, 0xe1, 0x98, 0x7a, 0x87, 0xc4, 0xc3,
	0xc9, 0xc1, 0x86, 0xc7, 0x95, 0xe3, 0x04, 0x91, 0x56, 0xa7, 0x9f, 0xb4, 0x70, 0x44, 0x99, 0x1f,
	0x75, 0x11, 0xcd, 0x3e, 0x65, 0x1f, 0x3c, 0xfe, 0x5f, 0xd0, 0x79, 0xd3, 0x3a, 0x20, 0x3d, 0xca,
	0xff, 0x69, 0xf9, 0x3d, 0xda, 0xf2, 0x7b, 0xad, 0x34, 0x09, 0x7c, 0x86, 0xbc, 0x3e, 0x8a, 0x10,
	0xf1, 0x19, 0x8e, 0x23, 0x2f, 0x42, 0xb8, 0xbf, 0xdf, 0x89, 0x09, 0x3d, 0x42, 0xb6, 0xfa, 0xdb,
	0xb7, 0x60, 0xa1, 0x1a, 0xa8, 0xf7, 0xf8, 0xde, 0x17, 0xbb, 0xf6, 0x25, 0x68, 0x64, 0x8f, 0x8d,
	0xfc, 0x01, 0x72, 0xac, 0xa6, 0xb5, 0x76, 0xc6, 0x9d, 0xd0, 0x8b, 0x3b, 0xfe, 0x00, 0xd9, 0x8b,
	0x70, 0xfa, 0x80, 0xf4, 0xa4, 0xfc, 0x2d, 0x21, 0x1f, 0x3b, 0x20, 0x3d, 0x21, 0x5a, 0x80, 0x31,
	0x5f, 0x49, 0x4e, 0x08, 0xc9, 0x29, 0x5f, 0x0a, 0xae, 0x80, 0xad, 0x43, 0x22, 0x71, 0x9a, 0x78,
	0x38, 0x0a, 0xd0, 0xa1, 0x73, 0xb2, 0x69, 0xad, 0x35, 0xdc, 0x29, 0x29, 0x79, 0xc0, 0x05, 0x8f,
	0xf8, 0xba, 0x7d, 0x19, 0x26, 0x69, 0xda, 0x29, 0xa8, 0xbe, 0x2d, 0x54, 0x1b, 0x34, 0xed, 0x18,
	0x7a, 0x4d, 0x98, 0x30, 0xf4, 0x02, 0xe7, 0x94, 0x50, 0x82, 0x4c, 0x29, 0xe0, 0xcf, 0xed, 0xe1,
	0x90, 0x21, 0x52, 0x70, 0x36, 0x26, 0x9f, 0x2b, 0x25, 0x86, 0xbf, 0xf7, 0x60, 0x4a, 0xd3, 0xe4,
	0xf9, 0x41, 0x40, 0x10, 0xa5, 0xce, 0x69, 0x81, 0x63, 0x52, 0xaf, 0x6f, 0xca, 0xe5, 0xd5, 0xeb,
	0x30, 0xc5, 0x49, 0x0c, 0xd7, 0x0f, 0x92, 0x48, 0xe8, 0x7a, 0x8c, 0xb3, 0x97, 0x7f, 0xe7, 0xb6,
	0x56, 0xf3, 0xc4, 0x5a, 0xc3, 0x9d, 0x10, 0x8b, 0xda, 0xf0, 0x23, 0x98, 0xcb, 0x0d, 0x07, 0x34,
	0x79, 0xfd, 0x7f, 0x59, 0xef, 0xc8, 0x22, 0x13, 0x05, 0x44, 0x49, 0x12, 0x87, 0xb8, 0xfb, 0x46,
	0x3b, 0x58, 0x87, 0xb9, 0xea, 0x7a, 0xee, 0x68, 0x86, 0x0b, 0x77, 0x95, 0xac, 0xea, 0xaf, 0x3d,
	0xc4, 0x5f, 0xfb, 0x28, 0x7f, 0xed, 0xb2, 0xbf, 0xdf, 0x9c, 0x85, 0x09, 0xee, 0x90, 0xab, 0xb2,
	0x37, 0x09, 0xb2, 0xa7, 0xe0, 0x84, 0xdf, 0xc3, 0xaa, 0x8e, 0xf8, 0x47, 0xfb, 0x22, 0x4c, 0x88,
	0x30, 0xb5, 0x37, 0x59, 0x42, 0xe3, 0x7c, 0x4d, 0x79, 0xe1, 0x59, 0x13, 0x2a, 0x83, 0xae, 0x4f,
	0x59, 0xa6, 0x28, 0x2b, 0x6a, 0x8a, 0x4b, 0xb6, 0xb9, 0xa0, 0xac, 0x1d, 0xfa, 0x1d, 0x14, 0x66,
	0xda, 0x27, 0x73, 0xed, 0x27, 0x5c, 0xa0, 0xb5, 0x5b, 0x20, 0x88, 0xf0, 0x58, 0x1a, 0x45, 0x86,
	0xfa, 0xdb, 0x42, 0x7d, 0x9a, 0x8b, 0xf6, 0x84, 0x44, 0xeb, 0xaf, 0xc1, 0x94, 0x8c, 0x25, 0xc8,
	0x23, 0x39, 0x25, 0x94, 0xcf, 0x8a, 0x48, 0x82, 0x2c, 0x8e, 0x77, 0x61, 0x92, 0xaf, 0x98, 0x29,
	0x1c, 0xcb, 0x15, 0xf3, 0x24, 0xda, 0x57, 0x61, 0x56, 0xad, 0xf8, 0x12, 0x62, 0xa1, 0xd4, 0x66,
	0xb4, 0x6c, 0x3b, 0x17, 0x29, 0xd2, 0xda, 0x99, 0xe3, 0x33, 0x19, 0x69, 0xed, 0x22, 0x0d, 0xed,
	0x12, 0x69, 0x90, 0xd1, 0xd0, 0xae, 0x21, 0xad, 0x5d, 0x22, 0x6d, 0x3c, 0xd7, 0x2e, 0x90, 0x26,
	0xa1, 0xb5, 0x4d, 0x68, 0x13, 0x19, 0xb4, 0xb6, 0x01, 0x4d, 0xd5, 0x8c, 0xa8, 0xed, 0x42, 0x1c,
	0x8d, 0x0c, 0x1b, 0x17, 0x16, 0x42, 0xf9, 0x9d, 0x05, 0xb6, 0xac, 0xfc, 0x83, 0x24, 0xa4, 0x99,
	0xc5, 0xd9, 0xa6, 0xb5, 0x36, 0xbe, 0xfe, 0x73, 0xab, 0x35, 0x32, 0x5b, 0x67, 0xab, 0xfc, 0xc6,
	0xbb, 0x53, 0xe2, 0xdb, 0xcb, 0x24, 0xa4, 0x06, 0x01, 0x84, 0x79, 0xdd, 0x38, 0xa2, 0x8c, 0xf8,
	0x38, 0xca, 0x09, 0x98, 0x94, 0x04, 0x10, 0xb6, 0x95, 0xc9, 0xb4, 0xcd, 0x7b, 0xa2, 0xc4, 0xda,
	0x03, 0x93, 0xde, 0x29, 0xb9, 0xed, 0xe8, 0xf5, 0xa2, 0xea, 0x46, 0x41, 0x75, 0x3a, 0x53, 0xdd,
	0x30, 0x55, 0xaf, 0x68, 0x56, 0x91, 0xa9, 0x6c, 0xcb, 0x0c, 0x0b, 0xc9, 0x3d, 0x43, 0x7b, 0x15,
	0x1a, 0x21, 0xf5, 0x0c, 0xfa, 0x67, 0x64, 0x85, 0x85, 0xf4, 0x49, 0x86, 0xed, 0x0f, 0x59, 0xa2,
	0xb2, 0x7d, 0x8b, 0x6b, 0xce, 0x8a, 0x44, 0xfd, 0x72, 0x34, 0x13, 0x65, 0xec, 0xb0, 0x0a, 0xf5,
	0x36, 0x4d, 0x5e, 0x17, 0xcb, 0x75, 0xc3, 0xeb, 0x85, 0xf1, 0x6b, 0x9a, 0xa0, 0x6e, 0x86, 0x69,
	0x2e, 0x7f, 0x15, 0xef, 0x2b, 0x59, 0xa9, 0xc4, 0xab, 0x36, 0xf3, 0x79, 0x89, 0x97, 0x6d, 0x6e,
	0x80, 0xa3, 0xb7, 0x86, 0x8a, 0xd9, 0x82, 0x30, 0x9b, 0x57, 0xf2, 0x7a, 0xcb, 0x76, 0xad, 0xa5,
	0x93, 0x59, 0xb6, 0x6b, 0x2c, 0xbf, 0xb1, 0x60, 0x5e, 0x9d, 0x07, 0x5e, 0x69, 0x03, 0x5f, 0x14,
	0x19, 0xfb, 0xd5, 0xa8, 0x65, 0xac, 0xee, 0x54, 0xd3, 0xc7, 0xd6, 0x33, 0xf3, 0x98, 0xd1, 0xd8,
	0xda, 0x35, 0xd8, 0x96, 0x46, 0x16, 0x5b, 0xbb, 0x16, 0x5b, 0xbb, 0x84, 0x6d, 0xf5, 0x33, 0x79,
	0x82, 0x32, 0x3c, 0x40, 0x3c, 0x9d, 0xb6, 0x03, 0x63, 0x14, 0x75, 0xe3, 0x28, 0xa0, 0xe2, 0x14,
	0x6d, 0xb8, 0xfa, 0xab, 0xdd, 0x84, 0xf1, 0xc8, 0x8f, 0x62, 0x2d, 0x7d, 0x4b, 0x48, 0xcd, 0xa5,
	0xd5, 0x5f, 0x4f, 0xc3, 0xac, 0xd1, 0xeb, 0x51, 0xe6, 0x33, 0xca, 0xbb, 0x3d, 0xfb, 0x0e, 0x5c,
	0x50, 0x01, 0xc7, 0x29, 0xf3, 0xbe, 0x4a, 0x51, 0x8a, 0xbc, 0x01, 0xa2, 0xd4, 0xef, 0x23, 0xea,
	0xed, 0xe3, 0xfe, 0xbe, 0x7a, 0xd6, 0x92, 0xd4, 0x7a, 0x9a, 0xb2, 0xe7, 0x5c, 0x67, 0x5b, 0xa9,
	0x3c, 0xc4, 0xfd, 0x7d, 0x7b, 0x07, 0xde, 0x19, 0xee, 0xa3, 0x9b, 0x0e, 0xd2, 0xd0, 0x67, 0xf8,
	0x00, 0xa9, 0xb8, 0x9a, 0xf5, 0x9e, 0xb6, 0x32, 0x3d, 0xfb, 0x09, 0x5c, 0x1a, 0xee, 0x2f, 0xc0,
	0xb4, 0xeb, 0x93, 0x00, 0x05, 0xa2, 0x0d, 0x68, 0xb8, 0x2b, 0xf5, 0xee, 0xee, 0x6a, 0x35, 0xfb,
	0x21, 0x5c, 0x3c, 0x22, 0xba, 0x10, 0xf9, 0x04, 0x05, 0xaa, 0x01, 0x5d, 0x1e, 0x12, 0x9a, 0x54,
	0xb2, 0x6f, 0xc2, 0x52, 0xc5, 0x13, 0xc5, 0x5f, 0x23, 0xc9, 0x93, 0x6c, 0x4c, 0xe7, 0x8b, 0x2e,
	0x76, 0xf1, 0xd7, 0x48, 0x70, 0x74, 0x1f, 0x9a, 0xf5, 0xb6, 0x06, 0x3f, 0xbc, 0x9b, 0x38, 0xe9,
	0x9e, 0xaf, 0x7a, 0x30, 0xb8, 0xb9, 0x0b, 0x2b, 0xf5, 0x7e, 0x72, 0x5e, 0xc6, 0x84, 0x9b, 0x73,
	0x55, 0x37, 0x39, 0x27, 0xb7, 0x61, 0x79, 0x48, 0x34, 0x8a, 0x8f, 0xd3, 0xc2, 0xc7, 0x62, 0x4d,
	0x28, 0x8a, 0x8b, 0x6f, 0x2d, 0x58, 0x0e, 0xf9, 0xb9, 0xae, 0xfc, 0xa8, 0xc7, 0xcb, 0x6a, 0x65,
	0xfe, 0x20, 0x11, 0x9d, 0xc9, 0xf8, 0xfa, 0xcf, 0x46, 0xed, 0xfd, 0xd3, 0xaf, 0x93, 0xbb, 0xc4,
	0xc3, 0x7f, 0x21, 0x94, 0x15, 0x31, 0x7b, 0x3a, 0x76, 0xfb, 0x03, 0x58, 0xa8, 0x03, 0xe7, 0xf7,
	0x91, 0xe8, 0xa3, 0x1a, 0xee, 0x6c, 0xc5, 0x78, 0xb3, 0x8f, 0x2a, 0xa4, 0x28, 0x36, 0x0d, 0x52,
	0xc6, 0x8f, 0x0f, 0x29, 0x2a, 0xd3, 0x39, 0x29, 0xd7, 0x60, 0xbe, 0x02, 0x4e, 0x72, 0x32, 0x21,
	0x38, 0x99, 0x29, 0xd9, 0x0a, 0x4a, 0xd6, 0x61, 0x4e, 0xe9, 0xb3, 0x7d, 0x12, 0x33, 0x16, 0x22,
	0xaf, 0x1b, 0xa7, 0x11, 0x13, 0x7d, 0x60, 0xc3, 0x9d, 0x91, 0xc2, 0x3d, 0x25, 0xdb, 0xe2, 0x22,
	0xfb, 0x2f, 0x16, 0x5c, 0x30, 0x9f, 0x94, 0x59, 0xe6, 0x3c, 0x9e, 0x1d, 0x71, 0x1e, 0xcf, 0xe5,
	0x5c, 0x68, 0x6c, 0x39, 0x91, 0xd7, 0xc1, 0xa9, 0x85, 0xc7, 0xa9, 0x9c, 0x14, 0xb4, 0xcc, 0x55,
	0xcd, 0x8b, 0x64, 0x12, 0xd4, 0x8d, 0x0f, 0x10, 0x79, 0xa3, 0xc8, 0x9c, 0x32, 0xc9, 0x74, 0x95,
	0xac, 0x9e, 0xcc, 0xcc, 0x32, 0x27, 0x73, 0xfa, 0xf8, 0x90, 0xa9, 0xb1, 0x0d, 0x25, 0x33, 0x83,
	0xc7, 0xc9, 0xb4, 0xcb, 0x64, 0x6a, 0x73, 0x4e, 0x66, 0x7e, 0xca, 0x0c, 0xd0, 0x20, 0xe6, 0x16,
	0x61, 0x18, 0x77, 0x65, 0x1c, 0x3d, 0x1f, 0x87, 0x8a, 0xda, 0x19, 0xf3, 0x94, 0xd9, 0x16, 0x9a,
	0x9b, 0x99, 0xe2, 0x7d, 0x1f, 0x87, 0x92, 0xe6, 0xff, 0x58, 0x70, 0xc5, 0x8c, 0x63, 0x88, 0xcf,
	0x9c, 0xf4, 0xd9, 0x11, 0x27, 0xfd, 0xdd, 0x9c, 0xb5, 0x3a, 0xd4, 0x79, 0x02, 0x9e, 0xc3, 0xe5,
	0xff, 0x01, 0x38, 0x4f, 0xc7, 0x9c, 0xa0, 0xf2, 0xe2, 0xd1, 0x8e, 0x37, 0xfb, 0x68, 0xf5, 0x27,
	0x2d, 0xb0, 0xab, 0x93, 0x29, 0x7b, 0x19, 0x20, 0x21, 0x71, 0x17, 0x51, 0xea, 0xe1, 0xc0, 0x59,
	0x17, 0xde, 0xce, 0xa8, 0x95, 0x47, 0x81, 0x7d, 0x19, 0x26, 0x55, 0x0c, 0xd9, 0x54, 0xea, 0x9a,
	0x68, 0x8c, 0x1b, 0x72, 0xf9, 0xa5, 0x9a, 0x4d, 0xbd, 0x0f, 0xb3, 0x85, 0x11, 0x94, 0x1e, 0x54,
	0x6d, 0xc8, 0x9b, 0xbf, 0x31, 0x84, 0xda, 0x94, 0x06, 0x7f, 0xb4, 0x60, 0x41, 0x59, 0x54, 0xa6,
	0x42, 0x1f, 0x8c, 0x66, 0x1a, 0xf5, 0xd8, 0xc5, 0x55, 0x1b, 0xc6, 0x4e, 0x71, 0x6a, 0x65, 0x7f,
	0x08, 0xea, 0x6c, 0xf7, 0x6a, 0xa6, 0x62, 0x6d, 0xb3, 0x93, 0xb9, 0x5f, 0x9e, 0x8d, 0xdd, 0x82,
	0x25, 0x82, 0x7a, 0x04, 0xd1, 0xfd, 0x3a, 0xdb, 0xeb, 0xc2, 0x76, 0x41, 0x69, 0x54, 0x8c, 0xbf,
	0x03, 0x76, 0x69, 0xa0, 0xe7, 0x1d, 0x12, 0xe7, 0x86, 0x30, 0x9a, 0x2c, 0xcc, 0xf4, 0x5e, 0x11,
	0x7e, 0x0a, 0xeb, 0x27, 0x95, 0xa7, 0x80, 0x1f, 0xca, 0x53, 0x58, 0x89, 0x77, 0x0b, 0xc3, 0xc0,
	0xf7, 0x61, 0xb6, 0xc6, 0x2c, 0x70, 0x6e, 0x0a, 0x9b, 0xe9, 0xb2, 0x4d, 0x60, 0x5f, 0xcd, 0xb6,
	0xd5, 0x52, 0x5c, 0xb7, 0x84, 0x85, 0x5d, 0x1e, 0x4b, 0xbe, 0x22, 0x06, 0x7f, 0x03, 0x1f, 0x47,
	0x1e, 0xf3, 0x3b, 0x21, 0xf2, 0x0e, 0x10, 0xa1, 0x38, 0x8e, 0x9c, 0x8f, 0x4c, 0xfe, 0xb6, 0x7d,
	0x1c, 0xed, 0x71, 0xf1, 0x4b, 0x29, 0xb5, 0x3f, 0x81, 0xf3, 0x46, 0x99, 0x4a, 0x4b, 0x82, 0x3b,
	0x99, 0xf5, 0xc7, 0xc2, 0xda, 0xc9, 0x6a, 0x56, 0x18, 0xbb, 0xb8, 0xa3, 0xed, 0xf3, 0x47, 0x57,
	0xfb, 0x59, 0xe7, 0x93, 0xba, 0x26, 0x54, 0xf7, 0xb1, 0x06, 0xd0, 0x62, 0xdb, 0xe7, 0x7c, 0x6a,
	0x02, 0x35, 0xdb, 0x3d, 0xde, 0x3d, 0x6b, 0x32, 0x87, 0x3f, 0xf5, 0xb6, 0xec, 0x9e, 0x95, 0xe2,
	0x8b, 0xfa, 0x87, 0xdf, 0x86, 0xe5, 0xa1, 0x9e, 0x44, 0x10, 0x9b, 0xc2, 0xcb, 0x62, 0xad, 0x17,
	0x11, 0xcb, 0xa7, 0x19, 0x73, 0x85, 0xc2, 0xcb, 0xc2, 0xb8, 0x23, 0x1d, 0x54, 0xea, 0x36, 0x0b,
	0xe1, 0xcf, 0x16, 0x9c, 0x17, 0x7b, 0x55, 0x5e, 0x17, 0x7e, 0x60, 0xb6, 0x67, 0x5b, 0x23, 0xbe,
	0x29, 0x8b, 0xa3, 0x4e, 0x57, 0xee, 0x66, 0x60, 0x34, 0x67, 0x7f, 0xb5, 0x60, 0xa5, 0x04, 0x8d,
	0xa0, 0x41, 0x7c, 0x60, 0x36, 0x4d, 0x77, 0x8f, 0xc3, 0x39, 0xaf, 0xd1, 0xb9, 0x22, 0xfa, 0x1a,
	0x80, 0x85, 0xdc, 0x17, 0xd3, 0x77, 0xef, 0x38, 0x00, 0x34, 0x0a, 0xb3, 0x90, 0xc1, 0x7f, 0x5a,
	0xb0, 0x5a, 0x05, 0x58, 0x49, 0xe2, 0xfd, 0x11, 0xc7, 0x78, 0xa1, 0x84, 0xb1, 0x9c, 0x47, 0x07,
	0xc6, 0xf4, 0x4e, 0xf7, 0x40, 0x4e, 0x31, 0xd4, 0x57, 0x7b, 0x03, 0xe6, 0x13, 0x14, 0x05, 0x38,
	0xea, 0x7b, 0xcc, 0x27, 0x7d, 0xc4, 0xb2, 0x2d, 0xf1, 0xa1, 0xdc, 0xed, 0x95, 0x74, 0x4f, 0x08,
	0xf5, 0x76, 0xd8, 0x82, 0x99, 0x08, 0x1d, 0x32, 0x8f, 0x20, 0x9a, 0x0e, 0xf2, 0x3d, 0xf8, 0x91,
	0xdc, 0xec, 0xb9, 0xc8, 0x15, 0x12, 0xad, 0xbf, 0x02, 0xe3, 0x7e, 0xf7, 0xcb, 0x4c, 0xef, 0x33,
	0xf9, 0x4b, 0x91, 0xdf, 0xfd, 0x52, 0x2b, 0x5c, 0x01, 0x9b, 0xbe, 0x89, 0xba, 0x28, 0xf0, 0x4c,
	0xbd, 0xc7, 0xf2, 0x97, 0x22, 0x29, 0xd9, 0xcc, 0xb5, 0x6f, 0xc2, 0x62, 0x9c, 0x32, 0x41, 0x28,
	0x0f, 0x5c, 0xa9, 0xab, 0xde, 0xf1, 0x89, 0x3c, 0x0c, 0x0d, 0x05, 0x65, 0x26, 0x7b, 0xc6, 0x0d,
	0x98, 0xcf, 0xba, 0x56, 0xb9, 0x31, 0xea, 0xa7, 0x6d, 0x4b, 0xc0, 0xba, 0x9f, 0x17, 0x42, 0xfd,
	0xc4, 0x07, 0xd0, 0xd4, 0xea, 0x04, 0x7d, 0x95, 0x22, 0xca, 0xf8, 0x0d, 0xb3, 0x48, 0xd8, 0x4e,
	0x61, 0x43, 0x76, 0xb5, 0x5a, 0x91, 0xb9, 0xcd, 0x6c, 0x08, 0xa0, 0xfd, 0x95, 0xbc, 0x3c, 0x35,
	0x27, 0x3f, 0x2a, 0x8a, 0xa2, 0x8b, 0x2d, 0xb8, 0xa0, 0x6d, 0x87, 0xa4, 0xee, 0x99, 0xf0, 0x71,
	0x4e, 0x69, 0x3d, 0xab, 0xcb, 0xe0, 0xc7, 0xa0, 0xc5, 0x5e, 0x5d, 0x26, 0x9f, 0xcb, 0xf3, 0x50,
	0xa9, 0xec, 0x54, 0x12, 0xda, 0x82, 0x19, 0x6d, 0x6e, 0x26, 0xcc, 0x2d, 0x9c, 0xf6, 0x46, 0xc6,
	0xfe, 0x61, 0xc1, 0xc5, 0x1e, 0x26, 0x94, 0x79, 0x01, 0xea, 0xf9, 0x69, 0xc8, 0xbc, 0x98, 0xe0,
	0x3e, 0x8e, 0xc4, 0x55, 0x2c, 0x7b, 0xcd, 0x76, 0x47, 0xfd, 0x35, 0x13, 0x10, 0xee, 0x4a, 0x04,
	0x4f, 0x35, 0x80, 0xfc, 0x35, 0xfb, 0x9b, 0x05, 0x4d, 0xb1, 0x9b, 0x1c, 0x05, 0x72, 0x6f, 0xc4,
	0x41, 0x8a, 0x61, 0xca, 0x70, 0x8c, 0xb7, 0x60, 0x69, 0x08, 0x44, 0x7e, 0xdb, 0x78, 0x21, 0x5f,
	0xbe, 0x3a, 0x17, 0xfc, 0xfa, 0xd7, 0x86, 0x85, 0xaa, 0x1d, 0x65, 0x3e, 0x43, 0xce, 0xcb, 0xa6,
	0xb5, 0x36, 0xed, 0xce, 0x05, 0x25, 0xab, 0x5d, 0x2e, 0xb4, 0x1f, 0xc3, 0x6a, 0xd5, 0x0e, 0x47,
	0x0c, 0x91, 0xc8, 0xe7, 0x77, 0xc6, 0x88, 0xa1, 0x43, 0xe6, 0x7c, 0x2e, 0x5c, 0xac, 0x94, 0x5d,
	0x3c, 0x52, 0x7a, 0x5b, 0x52, 0x4d, 0xfc, 0xf8, 0x46, 0x3d, 0x14, 0x13, 0xcf, 0xd8, 0x23, 0x9c,
	0x57, 0x4d, 0x6b, 0xed, 0xb4, 0x3b, 0x85, 0xe9, 0xbd, 0x98, 0x3c, 0xcd, 0xd7, 0xf9, 0x7e, 0x11,
	0xa7, 0xac, 0x13, 0xa7, 0x51, 0x90, 0xbd, 0xb2, 0x72, 0xa3, 0xf9, 0x42, 0xee, 0x17, 0x5a, 0xaa,
	0xde, 0x55, 0xb9, 0xcb, 0xac, 0xc3, 0x1c, 0x8e, 0xea, 0x8c, 0xbe, 0x2b, 0x87, 0x06, 0x4a, 0x58,
	0xb0, 0xf9, 0xbb, 0x05, 0x17, 0xcd, 0x4b, 0x9d, 0x3c, 0x8b, 0x28, 0xf3, 0x09, 0x33, 0xca, 0xe7,
	0x7b, 0xc7, 0xa1, 0x7c, 0x5e, 0xe4, 0xcd, 0xfb, 0x2e, 0x8f, 0xbf, 0xe6, 0xc0, 0x2d, 0x80, 0x44,
	0x87, 0x09, 0x2e, 0x4c, 0x47, 0xbe, 0x7f, 0x1c, 0x0e, 0x5c, 0x03, 0xe5, 0x3d, 0x01, 0x20, 0x87,
	0x79, 0x1b, 0x96, 0x31, 0x2d, 0x62, 0xe4, 0xb6, 0xc4, 0x23, 0x69, 0x14, 0xf1, 0x72, 0xfb, 0x81,
	0x28, 0xb7, 0x45, 0x4c, 0x0d, 0x27, 0xdc, 0x9c, 0xb8, 0x52, 0x81, 0xdf, 0x58, 0xba, 0x29, 0x21,
	0x28, 0x2a, 0x51, 0xa5, 0x2f, 0xce, 0x3f, 0x14, 0x17, 0x67, 0x47, 0xe9, 0xbc, 0xa8, 0xdc, 0x9f,
	0x6f, 0xc0, 0x62, 0x95, 0x67, 0x6d, 0xec, 0x09, 0xe3, 0xb9, 0x12, 0x08, 0x65, 0xf9, 0xad, 0x05,
	0xcb, 0x72, 0xaf, 0x56, 0xb6, 0xe2, 0xba, 0x60, 0xb6, 0x7c, 0x3f, 0x1a, 0xf5, 0x81, 0xaa, 0x08,
	0x5f, 0x22, 0x13, 0x37, 0x19, 0xa3, 0xe3, 0xfb, 0x46, 0x5f, 0x47, 0x86, 0x81, 0xf3, 0x47, 0x1c,
	0xdc, 0x62, 0x9e, 0xb5, 0x32, 0xb6, 0xd2, 0xb0, 0x58, 0x41, 0xe3, 0xfb, 0x72, 0xa7, 0x3c, 0x2c,
	0x96, 0xa6, 0x7c, 0x4f, 0xfe, 0xb7, 0x05, 0xef, 0x08, 0xab, 0xd2, 0x45, 0xb1, 0x42, 0x4c, 0x77,
	0xc4, 0x89, 0x11, 0x47, 0xaf, 0x6b, 0x5e, 0x64, 0xcb, 0xfc, 0xdc, 0x51, 0x53, 0xd9, 0x7a, 0xa4,
	0x9c, 0xa7, 0x40, 0x76, 0x5f, 0x43, 0x3c, 0x71, 0xba, 0x78, 0xfd, 0x14, 0xde, 0x8e, 0xd7, 0x04,
	0x17, 0xce, 0x77, 0x34, 0xea, 0xf5, 0x63, 0xbc, 0x1c, 0x9f, 0xf3, 0xd8, 0x73, 0x7e, 0xfe, 0x64,
	0xc1, 0x39, 0xb3, 0x80, 0xca, 0xd0, 0x7a, 0xc7, 0xe1, 0xa6, 0x5e, 0x8b, 0xec, 0x2a, 0xcc, 0x55,
	0x81, 0xf1, 0x84, 0xf7, 0xe5, 0x10, 0xa6, 0x64, 0xc8, 0x13, 0xfd, 0x2f, 0x0b, 0x2e, 0xd5, 0x55,
	0x4b, 0x99, 0x94, 0xfd, 0x11, 0x27, 0x65, 0xa5, 0x52, 0xcc, 0x25, 0x6e, 0x6e, 0xab, 0xdf, 0xcf,
	0x6a, 0x71, 0x72, 0x8e, 0xb0, 0x1c, 0xf1, 0xd4, 0xfb, 0xe1, 0x54, 0xfd, 0xde, 0x02, 0x35, 0xc1,
	0x15, 0xcd, 0x1c, 0xa6, 0x0c, 0x77, 0xa9, 0xf3, 0x63, 0x41, 0xcc, 0x2f, 0x46, 0x8d, 0x98, 0xf2,
	0xaf, 0xf1, 0xfa, 0x2f, 0x20, 0x77, 0xb3, 0xc8, 0x3b, 0xa7, 0xc4, 0xdf, 0x8d, 0x5e, 0xfb, 0x6f,
	0x00, 0x00, 0x00, 0xff, 0xff, 0x6e, 0x1f, 0xa3, 0x66, 0x53, 0x2a, 0x00, 0x00,
}
