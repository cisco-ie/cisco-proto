/*
Copyright 2019 Cisco Systems

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: bgp_label_summary_bag.proto

package cisco_ios_xr_ipv4_bgp_oper_bgp_instances_instance_instance_active_label_summary

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type BgpLabelSummaryBag_KEYS struct {
	InstanceName         string   `protobuf:"bytes,1,opt,name=instance_name,json=instanceName,proto3" json:"instance_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BgpLabelSummaryBag_KEYS) Reset()         { *m = BgpLabelSummaryBag_KEYS{} }
func (m *BgpLabelSummaryBag_KEYS) String() string { return proto.CompactTextString(m) }
func (*BgpLabelSummaryBag_KEYS) ProtoMessage()    {}
func (*BgpLabelSummaryBag_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_4776193f584b785b, []int{0}
}

func (m *BgpLabelSummaryBag_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BgpLabelSummaryBag_KEYS.Unmarshal(m, b)
}
func (m *BgpLabelSummaryBag_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BgpLabelSummaryBag_KEYS.Marshal(b, m, deterministic)
}
func (m *BgpLabelSummaryBag_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BgpLabelSummaryBag_KEYS.Merge(m, src)
}
func (m *BgpLabelSummaryBag_KEYS) XXX_Size() int {
	return xxx_messageInfo_BgpLabelSummaryBag_KEYS.Size(m)
}
func (m *BgpLabelSummaryBag_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_BgpLabelSummaryBag_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_BgpLabelSummaryBag_KEYS proto.InternalMessageInfo

func (m *BgpLabelSummaryBag_KEYS) GetInstanceName() string {
	if m != nil {
		return m.InstanceName
	}
	return ""
}

type BgpEdmLabelStats_ struct {
	NbgpLabelAllocTypeGblIpv4 uint32   `protobuf:"varint,1,opt,name=nbgp_label_alloc_type_gbl_ipv4,json=nbgpLabelAllocTypeGblIpv4,proto3" json:"nbgp_label_alloc_type_gbl_ipv4,omitempty"`
	NbgpLabelAllocTypeGblIpv6 uint32   `protobuf:"varint,2,opt,name=nbgp_label_alloc_type_gbl_ipv6,json=nbgpLabelAllocTypeGblIpv6,proto3" json:"nbgp_label_alloc_type_gbl_ipv6,omitempty"`
	NbgpLabelAllocTypeVrfIpv4 uint32   `protobuf:"varint,3,opt,name=nbgp_label_alloc_type_vrf_ipv4,json=nbgpLabelAllocTypeVrfIpv4,proto3" json:"nbgp_label_alloc_type_vrf_ipv4,omitempty"`
	NbgpLabelAllocTypeVrfIpv6 uint32   `protobuf:"varint,4,opt,name=nbgp_label_alloc_type_vrf_ipv6,json=nbgpLabelAllocTypeVrfIpv6,proto3" json:"nbgp_label_alloc_type_vrf_ipv6,omitempty"`
	NbgpLabelAllocTypeCeIpv4  uint32   `protobuf:"varint,5,opt,name=nbgp_label_alloc_type_ce_ipv4,json=nbgpLabelAllocTypeCeIpv4,proto3" json:"nbgp_label_alloc_type_ce_ipv4,omitempty"`
	NbgpLabelAllocTypeCeIpv6  uint32   `protobuf:"varint,6,opt,name=nbgp_label_alloc_type_ce_ipv6,json=nbgpLabelAllocTypeCeIpv6,proto3" json:"nbgp_label_alloc_type_ce_ipv6,omitempty"`
	NbgpLabelAllocTypeTblIpv4 uint32   `protobuf:"varint,7,opt,name=nbgp_label_alloc_type_tbl_ipv4,json=nbgpLabelAllocTypeTblIpv4,proto3" json:"nbgp_label_alloc_type_tbl_ipv4,omitempty"`
	NbgpLabelAllocTypeTblIpv6 uint32   `protobuf:"varint,8,opt,name=nbgp_label_alloc_type_tbl_ipv6,json=nbgpLabelAllocTypeTblIpv6,proto3" json:"nbgp_label_alloc_type_tbl_ipv6,omitempty"`
	NbgpLabelAllocTypeVpnIpv4 uint32   `protobuf:"varint,9,opt,name=nbgp_label_alloc_type_vpn_ipv4,json=nbgpLabelAllocTypeVpnIpv4,proto3" json:"nbgp_label_alloc_type_vpn_ipv4,omitempty"`
	NbgpLabelAllocTypeVpnIpv6 uint32   `protobuf:"varint,10,opt,name=nbgp_label_alloc_type_vpn_ipv6,json=nbgpLabelAllocTypeVpnIpv6,proto3" json:"nbgp_label_alloc_type_vpn_ipv6,omitempty"`
	NbgpLabelAllocTypeAsbrNh  uint32   `protobuf:"varint,11,opt,name=nbgp_label_alloc_type_asbr_nh,json=nbgpLabelAllocTypeAsbrNh,proto3" json:"nbgp_label_alloc_type_asbr_nh,omitempty"`
	NbgpLabels                uint32   `protobuf:"varint,12,opt,name=nbgp_labels,json=nbgpLabels,proto3" json:"nbgp_labels,omitempty"`
	BgpLabelRpfLists          uint32   `protobuf:"varint,13,opt,name=bgp_label_rpf_lists,json=bgpLabelRpfLists,proto3" json:"bgp_label_rpf_lists,omitempty"`
	BgpLabelRpfNodes          uint32   `protobuf:"varint,14,opt,name=bgp_label_rpf_nodes,json=bgpLabelRpfNodes,proto3" json:"bgp_label_rpf_nodes,omitempty"`
	XXX_NoUnkeyedLiteral      struct{} `json:"-"`
	XXX_unrecognized          []byte   `json:"-"`
	XXX_sizecache             int32    `json:"-"`
}

func (m *BgpEdmLabelStats_) Reset()         { *m = BgpEdmLabelStats_{} }
func (m *BgpEdmLabelStats_) String() string { return proto.CompactTextString(m) }
func (*BgpEdmLabelStats_) ProtoMessage()    {}
func (*BgpEdmLabelStats_) Descriptor() ([]byte, []int) {
	return fileDescriptor_4776193f584b785b, []int{1}
}

func (m *BgpEdmLabelStats_) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BgpEdmLabelStats_.Unmarshal(m, b)
}
func (m *BgpEdmLabelStats_) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BgpEdmLabelStats_.Marshal(b, m, deterministic)
}
func (m *BgpEdmLabelStats_) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BgpEdmLabelStats_.Merge(m, src)
}
func (m *BgpEdmLabelStats_) XXX_Size() int {
	return xxx_messageInfo_BgpEdmLabelStats_.Size(m)
}
func (m *BgpEdmLabelStats_) XXX_DiscardUnknown() {
	xxx_messageInfo_BgpEdmLabelStats_.DiscardUnknown(m)
}

var xxx_messageInfo_BgpEdmLabelStats_ proto.InternalMessageInfo

func (m *BgpEdmLabelStats_) GetNbgpLabelAllocTypeGblIpv4() uint32 {
	if m != nil {
		return m.NbgpLabelAllocTypeGblIpv4
	}
	return 0
}

func (m *BgpEdmLabelStats_) GetNbgpLabelAllocTypeGblIpv6() uint32 {
	if m != nil {
		return m.NbgpLabelAllocTypeGblIpv6
	}
	return 0
}

func (m *BgpEdmLabelStats_) GetNbgpLabelAllocTypeVrfIpv4() uint32 {
	if m != nil {
		return m.NbgpLabelAllocTypeVrfIpv4
	}
	return 0
}

func (m *BgpEdmLabelStats_) GetNbgpLabelAllocTypeVrfIpv6() uint32 {
	if m != nil {
		return m.NbgpLabelAllocTypeVrfIpv6
	}
	return 0
}

func (m *BgpEdmLabelStats_) GetNbgpLabelAllocTypeCeIpv4() uint32 {
	if m != nil {
		return m.NbgpLabelAllocTypeCeIpv4
	}
	return 0
}

func (m *BgpEdmLabelStats_) GetNbgpLabelAllocTypeCeIpv6() uint32 {
	if m != nil {
		return m.NbgpLabelAllocTypeCeIpv6
	}
	return 0
}

func (m *BgpEdmLabelStats_) GetNbgpLabelAllocTypeTblIpv4() uint32 {
	if m != nil {
		return m.NbgpLabelAllocTypeTblIpv4
	}
	return 0
}

func (m *BgpEdmLabelStats_) GetNbgpLabelAllocTypeTblIpv6() uint32 {
	if m != nil {
		return m.NbgpLabelAllocTypeTblIpv6
	}
	return 0
}

func (m *BgpEdmLabelStats_) GetNbgpLabelAllocTypeVpnIpv4() uint32 {
	if m != nil {
		return m.NbgpLabelAllocTypeVpnIpv4
	}
	return 0
}

func (m *BgpEdmLabelStats_) GetNbgpLabelAllocTypeVpnIpv6() uint32 {
	if m != nil {
		return m.NbgpLabelAllocTypeVpnIpv6
	}
	return 0
}

func (m *BgpEdmLabelStats_) GetNbgpLabelAllocTypeAsbrNh() uint32 {
	if m != nil {
		return m.NbgpLabelAllocTypeAsbrNh
	}
	return 0
}

func (m *BgpEdmLabelStats_) GetNbgpLabels() uint32 {
	if m != nil {
		return m.NbgpLabels
	}
	return 0
}

func (m *BgpEdmLabelStats_) GetBgpLabelRpfLists() uint32 {
	if m != nil {
		return m.BgpLabelRpfLists
	}
	return 0
}

func (m *BgpEdmLabelStats_) GetBgpLabelRpfNodes() uint32 {
	if m != nil {
		return m.BgpLabelRpfNodes
	}
	return 0
}

type BgpLabelSummaryBag struct {
	Stats                *BgpEdmLabelStats_ `protobuf:"bytes,50,opt,name=stats,proto3" json:"stats,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *BgpLabelSummaryBag) Reset()         { *m = BgpLabelSummaryBag{} }
func (m *BgpLabelSummaryBag) String() string { return proto.CompactTextString(m) }
func (*BgpLabelSummaryBag) ProtoMessage()    {}
func (*BgpLabelSummaryBag) Descriptor() ([]byte, []int) {
	return fileDescriptor_4776193f584b785b, []int{2}
}

func (m *BgpLabelSummaryBag) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BgpLabelSummaryBag.Unmarshal(m, b)
}
func (m *BgpLabelSummaryBag) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BgpLabelSummaryBag.Marshal(b, m, deterministic)
}
func (m *BgpLabelSummaryBag) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BgpLabelSummaryBag.Merge(m, src)
}
func (m *BgpLabelSummaryBag) XXX_Size() int {
	return xxx_messageInfo_BgpLabelSummaryBag.Size(m)
}
func (m *BgpLabelSummaryBag) XXX_DiscardUnknown() {
	xxx_messageInfo_BgpLabelSummaryBag.DiscardUnknown(m)
}

var xxx_messageInfo_BgpLabelSummaryBag proto.InternalMessageInfo

func (m *BgpLabelSummaryBag) GetStats() *BgpEdmLabelStats_ {
	if m != nil {
		return m.Stats
	}
	return nil
}

func init() {
	proto.RegisterType((*BgpLabelSummaryBag_KEYS)(nil), "cisco_ios_xr_ipv4_bgp_oper.bgp.instances.instance.instance_active.label_summary.bgp_label_summary_bag_KEYS")
	proto.RegisterType((*BgpEdmLabelStats_)(nil), "cisco_ios_xr_ipv4_bgp_oper.bgp.instances.instance.instance_active.label_summary.bgp_edm_label_stats_")
	proto.RegisterType((*BgpLabelSummaryBag)(nil), "cisco_ios_xr_ipv4_bgp_oper.bgp.instances.instance.instance_active.label_summary.bgp_label_summary_bag")
}

func init() { proto.RegisterFile("bgp_label_summary_bag.proto", fileDescriptor_4776193f584b785b) }

var fileDescriptor_4776193f584b785b = []byte{
	// 408 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x94, 0x41, 0x6b, 0xdb, 0x30,
	0x14, 0xc7, 0xf1, 0xb6, 0x64, 0x8b, 0x92, 0x8c, 0xe1, 0x6d, 0xa0, 0x6d, 0x6c, 0x0b, 0xe9, 0x25,
	0x97, 0xfa, 0x90, 0x06, 0x5f, 0x8b, 0x29, 0xa5, 0x94, 0x86, 0x14, 0xdc, 0x50, 0xe8, 0x49, 0x48,
	0x8e, 0xec, 0x18, 0x6c, 0x59, 0x48, 0xaa, 0x69, 0xe8, 0xd7, 0xe8, 0x07, 0xed, 0x47, 0x28, 0x96,
	0x6b, 0x87, 0x12, 0x5b, 0xbe, 0xf4, 0x26, 0x1e, 0x7f, 0xff, 0xde, 0xdf, 0xef, 0xcf, 0x7b, 0xe0,
	0x0f, 0x89, 0x38, 0x4a, 0x30, 0xa1, 0x09, 0x92, 0xf7, 0x69, 0x8a, 0xc5, 0x0e, 0x11, 0x1c, 0x39,
	0x5c, 0x64, 0x2a, 0xb3, 0xaf, 0x83, 0x58, 0x06, 0x19, 0x8a, 0x33, 0x89, 0x1e, 0x04, 0x8a, 0x79,
	0xbe, 0x40, 0x85, 0x3c, 0xe3, 0x54, 0x38, 0x24, 0xe2, 0x4e, 0xcc, 0xa4, 0xc2, 0x2c, 0xa0, 0xb2,
	0x7e, 0xd5, 0x0f, 0x84, 0x03, 0x15, 0xe7, 0xd4, 0x79, 0x83, 0x9e, 0x7a, 0xe0, 0x77, 0x63, 0x3f,
	0x74, 0x75, 0x7e, 0x77, 0x63, 0x1f, 0x81, 0x71, 0xfd, 0x39, 0xc3, 0x29, 0x85, 0xd6, 0xc4, 0x9a,
	0x0d, 0xfc, 0x51, 0x55, 0x5c, 0xe1, 0x94, 0x4e, 0x9f, 0xfb, 0xe0, 0x47, 0xc1, 0xa0, 0x9b, 0xb4,
	0xe2, 0x28, 0xac, 0x24, 0xb2, 0x3d, 0xf0, 0x8f, 0xed, 0xe1, 0x38, 0x49, 0xb2, 0x00, 0xa9, 0x1d,
	0xa7, 0x28, 0x22, 0x89, 0xf6, 0xae, 0x71, 0x63, 0xff, 0x57, 0xa1, 0x5a, 0x16, 0x22, 0xaf, 0xd0,
	0xac, 0x77, 0x9c, 0x5e, 0x90, 0xe4, 0x92, 0xe7, 0x8b, 0x4e, 0x84, 0x0b, 0x3f, 0x98, 0x11, 0x6e,
	0x3b, 0x22, 0x17, 0x61, 0xe9, 0xe2, 0x63, 0x1b, 0xe2, 0x56, 0x84, 0x66, 0x17, 0xaf, 0x08, 0x17,
	0x7e, 0x32, 0x23, 0x5c, 0xfb, 0x14, 0xfc, 0x6d, 0x46, 0x04, 0xb4, 0x34, 0xd1, 0xd3, 0x04, 0x78,
	0x48, 0x38, 0xa3, 0xda, 0x43, 0x07, 0xc0, 0x85, 0x7d, 0x23, 0xc0, 0x30, 0x07, 0x55, 0xa5, 0xf1,
	0xb9, 0xed, 0x27, 0xd6, 0x5d, 0x69, 0xa8, 0x2a, 0x8d, 0x2f, 0x66, 0x84, 0x29, 0x0d, 0xce, 0x4a,
	0x17, 0x83, 0xd6, 0x51, 0x72, 0xd6, 0x91, 0x46, 0x89, 0x70, 0x21, 0x30, 0x23, 0x0c, 0x69, 0x60,
	0x49, 0x04, 0x62, 0x5b, 0x38, 0x6c, 0x1b, 0xa6, 0x27, 0x89, 0x58, 0x6d, 0xed, 0xff, 0x60, 0xb8,
	0x07, 0x48, 0x38, 0xd2, 0x72, 0x50, 0xcb, 0xa5, 0x7d, 0x0c, 0xbe, 0xef, 0x1b, 0x08, 0x1e, 0xa2,
	0x24, 0x96, 0x4a, 0xc2, 0xb1, 0x16, 0x7e, 0xab, 0x74, 0x3e, 0x0f, 0x97, 0x45, 0xfd, 0x50, 0xce,
	0xb2, 0x0d, 0x95, 0xf0, 0xeb, 0x81, 0x7c, 0x55, 0xd4, 0xa7, 0x4f, 0x16, 0xf8, 0xd9, 0xb8, 0xb6,
	0xf6, 0x23, 0xe8, 0xe9, 0xed, 0x83, 0xf3, 0x89, 0x35, 0x1b, 0xce, 0xa9, 0xf3, 0xce, 0x07, 0xc3,
	0x69, 0xda, 0x74, 0xbf, 0xec, 0x49, 0xfa, 0xfa, 0x48, 0x9d, 0xbc, 0x04, 0x00, 0x00, 0xff, 0xff,
	0xa6, 0x79, 0xd5, 0x60, 0xc3, 0x04, 0x00, 0x00,
}
