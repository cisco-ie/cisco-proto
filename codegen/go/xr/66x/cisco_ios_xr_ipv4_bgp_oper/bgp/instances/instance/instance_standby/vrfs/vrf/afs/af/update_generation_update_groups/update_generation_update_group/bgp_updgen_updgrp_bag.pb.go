/*
Copyright 2019 Cisco Systems

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: bgp_updgen_updgrp_bag.proto

package cisco_ios_xr_ipv4_bgp_oper_bgp_instances_instance_instance_standby_vrfs_vrf_afs_af_update_generation_update_groups_update_generation_update_group

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type BgpUpdgenUpdgrpBag_KEYS struct {
	InstanceName         string   `protobuf:"bytes,1,opt,name=instance_name,json=instanceName,proto3" json:"instance_name,omitempty"`
	VrfName              string   `protobuf:"bytes,2,opt,name=vrf_name,json=vrfName,proto3" json:"vrf_name,omitempty"`
	AfName               string   `protobuf:"bytes,3,opt,name=af_name,json=afName,proto3" json:"af_name,omitempty"`
	UpdateGroupIndex     uint32   `protobuf:"varint,4,opt,name=update_group_index,json=updateGroupIndex,proto3" json:"update_group_index,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BgpUpdgenUpdgrpBag_KEYS) Reset()         { *m = BgpUpdgenUpdgrpBag_KEYS{} }
func (m *BgpUpdgenUpdgrpBag_KEYS) String() string { return proto.CompactTextString(m) }
func (*BgpUpdgenUpdgrpBag_KEYS) ProtoMessage()    {}
func (*BgpUpdgenUpdgrpBag_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_4d87c293815fb230, []int{0}
}

func (m *BgpUpdgenUpdgrpBag_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BgpUpdgenUpdgrpBag_KEYS.Unmarshal(m, b)
}
func (m *BgpUpdgenUpdgrpBag_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BgpUpdgenUpdgrpBag_KEYS.Marshal(b, m, deterministic)
}
func (m *BgpUpdgenUpdgrpBag_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BgpUpdgenUpdgrpBag_KEYS.Merge(m, src)
}
func (m *BgpUpdgenUpdgrpBag_KEYS) XXX_Size() int {
	return xxx_messageInfo_BgpUpdgenUpdgrpBag_KEYS.Size(m)
}
func (m *BgpUpdgenUpdgrpBag_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_BgpUpdgenUpdgrpBag_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_BgpUpdgenUpdgrpBag_KEYS proto.InternalMessageInfo

func (m *BgpUpdgenUpdgrpBag_KEYS) GetInstanceName() string {
	if m != nil {
		return m.InstanceName
	}
	return ""
}

func (m *BgpUpdgenUpdgrpBag_KEYS) GetVrfName() string {
	if m != nil {
		return m.VrfName
	}
	return ""
}

func (m *BgpUpdgenUpdgrpBag_KEYS) GetAfName() string {
	if m != nil {
		return m.AfName
	}
	return ""
}

func (m *BgpUpdgenUpdgrpBag_KEYS) GetUpdateGroupIndex() uint32 {
	if m != nil {
		return m.UpdateGroupIndex
	}
	return 0
}

type BgpTimespec struct {
	Seconds              uint32   `protobuf:"varint,1,opt,name=seconds,proto3" json:"seconds,omitempty"`
	Nanoseconds          uint32   `protobuf:"varint,2,opt,name=nanoseconds,proto3" json:"nanoseconds,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BgpTimespec) Reset()         { *m = BgpTimespec{} }
func (m *BgpTimespec) String() string { return proto.CompactTextString(m) }
func (*BgpTimespec) ProtoMessage()    {}
func (*BgpTimespec) Descriptor() ([]byte, []int) {
	return fileDescriptor_4d87c293815fb230, []int{1}
}

func (m *BgpTimespec) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BgpTimespec.Unmarshal(m, b)
}
func (m *BgpTimespec) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BgpTimespec.Marshal(b, m, deterministic)
}
func (m *BgpTimespec) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BgpTimespec.Merge(m, src)
}
func (m *BgpTimespec) XXX_Size() int {
	return xxx_messageInfo_BgpTimespec.Size(m)
}
func (m *BgpTimespec) XXX_DiscardUnknown() {
	xxx_messageInfo_BgpTimespec.DiscardUnknown(m)
}

var xxx_messageInfo_BgpTimespec proto.InternalMessageInfo

func (m *BgpTimespec) GetSeconds() uint32 {
	if m != nil {
		return m.Seconds
	}
	return 0
}

func (m *BgpTimespec) GetNanoseconds() uint32 {
	if m != nil {
		return m.Nanoseconds
	}
	return 0
}

type BgpUpdgenStatsBag struct {
	UpdateOutQueueMessagesHigh              uint32       `protobuf:"varint,1,opt,name=update_out_queue_messages_high,json=updateOutQueueMessagesHigh,proto3" json:"update_out_queue_messages_high,omitempty"`
	UpdateOutQueueMessagesCumulative        uint32       `protobuf:"varint,2,opt,name=update_out_queue_messages_cumulative,json=updateOutQueueMessagesCumulative,proto3" json:"update_out_queue_messages_cumulative,omitempty"`
	UpdateOutQueueMessagesDiscarded         uint32       `protobuf:"varint,3,opt,name=update_out_queue_messages_discarded,json=updateOutQueueMessagesDiscarded,proto3" json:"update_out_queue_messages_discarded,omitempty"`
	UpdateOutQueueMessagesCleared           uint32       `protobuf:"varint,4,opt,name=update_out_queue_messages_cleared,json=updateOutQueueMessagesCleared,proto3" json:"update_out_queue_messages_cleared,omitempty"`
	UpdateOutQueueSizeHigh                  uint32       `protobuf:"varint,5,opt,name=update_out_queue_size_high,json=updateOutQueueSizeHigh,proto3" json:"update_out_queue_size_high,omitempty"`
	UpdateOutQueueSizeCumulative            uint64       `protobuf:"varint,6,opt,name=update_out_queue_size_cumulative,json=updateOutQueueSizeCumulative,proto3" json:"update_out_queue_size_cumulative,omitempty"`
	UpdateOutQueueSizeDiscarded             uint64       `protobuf:"varint,7,opt,name=update_out_queue_size_discarded,json=updateOutQueueSizeDiscarded,proto3" json:"update_out_queue_size_discarded,omitempty"`
	UpdateOutQueueSizeCleared               uint64       `protobuf:"varint,8,opt,name=update_out_queue_size_cleared,json=updateOutQueueSizeCleared,proto3" json:"update_out_queue_size_cleared,omitempty"`
	LastUpdateDiscardTimestamp              *BgpTimespec `protobuf:"bytes,9,opt,name=last_update_discard_timestamp,json=lastUpdateDiscardTimestamp,proto3" json:"last_update_discard_timestamp,omitempty"`
	LastUpdateDiscardAge                    uint32       `protobuf:"varint,10,opt,name=last_update_discard_age,json=lastUpdateDiscardAge,proto3" json:"last_update_discard_age,omitempty"`
	LastUpdateClearedTimestamp              *BgpTimespec `protobuf:"bytes,11,opt,name=last_update_cleared_timestamp,json=lastUpdateClearedTimestamp,proto3" json:"last_update_cleared_timestamp,omitempty"`
	LastUpdateCleardAge                     uint32       `protobuf:"varint,12,opt,name=last_update_cleard_age,json=lastUpdateCleardAge,proto3" json:"last_update_cleard_age,omitempty"`
	UpdateThrottleCount                     uint32       `protobuf:"varint,13,opt,name=update_throttle_count,json=updateThrottleCount,proto3" json:"update_throttle_count,omitempty"`
	LastUpdateThrottleTimestamp             *BgpTimespec `protobuf:"bytes,14,opt,name=last_update_throttle_timestamp,json=lastUpdateThrottleTimestamp,proto3" json:"last_update_throttle_timestamp,omitempty"`
	LastUpdateThrottleAge                   uint32       `protobuf:"varint,15,opt,name=last_update_throttle_age,json=lastUpdateThrottleAge,proto3" json:"last_update_throttle_age,omitempty"`
	UpdateRecoveryCount                     uint32       `protobuf:"varint,16,opt,name=update_recovery_count,json=updateRecoveryCount,proto3" json:"update_recovery_count,omitempty"`
	LastUpdateRecoveryTimestamp             *BgpTimespec `protobuf:"bytes,17,opt,name=last_update_recovery_timestamp,json=lastUpdateRecoveryTimestamp,proto3" json:"last_update_recovery_timestamp,omitempty"`
	LastUpdateRecoveryAge                   uint32       `protobuf:"varint,18,opt,name=last_update_recovery_age,json=lastUpdateRecoveryAge,proto3" json:"last_update_recovery_age,omitempty"`
	UpdateMemoryAllocationFailCount         uint32       `protobuf:"varint,19,opt,name=update_memory_allocation_fail_count,json=updateMemoryAllocationFailCount,proto3" json:"update_memory_allocation_fail_count,omitempty"`
	LastUpdateMemoryAllocationFailTimestamp *BgpTimespec `protobuf:"bytes,20,opt,name=last_update_memory_allocation_fail_timestamp,json=lastUpdateMemoryAllocationFailTimestamp,proto3" json:"last_update_memory_allocation_fail_timestamp,omitempty"`
	LastUpdateMemoryAllocationFailAge       uint32       `protobuf:"varint,21,opt,name=last_update_memory_allocation_fail_age,json=lastUpdateMemoryAllocationFailAge,proto3" json:"last_update_memory_allocation_fail_age,omitempty"`
	XXX_NoUnkeyedLiteral                    struct{}     `json:"-"`
	XXX_unrecognized                        []byte       `json:"-"`
	XXX_sizecache                           int32        `json:"-"`
}

func (m *BgpUpdgenStatsBag) Reset()         { *m = BgpUpdgenStatsBag{} }
func (m *BgpUpdgenStatsBag) String() string { return proto.CompactTextString(m) }
func (*BgpUpdgenStatsBag) ProtoMessage()    {}
func (*BgpUpdgenStatsBag) Descriptor() ([]byte, []int) {
	return fileDescriptor_4d87c293815fb230, []int{2}
}

func (m *BgpUpdgenStatsBag) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BgpUpdgenStatsBag.Unmarshal(m, b)
}
func (m *BgpUpdgenStatsBag) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BgpUpdgenStatsBag.Marshal(b, m, deterministic)
}
func (m *BgpUpdgenStatsBag) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BgpUpdgenStatsBag.Merge(m, src)
}
func (m *BgpUpdgenStatsBag) XXX_Size() int {
	return xxx_messageInfo_BgpUpdgenStatsBag.Size(m)
}
func (m *BgpUpdgenStatsBag) XXX_DiscardUnknown() {
	xxx_messageInfo_BgpUpdgenStatsBag.DiscardUnknown(m)
}

var xxx_messageInfo_BgpUpdgenStatsBag proto.InternalMessageInfo

func (m *BgpUpdgenStatsBag) GetUpdateOutQueueMessagesHigh() uint32 {
	if m != nil {
		return m.UpdateOutQueueMessagesHigh
	}
	return 0
}

func (m *BgpUpdgenStatsBag) GetUpdateOutQueueMessagesCumulative() uint32 {
	if m != nil {
		return m.UpdateOutQueueMessagesCumulative
	}
	return 0
}

func (m *BgpUpdgenStatsBag) GetUpdateOutQueueMessagesDiscarded() uint32 {
	if m != nil {
		return m.UpdateOutQueueMessagesDiscarded
	}
	return 0
}

func (m *BgpUpdgenStatsBag) GetUpdateOutQueueMessagesCleared() uint32 {
	if m != nil {
		return m.UpdateOutQueueMessagesCleared
	}
	return 0
}

func (m *BgpUpdgenStatsBag) GetUpdateOutQueueSizeHigh() uint32 {
	if m != nil {
		return m.UpdateOutQueueSizeHigh
	}
	return 0
}

func (m *BgpUpdgenStatsBag) GetUpdateOutQueueSizeCumulative() uint64 {
	if m != nil {
		return m.UpdateOutQueueSizeCumulative
	}
	return 0
}

func (m *BgpUpdgenStatsBag) GetUpdateOutQueueSizeDiscarded() uint64 {
	if m != nil {
		return m.UpdateOutQueueSizeDiscarded
	}
	return 0
}

func (m *BgpUpdgenStatsBag) GetUpdateOutQueueSizeCleared() uint64 {
	if m != nil {
		return m.UpdateOutQueueSizeCleared
	}
	return 0
}

func (m *BgpUpdgenStatsBag) GetLastUpdateDiscardTimestamp() *BgpTimespec {
	if m != nil {
		return m.LastUpdateDiscardTimestamp
	}
	return nil
}

func (m *BgpUpdgenStatsBag) GetLastUpdateDiscardAge() uint32 {
	if m != nil {
		return m.LastUpdateDiscardAge
	}
	return 0
}

func (m *BgpUpdgenStatsBag) GetLastUpdateClearedTimestamp() *BgpTimespec {
	if m != nil {
		return m.LastUpdateClearedTimestamp
	}
	return nil
}

func (m *BgpUpdgenStatsBag) GetLastUpdateCleardAge() uint32 {
	if m != nil {
		return m.LastUpdateCleardAge
	}
	return 0
}

func (m *BgpUpdgenStatsBag) GetUpdateThrottleCount() uint32 {
	if m != nil {
		return m.UpdateThrottleCount
	}
	return 0
}

func (m *BgpUpdgenStatsBag) GetLastUpdateThrottleTimestamp() *BgpTimespec {
	if m != nil {
		return m.LastUpdateThrottleTimestamp
	}
	return nil
}

func (m *BgpUpdgenStatsBag) GetLastUpdateThrottleAge() uint32 {
	if m != nil {
		return m.LastUpdateThrottleAge
	}
	return 0
}

func (m *BgpUpdgenStatsBag) GetUpdateRecoveryCount() uint32 {
	if m != nil {
		return m.UpdateRecoveryCount
	}
	return 0
}

func (m *BgpUpdgenStatsBag) GetLastUpdateRecoveryTimestamp() *BgpTimespec {
	if m != nil {
		return m.LastUpdateRecoveryTimestamp
	}
	return nil
}

func (m *BgpUpdgenStatsBag) GetLastUpdateRecoveryAge() uint32 {
	if m != nil {
		return m.LastUpdateRecoveryAge
	}
	return 0
}

func (m *BgpUpdgenStatsBag) GetUpdateMemoryAllocationFailCount() uint32 {
	if m != nil {
		return m.UpdateMemoryAllocationFailCount
	}
	return 0
}

func (m *BgpUpdgenStatsBag) GetLastUpdateMemoryAllocationFailTimestamp() *BgpTimespec {
	if m != nil {
		return m.LastUpdateMemoryAllocationFailTimestamp
	}
	return nil
}

func (m *BgpUpdgenStatsBag) GetLastUpdateMemoryAllocationFailAge() uint32 {
	if m != nil {
		return m.LastUpdateMemoryAllocationFailAge
	}
	return 0
}

type BgpUpdgenUpdgrpBag struct {
	ProcessId                       uint32             `protobuf:"varint,50,opt,name=process_id,json=processId,proto3" json:"process_id,omitempty"`
	UpdateVrfName                   string             `protobuf:"bytes,51,opt,name=update_vrf_name,json=updateVrfName,proto3" json:"update_vrf_name,omitempty"`
	UpdateGroupAfName               string             `protobuf:"bytes,52,opt,name=update_group_af_name,json=updateGroupAfName,proto3" json:"update_group_af_name,omitempty"`
	NeighborSessionAfName           uint32             `protobuf:"varint,53,opt,name=neighbor_session_af_name,json=neighborSessionAfName,proto3" json:"neighbor_session_af_name,omitempty"`
	UpdateGroupIndexXr              uint32             `protobuf:"varint,54,opt,name=update_group_index_xr,json=updateGroupIndexXr,proto3" json:"update_group_index_xr,omitempty"`
	UpdateGroupFlags2               uint32             `protobuf:"varint,55,opt,name=update_group_flags2,json=updateGroupFlags2,proto3" json:"update_group_flags2,omitempty"`
	UpdateOutQueueMessages          uint32             `protobuf:"varint,56,opt,name=update_out_queue_messages,json=updateOutQueueMessages,proto3" json:"update_out_queue_messages,omitempty"`
	UpdateOutQueueSize              uint32             `protobuf:"varint,57,opt,name=update_out_queue_size,json=updateOutQueueSize,proto3" json:"update_out_queue_size,omitempty"`
	UpdateSubGroupCount             uint32             `protobuf:"varint,58,opt,name=update_sub_group_count,json=updateSubGroupCount,proto3" json:"update_sub_group_count,omitempty"`
	SubGroupThrottledCount          uint32             `protobuf:"varint,59,opt,name=sub_group_throttled_count,json=subGroupThrottledCount,proto3" json:"sub_group_throttled_count,omitempty"`
	RefreshSubGroupCount            uint32             `protobuf:"varint,60,opt,name=refresh_sub_group_count,json=refreshSubGroupCount,proto3" json:"refresh_sub_group_count,omitempty"`
	RefreshSubGroupThrottledCount   uint32             `protobuf:"varint,61,opt,name=refresh_sub_group_throttled_count,json=refreshSubGroupThrottledCount,proto3" json:"refresh_sub_group_throttled_count,omitempty"`
	FilterGroupCount                uint32             `protobuf:"varint,62,opt,name=filter_group_count,json=filterGroupCount,proto3" json:"filter_group_count,omitempty"`
	NeighborCount                   uint32             `protobuf:"varint,63,opt,name=neighbor_count,json=neighborCount,proto3" json:"neighbor_count,omitempty"`
	NeighborLeavingCount            uint32             `protobuf:"varint,64,opt,name=neighbor_leaving_count,json=neighborLeavingCount,proto3" json:"neighbor_leaving_count,omitempty"`
	UpdateGenerationRecoveryPending bool               `protobuf:"varint,65,opt,name=update_generation_recovery_pending,json=updateGenerationRecoveryPending,proto3" json:"update_generation_recovery_pending,omitempty"`
	LastUpdateTimerStartTimestamp   *BgpTimespec       `protobuf:"bytes,66,opt,name=last_update_timer_start_timestamp,json=lastUpdateTimerStartTimestamp,proto3" json:"last_update_timer_start_timestamp,omitempty"`
	LastUpdateTimerStopTimestamp    *BgpTimespec       `protobuf:"bytes,67,opt,name=last_update_timer_stop_timestamp,json=lastUpdateTimerStopTimestamp,proto3" json:"last_update_timer_stop_timestamp,omitempty"`
	LastUpdateTimerExpiryTimestamp  *BgpTimespec       `protobuf:"bytes,68,opt,name=last_update_timer_expiry_timestamp,json=lastUpdateTimerExpiryTimestamp,proto3" json:"last_update_timer_expiry_timestamp,omitempty"`
	LastUpdateTimerExpiryAge        uint32             `protobuf:"varint,69,opt,name=last_update_timer_expiry_age,json=lastUpdateTimerExpiryAge,proto3" json:"last_update_timer_expiry_age,omitempty"`
	IsUpdateTimerRunning            bool               `protobuf:"varint,70,opt,name=is_update_timer_running,json=isUpdateTimerRunning,proto3" json:"is_update_timer_running,omitempty"`
	LastUpdateTimerRemainingValue   *BgpTimespec       `protobuf:"bytes,71,opt,name=last_update_timer_remaining_value,json=lastUpdateTimerRemainingValue,proto3" json:"last_update_timer_remaining_value,omitempty"`
	LastUpdateTimerDelayValue       *BgpTimespec       `protobuf:"bytes,72,opt,name=last_update_timer_delay_value,json=lastUpdateTimerDelayValue,proto3" json:"last_update_timer_delay_value,omitempty"`
	UpdateStatistics                *BgpUpdgenStatsBag `protobuf:"bytes,73,opt,name=update_statistics,json=updateStatistics,proto3" json:"update_statistics,omitempty"`
	PermPelemEncountered            uint32             `protobuf:"varint,74,opt,name=perm_pelem_encountered,json=permPelemEncountered,proto3" json:"perm_pelem_encountered,omitempty"`
	PermPelemAllowed                uint32             `protobuf:"varint,75,opt,name=perm_pelem_allowed,json=permPelemAllowed,proto3" json:"perm_pelem_allowed,omitempty"`
	PermPelemNotAllowed             uint32             `protobuf:"varint,76,opt,name=perm_pelem_not_allowed,json=permPelemNotAllowed,proto3" json:"perm_pelem_not_allowed,omitempty"`
	PermPelemExpWdr                 uint32             `protobuf:"varint,77,opt,name=perm_pelem_exp_wdr,json=permPelemExpWdr,proto3" json:"perm_pelem_exp_wdr,omitempty"`
	PermPelemSpurWdr                uint32             `protobuf:"varint,78,opt,name=perm_pelem_spur_wdr,json=permPelemSpurWdr,proto3" json:"perm_pelem_spur_wdr,omitempty"`
	IsPermanent                     bool               `protobuf:"varint,79,opt,name=is_permanent,json=isPermanent,proto3" json:"is_permanent,omitempty"`
	XXX_NoUnkeyedLiteral            struct{}           `json:"-"`
	XXX_unrecognized                []byte             `json:"-"`
	XXX_sizecache                   int32              `json:"-"`
}

func (m *BgpUpdgenUpdgrpBag) Reset()         { *m = BgpUpdgenUpdgrpBag{} }
func (m *BgpUpdgenUpdgrpBag) String() string { return proto.CompactTextString(m) }
func (*BgpUpdgenUpdgrpBag) ProtoMessage()    {}
func (*BgpUpdgenUpdgrpBag) Descriptor() ([]byte, []int) {
	return fileDescriptor_4d87c293815fb230, []int{3}
}

func (m *BgpUpdgenUpdgrpBag) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BgpUpdgenUpdgrpBag.Unmarshal(m, b)
}
func (m *BgpUpdgenUpdgrpBag) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BgpUpdgenUpdgrpBag.Marshal(b, m, deterministic)
}
func (m *BgpUpdgenUpdgrpBag) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BgpUpdgenUpdgrpBag.Merge(m, src)
}
func (m *BgpUpdgenUpdgrpBag) XXX_Size() int {
	return xxx_messageInfo_BgpUpdgenUpdgrpBag.Size(m)
}
func (m *BgpUpdgenUpdgrpBag) XXX_DiscardUnknown() {
	xxx_messageInfo_BgpUpdgenUpdgrpBag.DiscardUnknown(m)
}

var xxx_messageInfo_BgpUpdgenUpdgrpBag proto.InternalMessageInfo

func (m *BgpUpdgenUpdgrpBag) GetProcessId() uint32 {
	if m != nil {
		return m.ProcessId
	}
	return 0
}

func (m *BgpUpdgenUpdgrpBag) GetUpdateVrfName() string {
	if m != nil {
		return m.UpdateVrfName
	}
	return ""
}

func (m *BgpUpdgenUpdgrpBag) GetUpdateGroupAfName() string {
	if m != nil {
		return m.UpdateGroupAfName
	}
	return ""
}

func (m *BgpUpdgenUpdgrpBag) GetNeighborSessionAfName() uint32 {
	if m != nil {
		return m.NeighborSessionAfName
	}
	return 0
}

func (m *BgpUpdgenUpdgrpBag) GetUpdateGroupIndexXr() uint32 {
	if m != nil {
		return m.UpdateGroupIndexXr
	}
	return 0
}

func (m *BgpUpdgenUpdgrpBag) GetUpdateGroupFlags2() uint32 {
	if m != nil {
		return m.UpdateGroupFlags2
	}
	return 0
}

func (m *BgpUpdgenUpdgrpBag) GetUpdateOutQueueMessages() uint32 {
	if m != nil {
		return m.UpdateOutQueueMessages
	}
	return 0
}

func (m *BgpUpdgenUpdgrpBag) GetUpdateOutQueueSize() uint32 {
	if m != nil {
		return m.UpdateOutQueueSize
	}
	return 0
}

func (m *BgpUpdgenUpdgrpBag) GetUpdateSubGroupCount() uint32 {
	if m != nil {
		return m.UpdateSubGroupCount
	}
	return 0
}

func (m *BgpUpdgenUpdgrpBag) GetSubGroupThrottledCount() uint32 {
	if m != nil {
		return m.SubGroupThrottledCount
	}
	return 0
}

func (m *BgpUpdgenUpdgrpBag) GetRefreshSubGroupCount() uint32 {
	if m != nil {
		return m.RefreshSubGroupCount
	}
	return 0
}

func (m *BgpUpdgenUpdgrpBag) GetRefreshSubGroupThrottledCount() uint32 {
	if m != nil {
		return m.RefreshSubGroupThrottledCount
	}
	return 0
}

func (m *BgpUpdgenUpdgrpBag) GetFilterGroupCount() uint32 {
	if m != nil {
		return m.FilterGroupCount
	}
	return 0
}

func (m *BgpUpdgenUpdgrpBag) GetNeighborCount() uint32 {
	if m != nil {
		return m.NeighborCount
	}
	return 0
}

func (m *BgpUpdgenUpdgrpBag) GetNeighborLeavingCount() uint32 {
	if m != nil {
		return m.NeighborLeavingCount
	}
	return 0
}

func (m *BgpUpdgenUpdgrpBag) GetUpdateGenerationRecoveryPending() bool {
	if m != nil {
		return m.UpdateGenerationRecoveryPending
	}
	return false
}

func (m *BgpUpdgenUpdgrpBag) GetLastUpdateTimerStartTimestamp() *BgpTimespec {
	if m != nil {
		return m.LastUpdateTimerStartTimestamp
	}
	return nil
}

func (m *BgpUpdgenUpdgrpBag) GetLastUpdateTimerStopTimestamp() *BgpTimespec {
	if m != nil {
		return m.LastUpdateTimerStopTimestamp
	}
	return nil
}

func (m *BgpUpdgenUpdgrpBag) GetLastUpdateTimerExpiryTimestamp() *BgpTimespec {
	if m != nil {
		return m.LastUpdateTimerExpiryTimestamp
	}
	return nil
}

func (m *BgpUpdgenUpdgrpBag) GetLastUpdateTimerExpiryAge() uint32 {
	if m != nil {
		return m.LastUpdateTimerExpiryAge
	}
	return 0
}

func (m *BgpUpdgenUpdgrpBag) GetIsUpdateTimerRunning() bool {
	if m != nil {
		return m.IsUpdateTimerRunning
	}
	return false
}

func (m *BgpUpdgenUpdgrpBag) GetLastUpdateTimerRemainingValue() *BgpTimespec {
	if m != nil {
		return m.LastUpdateTimerRemainingValue
	}
	return nil
}

func (m *BgpUpdgenUpdgrpBag) GetLastUpdateTimerDelayValue() *BgpTimespec {
	if m != nil {
		return m.LastUpdateTimerDelayValue
	}
	return nil
}

func (m *BgpUpdgenUpdgrpBag) GetUpdateStatistics() *BgpUpdgenStatsBag {
	if m != nil {
		return m.UpdateStatistics
	}
	return nil
}

func (m *BgpUpdgenUpdgrpBag) GetPermPelemEncountered() uint32 {
	if m != nil {
		return m.PermPelemEncountered
	}
	return 0
}

func (m *BgpUpdgenUpdgrpBag) GetPermPelemAllowed() uint32 {
	if m != nil {
		return m.PermPelemAllowed
	}
	return 0
}

func (m *BgpUpdgenUpdgrpBag) GetPermPelemNotAllowed() uint32 {
	if m != nil {
		return m.PermPelemNotAllowed
	}
	return 0
}

func (m *BgpUpdgenUpdgrpBag) GetPermPelemExpWdr() uint32 {
	if m != nil {
		return m.PermPelemExpWdr
	}
	return 0
}

func (m *BgpUpdgenUpdgrpBag) GetPermPelemSpurWdr() uint32 {
	if m != nil {
		return m.PermPelemSpurWdr
	}
	return 0
}

func (m *BgpUpdgenUpdgrpBag) GetIsPermanent() bool {
	if m != nil {
		return m.IsPermanent
	}
	return false
}

func init() {
	proto.RegisterType((*BgpUpdgenUpdgrpBag_KEYS)(nil), "cisco_ios_xr_ipv4_bgp_oper.bgp.instances.instance.instance_standby.vrfs.vrf.afs.af.update_generation_update_groups.update_generation_update_group.bgp_updgen_updgrp_bag_KEYS")
	proto.RegisterType((*BgpTimespec)(nil), "cisco_ios_xr_ipv4_bgp_oper.bgp.instances.instance.instance_standby.vrfs.vrf.afs.af.update_generation_update_groups.update_generation_update_group.bgp_timespec")
	proto.RegisterType((*BgpUpdgenStatsBag)(nil), "cisco_ios_xr_ipv4_bgp_oper.bgp.instances.instance.instance_standby.vrfs.vrf.afs.af.update_generation_update_groups.update_generation_update_group.bgp_updgen_stats_bag")
	proto.RegisterType((*BgpUpdgenUpdgrpBag)(nil), "cisco_ios_xr_ipv4_bgp_oper.bgp.instances.instance.instance_standby.vrfs.vrf.afs.af.update_generation_update_groups.update_generation_update_group.bgp_updgen_updgrp_bag")
}

func init() { proto.RegisterFile("bgp_updgen_updgrp_bag.proto", fileDescriptor_4d87c293815fb230) }

var fileDescriptor_4d87c293815fb230 = []byte{
	// 1342 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xd4, 0x58, 0xdf, 0x72, 0xd3, 0xc6,
	0x17, 0x1e, 0xf1, 0xe3, 0x47, 0xe0, 0x24, 0x06, 0xa2, 0x24, 0x44, 0x09, 0x04, 0x9c, 0xd0, 0xd2,
	0xcc, 0x94, 0xba, 0xd3, 0x40, 0x4a, 0xa1, 0x2d, 0x25, 0x90, 0x84, 0xf0, 0x2f, 0x80, 0x4d, 0x69,
	0x7b, 0xa5, 0x59, 0x5b, 0xc7, 0xca, 0xce, 0xc8, 0x92, 0xba, 0x2b, 0x99, 0x84, 0xb7, 0xe8, 0x13,
	0xf4, 0xa2, 0x17, 0x7d, 0xa0, 0x4e, 0x5f, 0x80, 0x4e, 0x67, 0x3a, 0x9d, 0xbe, 0x43, 0x3b, 0xfb,
	0x4f, 0x5a, 0xdb, 0x32, 0xed, 0x25, 0xbe, 0xc1, 0x66, 0xbf, 0xf3, 0x9d, 0x3d, 0xdf, 0x27, 0xef,
	0x9e, 0x13, 0xc1, 0xf9, 0x76, 0x98, 0xfa, 0x79, 0x1a, 0x84, 0x18, 0xcb, 0x0f, 0x96, 0xfa, 0x6d,
	0x12, 0x36, 0x52, 0x96, 0x64, 0x89, 0xfb, 0x83, 0xd3, 0xa1, 0xbc, 0x93, 0xf8, 0x34, 0xe1, 0xfe,
	0x21, 0xf3, 0x69, 0xda, 0xbf, 0xee, 0x8b, 0xf8, 0x24, 0x45, 0xd6, 0x68, 0x87, 0x69, 0x83, 0xc6,
	0x3c, 0x23, 0x71, 0x07, 0x79, 0xf1, 0xad, 0xf8, 0xe2, 0x8b, 0x8f, 0xa0, 0x7d, 0xd4, 0xe8, 0xb3,
	0x2e, 0x17, 0xff, 0x34, 0x48, 0x97, 0x37, 0x48, 0xb7, 0x91, 0xa7, 0x01, 0xc9, 0xd0, 0x0f, 0x31,
	0x46, 0x46, 0x32, 0x9a, 0xc8, 0x7d, 0xe5, 0x0a, 0x4b, 0xf2, 0x94, 0xff, 0x0b, 0xbe, 0xf6, 0x93,
	0x03, 0xcb, 0x95, 0x35, 0xfb, 0x8f, 0x76, 0xbe, 0x6b, 0xb9, 0x97, 0xa1, 0x56, 0x54, 0x10, 0x93,
	0x1e, 0x7a, 0x4e, 0xdd, 0x59, 0x3f, 0xd5, 0x9c, 0x31, 0x8b, 0xfb, 0xa4, 0x87, 0xee, 0x12, 0x9c,
	0xec, 0xb3, 0xae, 0xc2, 0x8f, 0x49, 0x7c, 0xaa, 0xcf, 0xba, 0x12, 0x5a, 0x84, 0x29, 0xa2, 0x91,
	0xff, 0x49, 0xe4, 0x04, 0x51, 0xc0, 0x55, 0x70, 0xed, 0x3a, 0x7c, 0x1a, 0x07, 0x78, 0xe8, 0x1d,
	0xaf, 0x3b, 0xeb, 0xb5, 0xe6, 0x59, 0x85, 0xdc, 0x17, 0xc0, 0x03, 0xb1, 0xbe, 0xf6, 0x10, 0x66,
	0x44, 0x91, 0x19, 0xed, 0x21, 0x4f, 0xb1, 0xe3, 0x7a, 0x30, 0xc5, 0xb1, 0x93, 0xc4, 0x01, 0x97,
	0x05, 0xd5, 0x9a, 0xe6, 0xbf, 0x6e, 0x1d, 0xa6, 0x63, 0x12, 0x27, 0x06, 0x3d, 0x26, 0x51, 0x7b,
	0x69, 0xed, 0x97, 0x59, 0x98, 0xb7, 0x14, 0xf3, 0x8c, 0x64, 0x5c, 0x08, 0x76, 0xef, 0xc2, 0x45,
	0x5d, 0x52, 0x92, 0x67, 0xfe, 0xf7, 0x39, 0xe6, 0xe8, 0xf7, 0x90, 0x73, 0x12, 0x22, 0xf7, 0x0f,
	0x68, 0x78, 0xa0, 0xf7, 0x5a, 0x56, 0x51, 0x4f, 0xf3, 0xec, 0xb9, 0x88, 0x79, 0xa2, 0x43, 0xf6,
	0x68, 0x78, 0xe0, 0xee, 0xc3, 0x7b, 0xe3, 0x73, 0x74, 0xf2, 0x5e, 0x1e, 0x91, 0x8c, 0xf6, 0x51,
	0xd7, 0x55, 0xaf, 0xce, 0x74, 0xaf, 0x88, 0x73, 0x1f, 0xc3, 0xe5, 0xf1, 0xf9, 0x02, 0xca, 0x3b,
	0x84, 0x05, 0x18, 0x48, 0x6f, 0x6b, 0xcd, 0x4b, 0xd5, 0xe9, 0xb6, 0x4d, 0x98, 0xbb, 0x07, 0xab,
	0x6f, 0xa9, 0x2e, 0x42, 0xc2, 0x30, 0xd0, 0xcf, 0x60, 0x65, 0x4c, 0x69, 0x2a, 0xc8, 0xbd, 0x05,
	0xcb, 0x23, 0x99, 0x38, 0x7d, 0x8d, 0xca, 0xa7, 0xff, 0xcb, 0x14, 0xe7, 0x06, 0x53, 0xb4, 0xe8,
	0x6b, 0x94, 0x1e, 0xed, 0x42, 0xbd, 0x9a, 0x6b, 0xf9, 0x73, 0xa2, 0xee, 0xac, 0x1f, 0x6f, 0x5e,
	0x18, 0xcd, 0x60, 0x79, 0xb3, 0x0d, 0x97, 0xaa, 0xf3, 0x94, 0xbe, 0x4c, 0xc9, 0x34, 0xe7, 0x47,
	0xd3, 0x94, 0x9e, 0xdc, 0x81, 0x95, 0x31, 0xd5, 0x68, 0x3f, 0x4e, 0xca, 0x1c, 0x4b, 0x15, 0xa5,
	0x68, 0x2f, 0x7e, 0x73, 0x60, 0x25, 0x22, 0x3c, 0x33, 0x07, 0x4b, 0x6f, 0xaf, 0x7e, 0xad, 0x19,
	0xe9, 0xa5, 0xde, 0xa9, 0xba, 0xb3, 0x3e, 0xbd, 0xf1, 0xa3, 0xd3, 0x78, 0xe7, 0xce, 0x7f, 0xc3,
	0x3e, 0x56, 0xcd, 0x65, 0x21, 0xe3, 0x6b, 0x09, 0x6b, 0x83, 0x5e, 0x18, 0x0d, 0xee, 0x26, 0x2c,
	0x56, 0x89, 0x24, 0x21, 0x7a, 0x20, 0x1f, 0xf7, 0xfc, 0x08, 0x79, 0x2b, 0xc4, 0x11, 0x73, 0xb4,
	0xab, 0x96, 0x39, 0xd3, 0x93, 0x67, 0x8e, 0x7e, 0xf2, 0xa5, 0x39, 0xd7, 0xe0, 0xdc, 0x88, 0x48,
	0xe5, 0xcd, 0x8c, 0xf4, 0x66, 0x6e, 0x88, 0x2b, 0xad, 0xd9, 0x80, 0x05, 0x1d, 0x9f, 0x1d, 0xb0,
	0x24, 0xcb, 0x22, 0xf4, 0x3b, 0x49, 0x1e, 0x67, 0x5e, 0x4d, 0x71, 0x14, 0xf8, 0x42, 0x63, 0xf7,
	0x04, 0xe4, 0xfe, 0xee, 0xc0, 0x45, 0x7b, 0xa7, 0x82, 0x59, 0xfa, 0x79, 0x7a, 0x42, 0xfc, 0x3c,
	0x5f, 0x7a, 0x62, 0x34, 0x96, 0x86, 0xde, 0x00, 0xaf, 0x52, 0xa6, 0xb0, 0xf4, 0x8c, 0xb4, 0x67,
	0x61, 0x94, 0x3e, 0x68, 0x2a, 0xc3, 0x4e, 0xd2, 0x47, 0x76, 0xa4, 0x4d, 0x3d, 0x6b, 0x9b, 0xda,
	0xd4, 0x58, 0xb5, 0xa9, 0x05, 0xb3, 0x34, 0x75, 0x76, 0xf2, 0x4c, 0x35, 0x1a, 0xc7, 0x9a, 0x5a,
	0xc8, 0x14, 0xa6, 0xba, 0xc3, 0xa6, 0x1a, 0xba, 0x30, 0xb5, 0xec, 0x42, 0x3d, 0xec, 0x25, 0x82,
	0x11, 0x45, 0x49, 0x47, 0xd5, 0xd2, 0x25, 0x34, 0xd2, 0x16, 0xcf, 0xd9, 0x5d, 0xe8, 0x89, 0x8c,
	0xdc, 0x2a, 0x02, 0x77, 0x09, 0x8d, 0x94, 0xdd, 0x7f, 0x3b, 0x70, 0xd5, 0xae, 0x63, 0x4c, 0xce,
	0xd2, 0xfc, 0xf9, 0x09, 0x31, 0xff, 0x83, 0xd2, 0xbd, 0x2a, 0xf5, 0xe5, 0x83, 0x78, 0x0e, 0x57,
	0xfe, 0x83, 0x01, 0xe2, 0xb1, 0x2c, 0x48, 0x4b, 0x57, 0xdf, 0x9e, 0x78, 0x2b, 0xc4, 0xb5, 0x37,
	0xf3, 0xb0, 0x50, 0x39, 0xc7, 0xb9, 0x2b, 0x00, 0x29, 0x4b, 0x3a, 0xc8, 0xb9, 0x4f, 0x03, 0x6f,
	0x43, 0x26, 0x3c, 0xa5, 0x57, 0x1e, 0x04, 0xee, 0x15, 0x38, 0xa3, 0xcb, 0x28, 0x66, 0xb8, 0x6b,
	0x72, 0x52, 0xab, 0xa9, 0xe5, 0x97, 0x7a, 0x92, 0xfb, 0x18, 0xe6, 0x07, 0x06, 0x36, 0x33, 0xd6,
	0x5d, 0x97, 0xc1, 0xb3, 0xd6, 0xc8, 0xb6, 0xa5, 0x08, 0x37, 0xc0, 0x8b, 0x91, 0x86, 0x07, 0xed,
	0x84, 0xf9, 0x1c, 0x39, 0x17, 0xba, 0x0c, 0x69, 0x53, 0xfd, 0xda, 0x0c, 0xde, 0x52, 0xb0, 0x26,
	0x7e, 0x52, 0x1c, 0x61, 0x6b, 0x34, 0xf4, 0x0f, 0x99, 0xf7, 0xa9, 0x64, 0xb9, 0xc3, 0xd3, 0xe1,
	0xb7, 0xcc, 0x6d, 0xc0, 0xdc, 0x00, 0xa5, 0x1b, 0x91, 0x90, 0x6f, 0x78, 0x37, 0x24, 0xc1, 0xae,
	0x6d, 0x57, 0x02, 0xee, 0x4d, 0x58, 0x1a, 0x3b, 0x08, 0x79, 0x9f, 0x55, 0x4d, 0x2f, 0x66, 0x00,
	0xb2, 0xaa, 0x1b, 0x9c, 0x17, 0xbc, 0x9b, 0x76, 0x75, 0xf6, 0x9c, 0x20, 0xba, 0x83, 0xa6, 0xf0,
	0xbc, 0xad, 0x2b, 0x54, 0x27, 0xe6, 0x96, 0x7d, 0x29, 0xb5, 0xf2, 0xb6, 0xac, 0x51, 0x9d, 0x92,
	0x9b, 0xb0, 0x54, 0x46, 0x9b, 0xfb, 0x2f, 0xd0, 0xbc, 0xcf, 0x55, 0x89, 0x5c, 0x33, 0xcc, 0x05,
	0x18, 0x28, 0xea, 0x26, 0x2c, 0x32, 0xec, 0x32, 0xe4, 0x07, 0x23, 0x1b, 0x7e, 0xa1, 0x5a, 0xb5,
	0x86, 0x07, 0x77, 0xdc, 0x83, 0xd5, 0x51, 0xda, 0xf0, 0xce, 0x5f, 0xaa, 0xe9, 0x70, 0x28, 0xc1,
	0x50, 0x01, 0x57, 0xc1, 0xed, 0xd2, 0x28, 0x43, 0x36, 0xb0, 0xf7, 0x6d, 0x35, 0xdc, 0x2b, 0xc4,
	0xda, 0xf7, 0x7d, 0x38, 0x5d, 0xfc, 0x50, 0x54, 0xe4, 0x57, 0x32, 0xb2, 0x66, 0x56, 0x55, 0xd8,
	0x75, 0x38, 0x57, 0x84, 0x45, 0x48, 0xfa, 0x34, 0x0e, 0x75, 0xf8, 0x1d, 0x25, 0xca, 0xa0, 0x8f,
	0x15, 0xa8, 0x58, 0x8f, 0x60, 0x6d, 0xf4, 0x08, 0x17, 0x37, 0x5f, 0x8a, 0x71, 0x40, 0xe3, 0xd0,
	0xdb, 0xaa, 0x3b, 0xeb, 0x27, 0xcd, 0xcd, 0x75, 0xbf, 0x08, 0x34, 0x77, 0xe0, 0x33, 0x15, 0xe6,
	0xfe, 0xe9, 0xc0, 0xea, 0x40, 0x5b, 0xa2, 0x3d, 0x64, 0xe2, 0x6a, 0x61, 0x99, 0x75, 0x5d, 0xdd,
	0x9d, 0x90, 0xeb, 0x6a, 0xc5, 0xea, 0xa0, 0x42, 0x48, 0x4b, 0xe8, 0x28, 0x2f, 0xa9, 0x3f, 0x1c,
	0xa8, 0x57, 0x89, 0x4d, 0x52, 0x4b, 0xeb, 0xbd, 0x09, 0xd1, 0x7a, 0x61, 0x44, 0x6b, 0x92, 0x96,
	0x52, 0xff, 0x72, 0x60, 0x6d, 0x54, 0x2a, 0x1e, 0xa6, 0x74, 0x60, 0x08, 0xd8, 0x9e, 0x10, 0xb1,
	0x17, 0x87, 0xc4, 0xee, 0x48, 0x21, 0xa5, 0xdc, 0xdb, 0x70, 0x61, 0xac, 0x5a, 0xd1, 0x74, 0x76,
	0xe4, 0x79, 0xf2, 0x2a, 0xb3, 0x88, 0x71, 0x60, 0x13, 0x16, 0x29, 0x1f, 0x64, 0xb3, 0x3c, 0x8e,
	0xc5, 0x41, 0xda, 0x95, 0x07, 0x69, 0x9e, 0x72, 0x8b, 0xd8, 0x54, 0xd8, 0x98, 0xd3, 0xc3, 0xb0,
	0x47, 0xa8, 0xc0, 0xfd, 0x3e, 0x89, 0x72, 0xf4, 0xee, 0x4f, 0xe8, 0xe9, 0x69, 0x1a, 0x1d, 0x2f,
	0x85, 0x0c, 0xf7, 0xcd, 0xd0, 0xdf, 0x3d, 0x4a, 0x6c, 0x80, 0x11, 0x39, 0xd2, 0x42, 0xf7, 0x26,
	0x44, 0xe8, 0xd2, 0x90, 0xd0, 0x6d, 0xa1, 0x41, 0x89, 0xfc, 0xd5, 0x81, 0x59, 0xd3, 0xd9, 0x32,
	0x92, 0x51, 0x9e, 0xd1, 0x0e, 0xf7, 0x1e, 0x48, 0x61, 0x3f, 0xbf, 0xab, 0xc2, 0x86, 0xdf, 0xfb,
	0x98, 0xd7, 0x4d, 0xad, 0x42, 0x81, 0x68, 0x35, 0x29, 0xb2, 0x9e, 0x9f, 0x62, 0x84, 0x3d, 0x1f,
	0x63, 0xd9, 0x66, 0x90, 0x61, 0xe0, 0x3d, 0x54, 0xad, 0x46, 0xa0, 0xcf, 0x04, 0xb8, 0x53, 0x62,
	0xa2, 0xeb, 0x59, 0x2c, 0x31, 0xcd, 0xbd, 0xc2, 0xc0, 0x7b, 0xa4, 0xba, 0x5e, 0xc1, 0xd8, 0x52,
	0xeb, 0x62, 0x28, 0xb0, 0xa2, 0xe3, 0x24, 0x2b, 0x18, 0x8f, 0xd5, 0x50, 0x50, 0x30, 0xf6, 0x93,
	0xcc, 0x90, 0x3e, 0x1c, 0xd8, 0x02, 0x0f, 0x53, 0xff, 0x55, 0xc0, 0xbc, 0x27, 0x92, 0x70, 0xa6,
	0x2c, 0xea, 0x30, 0xfd, 0x26, 0x60, 0xee, 0x47, 0x30, 0x67, 0x05, 0xf3, 0x34, 0x67, 0x32, 0x7a,
	0x7f, 0xa8, 0xa0, 0x56, 0x9a, 0x33, 0x11, 0xbe, 0x0a, 0x33, 0x94, 0xfb, 0x62, 0x99, 0xc4, 0x18,
	0x67, 0xde, 0x53, 0x79, 0x94, 0xa7, 0x29, 0x7f, 0x66, 0x96, 0xda, 0x27, 0xe4, 0x7b, 0xcc, 0x6b,
	0xff, 0x04, 0x00, 0x00, 0xff, 0xff, 0xc4, 0x21, 0x2f, 0x8d, 0xe6, 0x14, 0x00, 0x00,
}
