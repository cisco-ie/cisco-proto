/*
Copyright 2019 Cisco Systems

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: bgp_srv6_locator_bag.proto

package cisco_ios_xr_ipv4_bgp_oper_bgp_instances_instance_instance_active_segment_routing_srv6_locator_entries_locator_entry

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type BgpSrv6LocatorBag_KEYS struct {
	InstanceName         string   `protobuf:"bytes,1,opt,name=instance_name,json=instanceName,proto3" json:"instance_name,omitempty"`
	LocatorName          string   `protobuf:"bytes,2,opt,name=locator_name,json=locatorName,proto3" json:"locator_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BgpSrv6LocatorBag_KEYS) Reset()         { *m = BgpSrv6LocatorBag_KEYS{} }
func (m *BgpSrv6LocatorBag_KEYS) String() string { return proto.CompactTextString(m) }
func (*BgpSrv6LocatorBag_KEYS) ProtoMessage()    {}
func (*BgpSrv6LocatorBag_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_05c53116cdf73ab6, []int{0}
}

func (m *BgpSrv6LocatorBag_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BgpSrv6LocatorBag_KEYS.Unmarshal(m, b)
}
func (m *BgpSrv6LocatorBag_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BgpSrv6LocatorBag_KEYS.Marshal(b, m, deterministic)
}
func (m *BgpSrv6LocatorBag_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BgpSrv6LocatorBag_KEYS.Merge(m, src)
}
func (m *BgpSrv6LocatorBag_KEYS) XXX_Size() int {
	return xxx_messageInfo_BgpSrv6LocatorBag_KEYS.Size(m)
}
func (m *BgpSrv6LocatorBag_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_BgpSrv6LocatorBag_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_BgpSrv6LocatorBag_KEYS proto.InternalMessageInfo

func (m *BgpSrv6LocatorBag_KEYS) GetInstanceName() string {
	if m != nil {
		return m.InstanceName
	}
	return ""
}

func (m *BgpSrv6LocatorBag_KEYS) GetLocatorName() string {
	if m != nil {
		return m.LocatorName
	}
	return ""
}

type BgpEdmLocatorEntry_ struct {
	LocatorName          string   `protobuf:"bytes,1,opt,name=locator_name,json=locatorName,proto3" json:"locator_name,omitempty"`
	LocatorId            uint32   `protobuf:"varint,2,opt,name=locator_id,json=locatorId,proto3" json:"locator_id,omitempty"`
	LocatorAddress       string   `protobuf:"bytes,3,opt,name=locator_address,json=locatorAddress,proto3" json:"locator_address,omitempty"`
	LocatorAddressLen    uint32   `protobuf:"varint,4,opt,name=locator_address_len,json=locatorAddressLen,proto3" json:"locator_address_len,omitempty"`
	Stale                bool     `protobuf:"varint,5,opt,name=stale,proto3" json:"stale,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BgpEdmLocatorEntry_) Reset()         { *m = BgpEdmLocatorEntry_{} }
func (m *BgpEdmLocatorEntry_) String() string { return proto.CompactTextString(m) }
func (*BgpEdmLocatorEntry_) ProtoMessage()    {}
func (*BgpEdmLocatorEntry_) Descriptor() ([]byte, []int) {
	return fileDescriptor_05c53116cdf73ab6, []int{1}
}

func (m *BgpEdmLocatorEntry_) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BgpEdmLocatorEntry_.Unmarshal(m, b)
}
func (m *BgpEdmLocatorEntry_) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BgpEdmLocatorEntry_.Marshal(b, m, deterministic)
}
func (m *BgpEdmLocatorEntry_) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BgpEdmLocatorEntry_.Merge(m, src)
}
func (m *BgpEdmLocatorEntry_) XXX_Size() int {
	return xxx_messageInfo_BgpEdmLocatorEntry_.Size(m)
}
func (m *BgpEdmLocatorEntry_) XXX_DiscardUnknown() {
	xxx_messageInfo_BgpEdmLocatorEntry_.DiscardUnknown(m)
}

var xxx_messageInfo_BgpEdmLocatorEntry_ proto.InternalMessageInfo

func (m *BgpEdmLocatorEntry_) GetLocatorName() string {
	if m != nil {
		return m.LocatorName
	}
	return ""
}

func (m *BgpEdmLocatorEntry_) GetLocatorId() uint32 {
	if m != nil {
		return m.LocatorId
	}
	return 0
}

func (m *BgpEdmLocatorEntry_) GetLocatorAddress() string {
	if m != nil {
		return m.LocatorAddress
	}
	return ""
}

func (m *BgpEdmLocatorEntry_) GetLocatorAddressLen() uint32 {
	if m != nil {
		return m.LocatorAddressLen
	}
	return 0
}

func (m *BgpEdmLocatorEntry_) GetStale() bool {
	if m != nil {
		return m.Stale
	}
	return false
}

type BgpSrv6LocatorBag struct {
	Entry                *BgpEdmLocatorEntry_ `protobuf:"bytes,50,opt,name=entry,proto3" json:"entry,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *BgpSrv6LocatorBag) Reset()         { *m = BgpSrv6LocatorBag{} }
func (m *BgpSrv6LocatorBag) String() string { return proto.CompactTextString(m) }
func (*BgpSrv6LocatorBag) ProtoMessage()    {}
func (*BgpSrv6LocatorBag) Descriptor() ([]byte, []int) {
	return fileDescriptor_05c53116cdf73ab6, []int{2}
}

func (m *BgpSrv6LocatorBag) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BgpSrv6LocatorBag.Unmarshal(m, b)
}
func (m *BgpSrv6LocatorBag) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BgpSrv6LocatorBag.Marshal(b, m, deterministic)
}
func (m *BgpSrv6LocatorBag) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BgpSrv6LocatorBag.Merge(m, src)
}
func (m *BgpSrv6LocatorBag) XXX_Size() int {
	return xxx_messageInfo_BgpSrv6LocatorBag.Size(m)
}
func (m *BgpSrv6LocatorBag) XXX_DiscardUnknown() {
	xxx_messageInfo_BgpSrv6LocatorBag.DiscardUnknown(m)
}

var xxx_messageInfo_BgpSrv6LocatorBag proto.InternalMessageInfo

func (m *BgpSrv6LocatorBag) GetEntry() *BgpEdmLocatorEntry_ {
	if m != nil {
		return m.Entry
	}
	return nil
}

func init() {
	proto.RegisterType((*BgpSrv6LocatorBag_KEYS)(nil), "cisco_ios_xr_ipv4_bgp_oper.bgp.instances.instance.instance_active.segment_routing.srv6.locator_entries.locator_entry.bgp_srv6_locator_bag_KEYS")
	proto.RegisterType((*BgpEdmLocatorEntry_)(nil), "cisco_ios_xr_ipv4_bgp_oper.bgp.instances.instance.instance_active.segment_routing.srv6.locator_entries.locator_entry.bgp_edm_locator_entry_")
	proto.RegisterType((*BgpSrv6LocatorBag)(nil), "cisco_ios_xr_ipv4_bgp_oper.bgp.instances.instance.instance_active.segment_routing.srv6.locator_entries.locator_entry.bgp_srv6_locator_bag")
}

func init() { proto.RegisterFile("bgp_srv6_locator_bag.proto", fileDescriptor_05c53116cdf73ab6) }

var fileDescriptor_05c53116cdf73ab6 = []byte{
	// 314 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xc4, 0x92, 0xc1, 0x4a, 0x33, 0x31,
	0x10, 0xc7, 0xc9, 0xf7, 0x59, 0xb1, 0xd3, 0x56, 0x31, 0x16, 0x59, 0x05, 0xa1, 0xd6, 0x83, 0x3d,
	0xe5, 0x50, 0xc5, 0xbb, 0x07, 0x0f, 0xa2, 0x78, 0x58, 0x4f, 0x9e, 0x86, 0x6c, 0x76, 0x58, 0x02,
	0xdd, 0x64, 0x49, 0x62, 0xd1, 0x77, 0xf0, 0x2d, 0x7c, 0x0d, 0x5f, 0xc0, 0xb7, 0x92, 0x4d, 0xbb,
	0x85, 0xb5, 0x7b, 0xf7, 0x36, 0xf3, 0xcf, 0x6f, 0xe6, 0x3f, 0x99, 0x04, 0x4e, 0xb3, 0xa2, 0x42,
	0xef, 0x96, 0x37, 0xb8, 0xb0, 0x4a, 0x06, 0xeb, 0x30, 0x93, 0x85, 0xa8, 0x9c, 0x0d, 0x96, 0x07,
	0xa5, 0xbd, 0xb2, 0xa8, 0xad, 0xc7, 0x37, 0x87, 0xba, 0x5a, 0x5e, 0x63, 0x4d, 0xdb, 0x8a, 0x9c,
	0xc8, 0x8a, 0x4a, 0x68, 0xe3, 0x83, 0x34, 0x8a, 0xfc, 0x26, 0xda, 0x04, 0x28, 0x55, 0xd0, 0x4b,
	0x12, 0x9e, 0x8a, 0x92, 0x4c, 0x40, 0x67, 0x5f, 0x83, 0x36, 0x85, 0xa8, 0x9d, 0x44, 0xe3, 0x44,
	0x26, 0x38, 0x4d, 0xbe, 0x95, 0xbf, 0x4f, 0x15, 0x9c, 0x74, 0xcd, 0x84, 0x0f, 0x77, 0x2f, 0xcf,
	0xfc, 0x02, 0x46, 0x1b, 0x0b, 0x23, 0x4b, 0x4a, 0xd8, 0x84, 0xcd, 0xfa, 0xe9, 0xb0, 0x11, 0x9f,
	0x64, 0x49, 0xfc, 0x1c, 0x86, 0x4d, 0x61, 0x64, 0xfe, 0x45, 0x66, 0xb0, 0xd6, 0x6a, 0x64, 0xfa,
	0xcd, 0xe0, 0xb8, 0x76, 0xa1, 0xbc, 0xc4, 0x96, 0x3d, 0x6e, 0x55, 0xb3, 0xad, 0x6a, 0x7e, 0x06,
	0xd0, 0x20, 0x3a, 0x8f, 0xed, 0x47, 0x69, 0x7f, 0xad, 0xdc, 0xe7, 0xfc, 0x12, 0x0e, 0x9a, 0x63,
	0x99, 0xe7, 0x8e, 0xbc, 0x4f, 0xfe, 0xc7, 0x26, 0xfb, 0x6b, 0xf9, 0x76, 0xa5, 0x72, 0x01, 0x47,
	0xbf, 0x40, 0x5c, 0x90, 0x49, 0x76, 0x62, 0xc3, 0xc3, 0x36, 0xfc, 0x48, 0x86, 0x8f, 0xa1, 0xe7,
	0x83, 0x5c, 0x50, 0xd2, 0x9b, 0xb0, 0xd9, 0x5e, 0xba, 0x4a, 0xa6, 0x5f, 0x0c, 0xc6, 0x5d, 0x1b,
	0xe3, 0x9f, 0x0c, 0x7a, 0xf1, 0x52, 0xc9, 0x7c, 0xc2, 0x66, 0x83, 0xf9, 0x07, 0x13, 0x7f, 0xf1,
	0xa2, 0xa2, 0x7b, 0xd1, 0xe9, 0x6a, 0xb6, 0x6c, 0x37, 0x7e, 0xb6, 0xab, 0x9f, 0x00, 0x00, 0x00,
	0xff, 0xff, 0x47, 0x42, 0xf5, 0x21, 0x8a, 0x02, 0x00, 0x00,
}
