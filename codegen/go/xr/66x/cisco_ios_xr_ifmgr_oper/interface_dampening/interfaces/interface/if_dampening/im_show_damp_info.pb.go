/*
Copyright 2019 Cisco Systems

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: im_show_damp_info.proto

package cisco_ios_xr_ifmgr_oper_interface_dampening_interfaces_interface_if_dampening

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ImShowDampInfo_KEYS struct {
	InterfaceName        string   `protobuf:"bytes,1,opt,name=interface_name,json=interfaceName,proto3" json:"interface_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ImShowDampInfo_KEYS) Reset()         { *m = ImShowDampInfo_KEYS{} }
func (m *ImShowDampInfo_KEYS) String() string { return proto.CompactTextString(m) }
func (*ImShowDampInfo_KEYS) ProtoMessage()    {}
func (*ImShowDampInfo_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_5352247291404f58, []int{0}
}

func (m *ImShowDampInfo_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ImShowDampInfo_KEYS.Unmarshal(m, b)
}
func (m *ImShowDampInfo_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ImShowDampInfo_KEYS.Marshal(b, m, deterministic)
}
func (m *ImShowDampInfo_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ImShowDampInfo_KEYS.Merge(m, src)
}
func (m *ImShowDampInfo_KEYS) XXX_Size() int {
	return xxx_messageInfo_ImShowDampInfo_KEYS.Size(m)
}
func (m *ImShowDampInfo_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_ImShowDampInfo_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_ImShowDampInfo_KEYS proto.InternalMessageInfo

func (m *ImShowDampInfo_KEYS) GetInterfaceName() string {
	if m != nil {
		return m.InterfaceName
	}
	return ""
}

type ImShowDampNodeInfo_ struct {
	Penalty              uint32   `protobuf:"varint,1,opt,name=penalty,proto3" json:"penalty,omitempty"`
	IsSuppressedEnabled  bool     `protobuf:"varint,2,opt,name=is_suppressed_enabled,json=isSuppressedEnabled,proto3" json:"is_suppressed_enabled,omitempty"`
	SecondsRemaining     uint32   `protobuf:"varint,3,opt,name=seconds_remaining,json=secondsRemaining,proto3" json:"seconds_remaining,omitempty"`
	Flaps                uint32   `protobuf:"varint,4,opt,name=flaps,proto3" json:"flaps,omitempty"`
	State                string   `protobuf:"bytes,5,opt,name=state,proto3" json:"state,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ImShowDampNodeInfo_) Reset()         { *m = ImShowDampNodeInfo_{} }
func (m *ImShowDampNodeInfo_) String() string { return proto.CompactTextString(m) }
func (*ImShowDampNodeInfo_) ProtoMessage()    {}
func (*ImShowDampNodeInfo_) Descriptor() ([]byte, []int) {
	return fileDescriptor_5352247291404f58, []int{1}
}

func (m *ImShowDampNodeInfo_) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ImShowDampNodeInfo_.Unmarshal(m, b)
}
func (m *ImShowDampNodeInfo_) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ImShowDampNodeInfo_.Marshal(b, m, deterministic)
}
func (m *ImShowDampNodeInfo_) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ImShowDampNodeInfo_.Merge(m, src)
}
func (m *ImShowDampNodeInfo_) XXX_Size() int {
	return xxx_messageInfo_ImShowDampNodeInfo_.Size(m)
}
func (m *ImShowDampNodeInfo_) XXX_DiscardUnknown() {
	xxx_messageInfo_ImShowDampNodeInfo_.DiscardUnknown(m)
}

var xxx_messageInfo_ImShowDampNodeInfo_ proto.InternalMessageInfo

func (m *ImShowDampNodeInfo_) GetPenalty() uint32 {
	if m != nil {
		return m.Penalty
	}
	return 0
}

func (m *ImShowDampNodeInfo_) GetIsSuppressedEnabled() bool {
	if m != nil {
		return m.IsSuppressedEnabled
	}
	return false
}

func (m *ImShowDampNodeInfo_) GetSecondsRemaining() uint32 {
	if m != nil {
		return m.SecondsRemaining
	}
	return 0
}

func (m *ImShowDampNodeInfo_) GetFlaps() uint32 {
	if m != nil {
		return m.Flaps
	}
	return 0
}

func (m *ImShowDampNodeInfo_) GetState() string {
	if m != nil {
		return m.State
	}
	return ""
}

type ImShowDampNode_ struct {
	CapsulationNumber    string               `protobuf:"bytes,1,opt,name=capsulation_number,json=capsulationNumber,proto3" json:"capsulation_number,omitempty"`
	CapsulationDampening *ImShowDampNodeInfo_ `protobuf:"bytes,2,opt,name=capsulation_dampening,json=capsulationDampening,proto3" json:"capsulation_dampening,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *ImShowDampNode_) Reset()         { *m = ImShowDampNode_{} }
func (m *ImShowDampNode_) String() string { return proto.CompactTextString(m) }
func (*ImShowDampNode_) ProtoMessage()    {}
func (*ImShowDampNode_) Descriptor() ([]byte, []int) {
	return fileDescriptor_5352247291404f58, []int{2}
}

func (m *ImShowDampNode_) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ImShowDampNode_.Unmarshal(m, b)
}
func (m *ImShowDampNode_) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ImShowDampNode_.Marshal(b, m, deterministic)
}
func (m *ImShowDampNode_) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ImShowDampNode_.Merge(m, src)
}
func (m *ImShowDampNode_) XXX_Size() int {
	return xxx_messageInfo_ImShowDampNode_.Size(m)
}
func (m *ImShowDampNode_) XXX_DiscardUnknown() {
	xxx_messageInfo_ImShowDampNode_.DiscardUnknown(m)
}

var xxx_messageInfo_ImShowDampNode_ proto.InternalMessageInfo

func (m *ImShowDampNode_) GetCapsulationNumber() string {
	if m != nil {
		return m.CapsulationNumber
	}
	return ""
}

func (m *ImShowDampNode_) GetCapsulationDampening() *ImShowDampNodeInfo_ {
	if m != nil {
		return m.CapsulationDampening
	}
	return nil
}

type ImShowDampInfo struct {
	StateTransitionCount    uint32               `protobuf:"varint,50,opt,name=state_transition_count,json=stateTransitionCount,proto3" json:"state_transition_count,omitempty"`
	LastStateTransitionTime uint32               `protobuf:"varint,51,opt,name=last_state_transition_time,json=lastStateTransitionTime,proto3" json:"last_state_transition_time,omitempty"`
	IsDampeningEnabled      bool                 `protobuf:"varint,52,opt,name=is_dampening_enabled,json=isDampeningEnabled,proto3" json:"is_dampening_enabled,omitempty"`
	HalfLife                uint32               `protobuf:"varint,53,opt,name=half_life,json=halfLife,proto3" json:"half_life,omitempty"`
	ReuseThreshold          uint32               `protobuf:"varint,54,opt,name=reuse_threshold,json=reuseThreshold,proto3" json:"reuse_threshold,omitempty"`
	SuppressThreshold       uint32               `protobuf:"varint,55,opt,name=suppress_threshold,json=suppressThreshold,proto3" json:"suppress_threshold,omitempty"`
	MaximumSuppressTime     uint32               `protobuf:"varint,56,opt,name=maximum_suppress_time,json=maximumSuppressTime,proto3" json:"maximum_suppress_time,omitempty"`
	RestartPenalty          uint32               `protobuf:"varint,57,opt,name=restart_penalty,json=restartPenalty,proto3" json:"restart_penalty,omitempty"`
	InterfaceDampening      *ImShowDampNodeInfo_ `protobuf:"bytes,58,opt,name=interface_dampening,json=interfaceDampening,proto3" json:"interface_dampening,omitempty"`
	Capsulation             []*ImShowDampNode_   `protobuf:"bytes,59,rep,name=capsulation,proto3" json:"capsulation,omitempty"`
	XXX_NoUnkeyedLiteral    struct{}             `json:"-"`
	XXX_unrecognized        []byte               `json:"-"`
	XXX_sizecache           int32                `json:"-"`
}

func (m *ImShowDampInfo) Reset()         { *m = ImShowDampInfo{} }
func (m *ImShowDampInfo) String() string { return proto.CompactTextString(m) }
func (*ImShowDampInfo) ProtoMessage()    {}
func (*ImShowDampInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_5352247291404f58, []int{3}
}

func (m *ImShowDampInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ImShowDampInfo.Unmarshal(m, b)
}
func (m *ImShowDampInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ImShowDampInfo.Marshal(b, m, deterministic)
}
func (m *ImShowDampInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ImShowDampInfo.Merge(m, src)
}
func (m *ImShowDampInfo) XXX_Size() int {
	return xxx_messageInfo_ImShowDampInfo.Size(m)
}
func (m *ImShowDampInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_ImShowDampInfo.DiscardUnknown(m)
}

var xxx_messageInfo_ImShowDampInfo proto.InternalMessageInfo

func (m *ImShowDampInfo) GetStateTransitionCount() uint32 {
	if m != nil {
		return m.StateTransitionCount
	}
	return 0
}

func (m *ImShowDampInfo) GetLastStateTransitionTime() uint32 {
	if m != nil {
		return m.LastStateTransitionTime
	}
	return 0
}

func (m *ImShowDampInfo) GetIsDampeningEnabled() bool {
	if m != nil {
		return m.IsDampeningEnabled
	}
	return false
}

func (m *ImShowDampInfo) GetHalfLife() uint32 {
	if m != nil {
		return m.HalfLife
	}
	return 0
}

func (m *ImShowDampInfo) GetReuseThreshold() uint32 {
	if m != nil {
		return m.ReuseThreshold
	}
	return 0
}

func (m *ImShowDampInfo) GetSuppressThreshold() uint32 {
	if m != nil {
		return m.SuppressThreshold
	}
	return 0
}

func (m *ImShowDampInfo) GetMaximumSuppressTime() uint32 {
	if m != nil {
		return m.MaximumSuppressTime
	}
	return 0
}

func (m *ImShowDampInfo) GetRestartPenalty() uint32 {
	if m != nil {
		return m.RestartPenalty
	}
	return 0
}

func (m *ImShowDampInfo) GetInterfaceDampening() *ImShowDampNodeInfo_ {
	if m != nil {
		return m.InterfaceDampening
	}
	return nil
}

func (m *ImShowDampInfo) GetCapsulation() []*ImShowDampNode_ {
	if m != nil {
		return m.Capsulation
	}
	return nil
}

func init() {
	proto.RegisterType((*ImShowDampInfo_KEYS)(nil), "cisco_ios_xr_ifmgr_oper.interface_dampening.interfaces.interface.if_dampening.im_show_damp_info_KEYS")
	proto.RegisterType((*ImShowDampNodeInfo_)(nil), "cisco_ios_xr_ifmgr_oper.interface_dampening.interfaces.interface.if_dampening.im_show_damp_node_info_")
	proto.RegisterType((*ImShowDampNode_)(nil), "cisco_ios_xr_ifmgr_oper.interface_dampening.interfaces.interface.if_dampening.im_show_damp_node_")
	proto.RegisterType((*ImShowDampInfo)(nil), "cisco_ios_xr_ifmgr_oper.interface_dampening.interfaces.interface.if_dampening.im_show_damp_info")
}

func init() { proto.RegisterFile("im_show_damp_info.proto", fileDescriptor_5352247291404f58) }

var fileDescriptor_5352247291404f58 = []byte{
	// 526 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x54, 0xcd, 0x6e, 0xd3, 0x40,
	0x10, 0x96, 0x29, 0x81, 0x76, 0xa3, 0x16, 0xb2, 0x49, 0xda, 0x15, 0x5c, 0xa2, 0x48, 0x88, 0x48,
	0x08, 0x0b, 0xb9, 0xe5, 0xb7, 0x07, 0x0e, 0xd0, 0x13, 0x50, 0x21, 0x27, 0x17, 0x4e, 0xab, 0x8d,
	0x3d, 0x6e, 0x56, 0xf2, 0xee, 0x5a, 0xbb, 0x6b, 0x51, 0xce, 0x3c, 0x04, 0x07, 0xde, 0x80, 0xa7,
	0xe0, 0x55, 0x78, 0x13, 0xe4, 0x49, 0xfc, 0x03, 0x81, 0x1b, 0xf4, 0x96, 0xfd, 0xbe, 0x6f, 0xc6,
	0xdf, 0xcc, 0x37, 0x0a, 0x39, 0x92, 0x8a, 0xbb, 0x95, 0xf9, 0xc8, 0x53, 0xa1, 0x0a, 0x2e, 0x75,
	0x66, 0xc2, 0xc2, 0x1a, 0x6f, 0xe8, 0xbb, 0x44, 0xba, 0xc4, 0x70, 0x69, 0x1c, 0xbf, 0xb4, 0x5c,
	0x66, 0xea, 0xc2, 0x72, 0x53, 0x80, 0x0d, 0xa5, 0xf6, 0x60, 0x33, 0x91, 0x00, 0x96, 0x80, 0x96,
	0xfa, 0xa2, 0xc5, 0x5c, 0xfb, 0x33, 0x94, 0x59, 0xab, 0x98, 0xbe, 0x24, 0x87, 0x5b, 0x5f, 0xe2,
	0x6f, 0xce, 0x3e, 0xcc, 0xe9, 0x3d, 0x72, 0xd0, 0xb6, 0xd4, 0x42, 0x01, 0x0b, 0x26, 0xc1, 0x6c,
	0x2f, 0xde, 0x6f, 0xd0, 0x73, 0xa1, 0x60, 0xfa, 0x3d, 0xf8, 0xcd, 0xab, 0x36, 0x29, 0xac, 0xdb,
	0x50, 0x46, 0x6e, 0x16, 0xa0, 0x45, 0xee, 0x3f, 0x61, 0xed, 0x7e, 0x5c, 0x3f, 0x69, 0x44, 0xc6,
	0xd2, 0x71, 0x57, 0x16, 0x85, 0x05, 0xe7, 0x20, 0xe5, 0xa0, 0xc5, 0x32, 0x87, 0x94, 0x5d, 0x9b,
	0x04, 0xb3, 0xdd, 0x78, 0x28, 0xdd, 0xbc, 0xe1, 0xce, 0xd6, 0x14, 0x7d, 0x40, 0x06, 0x0e, 0x12,
	0xa3, 0x53, 0xc7, 0x2d, 0x28, 0x21, 0x2b, 0xff, 0x6c, 0x07, 0xfb, 0xde, 0xde, 0x10, 0x71, 0x8d,
	0xd3, 0x11, 0xe9, 0x65, 0xb9, 0x28, 0x1c, 0xbb, 0x8e, 0x82, 0xf5, 0xa3, 0x42, 0x9d, 0x17, 0x1e,
	0x58, 0x0f, 0x47, 0x59, 0x3f, 0xa6, 0x3f, 0x02, 0x42, 0xb7, 0x47, 0xa0, 0x0f, 0x09, 0x4d, 0x44,
	0xe1, 0xca, 0x5c, 0x78, 0x69, 0x34, 0xd7, 0xa5, 0x5a, 0x82, 0xdd, 0x2c, 0x61, 0xd0, 0x61, 0xce,
	0x91, 0xa0, 0x5f, 0x03, 0x32, 0xee, 0xea, 0x9b, 0x1d, 0xe3, 0x4c, 0xfd, 0x28, 0x0b, 0xff, 0x69,
	0x72, 0xe1, 0x5f, 0x96, 0x1e, 0x8f, 0x3a, 0x26, 0x5e, 0x37, 0x39, 0x7f, 0xeb, 0x91, 0xc1, 0x56,
	0xd0, 0xf4, 0x84, 0x1c, 0xe2, 0x0a, 0xb8, 0xb7, 0x42, 0x3b, 0x89, 0xbe, 0x13, 0x53, 0x6a, 0xcf,
	0x22, 0x5c, 0xdb, 0x08, 0xd9, 0x45, 0x43, 0xbe, 0xaa, 0x38, 0x7a, 0x4a, 0xee, 0xe4, 0xc2, 0x79,
	0xbe, 0x55, 0xea, 0xa5, 0x02, 0x76, 0x8c, 0x95, 0x47, 0x95, 0x62, 0xfe, 0x6b, 0xf5, 0x42, 0x2a,
	0xa0, 0x8f, 0xc8, 0x48, 0xba, 0x76, 0x8c, 0x26, 0xf8, 0x13, 0x0c, 0x9e, 0x4a, 0xd7, 0x78, 0xae,
	0x73, 0xbf, 0x4b, 0xf6, 0x56, 0x22, 0xcf, 0x78, 0x2e, 0x33, 0x60, 0x8f, 0xb1, 0xfb, 0x6e, 0x05,
	0xbc, 0x95, 0x19, 0xd0, 0xfb, 0xe4, 0x96, 0x85, 0xd2, 0x01, 0xf7, 0x2b, 0x0b, 0x6e, 0x65, 0xf2,
	0x94, 0x3d, 0x41, 0xc9, 0x01, 0xc2, 0x8b, 0x1a, 0xad, 0xd2, 0xac, 0xcf, 0xad, 0xa3, 0x7d, 0x8a,
	0xda, 0x41, 0xcd, 0xb4, 0xf2, 0x88, 0x8c, 0x95, 0xb8, 0x94, 0xaa, 0x54, 0xbc, 0x2d, 0xab, 0xc6,
	0x7b, 0x86, 0x15, 0xc3, 0x0d, 0x59, 0x5f, 0x29, 0x8e, 0x86, 0x5e, 0x9c, 0x17, 0xd6, 0xf3, 0xfa,
	0xec, 0x9f, 0xd7, 0x5e, 0x10, 0x7e, 0xbf, 0xb9, 0xfe, 0x2f, 0x01, 0x19, 0xfe, 0x21, 0x74, 0xf6,
	0xe2, 0x4a, 0x0f, 0x85, 0x36, 0xfa, 0x66, 0xe5, 0xf4, 0x73, 0x40, 0xfa, 0x9d, 0xfb, 0x61, 0xa7,
	0x93, 0x9d, 0x59, 0x3f, 0x12, 0xff, 0xdd, 0x51, 0xdc, 0xfd, 0xea, 0xf2, 0x06, 0xfe, 0xd5, 0x1d,
	0xff, 0x0c, 0x00, 0x00, 0xff, 0xff, 0xa5, 0x2f, 0x3b, 0x05, 0x05, 0x05, 0x00, 0x00,
}
