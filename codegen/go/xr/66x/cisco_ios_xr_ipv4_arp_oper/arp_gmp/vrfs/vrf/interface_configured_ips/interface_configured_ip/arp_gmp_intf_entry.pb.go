/*
Copyright 2019 Cisco Systems

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: arp_gmp_intf_entry.proto

package cisco_ios_xr_ipv4_arp_oper_arp_gmp_vrfs_vrf_interface_configured_ips_interface_configured_ip

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ArpGmpIntfEntry_KEYS struct {
	VrfName              string   `protobuf:"bytes,1,opt,name=vrf_name,json=vrfName,proto3" json:"vrf_name,omitempty"`
	InterfaceName        string   `protobuf:"bytes,2,opt,name=interface_name,json=interfaceName,proto3" json:"interface_name,omitempty"`
	Address              string   `protobuf:"bytes,3,opt,name=address,proto3" json:"address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ArpGmpIntfEntry_KEYS) Reset()         { *m = ArpGmpIntfEntry_KEYS{} }
func (m *ArpGmpIntfEntry_KEYS) String() string { return proto.CompactTextString(m) }
func (*ArpGmpIntfEntry_KEYS) ProtoMessage()    {}
func (*ArpGmpIntfEntry_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_ec3e2d5120a99909, []int{0}
}

func (m *ArpGmpIntfEntry_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ArpGmpIntfEntry_KEYS.Unmarshal(m, b)
}
func (m *ArpGmpIntfEntry_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ArpGmpIntfEntry_KEYS.Marshal(b, m, deterministic)
}
func (m *ArpGmpIntfEntry_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ArpGmpIntfEntry_KEYS.Merge(m, src)
}
func (m *ArpGmpIntfEntry_KEYS) XXX_Size() int {
	return xxx_messageInfo_ArpGmpIntfEntry_KEYS.Size(m)
}
func (m *ArpGmpIntfEntry_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_ArpGmpIntfEntry_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_ArpGmpIntfEntry_KEYS proto.InternalMessageInfo

func (m *ArpGmpIntfEntry_KEYS) GetVrfName() string {
	if m != nil {
		return m.VrfName
	}
	return ""
}

func (m *ArpGmpIntfEntry_KEYS) GetInterfaceName() string {
	if m != nil {
		return m.InterfaceName
	}
	return ""
}

func (m *ArpGmpIntfEntry_KEYS) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

type ArpGmpConfigEntry struct {
	IpAddress            string   `protobuf:"bytes,1,opt,name=ip_address,json=ipAddress,proto3" json:"ip_address,omitempty"`
	HardwareAddress      string   `protobuf:"bytes,2,opt,name=hardware_address,json=hardwareAddress,proto3" json:"hardware_address,omitempty"`
	EncapsulationType    string   `protobuf:"bytes,3,opt,name=encapsulation_type,json=encapsulationType,proto3" json:"encapsulation_type,omitempty"`
	EntryType            string   `protobuf:"bytes,4,opt,name=entry_type,json=entryType,proto3" json:"entry_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ArpGmpConfigEntry) Reset()         { *m = ArpGmpConfigEntry{} }
func (m *ArpGmpConfigEntry) String() string { return proto.CompactTextString(m) }
func (*ArpGmpConfigEntry) ProtoMessage()    {}
func (*ArpGmpConfigEntry) Descriptor() ([]byte, []int) {
	return fileDescriptor_ec3e2d5120a99909, []int{1}
}

func (m *ArpGmpConfigEntry) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ArpGmpConfigEntry.Unmarshal(m, b)
}
func (m *ArpGmpConfigEntry) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ArpGmpConfigEntry.Marshal(b, m, deterministic)
}
func (m *ArpGmpConfigEntry) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ArpGmpConfigEntry.Merge(m, src)
}
func (m *ArpGmpConfigEntry) XXX_Size() int {
	return xxx_messageInfo_ArpGmpConfigEntry.Size(m)
}
func (m *ArpGmpConfigEntry) XXX_DiscardUnknown() {
	xxx_messageInfo_ArpGmpConfigEntry.DiscardUnknown(m)
}

var xxx_messageInfo_ArpGmpConfigEntry proto.InternalMessageInfo

func (m *ArpGmpConfigEntry) GetIpAddress() string {
	if m != nil {
		return m.IpAddress
	}
	return ""
}

func (m *ArpGmpConfigEntry) GetHardwareAddress() string {
	if m != nil {
		return m.HardwareAddress
	}
	return ""
}

func (m *ArpGmpConfigEntry) GetEncapsulationType() string {
	if m != nil {
		return m.EncapsulationType
	}
	return ""
}

func (m *ArpGmpConfigEntry) GetEntryType() string {
	if m != nil {
		return m.EntryType
	}
	return ""
}

type ArpGmpIntfEntry struct {
	InterfaceNameXr              string             `protobuf:"bytes,50,opt,name=interface_name_xr,json=interfaceNameXr,proto3" json:"interface_name_xr,omitempty"`
	ReferenceCount               uint32             `protobuf:"varint,51,opt,name=reference_count,json=referenceCount,proto3" json:"reference_count,omitempty"`
	AssociatedConfigurationEntry *ArpGmpConfigEntry `protobuf:"bytes,52,opt,name=associated_configuration_entry,json=associatedConfigurationEntry,proto3" json:"associated_configuration_entry,omitempty"`
	XXX_NoUnkeyedLiteral         struct{}           `json:"-"`
	XXX_unrecognized             []byte             `json:"-"`
	XXX_sizecache                int32              `json:"-"`
}

func (m *ArpGmpIntfEntry) Reset()         { *m = ArpGmpIntfEntry{} }
func (m *ArpGmpIntfEntry) String() string { return proto.CompactTextString(m) }
func (*ArpGmpIntfEntry) ProtoMessage()    {}
func (*ArpGmpIntfEntry) Descriptor() ([]byte, []int) {
	return fileDescriptor_ec3e2d5120a99909, []int{2}
}

func (m *ArpGmpIntfEntry) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ArpGmpIntfEntry.Unmarshal(m, b)
}
func (m *ArpGmpIntfEntry) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ArpGmpIntfEntry.Marshal(b, m, deterministic)
}
func (m *ArpGmpIntfEntry) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ArpGmpIntfEntry.Merge(m, src)
}
func (m *ArpGmpIntfEntry) XXX_Size() int {
	return xxx_messageInfo_ArpGmpIntfEntry.Size(m)
}
func (m *ArpGmpIntfEntry) XXX_DiscardUnknown() {
	xxx_messageInfo_ArpGmpIntfEntry.DiscardUnknown(m)
}

var xxx_messageInfo_ArpGmpIntfEntry proto.InternalMessageInfo

func (m *ArpGmpIntfEntry) GetInterfaceNameXr() string {
	if m != nil {
		return m.InterfaceNameXr
	}
	return ""
}

func (m *ArpGmpIntfEntry) GetReferenceCount() uint32 {
	if m != nil {
		return m.ReferenceCount
	}
	return 0
}

func (m *ArpGmpIntfEntry) GetAssociatedConfigurationEntry() *ArpGmpConfigEntry {
	if m != nil {
		return m.AssociatedConfigurationEntry
	}
	return nil
}

func init() {
	proto.RegisterType((*ArpGmpIntfEntry_KEYS)(nil), "cisco_ios_xr_ipv4_arp_oper.arp_gmp.vrfs.vrf.interface_configured_ips.interface_configured_ip.arp_gmp_intf_entry_KEYS")
	proto.RegisterType((*ArpGmpConfigEntry)(nil), "cisco_ios_xr_ipv4_arp_oper.arp_gmp.vrfs.vrf.interface_configured_ips.interface_configured_ip.arp_gmp_config_entry")
	proto.RegisterType((*ArpGmpIntfEntry)(nil), "cisco_ios_xr_ipv4_arp_oper.arp_gmp.vrfs.vrf.interface_configured_ips.interface_configured_ip.arp_gmp_intf_entry")
}

func init() { proto.RegisterFile("arp_gmp_intf_entry.proto", fileDescriptor_ec3e2d5120a99909) }

var fileDescriptor_ec3e2d5120a99909 = []byte{
	// 361 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x92, 0xc1, 0x4a, 0x3b, 0x31,
	0x10, 0xc6, 0xd9, 0xfe, 0xff, 0x58, 0x1b, 0x69, 0x6b, 0x83, 0xe0, 0x0a, 0x2a, 0xa5, 0x20, 0x56,
	0xc1, 0x3d, 0xb4, 0x7d, 0x01, 0x29, 0x3d, 0x09, 0x1e, 0xaa, 0x07, 0x05, 0x21, 0xc4, 0xdd, 0xd9,
	0x1a, 0xb0, 0x49, 0x98, 0x64, 0xd7, 0xf6, 0x7d, 0x3c, 0x7b, 0xf6, 0xf1, 0x64, 0x93, 0xee, 0xd6,
	0x52, 0x3d, 0x7a, 0x59, 0xd8, 0x6f, 0xbe, 0xe4, 0xf7, 0x65, 0x66, 0x48, 0xc8, 0x51, 0xb3, 0xd9,
	0x5c, 0x33, 0x21, 0x6d, 0xca, 0x40, 0x5a, 0x5c, 0x46, 0x1a, 0x95, 0x55, 0xf4, 0x29, 0x16, 0x26,
	0x56, 0x4c, 0x28, 0xc3, 0x16, 0xc8, 0x84, 0xce, 0x47, 0xac, 0xf0, 0x2a, 0x0d, 0x18, 0xad, 0x0e,
	0x45, 0x39, 0xa6, 0xa6, 0xf8, 0x44, 0x42, 0x5a, 0xc0, 0x94, 0xc7, 0xc0, 0x62, 0x25, 0x53, 0x31,
	0xcb, 0x10, 0x12, 0x26, 0xb4, 0xf9, 0xad, 0xd0, 0xcb, 0xc8, 0xe1, 0x36, 0x99, 0xdd, 0x4c, 0x1e,
	0xef, 0xe8, 0x11, 0xd9, 0xcd, 0x31, 0x65, 0x92, 0xcf, 0x21, 0x0c, 0xba, 0x41, 0xbf, 0x31, 0xad,
	0xe7, 0x98, 0xde, 0xf2, 0x39, 0xd0, 0x33, 0xd2, 0x5a, 0x5f, 0xe8, 0x0c, 0x35, 0x67, 0x68, 0x56,
	0xaa, 0xb3, 0x85, 0xa4, 0xce, 0x93, 0x04, 0xc1, 0x98, 0xf0, 0x9f, 0xbf, 0x60, 0xf5, 0xdb, 0xfb,
	0x08, 0xc8, 0x41, 0xc9, 0xf5, 0x81, 0x3c, 0x99, 0x9e, 0x10, 0x22, 0x34, 0x2b, 0x4f, 0x79, 0x6c,
	0x43, 0xe8, 0x6b, 0x2f, 0xd0, 0x0b, 0xb2, 0xff, 0xc2, 0x31, 0x79, 0xe3, 0x08, 0x95, 0xc9, 0xa3,
	0xdb, 0xa5, 0x5e, 0x5a, 0xaf, 0x08, 0x05, 0x19, 0x73, 0x6d, 0xb2, 0x57, 0x6e, 0x85, 0x92, 0xcc,
	0x2e, 0x35, 0xac, 0x72, 0x74, 0x36, 0x2a, 0xf7, 0x4b, 0x0d, 0x05, 0xd8, 0xbf, 0xdd, 0xd9, 0xfe,
	0x7b, 0xb0, 0x53, 0x8a, 0x72, 0xef, 0xbd, 0x46, 0xe8, 0x76, 0xa3, 0xe8, 0x25, 0xe9, 0x6c, 0x36,
	0x82, 0x2d, 0x30, 0x1c, 0xf8, 0x40, 0x1b, 0xbd, 0x78, 0x40, 0x7a, 0x4e, 0xda, 0x08, 0x29, 0x20,
	0x48, 0x37, 0x85, 0x4c, 0xda, 0x70, 0xd8, 0x0d, 0xfa, 0xcd, 0x69, 0xab, 0x92, 0xc7, 0x85, 0x4a,
	0x3f, 0x03, 0x72, 0xca, 0x8d, 0x51, 0xb1, 0xe0, 0x16, 0x92, 0x6a, 0x60, 0xfe, 0x15, 0x8e, 0x1b,
	0x8e, 0xba, 0x41, 0x7f, 0x6f, 0x80, 0xd1, 0x5f, 0xee, 0x46, 0xf4, 0xd3, 0x80, 0xa6, 0xc7, 0xeb,
	0x64, 0xe3, 0xef, 0xc1, 0x26, 0x45, 0xf5, 0x79, 0xc7, 0xed, 0xec, 0xf0, 0x2b, 0x00, 0x00, 0xff,
	0xff, 0x3b, 0x10, 0x86, 0xee, 0xcf, 0x02, 0x00, 0x00,
}
