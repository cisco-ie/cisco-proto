/*
Copyright 2019 Cisco Systems

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: ptp_advertised_clock_info.proto

package cisco_ios_xr_ptp_oper_ptp_advertised_clock

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type PtpAdvertisedClockInfo_KEYS struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PtpAdvertisedClockInfo_KEYS) Reset()         { *m = PtpAdvertisedClockInfo_KEYS{} }
func (m *PtpAdvertisedClockInfo_KEYS) String() string { return proto.CompactTextString(m) }
func (*PtpAdvertisedClockInfo_KEYS) ProtoMessage()    {}
func (*PtpAdvertisedClockInfo_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_a6ccc9128f84ce0d, []int{0}
}

func (m *PtpAdvertisedClockInfo_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PtpAdvertisedClockInfo_KEYS.Unmarshal(m, b)
}
func (m *PtpAdvertisedClockInfo_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PtpAdvertisedClockInfo_KEYS.Marshal(b, m, deterministic)
}
func (m *PtpAdvertisedClockInfo_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PtpAdvertisedClockInfo_KEYS.Merge(m, src)
}
func (m *PtpAdvertisedClockInfo_KEYS) XXX_Size() int {
	return xxx_messageInfo_PtpAdvertisedClockInfo_KEYS.Size(m)
}
func (m *PtpAdvertisedClockInfo_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_PtpAdvertisedClockInfo_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_PtpAdvertisedClockInfo_KEYS proto.InternalMessageInfo

type PtpBagClockUtcOffset struct {
	CurrentOffset        string   `protobuf:"bytes,1,opt,name=current_offset,json=currentOffset,proto3" json:"current_offset,omitempty"`
	OffsetValid          bool     `protobuf:"varint,2,opt,name=offset_valid,json=offsetValid,proto3" json:"offset_valid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PtpBagClockUtcOffset) Reset()         { *m = PtpBagClockUtcOffset{} }
func (m *PtpBagClockUtcOffset) String() string { return proto.CompactTextString(m) }
func (*PtpBagClockUtcOffset) ProtoMessage()    {}
func (*PtpBagClockUtcOffset) Descriptor() ([]byte, []int) {
	return fileDescriptor_a6ccc9128f84ce0d, []int{1}
}

func (m *PtpBagClockUtcOffset) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PtpBagClockUtcOffset.Unmarshal(m, b)
}
func (m *PtpBagClockUtcOffset) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PtpBagClockUtcOffset.Marshal(b, m, deterministic)
}
func (m *PtpBagClockUtcOffset) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PtpBagClockUtcOffset.Merge(m, src)
}
func (m *PtpBagClockUtcOffset) XXX_Size() int {
	return xxx_messageInfo_PtpBagClockUtcOffset.Size(m)
}
func (m *PtpBagClockUtcOffset) XXX_DiscardUnknown() {
	xxx_messageInfo_PtpBagClockUtcOffset.DiscardUnknown(m)
}

var xxx_messageInfo_PtpBagClockUtcOffset proto.InternalMessageInfo

func (m *PtpBagClockUtcOffset) GetCurrentOffset() string {
	if m != nil {
		return m.CurrentOffset
	}
	return ""
}

func (m *PtpBagClockUtcOffset) GetOffsetValid() bool {
	if m != nil {
		return m.OffsetValid
	}
	return false
}

type PtpBagPortId struct {
	ClockId              uint64   `protobuf:"varint,1,opt,name=clock_id,json=clockId,proto3" json:"clock_id,omitempty"`
	PortNumber           uint32   `protobuf:"varint,2,opt,name=port_number,json=portNumber,proto3" json:"port_number,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PtpBagPortId) Reset()         { *m = PtpBagPortId{} }
func (m *PtpBagPortId) String() string { return proto.CompactTextString(m) }
func (*PtpBagPortId) ProtoMessage()    {}
func (*PtpBagPortId) Descriptor() ([]byte, []int) {
	return fileDescriptor_a6ccc9128f84ce0d, []int{2}
}

func (m *PtpBagPortId) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PtpBagPortId.Unmarshal(m, b)
}
func (m *PtpBagPortId) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PtpBagPortId.Marshal(b, m, deterministic)
}
func (m *PtpBagPortId) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PtpBagPortId.Merge(m, src)
}
func (m *PtpBagPortId) XXX_Size() int {
	return xxx_messageInfo_PtpBagPortId.Size(m)
}
func (m *PtpBagPortId) XXX_DiscardUnknown() {
	xxx_messageInfo_PtpBagPortId.DiscardUnknown(m)
}

var xxx_messageInfo_PtpBagPortId proto.InternalMessageInfo

func (m *PtpBagPortId) GetClockId() uint64 {
	if m != nil {
		return m.ClockId
	}
	return 0
}

func (m *PtpBagPortId) GetPortNumber() uint32 {
	if m != nil {
		return m.PortNumber
	}
	return 0
}

type PtpBagClock struct {
	ClockId              uint64                `protobuf:"varint,1,opt,name=clock_id,json=clockId,proto3" json:"clock_id,omitempty"`
	Priority1            uint32                `protobuf:"varint,2,opt,name=priority1,proto3" json:"priority1,omitempty"`
	Priority2            uint32                `protobuf:"varint,3,opt,name=priority2,proto3" json:"priority2,omitempty"`
	Class                uint32                `protobuf:"varint,4,opt,name=class,proto3" json:"class,omitempty"`
	Accuracy             uint32                `protobuf:"varint,5,opt,name=accuracy,proto3" json:"accuracy,omitempty"`
	OffsetLogVariance    uint32                `protobuf:"varint,6,opt,name=offset_log_variance,json=offsetLogVariance,proto3" json:"offset_log_variance,omitempty"`
	StepsRemoved         uint32                `protobuf:"varint,7,opt,name=steps_removed,json=stepsRemoved,proto3" json:"steps_removed,omitempty"`
	TimeSource           string                `protobuf:"bytes,8,opt,name=time_source,json=timeSource,proto3" json:"time_source,omitempty"`
	UtcOffset            *PtpBagClockUtcOffset `protobuf:"bytes,9,opt,name=utc_offset,json=utcOffset,proto3" json:"utc_offset,omitempty"`
	FrequencyTraceable   bool                  `protobuf:"varint,10,opt,name=frequency_traceable,json=frequencyTraceable,proto3" json:"frequency_traceable,omitempty"`
	TimeTraceable        bool                  `protobuf:"varint,11,opt,name=time_traceable,json=timeTraceable,proto3" json:"time_traceable,omitempty"`
	Timescale            string                `protobuf:"bytes,12,opt,name=timescale,proto3" json:"timescale,omitempty"`
	LeapSeconds          string                `protobuf:"bytes,13,opt,name=leap_seconds,json=leapSeconds,proto3" json:"leap_seconds,omitempty"`
	Receiver             *PtpBagPortId         `protobuf:"bytes,14,opt,name=receiver,proto3" json:"receiver,omitempty"`
	Sender               *PtpBagPortId         `protobuf:"bytes,15,opt,name=sender,proto3" json:"sender,omitempty"`
	Local                bool                  `protobuf:"varint,16,opt,name=local,proto3" json:"local,omitempty"`
	ConfiguredClockClass uint32                `protobuf:"varint,17,opt,name=configured_clock_class,json=configuredClockClass,proto3" json:"configured_clock_class,omitempty"`
	ConfiguredPriority   uint32                `protobuf:"varint,18,opt,name=configured_priority,json=configuredPriority,proto3" json:"configured_priority,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *PtpBagClock) Reset()         { *m = PtpBagClock{} }
func (m *PtpBagClock) String() string { return proto.CompactTextString(m) }
func (*PtpBagClock) ProtoMessage()    {}
func (*PtpBagClock) Descriptor() ([]byte, []int) {
	return fileDescriptor_a6ccc9128f84ce0d, []int{3}
}

func (m *PtpBagClock) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PtpBagClock.Unmarshal(m, b)
}
func (m *PtpBagClock) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PtpBagClock.Marshal(b, m, deterministic)
}
func (m *PtpBagClock) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PtpBagClock.Merge(m, src)
}
func (m *PtpBagClock) XXX_Size() int {
	return xxx_messageInfo_PtpBagClock.Size(m)
}
func (m *PtpBagClock) XXX_DiscardUnknown() {
	xxx_messageInfo_PtpBagClock.DiscardUnknown(m)
}

var xxx_messageInfo_PtpBagClock proto.InternalMessageInfo

func (m *PtpBagClock) GetClockId() uint64 {
	if m != nil {
		return m.ClockId
	}
	return 0
}

func (m *PtpBagClock) GetPriority1() uint32 {
	if m != nil {
		return m.Priority1
	}
	return 0
}

func (m *PtpBagClock) GetPriority2() uint32 {
	if m != nil {
		return m.Priority2
	}
	return 0
}

func (m *PtpBagClock) GetClass() uint32 {
	if m != nil {
		return m.Class
	}
	return 0
}

func (m *PtpBagClock) GetAccuracy() uint32 {
	if m != nil {
		return m.Accuracy
	}
	return 0
}

func (m *PtpBagClock) GetOffsetLogVariance() uint32 {
	if m != nil {
		return m.OffsetLogVariance
	}
	return 0
}

func (m *PtpBagClock) GetStepsRemoved() uint32 {
	if m != nil {
		return m.StepsRemoved
	}
	return 0
}

func (m *PtpBagClock) GetTimeSource() string {
	if m != nil {
		return m.TimeSource
	}
	return ""
}

func (m *PtpBagClock) GetUtcOffset() *PtpBagClockUtcOffset {
	if m != nil {
		return m.UtcOffset
	}
	return nil
}

func (m *PtpBagClock) GetFrequencyTraceable() bool {
	if m != nil {
		return m.FrequencyTraceable
	}
	return false
}

func (m *PtpBagClock) GetTimeTraceable() bool {
	if m != nil {
		return m.TimeTraceable
	}
	return false
}

func (m *PtpBagClock) GetTimescale() string {
	if m != nil {
		return m.Timescale
	}
	return ""
}

func (m *PtpBagClock) GetLeapSeconds() string {
	if m != nil {
		return m.LeapSeconds
	}
	return ""
}

func (m *PtpBagClock) GetReceiver() *PtpBagPortId {
	if m != nil {
		return m.Receiver
	}
	return nil
}

func (m *PtpBagClock) GetSender() *PtpBagPortId {
	if m != nil {
		return m.Sender
	}
	return nil
}

func (m *PtpBagClock) GetLocal() bool {
	if m != nil {
		return m.Local
	}
	return false
}

func (m *PtpBagClock) GetConfiguredClockClass() uint32 {
	if m != nil {
		return m.ConfiguredClockClass
	}
	return 0
}

func (m *PtpBagClock) GetConfiguredPriority() uint32 {
	if m != nil {
		return m.ConfiguredPriority
	}
	return 0
}

type PtpAdvertisedClockInfo struct {
	ClockProperties      *PtpBagClock `protobuf:"bytes,50,opt,name=clock_properties,json=clockProperties,proto3" json:"clock_properties,omitempty"`
	Domain               uint32       `protobuf:"varint,51,opt,name=domain,proto3" json:"domain,omitempty"`
	TimeSourceConfigured bool         `protobuf:"varint,52,opt,name=time_source_configured,json=timeSourceConfigured,proto3" json:"time_source_configured,omitempty"`
	ReceivedTimeSource   string       `protobuf:"bytes,53,opt,name=received_time_source,json=receivedTimeSource,proto3" json:"received_time_source,omitempty"`
	TimescaleConfigured  bool         `protobuf:"varint,54,opt,name=timescale_configured,json=timescaleConfigured,proto3" json:"timescale_configured,omitempty"`
	ReceivedTimescale    string       `protobuf:"bytes,55,opt,name=received_timescale,json=receivedTimescale,proto3" json:"received_timescale,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *PtpAdvertisedClockInfo) Reset()         { *m = PtpAdvertisedClockInfo{} }
func (m *PtpAdvertisedClockInfo) String() string { return proto.CompactTextString(m) }
func (*PtpAdvertisedClockInfo) ProtoMessage()    {}
func (*PtpAdvertisedClockInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_a6ccc9128f84ce0d, []int{4}
}

func (m *PtpAdvertisedClockInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PtpAdvertisedClockInfo.Unmarshal(m, b)
}
func (m *PtpAdvertisedClockInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PtpAdvertisedClockInfo.Marshal(b, m, deterministic)
}
func (m *PtpAdvertisedClockInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PtpAdvertisedClockInfo.Merge(m, src)
}
func (m *PtpAdvertisedClockInfo) XXX_Size() int {
	return xxx_messageInfo_PtpAdvertisedClockInfo.Size(m)
}
func (m *PtpAdvertisedClockInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_PtpAdvertisedClockInfo.DiscardUnknown(m)
}

var xxx_messageInfo_PtpAdvertisedClockInfo proto.InternalMessageInfo

func (m *PtpAdvertisedClockInfo) GetClockProperties() *PtpBagClock {
	if m != nil {
		return m.ClockProperties
	}
	return nil
}

func (m *PtpAdvertisedClockInfo) GetDomain() uint32 {
	if m != nil {
		return m.Domain
	}
	return 0
}

func (m *PtpAdvertisedClockInfo) GetTimeSourceConfigured() bool {
	if m != nil {
		return m.TimeSourceConfigured
	}
	return false
}

func (m *PtpAdvertisedClockInfo) GetReceivedTimeSource() string {
	if m != nil {
		return m.ReceivedTimeSource
	}
	return ""
}

func (m *PtpAdvertisedClockInfo) GetTimescaleConfigured() bool {
	if m != nil {
		return m.TimescaleConfigured
	}
	return false
}

func (m *PtpAdvertisedClockInfo) GetReceivedTimescale() string {
	if m != nil {
		return m.ReceivedTimescale
	}
	return ""
}

func init() {
	proto.RegisterType((*PtpAdvertisedClockInfo_KEYS)(nil), "cisco_ios_xr_ptp_oper.ptp.advertised_clock.ptp_advertised_clock_info_KEYS")
	proto.RegisterType((*PtpBagClockUtcOffset)(nil), "cisco_ios_xr_ptp_oper.ptp.advertised_clock.ptp_bag_clock_utc_offset")
	proto.RegisterType((*PtpBagPortId)(nil), "cisco_ios_xr_ptp_oper.ptp.advertised_clock.ptp_bag_port_id")
	proto.RegisterType((*PtpBagClock)(nil), "cisco_ios_xr_ptp_oper.ptp.advertised_clock.ptp_bag_clock")
	proto.RegisterType((*PtpAdvertisedClockInfo)(nil), "cisco_ios_xr_ptp_oper.ptp.advertised_clock.ptp_advertised_clock_info")
}

func init() { proto.RegisterFile("ptp_advertised_clock_info.proto", fileDescriptor_a6ccc9128f84ce0d) }

var fileDescriptor_a6ccc9128f84ce0d = []byte{
	// 635 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x54, 0x5d, 0x6b, 0x1b, 0x3b,
	0x10, 0xc5, 0xb9, 0x89, 0x63, 0x8f, 0xe3, 0x7c, 0xc8, 0x26, 0x28, 0x97, 0x70, 0xe3, 0xeb, 0x52,
	0x08, 0x85, 0x3a, 0x8d, 0x93, 0xb6, 0x94, 0x3e, 0xa6, 0x7d, 0x28, 0xfd, 0x0a, 0xeb, 0x90, 0xd2,
	0x27, 0x21, 0x6b, 0x65, 0x23, 0xba, 0x5e, 0x6d, 0x25, 0xad, 0x69, 0x7e, 0x59, 0x7f, 0x50, 0xff,
	0x48, 0xd1, 0xac, 0xbc, 0xbb, 0x29, 0xa4, 0x94, 0xf4, 0x69, 0x99, 0x73, 0x8e, 0x66, 0x34, 0x33,
	0x47, 0x0b, 0x47, 0x99, 0xcb, 0x18, 0x8f, 0x97, 0xd2, 0x38, 0x65, 0x65, 0xcc, 0x44, 0xa2, 0xc5,
	0x17, 0xa6, 0xd2, 0x99, 0x1e, 0x65, 0x46, 0x3b, 0x4d, 0x1e, 0x09, 0x65, 0x85, 0x66, 0x4a, 0x5b,
	0xf6, 0xcd, 0x30, 0xaf, 0xd6, 0x99, 0x34, 0xa3, 0xcc, 0x65, 0xa3, 0x5f, 0x8f, 0x0d, 0x07, 0xf0,
	0xdf, 0x9d, 0xe9, 0xd8, 0xdb, 0xd7, 0x9f, 0x27, 0xc3, 0x18, 0xa8, 0x57, 0x4c, 0xf9, 0x3c, 0x50,
	0xb9, 0x13, 0x4c, 0xcf, 0x66, 0x56, 0x3a, 0xf2, 0x10, 0xb6, 0x45, 0x6e, 0x8c, 0x4c, 0x5d, 0x40,
	0x68, 0x63, 0xd0, 0x38, 0x6e, 0x47, 0xdd, 0x80, 0x7e, 0x2c, 0x64, 0xff, 0xc3, 0x56, 0x41, 0xb3,
	0x25, 0x4f, 0x54, 0x4c, 0xd7, 0x06, 0x8d, 0xe3, 0x56, 0xd4, 0x29, 0xb0, 0x6b, 0x0f, 0x0d, 0xdf,
	0xc3, 0xce, 0xaa, 0x4a, 0xa6, 0x8d, 0x63, 0x2a, 0x26, 0x07, 0xd0, 0x0a, 0x77, 0x89, 0x31, 0xed,
	0x7a, 0xb4, 0x89, 0xf1, 0x9b, 0x98, 0x1c, 0x41, 0x07, 0x55, 0x69, 0xbe, 0x98, 0x4a, 0x83, 0xf9,
	0xba, 0x11, 0x78, 0xe8, 0x03, 0x22, 0xc3, 0xef, 0x4d, 0xe8, 0xde, 0xba, 0xf5, 0xef, 0xb2, 0x1d,
	0x42, 0x3b, 0x33, 0x4a, 0x1b, 0xe5, 0x6e, 0x4e, 0x43, 0xae, 0x0a, 0xa8, 0xb3, 0x63, 0xfa, 0xcf,
	0x6d, 0x76, 0x4c, 0xfa, 0xb0, 0x21, 0x12, 0x6e, 0x2d, 0x5d, 0x47, 0xa6, 0x08, 0xc8, 0xbf, 0xd0,
	0xe2, 0x42, 0xe4, 0x86, 0x8b, 0x1b, 0xba, 0x81, 0x44, 0x19, 0x93, 0x11, 0xf4, 0xc2, 0x30, 0x12,
	0x3d, 0x67, 0x4b, 0x6e, 0x14, 0x4f, 0x85, 0xa4, 0x4d, 0x94, 0xed, 0x15, 0xd4, 0x3b, 0x3d, 0xbf,
	0x0e, 0x04, 0x79, 0x00, 0x5d, 0xeb, 0x64, 0x66, 0x99, 0x91, 0x0b, 0xbd, 0x94, 0x31, 0xdd, 0x44,
	0xe5, 0x16, 0x82, 0x51, 0x81, 0xf9, 0x81, 0x38, 0xb5, 0x90, 0xcc, 0xea, 0xdc, 0x08, 0x49, 0x5b,
	0xb8, 0x05, 0xf0, 0xd0, 0x04, 0x11, 0x22, 0x00, 0xaa, 0xbd, 0xd1, 0xf6, 0xa0, 0x71, 0xdc, 0x19,
	0xbf, 0x1a, 0xfd, 0xb9, 0x51, 0x46, 0x77, 0x79, 0x20, 0x6a, 0xe7, 0x4e, 0x84, 0x3d, 0x9f, 0x40,
	0x6f, 0x66, 0xe4, 0xd7, 0x5c, 0xa6, 0xe2, 0x86, 0x39, 0xc3, 0x85, 0xe4, 0xd3, 0x44, 0x52, 0xc0,
	0x75, 0x93, 0x92, 0xba, 0x5a, 0x31, 0xde, 0x3f, 0x78, 0xed, 0x4a, 0xdb, 0x41, 0x6d, 0xd7, 0xa3,
	0x95, 0xec, 0x10, 0xda, 0x1e, 0xb0, 0x82, 0x27, 0x92, 0x6e, 0x61, 0x6f, 0x15, 0xe0, 0xdd, 0x95,
	0x48, 0x9e, 0x31, 0x2b, 0x85, 0x4e, 0x63, 0x4b, 0xbb, 0x28, 0xe8, 0x78, 0x6c, 0x52, 0x40, 0xe4,
	0x13, 0xb4, 0x8c, 0x14, 0x52, 0x2d, 0xa5, 0xa1, 0xdb, 0xd8, 0xfb, 0xcb, 0xfb, 0xf4, 0x1e, 0x9c,
	0x19, 0x95, 0xc9, 0xc8, 0x04, 0x9a, 0x56, 0xa6, 0xb1, 0x34, 0x74, 0xe7, 0xef, 0xd3, 0x86, 0x54,
	0xde, 0x53, 0x89, 0x16, 0x3c, 0xa1, 0xbb, 0x38, 0x8c, 0x22, 0x20, 0xe7, 0xb0, 0x2f, 0x74, 0x3a,
	0x53, 0xf3, 0xdc, 0x94, 0xaf, 0xb4, 0xb0, 0xde, 0x1e, 0x1a, 0xa2, 0x5f, 0xb1, 0x17, 0x9e, 0xbc,
	0x40, 0x27, 0x9e, 0x40, 0xaf, 0x76, 0x6a, 0xe5, 0x5b, 0x4a, 0xf0, 0x08, 0xa9, 0xa8, 0xcb, 0xc0,
	0x0c, 0x7f, 0xac, 0xc1, 0xc1, 0x9d, 0x7f, 0x04, 0x12, 0xc3, 0x6e, 0x11, 0x65, 0xc6, 0xf7, 0xe5,
	0x94, 0xb4, 0x74, 0x8c, 0x9d, 0xbf, 0xb8, 0xb7, 0x99, 0xa2, 0x1d, 0xfc, 0x5c, 0x96, 0x19, 0xc9,
	0x3e, 0x34, 0x63, 0xbd, 0xe0, 0x2a, 0xa5, 0x67, 0x78, 0xcf, 0x10, 0xf9, 0x11, 0xd4, 0x5c, 0xce,
	0xaa, 0xdb, 0xd3, 0x73, 0x9c, 0x54, 0xbf, 0x32, 0xfc, 0x45, 0xc9, 0x91, 0x27, 0xd0, 0x0f, 0xfb,
	0x8a, 0x59, 0xfd, 0x91, 0x3c, 0x45, 0x9f, 0x90, 0x15, 0x77, 0x55, 0x3d, 0x96, 0x53, 0xe8, 0x97,
	0xf6, 0xaa, 0x57, 0x79, 0x86, 0x55, 0x7a, 0x25, 0x57, 0x2b, 0xf2, 0x18, 0xc8, 0xad, 0x22, 0x85,
	0x57, 0x9f, 0x63, 0x89, 0xbd, 0x7a, 0x09, 0x24, 0xa6, 0x4d, 0xfc, 0x53, 0x9f, 0xfd, 0x0c, 0x00,
	0x00, 0xff, 0xff, 0xf2, 0x18, 0x43, 0x10, 0xcc, 0x05, 0x00, 0x00,
}
