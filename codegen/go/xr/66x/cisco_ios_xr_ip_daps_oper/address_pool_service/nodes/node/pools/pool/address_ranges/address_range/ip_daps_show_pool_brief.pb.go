/*
Copyright 2019 Cisco Systems

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: ip_daps_show_pool_brief.proto

package cisco_ios_xr_ip_daps_oper_address_pool_service_nodes_node_pools_pool_address_ranges_address_range

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type IpDapsShowPoolBrief_KEYS struct {
	NodeName             string   `protobuf:"bytes,1,opt,name=node_name,json=nodeName,proto3" json:"node_name,omitempty"`
	PoolName             string   `protobuf:"bytes,2,opt,name=pool_name,json=poolName,proto3" json:"pool_name,omitempty"`
	StartAddress         string   `protobuf:"bytes,3,opt,name=start_address,json=startAddress,proto3" json:"start_address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IpDapsShowPoolBrief_KEYS) Reset()         { *m = IpDapsShowPoolBrief_KEYS{} }
func (m *IpDapsShowPoolBrief_KEYS) String() string { return proto.CompactTextString(m) }
func (*IpDapsShowPoolBrief_KEYS) ProtoMessage()    {}
func (*IpDapsShowPoolBrief_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_30a0792903701b01, []int{0}
}

func (m *IpDapsShowPoolBrief_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IpDapsShowPoolBrief_KEYS.Unmarshal(m, b)
}
func (m *IpDapsShowPoolBrief_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IpDapsShowPoolBrief_KEYS.Marshal(b, m, deterministic)
}
func (m *IpDapsShowPoolBrief_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IpDapsShowPoolBrief_KEYS.Merge(m, src)
}
func (m *IpDapsShowPoolBrief_KEYS) XXX_Size() int {
	return xxx_messageInfo_IpDapsShowPoolBrief_KEYS.Size(m)
}
func (m *IpDapsShowPoolBrief_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_IpDapsShowPoolBrief_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_IpDapsShowPoolBrief_KEYS proto.InternalMessageInfo

func (m *IpDapsShowPoolBrief_KEYS) GetNodeName() string {
	if m != nil {
		return m.NodeName
	}
	return ""
}

func (m *IpDapsShowPoolBrief_KEYS) GetPoolName() string {
	if m != nil {
		return m.PoolName
	}
	return ""
}

func (m *IpDapsShowPoolBrief_KEYS) GetStartAddress() string {
	if m != nil {
		return m.StartAddress
	}
	return ""
}

type IpAddrUn struct {
	AddressFamily        string   `protobuf:"bytes,1,opt,name=address_family,json=addressFamily,proto3" json:"address_family,omitempty"`
	Ipv4Address          string   `protobuf:"bytes,2,opt,name=ipv4_address,json=ipv4Address,proto3" json:"ipv4_address,omitempty"`
	Ipv6Address          string   `protobuf:"bytes,3,opt,name=ipv6_address,json=ipv6Address,proto3" json:"ipv6_address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IpAddrUn) Reset()         { *m = IpAddrUn{} }
func (m *IpAddrUn) String() string { return proto.CompactTextString(m) }
func (*IpAddrUn) ProtoMessage()    {}
func (*IpAddrUn) Descriptor() ([]byte, []int) {
	return fileDescriptor_30a0792903701b01, []int{1}
}

func (m *IpAddrUn) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IpAddrUn.Unmarshal(m, b)
}
func (m *IpAddrUn) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IpAddrUn.Marshal(b, m, deterministic)
}
func (m *IpAddrUn) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IpAddrUn.Merge(m, src)
}
func (m *IpAddrUn) XXX_Size() int {
	return xxx_messageInfo_IpAddrUn.Size(m)
}
func (m *IpAddrUn) XXX_DiscardUnknown() {
	xxx_messageInfo_IpAddrUn.DiscardUnknown(m)
}

var xxx_messageInfo_IpAddrUn proto.InternalMessageInfo

func (m *IpAddrUn) GetAddressFamily() string {
	if m != nil {
		return m.AddressFamily
	}
	return ""
}

func (m *IpAddrUn) GetIpv4Address() string {
	if m != nil {
		return m.Ipv4Address
	}
	return ""
}

func (m *IpAddrUn) GetIpv6Address() string {
	if m != nil {
		return m.Ipv6Address
	}
	return ""
}

type IpAddrSt struct {
	Address              *IpAddrUn `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *IpAddrSt) Reset()         { *m = IpAddrSt{} }
func (m *IpAddrSt) String() string { return proto.CompactTextString(m) }
func (*IpAddrSt) ProtoMessage()    {}
func (*IpAddrSt) Descriptor() ([]byte, []int) {
	return fileDescriptor_30a0792903701b01, []int{2}
}

func (m *IpAddrSt) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IpAddrSt.Unmarshal(m, b)
}
func (m *IpAddrSt) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IpAddrSt.Marshal(b, m, deterministic)
}
func (m *IpAddrSt) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IpAddrSt.Merge(m, src)
}
func (m *IpAddrSt) XXX_Size() int {
	return xxx_messageInfo_IpAddrSt.Size(m)
}
func (m *IpAddrSt) XXX_DiscardUnknown() {
	xxx_messageInfo_IpAddrSt.DiscardUnknown(m)
}

var xxx_messageInfo_IpAddrSt proto.InternalMessageInfo

func (m *IpAddrSt) GetAddress() *IpAddrUn {
	if m != nil {
		return m.Address
	}
	return nil
}

type IpDapsShowPoolBrief struct {
	PoolName                string    `protobuf:"bytes,50,opt,name=pool_name,json=poolName,proto3" json:"pool_name,omitempty"`
	VrfName                 string    `protobuf:"bytes,51,opt,name=vrf_name,json=vrfName,proto3" json:"vrf_name,omitempty"`
	StartAddressXr          *IpAddrSt `protobuf:"bytes,52,opt,name=start_address_xr,json=startAddressXr,proto3" json:"start_address_xr,omitempty"`
	EndAddress              *IpAddrSt `protobuf:"bytes,53,opt,name=end_address,json=endAddress,proto3" json:"end_address,omitempty"`
	DefaultRouter           *IpAddrSt `protobuf:"bytes,54,opt,name=default_router,json=defaultRouter,proto3" json:"default_router,omitempty"`
	AllocatedAddresses      uint32    `protobuf:"varint,55,opt,name=allocated_addresses,json=allocatedAddresses,proto3" json:"allocated_addresses,omitempty"`
	FreeAddresses           uint32    `protobuf:"varint,56,opt,name=free_addresses,json=freeAddresses,proto3" json:"free_addresses,omitempty"`
	ExcludedAddresses       uint32    `protobuf:"varint,57,opt,name=excluded_addresses,json=excludedAddresses,proto3" json:"excluded_addresses,omitempty"`
	NetworkBlockedStatus    uint32    `protobuf:"varint,58,opt,name=network_blocked_status,json=networkBlockedStatus,proto3" json:"network_blocked_status,omitempty"`
	NetworkBlockedStatusTrp uint32    `protobuf:"varint,59,opt,name=network_blocked_status_trp,json=networkBlockedStatusTrp,proto3" json:"network_blocked_status_trp,omitempty"`
	XXX_NoUnkeyedLiteral    struct{}  `json:"-"`
	XXX_unrecognized        []byte    `json:"-"`
	XXX_sizecache           int32     `json:"-"`
}

func (m *IpDapsShowPoolBrief) Reset()         { *m = IpDapsShowPoolBrief{} }
func (m *IpDapsShowPoolBrief) String() string { return proto.CompactTextString(m) }
func (*IpDapsShowPoolBrief) ProtoMessage()    {}
func (*IpDapsShowPoolBrief) Descriptor() ([]byte, []int) {
	return fileDescriptor_30a0792903701b01, []int{3}
}

func (m *IpDapsShowPoolBrief) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IpDapsShowPoolBrief.Unmarshal(m, b)
}
func (m *IpDapsShowPoolBrief) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IpDapsShowPoolBrief.Marshal(b, m, deterministic)
}
func (m *IpDapsShowPoolBrief) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IpDapsShowPoolBrief.Merge(m, src)
}
func (m *IpDapsShowPoolBrief) XXX_Size() int {
	return xxx_messageInfo_IpDapsShowPoolBrief.Size(m)
}
func (m *IpDapsShowPoolBrief) XXX_DiscardUnknown() {
	xxx_messageInfo_IpDapsShowPoolBrief.DiscardUnknown(m)
}

var xxx_messageInfo_IpDapsShowPoolBrief proto.InternalMessageInfo

func (m *IpDapsShowPoolBrief) GetPoolName() string {
	if m != nil {
		return m.PoolName
	}
	return ""
}

func (m *IpDapsShowPoolBrief) GetVrfName() string {
	if m != nil {
		return m.VrfName
	}
	return ""
}

func (m *IpDapsShowPoolBrief) GetStartAddressXr() *IpAddrSt {
	if m != nil {
		return m.StartAddressXr
	}
	return nil
}

func (m *IpDapsShowPoolBrief) GetEndAddress() *IpAddrSt {
	if m != nil {
		return m.EndAddress
	}
	return nil
}

func (m *IpDapsShowPoolBrief) GetDefaultRouter() *IpAddrSt {
	if m != nil {
		return m.DefaultRouter
	}
	return nil
}

func (m *IpDapsShowPoolBrief) GetAllocatedAddresses() uint32 {
	if m != nil {
		return m.AllocatedAddresses
	}
	return 0
}

func (m *IpDapsShowPoolBrief) GetFreeAddresses() uint32 {
	if m != nil {
		return m.FreeAddresses
	}
	return 0
}

func (m *IpDapsShowPoolBrief) GetExcludedAddresses() uint32 {
	if m != nil {
		return m.ExcludedAddresses
	}
	return 0
}

func (m *IpDapsShowPoolBrief) GetNetworkBlockedStatus() uint32 {
	if m != nil {
		return m.NetworkBlockedStatus
	}
	return 0
}

func (m *IpDapsShowPoolBrief) GetNetworkBlockedStatusTrp() uint32 {
	if m != nil {
		return m.NetworkBlockedStatusTrp
	}
	return 0
}

func init() {
	proto.RegisterType((*IpDapsShowPoolBrief_KEYS)(nil), "cisco_ios_xr_ip_daps_oper.address_pool_service.nodes.node.pools.pool.address_ranges.address_range.ip_daps_show_pool_brief_KEYS")
	proto.RegisterType((*IpAddrUn)(nil), "cisco_ios_xr_ip_daps_oper.address_pool_service.nodes.node.pools.pool.address_ranges.address_range.ip_addr_un")
	proto.RegisterType((*IpAddrSt)(nil), "cisco_ios_xr_ip_daps_oper.address_pool_service.nodes.node.pools.pool.address_ranges.address_range.ip_addr_st")
	proto.RegisterType((*IpDapsShowPoolBrief)(nil), "cisco_ios_xr_ip_daps_oper.address_pool_service.nodes.node.pools.pool.address_ranges.address_range.ip_daps_show_pool_brief")
}

func init() { proto.RegisterFile("ip_daps_show_pool_brief.proto", fileDescriptor_30a0792903701b01) }

var fileDescriptor_30a0792903701b01 = []byte{
	// 470 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xc4, 0x54, 0x3d, 0x6f, 0xd4, 0x40,
	0x10, 0x95, 0x41, 0xca, 0xc7, 0x5c, 0x7c, 0x82, 0x05, 0x11, 0xf3, 0x25, 0x85, 0x43, 0x48, 0x69,
	0x30, 0x52, 0x72, 0x1c, 0x1f, 0xa9, 0x82, 0x04, 0x0d, 0x12, 0x85, 0x43, 0x01, 0xd5, 0x6a, 0xcf,
	0x1e, 0x83, 0x15, 0x9f, 0x77, 0x35, 0xbb, 0xbe, 0x5c, 0x0a, 0x6a, 0x2a, 0xa8, 0x10, 0xfc, 0x5d,
	0xb4, 0xe3, 0x8f, 0xcb, 0x45, 0x49, 0x09, 0x69, 0x56, 0xf2, 0x7b, 0x6f, 0xe6, 0xbd, 0x9d, 0xb1,
	0x0d, 0x0f, 0x0b, 0x23, 0x33, 0x65, 0xac, 0xb4, 0x5f, 0xf5, 0x89, 0x34, 0x5a, 0x97, 0x72, 0x4a,
	0x05, 0xe6, 0xb1, 0x21, 0xed, 0xb4, 0x50, 0x69, 0x61, 0x53, 0x2d, 0x0b, 0x6d, 0xe5, 0x82, 0x64,
	0xa7, 0xd5, 0x06, 0x29, 0x56, 0x59, 0x46, 0x68, 0x6d, 0x53, 0x63, 0x91, 0xe6, 0x45, 0x8a, 0x71,
	0xa5, 0x33, 0xb4, 0x7c, 0xc6, 0x1e, 0xb7, 0x7c, 0xf6, 0x52, 0x52, 0xd5, 0x17, 0xb4, 0xab, 0x8f,
	0xa3, 0x6f, 0xf0, 0xe0, 0x92, 0x0c, 0xf2, 0xfd, 0xdb, 0xcf, 0x47, 0xe2, 0x3e, 0x6c, 0xfa, 0x7e,
	0xb2, 0x52, 0x33, 0x8c, 0x82, 0x9d, 0x60, 0x77, 0x33, 0xd9, 0xf0, 0xc0, 0x07, 0x35, 0x43, 0x4f,
	0xb2, 0x9e, 0xc9, 0x6b, 0x0d, 0xe9, 0x01, 0x26, 0x1f, 0x43, 0x68, 0x9d, 0x22, 0x27, 0x5b, 0xc3,
	0xe8, 0x3a, 0x0b, 0xb6, 0x18, 0x3c, 0x6c, 0xb0, 0xd1, 0x29, 0x40, 0x61, 0x58, 0x21, 0xeb, 0x4a,
	0x3c, 0x81, 0x61, 0x97, 0x2e, 0x57, 0xb3, 0xa2, 0x3c, 0x6d, 0x1d, 0xc3, 0x16, 0x7d, 0xc7, 0xa0,
	0x78, 0x04, 0x5b, 0x85, 0x99, 0x8f, 0xfb, 0xc6, 0x8d, 0xf3, 0xc0, 0x63, 0x6d, 0xdf, 0x56, 0x32,
	0x39, 0xe7, 0xed, 0x25, 0x93, 0xce, 0xfa, 0x77, 0xb0, 0xf4, 0xb6, 0x4e, 0x7c, 0x0f, 0x60, 0xbd,
	0x53, 0x7b, 0xd7, 0xc1, 0xde, 0x2c, 0xfe, 0xe7, 0xe3, 0x8f, 0x97, 0x97, 0x4f, 0x3a, 0xf7, 0xd1,
	0x8f, 0x35, 0xd8, 0xbe, 0x64, 0x27, 0xab, 0x13, 0xdf, 0x3b, 0x37, 0xf1, 0xbb, 0xb0, 0x31, 0xa7,
	0xbc, 0xe1, 0xf6, 0x99, 0x5b, 0x9f, 0x53, 0xce, 0xd4, 0x9f, 0x00, 0x6e, 0xac, 0x6c, 0x43, 0x2e,
	0x28, 0x1a, 0xff, 0xf7, 0x6b, 0x5a, 0x97, 0x0c, 0xcf, 0xee, 0xff, 0x13, 0x89, 0x9f, 0x01, 0x0c,
	0xb0, 0xca, 0xfa, 0x4d, 0x3d, 0xbf, 0x8a, 0x50, 0x80, 0x55, 0xd6, 0xbd, 0x3a, 0xbf, 0x02, 0x18,
	0x66, 0x98, 0xab, 0xba, 0x74, 0x92, 0x74, 0xed, 0x90, 0xa2, 0xc9, 0x55, 0x64, 0x0a, 0xdb, 0x10,
	0x09, 0x67, 0x10, 0xcf, 0xe0, 0x96, 0x2a, 0x4b, 0x9d, 0x2a, 0x87, 0xfd, 0xb0, 0xd0, 0x46, 0x2f,
	0x76, 0x82, 0xdd, 0x30, 0x11, 0x3d, 0x75, 0xd8, 0x31, 0xfe, 0x63, 0xca, 0x09, 0xf1, 0x8c, 0xf6,
	0x25, 0x6b, 0x43, 0x8f, 0x2e, 0x65, 0x4f, 0x41, 0xe0, 0x22, 0x2d, 0xeb, 0x6c, 0xa5, 0xed, 0x2b,
	0x96, 0xde, 0xec, 0x98, 0xa5, 0x7c, 0x0c, 0x77, 0x2a, 0x74, 0x27, 0x9a, 0x8e, 0xe5, 0xb4, 0xd4,
	0xe9, 0x31, 0x66, 0xd2, 0x3a, 0xe5, 0x6a, 0x1b, 0xbd, 0xe6, 0x92, 0xdb, 0x2d, 0xfb, 0xa6, 0x21,
	0x8f, 0x98, 0x13, 0x07, 0x70, 0xef, 0xe2, 0x2a, 0xe9, 0xc8, 0x44, 0x07, 0x5c, 0xb9, 0x7d, 0x51,
	0xe5, 0x47, 0x32, 0xd3, 0x35, 0xfe, 0x19, 0xee, 0xff, 0x0d, 0x00, 0x00, 0xff, 0xff, 0xdf, 0x3e,
	0xc6, 0xd2, 0x2d, 0x05, 0x00, 0x00,
}
