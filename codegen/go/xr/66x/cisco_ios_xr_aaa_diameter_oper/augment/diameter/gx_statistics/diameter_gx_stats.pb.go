/*
Copyright 2019 Cisco Systems

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: diameter_gx_stats.proto

package cisco_ios_xr_aaa_diameter_oper_augment_diameter_gx_statistics

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type DiameterGxStats_KEYS struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DiameterGxStats_KEYS) Reset()         { *m = DiameterGxStats_KEYS{} }
func (m *DiameterGxStats_KEYS) String() string { return proto.CompactTextString(m) }
func (*DiameterGxStats_KEYS) ProtoMessage()    {}
func (*DiameterGxStats_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1135bdca1d9984e, []int{0}
}

func (m *DiameterGxStats_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DiameterGxStats_KEYS.Unmarshal(m, b)
}
func (m *DiameterGxStats_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DiameterGxStats_KEYS.Marshal(b, m, deterministic)
}
func (m *DiameterGxStats_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DiameterGxStats_KEYS.Merge(m, src)
}
func (m *DiameterGxStats_KEYS) XXX_Size() int {
	return xxx_messageInfo_DiameterGxStats_KEYS.Size(m)
}
func (m *DiameterGxStats_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_DiameterGxStats_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_DiameterGxStats_KEYS proto.InternalMessageInfo

type DiameterGxStats struct {
	CcrInitMessages            uint32   `protobuf:"varint,50,opt,name=ccr_init_messages,json=ccrInitMessages,proto3" json:"ccr_init_messages,omitempty"`
	CcrInitFailedMessages      uint32   `protobuf:"varint,51,opt,name=ccr_init_failed_messages,json=ccrInitFailedMessages,proto3" json:"ccr_init_failed_messages,omitempty"`
	CcrInitTimedOutMessages    uint32   `protobuf:"varint,52,opt,name=ccr_init_timed_out_messages,json=ccrInitTimedOutMessages,proto3" json:"ccr_init_timed_out_messages,omitempty"`
	CcrInitRetryMessages       uint32   `protobuf:"varint,53,opt,name=ccr_init_retry_messages,json=ccrInitRetryMessages,proto3" json:"ccr_init_retry_messages,omitempty"`
	CcrUpdateMessages          uint32   `protobuf:"varint,54,opt,name=ccr_update_messages,json=ccrUpdateMessages,proto3" json:"ccr_update_messages,omitempty"`
	CcrUpdateFailedMessages    uint32   `protobuf:"varint,55,opt,name=ccr_update_failed_messages,json=ccrUpdateFailedMessages,proto3" json:"ccr_update_failed_messages,omitempty"`
	CcrUpdateTimedOutMessages  uint32   `protobuf:"varint,56,opt,name=ccr_update_timed_out_messages,json=ccrUpdateTimedOutMessages,proto3" json:"ccr_update_timed_out_messages,omitempty"`
	CcrUpdateRetryMessages     uint32   `protobuf:"varint,57,opt,name=ccr_update_retry_messages,json=ccrUpdateRetryMessages,proto3" json:"ccr_update_retry_messages,omitempty"`
	CcrFinalMessages           uint32   `protobuf:"varint,58,opt,name=ccr_final_messages,json=ccrFinalMessages,proto3" json:"ccr_final_messages,omitempty"`
	CcrFinalFailedMessages     uint32   `protobuf:"varint,59,opt,name=ccr_final_failed_messages,json=ccrFinalFailedMessages,proto3" json:"ccr_final_failed_messages,omitempty"`
	CcrFinalTimedOutMessages   uint32   `protobuf:"varint,60,opt,name=ccr_final_timed_out_messages,json=ccrFinalTimedOutMessages,proto3" json:"ccr_final_timed_out_messages,omitempty"`
	CcrFinalRetryMessages      uint32   `protobuf:"varint,61,opt,name=ccr_final_retry_messages,json=ccrFinalRetryMessages,proto3" json:"ccr_final_retry_messages,omitempty"`
	CcaInitMessages            uint32   `protobuf:"varint,62,opt,name=cca_init_messages,json=ccaInitMessages,proto3" json:"cca_init_messages,omitempty"`
	CcaInitErrorMessages       uint32   `protobuf:"varint,63,opt,name=cca_init_error_messages,json=ccaInitErrorMessages,proto3" json:"cca_init_error_messages,omitempty"`
	CcaUpdateMessages          uint32   `protobuf:"varint,64,opt,name=cca_update_messages,json=ccaUpdateMessages,proto3" json:"cca_update_messages,omitempty"`
	CcaUpdateErrorMessages     uint32   `protobuf:"varint,65,opt,name=cca_update_error_messages,json=ccaUpdateErrorMessages,proto3" json:"cca_update_error_messages,omitempty"`
	CcaFinalMessages           uint32   `protobuf:"varint,66,opt,name=cca_final_messages,json=ccaFinalMessages,proto3" json:"cca_final_messages,omitempty"`
	CcaFinalErrorMessages      uint32   `protobuf:"varint,67,opt,name=cca_final_error_messages,json=ccaFinalErrorMessages,proto3" json:"cca_final_error_messages,omitempty"`
	RarReceivedMessages        uint32   `protobuf:"varint,68,opt,name=rar_received_messages,json=rarReceivedMessages,proto3" json:"rar_received_messages,omitempty"`
	RarReceivedErrorMessages   uint32   `protobuf:"varint,69,opt,name=rar_received_error_messages,json=rarReceivedErrorMessages,proto3" json:"rar_received_error_messages,omitempty"`
	RaaSentMessages            uint32   `protobuf:"varint,70,opt,name=raa_sent_messages,json=raaSentMessages,proto3" json:"raa_sent_messages,omitempty"`
	RaaSentErrorMessages       uint32   `protobuf:"varint,71,opt,name=raa_sent_error_messages,json=raaSentErrorMessages,proto3" json:"raa_sent_error_messages,omitempty"`
	AsrReceivedMessages        uint32   `protobuf:"varint,72,opt,name=asr_received_messages,json=asrReceivedMessages,proto3" json:"asr_received_messages,omitempty"`
	AsrReceivedErrorMessages   uint32   `protobuf:"varint,73,opt,name=asr_received_error_messages,json=asrReceivedErrorMessages,proto3" json:"asr_received_error_messages,omitempty"`
	AsaSentMesssages           uint32   `protobuf:"varint,74,opt,name=asa_sent_messsages,json=asaSentMesssages,proto3" json:"asa_sent_messsages,omitempty"`
	AsaSentErrorMessages       uint32   `protobuf:"varint,75,opt,name=asa_sent_error_messages,json=asaSentErrorMessages,proto3" json:"asa_sent_error_messages,omitempty"`
	SessionTerminationMessages uint32   `protobuf:"varint,76,opt,name=session_termination_messages,json=sessionTerminationMessages,proto3" json:"session_termination_messages,omitempty"`
	UnknownRequestMessages     uint32   `protobuf:"varint,77,opt,name=unknown_request_messages,json=unknownRequestMessages,proto3" json:"unknown_request_messages,omitempty"`
	RestoreSessions            uint32   `protobuf:"varint,78,opt,name=restore_sessions,json=restoreSessions,proto3" json:"restore_sessions,omitempty"`
	OpenSessions               uint32   `protobuf:"varint,79,opt,name=open_sessions,json=openSessions,proto3" json:"open_sessions,omitempty"`
	CloseSessions              uint32   `protobuf:"varint,80,opt,name=close_sessions,json=closeSessions,proto3" json:"close_sessions,omitempty"`
	ActiveSessions             uint32   `protobuf:"varint,81,opt,name=active_sessions,json=activeSessions,proto3" json:"active_sessions,omitempty"`
	XXX_NoUnkeyedLiteral       struct{} `json:"-"`
	XXX_unrecognized           []byte   `json:"-"`
	XXX_sizecache              int32    `json:"-"`
}

func (m *DiameterGxStats) Reset()         { *m = DiameterGxStats{} }
func (m *DiameterGxStats) String() string { return proto.CompactTextString(m) }
func (*DiameterGxStats) ProtoMessage()    {}
func (*DiameterGxStats) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1135bdca1d9984e, []int{1}
}

func (m *DiameterGxStats) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DiameterGxStats.Unmarshal(m, b)
}
func (m *DiameterGxStats) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DiameterGxStats.Marshal(b, m, deterministic)
}
func (m *DiameterGxStats) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DiameterGxStats.Merge(m, src)
}
func (m *DiameterGxStats) XXX_Size() int {
	return xxx_messageInfo_DiameterGxStats.Size(m)
}
func (m *DiameterGxStats) XXX_DiscardUnknown() {
	xxx_messageInfo_DiameterGxStats.DiscardUnknown(m)
}

var xxx_messageInfo_DiameterGxStats proto.InternalMessageInfo

func (m *DiameterGxStats) GetCcrInitMessages() uint32 {
	if m != nil {
		return m.CcrInitMessages
	}
	return 0
}

func (m *DiameterGxStats) GetCcrInitFailedMessages() uint32 {
	if m != nil {
		return m.CcrInitFailedMessages
	}
	return 0
}

func (m *DiameterGxStats) GetCcrInitTimedOutMessages() uint32 {
	if m != nil {
		return m.CcrInitTimedOutMessages
	}
	return 0
}

func (m *DiameterGxStats) GetCcrInitRetryMessages() uint32 {
	if m != nil {
		return m.CcrInitRetryMessages
	}
	return 0
}

func (m *DiameterGxStats) GetCcrUpdateMessages() uint32 {
	if m != nil {
		return m.CcrUpdateMessages
	}
	return 0
}

func (m *DiameterGxStats) GetCcrUpdateFailedMessages() uint32 {
	if m != nil {
		return m.CcrUpdateFailedMessages
	}
	return 0
}

func (m *DiameterGxStats) GetCcrUpdateTimedOutMessages() uint32 {
	if m != nil {
		return m.CcrUpdateTimedOutMessages
	}
	return 0
}

func (m *DiameterGxStats) GetCcrUpdateRetryMessages() uint32 {
	if m != nil {
		return m.CcrUpdateRetryMessages
	}
	return 0
}

func (m *DiameterGxStats) GetCcrFinalMessages() uint32 {
	if m != nil {
		return m.CcrFinalMessages
	}
	return 0
}

func (m *DiameterGxStats) GetCcrFinalFailedMessages() uint32 {
	if m != nil {
		return m.CcrFinalFailedMessages
	}
	return 0
}

func (m *DiameterGxStats) GetCcrFinalTimedOutMessages() uint32 {
	if m != nil {
		return m.CcrFinalTimedOutMessages
	}
	return 0
}

func (m *DiameterGxStats) GetCcrFinalRetryMessages() uint32 {
	if m != nil {
		return m.CcrFinalRetryMessages
	}
	return 0
}

func (m *DiameterGxStats) GetCcaInitMessages() uint32 {
	if m != nil {
		return m.CcaInitMessages
	}
	return 0
}

func (m *DiameterGxStats) GetCcaInitErrorMessages() uint32 {
	if m != nil {
		return m.CcaInitErrorMessages
	}
	return 0
}

func (m *DiameterGxStats) GetCcaUpdateMessages() uint32 {
	if m != nil {
		return m.CcaUpdateMessages
	}
	return 0
}

func (m *DiameterGxStats) GetCcaUpdateErrorMessages() uint32 {
	if m != nil {
		return m.CcaUpdateErrorMessages
	}
	return 0
}

func (m *DiameterGxStats) GetCcaFinalMessages() uint32 {
	if m != nil {
		return m.CcaFinalMessages
	}
	return 0
}

func (m *DiameterGxStats) GetCcaFinalErrorMessages() uint32 {
	if m != nil {
		return m.CcaFinalErrorMessages
	}
	return 0
}

func (m *DiameterGxStats) GetRarReceivedMessages() uint32 {
	if m != nil {
		return m.RarReceivedMessages
	}
	return 0
}

func (m *DiameterGxStats) GetRarReceivedErrorMessages() uint32 {
	if m != nil {
		return m.RarReceivedErrorMessages
	}
	return 0
}

func (m *DiameterGxStats) GetRaaSentMessages() uint32 {
	if m != nil {
		return m.RaaSentMessages
	}
	return 0
}

func (m *DiameterGxStats) GetRaaSentErrorMessages() uint32 {
	if m != nil {
		return m.RaaSentErrorMessages
	}
	return 0
}

func (m *DiameterGxStats) GetAsrReceivedMessages() uint32 {
	if m != nil {
		return m.AsrReceivedMessages
	}
	return 0
}

func (m *DiameterGxStats) GetAsrReceivedErrorMessages() uint32 {
	if m != nil {
		return m.AsrReceivedErrorMessages
	}
	return 0
}

func (m *DiameterGxStats) GetAsaSentMesssages() uint32 {
	if m != nil {
		return m.AsaSentMesssages
	}
	return 0
}

func (m *DiameterGxStats) GetAsaSentErrorMessages() uint32 {
	if m != nil {
		return m.AsaSentErrorMessages
	}
	return 0
}

func (m *DiameterGxStats) GetSessionTerminationMessages() uint32 {
	if m != nil {
		return m.SessionTerminationMessages
	}
	return 0
}

func (m *DiameterGxStats) GetUnknownRequestMessages() uint32 {
	if m != nil {
		return m.UnknownRequestMessages
	}
	return 0
}

func (m *DiameterGxStats) GetRestoreSessions() uint32 {
	if m != nil {
		return m.RestoreSessions
	}
	return 0
}

func (m *DiameterGxStats) GetOpenSessions() uint32 {
	if m != nil {
		return m.OpenSessions
	}
	return 0
}

func (m *DiameterGxStats) GetCloseSessions() uint32 {
	if m != nil {
		return m.CloseSessions
	}
	return 0
}

func (m *DiameterGxStats) GetActiveSessions() uint32 {
	if m != nil {
		return m.ActiveSessions
	}
	return 0
}

func init() {
	proto.RegisterType((*DiameterGxStats_KEYS)(nil), "cisco_ios_xr_aaa_diameter_oper.augment.diameter.gx_statistics.diameter_gx_stats_KEYS")
	proto.RegisterType((*DiameterGxStats)(nil), "cisco_ios_xr_aaa_diameter_oper.augment.diameter.gx_statistics.diameter_gx_stats")
}

func init() { proto.RegisterFile("diameter_gx_stats.proto", fileDescriptor_a1135bdca1d9984e) }

var fileDescriptor_a1135bdca1d9984e = []byte{
	// 638 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x95, 0xdb, 0x4f, 0x14, 0x31,
	0x14, 0xc6, 0xe3, 0x8b, 0x0f, 0x8d, 0xcb, 0x65, 0x11, 0x18, 0x2e, 0x26, 0x06, 0x63, 0x54, 0x62,
	0xf6, 0x01, 0x44, 0x40, 0x2e, 0xe2, 0x05, 0x14, 0x11, 0xd1, 0x05, 0x1f, 0x7c, 0x6a, 0x8e, 0xdd,
	0x42, 0x1a, 0xd9, 0x76, 0x6d, 0x3b, 0x88, 0xff, 0x99, 0x7f, 0x9e, 0x99, 0xd3, 0x4e, 0xa7, 0xed,
	0xec, 0x1b, 0x39, 0xe7, 0xfb, 0xf5, 0xe3, 0x9b, 0xef, 0x24, 0x4b, 0xe6, 0x07, 0x02, 0x86, 0xdc,
	0x72, 0x4d, 0xaf, 0x6e, 0xa9, 0xb1, 0x60, 0x4d, 0x6f, 0xa4, 0x95, 0x55, 0xdd, 0x3d, 0x26, 0x0c,
	0x53, 0x54, 0x28, 0x43, 0x6f, 0x35, 0x05, 0x00, 0x1a, 0x94, 0x6a, 0xc4, 0x75, 0x0f, 0xca, 0xab,
	0x21, 0x97, 0xb6, 0x57, 0x4f, 0x7b, 0x9e, 0x17, 0xc6, 0x0a, 0x66, 0x56, 0x0a, 0x32, 0xd7, 0x7a,
	0x99, 0x9e, 0x1c, 0xfe, 0x38, 0x5f, 0xf9, 0xd7, 0x21, 0xd3, 0xad, 0x55, 0x77, 0x95, 0x4c, 0x33,
	0xa6, 0xa9, 0x90, 0xc2, 0xd2, 0x21, 0x37, 0x06, 0xae, 0xb8, 0x29, 0xd6, 0x1e, 0xde, 0x79, 0xda,
	0xe9, 0x4f, 0x32, 0xa6, 0x8f, 0xa5, 0xb0, 0xa7, 0x7e, 0xdc, 0xdd, 0x24, 0x45, 0xd0, 0x5e, 0x82,
	0xb8, 0xe6, 0x83, 0x06, 0x59, 0x47, 0x64, 0xd6, 0x23, 0x47, 0xb8, 0x0d, 0xe0, 0x2e, 0x59, 0x0a,
	0xa0, 0x15, 0x43, 0x3e, 0xa0, 0xaa, 0x8c, 0xec, 0x5e, 0x20, 0x3b, 0xef, 0xd9, 0x8b, 0x4a, 0x70,
	0x56, 0x36, 0xb6, 0x1b, 0x64, 0x3e, 0xd0, 0x9a, 0x5b, 0xfd, 0xb7, 0x21, 0x37, 0x90, 0xbc, 0xef,
	0xc9, 0x7e, 0xb5, 0x0c, 0x58, 0x8f, 0xcc, 0x54, 0x58, 0x39, 0x1a, 0x80, 0xe5, 0x0d, 0xf2, 0x12,
	0x91, 0x2a, 0xf4, 0x77, 0xdc, 0x04, 0xfd, 0x0e, 0x59, 0x8c, 0xf4, 0x79, 0xbe, 0xcd, 0xf0, 0x3f,
	0x3a, 0x2c, 0x4b, 0x78, 0x40, 0x1e, 0x44, 0xf0, 0x98, 0x8c, 0x5b, 0xc8, 0x2f, 0x04, 0xbe, 0x95,
	0x72, 0x9b, 0x2c, 0x44, 0x2f, 0x64, 0x39, 0xb7, 0x91, 0x9e, 0x0b, 0x74, 0x9a, 0xf4, 0x39, 0xe9,
	0x56, 0xe8, 0xa5, 0x90, 0x70, 0xdd, 0x30, 0xaf, 0x90, 0x99, 0x62, 0x4c, 0x1f, 0x55, 0x8b, 0xdc,
	0xc8, 0xa9, 0xf3, 0x98, 0x3b, 0xc1, 0x08, 0xa1, 0x2c, 0xe5, 0x3e, 0x59, 0x6e, 0xd0, 0x31, 0x21,
	0x77, 0x91, 0x2e, 0x6a, 0xba, 0x95, 0xd1, 0x1f, 0x90, 0xe3, 0xb3, 0x88, 0x7b, 0xe1, 0x80, 0x90,
	0x4d, 0x13, 0xe2, 0x95, 0x42, 0x76, 0xa5, 0xfb, 0xf5, 0x95, 0x42, 0x72, 0xa5, 0x78, 0x2e, 0x5e,
	0xcb, 0xb5, 0x56, 0xba, 0x21, 0x5e, 0xd7, 0xe7, 0x82, 0xc4, 0x61, 0xb5, 0x4c, 0xcf, 0x05, 0x5a,
	0xe7, 0x72, 0x50, 0x9f, 0x0b, 0x64, 0xe7, 0x82, 0x9f, 0x31, 0xe8, 0x33, 0xa3, 0x37, 0xf5, 0x67,
	0xf4, 0x54, 0x6a, 0x85, 0x7d, 0x41, 0xde, 0xd7, 0xdb, 0xba, 0x2f, 0x48, 0xfb, 0xc2, 0x8f, 0x56,
	0xab, 0x33, 0x9f, 0x77, 0xf5, 0x47, 0x73, 0x4c, 0x6a, 0xb3, 0x46, 0x66, 0x35, 0x68, 0xaa, 0x39,
	0xe3, 0xe2, 0x26, 0x2e, 0xf9, 0x3d, 0x52, 0x33, 0x1a, 0x74, 0xdf, 0xef, 0x02, 0xb3, 0x47, 0x96,
	0x12, 0x26, 0xf3, 0x3b, 0x74, 0x05, 0x47, 0x64, 0x6a, 0xb9, 0x4a, 0xa6, 0x35, 0x00, 0x35, 0x5c,
	0x46, 0x3d, 0x1d, 0xb9, 0x9e, 0x34, 0xc0, 0x39, 0x97, 0x49, 0x4f, 0x41, 0x9b, 0xd9, 0x7c, 0x70,
	0x3d, 0x79, 0xa2, 0x95, 0x0a, 0xcc, 0xb8, 0x54, 0x1f, 0x5d, 0x2a, 0x30, 0x63, 0x53, 0x25, 0x4c,
	0x66, 0x77, 0xec, 0x52, 0x45, 0x64, 0xab, 0x2f, 0x30, 0x51, 0x2a, 0x47, 0x7d, 0x72, 0x7d, 0x81,
	0x09, 0xb1, 0x42, 0xae, 0xa0, 0xce, 0x8c, 0x4e, 0x5c, 0x2e, 0x8f, 0xa4, 0x26, 0x07, 0x64, 0xd9,
	0x70, 0x63, 0x84, 0x92, 0xd4, 0x72, 0x3d, 0x14, 0x12, 0x6c, 0xf5, 0x77, 0x60, 0x3f, 0x23, 0xbb,
	0xe8, 0x35, 0x17, 0x8d, 0x24, 0xbc, 0xb0, 0x45, 0x8a, 0x52, 0xfe, 0x92, 0xea, 0x8f, 0xa4, 0x9a,
	0xff, 0x2e, 0xb9, 0x89, 0x3a, 0x38, 0x75, 0x07, 0xe9, 0xf7, 0x7d, 0xb7, 0x0e, 0xe4, 0x33, 0x32,
	0xa5, 0xb9, 0xb1, 0x4a, 0x73, 0xea, 0xdf, 0x37, 0xc5, 0x17, 0xdf, 0x9a, 0x9b, 0x9f, 0xfb, 0x71,
	0xf7, 0x11, 0xe9, 0xa8, 0x11, 0x97, 0x8d, 0xee, 0x0c, 0x75, 0xf7, 0xaa, 0x61, 0x10, 0x3d, 0x26,
	0x13, 0xec, 0x5a, 0x99, 0xe8, 0xb5, 0xaf, 0xa8, 0xea, 0xe0, 0x34, 0xc8, 0x9e, 0x90, 0x49, 0x60,
	0x56, 0xdc, 0x44, 0xba, 0x6f, 0xa8, 0x9b, 0x70, 0xe3, 0x5a, 0xf8, 0xf3, 0x2e, 0xfe, 0x34, 0xae,
	0xff, 0x0f, 0x00, 0x00, 0xff, 0xff, 0x20, 0x31, 0xfd, 0x3d, 0x35, 0x07, 0x00, 0x00,
}
