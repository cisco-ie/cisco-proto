/*
Copyright 2019 Cisco Systems

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: srms_l2_adj_t_b.proto

package cisco_ios_xr_segment_routing_ms_oper_srms_adjacency_sid_l2_adjacency_interfaces_interface_address_family_ipv6_sid_record

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type SrmsL2AdjTB_KEYS struct {
	InterfaceName        string   `protobuf:"bytes,1,opt,name=interface_name,json=interfaceName,proto3" json:"interface_name,omitempty"`
	SidType              string   `protobuf:"bytes,2,opt,name=sid_type,json=sidType,proto3" json:"sid_type,omitempty"`
	SidValue             uint32   `protobuf:"varint,3,opt,name=sid_value,json=sidValue,proto3" json:"sid_value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SrmsL2AdjTB_KEYS) Reset()         { *m = SrmsL2AdjTB_KEYS{} }
func (m *SrmsL2AdjTB_KEYS) String() string { return proto.CompactTextString(m) }
func (*SrmsL2AdjTB_KEYS) ProtoMessage()    {}
func (*SrmsL2AdjTB_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_179677fb0b32cf11, []int{0}
}

func (m *SrmsL2AdjTB_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SrmsL2AdjTB_KEYS.Unmarshal(m, b)
}
func (m *SrmsL2AdjTB_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SrmsL2AdjTB_KEYS.Marshal(b, m, deterministic)
}
func (m *SrmsL2AdjTB_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SrmsL2AdjTB_KEYS.Merge(m, src)
}
func (m *SrmsL2AdjTB_KEYS) XXX_Size() int {
	return xxx_messageInfo_SrmsL2AdjTB_KEYS.Size(m)
}
func (m *SrmsL2AdjTB_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_SrmsL2AdjTB_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_SrmsL2AdjTB_KEYS proto.InternalMessageInfo

func (m *SrmsL2AdjTB_KEYS) GetInterfaceName() string {
	if m != nil {
		return m.InterfaceName
	}
	return ""
}

func (m *SrmsL2AdjTB_KEYS) GetSidType() string {
	if m != nil {
		return m.SidType
	}
	return ""
}

func (m *SrmsL2AdjTB_KEYS) GetSidValue() uint32 {
	if m != nil {
		return m.SidValue
	}
	return 0
}

type AddrT struct {
	Af                   string   `protobuf:"bytes,1,opt,name=af,proto3" json:"af,omitempty"`
	Ipv4                 string   `protobuf:"bytes,2,opt,name=ipv4,proto3" json:"ipv4,omitempty"`
	Ipv6                 string   `protobuf:"bytes,3,opt,name=ipv6,proto3" json:"ipv6,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddrT) Reset()         { *m = AddrT{} }
func (m *AddrT) String() string { return proto.CompactTextString(m) }
func (*AddrT) ProtoMessage()    {}
func (*AddrT) Descriptor() ([]byte, []int) {
	return fileDescriptor_179677fb0b32cf11, []int{1}
}

func (m *AddrT) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddrT.Unmarshal(m, b)
}
func (m *AddrT) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddrT.Marshal(b, m, deterministic)
}
func (m *AddrT) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddrT.Merge(m, src)
}
func (m *AddrT) XXX_Size() int {
	return xxx_messageInfo_AddrT.Size(m)
}
func (m *AddrT) XXX_DiscardUnknown() {
	xxx_messageInfo_AddrT.DiscardUnknown(m)
}

var xxx_messageInfo_AddrT proto.InternalMessageInfo

func (m *AddrT) GetAf() string {
	if m != nil {
		return m.Af
	}
	return ""
}

func (m *AddrT) GetIpv4() string {
	if m != nil {
		return m.Ipv4
	}
	return ""
}

func (m *AddrT) GetIpv6() string {
	if m != nil {
		return m.Ipv6
	}
	return ""
}

type SrmsL2AdjTB struct {
	InterfaceName        string   `protobuf:"bytes,50,opt,name=interface_name,json=interfaceName,proto3" json:"interface_name,omitempty"`
	SidValueXr           uint32   `protobuf:"varint,51,opt,name=sid_value_xr,json=sidValueXr,proto3" json:"sid_value_xr,omitempty"`
	SidTypeXr            uint32   `protobuf:"varint,52,opt,name=sid_type_xr,json=sidTypeXr,proto3" json:"sid_type_xr,omitempty"`
	AddressFamily        uint32   `protobuf:"varint,53,opt,name=address_family,json=addressFamily,proto3" json:"address_family,omitempty"`
	HasNexthop           bool     `protobuf:"varint,54,opt,name=has_nexthop,json=hasNexthop,proto3" json:"has_nexthop,omitempty"`
	InterfaceCount       int32    `protobuf:"zigzag32,55,opt,name=interface_count,json=interfaceCount,proto3" json:"interface_count,omitempty"`
	InterfaceDeleteCount int32    `protobuf:"zigzag32,56,opt,name=interface_delete_count,json=interfaceDeleteCount,proto3" json:"interface_delete_count,omitempty"`
	NexthopAddress       *AddrT   `protobuf:"bytes,57,opt,name=nexthop_address,json=nexthopAddress,proto3" json:"nexthop_address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SrmsL2AdjTB) Reset()         { *m = SrmsL2AdjTB{} }
func (m *SrmsL2AdjTB) String() string { return proto.CompactTextString(m) }
func (*SrmsL2AdjTB) ProtoMessage()    {}
func (*SrmsL2AdjTB) Descriptor() ([]byte, []int) {
	return fileDescriptor_179677fb0b32cf11, []int{2}
}

func (m *SrmsL2AdjTB) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SrmsL2AdjTB.Unmarshal(m, b)
}
func (m *SrmsL2AdjTB) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SrmsL2AdjTB.Marshal(b, m, deterministic)
}
func (m *SrmsL2AdjTB) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SrmsL2AdjTB.Merge(m, src)
}
func (m *SrmsL2AdjTB) XXX_Size() int {
	return xxx_messageInfo_SrmsL2AdjTB.Size(m)
}
func (m *SrmsL2AdjTB) XXX_DiscardUnknown() {
	xxx_messageInfo_SrmsL2AdjTB.DiscardUnknown(m)
}

var xxx_messageInfo_SrmsL2AdjTB proto.InternalMessageInfo

func (m *SrmsL2AdjTB) GetInterfaceName() string {
	if m != nil {
		return m.InterfaceName
	}
	return ""
}

func (m *SrmsL2AdjTB) GetSidValueXr() uint32 {
	if m != nil {
		return m.SidValueXr
	}
	return 0
}

func (m *SrmsL2AdjTB) GetSidTypeXr() uint32 {
	if m != nil {
		return m.SidTypeXr
	}
	return 0
}

func (m *SrmsL2AdjTB) GetAddressFamily() uint32 {
	if m != nil {
		return m.AddressFamily
	}
	return 0
}

func (m *SrmsL2AdjTB) GetHasNexthop() bool {
	if m != nil {
		return m.HasNexthop
	}
	return false
}

func (m *SrmsL2AdjTB) GetInterfaceCount() int32 {
	if m != nil {
		return m.InterfaceCount
	}
	return 0
}

func (m *SrmsL2AdjTB) GetInterfaceDeleteCount() int32 {
	if m != nil {
		return m.InterfaceDeleteCount
	}
	return 0
}

func (m *SrmsL2AdjTB) GetNexthopAddress() *AddrT {
	if m != nil {
		return m.NexthopAddress
	}
	return nil
}

func init() {
	proto.RegisterType((*SrmsL2AdjTB_KEYS)(nil), "cisco_ios_xr_segment_routing_ms_oper.srms.adjacency_sid.l2_adjacency.interfaces.interface.address_family.ipv6.sid_record.srms_l2_adj_t_b_KEYS")
	proto.RegisterType((*AddrT)(nil), "cisco_ios_xr_segment_routing_ms_oper.srms.adjacency_sid.l2_adjacency.interfaces.interface.address_family.ipv6.sid_record.addr_t")
	proto.RegisterType((*SrmsL2AdjTB)(nil), "cisco_ios_xr_segment_routing_ms_oper.srms.adjacency_sid.l2_adjacency.interfaces.interface.address_family.ipv6.sid_record.srms_l2_adj_t_b")
}

func init() { proto.RegisterFile("srms_l2_adj_t_b.proto", fileDescriptor_179677fb0b32cf11) }

var fileDescriptor_179677fb0b32cf11 = []byte{
	// 417 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xc4, 0x93, 0xcf, 0x8e, 0xd3, 0x30,
	0x10, 0xc6, 0x95, 0x2e, 0x5a, 0xb6, 0x53, 0xda, 0x0a, 0x6b, 0x41, 0x41, 0x48, 0x10, 0x55, 0x42,
	0xe4, 0xe4, 0x43, 0xb7, 0x14, 0xb8, 0x81, 0xf8, 0x73, 0x41, 0xda, 0x43, 0x40, 0x68, 0x39, 0x8d,
	0xbc, 0xf1, 0x74, 0xeb, 0x55, 0x13, 0x47, 0xb6, 0x5b, 0xb5, 0x37, 0x9e, 0x87, 0x87, 0xe1, 0x99,
	0x90, 0x1d, 0xb7, 0x11, 0xab, 0xde, 0xf7, 0xe6, 0x7c, 0xf3, 0xcd, 0x37, 0xbf, 0x49, 0x62, 0x78,
	0x62, 0x4d, 0x65, 0x71, 0x35, 0x45, 0x21, 0x6f, 0xd1, 0xe1, 0x35, 0x6f, 0x8c, 0x76, 0x9a, 0x6d,
	0x4b, 0x65, 0x4b, 0x8d, 0x4a, 0x5b, 0xdc, 0x1a, 0xb4, 0x74, 0x53, 0x51, 0xed, 0xd0, 0xe8, 0xb5,
	0x53, 0xf5, 0x0d, 0x56, 0x16, 0x75, 0x43, 0x86, 0xfb, 0x5e, 0x2e, 0xe4, 0xad, 0x28, 0xa9, 0x2e,
	0x77, 0x68, 0x95, 0xe4, 0x6d, 0x52, 0x2b, 0x70, 0x55, 0x3b, 0x32, 0x0b, 0x51, 0x92, 0xed, 0x8e,
	0x5c, 0x48, 0x69, 0xc8, 0x5a, 0x5c, 0x88, 0x4a, 0xad, 0x76, 0x5c, 0x35, 0x9b, 0x39, 0xb7, 0x4a,
	0xa2, 0xa1, 0x52, 0x1b, 0x39, 0x59, 0xc3, 0xf9, 0x1d, 0x24, 0xfc, 0xf6, 0xe5, 0xd7, 0x77, 0xf6,
	0x0a, 0x46, 0x87, 0x0c, 0xac, 0x45, 0x45, 0x69, 0x92, 0x25, 0x79, 0xbf, 0x18, 0x1e, 0xd4, 0x4b,
	0x51, 0x11, 0x7b, 0x06, 0x67, 0x3e, 0xcc, 0xed, 0x1a, 0x4a, 0x7b, 0xc1, 0xf0, 0xd0, 0x2a, 0xf9,
	0x63, 0xd7, 0x10, 0x7b, 0x0e, 0x7d, 0x5f, 0xda, 0x88, 0xd5, 0x9a, 0xd2, 0x93, 0x2c, 0xc9, 0x87,
	0x85, 0xf7, 0xfe, 0xf4, 0xcf, 0x93, 0x0f, 0x70, 0xea, 0xc1, 0xd0, 0xb1, 0x11, 0xf4, 0xc4, 0x22,
	0x86, 0xf7, 0xc4, 0x82, 0x31, 0x78, 0xa0, 0x9a, 0xcd, 0x2c, 0xa6, 0x85, 0x73, 0xd4, 0xe6, 0x21,
	0xa5, 0xd5, 0xe6, 0x93, 0xbf, 0x27, 0x30, 0xbe, 0x43, 0x7e, 0x04, 0x7a, 0x7a, 0x0c, 0x3a, 0x83,
	0x47, 0x07, 0x32, 0xdc, 0x9a, 0xf4, 0x22, 0xc0, 0xc1, 0x1e, 0xee, 0xca, 0xb0, 0x17, 0x30, 0xd8,
	0xaf, 0xe5, 0x0d, 0xb3, 0x60, 0xe8, 0xc7, 0xcd, 0xae, 0x8c, 0x1f, 0xf4, 0xff, 0x7b, 0x4d, 0xdf,
	0x04, 0xcb, 0x30, 0xaa, 0x5f, 0x83, 0xc8, 0x5e, 0xc2, 0x60, 0x29, 0x2c, 0xd6, 0xb4, 0x75, 0x4b,
	0xdd, 0xa4, 0xf3, 0x2c, 0xc9, 0xcf, 0x0a, 0x58, 0x0a, 0x7b, 0xd9, 0x2a, 0xec, 0x35, 0x8c, 0x3b,
	0xe0, 0x52, 0xaf, 0x6b, 0x97, 0xbe, 0xcd, 0x92, 0xfc, 0x71, 0xd1, 0xed, 0xf1, 0xc9, 0xab, 0x6c,
	0x06, 0x4f, 0x3b, 0xa3, 0xa4, 0x15, 0xb9, 0xbd, 0xff, 0x5d, 0xf0, 0x9f, 0x1f, 0xaa, 0x9f, 0x43,
	0xb1, 0xed, 0xfa, 0x93, 0xc0, 0x38, 0x0e, 0xc7, 0x48, 0x96, 0xbe, 0xcf, 0x92, 0x7c, 0x30, 0xfd,
	0x9d, 0xf0, 0xfb, 0xfa, 0xe5, 0x78, 0xfb, 0xe1, 0x8b, 0x51, 0x24, 0xfb, 0xd8, 0xba, 0xaf, 0x4f,
	0xc3, 0x55, 0xb8, 0xf8, 0x17, 0x00, 0x00, 0xff, 0xff, 0x90, 0xe8, 0xea, 0x0d, 0x23, 0x03, 0x00,
	0x00,
}
