/*
Copyright 2019 Cisco Systems

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: fib_sh_frr_nhinfo.proto

package cisco_ios_xr_fib_common_oper_fib_nodes_node_protocols_protocol_frr_nhinfo_pendings_frr_nhinfo_pending

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type FibShFrrNhinfo_KEYS struct {
	NodeName             string   `protobuf:"bytes,1,opt,name=node_name,json=nodeName,proto3" json:"node_name,omitempty"`
	ProtocolName         string   `protobuf:"bytes,2,opt,name=protocol_name,json=protocolName,proto3" json:"protocol_name,omitempty"`
	QueueIndex           uint32   `protobuf:"varint,3,opt,name=queue_index,json=queueIndex,proto3" json:"queue_index,omitempty"`
	FrrType              string   `protobuf:"bytes,4,opt,name=frr_type,json=frrType,proto3" json:"frr_type,omitempty"`
	LinkType             string   `protobuf:"bytes,5,opt,name=link_type,json=linkType,proto3" json:"link_type,omitempty"`
	PrefixLength         uint32   `protobuf:"varint,6,opt,name=prefix_length,json=prefixLength,proto3" json:"prefix_length,omitempty"`
	InterfaceName        string   `protobuf:"bytes,7,opt,name=interface_name,json=interfaceName,proto3" json:"interface_name,omitempty"`
	MainInterfaceName    string   `protobuf:"bytes,8,opt,name=main_interface_name,json=mainInterfaceName,proto3" json:"main_interface_name,omitempty"`
	NextHopPrefix        string   `protobuf:"bytes,9,opt,name=next_hop_prefix,json=nextHopPrefix,proto3" json:"next_hop_prefix,omitempty"`
	ReplicatedNhType     string   `protobuf:"bytes,10,opt,name=replicated_nh_type,json=replicatedNhType,proto3" json:"replicated_nh_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FibShFrrNhinfo_KEYS) Reset()         { *m = FibShFrrNhinfo_KEYS{} }
func (m *FibShFrrNhinfo_KEYS) String() string { return proto.CompactTextString(m) }
func (*FibShFrrNhinfo_KEYS) ProtoMessage()    {}
func (*FibShFrrNhinfo_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_e259d403394d3928, []int{0}
}

func (m *FibShFrrNhinfo_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FibShFrrNhinfo_KEYS.Unmarshal(m, b)
}
func (m *FibShFrrNhinfo_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FibShFrrNhinfo_KEYS.Marshal(b, m, deterministic)
}
func (m *FibShFrrNhinfo_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FibShFrrNhinfo_KEYS.Merge(m, src)
}
func (m *FibShFrrNhinfo_KEYS) XXX_Size() int {
	return xxx_messageInfo_FibShFrrNhinfo_KEYS.Size(m)
}
func (m *FibShFrrNhinfo_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_FibShFrrNhinfo_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_FibShFrrNhinfo_KEYS proto.InternalMessageInfo

func (m *FibShFrrNhinfo_KEYS) GetNodeName() string {
	if m != nil {
		return m.NodeName
	}
	return ""
}

func (m *FibShFrrNhinfo_KEYS) GetProtocolName() string {
	if m != nil {
		return m.ProtocolName
	}
	return ""
}

func (m *FibShFrrNhinfo_KEYS) GetQueueIndex() uint32 {
	if m != nil {
		return m.QueueIndex
	}
	return 0
}

func (m *FibShFrrNhinfo_KEYS) GetFrrType() string {
	if m != nil {
		return m.FrrType
	}
	return ""
}

func (m *FibShFrrNhinfo_KEYS) GetLinkType() string {
	if m != nil {
		return m.LinkType
	}
	return ""
}

func (m *FibShFrrNhinfo_KEYS) GetPrefixLength() uint32 {
	if m != nil {
		return m.PrefixLength
	}
	return 0
}

func (m *FibShFrrNhinfo_KEYS) GetInterfaceName() string {
	if m != nil {
		return m.InterfaceName
	}
	return ""
}

func (m *FibShFrrNhinfo_KEYS) GetMainInterfaceName() string {
	if m != nil {
		return m.MainInterfaceName
	}
	return ""
}

func (m *FibShFrrNhinfo_KEYS) GetNextHopPrefix() string {
	if m != nil {
		return m.NextHopPrefix
	}
	return ""
}

func (m *FibShFrrNhinfo_KEYS) GetReplicatedNhType() string {
	if m != nil {
		return m.ReplicatedNhType
	}
	return ""
}

type FibShFrrNhinfo struct {
	SiFrrtype            uint32   `protobuf:"varint,50,opt,name=si_frrtype,json=siFrrtype,proto3" json:"si_frrtype,omitempty"`
	SiRefcount           uint32   `protobuf:"varint,51,opt,name=si_refcount,json=siRefcount,proto3" json:"si_refcount,omitempty"`
	SiFlags              uint32   `protobuf:"varint,52,opt,name=si_flags,json=siFlags,proto3" json:"si_flags,omitempty"`
	SiIfh                uint32   `protobuf:"varint,53,opt,name=si_ifh,json=siIfh,proto3" json:"si_ifh,omitempty"`
	SiMainIfh            uint32   `protobuf:"varint,54,opt,name=si_main_ifh,json=siMainIfh,proto3" json:"si_main_ifh,omitempty"`
	SiLinktype           uint32   `protobuf:"varint,55,opt,name=si_linktype,json=siLinktype,proto3" json:"si_linktype,omitempty"`
	SiNhPfxProto         uint32   `protobuf:"varint,56,opt,name=si_nh_pfx_proto,json=siNhPfxProto,proto3" json:"si_nh_pfx_proto,omitempty"`
	SiNhPfx              []uint32 `protobuf:"varint,57,rep,packed,name=si_nh_pfx,json=siNhPfx,proto3" json:"si_nh_pfx,omitempty"`
	SiNhPfxLen           uint32   `protobuf:"varint,58,opt,name=si_nh_pfx_len,json=siNhPfxLen,proto3" json:"si_nh_pfx_len,omitempty"`
	SiTunid              uint32   `protobuf:"varint,59,opt,name=si_tunid,json=siTunid,proto3" json:"si_tunid,omitempty"`
	SiFrrPtr             uint32   `protobuf:"varint,60,opt,name=si_frr_ptr,json=siFrrPtr,proto3" json:"si_frr_ptr,omitempty"`
	SiProtFrrPtr         uint32   `protobuf:"varint,61,opt,name=si_prot_frr_ptr,json=siProtFrrPtr,proto3" json:"si_prot_frr_ptr,omitempty"`
	SiParentNhPtr        uint32   `protobuf:"varint,62,opt,name=si_parent_nh_ptr,json=siParentNhPtr,proto3" json:"si_parent_nh_ptr,omitempty"`
	SiReplParentType     uint32   `protobuf:"varint,63,opt,name=si_repl_parent_type,json=siReplParentType,proto3" json:"si_repl_parent_type,omitempty"`
	SiUpdTs              uint64   `protobuf:"varint,64,opt,name=si_upd_ts,json=siUpdTs,proto3" json:"si_upd_ts,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FibShFrrNhinfo) Reset()         { *m = FibShFrrNhinfo{} }
func (m *FibShFrrNhinfo) String() string { return proto.CompactTextString(m) }
func (*FibShFrrNhinfo) ProtoMessage()    {}
func (*FibShFrrNhinfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_e259d403394d3928, []int{1}
}

func (m *FibShFrrNhinfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FibShFrrNhinfo.Unmarshal(m, b)
}
func (m *FibShFrrNhinfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FibShFrrNhinfo.Marshal(b, m, deterministic)
}
func (m *FibShFrrNhinfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FibShFrrNhinfo.Merge(m, src)
}
func (m *FibShFrrNhinfo) XXX_Size() int {
	return xxx_messageInfo_FibShFrrNhinfo.Size(m)
}
func (m *FibShFrrNhinfo) XXX_DiscardUnknown() {
	xxx_messageInfo_FibShFrrNhinfo.DiscardUnknown(m)
}

var xxx_messageInfo_FibShFrrNhinfo proto.InternalMessageInfo

func (m *FibShFrrNhinfo) GetSiFrrtype() uint32 {
	if m != nil {
		return m.SiFrrtype
	}
	return 0
}

func (m *FibShFrrNhinfo) GetSiRefcount() uint32 {
	if m != nil {
		return m.SiRefcount
	}
	return 0
}

func (m *FibShFrrNhinfo) GetSiFlags() uint32 {
	if m != nil {
		return m.SiFlags
	}
	return 0
}

func (m *FibShFrrNhinfo) GetSiIfh() uint32 {
	if m != nil {
		return m.SiIfh
	}
	return 0
}

func (m *FibShFrrNhinfo) GetSiMainIfh() uint32 {
	if m != nil {
		return m.SiMainIfh
	}
	return 0
}

func (m *FibShFrrNhinfo) GetSiLinktype() uint32 {
	if m != nil {
		return m.SiLinktype
	}
	return 0
}

func (m *FibShFrrNhinfo) GetSiNhPfxProto() uint32 {
	if m != nil {
		return m.SiNhPfxProto
	}
	return 0
}

func (m *FibShFrrNhinfo) GetSiNhPfx() []uint32 {
	if m != nil {
		return m.SiNhPfx
	}
	return nil
}

func (m *FibShFrrNhinfo) GetSiNhPfxLen() uint32 {
	if m != nil {
		return m.SiNhPfxLen
	}
	return 0
}

func (m *FibShFrrNhinfo) GetSiTunid() uint32 {
	if m != nil {
		return m.SiTunid
	}
	return 0
}

func (m *FibShFrrNhinfo) GetSiFrrPtr() uint32 {
	if m != nil {
		return m.SiFrrPtr
	}
	return 0
}

func (m *FibShFrrNhinfo) GetSiProtFrrPtr() uint32 {
	if m != nil {
		return m.SiProtFrrPtr
	}
	return 0
}

func (m *FibShFrrNhinfo) GetSiParentNhPtr() uint32 {
	if m != nil {
		return m.SiParentNhPtr
	}
	return 0
}

func (m *FibShFrrNhinfo) GetSiReplParentType() uint32 {
	if m != nil {
		return m.SiReplParentType
	}
	return 0
}

func (m *FibShFrrNhinfo) GetSiUpdTs() uint64 {
	if m != nil {
		return m.SiUpdTs
	}
	return 0
}

func init() {
	proto.RegisterType((*FibShFrrNhinfo_KEYS)(nil), "cisco_ios_xr_fib_common_oper.fib.nodes.node.protocols.protocol.frr_nhinfo_pendings.frr_nhinfo_pending.fib_sh_frr_nhinfo_KEYS")
	proto.RegisterType((*FibShFrrNhinfo)(nil), "cisco_ios_xr_fib_common_oper.fib.nodes.node.protocols.protocol.frr_nhinfo_pendings.frr_nhinfo_pending.fib_sh_frr_nhinfo")
}

func init() { proto.RegisterFile("fib_sh_frr_nhinfo.proto", fileDescriptor_e259d403394d3928) }

var fileDescriptor_e259d403394d3928 = []byte{
	// 571 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x92, 0xcb, 0x6f, 0x13, 0x31,
	0x10, 0xc6, 0x15, 0xfa, 0x4a, 0x4c, 0x43, 0x5b, 0x57, 0x80, 0x79, 0x87, 0xa2, 0x42, 0x0f, 0x90,
	0x03, 0xe5, 0xfd, 0xbe, 0x50, 0x51, 0x51, 0xa2, 0xa8, 0x94, 0x03, 0x27, 0x6b, 0xbb, 0x6b, 0xd7,
	0x23, 0x36, 0xb6, 0xb1, 0x1d, 0x29, 0xbd, 0x71, 0xe1, 0xff, 0x46, 0x33, 0xde, 0x4d, 0x05, 0xe5,
	0x12, 0x65, 0xbf, 0xf9, 0x79, 0xbe, 0x6f, 0xc6, 0x66, 0x57, 0x35, 0x1c, 0xcb, 0x68, 0xa4, 0x0e,
	0x41, 0x5a, 0x03, 0x56, 0xbb, 0xa1, 0x0f, 0x2e, 0x39, 0xae, 0x4a, 0x88, 0xa5, 0x93, 0xe0, 0xa2,
	0x9c, 0x05, 0x89, 0x54, 0xe9, 0x26, 0x13, 0x67, 0xa5, 0xf3, 0x2a, 0x0c, 0x35, 0x1c, 0x0f, 0xad,
	0xab, 0x54, 0xa4, 0xdf, 0x7c, 0xa4, 0x74, 0x75, 0x9c, 0xff, 0x1b, 0x9e, 0x35, 0x94, 0x5e, 0xd9,
	0x0a, 0xec, 0x49, 0xfc, 0x8f, 0xb6, 0xf5, 0x7b, 0x81, 0x5d, 0x39, 0x17, 0x41, 0x7e, 0xfe, 0xf8,
	0xfd, 0x2b, 0xbf, 0xc1, 0x7a, 0xd8, 0x5c, 0xda, 0x62, 0xa2, 0x44, 0x67, 0xd0, 0xd9, 0xe9, 0x1d,
	0x76, 0x51, 0x18, 0x15, 0x13, 0xc5, 0xef, 0xb1, 0x7e, 0x6b, 0x95, 0x81, 0x0b, 0x04, 0xac, 0xb6,
	0x22, 0x41, 0x77, 0xd8, 0xc5, 0x9f, 0x53, 0x35, 0x55, 0x12, 0x6c, 0xa5, 0x66, 0x62, 0x61, 0xd0,
	0xd9, 0xe9, 0x1f, 0x32, 0x92, 0xf6, 0x51, 0xe1, 0xd7, 0x58, 0x17, 0x5d, 0xd3, 0xa9, 0x57, 0x62,
	0x91, 0x1a, 0xac, 0xe8, 0x10, 0x8e, 0x4e, 0xbd, 0x42, 0xf7, 0x1a, 0xec, 0x8f, 0x5c, 0x5b, 0xca,
	0xee, 0x28, 0x50, 0x91, 0xdc, 0x95, 0x86, 0x99, 0xac, 0x95, 0x3d, 0x49, 0x46, 0x2c, 0x53, 0xeb,
	0xd5, 0x2c, 0x1e, 0x90, 0xc6, 0xb7, 0xd9, 0x25, 0xb0, 0x49, 0x05, 0x5d, 0x94, 0xcd, 0x10, 0x2b,
	0xd4, 0xa6, 0x3f, 0x57, 0x29, 0xe4, 0x90, 0x6d, 0x4e, 0x0a, 0xb0, 0xf2, 0x1f, 0xb6, 0x4b, 0xec,
	0x06, 0x96, 0xf6, 0xff, 0xe2, 0xef, 0xb3, 0x35, 0xab, 0x66, 0x49, 0x1a, 0xe7, 0x65, 0xf6, 0x13,
	0xbd, 0xdc, 0x17, 0xe5, 0x4f, 0xce, 0x8f, 0x49, 0xe4, 0x0f, 0x19, 0x0f, 0xca, 0xd7, 0x50, 0x16,
	0x49, 0x55, 0xd2, 0x9a, 0x3c, 0x09, 0x23, 0x74, 0xfd, 0xac, 0x32, 0x32, 0x38, 0xd1, 0xd6, 0xaf,
	0x45, 0xb6, 0x71, 0xee, 0x1e, 0xf8, 0x2d, 0xc6, 0x22, 0xa0, 0x40, 0x67, 0x1f, 0xd3, 0x90, 0xbd,
	0x08, 0x7b, 0x59, 0xc0, 0xfd, 0x46, 0x90, 0x41, 0xe9, 0xd2, 0x4d, 0x6d, 0x12, 0xbb, 0x79, 0xbf,
	0x11, 0x0e, 0x1b, 0x05, 0xf7, 0x8b, 0xe7, 0xeb, 0xe2, 0x24, 0x8a, 0x27, 0x54, 0x5d, 0x89, 0xb0,
	0x87, 0x9f, 0xfc, 0x32, 0x5b, 0x8e, 0x20, 0x41, 0x1b, 0xf1, 0x94, 0x0a, 0x4b, 0x11, 0xf6, 0xb5,
	0xe1, 0xb7, 0xa9, 0x65, 0x5e, 0x88, 0x36, 0xe2, 0x59, 0x6b, 0xf9, 0x05, 0xf7, 0xa0, 0x4d, 0x63,
	0x89, 0x17, 0x41, 0x91, 0x9e, 0xb7, 0x96, 0x07, 0x8d, 0xc2, 0xb7, 0xd9, 0x5a, 0x04, 0x1c, 0xd7,
	0xeb, 0x99, 0xa4, 0xd7, 0x20, 0x5e, 0xe4, 0xcb, 0x89, 0x30, 0x32, 0x63, 0x3d, 0x1b, 0xd3, 0xf3,
	0xbe, 0xce, 0x7a, 0x73, 0x4c, 0xbc, 0x1c, 0x2c, 0xe4, 0x68, 0x04, 0xf0, 0xbb, 0xac, 0x7f, 0xd6,
	0xa2, 0x56, 0x56, 0xbc, 0x6a, 0x5d, 0xa8, 0x7e, 0xa0, 0x6c, 0x33, 0x58, 0x9a, 0x5a, 0xa8, 0xc4,
	0xeb, 0x76, 0xb0, 0x23, 0xfc, 0xe4, 0x37, 0xdb, 0x9d, 0x49, 0x9f, 0x82, 0x78, 0x43, 0xc5, 0x2e,
	0xed, 0x6c, 0x9c, 0x42, 0x13, 0x0f, 0x73, 0xcd, 0x91, 0xb7, 0x6d, 0x3c, 0x4c, 0xd6, 0x60, 0x0f,
	0xd8, 0x3a, 0x62, 0x45, 0x50, 0x36, 0x51, 0x92, 0x14, 0xc4, 0x3b, 0xe2, 0xfa, 0x11, 0xc6, 0x24,
	0x8f, 0x0c, 0x82, 0x8f, 0xd8, 0x26, 0x5d, 0x81, 0xaf, 0x5b, 0x9a, 0xf6, 0xf2, 0x9e, 0xd8, 0x75,
	0xbc, 0x0a, 0x5f, 0x67, 0x9e, 0x1e, 0x6e, 0x1e, 0x7b, 0xea, 0x2b, 0x99, 0xa2, 0xf8, 0x30, 0xe8,
	0xec, 0x2c, 0x62, 0xf0, 0x6f, 0xbe, 0x3a, 0x8a, 0xc7, 0xcb, 0xb4, 0xad, 0xdd, 0x3f, 0x01, 0x00,
	0x00, 0xff, 0xff, 0x38, 0xa4, 0x83, 0xe4, 0x13, 0x04, 0x00, 0x00,
}
