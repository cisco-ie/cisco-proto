/*
Copyright 2019 Cisco Systems

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: fib_sh_nhid_entry.proto

package cisco_ios_xr_fib_common_oper_fib_nodes_node_protocols_protocol_nh_ids_nh_id

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type FibShNhidEntry_KEYS struct {
	NodeName             string   `protobuf:"bytes,1,opt,name=node_name,json=nodeName,proto3" json:"node_name,omitempty"`
	ProtocolName         string   `protobuf:"bytes,2,opt,name=protocol_name,json=protocolName,proto3" json:"protocol_name,omitempty"`
	NhId                 uint32   `protobuf:"varint,3,opt,name=nh_id,json=nhId,proto3" json:"nh_id,omitempty"`
	NhInterfaceName      string   `protobuf:"bytes,4,opt,name=nh_interface_name,json=nhInterfaceName,proto3" json:"nh_interface_name,omitempty"`
	NhAddress            string   `protobuf:"bytes,5,opt,name=nh_address,json=nhAddress,proto3" json:"nh_address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FibShNhidEntry_KEYS) Reset()         { *m = FibShNhidEntry_KEYS{} }
func (m *FibShNhidEntry_KEYS) String() string { return proto.CompactTextString(m) }
func (*FibShNhidEntry_KEYS) ProtoMessage()    {}
func (*FibShNhidEntry_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_996471368c992c45, []int{0}
}

func (m *FibShNhidEntry_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FibShNhidEntry_KEYS.Unmarshal(m, b)
}
func (m *FibShNhidEntry_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FibShNhidEntry_KEYS.Marshal(b, m, deterministic)
}
func (m *FibShNhidEntry_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FibShNhidEntry_KEYS.Merge(m, src)
}
func (m *FibShNhidEntry_KEYS) XXX_Size() int {
	return xxx_messageInfo_FibShNhidEntry_KEYS.Size(m)
}
func (m *FibShNhidEntry_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_FibShNhidEntry_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_FibShNhidEntry_KEYS proto.InternalMessageInfo

func (m *FibShNhidEntry_KEYS) GetNodeName() string {
	if m != nil {
		return m.NodeName
	}
	return ""
}

func (m *FibShNhidEntry_KEYS) GetProtocolName() string {
	if m != nil {
		return m.ProtocolName
	}
	return ""
}

func (m *FibShNhidEntry_KEYS) GetNhId() uint32 {
	if m != nil {
		return m.NhId
	}
	return 0
}

func (m *FibShNhidEntry_KEYS) GetNhInterfaceName() string {
	if m != nil {
		return m.NhInterfaceName
	}
	return ""
}

func (m *FibShNhidEntry_KEYS) GetNhAddress() string {
	if m != nil {
		return m.NhAddress
	}
	return ""
}

type FibShNhidEntry struct {
	NhInterfaceNameXr      string   `protobuf:"bytes,50,opt,name=nh_interface_name_xr,json=nhInterfaceNameXr,proto3" json:"nh_interface_name_xr,omitempty"`
	NhAddressXr            string   `protobuf:"bytes,51,opt,name=nh_address_xr,json=nhAddressXr,proto3" json:"nh_address_xr,omitempty"`
	NhProtocol             uint32   `protobuf:"varint,52,opt,name=nh_protocol,json=nhProtocol,proto3" json:"nh_protocol,omitempty"`
	NhLinkType             uint32   `protobuf:"varint,53,opt,name=nh_link_type,json=nhLinkType,proto3" json:"nh_link_type,omitempty"`
	NhTableId              uint32   `protobuf:"varint,54,opt,name=nh_table_id,json=nhTableId,proto3" json:"nh_table_id,omitempty"`
	NhIdXr                 uint32   `protobuf:"varint,55,opt,name=nh_id_xr,json=nhIdXr,proto3" json:"nh_id_xr,omitempty"`
	NhIdApplication        uint32   `protobuf:"varint,56,opt,name=nh_id_application,json=nhIdApplication,proto3" json:"nh_id_application,omitempty"`
	Version                uint64   `protobuf:"varint,57,opt,name=version,proto3" json:"version,omitempty"`
	TimeOfLastUpdateInMsec uint64   `protobuf:"varint,58,opt,name=time_of_last_update_in_msec,json=timeOfLastUpdateInMsec,proto3" json:"time_of_last_update_in_msec,omitempty"`
	XXX_NoUnkeyedLiteral   struct{} `json:"-"`
	XXX_unrecognized       []byte   `json:"-"`
	XXX_sizecache          int32    `json:"-"`
}

func (m *FibShNhidEntry) Reset()         { *m = FibShNhidEntry{} }
func (m *FibShNhidEntry) String() string { return proto.CompactTextString(m) }
func (*FibShNhidEntry) ProtoMessage()    {}
func (*FibShNhidEntry) Descriptor() ([]byte, []int) {
	return fileDescriptor_996471368c992c45, []int{1}
}

func (m *FibShNhidEntry) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FibShNhidEntry.Unmarshal(m, b)
}
func (m *FibShNhidEntry) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FibShNhidEntry.Marshal(b, m, deterministic)
}
func (m *FibShNhidEntry) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FibShNhidEntry.Merge(m, src)
}
func (m *FibShNhidEntry) XXX_Size() int {
	return xxx_messageInfo_FibShNhidEntry.Size(m)
}
func (m *FibShNhidEntry) XXX_DiscardUnknown() {
	xxx_messageInfo_FibShNhidEntry.DiscardUnknown(m)
}

var xxx_messageInfo_FibShNhidEntry proto.InternalMessageInfo

func (m *FibShNhidEntry) GetNhInterfaceNameXr() string {
	if m != nil {
		return m.NhInterfaceNameXr
	}
	return ""
}

func (m *FibShNhidEntry) GetNhAddressXr() string {
	if m != nil {
		return m.NhAddressXr
	}
	return ""
}

func (m *FibShNhidEntry) GetNhProtocol() uint32 {
	if m != nil {
		return m.NhProtocol
	}
	return 0
}

func (m *FibShNhidEntry) GetNhLinkType() uint32 {
	if m != nil {
		return m.NhLinkType
	}
	return 0
}

func (m *FibShNhidEntry) GetNhTableId() uint32 {
	if m != nil {
		return m.NhTableId
	}
	return 0
}

func (m *FibShNhidEntry) GetNhIdXr() uint32 {
	if m != nil {
		return m.NhIdXr
	}
	return 0
}

func (m *FibShNhidEntry) GetNhIdApplication() uint32 {
	if m != nil {
		return m.NhIdApplication
	}
	return 0
}

func (m *FibShNhidEntry) GetVersion() uint64 {
	if m != nil {
		return m.Version
	}
	return 0
}

func (m *FibShNhidEntry) GetTimeOfLastUpdateInMsec() uint64 {
	if m != nil {
		return m.TimeOfLastUpdateInMsec
	}
	return 0
}

func init() {
	proto.RegisterType((*FibShNhidEntry_KEYS)(nil), "cisco_ios_xr_fib_common_oper.fib.nodes.node.protocols.protocol.nh_ids.nh_id.fib_sh_nhid_entry_KEYS")
	proto.RegisterType((*FibShNhidEntry)(nil), "cisco_ios_xr_fib_common_oper.fib.nodes.node.protocols.protocol.nh_ids.nh_id.fib_sh_nhid_entry")
}

func init() { proto.RegisterFile("fib_sh_nhid_entry.proto", fileDescriptor_996471368c992c45) }

var fileDescriptor_996471368c992c45 = []byte{
	// 413 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x64, 0x90, 0xcd, 0x6e, 0x13, 0x31,
	0x14, 0x85, 0x35, 0x25, 0x2d, 0xcd, 0x6d, 0x23, 0x14, 0x83, 0x8a, 0xa5, 0x0a, 0x88, 0xc2, 0x26,
	0x62, 0x11, 0x24, 0xca, 0x3f, 0xab, 0x2e, 0x58, 0x44, 0x2d, 0x3f, 0x0a, 0x45, 0x0a, 0xab, 0x2b,
	0x67, 0xec, 0x91, 0xad, 0xce, 0x5c, 0x8f, 0x6c, 0x83, 0x9a, 0x57, 0xe3, 0x89, 0x78, 0x0c, 0xe4,
	0x3b, 0x9d, 0x56, 0x6a, 0x36, 0xf3, 0x73, 0xfc, 0xdd, 0x73, 0x7c, 0x0f, 0x3c, 0xae, 0xdc, 0x1a,
	0xa3, 0x45, 0xb2, 0x4e, 0xa3, 0xa1, 0x14, 0x36, 0xf3, 0x36, 0xf8, 0xe4, 0xc5, 0x59, 0xe9, 0x62,
	0xe9, 0xd1, 0xf9, 0x88, 0x57, 0x01, 0x33, 0x55, 0xfa, 0xa6, 0xf1, 0x84, 0xbe, 0x35, 0x61, 0x5e,
	0xb9, 0xf5, 0x9c, 0xbc, 0x36, 0x91, 0x9f, 0xdd, 0x48, 0xe9, 0xeb, 0x78, 0xf3, 0x35, 0x27, 0x8b,
	0x4e, 0xc7, 0xee, 0x35, 0xfd, 0x5b, 0xc0, 0xd1, 0x56, 0x10, 0x9e, 0x7d, 0xfe, 0xf5, 0x43, 0x1c,
	0xc3, 0x30, 0x5b, 0x20, 0xa9, 0xc6, 0xc8, 0x62, 0x52, 0xcc, 0x86, 0xcb, 0xfd, 0x2c, 0x7c, 0x55,
	0x8d, 0x11, 0xcf, 0x61, 0xd4, 0x1b, 0x76, 0xc0, 0x0e, 0x03, 0x87, 0xbd, 0xc8, 0xd0, 0x43, 0xd8,
	0xe5, 0x14, 0x79, 0x6f, 0x52, 0xcc, 0x46, 0xcb, 0x01, 0xd9, 0x85, 0x16, 0x2f, 0x60, 0x9c, 0x45,
	0x4a, 0x26, 0x54, 0xaa, 0xbc, 0xb6, 0x1f, 0xf0, 0xf4, 0x03, 0xb2, 0x8b, 0x5e, 0x67, 0x83, 0x27,
	0x00, 0x64, 0x51, 0x69, 0x1d, 0x4c, 0x8c, 0x72, 0x97, 0xa1, 0x21, 0xd9, 0xd3, 0x4e, 0x98, 0xfe,
	0xdb, 0x81, 0xf1, 0xd6, 0xe5, 0xc5, 0x4b, 0x78, 0xb4, 0x15, 0x80, 0x57, 0x41, 0xbe, 0xe2, 0xf1,
	0xf1, 0x9d, 0x8c, 0x55, 0x10, 0x53, 0x18, 0xdd, 0xa6, 0x64, 0xf2, 0x84, 0xc9, 0x83, 0x9b, 0xa0,
	0x55, 0x10, 0xcf, 0xe0, 0x80, 0x2c, 0xf6, 0xdb, 0xc9, 0xd7, 0xbc, 0x10, 0x90, 0xfd, 0x7e, 0xad,
	0x88, 0x09, 0x1c, 0x92, 0xc5, 0xda, 0xd1, 0x25, 0xa6, 0x4d, 0x6b, 0xe4, 0x9b, 0x9e, 0x38, 0x77,
	0x74, 0x79, 0xb1, 0x69, 0x8d, 0x78, 0xca, 0x16, 0x49, 0xad, 0x6b, 0x93, 0x3b, 0x79, 0xcb, 0xc0,
	0x90, 0xec, 0x45, 0x56, 0x16, 0x5a, 0x48, 0xd8, 0xe7, 0xb6, 0xf2, 0x0d, 0xde, 0xf1, 0xe1, 0x5e,
	0x2e, 0x6c, 0x15, 0xfa, 0xca, 0x34, 0xaa, 0xb6, 0xad, 0x5d, 0xa9, 0x92, 0xf3, 0x24, 0xdf, 0x33,
	0x92, 0x2b, 0xd3, 0xa7, 0xb7, 0xb2, 0x90, 0x70, 0xff, 0x8f, 0x09, 0x31, 0x13, 0x1f, 0x26, 0xc5,
	0x6c, 0xb0, 0xec, 0x7f, 0xc5, 0x27, 0x38, 0x4e, 0xae, 0x31, 0xe8, 0x2b, 0xac, 0x55, 0x4c, 0xf8,
	0xbb, 0xd5, 0x2a, 0x19, 0x74, 0x84, 0x4d, 0x34, 0xa5, 0xfc, 0xc8, 0xf4, 0x51, 0x46, 0xbe, 0x55,
	0xe7, 0x2a, 0xa6, 0x9f, 0x7c, 0xbe, 0xa0, 0x2f, 0xd1, 0x94, 0xeb, 0x3d, 0x5e, 0xfd, 0xe4, 0x7f,
	0x00, 0x00, 0x00, 0xff, 0xff, 0xaf, 0xd6, 0x32, 0xcd, 0x96, 0x02, 0x00, 0x00,
}
