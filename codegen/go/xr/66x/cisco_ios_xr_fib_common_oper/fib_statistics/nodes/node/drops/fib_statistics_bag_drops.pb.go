/*
Copyright 2019 Cisco Systems

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: fib_statistics_bag_drops.proto

package cisco_ios_xr_fib_common_oper_fib_statistics_nodes_node_drops

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type FibStatisticsBagDrops_KEYS struct {
	NodeName             string   `protobuf:"bytes,1,opt,name=node_name,json=nodeName,proto3" json:"node_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FibStatisticsBagDrops_KEYS) Reset()         { *m = FibStatisticsBagDrops_KEYS{} }
func (m *FibStatisticsBagDrops_KEYS) String() string { return proto.CompactTextString(m) }
func (*FibStatisticsBagDrops_KEYS) ProtoMessage()    {}
func (*FibStatisticsBagDrops_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_25c56793b009fdce, []int{0}
}

func (m *FibStatisticsBagDrops_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FibStatisticsBagDrops_KEYS.Unmarshal(m, b)
}
func (m *FibStatisticsBagDrops_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FibStatisticsBagDrops_KEYS.Marshal(b, m, deterministic)
}
func (m *FibStatisticsBagDrops_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FibStatisticsBagDrops_KEYS.Merge(m, src)
}
func (m *FibStatisticsBagDrops_KEYS) XXX_Size() int {
	return xxx_messageInfo_FibStatisticsBagDrops_KEYS.Size(m)
}
func (m *FibStatisticsBagDrops_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_FibStatisticsBagDrops_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_FibStatisticsBagDrops_KEYS proto.InternalMessageInfo

func (m *FibStatisticsBagDrops_KEYS) GetNodeName() string {
	if m != nil {
		return m.NodeName
	}
	return ""
}

type FibStatisticsBagDrops struct {
	NoRoutePackets              uint64   `protobuf:"varint,50,opt,name=no_route_packets,json=noRoutePackets,proto3" json:"no_route_packets,omitempty"`
	PuntUnreachablePackets      uint64   `protobuf:"varint,51,opt,name=punt_unreachable_packets,json=puntUnreachablePackets,proto3" json:"punt_unreachable_packets,omitempty"`
	DfUnreachablePackets        uint64   `protobuf:"varint,52,opt,name=df_unreachable_packets,json=dfUnreachablePackets,proto3" json:"df_unreachable_packets,omitempty"`
	EncapsulationFailurePackets uint64   `protobuf:"varint,53,opt,name=encapsulation_failure_packets,json=encapsulationFailurePackets,proto3" json:"encapsulation_failure_packets,omitempty"`
	IncompleteAdjacencyPackets  uint64   `protobuf:"varint,54,opt,name=incomplete_adjacency_packets,json=incompleteAdjacencyPackets,proto3" json:"incomplete_adjacency_packets,omitempty"`
	UnresolvedPrefixPackets     uint64   `protobuf:"varint,55,opt,name=unresolved_prefix_packets,json=unresolvedPrefixPackets,proto3" json:"unresolved_prefix_packets,omitempty"`
	UnsupportedFeaturePackets   uint64   `protobuf:"varint,56,opt,name=unsupported_feature_packets,json=unsupportedFeaturePackets,proto3" json:"unsupported_feature_packets,omitempty"`
	DiscardPackets              uint64   `protobuf:"varint,57,opt,name=discard_packets,json=discardPackets,proto3" json:"discard_packets,omitempty"`
	ChecksumErrorPackets        uint64   `protobuf:"varint,58,opt,name=checksum_error_packets,json=checksumErrorPackets,proto3" json:"checksum_error_packets,omitempty"`
	FragmenationConsumedPackets uint64   `protobuf:"varint,59,opt,name=fragmenation_consumed_packets,json=fragmenationConsumedPackets,proto3" json:"fragmenation_consumed_packets,omitempty"`
	FragmenationFailurePackets  uint64   `protobuf:"varint,60,opt,name=fragmenation_failure_packets,json=fragmenationFailurePackets,proto3" json:"fragmenation_failure_packets,omitempty"`
	NullPackets                 uint64   `protobuf:"varint,61,opt,name=null_packets,json=nullPackets,proto3" json:"null_packets,omitempty"`
	RpfCheckFailurePackets      uint64   `protobuf:"varint,62,opt,name=rpf_check_failure_packets,json=rpfCheckFailurePackets,proto3" json:"rpf_check_failure_packets,omitempty"`
	AclInRpfPackets             uint64   `protobuf:"varint,63,opt,name=acl_in_rpf_packets,json=aclInRpfPackets,proto3" json:"acl_in_rpf_packets,omitempty"`
	RpDestinationDropPackets    uint64   `protobuf:"varint,64,opt,name=rp_destination_drop_packets,json=rpDestinationDropPackets,proto3" json:"rp_destination_drop_packets,omitempty"`
	TotalNumberOfDropPackets    uint64   `protobuf:"varint,65,opt,name=total_number_of_drop_packets,json=totalNumberOfDropPackets,proto3" json:"total_number_of_drop_packets,omitempty"`
	MplsDisabledInterface       uint64   `protobuf:"varint,66,opt,name=mpls_disabled_interface,json=mplsDisabledInterface,proto3" json:"mpls_disabled_interface,omitempty"`
	GreLookupFailedDrop         uint64   `protobuf:"varint,67,opt,name=gre_lookup_failed_drop,json=greLookupFailedDrop,proto3" json:"gre_lookup_failed_drop,omitempty"`
	GreErrorDrop                uint64   `protobuf:"varint,68,opt,name=gre_error_drop,json=greErrorDrop,proto3" json:"gre_error_drop,omitempty"`
	LispPuntDrops               uint64   `protobuf:"varint,69,opt,name=lisp_punt_drops,json=lispPuntDrops,proto3" json:"lisp_punt_drops,omitempty"`
	LispEncapErrorDrops         uint64   `protobuf:"varint,70,opt,name=lisp_encap_error_drops,json=lispEncapErrorDrops,proto3" json:"lisp_encap_error_drops,omitempty"`
	LispDecapErrorDrops         uint64   `protobuf:"varint,71,opt,name=lisp_decap_error_drops,json=lispDecapErrorDrops,proto3" json:"lisp_decap_error_drops,omitempty"`
	MultiLabelDrops             uint64   `protobuf:"varint,72,opt,name=multi_label_drops,json=multiLabelDrops,proto3" json:"multi_label_drops,omitempty"`
	UnreachableSrLabelDrops     uint64   `protobuf:"varint,73,opt,name=unreachable_sr_label_drops,json=unreachableSrLabelDrops,proto3" json:"unreachable_sr_label_drops,omitempty"`
	TtlExpiredSrLabelDrops      uint64   `protobuf:"varint,74,opt,name=ttl_expired_sr_label_drops,json=ttlExpiredSrLabelDrops,proto3" json:"ttl_expired_sr_label_drops,omitempty"`
	XXX_NoUnkeyedLiteral        struct{} `json:"-"`
	XXX_unrecognized            []byte   `json:"-"`
	XXX_sizecache               int32    `json:"-"`
}

func (m *FibStatisticsBagDrops) Reset()         { *m = FibStatisticsBagDrops{} }
func (m *FibStatisticsBagDrops) String() string { return proto.CompactTextString(m) }
func (*FibStatisticsBagDrops) ProtoMessage()    {}
func (*FibStatisticsBagDrops) Descriptor() ([]byte, []int) {
	return fileDescriptor_25c56793b009fdce, []int{1}
}

func (m *FibStatisticsBagDrops) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FibStatisticsBagDrops.Unmarshal(m, b)
}
func (m *FibStatisticsBagDrops) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FibStatisticsBagDrops.Marshal(b, m, deterministic)
}
func (m *FibStatisticsBagDrops) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FibStatisticsBagDrops.Merge(m, src)
}
func (m *FibStatisticsBagDrops) XXX_Size() int {
	return xxx_messageInfo_FibStatisticsBagDrops.Size(m)
}
func (m *FibStatisticsBagDrops) XXX_DiscardUnknown() {
	xxx_messageInfo_FibStatisticsBagDrops.DiscardUnknown(m)
}

var xxx_messageInfo_FibStatisticsBagDrops proto.InternalMessageInfo

func (m *FibStatisticsBagDrops) GetNoRoutePackets() uint64 {
	if m != nil {
		return m.NoRoutePackets
	}
	return 0
}

func (m *FibStatisticsBagDrops) GetPuntUnreachablePackets() uint64 {
	if m != nil {
		return m.PuntUnreachablePackets
	}
	return 0
}

func (m *FibStatisticsBagDrops) GetDfUnreachablePackets() uint64 {
	if m != nil {
		return m.DfUnreachablePackets
	}
	return 0
}

func (m *FibStatisticsBagDrops) GetEncapsulationFailurePackets() uint64 {
	if m != nil {
		return m.EncapsulationFailurePackets
	}
	return 0
}

func (m *FibStatisticsBagDrops) GetIncompleteAdjacencyPackets() uint64 {
	if m != nil {
		return m.IncompleteAdjacencyPackets
	}
	return 0
}

func (m *FibStatisticsBagDrops) GetUnresolvedPrefixPackets() uint64 {
	if m != nil {
		return m.UnresolvedPrefixPackets
	}
	return 0
}

func (m *FibStatisticsBagDrops) GetUnsupportedFeaturePackets() uint64 {
	if m != nil {
		return m.UnsupportedFeaturePackets
	}
	return 0
}

func (m *FibStatisticsBagDrops) GetDiscardPackets() uint64 {
	if m != nil {
		return m.DiscardPackets
	}
	return 0
}

func (m *FibStatisticsBagDrops) GetChecksumErrorPackets() uint64 {
	if m != nil {
		return m.ChecksumErrorPackets
	}
	return 0
}

func (m *FibStatisticsBagDrops) GetFragmenationConsumedPackets() uint64 {
	if m != nil {
		return m.FragmenationConsumedPackets
	}
	return 0
}

func (m *FibStatisticsBagDrops) GetFragmenationFailurePackets() uint64 {
	if m != nil {
		return m.FragmenationFailurePackets
	}
	return 0
}

func (m *FibStatisticsBagDrops) GetNullPackets() uint64 {
	if m != nil {
		return m.NullPackets
	}
	return 0
}

func (m *FibStatisticsBagDrops) GetRpfCheckFailurePackets() uint64 {
	if m != nil {
		return m.RpfCheckFailurePackets
	}
	return 0
}

func (m *FibStatisticsBagDrops) GetAclInRpfPackets() uint64 {
	if m != nil {
		return m.AclInRpfPackets
	}
	return 0
}

func (m *FibStatisticsBagDrops) GetRpDestinationDropPackets() uint64 {
	if m != nil {
		return m.RpDestinationDropPackets
	}
	return 0
}

func (m *FibStatisticsBagDrops) GetTotalNumberOfDropPackets() uint64 {
	if m != nil {
		return m.TotalNumberOfDropPackets
	}
	return 0
}

func (m *FibStatisticsBagDrops) GetMplsDisabledInterface() uint64 {
	if m != nil {
		return m.MplsDisabledInterface
	}
	return 0
}

func (m *FibStatisticsBagDrops) GetGreLookupFailedDrop() uint64 {
	if m != nil {
		return m.GreLookupFailedDrop
	}
	return 0
}

func (m *FibStatisticsBagDrops) GetGreErrorDrop() uint64 {
	if m != nil {
		return m.GreErrorDrop
	}
	return 0
}

func (m *FibStatisticsBagDrops) GetLispPuntDrops() uint64 {
	if m != nil {
		return m.LispPuntDrops
	}
	return 0
}

func (m *FibStatisticsBagDrops) GetLispEncapErrorDrops() uint64 {
	if m != nil {
		return m.LispEncapErrorDrops
	}
	return 0
}

func (m *FibStatisticsBagDrops) GetLispDecapErrorDrops() uint64 {
	if m != nil {
		return m.LispDecapErrorDrops
	}
	return 0
}

func (m *FibStatisticsBagDrops) GetMultiLabelDrops() uint64 {
	if m != nil {
		return m.MultiLabelDrops
	}
	return 0
}

func (m *FibStatisticsBagDrops) GetUnreachableSrLabelDrops() uint64 {
	if m != nil {
		return m.UnreachableSrLabelDrops
	}
	return 0
}

func (m *FibStatisticsBagDrops) GetTtlExpiredSrLabelDrops() uint64 {
	if m != nil {
		return m.TtlExpiredSrLabelDrops
	}
	return 0
}

func init() {
	proto.RegisterType((*FibStatisticsBagDrops_KEYS)(nil), "cisco_ios_xr_fib_common_oper.fib_statistics.nodes.node.drops.fib_statistics_bag_drops_KEYS")
	proto.RegisterType((*FibStatisticsBagDrops)(nil), "cisco_ios_xr_fib_common_oper.fib_statistics.nodes.node.drops.fib_statistics_bag_drops")
}

func init() { proto.RegisterFile("fib_statistics_bag_drops.proto", fileDescriptor_25c56793b009fdce) }

var fileDescriptor_25c56793b009fdce = []byte{
	// 704 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x94, 0x5b, 0x4f, 0x1b, 0x39,
	0x14, 0xc7, 0x85, 0xb4, 0x5a, 0x2d, 0x5e, 0x16, 0x76, 0xb3, 0xbb, 0x61, 0x20, 0xb0, 0x62, 0x51,
	0xd5, 0xa2, 0x56, 0xca, 0x43, 0x43, 0x29, 0xf7, 0x72, 0x49, 0xd2, 0xd2, 0x22, 0x8a, 0x82, 0xfa,
	0xd0, 0x27, 0xcb, 0xf1, 0x9c, 0x09, 0x2e, 0x1e, 0xdb, 0xb2, 0x3d, 0x15, 0xfd, 0xd4, 0xfd, 0x0a,
	0x95, 0x8f, 0x33, 0x99, 0x49, 0x0a, 0x2f, 0x79, 0x38, 0xff, 0xdf, 0xef, 0x78, 0x72, 0x7c, 0x21,
	0xff, 0x65, 0x62, 0x48, 0x9d, 0x67, 0x5e, 0x38, 0x2f, 0xb8, 0xa3, 0x43, 0x36, 0xa2, 0xa9, 0xd5,
	0xc6, 0xb5, 0x8d, 0xd5, 0x5e, 0x37, 0x0e, 0xb9, 0x70, 0x5c, 0x53, 0xa1, 0x1d, 0xbd, 0xb7, 0x34,
	0xc0, 0x5c, 0xe7, 0xb9, 0x56, 0x54, 0x1b, 0xb0, 0xed, 0x69, 0xb9, 0xad, 0x74, 0x0a, 0xf1, 0xb7,
	0x8d, 0x3d, 0x36, 0x0f, 0xc9, 0xfa, 0x63, 0xfd, 0xe9, 0x87, 0xde, 0xe7, 0x9b, 0x46, 0x8b, 0xcc,
	0x07, 0x9c, 0x2a, 0x96, 0x43, 0x32, 0xb7, 0x31, 0xb7, 0x35, 0x3f, 0xf8, 0x2d, 0x14, 0xae, 0x58,
	0x0e, 0x9b, 0xdf, 0x09, 0x49, 0x1e, 0xd3, 0x1b, 0x5b, 0xe4, 0x4f, 0xa5, 0xa9, 0xd5, 0x85, 0x07,
	0x6a, 0x18, 0xbf, 0x03, 0xef, 0x92, 0x97, 0x1b, 0x73, 0x5b, 0xbf, 0x0c, 0x16, 0x95, 0x1e, 0x84,
	0xf2, 0x75, 0xac, 0x36, 0x76, 0x49, 0x62, 0x0a, 0xe5, 0x69, 0xa1, 0x2c, 0x30, 0x7e, 0xcb, 0x86,
	0xb2, 0x32, 0x3a, 0x68, 0x34, 0x43, 0xfe, 0xa9, 0x8a, 0x4b, 0x73, 0x9b, 0x34, 0xd3, 0xec, 0x41,
	0x6f, 0x1b, 0xbd, 0x7f, 0xd2, 0xec, 0x01, 0xeb, 0x8c, 0xac, 0x83, 0xe2, 0xcc, 0xb8, 0x42, 0x32,
	0x2f, 0xb4, 0xa2, 0x19, 0x13, 0xb2, 0xb0, 0x95, 0xfc, 0x0a, 0xe5, 0xd6, 0x14, 0xd4, 0x8f, 0x4c,
	0xd9, 0xe3, 0x84, 0xac, 0x09, 0xc5, 0x75, 0x6e, 0x24, 0x78, 0xa0, 0x2c, 0xfd, 0xc2, 0x38, 0x28,
	0xfe, 0x6d, 0xd2, 0x62, 0x07, 0x5b, 0xac, 0x56, 0xcc, 0x69, 0x89, 0x94, 0x1d, 0xf6, 0xc9, 0x4a,
	0xf8, 0x70, 0xa7, 0xe5, 0x57, 0x48, 0xa9, 0xb1, 0x90, 0x89, 0xfb, 0x89, 0xfe, 0x1a, 0xf5, 0xe5,
	0x0a, 0xb8, 0xc6, 0xbc, 0x74, 0x8f, 0x49, 0xab, 0x50, 0xae, 0x30, 0x46, 0x5b, 0x0f, 0x29, 0xcd,
	0x80, 0xf9, 0xfa, 0xf7, 0xef, 0xa2, 0xbd, 0x52, 0x43, 0xfa, 0x91, 0x28, 0xfd, 0x67, 0x64, 0x29,
	0x15, 0x8e, 0x33, 0x9b, 0x4e, 0x9c, 0xbd, 0xb8, 0x35, 0xe3, 0x72, 0x6d, 0xc0, 0xfc, 0x16, 0xf8,
	0x9d, 0x2b, 0x72, 0x0a, 0xd6, 0x6a, 0x3b, 0xe1, 0xf7, 0xe3, 0x80, 0xcb, 0xb4, 0x17, 0xc2, 0xda,
	0x80, 0x33, 0xcb, 0x46, 0x39, 0xa8, 0x38, 0x5f, 0xae, 0x95, 0x2b, 0x72, 0xa8, 0x16, 0x3b, 0x88,
	0x03, 0xae, 0x43, 0xe7, 0x63, 0xa6, 0x36, 0xe0, 0xa9, 0x1e, 0xb3, 0x7b, 0x74, 0x18, 0x07, 0x5c,
	0x67, 0x66, 0xb6, 0xe8, 0x7f, 0xb2, 0xa0, 0x0a, 0x29, 0x27, 0xc6, 0x11, 0x1a, 0xbf, 0x87, 0x5a,
	0x89, 0xec, 0x91, 0x15, 0x6b, 0x32, 0x8a, 0x7f, 0xe2, 0xa7, 0x15, 0x8e, 0xe3, 0xd1, 0xb3, 0x26,
	0x3b, 0x0f, 0xf9, 0x4c, 0xf7, 0x17, 0xa4, 0xc1, 0xb8, 0xa4, 0x42, 0xd1, 0xd0, 0xa1, 0x74, 0xde,
	0xa0, 0xb3, 0xc4, 0xb8, 0xbc, 0x50, 0x03, 0x93, 0x95, 0xf0, 0x11, 0x69, 0x59, 0x43, 0x53, 0x70,
	0x5e, 0x8c, 0xff, 0x4e, 0xb8, 0x23, 0x13, 0xeb, 0x04, 0xad, 0xc4, 0x9a, 0x6e, 0x45, 0x74, 0xad,
	0x36, 0xd5, 0x76, 0xaf, 0x79, 0xed, 0x99, 0xa4, 0xaa, 0xc8, 0x87, 0x60, 0xa9, 0xce, 0xa6, 0xfd,
	0xd3, 0xe8, 0x23, 0x73, 0x85, 0xc8, 0xc7, 0xac, 0xee, 0xef, 0x90, 0xe5, 0xdc, 0x48, 0x47, 0x53,
	0xe1, 0xc2, 0x3d, 0x48, 0xa9, 0x50, 0x1e, 0x6c, 0xc6, 0x38, 0x24, 0x67, 0xa8, 0xfe, 0x1b, 0xe2,
	0xee, 0x38, 0xbd, 0x28, 0xc3, 0x46, 0x87, 0x34, 0x47, 0x16, 0xa8, 0xd4, 0xfa, 0xae, 0x30, 0x38,
	0x1f, 0x48, 0x71, 0xe5, 0xe4, 0x1c, 0xb5, 0xbf, 0x47, 0x16, 0x2e, 0x31, 0xec, 0x63, 0x16, 0xd6,
	0x6c, 0x3c, 0x21, 0x8b, 0x41, 0x8a, 0xa7, 0x05, 0xe1, 0x2e, 0xc2, 0x0b, 0x23, 0x0b, 0x78, 0x4a,
	0x90, 0x7a, 0x4a, 0x96, 0xa4, 0x70, 0x86, 0xe2, 0xc5, 0xc7, 0x07, 0x23, 0xe9, 0x21, 0xf6, 0x47,
	0x28, 0x5f, 0x17, 0xca, 0x77, 0xf1, 0x15, 0xe9, 0x90, 0x26, 0x72, 0x78, 0x17, 0x6b, 0x4d, 0x5d,
	0xd2, 0x8f, 0x9f, 0x10, 0xd2, 0x5e, 0x08, 0x27, 0xbd, 0x2b, 0x29, 0x85, 0x59, 0xe9, 0x6d, 0x25,
	0x75, 0x61, 0x5a, 0x7a, 0x4e, 0xfe, 0xca, 0x0b, 0xe9, 0x05, 0x95, 0x6c, 0x08, 0x72, 0xcc, 0xbf,
	0x8b, 0xfb, 0x89, 0xc1, 0x65, 0xa8, 0x47, 0xf6, 0x80, 0xac, 0xd6, 0x1f, 0x1d, 0x67, 0xa7, 0xa4,
	0x8b, 0xea, 0xf2, 0x8e, 0x89, 0x1b, 0x5b, 0x93, 0xf7, 0xc9, 0xaa, 0xf7, 0x92, 0xc2, 0xbd, 0x11,
	0x16, 0xd2, 0x59, 0xf9, 0x7d, 0x3c, 0x75, 0xde, 0xcb, 0x5e, 0x04, 0xea, 0xee, 0xf0, 0x57, 0x7c,
	0xf4, 0x3b, 0x3f, 0x02, 0x00, 0x00, 0xff, 0xff, 0x50, 0xeb, 0x1b, 0xf0, 0x16, 0x06, 0x00, 0x00,
}
