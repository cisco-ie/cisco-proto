/*
Copyright 2019 Cisco Systems

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: pm_mpls_ldp_bag.proto

package cisco_ios_xr_manageability_perfmgmt_oper_perf_mgmt_periodic_mpls_ldp_neighbors_ldp_neighbor_samples_sample

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type PmMplsLdpBag_KEYS struct {
	Nbr                  string   `protobuf:"bytes,1,opt,name=nbr,proto3" json:"nbr,omitempty"`
	SampleId             uint32   `protobuf:"varint,2,opt,name=sample_id,json=sampleId,proto3" json:"sample_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PmMplsLdpBag_KEYS) Reset()         { *m = PmMplsLdpBag_KEYS{} }
func (m *PmMplsLdpBag_KEYS) String() string { return proto.CompactTextString(m) }
func (*PmMplsLdpBag_KEYS) ProtoMessage()    {}
func (*PmMplsLdpBag_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_e22717b8ac374911, []int{0}
}

func (m *PmMplsLdpBag_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PmMplsLdpBag_KEYS.Unmarshal(m, b)
}
func (m *PmMplsLdpBag_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PmMplsLdpBag_KEYS.Marshal(b, m, deterministic)
}
func (m *PmMplsLdpBag_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PmMplsLdpBag_KEYS.Merge(m, src)
}
func (m *PmMplsLdpBag_KEYS) XXX_Size() int {
	return xxx_messageInfo_PmMplsLdpBag_KEYS.Size(m)
}
func (m *PmMplsLdpBag_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_PmMplsLdpBag_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_PmMplsLdpBag_KEYS proto.InternalMessageInfo

func (m *PmMplsLdpBag_KEYS) GetNbr() string {
	if m != nil {
		return m.Nbr
	}
	return ""
}

func (m *PmMplsLdpBag_KEYS) GetSampleId() uint32 {
	if m != nil {
		return m.SampleId
	}
	return 0
}

type PmMplsLdpBag struct {
	TimeStamp               uint64   `protobuf:"varint,50,opt,name=time_stamp,json=timeStamp,proto3" json:"time_stamp,omitempty"`
	TotalMsgsSent           uint32   `protobuf:"varint,51,opt,name=total_msgs_sent,json=totalMsgsSent,proto3" json:"total_msgs_sent,omitempty"`
	TotalMsgsRcvd           uint32   `protobuf:"varint,52,opt,name=total_msgs_rcvd,json=totalMsgsRcvd,proto3" json:"total_msgs_rcvd,omitempty"`
	InitMsgsSent            uint32   `protobuf:"varint,53,opt,name=init_msgs_sent,json=initMsgsSent,proto3" json:"init_msgs_sent,omitempty"`
	InitMsgsRcvd            uint32   `protobuf:"varint,54,opt,name=init_msgs_rcvd,json=initMsgsRcvd,proto3" json:"init_msgs_rcvd,omitempty"`
	AddressMsgsSent         uint32   `protobuf:"varint,55,opt,name=address_msgs_sent,json=addressMsgsSent,proto3" json:"address_msgs_sent,omitempty"`
	AddressMsgsRcvd         uint32   `protobuf:"varint,56,opt,name=address_msgs_rcvd,json=addressMsgsRcvd,proto3" json:"address_msgs_rcvd,omitempty"`
	AddressWithdrawMsgsSent uint32   `protobuf:"varint,57,opt,name=address_withdraw_msgs_sent,json=addressWithdrawMsgsSent,proto3" json:"address_withdraw_msgs_sent,omitempty"`
	AddressWithdrawMsgsRcvd uint32   `protobuf:"varint,58,opt,name=address_withdraw_msgs_rcvd,json=addressWithdrawMsgsRcvd,proto3" json:"address_withdraw_msgs_rcvd,omitempty"`
	LabelMappingMsgsSent    uint32   `protobuf:"varint,59,opt,name=label_mapping_msgs_sent,json=labelMappingMsgsSent,proto3" json:"label_mapping_msgs_sent,omitempty"`
	LabelMappingMsgsRcvd    uint32   `protobuf:"varint,60,opt,name=label_mapping_msgs_rcvd,json=labelMappingMsgsRcvd,proto3" json:"label_mapping_msgs_rcvd,omitempty"`
	LabelWithdrawMsgsSent   uint32   `protobuf:"varint,61,opt,name=label_withdraw_msgs_sent,json=labelWithdrawMsgsSent,proto3" json:"label_withdraw_msgs_sent,omitempty"`
	LabelWithdrawMsgsRcvd   uint32   `protobuf:"varint,62,opt,name=label_withdraw_msgs_rcvd,json=labelWithdrawMsgsRcvd,proto3" json:"label_withdraw_msgs_rcvd,omitempty"`
	LabelReleaseMsgsSent    uint32   `protobuf:"varint,63,opt,name=label_release_msgs_sent,json=labelReleaseMsgsSent,proto3" json:"label_release_msgs_sent,omitempty"`
	LabelReleaseMsgsRcvd    uint32   `protobuf:"varint,64,opt,name=label_release_msgs_rcvd,json=labelReleaseMsgsRcvd,proto3" json:"label_release_msgs_rcvd,omitempty"`
	NotificationMsgsSent    uint32   `protobuf:"varint,65,opt,name=notification_msgs_sent,json=notificationMsgsSent,proto3" json:"notification_msgs_sent,omitempty"`
	NotificationMsgsRcvd    uint32   `protobuf:"varint,66,opt,name=notification_msgs_rcvd,json=notificationMsgsRcvd,proto3" json:"notification_msgs_rcvd,omitempty"`
	KeepaliveMsgsSent       uint32   `protobuf:"varint,67,opt,name=keepalive_msgs_sent,json=keepaliveMsgsSent,proto3" json:"keepalive_msgs_sent,omitempty"`
	KeepaliveMsgsRcvd       uint32   `protobuf:"varint,68,opt,name=keepalive_msgs_rcvd,json=keepaliveMsgsRcvd,proto3" json:"keepalive_msgs_rcvd,omitempty"`
	XXX_NoUnkeyedLiteral    struct{} `json:"-"`
	XXX_unrecognized        []byte   `json:"-"`
	XXX_sizecache           int32    `json:"-"`
}

func (m *PmMplsLdpBag) Reset()         { *m = PmMplsLdpBag{} }
func (m *PmMplsLdpBag) String() string { return proto.CompactTextString(m) }
func (*PmMplsLdpBag) ProtoMessage()    {}
func (*PmMplsLdpBag) Descriptor() ([]byte, []int) {
	return fileDescriptor_e22717b8ac374911, []int{1}
}

func (m *PmMplsLdpBag) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PmMplsLdpBag.Unmarshal(m, b)
}
func (m *PmMplsLdpBag) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PmMplsLdpBag.Marshal(b, m, deterministic)
}
func (m *PmMplsLdpBag) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PmMplsLdpBag.Merge(m, src)
}
func (m *PmMplsLdpBag) XXX_Size() int {
	return xxx_messageInfo_PmMplsLdpBag.Size(m)
}
func (m *PmMplsLdpBag) XXX_DiscardUnknown() {
	xxx_messageInfo_PmMplsLdpBag.DiscardUnknown(m)
}

var xxx_messageInfo_PmMplsLdpBag proto.InternalMessageInfo

func (m *PmMplsLdpBag) GetTimeStamp() uint64 {
	if m != nil {
		return m.TimeStamp
	}
	return 0
}

func (m *PmMplsLdpBag) GetTotalMsgsSent() uint32 {
	if m != nil {
		return m.TotalMsgsSent
	}
	return 0
}

func (m *PmMplsLdpBag) GetTotalMsgsRcvd() uint32 {
	if m != nil {
		return m.TotalMsgsRcvd
	}
	return 0
}

func (m *PmMplsLdpBag) GetInitMsgsSent() uint32 {
	if m != nil {
		return m.InitMsgsSent
	}
	return 0
}

func (m *PmMplsLdpBag) GetInitMsgsRcvd() uint32 {
	if m != nil {
		return m.InitMsgsRcvd
	}
	return 0
}

func (m *PmMplsLdpBag) GetAddressMsgsSent() uint32 {
	if m != nil {
		return m.AddressMsgsSent
	}
	return 0
}

func (m *PmMplsLdpBag) GetAddressMsgsRcvd() uint32 {
	if m != nil {
		return m.AddressMsgsRcvd
	}
	return 0
}

func (m *PmMplsLdpBag) GetAddressWithdrawMsgsSent() uint32 {
	if m != nil {
		return m.AddressWithdrawMsgsSent
	}
	return 0
}

func (m *PmMplsLdpBag) GetAddressWithdrawMsgsRcvd() uint32 {
	if m != nil {
		return m.AddressWithdrawMsgsRcvd
	}
	return 0
}

func (m *PmMplsLdpBag) GetLabelMappingMsgsSent() uint32 {
	if m != nil {
		return m.LabelMappingMsgsSent
	}
	return 0
}

func (m *PmMplsLdpBag) GetLabelMappingMsgsRcvd() uint32 {
	if m != nil {
		return m.LabelMappingMsgsRcvd
	}
	return 0
}

func (m *PmMplsLdpBag) GetLabelWithdrawMsgsSent() uint32 {
	if m != nil {
		return m.LabelWithdrawMsgsSent
	}
	return 0
}

func (m *PmMplsLdpBag) GetLabelWithdrawMsgsRcvd() uint32 {
	if m != nil {
		return m.LabelWithdrawMsgsRcvd
	}
	return 0
}

func (m *PmMplsLdpBag) GetLabelReleaseMsgsSent() uint32 {
	if m != nil {
		return m.LabelReleaseMsgsSent
	}
	return 0
}

func (m *PmMplsLdpBag) GetLabelReleaseMsgsRcvd() uint32 {
	if m != nil {
		return m.LabelReleaseMsgsRcvd
	}
	return 0
}

func (m *PmMplsLdpBag) GetNotificationMsgsSent() uint32 {
	if m != nil {
		return m.NotificationMsgsSent
	}
	return 0
}

func (m *PmMplsLdpBag) GetNotificationMsgsRcvd() uint32 {
	if m != nil {
		return m.NotificationMsgsRcvd
	}
	return 0
}

func (m *PmMplsLdpBag) GetKeepaliveMsgsSent() uint32 {
	if m != nil {
		return m.KeepaliveMsgsSent
	}
	return 0
}

func (m *PmMplsLdpBag) GetKeepaliveMsgsRcvd() uint32 {
	if m != nil {
		return m.KeepaliveMsgsRcvd
	}
	return 0
}

func init() {
	proto.RegisterType((*PmMplsLdpBag_KEYS)(nil), "cisco_ios_xr_manageability_perfmgmt_oper.perf_mgmt.periodic.mpls.ldp_neighbors.ldp_neighbor.samples.sample.pm_mpls_ldp_bag_KEYS")
	proto.RegisterType((*PmMplsLdpBag)(nil), "cisco_ios_xr_manageability_perfmgmt_oper.perf_mgmt.periodic.mpls.ldp_neighbors.ldp_neighbor.samples.sample.pm_mpls_ldp_bag")
}

func init() { proto.RegisterFile("pm_mpls_ldp_bag.proto", fileDescriptor_e22717b8ac374911) }

var fileDescriptor_e22717b8ac374911 = []byte{
	// 466 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x94, 0x4d, 0x6f, 0xd3, 0x40,
	0x10, 0x86, 0x15, 0x40, 0x40, 0x57, 0x94, 0x50, 0xd3, 0x52, 0x0b, 0x84, 0x14, 0x55, 0x08, 0x45,
	0x1c, 0x7c, 0xa0, 0x2d, 0x05, 0xca, 0x37, 0xf4, 0x80, 0x50, 0x2f, 0xce, 0x01, 0x71, 0x5a, 0xad,
	0xbd, 0x5b, 0x77, 0x60, 0xbf, 0xb4, 0xbb, 0x4a, 0xe1, 0x9f, 0xf1, 0xf3, 0xd0, 0x8e, 0x83, 0xb5,
	0x76, 0x9c, 0x53, 0xec, 0x99, 0xf7, 0x79, 0x1f, 0xcf, 0x25, 0x64, 0xcf, 0x2a, 0xaa, 0xac, 0xf4,
	0x54, 0x72, 0x4b, 0x2b, 0xd6, 0x14, 0xd6, 0x99, 0x60, 0xb2, 0x9f, 0x35, 0xf8, 0xda, 0x50, 0x30,
	0x9e, 0xfe, 0x76, 0x54, 0x31, 0xcd, 0x1a, 0xc1, 0x2a, 0x90, 0x10, 0xfe, 0x50, 0x2b, 0xdc, 0x85,
	0x6a, 0x54, 0xa0, 0xc6, 0x0a, 0x57, 0xc4, 0x37, 0x1a, 0x5f, 0xe3, 0x13, 0x18, 0x0e, 0x75, 0x11,
	0xfb, 0x8a, 0xd8, 0xa7, 0x05, 0x34, 0x97, 0x95, 0x71, 0xfd, 0xb7, 0xc2, 0x33, 0x65, 0xa5, 0xf0,
	0xab, 0xdf, 0x83, 0x33, 0xb2, 0x3b, 0xf8, 0x08, 0xfa, 0xed, 0xec, 0xc7, 0x22, 0xbb, 0x47, 0xae,
	0xeb, 0xca, 0xe5, 0x93, 0xd9, 0x64, 0xbe, 0x55, 0xc6, 0xc7, 0xec, 0x11, 0xd9, 0x6a, 0x19, 0x0a,
	0x3c, 0xbf, 0x36, 0x9b, 0xcc, 0xb7, 0xcb, 0xdb, 0xed, 0xe0, 0x2b, 0x3f, 0xf8, 0x7b, 0x8b, 0x4c,
	0x07, 0x3d, 0xd9, 0x63, 0x42, 0x02, 0x28, 0x41, 0x7d, 0x60, 0xca, 0xe6, 0xcf, 0x67, 0x93, 0xf9,
	0x8d, 0x72, 0x2b, 0x4e, 0x16, 0x71, 0x90, 0x3d, 0x25, 0xd3, 0x60, 0x02, 0x93, 0x54, 0xf9, 0xc6,
	0x53, 0x2f, 0x74, 0xc8, 0x0f, 0xb1, 0x75, 0x1b, 0xc7, 0xe7, 0xbe, 0xf1, 0x0b, 0xa1, 0xc3, 0x20,
	0xe7, 0xea, 0x25, 0xcf, 0x8f, 0x06, 0xb9, 0xb2, 0x5e, 0xf2, 0xec, 0x09, 0xb9, 0x0b, 0x1a, 0x42,
	0x52, 0x77, 0x8c, 0xb1, 0x3b, 0x71, 0xda, 0xb5, 0xf5, 0x52, 0x58, 0xf6, 0xa2, 0x9f, 0xc2, 0xae,
	0x67, 0x64, 0x87, 0x71, 0xee, 0x84, 0xf7, 0x49, 0xdd, 0x09, 0x06, 0xa7, 0xab, 0x45, 0xd7, 0x38,
	0xcc, 0x62, 0xe9, 0xcb, 0xb5, 0x2c, 0xf6, 0x9e, 0x92, 0x87, 0xff, 0xb3, 0x57, 0x10, 0x2e, 0xb9,
	0x63, 0x57, 0x89, 0xe0, 0x15, 0x42, 0xfb, 0xab, 0xc4, 0xf7, 0x55, 0xa0, 0x13, 0x6d, 0x84, 0xd1,
	0xf8, 0x7a, 0x23, 0x8c, 0xe6, 0x63, 0xb2, 0x2f, 0x59, 0x25, 0x24, 0x55, 0xcc, 0x5a, 0xd0, 0x4d,
	0xa2, 0x3d, 0x45, 0x72, 0x17, 0xd7, 0xe7, 0xed, 0xb6, 0x73, 0x8e, 0x63, 0x28, 0x7c, 0x33, 0x8e,
	0xa1, 0xed, 0x84, 0xe4, 0x2d, 0x36, 0x72, 0xe5, 0x5b, 0xe4, 0xf6, 0x70, 0xbf, 0x76, 0xe3, 0x06,
	0x10, 0x85, 0xef, 0x36, 0x80, 0xfd, 0xfb, 0x9c, 0x90, 0x82, 0x79, 0x91, 0x08, 0xdf, 0x27, 0x1f,
	0x5a, 0xb6, 0xdb, 0xf5, 0xfb, 0x7a, 0x18, 0xea, 0x3e, 0x8c, 0x63, 0x68, 0x3b, 0x22, 0x0f, 0xb4,
	0x09, 0x70, 0x01, 0x35, 0x0b, 0x60, 0x74, 0x22, 0xfb, 0xd8, 0x52, 0xe9, 0xb6, 0x93, 0x8d, 0x52,
	0xe8, 0xfa, 0x34, 0x4e, 0xa1, 0xab, 0x20, 0xf7, 0x7f, 0x09, 0x61, 0x99, 0x84, 0x65, 0x7a, 0xd5,
	0x67, 0x44, 0x76, 0xba, 0x55, 0x67, 0x59, 0xcf, 0xa3, 0xe2, 0xcb, 0x48, 0x3e, 0xf6, 0x57, 0x37,
	0xf1, 0x4f, 0xe7, 0xf0, 0x5f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x94, 0xde, 0x6a, 0xd2, 0x8d, 0x04,
	0x00, 0x00,
}
