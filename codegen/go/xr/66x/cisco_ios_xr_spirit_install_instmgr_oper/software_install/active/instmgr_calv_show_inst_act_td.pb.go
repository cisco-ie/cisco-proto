/*
Copyright 2019 Cisco Systems

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: instmgr_calv_show_inst_act_td.proto

package cisco_ios_xr_spirit_install_instmgr_oper_software_install_active

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type InstmgrCalvShowInstActTd_KEYS struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *InstmgrCalvShowInstActTd_KEYS) Reset()         { *m = InstmgrCalvShowInstActTd_KEYS{} }
func (m *InstmgrCalvShowInstActTd_KEYS) String() string { return proto.CompactTextString(m) }
func (*InstmgrCalvShowInstActTd_KEYS) ProtoMessage()    {}
func (*InstmgrCalvShowInstActTd_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_4a8b5fabc84ca7ff, []int{0}
}

func (m *InstmgrCalvShowInstActTd_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InstmgrCalvShowInstActTd_KEYS.Unmarshal(m, b)
}
func (m *InstmgrCalvShowInstActTd_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InstmgrCalvShowInstActTd_KEYS.Marshal(b, m, deterministic)
}
func (m *InstmgrCalvShowInstActTd_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InstmgrCalvShowInstActTd_KEYS.Merge(m, src)
}
func (m *InstmgrCalvShowInstActTd_KEYS) XXX_Size() int {
	return xxx_messageInfo_InstmgrCalvShowInstActTd_KEYS.Size(m)
}
func (m *InstmgrCalvShowInstActTd_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_InstmgrCalvShowInstActTd_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_InstmgrCalvShowInstActTd_KEYS proto.InternalMessageInfo

type InstmgrCalvShowInstActRow struct {
	ErrorMessage           string   `protobuf:"bytes,1,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	Location               string   `protobuf:"bytes,2,opt,name=location,proto3" json:"location,omitempty"`
	NodeType               string   `protobuf:"bytes,3,opt,name=node_type,json=nodeType,proto3" json:"node_type,omitempty"`
	BootPartitionName      string   `protobuf:"bytes,4,opt,name=boot_partition_name,json=bootPartitionName,proto3" json:"boot_partition_name,omitempty"`
	NumberOfActivePackages uint32   `protobuf:"varint,5,opt,name=number_of_active_packages,json=numberOfActivePackages,proto3" json:"number_of_active_packages,omitempty"`
	ActivePackages         string   `protobuf:"bytes,6,opt,name=active_packages,json=activePackages,proto3" json:"active_packages,omitempty"`
	XXX_NoUnkeyedLiteral   struct{} `json:"-"`
	XXX_unrecognized       []byte   `json:"-"`
	XXX_sizecache          int32    `json:"-"`
}

func (m *InstmgrCalvShowInstActRow) Reset()         { *m = InstmgrCalvShowInstActRow{} }
func (m *InstmgrCalvShowInstActRow) String() string { return proto.CompactTextString(m) }
func (*InstmgrCalvShowInstActRow) ProtoMessage()    {}
func (*InstmgrCalvShowInstActRow) Descriptor() ([]byte, []int) {
	return fileDescriptor_4a8b5fabc84ca7ff, []int{1}
}

func (m *InstmgrCalvShowInstActRow) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InstmgrCalvShowInstActRow.Unmarshal(m, b)
}
func (m *InstmgrCalvShowInstActRow) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InstmgrCalvShowInstActRow.Marshal(b, m, deterministic)
}
func (m *InstmgrCalvShowInstActRow) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InstmgrCalvShowInstActRow.Merge(m, src)
}
func (m *InstmgrCalvShowInstActRow) XXX_Size() int {
	return xxx_messageInfo_InstmgrCalvShowInstActRow.Size(m)
}
func (m *InstmgrCalvShowInstActRow) XXX_DiscardUnknown() {
	xxx_messageInfo_InstmgrCalvShowInstActRow.DiscardUnknown(m)
}

var xxx_messageInfo_InstmgrCalvShowInstActRow proto.InternalMessageInfo

func (m *InstmgrCalvShowInstActRow) GetErrorMessage() string {
	if m != nil {
		return m.ErrorMessage
	}
	return ""
}

func (m *InstmgrCalvShowInstActRow) GetLocation() string {
	if m != nil {
		return m.Location
	}
	return ""
}

func (m *InstmgrCalvShowInstActRow) GetNodeType() string {
	if m != nil {
		return m.NodeType
	}
	return ""
}

func (m *InstmgrCalvShowInstActRow) GetBootPartitionName() string {
	if m != nil {
		return m.BootPartitionName
	}
	return ""
}

func (m *InstmgrCalvShowInstActRow) GetNumberOfActivePackages() uint32 {
	if m != nil {
		return m.NumberOfActivePackages
	}
	return 0
}

func (m *InstmgrCalvShowInstActRow) GetActivePackages() string {
	if m != nil {
		return m.ActivePackages
	}
	return ""
}

type InstmgrCalvShowInstActTd struct {
	ActivePackageInfo    []*InstmgrCalvShowInstActRow `protobuf:"bytes,50,rep,name=active_package_info,json=activePackageInfo,proto3" json:"active_package_info,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                     `json:"-"`
	XXX_unrecognized     []byte                       `json:"-"`
	XXX_sizecache        int32                        `json:"-"`
}

func (m *InstmgrCalvShowInstActTd) Reset()         { *m = InstmgrCalvShowInstActTd{} }
func (m *InstmgrCalvShowInstActTd) String() string { return proto.CompactTextString(m) }
func (*InstmgrCalvShowInstActTd) ProtoMessage()    {}
func (*InstmgrCalvShowInstActTd) Descriptor() ([]byte, []int) {
	return fileDescriptor_4a8b5fabc84ca7ff, []int{2}
}

func (m *InstmgrCalvShowInstActTd) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InstmgrCalvShowInstActTd.Unmarshal(m, b)
}
func (m *InstmgrCalvShowInstActTd) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InstmgrCalvShowInstActTd.Marshal(b, m, deterministic)
}
func (m *InstmgrCalvShowInstActTd) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InstmgrCalvShowInstActTd.Merge(m, src)
}
func (m *InstmgrCalvShowInstActTd) XXX_Size() int {
	return xxx_messageInfo_InstmgrCalvShowInstActTd.Size(m)
}
func (m *InstmgrCalvShowInstActTd) XXX_DiscardUnknown() {
	xxx_messageInfo_InstmgrCalvShowInstActTd.DiscardUnknown(m)
}

var xxx_messageInfo_InstmgrCalvShowInstActTd proto.InternalMessageInfo

func (m *InstmgrCalvShowInstActTd) GetActivePackageInfo() []*InstmgrCalvShowInstActRow {
	if m != nil {
		return m.ActivePackageInfo
	}
	return nil
}

func init() {
	proto.RegisterType((*InstmgrCalvShowInstActTd_KEYS)(nil), "cisco_ios_xr_spirit_install_instmgr_oper.software_install.active.instmgr_calv_show_inst_act_td_KEYS")
	proto.RegisterType((*InstmgrCalvShowInstActRow)(nil), "cisco_ios_xr_spirit_install_instmgr_oper.software_install.active.instmgr_calv_show_inst_act_row")
	proto.RegisterType((*InstmgrCalvShowInstActTd)(nil), "cisco_ios_xr_spirit_install_instmgr_oper.software_install.active.instmgr_calv_show_inst_act_td")
}

func init() {
	proto.RegisterFile("instmgr_calv_show_inst_act_td.proto", fileDescriptor_4a8b5fabc84ca7ff)
}

var fileDescriptor_4a8b5fabc84ca7ff = []byte{
	// 324 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x92, 0xb1, 0x4e, 0x23, 0x31,
	0x10, 0x86, 0xb5, 0xc9, 0x5d, 0x74, 0xf1, 0x5d, 0x0e, 0xc5, 0x91, 0xd0, 0x02, 0x02, 0x45, 0x1b,
	0x24, 0x52, 0x6d, 0x11, 0x2a, 0x3a, 0x28, 0x28, 0x10, 0x02, 0xa2, 0x40, 0x43, 0x35, 0x38, 0xce,
	0x6c, 0xb0, 0xd8, 0xf5, 0x58, 0xb6, 0x49, 0xc8, 0x5b, 0x20, 0x1e, 0x85, 0x27, 0x44, 0xeb, 0x25,
	0x48, 0xa1, 0xd8, 0x86, 0xd2, 0xff, 0xf7, 0x79, 0xc6, 0xf6, 0x98, 0x0d, 0x94, 0x76, 0xbe, 0x98,
	0x5b, 0x90, 0x22, 0x5f, 0x80, 0x7b, 0xa4, 0x25, 0x94, 0x09, 0x08, 0xe9, 0xc1, 0xcf, 0x52, 0x63,
	0xc9, 0x13, 0x3f, 0x95, 0xca, 0x49, 0x02, 0x45, 0x0e, 0x5e, 0x2c, 0x38, 0xa3, 0xac, 0xf2, 0x41,
	0x13, 0x79, 0x0e, 0xeb, 0x02, 0x64, 0xd0, 0xa6, 0x8e, 0x32, 0xbf, 0x14, 0x16, 0xd7, 0x34, 0x15,
	0xd2, 0xab, 0x05, 0x26, 0x87, 0x2c, 0xa9, 0x6d, 0x04, 0x97, 0xe7, 0xf7, 0xb7, 0xc9, 0x5b, 0x83,
	0x1d, 0xd4, 0x68, 0x96, 0x96, 0x7c, 0xc0, 0x3a, 0x68, 0x2d, 0x59, 0x28, 0xd0, 0x39, 0x31, 0xc7,
	0x38, 0xea, 0x47, 0xc3, 0xf6, 0xe4, 0x5f, 0x08, 0xaf, 0xaa, 0x8c, 0xef, 0xb2, 0x3f, 0x39, 0x49,
	0xe1, 0x15, 0xe9, 0xb8, 0x11, 0xf8, 0xd7, 0x9a, 0xef, 0xb1, 0xb6, 0xa6, 0x19, 0x82, 0x5f, 0x19,
	0x8c, 0x9b, 0x15, 0x2c, 0x83, 0xbb, 0x95, 0x41, 0x9e, 0xb2, 0xde, 0x94, 0xc8, 0x83, 0x11, 0xd6,
	0xab, 0x52, 0x07, 0x2d, 0x0a, 0x8c, 0x7f, 0x05, 0xad, 0x5b, 0xa2, 0xf1, 0x9a, 0x5c, 0x8b, 0x02,
	0xf9, 0x09, 0xdb, 0xd1, 0xcf, 0xc5, 0x14, 0x2d, 0x50, 0x06, 0xd5, 0x55, 0xc1, 0x08, 0xf9, 0x24,
	0xe6, 0xe8, 0xe2, 0xdf, 0xfd, 0x68, 0xd8, 0x99, 0x6c, 0x57, 0xc2, 0x4d, 0x76, 0x16, 0xf0, 0xf8,
	0x93, 0xf2, 0x23, 0xb6, 0xf5, 0x7d, 0x43, 0x2b, 0xb4, 0xf9, 0x2f, 0x36, 0xc4, 0xe4, 0x3d, 0x62,
	0xfb, 0xb5, 0x6f, 0xc7, 0x5f, 0x23, 0xd6, 0xdb, 0xac, 0x05, 0x4a, 0x67, 0x14, 0x8f, 0xfa, 0xcd,
	0xe1, 0xdf, 0xd1, 0x43, 0xfa, 0xd3, 0xe9, 0xa5, 0xf5, 0x33, 0x99, 0x74, 0x37, 0x4e, 0x7c, 0xa1,
	0x33, 0x9a, 0xb6, 0xc2, 0xc7, 0x39, 0xfe, 0x08, 0x00, 0x00, 0xff, 0xff, 0xb6, 0xcd, 0x98, 0x40,
	0x5f, 0x02, 0x00, 0x00,
}
