/*
Copyright 2019 Cisco Systems

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: instmgr_show_install_prepare.proto

package cisco_ios_xr_spirit_install_instmgr_oper_software_install_prepare

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type InstmgrShowInstallPrepare_KEYS struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *InstmgrShowInstallPrepare_KEYS) Reset()         { *m = InstmgrShowInstallPrepare_KEYS{} }
func (m *InstmgrShowInstallPrepare_KEYS) String() string { return proto.CompactTextString(m) }
func (*InstmgrShowInstallPrepare_KEYS) ProtoMessage()    {}
func (*InstmgrShowInstallPrepare_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_4b8a1f85e78eaced, []int{0}
}

func (m *InstmgrShowInstallPrepare_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InstmgrShowInstallPrepare_KEYS.Unmarshal(m, b)
}
func (m *InstmgrShowInstallPrepare_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InstmgrShowInstallPrepare_KEYS.Marshal(b, m, deterministic)
}
func (m *InstmgrShowInstallPrepare_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InstmgrShowInstallPrepare_KEYS.Merge(m, src)
}
func (m *InstmgrShowInstallPrepare_KEYS) XXX_Size() int {
	return xxx_messageInfo_InstmgrShowInstallPrepare_KEYS.Size(m)
}
func (m *InstmgrShowInstallPrepare_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_InstmgrShowInstallPrepare_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_InstmgrShowInstallPrepare_KEYS proto.InternalMessageInfo

type InstStringPtr struct {
	Package              string   `protobuf:"bytes,1,opt,name=package,proto3" json:"package,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *InstStringPtr) Reset()         { *m = InstStringPtr{} }
func (m *InstStringPtr) String() string { return proto.CompactTextString(m) }
func (*InstStringPtr) ProtoMessage()    {}
func (*InstStringPtr) Descriptor() ([]byte, []int) {
	return fileDescriptor_4b8a1f85e78eaced, []int{1}
}

func (m *InstStringPtr) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InstStringPtr.Unmarshal(m, b)
}
func (m *InstStringPtr) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InstStringPtr.Marshal(b, m, deterministic)
}
func (m *InstStringPtr) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InstStringPtr.Merge(m, src)
}
func (m *InstStringPtr) XXX_Size() int {
	return xxx_messageInfo_InstStringPtr.Size(m)
}
func (m *InstStringPtr) XXX_DiscardUnknown() {
	xxx_messageInfo_InstStringPtr.DiscardUnknown(m)
}

var xxx_messageInfo_InstStringPtr proto.InternalMessageInfo

func (m *InstStringPtr) GetPackage() string {
	if m != nil {
		return m.Package
	}
	return ""
}

type InstmgrShowInstallPrepare struct {
	NoPrepareDone         string           `protobuf:"bytes,50,opt,name=no_prepare_done,json=noPrepareDone,proto3" json:"no_prepare_done,omitempty"`
	PreparedBootImage     string           `protobuf:"bytes,51,opt,name=prepared_boot_image,json=preparedBootImage,proto3" json:"prepared_boot_image,omitempty"`
	PreparedBootPartition string           `protobuf:"bytes,52,opt,name=prepared_boot_partition,json=preparedBootPartition,proto3" json:"prepared_boot_partition,omitempty"`
	RestartType           string           `protobuf:"bytes,53,opt,name=restart_type,json=restartType,proto3" json:"restart_type,omitempty"`
	Rpm                   []*InstStringPtr `protobuf:"bytes,54,rep,name=rpm,proto3" json:"rpm,omitempty"`
	Package               []*InstStringPtr `protobuf:"bytes,55,rep,name=package,proto3" json:"package,omitempty"`
	ActivateMessage       string           `protobuf:"bytes,56,opt,name=activate_message,json=activateMessage,proto3" json:"activate_message,omitempty"`
	PrepareCleanMessage   string           `protobuf:"bytes,57,opt,name=prepare_clean_message,json=prepareCleanMessage,proto3" json:"prepare_clean_message,omitempty"`
	XXX_NoUnkeyedLiteral  struct{}         `json:"-"`
	XXX_unrecognized      []byte           `json:"-"`
	XXX_sizecache         int32            `json:"-"`
}

func (m *InstmgrShowInstallPrepare) Reset()         { *m = InstmgrShowInstallPrepare{} }
func (m *InstmgrShowInstallPrepare) String() string { return proto.CompactTextString(m) }
func (*InstmgrShowInstallPrepare) ProtoMessage()    {}
func (*InstmgrShowInstallPrepare) Descriptor() ([]byte, []int) {
	return fileDescriptor_4b8a1f85e78eaced, []int{2}
}

func (m *InstmgrShowInstallPrepare) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InstmgrShowInstallPrepare.Unmarshal(m, b)
}
func (m *InstmgrShowInstallPrepare) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InstmgrShowInstallPrepare.Marshal(b, m, deterministic)
}
func (m *InstmgrShowInstallPrepare) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InstmgrShowInstallPrepare.Merge(m, src)
}
func (m *InstmgrShowInstallPrepare) XXX_Size() int {
	return xxx_messageInfo_InstmgrShowInstallPrepare.Size(m)
}
func (m *InstmgrShowInstallPrepare) XXX_DiscardUnknown() {
	xxx_messageInfo_InstmgrShowInstallPrepare.DiscardUnknown(m)
}

var xxx_messageInfo_InstmgrShowInstallPrepare proto.InternalMessageInfo

func (m *InstmgrShowInstallPrepare) GetNoPrepareDone() string {
	if m != nil {
		return m.NoPrepareDone
	}
	return ""
}

func (m *InstmgrShowInstallPrepare) GetPreparedBootImage() string {
	if m != nil {
		return m.PreparedBootImage
	}
	return ""
}

func (m *InstmgrShowInstallPrepare) GetPreparedBootPartition() string {
	if m != nil {
		return m.PreparedBootPartition
	}
	return ""
}

func (m *InstmgrShowInstallPrepare) GetRestartType() string {
	if m != nil {
		return m.RestartType
	}
	return ""
}

func (m *InstmgrShowInstallPrepare) GetRpm() []*InstStringPtr {
	if m != nil {
		return m.Rpm
	}
	return nil
}

func (m *InstmgrShowInstallPrepare) GetPackage() []*InstStringPtr {
	if m != nil {
		return m.Package
	}
	return nil
}

func (m *InstmgrShowInstallPrepare) GetActivateMessage() string {
	if m != nil {
		return m.ActivateMessage
	}
	return ""
}

func (m *InstmgrShowInstallPrepare) GetPrepareCleanMessage() string {
	if m != nil {
		return m.PrepareCleanMessage
	}
	return ""
}

func init() {
	proto.RegisterType((*InstmgrShowInstallPrepare_KEYS)(nil), "cisco_ios_xr_spirit_install_instmgr_oper.software_install.prepare.instmgr_show_install_prepare_KEYS")
	proto.RegisterType((*InstStringPtr)(nil), "cisco_ios_xr_spirit_install_instmgr_oper.software_install.prepare.inst_string_ptr")
	proto.RegisterType((*InstmgrShowInstallPrepare)(nil), "cisco_ios_xr_spirit_install_instmgr_oper.software_install.prepare.instmgr_show_install_prepare")
}

func init() { proto.RegisterFile("instmgr_show_install_prepare.proto", fileDescriptor_4b8a1f85e78eaced) }

var fileDescriptor_4b8a1f85e78eaced = []byte{
	// 330 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x52, 0xbb, 0x4b, 0x33, 0x41,
	0x10, 0x27, 0xe4, 0xe3, 0x13, 0x37, 0x4a, 0x74, 0x45, 0xbc, 0xc2, 0x22, 0x39, 0x41, 0x22, 0xc2,
	0x15, 0x89, 0x46, 0x2d, 0x7d, 0x15, 0x22, 0x42, 0x88, 0x36, 0x56, 0xc3, 0xe6, 0xb2, 0xc6, 0xc5,
	0xbb, 0x9d, 0x65, 0x76, 0x30, 0xa6, 0xf7, 0x0f, 0x97, 0xbb, 0xdc, 0xc6, 0x47, 0x91, 0x46, 0x2c,
	0xe7, 0xf7, 0xe4, 0x7e, 0xb7, 0x22, 0x36, 0xd6, 0x73, 0x3e, 0x21, 0xf0, 0xcf, 0x38, 0x85, 0xe2,
	0x50, 0x59, 0x06, 0x8e, 0xb4, 0x53, 0xa4, 0x13, 0x47, 0xc8, 0x28, 0xcf, 0x53, 0xe3, 0x53, 0x04,
	0x83, 0x1e, 0xde, 0x08, 0xbc, 0x33, 0x64, 0x78, 0x21, 0x0d, 0x7e, 0x74, 0x9a, 0x12, 0x8f, 0x4f,
	0x3c, 0x55, 0xa4, 0x03, 0x9b, 0x54, 0x41, 0xf1, 0x9e, 0x68, 0x2f, 0x2b, 0x82, 0xdb, 0xeb, 0xc7,
	0xfb, 0xf8, 0x50, 0x34, 0x0b, 0x1c, 0x3c, 0x93, 0xb1, 0x13, 0x70, 0x4c, 0x32, 0x12, 0x2b, 0x4e,
	0xa5, 0x2f, 0x6a, 0xa2, 0xa3, 0x5a, 0xab, 0xd6, 0x59, 0x1d, 0x86, 0x33, 0x7e, 0xff, 0x27, 0x76,
	0x97, 0x45, 0xca, 0x7d, 0xd1, 0xb4, 0xb8, 0x28, 0x18, 0xa3, 0xd5, 0x51, 0xb7, 0x8c, 0x58, 0xb7,
	0x38, 0x98, 0xa3, 0x57, 0x68, 0xb5, 0x4c, 0xc4, 0x56, 0x25, 0x1a, 0xc3, 0x08, 0x91, 0xc1, 0xe4,
	0x45, 0x5d, 0xaf, 0xd4, 0x6e, 0x06, 0xea, 0x02, 0x91, 0x6f, 0x0a, 0x42, 0xf6, 0xc5, 0xce, 0x77,
	0xbd, 0x53, 0xc4, 0x86, 0x0d, 0xda, 0xe8, 0xa8, 0xf4, 0x6c, 0x7f, 0xf5, 0x0c, 0x02, 0x29, 0xdb,
	0x62, 0x8d, 0xb4, 0x67, 0x45, 0x0c, 0x3c, 0x73, 0x3a, 0x3a, 0x2e, 0xc5, 0x8d, 0x0a, 0x7b, 0x98,
	0x39, 0x2d, 0xc7, 0xa2, 0x4e, 0x2e, 0x8f, 0xfa, 0xad, 0x7a, 0xa7, 0xd1, 0x1d, 0x26, 0xbf, 0x9e,
	0x3d, 0xf9, 0x31, 0xe7, 0xb0, 0x88, 0x97, 0xd9, 0xe7, 0xa6, 0x27, 0x7f, 0xd6, 0x14, 0x2a, 0xe4,
	0x81, 0xd8, 0x50, 0x29, 0x9b, 0x57, 0xc5, 0x1a, 0x72, 0xed, 0x7d, 0x51, 0x7b, 0x5a, 0x7e, 0x7a,
	0x33, 0xe0, 0x77, 0x73, 0x58, 0x76, 0x45, 0x98, 0x0e, 0xd2, 0x4c, 0x2b, 0xbb, 0xd0, 0x9f, 0x95,
	0xfa, 0xf0, 0x9b, 0x2e, 0x0b, 0xae, 0xf2, 0x8c, 0xfe, 0x97, 0x4f, 0xb4, 0xf7, 0x11, 0x00, 0x00,
	0xff, 0xff, 0x43, 0xeb, 0xca, 0xd6, 0xc8, 0x02, 0x00, 0x00,
}
