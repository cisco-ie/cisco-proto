/*
Copyright 2019 Cisco Systems

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: lacp_link_data.proto

package cisco_ios_xr_bundlemgr_oper_lacp_bundle_members_members_member_data

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type LacpLinkData_KEYS struct {
	MemberInterface      string   `protobuf:"bytes,1,opt,name=member_interface,json=memberInterface,proto3" json:"member_interface,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LacpLinkData_KEYS) Reset()         { *m = LacpLinkData_KEYS{} }
func (m *LacpLinkData_KEYS) String() string { return proto.CompactTextString(m) }
func (*LacpLinkData_KEYS) ProtoMessage()    {}
func (*LacpLinkData_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_b9bc4762844f3319, []int{0}
}

func (m *LacpLinkData_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LacpLinkData_KEYS.Unmarshal(m, b)
}
func (m *LacpLinkData_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LacpLinkData_KEYS.Marshal(b, m, deterministic)
}
func (m *LacpLinkData_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LacpLinkData_KEYS.Merge(m, src)
}
func (m *LacpLinkData_KEYS) XXX_Size() int {
	return xxx_messageInfo_LacpLinkData_KEYS.Size(m)
}
func (m *LacpLinkData_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_LacpLinkData_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_LacpLinkData_KEYS proto.InternalMessageInfo

func (m *LacpLinkData_KEYS) GetMemberInterface() string {
	if m != nil {
		return m.MemberInterface
	}
	return ""
}

type LacpLinkData struct {
	InterfaceHandle         string   `protobuf:"bytes,50,opt,name=interface_handle,json=interfaceHandle,proto3" json:"interface_handle,omitempty"`
	ActorSystemPriority     uint32   `protobuf:"varint,51,opt,name=actor_system_priority,json=actorSystemPriority,proto3" json:"actor_system_priority,omitempty"`
	ActorSystemMacAddress   string   `protobuf:"bytes,52,opt,name=actor_system_mac_address,json=actorSystemMacAddress,proto3" json:"actor_system_mac_address,omitempty"`
	ActorOperationalKey     uint32   `protobuf:"varint,53,opt,name=actor_operational_key,json=actorOperationalKey,proto3" json:"actor_operational_key,omitempty"`
	PartnerSystemPriority   uint32   `protobuf:"varint,54,opt,name=partner_system_priority,json=partnerSystemPriority,proto3" json:"partner_system_priority,omitempty"`
	PartnerSystemMacAddress string   `protobuf:"bytes,55,opt,name=partner_system_mac_address,json=partnerSystemMacAddress,proto3" json:"partner_system_mac_address,omitempty"`
	PartnerOperationalKey   uint32   `protobuf:"varint,56,opt,name=partner_operational_key,json=partnerOperationalKey,proto3" json:"partner_operational_key,omitempty"`
	SelectedAggregatorId    uint32   `protobuf:"varint,57,opt,name=selected_aggregator_id,json=selectedAggregatorId,proto3" json:"selected_aggregator_id,omitempty"`
	AttachedAggregatorId    uint32   `protobuf:"varint,58,opt,name=attached_aggregator_id,json=attachedAggregatorId,proto3" json:"attached_aggregator_id,omitempty"`
	ActorPortId             uint32   `protobuf:"varint,59,opt,name=actor_port_id,json=actorPortId,proto3" json:"actor_port_id,omitempty"`
	ActorPortPriority       uint32   `protobuf:"varint,60,opt,name=actor_port_priority,json=actorPortPriority,proto3" json:"actor_port_priority,omitempty"`
	PartnerPortId           uint32   `protobuf:"varint,61,opt,name=partner_port_id,json=partnerPortId,proto3" json:"partner_port_id,omitempty"`
	PartnerPortPriority     uint32   `protobuf:"varint,62,opt,name=partner_port_priority,json=partnerPortPriority,proto3" json:"partner_port_priority,omitempty"`
	ActorPortState          uint32   `protobuf:"varint,63,opt,name=actor_port_state,json=actorPortState,proto3" json:"actor_port_state,omitempty"`
	PartnerPortState        uint32   `protobuf:"varint,64,opt,name=partner_port_state,json=partnerPortState,proto3" json:"partner_port_state,omitempty"`
	XXX_NoUnkeyedLiteral    struct{} `json:"-"`
	XXX_unrecognized        []byte   `json:"-"`
	XXX_sizecache           int32    `json:"-"`
}

func (m *LacpLinkData) Reset()         { *m = LacpLinkData{} }
func (m *LacpLinkData) String() string { return proto.CompactTextString(m) }
func (*LacpLinkData) ProtoMessage()    {}
func (*LacpLinkData) Descriptor() ([]byte, []int) {
	return fileDescriptor_b9bc4762844f3319, []int{1}
}

func (m *LacpLinkData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LacpLinkData.Unmarshal(m, b)
}
func (m *LacpLinkData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LacpLinkData.Marshal(b, m, deterministic)
}
func (m *LacpLinkData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LacpLinkData.Merge(m, src)
}
func (m *LacpLinkData) XXX_Size() int {
	return xxx_messageInfo_LacpLinkData.Size(m)
}
func (m *LacpLinkData) XXX_DiscardUnknown() {
	xxx_messageInfo_LacpLinkData.DiscardUnknown(m)
}

var xxx_messageInfo_LacpLinkData proto.InternalMessageInfo

func (m *LacpLinkData) GetInterfaceHandle() string {
	if m != nil {
		return m.InterfaceHandle
	}
	return ""
}

func (m *LacpLinkData) GetActorSystemPriority() uint32 {
	if m != nil {
		return m.ActorSystemPriority
	}
	return 0
}

func (m *LacpLinkData) GetActorSystemMacAddress() string {
	if m != nil {
		return m.ActorSystemMacAddress
	}
	return ""
}

func (m *LacpLinkData) GetActorOperationalKey() uint32 {
	if m != nil {
		return m.ActorOperationalKey
	}
	return 0
}

func (m *LacpLinkData) GetPartnerSystemPriority() uint32 {
	if m != nil {
		return m.PartnerSystemPriority
	}
	return 0
}

func (m *LacpLinkData) GetPartnerSystemMacAddress() string {
	if m != nil {
		return m.PartnerSystemMacAddress
	}
	return ""
}

func (m *LacpLinkData) GetPartnerOperationalKey() uint32 {
	if m != nil {
		return m.PartnerOperationalKey
	}
	return 0
}

func (m *LacpLinkData) GetSelectedAggregatorId() uint32 {
	if m != nil {
		return m.SelectedAggregatorId
	}
	return 0
}

func (m *LacpLinkData) GetAttachedAggregatorId() uint32 {
	if m != nil {
		return m.AttachedAggregatorId
	}
	return 0
}

func (m *LacpLinkData) GetActorPortId() uint32 {
	if m != nil {
		return m.ActorPortId
	}
	return 0
}

func (m *LacpLinkData) GetActorPortPriority() uint32 {
	if m != nil {
		return m.ActorPortPriority
	}
	return 0
}

func (m *LacpLinkData) GetPartnerPortId() uint32 {
	if m != nil {
		return m.PartnerPortId
	}
	return 0
}

func (m *LacpLinkData) GetPartnerPortPriority() uint32 {
	if m != nil {
		return m.PartnerPortPriority
	}
	return 0
}

func (m *LacpLinkData) GetActorPortState() uint32 {
	if m != nil {
		return m.ActorPortState
	}
	return 0
}

func (m *LacpLinkData) GetPartnerPortState() uint32 {
	if m != nil {
		return m.PartnerPortState
	}
	return 0
}

func init() {
	proto.RegisterType((*LacpLinkData_KEYS)(nil), "cisco_ios_xr_bundlemgr_oper.lacp_bundle_members.members.member.data.lacp_link_data_KEYS")
	proto.RegisterType((*LacpLinkData)(nil), "cisco_ios_xr_bundlemgr_oper.lacp_bundle_members.members.member.data.lacp_link_data")
}

func init() { proto.RegisterFile("lacp_link_data.proto", fileDescriptor_b9bc4762844f3319) }

var fileDescriptor_b9bc4762844f3319 = []byte{
	// 430 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x64, 0x93, 0x4f, 0x6b, 0x1b, 0x31,
	0x10, 0xc5, 0xf1, 0xa1, 0x85, 0xaa, 0x38, 0x71, 0xd7, 0x71, 0xb3, 0xf4, 0x14, 0x7c, 0x28, 0x2e,
	0x94, 0x3d, 0x38, 0x69, 0xd2, 0x36, 0xfd, 0x93, 0x50, 0x0a, 0x35, 0xa1, 0x34, 0xc4, 0xa7, 0x9e,
	0xc4, 0x58, 0x9a, 0x3a, 0x22, 0xbb, 0xab, 0x45, 0x52, 0xa1, 0xfe, 0xf0, 0x85, 0xa0, 0x91, 0x57,
	0x91, 0x9c, 0x93, 0x61, 0xde, 0xfb, 0xbd, 0x79, 0x1a, 0xb3, 0xec, 0xa0, 0x06, 0xd1, 0xf1, 0x5a,
	0xb5, 0x77, 0x5c, 0x82, 0x83, 0xaa, 0x33, 0xda, 0xe9, 0xe2, 0x9b, 0x50, 0x56, 0x68, 0xae, 0xb4,
	0xe5, 0xff, 0x0c, 0x5f, 0xfd, 0x6d, 0x65, 0x8d, 0xcd, 0xda, 0x70, 0xdd, 0xa1, 0xa9, 0x88, 0x08,
	0x33, 0xde, 0x60, 0xb3, 0x42, 0x63, 0xab, 0xfc, 0xb7, 0xf2, 0x51, 0xd3, 0x0b, 0x36, 0xce, 0xc3,
	0xf9, 0xd5, 0xf7, 0xdf, 0xcb, 0xe2, 0x0d, 0x1b, 0x05, 0x17, 0x57, 0xad, 0x43, 0xf3, 0x07, 0x04,
	0x96, 0x83, 0xa3, 0xc1, 0xec, 0xd9, 0xcd, 0x7e, 0x98, 0x2f, 0xfa, 0xf1, 0xf4, 0xff, 0x13, 0xb6,
	0x97, 0x47, 0x78, 0x3a, 0x62, 0xfc, 0x16, 0x7c, 0x89, 0x72, 0x1e, 0xe8, 0x38, 0xff, 0x41, 0xe3,
	0x62, 0xce, 0x26, 0x20, 0x9c, 0x36, 0xdc, 0x6e, 0xac, 0xc3, 0x86, 0x77, 0x46, 0x69, 0xa3, 0xdc,
	0xa6, 0x3c, 0x3e, 0x1a, 0xcc, 0x86, 0x37, 0x63, 0x12, 0x97, 0xa4, 0x5d, 0x6f, 0xa5, 0xe2, 0x8c,
	0x95, 0x19, 0xd3, 0x80, 0xe0, 0x20, 0xa5, 0x41, 0x6b, 0xcb, 0x13, 0x5a, 0x33, 0x49, 0xb0, 0x9f,
	0x20, 0x2e, 0x83, 0xf8, 0xb0, 0xcc, 0x9f, 0x08, 0x9c, 0xd2, 0x2d, 0xd4, 0xfc, 0x0e, 0x37, 0xe5,
	0xbb, 0x64, 0xd9, 0xaf, 0x07, 0xed, 0x0a, 0x37, 0xc5, 0x29, 0x3b, 0xec, 0xc0, 0xb8, 0x16, 0x1f,
	0x57, 0x3c, 0x25, 0x6a, 0xb2, 0x95, 0x77, 0x4a, 0x9e, 0xb3, 0x57, 0x3b, 0x5c, 0x5a, 0xf3, 0x8c,
	0x6a, 0x1e, 0x66, 0x68, 0x52, 0x34, 0x59, 0xba, 0x5b, 0xf5, 0x7d, 0xb6, 0x74, 0xa7, 0xec, 0x09,
	0x7b, 0x69, 0xb1, 0x46, 0xe1, 0x50, 0x72, 0x58, 0xaf, 0x0d, 0xae, 0xc1, 0x3f, 0x57, 0xc9, 0xf2,
	0x03, 0x61, 0x07, 0xbd, 0x7a, 0x19, 0xc5, 0x85, 0xf4, 0x14, 0x38, 0x07, 0xe2, 0xf6, 0x11, 0xf5,
	0x31, 0x50, 0xbd, 0x9a, 0x51, 0x53, 0x36, 0x0c, 0xc7, 0xec, 0xb4, 0x71, 0xde, 0x7c, 0x4e, 0xe6,
	0xe7, 0x34, 0xbc, 0xd6, 0xc6, 0x2d, 0x64, 0x51, 0xb1, 0x71, 0xe2, 0x89, 0x87, 0xfb, 0x44, 0xce,
	0x17, 0xd1, 0x19, 0x8f, 0xf6, 0x9a, 0xed, 0xf7, 0xef, 0xee, 0x53, 0x3f, 0x93, 0x77, 0xb8, 0x1d,
	0x6f, 0x73, 0xe7, 0x6c, 0x92, 0xf9, 0x62, 0xf2, 0x97, 0xf0, 0x47, 0x26, 0xee, 0x98, 0x3d, 0x63,
	0xa3, 0xa4, 0x8b, 0x75, 0xe0, 0xb0, 0xfc, 0x4a, 0xf6, 0xbd, 0x58, 0x64, 0xe9, 0xa7, 0xc5, 0x5b,
	0x56, 0x64, 0xe9, 0xc1, 0x7b, 0x41, 0xde, 0x51, 0x12, 0x4d, 0xee, 0xd5, 0x53, 0xfa, 0x1a, 0x8f,
	0xef, 0x03, 0x00, 0x00, 0xff, 0xff, 0x05, 0x42, 0x86, 0xd0, 0xa5, 0x03, 0x00, 0x00,
}
