/*
Copyright 2019 Cisco Systems

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proc_basic_detail_verbose_info.proto

package cisco_ios_xr_sysmgr_oper_system_process_node_table_node_name_process_name_verboses_process_name_verbose

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ProcBasicDetailVerboseInfo_KEYS struct {
	NodeName             string   `protobuf:"bytes,1,opt,name=node_name,json=nodeName,proto3" json:"node_name,omitempty"`
	ProcName             string   `protobuf:"bytes,2,opt,name=proc_name,json=procName,proto3" json:"proc_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ProcBasicDetailVerboseInfo_KEYS) Reset()         { *m = ProcBasicDetailVerboseInfo_KEYS{} }
func (m *ProcBasicDetailVerboseInfo_KEYS) String() string { return proto.CompactTextString(m) }
func (*ProcBasicDetailVerboseInfo_KEYS) ProtoMessage()    {}
func (*ProcBasicDetailVerboseInfo_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9253ea820adf502, []int{0}
}

func (m *ProcBasicDetailVerboseInfo_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProcBasicDetailVerboseInfo_KEYS.Unmarshal(m, b)
}
func (m *ProcBasicDetailVerboseInfo_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProcBasicDetailVerboseInfo_KEYS.Marshal(b, m, deterministic)
}
func (m *ProcBasicDetailVerboseInfo_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProcBasicDetailVerboseInfo_KEYS.Merge(m, src)
}
func (m *ProcBasicDetailVerboseInfo_KEYS) XXX_Size() int {
	return xxx_messageInfo_ProcBasicDetailVerboseInfo_KEYS.Size(m)
}
func (m *ProcBasicDetailVerboseInfo_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_ProcBasicDetailVerboseInfo_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_ProcBasicDetailVerboseInfo_KEYS proto.InternalMessageInfo

func (m *ProcBasicDetailVerboseInfo_KEYS) GetNodeName() string {
	if m != nil {
		return m.NodeName
	}
	return ""
}

func (m *ProcBasicDetailVerboseInfo_KEYS) GetProcName() string {
	if m != nil {
		return m.ProcName
	}
	return ""
}

type TupleInfo struct {
	Tuple                string   `protobuf:"bytes,1,opt,name=tuple,proto3" json:"tuple,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TupleInfo) Reset()         { *m = TupleInfo{} }
func (m *TupleInfo) String() string { return proto.CompactTextString(m) }
func (*TupleInfo) ProtoMessage()    {}
func (*TupleInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9253ea820adf502, []int{1}
}

func (m *TupleInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TupleInfo.Unmarshal(m, b)
}
func (m *TupleInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TupleInfo.Marshal(b, m, deterministic)
}
func (m *TupleInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TupleInfo.Merge(m, src)
}
func (m *TupleInfo) XXX_Size() int {
	return xxx_messageInfo_TupleInfo.Size(m)
}
func (m *TupleInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_TupleInfo.DiscardUnknown(m)
}

var xxx_messageInfo_TupleInfo proto.InternalMessageInfo

func (m *TupleInfo) GetTuple() string {
	if m != nil {
		return m.Tuple
	}
	return ""
}

type ProcCpuTime struct {
	User                 string   `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	System               string   `protobuf:"bytes,2,opt,name=system,proto3" json:"system,omitempty"`
	Total                string   `protobuf:"bytes,3,opt,name=total,proto3" json:"total,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ProcCpuTime) Reset()         { *m = ProcCpuTime{} }
func (m *ProcCpuTime) String() string { return proto.CompactTextString(m) }
func (*ProcCpuTime) ProtoMessage()    {}
func (*ProcCpuTime) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9253ea820adf502, []int{2}
}

func (m *ProcCpuTime) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProcCpuTime.Unmarshal(m, b)
}
func (m *ProcCpuTime) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProcCpuTime.Marshal(b, m, deterministic)
}
func (m *ProcCpuTime) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProcCpuTime.Merge(m, src)
}
func (m *ProcCpuTime) XXX_Size() int {
	return xxx_messageInfo_ProcCpuTime.Size(m)
}
func (m *ProcCpuTime) XXX_DiscardUnknown() {
	xxx_messageInfo_ProcCpuTime.DiscardUnknown(m)
}

var xxx_messageInfo_ProcCpuTime proto.InternalMessageInfo

func (m *ProcCpuTime) GetUser() string {
	if m != nil {
		return m.User
	}
	return ""
}

func (m *ProcCpuTime) GetSystem() string {
	if m != nil {
		return m.System
	}
	return ""
}

func (m *ProcCpuTime) GetTotal() string {
	if m != nil {
		return m.Total
	}
	return ""
}

type ProcBasicInfo struct {
	JobIdXr              uint32       `protobuf:"varint,1,opt,name=job_id_xr,json=jobIdXr,proto3" json:"job_id_xr,omitempty"`
	ProcessId            uint32       `protobuf:"varint,2,opt,name=process_id,json=processId,proto3" json:"process_id,omitempty"`
	ProcessName          string       `protobuf:"bytes,3,opt,name=process_name,json=processName,proto3" json:"process_name,omitempty"`
	Executable           string       `protobuf:"bytes,4,opt,name=executable,proto3" json:"executable,omitempty"`
	ActivePath           string       `protobuf:"bytes,5,opt,name=active_path,json=activePath,proto3" json:"active_path,omitempty"`
	InstanceId           int32        `protobuf:"zigzag32,6,opt,name=instance_id,json=instanceId,proto3" json:"instance_id,omitempty"`
	Args                 string       `protobuf:"bytes,7,opt,name=args,proto3" json:"args,omitempty"`
	VersionId            string       `protobuf:"bytes,8,opt,name=version_id,json=versionId,proto3" json:"version_id,omitempty"`
	Respawn              string       `protobuf:"bytes,9,opt,name=respawn,proto3" json:"respawn,omitempty"`
	RespawnCount         int32        `protobuf:"zigzag32,10,opt,name=respawn_count,json=respawnCount,proto3" json:"respawn_count,omitempty"`
	LastStarted          string       `protobuf:"bytes,11,opt,name=last_started,json=lastStarted,proto3" json:"last_started,omitempty"`
	ProcessState         string       `protobuf:"bytes,12,opt,name=process_state,json=processState,proto3" json:"process_state,omitempty"`
	LastExitStatus       int32        `protobuf:"zigzag32,13,opt,name=last_exit_status,json=lastExitStatus,proto3" json:"last_exit_status,omitempty"`
	LastExitReason       string       `protobuf:"bytes,14,opt,name=last_exit_reason,json=lastExitReason,proto3" json:"last_exit_reason,omitempty"`
	PackageState         string       `protobuf:"bytes,15,opt,name=package_state,json=packageState,proto3" json:"package_state,omitempty"`
	StartedOnConfig      string       `protobuf:"bytes,16,opt,name=started_on_config,json=startedOnConfig,proto3" json:"started_on_config,omitempty"`
	RegisteredItem       []*TupleInfo `protobuf:"bytes,17,rep,name=registered_item,json=registeredItem,proto3" json:"registered_item,omitempty"`
	FeatureName          string       `protobuf:"bytes,18,opt,name=feature_name,json=featureName,proto3" json:"feature_name,omitempty"`
	Tag                  string       `protobuf:"bytes,19,opt,name=tag,proto3" json:"tag,omitempty"`
	Group                string       `protobuf:"bytes,20,opt,name=group,proto3" json:"group,omitempty"`
	Core                 string       `protobuf:"bytes,21,opt,name=core,proto3" json:"core,omitempty"`
	MaxCore              int32        `protobuf:"zigzag32,22,opt,name=max_core,json=maxCore,proto3" json:"max_core,omitempty"`
	Level                string       `protobuf:"bytes,23,opt,name=level,proto3" json:"level,omitempty"`
	Mandatory            bool         `protobuf:"varint,24,opt,name=mandatory,proto3" json:"mandatory,omitempty"`
	MaintModeProc        bool         `protobuf:"varint,25,opt,name=maint_mode_proc,json=maintModeProc,proto3" json:"maint_mode_proc,omitempty"`
	PlacementState       string       `protobuf:"bytes,26,opt,name=placement_state,json=placementState,proto3" json:"placement_state,omitempty"`
	StartUpPath          string       `protobuf:"bytes,27,opt,name=start_up_path,json=startUpPath,proto3" json:"start_up_path,omitempty"`
	MemoryLimit          uint32       `protobuf:"varint,28,opt,name=memory_limit,json=memoryLimit,proto3" json:"memory_limit,omitempty"`
	Ready                string       `protobuf:"bytes,29,opt,name=ready,proto3" json:"ready,omitempty"`
	Available            string       `protobuf:"bytes,30,opt,name=available,proto3" json:"available,omitempty"`
	ProcCpuTime          *ProcCpuTime `protobuf:"bytes,31,opt,name=proc_cpu_time,json=procCpuTime,proto3" json:"proc_cpu_time,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *ProcBasicInfo) Reset()         { *m = ProcBasicInfo{} }
func (m *ProcBasicInfo) String() string { return proto.CompactTextString(m) }
func (*ProcBasicInfo) ProtoMessage()    {}
func (*ProcBasicInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9253ea820adf502, []int{3}
}

func (m *ProcBasicInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProcBasicInfo.Unmarshal(m, b)
}
func (m *ProcBasicInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProcBasicInfo.Marshal(b, m, deterministic)
}
func (m *ProcBasicInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProcBasicInfo.Merge(m, src)
}
func (m *ProcBasicInfo) XXX_Size() int {
	return xxx_messageInfo_ProcBasicInfo.Size(m)
}
func (m *ProcBasicInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_ProcBasicInfo.DiscardUnknown(m)
}

var xxx_messageInfo_ProcBasicInfo proto.InternalMessageInfo

func (m *ProcBasicInfo) GetJobIdXr() uint32 {
	if m != nil {
		return m.JobIdXr
	}
	return 0
}

func (m *ProcBasicInfo) GetProcessId() uint32 {
	if m != nil {
		return m.ProcessId
	}
	return 0
}

func (m *ProcBasicInfo) GetProcessName() string {
	if m != nil {
		return m.ProcessName
	}
	return ""
}

func (m *ProcBasicInfo) GetExecutable() string {
	if m != nil {
		return m.Executable
	}
	return ""
}

func (m *ProcBasicInfo) GetActivePath() string {
	if m != nil {
		return m.ActivePath
	}
	return ""
}

func (m *ProcBasicInfo) GetInstanceId() int32 {
	if m != nil {
		return m.InstanceId
	}
	return 0
}

func (m *ProcBasicInfo) GetArgs() string {
	if m != nil {
		return m.Args
	}
	return ""
}

func (m *ProcBasicInfo) GetVersionId() string {
	if m != nil {
		return m.VersionId
	}
	return ""
}

func (m *ProcBasicInfo) GetRespawn() string {
	if m != nil {
		return m.Respawn
	}
	return ""
}

func (m *ProcBasicInfo) GetRespawnCount() int32 {
	if m != nil {
		return m.RespawnCount
	}
	return 0
}

func (m *ProcBasicInfo) GetLastStarted() string {
	if m != nil {
		return m.LastStarted
	}
	return ""
}

func (m *ProcBasicInfo) GetProcessState() string {
	if m != nil {
		return m.ProcessState
	}
	return ""
}

func (m *ProcBasicInfo) GetLastExitStatus() int32 {
	if m != nil {
		return m.LastExitStatus
	}
	return 0
}

func (m *ProcBasicInfo) GetLastExitReason() string {
	if m != nil {
		return m.LastExitReason
	}
	return ""
}

func (m *ProcBasicInfo) GetPackageState() string {
	if m != nil {
		return m.PackageState
	}
	return ""
}

func (m *ProcBasicInfo) GetStartedOnConfig() string {
	if m != nil {
		return m.StartedOnConfig
	}
	return ""
}

func (m *ProcBasicInfo) GetRegisteredItem() []*TupleInfo {
	if m != nil {
		return m.RegisteredItem
	}
	return nil
}

func (m *ProcBasicInfo) GetFeatureName() string {
	if m != nil {
		return m.FeatureName
	}
	return ""
}

func (m *ProcBasicInfo) GetTag() string {
	if m != nil {
		return m.Tag
	}
	return ""
}

func (m *ProcBasicInfo) GetGroup() string {
	if m != nil {
		return m.Group
	}
	return ""
}

func (m *ProcBasicInfo) GetCore() string {
	if m != nil {
		return m.Core
	}
	return ""
}

func (m *ProcBasicInfo) GetMaxCore() int32 {
	if m != nil {
		return m.MaxCore
	}
	return 0
}

func (m *ProcBasicInfo) GetLevel() string {
	if m != nil {
		return m.Level
	}
	return ""
}

func (m *ProcBasicInfo) GetMandatory() bool {
	if m != nil {
		return m.Mandatory
	}
	return false
}

func (m *ProcBasicInfo) GetMaintModeProc() bool {
	if m != nil {
		return m.MaintModeProc
	}
	return false
}

func (m *ProcBasicInfo) GetPlacementState() string {
	if m != nil {
		return m.PlacementState
	}
	return ""
}

func (m *ProcBasicInfo) GetStartUpPath() string {
	if m != nil {
		return m.StartUpPath
	}
	return ""
}

func (m *ProcBasicInfo) GetMemoryLimit() uint32 {
	if m != nil {
		return m.MemoryLimit
	}
	return 0
}

func (m *ProcBasicInfo) GetReady() string {
	if m != nil {
		return m.Ready
	}
	return ""
}

func (m *ProcBasicInfo) GetAvailable() string {
	if m != nil {
		return m.Available
	}
	return ""
}

func (m *ProcBasicInfo) GetProcCpuTime() *ProcCpuTime {
	if m != nil {
		return m.ProcCpuTime
	}
	return nil
}

type ProcDetailInfo struct {
	RunningPath            string   `protobuf:"bytes,1,opt,name=running_path,json=runningPath,proto3" json:"running_path,omitempty"`
	PackagePath            string   `protobuf:"bytes,2,opt,name=package_path,json=packagePath,proto3" json:"package_path,omitempty"`
	JobIdLink              int32    `protobuf:"zigzag32,3,opt,name=job_id_link,json=jobIdLink,proto3" json:"job_id_link,omitempty"`
	GroupJid               string   `protobuf:"bytes,4,opt,name=group_jid,json=groupJid,proto3" json:"group_jid,omitempty"`
	FailCount              uint32   `protobuf:"varint,5,opt,name=fail_count,json=failCount,proto3" json:"fail_count,omitempty"`
	RestartNeeded          bool     `protobuf:"varint,6,opt,name=restart_needed,json=restartNeeded,proto3" json:"restart_needed,omitempty"`
	InitProcess            bool     `protobuf:"varint,7,opt,name=init_process,json=initProcess,proto3" json:"init_process,omitempty"`
	LastOnline             string   `protobuf:"bytes,8,opt,name=last_online,json=lastOnline,proto3" json:"last_online,omitempty"`
	ThisPcb                string   `protobuf:"bytes,9,opt,name=this_pcb,json=thisPcb,proto3" json:"this_pcb,omitempty"`
	NextPcb                string   `protobuf:"bytes,10,opt,name=next_pcb,json=nextPcb,proto3" json:"next_pcb,omitempty"`
	Envs                   string   `protobuf:"bytes,11,opt,name=envs,proto3" json:"envs,omitempty"`
	WaitFor                string   `protobuf:"bytes,12,opt,name=wait_for,json=waitFor,proto3" json:"wait_for,omitempty"`
	JobIdOnRp              int32    `protobuf:"zigzag32,13,opt,name=job_id_on_rp,json=jobIdOnRp,proto3" json:"job_id_on_rp,omitempty"`
	IsStandbyCapable       bool     `protobuf:"varint,14,opt,name=is_standby_capable,json=isStandbyCapable,proto3" json:"is_standby_capable,omitempty"`
	DisableKill            bool     `protobuf:"varint,15,opt,name=disable_kill,json=disableKill,proto3" json:"disable_kill,omitempty"`
	SendAvail              bool     `protobuf:"varint,16,opt,name=send_avail,json=sendAvail,proto3" json:"send_avail,omitempty"`
	NodeEventCliInfo       int32    `protobuf:"zigzag32,17,opt,name=node_event_cli_info,json=nodeEventCliInfo,proto3" json:"node_event_cli_info,omitempty"`
	NodeRedundancyState    string   `protobuf:"bytes,18,opt,name=node_redundancy_state,json=nodeRedundancyState,proto3" json:"node_redundancy_state,omitempty"`
	RoleEventCliInfo       int32    `protobuf:"zigzag32,19,opt,name=role_event_cli_info,json=roleEventCliInfo,proto3" json:"role_event_cli_info,omitempty"`
	ProcRoleState          string   `protobuf:"bytes,20,opt,name=proc_role_state,json=procRoleState,proto3" json:"proc_role_state,omitempty"`
	StandbyEventCliInfo    int32    `protobuf:"zigzag32,21,opt,name=standby_event_cli_info,json=standbyEventCliInfo,proto3" json:"standby_event_cli_info,omitempty"`
	CleanupEventCliInfo    int32    `protobuf:"zigzag32,22,opt,name=cleanup_event_cli_info,json=cleanupEventCliInfo,proto3" json:"cleanup_event_cli_info,omitempty"`
	BandReadyEventCliInfo  int32    `protobuf:"zigzag32,23,opt,name=band_ready_event_cli_info,json=bandReadyEventCliInfo,proto3" json:"band_ready_event_cli_info,omitempty"`
	LrEventCliInfo         int32    `protobuf:"zigzag32,24,opt,name=lr_event_cli_info,json=lrEventCliInfo,proto3" json:"lr_event_cli_info,omitempty"`
	PlaneReadyEventCliInfo int32    `protobuf:"zigzag32,25,opt,name=plane_ready_event_cli_info,json=planeReadyEventCliInfo,proto3" json:"plane_ready_event_cli_info,omitempty"`
	MdrIsDoneCliInfo       int32    `protobuf:"zigzag32,26,opt,name=mdr_is_done_cli_info,json=mdrIsDoneCliInfo,proto3" json:"mdr_is_done_cli_info,omitempty"`
	XXX_NoUnkeyedLiteral   struct{} `json:"-"`
	XXX_unrecognized       []byte   `json:"-"`
	XXX_sizecache          int32    `json:"-"`
}

func (m *ProcDetailInfo) Reset()         { *m = ProcDetailInfo{} }
func (m *ProcDetailInfo) String() string { return proto.CompactTextString(m) }
func (*ProcDetailInfo) ProtoMessage()    {}
func (*ProcDetailInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9253ea820adf502, []int{4}
}

func (m *ProcDetailInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProcDetailInfo.Unmarshal(m, b)
}
func (m *ProcDetailInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProcDetailInfo.Marshal(b, m, deterministic)
}
func (m *ProcDetailInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProcDetailInfo.Merge(m, src)
}
func (m *ProcDetailInfo) XXX_Size() int {
	return xxx_messageInfo_ProcDetailInfo.Size(m)
}
func (m *ProcDetailInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_ProcDetailInfo.DiscardUnknown(m)
}

var xxx_messageInfo_ProcDetailInfo proto.InternalMessageInfo

func (m *ProcDetailInfo) GetRunningPath() string {
	if m != nil {
		return m.RunningPath
	}
	return ""
}

func (m *ProcDetailInfo) GetPackagePath() string {
	if m != nil {
		return m.PackagePath
	}
	return ""
}

func (m *ProcDetailInfo) GetJobIdLink() int32 {
	if m != nil {
		return m.JobIdLink
	}
	return 0
}

func (m *ProcDetailInfo) GetGroupJid() string {
	if m != nil {
		return m.GroupJid
	}
	return ""
}

func (m *ProcDetailInfo) GetFailCount() uint32 {
	if m != nil {
		return m.FailCount
	}
	return 0
}

func (m *ProcDetailInfo) GetRestartNeeded() bool {
	if m != nil {
		return m.RestartNeeded
	}
	return false
}

func (m *ProcDetailInfo) GetInitProcess() bool {
	if m != nil {
		return m.InitProcess
	}
	return false
}

func (m *ProcDetailInfo) GetLastOnline() string {
	if m != nil {
		return m.LastOnline
	}
	return ""
}

func (m *ProcDetailInfo) GetThisPcb() string {
	if m != nil {
		return m.ThisPcb
	}
	return ""
}

func (m *ProcDetailInfo) GetNextPcb() string {
	if m != nil {
		return m.NextPcb
	}
	return ""
}

func (m *ProcDetailInfo) GetEnvs() string {
	if m != nil {
		return m.Envs
	}
	return ""
}

func (m *ProcDetailInfo) GetWaitFor() string {
	if m != nil {
		return m.WaitFor
	}
	return ""
}

func (m *ProcDetailInfo) GetJobIdOnRp() int32 {
	if m != nil {
		return m.JobIdOnRp
	}
	return 0
}

func (m *ProcDetailInfo) GetIsStandbyCapable() bool {
	if m != nil {
		return m.IsStandbyCapable
	}
	return false
}

func (m *ProcDetailInfo) GetDisableKill() bool {
	if m != nil {
		return m.DisableKill
	}
	return false
}

func (m *ProcDetailInfo) GetSendAvail() bool {
	if m != nil {
		return m.SendAvail
	}
	return false
}

func (m *ProcDetailInfo) GetNodeEventCliInfo() int32 {
	if m != nil {
		return m.NodeEventCliInfo
	}
	return 0
}

func (m *ProcDetailInfo) GetNodeRedundancyState() string {
	if m != nil {
		return m.NodeRedundancyState
	}
	return ""
}

func (m *ProcDetailInfo) GetRoleEventCliInfo() int32 {
	if m != nil {
		return m.RoleEventCliInfo
	}
	return 0
}

func (m *ProcDetailInfo) GetProcRoleState() string {
	if m != nil {
		return m.ProcRoleState
	}
	return ""
}

func (m *ProcDetailInfo) GetStandbyEventCliInfo() int32 {
	if m != nil {
		return m.StandbyEventCliInfo
	}
	return 0
}

func (m *ProcDetailInfo) GetCleanupEventCliInfo() int32 {
	if m != nil {
		return m.CleanupEventCliInfo
	}
	return 0
}

func (m *ProcDetailInfo) GetBandReadyEventCliInfo() int32 {
	if m != nil {
		return m.BandReadyEventCliInfo
	}
	return 0
}

func (m *ProcDetailInfo) GetLrEventCliInfo() int32 {
	if m != nil {
		return m.LrEventCliInfo
	}
	return 0
}

func (m *ProcDetailInfo) GetPlaneReadyEventCliInfo() int32 {
	if m != nil {
		return m.PlaneReadyEventCliInfo
	}
	return 0
}

func (m *ProcDetailInfo) GetMdrIsDoneCliInfo() int32 {
	if m != nil {
		return m.MdrIsDoneCliInfo
	}
	return 0
}

type ProcVerboseInfo struct {
	Tuple                []*TupleInfo `protobuf:"bytes,1,rep,name=tuple,proto3" json:"tuple,omitempty"`
	OrigTuple            []*TupleInfo `protobuf:"bytes,2,rep,name=orig_tuple,json=origTuple,proto3" json:"orig_tuple,omitempty"`
	ProcessGroup         string       `protobuf:"bytes,3,opt,name=process_group,json=processGroup,proto3" json:"process_group,omitempty"`
	RespawnAllowed       int32        `protobuf:"zigzag32,4,opt,name=respawn_allowed,json=respawnAllowed,proto3" json:"respawn_allowed,omitempty"`
	WaitForExit          int32        `protobuf:"zigzag32,5,opt,name=wait_for_exit,json=waitForExit,proto3" json:"wait_for_exit,omitempty"`
	DynamicTag           int32        `protobuf:"zigzag32,6,opt,name=dynamic_tag,json=dynamicTag,proto3" json:"dynamic_tag,omitempty"`
	ForcedStop           int32        `protobuf:"zigzag32,7,opt,name=forced_stop,json=forcedStop,proto3" json:"forced_stop,omitempty"`
	CriticalProcess      int32        `protobuf:"zigzag32,8,opt,name=critical_process,json=criticalProcess,proto3" json:"critical_process,omitempty"`
	Hold                 int32        `protobuf:"zigzag32,9,opt,name=hold,proto3" json:"hold,omitempty"`
	Transient            int32        `protobuf:"zigzag32,10,opt,name=transient,proto3" json:"transient,omitempty"`
	TupleCfgmgr          int32        `protobuf:"zigzag32,11,opt,name=tuple_cfgmgr,json=tupleCfgmgr,proto3" json:"tuple_cfgmgr,omitempty"`
	StandbyCapable       int32        `protobuf:"zigzag32,12,opt,name=standby_capable,json=standbyCapable,proto3" json:"standby_capable,omitempty"`
	EdmStartup           int32        `protobuf:"zigzag32,13,opt,name=edm_startup,json=edmStartup,proto3" json:"edm_startup,omitempty"`
	Placement            int32        `protobuf:"zigzag32,14,opt,name=placement,proto3" json:"placement,omitempty"`
	SkipKillNotif        int32        `protobuf:"zigzag32,15,opt,name=skip_kill_notif,json=skipKillNotif,proto3" json:"skip_kill_notif,omitempty"`
	InitProc             int32        `protobuf:"zigzag32,16,opt,name=init_proc,json=initProc,proto3" json:"init_proc,omitempty"`
	SysdbEvent           int32        `protobuf:"zigzag32,17,opt,name=sysdb_event,json=sysdbEvent,proto3" json:"sysdb_event,omitempty"`
	LevelStarted         int32        `protobuf:"zigzag32,18,opt,name=level_started,json=levelStarted,proto3" json:"level_started,omitempty"`
	ProcAvail            int32        `protobuf:"zigzag32,19,opt,name=proc_avail,json=procAvail,proto3" json:"proc_avail,omitempty"`
	TuplesScanned        int32        `protobuf:"zigzag32,20,opt,name=tuples_scanned,json=tuplesScanned,proto3" json:"tuples_scanned,omitempty"`
	NoChkptStart         int32        `protobuf:"zigzag32,21,opt,name=no_chkpt_start,json=noChkptStart,proto3" json:"no_chkpt_start,omitempty"`
	InShutDown           int32        `protobuf:"zigzag32,22,opt,name=in_shut_down,json=inShutDown,proto3" json:"in_shut_down,omitempty"`
	SmStarted            int32        `protobuf:"zigzag32,23,opt,name=sm_started,json=smStarted,proto3" json:"sm_started,omitempty"`
	IgnoreOnSc           int32        `protobuf:"zigzag32,24,opt,name=ignore_on_sc,json=ignoreOnSc,proto3" json:"ignore_on_sc,omitempty"`
	IgnoreOnEasyBake     int32        `protobuf:"zigzag32,25,opt,name=ignore_on_easy_bake,json=ignoreOnEasyBake,proto3" json:"ignore_on_easy_bake,omitempty"`
	PreInit              int32        `protobuf:"zigzag32,26,opt,name=pre_init,json=preInit,proto3" json:"pre_init,omitempty"`
	EoiReceived          int32        `protobuf:"zigzag32,27,opt,name=eoi_received,json=eoiReceived,proto3" json:"eoi_received,omitempty"`
	EoiTimeout           int32        `protobuf:"zigzag32,28,opt,name=eoi_timeout,json=eoiTimeout,proto3" json:"eoi_timeout,omitempty"`
	AvailTimeout         int32        `protobuf:"zigzag32,29,opt,name=avail_timeout,json=availTimeout,proto3" json:"avail_timeout,omitempty"`
	ReservedMemory       int32        `protobuf:"zigzag32,30,opt,name=reserved_memory,json=reservedMemory,proto3" json:"reserved_memory,omitempty"`
	AllowWarned          int32        `protobuf:"zigzag32,31,opt,name=allow_warned,json=allowWarned,proto3" json:"allow_warned,omitempty"`
	ArgChange            int32        `protobuf:"zigzag32,32,opt,name=arg_change,json=argChange,proto3" json:"arg_change,omitempty"`
	RestartOnTuple       int32        `protobuf:"zigzag32,33,opt,name=restart_on_tuple,json=restartOnTuple,proto3" json:"restart_on_tuple,omitempty"`
	BootHold             int32        `protobuf:"zigzag32,34,opt,name=boot_hold,json=bootHold,proto3" json:"boot_hold,omitempty"`
	RegId                int32        `protobuf:"zigzag32,35,opt,name=reg_id,json=regId,proto3" json:"reg_id,omitempty"`
	MemoryLimit          int32        `protobuf:"zigzag32,36,opt,name=memory_limit,json=memoryLimit,proto3" json:"memory_limit,omitempty"`
	ParentJobId          int32        `protobuf:"zigzag32,37,opt,name=parent_job_id,json=parentJobId,proto3" json:"parent_job_id,omitempty"`
	TupleIndex           int32        `protobuf:"zigzag32,38,opt,name=tuple_index,json=tupleIndex,proto3" json:"tuple_index,omitempty"`
	DumpCount            int32        `protobuf:"zigzag32,39,opt,name=dump_count,json=dumpCount,proto3" json:"dump_count,omitempty"`
	RespawnIntervalUser  int32        `protobuf:"zigzag32,40,opt,name=respawn_interval_user,json=respawnIntervalUser,proto3" json:"respawn_interval_user,omitempty"`
	SilentRestartCount   int32        `protobuf:"zigzag32,41,opt,name=silent_restart_count,json=silentRestartCount,proto3" json:"silent_restart_count,omitempty"`
	CriticalTier         int32        `protobuf:"zigzag32,42,opt,name=critical_tier,json=criticalTier,proto3" json:"critical_tier,omitempty"`
	ExitType             int32        `protobuf:"zigzag32,43,opt,name=exit_type,json=exitType,proto3" json:"exit_type,omitempty"`
	InitTimeout          int32        `protobuf:"zigzag32,44,opt,name=init_timeout,json=initTimeout,proto3" json:"init_timeout,omitempty"`
	RestartByCmd         int32        `protobuf:"zigzag32,45,opt,name=restart_by_cmd,json=restartByCmd,proto3" json:"restart_by_cmd,omitempty"`
	BootPref             int32        `protobuf:"zigzag32,46,opt,name=boot_pref,json=bootPref,proto3" json:"boot_pref,omitempty"`
	MdrMbiProc           int32        `protobuf:"zigzag32,47,opt,name=mdr_mbi_proc,json=mdrMbiProc,proto3" json:"mdr_mbi_proc,omitempty"`
	MdrNonMbiKld         int32        `protobuf:"zigzag32,48,opt,name=mdr_non_mbi_kld,json=mdrNonMbiKld,proto3" json:"mdr_non_mbi_kld,omitempty"`
	MdrMbiKld            int32        `protobuf:"zigzag32,49,opt,name=mdr_mbi_kld,json=mdrMbiKld,proto3" json:"mdr_mbi_kld,omitempty"`
	MdrShutDelay         int32        `protobuf:"zigzag32,50,opt,name=mdr_shut_delay,json=mdrShutDelay,proto3" json:"mdr_shut_delay,omitempty"`
	MdrKeepThru          int32        `protobuf:"zigzag32,51,opt,name=mdr_keep_thru,json=mdrKeepThru,proto3" json:"mdr_keep_thru,omitempty"`
	MdrSpoofer           int32        `protobuf:"zigzag32,52,opt,name=mdr_spoofer,json=mdrSpoofer,proto3" json:"mdr_spoofer,omitempty"`
	MdrSpoofed           int32        `protobuf:"zigzag32,53,opt,name=mdr_spoofed,json=mdrSpoofed,proto3" json:"mdr_spoofed,omitempty"`
	MdrSpoofedLast       int32        `protobuf:"zigzag32,54,opt,name=mdr_spoofed_last,json=mdrSpoofedLast,proto3" json:"mdr_spoofed_last,omitempty"`
	MdrSpoofedReady      int32        `protobuf:"zigzag32,55,opt,name=mdr_spoofed_ready,json=mdrSpoofedReady,proto3" json:"mdr_spoofed_ready,omitempty"`
	MdrPcbCheck          int32        `protobuf:"zigzag32,56,opt,name=mdr_pcb_check,json=mdrPcbCheck,proto3" json:"mdr_pcb_check,omitempty"`
	MdrKillTier          int32        `protobuf:"zigzag32,57,opt,name=mdr_kill_tier,json=mdrKillTier,proto3" json:"mdr_kill_tier,omitempty"`
	MdrKld               int32        `protobuf:"zigzag32,58,opt,name=mdr_kld,json=mdrKld,proto3" json:"mdr_kld,omitempty"`
	MdrLevel             int32        `protobuf:"zigzag32,59,opt,name=mdr_level,json=mdrLevel,proto3" json:"mdr_level,omitempty"`
	FmRestartCnt         int32        `protobuf:"zigzag32,60,opt,name=fm_restart_cnt,json=fmRestartCnt,proto3" json:"fm_restart_cnt,omitempty"`
	SelfManaged          int32        `protobuf:"zigzag32,61,opt,name=self_managed,json=selfManaged,proto3" json:"self_managed,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *ProcVerboseInfo) Reset()         { *m = ProcVerboseInfo{} }
func (m *ProcVerboseInfo) String() string { return proto.CompactTextString(m) }
func (*ProcVerboseInfo) ProtoMessage()    {}
func (*ProcVerboseInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9253ea820adf502, []int{5}
}

func (m *ProcVerboseInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProcVerboseInfo.Unmarshal(m, b)
}
func (m *ProcVerboseInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProcVerboseInfo.Marshal(b, m, deterministic)
}
func (m *ProcVerboseInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProcVerboseInfo.Merge(m, src)
}
func (m *ProcVerboseInfo) XXX_Size() int {
	return xxx_messageInfo_ProcVerboseInfo.Size(m)
}
func (m *ProcVerboseInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_ProcVerboseInfo.DiscardUnknown(m)
}

var xxx_messageInfo_ProcVerboseInfo proto.InternalMessageInfo

func (m *ProcVerboseInfo) GetTuple() []*TupleInfo {
	if m != nil {
		return m.Tuple
	}
	return nil
}

func (m *ProcVerboseInfo) GetOrigTuple() []*TupleInfo {
	if m != nil {
		return m.OrigTuple
	}
	return nil
}

func (m *ProcVerboseInfo) GetProcessGroup() string {
	if m != nil {
		return m.ProcessGroup
	}
	return ""
}

func (m *ProcVerboseInfo) GetRespawnAllowed() int32 {
	if m != nil {
		return m.RespawnAllowed
	}
	return 0
}

func (m *ProcVerboseInfo) GetWaitForExit() int32 {
	if m != nil {
		return m.WaitForExit
	}
	return 0
}

func (m *ProcVerboseInfo) GetDynamicTag() int32 {
	if m != nil {
		return m.DynamicTag
	}
	return 0
}

func (m *ProcVerboseInfo) GetForcedStop() int32 {
	if m != nil {
		return m.ForcedStop
	}
	return 0
}

func (m *ProcVerboseInfo) GetCriticalProcess() int32 {
	if m != nil {
		return m.CriticalProcess
	}
	return 0
}

func (m *ProcVerboseInfo) GetHold() int32 {
	if m != nil {
		return m.Hold
	}
	return 0
}

func (m *ProcVerboseInfo) GetTransient() int32 {
	if m != nil {
		return m.Transient
	}
	return 0
}

func (m *ProcVerboseInfo) GetTupleCfgmgr() int32 {
	if m != nil {
		return m.TupleCfgmgr
	}
	return 0
}

func (m *ProcVerboseInfo) GetStandbyCapable() int32 {
	if m != nil {
		return m.StandbyCapable
	}
	return 0
}

func (m *ProcVerboseInfo) GetEdmStartup() int32 {
	if m != nil {
		return m.EdmStartup
	}
	return 0
}

func (m *ProcVerboseInfo) GetPlacement() int32 {
	if m != nil {
		return m.Placement
	}
	return 0
}

func (m *ProcVerboseInfo) GetSkipKillNotif() int32 {
	if m != nil {
		return m.SkipKillNotif
	}
	return 0
}

func (m *ProcVerboseInfo) GetInitProc() int32 {
	if m != nil {
		return m.InitProc
	}
	return 0
}

func (m *ProcVerboseInfo) GetSysdbEvent() int32 {
	if m != nil {
		return m.SysdbEvent
	}
	return 0
}

func (m *ProcVerboseInfo) GetLevelStarted() int32 {
	if m != nil {
		return m.LevelStarted
	}
	return 0
}

func (m *ProcVerboseInfo) GetProcAvail() int32 {
	if m != nil {
		return m.ProcAvail
	}
	return 0
}

func (m *ProcVerboseInfo) GetTuplesScanned() int32 {
	if m != nil {
		return m.TuplesScanned
	}
	return 0
}

func (m *ProcVerboseInfo) GetNoChkptStart() int32 {
	if m != nil {
		return m.NoChkptStart
	}
	return 0
}

func (m *ProcVerboseInfo) GetInShutDown() int32 {
	if m != nil {
		return m.InShutDown
	}
	return 0
}

func (m *ProcVerboseInfo) GetSmStarted() int32 {
	if m != nil {
		return m.SmStarted
	}
	return 0
}

func (m *ProcVerboseInfo) GetIgnoreOnSc() int32 {
	if m != nil {
		return m.IgnoreOnSc
	}
	return 0
}

func (m *ProcVerboseInfo) GetIgnoreOnEasyBake() int32 {
	if m != nil {
		return m.IgnoreOnEasyBake
	}
	return 0
}

func (m *ProcVerboseInfo) GetPreInit() int32 {
	if m != nil {
		return m.PreInit
	}
	return 0
}

func (m *ProcVerboseInfo) GetEoiReceived() int32 {
	if m != nil {
		return m.EoiReceived
	}
	return 0
}

func (m *ProcVerboseInfo) GetEoiTimeout() int32 {
	if m != nil {
		return m.EoiTimeout
	}
	return 0
}

func (m *ProcVerboseInfo) GetAvailTimeout() int32 {
	if m != nil {
		return m.AvailTimeout
	}
	return 0
}

func (m *ProcVerboseInfo) GetReservedMemory() int32 {
	if m != nil {
		return m.ReservedMemory
	}
	return 0
}

func (m *ProcVerboseInfo) GetAllowWarned() int32 {
	if m != nil {
		return m.AllowWarned
	}
	return 0
}

func (m *ProcVerboseInfo) GetArgChange() int32 {
	if m != nil {
		return m.ArgChange
	}
	return 0
}

func (m *ProcVerboseInfo) GetRestartOnTuple() int32 {
	if m != nil {
		return m.RestartOnTuple
	}
	return 0
}

func (m *ProcVerboseInfo) GetBootHold() int32 {
	if m != nil {
		return m.BootHold
	}
	return 0
}

func (m *ProcVerboseInfo) GetRegId() int32 {
	if m != nil {
		return m.RegId
	}
	return 0
}

func (m *ProcVerboseInfo) GetMemoryLimit() int32 {
	if m != nil {
		return m.MemoryLimit
	}
	return 0
}

func (m *ProcVerboseInfo) GetParentJobId() int32 {
	if m != nil {
		return m.ParentJobId
	}
	return 0
}

func (m *ProcVerboseInfo) GetTupleIndex() int32 {
	if m != nil {
		return m.TupleIndex
	}
	return 0
}

func (m *ProcVerboseInfo) GetDumpCount() int32 {
	if m != nil {
		return m.DumpCount
	}
	return 0
}

func (m *ProcVerboseInfo) GetRespawnIntervalUser() int32 {
	if m != nil {
		return m.RespawnIntervalUser
	}
	return 0
}

func (m *ProcVerboseInfo) GetSilentRestartCount() int32 {
	if m != nil {
		return m.SilentRestartCount
	}
	return 0
}

func (m *ProcVerboseInfo) GetCriticalTier() int32 {
	if m != nil {
		return m.CriticalTier
	}
	return 0
}

func (m *ProcVerboseInfo) GetExitType() int32 {
	if m != nil {
		return m.ExitType
	}
	return 0
}

func (m *ProcVerboseInfo) GetInitTimeout() int32 {
	if m != nil {
		return m.InitTimeout
	}
	return 0
}

func (m *ProcVerboseInfo) GetRestartByCmd() int32 {
	if m != nil {
		return m.RestartByCmd
	}
	return 0
}

func (m *ProcVerboseInfo) GetBootPref() int32 {
	if m != nil {
		return m.BootPref
	}
	return 0
}

func (m *ProcVerboseInfo) GetMdrMbiProc() int32 {
	if m != nil {
		return m.MdrMbiProc
	}
	return 0
}

func (m *ProcVerboseInfo) GetMdrNonMbiKld() int32 {
	if m != nil {
		return m.MdrNonMbiKld
	}
	return 0
}

func (m *ProcVerboseInfo) GetMdrMbiKld() int32 {
	if m != nil {
		return m.MdrMbiKld
	}
	return 0
}

func (m *ProcVerboseInfo) GetMdrShutDelay() int32 {
	if m != nil {
		return m.MdrShutDelay
	}
	return 0
}

func (m *ProcVerboseInfo) GetMdrKeepThru() int32 {
	if m != nil {
		return m.MdrKeepThru
	}
	return 0
}

func (m *ProcVerboseInfo) GetMdrSpoofer() int32 {
	if m != nil {
		return m.MdrSpoofer
	}
	return 0
}

func (m *ProcVerboseInfo) GetMdrSpoofed() int32 {
	if m != nil {
		return m.MdrSpoofed
	}
	return 0
}

func (m *ProcVerboseInfo) GetMdrSpoofedLast() int32 {
	if m != nil {
		return m.MdrSpoofedLast
	}
	return 0
}

func (m *ProcVerboseInfo) GetMdrSpoofedReady() int32 {
	if m != nil {
		return m.MdrSpoofedReady
	}
	return 0
}

func (m *ProcVerboseInfo) GetMdrPcbCheck() int32 {
	if m != nil {
		return m.MdrPcbCheck
	}
	return 0
}

func (m *ProcVerboseInfo) GetMdrKillTier() int32 {
	if m != nil {
		return m.MdrKillTier
	}
	return 0
}

func (m *ProcVerboseInfo) GetMdrKld() int32 {
	if m != nil {
		return m.MdrKld
	}
	return 0
}

func (m *ProcVerboseInfo) GetMdrLevel() int32 {
	if m != nil {
		return m.MdrLevel
	}
	return 0
}

func (m *ProcVerboseInfo) GetFmRestartCnt() int32 {
	if m != nil {
		return m.FmRestartCnt
	}
	return 0
}

func (m *ProcVerboseInfo) GetSelfManaged() int32 {
	if m != nil {
		return m.SelfManaged
	}
	return 0
}

type ProcBasicDetailVerboseInfo struct {
	BasicInfo            *ProcBasicInfo   `protobuf:"bytes,50,opt,name=basic_info,json=basicInfo,proto3" json:"basic_info,omitempty"`
	DetailInfo           *ProcDetailInfo  `protobuf:"bytes,51,opt,name=detail_info,json=detailInfo,proto3" json:"detail_info,omitempty"`
	VerboseInfo          *ProcVerboseInfo `protobuf:"bytes,52,opt,name=verbose_info,json=verboseInfo,proto3" json:"verbose_info,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *ProcBasicDetailVerboseInfo) Reset()         { *m = ProcBasicDetailVerboseInfo{} }
func (m *ProcBasicDetailVerboseInfo) String() string { return proto.CompactTextString(m) }
func (*ProcBasicDetailVerboseInfo) ProtoMessage()    {}
func (*ProcBasicDetailVerboseInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9253ea820adf502, []int{6}
}

func (m *ProcBasicDetailVerboseInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProcBasicDetailVerboseInfo.Unmarshal(m, b)
}
func (m *ProcBasicDetailVerboseInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProcBasicDetailVerboseInfo.Marshal(b, m, deterministic)
}
func (m *ProcBasicDetailVerboseInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProcBasicDetailVerboseInfo.Merge(m, src)
}
func (m *ProcBasicDetailVerboseInfo) XXX_Size() int {
	return xxx_messageInfo_ProcBasicDetailVerboseInfo.Size(m)
}
func (m *ProcBasicDetailVerboseInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_ProcBasicDetailVerboseInfo.DiscardUnknown(m)
}

var xxx_messageInfo_ProcBasicDetailVerboseInfo proto.InternalMessageInfo

func (m *ProcBasicDetailVerboseInfo) GetBasicInfo() *ProcBasicInfo {
	if m != nil {
		return m.BasicInfo
	}
	return nil
}

func (m *ProcBasicDetailVerboseInfo) GetDetailInfo() *ProcDetailInfo {
	if m != nil {
		return m.DetailInfo
	}
	return nil
}

func (m *ProcBasicDetailVerboseInfo) GetVerboseInfo() *ProcVerboseInfo {
	if m != nil {
		return m.VerboseInfo
	}
	return nil
}

func init() {
	proto.RegisterType((*ProcBasicDetailVerboseInfo_KEYS)(nil), "cisco_ios_xr_sysmgr_oper.system_process.node_table.node.name.process_name_verboses.process_name_verbose.proc_basic_detail_verbose_info_KEYS")
	proto.RegisterType((*TupleInfo)(nil), "cisco_ios_xr_sysmgr_oper.system_process.node_table.node.name.process_name_verboses.process_name_verbose.tuple_info")
	proto.RegisterType((*ProcCpuTime)(nil), "cisco_ios_xr_sysmgr_oper.system_process.node_table.node.name.process_name_verboses.process_name_verbose.proc_cpu_time")
	proto.RegisterType((*ProcBasicInfo)(nil), "cisco_ios_xr_sysmgr_oper.system_process.node_table.node.name.process_name_verboses.process_name_verbose.proc_basic_info")
	proto.RegisterType((*ProcDetailInfo)(nil), "cisco_ios_xr_sysmgr_oper.system_process.node_table.node.name.process_name_verboses.process_name_verbose.proc_detail_info")
	proto.RegisterType((*ProcVerboseInfo)(nil), "cisco_ios_xr_sysmgr_oper.system_process.node_table.node.name.process_name_verboses.process_name_verbose.proc_verbose_info")
	proto.RegisterType((*ProcBasicDetailVerboseInfo)(nil), "cisco_ios_xr_sysmgr_oper.system_process.node_table.node.name.process_name_verboses.process_name_verbose.proc_basic_detail_verbose_info")
}

func init() {
	proto.RegisterFile("proc_basic_detail_verbose_info.proto", fileDescriptor_f9253ea820adf502)
}

var fileDescriptor_f9253ea820adf502 = []byte{
	// 2248 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xc4, 0x58, 0xdb, 0x72, 0x1c, 0xb7,
	0xd1, 0xae, 0xb5, 0x0e, 0xdc, 0xc5, 0xf2, 0xb4, 0x43, 0x51, 0x1e, 0x49, 0x96, 0x44, 0xad, 0x28,
	0x89, 0xf2, 0x6f, 0xf1, 0x77, 0xa8, 0x1c, 0x1c, 0x27, 0xb9, 0xb0, 0xd7, 0x4a, 0x42, 0xeb, 0xc4,
	0x0c, 0xe9, 0x4a, 0x72, 0x85, 0xc2, 0x0e, 0xb0, 0xbb, 0xd0, 0xce, 0x00, 0x53, 0x00, 0x76, 0xc9,
	0xcd, 0x1b, 0x24, 0x97, 0xb9, 0x49, 0x95, 0x2b, 0x79, 0xa4, 0xbc, 0x46, 0x5e, 0x21, 0xb7, 0xa9,
	0xee, 0xc6, 0xec, 0x81, 0x76, 0xf9, 0x52, 0xbe, 0x1b, 0x7c, 0xdd, 0x68, 0x34, 0x1a, 0xdd, 0x1f,
	0x1a, 0xc3, 0xf6, 0x2b, 0x67, 0x73, 0xde, 0x17, 0x5e, 0xe7, 0x5c, 0xaa, 0x20, 0x74, 0xc1, 0xa7,
	0xca, 0xf5, 0xad, 0x57, 0x5c, 0x9b, 0x81, 0x3d, 0xac, 0x9c, 0x0d, 0x36, 0x19, 0xe6, 0xda, 0xe7,
	0x96, 0x6b, 0xeb, 0xf9, 0x85, 0xe3, 0x7e, 0xe6, 0xcb, 0xa1, 0xe3, 0xb6, 0x52, 0xee, 0xd0, 0xcf,
	0x7c, 0x50, 0x25, 0x07, 0x2b, 0xca, 0xfb, 0x43, 0x63, 0xa5, 0xe2, 0x41, 0xf4, 0x0b, 0x85, 0x9f,
	0x87, 0x46, 0x94, 0xea, 0x30, 0x0a, 0x39, 0x0c, 0x6a, 0xeb, 0xfe, 0x7b, 0xd1, 0x2e, 0x67, 0x0f,
	0x7f, 0xd8, 0x21, 0xfe, 0xf2, 0xc5, 0x9f, 0x4f, 0x93, 0x3b, 0xac, 0x85, 0x2b, 0xc1, 0xdc, 0xb4,
	0xb1, 0xd7, 0x38, 0x68, 0x65, 0x4d, 0x00, 0xde, 0x88, 0x52, 0x81, 0x10, 0x6d, 0xa0, 0xf0, 0x03,
	0x12, 0x02, 0x00, 0xc2, 0x6e, 0x97, 0xb1, 0x30, 0xa9, 0x0a, 0x32, 0x96, 0xdc, 0x60, 0xd7, 0x70,
	0x14, 0x6d, 0xd0, 0xa0, 0xfb, 0x07, 0xb6, 0x81, 0x06, 0xf2, 0x6a, 0xc2, 0x83, 0x2e, 0x55, 0x92,
	0xb0, 0xab, 0x13, 0xaf, 0x5c, 0xd4, 0xc2, 0xef, 0xe4, 0x26, 0xbb, 0x4e, 0x7b, 0x8f, 0x4b, 0xc4,
	0x11, 0x9a, 0xb4, 0x41, 0x14, 0xe9, 0x95, 0x68, 0x12, 0x06, 0xdd, 0xff, 0xb4, 0xd8, 0xd6, 0xd2,
	0xc6, 0x70, 0xf1, 0xdb, 0xac, 0xf5, 0xce, 0xf6, 0xb9, 0x96, 0xfc, 0x82, 0x4c, 0x6f, 0x64, 0x6b,
	0xef, 0x6c, 0xff, 0x58, 0xfe, 0xc9, 0x25, 0x77, 0x19, 0xab, 0xe3, 0xa3, 0x25, 0xae, 0xb0, 0x91,
	0xb5, 0x22, 0x72, 0x2c, 0x93, 0x07, 0x6c, 0x7d, 0x39, 0x7c, 0x71, 0xad, 0x76, 0xc4, 0x30, 0x0a,
	0xf7, 0x18, 0x53, 0x17, 0x2a, 0x9f, 0xe0, 0x61, 0xa4, 0x57, 0x51, 0x61, 0x09, 0x49, 0xee, 0xb3,
	0xb6, 0xc8, 0x83, 0x9e, 0x2a, 0x5e, 0x89, 0x30, 0x4a, 0xaf, 0x91, 0x02, 0x41, 0x27, 0x22, 0x8c,
	0x40, 0x41, 0x1b, 0x1f, 0x84, 0xc9, 0x15, 0xf8, 0x70, 0x7d, 0xaf, 0x71, 0xd0, 0xc9, 0x58, 0x0d,
	0x1d, 0x4b, 0x88, 0x8a, 0x70, 0x43, 0x9f, 0xae, 0x51, 0x54, 0xe0, 0x1b, 0xfc, 0x9e, 0x2a, 0xe7,
	0xb5, 0x35, 0x30, 0xa7, 0x89, 0x92, 0x56, 0x44, 0x8e, 0x65, 0x92, 0xb2, 0x35, 0xa7, 0x7c, 0x25,
	0xce, 0x4d, 0xda, 0x42, 0x59, 0x3d, 0x4c, 0x1e, 0xb2, 0x8d, 0xf8, 0xc9, 0x73, 0x3b, 0x31, 0x21,
	0x65, 0xb8, 0xde, 0x7a, 0x04, 0x7b, 0x80, 0xc1, 0xb6, 0x0b, 0xe1, 0x03, 0xf7, 0x41, 0xb8, 0xa0,
	0x64, 0xda, 0xa6, 0x6d, 0x03, 0x76, 0x4a, 0x10, 0xd8, 0xa9, 0x23, 0xe3, 0x83, 0x08, 0x2a, 0x5d,
	0x47, 0x9d, 0x3a, 0x5c, 0xa7, 0x80, 0x25, 0x07, 0x6c, 0x1b, 0xed, 0xa8, 0x0b, 0x8d, 0xc6, 0xc2,
	0xc4, 0xa7, 0x1b, 0xb8, 0xde, 0x26, 0xe0, 0x2f, 0x2e, 0x34, 0xd8, 0x0b, 0x13, 0xbf, 0xaa, 0xe9,
	0x94, 0xf0, 0xd6, 0xa4, 0x9b, 0x68, 0x71, 0xae, 0x99, 0x21, 0x8a, 0x0b, 0x8b, 0x7c, 0x2c, 0x86,
	0x2a, 0x2e, 0xbc, 0x15, 0x17, 0x26, 0x90, 0x16, 0xfe, 0x98, 0x75, 0xa2, 0xef, 0xdc, 0xc2, 0x46,
	0xcd, 0x40, 0x0f, 0xd3, 0x6d, 0x54, 0xdc, 0x8a, 0x82, 0xb7, 0xa6, 0x87, 0x70, 0xf2, 0xcf, 0x06,
	0xdb, 0x72, 0x6a, 0xa8, 0x7d, 0x50, 0x4e, 0x49, 0xae, 0x21, 0xd5, 0x3a, 0x7b, 0x57, 0x0e, 0xda,
	0x47, 0xfe, 0xf0, 0x3d, 0x95, 0xe3, 0xe1, 0xa2, 0x54, 0xb2, 0xcd, 0x85, 0x2f, 0xc7, 0x90, 0xe7,
	0x0f, 0xd8, 0xfa, 0x40, 0x89, 0x30, 0x71, 0xb1, 0x0a, 0x13, 0x3a, 0x8b, 0x88, 0x61, 0x0a, 0x6e,
	0xb3, 0x2b, 0x41, 0x0c, 0xd3, 0x1d, 0x94, 0xc0, 0x27, 0x14, 0xc7, 0xd0, 0xd9, 0x49, 0x95, 0xde,
	0xa0, 0xe2, 0xc0, 0x01, 0x24, 0x52, 0x6e, 0x9d, 0x4a, 0x77, 0x29, 0x91, 0xe0, 0x3b, 0xb9, 0xc5,
	0x9a, 0xa5, 0xb8, 0xe0, 0x88, 0xdf, 0xc4, 0xa3, 0x59, 0x2b, 0xc5, 0x45, 0x0f, 0x44, 0x37, 0xd8,
	0xb5, 0x42, 0x4d, 0x55, 0x91, 0x7e, 0x48, 0x46, 0x70, 0x90, 0x7c, 0xc4, 0x5a, 0xa5, 0x30, 0x52,
	0x04, 0xeb, 0x66, 0x69, 0xba, 0xd7, 0x38, 0x68, 0x66, 0x0b, 0x20, 0x79, 0xcc, 0xb6, 0x4a, 0xa1,
	0x4d, 0xe0, 0x25, 0x44, 0x04, 0xf6, 0x9a, 0xde, 0x42, 0x9d, 0x0d, 0x84, 0x5f, 0x5b, 0xa9, 0x4e,
	0x9c, 0xcd, 0x93, 0x27, 0x6c, 0xab, 0x2a, 0x44, 0xae, 0x4a, 0x65, 0x42, 0x3c, 0xc7, 0xdb, 0x74,
	0xdc, 0x73, 0x98, 0x4e, 0xb2, 0xcb, 0x36, 0xf0, 0xc0, 0xf8, 0xa4, 0xa2, 0x02, 0xba, 0x43, 0xfb,
	0x47, 0xf0, 0x9b, 0x0a, 0x2b, 0xe8, 0x01, 0x5b, 0x2f, 0x55, 0x69, 0xdd, 0x8c, 0x17, 0xba, 0xd4,
	0x21, 0xfd, 0x08, 0xcb, 0xb8, 0x4d, 0xd8, 0x2b, 0x80, 0x60, 0x2f, 0x4e, 0x09, 0x39, 0x4b, 0xef,
	0xd2, 0x5e, 0x70, 0x00, 0x7b, 0x11, 0x53, 0xa1, 0x0b, 0x2c, 0xdd, 0x7b, 0x54, 0x44, 0x73, 0x20,
	0xf9, 0xb6, 0x71, 0x89, 0x9f, 0xd2, 0xfb, 0x7b, 0x8d, 0x83, 0xf6, 0xd1, 0xf4, 0xbd, 0xa5, 0xc5,
	0xca, 0xea, 0x44, 0x3b, 0xbd, 0x6a, 0x72, 0xa6, 0x4b, 0xd5, 0xfd, 0x5b, 0x93, 0x6d, 0xa3, 0x38,
	0x72, 0x37, 0x32, 0xdd, 0x03, 0xb6, 0xee, 0x26, 0xc6, 0x68, 0x33, 0xa4, 0x58, 0x11, 0x8f, 0xb6,
	0x23, 0x56, 0xc7, 0xaa, 0x2e, 0x1f, 0x54, 0xf9, 0x20, 0x32, 0x1a, 0x61, 0xa8, 0x72, 0x8f, 0xb5,
	0x23, 0x5f, 0x16, 0xda, 0x8c, 0x91, 0xf3, 0x3a, 0x59, 0x0b, 0x19, 0xf3, 0x95, 0x36, 0x63, 0xe0,
	0x7d, 0xcc, 0x27, 0xfe, 0x4e, 0xcb, 0x48, 0x78, 0x4d, 0x04, 0xbe, 0xd6, 0x12, 0x88, 0x69, 0x00,
	0xfe, 0x10, 0xb9, 0x5c, 0x23, 0x42, 0x05, 0x84, 0x98, 0xe5, 0x11, 0xdb, 0x74, 0x8a, 0x0e, 0xd4,
	0x28, 0x25, 0x15, 0xf1, 0x5d, 0x33, 0xdb, 0x88, 0xe8, 0x1b, 0x04, 0xc1, 0x4b, 0x6d, 0x74, 0xa8,
	0x03, 0x89, 0xd4, 0xd7, 0xcc, 0xda, 0x80, 0x9d, 0x10, 0x04, 0xb4, 0x89, 0x8c, 0x61, 0x4d, 0xa1,
	0x8d, 0x8a, 0x14, 0xc8, 0x00, 0x7a, 0x8b, 0x08, 0x64, 0x76, 0x18, 0x69, 0xcf, 0xab, 0xbc, 0x5f,
	0x93, 0x20, 0x8c, 0x4f, 0xf2, 0x3e, 0x88, 0x8c, 0xba, 0x08, 0x28, 0x62, 0x24, 0x82, 0x31, 0x88,
	0x12, 0x76, 0x55, 0x99, 0xa9, 0x8f, 0x94, 0x87, 0xdf, 0xa0, 0x7e, 0x2e, 0x74, 0xe0, 0x03, 0xeb,
	0x22, 0xcd, 0xad, 0xc1, 0xf8, 0xb7, 0xd6, 0x25, 0xf7, 0xd9, 0x7a, 0x8c, 0x95, 0x35, 0xdc, 0x55,
	0x91, 0xdd, 0x28, 0x58, 0x6f, 0x4d, 0x56, 0x25, 0x9f, 0xb0, 0x44, 0x23, 0x45, 0x1a, 0xd9, 0x9f,
	0xf1, 0x5c, 0x54, 0x98, 0x6b, 0x9b, 0xb8, 0x9f, 0x6d, 0x0d, 0x3c, 0x09, 0x82, 0x1e, 0xe1, 0xb0,
	0x6f, 0xa9, 0x3d, 0x7c, 0xf2, 0xb1, 0x2e, 0x0a, 0xe4, 0xb6, 0x66, 0xd6, 0x8e, 0xd8, 0x4b, 0x5d,
	0x14, 0x10, 0x60, 0xaf, 0x8c, 0xe4, 0x98, 0xa7, 0xc8, 0x69, 0xcd, 0xac, 0x05, 0xc8, 0x17, 0x00,
	0x24, 0xcf, 0xd8, 0x0e, 0x66, 0x9d, 0x9a, 0x42, 0x65, 0xe5, 0x85, 0xc6, 0xcc, 0x48, 0x3b, 0xe8,
	0xd7, 0x36, 0x88, 0x5e, 0x80, 0xa4, 0x57, 0xe8, 0x63, 0xc8, 0x98, 0x23, 0xb6, 0x8b, 0xea, 0x4e,
	0xc9, 0x89, 0x91, 0xc2, 0xe4, 0xb3, 0x58, 0x8d, 0x44, 0x33, 0x68, 0x2b, 0x9b, 0xcb, 0xa8, 0x24,
	0x9f, 0xb1, 0x1d, 0x67, 0x8b, 0xef, 0x2c, 0xb1, 0x43, 0x4b, 0x80, 0x68, 0x65, 0x89, 0xc7, 0xf1,
	0x46, 0xc6, 0x39, 0x64, 0x9c, 0x58, 0x09, 0x8b, 0x2b, 0xb3, 0x45, 0xe4, 0xec, 0xe7, 0xec, 0x66,
	0x1d, 0xa6, 0x4b, 0x96, 0x77, 0xd1, 0xf2, 0x4e, 0x94, 0xae, 0x18, 0x7f, 0xce, 0x6e, 0xe6, 0x85,
	0x12, 0x66, 0x52, 0x5d, 0x9e, 0x44, 0x64, 0xb6, 0x13, 0xa5, 0x2b, 0x93, 0x3e, 0x63, 0xb7, 0xfa,
	0xc2, 0x48, 0x8e, 0x24, 0x70, 0x79, 0xde, 0x87, 0x38, 0x6f, 0x17, 0x14, 0x32, 0x90, 0xaf, 0xcc,
	0x7c, 0xca, 0x3a, 0x85, 0xbb, 0x3c, 0x23, 0x8d, 0x37, 0x9a, 0x5b, 0x51, 0xfd, 0x9c, 0xdd, 0xae,
	0x0a, 0x61, 0xd4, 0xf7, 0xaf, 0x72, 0x0b, 0xe7, 0xdc, 0x44, 0x8d, 0xef, 0x2e, 0x73, 0xc8, 0x6e,
	0x94, 0xd2, 0x71, 0xed, 0xb9, 0xb4, 0x46, 0x2d, 0x66, 0xdd, 0xa6, 0x10, 0x97, 0xd2, 0x1d, 0xfb,
	0xaf, 0xac, 0x51, 0x51, 0xbf, 0xfb, 0xef, 0x84, 0x75, 0x30, 0xc6, 0xcb, 0x1d, 0x5c, 0xf2, 0xd7,
	0xc6, 0xa2, 0xeb, 0xfa, 0xd1, 0xae, 0x33, 0xf2, 0x20, 0xf9, 0x7b, 0x83, 0x31, 0xeb, 0xf4, 0x90,
	0x93, 0x43, 0x1f, 0xfc, 0x78, 0x0e, 0xb5, 0xc0, 0x8d, 0x33, 0x74, 0x6a, 0xa9, 0x87, 0xa1, 0xdb,
	0xf2, 0xca, 0x4a, 0x0f, 0xf3, 0x3b, 0xbc, 0x34, 0x9f, 0x40, 0x77, 0x40, 0x0d, 0x93, 0x28, 0x0a,
	0x7b, 0xae, 0x88, 0xf3, 0x3a, 0x70, 0x51, 0x23, 0xfc, 0x05, 0xa1, 0x70, 0x53, 0xd5, 0x2c, 0x81,
	0x6d, 0x0c, 0x92, 0x5f, 0x27, 0x6b, 0x47, 0xaa, 0x80, 0x16, 0x06, 0x48, 0x4b, 0xce, 0x8c, 0x28,
	0x75, 0xce, 0xe1, 0xc6, 0x8e, 0xbd, 0x5e, 0x84, 0xce, 0xc4, 0x10, 0x14, 0x06, 0xd6, 0xe5, 0x4a,
	0x72, 0x1f, 0x6c, 0x85, 0xbc, 0xd7, 0xc9, 0x18, 0x41, 0xa7, 0xc1, 0x56, 0xc9, 0x53, 0xb6, 0x9d,
	0x3b, 0x1d, 0x74, 0x2e, 0x8a, 0x39, 0x3b, 0x36, 0x51, 0x6b, 0xab, 0xc6, 0x6b, 0x86, 0x4c, 0xd8,
	0xd5, 0x91, 0x2d, 0x24, 0x92, 0x5f, 0x27, 0xc3, 0x6f, 0xb8, 0xf1, 0x82, 0x13, 0xc6, 0x6b, 0x35,
	0x6f, 0xfd, 0x16, 0x00, 0xd0, 0x0f, 0x45, 0x2a, 0x1f, 0x0c, 0xcb, 0xa1, 0x43, 0x12, 0xec, 0x64,
	0x6d, 0xc4, 0x7a, 0x08, 0x41, 0x38, 0x2e, 0x93, 0xd9, 0x3a, 0x85, 0xc3, 0xaf, 0x52, 0xd9, 0x7d,
	0xd6, 0x56, 0xb2, 0xa4, 0x16, 0x72, 0x52, 0x13, 0x23, 0x53, 0xb2, 0x3c, 0x25, 0x04, 0x5c, 0x99,
	0xdf, 0xf5, 0x48, 0x88, 0x9d, 0x6c, 0x01, 0x00, 0x6b, 0xf8, 0xb1, 0xae, 0x90, 0x06, 0xb9, 0xb1,
	0x41, 0x0f, 0x90, 0x0c, 0x3b, 0xd9, 0x06, 0xc0, 0xc0, 0x84, 0x6f, 0x00, 0x84, 0xcb, 0x68, 0x7e,
	0x53, 0x20, 0x1b, 0x76, 0xb2, 0x66, 0x7d, 0x4d, 0x80, 0x0f, 0x7e, 0xe6, 0x65, 0x9f, 0xaa, 0x2f,
	0x92, 0x20, 0x43, 0x08, 0xeb, 0x0d, 0x32, 0x00, 0xbb, 0x9a, 0x79, 0xa7, 0x9b, 0x50, 0x37, 0x8c,
	0x60, 0xdd, 0xea, 0xc6, 0x37, 0x42, 0x64, 0xdc, 0x9d, 0xe8, 0xa9, 0xb3, 0x39, 0x31, 0xee, 0x23,
	0xb6, 0x89, 0x01, 0xf2, 0xdc, 0xe7, 0xc2, 0x18, 0x25, 0x91, 0xde, 0x3a, 0xd9, 0x06, 0xa1, 0xa7,
	0x04, 0x26, 0xfb, 0x6c, 0xd3, 0x58, 0x9e, 0x8f, 0xc6, 0x55, 0xec, 0xab, 0x23, 0xad, 0xad, 0x1b,
	0xdb, 0x03, 0x10, 0x57, 0x4b, 0xf6, 0xe0, 0xe2, 0xe3, 0x7e, 0x34, 0x09, 0x5c, 0xda, 0x73, 0x13,
	0x59, 0x8c, 0x69, 0x73, 0x3a, 0x9a, 0x84, 0xaf, 0xec, 0xb9, 0x41, 0xfe, 0x2f, 0xe7, 0xfe, 0x12,
	0x5b, 0xb5, 0x7c, 0x59, 0x3b, 0x0b, 0x06, 0x86, 0xc6, 0x3a, 0x05, 0x17, 0x92, 0xcf, 0x23, 0x39,
	0x31, 0xc2, 0xde, 0x9a, 0xd3, 0x1c, 0xe8, 0x7b, 0xa1, 0xa1, 0x84, 0x9f, 0xf1, 0xbe, 0x18, 0xab,
	0xc8, 0x48, 0xdb, 0xb5, 0xe2, 0x0b, 0xe1, 0x67, 0x5f, 0x8a, 0x31, 0x5e, 0xa3, 0x95, 0x83, 0xda,
	0xd1, 0x21, 0xf2, 0xcf, 0x5a, 0xe5, 0xd4, 0xb1, 0xd1, 0x98, 0x2e, 0xca, 0x6a, 0xee, 0x54, 0xae,
	0xf4, 0x54, 0x49, 0x6c, 0xcd, 0x3a, 0x59, 0x5b, 0x59, 0x9d, 0x45, 0x08, 0xb3, 0xc0, 0x6a, 0xec,
	0x5f, 0xec, 0x84, 0x3a, 0x33, 0xc8, 0x02, 0xab, 0xcf, 0x08, 0x81, 0x13, 0xc0, 0xb8, 0xce, 0x55,
	0xee, 0x52, 0x54, 0x10, 0xac, 0x95, 0xa8, 0x06, 0x95, 0x9b, 0x2a, 0xc9, 0xa9, 0xab, 0xc3, 0x6e,
	0x8d, 0x6a, 0x10, 0xe1, 0xd7, 0x88, 0x82, 0x47, 0x58, 0xa4, 0xfc, 0x5c, 0x38, 0x38, 0x89, 0xfb,
	0xe4, 0x11, 0x62, 0x7f, 0x44, 0x08, 0xe2, 0x27, 0xdc, 0x90, 0xe7, 0x23, 0x61, 0x86, 0x2a, 0xdd,
	0xa3, 0xf8, 0x09, 0x37, 0xec, 0x21, 0x00, 0x0f, 0x91, 0xba, 0x41, 0xb1, 0x26, 0xb2, 0xd5, 0x83,
	0xf9, 0x5a, 0x80, 0xbf, 0x35, 0xc4, 0x1e, 0x77, 0x58, 0xab, 0x6f, 0x6d, 0xe0, 0x58, 0x63, 0x5d,
	0xca, 0x3c, 0x00, 0x7e, 0x0f, 0x75, 0xb6, 0xcb, 0xae, 0x3b, 0x35, 0x84, 0xb7, 0xd9, 0x43, 0x94,
	0x5c, 0x73, 0x6a, 0x48, 0xef, 0xc9, 0x95, 0x4e, 0x75, 0x9f, 0xfc, 0x5b, 0xee, 0x54, 0xbb, 0xf0,
	0xbe, 0x71, 0x70, 0x59, 0x50, 0x63, 0x91, 0x3e, 0x22, 0x1d, 0x02, 0xbf, 0x86, 0xc6, 0x02, 0xa2,
	0x5a, 0x33, 0x9a, 0x54, 0x17, 0xe9, 0x63, 0x8a, 0x2a, 0x42, 0xc7, 0x80, 0xc0, 0x26, 0xe5, 0xa4,
	0xac, 0x62, 0x17, 0xf6, 0x84, 0x36, 0x09, 0x08, 0x75, 0x61, 0x47, 0x6c, 0xb7, 0xe6, 0x34, 0x6d,
	0x82, 0x72, 0x53, 0x51, 0x70, 0x7c, 0x78, 0x1f, 0xd0, 0xa5, 0x19, 0x85, 0xc7, 0x51, 0xf6, 0x0d,
	0xbc, 0xc3, 0x3f, 0x65, 0x37, 0xbc, 0x2e, 0xc0, 0xaf, 0x3a, 0x3e, 0x64, 0xfc, 0x29, 0x4e, 0x49,
	0x48, 0x96, 0x91, 0x88, 0x56, 0x79, 0xc8, 0x36, 0xe6, 0x54, 0x15, 0xb4, 0x72, 0xe9, 0xc7, 0x74,
	0xb4, 0x35, 0x78, 0xa6, 0x95, 0x83, 0x28, 0xe2, 0x9b, 0x2f, 0xcc, 0x2a, 0x95, 0xfe, 0x1f, 0x45,
	0x11, 0x80, 0xb3, 0x59, 0xa5, 0xe6, 0x6d, 0x60, 0x9d, 0x1b, 0x9f, 0x50, 0x28, 0x00, 0xab, 0x53,
	0x63, 0x7f, 0xd1, 0x50, 0x02, 0x25, 0x95, 0x32, 0x7d, 0x36, 0x7f, 0xd0, 0x02, 0xfa, 0xe5, 0xac,
	0x57, 0xca, 0xf9, 0x59, 0x55, 0x4e, 0x0d, 0xd2, 0xc3, 0xc5, 0x59, 0x9d, 0x38, 0x35, 0x80, 0x92,
	0x81, 0xdb, 0xb6, 0xec, 0x6b, 0x62, 0x91, 0xff, 0xa7, 0x70, 0x96, 0xd2, 0xbd, 0xee, 0x6b, 0xe4,
	0x91, 0x47, 0x6c, 0x0b, 0x34, 0x8c, 0x35, 0xa8, 0x35, 0x2e, 0x64, 0xfa, 0x29, 0xad, 0x52, 0x4a,
	0xf7, 0xc6, 0x9a, 0xd7, 0x7d, 0xfd, 0xb2, 0x90, 0xd0, 0x38, 0xd7, 0x86, 0x40, 0xe5, 0x27, 0x14,
	0x76, 0xb2, 0x03, 0xf2, 0x7d, 0xb6, 0x09, 0x72, 0xaa, 0x6e, 0x55, 0x88, 0x59, 0x7a, 0x34, 0xb7,
	0x82, 0xf5, 0x0d, 0x18, 0x24, 0x00, 0x68, 0x8d, 0x95, 0xaa, 0x78, 0x18, 0xb9, 0x49, 0xfa, 0x3c,
	0x26, 0x89, 0x74, 0x2f, 0x95, 0xaa, 0xce, 0x46, 0x6e, 0x02, 0x09, 0x80, 0x96, 0x2a, 0x6b, 0x07,
	0xca, 0xa5, 0x3f, 0x9d, 0x7b, 0x7c, 0x4a, 0xc8, 0xaa, 0x82, 0x4c, 0x7f, 0x76, 0x49, 0x41, 0x42,
	0x9e, 0x2f, 0x29, 0x70, 0xe8, 0x9b, 0xd3, 0x9f, 0x53, 0x9e, 0x2f, 0xb4, 0x5e, 0x09, 0x1f, 0xe0,
	0x2d, 0xbd, 0xac, 0x49, 0xcf, 0xa8, 0x5f, 0xd0, 0x95, 0xb3, 0x50, 0xc5, 0x26, 0xa6, 0xf6, 0xbd,
	0xca, 0xfb, 0x3c, 0x1f, 0xa9, 0x7c, 0x9c, 0x7e, 0x36, 0xf7, 0xfd, 0x24, 0xef, 0xf7, 0x00, 0x9a,
	0xef, 0x0f, 0x88, 0x1d, 0xd3, 0xe2, 0x97, 0x8b, 0xfd, 0xe9, 0x82, 0xb2, 0xe2, 0x43, 0xb6, 0x86,
	0x3a, 0x85, 0x4c, 0x3f, 0x47, 0xe9, 0x75, 0x90, 0x16, 0x78, 0x90, 0x20, 0xa0, 0x77, 0xe9, 0xaf,
	0xe8, 0x20, 0x4b, 0xe9, 0x5e, 0xe1, 0xd3, 0x74, 0x9f, 0x6d, 0x0e, 0xca, 0x45, 0x7a, 0x9a, 0x90,
	0xfe, 0x9a, 0xe2, 0x3b, 0x28, 0xeb, 0xc4, 0xa4, 0x4b, 0xce, 0xab, 0x62, 0xc0, 0x4b, 0x61, 0xc4,
	0x50, 0xc9, 0xf4, 0x37, 0xb4, 0x3c, 0x60, 0xaf, 0x09, 0xea, 0xfe, 0xf7, 0x0a, 0xbb, 0xf7, 0xc3,
	0xbf, 0xc7, 0x92, 0x7f, 0x34, 0x18, 0x5b, 0xfc, 0x63, 0xc2, 0x83, 0x6c, 0x1f, 0x5d, 0xbc, 0xdf,
	0x97, 0xe1, 0x62, 0xfd, 0xac, 0x85, 0xdf, 0xd8, 0x3c, 0x7e, 0xdb, 0x60, 0xed, 0xa5, 0x47, 0x21,
	0xa6, 0x4f, 0xfb, 0x68, 0xf6, 0x7e, 0x5d, 0x5b, 0x72, 0x20, 0x63, 0x34, 0x40, 0xe7, 0xfe, 0xd5,
	0x60, 0xeb, 0xcb, 0x71, 0xc4, 0xd4, 0x6d, 0x1f, 0xfd, 0xe5, 0xfd, 0x7a, 0xb7, 0xec, 0x41, 0xd6,
	0x8e, 0x23, 0xf0, 0xaf, 0x7f, 0x1d, 0xff, 0xc3, 0x3e, 0xff, 0x5f, 0x00, 0x00, 0x00, 0xff, 0xff,
	0xf0, 0xb4, 0x37, 0x04, 0xaf, 0x15, 0x00, 0x00,
}
