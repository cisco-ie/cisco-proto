/*
Copyright 2019 Cisco Systems

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proc_failover_info.proto

package cisco_ios_xr_sysmgr_oper_system_process_node_table_node_failover

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ProcFailoverInfo_KEYS struct {
	NodeName             string   `protobuf:"bytes,1,opt,name=node_name,json=nodeName,proto3" json:"node_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ProcFailoverInfo_KEYS) Reset()         { *m = ProcFailoverInfo_KEYS{} }
func (m *ProcFailoverInfo_KEYS) String() string { return proto.CompactTextString(m) }
func (*ProcFailoverInfo_KEYS) ProtoMessage()    {}
func (*ProcFailoverInfo_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_616fa9521629aea8, []int{0}
}

func (m *ProcFailoverInfo_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProcFailoverInfo_KEYS.Unmarshal(m, b)
}
func (m *ProcFailoverInfo_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProcFailoverInfo_KEYS.Marshal(b, m, deterministic)
}
func (m *ProcFailoverInfo_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProcFailoverInfo_KEYS.Merge(m, src)
}
func (m *ProcFailoverInfo_KEYS) XXX_Size() int {
	return xxx_messageInfo_ProcFailoverInfo_KEYS.Size(m)
}
func (m *ProcFailoverInfo_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_ProcFailoverInfo_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_ProcFailoverInfo_KEYS proto.InternalMessageInfo

func (m *ProcFailoverInfo_KEYS) GetNodeName() string {
	if m != nil {
		return m.NodeName
	}
	return ""
}

type BandStatsInfo struct {
	Level                string   `protobuf:"bytes,1,opt,name=level,proto3" json:"level,omitempty"`
	BandName             string   `protobuf:"bytes,2,opt,name=band_name,json=bandName,proto3" json:"band_name,omitempty"`
	BandFinishTime       string   `protobuf:"bytes,3,opt,name=band_finish_time,json=bandFinishTime,proto3" json:"band_finish_time,omitempty"`
	BandTime             string   `protobuf:"bytes,4,opt,name=band_time,json=bandTime,proto3" json:"band_time,omitempty"`
	FinishTime           string   `protobuf:"bytes,5,opt,name=finish_time,json=finishTime,proto3" json:"finish_time,omitempty"`
	IdlePercentage       string   `protobuf:"bytes,6,opt,name=idle_percentage,json=idlePercentage,proto3" json:"idle_percentage,omitempty"`
	Jid                  uint32   `protobuf:"varint,7,opt,name=jid,proto3" json:"jid,omitempty"`
	ReadyTime            string   `protobuf:"bytes,8,opt,name=ready_time,json=readyTime,proto3" json:"ready_time,omitempty"`
	LastProcess          string   `protobuf:"bytes,9,opt,name=last_process,json=lastProcess,proto3" json:"last_process,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BandStatsInfo) Reset()         { *m = BandStatsInfo{} }
func (m *BandStatsInfo) String() string { return proto.CompactTextString(m) }
func (*BandStatsInfo) ProtoMessage()    {}
func (*BandStatsInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_616fa9521629aea8, []int{1}
}

func (m *BandStatsInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BandStatsInfo.Unmarshal(m, b)
}
func (m *BandStatsInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BandStatsInfo.Marshal(b, m, deterministic)
}
func (m *BandStatsInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BandStatsInfo.Merge(m, src)
}
func (m *BandStatsInfo) XXX_Size() int {
	return xxx_messageInfo_BandStatsInfo.Size(m)
}
func (m *BandStatsInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_BandStatsInfo.DiscardUnknown(m)
}

var xxx_messageInfo_BandStatsInfo proto.InternalMessageInfo

func (m *BandStatsInfo) GetLevel() string {
	if m != nil {
		return m.Level
	}
	return ""
}

func (m *BandStatsInfo) GetBandName() string {
	if m != nil {
		return m.BandName
	}
	return ""
}

func (m *BandStatsInfo) GetBandFinishTime() string {
	if m != nil {
		return m.BandFinishTime
	}
	return ""
}

func (m *BandStatsInfo) GetBandTime() string {
	if m != nil {
		return m.BandTime
	}
	return ""
}

func (m *BandStatsInfo) GetFinishTime() string {
	if m != nil {
		return m.FinishTime
	}
	return ""
}

func (m *BandStatsInfo) GetIdlePercentage() string {
	if m != nil {
		return m.IdlePercentage
	}
	return ""
}

func (m *BandStatsInfo) GetJid() uint32 {
	if m != nil {
		return m.Jid
	}
	return 0
}

func (m *BandStatsInfo) GetReadyTime() string {
	if m != nil {
		return m.ReadyTime
	}
	return ""
}

func (m *BandStatsInfo) GetLastProcess() string {
	if m != nil {
		return m.LastProcess
	}
	return ""
}

type ActiveBootedProcessInfo struct {
	ActiveTimeStamp      string   `protobuf:"bytes,1,opt,name=active_time_stamp,json=activeTimeStamp,proto3" json:"active_time_stamp,omitempty"`
	GoActive             string   `protobuf:"bytes,2,opt,name=go_active,json=goActive,proto3" json:"go_active,omitempty"`
	Level                string   `protobuf:"bytes,3,opt,name=level,proto3" json:"level,omitempty"`
	BandName             string   `protobuf:"bytes,4,opt,name=band_name,json=bandName,proto3" json:"band_name,omitempty"`
	JobId                int32    `protobuf:"zigzag32,5,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"`
	InstanceId           int32    `protobuf:"zigzag32,6,opt,name=instance_id,json=instanceId,proto3" json:"instance_id,omitempty"`
	AvailTimeStamp       string   `protobuf:"bytes,7,opt,name=avail_time_stamp,json=availTimeStamp,proto3" json:"avail_time_stamp,omitempty"`
	Avail                string   `protobuf:"bytes,8,opt,name=avail,proto3" json:"avail,omitempty"`
	IsAvailTimeout       bool     `protobuf:"varint,9,opt,name=is_avail_timeout,json=isAvailTimeout,proto3" json:"is_avail_timeout,omitempty"`
	ProcessName          string   `protobuf:"bytes,10,opt,name=process_name,json=processName,proto3" json:"process_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ActiveBootedProcessInfo) Reset()         { *m = ActiveBootedProcessInfo{} }
func (m *ActiveBootedProcessInfo) String() string { return proto.CompactTextString(m) }
func (*ActiveBootedProcessInfo) ProtoMessage()    {}
func (*ActiveBootedProcessInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_616fa9521629aea8, []int{2}
}

func (m *ActiveBootedProcessInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ActiveBootedProcessInfo.Unmarshal(m, b)
}
func (m *ActiveBootedProcessInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ActiveBootedProcessInfo.Marshal(b, m, deterministic)
}
func (m *ActiveBootedProcessInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ActiveBootedProcessInfo.Merge(m, src)
}
func (m *ActiveBootedProcessInfo) XXX_Size() int {
	return xxx_messageInfo_ActiveBootedProcessInfo.Size(m)
}
func (m *ActiveBootedProcessInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_ActiveBootedProcessInfo.DiscardUnknown(m)
}

var xxx_messageInfo_ActiveBootedProcessInfo proto.InternalMessageInfo

func (m *ActiveBootedProcessInfo) GetActiveTimeStamp() string {
	if m != nil {
		return m.ActiveTimeStamp
	}
	return ""
}

func (m *ActiveBootedProcessInfo) GetGoActive() string {
	if m != nil {
		return m.GoActive
	}
	return ""
}

func (m *ActiveBootedProcessInfo) GetLevel() string {
	if m != nil {
		return m.Level
	}
	return ""
}

func (m *ActiveBootedProcessInfo) GetBandName() string {
	if m != nil {
		return m.BandName
	}
	return ""
}

func (m *ActiveBootedProcessInfo) GetJobId() int32 {
	if m != nil {
		return m.JobId
	}
	return 0
}

func (m *ActiveBootedProcessInfo) GetInstanceId() int32 {
	if m != nil {
		return m.InstanceId
	}
	return 0
}

func (m *ActiveBootedProcessInfo) GetAvailTimeStamp() string {
	if m != nil {
		return m.AvailTimeStamp
	}
	return ""
}

func (m *ActiveBootedProcessInfo) GetAvail() string {
	if m != nil {
		return m.Avail
	}
	return ""
}

func (m *ActiveBootedProcessInfo) GetIsAvailTimeout() bool {
	if m != nil {
		return m.IsAvailTimeout
	}
	return false
}

func (m *ActiveBootedProcessInfo) GetProcessName() string {
	if m != nil {
		return m.ProcessName
	}
	return ""
}

type BootedProcessInfo struct {
	StartTimeStamp       string   `protobuf:"bytes,1,opt,name=start_time_stamp,json=startTimeStamp,proto3" json:"start_time_stamp,omitempty"`
	Started              string   `protobuf:"bytes,2,opt,name=started,proto3" json:"started,omitempty"`
	Level                string   `protobuf:"bytes,3,opt,name=level,proto3" json:"level,omitempty"`
	Jid                  int32    `protobuf:"zigzag32,4,opt,name=jid,proto3" json:"jid,omitempty"`
	InstanceId           int32    `protobuf:"zigzag32,5,opt,name=instance_id,json=instanceId,proto3" json:"instance_id,omitempty"`
	ReadyTimeStamp       string   `protobuf:"bytes,6,opt,name=ready_time_stamp,json=readyTimeStamp,proto3" json:"ready_time_stamp,omitempty"`
	Ready                string   `protobuf:"bytes,7,opt,name=ready,proto3" json:"ready,omitempty"`
	IsEoiTimeout         bool     `protobuf:"varint,8,opt,name=is_eoi_timeout,json=isEoiTimeout,proto3" json:"is_eoi_timeout,omitempty"`
	ProcessName          string   `protobuf:"bytes,9,opt,name=process_name,json=processName,proto3" json:"process_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BootedProcessInfo) Reset()         { *m = BootedProcessInfo{} }
func (m *BootedProcessInfo) String() string { return proto.CompactTextString(m) }
func (*BootedProcessInfo) ProtoMessage()    {}
func (*BootedProcessInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_616fa9521629aea8, []int{3}
}

func (m *BootedProcessInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BootedProcessInfo.Unmarshal(m, b)
}
func (m *BootedProcessInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BootedProcessInfo.Marshal(b, m, deterministic)
}
func (m *BootedProcessInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BootedProcessInfo.Merge(m, src)
}
func (m *BootedProcessInfo) XXX_Size() int {
	return xxx_messageInfo_BootedProcessInfo.Size(m)
}
func (m *BootedProcessInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_BootedProcessInfo.DiscardUnknown(m)
}

var xxx_messageInfo_BootedProcessInfo proto.InternalMessageInfo

func (m *BootedProcessInfo) GetStartTimeStamp() string {
	if m != nil {
		return m.StartTimeStamp
	}
	return ""
}

func (m *BootedProcessInfo) GetStarted() string {
	if m != nil {
		return m.Started
	}
	return ""
}

func (m *BootedProcessInfo) GetLevel() string {
	if m != nil {
		return m.Level
	}
	return ""
}

func (m *BootedProcessInfo) GetJid() int32 {
	if m != nil {
		return m.Jid
	}
	return 0
}

func (m *BootedProcessInfo) GetInstanceId() int32 {
	if m != nil {
		return m.InstanceId
	}
	return 0
}

func (m *BootedProcessInfo) GetReadyTimeStamp() string {
	if m != nil {
		return m.ReadyTimeStamp
	}
	return ""
}

func (m *BootedProcessInfo) GetReady() string {
	if m != nil {
		return m.Ready
	}
	return ""
}

func (m *BootedProcessInfo) GetIsEoiTimeout() bool {
	if m != nil {
		return m.IsEoiTimeout
	}
	return false
}

func (m *BootedProcessInfo) GetProcessName() string {
	if m != nil {
		return m.ProcessName
	}
	return ""
}

type PrimBootedProcessInfo struct {
	PrimTimeStamp        string   `protobuf:"bytes,1,opt,name=prim_time_stamp,json=primTimeStamp,proto3" json:"prim_time_stamp,omitempty"`
	GoPrimary            string   `protobuf:"bytes,2,opt,name=go_primary,json=goPrimary,proto3" json:"go_primary,omitempty"`
	Level                string   `protobuf:"bytes,3,opt,name=level,proto3" json:"level,omitempty"`
	BandName             string   `protobuf:"bytes,4,opt,name=band_name,json=bandName,proto3" json:"band_name,omitempty"`
	Jid                  int32    `protobuf:"zigzag32,5,opt,name=jid,proto3" json:"jid,omitempty"`
	InstanceId           int32    `protobuf:"zigzag32,6,opt,name=instance_id,json=instanceId,proto3" json:"instance_id,omitempty"`
	AvailTimeStamp       string   `protobuf:"bytes,7,opt,name=avail_time_stamp,json=availTimeStamp,proto3" json:"avail_time_stamp,omitempty"`
	Avail                string   `protobuf:"bytes,8,opt,name=avail,proto3" json:"avail,omitempty"`
	IsAvailTimeout       bool     `protobuf:"varint,9,opt,name=is_avail_timeout,json=isAvailTimeout,proto3" json:"is_avail_timeout,omitempty"`
	ProcessName          string   `protobuf:"bytes,10,opt,name=process_name,json=processName,proto3" json:"process_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PrimBootedProcessInfo) Reset()         { *m = PrimBootedProcessInfo{} }
func (m *PrimBootedProcessInfo) String() string { return proto.CompactTextString(m) }
func (*PrimBootedProcessInfo) ProtoMessage()    {}
func (*PrimBootedProcessInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_616fa9521629aea8, []int{4}
}

func (m *PrimBootedProcessInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PrimBootedProcessInfo.Unmarshal(m, b)
}
func (m *PrimBootedProcessInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PrimBootedProcessInfo.Marshal(b, m, deterministic)
}
func (m *PrimBootedProcessInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PrimBootedProcessInfo.Merge(m, src)
}
func (m *PrimBootedProcessInfo) XXX_Size() int {
	return xxx_messageInfo_PrimBootedProcessInfo.Size(m)
}
func (m *PrimBootedProcessInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_PrimBootedProcessInfo.DiscardUnknown(m)
}

var xxx_messageInfo_PrimBootedProcessInfo proto.InternalMessageInfo

func (m *PrimBootedProcessInfo) GetPrimTimeStamp() string {
	if m != nil {
		return m.PrimTimeStamp
	}
	return ""
}

func (m *PrimBootedProcessInfo) GetGoPrimary() string {
	if m != nil {
		return m.GoPrimary
	}
	return ""
}

func (m *PrimBootedProcessInfo) GetLevel() string {
	if m != nil {
		return m.Level
	}
	return ""
}

func (m *PrimBootedProcessInfo) GetBandName() string {
	if m != nil {
		return m.BandName
	}
	return ""
}

func (m *PrimBootedProcessInfo) GetJid() int32 {
	if m != nil {
		return m.Jid
	}
	return 0
}

func (m *PrimBootedProcessInfo) GetInstanceId() int32 {
	if m != nil {
		return m.InstanceId
	}
	return 0
}

func (m *PrimBootedProcessInfo) GetAvailTimeStamp() string {
	if m != nil {
		return m.AvailTimeStamp
	}
	return ""
}

func (m *PrimBootedProcessInfo) GetAvail() string {
	if m != nil {
		return m.Avail
	}
	return ""
}

func (m *PrimBootedProcessInfo) GetIsAvailTimeout() bool {
	if m != nil {
		return m.IsAvailTimeout
	}
	return false
}

func (m *PrimBootedProcessInfo) GetProcessName() string {
	if m != nil {
		return m.ProcessName
	}
	return ""
}

type ProcFailoverInfo struct {
	FailoverLog                 string                     `protobuf:"bytes,50,opt,name=failover_log,json=failoverLog,proto3" json:"failover_log,omitempty"`
	StandbyBandStatistic        []*BandStatsInfo           `protobuf:"bytes,51,rep,name=standby_band_statistic,json=standbyBandStatistic,proto3" json:"standby_band_statistic,omitempty"`
	ActiveBandStatistic         []*BandStatsInfo           `protobuf:"bytes,52,rep,name=active_band_statistic,json=activeBandStatistic,proto3" json:"active_band_statistic,omitempty"`
	CriticalFailoverElapsedTime string                     `protobuf:"bytes,53,opt,name=critical_failover_elapsed_time,json=criticalFailoverElapsedTime,proto3" json:"critical_failover_elapsed_time,omitempty"`
	ActiveTsBootProc            []*ActiveBootedProcessInfo `protobuf:"bytes,54,rep,name=active_ts_boot_proc,json=activeTsBootProc,proto3" json:"active_ts_boot_proc,omitempty"`
	StartTsBootProc             []*BootedProcessInfo       `protobuf:"bytes,55,rep,name=start_ts_boot_proc,json=startTsBootProc,proto3" json:"start_ts_boot_proc,omitempty"`
	LastProcessStarted          string                     `protobuf:"bytes,56,opt,name=last_process_started,json=lastProcessStarted,proto3" json:"last_process_started,omitempty"`
	PrimaryBandStatistic        []*BandStatsInfo           `protobuf:"bytes,57,rep,name=primary_band_statistic,json=primaryBandStatistic,proto3" json:"primary_band_statistic,omitempty"`
	PrimaryFailoverElapsedTime  string                     `protobuf:"bytes,58,opt,name=primary_failover_elapsed_time,json=primaryFailoverElapsedTime,proto3" json:"primary_failover_elapsed_time,omitempty"`
	PrimaryTsBootProc           []*PrimBootedProcessInfo   `protobuf:"bytes,59,rep,name=primary_ts_boot_proc,json=primaryTsBootProc,proto3" json:"primary_ts_boot_proc,omitempty"`
	PrimaryStartTsBootProc      []*BootedProcessInfo       `protobuf:"bytes,60,rep,name=primary_start_ts_boot_proc,json=primaryStartTsBootProc,proto3" json:"primary_start_ts_boot_proc,omitempty"`
	LastPrimaryProcStarted      string                     `protobuf:"bytes,61,opt,name=last_primary_proc_started,json=lastPrimaryProcStarted,proto3" json:"last_primary_proc_started,omitempty"`
	XXX_NoUnkeyedLiteral        struct{}                   `json:"-"`
	XXX_unrecognized            []byte                     `json:"-"`
	XXX_sizecache               int32                      `json:"-"`
}

func (m *ProcFailoverInfo) Reset()         { *m = ProcFailoverInfo{} }
func (m *ProcFailoverInfo) String() string { return proto.CompactTextString(m) }
func (*ProcFailoverInfo) ProtoMessage()    {}
func (*ProcFailoverInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_616fa9521629aea8, []int{5}
}

func (m *ProcFailoverInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProcFailoverInfo.Unmarshal(m, b)
}
func (m *ProcFailoverInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProcFailoverInfo.Marshal(b, m, deterministic)
}
func (m *ProcFailoverInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProcFailoverInfo.Merge(m, src)
}
func (m *ProcFailoverInfo) XXX_Size() int {
	return xxx_messageInfo_ProcFailoverInfo.Size(m)
}
func (m *ProcFailoverInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_ProcFailoverInfo.DiscardUnknown(m)
}

var xxx_messageInfo_ProcFailoverInfo proto.InternalMessageInfo

func (m *ProcFailoverInfo) GetFailoverLog() string {
	if m != nil {
		return m.FailoverLog
	}
	return ""
}

func (m *ProcFailoverInfo) GetStandbyBandStatistic() []*BandStatsInfo {
	if m != nil {
		return m.StandbyBandStatistic
	}
	return nil
}

func (m *ProcFailoverInfo) GetActiveBandStatistic() []*BandStatsInfo {
	if m != nil {
		return m.ActiveBandStatistic
	}
	return nil
}

func (m *ProcFailoverInfo) GetCriticalFailoverElapsedTime() string {
	if m != nil {
		return m.CriticalFailoverElapsedTime
	}
	return ""
}

func (m *ProcFailoverInfo) GetActiveTsBootProc() []*ActiveBootedProcessInfo {
	if m != nil {
		return m.ActiveTsBootProc
	}
	return nil
}

func (m *ProcFailoverInfo) GetStartTsBootProc() []*BootedProcessInfo {
	if m != nil {
		return m.StartTsBootProc
	}
	return nil
}

func (m *ProcFailoverInfo) GetLastProcessStarted() string {
	if m != nil {
		return m.LastProcessStarted
	}
	return ""
}

func (m *ProcFailoverInfo) GetPrimaryBandStatistic() []*BandStatsInfo {
	if m != nil {
		return m.PrimaryBandStatistic
	}
	return nil
}

func (m *ProcFailoverInfo) GetPrimaryFailoverElapsedTime() string {
	if m != nil {
		return m.PrimaryFailoverElapsedTime
	}
	return ""
}

func (m *ProcFailoverInfo) GetPrimaryTsBootProc() []*PrimBootedProcessInfo {
	if m != nil {
		return m.PrimaryTsBootProc
	}
	return nil
}

func (m *ProcFailoverInfo) GetPrimaryStartTsBootProc() []*BootedProcessInfo {
	if m != nil {
		return m.PrimaryStartTsBootProc
	}
	return nil
}

func (m *ProcFailoverInfo) GetLastPrimaryProcStarted() string {
	if m != nil {
		return m.LastPrimaryProcStarted
	}
	return ""
}

func init() {
	proto.RegisterType((*ProcFailoverInfo_KEYS)(nil), "cisco_ios_xr_sysmgr_oper.system_process.node_table.node.failover.proc_failover_info_KEYS")
	proto.RegisterType((*BandStatsInfo)(nil), "cisco_ios_xr_sysmgr_oper.system_process.node_table.node.failover.band_stats_info")
	proto.RegisterType((*ActiveBootedProcessInfo)(nil), "cisco_ios_xr_sysmgr_oper.system_process.node_table.node.failover.active_booted_process_info")
	proto.RegisterType((*BootedProcessInfo)(nil), "cisco_ios_xr_sysmgr_oper.system_process.node_table.node.failover.booted_process_info")
	proto.RegisterType((*PrimBootedProcessInfo)(nil), "cisco_ios_xr_sysmgr_oper.system_process.node_table.node.failover.prim_booted_process_info")
	proto.RegisterType((*ProcFailoverInfo)(nil), "cisco_ios_xr_sysmgr_oper.system_process.node_table.node.failover.proc_failover_info")
}

func init() { proto.RegisterFile("proc_failover_info.proto", fileDescriptor_616fa9521629aea8) }

var fileDescriptor_616fa9521629aea8 = []byte{
	// 858 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xcc, 0x96, 0x5d, 0x6b, 0x33, 0x45,
	0x14, 0xc7, 0xd9, 0xa4, 0x49, 0x93, 0xd3, 0x36, 0x49, 0xb7, 0x69, 0x5d, 0x5b, 0xaa, 0xb5, 0x88,
	0x06, 0x2f, 0x82, 0xb4, 0x5a, 0xad, 0x2f, 0x60, 0x2b, 0x2d, 0x14, 0x45, 0x6a, 0xa2, 0x17, 0x8a,
	0x30, 0x4c, 0x76, 0x27, 0xeb, 0x94, 0xdd, 0x9d, 0xb0, 0x33, 0x0d, 0xe6, 0x56, 0x10, 0x2f, 0xbc,
	0xf2, 0x63, 0x88, 0x5f, 0xc7, 0x5b, 0x3f, 0x8a, 0x20, 0x73, 0x66, 0x26, 0x9b, 0xd7, 0x9b, 0xa7,
	0x4f, 0xe1, 0xb9, 0xcb, 0xfe, 0xcf, 0xcb, 0x9c, 0xf9, 0xed, 0xbf, 0x67, 0x0b, 0xc1, 0x28, 0x17,
	0x21, 0x19, 0x52, 0x9e, 0x88, 0x31, 0xcb, 0x09, 0xcf, 0x86, 0xa2, 0x3b, 0xca, 0x85, 0x12, 0xfe,
	0x17, 0x21, 0x97, 0xa1, 0x20, 0x5c, 0x48, 0xf2, 0x4b, 0x4e, 0xe4, 0x44, 0xa6, 0x71, 0x4e, 0xc4,
	0x88, 0xe5, 0x5d, 0x39, 0x91, 0x8a, 0xa5, 0x44, 0x57, 0x32, 0x29, 0xbb, 0x99, 0x88, 0x18, 0x51,
	0x74, 0x90, 0x30, 0xfc, 0xd9, 0x75, 0xcd, 0x4e, 0x2f, 0xe0, 0xb5, 0xe5, 0xee, 0xe4, 0xab, 0x9b,
	0x1f, 0xfa, 0xfe, 0x11, 0xd4, 0xb1, 0x2c, 0xa3, 0x29, 0x0b, 0xbc, 0x13, 0xaf, 0x53, 0xef, 0xd5,
	0xb4, 0xf0, 0x0d, 0x4d, 0xd9, 0xe9, 0x5f, 0x25, 0x68, 0x0e, 0x68, 0x16, 0x11, 0xa9, 0xa8, 0x92,
	0x58, 0xe5, 0xb7, 0xa1, 0x92, 0xb0, 0x31, 0x4b, 0x6c, 0xb2, 0x79, 0xd0, 0x6d, 0x30, 0x11, 0xdb,
	0x94, 0x4c, 0x1b, 0x2d, 0xe8, 0x36, 0x7e, 0x07, 0x5a, 0x18, 0x1c, 0xf2, 0x8c, 0xcb, 0x9f, 0x89,
	0xe2, 0x29, 0x0b, 0xca, 0x98, 0xd3, 0xd0, 0xfa, 0x2d, 0xca, 0xdf, 0xf1, 0x94, 0x4d, 0xdb, 0x60,
	0xca, 0x46, 0xd1, 0x06, 0x83, 0x6f, 0xc2, 0xd6, 0x6c, 0x87, 0x0a, 0x86, 0x61, 0x58, 0x54, 0xbf,
	0x0b, 0x4d, 0x1e, 0x25, 0x8c, 0x8c, 0x58, 0x1e, 0xb2, 0x4c, 0xd1, 0x98, 0x05, 0x55, 0x73, 0x8c,
	0x96, 0xef, 0xa7, 0xaa, 0xdf, 0x82, 0xf2, 0x03, 0x8f, 0x82, 0xcd, 0x13, 0xaf, 0xb3, 0xd3, 0xd3,
	0x3f, 0xfd, 0x63, 0x80, 0x9c, 0xd1, 0x68, 0x62, 0x5a, 0xd7, 0xb0, 0xaa, 0x8e, 0x0a, 0x76, 0x7e,
	0x0b, 0xb6, 0x13, 0x2a, 0x95, 0x23, 0x1d, 0xd4, 0x31, 0x61, 0x4b, 0x6b, 0xf7, 0x46, 0x3a, 0xfd,
	0xb7, 0x04, 0x87, 0x34, 0x54, 0x7c, 0xcc, 0xc8, 0x40, 0x08, 0xc5, 0x22, 0x97, 0x6c, 0xb0, 0xbd,
	0x07, 0xbb, 0x36, 0xaa, 0x4f, 0xd0, 0x40, 0xd3, 0x91, 0x45, 0xd8, 0x34, 0x01, 0x7d, 0x50, 0x5f,
	0xcb, 0x9a, 0x42, 0x2c, 0x88, 0x51, 0x1d, 0xcc, 0x58, 0x5c, 0xe1, 0x73, 0xc1, 0xbf, 0xbc, 0x96,
	0xff, 0xc6, 0x02, 0xff, 0x7d, 0xa8, 0x3e, 0x88, 0x01, 0xe1, 0x11, 0x32, 0xdb, 0xed, 0x55, 0x1e,
	0xc4, 0xe0, 0x2e, 0xd2, 0x3c, 0x79, 0x26, 0x15, 0xcd, 0x42, 0xa6, 0x63, 0x55, 0x8c, 0x81, 0x93,
	0xee, 0x22, 0xfd, 0xde, 0xe8, 0x98, 0xf2, 0x64, 0x76, 0xe4, 0x4d, 0x03, 0x14, 0xf5, 0x62, 0xe2,
	0x36, 0x54, 0x50, 0xb1, 0xe4, 0xcc, 0x83, 0xae, 0xe7, 0x92, 0x14, 0x2d, 0xc4, 0xa3, 0x42, 0x72,
	0xb5, 0x5e, 0x83, 0xcb, 0x2b, 0xd7, 0x41, 0x3c, 0x2a, 0xcd, 0xd7, 0xd1, 0xc2, 0x1b, 0x80, 0xe1,
	0x6b, 0x35, 0xf4, 0xe2, 0xdf, 0x25, 0xd8, 0x5b, 0x05, 0xb6, 0x03, 0x2d, 0xa9, 0x68, 0xae, 0x96,
	0xb9, 0x36, 0x50, 0x2f, 0x86, 0x0c, 0x60, 0x13, 0x15, 0x16, 0x59, 0xa8, 0xee, 0x71, 0x0d, 0x53,
	0xeb, 0x92, 0x0d, 0xe4, 0x82, 0x2e, 0x59, 0x20, 0x56, 0x59, 0x45, 0xac, 0xb0, 0x91, 0x1d, 0xc6,
	0x5a, 0x70, 0x6a, 0xa6, 0x29, 0x31, 0x54, 0x2c, 0x50, 0xf3, 0xe0, 0xbf, 0x0d, 0x0d, 0x2e, 0x09,
	0x13, 0x7c, 0xca, 0xab, 0x86, 0xbc, 0xb6, 0xb9, 0xbc, 0x11, 0x7c, 0x1d, 0xad, 0xfa, 0x32, 0xad,
	0x7f, 0x4a, 0x7a, 0xa1, 0xf0, 0x74, 0xa5, 0x17, 0xdf, 0x81, 0x26, 0xc6, 0x96, 0x88, 0xed, 0x68,
	0xb9, 0x98, 0xf1, 0x18, 0x20, 0x16, 0x44, 0x6b, 0x34, 0x9f, 0x58, 0x66, 0xf5, 0x58, 0xdc, 0x1b,
	0xe1, 0x45, 0x9c, 0x68, 0x91, 0x56, 0xd6, 0x22, 0x7d, 0xc5, 0x4d, 0xf8, 0x5f, 0x1d, 0xfc, 0xe5,
	0x4d, 0xaa, 0x2b, 0xa7, 0x42, 0x22, 0xe2, 0xe0, 0xcc, 0x54, 0x3a, 0xed, 0x6b, 0x11, 0xfb, 0xbf,
	0x7b, 0x70, 0xa0, 0xef, 0x14, 0x0d, 0x26, 0x64, 0xba, 0x52, 0xb9, 0x54, 0x3c, 0x0c, 0xce, 0x4f,
	0xca, 0x9d, 0xad, 0xb3, 0x6f, 0xbb, 0x4f, 0x5d, 0xf3, 0xdd, 0x85, 0x55, 0xdd, 0x6b, 0xdb, 0x03,
	0xaf, 0x69, 0x16, 0xf5, 0xdd, 0x71, 0xfe, 0x6f, 0x1e, 0xec, 0xbb, 0x45, 0x35, 0x3f, 0xc8, 0x07,
	0xcf, 0x35, 0xc8, 0x9e, 0x39, 0x6f, 0x7e, 0x8e, 0x2f, 0xe1, 0x8d, 0x30, 0xe7, 0x8a, 0x87, 0x34,
	0x29, 0x70, 0xb2, 0x84, 0x8e, 0x24, 0xb3, 0x1f, 0x80, 0x0f, 0x11, 0xe3, 0x91, 0xcb, 0xba, 0xb5,
	0x49, 0x37, 0x26, 0x07, 0x17, 0xf3, 0x1f, 0x1e, 0xec, 0xb9, 0xbd, 0x2a, 0xd1, 0xec, 0x38, 0x5d,
	0x70, 0x81, 0x57, 0xf9, 0xe9, 0xe9, 0x57, 0x59, 0xbf, 0xd2, 0x7b, 0x2d, 0xbb, 0xb7, 0xe5, 0xb5,
	0x10, 0xf8, 0x19, 0xf0, 0x7f, 0xf5, 0xc0, 0xb7, 0xcb, 0x68, 0x76, 0x98, 0x8f, 0x70, 0x98, 0xef,
	0x5f, 0x02, 0xd7, 0x15, 0x53, 0x34, 0xcd, 0x96, 0x2b, 0x86, 0x78, 0x1f, 0xda, 0xb3, 0xdf, 0x2a,
	0xe2, 0x76, 0xde, 0xc7, 0x48, 0xd3, 0x9f, 0xf9, 0x66, 0xf5, 0xed, 0xfa, 0xd3, 0xde, 0xb4, 0x7f,
	0xe5, 0x8b, 0x96, 0xb8, 0x7c, 0x36, 0x6f, 0xda, 0x03, 0xe7, 0x3d, 0x71, 0x05, 0xc7, 0x6e, 0x90,
	0xd5, 0x96, 0xf8, 0x04, 0x2f, 0x71, 0x68, 0x93, 0xd6, 0x38, 0xc2, 0xf5, 0x9e, 0x7f, 0x0b, 0x9f,
	0xe2, 0x55, 0x7e, 0x7c, 0xfa, 0x55, 0xd6, 0xed, 0xd5, 0xde, 0xae, 0x3d, 0x77, 0xe6, 0x65, 0xfc,
	0xe9, 0x81, 0x1b, 0x96, 0xac, 0x70, 0xc6, 0x67, 0xcf, 0xe9, 0x0c, 0xf7, 0x4e, 0xfb, 0x0b, 0x06,
	0xb9, 0x84, 0xd7, 0xad, 0x41, 0xcc, 0x5c, 0xb8, 0xd0, 0x9c, 0x4b, 0x3e, 0x47, 0xc0, 0x07, 0xc6,
	0x25, 0x18, 0xd7, 0x35, 0xd6, 0x29, 0x83, 0x2a, 0xfe, 0x47, 0x7a, 0xfe, 0x7f, 0x00, 0x00, 0x00,
	0xff, 0xff, 0x28, 0xac, 0xba, 0x22, 0xad, 0x0a, 0x00, 0x00,
}
