/*
Copyright 2019 Cisco Systems

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: l2fib_bridge_summary_info.proto

package cisco_ios_xr_l2vpn_oper_l2vpn_forwarding_nodes_node_l2fib_bridge_domain_names_l2fib_bridge_domain_name

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type L2FibBridgeSummaryInfo_KEYS struct {
	NodeId               string   `protobuf:"bytes,1,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	BdGroupName          string   `protobuf:"bytes,2,opt,name=bd_group_name,json=bdGroupName,proto3" json:"bd_group_name,omitempty"`
	Name                 string   `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *L2FibBridgeSummaryInfo_KEYS) Reset()         { *m = L2FibBridgeSummaryInfo_KEYS{} }
func (m *L2FibBridgeSummaryInfo_KEYS) String() string { return proto.CompactTextString(m) }
func (*L2FibBridgeSummaryInfo_KEYS) ProtoMessage()    {}
func (*L2FibBridgeSummaryInfo_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_23f9edfcbf466325, []int{0}
}

func (m *L2FibBridgeSummaryInfo_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_L2FibBridgeSummaryInfo_KEYS.Unmarshal(m, b)
}
func (m *L2FibBridgeSummaryInfo_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_L2FibBridgeSummaryInfo_KEYS.Marshal(b, m, deterministic)
}
func (m *L2FibBridgeSummaryInfo_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_L2FibBridgeSummaryInfo_KEYS.Merge(m, src)
}
func (m *L2FibBridgeSummaryInfo_KEYS) XXX_Size() int {
	return xxx_messageInfo_L2FibBridgeSummaryInfo_KEYS.Size(m)
}
func (m *L2FibBridgeSummaryInfo_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_L2FibBridgeSummaryInfo_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_L2FibBridgeSummaryInfo_KEYS proto.InternalMessageInfo

func (m *L2FibBridgeSummaryInfo_KEYS) GetNodeId() string {
	if m != nil {
		return m.NodeId
	}
	return ""
}

func (m *L2FibBridgeSummaryInfo_KEYS) GetBdGroupName() string {
	if m != nil {
		return m.BdGroupName
	}
	return ""
}

func (m *L2FibBridgeSummaryInfo_KEYS) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type L2FibBridgeSummaryInfo struct {
	BridgeId                 uint32   `protobuf:"varint,50,opt,name=bridge_id,json=bridgeId,proto3" json:"bridge_id,omitempty"`
	BridgeName               string   `protobuf:"bytes,51,opt,name=bridge_name,json=bridgeName,proto3" json:"bridge_name,omitempty"`
	MacLimit                 uint32   `protobuf:"varint,52,opt,name=mac_limit,json=macLimit,proto3" json:"mac_limit,omitempty"`
	MacLimitAction           string   `protobuf:"bytes,53,opt,name=mac_limit_action,json=macLimitAction,proto3" json:"mac_limit_action,omitempty"`
	FloodDisabled            bool     `protobuf:"varint,54,opt,name=flood_disabled,json=floodDisabled,proto3" json:"flood_disabled,omitempty"`
	MacLearningDisabled      bool     `protobuf:"varint,55,opt,name=mac_learning_disabled,json=macLearningDisabled,proto3" json:"mac_learning_disabled,omitempty"`
	MacPortDownFlushDisabled bool     `protobuf:"varint,56,opt,name=mac_port_down_flush_disabled,json=macPortDownFlushDisabled,proto3" json:"mac_port_down_flush_disabled,omitempty"`
	AdminDisabled            bool     `protobuf:"varint,57,opt,name=admin_disabled,json=adminDisabled,proto3" json:"admin_disabled,omitempty"`
	BridgePortCount          uint32   `protobuf:"varint,58,opt,name=bridge_port_count,json=bridgePortCount,proto3" json:"bridge_port_count,omitempty"`
	NumberOfShg              uint32   `protobuf:"varint,59,opt,name=number_of_shg,json=numberOfShg,proto3" json:"number_of_shg,omitempty"`
	NumberOfHwmac            uint32   `protobuf:"varint,60,opt,name=number_of_hwmac,json=numberOfHwmac,proto3" json:"number_of_hwmac,omitempty"`
	NumberOfSwmac            uint32   `protobuf:"varint,61,opt,name=number_of_swmac,json=numberOfSwmac,proto3" json:"number_of_swmac,omitempty"`
	Mtu                      uint32   `protobuf:"varint,62,opt,name=mtu,proto3" json:"mtu,omitempty"`
	AgingTimeOut             uint32   `protobuf:"varint,63,opt,name=aging_time_out,json=agingTimeOut,proto3" json:"aging_time_out,omitempty"`
	Msti                     uint32   `protobuf:"varint,64,opt,name=msti,proto3" json:"msti,omitempty"`
	L2McSrcTrafficEnabled    uint32   `protobuf:"varint,65,opt,name=l2mc_src_traffic_enabled,json=l2mcSrcTrafficEnabled,proto3" json:"l2mc_src_traffic_enabled,omitempty"`
	XXX_NoUnkeyedLiteral     struct{} `json:"-"`
	XXX_unrecognized         []byte   `json:"-"`
	XXX_sizecache            int32    `json:"-"`
}

func (m *L2FibBridgeSummaryInfo) Reset()         { *m = L2FibBridgeSummaryInfo{} }
func (m *L2FibBridgeSummaryInfo) String() string { return proto.CompactTextString(m) }
func (*L2FibBridgeSummaryInfo) ProtoMessage()    {}
func (*L2FibBridgeSummaryInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_23f9edfcbf466325, []int{1}
}

func (m *L2FibBridgeSummaryInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_L2FibBridgeSummaryInfo.Unmarshal(m, b)
}
func (m *L2FibBridgeSummaryInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_L2FibBridgeSummaryInfo.Marshal(b, m, deterministic)
}
func (m *L2FibBridgeSummaryInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_L2FibBridgeSummaryInfo.Merge(m, src)
}
func (m *L2FibBridgeSummaryInfo) XXX_Size() int {
	return xxx_messageInfo_L2FibBridgeSummaryInfo.Size(m)
}
func (m *L2FibBridgeSummaryInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_L2FibBridgeSummaryInfo.DiscardUnknown(m)
}

var xxx_messageInfo_L2FibBridgeSummaryInfo proto.InternalMessageInfo

func (m *L2FibBridgeSummaryInfo) GetBridgeId() uint32 {
	if m != nil {
		return m.BridgeId
	}
	return 0
}

func (m *L2FibBridgeSummaryInfo) GetBridgeName() string {
	if m != nil {
		return m.BridgeName
	}
	return ""
}

func (m *L2FibBridgeSummaryInfo) GetMacLimit() uint32 {
	if m != nil {
		return m.MacLimit
	}
	return 0
}

func (m *L2FibBridgeSummaryInfo) GetMacLimitAction() string {
	if m != nil {
		return m.MacLimitAction
	}
	return ""
}

func (m *L2FibBridgeSummaryInfo) GetFloodDisabled() bool {
	if m != nil {
		return m.FloodDisabled
	}
	return false
}

func (m *L2FibBridgeSummaryInfo) GetMacLearningDisabled() bool {
	if m != nil {
		return m.MacLearningDisabled
	}
	return false
}

func (m *L2FibBridgeSummaryInfo) GetMacPortDownFlushDisabled() bool {
	if m != nil {
		return m.MacPortDownFlushDisabled
	}
	return false
}

func (m *L2FibBridgeSummaryInfo) GetAdminDisabled() bool {
	if m != nil {
		return m.AdminDisabled
	}
	return false
}

func (m *L2FibBridgeSummaryInfo) GetBridgePortCount() uint32 {
	if m != nil {
		return m.BridgePortCount
	}
	return 0
}

func (m *L2FibBridgeSummaryInfo) GetNumberOfShg() uint32 {
	if m != nil {
		return m.NumberOfShg
	}
	return 0
}

func (m *L2FibBridgeSummaryInfo) GetNumberOfHwmac() uint32 {
	if m != nil {
		return m.NumberOfHwmac
	}
	return 0
}

func (m *L2FibBridgeSummaryInfo) GetNumberOfSwmac() uint32 {
	if m != nil {
		return m.NumberOfSwmac
	}
	return 0
}

func (m *L2FibBridgeSummaryInfo) GetMtu() uint32 {
	if m != nil {
		return m.Mtu
	}
	return 0
}

func (m *L2FibBridgeSummaryInfo) GetAgingTimeOut() uint32 {
	if m != nil {
		return m.AgingTimeOut
	}
	return 0
}

func (m *L2FibBridgeSummaryInfo) GetMsti() uint32 {
	if m != nil {
		return m.Msti
	}
	return 0
}

func (m *L2FibBridgeSummaryInfo) GetL2McSrcTrafficEnabled() uint32 {
	if m != nil {
		return m.L2McSrcTrafficEnabled
	}
	return 0
}

func init() {
	proto.RegisterType((*L2FibBridgeSummaryInfo_KEYS)(nil), "cisco_ios_xr_l2vpn_oper.l2vpn_forwarding.nodes.node.l2fib_bridge_domain_names.l2fib_bridge_domain_name.l2fib_bridge_summary_info_KEYS")
	proto.RegisterType((*L2FibBridgeSummaryInfo)(nil), "cisco_ios_xr_l2vpn_oper.l2vpn_forwarding.nodes.node.l2fib_bridge_domain_names.l2fib_bridge_domain_name.l2fib_bridge_summary_info")
}

func init() { proto.RegisterFile("l2fib_bridge_summary_info.proto", fileDescriptor_23f9edfcbf466325) }

var fileDescriptor_23f9edfcbf466325 = []byte{
	// 509 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x93, 0x4f, 0x6f, 0x13, 0x31,
	0x10, 0xc5, 0x15, 0x0a, 0xa5, 0x75, 0x48, 0x5a, 0x8c, 0x2a, 0x8c, 0x8a, 0x68, 0x14, 0x51, 0x14,
	0x71, 0xc8, 0x21, 0x05, 0xca, 0xdf, 0x42, 0x45, 0x0b, 0x54, 0x20, 0x8a, 0x92, 0x5e, 0x38, 0x8d,
	0xbc, 0xb6, 0x77, 0x63, 0x69, 0x6d, 0x07, 0xdb, 0x4b, 0xe0, 0x13, 0xf0, 0xb5, 0x91, 0x67, 0xb7,
	0x89, 0x72, 0xc8, 0x25, 0x1a, 0xbf, 0xf7, 0x7b, 0xcf, 0xd6, 0x24, 0x21, 0x07, 0xe5, 0x28, 0xd7,
	0x19, 0x64, 0x5e, 0xcb, 0x42, 0x41, 0xa8, 0x8c, 0xe1, 0xfe, 0x2f, 0x68, 0x9b, 0xbb, 0xe1, 0xcc,
	0xbb, 0xe8, 0x68, 0x2e, 0x74, 0x10, 0x0e, 0xb4, 0x0b, 0xf0, 0xc7, 0x43, 0x39, 0xfa, 0x3d, 0xb3,
	0xe0, 0x66, 0xca, 0x0f, 0xeb, 0x31, 0x77, 0x7e, 0xce, 0xbd, 0xd4, 0xb6, 0x18, 0x5a, 0x27, 0x55,
	0xc0, 0xcf, 0xe1, 0x4a, 0xa9, 0x74, 0x86, 0x6b, 0x0b, 0x96, 0x1b, 0x15, 0xd6, 0x3a, 0xfd, 0x5f,
	0xe4, 0xd1, 0xda, 0xa7, 0xc0, 0xd7, 0xf3, 0x9f, 0x13, 0x7a, 0x9f, 0xdc, 0x4e, 0xe5, 0xa0, 0x25,
	0x6b, 0xf5, 0x5a, 0x83, 0xed, 0xf1, 0x66, 0x3a, 0x5e, 0x48, 0xda, 0x27, 0x9d, 0x4c, 0x42, 0xe1,
	0x5d, 0x35, 0xc3, 0x2e, 0x76, 0x03, 0xed, 0x76, 0x26, 0x3f, 0x27, 0xed, 0x3b, 0x37, 0x8a, 0x52,
	0x72, 0x13, 0xad, 0x0d, 0xb4, 0x70, 0xee, 0xff, 0xbb, 0x45, 0x1e, 0xac, 0xbd, 0x93, 0xee, 0x93,
	0xed, 0x46, 0xd6, 0x92, 0x8d, 0x7a, 0xad, 0x41, 0x67, 0xbc, 0x55, 0x0b, 0x17, 0x92, 0x1e, 0x90,
	0x76, 0x63, 0x62, 0xeb, 0x11, 0xb6, 0x92, 0x5a, 0xc2, 0xfb, 0xf6, 0xc9, 0xb6, 0xe1, 0x02, 0x4a,
	0x6d, 0x74, 0x64, 0xcf, 0xea, 0xb4, 0xe1, 0xe2, 0x5b, 0x3a, 0xd3, 0x01, 0xd9, 0x5d, 0x98, 0xc0,
	0x45, 0xd4, 0xce, 0xb2, 0xe7, 0x58, 0xd1, 0xbd, 0x66, 0x4e, 0x51, 0xa5, 0x87, 0xa4, 0x9b, 0x97,
	0xce, 0x49, 0x90, 0x3a, 0xf0, 0xac, 0x54, 0x92, 0xbd, 0xe8, 0xb5, 0x06, 0x5b, 0xe3, 0x0e, 0xaa,
	0x67, 0x8d, 0x48, 0x47, 0x64, 0x0f, 0x0b, 0x15, 0xf7, 0x56, 0xdb, 0x62, 0x49, 0x1f, 0x23, 0x7d,
	0x2f, 0xb5, 0x36, 0xde, 0x22, 0x73, 0x42, 0x1e, 0xa6, 0xcc, 0xcc, 0xf9, 0x08, 0xd2, 0xcd, 0x2d,
	0xe4, 0x65, 0x15, 0xa6, 0xcb, 0xe8, 0x4b, 0x8c, 0x32, 0xc3, 0xc5, 0x0f, 0xe7, 0xe3, 0x99, 0x9b,
	0xdb, 0x4f, 0x09, 0x58, 0xe4, 0x0f, 0x49, 0x97, 0x4b, 0xa3, 0xed, 0x32, 0xf1, 0xaa, 0x7e, 0x1a,
	0xaa, 0x0b, 0xec, 0x29, 0xb9, 0xdb, 0x6c, 0x0a, 0x6f, 0x12, 0xae, 0xb2, 0x91, 0xbd, 0xc6, 0x85,
	0xec, 0xd4, 0x46, 0xaa, 0xff, 0x98, 0xe4, 0xf4, 0x45, 0xda, 0xca, 0x64, 0xca, 0x83, 0xcb, 0x21,
	0x4c, 0x0b, 0xf6, 0x06, 0xb9, 0x76, 0x2d, 0x5e, 0xe6, 0x93, 0x69, 0x41, 0x9f, 0x90, 0x9d, 0x25,
	0x33, 0x9d, 0x1b, 0x2e, 0xd8, 0x5b, 0xa4, 0x3a, 0xd7, 0xd4, 0x97, 0x24, 0xae, 0x72, 0x01, 0xb9,
	0x77, 0xab, 0xdc, 0x04, 0xb9, 0x5d, 0xb2, 0x61, 0x62, 0xc5, 0x4e, 0xd0, 0x4b, 0x23, 0x7d, 0x4c,
	0xba, 0xbc, 0x48, 0x5b, 0x8c, 0xda, 0x28, 0x70, 0x55, 0x64, 0xef, 0xd1, 0xbc, 0x83, 0xea, 0x95,
	0x36, 0xea, 0xb2, 0x8a, 0xe9, 0x07, 0x65, 0x42, 0xd4, 0xec, 0x03, 0x7a, 0x38, 0xd3, 0x63, 0xc2,
	0xca, 0x91, 0x11, 0x10, 0xbc, 0x80, 0xe8, 0x79, 0x9e, 0x6b, 0x01, 0xca, 0xd6, 0xcb, 0x39, 0x45,
	0x6e, 0x2f, 0xf9, 0x13, 0x2f, 0xae, 0x6a, 0xf7, 0xbc, 0x36, 0xb3, 0x4d, 0xfc, 0xaf, 0x1d, 0xfd,
	0x0f, 0x00, 0x00, 0xff, 0xff, 0x15, 0x9f, 0x2e, 0x51, 0x8e, 0x03, 0x00, 0x00,
}
