/*
Copyright 2019 Cisco Systems

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: vpdn_history_entry.proto

package cisco_ios_xr_tunnel_vpdn_oper_vpdn_nodes_node_history_failures_history_failure

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type VpdnHistoryEntry_KEYS struct {
	NodeName             string   `protobuf:"bytes,1,opt,name=node_name,json=nodeName,proto3" json:"node_name,omitempty"`
	Username             string   `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	RemoteName           string   `protobuf:"bytes,3,opt,name=remote_name,json=remoteName,proto3" json:"remote_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VpdnHistoryEntry_KEYS) Reset()         { *m = VpdnHistoryEntry_KEYS{} }
func (m *VpdnHistoryEntry_KEYS) String() string { return proto.CompactTextString(m) }
func (*VpdnHistoryEntry_KEYS) ProtoMessage()    {}
func (*VpdnHistoryEntry_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_620d4b07962140df, []int{0}
}

func (m *VpdnHistoryEntry_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VpdnHistoryEntry_KEYS.Unmarshal(m, b)
}
func (m *VpdnHistoryEntry_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VpdnHistoryEntry_KEYS.Marshal(b, m, deterministic)
}
func (m *VpdnHistoryEntry_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VpdnHistoryEntry_KEYS.Merge(m, src)
}
func (m *VpdnHistoryEntry_KEYS) XXX_Size() int {
	return xxx_messageInfo_VpdnHistoryEntry_KEYS.Size(m)
}
func (m *VpdnHistoryEntry_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_VpdnHistoryEntry_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_VpdnHistoryEntry_KEYS proto.InternalMessageInfo

func (m *VpdnHistoryEntry_KEYS) GetNodeName() string {
	if m != nil {
		return m.NodeName
	}
	return ""
}

func (m *VpdnHistoryEntry_KEYS) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *VpdnHistoryEntry_KEYS) GetRemoteName() string {
	if m != nil {
		return m.RemoteName
	}
	return ""
}

type VpdnHistoryEntry struct {
	UsernameXr           string   `protobuf:"bytes,50,opt,name=username_xr,json=usernameXr,proto3" json:"username_xr,omitempty"`
	DomainName           string   `protobuf:"bytes,51,opt,name=domain_name,json=domainName,proto3" json:"domain_name,omitempty"`
	Mid                  uint32   `protobuf:"varint,52,opt,name=mid,proto3" json:"mid,omitempty"`
	Nas                  string   `protobuf:"bytes,53,opt,name=nas,proto3" json:"nas,omitempty"`
	DestinationAddress   string   `protobuf:"bytes,54,opt,name=destination_address,json=destinationAddress,proto3" json:"destination_address,omitempty"`
	RemoteClientId       uint32   `protobuf:"varint,55,opt,name=remote_client_id,json=remoteClientId,proto3" json:"remote_client_id,omitempty"`
	HomeGateway          string   `protobuf:"bytes,56,opt,name=home_gateway,json=homeGateway,proto3" json:"home_gateway,omitempty"`
	SourceAddress        string   `protobuf:"bytes,57,opt,name=source_address,json=sourceAddress,proto3" json:"source_address,omitempty"`
	LocalClientId        uint32   `protobuf:"varint,58,opt,name=local_client_id,json=localClientId,proto3" json:"local_client_id,omitempty"`
	EventTime            string   `protobuf:"bytes,59,opt,name=event_time,json=eventTime,proto3" json:"event_time,omitempty"`
	ErrorRepeatCount     uint32   `protobuf:"varint,60,opt,name=error_repeat_count,json=errorRepeatCount,proto3" json:"error_repeat_count,omitempty"`
	FailureType          string   `protobuf:"bytes,61,opt,name=failure_type,json=failureType,proto3" json:"failure_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VpdnHistoryEntry) Reset()         { *m = VpdnHistoryEntry{} }
func (m *VpdnHistoryEntry) String() string { return proto.CompactTextString(m) }
func (*VpdnHistoryEntry) ProtoMessage()    {}
func (*VpdnHistoryEntry) Descriptor() ([]byte, []int) {
	return fileDescriptor_620d4b07962140df, []int{1}
}

func (m *VpdnHistoryEntry) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VpdnHistoryEntry.Unmarshal(m, b)
}
func (m *VpdnHistoryEntry) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VpdnHistoryEntry.Marshal(b, m, deterministic)
}
func (m *VpdnHistoryEntry) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VpdnHistoryEntry.Merge(m, src)
}
func (m *VpdnHistoryEntry) XXX_Size() int {
	return xxx_messageInfo_VpdnHistoryEntry.Size(m)
}
func (m *VpdnHistoryEntry) XXX_DiscardUnknown() {
	xxx_messageInfo_VpdnHistoryEntry.DiscardUnknown(m)
}

var xxx_messageInfo_VpdnHistoryEntry proto.InternalMessageInfo

func (m *VpdnHistoryEntry) GetUsernameXr() string {
	if m != nil {
		return m.UsernameXr
	}
	return ""
}

func (m *VpdnHistoryEntry) GetDomainName() string {
	if m != nil {
		return m.DomainName
	}
	return ""
}

func (m *VpdnHistoryEntry) GetMid() uint32 {
	if m != nil {
		return m.Mid
	}
	return 0
}

func (m *VpdnHistoryEntry) GetNas() string {
	if m != nil {
		return m.Nas
	}
	return ""
}

func (m *VpdnHistoryEntry) GetDestinationAddress() string {
	if m != nil {
		return m.DestinationAddress
	}
	return ""
}

func (m *VpdnHistoryEntry) GetRemoteClientId() uint32 {
	if m != nil {
		return m.RemoteClientId
	}
	return 0
}

func (m *VpdnHistoryEntry) GetHomeGateway() string {
	if m != nil {
		return m.HomeGateway
	}
	return ""
}

func (m *VpdnHistoryEntry) GetSourceAddress() string {
	if m != nil {
		return m.SourceAddress
	}
	return ""
}

func (m *VpdnHistoryEntry) GetLocalClientId() uint32 {
	if m != nil {
		return m.LocalClientId
	}
	return 0
}

func (m *VpdnHistoryEntry) GetEventTime() string {
	if m != nil {
		return m.EventTime
	}
	return ""
}

func (m *VpdnHistoryEntry) GetErrorRepeatCount() uint32 {
	if m != nil {
		return m.ErrorRepeatCount
	}
	return 0
}

func (m *VpdnHistoryEntry) GetFailureType() string {
	if m != nil {
		return m.FailureType
	}
	return ""
}

func init() {
	proto.RegisterType((*VpdnHistoryEntry_KEYS)(nil), "cisco_ios_xr_tunnel_vpdn_oper.vpdn.nodes.node.history_failures.history_failure.vpdn_history_entry_KEYS")
	proto.RegisterType((*VpdnHistoryEntry)(nil), "cisco_ios_xr_tunnel_vpdn_oper.vpdn.nodes.node.history_failures.history_failure.vpdn_history_entry")
}

func init() { proto.RegisterFile("vpdn_history_entry.proto", fileDescriptor_620d4b07962140df) }

var fileDescriptor_620d4b07962140df = []byte{
	// 396 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x64, 0x92, 0x5f, 0x8b, 0x13, 0x31,
	0x14, 0xc5, 0xa9, 0x05, 0xd9, 0xde, 0xb5, 0x6b, 0x89, 0x0f, 0x06, 0x45, 0x5c, 0x17, 0x94, 0x3e,
	0xc8, 0x08, 0xae, 0xff, 0xff, 0x3c, 0xc8, 0x22, 0x22, 0xc2, 0x3e, 0xd4, 0x7d, 0xd0, 0xa7, 0x10,
	0x27, 0x57, 0x1b, 0x98, 0x24, 0xc3, 0x4d, 0xa6, 0x76, 0x3e, 0x99, 0x5f, 0x4f, 0x72, 0x33, 0x53,
	0xca, 0xf6, 0xa5, 0xdc, 0xfe, 0xce, 0xb9, 0xe7, 0xdc, 0x81, 0x80, 0xdc, 0xb4, 0xc6, 0xab, 0xb5,
	0x8d, 0x29, 0x50, 0xaf, 0xd0, 0x27, 0xea, 0xab, 0x96, 0x42, 0x0a, 0xe2, 0xb2, 0xb6, 0xb1, 0x0e,
	0xca, 0x86, 0xa8, 0xb6, 0xa4, 0x52, 0xe7, 0x3d, 0x36, 0x8a, 0xdd, 0xa1, 0x45, 0xaa, 0xf2, 0x54,
	0xf9, 0x60, 0x30, 0xf2, 0x6f, 0x35, 0x46, 0xfc, 0xd6, 0xb6, 0xe9, 0x08, 0xe3, 0x75, 0x70, 0x16,
	0xe1, 0xee, 0x61, 0x97, 0xfa, 0xf6, 0xf9, 0xe7, 0x77, 0x71, 0x1f, 0x66, 0x39, 0x43, 0x79, 0xed,
	0x50, 0x4e, 0x4e, 0x27, 0xcb, 0xd9, 0xea, 0x28, 0x83, 0x4b, 0xed, 0x50, 0xdc, 0x83, 0xa3, 0x2e,
	0x22, 0xb1, 0x76, 0xa3, 0x68, 0xe3, 0x7f, 0xf1, 0x10, 0x8e, 0x09, 0x5d, 0x48, 0xc3, 0xea, 0x94,
	0x65, 0x28, 0x28, 0x2f, 0x9f, 0xfd, 0x9b, 0x82, 0x38, 0x6c, 0xcd, 0x7b, 0x63, 0x86, 0xda, 0x92,
	0x7c, 0x5e, 0xf6, 0x46, 0xf4, 0x83, 0xb2, 0xc1, 0x04, 0xa7, 0xad, 0x2f, 0xc1, 0xe7, 0xc5, 0x50,
	0x10, 0x5f, 0xb5, 0x80, 0xa9, 0xb3, 0x46, 0xbe, 0x38, 0x9d, 0x2c, 0xe7, 0xab, 0x3c, 0x66, 0xe2,
	0x75, 0x94, 0x2f, 0xd9, 0x9a, 0x47, 0xf1, 0x0c, 0xee, 0x18, 0x8c, 0xc9, 0x7a, 0x9d, 0x6c, 0xf0,
	0x4a, 0x1b, 0x43, 0x18, 0xa3, 0x7c, 0xc5, 0x0e, 0xb1, 0x27, 0x7d, 0x2a, 0x8a, 0x58, 0xc2, 0x62,
	0xf8, 0x9c, 0xba, 0xb1, 0xe8, 0x93, 0xb2, 0x46, 0xbe, 0xe6, 0x86, 0x93, 0xc2, 0x2f, 0x18, 0x7f,
	0x35, 0xe2, 0x11, 0xdc, 0x5a, 0x07, 0x87, 0xea, 0x8f, 0x4e, 0xf8, 0x57, 0xf7, 0xf2, 0x0d, 0x67,
	0x1e, 0x67, 0xf6, 0xa5, 0x20, 0xf1, 0x18, 0x4e, 0x62, 0xe8, 0xa8, 0xc6, 0x5d, 0xf1, 0x5b, 0x36,
	0xcd, 0x0b, 0x1d, 0x3b, 0x9f, 0xc0, 0xed, 0x26, 0xd4, 0xba, 0xd9, 0xab, 0x7c, 0xc7, 0x95, 0x73,
	0xc6, 0xbb, 0xc6, 0x07, 0x00, 0xb8, 0xc9, 0x86, 0x64, 0x1d, 0xca, 0xf7, 0x1c, 0x35, 0x63, 0x72,
	0x65, 0x1d, 0x8a, 0xa7, 0x20, 0x90, 0x28, 0x90, 0x22, 0x6c, 0x51, 0x27, 0x55, 0x87, 0xce, 0x27,
	0xf9, 0x81, 0x93, 0x16, 0xac, 0xac, 0x58, 0xb8, 0xc8, 0x3c, 0x9f, 0x3f, 0x3c, 0x0b, 0x95, 0xfa,
	0x16, 0xe5, 0xc7, 0x72, 0xfe, 0xc0, 0xae, 0xfa, 0x16, 0x7f, 0xdd, 0xe4, 0x57, 0x78, 0xfe, 0x3f,
	0x00, 0x00, 0xff, 0xff, 0x63, 0x0d, 0x38, 0xa1, 0xa1, 0x02, 0x00, 0x00,
}
