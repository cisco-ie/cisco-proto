/*
Copyright 2019 Cisco Systems

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: rsi_srlg_intf_brief_show.proto

package cisco_ios_xr_infra_rsi_oper_srlg_interfaces_interface

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type RsiSrlgIntfBriefShow_KEYS struct {
	InterfaceName        string   `protobuf:"bytes,1,opt,name=interface_name,json=interfaceName,proto3" json:"interface_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RsiSrlgIntfBriefShow_KEYS) Reset()         { *m = RsiSrlgIntfBriefShow_KEYS{} }
func (m *RsiSrlgIntfBriefShow_KEYS) String() string { return proto.CompactTextString(m) }
func (*RsiSrlgIntfBriefShow_KEYS) ProtoMessage()    {}
func (*RsiSrlgIntfBriefShow_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_a20df4511db4384c, []int{0}
}

func (m *RsiSrlgIntfBriefShow_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RsiSrlgIntfBriefShow_KEYS.Unmarshal(m, b)
}
func (m *RsiSrlgIntfBriefShow_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RsiSrlgIntfBriefShow_KEYS.Marshal(b, m, deterministic)
}
func (m *RsiSrlgIntfBriefShow_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RsiSrlgIntfBriefShow_KEYS.Merge(m, src)
}
func (m *RsiSrlgIntfBriefShow_KEYS) XXX_Size() int {
	return xxx_messageInfo_RsiSrlgIntfBriefShow_KEYS.Size(m)
}
func (m *RsiSrlgIntfBriefShow_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_RsiSrlgIntfBriefShow_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_RsiSrlgIntfBriefShow_KEYS proto.InternalMessageInfo

func (m *RsiSrlgIntfBriefShow_KEYS) GetInterfaceName() string {
	if m != nil {
		return m.InterfaceName
	}
	return ""
}

type RsiSrlgIntfBriefShow struct {
	InterfaceNameXr      string   `protobuf:"bytes,50,opt,name=interface_name_xr,json=interfaceNameXr,proto3" json:"interface_name_xr,omitempty"`
	ValueCount           uint32   `protobuf:"varint,51,opt,name=value_count,json=valueCount,proto3" json:"value_count,omitempty"`
	Registrations        uint32   `protobuf:"varint,52,opt,name=registrations,proto3" json:"registrations,omitempty"`
	SrlgValue            []uint32 `protobuf:"varint,53,rep,packed,name=srlg_value,json=srlgValue,proto3" json:"srlg_value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RsiSrlgIntfBriefShow) Reset()         { *m = RsiSrlgIntfBriefShow{} }
func (m *RsiSrlgIntfBriefShow) String() string { return proto.CompactTextString(m) }
func (*RsiSrlgIntfBriefShow) ProtoMessage()    {}
func (*RsiSrlgIntfBriefShow) Descriptor() ([]byte, []int) {
	return fileDescriptor_a20df4511db4384c, []int{1}
}

func (m *RsiSrlgIntfBriefShow) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RsiSrlgIntfBriefShow.Unmarshal(m, b)
}
func (m *RsiSrlgIntfBriefShow) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RsiSrlgIntfBriefShow.Marshal(b, m, deterministic)
}
func (m *RsiSrlgIntfBriefShow) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RsiSrlgIntfBriefShow.Merge(m, src)
}
func (m *RsiSrlgIntfBriefShow) XXX_Size() int {
	return xxx_messageInfo_RsiSrlgIntfBriefShow.Size(m)
}
func (m *RsiSrlgIntfBriefShow) XXX_DiscardUnknown() {
	xxx_messageInfo_RsiSrlgIntfBriefShow.DiscardUnknown(m)
}

var xxx_messageInfo_RsiSrlgIntfBriefShow proto.InternalMessageInfo

func (m *RsiSrlgIntfBriefShow) GetInterfaceNameXr() string {
	if m != nil {
		return m.InterfaceNameXr
	}
	return ""
}

func (m *RsiSrlgIntfBriefShow) GetValueCount() uint32 {
	if m != nil {
		return m.ValueCount
	}
	return 0
}

func (m *RsiSrlgIntfBriefShow) GetRegistrations() uint32 {
	if m != nil {
		return m.Registrations
	}
	return 0
}

func (m *RsiSrlgIntfBriefShow) GetSrlgValue() []uint32 {
	if m != nil {
		return m.SrlgValue
	}
	return nil
}

func init() {
	proto.RegisterType((*RsiSrlgIntfBriefShow_KEYS)(nil), "cisco_ios_xr_infra_rsi_oper.srlg.interfaces.interface.rsi_srlg_intf_brief_show_KEYS")
	proto.RegisterType((*RsiSrlgIntfBriefShow)(nil), "cisco_ios_xr_infra_rsi_oper.srlg.interfaces.interface.rsi_srlg_intf_brief_show")
}

func init() { proto.RegisterFile("rsi_srlg_intf_brief_show.proto", fileDescriptor_a20df4511db4384c) }

var fileDescriptor_a20df4511db4384c = []byte{
	// 231 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x90, 0xc1, 0x4a, 0x03, 0x31,
	0x10, 0x86, 0x59, 0x04, 0xa1, 0x23, 0xab, 0x98, 0x53, 0x2e, 0xd5, 0xa5, 0x28, 0x2c, 0x1e, 0xf6,
	0x60, 0xed, 0x13, 0x88, 0x5e, 0x04, 0x0f, 0x2b, 0x88, 0x9e, 0x86, 0x74, 0x49, 0xea, 0x40, 0x9b,
	0x29, 0x33, 0xa9, 0xf6, 0xa1, 0x7c, 0x48, 0x49, 0x0e, 0x95, 0x3d, 0xf4, 0x16, 0x3e, 0xfe, 0xef,
	0x23, 0x0c, 0x5c, 0x89, 0x12, 0xaa, 0xac, 0x57, 0x48, 0x31, 0x05, 0x5c, 0x0a, 0xf9, 0x80, 0xfa,
	0xc5, 0x3f, 0xdd, 0x56, 0x38, 0xb1, 0x59, 0x0c, 0xa4, 0x03, 0x23, 0xb1, 0xe2, 0x5e, 0x90, 0x62,
	0x10, 0x87, 0x59, 0xe1, 0xad, 0x97, 0x2e, 0x7b, 0x1d, 0xc5, 0xe4, 0x25, 0xb8, 0xc1, 0xeb, 0xff,
	0x73, 0xf6, 0x0c, 0xd3, 0x63, 0x61, 0x7c, 0x79, 0xfa, 0x7c, 0x33, 0xb7, 0x70, 0x7e, 0x58, 0x63,
	0x74, 0x1b, 0x6f, 0xab, 0xa6, 0x6a, 0x27, 0x7d, 0x7d, 0xa0, 0xaf, 0x6e, 0xe3, 0x67, 0xbf, 0x15,
	0xd8, 0x63, 0x21, 0x73, 0x07, 0x97, 0xe3, 0x06, 0xee, 0xc5, 0xde, 0x97, 0xcc, 0xc5, 0x28, 0xf3,
	0x21, 0xe6, 0x1a, 0xce, 0xbe, 0xdd, 0x7a, 0xe7, 0x71, 0xe0, 0x5d, 0x4c, 0x76, 0xde, 0x54, 0x6d,
	0xdd, 0x43, 0x41, 0x8f, 0x99, 0x98, 0x1b, 0xa8, 0xc5, 0xaf, 0x48, 0x93, 0xb8, 0x44, 0x1c, 0xd5,
	0x3e, 0x94, 0xc9, 0x18, 0x9a, 0x29, 0x40, 0xf9, 0x4a, 0x11, 0xed, 0xa2, 0x39, 0x69, 0xeb, 0x7e,
	0x92, 0xc9, 0x7b, 0x06, 0xcb, 0xd3, 0x72, 0xb4, 0xf9, 0x5f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x7f,
	0xdd, 0x39, 0x22, 0x56, 0x01, 0x00, 0x00,
}
