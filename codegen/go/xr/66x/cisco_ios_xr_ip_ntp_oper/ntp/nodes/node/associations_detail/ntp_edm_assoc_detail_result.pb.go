/*
Copyright 2019 Cisco Systems

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: ntp_edm_assoc_detail_result.proto

package cisco_ios_xr_ip_ntp_oper_ntp_nodes_node_associations_detail

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type NtpEdmAssocDetailResult_KEYS struct {
	Node                 string   `protobuf:"bytes,1,opt,name=node,proto3" json:"node,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NtpEdmAssocDetailResult_KEYS) Reset()         { *m = NtpEdmAssocDetailResult_KEYS{} }
func (m *NtpEdmAssocDetailResult_KEYS) String() string { return proto.CompactTextString(m) }
func (*NtpEdmAssocDetailResult_KEYS) ProtoMessage()    {}
func (*NtpEdmAssocDetailResult_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_391b9e658e229961, []int{0}
}

func (m *NtpEdmAssocDetailResult_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NtpEdmAssocDetailResult_KEYS.Unmarshal(m, b)
}
func (m *NtpEdmAssocDetailResult_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NtpEdmAssocDetailResult_KEYS.Marshal(b, m, deterministic)
}
func (m *NtpEdmAssocDetailResult_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NtpEdmAssocDetailResult_KEYS.Merge(m, src)
}
func (m *NtpEdmAssocDetailResult_KEYS) XXX_Size() int {
	return xxx_messageInfo_NtpEdmAssocDetailResult_KEYS.Size(m)
}
func (m *NtpEdmAssocDetailResult_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_NtpEdmAssocDetailResult_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_NtpEdmAssocDetailResult_KEYS proto.InternalMessageInfo

func (m *NtpEdmAssocDetailResult_KEYS) GetNode() string {
	if m != nil {
		return m.Node
	}
	return ""
}

type NtpEdmPeerInfoCommon struct {
	HostMode             string   `protobuf:"bytes,1,opt,name=host_mode,json=hostMode,proto3" json:"host_mode,omitempty"`
	IsConfigured         bool     `protobuf:"varint,2,opt,name=is_configured,json=isConfigured,proto3" json:"is_configured,omitempty"`
	Address              string   `protobuf:"bytes,3,opt,name=address,proto3" json:"address,omitempty"`
	ReferenceId          string   `protobuf:"bytes,4,opt,name=reference_id,json=referenceId,proto3" json:"reference_id,omitempty"`
	HostPoll             uint32   `protobuf:"varint,5,opt,name=host_poll,json=hostPoll,proto3" json:"host_poll,omitempty"`
	Reachability         uint32   `protobuf:"varint,6,opt,name=reachability,proto3" json:"reachability,omitempty"`
	Stratum              uint32   `protobuf:"varint,7,opt,name=stratum,proto3" json:"stratum,omitempty"`
	Status               string   `protobuf:"bytes,8,opt,name=status,proto3" json:"status,omitempty"`
	Delay                string   `protobuf:"bytes,9,opt,name=delay,proto3" json:"delay,omitempty"`
	Offset               string   `protobuf:"bytes,10,opt,name=offset,proto3" json:"offset,omitempty"`
	Dispersion           string   `protobuf:"bytes,11,opt,name=dispersion,proto3" json:"dispersion,omitempty"`
	IsSysPeer            bool     `protobuf:"varint,12,opt,name=is_sys_peer,json=isSysPeer,proto3" json:"is_sys_peer,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NtpEdmPeerInfoCommon) Reset()         { *m = NtpEdmPeerInfoCommon{} }
func (m *NtpEdmPeerInfoCommon) String() string { return proto.CompactTextString(m) }
func (*NtpEdmPeerInfoCommon) ProtoMessage()    {}
func (*NtpEdmPeerInfoCommon) Descriptor() ([]byte, []int) {
	return fileDescriptor_391b9e658e229961, []int{1}
}

func (m *NtpEdmPeerInfoCommon) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NtpEdmPeerInfoCommon.Unmarshal(m, b)
}
func (m *NtpEdmPeerInfoCommon) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NtpEdmPeerInfoCommon.Marshal(b, m, deterministic)
}
func (m *NtpEdmPeerInfoCommon) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NtpEdmPeerInfoCommon.Merge(m, src)
}
func (m *NtpEdmPeerInfoCommon) XXX_Size() int {
	return xxx_messageInfo_NtpEdmPeerInfoCommon.Size(m)
}
func (m *NtpEdmPeerInfoCommon) XXX_DiscardUnknown() {
	xxx_messageInfo_NtpEdmPeerInfoCommon.DiscardUnknown(m)
}

var xxx_messageInfo_NtpEdmPeerInfoCommon proto.InternalMessageInfo

func (m *NtpEdmPeerInfoCommon) GetHostMode() string {
	if m != nil {
		return m.HostMode
	}
	return ""
}

func (m *NtpEdmPeerInfoCommon) GetIsConfigured() bool {
	if m != nil {
		return m.IsConfigured
	}
	return false
}

func (m *NtpEdmPeerInfoCommon) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *NtpEdmPeerInfoCommon) GetReferenceId() string {
	if m != nil {
		return m.ReferenceId
	}
	return ""
}

func (m *NtpEdmPeerInfoCommon) GetHostPoll() uint32 {
	if m != nil {
		return m.HostPoll
	}
	return 0
}

func (m *NtpEdmPeerInfoCommon) GetReachability() uint32 {
	if m != nil {
		return m.Reachability
	}
	return 0
}

func (m *NtpEdmPeerInfoCommon) GetStratum() uint32 {
	if m != nil {
		return m.Stratum
	}
	return 0
}

func (m *NtpEdmPeerInfoCommon) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *NtpEdmPeerInfoCommon) GetDelay() string {
	if m != nil {
		return m.Delay
	}
	return ""
}

func (m *NtpEdmPeerInfoCommon) GetOffset() string {
	if m != nil {
		return m.Offset
	}
	return ""
}

func (m *NtpEdmPeerInfoCommon) GetDispersion() string {
	if m != nil {
		return m.Dispersion
	}
	return ""
}

func (m *NtpEdmPeerInfoCommon) GetIsSysPeer() bool {
	if m != nil {
		return m.IsSysPeer
	}
	return false
}

type EdmUlI struct {
	Int                  uint32   `protobuf:"varint,1,opt,name=int,proto3" json:"int,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EdmUlI) Reset()         { *m = EdmUlI{} }
func (m *EdmUlI) String() string { return proto.CompactTextString(m) }
func (*EdmUlI) ProtoMessage()    {}
func (*EdmUlI) Descriptor() ([]byte, []int) {
	return fileDescriptor_391b9e658e229961, []int{2}
}

func (m *EdmUlI) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EdmUlI.Unmarshal(m, b)
}
func (m *EdmUlI) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EdmUlI.Marshal(b, m, deterministic)
}
func (m *EdmUlI) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EdmUlI.Merge(m, src)
}
func (m *EdmUlI) XXX_Size() int {
	return xxx_messageInfo_EdmUlI.Size(m)
}
func (m *EdmUlI) XXX_DiscardUnknown() {
	xxx_messageInfo_EdmUlI.DiscardUnknown(m)
}

var xxx_messageInfo_EdmUlI proto.InternalMessageInfo

func (m *EdmUlI) GetInt() uint32 {
	if m != nil {
		return m.Int
	}
	return 0
}

type EdmUlF struct {
	Frac                 uint32   `protobuf:"varint,1,opt,name=frac,proto3" json:"frac,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EdmUlF) Reset()         { *m = EdmUlF{} }
func (m *EdmUlF) String() string { return proto.CompactTextString(m) }
func (*EdmUlF) ProtoMessage()    {}
func (*EdmUlF) Descriptor() ([]byte, []int) {
	return fileDescriptor_391b9e658e229961, []int{3}
}

func (m *EdmUlF) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EdmUlF.Unmarshal(m, b)
}
func (m *EdmUlF) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EdmUlF.Marshal(b, m, deterministic)
}
func (m *EdmUlF) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EdmUlF.Merge(m, src)
}
func (m *EdmUlF) XXX_Size() int {
	return xxx_messageInfo_EdmUlF.Size(m)
}
func (m *EdmUlF) XXX_DiscardUnknown() {
	xxx_messageInfo_EdmUlF.DiscardUnknown(m)
}

var xxx_messageInfo_EdmUlF proto.InternalMessageInfo

func (m *EdmUlF) GetFrac() uint32 {
	if m != nil {
		return m.Frac
	}
	return 0
}

type EdmLFp struct {
	Sec                  *EdmUlI  `protobuf:"bytes,1,opt,name=sec,proto3" json:"sec,omitempty"`
	FracSecs             *EdmUlF  `protobuf:"bytes,2,opt,name=frac_secs,json=fracSecs,proto3" json:"frac_secs,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EdmLFp) Reset()         { *m = EdmLFp{} }
func (m *EdmLFp) String() string { return proto.CompactTextString(m) }
func (*EdmLFp) ProtoMessage()    {}
func (*EdmLFp) Descriptor() ([]byte, []int) {
	return fileDescriptor_391b9e658e229961, []int{4}
}

func (m *EdmLFp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EdmLFp.Unmarshal(m, b)
}
func (m *EdmLFp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EdmLFp.Marshal(b, m, deterministic)
}
func (m *EdmLFp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EdmLFp.Merge(m, src)
}
func (m *EdmLFp) XXX_Size() int {
	return xxx_messageInfo_EdmLFp.Size(m)
}
func (m *EdmLFp) XXX_DiscardUnknown() {
	xxx_messageInfo_EdmLFp.DiscardUnknown(m)
}

var xxx_messageInfo_EdmLFp proto.InternalMessageInfo

func (m *EdmLFp) GetSec() *EdmUlI {
	if m != nil {
		return m.Sec
	}
	return nil
}

func (m *EdmLFp) GetFracSecs() *EdmUlF {
	if m != nil {
		return m.FracSecs
	}
	return nil
}

type FilterDetails struct {
	FilterDelay          string   `protobuf:"bytes,1,opt,name=filter_delay,json=filterDelay,proto3" json:"filter_delay,omitempty"`
	FilterOffset         string   `protobuf:"bytes,2,opt,name=filter_offset,json=filterOffset,proto3" json:"filter_offset,omitempty"`
	FilterDisp           string   `protobuf:"bytes,3,opt,name=filter_disp,json=filterDisp,proto3" json:"filter_disp,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FilterDetails) Reset()         { *m = FilterDetails{} }
func (m *FilterDetails) String() string { return proto.CompactTextString(m) }
func (*FilterDetails) ProtoMessage()    {}
func (*FilterDetails) Descriptor() ([]byte, []int) {
	return fileDescriptor_391b9e658e229961, []int{5}
}

func (m *FilterDetails) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FilterDetails.Unmarshal(m, b)
}
func (m *FilterDetails) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FilterDetails.Marshal(b, m, deterministic)
}
func (m *FilterDetails) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FilterDetails.Merge(m, src)
}
func (m *FilterDetails) XXX_Size() int {
	return xxx_messageInfo_FilterDetails.Size(m)
}
func (m *FilterDetails) XXX_DiscardUnknown() {
	xxx_messageInfo_FilterDetails.DiscardUnknown(m)
}

var xxx_messageInfo_FilterDetails proto.InternalMessageInfo

func (m *FilterDetails) GetFilterDelay() string {
	if m != nil {
		return m.FilterDelay
	}
	return ""
}

func (m *FilterDetails) GetFilterOffset() string {
	if m != nil {
		return m.FilterOffset
	}
	return ""
}

func (m *FilterDetails) GetFilterDisp() string {
	if m != nil {
		return m.FilterDisp
	}
	return ""
}

type NtpEdmPeerDetailInfo struct {
	PeerInfoCommon       *NtpEdmPeerInfoCommon `protobuf:"bytes,1,opt,name=peer_info_common,json=peerInfoCommon,proto3" json:"peer_info_common,omitempty"`
	Leap                 string                `protobuf:"bytes,2,opt,name=leap,proto3" json:"leap,omitempty"`
	PeerMode             string                `protobuf:"bytes,3,opt,name=peer_mode,json=peerMode,proto3" json:"peer_mode,omitempty"`
	PollInterval         uint32                `protobuf:"varint,4,opt,name=poll_interval,json=pollInterval,proto3" json:"poll_interval,omitempty"`
	IsRefClock           bool                  `protobuf:"varint,5,opt,name=is_ref_clock,json=isRefClock,proto3" json:"is_ref_clock,omitempty"`
	IsAuthenticated      bool                  `protobuf:"varint,6,opt,name=is_authenticated,json=isAuthenticated,proto3" json:"is_authenticated,omitempty"`
	RootDelay            string                `protobuf:"bytes,7,opt,name=root_delay,json=rootDelay,proto3" json:"root_delay,omitempty"`
	RootDispersion       string                `protobuf:"bytes,8,opt,name=root_dispersion,json=rootDispersion,proto3" json:"root_dispersion,omitempty"`
	SynchDistance        string                `protobuf:"bytes,9,opt,name=synch_distance,json=synchDistance,proto3" json:"synch_distance,omitempty"`
	RefTime              *EdmLFp               `protobuf:"bytes,10,opt,name=ref_time,json=refTime,proto3" json:"ref_time,omitempty"`
	Precision            string                `protobuf:"bytes,11,opt,name=precision,proto3" json:"precision,omitempty"`
	Version              uint32                `protobuf:"varint,12,opt,name=version,proto3" json:"version,omitempty"`
	OriginateTime        *EdmLFp               `protobuf:"bytes,13,opt,name=originate_time,json=originateTime,proto3" json:"originate_time,omitempty"`
	ReceiveTime          *EdmLFp               `protobuf:"bytes,14,opt,name=receive_time,json=receiveTime,proto3" json:"receive_time,omitempty"`
	TransmitTime         *EdmLFp               `protobuf:"bytes,15,opt,name=transmit_time,json=transmitTime,proto3" json:"transmit_time,omitempty"`
	FilterIndex          uint32                `protobuf:"varint,16,opt,name=filter_index,json=filterIndex,proto3" json:"filter_index,omitempty"`
	FilterDetail         []*FilterDetails      `protobuf:"bytes,17,rep,name=filter_detail,json=filterDetail,proto3" json:"filter_detail,omitempty"`
	CastFlags            uint32                `protobuf:"varint,18,opt,name=cast_flags,json=castFlags,proto3" json:"cast_flags,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *NtpEdmPeerDetailInfo) Reset()         { *m = NtpEdmPeerDetailInfo{} }
func (m *NtpEdmPeerDetailInfo) String() string { return proto.CompactTextString(m) }
func (*NtpEdmPeerDetailInfo) ProtoMessage()    {}
func (*NtpEdmPeerDetailInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_391b9e658e229961, []int{6}
}

func (m *NtpEdmPeerDetailInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NtpEdmPeerDetailInfo.Unmarshal(m, b)
}
func (m *NtpEdmPeerDetailInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NtpEdmPeerDetailInfo.Marshal(b, m, deterministic)
}
func (m *NtpEdmPeerDetailInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NtpEdmPeerDetailInfo.Merge(m, src)
}
func (m *NtpEdmPeerDetailInfo) XXX_Size() int {
	return xxx_messageInfo_NtpEdmPeerDetailInfo.Size(m)
}
func (m *NtpEdmPeerDetailInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_NtpEdmPeerDetailInfo.DiscardUnknown(m)
}

var xxx_messageInfo_NtpEdmPeerDetailInfo proto.InternalMessageInfo

func (m *NtpEdmPeerDetailInfo) GetPeerInfoCommon() *NtpEdmPeerInfoCommon {
	if m != nil {
		return m.PeerInfoCommon
	}
	return nil
}

func (m *NtpEdmPeerDetailInfo) GetLeap() string {
	if m != nil {
		return m.Leap
	}
	return ""
}

func (m *NtpEdmPeerDetailInfo) GetPeerMode() string {
	if m != nil {
		return m.PeerMode
	}
	return ""
}

func (m *NtpEdmPeerDetailInfo) GetPollInterval() uint32 {
	if m != nil {
		return m.PollInterval
	}
	return 0
}

func (m *NtpEdmPeerDetailInfo) GetIsRefClock() bool {
	if m != nil {
		return m.IsRefClock
	}
	return false
}

func (m *NtpEdmPeerDetailInfo) GetIsAuthenticated() bool {
	if m != nil {
		return m.IsAuthenticated
	}
	return false
}

func (m *NtpEdmPeerDetailInfo) GetRootDelay() string {
	if m != nil {
		return m.RootDelay
	}
	return ""
}

func (m *NtpEdmPeerDetailInfo) GetRootDispersion() string {
	if m != nil {
		return m.RootDispersion
	}
	return ""
}

func (m *NtpEdmPeerDetailInfo) GetSynchDistance() string {
	if m != nil {
		return m.SynchDistance
	}
	return ""
}

func (m *NtpEdmPeerDetailInfo) GetRefTime() *EdmLFp {
	if m != nil {
		return m.RefTime
	}
	return nil
}

func (m *NtpEdmPeerDetailInfo) GetPrecision() string {
	if m != nil {
		return m.Precision
	}
	return ""
}

func (m *NtpEdmPeerDetailInfo) GetVersion() uint32 {
	if m != nil {
		return m.Version
	}
	return 0
}

func (m *NtpEdmPeerDetailInfo) GetOriginateTime() *EdmLFp {
	if m != nil {
		return m.OriginateTime
	}
	return nil
}

func (m *NtpEdmPeerDetailInfo) GetReceiveTime() *EdmLFp {
	if m != nil {
		return m.ReceiveTime
	}
	return nil
}

func (m *NtpEdmPeerDetailInfo) GetTransmitTime() *EdmLFp {
	if m != nil {
		return m.TransmitTime
	}
	return nil
}

func (m *NtpEdmPeerDetailInfo) GetFilterIndex() uint32 {
	if m != nil {
		return m.FilterIndex
	}
	return 0
}

func (m *NtpEdmPeerDetailInfo) GetFilterDetail() []*FilterDetails {
	if m != nil {
		return m.FilterDetail
	}
	return nil
}

func (m *NtpEdmPeerDetailInfo) GetCastFlags() uint32 {
	if m != nil {
		return m.CastFlags
	}
	return 0
}

type NtpEdmAssocDetailResult struct {
	IsNtpEnabled         bool                    `protobuf:"varint,50,opt,name=is_ntp_enabled,json=isNtpEnabled,proto3" json:"is_ntp_enabled,omitempty"`
	SysLeap              string                  `protobuf:"bytes,51,opt,name=sys_leap,json=sysLeap,proto3" json:"sys_leap,omitempty"`
	PeerDetailInfo       []*NtpEdmPeerDetailInfo `protobuf:"bytes,52,rep,name=peer_detail_info,json=peerDetailInfo,proto3" json:"peer_detail_info,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *NtpEdmAssocDetailResult) Reset()         { *m = NtpEdmAssocDetailResult{} }
func (m *NtpEdmAssocDetailResult) String() string { return proto.CompactTextString(m) }
func (*NtpEdmAssocDetailResult) ProtoMessage()    {}
func (*NtpEdmAssocDetailResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_391b9e658e229961, []int{7}
}

func (m *NtpEdmAssocDetailResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NtpEdmAssocDetailResult.Unmarshal(m, b)
}
func (m *NtpEdmAssocDetailResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NtpEdmAssocDetailResult.Marshal(b, m, deterministic)
}
func (m *NtpEdmAssocDetailResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NtpEdmAssocDetailResult.Merge(m, src)
}
func (m *NtpEdmAssocDetailResult) XXX_Size() int {
	return xxx_messageInfo_NtpEdmAssocDetailResult.Size(m)
}
func (m *NtpEdmAssocDetailResult) XXX_DiscardUnknown() {
	xxx_messageInfo_NtpEdmAssocDetailResult.DiscardUnknown(m)
}

var xxx_messageInfo_NtpEdmAssocDetailResult proto.InternalMessageInfo

func (m *NtpEdmAssocDetailResult) GetIsNtpEnabled() bool {
	if m != nil {
		return m.IsNtpEnabled
	}
	return false
}

func (m *NtpEdmAssocDetailResult) GetSysLeap() string {
	if m != nil {
		return m.SysLeap
	}
	return ""
}

func (m *NtpEdmAssocDetailResult) GetPeerDetailInfo() []*NtpEdmPeerDetailInfo {
	if m != nil {
		return m.PeerDetailInfo
	}
	return nil
}

func init() {
	proto.RegisterType((*NtpEdmAssocDetailResult_KEYS)(nil), "cisco_ios_xr_ip_ntp_oper.ntp.nodes.node.associations_detail.ntp_edm_assoc_detail_result_KEYS")
	proto.RegisterType((*NtpEdmPeerInfoCommon)(nil), "cisco_ios_xr_ip_ntp_oper.ntp.nodes.node.associations_detail.ntp_edm_peer_info_common")
	proto.RegisterType((*EdmUlI)(nil), "cisco_ios_xr_ip_ntp_oper.ntp.nodes.node.associations_detail.edm_ul_i")
	proto.RegisterType((*EdmUlF)(nil), "cisco_ios_xr_ip_ntp_oper.ntp.nodes.node.associations_detail.edm_ul_f")
	proto.RegisterType((*EdmLFp)(nil), "cisco_ios_xr_ip_ntp_oper.ntp.nodes.node.associations_detail.edm_l_fp")
	proto.RegisterType((*FilterDetails)(nil), "cisco_ios_xr_ip_ntp_oper.ntp.nodes.node.associations_detail.filter_details")
	proto.RegisterType((*NtpEdmPeerDetailInfo)(nil), "cisco_ios_xr_ip_ntp_oper.ntp.nodes.node.associations_detail.ntp_edm_peer_detail_info")
	proto.RegisterType((*NtpEdmAssocDetailResult)(nil), "cisco_ios_xr_ip_ntp_oper.ntp.nodes.node.associations_detail.ntp_edm_assoc_detail_result")
}

func init() { proto.RegisterFile("ntp_edm_assoc_detail_result.proto", fileDescriptor_391b9e658e229961) }

var fileDescriptor_391b9e658e229961 = []byte{
	// 867 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x56, 0xcd, 0x6e, 0x23, 0x45,
	0x10, 0x96, 0x93, 0x6c, 0x32, 0x2e, 0xff, 0x24, 0xb4, 0x10, 0x1a, 0xb4, 0x4b, 0xf0, 0x7a, 0x41,
	0x84, 0x8b, 0x0f, 0x59, 0xc4, 0x85, 0x13, 0x4a, 0x82, 0x14, 0x2d, 0x3f, 0xab, 0x09, 0x08, 0x71,
	0x6a, 0x3a, 0x33, 0x35, 0x71, 0xc3, 0xb8, 0x7b, 0xd4, 0xd5, 0x8e, 0xd6, 0x27, 0x1e, 0x8d, 0x23,
	0x8f, 0xc1, 0x7b, 0x70, 0x42, 0x5d, 0xdd, 0x63, 0x7b, 0x57, 0xda, 0x5c, 0xe2, 0x8b, 0x35, 0xfd,
	0xd5, 0x6f, 0x57, 0xd5, 0x57, 0x6d, 0x78, 0x6e, 0x7c, 0x2b, 0xb1, 0x5a, 0x48, 0x45, 0x64, 0x4b,
	0x59, 0xa1, 0x57, 0xba, 0x91, 0x0e, 0x69, 0xd9, 0xf8, 0x59, 0xeb, 0xac, 0xb7, 0xe2, 0x9b, 0x52,
	0x53, 0x69, 0xa5, 0xb6, 0x24, 0xdf, 0x38, 0xa9, 0x5b, 0x19, 0x4c, 0x6c, 0x8b, 0x6e, 0x66, 0x7c,
	0x3b, 0x33, 0xb6, 0x42, 0xe2, 0xdf, 0x19, 0xbb, 0xd0, 0xca, 0x6b, 0x6b, 0x28, 0x79, 0x9a, 0x7e,
	0x0d, 0x93, 0x07, 0x22, 0xc8, 0x57, 0x57, 0xbf, 0xdd, 0x08, 0x01, 0x07, 0xc1, 0x3e, 0xef, 0x4d,
	0x7a, 0x67, 0xfd, 0x82, 0xbf, 0xa7, 0xff, 0xed, 0x41, 0xde, 0x19, 0xb6, 0x88, 0x4e, 0x6a, 0x53,
	0x5b, 0x59, 0xda, 0xc5, 0xc2, 0x1a, 0xf1, 0x14, 0xfa, 0x73, 0x4b, 0x5e, 0x2e, 0x36, 0x56, 0x59,
	0x00, 0x7e, 0xb0, 0x15, 0x8a, 0x17, 0x30, 0xd2, 0x24, 0x4b, 0x6b, 0x6a, 0x7d, 0xb7, 0x74, 0x58,
	0xe5, 0x7b, 0x93, 0xde, 0x59, 0x56, 0x0c, 0x35, 0x5d, 0xac, 0x31, 0x91, 0xc3, 0x91, 0xaa, 0x2a,
	0x87, 0x44, 0xf9, 0x3e, 0xdb, 0x77, 0x47, 0xf1, 0x1c, 0x86, 0x0e, 0x6b, 0x74, 0x68, 0x4a, 0x94,
	0xba, 0xca, 0x0f, 0x58, 0x3c, 0x58, 0x63, 0xd7, 0xd5, 0x3a, 0x7c, 0x6b, 0x9b, 0x26, 0x7f, 0x32,
	0xe9, 0x9d, 0x8d, 0x62, 0xf8, 0xd7, 0xb6, 0x69, 0xc4, 0x34, 0xd8, 0xab, 0x72, 0xae, 0x6e, 0x75,
	0xa3, 0xfd, 0x2a, 0x3f, 0x64, 0xf9, 0x5b, 0x58, 0x88, 0x4e, 0xde, 0x29, 0xbf, 0x5c, 0xe4, 0x47,
	0x2c, 0xee, 0x8e, 0xe2, 0x23, 0x38, 0x24, 0xaf, 0xfc, 0x92, 0xf2, 0x8c, 0xe3, 0xa6, 0x93, 0xf8,
	0x10, 0x9e, 0x54, 0xd8, 0xa8, 0x55, 0xde, 0x67, 0x38, 0x1e, 0x82, 0xb6, 0xad, 0x6b, 0x42, 0x9f,
	0x43, 0xd4, 0x8e, 0x27, 0x71, 0x0a, 0x50, 0x69, 0x6a, 0xd1, 0x91, 0xb6, 0x26, 0x1f, 0xb0, 0x6c,
	0x0b, 0x11, 0xa7, 0x30, 0xd0, 0x24, 0x69, 0x45, 0x5c, 0xda, 0x7c, 0xc8, 0x05, 0xea, 0x6b, 0xba,
	0x59, 0xd1, 0x6b, 0x44, 0x37, 0x7d, 0x06, 0x59, 0xa8, 0xfb, 0xb2, 0x91, 0x5a, 0x9c, 0xc0, 0xbe,
	0x36, 0x9e, 0xab, 0x3c, 0x2a, 0xc2, 0xe7, 0xf4, 0x74, 0x2d, 0xad, 0x43, 0xeb, 0x6a, 0xa7, 0xca,
	0x24, 0xe6, 0xef, 0xe9, 0x3f, 0xbd, 0xa8, 0xd0, 0xc8, 0xba, 0x15, 0xbf, 0xc2, 0x3e, 0x61, 0x94,
	0x0f, 0xce, 0xaf, 0x66, 0x8f, 0x18, 0xa5, 0x59, 0x97, 0x52, 0x11, 0x3c, 0x8a, 0x5b, 0xe8, 0x87,
	0x68, 0x92, 0xb0, 0x24, 0x6e, 0xf1, 0x8e, 0xdc, 0xd7, 0x45, 0x16, 0xfc, 0xde, 0x60, 0x49, 0xd3,
	0x15, 0x8c, 0x6b, 0xdd, 0x78, 0x74, 0x49, 0x87, 0xa7, 0x63, 0x8d, 0x84, 0x76, 0xc4, 0xe1, 0x1b,
	0x44, 0xec, 0x92, 0x9b, 0xf2, 0x02, 0x46, 0x49, 0x25, 0xf5, 0x66, 0x8f, 0x75, 0x92, 0xdd, 0x4f,
	0xb1, 0x43, 0x9f, 0xc2, 0xa0, 0xf3, 0xa3, 0xa9, 0x4d, 0x33, 0x08, 0xc9, 0x8d, 0xa6, 0x76, 0xfa,
	0x77, 0xf6, 0xce, 0xfc, 0x27, 0xde, 0x04, 0x1a, 0x88, 0xbf, 0xe0, 0xe4, 0x5d, 0x4e, 0xa4, 0x0a,
	0xff, 0xf2, 0xa8, 0x12, 0xbc, 0x8f, 0x70, 0xc5, 0x38, 0x20, 0xd7, 0xa6, 0xb6, 0x17, 0x91, 0x80,
	0x02, 0x0e, 0x1a, 0x54, 0x6d, 0xba, 0x1a, 0x7f, 0x07, 0x56, 0xb0, 0x1d, 0x93, 0x32, 0x5e, 0x28,
	0x0b, 0x40, 0x47, 0xca, 0xc0, 0x16, 0xa9, 0x8d, 0x47, 0x77, 0xaf, 0x1a, 0xa6, 0xd5, 0xa8, 0x18,
	0x06, 0xf0, 0x3a, 0x61, 0x62, 0x02, 0x43, 0x4d, 0xd2, 0x61, 0x2d, 0xcb, 0xc6, 0x96, 0x7f, 0x32,
	0xb5, 0xb2, 0x02, 0x34, 0x15, 0x58, 0x5f, 0x04, 0x44, 0x7c, 0x09, 0x27, 0x9a, 0xa4, 0x5a, 0xfa,
	0x39, 0x1a, 0xaf, 0x4b, 0xe5, 0xb1, 0x62, 0x82, 0x65, 0xc5, 0xb1, 0xa6, 0x6f, 0xb7, 0x61, 0xf1,
	0x09, 0x80, 0xb3, 0xd6, 0xa7, 0x3e, 0x1d, 0x71, 0x3e, 0xfd, 0x80, 0xc4, 0x2e, 0x7d, 0x01, 0xc7,
	0x51, 0xbc, 0xe1, 0x49, 0x64, 0xdc, 0x98, 0x75, 0x36, 0x5c, 0xf9, 0x1c, 0xc6, 0xb4, 0x32, 0xe5,
	0x3c, 0x68, 0x7a, 0x65, 0x4a, 0x4c, 0x14, 0x1c, 0x31, 0x7a, 0x99, 0x40, 0xf1, 0x3b, 0x64, 0x21,
	0x71, 0xaf, 0x17, 0xc8, 0x64, 0xdc, 0xc5, 0x34, 0x06, 0x02, 0x15, 0x47, 0x0e, 0xeb, 0x9f, 0xf5,
	0x02, 0xc5, 0x33, 0xe8, 0xb7, 0x0e, 0x4b, 0xbd, 0xc5, 0xe9, 0x0d, 0x10, 0x56, 0xca, 0x7d, 0xba,
	0xc7, 0x30, 0xae, 0x94, 0x74, 0x14, 0x0d, 0x8c, 0xad, 0xd3, 0x77, 0xda, 0x28, 0x8f, 0x31, 0xbf,
	0xd1, 0x2e, 0xf3, 0x1b, 0xad, 0x9d, 0x73, 0x96, 0xf3, 0xb0, 0xfe, 0x4a, 0xd4, 0xf7, 0x29, 0xd6,
	0x78, 0x97, 0xb1, 0x06, 0xc9, 0x35, 0x47, 0xfa, 0x03, 0x46, 0xde, 0x29, 0x43, 0x0b, 0xed, 0x63,
	0xa8, 0xe3, 0x5d, 0x86, 0x1a, 0x76, 0xbe, 0x39, 0xd6, 0x86, 0xf6, 0xda, 0x54, 0xf8, 0x26, 0x3f,
	0xe1, 0x12, 0x27, 0x0a, 0x5f, 0x07, 0x48, 0xb4, 0x6b, 0xda, 0x47, 0x57, 0xf9, 0x07, 0x93, 0xfd,
	0xb3, 0xc1, 0xf9, 0xab, 0x47, 0xa5, 0xf3, 0xf6, 0xf6, 0xe9, 0x76, 0xc8, 0x25, 0x1f, 0xc3, 0x84,
	0x97, 0x8a, 0xbc, 0xac, 0x1b, 0x75, 0x47, 0xb9, 0xe0, 0x94, 0xfa, 0x01, 0xf9, 0x2e, 0x00, 0xd3,
	0x7f, 0x7b, 0xf0, 0xf4, 0x81, 0xa7, 0x57, 0x7c, 0x06, 0x63, 0x4d, 0x9c, 0x0d, 0x1a, 0x75, 0xdb,
	0x60, 0x95, 0x9f, 0x77, 0x0f, 0xe5, 0x8f, 0xbe, 0xbd, 0x8a, 0x98, 0xf8, 0x18, 0xb2, 0xf0, 0x4e,
	0x30, 0xdb, 0x5f, 0xc6, 0x97, 0x92, 0x56, 0xf4, 0x7d, 0x20, 0x7c, 0xb7, 0x85, 0xb6, 0x36, 0x53,
	0xfe, 0x15, 0x5f, 0x7a, 0x87, 0x5b, 0x68, 0xcb, 0x79, 0xdc, 0x42, 0xf1, 0xf2, 0x61, 0x17, 0xdd,
	0x1e, 0xf2, 0xff, 0x93, 0x97, 0xff, 0x07, 0x00, 0x00, 0xff, 0xff, 0xb0, 0xb1, 0xa6, 0x16, 0xc4,
	0x08, 0x00, 0x00,
}
