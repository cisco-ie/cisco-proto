/*
Copyright 2019 Cisco Systems

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: pce_node_summary_bag.proto

package cisco_ios_xr_infra_xtc_oper_pce_topology_summaries_topology_summary

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type PceNodeSummaryBag_KEYS struct {
	Af                   string   `protobuf:"bytes,1,opt,name=af,proto3" json:"af,omitempty"`
	Protocol             string   `protobuf:"bytes,2,opt,name=protocol,proto3" json:"protocol,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PceNodeSummaryBag_KEYS) Reset()         { *m = PceNodeSummaryBag_KEYS{} }
func (m *PceNodeSummaryBag_KEYS) String() string { return proto.CompactTextString(m) }
func (*PceNodeSummaryBag_KEYS) ProtoMessage()    {}
func (*PceNodeSummaryBag_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_0129059af41579e5, []int{0}
}

func (m *PceNodeSummaryBag_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PceNodeSummaryBag_KEYS.Unmarshal(m, b)
}
func (m *PceNodeSummaryBag_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PceNodeSummaryBag_KEYS.Marshal(b, m, deterministic)
}
func (m *PceNodeSummaryBag_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PceNodeSummaryBag_KEYS.Merge(m, src)
}
func (m *PceNodeSummaryBag_KEYS) XXX_Size() int {
	return xxx_messageInfo_PceNodeSummaryBag_KEYS.Size(m)
}
func (m *PceNodeSummaryBag_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_PceNodeSummaryBag_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_PceNodeSummaryBag_KEYS proto.InternalMessageInfo

func (m *PceNodeSummaryBag_KEYS) GetAf() string {
	if m != nil {
		return m.Af
	}
	return ""
}

func (m *PceNodeSummaryBag_KEYS) GetProtocol() string {
	if m != nil {
		return m.Protocol
	}
	return ""
}

type PceTopoStatsBag struct {
	NumNodesAdded        uint32   `protobuf:"varint,1,opt,name=num_nodes_added,json=numNodesAdded,proto3" json:"num_nodes_added,omitempty"`
	NumNodesDeleted      uint32   `protobuf:"varint,2,opt,name=num_nodes_deleted,json=numNodesDeleted,proto3" json:"num_nodes_deleted,omitempty"`
	NumLinksAdded        uint32   `protobuf:"varint,3,opt,name=num_links_added,json=numLinksAdded,proto3" json:"num_links_added,omitempty"`
	NumLinksDeleted      uint32   `protobuf:"varint,4,opt,name=num_links_deleted,json=numLinksDeleted,proto3" json:"num_links_deleted,omitempty"`
	NumPrefixesAdded     uint32   `protobuf:"varint,5,opt,name=num_prefixes_added,json=numPrefixesAdded,proto3" json:"num_prefixes_added,omitempty"`
	NumPrefixesDeleted   uint32   `protobuf:"varint,6,opt,name=num_prefixes_deleted,json=numPrefixesDeleted,proto3" json:"num_prefixes_deleted,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PceTopoStatsBag) Reset()         { *m = PceTopoStatsBag{} }
func (m *PceTopoStatsBag) String() string { return proto.CompactTextString(m) }
func (*PceTopoStatsBag) ProtoMessage()    {}
func (*PceTopoStatsBag) Descriptor() ([]byte, []int) {
	return fileDescriptor_0129059af41579e5, []int{1}
}

func (m *PceTopoStatsBag) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PceTopoStatsBag.Unmarshal(m, b)
}
func (m *PceTopoStatsBag) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PceTopoStatsBag.Marshal(b, m, deterministic)
}
func (m *PceTopoStatsBag) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PceTopoStatsBag.Merge(m, src)
}
func (m *PceTopoStatsBag) XXX_Size() int {
	return xxx_messageInfo_PceTopoStatsBag.Size(m)
}
func (m *PceTopoStatsBag) XXX_DiscardUnknown() {
	xxx_messageInfo_PceTopoStatsBag.DiscardUnknown(m)
}

var xxx_messageInfo_PceTopoStatsBag proto.InternalMessageInfo

func (m *PceTopoStatsBag) GetNumNodesAdded() uint32 {
	if m != nil {
		return m.NumNodesAdded
	}
	return 0
}

func (m *PceTopoStatsBag) GetNumNodesDeleted() uint32 {
	if m != nil {
		return m.NumNodesDeleted
	}
	return 0
}

func (m *PceTopoStatsBag) GetNumLinksAdded() uint32 {
	if m != nil {
		return m.NumLinksAdded
	}
	return 0
}

func (m *PceTopoStatsBag) GetNumLinksDeleted() uint32 {
	if m != nil {
		return m.NumLinksDeleted
	}
	return 0
}

func (m *PceTopoStatsBag) GetNumPrefixesAdded() uint32 {
	if m != nil {
		return m.NumPrefixesAdded
	}
	return 0
}

func (m *PceTopoStatsBag) GetNumPrefixesDeleted() uint32 {
	if m != nil {
		return m.NumPrefixesDeleted
	}
	return 0
}

type PceNodeSummaryBag struct {
	Nodes                    uint32           `protobuf:"varint,50,opt,name=nodes,proto3" json:"nodes,omitempty"`
	LookupNodes              uint32           `protobuf:"varint,51,opt,name=lookup_nodes,json=lookupNodes,proto3" json:"lookup_nodes,omitempty"`
	Prefixes                 uint32           `protobuf:"varint,52,opt,name=prefixes,proto3" json:"prefixes,omitempty"`
	PrefixSids               uint32           `protobuf:"varint,53,opt,name=prefix_sids,json=prefixSids,proto3" json:"prefix_sids,omitempty"`
	RegularPrefixSids        uint32           `protobuf:"varint,54,opt,name=regular_prefix_sids,json=regularPrefixSids,proto3" json:"regular_prefix_sids,omitempty"`
	StrictPrefixSids         uint32           `protobuf:"varint,55,opt,name=strict_prefix_sids,json=strictPrefixSids,proto3" json:"strict_prefix_sids,omitempty"`
	Links                    uint32           `protobuf:"varint,56,opt,name=links,proto3" json:"links,omitempty"`
	EpeLinks                 uint32           `protobuf:"varint,57,opt,name=epe_links,json=epeLinks,proto3" json:"epe_links,omitempty"`
	AdjacencySids            uint32           `protobuf:"varint,58,opt,name=adjacency_sids,json=adjacencySids,proto3" json:"adjacency_sids,omitempty"`
	Epesids                  uint32           `protobuf:"varint,59,opt,name=epesids,proto3" json:"epesids,omitempty"`
	ProtectedAdjacencySids   uint32           `protobuf:"varint,60,opt,name=protected_adjacency_sids,json=protectedAdjacencySids,proto3" json:"protected_adjacency_sids,omitempty"`
	UnProtectedAdjacencySids uint32           `protobuf:"varint,61,opt,name=un_protected_adjacency_sids,json=unProtectedAdjacencySids,proto3" json:"un_protected_adjacency_sids,omitempty"`
	StatsTopologyUpdate      *PceTopoStatsBag `protobuf:"bytes,62,opt,name=stats_topology_update,json=statsTopologyUpdate,proto3" json:"stats_topology_update,omitempty"`
	TopologyConsistent       bool             `protobuf:"varint,63,opt,name=topology_consistent,json=topologyConsistent,proto3" json:"topology_consistent,omitempty"`
	XXX_NoUnkeyedLiteral     struct{}         `json:"-"`
	XXX_unrecognized         []byte           `json:"-"`
	XXX_sizecache            int32            `json:"-"`
}

func (m *PceNodeSummaryBag) Reset()         { *m = PceNodeSummaryBag{} }
func (m *PceNodeSummaryBag) String() string { return proto.CompactTextString(m) }
func (*PceNodeSummaryBag) ProtoMessage()    {}
func (*PceNodeSummaryBag) Descriptor() ([]byte, []int) {
	return fileDescriptor_0129059af41579e5, []int{2}
}

func (m *PceNodeSummaryBag) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PceNodeSummaryBag.Unmarshal(m, b)
}
func (m *PceNodeSummaryBag) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PceNodeSummaryBag.Marshal(b, m, deterministic)
}
func (m *PceNodeSummaryBag) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PceNodeSummaryBag.Merge(m, src)
}
func (m *PceNodeSummaryBag) XXX_Size() int {
	return xxx_messageInfo_PceNodeSummaryBag.Size(m)
}
func (m *PceNodeSummaryBag) XXX_DiscardUnknown() {
	xxx_messageInfo_PceNodeSummaryBag.DiscardUnknown(m)
}

var xxx_messageInfo_PceNodeSummaryBag proto.InternalMessageInfo

func (m *PceNodeSummaryBag) GetNodes() uint32 {
	if m != nil {
		return m.Nodes
	}
	return 0
}

func (m *PceNodeSummaryBag) GetLookupNodes() uint32 {
	if m != nil {
		return m.LookupNodes
	}
	return 0
}

func (m *PceNodeSummaryBag) GetPrefixes() uint32 {
	if m != nil {
		return m.Prefixes
	}
	return 0
}

func (m *PceNodeSummaryBag) GetPrefixSids() uint32 {
	if m != nil {
		return m.PrefixSids
	}
	return 0
}

func (m *PceNodeSummaryBag) GetRegularPrefixSids() uint32 {
	if m != nil {
		return m.RegularPrefixSids
	}
	return 0
}

func (m *PceNodeSummaryBag) GetStrictPrefixSids() uint32 {
	if m != nil {
		return m.StrictPrefixSids
	}
	return 0
}

func (m *PceNodeSummaryBag) GetLinks() uint32 {
	if m != nil {
		return m.Links
	}
	return 0
}

func (m *PceNodeSummaryBag) GetEpeLinks() uint32 {
	if m != nil {
		return m.EpeLinks
	}
	return 0
}

func (m *PceNodeSummaryBag) GetAdjacencySids() uint32 {
	if m != nil {
		return m.AdjacencySids
	}
	return 0
}

func (m *PceNodeSummaryBag) GetEpesids() uint32 {
	if m != nil {
		return m.Epesids
	}
	return 0
}

func (m *PceNodeSummaryBag) GetProtectedAdjacencySids() uint32 {
	if m != nil {
		return m.ProtectedAdjacencySids
	}
	return 0
}

func (m *PceNodeSummaryBag) GetUnProtectedAdjacencySids() uint32 {
	if m != nil {
		return m.UnProtectedAdjacencySids
	}
	return 0
}

func (m *PceNodeSummaryBag) GetStatsTopologyUpdate() *PceTopoStatsBag {
	if m != nil {
		return m.StatsTopologyUpdate
	}
	return nil
}

func (m *PceNodeSummaryBag) GetTopologyConsistent() bool {
	if m != nil {
		return m.TopologyConsistent
	}
	return false
}

func init() {
	proto.RegisterType((*PceNodeSummaryBag_KEYS)(nil), "cisco_ios_xr_infra_xtc_oper.pce.topology_summaries.topology_summary.pce_node_summary_bag_KEYS")
	proto.RegisterType((*PceTopoStatsBag)(nil), "cisco_ios_xr_infra_xtc_oper.pce.topology_summaries.topology_summary.pce_topo_stats_bag")
	proto.RegisterType((*PceNodeSummaryBag)(nil), "cisco_ios_xr_infra_xtc_oper.pce.topology_summaries.topology_summary.pce_node_summary_bag")
}

func init() { proto.RegisterFile("pce_node_summary_bag.proto", fileDescriptor_0129059af41579e5) }

var fileDescriptor_0129059af41579e5 = []byte{
	// 529 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x93, 0x4f, 0x6f, 0xd3, 0x40,
	0x10, 0xc5, 0x95, 0x40, 0x4a, 0x3b, 0x21, 0x2d, 0xdd, 0x04, 0xb4, 0xb4, 0x07, 0x42, 0x24, 0x50,
	0x84, 0x2a, 0x83, 0x5a, 0xfe, 0x94, 0x3f, 0x05, 0x55, 0x05, 0x71, 0x00, 0xa1, 0x28, 0x05, 0x21,
	0x4e, 0x2b, 0x77, 0x77, 0x12, 0x99, 0x3a, 0xbb, 0x2b, 0xef, 0x5a, 0x4a, 0x3e, 0x03, 0x77, 0x4e,
	0x7c, 0x58, 0xe4, 0xd9, 0xd8, 0x4d, 0x4a, 0xb8, 0xf5, 0xe6, 0x79, 0xef, 0xcd, 0x6f, 0xec, 0x59,
	0x2f, 0xec, 0x58, 0x89, 0x42, 0x1b, 0x85, 0xc2, 0xe5, 0x93, 0x49, 0x9c, 0xcd, 0xc4, 0x59, 0x3c,
	0x8e, 0x6c, 0x66, 0xbc, 0x61, 0x27, 0x32, 0x71, 0xd2, 0x88, 0xc4, 0x38, 0x31, 0xcd, 0x44, 0xa2,
	0x47, 0x59, 0x2c, 0xa6, 0x5e, 0x0a, 0x63, 0x31, 0x8b, 0xac, 0xc4, 0xc8, 0x1b, 0x6b, 0x52, 0x33,
	0x9e, 0xcd, 0x7b, 0x13, 0x74, 0x97, 0xa5, 0x59, 0xef, 0x23, 0xdc, 0x5d, 0x35, 0x42, 0x7c, 0xfa,
	0xf0, 0xe3, 0x94, 0x6d, 0x42, 0x3d, 0x1e, 0xf1, 0x5a, 0xb7, 0xd6, 0xdf, 0x18, 0xd6, 0xe3, 0x11,
	0xdb, 0x81, 0x75, 0x1a, 0x2d, 0x4d, 0xca, 0xeb, 0xa4, 0x56, 0x75, 0xef, 0x4f, 0x1d, 0x58, 0x41,
	0x2a, 0x26, 0x08, 0xe7, 0x63, 0xef, 0x0a, 0x0e, 0x7b, 0x08, 0x5b, 0x3a, 0x9f, 0x10, 0xdf, 0x89,
	0x58, 0x29, 0x54, 0xc4, 0x6b, 0x0d, 0x5b, 0x3a, 0x9f, 0x7c, 0x29, 0xd4, 0xe3, 0x42, 0x64, 0x8f,
	0x60, 0xfb, 0x22, 0xa7, 0x30, 0x45, 0x8f, 0x8a, 0x66, 0xb4, 0x86, 0x5b, 0x65, 0xf2, 0x7d, 0x90,
	0x4b, 0x66, 0x9a, 0xe8, 0xf3, 0x92, 0x79, 0xad, 0x62, 0x7e, 0x2e, 0xd4, 0x25, 0x66, 0xc8, 0x95,
	0xcc, 0xeb, 0x15, 0x93, 0x92, 0x25, 0x73, 0x0f, 0x58, 0x91, 0xb5, 0x19, 0x8e, 0x92, 0x69, 0xf5,
	0xaa, 0x0d, 0x0a, 0xdf, 0xd2, 0xf9, 0x64, 0x30, 0x37, 0x02, 0xf9, 0x09, 0x74, 0x96, 0xd2, 0x25,
	0x7c, 0x8d, 0xf2, 0x6c, 0x21, 0x3f, 0xe7, 0xf7, 0x7e, 0x37, 0xa0, 0xb3, 0x6a, 0xd1, 0xac, 0x03,
	0x0d, 0xfa, 0x68, 0xbe, 0x4f, 0xbd, 0xa1, 0x60, 0xf7, 0xe1, 0x66, 0x6a, 0xcc, 0x79, 0x6e, 0xc3,
	0x46, 0xf8, 0x01, 0x99, 0xcd, 0xa0, 0xd1, 0x32, 0xc2, 0x61, 0x84, 0x21, 0xfc, 0x29, 0xd9, 0x55,
	0xcd, 0xee, 0x41, 0x33, 0x3c, 0x0b, 0x97, 0x28, 0xc7, 0x9f, 0x91, 0x0d, 0x41, 0x3a, 0x4d, 0x94,
	0x63, 0x11, 0xb4, 0x33, 0x1c, 0xe7, 0x69, 0x9c, 0x89, 0xc5, 0xe0, 0x73, 0x0a, 0x6e, 0xcf, 0xad,
	0xc1, 0x45, 0x7e, 0x0f, 0x98, 0xf3, 0x59, 0x22, 0xfd, 0x52, 0xfc, 0x45, 0x58, 0x4f, 0x70, 0x16,
	0xd2, 0x1d, 0x68, 0xd0, 0xd2, 0xf9, 0x61, 0xf8, 0x26, 0x2a, 0xd8, 0x2e, 0x6c, 0xa0, 0xc5, 0x70,
	0x1c, 0xfc, 0x65, 0x78, 0x63, 0xb4, 0x48, 0xc7, 0xc0, 0x1e, 0xc0, 0x66, 0xac, 0x7e, 0xc6, 0x12,
	0xb5, 0x9c, 0x05, 0xf8, 0xab, 0x70, 0xa4, 0x95, 0x4a, 0x64, 0x0e, 0x37, 0xd0, 0x22, 0xf9, 0xaf,
	0xc9, 0x2f, 0x4b, 0x76, 0x08, 0xbc, 0xf8, 0x17, 0x51, 0x7a, 0x54, 0xe2, 0x12, 0xea, 0x0d, 0x45,
	0xef, 0x54, 0xfe, 0xf1, 0x12, 0xf3, 0x08, 0x76, 0x73, 0x2d, 0xfe, 0xdb, 0x7c, 0x44, 0xcd, 0x3c,
	0xd7, 0x83, 0xd5, 0xed, 0xbf, 0x6a, 0x70, 0x3b, 0xfc, 0xef, 0xd5, 0xe5, 0xca, 0xad, 0x8a, 0x3d,
	0xf2, 0xb7, 0xdd, 0x5a, 0xbf, 0xb9, 0xff, 0x3d, 0xba, 0x82, 0x7b, 0x1a, 0xfd, 0x7b, 0xb5, 0x86,
	0x6d, 0x7a, 0xfc, 0x3a, 0x4f, 0x7e, 0xa3, 0x99, 0xec, 0x31, 0xb4, 0xab, 0x5e, 0x69, 0xb4, 0x4b,
	0x9c, 0x47, 0xed, 0xf9, 0xbb, 0x6e, 0xad, 0xbf, 0x3e, 0x64, 0xa5, 0x75, 0x52, 0x39, 0x67, 0x6b,
	0x74, 0x83, 0x0f, 0xfe, 0x06, 0x00, 0x00, 0xff, 0xff, 0xdd, 0xcb, 0x15, 0x21, 0x6a, 0x04, 0x00,
	0x00,
}
