/*
Copyright 2019 Cisco Systems

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: inv_pwg_info.proto

package cisco_ios_xr_invmgr_oper_inventory_racks_rack_entity_slot_tsi1s_tsi1_tsi2s_tsi2_tsi3s_tsi3_tsi4s_tsi4_attributes_pwg_info

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type InvPwgInfo_KEYS struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Name_1               string   `protobuf:"bytes,2,opt,name=name_1,json=name1,proto3" json:"name_1,omitempty"`
	Name_2               string   `protobuf:"bytes,3,opt,name=name_2,json=name2,proto3" json:"name_2,omitempty"`
	Name_3               string   `protobuf:"bytes,4,opt,name=name_3,json=name3,proto3" json:"name_3,omitempty"`
	Name_4               string   `protobuf:"bytes,5,opt,name=name_4,json=name4,proto3" json:"name_4,omitempty"`
	Name_5               string   `protobuf:"bytes,6,opt,name=name_5,json=name5,proto3" json:"name_5,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *InvPwgInfo_KEYS) Reset()         { *m = InvPwgInfo_KEYS{} }
func (m *InvPwgInfo_KEYS) String() string { return proto.CompactTextString(m) }
func (*InvPwgInfo_KEYS) ProtoMessage()    {}
func (*InvPwgInfo_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_aa6fe1f6f982d195, []int{0}
}

func (m *InvPwgInfo_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InvPwgInfo_KEYS.Unmarshal(m, b)
}
func (m *InvPwgInfo_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InvPwgInfo_KEYS.Marshal(b, m, deterministic)
}
func (m *InvPwgInfo_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InvPwgInfo_KEYS.Merge(m, src)
}
func (m *InvPwgInfo_KEYS) XXX_Size() int {
	return xxx_messageInfo_InvPwgInfo_KEYS.Size(m)
}
func (m *InvPwgInfo_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_InvPwgInfo_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_InvPwgInfo_KEYS proto.InternalMessageInfo

func (m *InvPwgInfo_KEYS) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *InvPwgInfo_KEYS) GetName_1() string {
	if m != nil {
		return m.Name_1
	}
	return ""
}

func (m *InvPwgInfo_KEYS) GetName_2() string {
	if m != nil {
		return m.Name_2
	}
	return ""
}

func (m *InvPwgInfo_KEYS) GetName_3() string {
	if m != nil {
		return m.Name_3
	}
	return ""
}

func (m *InvPwgInfo_KEYS) GetName_4() string {
	if m != nil {
		return m.Name_4
	}
	return ""
}

func (m *InvPwgInfo_KEYS) GetName_5() string {
	if m != nil {
		return m.Name_5
	}
	return ""
}

type InvPwgInfo struct {
	PowerGroupRedundancyMode   int32    `protobuf:"zigzag32,50,opt,name=power_group_redundancy_mode,json=powerGroupRedundancyMode,proto3" json:"power_group_redundancy_mode,omitempty"`
	PowerGroupPowerUnits       string   `protobuf:"bytes,51,opt,name=power_group_power_units,json=powerGroupPowerUnits,proto3" json:"power_group_power_units,omitempty"`
	PowerGroupAvailableCurrent int32    `protobuf:"zigzag32,52,opt,name=power_group_available_current,json=powerGroupAvailableCurrent,proto3" json:"power_group_available_current,omitempty"`
	PowerGroupDrawnCurrent     int32    `protobuf:"zigzag32,53,opt,name=power_group_drawn_current,json=powerGroupDrawnCurrent,proto3" json:"power_group_drawn_current,omitempty"`
	XXX_NoUnkeyedLiteral       struct{} `json:"-"`
	XXX_unrecognized           []byte   `json:"-"`
	XXX_sizecache              int32    `json:"-"`
}

func (m *InvPwgInfo) Reset()         { *m = InvPwgInfo{} }
func (m *InvPwgInfo) String() string { return proto.CompactTextString(m) }
func (*InvPwgInfo) ProtoMessage()    {}
func (*InvPwgInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_aa6fe1f6f982d195, []int{1}
}

func (m *InvPwgInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InvPwgInfo.Unmarshal(m, b)
}
func (m *InvPwgInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InvPwgInfo.Marshal(b, m, deterministic)
}
func (m *InvPwgInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InvPwgInfo.Merge(m, src)
}
func (m *InvPwgInfo) XXX_Size() int {
	return xxx_messageInfo_InvPwgInfo.Size(m)
}
func (m *InvPwgInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_InvPwgInfo.DiscardUnknown(m)
}

var xxx_messageInfo_InvPwgInfo proto.InternalMessageInfo

func (m *InvPwgInfo) GetPowerGroupRedundancyMode() int32 {
	if m != nil {
		return m.PowerGroupRedundancyMode
	}
	return 0
}

func (m *InvPwgInfo) GetPowerGroupPowerUnits() string {
	if m != nil {
		return m.PowerGroupPowerUnits
	}
	return ""
}

func (m *InvPwgInfo) GetPowerGroupAvailableCurrent() int32 {
	if m != nil {
		return m.PowerGroupAvailableCurrent
	}
	return 0
}

func (m *InvPwgInfo) GetPowerGroupDrawnCurrent() int32 {
	if m != nil {
		return m.PowerGroupDrawnCurrent
	}
	return 0
}

func init() {
	proto.RegisterType((*InvPwgInfo_KEYS)(nil), "cisco_ios_xr_invmgr_oper.inventory.racks.rack.entity.slot.tsi1s.tsi1.tsi2s.tsi2.tsi3s.tsi3.tsi4s.tsi4.attributes.pwg_info.inv_pwg_info_KEYS")
	proto.RegisterType((*InvPwgInfo)(nil), "cisco_ios_xr_invmgr_oper.inventory.racks.rack.entity.slot.tsi1s.tsi1.tsi2s.tsi2.tsi3s.tsi3.tsi4s.tsi4.attributes.pwg_info.inv_pwg_info")
}

func init() { proto.RegisterFile("inv_pwg_info.proto", fileDescriptor_aa6fe1f6f982d195) }

var fileDescriptor_aa6fe1f6f982d195 = []byte{
	// 335 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x4c, 0x92, 0xbd, 0x4e, 0xc3, 0x30,
	0x14, 0x85, 0x95, 0xd2, 0x56, 0xc2, 0x62, 0xa9, 0xc5, 0x8f, 0x01, 0x21, 0x55, 0x9d, 0x3a, 0x59,
	0x6a, 0x7e, 0x06, 0x06, 0x86, 0x0a, 0x10, 0x03, 0x42, 0x42, 0x45, 0x0c, 0x4c, 0x96, 0x9b, 0x98,
	0xca, 0xa2, 0xb5, 0xa3, 0x6b, 0x27, 0x21, 0x2b, 0x8f, 0xc1, 0xd3, 0x22, 0xbb, 0x34, 0xce, 0x72,
	0x72, 0xf2, 0xdd, 0x73, 0x72, 0xef, 0x10, 0x84, 0xa5, 0xaa, 0x59, 0xd9, 0x6c, 0x98, 0x54, 0x9f,
	0x9a, 0x96, 0xa0, 0xad, 0xc6, 0x6d, 0x2e, 0x4d, 0xae, 0x99, 0xd4, 0x86, 0x7d, 0x03, 0x93, 0xaa,
	0xde, 0x6d, 0x80, 0xe9, 0x52, 0x00, 0x95, 0xaa, 0x16, 0xca, 0x6a, 0x68, 0x29, 0xf0, 0xfc, 0xcb,
	0x78, 0xa5, 0x42, 0x59, 0x69, 0x5b, 0x6a, 0xb6, 0xda, 0x52, 0x6b, 0xe4, 0xc2, 0x78, 0x75, 0x12,
	0x7b, 0x1b, 0x3b, 0x49, 0xbc, 0x4d, 0x9c, 0xa4, 0xde, 0xa6, 0x94, 0x5b, 0x0b, 0x72, 0x5d, 0x59,
	0x61, 0xe8, 0xe1, 0x80, 0xd9, 0x6f, 0x84, 0x26, 0xfd, 0x8b, 0xd8, 0xf3, 0xe3, 0xc7, 0x1b, 0xc6,
	0x68, 0xa8, 0xf8, 0x4e, 0x90, 0x68, 0x1a, 0xcd, 0x8f, 0x57, 0xde, 0xe3, 0x33, 0x34, 0x76, 0x4f,
	0xb6, 0x20, 0x03, 0x4f, 0x47, 0xee, 0x6d, 0xd1, 0xe1, 0x98, 0x1c, 0x05, 0x1c, 0x77, 0x38, 0x21,
	0xc3, 0x80, 0x93, 0x0e, 0xa7, 0x64, 0x14, 0x70, 0xda, 0xe1, 0x8c, 0x8c, 0x03, 0xce, 0x66, 0x3f,
	0x03, 0x74, 0xd2, 0x3f, 0x0e, 0xdf, 0xa1, 0xeb, 0x52, 0x37, 0x02, 0xd8, 0x06, 0x74, 0x55, 0x32,
	0x10, 0x45, 0xa5, 0x0a, 0xae, 0xf2, 0x96, 0xed, 0x74, 0x21, 0x48, 0x3c, 0x8d, 0xe6, 0x93, 0x15,
	0xf1, 0x91, 0x27, 0x97, 0x58, 0x75, 0x81, 0x17, 0x5d, 0x08, 0x9c, 0xa1, 0x8b, 0x7e, 0x7d, 0xef,
	0x2b, 0x25, 0xad, 0x21, 0x89, 0xdf, 0x7b, 0x1a, 0xaa, 0xaf, 0xce, 0xbd, 0xbb, 0x19, 0x5e, 0xa2,
	0x9b, 0x7e, 0x8d, 0xd7, 0x5c, 0x6e, 0xf9, 0x7a, 0x2b, 0x58, 0x5e, 0x01, 0x08, 0x65, 0x49, 0xea,
	0xf7, 0x5e, 0x85, 0xf2, 0xf2, 0x10, 0xb9, 0xdf, 0x27, 0xf0, 0x2d, 0xba, 0xec, 0x7f, 0xa2, 0x00,
	0xde, 0xa8, 0xae, 0x9e, 0xf9, 0xfa, 0x79, 0xa8, 0x3f, 0xb8, 0xf1, 0x7f, 0x75, 0x3d, 0xf6, 0xff,
	0x48, 0xf2, 0x17, 0x00, 0x00, 0xff, 0xff, 0x95, 0xe6, 0x1c, 0xcd, 0x39, 0x02, 0x00, 0x00,
}
