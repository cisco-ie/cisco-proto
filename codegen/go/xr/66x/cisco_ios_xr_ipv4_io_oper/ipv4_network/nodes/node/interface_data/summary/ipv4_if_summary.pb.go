/*
Copyright 2019 Cisco Systems

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: ipv4_if_summary.proto

package cisco_ios_xr_ipv4_io_oper_ipv4_network_nodes_node_interface_data_summary

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Ipv4IfSummary_KEYS struct {
	NodeName             string   `protobuf:"bytes,1,opt,name=node_name,json=nodeName,proto3" json:"node_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Ipv4IfSummary_KEYS) Reset()         { *m = Ipv4IfSummary_KEYS{} }
func (m *Ipv4IfSummary_KEYS) String() string { return proto.CompactTextString(m) }
func (*Ipv4IfSummary_KEYS) ProtoMessage()    {}
func (*Ipv4IfSummary_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_4c6ead032589aeac, []int{0}
}

func (m *Ipv4IfSummary_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Ipv4IfSummary_KEYS.Unmarshal(m, b)
}
func (m *Ipv4IfSummary_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Ipv4IfSummary_KEYS.Marshal(b, m, deterministic)
}
func (m *Ipv4IfSummary_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Ipv4IfSummary_KEYS.Merge(m, src)
}
func (m *Ipv4IfSummary_KEYS) XXX_Size() int {
	return xxx_messageInfo_Ipv4IfSummary_KEYS.Size(m)
}
func (m *Ipv4IfSummary_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_Ipv4IfSummary_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_Ipv4IfSummary_KEYS proto.InternalMessageInfo

func (m *Ipv4IfSummary_KEYS) GetNodeName() string {
	if m != nil {
		return m.NodeName
	}
	return ""
}

type IfSummary struct {
	IpAssigned           uint32   `protobuf:"varint,1,opt,name=ip_assigned,json=ipAssigned,proto3" json:"ip_assigned,omitempty"`
	IpUnnumbered         uint32   `protobuf:"varint,2,opt,name=ip_unnumbered,json=ipUnnumbered,proto3" json:"ip_unnumbered,omitempty"`
	IpUnassigned         uint32   `protobuf:"varint,3,opt,name=ip_unassigned,json=ipUnassigned,proto3" json:"ip_unassigned,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IfSummary) Reset()         { *m = IfSummary{} }
func (m *IfSummary) String() string { return proto.CompactTextString(m) }
func (*IfSummary) ProtoMessage()    {}
func (*IfSummary) Descriptor() ([]byte, []int) {
	return fileDescriptor_4c6ead032589aeac, []int{1}
}

func (m *IfSummary) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IfSummary.Unmarshal(m, b)
}
func (m *IfSummary) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IfSummary.Marshal(b, m, deterministic)
}
func (m *IfSummary) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IfSummary.Merge(m, src)
}
func (m *IfSummary) XXX_Size() int {
	return xxx_messageInfo_IfSummary.Size(m)
}
func (m *IfSummary) XXX_DiscardUnknown() {
	xxx_messageInfo_IfSummary.DiscardUnknown(m)
}

var xxx_messageInfo_IfSummary proto.InternalMessageInfo

func (m *IfSummary) GetIpAssigned() uint32 {
	if m != nil {
		return m.IpAssigned
	}
	return 0
}

func (m *IfSummary) GetIpUnnumbered() uint32 {
	if m != nil {
		return m.IpUnnumbered
	}
	return 0
}

func (m *IfSummary) GetIpUnassigned() uint32 {
	if m != nil {
		return m.IpUnassigned
	}
	return 0
}

type Ipv4IfSummary struct {
	IfUpUp               *IfSummary `protobuf:"bytes,50,opt,name=if_up_up,json=ifUpUp,proto3" json:"if_up_up,omitempty"`
	IfUpDown             *IfSummary `protobuf:"bytes,51,opt,name=if_up_down,json=ifUpDown,proto3" json:"if_up_down,omitempty"`
	IfDownDown           *IfSummary `protobuf:"bytes,52,opt,name=if_down_down,json=ifDownDown,proto3" json:"if_down_down,omitempty"`
	IfShutdownDown       *IfSummary `protobuf:"bytes,53,opt,name=if_shutdown_down,json=ifShutdownDown,proto3" json:"if_shutdown_down,omitempty"`
	IfUpDownBasecapsUp   uint32     `protobuf:"varint,54,opt,name=if_up_down_basecaps_up,json=ifUpDownBasecapsUp,proto3" json:"if_up_down_basecaps_up,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *Ipv4IfSummary) Reset()         { *m = Ipv4IfSummary{} }
func (m *Ipv4IfSummary) String() string { return proto.CompactTextString(m) }
func (*Ipv4IfSummary) ProtoMessage()    {}
func (*Ipv4IfSummary) Descriptor() ([]byte, []int) {
	return fileDescriptor_4c6ead032589aeac, []int{2}
}

func (m *Ipv4IfSummary) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Ipv4IfSummary.Unmarshal(m, b)
}
func (m *Ipv4IfSummary) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Ipv4IfSummary.Marshal(b, m, deterministic)
}
func (m *Ipv4IfSummary) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Ipv4IfSummary.Merge(m, src)
}
func (m *Ipv4IfSummary) XXX_Size() int {
	return xxx_messageInfo_Ipv4IfSummary.Size(m)
}
func (m *Ipv4IfSummary) XXX_DiscardUnknown() {
	xxx_messageInfo_Ipv4IfSummary.DiscardUnknown(m)
}

var xxx_messageInfo_Ipv4IfSummary proto.InternalMessageInfo

func (m *Ipv4IfSummary) GetIfUpUp() *IfSummary {
	if m != nil {
		return m.IfUpUp
	}
	return nil
}

func (m *Ipv4IfSummary) GetIfUpDown() *IfSummary {
	if m != nil {
		return m.IfUpDown
	}
	return nil
}

func (m *Ipv4IfSummary) GetIfDownDown() *IfSummary {
	if m != nil {
		return m.IfDownDown
	}
	return nil
}

func (m *Ipv4IfSummary) GetIfShutdownDown() *IfSummary {
	if m != nil {
		return m.IfShutdownDown
	}
	return nil
}

func (m *Ipv4IfSummary) GetIfUpDownBasecapsUp() uint32 {
	if m != nil {
		return m.IfUpDownBasecapsUp
	}
	return 0
}

func init() {
	proto.RegisterType((*Ipv4IfSummary_KEYS)(nil), "cisco_ios_xr_ipv4_io_oper.ipv4_network.nodes.node.interface_data.summary.ipv4_if_summary_KEYS")
	proto.RegisterType((*IfSummary)(nil), "cisco_ios_xr_ipv4_io_oper.ipv4_network.nodes.node.interface_data.summary.if_summary")
	proto.RegisterType((*Ipv4IfSummary)(nil), "cisco_ios_xr_ipv4_io_oper.ipv4_network.nodes.node.interface_data.summary.ipv4_if_summary")
}

func init() { proto.RegisterFile("ipv4_if_summary.proto", fileDescriptor_4c6ead032589aeac) }

var fileDescriptor_4c6ead032589aeac = []byte{
	// 328 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x93, 0xc1, 0x4b, 0xc3, 0x30,
	0x14, 0xc6, 0x99, 0xca, 0xd8, 0xde, 0x36, 0x95, 0xa0, 0x52, 0xf0, 0xe0, 0x98, 0x97, 0x9d, 0x7a,
	0xd8, 0xa6, 0x77, 0x45, 0x41, 0x10, 0x3c, 0x6c, 0xf6, 0xe0, 0xe9, 0x91, 0xb5, 0xa9, 0x3e, 0xa4,
	0xc9, 0x23, 0x69, 0x57, 0xbd, 0xf8, 0xbf, 0xf8, 0x9f, 0x4a, 0xb3, 0x6e, 0x85, 0x9d, 0xdd, 0x25,
	0x90, 0xef, 0x7d, 0x79, 0xbf, 0xe4, 0x4b, 0x02, 0xe7, 0xc4, 0xab, 0x19, 0x52, 0x8a, 0xae, 0xc8,
	0x32, 0x69, 0xbf, 0x43, 0xb6, 0x26, 0x37, 0xe2, 0x29, 0x26, 0x17, 0x1b, 0x24, 0xe3, 0xf0, 0xcb,
	0xe2, 0xda, 0x63, 0xd0, 0xb0, 0xb2, 0xa1, 0x9f, 0x68, 0x95, 0x97, 0xc6, 0x7e, 0x86, 0xda, 0x24,
	0xca, 0xf9, 0x31, 0x24, 0x9d, 0x2b, 0x9b, 0xca, 0x58, 0x61, 0x22, 0x73, 0x19, 0xd6, 0xfd, 0x46,
	0x53, 0x38, 0xdb, 0x41, 0xe0, 0xf3, 0xe3, 0xdb, 0x42, 0x5c, 0x42, 0xb7, 0x5a, 0x86, 0x5a, 0x66,
	0x2a, 0x68, 0x0d, 0x5b, 0xe3, 0xee, 0xbc, 0x53, 0x09, 0x2f, 0x32, 0x53, 0xa3, 0x12, 0xa0, 0xf1,
	0x8b, 0x2b, 0xe8, 0x11, 0xa3, 0x74, 0x8e, 0xde, 0xb5, 0x4a, 0xbc, 0x79, 0x30, 0x07, 0xe2, 0xbb,
	0x5a, 0x11, 0xd7, 0x30, 0x20, 0xc6, 0x42, 0xeb, 0x22, 0x5b, 0x2a, 0xab, 0x92, 0xe0, 0xc0, 0x5b,
	0xfa, 0xc4, 0xd1, 0x56, 0xdb, 0x9a, 0xb6, 0x7d, 0x0e, 0x1b, 0xd3, 0x46, 0x1b, 0xfd, 0x1e, 0xc1,
	0xc9, 0xce, 0x76, 0x85, 0x86, 0x0e, 0xa5, 0x58, 0x30, 0x16, 0x1c, 0x4c, 0x86, 0xad, 0x71, 0x6f,
	0xf2, 0x1a, 0xfe, 0x57, 0x3c, 0x61, 0xc3, 0x99, 0xb7, 0x29, 0x8d, 0x38, 0x62, 0x61, 0xfd, 0xe1,
	0x0b, 0xc6, 0xc4, 0x94, 0x3a, 0x98, 0xee, 0x91, 0xd8, 0xa9, 0x88, 0x0f, 0xa6, 0xd4, 0x62, 0x05,
	0x7d, 0x4a, 0x3d, 0x70, 0x4d, 0x9d, 0xed, 0x91, 0x0a, 0x94, 0x56, 0x4c, 0xcf, 0xfd, 0x81, 0xd3,
	0xaa, 0xf2, 0x51, 0xe4, 0x0d, 0xfb, 0x66, 0x8f, 0xec, 0x63, 0x4a, 0x17, 0x35, 0xcc, 0xf3, 0x27,
	0x70, 0xd1, 0x64, 0x8d, 0x4b, 0xe9, 0x54, 0x2c, 0xd9, 0x55, 0x37, 0x7d, 0xeb, 0x5f, 0x87, 0xd8,
	0x24, 0x74, 0x5f, 0x97, 0x22, 0x5e, 0xb6, 0xfd, 0x17, 0x99, 0xfe, 0x05, 0x00, 0x00, 0xff, 0xff,
	0xac, 0x5b, 0x43, 0x31, 0x3b, 0x03, 0x00, 0x00,
}
