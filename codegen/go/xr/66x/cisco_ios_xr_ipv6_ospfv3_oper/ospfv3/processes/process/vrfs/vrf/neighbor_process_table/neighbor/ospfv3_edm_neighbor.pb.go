/*
Copyright 2019 Cisco Systems

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: ospfv3_edm_neighbor.proto

package cisco_ios_xr_ipv6_ospfv3_oper_ospfv3_processes_process_vrfs_vrf_neighbor_process_table_neighbor

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Ospfv3EdmNeighbor_KEYS struct {
	ProcessName          string   `protobuf:"bytes,1,opt,name=process_name,json=processName,proto3" json:"process_name,omitempty"`
	VrfName              string   `protobuf:"bytes,2,opt,name=vrf_name,json=vrfName,proto3" json:"vrf_name,omitempty"`
	InterfaceName        string   `protobuf:"bytes,3,opt,name=interface_name,json=interfaceName,proto3" json:"interface_name,omitempty"`
	NeighborAddress      string   `protobuf:"bytes,4,opt,name=neighbor_address,json=neighborAddress,proto3" json:"neighbor_address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Ospfv3EdmNeighbor_KEYS) Reset()         { *m = Ospfv3EdmNeighbor_KEYS{} }
func (m *Ospfv3EdmNeighbor_KEYS) String() string { return proto.CompactTextString(m) }
func (*Ospfv3EdmNeighbor_KEYS) ProtoMessage()    {}
func (*Ospfv3EdmNeighbor_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_6afebde32b9237de, []int{0}
}

func (m *Ospfv3EdmNeighbor_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Ospfv3EdmNeighbor_KEYS.Unmarshal(m, b)
}
func (m *Ospfv3EdmNeighbor_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Ospfv3EdmNeighbor_KEYS.Marshal(b, m, deterministic)
}
func (m *Ospfv3EdmNeighbor_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Ospfv3EdmNeighbor_KEYS.Merge(m, src)
}
func (m *Ospfv3EdmNeighbor_KEYS) XXX_Size() int {
	return xxx_messageInfo_Ospfv3EdmNeighbor_KEYS.Size(m)
}
func (m *Ospfv3EdmNeighbor_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_Ospfv3EdmNeighbor_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_Ospfv3EdmNeighbor_KEYS proto.InternalMessageInfo

func (m *Ospfv3EdmNeighbor_KEYS) GetProcessName() string {
	if m != nil {
		return m.ProcessName
	}
	return ""
}

func (m *Ospfv3EdmNeighbor_KEYS) GetVrfName() string {
	if m != nil {
		return m.VrfName
	}
	return ""
}

func (m *Ospfv3EdmNeighbor_KEYS) GetInterfaceName() string {
	if m != nil {
		return m.InterfaceName
	}
	return ""
}

func (m *Ospfv3EdmNeighbor_KEYS) GetNeighborAddress() string {
	if m != nil {
		return m.NeighborAddress
	}
	return ""
}

type Ospfv3EdmNeighborRetrans struct {
	DatabaseDescriptorRetransmissions uint32   `protobuf:"varint,1,opt,name=database_descriptor_retransmissions,json=databaseDescriptorRetransmissions,proto3" json:"database_descriptor_retransmissions,omitempty"`
	AreaFloodIndex                    uint32   `protobuf:"varint,2,opt,name=area_flood_index,json=areaFloodIndex,proto3" json:"area_flood_index,omitempty"`
	AsFloodIndex                      uint32   `protobuf:"varint,3,opt,name=as_flood_index,json=asFloodIndex,proto3" json:"as_flood_index,omitempty"`
	LinkFloodIndex                    uint32   `protobuf:"varint,4,opt,name=link_flood_index,json=linkFloodIndex,proto3" json:"link_flood_index,omitempty"`
	NeighborRetransmissions           uint32   `protobuf:"varint,5,opt,name=neighbor_retransmissions,json=neighborRetransmissions,proto3" json:"neighbor_retransmissions,omitempty"`
	Retransmissions                   uint32   `protobuf:"varint,6,opt,name=retransmissions,proto3" json:"retransmissions,omitempty"`
	AreaFirstFlood                    uint32   `protobuf:"varint,7,opt,name=area_first_flood,json=areaFirstFlood,proto3" json:"area_first_flood,omitempty"`
	AreaFirstFloodIndex               uint32   `protobuf:"varint,8,opt,name=area_first_flood_index,json=areaFirstFloodIndex,proto3" json:"area_first_flood_index,omitempty"`
	AsFirstFlood                      uint32   `protobuf:"varint,9,opt,name=as_first_flood,json=asFirstFlood,proto3" json:"as_first_flood,omitempty"`
	AsFirstFloodIndex                 uint32   `protobuf:"varint,10,opt,name=as_first_flood_index,json=asFirstFloodIndex,proto3" json:"as_first_flood_index,omitempty"`
	LinkFirstFlood                    uint32   `protobuf:"varint,11,opt,name=link_first_flood,json=linkFirstFlood,proto3" json:"link_first_flood,omitempty"`
	LinkFirstFloodIndex               uint32   `protobuf:"varint,12,opt,name=link_first_flood_index,json=linkFirstFloodIndex,proto3" json:"link_first_flood_index,omitempty"`
	AreaNextFlood                     uint32   `protobuf:"varint,13,opt,name=area_next_flood,json=areaNextFlood,proto3" json:"area_next_flood,omitempty"`
	AreaNextFloodIndex                uint32   `protobuf:"varint,14,opt,name=area_next_flood_index,json=areaNextFloodIndex,proto3" json:"area_next_flood_index,omitempty"`
	AsNextFlood                       uint32   `protobuf:"varint,15,opt,name=as_next_flood,json=asNextFlood,proto3" json:"as_next_flood,omitempty"`
	AsNextFloodIndex                  uint32   `protobuf:"varint,16,opt,name=as_next_flood_index,json=asNextFloodIndex,proto3" json:"as_next_flood_index,omitempty"`
	LinkNextFlood                     uint32   `protobuf:"varint,17,opt,name=link_next_flood,json=linkNextFlood,proto3" json:"link_next_flood,omitempty"`
	LinkNextFloodIndex                uint32   `protobuf:"varint,18,opt,name=link_next_flood_index,json=linkNextFloodIndex,proto3" json:"link_next_flood_index,omitempty"`
	LastRetransmissionLength          uint32   `protobuf:"varint,19,opt,name=last_retransmission_length,json=lastRetransmissionLength,proto3" json:"last_retransmission_length,omitempty"`
	MaximumRetransmissionLength       uint32   `protobuf:"varint,20,opt,name=maximum_retransmission_length,json=maximumRetransmissionLength,proto3" json:"maximum_retransmission_length,omitempty"`
	LastRetransmissionTime            uint32   `protobuf:"varint,21,opt,name=last_retransmission_time,json=lastRetransmissionTime,proto3" json:"last_retransmission_time,omitempty"`
	MaximumRetransmissionTime         uint32   `protobuf:"varint,22,opt,name=maximum_retransmission_time,json=maximumRetransmissionTime,proto3" json:"maximum_retransmission_time,omitempty"`
	LsaRetransmissionTimer            uint32   `protobuf:"varint,23,opt,name=lsa_retransmission_timer,json=lsaRetransmissionTimer,proto3" json:"lsa_retransmission_timer,omitempty"`
	XXX_NoUnkeyedLiteral              struct{} `json:"-"`
	XXX_unrecognized                  []byte   `json:"-"`
	XXX_sizecache                     int32    `json:"-"`
}

func (m *Ospfv3EdmNeighborRetrans) Reset()         { *m = Ospfv3EdmNeighborRetrans{} }
func (m *Ospfv3EdmNeighborRetrans) String() string { return proto.CompactTextString(m) }
func (*Ospfv3EdmNeighborRetrans) ProtoMessage()    {}
func (*Ospfv3EdmNeighborRetrans) Descriptor() ([]byte, []int) {
	return fileDescriptor_6afebde32b9237de, []int{1}
}

func (m *Ospfv3EdmNeighborRetrans) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Ospfv3EdmNeighborRetrans.Unmarshal(m, b)
}
func (m *Ospfv3EdmNeighborRetrans) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Ospfv3EdmNeighborRetrans.Marshal(b, m, deterministic)
}
func (m *Ospfv3EdmNeighborRetrans) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Ospfv3EdmNeighborRetrans.Merge(m, src)
}
func (m *Ospfv3EdmNeighborRetrans) XXX_Size() int {
	return xxx_messageInfo_Ospfv3EdmNeighborRetrans.Size(m)
}
func (m *Ospfv3EdmNeighborRetrans) XXX_DiscardUnknown() {
	xxx_messageInfo_Ospfv3EdmNeighborRetrans.DiscardUnknown(m)
}

var xxx_messageInfo_Ospfv3EdmNeighborRetrans proto.InternalMessageInfo

func (m *Ospfv3EdmNeighborRetrans) GetDatabaseDescriptorRetransmissions() uint32 {
	if m != nil {
		return m.DatabaseDescriptorRetransmissions
	}
	return 0
}

func (m *Ospfv3EdmNeighborRetrans) GetAreaFloodIndex() uint32 {
	if m != nil {
		return m.AreaFloodIndex
	}
	return 0
}

func (m *Ospfv3EdmNeighborRetrans) GetAsFloodIndex() uint32 {
	if m != nil {
		return m.AsFloodIndex
	}
	return 0
}

func (m *Ospfv3EdmNeighborRetrans) GetLinkFloodIndex() uint32 {
	if m != nil {
		return m.LinkFloodIndex
	}
	return 0
}

func (m *Ospfv3EdmNeighborRetrans) GetNeighborRetransmissions() uint32 {
	if m != nil {
		return m.NeighborRetransmissions
	}
	return 0
}

func (m *Ospfv3EdmNeighborRetrans) GetRetransmissions() uint32 {
	if m != nil {
		return m.Retransmissions
	}
	return 0
}

func (m *Ospfv3EdmNeighborRetrans) GetAreaFirstFlood() uint32 {
	if m != nil {
		return m.AreaFirstFlood
	}
	return 0
}

func (m *Ospfv3EdmNeighborRetrans) GetAreaFirstFloodIndex() uint32 {
	if m != nil {
		return m.AreaFirstFloodIndex
	}
	return 0
}

func (m *Ospfv3EdmNeighborRetrans) GetAsFirstFlood() uint32 {
	if m != nil {
		return m.AsFirstFlood
	}
	return 0
}

func (m *Ospfv3EdmNeighborRetrans) GetAsFirstFloodIndex() uint32 {
	if m != nil {
		return m.AsFirstFloodIndex
	}
	return 0
}

func (m *Ospfv3EdmNeighborRetrans) GetLinkFirstFlood() uint32 {
	if m != nil {
		return m.LinkFirstFlood
	}
	return 0
}

func (m *Ospfv3EdmNeighborRetrans) GetLinkFirstFloodIndex() uint32 {
	if m != nil {
		return m.LinkFirstFloodIndex
	}
	return 0
}

func (m *Ospfv3EdmNeighborRetrans) GetAreaNextFlood() uint32 {
	if m != nil {
		return m.AreaNextFlood
	}
	return 0
}

func (m *Ospfv3EdmNeighborRetrans) GetAreaNextFloodIndex() uint32 {
	if m != nil {
		return m.AreaNextFloodIndex
	}
	return 0
}

func (m *Ospfv3EdmNeighborRetrans) GetAsNextFlood() uint32 {
	if m != nil {
		return m.AsNextFlood
	}
	return 0
}

func (m *Ospfv3EdmNeighborRetrans) GetAsNextFloodIndex() uint32 {
	if m != nil {
		return m.AsNextFloodIndex
	}
	return 0
}

func (m *Ospfv3EdmNeighborRetrans) GetLinkNextFlood() uint32 {
	if m != nil {
		return m.LinkNextFlood
	}
	return 0
}

func (m *Ospfv3EdmNeighborRetrans) GetLinkNextFloodIndex() uint32 {
	if m != nil {
		return m.LinkNextFloodIndex
	}
	return 0
}

func (m *Ospfv3EdmNeighborRetrans) GetLastRetransmissionLength() uint32 {
	if m != nil {
		return m.LastRetransmissionLength
	}
	return 0
}

func (m *Ospfv3EdmNeighborRetrans) GetMaximumRetransmissionLength() uint32 {
	if m != nil {
		return m.MaximumRetransmissionLength
	}
	return 0
}

func (m *Ospfv3EdmNeighborRetrans) GetLastRetransmissionTime() uint32 {
	if m != nil {
		return m.LastRetransmissionTime
	}
	return 0
}

func (m *Ospfv3EdmNeighborRetrans) GetMaximumRetransmissionTime() uint32 {
	if m != nil {
		return m.MaximumRetransmissionTime
	}
	return 0
}

func (m *Ospfv3EdmNeighborRetrans) GetLsaRetransmissionTimer() uint32 {
	if m != nil {
		return m.LsaRetransmissionTimer
	}
	return 0
}

type Ospfv3EdmNeighborDetail struct {
	StateChanges                          uint32                    `protobuf:"varint,1,opt,name=state_changes,json=stateChanges,proto3" json:"state_changes,omitempty"`
	NeighborCost                          uint32                    `protobuf:"varint,2,opt,name=neighbor_cost,json=neighborCost,proto3" json:"neighbor_cost,omitempty"`
	IsNeighborFiltered                    bool                      `protobuf:"varint,3,opt,name=is_neighbor_filtered,json=isNeighborFiltered,proto3" json:"is_neighbor_filtered,omitempty"`
	NeighborDesignatedRouterAddress       string                    `protobuf:"bytes,4,opt,name=neighbor_designated_router_address,json=neighborDesignatedRouterAddress,proto3" json:"neighbor_designated_router_address,omitempty"`
	NeighborBackupDesignatedRouterAddress string                    `protobuf:"bytes,5,opt,name=neighbor_backup_designated_router_address,json=neighborBackupDesignatedRouterAddress,proto3" json:"neighbor_backup_designated_router_address,omitempty"`
	InterfaceType                         string                    `protobuf:"bytes,6,opt,name=interface_type,json=interfaceType,proto3" json:"interface_type,omitempty"`
	PollInterval                          uint32                    `protobuf:"varint,7,opt,name=poll_interval,json=pollInterval,proto3" json:"poll_interval,omitempty"`
	NextPollInterval                      uint32                    `protobuf:"varint,8,opt,name=next_poll_interval,json=nextPollInterval,proto3" json:"next_poll_interval,omitempty"`
	NeighborIgnoreTimer                   uint32                    `protobuf:"varint,9,opt,name=neighbor_ignore_timer,json=neighborIgnoreTimer,proto3" json:"neighbor_ignore_timer,omitempty"`
	NeighborOption                        uint32                    `protobuf:"varint,10,opt,name=neighbor_option,json=neighborOption,proto3" json:"neighbor_option,omitempty"`
	PendingEvents                         uint32                    `protobuf:"varint,11,opt,name=pending_events,json=pendingEvents,proto3" json:"pending_events,omitempty"`
	NeighborRetransmission                *Ospfv3EdmNeighborRetrans `protobuf:"bytes,12,opt,name=neighbor_retransmission,json=neighborRetransmission,proto3" json:"neighbor_retransmission,omitempty"`
	XXX_NoUnkeyedLiteral                  struct{}                  `json:"-"`
	XXX_unrecognized                      []byte                    `json:"-"`
	XXX_sizecache                         int32                     `json:"-"`
}

func (m *Ospfv3EdmNeighborDetail) Reset()         { *m = Ospfv3EdmNeighborDetail{} }
func (m *Ospfv3EdmNeighborDetail) String() string { return proto.CompactTextString(m) }
func (*Ospfv3EdmNeighborDetail) ProtoMessage()    {}
func (*Ospfv3EdmNeighborDetail) Descriptor() ([]byte, []int) {
	return fileDescriptor_6afebde32b9237de, []int{2}
}

func (m *Ospfv3EdmNeighborDetail) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Ospfv3EdmNeighborDetail.Unmarshal(m, b)
}
func (m *Ospfv3EdmNeighborDetail) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Ospfv3EdmNeighborDetail.Marshal(b, m, deterministic)
}
func (m *Ospfv3EdmNeighborDetail) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Ospfv3EdmNeighborDetail.Merge(m, src)
}
func (m *Ospfv3EdmNeighborDetail) XXX_Size() int {
	return xxx_messageInfo_Ospfv3EdmNeighborDetail.Size(m)
}
func (m *Ospfv3EdmNeighborDetail) XXX_DiscardUnknown() {
	xxx_messageInfo_Ospfv3EdmNeighborDetail.DiscardUnknown(m)
}

var xxx_messageInfo_Ospfv3EdmNeighborDetail proto.InternalMessageInfo

func (m *Ospfv3EdmNeighborDetail) GetStateChanges() uint32 {
	if m != nil {
		return m.StateChanges
	}
	return 0
}

func (m *Ospfv3EdmNeighborDetail) GetNeighborCost() uint32 {
	if m != nil {
		return m.NeighborCost
	}
	return 0
}

func (m *Ospfv3EdmNeighborDetail) GetIsNeighborFiltered() bool {
	if m != nil {
		return m.IsNeighborFiltered
	}
	return false
}

func (m *Ospfv3EdmNeighborDetail) GetNeighborDesignatedRouterAddress() string {
	if m != nil {
		return m.NeighborDesignatedRouterAddress
	}
	return ""
}

func (m *Ospfv3EdmNeighborDetail) GetNeighborBackupDesignatedRouterAddress() string {
	if m != nil {
		return m.NeighborBackupDesignatedRouterAddress
	}
	return ""
}

func (m *Ospfv3EdmNeighborDetail) GetInterfaceType() string {
	if m != nil {
		return m.InterfaceType
	}
	return ""
}

func (m *Ospfv3EdmNeighborDetail) GetPollInterval() uint32 {
	if m != nil {
		return m.PollInterval
	}
	return 0
}

func (m *Ospfv3EdmNeighborDetail) GetNextPollInterval() uint32 {
	if m != nil {
		return m.NextPollInterval
	}
	return 0
}

func (m *Ospfv3EdmNeighborDetail) GetNeighborIgnoreTimer() uint32 {
	if m != nil {
		return m.NeighborIgnoreTimer
	}
	return 0
}

func (m *Ospfv3EdmNeighborDetail) GetNeighborOption() uint32 {
	if m != nil {
		return m.NeighborOption
	}
	return 0
}

func (m *Ospfv3EdmNeighborDetail) GetPendingEvents() uint32 {
	if m != nil {
		return m.PendingEvents
	}
	return 0
}

func (m *Ospfv3EdmNeighborDetail) GetNeighborRetransmission() *Ospfv3EdmNeighborRetrans {
	if m != nil {
		return m.NeighborRetransmission
	}
	return nil
}

type Ospfv3EdmNeighborBfd struct {
	BfdIntfEnableMode    uint32   `protobuf:"varint,1,opt,name=bfd_intf_enable_mode,json=bfdIntfEnableMode,proto3" json:"bfd_intf_enable_mode,omitempty"`
	BfdStatusFlag        uint32   `protobuf:"varint,2,opt,name=bfd_status_flag,json=bfdStatusFlag,proto3" json:"bfd_status_flag,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Ospfv3EdmNeighborBfd) Reset()         { *m = Ospfv3EdmNeighborBfd{} }
func (m *Ospfv3EdmNeighborBfd) String() string { return proto.CompactTextString(m) }
func (*Ospfv3EdmNeighborBfd) ProtoMessage()    {}
func (*Ospfv3EdmNeighborBfd) Descriptor() ([]byte, []int) {
	return fileDescriptor_6afebde32b9237de, []int{3}
}

func (m *Ospfv3EdmNeighborBfd) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Ospfv3EdmNeighborBfd.Unmarshal(m, b)
}
func (m *Ospfv3EdmNeighborBfd) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Ospfv3EdmNeighborBfd.Marshal(b, m, deterministic)
}
func (m *Ospfv3EdmNeighborBfd) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Ospfv3EdmNeighborBfd.Merge(m, src)
}
func (m *Ospfv3EdmNeighborBfd) XXX_Size() int {
	return xxx_messageInfo_Ospfv3EdmNeighborBfd.Size(m)
}
func (m *Ospfv3EdmNeighborBfd) XXX_DiscardUnknown() {
	xxx_messageInfo_Ospfv3EdmNeighborBfd.DiscardUnknown(m)
}

var xxx_messageInfo_Ospfv3EdmNeighborBfd proto.InternalMessageInfo

func (m *Ospfv3EdmNeighborBfd) GetBfdIntfEnableMode() uint32 {
	if m != nil {
		return m.BfdIntfEnableMode
	}
	return 0
}

func (m *Ospfv3EdmNeighborBfd) GetBfdStatusFlag() uint32 {
	if m != nil {
		return m.BfdStatusFlag
	}
	return 0
}

type Ospfv3EdmNeighbor struct {
	NeighborAddressXr        string                   `protobuf:"bytes,50,opt,name=neighbor_address_xr,json=neighborAddressXr,proto3" json:"neighbor_address_xr,omitempty"`
	NeighborInterfaceId      uint32                   `protobuf:"varint,51,opt,name=neighbor_interface_id,json=neighborInterfaceId,proto3" json:"neighbor_interface_id,omitempty"`
	NeighborDrPriority       uint32                   `protobuf:"varint,52,opt,name=neighbor_dr_priority,json=neighborDrPriority,proto3" json:"neighbor_dr_priority,omitempty"`
	NeighborState            string                   `protobuf:"bytes,53,opt,name=neighbor_state,json=neighborState,proto3" json:"neighbor_state,omitempty"`
	NeighborDesignatedRouter string                   `protobuf:"bytes,54,opt,name=neighbor_designated_router,json=neighborDesignatedRouter,proto3" json:"neighbor_designated_router,omitempty"`
	NeighborDeadTimer        uint32                   `protobuf:"varint,55,opt,name=neighbor_dead_timer,json=neighborDeadTimer,proto3" json:"neighbor_dead_timer,omitempty"`
	NeighborUpTime           uint32                   `protobuf:"varint,56,opt,name=neighbor_up_time,json=neighborUpTime,proto3" json:"neighbor_up_time,omitempty"`
	NeighborVirtualLinkId    uint32                   `protobuf:"varint,57,opt,name=neighbor_virtual_link_id,json=neighborVirtualLinkId,proto3" json:"neighbor_virtual_link_id,omitempty"`
	IsNeighborVirtualLink    bool                     `protobuf:"varint,58,opt,name=is_neighbor_virtual_link,json=isNeighborVirtualLink,proto3" json:"is_neighbor_virtual_link,omitempty"`
	NeighborShamLinkId       uint32                   `protobuf:"varint,59,opt,name=neighbor_sham_link_id,json=neighborShamLinkId,proto3" json:"neighbor_sham_link_id,omitempty"`
	IsNeighborShamLink       bool                     `protobuf:"varint,60,opt,name=is_neighbor_sham_link,json=isNeighborShamLink,proto3" json:"is_neighbor_sham_link,omitempty"`
	NeighborDetail           *Ospfv3EdmNeighborDetail `protobuf:"bytes,61,opt,name=neighbor_detail,json=neighborDetail,proto3" json:"neighbor_detail,omitempty"`
	NeighborBfdInfo          *Ospfv3EdmNeighborBfd    `protobuf:"bytes,62,opt,name=neighbor_bfd_info,json=neighborBfdInfo,proto3" json:"neighbor_bfd_info,omitempty"`
	XXX_NoUnkeyedLiteral     struct{}                 `json:"-"`
	XXX_unrecognized         []byte                   `json:"-"`
	XXX_sizecache            int32                    `json:"-"`
}

func (m *Ospfv3EdmNeighbor) Reset()         { *m = Ospfv3EdmNeighbor{} }
func (m *Ospfv3EdmNeighbor) String() string { return proto.CompactTextString(m) }
func (*Ospfv3EdmNeighbor) ProtoMessage()    {}
func (*Ospfv3EdmNeighbor) Descriptor() ([]byte, []int) {
	return fileDescriptor_6afebde32b9237de, []int{4}
}

func (m *Ospfv3EdmNeighbor) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Ospfv3EdmNeighbor.Unmarshal(m, b)
}
func (m *Ospfv3EdmNeighbor) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Ospfv3EdmNeighbor.Marshal(b, m, deterministic)
}
func (m *Ospfv3EdmNeighbor) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Ospfv3EdmNeighbor.Merge(m, src)
}
func (m *Ospfv3EdmNeighbor) XXX_Size() int {
	return xxx_messageInfo_Ospfv3EdmNeighbor.Size(m)
}
func (m *Ospfv3EdmNeighbor) XXX_DiscardUnknown() {
	xxx_messageInfo_Ospfv3EdmNeighbor.DiscardUnknown(m)
}

var xxx_messageInfo_Ospfv3EdmNeighbor proto.InternalMessageInfo

func (m *Ospfv3EdmNeighbor) GetNeighborAddressXr() string {
	if m != nil {
		return m.NeighborAddressXr
	}
	return ""
}

func (m *Ospfv3EdmNeighbor) GetNeighborInterfaceId() uint32 {
	if m != nil {
		return m.NeighborInterfaceId
	}
	return 0
}

func (m *Ospfv3EdmNeighbor) GetNeighborDrPriority() uint32 {
	if m != nil {
		return m.NeighborDrPriority
	}
	return 0
}

func (m *Ospfv3EdmNeighbor) GetNeighborState() string {
	if m != nil {
		return m.NeighborState
	}
	return ""
}

func (m *Ospfv3EdmNeighbor) GetNeighborDesignatedRouter() string {
	if m != nil {
		return m.NeighborDesignatedRouter
	}
	return ""
}

func (m *Ospfv3EdmNeighbor) GetNeighborDeadTimer() uint32 {
	if m != nil {
		return m.NeighborDeadTimer
	}
	return 0
}

func (m *Ospfv3EdmNeighbor) GetNeighborUpTime() uint32 {
	if m != nil {
		return m.NeighborUpTime
	}
	return 0
}

func (m *Ospfv3EdmNeighbor) GetNeighborVirtualLinkId() uint32 {
	if m != nil {
		return m.NeighborVirtualLinkId
	}
	return 0
}

func (m *Ospfv3EdmNeighbor) GetIsNeighborVirtualLink() bool {
	if m != nil {
		return m.IsNeighborVirtualLink
	}
	return false
}

func (m *Ospfv3EdmNeighbor) GetNeighborShamLinkId() uint32 {
	if m != nil {
		return m.NeighborShamLinkId
	}
	return 0
}

func (m *Ospfv3EdmNeighbor) GetIsNeighborShamLink() bool {
	if m != nil {
		return m.IsNeighborShamLink
	}
	return false
}

func (m *Ospfv3EdmNeighbor) GetNeighborDetail() *Ospfv3EdmNeighborDetail {
	if m != nil {
		return m.NeighborDetail
	}
	return nil
}

func (m *Ospfv3EdmNeighbor) GetNeighborBfdInfo() *Ospfv3EdmNeighborBfd {
	if m != nil {
		return m.NeighborBfdInfo
	}
	return nil
}

func init() {
	proto.RegisterType((*Ospfv3EdmNeighbor_KEYS)(nil), "cisco_ios_xr_ipv6_ospfv3_oper.ospfv3.processes.process.vrfs.vrf.neighbor_process_table.neighbor.ospfv3_edm_neighbor_KEYS")
	proto.RegisterType((*Ospfv3EdmNeighborRetrans)(nil), "cisco_ios_xr_ipv6_ospfv3_oper.ospfv3.processes.process.vrfs.vrf.neighbor_process_table.neighbor.ospfv3_edm_neighbor_retrans")
	proto.RegisterType((*Ospfv3EdmNeighborDetail)(nil), "cisco_ios_xr_ipv6_ospfv3_oper.ospfv3.processes.process.vrfs.vrf.neighbor_process_table.neighbor.ospfv3_edm_neighbor_detail")
	proto.RegisterType((*Ospfv3EdmNeighborBfd)(nil), "cisco_ios_xr_ipv6_ospfv3_oper.ospfv3.processes.process.vrfs.vrf.neighbor_process_table.neighbor.ospfv3_edm_neighbor_bfd")
	proto.RegisterType((*Ospfv3EdmNeighbor)(nil), "cisco_ios_xr_ipv6_ospfv3_oper.ospfv3.processes.process.vrfs.vrf.neighbor_process_table.neighbor.ospfv3_edm_neighbor")
}

func init() { proto.RegisterFile("ospfv3_edm_neighbor.proto", fileDescriptor_6afebde32b9237de) }

var fileDescriptor_6afebde32b9237de = []byte{
	// 1129 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xc4, 0x57, 0x4b, 0x6f, 0x1b, 0x37,
	0x17, 0x85, 0xbe, 0x3c, 0x6c, 0xd3, 0x92, 0x2d, 0x53, 0x7e, 0x8c, 0x63, 0x7c, 0x68, 0xa3, 0x34,
	0xad, 0x03, 0xb4, 0x6a, 0x63, 0xb7, 0x79, 0xb4, 0x69, 0x80, 0x3a, 0xb6, 0x01, 0x21, 0xa9, 0x1b,
	0xc8, 0x69, 0x91, 0xae, 0x08, 0x4a, 0xe4, 0xc8, 0x84, 0x67, 0x86, 0x03, 0x92, 0x12, 0x64, 0xb4,
	0x3f, 0xa2, 0x3f, 0xa1, 0x8b, 0xac, 0xba, 0xef, 0x4f, 0xeb, 0xbe, 0xe0, 0x25, 0xe7, 0x69, 0x29,
	0xbb, 0x22, 0x1b, 0x43, 0x38, 0xf7, 0xdc, 0x73, 0x2f, 0x39, 0xbc, 0x87, 0x34, 0xda, 0x95, 0x3a,
	0x0d, 0xa7, 0x87, 0x84, 0xb3, 0x98, 0x24, 0x5c, 0x8c, 0x2f, 0x86, 0x52, 0xf5, 0x52, 0x25, 0x8d,
	0xc4, 0x64, 0x24, 0xf4, 0x48, 0x12, 0x21, 0x35, 0x99, 0x29, 0x22, 0xd2, 0xe9, 0x23, 0xe2, 0xc9,
	0x32, 0xe5, 0xaa, 0xe7, 0x7e, 0x5b, 0xee, 0x88, 0x6b, 0xcd, 0x75, 0xf6, 0xab, 0x37, 0x55, 0x21,
	0xfc, 0xe9, 0x65, 0x7a, 0xc4, 0x47, 0x88, 0xa1, 0xc3, 0x88, 0xe7, 0x70, 0xf7, 0xaf, 0x06, 0x0a,
	0xe6, 0x94, 0x27, 0x2f, 0x4f, 0x7e, 0x3d, 0xc7, 0x77, 0x51, 0x33, 0x4b, 0x4b, 0x68, 0xcc, 0x83,
	0xc6, 0xc7, 0x8d, 0xfd, 0x95, 0xc1, 0xaa, 0xc7, 0xce, 0x68, 0xcc, 0xf1, 0x2e, 0x5a, 0x9e, 0xaa,
	0xd0, 0x85, 0xff, 0x07, 0xe1, 0xa5, 0xa9, 0x0a, 0x21, 0x74, 0x1f, 0xad, 0x89, 0xc4, 0x70, 0x15,
	0xd2, 0x11, 0x77, 0x84, 0x1b, 0x40, 0x68, 0xe5, 0x28, 0xd0, 0x1e, 0xa0, 0x76, 0x5e, 0x95, 0x32,
	0xa6, 0xb8, 0xd6, 0xc1, 0x4d, 0x20, 0xae, 0x67, 0xf8, 0x0f, 0x0e, 0xee, 0xfe, 0xb9, 0x82, 0xf6,
	0xe6, 0x35, 0xab, 0xb8, 0x51, 0x34, 0xd1, 0xf8, 0x0c, 0xdd, 0x63, 0xd4, 0xd0, 0x21, 0xd5, 0x9c,
	0x30, 0xae, 0x47, 0x4a, 0xa4, 0xa6, 0x08, 0xc7, 0x42, 0x6b, 0x21, 0x13, 0x0d, 0xcb, 0x68, 0x0d,
	0xee, 0x66, 0xd4, 0xe3, 0x9c, 0x39, 0xa8, 0x12, 0xf1, 0x3e, 0x6a, 0x53, 0xc5, 0x29, 0x09, 0x23,
	0x29, 0x19, 0x11, 0x09, 0xe3, 0x33, 0x58, 0x64, 0x6b, 0xb0, 0x66, 0xf1, 0x53, 0x0b, 0xf7, 0x2d,
	0x8a, 0x3f, 0x41, 0x6b, 0x54, 0x57, 0x78, 0x37, 0x80, 0xd7, 0xa4, 0xba, 0xc4, 0xda, 0x47, 0xed,
	0x48, 0x24, 0x97, 0x15, 0xde, 0x4d, 0xa7, 0x67, 0xf1, 0x12, 0xf3, 0x29, 0x0a, 0xea, 0xab, 0xcb,
	0xdb, 0xbf, 0x05, 0x19, 0x3b, 0x59, 0xfc, 0x7a, 0xd3, 0xeb, 0xf5, 0x8c, 0xdb, 0x90, 0x51, 0x87,
	0x8b, 0xe5, 0x09, 0xa5, 0x8d, 0x6b, 0x2a, 0x58, 0x2a, 0x2d, 0xcf, 0xc2, 0xd0, 0x13, 0x3e, 0x44,
	0xdb, 0x75, 0xa6, 0x6f, 0x7f, 0x19, 0xf8, 0x9d, 0x2a, 0xbf, 0xb2, 0x27, 0x25, 0xf1, 0x95, 0x7c,
	0x4f, 0x0a, 0xe9, 0x2f, 0xd1, 0x66, 0x95, 0xe5, 0x85, 0x11, 0x70, 0x37, 0xca, 0xdc, 0xda, 0x26,
	0x96, 0x84, 0x57, 0x4b, 0x9b, 0x58, 0xe9, 0xba, 0xce, 0xf4, 0xe2, 0x4d, 0xd7, 0x75, 0x95, 0xef,
	0xe4, 0x3f, 0x45, 0xeb, 0xb0, 0xd4, 0x84, 0xcf, 0x32, 0xf5, 0x16, 0xb0, 0x5b, 0x16, 0x3e, 0xe3,
	0x33, 0x2f, 0xfe, 0x10, 0x6d, 0xd5, 0x78, 0x5e, 0x7b, 0x0d, 0xd8, 0xb8, 0xc2, 0x76, 0xd2, 0x5d,
	0xd4, 0xa2, 0xba, 0x2c, 0xbc, 0x0e, 0xd4, 0x55, 0xaa, 0x0b, 0xd9, 0x2f, 0x50, 0xa7, 0xc2, 0xf1,
	0xa2, 0x6d, 0x60, 0xb6, 0x4b, 0xcc, 0xbc, 0x5b, 0x58, 0x62, 0x49, 0x74, 0xc3, 0x75, 0x6b, 0xe1,
	0x4a, 0xb7, 0x35, 0x9e, 0x17, 0xc6, 0xae, 0xdb, 0x0a, 0xdb, 0x49, 0x3f, 0x43, 0x77, 0x22, 0xaa,
	0x4d, 0xed, 0xf8, 0x91, 0x88, 0x27, 0x63, 0x73, 0x11, 0x74, 0x20, 0x2f, 0xb0, 0x8c, 0xea, 0x01,
	0x7c, 0x05, 0x71, 0x7c, 0x84, 0xfe, 0x1f, 0xd3, 0x99, 0x88, 0x27, 0xf1, 0x02, 0x81, 0x4d, 0x10,
	0xd8, 0xf3, 0xa4, 0xb9, 0x1a, 0x4f, 0x50, 0x30, 0xaf, 0x03, 0x23, 0x62, 0x1e, 0x6c, 0x41, 0xfa,
	0xf6, 0xf5, 0xfa, 0x6f, 0x44, 0xcc, 0xf1, 0x73, 0xb4, 0xb7, 0xa0, 0x3a, 0x24, 0x6f, 0x43, 0xf2,
	0xee, 0xdc, 0xda, 0x90, 0x6f, 0x2b, 0x6b, 0x3a, 0x2f, 0x57, 0x05, 0x3b, 0xbe, 0xb2, 0xa6, 0xd7,
	0x13, 0x55, 0xf7, 0x9f, 0x5b, 0xe8, 0xce, 0x3c, 0x8b, 0x62, 0xdc, 0x50, 0x11, 0xe1, 0x7b, 0xa8,
	0xa5, 0x0d, 0x35, 0x9c, 0x8c, 0x2e, 0x68, 0x32, 0xe6, 0x99, 0x17, 0x35, 0x01, 0x7c, 0xe1, 0x30,
	0x4b, 0xca, 0xf3, 0x46, 0x52, 0x1b, 0xef, 0x39, 0xcd, 0x0c, 0x7c, 0x21, 0xb5, 0xc1, 0x5f, 0xa1,
	0x4d, 0xa1, 0x0b, 0xfd, 0x50, 0x44, 0x86, 0x2b, 0xce, 0xc0, 0x77, 0x96, 0x07, 0x58, 0xe8, 0x33,
	0x1f, 0x3a, 0xf5, 0x11, 0xfc, 0x12, 0x75, 0x4b, 0xed, 0x68, 0x31, 0x4e, 0xa8, 0xe1, 0x8c, 0x28,
	0x39, 0x31, 0xbc, 0x6e, 0xbd, 0x1f, 0x65, 0xcc, 0xe3, 0x9c, 0x38, 0x00, 0x9e, 0xb7, 0x62, 0xfc,
	0x16, 0x3d, 0xc8, 0xc5, 0x86, 0x74, 0x74, 0x39, 0x49, 0xdf, 0xa3, 0x79, 0x0b, 0x34, 0xef, 0x67,
	0x09, 0x47, 0xc0, 0x5f, 0xa4, 0x5c, 0xb9, 0x36, 0xcc, 0x55, 0xca, 0xc1, 0xbe, 0xca, 0xd7, 0xc6,
	0x9b, 0xab, 0x94, 0xdb, 0x4d, 0x4a, 0x65, 0x14, 0x11, 0x40, 0xa7, 0x34, 0xf2, 0xce, 0xd5, 0xb4,
	0x60, 0xdf, 0x63, 0xf8, 0x73, 0x84, 0xe1, 0xc4, 0x57, 0x99, 0xce, 0xb3, 0xda, 0x36, 0xf2, 0xba,
	0xcc, 0x3e, 0x40, 0x5b, 0xf9, 0x9a, 0xc4, 0x38, 0x91, 0x8a, 0xfb, 0x4f, 0xee, 0x7c, 0xab, 0x93,
	0x05, 0xfb, 0x10, 0x83, 0xef, 0x8d, 0x3f, 0x43, 0xf9, 0x2d, 0x45, 0x64, 0x6a, 0x84, 0x4c, 0xbc,
	0x73, 0xad, 0x65, 0xf0, 0x4f, 0x80, 0xda, 0x65, 0xa5, 0x3c, 0x61, 0x22, 0x19, 0x13, 0x3e, 0xe5,
	0x89, 0xd1, 0xde, 0xb4, 0x5a, 0x1e, 0x3d, 0x01, 0x10, 0xff, 0xdd, 0x40, 0x3b, 0x0b, 0x9c, 0x1f,
	0x5c, 0x6b, 0xf5, 0xe0, 0xf7, 0xde, 0x7f, 0xfc, 0x26, 0xe8, 0xbd, 0xe7, 0x8a, 0x1d, 0x6c, 0xcf,
	0xbf, 0x76, 0xba, 0x0a, 0xed, 0xcc, 0x4b, 0x1b, 0x86, 0xe0, 0xf0, 0xc3, 0xd0, 0xfa, 0x8d, 0x09,
	0x09, 0x4f, 0x6c, 0x29, 0x12, 0x4b, 0xc6, 0xfd, 0xd1, 0xdf, 0x18, 0x86, 0xac, 0x9f, 0x98, 0xf0,
	0x04, 0x22, 0x3f, 0x4a, 0xc6, 0xad, 0xa9, 0xd9, 0x04, 0x3b, 0x13, 0x13, 0x7b, 0xa9, 0xd2, 0xb1,
	0x9f, 0x80, 0xd6, 0x30, 0x64, 0xe7, 0x80, 0x9e, 0x46, 0x74, 0xdc, 0xfd, 0x63, 0x09, 0x75, 0xe6,
	0x14, 0xc5, 0x3d, 0xd4, 0xa9, 0xbf, 0x28, 0xc8, 0x4c, 0x05, 0x07, 0x70, 0x8c, 0x36, 0x6a, 0x8f,
	0x8a, 0xb7, 0xaa, 0xfa, 0xdd, 0xf3, 0xa3, 0x27, 0x58, 0x70, 0x58, 0xfb, 0xee, 0x59, 0xac, 0xcf,
	0xec, 0xf8, 0x15, 0xc3, 0x64, 0x77, 0x52, 0x48, 0x25, 0xcc, 0x55, 0xf0, 0xb5, 0xf3, 0xd3, 0x7c,
	0x7c, 0xd4, 0x6b, 0x1f, 0xb1, 0x07, 0x20, 0xcf, 0x80, 0x71, 0x0f, 0xbe, 0x71, 0xe7, 0x3a, 0x43,
	0xed, 0xca, 0xb8, 0xb5, 0xdd, 0xc5, 0x53, 0x1a, 0x3c, 0x82, 0x94, 0x60, 0xd1, 0x74, 0x56, 0x96,
	0xce, 0x38, 0x65, 0xfe, 0x00, 0x3f, 0x76, 0x5b, 0x5d, 0xa4, 0x51, 0xe6, 0x8e, 0xef, 0x7e, 0xe9,
	0xf1, 0x35, 0x49, 0x9d, 0x3b, 0x3e, 0xa9, 0x9e, 0xdf, 0x9f, 0x53, 0xb0, 0xc4, 0xc7, 0xa5, 0x17,
	0xc9, 0x54, 0x28, 0x33, 0xa1, 0x11, 0x81, 0x2b, 0x45, 0xb0, 0xe0, 0x29, 0x64, 0xe4, 0x9b, 0xf8,
	0x8b, 0x0b, 0xbf, 0x12, 0xc9, 0x65, 0x9f, 0xd9, 0xc4, 0xb2, 0x51, 0x95, 0x73, 0x83, 0x6f, 0xc1,
	0xac, 0xb6, 0x0a, 0xb3, 0x2a, 0xa5, 0xda, 0x3b, 0xab, 0xd8, 0xb0, 0x0b, 0x1a, 0xe7, 0xe5, 0xbe,
	0xab, 0xee, 0xf1, 0xf9, 0x05, 0x8d, 0x7d, 0xad, 0x87, 0x68, 0xab, 0x5c, 0x2b, 0xcf, 0x0a, 0x9e,
	0xd5, 0x5d, 0x31, 0x4b, 0xc2, 0xef, 0x1a, 0xa5, 0x09, 0x76, 0x2e, 0x1d, 0x7c, 0x0f, 0x83, 0xf6,
	0xdb, 0x07, 0x19, 0x34, 0xd7, 0x42, 0xb1, 0xfd, 0xc7, 0xee, 0xe2, 0x78, 0xd7, 0x40, 0x1b, 0xe5,
	0xa9, 0x22, 0x22, 0x09, 0x65, 0xf0, 0x1c, 0x1a, 0x9d, 0x7d, 0x90, 0x46, 0x87, 0x21, 0x2b, 0x5e,
	0xe8, 0x47, 0x76, 0x88, 0x43, 0x39, 0xbc, 0x0d, 0xff, 0xb6, 0x1c, 0xfe, 0x1b, 0x00, 0x00, 0xff,
	0xff, 0x93, 0x84, 0x9b, 0x77, 0xd3, 0x0c, 0x00, 0x00,
}
