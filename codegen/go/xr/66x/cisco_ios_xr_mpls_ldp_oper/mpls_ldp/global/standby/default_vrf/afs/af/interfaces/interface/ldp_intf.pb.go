/*
Copyright 2019 Cisco Systems

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: ldp_intf.proto

package cisco_ios_xr_mpls_ldp_oper_mpls_ldp_global_standby_default_vrf_afs_af_interfaces_interface

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type LdpIntf_KEYS struct {
	AfName               string   `protobuf:"bytes,1,opt,name=af_name,json=afName,proto3" json:"af_name,omitempty"`
	InterfaceName        string   `protobuf:"bytes,2,opt,name=interface_name,json=interfaceName,proto3" json:"interface_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LdpIntf_KEYS) Reset()         { *m = LdpIntf_KEYS{} }
func (m *LdpIntf_KEYS) String() string { return proto.CompactTextString(m) }
func (*LdpIntf_KEYS) ProtoMessage()    {}
func (*LdpIntf_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_de2a8d7666321eba, []int{0}
}

func (m *LdpIntf_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LdpIntf_KEYS.Unmarshal(m, b)
}
func (m *LdpIntf_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LdpIntf_KEYS.Marshal(b, m, deterministic)
}
func (m *LdpIntf_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LdpIntf_KEYS.Merge(m, src)
}
func (m *LdpIntf_KEYS) XXX_Size() int {
	return xxx_messageInfo_LdpIntf_KEYS.Size(m)
}
func (m *LdpIntf_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_LdpIntf_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_LdpIntf_KEYS proto.InternalMessageInfo

func (m *LdpIntf_KEYS) GetAfName() string {
	if m != nil {
		return m.AfName
	}
	return ""
}

func (m *LdpIntf_KEYS) GetInterfaceName() string {
	if m != nil {
		return m.InterfaceName
	}
	return ""
}

type LdpVrfInfo struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Id                   uint32   `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LdpVrfInfo) Reset()         { *m = LdpVrfInfo{} }
func (m *LdpVrfInfo) String() string { return proto.CompactTextString(m) }
func (*LdpVrfInfo) ProtoMessage()    {}
func (*LdpVrfInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_de2a8d7666321eba, []int{1}
}

func (m *LdpVrfInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LdpVrfInfo.Unmarshal(m, b)
}
func (m *LdpVrfInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LdpVrfInfo.Marshal(b, m, deterministic)
}
func (m *LdpVrfInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LdpVrfInfo.Merge(m, src)
}
func (m *LdpVrfInfo) XXX_Size() int {
	return xxx_messageInfo_LdpVrfInfo.Size(m)
}
func (m *LdpVrfInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_LdpVrfInfo.DiscardUnknown(m)
}

var xxx_messageInfo_LdpVrfInfo proto.InternalMessageInfo

func (m *LdpVrfInfo) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *LdpVrfInfo) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

type LdpIntfTeMeshGrp struct {
	LdpTeMeshGroupAllCfgd bool     `protobuf:"varint,1,opt,name=ldp_te_mesh_group_all_cfgd,json=ldpTeMeshGroupAllCfgd,proto3" json:"ldp_te_mesh_group_all_cfgd,omitempty"`
	LdpMeshGroupEnabled   bool     `protobuf:"varint,2,opt,name=ldp_mesh_group_enabled,json=ldpMeshGroupEnabled,proto3" json:"ldp_mesh_group_enabled,omitempty"`
	TeMeshGroupId         uint32   `protobuf:"varint,3,opt,name=te_mesh_group_id,json=teMeshGroupId,proto3" json:"te_mesh_group_id,omitempty"`
	XXX_NoUnkeyedLiteral  struct{} `json:"-"`
	XXX_unrecognized      []byte   `json:"-"`
	XXX_sizecache         int32    `json:"-"`
}

func (m *LdpIntfTeMeshGrp) Reset()         { *m = LdpIntfTeMeshGrp{} }
func (m *LdpIntfTeMeshGrp) String() string { return proto.CompactTextString(m) }
func (*LdpIntfTeMeshGrp) ProtoMessage()    {}
func (*LdpIntfTeMeshGrp) Descriptor() ([]byte, []int) {
	return fileDescriptor_de2a8d7666321eba, []int{2}
}

func (m *LdpIntfTeMeshGrp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LdpIntfTeMeshGrp.Unmarshal(m, b)
}
func (m *LdpIntfTeMeshGrp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LdpIntfTeMeshGrp.Marshal(b, m, deterministic)
}
func (m *LdpIntfTeMeshGrp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LdpIntfTeMeshGrp.Merge(m, src)
}
func (m *LdpIntfTeMeshGrp) XXX_Size() int {
	return xxx_messageInfo_LdpIntfTeMeshGrp.Size(m)
}
func (m *LdpIntfTeMeshGrp) XXX_DiscardUnknown() {
	xxx_messageInfo_LdpIntfTeMeshGrp.DiscardUnknown(m)
}

var xxx_messageInfo_LdpIntfTeMeshGrp proto.InternalMessageInfo

func (m *LdpIntfTeMeshGrp) GetLdpTeMeshGroupAllCfgd() bool {
	if m != nil {
		return m.LdpTeMeshGroupAllCfgd
	}
	return false
}

func (m *LdpIntfTeMeshGrp) GetLdpMeshGroupEnabled() bool {
	if m != nil {
		return m.LdpMeshGroupEnabled
	}
	return false
}

func (m *LdpIntfTeMeshGrp) GetTeMeshGroupId() uint32 {
	if m != nil {
		return m.TeMeshGroupId
	}
	return 0
}

type LdpIntfAutocfg struct {
	Tuple                string   `protobuf:"bytes,1,opt,name=tuple,proto3" json:"tuple,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LdpIntfAutocfg) Reset()         { *m = LdpIntfAutocfg{} }
func (m *LdpIntfAutocfg) String() string { return proto.CompactTextString(m) }
func (*LdpIntfAutocfg) ProtoMessage()    {}
func (*LdpIntfAutocfg) Descriptor() ([]byte, []int) {
	return fileDescriptor_de2a8d7666321eba, []int{3}
}

func (m *LdpIntfAutocfg) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LdpIntfAutocfg.Unmarshal(m, b)
}
func (m *LdpIntfAutocfg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LdpIntfAutocfg.Marshal(b, m, deterministic)
}
func (m *LdpIntfAutocfg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LdpIntfAutocfg.Merge(m, src)
}
func (m *LdpIntfAutocfg) XXX_Size() int {
	return xxx_messageInfo_LdpIntfAutocfg.Size(m)
}
func (m *LdpIntfAutocfg) XXX_DiscardUnknown() {
	xxx_messageInfo_LdpIntfAutocfg.DiscardUnknown(m)
}

var xxx_messageInfo_LdpIntfAutocfg proto.InternalMessageInfo

func (m *LdpIntfAutocfg) GetTuple() string {
	if m != nil {
		return m.Tuple
	}
	return ""
}

type LdpIntf struct {
	Interface            string              `protobuf:"bytes,50,opt,name=interface,proto3" json:"interface,omitempty"`
	InterfaceNameXr      string              `protobuf:"bytes,51,opt,name=interface_name_xr,json=interfaceNameXr,proto3" json:"interface_name_xr,omitempty"`
	Vrf                  *LdpVrfInfo         `protobuf:"bytes,52,opt,name=vrf,proto3" json:"vrf,omitempty"`
	LdpEnabled           bool                `protobuf:"varint,53,opt,name=ldp_enabled,json=ldpEnabled,proto3" json:"ldp_enabled,omitempty"`
	IsImStale            bool                `protobuf:"varint,54,opt,name=is_im_stale,json=isImStale,proto3" json:"is_im_stale,omitempty"`
	LdpConfigMode        bool                `protobuf:"varint,55,opt,name=ldp_config_mode,json=ldpConfigMode,proto3" json:"ldp_config_mode,omitempty"`
	LdpAutoconfigDisable bool                `protobuf:"varint,56,opt,name=ldp_autoconfig_disable,json=ldpAutoconfigDisable,proto3" json:"ldp_autoconfig_disable,omitempty"`
	TeMeshGrp            []*LdpIntfTeMeshGrp `protobuf:"bytes,57,rep,name=te_mesh_grp,json=teMeshGrp,proto3" json:"te_mesh_grp,omitempty"`
	AutoConfig           []*LdpIntfAutocfg   `protobuf:"bytes,58,rep,name=auto_config,json=autoConfig,proto3" json:"auto_config,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *LdpIntf) Reset()         { *m = LdpIntf{} }
func (m *LdpIntf) String() string { return proto.CompactTextString(m) }
func (*LdpIntf) ProtoMessage()    {}
func (*LdpIntf) Descriptor() ([]byte, []int) {
	return fileDescriptor_de2a8d7666321eba, []int{4}
}

func (m *LdpIntf) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LdpIntf.Unmarshal(m, b)
}
func (m *LdpIntf) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LdpIntf.Marshal(b, m, deterministic)
}
func (m *LdpIntf) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LdpIntf.Merge(m, src)
}
func (m *LdpIntf) XXX_Size() int {
	return xxx_messageInfo_LdpIntf.Size(m)
}
func (m *LdpIntf) XXX_DiscardUnknown() {
	xxx_messageInfo_LdpIntf.DiscardUnknown(m)
}

var xxx_messageInfo_LdpIntf proto.InternalMessageInfo

func (m *LdpIntf) GetInterface() string {
	if m != nil {
		return m.Interface
	}
	return ""
}

func (m *LdpIntf) GetInterfaceNameXr() string {
	if m != nil {
		return m.InterfaceNameXr
	}
	return ""
}

func (m *LdpIntf) GetVrf() *LdpVrfInfo {
	if m != nil {
		return m.Vrf
	}
	return nil
}

func (m *LdpIntf) GetLdpEnabled() bool {
	if m != nil {
		return m.LdpEnabled
	}
	return false
}

func (m *LdpIntf) GetIsImStale() bool {
	if m != nil {
		return m.IsImStale
	}
	return false
}

func (m *LdpIntf) GetLdpConfigMode() bool {
	if m != nil {
		return m.LdpConfigMode
	}
	return false
}

func (m *LdpIntf) GetLdpAutoconfigDisable() bool {
	if m != nil {
		return m.LdpAutoconfigDisable
	}
	return false
}

func (m *LdpIntf) GetTeMeshGrp() []*LdpIntfTeMeshGrp {
	if m != nil {
		return m.TeMeshGrp
	}
	return nil
}

func (m *LdpIntf) GetAutoConfig() []*LdpIntfAutocfg {
	if m != nil {
		return m.AutoConfig
	}
	return nil
}

func init() {
	proto.RegisterType((*LdpIntf_KEYS)(nil), "cisco_ios_xr_mpls_ldp_oper.mpls_ldp.global.standby.default_vrf.afs.af.interfaces.interface.ldp_intf_KEYS")
	proto.RegisterType((*LdpVrfInfo)(nil), "cisco_ios_xr_mpls_ldp_oper.mpls_ldp.global.standby.default_vrf.afs.af.interfaces.interface.ldp_vrf_info")
	proto.RegisterType((*LdpIntfTeMeshGrp)(nil), "cisco_ios_xr_mpls_ldp_oper.mpls_ldp.global.standby.default_vrf.afs.af.interfaces.interface.ldp_intf_te_mesh_grp")
	proto.RegisterType((*LdpIntfAutocfg)(nil), "cisco_ios_xr_mpls_ldp_oper.mpls_ldp.global.standby.default_vrf.afs.af.interfaces.interface.ldp_intf_autocfg")
	proto.RegisterType((*LdpIntf)(nil), "cisco_ios_xr_mpls_ldp_oper.mpls_ldp.global.standby.default_vrf.afs.af.interfaces.interface.ldp_intf")
}

func init() { proto.RegisterFile("ldp_intf.proto", fileDescriptor_de2a8d7666321eba) }

var fileDescriptor_de2a8d7666321eba = []byte{
	// 509 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x54, 0x5d, 0x6f, 0xd3, 0x30,
	0x14, 0x55, 0x5a, 0x36, 0xda, 0x1b, 0xda, 0x0d, 0x33, 0x20, 0x42, 0x08, 0xaa, 0x4a, 0x40, 0xc5,
	0x43, 0x1e, 0xda, 0xf1, 0x31, 0xde, 0xa6, 0x31, 0xa1, 0x09, 0x0d, 0xa4, 0x8c, 0x07, 0xe0, 0xc5,
	0x72, 0x63, 0x3b, 0xb5, 0xe4, 0xc4, 0x96, 0xed, 0x56, 0x83, 0xff, 0x80, 0x84, 0xf8, 0x23, 0xfc,
	0x45, 0x64, 0x67, 0x49, 0x5b, 0xde, 0xb7, 0x37, 0xe7, 0xdc, 0x73, 0xef, 0xb9, 0x3e, 0x3e, 0x0a,
	0x0c, 0x25, 0xd5, 0x58, 0x54, 0x8e, 0xa7, 0xda, 0x28, 0xa7, 0xd0, 0xf7, 0x5c, 0xd8, 0x5c, 0x61,
	0xa1, 0x2c, 0xbe, 0x34, 0xb8, 0xd4, 0xd2, 0x62, 0xcf, 0x50, 0x9a, 0x99, 0xb4, 0xf9, 0x4a, 0x0b,
	0xa9, 0xe6, 0x44, 0xa6, 0xd6, 0x91, 0x8a, 0xce, 0x7f, 0xa4, 0x94, 0x71, 0xb2, 0x94, 0x0e, 0xaf,
	0x0c, 0x4f, 0x09, 0xb7, 0x29, 0xe1, 0xa9, 0xa8, 0x1c, 0x33, 0x9c, 0xe4, 0xcc, 0xae, 0x8f, 0xe3,
	0xcf, 0x30, 0x68, 0xd4, 0xf0, 0xc7, 0xd3, 0x6f, 0x17, 0xe8, 0x21, 0xdc, 0x26, 0x1c, 0x57, 0xa4,
	0x64, 0x49, 0x34, 0x8a, 0x26, 0xfd, 0x6c, 0x97, 0xf0, 0x4f, 0xa4, 0x64, 0xe8, 0x19, 0x0c, 0xdb,
	0xb6, 0xba, 0xde, 0x09, 0xf5, 0x41, 0x8b, 0x7a, 0xda, 0x78, 0x0a, 0x77, 0xfc, 0xc0, 0x95, 0xe1,
	0x58, 0x54, 0x5c, 0x21, 0x04, 0xb7, 0x36, 0x86, 0x85, 0x33, 0x1a, 0x42, 0x47, 0xd0, 0xd0, 0x3e,
	0xc8, 0x3a, 0x82, 0x8e, 0xff, 0x46, 0x70, 0xd0, 0x6e, 0xe1, 0x18, 0x2e, 0x99, 0x5d, 0xe0, 0xc2,
	0x68, 0x74, 0x04, 0x8f, 0x3c, 0xbe, 0x86, 0xd4, 0x52, 0x63, 0x22, 0x25, 0xce, 0x79, 0x41, 0xc3,
	0xc8, 0x5e, 0x76, 0x5f, 0x52, 0xfd, 0x85, 0x9d, 0x33, 0xbb, 0xf8, 0xe0, 0xcb, 0xc7, 0x52, 0x9e,
	0xf0, 0x82, 0xa2, 0x19, 0x3c, 0xf0, 0xad, 0x1b, 0x7d, 0xac, 0x22, 0x73, 0xc9, 0x6a, 0xdd, 0x5e,
	0x76, 0x4f, 0x52, 0xdd, 0x36, 0x9d, 0xd6, 0x25, 0xf4, 0x02, 0xf6, 0xb7, 0xb5, 0x04, 0x4d, 0xba,
	0x61, 0xcd, 0x81, 0x5b, 0x4b, 0x9c, 0xd1, 0xf1, 0x04, 0xf6, 0xdb, 0x85, 0xc9, 0xd2, 0xa9, 0x9c,
	0x17, 0xe8, 0x00, 0x76, 0xdc, 0x52, 0xcb, 0xe6, 0xaa, 0xf5, 0xc7, 0xf8, 0xcf, 0x0e, 0xf4, 0x1a,
	0x2a, 0x7a, 0x0c, 0xfd, 0xd6, 0xad, 0x64, 0x1a, 0x68, 0x6b, 0x00, 0xbd, 0x84, 0xbb, 0xdb, 0x0e,
	0xe3, 0x4b, 0x93, 0xcc, 0x02, 0x6b, 0x6f, 0xcb, 0xe4, 0xaf, 0x06, 0xfd, 0x84, 0xee, 0xca, 0xf0,
	0xe4, 0x70, 0x14, 0x4d, 0xe2, 0xe9, 0x22, 0xbd, 0xbe, 0x84, 0xa4, 0x9b, 0xaf, 0x99, 0x79, 0x51,
	0xf4, 0x14, 0x62, 0x0f, 0x36, 0x7e, 0xbe, 0x0a, 0x7e, 0x82, 0xa4, 0xad, 0x8d, 0x4f, 0x20, 0x16,
	0x16, 0x8b, 0x12, 0x5b, 0x47, 0x24, 0x4b, 0x5e, 0x07, 0x42, 0x5f, 0xd8, 0xb3, 0xf2, 0xc2, 0x03,
	0xe8, 0x39, 0xec, 0xf9, 0x01, 0xb9, 0xaa, 0xb8, 0x28, 0x70, 0xa9, 0x28, 0x4b, 0xde, 0x04, 0x8e,
	0xcf, 0xe2, 0x49, 0x40, 0xcf, 0x15, 0x65, 0xe8, 0xb0, 0x7e, 0xc3, 0x60, 0x70, 0xcd, 0xa5, 0xc2,
	0x7a, 0x89, 0xe4, 0x6d, 0xa0, 0xfb, 0xd0, 0x1c, 0xb7, 0xc5, 0xf7, 0x75, 0x0d, 0xfd, 0x8e, 0x20,
	0xde, 0x08, 0x51, 0x72, 0x34, 0xea, 0x4e, 0xe2, 0xa9, 0xbe, 0x6e, 0x8f, 0xfe, 0x0f, 0x6f, 0xd6,
	0x6f, 0x22, 0xa3, 0xd1, 0xaf, 0x08, 0x62, 0x7f, 0x8b, 0xab, 0x2b, 0x27, 0xef, 0xc2, 0x4a, 0xf2,
	0x46, 0x56, 0xba, 0x8a, 0x67, 0x06, 0xfe, 0x50, 0x9b, 0x3b, 0xdf, 0x0d, 0x3f, 0x96, 0xd9, 0xbf,
	0x00, 0x00, 0x00, 0xff, 0xff, 0x6e, 0xf9, 0x0b, 0xfc, 0x6a, 0x04, 0x00, 0x00,
}
