/*
Copyright 2019 Cisco Systems

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: ipv6_rib_edm_advert_entry.proto

package cisco_ios_xr_ip_rib_ipv6_oper_ipv6_rib_vrfs_vrf_afs_af_safs_saf_ip_rib_route_table_names_ip_rib_route_table_name_adverts_advert

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Ipv6RibEdmAdvertEntry_KEYS struct {
	VrfName              string   `protobuf:"bytes,1,opt,name=vrf_name,json=vrfName,proto3" json:"vrf_name,omitempty"`
	AfName               string   `protobuf:"bytes,2,opt,name=af_name,json=afName,proto3" json:"af_name,omitempty"`
	SafName              string   `protobuf:"bytes,3,opt,name=saf_name,json=safName,proto3" json:"saf_name,omitempty"`
	RouteTableName       string   `protobuf:"bytes,4,opt,name=route_table_name,json=routeTableName,proto3" json:"route_table_name,omitempty"`
	Address              string   `protobuf:"bytes,5,opt,name=address,proto3" json:"address,omitempty"`
	PrefixLength         uint32   `protobuf:"varint,6,opt,name=prefix_length,json=prefixLength,proto3" json:"prefix_length,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Ipv6RibEdmAdvertEntry_KEYS) Reset()         { *m = Ipv6RibEdmAdvertEntry_KEYS{} }
func (m *Ipv6RibEdmAdvertEntry_KEYS) String() string { return proto.CompactTextString(m) }
func (*Ipv6RibEdmAdvertEntry_KEYS) ProtoMessage()    {}
func (*Ipv6RibEdmAdvertEntry_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_79155add92648dd8, []int{0}
}

func (m *Ipv6RibEdmAdvertEntry_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Ipv6RibEdmAdvertEntry_KEYS.Unmarshal(m, b)
}
func (m *Ipv6RibEdmAdvertEntry_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Ipv6RibEdmAdvertEntry_KEYS.Marshal(b, m, deterministic)
}
func (m *Ipv6RibEdmAdvertEntry_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Ipv6RibEdmAdvertEntry_KEYS.Merge(m, src)
}
func (m *Ipv6RibEdmAdvertEntry_KEYS) XXX_Size() int {
	return xxx_messageInfo_Ipv6RibEdmAdvertEntry_KEYS.Size(m)
}
func (m *Ipv6RibEdmAdvertEntry_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_Ipv6RibEdmAdvertEntry_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_Ipv6RibEdmAdvertEntry_KEYS proto.InternalMessageInfo

func (m *Ipv6RibEdmAdvertEntry_KEYS) GetVrfName() string {
	if m != nil {
		return m.VrfName
	}
	return ""
}

func (m *Ipv6RibEdmAdvertEntry_KEYS) GetAfName() string {
	if m != nil {
		return m.AfName
	}
	return ""
}

func (m *Ipv6RibEdmAdvertEntry_KEYS) GetSafName() string {
	if m != nil {
		return m.SafName
	}
	return ""
}

func (m *Ipv6RibEdmAdvertEntry_KEYS) GetRouteTableName() string {
	if m != nil {
		return m.RouteTableName
	}
	return ""
}

func (m *Ipv6RibEdmAdvertEntry_KEYS) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *Ipv6RibEdmAdvertEntry_KEYS) GetPrefixLength() uint32 {
	if m != nil {
		return m.PrefixLength
	}
	return 0
}

type Ipv6RibEdmAdvertItem struct {
	ProtocolId                  uint32   `protobuf:"varint,1,opt,name=protocol_id,json=protocolId,proto3" json:"protocol_id,omitempty"`
	ClientId                    uint32   `protobuf:"varint,2,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	NumberOfExtendedCommunities uint32   `protobuf:"varint,3,opt,name=number_of_extended_communities,json=numberOfExtendedCommunities,proto3" json:"number_of_extended_communities,omitempty"`
	ExtendedCommunities         []uint32 `protobuf:"varint,4,rep,packed,name=extended_communities,json=extendedCommunities,proto3" json:"extended_communities,omitempty"`
	ProtocolOpaqueFlags         uint32   `protobuf:"varint,5,opt,name=protocol_opaque_flags,json=protocolOpaqueFlags,proto3" json:"protocol_opaque_flags,omitempty"`
	ProtocolOpaque              uint32   `protobuf:"varint,6,opt,name=protocol_opaque,json=protocolOpaque,proto3" json:"protocol_opaque,omitempty"`
	Code                        string   `protobuf:"bytes,7,opt,name=code,proto3" json:"code,omitempty"`
	InstanceName                []string `protobuf:"bytes,8,rep,name=instance_name,json=instanceName,proto3" json:"instance_name,omitempty"`
	XXX_NoUnkeyedLiteral        struct{} `json:"-"`
	XXX_unrecognized            []byte   `json:"-"`
	XXX_sizecache               int32    `json:"-"`
}

func (m *Ipv6RibEdmAdvertItem) Reset()         { *m = Ipv6RibEdmAdvertItem{} }
func (m *Ipv6RibEdmAdvertItem) String() string { return proto.CompactTextString(m) }
func (*Ipv6RibEdmAdvertItem) ProtoMessage()    {}
func (*Ipv6RibEdmAdvertItem) Descriptor() ([]byte, []int) {
	return fileDescriptor_79155add92648dd8, []int{1}
}

func (m *Ipv6RibEdmAdvertItem) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Ipv6RibEdmAdvertItem.Unmarshal(m, b)
}
func (m *Ipv6RibEdmAdvertItem) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Ipv6RibEdmAdvertItem.Marshal(b, m, deterministic)
}
func (m *Ipv6RibEdmAdvertItem) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Ipv6RibEdmAdvertItem.Merge(m, src)
}
func (m *Ipv6RibEdmAdvertItem) XXX_Size() int {
	return xxx_messageInfo_Ipv6RibEdmAdvertItem.Size(m)
}
func (m *Ipv6RibEdmAdvertItem) XXX_DiscardUnknown() {
	xxx_messageInfo_Ipv6RibEdmAdvertItem.DiscardUnknown(m)
}

var xxx_messageInfo_Ipv6RibEdmAdvertItem proto.InternalMessageInfo

func (m *Ipv6RibEdmAdvertItem) GetProtocolId() uint32 {
	if m != nil {
		return m.ProtocolId
	}
	return 0
}

func (m *Ipv6RibEdmAdvertItem) GetClientId() uint32 {
	if m != nil {
		return m.ClientId
	}
	return 0
}

func (m *Ipv6RibEdmAdvertItem) GetNumberOfExtendedCommunities() uint32 {
	if m != nil {
		return m.NumberOfExtendedCommunities
	}
	return 0
}

func (m *Ipv6RibEdmAdvertItem) GetExtendedCommunities() []uint32 {
	if m != nil {
		return m.ExtendedCommunities
	}
	return nil
}

func (m *Ipv6RibEdmAdvertItem) GetProtocolOpaqueFlags() uint32 {
	if m != nil {
		return m.ProtocolOpaqueFlags
	}
	return 0
}

func (m *Ipv6RibEdmAdvertItem) GetProtocolOpaque() uint32 {
	if m != nil {
		return m.ProtocolOpaque
	}
	return 0
}

func (m *Ipv6RibEdmAdvertItem) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *Ipv6RibEdmAdvertItem) GetInstanceName() []string {
	if m != nil {
		return m.InstanceName
	}
	return nil
}

type Ipv6RibEdmAdvertEntry struct {
	Ipv6RibEdmAdvert     []*Ipv6RibEdmAdvertItem `protobuf:"bytes,50,rep,name=ipv6_rib_edm_advert,json=ipv6RibEdmAdvert,proto3" json:"ipv6_rib_edm_advert,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *Ipv6RibEdmAdvertEntry) Reset()         { *m = Ipv6RibEdmAdvertEntry{} }
func (m *Ipv6RibEdmAdvertEntry) String() string { return proto.CompactTextString(m) }
func (*Ipv6RibEdmAdvertEntry) ProtoMessage()    {}
func (*Ipv6RibEdmAdvertEntry) Descriptor() ([]byte, []int) {
	return fileDescriptor_79155add92648dd8, []int{2}
}

func (m *Ipv6RibEdmAdvertEntry) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Ipv6RibEdmAdvertEntry.Unmarshal(m, b)
}
func (m *Ipv6RibEdmAdvertEntry) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Ipv6RibEdmAdvertEntry.Marshal(b, m, deterministic)
}
func (m *Ipv6RibEdmAdvertEntry) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Ipv6RibEdmAdvertEntry.Merge(m, src)
}
func (m *Ipv6RibEdmAdvertEntry) XXX_Size() int {
	return xxx_messageInfo_Ipv6RibEdmAdvertEntry.Size(m)
}
func (m *Ipv6RibEdmAdvertEntry) XXX_DiscardUnknown() {
	xxx_messageInfo_Ipv6RibEdmAdvertEntry.DiscardUnknown(m)
}

var xxx_messageInfo_Ipv6RibEdmAdvertEntry proto.InternalMessageInfo

func (m *Ipv6RibEdmAdvertEntry) GetIpv6RibEdmAdvert() []*Ipv6RibEdmAdvertItem {
	if m != nil {
		return m.Ipv6RibEdmAdvert
	}
	return nil
}

func init() {
	proto.RegisterType((*Ipv6RibEdmAdvertEntry_KEYS)(nil), "cisco_ios_xr_ip_rib_ipv6_oper.ipv6_rib.vrfs.vrf.afs.af.safs.saf.ip_rib_route_table_names.ip_rib_route_table_name.adverts.advert.ipv6_rib_edm_advert_entry_KEYS")
	proto.RegisterType((*Ipv6RibEdmAdvertItem)(nil), "cisco_ios_xr_ip_rib_ipv6_oper.ipv6_rib.vrfs.vrf.afs.af.safs.saf.ip_rib_route_table_names.ip_rib_route_table_name.adverts.advert.ipv6_rib_edm_advert_item")
	proto.RegisterType((*Ipv6RibEdmAdvertEntry)(nil), "cisco_ios_xr_ip_rib_ipv6_oper.ipv6_rib.vrfs.vrf.afs.af.safs.saf.ip_rib_route_table_names.ip_rib_route_table_name.adverts.advert.ipv6_rib_edm_advert_entry")
}

func init() { proto.RegisterFile("ipv6_rib_edm_advert_entry.proto", fileDescriptor_79155add92648dd8) }

var fileDescriptor_79155add92648dd8 = []byte{
	// 463 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xc4, 0x93, 0xcd, 0x8e, 0xd3, 0x30,
	0x14, 0x85, 0x95, 0xb6, 0xf4, 0xe7, 0xce, 0x64, 0x18, 0xb9, 0x20, 0x52, 0x8d, 0x34, 0x13, 0x95,
	0x05, 0x59, 0x59, 0xa2, 0x48, 0xec, 0xd1, 0xa8, 0x48, 0x23, 0x10, 0x23, 0x05, 0x36, 0xac, 0x2c,
	0x27, 0xbe, 0x1e, 0x2c, 0x25, 0x71, 0xb0, 0xdd, 0xa8, 0xac, 0x78, 0x0e, 0x1e, 0x89, 0x37, 0xe0,
	0x09, 0xe0, 0x35, 0x50, 0x9c, 0x04, 0xc4, 0xa8, 0x5d, 0xb3, 0xa9, 0x9b, 0xf3, 0x9d, 0x13, 0xdd,
	0x1f, 0x07, 0xae, 0x54, 0xdd, 0xbc, 0x64, 0x46, 0x65, 0x0c, 0x45, 0xc9, 0xb8, 0x68, 0xd0, 0x38,
	0x86, 0x95, 0x33, 0x5f, 0x68, 0x6d, 0xb4, 0xd3, 0xe4, 0x6b, 0xae, 0x6c, 0xae, 0x99, 0xd2, 0x96,
	0xed, 0x0d, 0x53, 0xb5, 0xf7, 0xfa, 0x90, 0xae, 0xd1, 0xd0, 0x21, 0x4e, 0x1b, 0x23, 0x6d, 0xfb,
	0x43, 0xb9, 0xb4, 0x94, 0x4b, 0x6a, 0xdb, 0xd3, 0x72, 0x49, 0xfb, 0x88, 0xd1, 0x3b, 0x87, 0xcc,
	0xf1, 0xac, 0x40, 0x56, 0xf1, 0x12, 0xed, 0x31, 0x40, 0xbb, 0x22, 0x6c, 0x7f, 0xae, 0x7f, 0x04,
	0x70, 0x79, 0xb4, 0x48, 0xf6, 0x66, 0xfb, 0xf1, 0x3d, 0x59, 0xc1, 0xbc, 0x31, 0xd2, 0xa7, 0xa3,
	0x20, 0x0e, 0x92, 0x45, 0x3a, 0x6b, 0x8c, 0x7c, 0xc7, 0x4b, 0x24, 0x4f, 0x60, 0xc6, 0x7b, 0x32,
	0xf2, 0x64, 0xca, 0x3b, 0xb0, 0x82, 0xb9, 0x1d, 0xc8, 0xb8, 0xcb, 0xd8, 0x1e, 0x25, 0x70, 0x7e,
	0xbf, 0xa8, 0x68, 0xe2, 0x2d, 0x67, 0x5e, 0xff, 0xd0, 0xca, 0xde, 0x19, 0xc1, 0x8c, 0x0b, 0x61,
	0xd0, 0xda, 0xe8, 0x41, 0xf7, 0x8e, 0xfe, 0x91, 0x3c, 0x85, 0xb0, 0x36, 0x28, 0xd5, 0x9e, 0x15,
	0x58, 0xdd, 0xb9, 0x4f, 0xd1, 0x34, 0x0e, 0x92, 0x30, 0x3d, 0xed, 0xc4, 0xb7, 0x5e, 0x5b, 0xff,
	0x1c, 0x41, 0x74, 0xa8, 0x35, 0xe5, 0xb0, 0x24, 0x57, 0x70, 0xe2, 0x37, 0x90, 0xeb, 0x82, 0x29,
	0xe1, 0xfb, 0x0a, 0x53, 0x18, 0xa4, 0x1b, 0x41, 0x2e, 0x60, 0x91, 0x17, 0x0a, 0x2b, 0xd7, 0xe2,
	0x91, 0xc7, 0xf3, 0x4e, 0xb8, 0x11, 0xe4, 0x1a, 0x2e, 0xab, 0x5d, 0x99, 0xa1, 0x61, 0x5a, 0x32,
	0xdc, 0x3b, 0xac, 0x04, 0x0a, 0x96, 0xeb, 0xb2, 0xdc, 0x55, 0xca, 0x29, 0xb4, 0xbe, 0xe9, 0x30,
	0xbd, 0xe8, 0x5c, 0xb7, 0x72, 0xdb, 0x7b, 0xae, 0xff, 0x5a, 0xc8, 0x73, 0x78, 0x74, 0x30, 0x3a,
	0x89, 0xc7, 0x49, 0x98, 0x2e, 0xf1, 0x40, 0x64, 0x03, 0x8f, 0xff, 0x54, 0xad, 0x6b, 0xfe, 0x79,
	0x87, 0x4c, 0x16, 0xfc, 0xae, 0x9b, 0x4f, 0x98, 0x2e, 0x07, 0x78, 0xeb, 0xd9, 0xeb, 0x16, 0x91,
	0x67, 0xf0, 0xf0, 0x5e, 0xa6, 0x9f, 0xd6, 0xd9, 0xbf, 0x6e, 0x42, 0x60, 0x92, 0x6b, 0x81, 0xd1,
	0xcc, 0xcf, 0xda, 0xff, 0x6f, 0x07, 0xad, 0x2a, 0xeb, 0x78, 0x95, 0xf7, 0x9b, 0x9a, 0xc7, 0xe3,
	0x64, 0x91, 0x9e, 0x0e, 0x62, 0xbb, 0xa7, 0xf5, 0xaf, 0x00, 0x56, 0x47, 0xef, 0x10, 0xf9, 0x1e,
	0xc0, 0xf2, 0x00, 0x8d, 0x36, 0xf1, 0x38, 0x39, 0xd9, 0x7c, 0x0b, 0xe8, 0x7f, 0xfe, 0x04, 0xe8,
	0xb1, 0x3b, 0x92, 0x9e, 0xb7, 0x24, 0x55, 0xd9, 0x56, 0x94, 0xaf, 0xbc, 0x9c, 0x4d, 0xfd, 0xc8,
	0x5e, 0xfc, 0x0e, 0x00, 0x00, 0xff, 0xff, 0x3e, 0x9e, 0x11, 0x01, 0xd8, 0x03, 0x00, 0x00,
}
