/*
Copyright 2019 Cisco Systems

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: pmipv6_show_hb_path_bd.proto

package cisco_ios_xr_ip_mobileip_oper_pmipv6_lma_heartbeats_heartbeat

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Pmipv6ShowHbPathBd_KEYS struct {
	PeerAddr             string   `protobuf:"bytes,1,opt,name=peer_addr,json=peerAddr,proto3" json:"peer_addr,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Pmipv6ShowHbPathBd_KEYS) Reset()         { *m = Pmipv6ShowHbPathBd_KEYS{} }
func (m *Pmipv6ShowHbPathBd_KEYS) String() string { return proto.CompactTextString(m) }
func (*Pmipv6ShowHbPathBd_KEYS) ProtoMessage()    {}
func (*Pmipv6ShowHbPathBd_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_c70b3373cf72b661, []int{0}
}

func (m *Pmipv6ShowHbPathBd_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Pmipv6ShowHbPathBd_KEYS.Unmarshal(m, b)
}
func (m *Pmipv6ShowHbPathBd_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Pmipv6ShowHbPathBd_KEYS.Marshal(b, m, deterministic)
}
func (m *Pmipv6ShowHbPathBd_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Pmipv6ShowHbPathBd_KEYS.Merge(m, src)
}
func (m *Pmipv6ShowHbPathBd_KEYS) XXX_Size() int {
	return xxx_messageInfo_Pmipv6ShowHbPathBd_KEYS.Size(m)
}
func (m *Pmipv6ShowHbPathBd_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_Pmipv6ShowHbPathBd_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_Pmipv6ShowHbPathBd_KEYS proto.InternalMessageInfo

func (m *Pmipv6ShowHbPathBd_KEYS) GetPeerAddr() string {
	if m != nil {
		return m.PeerAddr
	}
	return ""
}

type Pmipv6ShowHbPathBd struct {
	Vrf                    string   `protobuf:"bytes,50,opt,name=vrf,proto3" json:"vrf,omitempty"`
	CustomerName           string   `protobuf:"bytes,51,opt,name=customer_name,json=customerName,proto3" json:"customer_name,omitempty"`
	SourcePort             uint32   `protobuf:"varint,52,opt,name=source_port,json=sourcePort,proto3" json:"source_port,omitempty"`
	DestinationPort        uint32   `protobuf:"varint,53,opt,name=destination_port,json=destinationPort,proto3" json:"destination_port,omitempty"`
	SourceIpv4Address      string   `protobuf:"bytes,54,opt,name=source_ipv4_address,json=sourceIpv4Address,proto3" json:"source_ipv4_address,omitempty"`
	DestinationIpv4Address string   `protobuf:"bytes,55,opt,name=destination_ipv4_address,json=destinationIpv4Address,proto3" json:"destination_ipv4_address,omitempty"`
	SourceIpv6Address      string   `protobuf:"bytes,56,opt,name=source_ipv6_address,json=sourceIpv6Address,proto3" json:"source_ipv6_address,omitempty"`
	DestinationIpv6Address string   `protobuf:"bytes,57,opt,name=destination_ipv6_address,json=destinationIpv6Address,proto3" json:"destination_ipv6_address,omitempty"`
	Status                 bool     `protobuf:"varint,58,opt,name=status,proto3" json:"status,omitempty"`
	Ipv6Path               bool     `protobuf:"varint,59,opt,name=ipv6_path,json=ipv6Path,proto3" json:"ipv6_path,omitempty"`
	XXX_NoUnkeyedLiteral   struct{} `json:"-"`
	XXX_unrecognized       []byte   `json:"-"`
	XXX_sizecache          int32    `json:"-"`
}

func (m *Pmipv6ShowHbPathBd) Reset()         { *m = Pmipv6ShowHbPathBd{} }
func (m *Pmipv6ShowHbPathBd) String() string { return proto.CompactTextString(m) }
func (*Pmipv6ShowHbPathBd) ProtoMessage()    {}
func (*Pmipv6ShowHbPathBd) Descriptor() ([]byte, []int) {
	return fileDescriptor_c70b3373cf72b661, []int{1}
}

func (m *Pmipv6ShowHbPathBd) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Pmipv6ShowHbPathBd.Unmarshal(m, b)
}
func (m *Pmipv6ShowHbPathBd) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Pmipv6ShowHbPathBd.Marshal(b, m, deterministic)
}
func (m *Pmipv6ShowHbPathBd) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Pmipv6ShowHbPathBd.Merge(m, src)
}
func (m *Pmipv6ShowHbPathBd) XXX_Size() int {
	return xxx_messageInfo_Pmipv6ShowHbPathBd.Size(m)
}
func (m *Pmipv6ShowHbPathBd) XXX_DiscardUnknown() {
	xxx_messageInfo_Pmipv6ShowHbPathBd.DiscardUnknown(m)
}

var xxx_messageInfo_Pmipv6ShowHbPathBd proto.InternalMessageInfo

func (m *Pmipv6ShowHbPathBd) GetVrf() string {
	if m != nil {
		return m.Vrf
	}
	return ""
}

func (m *Pmipv6ShowHbPathBd) GetCustomerName() string {
	if m != nil {
		return m.CustomerName
	}
	return ""
}

func (m *Pmipv6ShowHbPathBd) GetSourcePort() uint32 {
	if m != nil {
		return m.SourcePort
	}
	return 0
}

func (m *Pmipv6ShowHbPathBd) GetDestinationPort() uint32 {
	if m != nil {
		return m.DestinationPort
	}
	return 0
}

func (m *Pmipv6ShowHbPathBd) GetSourceIpv4Address() string {
	if m != nil {
		return m.SourceIpv4Address
	}
	return ""
}

func (m *Pmipv6ShowHbPathBd) GetDestinationIpv4Address() string {
	if m != nil {
		return m.DestinationIpv4Address
	}
	return ""
}

func (m *Pmipv6ShowHbPathBd) GetSourceIpv6Address() string {
	if m != nil {
		return m.SourceIpv6Address
	}
	return ""
}

func (m *Pmipv6ShowHbPathBd) GetDestinationIpv6Address() string {
	if m != nil {
		return m.DestinationIpv6Address
	}
	return ""
}

func (m *Pmipv6ShowHbPathBd) GetStatus() bool {
	if m != nil {
		return m.Status
	}
	return false
}

func (m *Pmipv6ShowHbPathBd) GetIpv6Path() bool {
	if m != nil {
		return m.Ipv6Path
	}
	return false
}

func init() {
	proto.RegisterType((*Pmipv6ShowHbPathBd_KEYS)(nil), "cisco_ios_xr_ip_mobileip_oper.pmipv6.lma.heartbeats.heartbeat.pmipv6_show_hb_path_bd_KEYS")
	proto.RegisterType((*Pmipv6ShowHbPathBd)(nil), "cisco_ios_xr_ip_mobileip_oper.pmipv6.lma.heartbeats.heartbeat.pmipv6_show_hb_path_bd")
}

func init() { proto.RegisterFile("pmipv6_show_hb_path_bd.proto", fileDescriptor_c70b3373cf72b661) }

var fileDescriptor_c70b3373cf72b661 = []byte{
	// 329 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x92, 0x41, 0x4b, 0xfb, 0x40,
	0x10, 0xc5, 0x09, 0x85, 0xd2, 0xee, 0xff, 0x5f, 0xac, 0x2b, 0x94, 0x85, 0x0a, 0x96, 0x7a, 0xa9,
	0x97, 0x1c, 0x6c, 0x8d, 0xb5, 0xe2, 0xa1, 0x07, 0x0f, 0x22, 0x48, 0xa9, 0x27, 0x4f, 0xc3, 0x26,
	0x59, 0xc9, 0x42, 0xd3, 0x5d, 0x66, 0xa7, 0xd1, 0x0f, 0xe4, 0x07, 0x95, 0x6c, 0x6a, 0x9b, 0x4a,
	0xbd, 0x4d, 0xde, 0x9b, 0xdf, 0x7b, 0x64, 0x77, 0xd9, 0xb9, 0xcd, 0xb5, 0x2d, 0x22, 0x70, 0x99,
	0xf9, 0x80, 0x2c, 0x06, 0x2b, 0x29, 0x83, 0x38, 0x0d, 0x2d, 0x1a, 0x32, 0xfc, 0x21, 0xd1, 0x2e,
	0x31, 0xa0, 0x8d, 0x83, 0x4f, 0x04, 0x6d, 0x21, 0x37, 0xb1, 0x5e, 0x29, 0x6d, 0xc1, 0x58, 0x85,
	0x61, 0xc5, 0x86, 0xab, 0x5c, 0x86, 0x99, 0x92, 0x48, 0xb1, 0x92, 0xe4, 0xf6, 0xe3, 0x70, 0xc6,
	0xfa, 0xc7, 0xe3, 0xe1, 0xf9, 0xf1, 0xed, 0x95, 0xf7, 0x59, 0xdb, 0x2a, 0x85, 0x20, 0xd3, 0x14,
	0x45, 0x30, 0x08, 0x46, 0xed, 0x65, 0xab, 0x14, 0xe6, 0x69, 0x8a, 0xc3, 0xaf, 0x06, 0xeb, 0x1d,
	0x87, 0x79, 0x97, 0x35, 0x0a, 0x7c, 0x17, 0xd7, 0x9e, 0x28, 0x47, 0x7e, 0xc9, 0x3a, 0xc9, 0xc6,
	0x91, 0xc9, 0x15, 0xc2, 0x5a, 0xe6, 0x4a, 0x8c, 0xbd, 0xf7, 0xff, 0x47, 0x7c, 0x91, 0xb9, 0xe2,
	0x17, 0xec, 0x9f, 0x33, 0x1b, 0x4c, 0x14, 0x58, 0x83, 0x24, 0x26, 0x83, 0x60, 0xd4, 0x59, 0xb2,
	0x4a, 0x5a, 0x18, 0x24, 0x7e, 0xc5, 0xba, 0xa9, 0x72, 0xa4, 0xd7, 0x92, 0xb4, 0x59, 0x57, 0x5b,
	0x37, 0x7e, 0xeb, 0xa4, 0xa6, 0xfb, 0xd5, 0x90, 0x9d, 0x6d, 0xb3, 0xb4, 0x2d, 0x26, 0xfe, 0x0f,
	0x94, 0x73, 0x22, 0xf2, 0xb5, 0xa7, 0x95, 0xf5, 0x64, 0x8b, 0xc9, 0xbc, 0x32, 0xf8, 0x94, 0x89,
	0x7a, 0xf4, 0x01, 0x74, 0xeb, 0xa1, 0x5e, 0xcd, 0xaf, 0x93, 0x07, 0x4d, 0xd1, 0x0e, 0x9a, 0xfe,
	0x6a, 0x8a, 0xfe, 0x6e, 0xda, 0x43, 0x77, 0xc7, 0x9a, 0x76, 0x64, 0x8f, 0x35, 0x1d, 0x49, 0xda,
	0x38, 0x31, 0x1b, 0x04, 0xa3, 0xd6, 0x72, 0xfb, 0x55, 0x5e, 0x93, 0x4f, 0x29, 0x8f, 0x5f, 0xdc,
	0x7b, 0xab, 0x55, 0x0a, 0x0b, 0x49, 0x59, 0xdc, 0xf4, 0x0f, 0x65, 0xfc, 0x1d, 0x00, 0x00, 0xff,
	0xff, 0x48, 0xc7, 0x41, 0x13, 0x48, 0x02, 0x00, 0x00,
}
