/*
Copyright 2019 Cisco Systems

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: show_sessionmon_stat.proto

package cisco_ios_xr_subscriber_session_mon_oper_session_mon_nodes_node_session_mon_statistics

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ShowSessionmonStat_KEYS struct {
	NodeId               string   `protobuf:"bytes,1,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ShowSessionmonStat_KEYS) Reset()         { *m = ShowSessionmonStat_KEYS{} }
func (m *ShowSessionmonStat_KEYS) String() string { return proto.CompactTextString(m) }
func (*ShowSessionmonStat_KEYS) ProtoMessage()    {}
func (*ShowSessionmonStat_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_a4cd1a2f7ea829df, []int{0}
}

func (m *ShowSessionmonStat_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ShowSessionmonStat_KEYS.Unmarshal(m, b)
}
func (m *ShowSessionmonStat_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ShowSessionmonStat_KEYS.Marshal(b, m, deterministic)
}
func (m *ShowSessionmonStat_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ShowSessionmonStat_KEYS.Merge(m, src)
}
func (m *ShowSessionmonStat_KEYS) XXX_Size() int {
	return xxx_messageInfo_ShowSessionmonStat_KEYS.Size(m)
}
func (m *ShowSessionmonStat_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_ShowSessionmonStat_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_ShowSessionmonStat_KEYS proto.InternalMessageInfo

func (m *ShowSessionmonStat_KEYS) GetNodeId() string {
	if m != nil {
		return m.NodeId
	}
	return ""
}

type ShowSessionmonStat struct {
	Total                uint32   `protobuf:"varint,50,opt,name=total,proto3" json:"total,omitempty"`
	Pppoe                uint32   `protobuf:"varint,51,opt,name=pppoe,proto3" json:"pppoe,omitempty"`
	PppoeDs              uint32   `protobuf:"varint,52,opt,name=pppoe_ds,json=pppoeDs,proto3" json:"pppoe_ds,omitempty"`
	Dhcpv4               uint32   `protobuf:"varint,53,opt,name=dhcpv4,proto3" json:"dhcpv4,omitempty"`
	Dhcpv6               uint32   `protobuf:"varint,54,opt,name=dhcpv6,proto3" json:"dhcpv6,omitempty"`
	DhcpDs               uint32   `protobuf:"varint,55,opt,name=dhcp_ds,json=dhcpDs,proto3" json:"dhcp_ds,omitempty"`
	Ippkt                uint32   `protobuf:"varint,56,opt,name=ippkt,proto3" json:"ippkt,omitempty"`
	ActiveSessions       uint32   `protobuf:"varint,57,opt,name=active_sessions,json=activeSessions,proto3" json:"active_sessions,omitempty"`
	StandbySessions      uint32   `protobuf:"varint,58,opt,name=standby_sessions,json=standbySessions,proto3" json:"standby_sessions,omitempty"`
	PeakActiveSessions   uint32   `protobuf:"varint,59,opt,name=peak_active_sessions,json=peakActiveSessions,proto3" json:"peak_active_sessions,omitempty"`
	PeakStandbySessions  uint32   `protobuf:"varint,60,opt,name=peak_standby_sessions,json=peakStandbySessions,proto3" json:"peak_standby_sessions,omitempty"`
	PeakStartTime        uint32   `protobuf:"varint,61,opt,name=peak_start_time,json=peakStartTime,proto3" json:"peak_start_time,omitempty"`
	TimeoutValue         uint32   `protobuf:"varint,62,opt,name=timeout_value,json=timeoutValue,proto3" json:"timeout_value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ShowSessionmonStat) Reset()         { *m = ShowSessionmonStat{} }
func (m *ShowSessionmonStat) String() string { return proto.CompactTextString(m) }
func (*ShowSessionmonStat) ProtoMessage()    {}
func (*ShowSessionmonStat) Descriptor() ([]byte, []int) {
	return fileDescriptor_a4cd1a2f7ea829df, []int{1}
}

func (m *ShowSessionmonStat) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ShowSessionmonStat.Unmarshal(m, b)
}
func (m *ShowSessionmonStat) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ShowSessionmonStat.Marshal(b, m, deterministic)
}
func (m *ShowSessionmonStat) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ShowSessionmonStat.Merge(m, src)
}
func (m *ShowSessionmonStat) XXX_Size() int {
	return xxx_messageInfo_ShowSessionmonStat.Size(m)
}
func (m *ShowSessionmonStat) XXX_DiscardUnknown() {
	xxx_messageInfo_ShowSessionmonStat.DiscardUnknown(m)
}

var xxx_messageInfo_ShowSessionmonStat proto.InternalMessageInfo

func (m *ShowSessionmonStat) GetTotal() uint32 {
	if m != nil {
		return m.Total
	}
	return 0
}

func (m *ShowSessionmonStat) GetPppoe() uint32 {
	if m != nil {
		return m.Pppoe
	}
	return 0
}

func (m *ShowSessionmonStat) GetPppoeDs() uint32 {
	if m != nil {
		return m.PppoeDs
	}
	return 0
}

func (m *ShowSessionmonStat) GetDhcpv4() uint32 {
	if m != nil {
		return m.Dhcpv4
	}
	return 0
}

func (m *ShowSessionmonStat) GetDhcpv6() uint32 {
	if m != nil {
		return m.Dhcpv6
	}
	return 0
}

func (m *ShowSessionmonStat) GetDhcpDs() uint32 {
	if m != nil {
		return m.DhcpDs
	}
	return 0
}

func (m *ShowSessionmonStat) GetIppkt() uint32 {
	if m != nil {
		return m.Ippkt
	}
	return 0
}

func (m *ShowSessionmonStat) GetActiveSessions() uint32 {
	if m != nil {
		return m.ActiveSessions
	}
	return 0
}

func (m *ShowSessionmonStat) GetStandbySessions() uint32 {
	if m != nil {
		return m.StandbySessions
	}
	return 0
}

func (m *ShowSessionmonStat) GetPeakActiveSessions() uint32 {
	if m != nil {
		return m.PeakActiveSessions
	}
	return 0
}

func (m *ShowSessionmonStat) GetPeakStandbySessions() uint32 {
	if m != nil {
		return m.PeakStandbySessions
	}
	return 0
}

func (m *ShowSessionmonStat) GetPeakStartTime() uint32 {
	if m != nil {
		return m.PeakStartTime
	}
	return 0
}

func (m *ShowSessionmonStat) GetTimeoutValue() uint32 {
	if m != nil {
		return m.TimeoutValue
	}
	return 0
}

func init() {
	proto.RegisterType((*ShowSessionmonStat_KEYS)(nil), "cisco_ios_xr_subscriber_session_mon_oper.session_mon.nodes.node.session_mon_statistics.show_sessionmon_stat_KEYS")
	proto.RegisterType((*ShowSessionmonStat)(nil), "cisco_ios_xr_subscriber_session_mon_oper.session_mon.nodes.node.session_mon_statistics.show_sessionmon_stat")
}

func init() { proto.RegisterFile("show_sessionmon_stat.proto", fileDescriptor_a4cd1a2f7ea829df) }

var fileDescriptor_a4cd1a2f7ea829df = []byte{
	// 350 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x92, 0x4d, 0x4b, 0x7a, 0x41,
	0x14, 0xc6, 0x91, 0x3f, 0x7f, 0xad, 0x21, 0x33, 0x26, 0xab, 0xb1, 0x95, 0x18, 0x94, 0x6d, 0x24,
	0xd4, 0xec, 0x3d, 0x08, 0x6c, 0x11, 0xed, 0x34, 0x84, 0x56, 0xc3, 0x7d, 0x19, 0x70, 0x50, 0xef,
	0x0c, 0x73, 0x8e, 0x56, 0x9f, 0xaf, 0x2f, 0x16, 0x73, 0xee, 0xf5, 0x25, 0x73, 0x73, 0x99, 0xe7,
	0xf7, 0x3c, 0xe7, 0x3c, 0x67, 0x71, 0xd9, 0x31, 0x0c, 0xcd, 0x87, 0x04, 0x05, 0xa0, 0x4d, 0x32,
	0x31, 0x89, 0x04, 0x0c, 0xb0, 0x61, 0x9d, 0x41, 0xc3, 0x07, 0x91, 0x86, 0xc8, 0x48, 0x6d, 0x40,
	0x7e, 0x3a, 0x09, 0xd3, 0x10, 0x22, 0xa7, 0x43, 0xe5, 0xe6, 0x71, 0xe9, 0xf3, 0xc6, 0x2a, 0xd7,
	0x58, 0x01, 0x8d, 0xc4, 0xc4, 0x0a, 0xe8, 0xbb, 0x8a, 0x69, 0xaf, 0x06, 0xd4, 0x11, 0xd4, 0xda,
	0xac, 0xb2, 0xa9, 0x55, 0xbe, 0x3e, 0xbf, 0xf7, 0xf9, 0x11, 0x2b, 0xf8, 0x59, 0xa9, 0x63, 0x91,
	0xab, 0xe6, 0xea, 0xdb, 0xbd, 0xbc, 0x97, 0x2f, 0x71, 0xed, 0xfb, 0x1f, 0x2b, 0x6f, 0x1a, 0xe3,
	0x65, 0xf6, 0x1f, 0x0d, 0x06, 0x63, 0xd1, 0xac, 0xe6, 0xea, 0xc5, 0x5e, 0x2a, 0x3c, 0xb5, 0xd6,
	0x1a, 0x25, 0x5a, 0x29, 0x25, 0xc1, 0x2b, 0x6c, 0x8b, 0x1e, 0x32, 0x06, 0xd1, 0x26, 0xa3, 0x40,
	0xba, 0x0b, 0xfc, 0x90, 0xe5, 0xe3, 0x61, 0x64, 0x67, 0x6d, 0x71, 0x49, 0x46, 0xa6, 0x16, 0xbc,
	0x23, 0x3a, 0x2b, 0xbc, 0xe3, 0x0f, 0xf5, 0x2f, 0xbf, 0xe9, 0x6a, 0x69, 0x74, 0xc1, 0x37, 0x6b,
	0x6b, 0x47, 0x28, 0xae, 0xd3, 0x66, 0x12, 0xfc, 0x8c, 0x95, 0x82, 0x08, 0xf5, 0x4c, 0xcd, 0xef,
	0x07, 0x71, 0x43, 0xfe, 0x6e, 0x8a, 0xfb, 0x19, 0xe5, 0xe7, 0x6c, 0x0f, 0x30, 0x48, 0xe2, 0xf0,
	0x6b, 0x99, 0xbc, 0xa5, 0x64, 0x29, 0xe3, 0x8b, 0xe8, 0x05, 0x2b, 0x5b, 0x15, 0x8c, 0xe4, 0xfa,
	0xe2, 0x3b, 0x8a, 0x73, 0xef, 0x3d, 0xfd, 0x5e, 0xde, 0x64, 0x07, 0x34, 0xf1, 0xa7, 0xe1, 0x9e,
	0x46, 0xf6, 0xbd, 0xd9, 0x5f, 0x6b, 0x39, 0x65, 0xa5, 0xf9, 0x8c, 0x43, 0x89, 0x7a, 0xa2, 0xc4,
	0x03, 0xa5, 0x8b, 0x59, 0xda, 0xe1, 0x9b, 0x9e, 0x28, 0x7e, 0xc2, 0x8a, 0xde, 0x34, 0x53, 0x94,
	0xb3, 0x60, 0x3c, 0x55, 0xe2, 0x91, 0x52, 0x3b, 0x19, 0x1c, 0x78, 0x16, 0xe6, 0xe9, 0xd7, 0x6a,
	0xfd, 0x04, 0x00, 0x00, 0xff, 0xff, 0x32, 0xa4, 0xa6, 0xd4, 0x78, 0x02, 0x00, 0x00,
}
