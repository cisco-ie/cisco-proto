/*
Copyright 2019 Cisco Systems

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: cfgcommitlist_d_entry.proto

package cisco_ios_xr_config_cfgmgr_exec_oper_config_manager_global_config_commit_commits_commit

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type CfgcommitlistDEntry_KEYS struct {
	Commit               string   `protobuf:"bytes,1,opt,name=commit,proto3" json:"commit,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CfgcommitlistDEntry_KEYS) Reset()         { *m = CfgcommitlistDEntry_KEYS{} }
func (m *CfgcommitlistDEntry_KEYS) String() string { return proto.CompactTextString(m) }
func (*CfgcommitlistDEntry_KEYS) ProtoMessage()    {}
func (*CfgcommitlistDEntry_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_ce69b8f916021d1b, []int{0}
}

func (m *CfgcommitlistDEntry_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CfgcommitlistDEntry_KEYS.Unmarshal(m, b)
}
func (m *CfgcommitlistDEntry_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CfgcommitlistDEntry_KEYS.Marshal(b, m, deterministic)
}
func (m *CfgcommitlistDEntry_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CfgcommitlistDEntry_KEYS.Merge(m, src)
}
func (m *CfgcommitlistDEntry_KEYS) XXX_Size() int {
	return xxx_messageInfo_CfgcommitlistDEntry_KEYS.Size(m)
}
func (m *CfgcommitlistDEntry_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_CfgcommitlistDEntry_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_CfgcommitlistDEntry_KEYS proto.InternalMessageInfo

func (m *CfgcommitlistDEntry_KEYS) GetCommit() string {
	if m != nil {
		return m.Commit
	}
	return ""
}

type CfgcommitlistDEntry struct {
	Timestamp            string   `protobuf:"bytes,50,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	CommitId             string   `protobuf:"bytes,51,opt,name=commit_id,json=commitId,proto3" json:"commit_id,omitempty"`
	UserId               string   `protobuf:"bytes,52,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Line                 string   `protobuf:"bytes,53,opt,name=line,proto3" json:"line,omitempty"`
	ClientName           string   `protobuf:"bytes,54,opt,name=client_name,json=clientName,proto3" json:"client_name,omitempty"`
	Label                string   `protobuf:"bytes,55,opt,name=label,proto3" json:"label,omitempty"`
	Comment              string   `protobuf:"bytes,56,opt,name=comment,proto3" json:"comment,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CfgcommitlistDEntry) Reset()         { *m = CfgcommitlistDEntry{} }
func (m *CfgcommitlistDEntry) String() string { return proto.CompactTextString(m) }
func (*CfgcommitlistDEntry) ProtoMessage()    {}
func (*CfgcommitlistDEntry) Descriptor() ([]byte, []int) {
	return fileDescriptor_ce69b8f916021d1b, []int{1}
}

func (m *CfgcommitlistDEntry) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CfgcommitlistDEntry.Unmarshal(m, b)
}
func (m *CfgcommitlistDEntry) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CfgcommitlistDEntry.Marshal(b, m, deterministic)
}
func (m *CfgcommitlistDEntry) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CfgcommitlistDEntry.Merge(m, src)
}
func (m *CfgcommitlistDEntry) XXX_Size() int {
	return xxx_messageInfo_CfgcommitlistDEntry.Size(m)
}
func (m *CfgcommitlistDEntry) XXX_DiscardUnknown() {
	xxx_messageInfo_CfgcommitlistDEntry.DiscardUnknown(m)
}

var xxx_messageInfo_CfgcommitlistDEntry proto.InternalMessageInfo

func (m *CfgcommitlistDEntry) GetTimestamp() string {
	if m != nil {
		return m.Timestamp
	}
	return ""
}

func (m *CfgcommitlistDEntry) GetCommitId() string {
	if m != nil {
		return m.CommitId
	}
	return ""
}

func (m *CfgcommitlistDEntry) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *CfgcommitlistDEntry) GetLine() string {
	if m != nil {
		return m.Line
	}
	return ""
}

func (m *CfgcommitlistDEntry) GetClientName() string {
	if m != nil {
		return m.ClientName
	}
	return ""
}

func (m *CfgcommitlistDEntry) GetLabel() string {
	if m != nil {
		return m.Label
	}
	return ""
}

func (m *CfgcommitlistDEntry) GetComment() string {
	if m != nil {
		return m.Comment
	}
	return ""
}

func init() {
	proto.RegisterType((*CfgcommitlistDEntry_KEYS)(nil), "cisco_ios_xr_config_cfgmgr_exec_oper.config_manager.global.config_commit.commits.commit.cfgcommitlist_d_entry_KEYS")
	proto.RegisterType((*CfgcommitlistDEntry)(nil), "cisco_ios_xr_config_cfgmgr_exec_oper.config_manager.global.config_commit.commits.commit.cfgcommitlist_d_entry")
}

func init() { proto.RegisterFile("cfgcommitlist_d_entry.proto", fileDescriptor_ce69b8f916021d1b) }

var fileDescriptor_ce69b8f916021d1b = []byte{
	// 259 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x90, 0xcb, 0x4a, 0xc4, 0x30,
	0x14, 0x86, 0x29, 0xe8, 0x8c, 0x3d, 0xee, 0x82, 0x97, 0xe0, 0x08, 0xca, 0xac, 0x5c, 0x75, 0xe1,
	0x8c, 0x97, 0x17, 0x70, 0x31, 0x08, 0x2e, 0x74, 0x21, 0xae, 0x0e, 0x69, 0x7a, 0x1a, 0x02, 0xb9,
	0x94, 0x24, 0xc2, 0xf8, 0x96, 0x3e, 0x92, 0x34, 0xe9, 0xe0, 0xa6, 0xab, 0xd3, 0xff, 0xfb, 0xf8,
	0xfb, 0x43, 0x60, 0x25, 0x7b, 0x25, 0xbd, 0xb5, 0x3a, 0x19, 0x1d, 0x13, 0x76, 0x48, 0x2e, 0x85,
	0x9f, 0x66, 0x08, 0x3e, 0x79, 0xf6, 0x29, 0x75, 0x94, 0x1e, 0xb5, 0x8f, 0xb8, 0x0f, 0x28, 0xbd,
	0xeb, 0xb5, 0x42, 0xd9, 0x2b, 0xab, 0x02, 0xd2, 0x9e, 0x24, 0xfa, 0x81, 0x42, 0x33, 0x71, 0x2b,
	0x9c, 0x50, 0x14, 0x1a, 0x65, 0x7c, 0x2b, 0xcc, 0x81, 0x96, 0x7f, 0x37, 0xe5, 0xc4, 0xe9, 0xae,
	0xb7, 0x70, 0x35, 0xbb, 0x8b, 0xaf, 0x2f, 0x5f, 0x1f, 0xec, 0x02, 0x16, 0x45, 0xf1, 0xea, 0xb6,
	0xba, 0xab, 0xdf, 0xa7, 0xb4, 0xfe, 0xad, 0xe0, 0x7c, 0xb6, 0xc6, 0xae, 0xa1, 0x4e, 0xda, 0x52,
	0x4c, 0xc2, 0x0e, 0xfc, 0x3e, 0x97, 0xfe, 0x01, 0x5b, 0x41, 0x5d, 0x3a, 0xa8, 0x3b, 0xbe, 0xc9,
	0xf6, 0xa4, 0x80, 0x5d, 0xc7, 0x2e, 0x61, 0xf9, 0x1d, 0x29, 0x8c, 0x6a, 0x5b, 0xd6, 0xc6, 0xb8,
	0xeb, 0x18, 0x83, 0x23, 0xa3, 0x1d, 0xf1, 0x87, 0x4c, 0xf3, 0x37, 0xbb, 0x81, 0x53, 0x69, 0x34,
	0xb9, 0x84, 0x4e, 0x58, 0xe2, 0x8f, 0x59, 0x41, 0x41, 0x6f, 0xc2, 0x12, 0x3b, 0x83, 0x63, 0x23,
	0x5a, 0x32, 0xfc, 0x29, 0xab, 0x12, 0x18, 0x87, 0xe5, 0xb8, 0x47, 0x2e, 0xf1, 0xe7, 0xcc, 0x0f,
	0xb1, 0x5d, 0xe4, 0x87, 0xde, 0xfc, 0x05, 0x00, 0x00, 0xff, 0xff, 0xe8, 0xbf, 0x59, 0x47, 0x87,
	0x01, 0x00, 0x00,
}
