/*
Copyright 2019 Cisco Systems

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: eigrp_show_traffic_bd.proto

package cisco_ios_xr_eigrp_oper_eigrp_processes_process_vrfs_vrf_afs_af_ases_as_eigrp_traffic

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type EigrpShowTrafficBd_KEYS struct {
	ProcessId            string   `protobuf:"bytes,1,opt,name=process_id,json=processId,proto3" json:"process_id,omitempty"`
	VrfName              string   `protobuf:"bytes,2,opt,name=vrf_name,json=vrfName,proto3" json:"vrf_name,omitempty"`
	AfName               string   `protobuf:"bytes,3,opt,name=af_name,json=afName,proto3" json:"af_name,omitempty"`
	Asn                  uint32   `protobuf:"varint,4,opt,name=asn,proto3" json:"asn,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EigrpShowTrafficBd_KEYS) Reset()         { *m = EigrpShowTrafficBd_KEYS{} }
func (m *EigrpShowTrafficBd_KEYS) String() string { return proto.CompactTextString(m) }
func (*EigrpShowTrafficBd_KEYS) ProtoMessage()    {}
func (*EigrpShowTrafficBd_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_38f0c179323ae9f7, []int{0}
}

func (m *EigrpShowTrafficBd_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EigrpShowTrafficBd_KEYS.Unmarshal(m, b)
}
func (m *EigrpShowTrafficBd_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EigrpShowTrafficBd_KEYS.Marshal(b, m, deterministic)
}
func (m *EigrpShowTrafficBd_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EigrpShowTrafficBd_KEYS.Merge(m, src)
}
func (m *EigrpShowTrafficBd_KEYS) XXX_Size() int {
	return xxx_messageInfo_EigrpShowTrafficBd_KEYS.Size(m)
}
func (m *EigrpShowTrafficBd_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_EigrpShowTrafficBd_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_EigrpShowTrafficBd_KEYS proto.InternalMessageInfo

func (m *EigrpShowTrafficBd_KEYS) GetProcessId() string {
	if m != nil {
		return m.ProcessId
	}
	return ""
}

func (m *EigrpShowTrafficBd_KEYS) GetVrfName() string {
	if m != nil {
		return m.VrfName
	}
	return ""
}

func (m *EigrpShowTrafficBd_KEYS) GetAfName() string {
	if m != nil {
		return m.AfName
	}
	return ""
}

func (m *EigrpShowTrafficBd_KEYS) GetAsn() uint32 {
	if m != nil {
		return m.Asn
	}
	return 0
}

type EigrpShowTrafficBd struct {
	Afi                  uint32   `protobuf:"varint,50,opt,name=afi,proto3" json:"afi,omitempty"`
	AsNumber             uint32   `protobuf:"varint,51,opt,name=as_number,json=asNumber,proto3" json:"as_number,omitempty"`
	HellosSent           uint32   `protobuf:"varint,52,opt,name=hellos_sent,json=hellosSent,proto3" json:"hellos_sent,omitempty"`
	HellosReceived       uint32   `protobuf:"varint,53,opt,name=hellos_received,json=hellosReceived,proto3" json:"hellos_received,omitempty"`
	UpdatesSent          uint32   `protobuf:"varint,54,opt,name=updates_sent,json=updatesSent,proto3" json:"updates_sent,omitempty"`
	UpdatesReceived      uint32   `protobuf:"varint,55,opt,name=updates_received,json=updatesReceived,proto3" json:"updates_received,omitempty"`
	QueriesSent          uint32   `protobuf:"varint,56,opt,name=queries_sent,json=queriesSent,proto3" json:"queries_sent,omitempty"`
	QueriesReceived      uint32   `protobuf:"varint,57,opt,name=queries_received,json=queriesReceived,proto3" json:"queries_received,omitempty"`
	RepliesSent          uint32   `protobuf:"varint,58,opt,name=replies_sent,json=repliesSent,proto3" json:"replies_sent,omitempty"`
	RepliesReceived      uint32   `protobuf:"varint,59,opt,name=replies_received,json=repliesReceived,proto3" json:"replies_received,omitempty"`
	AcksSent             uint32   `protobuf:"varint,60,opt,name=acks_sent,json=acksSent,proto3" json:"acks_sent,omitempty"`
	AcksReceived         uint32   `protobuf:"varint,61,opt,name=acks_received,json=acksReceived,proto3" json:"acks_received,omitempty"`
	SiaQueriesSent       uint32   `protobuf:"varint,62,opt,name=sia_queries_sent,json=siaQueriesSent,proto3" json:"sia_queries_sent,omitempty"`
	SiaQueriesReceived   uint32   `protobuf:"varint,63,opt,name=sia_queries_received,json=siaQueriesReceived,proto3" json:"sia_queries_received,omitempty"`
	SiaRepliesSent       uint32   `protobuf:"varint,64,opt,name=sia_replies_sent,json=siaRepliesSent,proto3" json:"sia_replies_sent,omitempty"`
	SiaRepliesReceived   uint32   `protobuf:"varint,65,opt,name=sia_replies_received,json=siaRepliesReceived,proto3" json:"sia_replies_received,omitempty"`
	MaxQueueDepth        uint32   `protobuf:"varint,66,opt,name=max_queue_depth,json=maxQueueDepth,proto3" json:"max_queue_depth,omitempty"`
	QueueDrops           uint32   `protobuf:"varint,67,opt,name=queue_drops,json=queueDrops,proto3" json:"queue_drops,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EigrpShowTrafficBd) Reset()         { *m = EigrpShowTrafficBd{} }
func (m *EigrpShowTrafficBd) String() string { return proto.CompactTextString(m) }
func (*EigrpShowTrafficBd) ProtoMessage()    {}
func (*EigrpShowTrafficBd) Descriptor() ([]byte, []int) {
	return fileDescriptor_38f0c179323ae9f7, []int{1}
}

func (m *EigrpShowTrafficBd) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EigrpShowTrafficBd.Unmarshal(m, b)
}
func (m *EigrpShowTrafficBd) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EigrpShowTrafficBd.Marshal(b, m, deterministic)
}
func (m *EigrpShowTrafficBd) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EigrpShowTrafficBd.Merge(m, src)
}
func (m *EigrpShowTrafficBd) XXX_Size() int {
	return xxx_messageInfo_EigrpShowTrafficBd.Size(m)
}
func (m *EigrpShowTrafficBd) XXX_DiscardUnknown() {
	xxx_messageInfo_EigrpShowTrafficBd.DiscardUnknown(m)
}

var xxx_messageInfo_EigrpShowTrafficBd proto.InternalMessageInfo

func (m *EigrpShowTrafficBd) GetAfi() uint32 {
	if m != nil {
		return m.Afi
	}
	return 0
}

func (m *EigrpShowTrafficBd) GetAsNumber() uint32 {
	if m != nil {
		return m.AsNumber
	}
	return 0
}

func (m *EigrpShowTrafficBd) GetHellosSent() uint32 {
	if m != nil {
		return m.HellosSent
	}
	return 0
}

func (m *EigrpShowTrafficBd) GetHellosReceived() uint32 {
	if m != nil {
		return m.HellosReceived
	}
	return 0
}

func (m *EigrpShowTrafficBd) GetUpdatesSent() uint32 {
	if m != nil {
		return m.UpdatesSent
	}
	return 0
}

func (m *EigrpShowTrafficBd) GetUpdatesReceived() uint32 {
	if m != nil {
		return m.UpdatesReceived
	}
	return 0
}

func (m *EigrpShowTrafficBd) GetQueriesSent() uint32 {
	if m != nil {
		return m.QueriesSent
	}
	return 0
}

func (m *EigrpShowTrafficBd) GetQueriesReceived() uint32 {
	if m != nil {
		return m.QueriesReceived
	}
	return 0
}

func (m *EigrpShowTrafficBd) GetRepliesSent() uint32 {
	if m != nil {
		return m.RepliesSent
	}
	return 0
}

func (m *EigrpShowTrafficBd) GetRepliesReceived() uint32 {
	if m != nil {
		return m.RepliesReceived
	}
	return 0
}

func (m *EigrpShowTrafficBd) GetAcksSent() uint32 {
	if m != nil {
		return m.AcksSent
	}
	return 0
}

func (m *EigrpShowTrafficBd) GetAcksReceived() uint32 {
	if m != nil {
		return m.AcksReceived
	}
	return 0
}

func (m *EigrpShowTrafficBd) GetSiaQueriesSent() uint32 {
	if m != nil {
		return m.SiaQueriesSent
	}
	return 0
}

func (m *EigrpShowTrafficBd) GetSiaQueriesReceived() uint32 {
	if m != nil {
		return m.SiaQueriesReceived
	}
	return 0
}

func (m *EigrpShowTrafficBd) GetSiaRepliesSent() uint32 {
	if m != nil {
		return m.SiaRepliesSent
	}
	return 0
}

func (m *EigrpShowTrafficBd) GetSiaRepliesReceived() uint32 {
	if m != nil {
		return m.SiaRepliesReceived
	}
	return 0
}

func (m *EigrpShowTrafficBd) GetMaxQueueDepth() uint32 {
	if m != nil {
		return m.MaxQueueDepth
	}
	return 0
}

func (m *EigrpShowTrafficBd) GetQueueDrops() uint32 {
	if m != nil {
		return m.QueueDrops
	}
	return 0
}

func init() {
	proto.RegisterType((*EigrpShowTrafficBd_KEYS)(nil), "cisco_ios_xr_eigrp_oper.eigrp.processes.process.vrfs.vrf.afs.af.ases.as.eigrp_traffic.eigrp_show_traffic_bd_KEYS")
	proto.RegisterType((*EigrpShowTrafficBd)(nil), "cisco_ios_xr_eigrp_oper.eigrp.processes.process.vrfs.vrf.afs.af.ases.as.eigrp_traffic.eigrp_show_traffic_bd")
}

func init() { proto.RegisterFile("eigrp_show_traffic_bd.proto", fileDescriptor_38f0c179323ae9f7) }

var fileDescriptor_38f0c179323ae9f7 = []byte{
	// 460 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x93, 0x5b, 0x6f, 0xd3, 0x30,
	0x14, 0x80, 0x55, 0x06, 0xdb, 0x7a, 0xb6, 0xd2, 0xca, 0x02, 0x61, 0x98, 0x10, 0x63, 0x48, 0x50,
	0x5e, 0x22, 0xc4, 0xb8, 0xdf, 0x2f, 0xe3, 0x01, 0x21, 0x4d, 0x5a, 0x26, 0x1e, 0x78, 0xb2, 0xdc,
	0xe4, 0x98, 0x5a, 0x6b, 0x2e, 0xd8, 0x69, 0xe8, 0x2b, 0x3f, 0x8c, 0xff, 0x86, 0x7c, 0xec, 0x98,
	0xec, 0xf2, 0x52, 0xb9, 0xdf, 0xf9, 0xf4, 0x35, 0xc7, 0x4a, 0x61, 0x07, 0xf5, 0x4f, 0x53, 0x0b,
	0x3b, 0xaf, 0x7e, 0x8b, 0xc6, 0x48, 0xa5, 0x74, 0x26, 0x66, 0x79, 0x52, 0x9b, 0xaa, 0xa9, 0xd8,
	0xf7, 0x4c, 0xdb, 0xac, 0x12, 0xba, 0xb2, 0x62, 0x65, 0x84, 0x37, 0xab, 0x1a, 0x4d, 0x42, 0x47,
	0x27, 0x65, 0x68, 0x2d, 0xda, 0xee, 0x94, 0xb4, 0x46, 0xd1, 0x47, 0x22, 0x95, 0x4d, 0xa4, 0x4a,
	0xa4, 0x1b, 0x4a, 0xeb, 0xfd, 0xae, 0xbf, 0xf7, 0x67, 0x00, 0xb7, 0x2e, 0xfc, 0x59, 0xf1, 0xed,
	0xcb, 0x8f, 0x63, 0x76, 0x1b, 0x20, 0xf4, 0x84, 0xce, 0xf9, 0x60, 0x77, 0x30, 0x1d, 0xa6, 0xc3,
	0x40, 0xbe, 0xe6, 0xec, 0x26, 0x6c, 0xb6, 0x46, 0x89, 0x52, 0x16, 0xc8, 0x2f, 0xd1, 0x70, 0xa3,
	0x35, 0xea, 0x50, 0x16, 0xc8, 0x6e, 0xc0, 0x86, 0x0c, 0x93, 0x35, 0x9a, 0xac, 0x4b, 0x3f, 0x98,
	0xc0, 0x9a, 0xb4, 0x25, 0xbf, 0xbc, 0x3b, 0x98, 0x8e, 0x52, 0x77, 0xdc, 0xfb, 0x7b, 0x05, 0xae,
	0x5f, 0xf8, 0x0c, 0xe4, 0x2a, 0xcd, 0x1f, 0x07, 0x57, 0x69, 0xb6, 0x03, 0x43, 0x69, 0x45, 0xb9,
	0x2c, 0x66, 0x68, 0xf8, 0x3e, 0xf1, 0x4d, 0x69, 0x0f, 0xe9, 0x3b, 0xbb, 0x03, 0x5b, 0x73, 0x5c,
	0x2c, 0x2a, 0x2b, 0x2c, 0x96, 0x0d, 0x7f, 0x42, 0x63, 0xf0, 0xe8, 0x18, 0xcb, 0x86, 0x3d, 0x80,
	0x71, 0x10, 0x0c, 0x66, 0xa8, 0x5b, 0xcc, 0xf9, 0x53, 0x92, 0xae, 0x7a, 0x9c, 0x06, 0xca, 0xee,
	0xc2, 0xf6, 0xb2, 0xce, 0x65, 0x83, 0x21, 0xf5, 0x8c, 0xac, 0xad, 0xc0, 0xa8, 0xf5, 0x10, 0x26,
	0x9d, 0x12, 0x63, 0xcf, 0x49, 0x1b, 0x07, 0xde, 0xaf, 0xfd, 0x5a, 0xa2, 0xd1, 0x5d, 0xed, 0x85,
	0xaf, 0x05, 0xd6, 0xd5, 0x3a, 0x25, 0xd6, 0x5e, 0xfa, 0x5a, 0xe0, 0xfd, 0x9a, 0xc1, 0x7a, 0x11,
	0x6b, 0xaf, 0x7c, 0x2d, 0xb0, 0xae, 0xd6, 0x29, 0xb1, 0xf6, 0xda, 0xd7, 0x02, 0x8f, 0x35, 0x77,
	0xa1, 0xd9, 0x49, 0x48, 0xbd, 0x09, 0x17, 0x9a, 0x9d, 0xf8, 0xce, 0x3d, 0x18, 0xd1, 0x30, 0x46,
	0xde, 0x92, 0xb0, 0xed, 0x60, 0x2c, 0x4c, 0x61, 0x62, 0xb5, 0x14, 0xa7, 0x36, 0x7c, 0xe7, 0x6f,
	0xd5, 0x6a, 0x79, 0xd4, 0x5b, 0xf2, 0x11, 0x5c, 0xeb, 0x9b, 0xb1, 0xfa, 0x9e, 0x6c, 0xf6, 0xdf,
	0x3e, 0xdb, 0x3e, 0xb5, 0xef, 0x87, 0xd8, 0x4e, 0x7b, 0x2b, 0x87, 0xf6, 0xb9, 0xb5, 0x3f, 0xc6,
	0x76, 0x7a, 0x66, 0xf3, 0xfb, 0x30, 0x2e, 0xe4, 0xca, 0x3d, 0xcd, 0x12, 0x45, 0x8e, 0x75, 0x33,
	0xe7, 0x9f, 0x48, 0x1e, 0x15, 0x72, 0x75, 0xe4, 0xe8, 0x81, 0x83, 0xee, 0xad, 0x0a, 0x8e, 0xa9,
	0x6a, 0xcb, 0x3f, 0xfb, 0xb7, 0x8a, 0xd0, 0x81, 0x23, 0xb3, 0x75, 0xfa, 0x87, 0xee, 0xff, 0x0b,
	0x00, 0x00, 0xff, 0xff, 0xd7, 0x6c, 0xbe, 0x52, 0xc0, 0x03, 0x00, 0x00,
}
