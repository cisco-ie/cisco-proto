/*
Copyright 2019 Cisco Systems

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: eigrp_show_events_bd.proto

package cisco_ios_xr_eigrp_oper_eigrp_processes_process_vrfs_vrf_afs_af_ases_as_eigrp_events

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type EigrpShowEventsBd_KEYS struct {
	ProcessId            string   `protobuf:"bytes,1,opt,name=process_id,json=processId,proto3" json:"process_id,omitempty"`
	VrfName              string   `protobuf:"bytes,2,opt,name=vrf_name,json=vrfName,proto3" json:"vrf_name,omitempty"`
	AfName               string   `protobuf:"bytes,3,opt,name=af_name,json=afName,proto3" json:"af_name,omitempty"`
	Asn                  uint32   `protobuf:"varint,4,opt,name=asn,proto3" json:"asn,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EigrpShowEventsBd_KEYS) Reset()         { *m = EigrpShowEventsBd_KEYS{} }
func (m *EigrpShowEventsBd_KEYS) String() string { return proto.CompactTextString(m) }
func (*EigrpShowEventsBd_KEYS) ProtoMessage()    {}
func (*EigrpShowEventsBd_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_509f5aa65eec0a17, []int{0}
}

func (m *EigrpShowEventsBd_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EigrpShowEventsBd_KEYS.Unmarshal(m, b)
}
func (m *EigrpShowEventsBd_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EigrpShowEventsBd_KEYS.Marshal(b, m, deterministic)
}
func (m *EigrpShowEventsBd_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EigrpShowEventsBd_KEYS.Merge(m, src)
}
func (m *EigrpShowEventsBd_KEYS) XXX_Size() int {
	return xxx_messageInfo_EigrpShowEventsBd_KEYS.Size(m)
}
func (m *EigrpShowEventsBd_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_EigrpShowEventsBd_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_EigrpShowEventsBd_KEYS proto.InternalMessageInfo

func (m *EigrpShowEventsBd_KEYS) GetProcessId() string {
	if m != nil {
		return m.ProcessId
	}
	return ""
}

func (m *EigrpShowEventsBd_KEYS) GetVrfName() string {
	if m != nil {
		return m.VrfName
	}
	return ""
}

func (m *EigrpShowEventsBd_KEYS) GetAfName() string {
	if m != nil {
		return m.AfName
	}
	return ""
}

func (m *EigrpShowEventsBd_KEYS) GetAsn() uint32 {
	if m != nil {
		return m.Asn
	}
	return 0
}

type EigrpShowEventsBd struct {
	Afi                           uint32   `protobuf:"varint,50,opt,name=afi,proto3" json:"afi,omitempty"`
	AsNumber                      uint32   `protobuf:"varint,51,opt,name=as_number,json=asNumber,proto3" json:"as_number,omitempty"`
	CurrentEventIndex             uint32   `protobuf:"varint,52,opt,name=current_event_index,json=currentEventIndex,proto3" json:"current_event_index,omitempty"`
	EigrpStartAbsoluteSeconds     uint32   `protobuf:"varint,53,opt,name=eigrp_start_absolute_seconds,json=eigrpStartAbsoluteSeconds,proto3" json:"eigrp_start_absolute_seconds,omitempty"`
	EigrpStartAbsoluteNanoseconds uint32   `protobuf:"varint,54,opt,name=eigrp_start_absolute_nanoseconds,json=eigrpStartAbsoluteNanoseconds,proto3" json:"eigrp_start_absolute_nanoseconds,omitempty"`
	EigrpStartRelativeSeconds     uint32   `protobuf:"varint,55,opt,name=eigrp_start_relative_seconds,json=eigrpStartRelativeSeconds,proto3" json:"eigrp_start_relative_seconds,omitempty"`
	EigrpStartRelativeNanoseconds uint32   `protobuf:"varint,56,opt,name=eigrp_start_relative_nanoseconds,json=eigrpStartRelativeNanoseconds,proto3" json:"eigrp_start_relative_nanoseconds,omitempty"`
	XXX_NoUnkeyedLiteral          struct{} `json:"-"`
	XXX_unrecognized              []byte   `json:"-"`
	XXX_sizecache                 int32    `json:"-"`
}

func (m *EigrpShowEventsBd) Reset()         { *m = EigrpShowEventsBd{} }
func (m *EigrpShowEventsBd) String() string { return proto.CompactTextString(m) }
func (*EigrpShowEventsBd) ProtoMessage()    {}
func (*EigrpShowEventsBd) Descriptor() ([]byte, []int) {
	return fileDescriptor_509f5aa65eec0a17, []int{1}
}

func (m *EigrpShowEventsBd) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EigrpShowEventsBd.Unmarshal(m, b)
}
func (m *EigrpShowEventsBd) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EigrpShowEventsBd.Marshal(b, m, deterministic)
}
func (m *EigrpShowEventsBd) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EigrpShowEventsBd.Merge(m, src)
}
func (m *EigrpShowEventsBd) XXX_Size() int {
	return xxx_messageInfo_EigrpShowEventsBd.Size(m)
}
func (m *EigrpShowEventsBd) XXX_DiscardUnknown() {
	xxx_messageInfo_EigrpShowEventsBd.DiscardUnknown(m)
}

var xxx_messageInfo_EigrpShowEventsBd proto.InternalMessageInfo

func (m *EigrpShowEventsBd) GetAfi() uint32 {
	if m != nil {
		return m.Afi
	}
	return 0
}

func (m *EigrpShowEventsBd) GetAsNumber() uint32 {
	if m != nil {
		return m.AsNumber
	}
	return 0
}

func (m *EigrpShowEventsBd) GetCurrentEventIndex() uint32 {
	if m != nil {
		return m.CurrentEventIndex
	}
	return 0
}

func (m *EigrpShowEventsBd) GetEigrpStartAbsoluteSeconds() uint32 {
	if m != nil {
		return m.EigrpStartAbsoluteSeconds
	}
	return 0
}

func (m *EigrpShowEventsBd) GetEigrpStartAbsoluteNanoseconds() uint32 {
	if m != nil {
		return m.EigrpStartAbsoluteNanoseconds
	}
	return 0
}

func (m *EigrpShowEventsBd) GetEigrpStartRelativeSeconds() uint32 {
	if m != nil {
		return m.EigrpStartRelativeSeconds
	}
	return 0
}

func (m *EigrpShowEventsBd) GetEigrpStartRelativeNanoseconds() uint32 {
	if m != nil {
		return m.EigrpStartRelativeNanoseconds
	}
	return 0
}

func init() {
	proto.RegisterType((*EigrpShowEventsBd_KEYS)(nil), "cisco_ios_xr_eigrp_oper.eigrp.processes.process.vrfs.vrf.afs.af.ases.as.eigrp_events.eigrp_show_events_bd_KEYS")
	proto.RegisterType((*EigrpShowEventsBd)(nil), "cisco_ios_xr_eigrp_oper.eigrp.processes.process.vrfs.vrf.afs.af.ases.as.eigrp_events.eigrp_show_events_bd")
}

func init() { proto.RegisterFile("eigrp_show_events_bd.proto", fileDescriptor_509f5aa65eec0a17) }

var fileDescriptor_509f5aa65eec0a17 = []byte{
	// 341 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x92, 0xcf, 0x4b, 0xc3, 0x30,
	0x14, 0xc7, 0xa9, 0x93, 0xfd, 0x08, 0x08, 0x1a, 0x05, 0x3b, 0x75, 0x30, 0x76, 0xda, 0xa9, 0x07,
	0xe7, 0xaf, 0x9b, 0x78, 0x18, 0x32, 0x84, 0x1d, 0x36, 0x2f, 0x9e, 0xc2, 0x6b, 0xfb, 0xa2, 0x81,
	0x2d, 0x19, 0x79, 0x59, 0xdd, 0xd1, 0xab, 0xff, 0xb5, 0x34, 0xcd, 0xdc, 0x98, 0xf3, 0x52, 0x5e,
	0xf3, 0xfd, 0xf4, 0xf3, 0xbe, 0x94, 0xb0, 0x0b, 0x54, 0xef, 0x76, 0x21, 0xe8, 0xc3, 0x7c, 0x0a,
	0x2c, 0x50, 0x3b, 0x12, 0x69, 0x9e, 0x2c, 0xac, 0x71, 0x86, 0xbf, 0x66, 0x8a, 0x32, 0x23, 0x94,
	0x21, 0xb1, 0xb2, 0xa2, 0x02, 0xcd, 0x02, 0x6d, 0xe2, 0xc7, 0x12, 0xca, 0x90, 0x08, 0x69, 0x3d,
	0x25, 0x85, 0x95, 0xfe, 0x91, 0x80, 0xa4, 0x04, 0x64, 0x02, 0x65, 0x08, 0x54, 0xf1, 0x41, 0xdf,
	0xfb, 0x8a, 0x58, 0x7b, 0xdf, 0x52, 0xf1, 0x32, 0x7c, 0x9b, 0xf2, 0x0e, 0x63, 0xc1, 0x26, 0x54,
	0x1e, 0x47, 0xdd, 0xa8, 0xdf, 0x9a, 0xb4, 0xc2, 0xc9, 0x28, 0xe7, 0x6d, 0xd6, 0x2c, 0xac, 0x14,
	0x1a, 0xe6, 0x18, 0x1f, 0xf8, 0xb0, 0x51, 0x58, 0x39, 0x86, 0x39, 0xf2, 0x73, 0xd6, 0x80, 0x90,
	0xd4, 0x7c, 0x52, 0x87, 0x2a, 0x38, 0x66, 0x35, 0x20, 0x1d, 0x1f, 0x76, 0xa3, 0xfe, 0xd1, 0xa4,
	0x1c, 0x7b, 0xdf, 0x35, 0x76, 0xb6, 0xaf, 0x82, 0x47, 0xa5, 0x8a, 0xaf, 0x03, 0x2a, 0x15, 0xbf,
	0x64, 0x2d, 0x20, 0xa1, 0x97, 0xf3, 0x14, 0x6d, 0x3c, 0xf0, 0xe7, 0x4d, 0xa0, 0xb1, 0x7f, 0xe7,
	0x09, 0x3b, 0xcd, 0x96, 0xd6, 0xa2, 0x76, 0x95, 0x43, 0x28, 0x9d, 0xe3, 0x2a, 0xbe, 0xf1, 0xd8,
	0x49, 0x88, 0x86, 0x65, 0x32, 0x2a, 0x03, 0xfe, 0xc8, 0xae, 0xc2, 0x5a, 0x07, 0xd6, 0x09, 0x48,
	0xc9, 0xcc, 0x96, 0x0e, 0x05, 0x61, 0x66, 0x74, 0x4e, 0xf1, 0xad, 0xff, 0xb0, 0xfa, 0x3b, 0xd3,
	0x12, 0x79, 0x0a, 0xc4, 0xb4, 0x02, 0xf8, 0x33, 0xeb, 0xee, 0x15, 0x68, 0xd0, 0x66, 0x2d, 0xb9,
	0xf3, 0x92, 0xce, 0x5f, 0xc9, 0x78, 0x03, 0xed, 0x36, 0xb1, 0x38, 0x03, 0xa7, 0x8a, 0x4d, 0x93,
	0xfb, 0xdd, 0x26, 0x93, 0x40, 0xfc, 0xd3, 0xe4, 0x57, 0xb0, 0xdd, 0xe4, 0x61, 0xb7, 0xc9, 0x5a,
	0xb2, 0xd5, 0x24, 0xad, 0xfb, 0xbb, 0x36, 0xf8, 0x09, 0x00, 0x00, 0xff, 0xff, 0xdd, 0x06, 0x7d,
	0x9d, 0x89, 0x02, 0x00, 0x00,
}
