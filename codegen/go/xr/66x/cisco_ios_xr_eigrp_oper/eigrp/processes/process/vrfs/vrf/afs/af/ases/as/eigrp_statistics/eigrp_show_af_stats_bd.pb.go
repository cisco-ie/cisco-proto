/*
Copyright 2019 Cisco Systems

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: eigrp_show_af_stats_bd.proto

package cisco_ios_xr_eigrp_oper_eigrp_processes_process_vrfs_vrf_afs_af_ases_as_eigrp_statistics

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type EigrpShowAfStatsBd_KEYS struct {
	ProcessId            string   `protobuf:"bytes,1,opt,name=process_id,json=processId,proto3" json:"process_id,omitempty"`
	VrfName              string   `protobuf:"bytes,2,opt,name=vrf_name,json=vrfName,proto3" json:"vrf_name,omitempty"`
	AfName               string   `protobuf:"bytes,3,opt,name=af_name,json=afName,proto3" json:"af_name,omitempty"`
	Asn                  uint32   `protobuf:"varint,4,opt,name=asn,proto3" json:"asn,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EigrpShowAfStatsBd_KEYS) Reset()         { *m = EigrpShowAfStatsBd_KEYS{} }
func (m *EigrpShowAfStatsBd_KEYS) String() string { return proto.CompactTextString(m) }
func (*EigrpShowAfStatsBd_KEYS) ProtoMessage()    {}
func (*EigrpShowAfStatsBd_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_2da0b315bd673adb, []int{0}
}

func (m *EigrpShowAfStatsBd_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EigrpShowAfStatsBd_KEYS.Unmarshal(m, b)
}
func (m *EigrpShowAfStatsBd_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EigrpShowAfStatsBd_KEYS.Marshal(b, m, deterministic)
}
func (m *EigrpShowAfStatsBd_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EigrpShowAfStatsBd_KEYS.Merge(m, src)
}
func (m *EigrpShowAfStatsBd_KEYS) XXX_Size() int {
	return xxx_messageInfo_EigrpShowAfStatsBd_KEYS.Size(m)
}
func (m *EigrpShowAfStatsBd_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_EigrpShowAfStatsBd_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_EigrpShowAfStatsBd_KEYS proto.InternalMessageInfo

func (m *EigrpShowAfStatsBd_KEYS) GetProcessId() string {
	if m != nil {
		return m.ProcessId
	}
	return ""
}

func (m *EigrpShowAfStatsBd_KEYS) GetVrfName() string {
	if m != nil {
		return m.VrfName
	}
	return ""
}

func (m *EigrpShowAfStatsBd_KEYS) GetAfName() string {
	if m != nil {
		return m.AfName
	}
	return ""
}

func (m *EigrpShowAfStatsBd_KEYS) GetAsn() uint32 {
	if m != nil {
		return m.Asn
	}
	return 0
}

type EigrpShowAfStatsBd struct {
	Afi                      uint32   `protobuf:"varint,50,opt,name=afi,proto3" json:"afi,omitempty"`
	AsNumber                 uint32   `protobuf:"varint,51,opt,name=as_number,json=asNumber,proto3" json:"as_number,omitempty"`
	ConfiguredInterfaceCount uint32   `protobuf:"varint,52,opt,name=configured_interface_count,json=configuredInterfaceCount,proto3" json:"configured_interface_count,omitempty"`
	ActiveInterfacesCount    uint32   `protobuf:"varint,53,opt,name=active_interfaces_count,json=activeInterfacesCount,proto3" json:"active_interfaces_count,omitempty"`
	ActivateCount            uint64   `protobuf:"varint,54,opt,name=activate_count,json=activateCount,proto3" json:"activate_count,omitempty"`
	ActivateError            uint64   `protobuf:"varint,55,opt,name=activate_error,json=activateError,proto3" json:"activate_error,omitempty"`
	ActivateLastError        int32    `protobuf:"zigzag32,56,opt,name=activate_last_error,json=activateLastError,proto3" json:"activate_last_error,omitempty"`
	DeactivateCount          uint64   `protobuf:"varint,57,opt,name=deactivate_count,json=deactivateCount,proto3" json:"deactivate_count,omitempty"`
	DeactivateError          uint64   `protobuf:"varint,58,opt,name=deactivate_error,json=deactivateError,proto3" json:"deactivate_error,omitempty"`
	DeactivateLastError      int32    `protobuf:"zigzag32,59,opt,name=deactivate_last_error,json=deactivateLastError,proto3" json:"deactivate_last_error,omitempty"`
	SocketSet                uint64   `protobuf:"varint,60,opt,name=socket_set,json=socketSet,proto3" json:"socket_set,omitempty"`
	SocketSetError           uint64   `protobuf:"varint,61,opt,name=socket_set_error,json=socketSetError,proto3" json:"socket_set_error,omitempty"`
	SockSetLastError         int32    `protobuf:"zigzag32,62,opt,name=sock_set_last_error,json=sockSetLastError,proto3" json:"sock_set_last_error,omitempty"`
	RawPacketIn              uint64   `protobuf:"varint,63,opt,name=raw_packet_in,json=rawPacketIn,proto3" json:"raw_packet_in,omitempty"`
	RawPacketInError         uint64   `protobuf:"varint,64,opt,name=raw_packet_in_error,json=rawPacketInError,proto3" json:"raw_packet_in_error,omitempty"`
	RawPacketInLastError     int32    `protobuf:"zigzag32,65,opt,name=raw_packet_in_last_error,json=rawPacketInLastError,proto3" json:"raw_packet_in_last_error,omitempty"`
	RawPacketOut             uint64   `protobuf:"varint,66,opt,name=raw_packet_out,json=rawPacketOut,proto3" json:"raw_packet_out,omitempty"`
	RawPacketOutError        uint64   `protobuf:"varint,67,opt,name=raw_packet_out_error,json=rawPacketOutError,proto3" json:"raw_packet_out_error,omitempty"`
	RawPacketOutLastError    int32    `protobuf:"zigzag32,68,opt,name=raw_packet_out_last_error,json=rawPacketOutLastError,proto3" json:"raw_packet_out_last_error,omitempty"`
	XXX_NoUnkeyedLiteral     struct{} `json:"-"`
	XXX_unrecognized         []byte   `json:"-"`
	XXX_sizecache            int32    `json:"-"`
}

func (m *EigrpShowAfStatsBd) Reset()         { *m = EigrpShowAfStatsBd{} }
func (m *EigrpShowAfStatsBd) String() string { return proto.CompactTextString(m) }
func (*EigrpShowAfStatsBd) ProtoMessage()    {}
func (*EigrpShowAfStatsBd) Descriptor() ([]byte, []int) {
	return fileDescriptor_2da0b315bd673adb, []int{1}
}

func (m *EigrpShowAfStatsBd) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EigrpShowAfStatsBd.Unmarshal(m, b)
}
func (m *EigrpShowAfStatsBd) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EigrpShowAfStatsBd.Marshal(b, m, deterministic)
}
func (m *EigrpShowAfStatsBd) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EigrpShowAfStatsBd.Merge(m, src)
}
func (m *EigrpShowAfStatsBd) XXX_Size() int {
	return xxx_messageInfo_EigrpShowAfStatsBd.Size(m)
}
func (m *EigrpShowAfStatsBd) XXX_DiscardUnknown() {
	xxx_messageInfo_EigrpShowAfStatsBd.DiscardUnknown(m)
}

var xxx_messageInfo_EigrpShowAfStatsBd proto.InternalMessageInfo

func (m *EigrpShowAfStatsBd) GetAfi() uint32 {
	if m != nil {
		return m.Afi
	}
	return 0
}

func (m *EigrpShowAfStatsBd) GetAsNumber() uint32 {
	if m != nil {
		return m.AsNumber
	}
	return 0
}

func (m *EigrpShowAfStatsBd) GetConfiguredInterfaceCount() uint32 {
	if m != nil {
		return m.ConfiguredInterfaceCount
	}
	return 0
}

func (m *EigrpShowAfStatsBd) GetActiveInterfacesCount() uint32 {
	if m != nil {
		return m.ActiveInterfacesCount
	}
	return 0
}

func (m *EigrpShowAfStatsBd) GetActivateCount() uint64 {
	if m != nil {
		return m.ActivateCount
	}
	return 0
}

func (m *EigrpShowAfStatsBd) GetActivateError() uint64 {
	if m != nil {
		return m.ActivateError
	}
	return 0
}

func (m *EigrpShowAfStatsBd) GetActivateLastError() int32 {
	if m != nil {
		return m.ActivateLastError
	}
	return 0
}

func (m *EigrpShowAfStatsBd) GetDeactivateCount() uint64 {
	if m != nil {
		return m.DeactivateCount
	}
	return 0
}

func (m *EigrpShowAfStatsBd) GetDeactivateError() uint64 {
	if m != nil {
		return m.DeactivateError
	}
	return 0
}

func (m *EigrpShowAfStatsBd) GetDeactivateLastError() int32 {
	if m != nil {
		return m.DeactivateLastError
	}
	return 0
}

func (m *EigrpShowAfStatsBd) GetSocketSet() uint64 {
	if m != nil {
		return m.SocketSet
	}
	return 0
}

func (m *EigrpShowAfStatsBd) GetSocketSetError() uint64 {
	if m != nil {
		return m.SocketSetError
	}
	return 0
}

func (m *EigrpShowAfStatsBd) GetSockSetLastError() int32 {
	if m != nil {
		return m.SockSetLastError
	}
	return 0
}

func (m *EigrpShowAfStatsBd) GetRawPacketIn() uint64 {
	if m != nil {
		return m.RawPacketIn
	}
	return 0
}

func (m *EigrpShowAfStatsBd) GetRawPacketInError() uint64 {
	if m != nil {
		return m.RawPacketInError
	}
	return 0
}

func (m *EigrpShowAfStatsBd) GetRawPacketInLastError() int32 {
	if m != nil {
		return m.RawPacketInLastError
	}
	return 0
}

func (m *EigrpShowAfStatsBd) GetRawPacketOut() uint64 {
	if m != nil {
		return m.RawPacketOut
	}
	return 0
}

func (m *EigrpShowAfStatsBd) GetRawPacketOutError() uint64 {
	if m != nil {
		return m.RawPacketOutError
	}
	return 0
}

func (m *EigrpShowAfStatsBd) GetRawPacketOutLastError() int32 {
	if m != nil {
		return m.RawPacketOutLastError
	}
	return 0
}

func init() {
	proto.RegisterType((*EigrpShowAfStatsBd_KEYS)(nil), "cisco_ios_xr_eigrp_oper.eigrp.processes.process.vrfs.vrf.afs.af.ases.as.eigrp_statistics.eigrp_show_af_stats_bd_KEYS")
	proto.RegisterType((*EigrpShowAfStatsBd)(nil), "cisco_ios_xr_eigrp_oper.eigrp.processes.process.vrfs.vrf.afs.af.ases.as.eigrp_statistics.eigrp_show_af_stats_bd")
}

func init() { proto.RegisterFile("eigrp_show_af_stats_bd.proto", fileDescriptor_2da0b315bd673adb) }

var fileDescriptor_2da0b315bd673adb = []byte{
	// 522 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x94, 0x5d, 0x6f, 0x12, 0x4d,
	0x14, 0xc7, 0xb3, 0x4f, 0x9b, 0xb6, 0x9c, 0x47, 0x10, 0x96, 0x62, 0xa7, 0xd6, 0x26, 0x84, 0x68,
	0x82, 0x17, 0xae, 0x49, 0xab, 0x58, 0xb5, 0xbe, 0xd6, 0x5e, 0x10, 0x4d, 0x35, 0x70, 0xa3, 0x57,
	0x93, 0xc3, 0x32, 0x5b, 0x27, 0xca, 0x0e, 0x99, 0x33, 0x80, 0xd7, 0x7e, 0x4b, 0xbf, 0x8d, 0xd9,
	0x33, 0x0b, 0xbb, 0x60, 0x6f, 0xc8, 0x70, 0xfe, 0xbf, 0xff, 0xcb, 0xd5, 0xc2, 0x3d, 0xa5, 0xaf,
	0xed, 0x54, 0xd2, 0x77, 0xb3, 0x90, 0x98, 0x48, 0x72, 0xe8, 0x48, 0x8e, 0xc6, 0xd1, 0xd4, 0x1a,
	0x67, 0xc2, 0xaf, 0xb1, 0xa6, 0xd8, 0x48, 0x6d, 0x48, 0xfe, 0xb2, 0xd2, 0xa3, 0x66, 0xaa, 0x6c,
	0xc4, 0xcf, 0x0c, 0x8a, 0x15, 0x91, 0xa2, 0xe5, 0x2b, 0x9a, 0xdb, 0x84, 0x7f, 0x22, 0x4c, 0x28,
	0xc2, 0x24, 0xc2, 0x4c, 0x44, 0x8a, 0xf2, 0x16, 0x87, 0x4e, 0x93, 0xd3, 0x31, 0x75, 0x7e, 0x07,
	0x70, 0x74, 0x73, 0xb5, 0xfc, 0x78, 0xf9, 0x6d, 0x18, 0x1e, 0x03, 0xe4, 0x99, 0x52, 0x8f, 0x45,
	0xd0, 0x0e, 0xba, 0x95, 0x41, 0x25, 0xbf, 0xf4, 0xc7, 0xe1, 0x21, 0xec, 0xcd, 0x6d, 0x22, 0x53,
	0x9c, 0x28, 0xf1, 0x1f, 0x8b, 0xbb, 0x73, 0x9b, 0x5c, 0xe1, 0x44, 0x85, 0x07, 0xb0, 0x8b, 0xb9,
	0xb2, 0xc5, 0xca, 0x0e, 0x7a, 0xa1, 0x0e, 0x5b, 0x48, 0xa9, 0xd8, 0x6e, 0x07, 0xdd, 0xea, 0x20,
	0x7b, 0x76, 0xfe, 0xec, 0xc0, 0x9d, 0x9b, 0x47, 0x30, 0x9c, 0x68, 0x71, 0x92, 0xc3, 0x89, 0x0e,
	0x8f, 0xa0, 0x82, 0x24, 0xd3, 0xd9, 0x64, 0xa4, 0xac, 0x38, 0xe5, 0xfb, 0x1e, 0xd2, 0x15, 0xff,
	0x0f, 0xcf, 0xe1, 0x6e, 0x6c, 0xd2, 0x44, 0x5f, 0xcf, 0xac, 0x1a, 0x4b, 0x9d, 0x3a, 0x65, 0x13,
	0x8c, 0x95, 0x8c, 0xcd, 0x2c, 0x75, 0xe2, 0x09, 0xd3, 0xa2, 0x20, 0xfa, 0x4b, 0xe0, 0x22, 0xd3,
	0xc3, 0x1e, 0x1c, 0x60, 0xec, 0xf4, 0x5c, 0x15, 0x4e, 0xca, 0xad, 0x4f, 0xd9, 0xda, 0xf2, 0xf2,
	0xca, 0x46, 0xde, 0xf7, 0x00, 0x6a, 0x2c, 0xa0, 0x5b, 0x36, 0xf5, 0xda, 0x41, 0x77, 0x7b, 0x50,
	0x5d, 0x5e, 0xff, 0xc5, 0x94, 0xb5, 0xc6, 0x8a, 0x67, 0xeb, 0xd8, 0x65, 0x76, 0x0c, 0x23, 0x68,
	0xae, 0xb0, 0x9f, 0x48, 0x2e, 0x67, 0xcf, 0xda, 0x41, 0xb7, 0x31, 0x68, 0x2c, 0xa5, 0x4f, 0x48,
	0xce, 0xf3, 0x0f, 0xa1, 0x3e, 0x56, 0x1b, 0xfd, 0xcf, 0x39, 0xf8, 0x76, 0x71, 0xf7, 0x0b, 0xd6,
	0x51, 0x9f, 0xfb, 0x62, 0x13, 0xf5, 0xa9, 0x27, 0xd0, 0x2a, 0xa1, 0xa5, 0x1d, 0x2f, 0x79, 0x47,
	0xb3, 0x10, 0x8b, 0x25, 0xc7, 0x00, 0x64, 0xe2, 0x1f, 0xca, 0x49, 0x52, 0x4e, 0x9c, 0x73, 0x70,
	0xc5, 0x5f, 0x86, 0xca, 0x85, 0x5d, 0xa8, 0x17, 0x72, 0x9e, 0xf6, 0x8a, 0xa1, 0xda, 0x0a, 0xf2,
	0x41, 0x8f, 0xa0, 0x99, 0x5d, 0x98, 0x2b, 0x55, 0xbf, 0xe6, 0x6a, 0x0e, 0x19, 0x2a, 0x57, 0xf4,
	0x76, 0xa0, 0x6a, 0x71, 0x21, 0xa7, 0xc8, 0xe1, 0x3a, 0x15, 0x6f, 0x38, 0xf5, 0x7f, 0x8b, 0x8b,
	0x2f, 0x7c, 0xeb, 0xa7, 0x59, 0xe4, 0x1a, 0x93, 0x47, 0xbe, 0x65, 0xb2, 0x5e, 0x22, 0x7d, 0x64,
	0x0f, 0xc4, 0x3a, 0x5e, 0x9a, 0xf1, 0x8e, 0x67, 0xec, 0x97, 0x3c, 0xc5, 0x94, 0xfb, 0x50, 0x2b,
	0xf9, 0xcc, 0xcc, 0x89, 0xf7, 0xdc, 0x70, 0x6b, 0x45, 0x7f, 0x9e, 0xb9, 0xf0, 0x31, 0xec, 0xaf,
	0x53, 0x79, 0xf2, 0x05, 0xb3, 0x8d, 0x32, 0xeb, 0x63, 0xcf, 0xe0, 0x70, 0xc3, 0x50, 0xda, 0xf3,
	0x81, 0xf7, 0xb4, 0xca, 0xae, 0xd5, 0xa0, 0xd1, 0x0e, 0x7f, 0x41, 0x4e, 0xff, 0x06, 0x00, 0x00,
	0xff, 0xff, 0xad, 0x91, 0x6d, 0x72, 0x61, 0x04, 0x00, 0x00,
}
