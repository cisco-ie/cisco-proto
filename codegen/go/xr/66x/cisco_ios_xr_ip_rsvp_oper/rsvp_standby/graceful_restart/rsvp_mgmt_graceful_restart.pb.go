/*
Copyright 2019 Cisco Systems

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: rsvp_mgmt_graceful_restart.proto

package cisco_ios_xr_ip_rsvp_oper_rsvp_standby_graceful_restart

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type RsvpMgmtGracefulRestart_KEYS struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RsvpMgmtGracefulRestart_KEYS) Reset()         { *m = RsvpMgmtGracefulRestart_KEYS{} }
func (m *RsvpMgmtGracefulRestart_KEYS) String() string { return proto.CompactTextString(m) }
func (*RsvpMgmtGracefulRestart_KEYS) ProtoMessage()    {}
func (*RsvpMgmtGracefulRestart_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_5241c0c4e8908307, []int{0}
}

func (m *RsvpMgmtGracefulRestart_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RsvpMgmtGracefulRestart_KEYS.Unmarshal(m, b)
}
func (m *RsvpMgmtGracefulRestart_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RsvpMgmtGracefulRestart_KEYS.Marshal(b, m, deterministic)
}
func (m *RsvpMgmtGracefulRestart_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RsvpMgmtGracefulRestart_KEYS.Merge(m, src)
}
func (m *RsvpMgmtGracefulRestart_KEYS) XXX_Size() int {
	return xxx_messageInfo_RsvpMgmtGracefulRestart_KEYS.Size(m)
}
func (m *RsvpMgmtGracefulRestart_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_RsvpMgmtGracefulRestart_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_RsvpMgmtGracefulRestart_KEYS proto.InternalMessageInfo

type RsvpMgmtLocalNodeIdIpv4 struct {
	LocalNodeIpAddress   string   `protobuf:"bytes,1,opt,name=local_node_ip_address,json=localNodeIpAddress,proto3" json:"local_node_ip_address,omitempty"`
	ApplicationType      string   `protobuf:"bytes,2,opt,name=application_type,json=applicationType,proto3" json:"application_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RsvpMgmtLocalNodeIdIpv4) Reset()         { *m = RsvpMgmtLocalNodeIdIpv4{} }
func (m *RsvpMgmtLocalNodeIdIpv4) String() string { return proto.CompactTextString(m) }
func (*RsvpMgmtLocalNodeIdIpv4) ProtoMessage()    {}
func (*RsvpMgmtLocalNodeIdIpv4) Descriptor() ([]byte, []int) {
	return fileDescriptor_5241c0c4e8908307, []int{1}
}

func (m *RsvpMgmtLocalNodeIdIpv4) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RsvpMgmtLocalNodeIdIpv4.Unmarshal(m, b)
}
func (m *RsvpMgmtLocalNodeIdIpv4) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RsvpMgmtLocalNodeIdIpv4.Marshal(b, m, deterministic)
}
func (m *RsvpMgmtLocalNodeIdIpv4) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RsvpMgmtLocalNodeIdIpv4.Merge(m, src)
}
func (m *RsvpMgmtLocalNodeIdIpv4) XXX_Size() int {
	return xxx_messageInfo_RsvpMgmtLocalNodeIdIpv4.Size(m)
}
func (m *RsvpMgmtLocalNodeIdIpv4) XXX_DiscardUnknown() {
	xxx_messageInfo_RsvpMgmtLocalNodeIdIpv4.DiscardUnknown(m)
}

var xxx_messageInfo_RsvpMgmtLocalNodeIdIpv4 proto.InternalMessageInfo

func (m *RsvpMgmtLocalNodeIdIpv4) GetLocalNodeIpAddress() string {
	if m != nil {
		return m.LocalNodeIpAddress
	}
	return ""
}

func (m *RsvpMgmtLocalNodeIdIpv4) GetApplicationType() string {
	if m != nil {
		return m.ApplicationType
	}
	return ""
}

type RsvpMgmtTimespec struct {
	Seconds              int32    `protobuf:"zigzag32,1,opt,name=seconds,proto3" json:"seconds,omitempty"`
	Nanoseconds          int32    `protobuf:"zigzag32,2,opt,name=nanoseconds,proto3" json:"nanoseconds,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RsvpMgmtTimespec) Reset()         { *m = RsvpMgmtTimespec{} }
func (m *RsvpMgmtTimespec) String() string { return proto.CompactTextString(m) }
func (*RsvpMgmtTimespec) ProtoMessage()    {}
func (*RsvpMgmtTimespec) Descriptor() ([]byte, []int) {
	return fileDescriptor_5241c0c4e8908307, []int{2}
}

func (m *RsvpMgmtTimespec) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RsvpMgmtTimespec.Unmarshal(m, b)
}
func (m *RsvpMgmtTimespec) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RsvpMgmtTimespec.Marshal(b, m, deterministic)
}
func (m *RsvpMgmtTimespec) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RsvpMgmtTimespec.Merge(m, src)
}
func (m *RsvpMgmtTimespec) XXX_Size() int {
	return xxx_messageInfo_RsvpMgmtTimespec.Size(m)
}
func (m *RsvpMgmtTimespec) XXX_DiscardUnknown() {
	xxx_messageInfo_RsvpMgmtTimespec.DiscardUnknown(m)
}

var xxx_messageInfo_RsvpMgmtTimespec proto.InternalMessageInfo

func (m *RsvpMgmtTimespec) GetSeconds() int32 {
	if m != nil {
		return m.Seconds
	}
	return 0
}

func (m *RsvpMgmtTimespec) GetNanoseconds() int32 {
	if m != nil {
		return m.Nanoseconds
	}
	return 0
}

type RsvpMgmtGracefulRestart struct {
	IsGrEnabled            bool                       `protobuf:"varint,50,opt,name=is_gr_enabled,json=isGrEnabled,proto3" json:"is_gr_enabled,omitempty"`
	GlobalNeighbors        uint32                     `protobuf:"varint,51,opt,name=global_neighbors,json=globalNeighbors,proto3" json:"global_neighbors,omitempty"`
	LocalNodeAddress       []*RsvpMgmtLocalNodeIdIpv4 `protobuf:"bytes,52,rep,name=local_node_address,json=localNodeAddress,proto3" json:"local_node_address,omitempty"`
	RestartTime            uint32                     `protobuf:"varint,53,opt,name=restart_time,json=restartTime,proto3" json:"restart_time,omitempty"`
	RecoveryTime           uint32                     `protobuf:"varint,54,opt,name=recovery_time,json=recoveryTime,proto3" json:"recovery_time,omitempty"`
	IsRecoveryTimerRunning bool                       `protobuf:"varint,55,opt,name=is_recovery_timer_running,json=isRecoveryTimerRunning,proto3" json:"is_recovery_timer_running,omitempty"`
	RecoveryTimeLeft       *RsvpMgmtTimespec          `protobuf:"bytes,56,opt,name=recovery_time_left,json=recoveryTimeLeft,proto3" json:"recovery_time_left,omitempty"`
	RecoveryTimerExpTime   *RsvpMgmtTimespec          `protobuf:"bytes,57,opt,name=recovery_timer_exp_time,json=recoveryTimerExpTime,proto3" json:"recovery_timer_exp_time,omitempty"`
	HelloInterval          uint32                     `protobuf:"varint,58,opt,name=hello_interval,json=helloInterval,proto3" json:"hello_interval,omitempty"`
	MissedHellos           uint32                     `protobuf:"varint,59,opt,name=missed_hellos,json=missedHellos,proto3" json:"missed_hellos,omitempty"`
	PendingStates          uint32                     `protobuf:"varint,60,opt,name=pending_states,json=pendingStates,proto3" json:"pending_states,omitempty"`
	XXX_NoUnkeyedLiteral   struct{}                   `json:"-"`
	XXX_unrecognized       []byte                     `json:"-"`
	XXX_sizecache          int32                      `json:"-"`
}

func (m *RsvpMgmtGracefulRestart) Reset()         { *m = RsvpMgmtGracefulRestart{} }
func (m *RsvpMgmtGracefulRestart) String() string { return proto.CompactTextString(m) }
func (*RsvpMgmtGracefulRestart) ProtoMessage()    {}
func (*RsvpMgmtGracefulRestart) Descriptor() ([]byte, []int) {
	return fileDescriptor_5241c0c4e8908307, []int{3}
}

func (m *RsvpMgmtGracefulRestart) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RsvpMgmtGracefulRestart.Unmarshal(m, b)
}
func (m *RsvpMgmtGracefulRestart) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RsvpMgmtGracefulRestart.Marshal(b, m, deterministic)
}
func (m *RsvpMgmtGracefulRestart) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RsvpMgmtGracefulRestart.Merge(m, src)
}
func (m *RsvpMgmtGracefulRestart) XXX_Size() int {
	return xxx_messageInfo_RsvpMgmtGracefulRestart.Size(m)
}
func (m *RsvpMgmtGracefulRestart) XXX_DiscardUnknown() {
	xxx_messageInfo_RsvpMgmtGracefulRestart.DiscardUnknown(m)
}

var xxx_messageInfo_RsvpMgmtGracefulRestart proto.InternalMessageInfo

func (m *RsvpMgmtGracefulRestart) GetIsGrEnabled() bool {
	if m != nil {
		return m.IsGrEnabled
	}
	return false
}

func (m *RsvpMgmtGracefulRestart) GetGlobalNeighbors() uint32 {
	if m != nil {
		return m.GlobalNeighbors
	}
	return 0
}

func (m *RsvpMgmtGracefulRestart) GetLocalNodeAddress() []*RsvpMgmtLocalNodeIdIpv4 {
	if m != nil {
		return m.LocalNodeAddress
	}
	return nil
}

func (m *RsvpMgmtGracefulRestart) GetRestartTime() uint32 {
	if m != nil {
		return m.RestartTime
	}
	return 0
}

func (m *RsvpMgmtGracefulRestart) GetRecoveryTime() uint32 {
	if m != nil {
		return m.RecoveryTime
	}
	return 0
}

func (m *RsvpMgmtGracefulRestart) GetIsRecoveryTimerRunning() bool {
	if m != nil {
		return m.IsRecoveryTimerRunning
	}
	return false
}

func (m *RsvpMgmtGracefulRestart) GetRecoveryTimeLeft() *RsvpMgmtTimespec {
	if m != nil {
		return m.RecoveryTimeLeft
	}
	return nil
}

func (m *RsvpMgmtGracefulRestart) GetRecoveryTimerExpTime() *RsvpMgmtTimespec {
	if m != nil {
		return m.RecoveryTimerExpTime
	}
	return nil
}

func (m *RsvpMgmtGracefulRestart) GetHelloInterval() uint32 {
	if m != nil {
		return m.HelloInterval
	}
	return 0
}

func (m *RsvpMgmtGracefulRestart) GetMissedHellos() uint32 {
	if m != nil {
		return m.MissedHellos
	}
	return 0
}

func (m *RsvpMgmtGracefulRestart) GetPendingStates() uint32 {
	if m != nil {
		return m.PendingStates
	}
	return 0
}

func init() {
	proto.RegisterType((*RsvpMgmtGracefulRestart_KEYS)(nil), "cisco_ios_xr_ip_rsvp_oper.rsvp_standby.graceful_restart.rsvp_mgmt_graceful_restart_KEYS")
	proto.RegisterType((*RsvpMgmtLocalNodeIdIpv4)(nil), "cisco_ios_xr_ip_rsvp_oper.rsvp_standby.graceful_restart.rsvp_mgmt_local_node_id_ipv4")
	proto.RegisterType((*RsvpMgmtTimespec)(nil), "cisco_ios_xr_ip_rsvp_oper.rsvp_standby.graceful_restart.rsvp_mgmt_timespec")
	proto.RegisterType((*RsvpMgmtGracefulRestart)(nil), "cisco_ios_xr_ip_rsvp_oper.rsvp_standby.graceful_restart.rsvp_mgmt_graceful_restart")
}

func init() { proto.RegisterFile("rsvp_mgmt_graceful_restart.proto", fileDescriptor_5241c0c4e8908307) }

var fileDescriptor_5241c0c4e8908307 = []byte{
	// 498 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x94, 0x5d, 0x6b, 0x14, 0x3f,
	0x14, 0xc6, 0x99, 0xfe, 0xf9, 0xfb, 0x92, 0xed, 0xda, 0x35, 0xf8, 0x12, 0x45, 0x70, 0xba, 0x22,
	0xac, 0x37, 0x0b, 0x6e, 0xab, 0xb5, 0xea, 0x8d, 0x17, 0x8b, 0x96, 0x4a, 0x91, 0x69, 0xbd, 0xf0,
	0xea, 0x90, 0x9d, 0x9c, 0x9d, 0x06, 0xb2, 0x49, 0x48, 0xd2, 0x65, 0x07, 0xbc, 0xd2, 0x0f, 0xeb,
	0xd7, 0x90, 0x49, 0x76, 0xec, 0xb4, 0x50, 0x2f, 0xa4, 0x77, 0x33, 0xbf, 0xf3, 0x9c, 0xe4, 0x39,
	0xcf, 0x19, 0x86, 0xe4, 0xce, 0x2f, 0x2d, 0x2c, 0xaa, 0x45, 0x80, 0xca, 0xf1, 0x12, 0xe7, 0x67,
	0x0a, 0x1c, 0xfa, 0xc0, 0x5d, 0x18, 0x5b, 0x67, 0x82, 0xa1, 0x7b, 0xa5, 0xf4, 0xa5, 0x01, 0x69,
	0x3c, 0xac, 0x1c, 0x48, 0x0b, 0xb1, 0xc3, 0x58, 0x74, 0xe3, 0xf8, 0xe4, 0x03, 0xd7, 0x62, 0x56,
	0x8f, 0x2f, 0xb7, 0x0f, 0xb7, 0xc9, 0xd3, 0xab, 0x0f, 0x87, 0xc3, 0xe9, 0xb7, 0xe3, 0xe1, 0x77,
	0xf2, 0xe4, 0x5c, 0xa2, 0x4c, 0xc9, 0x15, 0x68, 0x23, 0x10, 0xa4, 0x00, 0x69, 0x97, 0xbb, 0xf4,
	0x25, 0xb9, 0xdf, 0xa5, 0x16, 0xb8, 0x10, 0x0e, 0xbd, 0x67, 0x59, 0x9e, 0x8d, 0x6e, 0x17, 0x34,
	0x16, 0x8f, 0x8c, 0xc0, 0x03, 0xfb, 0x21, 0x55, 0xe8, 0x0b, 0x32, 0xe0, 0xd6, 0x2a, 0x59, 0xf2,
	0x20, 0x8d, 0x86, 0x50, 0x5b, 0x64, 0x1b, 0x51, 0xbd, 0xd5, 0xe1, 0x27, 0xb5, 0xc5, 0xe1, 0x17,
	0x42, 0xcf, 0x6f, 0x0f, 0x72, 0x81, 0xde, 0x62, 0x49, 0x19, 0xb9, 0xe9, 0xb1, 0x34, 0x5a, 0xa4,
	0x5b, 0xee, 0x16, 0xed, 0x2b, 0xcd, 0x49, 0x4f, 0x73, 0x6d, 0xda, 0xea, 0x46, 0xac, 0x76, 0xd1,
	0xf0, 0xd7, 0xff, 0xe4, 0xf1, 0xd5, 0x33, 0xd3, 0x21, 0xe9, 0x4b, 0x0f, 0x95, 0x03, 0xd4, 0x7c,
	0xa6, 0x50, 0xb0, 0x49, 0x9e, 0x8d, 0x6e, 0x15, 0x3d, 0xe9, 0x3f, 0xba, 0x69, 0x42, 0x8d, 0xff,
	0x4a, 0x99, 0x59, 0x33, 0x33, 0xca, 0xea, 0x74, 0x66, 0x9c, 0x67, 0x3b, 0x79, 0x36, 0xea, 0x17,
	0x5b, 0x89, 0x1f, 0xb5, 0x98, 0xfe, 0xcc, 0x08, 0xed, 0xc4, 0xd3, 0x66, 0xb3, 0x9b, 0xff, 0x37,
	0xea, 0x4d, 0xbe, 0x8e, 0xff, 0x71, 0x6f, 0xe3, 0xbf, 0x6d, 0xa4, 0x18, 0xfc, 0x89, 0xbc, 0x0d,
	0x7c, 0x9b, 0x6c, 0xb6, 0x3b, 0x6d, 0x32, 0x64, 0xaf, 0xa2, 0xd9, 0xde, 0x9a, 0x9d, 0xc8, 0x05,
	0xd2, 0x67, 0xa4, 0xef, 0xb0, 0x34, 0x4b, 0x74, 0x75, 0xd2, 0xbc, 0x8e, 0x9a, 0xcd, 0x16, 0x46,
	0xd1, 0x3e, 0x79, 0x24, 0x3d, 0x5c, 0xd0, 0x39, 0x70, 0x67, 0x5a, 0x4b, 0x5d, 0xb1, 0xbd, 0x18,
	0xd4, 0x03, 0xe9, 0x8b, 0x4e, 0x8b, 0x2b, 0x52, 0x95, 0xd6, 0x84, 0x5e, 0xe8, 0x03, 0x85, 0xf3,
	0xc0, 0xde, 0xe4, 0xd9, 0xa8, 0x37, 0x39, 0xbc, 0x86, 0x1c, 0xda, 0x6f, 0xa3, 0x18, 0x74, 0x1d,
	0x7f, 0xc6, 0x79, 0xa0, 0x3f, 0x32, 0xf2, 0xf0, 0x92, 0x67, 0x5c, 0xd9, 0x34, 0xe5, 0xfe, 0xf5,
	0x1b, 0xb8, 0xd7, 0x35, 0xe0, 0xa6, 0x2b, 0x1b, 0xa3, 0x7b, 0x4e, 0xee, 0x9c, 0xa2, 0x52, 0x06,
	0xa4, 0x0e, 0xe8, 0x96, 0x5c, 0xb1, 0xb7, 0x31, 0xe0, 0x7e, 0xa4, 0x07, 0x6b, 0xd8, 0xac, 0x61,
	0x21, 0xbd, 0x47, 0x01, 0x91, 0x7b, 0xf6, 0x2e, 0xad, 0x21, 0xc1, 0x4f, 0x91, 0x35, 0x67, 0x59,
	0xd4, 0x42, 0xea, 0xaa, 0x31, 0x16, 0xd0, 0xb3, 0xf7, 0xe9, 0xac, 0x35, 0x3d, 0x8e, 0x70, 0x76,
	0x23, 0xfe, 0x1c, 0x76, 0x7e, 0x07, 0x00, 0x00, 0xff, 0xff, 0xf2, 0x37, 0xb6, 0x97, 0x40, 0x04,
	0x00, 0x00,
}
