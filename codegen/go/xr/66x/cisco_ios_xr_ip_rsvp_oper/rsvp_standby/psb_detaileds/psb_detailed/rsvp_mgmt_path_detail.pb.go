/*
Copyright 2019 Cisco Systems

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: rsvp_mgmt_path_detail.proto

package cisco_ios_xr_ip_rsvp_oper_rsvp_standby_psb_detaileds_psb_detailed

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type RsvpMgmtPathDetail_KEYS struct {
	DestinationAddress   string   `protobuf:"bytes,1,opt,name=destination_address,json=destinationAddress,proto3" json:"destination_address,omitempty"`
	DestinationPort      uint32   `protobuf:"varint,2,opt,name=destination_port,json=destinationPort,proto3" json:"destination_port,omitempty"`
	Protocol             uint32   `protobuf:"varint,3,opt,name=protocol,proto3" json:"protocol,omitempty"`
	ExtendedTunnelId     string   `protobuf:"bytes,4,opt,name=extended_tunnel_id,json=extendedTunnelId,proto3" json:"extended_tunnel_id,omitempty"`
	SessionType          string   `protobuf:"bytes,5,opt,name=session_type,json=sessionType,proto3" json:"session_type,omitempty"`
	P2MpId               uint32   `protobuf:"varint,6,opt,name=p2mp_id,json=p2mpId,proto3" json:"p2mp_id,omitempty"`
	SourceAddress        string   `protobuf:"bytes,7,opt,name=source_address,json=sourceAddress,proto3" json:"source_address,omitempty"`
	SourcePort           uint32   `protobuf:"varint,8,opt,name=source_port,json=sourcePort,proto3" json:"source_port,omitempty"`
	SubGroupOrigin       string   `protobuf:"bytes,9,opt,name=sub_group_origin,json=subGroupOrigin,proto3" json:"sub_group_origin,omitempty"`
	SubGroupId           uint32   `protobuf:"varint,10,opt,name=sub_group_id,json=subGroupId,proto3" json:"sub_group_id,omitempty"`
	VrfName              string   `protobuf:"bytes,11,opt,name=vrf_name,json=vrfName,proto3" json:"vrf_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RsvpMgmtPathDetail_KEYS) Reset()         { *m = RsvpMgmtPathDetail_KEYS{} }
func (m *RsvpMgmtPathDetail_KEYS) String() string { return proto.CompactTextString(m) }
func (*RsvpMgmtPathDetail_KEYS) ProtoMessage()    {}
func (*RsvpMgmtPathDetail_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_49b777e38492e2f5, []int{0}
}

func (m *RsvpMgmtPathDetail_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RsvpMgmtPathDetail_KEYS.Unmarshal(m, b)
}
func (m *RsvpMgmtPathDetail_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RsvpMgmtPathDetail_KEYS.Marshal(b, m, deterministic)
}
func (m *RsvpMgmtPathDetail_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RsvpMgmtPathDetail_KEYS.Merge(m, src)
}
func (m *RsvpMgmtPathDetail_KEYS) XXX_Size() int {
	return xxx_messageInfo_RsvpMgmtPathDetail_KEYS.Size(m)
}
func (m *RsvpMgmtPathDetail_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_RsvpMgmtPathDetail_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_RsvpMgmtPathDetail_KEYS proto.InternalMessageInfo

func (m *RsvpMgmtPathDetail_KEYS) GetDestinationAddress() string {
	if m != nil {
		return m.DestinationAddress
	}
	return ""
}

func (m *RsvpMgmtPathDetail_KEYS) GetDestinationPort() uint32 {
	if m != nil {
		return m.DestinationPort
	}
	return 0
}

func (m *RsvpMgmtPathDetail_KEYS) GetProtocol() uint32 {
	if m != nil {
		return m.Protocol
	}
	return 0
}

func (m *RsvpMgmtPathDetail_KEYS) GetExtendedTunnelId() string {
	if m != nil {
		return m.ExtendedTunnelId
	}
	return ""
}

func (m *RsvpMgmtPathDetail_KEYS) GetSessionType() string {
	if m != nil {
		return m.SessionType
	}
	return ""
}

func (m *RsvpMgmtPathDetail_KEYS) GetP2MpId() uint32 {
	if m != nil {
		return m.P2MpId
	}
	return 0
}

func (m *RsvpMgmtPathDetail_KEYS) GetSourceAddress() string {
	if m != nil {
		return m.SourceAddress
	}
	return ""
}

func (m *RsvpMgmtPathDetail_KEYS) GetSourcePort() uint32 {
	if m != nil {
		return m.SourcePort
	}
	return 0
}

func (m *RsvpMgmtPathDetail_KEYS) GetSubGroupOrigin() string {
	if m != nil {
		return m.SubGroupOrigin
	}
	return ""
}

func (m *RsvpMgmtPathDetail_KEYS) GetSubGroupId() uint32 {
	if m != nil {
		return m.SubGroupId
	}
	return 0
}

func (m *RsvpMgmtPathDetail_KEYS) GetVrfName() string {
	if m != nil {
		return m.VrfName
	}
	return ""
}

type RsvpMgmtSessionUdpIpv4 struct {
	DestinationAddress   string   `protobuf:"bytes,1,opt,name=destination_address,json=destinationAddress,proto3" json:"destination_address,omitempty"`
	Protocol             uint32   `protobuf:"varint,2,opt,name=protocol,proto3" json:"protocol,omitempty"`
	DestinationPort      uint32   `protobuf:"varint,3,opt,name=destination_port,json=destinationPort,proto3" json:"destination_port,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RsvpMgmtSessionUdpIpv4) Reset()         { *m = RsvpMgmtSessionUdpIpv4{} }
func (m *RsvpMgmtSessionUdpIpv4) String() string { return proto.CompactTextString(m) }
func (*RsvpMgmtSessionUdpIpv4) ProtoMessage()    {}
func (*RsvpMgmtSessionUdpIpv4) Descriptor() ([]byte, []int) {
	return fileDescriptor_49b777e38492e2f5, []int{1}
}

func (m *RsvpMgmtSessionUdpIpv4) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RsvpMgmtSessionUdpIpv4.Unmarshal(m, b)
}
func (m *RsvpMgmtSessionUdpIpv4) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RsvpMgmtSessionUdpIpv4.Marshal(b, m, deterministic)
}
func (m *RsvpMgmtSessionUdpIpv4) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RsvpMgmtSessionUdpIpv4.Merge(m, src)
}
func (m *RsvpMgmtSessionUdpIpv4) XXX_Size() int {
	return xxx_messageInfo_RsvpMgmtSessionUdpIpv4.Size(m)
}
func (m *RsvpMgmtSessionUdpIpv4) XXX_DiscardUnknown() {
	xxx_messageInfo_RsvpMgmtSessionUdpIpv4.DiscardUnknown(m)
}

var xxx_messageInfo_RsvpMgmtSessionUdpIpv4 proto.InternalMessageInfo

func (m *RsvpMgmtSessionUdpIpv4) GetDestinationAddress() string {
	if m != nil {
		return m.DestinationAddress
	}
	return ""
}

func (m *RsvpMgmtSessionUdpIpv4) GetProtocol() uint32 {
	if m != nil {
		return m.Protocol
	}
	return 0
}

func (m *RsvpMgmtSessionUdpIpv4) GetDestinationPort() uint32 {
	if m != nil {
		return m.DestinationPort
	}
	return 0
}

type RsvpMgmtSessionLspTunnelIpv4 struct {
	DestinationAddress   string   `protobuf:"bytes,1,opt,name=destination_address,json=destinationAddress,proto3" json:"destination_address,omitempty"`
	TunnelId             uint32   `protobuf:"varint,2,opt,name=tunnel_id,json=tunnelId,proto3" json:"tunnel_id,omitempty"`
	ExtendedTunnelId     string   `protobuf:"bytes,3,opt,name=extended_tunnel_id,json=extendedTunnelId,proto3" json:"extended_tunnel_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RsvpMgmtSessionLspTunnelIpv4) Reset()         { *m = RsvpMgmtSessionLspTunnelIpv4{} }
func (m *RsvpMgmtSessionLspTunnelIpv4) String() string { return proto.CompactTextString(m) }
func (*RsvpMgmtSessionLspTunnelIpv4) ProtoMessage()    {}
func (*RsvpMgmtSessionLspTunnelIpv4) Descriptor() ([]byte, []int) {
	return fileDescriptor_49b777e38492e2f5, []int{2}
}

func (m *RsvpMgmtSessionLspTunnelIpv4) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RsvpMgmtSessionLspTunnelIpv4.Unmarshal(m, b)
}
func (m *RsvpMgmtSessionLspTunnelIpv4) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RsvpMgmtSessionLspTunnelIpv4.Marshal(b, m, deterministic)
}
func (m *RsvpMgmtSessionLspTunnelIpv4) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RsvpMgmtSessionLspTunnelIpv4.Merge(m, src)
}
func (m *RsvpMgmtSessionLspTunnelIpv4) XXX_Size() int {
	return xxx_messageInfo_RsvpMgmtSessionLspTunnelIpv4.Size(m)
}
func (m *RsvpMgmtSessionLspTunnelIpv4) XXX_DiscardUnknown() {
	xxx_messageInfo_RsvpMgmtSessionLspTunnelIpv4.DiscardUnknown(m)
}

var xxx_messageInfo_RsvpMgmtSessionLspTunnelIpv4 proto.InternalMessageInfo

func (m *RsvpMgmtSessionLspTunnelIpv4) GetDestinationAddress() string {
	if m != nil {
		return m.DestinationAddress
	}
	return ""
}

func (m *RsvpMgmtSessionLspTunnelIpv4) GetTunnelId() uint32 {
	if m != nil {
		return m.TunnelId
	}
	return 0
}

func (m *RsvpMgmtSessionLspTunnelIpv4) GetExtendedTunnelId() string {
	if m != nil {
		return m.ExtendedTunnelId
	}
	return ""
}

type RsvpMgmtSessionUniIpv4 struct {
	DestinationAddress   string   `protobuf:"bytes,1,opt,name=destination_address,json=destinationAddress,proto3" json:"destination_address,omitempty"`
	TunnelId             uint32   `protobuf:"varint,2,opt,name=tunnel_id,json=tunnelId,proto3" json:"tunnel_id,omitempty"`
	ExtendedAddress      string   `protobuf:"bytes,3,opt,name=extended_address,json=extendedAddress,proto3" json:"extended_address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RsvpMgmtSessionUniIpv4) Reset()         { *m = RsvpMgmtSessionUniIpv4{} }
func (m *RsvpMgmtSessionUniIpv4) String() string { return proto.CompactTextString(m) }
func (*RsvpMgmtSessionUniIpv4) ProtoMessage()    {}
func (*RsvpMgmtSessionUniIpv4) Descriptor() ([]byte, []int) {
	return fileDescriptor_49b777e38492e2f5, []int{3}
}

func (m *RsvpMgmtSessionUniIpv4) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RsvpMgmtSessionUniIpv4.Unmarshal(m, b)
}
func (m *RsvpMgmtSessionUniIpv4) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RsvpMgmtSessionUniIpv4.Marshal(b, m, deterministic)
}
func (m *RsvpMgmtSessionUniIpv4) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RsvpMgmtSessionUniIpv4.Merge(m, src)
}
func (m *RsvpMgmtSessionUniIpv4) XXX_Size() int {
	return xxx_messageInfo_RsvpMgmtSessionUniIpv4.Size(m)
}
func (m *RsvpMgmtSessionUniIpv4) XXX_DiscardUnknown() {
	xxx_messageInfo_RsvpMgmtSessionUniIpv4.DiscardUnknown(m)
}

var xxx_messageInfo_RsvpMgmtSessionUniIpv4 proto.InternalMessageInfo

func (m *RsvpMgmtSessionUniIpv4) GetDestinationAddress() string {
	if m != nil {
		return m.DestinationAddress
	}
	return ""
}

func (m *RsvpMgmtSessionUniIpv4) GetTunnelId() uint32 {
	if m != nil {
		return m.TunnelId
	}
	return 0
}

func (m *RsvpMgmtSessionUniIpv4) GetExtendedAddress() string {
	if m != nil {
		return m.ExtendedAddress
	}
	return ""
}

type RsvpMgmtSessionP2MpLspTunnelIpv4 struct {
	P2MpId               uint32   `protobuf:"varint,1,opt,name=p2mp_id,json=p2mpId,proto3" json:"p2mp_id,omitempty"`
	TunnelId             uint32   `protobuf:"varint,2,opt,name=tunnel_id,json=tunnelId,proto3" json:"tunnel_id,omitempty"`
	ExtendedTunnelId     string   `protobuf:"bytes,3,opt,name=extended_tunnel_id,json=extendedTunnelId,proto3" json:"extended_tunnel_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RsvpMgmtSessionP2MpLspTunnelIpv4) Reset()         { *m = RsvpMgmtSessionP2MpLspTunnelIpv4{} }
func (m *RsvpMgmtSessionP2MpLspTunnelIpv4) String() string { return proto.CompactTextString(m) }
func (*RsvpMgmtSessionP2MpLspTunnelIpv4) ProtoMessage()    {}
func (*RsvpMgmtSessionP2MpLspTunnelIpv4) Descriptor() ([]byte, []int) {
	return fileDescriptor_49b777e38492e2f5, []int{4}
}

func (m *RsvpMgmtSessionP2MpLspTunnelIpv4) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RsvpMgmtSessionP2MpLspTunnelIpv4.Unmarshal(m, b)
}
func (m *RsvpMgmtSessionP2MpLspTunnelIpv4) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RsvpMgmtSessionP2MpLspTunnelIpv4.Marshal(b, m, deterministic)
}
func (m *RsvpMgmtSessionP2MpLspTunnelIpv4) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RsvpMgmtSessionP2MpLspTunnelIpv4.Merge(m, src)
}
func (m *RsvpMgmtSessionP2MpLspTunnelIpv4) XXX_Size() int {
	return xxx_messageInfo_RsvpMgmtSessionP2MpLspTunnelIpv4.Size(m)
}
func (m *RsvpMgmtSessionP2MpLspTunnelIpv4) XXX_DiscardUnknown() {
	xxx_messageInfo_RsvpMgmtSessionP2MpLspTunnelIpv4.DiscardUnknown(m)
}

var xxx_messageInfo_RsvpMgmtSessionP2MpLspTunnelIpv4 proto.InternalMessageInfo

func (m *RsvpMgmtSessionP2MpLspTunnelIpv4) GetP2MpId() uint32 {
	if m != nil {
		return m.P2MpId
	}
	return 0
}

func (m *RsvpMgmtSessionP2MpLspTunnelIpv4) GetTunnelId() uint32 {
	if m != nil {
		return m.TunnelId
	}
	return 0
}

func (m *RsvpMgmtSessionP2MpLspTunnelIpv4) GetExtendedTunnelId() string {
	if m != nil {
		return m.ExtendedTunnelId
	}
	return ""
}

type RsvpSessionUnion struct {
	SessionType          string                            `protobuf:"bytes,1,opt,name=session_type,json=sessionType,proto3" json:"session_type,omitempty"`
	Ipv4                 *RsvpMgmtSessionUdpIpv4           `protobuf:"bytes,2,opt,name=ipv4,proto3" json:"ipv4,omitempty"`
	Ipv4LspSession       *RsvpMgmtSessionLspTunnelIpv4     `protobuf:"bytes,3,opt,name=ipv4_lsp_session,json=ipv4LspSession,proto3" json:"ipv4_lsp_session,omitempty"`
	Ipv4UniSession       *RsvpMgmtSessionUniIpv4           `protobuf:"bytes,4,opt,name=ipv4_uni_session,json=ipv4UniSession,proto3" json:"ipv4_uni_session,omitempty"`
	Ipv4P2MpLspSession   *RsvpMgmtSessionP2MpLspTunnelIpv4 `protobuf:"bytes,5,opt,name=ipv4_p2mp_lsp_session,json=ipv4P2mpLspSession,proto3" json:"ipv4_p2mp_lsp_session,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                          `json:"-"`
	XXX_unrecognized     []byte                            `json:"-"`
	XXX_sizecache        int32                             `json:"-"`
}

func (m *RsvpSessionUnion) Reset()         { *m = RsvpSessionUnion{} }
func (m *RsvpSessionUnion) String() string { return proto.CompactTextString(m) }
func (*RsvpSessionUnion) ProtoMessage()    {}
func (*RsvpSessionUnion) Descriptor() ([]byte, []int) {
	return fileDescriptor_49b777e38492e2f5, []int{5}
}

func (m *RsvpSessionUnion) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RsvpSessionUnion.Unmarshal(m, b)
}
func (m *RsvpSessionUnion) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RsvpSessionUnion.Marshal(b, m, deterministic)
}
func (m *RsvpSessionUnion) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RsvpSessionUnion.Merge(m, src)
}
func (m *RsvpSessionUnion) XXX_Size() int {
	return xxx_messageInfo_RsvpSessionUnion.Size(m)
}
func (m *RsvpSessionUnion) XXX_DiscardUnknown() {
	xxx_messageInfo_RsvpSessionUnion.DiscardUnknown(m)
}

var xxx_messageInfo_RsvpSessionUnion proto.InternalMessageInfo

func (m *RsvpSessionUnion) GetSessionType() string {
	if m != nil {
		return m.SessionType
	}
	return ""
}

func (m *RsvpSessionUnion) GetIpv4() *RsvpMgmtSessionUdpIpv4 {
	if m != nil {
		return m.Ipv4
	}
	return nil
}

func (m *RsvpSessionUnion) GetIpv4LspSession() *RsvpMgmtSessionLspTunnelIpv4 {
	if m != nil {
		return m.Ipv4LspSession
	}
	return nil
}

func (m *RsvpSessionUnion) GetIpv4UniSession() *RsvpMgmtSessionUniIpv4 {
	if m != nil {
		return m.Ipv4UniSession
	}
	return nil
}

func (m *RsvpSessionUnion) GetIpv4P2MpLspSession() *RsvpMgmtSessionP2MpLspTunnelIpv4 {
	if m != nil {
		return m.Ipv4P2MpLspSession
	}
	return nil
}

type RsvpMgmtSessionInfo struct {
	RsvpSession          *RsvpSessionUnion `protobuf:"bytes,1,opt,name=rsvp_session,json=rsvpSession,proto3" json:"rsvp_session,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *RsvpMgmtSessionInfo) Reset()         { *m = RsvpMgmtSessionInfo{} }
func (m *RsvpMgmtSessionInfo) String() string { return proto.CompactTextString(m) }
func (*RsvpMgmtSessionInfo) ProtoMessage()    {}
func (*RsvpMgmtSessionInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_49b777e38492e2f5, []int{6}
}

func (m *RsvpMgmtSessionInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RsvpMgmtSessionInfo.Unmarshal(m, b)
}
func (m *RsvpMgmtSessionInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RsvpMgmtSessionInfo.Marshal(b, m, deterministic)
}
func (m *RsvpMgmtSessionInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RsvpMgmtSessionInfo.Merge(m, src)
}
func (m *RsvpMgmtSessionInfo) XXX_Size() int {
	return xxx_messageInfo_RsvpMgmtSessionInfo.Size(m)
}
func (m *RsvpMgmtSessionInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_RsvpMgmtSessionInfo.DiscardUnknown(m)
}

var xxx_messageInfo_RsvpMgmtSessionInfo proto.InternalMessageInfo

func (m *RsvpMgmtSessionInfo) GetRsvpSession() *RsvpSessionUnion {
	if m != nil {
		return m.RsvpSession
	}
	return nil
}

type RsvpMgmtS2LSubLspIpv4 struct {
	S2LDestinationAddress string   `protobuf:"bytes,1,opt,name=s2l_destination_address,json=s2lDestinationAddress,proto3" json:"s2l_destination_address,omitempty"`
	XXX_NoUnkeyedLiteral  struct{} `json:"-"`
	XXX_unrecognized      []byte   `json:"-"`
	XXX_sizecache         int32    `json:"-"`
}

func (m *RsvpMgmtS2LSubLspIpv4) Reset()         { *m = RsvpMgmtS2LSubLspIpv4{} }
func (m *RsvpMgmtS2LSubLspIpv4) String() string { return proto.CompactTextString(m) }
func (*RsvpMgmtS2LSubLspIpv4) ProtoMessage()    {}
func (*RsvpMgmtS2LSubLspIpv4) Descriptor() ([]byte, []int) {
	return fileDescriptor_49b777e38492e2f5, []int{7}
}

func (m *RsvpMgmtS2LSubLspIpv4) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RsvpMgmtS2LSubLspIpv4.Unmarshal(m, b)
}
func (m *RsvpMgmtS2LSubLspIpv4) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RsvpMgmtS2LSubLspIpv4.Marshal(b, m, deterministic)
}
func (m *RsvpMgmtS2LSubLspIpv4) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RsvpMgmtS2LSubLspIpv4.Merge(m, src)
}
func (m *RsvpMgmtS2LSubLspIpv4) XXX_Size() int {
	return xxx_messageInfo_RsvpMgmtS2LSubLspIpv4.Size(m)
}
func (m *RsvpMgmtS2LSubLspIpv4) XXX_DiscardUnknown() {
	xxx_messageInfo_RsvpMgmtS2LSubLspIpv4.DiscardUnknown(m)
}

var xxx_messageInfo_RsvpMgmtS2LSubLspIpv4 proto.InternalMessageInfo

func (m *RsvpMgmtS2LSubLspIpv4) GetS2LDestinationAddress() string {
	if m != nil {
		return m.S2LDestinationAddress
	}
	return ""
}

type RsvpMgmtFilterIpv4 struct {
	SourceAddress        string   `protobuf:"bytes,1,opt,name=source_address,json=sourceAddress,proto3" json:"source_address,omitempty"`
	SourcePort           uint32   `protobuf:"varint,2,opt,name=source_port,json=sourcePort,proto3" json:"source_port,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RsvpMgmtFilterIpv4) Reset()         { *m = RsvpMgmtFilterIpv4{} }
func (m *RsvpMgmtFilterIpv4) String() string { return proto.CompactTextString(m) }
func (*RsvpMgmtFilterIpv4) ProtoMessage()    {}
func (*RsvpMgmtFilterIpv4) Descriptor() ([]byte, []int) {
	return fileDescriptor_49b777e38492e2f5, []int{8}
}

func (m *RsvpMgmtFilterIpv4) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RsvpMgmtFilterIpv4.Unmarshal(m, b)
}
func (m *RsvpMgmtFilterIpv4) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RsvpMgmtFilterIpv4.Marshal(b, m, deterministic)
}
func (m *RsvpMgmtFilterIpv4) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RsvpMgmtFilterIpv4.Merge(m, src)
}
func (m *RsvpMgmtFilterIpv4) XXX_Size() int {
	return xxx_messageInfo_RsvpMgmtFilterIpv4.Size(m)
}
func (m *RsvpMgmtFilterIpv4) XXX_DiscardUnknown() {
	xxx_messageInfo_RsvpMgmtFilterIpv4.DiscardUnknown(m)
}

var xxx_messageInfo_RsvpMgmtFilterIpv4 proto.InternalMessageInfo

func (m *RsvpMgmtFilterIpv4) GetSourceAddress() string {
	if m != nil {
		return m.SourceAddress
	}
	return ""
}

func (m *RsvpMgmtFilterIpv4) GetSourcePort() uint32 {
	if m != nil {
		return m.SourcePort
	}
	return 0
}

type RsvpMgmtFilterP2MpIpv4 struct {
	SourceAddress        string   `protobuf:"bytes,1,opt,name=source_address,json=sourceAddress,proto3" json:"source_address,omitempty"`
	SourcePort           uint32   `protobuf:"varint,2,opt,name=source_port,json=sourcePort,proto3" json:"source_port,omitempty"`
	P2MpSubGroupOrigin   string   `protobuf:"bytes,3,opt,name=p2mp_sub_group_origin,json=p2mpSubGroupOrigin,proto3" json:"p2mp_sub_group_origin,omitempty"`
	SubGroupId           uint32   `protobuf:"varint,4,opt,name=sub_group_id,json=subGroupId,proto3" json:"sub_group_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RsvpMgmtFilterP2MpIpv4) Reset()         { *m = RsvpMgmtFilterP2MpIpv4{} }
func (m *RsvpMgmtFilterP2MpIpv4) String() string { return proto.CompactTextString(m) }
func (*RsvpMgmtFilterP2MpIpv4) ProtoMessage()    {}
func (*RsvpMgmtFilterP2MpIpv4) Descriptor() ([]byte, []int) {
	return fileDescriptor_49b777e38492e2f5, []int{9}
}

func (m *RsvpMgmtFilterP2MpIpv4) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RsvpMgmtFilterP2MpIpv4.Unmarshal(m, b)
}
func (m *RsvpMgmtFilterP2MpIpv4) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RsvpMgmtFilterP2MpIpv4.Marshal(b, m, deterministic)
}
func (m *RsvpMgmtFilterP2MpIpv4) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RsvpMgmtFilterP2MpIpv4.Merge(m, src)
}
func (m *RsvpMgmtFilterP2MpIpv4) XXX_Size() int {
	return xxx_messageInfo_RsvpMgmtFilterP2MpIpv4.Size(m)
}
func (m *RsvpMgmtFilterP2MpIpv4) XXX_DiscardUnknown() {
	xxx_messageInfo_RsvpMgmtFilterP2MpIpv4.DiscardUnknown(m)
}

var xxx_messageInfo_RsvpMgmtFilterP2MpIpv4 proto.InternalMessageInfo

func (m *RsvpMgmtFilterP2MpIpv4) GetSourceAddress() string {
	if m != nil {
		return m.SourceAddress
	}
	return ""
}

func (m *RsvpMgmtFilterP2MpIpv4) GetSourcePort() uint32 {
	if m != nil {
		return m.SourcePort
	}
	return 0
}

func (m *RsvpMgmtFilterP2MpIpv4) GetP2MpSubGroupOrigin() string {
	if m != nil {
		return m.P2MpSubGroupOrigin
	}
	return ""
}

func (m *RsvpMgmtFilterP2MpIpv4) GetSubGroupId() uint32 {
	if m != nil {
		return m.SubGroupId
	}
	return 0
}

type RsvpFilterUnion struct {
	FilterType           string                  `protobuf:"bytes,1,opt,name=filter_type,json=filterType,proto3" json:"filter_type,omitempty"`
	UdpIpv4Session       *RsvpMgmtFilterIpv4     `protobuf:"bytes,2,opt,name=udp_ipv4_session,json=udpIpv4Session,proto3" json:"udp_ipv4_session,omitempty"`
	P2MpIpv4Session      *RsvpMgmtFilterP2MpIpv4 `protobuf:"bytes,3,opt,name=p2mp_ipv4_session,json=p2mpIpv4Session,proto3" json:"p2mp_ipv4_session,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *RsvpFilterUnion) Reset()         { *m = RsvpFilterUnion{} }
func (m *RsvpFilterUnion) String() string { return proto.CompactTextString(m) }
func (*RsvpFilterUnion) ProtoMessage()    {}
func (*RsvpFilterUnion) Descriptor() ([]byte, []int) {
	return fileDescriptor_49b777e38492e2f5, []int{10}
}

func (m *RsvpFilterUnion) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RsvpFilterUnion.Unmarshal(m, b)
}
func (m *RsvpFilterUnion) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RsvpFilterUnion.Marshal(b, m, deterministic)
}
func (m *RsvpFilterUnion) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RsvpFilterUnion.Merge(m, src)
}
func (m *RsvpFilterUnion) XXX_Size() int {
	return xxx_messageInfo_RsvpFilterUnion.Size(m)
}
func (m *RsvpFilterUnion) XXX_DiscardUnknown() {
	xxx_messageInfo_RsvpFilterUnion.DiscardUnknown(m)
}

var xxx_messageInfo_RsvpFilterUnion proto.InternalMessageInfo

func (m *RsvpFilterUnion) GetFilterType() string {
	if m != nil {
		return m.FilterType
	}
	return ""
}

func (m *RsvpFilterUnion) GetUdpIpv4Session() *RsvpMgmtFilterIpv4 {
	if m != nil {
		return m.UdpIpv4Session
	}
	return nil
}

func (m *RsvpFilterUnion) GetP2MpIpv4Session() *RsvpMgmtFilterP2MpIpv4 {
	if m != nil {
		return m.P2MpIpv4Session
	}
	return nil
}

type RsvpMgmtFilterInfo struct {
	RsvpFilter           *RsvpFilterUnion `protobuf:"bytes,1,opt,name=rsvp_filter,json=rsvpFilter,proto3" json:"rsvp_filter,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *RsvpMgmtFilterInfo) Reset()         { *m = RsvpMgmtFilterInfo{} }
func (m *RsvpMgmtFilterInfo) String() string { return proto.CompactTextString(m) }
func (*RsvpMgmtFilterInfo) ProtoMessage()    {}
func (*RsvpMgmtFilterInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_49b777e38492e2f5, []int{11}
}

func (m *RsvpMgmtFilterInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RsvpMgmtFilterInfo.Unmarshal(m, b)
}
func (m *RsvpMgmtFilterInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RsvpMgmtFilterInfo.Marshal(b, m, deterministic)
}
func (m *RsvpMgmtFilterInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RsvpMgmtFilterInfo.Merge(m, src)
}
func (m *RsvpMgmtFilterInfo) XXX_Size() int {
	return xxx_messageInfo_RsvpMgmtFilterInfo.Size(m)
}
func (m *RsvpMgmtFilterInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_RsvpMgmtFilterInfo.DiscardUnknown(m)
}

var xxx_messageInfo_RsvpMgmtFilterInfo proto.InternalMessageInfo

func (m *RsvpMgmtFilterInfo) GetRsvpFilter() *RsvpFilterUnion {
	if m != nil {
		return m.RsvpFilter
	}
	return nil
}

type RsvpMgmtSessionAttributeFlags struct {
	IsLocalProtect            bool     `protobuf:"varint,1,opt,name=is_local_protect,json=isLocalProtect,proto3" json:"is_local_protect,omitempty"`
	IsNodeProtect             bool     `protobuf:"varint,2,opt,name=is_node_protect,json=isNodeProtect,proto3" json:"is_node_protect,omitempty"`
	IsBandwidthProtect        bool     `protobuf:"varint,3,opt,name=is_bandwidth_protect,json=isBandwidthProtect,proto3" json:"is_bandwidth_protect,omitempty"`
	IsRecordLabels            bool     `protobuf:"varint,4,opt,name=is_record_labels,json=isRecordLabels,proto3" json:"is_record_labels,omitempty"`
	IsSharedExplicitRequested bool     `protobuf:"varint,5,opt,name=is_shared_explicit_requested,json=isSharedExplicitRequested,proto3" json:"is_shared_explicit_requested,omitempty"`
	XXX_NoUnkeyedLiteral      struct{} `json:"-"`
	XXX_unrecognized          []byte   `json:"-"`
	XXX_sizecache             int32    `json:"-"`
}

func (m *RsvpMgmtSessionAttributeFlags) Reset()         { *m = RsvpMgmtSessionAttributeFlags{} }
func (m *RsvpMgmtSessionAttributeFlags) String() string { return proto.CompactTextString(m) }
func (*RsvpMgmtSessionAttributeFlags) ProtoMessage()    {}
func (*RsvpMgmtSessionAttributeFlags) Descriptor() ([]byte, []int) {
	return fileDescriptor_49b777e38492e2f5, []int{12}
}

func (m *RsvpMgmtSessionAttributeFlags) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RsvpMgmtSessionAttributeFlags.Unmarshal(m, b)
}
func (m *RsvpMgmtSessionAttributeFlags) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RsvpMgmtSessionAttributeFlags.Marshal(b, m, deterministic)
}
func (m *RsvpMgmtSessionAttributeFlags) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RsvpMgmtSessionAttributeFlags.Merge(m, src)
}
func (m *RsvpMgmtSessionAttributeFlags) XXX_Size() int {
	return xxx_messageInfo_RsvpMgmtSessionAttributeFlags.Size(m)
}
func (m *RsvpMgmtSessionAttributeFlags) XXX_DiscardUnknown() {
	xxx_messageInfo_RsvpMgmtSessionAttributeFlags.DiscardUnknown(m)
}

var xxx_messageInfo_RsvpMgmtSessionAttributeFlags proto.InternalMessageInfo

func (m *RsvpMgmtSessionAttributeFlags) GetIsLocalProtect() bool {
	if m != nil {
		return m.IsLocalProtect
	}
	return false
}

func (m *RsvpMgmtSessionAttributeFlags) GetIsNodeProtect() bool {
	if m != nil {
		return m.IsNodeProtect
	}
	return false
}

func (m *RsvpMgmtSessionAttributeFlags) GetIsBandwidthProtect() bool {
	if m != nil {
		return m.IsBandwidthProtect
	}
	return false
}

func (m *RsvpMgmtSessionAttributeFlags) GetIsRecordLabels() bool {
	if m != nil {
		return m.IsRecordLabels
	}
	return false
}

func (m *RsvpMgmtSessionAttributeFlags) GetIsSharedExplicitRequested() bool {
	if m != nil {
		return m.IsSharedExplicitRequested
	}
	return false
}

type RsvpMgmtSessionAttribute struct {
	SetupPriority        uint32                         `protobuf:"varint,1,opt,name=setup_priority,json=setupPriority,proto3" json:"setup_priority,omitempty"`
	ReservationPriority  uint32                         `protobuf:"varint,2,opt,name=reservation_priority,json=reservationPriority,proto3" json:"reservation_priority,omitempty"`
	SessAttributeFlags   *RsvpMgmtSessionAttributeFlags `protobuf:"bytes,3,opt,name=sess_attribute_flags,json=sessAttributeFlags,proto3" json:"sess_attribute_flags,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                       `json:"-"`
	XXX_unrecognized     []byte                         `json:"-"`
	XXX_sizecache        int32                          `json:"-"`
}

func (m *RsvpMgmtSessionAttribute) Reset()         { *m = RsvpMgmtSessionAttribute{} }
func (m *RsvpMgmtSessionAttribute) String() string { return proto.CompactTextString(m) }
func (*RsvpMgmtSessionAttribute) ProtoMessage()    {}
func (*RsvpMgmtSessionAttribute) Descriptor() ([]byte, []int) {
	return fileDescriptor_49b777e38492e2f5, []int{13}
}

func (m *RsvpMgmtSessionAttribute) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RsvpMgmtSessionAttribute.Unmarshal(m, b)
}
func (m *RsvpMgmtSessionAttribute) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RsvpMgmtSessionAttribute.Marshal(b, m, deterministic)
}
func (m *RsvpMgmtSessionAttribute) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RsvpMgmtSessionAttribute.Merge(m, src)
}
func (m *RsvpMgmtSessionAttribute) XXX_Size() int {
	return xxx_messageInfo_RsvpMgmtSessionAttribute.Size(m)
}
func (m *RsvpMgmtSessionAttribute) XXX_DiscardUnknown() {
	xxx_messageInfo_RsvpMgmtSessionAttribute.DiscardUnknown(m)
}

var xxx_messageInfo_RsvpMgmtSessionAttribute proto.InternalMessageInfo

func (m *RsvpMgmtSessionAttribute) GetSetupPriority() uint32 {
	if m != nil {
		return m.SetupPriority
	}
	return 0
}

func (m *RsvpMgmtSessionAttribute) GetReservationPriority() uint32 {
	if m != nil {
		return m.ReservationPriority
	}
	return 0
}

func (m *RsvpMgmtSessionAttribute) GetSessAttributeFlags() *RsvpMgmtSessionAttributeFlags {
	if m != nil {
		return m.SessAttributeFlags
	}
	return nil
}

type RsvpMgmtTrafficSpec struct {
	TrafficAverageRate   uint64   `protobuf:"varint,1,opt,name=traffic_average_rate,json=trafficAverageRate,proto3" json:"traffic_average_rate,omitempty"`
	TrafficMaxBurst      uint64   `protobuf:"varint,2,opt,name=traffic_max_burst,json=trafficMaxBurst,proto3" json:"traffic_max_burst,omitempty"`
	TrafficPeakRate      uint64   `protobuf:"varint,3,opt,name=traffic_peak_rate,json=trafficPeakRate,proto3" json:"traffic_peak_rate,omitempty"`
	TrafficMinUnit       uint32   `protobuf:"varint,4,opt,name=traffic_min_unit,json=trafficMinUnit,proto3" json:"traffic_min_unit,omitempty"`
	TrafficMaxUnit       uint32   `protobuf:"varint,5,opt,name=traffic_max_unit,json=trafficMaxUnit,proto3" json:"traffic_max_unit,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RsvpMgmtTrafficSpec) Reset()         { *m = RsvpMgmtTrafficSpec{} }
func (m *RsvpMgmtTrafficSpec) String() string { return proto.CompactTextString(m) }
func (*RsvpMgmtTrafficSpec) ProtoMessage()    {}
func (*RsvpMgmtTrafficSpec) Descriptor() ([]byte, []int) {
	return fileDescriptor_49b777e38492e2f5, []int{14}
}

func (m *RsvpMgmtTrafficSpec) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RsvpMgmtTrafficSpec.Unmarshal(m, b)
}
func (m *RsvpMgmtTrafficSpec) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RsvpMgmtTrafficSpec.Marshal(b, m, deterministic)
}
func (m *RsvpMgmtTrafficSpec) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RsvpMgmtTrafficSpec.Merge(m, src)
}
func (m *RsvpMgmtTrafficSpec) XXX_Size() int {
	return xxx_messageInfo_RsvpMgmtTrafficSpec.Size(m)
}
func (m *RsvpMgmtTrafficSpec) XXX_DiscardUnknown() {
	xxx_messageInfo_RsvpMgmtTrafficSpec.DiscardUnknown(m)
}

var xxx_messageInfo_RsvpMgmtTrafficSpec proto.InternalMessageInfo

func (m *RsvpMgmtTrafficSpec) GetTrafficAverageRate() uint64 {
	if m != nil {
		return m.TrafficAverageRate
	}
	return 0
}

func (m *RsvpMgmtTrafficSpec) GetTrafficMaxBurst() uint64 {
	if m != nil {
		return m.TrafficMaxBurst
	}
	return 0
}

func (m *RsvpMgmtTrafficSpec) GetTrafficPeakRate() uint64 {
	if m != nil {
		return m.TrafficPeakRate
	}
	return 0
}

func (m *RsvpMgmtTrafficSpec) GetTrafficMinUnit() uint32 {
	if m != nil {
		return m.TrafficMinUnit
	}
	return 0
}

func (m *RsvpMgmtTrafficSpec) GetTrafficMaxUnit() uint32 {
	if m != nil {
		return m.TrafficMaxUnit
	}
	return 0
}

type RsvpMgmtTspecG709Otn struct {
	TrafficSignalType    uint32   `protobuf:"varint,1,opt,name=traffic_signal_type,json=trafficSignalType,proto3" json:"traffic_signal_type,omitempty"`
	TrafficNvc           uint32   `protobuf:"varint,2,opt,name=traffic_nvc,json=trafficNvc,proto3" json:"traffic_nvc,omitempty"`
	TrafficMultiplier    uint32   `protobuf:"varint,3,opt,name=traffic_multiplier,json=trafficMultiplier,proto3" json:"traffic_multiplier,omitempty"`
	TrafficBitRate       uint64   `protobuf:"varint,4,opt,name=traffic_bit_rate,json=trafficBitRate,proto3" json:"traffic_bit_rate,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RsvpMgmtTspecG709Otn) Reset()         { *m = RsvpMgmtTspecG709Otn{} }
func (m *RsvpMgmtTspecG709Otn) String() string { return proto.CompactTextString(m) }
func (*RsvpMgmtTspecG709Otn) ProtoMessage()    {}
func (*RsvpMgmtTspecG709Otn) Descriptor() ([]byte, []int) {
	return fileDescriptor_49b777e38492e2f5, []int{15}
}

func (m *RsvpMgmtTspecG709Otn) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RsvpMgmtTspecG709Otn.Unmarshal(m, b)
}
func (m *RsvpMgmtTspecG709Otn) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RsvpMgmtTspecG709Otn.Marshal(b, m, deterministic)
}
func (m *RsvpMgmtTspecG709Otn) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RsvpMgmtTspecG709Otn.Merge(m, src)
}
func (m *RsvpMgmtTspecG709Otn) XXX_Size() int {
	return xxx_messageInfo_RsvpMgmtTspecG709Otn.Size(m)
}
func (m *RsvpMgmtTspecG709Otn) XXX_DiscardUnknown() {
	xxx_messageInfo_RsvpMgmtTspecG709Otn.DiscardUnknown(m)
}

var xxx_messageInfo_RsvpMgmtTspecG709Otn proto.InternalMessageInfo

func (m *RsvpMgmtTspecG709Otn) GetTrafficSignalType() uint32 {
	if m != nil {
		return m.TrafficSignalType
	}
	return 0
}

func (m *RsvpMgmtTspecG709Otn) GetTrafficNvc() uint32 {
	if m != nil {
		return m.TrafficNvc
	}
	return 0
}

func (m *RsvpMgmtTspecG709Otn) GetTrafficMultiplier() uint32 {
	if m != nil {
		return m.TrafficMultiplier
	}
	return 0
}

func (m *RsvpMgmtTspecG709Otn) GetTrafficBitRate() uint64 {
	if m != nil {
		return m.TrafficBitRate
	}
	return 0
}

type RsvpMgmtGenTrafficSpec struct {
	TspecType            string                `protobuf:"bytes,1,opt,name=tspec_type,json=tspecType,proto3" json:"tspec_type,omitempty"`
	G709OtnTspec         *RsvpMgmtTspecG709Otn `protobuf:"bytes,2,opt,name=g709otn_tspec,json=g709otnTspec,proto3" json:"g709otn_tspec,omitempty"`
	IntsrvTspec          *RsvpMgmtTrafficSpec  `protobuf:"bytes,3,opt,name=intsrv_tspec,json=intsrvTspec,proto3" json:"intsrv_tspec,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *RsvpMgmtGenTrafficSpec) Reset()         { *m = RsvpMgmtGenTrafficSpec{} }
func (m *RsvpMgmtGenTrafficSpec) String() string { return proto.CompactTextString(m) }
func (*RsvpMgmtGenTrafficSpec) ProtoMessage()    {}
func (*RsvpMgmtGenTrafficSpec) Descriptor() ([]byte, []int) {
	return fileDescriptor_49b777e38492e2f5, []int{16}
}

func (m *RsvpMgmtGenTrafficSpec) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RsvpMgmtGenTrafficSpec.Unmarshal(m, b)
}
func (m *RsvpMgmtGenTrafficSpec) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RsvpMgmtGenTrafficSpec.Marshal(b, m, deterministic)
}
func (m *RsvpMgmtGenTrafficSpec) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RsvpMgmtGenTrafficSpec.Merge(m, src)
}
func (m *RsvpMgmtGenTrafficSpec) XXX_Size() int {
	return xxx_messageInfo_RsvpMgmtGenTrafficSpec.Size(m)
}
func (m *RsvpMgmtGenTrafficSpec) XXX_DiscardUnknown() {
	xxx_messageInfo_RsvpMgmtGenTrafficSpec.DiscardUnknown(m)
}

var xxx_messageInfo_RsvpMgmtGenTrafficSpec proto.InternalMessageInfo

func (m *RsvpMgmtGenTrafficSpec) GetTspecType() string {
	if m != nil {
		return m.TspecType
	}
	return ""
}

func (m *RsvpMgmtGenTrafficSpec) GetG709OtnTspec() *RsvpMgmtTspecG709Otn {
	if m != nil {
		return m.G709OtnTspec
	}
	return nil
}

func (m *RsvpMgmtGenTrafficSpec) GetIntsrvTspec() *RsvpMgmtTrafficSpec {
	if m != nil {
		return m.IntsrvTspec
	}
	return nil
}

type RsvpMgmtPathFlags struct {
	IsNonRsvpHopUpstream bool     `protobuf:"varint,1,opt,name=is_non_rsvp_hop_upstream,json=isNonRsvpHopUpstream,proto3" json:"is_non_rsvp_hop_upstream,omitempty"`
	IsLocalSender        bool     `protobuf:"varint,2,opt,name=is_local_sender,json=isLocalSender,proto3" json:"is_local_sender,omitempty"`
	IsMessageIdValid     bool     `protobuf:"varint,3,opt,name=is_message_id_valid,json=isMessageIdValid,proto3" json:"is_message_id_valid,omitempty"`
	IsLocalRepair        bool     `protobuf:"varint,4,opt,name=is_local_repair,json=isLocalRepair,proto3" json:"is_local_repair,omitempty"`
	IsBidirectional      bool     `protobuf:"varint,5,opt,name=is_bidirectional,json=isBidirectional,proto3" json:"is_bidirectional,omitempty"`
	IsLockout            bool     `protobuf:"varint,6,opt,name=is_lockout,json=isLockout,proto3" json:"is_lockout,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RsvpMgmtPathFlags) Reset()         { *m = RsvpMgmtPathFlags{} }
func (m *RsvpMgmtPathFlags) String() string { return proto.CompactTextString(m) }
func (*RsvpMgmtPathFlags) ProtoMessage()    {}
func (*RsvpMgmtPathFlags) Descriptor() ([]byte, []int) {
	return fileDescriptor_49b777e38492e2f5, []int{17}
}

func (m *RsvpMgmtPathFlags) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RsvpMgmtPathFlags.Unmarshal(m, b)
}
func (m *RsvpMgmtPathFlags) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RsvpMgmtPathFlags.Marshal(b, m, deterministic)
}
func (m *RsvpMgmtPathFlags) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RsvpMgmtPathFlags.Merge(m, src)
}
func (m *RsvpMgmtPathFlags) XXX_Size() int {
	return xxx_messageInfo_RsvpMgmtPathFlags.Size(m)
}
func (m *RsvpMgmtPathFlags) XXX_DiscardUnknown() {
	xxx_messageInfo_RsvpMgmtPathFlags.DiscardUnknown(m)
}

var xxx_messageInfo_RsvpMgmtPathFlags proto.InternalMessageInfo

func (m *RsvpMgmtPathFlags) GetIsNonRsvpHopUpstream() bool {
	if m != nil {
		return m.IsNonRsvpHopUpstream
	}
	return false
}

func (m *RsvpMgmtPathFlags) GetIsLocalSender() bool {
	if m != nil {
		return m.IsLocalSender
	}
	return false
}

func (m *RsvpMgmtPathFlags) GetIsMessageIdValid() bool {
	if m != nil {
		return m.IsMessageIdValid
	}
	return false
}

func (m *RsvpMgmtPathFlags) GetIsLocalRepair() bool {
	if m != nil {
		return m.IsLocalRepair
	}
	return false
}

func (m *RsvpMgmtPathFlags) GetIsBidirectional() bool {
	if m != nil {
		return m.IsBidirectional
	}
	return false
}

func (m *RsvpMgmtPathFlags) GetIsLockout() bool {
	if m != nil {
		return m.IsLockout
	}
	return false
}

type RsvpMgmtHopInfo struct {
	NeighborAddress              string   `protobuf:"bytes,1,opt,name=neighbor_address,json=neighborAddress,proto3" json:"neighbor_address,omitempty"`
	NeighborLogicalInterfaceName string   `protobuf:"bytes,2,opt,name=neighbor_logical_interface_name,json=neighborLogicalInterfaceName,proto3" json:"neighbor_logical_interface_name,omitempty"`
	XXX_NoUnkeyedLiteral         struct{} `json:"-"`
	XXX_unrecognized             []byte   `json:"-"`
	XXX_sizecache                int32    `json:"-"`
}

func (m *RsvpMgmtHopInfo) Reset()         { *m = RsvpMgmtHopInfo{} }
func (m *RsvpMgmtHopInfo) String() string { return proto.CompactTextString(m) }
func (*RsvpMgmtHopInfo) ProtoMessage()    {}
func (*RsvpMgmtHopInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_49b777e38492e2f5, []int{18}
}

func (m *RsvpMgmtHopInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RsvpMgmtHopInfo.Unmarshal(m, b)
}
func (m *RsvpMgmtHopInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RsvpMgmtHopInfo.Marshal(b, m, deterministic)
}
func (m *RsvpMgmtHopInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RsvpMgmtHopInfo.Merge(m, src)
}
func (m *RsvpMgmtHopInfo) XXX_Size() int {
	return xxx_messageInfo_RsvpMgmtHopInfo.Size(m)
}
func (m *RsvpMgmtHopInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_RsvpMgmtHopInfo.DiscardUnknown(m)
}

var xxx_messageInfo_RsvpMgmtHopInfo proto.InternalMessageInfo

func (m *RsvpMgmtHopInfo) GetNeighborAddress() string {
	if m != nil {
		return m.NeighborAddress
	}
	return ""
}

func (m *RsvpMgmtHopInfo) GetNeighborLogicalInterfaceName() string {
	if m != nil {
		return m.NeighborLogicalInterfaceName
	}
	return ""
}

type RsvpMgmtPolicySources struct {
	IsTeLink             bool     `protobuf:"varint,1,opt,name=is_te_link,json=isTeLink,proto3" json:"is_te_link,omitempty"`
	IsLocal              bool     `protobuf:"varint,2,opt,name=is_local,json=isLocal,proto3" json:"is_local,omitempty"`
	IsCops               bool     `protobuf:"varint,3,opt,name=is_cops,json=isCops,proto3" json:"is_cops,omitempty"`
	IsDefault            bool     `protobuf:"varint,4,opt,name=is_default,json=isDefault,proto3" json:"is_default,omitempty"`
	IsCable              bool     `protobuf:"varint,5,opt,name=is_cable,json=isCable,proto3" json:"is_cable,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RsvpMgmtPolicySources) Reset()         { *m = RsvpMgmtPolicySources{} }
func (m *RsvpMgmtPolicySources) String() string { return proto.CompactTextString(m) }
func (*RsvpMgmtPolicySources) ProtoMessage()    {}
func (*RsvpMgmtPolicySources) Descriptor() ([]byte, []int) {
	return fileDescriptor_49b777e38492e2f5, []int{19}
}

func (m *RsvpMgmtPolicySources) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RsvpMgmtPolicySources.Unmarshal(m, b)
}
func (m *RsvpMgmtPolicySources) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RsvpMgmtPolicySources.Marshal(b, m, deterministic)
}
func (m *RsvpMgmtPolicySources) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RsvpMgmtPolicySources.Merge(m, src)
}
func (m *RsvpMgmtPolicySources) XXX_Size() int {
	return xxx_messageInfo_RsvpMgmtPolicySources.Size(m)
}
func (m *RsvpMgmtPolicySources) XXX_DiscardUnknown() {
	xxx_messageInfo_RsvpMgmtPolicySources.DiscardUnknown(m)
}

var xxx_messageInfo_RsvpMgmtPolicySources proto.InternalMessageInfo

func (m *RsvpMgmtPolicySources) GetIsTeLink() bool {
	if m != nil {
		return m.IsTeLink
	}
	return false
}

func (m *RsvpMgmtPolicySources) GetIsLocal() bool {
	if m != nil {
		return m.IsLocal
	}
	return false
}

func (m *RsvpMgmtPolicySources) GetIsCops() bool {
	if m != nil {
		return m.IsCops
	}
	return false
}

func (m *RsvpMgmtPolicySources) GetIsDefault() bool {
	if m != nil {
		return m.IsDefault
	}
	return false
}

func (m *RsvpMgmtPolicySources) GetIsCable() bool {
	if m != nil {
		return m.IsCable
	}
	return false
}

type RsvpMgmtHeaderInfo struct {
	RsvpVersion          uint32   `protobuf:"varint,1,opt,name=rsvp_version,json=rsvpVersion,proto3" json:"rsvp_version,omitempty"`
	RsvpHeaderFlags      uint32   `protobuf:"varint,2,opt,name=rsvp_header_flags,json=rsvpHeaderFlags,proto3" json:"rsvp_header_flags,omitempty"`
	RsvpTtl              uint32   `protobuf:"varint,3,opt,name=rsvp_ttl,json=rsvpTtl,proto3" json:"rsvp_ttl,omitempty"`
	RsvpMessageType      uint32   `protobuf:"varint,4,opt,name=rsvp_message_type,json=rsvpMessageType,proto3" json:"rsvp_message_type,omitempty"`
	IpTos                uint32   `protobuf:"varint,5,opt,name=ip_tos,json=ipTos,proto3" json:"ip_tos,omitempty"`
	IpTtl                uint32   `protobuf:"varint,6,opt,name=ip_ttl,json=ipTtl,proto3" json:"ip_ttl,omitempty"`
	IpSourceAddress      string   `protobuf:"bytes,7,opt,name=ip_source_address,json=ipSourceAddress,proto3" json:"ip_source_address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RsvpMgmtHeaderInfo) Reset()         { *m = RsvpMgmtHeaderInfo{} }
func (m *RsvpMgmtHeaderInfo) String() string { return proto.CompactTextString(m) }
func (*RsvpMgmtHeaderInfo) ProtoMessage()    {}
func (*RsvpMgmtHeaderInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_49b777e38492e2f5, []int{20}
}

func (m *RsvpMgmtHeaderInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RsvpMgmtHeaderInfo.Unmarshal(m, b)
}
func (m *RsvpMgmtHeaderInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RsvpMgmtHeaderInfo.Marshal(b, m, deterministic)
}
func (m *RsvpMgmtHeaderInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RsvpMgmtHeaderInfo.Merge(m, src)
}
func (m *RsvpMgmtHeaderInfo) XXX_Size() int {
	return xxx_messageInfo_RsvpMgmtHeaderInfo.Size(m)
}
func (m *RsvpMgmtHeaderInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_RsvpMgmtHeaderInfo.DiscardUnknown(m)
}

var xxx_messageInfo_RsvpMgmtHeaderInfo proto.InternalMessageInfo

func (m *RsvpMgmtHeaderInfo) GetRsvpVersion() uint32 {
	if m != nil {
		return m.RsvpVersion
	}
	return 0
}

func (m *RsvpMgmtHeaderInfo) GetRsvpHeaderFlags() uint32 {
	if m != nil {
		return m.RsvpHeaderFlags
	}
	return 0
}

func (m *RsvpMgmtHeaderInfo) GetRsvpTtl() uint32 {
	if m != nil {
		return m.RsvpTtl
	}
	return 0
}

func (m *RsvpMgmtHeaderInfo) GetRsvpMessageType() uint32 {
	if m != nil {
		return m.RsvpMessageType
	}
	return 0
}

func (m *RsvpMgmtHeaderInfo) GetIpTos() uint32 {
	if m != nil {
		return m.IpTos
	}
	return 0
}

func (m *RsvpMgmtHeaderInfo) GetIpTtl() uint32 {
	if m != nil {
		return m.IpTtl
	}
	return 0
}

func (m *RsvpMgmtHeaderInfo) GetIpSourceAddress() string {
	if m != nil {
		return m.IpSourceAddress
	}
	return ""
}

type RsvpMgmtTimespec struct {
	Seconds              int32    `protobuf:"zigzag32,1,opt,name=seconds,proto3" json:"seconds,omitempty"`
	Nanoseconds          int32    `protobuf:"zigzag32,2,opt,name=nanoseconds,proto3" json:"nanoseconds,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RsvpMgmtTimespec) Reset()         { *m = RsvpMgmtTimespec{} }
func (m *RsvpMgmtTimespec) String() string { return proto.CompactTextString(m) }
func (*RsvpMgmtTimespec) ProtoMessage()    {}
func (*RsvpMgmtTimespec) Descriptor() ([]byte, []int) {
	return fileDescriptor_49b777e38492e2f5, []int{21}
}

func (m *RsvpMgmtTimespec) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RsvpMgmtTimespec.Unmarshal(m, b)
}
func (m *RsvpMgmtTimespec) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RsvpMgmtTimespec.Marshal(b, m, deterministic)
}
func (m *RsvpMgmtTimespec) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RsvpMgmtTimespec.Merge(m, src)
}
func (m *RsvpMgmtTimespec) XXX_Size() int {
	return xxx_messageInfo_RsvpMgmtTimespec.Size(m)
}
func (m *RsvpMgmtTimespec) XXX_DiscardUnknown() {
	xxx_messageInfo_RsvpMgmtTimespec.DiscardUnknown(m)
}

var xxx_messageInfo_RsvpMgmtTimespec proto.InternalMessageInfo

func (m *RsvpMgmtTimespec) GetSeconds() int32 {
	if m != nil {
		return m.Seconds
	}
	return 0
}

func (m *RsvpMgmtTimespec) GetNanoseconds() int32 {
	if m != nil {
		return m.Nanoseconds
	}
	return 0
}

type RsvpMgmtPolicyFlags struct {
	IsAccepted           bool     `protobuf:"varint,1,opt,name=is_accepted,json=isAccepted,proto3" json:"is_accepted,omitempty"`
	IsInstalled          bool     `protobuf:"varint,2,opt,name=is_installed,json=isInstalled,proto3" json:"is_installed,omitempty"`
	IsForwarding         bool     `protobuf:"varint,3,opt,name=is_forwarding,json=isForwarding,proto3" json:"is_forwarding,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RsvpMgmtPolicyFlags) Reset()         { *m = RsvpMgmtPolicyFlags{} }
func (m *RsvpMgmtPolicyFlags) String() string { return proto.CompactTextString(m) }
func (*RsvpMgmtPolicyFlags) ProtoMessage()    {}
func (*RsvpMgmtPolicyFlags) Descriptor() ([]byte, []int) {
	return fileDescriptor_49b777e38492e2f5, []int{22}
}

func (m *RsvpMgmtPolicyFlags) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RsvpMgmtPolicyFlags.Unmarshal(m, b)
}
func (m *RsvpMgmtPolicyFlags) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RsvpMgmtPolicyFlags.Marshal(b, m, deterministic)
}
func (m *RsvpMgmtPolicyFlags) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RsvpMgmtPolicyFlags.Merge(m, src)
}
func (m *RsvpMgmtPolicyFlags) XXX_Size() int {
	return xxx_messageInfo_RsvpMgmtPolicyFlags.Size(m)
}
func (m *RsvpMgmtPolicyFlags) XXX_DiscardUnknown() {
	xxx_messageInfo_RsvpMgmtPolicyFlags.DiscardUnknown(m)
}

var xxx_messageInfo_RsvpMgmtPolicyFlags proto.InternalMessageInfo

func (m *RsvpMgmtPolicyFlags) GetIsAccepted() bool {
	if m != nil {
		return m.IsAccepted
	}
	return false
}

func (m *RsvpMgmtPolicyFlags) GetIsInstalled() bool {
	if m != nil {
		return m.IsInstalled
	}
	return false
}

func (m *RsvpMgmtPolicyFlags) GetIsForwarding() bool {
	if m != nil {
		return m.IsForwarding
	}
	return false
}

type RsvpMgmtPolicyQueryFlags struct {
	IsNeeded             bool     `protobuf:"varint,1,opt,name=is_needed,json=isNeeded,proto3" json:"is_needed,omitempty"`
	IsReportRequired     bool     `protobuf:"varint,2,opt,name=is_report_required,json=isReportRequired,proto3" json:"is_report_required,omitempty"`
	IsResync             bool     `protobuf:"varint,3,opt,name=is_resync,json=isResync,proto3" json:"is_resync,omitempty"`
	IsBypass             bool     `protobuf:"varint,4,opt,name=is_bypass,json=isBypass,proto3" json:"is_bypass,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RsvpMgmtPolicyQueryFlags) Reset()         { *m = RsvpMgmtPolicyQueryFlags{} }
func (m *RsvpMgmtPolicyQueryFlags) String() string { return proto.CompactTextString(m) }
func (*RsvpMgmtPolicyQueryFlags) ProtoMessage()    {}
func (*RsvpMgmtPolicyQueryFlags) Descriptor() ([]byte, []int) {
	return fileDescriptor_49b777e38492e2f5, []int{23}
}

func (m *RsvpMgmtPolicyQueryFlags) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RsvpMgmtPolicyQueryFlags.Unmarshal(m, b)
}
func (m *RsvpMgmtPolicyQueryFlags) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RsvpMgmtPolicyQueryFlags.Marshal(b, m, deterministic)
}
func (m *RsvpMgmtPolicyQueryFlags) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RsvpMgmtPolicyQueryFlags.Merge(m, src)
}
func (m *RsvpMgmtPolicyQueryFlags) XXX_Size() int {
	return xxx_messageInfo_RsvpMgmtPolicyQueryFlags.Size(m)
}
func (m *RsvpMgmtPolicyQueryFlags) XXX_DiscardUnknown() {
	xxx_messageInfo_RsvpMgmtPolicyQueryFlags.DiscardUnknown(m)
}

var xxx_messageInfo_RsvpMgmtPolicyQueryFlags proto.InternalMessageInfo

func (m *RsvpMgmtPolicyQueryFlags) GetIsNeeded() bool {
	if m != nil {
		return m.IsNeeded
	}
	return false
}

func (m *RsvpMgmtPolicyQueryFlags) GetIsReportRequired() bool {
	if m != nil {
		return m.IsReportRequired
	}
	return false
}

func (m *RsvpMgmtPolicyQueryFlags) GetIsResync() bool {
	if m != nil {
		return m.IsResync
	}
	return false
}

func (m *RsvpMgmtPolicyQueryFlags) GetIsBypass() bool {
	if m != nil {
		return m.IsBypass
	}
	return false
}

type RsvpPathForwardingContext struct {
	OutputInterface      string                    `protobuf:"bytes,1,opt,name=output_interface,json=outputInterface,proto3" json:"output_interface,omitempty"`
	PolicyFlags          *RsvpMgmtPolicyFlags      `protobuf:"bytes,2,opt,name=policy_flags,json=policyFlags,proto3" json:"policy_flags,omitempty"`
	PolicyQueryFlags     *RsvpMgmtPolicyQueryFlags `protobuf:"bytes,3,opt,name=policy_query_flags,json=policyQueryFlags,proto3" json:"policy_query_flags,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *RsvpPathForwardingContext) Reset()         { *m = RsvpPathForwardingContext{} }
func (m *RsvpPathForwardingContext) String() string { return proto.CompactTextString(m) }
func (*RsvpPathForwardingContext) ProtoMessage()    {}
func (*RsvpPathForwardingContext) Descriptor() ([]byte, []int) {
	return fileDescriptor_49b777e38492e2f5, []int{24}
}

func (m *RsvpPathForwardingContext) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RsvpPathForwardingContext.Unmarshal(m, b)
}
func (m *RsvpPathForwardingContext) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RsvpPathForwardingContext.Marshal(b, m, deterministic)
}
func (m *RsvpPathForwardingContext) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RsvpPathForwardingContext.Merge(m, src)
}
func (m *RsvpPathForwardingContext) XXX_Size() int {
	return xxx_messageInfo_RsvpPathForwardingContext.Size(m)
}
func (m *RsvpPathForwardingContext) XXX_DiscardUnknown() {
	xxx_messageInfo_RsvpPathForwardingContext.DiscardUnknown(m)
}

var xxx_messageInfo_RsvpPathForwardingContext proto.InternalMessageInfo

func (m *RsvpPathForwardingContext) GetOutputInterface() string {
	if m != nil {
		return m.OutputInterface
	}
	return ""
}

func (m *RsvpPathForwardingContext) GetPolicyFlags() *RsvpMgmtPolicyFlags {
	if m != nil {
		return m.PolicyFlags
	}
	return nil
}

func (m *RsvpPathForwardingContext) GetPolicyQueryFlags() *RsvpMgmtPolicyQueryFlags {
	if m != nil {
		return m.PolicyQueryFlags
	}
	return nil
}

type RsvpMgmtGeneralizedLabel struct {
	Value                []uint32 `protobuf:"varint,1,rep,packed,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RsvpMgmtGeneralizedLabel) Reset()         { *m = RsvpMgmtGeneralizedLabel{} }
func (m *RsvpMgmtGeneralizedLabel) String() string { return proto.CompactTextString(m) }
func (*RsvpMgmtGeneralizedLabel) ProtoMessage()    {}
func (*RsvpMgmtGeneralizedLabel) Descriptor() ([]byte, []int) {
	return fileDescriptor_49b777e38492e2f5, []int{25}
}

func (m *RsvpMgmtGeneralizedLabel) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RsvpMgmtGeneralizedLabel.Unmarshal(m, b)
}
func (m *RsvpMgmtGeneralizedLabel) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RsvpMgmtGeneralizedLabel.Marshal(b, m, deterministic)
}
func (m *RsvpMgmtGeneralizedLabel) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RsvpMgmtGeneralizedLabel.Merge(m, src)
}
func (m *RsvpMgmtGeneralizedLabel) XXX_Size() int {
	return xxx_messageInfo_RsvpMgmtGeneralizedLabel.Size(m)
}
func (m *RsvpMgmtGeneralizedLabel) XXX_DiscardUnknown() {
	xxx_messageInfo_RsvpMgmtGeneralizedLabel.DiscardUnknown(m)
}

var xxx_messageInfo_RsvpMgmtGeneralizedLabel proto.InternalMessageInfo

func (m *RsvpMgmtGeneralizedLabel) GetValue() []uint32 {
	if m != nil {
		return m.Value
	}
	return nil
}

type RsvpMgmtGenericLabel struct {
	GenericLabelType     string                    `protobuf:"bytes,1,opt,name=generic_label_type,json=genericLabelType,proto3" json:"generic_label_type,omitempty"`
	GeneralizedLabel     *RsvpMgmtGeneralizedLabel `protobuf:"bytes,2,opt,name=generalized_label,json=generalizedLabel,proto3" json:"generalized_label,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *RsvpMgmtGenericLabel) Reset()         { *m = RsvpMgmtGenericLabel{} }
func (m *RsvpMgmtGenericLabel) String() string { return proto.CompactTextString(m) }
func (*RsvpMgmtGenericLabel) ProtoMessage()    {}
func (*RsvpMgmtGenericLabel) Descriptor() ([]byte, []int) {
	return fileDescriptor_49b777e38492e2f5, []int{26}
}

func (m *RsvpMgmtGenericLabel) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RsvpMgmtGenericLabel.Unmarshal(m, b)
}
func (m *RsvpMgmtGenericLabel) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RsvpMgmtGenericLabel.Marshal(b, m, deterministic)
}
func (m *RsvpMgmtGenericLabel) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RsvpMgmtGenericLabel.Merge(m, src)
}
func (m *RsvpMgmtGenericLabel) XXX_Size() int {
	return xxx_messageInfo_RsvpMgmtGenericLabel.Size(m)
}
func (m *RsvpMgmtGenericLabel) XXX_DiscardUnknown() {
	xxx_messageInfo_RsvpMgmtGenericLabel.DiscardUnknown(m)
}

var xxx_messageInfo_RsvpMgmtGenericLabel proto.InternalMessageInfo

func (m *RsvpMgmtGenericLabel) GetGenericLabelType() string {
	if m != nil {
		return m.GenericLabelType
	}
	return ""
}

func (m *RsvpMgmtGenericLabel) GetGeneralizedLabel() *RsvpMgmtGeneralizedLabel {
	if m != nil {
		return m.GeneralizedLabel
	}
	return nil
}

type RsvpMgmtLabelInfo struct {
	IsValid                        bool                  `protobuf:"varint,1,opt,name=is_valid,json=isValid,proto3" json:"is_valid,omitempty"`
	LocalDownstreamLabel           uint32                `protobuf:"varint,2,opt,name=local_downstream_label,json=localDownstreamLabel,proto3" json:"local_downstream_label,omitempty"`
	GenericLocalDownstreamLabel    *RsvpMgmtGenericLabel `protobuf:"bytes,3,opt,name=generic_local_downstream_label,json=genericLocalDownstreamLabel,proto3" json:"generic_local_downstream_label,omitempty"`
	OutgoingDownstreamLabel        uint32                `protobuf:"varint,4,opt,name=outgoing_downstream_label,json=outgoingDownstreamLabel,proto3" json:"outgoing_downstream_label,omitempty"`
	GenericOutgoingDownstreamLabel *RsvpMgmtGenericLabel `protobuf:"bytes,5,opt,name=generic_outgoing_downstream_label,json=genericOutgoingDownstreamLabel,proto3" json:"generic_outgoing_downstream_label,omitempty"`
	MergePointLabel                uint32                `protobuf:"varint,6,opt,name=merge_point_label,json=mergePointLabel,proto3" json:"merge_point_label,omitempty"`
	GenericMergePointLabel         *RsvpMgmtGenericLabel `protobuf:"bytes,7,opt,name=generic_merge_point_label,json=genericMergePointLabel,proto3" json:"generic_merge_point_label,omitempty"`
	OutgoingUpstreamLabel          uint32                `protobuf:"varint,8,opt,name=outgoing_upstream_label,json=outgoingUpstreamLabel,proto3" json:"outgoing_upstream_label,omitempty"`
	GenericOutgoingUpstreamLabel   *RsvpMgmtGenericLabel `protobuf:"bytes,9,opt,name=generic_outgoing_upstream_label,json=genericOutgoingUpstreamLabel,proto3" json:"generic_outgoing_upstream_label,omitempty"`
	LocalUpstreamLabel             uint32                `protobuf:"varint,10,opt,name=local_upstream_label,json=localUpstreamLabel,proto3" json:"local_upstream_label,omitempty"`
	GenericLocalUpstreamLabel      *RsvpMgmtGenericLabel `protobuf:"bytes,11,opt,name=generic_local_upstream_label,json=genericLocalUpstreamLabel,proto3" json:"generic_local_upstream_label,omitempty"`
	RecoveryLabel                  uint32                `protobuf:"varint,12,opt,name=recovery_label,json=recoveryLabel,proto3" json:"recovery_label,omitempty"`
	LspWrapLabel                   uint32                `protobuf:"varint,13,opt,name=lsp_wrap_label,json=lspWrapLabel,proto3" json:"lsp_wrap_label,omitempty"`
	GenericRecoveryLabel           *RsvpMgmtGenericLabel `protobuf:"bytes,14,opt,name=generic_recovery_label,json=genericRecoveryLabel,proto3" json:"generic_recovery_label,omitempty"`
	XXX_NoUnkeyedLiteral           struct{}              `json:"-"`
	XXX_unrecognized               []byte                `json:"-"`
	XXX_sizecache                  int32                 `json:"-"`
}

func (m *RsvpMgmtLabelInfo) Reset()         { *m = RsvpMgmtLabelInfo{} }
func (m *RsvpMgmtLabelInfo) String() string { return proto.CompactTextString(m) }
func (*RsvpMgmtLabelInfo) ProtoMessage()    {}
func (*RsvpMgmtLabelInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_49b777e38492e2f5, []int{27}
}

func (m *RsvpMgmtLabelInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RsvpMgmtLabelInfo.Unmarshal(m, b)
}
func (m *RsvpMgmtLabelInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RsvpMgmtLabelInfo.Marshal(b, m, deterministic)
}
func (m *RsvpMgmtLabelInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RsvpMgmtLabelInfo.Merge(m, src)
}
func (m *RsvpMgmtLabelInfo) XXX_Size() int {
	return xxx_messageInfo_RsvpMgmtLabelInfo.Size(m)
}
func (m *RsvpMgmtLabelInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_RsvpMgmtLabelInfo.DiscardUnknown(m)
}

var xxx_messageInfo_RsvpMgmtLabelInfo proto.InternalMessageInfo

func (m *RsvpMgmtLabelInfo) GetIsValid() bool {
	if m != nil {
		return m.IsValid
	}
	return false
}

func (m *RsvpMgmtLabelInfo) GetLocalDownstreamLabel() uint32 {
	if m != nil {
		return m.LocalDownstreamLabel
	}
	return 0
}

func (m *RsvpMgmtLabelInfo) GetGenericLocalDownstreamLabel() *RsvpMgmtGenericLabel {
	if m != nil {
		return m.GenericLocalDownstreamLabel
	}
	return nil
}

func (m *RsvpMgmtLabelInfo) GetOutgoingDownstreamLabel() uint32 {
	if m != nil {
		return m.OutgoingDownstreamLabel
	}
	return 0
}

func (m *RsvpMgmtLabelInfo) GetGenericOutgoingDownstreamLabel() *RsvpMgmtGenericLabel {
	if m != nil {
		return m.GenericOutgoingDownstreamLabel
	}
	return nil
}

func (m *RsvpMgmtLabelInfo) GetMergePointLabel() uint32 {
	if m != nil {
		return m.MergePointLabel
	}
	return 0
}

func (m *RsvpMgmtLabelInfo) GetGenericMergePointLabel() *RsvpMgmtGenericLabel {
	if m != nil {
		return m.GenericMergePointLabel
	}
	return nil
}

func (m *RsvpMgmtLabelInfo) GetOutgoingUpstreamLabel() uint32 {
	if m != nil {
		return m.OutgoingUpstreamLabel
	}
	return 0
}

func (m *RsvpMgmtLabelInfo) GetGenericOutgoingUpstreamLabel() *RsvpMgmtGenericLabel {
	if m != nil {
		return m.GenericOutgoingUpstreamLabel
	}
	return nil
}

func (m *RsvpMgmtLabelInfo) GetLocalUpstreamLabel() uint32 {
	if m != nil {
		return m.LocalUpstreamLabel
	}
	return 0
}

func (m *RsvpMgmtLabelInfo) GetGenericLocalUpstreamLabel() *RsvpMgmtGenericLabel {
	if m != nil {
		return m.GenericLocalUpstreamLabel
	}
	return nil
}

func (m *RsvpMgmtLabelInfo) GetRecoveryLabel() uint32 {
	if m != nil {
		return m.RecoveryLabel
	}
	return 0
}

func (m *RsvpMgmtLabelInfo) GetLspWrapLabel() uint32 {
	if m != nil {
		return m.LspWrapLabel
	}
	return 0
}

func (m *RsvpMgmtLabelInfo) GetGenericRecoveryLabel() *RsvpMgmtGenericLabel {
	if m != nil {
		return m.GenericRecoveryLabel
	}
	return nil
}

type RsvpMgmtCtInfo struct {
	IsClassTypeInfoValid bool     `protobuf:"varint,1,opt,name=is_class_type_info_valid,json=isClassTypeInfoValid,proto3" json:"is_class_type_info_valid,omitempty"`
	ClassType            uint32   `protobuf:"varint,2,opt,name=class_type,json=classType,proto3" json:"class_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RsvpMgmtCtInfo) Reset()         { *m = RsvpMgmtCtInfo{} }
func (m *RsvpMgmtCtInfo) String() string { return proto.CompactTextString(m) }
func (*RsvpMgmtCtInfo) ProtoMessage()    {}
func (*RsvpMgmtCtInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_49b777e38492e2f5, []int{28}
}

func (m *RsvpMgmtCtInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RsvpMgmtCtInfo.Unmarshal(m, b)
}
func (m *RsvpMgmtCtInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RsvpMgmtCtInfo.Marshal(b, m, deterministic)
}
func (m *RsvpMgmtCtInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RsvpMgmtCtInfo.Merge(m, src)
}
func (m *RsvpMgmtCtInfo) XXX_Size() int {
	return xxx_messageInfo_RsvpMgmtCtInfo.Size(m)
}
func (m *RsvpMgmtCtInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_RsvpMgmtCtInfo.DiscardUnknown(m)
}

var xxx_messageInfo_RsvpMgmtCtInfo proto.InternalMessageInfo

func (m *RsvpMgmtCtInfo) GetIsClassTypeInfoValid() bool {
	if m != nil {
		return m.IsClassTypeInfoValid
	}
	return false
}

func (m *RsvpMgmtCtInfo) GetClassType() uint32 {
	if m != nil {
		return m.ClassType
	}
	return 0
}

type RsvpMgmtEroIpv4Subobj struct {
	IsStrictRoute        bool     `protobuf:"varint,1,opt,name=is_strict_route,json=isStrictRoute,proto3" json:"is_strict_route,omitempty"`
	EroAddress           string   `protobuf:"bytes,2,opt,name=ero_address,json=eroAddress,proto3" json:"ero_address,omitempty"`
	PrefixLength         uint32   `protobuf:"varint,3,opt,name=prefix_length,json=prefixLength,proto3" json:"prefix_length,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RsvpMgmtEroIpv4Subobj) Reset()         { *m = RsvpMgmtEroIpv4Subobj{} }
func (m *RsvpMgmtEroIpv4Subobj) String() string { return proto.CompactTextString(m) }
func (*RsvpMgmtEroIpv4Subobj) ProtoMessage()    {}
func (*RsvpMgmtEroIpv4Subobj) Descriptor() ([]byte, []int) {
	return fileDescriptor_49b777e38492e2f5, []int{29}
}

func (m *RsvpMgmtEroIpv4Subobj) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RsvpMgmtEroIpv4Subobj.Unmarshal(m, b)
}
func (m *RsvpMgmtEroIpv4Subobj) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RsvpMgmtEroIpv4Subobj.Marshal(b, m, deterministic)
}
func (m *RsvpMgmtEroIpv4Subobj) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RsvpMgmtEroIpv4Subobj.Merge(m, src)
}
func (m *RsvpMgmtEroIpv4Subobj) XXX_Size() int {
	return xxx_messageInfo_RsvpMgmtEroIpv4Subobj.Size(m)
}
func (m *RsvpMgmtEroIpv4Subobj) XXX_DiscardUnknown() {
	xxx_messageInfo_RsvpMgmtEroIpv4Subobj.DiscardUnknown(m)
}

var xxx_messageInfo_RsvpMgmtEroIpv4Subobj proto.InternalMessageInfo

func (m *RsvpMgmtEroIpv4Subobj) GetIsStrictRoute() bool {
	if m != nil {
		return m.IsStrictRoute
	}
	return false
}

func (m *RsvpMgmtEroIpv4Subobj) GetEroAddress() string {
	if m != nil {
		return m.EroAddress
	}
	return ""
}

func (m *RsvpMgmtEroIpv4Subobj) GetPrefixLength() uint32 {
	if m != nil {
		return m.PrefixLength
	}
	return 0
}

type RsvpMgmtEroUnnumSubobj struct {
	IsStrictRoute        bool     `protobuf:"varint,1,opt,name=is_strict_route,json=isStrictRoute,proto3" json:"is_strict_route,omitempty"`
	EroInterfaceId       uint32   `protobuf:"varint,2,opt,name=ero_interface_id,json=eroInterfaceId,proto3" json:"ero_interface_id,omitempty"`
	EroRouterId          string   `protobuf:"bytes,3,opt,name=ero_router_id,json=eroRouterId,proto3" json:"ero_router_id,omitempty"`
	Status               string   `protobuf:"bytes,4,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RsvpMgmtEroUnnumSubobj) Reset()         { *m = RsvpMgmtEroUnnumSubobj{} }
func (m *RsvpMgmtEroUnnumSubobj) String() string { return proto.CompactTextString(m) }
func (*RsvpMgmtEroUnnumSubobj) ProtoMessage()    {}
func (*RsvpMgmtEroUnnumSubobj) Descriptor() ([]byte, []int) {
	return fileDescriptor_49b777e38492e2f5, []int{30}
}

func (m *RsvpMgmtEroUnnumSubobj) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RsvpMgmtEroUnnumSubobj.Unmarshal(m, b)
}
func (m *RsvpMgmtEroUnnumSubobj) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RsvpMgmtEroUnnumSubobj.Marshal(b, m, deterministic)
}
func (m *RsvpMgmtEroUnnumSubobj) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RsvpMgmtEroUnnumSubobj.Merge(m, src)
}
func (m *RsvpMgmtEroUnnumSubobj) XXX_Size() int {
	return xxx_messageInfo_RsvpMgmtEroUnnumSubobj.Size(m)
}
func (m *RsvpMgmtEroUnnumSubobj) XXX_DiscardUnknown() {
	xxx_messageInfo_RsvpMgmtEroUnnumSubobj.DiscardUnknown(m)
}

var xxx_messageInfo_RsvpMgmtEroUnnumSubobj proto.InternalMessageInfo

func (m *RsvpMgmtEroUnnumSubobj) GetIsStrictRoute() bool {
	if m != nil {
		return m.IsStrictRoute
	}
	return false
}

func (m *RsvpMgmtEroUnnumSubobj) GetEroInterfaceId() uint32 {
	if m != nil {
		return m.EroInterfaceId
	}
	return 0
}

func (m *RsvpMgmtEroUnnumSubobj) GetEroRouterId() string {
	if m != nil {
		return m.EroRouterId
	}
	return ""
}

func (m *RsvpMgmtEroUnnumSubobj) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

type RsvpMgmtEroSubobj struct {
	EroType                string                  `protobuf:"bytes,1,opt,name=ero_type,json=eroType,proto3" json:"ero_type,omitempty"`
	Ipv4EroSubObject       *RsvpMgmtEroIpv4Subobj  `protobuf:"bytes,2,opt,name=ipv4ero_sub_object,json=ipv4eroSubObject,proto3" json:"ipv4ero_sub_object,omitempty"`
	UnnumberedEroSubObject *RsvpMgmtEroUnnumSubobj `protobuf:"bytes,3,opt,name=unnumbered_ero_sub_object,json=unnumberedEroSubObject,proto3" json:"unnumbered_ero_sub_object,omitempty"`
	XXX_NoUnkeyedLiteral   struct{}                `json:"-"`
	XXX_unrecognized       []byte                  `json:"-"`
	XXX_sizecache          int32                   `json:"-"`
}

func (m *RsvpMgmtEroSubobj) Reset()         { *m = RsvpMgmtEroSubobj{} }
func (m *RsvpMgmtEroSubobj) String() string { return proto.CompactTextString(m) }
func (*RsvpMgmtEroSubobj) ProtoMessage()    {}
func (*RsvpMgmtEroSubobj) Descriptor() ([]byte, []int) {
	return fileDescriptor_49b777e38492e2f5, []int{31}
}

func (m *RsvpMgmtEroSubobj) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RsvpMgmtEroSubobj.Unmarshal(m, b)
}
func (m *RsvpMgmtEroSubobj) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RsvpMgmtEroSubobj.Marshal(b, m, deterministic)
}
func (m *RsvpMgmtEroSubobj) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RsvpMgmtEroSubobj.Merge(m, src)
}
func (m *RsvpMgmtEroSubobj) XXX_Size() int {
	return xxx_messageInfo_RsvpMgmtEroSubobj.Size(m)
}
func (m *RsvpMgmtEroSubobj) XXX_DiscardUnknown() {
	xxx_messageInfo_RsvpMgmtEroSubobj.DiscardUnknown(m)
}

var xxx_messageInfo_RsvpMgmtEroSubobj proto.InternalMessageInfo

func (m *RsvpMgmtEroSubobj) GetEroType() string {
	if m != nil {
		return m.EroType
	}
	return ""
}

func (m *RsvpMgmtEroSubobj) GetIpv4EroSubObject() *RsvpMgmtEroIpv4Subobj {
	if m != nil {
		return m.Ipv4EroSubObject
	}
	return nil
}

func (m *RsvpMgmtEroSubobj) GetUnnumberedEroSubObject() *RsvpMgmtEroUnnumSubobj {
	if m != nil {
		return m.UnnumberedEroSubObject
	}
	return nil
}

type RsvpMgmtPathDetail struct {
	Session              *RsvpMgmtSessionInfo         `protobuf:"bytes,50,opt,name=session,proto3" json:"session,omitempty"`
	S2LSubLsp            *RsvpMgmtS2LSubLspIpv4       `protobuf:"bytes,51,opt,name=s2l_sub_lsp,json=s2lSubLsp,proto3" json:"s2l_sub_lsp,omitempty"`
	Template             *RsvpMgmtFilterInfo          `protobuf:"bytes,52,opt,name=template,proto3" json:"template,omitempty"`
	SessionAttribute     *RsvpMgmtSessionAttribute    `protobuf:"bytes,53,opt,name=session_attribute,json=sessionAttribute,proto3" json:"session_attribute,omitempty"`
	TrafficSpec          *RsvpMgmtTrafficSpec         `protobuf:"bytes,54,opt,name=traffic_spec,json=trafficSpec,proto3" json:"traffic_spec,omitempty"`
	GenericTrafficSpec   *RsvpMgmtGenTrafficSpec      `protobuf:"bytes,55,opt,name=generic_traffic_spec,json=genericTrafficSpec,proto3" json:"generic_traffic_spec,omitempty"`
	InputInterface       string                       `protobuf:"bytes,56,opt,name=input_interface,json=inputInterface,proto3" json:"input_interface,omitempty"`
	PathFlags            *RsvpMgmtPathFlags           `protobuf:"bytes,57,opt,name=path_flags,json=pathFlags,proto3" json:"path_flags,omitempty"`
	BackupTunnelName     string                       `protobuf:"bytes,58,opt,name=backup_tunnel_name,json=backupTunnelName,proto3" json:"backup_tunnel_name,omitempty"`
	Hop                  *RsvpMgmtHopInfo             `protobuf:"bytes,59,opt,name=hop,proto3" json:"hop,omitempty"`
	PolicySourceInfo     *RsvpMgmtPolicySources       `protobuf:"bytes,60,opt,name=policy_source_info,json=policySourceInfo,proto3" json:"policy_source_info,omitempty"`
	Header               *RsvpMgmtHeaderInfo          `protobuf:"bytes,61,opt,name=header,proto3" json:"header,omitempty"`
	ExpiryTime           *RsvpMgmtTimespec            `protobuf:"bytes,62,opt,name=expiry_time,json=expiryTime,proto3" json:"expiry_time,omitempty"`
	PolicyFlags          *RsvpMgmtPolicyFlags         `protobuf:"bytes,63,opt,name=policy_flags,json=policyFlags,proto3" json:"policy_flags,omitempty"`
	PolicyQueryFlags     *RsvpMgmtPolicyQueryFlags    `protobuf:"bytes,64,opt,name=policy_query_flags,json=policyQueryFlags,proto3" json:"policy_query_flags,omitempty"`
	Pfc                  []*RsvpPathForwardingContext `protobuf:"bytes,65,rep,name=pfc,proto3" json:"pfc,omitempty"`
	LabelInfo            *RsvpMgmtLabelInfo           `protobuf:"bytes,66,opt,name=label_info,json=labelInfo,proto3" json:"label_info,omitempty"`
	ClassType            *RsvpMgmtCtInfo              `protobuf:"bytes,67,opt,name=class_type,json=classType,proto3" json:"class_type,omitempty"`
	IsInEroValid         bool                         `protobuf:"varint,68,opt,name=is_in_ero_valid,json=isInEroValid,proto3" json:"is_in_ero_valid,omitempty"`
	InEro                []*RsvpMgmtEroSubobj         `protobuf:"bytes,69,rep,name=in_ero,json=inEro,proto3" json:"in_ero,omitempty"`
	IsOutEroValid        bool                         `protobuf:"varint,70,opt,name=is_out_ero_valid,json=isOutEroValid,proto3" json:"is_out_ero_valid,omitempty"`
	OutEro               []*RsvpMgmtEroSubobj         `protobuf:"bytes,71,rep,name=out_ero,json=outEro,proto3" json:"out_ero,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                     `json:"-"`
	XXX_unrecognized     []byte                       `json:"-"`
	XXX_sizecache        int32                        `json:"-"`
}

func (m *RsvpMgmtPathDetail) Reset()         { *m = RsvpMgmtPathDetail{} }
func (m *RsvpMgmtPathDetail) String() string { return proto.CompactTextString(m) }
func (*RsvpMgmtPathDetail) ProtoMessage()    {}
func (*RsvpMgmtPathDetail) Descriptor() ([]byte, []int) {
	return fileDescriptor_49b777e38492e2f5, []int{32}
}

func (m *RsvpMgmtPathDetail) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RsvpMgmtPathDetail.Unmarshal(m, b)
}
func (m *RsvpMgmtPathDetail) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RsvpMgmtPathDetail.Marshal(b, m, deterministic)
}
func (m *RsvpMgmtPathDetail) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RsvpMgmtPathDetail.Merge(m, src)
}
func (m *RsvpMgmtPathDetail) XXX_Size() int {
	return xxx_messageInfo_RsvpMgmtPathDetail.Size(m)
}
func (m *RsvpMgmtPathDetail) XXX_DiscardUnknown() {
	xxx_messageInfo_RsvpMgmtPathDetail.DiscardUnknown(m)
}

var xxx_messageInfo_RsvpMgmtPathDetail proto.InternalMessageInfo

func (m *RsvpMgmtPathDetail) GetSession() *RsvpMgmtSessionInfo {
	if m != nil {
		return m.Session
	}
	return nil
}

func (m *RsvpMgmtPathDetail) GetS2LSubLsp() *RsvpMgmtS2LSubLspIpv4 {
	if m != nil {
		return m.S2LSubLsp
	}
	return nil
}

func (m *RsvpMgmtPathDetail) GetTemplate() *RsvpMgmtFilterInfo {
	if m != nil {
		return m.Template
	}
	return nil
}

func (m *RsvpMgmtPathDetail) GetSessionAttribute() *RsvpMgmtSessionAttribute {
	if m != nil {
		return m.SessionAttribute
	}
	return nil
}

func (m *RsvpMgmtPathDetail) GetTrafficSpec() *RsvpMgmtTrafficSpec {
	if m != nil {
		return m.TrafficSpec
	}
	return nil
}

func (m *RsvpMgmtPathDetail) GetGenericTrafficSpec() *RsvpMgmtGenTrafficSpec {
	if m != nil {
		return m.GenericTrafficSpec
	}
	return nil
}

func (m *RsvpMgmtPathDetail) GetInputInterface() string {
	if m != nil {
		return m.InputInterface
	}
	return ""
}

func (m *RsvpMgmtPathDetail) GetPathFlags() *RsvpMgmtPathFlags {
	if m != nil {
		return m.PathFlags
	}
	return nil
}

func (m *RsvpMgmtPathDetail) GetBackupTunnelName() string {
	if m != nil {
		return m.BackupTunnelName
	}
	return ""
}

func (m *RsvpMgmtPathDetail) GetHop() *RsvpMgmtHopInfo {
	if m != nil {
		return m.Hop
	}
	return nil
}

func (m *RsvpMgmtPathDetail) GetPolicySourceInfo() *RsvpMgmtPolicySources {
	if m != nil {
		return m.PolicySourceInfo
	}
	return nil
}

func (m *RsvpMgmtPathDetail) GetHeader() *RsvpMgmtHeaderInfo {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *RsvpMgmtPathDetail) GetExpiryTime() *RsvpMgmtTimespec {
	if m != nil {
		return m.ExpiryTime
	}
	return nil
}

func (m *RsvpMgmtPathDetail) GetPolicyFlags() *RsvpMgmtPolicyFlags {
	if m != nil {
		return m.PolicyFlags
	}
	return nil
}

func (m *RsvpMgmtPathDetail) GetPolicyQueryFlags() *RsvpMgmtPolicyQueryFlags {
	if m != nil {
		return m.PolicyQueryFlags
	}
	return nil
}

func (m *RsvpMgmtPathDetail) GetPfc() []*RsvpPathForwardingContext {
	if m != nil {
		return m.Pfc
	}
	return nil
}

func (m *RsvpMgmtPathDetail) GetLabelInfo() *RsvpMgmtLabelInfo {
	if m != nil {
		return m.LabelInfo
	}
	return nil
}

func (m *RsvpMgmtPathDetail) GetClassType() *RsvpMgmtCtInfo {
	if m != nil {
		return m.ClassType
	}
	return nil
}

func (m *RsvpMgmtPathDetail) GetIsInEroValid() bool {
	if m != nil {
		return m.IsInEroValid
	}
	return false
}

func (m *RsvpMgmtPathDetail) GetInEro() []*RsvpMgmtEroSubobj {
	if m != nil {
		return m.InEro
	}
	return nil
}

func (m *RsvpMgmtPathDetail) GetIsOutEroValid() bool {
	if m != nil {
		return m.IsOutEroValid
	}
	return false
}

func (m *RsvpMgmtPathDetail) GetOutEro() []*RsvpMgmtEroSubobj {
	if m != nil {
		return m.OutEro
	}
	return nil
}

func init() {
	proto.RegisterType((*RsvpMgmtPathDetail_KEYS)(nil), "cisco_ios_xr_ip_rsvp_oper.rsvp_standby.psb_detaileds.psb_detailed.rsvp_mgmt_path_detail_KEYS")
	proto.RegisterType((*RsvpMgmtSessionUdpIpv4)(nil), "cisco_ios_xr_ip_rsvp_oper.rsvp_standby.psb_detaileds.psb_detailed.rsvp_mgmt_session_udp_ipv4")
	proto.RegisterType((*RsvpMgmtSessionLspTunnelIpv4)(nil), "cisco_ios_xr_ip_rsvp_oper.rsvp_standby.psb_detaileds.psb_detailed.rsvp_mgmt_session_lsp_tunnel_ipv4")
	proto.RegisterType((*RsvpMgmtSessionUniIpv4)(nil), "cisco_ios_xr_ip_rsvp_oper.rsvp_standby.psb_detaileds.psb_detailed.rsvp_mgmt_session_uni_ipv4")
	proto.RegisterType((*RsvpMgmtSessionP2MpLspTunnelIpv4)(nil), "cisco_ios_xr_ip_rsvp_oper.rsvp_standby.psb_detaileds.psb_detailed.rsvp_mgmt_session_p2mp_lsp_tunnel_ipv4")
	proto.RegisterType((*RsvpSessionUnion)(nil), "cisco_ios_xr_ip_rsvp_oper.rsvp_standby.psb_detaileds.psb_detailed.rsvp_session_union")
	proto.RegisterType((*RsvpMgmtSessionInfo)(nil), "cisco_ios_xr_ip_rsvp_oper.rsvp_standby.psb_detaileds.psb_detailed.rsvp_mgmt_session_info")
	proto.RegisterType((*RsvpMgmtS2LSubLspIpv4)(nil), "cisco_ios_xr_ip_rsvp_oper.rsvp_standby.psb_detaileds.psb_detailed.rsvp_mgmt_s2l_sub_lsp_ipv4")
	proto.RegisterType((*RsvpMgmtFilterIpv4)(nil), "cisco_ios_xr_ip_rsvp_oper.rsvp_standby.psb_detaileds.psb_detailed.rsvp_mgmt_filter_ipv4")
	proto.RegisterType((*RsvpMgmtFilterP2MpIpv4)(nil), "cisco_ios_xr_ip_rsvp_oper.rsvp_standby.psb_detaileds.psb_detailed.rsvp_mgmt_filter_p2mp_ipv4")
	proto.RegisterType((*RsvpFilterUnion)(nil), "cisco_ios_xr_ip_rsvp_oper.rsvp_standby.psb_detaileds.psb_detailed.rsvp_filter_union")
	proto.RegisterType((*RsvpMgmtFilterInfo)(nil), "cisco_ios_xr_ip_rsvp_oper.rsvp_standby.psb_detaileds.psb_detailed.rsvp_mgmt_filter_info")
	proto.RegisterType((*RsvpMgmtSessionAttributeFlags)(nil), "cisco_ios_xr_ip_rsvp_oper.rsvp_standby.psb_detaileds.psb_detailed.rsvp_mgmt_session_attribute_flags")
	proto.RegisterType((*RsvpMgmtSessionAttribute)(nil), "cisco_ios_xr_ip_rsvp_oper.rsvp_standby.psb_detaileds.psb_detailed.rsvp_mgmt_session_attribute")
	proto.RegisterType((*RsvpMgmtTrafficSpec)(nil), "cisco_ios_xr_ip_rsvp_oper.rsvp_standby.psb_detaileds.psb_detailed.rsvp_mgmt_traffic_spec")
	proto.RegisterType((*RsvpMgmtTspecG709Otn)(nil), "cisco_ios_xr_ip_rsvp_oper.rsvp_standby.psb_detaileds.psb_detailed.rsvp_mgmt_tspec_g709_otn")
	proto.RegisterType((*RsvpMgmtGenTrafficSpec)(nil), "cisco_ios_xr_ip_rsvp_oper.rsvp_standby.psb_detaileds.psb_detailed.rsvp_mgmt_gen_traffic_spec")
	proto.RegisterType((*RsvpMgmtPathFlags)(nil), "cisco_ios_xr_ip_rsvp_oper.rsvp_standby.psb_detaileds.psb_detailed.rsvp_mgmt_path_flags")
	proto.RegisterType((*RsvpMgmtHopInfo)(nil), "cisco_ios_xr_ip_rsvp_oper.rsvp_standby.psb_detaileds.psb_detailed.rsvp_mgmt_hop_info")
	proto.RegisterType((*RsvpMgmtPolicySources)(nil), "cisco_ios_xr_ip_rsvp_oper.rsvp_standby.psb_detaileds.psb_detailed.rsvp_mgmt_policy_sources")
	proto.RegisterType((*RsvpMgmtHeaderInfo)(nil), "cisco_ios_xr_ip_rsvp_oper.rsvp_standby.psb_detaileds.psb_detailed.rsvp_mgmt_header_info")
	proto.RegisterType((*RsvpMgmtTimespec)(nil), "cisco_ios_xr_ip_rsvp_oper.rsvp_standby.psb_detaileds.psb_detailed.rsvp_mgmt_timespec")
	proto.RegisterType((*RsvpMgmtPolicyFlags)(nil), "cisco_ios_xr_ip_rsvp_oper.rsvp_standby.psb_detaileds.psb_detailed.rsvp_mgmt_policy_flags")
	proto.RegisterType((*RsvpMgmtPolicyQueryFlags)(nil), "cisco_ios_xr_ip_rsvp_oper.rsvp_standby.psb_detaileds.psb_detailed.rsvp_mgmt_policy_query_flags")
	proto.RegisterType((*RsvpPathForwardingContext)(nil), "cisco_ios_xr_ip_rsvp_oper.rsvp_standby.psb_detaileds.psb_detailed.rsvp_path_forwarding_context")
	proto.RegisterType((*RsvpMgmtGeneralizedLabel)(nil), "cisco_ios_xr_ip_rsvp_oper.rsvp_standby.psb_detaileds.psb_detailed.rsvp_mgmt_generalized_label")
	proto.RegisterType((*RsvpMgmtGenericLabel)(nil), "cisco_ios_xr_ip_rsvp_oper.rsvp_standby.psb_detaileds.psb_detailed.rsvp_mgmt_generic_label")
	proto.RegisterType((*RsvpMgmtLabelInfo)(nil), "cisco_ios_xr_ip_rsvp_oper.rsvp_standby.psb_detaileds.psb_detailed.rsvp_mgmt_label_info")
	proto.RegisterType((*RsvpMgmtCtInfo)(nil), "cisco_ios_xr_ip_rsvp_oper.rsvp_standby.psb_detaileds.psb_detailed.rsvp_mgmt_ct_info")
	proto.RegisterType((*RsvpMgmtEroIpv4Subobj)(nil), "cisco_ios_xr_ip_rsvp_oper.rsvp_standby.psb_detaileds.psb_detailed.rsvp_mgmt_ero_ipv4_subobj")
	proto.RegisterType((*RsvpMgmtEroUnnumSubobj)(nil), "cisco_ios_xr_ip_rsvp_oper.rsvp_standby.psb_detaileds.psb_detailed.rsvp_mgmt_ero_unnum_subobj")
	proto.RegisterType((*RsvpMgmtEroSubobj)(nil), "cisco_ios_xr_ip_rsvp_oper.rsvp_standby.psb_detaileds.psb_detailed.rsvp_mgmt_ero_subobj")
	proto.RegisterType((*RsvpMgmtPathDetail)(nil), "cisco_ios_xr_ip_rsvp_oper.rsvp_standby.psb_detaileds.psb_detailed.rsvp_mgmt_path_detail")
}

func init() { proto.RegisterFile("rsvp_mgmt_path_detail.proto", fileDescriptor_49b777e38492e2f5) }

var fileDescriptor_49b777e38492e2f5 = []byte{
	// 2850 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xcc, 0x5a, 0xdf, 0x8f, 0x1c, 0x47,
	0xf1, 0xd7, 0xdc, 0x9d, 0xef, 0xf6, 0x6a, 0xef, 0xc7, 0xba, 0x7d, 0xb6, 0xf7, 0x62, 0xe7, 0x6b,
	0x7b, 0xf2, 0x4d, 0xe2, 0x44, 0x8e, 0x49, 0x2e, 0xc6, 0x21, 0xe1, 0x47, 0xf0, 0xcf, 0xe4, 0xc4,
	0xd9, 0x3e, 0xe6, 0xce, 0x09, 0x01, 0xc2, 0x68, 0x76, 0xa6, 0x77, 0xaf, 0xe3, 0xd9, 0x99, 0x76,
	0x77, 0xcf, 0xfa, 0x0e, 0x81, 0x04, 0x3c, 0x10, 0x85, 0x1f, 0x21, 0x8a, 0x08, 0x20, 0x81, 0x14,
	0x21, 0x04, 0x0f, 0x48, 0xfc, 0x01, 0x48, 0xf0, 0x06, 0x7f, 0x02, 0x42, 0xbc, 0xf3, 0xca, 0x2b,
	0xcf, 0xa8, 0xab, 0xbb, 0x67, 0x67, 0x76, 0xcf, 0x88, 0xc0, 0xae, 0xe0, 0xe5, 0xb4, 0x5d, 0x55,
	0x5d, 0xf5, 0xe9, 0xea, 0xea, 0xea, 0xea, 0x9a, 0x83, 0x53, 0x42, 0x0e, 0x78, 0xd8, 0xef, 0xf5,
	0x55, 0xc8, 0x23, 0xb5, 0x17, 0x26, 0x54, 0x45, 0x2c, 0xbd, 0xc8, 0x45, 0xae, 0x72, 0x72, 0x25,
	0x66, 0x32, 0xce, 0x43, 0x96, 0xcb, 0x70, 0x5f, 0x84, 0x8c, 0x87, 0x28, 0x9c, 0x73, 0x2a, 0x2e,
	0xe2, 0x2f, 0xa9, 0xa2, 0x2c, 0xe9, 0x1c, 0x5c, 0xe4, 0xb2, 0x63, 0x27, 0xd2, 0x44, 0xd6, 0x46,
	0xfe, 0x6f, 0x66, 0xe1, 0x91, 0x43, 0x4d, 0x84, 0x9f, 0xbb, 0xf1, 0xc6, 0x0e, 0xf9, 0x18, 0x1c,
	0x4b, 0xa8, 0x54, 0x2c, 0x8b, 0x14, 0xcb, 0xb3, 0x30, 0x4a, 0x12, 0x41, 0xa5, 0x6c, 0x7b, 0x67,
	0xbd, 0xf3, 0x8b, 0x01, 0xa9, 0xb0, 0xae, 0x18, 0x0e, 0x79, 0x0a, 0x5a, 0xd5, 0x09, 0x3c, 0x17,
	0xaa, 0x3d, 0x73, 0xd6, 0x3b, 0xbf, 0x1c, 0xac, 0x56, 0xe8, 0xdb, 0xb9, 0x50, 0xe4, 0x11, 0x68,
	0xe0, 0x32, 0xe2, 0x3c, 0x6d, 0xcf, 0xa2, 0x48, 0x39, 0x26, 0x17, 0x80, 0xd0, 0x7d, 0x45, 0xb3,
	0x84, 0x26, 0xa1, 0x2a, 0xb2, 0x8c, 0xa6, 0x21, 0x4b, 0xda, 0x73, 0x68, 0xb6, 0xe5, 0x38, 0xbb,
	0xc8, 0xd8, 0x4c, 0xc8, 0x39, 0x58, 0x92, 0x54, 0x4a, 0x6d, 0x50, 0x1d, 0x70, 0xda, 0x3e, 0x82,
	0x72, 0x4d, 0x4b, 0xdb, 0x3d, 0xe0, 0x94, 0x9c, 0x84, 0x05, 0xbe, 0xd1, 0xe7, 0x5a, 0xcb, 0x3c,
	0xda, 0x9a, 0xd7, 0xc3, 0xcd, 0x84, 0x3c, 0x0e, 0x2b, 0x32, 0x2f, 0x44, 0x4c, 0xcb, 0xc5, 0x2d,
	0xe0, 0xec, 0x65, 0x43, 0x75, 0xeb, 0x3a, 0x03, 0x4d, 0x2b, 0x86, 0x4b, 0x6a, 0xa0, 0x0e, 0x30,
	0x24, 0x5c, 0xcd, 0x79, 0x68, 0xc9, 0xa2, 0x13, 0xf6, 0x44, 0x5e, 0xf0, 0x30, 0x17, 0xac, 0xc7,
	0xb2, 0xf6, 0x22, 0x6a, 0x5a, 0x91, 0x45, 0xe7, 0x15, 0x4d, 0xbe, 0x83, 0x54, 0x72, 0x16, 0x96,
	0x86, 0x92, 0x2c, 0x69, 0x83, 0xd5, 0x65, 0xa5, 0x36, 0x13, 0xb2, 0x0e, 0x8d, 0x81, 0xe8, 0x86,
	0x59, 0xd4, 0xa7, 0xed, 0x26, 0xea, 0x58, 0x18, 0x88, 0xee, 0xed, 0xa8, 0x4f, 0xfd, 0x1f, 0x7a,
	0xd5, 0xfd, 0x72, 0xab, 0x2e, 0x12, 0x1e, 0x32, 0x3e, 0xb8, 0xf4, 0xd1, 0xf7, 0xab, 0xba, 0x09,
	0x33, 0x23, 0x9b, 0x70, 0xd8, 0x5e, 0xce, 0x1e, 0xba, 0x97, 0xfe, 0x87, 0x1e, 0x9c, 0x1b, 0x87,
	0x95, 0x4a, 0x5e, 0xee, 0xde, 0xbf, 0x85, 0xee, 0x14, 0x2c, 0x0e, 0x77, 0xdf, 0xc2, 0x53, 0x6e,
	0xd7, 0x0f, 0x8f, 0x91, 0xd9, 0xc3, 0x63, 0xc4, 0xff, 0xe0, 0x70, 0xc7, 0x65, 0x6c, 0x1a, 0xd0,
	0x9e, 0x82, 0x12, 0x40, 0xa9, 0xca, 0x00, 0x5b, 0x75, 0x74, 0xab, 0xc7, 0xff, 0x9e, 0x07, 0x4f,
	0x8c, 0xe3, 0xc2, 0x58, 0x1d, 0x75, 0x5f, 0x25, 0x86, 0xbd, 0x5a, 0x0c, 0x4f, 0xd0, 0x4d, 0x7f,
	0x9d, 0x03, 0x62, 0x72, 0xc7, 0xd0, 0x43, 0x79, 0x36, 0x76, 0xc2, 0xbc, 0xf1, 0x13, 0x76, 0x1f,
	0xe6, 0x34, 0x4a, 0xb4, 0xdf, 0xdc, 0x78, 0xf3, 0xe2, 0x7f, 0x9c, 0x9b, 0x2e, 0x3e, 0x3c, 0xce,
	0x03, 0x34, 0x45, 0xde, 0xf5, 0xa0, 0xa5, 0x7f, 0xa0, 0xa7, 0xac, 0x0c, 0xae, 0xac, 0xb9, 0x91,
	0x4c, 0xc5, 0xfe, 0xc8, 0x8e, 0x04, 0x2b, 0xfa, 0xef, 0x96, 0xe4, 0x3b, 0x86, 0x4f, 0xde, 0x76,
	0x80, 0x74, 0x5c, 0x39, 0x40, 0x73, 0xd3, 0x74, 0x88, 0x8d, 0x5f, 0x83, 0xe4, 0x6e, 0xc6, 0x1c,
	0x92, 0x9f, 0x79, 0x70, 0x1c, 0x91, 0x94, 0x91, 0xe4, 0xe0, 0x1c, 0x41, 0x38, 0x6c, 0x2a, 0x70,
	0x0e, 0x0b, 0xdb, 0x80, 0xe8, 0xbf, 0xdb, 0x1b, 0x7d, 0x3e, 0x74, 0x94, 0xff, 0xbe, 0x07, 0x27,
	0xc6, 0xa7, 0xb3, 0xac, 0x9b, 0x93, 0x7d, 0x58, 0xaa, 0x06, 0x20, 0x86, 0x5a, 0x73, 0xe3, 0xee,
	0xa4, 0xf0, 0xd6, 0xe2, 0x3a, 0x68, 0x6a, 0x9a, 0x03, 0xb5, 0x5b, 0xcb, 0x10, 0x1b, 0x69, 0xa8,
	0xd3, 0xb4, 0x5e, 0x0d, 0x06, 0xdb, 0x65, 0x38, 0xa9, 0x69, 0x0f, 0xcf, 0x12, 0xc7, 0xe5, 0x46,
	0x7a, 0x7d, 0x2c, 0x51, 0xf8, 0x21, 0x1c, 0x1f, 0x6a, 0xed, 0xb2, 0x54, 0x51, 0x61, 0x14, 0x8e,
	0xdf, 0x3c, 0xde, 0xbf, 0x70, 0xf3, 0xcc, 0x8c, 0xde, 0x3c, 0xfe, 0x6f, 0x6b, 0x99, 0xcd, 0x5a,
	0x30, 0x89, 0x62, 0x82, 0x66, 0xc8, 0x73, 0x70, 0x1c, 0x95, 0x8e, 0xdd, 0x72, 0x26, 0x95, 0x10,
	0xcd, 0xdc, 0xf9, 0xe7, 0x37, 0xdd, 0xdc, 0xe8, 0x4d, 0xe7, 0xff, 0x71, 0x06, 0x8e, 0x22, 0x76,
	0x0b, 0xdb, 0x64, 0x9b, 0x33, 0xd0, 0xb4, 0xe3, 0x4a, 0xb2, 0x01, 0x43, 0xc2, 0x5c, 0xf3, 0x2d,
	0x0f, 0x5a, 0x2e, 0x17, 0x94, 0x81, 0x62, 0x12, 0xcf, 0x17, 0x26, 0x1a, 0xd8, 0x95, 0xfd, 0x0a,
	0x56, 0x8a, 0x84, 0x6f, 0xf2, 0xc1, 0x25, 0x77, 0xc4, 0xde, 0xf1, 0xe0, 0x68, 0xe9, 0xe6, 0x91,
	0xf4, 0xf3, 0xe6, 0x34, 0x50, 0x94, 0xc6, 0x82, 0x55, 0x4c, 0xfc, 0x43, 0x2c, 0xfe, 0xbb, 0xde,
	0x61, 0x51, 0xa6, 0x8f, 0x53, 0x01, 0xcd, 0x8a, 0x83, 0xed, 0x69, 0xda, 0x9d, 0x14, 0xbc, 0xea,
	0xb6, 0x05, 0xa0, 0x49, 0x37, 0x91, 0xe2, 0xbf, 0x3f, 0x73, 0x58, 0x41, 0x10, 0x29, 0x25, 0x58,
	0xa7, 0x50, 0x34, 0xec, 0xa6, 0x51, 0x4f, 0xea, 0xa2, 0x89, 0xc9, 0x30, 0xcd, 0xe3, 0x28, 0x0d,
	0x75, 0xd9, 0x41, 0x63, 0x85, 0x08, 0x1b, 0xc1, 0x0a, 0x93, 0x5b, 0x9a, 0xbc, 0x6d, 0xa8, 0xe4,
	0x09, 0x58, 0x65, 0x32, 0xcc, 0xf2, 0x84, 0x96, 0x82, 0x33, 0x28, 0xb8, 0xcc, 0xe4, 0xed, 0x3c,
	0xa1, 0x4e, 0xee, 0x59, 0x58, 0x63, 0x32, 0xec, 0x44, 0x59, 0xf2, 0x80, 0x25, 0x6a, 0xaf, 0x14,
	0x9e, 0x45, 0x61, 0xc2, 0xe4, 0x55, 0xc7, 0x72, 0x33, 0x0c, 0x06, 0x41, 0xe3, 0x5c, 0x24, 0x61,
	0x1a, 0x75, 0x68, 0x2a, 0x31, 0x50, 0x11, 0x43, 0x80, 0xe4, 0x2d, 0xa4, 0x92, 0x97, 0xe1, 0x34,
	0x93, 0xa1, 0xdc, 0x8b, 0x04, 0x4d, 0x42, 0xba, 0xcf, 0x53, 0x16, 0x33, 0x15, 0x0a, 0x7a, 0xbf,
	0xa0, 0x52, 0xd1, 0x04, 0x33, 0x6b, 0x23, 0x58, 0x67, 0x72, 0x07, 0x45, 0x6e, 0x58, 0x89, 0xc0,
	0x09, 0xf8, 0xef, 0xcd, 0x54, 0xeb, 0xf9, 0x31, 0xa7, 0xe0, 0x51, 0xa5, 0xaa, 0xe0, 0x21, 0x17,
	0x2c, 0x17, 0x4c, 0x1d, 0xd8, 0x7b, 0x7e, 0x19, 0xa9, 0xdb, 0x96, 0x48, 0x9e, 0x83, 0x35, 0x41,
	0x25, 0x15, 0x03, 0x5b, 0x97, 0x39, 0x61, 0x73, 0x66, 0x8f, 0x55, 0x78, 0xe5, 0x94, 0x1f, 0x79,
	0xb0, 0xa6, 0xed, 0x8d, 0xee, 0xc0, 0x54, 0x6f, 0xcb, 0x11, 0x5b, 0x01, 0xd1, 0x8c, 0x2b, 0x8e,
	0x78, 0x53, 0xd3, 0xfc, 0xbf, 0xd7, 0x2e, 0x02, 0x25, 0xa2, 0x6e, 0x97, 0xc5, 0xa1, 0xe4, 0x34,
	0xd6, 0x5b, 0xe9, 0xc6, 0xd1, 0x80, 0x8a, 0xa8, 0x47, 0x43, 0x11, 0x29, 0x93, 0x0e, 0xe6, 0x02,
	0x62, 0x79, 0x57, 0x0c, 0x2b, 0x88, 0x14, 0x25, 0x4f, 0xc3, 0x51, 0x37, 0xa3, 0x1f, 0xed, 0x87,
	0x9d, 0x42, 0x48, 0x13, 0x26, 0x73, 0xc1, 0xaa, 0x65, 0xdc, 0x8a, 0xf6, 0xaf, 0x6a, 0x72, 0x55,
	0x96, 0xd3, 0xe8, 0x9e, 0x51, 0x3d, 0x5b, 0x93, 0xdd, 0xa6, 0xd1, 0x3d, 0xd4, 0x7b, 0x1e, 0x5a,
	0xa5, 0x5e, 0x86, 0x57, 0x87, 0xb2, 0xb9, 0x6c, 0xc5, 0xa9, 0x65, 0xd9, 0xdd, 0x8c, 0xa9, 0x9a,
	0x64, 0xb4, 0x6f, 0x24, 0x8f, 0xd4, 0x25, 0xa3, 0x7d, 0x2d, 0xe9, 0xff, 0xc1, 0x83, 0x76, 0x65,
	0xe1, 0x7a, 0xc5, 0x61, 0xef, 0x85, 0x67, 0x5f, 0x0c, 0x73, 0x95, 0x91, 0x8b, 0x70, 0xac, 0x74,
	0x05, 0xeb, 0x65, 0x51, 0x3a, 0x4c, 0x84, 0xcb, 0x81, 0xc3, 0xbd, 0x83, 0x1c, 0xcc, 0x87, 0x67,
	0xa0, 0xe9, 0xe4, 0xb3, 0x41, 0xec, 0x92, 0xb7, 0x25, 0xdd, 0x1e, 0xc4, 0xe4, 0x19, 0x20, 0x25,
	0xae, 0x22, 0x55, 0x8c, 0xa7, 0x8c, 0x0a, 0x5b, 0xcc, 0x3b, 0x7d, 0xb7, 0x4a, 0x46, 0x75, 0x19,
	0x1d, 0x1d, 0xe2, 0xda, 0x37, 0x73, 0xe8, 0x1b, 0xb7, 0x8c, 0xab, 0x4c, 0x69, 0xd7, 0xf8, 0xbf,
	0x9b, 0xa9, 0x5e, 0x3e, 0x3d, 0x9a, 0xd5, 0xf7, 0xf0, 0x51, 0x00, 0xb3, 0xb4, 0x4a, 0x22, 0x5f,
	0x44, 0x0a, 0xe2, 0xfe, 0x86, 0x07, 0xcb, 0x7a, 0xd1, 0xb9, 0xca, 0x8c, 0x0b, 0x6c, 0x12, 0xff,
	0xd2, 0x44, 0xe3, 0xb1, 0xee, 0xdc, 0x60, 0xc9, 0x5a, 0xdc, 0x45, 0x84, 0x5f, 0x83, 0x25, 0x96,
	0x29, 0x29, 0x06, 0x16, 0x80, 0x39, 0x10, 0x6f, 0x4c, 0x16, 0x40, 0xc5, 0x25, 0x41, 0xd3, 0x98,
	0x43, 0xeb, 0xfe, 0x8f, 0x67, 0x60, 0x6d, 0xe4, 0xf9, 0x6d, 0x32, 0xe3, 0x65, 0x68, 0x63, 0xbe,
	0xcb, 0x8c, 0xe1, 0xbd, 0x9c, 0x87, 0x05, 0x97, 0x4a, 0xd0, 0xa8, 0x6f, 0x33, 0xe4, 0x9a, 0x4e,
	0x7c, 0x59, 0x20, 0x07, 0xfc, 0xd5, 0x9c, 0xdf, 0xb5, 0x3c, 0x9b, 0x27, 0x4d, 0x46, 0x95, 0xba,
	0xb4, 0x17, 0xc3, 0x3c, 0x89, 0x09, 0x75, 0x07, 0x89, 0xe4, 0x19, 0x38, 0xc6, 0x64, 0xd8, 0xa7,
	0x52, 0xea, 0x73, 0xc5, 0x92, 0x70, 0x10, 0xa5, 0xf6, 0x59, 0xd0, 0x08, 0x5a, 0x4c, 0xde, 0x32,
	0x9c, 0xcd, 0xe4, 0x35, 0x4d, 0xaf, 0xa9, 0x15, 0x94, 0x47, 0x4c, 0xd8, 0x1c, 0xe9, 0xd4, 0x06,
	0x48, 0xd4, 0x0f, 0x1f, 0x9d, 0x7e, 0x59, 0xc2, 0x04, 0x8d, 0x75, 0x06, 0x8a, 0x52, 0x9b, 0x16,
	0x57, 0x99, 0xbc, 0x5a, 0x25, 0xeb, 0xd0, 0x30, 0x2a, 0xef, 0xe5, 0x85, 0xc2, 0x47, 0x79, 0x23,
	0x58, 0x44, 0x6d, 0x9a, 0xe0, 0x7f, 0xdb, 0xb3, 0x0f, 0x11, 0xf4, 0x8c, 0x5e, 0x3f, 0x5e, 0x67,
	0x4f, 0x41, 0x2b, 0xa3, 0xac, 0xb7, 0xd7, 0xc9, 0xc5, 0x48, 0x3d, 0xb3, 0xea, 0xe8, 0xae, 0xa2,
	0xb9, 0x01, 0x67, 0x4a, 0xd1, 0x34, 0xef, 0x31, 0x8d, 0x9d, 0x65, 0x8a, 0x8a, 0x6e, 0x14, 0x53,
	0xf3, 0xb8, 0x9e, 0xc1, 0x99, 0xa7, 0x9d, 0xd8, 0x96, 0x91, 0xda, 0x74, 0x42, 0xf8, 0xe2, 0xfe,
	0x55, 0xed, 0xa0, 0xf2, 0x3c, 0x65, 0xf1, 0x41, 0x68, 0xea, 0x22, 0x49, 0x4e, 0xe3, 0x22, 0x14,
	0x0d, 0x53, 0x96, 0xdd, 0xb3, 0x1b, 0xd3, 0x60, 0x72, 0x97, 0x6e, 0xb1, 0xec, 0x9e, 0x7e, 0xc7,
	0x3b, 0xaf, 0xd9, 0x5d, 0x58, 0xb0, 0xee, 0xd2, 0x6f, 0x39, 0x26, 0xc3, 0x38, 0xe7, 0xd2, 0xfa,
	0x7c, 0x9e, 0xc9, 0x6b, 0x39, 0x97, 0xd6, 0x2d, 0x09, 0xed, 0x46, 0x45, 0xaa, 0xac, 0x93, 0x17,
	0x99, 0xbc, 0x6e, 0x08, 0x56, 0x65, 0x1c, 0x75, 0x52, 0x6a, 0x1d, 0xbb, 0xc0, 0xe4, 0x35, 0x3d,
	0xf4, 0xdf, 0x9e, 0xa9, 0xd6, 0x00, 0x7b, 0x34, 0x4a, 0x5c, 0x0d, 0x70, 0xce, 0x96, 0xd4, 0x03,
	0x2a, 0xca, 0x92, 0x7a, 0xd9, 0xd4, 0xbe, 0xaf, 0x19, 0x92, 0x4e, 0x87, 0x26, 0xd0, 0xcc, 0x34,
	0x73, 0x39, 0xd8, 0xc6, 0x8d, 0x66, 0xbc, 0x8a, 0x74, 0xcc, 0xd9, 0x1a, 0x03, 0xca, 0x2a, 0xe5,
	0x1a, 0x37, 0x0b, 0x7a, 0xbc, 0xab, 0xd2, 0x52, 0x8d, 0x0b, 0x2c, 0x3c, 0xf6, 0x73, 0x43, 0x35,
	0x36, 0xac, 0xf0, 0xf0, 0x1f, 0x87, 0x79, 0xc6, 0x43, 0x95, 0x4b, 0x9b, 0x21, 0x8f, 0x30, 0xbe,
	0x9b, 0x4b, 0x47, 0x56, 0xa9, 0x6d, 0xd4, 0x68, 0xb2, 0xd1, 0xcc, 0x78, 0x78, 0x68, 0xab, 0x66,
	0x95, 0xf1, 0x9d, 0x6a, 0x2d, 0xeb, 0x6f, 0x57, 0x43, 0x47, 0xb1, 0x3e, 0xc5, 0x93, 0xde, 0x86,
	0x05, 0x49, 0xe3, 0x3c, 0x4b, 0x4c, 0xc4, 0x1c, 0x0d, 0xdc, 0x90, 0x9c, 0x85, 0x66, 0x16, 0x65,
	0xb9, 0xe3, 0xce, 0x20, 0xb7, 0x4a, 0xf2, 0xbf, 0x59, 0xbb, 0xa6, 0x6c, 0x10, 0x98, 0x93, 0x7a,
	0x06, 0x9a, 0x4c, 0x86, 0x51, 0x1c, 0x53, 0xae, 0x8b, 0x00, 0x13, 0x03, 0xc0, 0xe4, 0x15, 0x4b,
	0xd1, 0xde, 0x67, 0x32, 0x64, 0x99, 0x54, 0x51, 0x9a, 0xd2, 0xc4, 0x46, 0x42, 0x93, 0xc9, 0x4d,
	0x47, 0x22, 0x8f, 0xc1, 0x32, 0x93, 0x61, 0x37, 0x17, 0x0f, 0x22, 0x91, 0xb0, 0xac, 0x67, 0x63,
	0x62, 0x89, 0xc9, 0x9b, 0x25, 0xcd, 0xff, 0x85, 0x07, 0xa7, 0xc7, 0x30, 0xdc, 0x2f, 0xa8, 0x70,
	0x48, 0x4e, 0xc1, 0xa2, 0xce, 0x19, 0x94, 0x26, 0x25, 0x8e, 0x06, 0x93, 0xb7, 0x71, 0x4c, 0x2e,
	0x00, 0xc1, 0x32, 0x47, 0x57, 0xf7, 0x58, 0xb3, 0x30, 0x51, 0x62, 0x69, 0xe9, 0x42, 0x47, 0x33,
	0x02, 0x4b, 0xb7, 0xaa, 0x04, 0x95, 0x07, 0x59, 0x6c, 0xc1, 0x34, 0xb4, 0x90, 0x1e, 0x5b, 0x66,
	0xe7, 0x80, 0x47, 0xd2, 0x95, 0x4a, 0x0d, 0x26, 0xaf, 0xe2, 0xd8, 0xff, 0xf3, 0x8c, 0x45, 0x69,
	0x92, 0x59, 0x09, 0x3f, 0x8c, 0xf3, 0x4c, 0xd1, 0x7d, 0xa5, 0x4f, 0x70, 0x5e, 0x28, 0x5e, 0xa8,
	0xe1, 0x61, 0x74, 0x27, 0xd8, 0xd0, 0xcb, 0xe3, 0xa7, 0x73, 0x73, 0xd5, 0xd5, 0xf6, 0x72, 0x98,
	0x6c, 0x6e, 0xae, 0x1a, 0x08, 0x9a, 0x66, 0x64, 0xc2, 0xfc, 0xfb, 0x1e, 0x90, 0x71, 0x2f, 0xdb,
	0x0b, 0x22, 0x9c, 0x06, 0x88, 0x8a, 0x99, 0xa0, 0x65, 0x68, 0x9f, 0xd7, 0x24, 0x53, 0x2a, 0x3d,
	0x5f, 0x2d, 0x1e, 0x7b, 0x34, 0xa3, 0x22, 0x4a, 0xd9, 0x57, 0xa9, 0x2d, 0x5a, 0xc9, 0x1a, 0x1c,
	0x19, 0x44, 0x69, 0xa1, 0x9d, 0x39, 0xab, 0x8f, 0x0d, 0x0e, 0xfc, 0x3f, 0x79, 0x70, 0x72, 0x64,
	0x16, 0x8b, 0xed, 0x8c, 0x0b, 0x40, 0x6a, 0x84, 0xea, 0x25, 0xdd, 0xb2, 0x1c, 0x2c, 0x7d, 0xf1,
	0xb8, 0x7e, 0xd7, 0x83, 0xa3, 0x63, 0x56, 0xed, 0x96, 0x7c, 0x65, 0xa2, 0xde, 0x18, 0xb3, 0x62,
	0xd1, 0x18, 0x12, 0x22, 0xf2, 0x7f, 0x0f, 0xd5, 0x8b, 0xd3, 0xc0, 0xc7, 0x5c, 0x67, 0x12, 0xa4,
	0xb9, 0xcd, 0x3c, 0x97, 0x20, 0xcd, 0x25, 0x76, 0x09, 0x4e, 0x98, 0x1b, 0x2c, 0xc9, 0x1f, 0x64,
	0xe6, 0xbe, 0xac, 0xac, 0x62, 0x39, 0x58, 0x43, 0xee, 0xf5, 0x92, 0x89, 0x96, 0xc8, 0x87, 0x1e,
	0xfc, 0x5f, 0xe9, 0xa6, 0xc3, 0xa7, 0x9b, 0x90, 0xf8, 0xe2, 0xe4, 0x9d, 0xe0, 0x76, 0x26, 0x38,
	0xe5, 0xb6, 0xe3, 0x30, 0x84, 0x2f, 0xc1, 0x7a, 0x5e, 0xa8, 0x5e, 0xae, 0x4f, 0xd9, 0x18, 0x36,
	0x93, 0x7c, 0x4f, 0x3a, 0x81, 0xd1, 0xb9, 0xbf, 0xf4, 0xe0, 0x9c, 0x33, 0xf5, 0x70, 0x25, 0x47,
	0xa6, 0xbe, 0x40, 0xe7, 0xe2, 0x3b, 0x0f, 0xc1, 0xf9, 0x34, 0x1c, 0xed, 0x53, 0xd1, 0xa3, 0x21,
	0xcf, 0x59, 0x66, 0x37, 0xdc, 0x5e, 0x10, 0xab, 0xc8, 0xd8, 0xd6, 0x74, 0x23, 0xfb, 0x81, 0x07,
	0xeb, 0x4e, 0xfb, 0xf8, 0xa4, 0x85, 0xa9, 0xaf, 0xe5, 0x84, 0x1d, 0xde, 0x1a, 0xc1, 0x75, 0x19,
	0xca, 0x6d, 0x28, 0x8b, 0x39, 0x0b, 0xca, 0x7c, 0x4f, 0x38, 0xee, 0xd8, 0xae, 0x9c, 0x33, 0xf3,
	0x7e, 0xee, 0xc1, 0x99, 0xb1, 0x3d, 0x1a, 0x51, 0xb0, 0x38, 0xf5, 0x55, 0x9d, 0x1e, 0xd9, 0xa1,
	0x3a, 0xc6, 0x67, 0xc1, 0x9c, 0x9e, 0x51, 0x5c, 0xe6, 0xe3, 0x06, 0x41, 0x5e, 0x7d, 0xc6, 0x4f,
	0x3d, 0x38, 0x5d, 0x3f, 0x57, 0x23, 0x53, 0x9b, 0x53, 0x5f, 0xd2, 0x7a, 0xf5, 0x54, 0xd5, 0xd1,
	0x3d, 0x0e, 0x2b, 0x82, 0xc6, 0xf9, 0x40, 0x27, 0x64, 0x03, 0x67, 0xc9, 0x3c, 0xc5, 0x1d, 0xd5,
	0x88, 0xfd, 0x3f, 0xac, 0xa4, 0x92, 0x87, 0x0f, 0x44, 0xc4, 0xad, 0xd8, 0x32, 0x8a, 0x2d, 0xa5,
	0x92, 0xbf, 0x2e, 0x22, 0x6e, 0xa4, 0xde, 0xf3, 0xc0, 0xc5, 0x44, 0x38, 0xa2, 0x75, 0x65, 0xea,
	0x8b, 0x5c, 0xb3, 0xc3, 0xa0, 0x0a, 0xdc, 0x7f, 0xcb, 0x15, 0x6a, 0x7a, 0x42, 0xac, 0x4c, 0xee,
	0x34, 0x8f, 0x8e, 0x38, 0x8d, 0xa4, 0xc4, 0xbb, 0x00, 0xa9, 0xb5, 0x5c, 0xba, 0xc6, 0xe4, 0x35,
	0xcd, 0xd6, 0x37, 0xc2, 0x66, 0xd6, 0xcd, 0x4d, 0x62, 0x7d, 0x14, 0x60, 0x38, 0xc9, 0x26, 0xd3,
	0xc5, 0xd8, 0xc9, 0xf9, 0xef, 0x78, 0xb0, 0x3e, 0x34, 0x46, 0x45, 0x6e, 0x3b, 0x66, 0x45, 0x27,
	0xef, 0xbc, 0x65, 0x9f, 0x16, 0x52, 0x09, 0x16, 0xab, 0x50, 0xe4, 0x85, 0x7d, 0xe1, 0xe3, 0xd3,
	0x62, 0x07, 0xa9, 0x81, 0x26, 0xea, 0x3a, 0x4b, 0x4f, 0x75, 0xa5, 0x9f, 0x29, 0xdd, 0x81, 0x8a,
	0xdc, 0xd5, 0xfb, 0x8f, 0xc1, 0x32, 0x17, 0xb4, 0xcb, 0xf6, 0xc3, 0x94, 0x66, 0x3d, 0xb5, 0x67,
	0x6b, 0xd3, 0x25, 0x43, 0xdc, 0x42, 0x9a, 0xff, 0xeb, 0x5a, 0xb3, 0x54, 0x2b, 0x2c, 0xb2, 0xac,
	0xe8, 0x7f, 0x54, 0x30, 0xe7, 0xa1, 0x85, 0xeb, 0x28, 0x9f, 0x13, 0xe5, 0x87, 0x97, 0x15, 0x2a,
	0xf2, 0xb2, 0x82, 0xd9, 0x4c, 0x88, 0x0f, 0xcb, 0x5a, 0x12, 0x75, 0x89, 0xe1, 0x97, 0x17, 0xbd,
	0x16, 0x54, 0x25, 0x36, 0x13, 0x72, 0x02, 0xe6, 0xa5, 0x8a, 0x54, 0x21, 0xed, 0x17, 0x4e, 0x3b,
	0xf2, 0xff, 0x52, 0x7b, 0x1d, 0x6a, 0x35, 0x16, 0xe6, 0x3a, 0x34, 0xf4, 0xa8, 0x72, 0x5f, 0x2f,
	0x50, 0x91, 0xe3, 0x35, 0xfd, 0x1d, 0x0f, 0xb0, 0xe1, 0x6e, 0xa5, 0xc3, 0xbc, 0xf3, 0x96, 0x6b,
	0x96, 0x35, 0x37, 0xbe, 0x3c, 0xd1, 0x38, 0x1b, 0xd9, 0xc9, 0xa0, 0x65, 0xed, 0xee, 0x14, 0x9d,
	0x3b, 0x68, 0x95, 0xfc, 0xc4, 0x83, 0x75, 0xf4, 0x6f, 0x87, 0x62, 0xcf, 0xac, 0x8e, 0x69, 0x1a,
	0xad, 0xd2, 0xd1, 0x1d, 0x0d, 0x4e, 0x0c, 0xed, 0xdf, 0xa8, 0x40, 0xf3, 0xff, 0x46, 0xaa, 0xaf,
	0xa5, 0xca, 0x87, 0x6f, 0x22, 0xf5, 0x3b, 0xc1, 0x34, 0x73, 0x37, 0xa6, 0x50, 0x70, 0x56, 0x3f,
	0x76, 0x04, 0xce, 0x12, 0xf9, 0x3a, 0x34, 0x2b, 0x5f, 0x1c, 0xda, 0xcf, 0x4f, 0xe3, 0x9b, 0xd1,
	0xc8, 0x17, 0x8d, 0x60, 0x51, 0x6e, 0xa4, 0x3b, 0x45, 0x67, 0x4b, 0x72, 0xa2, 0xa0, 0xa1, 0x68,
	0x9f, 0xa7, 0x91, 0xa2, 0xed, 0x4b, 0x53, 0xec, 0xa3, 0xeb, 0x35, 0x97, 0x96, 0xb0, 0xa4, 0x1c,
	0x6b, 0x16, 0xb6, 0x3f, 0x3e, 0x85, 0x92, 0x72, 0xcc, 0x4a, 0xd0, 0xb2, 0xa4, 0xb2, 0x1f, 0xa9,
	0x5f, 0x1b, 0xd5, 0x46, 0x4d, 0xfb, 0xf2, 0xd4, 0x3b, 0x41, 0xae, 0x91, 0xa7, 0x5f, 0xa7, 0x3f,
	0xf0, 0xc0, 0x65, 0xea, 0x9a, 0x54, 0xfb, 0x85, 0x29, 0x84, 0xc2, 0x68, 0x9f, 0x2e, 0x70, 0x0f,
	0x81, 0xdd, 0x0a, 0xa2, 0x27, 0x61, 0x95, 0x65, 0xf5, 0x77, 0xda, 0x27, 0xcc, 0x3f, 0x34, 0x20,
	0x79, 0xf8, 0x4c, 0x1b, 0x00, 0x0c, 0x3b, 0x57, 0xed, 0x17, 0x11, 0xef, 0xeb, 0x93, 0x7d, 0x1f,
	0x95, 0xea, 0x83, 0x45, 0xfd, 0xdb, 0x3c, 0xd0, 0x2e, 0x00, 0xe9, 0x44, 0xf1, 0xbd, 0xa2, 0xfc,
	0xdc, 0x88, 0x3d, 0x9d, 0x97, 0xcc, 0xfb, 0xc5, 0x70, 0xcc, 0x77, 0xed, 0xdb, 0x51, 0x9f, 0x92,
	0x1e, 0xcc, 0xee, 0xe5, 0xbc, 0xfd, 0xc9, 0xc9, 0x7e, 0x4e, 0xac, 0x75, 0xa7, 0x02, 0x6d, 0x81,
	0xbc, 0x33, 0x7c, 0x37, 0xda, 0x76, 0x85, 0xe6, 0xb5, 0x3f, 0x35, 0x85, 0xce, 0x66, 0xbd, 0x1b,
	0xe5, 0xde, 0x8c, 0xa6, 0x19, 0xa2, 0xaf, 0x67, 0xc2, 0x61, 0xde, 0x74, 0x74, 0xda, 0x9f, 0x9e,
	0xc2, 0xa9, 0xae, 0xf4, 0x98, 0x02, 0x6b, 0x87, 0x0c, 0xa0, 0x49, 0xf7, 0x39, 0x13, 0x07, 0xd8,
	0x78, 0x69, 0x7f, 0x66, 0x0a, 0xee, 0x76, 0x1d, 0x9d, 0x00, 0x8c, 0xa5, 0x5d, 0xd6, 0x1f, 0xef,
	0x15, 0xbc, 0xfc, 0xbf, 0xd0, 0x2b, 0xf8, 0xec, 0x7f, 0xa9, 0x57, 0x40, 0xee, 0xc3, 0x2c, 0xef,
	0xc6, 0xed, 0x2b, 0x67, 0x67, 0x27, 0x69, 0xff, 0x21, 0x2d, 0x9d, 0x40, 0xdb, 0xd2, 0x59, 0x60,
	0xf8, 0x0c, 0x6f, 0x5f, 0x9d, 0x42, 0x16, 0x18, 0xaa, 0x0f, 0x16, 0xf1, 0x37, 0x86, 0xb8, 0xac,
	0x15, 0x9f, 0xd7, 0x26, 0xfb, 0x7d, 0xb3, 0x5a, 0x1e, 0x57, 0x4a, 0x5a, 0xf2, 0x38, 0xd6, 0x89,
	0x2c, 0xc3, 0x7a, 0xc3, 0x14, 0xc8, 0xd7, 0x5d, 0xcb, 0x6e, 0x33, 0xbb, 0x21, 0x6c, 0x61, 0x9c,
	0xc1, 0xbc, 0x91, 0x69, 0xdf, 0xc0, 0x9d, 0x78, 0x7d, 0xe2, 0xb5, 0x8e, 0xad, 0x72, 0x8e, 0x30,
	0x6d, 0x94, 0x3c, 0x89, 0xed, 0xf7, 0xbc, 0x50, 0x15, 0x5c, 0x37, 0x5d, 0xfd, 0x7a, 0xa7, 0x50,
	0x25, 0x30, 0x0e, 0x0b, 0x56, 0xaa, 0xfd, 0xca, 0x74, 0x91, 0xcd, 0xe7, 0x68, 0xb6, 0x33, 0x8f,
	0xff, 0x56, 0xf6, 0xfc, 0x3f, 0x02, 0x00, 0x00, 0xff, 0xff, 0xd1, 0x69, 0xd5, 0x8f, 0xd1, 0x28,
	0x00, 0x00,
}
