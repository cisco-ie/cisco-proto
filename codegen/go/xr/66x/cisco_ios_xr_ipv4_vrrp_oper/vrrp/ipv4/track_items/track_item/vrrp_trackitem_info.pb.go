/*
Copyright 2019 Cisco Systems

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: vrrp_trackitem_info.proto

package cisco_ios_xr_ipv4_vrrp_oper_vrrp_ipv4_track_items_track_item

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type VrrpTrackitemInfo_KEYS struct {
	InterfaceName        string   `protobuf:"bytes,1,opt,name=interface_name,json=interfaceName,proto3" json:"interface_name,omitempty"`
	VirtualRouterId      uint32   `protobuf:"varint,2,opt,name=virtual_router_id,json=virtualRouterId,proto3" json:"virtual_router_id,omitempty"`
	TrackedInterfaceName string   `protobuf:"bytes,3,opt,name=tracked_interface_name,json=trackedInterfaceName,proto3" json:"tracked_interface_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VrrpTrackitemInfo_KEYS) Reset()         { *m = VrrpTrackitemInfo_KEYS{} }
func (m *VrrpTrackitemInfo_KEYS) String() string { return proto.CompactTextString(m) }
func (*VrrpTrackitemInfo_KEYS) ProtoMessage()    {}
func (*VrrpTrackitemInfo_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_75247e93c2102220, []int{0}
}

func (m *VrrpTrackitemInfo_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VrrpTrackitemInfo_KEYS.Unmarshal(m, b)
}
func (m *VrrpTrackitemInfo_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VrrpTrackitemInfo_KEYS.Marshal(b, m, deterministic)
}
func (m *VrrpTrackitemInfo_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VrrpTrackitemInfo_KEYS.Merge(m, src)
}
func (m *VrrpTrackitemInfo_KEYS) XXX_Size() int {
	return xxx_messageInfo_VrrpTrackitemInfo_KEYS.Size(m)
}
func (m *VrrpTrackitemInfo_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_VrrpTrackitemInfo_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_VrrpTrackitemInfo_KEYS proto.InternalMessageInfo

func (m *VrrpTrackitemInfo_KEYS) GetInterfaceName() string {
	if m != nil {
		return m.InterfaceName
	}
	return ""
}

func (m *VrrpTrackitemInfo_KEYS) GetVirtualRouterId() uint32 {
	if m != nil {
		return m.VirtualRouterId
	}
	return 0
}

func (m *VrrpTrackitemInfo_KEYS) GetTrackedInterfaceName() string {
	if m != nil {
		return m.TrackedInterfaceName
	}
	return ""
}

type VrrpTrackitemInfo struct {
	Interface            string   `protobuf:"bytes,50,opt,name=interface,proto3" json:"interface,omitempty"`
	VirtualRouterIdXr    uint32   `protobuf:"varint,51,opt,name=virtual_router_id_xr,json=virtualRouterIdXr,proto3" json:"virtual_router_id_xr,omitempty"`
	TrackedItemType      uint32   `protobuf:"varint,52,opt,name=tracked_item_type,json=trackedItemType,proto3" json:"tracked_item_type,omitempty"`
	TrackedItemIndex     string   `protobuf:"bytes,53,opt,name=tracked_item_index,json=trackedItemIndex,proto3" json:"tracked_item_index,omitempty"`
	State                uint32   `protobuf:"varint,54,opt,name=state,proto3" json:"state,omitempty"`
	Priority             uint32   `protobuf:"varint,55,opt,name=priority,proto3" json:"priority,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VrrpTrackitemInfo) Reset()         { *m = VrrpTrackitemInfo{} }
func (m *VrrpTrackitemInfo) String() string { return proto.CompactTextString(m) }
func (*VrrpTrackitemInfo) ProtoMessage()    {}
func (*VrrpTrackitemInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_75247e93c2102220, []int{1}
}

func (m *VrrpTrackitemInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VrrpTrackitemInfo.Unmarshal(m, b)
}
func (m *VrrpTrackitemInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VrrpTrackitemInfo.Marshal(b, m, deterministic)
}
func (m *VrrpTrackitemInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VrrpTrackitemInfo.Merge(m, src)
}
func (m *VrrpTrackitemInfo) XXX_Size() int {
	return xxx_messageInfo_VrrpTrackitemInfo.Size(m)
}
func (m *VrrpTrackitemInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_VrrpTrackitemInfo.DiscardUnknown(m)
}

var xxx_messageInfo_VrrpTrackitemInfo proto.InternalMessageInfo

func (m *VrrpTrackitemInfo) GetInterface() string {
	if m != nil {
		return m.Interface
	}
	return ""
}

func (m *VrrpTrackitemInfo) GetVirtualRouterIdXr() uint32 {
	if m != nil {
		return m.VirtualRouterIdXr
	}
	return 0
}

func (m *VrrpTrackitemInfo) GetTrackedItemType() uint32 {
	if m != nil {
		return m.TrackedItemType
	}
	return 0
}

func (m *VrrpTrackitemInfo) GetTrackedItemIndex() string {
	if m != nil {
		return m.TrackedItemIndex
	}
	return ""
}

func (m *VrrpTrackitemInfo) GetState() uint32 {
	if m != nil {
		return m.State
	}
	return 0
}

func (m *VrrpTrackitemInfo) GetPriority() uint32 {
	if m != nil {
		return m.Priority
	}
	return 0
}

func init() {
	proto.RegisterType((*VrrpTrackitemInfo_KEYS)(nil), "cisco_ios_xr_ipv4_vrrp_oper.vrrp.ipv4.track_items.track_item.vrrp_trackitem_info_KEYS")
	proto.RegisterType((*VrrpTrackitemInfo)(nil), "cisco_ios_xr_ipv4_vrrp_oper.vrrp.ipv4.track_items.track_item.vrrp_trackitem_info")
}

func init() { proto.RegisterFile("vrrp_trackitem_info.proto", fileDescriptor_75247e93c2102220) }

var fileDescriptor_75247e93c2102220 = []byte{
	// 302 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x91, 0xc1, 0x4a, 0xfb, 0x40,
	0x10, 0xc6, 0xc9, 0xff, 0x8f, 0x62, 0x17, 0xaa, 0x76, 0x0d, 0xb2, 0x8a, 0x87, 0x52, 0x10, 0x8a,
	0x48, 0x04, 0x1b, 0xf5, 0xe2, 0xd5, 0x43, 0x10, 0x3c, 0x44, 0x0f, 0x7a, 0x1a, 0xd6, 0x64, 0x0a,
	0x8b, 0x26, 0xbb, 0x4c, 0xb6, 0x21, 0x79, 0x1e, 0x5f, 0xd0, 0x47, 0x90, 0xdd, 0xd6, 0x18, 0x6b,
	0x6f, 0x3b, 0xdf, 0xcc, 0x7c, 0xdf, 0x6f, 0x58, 0x76, 0x54, 0x13, 0x19, 0xb0, 0x24, 0xb3, 0x37,
	0x65, 0xb1, 0x00, 0x55, 0xce, 0x75, 0x64, 0x48, 0x5b, 0xcd, 0x6f, 0x33, 0x55, 0x65, 0x1a, 0x94,
	0xae, 0xa0, 0x21, 0x50, 0xa6, 0x8e, 0xc1, 0x0f, 0x6b, 0x83, 0x14, 0xb9, 0x57, 0xe4, 0xb4, 0xc8,
	0xef, 0x82, 0x5b, 0xae, 0x7a, 0xef, 0xc9, 0x47, 0xc0, 0xc4, 0x06, 0x6f, 0xb8, 0xbf, 0x7b, 0x79,
	0xe4, 0xa7, 0x6c, 0x57, 0x95, 0x16, 0x69, 0x2e, 0x33, 0x84, 0x52, 0x16, 0x28, 0x82, 0x71, 0x30,
	0x1d, 0xa4, 0xc3, 0x4e, 0x7d, 0x90, 0x05, 0xf2, 0x33, 0x36, 0xaa, 0x15, 0xd9, 0x85, 0x7c, 0x07,
	0xd2, 0x0b, 0x8b, 0x04, 0x2a, 0x17, 0xff, 0xc6, 0xc1, 0x74, 0x98, 0xee, 0xad, 0x1a, 0xa9, 0xd7,
	0x93, 0x9c, 0xc7, 0xec, 0xd0, 0x27, 0x61, 0x0e, 0x6b, 0xd6, 0xff, 0xbd, 0x75, 0xb8, 0xea, 0x26,
	0xfd, 0x84, 0xc9, 0x67, 0xc0, 0x0e, 0x36, 0x50, 0xf2, 0x13, 0x36, 0xe8, 0x5c, 0xc4, 0xa5, 0x37,
	0xf8, 0x11, 0xf8, 0x05, 0x0b, 0xff, 0x70, 0x41, 0x43, 0x62, 0xe6, 0xd1, 0x46, 0x6b, 0x68, 0xcf,
	0xe4, 0x0e, 0xe9, 0xe0, 0x5c, 0x86, 0x6d, 0x0d, 0x8a, 0x78, 0x79, 0xc8, 0x37, 0x97, 0xc5, 0xe2,
	0xa9, 0x35, 0xc8, 0xcf, 0x19, 0xff, 0x35, 0xab, 0xca, 0x1c, 0x1b, 0x71, 0xe5, 0x19, 0xf6, 0x7b,
	0xc3, 0x89, 0xd3, 0x79, 0xc8, 0xb6, 0x2a, 0x2b, 0x2d, 0x8a, 0x6b, 0xef, 0xb6, 0x2c, 0xf8, 0x31,
	0xdb, 0x31, 0xa4, 0x34, 0x29, 0xdb, 0x8a, 0x1b, 0xdf, 0xe8, 0xea, 0xd7, 0x6d, 0xff, 0xbb, 0xb3,
	0xaf, 0x00, 0x00, 0x00, 0xff, 0xff, 0x9f, 0xe9, 0xda, 0xa1, 0xfa, 0x01, 0x00, 0x00,
}
