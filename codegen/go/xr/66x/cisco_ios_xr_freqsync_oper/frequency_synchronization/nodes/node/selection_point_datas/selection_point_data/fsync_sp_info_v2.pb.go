/*
Copyright 2019 Cisco Systems

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: fsync_sp_info_v2.proto

package cisco_ios_xr_freqsync_oper_frequency_synchronization_nodes_node_selection_point_datas_selection_point_data

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type FsyncSpInfoV2_KEYS struct {
	Node                 string   `protobuf:"bytes,1,opt,name=node,proto3" json:"node,omitempty"`
	SelectionPoint       uint32   `protobuf:"varint,2,opt,name=selection_point,json=selectionPoint,proto3" json:"selection_point,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FsyncSpInfoV2_KEYS) Reset()         { *m = FsyncSpInfoV2_KEYS{} }
func (m *FsyncSpInfoV2_KEYS) String() string { return proto.CompactTextString(m) }
func (*FsyncSpInfoV2_KEYS) ProtoMessage()    {}
func (*FsyncSpInfoV2_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_01d4e530fe593f71, []int{0}
}

func (m *FsyncSpInfoV2_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FsyncSpInfoV2_KEYS.Unmarshal(m, b)
}
func (m *FsyncSpInfoV2_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FsyncSpInfoV2_KEYS.Marshal(b, m, deterministic)
}
func (m *FsyncSpInfoV2_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FsyncSpInfoV2_KEYS.Merge(m, src)
}
func (m *FsyncSpInfoV2_KEYS) XXX_Size() int {
	return xxx_messageInfo_FsyncSpInfoV2_KEYS.Size(m)
}
func (m *FsyncSpInfoV2_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_FsyncSpInfoV2_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_FsyncSpInfoV2_KEYS proto.InternalMessageInfo

func (m *FsyncSpInfoV2_KEYS) GetNode() string {
	if m != nil {
		return m.Node
	}
	return ""
}

func (m *FsyncSpInfoV2_KEYS) GetSelectionPoint() uint32 {
	if m != nil {
		return m.SelectionPoint
	}
	return 0
}

type FsyncBagSpInfo struct {
	SelectionPoint            uint32   `protobuf:"varint,1,opt,name=selection_point,json=selectionPoint,proto3" json:"selection_point,omitempty"`
	SelectionPointDescription string   `protobuf:"bytes,2,opt,name=selection_point_description,json=selectionPointDescription,proto3" json:"selection_point_description,omitempty"`
	XXX_NoUnkeyedLiteral      struct{} `json:"-"`
	XXX_unrecognized          []byte   `json:"-"`
	XXX_sizecache             int32    `json:"-"`
}

func (m *FsyncBagSpInfo) Reset()         { *m = FsyncBagSpInfo{} }
func (m *FsyncBagSpInfo) String() string { return proto.CompactTextString(m) }
func (*FsyncBagSpInfo) ProtoMessage()    {}
func (*FsyncBagSpInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_01d4e530fe593f71, []int{1}
}

func (m *FsyncBagSpInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FsyncBagSpInfo.Unmarshal(m, b)
}
func (m *FsyncBagSpInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FsyncBagSpInfo.Marshal(b, m, deterministic)
}
func (m *FsyncBagSpInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FsyncBagSpInfo.Merge(m, src)
}
func (m *FsyncBagSpInfo) XXX_Size() int {
	return xxx_messageInfo_FsyncBagSpInfo.Size(m)
}
func (m *FsyncBagSpInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_FsyncBagSpInfo.DiscardUnknown(m)
}

var xxx_messageInfo_FsyncBagSpInfo proto.InternalMessageInfo

func (m *FsyncBagSpInfo) GetSelectionPoint() uint32 {
	if m != nil {
		return m.SelectionPoint
	}
	return 0
}

func (m *FsyncBagSpInfo) GetSelectionPointDescription() string {
	if m != nil {
		return m.SelectionPointDescription
	}
	return ""
}

type FsyncBagSpOutputDefV2 struct {
	LocalClockOuput       bool              `protobuf:"varint,1,opt,name=local_clock_ouput,json=localClockOuput,proto3" json:"local_clock_ouput,omitempty"`
	LocalLineOutput       bool              `protobuf:"varint,2,opt,name=local_line_output,json=localLineOutput,proto3" json:"local_line_output,omitempty"`
	LocalTimeOfDayOutput  bool              `protobuf:"varint,3,opt,name=local_time_of_day_output,json=localTimeOfDayOutput,proto3" json:"local_time_of_day_output,omitempty"`
	SpaSelectionPoint     []*FsyncBagSpInfo `protobuf:"bytes,4,rep,name=spa_selection_point,json=spaSelectionPoint,proto3" json:"spa_selection_point,omitempty"`
	NodeSelectionPoint    []*FsyncBagSpInfo `protobuf:"bytes,5,rep,name=node_selection_point,json=nodeSelectionPoint,proto3" json:"node_selection_point,omitempty"`
	ChassisSelectionPoint []*FsyncBagSpInfo `protobuf:"bytes,6,rep,name=chassis_selection_point,json=chassisSelectionPoint,proto3" json:"chassis_selection_point,omitempty"`
	RouterSelectionPoint  []*FsyncBagSpInfo `protobuf:"bytes,7,rep,name=router_selection_point,json=routerSelectionPoint,proto3" json:"router_selection_point,omitempty"`
	XXX_NoUnkeyedLiteral  struct{}          `json:"-"`
	XXX_unrecognized      []byte            `json:"-"`
	XXX_sizecache         int32             `json:"-"`
}

func (m *FsyncBagSpOutputDefV2) Reset()         { *m = FsyncBagSpOutputDefV2{} }
func (m *FsyncBagSpOutputDefV2) String() string { return proto.CompactTextString(m) }
func (*FsyncBagSpOutputDefV2) ProtoMessage()    {}
func (*FsyncBagSpOutputDefV2) Descriptor() ([]byte, []int) {
	return fileDescriptor_01d4e530fe593f71, []int{2}
}

func (m *FsyncBagSpOutputDefV2) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FsyncBagSpOutputDefV2.Unmarshal(m, b)
}
func (m *FsyncBagSpOutputDefV2) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FsyncBagSpOutputDefV2.Marshal(b, m, deterministic)
}
func (m *FsyncBagSpOutputDefV2) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FsyncBagSpOutputDefV2.Merge(m, src)
}
func (m *FsyncBagSpOutputDefV2) XXX_Size() int {
	return xxx_messageInfo_FsyncBagSpOutputDefV2.Size(m)
}
func (m *FsyncBagSpOutputDefV2) XXX_DiscardUnknown() {
	xxx_messageInfo_FsyncBagSpOutputDefV2.DiscardUnknown(m)
}

var xxx_messageInfo_FsyncBagSpOutputDefV2 proto.InternalMessageInfo

func (m *FsyncBagSpOutputDefV2) GetLocalClockOuput() bool {
	if m != nil {
		return m.LocalClockOuput
	}
	return false
}

func (m *FsyncBagSpOutputDefV2) GetLocalLineOutput() bool {
	if m != nil {
		return m.LocalLineOutput
	}
	return false
}

func (m *FsyncBagSpOutputDefV2) GetLocalTimeOfDayOutput() bool {
	if m != nil {
		return m.LocalTimeOfDayOutput
	}
	return false
}

func (m *FsyncBagSpOutputDefV2) GetSpaSelectionPoint() []*FsyncBagSpInfo {
	if m != nil {
		return m.SpaSelectionPoint
	}
	return nil
}

func (m *FsyncBagSpOutputDefV2) GetNodeSelectionPoint() []*FsyncBagSpInfo {
	if m != nil {
		return m.NodeSelectionPoint
	}
	return nil
}

func (m *FsyncBagSpOutputDefV2) GetChassisSelectionPoint() []*FsyncBagSpInfo {
	if m != nil {
		return m.ChassisSelectionPoint
	}
	return nil
}

func (m *FsyncBagSpOutputDefV2) GetRouterSelectionPoint() []*FsyncBagSpInfo {
	if m != nil {
		return m.RouterSelectionPoint
	}
	return nil
}

type FsyncBagTimestamp struct {
	Seconds              uint32   `protobuf:"varint,1,opt,name=seconds,proto3" json:"seconds,omitempty"`
	Nanoseconds          uint32   `protobuf:"varint,2,opt,name=nanoseconds,proto3" json:"nanoseconds,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FsyncBagTimestamp) Reset()         { *m = FsyncBagTimestamp{} }
func (m *FsyncBagTimestamp) String() string { return proto.CompactTextString(m) }
func (*FsyncBagTimestamp) ProtoMessage()    {}
func (*FsyncBagTimestamp) Descriptor() ([]byte, []int) {
	return fileDescriptor_01d4e530fe593f71, []int{3}
}

func (m *FsyncBagTimestamp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FsyncBagTimestamp.Unmarshal(m, b)
}
func (m *FsyncBagTimestamp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FsyncBagTimestamp.Marshal(b, m, deterministic)
}
func (m *FsyncBagTimestamp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FsyncBagTimestamp.Merge(m, src)
}
func (m *FsyncBagTimestamp) XXX_Size() int {
	return xxx_messageInfo_FsyncBagTimestamp.Size(m)
}
func (m *FsyncBagTimestamp) XXX_DiscardUnknown() {
	xxx_messageInfo_FsyncBagTimestamp.DiscardUnknown(m)
}

var xxx_messageInfo_FsyncBagTimestamp proto.InternalMessageInfo

func (m *FsyncBagTimestamp) GetSeconds() uint32 {
	if m != nil {
		return m.Seconds
	}
	return 0
}

func (m *FsyncBagTimestamp) GetNanoseconds() uint32 {
	if m != nil {
		return m.Nanoseconds
	}
	return 0
}

type FsyncSpInfoV2 struct {
	SelectionPointType   uint32                 `protobuf:"varint,50,opt,name=selection_point_type,json=selectionPointType,proto3" json:"selection_point_type,omitempty"`
	Description          string                 `protobuf:"bytes,51,opt,name=description,proto3" json:"description,omitempty"`
	Inputs               uint32                 `protobuf:"varint,52,opt,name=inputs,proto3" json:"inputs,omitempty"`
	InputsSelected       uint32                 `protobuf:"varint,53,opt,name=inputs_selected,json=inputsSelected,proto3" json:"inputs_selected,omitempty"`
	Output               *FsyncBagSpOutputDefV2 `protobuf:"bytes,54,opt,name=output,proto3" json:"output,omitempty"`
	LastProgrammed       *FsyncBagTimestamp     `protobuf:"bytes,55,opt,name=last_programmed,json=lastProgrammed,proto3" json:"last_programmed,omitempty"`
	LastSelection        *FsyncBagTimestamp     `protobuf:"bytes,56,opt,name=last_selection,json=lastSelection,proto3" json:"last_selection,omitempty"`
	TimeOfDaySelection   bool                   `protobuf:"varint,57,opt,name=time_of_day_selection,json=timeOfDaySelection,proto3" json:"time_of_day_selection,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *FsyncSpInfoV2) Reset()         { *m = FsyncSpInfoV2{} }
func (m *FsyncSpInfoV2) String() string { return proto.CompactTextString(m) }
func (*FsyncSpInfoV2) ProtoMessage()    {}
func (*FsyncSpInfoV2) Descriptor() ([]byte, []int) {
	return fileDescriptor_01d4e530fe593f71, []int{4}
}

func (m *FsyncSpInfoV2) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FsyncSpInfoV2.Unmarshal(m, b)
}
func (m *FsyncSpInfoV2) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FsyncSpInfoV2.Marshal(b, m, deterministic)
}
func (m *FsyncSpInfoV2) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FsyncSpInfoV2.Merge(m, src)
}
func (m *FsyncSpInfoV2) XXX_Size() int {
	return xxx_messageInfo_FsyncSpInfoV2.Size(m)
}
func (m *FsyncSpInfoV2) XXX_DiscardUnknown() {
	xxx_messageInfo_FsyncSpInfoV2.DiscardUnknown(m)
}

var xxx_messageInfo_FsyncSpInfoV2 proto.InternalMessageInfo

func (m *FsyncSpInfoV2) GetSelectionPointType() uint32 {
	if m != nil {
		return m.SelectionPointType
	}
	return 0
}

func (m *FsyncSpInfoV2) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *FsyncSpInfoV2) GetInputs() uint32 {
	if m != nil {
		return m.Inputs
	}
	return 0
}

func (m *FsyncSpInfoV2) GetInputsSelected() uint32 {
	if m != nil {
		return m.InputsSelected
	}
	return 0
}

func (m *FsyncSpInfoV2) GetOutput() *FsyncBagSpOutputDefV2 {
	if m != nil {
		return m.Output
	}
	return nil
}

func (m *FsyncSpInfoV2) GetLastProgrammed() *FsyncBagTimestamp {
	if m != nil {
		return m.LastProgrammed
	}
	return nil
}

func (m *FsyncSpInfoV2) GetLastSelection() *FsyncBagTimestamp {
	if m != nil {
		return m.LastSelection
	}
	return nil
}

func (m *FsyncSpInfoV2) GetTimeOfDaySelection() bool {
	if m != nil {
		return m.TimeOfDaySelection
	}
	return false
}

func init() {
	proto.RegisterType((*FsyncSpInfoV2_KEYS)(nil), "cisco_ios_xr_freqsync_oper.frequency_synchronization.nodes.node.selection_point_datas.selection_point_data.fsync_sp_info_v2_KEYS")
	proto.RegisterType((*FsyncBagSpInfo)(nil), "cisco_ios_xr_freqsync_oper.frequency_synchronization.nodes.node.selection_point_datas.selection_point_data.fsync_bag_sp_info")
	proto.RegisterType((*FsyncBagSpOutputDefV2)(nil), "cisco_ios_xr_freqsync_oper.frequency_synchronization.nodes.node.selection_point_datas.selection_point_data.fsync_bag_sp_output_def_v2")
	proto.RegisterType((*FsyncBagTimestamp)(nil), "cisco_ios_xr_freqsync_oper.frequency_synchronization.nodes.node.selection_point_datas.selection_point_data.fsync_bag_timestamp")
	proto.RegisterType((*FsyncSpInfoV2)(nil), "cisco_ios_xr_freqsync_oper.frequency_synchronization.nodes.node.selection_point_datas.selection_point_data.fsync_sp_info_v2")
}

func init() { proto.RegisterFile("fsync_sp_info_v2.proto", fileDescriptor_01d4e530fe593f71) }

var fileDescriptor_01d4e530fe593f71 = []byte{
	// 592 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xcc, 0x95, 0x41, 0x6f, 0xd3, 0x3e,
	0x18, 0xc6, 0xe5, 0xff, 0xb6, 0xee, 0xbf, 0x77, 0xda, 0xc6, 0xbc, 0xae, 0x04, 0xb8, 0x54, 0xbd,
	0x50, 0x71, 0x88, 0xa0, 0x83, 0x01, 0x17, 0x2e, 0x8c, 0x13, 0x48, 0x1d, 0x69, 0x2f, 0x9c, 0x2c,
	0x2f, 0x71, 0x36, 0x43, 0x6a, 0x9b, 0xd8, 0x99, 0x08, 0x02, 0x71, 0xe3, 0x6b, 0x70, 0x43, 0x5c,
	0x10, 0x07, 0xc4, 0xf7, 0xe0, 0x03, 0x71, 0x40, 0x76, 0x92, 0xb6, 0x49, 0x7b, 0x66, 0xbd, 0x54,
	0xf6, 0xe3, 0xf7, 0x7d, 0xfc, 0x53, 0x6d, 0x3f, 0x81, 0x4e, 0xac, 0x73, 0x11, 0x12, 0xad, 0x08,
	0x17, 0xb1, 0x24, 0x97, 0x03, 0x5f, 0xa5, 0xd2, 0x48, 0xfc, 0x3a, 0xe4, 0x3a, 0x94, 0x84, 0x4b,
	0x4d, 0xde, 0xa5, 0x24, 0x4e, 0xd9, 0x5b, 0x57, 0x27, 0x15, 0x4b, 0x7d, 0x3b, 0xcb, 0x98, 0x08,
	0x73, 0x62, 0xb5, 0x8b, 0x54, 0x0a, 0xfe, 0x9e, 0x1a, 0x2e, 0x85, 0x2f, 0x64, 0xc4, 0xb4, 0xfb,
	0xf5, 0x35, 0x4b, 0x58, 0x68, 0x45, 0xa2, 0x24, 0x17, 0x86, 0x44, 0xd4, 0x50, 0xbd, 0x54, 0xed,
	0x8d, 0xe1, 0xb0, 0x49, 0x41, 0x9e, 0x3f, 0x7b, 0x35, 0xc2, 0x18, 0xd6, 0xad, 0x97, 0x87, 0xba,
	0xa8, 0xbf, 0x15, 0xb8, 0x31, 0xbe, 0x0d, 0x7b, 0x0d, 0x13, 0xef, 0xbf, 0x2e, 0xea, 0xef, 0x04,
	0xbb, 0x53, 0xf9, 0xd4, 0xaa, 0xbd, 0x0f, 0xb0, 0x5f, 0xb8, 0x9e, 0xd1, 0xf3, 0xca, 0x79, 0x59,
	0x37, 0x5a, 0xd6, 0x8d, 0x9f, 0xc0, 0xad, 0x05, 0x56, 0xa6, 0xc3, 0x94, 0x2b, 0xab, 0xb8, 0x2d,
	0xb7, 0x82, 0x1b, 0xf5, 0xa6, 0x93, 0x59, 0x41, 0xef, 0x4f, 0x0b, 0x6e, 0xd6, 0xb6, 0x97, 0x99,
	0x51, 0x99, 0x35, 0x89, 0xc9, 0xe5, 0x00, 0xdf, 0x81, 0xfd, 0x44, 0x86, 0x34, 0x21, 0x61, 0x22,
	0xc3, 0x37, 0x44, 0x66, 0x2a, 0x2b, 0x48, 0xfe, 0x0f, 0xf6, 0xdc, 0xc2, 0x53, 0xab, 0x0f, 0xad,
	0x3c, 0xab, 0x4d, 0xb8, 0x60, 0xa5, 0x8f, 0x03, 0xa8, 0x6a, 0x5f, 0x70, 0xc1, 0x86, 0x4e, 0xc6,
	0xc7, 0xe0, 0x15, 0xb5, 0x86, 0x4f, 0x18, 0x91, 0x31, 0x89, 0x68, 0x5e, 0xb5, 0xac, 0xb9, 0x96,
	0xb6, 0x5b, 0x1f, 0xf3, 0x09, 0x1b, 0xc6, 0x27, 0x34, 0x2f, 0xfb, 0xbe, 0x23, 0x38, 0xd0, 0x8a,
	0x92, 0xe6, 0x9f, 0xb3, 0xde, 0x5d, 0xeb, 0x6f, 0x0f, 0x3e, 0xfa, 0xff, 0xee, 0x36, 0xf8, 0x0b,
	0x87, 0x16, 0xec, 0x6b, 0x45, 0x47, 0xf5, 0xe3, 0xf9, 0x81, 0xa0, 0x6d, 0x8d, 0x17, 0x80, 0x37,
	0x56, 0x01, 0x18, 0x5b, 0x8b, 0x06, 0xf1, 0x2f, 0x04, 0xd7, 0xc3, 0x0b, 0xaa, 0x35, 0xd7, 0x0b,
	0xd0, 0xad, 0x55, 0x80, 0x3e, 0x2c, 0xe9, 0x1a, 0xdc, 0x3f, 0x11, 0x74, 0x52, 0x99, 0x19, 0x96,
	0x2e, 0x60, 0x6f, 0xae, 0x02, 0x76, 0xbb, 0x80, 0xab, 0x53, 0xf7, 0x5e, 0xc2, 0xc1, 0xac, 0xd4,
	0xbe, 0x05, 0x6d, 0xe8, 0x44, 0x61, 0x0f, 0x36, 0x35, 0x0b, 0xa5, 0x88, 0x74, 0xf9, 0xec, 0xab,
	0x29, 0xee, 0xc2, 0xb6, 0xa0, 0x42, 0x56, 0xab, 0x45, 0xa4, 0xcc, 0x4b, 0xbd, 0xdf, 0x1b, 0x70,
	0xad, 0x19, 0x53, 0xf8, 0x2e, 0xb4, 0x9b, 0x9c, 0x26, 0x57, 0xcc, 0x1b, 0xb8, 0x7e, 0x5c, 0xcf,
	0x87, 0x71, 0xae, 0x98, 0xdd, 0x68, 0x3e, 0x48, 0x8e, 0x5c, 0x90, 0xcc, 0x4b, 0xb8, 0x03, 0x2d,
	0x2e, 0x54, 0x66, 0xb4, 0x77, 0xdf, 0xb9, 0x94, 0x33, 0x9b, 0x5d, 0xc5, 0xa8, 0x3c, 0x08, 0x16,
	0x79, 0x0f, 0x8a, 0xec, 0x2a, 0xe4, 0x51, 0xa9, 0xe2, 0x2f, 0x08, 0x5a, 0xe5, 0x9b, 0x3f, 0xee,
	0xa2, 0xfe, 0xf6, 0xe0, 0x33, 0xba, 0xb2, 0x33, 0xaa, 0xc5, 0x5e, 0x50, 0x62, 0xe1, 0x6f, 0x08,
	0xf6, 0x12, 0xaa, 0x0d, 0x51, 0xa9, 0x3c, 0x4f, 0xe9, 0x64, 0xc2, 0x22, 0xef, 0xa1, 0x43, 0xfd,
	0x74, 0x35, 0xa4, 0xd3, 0x2b, 0x12, 0xec, 0x5a, 0xae, 0xd3, 0x29, 0x16, 0xfe, 0x8a, 0xc0, 0x49,
	0xb3, 0xdb, 0xef, 0x3d, 0x5a, 0x0d, 0xd2, 0x1d, 0x8b, 0x35, 0xbd, 0xf7, 0xf8, 0x1e, 0x1c, 0xce,
	0x87, 0xfe, 0x0c, 0xf7, 0xb1, 0xcb, 0x7d, 0x6c, 0xaa, 0xc8, 0x9f, 0xb6, 0x9c, 0xb5, 0xdc, 0xb7,
	0xfe, 0xe8, 0x6f, 0x00, 0x00, 0x00, 0xff, 0xff, 0xf7, 0xd7, 0x86, 0x79, 0x05, 0x08, 0x00, 0x00,
}
