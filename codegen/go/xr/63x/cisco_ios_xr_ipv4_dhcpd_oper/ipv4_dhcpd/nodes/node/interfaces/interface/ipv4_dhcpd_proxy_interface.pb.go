/*
Copyright 2019 Cisco Systems

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: ipv4_dhcpd_proxy_interface.proto

package cisco_ios_xr_ipv4_dhcpd_oper_ipv4_dhcpd_nodes_node_interfaces_interface

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Ipv4DhcpdProxyInterface_KEYS struct {
	Nodeid               string   `protobuf:"bytes,1,opt,name=nodeid,proto3" json:"nodeid,omitempty"`
	InterfaceName        string   `protobuf:"bytes,2,opt,name=interface_name,json=interfaceName,proto3" json:"interface_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Ipv4DhcpdProxyInterface_KEYS) Reset()         { *m = Ipv4DhcpdProxyInterface_KEYS{} }
func (m *Ipv4DhcpdProxyInterface_KEYS) String() string { return proto.CompactTextString(m) }
func (*Ipv4DhcpdProxyInterface_KEYS) ProtoMessage()    {}
func (*Ipv4DhcpdProxyInterface_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_e592dc932c90558a, []int{0}
}

func (m *Ipv4DhcpdProxyInterface_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Ipv4DhcpdProxyInterface_KEYS.Unmarshal(m, b)
}
func (m *Ipv4DhcpdProxyInterface_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Ipv4DhcpdProxyInterface_KEYS.Marshal(b, m, deterministic)
}
func (m *Ipv4DhcpdProxyInterface_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Ipv4DhcpdProxyInterface_KEYS.Merge(m, src)
}
func (m *Ipv4DhcpdProxyInterface_KEYS) XXX_Size() int {
	return xxx_messageInfo_Ipv4DhcpdProxyInterface_KEYS.Size(m)
}
func (m *Ipv4DhcpdProxyInterface_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_Ipv4DhcpdProxyInterface_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_Ipv4DhcpdProxyInterface_KEYS proto.InternalMessageInfo

func (m *Ipv4DhcpdProxyInterface_KEYS) GetNodeid() string {
	if m != nil {
		return m.Nodeid
	}
	return ""
}

func (m *Ipv4DhcpdProxyInterface_KEYS) GetInterfaceName() string {
	if m != nil {
		return m.InterfaceName
	}
	return ""
}

type Ipv4DhcpdProxyInterface struct {
	IntfIfhandle         uint32   `protobuf:"varint,50,opt,name=intf_ifhandle,json=intfIfhandle,proto3" json:"intf_ifhandle,omitempty"`
	VrfName              string   `protobuf:"bytes,51,opt,name=vrf_name,json=vrfName,proto3" json:"vrf_name,omitempty"`
	IntfMode             uint32   `protobuf:"varint,52,opt,name=intf_mode,json=intfMode,proto3" json:"intf_mode,omitempty"`
	IntfIsAmbiguous      uint32   `protobuf:"varint,53,opt,name=intf_is_ambiguous,json=intfIsAmbiguous,proto3" json:"intf_is_ambiguous,omitempty"`
	IntfProfileName      string   `protobuf:"bytes,54,opt,name=intf_profile_name,json=intfProfileName,proto3" json:"intf_profile_name,omitempty"`
	IntfLeaseLimitType   uint32   `protobuf:"varint,55,opt,name=intf_lease_limit_type,json=intfLeaseLimitType,proto3" json:"intf_lease_limit_type,omitempty"`
	IntfLeaseLimitCount  uint32   `protobuf:"varint,56,opt,name=intf_lease_limit_count,json=intfLeaseLimitCount,proto3" json:"intf_lease_limit_count,omitempty"`
	SrgRole              string   `protobuf:"bytes,57,opt,name=srg_role,json=srgRole,proto3" json:"srg_role,omitempty"`
	MacThrottle          bool     `protobuf:"varint,58,opt,name=mac_throttle,json=macThrottle,proto3" json:"mac_throttle,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Ipv4DhcpdProxyInterface) Reset()         { *m = Ipv4DhcpdProxyInterface{} }
func (m *Ipv4DhcpdProxyInterface) String() string { return proto.CompactTextString(m) }
func (*Ipv4DhcpdProxyInterface) ProtoMessage()    {}
func (*Ipv4DhcpdProxyInterface) Descriptor() ([]byte, []int) {
	return fileDescriptor_e592dc932c90558a, []int{1}
}

func (m *Ipv4DhcpdProxyInterface) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Ipv4DhcpdProxyInterface.Unmarshal(m, b)
}
func (m *Ipv4DhcpdProxyInterface) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Ipv4DhcpdProxyInterface.Marshal(b, m, deterministic)
}
func (m *Ipv4DhcpdProxyInterface) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Ipv4DhcpdProxyInterface.Merge(m, src)
}
func (m *Ipv4DhcpdProxyInterface) XXX_Size() int {
	return xxx_messageInfo_Ipv4DhcpdProxyInterface.Size(m)
}
func (m *Ipv4DhcpdProxyInterface) XXX_DiscardUnknown() {
	xxx_messageInfo_Ipv4DhcpdProxyInterface.DiscardUnknown(m)
}

var xxx_messageInfo_Ipv4DhcpdProxyInterface proto.InternalMessageInfo

func (m *Ipv4DhcpdProxyInterface) GetIntfIfhandle() uint32 {
	if m != nil {
		return m.IntfIfhandle
	}
	return 0
}

func (m *Ipv4DhcpdProxyInterface) GetVrfName() string {
	if m != nil {
		return m.VrfName
	}
	return ""
}

func (m *Ipv4DhcpdProxyInterface) GetIntfMode() uint32 {
	if m != nil {
		return m.IntfMode
	}
	return 0
}

func (m *Ipv4DhcpdProxyInterface) GetIntfIsAmbiguous() uint32 {
	if m != nil {
		return m.IntfIsAmbiguous
	}
	return 0
}

func (m *Ipv4DhcpdProxyInterface) GetIntfProfileName() string {
	if m != nil {
		return m.IntfProfileName
	}
	return ""
}

func (m *Ipv4DhcpdProxyInterface) GetIntfLeaseLimitType() uint32 {
	if m != nil {
		return m.IntfLeaseLimitType
	}
	return 0
}

func (m *Ipv4DhcpdProxyInterface) GetIntfLeaseLimitCount() uint32 {
	if m != nil {
		return m.IntfLeaseLimitCount
	}
	return 0
}

func (m *Ipv4DhcpdProxyInterface) GetSrgRole() string {
	if m != nil {
		return m.SrgRole
	}
	return ""
}

func (m *Ipv4DhcpdProxyInterface) GetMacThrottle() bool {
	if m != nil {
		return m.MacThrottle
	}
	return false
}

func init() {
	proto.RegisterType((*Ipv4DhcpdProxyInterface_KEYS)(nil), "cisco_ios_xr_ipv4_dhcpd_oper.ipv4_dhcpd.nodes.node.interfaces.interface.ipv4_dhcpd_proxy_interface_KEYS")
	proto.RegisterType((*Ipv4DhcpdProxyInterface)(nil), "cisco_ios_xr_ipv4_dhcpd_oper.ipv4_dhcpd.nodes.node.interfaces.interface.ipv4_dhcpd_proxy_interface")
}

func init() { proto.RegisterFile("ipv4_dhcpd_proxy_interface.proto", fileDescriptor_e592dc932c90558a) }

var fileDescriptor_e592dc932c90558a = []byte{
	// 359 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x92, 0xcf, 0x6b, 0xdb, 0x30,
	0x14, 0xc7, 0x71, 0x0e, 0x59, 0xa2, 0x25, 0x1b, 0xd3, 0x58, 0xd0, 0xb6, 0xc3, 0xbc, 0x8c, 0x41,
	0xe8, 0xc1, 0xd0, 0x26, 0xfd, 0x79, 0x2b, 0xa5, 0x94, 0xd2, 0xb4, 0x14, 0x37, 0x97, 0x9e, 0x54,
	0xc5, 0x7e, 0x4e, 0x04, 0xb6, 0x9f, 0x90, 0x94, 0x90, 0xfc, 0xe5, 0xbd, 0x16, 0xc9, 0x6e, 0xd2,
	0x52, 0x72, 0x31, 0x7e, 0xdf, 0x1f, 0xef, 0xc3, 0x03, 0x91, 0x50, 0xaa, 0xe5, 0x88, 0xa7, 0xf3,
	0x44, 0xa5, 0x5c, 0x69, 0x5c, 0xad, 0xb9, 0x2c, 0x2d, 0xe8, 0x4c, 0x24, 0x10, 0x29, 0x8d, 0x16,
	0xe9, 0x55, 0x22, 0x4d, 0x82, 0x5c, 0xa2, 0xe1, 0x2b, 0xcd, 0xdf, 0xc4, 0x51, 0x81, 0x8e, 0xb6,
	0x73, 0x54, 0x62, 0x0a, 0xc6, 0x7f, 0xa3, 0xcd, 0x0e, 0xb3, 0xfd, 0xed, 0x3f, 0x91, 0x3f, 0xbb,
	0x61, 0xfc, 0xe6, 0xf2, 0xf1, 0x81, 0xf6, 0x48, 0xd3, 0xf5, 0x65, 0xca, 0x82, 0x30, 0x18, 0xb4,
	0xe3, 0x7a, 0xa2, 0xff, 0xc9, 0x97, 0x6d, 0xb2, 0x14, 0x05, 0xb0, 0x86, 0xf7, 0xbb, 0x1b, 0xf5,
	0x4e, 0x14, 0xd0, 0x7f, 0x6e, 0x90, 0x5f, 0xbb, 0x11, 0xf4, 0x1f, 0x71, 0xf9, 0x8c, 0xcb, 0x6c,
	0x2e, 0xca, 0x34, 0x07, 0x76, 0x10, 0x06, 0x83, 0x6e, 0xdc, 0x71, 0xe2, 0x75, 0xad, 0xd1, 0x9f,
	0xa4, 0xb5, 0xd4, 0x59, 0x05, 0x19, 0x7a, 0xc8, 0xa7, 0xa5, 0xce, 0xdc, 0x7a, 0xfa, 0x9b, 0xb4,
	0x7d, 0xbf, 0xc0, 0x14, 0xd8, 0xc8, 0x77, 0x5b, 0x4e, 0xb8, 0xc5, 0x14, 0xe8, 0x1e, 0xf9, 0x56,
	0x2d, 0x37, 0x5c, 0x14, 0x53, 0x39, 0x5b, 0xe0, 0xc2, 0xb0, 0x43, 0x1f, 0xfa, 0xea, 0x01, 0xe6,
	0xfc, 0x55, 0xde, 0x64, 0x95, 0xc6, 0x4c, 0xe6, 0xf5, 0x45, 0x47, 0x1e, 0xe6, 0xb3, 0xf7, 0x95,
	0xee, 0xa1, 0xfb, 0xe4, 0x87, 0xcf, 0xe6, 0x20, 0x0c, 0xf0, 0x5c, 0x16, 0xd2, 0x72, 0xbb, 0x56,
	0xc0, 0x8e, 0xfd, 0x6e, 0xea, 0xcc, 0xb1, 0xf3, 0xc6, 0xce, 0x9a, 0xac, 0x15, 0xd0, 0x21, 0xe9,
	0x7d, 0xa8, 0x24, 0xb8, 0x28, 0x2d, 0x3b, 0xf1, 0x9d, 0xef, 0xef, 0x3b, 0x17, 0xce, 0x72, 0x77,
	0x1b, 0x3d, 0xe3, 0x1a, 0x73, 0x60, 0xa7, 0xd5, 0xdd, 0x46, 0xcf, 0x62, 0xcc, 0x81, 0xfe, 0x25,
	0x9d, 0x42, 0x24, 0xdc, 0xce, 0x35, 0x5a, 0x9b, 0x03, 0x3b, 0x0b, 0x83, 0x41, 0x2b, 0xfe, 0x5c,
	0x88, 0x64, 0x52, 0x4b, 0xd3, 0xa6, 0x7f, 0x2b, 0xc3, 0x97, 0x00, 0x00, 0x00, 0xff, 0xff, 0xa5,
	0x60, 0x10, 0xde, 0x4f, 0x02, 0x00, 0x00,
}
