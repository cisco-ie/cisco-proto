/*
Copyright 2019 Cisco Systems

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: ipv4_dhcpd_proxy_type.proto

package cisco_ios_xr_ipv4_dhcpd_oper_ipv4_dhcpd_nodes_node_server_vrfs_vrf_statistics

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Ipv4DhcpdProxyType_KEYS struct {
	Nodeid               string   `protobuf:"bytes,1,opt,name=nodeid,proto3" json:"nodeid,omitempty"`
	VrfName              string   `protobuf:"bytes,2,opt,name=vrf_name,json=vrfName,proto3" json:"vrf_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Ipv4DhcpdProxyType_KEYS) Reset()         { *m = Ipv4DhcpdProxyType_KEYS{} }
func (m *Ipv4DhcpdProxyType_KEYS) String() string { return proto.CompactTextString(m) }
func (*Ipv4DhcpdProxyType_KEYS) ProtoMessage()    {}
func (*Ipv4DhcpdProxyType_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_f5144afb8a1f0d14, []int{0}
}

func (m *Ipv4DhcpdProxyType_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Ipv4DhcpdProxyType_KEYS.Unmarshal(m, b)
}
func (m *Ipv4DhcpdProxyType_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Ipv4DhcpdProxyType_KEYS.Marshal(b, m, deterministic)
}
func (m *Ipv4DhcpdProxyType_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Ipv4DhcpdProxyType_KEYS.Merge(m, src)
}
func (m *Ipv4DhcpdProxyType_KEYS) XXX_Size() int {
	return xxx_messageInfo_Ipv4DhcpdProxyType_KEYS.Size(m)
}
func (m *Ipv4DhcpdProxyType_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_Ipv4DhcpdProxyType_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_Ipv4DhcpdProxyType_KEYS proto.InternalMessageInfo

func (m *Ipv4DhcpdProxyType_KEYS) GetNodeid() string {
	if m != nil {
		return m.Nodeid
	}
	return ""
}

func (m *Ipv4DhcpdProxyType_KEYS) GetVrfName() string {
	if m != nil {
		return m.VrfName
	}
	return ""
}

type Ipv4DhcpdProxyFilteredStats struct {
	ReceivedPackets      uint64   `protobuf:"varint,1,opt,name=received_packets,json=receivedPackets,proto3" json:"received_packets,omitempty"`
	TransmittedPackets   uint64   `protobuf:"varint,2,opt,name=transmitted_packets,json=transmittedPackets,proto3" json:"transmitted_packets,omitempty"`
	DroppedPackets       uint64   `protobuf:"varint,3,opt,name=dropped_packets,json=droppedPackets,proto3" json:"dropped_packets,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Ipv4DhcpdProxyFilteredStats) Reset()         { *m = Ipv4DhcpdProxyFilteredStats{} }
func (m *Ipv4DhcpdProxyFilteredStats) String() string { return proto.CompactTextString(m) }
func (*Ipv4DhcpdProxyFilteredStats) ProtoMessage()    {}
func (*Ipv4DhcpdProxyFilteredStats) Descriptor() ([]byte, []int) {
	return fileDescriptor_f5144afb8a1f0d14, []int{1}
}

func (m *Ipv4DhcpdProxyFilteredStats) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Ipv4DhcpdProxyFilteredStats.Unmarshal(m, b)
}
func (m *Ipv4DhcpdProxyFilteredStats) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Ipv4DhcpdProxyFilteredStats.Marshal(b, m, deterministic)
}
func (m *Ipv4DhcpdProxyFilteredStats) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Ipv4DhcpdProxyFilteredStats.Merge(m, src)
}
func (m *Ipv4DhcpdProxyFilteredStats) XXX_Size() int {
	return xxx_messageInfo_Ipv4DhcpdProxyFilteredStats.Size(m)
}
func (m *Ipv4DhcpdProxyFilteredStats) XXX_DiscardUnknown() {
	xxx_messageInfo_Ipv4DhcpdProxyFilteredStats.DiscardUnknown(m)
}

var xxx_messageInfo_Ipv4DhcpdProxyFilteredStats proto.InternalMessageInfo

func (m *Ipv4DhcpdProxyFilteredStats) GetReceivedPackets() uint64 {
	if m != nil {
		return m.ReceivedPackets
	}
	return 0
}

func (m *Ipv4DhcpdProxyFilteredStats) GetTransmittedPackets() uint64 {
	if m != nil {
		return m.TransmittedPackets
	}
	return 0
}

func (m *Ipv4DhcpdProxyFilteredStats) GetDroppedPackets() uint64 {
	if m != nil {
		return m.DroppedPackets
	}
	return 0
}

type Ipv4DhcpdProxyType struct {
	Discover             *Ipv4DhcpdProxyFilteredStats `protobuf:"bytes,50,opt,name=discover,proto3" json:"discover,omitempty"`
	Offer                *Ipv4DhcpdProxyFilteredStats `protobuf:"bytes,51,opt,name=offer,proto3" json:"offer,omitempty"`
	Request              *Ipv4DhcpdProxyFilteredStats `protobuf:"bytes,52,opt,name=request,proto3" json:"request,omitempty"`
	Decline              *Ipv4DhcpdProxyFilteredStats `protobuf:"bytes,53,opt,name=decline,proto3" json:"decline,omitempty"`
	Ack                  *Ipv4DhcpdProxyFilteredStats `protobuf:"bytes,54,opt,name=ack,proto3" json:"ack,omitempty"`
	Nak                  *Ipv4DhcpdProxyFilteredStats `protobuf:"bytes,55,opt,name=nak,proto3" json:"nak,omitempty"`
	Release              *Ipv4DhcpdProxyFilteredStats `protobuf:"bytes,56,opt,name=release,proto3" json:"release,omitempty"`
	Inform               *Ipv4DhcpdProxyFilteredStats `protobuf:"bytes,57,opt,name=inform,proto3" json:"inform,omitempty"`
	LeaseQuery           *Ipv4DhcpdProxyFilteredStats `protobuf:"bytes,58,opt,name=lease_query,json=leaseQuery,proto3" json:"lease_query,omitempty"`
	LeaseNotAssigned     *Ipv4DhcpdProxyFilteredStats `protobuf:"bytes,59,opt,name=lease_not_assigned,json=leaseNotAssigned,proto3" json:"lease_not_assigned,omitempty"`
	LeaseUnknown         *Ipv4DhcpdProxyFilteredStats `protobuf:"bytes,60,opt,name=lease_unknown,json=leaseUnknown,proto3" json:"lease_unknown,omitempty"`
	LeaseActive          *Ipv4DhcpdProxyFilteredStats `protobuf:"bytes,61,opt,name=lease_active,json=leaseActive,proto3" json:"lease_active,omitempty"`
	BootpRequest         *Ipv4DhcpdProxyFilteredStats `protobuf:"bytes,62,opt,name=bootp_request,json=bootpRequest,proto3" json:"bootp_request,omitempty"`
	BootpReply           *Ipv4DhcpdProxyFilteredStats `protobuf:"bytes,63,opt,name=bootp_reply,json=bootpReply,proto3" json:"bootp_reply,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                     `json:"-"`
	XXX_unrecognized     []byte                       `json:"-"`
	XXX_sizecache        int32                        `json:"-"`
}

func (m *Ipv4DhcpdProxyType) Reset()         { *m = Ipv4DhcpdProxyType{} }
func (m *Ipv4DhcpdProxyType) String() string { return proto.CompactTextString(m) }
func (*Ipv4DhcpdProxyType) ProtoMessage()    {}
func (*Ipv4DhcpdProxyType) Descriptor() ([]byte, []int) {
	return fileDescriptor_f5144afb8a1f0d14, []int{2}
}

func (m *Ipv4DhcpdProxyType) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Ipv4DhcpdProxyType.Unmarshal(m, b)
}
func (m *Ipv4DhcpdProxyType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Ipv4DhcpdProxyType.Marshal(b, m, deterministic)
}
func (m *Ipv4DhcpdProxyType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Ipv4DhcpdProxyType.Merge(m, src)
}
func (m *Ipv4DhcpdProxyType) XXX_Size() int {
	return xxx_messageInfo_Ipv4DhcpdProxyType.Size(m)
}
func (m *Ipv4DhcpdProxyType) XXX_DiscardUnknown() {
	xxx_messageInfo_Ipv4DhcpdProxyType.DiscardUnknown(m)
}

var xxx_messageInfo_Ipv4DhcpdProxyType proto.InternalMessageInfo

func (m *Ipv4DhcpdProxyType) GetDiscover() *Ipv4DhcpdProxyFilteredStats {
	if m != nil {
		return m.Discover
	}
	return nil
}

func (m *Ipv4DhcpdProxyType) GetOffer() *Ipv4DhcpdProxyFilteredStats {
	if m != nil {
		return m.Offer
	}
	return nil
}

func (m *Ipv4DhcpdProxyType) GetRequest() *Ipv4DhcpdProxyFilteredStats {
	if m != nil {
		return m.Request
	}
	return nil
}

func (m *Ipv4DhcpdProxyType) GetDecline() *Ipv4DhcpdProxyFilteredStats {
	if m != nil {
		return m.Decline
	}
	return nil
}

func (m *Ipv4DhcpdProxyType) GetAck() *Ipv4DhcpdProxyFilteredStats {
	if m != nil {
		return m.Ack
	}
	return nil
}

func (m *Ipv4DhcpdProxyType) GetNak() *Ipv4DhcpdProxyFilteredStats {
	if m != nil {
		return m.Nak
	}
	return nil
}

func (m *Ipv4DhcpdProxyType) GetRelease() *Ipv4DhcpdProxyFilteredStats {
	if m != nil {
		return m.Release
	}
	return nil
}

func (m *Ipv4DhcpdProxyType) GetInform() *Ipv4DhcpdProxyFilteredStats {
	if m != nil {
		return m.Inform
	}
	return nil
}

func (m *Ipv4DhcpdProxyType) GetLeaseQuery() *Ipv4DhcpdProxyFilteredStats {
	if m != nil {
		return m.LeaseQuery
	}
	return nil
}

func (m *Ipv4DhcpdProxyType) GetLeaseNotAssigned() *Ipv4DhcpdProxyFilteredStats {
	if m != nil {
		return m.LeaseNotAssigned
	}
	return nil
}

func (m *Ipv4DhcpdProxyType) GetLeaseUnknown() *Ipv4DhcpdProxyFilteredStats {
	if m != nil {
		return m.LeaseUnknown
	}
	return nil
}

func (m *Ipv4DhcpdProxyType) GetLeaseActive() *Ipv4DhcpdProxyFilteredStats {
	if m != nil {
		return m.LeaseActive
	}
	return nil
}

func (m *Ipv4DhcpdProxyType) GetBootpRequest() *Ipv4DhcpdProxyFilteredStats {
	if m != nil {
		return m.BootpRequest
	}
	return nil
}

func (m *Ipv4DhcpdProxyType) GetBootpReply() *Ipv4DhcpdProxyFilteredStats {
	if m != nil {
		return m.BootpReply
	}
	return nil
}

func init() {
	proto.RegisterType((*Ipv4DhcpdProxyType_KEYS)(nil), "cisco_ios_xr_ipv4_dhcpd_oper.ipv4_dhcpd.nodes.node.server.vrfs.vrf.statistics.ipv4_dhcpd_proxy_type_KEYS")
	proto.RegisterType((*Ipv4DhcpdProxyFilteredStats)(nil), "cisco_ios_xr_ipv4_dhcpd_oper.ipv4_dhcpd.nodes.node.server.vrfs.vrf.statistics.ipv4_dhcpd_proxy_filtered_stats")
	proto.RegisterType((*Ipv4DhcpdProxyType)(nil), "cisco_ios_xr_ipv4_dhcpd_oper.ipv4_dhcpd.nodes.node.server.vrfs.vrf.statistics.ipv4_dhcpd_proxy_type")
}

func init() { proto.RegisterFile("ipv4_dhcpd_proxy_type.proto", fileDescriptor_f5144afb8a1f0d14) }

var fileDescriptor_f5144afb8a1f0d14 = []byte{
	// 506 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xc4, 0xd6, 0xbf, 0x6f, 0xd4, 0x30,
	0x14, 0x07, 0x70, 0xb9, 0x85, 0x6b, 0x79, 0x05, 0xae, 0x32, 0x02, 0x19, 0x18, 0xa8, 0x6e, 0xa1,
	0x2c, 0x41, 0x6a, 0xcb, 0xef, 0x5f, 0xea, 0xc0, 0x84, 0x28, 0x70, 0x88, 0x81, 0xc9, 0x72, 0xe3,
	0x17, 0xb0, 0x92, 0xb3, 0x5d, 0xdb, 0x17, 0x9a, 0x8d, 0x01, 0x21, 0xc4, 0x82, 0x10, 0x2b, 0x33,
	0x7f, 0x16, 0x7f, 0x0b, 0x8a, 0x93, 0xc0, 0x49, 0x9c, 0xc4, 0x82, 0xe4, 0x25, 0x52, 0x5e, 0xde,
	0xe5, 0xfb, 0xb9, 0xa7, 0x27, 0x2b, 0x70, 0x59, 0xd9, 0x7a, 0x8f, 0xcb, 0xb7, 0xb9, 0x95, 0xdc,
	0x3a, 0x73, 0xdc, 0xf0, 0xd0, 0x58, 0xcc, 0xac, 0x33, 0xc1, 0xd0, 0xa7, 0xb9, 0xf2, 0xb9, 0xe1,
	0xca, 0x78, 0x7e, 0xec, 0xf8, 0x42, 0xa7, 0xb1, 0xe8, 0xb2, 0x3f, 0xf7, 0x99, 0x36, 0x12, 0x7d,
	0xbc, 0x66, 0x1e, 0x5d, 0x8d, 0x2e, 0xab, 0x5d, 0xe1, 0xdb, 0x4b, 0xe6, 0x83, 0x08, 0xca, 0x07,
	0x95, 0xfb, 0xc9, 0x33, 0xb8, 0xb4, 0x34, 0x8d, 0x3f, 0x79, 0xfc, 0xfa, 0x25, 0xbd, 0x00, 0xa3,
	0xf6, 0x05, 0x4a, 0x32, 0xb2, 0x45, 0xb6, 0x4f, 0x4d, 0xfb, 0x3b, 0x7a, 0x11, 0xd6, 0x6b, 0x57,
	0x70, 0x2d, 0x66, 0xc8, 0x56, 0xe2, 0x93, 0xb5, 0xda, 0x15, 0x07, 0x62, 0x86, 0x93, 0x1f, 0x04,
	0xae, 0xfc, 0xf5, 0xc6, 0x42, 0x55, 0x01, 0x1d, 0x4a, 0xde, 0x26, 0x7b, 0x7a, 0x0d, 0x36, 0x1d,
	0xe6, 0xa8, 0x6a, 0x94, 0xdc, 0x8a, 0xbc, 0xc4, 0xe0, 0x63, 0xc0, 0x89, 0xe9, 0x78, 0xa8, 0x3f,
	0xef, 0xca, 0xf4, 0x3a, 0x9c, 0x0b, 0x4e, 0x68, 0x3f, 0x53, 0x21, 0x2c, 0x74, 0xaf, 0xc4, 0x6e,
	0xba, 0xf0, 0x68, 0xf8, 0xc1, 0x55, 0x18, 0x4b, 0x67, 0xac, 0x5d, 0x68, 0x5e, 0x8d, 0xcd, 0x67,
	0xfb, 0x72, 0xdf, 0x38, 0xf9, 0x39, 0x86, 0xf3, 0x4b, 0xff, 0x3a, 0xfd, 0x4c, 0x60, 0x5d, 0xb6,
	0x53, 0xae, 0xd1, 0xb1, 0x9d, 0x2d, 0xb2, 0xbd, 0xb1, 0xa3, 0xb3, 0xff, 0x3a, 0xf6, 0xec, 0x1f,
	0x13, 0x9a, 0xfe, 0xce, 0xa7, 0x1f, 0x08, 0x9c, 0x34, 0x45, 0x81, 0x8e, 0xed, 0x26, 0x91, 0x74,
	0xe1, 0xf4, 0x13, 0x81, 0x35, 0x87, 0x47, 0x73, 0xf4, 0x81, 0xed, 0x25, 0x81, 0x0c, 0xf1, 0x91,
	0x22, 0x31, 0xaf, 0x94, 0x46, 0x76, 0x23, 0x0d, 0xa5, 0x8f, 0xa7, 0xef, 0x09, 0xac, 0x8a, 0xbc,
	0x64, 0x37, 0x93, 0x30, 0xda, 0xe8, 0x48, 0xd0, 0xa2, 0x64, 0xb7, 0xd2, 0x10, 0xb4, 0x28, 0xfb,
	0xdd, 0xa8, 0x50, 0x78, 0x64, 0xb7, 0x53, 0xed, 0x46, 0x8c, 0xa7, 0x1f, 0x09, 0x8c, 0x94, 0x2e,
	0x8c, 0x9b, 0xb1, 0x3b, 0x49, 0x24, 0x7d, 0x3a, 0xfd, 0x42, 0x60, 0x23, 0x92, 0xf8, 0xd1, 0x1c,
	0x5d, 0xc3, 0xee, 0x26, 0xd1, 0x40, 0x24, 0xbc, 0x68, 0x05, 0xf4, 0x3b, 0x01, 0xda, 0x89, 0xb4,
	0x09, 0x5c, 0x78, 0xaf, 0xde, 0x68, 0x94, 0xec, 0x5e, 0x12, 0xd8, 0x66, 0x94, 0x1c, 0x98, 0xb0,
	0xdf, 0x3b, 0xe8, 0x37, 0x02, 0x67, 0x3a, 0xde, 0x5c, 0x97, 0xda, 0xbc, 0xd3, 0xec, 0x7e, 0x12,
	0xd9, 0xe9, 0x88, 0x78, 0xd5, 0x19, 0xe8, 0x57, 0x02, 0x5d, 0x81, 0x8b, 0x3c, 0xa8, 0x1a, 0xd9,
	0x83, 0x24, 0xa8, 0x6e, 0x95, 0xf6, 0x23, 0x21, 0x4e, 0xea, 0xd0, 0x98, 0x60, 0xf9, 0x70, 0x20,
	0x3f, 0x4c, 0x33, 0xa9, 0x88, 0x98, 0xf6, 0xa7, 0x72, 0xbb, 0xf0, 0x83, 0xca, 0x56, 0x0d, 0x7b,
	0x94, 0x66, 0xe1, 0x7b, 0x93, 0xad, 0x9a, 0xc3, 0x51, 0xfc, 0x60, 0xda, 0xfd, 0x15, 0x00, 0x00,
	0xff, 0xff, 0x16, 0xda, 0xa0, 0x8e, 0x4f, 0x09, 0x00, 0x00,
}
