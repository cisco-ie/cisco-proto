/*
Copyright 2019 Cisco Systems

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: mpls_te_meshgroup.proto

package cisco_ios_xr_mpls_te_oper_mpls_te_standby_auto_tunnel_mesh_mesh_groups_mesh_group

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type MplsTeMeshgroup_KEYS struct {
	MeshGroupId          uint32   `protobuf:"varint,1,opt,name=mesh_group_id,json=meshGroupId,proto3" json:"mesh_group_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MplsTeMeshgroup_KEYS) Reset()         { *m = MplsTeMeshgroup_KEYS{} }
func (m *MplsTeMeshgroup_KEYS) String() string { return proto.CompactTextString(m) }
func (*MplsTeMeshgroup_KEYS) ProtoMessage()    {}
func (*MplsTeMeshgroup_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_f29415511bca539b, []int{0}
}

func (m *MplsTeMeshgroup_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsTeMeshgroup_KEYS.Unmarshal(m, b)
}
func (m *MplsTeMeshgroup_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsTeMeshgroup_KEYS.Marshal(b, m, deterministic)
}
func (m *MplsTeMeshgroup_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsTeMeshgroup_KEYS.Merge(m, src)
}
func (m *MplsTeMeshgroup_KEYS) XXX_Size() int {
	return xxx_messageInfo_MplsTeMeshgroup_KEYS.Size(m)
}
func (m *MplsTeMeshgroup_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsTeMeshgroup_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_MplsTeMeshgroup_KEYS proto.InternalMessageInfo

func (m *MplsTeMeshgroup_KEYS) GetMeshGroupId() uint32 {
	if m != nil {
		return m.MeshGroupId
	}
	return 0
}

type MplsTeMeshgroupDest struct {
	DestinationAddress   string   `protobuf:"bytes,1,opt,name=destination_address,json=destinationAddress,proto3" json:"destination_address,omitempty"`
	TunnelId             uint32   `protobuf:"varint,2,opt,name=tunnel_id,json=tunnelId,proto3" json:"tunnel_id,omitempty"`
	OperationalStatus    string   `protobuf:"bytes,3,opt,name=operational_status,json=operationalStatus,proto3" json:"operational_status,omitempty"`
	RemainingTime        uint32   `protobuf:"varint,4,opt,name=remaining_time,json=remainingTime,proto3" json:"remaining_time,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MplsTeMeshgroupDest) Reset()         { *m = MplsTeMeshgroupDest{} }
func (m *MplsTeMeshgroupDest) String() string { return proto.CompactTextString(m) }
func (*MplsTeMeshgroupDest) ProtoMessage()    {}
func (*MplsTeMeshgroupDest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f29415511bca539b, []int{1}
}

func (m *MplsTeMeshgroupDest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsTeMeshgroupDest.Unmarshal(m, b)
}
func (m *MplsTeMeshgroupDest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsTeMeshgroupDest.Marshal(b, m, deterministic)
}
func (m *MplsTeMeshgroupDest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsTeMeshgroupDest.Merge(m, src)
}
func (m *MplsTeMeshgroupDest) XXX_Size() int {
	return xxx_messageInfo_MplsTeMeshgroupDest.Size(m)
}
func (m *MplsTeMeshgroupDest) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsTeMeshgroupDest.DiscardUnknown(m)
}

var xxx_messageInfo_MplsTeMeshgroupDest proto.InternalMessageInfo

func (m *MplsTeMeshgroupDest) GetDestinationAddress() string {
	if m != nil {
		return m.DestinationAddress
	}
	return ""
}

func (m *MplsTeMeshgroupDest) GetTunnelId() uint32 {
	if m != nil {
		return m.TunnelId
	}
	return 0
}

func (m *MplsTeMeshgroupDest) GetOperationalStatus() string {
	if m != nil {
		return m.OperationalStatus
	}
	return ""
}

func (m *MplsTeMeshgroupDest) GetRemainingTime() uint32 {
	if m != nil {
		return m.RemainingTime
	}
	return 0
}

type MplsTeMeshgroup struct {
	MeshGroupIdXr               uint32                 `protobuf:"varint,50,opt,name=mesh_group_id_xr,json=meshGroupIdXr,proto3" json:"mesh_group_id_xr,omitempty"`
	IsMeshgroupDisabled         bool                   `protobuf:"varint,51,opt,name=is_meshgroup_disabled,json=isMeshgroupDisabled,proto3" json:"is_meshgroup_disabled,omitempty"`
	AttributeSetName            string                 `protobuf:"bytes,52,opt,name=attribute_set_name,json=attributeSetName,proto3" json:"attribute_set_name,omitempty"`
	IsAttributeSetConfigured    bool                   `protobuf:"varint,53,opt,name=is_attribute_set_configured,json=isAttributeSetConfigured,proto3" json:"is_attribute_set_configured,omitempty"`
	IsAttributeSetInDb          bool                   `protobuf:"varint,54,opt,name=is_attribute_set_in_db,json=isAttributeSetInDb,proto3" json:"is_attribute_set_in_db,omitempty"`
	DestinationListName         string                 `protobuf:"bytes,55,opt,name=destination_list_name,json=destinationListName,proto3" json:"destination_list_name,omitempty"`
	IsDestinationListConfigured bool                   `protobuf:"varint,56,opt,name=is_destination_list_configured,json=isDestinationListConfigured,proto3" json:"is_destination_list_configured,omitempty"`
	DestinationListType         string                 `protobuf:"bytes,57,opt,name=destination_list_type,json=destinationListType,proto3" json:"destination_list_type,omitempty"`
	RemainingTime               uint32                 `protobuf:"varint,58,opt,name=remaining_time,json=remainingTime,proto3" json:"remaining_time,omitempty"`
	Destination                 []*MplsTeMeshgroupDest `protobuf:"bytes,59,rep,name=destination,proto3" json:"destination,omitempty"`
	AutoMeshTunnels             uint32                 `protobuf:"varint,60,opt,name=auto_mesh_tunnels,json=autoMeshTunnels,proto3" json:"auto_mesh_tunnels,omitempty"`
	AutoMeshTotalDestinations   uint32                 `protobuf:"varint,61,opt,name=auto_mesh_total_destinations,json=autoMeshTotalDestinations,proto3" json:"auto_mesh_total_destinations,omitempty"`
	UpAutoMeshTunnels           uint32                 `protobuf:"varint,62,opt,name=up_auto_mesh_tunnels,json=upAutoMeshTunnels,proto3" json:"up_auto_mesh_tunnels,omitempty"`
	DownAutoMeshTunnels         uint32                 `protobuf:"varint,63,opt,name=down_auto_mesh_tunnels,json=downAutoMeshTunnels,proto3" json:"down_auto_mesh_tunnels,omitempty"`
	FrrAutoMeshTunnels          uint32                 `protobuf:"varint,64,opt,name=frr_auto_mesh_tunnels,json=frrAutoMeshTunnels,proto3" json:"frr_auto_mesh_tunnels,omitempty"`
	AutoMeshGroupType           string                 `protobuf:"bytes,65,opt,name=auto_mesh_group_type,json=autoMeshGroupType,proto3" json:"auto_mesh_group_type,omitempty"`
	XXX_NoUnkeyedLiteral        struct{}               `json:"-"`
	XXX_unrecognized            []byte                 `json:"-"`
	XXX_sizecache               int32                  `json:"-"`
}

func (m *MplsTeMeshgroup) Reset()         { *m = MplsTeMeshgroup{} }
func (m *MplsTeMeshgroup) String() string { return proto.CompactTextString(m) }
func (*MplsTeMeshgroup) ProtoMessage()    {}
func (*MplsTeMeshgroup) Descriptor() ([]byte, []int) {
	return fileDescriptor_f29415511bca539b, []int{2}
}

func (m *MplsTeMeshgroup) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsTeMeshgroup.Unmarshal(m, b)
}
func (m *MplsTeMeshgroup) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsTeMeshgroup.Marshal(b, m, deterministic)
}
func (m *MplsTeMeshgroup) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsTeMeshgroup.Merge(m, src)
}
func (m *MplsTeMeshgroup) XXX_Size() int {
	return xxx_messageInfo_MplsTeMeshgroup.Size(m)
}
func (m *MplsTeMeshgroup) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsTeMeshgroup.DiscardUnknown(m)
}

var xxx_messageInfo_MplsTeMeshgroup proto.InternalMessageInfo

func (m *MplsTeMeshgroup) GetMeshGroupIdXr() uint32 {
	if m != nil {
		return m.MeshGroupIdXr
	}
	return 0
}

func (m *MplsTeMeshgroup) GetIsMeshgroupDisabled() bool {
	if m != nil {
		return m.IsMeshgroupDisabled
	}
	return false
}

func (m *MplsTeMeshgroup) GetAttributeSetName() string {
	if m != nil {
		return m.AttributeSetName
	}
	return ""
}

func (m *MplsTeMeshgroup) GetIsAttributeSetConfigured() bool {
	if m != nil {
		return m.IsAttributeSetConfigured
	}
	return false
}

func (m *MplsTeMeshgroup) GetIsAttributeSetInDb() bool {
	if m != nil {
		return m.IsAttributeSetInDb
	}
	return false
}

func (m *MplsTeMeshgroup) GetDestinationListName() string {
	if m != nil {
		return m.DestinationListName
	}
	return ""
}

func (m *MplsTeMeshgroup) GetIsDestinationListConfigured() bool {
	if m != nil {
		return m.IsDestinationListConfigured
	}
	return false
}

func (m *MplsTeMeshgroup) GetDestinationListType() string {
	if m != nil {
		return m.DestinationListType
	}
	return ""
}

func (m *MplsTeMeshgroup) GetRemainingTime() uint32 {
	if m != nil {
		return m.RemainingTime
	}
	return 0
}

func (m *MplsTeMeshgroup) GetDestination() []*MplsTeMeshgroupDest {
	if m != nil {
		return m.Destination
	}
	return nil
}

func (m *MplsTeMeshgroup) GetAutoMeshTunnels() uint32 {
	if m != nil {
		return m.AutoMeshTunnels
	}
	return 0
}

func (m *MplsTeMeshgroup) GetAutoMeshTotalDestinations() uint32 {
	if m != nil {
		return m.AutoMeshTotalDestinations
	}
	return 0
}

func (m *MplsTeMeshgroup) GetUpAutoMeshTunnels() uint32 {
	if m != nil {
		return m.UpAutoMeshTunnels
	}
	return 0
}

func (m *MplsTeMeshgroup) GetDownAutoMeshTunnels() uint32 {
	if m != nil {
		return m.DownAutoMeshTunnels
	}
	return 0
}

func (m *MplsTeMeshgroup) GetFrrAutoMeshTunnels() uint32 {
	if m != nil {
		return m.FrrAutoMeshTunnels
	}
	return 0
}

func (m *MplsTeMeshgroup) GetAutoMeshGroupType() string {
	if m != nil {
		return m.AutoMeshGroupType
	}
	return ""
}

func init() {
	proto.RegisterType((*MplsTeMeshgroup_KEYS)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te_standby.auto_tunnel.mesh.mesh_groups.mesh_group.mpls_te_meshgroup_KEYS")
	proto.RegisterType((*MplsTeMeshgroupDest)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te_standby.auto_tunnel.mesh.mesh_groups.mesh_group.mpls_te_meshgroup_dest")
	proto.RegisterType((*MplsTeMeshgroup)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te_standby.auto_tunnel.mesh.mesh_groups.mesh_group.mpls_te_meshgroup")
}

func init() { proto.RegisterFile("mpls_te_meshgroup.proto", fileDescriptor_f29415511bca539b) }

var fileDescriptor_f29415511bca539b = []byte{
	// 559 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x94, 0x6d, 0x8f, 0xd2, 0x40,
	0x10, 0xc7, 0x83, 0x67, 0xf4, 0x6e, 0x09, 0x7a, 0x2c, 0x77, 0xb8, 0x06, 0x63, 0x08, 0x89, 0x91,
	0x18, 0x2d, 0x11, 0x7c, 0xf6, 0xce, 0x93, 0x1c, 0xc6, 0x10, 0x1f, 0x12, 0x81, 0x17, 0xfa, 0x6a,
	0xd3, 0xd2, 0x05, 0x37, 0x69, 0xb7, 0xcd, 0xce, 0x36, 0x1e, 0x9f, 0xc1, 0x6f, 0xe2, 0x67, 0xf0,
	0xc3, 0x99, 0x9d, 0x1e, 0xdc, 0x42, 0xfb, 0xd2, 0x37, 0x3c, 0xcc, 0x7f, 0x7e, 0xf3, 0x9f, 0xd9,
	0xe9, 0x96, 0xdc, 0x89, 0xd3, 0x08, 0xb8, 0x11, 0x3c, 0x16, 0xf0, 0x73, 0xa9, 0x93, 0x2c, 0xf5,
	0x52, 0x9d, 0x98, 0x84, 0x7e, 0x9b, 0x4b, 0x98, 0x27, 0x5c, 0x26, 0xc0, 0x2f, 0x34, 0x5f, 0x67,
	0x25, 0xa9, 0xd0, 0xde, 0xfa, 0x0f, 0x18, 0x5f, 0x85, 0xc1, 0xca, 0xf3, 0x33, 0x93, 0x70, 0x93,
	0x29, 0x25, 0x22, 0xcf, 0x96, 0xc1, 0x0f, 0x8e, 0xc5, 0xc0, 0xf9, 0xdd, 0x39, 0x21, 0xcd, 0x82,
	0x1b, 0xff, 0xf4, 0xe1, 0xc7, 0x94, 0x76, 0x48, 0xed, 0x2a, 0x8f, 0xcb, 0x90, 0x55, 0xda, 0x95,
	0x6e, 0x6d, 0x52, 0xb5, 0xc1, 0x8f, 0x36, 0x36, 0x0e, 0x3b, 0x7f, 0x2b, 0x65, 0x78, 0x28, 0xc0,
	0xd0, 0x1e, 0x69, 0xd8, 0x6f, 0xa9, 0x7c, 0x23, 0x13, 0xc5, 0xfd, 0x30, 0xd4, 0x02, 0x00, 0x8b,
	0x1c, 0x4c, 0xa8, 0x23, 0x0d, 0x73, 0x85, 0xb6, 0xc8, 0x41, 0xde, 0xaf, 0xf5, 0xba, 0x86, 0x5e,
	0xfb, 0x79, 0x60, 0x1c, 0xd2, 0x27, 0x84, 0xda, 0x31, 0x11, 0xf0, 0x23, 0x3b, 0xa5, 0xc9, 0x80,
	0xed, 0x61, 0xb1, 0xba, 0xa3, 0x4c, 0x51, 0xa0, 0x0f, 0xc8, 0x2d, 0x2d, 0x62, 0x5f, 0x2a, 0xa9,
	0x96, 0xdc, 0xc8, 0x58, 0xb0, 0xeb, 0x58, 0xb0, 0xb6, 0x89, 0xce, 0x64, 0x2c, 0x3a, 0x7f, 0x6e,
	0x92, 0x7a, 0xa1, 0x7d, 0xfa, 0x90, 0x1c, 0x6e, 0x0d, 0xce, 0x2f, 0x34, 0xeb, 0xe7, 0xb8, 0x33,
	0xfb, 0x77, 0x4d, 0xfb, 0xe4, 0x58, 0x82, 0x3b, 0xb7, 0x04, 0x3f, 0x88, 0x44, 0xc8, 0x06, 0xed,
	0x4a, 0x77, 0x7f, 0xd2, 0x90, 0xf0, 0x65, 0xad, 0x8d, 0x2e, 0x25, 0xfa, 0x98, 0x50, 0xdf, 0x18,
	0x2d, 0x83, 0xcc, 0x2e, 0x4b, 0x18, 0xae, 0xfc, 0x58, 0xb0, 0x67, 0x38, 0xc8, 0xe1, 0x46, 0x99,
	0x0a, 0xf3, 0xd5, 0x8f, 0x05, 0x3d, 0x25, 0x2d, 0x09, 0x7c, 0x1b, 0x98, 0x27, 0x6a, 0x21, 0x97,
	0x99, 0x16, 0x21, 0x7b, 0x8e, 0x3e, 0x4c, 0xc2, 0xd0, 0x01, 0xcf, 0x37, 0x3a, 0xed, 0x93, 0x66,
	0x01, 0x97, 0x8a, 0x87, 0x01, 0x7b, 0x81, 0x24, 0xdd, 0x26, 0xc7, 0x6a, 0x14, 0xd8, 0xa1, 0xdc,
	0xbd, 0x45, 0x12, 0x2e, 0x7b, 0x7c, 0x89, 0x3d, 0xba, 0x4b, 0xfd, 0x2c, 0x21, 0x6f, 0xf3, 0x9c,
	0xdc, 0x97, 0xc0, 0x0b, 0x98, 0xd3, 0xe9, 0x2b, 0xf4, 0x6b, 0x49, 0x18, 0x6d, 0xe3, 0x5b, 0xcd,
	0x16, 0x8d, 0xcd, 0x2a, 0x15, 0xec, 0x75, 0xa9, 0xf1, 0x6c, 0x95, 0x8a, 0x92, 0x3d, 0xbf, 0x29,
	0xd9, 0x33, 0xfd, 0x5d, 0x21, 0x55, 0x07, 0x67, 0x6f, 0xdb, 0x7b, 0xdd, 0x6a, 0x5f, 0x7a, 0xff,
	0xfd, 0x3a, 0x79, 0xe5, 0x97, 0x61, 0xe2, 0xba, 0xd3, 0x47, 0xa4, 0x8e, 0xe5, 0x10, 0xcb, 0x6b,
	0x02, 0x3b, 0xc1, 0xbe, 0x6f, 0x5b, 0xc1, 0x3e, 0x34, 0xb3, 0x3c, 0x4c, 0xcf, 0xc8, 0x3d, 0x27,
	0x37, 0x31, 0x7e, 0xe4, 0x1e, 0x33, 0xb0, 0x53, 0xc4, 0xee, 0x6e, 0x30, 0x9b, 0xe1, 0x1c, 0x31,
	0xd0, 0x1e, 0x39, 0xca, 0x52, 0x5e, 0xf4, 0x7b, 0x87, 0x60, 0x3d, 0x4b, 0x87, 0x3b, 0x8e, 0x03,
	0xd2, 0x0c, 0x93, 0x5f, 0xaa, 0x04, 0x39, 0x43, 0xa4, 0x61, 0xd5, 0x5d, 0xe8, 0x29, 0x39, 0x5e,
	0x68, 0x5d, 0xc2, 0xbc, 0x47, 0x86, 0x2e, 0xb4, 0xde, 0x45, 0x7a, 0xe4, 0xe8, 0x2a, 0x3d, 0x3f,
	0x2a, 0xdc, 0xf6, 0x30, 0xbf, 0xd3, 0xeb, 0x89, 0xf0, 0xb6, 0xd9, 0x5d, 0x07, 0x37, 0xf0, 0x1d,
	0x38, 0xf8, 0x17, 0x00, 0x00, 0xff, 0xff, 0x81, 0x61, 0xaa, 0xbd, 0x1e, 0x05, 0x00, 0x00,
}
