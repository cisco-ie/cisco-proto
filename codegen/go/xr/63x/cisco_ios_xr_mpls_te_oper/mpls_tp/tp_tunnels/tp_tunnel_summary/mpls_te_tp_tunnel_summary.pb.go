/*
Copyright 2019 Cisco Systems

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: mpls_te_tp_tunnel_summary.proto

package cisco_ios_xr_mpls_te_oper_mpls_tp_tp_tunnels_tp_tunnel_summary

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type MplsTeTpTunnelSummary_KEYS struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MplsTeTpTunnelSummary_KEYS) Reset()         { *m = MplsTeTpTunnelSummary_KEYS{} }
func (m *MplsTeTpTunnelSummary_KEYS) String() string { return proto.CompactTextString(m) }
func (*MplsTeTpTunnelSummary_KEYS) ProtoMessage()    {}
func (*MplsTeTpTunnelSummary_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_cd2c361028914bcd, []int{0}
}

func (m *MplsTeTpTunnelSummary_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsTeTpTunnelSummary_KEYS.Unmarshal(m, b)
}
func (m *MplsTeTpTunnelSummary_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsTeTpTunnelSummary_KEYS.Marshal(b, m, deterministic)
}
func (m *MplsTeTpTunnelSummary_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsTeTpTunnelSummary_KEYS.Merge(m, src)
}
func (m *MplsTeTpTunnelSummary_KEYS) XXX_Size() int {
	return xxx_messageInfo_MplsTeTpTunnelSummary_KEYS.Size(m)
}
func (m *MplsTeTpTunnelSummary_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsTeTpTunnelSummary_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_MplsTeTpTunnelSummary_KEYS proto.InternalMessageInfo

type MplsTeTpTunnelSummary struct {
	UpWorkingLsPs          uint32   `protobuf:"varint,50,opt,name=up_working_ls_ps,json=upWorkingLsPs,proto3" json:"up_working_ls_ps,omitempty"`
	ActiveWorkingLsPs      uint32   `protobuf:"varint,51,opt,name=active_working_ls_ps,json=activeWorkingLsPs,proto3" json:"active_working_ls_ps,omitempty"`
	DownWorkingLsPs        uint32   `protobuf:"varint,52,opt,name=down_working_ls_ps,json=downWorkingLsPs,proto3" json:"down_working_ls_ps,omitempty"`
	LockedWorkingLsPs      uint32   `protobuf:"varint,53,opt,name=locked_working_ls_ps,json=lockedWorkingLsPs,proto3" json:"locked_working_ls_ps,omitempty"`
	UpProtectLsPs          uint32   `protobuf:"varint,54,opt,name=up_protect_ls_ps,json=upProtectLsPs,proto3" json:"up_protect_ls_ps,omitempty"`
	ActiveProtectLsPs      uint32   `protobuf:"varint,55,opt,name=active_protect_ls_ps,json=activeProtectLsPs,proto3" json:"active_protect_ls_ps,omitempty"`
	DownProtectLsPs        uint32   `protobuf:"varint,56,opt,name=down_protect_ls_ps,json=downProtectLsPs,proto3" json:"down_protect_ls_ps,omitempty"`
	LockedProtectLsPs      uint32   `protobuf:"varint,57,opt,name=locked_protect_ls_ps,json=lockedProtectLsPs,proto3" json:"locked_protect_ls_ps,omitempty"`
	UpTunnels              uint32   `protobuf:"varint,58,opt,name=up_tunnels,json=upTunnels,proto3" json:"up_tunnels,omitempty"`
	DownTunnels            uint32   `protobuf:"varint,59,opt,name=down_tunnels,json=downTunnels,proto3" json:"down_tunnels,omitempty"`
	AdminDownTunnels       uint32   `protobuf:"varint,60,opt,name=admin_down_tunnels,json=adminDownTunnels,proto3" json:"admin_down_tunnels,omitempty"`
	CompleteFecWorkingLsPs uint32   `protobuf:"varint,61,opt,name=complete_fec_working_ls_ps,json=completeFecWorkingLsPs,proto3" json:"complete_fec_working_ls_ps,omitempty"`
	CompleteFecProtectLsPs uint32   `protobuf:"varint,62,opt,name=complete_fec_protect_ls_ps,json=completeFecProtectLsPs,proto3" json:"complete_fec_protect_ls_ps,omitempty"`
	BfdSessionWorkingLsPs  uint32   `protobuf:"varint,63,opt,name=bfd_session_working_ls_ps,json=bfdSessionWorkingLsPs,proto3" json:"bfd_session_working_ls_ps,omitempty"`
	BfdSessionProtectLsPs  uint32   `protobuf:"varint,64,opt,name=bfd_session_protect_ls_ps,json=bfdSessionProtectLsPs,proto3" json:"bfd_session_protect_ls_ps,omitempty"`
	XXX_NoUnkeyedLiteral   struct{} `json:"-"`
	XXX_unrecognized       []byte   `json:"-"`
	XXX_sizecache          int32    `json:"-"`
}

func (m *MplsTeTpTunnelSummary) Reset()         { *m = MplsTeTpTunnelSummary{} }
func (m *MplsTeTpTunnelSummary) String() string { return proto.CompactTextString(m) }
func (*MplsTeTpTunnelSummary) ProtoMessage()    {}
func (*MplsTeTpTunnelSummary) Descriptor() ([]byte, []int) {
	return fileDescriptor_cd2c361028914bcd, []int{1}
}

func (m *MplsTeTpTunnelSummary) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsTeTpTunnelSummary.Unmarshal(m, b)
}
func (m *MplsTeTpTunnelSummary) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsTeTpTunnelSummary.Marshal(b, m, deterministic)
}
func (m *MplsTeTpTunnelSummary) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsTeTpTunnelSummary.Merge(m, src)
}
func (m *MplsTeTpTunnelSummary) XXX_Size() int {
	return xxx_messageInfo_MplsTeTpTunnelSummary.Size(m)
}
func (m *MplsTeTpTunnelSummary) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsTeTpTunnelSummary.DiscardUnknown(m)
}

var xxx_messageInfo_MplsTeTpTunnelSummary proto.InternalMessageInfo

func (m *MplsTeTpTunnelSummary) GetUpWorkingLsPs() uint32 {
	if m != nil {
		return m.UpWorkingLsPs
	}
	return 0
}

func (m *MplsTeTpTunnelSummary) GetActiveWorkingLsPs() uint32 {
	if m != nil {
		return m.ActiveWorkingLsPs
	}
	return 0
}

func (m *MplsTeTpTunnelSummary) GetDownWorkingLsPs() uint32 {
	if m != nil {
		return m.DownWorkingLsPs
	}
	return 0
}

func (m *MplsTeTpTunnelSummary) GetLockedWorkingLsPs() uint32 {
	if m != nil {
		return m.LockedWorkingLsPs
	}
	return 0
}

func (m *MplsTeTpTunnelSummary) GetUpProtectLsPs() uint32 {
	if m != nil {
		return m.UpProtectLsPs
	}
	return 0
}

func (m *MplsTeTpTunnelSummary) GetActiveProtectLsPs() uint32 {
	if m != nil {
		return m.ActiveProtectLsPs
	}
	return 0
}

func (m *MplsTeTpTunnelSummary) GetDownProtectLsPs() uint32 {
	if m != nil {
		return m.DownProtectLsPs
	}
	return 0
}

func (m *MplsTeTpTunnelSummary) GetLockedProtectLsPs() uint32 {
	if m != nil {
		return m.LockedProtectLsPs
	}
	return 0
}

func (m *MplsTeTpTunnelSummary) GetUpTunnels() uint32 {
	if m != nil {
		return m.UpTunnels
	}
	return 0
}

func (m *MplsTeTpTunnelSummary) GetDownTunnels() uint32 {
	if m != nil {
		return m.DownTunnels
	}
	return 0
}

func (m *MplsTeTpTunnelSummary) GetAdminDownTunnels() uint32 {
	if m != nil {
		return m.AdminDownTunnels
	}
	return 0
}

func (m *MplsTeTpTunnelSummary) GetCompleteFecWorkingLsPs() uint32 {
	if m != nil {
		return m.CompleteFecWorkingLsPs
	}
	return 0
}

func (m *MplsTeTpTunnelSummary) GetCompleteFecProtectLsPs() uint32 {
	if m != nil {
		return m.CompleteFecProtectLsPs
	}
	return 0
}

func (m *MplsTeTpTunnelSummary) GetBfdSessionWorkingLsPs() uint32 {
	if m != nil {
		return m.BfdSessionWorkingLsPs
	}
	return 0
}

func (m *MplsTeTpTunnelSummary) GetBfdSessionProtectLsPs() uint32 {
	if m != nil {
		return m.BfdSessionProtectLsPs
	}
	return 0
}

func init() {
	proto.RegisterType((*MplsTeTpTunnelSummary_KEYS)(nil), "cisco_ios_xr_mpls_te_oper.mpls_tp.tp_tunnels.tp_tunnel_summary.mpls_te_tp_tunnel_summary_KEYS")
	proto.RegisterType((*MplsTeTpTunnelSummary)(nil), "cisco_ios_xr_mpls_te_oper.mpls_tp.tp_tunnels.tp_tunnel_summary.mpls_te_tp_tunnel_summary")
}

func init() { proto.RegisterFile("mpls_te_tp_tunnel_summary.proto", fileDescriptor_cd2c361028914bcd) }

var fileDescriptor_cd2c361028914bcd = []byte{
	// 358 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x93, 0xcf, 0x4a, 0xc3, 0x40,
	0x10, 0x87, 0xf1, 0xa0, 0xe0, 0x68, 0xb1, 0x06, 0x95, 0x56, 0x50, 0x6b, 0x2f, 0x0a, 0x4a, 0x04,
	0xeb, 0x9f, 0x5a, 0xb5, 0x7a, 0x50, 0x2f, 0x7a, 0x28, 0x56, 0x10, 0x4f, 0x43, 0xbb, 0xd9, 0x4a,
	0x68, 0x92, 0x5d, 0x32, 0x1b, 0xab, 0x4f, 0xec, 0x6b, 0x48, 0x77, 0x9b, 0xba, 0xd9, 0xd2, 0x63,
	0x66, 0xbe, 0x6f, 0xe6, 0xb7, 0x9b, 0x04, 0xf6, 0x62, 0x19, 0x11, 0x2a, 0x8e, 0x4a, 0xa2, 0xca,
	0x92, 0x84, 0x47, 0x48, 0x59, 0x1c, 0xf7, 0xd2, 0x1f, 0x5f, 0xa6, 0x42, 0x09, 0xaf, 0xcd, 0x42,
	0x62, 0x02, 0x43, 0x41, 0xf8, 0x9d, 0x62, 0x4e, 0x0b, 0xc9, 0x53, 0xdf, 0x3c, 0x48, 0x7f, 0xaa,
	0x92, 0x3f, 0x33, 0xa5, 0x5e, 0x83, 0xdd, 0xb9, 0x2b, 0xf0, 0xf9, 0xf1, 0xa3, 0x5b, 0xff, 0x5d,
	0x84, 0xea, 0x5c, 0xc4, 0x3b, 0x80, 0x72, 0x26, 0x71, 0x24, 0xd2, 0x61, 0x98, 0x7c, 0x62, 0x44,
	0x28, 0xa9, 0x72, 0x5a, 0x5b, 0x38, 0x2c, 0xbd, 0x96, 0x32, 0xf9, 0x6e, 0xca, 0x2f, 0xd4, 0x21,
	0xef, 0x04, 0x36, 0x7a, 0x4c, 0x85, 0x5f, 0xdc, 0x81, 0x1b, 0x1a, 0x5e, 0x37, 0x3d, 0x5b, 0x38,
	0x02, 0x2f, 0x10, 0xa3, 0xc4, 0xc1, 0xcf, 0x34, 0xbe, 0x36, 0xee, 0x38, 0xd3, 0x23, 0xc1, 0x86,
	0x3c, 0x70, 0xf0, 0x73, 0x33, 0xdd, 0xf4, 0x6c, 0xc1, 0xe4, 0x1e, 0xdf, 0x21, 0x67, 0x6a, 0x02,
	0x5f, 0xe4, 0xb9, 0x3b, 0xa6, 0xec, 0xe4, 0x2e, 0xc2, 0x97, 0x76, 0x6e, 0x5b, 0xc8, 0x73, 0x17,
	0xf1, 0xe6, 0x7f, 0x6e, 0x67, 0xfa, 0x24, 0x77, 0x11, 0xbf, 0xb2, 0x73, 0xdb, 0xc2, 0x0e, 0x40,
	0x36, 0x7d, 0x9f, 0x95, 0x96, 0xc6, 0x96, 0x33, 0xf9, 0x66, 0x0a, 0xde, 0x3e, 0xac, 0xea, 0xe5,
	0x39, 0x70, 0xad, 0x81, 0x95, 0x71, 0x2d, 0x47, 0x8e, 0xc1, 0xeb, 0x05, 0x71, 0x98, 0x60, 0x01,
	0xbc, 0xd1, 0x60, 0x59, 0x77, 0x1e, 0x2c, 0xba, 0x05, 0xdb, 0x4c, 0xc4, 0x32, 0xe2, 0x8a, 0xe3,
	0x80, 0x33, 0xe7, 0x7a, 0x6f, 0xb5, 0xb5, 0x95, 0x13, 0x4f, 0x9c, 0xd9, 0x77, 0xec, 0xba, 0xc5,
	0x23, 0xb6, 0x67, 0x5c, 0xfb, 0x9c, 0x4d, 0xa8, 0xf6, 0x07, 0x01, 0x12, 0x27, 0x0a, 0x85, 0xfb,
	0x11, 0xdc, 0x69, 0x75, 0xb3, 0x3f, 0x08, 0xba, 0xa6, 0x6f, 0x6f, 0x75, 0xcc, 0xe2, 0xd2, 0x7b,
	0xd7, 0xb4, 0x76, 0xf6, 0x97, 0xf4, 0x2f, 0xd5, 0xf8, 0x0b, 0x00, 0x00, 0xff, 0xff, 0xd9, 0x42,
	0x23, 0x31, 0x75, 0x03, 0x00, 0x00,
}
