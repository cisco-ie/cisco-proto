/*
Copyright 2019 Cisco Systems

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: te_nsr_issu_status_info.proto

package cisco_ios_xr_mpls_te_oper_mpls_te_nsr_status

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type TeNsrIssuStatusInfo_KEYS struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TeNsrIssuStatusInfo_KEYS) Reset()         { *m = TeNsrIssuStatusInfo_KEYS{} }
func (m *TeNsrIssuStatusInfo_KEYS) String() string { return proto.CompactTextString(m) }
func (*TeNsrIssuStatusInfo_KEYS) ProtoMessage()    {}
func (*TeNsrIssuStatusInfo_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_42ec59026909b271, []int{0}
}

func (m *TeNsrIssuStatusInfo_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TeNsrIssuStatusInfo_KEYS.Unmarshal(m, b)
}
func (m *TeNsrIssuStatusInfo_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TeNsrIssuStatusInfo_KEYS.Marshal(b, m, deterministic)
}
func (m *TeNsrIssuStatusInfo_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TeNsrIssuStatusInfo_KEYS.Merge(m, src)
}
func (m *TeNsrIssuStatusInfo_KEYS) XXX_Size() int {
	return xxx_messageInfo_TeNsrIssuStatusInfo_KEYS.Size(m)
}
func (m *TeNsrIssuStatusInfo_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_TeNsrIssuStatusInfo_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_TeNsrIssuStatusInfo_KEYS proto.InternalMessageInfo

type TeIdtStatus struct {
	IsReadyStatus        bool     `protobuf:"varint,1,opt,name=is_ready_status,json=isReadyStatus,proto3" json:"is_ready_status,omitempty"`
	Reason               string   `protobuf:"bytes,2,opt,name=reason,proto3" json:"reason,omitempty"`
	IdtStartTime         uint32   `protobuf:"varint,3,opt,name=idt_start_time,json=idtStartTime,proto3" json:"idt_start_time,omitempty"`
	IdtEndTime           uint32   `protobuf:"varint,4,opt,name=idt_end_time,json=idtEndTime,proto3" json:"idt_end_time,omitempty"`
	DeclareTime          uint32   `protobuf:"varint,5,opt,name=declare_time,json=declareTime,proto3" json:"declare_time,omitempty"`
	WithdrawTime         uint32   `protobuf:"varint,6,opt,name=withdraw_time,json=withdrawTime,proto3" json:"withdraw_time,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TeIdtStatus) Reset()         { *m = TeIdtStatus{} }
func (m *TeIdtStatus) String() string { return proto.CompactTextString(m) }
func (*TeIdtStatus) ProtoMessage()    {}
func (*TeIdtStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_42ec59026909b271, []int{1}
}

func (m *TeIdtStatus) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TeIdtStatus.Unmarshal(m, b)
}
func (m *TeIdtStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TeIdtStatus.Marshal(b, m, deterministic)
}
func (m *TeIdtStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TeIdtStatus.Merge(m, src)
}
func (m *TeIdtStatus) XXX_Size() int {
	return xxx_messageInfo_TeIdtStatus.Size(m)
}
func (m *TeIdtStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_TeIdtStatus.DiscardUnknown(m)
}

var xxx_messageInfo_TeIdtStatus proto.InternalMessageInfo

func (m *TeIdtStatus) GetIsReadyStatus() bool {
	if m != nil {
		return m.IsReadyStatus
	}
	return false
}

func (m *TeIdtStatus) GetReason() string {
	if m != nil {
		return m.Reason
	}
	return ""
}

func (m *TeIdtStatus) GetIdtStartTime() uint32 {
	if m != nil {
		return m.IdtStartTime
	}
	return 0
}

func (m *TeIdtStatus) GetIdtEndTime() uint32 {
	if m != nil {
		return m.IdtEndTime
	}
	return 0
}

func (m *TeIdtStatus) GetDeclareTime() uint32 {
	if m != nil {
		return m.DeclareTime
	}
	return 0
}

func (m *TeIdtStatus) GetWithdrawTime() uint32 {
	if m != nil {
		return m.WithdrawTime
	}
	return 0
}

type TeSyncIdtInfo struct {
	CurrentIdtInfo       *TeIdtStatus `protobuf:"bytes,1,opt,name=current_idt_info,json=currentIdtInfo,proto3" json:"current_idt_info,omitempty"`
	PreviousIdtStatus    *TeIdtStatus `protobuf:"bytes,2,opt,name=previous_idt_status,json=previousIdtStatus,proto3" json:"previous_idt_status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *TeSyncIdtInfo) Reset()         { *m = TeSyncIdtInfo{} }
func (m *TeSyncIdtInfo) String() string { return proto.CompactTextString(m) }
func (*TeSyncIdtInfo) ProtoMessage()    {}
func (*TeSyncIdtInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_42ec59026909b271, []int{2}
}

func (m *TeSyncIdtInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TeSyncIdtInfo.Unmarshal(m, b)
}
func (m *TeSyncIdtInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TeSyncIdtInfo.Marshal(b, m, deterministic)
}
func (m *TeSyncIdtInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TeSyncIdtInfo.Merge(m, src)
}
func (m *TeSyncIdtInfo) XXX_Size() int {
	return xxx_messageInfo_TeSyncIdtInfo.Size(m)
}
func (m *TeSyncIdtInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_TeSyncIdtInfo.DiscardUnknown(m)
}

var xxx_messageInfo_TeSyncIdtInfo proto.InternalMessageInfo

func (m *TeSyncIdtInfo) GetCurrentIdtInfo() *TeIdtStatus {
	if m != nil {
		return m.CurrentIdtInfo
	}
	return nil
}

func (m *TeSyncIdtInfo) GetPreviousIdtStatus() *TeIdtStatus {
	if m != nil {
		return m.PreviousIdtStatus
	}
	return nil
}

type TeVifPendingInfo struct {
	PendingReason        string   `protobuf:"bytes,1,opt,name=pending_reason,json=pendingReason,proto3" json:"pending_reason,omitempty"`
	TunnelName           string   `protobuf:"bytes,2,opt,name=tunnel_name,json=tunnelName,proto3" json:"tunnel_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TeVifPendingInfo) Reset()         { *m = TeVifPendingInfo{} }
func (m *TeVifPendingInfo) String() string { return proto.CompactTextString(m) }
func (*TeVifPendingInfo) ProtoMessage()    {}
func (*TeVifPendingInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_42ec59026909b271, []int{3}
}

func (m *TeVifPendingInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TeVifPendingInfo.Unmarshal(m, b)
}
func (m *TeVifPendingInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TeVifPendingInfo.Marshal(b, m, deterministic)
}
func (m *TeVifPendingInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TeVifPendingInfo.Merge(m, src)
}
func (m *TeVifPendingInfo) XXX_Size() int {
	return xxx_messageInfo_TeVifPendingInfo.Size(m)
}
func (m *TeVifPendingInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_TeVifPendingInfo.DiscardUnknown(m)
}

var xxx_messageInfo_TeVifPendingInfo proto.InternalMessageInfo

func (m *TeVifPendingInfo) GetPendingReason() string {
	if m != nil {
		return m.PendingReason
	}
	return ""
}

func (m *TeVifPendingInfo) GetTunnelName() string {
	if m != nil {
		return m.TunnelName
	}
	return ""
}

type TeS2LPendingInfo struct {
	PendingReason        string   `protobuf:"bytes,1,opt,name=pending_reason,json=pendingReason,proto3" json:"pending_reason,omitempty"`
	SignaledName         string   `protobuf:"bytes,2,opt,name=signaled_name,json=signaledName,proto3" json:"signaled_name,omitempty"`
	S2LRole              string   `protobuf:"bytes,3,opt,name=s2l_role,json=s2lRole,proto3" json:"s2l_role,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TeS2LPendingInfo) Reset()         { *m = TeS2LPendingInfo{} }
func (m *TeS2LPendingInfo) String() string { return proto.CompactTextString(m) }
func (*TeS2LPendingInfo) ProtoMessage()    {}
func (*TeS2LPendingInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_42ec59026909b271, []int{4}
}

func (m *TeS2LPendingInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TeS2LPendingInfo.Unmarshal(m, b)
}
func (m *TeS2LPendingInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TeS2LPendingInfo.Marshal(b, m, deterministic)
}
func (m *TeS2LPendingInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TeS2LPendingInfo.Merge(m, src)
}
func (m *TeS2LPendingInfo) XXX_Size() int {
	return xxx_messageInfo_TeS2LPendingInfo.Size(m)
}
func (m *TeS2LPendingInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_TeS2LPendingInfo.DiscardUnknown(m)
}

var xxx_messageInfo_TeS2LPendingInfo proto.InternalMessageInfo

func (m *TeS2LPendingInfo) GetPendingReason() string {
	if m != nil {
		return m.PendingReason
	}
	return ""
}

func (m *TeS2LPendingInfo) GetSignaledName() string {
	if m != nil {
		return m.SignaledName
	}
	return ""
}

func (m *TeS2LPendingInfo) GetS2LRole() string {
	if m != nil {
		return m.S2LRole
	}
	return ""
}

type TeSyncStatusSlaveInfo struct {
	Idt                  *TeSyncIdtInfo      `protobuf:"bytes,1,opt,name=idt,proto3" json:"idt,omitempty"`
	VifPending           []*TeVifPendingInfo `protobuf:"bytes,2,rep,name=vif_pending,json=vifPending,proto3" json:"vif_pending,omitempty"`
	S2LPending           []*TeS2LPendingInfo `protobuf:"bytes,3,rep,name=s2l_pending,json=s2lPending,proto3" json:"s2l_pending,omitempty"`
	InsyncTunnels        uint32              `protobuf:"varint,4,opt,name=insync_tunnels,json=insyncTunnels,proto3" json:"insync_tunnels,omitempty"`
	InsyncSubLsPs        uint32              `protobuf:"varint,5,opt,name=insync_sub_ls_ps,json=insyncSubLsPs,proto3" json:"insync_sub_ls_ps,omitempty"`
	PendingTunnels       uint32              `protobuf:"varint,6,opt,name=pending_tunnels,json=pendingTunnels,proto3" json:"pending_tunnels,omitempty"`
	PendingSubLsPs       uint32              `protobuf:"varint,7,opt,name=pending_sub_ls_ps,json=pendingSubLsPs,proto3" json:"pending_sub_ls_ps,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *TeSyncStatusSlaveInfo) Reset()         { *m = TeSyncStatusSlaveInfo{} }
func (m *TeSyncStatusSlaveInfo) String() string { return proto.CompactTextString(m) }
func (*TeSyncStatusSlaveInfo) ProtoMessage()    {}
func (*TeSyncStatusSlaveInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_42ec59026909b271, []int{5}
}

func (m *TeSyncStatusSlaveInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TeSyncStatusSlaveInfo.Unmarshal(m, b)
}
func (m *TeSyncStatusSlaveInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TeSyncStatusSlaveInfo.Marshal(b, m, deterministic)
}
func (m *TeSyncStatusSlaveInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TeSyncStatusSlaveInfo.Merge(m, src)
}
func (m *TeSyncStatusSlaveInfo) XXX_Size() int {
	return xxx_messageInfo_TeSyncStatusSlaveInfo.Size(m)
}
func (m *TeSyncStatusSlaveInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_TeSyncStatusSlaveInfo.DiscardUnknown(m)
}

var xxx_messageInfo_TeSyncStatusSlaveInfo proto.InternalMessageInfo

func (m *TeSyncStatusSlaveInfo) GetIdt() *TeSyncIdtInfo {
	if m != nil {
		return m.Idt
	}
	return nil
}

func (m *TeSyncStatusSlaveInfo) GetVifPending() []*TeVifPendingInfo {
	if m != nil {
		return m.VifPending
	}
	return nil
}

func (m *TeSyncStatusSlaveInfo) GetS2LPending() []*TeS2LPendingInfo {
	if m != nil {
		return m.S2LPending
	}
	return nil
}

func (m *TeSyncStatusSlaveInfo) GetInsyncTunnels() uint32 {
	if m != nil {
		return m.InsyncTunnels
	}
	return 0
}

func (m *TeSyncStatusSlaveInfo) GetInsyncSubLsPs() uint32 {
	if m != nil {
		return m.InsyncSubLsPs
	}
	return 0
}

func (m *TeSyncStatusSlaveInfo) GetPendingTunnels() uint32 {
	if m != nil {
		return m.PendingTunnels
	}
	return 0
}

func (m *TeSyncStatusSlaveInfo) GetPendingSubLsPs() uint32 {
	if m != nil {
		return m.PendingSubLsPs
	}
	return 0
}

type TeSyncStatusMasterInfo struct {
	Idt                  *TeSyncIdtInfo `protobuf:"bytes,1,opt,name=idt,proto3" json:"idt,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *TeSyncStatusMasterInfo) Reset()         { *m = TeSyncStatusMasterInfo{} }
func (m *TeSyncStatusMasterInfo) String() string { return proto.CompactTextString(m) }
func (*TeSyncStatusMasterInfo) ProtoMessage()    {}
func (*TeSyncStatusMasterInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_42ec59026909b271, []int{6}
}

func (m *TeSyncStatusMasterInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TeSyncStatusMasterInfo.Unmarshal(m, b)
}
func (m *TeSyncStatusMasterInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TeSyncStatusMasterInfo.Marshal(b, m, deterministic)
}
func (m *TeSyncStatusMasterInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TeSyncStatusMasterInfo.Merge(m, src)
}
func (m *TeSyncStatusMasterInfo) XXX_Size() int {
	return xxx_messageInfo_TeSyncStatusMasterInfo.Size(m)
}
func (m *TeSyncStatusMasterInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_TeSyncStatusMasterInfo.DiscardUnknown(m)
}

var xxx_messageInfo_TeSyncStatusMasterInfo proto.InternalMessageInfo

func (m *TeSyncStatusMasterInfo) GetIdt() *TeSyncIdtInfo {
	if m != nil {
		return m.Idt
	}
	return nil
}

type TeSyncStatusInfo struct {
	SyncShowType          string                  `protobuf:"bytes,1,opt,name=sync_show_type,json=syncShowType,proto3" json:"sync_show_type,omitempty"`
	SlaveSyncInformation  *TeSyncStatusSlaveInfo  `protobuf:"bytes,2,opt,name=slave_sync_information,json=slaveSyncInformation,proto3" json:"slave_sync_information,omitempty"`
	MasterSyncInformation *TeSyncStatusMasterInfo `protobuf:"bytes,3,opt,name=master_sync_information,json=masterSyncInformation,proto3" json:"master_sync_information,omitempty"`
	XXX_NoUnkeyedLiteral  struct{}                `json:"-"`
	XXX_unrecognized      []byte                  `json:"-"`
	XXX_sizecache         int32                   `json:"-"`
}

func (m *TeSyncStatusInfo) Reset()         { *m = TeSyncStatusInfo{} }
func (m *TeSyncStatusInfo) String() string { return proto.CompactTextString(m) }
func (*TeSyncStatusInfo) ProtoMessage()    {}
func (*TeSyncStatusInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_42ec59026909b271, []int{7}
}

func (m *TeSyncStatusInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TeSyncStatusInfo.Unmarshal(m, b)
}
func (m *TeSyncStatusInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TeSyncStatusInfo.Marshal(b, m, deterministic)
}
func (m *TeSyncStatusInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TeSyncStatusInfo.Merge(m, src)
}
func (m *TeSyncStatusInfo) XXX_Size() int {
	return xxx_messageInfo_TeSyncStatusInfo.Size(m)
}
func (m *TeSyncStatusInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_TeSyncStatusInfo.DiscardUnknown(m)
}

var xxx_messageInfo_TeSyncStatusInfo proto.InternalMessageInfo

func (m *TeSyncStatusInfo) GetSyncShowType() string {
	if m != nil {
		return m.SyncShowType
	}
	return ""
}

func (m *TeSyncStatusInfo) GetSlaveSyncInformation() *TeSyncStatusSlaveInfo {
	if m != nil {
		return m.SlaveSyncInformation
	}
	return nil
}

func (m *TeSyncStatusInfo) GetMasterSyncInformation() *TeSyncStatusMasterInfo {
	if m != nil {
		return m.MasterSyncInformation
	}
	return nil
}

type TeNsrIssuStatusInfo struct {
	Role                  string            `protobuf:"bytes,50,opt,name=role,proto3" json:"role,omitempty"`
	SyncStatusInformation *TeSyncStatusInfo `protobuf:"bytes,51,opt,name=sync_status_information,json=syncStatusInformation,proto3" json:"sync_status_information,omitempty"`
	XXX_NoUnkeyedLiteral  struct{}          `json:"-"`
	XXX_unrecognized      []byte            `json:"-"`
	XXX_sizecache         int32             `json:"-"`
}

func (m *TeNsrIssuStatusInfo) Reset()         { *m = TeNsrIssuStatusInfo{} }
func (m *TeNsrIssuStatusInfo) String() string { return proto.CompactTextString(m) }
func (*TeNsrIssuStatusInfo) ProtoMessage()    {}
func (*TeNsrIssuStatusInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_42ec59026909b271, []int{8}
}

func (m *TeNsrIssuStatusInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TeNsrIssuStatusInfo.Unmarshal(m, b)
}
func (m *TeNsrIssuStatusInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TeNsrIssuStatusInfo.Marshal(b, m, deterministic)
}
func (m *TeNsrIssuStatusInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TeNsrIssuStatusInfo.Merge(m, src)
}
func (m *TeNsrIssuStatusInfo) XXX_Size() int {
	return xxx_messageInfo_TeNsrIssuStatusInfo.Size(m)
}
func (m *TeNsrIssuStatusInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_TeNsrIssuStatusInfo.DiscardUnknown(m)
}

var xxx_messageInfo_TeNsrIssuStatusInfo proto.InternalMessageInfo

func (m *TeNsrIssuStatusInfo) GetRole() string {
	if m != nil {
		return m.Role
	}
	return ""
}

func (m *TeNsrIssuStatusInfo) GetSyncStatusInformation() *TeSyncStatusInfo {
	if m != nil {
		return m.SyncStatusInformation
	}
	return nil
}

func init() {
	proto.RegisterType((*TeNsrIssuStatusInfo_KEYS)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.nsr.status.te_nsr_issu_status_info_KEYS")
	proto.RegisterType((*TeIdtStatus)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.nsr.status.te_idt_status")
	proto.RegisterType((*TeSyncIdtInfo)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.nsr.status.te_sync_idt_info")
	proto.RegisterType((*TeVifPendingInfo)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.nsr.status.te_vif_pending_info")
	proto.RegisterType((*TeS2LPendingInfo)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.nsr.status.te_s2l_pending_info")
	proto.RegisterType((*TeSyncStatusSlaveInfo)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.nsr.status.te_sync_status_slave_info")
	proto.RegisterType((*TeSyncStatusMasterInfo)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.nsr.status.te_sync_status_master_info")
	proto.RegisterType((*TeSyncStatusInfo)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.nsr.status.te_sync_status_info")
	proto.RegisterType((*TeNsrIssuStatusInfo)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.nsr.status.te_nsr_issu_status_info")
}

func init() { proto.RegisterFile("te_nsr_issu_status_info.proto", fileDescriptor_42ec59026909b271) }

var fileDescriptor_42ec59026909b271 = []byte{
	// 686 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x55, 0xdd, 0x4e, 0x13, 0x41,
	0x18, 0xcd, 0x52, 0xe4, 0xe7, 0xeb, 0x0f, 0xb0, 0x28, 0x14, 0xe3, 0x4f, 0x5d, 0x40, 0x6b, 0x62,
	0x7a, 0xb1, 0x5c, 0x9a, 0x98, 0x70, 0x41, 0xb4, 0xd1, 0x18, 0x32, 0xe5, 0xc6, 0x0b, 0x33, 0xd9,
	0x76, 0xbf, 0xc2, 0xc4, 0xdd, 0x99, 0xcd, 0xcc, 0xb4, 0xb5, 0x89, 0x26, 0x3e, 0x8e, 0x2f, 0xe1,
	0x83, 0x78, 0xe5, 0x9d, 0xcf, 0x61, 0xe6, 0x67, 0xa1, 0x94, 0x70, 0x01, 0xc4, 0xbb, 0xce, 0xe1,
	0x70, 0xce, 0x37, 0xe7, 0x7c, 0xd3, 0xc2, 0x63, 0x8d, 0x94, 0x2b, 0x49, 0x99, 0x52, 0x23, 0xaa,
	0x74, 0xa2, 0x47, 0x8a, 0x32, 0x3e, 0x14, 0x9d, 0x42, 0x0a, 0x2d, 0xc2, 0x57, 0x03, 0xa6, 0x06,
	0x82, 0x32, 0xa1, 0xe8, 0x57, 0x49, 0xf3, 0x22, 0x53, 0x54, 0x23, 0x15, 0x05, 0xca, 0x8e, 0x3f,
	0x74, 0xb8, 0x92, 0x1d, 0xf7, 0x8f, 0xd1, 0x13, 0x78, 0x74, 0x8d, 0x1c, 0x7d, 0x7f, 0xf4, 0xa9,
	0x17, 0xfd, 0x09, 0xa0, 0xae, 0x91, 0xb2, 0x54, 0xfb, 0xbf, 0x85, 0xcf, 0x61, 0x8d, 0x29, 0x2a,
	0x31, 0x49, 0xa7, 0x1e, 0x6a, 0x06, 0xad, 0xa0, 0xbd, 0x42, 0xea, 0x4c, 0x11, 0x83, 0xf6, 0x1c,
	0x6f, 0x0b, 0x96, 0x24, 0x26, 0x4a, 0xf0, 0xe6, 0x42, 0x2b, 0x68, 0xaf, 0x12, 0x7f, 0x0a, 0xf7,
	0xa0, 0xe1, 0xd5, 0xa4, 0xa6, 0x9a, 0xe5, 0xd8, 0xac, 0xb4, 0x82, 0x76, 0x9d, 0xd4, 0x58, 0xaa,
	0x7b, 0x06, 0x3c, 0x61, 0x39, 0x86, 0x2d, 0x30, 0x67, 0x8a, 0x3c, 0x75, 0x9c, 0x45, 0xcb, 0x01,
	0x96, 0xea, 0x23, 0x9e, 0x5a, 0xc6, 0x33, 0xa8, 0xa5, 0x38, 0xc8, 0x12, 0x89, 0x8e, 0x71, 0xcf,
	0x32, 0xaa, 0x1e, 0xb3, 0x94, 0x5d, 0xa8, 0x4f, 0x98, 0x3e, 0x4b, 0x65, 0x32, 0x71, 0x9c, 0x25,
	0xe7, 0x54, 0x82, 0x86, 0x14, 0xfd, 0x0d, 0x60, 0x5d, 0x23, 0x55, 0x53, 0x3e, 0xb0, 0xd7, 0x34,
	0x77, 0x0f, 0x11, 0xd6, 0x07, 0x23, 0x29, 0x91, 0xeb, 0x73, 0xcc, 0xde, 0xb2, 0x1a, 0xbf, 0xee,
	0xdc, 0x24, 0xdf, 0xce, 0xa5, 0xec, 0x48, 0xc3, 0x8b, 0x76, 0x53, 0xdd, 0x35, 0x36, 0x5f, 0x60,
	0xb3, 0x90, 0x38, 0x66, 0xc2, 0x64, 0x7e, 0x4e, 0xb3, 0x81, 0xdd, 0xd1, 0x69, 0xa3, 0xd4, 0xed,
	0xda, 0x54, 0x4d, 0xd5, 0x9f, 0x61, 0x53, 0x23, 0x1d, 0xb3, 0x21, 0x2d, 0x90, 0xa7, 0x8c, 0x9f,
	0xba, 0xab, 0xee, 0x43, 0xa3, 0x3c, 0xfb, 0xbe, 0x02, 0xdb, 0x57, 0xdd, 0xa3, 0xc4, 0xd5, 0xf6,
	0x14, 0xaa, 0x7a, 0xc4, 0x39, 0x66, 0x94, 0x27, 0x39, 0xfa, 0x4e, 0xc1, 0x41, 0x1f, 0x93, 0x1c,
	0xa3, 0x6f, 0x56, 0x5e, 0xc5, 0xd9, 0xad, 0xe4, 0x77, 0xa1, 0xae, 0xd8, 0x29, 0x4f, 0x32, 0x4c,
	0x67, 0x0d, 0x6a, 0x25, 0x68, 0x2c, 0xc2, 0x1d, 0x58, 0x31, 0xfa, 0x52, 0x64, 0x6e, 0x69, 0x56,
	0xc9, 0xb2, 0x8a, 0x33, 0x22, 0x32, 0x8c, 0x7e, 0x57, 0x60, 0xa7, 0x6c, 0xd1, 0x2f, 0xb1, 0xca,
	0x92, 0x31, 0xba, 0x21, 0x8e, 0xa1, 0xc2, 0x52, 0xed, 0x1b, 0x7c, 0x73, 0xe3, 0x5c, 0x2f, 0xed,
	0x06, 0x31, 0x52, 0x61, 0x1f, 0xaa, 0x33, 0x49, 0x36, 0x17, 0x5a, 0x95, 0x76, 0x35, 0x3e, 0xbc,
	0xb1, 0xf2, 0x7c, 0x1b, 0x04, 0xc6, 0x6c, 0x78, 0xec, 0x00, 0xe3, 0x31, 0x13, 0x67, 0xb3, 0x72,
	0x4b, 0x8f, 0xf9, 0x4a, 0x08, 0xa8, 0x38, 0x2b, 0x3d, 0xf6, 0xa1, 0xc1, 0xb8, 0xbd, 0x9f, 0xab,
	0x52, 0xf9, 0x97, 0x56, 0x77, 0xe8, 0x89, 0x03, 0xc3, 0x17, 0xb0, 0xee, 0x69, 0x6a, 0xd4, 0xa7,
	0x99, 0xa2, 0x85, 0xf2, 0x0f, 0xce, 0x13, 0x7b, 0xa3, 0xfe, 0x07, 0x75, 0x6c, 0x88, 0x6b, 0xa5,
	0x57, 0x29, 0xe8, 0x1e, 0x5d, 0xb9, 0x05, 0xa5, 0xe2, 0x4b, 0xd8, 0x28, 0x89, 0x17, 0x92, 0xcb,
	0x97, 0xa8, 0x5e, 0x33, 0xe2, 0xf0, 0x70, 0xae, 0xda, 0x3c, 0x51, 0x1a, 0xe5, 0x7f, 0xea, 0x36,
	0xfa, 0xb5, 0xe0, 0x56, 0x79, 0xc6, 0xd0, 0x3a, 0xed, 0x41, 0xc3, 0x61, 0x67, 0x62, 0x42, 0xf5,
	0xb4, 0x40, 0xbf, 0xca, 0x35, 0x1b, 0xc0, 0x99, 0x98, 0x9c, 0x4c, 0x0b, 0x0c, 0xbf, 0xc3, 0x96,
	0xdb, 0x3c, 0xa7, 0xcc, 0x87, 0x42, 0xe6, 0x89, 0x66, 0xfe, 0x7b, 0xb0, 0x1a, 0xbf, 0xbd, 0xdd,
	0x88, 0x57, 0x96, 0x9a, 0xdc, 0xb7, 0x9f, 0x7b, 0x53, 0x3e, 0xe8, 0x5e, 0x98, 0x84, 0x3f, 0x02,
	0xd8, 0xf6, 0xf1, 0x5c, 0x19, 0xa0, 0x62, 0x07, 0x78, 0x77, 0xa7, 0x01, 0x66, 0xa2, 0x27, 0x0f,
	0xdc, 0x61, 0x6e, 0x84, 0xe8, 0x67, 0x00, 0xdb, 0xd7, 0xfc, 0xa8, 0x84, 0x21, 0x2c, 0xda, 0xe7,
	0x1b, 0xdb, 0xe4, 0xec, 0xe7, 0x70, 0x0a, 0xdb, 0xf3, 0x59, 0x97, 0x13, 0x1f, 0xd8, 0x89, 0x0f,
	0xef, 0x34, 0xb1, 0x1b, 0xd5, 0x76, 0x64, 0x81, 0x99, 0x51, 0xfb, 0x4b, 0xf6, 0x37, 0xf3, 0xe0,
	0x5f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x63, 0x90, 0x85, 0xc1, 0x54, 0x07, 0x00, 0x00,
}
