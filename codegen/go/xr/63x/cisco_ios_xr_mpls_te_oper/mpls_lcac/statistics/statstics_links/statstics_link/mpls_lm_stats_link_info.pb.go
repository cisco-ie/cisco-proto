/*
Copyright 2019 Cisco Systems

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: mpls_lm_stats_link_info.proto

package cisco_ios_xr_mpls_te_oper_mpls_lcac_statistics_statstics_links_statstics_link

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type MplsLmStatsLinkInfo_KEYS struct {
	InterfaceName        string   `protobuf:"bytes,1,opt,name=interface_name,json=interfaceName,proto3" json:"interface_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MplsLmStatsLinkInfo_KEYS) Reset()         { *m = MplsLmStatsLinkInfo_KEYS{} }
func (m *MplsLmStatsLinkInfo_KEYS) String() string { return proto.CompactTextString(m) }
func (*MplsLmStatsLinkInfo_KEYS) ProtoMessage()    {}
func (*MplsLmStatsLinkInfo_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_178889678c3bc97c, []int{0}
}

func (m *MplsLmStatsLinkInfo_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsLmStatsLinkInfo_KEYS.Unmarshal(m, b)
}
func (m *MplsLmStatsLinkInfo_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsLmStatsLinkInfo_KEYS.Marshal(b, m, deterministic)
}
func (m *MplsLmStatsLinkInfo_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsLmStatsLinkInfo_KEYS.Merge(m, src)
}
func (m *MplsLmStatsLinkInfo_KEYS) XXX_Size() int {
	return xxx_messageInfo_MplsLmStatsLinkInfo_KEYS.Size(m)
}
func (m *MplsLmStatsLinkInfo_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsLmStatsLinkInfo_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_MplsLmStatsLinkInfo_KEYS proto.InternalMessageInfo

func (m *MplsLmStatsLinkInfo_KEYS) GetInterfaceName() string {
	if m != nil {
		return m.InterfaceName
	}
	return ""
}

type MplsLmStatsCounters struct {
	SetupRequests        uint32   `protobuf:"varint,1,opt,name=setup_requests,json=setupRequests,proto3" json:"setup_requests,omitempty"`
	SetupErrors          uint32   `protobuf:"varint,2,opt,name=setup_errors,json=setupErrors,proto3" json:"setup_errors,omitempty"`
	SetupAdmits          uint32   `protobuf:"varint,3,opt,name=setup_admits,json=setupAdmits,proto3" json:"setup_admits,omitempty"`
	SetupRejects         uint32   `protobuf:"varint,4,opt,name=setup_rejects,json=setupRejects,proto3" json:"setup_rejects,omitempty"`
	TearRequests         uint32   `protobuf:"varint,5,opt,name=tear_requests,json=tearRequests,proto3" json:"tear_requests,omitempty"`
	TearErrors           uint32   `protobuf:"varint,6,opt,name=tear_errors,json=tearErrors,proto3" json:"tear_errors,omitempty"`
	TearPreempts         uint32   `protobuf:"varint,7,opt,name=tear_preempts,json=tearPreempts,proto3" json:"tear_preempts,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MplsLmStatsCounters) Reset()         { *m = MplsLmStatsCounters{} }
func (m *MplsLmStatsCounters) String() string { return proto.CompactTextString(m) }
func (*MplsLmStatsCounters) ProtoMessage()    {}
func (*MplsLmStatsCounters) Descriptor() ([]byte, []int) {
	return fileDescriptor_178889678c3bc97c, []int{1}
}

func (m *MplsLmStatsCounters) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsLmStatsCounters.Unmarshal(m, b)
}
func (m *MplsLmStatsCounters) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsLmStatsCounters.Marshal(b, m, deterministic)
}
func (m *MplsLmStatsCounters) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsLmStatsCounters.Merge(m, src)
}
func (m *MplsLmStatsCounters) XXX_Size() int {
	return xxx_messageInfo_MplsLmStatsCounters.Size(m)
}
func (m *MplsLmStatsCounters) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsLmStatsCounters.DiscardUnknown(m)
}

var xxx_messageInfo_MplsLmStatsCounters proto.InternalMessageInfo

func (m *MplsLmStatsCounters) GetSetupRequests() uint32 {
	if m != nil {
		return m.SetupRequests
	}
	return 0
}

func (m *MplsLmStatsCounters) GetSetupErrors() uint32 {
	if m != nil {
		return m.SetupErrors
	}
	return 0
}

func (m *MplsLmStatsCounters) GetSetupAdmits() uint32 {
	if m != nil {
		return m.SetupAdmits
	}
	return 0
}

func (m *MplsLmStatsCounters) GetSetupRejects() uint32 {
	if m != nil {
		return m.SetupRejects
	}
	return 0
}

func (m *MplsLmStatsCounters) GetTearRequests() uint32 {
	if m != nil {
		return m.TearRequests
	}
	return 0
}

func (m *MplsLmStatsCounters) GetTearErrors() uint32 {
	if m != nil {
		return m.TearErrors
	}
	return 0
}

func (m *MplsLmStatsCounters) GetTearPreempts() uint32 {
	if m != nil {
		return m.TearPreempts
	}
	return 0
}

type MplsLmStatsCounters_32Bit struct {
	SetupRequests        uint32   `protobuf:"varint,1,opt,name=setup_requests,json=setupRequests,proto3" json:"setup_requests,omitempty"`
	SetupErrors          uint32   `protobuf:"varint,2,opt,name=setup_errors,json=setupErrors,proto3" json:"setup_errors,omitempty"`
	SetupAdmits          uint32   `protobuf:"varint,3,opt,name=setup_admits,json=setupAdmits,proto3" json:"setup_admits,omitempty"`
	SetupRejects         uint32   `protobuf:"varint,4,opt,name=setup_rejects,json=setupRejects,proto3" json:"setup_rejects,omitempty"`
	TearRequests         uint32   `protobuf:"varint,5,opt,name=tear_requests,json=tearRequests,proto3" json:"tear_requests,omitempty"`
	TearErrors           uint32   `protobuf:"varint,6,opt,name=tear_errors,json=tearErrors,proto3" json:"tear_errors,omitempty"`
	TearPreempts         uint32   `protobuf:"varint,7,opt,name=tear_preempts,json=tearPreempts,proto3" json:"tear_preempts,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MplsLmStatsCounters_32Bit) Reset()         { *m = MplsLmStatsCounters_32Bit{} }
func (m *MplsLmStatsCounters_32Bit) String() string { return proto.CompactTextString(m) }
func (*MplsLmStatsCounters_32Bit) ProtoMessage()    {}
func (*MplsLmStatsCounters_32Bit) Descriptor() ([]byte, []int) {
	return fileDescriptor_178889678c3bc97c, []int{2}
}

func (m *MplsLmStatsCounters_32Bit) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsLmStatsCounters_32Bit.Unmarshal(m, b)
}
func (m *MplsLmStatsCounters_32Bit) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsLmStatsCounters_32Bit.Marshal(b, m, deterministic)
}
func (m *MplsLmStatsCounters_32Bit) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsLmStatsCounters_32Bit.Merge(m, src)
}
func (m *MplsLmStatsCounters_32Bit) XXX_Size() int {
	return xxx_messageInfo_MplsLmStatsCounters_32Bit.Size(m)
}
func (m *MplsLmStatsCounters_32Bit) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsLmStatsCounters_32Bit.DiscardUnknown(m)
}

var xxx_messageInfo_MplsLmStatsCounters_32Bit proto.InternalMessageInfo

func (m *MplsLmStatsCounters_32Bit) GetSetupRequests() uint32 {
	if m != nil {
		return m.SetupRequests
	}
	return 0
}

func (m *MplsLmStatsCounters_32Bit) GetSetupErrors() uint32 {
	if m != nil {
		return m.SetupErrors
	}
	return 0
}

func (m *MplsLmStatsCounters_32Bit) GetSetupAdmits() uint32 {
	if m != nil {
		return m.SetupAdmits
	}
	return 0
}

func (m *MplsLmStatsCounters_32Bit) GetSetupRejects() uint32 {
	if m != nil {
		return m.SetupRejects
	}
	return 0
}

func (m *MplsLmStatsCounters_32Bit) GetTearRequests() uint32 {
	if m != nil {
		return m.TearRequests
	}
	return 0
}

func (m *MplsLmStatsCounters_32Bit) GetTearErrors() uint32 {
	if m != nil {
		return m.TearErrors
	}
	return 0
}

func (m *MplsLmStatsCounters_32Bit) GetTearPreempts() uint32 {
	if m != nil {
		return m.TearPreempts
	}
	return 0
}

type MplsLmStatsLinkInfo struct {
	InterfaceNameXr                    string                     `protobuf:"bytes,50,opt,name=interface_name_xr,json=interfaceNameXr,proto3" json:"interface_name_xr,omitempty"`
	LinkAddress                        string                     `protobuf:"bytes,51,opt,name=link_address,json=linkAddress,proto3" json:"link_address,omitempty"`
	IncomingPathStatistics             *MplsLmStatsCounters       `protobuf:"bytes,52,opt,name=incoming_path_statistics,json=incomingPathStatistics,proto3" json:"incoming_path_statistics,omitempty"`
	IncomingReservationStatistics      *MplsLmStatsCounters       `protobuf:"bytes,53,opt,name=incoming_reservation_statistics,json=incomingReservationStatistics,proto3" json:"incoming_reservation_statistics,omitempty"`
	OutgoingPathStatistics             *MplsLmStatsCounters       `protobuf:"bytes,54,opt,name=outgoing_path_statistics,json=outgoingPathStatistics,proto3" json:"outgoing_path_statistics,omitempty"`
	OutgoingReservationStatistics      *MplsLmStatsCounters       `protobuf:"bytes,55,opt,name=outgoing_reservation_statistics,json=outgoingReservationStatistics,proto3" json:"outgoing_reservation_statistics,omitempty"`
	IncomingPathStatistics32Bit        *MplsLmStatsCounters_32Bit `protobuf:"bytes,56,opt,name=incoming_path_statistics32_bit,json=incomingPathStatistics32Bit,proto3" json:"incoming_path_statistics32_bit,omitempty"`
	IncomingReservationStatistics32Bit *MplsLmStatsCounters_32Bit `protobuf:"bytes,57,opt,name=incoming_reservation_statistics32_bit,json=incomingReservationStatistics32Bit,proto3" json:"incoming_reservation_statistics32_bit,omitempty"`
	OutgoingPathStatistics32Bit        *MplsLmStatsCounters_32Bit `protobuf:"bytes,58,opt,name=outgoing_path_statistics32_bit,json=outgoingPathStatistics32Bit,proto3" json:"outgoing_path_statistics32_bit,omitempty"`
	OutgoingReservationStatistics32Bit *MplsLmStatsCounters_32Bit `protobuf:"bytes,59,opt,name=outgoing_reservation_statistics32_bit,json=outgoingReservationStatistics32Bit,proto3" json:"outgoing_reservation_statistics32_bit,omitempty"`
	XXX_NoUnkeyedLiteral               struct{}                   `json:"-"`
	XXX_unrecognized                   []byte                     `json:"-"`
	XXX_sizecache                      int32                      `json:"-"`
}

func (m *MplsLmStatsLinkInfo) Reset()         { *m = MplsLmStatsLinkInfo{} }
func (m *MplsLmStatsLinkInfo) String() string { return proto.CompactTextString(m) }
func (*MplsLmStatsLinkInfo) ProtoMessage()    {}
func (*MplsLmStatsLinkInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_178889678c3bc97c, []int{3}
}

func (m *MplsLmStatsLinkInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsLmStatsLinkInfo.Unmarshal(m, b)
}
func (m *MplsLmStatsLinkInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsLmStatsLinkInfo.Marshal(b, m, deterministic)
}
func (m *MplsLmStatsLinkInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsLmStatsLinkInfo.Merge(m, src)
}
func (m *MplsLmStatsLinkInfo) XXX_Size() int {
	return xxx_messageInfo_MplsLmStatsLinkInfo.Size(m)
}
func (m *MplsLmStatsLinkInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsLmStatsLinkInfo.DiscardUnknown(m)
}

var xxx_messageInfo_MplsLmStatsLinkInfo proto.InternalMessageInfo

func (m *MplsLmStatsLinkInfo) GetInterfaceNameXr() string {
	if m != nil {
		return m.InterfaceNameXr
	}
	return ""
}

func (m *MplsLmStatsLinkInfo) GetLinkAddress() string {
	if m != nil {
		return m.LinkAddress
	}
	return ""
}

func (m *MplsLmStatsLinkInfo) GetIncomingPathStatistics() *MplsLmStatsCounters {
	if m != nil {
		return m.IncomingPathStatistics
	}
	return nil
}

func (m *MplsLmStatsLinkInfo) GetIncomingReservationStatistics() *MplsLmStatsCounters {
	if m != nil {
		return m.IncomingReservationStatistics
	}
	return nil
}

func (m *MplsLmStatsLinkInfo) GetOutgoingPathStatistics() *MplsLmStatsCounters {
	if m != nil {
		return m.OutgoingPathStatistics
	}
	return nil
}

func (m *MplsLmStatsLinkInfo) GetOutgoingReservationStatistics() *MplsLmStatsCounters {
	if m != nil {
		return m.OutgoingReservationStatistics
	}
	return nil
}

func (m *MplsLmStatsLinkInfo) GetIncomingPathStatistics32Bit() *MplsLmStatsCounters_32Bit {
	if m != nil {
		return m.IncomingPathStatistics32Bit
	}
	return nil
}

func (m *MplsLmStatsLinkInfo) GetIncomingReservationStatistics32Bit() *MplsLmStatsCounters_32Bit {
	if m != nil {
		return m.IncomingReservationStatistics32Bit
	}
	return nil
}

func (m *MplsLmStatsLinkInfo) GetOutgoingPathStatistics32Bit() *MplsLmStatsCounters_32Bit {
	if m != nil {
		return m.OutgoingPathStatistics32Bit
	}
	return nil
}

func (m *MplsLmStatsLinkInfo) GetOutgoingReservationStatistics32Bit() *MplsLmStatsCounters_32Bit {
	if m != nil {
		return m.OutgoingReservationStatistics32Bit
	}
	return nil
}

func init() {
	proto.RegisterType((*MplsLmStatsLinkInfo_KEYS)(nil), "cisco_ios_xr_mpls_te_oper.mpls_lcac.statistics.statstics_links.statstics_link.mpls_lm_stats_link_info_KEYS")
	proto.RegisterType((*MplsLmStatsCounters)(nil), "cisco_ios_xr_mpls_te_oper.mpls_lcac.statistics.statstics_links.statstics_link.mpls_lm_stats_counters")
	proto.RegisterType((*MplsLmStatsCounters_32Bit)(nil), "cisco_ios_xr_mpls_te_oper.mpls_lcac.statistics.statstics_links.statstics_link.mpls_lm_stats_counters_32_bit")
	proto.RegisterType((*MplsLmStatsLinkInfo)(nil), "cisco_ios_xr_mpls_te_oper.mpls_lcac.statistics.statstics_links.statstics_link.mpls_lm_stats_link_info")
}

func init() { proto.RegisterFile("mpls_lm_stats_link_info.proto", fileDescriptor_178889678c3bc97c) }

var fileDescriptor_178889678c3bc97c = []byte{
	// 522 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe4, 0x96, 0x4f, 0x6f, 0xd3, 0x30,
	0x18, 0xc6, 0x95, 0x02, 0x43, 0x38, 0x2b, 0x88, 0x1c, 0x86, 0x25, 0x18, 0x1b, 0x45, 0x93, 0x26,
	0x0e, 0x39, 0xb4, 0xfc, 0xe7, 0x34, 0xa4, 0x9e, 0x10, 0x68, 0xca, 0x2e, 0x70, 0xb2, 0xbc, 0xd4,
	0xdb, 0x0c, 0x4d, 0x1c, 0xfc, 0xbe, 0x45, 0xfb, 0x22, 0xdc, 0x90, 0xf8, 0x04, 0x1c, 0xf8, 0x04,
	0x7c, 0x2d, 0x8e, 0xc8, 0x6f, 0x9c, 0xa4, 0x9d, 0x92, 0xf5, 0x82, 0xda, 0xc3, 0x6e, 0xe9, 0xa3,
	0xc7, 0xaf, 0x7f, 0x7e, 0xf2, 0xc4, 0x2a, 0xdb, 0xce, 0x8a, 0x29, 0x88, 0x69, 0x26, 0x00, 0x25,
	0x82, 0x98, 0xea, 0xfc, 0x8b, 0xd0, 0xf9, 0x89, 0x89, 0x0b, 0x6b, 0xd0, 0x44, 0xef, 0x53, 0x0d,
	0xa9, 0x11, 0xda, 0x80, 0x38, 0xb7, 0x82, 0xbc, 0xa8, 0x84, 0x29, 0x94, 0x8d, 0xcb, 0x85, 0xa9,
	0x4c, 0x63, 0xb7, 0x54, 0x03, 0xea, 0x14, 0xe8, 0x91, 0x9e, 0x68, 0xd2, 0xc5, 0xdf, 0x83, 0x31,
	0x7b, 0xd0, 0xb1, 0x9f, 0x78, 0x37, 0xfe, 0x74, 0x14, 0xed, 0xb1, 0xdb, 0x3a, 0x47, 0x65, 0x4f,
	0x64, 0xaa, 0x44, 0x2e, 0x33, 0xc5, 0x83, 0xdd, 0x60, 0xff, 0x56, 0xd2, 0xaf, 0xd5, 0x0f, 0x32,
	0x53, 0x83, 0xef, 0x3d, 0xb6, 0xb5, 0x38, 0x27, 0x35, 0x33, 0xe7, 0x00, 0x37, 0x01, 0x14, 0xce,
	0x0a, 0x61, 0xd5, 0xd7, 0x99, 0x02, 0x04, 0x9a, 0xd0, 0x4f, 0xfa, 0xa4, 0x26, 0x5e, 0x8c, 0x1e,
	0xb1, 0xcd, 0xd2, 0xa6, 0xac, 0x35, 0x16, 0x78, 0x8f, 0x4c, 0x21, 0x69, 0x63, 0x92, 0x1a, 0x8b,
	0x9c, 0x64, 0x1a, 0x81, 0x5f, 0x9b, 0xb3, 0x1c, 0x90, 0x14, 0x3d, 0x66, 0xfd, 0x6a, 0xb3, 0xcf,
	0x2a, 0x45, 0xe0, 0xd7, 0xc9, 0xb3, 0xe9, 0xf7, 0x22, 0xcd, 0x99, 0x50, 0x49, 0xdb, 0x00, 0xdd,
	0x28, 0x4d, 0x4e, 0xac, 0x79, 0x76, 0x58, 0x48, 0x26, 0x8f, 0xb3, 0x41, 0x16, 0xe6, 0x24, 0x4f,
	0x53, 0x4d, 0x29, 0xac, 0x52, 0x59, 0x81, 0xc0, 0x6f, 0x36, 0x53, 0x0e, 0xbd, 0x36, 0xf8, 0xd1,
	0xbb, 0xf8, 0x3e, 0xab, 0x5c, 0xc4, 0x68, 0x28, 0x8e, 0x35, 0x5e, 0xed, 0x78, 0xfe, 0x86, 0xec,
	0x5e, 0x47, 0xfd, 0xa2, 0x27, 0xec, 0xee, 0x62, 0xf3, 0xc4, 0xb9, 0xe5, 0x43, 0x2a, 0xdf, 0x9d,
	0x85, 0xf2, 0x7d, 0xb4, 0xee, 0xe8, 0xb4, 0x50, 0x4e, 0x26, 0x56, 0x01, 0xf0, 0x11, 0xd9, 0x42,
	0xa7, 0x1d, 0x94, 0x52, 0xf4, 0x33, 0x60, 0x5c, 0xe7, 0xa9, 0xc9, 0x74, 0x7e, 0x2a, 0x0a, 0x89,
	0x67, 0xa2, 0xf9, 0x48, 0xf8, 0xd3, 0xdd, 0x60, 0x3f, 0x1c, 0xaa, 0xf8, 0xbf, 0x7e, 0x5b, 0x71,
	0xfb, 0x8b, 0x4f, 0xb6, 0x2a, 0x8c, 0x43, 0x89, 0x67, 0x47, 0xf5, 0xb4, 0xe8, 0x57, 0xc0, 0x76,
	0x6a, 0x42, 0xab, 0x40, 0xd9, 0x6f, 0x12, 0xb5, 0xc9, 0xe7, 0x41, 0x9f, 0xad, 0x12, 0x74, 0xbb,
	0xa2, 0x49, 0x1a, 0x98, 0x39, 0x5e, 0x97, 0xa8, 0x99, 0xe1, 0xa9, 0x69, 0x4b, 0xf4, 0xf9, 0x4a,
	0x13, 0xad, 0x30, 0x5a, 0x12, 0xad, 0x09, 0x3b, 0x12, 0x7d, 0xb1, 0xd2, 0x44, 0x2b, 0x9a, 0xf6,
	0x44, 0x7f, 0x07, 0xec, 0x61, 0x57, 0x47, 0xcb, 0xeb, 0x82, 0xbf, 0x24, 0xdc, 0xe9, 0x4a, 0x70,
	0xfd, 0x15, 0x95, 0xdc, 0x6f, 0x2f, 0xec, 0x68, 0xf8, 0x56, 0x63, 0xf4, 0x27, 0x60, 0x7b, 0x4b,
	0x5a, 0xeb, 0xd1, 0x5f, 0xad, 0x01, 0x7d, 0x70, 0x69, 0x85, 0xcb, 0x13, 0xb8, 0xd4, 0xbb, 0x7a,
	0xec, 0xd1, 0x5f, 0xaf, 0x23, 0xf5, 0xf6, 0x52, 0x37, 0xa9, 0x2f, 0x69, 0xb6, 0x47, 0x7f, 0xb3,
	0x8e, 0xd4, 0x2f, 0xad, 0x39, 0x9d, 0xe0, 0x78, 0x83, 0xfe, 0xce, 0x8c, 0xfe, 0x05, 0x00, 0x00,
	0xff, 0xff, 0x8d, 0xa9, 0xea, 0xfb, 0xef, 0x08, 0x00, 0x00,
}
