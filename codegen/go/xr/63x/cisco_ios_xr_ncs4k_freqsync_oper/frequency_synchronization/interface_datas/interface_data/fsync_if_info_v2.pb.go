/*
Copyright 2019 Cisco Systems

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: fsync_if_info_v2.proto

package cisco_ios_xr_ncs4k_freqsync_oper_frequency_synchronization_interface_datas_interface_data

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type FsyncIfInfoV2_KEYS struct {
	InterfaceName        string   `protobuf:"bytes,1,opt,name=interface_name,json=interfaceName,proto3" json:"interface_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FsyncIfInfoV2_KEYS) Reset()         { *m = FsyncIfInfoV2_KEYS{} }
func (m *FsyncIfInfoV2_KEYS) String() string { return proto.CompactTextString(m) }
func (*FsyncIfInfoV2_KEYS) ProtoMessage()    {}
func (*FsyncIfInfoV2_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_84da25c7bb20e3b5, []int{0}
}

func (m *FsyncIfInfoV2_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FsyncIfInfoV2_KEYS.Unmarshal(m, b)
}
func (m *FsyncIfInfoV2_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FsyncIfInfoV2_KEYS.Marshal(b, m, deterministic)
}
func (m *FsyncIfInfoV2_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FsyncIfInfoV2_KEYS.Merge(m, src)
}
func (m *FsyncIfInfoV2_KEYS) XXX_Size() int {
	return xxx_messageInfo_FsyncIfInfoV2_KEYS.Size(m)
}
func (m *FsyncIfInfoV2_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_FsyncIfInfoV2_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_FsyncIfInfoV2_KEYS proto.InternalMessageInfo

func (m *FsyncIfInfoV2_KEYS) GetInterfaceName() string {
	if m != nil {
		return m.InterfaceName
	}
	return ""
}

type FsyncBagClockId struct {
	Node                 string   `protobuf:"bytes,1,opt,name=node,proto3" json:"node,omitempty"`
	Port                 uint32   `protobuf:"varint,2,opt,name=port,proto3" json:"port,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FsyncBagClockId) Reset()         { *m = FsyncBagClockId{} }
func (m *FsyncBagClockId) String() string { return proto.CompactTextString(m) }
func (*FsyncBagClockId) ProtoMessage()    {}
func (*FsyncBagClockId) Descriptor() ([]byte, []int) {
	return fileDescriptor_84da25c7bb20e3b5, []int{1}
}

func (m *FsyncBagClockId) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FsyncBagClockId.Unmarshal(m, b)
}
func (m *FsyncBagClockId) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FsyncBagClockId.Marshal(b, m, deterministic)
}
func (m *FsyncBagClockId) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FsyncBagClockId.Merge(m, src)
}
func (m *FsyncBagClockId) XXX_Size() int {
	return xxx_messageInfo_FsyncBagClockId.Size(m)
}
func (m *FsyncBagClockId) XXX_DiscardUnknown() {
	xxx_messageInfo_FsyncBagClockId.DiscardUnknown(m)
}

var xxx_messageInfo_FsyncBagClockId proto.InternalMessageInfo

func (m *FsyncBagClockId) GetNode() string {
	if m != nil {
		return m.Node
	}
	return ""
}

func (m *FsyncBagClockId) GetPort() uint32 {
	if m != nil {
		return m.Port
	}
	return 0
}

type FsyncBagSourceId struct {
	SourceClass              string           `protobuf:"bytes,1,opt,name=source_class,json=sourceClass,proto3" json:"source_class,omitempty"`
	EthernetInterface        string           `protobuf:"bytes,2,opt,name=ethernet_interface,json=ethernetInterface,proto3" json:"ethernet_interface,omitempty"`
	SonetInterface           string           `protobuf:"bytes,3,opt,name=sonet_interface,json=sonetInterface,proto3" json:"sonet_interface,omitempty"`
	ClockId                  *FsyncBagClockId `protobuf:"bytes,4,opt,name=clock_id,json=clockId,proto3" json:"clock_id,omitempty"`
	Node                     string           `protobuf:"bytes,5,opt,name=node,proto3" json:"node,omitempty"`
	PtpNode                  string           `protobuf:"bytes,6,opt,name=ptp_node,json=ptpNode,proto3" json:"ptp_node,omitempty"`
	SatelliteAccessInterface string           `protobuf:"bytes,7,opt,name=satellite_access_interface,json=satelliteAccessInterface,proto3" json:"satellite_access_interface,omitempty"`
	NtpNode                  string           `protobuf:"bytes,8,opt,name=ntp_node,json=ntpNode,proto3" json:"ntp_node,omitempty"`
	XXX_NoUnkeyedLiteral     struct{}         `json:"-"`
	XXX_unrecognized         []byte           `json:"-"`
	XXX_sizecache            int32            `json:"-"`
}

func (m *FsyncBagSourceId) Reset()         { *m = FsyncBagSourceId{} }
func (m *FsyncBagSourceId) String() string { return proto.CompactTextString(m) }
func (*FsyncBagSourceId) ProtoMessage()    {}
func (*FsyncBagSourceId) Descriptor() ([]byte, []int) {
	return fileDescriptor_84da25c7bb20e3b5, []int{2}
}

func (m *FsyncBagSourceId) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FsyncBagSourceId.Unmarshal(m, b)
}
func (m *FsyncBagSourceId) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FsyncBagSourceId.Marshal(b, m, deterministic)
}
func (m *FsyncBagSourceId) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FsyncBagSourceId.Merge(m, src)
}
func (m *FsyncBagSourceId) XXX_Size() int {
	return xxx_messageInfo_FsyncBagSourceId.Size(m)
}
func (m *FsyncBagSourceId) XXX_DiscardUnknown() {
	xxx_messageInfo_FsyncBagSourceId.DiscardUnknown(m)
}

var xxx_messageInfo_FsyncBagSourceId proto.InternalMessageInfo

func (m *FsyncBagSourceId) GetSourceClass() string {
	if m != nil {
		return m.SourceClass
	}
	return ""
}

func (m *FsyncBagSourceId) GetEthernetInterface() string {
	if m != nil {
		return m.EthernetInterface
	}
	return ""
}

func (m *FsyncBagSourceId) GetSonetInterface() string {
	if m != nil {
		return m.SonetInterface
	}
	return ""
}

func (m *FsyncBagSourceId) GetClockId() *FsyncBagClockId {
	if m != nil {
		return m.ClockId
	}
	return nil
}

func (m *FsyncBagSourceId) GetNode() string {
	if m != nil {
		return m.Node
	}
	return ""
}

func (m *FsyncBagSourceId) GetPtpNode() string {
	if m != nil {
		return m.PtpNode
	}
	return ""
}

func (m *FsyncBagSourceId) GetSatelliteAccessInterface() string {
	if m != nil {
		return m.SatelliteAccessInterface
	}
	return ""
}

func (m *FsyncBagSourceId) GetNtpNode() string {
	if m != nil {
		return m.NtpNode
	}
	return ""
}

type FsyncBagQl struct {
	QualityLevelOption      string   `protobuf:"bytes,1,opt,name=quality_level_option,json=qualityLevelOption,proto3" json:"quality_level_option,omitempty"`
	Option1Value            string   `protobuf:"bytes,2,opt,name=option1_value,json=option1Value,proto3" json:"option1_value,omitempty"`
	Option2Generation1Value string   `protobuf:"bytes,3,opt,name=option2_generation1_value,json=option2Generation1Value,proto3" json:"option2_generation1_value,omitempty"`
	Option2Generation2Value string   `protobuf:"bytes,4,opt,name=option2_generation2_value,json=option2Generation2Value,proto3" json:"option2_generation2_value,omitempty"`
	XXX_NoUnkeyedLiteral    struct{} `json:"-"`
	XXX_unrecognized        []byte   `json:"-"`
	XXX_sizecache           int32    `json:"-"`
}

func (m *FsyncBagQl) Reset()         { *m = FsyncBagQl{} }
func (m *FsyncBagQl) String() string { return proto.CompactTextString(m) }
func (*FsyncBagQl) ProtoMessage()    {}
func (*FsyncBagQl) Descriptor() ([]byte, []int) {
	return fileDescriptor_84da25c7bb20e3b5, []int{3}
}

func (m *FsyncBagQl) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FsyncBagQl.Unmarshal(m, b)
}
func (m *FsyncBagQl) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FsyncBagQl.Marshal(b, m, deterministic)
}
func (m *FsyncBagQl) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FsyncBagQl.Merge(m, src)
}
func (m *FsyncBagQl) XXX_Size() int {
	return xxx_messageInfo_FsyncBagQl.Size(m)
}
func (m *FsyncBagQl) XXX_DiscardUnknown() {
	xxx_messageInfo_FsyncBagQl.DiscardUnknown(m)
}

var xxx_messageInfo_FsyncBagQl proto.InternalMessageInfo

func (m *FsyncBagQl) GetQualityLevelOption() string {
	if m != nil {
		return m.QualityLevelOption
	}
	return ""
}

func (m *FsyncBagQl) GetOption1Value() string {
	if m != nil {
		return m.Option1Value
	}
	return ""
}

func (m *FsyncBagQl) GetOption2Generation1Value() string {
	if m != nil {
		return m.Option2Generation1Value
	}
	return ""
}

func (m *FsyncBagQl) GetOption2Generation2Value() string {
	if m != nil {
		return m.Option2Generation2Value
	}
	return ""
}

type FsyncBagSpInfo struct {
	SelectionPoint            uint32   `protobuf:"varint,1,opt,name=selection_point,json=selectionPoint,proto3" json:"selection_point,omitempty"`
	SelectionPointDescription string   `protobuf:"bytes,2,opt,name=selection_point_description,json=selectionPointDescription,proto3" json:"selection_point_description,omitempty"`
	XXX_NoUnkeyedLiteral      struct{} `json:"-"`
	XXX_unrecognized          []byte   `json:"-"`
	XXX_sizecache             int32    `json:"-"`
}

func (m *FsyncBagSpInfo) Reset()         { *m = FsyncBagSpInfo{} }
func (m *FsyncBagSpInfo) String() string { return proto.CompactTextString(m) }
func (*FsyncBagSpInfo) ProtoMessage()    {}
func (*FsyncBagSpInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_84da25c7bb20e3b5, []int{4}
}

func (m *FsyncBagSpInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FsyncBagSpInfo.Unmarshal(m, b)
}
func (m *FsyncBagSpInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FsyncBagSpInfo.Marshal(b, m, deterministic)
}
func (m *FsyncBagSpInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FsyncBagSpInfo.Merge(m, src)
}
func (m *FsyncBagSpInfo) XXX_Size() int {
	return xxx_messageInfo_FsyncBagSpInfo.Size(m)
}
func (m *FsyncBagSpInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_FsyncBagSpInfo.DiscardUnknown(m)
}

var xxx_messageInfo_FsyncBagSpInfo proto.InternalMessageInfo

func (m *FsyncBagSpInfo) GetSelectionPoint() uint32 {
	if m != nil {
		return m.SelectionPoint
	}
	return 0
}

func (m *FsyncBagSpInfo) GetSelectionPointDescription() string {
	if m != nil {
		return m.SelectionPointDescription
	}
	return ""
}

type FsyncBagTimestamp struct {
	Seconds              uint32   `protobuf:"varint,1,opt,name=seconds,proto3" json:"seconds,omitempty"`
	Nanoseconds          uint32   `protobuf:"varint,2,opt,name=nanoseconds,proto3" json:"nanoseconds,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FsyncBagTimestamp) Reset()         { *m = FsyncBagTimestamp{} }
func (m *FsyncBagTimestamp) String() string { return proto.CompactTextString(m) }
func (*FsyncBagTimestamp) ProtoMessage()    {}
func (*FsyncBagTimestamp) Descriptor() ([]byte, []int) {
	return fileDescriptor_84da25c7bb20e3b5, []int{5}
}

func (m *FsyncBagTimestamp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FsyncBagTimestamp.Unmarshal(m, b)
}
func (m *FsyncBagTimestamp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FsyncBagTimestamp.Marshal(b, m, deterministic)
}
func (m *FsyncBagTimestamp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FsyncBagTimestamp.Merge(m, src)
}
func (m *FsyncBagTimestamp) XXX_Size() int {
	return xxx_messageInfo_FsyncBagTimestamp.Size(m)
}
func (m *FsyncBagTimestamp) XXX_DiscardUnknown() {
	xxx_messageInfo_FsyncBagTimestamp.DiscardUnknown(m)
}

var xxx_messageInfo_FsyncBagTimestamp proto.InternalMessageInfo

func (m *FsyncBagTimestamp) GetSeconds() uint32 {
	if m != nil {
		return m.Seconds
	}
	return 0
}

func (m *FsyncBagTimestamp) GetNanoseconds() uint32 {
	if m != nil {
		return m.Nanoseconds
	}
	return 0
}

type FsyncBagEthPeerInfo struct {
	PeerState            string             `protobuf:"bytes,1,opt,name=peer_state,json=peerState,proto3" json:"peer_state,omitempty"`
	PeerStateTime        *FsyncBagTimestamp `protobuf:"bytes,2,opt,name=peer_state_time,json=peerStateTime,proto3" json:"peer_state_time,omitempty"`
	LastSsm              *FsyncBagTimestamp `protobuf:"bytes,3,opt,name=last_ssm,json=lastSsm,proto3" json:"last_ssm,omitempty"`
	PeerUpCount          uint32             `protobuf:"varint,4,opt,name=peer_up_count,json=peerUpCount,proto3" json:"peer_up_count,omitempty"`
	PeerTimeoutCount     uint32             `protobuf:"varint,5,opt,name=peer_timeout_count,json=peerTimeoutCount,proto3" json:"peer_timeout_count,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *FsyncBagEthPeerInfo) Reset()         { *m = FsyncBagEthPeerInfo{} }
func (m *FsyncBagEthPeerInfo) String() string { return proto.CompactTextString(m) }
func (*FsyncBagEthPeerInfo) ProtoMessage()    {}
func (*FsyncBagEthPeerInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_84da25c7bb20e3b5, []int{6}
}

func (m *FsyncBagEthPeerInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FsyncBagEthPeerInfo.Unmarshal(m, b)
}
func (m *FsyncBagEthPeerInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FsyncBagEthPeerInfo.Marshal(b, m, deterministic)
}
func (m *FsyncBagEthPeerInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FsyncBagEthPeerInfo.Merge(m, src)
}
func (m *FsyncBagEthPeerInfo) XXX_Size() int {
	return xxx_messageInfo_FsyncBagEthPeerInfo.Size(m)
}
func (m *FsyncBagEthPeerInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_FsyncBagEthPeerInfo.DiscardUnknown(m)
}

var xxx_messageInfo_FsyncBagEthPeerInfo proto.InternalMessageInfo

func (m *FsyncBagEthPeerInfo) GetPeerState() string {
	if m != nil {
		return m.PeerState
	}
	return ""
}

func (m *FsyncBagEthPeerInfo) GetPeerStateTime() *FsyncBagTimestamp {
	if m != nil {
		return m.PeerStateTime
	}
	return nil
}

func (m *FsyncBagEthPeerInfo) GetLastSsm() *FsyncBagTimestamp {
	if m != nil {
		return m.LastSsm
	}
	return nil
}

func (m *FsyncBagEthPeerInfo) GetPeerUpCount() uint32 {
	if m != nil {
		return m.PeerUpCount
	}
	return 0
}

func (m *FsyncBagEthPeerInfo) GetPeerTimeoutCount() uint32 {
	if m != nil {
		return m.PeerTimeoutCount
	}
	return 0
}

type FsyncBagEthEsmcStats struct {
	EsmcEventsSent        uint32   `protobuf:"varint,1,opt,name=esmc_events_sent,json=esmcEventsSent,proto3" json:"esmc_events_sent,omitempty"`
	EsmcEventsReceived    uint32   `protobuf:"varint,2,opt,name=esmc_events_received,json=esmcEventsReceived,proto3" json:"esmc_events_received,omitempty"`
	EsmcInfosSent         uint32   `protobuf:"varint,3,opt,name=esmc_infos_sent,json=esmcInfosSent,proto3" json:"esmc_infos_sent,omitempty"`
	EsmcInfosReceived     uint32   `protobuf:"varint,4,opt,name=esmc_infos_received,json=esmcInfosReceived,proto3" json:"esmc_infos_received,omitempty"`
	EsmcDnUsSent          uint32   `protobuf:"varint,5,opt,name=esmc_dn_us_sent,json=esmcDnUsSent,proto3" json:"esmc_dn_us_sent,omitempty"`
	EsmcDnUsReceived      uint32   `protobuf:"varint,6,opt,name=esmc_dn_us_received,json=esmcDnUsReceived,proto3" json:"esmc_dn_us_received,omitempty"`
	EsmcMalformedReceived uint32   `protobuf:"varint,7,opt,name=esmc_malformed_received,json=esmcMalformedReceived,proto3" json:"esmc_malformed_received,omitempty"`
	EsmcReceivedError     uint32   `protobuf:"varint,8,opt,name=esmc_received_error,json=esmcReceivedError,proto3" json:"esmc_received_error,omitempty"`
	XXX_NoUnkeyedLiteral  struct{} `json:"-"`
	XXX_unrecognized      []byte   `json:"-"`
	XXX_sizecache         int32    `json:"-"`
}

func (m *FsyncBagEthEsmcStats) Reset()         { *m = FsyncBagEthEsmcStats{} }
func (m *FsyncBagEthEsmcStats) String() string { return proto.CompactTextString(m) }
func (*FsyncBagEthEsmcStats) ProtoMessage()    {}
func (*FsyncBagEthEsmcStats) Descriptor() ([]byte, []int) {
	return fileDescriptor_84da25c7bb20e3b5, []int{7}
}

func (m *FsyncBagEthEsmcStats) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FsyncBagEthEsmcStats.Unmarshal(m, b)
}
func (m *FsyncBagEthEsmcStats) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FsyncBagEthEsmcStats.Marshal(b, m, deterministic)
}
func (m *FsyncBagEthEsmcStats) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FsyncBagEthEsmcStats.Merge(m, src)
}
func (m *FsyncBagEthEsmcStats) XXX_Size() int {
	return xxx_messageInfo_FsyncBagEthEsmcStats.Size(m)
}
func (m *FsyncBagEthEsmcStats) XXX_DiscardUnknown() {
	xxx_messageInfo_FsyncBagEthEsmcStats.DiscardUnknown(m)
}

var xxx_messageInfo_FsyncBagEthEsmcStats proto.InternalMessageInfo

func (m *FsyncBagEthEsmcStats) GetEsmcEventsSent() uint32 {
	if m != nil {
		return m.EsmcEventsSent
	}
	return 0
}

func (m *FsyncBagEthEsmcStats) GetEsmcEventsReceived() uint32 {
	if m != nil {
		return m.EsmcEventsReceived
	}
	return 0
}

func (m *FsyncBagEthEsmcStats) GetEsmcInfosSent() uint32 {
	if m != nil {
		return m.EsmcInfosSent
	}
	return 0
}

func (m *FsyncBagEthEsmcStats) GetEsmcInfosReceived() uint32 {
	if m != nil {
		return m.EsmcInfosReceived
	}
	return 0
}

func (m *FsyncBagEthEsmcStats) GetEsmcDnUsSent() uint32 {
	if m != nil {
		return m.EsmcDnUsSent
	}
	return 0
}

func (m *FsyncBagEthEsmcStats) GetEsmcDnUsReceived() uint32 {
	if m != nil {
		return m.EsmcDnUsReceived
	}
	return 0
}

func (m *FsyncBagEthEsmcStats) GetEsmcMalformedReceived() uint32 {
	if m != nil {
		return m.EsmcMalformedReceived
	}
	return 0
}

func (m *FsyncBagEthEsmcStats) GetEsmcReceivedError() uint32 {
	if m != nil {
		return m.EsmcReceivedError
	}
	return 0
}

type FsyncIfInfoV2 struct {
	Source                      *FsyncBagSourceId     `protobuf:"bytes,50,opt,name=source,proto3" json:"source,omitempty"`
	Name                        string                `protobuf:"bytes,51,opt,name=name,proto3" json:"name,omitempty"`
	State                       string                `protobuf:"bytes,52,opt,name=state,proto3" json:"state,omitempty"`
	SsmEnabled                  bool                  `protobuf:"varint,53,opt,name=ssm_enabled,json=ssmEnabled,proto3" json:"ssm_enabled,omitempty"`
	Squelched                   bool                  `protobuf:"varint,54,opt,name=squelched,proto3" json:"squelched,omitempty"`
	SelectionInput              bool                  `protobuf:"varint,55,opt,name=selection_input,json=selectionInput,proto3" json:"selection_input,omitempty"`
	Priority                    uint32                `protobuf:"varint,56,opt,name=priority,proto3" json:"priority,omitempty"`
	TimeOfDayPriority           uint32                `protobuf:"varint,57,opt,name=time_of_day_priority,json=timeOfDayPriority,proto3" json:"time_of_day_priority,omitempty"`
	SelectedSource              *FsyncBagSourceId     `protobuf:"bytes,58,opt,name=selected_source,json=selectedSource,proto3" json:"selected_source,omitempty"`
	DampingState                string                `protobuf:"bytes,59,opt,name=damping_state,json=dampingState,proto3" json:"damping_state,omitempty"`
	DampingTime                 uint32                `protobuf:"varint,60,opt,name=damping_time,json=dampingTime,proto3" json:"damping_time,omitempty"`
	WaitToRestoreTime           uint32                `protobuf:"varint,61,opt,name=wait_to_restore_time,json=waitToRestoreTime,proto3" json:"wait_to_restore_time,omitempty"`
	SupportsFrequency           bool                  `protobuf:"varint,62,opt,name=supports_frequency,json=supportsFrequency,proto3" json:"supports_frequency,omitempty"`
	SupportsTimeOfDay           bool                  `protobuf:"varint,63,opt,name=supports_time_of_day,json=supportsTimeOfDay,proto3" json:"supports_time_of_day,omitempty"`
	QualityLevelReceived        *FsyncBagQl           `protobuf:"bytes,64,opt,name=quality_level_received,json=qualityLevelReceived,proto3" json:"quality_level_received,omitempty"`
	QualityLevelDamped          *FsyncBagQl           `protobuf:"bytes,65,opt,name=quality_level_damped,json=qualityLevelDamped,proto3" json:"quality_level_damped,omitempty"`
	QualityLevelEffectiveInput  *FsyncBagQl           `protobuf:"bytes,66,opt,name=quality_level_effective_input,json=qualityLevelEffectiveInput,proto3" json:"quality_level_effective_input,omitempty"`
	QualityLevelEffectiveOutput *FsyncBagQl           `protobuf:"bytes,67,opt,name=quality_level_effective_output,json=qualityLevelEffectiveOutput,proto3" json:"quality_level_effective_output,omitempty"`
	QualityLevelSelectedSource  *FsyncBagQl           `protobuf:"bytes,68,opt,name=quality_level_selected_source,json=qualityLevelSelectedSource,proto3" json:"quality_level_selected_source,omitempty"`
	SpaSelectionPoint           []*FsyncBagSpInfo     `protobuf:"bytes,69,rep,name=spa_selection_point,json=spaSelectionPoint,proto3" json:"spa_selection_point,omitempty"`
	NodeSelectionPoint          []*FsyncBagSpInfo     `protobuf:"bytes,70,rep,name=node_selection_point,json=nodeSelectionPoint,proto3" json:"node_selection_point,omitempty"`
	EthernetPeerInformation     *FsyncBagEthPeerInfo  `protobuf:"bytes,71,opt,name=ethernet_peer_information,json=ethernetPeerInformation,proto3" json:"ethernet_peer_information,omitempty"`
	EsmcStatistics              *FsyncBagEthEsmcStats `protobuf:"bytes,72,opt,name=esmc_statistics,json=esmcStatistics,proto3" json:"esmc_statistics,omitempty"`
	XXX_NoUnkeyedLiteral        struct{}              `json:"-"`
	XXX_unrecognized            []byte                `json:"-"`
	XXX_sizecache               int32                 `json:"-"`
}

func (m *FsyncIfInfoV2) Reset()         { *m = FsyncIfInfoV2{} }
func (m *FsyncIfInfoV2) String() string { return proto.CompactTextString(m) }
func (*FsyncIfInfoV2) ProtoMessage()    {}
func (*FsyncIfInfoV2) Descriptor() ([]byte, []int) {
	return fileDescriptor_84da25c7bb20e3b5, []int{8}
}

func (m *FsyncIfInfoV2) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FsyncIfInfoV2.Unmarshal(m, b)
}
func (m *FsyncIfInfoV2) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FsyncIfInfoV2.Marshal(b, m, deterministic)
}
func (m *FsyncIfInfoV2) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FsyncIfInfoV2.Merge(m, src)
}
func (m *FsyncIfInfoV2) XXX_Size() int {
	return xxx_messageInfo_FsyncIfInfoV2.Size(m)
}
func (m *FsyncIfInfoV2) XXX_DiscardUnknown() {
	xxx_messageInfo_FsyncIfInfoV2.DiscardUnknown(m)
}

var xxx_messageInfo_FsyncIfInfoV2 proto.InternalMessageInfo

func (m *FsyncIfInfoV2) GetSource() *FsyncBagSourceId {
	if m != nil {
		return m.Source
	}
	return nil
}

func (m *FsyncIfInfoV2) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *FsyncIfInfoV2) GetState() string {
	if m != nil {
		return m.State
	}
	return ""
}

func (m *FsyncIfInfoV2) GetSsmEnabled() bool {
	if m != nil {
		return m.SsmEnabled
	}
	return false
}

func (m *FsyncIfInfoV2) GetSquelched() bool {
	if m != nil {
		return m.Squelched
	}
	return false
}

func (m *FsyncIfInfoV2) GetSelectionInput() bool {
	if m != nil {
		return m.SelectionInput
	}
	return false
}

func (m *FsyncIfInfoV2) GetPriority() uint32 {
	if m != nil {
		return m.Priority
	}
	return 0
}

func (m *FsyncIfInfoV2) GetTimeOfDayPriority() uint32 {
	if m != nil {
		return m.TimeOfDayPriority
	}
	return 0
}

func (m *FsyncIfInfoV2) GetSelectedSource() *FsyncBagSourceId {
	if m != nil {
		return m.SelectedSource
	}
	return nil
}

func (m *FsyncIfInfoV2) GetDampingState() string {
	if m != nil {
		return m.DampingState
	}
	return ""
}

func (m *FsyncIfInfoV2) GetDampingTime() uint32 {
	if m != nil {
		return m.DampingTime
	}
	return 0
}

func (m *FsyncIfInfoV2) GetWaitToRestoreTime() uint32 {
	if m != nil {
		return m.WaitToRestoreTime
	}
	return 0
}

func (m *FsyncIfInfoV2) GetSupportsFrequency() bool {
	if m != nil {
		return m.SupportsFrequency
	}
	return false
}

func (m *FsyncIfInfoV2) GetSupportsTimeOfDay() bool {
	if m != nil {
		return m.SupportsTimeOfDay
	}
	return false
}

func (m *FsyncIfInfoV2) GetQualityLevelReceived() *FsyncBagQl {
	if m != nil {
		return m.QualityLevelReceived
	}
	return nil
}

func (m *FsyncIfInfoV2) GetQualityLevelDamped() *FsyncBagQl {
	if m != nil {
		return m.QualityLevelDamped
	}
	return nil
}

func (m *FsyncIfInfoV2) GetQualityLevelEffectiveInput() *FsyncBagQl {
	if m != nil {
		return m.QualityLevelEffectiveInput
	}
	return nil
}

func (m *FsyncIfInfoV2) GetQualityLevelEffectiveOutput() *FsyncBagQl {
	if m != nil {
		return m.QualityLevelEffectiveOutput
	}
	return nil
}

func (m *FsyncIfInfoV2) GetQualityLevelSelectedSource() *FsyncBagQl {
	if m != nil {
		return m.QualityLevelSelectedSource
	}
	return nil
}

func (m *FsyncIfInfoV2) GetSpaSelectionPoint() []*FsyncBagSpInfo {
	if m != nil {
		return m.SpaSelectionPoint
	}
	return nil
}

func (m *FsyncIfInfoV2) GetNodeSelectionPoint() []*FsyncBagSpInfo {
	if m != nil {
		return m.NodeSelectionPoint
	}
	return nil
}

func (m *FsyncIfInfoV2) GetEthernetPeerInformation() *FsyncBagEthPeerInfo {
	if m != nil {
		return m.EthernetPeerInformation
	}
	return nil
}

func (m *FsyncIfInfoV2) GetEsmcStatistics() *FsyncBagEthEsmcStats {
	if m != nil {
		return m.EsmcStatistics
	}
	return nil
}

func init() {
	proto.RegisterType((*FsyncIfInfoV2_KEYS)(nil), "cisco_ios_xr_ncs4k_freqsync_oper.frequency_synchronization.interface_datas.interface_data.fsync_if_info_v2_KEYS")
	proto.RegisterType((*FsyncBagClockId)(nil), "cisco_ios_xr_ncs4k_freqsync_oper.frequency_synchronization.interface_datas.interface_data.fsync_bag_clock_id")
	proto.RegisterType((*FsyncBagSourceId)(nil), "cisco_ios_xr_ncs4k_freqsync_oper.frequency_synchronization.interface_datas.interface_data.fsync_bag_source_id")
	proto.RegisterType((*FsyncBagQl)(nil), "cisco_ios_xr_ncs4k_freqsync_oper.frequency_synchronization.interface_datas.interface_data.fsync_bag_ql")
	proto.RegisterType((*FsyncBagSpInfo)(nil), "cisco_ios_xr_ncs4k_freqsync_oper.frequency_synchronization.interface_datas.interface_data.fsync_bag_sp_info")
	proto.RegisterType((*FsyncBagTimestamp)(nil), "cisco_ios_xr_ncs4k_freqsync_oper.frequency_synchronization.interface_datas.interface_data.fsync_bag_timestamp")
	proto.RegisterType((*FsyncBagEthPeerInfo)(nil), "cisco_ios_xr_ncs4k_freqsync_oper.frequency_synchronization.interface_datas.interface_data.fsync_bag_eth_peer_info")
	proto.RegisterType((*FsyncBagEthEsmcStats)(nil), "cisco_ios_xr_ncs4k_freqsync_oper.frequency_synchronization.interface_datas.interface_data.fsync_bag_eth_esmc_stats")
	proto.RegisterType((*FsyncIfInfoV2)(nil), "cisco_ios_xr_ncs4k_freqsync_oper.frequency_synchronization.interface_datas.interface_data.fsync_if_info_v2")
}

func init() { proto.RegisterFile("fsync_if_info_v2.proto", fileDescriptor_84da25c7bb20e3b5) }

var fileDescriptor_84da25c7bb20e3b5 = []byte{
	// 1245 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xc4, 0x58, 0x5f, 0x73, 0x14, 0x45,
	0x10, 0xaf, 0x35, 0x90, 0x5c, 0xfa, 0x72, 0x09, 0x19, 0x02, 0xd9, 0x80, 0x68, 0x38, 0x0a, 0xcd,
	0x83, 0x04, 0x3d, 0x10, 0x15, 0x11, 0x45, 0x12, 0x30, 0xa5, 0x02, 0xee, 0x05, 0xab, 0x78, 0x9a,
	0x1a, 0x76, 0xfb, 0x92, 0x2d, 0x76, 0x67, 0x36, 0x3b, 0xb3, 0xd1, 0xb3, 0x7c, 0xb6, 0xb4, 0xca,
	0x67, 0x2d, 0xab, 0xd4, 0x17, 0xdf, 0x2c, 0x4b, 0xbf, 0x83, 0xdf, 0xc3, 0xef, 0x62, 0x4d, 0xcf,
	0xfe, 0xb9, 0x3b, 0xc0, 0x37, 0x2f, 0x6f, 0x37, 0xbf, 0xfe, 0x75, 0xef, 0x6f, 0x7a, 0xa6, 0x7b,
	0x3a, 0x81, 0xd3, 0x03, 0x3d, 0x94, 0x21, 0x8f, 0x07, 0x3c, 0x96, 0x03, 0xc5, 0x0f, 0x7b, 0x9b,
	0x59, 0xae, 0x8c, 0x62, 0x8f, 0xc2, 0x58, 0x87, 0x8a, 0xc7, 0x4a, 0xf3, 0x2f, 0x73, 0x2e, 0x43,
	0x7d, 0xf5, 0x09, 0x1f, 0xe4, 0x78, 0x40, 0x6c, 0x95, 0x61, 0xbe, 0x69, 0x57, 0x05, 0xca, 0x70,
	0xc8, 0x2d, 0xb6, 0x9f, 0x2b, 0x19, 0x7f, 0x25, 0x4c, 0xac, 0xe4, 0x66, 0x2c, 0x0d, 0xe6, 0x03,
	0x11, 0x22, 0x8f, 0x84, 0x11, 0x7a, 0x62, 0xdd, 0xbd, 0x09, 0xa7, 0x26, 0x3f, 0xca, 0x3f, 0xde,
	0x7e, 0xd4, 0x67, 0x17, 0x61, 0xb1, 0xa1, 0x4a, 0x91, 0xa2, 0xef, 0xad, 0x7b, 0x1b, 0xf3, 0x41,
	0xa7, 0x46, 0xef, 0x89, 0x14, 0xbb, 0x37, 0x80, 0x39, 0xff, 0xc7, 0x62, 0x8f, 0x87, 0x89, 0x0a,
	0x9f, 0xf0, 0x38, 0x62, 0x0c, 0x8e, 0x49, 0x15, 0x55, 0x2e, 0xf4, 0xdb, 0x62, 0x99, 0xca, 0x8d,
	0xff, 0xc2, 0xba, 0xb7, 0xd1, 0x09, 0xe8, 0x77, 0xf7, 0xb7, 0x19, 0x38, 0xd9, 0xb8, 0x6b, 0x55,
	0xe4, 0x21, 0x5a, 0xff, 0xf3, 0xb0, 0x50, 0x2e, 0xc2, 0x44, 0x68, 0x5d, 0xc6, 0x69, 0x3b, 0xec,
	0xb6, 0x85, 0xd8, 0x25, 0x60, 0x68, 0xf6, 0x31, 0x97, 0x68, 0x78, 0x2d, 0x89, 0x82, 0xcf, 0x07,
	0xcb, 0x95, 0x65, 0xa7, 0x32, 0xb0, 0x57, 0x61, 0x49, 0xab, 0x71, 0xee, 0x0c, 0x71, 0x17, 0x09,
	0x6e, 0x88, 0xdf, 0x7a, 0xd0, 0xaa, 0xf6, 0xe1, 0x1f, 0x5b, 0xf7, 0x36, 0xda, 0xbd, 0x74, 0xf3,
	0x7f, 0xcb, 0xff, 0xe6, 0xd3, 0xc9, 0x0b, 0xe6, 0xe8, 0xd7, 0x4e, 0x93, 0xc5, 0xe3, 0x23, 0x59,
	0x5c, 0x83, 0x56, 0x66, 0x32, 0x4e, 0xf8, 0x2c, 0xe1, 0x73, 0x99, 0xc9, 0xee, 0x59, 0xd3, 0x0d,
	0x38, 0xa3, 0x85, 0xc1, 0x24, 0x89, 0x0d, 0x72, 0x11, 0x86, 0xa8, 0xf5, 0xc8, 0x6e, 0xe7, 0x88,
	0xec, 0xd7, 0x8c, 0x5b, 0x44, 0x68, 0xf6, 0xbd, 0x06, 0x2d, 0x59, 0x05, 0x6e, 0xb9, 0xc0, 0xd2,
	0x05, 0xee, 0xfe, 0xe3, 0xc1, 0x42, 0xa3, 0xf3, 0x20, 0x61, 0xaf, 0xc3, 0xca, 0x41, 0x21, 0x92,
	0xd8, 0x0c, 0x79, 0x82, 0x87, 0x98, 0x70, 0x95, 0xd9, 0xbd, 0x96, 0xc7, 0xc4, 0x4a, 0xdb, 0x27,
	0xd6, 0x74, 0x9f, 0x2c, 0xec, 0x02, 0x74, 0x1c, 0xe7, 0x0d, 0x7e, 0x28, 0x92, 0xa2, 0x3a, 0xa8,
	0x85, 0x12, 0xfc, 0xdc, 0x62, 0xec, 0x3a, 0xac, 0xb9, 0x75, 0x8f, 0xef, 0xa1, 0xc4, 0x5c, 0x8c,
	0x3a, 0xb8, 0xd3, 0x5a, 0x2d, 0x09, 0x77, 0x1b, 0xfb, 0x7f, 0xf8, 0xf6, 0x4a, 0xdf, 0x63, 0xcf,
	0xf1, 0xed, 0x91, 0x6f, 0xf7, 0x6b, 0x58, 0x1e, 0xb9, 0x84, 0x19, 0xd5, 0x01, 0x5d, 0x18, 0x4c,
	0x30, 0xb4, 0x3c, 0x9e, 0xa9, 0x58, 0x1a, 0xda, 0x5e, 0x27, 0x58, 0xac, 0xe1, 0x07, 0x16, 0x65,
	0x37, 0xe1, 0xec, 0x04, 0x91, 0x47, 0xa8, 0xc3, 0x3c, 0x76, 0x39, 0x71, 0x1b, 0x5d, 0x1b, 0x77,
	0xda, 0x6a, 0x08, 0xdd, 0xcf, 0x46, 0x4b, 0xc0, 0xc4, 0x29, 0x6a, 0x23, 0xd2, 0x8c, 0xf9, 0x30,
	0xa7, 0x31, 0x54, 0x32, 0xd2, 0xe5, 0x77, 0xab, 0x25, 0x5b, 0x87, 0xb6, 0x14, 0x52, 0x55, 0x56,
	0x57, 0x4f, 0xa3, 0x50, 0xf7, 0xaf, 0x19, 0x58, 0x6d, 0x62, 0xa2, 0xd9, 0xe7, 0x19, 0x62, 0xee,
	0xf6, 0x75, 0x0e, 0x80, 0x16, 0xda, 0x08, 0x53, 0x15, 0xe8, 0xbc, 0x45, 0xfa, 0x16, 0x60, 0x3f,
	0x78, 0xb0, 0xd4, 0xd8, 0x49, 0x0f, 0x7d, 0xa1, 0xdd, 0x93, 0x53, 0xa9, 0x82, 0x3a, 0x01, 0x41,
	0xa7, 0x16, 0xb5, 0x1b, 0xa7, 0xc8, 0xbe, 0xf3, 0xa0, 0x95, 0x08, 0x6d, 0xb8, 0xd6, 0x29, 0x5d,
	0x86, 0xe9, 0x2b, 0x9a, 0xb3, 0xdf, 0xef, 0xeb, 0x94, 0x75, 0x81, 0xc4, 0xf1, 0x22, 0xe3, 0xa1,
	0x2a, 0xa4, 0xa1, 0x0b, 0xd6, 0x09, 0xda, 0x16, 0x7c, 0x98, 0xdd, 0xb6, 0x10, 0x7b, 0x0d, 0x18,
	0x71, 0xac, 0xbb, 0x2a, 0x4c, 0x49, 0x3c, 0x4e, 0xc4, 0x13, 0xd6, 0xb2, 0xeb, 0x0c, 0xc4, 0xee,
	0x7e, 0x3f, 0x03, 0xfe, 0xf8, 0x89, 0xa1, 0x4e, 0x43, 0x3a, 0x04, 0xcd, 0x36, 0xe0, 0x04, 0xad,
	0xf0, 0x10, 0xa5, 0xd1, 0x5c, 0x63, 0x73, 0x17, 0x2d, 0xbe, 0x4d, 0x70, 0x1f, 0xa5, 0xb1, 0x85,
	0x39, 0xca, 0xcc, 0x31, 0xc4, 0xf8, 0x10, 0xa3, 0xf2, 0x8e, 0xb0, 0x86, 0x1d, 0x94, 0x16, 0xf6,
	0x0a, 0x2c, 0x91, 0x87, 0xbd, 0x1b, 0x65, 0xe8, 0x19, 0x22, 0x77, 0x2c, 0xbc, 0x63, 0x51, 0x8a,
	0xbc, 0x09, 0x27, 0x47, 0x78, 0x75, 0x60, 0xb7, 0xf1, 0xe5, 0x9a, 0x5b, 0xc7, 0xbd, 0x58, 0xc6,
	0x8d, 0x24, 0x2f, 0xca, 0xb8, 0x6e, 0xef, 0x0b, 0x16, 0xde, 0x92, 0x0f, 0x5d, 0xd8, 0x4b, 0x65,
	0x58, 0x47, 0xab, 0xc3, 0xce, 0xba, 0x34, 0x55, 0xd4, 0x3a, 0xea, 0x35, 0x58, 0x25, 0x7a, 0x2a,
	0x92, 0x81, 0xca, 0x53, 0x8c, 0x1a, 0x97, 0x39, 0x72, 0x39, 0x65, 0xcd, 0x9f, 0x56, 0xd6, 0xda,
	0xaf, 0x52, 0x5f, 0xb1, 0x39, 0xe6, 0xb9, 0xca, 0xa9, 0xcf, 0x95, 0xea, 0x2b, 0xea, 0xb6, 0x35,
	0x74, 0xff, 0x5e, 0x86, 0x13, 0x93, 0xcf, 0x22, 0xfb, 0xc6, 0x83, 0x59, 0xf7, 0x02, 0xf9, 0xbd,
	0x29, 0xde, 0xbf, 0xfa, 0x55, 0x0c, 0xca, 0xaf, 0xd3, 0xbb, 0x60, 0x1f, 0xe4, 0x2b, 0xe5, 0xbb,
	0x20, 0x52, 0x64, 0x2b, 0x70, 0xdc, 0x55, 0xf4, 0x55, 0x02, 0xdd, 0x82, 0xbd, 0x0c, 0x6d, 0xad,
	0x53, 0x8e, 0x52, 0x3c, 0x4e, 0x30, 0xf2, 0xdf, 0x5c, 0xf7, 0x36, 0x5a, 0x01, 0x68, 0x9d, 0x6e,
	0x3b, 0x84, 0xbd, 0x08, 0xf3, 0xfa, 0xa0, 0xc0, 0x24, 0xdc, 0xc7, 0xc8, 0xbf, 0x46, 0xe6, 0x06,
	0x18, 0xef, 0x81, 0xb1, 0xcc, 0x0a, 0xe3, 0xbf, 0x45, 0x9c, 0xa6, 0x07, 0xee, 0x58, 0x94, 0x9d,
	0x81, 0x56, 0x96, 0xc7, 0x2a, 0x8f, 0xcd, 0xd0, 0x7f, 0x9b, 0x92, 0x5a, 0xaf, 0xd9, 0x65, 0x58,
	0xb1, 0x35, 0xc0, 0xd5, 0x80, 0x47, 0x62, 0xc8, 0x6b, 0xde, 0x3b, 0x2e, 0xf9, 0xd6, 0x76, 0x7f,
	0xb0, 0x25, 0x86, 0x0f, 0x2a, 0x87, 0x1f, 0xbd, 0xea, 0xb3, 0x18, 0x95, 0xbb, 0xf7, 0xaf, 0x1f,
	0x49, 0xc2, 0x17, 0x2b, 0x19, 0x7d, 0x97, 0xf8, 0x0b, 0xd0, 0x89, 0x44, 0x9a, 0xc5, 0x72, 0xaf,
	0x6c, 0x9f, 0xef, 0xba, 0x57, 0xac, 0x04, 0x5d, 0x07, 0x3d, 0x0f, 0xd5, 0xda, 0x75, 0xcf, 0x1b,
	0xae, 0x37, 0x94, 0x18, 0xf5, 0xb2, 0xcb, 0xb0, 0xf2, 0x85, 0x88, 0x0d, 0x37, 0x8a, 0xe7, 0xa8,
	0x8d, 0xca, 0xcb, 0x46, 0xfb, 0x9e, 0x4b, 0x89, 0xb5, 0xed, 0xaa, 0xc0, 0x59, 0xc8, 0xe1, 0x12,
	0x30, 0x5d, 0x64, 0x76, 0x64, 0xd2, 0xbc, 0xde, 0xa1, 0x7f, 0x93, 0xce, 0x62, 0xb9, 0xb2, 0xdc,
	0xa9, 0x0c, 0x36, 0x7e, 0x4d, 0x1f, 0xc9, 0xbd, 0xff, 0xfe, 0xb8, 0xc3, 0x6e, 0x95, 0x7a, 0xf6,
	0x8b, 0x07, 0xa7, 0xc7, 0x5f, 0xf4, 0xba, 0xae, 0x3e, 0xa0, 0xcc, 0xef, 0x4d, 0x25, 0xf3, 0x07,
	0x49, 0xb0, 0x32, 0x3a, 0x3c, 0xd4, 0xf5, 0xfb, 0x93, 0x37, 0x39, 0x71, 0xd8, 0x74, 0x62, 0xe4,
	0xdf, 0x9a, 0xae, 0xba, 0xb1, 0xd1, 0x66, 0x8b, 0x24, 0xb0, 0xdf, 0x3d, 0x38, 0x37, 0xae, 0x0d,
	0x07, 0x03, 0x5b, 0x1c, 0x87, 0x58, 0xd6, 0xcc, 0x87, 0xd3, 0x15, 0x79, 0x66, 0x54, 0xe4, 0x76,
	0xa5, 0xc5, 0x15, 0xea, 0x1f, 0x1e, 0xbc, 0xf4, 0x3c, 0xb1, 0xaa, 0x30, 0x56, 0xed, 0xed, 0xe9,
	0xaa, 0x3d, 0xfb, 0x4c, 0xb5, 0xf7, 0x49, 0xcb, 0x33, 0x72, 0x3b, 0xd9, 0x18, 0xb6, 0x8e, 0x30,
	0xb7, 0xfd, 0xf1, 0xee, 0xf0, 0xb3, 0x07, 0x27, 0x75, 0x26, 0xf8, 0xe4, 0xd8, 0xb8, 0xbd, 0x3e,
	0xb3, 0xd1, 0xee, 0x25, 0xd3, 0xe9, 0x5d, 0x6e, 0x7a, 0x0d, 0x96, 0x75, 0x26, 0xfa, 0xe3, 0x73,
	0xea, 0xaf, 0x1e, 0xac, 0xd8, 0xe9, 0xfe, 0x29, 0x7d, 0x77, 0x8e, 0x40, 0x1f, 0xb3, 0x4a, 0x26,
	0x04, 0xfe, 0xe9, 0xc1, 0x5a, 0xfd, 0x27, 0x5d, 0x3d, 0xb0, 0xe6, 0x29, 0x7d, 0xc2, 0xbf, 0x4b,
	0x07, 0x9d, 0x4f, 0x45, 0xe5, 0xd8, 0xc4, 0x1c, 0xac, 0x56, 0xa2, 0x1e, 0x20, 0xe6, 0x3b, 0x8d,
	0x24, 0x7b, 0xe0, 0x4b, 0xf5, 0x98, 0x16, 0x6b, 0x13, 0x87, 0xda, 0xff, 0x88, 0x64, 0xea, 0xa9,
	0xc9, 0x6c, 0xc6, 0x44, 0x37, 0x0c, 0xf6, 0x6b, 0x29, 0x8f, 0x67, 0xe9, 0x9f, 0x07, 0x57, 0xfe,
	0x0d, 0x00, 0x00, 0xff, 0xff, 0x64, 0xfb, 0xfc, 0x26, 0x56, 0x10, 0x00, 0x00,
}
