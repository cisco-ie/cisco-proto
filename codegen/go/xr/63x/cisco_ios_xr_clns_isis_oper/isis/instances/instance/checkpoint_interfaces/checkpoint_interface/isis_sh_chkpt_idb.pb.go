/*
Copyright 2019 Cisco Systems

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: isis_sh_chkpt_idb.proto

package cisco_ios_xr_clns_isis_oper_isis_instances_instance_checkpoint_interfaces_checkpoint_interface

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type IsisShChkptIdb_KEYS struct {
	InstanceName         string   `protobuf:"bytes,1,opt,name=instance_name,json=instanceName,proto3" json:"instance_name,omitempty"`
	InterfaceName        string   `protobuf:"bytes,2,opt,name=interface_name,json=interfaceName,proto3" json:"interface_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IsisShChkptIdb_KEYS) Reset()         { *m = IsisShChkptIdb_KEYS{} }
func (m *IsisShChkptIdb_KEYS) String() string { return proto.CompactTextString(m) }
func (*IsisShChkptIdb_KEYS) ProtoMessage()    {}
func (*IsisShChkptIdb_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_62426d60f492bdfa, []int{0}
}

func (m *IsisShChkptIdb_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IsisShChkptIdb_KEYS.Unmarshal(m, b)
}
func (m *IsisShChkptIdb_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IsisShChkptIdb_KEYS.Marshal(b, m, deterministic)
}
func (m *IsisShChkptIdb_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IsisShChkptIdb_KEYS.Merge(m, src)
}
func (m *IsisShChkptIdb_KEYS) XXX_Size() int {
	return xxx_messageInfo_IsisShChkptIdb_KEYS.Size(m)
}
func (m *IsisShChkptIdb_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_IsisShChkptIdb_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_IsisShChkptIdb_KEYS proto.InternalMessageInfo

func (m *IsisShChkptIdb_KEYS) GetInstanceName() string {
	if m != nil {
		return m.InstanceName
	}
	return ""
}

func (m *IsisShChkptIdb_KEYS) GetInterfaceName() string {
	if m != nil {
		return m.InterfaceName
	}
	return ""
}

type IsisShChkptIdb struct {
	CheckpointObjectId        uint32   `protobuf:"varint,50,opt,name=checkpoint_object_id,json=checkpointObjectId,proto3" json:"checkpoint_object_id,omitempty"`
	InterfaceNameXr           string   `protobuf:"bytes,51,opt,name=interface_name_xr,json=interfaceNameXr,proto3" json:"interface_name_xr,omitempty"`
	CheckpointInterfaceHandle string   `protobuf:"bytes,52,opt,name=checkpoint_interface_handle,json=checkpointInterfaceHandle,proto3" json:"checkpoint_interface_handle,omitempty"`
	LocalCircuitNumber        uint32   `protobuf:"varint,53,opt,name=local_circuit_number,json=localCircuitNumber,proto3" json:"local_circuit_number,omitempty"`
	DisAreas                  string   `protobuf:"bytes,54,opt,name=dis_areas,json=disAreas,proto3" json:"dis_areas,omitempty"`
	HasAdjacency              bool     `protobuf:"varint,55,opt,name=has_adjacency,json=hasAdjacency,proto3" json:"has_adjacency,omitempty"`
	LocalSnpa                 string   `protobuf:"bytes,56,opt,name=local_snpa,json=localSnpa,proto3" json:"local_snpa,omitempty"`
	HasJoinedMcastGroup       bool     `protobuf:"varint,57,opt,name=has_joined_mcast_group,json=hasJoinedMcastGroup,proto3" json:"has_joined_mcast_group,omitempty"`
	HasAchievedLdpSync        bool     `protobuf:"varint,58,opt,name=has_achieved_ldp_sync,json=hasAchievedLdpSync,proto3" json:"has_achieved_ldp_sync,omitempty"`
	HasAchievedLdPv6Sync      bool     `protobuf:"varint,59,opt,name=has_achieved_ld_pv6_sync,json=hasAchievedLdPv6Sync,proto3" json:"has_achieved_ld_pv6_sync,omitempty"`
	XXX_NoUnkeyedLiteral      struct{} `json:"-"`
	XXX_unrecognized          []byte   `json:"-"`
	XXX_sizecache             int32    `json:"-"`
}

func (m *IsisShChkptIdb) Reset()         { *m = IsisShChkptIdb{} }
func (m *IsisShChkptIdb) String() string { return proto.CompactTextString(m) }
func (*IsisShChkptIdb) ProtoMessage()    {}
func (*IsisShChkptIdb) Descriptor() ([]byte, []int) {
	return fileDescriptor_62426d60f492bdfa, []int{1}
}

func (m *IsisShChkptIdb) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IsisShChkptIdb.Unmarshal(m, b)
}
func (m *IsisShChkptIdb) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IsisShChkptIdb.Marshal(b, m, deterministic)
}
func (m *IsisShChkptIdb) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IsisShChkptIdb.Merge(m, src)
}
func (m *IsisShChkptIdb) XXX_Size() int {
	return xxx_messageInfo_IsisShChkptIdb.Size(m)
}
func (m *IsisShChkptIdb) XXX_DiscardUnknown() {
	xxx_messageInfo_IsisShChkptIdb.DiscardUnknown(m)
}

var xxx_messageInfo_IsisShChkptIdb proto.InternalMessageInfo

func (m *IsisShChkptIdb) GetCheckpointObjectId() uint32 {
	if m != nil {
		return m.CheckpointObjectId
	}
	return 0
}

func (m *IsisShChkptIdb) GetInterfaceNameXr() string {
	if m != nil {
		return m.InterfaceNameXr
	}
	return ""
}

func (m *IsisShChkptIdb) GetCheckpointInterfaceHandle() string {
	if m != nil {
		return m.CheckpointInterfaceHandle
	}
	return ""
}

func (m *IsisShChkptIdb) GetLocalCircuitNumber() uint32 {
	if m != nil {
		return m.LocalCircuitNumber
	}
	return 0
}

func (m *IsisShChkptIdb) GetDisAreas() string {
	if m != nil {
		return m.DisAreas
	}
	return ""
}

func (m *IsisShChkptIdb) GetHasAdjacency() bool {
	if m != nil {
		return m.HasAdjacency
	}
	return false
}

func (m *IsisShChkptIdb) GetLocalSnpa() string {
	if m != nil {
		return m.LocalSnpa
	}
	return ""
}

func (m *IsisShChkptIdb) GetHasJoinedMcastGroup() bool {
	if m != nil {
		return m.HasJoinedMcastGroup
	}
	return false
}

func (m *IsisShChkptIdb) GetHasAchievedLdpSync() bool {
	if m != nil {
		return m.HasAchievedLdpSync
	}
	return false
}

func (m *IsisShChkptIdb) GetHasAchievedLdPv6Sync() bool {
	if m != nil {
		return m.HasAchievedLdPv6Sync
	}
	return false
}

func init() {
	proto.RegisterType((*IsisShChkptIdb_KEYS)(nil), "cisco_ios_xr_clns_isis_oper.isis.instances.instance.checkpoint_interfaces.checkpoint_interface.isis_sh_chkpt_idb_KEYS")
	proto.RegisterType((*IsisShChkptIdb)(nil), "cisco_ios_xr_clns_isis_oper.isis.instances.instance.checkpoint_interfaces.checkpoint_interface.isis_sh_chkpt_idb")
}

func init() { proto.RegisterFile("isis_sh_chkpt_idb.proto", fileDescriptor_62426d60f492bdfa) }

var fileDescriptor_62426d60f492bdfa = []byte{
	// 417 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x92, 0x6d, 0x6b, 0x13, 0x41,
	0x10, 0xc7, 0x89, 0x82, 0x34, 0x4b, 0xa3, 0x74, 0xad, 0x75, 0xa5, 0x08, 0xa1, 0x22, 0x04, 0x5f,
	0x04, 0x35, 0x1a, 0x9f, 0x40, 0x28, 0x22, 0x5a, 0x1f, 0xaa, 0x24, 0x6f, 0xf4, 0x8d, 0xc3, 0x66,
	0x76, 0x75, 0x37, 0xbd, 0xec, 0x2e, 0x3b, 0x97, 0xd0, 0x7c, 0x5f, 0x3f, 0x88, 0xec, 0x9c, 0x69,
	0x8c, 0xcd, 0xbb, 0xb9, 0xf9, 0xfd, 0x1f, 0xe6, 0x8e, 0x13, 0xb7, 0x3d, 0x79, 0x02, 0x72, 0x80,
	0xee, 0x2c, 0xd5, 0xe0, 0xcd, 0xa4, 0x9f, 0x72, 0xac, 0xa3, 0xfc, 0x81, 0x9e, 0x30, 0x82, 0x8f,
	0x04, 0xe7, 0x19, 0xb0, 0x0a, 0x04, 0x2c, 0x8d, 0xc9, 0xe6, 0x7e, 0x99, 0xfa, 0x3e, 0x50, 0xad,
	0x03, 0xda, 0xf5, 0xd4, 0x47, 0x67, 0xf1, 0x2c, 0x45, 0x1f, 0x6a, 0xf0, 0xa1, 0xb6, 0xf9, 0xa7,
	0x2e, 0x78, 0xdb, 0xf6, 0xc8, 0x88, 0x83, 0x4b, 0xd5, 0xf0, 0xf1, 0xed, 0xf7, 0xb1, 0xbc, 0x27,
	0x3a, 0xab, 0x40, 0x08, 0x7a, 0x66, 0x55, 0xab, 0xdb, 0xea, 0xb5, 0x47, 0xbb, 0xab, 0xe5, 0xa9,
	0x9e, 0x59, 0x79, 0x5f, 0x5c, 0xbf, 0xc8, 0x6a, 0x54, 0x57, 0x58, 0xd5, 0xb9, 0xd8, 0x16, 0xd9,
	0xd1, 0xef, 0xab, 0x62, 0xef, 0x52, 0x8d, 0x7c, 0x28, 0xf6, 0xff, 0xb9, 0x29, 0x4e, 0xa6, 0x16,
	0x0b, 0x50, 0x8f, 0xbb, 0xad, 0x5e, 0x67, 0x24, 0xd7, 0xec, 0x0b, 0xa3, 0x13, 0x23, 0x1f, 0x88,
	0xbd, 0xcd, 0x3a, 0x38, 0xcf, 0x6a, 0xc0, 0x8d, 0x37, 0x36, 0x1a, 0xbf, 0x65, 0xf9, 0x5a, 0x1c,
	0x6e, 0x7b, 0x63, 0x70, 0x3a, 0x98, 0xca, 0xaa, 0x27, 0xec, 0xba, 0xb3, 0x96, 0x9c, 0xac, 0x14,
	0xef, 0x59, 0x50, 0xae, 0xab, 0x22, 0xea, 0x0a, 0xd0, 0x67, 0x9c, 0xfb, 0x1a, 0xc2, 0x7c, 0x36,
	0xb1, 0x59, 0x3d, 0x6d, 0xae, 0x63, 0xf6, 0xa6, 0x41, 0xa7, 0x4c, 0xe4, 0xa1, 0x68, 0x1b, 0x4f,
	0xa0, 0xb3, 0xd5, 0xa4, 0x86, 0x9c, 0xbf, 0x63, 0x3c, 0x1d, 0x97, 0xe7, 0xf2, 0x39, 0x9d, 0x26,
	0xd0, 0x66, 0xaa, 0xd1, 0x06, 0x5c, 0xaa, 0x67, 0xdd, 0x56, 0x6f, 0x67, 0xb4, 0xeb, 0x34, 0x1d,
	0xaf, 0x76, 0xf2, 0xae, 0x10, 0x4d, 0x27, 0x85, 0xa4, 0xd5, 0x73, 0x8e, 0x68, 0xf3, 0x66, 0x1c,
	0x92, 0x96, 0x03, 0x71, 0x50, 0x32, 0xa6, 0xd1, 0x07, 0x6b, 0x60, 0x86, 0x9a, 0x6a, 0xf8, 0x95,
	0xe3, 0x3c, 0xa9, 0x17, 0x1c, 0x76, 0xd3, 0x69, 0xfa, 0xc0, 0xf0, 0x73, 0x61, 0xef, 0x0a, 0x92,
	0x8f, 0xc4, 0x2d, 0x2e, 0x46, 0xe7, 0xed, 0xc2, 0x1a, 0xa8, 0x4c, 0x02, 0x5a, 0x06, 0x54, 0x2f,
	0xd9, 0x23, 0xcb, 0x01, 0x7f, 0xd9, 0x27, 0x93, 0xc6, 0xcb, 0x80, 0x72, 0x28, 0xd4, 0x7f, 0x16,
	0x48, 0x8b, 0x61, 0xe3, 0x7a, 0xc5, 0xae, 0xfd, 0x0d, 0xd7, 0xd7, 0xc5, 0xb0, 0xf8, 0x26, 0xd7,
	0xf8, 0x9f, 0x1d, 0xfc, 0x09, 0x00, 0x00, 0xff, 0xff, 0x7a, 0xc4, 0x37, 0x77, 0xce, 0x02, 0x00,
	0x00,
}
