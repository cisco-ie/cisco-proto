/*
Copyright 2019 Cisco Systems

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: rcmd_show_ldp_rlfa_event.proto

package cisco_ios_xr_infra_rcmd_oper_rcmd_ldp_remote_lfa_summaries_remote_lfa_summary

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type RcmdShowLdpRlfaEvent_KEYS struct {
	EventId              uint32   `protobuf:"varint,1,opt,name=event_id,json=eventId,proto3" json:"event_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RcmdShowLdpRlfaEvent_KEYS) Reset()         { *m = RcmdShowLdpRlfaEvent_KEYS{} }
func (m *RcmdShowLdpRlfaEvent_KEYS) String() string { return proto.CompactTextString(m) }
func (*RcmdShowLdpRlfaEvent_KEYS) ProtoMessage()    {}
func (*RcmdShowLdpRlfaEvent_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_169a6a3f6deeb808, []int{0}
}

func (m *RcmdShowLdpRlfaEvent_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RcmdShowLdpRlfaEvent_KEYS.Unmarshal(m, b)
}
func (m *RcmdShowLdpRlfaEvent_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RcmdShowLdpRlfaEvent_KEYS.Marshal(b, m, deterministic)
}
func (m *RcmdShowLdpRlfaEvent_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RcmdShowLdpRlfaEvent_KEYS.Merge(m, src)
}
func (m *RcmdShowLdpRlfaEvent_KEYS) XXX_Size() int {
	return xxx_messageInfo_RcmdShowLdpRlfaEvent_KEYS.Size(m)
}
func (m *RcmdShowLdpRlfaEvent_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_RcmdShowLdpRlfaEvent_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_RcmdShowLdpRlfaEvent_KEYS proto.InternalMessageInfo

func (m *RcmdShowLdpRlfaEvent_KEYS) GetEventId() uint32 {
	if m != nil {
		return m.EventId
	}
	return 0
}

type RcmdShowLdpRlfaStat struct {
	SessionState         string   `protobuf:"bytes,1,opt,name=session_state,json=sessionState,proto3" json:"session_state,omitempty"`
	SessionCount         uint32   `protobuf:"varint,2,opt,name=session_count,json=sessionCount,proto3" json:"session_count,omitempty"`
	RouteCount           uint32   `protobuf:"varint,3,opt,name=route_count,json=routeCount,proto3" json:"route_count,omitempty"`
	PathCount            uint32   `protobuf:"varint,4,opt,name=path_count,json=pathCount,proto3" json:"path_count,omitempty"`
	RemoteLabelCount     uint32   `protobuf:"varint,5,opt,name=remote_label_count,json=remoteLabelCount,proto3" json:"remote_label_count,omitempty"`
	ProtectedRouteCount  uint32   `protobuf:"varint,6,opt,name=protected_route_count,json=protectedRouteCount,proto3" json:"protected_route_count,omitempty"`
	ProtectedPathCount   uint32   `protobuf:"varint,7,opt,name=protected_path_count,json=protectedPathCount,proto3" json:"protected_path_count,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RcmdShowLdpRlfaStat) Reset()         { *m = RcmdShowLdpRlfaStat{} }
func (m *RcmdShowLdpRlfaStat) String() string { return proto.CompactTextString(m) }
func (*RcmdShowLdpRlfaStat) ProtoMessage()    {}
func (*RcmdShowLdpRlfaStat) Descriptor() ([]byte, []int) {
	return fileDescriptor_169a6a3f6deeb808, []int{1}
}

func (m *RcmdShowLdpRlfaStat) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RcmdShowLdpRlfaStat.Unmarshal(m, b)
}
func (m *RcmdShowLdpRlfaStat) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RcmdShowLdpRlfaStat.Marshal(b, m, deterministic)
}
func (m *RcmdShowLdpRlfaStat) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RcmdShowLdpRlfaStat.Merge(m, src)
}
func (m *RcmdShowLdpRlfaStat) XXX_Size() int {
	return xxx_messageInfo_RcmdShowLdpRlfaStat.Size(m)
}
func (m *RcmdShowLdpRlfaStat) XXX_DiscardUnknown() {
	xxx_messageInfo_RcmdShowLdpRlfaStat.DiscardUnknown(m)
}

var xxx_messageInfo_RcmdShowLdpRlfaStat proto.InternalMessageInfo

func (m *RcmdShowLdpRlfaStat) GetSessionState() string {
	if m != nil {
		return m.SessionState
	}
	return ""
}

func (m *RcmdShowLdpRlfaStat) GetSessionCount() uint32 {
	if m != nil {
		return m.SessionCount
	}
	return 0
}

func (m *RcmdShowLdpRlfaStat) GetRouteCount() uint32 {
	if m != nil {
		return m.RouteCount
	}
	return 0
}

func (m *RcmdShowLdpRlfaStat) GetPathCount() uint32 {
	if m != nil {
		return m.PathCount
	}
	return 0
}

func (m *RcmdShowLdpRlfaStat) GetRemoteLabelCount() uint32 {
	if m != nil {
		return m.RemoteLabelCount
	}
	return 0
}

func (m *RcmdShowLdpRlfaStat) GetProtectedRouteCount() uint32 {
	if m != nil {
		return m.ProtectedRouteCount
	}
	return 0
}

func (m *RcmdShowLdpRlfaStat) GetProtectedPathCount() uint32 {
	if m != nil {
		return m.ProtectedPathCount
	}
	return 0
}

type RcmdShowLdpRlfaPqNode struct {
	RemoteNodeId         string   `protobuf:"bytes,1,opt,name=remote_node_id,json=remoteNodeId,proto3" json:"remote_node_id,omitempty"`
	LsrId                string   `protobuf:"bytes,2,opt,name=lsr_id,json=lsrId,proto3" json:"lsr_id,omitempty"`
	TransportAddress     string   `protobuf:"bytes,3,opt,name=transport_address,json=transportAddress,proto3" json:"transport_address,omitempty"`
	InUseTime            string   `protobuf:"bytes,4,opt,name=in_use_time,json=inUseTime,proto3" json:"in_use_time,omitempty"`
	SessionState         string   `protobuf:"bytes,5,opt,name=session_state,json=sessionState,proto3" json:"session_state,omitempty"`
	RouteCount           uint32   `protobuf:"varint,6,opt,name=route_count,json=routeCount,proto3" json:"route_count,omitempty"`
	PathCount            uint32   `protobuf:"varint,7,opt,name=path_count,json=pathCount,proto3" json:"path_count,omitempty"`
	RemoteLabelCount     uint32   `protobuf:"varint,8,opt,name=remote_label_count,json=remoteLabelCount,proto3" json:"remote_label_count,omitempty"`
	ProtectedRouteCount  uint32   `protobuf:"varint,9,opt,name=protected_route_count,json=protectedRouteCount,proto3" json:"protected_route_count,omitempty"`
	ProtectedPathCount   uint32   `protobuf:"varint,10,opt,name=protected_path_count,json=protectedPathCount,proto3" json:"protected_path_count,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RcmdShowLdpRlfaPqNode) Reset()         { *m = RcmdShowLdpRlfaPqNode{} }
func (m *RcmdShowLdpRlfaPqNode) String() string { return proto.CompactTextString(m) }
func (*RcmdShowLdpRlfaPqNode) ProtoMessage()    {}
func (*RcmdShowLdpRlfaPqNode) Descriptor() ([]byte, []int) {
	return fileDescriptor_169a6a3f6deeb808, []int{2}
}

func (m *RcmdShowLdpRlfaPqNode) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RcmdShowLdpRlfaPqNode.Unmarshal(m, b)
}
func (m *RcmdShowLdpRlfaPqNode) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RcmdShowLdpRlfaPqNode.Marshal(b, m, deterministic)
}
func (m *RcmdShowLdpRlfaPqNode) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RcmdShowLdpRlfaPqNode.Merge(m, src)
}
func (m *RcmdShowLdpRlfaPqNode) XXX_Size() int {
	return xxx_messageInfo_RcmdShowLdpRlfaPqNode.Size(m)
}
func (m *RcmdShowLdpRlfaPqNode) XXX_DiscardUnknown() {
	xxx_messageInfo_RcmdShowLdpRlfaPqNode.DiscardUnknown(m)
}

var xxx_messageInfo_RcmdShowLdpRlfaPqNode proto.InternalMessageInfo

func (m *RcmdShowLdpRlfaPqNode) GetRemoteNodeId() string {
	if m != nil {
		return m.RemoteNodeId
	}
	return ""
}

func (m *RcmdShowLdpRlfaPqNode) GetLsrId() string {
	if m != nil {
		return m.LsrId
	}
	return ""
}

func (m *RcmdShowLdpRlfaPqNode) GetTransportAddress() string {
	if m != nil {
		return m.TransportAddress
	}
	return ""
}

func (m *RcmdShowLdpRlfaPqNode) GetInUseTime() string {
	if m != nil {
		return m.InUseTime
	}
	return ""
}

func (m *RcmdShowLdpRlfaPqNode) GetSessionState() string {
	if m != nil {
		return m.SessionState
	}
	return ""
}

func (m *RcmdShowLdpRlfaPqNode) GetRouteCount() uint32 {
	if m != nil {
		return m.RouteCount
	}
	return 0
}

func (m *RcmdShowLdpRlfaPqNode) GetPathCount() uint32 {
	if m != nil {
		return m.PathCount
	}
	return 0
}

func (m *RcmdShowLdpRlfaPqNode) GetRemoteLabelCount() uint32 {
	if m != nil {
		return m.RemoteLabelCount
	}
	return 0
}

func (m *RcmdShowLdpRlfaPqNode) GetProtectedRouteCount() uint32 {
	if m != nil {
		return m.ProtectedRouteCount
	}
	return 0
}

func (m *RcmdShowLdpRlfaPqNode) GetProtectedPathCount() uint32 {
	if m != nil {
		return m.ProtectedPathCount
	}
	return 0
}

type RcmdShowLdpRlfaLog struct {
	LogTime              string   `protobuf:"bytes,1,opt,name=log_time,json=logTime,proto3" json:"log_time,omitempty"`
	LabelCoverageState   string   `protobuf:"bytes,2,opt,name=label_coverage_state,json=labelCoverageState,proto3" json:"label_coverage_state,omitempty"`
	RouteCount           uint32   `protobuf:"varint,3,opt,name=route_count,json=routeCount,proto3" json:"route_count,omitempty"`
	RemoteLabelCount     uint32   `protobuf:"varint,4,opt,name=remote_label_count,json=remoteLabelCount,proto3" json:"remote_label_count,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RcmdShowLdpRlfaLog) Reset()         { *m = RcmdShowLdpRlfaLog{} }
func (m *RcmdShowLdpRlfaLog) String() string { return proto.CompactTextString(m) }
func (*RcmdShowLdpRlfaLog) ProtoMessage()    {}
func (*RcmdShowLdpRlfaLog) Descriptor() ([]byte, []int) {
	return fileDescriptor_169a6a3f6deeb808, []int{3}
}

func (m *RcmdShowLdpRlfaLog) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RcmdShowLdpRlfaLog.Unmarshal(m, b)
}
func (m *RcmdShowLdpRlfaLog) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RcmdShowLdpRlfaLog.Marshal(b, m, deterministic)
}
func (m *RcmdShowLdpRlfaLog) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RcmdShowLdpRlfaLog.Merge(m, src)
}
func (m *RcmdShowLdpRlfaLog) XXX_Size() int {
	return xxx_messageInfo_RcmdShowLdpRlfaLog.Size(m)
}
func (m *RcmdShowLdpRlfaLog) XXX_DiscardUnknown() {
	xxx_messageInfo_RcmdShowLdpRlfaLog.DiscardUnknown(m)
}

var xxx_messageInfo_RcmdShowLdpRlfaLog proto.InternalMessageInfo

func (m *RcmdShowLdpRlfaLog) GetLogTime() string {
	if m != nil {
		return m.LogTime
	}
	return ""
}

func (m *RcmdShowLdpRlfaLog) GetLabelCoverageState() string {
	if m != nil {
		return m.LabelCoverageState
	}
	return ""
}

func (m *RcmdShowLdpRlfaLog) GetRouteCount() uint32 {
	if m != nil {
		return m.RouteCount
	}
	return 0
}

func (m *RcmdShowLdpRlfaLog) GetRemoteLabelCount() uint32 {
	if m != nil {
		return m.RemoteLabelCount
	}
	return 0
}

type RcmdShowLdpRlfaEvent struct {
	EventIdXr            uint32                   `protobuf:"varint,50,opt,name=event_id_xr,json=eventIdXr,proto3" json:"event_id_xr,omitempty"`
	EndOfCalculationTime string                   `protobuf:"bytes,51,opt,name=end_of_calculation_time,json=endOfCalculationTime,proto3" json:"end_of_calculation_time,omitempty"`
	IgpProtocol          string                   `protobuf:"bytes,52,opt,name=igp_protocol,json=igpProtocol,proto3" json:"igp_protocol,omitempty"`
	ProcessName          string                   `protobuf:"bytes,53,opt,name=process_name,json=processName,proto3" json:"process_name,omitempty"`
	IpfrrEventId         uint32                   `protobuf:"varint,54,opt,name=ipfrr_event_id,json=ipfrrEventId,proto3" json:"ipfrr_event_id,omitempty"`
	BelowThreshold       bool                     `protobuf:"varint,55,opt,name=below_threshold,json=belowThreshold,proto3" json:"below_threshold,omitempty"`
	SessionStatistic     []*RcmdShowLdpRlfaStat   `protobuf:"bytes,56,rep,name=session_statistic,json=sessionStatistic,proto3" json:"session_statistic,omitempty"`
	RemoteNode           []*RcmdShowLdpRlfaPqNode `protobuf:"bytes,57,rep,name=remote_node,json=remoteNode,proto3" json:"remote_node,omitempty"`
	Logs                 []*RcmdShowLdpRlfaLog    `protobuf:"bytes,58,rep,name=logs,proto3" json:"logs,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *RcmdShowLdpRlfaEvent) Reset()         { *m = RcmdShowLdpRlfaEvent{} }
func (m *RcmdShowLdpRlfaEvent) String() string { return proto.CompactTextString(m) }
func (*RcmdShowLdpRlfaEvent) ProtoMessage()    {}
func (*RcmdShowLdpRlfaEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor_169a6a3f6deeb808, []int{4}
}

func (m *RcmdShowLdpRlfaEvent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RcmdShowLdpRlfaEvent.Unmarshal(m, b)
}
func (m *RcmdShowLdpRlfaEvent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RcmdShowLdpRlfaEvent.Marshal(b, m, deterministic)
}
func (m *RcmdShowLdpRlfaEvent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RcmdShowLdpRlfaEvent.Merge(m, src)
}
func (m *RcmdShowLdpRlfaEvent) XXX_Size() int {
	return xxx_messageInfo_RcmdShowLdpRlfaEvent.Size(m)
}
func (m *RcmdShowLdpRlfaEvent) XXX_DiscardUnknown() {
	xxx_messageInfo_RcmdShowLdpRlfaEvent.DiscardUnknown(m)
}

var xxx_messageInfo_RcmdShowLdpRlfaEvent proto.InternalMessageInfo

func (m *RcmdShowLdpRlfaEvent) GetEventIdXr() uint32 {
	if m != nil {
		return m.EventIdXr
	}
	return 0
}

func (m *RcmdShowLdpRlfaEvent) GetEndOfCalculationTime() string {
	if m != nil {
		return m.EndOfCalculationTime
	}
	return ""
}

func (m *RcmdShowLdpRlfaEvent) GetIgpProtocol() string {
	if m != nil {
		return m.IgpProtocol
	}
	return ""
}

func (m *RcmdShowLdpRlfaEvent) GetProcessName() string {
	if m != nil {
		return m.ProcessName
	}
	return ""
}

func (m *RcmdShowLdpRlfaEvent) GetIpfrrEventId() uint32 {
	if m != nil {
		return m.IpfrrEventId
	}
	return 0
}

func (m *RcmdShowLdpRlfaEvent) GetBelowThreshold() bool {
	if m != nil {
		return m.BelowThreshold
	}
	return false
}

func (m *RcmdShowLdpRlfaEvent) GetSessionStatistic() []*RcmdShowLdpRlfaStat {
	if m != nil {
		return m.SessionStatistic
	}
	return nil
}

func (m *RcmdShowLdpRlfaEvent) GetRemoteNode() []*RcmdShowLdpRlfaPqNode {
	if m != nil {
		return m.RemoteNode
	}
	return nil
}

func (m *RcmdShowLdpRlfaEvent) GetLogs() []*RcmdShowLdpRlfaLog {
	if m != nil {
		return m.Logs
	}
	return nil
}

func init() {
	proto.RegisterType((*RcmdShowLdpRlfaEvent_KEYS)(nil), "cisco_ios_xr_infra_rcmd_oper.rcmd.ldp.remote_lfa_summaries.remote_lfa_summary.rcmd_show_ldp_rlfa_event_KEYS")
	proto.RegisterType((*RcmdShowLdpRlfaStat)(nil), "cisco_ios_xr_infra_rcmd_oper.rcmd.ldp.remote_lfa_summaries.remote_lfa_summary.rcmd_show_ldp_rlfa_stat")
	proto.RegisterType((*RcmdShowLdpRlfaPqNode)(nil), "cisco_ios_xr_infra_rcmd_oper.rcmd.ldp.remote_lfa_summaries.remote_lfa_summary.rcmd_show_ldp_rlfa_pq_node")
	proto.RegisterType((*RcmdShowLdpRlfaLog)(nil), "cisco_ios_xr_infra_rcmd_oper.rcmd.ldp.remote_lfa_summaries.remote_lfa_summary.rcmd_show_ldp_rlfa_log")
	proto.RegisterType((*RcmdShowLdpRlfaEvent)(nil), "cisco_ios_xr_infra_rcmd_oper.rcmd.ldp.remote_lfa_summaries.remote_lfa_summary.rcmd_show_ldp_rlfa_event")
}

func init() { proto.RegisterFile("rcmd_show_ldp_rlfa_event.proto", fileDescriptor_169a6a3f6deeb808) }

var fileDescriptor_169a6a3f6deeb808 = []byte{
	// 667 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x54, 0xdd, 0x4e, 0x14, 0x4d,
	0x10, 0xcd, 0x02, 0xbb, 0xcb, 0xd6, 0x02, 0x1f, 0xf4, 0x07, 0x32, 0x9a, 0x80, 0xb8, 0x9a, 0x48,
	0xa2, 0xd9, 0x10, 0x10, 0x7f, 0xb8, 0x33, 0x84, 0x0b, 0xa2, 0x22, 0x19, 0x30, 0xd1, 0xab, 0xce,
	0x30, 0x5d, 0x3b, 0xdb, 0x49, 0xcf, 0xf4, 0xd8, 0xdd, 0xcb, 0xcf, 0x2b, 0x78, 0xeb, 0x03, 0x78,
	0xe3, 0x23, 0x98, 0xf8, 0x7a, 0x66, 0xaa, 0x67, 0x7f, 0x22, 0xbb, 0x51, 0x12, 0xb9, 0x9b, 0x39,
	0xe7, 0x54, 0xba, 0xfa, 0x9c, 0xae, 0x82, 0x75, 0x13, 0xa7, 0x82, 0xdb, 0xae, 0xbe, 0xe0, 0x4a,
	0xe4, 0xdc, 0xa8, 0x4e, 0xc4, 0xf1, 0x1c, 0x33, 0xd7, 0xce, 0x8d, 0x76, 0x9a, 0xbd, 0x8b, 0xa5,
	0x8d, 0x35, 0x97, 0xda, 0xf2, 0x4b, 0xc3, 0x65, 0xd6, 0x31, 0x11, 0xa7, 0x12, 0x9d, 0xa3, 0x69,
	0x17, 0x5f, 0x6d, 0x25, 0xf2, 0xb6, 0xc1, 0x54, 0x3b, 0xe4, 0x45, 0xb5, 0xed, 0xa5, 0x69, 0x64,
	0x24, 0xda, 0xeb, 0xe0, 0x55, 0x6b, 0x0f, 0xd6, 0x26, 0x1d, 0xc8, 0xdf, 0x1c, 0x7c, 0x3a, 0x61,
	0x77, 0x61, 0xd6, 0xff, 0x49, 0x11, 0x54, 0x36, 0x2a, 0x9b, 0xf3, 0x61, 0x9d, 0xfe, 0x0f, 0x45,
	0xeb, 0xe7, 0x14, 0xac, 0x8e, 0x29, 0xb6, 0x2e, 0x72, 0xec, 0x21, 0xcc, 0x5b, 0xb4, 0x56, 0xea,
	0x8c, 0xfe, 0x91, 0x6a, 0x1b, 0xe1, 0x5c, 0x09, 0x9e, 0x14, 0xd8, 0xa8, 0x28, 0xd6, 0xbd, 0xcc,
	0x05, 0x53, 0x74, 0x40, 0x5f, 0xb4, 0x5f, 0x60, 0xec, 0x3e, 0x34, 0x8d, 0xee, 0x39, 0x2c, 0x25,
	0xd3, 0x24, 0x01, 0x82, 0xbc, 0x60, 0x0d, 0x20, 0x8f, 0x5c, 0xb7, 0xe4, 0x67, 0x88, 0x6f, 0x14,
	0x88, 0xa7, 0x9f, 0x02, 0xeb, 0xdf, 0x3b, 0x3a, 0x43, 0x55, 0xca, 0xaa, 0x24, 0x5b, 0xf4, 0xcc,
	0xdb, 0x82, 0xf0, 0xea, 0x6d, 0x58, 0x29, 0x7c, 0xc6, 0xd8, 0xa1, 0xe0, 0xa3, 0xe7, 0xd6, 0xa8,
	0xe0, 0xff, 0x01, 0x19, 0x0e, 0x1b, 0xd8, 0x82, 0xe5, 0x61, 0xcd, 0x48, 0x2b, 0x75, 0x2a, 0x61,
	0x03, 0xee, 0xb8, 0xdf, 0x53, 0xeb, 0xdb, 0x34, 0xdc, 0x1b, 0xe3, 0x5c, 0xfe, 0x99, 0x67, 0x5a,
	0x20, 0x7b, 0x04, 0x0b, 0x65, 0xcb, 0xc5, 0x6f, 0xdf, 0xf9, 0x46, 0x38, 0xe7, 0xd1, 0x23, 0x2d,
	0xf0, 0x50, 0xb0, 0x15, 0xa8, 0x29, 0x6b, 0x0a, 0x76, 0x8a, 0xd8, 0xaa, 0xb2, 0xe6, 0x50, 0xb0,
	0x27, 0xb0, 0xe4, 0x4c, 0x94, 0xd9, 0x5c, 0x1b, 0xc7, 0x23, 0x21, 0x0c, 0x5a, 0x4b, 0xae, 0x35,
	0xc2, 0xc5, 0x01, 0xf1, 0xda, 0xe3, 0x6c, 0x1d, 0x9a, 0x32, 0xe3, 0x3d, 0x8b, 0xdc, 0xc9, 0x14,
	0xc9, 0xbc, 0x46, 0xd8, 0x90, 0xd9, 0x07, 0x8b, 0xa7, 0x32, 0xc5, 0xeb, 0x31, 0x56, 0xc7, 0xc4,
	0xf8, 0x5b, 0x42, 0xb5, 0x3f, 0x24, 0x54, 0xff, 0xbb, 0x84, 0x66, 0x6f, 0x9a, 0x50, 0xe3, 0xe6,
	0x09, 0xc1, 0xc4, 0x84, 0x7e, 0x54, 0xe0, 0xce, 0x98, 0x84, 0x94, 0x4e, 0x8a, 0x89, 0x50, 0x3a,
	0xf1, 0x86, 0xf9, 0x5c, 0xea, 0x4a, 0x27, 0x64, 0xd7, 0x16, 0x2c, 0xf7, 0xaf, 0x70, 0x8e, 0x26,
	0x4a, 0xb0, 0x74, 0xcd, 0x07, 0xc4, 0x94, 0xbf, 0x85, 0xa7, 0xc6, 0x7a, 0x77, 0xfd, 0x75, 0x8f,
	0x37, 0x67, 0x66, 0xbc, 0x39, 0xad, 0xef, 0x55, 0x08, 0x26, 0xcd, 0x73, 0x11, 0x76, 0x7f, 0x94,
	0xf9, 0xa5, 0x09, 0xb6, 0x7d, 0x0e, 0xe5, 0x34, 0x7f, 0x34, 0x6c, 0x17, 0x56, 0x31, 0x13, 0x5c,
	0x77, 0x78, 0x1c, 0xa9, 0xb8, 0xa7, 0x22, 0x57, 0xe4, 0x4e, 0xf7, 0xdc, 0xa1, 0x0b, 0x2c, 0x63,
	0x26, 0xde, 0x77, 0xf6, 0x87, 0x24, 0x5d, 0xfa, 0x01, 0xcc, 0xc9, 0x24, 0xe7, 0xb4, 0x9e, 0x62,
	0xad, 0x82, 0x67, 0xa4, 0x6d, 0xca, 0x24, 0x3f, 0x2e, 0xa1, 0x42, 0x92, 0x1b, 0x1d, 0xa3, 0xb5,
	0x3c, 0x8b, 0x52, 0x0c, 0x76, 0xbd, 0xa4, 0xc4, 0x8e, 0xa2, 0x94, 0xde, 0xbc, 0xcc, 0x3b, 0xc6,
	0xf0, 0xc1, 0xb6, 0x79, 0xee, 0x97, 0x01, 0xa1, 0x07, 0xbe, 0x49, 0xf6, 0x18, 0xfe, 0x3b, 0x43,
	0xa5, 0x2f, 0xb8, 0xeb, 0x1a, 0xb4, 0x5d, 0xad, 0x44, 0xf0, 0x62, 0xa3, 0xb2, 0x39, 0x1b, 0x2e,
	0x10, 0x7c, 0xda, 0x47, 0xd9, 0xd7, 0x0a, 0x2c, 0x8d, 0xbe, 0x5c, 0x69, 0x9d, 0x8c, 0x83, 0x97,
	0x1b, 0xd3, 0x9b, 0xcd, 0xed, 0x4e, 0xfb, 0x9f, 0xee, 0xd0, 0xf6, 0x84, 0x1d, 0x18, 0x2e, 0x8e,
	0x4c, 0x09, 0x9d, 0xcf, 0xbe, 0x54, 0xa0, 0x39, 0x32, 0xd9, 0xc1, 0x2b, 0xea, 0x47, 0xde, 0x7e,
	0x3f, 0xe5, 0x66, 0x09, 0x61, 0xb8, 0x41, 0xd8, 0x15, 0xcc, 0x28, 0x9d, 0xd8, 0x60, 0x8f, 0x9a,
	0xc0, 0xdb, 0x6f, 0x42, 0xe9, 0x24, 0xa4, 0x23, 0xcf, 0x6a, 0xf4, 0x58, 0x76, 0x7e, 0x05, 0x00,
	0x00, 0xff, 0xff, 0x5b, 0x70, 0xd4, 0xcd, 0xed, 0x06, 0x00, 0x00,
}
