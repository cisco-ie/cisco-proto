/*
Copyright 2019 Cisco Systems

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: ptp_pd_servo_info.proto

package cisco_ios_xr_ptp_pd_oper_augment_platform_servo

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type PtpPdServoInfo_KEYS struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PtpPdServoInfo_KEYS) Reset()         { *m = PtpPdServoInfo_KEYS{} }
func (m *PtpPdServoInfo_KEYS) String() string { return proto.CompactTextString(m) }
func (*PtpPdServoInfo_KEYS) ProtoMessage()    {}
func (*PtpPdServoInfo_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad268ee21f079ad4, []int{0}
}

func (m *PtpPdServoInfo_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PtpPdServoInfo_KEYS.Unmarshal(m, b)
}
func (m *PtpPdServoInfo_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PtpPdServoInfo_KEYS.Marshal(b, m, deterministic)
}
func (m *PtpPdServoInfo_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PtpPdServoInfo_KEYS.Merge(m, src)
}
func (m *PtpPdServoInfo_KEYS) XXX_Size() int {
	return xxx_messageInfo_PtpPdServoInfo_KEYS.Size(m)
}
func (m *PtpPdServoInfo_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_PtpPdServoInfo_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_PtpPdServoInfo_KEYS proto.InternalMessageInfo

type PtpPdBagTimestamp struct {
	Second               uint32   `protobuf:"varint,1,opt,name=second,proto3" json:"second,omitempty"`
	NanoSecond           uint32   `protobuf:"varint,2,opt,name=nano_second,json=nanoSecond,proto3" json:"nano_second,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PtpPdBagTimestamp) Reset()         { *m = PtpPdBagTimestamp{} }
func (m *PtpPdBagTimestamp) String() string { return proto.CompactTextString(m) }
func (*PtpPdBagTimestamp) ProtoMessage()    {}
func (*PtpPdBagTimestamp) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad268ee21f079ad4, []int{1}
}

func (m *PtpPdBagTimestamp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PtpPdBagTimestamp.Unmarshal(m, b)
}
func (m *PtpPdBagTimestamp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PtpPdBagTimestamp.Marshal(b, m, deterministic)
}
func (m *PtpPdBagTimestamp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PtpPdBagTimestamp.Merge(m, src)
}
func (m *PtpPdBagTimestamp) XXX_Size() int {
	return xxx_messageInfo_PtpPdBagTimestamp.Size(m)
}
func (m *PtpPdBagTimestamp) XXX_DiscardUnknown() {
	xxx_messageInfo_PtpPdBagTimestamp.DiscardUnknown(m)
}

var xxx_messageInfo_PtpPdBagTimestamp proto.InternalMessageInfo

func (m *PtpPdBagTimestamp) GetSecond() uint32 {
	if m != nil {
		return m.Second
	}
	return 0
}

func (m *PtpPdBagTimestamp) GetNanoSecond() uint32 {
	if m != nil {
		return m.NanoSecond
	}
	return 0
}

type PtpPdServoInfo struct {
	LockStatus               uint32             `protobuf:"varint,50,opt,name=lock_status,json=lockStatus,proto3" json:"lock_status,omitempty"`
	Running                  bool               `protobuf:"varint,51,opt,name=running,proto3" json:"running,omitempty"`
	DeviceStatus             string             `protobuf:"bytes,52,opt,name=device_status,json=deviceStatus,proto3" json:"device_status,omitempty"`
	LogLevel                 uint32             `protobuf:"varint,53,opt,name=log_level,json=logLevel,proto3" json:"log_level,omitempty"`
	PhaseAccuracyLast        string             `protobuf:"bytes,54,opt,name=phase_accuracy_last,json=phaseAccuracyLast,proto3" json:"phase_accuracy_last,omitempty"`
	NumSyncTimestamp         uint32             `protobuf:"varint,55,opt,name=num_sync_timestamp,json=numSyncTimestamp,proto3" json:"num_sync_timestamp,omitempty"`
	NumDelayTimestamp        uint32             `protobuf:"varint,56,opt,name=num_delay_timestamp,json=numDelayTimestamp,proto3" json:"num_delay_timestamp,omitempty"`
	NumSetTime               uint32             `protobuf:"varint,57,opt,name=num_set_time,json=numSetTime,proto3" json:"num_set_time,omitempty"`
	NumStepTime              uint32             `protobuf:"varint,58,opt,name=num_step_time,json=numStepTime,proto3" json:"num_step_time,omitempty"`
	NumAdjustFreq            uint32             `protobuf:"varint,59,opt,name=num_adjust_freq,json=numAdjustFreq,proto3" json:"num_adjust_freq,omitempty"`
	NumAdjustFreqTime        uint32             `protobuf:"varint,60,opt,name=num_adjust_freq_time,json=numAdjustFreqTime,proto3" json:"num_adjust_freq_time,omitempty"`
	LastAdjustFreq           int32              `protobuf:"zigzag32,61,opt,name=last_adjust_freq,json=lastAdjustFreq,proto3" json:"last_adjust_freq,omitempty"`
	LastStepTime             int32              `protobuf:"zigzag32,62,opt,name=last_step_time,json=lastStepTime,proto3" json:"last_step_time,omitempty"`
	NumDiscardSyncTimestamp  uint32             `protobuf:"varint,63,opt,name=num_discard_sync_timestamp,json=numDiscardSyncTimestamp,proto3" json:"num_discard_sync_timestamp,omitempty"`
	NumDiscardDelayTimestamp uint32             `protobuf:"varint,64,opt,name=num_discard_delay_timestamp,json=numDiscardDelayTimestamp,proto3" json:"num_discard_delay_timestamp,omitempty"`
	LastSetTime              *PtpPdBagTimestamp `protobuf:"bytes,65,opt,name=last_set_time,json=lastSetTime,proto3" json:"last_set_time,omitempty"`
	FlagofLastSetTime        bool               `protobuf:"varint,66,opt,name=flagof_last_set_time,json=flagofLastSetTime,proto3" json:"flagof_last_set_time,omitempty"`
	LastReceivedT1           *PtpPdBagTimestamp `protobuf:"bytes,67,opt,name=last_received_t1,json=lastReceivedT1,proto3" json:"last_received_t1,omitempty"`
	LastReceivedT2           *PtpPdBagTimestamp `protobuf:"bytes,68,opt,name=last_received_t2,json=lastReceivedT2,proto3" json:"last_received_t2,omitempty"`
	LastReceivedT3           *PtpPdBagTimestamp `protobuf:"bytes,69,opt,name=last_received_t3,json=lastReceivedT3,proto3" json:"last_received_t3,omitempty"`
	LastReceivedT4           *PtpPdBagTimestamp `protobuf:"bytes,70,opt,name=last_received_t4,json=lastReceivedT4,proto3" json:"last_received_t4,omitempty"`
	PreReceivedT1            *PtpPdBagTimestamp `protobuf:"bytes,71,opt,name=pre_received_t1,json=preReceivedT1,proto3" json:"pre_received_t1,omitempty"`
	PreReceivedT2            *PtpPdBagTimestamp `protobuf:"bytes,72,opt,name=pre_received_t2,json=preReceivedT2,proto3" json:"pre_received_t2,omitempty"`
	PreReceivedT3            *PtpPdBagTimestamp `protobuf:"bytes,73,opt,name=pre_received_t3,json=preReceivedT3,proto3" json:"pre_received_t3,omitempty"`
	PreReceivedT4            *PtpPdBagTimestamp `protobuf:"bytes,74,opt,name=pre_received_t4,json=preReceivedT4,proto3" json:"pre_received_t4,omitempty"`
	OffsetFromMaster         string             `protobuf:"bytes,75,opt,name=offset_from_master,json=offsetFromMaster,proto3" json:"offset_from_master,omitempty"`
	MeanPathDelay            string             `protobuf:"bytes,76,opt,name=mean_path_delay,json=meanPathDelay,proto3" json:"mean_path_delay,omitempty"`
	XXX_NoUnkeyedLiteral     struct{}           `json:"-"`
	XXX_unrecognized         []byte             `json:"-"`
	XXX_sizecache            int32              `json:"-"`
}

func (m *PtpPdServoInfo) Reset()         { *m = PtpPdServoInfo{} }
func (m *PtpPdServoInfo) String() string { return proto.CompactTextString(m) }
func (*PtpPdServoInfo) ProtoMessage()    {}
func (*PtpPdServoInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad268ee21f079ad4, []int{2}
}

func (m *PtpPdServoInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PtpPdServoInfo.Unmarshal(m, b)
}
func (m *PtpPdServoInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PtpPdServoInfo.Marshal(b, m, deterministic)
}
func (m *PtpPdServoInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PtpPdServoInfo.Merge(m, src)
}
func (m *PtpPdServoInfo) XXX_Size() int {
	return xxx_messageInfo_PtpPdServoInfo.Size(m)
}
func (m *PtpPdServoInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_PtpPdServoInfo.DiscardUnknown(m)
}

var xxx_messageInfo_PtpPdServoInfo proto.InternalMessageInfo

func (m *PtpPdServoInfo) GetLockStatus() uint32 {
	if m != nil {
		return m.LockStatus
	}
	return 0
}

func (m *PtpPdServoInfo) GetRunning() bool {
	if m != nil {
		return m.Running
	}
	return false
}

func (m *PtpPdServoInfo) GetDeviceStatus() string {
	if m != nil {
		return m.DeviceStatus
	}
	return ""
}

func (m *PtpPdServoInfo) GetLogLevel() uint32 {
	if m != nil {
		return m.LogLevel
	}
	return 0
}

func (m *PtpPdServoInfo) GetPhaseAccuracyLast() string {
	if m != nil {
		return m.PhaseAccuracyLast
	}
	return ""
}

func (m *PtpPdServoInfo) GetNumSyncTimestamp() uint32 {
	if m != nil {
		return m.NumSyncTimestamp
	}
	return 0
}

func (m *PtpPdServoInfo) GetNumDelayTimestamp() uint32 {
	if m != nil {
		return m.NumDelayTimestamp
	}
	return 0
}

func (m *PtpPdServoInfo) GetNumSetTime() uint32 {
	if m != nil {
		return m.NumSetTime
	}
	return 0
}

func (m *PtpPdServoInfo) GetNumStepTime() uint32 {
	if m != nil {
		return m.NumStepTime
	}
	return 0
}

func (m *PtpPdServoInfo) GetNumAdjustFreq() uint32 {
	if m != nil {
		return m.NumAdjustFreq
	}
	return 0
}

func (m *PtpPdServoInfo) GetNumAdjustFreqTime() uint32 {
	if m != nil {
		return m.NumAdjustFreqTime
	}
	return 0
}

func (m *PtpPdServoInfo) GetLastAdjustFreq() int32 {
	if m != nil {
		return m.LastAdjustFreq
	}
	return 0
}

func (m *PtpPdServoInfo) GetLastStepTime() int32 {
	if m != nil {
		return m.LastStepTime
	}
	return 0
}

func (m *PtpPdServoInfo) GetNumDiscardSyncTimestamp() uint32 {
	if m != nil {
		return m.NumDiscardSyncTimestamp
	}
	return 0
}

func (m *PtpPdServoInfo) GetNumDiscardDelayTimestamp() uint32 {
	if m != nil {
		return m.NumDiscardDelayTimestamp
	}
	return 0
}

func (m *PtpPdServoInfo) GetLastSetTime() *PtpPdBagTimestamp {
	if m != nil {
		return m.LastSetTime
	}
	return nil
}

func (m *PtpPdServoInfo) GetFlagofLastSetTime() bool {
	if m != nil {
		return m.FlagofLastSetTime
	}
	return false
}

func (m *PtpPdServoInfo) GetLastReceivedT1() *PtpPdBagTimestamp {
	if m != nil {
		return m.LastReceivedT1
	}
	return nil
}

func (m *PtpPdServoInfo) GetLastReceivedT2() *PtpPdBagTimestamp {
	if m != nil {
		return m.LastReceivedT2
	}
	return nil
}

func (m *PtpPdServoInfo) GetLastReceivedT3() *PtpPdBagTimestamp {
	if m != nil {
		return m.LastReceivedT3
	}
	return nil
}

func (m *PtpPdServoInfo) GetLastReceivedT4() *PtpPdBagTimestamp {
	if m != nil {
		return m.LastReceivedT4
	}
	return nil
}

func (m *PtpPdServoInfo) GetPreReceivedT1() *PtpPdBagTimestamp {
	if m != nil {
		return m.PreReceivedT1
	}
	return nil
}

func (m *PtpPdServoInfo) GetPreReceivedT2() *PtpPdBagTimestamp {
	if m != nil {
		return m.PreReceivedT2
	}
	return nil
}

func (m *PtpPdServoInfo) GetPreReceivedT3() *PtpPdBagTimestamp {
	if m != nil {
		return m.PreReceivedT3
	}
	return nil
}

func (m *PtpPdServoInfo) GetPreReceivedT4() *PtpPdBagTimestamp {
	if m != nil {
		return m.PreReceivedT4
	}
	return nil
}

func (m *PtpPdServoInfo) GetOffsetFromMaster() string {
	if m != nil {
		return m.OffsetFromMaster
	}
	return ""
}

func (m *PtpPdServoInfo) GetMeanPathDelay() string {
	if m != nil {
		return m.MeanPathDelay
	}
	return ""
}

func init() {
	proto.RegisterType((*PtpPdServoInfo_KEYS)(nil), "cisco_ios_xr_ptp_pd_oper.augment.platform.servo.ptp_pd_servo_info_KEYS")
	proto.RegisterType((*PtpPdBagTimestamp)(nil), "cisco_ios_xr_ptp_pd_oper.augment.platform.servo.ptp_pd_bag_timestamp")
	proto.RegisterType((*PtpPdServoInfo)(nil), "cisco_ios_xr_ptp_pd_oper.augment.platform.servo.ptp_pd_servo_info")
}

func init() { proto.RegisterFile("ptp_pd_servo_info.proto", fileDescriptor_ad268ee21f079ad4) }

var fileDescriptor_ad268ee21f079ad4 = []byte{
	// 645 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x55, 0x4b, 0x4f, 0xdb, 0x4c,
	0x14, 0x55, 0xbe, 0x05, 0x1f, 0x4c, 0x70, 0x21, 0x06, 0xc1, 0xa8, 0x2c, 0x1a, 0xa5, 0x55, 0x95,
	0x45, 0x65, 0x44, 0x92, 0x3e, 0x29, 0x6d, 0x69, 0x81, 0x3e, 0x48, 0xd5, 0x2a, 0x61, 0xd3, 0xd5,
	0x68, 0x18, 0x8f, 0x83, 0x5b, 0xcf, 0x83, 0x99, 0x71, 0xd4, 0xfc, 0xf6, 0x6e, 0xaa, 0xb9, 0x36,
	0xe4, 0xb9, 0xa9, 0x44, 0x96, 0x3e, 0xf7, 0x3c, 0x6e, 0xce, 0xc4, 0x63, 0xb4, 0xab, 0x9d, 0x26,
	0x3a, 0x26, 0x96, 0x9b, 0xa1, 0x22, 0xa9, 0x4c, 0x54, 0xa4, 0x8d, 0x72, 0x2a, 0xdc, 0x67, 0xa9,
	0x65, 0x8a, 0xa4, 0xca, 0x92, 0xdf, 0x86, 0x94, 0x2c, 0xa5, 0xb9, 0x89, 0x68, 0x3e, 0x10, 0x5c,
	0xba, 0x48, 0x67, 0xd4, 0x25, 0xca, 0x88, 0x08, 0xb4, 0x0d, 0x8c, 0x76, 0xe6, 0xbc, 0xc8, 0xf9,
	0xe9, 0x8f, 0x7e, 0xe3, 0x1b, 0xda, 0x2e, 0x27, 0x97, 0x74, 0x40, 0x5c, 0x2a, 0xb8, 0x75, 0x54,
	0xe8, 0x70, 0x07, 0xad, 0x58, 0xce, 0x94, 0x8c, 0x71, 0xa5, 0x5e, 0x69, 0x06, 0xbd, 0xf2, 0x29,
	0x7c, 0x80, 0xaa, 0x92, 0x4a, 0x45, 0xca, 0xe1, 0x7f, 0x30, 0x44, 0x1e, 0xea, 0x03, 0xd2, 0xf8,
	0x13, 0xa0, 0xda, 0x5c, 0x96, 0x97, 0x65, 0x8a, 0xfd, 0x22, 0xd6, 0x51, 0x97, 0x5b, 0xdc, 0x2a,
	0x64, 0x1e, 0xea, 0x03, 0x12, 0x62, 0xf4, 0xbf, 0xc9, 0xa5, 0x4c, 0xe5, 0x00, 0xb7, 0xeb, 0x95,
	0xe6, 0x6a, 0xef, 0xe6, 0x31, 0x7c, 0x88, 0x82, 0x98, 0x0f, 0x53, 0xc6, 0x6f, 0xc4, 0x9d, 0x7a,
	0xa5, 0xb9, 0xd6, 0x5b, 0x2f, 0xc0, 0x52, 0xbe, 0x87, 0xd6, 0x32, 0x35, 0x20, 0x19, 0x1f, 0xf2,
	0x0c, 0x3f, 0x05, 0xf7, 0xd5, 0x4c, 0x0d, 0xba, 0xfe, 0x39, 0x8c, 0xd0, 0x96, 0xbe, 0xa2, 0x96,
	0x13, 0xca, 0x58, 0x6e, 0x28, 0x1b, 0x91, 0x8c, 0x5a, 0x87, 0x9f, 0x81, 0x4f, 0x0d, 0x46, 0xc7,
	0xe5, 0xa4, 0x4b, 0xad, 0x0b, 0x9f, 0xa0, 0x50, 0xe6, 0x82, 0xd8, 0x91, 0x64, 0xe3, 0x46, 0xf0,
	0x73, 0x70, 0xdd, 0x94, 0xb9, 0xe8, 0x8f, 0x24, 0xbb, 0xb8, 0x6d, 0x2a, 0x42, 0x5b, 0x9e, 0x1d,
	0xf3, 0x8c, 0x8e, 0x26, 0xe8, 0x2f, 0x80, 0x5e, 0x93, 0xb9, 0x38, 0xf1, 0x93, 0x31, 0xbf, 0x8e,
	0xd6, 0xc1, 0x9d, 0x3b, 0x60, 0xe3, 0x97, 0x65, 0x85, 0xb9, 0xe8, 0x73, 0xe7, 0x69, 0x61, 0x03,
	0x05, 0xc0, 0x70, 0x5c, 0x17, 0x94, 0x57, 0x40, 0xa9, 0x7a, 0x8a, 0xe3, 0x1a, 0x38, 0x8f, 0xd1,
	0x86, 0xe7, 0xd0, 0xf8, 0x67, 0x6e, 0x1d, 0x49, 0x0c, 0xbf, 0xc6, 0x87, 0xc0, 0xf2, 0xd2, 0x63,
	0x40, 0xcf, 0x0c, 0xbf, 0x0e, 0xf7, 0xd1, 0xf6, 0x0c, 0xaf, 0xb0, 0x7c, 0x7d, 0xbb, 0xde, 0x98,
	0x0c, 0xc6, 0x4d, 0xb4, 0xe9, 0xdb, 0x99, 0x72, 0x3e, 0xaa, 0x57, 0x9a, 0xb5, 0xde, 0x3d, 0x8f,
	0x4f, 0x58, 0x3f, 0x42, 0x80, 0x4c, 0xec, 0xf9, 0x06, 0x78, 0xeb, 0x1e, 0xbd, 0x5d, 0xf4, 0x10,
	0xdd, 0x87, 0x7a, 0x52, 0xcb, 0xa8, 0x89, 0x67, 0x4b, 0x7d, 0x0b, 0x6b, 0xec, 0xfa, 0x96, 0x0a,
	0xc2, 0x74, 0xb7, 0x47, 0x68, 0x6f, 0x52, 0x3c, 0xdb, 0xf1, 0x3b, 0x50, 0xe3, 0xb1, 0x7a, 0xa6,
	0xea, 0x14, 0x05, 0xc5, 0x86, 0x37, 0x5d, 0x1f, 0xd7, 0x2b, 0xcd, 0x6a, 0xeb, 0x34, 0xfa, 0xc7,
	0xf7, 0x27, 0x5a, 0xf4, 0x8a, 0xf4, 0xaa, 0xf0, 0x3b, 0xcb, 0x33, 0xdb, 0x47, 0xdb, 0x49, 0x46,
	0x07, 0x2a, 0x21, 0xd3, 0x89, 0xef, 0xe1, 0xcf, 0x5c, 0x2b, 0x66, 0xdd, 0x09, 0x81, 0x2a, 0x7b,
	0x36, 0x9c, 0xf1, 0x74, 0xc8, 0x63, 0xe2, 0x0e, 0xf0, 0x87, 0xbb, 0x5c, 0x0f, 0x0e, 0xa7, 0x57,
	0xba, 0x5f, 0x1c, 0x2c, 0x08, 0x6c, 0xe1, 0x93, 0xe5, 0x05, 0xb6, 0x16, 0x04, 0xb6, 0xf1, 0xe9,
	0xf2, 0x02, 0xdb, 0x0b, 0x02, 0x3b, 0xf8, 0x6c, 0x79, 0x81, 0x9d, 0x50, 0xa0, 0x0d, 0x6d, 0xf8,
	0xd4, 0x11, 0x7e, 0xbc, 0xcb, 0xbc, 0x40, 0x1b, 0x3e, 0x71, 0x82, 0x73, 0x71, 0x2d, 0xfc, 0x69,
	0x69, 0x71, 0xad, 0xf9, 0xb8, 0x36, 0xfe, 0xbc, 0xb4, 0xb8, 0xf6, 0x7c, 0x5c, 0x07, 0x7f, 0x59,
	0x5a, 0x5c, 0xc7, 0x5f, 0xf2, 0x2a, 0x49, 0xfc, 0x7b, 0x9a, 0x18, 0x25, 0x88, 0xa0, 0xd6, 0x71,
	0x83, 0xcf, 0xe1, 0x9b, 0xb0, 0x59, 0x4c, 0xce, 0x8c, 0x12, 0x5f, 0x01, 0xf7, 0xd7, 0xad, 0xe0,
	0x54, 0x12, 0x4d, 0xdd, 0x55, 0x71, 0x0d, 0xe1, 0x2e, 0x50, 0x03, 0x0f, 0x7f, 0xa7, 0xee, 0x0a,
	0xae, 0x9e, 0xcb, 0x15, 0xf8, 0x40, 0xb7, 0xff, 0x06, 0x00, 0x00, 0xff, 0xff, 0xf6, 0x12, 0xdf,
	0xe7, 0xbb, 0x07, 0x00, 0x00,
}
