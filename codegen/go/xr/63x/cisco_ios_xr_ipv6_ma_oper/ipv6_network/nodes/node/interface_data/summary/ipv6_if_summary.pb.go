/*
Copyright 2019 Cisco Systems

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: ipv6_if_summary.proto

package cisco_ios_xr_ipv6_ma_oper_ipv6_network_nodes_node_interface_data_summary

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Ipv6IfSummary_KEYS struct {
	NodeName             string   `protobuf:"bytes,1,opt,name=node_name,json=nodeName,proto3" json:"node_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Ipv6IfSummary_KEYS) Reset()         { *m = Ipv6IfSummary_KEYS{} }
func (m *Ipv6IfSummary_KEYS) String() string { return proto.CompactTextString(m) }
func (*Ipv6IfSummary_KEYS) ProtoMessage()    {}
func (*Ipv6IfSummary_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_98724ea27985022f, []int{0}
}

func (m *Ipv6IfSummary_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Ipv6IfSummary_KEYS.Unmarshal(m, b)
}
func (m *Ipv6IfSummary_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Ipv6IfSummary_KEYS.Marshal(b, m, deterministic)
}
func (m *Ipv6IfSummary_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Ipv6IfSummary_KEYS.Merge(m, src)
}
func (m *Ipv6IfSummary_KEYS) XXX_Size() int {
	return xxx_messageInfo_Ipv6IfSummary_KEYS.Size(m)
}
func (m *Ipv6IfSummary_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_Ipv6IfSummary_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_Ipv6IfSummary_KEYS proto.InternalMessageInfo

func (m *Ipv6IfSummary_KEYS) GetNodeName() string {
	if m != nil {
		return m.NodeName
	}
	return ""
}

type IfSummaryT struct {
	IpAssigned           uint32   `protobuf:"varint,1,opt,name=ip_assigned,json=ipAssigned,proto3" json:"ip_assigned,omitempty"`
	IpUnnumbered         uint32   `protobuf:"varint,2,opt,name=ip_unnumbered,json=ipUnnumbered,proto3" json:"ip_unnumbered,omitempty"`
	IpUnassigned         uint32   `protobuf:"varint,3,opt,name=ip_unassigned,json=ipUnassigned,proto3" json:"ip_unassigned,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IfSummaryT) Reset()         { *m = IfSummaryT{} }
func (m *IfSummaryT) String() string { return proto.CompactTextString(m) }
func (*IfSummaryT) ProtoMessage()    {}
func (*IfSummaryT) Descriptor() ([]byte, []int) {
	return fileDescriptor_98724ea27985022f, []int{1}
}

func (m *IfSummaryT) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IfSummaryT.Unmarshal(m, b)
}
func (m *IfSummaryT) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IfSummaryT.Marshal(b, m, deterministic)
}
func (m *IfSummaryT) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IfSummaryT.Merge(m, src)
}
func (m *IfSummaryT) XXX_Size() int {
	return xxx_messageInfo_IfSummaryT.Size(m)
}
func (m *IfSummaryT) XXX_DiscardUnknown() {
	xxx_messageInfo_IfSummaryT.DiscardUnknown(m)
}

var xxx_messageInfo_IfSummaryT proto.InternalMessageInfo

func (m *IfSummaryT) GetIpAssigned() uint32 {
	if m != nil {
		return m.IpAssigned
	}
	return 0
}

func (m *IfSummaryT) GetIpUnnumbered() uint32 {
	if m != nil {
		return m.IpUnnumbered
	}
	return 0
}

func (m *IfSummaryT) GetIpUnassigned() uint32 {
	if m != nil {
		return m.IpUnassigned
	}
	return 0
}

type Ipv6IfSummary struct {
	IfUpUp               *IfSummaryT `protobuf:"bytes,50,opt,name=if_up_up,json=ifUpUp,proto3" json:"if_up_up,omitempty"`
	IfUpDown             *IfSummaryT `protobuf:"bytes,51,opt,name=if_up_down,json=ifUpDown,proto3" json:"if_up_down,omitempty"`
	IfDownDown           *IfSummaryT `protobuf:"bytes,52,opt,name=if_down_down,json=ifDownDown,proto3" json:"if_down_down,omitempty"`
	IfShutdownDown       *IfSummaryT `protobuf:"bytes,53,opt,name=if_shutdown_down,json=ifShutdownDown,proto3" json:"if_shutdown_down,omitempty"`
	IfUpDownBasecapsUp   uint32      `protobuf:"varint,54,opt,name=if_up_down_basecaps_up,json=ifUpDownBasecapsUp,proto3" json:"if_up_down_basecaps_up,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *Ipv6IfSummary) Reset()         { *m = Ipv6IfSummary{} }
func (m *Ipv6IfSummary) String() string { return proto.CompactTextString(m) }
func (*Ipv6IfSummary) ProtoMessage()    {}
func (*Ipv6IfSummary) Descriptor() ([]byte, []int) {
	return fileDescriptor_98724ea27985022f, []int{2}
}

func (m *Ipv6IfSummary) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Ipv6IfSummary.Unmarshal(m, b)
}
func (m *Ipv6IfSummary) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Ipv6IfSummary.Marshal(b, m, deterministic)
}
func (m *Ipv6IfSummary) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Ipv6IfSummary.Merge(m, src)
}
func (m *Ipv6IfSummary) XXX_Size() int {
	return xxx_messageInfo_Ipv6IfSummary.Size(m)
}
func (m *Ipv6IfSummary) XXX_DiscardUnknown() {
	xxx_messageInfo_Ipv6IfSummary.DiscardUnknown(m)
}

var xxx_messageInfo_Ipv6IfSummary proto.InternalMessageInfo

func (m *Ipv6IfSummary) GetIfUpUp() *IfSummaryT {
	if m != nil {
		return m.IfUpUp
	}
	return nil
}

func (m *Ipv6IfSummary) GetIfUpDown() *IfSummaryT {
	if m != nil {
		return m.IfUpDown
	}
	return nil
}

func (m *Ipv6IfSummary) GetIfDownDown() *IfSummaryT {
	if m != nil {
		return m.IfDownDown
	}
	return nil
}

func (m *Ipv6IfSummary) GetIfShutdownDown() *IfSummaryT {
	if m != nil {
		return m.IfShutdownDown
	}
	return nil
}

func (m *Ipv6IfSummary) GetIfUpDownBasecapsUp() uint32 {
	if m != nil {
		return m.IfUpDownBasecapsUp
	}
	return 0
}

func init() {
	proto.RegisterType((*Ipv6IfSummary_KEYS)(nil), "cisco_ios_xr_ipv6_ma_oper.ipv6_network.nodes.node.interface_data.summary.ipv6_if_summary_KEYS")
	proto.RegisterType((*IfSummaryT)(nil), "cisco_ios_xr_ipv6_ma_oper.ipv6_network.nodes.node.interface_data.summary.if_summary_t")
	proto.RegisterType((*Ipv6IfSummary)(nil), "cisco_ios_xr_ipv6_ma_oper.ipv6_network.nodes.node.interface_data.summary.ipv6_if_summary")
}

func init() { proto.RegisterFile("ipv6_if_summary.proto", fileDescriptor_98724ea27985022f) }

var fileDescriptor_98724ea27985022f = []byte{
	// 333 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x93, 0x4f, 0x4b, 0xf3, 0x40,
	0x10, 0xc6, 0xc9, 0xfb, 0x4a, 0x69, 0xa7, 0xad, 0xca, 0xa2, 0x12, 0xf0, 0x60, 0xa9, 0x97, 0x9e,
	0x72, 0x68, 0xb5, 0x77, 0x45, 0x41, 0x10, 0x3c, 0xb4, 0x44, 0xf0, 0x34, 0x6c, 0x93, 0x8d, 0x0e,
	0x92, 0xdd, 0x21, 0x9b, 0xd8, 0xf6, 0xe6, 0xe7, 0xf1, 0x53, 0xca, 0x6e, 0xd3, 0x3f, 0xf4, 0x6c,
	0x2f, 0x81, 0x3c, 0xf3, 0xec, 0xfc, 0x66, 0x9f, 0xdd, 0x85, 0x73, 0xe2, 0xaf, 0x31, 0x52, 0x86,
	0xb6, 0xca, 0x73, 0x59, 0x2c, 0x23, 0x2e, 0x4c, 0x69, 0xc4, 0x53, 0x42, 0x36, 0x31, 0x48, 0xc6,
	0xe2, 0xa2, 0x40, 0xef, 0xc9, 0x25, 0x1a, 0x56, 0x45, 0xe4, 0x7f, 0xb4, 0x2a, 0xe7, 0xa6, 0xf8,
	0x8c, 0xb4, 0x49, 0x95, 0xf5, 0xdf, 0x88, 0x74, 0xa9, 0x8a, 0x4c, 0x26, 0x0a, 0x53, 0x59, 0xca,
	0xa8, 0xee, 0xd7, 0x1f, 0xc1, 0xd9, 0x1e, 0x02, 0x9f, 0x1f, 0xdf, 0xa6, 0xe2, 0x12, 0x5a, 0x6e,
	0x19, 0x6a, 0x99, 0xab, 0x30, 0xe8, 0x05, 0x83, 0xd6, 0xa4, 0xe9, 0x84, 0x17, 0x99, 0xab, 0xfe,
	0x12, 0x3a, 0x3b, 0xfe, 0x52, 0x5c, 0x41, 0x9b, 0x18, 0xa5, 0xb5, 0xf4, 0xae, 0x55, 0xea, 0xed,
	0xdd, 0x09, 0x10, 0xdf, 0xd5, 0x8a, 0xb8, 0x86, 0x2e, 0x31, 0x56, 0x5a, 0x57, 0xf9, 0x4c, 0x15,
	0x2a, 0x0d, 0xff, 0x79, 0x4b, 0x87, 0x38, 0xde, 0x68, 0x1b, 0xd3, 0xa6, 0xcf, 0xff, 0xad, 0x69,
	0xad, 0xf5, 0x7f, 0x8e, 0xe0, 0x64, 0x6f, 0x60, 0xc1, 0xd0, 0xa4, 0x0c, 0x2b, 0xc6, 0x8a, 0xc3,
	0x61, 0x2f, 0x18, 0xb4, 0x87, 0xaf, 0xd1, 0x5f, 0x05, 0x14, 0xed, 0x6e, 0x74, 0xd2, 0xa0, 0x2c,
	0xe6, 0x98, 0x45, 0x09, 0xb0, 0x22, 0xa6, 0x66, 0xae, 0xc3, 0xd1, 0x41, 0x99, 0x4d, 0xc7, 0x7c,
	0x30, 0x73, 0x2d, 0x16, 0x3e, 0x76, 0x87, 0x5c, 0x71, 0x6f, 0x0e, 0xca, 0x05, 0xca, 0x1c, 0xd5,
	0x93, 0xbf, 0x03, 0x38, 0x75, 0xc5, 0x8f, 0xaa, 0xdc, 0xe2, 0x6f, 0x0f, 0x8a, 0x3f, 0xa6, 0x6c,
	0x5a, 0xe3, 0xfc, 0x08, 0x43, 0xb8, 0xd8, 0x46, 0x8e, 0x33, 0x69, 0x55, 0x22, 0xd9, 0xba, 0x23,
	0x1f, 0xfb, 0x6b, 0x22, 0xd6, 0x31, 0xdd, 0xd7, 0xa5, 0x98, 0x67, 0x0d, 0xff, 0x5a, 0x46, 0xbf,
	0x01, 0x00, 0x00, 0xff, 0xff, 0x69, 0x1d, 0x4a, 0x63, 0x46, 0x03, 0x00, 0x00,
}
