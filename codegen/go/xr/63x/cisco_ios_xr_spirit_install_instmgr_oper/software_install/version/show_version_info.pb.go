/*
Copyright 2019 Cisco Systems

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: show_version_info.proto

package cisco_ios_xr_spirit_install_instmgr_oper_software_install_version

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ShowVersionInfo_KEYS struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ShowVersionInfo_KEYS) Reset()         { *m = ShowVersionInfo_KEYS{} }
func (m *ShowVersionInfo_KEYS) String() string { return proto.CompactTextString(m) }
func (*ShowVersionInfo_KEYS) ProtoMessage()    {}
func (*ShowVersionInfo_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_c60b4a0db2255eef, []int{0}
}

func (m *ShowVersionInfo_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ShowVersionInfo_KEYS.Unmarshal(m, b)
}
func (m *ShowVersionInfo_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ShowVersionInfo_KEYS.Marshal(b, m, deterministic)
}
func (m *ShowVersionInfo_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ShowVersionInfo_KEYS.Merge(m, src)
}
func (m *ShowVersionInfo_KEYS) XXX_Size() int {
	return xxx_messageInfo_ShowVersionInfo_KEYS.Size(m)
}
func (m *ShowVersionInfo_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_ShowVersionInfo_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_ShowVersionInfo_KEYS proto.InternalMessageInfo

type ShowVersionInfo struct {
	ImgInfo              string   `protobuf:"bytes,50,opt,name=img_info,json=imgInfo,proto3" json:"img_info,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ShowVersionInfo) Reset()         { *m = ShowVersionInfo{} }
func (m *ShowVersionInfo) String() string { return proto.CompactTextString(m) }
func (*ShowVersionInfo) ProtoMessage()    {}
func (*ShowVersionInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_c60b4a0db2255eef, []int{1}
}

func (m *ShowVersionInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ShowVersionInfo.Unmarshal(m, b)
}
func (m *ShowVersionInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ShowVersionInfo.Marshal(b, m, deterministic)
}
func (m *ShowVersionInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ShowVersionInfo.Merge(m, src)
}
func (m *ShowVersionInfo) XXX_Size() int {
	return xxx_messageInfo_ShowVersionInfo.Size(m)
}
func (m *ShowVersionInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_ShowVersionInfo.DiscardUnknown(m)
}

var xxx_messageInfo_ShowVersionInfo proto.InternalMessageInfo

func (m *ShowVersionInfo) GetImgInfo() string {
	if m != nil {
		return m.ImgInfo
	}
	return ""
}

func init() {
	proto.RegisterType((*ShowVersionInfo_KEYS)(nil), "cisco_ios_xr_spirit_install_instmgr_oper.software_install.version.show_version_info_KEYS")
	proto.RegisterType((*ShowVersionInfo)(nil), "cisco_ios_xr_spirit_install_instmgr_oper.software_install.version.show_version_info")
}

func init() { proto.RegisterFile("show_version_info.proto", fileDescriptor_c60b4a0db2255eef) }

var fileDescriptor_c60b4a0db2255eef = []byte{
	// 148 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x2f, 0xce, 0xc8, 0x2f,
	0x8f, 0x2f, 0x4b, 0x2d, 0x2a, 0xce, 0xcc, 0xcf, 0x8b, 0xcf, 0xcc, 0x4b, 0xcb, 0xd7, 0x2b, 0x28,
	0xca, 0x2f, 0xc9, 0x17, 0x72, 0x4c, 0xce, 0x2c, 0x4e, 0xce, 0x8f, 0xcf, 0xcc, 0x2f, 0x8e, 0xaf,
	0x28, 0x8a, 0x2f, 0x2e, 0xc8, 0x2c, 0xca, 0x2c, 0x89, 0xcf, 0xcc, 0x2b, 0x2e, 0x49, 0xcc, 0xc9,
	0x01, 0xd3, 0xb9, 0xe9, 0x45, 0xf1, 0xf9, 0x05, 0xa9, 0x45, 0x7a, 0xc5, 0xf9, 0x69, 0x25, 0xe5,
	0x89, 0x45, 0xa9, 0x30, 0x59, 0x3d, 0xa8, 0x69, 0x4a, 0x12, 0x5c, 0x62, 0x18, 0xa6, 0xc7, 0x7b,
	0xbb, 0x46, 0x06, 0x2b, 0xe9, 0x71, 0x09, 0x62, 0xc8, 0x08, 0x49, 0x72, 0x71, 0x64, 0xe6, 0xa6,
	0x83, 0xd9, 0x12, 0x46, 0x0a, 0x8c, 0x1a, 0x9c, 0x41, 0xec, 0x99, 0xb9, 0xe9, 0x9e, 0x79, 0x69,
	0xf9, 0x49, 0x6c, 0x60, 0x37, 0x19, 0x03, 0x02, 0x00, 0x00, 0xff, 0xff, 0xff, 0x2d, 0x79, 0xc2,
	0xae, 0x00, 0x00, 0x00,
}
