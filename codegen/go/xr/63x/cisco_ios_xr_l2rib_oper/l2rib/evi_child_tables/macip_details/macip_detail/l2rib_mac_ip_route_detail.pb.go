/*
Copyright 2019 Cisco Systems

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: l2rib_mac_ip_route_detail.proto

package cisco_ios_xr_l2rib_oper_l2rib_evi_child_tables_macip_details_macip_detail

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type L2RibMacIpRouteDetail_KEYS struct {
	Evi                  uint32   `protobuf:"varint,1,opt,name=evi,proto3" json:"evi,omitempty"`
	TagId                uint32   `protobuf:"varint,2,opt,name=tag_id,json=tagId,proto3" json:"tag_id,omitempty"`
	MacAddr              string   `protobuf:"bytes,3,opt,name=mac_addr,json=macAddr,proto3" json:"mac_addr,omitempty"`
	IpAddr               string   `protobuf:"bytes,4,opt,name=ip_addr,json=ipAddr,proto3" json:"ip_addr,omitempty"`
	AdminDist            uint32   `protobuf:"varint,5,opt,name=admin_dist,json=adminDist,proto3" json:"admin_dist,omitempty"`
	ProdId               uint32   `protobuf:"varint,6,opt,name=prod_id,json=prodId,proto3" json:"prod_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *L2RibMacIpRouteDetail_KEYS) Reset()         { *m = L2RibMacIpRouteDetail_KEYS{} }
func (m *L2RibMacIpRouteDetail_KEYS) String() string { return proto.CompactTextString(m) }
func (*L2RibMacIpRouteDetail_KEYS) ProtoMessage()    {}
func (*L2RibMacIpRouteDetail_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_8a2d67a1d3f7203a, []int{0}
}

func (m *L2RibMacIpRouteDetail_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_L2RibMacIpRouteDetail_KEYS.Unmarshal(m, b)
}
func (m *L2RibMacIpRouteDetail_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_L2RibMacIpRouteDetail_KEYS.Marshal(b, m, deterministic)
}
func (m *L2RibMacIpRouteDetail_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_L2RibMacIpRouteDetail_KEYS.Merge(m, src)
}
func (m *L2RibMacIpRouteDetail_KEYS) XXX_Size() int {
	return xxx_messageInfo_L2RibMacIpRouteDetail_KEYS.Size(m)
}
func (m *L2RibMacIpRouteDetail_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_L2RibMacIpRouteDetail_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_L2RibMacIpRouteDetail_KEYS proto.InternalMessageInfo

func (m *L2RibMacIpRouteDetail_KEYS) GetEvi() uint32 {
	if m != nil {
		return m.Evi
	}
	return 0
}

func (m *L2RibMacIpRouteDetail_KEYS) GetTagId() uint32 {
	if m != nil {
		return m.TagId
	}
	return 0
}

func (m *L2RibMacIpRouteDetail_KEYS) GetMacAddr() string {
	if m != nil {
		return m.MacAddr
	}
	return ""
}

func (m *L2RibMacIpRouteDetail_KEYS) GetIpAddr() string {
	if m != nil {
		return m.IpAddr
	}
	return ""
}

func (m *L2RibMacIpRouteDetail_KEYS) GetAdminDist() uint32 {
	if m != nil {
		return m.AdminDist
	}
	return 0
}

func (m *L2RibMacIpRouteDetail_KEYS) GetProdId() uint32 {
	if m != nil {
		return m.ProdId
	}
	return 0
}

type LabeledNextHop struct {
	AddressFamily        string   `protobuf:"bytes,1,opt,name=address_family,json=addressFamily,proto3" json:"address_family,omitempty"`
	IpAddress            string   `protobuf:"bytes,2,opt,name=ip_address,json=ipAddress,proto3" json:"ip_address,omitempty"`
	Label                uint32   `protobuf:"varint,3,opt,name=label,proto3" json:"label,omitempty"`
	Internal             bool     `protobuf:"varint,4,opt,name=internal,proto3" json:"internal,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LabeledNextHop) Reset()         { *m = LabeledNextHop{} }
func (m *LabeledNextHop) String() string { return proto.CompactTextString(m) }
func (*LabeledNextHop) ProtoMessage()    {}
func (*LabeledNextHop) Descriptor() ([]byte, []int) {
	return fileDescriptor_8a2d67a1d3f7203a, []int{1}
}

func (m *LabeledNextHop) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LabeledNextHop.Unmarshal(m, b)
}
func (m *LabeledNextHop) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LabeledNextHop.Marshal(b, m, deterministic)
}
func (m *LabeledNextHop) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LabeledNextHop.Merge(m, src)
}
func (m *LabeledNextHop) XXX_Size() int {
	return xxx_messageInfo_LabeledNextHop.Size(m)
}
func (m *LabeledNextHop) XXX_DiscardUnknown() {
	xxx_messageInfo_LabeledNextHop.DiscardUnknown(m)
}

var xxx_messageInfo_LabeledNextHop proto.InternalMessageInfo

func (m *LabeledNextHop) GetAddressFamily() string {
	if m != nil {
		return m.AddressFamily
	}
	return ""
}

func (m *LabeledNextHop) GetIpAddress() string {
	if m != nil {
		return m.IpAddress
	}
	return ""
}

func (m *LabeledNextHop) GetLabel() uint32 {
	if m != nil {
		return m.Label
	}
	return 0
}

func (m *LabeledNextHop) GetInternal() bool {
	if m != nil {
		return m.Internal
	}
	return false
}

type NextHop struct {
	Type                 string          `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Ipv4                 string          `protobuf:"bytes,2,opt,name=ipv4,proto3" json:"ipv4,omitempty"`
	Ipv6                 string          `protobuf:"bytes,3,opt,name=ipv6,proto3" json:"ipv6,omitempty"`
	Mac                  string          `protobuf:"bytes,4,opt,name=mac,proto3" json:"mac,omitempty"`
	InterfaceHandle      string          `protobuf:"bytes,5,opt,name=interface_handle,json=interfaceHandle,proto3" json:"interface_handle,omitempty"`
	Labeled              *LabeledNextHop `protobuf:"bytes,6,opt,name=labeled,proto3" json:"labeled,omitempty"`
	Xid                  uint32          `protobuf:"varint,7,opt,name=xid,proto3" json:"xid,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *NextHop) Reset()         { *m = NextHop{} }
func (m *NextHop) String() string { return proto.CompactTextString(m) }
func (*NextHop) ProtoMessage()    {}
func (*NextHop) Descriptor() ([]byte, []int) {
	return fileDescriptor_8a2d67a1d3f7203a, []int{2}
}

func (m *NextHop) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NextHop.Unmarshal(m, b)
}
func (m *NextHop) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NextHop.Marshal(b, m, deterministic)
}
func (m *NextHop) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NextHop.Merge(m, src)
}
func (m *NextHop) XXX_Size() int {
	return xxx_messageInfo_NextHop.Size(m)
}
func (m *NextHop) XXX_DiscardUnknown() {
	xxx_messageInfo_NextHop.DiscardUnknown(m)
}

var xxx_messageInfo_NextHop proto.InternalMessageInfo

func (m *NextHop) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *NextHop) GetIpv4() string {
	if m != nil {
		return m.Ipv4
	}
	return ""
}

func (m *NextHop) GetIpv6() string {
	if m != nil {
		return m.Ipv6
	}
	return ""
}

func (m *NextHop) GetMac() string {
	if m != nil {
		return m.Mac
	}
	return ""
}

func (m *NextHop) GetInterfaceHandle() string {
	if m != nil {
		return m.InterfaceHandle
	}
	return ""
}

func (m *NextHop) GetLabeled() *LabeledNextHop {
	if m != nil {
		return m.Labeled
	}
	return nil
}

func (m *NextHop) GetXid() uint32 {
	if m != nil {
		return m.Xid
	}
	return 0
}

type L2RibNextHop struct {
	TopologyId           uint32   `protobuf:"varint,1,opt,name=topology_id,json=topologyId,proto3" json:"topology_id,omitempty"`
	Flags                uint32   `protobuf:"varint,2,opt,name=flags,proto3" json:"flags,omitempty"`
	NextHop              *NextHop `protobuf:"bytes,3,opt,name=next_hop,json=nextHop,proto3" json:"next_hop,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *L2RibNextHop) Reset()         { *m = L2RibNextHop{} }
func (m *L2RibNextHop) String() string { return proto.CompactTextString(m) }
func (*L2RibNextHop) ProtoMessage()    {}
func (*L2RibNextHop) Descriptor() ([]byte, []int) {
	return fileDescriptor_8a2d67a1d3f7203a, []int{3}
}

func (m *L2RibNextHop) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_L2RibNextHop.Unmarshal(m, b)
}
func (m *L2RibNextHop) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_L2RibNextHop.Marshal(b, m, deterministic)
}
func (m *L2RibNextHop) XXX_Merge(src proto.Message) {
	xxx_messageInfo_L2RibNextHop.Merge(m, src)
}
func (m *L2RibNextHop) XXX_Size() int {
	return xxx_messageInfo_L2RibNextHop.Size(m)
}
func (m *L2RibNextHop) XXX_DiscardUnknown() {
	xxx_messageInfo_L2RibNextHop.DiscardUnknown(m)
}

var xxx_messageInfo_L2RibNextHop proto.InternalMessageInfo

func (m *L2RibNextHop) GetTopologyId() uint32 {
	if m != nil {
		return m.TopologyId
	}
	return 0
}

func (m *L2RibNextHop) GetFlags() uint32 {
	if m != nil {
		return m.Flags
	}
	return 0
}

func (m *L2RibNextHop) GetNextHop() *NextHop {
	if m != nil {
		return m.NextHop
	}
	return nil
}

type L2RibMacIpRoute struct {
	MacAddress           string        `protobuf:"bytes,1,opt,name=mac_address,json=macAddress,proto3" json:"mac_address,omitempty"`
	IpAddress            string        `protobuf:"bytes,2,opt,name=ip_address,json=ipAddress,proto3" json:"ip_address,omitempty"`
	NextHop              *L2RibNextHop `protobuf:"bytes,3,opt,name=next_hop,json=nextHop,proto3" json:"next_hop,omitempty"`
	AdminDistance        uint32        `protobuf:"varint,4,opt,name=admin_distance,json=adminDistance,proto3" json:"admin_distance,omitempty"`
	ProducerId           uint32        `protobuf:"varint,5,opt,name=producer_id,json=producerId,proto3" json:"producer_id,omitempty"`
	TopologyId           uint32        `protobuf:"varint,6,opt,name=topology_id,json=topologyId,proto3" json:"topology_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *L2RibMacIpRoute) Reset()         { *m = L2RibMacIpRoute{} }
func (m *L2RibMacIpRoute) String() string { return proto.CompactTextString(m) }
func (*L2RibMacIpRoute) ProtoMessage()    {}
func (*L2RibMacIpRoute) Descriptor() ([]byte, []int) {
	return fileDescriptor_8a2d67a1d3f7203a, []int{4}
}

func (m *L2RibMacIpRoute) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_L2RibMacIpRoute.Unmarshal(m, b)
}
func (m *L2RibMacIpRoute) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_L2RibMacIpRoute.Marshal(b, m, deterministic)
}
func (m *L2RibMacIpRoute) XXX_Merge(src proto.Message) {
	xxx_messageInfo_L2RibMacIpRoute.Merge(m, src)
}
func (m *L2RibMacIpRoute) XXX_Size() int {
	return xxx_messageInfo_L2RibMacIpRoute.Size(m)
}
func (m *L2RibMacIpRoute) XXX_DiscardUnknown() {
	xxx_messageInfo_L2RibMacIpRoute.DiscardUnknown(m)
}

var xxx_messageInfo_L2RibMacIpRoute proto.InternalMessageInfo

func (m *L2RibMacIpRoute) GetMacAddress() string {
	if m != nil {
		return m.MacAddress
	}
	return ""
}

func (m *L2RibMacIpRoute) GetIpAddress() string {
	if m != nil {
		return m.IpAddress
	}
	return ""
}

func (m *L2RibMacIpRoute) GetNextHop() *L2RibNextHop {
	if m != nil {
		return m.NextHop
	}
	return nil
}

func (m *L2RibMacIpRoute) GetAdminDistance() uint32 {
	if m != nil {
		return m.AdminDistance
	}
	return 0
}

func (m *L2RibMacIpRoute) GetProducerId() uint32 {
	if m != nil {
		return m.ProducerId
	}
	return 0
}

func (m *L2RibMacIpRoute) GetTopologyId() uint32 {
	if m != nil {
		return m.TopologyId
	}
	return 0
}

type L2RibTlv struct {
	TlvType              uint32   `protobuf:"varint,1,opt,name=tlv_type,json=tlvType,proto3" json:"tlv_type,omitempty"`
	TlvLen               uint32   `protobuf:"varint,2,opt,name=tlv_len,json=tlvLen,proto3" json:"tlv_len,omitempty"`
	TlvVal               []uint32 `protobuf:"varint,3,rep,packed,name=tlv_val,json=tlvVal,proto3" json:"tlv_val,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *L2RibTlv) Reset()         { *m = L2RibTlv{} }
func (m *L2RibTlv) String() string { return proto.CompactTextString(m) }
func (*L2RibTlv) ProtoMessage()    {}
func (*L2RibTlv) Descriptor() ([]byte, []int) {
	return fileDescriptor_8a2d67a1d3f7203a, []int{5}
}

func (m *L2RibTlv) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_L2RibTlv.Unmarshal(m, b)
}
func (m *L2RibTlv) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_L2RibTlv.Marshal(b, m, deterministic)
}
func (m *L2RibTlv) XXX_Merge(src proto.Message) {
	xxx_messageInfo_L2RibTlv.Merge(m, src)
}
func (m *L2RibTlv) XXX_Size() int {
	return xxx_messageInfo_L2RibTlv.Size(m)
}
func (m *L2RibTlv) XXX_DiscardUnknown() {
	xxx_messageInfo_L2RibTlv.DiscardUnknown(m)
}

var xxx_messageInfo_L2RibTlv proto.InternalMessageInfo

func (m *L2RibTlv) GetTlvType() uint32 {
	if m != nil {
		return m.TlvType
	}
	return 0
}

func (m *L2RibTlv) GetTlvLen() uint32 {
	if m != nil {
		return m.TlvLen
	}
	return 0
}

func (m *L2RibTlv) GetTlvVal() []uint32 {
	if m != nil {
		return m.TlvVal
	}
	return nil
}

type L2RibMacIpRouteDetail struct {
	MacIpRoute           *L2RibMacIpRoute `protobuf:"bytes,50,opt,name=mac_ip_route,json=macIpRoute,proto3" json:"mac_ip_route,omitempty"`
	SequenceNumber       uint32           `protobuf:"varint,51,opt,name=sequence_number,json=sequenceNumber,proto3" json:"sequence_number,omitempty"`
	Flags                string           `protobuf:"bytes,52,opt,name=flags,proto3" json:"flags,omitempty"`
	Soo                  uint32           `protobuf:"varint,53,opt,name=soo,proto3" json:"soo,omitempty"`
	LastUpdateTimestamp  uint64           `protobuf:"varint,54,opt,name=last_update_timestamp,json=lastUpdateTimestamp,proto3" json:"last_update_timestamp,omitempty"`
	RtTlv                *L2RibTlv        `protobuf:"bytes,55,opt,name=rt_tlv,json=rtTlv,proto3" json:"rt_tlv,omitempty"`
	NhTlv                *L2RibTlv        `protobuf:"bytes,56,opt,name=nh_tlv,json=nhTlv,proto3" json:"nh_tlv,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *L2RibMacIpRouteDetail) Reset()         { *m = L2RibMacIpRouteDetail{} }
func (m *L2RibMacIpRouteDetail) String() string { return proto.CompactTextString(m) }
func (*L2RibMacIpRouteDetail) ProtoMessage()    {}
func (*L2RibMacIpRouteDetail) Descriptor() ([]byte, []int) {
	return fileDescriptor_8a2d67a1d3f7203a, []int{6}
}

func (m *L2RibMacIpRouteDetail) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_L2RibMacIpRouteDetail.Unmarshal(m, b)
}
func (m *L2RibMacIpRouteDetail) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_L2RibMacIpRouteDetail.Marshal(b, m, deterministic)
}
func (m *L2RibMacIpRouteDetail) XXX_Merge(src proto.Message) {
	xxx_messageInfo_L2RibMacIpRouteDetail.Merge(m, src)
}
func (m *L2RibMacIpRouteDetail) XXX_Size() int {
	return xxx_messageInfo_L2RibMacIpRouteDetail.Size(m)
}
func (m *L2RibMacIpRouteDetail) XXX_DiscardUnknown() {
	xxx_messageInfo_L2RibMacIpRouteDetail.DiscardUnknown(m)
}

var xxx_messageInfo_L2RibMacIpRouteDetail proto.InternalMessageInfo

func (m *L2RibMacIpRouteDetail) GetMacIpRoute() *L2RibMacIpRoute {
	if m != nil {
		return m.MacIpRoute
	}
	return nil
}

func (m *L2RibMacIpRouteDetail) GetSequenceNumber() uint32 {
	if m != nil {
		return m.SequenceNumber
	}
	return 0
}

func (m *L2RibMacIpRouteDetail) GetFlags() string {
	if m != nil {
		return m.Flags
	}
	return ""
}

func (m *L2RibMacIpRouteDetail) GetSoo() uint32 {
	if m != nil {
		return m.Soo
	}
	return 0
}

func (m *L2RibMacIpRouteDetail) GetLastUpdateTimestamp() uint64 {
	if m != nil {
		return m.LastUpdateTimestamp
	}
	return 0
}

func (m *L2RibMacIpRouteDetail) GetRtTlv() *L2RibTlv {
	if m != nil {
		return m.RtTlv
	}
	return nil
}

func (m *L2RibMacIpRouteDetail) GetNhTlv() *L2RibTlv {
	if m != nil {
		return m.NhTlv
	}
	return nil
}

func init() {
	proto.RegisterType((*L2RibMacIpRouteDetail_KEYS)(nil), "cisco_ios_xr_l2rib_oper.l2rib.evi_child_tables.macip_details.macip_detail.l2rib_mac_ip_route_detail_KEYS")
	proto.RegisterType((*LabeledNextHop)(nil), "cisco_ios_xr_l2rib_oper.l2rib.evi_child_tables.macip_details.macip_detail.labeled_next_hop")
	proto.RegisterType((*NextHop)(nil), "cisco_ios_xr_l2rib_oper.l2rib.evi_child_tables.macip_details.macip_detail.next_hop")
	proto.RegisterType((*L2RibNextHop)(nil), "cisco_ios_xr_l2rib_oper.l2rib.evi_child_tables.macip_details.macip_detail.l2rib_next_hop")
	proto.RegisterType((*L2RibMacIpRoute)(nil), "cisco_ios_xr_l2rib_oper.l2rib.evi_child_tables.macip_details.macip_detail.l2rib_mac_ip_route")
	proto.RegisterType((*L2RibTlv)(nil), "cisco_ios_xr_l2rib_oper.l2rib.evi_child_tables.macip_details.macip_detail.l2rib_tlv")
	proto.RegisterType((*L2RibMacIpRouteDetail)(nil), "cisco_ios_xr_l2rib_oper.l2rib.evi_child_tables.macip_details.macip_detail.l2rib_mac_ip_route_detail")
}

func init() { proto.RegisterFile("l2rib_mac_ip_route_detail.proto", fileDescriptor_8a2d67a1d3f7203a) }

var fileDescriptor_8a2d67a1d3f7203a = []byte{
	// 715 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x55, 0xcf, 0x6f, 0xd3, 0x4a,
	0x10, 0x56, 0x9a, 0xc6, 0x49, 0xa6, 0x2f, 0x6d, 0xb4, 0xef, 0x55, 0x75, 0x9f, 0x04, 0xad, 0x2c,
	0x21, 0xca, 0x25, 0x87, 0xb4, 0x14, 0xae, 0x48, 0x80, 0x1a, 0x81, 0x38, 0xb8, 0x01, 0x51, 0x21,
	0xb4, 0xda, 0x78, 0xb7, 0xc9, 0x8a, 0xb5, 0x77, 0xf1, 0x6e, 0xac, 0xf4, 0xc4, 0x1d, 0xf1, 0xdf,
	0x20, 0xc4, 0x1f, 0xc7, 0x05, 0xed, 0xd8, 0x4e, 0x7f, 0xa9, 0xe2, 0x12, 0x6e, 0x33, 0xdf, 0xb4,
	0xfb, 0xcd, 0x7c, 0xf3, 0x8d, 0x03, 0x7b, 0x6a, 0x98, 0xcb, 0x09, 0x4d, 0x59, 0x42, 0xa5, 0xa1,
	0xb9, 0x9e, 0x3b, 0x41, 0xb9, 0x70, 0x4c, 0xaa, 0x81, 0xc9, 0xb5, 0xd3, 0x64, 0x94, 0x48, 0x9b,
	0x68, 0x2a, 0xb5, 0xa5, 0x8b, 0x9c, 0x96, 0x7f, 0xad, 0x8d, 0xc8, 0x07, 0x18, 0x0e, 0x44, 0x21,
	0x69, 0x32, 0x93, 0x8a, 0x53, 0xc7, 0x26, 0x4a, 0xd8, 0x41, 0xca, 0x12, 0x69, 0xaa, 0x27, 0xae,
	0x67, 0xd1, 0x8f, 0x06, 0xdc, 0xbf, 0x93, 0x8e, 0xbe, 0x7a, 0x71, 0x76, 0x4a, 0xfa, 0xd0, 0x14,
	0x85, 0x0c, 0x1b, 0xfb, 0x8d, 0x83, 0x5e, 0xec, 0x43, 0xb2, 0x0d, 0x81, 0x63, 0x53, 0x2a, 0x79,
	0xb8, 0x86, 0x60, 0xcb, 0xb1, 0xe9, 0x88, 0x93, 0x5d, 0xe8, 0xf8, 0x47, 0x18, 0xe7, 0x79, 0xd8,
	0xdc, 0x6f, 0x1c, 0x74, 0xe3, 0x76, 0xca, 0x92, 0x67, 0x9c, 0xe7, 0x64, 0x07, 0xda, 0xd2, 0x94,
	0x95, 0x75, 0xac, 0x04, 0xd2, 0x60, 0xe1, 0x1e, 0x00, 0xe3, 0xa9, 0xcc, 0x28, 0x97, 0xd6, 0x85,
	0x2d, 0x7c, 0xae, 0x8b, 0xc8, 0x73, 0x69, 0x9d, 0xff, 0x3f, 0x93, 0x6b, 0xee, 0xa9, 0x02, 0xac,
	0x05, 0x3e, 0x1d, 0xf1, 0xe8, 0x6b, 0x03, 0xfa, 0x8a, 0x4d, 0x84, 0x12, 0x9c, 0x66, 0x62, 0xe1,
	0xe8, 0x4c, 0x1b, 0xf2, 0x00, 0x36, 0x3d, 0x85, 0xb0, 0x96, 0x9e, 0xb3, 0x54, 0xaa, 0x0b, 0x6c,
	0xba, 0x1b, 0xf7, 0x2a, 0xf4, 0x25, 0x82, 0x9e, 0xb3, 0x6a, 0x46, 0x58, 0x8b, 0x23, 0x74, 0xe3,
	0x6e, 0xd9, 0x8f, 0xb0, 0x96, 0xfc, 0x07, 0x2d, 0x7c, 0x19, 0x67, 0xe8, 0xc5, 0x65, 0x42, 0xfe,
	0x87, 0x8e, 0xcc, 0x9c, 0xc8, 0x33, 0xa6, 0x70, 0x84, 0x4e, 0xbc, 0xcc, 0xa3, 0x6f, 0x6b, 0xd0,
	0x59, 0x36, 0x41, 0x60, 0xdd, 0x5d, 0x18, 0x51, 0x51, 0x63, 0xec, 0x31, 0x69, 0x8a, 0xa3, 0x8a,
	0x0b, 0xe3, 0x0a, 0x3b, 0xae, 0x94, 0xc2, 0xd8, 0x4b, 0x9d, 0xb2, 0xa4, 0x92, 0xc8, 0x87, 0xe4,
	0x11, 0xf4, 0x91, 0xe6, 0x9c, 0x25, 0x82, 0xce, 0x58, 0xc6, 0x95, 0x40, 0x95, 0xba, 0xf1, 0xd6,
	0x12, 0x3f, 0x41, 0x98, 0xcc, 0xa1, 0x5d, 0x29, 0x82, 0x5a, 0x6d, 0x0c, 0x3f, 0x0c, 0x56, 0xe6,
	0x93, 0xc1, 0x4d, 0xad, 0xe3, 0x9a, 0xcb, 0xf7, 0xbc, 0x90, 0x3c, 0x6c, 0x97, 0xf6, 0x58, 0x48,
	0x1e, 0xfd, 0x6c, 0xc0, 0x66, 0x49, 0xb6, 0x14, 0x65, 0x0f, 0x36, 0x9c, 0x36, 0x5a, 0xe9, 0xe9,
	0x85, 0xdf, 0x65, 0xe9, 0x25, 0xa8, 0xa1, 0x11, 0xf7, 0xa2, 0x9f, 0x2b, 0x36, 0xb5, 0xb5, 0xa3,
	0x30, 0x21, 0xd9, 0xa5, 0xae, 0xa8, 0xd3, 0xc6, 0xf0, 0x74, 0x85, 0x33, 0x5d, 0xce, 0xe2, 0xa3,
	0x13, 0x6d, 0xa2, 0xef, 0x6b, 0x40, 0x6e, 0x5f, 0x83, 0xef, 0xbe, 0x36, 0xb6, 0x77, 0x4c, 0xb9,
	0x59, 0xa8, 0xbc, 0xed, 0x2d, 0xf3, 0x07, 0x47, 0xb9, 0x5b, 0x63, 0x9c, 0xad, 0x72, 0x35, 0xd7,
	0xa4, 0x5e, 0x0e, 0x53, 0x5e, 0x43, 0x7d, 0x5a, 0x2c, 0x4b, 0x04, 0xfa, 0xaa, 0xe7, 0xaf, 0xa1,
	0x3a, 0x2f, 0x0f, 0xfa, 0xe1, 0xfc, 0x4d, 0xcd, 0x13, 0x91, 0xfb, 0xd5, 0x94, 0x27, 0x08, 0x35,
	0x34, 0xe2, 0x37, 0x77, 0x17, 0xdc, 0xdc, 0x5d, 0xf4, 0x1e, 0xba, 0x65, 0x0f, 0x4e, 0x15, 0xfe,
	0x23, 0xe0, 0x54, 0x41, 0x97, 0x27, 0xd0, 0x8b, 0xdb, 0x4e, 0x15, 0x63, 0x7f, 0x05, 0x3b, 0xe0,
	0x43, 0xaa, 0x44, 0x56, 0x6d, 0x39, 0x70, 0xaa, 0x78, 0x2d, 0xb2, 0xba, 0x50, 0x30, 0x7f, 0x73,
	0xcd, 0xaa, 0xf0, 0x8e, 0xa9, 0xe8, 0x57, 0x13, 0x76, 0xef, 0xfc, 0x3a, 0x91, 0x2f, 0xf0, 0xcf,
	0x55, 0x38, 0x1c, 0xa2, 0xb4, 0x1f, 0x57, 0x2e, 0xed, 0x55, 0x12, 0x5c, 0xfb, 0xc8, 0xc4, 0xe8,
	0x8b, 0x87, 0xb0, 0x65, 0xc5, 0xe7, 0xb9, 0xc8, 0x12, 0x41, 0xb3, 0x79, 0x3a, 0x11, 0x79, 0x78,
	0x88, 0x83, 0x6d, 0xd6, 0xf0, 0x1b, 0x44, 0x2f, 0xdd, 0x7d, 0x84, 0xd6, 0xa8, 0xdc, 0xdd, 0x87,
	0xa6, 0xd5, 0x3a, 0x7c, 0x5c, 0x5e, 0x8e, 0xd5, 0x9a, 0x0c, 0x61, 0x5b, 0x31, 0xeb, 0xe8, 0xdc,
	0x70, 0xe6, 0x04, 0x75, 0x32, 0x15, 0xd6, 0xb1, 0xd4, 0x84, 0xc7, 0xfb, 0x8d, 0x83, 0xf5, 0xf8,
	0x5f, 0x5f, 0x7c, 0x8b, 0xb5, 0x71, 0x5d, 0x22, 0x9f, 0x20, 0xc8, 0x9d, 0x97, 0x3e, 0x7c, 0x82,
	0xf3, 0x8f, 0x57, 0x3e, 0xbf, 0x53, 0x45, 0xdc, 0xca, 0xdd, 0x58, 0x15, 0x9e, 0x2c, 0x9b, 0x21,
	0xd9, 0xd3, 0xbf, 0x49, 0x96, 0xcd, 0xc6, 0xaa, 0x98, 0x04, 0xf8, 0x6b, 0x77, 0xf8, 0x3b, 0x00,
	0x00, 0xff, 0xff, 0xa6, 0x03, 0x6c, 0x7a, 0x10, 0x07, 0x00, 0x00,
}
