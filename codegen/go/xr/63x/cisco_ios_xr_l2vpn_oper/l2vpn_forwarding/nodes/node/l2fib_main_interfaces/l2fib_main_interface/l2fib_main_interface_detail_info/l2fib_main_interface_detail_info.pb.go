/*
Copyright 2019 Cisco Systems

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: l2fib_main_interface_detail_info.proto

package cisco_ios_xr_l2vpn_oper_l2vpn_forwarding_nodes_node_l2fib_main_interfaces_l2fib_main_interface_l2fib_main_interface_detail_info

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type L2FibMainInterfaceDetailInfo_KEYS struct {
	NodeId               string   `protobuf:"bytes,1,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	MainInterfaceId      uint32   `protobuf:"varint,2,opt,name=main_interface_id,json=mainInterfaceId,proto3" json:"main_interface_id,omitempty"`
	MainInterfaceType    string   `protobuf:"bytes,3,opt,name=main_interface_type,json=mainInterfaceType,proto3" json:"main_interface_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *L2FibMainInterfaceDetailInfo_KEYS) Reset()         { *m = L2FibMainInterfaceDetailInfo_KEYS{} }
func (m *L2FibMainInterfaceDetailInfo_KEYS) String() string { return proto.CompactTextString(m) }
func (*L2FibMainInterfaceDetailInfo_KEYS) ProtoMessage()    {}
func (*L2FibMainInterfaceDetailInfo_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_cf0294706f50afcd, []int{0}
}

func (m *L2FibMainInterfaceDetailInfo_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_L2FibMainInterfaceDetailInfo_KEYS.Unmarshal(m, b)
}
func (m *L2FibMainInterfaceDetailInfo_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_L2FibMainInterfaceDetailInfo_KEYS.Marshal(b, m, deterministic)
}
func (m *L2FibMainInterfaceDetailInfo_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_L2FibMainInterfaceDetailInfo_KEYS.Merge(m, src)
}
func (m *L2FibMainInterfaceDetailInfo_KEYS) XXX_Size() int {
	return xxx_messageInfo_L2FibMainInterfaceDetailInfo_KEYS.Size(m)
}
func (m *L2FibMainInterfaceDetailInfo_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_L2FibMainInterfaceDetailInfo_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_L2FibMainInterfaceDetailInfo_KEYS proto.InternalMessageInfo

func (m *L2FibMainInterfaceDetailInfo_KEYS) GetNodeId() string {
	if m != nil {
		return m.NodeId
	}
	return ""
}

func (m *L2FibMainInterfaceDetailInfo_KEYS) GetMainInterfaceId() uint32 {
	if m != nil {
		return m.MainInterfaceId
	}
	return 0
}

func (m *L2FibMainInterfaceDetailInfo_KEYS) GetMainInterfaceType() string {
	if m != nil {
		return m.MainInterfaceType
	}
	return ""
}

type L2VpnEvpnRemoteShgInfo struct {
	NextHop              string   `protobuf:"bytes,1,opt,name=next_hop,json=nextHop,proto3" json:"next_hop,omitempty"`
	Label                uint32   `protobuf:"varint,2,opt,name=label,proto3" json:"label,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *L2VpnEvpnRemoteShgInfo) Reset()         { *m = L2VpnEvpnRemoteShgInfo{} }
func (m *L2VpnEvpnRemoteShgInfo) String() string { return proto.CompactTextString(m) }
func (*L2VpnEvpnRemoteShgInfo) ProtoMessage()    {}
func (*L2VpnEvpnRemoteShgInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_cf0294706f50afcd, []int{1}
}

func (m *L2VpnEvpnRemoteShgInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_L2VpnEvpnRemoteShgInfo.Unmarshal(m, b)
}
func (m *L2VpnEvpnRemoteShgInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_L2VpnEvpnRemoteShgInfo.Marshal(b, m, deterministic)
}
func (m *L2VpnEvpnRemoteShgInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_L2VpnEvpnRemoteShgInfo.Merge(m, src)
}
func (m *L2VpnEvpnRemoteShgInfo) XXX_Size() int {
	return xxx_messageInfo_L2VpnEvpnRemoteShgInfo.Size(m)
}
func (m *L2VpnEvpnRemoteShgInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_L2VpnEvpnRemoteShgInfo.DiscardUnknown(m)
}

var xxx_messageInfo_L2VpnEvpnRemoteShgInfo proto.InternalMessageInfo

func (m *L2VpnEvpnRemoteShgInfo) GetNextHop() string {
	if m != nil {
		return m.NextHop
	}
	return ""
}

func (m *L2VpnEvpnRemoteShgInfo) GetLabel() uint32 {
	if m != nil {
		return m.Label
	}
	return 0
}

type L2FibEvpnRemoteShgInfo struct {
	RemoteSplitHorizonGroupLabel *L2VpnEvpnRemoteShgInfo `protobuf:"bytes,1,opt,name=remote_split_horizon_group_label,json=remoteSplitHorizonGroupLabel,proto3" json:"remote_split_horizon_group_label,omitempty"`
	XXX_NoUnkeyedLiteral         struct{}                `json:"-"`
	XXX_unrecognized             []byte                  `json:"-"`
	XXX_sizecache                int32                   `json:"-"`
}

func (m *L2FibEvpnRemoteShgInfo) Reset()         { *m = L2FibEvpnRemoteShgInfo{} }
func (m *L2FibEvpnRemoteShgInfo) String() string { return proto.CompactTextString(m) }
func (*L2FibEvpnRemoteShgInfo) ProtoMessage()    {}
func (*L2FibEvpnRemoteShgInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_cf0294706f50afcd, []int{2}
}

func (m *L2FibEvpnRemoteShgInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_L2FibEvpnRemoteShgInfo.Unmarshal(m, b)
}
func (m *L2FibEvpnRemoteShgInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_L2FibEvpnRemoteShgInfo.Marshal(b, m, deterministic)
}
func (m *L2FibEvpnRemoteShgInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_L2FibEvpnRemoteShgInfo.Merge(m, src)
}
func (m *L2FibEvpnRemoteShgInfo) XXX_Size() int {
	return xxx_messageInfo_L2FibEvpnRemoteShgInfo.Size(m)
}
func (m *L2FibEvpnRemoteShgInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_L2FibEvpnRemoteShgInfo.DiscardUnknown(m)
}

var xxx_messageInfo_L2FibEvpnRemoteShgInfo proto.InternalMessageInfo

func (m *L2FibEvpnRemoteShgInfo) GetRemoteSplitHorizonGroupLabel() *L2VpnEvpnRemoteShgInfo {
	if m != nil {
		return m.RemoteSplitHorizonGroupLabel
	}
	return nil
}

type L2FibMainInterfaceDetailInfo struct {
	MainInterface             string                    `protobuf:"bytes,50,opt,name=main_interface,json=mainInterface,proto3" json:"main_interface,omitempty"`
	MainIfType                uint32                    `protobuf:"varint,51,opt,name=main_if_type,json=mainIfType,proto3" json:"main_if_type,omitempty"`
	VirtualIfName             string                    `protobuf:"bytes,52,opt,name=virtual_if_name,json=virtualIfName,proto3" json:"virtual_if_name,omitempty"`
	InstanceId                []uint32                  `protobuf:"varint,53,rep,packed,name=instance_id,json=instanceId,proto3" json:"instance_id,omitempty"`
	InstancesState            []string                  `protobuf:"bytes,54,rep,name=instances_state,json=instancesState,proto3" json:"instances_state,omitempty"`
	InstancesProvisioned      []bool                    `protobuf:"varint,55,rep,packed,name=instances_provisioned,json=instancesProvisioned,proto3" json:"instances_provisioned,omitempty"`
	BridgePortCountInstance   []uint32                  `protobuf:"varint,56,rep,packed,name=bridge_port_count_instance,json=bridgePortCountInstance,proto3" json:"bridge_port_count_instance,omitempty"`
	Mac                       string                    `protobuf:"bytes,57,opt,name=mac,proto3" json:"mac,omitempty"`
	EsiId                     uint32                    `protobuf:"varint,58,opt,name=esi_id,json=esiId,proto3" json:"esi_id,omitempty"`
	EthernetSegmentIdentifier []uint32                  `protobuf:"varint,59,rep,packed,name=ethernet_segment_identifier,json=ethernetSegmentIdentifier,proto3" json:"ethernet_segment_identifier,omitempty"`
	EvpnShgLocalLabel         uint32                    `protobuf:"varint,60,opt,name=evpn_shg_local_label,json=evpnShgLocalLabel,proto3" json:"evpn_shg_local_label,omitempty"`
	EvpnShgRemoteInfo         []*L2FibEvpnRemoteShgInfo `protobuf:"bytes,61,rep,name=evpn_shg_remote_info,json=evpnShgRemoteInfo,proto3" json:"evpn_shg_remote_info,omitempty"`
	XXX_NoUnkeyedLiteral      struct{}                  `json:"-"`
	XXX_unrecognized          []byte                    `json:"-"`
	XXX_sizecache             int32                     `json:"-"`
}

func (m *L2FibMainInterfaceDetailInfo) Reset()         { *m = L2FibMainInterfaceDetailInfo{} }
func (m *L2FibMainInterfaceDetailInfo) String() string { return proto.CompactTextString(m) }
func (*L2FibMainInterfaceDetailInfo) ProtoMessage()    {}
func (*L2FibMainInterfaceDetailInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_cf0294706f50afcd, []int{3}
}

func (m *L2FibMainInterfaceDetailInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_L2FibMainInterfaceDetailInfo.Unmarshal(m, b)
}
func (m *L2FibMainInterfaceDetailInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_L2FibMainInterfaceDetailInfo.Marshal(b, m, deterministic)
}
func (m *L2FibMainInterfaceDetailInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_L2FibMainInterfaceDetailInfo.Merge(m, src)
}
func (m *L2FibMainInterfaceDetailInfo) XXX_Size() int {
	return xxx_messageInfo_L2FibMainInterfaceDetailInfo.Size(m)
}
func (m *L2FibMainInterfaceDetailInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_L2FibMainInterfaceDetailInfo.DiscardUnknown(m)
}

var xxx_messageInfo_L2FibMainInterfaceDetailInfo proto.InternalMessageInfo

func (m *L2FibMainInterfaceDetailInfo) GetMainInterface() string {
	if m != nil {
		return m.MainInterface
	}
	return ""
}

func (m *L2FibMainInterfaceDetailInfo) GetMainIfType() uint32 {
	if m != nil {
		return m.MainIfType
	}
	return 0
}

func (m *L2FibMainInterfaceDetailInfo) GetVirtualIfName() string {
	if m != nil {
		return m.VirtualIfName
	}
	return ""
}

func (m *L2FibMainInterfaceDetailInfo) GetInstanceId() []uint32 {
	if m != nil {
		return m.InstanceId
	}
	return nil
}

func (m *L2FibMainInterfaceDetailInfo) GetInstancesState() []string {
	if m != nil {
		return m.InstancesState
	}
	return nil
}

func (m *L2FibMainInterfaceDetailInfo) GetInstancesProvisioned() []bool {
	if m != nil {
		return m.InstancesProvisioned
	}
	return nil
}

func (m *L2FibMainInterfaceDetailInfo) GetBridgePortCountInstance() []uint32 {
	if m != nil {
		return m.BridgePortCountInstance
	}
	return nil
}

func (m *L2FibMainInterfaceDetailInfo) GetMac() string {
	if m != nil {
		return m.Mac
	}
	return ""
}

func (m *L2FibMainInterfaceDetailInfo) GetEsiId() uint32 {
	if m != nil {
		return m.EsiId
	}
	return 0
}

func (m *L2FibMainInterfaceDetailInfo) GetEthernetSegmentIdentifier() []uint32 {
	if m != nil {
		return m.EthernetSegmentIdentifier
	}
	return nil
}

func (m *L2FibMainInterfaceDetailInfo) GetEvpnShgLocalLabel() uint32 {
	if m != nil {
		return m.EvpnShgLocalLabel
	}
	return 0
}

func (m *L2FibMainInterfaceDetailInfo) GetEvpnShgRemoteInfo() []*L2FibEvpnRemoteShgInfo {
	if m != nil {
		return m.EvpnShgRemoteInfo
	}
	return nil
}

func init() {
	proto.RegisterType((*L2FibMainInterfaceDetailInfo_KEYS)(nil), "cisco_ios_xr_l2vpn_oper.l2vpn_forwarding.nodes.node.l2fib_main_interfaces.l2fib_main_interface.l2fib_main_interface_detail_info.l2fib_main_interface_detail_info_KEYS")
	proto.RegisterType((*L2VpnEvpnRemoteShgInfo)(nil), "cisco_ios_xr_l2vpn_oper.l2vpn_forwarding.nodes.node.l2fib_main_interfaces.l2fib_main_interface.l2fib_main_interface_detail_info.l2vpn_evpn_remote_shg_info")
	proto.RegisterType((*L2FibEvpnRemoteShgInfo)(nil), "cisco_ios_xr_l2vpn_oper.l2vpn_forwarding.nodes.node.l2fib_main_interfaces.l2fib_main_interface.l2fib_main_interface_detail_info.l2fib_evpn_remote_shg_info")
	proto.RegisterType((*L2FibMainInterfaceDetailInfo)(nil), "cisco_ios_xr_l2vpn_oper.l2vpn_forwarding.nodes.node.l2fib_main_interfaces.l2fib_main_interface.l2fib_main_interface_detail_info.l2fib_main_interface_detail_info")
}

func init() {
	proto.RegisterFile("l2fib_main_interface_detail_info.proto", fileDescriptor_cf0294706f50afcd)
}

var fileDescriptor_cf0294706f50afcd = []byte{
	// 584 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xcc, 0x54, 0xcb, 0x6e, 0xd4, 0x30,
	0x14, 0x55, 0x1a, 0xf5, 0xe5, 0xd2, 0x96, 0x9a, 0x56, 0x4d, 0x0b, 0x12, 0x51, 0xa5, 0x96, 0x11,
	0x8b, 0x20, 0x4d, 0x79, 0x17, 0xd8, 0x20, 0x44, 0x23, 0x0a, 0xaa, 0x32, 0x6c, 0x58, 0x59, 0x9e,
	0xf8, 0x26, 0x63, 0x29, 0xb1, 0x23, 0xdb, 0x2d, 0x2d, 0x1b, 0x16, 0x7c, 0x06, 0xfc, 0x08, 0x1f,
	0xc1, 0x5f, 0xf0, 0x21, 0xc8, 0x76, 0x32, 0xa5, 0xd5, 0x54, 0xb3, 0x84, 0x4d, 0x94, 0x7b, 0xee,
	0xc9, 0xb9, 0x8f, 0x73, 0x67, 0xd0, 0x5e, 0xd5, 0x2f, 0xf8, 0x90, 0xd4, 0x94, 0x0b, 0xc2, 0x85,
	0x01, 0x55, 0xd0, 0x1c, 0x08, 0x03, 0x43, 0x79, 0x45, 0xb8, 0x28, 0x64, 0xd2, 0x28, 0x69, 0x24,
	0xfe, 0x9a, 0x73, 0x9d, 0x4b, 0xc2, 0xa5, 0x26, 0x67, 0x8a, 0x54, 0xfd, 0xd3, 0x46, 0x10, 0xd9,
	0x80, 0x4a, 0xfc, 0x6b, 0x21, 0xd5, 0x67, 0xaa, 0x18, 0x17, 0x65, 0x22, 0x24, 0x03, 0xed, 0x9e,
	0xc9, 0x24, 0x6d, 0x3d, 0x11, 0x4d, 0xa6, 0xb5, 0xb1, 0xf3, 0x23, 0x40, 0xbb, 0xd3, 0x48, 0xe4,
	0xdd, 0x9b, 0x4f, 0x03, 0xbc, 0x89, 0xe6, 0x6d, 0x75, 0xc2, 0x59, 0x14, 0xc4, 0x41, 0x6f, 0x31,
	0x9b, 0xb3, 0x61, 0xca, 0xf0, 0x7d, 0xb4, 0x76, 0xe5, 0x5b, 0xce, 0xa2, 0x99, 0x38, 0xe8, 0x2d,
	0x67, 0xab, 0x36, 0x91, 0x76, 0x78, 0xca, 0x70, 0x82, 0x6e, 0x5d, 0xe1, 0x9a, 0xf3, 0x06, 0xa2,
	0xd0, 0x09, 0xae, 0x5d, 0x62, 0x7f, 0x3c, 0x6f, 0x60, 0xe7, 0x3d, 0xda, 0xf6, 0x9b, 0x00, 0xfb,
	0x50, 0x50, 0x4b, 0x03, 0x44, 0x8f, 0x4a, 0xd7, 0x17, 0xde, 0x42, 0x0b, 0x02, 0xce, 0x0c, 0x19,
	0xc9, 0xa6, 0xed, 0x69, 0xde, 0xc6, 0x87, 0xb2, 0xc1, 0xeb, 0x68, 0xb6, 0xa2, 0x43, 0xa8, 0xda,
	0x46, 0x7c, 0xb0, 0xf3, 0x6d, 0xc6, 0xea, 0xd9, 0x69, 0x27, 0xea, 0xfd, 0x0e, 0x50, 0xdc, 0x61,
	0x4d, 0xc5, 0xad, 0xb0, 0xe2, 0x5f, 0xa4, 0x20, 0xa5, 0x92, 0x27, 0x0d, 0xf1, 0x82, 0xb6, 0xd0,
	0x52, 0xff, 0x7b, 0x90, 0xfc, 0x63, 0xeb, 0x92, 0xeb, 0x17, 0x93, 0xdd, 0xf1, 0xc0, 0xc0, 0x0e,
	0x71, 0xe8, 0x67, 0x78, 0x6b, 0x47, 0x38, 0x72, 0x5b, 0xf8, 0x39, 0x8b, 0xe2, 0x69, 0xea, 0x78,
	0x17, 0xad, 0x5c, 0xce, 0x46, 0x7d, 0xb7, 0xe1, 0xe5, 0x4b, 0x26, 0xe1, 0x18, 0xdd, 0xf0, 0xb4,
	0xc2, 0x3b, 0xb9, 0xef, 0xd6, 0x8d, 0x1c, 0xa9, 0xb0, 0x16, 0xe2, 0x3d, 0xb4, 0x7a, 0xca, 0x95,
	0x39, 0xa1, 0x95, 0x25, 0x09, 0x5a, 0x43, 0xf4, 0xd0, 0x2b, 0xb5, 0x70, 0x5a, 0x7c, 0xa0, 0x35,
	0xe0, 0xbb, 0x68, 0x89, 0x0b, 0x6d, 0xa8, 0xf0, 0x07, 0xf4, 0x28, 0x0e, 0xad, 0x50, 0x07, 0xa5,
	0x0c, 0xdf, 0x43, 0xab, 0x5d, 0xa4, 0x89, 0x36, 0xd4, 0x40, 0xf4, 0x38, 0x0e, 0x7b, 0x8b, 0xd9,
	0xca, 0x18, 0x1e, 0x58, 0x14, 0xef, 0xa3, 0x8d, 0x0b, 0x62, 0xa3, 0xe4, 0x29, 0xd7, 0x5c, 0x0a,
	0x60, 0xd1, 0x93, 0x38, 0xec, 0x2d, 0x64, 0xeb, 0xe3, 0xe4, 0xf1, 0x45, 0x0e, 0x1f, 0xa0, 0xed,
	0xa1, 0xe2, 0xac, 0x04, 0xd2, 0x48, 0x65, 0x48, 0x2e, 0x4f, 0x84, 0x21, 0x1d, 0x33, 0x7a, 0xea,
	0xba, 0xd9, 0xf4, 0x8c, 0x63, 0xa9, 0xcc, 0x6b, 0x9b, 0x4f, 0xdb, 0x34, 0xbe, 0x89, 0xc2, 0x9a,
	0xe6, 0xd1, 0x33, 0x37, 0x97, 0x7d, 0xc5, 0x1b, 0x68, 0x0e, 0x34, 0xb7, 0x83, 0x3c, 0xf7, 0x07,
	0x08, 0x9a, 0xa7, 0x0c, 0xbf, 0x42, 0xb7, 0xc1, 0x8c, 0x40, 0x09, 0x30, 0x44, 0x43, 0x59, 0x83,
	0x2d, 0xc2, 0x40, 0x18, 0x5e, 0x70, 0x50, 0xd1, 0x81, 0x2b, 0xb3, 0xd5, 0x51, 0x06, 0x9e, 0x91,
	0x8e, 0x09, 0xf8, 0x01, 0x5a, 0x77, 0x86, 0x5b, 0xa7, 0x2b, 0x99, 0xd3, 0xaa, 0x3d, 0xca, 0x17,
	0xae, 0xc8, 0x9a, 0xcd, 0x0d, 0x46, 0xe5, 0x91, 0xcd, 0x38, 0xaf, 0xf1, 0xaf, 0xe0, 0xaf, 0x2f,
	0xda, 0x33, 0xb1, 0xfe, 0x46, 0x2f, 0xe3, 0xf0, 0x7f, 0x39, 0xe3, 0xeb, 0x7e, 0x8f, 0xe3, 0x79,
	0x32, 0x87, 0xa7, 0xa2, 0x90, 0xc3, 0x39, 0xf7, 0xbf, 0xb9, 0xff, 0x27, 0x00, 0x00, 0xff, 0xff,
	0xe7, 0x44, 0xa9, 0x8f, 0x61, 0x05, 0x00, 0x00,
}
