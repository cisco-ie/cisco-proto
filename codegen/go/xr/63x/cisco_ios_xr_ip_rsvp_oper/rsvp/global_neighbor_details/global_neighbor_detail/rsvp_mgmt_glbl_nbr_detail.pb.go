/*
Copyright 2019 Cisco Systems

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: rsvp_mgmt_glbl_nbr_detail.proto

package cisco_ios_xr_ip_rsvp_oper_rsvp_global_neighbor_details_global_neighbor_detail

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type RsvpMgmtGlblNbrDetail_KEYS struct {
	NeighborAddress      string   `protobuf:"bytes,1,opt,name=neighbor_address,json=neighborAddress,proto3" json:"neighbor_address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RsvpMgmtGlblNbrDetail_KEYS) Reset()         { *m = RsvpMgmtGlblNbrDetail_KEYS{} }
func (m *RsvpMgmtGlblNbrDetail_KEYS) String() string { return proto.CompactTextString(m) }
func (*RsvpMgmtGlblNbrDetail_KEYS) ProtoMessage()    {}
func (*RsvpMgmtGlblNbrDetail_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_a73a6b4b7731b8ef, []int{0}
}

func (m *RsvpMgmtGlblNbrDetail_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RsvpMgmtGlblNbrDetail_KEYS.Unmarshal(m, b)
}
func (m *RsvpMgmtGlblNbrDetail_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RsvpMgmtGlblNbrDetail_KEYS.Marshal(b, m, deterministic)
}
func (m *RsvpMgmtGlblNbrDetail_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RsvpMgmtGlblNbrDetail_KEYS.Merge(m, src)
}
func (m *RsvpMgmtGlblNbrDetail_KEYS) XXX_Size() int {
	return xxx_messageInfo_RsvpMgmtGlblNbrDetail_KEYS.Size(m)
}
func (m *RsvpMgmtGlblNbrDetail_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_RsvpMgmtGlblNbrDetail_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_RsvpMgmtGlblNbrDetail_KEYS proto.InternalMessageInfo

func (m *RsvpMgmtGlblNbrDetail_KEYS) GetNeighborAddress() string {
	if m != nil {
		return m.NeighborAddress
	}
	return ""
}

type RsvpMgmtGlblNbrFlags struct {
	IsApplicationOuni    bool     `protobuf:"varint,1,opt,name=is_application_ouni,json=isApplicationOuni,proto3" json:"is_application_ouni,omitempty"`
	IsApplicationMpls    bool     `protobuf:"varint,2,opt,name=is_application_mpls,json=isApplicationMpls,proto3" json:"is_application_mpls,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RsvpMgmtGlblNbrFlags) Reset()         { *m = RsvpMgmtGlblNbrFlags{} }
func (m *RsvpMgmtGlblNbrFlags) String() string { return proto.CompactTextString(m) }
func (*RsvpMgmtGlblNbrFlags) ProtoMessage()    {}
func (*RsvpMgmtGlblNbrFlags) Descriptor() ([]byte, []int) {
	return fileDescriptor_a73a6b4b7731b8ef, []int{1}
}

func (m *RsvpMgmtGlblNbrFlags) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RsvpMgmtGlblNbrFlags.Unmarshal(m, b)
}
func (m *RsvpMgmtGlblNbrFlags) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RsvpMgmtGlblNbrFlags.Marshal(b, m, deterministic)
}
func (m *RsvpMgmtGlblNbrFlags) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RsvpMgmtGlblNbrFlags.Merge(m, src)
}
func (m *RsvpMgmtGlblNbrFlags) XXX_Size() int {
	return xxx_messageInfo_RsvpMgmtGlblNbrFlags.Size(m)
}
func (m *RsvpMgmtGlblNbrFlags) XXX_DiscardUnknown() {
	xxx_messageInfo_RsvpMgmtGlblNbrFlags.DiscardUnknown(m)
}

var xxx_messageInfo_RsvpMgmtGlblNbrFlags proto.InternalMessageInfo

func (m *RsvpMgmtGlblNbrFlags) GetIsApplicationOuni() bool {
	if m != nil {
		return m.IsApplicationOuni
	}
	return false
}

func (m *RsvpMgmtGlblNbrFlags) GetIsApplicationMpls() bool {
	if m != nil {
		return m.IsApplicationMpls
	}
	return false
}

type RsvpMgmtTimespec struct {
	Seconds              int32    `protobuf:"zigzag32,1,opt,name=seconds,proto3" json:"seconds,omitempty"`
	Nanoseconds          int32    `protobuf:"zigzag32,2,opt,name=nanoseconds,proto3" json:"nanoseconds,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RsvpMgmtTimespec) Reset()         { *m = RsvpMgmtTimespec{} }
func (m *RsvpMgmtTimespec) String() string { return proto.CompactTextString(m) }
func (*RsvpMgmtTimespec) ProtoMessage()    {}
func (*RsvpMgmtTimespec) Descriptor() ([]byte, []int) {
	return fileDescriptor_a73a6b4b7731b8ef, []int{2}
}

func (m *RsvpMgmtTimespec) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RsvpMgmtTimespec.Unmarshal(m, b)
}
func (m *RsvpMgmtTimespec) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RsvpMgmtTimespec.Marshal(b, m, deterministic)
}
func (m *RsvpMgmtTimespec) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RsvpMgmtTimespec.Merge(m, src)
}
func (m *RsvpMgmtTimespec) XXX_Size() int {
	return xxx_messageInfo_RsvpMgmtTimespec.Size(m)
}
func (m *RsvpMgmtTimespec) XXX_DiscardUnknown() {
	xxx_messageInfo_RsvpMgmtTimespec.DiscardUnknown(m)
}

var xxx_messageInfo_RsvpMgmtTimespec proto.InternalMessageInfo

func (m *RsvpMgmtTimespec) GetSeconds() int32 {
	if m != nil {
		return m.Seconds
	}
	return 0
}

func (m *RsvpMgmtTimespec) GetNanoseconds() int32 {
	if m != nil {
		return m.Nanoseconds
	}
	return 0
}

type RsvpMgmtGlblNbrDetail struct {
	IsGrEnabled             bool                  `protobuf:"varint,50,opt,name=is_gr_enabled,json=isGrEnabled,proto3" json:"is_gr_enabled,omitempty"`
	NodeAddress             string                `protobuf:"bytes,51,opt,name=node_address,json=nodeAddress,proto3" json:"node_address,omitempty"`
	RestartState            string                `protobuf:"bytes,52,opt,name=restart_state,json=restartState,proto3" json:"restart_state,omitempty"`
	GlobalNeighborFlags     *RsvpMgmtGlblNbrFlags `protobuf:"bytes,53,opt,name=global_neighbor_flags,json=globalNeighborFlags,proto3" json:"global_neighbor_flags,omitempty"`
	LocalNodeAddress        []string              `protobuf:"bytes,54,rep,name=local_node_address,json=localNodeAddress,proto3" json:"local_node_address,omitempty"`
	InterfaceNeighbor       []string              `protobuf:"bytes,55,rep,name=interface_neighbor,json=interfaceNeighbor,proto3" json:"interface_neighbor,omitempty"`
	RestartTime             uint32                `protobuf:"varint,56,opt,name=restart_time,json=restartTime,proto3" json:"restart_time,omitempty"`
	IsRestartTimerRunning   bool                  `protobuf:"varint,57,opt,name=is_restart_timer_running,json=isRestartTimerRunning,proto3" json:"is_restart_timer_running,omitempty"`
	RestartTimeLeft         *RsvpMgmtTimespec     `protobuf:"bytes,58,opt,name=restart_time_left,json=restartTimeLeft,proto3" json:"restart_time_left,omitempty"`
	RestartTimerExpiryTime  *RsvpMgmtTimespec     `protobuf:"bytes,59,opt,name=restart_timer_expiry_time,json=restartTimerExpiryTime,proto3" json:"restart_timer_expiry_time,omitempty"`
	RecoveryTime            uint32                `protobuf:"varint,60,opt,name=recovery_time,json=recoveryTime,proto3" json:"recovery_time,omitempty"`
	IsRecoveryTimerRunning  bool                  `protobuf:"varint,61,opt,name=is_recovery_timer_running,json=isRecoveryTimerRunning,proto3" json:"is_recovery_timer_running,omitempty"`
	RecoveryTimeLeft        *RsvpMgmtTimespec     `protobuf:"bytes,62,opt,name=recovery_time_left,json=recoveryTimeLeft,proto3" json:"recovery_time_left,omitempty"`
	RecoveryTimerExpTime    *RsvpMgmtTimespec     `protobuf:"bytes,63,opt,name=recovery_timer_exp_time,json=recoveryTimerExpTime,proto3" json:"recovery_timer_exp_time,omitempty"`
	HelloInterval           uint32                `protobuf:"varint,64,opt,name=hello_interval,json=helloInterval,proto3" json:"hello_interval,omitempty"`
	MissedHellos            uint32                `protobuf:"varint,65,opt,name=missed_hellos,json=missedHellos,proto3" json:"missed_hellos,omitempty"`
	NeighborHelloState      []string              `protobuf:"bytes,66,rep,name=neighbor_hello_state,json=neighborHelloState,proto3" json:"neighbor_hello_state,omitempty"`
	UpTime                  []*RsvpMgmtTimespec   `protobuf:"bytes,67,rep,name=up_time,json=upTime,proto3" json:"up_time,omitempty"`
	LostCommunicationTime   []*RsvpMgmtTimespec   `protobuf:"bytes,68,rep,name=lost_communication_time,json=lostCommunicationTime,proto3" json:"lost_communication_time,omitempty"`
	LostCommunicationReason []string              `protobuf:"bytes,69,rep,name=lost_communication_reason,json=lostCommunicationReason,proto3" json:"lost_communication_reason,omitempty"`
	LostCommunicationTotal  []uint32              `protobuf:"varint,70,rep,packed,name=lost_communication_total,json=lostCommunicationTotal,proto3" json:"lost_communication_total,omitempty"`
	PendingStates           uint32                `protobuf:"varint,71,opt,name=pending_states,json=pendingStates,proto3" json:"pending_states,omitempty"`
	XXX_NoUnkeyedLiteral    struct{}              `json:"-"`
	XXX_unrecognized        []byte                `json:"-"`
	XXX_sizecache           int32                 `json:"-"`
}

func (m *RsvpMgmtGlblNbrDetail) Reset()         { *m = RsvpMgmtGlblNbrDetail{} }
func (m *RsvpMgmtGlblNbrDetail) String() string { return proto.CompactTextString(m) }
func (*RsvpMgmtGlblNbrDetail) ProtoMessage()    {}
func (*RsvpMgmtGlblNbrDetail) Descriptor() ([]byte, []int) {
	return fileDescriptor_a73a6b4b7731b8ef, []int{3}
}

func (m *RsvpMgmtGlblNbrDetail) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RsvpMgmtGlblNbrDetail.Unmarshal(m, b)
}
func (m *RsvpMgmtGlblNbrDetail) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RsvpMgmtGlblNbrDetail.Marshal(b, m, deterministic)
}
func (m *RsvpMgmtGlblNbrDetail) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RsvpMgmtGlblNbrDetail.Merge(m, src)
}
func (m *RsvpMgmtGlblNbrDetail) XXX_Size() int {
	return xxx_messageInfo_RsvpMgmtGlblNbrDetail.Size(m)
}
func (m *RsvpMgmtGlblNbrDetail) XXX_DiscardUnknown() {
	xxx_messageInfo_RsvpMgmtGlblNbrDetail.DiscardUnknown(m)
}

var xxx_messageInfo_RsvpMgmtGlblNbrDetail proto.InternalMessageInfo

func (m *RsvpMgmtGlblNbrDetail) GetIsGrEnabled() bool {
	if m != nil {
		return m.IsGrEnabled
	}
	return false
}

func (m *RsvpMgmtGlblNbrDetail) GetNodeAddress() string {
	if m != nil {
		return m.NodeAddress
	}
	return ""
}

func (m *RsvpMgmtGlblNbrDetail) GetRestartState() string {
	if m != nil {
		return m.RestartState
	}
	return ""
}

func (m *RsvpMgmtGlblNbrDetail) GetGlobalNeighborFlags() *RsvpMgmtGlblNbrFlags {
	if m != nil {
		return m.GlobalNeighborFlags
	}
	return nil
}

func (m *RsvpMgmtGlblNbrDetail) GetLocalNodeAddress() []string {
	if m != nil {
		return m.LocalNodeAddress
	}
	return nil
}

func (m *RsvpMgmtGlblNbrDetail) GetInterfaceNeighbor() []string {
	if m != nil {
		return m.InterfaceNeighbor
	}
	return nil
}

func (m *RsvpMgmtGlblNbrDetail) GetRestartTime() uint32 {
	if m != nil {
		return m.RestartTime
	}
	return 0
}

func (m *RsvpMgmtGlblNbrDetail) GetIsRestartTimerRunning() bool {
	if m != nil {
		return m.IsRestartTimerRunning
	}
	return false
}

func (m *RsvpMgmtGlblNbrDetail) GetRestartTimeLeft() *RsvpMgmtTimespec {
	if m != nil {
		return m.RestartTimeLeft
	}
	return nil
}

func (m *RsvpMgmtGlblNbrDetail) GetRestartTimerExpiryTime() *RsvpMgmtTimespec {
	if m != nil {
		return m.RestartTimerExpiryTime
	}
	return nil
}

func (m *RsvpMgmtGlblNbrDetail) GetRecoveryTime() uint32 {
	if m != nil {
		return m.RecoveryTime
	}
	return 0
}

func (m *RsvpMgmtGlblNbrDetail) GetIsRecoveryTimerRunning() bool {
	if m != nil {
		return m.IsRecoveryTimerRunning
	}
	return false
}

func (m *RsvpMgmtGlblNbrDetail) GetRecoveryTimeLeft() *RsvpMgmtTimespec {
	if m != nil {
		return m.RecoveryTimeLeft
	}
	return nil
}

func (m *RsvpMgmtGlblNbrDetail) GetRecoveryTimerExpTime() *RsvpMgmtTimespec {
	if m != nil {
		return m.RecoveryTimerExpTime
	}
	return nil
}

func (m *RsvpMgmtGlblNbrDetail) GetHelloInterval() uint32 {
	if m != nil {
		return m.HelloInterval
	}
	return 0
}

func (m *RsvpMgmtGlblNbrDetail) GetMissedHellos() uint32 {
	if m != nil {
		return m.MissedHellos
	}
	return 0
}

func (m *RsvpMgmtGlblNbrDetail) GetNeighborHelloState() []string {
	if m != nil {
		return m.NeighborHelloState
	}
	return nil
}

func (m *RsvpMgmtGlblNbrDetail) GetUpTime() []*RsvpMgmtTimespec {
	if m != nil {
		return m.UpTime
	}
	return nil
}

func (m *RsvpMgmtGlblNbrDetail) GetLostCommunicationTime() []*RsvpMgmtTimespec {
	if m != nil {
		return m.LostCommunicationTime
	}
	return nil
}

func (m *RsvpMgmtGlblNbrDetail) GetLostCommunicationReason() []string {
	if m != nil {
		return m.LostCommunicationReason
	}
	return nil
}

func (m *RsvpMgmtGlblNbrDetail) GetLostCommunicationTotal() []uint32 {
	if m != nil {
		return m.LostCommunicationTotal
	}
	return nil
}

func (m *RsvpMgmtGlblNbrDetail) GetPendingStates() uint32 {
	if m != nil {
		return m.PendingStates
	}
	return 0
}

func init() {
	proto.RegisterType((*RsvpMgmtGlblNbrDetail_KEYS)(nil), "cisco_ios_xr_ip_rsvp_oper.rsvp.global_neighbor_details.global_neighbor_detail.rsvp_mgmt_glbl_nbr_detail_KEYS")
	proto.RegisterType((*RsvpMgmtGlblNbrFlags)(nil), "cisco_ios_xr_ip_rsvp_oper.rsvp.global_neighbor_details.global_neighbor_detail.rsvp_mgmt_glbl_nbr_flags")
	proto.RegisterType((*RsvpMgmtTimespec)(nil), "cisco_ios_xr_ip_rsvp_oper.rsvp.global_neighbor_details.global_neighbor_detail.rsvp_mgmt_timespec")
	proto.RegisterType((*RsvpMgmtGlblNbrDetail)(nil), "cisco_ios_xr_ip_rsvp_oper.rsvp.global_neighbor_details.global_neighbor_detail.rsvp_mgmt_glbl_nbr_detail")
}

func init() { proto.RegisterFile("rsvp_mgmt_glbl_nbr_detail.proto", fileDescriptor_a73a6b4b7731b8ef) }

var fileDescriptor_a73a6b4b7731b8ef = []byte{
	// 711 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x56, 0x5b, 0x6f, 0xd3, 0x30,
	0x14, 0x56, 0x36, 0x69, 0x63, 0xee, 0xca, 0x56, 0xef, 0xe6, 0xbe, 0x40, 0x29, 0x42, 0x2a, 0x12,
	0x54, 0x68, 0x03, 0x76, 0xe1, 0x3a, 0x46, 0x37, 0xd0, 0xd8, 0x40, 0x19, 0x2f, 0x3c, 0x59, 0x6e,
	0xe2, 0x66, 0x96, 0x1c, 0x3b, 0xb2, 0xd3, 0x69, 0xec, 0x3f, 0x20, 0x5e, 0x41, 0xf0, 0x97, 0xf8,
	0x4f, 0x28, 0xc7, 0x49, 0x9b, 0x6d, 0xed, 0x1b, 0xf4, 0xad, 0xfd, 0xce, 0x39, 0xf6, 0x77, 0x39,
	0x49, 0x8b, 0x6e, 0x1b, 0x7b, 0x96, 0xd0, 0x38, 0x8a, 0x53, 0x1a, 0xc9, 0xae, 0xa4, 0xaa, 0x6b,
	0x68, 0xc8, 0x53, 0x26, 0x64, 0x3b, 0x31, 0x3a, 0xd5, 0xf8, 0x28, 0x10, 0x36, 0xd0, 0x54, 0x68,
	0x4b, 0xcf, 0x0d, 0x15, 0x09, 0x85, 0x01, 0x9d, 0x70, 0xd3, 0xce, 0x3e, 0xb5, 0x23, 0xa9, 0xbb,
	0x4c, 0x52, 0xc5, 0x45, 0x74, 0xda, 0xd5, 0xc5, 0xb0, 0x1d, 0x83, 0x37, 0x0f, 0xd1, 0xad, 0xb1,
	0x37, 0xd2, 0xc3, 0xce, 0x97, 0x13, 0x7c, 0x1f, 0x2d, 0x0e, 0x86, 0x58, 0x18, 0x1a, 0x6e, 0x2d,
	0xf1, 0x1a, 0x5e, 0x6b, 0xce, 0x5f, 0x28, 0xf0, 0x5d, 0x07, 0x37, 0x2f, 0x10, 0x19, 0x71, 0x58,
	0x4f, 0xb2, 0xc8, 0xe2, 0x36, 0x5a, 0x12, 0x96, 0xb2, 0x24, 0x91, 0x22, 0x60, 0xa9, 0xd0, 0x8a,
	0xea, 0xbe, 0x12, 0x70, 0xd2, 0x0d, 0xbf, 0x26, 0xec, 0xee, 0xb0, 0xf2, 0xb1, 0xaf, 0xc4, 0x88,
	0xfe, 0x38, 0x91, 0x96, 0x4c, 0x8d, 0xe8, 0x3f, 0x4a, 0xa4, 0x6d, 0x7e, 0x42, 0x78, 0x78, 0x77,
	0x2a, 0x62, 0x6e, 0x13, 0x1e, 0x60, 0x82, 0x66, 0x2d, 0x0f, 0xb4, 0x0a, 0x1d, 0xe7, 0x9a, 0x5f,
	0x7c, 0xc5, 0x0d, 0x54, 0x51, 0x4c, 0xe9, 0xa2, 0x3a, 0x05, 0xd5, 0x32, 0xd4, 0xfc, 0x53, 0x45,
	0xf5, 0xb1, 0xde, 0xe0, 0x26, 0xaa, 0x0a, 0x4b, 0x23, 0x43, 0xb9, 0x62, 0x5d, 0xc9, 0x43, 0xb2,
	0x0e, 0xcc, 0x2a, 0xc2, 0x1e, 0x98, 0x8e, 0x83, 0xf0, 0x1d, 0x34, 0xaf, 0x74, 0xc8, 0x07, 0xb6,
	0x6d, 0x80, 0x6d, 0x95, 0x0c, 0xcb, 0x2d, 0xc3, 0x77, 0x51, 0xd5, 0x70, 0x9b, 0x32, 0x93, 0x52,
	0x9b, 0xb2, 0x94, 0x93, 0xc7, 0xd0, 0x33, 0x9f, 0x83, 0x27, 0x19, 0x86, 0x7f, 0x79, 0x68, 0xe5,
	0x6a, 0x7e, 0xe0, 0x2a, 0x79, 0xd2, 0xf0, 0x5a, 0x95, 0xf5, 0xa8, 0xfd, 0x4f, 0x97, 0xa2, 0x3d,
	0x2e, 0x44, 0x7f, 0xc9, 0x0d, 0x1c, 0xe7, 0xfd, 0xfb, 0x90, 0xec, 0x03, 0x84, 0xa5, 0x0e, 0xb2,
	0x63, 0xca, 0x5a, 0x9f, 0x36, 0xa6, 0x5b, 0x73, 0xfe, 0x22, 0x54, 0x8e, 0x4b, 0x82, 0x1f, 0x22,
	0x2c, 0x54, 0xca, 0x4d, 0x8f, 0x05, 0x7c, 0x70, 0x31, 0xd9, 0x84, 0xee, 0xda, 0xa0, 0x52, 0xdc,
	0x90, 0x59, 0x58, 0xf8, 0x93, 0x85, 0x4a, 0xb6, 0x1a, 0x5e, 0xab, 0xea, 0x57, 0x72, 0xec, 0xb3,
	0x88, 0x39, 0xde, 0x44, 0x44, 0x58, 0x5a, 0xee, 0x32, 0xd4, 0xf4, 0x95, 0x12, 0x2a, 0x22, 0xdb,
	0x10, 0xca, 0x8a, 0xb0, 0xfe, 0x70, 0xc0, 0xf8, 0xae, 0x88, 0xbf, 0x79, 0xa8, 0x56, 0x1e, 0xa3,
	0x92, 0xf7, 0x52, 0xb2, 0x03, 0x96, 0xb2, 0xff, 0x66, 0x69, 0xb1, 0x9b, 0xfe, 0x42, 0x49, 0xc4,
	0x07, 0xde, 0x4b, 0xf1, 0x6f, 0x0f, 0xd5, 0x2f, 0xcb, 0xe0, 0xe7, 0x89, 0x30, 0x5f, 0x9d, 0xf2,
	0x67, 0x93, 0xe2, 0xb5, 0x5a, 0xe2, 0x65, 0x3a, 0xc0, 0x00, 0x7c, 0x86, 0x55, 0x0d, 0xf4, 0x19,
	0x2f, 0x18, 0x3d, 0x87, 0x2c, 0xe6, 0x0b, 0x10, 0x9a, 0xb6, 0x51, 0x1d, 0xc2, 0x28, 0xf5, 0x0d,
	0xd3, 0x78, 0x01, 0x69, 0xac, 0x66, 0x69, 0x0c, 0x47, 0x06, 0x71, 0x7c, 0xf7, 0x10, 0xbe, 0x34,
	0xe8, 0xf2, 0x78, 0x39, 0x29, 0xdd, 0x8b, 0x65, 0x21, 0x10, 0xc8, 0x0f, 0x0f, 0xad, 0x5d, 0x91,
	0xc2, 0xcf, 0x13, 0x27, 0xfe, 0xd5, 0xa4, 0x68, 0x2d, 0x97, 0x69, 0x65, 0x79, 0x80, 0xcf, 0xf7,
	0xd0, 0xcd, 0x53, 0x2e, 0xa5, 0xa6, 0xf0, 0xc8, 0x9c, 0x31, 0x49, 0x5e, 0x43, 0x1a, 0x55, 0x40,
	0xdf, 0xe7, 0x60, 0x96, 0x59, 0x2c, 0xac, 0xe5, 0x21, 0x05, 0xdc, 0x92, 0x5d, 0x97, 0x99, 0x03,
	0xdf, 0x01, 0x86, 0x1f, 0xa1, 0xe5, 0x01, 0x0f, 0x77, 0xa8, 0x7b, 0x15, 0xbd, 0x81, 0x87, 0x12,
	0x17, 0x35, 0xe8, 0x76, 0x2f, 0xa4, 0x0b, 0x34, 0xdb, 0xcf, 0x7d, 0xd8, 0x6b, 0x4c, 0x4f, 0xc6,
	0x87, 0x99, 0xbe, 0x53, 0xfe, 0xd3, 0x43, 0x6b, 0x52, 0xdb, 0x94, 0x06, 0x3a, 0x8e, 0xfb, 0xaa,
	0xf8, 0x75, 0x00, 0x32, 0x6f, 0x27, 0x45, 0x66, 0x25, 0x63, 0xb0, 0x57, 0x26, 0x00, 0xdc, 0x76,
	0x50, 0x7d, 0x04, 0x35, 0xc3, 0x99, 0xd5, 0x8a, 0x74, 0xc0, 0xce, 0xb5, 0x6b, 0x93, 0x3e, 0x94,
	0xf1, 0x16, 0x22, 0xa3, 0x64, 0xe9, 0x94, 0x49, 0xb2, 0xdf, 0x98, 0x6e, 0x55, 0xfd, 0xd5, 0xeb,
	0x97, 0x66, 0xd5, 0x6c, 0x17, 0x12, 0xae, 0x42, 0xa1, 0x22, 0x17, 0x9c, 0x25, 0x07, 0x6e, 0x17,
	0x72, 0x14, 0x32, 0xb3, 0xdd, 0x19, 0xf8, 0x03, 0xb1, 0xf1, 0x37, 0x00, 0x00, 0xff, 0xff, 0xf1,
	0xd8, 0xf0, 0xcd, 0x63, 0x08, 0x00, 0x00,
}
