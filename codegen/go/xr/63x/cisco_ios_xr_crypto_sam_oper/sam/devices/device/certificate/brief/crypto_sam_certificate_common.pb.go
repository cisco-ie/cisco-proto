/*
Copyright 2019 Cisco Systems

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: crypto_sam_certificate_common.proto

package cisco_ios_xr_crypto_sam_oper_sam_devices_device_certificate_brief

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type CryptoSamCertificateCommon_KEYS struct {
	DeviceName           string   `protobuf:"bytes,1,opt,name=device_name,json=deviceName,proto3" json:"device_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CryptoSamCertificateCommon_KEYS) Reset()         { *m = CryptoSamCertificateCommon_KEYS{} }
func (m *CryptoSamCertificateCommon_KEYS) String() string { return proto.CompactTextString(m) }
func (*CryptoSamCertificateCommon_KEYS) ProtoMessage()    {}
func (*CryptoSamCertificateCommon_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_38408d80371d2fcb, []int{0}
}

func (m *CryptoSamCertificateCommon_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CryptoSamCertificateCommon_KEYS.Unmarshal(m, b)
}
func (m *CryptoSamCertificateCommon_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CryptoSamCertificateCommon_KEYS.Marshal(b, m, deterministic)
}
func (m *CryptoSamCertificateCommon_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CryptoSamCertificateCommon_KEYS.Merge(m, src)
}
func (m *CryptoSamCertificateCommon_KEYS) XXX_Size() int {
	return xxx_messageInfo_CryptoSamCertificateCommon_KEYS.Size(m)
}
func (m *CryptoSamCertificateCommon_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_CryptoSamCertificateCommon_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_CryptoSamCertificateCommon_KEYS proto.InternalMessageInfo

func (m *CryptoSamCertificateCommon_KEYS) GetDeviceName() string {
	if m != nil {
		return m.DeviceName
	}
	return ""
}

type Flags struct {
	IsTrusted            bool     `protobuf:"varint,1,opt,name=is_trusted,json=isTrusted,proto3" json:"is_trusted,omitempty"`
	IsRevoked            bool     `protobuf:"varint,2,opt,name=is_revoked,json=isRevoked,proto3" json:"is_revoked,omitempty"`
	IsExpired            bool     `protobuf:"varint,3,opt,name=is_expired,json=isExpired,proto3" json:"is_expired,omitempty"`
	IsValidated          bool     `protobuf:"varint,4,opt,name=is_validated,json=isValidated,proto3" json:"is_validated,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Flags) Reset()         { *m = Flags{} }
func (m *Flags) String() string { return proto.CompactTextString(m) }
func (*Flags) ProtoMessage()    {}
func (*Flags) Descriptor() ([]byte, []int) {
	return fileDescriptor_38408d80371d2fcb, []int{1}
}

func (m *Flags) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Flags.Unmarshal(m, b)
}
func (m *Flags) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Flags.Marshal(b, m, deterministic)
}
func (m *Flags) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Flags.Merge(m, src)
}
func (m *Flags) XXX_Size() int {
	return xxx_messageInfo_Flags.Size(m)
}
func (m *Flags) XXX_DiscardUnknown() {
	xxx_messageInfo_Flags.DiscardUnknown(m)
}

var xxx_messageInfo_Flags proto.InternalMessageInfo

func (m *Flags) GetIsTrusted() bool {
	if m != nil {
		return m.IsTrusted
	}
	return false
}

func (m *Flags) GetIsRevoked() bool {
	if m != nil {
		return m.IsRevoked
	}
	return false
}

func (m *Flags) GetIsExpired() bool {
	if m != nil {
		return m.IsExpired
	}
	return false
}

func (m *Flags) GetIsValidated() bool {
	if m != nil {
		return m.IsValidated
	}
	return false
}

type CryptoSamCertificateCommon struct {
	Location             string   `protobuf:"bytes,50,opt,name=location,proto3" json:"location,omitempty"`
	CertificateIndex     uint32   `protobuf:"varint,51,opt,name=certificate_index,json=certificateIndex,proto3" json:"certificate_index,omitempty"`
	CertificateFlags     *Flags   `protobuf:"bytes,52,opt,name=certificate_flags,json=certificateFlags,proto3" json:"certificate_flags,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CryptoSamCertificateCommon) Reset()         { *m = CryptoSamCertificateCommon{} }
func (m *CryptoSamCertificateCommon) String() string { return proto.CompactTextString(m) }
func (*CryptoSamCertificateCommon) ProtoMessage()    {}
func (*CryptoSamCertificateCommon) Descriptor() ([]byte, []int) {
	return fileDescriptor_38408d80371d2fcb, []int{2}
}

func (m *CryptoSamCertificateCommon) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CryptoSamCertificateCommon.Unmarshal(m, b)
}
func (m *CryptoSamCertificateCommon) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CryptoSamCertificateCommon.Marshal(b, m, deterministic)
}
func (m *CryptoSamCertificateCommon) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CryptoSamCertificateCommon.Merge(m, src)
}
func (m *CryptoSamCertificateCommon) XXX_Size() int {
	return xxx_messageInfo_CryptoSamCertificateCommon.Size(m)
}
func (m *CryptoSamCertificateCommon) XXX_DiscardUnknown() {
	xxx_messageInfo_CryptoSamCertificateCommon.DiscardUnknown(m)
}

var xxx_messageInfo_CryptoSamCertificateCommon proto.InternalMessageInfo

func (m *CryptoSamCertificateCommon) GetLocation() string {
	if m != nil {
		return m.Location
	}
	return ""
}

func (m *CryptoSamCertificateCommon) GetCertificateIndex() uint32 {
	if m != nil {
		return m.CertificateIndex
	}
	return 0
}

func (m *CryptoSamCertificateCommon) GetCertificateFlags() *Flags {
	if m != nil {
		return m.CertificateFlags
	}
	return nil
}

func init() {
	proto.RegisterType((*CryptoSamCertificateCommon_KEYS)(nil), "cisco_ios_xr_crypto_sam_oper.sam.devices.device.certificate.brief.crypto_sam_certificate_common_KEYS")
	proto.RegisterType((*Flags)(nil), "cisco_ios_xr_crypto_sam_oper.sam.devices.device.certificate.brief.flags")
	proto.RegisterType((*CryptoSamCertificateCommon)(nil), "cisco_ios_xr_crypto_sam_oper.sam.devices.device.certificate.brief.crypto_sam_certificate_common")
}

func init() {
	proto.RegisterFile("crypto_sam_certificate_common.proto", fileDescriptor_38408d80371d2fcb)
}

var fileDescriptor_38408d80371d2fcb = []byte{
	// 298 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x91, 0xc1, 0x4a, 0x33, 0x31,
	0x14, 0x85, 0xc9, 0xff, 0xab, 0xb4, 0xa9, 0x82, 0x66, 0x15, 0x84, 0x62, 0x1d, 0x37, 0x05, 0x21,
	0x8b, 0xd6, 0x17, 0x70, 0x51, 0x51, 0x04, 0x17, 0xa3, 0x08, 0xae, 0x42, 0x9a, 0xdc, 0xca, 0xc5,
	0x66, 0x32, 0x24, 0x69, 0x19, 0x9f, 0xc0, 0xc7, 0xf4, 0x55, 0x64, 0x32, 0x33, 0x32, 0xdd, 0x74,
	0xe3, 0x2a, 0xe4, 0x3b, 0xe7, 0x9e, 0xcb, 0xe1, 0xd2, 0x2b, 0xed, 0x3f, 0xcb, 0xe8, 0x64, 0x50,
	0x56, 0x6a, 0xf0, 0x11, 0x57, 0xa8, 0x55, 0x04, 0xa9, 0x9d, 0xb5, 0xae, 0x10, 0xa5, 0x77, 0xd1,
	0xb1, 0x5b, 0x8d, 0x41, 0x3b, 0x89, 0x2e, 0xc8, 0xca, 0xcb, 0xde, 0x84, 0x2b, 0xc1, 0x8b, 0xa0,
	0xac, 0x30, 0xb0, 0x45, 0x0d, 0xa1, 0x7d, 0x45, 0x2f, 0x49, 0x2c, 0x3d, 0xc2, 0x2a, 0x5b, 0xd0,
	0x6c, 0xef, 0x26, 0xf9, 0xb8, 0x78, 0x7b, 0x66, 0x17, 0x74, 0xd4, 0x24, 0xc8, 0x42, 0x59, 0xe0,
	0x64, 0x42, 0xa6, 0xc3, 0x9c, 0x36, 0xe8, 0x49, 0x59, 0xc8, 0xbe, 0x08, 0x3d, 0x5c, 0xad, 0xd5,
	0x7b, 0x60, 0x63, 0x4a, 0x31, 0xc8, 0xe8, 0x37, 0x21, 0x82, 0x49, 0xce, 0x41, 0x3e, 0xc4, 0xf0,
	0xd2, 0x80, 0x56, 0xf6, 0xb0, 0x75, 0x1f, 0x60, 0xf8, 0xbf, 0x4e, 0xce, 0x1b, 0xd0, 0xca, 0x50,
	0x95, 0xe8, 0xc1, 0xf0, 0xff, 0x9d, 0xbc, 0x68, 0x00, 0xbb, 0xa4, 0xc7, 0x18, 0xe4, 0x56, 0xad,
	0xd1, 0xa8, 0x3a, 0xfe, 0x20, 0x19, 0x46, 0x18, 0x5e, 0x3b, 0x94, 0x7d, 0x13, 0x3a, 0xde, 0xdb,
	0x88, 0x9d, 0xd3, 0xc1, 0xda, 0x69, 0x15, 0xd1, 0x15, 0x7c, 0x96, 0x9a, 0xfc, 0xfe, 0xd9, 0x35,
	0x3d, 0xeb, 0x4f, 0x60, 0x61, 0xa0, 0xe2, 0xf3, 0x09, 0x99, 0x9e, 0xe4, 0xa7, 0x3d, 0xe1, 0xa1,
	0xe6, 0x6c, 0xb3, 0x6b, 0x4e, 0xfd, 0xf9, 0xcd, 0x84, 0x4c, 0x47, 0xb3, 0x7b, 0xf1, 0xe7, 0xd3,
	0x88, 0x94, 0xb7, 0xb3, 0xf6, 0xae, 0x26, 0xcb, 0xa3, 0x74, 0xfc, 0xf9, 0x4f, 0x00, 0x00, 0x00,
	0xff, 0xff, 0x11, 0x5f, 0x1f, 0x6d, 0x23, 0x02, 0x00, 0x00,
}
