/*
Copyright 2019 Cisco Systems

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: snmp_rxque.proto

package cisco_ios_xr_snmp_agent_oper_snmp_information_rx_queue

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type SnmpRxque_KEYS struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SnmpRxque_KEYS) Reset()         { *m = SnmpRxque_KEYS{} }
func (m *SnmpRxque_KEYS) String() string { return proto.CompactTextString(m) }
func (*SnmpRxque_KEYS) ProtoMessage()    {}
func (*SnmpRxque_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_4fe3bdd33550ca05, []int{0}
}

func (m *SnmpRxque_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SnmpRxque_KEYS.Unmarshal(m, b)
}
func (m *SnmpRxque_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SnmpRxque_KEYS.Marshal(b, m, deterministic)
}
func (m *SnmpRxque_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SnmpRxque_KEYS.Merge(m, src)
}
func (m *SnmpRxque_KEYS) XXX_Size() int {
	return xxx_messageInfo_SnmpRxque_KEYS.Size(m)
}
func (m *SnmpRxque_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_SnmpRxque_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_SnmpRxque_KEYS proto.InternalMessageInfo

type SnmpQueue_ struct {
	Min                  uint32   `protobuf:"varint,1,opt,name=min,proto3" json:"min,omitempty"`
	Avg                  uint32   `protobuf:"varint,2,opt,name=avg,proto3" json:"avg,omitempty"`
	Max                  uint32   `protobuf:"varint,3,opt,name=max,proto3" json:"max,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SnmpQueue_) Reset()         { *m = SnmpQueue_{} }
func (m *SnmpQueue_) String() string { return proto.CompactTextString(m) }
func (*SnmpQueue_) ProtoMessage()    {}
func (*SnmpQueue_) Descriptor() ([]byte, []int) {
	return fileDescriptor_4fe3bdd33550ca05, []int{1}
}

func (m *SnmpQueue_) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SnmpQueue_.Unmarshal(m, b)
}
func (m *SnmpQueue_) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SnmpQueue_.Marshal(b, m, deterministic)
}
func (m *SnmpQueue_) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SnmpQueue_.Merge(m, src)
}
func (m *SnmpQueue_) XXX_Size() int {
	return xxx_messageInfo_SnmpQueue_.Size(m)
}
func (m *SnmpQueue_) XXX_DiscardUnknown() {
	xxx_messageInfo_SnmpQueue_.DiscardUnknown(m)
}

var xxx_messageInfo_SnmpQueue_ proto.InternalMessageInfo

func (m *SnmpQueue_) GetMin() uint32 {
	if m != nil {
		return m.Min
	}
	return 0
}

func (m *SnmpQueue_) GetAvg() uint32 {
	if m != nil {
		return m.Avg
	}
	return 0
}

func (m *SnmpQueue_) GetMax() uint32 {
	if m != nil {
		return m.Max
	}
	return 0
}

type SnmpRxque struct {
	Qlen                 uint32        `protobuf:"varint,50,opt,name=qlen,proto3" json:"qlen,omitempty"`
	InMin                uint32        `protobuf:"varint,51,opt,name=in_min,json=inMin,proto3" json:"in_min,omitempty"`
	InAvg                uint32        `protobuf:"varint,52,opt,name=in_avg,json=inAvg,proto3" json:"in_avg,omitempty"`
	InMax                uint32        `protobuf:"varint,53,opt,name=in_max,json=inMax,proto3" json:"in_max,omitempty"`
	PendMin              uint32        `protobuf:"varint,54,opt,name=pend_min,json=pendMin,proto3" json:"pend_min,omitempty"`
	PendAvg              uint32        `protobuf:"varint,55,opt,name=pend_avg,json=pendAvg,proto3" json:"pend_avg,omitempty"`
	PendMax              uint32        `protobuf:"varint,56,opt,name=pend_max,json=pendMax,proto3" json:"pend_max,omitempty"`
	IncomingQ            []*SnmpQueue_ `protobuf:"bytes,57,rep,name=incoming_q,json=incomingQ,proto3" json:"incoming_q,omitempty"`
	PendingQ             []*SnmpQueue_ `protobuf:"bytes,58,rep,name=pending_q,json=pendingQ,proto3" json:"pending_q,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *SnmpRxque) Reset()         { *m = SnmpRxque{} }
func (m *SnmpRxque) String() string { return proto.CompactTextString(m) }
func (*SnmpRxque) ProtoMessage()    {}
func (*SnmpRxque) Descriptor() ([]byte, []int) {
	return fileDescriptor_4fe3bdd33550ca05, []int{2}
}

func (m *SnmpRxque) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SnmpRxque.Unmarshal(m, b)
}
func (m *SnmpRxque) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SnmpRxque.Marshal(b, m, deterministic)
}
func (m *SnmpRxque) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SnmpRxque.Merge(m, src)
}
func (m *SnmpRxque) XXX_Size() int {
	return xxx_messageInfo_SnmpRxque.Size(m)
}
func (m *SnmpRxque) XXX_DiscardUnknown() {
	xxx_messageInfo_SnmpRxque.DiscardUnknown(m)
}

var xxx_messageInfo_SnmpRxque proto.InternalMessageInfo

func (m *SnmpRxque) GetQlen() uint32 {
	if m != nil {
		return m.Qlen
	}
	return 0
}

func (m *SnmpRxque) GetInMin() uint32 {
	if m != nil {
		return m.InMin
	}
	return 0
}

func (m *SnmpRxque) GetInAvg() uint32 {
	if m != nil {
		return m.InAvg
	}
	return 0
}

func (m *SnmpRxque) GetInMax() uint32 {
	if m != nil {
		return m.InMax
	}
	return 0
}

func (m *SnmpRxque) GetPendMin() uint32 {
	if m != nil {
		return m.PendMin
	}
	return 0
}

func (m *SnmpRxque) GetPendAvg() uint32 {
	if m != nil {
		return m.PendAvg
	}
	return 0
}

func (m *SnmpRxque) GetPendMax() uint32 {
	if m != nil {
		return m.PendMax
	}
	return 0
}

func (m *SnmpRxque) GetIncomingQ() []*SnmpQueue_ {
	if m != nil {
		return m.IncomingQ
	}
	return nil
}

func (m *SnmpRxque) GetPendingQ() []*SnmpQueue_ {
	if m != nil {
		return m.PendingQ
	}
	return nil
}

func init() {
	proto.RegisterType((*SnmpRxque_KEYS)(nil), "cisco_ios_xr_snmp_agent_oper.snmp.information.rx_queue.snmp_rxque_KEYS")
	proto.RegisterType((*SnmpQueue_)(nil), "cisco_ios_xr_snmp_agent_oper.snmp.information.rx_queue.snmp_queue_")
	proto.RegisterType((*SnmpRxque)(nil), "cisco_ios_xr_snmp_agent_oper.snmp.information.rx_queue.snmp_rxque")
}

func init() { proto.RegisterFile("snmp_rxque.proto", fileDescriptor_4fe3bdd33550ca05) }

var fileDescriptor_4fe3bdd33550ca05 = []byte{
	// 286 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x92, 0xbd, 0x4f, 0xc3, 0x30,
	0x10, 0xc5, 0xd5, 0x06, 0x4a, 0x7b, 0x15, 0xa2, 0x58, 0x42, 0x32, 0x5b, 0x95, 0xa9, 0x93, 0x87,
	0x16, 0xca, 0xc7, 0x86, 0x2a, 0x26, 0xc4, 0xd0, 0x32, 0x31, 0x19, 0x37, 0x98, 0xc8, 0x12, 0x39,
	0x27, 0xce, 0x87, 0xfc, 0xc7, 0x33, 0x20, 0x5f, 0x9b, 0xa6, 0x33, 0x62, 0xf3, 0xbd, 0xf7, 0xee,
	0xf7, 0xa4, 0x93, 0x61, 0x52, 0x62, 0x96, 0x4b, 0xe7, 0x8b, 0x5a, 0x8b, 0xdc, 0xd9, 0xca, 0xb2,
	0x65, 0x62, 0xca, 0xc4, 0x4a, 0x63, 0x4b, 0xe9, 0x9d, 0x24, 0x5b, 0xa5, 0x1a, 0x2b, 0x69, 0x73,
	0xed, 0x44, 0x98, 0x85, 0xc1, 0x2f, 0xeb, 0x32, 0x55, 0x19, 0x8b, 0xc2, 0x79, 0x59, 0xd4, 0xba,
	0xd6, 0xf1, 0x25, 0x5c, 0x74, 0x2c, 0xf9, 0xf2, 0xfc, 0xfe, 0x16, 0xaf, 0x60, 0x4c, 0x12, 0x05,
	0x24, 0x9b, 0x40, 0x94, 0x19, 0xe4, 0xbd, 0x69, 0x6f, 0x76, 0xbe, 0x09, 0xcf, 0xa0, 0xa8, 0x26,
	0xe5, 0xfd, 0x9d, 0xa2, 0x9a, 0x94, 0x32, 0xca, 0xf3, 0x68, 0x9f, 0x51, 0x3e, 0xfe, 0xe9, 0x03,
	0x74, 0x60, 0xc6, 0xe0, 0xa4, 0xf8, 0xd6, 0xc8, 0xe7, 0x94, 0xa0, 0x37, 0xbb, 0x82, 0x81, 0x41,
	0x19, 0xd8, 0x0b, 0x52, 0x4f, 0x0d, 0xbe, 0x9a, 0x56, 0x0e, 0x05, 0x37, 0xad, 0xfc, 0xd4, 0xa4,
	0x6d, 0x5a, 0x79, 0x7e, 0x7b, 0x48, 0x2b, 0xcf, 0xae, 0x61, 0x98, 0x6b, 0xfc, 0x24, 0xcc, 0x92,
	0x8c, 0xb3, 0x30, 0x07, 0x50, 0x6b, 0x05, 0xd4, 0x5d, 0x67, 0x05, 0xd8, 0x61, 0x4b, 0x79, 0x7e,
	0x7f, 0xb4, 0xa5, 0x3c, 0xdb, 0x02, 0x18, 0x4c, 0x6c, 0x66, 0x30, 0x95, 0x05, 0x7f, 0x98, 0x46,
	0xb3, 0xf1, 0x7c, 0x25, 0xfe, 0x76, 0x5d, 0x71, 0x74, 0xc7, 0xcd, 0xa8, 0xc5, 0xae, 0xd9, 0x07,
	0x8c, 0x42, 0xdd, 0xae, 0xe2, 0xf1, 0xff, 0x2a, 0x86, 0x7b, 0xea, 0x7a, 0x3b, 0xa0, 0x5f, 0xb1,
	0xf8, 0x0d, 0x00, 0x00, 0xff, 0xff, 0x67, 0xbd, 0x1a, 0x09, 0x29, 0x02, 0x00, 0x00,
}
