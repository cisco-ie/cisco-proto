/*
Copyright 2019 Cisco Systems

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: inv_xml_motherboard_info.proto

package cisco_ios_xr_plat_chas_invmgr_oper_platform_inventory_racks_rack_slots_slot_cards_card_hardware_information_motherboard_information

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type InvXmlMotherboardInfo_KEYS struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Name_1               string   `protobuf:"bytes,2,opt,name=name_1,json=name1,proto3" json:"name_1,omitempty"`
	Name_2               string   `protobuf:"bytes,3,opt,name=name_2,json=name2,proto3" json:"name_2,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *InvXmlMotherboardInfo_KEYS) Reset()         { *m = InvXmlMotherboardInfo_KEYS{} }
func (m *InvXmlMotherboardInfo_KEYS) String() string { return proto.CompactTextString(m) }
func (*InvXmlMotherboardInfo_KEYS) ProtoMessage()    {}
func (*InvXmlMotherboardInfo_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_9dbb9ac4839ed347, []int{0}
}

func (m *InvXmlMotherboardInfo_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InvXmlMotherboardInfo_KEYS.Unmarshal(m, b)
}
func (m *InvXmlMotherboardInfo_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InvXmlMotherboardInfo_KEYS.Marshal(b, m, deterministic)
}
func (m *InvXmlMotherboardInfo_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InvXmlMotherboardInfo_KEYS.Merge(m, src)
}
func (m *InvXmlMotherboardInfo_KEYS) XXX_Size() int {
	return xxx_messageInfo_InvXmlMotherboardInfo_KEYS.Size(m)
}
func (m *InvXmlMotherboardInfo_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_InvXmlMotherboardInfo_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_InvXmlMotherboardInfo_KEYS proto.InternalMessageInfo

func (m *InvXmlMotherboardInfo_KEYS) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *InvXmlMotherboardInfo_KEYS) GetName_1() string {
	if m != nil {
		return m.Name_1
	}
	return ""
}

func (m *InvXmlMotherboardInfo_KEYS) GetName_2() string {
	if m != nil {
		return m.Name_2
	}
	return ""
}

type InvImage struct {
	ImageName            string   `protobuf:"bytes,1,opt,name=image_name,json=imageName,proto3" json:"image_name,omitempty"`
	MajorVersion         uint32   `protobuf:"varint,2,opt,name=major_version,json=majorVersion,proto3" json:"major_version,omitempty"`
	MinorVersion         uint32   `protobuf:"varint,3,opt,name=minor_version,json=minorVersion,proto3" json:"minor_version,omitempty"`
	MicroImageVersion    string   `protobuf:"bytes,4,opt,name=micro_image_version,json=microImageVersion,proto3" json:"micro_image_version,omitempty"`
	PlatformSpecific     string   `protobuf:"bytes,5,opt,name=platform_specific,json=platformSpecific,proto3" json:"platform_specific,omitempty"`
	ReleaseType          string   `protobuf:"bytes,6,opt,name=release_type,json=releaseType,proto3" json:"release_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *InvImage) Reset()         { *m = InvImage{} }
func (m *InvImage) String() string { return proto.CompactTextString(m) }
func (*InvImage) ProtoMessage()    {}
func (*InvImage) Descriptor() ([]byte, []int) {
	return fileDescriptor_9dbb9ac4839ed347, []int{1}
}

func (m *InvImage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InvImage.Unmarshal(m, b)
}
func (m *InvImage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InvImage.Marshal(b, m, deterministic)
}
func (m *InvImage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InvImage.Merge(m, src)
}
func (m *InvImage) XXX_Size() int {
	return xxx_messageInfo_InvImage.Size(m)
}
func (m *InvImage) XXX_DiscardUnknown() {
	xxx_messageInfo_InvImage.DiscardUnknown(m)
}

var xxx_messageInfo_InvImage proto.InternalMessageInfo

func (m *InvImage) GetImageName() string {
	if m != nil {
		return m.ImageName
	}
	return ""
}

func (m *InvImage) GetMajorVersion() uint32 {
	if m != nil {
		return m.MajorVersion
	}
	return 0
}

func (m *InvImage) GetMinorVersion() uint32 {
	if m != nil {
		return m.MinorVersion
	}
	return 0
}

func (m *InvImage) GetMicroImageVersion() string {
	if m != nil {
		return m.MicroImageVersion
	}
	return ""
}

func (m *InvImage) GetPlatformSpecific() string {
	if m != nil {
		return m.PlatformSpecific
	}
	return ""
}

func (m *InvImage) GetReleaseType() string {
	if m != nil {
		return m.ReleaseType
	}
	return ""
}

type InvBootflash struct {
	ImageName            string   `protobuf:"bytes,1,opt,name=image_name,json=imageName,proto3" json:"image_name,omitempty"`
	PlatformType         string   `protobuf:"bytes,2,opt,name=platform_type,json=platformType,proto3" json:"platform_type,omitempty"`
	MajorVersion         uint32   `protobuf:"varint,3,opt,name=major_version,json=majorVersion,proto3" json:"major_version,omitempty"`
	MinorVersion         uint32   `protobuf:"varint,4,opt,name=minor_version,json=minorVersion,proto3" json:"minor_version,omitempty"`
	MicroImageVersion    string   `protobuf:"bytes,5,opt,name=micro_image_version,json=microImageVersion,proto3" json:"micro_image_version,omitempty"`
	PlatformSpecific     string   `protobuf:"bytes,6,opt,name=platform_specific,json=platformSpecific,proto3" json:"platform_specific,omitempty"`
	ReleaseType          string   `protobuf:"bytes,7,opt,name=release_type,json=releaseType,proto3" json:"release_type,omitempty"`
	BootflashType        string   `protobuf:"bytes,8,opt,name=bootflash_type,json=bootflashType,proto3" json:"bootflash_type,omitempty"`
	BootflashSize        uint32   `protobuf:"varint,9,opt,name=bootflash_size,json=bootflashSize,proto3" json:"bootflash_size,omitempty"`
	SectorSize           uint32   `protobuf:"varint,10,opt,name=sector_size,json=sectorSize,proto3" json:"sector_size,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *InvBootflash) Reset()         { *m = InvBootflash{} }
func (m *InvBootflash) String() string { return proto.CompactTextString(m) }
func (*InvBootflash) ProtoMessage()    {}
func (*InvBootflash) Descriptor() ([]byte, []int) {
	return fileDescriptor_9dbb9ac4839ed347, []int{2}
}

func (m *InvBootflash) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InvBootflash.Unmarshal(m, b)
}
func (m *InvBootflash) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InvBootflash.Marshal(b, m, deterministic)
}
func (m *InvBootflash) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InvBootflash.Merge(m, src)
}
func (m *InvBootflash) XXX_Size() int {
	return xxx_messageInfo_InvBootflash.Size(m)
}
func (m *InvBootflash) XXX_DiscardUnknown() {
	xxx_messageInfo_InvBootflash.DiscardUnknown(m)
}

var xxx_messageInfo_InvBootflash proto.InternalMessageInfo

func (m *InvBootflash) GetImageName() string {
	if m != nil {
		return m.ImageName
	}
	return ""
}

func (m *InvBootflash) GetPlatformType() string {
	if m != nil {
		return m.PlatformType
	}
	return ""
}

func (m *InvBootflash) GetMajorVersion() uint32 {
	if m != nil {
		return m.MajorVersion
	}
	return 0
}

func (m *InvBootflash) GetMinorVersion() uint32 {
	if m != nil {
		return m.MinorVersion
	}
	return 0
}

func (m *InvBootflash) GetMicroImageVersion() string {
	if m != nil {
		return m.MicroImageVersion
	}
	return ""
}

func (m *InvBootflash) GetPlatformSpecific() string {
	if m != nil {
		return m.PlatformSpecific
	}
	return ""
}

func (m *InvBootflash) GetReleaseType() string {
	if m != nil {
		return m.ReleaseType
	}
	return ""
}

func (m *InvBootflash) GetBootflashType() string {
	if m != nil {
		return m.BootflashType
	}
	return ""
}

func (m *InvBootflash) GetBootflashSize() uint32 {
	if m != nil {
		return m.BootflashSize
	}
	return 0
}

func (m *InvBootflash) GetSectorSize() uint32 {
	if m != nil {
		return m.SectorSize
	}
	return 0
}

type InvProcessor struct {
	ProcessorType        string   `protobuf:"bytes,1,opt,name=processor_type,json=processorType,proto3" json:"processor_type,omitempty"`
	Speed                string   `protobuf:"bytes,2,opt,name=speed,proto3" json:"speed,omitempty"`
	Revision             string   `protobuf:"bytes,3,opt,name=revision,proto3" json:"revision,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *InvProcessor) Reset()         { *m = InvProcessor{} }
func (m *InvProcessor) String() string { return proto.CompactTextString(m) }
func (*InvProcessor) ProtoMessage()    {}
func (*InvProcessor) Descriptor() ([]byte, []int) {
	return fileDescriptor_9dbb9ac4839ed347, []int{3}
}

func (m *InvProcessor) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InvProcessor.Unmarshal(m, b)
}
func (m *InvProcessor) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InvProcessor.Marshal(b, m, deterministic)
}
func (m *InvProcessor) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InvProcessor.Merge(m, src)
}
func (m *InvProcessor) XXX_Size() int {
	return xxx_messageInfo_InvProcessor.Size(m)
}
func (m *InvProcessor) XXX_DiscardUnknown() {
	xxx_messageInfo_InvProcessor.DiscardUnknown(m)
}

var xxx_messageInfo_InvProcessor proto.InternalMessageInfo

func (m *InvProcessor) GetProcessorType() string {
	if m != nil {
		return m.ProcessorType
	}
	return ""
}

func (m *InvProcessor) GetSpeed() string {
	if m != nil {
		return m.Speed
	}
	return ""
}

func (m *InvProcessor) GetRevision() string {
	if m != nil {
		return m.Revision
	}
	return ""
}

type InvXmlMotherboardInfo struct {
	Rom                  *InvImage     `protobuf:"bytes,50,opt,name=rom,proto3" json:"rom,omitempty"`
	Bootflash            *InvBootflash `protobuf:"bytes,51,opt,name=bootflash,proto3" json:"bootflash,omitempty"`
	Processor            *InvProcessor `protobuf:"bytes,52,opt,name=processor,proto3" json:"processor,omitempty"`
	MainMemorySize       uint64        `protobuf:"varint,53,opt,name=main_memory_size,json=mainMemorySize,proto3" json:"main_memory_size,omitempty"`
	NvramSize            uint64        `protobuf:"varint,54,opt,name=nvram_size,json=nvramSize,proto3" json:"nvram_size,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *InvXmlMotherboardInfo) Reset()         { *m = InvXmlMotherboardInfo{} }
func (m *InvXmlMotherboardInfo) String() string { return proto.CompactTextString(m) }
func (*InvXmlMotherboardInfo) ProtoMessage()    {}
func (*InvXmlMotherboardInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_9dbb9ac4839ed347, []int{4}
}

func (m *InvXmlMotherboardInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InvXmlMotherboardInfo.Unmarshal(m, b)
}
func (m *InvXmlMotherboardInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InvXmlMotherboardInfo.Marshal(b, m, deterministic)
}
func (m *InvXmlMotherboardInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InvXmlMotherboardInfo.Merge(m, src)
}
func (m *InvXmlMotherboardInfo) XXX_Size() int {
	return xxx_messageInfo_InvXmlMotherboardInfo.Size(m)
}
func (m *InvXmlMotherboardInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_InvXmlMotherboardInfo.DiscardUnknown(m)
}

var xxx_messageInfo_InvXmlMotherboardInfo proto.InternalMessageInfo

func (m *InvXmlMotherboardInfo) GetRom() *InvImage {
	if m != nil {
		return m.Rom
	}
	return nil
}

func (m *InvXmlMotherboardInfo) GetBootflash() *InvBootflash {
	if m != nil {
		return m.Bootflash
	}
	return nil
}

func (m *InvXmlMotherboardInfo) GetProcessor() *InvProcessor {
	if m != nil {
		return m.Processor
	}
	return nil
}

func (m *InvXmlMotherboardInfo) GetMainMemorySize() uint64 {
	if m != nil {
		return m.MainMemorySize
	}
	return 0
}

func (m *InvXmlMotherboardInfo) GetNvramSize() uint64 {
	if m != nil {
		return m.NvramSize
	}
	return 0
}

func init() {
	proto.RegisterType((*InvXmlMotherboardInfo_KEYS)(nil), "cisco_ios_xr_plat_chas_invmgr_oper.platform_inventory.racks.rack.slots.slot.cards.card.hardware_information.motherboard_information.inv_xml_motherboard_info_KEYS")
	proto.RegisterType((*InvImage)(nil), "cisco_ios_xr_plat_chas_invmgr_oper.platform_inventory.racks.rack.slots.slot.cards.card.hardware_information.motherboard_information.inv_image")
	proto.RegisterType((*InvBootflash)(nil), "cisco_ios_xr_plat_chas_invmgr_oper.platform_inventory.racks.rack.slots.slot.cards.card.hardware_information.motherboard_information.inv_bootflash")
	proto.RegisterType((*InvProcessor)(nil), "cisco_ios_xr_plat_chas_invmgr_oper.platform_inventory.racks.rack.slots.slot.cards.card.hardware_information.motherboard_information.inv_processor")
	proto.RegisterType((*InvXmlMotherboardInfo)(nil), "cisco_ios_xr_plat_chas_invmgr_oper.platform_inventory.racks.rack.slots.slot.cards.card.hardware_information.motherboard_information.inv_xml_motherboard_info")
}

func init() { proto.RegisterFile("inv_xml_motherboard_info.proto", fileDescriptor_9dbb9ac4839ed347) }

var fileDescriptor_9dbb9ac4839ed347 = []byte{
	// 567 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xcc, 0x95, 0xcf, 0x8a, 0x13, 0x4d,
	0x14, 0xc5, 0xe9, 0x2f, 0x7f, 0xbe, 0xe9, 0x3b, 0xc9, 0x30, 0x53, 0x2a, 0x34, 0x42, 0x34, 0x46,
	0x84, 0x80, 0xd0, 0x30, 0x19, 0xf5, 0x0d, 0x5c, 0x88, 0xe8, 0xa2, 0x23, 0x82, 0xab, 0xa2, 0xd2,
	0xa9, 0x4c, 0x4a, 0x53, 0x7d, 0x9b, 0x5b, 0x4d, 0x9c, 0xcc, 0xd6, 0xad, 0xb8, 0xf0, 0x0d, 0x7c,
	0x04, 0x9f, 0xcc, 0x8d, 0x0f, 0x20, 0x75, 0x3b, 0xa9, 0x0c, 0x86, 0x81, 0xb8, 0xcb, 0xa6, 0xd2,
	0xf5, 0xab, 0xc3, 0xbd, 0xa7, 0x4e, 0x55, 0xa7, 0xe1, 0x81, 0x29, 0x96, 0xf2, 0xca, 0x2e, 0xa4,
	0xc5, 0x6a, 0xae, 0x69, 0x82, 0x8a, 0xa6, 0xd2, 0x14, 0x33, 0x4c, 0x4b, 0xc2, 0x0a, 0xc5, 0x97,
	0x28, 0x37, 0x2e, 0x47, 0x69, 0xd0, 0xc9, 0x2b, 0x92, 0xe5, 0x42, 0x55, 0x32, 0x9f, 0x2b, 0x27,
	0x4d, 0xb1, 0xb4, 0x97, 0x24, 0xb1, 0xd4, 0x94, 0x7a, 0x3a, 0x43, 0xb2, 0x1e, 0xea, 0xa2, 0x42,
	0x5a, 0xa5, 0xa4, 0xf2, 0x4f, 0x8e, 0xc7, 0xd4, 0x2d, 0xb0, 0x72, 0x3c, 0xa6, 0xb9, 0xa2, 0xa9,
	0xe3, 0x31, 0x9d, 0x2b, 0x9a, 0x7e, 0x56, 0xa4, 0xb9, 0x19, 0x59, 0x55, 0x19, 0x2c, 0xd2, 0xbf,
	0x4d, 0xac, 0xf9, 0x40, 0x41, 0xef, 0x36, 0x9f, 0xf2, 0xf5, 0xcb, 0x0f, 0x63, 0x21, 0xa0, 0x59,
	0x28, 0xab, 0x93, 0xa8, 0x1f, 0x0d, 0xe3, 0x8c, 0x9f, 0xc5, 0x3d, 0x68, 0xfb, 0x5f, 0x79, 0x9e,
	0xfc, 0xc7, 0xb4, 0xe5, 0x67, 0xe7, 0x01, 0x8f, 0x92, 0xc6, 0x16, 0x8f, 0x06, 0xbf, 0x23, 0x88,
	0x7d, 0x0f, 0x63, 0xd5, 0xa5, 0x16, 0x3d, 0x00, 0x7e, 0x90, 0x37, 0xaa, 0xc6, 0x4c, 0xde, 0xfa,
	0xd2, 0x8f, 0xa1, 0x6b, 0xd5, 0x47, 0x24, 0xb9, 0xd4, 0xe4, 0x0c, 0x16, 0xdc, 0xa1, 0x9b, 0x75,
	0x18, 0xbe, 0xaf, 0x19, 0x8b, 0x4c, 0x71, 0x43, 0xd4, 0x58, 0x8b, 0x3c, 0xdc, 0x88, 0x52, 0xb8,
	0x63, 0x4d, 0x4e, 0x58, 0xf7, 0x0d, 0xd2, 0x26, 0x77, 0x3c, 0xe3, 0xa5, 0x57, 0x7e, 0x65, 0xa3,
	0x7f, 0x0a, 0x67, 0x21, 0x6d, 0x57, 0xea, 0xdc, 0xcc, 0x4c, 0x9e, 0xb4, 0x58, 0x7d, 0xba, 0x59,
	0x18, 0xaf, 0xb9, 0x78, 0x04, 0x1d, 0xd2, 0x0b, 0xad, 0x9c, 0x96, 0xd5, 0xaa, 0xd4, 0x49, 0x9b,
	0x75, 0xc7, 0x6b, 0xf6, 0x6e, 0x55, 0xea, 0xc1, 0xd7, 0x06, 0x74, 0xfd, 0xb6, 0x27, 0x88, 0xd5,
	0x6c, 0xa1, 0xdc, 0x7c, 0x8f, 0xad, 0x07, 0x03, 0x5c, 0xb4, 0x0e, 0xb7, 0xb3, 0x81, 0xbe, 0xea,
	0x6e, 0x3e, 0x8d, 0x7d, 0xf2, 0x69, 0xee, 0x9f, 0x4f, 0xeb, 0x9f, 0xf2, 0x69, 0xef, 0x99, 0xcf,
	0xff, 0x3b, 0xf9, 0x88, 0x27, 0x70, 0x12, 0xa2, 0xa9, 0x45, 0x47, 0x2c, 0xea, 0x06, 0xba, 0x2b,
	0x73, 0xe6, 0x5a, 0x27, 0x31, 0x6f, 0x66, 0x2b, 0x1b, 0x9b, 0x6b, 0x2d, 0x1e, 0xc2, 0xb1, 0xd3,
	0x79, 0x85, 0x54, 0x6b, 0x80, 0x35, 0x50, 0x23, 0x2f, 0x18, 0xcc, 0xeb, 0xd3, 0x28, 0x09, 0x73,
	0xed, 0x1c, 0x92, 0x2f, 0x1c, 0x26, 0x75, 0xff, 0xfa, 0x44, 0xba, 0x81, 0x72, 0xff, 0xbb, 0xd0,
	0x72, 0xa5, 0xd6, 0xd3, 0xcd, 0x55, 0xe7, 0x89, 0xb8, 0x0f, 0x47, 0xa4, 0x97, 0x26, 0x9c, 0x40,
	0x9c, 0x85, 0xf9, 0xe0, 0x57, 0x13, 0x92, 0xdb, 0xde, 0x29, 0xf1, 0x23, 0x82, 0x06, 0xa1, 0x4d,
	0x46, 0xfd, 0x68, 0x78, 0x3c, 0xfa, 0x16, 0xa5, 0x07, 0xf0, 0x27, 0x90, 0x86, 0xb7, 0x33, 0xf3,
	0xde, 0xc4, 0xcf, 0x08, 0xe2, 0x90, 0x6e, 0x72, 0xc1, 0x4e, 0xbf, 0x1f, 0x8e, 0xd3, 0x60, 0x2d,
	0xdb, 0xba, 0x64, 0xcf, 0xe1, 0xe0, 0x92, 0x67, 0x87, 0xe6, 0x39, 0x58, 0xcb, 0xb6, 0x2e, 0xc5,
	0x10, 0x4e, 0xad, 0x32, 0x85, 0xb4, 0xda, 0x22, 0xad, 0xea, 0x8b, 0xfb, 0xbc, 0x1f, 0x0d, 0x9b,
	0xd9, 0x89, 0xe7, 0x6f, 0x18, 0xf3, 0xed, 0xee, 0x01, 0x14, 0x4b, 0x52, 0xb6, 0xd6, 0xbc, 0x60,
	0x4d, 0xcc, 0xc4, 0x2f, 0x4f, 0xda, 0xfc, 0x45, 0xb9, 0xf8, 0x13, 0x00, 0x00, 0xff, 0xff, 0xae,
	0x8c, 0xa5, 0x3b, 0x73, 0x06, 0x00, 0x00,
}
