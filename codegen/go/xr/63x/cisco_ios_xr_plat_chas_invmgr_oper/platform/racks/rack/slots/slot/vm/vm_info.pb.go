/*
Copyright 2019 Cisco Systems

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: vm_info.proto

package cisco_ios_xr_plat_chas_invmgr_oper_platform_racks_rack_slots_slot_vm

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type VmInfo_KEYS struct {
	RackName             string   `protobuf:"bytes,1,opt,name=rack_name,json=rackName,proto3" json:"rack_name,omitempty"`
	SlotName             string   `protobuf:"bytes,2,opt,name=slot_name,json=slotName,proto3" json:"slot_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VmInfo_KEYS) Reset()         { *m = VmInfo_KEYS{} }
func (m *VmInfo_KEYS) String() string { return proto.CompactTextString(m) }
func (*VmInfo_KEYS) ProtoMessage()    {}
func (*VmInfo_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_9133002fada793e1, []int{0}
}

func (m *VmInfo_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VmInfo_KEYS.Unmarshal(m, b)
}
func (m *VmInfo_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VmInfo_KEYS.Marshal(b, m, deterministic)
}
func (m *VmInfo_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VmInfo_KEYS.Merge(m, src)
}
func (m *VmInfo_KEYS) XXX_Size() int {
	return xxx_messageInfo_VmInfo_KEYS.Size(m)
}
func (m *VmInfo_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_VmInfo_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_VmInfo_KEYS proto.InternalMessageInfo

func (m *VmInfo_KEYS) GetRackName() string {
	if m != nil {
		return m.RackName
	}
	return ""
}

func (m *VmInfo_KEYS) GetSlotName() string {
	if m != nil {
		return m.SlotName
	}
	return ""
}

type VmInfo struct {
	NodeDescription      string   `protobuf:"bytes,50,opt,name=node_description,json=nodeDescription,proto3" json:"node_description,omitempty"`
	RedRole              string   `protobuf:"bytes,51,opt,name=red_role,json=redRole,proto3" json:"red_role,omitempty"`
	PartnerName          string   `protobuf:"bytes,52,opt,name=partner_name,json=partnerName,proto3" json:"partner_name,omitempty"`
	SoftwareStatus       string   `protobuf:"bytes,53,opt,name=software_status,json=softwareStatus,proto3" json:"software_status,omitempty"`
	NodeIp               string   `protobuf:"bytes,54,opt,name=node_ip,json=nodeIp,proto3" json:"node_ip,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VmInfo) Reset()         { *m = VmInfo{} }
func (m *VmInfo) String() string { return proto.CompactTextString(m) }
func (*VmInfo) ProtoMessage()    {}
func (*VmInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_9133002fada793e1, []int{1}
}

func (m *VmInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VmInfo.Unmarshal(m, b)
}
func (m *VmInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VmInfo.Marshal(b, m, deterministic)
}
func (m *VmInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VmInfo.Merge(m, src)
}
func (m *VmInfo) XXX_Size() int {
	return xxx_messageInfo_VmInfo.Size(m)
}
func (m *VmInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_VmInfo.DiscardUnknown(m)
}

var xxx_messageInfo_VmInfo proto.InternalMessageInfo

func (m *VmInfo) GetNodeDescription() string {
	if m != nil {
		return m.NodeDescription
	}
	return ""
}

func (m *VmInfo) GetRedRole() string {
	if m != nil {
		return m.RedRole
	}
	return ""
}

func (m *VmInfo) GetPartnerName() string {
	if m != nil {
		return m.PartnerName
	}
	return ""
}

func (m *VmInfo) GetSoftwareStatus() string {
	if m != nil {
		return m.SoftwareStatus
	}
	return ""
}

func (m *VmInfo) GetNodeIp() string {
	if m != nil {
		return m.NodeIp
	}
	return ""
}

func init() {
	proto.RegisterType((*VmInfo_KEYS)(nil), "cisco_ios_xr_plat_chas_invmgr_oper.platform.racks.rack.slots.slot.vm.vm_info_KEYS")
	proto.RegisterType((*VmInfo)(nil), "cisco_ios_xr_plat_chas_invmgr_oper.platform.racks.rack.slots.slot.vm.vm_info")
}

func init() { proto.RegisterFile("vm_info.proto", fileDescriptor_9133002fada793e1) }

var fileDescriptor_9133002fada793e1 = []byte{
	// 260 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x44, 0x90, 0xb1, 0x4e, 0xc3, 0x30,
	0x10, 0x86, 0x55, 0x86, 0xa6, 0x35, 0x85, 0x22, 0x2f, 0x04, 0xb1, 0x40, 0x17, 0x60, 0xc9, 0x40,
	0x81, 0x27, 0x28, 0x12, 0x08, 0x89, 0xa1, 0x9d, 0x98, 0x4e, 0x26, 0xb9, 0x80, 0x45, 0xec, 0xb3,
	0xce, 0x26, 0xf0, 0x60, 0x3c, 0x20, 0xf2, 0x25, 0x88, 0xe5, 0x24, 0x7f, 0xff, 0xe7, 0xf3, 0x2f,
	0xab, 0x83, 0xde, 0x81, 0xf5, 0x2d, 0x55, 0x81, 0x29, 0x91, 0xde, 0xd4, 0x36, 0xd6, 0x04, 0x96,
	0x22, 0x7c, 0x33, 0x84, 0xce, 0x24, 0xa8, 0xdf, 0x4d, 0x04, 0xeb, 0x7b, 0xf7, 0xc6, 0x40, 0x01,
	0xb9, 0xca, 0xb4, 0x25, 0x76, 0x15, 0x9b, 0xfa, 0x23, 0xca, 0xac, 0x62, 0x47, 0x29, 0xca, 0xac,
	0x7a, 0xb7, 0x7a, 0x50, 0x8b, 0x71, 0x2d, 0x3c, 0xdd, 0xbf, 0xec, 0xf4, 0xa9, 0x9a, 0x67, 0x0b,
	0xbc, 0x71, 0x58, 0x4e, 0xce, 0x26, 0x97, 0xf3, 0xed, 0x2c, 0x83, 0x67, 0xe3, 0x30, 0x87, 0xf9,
	0xde, 0x10, 0xee, 0x0d, 0x61, 0x06, 0x39, 0x5c, 0xfd, 0x4c, 0x54, 0x31, 0xae, 0xd2, 0x57, 0xea,
	0xc8, 0x53, 0x83, 0xd0, 0x60, 0xac, 0xd9, 0x86, 0x64, 0xc9, 0x97, 0xd7, 0xe2, 0x2f, 0x33, 0xdf,
	0xfc, 0x63, 0x7d, 0xa2, 0x66, 0x8c, 0x0d, 0x30, 0x75, 0x58, 0xae, 0x45, 0x29, 0x18, 0x9b, 0x2d,
	0x75, 0xa8, 0xcf, 0xd5, 0x22, 0x18, 0x4e, 0x1e, 0x79, 0x78, 0xf1, 0x46, 0xe2, 0xfd, 0x91, 0x49,
	0xa3, 0x0b, 0xb5, 0x8c, 0xd4, 0xa6, 0x2f, 0xc3, 0x08, 0x31, 0x99, 0xf4, 0x19, 0xcb, 0x5b, 0xb1,
	0x0e, 0xff, 0xf0, 0x4e, 0xa8, 0x3e, 0x56, 0x85, 0x34, 0xb2, 0xa1, 0xbc, 0x13, 0x61, 0x9a, 0x8f,
	0x8f, 0xe1, 0x75, 0x2a, 0xbf, 0xb9, 0xfe, 0x0d, 0x00, 0x00, 0xff, 0xff, 0x88, 0xa6, 0xd3, 0x16,
	0x5e, 0x01, 0x00, 0x00,
}
