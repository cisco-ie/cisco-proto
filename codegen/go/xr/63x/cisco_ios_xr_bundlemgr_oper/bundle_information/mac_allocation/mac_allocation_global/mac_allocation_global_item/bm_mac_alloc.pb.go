/*
Copyright 2019 Cisco Systems

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: bm_mac_alloc.proto

package cisco_ios_xr_bundlemgr_oper_bundle_information_mac_allocation_mac_allocation_global_mac_allocation_global_item

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type BmMacAlloc_KEYS struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BmMacAlloc_KEYS) Reset()         { *m = BmMacAlloc_KEYS{} }
func (m *BmMacAlloc_KEYS) String() string { return proto.CompactTextString(m) }
func (*BmMacAlloc_KEYS) ProtoMessage()    {}
func (*BmMacAlloc_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_47c2a08817ad8ba3, []int{0}
}

func (m *BmMacAlloc_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BmMacAlloc_KEYS.Unmarshal(m, b)
}
func (m *BmMacAlloc_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BmMacAlloc_KEYS.Marshal(b, m, deterministic)
}
func (m *BmMacAlloc_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BmMacAlloc_KEYS.Merge(m, src)
}
func (m *BmMacAlloc_KEYS) XXX_Size() int {
	return xxx_messageInfo_BmMacAlloc_KEYS.Size(m)
}
func (m *BmMacAlloc_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_BmMacAlloc_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_BmMacAlloc_KEYS proto.InternalMessageInfo

type BmMacAddrSt struct {
	Address              string   `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BmMacAddrSt) Reset()         { *m = BmMacAddrSt{} }
func (m *BmMacAddrSt) String() string { return proto.CompactTextString(m) }
func (*BmMacAddrSt) ProtoMessage()    {}
func (*BmMacAddrSt) Descriptor() ([]byte, []int) {
	return fileDescriptor_47c2a08817ad8ba3, []int{1}
}

func (m *BmMacAddrSt) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BmMacAddrSt.Unmarshal(m, b)
}
func (m *BmMacAddrSt) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BmMacAddrSt.Marshal(b, m, deterministic)
}
func (m *BmMacAddrSt) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BmMacAddrSt.Merge(m, src)
}
func (m *BmMacAddrSt) XXX_Size() int {
	return xxx_messageInfo_BmMacAddrSt.Size(m)
}
func (m *BmMacAddrSt) XXX_DiscardUnknown() {
	xxx_messageInfo_BmMacAddrSt.DiscardUnknown(m)
}

var xxx_messageInfo_BmMacAddrSt proto.InternalMessageInfo

func (m *BmMacAddrSt) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

type BmMacAlloc struct {
	MacAddress           []*BmMacAddrSt `protobuf:"bytes,50,rep,name=mac_address,json=macAddress,proto3" json:"mac_address,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *BmMacAlloc) Reset()         { *m = BmMacAlloc{} }
func (m *BmMacAlloc) String() string { return proto.CompactTextString(m) }
func (*BmMacAlloc) ProtoMessage()    {}
func (*BmMacAlloc) Descriptor() ([]byte, []int) {
	return fileDescriptor_47c2a08817ad8ba3, []int{2}
}

func (m *BmMacAlloc) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BmMacAlloc.Unmarshal(m, b)
}
func (m *BmMacAlloc) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BmMacAlloc.Marshal(b, m, deterministic)
}
func (m *BmMacAlloc) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BmMacAlloc.Merge(m, src)
}
func (m *BmMacAlloc) XXX_Size() int {
	return xxx_messageInfo_BmMacAlloc.Size(m)
}
func (m *BmMacAlloc) XXX_DiscardUnknown() {
	xxx_messageInfo_BmMacAlloc.DiscardUnknown(m)
}

var xxx_messageInfo_BmMacAlloc proto.InternalMessageInfo

func (m *BmMacAlloc) GetMacAddress() []*BmMacAddrSt {
	if m != nil {
		return m.MacAddress
	}
	return nil
}

func init() {
	proto.RegisterType((*BmMacAlloc_KEYS)(nil), "cisco_ios_xr_bundlemgr_oper.bundle_information.mac_allocation.mac_allocation_global.mac_allocation_global_item.bm_mac_alloc_KEYS")
	proto.RegisterType((*BmMacAddrSt)(nil), "cisco_ios_xr_bundlemgr_oper.bundle_information.mac_allocation.mac_allocation_global.mac_allocation_global_item.bm_mac_addr_st")
	proto.RegisterType((*BmMacAlloc)(nil), "cisco_ios_xr_bundlemgr_oper.bundle_information.mac_allocation.mac_allocation_global.mac_allocation_global_item.bm_mac_alloc")
}

func init() { proto.RegisterFile("bm_mac_alloc.proto", fileDescriptor_47c2a08817ad8ba3) }

var fileDescriptor_47c2a08817ad8ba3 = []byte{
	// 192 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x4a, 0xca, 0x8d, 0xcf,
	0x4d, 0x4c, 0x8e, 0x4f, 0xcc, 0xc9, 0xc9, 0x4f, 0xd6, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xca,
	0x4b, 0xce, 0x2c, 0x4e, 0xce, 0x8f, 0xcf, 0xcc, 0x2f, 0x8e, 0xaf, 0x28, 0x8a, 0x4f, 0x2a, 0xcd,
	0x4b, 0xc9, 0x49, 0xcd, 0x4d, 0x2f, 0x8a, 0xcf, 0x2f, 0x48, 0x2d, 0xd2, 0x83, 0x70, 0xe3, 0x33,
	0xf3, 0xd2, 0xf2, 0x8b, 0x72, 0x13, 0x4b, 0x32, 0xf3, 0xf3, 0xf4, 0xe0, 0xfa, 0xb1, 0x71, 0xe3,
	0xd3, 0x73, 0xf2, 0x93, 0x12, 0x73, 0xb0, 0x8b, 0xc6, 0x67, 0x96, 0xa4, 0xe6, 0x2a, 0x09, 0x73,
	0x09, 0x22, 0xbb, 0x22, 0xde, 0xdb, 0x35, 0x32, 0x58, 0x49, 0x8b, 0x8b, 0x0f, 0x26, 0x98, 0x92,
	0x52, 0x14, 0x5f, 0x5c, 0x22, 0x24, 0xc1, 0xc5, 0x0e, 0x62, 0xa6, 0x16, 0x17, 0x4b, 0x30, 0x2a,
	0x30, 0x6a, 0x70, 0x06, 0xc1, 0xb8, 0x4a, 0x1b, 0x18, 0xb9, 0x78, 0x90, 0x4d, 0x10, 0x9a, 0xcf,
	0xc8, 0xc5, 0x0d, 0xd3, 0x0a, 0x52, 0x6f, 0xa4, 0xc0, 0xac, 0xc1, 0x6d, 0x54, 0xa7, 0x47, 0x5f,
	0x8f, 0xe9, 0xa1, 0x7a, 0x20, 0x88, 0x2b, 0x37, 0x31, 0xd9, 0x11, 0xe2, 0xa2, 0x24, 0x36, 0x70,
	0x50, 0x1b, 0x03, 0x02, 0x00, 0x00, 0xff, 0xff, 0xb8, 0x23, 0x7b, 0x27, 0x80, 0x01, 0x00, 0x00,
}
