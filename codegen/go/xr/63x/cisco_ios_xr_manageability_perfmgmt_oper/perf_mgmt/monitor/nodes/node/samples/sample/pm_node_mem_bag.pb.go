/*
Copyright 2019 Cisco Systems

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: pm_node_mem_bag.proto

package cisco_ios_xr_manageability_perfmgmt_oper_perf_mgmt_monitor_nodes_node_samples_sample

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type PmNodeMemBag_KEYS struct {
	NodeId               string   `protobuf:"bytes,1,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	SampleId             int32    `protobuf:"varint,2,opt,name=sample_id,json=sampleId,proto3" json:"sample_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PmNodeMemBag_KEYS) Reset()         { *m = PmNodeMemBag_KEYS{} }
func (m *PmNodeMemBag_KEYS) String() string { return proto.CompactTextString(m) }
func (*PmNodeMemBag_KEYS) ProtoMessage()    {}
func (*PmNodeMemBag_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_1f4228fa296845a8, []int{0}
}

func (m *PmNodeMemBag_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PmNodeMemBag_KEYS.Unmarshal(m, b)
}
func (m *PmNodeMemBag_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PmNodeMemBag_KEYS.Marshal(b, m, deterministic)
}
func (m *PmNodeMemBag_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PmNodeMemBag_KEYS.Merge(m, src)
}
func (m *PmNodeMemBag_KEYS) XXX_Size() int {
	return xxx_messageInfo_PmNodeMemBag_KEYS.Size(m)
}
func (m *PmNodeMemBag_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_PmNodeMemBag_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_PmNodeMemBag_KEYS proto.InternalMessageInfo

func (m *PmNodeMemBag_KEYS) GetNodeId() string {
	if m != nil {
		return m.NodeId
	}
	return ""
}

func (m *PmNodeMemBag_KEYS) GetSampleId() int32 {
	if m != nil {
		return m.SampleId
	}
	return 0
}

type PmNodeMemBag struct {
	TimeStamp            uint64   `protobuf:"varint,50,opt,name=time_stamp,json=timeStamp,proto3" json:"time_stamp,omitempty"`
	CurrMemory           uint32   `protobuf:"varint,51,opt,name=curr_memory,json=currMemory,proto3" json:"curr_memory,omitempty"`
	PeakMemory           uint32   `protobuf:"varint,52,opt,name=peak_memory,json=peakMemory,proto3" json:"peak_memory,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PmNodeMemBag) Reset()         { *m = PmNodeMemBag{} }
func (m *PmNodeMemBag) String() string { return proto.CompactTextString(m) }
func (*PmNodeMemBag) ProtoMessage()    {}
func (*PmNodeMemBag) Descriptor() ([]byte, []int) {
	return fileDescriptor_1f4228fa296845a8, []int{1}
}

func (m *PmNodeMemBag) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PmNodeMemBag.Unmarshal(m, b)
}
func (m *PmNodeMemBag) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PmNodeMemBag.Marshal(b, m, deterministic)
}
func (m *PmNodeMemBag) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PmNodeMemBag.Merge(m, src)
}
func (m *PmNodeMemBag) XXX_Size() int {
	return xxx_messageInfo_PmNodeMemBag.Size(m)
}
func (m *PmNodeMemBag) XXX_DiscardUnknown() {
	xxx_messageInfo_PmNodeMemBag.DiscardUnknown(m)
}

var xxx_messageInfo_PmNodeMemBag proto.InternalMessageInfo

func (m *PmNodeMemBag) GetTimeStamp() uint64 {
	if m != nil {
		return m.TimeStamp
	}
	return 0
}

func (m *PmNodeMemBag) GetCurrMemory() uint32 {
	if m != nil {
		return m.CurrMemory
	}
	return 0
}

func (m *PmNodeMemBag) GetPeakMemory() uint32 {
	if m != nil {
		return m.PeakMemory
	}
	return 0
}

func init() {
	proto.RegisterType((*PmNodeMemBag_KEYS)(nil), "cisco_ios_xr_manageability_perfmgmt_oper.perf_mgmt.monitor.nodes.node.samples.sample.pm_node_mem_bag_KEYS")
	proto.RegisterType((*PmNodeMemBag)(nil), "cisco_ios_xr_manageability_perfmgmt_oper.perf_mgmt.monitor.nodes.node.samples.sample.pm_node_mem_bag")
}

func init() { proto.RegisterFile("pm_node_mem_bag.proto", fileDescriptor_1f4228fa296845a8) }

var fileDescriptor_1f4228fa296845a8 = []byte{
	// 234 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x5c, 0x90, 0xc1, 0x4a, 0xc4, 0x30,
	0x10, 0x86, 0x89, 0xe8, 0x6a, 0x23, 0x22, 0x04, 0xc5, 0x82, 0x88, 0x65, 0x4f, 0x3d, 0xe5, 0xe0,
	0xfa, 0x0a, 0x1e, 0x16, 0xf5, 0xd2, 0xf5, 0xe2, 0x69, 0x48, 0xdb, 0x58, 0x82, 0x3b, 0x9d, 0x30,
	0x89, 0xe0, 0xbe, 0xbd, 0x4c, 0xeb, 0x5e, 0x7a, 0x49, 0xf8, 0xbf, 0x7c, 0xf9, 0x07, 0x46, 0xdf,
	0x46, 0x84, 0x91, 0x7a, 0x0f, 0xe8, 0x11, 0x5a, 0x37, 0xd8, 0xc8, 0x94, 0xc9, 0x7c, 0x74, 0x21,
	0x75, 0x04, 0x81, 0x12, 0xfc, 0x32, 0xa0, 0x1b, 0xdd, 0xe0, 0x5d, 0x1b, 0xf6, 0x21, 0x1f, 0x20,
	0x7a, 0xfe, 0xc2, 0x01, 0x33, 0x50, 0xf4, 0x6c, 0x25, 0x81, 0x44, 0x8b, 0x34, 0x86, 0x4c, 0x6c,
	0xa5, 0x2e, 0x4d, 0xa7, 0x4d, 0x0e, 0xe3, 0xde, 0xa7, 0xff, 0x7b, 0xfd, 0xa6, 0x6f, 0x16, 0xe3,
	0xe0, 0xf5, 0xe5, 0x73, 0x67, 0xee, 0xf4, 0xf9, 0x04, 0x43, 0x5f, 0xaa, 0x4a, 0xd5, 0x45, 0xb3,
	0x92, 0xb8, 0xed, 0xcd, 0xbd, 0x2e, 0xe6, 0xaf, 0xf2, 0x74, 0x52, 0xa9, 0xfa, 0xac, 0xb9, 0x98,
	0xc1, 0xb6, 0x5f, 0xb3, 0xbe, 0x5e, 0xb4, 0x99, 0x07, 0xad, 0x73, 0x40, 0x0f, 0x29, 0x3b, 0x8c,
	0xe5, 0x53, 0xa5, 0xea, 0xd3, 0xa6, 0x10, 0xb2, 0x13, 0x60, 0x1e, 0xf5, 0x65, 0xf7, 0xc3, 0x2c,
	0x3a, 0xf1, 0xa1, 0xdc, 0x54, 0xaa, 0xbe, 0x6a, 0xb4, 0xa0, 0xf7, 0x89, 0x88, 0x10, 0xbd, 0xfb,
	0x3e, 0x0a, 0xcf, 0xb3, 0x20, 0x68, 0x16, 0xda, 0xd5, 0xb4, 0x9e, 0xcd, 0x5f, 0x00, 0x00, 0x00,
	0xff, 0xff, 0x6c, 0xfb, 0x71, 0x94, 0x37, 0x01, 0x00, 0x00,
}
