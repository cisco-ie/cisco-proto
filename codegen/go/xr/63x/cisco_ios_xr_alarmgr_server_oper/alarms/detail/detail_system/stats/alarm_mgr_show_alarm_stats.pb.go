/*
Copyright 2019 Cisco Systems

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: alarm_mgr_show_alarm_stats.proto

package cisco_ios_xr_alarmgr_server_oper_alarms_detail_detail_system_stats

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type AlarmMgrShowAlarmStats_KEYS struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AlarmMgrShowAlarmStats_KEYS) Reset()         { *m = AlarmMgrShowAlarmStats_KEYS{} }
func (m *AlarmMgrShowAlarmStats_KEYS) String() string { return proto.CompactTextString(m) }
func (*AlarmMgrShowAlarmStats_KEYS) ProtoMessage()    {}
func (*AlarmMgrShowAlarmStats_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_a57311bc831b075f, []int{0}
}

func (m *AlarmMgrShowAlarmStats_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AlarmMgrShowAlarmStats_KEYS.Unmarshal(m, b)
}
func (m *AlarmMgrShowAlarmStats_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AlarmMgrShowAlarmStats_KEYS.Marshal(b, m, deterministic)
}
func (m *AlarmMgrShowAlarmStats_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AlarmMgrShowAlarmStats_KEYS.Merge(m, src)
}
func (m *AlarmMgrShowAlarmStats_KEYS) XXX_Size() int {
	return xxx_messageInfo_AlarmMgrShowAlarmStats_KEYS.Size(m)
}
func (m *AlarmMgrShowAlarmStats_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_AlarmMgrShowAlarmStats_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_AlarmMgrShowAlarmStats_KEYS proto.InternalMessageInfo

type AlarmMgrShowAlarmStats struct {
	Reported               uint64   `protobuf:"varint,50,opt,name=reported,proto3" json:"reported,omitempty"`
	Dropped                uint64   `protobuf:"varint,51,opt,name=dropped,proto3" json:"dropped,omitempty"`
	Active                 uint64   `protobuf:"varint,52,opt,name=active,proto3" json:"active,omitempty"`
	History                uint64   `protobuf:"varint,53,opt,name=history,proto3" json:"history,omitempty"`
	Suppressed             uint64   `protobuf:"varint,54,opt,name=suppressed,proto3" json:"suppressed,omitempty"`
	SysadminActive         uint64   `protobuf:"varint,55,opt,name=sysadmin_active,json=sysadminActive,proto3" json:"sysadmin_active,omitempty"`
	SysadminHistory        uint64   `protobuf:"varint,56,opt,name=sysadmin_history,json=sysadminHistory,proto3" json:"sysadmin_history,omitempty"`
	SysadminSuppressed     uint64   `protobuf:"varint,57,opt,name=sysadmin_suppressed,json=sysadminSuppressed,proto3" json:"sysadmin_suppressed,omitempty"`
	DroppedInvalidAid      uint32   `protobuf:"varint,58,opt,name=dropped_invalid_aid,json=droppedInvalidAid,proto3" json:"dropped_invalid_aid,omitempty"`
	DroppedInsuffMem       uint32   `protobuf:"varint,59,opt,name=dropped_insuff_mem,json=droppedInsuffMem,proto3" json:"dropped_insuff_mem,omitempty"`
	DroppedDbError         uint32   `protobuf:"varint,60,opt,name=dropped_db_error,json=droppedDbError,proto3" json:"dropped_db_error,omitempty"`
	DroppedClearWithoutSet uint32   `protobuf:"varint,61,opt,name=dropped_clear_without_set,json=droppedClearWithoutSet,proto3" json:"dropped_clear_without_set,omitempty"`
	DroppedDuplicate       uint32   `protobuf:"varint,62,opt,name=dropped_duplicate,json=droppedDuplicate,proto3" json:"dropped_duplicate,omitempty"`
	CacheHit               uint32   `protobuf:"varint,63,opt,name=cache_hit,json=cacheHit,proto3" json:"cache_hit,omitempty"`
	CacheMiss              uint32   `protobuf:"varint,64,opt,name=cache_miss,json=cacheMiss,proto3" json:"cache_miss,omitempty"`
	XXX_NoUnkeyedLiteral   struct{} `json:"-"`
	XXX_unrecognized       []byte   `json:"-"`
	XXX_sizecache          int32    `json:"-"`
}

func (m *AlarmMgrShowAlarmStats) Reset()         { *m = AlarmMgrShowAlarmStats{} }
func (m *AlarmMgrShowAlarmStats) String() string { return proto.CompactTextString(m) }
func (*AlarmMgrShowAlarmStats) ProtoMessage()    {}
func (*AlarmMgrShowAlarmStats) Descriptor() ([]byte, []int) {
	return fileDescriptor_a57311bc831b075f, []int{1}
}

func (m *AlarmMgrShowAlarmStats) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AlarmMgrShowAlarmStats.Unmarshal(m, b)
}
func (m *AlarmMgrShowAlarmStats) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AlarmMgrShowAlarmStats.Marshal(b, m, deterministic)
}
func (m *AlarmMgrShowAlarmStats) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AlarmMgrShowAlarmStats.Merge(m, src)
}
func (m *AlarmMgrShowAlarmStats) XXX_Size() int {
	return xxx_messageInfo_AlarmMgrShowAlarmStats.Size(m)
}
func (m *AlarmMgrShowAlarmStats) XXX_DiscardUnknown() {
	xxx_messageInfo_AlarmMgrShowAlarmStats.DiscardUnknown(m)
}

var xxx_messageInfo_AlarmMgrShowAlarmStats proto.InternalMessageInfo

func (m *AlarmMgrShowAlarmStats) GetReported() uint64 {
	if m != nil {
		return m.Reported
	}
	return 0
}

func (m *AlarmMgrShowAlarmStats) GetDropped() uint64 {
	if m != nil {
		return m.Dropped
	}
	return 0
}

func (m *AlarmMgrShowAlarmStats) GetActive() uint64 {
	if m != nil {
		return m.Active
	}
	return 0
}

func (m *AlarmMgrShowAlarmStats) GetHistory() uint64 {
	if m != nil {
		return m.History
	}
	return 0
}

func (m *AlarmMgrShowAlarmStats) GetSuppressed() uint64 {
	if m != nil {
		return m.Suppressed
	}
	return 0
}

func (m *AlarmMgrShowAlarmStats) GetSysadminActive() uint64 {
	if m != nil {
		return m.SysadminActive
	}
	return 0
}

func (m *AlarmMgrShowAlarmStats) GetSysadminHistory() uint64 {
	if m != nil {
		return m.SysadminHistory
	}
	return 0
}

func (m *AlarmMgrShowAlarmStats) GetSysadminSuppressed() uint64 {
	if m != nil {
		return m.SysadminSuppressed
	}
	return 0
}

func (m *AlarmMgrShowAlarmStats) GetDroppedInvalidAid() uint32 {
	if m != nil {
		return m.DroppedInvalidAid
	}
	return 0
}

func (m *AlarmMgrShowAlarmStats) GetDroppedInsuffMem() uint32 {
	if m != nil {
		return m.DroppedInsuffMem
	}
	return 0
}

func (m *AlarmMgrShowAlarmStats) GetDroppedDbError() uint32 {
	if m != nil {
		return m.DroppedDbError
	}
	return 0
}

func (m *AlarmMgrShowAlarmStats) GetDroppedClearWithoutSet() uint32 {
	if m != nil {
		return m.DroppedClearWithoutSet
	}
	return 0
}

func (m *AlarmMgrShowAlarmStats) GetDroppedDuplicate() uint32 {
	if m != nil {
		return m.DroppedDuplicate
	}
	return 0
}

func (m *AlarmMgrShowAlarmStats) GetCacheHit() uint32 {
	if m != nil {
		return m.CacheHit
	}
	return 0
}

func (m *AlarmMgrShowAlarmStats) GetCacheMiss() uint32 {
	if m != nil {
		return m.CacheMiss
	}
	return 0
}

func init() {
	proto.RegisterType((*AlarmMgrShowAlarmStats_KEYS)(nil), "cisco_ios_xr_alarmgr_server_oper.alarms.detail.detail_system.stats.alarm_mgr_show_alarm_stats_KEYS")
	proto.RegisterType((*AlarmMgrShowAlarmStats)(nil), "cisco_ios_xr_alarmgr_server_oper.alarms.detail.detail_system.stats.alarm_mgr_show_alarm_stats")
}

func init() { proto.RegisterFile("alarm_mgr_show_alarm_stats.proto", fileDescriptor_a57311bc831b075f) }

var fileDescriptor_a57311bc831b075f = []byte{
	// 412 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x92, 0x4d, 0x6b, 0x14, 0x41,
	0x10, 0x86, 0x09, 0x84, 0x18, 0x0b, 0x8c, 0x49, 0x07, 0x42, 0x1b, 0x51, 0xd7, 0x5c, 0x5c, 0x51,
	0x46, 0x30, 0x7e, 0xc5, 0xef, 0x68, 0x02, 0x11, 0xc9, 0x25, 0x7b, 0x10, 0x4f, 0x45, 0xef, 0x74,
	0xc5, 0x69, 0x98, 0x49, 0x0f, 0x55, 0xbd, 0x1b, 0xf7, 0x87, 0xfa, 0x7f, 0x64, 0xba, 0x7b, 0x26,
	0xc9, 0x61, 0x4f, 0x4b, 0xbd, 0xcf, 0x53, 0xf5, 0xf6, 0xc2, 0xc0, 0xc8, 0xd4, 0x86, 0x1b, 0x6c,
	0xfe, 0x30, 0x4a, 0xe5, 0x2f, 0x31, 0x8d, 0x12, 0x4c, 0x90, 0xa2, 0x65, 0x1f, 0xbc, 0xfa, 0x56,
	0x3a, 0x29, 0x3d, 0x3a, 0x2f, 0xf8, 0x97, 0x13, 0xef, 0x64, 0xe2, 0x39, 0x31, 0xfa, 0x96, 0xb8,
	0x88, 0x99, 0x14, 0x96, 0x82, 0x71, 0x75, 0xfe, 0x41, 0x59, 0x48, 0xa0, 0xa6, 0x88, 0x97, 0xf6,
	0x1e, 0xc3, 0xa3, 0xe5, 0x3d, 0xf8, 0xf3, 0xf8, 0xf7, 0x64, 0xef, 0xdf, 0x2a, 0xec, 0x2e, 0x77,
	0xd4, 0x2e, 0xac, 0x33, 0xb5, 0x9e, 0x03, 0x59, 0xfd, 0x72, 0xb4, 0x32, 0x5e, 0x3d, 0x1b, 0x66,
	0xa5, 0xe1, 0x96, 0x65, 0xdf, 0xb6, 0x64, 0xf5, 0x7e, 0x44, 0xfd, 0xa8, 0x76, 0x60, 0xcd, 0x94,
	0xc1, 0xcd, 0x49, 0xbf, 0x8a, 0x20, 0x4f, 0xdd, 0x46, 0xe5, 0x24, 0x78, 0x5e, 0xe8, 0xd7, 0x69,
	0x23, 0x8f, 0xea, 0x21, 0x80, 0xcc, 0xda, 0x96, 0x49, 0x84, 0xac, 0x7e, 0x13, 0xe1, 0xb5, 0x44,
	0x3d, 0x81, 0xbb, 0xb2, 0x10, 0x63, 0x1b, 0x77, 0x81, 0xf9, 0xf4, 0xdb, 0x28, 0x6d, 0xf4, 0xf1,
	0x61, 0xaa, 0x78, 0x0a, 0x9b, 0x83, 0xd8, 0x77, 0xbd, 0x8b, 0xe6, 0x70, 0xe0, 0x24, 0x77, 0xbe,
	0x80, 0xed, 0x41, 0xbd, 0x56, 0x7e, 0x10, 0x6d, 0xd5, 0xa3, 0xc9, 0xd5, 0x23, 0x0a, 0xd8, 0xce,
	0xff, 0x10, 0xdd, 0xc5, 0xdc, 0xd4, 0xce, 0xa2, 0x71, 0x56, 0xbf, 0x1f, 0xad, 0x8c, 0xef, 0x9c,
	0x6d, 0x65, 0xf4, 0x23, 0x91, 0x43, 0x67, 0xd5, 0x73, 0x50, 0x57, 0xbe, 0xcc, 0xce, 0xcf, 0xb1,
	0xa1, 0x46, 0x7f, 0x88, 0xfa, 0xe6, 0xa0, 0x77, 0xe0, 0x94, 0x1a, 0x35, 0x86, 0x3e, 0x43, 0x3b,
	0x45, 0x62, 0xf6, 0xac, 0x3f, 0x46, 0x77, 0x23, 0xe7, 0x47, 0xd3, 0xe3, 0x2e, 0x55, 0x07, 0x70,
	0xaf, 0x37, 0xcb, 0x9a, 0x0c, 0xe3, 0xa5, 0x0b, 0x95, 0x9f, 0x05, 0x14, 0x0a, 0xfa, 0x53, 0x5c,
	0xd9, 0xc9, 0xc2, 0xf7, 0x8e, 0xff, 0x4a, 0x78, 0x42, 0x41, 0x3d, 0x83, 0xad, 0xa1, 0x64, 0xd6,
	0xd6, 0xae, 0x34, 0x81, 0xf4, 0xe7, 0x1b, 0x2f, 0x3a, 0xea, 0x73, 0x75, 0x1f, 0x6e, 0x97, 0xa6,
	0xac, 0x08, 0x2b, 0x17, 0xf4, 0x97, 0x28, 0xad, 0xc7, 0xe0, 0xc4, 0x05, 0xf5, 0x00, 0x20, 0xc1,
	0xc6, 0x89, 0xe8, 0xaf, 0x91, 0x26, 0xfd, 0xd4, 0x89, 0x4c, 0xd7, 0xe2, 0x57, 0xbc, 0xff, 0x3f,
	0x00, 0x00, 0xff, 0xff, 0x5a, 0x75, 0xbe, 0xf5, 0xe9, 0x02, 0x00, 0x00,
}
