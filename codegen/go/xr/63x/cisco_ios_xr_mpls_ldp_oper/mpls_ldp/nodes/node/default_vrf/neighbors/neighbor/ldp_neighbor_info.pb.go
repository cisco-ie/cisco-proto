/*
Copyright 2019 Cisco Systems

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: ldp_neighbor_info.proto

package cisco_ios_xr_mpls_ldp_oper_mpls_ldp_nodes_node_default_vrf_neighbors_neighbor

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type LdpNeighborInfo_KEYS struct {
	NodeName             string   `protobuf:"bytes,1,opt,name=node_name,json=nodeName,proto3" json:"node_name,omitempty"`
	LsrId                string   `protobuf:"bytes,2,opt,name=lsr_id,json=lsrId,proto3" json:"lsr_id,omitempty"`
	LabelSpaceId         uint32   `protobuf:"varint,3,opt,name=label_space_id,json=labelSpaceId,proto3" json:"label_space_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LdpNeighborInfo_KEYS) Reset()         { *m = LdpNeighborInfo_KEYS{} }
func (m *LdpNeighborInfo_KEYS) String() string { return proto.CompactTextString(m) }
func (*LdpNeighborInfo_KEYS) ProtoMessage()    {}
func (*LdpNeighborInfo_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_bd88cda833449f9d, []int{0}
}

func (m *LdpNeighborInfo_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LdpNeighborInfo_KEYS.Unmarshal(m, b)
}
func (m *LdpNeighborInfo_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LdpNeighborInfo_KEYS.Marshal(b, m, deterministic)
}
func (m *LdpNeighborInfo_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LdpNeighborInfo_KEYS.Merge(m, src)
}
func (m *LdpNeighborInfo_KEYS) XXX_Size() int {
	return xxx_messageInfo_LdpNeighborInfo_KEYS.Size(m)
}
func (m *LdpNeighborInfo_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_LdpNeighborInfo_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_LdpNeighborInfo_KEYS proto.InternalMessageInfo

func (m *LdpNeighborInfo_KEYS) GetNodeName() string {
	if m != nil {
		return m.NodeName
	}
	return ""
}

func (m *LdpNeighborInfo_KEYS) GetLsrId() string {
	if m != nil {
		return m.LsrId
	}
	return ""
}

func (m *LdpNeighborInfo_KEYS) GetLabelSpaceId() uint32 {
	if m != nil {
		return m.LabelSpaceId
	}
	return 0
}

type LdpGrAdjInfo struct {
	IsGracefulRestartable bool     `protobuf:"varint,1,opt,name=is_graceful_restartable,json=isGracefulRestartable,proto3" json:"is_graceful_restartable,omitempty"`
	ReconnectTimeout      uint32   `protobuf:"varint,2,opt,name=reconnect_timeout,json=reconnectTimeout,proto3" json:"reconnect_timeout,omitempty"`
	RecoveryTime          uint32   `protobuf:"varint,3,opt,name=recovery_time,json=recoveryTime,proto3" json:"recovery_time,omitempty"`
	XXX_NoUnkeyedLiteral  struct{} `json:"-"`
	XXX_unrecognized      []byte   `json:"-"`
	XXX_sizecache         int32    `json:"-"`
}

func (m *LdpGrAdjInfo) Reset()         { *m = LdpGrAdjInfo{} }
func (m *LdpGrAdjInfo) String() string { return proto.CompactTextString(m) }
func (*LdpGrAdjInfo) ProtoMessage()    {}
func (*LdpGrAdjInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_bd88cda833449f9d, []int{1}
}

func (m *LdpGrAdjInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LdpGrAdjInfo.Unmarshal(m, b)
}
func (m *LdpGrAdjInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LdpGrAdjInfo.Marshal(b, m, deterministic)
}
func (m *LdpGrAdjInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LdpGrAdjInfo.Merge(m, src)
}
func (m *LdpGrAdjInfo) XXX_Size() int {
	return xxx_messageInfo_LdpGrAdjInfo.Size(m)
}
func (m *LdpGrAdjInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_LdpGrAdjInfo.DiscardUnknown(m)
}

var xxx_messageInfo_LdpGrAdjInfo proto.InternalMessageInfo

func (m *LdpGrAdjInfo) GetIsGracefulRestartable() bool {
	if m != nil {
		return m.IsGracefulRestartable
	}
	return false
}

func (m *LdpGrAdjInfo) GetReconnectTimeout() uint32 {
	if m != nil {
		return m.ReconnectTimeout
	}
	return 0
}

func (m *LdpGrAdjInfo) GetRecoveryTime() uint32 {
	if m != nil {
		return m.RecoveryTime
	}
	return 0
}

type LdpPtclAdjInfo struct {
	TaHoldtime                 uint32        `protobuf:"varint,1,opt,name=ta_holdtime,json=taHoldtime,proto3" json:"ta_holdtime,omitempty"`
	TaState                    string        `protobuf:"bytes,2,opt,name=ta_state,json=taState,proto3" json:"ta_state,omitempty"`
	TaPiesSent                 uint32        `protobuf:"varint,3,opt,name=ta_pies_sent,json=taPiesSent,proto3" json:"ta_pies_sent,omitempty"`
	TaPiesRcvd                 uint32        `protobuf:"varint,4,opt,name=ta_pies_rcvd,json=taPiesRcvd,proto3" json:"ta_pies_rcvd,omitempty"`
	TaUpTimeSeconds            uint32        `protobuf:"varint,5,opt,name=ta_up_time_seconds,json=taUpTimeSeconds,proto3" json:"ta_up_time_seconds,omitempty"`
	TaGracefulRestartAdjacency *LdpGrAdjInfo `protobuf:"bytes,6,opt,name=ta_graceful_restart_adjacency,json=taGracefulRestartAdjacency,proto3" json:"ta_graceful_restart_adjacency,omitempty"`
	DownstreamOnDemand         bool          `protobuf:"varint,7,opt,name=downstream_on_demand,json=downstreamOnDemand,proto3" json:"downstream_on_demand,omitempty"`
	XXX_NoUnkeyedLiteral       struct{}      `json:"-"`
	XXX_unrecognized           []byte        `json:"-"`
	XXX_sizecache              int32         `json:"-"`
}

func (m *LdpPtclAdjInfo) Reset()         { *m = LdpPtclAdjInfo{} }
func (m *LdpPtclAdjInfo) String() string { return proto.CompactTextString(m) }
func (*LdpPtclAdjInfo) ProtoMessage()    {}
func (*LdpPtclAdjInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_bd88cda833449f9d, []int{2}
}

func (m *LdpPtclAdjInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LdpPtclAdjInfo.Unmarshal(m, b)
}
func (m *LdpPtclAdjInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LdpPtclAdjInfo.Marshal(b, m, deterministic)
}
func (m *LdpPtclAdjInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LdpPtclAdjInfo.Merge(m, src)
}
func (m *LdpPtclAdjInfo) XXX_Size() int {
	return xxx_messageInfo_LdpPtclAdjInfo.Size(m)
}
func (m *LdpPtclAdjInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_LdpPtclAdjInfo.DiscardUnknown(m)
}

var xxx_messageInfo_LdpPtclAdjInfo proto.InternalMessageInfo

func (m *LdpPtclAdjInfo) GetTaHoldtime() uint32 {
	if m != nil {
		return m.TaHoldtime
	}
	return 0
}

func (m *LdpPtclAdjInfo) GetTaState() string {
	if m != nil {
		return m.TaState
	}
	return ""
}

func (m *LdpPtclAdjInfo) GetTaPiesSent() uint32 {
	if m != nil {
		return m.TaPiesSent
	}
	return 0
}

func (m *LdpPtclAdjInfo) GetTaPiesRcvd() uint32 {
	if m != nil {
		return m.TaPiesRcvd
	}
	return 0
}

func (m *LdpPtclAdjInfo) GetTaUpTimeSeconds() uint32 {
	if m != nil {
		return m.TaUpTimeSeconds
	}
	return 0
}

func (m *LdpPtclAdjInfo) GetTaGracefulRestartAdjacency() *LdpGrAdjInfo {
	if m != nil {
		return m.TaGracefulRestartAdjacency
	}
	return nil
}

func (m *LdpPtclAdjInfo) GetDownstreamOnDemand() bool {
	if m != nil {
		return m.DownstreamOnDemand
	}
	return false
}

type LdpIpAddrTUnion struct {
	Afi                  string   `protobuf:"bytes,1,opt,name=afi,proto3" json:"afi,omitempty"`
	Dummy                uint32   `protobuf:"varint,2,opt,name=dummy,proto3" json:"dummy,omitempty"`
	Ipv4                 string   `protobuf:"bytes,3,opt,name=ipv4,proto3" json:"ipv4,omitempty"`
	Ipv6                 string   `protobuf:"bytes,4,opt,name=ipv6,proto3" json:"ipv6,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LdpIpAddrTUnion) Reset()         { *m = LdpIpAddrTUnion{} }
func (m *LdpIpAddrTUnion) String() string { return proto.CompactTextString(m) }
func (*LdpIpAddrTUnion) ProtoMessage()    {}
func (*LdpIpAddrTUnion) Descriptor() ([]byte, []int) {
	return fileDescriptor_bd88cda833449f9d, []int{3}
}

func (m *LdpIpAddrTUnion) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LdpIpAddrTUnion.Unmarshal(m, b)
}
func (m *LdpIpAddrTUnion) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LdpIpAddrTUnion.Marshal(b, m, deterministic)
}
func (m *LdpIpAddrTUnion) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LdpIpAddrTUnion.Merge(m, src)
}
func (m *LdpIpAddrTUnion) XXX_Size() int {
	return xxx_messageInfo_LdpIpAddrTUnion.Size(m)
}
func (m *LdpIpAddrTUnion) XXX_DiscardUnknown() {
	xxx_messageInfo_LdpIpAddrTUnion.DiscardUnknown(m)
}

var xxx_messageInfo_LdpIpAddrTUnion proto.InternalMessageInfo

func (m *LdpIpAddrTUnion) GetAfi() string {
	if m != nil {
		return m.Afi
	}
	return ""
}

func (m *LdpIpAddrTUnion) GetDummy() uint32 {
	if m != nil {
		return m.Dummy
	}
	return 0
}

func (m *LdpIpAddrTUnion) GetIpv4() string {
	if m != nil {
		return m.Ipv4
	}
	return ""
}

func (m *LdpIpAddrTUnion) GetIpv6() string {
	if m != nil {
		return m.Ipv6
	}
	return ""
}

type LdpTcpInfo struct {
	ForeignHost          *LdpIpAddrTUnion `protobuf:"bytes,1,opt,name=foreign_host,json=foreignHost,proto3" json:"foreign_host,omitempty"`
	ForeignPort          uint32           `protobuf:"varint,2,opt,name=foreign_port,json=foreignPort,proto3" json:"foreign_port,omitempty"`
	LocalHost            *LdpIpAddrTUnion `protobuf:"bytes,3,opt,name=local_host,json=localHost,proto3" json:"local_host,omitempty"`
	LocalPort            uint32           `protobuf:"varint,4,opt,name=local_port,json=localPort,proto3" json:"local_port,omitempty"`
	IsMd5On              bool             `protobuf:"varint,5,opt,name=is_md5_on,json=isMd5On,proto3" json:"is_md5_on,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *LdpTcpInfo) Reset()         { *m = LdpTcpInfo{} }
func (m *LdpTcpInfo) String() string { return proto.CompactTextString(m) }
func (*LdpTcpInfo) ProtoMessage()    {}
func (*LdpTcpInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_bd88cda833449f9d, []int{4}
}

func (m *LdpTcpInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LdpTcpInfo.Unmarshal(m, b)
}
func (m *LdpTcpInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LdpTcpInfo.Marshal(b, m, deterministic)
}
func (m *LdpTcpInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LdpTcpInfo.Merge(m, src)
}
func (m *LdpTcpInfo) XXX_Size() int {
	return xxx_messageInfo_LdpTcpInfo.Size(m)
}
func (m *LdpTcpInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_LdpTcpInfo.DiscardUnknown(m)
}

var xxx_messageInfo_LdpTcpInfo proto.InternalMessageInfo

func (m *LdpTcpInfo) GetForeignHost() *LdpIpAddrTUnion {
	if m != nil {
		return m.ForeignHost
	}
	return nil
}

func (m *LdpTcpInfo) GetForeignPort() uint32 {
	if m != nil {
		return m.ForeignPort
	}
	return 0
}

func (m *LdpTcpInfo) GetLocalHost() *LdpIpAddrTUnion {
	if m != nil {
		return m.LocalHost
	}
	return nil
}

func (m *LdpTcpInfo) GetLocalPort() uint32 {
	if m != nil {
		return m.LocalPort
	}
	return 0
}

func (m *LdpTcpInfo) GetIsMd5On() bool {
	if m != nil {
		return m.IsMd5On
	}
	return false
}

type LdpNbrAddrInfo struct {
	Address              *LdpIpAddrTUnion `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *LdpNbrAddrInfo) Reset()         { *m = LdpNbrAddrInfo{} }
func (m *LdpNbrAddrInfo) String() string { return proto.CompactTextString(m) }
func (*LdpNbrAddrInfo) ProtoMessage()    {}
func (*LdpNbrAddrInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_bd88cda833449f9d, []int{5}
}

func (m *LdpNbrAddrInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LdpNbrAddrInfo.Unmarshal(m, b)
}
func (m *LdpNbrAddrInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LdpNbrAddrInfo.Marshal(b, m, deterministic)
}
func (m *LdpNbrAddrInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LdpNbrAddrInfo.Merge(m, src)
}
func (m *LdpNbrAddrInfo) XXX_Size() int {
	return xxx_messageInfo_LdpNbrAddrInfo.Size(m)
}
func (m *LdpNbrAddrInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_LdpNbrAddrInfo.DiscardUnknown(m)
}

var xxx_messageInfo_LdpNbrAddrInfo proto.InternalMessageInfo

func (m *LdpNbrAddrInfo) GetAddress() *LdpIpAddrTUnion {
	if m != nil {
		return m.Address
	}
	return nil
}

type LinkHello struct {
	Interface            string   `protobuf:"bytes,1,opt,name=interface,proto3" json:"interface,omitempty"`
	InterfaceName        string   `protobuf:"bytes,2,opt,name=interface_name,json=interfaceName,proto3" json:"interface_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LinkHello) Reset()         { *m = LinkHello{} }
func (m *LinkHello) String() string { return proto.CompactTextString(m) }
func (*LinkHello) ProtoMessage()    {}
func (*LinkHello) Descriptor() ([]byte, []int) {
	return fileDescriptor_bd88cda833449f9d, []int{6}
}

func (m *LinkHello) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LinkHello.Unmarshal(m, b)
}
func (m *LinkHello) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LinkHello.Marshal(b, m, deterministic)
}
func (m *LinkHello) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LinkHello.Merge(m, src)
}
func (m *LinkHello) XXX_Size() int {
	return xxx_messageInfo_LinkHello.Size(m)
}
func (m *LinkHello) XXX_DiscardUnknown() {
	xxx_messageInfo_LinkHello.DiscardUnknown(m)
}

var xxx_messageInfo_LinkHello proto.InternalMessageInfo

func (m *LinkHello) GetInterface() string {
	if m != nil {
		return m.Interface
	}
	return ""
}

func (m *LinkHello) GetInterfaceName() string {
	if m != nil {
		return m.InterfaceName
	}
	return ""
}

type TargetedHello struct {
	LocalAddress         *LdpIpAddrTUnion `protobuf:"bytes,1,opt,name=local_address,json=localAddress,proto3" json:"local_address,omitempty"`
	TargetAddress        *LdpIpAddrTUnion `protobuf:"bytes,2,opt,name=target_address,json=targetAddress,proto3" json:"target_address,omitempty"`
	State                string           `protobuf:"bytes,3,opt,name=state,proto3" json:"state,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *TargetedHello) Reset()         { *m = TargetedHello{} }
func (m *TargetedHello) String() string { return proto.CompactTextString(m) }
func (*TargetedHello) ProtoMessage()    {}
func (*TargetedHello) Descriptor() ([]byte, []int) {
	return fileDescriptor_bd88cda833449f9d, []int{7}
}

func (m *TargetedHello) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TargetedHello.Unmarshal(m, b)
}
func (m *TargetedHello) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TargetedHello.Marshal(b, m, deterministic)
}
func (m *TargetedHello) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TargetedHello.Merge(m, src)
}
func (m *TargetedHello) XXX_Size() int {
	return xxx_messageInfo_TargetedHello.Size(m)
}
func (m *TargetedHello) XXX_DiscardUnknown() {
	xxx_messageInfo_TargetedHello.DiscardUnknown(m)
}

var xxx_messageInfo_TargetedHello proto.InternalMessageInfo

func (m *TargetedHello) GetLocalAddress() *LdpIpAddrTUnion {
	if m != nil {
		return m.LocalAddress
	}
	return nil
}

func (m *TargetedHello) GetTargetAddress() *LdpIpAddrTUnion {
	if m != nil {
		return m.TargetAddress
	}
	return nil
}

func (m *TargetedHello) GetState() string {
	if m != nil {
		return m.State
	}
	return ""
}

type LdpAdjUnion struct {
	HelloType            string         `protobuf:"bytes,1,opt,name=hello_type,json=helloType,proto3" json:"hello_type,omitempty"`
	LinkHelloData        *LinkHello     `protobuf:"bytes,2,opt,name=link_hello_data,json=linkHelloData,proto3" json:"link_hello_data,omitempty"`
	TargetHelloData      *TargetedHello `protobuf:"bytes,3,opt,name=target_hello_data,json=targetHelloData,proto3" json:"target_hello_data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *LdpAdjUnion) Reset()         { *m = LdpAdjUnion{} }
func (m *LdpAdjUnion) String() string { return proto.CompactTextString(m) }
func (*LdpAdjUnion) ProtoMessage()    {}
func (*LdpAdjUnion) Descriptor() ([]byte, []int) {
	return fileDescriptor_bd88cda833449f9d, []int{8}
}

func (m *LdpAdjUnion) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LdpAdjUnion.Unmarshal(m, b)
}
func (m *LdpAdjUnion) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LdpAdjUnion.Marshal(b, m, deterministic)
}
func (m *LdpAdjUnion) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LdpAdjUnion.Merge(m, src)
}
func (m *LdpAdjUnion) XXX_Size() int {
	return xxx_messageInfo_LdpAdjUnion.Size(m)
}
func (m *LdpAdjUnion) XXX_DiscardUnknown() {
	xxx_messageInfo_LdpAdjUnion.DiscardUnknown(m)
}

var xxx_messageInfo_LdpAdjUnion proto.InternalMessageInfo

func (m *LdpAdjUnion) GetHelloType() string {
	if m != nil {
		return m.HelloType
	}
	return ""
}

func (m *LdpAdjUnion) GetLinkHelloData() *LinkHello {
	if m != nil {
		return m.LinkHelloData
	}
	return nil
}

func (m *LdpAdjUnion) GetTargetHelloData() *TargetedHello {
	if m != nil {
		return m.TargetHelloData
	}
	return nil
}

type LdpNbrAdjInfo struct {
	AdjacencyGroup       *LdpAdjUnion `protobuf:"bytes,1,opt,name=adjacency_group,json=adjacencyGroup,proto3" json:"adjacency_group,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *LdpNbrAdjInfo) Reset()         { *m = LdpNbrAdjInfo{} }
func (m *LdpNbrAdjInfo) String() string { return proto.CompactTextString(m) }
func (*LdpNbrAdjInfo) ProtoMessage()    {}
func (*LdpNbrAdjInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_bd88cda833449f9d, []int{9}
}

func (m *LdpNbrAdjInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LdpNbrAdjInfo.Unmarshal(m, b)
}
func (m *LdpNbrAdjInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LdpNbrAdjInfo.Marshal(b, m, deterministic)
}
func (m *LdpNbrAdjInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LdpNbrAdjInfo.Merge(m, src)
}
func (m *LdpNbrAdjInfo) XXX_Size() int {
	return xxx_messageInfo_LdpNbrAdjInfo.Size(m)
}
func (m *LdpNbrAdjInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_LdpNbrAdjInfo.DiscardUnknown(m)
}

var xxx_messageInfo_LdpNbrAdjInfo proto.InternalMessageInfo

func (m *LdpNbrAdjInfo) GetAdjacencyGroup() *LdpAdjUnion {
	if m != nil {
		return m.AdjacencyGroup
	}
	return nil
}

type LdpNbrClientsInfo struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LdpNbrClientsInfo) Reset()         { *m = LdpNbrClientsInfo{} }
func (m *LdpNbrClientsInfo) String() string { return proto.CompactTextString(m) }
func (*LdpNbrClientsInfo) ProtoMessage()    {}
func (*LdpNbrClientsInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_bd88cda833449f9d, []int{10}
}

func (m *LdpNbrClientsInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LdpNbrClientsInfo.Unmarshal(m, b)
}
func (m *LdpNbrClientsInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LdpNbrClientsInfo.Marshal(b, m, deterministic)
}
func (m *LdpNbrClientsInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LdpNbrClientsInfo.Merge(m, src)
}
func (m *LdpNbrClientsInfo) XXX_Size() int {
	return xxx_messageInfo_LdpNbrClientsInfo.Size(m)
}
func (m *LdpNbrClientsInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_LdpNbrClientsInfo.DiscardUnknown(m)
}

var xxx_messageInfo_LdpNbrClientsInfo proto.InternalMessageInfo

func (m *LdpNbrClientsInfo) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type LdpCapDesc struct {
	Type                 uint32   `protobuf:"varint,1,opt,name=type,proto3" json:"type,omitempty"`
	Description          string   `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	CapabilityDataLength uint32   `protobuf:"varint,3,opt,name=capability_data_length,json=capabilityDataLength,proto3" json:"capability_data_length,omitempty"`
	CapabilityData       string   `protobuf:"bytes,4,opt,name=capability_data,json=capabilityData,proto3" json:"capability_data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LdpCapDesc) Reset()         { *m = LdpCapDesc{} }
func (m *LdpCapDesc) String() string { return proto.CompactTextString(m) }
func (*LdpCapDesc) ProtoMessage()    {}
func (*LdpCapDesc) Descriptor() ([]byte, []int) {
	return fileDescriptor_bd88cda833449f9d, []int{11}
}

func (m *LdpCapDesc) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LdpCapDesc.Unmarshal(m, b)
}
func (m *LdpCapDesc) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LdpCapDesc.Marshal(b, m, deterministic)
}
func (m *LdpCapDesc) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LdpCapDesc.Merge(m, src)
}
func (m *LdpCapDesc) XXX_Size() int {
	return xxx_messageInfo_LdpCapDesc.Size(m)
}
func (m *LdpCapDesc) XXX_DiscardUnknown() {
	xxx_messageInfo_LdpCapDesc.DiscardUnknown(m)
}

var xxx_messageInfo_LdpCapDesc proto.InternalMessageInfo

func (m *LdpCapDesc) GetType() uint32 {
	if m != nil {
		return m.Type
	}
	return 0
}

func (m *LdpCapDesc) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *LdpCapDesc) GetCapabilityDataLength() uint32 {
	if m != nil {
		return m.CapabilityDataLength
	}
	return 0
}

func (m *LdpCapDesc) GetCapabilityData() string {
	if m != nil {
		return m.CapabilityData
	}
	return ""
}

type LdpNbrCapInfo struct {
	Sent                 []*LdpCapDesc `protobuf:"bytes,1,rep,name=sent,proto3" json:"sent,omitempty"`
	Received             []*LdpCapDesc `protobuf:"bytes,2,rep,name=received,proto3" json:"received,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *LdpNbrCapInfo) Reset()         { *m = LdpNbrCapInfo{} }
func (m *LdpNbrCapInfo) String() string { return proto.CompactTextString(m) }
func (*LdpNbrCapInfo) ProtoMessage()    {}
func (*LdpNbrCapInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_bd88cda833449f9d, []int{12}
}

func (m *LdpNbrCapInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LdpNbrCapInfo.Unmarshal(m, b)
}
func (m *LdpNbrCapInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LdpNbrCapInfo.Marshal(b, m, deterministic)
}
func (m *LdpNbrCapInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LdpNbrCapInfo.Merge(m, src)
}
func (m *LdpNbrCapInfo) XXX_Size() int {
	return xxx_messageInfo_LdpNbrCapInfo.Size(m)
}
func (m *LdpNbrCapInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_LdpNbrCapInfo.DiscardUnknown(m)
}

var xxx_messageInfo_LdpNbrCapInfo proto.InternalMessageInfo

func (m *LdpNbrCapInfo) GetSent() []*LdpCapDesc {
	if m != nil {
		return m.Sent
	}
	return nil
}

func (m *LdpNbrCapInfo) GetReceived() []*LdpCapDesc {
	if m != nil {
		return m.Received
	}
	return nil
}

type LdpNbrDetailedInfo struct {
	PeerHoldtime          uint32               `protobuf:"varint,1,opt,name=peer_holdtime,json=peerHoldtime,proto3" json:"peer_holdtime,omitempty"`
	KeepAliveInterval     uint32               `protobuf:"varint,2,opt,name=keep_alive_interval,json=keepAliveInterval,proto3" json:"keep_alive_interval,omitempty"`
	PeerState             string               `protobuf:"bytes,3,opt,name=peer_state,json=peerState,proto3" json:"peer_state,omitempty"`
	Client                []*LdpNbrClientsInfo `protobuf:"bytes,4,rep,name=client,proto3" json:"client,omitempty"`
	HasIpv4Inbound        bool                 `protobuf:"varint,5,opt,name=has_ipv4_inbound,json=hasIpv4Inbound,proto3" json:"has_ipv4_inbound,omitempty"`
	InboundIpv4Acl        string               `protobuf:"bytes,6,opt,name=inbound_ipv4acl,json=inboundIpv4acl,proto3" json:"inbound_ipv4acl,omitempty"`
	HasIpv6Inbound        bool                 `protobuf:"varint,7,opt,name=has_ipv6_inbound,json=hasIpv6Inbound,proto3" json:"has_ipv6_inbound,omitempty"`
	InboundIpv6Acl        string               `protobuf:"bytes,8,opt,name=inbound_ipv6acl,json=inboundIpv6acl,proto3" json:"inbound_ipv6acl,omitempty"`
	HasIpv4Outbound       bool                 `protobuf:"varint,9,opt,name=has_ipv4_outbound,json=hasIpv4Outbound,proto3" json:"has_ipv4_outbound,omitempty"`
	OutboundIpv4Acl       string               `protobuf:"bytes,10,opt,name=outbound_ipv4acl,json=outboundIpv4acl,proto3" json:"outbound_ipv4acl,omitempty"`
	HasIpv6Outbound       bool                 `protobuf:"varint,11,opt,name=has_ipv6_outbound,json=hasIpv6Outbound,proto3" json:"has_ipv6_outbound,omitempty"`
	OutboundIpv6Acl       string               `protobuf:"bytes,12,opt,name=outbound_ipv6acl,json=outboundIpv6acl,proto3" json:"outbound_ipv6acl,omitempty"`
	HasSp                 bool                 `protobuf:"varint,13,opt,name=has_sp,json=hasSp,proto3" json:"has_sp,omitempty"`
	SpState               string               `protobuf:"bytes,14,opt,name=sp_state,json=spState,proto3" json:"sp_state,omitempty"`
	SpHasAcl              bool                 `protobuf:"varint,15,opt,name=sp_has_acl,json=spHasAcl,proto3" json:"sp_has_acl,omitempty"`
	Spacl                 string               `protobuf:"bytes,16,opt,name=spacl,proto3" json:"spacl,omitempty"`
	SpHasDuration         bool                 `protobuf:"varint,17,opt,name=sp_has_duration,json=spHasDuration,proto3" json:"sp_has_duration,omitempty"`
	SpDuration            uint32               `protobuf:"varint,18,opt,name=sp_duration,json=spDuration,proto3" json:"sp_duration,omitempty"`
	SphtRunning           bool                 `protobuf:"varint,19,opt,name=spht_running,json=sphtRunning,proto3" json:"spht_running,omitempty"`
	SphtRemaining         uint32               `protobuf:"varint,20,opt,name=spht_remaining,json=sphtRemaining,proto3" json:"spht_remaining,omitempty"`
	NsrSyncState          string               `protobuf:"bytes,21,opt,name=nsr_sync_state,json=nsrSyncState,proto3" json:"nsr_sync_state,omitempty"`
	NsrLastSyncError      string               `protobuf:"bytes,22,opt,name=nsr_last_sync_error,json=nsrLastSyncError,proto3" json:"nsr_last_sync_error,omitempty"`
	NsrLastSyncNackReason string               `protobuf:"bytes,23,opt,name=nsr_last_sync_nack_reason,json=nsrLastSyncNackReason,proto3" json:"nsr_last_sync_nack_reason,omitempty"`
	Capabilities          *LdpNbrCapInfo       `protobuf:"bytes,24,opt,name=capabilities,proto3" json:"capabilities,omitempty"`
	BgpAdvertisementState string               `protobuf:"bytes,25,opt,name=bgp_advertisement_state,json=bgpAdvertisementState,proto3" json:"bgp_advertisement_state,omitempty"`
	Ipv4DuplicateAddress  []*LdpNbrAddrInfo    `protobuf:"bytes,26,rep,name=ipv4_duplicate_address,json=ipv4DuplicateAddress,proto3" json:"ipv4_duplicate_address,omitempty"`
	Ipv6DuplicateAddress  []*LdpNbrAddrInfo    `protobuf:"bytes,27,rep,name=ipv6_duplicate_address,json=ipv6DuplicateAddress,proto3" json:"ipv6_duplicate_address,omitempty"`
	AdvertiseBgpPrefixes  bool                 `protobuf:"varint,28,opt,name=advertise_bgp_prefixes,json=advertiseBgpPrefixes,proto3" json:"advertise_bgp_prefixes,omitempty"`
	XXX_NoUnkeyedLiteral  struct{}             `json:"-"`
	XXX_unrecognized      []byte               `json:"-"`
	XXX_sizecache         int32                `json:"-"`
}

func (m *LdpNbrDetailedInfo) Reset()         { *m = LdpNbrDetailedInfo{} }
func (m *LdpNbrDetailedInfo) String() string { return proto.CompactTextString(m) }
func (*LdpNbrDetailedInfo) ProtoMessage()    {}
func (*LdpNbrDetailedInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_bd88cda833449f9d, []int{13}
}

func (m *LdpNbrDetailedInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LdpNbrDetailedInfo.Unmarshal(m, b)
}
func (m *LdpNbrDetailedInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LdpNbrDetailedInfo.Marshal(b, m, deterministic)
}
func (m *LdpNbrDetailedInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LdpNbrDetailedInfo.Merge(m, src)
}
func (m *LdpNbrDetailedInfo) XXX_Size() int {
	return xxx_messageInfo_LdpNbrDetailedInfo.Size(m)
}
func (m *LdpNbrDetailedInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_LdpNbrDetailedInfo.DiscardUnknown(m)
}

var xxx_messageInfo_LdpNbrDetailedInfo proto.InternalMessageInfo

func (m *LdpNbrDetailedInfo) GetPeerHoldtime() uint32 {
	if m != nil {
		return m.PeerHoldtime
	}
	return 0
}

func (m *LdpNbrDetailedInfo) GetKeepAliveInterval() uint32 {
	if m != nil {
		return m.KeepAliveInterval
	}
	return 0
}

func (m *LdpNbrDetailedInfo) GetPeerState() string {
	if m != nil {
		return m.PeerState
	}
	return ""
}

func (m *LdpNbrDetailedInfo) GetClient() []*LdpNbrClientsInfo {
	if m != nil {
		return m.Client
	}
	return nil
}

func (m *LdpNbrDetailedInfo) GetHasIpv4Inbound() bool {
	if m != nil {
		return m.HasIpv4Inbound
	}
	return false
}

func (m *LdpNbrDetailedInfo) GetInboundIpv4Acl() string {
	if m != nil {
		return m.InboundIpv4Acl
	}
	return ""
}

func (m *LdpNbrDetailedInfo) GetHasIpv6Inbound() bool {
	if m != nil {
		return m.HasIpv6Inbound
	}
	return false
}

func (m *LdpNbrDetailedInfo) GetInboundIpv6Acl() string {
	if m != nil {
		return m.InboundIpv6Acl
	}
	return ""
}

func (m *LdpNbrDetailedInfo) GetHasIpv4Outbound() bool {
	if m != nil {
		return m.HasIpv4Outbound
	}
	return false
}

func (m *LdpNbrDetailedInfo) GetOutboundIpv4Acl() string {
	if m != nil {
		return m.OutboundIpv4Acl
	}
	return ""
}

func (m *LdpNbrDetailedInfo) GetHasIpv6Outbound() bool {
	if m != nil {
		return m.HasIpv6Outbound
	}
	return false
}

func (m *LdpNbrDetailedInfo) GetOutboundIpv6Acl() string {
	if m != nil {
		return m.OutboundIpv6Acl
	}
	return ""
}

func (m *LdpNbrDetailedInfo) GetHasSp() bool {
	if m != nil {
		return m.HasSp
	}
	return false
}

func (m *LdpNbrDetailedInfo) GetSpState() string {
	if m != nil {
		return m.SpState
	}
	return ""
}

func (m *LdpNbrDetailedInfo) GetSpHasAcl() bool {
	if m != nil {
		return m.SpHasAcl
	}
	return false
}

func (m *LdpNbrDetailedInfo) GetSpacl() string {
	if m != nil {
		return m.Spacl
	}
	return ""
}

func (m *LdpNbrDetailedInfo) GetSpHasDuration() bool {
	if m != nil {
		return m.SpHasDuration
	}
	return false
}

func (m *LdpNbrDetailedInfo) GetSpDuration() uint32 {
	if m != nil {
		return m.SpDuration
	}
	return 0
}

func (m *LdpNbrDetailedInfo) GetSphtRunning() bool {
	if m != nil {
		return m.SphtRunning
	}
	return false
}

func (m *LdpNbrDetailedInfo) GetSphtRemaining() uint32 {
	if m != nil {
		return m.SphtRemaining
	}
	return 0
}

func (m *LdpNbrDetailedInfo) GetNsrSyncState() string {
	if m != nil {
		return m.NsrSyncState
	}
	return ""
}

func (m *LdpNbrDetailedInfo) GetNsrLastSyncError() string {
	if m != nil {
		return m.NsrLastSyncError
	}
	return ""
}

func (m *LdpNbrDetailedInfo) GetNsrLastSyncNackReason() string {
	if m != nil {
		return m.NsrLastSyncNackReason
	}
	return ""
}

func (m *LdpNbrDetailedInfo) GetCapabilities() *LdpNbrCapInfo {
	if m != nil {
		return m.Capabilities
	}
	return nil
}

func (m *LdpNbrDetailedInfo) GetBgpAdvertisementState() string {
	if m != nil {
		return m.BgpAdvertisementState
	}
	return ""
}

func (m *LdpNbrDetailedInfo) GetIpv4DuplicateAddress() []*LdpNbrAddrInfo {
	if m != nil {
		return m.Ipv4DuplicateAddress
	}
	return nil
}

func (m *LdpNbrDetailedInfo) GetIpv6DuplicateAddress() []*LdpNbrAddrInfo {
	if m != nil {
		return m.Ipv6DuplicateAddress
	}
	return nil
}

func (m *LdpNbrDetailedInfo) GetAdvertiseBgpPrefixes() bool {
	if m != nil {
		return m.AdvertiseBgpPrefixes
	}
	return false
}

type LdpNeighborInfo struct {
	ProtocolInformation        *LdpPtclAdjInfo     `protobuf:"bytes,50,opt,name=protocol_information,json=protocolInformation,proto3" json:"protocol_information,omitempty"`
	TcpInformation             *LdpTcpInfo         `protobuf:"bytes,51,opt,name=tcp_information,json=tcpInformation,proto3" json:"tcp_information,omitempty"`
	LdpNbrBoundIpv4AddressInfo []*LdpNbrAddrInfo   `protobuf:"bytes,52,rep,name=ldp_nbr_bound_ipv4_address_info,json=ldpNbrBoundIpv4AddressInfo,proto3" json:"ldp_nbr_bound_ipv4_address_info,omitempty"`
	LdpNbrBoundIpv6AddressInfo []*LdpNbrAddrInfo   `protobuf:"bytes,53,rep,name=ldp_nbr_bound_ipv6_address_info,json=ldpNbrBoundIpv6AddressInfo,proto3" json:"ldp_nbr_bound_ipv6_address_info,omitempty"`
	LdpNbrIpv4AdjInfo          []*LdpNbrAdjInfo    `protobuf:"bytes,54,rep,name=ldp_nbr_ipv4_adj_info,json=ldpNbrIpv4AdjInfo,proto3" json:"ldp_nbr_ipv4_adj_info,omitempty"`
	LdpNbrIpv6AdjInfo          []*LdpNbrAdjInfo    `protobuf:"bytes,55,rep,name=ldp_nbr_ipv6_adj_info,json=ldpNbrIpv6AdjInfo,proto3" json:"ldp_nbr_ipv6_adj_info,omitempty"`
	DetailedInformation        *LdpNbrDetailedInfo `protobuf:"bytes,56,opt,name=detailed_information,json=detailedInformation,proto3" json:"detailed_information,omitempty"`
	XXX_NoUnkeyedLiteral       struct{}            `json:"-"`
	XXX_unrecognized           []byte              `json:"-"`
	XXX_sizecache              int32               `json:"-"`
}

func (m *LdpNeighborInfo) Reset()         { *m = LdpNeighborInfo{} }
func (m *LdpNeighborInfo) String() string { return proto.CompactTextString(m) }
func (*LdpNeighborInfo) ProtoMessage()    {}
func (*LdpNeighborInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_bd88cda833449f9d, []int{14}
}

func (m *LdpNeighborInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LdpNeighborInfo.Unmarshal(m, b)
}
func (m *LdpNeighborInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LdpNeighborInfo.Marshal(b, m, deterministic)
}
func (m *LdpNeighborInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LdpNeighborInfo.Merge(m, src)
}
func (m *LdpNeighborInfo) XXX_Size() int {
	return xxx_messageInfo_LdpNeighborInfo.Size(m)
}
func (m *LdpNeighborInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_LdpNeighborInfo.DiscardUnknown(m)
}

var xxx_messageInfo_LdpNeighborInfo proto.InternalMessageInfo

func (m *LdpNeighborInfo) GetProtocolInformation() *LdpPtclAdjInfo {
	if m != nil {
		return m.ProtocolInformation
	}
	return nil
}

func (m *LdpNeighborInfo) GetTcpInformation() *LdpTcpInfo {
	if m != nil {
		return m.TcpInformation
	}
	return nil
}

func (m *LdpNeighborInfo) GetLdpNbrBoundIpv4AddressInfo() []*LdpNbrAddrInfo {
	if m != nil {
		return m.LdpNbrBoundIpv4AddressInfo
	}
	return nil
}

func (m *LdpNeighborInfo) GetLdpNbrBoundIpv6AddressInfo() []*LdpNbrAddrInfo {
	if m != nil {
		return m.LdpNbrBoundIpv6AddressInfo
	}
	return nil
}

func (m *LdpNeighborInfo) GetLdpNbrIpv4AdjInfo() []*LdpNbrAdjInfo {
	if m != nil {
		return m.LdpNbrIpv4AdjInfo
	}
	return nil
}

func (m *LdpNeighborInfo) GetLdpNbrIpv6AdjInfo() []*LdpNbrAdjInfo {
	if m != nil {
		return m.LdpNbrIpv6AdjInfo
	}
	return nil
}

func (m *LdpNeighborInfo) GetDetailedInformation() *LdpNbrDetailedInfo {
	if m != nil {
		return m.DetailedInformation
	}
	return nil
}

func init() {
	proto.RegisterType((*LdpNeighborInfo_KEYS)(nil), "cisco_ios_xr_mpls_ldp_oper.mpls_ldp.nodes.node.default_vrf.neighbors.neighbor.ldp_neighbor_info_KEYS")
	proto.RegisterType((*LdpGrAdjInfo)(nil), "cisco_ios_xr_mpls_ldp_oper.mpls_ldp.nodes.node.default_vrf.neighbors.neighbor.ldp_gr_adj_info")
	proto.RegisterType((*LdpPtclAdjInfo)(nil), "cisco_ios_xr_mpls_ldp_oper.mpls_ldp.nodes.node.default_vrf.neighbors.neighbor.ldp_ptcl_adj_info")
	proto.RegisterType((*LdpIpAddrTUnion)(nil), "cisco_ios_xr_mpls_ldp_oper.mpls_ldp.nodes.node.default_vrf.neighbors.neighbor.ldp_ip_addr_t_union")
	proto.RegisterType((*LdpTcpInfo)(nil), "cisco_ios_xr_mpls_ldp_oper.mpls_ldp.nodes.node.default_vrf.neighbors.neighbor.ldp_tcp_info")
	proto.RegisterType((*LdpNbrAddrInfo)(nil), "cisco_ios_xr_mpls_ldp_oper.mpls_ldp.nodes.node.default_vrf.neighbors.neighbor.ldp_nbr_addr_info")
	proto.RegisterType((*LinkHello)(nil), "cisco_ios_xr_mpls_ldp_oper.mpls_ldp.nodes.node.default_vrf.neighbors.neighbor.link_hello")
	proto.RegisterType((*TargetedHello)(nil), "cisco_ios_xr_mpls_ldp_oper.mpls_ldp.nodes.node.default_vrf.neighbors.neighbor.targeted_hello")
	proto.RegisterType((*LdpAdjUnion)(nil), "cisco_ios_xr_mpls_ldp_oper.mpls_ldp.nodes.node.default_vrf.neighbors.neighbor.ldp_adj_union")
	proto.RegisterType((*LdpNbrAdjInfo)(nil), "cisco_ios_xr_mpls_ldp_oper.mpls_ldp.nodes.node.default_vrf.neighbors.neighbor.ldp_nbr_adj_info")
	proto.RegisterType((*LdpNbrClientsInfo)(nil), "cisco_ios_xr_mpls_ldp_oper.mpls_ldp.nodes.node.default_vrf.neighbors.neighbor.ldp_nbr_clients_info")
	proto.RegisterType((*LdpCapDesc)(nil), "cisco_ios_xr_mpls_ldp_oper.mpls_ldp.nodes.node.default_vrf.neighbors.neighbor.ldp_cap_desc")
	proto.RegisterType((*LdpNbrCapInfo)(nil), "cisco_ios_xr_mpls_ldp_oper.mpls_ldp.nodes.node.default_vrf.neighbors.neighbor.ldp_nbr_cap_info")
	proto.RegisterType((*LdpNbrDetailedInfo)(nil), "cisco_ios_xr_mpls_ldp_oper.mpls_ldp.nodes.node.default_vrf.neighbors.neighbor.ldp_nbr_detailed_info")
	proto.RegisterType((*LdpNeighborInfo)(nil), "cisco_ios_xr_mpls_ldp_oper.mpls_ldp.nodes.node.default_vrf.neighbors.neighbor.ldp_neighbor_info")
}

func init() { proto.RegisterFile("ldp_neighbor_info.proto", fileDescriptor_bd88cda833449f9d) }

var fileDescriptor_bd88cda833449f9d = []byte{
	// 1640 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xc4, 0x58, 0x4b, 0x8f, 0x23, 0xb7,
	0x11, 0x46, 0xcf, 0x5b, 0x35, 0x7a, 0xcc, 0x70, 0x34, 0xb3, 0xbd, 0xeb, 0x5d, 0x78, 0x2c, 0xe7,
	0x31, 0xb1, 0x11, 0x21, 0x58, 0xcf, 0x2a, 0xbe, 0x8e, 0xb1, 0x86, 0x77, 0x10, 0x7b, 0x77, 0xd3,
	0xe3, 0x1c, 0x8c, 0x3c, 0x18, 0xaa, 0x9b, 0x92, 0xb8, 0xdb, 0x62, 0x13, 0x24, 0x25, 0x5b, 0x48,
	0x2e, 0x41, 0x12, 0x04, 0xc9, 0xcd, 0x08, 0xb0, 0x01, 0x92, 0x53, 0x10, 0xe4, 0x5f, 0x04, 0x39,
	0xe4, 0x57, 0xe5, 0x90, 0x43, 0xc0, 0x22, 0xbb, 0xd5, 0x9a, 0x9d, 0xdc, 0x56, 0x93, 0x8b, 0x40,
	0x56, 0x15, 0xeb, 0xfb, 0x58, 0x2c, 0x16, 0xab, 0x05, 0x77, 0xf2, 0x4c, 0x51, 0xc9, 0xc5, 0x78,
	0x32, 0x2c, 0x34, 0x15, 0x72, 0x54, 0xf4, 0x95, 0x2e, 0x6c, 0x41, 0x3e, 0x4b, 0x85, 0x49, 0x0b,
	0x2a, 0x0a, 0x43, 0xbf, 0xd2, 0x74, 0xaa, 0x72, 0x43, 0x9d, 0x69, 0xa1, 0xb8, 0xee, 0x97, 0xb3,
	0xbe, 0x2c, 0x32, 0x6e, 0xf0, 0xb7, 0x9f, 0xf1, 0x11, 0x9b, 0xe5, 0x96, 0xce, 0xf5, 0xa8, 0x5f,
	0xfa, 0x33, 0xd5, 0xa8, 0xa7, 0xe1, 0xe4, 0x35, 0x24, 0xfa, 0x83, 0x8f, 0xbf, 0xb8, 0x22, 0x6f,
	0x41, 0xc3, 0x39, 0xa0, 0x92, 0x4d, 0x79, 0x1c, 0x9d, 0x46, 0x67, 0x8d, 0x64, 0xcf, 0x09, 0x9e,
	0xb2, 0x29, 0x27, 0xc7, 0xb0, 0x93, 0x1b, 0x4d, 0x45, 0x16, 0x6f, 0xa0, 0x66, 0x3b, 0x37, 0xfa,
	0x32, 0x23, 0xdf, 0x80, 0x76, 0xce, 0x86, 0x3c, 0xa7, 0x46, 0xb1, 0x94, 0x3b, 0xf5, 0xe6, 0x69,
	0x74, 0xd6, 0x4a, 0x9a, 0x28, 0xbd, 0x72, 0xc2, 0xcb, 0xac, 0xf7, 0x97, 0x08, 0x3a, 0x0e, 0x74,
	0xac, 0x29, 0xcb, 0x5e, 0x20, 0x24, 0x19, 0xc0, 0x1d, 0x61, 0xe8, 0x58, 0xb3, 0x94, 0x8f, 0x66,
	0x39, 0xd5, 0xdc, 0x58, 0xa6, 0x2d, 0x1b, 0xe6, 0x1e, 0x7b, 0x2f, 0x39, 0x16, 0xe6, 0x93, 0xa0,
	0x4d, 0x96, 0x4a, 0xf2, 0x3e, 0x1c, 0x6a, 0x9e, 0x16, 0x52, 0xf2, 0xd4, 0x52, 0x2b, 0xa6, 0xbc,
	0x98, 0x59, 0xe4, 0xd4, 0x4a, 0x0e, 0x2a, 0xc5, 0xe7, 0x5e, 0x4e, 0xde, 0x85, 0x96, 0x93, 0xcd,
	0xb9, 0x5e, 0xa0, 0x6d, 0xc9, 0xae, 0x14, 0x3a, 0xbb, 0xde, 0xab, 0x4d, 0x38, 0x74, 0xec, 0x94,
	0x4d, 0xf3, 0x25, 0xbf, 0xb7, 0x61, 0xdf, 0x32, 0x3a, 0x29, 0xf2, 0x0c, 0x17, 0x46, 0xb8, 0x10,
	0x2c, 0x7b, 0x12, 0x24, 0xe4, 0x2e, 0xec, 0x59, 0x46, 0x8d, 0x65, 0x96, 0x87, 0x98, 0xec, 0x5a,
	0x76, 0xe5, 0xa6, 0xe4, 0x14, 0x9a, 0x96, 0x51, 0x25, 0xb8, 0xa1, 0x86, 0x4b, 0x1b, 0x50, 0xc1,
	0xb2, 0xe7, 0x82, 0x9b, 0x2b, 0x2e, 0x6d, 0xdd, 0x42, 0xa7, 0xf3, 0x2c, 0xde, 0xaa, 0x5b, 0x24,
	0xe9, 0x3c, 0x23, 0xef, 0x03, 0xb1, 0x8c, 0xce, 0x14, 0xf2, 0xa6, 0xc6, 0xed, 0x2c, 0x33, 0xf1,
	0x36, 0xda, 0x75, 0x2c, 0xfb, 0x91, 0x72, 0xdc, 0xaf, 0xbc, 0x98, 0xfc, 0x35, 0x82, 0x07, 0x96,
	0xbd, 0x16, 0x4d, 0xb7, 0x1b, 0x96, 0x72, 0x99, 0x2e, 0xe2, 0x9d, 0xd3, 0xe8, 0x6c, 0xff, 0xe1,
	0xcf, 0xfa, 0x6f, 0x34, 0x99, 0xfa, 0xd7, 0x0e, 0x35, 0xb9, 0x67, 0xd9, 0xb5, 0x33, 0xbb, 0x28,
	0x19, 0x90, 0xef, 0x41, 0x37, 0x2b, 0xbe, 0x94, 0xc6, 0x6a, 0xce, 0xa6, 0xb4, 0x90, 0x34, 0xe3,
	0x53, 0x26, 0xb3, 0x78, 0x17, 0x4f, 0x9b, 0x2c, 0x75, 0xcf, 0xe4, 0x63, 0xd4, 0xf4, 0x38, 0x1c,
	0x39, 0x00, 0xa1, 0x28, 0xcb, 0x32, 0x4d, 0x2d, 0x9d, 0x49, 0x51, 0x48, 0x72, 0x00, 0x9b, 0x6c,
	0x24, 0x42, 0x86, 0xba, 0x21, 0xe9, 0xc2, 0x76, 0x36, 0x9b, 0x4e, 0x17, 0x21, 0x0f, 0xfc, 0x84,
	0x10, 0xd8, 0x12, 0x6a, 0x7e, 0x8e, 0xd1, 0x6f, 0x24, 0x38, 0x0e, 0xb2, 0x01, 0xc6, 0xdb, 0xcb,
	0x06, 0xbd, 0x7f, 0x6f, 0x40, 0xd3, 0xe1, 0xd8, 0x54, 0xf9, 0xa3, 0xff, 0x6d, 0x04, 0xcd, 0x51,
	0xa1, 0xb9, 0x18, 0x4b, 0x3a, 0x29, 0x8c, 0x45, 0xa8, 0xfd, 0x87, 0xc3, 0x35, 0x04, 0xef, 0xda,
	0xde, 0x92, 0xfd, 0x80, 0xfb, 0xa4, 0x30, 0x96, 0xbc, 0xb3, 0xa4, 0xa1, 0x0a, 0x5d, 0x66, 0x79,
	0x69, 0xf2, 0xbc, 0xd0, 0x96, 0xfc, 0x2a, 0x02, 0xc8, 0x8b, 0x94, 0xe5, 0x9e, 0xe8, 0xe6, 0xad,
	0x11, 0x6d, 0x20, 0x2a, 0xd2, 0x7c, 0x50, 0x52, 0x40, 0x92, 0x3e, 0x93, 0xbd, 0x1a, 0x29, 0xde,
	0x83, 0x86, 0x30, 0x74, 0x9a, 0x3d, 0xa2, 0x85, 0xc4, 0xfc, 0xdd, 0x4b, 0x76, 0x85, 0xf9, 0x2c,
	0x7b, 0xf4, 0x4c, 0xf6, 0xbe, 0x8e, 0xfc, 0xd5, 0x93, 0x43, 0xed, 0xdd, 0x63, 0xfc, 0x7f, 0x09,
	0xbb, 0x6e, 0xc2, 0x8d, 0xb9, 0xc5, 0xc8, 0x97, 0x90, 0xbd, 0x1f, 0x02, 0xe4, 0x42, 0xbe, 0xa4,
	0x13, 0x9e, 0xe7, 0x05, 0xb9, 0x0f, 0x0d, 0x21, 0x2d, 0xd7, 0x23, 0x96, 0x96, 0x45, 0x71, 0x29,
	0x20, 0xdf, 0x84, 0x76, 0x35, 0xf1, 0x75, 0xd3, 0x57, 0x82, 0x56, 0x25, 0x75, 0xc5, 0xb3, 0xf7,
	0x8f, 0x0d, 0x68, 0x5b, 0xa6, 0xc7, 0xdc, 0xf2, 0x2c, 0xf8, 0xfd, 0x5d, 0x04, 0x2d, 0x1f, 0xb5,
	0xdb, 0xdf, 0x6a, 0x13, 0x81, 0x2f, 0x3c, 0x2e, 0xf9, 0x7d, 0x54, 0x92, 0xab, 0xa8, 0x6c, 0xdc,
	0x1a, 0x95, 0x96, 0x47, 0x2e, 0xb9, 0x74, 0x61, 0xdb, 0x17, 0x54, 0x7f, 0x67, 0xfd, 0xa4, 0xf7,
	0xcf, 0x0d, 0x68, 0xb9, 0xc5, 0xae, 0xcc, 0xf8, 0x12, 0xf0, 0x00, 0x00, 0xc3, 0x48, 0xed, 0x42,
	0x55, 0xc7, 0x82, 0x92, 0xcf, 0x17, 0x8a, 0xbb, 0x5b, 0xd1, 0x59, 0x9e, 0x21, 0xcd, 0x98, 0x65,
	0x61, 0x4f, 0x5f, 0xbc, 0xe9, 0x3d, 0x55, 0x28, 0x49, 0xcb, 0x8d, 0x9f, 0xb8, 0xe1, 0x63, 0x66,
	0x99, 0x0b, 0xeb, 0x61, 0x08, 0x6b, 0x8d, 0x85, 0xbf, 0xa0, 0x3f, 0x7d, 0xc3, 0x2c, 0x56, 0x73,
	0xcb, 0x3d, 0x0f, 0x6e, 0x5e, 0x71, 0xe9, 0xfd, 0x39, 0x82, 0x83, 0xe5, 0x35, 0x7b, 0x51, 0x55,
	0xb9, 0x4e, 0xf5, 0x3e, 0xd0, 0xb1, 0x2e, 0x66, 0x2a, 0xe4, 0xe0, 0x4f, 0xd6, 0x70, 0xf0, 0xd5,
	0xd9, 0x25, 0xed, 0x0a, 0xf4, 0x13, 0x87, 0xd9, 0x7b, 0x0f, 0xba, 0x25, 0xb7, 0x34, 0x17, 0x5c,
	0x5a, 0xe3, 0xf9, 0x11, 0xd8, 0xaa, 0x75, 0x22, 0x38, 0xee, 0xfd, 0x2d, 0xf2, 0xa5, 0x3a, 0x65,
	0x8a, 0x66, 0xdc, 0xa4, 0xce, 0xa8, 0x4a, 0x81, 0x56, 0x82, 0x63, 0x72, 0x0a, 0xfb, 0x4e, 0xa7,
	0x85, 0xb2, 0xa2, 0x90, 0xe1, 0x46, 0xd6, 0x45, 0xe4, 0x1c, 0x4e, 0x52, 0xa6, 0xd8, 0x50, 0xe4,
	0xc2, 0x2e, 0xf0, 0x60, 0x68, 0xce, 0xe5, 0xd8, 0x4e, 0xc2, 0x4b, 0xdd, 0x5d, 0x6a, 0x5d, 0xfc,
	0x3e, 0x45, 0x1d, 0xf9, 0x36, 0x74, 0xae, 0xad, 0x0a, 0xcf, 0x48, 0x7b, 0xd5, 0xbc, 0xf7, 0x9f,
	0x5a, 0xb8, 0x1d, 0x53, 0xdc, 0x4e, 0x01, 0x5b, 0xd8, 0x0b, 0x44, 0xa7, 0x9b, 0x67, 0xfb, 0x0f,
	0x7f, 0xbc, 0x86, 0x10, 0x97, 0x41, 0x49, 0x10, 0x88, 0x7c, 0x09, 0x7b, 0x9a, 0xa7, 0x5c, 0xcc,
	0xb9, 0xeb, 0xd9, 0xd6, 0x0e, 0x5a, 0x81, 0xf5, 0xfe, 0xd0, 0x84, 0xe3, 0x72, 0xfb, 0x19, 0xb7,
	0x4c, 0xe4, 0x3c, 0xf3, 0x31, 0x78, 0x17, 0x5a, 0x8a, 0x73, 0x7d, 0xbd, 0xab, 0x6a, 0x3a, 0x61,
	0xd5, 0x57, 0xf5, 0xe1, 0xe8, 0x25, 0xe7, 0x8a, 0xb2, 0x5c, 0xcc, 0x39, 0xc5, 0x42, 0x3a, 0x67,
	0x79, 0x78, 0xfc, 0x0e, 0x9d, 0xea, 0xc2, 0x69, 0x2e, 0x83, 0xc2, 0xd5, 0x02, 0x74, 0x5a, 0x2f,
	0x1c, 0x0d, 0x27, 0xf1, 0xbd, 0xd8, 0x2f, 0x60, 0xc7, 0xa7, 0x55, 0xbc, 0x85, 0x41, 0x48, 0xd7,
	0x10, 0x84, 0xeb, 0xb9, 0x9b, 0x04, 0x48, 0x72, 0x06, 0x07, 0x13, 0x66, 0xa8, 0x6b, 0x3d, 0xa8,
	0x90, 0xc3, 0x62, 0x26, 0xb3, 0xf0, 0x04, 0xb6, 0x27, 0xcc, 0x5c, 0xaa, 0xf9, 0xf9, 0xa5, 0x97,
	0xba, 0xe4, 0x0a, 0x06, 0x68, 0xcd, 0xd2, 0x1c, 0x5b, 0xb6, 0x46, 0xd2, 0x0e, 0xe2, 0x4b, 0x2f,
	0xad, 0xb9, 0x1c, 0x54, 0x2e, 0x77, 0xeb, 0x2e, 0x07, 0x37, 0xbb, 0x1c, 0x38, 0x97, 0x7b, 0xd7,
	0x5d, 0x3a, 0x29, 0x79, 0x0f, 0x0e, 0x2b, 0x96, 0xc5, 0xcc, 0x7a, 0x9f, 0x0d, 0xf4, 0xd9, 0x09,
	0x34, 0x9f, 0x05, 0x31, 0xf9, 0x0e, 0x1c, 0x94, 0x26, 0x15, 0x51, 0x40, 0xaf, 0x9d, 0x52, 0x5e,
	0x32, 0x5d, 0xba, 0x1d, 0x2c, 0xdd, 0xee, 0xd7, 0xdd, 0x0e, 0xfe, 0x97, 0x5b, 0x24, 0xdb, 0x7c,
	0xcd, 0x2d, 0xb2, 0x3d, 0x86, 0x1d, 0xe7, 0xd6, 0xa8, 0xb8, 0x85, 0xbe, 0xb6, 0x27, 0xcc, 0x5c,
	0x29, 0xd7, 0x8e, 0x1b, 0x15, 0x92, 0xa0, 0xed, 0xdb, 0x71, 0xa3, 0x7c, 0x0a, 0xdc, 0x07, 0x30,
	0x8a, 0xba, 0x45, 0xce, 0x6d, 0x07, 0x57, 0xed, 0x19, 0xf5, 0x84, 0x99, 0x8b, 0x34, 0xc7, 0x37,
	0x47, 0x39, 0xc5, 0x41, 0x78, 0x73, 0xdc, 0x84, 0x7c, 0x0b, 0x3a, 0x61, 0x4d, 0x36, 0xd3, 0x0c,
	0x0b, 0xc9, 0x21, 0x2e, 0x6c, 0xe1, 0xc2, 0xc7, 0x41, 0xe8, 0x3e, 0x13, 0x8c, 0x5a, 0xda, 0x10,
	0xdf, 0xc7, 0x1b, 0x55, 0x19, 0xbc, 0x03, 0x4d, 0xa3, 0x26, 0x96, 0xea, 0x99, 0x94, 0x42, 0x8e,
	0xe3, 0x23, 0xf4, 0xb2, 0xef, 0x64, 0x89, 0x17, 0xb9, 0x2e, 0xc2, 0x9b, 0xf0, 0x29, 0x13, 0x68,
	0xd4, 0x45, 0x37, 0x2d, 0x34, 0x2a, 0x85, 0xee, 0x5b, 0x4b, 0x1a, 0x4d, 0xcd, 0x42, 0xa6, 0x61,
	0x9f, 0xc7, 0xc8, 0xb8, 0x29, 0x8d, 0xbe, 0x5a, 0xc8, 0xd4, 0x6f, 0xf6, 0xbb, 0x70, 0xe4, 0xac,
	0x72, 0x66, 0xac, 0x37, 0xe5, 0x5a, 0x17, 0x3a, 0x3e, 0x41, 0xd3, 0x03, 0x69, 0xf4, 0xa7, 0xcc,
	0x58, 0x67, 0xfe, 0xb1, 0x93, 0x93, 0x0f, 0xe1, 0xee, 0xaa, 0xb9, 0x64, 0xe9, 0x4b, 0xaa, 0x39,
	0x33, 0x85, 0x8c, 0xef, 0xe0, 0xa2, 0xe3, 0xda, 0xa2, 0xa7, 0x2c, 0x7d, 0x99, 0xa0, 0x92, 0xfc,
	0x3a, 0x82, 0x66, 0x55, 0xf8, 0x04, 0x37, 0x71, 0x8c, 0x8f, 0x07, 0x5d, 0xd7, 0xfd, 0x0a, 0x85,
	0x34, 0x59, 0x01, 0x75, 0x9f, 0x91, 0xc3, 0xb1, 0x7b, 0x5e, 0xe6, 0x5c, 0x5b, 0x61, 0xf8, 0x94,
	0x4b, 0x1b, 0xa2, 0x73, 0xd7, 0xb3, 0x1f, 0x8e, 0xd5, 0x45, 0x5d, 0xeb, 0xc3, 0xf4, 0x2a, 0x82,
	0x13, 0x4c, 0xf8, 0x6c, 0xa6, 0x72, 0x91, 0x32, 0xcb, 0xab, 0xee, 0xe7, 0x1e, 0xd6, 0x89, 0x9f,
	0xaf, 0x69, 0x1f, 0x55, 0x9b, 0x9b, 0x74, 0x1d, 0xfe, 0xe3, 0x12, 0xbe, 0x6c, 0x81, 0x02, 0xb1,
	0xc1, 0x0d, 0xc4, 0xde, 0xba, 0x45, 0x62, 0x83, 0xd7, 0x88, 0x9d, 0xc3, 0x49, 0x15, 0x65, 0xea,
	0x62, 0xae, 0x34, 0x1f, 0x89, 0xaf, 0xb8, 0x89, 0xef, 0x63, 0x4a, 0x77, 0x2b, 0xed, 0x47, 0x63,
	0xf5, 0x3c, 0xe8, 0x7a, 0xff, 0xda, 0x0b, 0x1d, 0x7e, 0xfd, 0xff, 0x06, 0xf2, 0xc7, 0x08, 0xba,
	0xf8, 0xef, 0x46, 0x5a, 0xe4, 0x28, 0xd1, 0x53, 0x7f, 0x7f, 0x1e, 0x62, 0x0e, 0xad, 0x63, 0x8b,
	0x2b, 0x5f, 0xf7, 0xc9, 0x51, 0x89, 0x7e, 0xb9, 0x04, 0x27, 0xbf, 0x89, 0xa0, 0x53, 0x7e, 0x04,
	0x96, 0x84, 0x3e, 0x40, 0x42, 0xeb, 0x78, 0x39, 0x4b, 0xa4, 0xa4, 0x6d, 0x53, 0x55, 0xa7, 0xf1,
	0xf7, 0x08, 0xde, 0x2e, 0x0f, 0x65, 0x59, 0x68, 0xcb, 0x2c, 0xc0, 0x35, 0xf1, 0xf9, 0x2d, 0xa5,
	0xc2, 0xbd, 0x3c, 0x53, 0x4f, 0x87, 0xfa, 0xa3, 0xb2, 0xae, 0x87, 0x64, 0x70, 0x74, 0x6f, 0xe6,
	0x39, 0x58, 0xe5, 0xf9, 0xe8, 0xff, 0xc3, 0x73, 0x50, 0xe7, 0xf9, 0x75, 0xb4, 0xec, 0x47, 0x42,
	0x24, 0x7d, 0x16, 0xc4, 0x03, 0x64, 0x47, 0xd7, 0xc6, 0x2e, 0x24, 0xdb, 0xa1, 0x27, 0xe7, 0xe3,
	0xf7, 0xe2, 0x26, 0x4e, 0x83, 0x25, 0xa7, 0xef, 0xdf, 0x36, 0xa7, 0x41, 0xc9, 0xe9, 0x4f, 0x11,
	0x74, 0x57, 0xfa, 0xb5, 0xf2, 0x0e, 0x7c, 0x88, 0x77, 0x20, 0x5b, 0x13, 0xa5, 0x15, 0xc8, 0xe4,
	0xa8, 0x9c, 0xd6, 0x6e, 0xc4, 0x70, 0x07, 0x6f, 0xeb, 0x07, 0xff, 0x0d, 0x00, 0x00, 0xff, 0xff,
	0x1e, 0xff, 0x8e, 0xf4, 0x24, 0x15, 0x00, 0x00,
}
