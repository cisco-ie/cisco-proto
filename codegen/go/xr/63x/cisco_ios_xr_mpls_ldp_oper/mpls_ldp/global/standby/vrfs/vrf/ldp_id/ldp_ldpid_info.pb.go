/*
Copyright 2019 Cisco Systems

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: ldp_ldpid_info.proto

package cisco_ios_xr_mpls_ldp_oper_mpls_ldp_global_standby_vrfs_vrf_ldp_id

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type LdpLdpidInfo_KEYS struct {
	VrfName              string   `protobuf:"bytes,1,opt,name=vrf_name,json=vrfName,proto3" json:"vrf_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LdpLdpidInfo_KEYS) Reset()         { *m = LdpLdpidInfo_KEYS{} }
func (m *LdpLdpidInfo_KEYS) String() string { return proto.CompactTextString(m) }
func (*LdpLdpidInfo_KEYS) ProtoMessage()    {}
func (*LdpLdpidInfo_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_78168b2f4678499a, []int{0}
}

func (m *LdpLdpidInfo_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LdpLdpidInfo_KEYS.Unmarshal(m, b)
}
func (m *LdpLdpidInfo_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LdpLdpidInfo_KEYS.Marshal(b, m, deterministic)
}
func (m *LdpLdpidInfo_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LdpLdpidInfo_KEYS.Merge(m, src)
}
func (m *LdpLdpidInfo_KEYS) XXX_Size() int {
	return xxx_messageInfo_LdpLdpidInfo_KEYS.Size(m)
}
func (m *LdpLdpidInfo_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_LdpLdpidInfo_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_LdpLdpidInfo_KEYS proto.InternalMessageInfo

func (m *LdpLdpidInfo_KEYS) GetVrfName() string {
	if m != nil {
		return m.VrfName
	}
	return ""
}

type LdpLdpidInfo struct {
	LsrId                string   `protobuf:"bytes,50,opt,name=lsr_id,json=lsrId,proto3" json:"lsr_id,omitempty"`
	LabelSpaceId         uint32   `protobuf:"varint,51,opt,name=label_space_id,json=labelSpaceId,proto3" json:"label_space_id,omitempty"`
	LdpId                string   `protobuf:"bytes,52,opt,name=ldp_id,json=ldpId,proto3" json:"ldp_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LdpLdpidInfo) Reset()         { *m = LdpLdpidInfo{} }
func (m *LdpLdpidInfo) String() string { return proto.CompactTextString(m) }
func (*LdpLdpidInfo) ProtoMessage()    {}
func (*LdpLdpidInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_78168b2f4678499a, []int{1}
}

func (m *LdpLdpidInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LdpLdpidInfo.Unmarshal(m, b)
}
func (m *LdpLdpidInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LdpLdpidInfo.Marshal(b, m, deterministic)
}
func (m *LdpLdpidInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LdpLdpidInfo.Merge(m, src)
}
func (m *LdpLdpidInfo) XXX_Size() int {
	return xxx_messageInfo_LdpLdpidInfo.Size(m)
}
func (m *LdpLdpidInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_LdpLdpidInfo.DiscardUnknown(m)
}

var xxx_messageInfo_LdpLdpidInfo proto.InternalMessageInfo

func (m *LdpLdpidInfo) GetLsrId() string {
	if m != nil {
		return m.LsrId
	}
	return ""
}

func (m *LdpLdpidInfo) GetLabelSpaceId() uint32 {
	if m != nil {
		return m.LabelSpaceId
	}
	return 0
}

func (m *LdpLdpidInfo) GetLdpId() string {
	if m != nil {
		return m.LdpId
	}
	return ""
}

func init() {
	proto.RegisterType((*LdpLdpidInfo_KEYS)(nil), "cisco_ios_xr_mpls_ldp_oper.mpls_ldp.global.standby.vrfs.vrf.ldp_id.ldp_ldpid_info_KEYS")
	proto.RegisterType((*LdpLdpidInfo)(nil), "cisco_ios_xr_mpls_ldp_oper.mpls_ldp.global.standby.vrfs.vrf.ldp_id.ldp_ldpid_info")
}

func init() { proto.RegisterFile("ldp_ldpid_info.proto", fileDescriptor_78168b2f4678499a) }

var fileDescriptor_78168b2f4678499a = []byte{
	// 209 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x54, 0x8f, 0xb1, 0x4a, 0x04, 0x31,
	0x10, 0x86, 0xd9, 0xc2, 0x53, 0x83, 0x5e, 0x11, 0x15, 0xd6, 0xee, 0x38, 0x2c, 0xae, 0x0a, 0xe2,
	0xf9, 0x04, 0x82, 0xc5, 0x22, 0x58, 0xdc, 0x56, 0x56, 0x43, 0xb2, 0x93, 0x48, 0x60, 0x76, 0x13,
	0x66, 0x96, 0x45, 0xdf, 0x5e, 0x12, 0xbc, 0x62, 0x9b, 0x81, 0xf9, 0xe7, 0xfb, 0x86, 0x19, 0x75,
	0x4f, 0x98, 0x81, 0x30, 0x47, 0x84, 0x38, 0x85, 0x64, 0x32, 0xa7, 0x39, 0xe9, 0xb7, 0x21, 0xca,
	0x90, 0x20, 0x26, 0x81, 0x1f, 0x86, 0x31, 0x93, 0x14, 0x06, 0x52, 0xf6, 0x6c, 0xce, 0x9d, 0xf9,
	0xa6, 0xe4, 0x2c, 0x19, 0x99, 0xed, 0x84, 0xee, 0xd7, 0x2c, 0x1c, 0xa4, 0x14, 0x53, 0xc8, 0x88,
	0xfb, 0x67, 0x75, 0xb7, 0xde, 0x0d, 0x1f, 0xef, 0x5f, 0xbd, 0x7e, 0x54, 0x57, 0x0b, 0x07, 0x98,
	0xec, 0xe8, 0xdb, 0x66, 0xd7, 0x1c, 0xae, 0x4f, 0x97, 0x0b, 0x87, 0x4f, 0x3b, 0xfa, 0x3d, 0xaa,
	0xed, 0xda, 0xd0, 0x0f, 0x6a, 0x43, 0xc2, 0x10, 0xb1, 0x7d, 0xa9, 0xe8, 0x05, 0x09, 0x77, 0xa8,
	0x9f, 0xd4, 0x96, 0xac, 0xf3, 0x04, 0x92, 0xed, 0xe0, 0xcb, 0xf8, 0xb8, 0x6b, 0x0e, 0xb7, 0xa7,
	0x9b, 0x9a, 0xf6, 0x25, 0xec, 0xb0, 0xca, 0xf5, 0x94, 0xf6, 0xf5, 0x5f, 0xc6, 0xdc, 0xa1, 0xdb,
	0xd4, 0x17, 0x8f, 0x7f, 0x01, 0x00, 0x00, 0xff, 0xff, 0x10, 0x30, 0x7e, 0x57, 0xfa, 0x00, 0x00,
	0x00,
}
