/*
Copyright 2019 Cisco Systems

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: ldp_binding_advt_spec.proto

package cisco_ios_xr_mpls_ldp_oper_mpls_ldp_global_active_vrfs_vrf_afs_af_bindings_advertise_spec

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type LdpBindingAdvtSpec_KEYS struct {
	VrfName              string   `protobuf:"bytes,1,opt,name=vrf_name,json=vrfName,proto3" json:"vrf_name,omitempty"`
	AfName               string   `protobuf:"bytes,2,opt,name=af_name,json=afName,proto3" json:"af_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LdpBindingAdvtSpec_KEYS) Reset()         { *m = LdpBindingAdvtSpec_KEYS{} }
func (m *LdpBindingAdvtSpec_KEYS) String() string { return proto.CompactTextString(m) }
func (*LdpBindingAdvtSpec_KEYS) ProtoMessage()    {}
func (*LdpBindingAdvtSpec_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_3c073e83ecd121ed, []int{0}
}

func (m *LdpBindingAdvtSpec_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LdpBindingAdvtSpec_KEYS.Unmarshal(m, b)
}
func (m *LdpBindingAdvtSpec_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LdpBindingAdvtSpec_KEYS.Marshal(b, m, deterministic)
}
func (m *LdpBindingAdvtSpec_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LdpBindingAdvtSpec_KEYS.Merge(m, src)
}
func (m *LdpBindingAdvtSpec_KEYS) XXX_Size() int {
	return xxx_messageInfo_LdpBindingAdvtSpec_KEYS.Size(m)
}
func (m *LdpBindingAdvtSpec_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_LdpBindingAdvtSpec_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_LdpBindingAdvtSpec_KEYS proto.InternalMessageInfo

func (m *LdpBindingAdvtSpec_KEYS) GetVrfName() string {
	if m != nil {
		return m.VrfName
	}
	return ""
}

func (m *LdpBindingAdvtSpec_KEYS) GetAfName() string {
	if m != nil {
		return m.AfName
	}
	return ""
}

type LdpBindingAdvtAclPair struct {
	PrefixAcl            string   `protobuf:"bytes,1,opt,name=prefix_acl,json=prefixAcl,proto3" json:"prefix_acl,omitempty"`
	PeerAcl              string   `protobuf:"bytes,2,opt,name=peer_acl,json=peerAcl,proto3" json:"peer_acl,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LdpBindingAdvtAclPair) Reset()         { *m = LdpBindingAdvtAclPair{} }
func (m *LdpBindingAdvtAclPair) String() string { return proto.CompactTextString(m) }
func (*LdpBindingAdvtAclPair) ProtoMessage()    {}
func (*LdpBindingAdvtAclPair) Descriptor() ([]byte, []int) {
	return fileDescriptor_3c073e83ecd121ed, []int{1}
}

func (m *LdpBindingAdvtAclPair) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LdpBindingAdvtAclPair.Unmarshal(m, b)
}
func (m *LdpBindingAdvtAclPair) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LdpBindingAdvtAclPair.Marshal(b, m, deterministic)
}
func (m *LdpBindingAdvtAclPair) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LdpBindingAdvtAclPair.Merge(m, src)
}
func (m *LdpBindingAdvtAclPair) XXX_Size() int {
	return xxx_messageInfo_LdpBindingAdvtAclPair.Size(m)
}
func (m *LdpBindingAdvtAclPair) XXX_DiscardUnknown() {
	xxx_messageInfo_LdpBindingAdvtAclPair.DiscardUnknown(m)
}

var xxx_messageInfo_LdpBindingAdvtAclPair proto.InternalMessageInfo

func (m *LdpBindingAdvtAclPair) GetPrefixAcl() string {
	if m != nil {
		return m.PrefixAcl
	}
	return ""
}

func (m *LdpBindingAdvtAclPair) GetPeerAcl() string {
	if m != nil {
		return m.PeerAcl
	}
	return ""
}

type LdpBindingAlloc struct {
	HasAcl               bool     `protobuf:"varint,1,opt,name=has_acl,json=hasAcl,proto3" json:"has_acl,omitempty"`
	PrefixAcl            string   `protobuf:"bytes,2,opt,name=prefix_acl,json=prefixAcl,proto3" json:"prefix_acl,omitempty"`
	IsHostRouteOnly      bool     `protobuf:"varint,3,opt,name=is_host_route_only,json=isHostRouteOnly,proto3" json:"is_host_route_only,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LdpBindingAlloc) Reset()         { *m = LdpBindingAlloc{} }
func (m *LdpBindingAlloc) String() string { return proto.CompactTextString(m) }
func (*LdpBindingAlloc) ProtoMessage()    {}
func (*LdpBindingAlloc) Descriptor() ([]byte, []int) {
	return fileDescriptor_3c073e83ecd121ed, []int{2}
}

func (m *LdpBindingAlloc) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LdpBindingAlloc.Unmarshal(m, b)
}
func (m *LdpBindingAlloc) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LdpBindingAlloc.Marshal(b, m, deterministic)
}
func (m *LdpBindingAlloc) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LdpBindingAlloc.Merge(m, src)
}
func (m *LdpBindingAlloc) XXX_Size() int {
	return xxx_messageInfo_LdpBindingAlloc.Size(m)
}
func (m *LdpBindingAlloc) XXX_DiscardUnknown() {
	xxx_messageInfo_LdpBindingAlloc.DiscardUnknown(m)
}

var xxx_messageInfo_LdpBindingAlloc proto.InternalMessageInfo

func (m *LdpBindingAlloc) GetHasAcl() bool {
	if m != nil {
		return m.HasAcl
	}
	return false
}

func (m *LdpBindingAlloc) GetPrefixAcl() string {
	if m != nil {
		return m.PrefixAcl
	}
	return ""
}

func (m *LdpBindingAlloc) GetIsHostRouteOnly() bool {
	if m != nil {
		return m.IsHostRouteOnly
	}
	return false
}

type LdpBindingAdvtSpec struct {
	AdvtAcl              []*LdpBindingAdvtAclPair `protobuf:"bytes,50,rep,name=advt_acl,json=advtAcl,proto3" json:"advt_acl,omitempty"`
	AllocationAcl        *LdpBindingAlloc         `protobuf:"bytes,51,opt,name=allocation_acl,json=allocationAcl,proto3" json:"allocation_acl,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *LdpBindingAdvtSpec) Reset()         { *m = LdpBindingAdvtSpec{} }
func (m *LdpBindingAdvtSpec) String() string { return proto.CompactTextString(m) }
func (*LdpBindingAdvtSpec) ProtoMessage()    {}
func (*LdpBindingAdvtSpec) Descriptor() ([]byte, []int) {
	return fileDescriptor_3c073e83ecd121ed, []int{3}
}

func (m *LdpBindingAdvtSpec) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LdpBindingAdvtSpec.Unmarshal(m, b)
}
func (m *LdpBindingAdvtSpec) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LdpBindingAdvtSpec.Marshal(b, m, deterministic)
}
func (m *LdpBindingAdvtSpec) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LdpBindingAdvtSpec.Merge(m, src)
}
func (m *LdpBindingAdvtSpec) XXX_Size() int {
	return xxx_messageInfo_LdpBindingAdvtSpec.Size(m)
}
func (m *LdpBindingAdvtSpec) XXX_DiscardUnknown() {
	xxx_messageInfo_LdpBindingAdvtSpec.DiscardUnknown(m)
}

var xxx_messageInfo_LdpBindingAdvtSpec proto.InternalMessageInfo

func (m *LdpBindingAdvtSpec) GetAdvtAcl() []*LdpBindingAdvtAclPair {
	if m != nil {
		return m.AdvtAcl
	}
	return nil
}

func (m *LdpBindingAdvtSpec) GetAllocationAcl() *LdpBindingAlloc {
	if m != nil {
		return m.AllocationAcl
	}
	return nil
}

func init() {
	proto.RegisterType((*LdpBindingAdvtSpec_KEYS)(nil), "cisco_ios_xr_mpls_ldp_oper.mpls_ldp.global.active.vrfs.vrf.afs.af.bindings_advertise_spec.ldp_binding_advt_spec_KEYS")
	proto.RegisterType((*LdpBindingAdvtAclPair)(nil), "cisco_ios_xr_mpls_ldp_oper.mpls_ldp.global.active.vrfs.vrf.afs.af.bindings_advertise_spec.ldp_binding_advt_acl_pair")
	proto.RegisterType((*LdpBindingAlloc)(nil), "cisco_ios_xr_mpls_ldp_oper.mpls_ldp.global.active.vrfs.vrf.afs.af.bindings_advertise_spec.ldp_binding_alloc")
	proto.RegisterType((*LdpBindingAdvtSpec)(nil), "cisco_ios_xr_mpls_ldp_oper.mpls_ldp.global.active.vrfs.vrf.afs.af.bindings_advertise_spec.ldp_binding_advt_spec")
}

func init() { proto.RegisterFile("ldp_binding_advt_spec.proto", fileDescriptor_3c073e83ecd121ed) }

var fileDescriptor_3c073e83ecd121ed = []byte{
	// 347 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x92, 0xc1, 0x4a, 0x2b, 0x31,
	0x14, 0x86, 0x99, 0x16, 0x3a, 0x6d, 0xca, 0xbd, 0x97, 0x3b, 0x20, 0xb6, 0x8a, 0x50, 0x66, 0x55,
	0x10, 0xb2, 0x68, 0x9f, 0xa0, 0x0b, 0x41, 0x10, 0x54, 0x46, 0x5c, 0x74, 0x15, 0x4e, 0xd3, 0x4c,
	0x1b, 0x38, 0x9d, 0x84, 0x9c, 0x38, 0xb4, 0x4f, 0xe1, 0xc2, 0x07, 0xf2, 0xd5, 0x24, 0x69, 0xab,
	0x54, 0xeb, 0x52, 0x37, 0x81, 0x73, 0xfe, 0xf0, 0xfd, 0xff, 0x39, 0x09, 0x3b, 0xc7, 0xb9, 0x15,
	0x33, 0x5d, 0xcd, 0x75, 0xb5, 0x10, 0x30, 0xaf, 0xbd, 0x20, 0xab, 0x24, 0xb7, 0xce, 0x78, 0x93,
	0x4d, 0xa5, 0x26, 0x69, 0x84, 0x36, 0x24, 0xd6, 0x4e, 0xac, 0x2c, 0x92, 0x08, 0xd7, 0x8d, 0x55,
	0x8e, 0xef, 0x2b, 0xbe, 0x40, 0x33, 0x03, 0xe4, 0x20, 0xbd, 0xae, 0x15, 0xaf, 0x5d, 0x49, 0xe1,
	0xe0, 0x50, 0x12, 0x87, 0x92, 0xef, 0xd0, 0x14, 0xd8, 0xca, 0x79, 0x4d, 0x2a, 0x1a, 0xe4, 0xf7,
	0xec, 0xec, 0xa8, 0xb3, 0xb8, 0xb9, 0x9a, 0x3e, 0x64, 0x7d, 0xd6, 0xae, 0x5d, 0x29, 0x2a, 0x58,
	0xa9, 0x5e, 0x32, 0x48, 0x86, 0x9d, 0x22, 0xad, 0x5d, 0x79, 0x0b, 0x2b, 0x95, 0x9d, 0xb2, 0x14,
	0x76, 0x4a, 0x23, 0x2a, 0x2d, 0x88, 0x42, 0xfe, 0xc8, 0xfa, 0x5f, 0x88, 0x20, 0x51, 0x58, 0xd0,
	0x2e, 0xbb, 0x60, 0xcc, 0x3a, 0x55, 0xea, 0x75, 0x68, 0xed, 0x90, 0x9d, 0x6d, 0x67, 0x22, 0x31,
	0xf8, 0x59, 0xa5, 0x5c, 0x14, 0xb7, 0xd4, 0x34, 0xd4, 0x13, 0x89, 0xf9, 0x9a, 0xfd, 0x3f, 0xc0,
	0x22, 0x1a, 0x19, 0x42, 0x2c, 0x81, 0xde, 0x59, 0xed, 0xa2, 0xb5, 0x04, 0x0a, 0xa0, 0x43, 0x9f,
	0xc6, 0x67, 0x9f, 0x4b, 0x96, 0x69, 0x12, 0x4b, 0x43, 0x5e, 0x38, 0xf3, 0xe4, 0x95, 0x30, 0x15,
	0x6e, 0x7a, 0xcd, 0x88, 0xf8, 0xa7, 0xe9, 0xda, 0x90, 0x2f, 0x42, 0xff, 0xae, 0xc2, 0x4d, 0xfe,
	0xda, 0x60, 0x27, 0x47, 0x77, 0x94, 0x3d, 0x27, 0xac, 0xbd, 0x9f, 0xaf, 0x37, 0x1a, 0x34, 0x87,
	0xdd, 0x91, 0xe7, 0x3f, 0xf6, 0x56, 0xfc, 0xdb, 0xb5, 0x16, 0x69, 0x28, 0xc3, 0x60, 0x2f, 0x09,
	0xfb, 0x1b, 0x57, 0x03, 0x5e, 0x9b, 0x2a, 0xe6, 0x1a, 0x0f, 0x92, 0x61, 0x77, 0x84, 0xbf, 0x95,
	0x2b, 0x98, 0x17, 0x7f, 0x3e, 0x32, 0x4c, 0x24, 0xce, 0x5a, 0xf1, 0x1b, 0x8f, 0xdf, 0x02, 0x00,
	0x00, 0xff, 0xff, 0xa1, 0x95, 0xae, 0x91, 0xe5, 0x02, 0x00, 0x00,
}
