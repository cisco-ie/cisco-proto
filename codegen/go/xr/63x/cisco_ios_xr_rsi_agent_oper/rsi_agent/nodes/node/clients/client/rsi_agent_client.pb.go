/*
Copyright 2019 Cisco Systems

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: rsi_agent_client.proto

package cisco_ios_xr_rsi_agent_oper_rsi_agent_nodes_node_clients_client

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type RsiAgentClient_KEYS struct {
	NodeName             string   `protobuf:"bytes,1,opt,name=node_name,json=nodeName,proto3" json:"node_name,omitempty"`
	ClientName           uint32   `protobuf:"varint,2,opt,name=client_name,json=clientName,proto3" json:"client_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RsiAgentClient_KEYS) Reset()         { *m = RsiAgentClient_KEYS{} }
func (m *RsiAgentClient_KEYS) String() string { return proto.CompactTextString(m) }
func (*RsiAgentClient_KEYS) ProtoMessage()    {}
func (*RsiAgentClient_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_5310d5256260aad9, []int{0}
}

func (m *RsiAgentClient_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RsiAgentClient_KEYS.Unmarshal(m, b)
}
func (m *RsiAgentClient_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RsiAgentClient_KEYS.Marshal(b, m, deterministic)
}
func (m *RsiAgentClient_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RsiAgentClient_KEYS.Merge(m, src)
}
func (m *RsiAgentClient_KEYS) XXX_Size() int {
	return xxx_messageInfo_RsiAgentClient_KEYS.Size(m)
}
func (m *RsiAgentClient_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_RsiAgentClient_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_RsiAgentClient_KEYS proto.InternalMessageInfo

func (m *RsiAgentClient_KEYS) GetNodeName() string {
	if m != nil {
		return m.NodeName
	}
	return ""
}

func (m *RsiAgentClient_KEYS) GetClientName() uint32 {
	if m != nil {
		return m.ClientName
	}
	return 0
}

type RaNotifRegAllT struct {
	MdbType              uint32   `protobuf:"varint,1,opt,name=mdb_type,json=mdbType,proto3" json:"mdb_type,omitempty"`
	RegHd                uint64   `protobuf:"varint,2,opt,name=reg_hd,json=regHd,proto3" json:"reg_hd,omitempty"`
	NumNotifsDispatched  uint32   `protobuf:"varint,3,opt,name=num_notifs_dispatched,json=numNotifsDispatched,proto3" json:"num_notifs_dispatched,omitempty"`
	Flags                uint32   `protobuf:"varint,4,opt,name=flags,proto3" json:"flags,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RaNotifRegAllT) Reset()         { *m = RaNotifRegAllT{} }
func (m *RaNotifRegAllT) String() string { return proto.CompactTextString(m) }
func (*RaNotifRegAllT) ProtoMessage()    {}
func (*RaNotifRegAllT) Descriptor() ([]byte, []int) {
	return fileDescriptor_5310d5256260aad9, []int{1}
}

func (m *RaNotifRegAllT) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RaNotifRegAllT.Unmarshal(m, b)
}
func (m *RaNotifRegAllT) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RaNotifRegAllT.Marshal(b, m, deterministic)
}
func (m *RaNotifRegAllT) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RaNotifRegAllT.Merge(m, src)
}
func (m *RaNotifRegAllT) XXX_Size() int {
	return xxx_messageInfo_RaNotifRegAllT.Size(m)
}
func (m *RaNotifRegAllT) XXX_DiscardUnknown() {
	xxx_messageInfo_RaNotifRegAllT.DiscardUnknown(m)
}

var xxx_messageInfo_RaNotifRegAllT proto.InternalMessageInfo

func (m *RaNotifRegAllT) GetMdbType() uint32 {
	if m != nil {
		return m.MdbType
	}
	return 0
}

func (m *RaNotifRegAllT) GetRegHd() uint64 {
	if m != nil {
		return m.RegHd
	}
	return 0
}

func (m *RaNotifRegAllT) GetNumNotifsDispatched() uint32 {
	if m != nil {
		return m.NumNotifsDispatched
	}
	return 0
}

func (m *RaNotifRegAllT) GetFlags() uint32 {
	if m != nil {
		return m.Flags
	}
	return 0
}

type RaNotifRegByStateT struct {
	MdbType              uint32   `protobuf:"varint,1,opt,name=mdb_type,json=mdbType,proto3" json:"mdb_type,omitempty"`
	RegHd                uint64   `protobuf:"varint,2,opt,name=reg_hd,json=regHd,proto3" json:"reg_hd,omitempty"`
	NumNotifsDispatched  uint32   `protobuf:"varint,3,opt,name=num_notifs_dispatched,json=numNotifsDispatched,proto3" json:"num_notifs_dispatched,omitempty"`
	StateId              uint64   `protobuf:"varint,4,opt,name=state_id,json=stateId,proto3" json:"state_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RaNotifRegByStateT) Reset()         { *m = RaNotifRegByStateT{} }
func (m *RaNotifRegByStateT) String() string { return proto.CompactTextString(m) }
func (*RaNotifRegByStateT) ProtoMessage()    {}
func (*RaNotifRegByStateT) Descriptor() ([]byte, []int) {
	return fileDescriptor_5310d5256260aad9, []int{2}
}

func (m *RaNotifRegByStateT) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RaNotifRegByStateT.Unmarshal(m, b)
}
func (m *RaNotifRegByStateT) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RaNotifRegByStateT.Marshal(b, m, deterministic)
}
func (m *RaNotifRegByStateT) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RaNotifRegByStateT.Merge(m, src)
}
func (m *RaNotifRegByStateT) XXX_Size() int {
	return xxx_messageInfo_RaNotifRegByStateT.Size(m)
}
func (m *RaNotifRegByStateT) XXX_DiscardUnknown() {
	xxx_messageInfo_RaNotifRegByStateT.DiscardUnknown(m)
}

var xxx_messageInfo_RaNotifRegByStateT proto.InternalMessageInfo

func (m *RaNotifRegByStateT) GetMdbType() uint32 {
	if m != nil {
		return m.MdbType
	}
	return 0
}

func (m *RaNotifRegByStateT) GetRegHd() uint64 {
	if m != nil {
		return m.RegHd
	}
	return 0
}

func (m *RaNotifRegByStateT) GetNumNotifsDispatched() uint32 {
	if m != nil {
		return m.NumNotifsDispatched
	}
	return 0
}

func (m *RaNotifRegByStateT) GetStateId() uint64 {
	if m != nil {
		return m.StateId
	}
	return 0
}

type RaNotifRegByVrT struct {
	MdbType              uint32   `protobuf:"varint,1,opt,name=mdb_type,json=mdbType,proto3" json:"mdb_type,omitempty"`
	RegHd                uint64   `protobuf:"varint,2,opt,name=reg_hd,json=regHd,proto3" json:"reg_hd,omitempty"`
	NumNotifsDispatched  uint32   `protobuf:"varint,3,opt,name=num_notifs_dispatched,json=numNotifsDispatched,proto3" json:"num_notifs_dispatched,omitempty"`
	VrName               string   `protobuf:"bytes,4,opt,name=vr_name,json=vrName,proto3" json:"vr_name,omitempty"`
	VrId                 uint32   `protobuf:"varint,5,opt,name=vr_id,json=vrId,proto3" json:"vr_id,omitempty"`
	Flags                uint32   `protobuf:"varint,6,opt,name=flags,proto3" json:"flags,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RaNotifRegByVrT) Reset()         { *m = RaNotifRegByVrT{} }
func (m *RaNotifRegByVrT) String() string { return proto.CompactTextString(m) }
func (*RaNotifRegByVrT) ProtoMessage()    {}
func (*RaNotifRegByVrT) Descriptor() ([]byte, []int) {
	return fileDescriptor_5310d5256260aad9, []int{3}
}

func (m *RaNotifRegByVrT) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RaNotifRegByVrT.Unmarshal(m, b)
}
func (m *RaNotifRegByVrT) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RaNotifRegByVrT.Marshal(b, m, deterministic)
}
func (m *RaNotifRegByVrT) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RaNotifRegByVrT.Merge(m, src)
}
func (m *RaNotifRegByVrT) XXX_Size() int {
	return xxx_messageInfo_RaNotifRegByVrT.Size(m)
}
func (m *RaNotifRegByVrT) XXX_DiscardUnknown() {
	xxx_messageInfo_RaNotifRegByVrT.DiscardUnknown(m)
}

var xxx_messageInfo_RaNotifRegByVrT proto.InternalMessageInfo

func (m *RaNotifRegByVrT) GetMdbType() uint32 {
	if m != nil {
		return m.MdbType
	}
	return 0
}

func (m *RaNotifRegByVrT) GetRegHd() uint64 {
	if m != nil {
		return m.RegHd
	}
	return 0
}

func (m *RaNotifRegByVrT) GetNumNotifsDispatched() uint32 {
	if m != nil {
		return m.NumNotifsDispatched
	}
	return 0
}

func (m *RaNotifRegByVrT) GetVrName() string {
	if m != nil {
		return m.VrName
	}
	return ""
}

func (m *RaNotifRegByVrT) GetVrId() uint32 {
	if m != nil {
		return m.VrId
	}
	return 0
}

func (m *RaNotifRegByVrT) GetFlags() uint32 {
	if m != nil {
		return m.Flags
	}
	return 0
}

type RaNotifRegByVrfT struct {
	MdbType              uint32   `protobuf:"varint,1,opt,name=mdb_type,json=mdbType,proto3" json:"mdb_type,omitempty"`
	RegHd                uint64   `protobuf:"varint,2,opt,name=reg_hd,json=regHd,proto3" json:"reg_hd,omitempty"`
	NumNotifsDispatched  uint32   `protobuf:"varint,3,opt,name=num_notifs_dispatched,json=numNotifsDispatched,proto3" json:"num_notifs_dispatched,omitempty"`
	VrfName              string   `protobuf:"bytes,4,opt,name=vrf_name,json=vrfName,proto3" json:"vrf_name,omitempty"`
	VrfId                uint32   `protobuf:"varint,5,opt,name=vrf_id,json=vrfId,proto3" json:"vrf_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RaNotifRegByVrfT) Reset()         { *m = RaNotifRegByVrfT{} }
func (m *RaNotifRegByVrfT) String() string { return proto.CompactTextString(m) }
func (*RaNotifRegByVrfT) ProtoMessage()    {}
func (*RaNotifRegByVrfT) Descriptor() ([]byte, []int) {
	return fileDescriptor_5310d5256260aad9, []int{4}
}

func (m *RaNotifRegByVrfT) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RaNotifRegByVrfT.Unmarshal(m, b)
}
func (m *RaNotifRegByVrfT) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RaNotifRegByVrfT.Marshal(b, m, deterministic)
}
func (m *RaNotifRegByVrfT) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RaNotifRegByVrfT.Merge(m, src)
}
func (m *RaNotifRegByVrfT) XXX_Size() int {
	return xxx_messageInfo_RaNotifRegByVrfT.Size(m)
}
func (m *RaNotifRegByVrfT) XXX_DiscardUnknown() {
	xxx_messageInfo_RaNotifRegByVrfT.DiscardUnknown(m)
}

var xxx_messageInfo_RaNotifRegByVrfT proto.InternalMessageInfo

func (m *RaNotifRegByVrfT) GetMdbType() uint32 {
	if m != nil {
		return m.MdbType
	}
	return 0
}

func (m *RaNotifRegByVrfT) GetRegHd() uint64 {
	if m != nil {
		return m.RegHd
	}
	return 0
}

func (m *RaNotifRegByVrfT) GetNumNotifsDispatched() uint32 {
	if m != nil {
		return m.NumNotifsDispatched
	}
	return 0
}

func (m *RaNotifRegByVrfT) GetVrfName() string {
	if m != nil {
		return m.VrfName
	}
	return ""
}

func (m *RaNotifRegByVrfT) GetVrfId() uint32 {
	if m != nil {
		return m.VrfId
	}
	return 0
}

type RsiVpnidT struct {
	Oui                  uint32   `protobuf:"varint,1,opt,name=oui,proto3" json:"oui,omitempty"`
	Index                uint32   `protobuf:"varint,2,opt,name=index,proto3" json:"index,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RsiVpnidT) Reset()         { *m = RsiVpnidT{} }
func (m *RsiVpnidT) String() string { return proto.CompactTextString(m) }
func (*RsiVpnidT) ProtoMessage()    {}
func (*RsiVpnidT) Descriptor() ([]byte, []int) {
	return fileDescriptor_5310d5256260aad9, []int{5}
}

func (m *RsiVpnidT) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RsiVpnidT.Unmarshal(m, b)
}
func (m *RsiVpnidT) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RsiVpnidT.Marshal(b, m, deterministic)
}
func (m *RsiVpnidT) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RsiVpnidT.Merge(m, src)
}
func (m *RsiVpnidT) XXX_Size() int {
	return xxx_messageInfo_RsiVpnidT.Size(m)
}
func (m *RsiVpnidT) XXX_DiscardUnknown() {
	xxx_messageInfo_RsiVpnidT.DiscardUnknown(m)
}

var xxx_messageInfo_RsiVpnidT proto.InternalMessageInfo

func (m *RsiVpnidT) GetOui() uint32 {
	if m != nil {
		return m.Oui
	}
	return 0
}

func (m *RsiVpnidT) GetIndex() uint32 {
	if m != nil {
		return m.Index
	}
	return 0
}

type RaNotifRegByVpnT struct {
	MdbType              uint32     `protobuf:"varint,1,opt,name=mdb_type,json=mdbType,proto3" json:"mdb_type,omitempty"`
	RegHd                uint32     `protobuf:"varint,2,opt,name=reg_hd,json=regHd,proto3" json:"reg_hd,omitempty"`
	NumNotifsDispatched  uint32     `protobuf:"varint,3,opt,name=num_notifs_dispatched,json=numNotifsDispatched,proto3" json:"num_notifs_dispatched,omitempty"`
	VpnId                *RsiVpnidT `protobuf:"bytes,4,opt,name=vpn_id,json=vpnId,proto3" json:"vpn_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *RaNotifRegByVpnT) Reset()         { *m = RaNotifRegByVpnT{} }
func (m *RaNotifRegByVpnT) String() string { return proto.CompactTextString(m) }
func (*RaNotifRegByVpnT) ProtoMessage()    {}
func (*RaNotifRegByVpnT) Descriptor() ([]byte, []int) {
	return fileDescriptor_5310d5256260aad9, []int{6}
}

func (m *RaNotifRegByVpnT) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RaNotifRegByVpnT.Unmarshal(m, b)
}
func (m *RaNotifRegByVpnT) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RaNotifRegByVpnT.Marshal(b, m, deterministic)
}
func (m *RaNotifRegByVpnT) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RaNotifRegByVpnT.Merge(m, src)
}
func (m *RaNotifRegByVpnT) XXX_Size() int {
	return xxx_messageInfo_RaNotifRegByVpnT.Size(m)
}
func (m *RaNotifRegByVpnT) XXX_DiscardUnknown() {
	xxx_messageInfo_RaNotifRegByVpnT.DiscardUnknown(m)
}

var xxx_messageInfo_RaNotifRegByVpnT proto.InternalMessageInfo

func (m *RaNotifRegByVpnT) GetMdbType() uint32 {
	if m != nil {
		return m.MdbType
	}
	return 0
}

func (m *RaNotifRegByVpnT) GetRegHd() uint32 {
	if m != nil {
		return m.RegHd
	}
	return 0
}

func (m *RaNotifRegByVpnT) GetNumNotifsDispatched() uint32 {
	if m != nil {
		return m.NumNotifsDispatched
	}
	return 0
}

func (m *RaNotifRegByVpnT) GetVpnId() *RsiVpnidT {
	if m != nil {
		return m.VpnId
	}
	return nil
}

type RaNotifRegByTblT struct {
	MdbType              uint32   `protobuf:"varint,1,opt,name=mdb_type,json=mdbType,proto3" json:"mdb_type,omitempty"`
	RegHd                uint64   `protobuf:"varint,2,opt,name=reg_hd,json=regHd,proto3" json:"reg_hd,omitempty"`
	NumNotifsDispatched  uint32   `protobuf:"varint,3,opt,name=num_notifs_dispatched,json=numNotifsDispatched,proto3" json:"num_notifs_dispatched,omitempty"`
	TblName              string   `protobuf:"bytes,4,opt,name=tbl_name,json=tblName,proto3" json:"tbl_name,omitempty"`
	TblId                uint32   `protobuf:"varint,5,opt,name=tbl_id,json=tblId,proto3" json:"tbl_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RaNotifRegByTblT) Reset()         { *m = RaNotifRegByTblT{} }
func (m *RaNotifRegByTblT) String() string { return proto.CompactTextString(m) }
func (*RaNotifRegByTblT) ProtoMessage()    {}
func (*RaNotifRegByTblT) Descriptor() ([]byte, []int) {
	return fileDescriptor_5310d5256260aad9, []int{7}
}

func (m *RaNotifRegByTblT) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RaNotifRegByTblT.Unmarshal(m, b)
}
func (m *RaNotifRegByTblT) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RaNotifRegByTblT.Marshal(b, m, deterministic)
}
func (m *RaNotifRegByTblT) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RaNotifRegByTblT.Merge(m, src)
}
func (m *RaNotifRegByTblT) XXX_Size() int {
	return xxx_messageInfo_RaNotifRegByTblT.Size(m)
}
func (m *RaNotifRegByTblT) XXX_DiscardUnknown() {
	xxx_messageInfo_RaNotifRegByTblT.DiscardUnknown(m)
}

var xxx_messageInfo_RaNotifRegByTblT proto.InternalMessageInfo

func (m *RaNotifRegByTblT) GetMdbType() uint32 {
	if m != nil {
		return m.MdbType
	}
	return 0
}

func (m *RaNotifRegByTblT) GetRegHd() uint64 {
	if m != nil {
		return m.RegHd
	}
	return 0
}

func (m *RaNotifRegByTblT) GetNumNotifsDispatched() uint32 {
	if m != nil {
		return m.NumNotifsDispatched
	}
	return 0
}

func (m *RaNotifRegByTblT) GetTblName() string {
	if m != nil {
		return m.TblName
	}
	return ""
}

func (m *RaNotifRegByTblT) GetTblId() uint32 {
	if m != nil {
		return m.TblId
	}
	return 0
}

type RaNotifRegByIntfT struct {
	MdbType              uint32   `protobuf:"varint,1,opt,name=mdb_type,json=mdbType,proto3" json:"mdb_type,omitempty"`
	RegHd                uint64   `protobuf:"varint,2,opt,name=reg_hd,json=regHd,proto3" json:"reg_hd,omitempty"`
	NumNotifsDispatched  uint32   `protobuf:"varint,3,opt,name=num_notifs_dispatched,json=numNotifsDispatched,proto3" json:"num_notifs_dispatched,omitempty"`
	Ifname               string   `protobuf:"bytes,4,opt,name=ifname,proto3" json:"ifname,omitempty"`
	Ifhandle             string   `protobuf:"bytes,5,opt,name=ifhandle,proto3" json:"ifhandle,omitempty"`
	AfiFilter            uint32   `protobuf:"varint,6,opt,name=afi_filter,json=afiFilter,proto3" json:"afi_filter,omitempty"`
	SafiFilter           uint32   `protobuf:"varint,7,opt,name=safi_filter,json=safiFilter,proto3" json:"safi_filter,omitempty"`
	TblName              string   `protobuf:"bytes,8,opt,name=tbl_name,json=tblName,proto3" json:"tbl_name,omitempty"`
	Global               bool     `protobuf:"varint,9,opt,name=global,proto3" json:"global,omitempty"`
	RegFlags             uint32   `protobuf:"varint,10,opt,name=reg_flags,json=regFlags,proto3" json:"reg_flags,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RaNotifRegByIntfT) Reset()         { *m = RaNotifRegByIntfT{} }
func (m *RaNotifRegByIntfT) String() string { return proto.CompactTextString(m) }
func (*RaNotifRegByIntfT) ProtoMessage()    {}
func (*RaNotifRegByIntfT) Descriptor() ([]byte, []int) {
	return fileDescriptor_5310d5256260aad9, []int{8}
}

func (m *RaNotifRegByIntfT) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RaNotifRegByIntfT.Unmarshal(m, b)
}
func (m *RaNotifRegByIntfT) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RaNotifRegByIntfT.Marshal(b, m, deterministic)
}
func (m *RaNotifRegByIntfT) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RaNotifRegByIntfT.Merge(m, src)
}
func (m *RaNotifRegByIntfT) XXX_Size() int {
	return xxx_messageInfo_RaNotifRegByIntfT.Size(m)
}
func (m *RaNotifRegByIntfT) XXX_DiscardUnknown() {
	xxx_messageInfo_RaNotifRegByIntfT.DiscardUnknown(m)
}

var xxx_messageInfo_RaNotifRegByIntfT proto.InternalMessageInfo

func (m *RaNotifRegByIntfT) GetMdbType() uint32 {
	if m != nil {
		return m.MdbType
	}
	return 0
}

func (m *RaNotifRegByIntfT) GetRegHd() uint64 {
	if m != nil {
		return m.RegHd
	}
	return 0
}

func (m *RaNotifRegByIntfT) GetNumNotifsDispatched() uint32 {
	if m != nil {
		return m.NumNotifsDispatched
	}
	return 0
}

func (m *RaNotifRegByIntfT) GetIfname() string {
	if m != nil {
		return m.Ifname
	}
	return ""
}

func (m *RaNotifRegByIntfT) GetIfhandle() string {
	if m != nil {
		return m.Ifhandle
	}
	return ""
}

func (m *RaNotifRegByIntfT) GetAfiFilter() uint32 {
	if m != nil {
		return m.AfiFilter
	}
	return 0
}

func (m *RaNotifRegByIntfT) GetSafiFilter() uint32 {
	if m != nil {
		return m.SafiFilter
	}
	return 0
}

func (m *RaNotifRegByIntfT) GetTblName() string {
	if m != nil {
		return m.TblName
	}
	return ""
}

func (m *RaNotifRegByIntfT) GetGlobal() bool {
	if m != nil {
		return m.Global
	}
	return false
}

func (m *RaNotifRegByIntfT) GetRegFlags() uint32 {
	if m != nil {
		return m.RegFlags
	}
	return 0
}

type RsiAgentClient struct {
	Name                 string                `protobuf:"bytes,50,opt,name=name,proto3" json:"name,omitempty"`
	ClientPtr            uint64                `protobuf:"varint,51,opt,name=client_ptr,json=clientPtr,proto3" json:"client_ptr,omitempty"`
	ClientType           uint32                `protobuf:"varint,52,opt,name=client_type,json=clientType,proto3" json:"client_type,omitempty"`
	Zombied              bool                  `protobuf:"varint,53,opt,name=zombied,proto3" json:"zombied,omitempty"`
	MdbsProcessed        uint32                `protobuf:"varint,54,opt,name=mdbs_processed,json=mdbsProcessed,proto3" json:"mdbs_processed,omitempty"`
	MsgsReceived         uint32                `protobuf:"varint,55,opt,name=msgs_received,json=msgsReceived,proto3" json:"msgs_received,omitempty"`
	NumLookupsDone       uint32                `protobuf:"varint,56,opt,name=num_lookups_done,json=numLookupsDone,proto3" json:"num_lookups_done,omitempty"`
	NumFailedLookups     uint32                `protobuf:"varint,57,opt,name=num_failed_lookups,json=numFailedLookups,proto3" json:"num_failed_lookups,omitempty"`
	NumFailedRegs        uint32                `protobuf:"varint,58,opt,name=num_failed_regs,json=numFailedRegs,proto3" json:"num_failed_regs,omitempty"`
	NumAutoPurges        uint32                `protobuf:"varint,59,opt,name=num_auto_purges,json=numAutoPurges,proto3" json:"num_auto_purges,omitempty"`
	NumSmallReplyBuf     uint32                `protobuf:"varint,60,opt,name=num_small_reply_buf,json=numSmallReplyBuf,proto3" json:"num_small_reply_buf,omitempty"`
	ProcName             string                `protobuf:"bytes,61,opt,name=proc_name,json=procName,proto3" json:"proc_name,omitempty"`
	Pid                  uint32                `protobuf:"varint,62,opt,name=pid,proto3" json:"pid,omitempty"`
	Scoid                int32                 `protobuf:"zigzag32,63,opt,name=scoid,proto3" json:"scoid,omitempty"`
	Coid                 int32                 `protobuf:"zigzag32,64,opt,name=coid,proto3" json:"coid,omitempty"`
	UpTimeSecs           uint32                `protobuf:"varint,65,opt,name=up_time_secs,json=upTimeSecs,proto3" json:"up_time_secs,omitempty"`
	ZombieSecs           uint32                `protobuf:"varint,66,opt,name=zombie_secs,json=zombieSecs,proto3" json:"zombie_secs,omitempty"`
	LastRxMsgType        uint32                `protobuf:"varint,67,opt,name=last_rx_msg_type,json=lastRxMsgType,proto3" json:"last_rx_msg_type,omitempty"`
	PulseCount           uint32                `protobuf:"varint,68,opt,name=pulse_count,json=pulseCount,proto3" json:"pulse_count,omitempty"`
	AsyncQSize           uint32                `protobuf:"varint,69,opt,name=async_q_size,json=asyncQSize,proto3" json:"async_q_size,omitempty"`
	AsyncQSizeMax        uint32                `protobuf:"varint,70,opt,name=async_q_size_max,json=asyncQSizeMax,proto3" json:"async_q_size_max,omitempty"`
	SyncItemsReturned    uint32                `protobuf:"varint,71,opt,name=sync_items_returned,json=syncItemsReturned,proto3" json:"sync_items_returned,omitempty"`
	AsyncItemsReturned   uint32                `protobuf:"varint,72,opt,name=async_items_returned,json=asyncItemsReturned,proto3" json:"async_items_returned,omitempty"`
	BatchEnabled         bool                  `protobuf:"varint,73,opt,name=batch_enabled,json=batchEnabled,proto3" json:"batch_enabled,omitempty"`
	BatchSize            uint32                `protobuf:"varint,74,opt,name=batch_size,json=batchSize,proto3" json:"batch_size,omitempty"`
	NumActiveRegs        uint32                `protobuf:"varint,75,opt,name=num_active_regs,json=numActiveRegs,proto3" json:"num_active_regs,omitempty"`
	ByAll                []*RaNotifRegAllT     `protobuf:"bytes,76,rep,name=by_all,json=byAll,proto3" json:"by_all,omitempty"`
	ByState              []*RaNotifRegByStateT `protobuf:"bytes,77,rep,name=by_state,json=byState,proto3" json:"by_state,omitempty"`
	ByVr                 []*RaNotifRegByVrT    `protobuf:"bytes,78,rep,name=by_vr,json=byVr,proto3" json:"by_vr,omitempty"`
	ByVrf                []*RaNotifRegByVrfT   `protobuf:"bytes,79,rep,name=by_vrf,json=byVrf,proto3" json:"by_vrf,omitempty"`
	ByVpn                []*RaNotifRegByVpnT   `protobuf:"bytes,80,rep,name=by_vpn,json=byVpn,proto3" json:"by_vpn,omitempty"`
	ByTbl                []*RaNotifRegByTblT   `protobuf:"bytes,81,rep,name=by_tbl,json=byTbl,proto3" json:"by_tbl,omitempty"`
	ByIntf               []*RaNotifRegByIntfT  `protobuf:"bytes,82,rep,name=by_intf,json=byIntf,proto3" json:"by_intf,omitempty"`
	NumOwnedObjsTdl      uint32                `protobuf:"varint,83,opt,name=num_owned_objs_tdl,json=numOwnedObjsTdl,proto3" json:"num_owned_objs_tdl,omitempty"`
	LocalTblBuf          []uint32              `protobuf:"varint,84,rep,packed,name=local_tbl_buf,json=localTblBuf,proto3" json:"local_tbl_buf,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *RsiAgentClient) Reset()         { *m = RsiAgentClient{} }
func (m *RsiAgentClient) String() string { return proto.CompactTextString(m) }
func (*RsiAgentClient) ProtoMessage()    {}
func (*RsiAgentClient) Descriptor() ([]byte, []int) {
	return fileDescriptor_5310d5256260aad9, []int{9}
}

func (m *RsiAgentClient) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RsiAgentClient.Unmarshal(m, b)
}
func (m *RsiAgentClient) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RsiAgentClient.Marshal(b, m, deterministic)
}
func (m *RsiAgentClient) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RsiAgentClient.Merge(m, src)
}
func (m *RsiAgentClient) XXX_Size() int {
	return xxx_messageInfo_RsiAgentClient.Size(m)
}
func (m *RsiAgentClient) XXX_DiscardUnknown() {
	xxx_messageInfo_RsiAgentClient.DiscardUnknown(m)
}

var xxx_messageInfo_RsiAgentClient proto.InternalMessageInfo

func (m *RsiAgentClient) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *RsiAgentClient) GetClientPtr() uint64 {
	if m != nil {
		return m.ClientPtr
	}
	return 0
}

func (m *RsiAgentClient) GetClientType() uint32 {
	if m != nil {
		return m.ClientType
	}
	return 0
}

func (m *RsiAgentClient) GetZombied() bool {
	if m != nil {
		return m.Zombied
	}
	return false
}

func (m *RsiAgentClient) GetMdbsProcessed() uint32 {
	if m != nil {
		return m.MdbsProcessed
	}
	return 0
}

func (m *RsiAgentClient) GetMsgsReceived() uint32 {
	if m != nil {
		return m.MsgsReceived
	}
	return 0
}

func (m *RsiAgentClient) GetNumLookupsDone() uint32 {
	if m != nil {
		return m.NumLookupsDone
	}
	return 0
}

func (m *RsiAgentClient) GetNumFailedLookups() uint32 {
	if m != nil {
		return m.NumFailedLookups
	}
	return 0
}

func (m *RsiAgentClient) GetNumFailedRegs() uint32 {
	if m != nil {
		return m.NumFailedRegs
	}
	return 0
}

func (m *RsiAgentClient) GetNumAutoPurges() uint32 {
	if m != nil {
		return m.NumAutoPurges
	}
	return 0
}

func (m *RsiAgentClient) GetNumSmallReplyBuf() uint32 {
	if m != nil {
		return m.NumSmallReplyBuf
	}
	return 0
}

func (m *RsiAgentClient) GetProcName() string {
	if m != nil {
		return m.ProcName
	}
	return ""
}

func (m *RsiAgentClient) GetPid() uint32 {
	if m != nil {
		return m.Pid
	}
	return 0
}

func (m *RsiAgentClient) GetScoid() int32 {
	if m != nil {
		return m.Scoid
	}
	return 0
}

func (m *RsiAgentClient) GetCoid() int32 {
	if m != nil {
		return m.Coid
	}
	return 0
}

func (m *RsiAgentClient) GetUpTimeSecs() uint32 {
	if m != nil {
		return m.UpTimeSecs
	}
	return 0
}

func (m *RsiAgentClient) GetZombieSecs() uint32 {
	if m != nil {
		return m.ZombieSecs
	}
	return 0
}

func (m *RsiAgentClient) GetLastRxMsgType() uint32 {
	if m != nil {
		return m.LastRxMsgType
	}
	return 0
}

func (m *RsiAgentClient) GetPulseCount() uint32 {
	if m != nil {
		return m.PulseCount
	}
	return 0
}

func (m *RsiAgentClient) GetAsyncQSize() uint32 {
	if m != nil {
		return m.AsyncQSize
	}
	return 0
}

func (m *RsiAgentClient) GetAsyncQSizeMax() uint32 {
	if m != nil {
		return m.AsyncQSizeMax
	}
	return 0
}

func (m *RsiAgentClient) GetSyncItemsReturned() uint32 {
	if m != nil {
		return m.SyncItemsReturned
	}
	return 0
}

func (m *RsiAgentClient) GetAsyncItemsReturned() uint32 {
	if m != nil {
		return m.AsyncItemsReturned
	}
	return 0
}

func (m *RsiAgentClient) GetBatchEnabled() bool {
	if m != nil {
		return m.BatchEnabled
	}
	return false
}

func (m *RsiAgentClient) GetBatchSize() uint32 {
	if m != nil {
		return m.BatchSize
	}
	return 0
}

func (m *RsiAgentClient) GetNumActiveRegs() uint32 {
	if m != nil {
		return m.NumActiveRegs
	}
	return 0
}

func (m *RsiAgentClient) GetByAll() []*RaNotifRegAllT {
	if m != nil {
		return m.ByAll
	}
	return nil
}

func (m *RsiAgentClient) GetByState() []*RaNotifRegByStateT {
	if m != nil {
		return m.ByState
	}
	return nil
}

func (m *RsiAgentClient) GetByVr() []*RaNotifRegByVrT {
	if m != nil {
		return m.ByVr
	}
	return nil
}

func (m *RsiAgentClient) GetByVrf() []*RaNotifRegByVrfT {
	if m != nil {
		return m.ByVrf
	}
	return nil
}

func (m *RsiAgentClient) GetByVpn() []*RaNotifRegByVpnT {
	if m != nil {
		return m.ByVpn
	}
	return nil
}

func (m *RsiAgentClient) GetByTbl() []*RaNotifRegByTblT {
	if m != nil {
		return m.ByTbl
	}
	return nil
}

func (m *RsiAgentClient) GetByIntf() []*RaNotifRegByIntfT {
	if m != nil {
		return m.ByIntf
	}
	return nil
}

func (m *RsiAgentClient) GetNumOwnedObjsTdl() uint32 {
	if m != nil {
		return m.NumOwnedObjsTdl
	}
	return 0
}

func (m *RsiAgentClient) GetLocalTblBuf() []uint32 {
	if m != nil {
		return m.LocalTblBuf
	}
	return nil
}

func init() {
	proto.RegisterType((*RsiAgentClient_KEYS)(nil), "cisco_ios_xr_rsi_agent_oper.rsi_agent.nodes.node.clients.client.rsi_agent_client_KEYS")
	proto.RegisterType((*RaNotifRegAllT)(nil), "cisco_ios_xr_rsi_agent_oper.rsi_agent.nodes.node.clients.client.ra_notif_reg_all_t")
	proto.RegisterType((*RaNotifRegByStateT)(nil), "cisco_ios_xr_rsi_agent_oper.rsi_agent.nodes.node.clients.client.ra_notif_reg_by_state_t")
	proto.RegisterType((*RaNotifRegByVrT)(nil), "cisco_ios_xr_rsi_agent_oper.rsi_agent.nodes.node.clients.client.ra_notif_reg_by_vr_t")
	proto.RegisterType((*RaNotifRegByVrfT)(nil), "cisco_ios_xr_rsi_agent_oper.rsi_agent.nodes.node.clients.client.ra_notif_reg_by_vrf_t")
	proto.RegisterType((*RsiVpnidT)(nil), "cisco_ios_xr_rsi_agent_oper.rsi_agent.nodes.node.clients.client.rsi_vpnid_t")
	proto.RegisterType((*RaNotifRegByVpnT)(nil), "cisco_ios_xr_rsi_agent_oper.rsi_agent.nodes.node.clients.client.ra_notif_reg_by_vpn_t")
	proto.RegisterType((*RaNotifRegByTblT)(nil), "cisco_ios_xr_rsi_agent_oper.rsi_agent.nodes.node.clients.client.ra_notif_reg_by_tbl_t")
	proto.RegisterType((*RaNotifRegByIntfT)(nil), "cisco_ios_xr_rsi_agent_oper.rsi_agent.nodes.node.clients.client.ra_notif_reg_by_intf_t")
	proto.RegisterType((*RsiAgentClient)(nil), "cisco_ios_xr_rsi_agent_oper.rsi_agent.nodes.node.clients.client.rsi_agent_client")
}

func init() { proto.RegisterFile("rsi_agent_client.proto", fileDescriptor_5310d5256260aad9) }

var fileDescriptor_5310d5256260aad9 = []byte{
	// 1188 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x57, 0xeb, 0x72, 0x1b, 0x35,
	0x1b, 0x1e, 0x37, 0x3e, 0x45, 0xa9, 0xfb, 0xa5, 0x6a, 0x93, 0xaa, 0x1f, 0xc3, 0xd4, 0xe3, 0x0e,
	0xe0, 0x19, 0xc0, 0xc3, 0xa4, 0x94, 0x33, 0x94, 0x9e, 0x42, 0x4d, 0x4f, 0xe9, 0x3a, 0x2d, 0xf0,
	0x4b, 0xb3, 0xbb, 0xd2, 0xba, 0x0a, 0x5a, 0xed, 0x22, 0x69, 0x4d, 0xdc, 0xab, 0xe0, 0x37, 0x37,
	0xc1, 0x2d, 0x30, 0x5c, 0x0a, 0x37, 0x02, 0xf3, 0xbe, 0x5a, 0x3b, 0x6e, 0xda, 0x3f, 0x4c, 0xdb,
	0xfc, 0x49, 0x56, 0xcf, 0xfb, 0x48, 0xcf, 0x7b, 0xd2, 0xc1, 0x64, 0xdb, 0x3a, 0xc5, 0xe3, 0xa9,
	0x34, 0x9e, 0xa7, 0x5a, 0x49, 0xe3, 0x47, 0xa5, 0x2d, 0x7c, 0x41, 0xaf, 0xa5, 0xca, 0xa5, 0x05,
	0x57, 0x85, 0xe3, 0x87, 0x96, 0x1f, 0x91, 0x8a, 0x52, 0xda, 0xd1, 0x72, 0x38, 0x32, 0x85, 0x90,
	0x0e, 0xff, 0x8e, 0xc2, 0x74, 0x57, 0xff, 0x1f, 0x3c, 0x26, 0x5b, 0xc7, 0x97, 0xe6, 0x77, 0x6f,
	0xff, 0x34, 0xa1, 0x6f, 0x91, 0x75, 0xe0, 0x73, 0x13, 0xe7, 0x92, 0x35, 0xfa, 0x8d, 0xe1, 0x7a,
	0xd4, 0x05, 0xe0, 0x41, 0x9c, 0x4b, 0x7a, 0x89, 0x6c, 0xd4, 0x5c, 0x34, 0x9f, 0xea, 0x37, 0x86,
	0xbd, 0x88, 0x04, 0x08, 0x08, 0x83, 0xdf, 0x1a, 0x84, 0xda, 0x98, 0x9b, 0xc2, 0xab, 0x8c, 0x5b,
	0x39, 0xe5, 0xb1, 0xd6, 0xdc, 0xd3, 0x8b, 0xa4, 0x9b, 0x8b, 0x84, 0xfb, 0x79, 0x19, 0xd6, 0xec,
	0x45, 0x9d, 0x5c, 0x24, 0xfb, 0xf3, 0x52, 0xd2, 0x2d, 0xd2, 0x06, 0xde, 0x53, 0x81, 0xab, 0x35,
	0xa3, 0x96, 0x95, 0xd3, 0x3b, 0x82, 0xee, 0x90, 0x2d, 0x53, 0xe5, 0x61, 0x21, 0xc7, 0x85, 0x72,
	0x65, 0xec, 0xd3, 0xa7, 0x52, 0xb0, 0x35, 0x9c, 0x7e, 0xce, 0x54, 0xf9, 0x03, 0xb4, 0xdd, 0x5a,
	0x9a, 0xe8, 0x79, 0xd2, 0xca, 0x74, 0x3c, 0x75, 0xac, 0x89, 0x9c, 0x30, 0x18, 0xfc, 0xde, 0x20,
	0x17, 0x9e, 0x73, 0x29, 0x99, 0x73, 0xe7, 0x63, 0x2f, 0x4f, 0xcc, 0xaf, 0x8b, 0xa4, 0x1b, 0x04,
	0x95, 0x40, 0xd7, 0x9a, 0x51, 0x07, 0xc7, 0x63, 0x31, 0xf8, 0xb3, 0x41, 0xce, 0x1f, 0x77, 0x6e,
	0x66, 0x4f, 0xcc, 0xb3, 0x0b, 0xa4, 0x33, 0xb3, 0xa1, 0x96, 0x4d, 0x2c, 0x75, 0x7b, 0x66, 0xb1,
	0xd0, 0xe7, 0x48, 0x6b, 0x66, 0xc1, 0xdf, 0x16, 0x4e, 0x6e, 0xce, 0xec, 0x78, 0x25, 0xbf, 0xed,
	0xd5, 0xfc, 0xfe, 0xd1, 0x20, 0x5b, 0x2f, 0x86, 0x90, 0x9d, 0x64, 0x76, 0x41, 0x6e, 0x25, 0x88,
	0xce, 0xcc, 0x66, 0x18, 0xc5, 0x16, 0x69, 0x83, 0x69, 0x19, 0x46, 0x6b, 0x66, 0xb3, 0xb1, 0x18,
	0x5c, 0x25, 0x1b, 0xd0, 0xfb, 0xb3, 0xd2, 0x28, 0xc1, 0x3d, 0xdd, 0x24, 0x6b, 0x45, 0xa5, 0x6a,
	0x0f, 0xe1, 0x13, 0x02, 0x55, 0x46, 0xc8, 0xc3, 0xba, 0xc1, 0xc3, 0x60, 0xf0, 0xf7, 0xcb, 0x02,
	0x2d, 0xcd, 0x7f, 0x09, 0xb4, 0xf7, 0x2a, 0x81, 0xa6, 0xa4, 0x0d, 0x72, 0x75, 0x13, 0x6d, 0xec,
	0xdc, 0x1b, 0xbd, 0xe2, 0x21, 0x30, 0x5a, 0xc9, 0x42, 0xd4, 0x9a, 0x95, 0x66, 0x2c, 0x5e, 0x5a,
	0x4d, 0x9f, 0xe8, 0x93, 0xac, 0x26, 0xc8, 0xad, 0x56, 0xd3, 0x27, 0x7a, 0x51, 0x4d, 0x30, 0x1d,
	0x55, 0xd3, 0x27, 0x7a, 0x2c, 0x06, 0x7f, 0x9d, 0x22, 0xdb, 0xc7, 0x3d, 0x56, 0xc6, 0x9f, 0x5c,
	0x03, 0x6e, 0x93, 0xb6, 0xca, 0x56, 0xf7, 0x50, 0x18, 0xd1, 0xff, 0x93, 0xae, 0xca, 0x9e, 0xc6,
	0x46, 0x68, 0x89, 0x1e, 0xaf, 0x47, 0xcb, 0x31, 0x7d, 0x9b, 0x90, 0x38, 0x53, 0x3c, 0x53, 0xda,
	0x4b, 0x5b, 0xef, 0xa7, 0xf5, 0x38, 0x53, 0xbb, 0x08, 0xc0, 0x39, 0xeb, 0x56, 0xec, 0x9d, 0x70,
	0xce, 0xba, 0x23, 0xc2, 0x6a, 0x9a, 0xba, 0xcf, 0xa7, 0x69, 0x9b, 0xb4, 0xa7, 0xba, 0x48, 0x62,
	0xcd, 0xd6, 0xfb, 0x8d, 0x61, 0x37, 0xaa, 0x47, 0x70, 0xb0, 0x43, 0xc4, 0x61, 0x07, 0x13, 0x5c,
	0xb1, 0x6b, 0xe5, 0x74, 0x17, 0x37, 0xf1, 0x3f, 0x3d, 0xb2, 0x79, 0xfc, 0x3e, 0xa0, 0x94, 0x34,
	0x51, 0x60, 0x07, 0x05, 0xf0, 0x1b, 0x1c, 0xaf, 0x6f, 0x80, 0xd2, 0x5b, 0x76, 0x05, 0x73, 0xb7,
	0x1e, 0x90, 0x3d, 0x6f, 0x57, 0x2e, 0x08, 0x4c, 0xfa, 0xc7, 0xab, 0x17, 0x04, 0xe6, 0x9d, 0x91,
	0xce, 0xb3, 0x22, 0x4f, 0x94, 0x14, 0xec, 0x2a, 0xba, 0xb7, 0x18, 0xd2, 0x77, 0xc8, 0x99, 0x5c,
	0x24, 0x8e, 0x97, 0xb6, 0x48, 0xa5, 0x73, 0x52, 0xb0, 0x4f, 0x70, 0x76, 0x0f, 0xd0, 0xbd, 0x05,
	0x48, 0x2f, 0x93, 0x5e, 0xee, 0xa6, 0x8e, 0x5b, 0x99, 0x4a, 0x35, 0x93, 0x82, 0x7d, 0x8a, 0xac,
	0xd3, 0x00, 0x46, 0x35, 0x46, 0x87, 0x64, 0x13, 0xca, 0xa8, 0x8b, 0xe2, 0xe7, 0xaa, 0x74, 0x5c,
	0x14, 0x46, 0xb2, 0xcf, 0x90, 0x77, 0xc6, 0x54, 0xf9, 0xbd, 0x00, 0xdf, 0x2a, 0x8c, 0xa4, 0x1f,
	0x10, 0x0a, 0xcc, 0x2c, 0x56, 0x5a, 0x8a, 0xc5, 0x04, 0xf6, 0x39, 0x72, 0x61, 0x8d, 0x5d, 0x34,
	0xd4, 0x33, 0xe8, 0xbb, 0xe4, 0x7f, 0x2b, 0x6c, 0x2b, 0xa7, 0x8e, 0x7d, 0x11, 0x9c, 0x5c, 0x52,
	0x23, 0x39, 0x5d, 0xf2, 0xe2, 0xca, 0x17, 0xbc, 0xac, 0xec, 0x54, 0x3a, 0xf6, 0xe5, 0x92, 0x77,
	0xbd, 0xf2, 0xc5, 0x1e, 0x82, 0xf4, 0x43, 0x02, 0x1d, 0xc5, 0x5d, 0x0e, 0xd7, 0xa4, 0x95, 0xa5,
	0x9e, 0xf3, 0xa4, 0xca, 0xd8, 0x57, 0x4b, 0xf9, 0x09, 0x58, 0x22, 0x30, 0xdc, 0xa8, 0x32, 0x28,
	0x21, 0x64, 0x27, 0x94, 0xfd, 0xeb, 0xd0, 0x52, 0x00, 0x60, 0xdd, 0x37, 0xc9, 0x5a, 0xa9, 0x04,
	0xfb, 0x26, 0x1c, 0x63, 0xa5, 0xc2, 0xf3, 0xda, 0xa5, 0x85, 0x12, 0xec, 0x5a, 0xbf, 0x31, 0x3c,
	0x1b, 0x85, 0x01, 0x54, 0x15, 0xc1, 0x6f, 0x11, 0xc4, 0x6f, 0xda, 0x27, 0xa7, 0xab, 0x92, 0x7b,
	0x95, 0x4b, 0xee, 0x64, 0xea, 0xd8, 0xf5, 0x50, 0xb7, 0xaa, 0xdc, 0x57, 0xb9, 0x9c, 0xc8, 0xd4,
	0x41, 0x61, 0x43, 0xa1, 0x02, 0xe1, 0x46, 0x20, 0x04, 0x08, 0x09, 0xef, 0x91, 0x4d, 0x1d, 0x3b,
	0xcf, 0xed, 0x21, 0xcf, 0xdd, 0x34, 0x94, 0xff, 0x66, 0x88, 0x19, 0xf0, 0xe8, 0xf0, 0xbe, 0x9b,
	0x62, 0x07, 0x5c, 0x22, 0x1b, 0x65, 0xa5, 0x9d, 0xe4, 0x69, 0x51, 0x19, 0xcf, 0x6e, 0x85, 0x95,
	0x10, 0xba, 0x09, 0x08, 0x38, 0x13, 0xbb, 0xb9, 0x49, 0xf9, 0x2f, 0xdc, 0xa9, 0x67, 0x92, 0xdd,
	0x0e, 0x0c, 0xc4, 0x1e, 0x4d, 0xd4, 0x33, 0x09, 0x5a, 0xab, 0x0c, 0x9e, 0xc7, 0x87, 0x6c, 0x37,
	0x68, 0x1d, 0xb1, 0xee, 0xc7, 0x87, 0x74, 0x44, 0xce, 0x21, 0x4f, 0x79, 0x99, 0x43, 0xcb, 0xf8,
	0xca, 0x1a, 0x29, 0xd8, 0x77, 0xc8, 0x3d, 0x0b, 0xa6, 0x31, 0x58, 0xa2, 0xda, 0x40, 0x3f, 0x22,
	0xe7, 0xe3, 0x97, 0x4d, 0xb8, 0x83, 0x13, 0x68, 0xfc, 0xe2, 0x8c, 0xcb, 0xa4, 0x97, 0xc0, 0x39,
	0xc0, 0xa5, 0x89, 0x13, 0x2d, 0x05, 0x1b, 0x63, 0x57, 0x9f, 0x46, 0xf0, 0x76, 0xc0, 0x60, 0xd3,
	0x04, 0x12, 0xc6, 0xf3, 0x7d, 0xd8, 0xed, 0x88, 0x60, 0x38, 0x8b, 0x6e, 0x49, 0xbd, 0x9a, 0xc9,
	0xd0, 0x55, 0x77, 0x8f, 0xba, 0x05, 0x51, 0xec, 0xaa, 0x03, 0xd2, 0x4e, 0xe6, 0xf0, 0xa2, 0x62,
	0xf7, 0xfa, 0x6b, 0xc3, 0x8d, 0x9d, 0xc9, 0xab, 0x5f, 0x00, 0x2f, 0x3c, 0xd5, 0xa2, 0x56, 0x32,
	0xbf, 0xae, 0x35, 0x75, 0xa4, 0xbb, 0x78, 0x27, 0xb1, 0xfb, 0xa8, 0xf6, 0xe3, 0xeb, 0x55, 0x3b,
	0x7a, 0x85, 0x45, 0x9d, 0x64, 0x3e, 0x81, 0x4f, 0x7a, 0x40, 0x5a, 0xf8, 0x78, 0x60, 0x0f, 0x50,
	0xf1, 0xf1, 0x6b, 0x57, 0x84, 0xa7, 0x55, 0xd4, 0x4c, 0xe6, 0x4f, 0x2c, 0xcd, 0x31, 0x99, 0x33,
	0x9b, 0xb1, 0x87, 0x28, 0xf6, 0xe4, 0x0d, 0x88, 0x65, 0x21, 0x9f, 0x4f, 0x6c, 0xb6, 0x90, 0x2b,
	0x0d, 0xdb, 0x7b, 0x53, 0x72, 0xf0, 0x14, 0x41, 0xb9, 0xd2, 0xd4, 0x72, 0x3e, 0xd1, 0xec, 0xd1,
	0x1b, 0x92, 0xc3, 0x47, 0x01, 0xc8, 0xed, 0x27, 0x9a, 0x96, 0xa4, 0x53, 0xdf, 0xba, 0x2c, 0x42,
	0xbd, 0x1f, 0x5e, 0xbb, 0x5e, 0xb8, 0xd2, 0xa3, 0x76, 0x32, 0x1f, 0x1b, 0x9f, 0xd1, 0xf7, 0xc3,
	0xb9, 0x5d, 0xfc, 0x6a, 0xa4, 0xe0, 0x45, 0x72, 0xe0, 0xb8, 0x17, 0x9a, 0x4d, 0x70, 0xdb, 0xc0,
	0x6e, 0x7a, 0x08, 0x86, 0x87, 0xc9, 0x81, 0xdb, 0x17, 0x9a, 0x0e, 0x48, 0x4f, 0x17, 0x69, 0xac,
	0xd1, 0x69, 0x38, 0x60, 0xf7, 0xfb, 0x6b, 0xc3, 0x5e, 0xb4, 0x81, 0xe0, 0x7e, 0xa2, 0x6f, 0x54,
	0x59, 0xd2, 0xc6, 0x1f, 0x56, 0x57, 0xfe, 0x0d, 0x00, 0x00, 0xff, 0xff, 0xcc, 0xfc, 0xdd, 0xfd,
	0x72, 0x0d, 0x00, 0x00,
}
