/*
Copyright 2019 Cisco Systems

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: rsi_agent_vr.proto

package cisco_ios_xr_rsi_agent_oper_rsi_agent_nodes_node_virtual_router_ids_virtual_router_id

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type RsiAgentVr_KEYS struct {
	NodeName             string   `protobuf:"bytes,1,opt,name=node_name,json=nodeName,proto3" json:"node_name,omitempty"`
	Vrid                 uint32   `protobuf:"varint,2,opt,name=vrid,proto3" json:"vrid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RsiAgentVr_KEYS) Reset()         { *m = RsiAgentVr_KEYS{} }
func (m *RsiAgentVr_KEYS) String() string { return proto.CompactTextString(m) }
func (*RsiAgentVr_KEYS) ProtoMessage()    {}
func (*RsiAgentVr_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_4699f8f86fa20403, []int{0}
}

func (m *RsiAgentVr_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RsiAgentVr_KEYS.Unmarshal(m, b)
}
func (m *RsiAgentVr_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RsiAgentVr_KEYS.Marshal(b, m, deterministic)
}
func (m *RsiAgentVr_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RsiAgentVr_KEYS.Merge(m, src)
}
func (m *RsiAgentVr_KEYS) XXX_Size() int {
	return xxx_messageInfo_RsiAgentVr_KEYS.Size(m)
}
func (m *RsiAgentVr_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_RsiAgentVr_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_RsiAgentVr_KEYS proto.InternalMessageInfo

func (m *RsiAgentVr_KEYS) GetNodeName() string {
	if m != nil {
		return m.NodeName
	}
	return ""
}

func (m *RsiAgentVr_KEYS) GetVrid() uint32 {
	if m != nil {
		return m.Vrid
	}
	return 0
}

type RsiAgentVr struct {
	VrNameXr             string   `protobuf:"bytes,50,opt,name=vr_name_xr,json=vrNameXr,proto3" json:"vr_name_xr,omitempty"`
	VrId                 uint32   `protobuf:"varint,51,opt,name=vr_id,json=vrId,proto3" json:"vr_id,omitempty"`
	Refcount             int32    `protobuf:"zigzag32,52,opt,name=refcount,proto3" json:"refcount,omitempty"`
	NumRealVrfs          int32    `protobuf:"zigzag32,53,opt,name=num_real_vrfs,json=numRealVrfs,proto3" json:"num_real_vrfs,omitempty"`
	NumFwdRefVrfs        int32    `protobuf:"zigzag32,54,opt,name=num_fwd_ref_vrfs,json=numFwdRefVrfs,proto3" json:"num_fwd_ref_vrfs,omitempty"`
	VrByVrIdRegs         int32    `protobuf:"zigzag32,55,opt,name=vr_by_vr_id_regs,json=vrByVrIdRegs,proto3" json:"vr_by_vr_id_regs,omitempty"`
	VrByVrNameRegs       int32    `protobuf:"zigzag32,56,opt,name=vr_by_vr_name_regs,json=vrByVrNameRegs,proto3" json:"vr_by_vr_name_regs,omitempty"`
	VrfByVrRegs          int32    `protobuf:"zigzag32,57,opt,name=vrf_by_vr_regs,json=vrfByVrRegs,proto3" json:"vrf_by_vr_regs,omitempty"`
	TblByVrRegs          int32    `protobuf:"zigzag32,58,opt,name=tbl_by_vr_regs,json=tblByVrRegs,proto3" json:"tbl_by_vr_regs,omitempty"`
	VrfCntLocal          int32    `protobuf:"zigzag32,59,opt,name=vrf_cnt_local,json=vrfCntLocal,proto3" json:"vrf_cnt_local,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RsiAgentVr) Reset()         { *m = RsiAgentVr{} }
func (m *RsiAgentVr) String() string { return proto.CompactTextString(m) }
func (*RsiAgentVr) ProtoMessage()    {}
func (*RsiAgentVr) Descriptor() ([]byte, []int) {
	return fileDescriptor_4699f8f86fa20403, []int{1}
}

func (m *RsiAgentVr) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RsiAgentVr.Unmarshal(m, b)
}
func (m *RsiAgentVr) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RsiAgentVr.Marshal(b, m, deterministic)
}
func (m *RsiAgentVr) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RsiAgentVr.Merge(m, src)
}
func (m *RsiAgentVr) XXX_Size() int {
	return xxx_messageInfo_RsiAgentVr.Size(m)
}
func (m *RsiAgentVr) XXX_DiscardUnknown() {
	xxx_messageInfo_RsiAgentVr.DiscardUnknown(m)
}

var xxx_messageInfo_RsiAgentVr proto.InternalMessageInfo

func (m *RsiAgentVr) GetVrNameXr() string {
	if m != nil {
		return m.VrNameXr
	}
	return ""
}

func (m *RsiAgentVr) GetVrId() uint32 {
	if m != nil {
		return m.VrId
	}
	return 0
}

func (m *RsiAgentVr) GetRefcount() int32 {
	if m != nil {
		return m.Refcount
	}
	return 0
}

func (m *RsiAgentVr) GetNumRealVrfs() int32 {
	if m != nil {
		return m.NumRealVrfs
	}
	return 0
}

func (m *RsiAgentVr) GetNumFwdRefVrfs() int32 {
	if m != nil {
		return m.NumFwdRefVrfs
	}
	return 0
}

func (m *RsiAgentVr) GetVrByVrIdRegs() int32 {
	if m != nil {
		return m.VrByVrIdRegs
	}
	return 0
}

func (m *RsiAgentVr) GetVrByVrNameRegs() int32 {
	if m != nil {
		return m.VrByVrNameRegs
	}
	return 0
}

func (m *RsiAgentVr) GetVrfByVrRegs() int32 {
	if m != nil {
		return m.VrfByVrRegs
	}
	return 0
}

func (m *RsiAgentVr) GetTblByVrRegs() int32 {
	if m != nil {
		return m.TblByVrRegs
	}
	return 0
}

func (m *RsiAgentVr) GetVrfCntLocal() int32 {
	if m != nil {
		return m.VrfCntLocal
	}
	return 0
}

func init() {
	proto.RegisterType((*RsiAgentVr_KEYS)(nil), "cisco_ios_xr_rsi_agent_oper.rsi_agent.nodes.node.virtual_router_ids.virtual_router_id.rsi_agent_vr_KEYS")
	proto.RegisterType((*RsiAgentVr)(nil), "cisco_ios_xr_rsi_agent_oper.rsi_agent.nodes.node.virtual_router_ids.virtual_router_id.rsi_agent_vr")
}

func init() { proto.RegisterFile("rsi_agent_vr.proto", fileDescriptor_4699f8f86fa20403) }

var fileDescriptor_4699f8f86fa20403 = []byte{
	// 356 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x64, 0xd2, 0x4b, 0x6b, 0xe3, 0x30,
	0x10, 0x07, 0x70, 0x1c, 0x76, 0x97, 0x44, 0x9b, 0x84, 0x44, 0x7b, 0x11, 0xbb, 0x7b, 0x08, 0x5e,
	0xd8, 0x0d, 0x7b, 0xf0, 0xa1, 0xe9, 0xbb, 0xb7, 0xbe, 0x20, 0xb4, 0xf4, 0xe0, 0xd2, 0xd0, 0x9e,
	0x06, 0x3f, 0xa4, 0x60, 0xb0, 0xa5, 0x30, 0x92, 0x95, 0xe4, 0x3b, 0xf7, 0x43, 0x14, 0xc9, 0x8d,
	0x1b, 0xe8, 0xc5, 0x58, 0xc3, 0x4f, 0xff, 0x99, 0x01, 0x11, 0x8a, 0xba, 0x80, 0x64, 0xc9, 0xa5,
	0x01, 0x8b, 0xd1, 0x0a, 0x95, 0x51, 0xf4, 0x29, 0x2b, 0x74, 0xa6, 0xa0, 0x50, 0x1a, 0x36, 0x08,
	0x1f, 0x40, 0xad, 0x38, 0x46, 0xed, 0x31, 0x92, 0x2a, 0xe7, 0xda, 0x7f, 0x23, 0x5b, 0xa0, 0xa9,
	0x93, 0x12, 0x50, 0xd5, 0x86, 0x23, 0x14, 0xb9, 0xfe, 0x5c, 0x0a, 0xaf, 0xc9, 0x78, 0xbf, 0x19,
	0xdc, 0xdd, 0xbc, 0x3c, 0xd2, 0x5f, 0xa4, 0xe7, 0x12, 0x40, 0x26, 0x15, 0x67, 0xc1, 0x24, 0x98,
	0xf6, 0xe2, 0xae, 0x2b, 0x3c, 0x24, 0x15, 0xa7, 0x94, 0x7c, 0xb1, 0x58, 0xe4, 0xac, 0x33, 0x09,
	0xa6, 0x83, 0xd8, 0xff, 0x87, 0xaf, 0x1d, 0xd2, 0xdf, 0x8f, 0xa1, 0xbf, 0x09, 0xb1, 0xe8, 0xef,
	0xc3, 0x06, 0xd9, 0x41, 0x13, 0x61, 0xd1, 0x05, 0x3c, 0x23, 0xfd, 0x41, 0xbe, 0x5a, 0xd7, 0x9d,
	0xcd, 0x76, 0x19, 0xf3, 0x9c, 0xfe, 0x24, 0x5d, 0xe4, 0x22, 0x53, 0xb5, 0x34, 0xec, 0x70, 0x12,
	0x4c, 0xc7, 0x71, 0x7b, 0xa6, 0x21, 0x19, 0xc8, 0xba, 0x02, 0xe4, 0x49, 0x09, 0x16, 0x85, 0x66,
	0x47, 0x1e, 0x7c, 0x97, 0x75, 0x15, 0xf3, 0xa4, 0x5c, 0xa0, 0xd0, 0xf4, 0x1f, 0x19, 0x39, 0x23,
	0xd6, 0x39, 0x20, 0x17, 0x0d, 0x3b, 0xf6, 0xcc, 0xdd, 0xbd, 0x5d, 0xe7, 0x31, 0x17, 0x1e, 0xfe,
	0x25, 0x23, 0x8b, 0x90, 0x6e, 0xc1, 0xcf, 0x00, 0xc8, 0x97, 0x9a, 0x9d, 0x78, 0xd8, 0xb7, 0x78,
	0xb9, 0x5d, 0xe0, 0x3c, 0x8f, 0xf9, 0x52, 0xd3, 0xff, 0x84, 0xb6, 0xce, 0x6f, 0xe2, 0xe5, 0xa9,
	0x97, 0xc3, 0x46, 0xba, 0x7d, 0xbc, 0xfd, 0x43, 0x86, 0x16, 0xc5, 0x3b, 0xf6, 0xee, 0xac, 0x99,
	0xd0, 0xa2, 0x70, 0x70, 0x87, 0x4c, 0x5a, 0xee, 0xa3, 0xf3, 0x06, 0x99, 0xb4, 0x6c, 0x51, 0x48,
	0x06, 0x2e, 0x29, 0x93, 0x06, 0x4a, 0x95, 0x25, 0x25, 0xbb, 0x68, 0x83, 0xae, 0xa4, 0xb9, 0x77,
	0xa5, 0xf4, 0x9b, 0x7f, 0x12, 0xb3, 0xb7, 0x00, 0x00, 0x00, 0xff, 0xff, 0xd9, 0x2f, 0x19, 0xb4,
	0x28, 0x02, 0x00, 0x00,
}
