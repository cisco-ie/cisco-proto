/*
Copyright 2019 Cisco Systems

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: optics_db_info.proto

package cisco_ios_xr_controller_optics_oper_optics_oper_optics_ports_optics_port_optics_db_info

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type OpticsDbInfo_KEYS struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OpticsDbInfo_KEYS) Reset()         { *m = OpticsDbInfo_KEYS{} }
func (m *OpticsDbInfo_KEYS) String() string { return proto.CompactTextString(m) }
func (*OpticsDbInfo_KEYS) ProtoMessage()    {}
func (*OpticsDbInfo_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_f8f1f7c76d1ffa7e, []int{0}
}

func (m *OpticsDbInfo_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OpticsDbInfo_KEYS.Unmarshal(m, b)
}
func (m *OpticsDbInfo_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OpticsDbInfo_KEYS.Marshal(b, m, deterministic)
}
func (m *OpticsDbInfo_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OpticsDbInfo_KEYS.Merge(m, src)
}
func (m *OpticsDbInfo_KEYS) XXX_Size() int {
	return xxx_messageInfo_OpticsDbInfo_KEYS.Size(m)
}
func (m *OpticsDbInfo_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_OpticsDbInfo_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_OpticsDbInfo_KEYS proto.InternalMessageInfo

func (m *OpticsDbInfo_KEYS) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type OpticsEdmNetworkSrlgStructure struct {
	SetNumber            uint32   `protobuf:"varint,1,opt,name=set_number,json=setNumber,proto3" json:"set_number,omitempty"`
	NetworkSrlg          []uint32 `protobuf:"varint,2,rep,packed,name=network_srlg,json=networkSrlg,proto3" json:"network_srlg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OpticsEdmNetworkSrlgStructure) Reset()         { *m = OpticsEdmNetworkSrlgStructure{} }
func (m *OpticsEdmNetworkSrlgStructure) String() string { return proto.CompactTextString(m) }
func (*OpticsEdmNetworkSrlgStructure) ProtoMessage()    {}
func (*OpticsEdmNetworkSrlgStructure) Descriptor() ([]byte, []int) {
	return fileDescriptor_f8f1f7c76d1ffa7e, []int{1}
}

func (m *OpticsEdmNetworkSrlgStructure) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OpticsEdmNetworkSrlgStructure.Unmarshal(m, b)
}
func (m *OpticsEdmNetworkSrlgStructure) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OpticsEdmNetworkSrlgStructure.Marshal(b, m, deterministic)
}
func (m *OpticsEdmNetworkSrlgStructure) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OpticsEdmNetworkSrlgStructure.Merge(m, src)
}
func (m *OpticsEdmNetworkSrlgStructure) XXX_Size() int {
	return xxx_messageInfo_OpticsEdmNetworkSrlgStructure.Size(m)
}
func (m *OpticsEdmNetworkSrlgStructure) XXX_DiscardUnknown() {
	xxx_messageInfo_OpticsEdmNetworkSrlgStructure.DiscardUnknown(m)
}

var xxx_messageInfo_OpticsEdmNetworkSrlgStructure proto.InternalMessageInfo

func (m *OpticsEdmNetworkSrlgStructure) GetSetNumber() uint32 {
	if m != nil {
		return m.SetNumber
	}
	return 0
}

func (m *OpticsEdmNetworkSrlgStructure) GetNetworkSrlg() []uint32 {
	if m != nil {
		return m.NetworkSrlg
	}
	return nil
}

type OpticsEdmNetworkSrlgInfo struct {
	NetworkSrlgArray     []*OpticsEdmNetworkSrlgStructure `protobuf:"bytes,1,rep,name=network_srlg_array,json=networkSrlgArray,proto3" json:"network_srlg_array,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                         `json:"-"`
	XXX_unrecognized     []byte                           `json:"-"`
	XXX_sizecache        int32                            `json:"-"`
}

func (m *OpticsEdmNetworkSrlgInfo) Reset()         { *m = OpticsEdmNetworkSrlgInfo{} }
func (m *OpticsEdmNetworkSrlgInfo) String() string { return proto.CompactTextString(m) }
func (*OpticsEdmNetworkSrlgInfo) ProtoMessage()    {}
func (*OpticsEdmNetworkSrlgInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_f8f1f7c76d1ffa7e, []int{2}
}

func (m *OpticsEdmNetworkSrlgInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OpticsEdmNetworkSrlgInfo.Unmarshal(m, b)
}
func (m *OpticsEdmNetworkSrlgInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OpticsEdmNetworkSrlgInfo.Marshal(b, m, deterministic)
}
func (m *OpticsEdmNetworkSrlgInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OpticsEdmNetworkSrlgInfo.Merge(m, src)
}
func (m *OpticsEdmNetworkSrlgInfo) XXX_Size() int {
	return xxx_messageInfo_OpticsEdmNetworkSrlgInfo.Size(m)
}
func (m *OpticsEdmNetworkSrlgInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_OpticsEdmNetworkSrlgInfo.DiscardUnknown(m)
}

var xxx_messageInfo_OpticsEdmNetworkSrlgInfo proto.InternalMessageInfo

func (m *OpticsEdmNetworkSrlgInfo) GetNetworkSrlgArray() []*OpticsEdmNetworkSrlgStructure {
	if m != nil {
		return m.NetworkSrlgArray
	}
	return nil
}

type OpticsDbInfo struct {
	TransportAdminState  string                    `protobuf:"bytes,50,opt,name=transport_admin_state,json=transportAdminState,proto3" json:"transport_admin_state,omitempty"`
	ControllerState      string                    `protobuf:"bytes,51,opt,name=controller_state,json=controllerState,proto3" json:"controller_state,omitempty"`
	NetworkSrlgInfo      *OpticsEdmNetworkSrlgInfo `protobuf:"bytes,52,opt,name=network_srlg_info,json=networkSrlgInfo,proto3" json:"network_srlg_info,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *OpticsDbInfo) Reset()         { *m = OpticsDbInfo{} }
func (m *OpticsDbInfo) String() string { return proto.CompactTextString(m) }
func (*OpticsDbInfo) ProtoMessage()    {}
func (*OpticsDbInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_f8f1f7c76d1ffa7e, []int{3}
}

func (m *OpticsDbInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OpticsDbInfo.Unmarshal(m, b)
}
func (m *OpticsDbInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OpticsDbInfo.Marshal(b, m, deterministic)
}
func (m *OpticsDbInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OpticsDbInfo.Merge(m, src)
}
func (m *OpticsDbInfo) XXX_Size() int {
	return xxx_messageInfo_OpticsDbInfo.Size(m)
}
func (m *OpticsDbInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_OpticsDbInfo.DiscardUnknown(m)
}

var xxx_messageInfo_OpticsDbInfo proto.InternalMessageInfo

func (m *OpticsDbInfo) GetTransportAdminState() string {
	if m != nil {
		return m.TransportAdminState
	}
	return ""
}

func (m *OpticsDbInfo) GetControllerState() string {
	if m != nil {
		return m.ControllerState
	}
	return ""
}

func (m *OpticsDbInfo) GetNetworkSrlgInfo() *OpticsEdmNetworkSrlgInfo {
	if m != nil {
		return m.NetworkSrlgInfo
	}
	return nil
}

func init() {
	proto.RegisterType((*OpticsDbInfo_KEYS)(nil), "cisco_ios_xr_controller_optics_oper.optics_oper.optics_ports.optics_port.optics_db_info.optics_db_info_KEYS")
	proto.RegisterType((*OpticsEdmNetworkSrlgStructure)(nil), "cisco_ios_xr_controller_optics_oper.optics_oper.optics_ports.optics_port.optics_db_info.optics_edm_network_srlg_structure")
	proto.RegisterType((*OpticsEdmNetworkSrlgInfo)(nil), "cisco_ios_xr_controller_optics_oper.optics_oper.optics_ports.optics_port.optics_db_info.optics_edm_network_srlg_info")
	proto.RegisterType((*OpticsDbInfo)(nil), "cisco_ios_xr_controller_optics_oper.optics_oper.optics_ports.optics_port.optics_db_info.optics_db_info")
}

func init() { proto.RegisterFile("optics_db_info.proto", fileDescriptor_f8f1f7c76d1ffa7e) }

var fileDescriptor_f8f1f7c76d1ffa7e = []byte{
	// 321 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x52, 0x3b, 0x4e, 0xc3, 0x40,
	0x10, 0xd5, 0x26, 0x08, 0x29, 0x13, 0x42, 0xc2, 0x06, 0x24, 0x17, 0x20, 0x39, 0xae, 0x9c, 0xc6,
	0x85, 0xc3, 0x05, 0x52, 0x50, 0x20, 0x24, 0x0a, 0xa7, 0x40, 0x54, 0x23, 0xc7, 0xd9, 0x44, 0x16,
	0xf6, 0xae, 0x35, 0x3b, 0x16, 0x9f, 0x6b, 0x70, 0x02, 0x3a, 0xae, 0xc2, 0xad, 0x90, 0x9d, 0x08,
	0x6c, 0x01, 0xa2, 0x82, 0x6e, 0xf6, 0xbd, 0x37, 0x9f, 0xf7, 0xb4, 0x70, 0x6c, 0x0a, 0x4e, 0x13,
	0x8b, 0xab, 0x25, 0xa6, 0x7a, 0x6d, 0x82, 0x82, 0x0c, 0x1b, 0x79, 0x93, 0xa4, 0x36, 0x31, 0x98,
	0x1a, 0x8b, 0x0f, 0x84, 0x89, 0xd1, 0x4c, 0x26, 0xcb, 0x14, 0xe1, 0x4e, 0x6d, 0x0a, 0x45, 0xc1,
	0x37, 0x75, 0x61, 0x88, 0x6d, 0xf3, 0x11, 0xb4, 0xc7, 0x7b, 0x53, 0x18, 0xb7, 0x11, 0xbc, 0xba,
	0xb8, 0x5d, 0x48, 0x09, 0x7b, 0x3a, 0xce, 0x95, 0x23, 0x5c, 0xe1, 0xf7, 0xa2, 0xba, 0xf6, 0x14,
	0x4c, 0x76, 0x52, 0xb5, 0xca, 0x51, 0x2b, 0xbe, 0x37, 0x74, 0x87, 0x96, 0xb2, 0x0d, 0x5a, 0xa6,
	0x32, 0xe1, 0x92, 0x94, 0x3c, 0x03, 0xb0, 0x8a, 0x51, 0x97, 0xf9, 0x52, 0x51, 0xdd, 0x3e, 0x88,
	0x7a, 0x56, 0xf1, 0x75, 0x0d, 0xc8, 0x09, 0x1c, 0x34, 0x1b, 0x9d, 0x8e, 0xdb, 0xf5, 0x07, 0x51,
	0x7f, 0x87, 0x2d, 0x28, 0xdb, 0x78, 0x6f, 0x02, 0x4e, 0x7f, 0xda, 0x53, 0x1d, 0x28, 0x5f, 0x05,
	0xc8, 0x16, 0x1a, 0x13, 0xc5, 0x8f, 0x8e, 0x70, 0xbb, 0x7e, 0x3f, 0x7c, 0x0a, 0xfe, 0x28, 0xa9,
	0xe0, 0x57, 0xef, 0xd1, 0xa8, 0x61, 0x63, 0x5e, 0xdd, 0xe4, 0x3d, 0x77, 0xe0, 0xb0, 0x3d, 0x46,
	0x86, 0x70, 0xc2, 0x14, 0x6b, 0x5b, 0xad, 0xc0, 0x78, 0x95, 0xa7, 0x1a, 0x2d, 0xc7, 0xac, 0x9c,
	0xb0, 0x8e, 0x7a, 0xfc, 0x41, 0xce, 0x2b, 0x6e, 0x51, 0x51, 0x72, 0x0a, 0xa3, 0x86, 0x91, 0xad,
	0x7c, 0x56, 0xcb, 0x87, 0x9f, 0xf8, 0x56, 0xfa, 0x22, 0xe0, 0xe8, 0x4b, 0x64, 0xce, 0xb9, 0x2b,
	0xfc, 0x7e, 0x58, 0xfe, 0x7b, 0x36, 0x15, 0x19, 0x0d, 0x1b, 0xb1, 0x5c, 0xea, 0xb5, 0x59, 0xee,
	0xd7, 0x7f, 0x7a, 0xf6, 0x1e, 0x00, 0x00, 0xff, 0xff, 0xae, 0x18, 0xfa, 0xd7, 0xeb, 0x02, 0x00,
	0x00,
}
