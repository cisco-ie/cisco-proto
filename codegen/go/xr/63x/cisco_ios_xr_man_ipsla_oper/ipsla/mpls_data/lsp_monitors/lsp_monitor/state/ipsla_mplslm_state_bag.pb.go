/*
Copyright 2019 Cisco Systems

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: ipsla_mplslm_state_bag.proto

package cisco_ios_xr_man_ipsla_oper_ipsla_mpls_data_lsp_monitors_lsp_monitor_state

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type IpslaMplslmStateBag_KEYS struct {
	MonitorId            int32    `protobuf:"varint,1,opt,name=monitor_id,json=monitorId,proto3" json:"monitor_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IpslaMplslmStateBag_KEYS) Reset()         { *m = IpslaMplslmStateBag_KEYS{} }
func (m *IpslaMplslmStateBag_KEYS) String() string { return proto.CompactTextString(m) }
func (*IpslaMplslmStateBag_KEYS) ProtoMessage()    {}
func (*IpslaMplslmStateBag_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0158d3e471aef09, []int{0}
}

func (m *IpslaMplslmStateBag_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IpslaMplslmStateBag_KEYS.Unmarshal(m, b)
}
func (m *IpslaMplslmStateBag_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IpslaMplslmStateBag_KEYS.Marshal(b, m, deterministic)
}
func (m *IpslaMplslmStateBag_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IpslaMplslmStateBag_KEYS.Merge(m, src)
}
func (m *IpslaMplslmStateBag_KEYS) XXX_Size() int {
	return xxx_messageInfo_IpslaMplslmStateBag_KEYS.Size(m)
}
func (m *IpslaMplslmStateBag_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_IpslaMplslmStateBag_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_IpslaMplslmStateBag_KEYS proto.InternalMessageInfo

func (m *IpslaMplslmStateBag_KEYS) GetMonitorId() int32 {
	if m != nil {
		return m.MonitorId
	}
	return 0
}

type IpslaMplslmStateBag struct {
	ScanRemaining        uint32   `protobuf:"varint,50,opt,name=scan_remaining,json=scanRemaining,proto3" json:"scan_remaining,omitempty"`
	DeleteScanRemaining  uint32   `protobuf:"varint,51,opt,name=delete_scan_remaining,json=deleteScanRemaining,proto3" json:"delete_scan_remaining,omitempty"`
	RediscoveryRemaining uint32   `protobuf:"varint,52,opt,name=rediscovery_remaining,json=rediscoveryRemaining,proto3" json:"rediscovery_remaining,omitempty"`
	LpdCompeletionTime   uint32   `protobuf:"varint,53,opt,name=lpd_compeletion_time,json=lpdCompeletionTime,proto3" json:"lpd_compeletion_time,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IpslaMplslmStateBag) Reset()         { *m = IpslaMplslmStateBag{} }
func (m *IpslaMplslmStateBag) String() string { return proto.CompactTextString(m) }
func (*IpslaMplslmStateBag) ProtoMessage()    {}
func (*IpslaMplslmStateBag) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0158d3e471aef09, []int{1}
}

func (m *IpslaMplslmStateBag) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IpslaMplslmStateBag.Unmarshal(m, b)
}
func (m *IpslaMplslmStateBag) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IpslaMplslmStateBag.Marshal(b, m, deterministic)
}
func (m *IpslaMplslmStateBag) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IpslaMplslmStateBag.Merge(m, src)
}
func (m *IpslaMplslmStateBag) XXX_Size() int {
	return xxx_messageInfo_IpslaMplslmStateBag.Size(m)
}
func (m *IpslaMplslmStateBag) XXX_DiscardUnknown() {
	xxx_messageInfo_IpslaMplslmStateBag.DiscardUnknown(m)
}

var xxx_messageInfo_IpslaMplslmStateBag proto.InternalMessageInfo

func (m *IpslaMplslmStateBag) GetScanRemaining() uint32 {
	if m != nil {
		return m.ScanRemaining
	}
	return 0
}

func (m *IpslaMplslmStateBag) GetDeleteScanRemaining() uint32 {
	if m != nil {
		return m.DeleteScanRemaining
	}
	return 0
}

func (m *IpslaMplslmStateBag) GetRediscoveryRemaining() uint32 {
	if m != nil {
		return m.RediscoveryRemaining
	}
	return 0
}

func (m *IpslaMplslmStateBag) GetLpdCompeletionTime() uint32 {
	if m != nil {
		return m.LpdCompeletionTime
	}
	return 0
}

func init() {
	proto.RegisterType((*IpslaMplslmStateBag_KEYS)(nil), "cisco_ios_xr_man_ipsla_oper.ipsla.mpls_data.lsp_monitors.lsp_monitor.state.ipsla_mplslm_state_bag_KEYS")
	proto.RegisterType((*IpslaMplslmStateBag)(nil), "cisco_ios_xr_man_ipsla_oper.ipsla.mpls_data.lsp_monitors.lsp_monitor.state.ipsla_mplslm_state_bag")
}

func init() { proto.RegisterFile("ipsla_mplslm_state_bag.proto", fileDescriptor_a0158d3e471aef09) }

var fileDescriptor_a0158d3e471aef09 = []byte{
	// 251 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x90, 0xc1, 0x4a, 0x03, 0x31,
	0x10, 0x86, 0xd9, 0x83, 0x82, 0x81, 0x7a, 0x88, 0xad, 0x2c, 0xa8, 0x50, 0x0a, 0x42, 0x4f, 0x41,
	0xba, 0x7a, 0xf3, 0x26, 0x1e, 0xd4, 0xdb, 0xd6, 0x8b, 0xa7, 0x21, 0xdd, 0x0c, 0x65, 0x20, 0xc9,
	0x84, 0x24, 0x88, 0xbe, 0xaa, 0x4f, 0x23, 0x9b, 0x56, 0xba, 0x96, 0xbd, 0x25, 0xff, 0xff, 0x7d,
	0x33, 0x30, 0xe2, 0x9a, 0x42, 0xb2, 0x1a, 0x5c, 0xb0, 0xc9, 0x3a, 0x48, 0x59, 0x67, 0x84, 0x8d,
	0xde, 0xaa, 0x10, 0x39, 0xb3, 0x7c, 0xed, 0x28, 0x75, 0x0c, 0xc4, 0x09, 0xbe, 0x22, 0x38, 0xed,
	0x61, 0x87, 0x73, 0xc0, 0xa8, 0xca, 0x53, 0xf5, 0x26, 0x18, 0x9d, 0xb5, 0xb2, 0x29, 0x80, 0x63,
	0x4f, 0x99, 0x63, 0x1a, 0x7e, 0x54, 0x99, 0xba, 0x78, 0x14, 0x57, 0xe3, 0xbb, 0xe0, 0xed, 0xf9,
	0x63, 0x2d, 0x6f, 0x84, 0xd8, 0xf3, 0x40, 0xa6, 0xae, 0xe6, 0xd5, 0xf2, 0xa4, 0x3d, 0xdb, 0x27,
	0x2f, 0x66, 0xf1, 0x53, 0x89, 0xcb, 0x71, 0x5d, 0xde, 0x8a, 0xf3, 0xd4, 0x69, 0x0f, 0x11, 0x9d,
	0x26, 0x4f, 0x7e, 0x5b, 0xaf, 0xe6, 0xd5, 0x72, 0xd2, 0x4e, 0xfa, 0xb4, 0xfd, 0x0b, 0xe5, 0x4a,
	0xcc, 0x0c, 0x5a, 0xcc, 0x08, 0x47, 0x74, 0x53, 0xe8, 0x8b, 0x5d, 0xb9, 0xfe, 0xe7, 0x34, 0x62,
	0x16, 0xd1, 0xf4, 0x37, 0xf8, 0xc4, 0xf8, 0x3d, 0x70, 0xee, 0x8b, 0x33, 0x1d, 0x94, 0x07, 0xe9,
	0x4e, 0x4c, 0x6d, 0x30, 0xd0, 0xb1, 0x0b, 0xfd, 0x48, 0x62, 0x0f, 0x99, 0x1c, 0xd6, 0x0f, 0xc5,
	0x91, 0x36, 0x98, 0xa7, 0x43, 0xf5, 0x4e, 0x0e, 0x37, 0xa7, 0xe5, 0xda, 0xcd, 0x6f, 0x00, 0x00,
	0x00, 0xff, 0xff, 0xfe, 0x95, 0x92, 0x39, 0x8d, 0x01, 0x00, 0x00,
}
