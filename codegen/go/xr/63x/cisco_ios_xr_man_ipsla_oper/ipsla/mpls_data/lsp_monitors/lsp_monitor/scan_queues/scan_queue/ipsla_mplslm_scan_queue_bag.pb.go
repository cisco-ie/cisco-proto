/*
Copyright 2019 Cisco Systems

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: ipsla_mplslm_scan_queue_bag.proto

package cisco_ios_xr_man_ipsla_oper_ipsla_mpls_data_lsp_monitors_lsp_monitor_scan_queues_scan_queue

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type IpslaMplslmScanQueueBag_KEYS struct {
	MonitorId            int32    `protobuf:"varint,1,opt,name=monitor_id,json=monitorId,proto3" json:"monitor_id,omitempty"`
	Address              string   `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IpslaMplslmScanQueueBag_KEYS) Reset()         { *m = IpslaMplslmScanQueueBag_KEYS{} }
func (m *IpslaMplslmScanQueueBag_KEYS) String() string { return proto.CompactTextString(m) }
func (*IpslaMplslmScanQueueBag_KEYS) ProtoMessage()    {}
func (*IpslaMplslmScanQueueBag_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_99b50442f331f4a7, []int{0}
}

func (m *IpslaMplslmScanQueueBag_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IpslaMplslmScanQueueBag_KEYS.Unmarshal(m, b)
}
func (m *IpslaMplslmScanQueueBag_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IpslaMplslmScanQueueBag_KEYS.Marshal(b, m, deterministic)
}
func (m *IpslaMplslmScanQueueBag_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IpslaMplslmScanQueueBag_KEYS.Merge(m, src)
}
func (m *IpslaMplslmScanQueueBag_KEYS) XXX_Size() int {
	return xxx_messageInfo_IpslaMplslmScanQueueBag_KEYS.Size(m)
}
func (m *IpslaMplslmScanQueueBag_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_IpslaMplslmScanQueueBag_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_IpslaMplslmScanQueueBag_KEYS proto.InternalMessageInfo

func (m *IpslaMplslmScanQueueBag_KEYS) GetMonitorId() int32 {
	if m != nil {
		return m.MonitorId
	}
	return 0
}

func (m *IpslaMplslmScanQueueBag_KEYS) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

type IpslaMplslmScanQueueBag struct {
	TargetAddress        string   `protobuf:"bytes,50,opt,name=target_address,json=targetAddress,proto3" json:"target_address,omitempty"`
	TargetMask           uint32   `protobuf:"varint,51,opt,name=target_mask,json=targetMask,proto3" json:"target_mask,omitempty"`
	Entry                string   `protobuf:"bytes,52,opt,name=entry,proto3" json:"entry,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IpslaMplslmScanQueueBag) Reset()         { *m = IpslaMplslmScanQueueBag{} }
func (m *IpslaMplslmScanQueueBag) String() string { return proto.CompactTextString(m) }
func (*IpslaMplslmScanQueueBag) ProtoMessage()    {}
func (*IpslaMplslmScanQueueBag) Descriptor() ([]byte, []int) {
	return fileDescriptor_99b50442f331f4a7, []int{1}
}

func (m *IpslaMplslmScanQueueBag) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IpslaMplslmScanQueueBag.Unmarshal(m, b)
}
func (m *IpslaMplslmScanQueueBag) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IpslaMplslmScanQueueBag.Marshal(b, m, deterministic)
}
func (m *IpslaMplslmScanQueueBag) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IpslaMplslmScanQueueBag.Merge(m, src)
}
func (m *IpslaMplslmScanQueueBag) XXX_Size() int {
	return xxx_messageInfo_IpslaMplslmScanQueueBag.Size(m)
}
func (m *IpslaMplslmScanQueueBag) XXX_DiscardUnknown() {
	xxx_messageInfo_IpslaMplslmScanQueueBag.DiscardUnknown(m)
}

var xxx_messageInfo_IpslaMplslmScanQueueBag proto.InternalMessageInfo

func (m *IpslaMplslmScanQueueBag) GetTargetAddress() string {
	if m != nil {
		return m.TargetAddress
	}
	return ""
}

func (m *IpslaMplslmScanQueueBag) GetTargetMask() uint32 {
	if m != nil {
		return m.TargetMask
	}
	return 0
}

func (m *IpslaMplslmScanQueueBag) GetEntry() string {
	if m != nil {
		return m.Entry
	}
	return ""
}

func init() {
	proto.RegisterType((*IpslaMplslmScanQueueBag_KEYS)(nil), "cisco_ios_xr_man_ipsla_oper.ipsla.mpls_data.lsp_monitors.lsp_monitor.scan_queues.scan_queue.ipsla_mplslm_scan_queue_bag_KEYS")
	proto.RegisterType((*IpslaMplslmScanQueueBag)(nil), "cisco_ios_xr_man_ipsla_oper.ipsla.mpls_data.lsp_monitors.lsp_monitor.scan_queues.scan_queue.ipsla_mplslm_scan_queue_bag")
}

func init() { proto.RegisterFile("ipsla_mplslm_scan_queue_bag.proto", fileDescriptor_99b50442f331f4a7) }

var fileDescriptor_99b50442f331f4a7 = []byte{
	// 233 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x90, 0x41, 0x4b, 0x03, 0x31,
	0x10, 0x85, 0x59, 0xa1, 0x4a, 0x47, 0xea, 0x21, 0x78, 0x08, 0x88, 0xb8, 0x16, 0x84, 0x3d, 0xe5,
	0x60, 0xfd, 0x03, 0x1e, 0x3c, 0x88, 0x78, 0x59, 0x4f, 0xd2, 0xc3, 0x30, 0xdd, 0x84, 0x12, 0xba,
	0xd9, 0xc4, 0x4c, 0x0a, 0x8a, 0x7f, 0x5e, 0x4c, 0xb6, 0xb4, 0xa7, 0xbd, 0xbd, 0xf7, 0x91, 0xef,
	0x11, 0x06, 0xee, 0x6d, 0xe0, 0x9e, 0xd0, 0x85, 0x9e, 0x7b, 0x87, 0xdc, 0xd1, 0x80, 0x5f, 0x7b,
	0xb3, 0x37, 0xb8, 0xa1, 0xad, 0x0a, 0xd1, 0x27, 0x2f, 0xd6, 0x9d, 0xe5, 0xce, 0xa3, 0xf5, 0x8c,
	0xdf, 0x11, 0x1d, 0x0d, 0x58, 0x1c, 0x1f, 0x4c, 0x54, 0x39, 0xaa, 0x7f, 0x1d, 0x35, 0x25, 0x52,
	0x3d, 0x07, 0x74, 0x7e, 0xb0, 0xc9, 0x47, 0x3e, 0x2d, 0xea, 0x38, 0xcd, 0x27, 0x79, 0xb9, 0x86,
	0x7a, 0xe2, 0x07, 0xf8, 0xf6, 0xf2, 0xf9, 0x21, 0x6e, 0x01, 0xc6, 0x15, 0xb4, 0x5a, 0x56, 0x75,
	0xd5, 0xcc, 0xda, 0xf9, 0x48, 0x5e, 0xb5, 0x90, 0x70, 0x41, 0x5a, 0x47, 0xc3, 0x2c, 0xcf, 0xea,
	0xaa, 0x99, 0xb7, 0x87, 0xba, 0xfc, 0x85, 0x9b, 0x89, 0x71, 0xf1, 0x00, 0x57, 0x89, 0xe2, 0xd6,
	0x24, 0x3c, 0xf8, 0x8f, 0xd9, 0x5f, 0x14, 0xfa, 0x5c, 0xa0, 0xb8, 0x83, 0xcb, 0xf1, 0x99, 0x23,
	0xde, 0xc9, 0x55, 0x5d, 0x35, 0x8b, 0x16, 0x0a, 0x7a, 0x27, 0xde, 0x89, 0x6b, 0x98, 0x99, 0x21,
	0xc5, 0x1f, 0xf9, 0x94, 0xf5, 0x52, 0x36, 0xe7, 0xf9, 0x7a, 0xab, 0xbf, 0x00, 0x00, 0x00, 0xff,
	0xff, 0x82, 0x6a, 0xe2, 0x3f, 0x62, 0x01, 0x00, 0x00,
}
