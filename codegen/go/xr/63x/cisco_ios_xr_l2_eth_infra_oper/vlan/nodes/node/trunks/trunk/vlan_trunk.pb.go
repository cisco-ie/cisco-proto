/*
Copyright 2019 Cisco Systems

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: vlan_trunk.proto

package cisco_ios_xr_l2_eth_infra_oper_vlan_nodes_node_trunks_trunk

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type VlanTrunk_KEYS struct {
	NodeId               string   `protobuf:"bytes,1,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	Interface            string   `protobuf:"bytes,2,opt,name=interface,proto3" json:"interface,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VlanTrunk_KEYS) Reset()         { *m = VlanTrunk_KEYS{} }
func (m *VlanTrunk_KEYS) String() string { return proto.CompactTextString(m) }
func (*VlanTrunk_KEYS) ProtoMessage()    {}
func (*VlanTrunk_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_029c81a325123aaf, []int{0}
}

func (m *VlanTrunk_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VlanTrunk_KEYS.Unmarshal(m, b)
}
func (m *VlanTrunk_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VlanTrunk_KEYS.Marshal(b, m, deterministic)
}
func (m *VlanTrunk_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VlanTrunk_KEYS.Merge(m, src)
}
func (m *VlanTrunk_KEYS) XXX_Size() int {
	return xxx_messageInfo_VlanTrunk_KEYS.Size(m)
}
func (m *VlanTrunk_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_VlanTrunk_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_VlanTrunk_KEYS proto.InternalMessageInfo

func (m *VlanTrunk_KEYS) GetNodeId() string {
	if m != nil {
		return m.NodeId
	}
	return ""
}

func (m *VlanTrunk_KEYS) GetInterface() string {
	if m != nil {
		return m.Interface
	}
	return ""
}

type VlanTrunkSubIntfStateCounters struct {
	Up                   uint32   `protobuf:"varint,1,opt,name=up,proto3" json:"up,omitempty"`
	Down                 uint32   `protobuf:"varint,2,opt,name=down,proto3" json:"down,omitempty"`
	AdminDown            uint32   `protobuf:"varint,3,opt,name=admin_down,json=adminDown,proto3" json:"admin_down,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VlanTrunkSubIntfStateCounters) Reset()         { *m = VlanTrunkSubIntfStateCounters{} }
func (m *VlanTrunkSubIntfStateCounters) String() string { return proto.CompactTextString(m) }
func (*VlanTrunkSubIntfStateCounters) ProtoMessage()    {}
func (*VlanTrunkSubIntfStateCounters) Descriptor() ([]byte, []int) {
	return fileDescriptor_029c81a325123aaf, []int{1}
}

func (m *VlanTrunkSubIntfStateCounters) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VlanTrunkSubIntfStateCounters.Unmarshal(m, b)
}
func (m *VlanTrunkSubIntfStateCounters) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VlanTrunkSubIntfStateCounters.Marshal(b, m, deterministic)
}
func (m *VlanTrunkSubIntfStateCounters) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VlanTrunkSubIntfStateCounters.Merge(m, src)
}
func (m *VlanTrunkSubIntfStateCounters) XXX_Size() int {
	return xxx_messageInfo_VlanTrunkSubIntfStateCounters.Size(m)
}
func (m *VlanTrunkSubIntfStateCounters) XXX_DiscardUnknown() {
	xxx_messageInfo_VlanTrunkSubIntfStateCounters.DiscardUnknown(m)
}

var xxx_messageInfo_VlanTrunkSubIntfStateCounters proto.InternalMessageInfo

func (m *VlanTrunkSubIntfStateCounters) GetUp() uint32 {
	if m != nil {
		return m.Up
	}
	return 0
}

func (m *VlanTrunkSubIntfStateCounters) GetDown() uint32 {
	if m != nil {
		return m.Down
	}
	return 0
}

func (m *VlanTrunkSubIntfStateCounters) GetAdminDown() uint32 {
	if m != nil {
		return m.AdminDown
	}
	return 0
}

type VlanTrunkL2SubIntfs struct {
	TotalCount           uint32                         `protobuf:"varint,1,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	Dot1QCount           uint32                         `protobuf:"varint,2,opt,name=dot1q_count,json=dot1qCount,proto3" json:"dot1q_count,omitempty"`
	QinQCount            uint32                         `protobuf:"varint,3,opt,name=qin_q_count,json=qinQCount,proto3" json:"qin_q_count,omitempty"`
	QinAnyCount          uint32                         `protobuf:"varint,4,opt,name=qin_any_count,json=qinAnyCount,proto3" json:"qin_any_count,omitempty"`
	UntaggedCount        uint32                         `protobuf:"varint,5,opt,name=untagged_count,json=untaggedCount,proto3" json:"untagged_count,omitempty"`
	StateCounters        *VlanTrunkSubIntfStateCounters `protobuf:"bytes,6,opt,name=state_counters,json=stateCounters,proto3" json:"state_counters,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                       `json:"-"`
	XXX_unrecognized     []byte                         `json:"-"`
	XXX_sizecache        int32                          `json:"-"`
}

func (m *VlanTrunkL2SubIntfs) Reset()         { *m = VlanTrunkL2SubIntfs{} }
func (m *VlanTrunkL2SubIntfs) String() string { return proto.CompactTextString(m) }
func (*VlanTrunkL2SubIntfs) ProtoMessage()    {}
func (*VlanTrunkL2SubIntfs) Descriptor() ([]byte, []int) {
	return fileDescriptor_029c81a325123aaf, []int{2}
}

func (m *VlanTrunkL2SubIntfs) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VlanTrunkL2SubIntfs.Unmarshal(m, b)
}
func (m *VlanTrunkL2SubIntfs) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VlanTrunkL2SubIntfs.Marshal(b, m, deterministic)
}
func (m *VlanTrunkL2SubIntfs) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VlanTrunkL2SubIntfs.Merge(m, src)
}
func (m *VlanTrunkL2SubIntfs) XXX_Size() int {
	return xxx_messageInfo_VlanTrunkL2SubIntfs.Size(m)
}
func (m *VlanTrunkL2SubIntfs) XXX_DiscardUnknown() {
	xxx_messageInfo_VlanTrunkL2SubIntfs.DiscardUnknown(m)
}

var xxx_messageInfo_VlanTrunkL2SubIntfs proto.InternalMessageInfo

func (m *VlanTrunkL2SubIntfs) GetTotalCount() uint32 {
	if m != nil {
		return m.TotalCount
	}
	return 0
}

func (m *VlanTrunkL2SubIntfs) GetDot1QCount() uint32 {
	if m != nil {
		return m.Dot1QCount
	}
	return 0
}

func (m *VlanTrunkL2SubIntfs) GetQinQCount() uint32 {
	if m != nil {
		return m.QinQCount
	}
	return 0
}

func (m *VlanTrunkL2SubIntfs) GetQinAnyCount() uint32 {
	if m != nil {
		return m.QinAnyCount
	}
	return 0
}

func (m *VlanTrunkL2SubIntfs) GetUntaggedCount() uint32 {
	if m != nil {
		return m.UntaggedCount
	}
	return 0
}

func (m *VlanTrunkL2SubIntfs) GetStateCounters() *VlanTrunkSubIntfStateCounters {
	if m != nil {
		return m.StateCounters
	}
	return nil
}

type VlanTrunkL3SubIntfs struct {
	TotalCount           uint32                         `protobuf:"varint,1,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	Dot1QCount           uint32                         `protobuf:"varint,2,opt,name=dot1q_count,json=dot1qCount,proto3" json:"dot1q_count,omitempty"`
	QinQCount            uint32                         `protobuf:"varint,3,opt,name=qin_q_count,json=qinQCount,proto3" json:"qin_q_count,omitempty"`
	UntaggedCount        uint32                         `protobuf:"varint,4,opt,name=untagged_count,json=untaggedCount,proto3" json:"untagged_count,omitempty"`
	StateCounters        *VlanTrunkSubIntfStateCounters `protobuf:"bytes,5,opt,name=state_counters,json=stateCounters,proto3" json:"state_counters,omitempty"`
	NativeVlan           uint32                         `protobuf:"varint,6,opt,name=native_vlan,json=nativeVlan,proto3" json:"native_vlan,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                       `json:"-"`
	XXX_unrecognized     []byte                         `json:"-"`
	XXX_sizecache        int32                          `json:"-"`
}

func (m *VlanTrunkL3SubIntfs) Reset()         { *m = VlanTrunkL3SubIntfs{} }
func (m *VlanTrunkL3SubIntfs) String() string { return proto.CompactTextString(m) }
func (*VlanTrunkL3SubIntfs) ProtoMessage()    {}
func (*VlanTrunkL3SubIntfs) Descriptor() ([]byte, []int) {
	return fileDescriptor_029c81a325123aaf, []int{3}
}

func (m *VlanTrunkL3SubIntfs) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VlanTrunkL3SubIntfs.Unmarshal(m, b)
}
func (m *VlanTrunkL3SubIntfs) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VlanTrunkL3SubIntfs.Marshal(b, m, deterministic)
}
func (m *VlanTrunkL3SubIntfs) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VlanTrunkL3SubIntfs.Merge(m, src)
}
func (m *VlanTrunkL3SubIntfs) XXX_Size() int {
	return xxx_messageInfo_VlanTrunkL3SubIntfs.Size(m)
}
func (m *VlanTrunkL3SubIntfs) XXX_DiscardUnknown() {
	xxx_messageInfo_VlanTrunkL3SubIntfs.DiscardUnknown(m)
}

var xxx_messageInfo_VlanTrunkL3SubIntfs proto.InternalMessageInfo

func (m *VlanTrunkL3SubIntfs) GetTotalCount() uint32 {
	if m != nil {
		return m.TotalCount
	}
	return 0
}

func (m *VlanTrunkL3SubIntfs) GetDot1QCount() uint32 {
	if m != nil {
		return m.Dot1QCount
	}
	return 0
}

func (m *VlanTrunkL3SubIntfs) GetQinQCount() uint32 {
	if m != nil {
		return m.QinQCount
	}
	return 0
}

func (m *VlanTrunkL3SubIntfs) GetUntaggedCount() uint32 {
	if m != nil {
		return m.UntaggedCount
	}
	return 0
}

func (m *VlanTrunkL3SubIntfs) GetStateCounters() *VlanTrunkSubIntfStateCounters {
	if m != nil {
		return m.StateCounters
	}
	return nil
}

func (m *VlanTrunkL3SubIntfs) GetNativeVlan() uint32 {
	if m != nil {
		return m.NativeVlan
	}
	return 0
}

type VlanTrunk struct {
	InterfaceXr          string               `protobuf:"bytes,50,opt,name=interface_xr,json=interfaceXr,proto3" json:"interface_xr,omitempty"`
	State                string               `protobuf:"bytes,51,opt,name=state,proto3" json:"state,omitempty"`
	Mtu                  uint32               `protobuf:"varint,52,opt,name=mtu,proto3" json:"mtu,omitempty"`
	Layer2SubInterfaces  *VlanTrunkL2SubIntfs `protobuf:"bytes,53,opt,name=layer2_sub_interfaces,json=layer2SubInterfaces,proto3" json:"layer2_sub_interfaces,omitempty"`
	Layer3SubInterfaces  *VlanTrunkL3SubIntfs `protobuf:"bytes,54,opt,name=layer3_sub_interfaces,json=layer3SubInterfaces,proto3" json:"layer3_sub_interfaces,omitempty"`
	QinqOuterEtherType   string               `protobuf:"bytes,55,opt,name=qinq_outer_ether_type,json=qinqOuterEtherType,proto3" json:"qinq_outer_ether_type,omitempty"`
	Dot1AdCount          uint32               `protobuf:"varint,56,opt,name=dot1ad_count,json=dot1adCount,proto3" json:"dot1ad_count,omitempty"`
	UntaggedInterface    string               `protobuf:"bytes,57,opt,name=untagged_interface,json=untaggedInterface,proto3" json:"untagged_interface,omitempty"`
	MacFiltering         string               `protobuf:"bytes,58,opt,name=mac_filtering,json=macFiltering,proto3" json:"mac_filtering,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *VlanTrunk) Reset()         { *m = VlanTrunk{} }
func (m *VlanTrunk) String() string { return proto.CompactTextString(m) }
func (*VlanTrunk) ProtoMessage()    {}
func (*VlanTrunk) Descriptor() ([]byte, []int) {
	return fileDescriptor_029c81a325123aaf, []int{4}
}

func (m *VlanTrunk) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VlanTrunk.Unmarshal(m, b)
}
func (m *VlanTrunk) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VlanTrunk.Marshal(b, m, deterministic)
}
func (m *VlanTrunk) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VlanTrunk.Merge(m, src)
}
func (m *VlanTrunk) XXX_Size() int {
	return xxx_messageInfo_VlanTrunk.Size(m)
}
func (m *VlanTrunk) XXX_DiscardUnknown() {
	xxx_messageInfo_VlanTrunk.DiscardUnknown(m)
}

var xxx_messageInfo_VlanTrunk proto.InternalMessageInfo

func (m *VlanTrunk) GetInterfaceXr() string {
	if m != nil {
		return m.InterfaceXr
	}
	return ""
}

func (m *VlanTrunk) GetState() string {
	if m != nil {
		return m.State
	}
	return ""
}

func (m *VlanTrunk) GetMtu() uint32 {
	if m != nil {
		return m.Mtu
	}
	return 0
}

func (m *VlanTrunk) GetLayer2SubInterfaces() *VlanTrunkL2SubIntfs {
	if m != nil {
		return m.Layer2SubInterfaces
	}
	return nil
}

func (m *VlanTrunk) GetLayer3SubInterfaces() *VlanTrunkL3SubIntfs {
	if m != nil {
		return m.Layer3SubInterfaces
	}
	return nil
}

func (m *VlanTrunk) GetQinqOuterEtherType() string {
	if m != nil {
		return m.QinqOuterEtherType
	}
	return ""
}

func (m *VlanTrunk) GetDot1AdCount() uint32 {
	if m != nil {
		return m.Dot1AdCount
	}
	return 0
}

func (m *VlanTrunk) GetUntaggedInterface() string {
	if m != nil {
		return m.UntaggedInterface
	}
	return ""
}

func (m *VlanTrunk) GetMacFiltering() string {
	if m != nil {
		return m.MacFiltering
	}
	return ""
}

func init() {
	proto.RegisterType((*VlanTrunk_KEYS)(nil), "cisco_ios_xr_l2_eth_infra_oper.vlan.nodes.node.trunks.trunk.vlan_trunk_KEYS")
	proto.RegisterType((*VlanTrunkSubIntfStateCounters)(nil), "cisco_ios_xr_l2_eth_infra_oper.vlan.nodes.node.trunks.trunk.vlan_trunk_sub_intf_state_counters")
	proto.RegisterType((*VlanTrunkL2SubIntfs)(nil), "cisco_ios_xr_l2_eth_infra_oper.vlan.nodes.node.trunks.trunk.vlan_trunk_l2_sub_intfs")
	proto.RegisterType((*VlanTrunkL3SubIntfs)(nil), "cisco_ios_xr_l2_eth_infra_oper.vlan.nodes.node.trunks.trunk.vlan_trunk_l3_sub_intfs")
	proto.RegisterType((*VlanTrunk)(nil), "cisco_ios_xr_l2_eth_infra_oper.vlan.nodes.node.trunks.trunk.vlan_trunk")
}

func init() { proto.RegisterFile("vlan_trunk.proto", fileDescriptor_029c81a325123aaf) }

var fileDescriptor_029c81a325123aaf = []byte{
	// 555 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xc4, 0x54, 0x5d, 0x6f, 0xd3, 0x30,
	0x14, 0x55, 0xbb, 0xb6, 0xa8, 0xb7, 0x4b, 0x19, 0x86, 0x69, 0x79, 0xe0, 0x63, 0x04, 0x21, 0xed,
	0x85, 0x48, 0x6b, 0xf8, 0xe6, 0x09, 0x8d, 0x21, 0x26, 0x1e, 0x10, 0xd9, 0x84, 0xe0, 0xc9, 0x72,
	0x13, 0xb7, 0x58, 0xa4, 0x76, 0xea, 0x38, 0xdb, 0xfa, 0x07, 0x10, 0xff, 0x80, 0x3f, 0x85, 0xc4,
	0x5f, 0x42, 0xbe, 0x4e, 0x93, 0x6e, 0x7b, 0x00, 0x89, 0x09, 0x5e, 0xda, 0xf8, 0x9c, 0xe3, 0x7b,
	0x6e, 0x8e, 0xaf, 0x03, 0x1b, 0xc7, 0x19, 0x93, 0xd4, 0xe8, 0x52, 0x7e, 0x09, 0x73, 0xad, 0x8c,
	0x22, 0x2f, 0x12, 0x51, 0x24, 0x8a, 0x0a, 0x55, 0xd0, 0x53, 0x4d, 0xb3, 0x11, 0xe5, 0xe6, 0x33,
	0x15, 0x72, 0xa2, 0x19, 0x55, 0x39, 0xd7, 0xa1, 0xdd, 0x10, 0x4a, 0x95, 0xf2, 0x02, 0x7f, 0x43,
	0xdc, 0x5b, 0xb8, 0xbf, 0xe0, 0x0d, 0x5c, 0x6d, 0x0a, 0xd2, 0xb7, 0xfb, 0x9f, 0x0e, 0xc9, 0x16,
	0x5c, 0xb1, 0x3a, 0x2a, 0x52, 0xbf, 0xb5, 0xdd, 0xda, 0xe9, 0xc7, 0x3d, 0xbb, 0x3c, 0x48, 0xc9,
	0x4d, 0xe8, 0x0b, 0x69, 0xb8, 0x9e, 0xb0, 0x84, 0xfb, 0x6d, 0xa4, 0x1a, 0x20, 0x98, 0x42, 0xb0,
	0x52, 0xa9, 0x28, 0xc7, 0x54, 0x48, 0x33, 0xa1, 0x85, 0x61, 0x86, 0xd3, 0x44, 0x95, 0x56, 0x58,
	0x90, 0x21, 0xb4, 0xcb, 0x1c, 0xeb, 0x7a, 0x71, 0xbb, 0xcc, 0x09, 0x81, 0x4e, 0xaa, 0x4e, 0x24,
	0x96, 0xf3, 0x62, 0x7c, 0x26, 0xb7, 0x00, 0x58, 0x3a, 0x13, 0x92, 0x22, 0xb3, 0x86, 0x4c, 0x1f,
	0x91, 0x57, 0xea, 0x44, 0x06, 0x3f, 0xdb, 0xb0, 0xb5, 0xe2, 0x94, 0x8d, 0x6a, 0xb3, 0x82, 0xdc,
	0x81, 0x81, 0x51, 0x86, 0x65, 0xce, 0xb0, 0xf2, 0x01, 0x84, 0xf6, 0x2c, 0x62, 0x05, 0xa9, 0x32,
	0xbb, 0xf3, 0x4a, 0xe0, 0x6c, 0x01, 0x21, 0x27, 0xb8, 0x0d, 0x83, 0xb9, 0x90, 0x74, 0x29, 0xa8,
	0xdc, 0xe7, 0x42, 0xbe, 0x77, 0x7c, 0x00, 0x9e, 0xe5, 0x99, 0x5c, 0x54, 0x8a, 0x0e, 0x2a, 0xec,
	0xa6, 0x97, 0x72, 0xe1, 0x34, 0xf7, 0x61, 0x58, 0x4a, 0xc3, 0xa6, 0x53, 0x9e, 0x56, 0xa2, 0x2e,
	0x8a, 0xbc, 0x25, 0xea, 0x64, 0x5f, 0x5b, 0x30, 0x3c, 0x1b, 0x8f, 0xdf, 0xdb, 0x6e, 0xed, 0x0c,
	0x46, 0x34, 0xfc, 0x8b, 0x23, 0x0d, 0x7f, 0x7f, 0x0a, 0xb1, 0x87, 0xeb, 0xbd, 0x6a, 0x19, 0xfc,
	0x38, 0x97, 0x68, 0xf4, 0x4f, 0x13, 0xbd, 0x98, 0x56, 0xe7, 0x0f, 0xd3, 0xea, 0xfe, 0x8f, 0xb4,
	0xec, 0x0b, 0x4b, 0x66, 0xc4, 0x31, 0xa7, 0x76, 0x2f, 0x1e, 0x99, 0x17, 0x83, 0x83, 0x3e, 0x64,
	0x4c, 0x06, 0xdf, 0x3b, 0x00, 0x4d, 0x59, 0x72, 0x17, 0xd6, 0xeb, 0x5b, 0x42, 0x4f, 0xb5, 0x3f,
	0xc2, 0x9b, 0x33, 0xa8, 0xb1, 0x8f, 0x9a, 0xdc, 0x80, 0x2e, 0x7a, 0xf8, 0x11, 0x72, 0x6e, 0x41,
	0x36, 0x60, 0x6d, 0x66, 0x4a, 0xff, 0x21, 0x1a, 0xd8, 0x47, 0xf2, 0xad, 0x05, 0x9b, 0x19, 0x5b,
	0x70, 0x5d, 0xcf, 0xbc, 0x2b, 0x51, 0xf8, 0x8f, 0x30, 0x8a, 0xa3, 0xcb, 0x8a, 0x62, 0xf5, 0x52,
	0xc5, 0xd7, 0x9d, 0xe5, 0x61, 0x39, 0x3e, 0xa8, 0x0d, 0x9b, 0x56, 0xa2, 0xf3, 0xad, 0x3c, 0xbe,
	0xe4, 0x56, 0xa2, 0x0b, 0xad, 0x44, 0x67, 0x5b, 0xd9, 0x85, 0xcd, 0xb9, 0x90, 0x73, 0xaa, 0x4a,
	0xc3, 0xb5, 0xb5, 0xe1, 0x9a, 0x9a, 0x45, 0xce, 0xfd, 0x27, 0x98, 0x26, 0xb1, 0xe4, 0x3b, 0xcb,
	0xed, 0x5b, 0xea, 0x68, 0x91, 0x73, 0x7b, 0x26, 0x76, 0x42, 0xd9, 0x72, 0xe2, 0x9e, 0xba, 0x4b,
	0xec, 0x30, 0x37, 0x6f, 0x0f, 0x80, 0xd4, 0x63, 0xd9, 0x7c, 0xf6, 0x9e, 0x61, 0xc9, 0x6b, 0x4b,
	0xa6, 0xee, 0x82, 0xdc, 0x03, 0x6f, 0xc6, 0x12, 0x3a, 0x11, 0x99, 0xe1, 0x5a, 0xc8, 0xa9, 0xff,
	0x1c, 0x95, 0xeb, 0x33, 0x96, 0xbc, 0x5e, 0x62, 0xe3, 0x1e, 0x7e, 0xb1, 0xa3, 0x5f, 0x01, 0x00,
	0x00, 0xff, 0xff, 0x6b, 0xf7, 0xe3, 0x51, 0xc5, 0x05, 0x00, 0x00,
}
