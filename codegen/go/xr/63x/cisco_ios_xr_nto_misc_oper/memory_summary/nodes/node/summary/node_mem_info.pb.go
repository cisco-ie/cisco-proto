/*
Copyright 2019 Cisco Systems

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: node_mem_info.proto

package cisco_ios_xr_nto_misc_oper_memory_summary_nodes_node_summary

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type NodeMemInfo_KEYS struct {
	NodeName             string   `protobuf:"bytes,1,opt,name=node_name,json=nodeName,proto3" json:"node_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NodeMemInfo_KEYS) Reset()         { *m = NodeMemInfo_KEYS{} }
func (m *NodeMemInfo_KEYS) String() string { return proto.CompactTextString(m) }
func (*NodeMemInfo_KEYS) ProtoMessage()    {}
func (*NodeMemInfo_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_29c1fe844084c383, []int{0}
}

func (m *NodeMemInfo_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NodeMemInfo_KEYS.Unmarshal(m, b)
}
func (m *NodeMemInfo_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NodeMemInfo_KEYS.Marshal(b, m, deterministic)
}
func (m *NodeMemInfo_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NodeMemInfo_KEYS.Merge(m, src)
}
func (m *NodeMemInfo_KEYS) XXX_Size() int {
	return xxx_messageInfo_NodeMemInfo_KEYS.Size(m)
}
func (m *NodeMemInfo_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_NodeMemInfo_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_NodeMemInfo_KEYS proto.InternalMessageInfo

func (m *NodeMemInfo_KEYS) GetNodeName() string {
	if m != nil {
		return m.NodeName
	}
	return ""
}

type NodeMemInfo struct {
	PageSize              uint32   `protobuf:"varint,50,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	RamMemory             uint64   `protobuf:"varint,51,opt,name=ram_memory,json=ramMemory,proto3" json:"ram_memory,omitempty"`
	FreePhysicalMemory    uint64   `protobuf:"varint,52,opt,name=free_physical_memory,json=freePhysicalMemory,proto3" json:"free_physical_memory,omitempty"`
	SystemRamMemory       uint64   `protobuf:"varint,53,opt,name=system_ram_memory,json=systemRamMemory,proto3" json:"system_ram_memory,omitempty"`
	FreeApplicationMemory uint64   `protobuf:"varint,54,opt,name=free_application_memory,json=freeApplicationMemory,proto3" json:"free_application_memory,omitempty"`
	ImageMemory           uint64   `protobuf:"varint,55,opt,name=image_memory,json=imageMemory,proto3" json:"image_memory,omitempty"`
	BootRamSize           uint64   `protobuf:"varint,56,opt,name=boot_ram_size,json=bootRamSize,proto3" json:"boot_ram_size,omitempty"`
	ReservedMemory        uint64   `protobuf:"varint,57,opt,name=reserved_memory,json=reservedMemory,proto3" json:"reserved_memory,omitempty"`
	IoMemory              uint64   `protobuf:"varint,58,opt,name=io_memory,json=ioMemory,proto3" json:"io_memory,omitempty"`
	FlashSystem           uint64   `protobuf:"varint,59,opt,name=flash_system,json=flashSystem,proto3" json:"flash_system,omitempty"`
	XXX_NoUnkeyedLiteral  struct{} `json:"-"`
	XXX_unrecognized      []byte   `json:"-"`
	XXX_sizecache         int32    `json:"-"`
}

func (m *NodeMemInfo) Reset()         { *m = NodeMemInfo{} }
func (m *NodeMemInfo) String() string { return proto.CompactTextString(m) }
func (*NodeMemInfo) ProtoMessage()    {}
func (*NodeMemInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_29c1fe844084c383, []int{1}
}

func (m *NodeMemInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NodeMemInfo.Unmarshal(m, b)
}
func (m *NodeMemInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NodeMemInfo.Marshal(b, m, deterministic)
}
func (m *NodeMemInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NodeMemInfo.Merge(m, src)
}
func (m *NodeMemInfo) XXX_Size() int {
	return xxx_messageInfo_NodeMemInfo.Size(m)
}
func (m *NodeMemInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_NodeMemInfo.DiscardUnknown(m)
}

var xxx_messageInfo_NodeMemInfo proto.InternalMessageInfo

func (m *NodeMemInfo) GetPageSize() uint32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *NodeMemInfo) GetRamMemory() uint64 {
	if m != nil {
		return m.RamMemory
	}
	return 0
}

func (m *NodeMemInfo) GetFreePhysicalMemory() uint64 {
	if m != nil {
		return m.FreePhysicalMemory
	}
	return 0
}

func (m *NodeMemInfo) GetSystemRamMemory() uint64 {
	if m != nil {
		return m.SystemRamMemory
	}
	return 0
}

func (m *NodeMemInfo) GetFreeApplicationMemory() uint64 {
	if m != nil {
		return m.FreeApplicationMemory
	}
	return 0
}

func (m *NodeMemInfo) GetImageMemory() uint64 {
	if m != nil {
		return m.ImageMemory
	}
	return 0
}

func (m *NodeMemInfo) GetBootRamSize() uint64 {
	if m != nil {
		return m.BootRamSize
	}
	return 0
}

func (m *NodeMemInfo) GetReservedMemory() uint64 {
	if m != nil {
		return m.ReservedMemory
	}
	return 0
}

func (m *NodeMemInfo) GetIoMemory() uint64 {
	if m != nil {
		return m.IoMemory
	}
	return 0
}

func (m *NodeMemInfo) GetFlashSystem() uint64 {
	if m != nil {
		return m.FlashSystem
	}
	return 0
}

func init() {
	proto.RegisterType((*NodeMemInfo_KEYS)(nil), "cisco_ios_xr_nto_misc_oper.memory_summary.nodes.node.summary.node_mem_info_KEYS")
	proto.RegisterType((*NodeMemInfo)(nil), "cisco_ios_xr_nto_misc_oper.memory_summary.nodes.node.summary.node_mem_info")
}

func init() { proto.RegisterFile("node_mem_info.proto", fileDescriptor_29c1fe844084c383) }

var fileDescriptor_29c1fe844084c383 = []byte{
	// 336 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x54, 0x92, 0x4f, 0x4b, 0xf3, 0x40,
	0x10, 0xc6, 0x09, 0xef, 0x8b, 0x34, 0xab, 0xb5, 0x18, 0x15, 0x03, 0x45, 0xa8, 0xbd, 0x58, 0x3c,
	0x04, 0xb5, 0x5a, 0xff, 0x5e, 0x3c, 0x78, 0x12, 0x45, 0xd2, 0x93, 0xa7, 0x65, 0x9b, 0x4e, 0xed,
	0x42, 0x27, 0x13, 0x76, 0xa3, 0x98, 0x7e, 0x0b, 0xbf, 0xb1, 0xec, 0x64, 0x63, 0xed, 0x25, 0x87,
	0xdf, 0xfc, 0x9e, 0x27, 0x33, 0xb0, 0x62, 0x37, 0xa7, 0x29, 0x48, 0x04, 0x94, 0x3a, 0x9f, 0x51,
	0x52, 0x18, 0x2a, 0x29, 0xba, 0xcf, 0xb4, 0xcd, 0x48, 0x6a, 0xb2, 0xf2, 0xcb, 0xc8, 0xbc, 0x24,
	0x89, 0xda, 0x66, 0x92, 0x0a, 0x30, 0x09, 0x02, 0x92, 0xa9, 0xa4, 0xfd, 0x40, 0x54, 0xa6, 0x4a,
	0x5c, 0xdc, 0xf2, 0x37, 0xf1, 0xa8, 0x7f, 0x26, 0xa2, 0xb5, 0x52, 0xf9, 0xf4, 0xf8, 0x36, 0x8e,
	0xba, 0x22, 0x64, 0x9a, 0x2b, 0x84, 0x38, 0xe8, 0x05, 0x83, 0x30, 0x6d, 0x39, 0xf0, 0xa2, 0x10,
	0xfa, 0xdf, 0xff, 0x44, 0x7b, 0x2d, 0xe3, 0xf4, 0x42, 0xbd, 0x83, 0xb4, 0x7a, 0x09, 0xf1, 0x79,
	0x2f, 0x18, 0xb4, 0xd3, 0x96, 0x03, 0x63, 0xbd, 0x84, 0xe8, 0x50, 0x08, 0xa3, 0x50, 0xd6, 0xab,
	0xc4, 0xc3, 0x5e, 0x30, 0xf8, 0x9f, 0x86, 0x46, 0xe1, 0x33, 0x83, 0xe8, 0x54, 0xec, 0xcd, 0x0c,
	0x80, 0x2c, 0xe6, 0x95, 0xd5, 0x99, 0x5a, 0x34, 0xe2, 0x05, 0x8b, 0x91, 0x9b, 0xbd, 0xfa, 0x91,
	0x4f, 0x9c, 0x88, 0x1d, 0x5b, 0xd9, 0x12, 0x50, 0xfe, 0xe9, 0xbd, 0x64, 0xbd, 0x53, 0x0f, 0xd2,
	0xdf, 0xf6, 0x91, 0x38, 0xe0, 0x76, 0x55, 0x14, 0x0b, 0x9d, 0xa9, 0x52, 0x53, 0xde, 0x24, 0x46,
	0x9c, 0xd8, 0x77, 0xe3, 0x87, 0xd5, 0xd4, 0xe7, 0x8e, 0xc4, 0x96, 0x46, 0x77, 0x92, 0x97, 0xaf,
	0x58, 0xde, 0x64, 0xe6, 0x95, 0xbe, 0x68, 0x4f, 0x88, 0x4a, 0x5e, 0x82, 0x0f, 0xbf, 0xae, 0x1d,
	0x07, 0x53, 0x85, 0x7c, 0xfb, 0xb1, 0xe8, 0x18, 0xb0, 0x60, 0x3e, 0x61, 0xda, 0x34, 0xdd, 0xb0,
	0xb5, 0xdd, 0x60, 0x5f, 0xd6, 0x15, 0xa1, 0xa6, 0x46, 0xb9, 0x65, 0xa5, 0xa5, 0x69, 0xb5, 0xcc,
	0x6c, 0xa1, 0xec, 0x5c, 0xd6, 0xd7, 0xc5, 0x77, 0xf5, 0x8f, 0x98, 0x8d, 0x19, 0x4d, 0x36, 0xf8,
	0x2d, 0x0c, 0x7f, 0x02, 0x00, 0x00, 0xff, 0xff, 0xa0, 0x2d, 0xe8, 0x0f, 0x22, 0x02, 0x00, 0x00,
}
