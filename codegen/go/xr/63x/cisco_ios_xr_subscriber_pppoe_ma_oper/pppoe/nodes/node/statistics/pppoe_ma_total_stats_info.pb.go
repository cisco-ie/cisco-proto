/*
Copyright 2019 Cisco Systems

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: pppoe_ma_total_stats_info.proto

package cisco_ios_xr_subscriber_pppoe_ma_oper_pppoe_nodes_node_statistics

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type PppoeMaTotalStatsInfo_KEYS struct {
	NodeName             string   `protobuf:"bytes,1,opt,name=node_name,json=nodeName,proto3" json:"node_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PppoeMaTotalStatsInfo_KEYS) Reset()         { *m = PppoeMaTotalStatsInfo_KEYS{} }
func (m *PppoeMaTotalStatsInfo_KEYS) String() string { return proto.CompactTextString(m) }
func (*PppoeMaTotalStatsInfo_KEYS) ProtoMessage()    {}
func (*PppoeMaTotalStatsInfo_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_e6571118dc7dee35, []int{0}
}

func (m *PppoeMaTotalStatsInfo_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PppoeMaTotalStatsInfo_KEYS.Unmarshal(m, b)
}
func (m *PppoeMaTotalStatsInfo_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PppoeMaTotalStatsInfo_KEYS.Marshal(b, m, deterministic)
}
func (m *PppoeMaTotalStatsInfo_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PppoeMaTotalStatsInfo_KEYS.Merge(m, src)
}
func (m *PppoeMaTotalStatsInfo_KEYS) XXX_Size() int {
	return xxx_messageInfo_PppoeMaTotalStatsInfo_KEYS.Size(m)
}
func (m *PppoeMaTotalStatsInfo_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_PppoeMaTotalStatsInfo_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_PppoeMaTotalStatsInfo_KEYS proto.InternalMessageInfo

func (m *PppoeMaTotalStatsInfo_KEYS) GetNodeName() string {
	if m != nil {
		return m.NodeName
	}
	return ""
}

type PppoeMaPacketTypeCounts struct {
	Sent                 uint32   `protobuf:"varint,1,opt,name=sent,proto3" json:"sent,omitempty"`
	Received             uint32   `protobuf:"varint,2,opt,name=received,proto3" json:"received,omitempty"`
	Dropped              uint32   `protobuf:"varint,3,opt,name=dropped,proto3" json:"dropped,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PppoeMaPacketTypeCounts) Reset()         { *m = PppoeMaPacketTypeCounts{} }
func (m *PppoeMaPacketTypeCounts) String() string { return proto.CompactTextString(m) }
func (*PppoeMaPacketTypeCounts) ProtoMessage()    {}
func (*PppoeMaPacketTypeCounts) Descriptor() ([]byte, []int) {
	return fileDescriptor_e6571118dc7dee35, []int{1}
}

func (m *PppoeMaPacketTypeCounts) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PppoeMaPacketTypeCounts.Unmarshal(m, b)
}
func (m *PppoeMaPacketTypeCounts) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PppoeMaPacketTypeCounts.Marshal(b, m, deterministic)
}
func (m *PppoeMaPacketTypeCounts) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PppoeMaPacketTypeCounts.Merge(m, src)
}
func (m *PppoeMaPacketTypeCounts) XXX_Size() int {
	return xxx_messageInfo_PppoeMaPacketTypeCounts.Size(m)
}
func (m *PppoeMaPacketTypeCounts) XXX_DiscardUnknown() {
	xxx_messageInfo_PppoeMaPacketTypeCounts.DiscardUnknown(m)
}

var xxx_messageInfo_PppoeMaPacketTypeCounts proto.InternalMessageInfo

func (m *PppoeMaPacketTypeCounts) GetSent() uint32 {
	if m != nil {
		return m.Sent
	}
	return 0
}

func (m *PppoeMaPacketTypeCounts) GetReceived() uint32 {
	if m != nil {
		return m.Received
	}
	return 0
}

func (m *PppoeMaPacketTypeCounts) GetDropped() uint32 {
	if m != nil {
		return m.Dropped
	}
	return 0
}

type PppoeMaPacketCounts struct {
	Padi                 *PppoeMaPacketTypeCounts `protobuf:"bytes,1,opt,name=padi,proto3" json:"padi,omitempty"`
	Pado                 *PppoeMaPacketTypeCounts `protobuf:"bytes,2,opt,name=pado,proto3" json:"pado,omitempty"`
	Padr                 *PppoeMaPacketTypeCounts `protobuf:"bytes,3,opt,name=padr,proto3" json:"padr,omitempty"`
	PadsSuccess          *PppoeMaPacketTypeCounts `protobuf:"bytes,4,opt,name=pads_success,json=padsSuccess,proto3" json:"pads_success,omitempty"`
	PadsError            *PppoeMaPacketTypeCounts `protobuf:"bytes,5,opt,name=pads_error,json=padsError,proto3" json:"pads_error,omitempty"`
	Padt                 *PppoeMaPacketTypeCounts `protobuf:"bytes,6,opt,name=padt,proto3" json:"padt,omitempty"`
	SessionState         *PppoeMaPacketTypeCounts `protobuf:"bytes,7,opt,name=session_state,json=sessionState,proto3" json:"session_state,omitempty"`
	Other                *PppoeMaPacketTypeCounts `protobuf:"bytes,8,opt,name=other,proto3" json:"other,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *PppoeMaPacketCounts) Reset()         { *m = PppoeMaPacketCounts{} }
func (m *PppoeMaPacketCounts) String() string { return proto.CompactTextString(m) }
func (*PppoeMaPacketCounts) ProtoMessage()    {}
func (*PppoeMaPacketCounts) Descriptor() ([]byte, []int) {
	return fileDescriptor_e6571118dc7dee35, []int{2}
}

func (m *PppoeMaPacketCounts) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PppoeMaPacketCounts.Unmarshal(m, b)
}
func (m *PppoeMaPacketCounts) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PppoeMaPacketCounts.Marshal(b, m, deterministic)
}
func (m *PppoeMaPacketCounts) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PppoeMaPacketCounts.Merge(m, src)
}
func (m *PppoeMaPacketCounts) XXX_Size() int {
	return xxx_messageInfo_PppoeMaPacketCounts.Size(m)
}
func (m *PppoeMaPacketCounts) XXX_DiscardUnknown() {
	xxx_messageInfo_PppoeMaPacketCounts.DiscardUnknown(m)
}

var xxx_messageInfo_PppoeMaPacketCounts proto.InternalMessageInfo

func (m *PppoeMaPacketCounts) GetPadi() *PppoeMaPacketTypeCounts {
	if m != nil {
		return m.Padi
	}
	return nil
}

func (m *PppoeMaPacketCounts) GetPado() *PppoeMaPacketTypeCounts {
	if m != nil {
		return m.Pado
	}
	return nil
}

func (m *PppoeMaPacketCounts) GetPadr() *PppoeMaPacketTypeCounts {
	if m != nil {
		return m.Padr
	}
	return nil
}

func (m *PppoeMaPacketCounts) GetPadsSuccess() *PppoeMaPacketTypeCounts {
	if m != nil {
		return m.PadsSuccess
	}
	return nil
}

func (m *PppoeMaPacketCounts) GetPadsError() *PppoeMaPacketTypeCounts {
	if m != nil {
		return m.PadsError
	}
	return nil
}

func (m *PppoeMaPacketCounts) GetPadt() *PppoeMaPacketTypeCounts {
	if m != nil {
		return m.Padt
	}
	return nil
}

func (m *PppoeMaPacketCounts) GetSessionState() *PppoeMaPacketTypeCounts {
	if m != nil {
		return m.SessionState
	}
	return nil
}

func (m *PppoeMaPacketCounts) GetOther() *PppoeMaPacketTypeCounts {
	if m != nil {
		return m.Other
	}
	return nil
}

type PppoeMaPacketErrorCounts struct {
	NoInterfaceHandle                   uint32   `protobuf:"varint,1,opt,name=no_interface_handle,json=noInterfaceHandle,proto3" json:"no_interface_handle,omitempty"`
	NoPacketPayload                     uint32   `protobuf:"varint,2,opt,name=no_packet_payload,json=noPacketPayload,proto3" json:"no_packet_payload,omitempty"`
	NoPacketMacAddress                  uint32   `protobuf:"varint,3,opt,name=no_packet_mac_address,json=noPacketMacAddress,proto3" json:"no_packet_mac_address,omitempty"`
	InvalidVersionTypeValue             uint32   `protobuf:"varint,4,opt,name=invalid_version_type_value,json=invalidVersionTypeValue,proto3" json:"invalid_version_type_value,omitempty"`
	BadPacketLength                     uint32   `protobuf:"varint,5,opt,name=bad_packet_length,json=badPacketLength,proto3" json:"bad_packet_length,omitempty"`
	UnknownInterface                    uint32   `protobuf:"varint,6,opt,name=unknown_interface,json=unknownInterface,proto3" json:"unknown_interface,omitempty"`
	PadoReceived                        uint32   `protobuf:"varint,7,opt,name=pado_received,json=padoReceived,proto3" json:"pado_received,omitempty"`
	PadsReceived                        uint32   `protobuf:"varint,8,opt,name=pads_received,json=padsReceived,proto3" json:"pads_received,omitempty"`
	UnknownPacketTypeReceived           uint32   `protobuf:"varint,9,opt,name=unknown_packet_type_received,json=unknownPacketTypeReceived,proto3" json:"unknown_packet_type_received,omitempty"`
	UnexpectedSessionIdInPacket         uint32   `protobuf:"varint,10,opt,name=unexpected_session_id_in_packet,json=unexpectedSessionIdInPacket,proto3" json:"unexpected_session_id_in_packet,omitempty"`
	NoServiceNameTag                    uint32   `protobuf:"varint,11,opt,name=no_service_name_tag,json=noServiceNameTag,proto3" json:"no_service_name_tag,omitempty"`
	PadtForUnknownSession               uint32   `protobuf:"varint,12,opt,name=padt_for_unknown_session,json=padtForUnknownSession,proto3" json:"padt_for_unknown_session,omitempty"`
	PadtWithWrongPeerMac                uint32   `protobuf:"varint,13,opt,name=padt_with_wrong_peer_mac,json=padtWithWrongPeerMac,proto3" json:"padt_with_wrong_peer_mac,omitempty"`
	PadtWithWrongVlanTags               uint32   `protobuf:"varint,14,opt,name=padt_with_wrong_vlan_tags,json=padtWithWrongVlanTags,proto3" json:"padt_with_wrong_vlan_tags,omitempty"`
	ZeroLengthHostUniq                  uint32   `protobuf:"varint,15,opt,name=zero_length_host_uniq,json=zeroLengthHostUniq,proto3" json:"zero_length_host_uniq,omitempty"`
	PadtBeforePadsSent                  uint32   `protobuf:"varint,16,opt,name=padt_before_pads_sent,json=padtBeforePadsSent,proto3" json:"padt_before_pads_sent,omitempty"`
	SessionStagePacketForUnknownSession uint32   `protobuf:"varint,17,opt,name=session_stage_packet_for_unknown_session,json=sessionStagePacketForUnknownSession,proto3" json:"session_stage_packet_for_unknown_session,omitempty"`
	SessionStagePacketWithWrongMac      uint32   `protobuf:"varint,18,opt,name=session_stage_packet_with_wrong_mac,json=sessionStagePacketWithWrongMac,proto3" json:"session_stage_packet_with_wrong_mac,omitempty"`
	SessionStagePacketWithWrongVlanTags uint32   `protobuf:"varint,19,opt,name=session_stage_packet_with_wrong_vlan_tags,json=sessionStagePacketWithWrongVlanTags,proto3" json:"session_stage_packet_with_wrong_vlan_tags,omitempty"`
	SessionStagePacketWithNoError       uint32   `protobuf:"varint,20,opt,name=session_stage_packet_with_no_error,json=sessionStagePacketWithNoError,proto3" json:"session_stage_packet_with_no_error,omitempty"`
	TagTooShort                         uint32   `protobuf:"varint,21,opt,name=tag_too_short,json=tagTooShort,proto3" json:"tag_too_short,omitempty"`
	BadTagLengthField                   uint32   `protobuf:"varint,22,opt,name=bad_tag_length_field,json=badTagLengthField,proto3" json:"bad_tag_length_field,omitempty"`
	MultipleServiceNameTags             uint32   `protobuf:"varint,23,opt,name=multiple_service_name_tags,json=multipleServiceNameTags,proto3" json:"multiple_service_name_tags,omitempty"`
	MultipleMaxPayloadTags              uint32   `protobuf:"varint,24,opt,name=multiple_max_payload_tags,json=multipleMaxPayloadTags,proto3" json:"multiple_max_payload_tags,omitempty"`
	InvalidMaxPayloadTag                uint32   `protobuf:"varint,25,opt,name=invalid_max_payload_tag,json=invalidMaxPayloadTag,proto3" json:"invalid_max_payload_tag,omitempty"`
	MultipleVendorSpecificTags          uint32   `protobuf:"varint,26,opt,name=multiple_vendor_specific_tags,json=multipleVendorSpecificTags,proto3" json:"multiple_vendor_specific_tags,omitempty"`
	UnexpectedAcNameTag                 uint32   `protobuf:"varint,27,opt,name=unexpected_ac_name_tag,json=unexpectedAcNameTag,proto3" json:"unexpected_ac_name_tag,omitempty"`
	UnexpectedErrorTags                 uint32   `protobuf:"varint,28,opt,name=unexpected_error_tags,json=unexpectedErrorTags,proto3" json:"unexpected_error_tags,omitempty"`
	UnknownTagReceived                  uint32   `protobuf:"varint,29,opt,name=unknown_tag_received,json=unknownTagReceived,proto3" json:"unknown_tag_received,omitempty"`
	NoIanaCodeInvendorTag               uint32   `protobuf:"varint,30,opt,name=no_iana_code_invendor_tag,json=noIanaCodeInvendorTag,proto3" json:"no_iana_code_invendor_tag,omitempty"`
	InvalidIanaCodeInvendorTag          uint32   `protobuf:"varint,31,opt,name=invalid_iana_code_invendor_tag,json=invalidIanaCodeInvendorTag,proto3" json:"invalid_iana_code_invendor_tag,omitempty"`
	VendorTagTooShort                   uint32   `protobuf:"varint,32,opt,name=vendor_tag_too_short,json=vendorTagTooShort,proto3" json:"vendor_tag_too_short,omitempty"`
	BadVendorTagLengthField             uint32   `protobuf:"varint,33,opt,name=bad_vendor_tag_length_field,json=badVendorTagLengthField,proto3" json:"bad_vendor_tag_length_field,omitempty"`
	MultipleHostUniqTags                uint32   `protobuf:"varint,34,opt,name=multiple_host_uniq_tags,json=multipleHostUniqTags,proto3" json:"multiple_host_uniq_tags,omitempty"`
	MultipleRelaySessionIdTags          uint32   `protobuf:"varint,35,opt,name=multiple_relay_session_id_tags,json=multipleRelaySessionIdTags,proto3" json:"multiple_relay_session_id_tags,omitempty"`
	MultipleCircuitIdTags               uint32   `protobuf:"varint,36,opt,name=multiple_circuit_id_tags,json=multipleCircuitIdTags,proto3" json:"multiple_circuit_id_tags,omitempty"`
	MultipleRemoteIdTags                uint32   `protobuf:"varint,37,opt,name=multiple_remote_id_tags,json=multipleRemoteIdTags,proto3" json:"multiple_remote_id_tags,omitempty"`
	InvalidDslTag                       uint32   `protobuf:"varint,38,opt,name=invalid_dsl_tag,json=invalidDslTag,proto3" json:"invalid_dsl_tag,omitempty"`
	MultipleOfTheSameDslTag             uint32   `protobuf:"varint,39,opt,name=multiple_of_the_same_dsl_tag,json=multipleOfTheSameDslTag,proto3" json:"multiple_of_the_same_dsl_tag,omitempty"`
	InvalidIwfTag                       uint32   `protobuf:"varint,40,opt,name=invalid_iwf_tag,json=invalidIwfTag,proto3" json:"invalid_iwf_tag,omitempty"`
	MultipleIwfTags                     uint32   `protobuf:"varint,41,opt,name=multiple_iwf_tags,json=multipleIwfTags,proto3" json:"multiple_iwf_tags,omitempty"`
	UnknownvendorTag                    uint32   `protobuf:"varint,42,opt,name=unknownvendor_tag,json=unknownvendorTag,proto3" json:"unknownvendor_tag,omitempty"`
	NoSpaceLeftInPacket                 uint32   `protobuf:"varint,43,opt,name=no_space_left_in_packet,json=noSpaceLeftInPacket,proto3" json:"no_space_left_in_packet,omitempty"`
	DuplicateHostUniqTagReceived        uint32   `protobuf:"varint,44,opt,name=duplicate_host_uniq_tag_received,json=duplicateHostUniqTagReceived,proto3" json:"duplicate_host_uniq_tag_received,omitempty"`
	DuplicateRelaySessionIdTagReceived  uint32   `protobuf:"varint,45,opt,name=duplicate_relay_session_id_tag_received,json=duplicateRelaySessionIdTagReceived,proto3" json:"duplicate_relay_session_id_tag_received,omitempty"`
	PacketTooLong                       uint32   `protobuf:"varint,46,opt,name=packet_too_long,json=packetTooLong,proto3" json:"packet_too_long,omitempty"`
	InvalidAleTag                       uint32   `protobuf:"varint,47,opt,name=invalid_ale_tag,json=invalidAleTag,proto3" json:"invalid_ale_tag,omitempty"`
	MultipleAleTags                     uint32   `protobuf:"varint,48,opt,name=multiple_ale_tags,json=multipleAleTags,proto3" json:"multiple_ale_tags,omitempty"`
	InvalidServiceName                  uint32   `protobuf:"varint,49,opt,name=invalid_service_name,json=invalidServiceName,proto3" json:"invalid_service_name,omitempty"`
	InvalidPeerMac                      uint32   `protobuf:"varint,50,opt,name=invalid_peer_mac,json=invalidPeerMac,proto3" json:"invalid_peer_mac,omitempty"`
	InvalidVlanTags                     uint32   `protobuf:"varint,51,opt,name=invalid_vlan_tags,json=invalidVlanTags,proto3" json:"invalid_vlan_tags,omitempty"`
	PacketOnSrgSlave                    uint32   `protobuf:"varint,52,opt,name=packet_on_srg_slave,json=packetOnSrgSlave,proto3" json:"packet_on_srg_slave,omitempty"`
	XXX_NoUnkeyedLiteral                struct{} `json:"-"`
	XXX_unrecognized                    []byte   `json:"-"`
	XXX_sizecache                       int32    `json:"-"`
}

func (m *PppoeMaPacketErrorCounts) Reset()         { *m = PppoeMaPacketErrorCounts{} }
func (m *PppoeMaPacketErrorCounts) String() string { return proto.CompactTextString(m) }
func (*PppoeMaPacketErrorCounts) ProtoMessage()    {}
func (*PppoeMaPacketErrorCounts) Descriptor() ([]byte, []int) {
	return fileDescriptor_e6571118dc7dee35, []int{3}
}

func (m *PppoeMaPacketErrorCounts) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PppoeMaPacketErrorCounts.Unmarshal(m, b)
}
func (m *PppoeMaPacketErrorCounts) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PppoeMaPacketErrorCounts.Marshal(b, m, deterministic)
}
func (m *PppoeMaPacketErrorCounts) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PppoeMaPacketErrorCounts.Merge(m, src)
}
func (m *PppoeMaPacketErrorCounts) XXX_Size() int {
	return xxx_messageInfo_PppoeMaPacketErrorCounts.Size(m)
}
func (m *PppoeMaPacketErrorCounts) XXX_DiscardUnknown() {
	xxx_messageInfo_PppoeMaPacketErrorCounts.DiscardUnknown(m)
}

var xxx_messageInfo_PppoeMaPacketErrorCounts proto.InternalMessageInfo

func (m *PppoeMaPacketErrorCounts) GetNoInterfaceHandle() uint32 {
	if m != nil {
		return m.NoInterfaceHandle
	}
	return 0
}

func (m *PppoeMaPacketErrorCounts) GetNoPacketPayload() uint32 {
	if m != nil {
		return m.NoPacketPayload
	}
	return 0
}

func (m *PppoeMaPacketErrorCounts) GetNoPacketMacAddress() uint32 {
	if m != nil {
		return m.NoPacketMacAddress
	}
	return 0
}

func (m *PppoeMaPacketErrorCounts) GetInvalidVersionTypeValue() uint32 {
	if m != nil {
		return m.InvalidVersionTypeValue
	}
	return 0
}

func (m *PppoeMaPacketErrorCounts) GetBadPacketLength() uint32 {
	if m != nil {
		return m.BadPacketLength
	}
	return 0
}

func (m *PppoeMaPacketErrorCounts) GetUnknownInterface() uint32 {
	if m != nil {
		return m.UnknownInterface
	}
	return 0
}

func (m *PppoeMaPacketErrorCounts) GetPadoReceived() uint32 {
	if m != nil {
		return m.PadoReceived
	}
	return 0
}

func (m *PppoeMaPacketErrorCounts) GetPadsReceived() uint32 {
	if m != nil {
		return m.PadsReceived
	}
	return 0
}

func (m *PppoeMaPacketErrorCounts) GetUnknownPacketTypeReceived() uint32 {
	if m != nil {
		return m.UnknownPacketTypeReceived
	}
	return 0
}

func (m *PppoeMaPacketErrorCounts) GetUnexpectedSessionIdInPacket() uint32 {
	if m != nil {
		return m.UnexpectedSessionIdInPacket
	}
	return 0
}

func (m *PppoeMaPacketErrorCounts) GetNoServiceNameTag() uint32 {
	if m != nil {
		return m.NoServiceNameTag
	}
	return 0
}

func (m *PppoeMaPacketErrorCounts) GetPadtForUnknownSession() uint32 {
	if m != nil {
		return m.PadtForUnknownSession
	}
	return 0
}

func (m *PppoeMaPacketErrorCounts) GetPadtWithWrongPeerMac() uint32 {
	if m != nil {
		return m.PadtWithWrongPeerMac
	}
	return 0
}

func (m *PppoeMaPacketErrorCounts) GetPadtWithWrongVlanTags() uint32 {
	if m != nil {
		return m.PadtWithWrongVlanTags
	}
	return 0
}

func (m *PppoeMaPacketErrorCounts) GetZeroLengthHostUniq() uint32 {
	if m != nil {
		return m.ZeroLengthHostUniq
	}
	return 0
}

func (m *PppoeMaPacketErrorCounts) GetPadtBeforePadsSent() uint32 {
	if m != nil {
		return m.PadtBeforePadsSent
	}
	return 0
}

func (m *PppoeMaPacketErrorCounts) GetSessionStagePacketForUnknownSession() uint32 {
	if m != nil {
		return m.SessionStagePacketForUnknownSession
	}
	return 0
}

func (m *PppoeMaPacketErrorCounts) GetSessionStagePacketWithWrongMac() uint32 {
	if m != nil {
		return m.SessionStagePacketWithWrongMac
	}
	return 0
}

func (m *PppoeMaPacketErrorCounts) GetSessionStagePacketWithWrongVlanTags() uint32 {
	if m != nil {
		return m.SessionStagePacketWithWrongVlanTags
	}
	return 0
}

func (m *PppoeMaPacketErrorCounts) GetSessionStagePacketWithNoError() uint32 {
	if m != nil {
		return m.SessionStagePacketWithNoError
	}
	return 0
}

func (m *PppoeMaPacketErrorCounts) GetTagTooShort() uint32 {
	if m != nil {
		return m.TagTooShort
	}
	return 0
}

func (m *PppoeMaPacketErrorCounts) GetBadTagLengthField() uint32 {
	if m != nil {
		return m.BadTagLengthField
	}
	return 0
}

func (m *PppoeMaPacketErrorCounts) GetMultipleServiceNameTags() uint32 {
	if m != nil {
		return m.MultipleServiceNameTags
	}
	return 0
}

func (m *PppoeMaPacketErrorCounts) GetMultipleMaxPayloadTags() uint32 {
	if m != nil {
		return m.MultipleMaxPayloadTags
	}
	return 0
}

func (m *PppoeMaPacketErrorCounts) GetInvalidMaxPayloadTag() uint32 {
	if m != nil {
		return m.InvalidMaxPayloadTag
	}
	return 0
}

func (m *PppoeMaPacketErrorCounts) GetMultipleVendorSpecificTags() uint32 {
	if m != nil {
		return m.MultipleVendorSpecificTags
	}
	return 0
}

func (m *PppoeMaPacketErrorCounts) GetUnexpectedAcNameTag() uint32 {
	if m != nil {
		return m.UnexpectedAcNameTag
	}
	return 0
}

func (m *PppoeMaPacketErrorCounts) GetUnexpectedErrorTags() uint32 {
	if m != nil {
		return m.UnexpectedErrorTags
	}
	return 0
}

func (m *PppoeMaPacketErrorCounts) GetUnknownTagReceived() uint32 {
	if m != nil {
		return m.UnknownTagReceived
	}
	return 0
}

func (m *PppoeMaPacketErrorCounts) GetNoIanaCodeInvendorTag() uint32 {
	if m != nil {
		return m.NoIanaCodeInvendorTag
	}
	return 0
}

func (m *PppoeMaPacketErrorCounts) GetInvalidIanaCodeInvendorTag() uint32 {
	if m != nil {
		return m.InvalidIanaCodeInvendorTag
	}
	return 0
}

func (m *PppoeMaPacketErrorCounts) GetVendorTagTooShort() uint32 {
	if m != nil {
		return m.VendorTagTooShort
	}
	return 0
}

func (m *PppoeMaPacketErrorCounts) GetBadVendorTagLengthField() uint32 {
	if m != nil {
		return m.BadVendorTagLengthField
	}
	return 0
}

func (m *PppoeMaPacketErrorCounts) GetMultipleHostUniqTags() uint32 {
	if m != nil {
		return m.MultipleHostUniqTags
	}
	return 0
}

func (m *PppoeMaPacketErrorCounts) GetMultipleRelaySessionIdTags() uint32 {
	if m != nil {
		return m.MultipleRelaySessionIdTags
	}
	return 0
}

func (m *PppoeMaPacketErrorCounts) GetMultipleCircuitIdTags() uint32 {
	if m != nil {
		return m.MultipleCircuitIdTags
	}
	return 0
}

func (m *PppoeMaPacketErrorCounts) GetMultipleRemoteIdTags() uint32 {
	if m != nil {
		return m.MultipleRemoteIdTags
	}
	return 0
}

func (m *PppoeMaPacketErrorCounts) GetInvalidDslTag() uint32 {
	if m != nil {
		return m.InvalidDslTag
	}
	return 0
}

func (m *PppoeMaPacketErrorCounts) GetMultipleOfTheSameDslTag() uint32 {
	if m != nil {
		return m.MultipleOfTheSameDslTag
	}
	return 0
}

func (m *PppoeMaPacketErrorCounts) GetInvalidIwfTag() uint32 {
	if m != nil {
		return m.InvalidIwfTag
	}
	return 0
}

func (m *PppoeMaPacketErrorCounts) GetMultipleIwfTags() uint32 {
	if m != nil {
		return m.MultipleIwfTags
	}
	return 0
}

func (m *PppoeMaPacketErrorCounts) GetUnknownvendorTag() uint32 {
	if m != nil {
		return m.UnknownvendorTag
	}
	return 0
}

func (m *PppoeMaPacketErrorCounts) GetNoSpaceLeftInPacket() uint32 {
	if m != nil {
		return m.NoSpaceLeftInPacket
	}
	return 0
}

func (m *PppoeMaPacketErrorCounts) GetDuplicateHostUniqTagReceived() uint32 {
	if m != nil {
		return m.DuplicateHostUniqTagReceived
	}
	return 0
}

func (m *PppoeMaPacketErrorCounts) GetDuplicateRelaySessionIdTagReceived() uint32 {
	if m != nil {
		return m.DuplicateRelaySessionIdTagReceived
	}
	return 0
}

func (m *PppoeMaPacketErrorCounts) GetPacketTooLong() uint32 {
	if m != nil {
		return m.PacketTooLong
	}
	return 0
}

func (m *PppoeMaPacketErrorCounts) GetInvalidAleTag() uint32 {
	if m != nil {
		return m.InvalidAleTag
	}
	return 0
}

func (m *PppoeMaPacketErrorCounts) GetMultipleAleTags() uint32 {
	if m != nil {
		return m.MultipleAleTags
	}
	return 0
}

func (m *PppoeMaPacketErrorCounts) GetInvalidServiceName() uint32 {
	if m != nil {
		return m.InvalidServiceName
	}
	return 0
}

func (m *PppoeMaPacketErrorCounts) GetInvalidPeerMac() uint32 {
	if m != nil {
		return m.InvalidPeerMac
	}
	return 0
}

func (m *PppoeMaPacketErrorCounts) GetInvalidVlanTags() uint32 {
	if m != nil {
		return m.InvalidVlanTags
	}
	return 0
}

func (m *PppoeMaPacketErrorCounts) GetPacketOnSrgSlave() uint32 {
	if m != nil {
		return m.PacketOnSrgSlave
	}
	return 0
}

type PppoeMaTotalStatsInfo struct {
	PacketCounts         *PppoeMaPacketCounts      `protobuf:"bytes,50,opt,name=packet_counts,json=packetCounts,proto3" json:"packet_counts,omitempty"`
	PacketErrorCounts    *PppoeMaPacketErrorCounts `protobuf:"bytes,51,opt,name=packet_error_counts,json=packetErrorCounts,proto3" json:"packet_error_counts,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *PppoeMaTotalStatsInfo) Reset()         { *m = PppoeMaTotalStatsInfo{} }
func (m *PppoeMaTotalStatsInfo) String() string { return proto.CompactTextString(m) }
func (*PppoeMaTotalStatsInfo) ProtoMessage()    {}
func (*PppoeMaTotalStatsInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_e6571118dc7dee35, []int{4}
}

func (m *PppoeMaTotalStatsInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PppoeMaTotalStatsInfo.Unmarshal(m, b)
}
func (m *PppoeMaTotalStatsInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PppoeMaTotalStatsInfo.Marshal(b, m, deterministic)
}
func (m *PppoeMaTotalStatsInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PppoeMaTotalStatsInfo.Merge(m, src)
}
func (m *PppoeMaTotalStatsInfo) XXX_Size() int {
	return xxx_messageInfo_PppoeMaTotalStatsInfo.Size(m)
}
func (m *PppoeMaTotalStatsInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_PppoeMaTotalStatsInfo.DiscardUnknown(m)
}

var xxx_messageInfo_PppoeMaTotalStatsInfo proto.InternalMessageInfo

func (m *PppoeMaTotalStatsInfo) GetPacketCounts() *PppoeMaPacketCounts {
	if m != nil {
		return m.PacketCounts
	}
	return nil
}

func (m *PppoeMaTotalStatsInfo) GetPacketErrorCounts() *PppoeMaPacketErrorCounts {
	if m != nil {
		return m.PacketErrorCounts
	}
	return nil
}

func init() {
	proto.RegisterType((*PppoeMaTotalStatsInfo_KEYS)(nil), "cisco_ios_xr_subscriber_pppoe_ma_oper.pppoe.nodes.node.statistics.pppoe_ma_total_stats_info_KEYS")
	proto.RegisterType((*PppoeMaPacketTypeCounts)(nil), "cisco_ios_xr_subscriber_pppoe_ma_oper.pppoe.nodes.node.statistics.pppoe_ma_packet_type_counts")
	proto.RegisterType((*PppoeMaPacketCounts)(nil), "cisco_ios_xr_subscriber_pppoe_ma_oper.pppoe.nodes.node.statistics.pppoe_ma_packet_counts")
	proto.RegisterType((*PppoeMaPacketErrorCounts)(nil), "cisco_ios_xr_subscriber_pppoe_ma_oper.pppoe.nodes.node.statistics.pppoe_ma_packet_error_counts")
	proto.RegisterType((*PppoeMaTotalStatsInfo)(nil), "cisco_ios_xr_subscriber_pppoe_ma_oper.pppoe.nodes.node.statistics.pppoe_ma_total_stats_info")
}

func init() { proto.RegisterFile("pppoe_ma_total_stats_info.proto", fileDescriptor_e6571118dc7dee35) }

var fileDescriptor_e6571118dc7dee35 = []byte{
	// 1497 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x58, 0xed, 0x6e, 0x13, 0x47,
	0x17, 0x56, 0x78, 0x81, 0x24, 0x13, 0x4c, 0xf0, 0xe6, 0x83, 0x0d, 0x09, 0x81, 0xd7, 0x79, 0x5f,
	0x08, 0xa1, 0x18, 0x08, 0x50, 0xa8, 0x5a, 0x54, 0x85, 0x2f, 0x61, 0xf1, 0x15, 0xd9, 0x26, 0x88,
	0x3f, 0x1d, 0x8d, 0x77, 0xc7, 0xeb, 0x15, 0xeb, 0x99, 0x65, 0x66, 0xec, 0x24, 0x95, 0x5a, 0xa9,
	0xea, 0x05, 0xf4, 0x4a, 0x7a, 0x15, 0xbd, 0x98, 0xde, 0x46, 0x35, 0x67, 0x3e, 0x76, 0xed, 0x24,
	0xed, 0x8f, 0x0a, 0xff, 0x41, 0xec, 0x9c, 0xf3, 0x9c, 0x67, 0xe6, 0xcc, 0x73, 0xce, 0x19, 0x07,
	0x5d, 0xc9, 0xf3, 0x9c, 0x53, 0xdc, 0x27, 0x58, 0x71, 0x45, 0x32, 0x2c, 0x15, 0x51, 0x12, 0xa7,
	0xac, 0xcb, 0xeb, 0xb9, 0xe0, 0x8a, 0x07, 0x3b, 0x51, 0x2a, 0x23, 0x8e, 0x53, 0x2e, 0xf1, 0x81,
	0xc0, 0x72, 0xd0, 0x91, 0x91, 0x48, 0x3b, 0x54, 0x60, 0x0f, 0xe4, 0x39, 0x15, 0x75, 0xf8, 0xaa,
	0x33, 0x1e, 0x53, 0x09, 0xff, 0xd6, 0x75, 0xa0, 0x54, 0xaa, 0x34, 0x92, 0xb5, 0xc7, 0x68, 0xfd,
	0x44, 0x16, 0xfc, 0xea, 0xf9, 0xc7, 0x56, 0xb0, 0x8a, 0x66, 0x35, 0x08, 0x33, 0xd2, 0xa7, 0xe1,
	0xd4, 0xd5, 0xa9, 0xcd, 0xd9, 0xe6, 0x8c, 0x5e, 0x78, 0x4b, 0xfa, 0xb4, 0x96, 0xa0, 0x55, 0x0f,
	0xcf, 0x49, 0xf4, 0x89, 0x2a, 0xac, 0x0e, 0x73, 0x8a, 0x23, 0x3e, 0x60, 0x4a, 0x06, 0x01, 0x3a,
	0x2d, 0x29, 0x53, 0x00, 0xab, 0x34, 0xe1, 0xff, 0xc1, 0x25, 0x34, 0x23, 0x68, 0x44, 0xd3, 0x21,
	0x8d, 0xc3, 0x53, 0xb0, 0xee, 0xbf, 0x83, 0x10, 0x4d, 0xc7, 0x82, 0xe7, 0x39, 0x8d, 0xc3, 0xff,
	0x80, 0xc9, 0x7d, 0xd6, 0xfe, 0x9c, 0x46, 0xcb, 0xe3, 0x4c, 0x96, 0x44, 0xa0, 0xd3, 0x39, 0x89,
	0x53, 0x20, 0x99, 0xdb, 0xfe, 0xa1, 0xfe, 0xaf, 0x93, 0x52, 0xff, 0x9b, 0x23, 0x35, 0x81, 0xcb,
	0x72, 0x72, 0x38, 0xc0, 0x64, 0x38, 0xb9, 0xe5, 0x14, 0x90, 0x99, 0xc9, 0x70, 0x8a, 0xe0, 0x97,
	0x29, 0x74, 0x2e, 0x27, 0xb1, 0xc4, 0x72, 0x10, 0x45, 0x54, 0xca, 0xf0, 0xf4, 0x44, 0xc8, 0xe7,
	0x34, 0x67, 0xcb, 0x50, 0x06, 0x3f, 0x21, 0x04, 0x5b, 0xa0, 0x42, 0x70, 0x11, 0x9e, 0x99, 0xc8,
	0x06, 0x66, 0x35, 0xe3, 0x73, 0x4d, 0x68, 0xd3, 0xae, 0xc2, 0xb3, 0x13, 0x4b, 0xbb, 0x0a, 0x7e,
	0x9d, 0x42, 0x15, 0x49, 0xa5, 0x4c, 0x39, 0x83, 0x7a, 0xa4, 0xe1, 0xf4, 0x44, 0xd8, 0xcf, 0x59,
	0xd2, 0x96, 0xe6, 0x0c, 0x14, 0x3a, 0xc3, 0x55, 0x8f, 0x8a, 0x70, 0x66, 0x22, 0xe4, 0x86, 0xac,
	0xf6, 0xc7, 0x32, 0x5a, 0x1b, 0x77, 0x83, 0xab, 0x77, 0xf5, 0x5e, 0x47, 0x0b, 0x8c, 0xe3, 0x94,
	0x29, 0x2a, 0xba, 0x24, 0xa2, 0xb8, 0x47, 0x58, 0x9c, 0x51, 0xdb, 0x63, 0xaa, 0x8c, 0x37, 0x9c,
	0xe5, 0x25, 0x18, 0x82, 0x2d, 0x54, 0x65, 0xdc, 0x45, 0xca, 0xc9, 0x61, 0xc6, 0x89, 0xeb, 0x3c,
	0xf3, 0x8c, 0xef, 0xc2, 0xfa, 0xae, 0x59, 0x0e, 0xee, 0xa2, 0xa5, 0xc2, 0xb7, 0x4f, 0x22, 0x4c,
	0xe2, 0x58, 0x68, 0xdd, 0x9b, 0x76, 0x14, 0x38, 0xff, 0x37, 0x24, 0xda, 0x31, 0x96, 0xe0, 0x5b,
	0x74, 0x29, 0x65, 0x43, 0x92, 0xa5, 0x31, 0x1e, 0x52, 0x01, 0x57, 0x06, 0xa7, 0x1a, 0x92, 0x6c,
	0x40, 0xa1, 0x5e, 0x2a, 0xcd, 0x8b, 0xd6, 0x63, 0xcf, 0x38, 0xb4, 0x0f, 0x73, 0xba, 0xa7, 0xcd,
	0x7a, 0x6f, 0x1d, 0x12, 0x3b, 0xc2, 0x8c, 0xb2, 0x44, 0xf5, 0x40, 0xe2, 0x95, 0xe6, 0x7c, 0x87,
	0xc4, 0x86, 0xec, 0x35, 0x2c, 0x07, 0x37, 0x51, 0x75, 0xc0, 0x3e, 0x31, 0xbe, 0xcf, 0x8a, 0xc3,
	0x83, 0x2a, 0x2b, 0xcd, 0x0b, 0xd6, 0xe0, 0x8f, 0x1e, 0x6c, 0xa0, 0x8a, 0x6e, 0x1a, 0xd8, 0xb7,
	0xda, 0x69, 0x70, 0xd4, 0xc5, 0xcc, 0x9b, 0xae, 0xdd, 0x1a, 0x27, 0x59, 0x38, 0xcd, 0x78, 0x27,
	0xe9, 0x9d, 0xbe, 0x47, 0x6b, 0x8e, 0xb6, 0x7c, 0x69, 0x1e, 0x33, 0x0b, 0x98, 0x15, 0xeb, 0x63,
	0x76, 0xac, 0x0f, 0xe8, 0x03, 0x3c, 0x43, 0x57, 0x06, 0x8c, 0x1e, 0xe4, 0x34, 0x52, 0x34, 0xc6,
	0x4e, 0xd6, 0x69, 0x8c, 0x53, 0x17, 0x31, 0x44, 0x10, 0x63, 0xb5, 0x70, 0x6b, 0x19, 0xaf, 0x46,
	0xdc, 0xb0, 0x11, 0x83, 0x5b, 0x70, 0xeb, 0x92, 0x8a, 0x61, 0x1a, 0x99, 0x61, 0x84, 0x15, 0x49,
	0xc2, 0x39, 0x73, 0x7e, 0xc6, 0x5b, 0xc6, 0xa2, 0xa7, 0x52, 0x9b, 0x24, 0xc1, 0x43, 0x14, 0xea,
	0x4a, 0xc2, 0x5d, 0x2e, 0xb0, 0xdb, 0xbe, 0xa5, 0x0e, 0xcf, 0x01, 0x66, 0x49, 0xdb, 0x5f, 0x70,
	0xf1, 0xde, 0x58, 0x2d, 0x63, 0xf0, 0xb5, 0x05, 0xee, 0xa7, 0xaa, 0x87, 0xf7, 0x05, 0x67, 0x09,
	0xce, 0x29, 0x15, 0x5a, 0x0c, 0x61, 0x05, 0x80, 0x8b, 0xda, 0xfe, 0x21, 0x55, 0xbd, 0x0f, 0xda,
	0xba, 0x4b, 0xa9, 0x78, 0x43, 0xa2, 0xe0, 0x11, 0x5a, 0x19, 0xc7, 0x0d, 0x33, 0xc2, 0xf4, 0x26,
	0x65, 0x78, 0xbe, 0x60, 0xf4, 0xc0, 0xbd, 0x8c, 0xb0, 0x36, 0x49, 0xa4, 0xd6, 0xdc, 0x8f, 0x54,
	0x70, 0x7b, 0xfb, 0xb8, 0xc7, 0xa5, 0xc2, 0x03, 0x96, 0x7e, 0x0e, 0xe7, 0x8d, 0xe6, 0xb4, 0xd1,
	0x48, 0xe0, 0x25, 0x97, 0xea, 0x3d, 0x4b, 0x3f, 0x6b, 0x08, 0x90, 0x75, 0x68, 0x97, 0x0b, 0x8a,
	0x4d, 0x87, 0xd6, 0x83, 0xf6, 0x82, 0x81, 0x68, 0xe3, 0x13, 0xb0, 0xed, 0xea, 0x46, 0xaa, 0xc7,
	0xee, 0x7b, 0xb4, 0x59, 0xea, 0x28, 0x09, 0x75, 0x97, 0x79, 0x5c, 0x82, 0xaa, 0x10, 0x65, 0xa3,
	0x68, 0x06, 0x09, 0x35, 0xb7, 0x70, 0x34, 0x5d, 0xaf, 0xd0, 0xc6, 0xb1, 0x61, 0x4b, 0x69, 0xd0,
	0x99, 0x0b, 0x20, 0xe2, 0xfa, 0xd1, 0x88, 0x3e, 0x1d, 0x3a, 0x87, 0x7b, 0xe8, 0xc6, 0x3f, 0x05,
	0x2b, 0x72, 0xba, 0x70, 0xd2, 0x26, 0x8f, 0x66, 0xb8, 0x81, 0x6a, 0x27, 0xc7, 0x65, 0xdc, 0x4e,
	0x96, 0x45, 0x08, 0x78, 0xf9, 0xf8, 0x80, 0x6f, 0xb9, 0x99, 0x06, 0x35, 0x54, 0x51, 0x24, 0xc1,
	0x8a, 0x73, 0x2c, 0x7b, 0x5c, 0xa8, 0x70, 0x09, 0x50, 0x73, 0x8a, 0x24, 0x6d, 0xce, 0x5b, 0x7a,
	0x29, 0xb8, 0x8d, 0x16, 0x75, 0x51, 0x6b, 0x3f, 0x7b, 0xa7, 0xdd, 0x94, 0x66, 0x71, 0xb8, 0x6c,
	0x3a, 0x54, 0x87, 0xc4, 0x6d, 0x92, 0x98, 0x1b, 0x7d, 0xa1, 0x0d, 0xba, 0x85, 0xf4, 0x07, 0x99,
	0x4a, 0xf3, 0x8c, 0x1e, 0x51, 0xb8, 0x0c, 0x2f, 0x9a, 0x16, 0xe2, 0x3c, 0x46, 0x85, 0x2e, 0x83,
	0x6f, 0xd0, 0x8a, 0x07, 0xf7, 0xc9, 0x81, 0xeb, 0x70, 0x06, 0x1b, 0x02, 0x76, 0xd9, 0x39, 0xbc,
	0x21, 0x07, 0xb6, 0xd3, 0x01, 0xf4, 0x01, 0x72, 0x8d, 0x69, 0x1c, 0x19, 0xae, 0x18, 0xa9, 0x5b,
	0xf3, 0x08, 0x2e, 0xd8, 0x41, 0x97, 0x3d, 0xe3, 0x90, 0xb2, 0x98, 0x0b, 0x2c, 0x73, 0x1a, 0xa5,
	0xdd, 0x34, 0x32, 0xac, 0x97, 0x00, 0xec, 0xcf, 0xb4, 0x07, 0x3e, 0x2d, 0xeb, 0x02, 0xcc, 0xf7,
	0xd0, 0x72, 0xa9, 0x27, 0x90, 0xa8, 0x28, 0xe8, 0x55, 0xc0, 0x2e, 0x14, 0xd6, 0x9d, 0xc8, 0xd5,
	0xf4, 0x36, 0x5a, 0x2a, 0x81, 0xcc, 0x4c, 0x00, 0xbe, 0xb5, 0x71, 0x0c, 0xdc, 0x15, 0x10, 0xdd,
	0x41, 0x8b, 0x4e, 0xdd, 0xfa, 0x3e, 0x7c, 0xd7, 0xba, 0x6c, 0x0a, 0xc5, 0xda, 0xda, 0x24, 0xf1,
	0xed, 0xea, 0x11, 0x5a, 0xd1, 0xe3, 0x85, 0x30, 0x82, 0x23, 0xfd, 0xee, 0x4d, 0x99, 0x3d, 0xa3,
	0xde, 0xdd, 0xba, 0x29, 0x64, 0xc6, 0x1b, 0x84, 0x91, 0xa7, 0x3c, 0xa6, 0x0d, 0x6b, 0xd5, 0xfb,
	0x7b, 0x82, 0xd6, 0x5d, 0x3a, 0x4f, 0x80, 0x5f, 0x31, 0x89, 0xb1, 0x5e, 0xc7, 0xc5, 0xb8, 0x8d,
	0x16, 0x0b, 0xff, 0x92, 0xcc, 0xae, 0x1a, 0xed, 0x78, 0x47, 0x2f, 0xb6, 0xef, 0xd0, 0xaa, 0x16,
	0x5b, 0x09, 0x34, 0xa2, 0xb9, 0xff, 0x1a, 0xf1, 0x74, 0x48, 0xbc, 0xe7, 0xa0, 0x65, 0xe5, 0x3d,
	0x40, 0x5e, 0x57, 0x45, 0xe3, 0x31, 0x49, 0xad, 0x19, 0x05, 0x38, 0xb3, 0xeb, 0x3d, 0x90, 0xd5,
	0x27, 0x68, 0xdd, 0xc3, 0x04, 0xcd, 0xc8, 0x61, 0xb9, 0xad, 0x03, 0x7a, 0x63, 0x54, 0x02, 0x4d,
	0xed, 0xe4, 0x9b, 0x3a, 0xc4, 0x78, 0x88, 0x42, 0x1f, 0x23, 0x4a, 0x45, 0x34, 0x48, 0x95, 0x47,
	0xff, 0xcf, 0xa4, 0xd9, 0xd9, 0x9f, 0x1a, 0x73, 0xc3, 0xab, 0xb6, 0x44, 0xde, 0xe7, 0x8a, 0x7a,
	0xdc, 0xff, 0x47, 0xf7, 0xdc, 0x04, 0xab, 0x85, 0x5d, 0x43, 0xf3, 0xee, 0x76, 0x62, 0x99, 0xc1,
	0x75, 0x5c, 0x03, 0xf7, 0x8a, 0x5d, 0x7e, 0x26, 0x33, 0x7d, 0x03, 0x8f, 0xd1, 0x9a, 0x0f, 0xcf,
	0xbb, 0x58, 0xf5, 0x28, 0x96, 0x5a, 0x9c, 0x0e, 0x74, 0x7d, 0xb4, 0x1c, 0xdf, 0x75, 0xdb, 0x3d,
	0xda, 0x22, 0x7d, 0x6a, 0xe1, 0x25, 0x9a, 0x74, 0xbf, 0x0b, 0x88, 0xcd, 0x11, 0x9a, 0xc6, 0x7e,
	0x57, 0xfb, 0x6d, 0xa1, 0xaa, 0xa7, 0xb1, 0x8e, 0x32, 0xbc, 0x61, 0x26, 0xbf, 0x33, 0x18, 0x57,
	0x59, 0x9a, 0xfc, 0x25, 0x2d, 0x6d, 0x8d, 0x4c, 0xfe, 0x42, 0x41, 0xf7, 0xd1, 0x45, 0x3d, 0x28,
	0x73, 0xfd, 0x34, 0xca, 0x68, 0x57, 0x95, 0xc6, 0xec, 0x4d, 0x53, 0x27, 0x8c, 0xb7, 0xb4, 0xf5,
	0x35, 0xed, 0x2a, 0x3f, 0x5e, 0x5f, 0xa0, 0xab, 0xf1, 0x20, 0xcf, 0xd2, 0x88, 0xa8, 0x31, 0x25,
	0x14, 0x35, 0xf3, 0x15, 0xc0, 0xd7, 0xbc, 0x5f, 0x49, 0x12, 0xbe, 0x7a, 0x5a, 0xe8, 0x7a, 0x11,
	0xe7, 0x38, 0x69, 0x14, 0xe1, 0x6e, 0x41, 0xb8, 0x9a, 0x77, 0x3f, 0xa2, 0x11, 0x1f, 0xf4, 0x1a,
	0x9a, 0x77, 0x4f, 0x0f, 0xce, 0x71, 0xc6, 0x59, 0x12, 0xd6, 0x4d, 0x4e, 0xcd, 0x72, 0x9b, 0xf3,
	0xd7, 0x9c, 0x8d, 0xe4, 0x9e, 0x64, 0xa6, 0x9d, 0xdc, 0x1e, 0xc9, 0xfd, 0x4e, 0x46, 0xc7, 0x73,
	0x6f, 0x1d, 0x65, 0x78, 0x67, 0x34, 0xf7, 0xc6, 0x15, 0x1a, 0x88, 0x8b, 0x59, 0x6e, 0xcd, 0xe1,
	0x5d, 0xd3, 0x40, 0xac, 0xad, 0xd4, 0x94, 0x83, 0x4d, 0x74, 0xc1, 0x21, 0xfc, 0xcb, 0x61, 0x1b,
	0xbc, 0xcf, 0xdb, 0x75, 0xf7, 0x66, 0xd8, 0x42, 0x55, 0xff, 0x74, 0xf4, 0x73, 0xed, 0x9e, 0xd9,
	0x87, 0x7b, 0x31, 0xba, 0x19, 0x76, 0x0b, 0x2d, 0xd8, 0x1c, 0xe8, 0x29, 0x26, 0x12, 0x2c, 0x33,
	0x32, 0xa4, 0xe1, 0x7d, 0xa3, 0x02, 0x63, 0x7a, 0xc7, 0x5a, 0x22, 0x69, 0xe9, 0xf5, 0xda, 0xef,
	0xa7, 0xd0, 0xca, 0x89, 0x3f, 0xec, 0x83, 0x9f, 0x51, 0x65, 0xe4, 0x37, 0x34, 0xec, 0x6f, 0x6e,
	0xfb, 0xe3, 0x17, 0x78, 0xe1, 0xbb, 0x5f, 0x16, 0xe6, 0xf3, 0xa9, 0x79, 0xc2, 0xff, 0x36, 0xe5,
	0x4f, 0x53, 0x7e, 0xda, 0xc3, 0xd9, 0xe7, 0xb6, 0xf1, 0x17, 0xd8, 0x46, 0x99, 0xa6, 0x59, 0x35,
	0x8b, 0x30, 0x25, 0xcc, 0x8e, 0x3a, 0x67, 0xe1, 0x2f, 0x2a, 0xf7, 0xfe, 0x0a, 0x00, 0x00, 0xff,
	0xff, 0xa8, 0x01, 0x12, 0x08, 0x74, 0x11, 0x00, 0x00,
}
