/*
Copyright 2019 Cisco Systems

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: bfd_mgmt_multiple_paths.proto

package cisco_ios_xr_ip_bfd_oper_bfd_ipv4_multi_hop_multi_paths_ipv4_multi_hop_multi_path

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type BfdMgmtMultiplePaths_KEYS struct {
	SourceAddress        string   `protobuf:"bytes,1,opt,name=source_address,json=sourceAddress,proto3" json:"source_address,omitempty"`
	DestinationAddress   string   `protobuf:"bytes,2,opt,name=destination_address,json=destinationAddress,proto3" json:"destination_address,omitempty"`
	Location             string   `protobuf:"bytes,3,opt,name=location,proto3" json:"location,omitempty"`
	VrfName              string   `protobuf:"bytes,4,opt,name=vrf_name,json=vrfName,proto3" json:"vrf_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BfdMgmtMultiplePaths_KEYS) Reset()         { *m = BfdMgmtMultiplePaths_KEYS{} }
func (m *BfdMgmtMultiplePaths_KEYS) String() string { return proto.CompactTextString(m) }
func (*BfdMgmtMultiplePaths_KEYS) ProtoMessage()    {}
func (*BfdMgmtMultiplePaths_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_81d6f8609d9c4374, []int{0}
}

func (m *BfdMgmtMultiplePaths_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BfdMgmtMultiplePaths_KEYS.Unmarshal(m, b)
}
func (m *BfdMgmtMultiplePaths_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BfdMgmtMultiplePaths_KEYS.Marshal(b, m, deterministic)
}
func (m *BfdMgmtMultiplePaths_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BfdMgmtMultiplePaths_KEYS.Merge(m, src)
}
func (m *BfdMgmtMultiplePaths_KEYS) XXX_Size() int {
	return xxx_messageInfo_BfdMgmtMultiplePaths_KEYS.Size(m)
}
func (m *BfdMgmtMultiplePaths_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_BfdMgmtMultiplePaths_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_BfdMgmtMultiplePaths_KEYS proto.InternalMessageInfo

func (m *BfdMgmtMultiplePaths_KEYS) GetSourceAddress() string {
	if m != nil {
		return m.SourceAddress
	}
	return ""
}

func (m *BfdMgmtMultiplePaths_KEYS) GetDestinationAddress() string {
	if m != nil {
		return m.DestinationAddress
	}
	return ""
}

func (m *BfdMgmtMultiplePaths_KEYS) GetLocation() string {
	if m != nil {
		return m.Location
	}
	return ""
}

func (m *BfdMgmtMultiplePaths_KEYS) GetVrfName() string {
	if m != nil {
		return m.VrfName
	}
	return ""
}

type BfdMgmtMultiplePaths struct {
	SessionSubtype       string   `protobuf:"bytes,50,opt,name=session_subtype,json=sessionSubtype,proto3" json:"session_subtype,omitempty"`
	State                string   `protobuf:"bytes,51,opt,name=state,proto3" json:"state,omitempty"`
	LocalDiscriminator   uint32   `protobuf:"varint,52,opt,name=local_discriminator,json=localDiscriminator,proto3" json:"local_discriminator,omitempty"`
	NodeId               string   `protobuf:"bytes,53,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	IncomingLabelXr      uint32   `protobuf:"varint,54,opt,name=incoming_label_xr,json=incomingLabelXr,proto3" json:"incoming_label_xr,omitempty"`
	SessionInterfaceName string   `protobuf:"bytes,55,opt,name=session_interface_name,json=sessionInterfaceName,proto3" json:"session_interface_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BfdMgmtMultiplePaths) Reset()         { *m = BfdMgmtMultiplePaths{} }
func (m *BfdMgmtMultiplePaths) String() string { return proto.CompactTextString(m) }
func (*BfdMgmtMultiplePaths) ProtoMessage()    {}
func (*BfdMgmtMultiplePaths) Descriptor() ([]byte, []int) {
	return fileDescriptor_81d6f8609d9c4374, []int{1}
}

func (m *BfdMgmtMultiplePaths) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BfdMgmtMultiplePaths.Unmarshal(m, b)
}
func (m *BfdMgmtMultiplePaths) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BfdMgmtMultiplePaths.Marshal(b, m, deterministic)
}
func (m *BfdMgmtMultiplePaths) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BfdMgmtMultiplePaths.Merge(m, src)
}
func (m *BfdMgmtMultiplePaths) XXX_Size() int {
	return xxx_messageInfo_BfdMgmtMultiplePaths.Size(m)
}
func (m *BfdMgmtMultiplePaths) XXX_DiscardUnknown() {
	xxx_messageInfo_BfdMgmtMultiplePaths.DiscardUnknown(m)
}

var xxx_messageInfo_BfdMgmtMultiplePaths proto.InternalMessageInfo

func (m *BfdMgmtMultiplePaths) GetSessionSubtype() string {
	if m != nil {
		return m.SessionSubtype
	}
	return ""
}

func (m *BfdMgmtMultiplePaths) GetState() string {
	if m != nil {
		return m.State
	}
	return ""
}

func (m *BfdMgmtMultiplePaths) GetLocalDiscriminator() uint32 {
	if m != nil {
		return m.LocalDiscriminator
	}
	return 0
}

func (m *BfdMgmtMultiplePaths) GetNodeId() string {
	if m != nil {
		return m.NodeId
	}
	return ""
}

func (m *BfdMgmtMultiplePaths) GetIncomingLabelXr() uint32 {
	if m != nil {
		return m.IncomingLabelXr
	}
	return 0
}

func (m *BfdMgmtMultiplePaths) GetSessionInterfaceName() string {
	if m != nil {
		return m.SessionInterfaceName
	}
	return ""
}

func init() {
	proto.RegisterType((*BfdMgmtMultiplePaths_KEYS)(nil), "cisco_ios_xr_ip_bfd_oper.bfd.ipv4_multi_hop_multi_paths.ipv4_multi_hop_multi_path.bfd_mgmt_multiple_paths_KEYS")
	proto.RegisterType((*BfdMgmtMultiplePaths)(nil), "cisco_ios_xr_ip_bfd_oper.bfd.ipv4_multi_hop_multi_paths.ipv4_multi_hop_multi_path.bfd_mgmt_multiple_paths")
}

func init() { proto.RegisterFile("bfd_mgmt_multiple_paths.proto", fileDescriptor_81d6f8609d9c4374) }

var fileDescriptor_81d6f8609d9c4374 = []byte{
	// 346 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x92, 0x41, 0x4b, 0x2b, 0x31,
	0x14, 0x85, 0x99, 0xbe, 0xf7, 0xda, 0xbe, 0x40, 0x5b, 0x8c, 0xc5, 0x46, 0x51, 0x28, 0x05, 0xb1,
	0xb8, 0xa8, 0x60, 0xab, 0xae, 0x05, 0x5d, 0x14, 0x45, 0xb0, 0xdd, 0xe8, 0xea, 0x92, 0x99, 0xdc,
	0x69, 0x03, 0x33, 0x93, 0x90, 0xa4, 0xa5, 0xee, 0xfd, 0x3b, 0xfe, 0x47, 0x49, 0xa6, 0x53, 0xba,
	0xe9, 0x6e, 0xee, 0xf9, 0xce, 0xb9, 0x39, 0x19, 0x42, 0x2e, 0xe2, 0x54, 0x40, 0xbe, 0xc8, 0x1d,
	0xe4, 0xab, 0xcc, 0x49, 0x9d, 0x21, 0x68, 0xee, 0x96, 0x76, 0xa4, 0x8d, 0x72, 0x8a, 0xbe, 0x27,
	0xd2, 0x26, 0x0a, 0xa4, 0xb2, 0xb0, 0x31, 0x20, 0x35, 0x78, 0xbb, 0xd2, 0x68, 0x46, 0x71, 0x2a,
	0x46, 0x52, 0xaf, 0x27, 0x65, 0x0e, 0x96, 0x4a, 0x6f, 0xbf, 0xca, 0xf8, 0x41, 0x34, 0xf8, 0x89,
	0xc8, 0xf9, 0x81, 0x43, 0xe1, 0xe5, 0xf9, 0x73, 0x4e, 0x2f, 0x49, 0xdb, 0xaa, 0x95, 0x49, 0x10,
	0xb8, 0x10, 0x06, 0xad, 0x65, 0x51, 0x3f, 0x1a, 0xfe, 0x9f, 0xb5, 0x4a, 0xf5, 0xb1, 0x14, 0xe9,
	0x0d, 0x39, 0x16, 0x68, 0x9d, 0x2c, 0xb8, 0x93, 0xaa, 0xd8, 0x79, 0x6b, 0xc1, 0x4b, 0xf7, 0x50,
	0x15, 0x38, 0x23, 0xcd, 0x4c, 0x25, 0x41, 0x62, 0x7f, 0x82, 0x6b, 0x37, 0xd3, 0x53, 0xd2, 0x5c,
	0x9b, 0x14, 0x0a, 0x9e, 0x23, 0xfb, 0x1b, 0x58, 0x63, 0x6d, 0xd2, 0x37, 0x9e, 0xe3, 0xe0, 0xbb,
	0x46, 0x7a, 0x07, 0xfa, 0xd2, 0x2b, 0xd2, 0xb1, 0x68, 0xad, 0x3f, 0xdf, 0xae, 0x62, 0xf7, 0xa5,
	0x91, 0xdd, 0x86, 0x74, 0x7b, 0x2b, 0xcf, 0x4b, 0x95, 0x76, 0xc9, 0x3f, 0xeb, 0xb8, 0x43, 0x36,
	0x0e, 0xb8, 0x1c, 0xfc, 0x15, 0x7c, 0x83, 0x0c, 0x84, 0xb4, 0x89, 0x91, 0xb9, 0x2f, 0xac, 0x0c,
	0x9b, 0xf4, 0xa3, 0x61, 0x6b, 0x46, 0x03, 0x7a, 0xda, 0x27, 0xb4, 0x47, 0x1a, 0x85, 0x12, 0x08,
	0x52, 0xb0, 0xbb, 0xb0, 0xa8, 0xee, 0xc7, 0xa9, 0xa0, 0xd7, 0xe4, 0x48, 0x16, 0x89, 0xca, 0x65,
	0xb1, 0x80, 0x8c, 0xc7, 0x98, 0xc1, 0xc6, 0xb0, 0xfb, 0xb0, 0xa7, 0x53, 0x81, 0x57, 0xaf, 0x7f,
	0x18, 0x3a, 0x21, 0x27, 0x55, 0x69, 0x59, 0x38, 0x34, 0x29, 0x4f, 0xb0, 0xbc, 0xf9, 0x43, 0xd8,
	0xd9, 0xdd, 0xd2, 0x69, 0x05, 0xfd, 0x6f, 0x88, 0xeb, 0xe1, 0x41, 0x8c, 0x7f, 0x03, 0x00, 0x00,
	0xff, 0xff, 0xb7, 0x34, 0x5e, 0xc6, 0x31, 0x02, 0x00, 0x00,
}
