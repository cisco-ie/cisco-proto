/*
Copyright 2019 Cisco Systems

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: fib_sh_nhinfo.proto

package cisco_ios_xr_fib_common_oper_fib_nodes_node_protocols_protocol_vrfs_vrf_nh_info_detail_hardware_ingress_nh_info_remote_detail_hardware_ingresses_nh_info_remote_detail_hardware_ingress

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type FibShNhinfo_KEYS struct {
	NodeName             string   `protobuf:"bytes,1,opt,name=node_name,json=nodeName,proto3" json:"node_name,omitempty"`
	ProtocolName         string   `protobuf:"bytes,2,opt,name=protocol_name,json=protocolName,proto3" json:"protocol_name,omitempty"`
	VrfName              string   `protobuf:"bytes,3,opt,name=vrf_name,json=vrfName,proto3" json:"vrf_name,omitempty"`
	NhInterfaceName      string   `protobuf:"bytes,4,opt,name=nh_interface_name,json=nhInterfaceName,proto3" json:"nh_interface_name,omitempty"`
	NhProto              string   `protobuf:"bytes,5,opt,name=nh_proto,json=nhProto,proto3" json:"nh_proto,omitempty"`
	NhPfxLength          uint32   `protobuf:"varint,6,opt,name=nh_pfx_length,json=nhPfxLength,proto3" json:"nh_pfx_length,omitempty"`
	NhAddress            string   `protobuf:"bytes,7,opt,name=nh_address,json=nhAddress,proto3" json:"nh_address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FibShNhinfo_KEYS) Reset()         { *m = FibShNhinfo_KEYS{} }
func (m *FibShNhinfo_KEYS) String() string { return proto.CompactTextString(m) }
func (*FibShNhinfo_KEYS) ProtoMessage()    {}
func (*FibShNhinfo_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_aef39e804ffbecc2, []int{0}
}

func (m *FibShNhinfo_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FibShNhinfo_KEYS.Unmarshal(m, b)
}
func (m *FibShNhinfo_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FibShNhinfo_KEYS.Marshal(b, m, deterministic)
}
func (m *FibShNhinfo_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FibShNhinfo_KEYS.Merge(m, src)
}
func (m *FibShNhinfo_KEYS) XXX_Size() int {
	return xxx_messageInfo_FibShNhinfo_KEYS.Size(m)
}
func (m *FibShNhinfo_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_FibShNhinfo_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_FibShNhinfo_KEYS proto.InternalMessageInfo

func (m *FibShNhinfo_KEYS) GetNodeName() string {
	if m != nil {
		return m.NodeName
	}
	return ""
}

func (m *FibShNhinfo_KEYS) GetProtocolName() string {
	if m != nil {
		return m.ProtocolName
	}
	return ""
}

func (m *FibShNhinfo_KEYS) GetVrfName() string {
	if m != nil {
		return m.VrfName
	}
	return ""
}

func (m *FibShNhinfo_KEYS) GetNhInterfaceName() string {
	if m != nil {
		return m.NhInterfaceName
	}
	return ""
}

func (m *FibShNhinfo_KEYS) GetNhProto() string {
	if m != nil {
		return m.NhProto
	}
	return ""
}

func (m *FibShNhinfo_KEYS) GetNhPfxLength() uint32 {
	if m != nil {
		return m.NhPfxLength
	}
	return 0
}

func (m *FibShNhinfo_KEYS) GetNhAddress() string {
	if m != nil {
		return m.NhAddress
	}
	return ""
}

type FibShNhinfoPwheExt struct {
	PwheAdjacencyClientData uint32   `protobuf:"varint,1,opt,name=pwhe_adjacency_client_data,json=pwheAdjacencyClientData,proto3" json:"pwhe_adjacency_client_data,omitempty"`
	Vctype                  uint32   `protobuf:"varint,2,opt,name=vctype,proto3" json:"vctype,omitempty"`
	VcInternalLabel         uint32   `protobuf:"varint,3,opt,name=vc_internal_label,json=vcInternalLabel,proto3" json:"vc_internal_label,omitempty"`
	CwEnabled               bool     `protobuf:"varint,4,opt,name=cw_enabled,json=cwEnabled,proto3" json:"cw_enabled,omitempty"`
	L2OverheadBytes         uint32   `protobuf:"varint,5,opt,name=l2_overhead_bytes,json=l2OverheadBytes,proto3" json:"l2_overhead_bytes,omitempty"`
	Dot1QVlanTag            uint32   `protobuf:"varint,6,opt,name=dot1q_vlan_tag,json=dot1qVlanTag,proto3" json:"dot1q_vlan_tag,omitempty"`
	XXX_NoUnkeyedLiteral    struct{} `json:"-"`
	XXX_unrecognized        []byte   `json:"-"`
	XXX_sizecache           int32    `json:"-"`
}

func (m *FibShNhinfoPwheExt) Reset()         { *m = FibShNhinfoPwheExt{} }
func (m *FibShNhinfoPwheExt) String() string { return proto.CompactTextString(m) }
func (*FibShNhinfoPwheExt) ProtoMessage()    {}
func (*FibShNhinfoPwheExt) Descriptor() ([]byte, []int) {
	return fileDescriptor_aef39e804ffbecc2, []int{1}
}

func (m *FibShNhinfoPwheExt) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FibShNhinfoPwheExt.Unmarshal(m, b)
}
func (m *FibShNhinfoPwheExt) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FibShNhinfoPwheExt.Marshal(b, m, deterministic)
}
func (m *FibShNhinfoPwheExt) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FibShNhinfoPwheExt.Merge(m, src)
}
func (m *FibShNhinfoPwheExt) XXX_Size() int {
	return xxx_messageInfo_FibShNhinfoPwheExt.Size(m)
}
func (m *FibShNhinfoPwheExt) XXX_DiscardUnknown() {
	xxx_messageInfo_FibShNhinfoPwheExt.DiscardUnknown(m)
}

var xxx_messageInfo_FibShNhinfoPwheExt proto.InternalMessageInfo

func (m *FibShNhinfoPwheExt) GetPwheAdjacencyClientData() uint32 {
	if m != nil {
		return m.PwheAdjacencyClientData
	}
	return 0
}

func (m *FibShNhinfoPwheExt) GetVctype() uint32 {
	if m != nil {
		return m.Vctype
	}
	return 0
}

func (m *FibShNhinfoPwheExt) GetVcInternalLabel() uint32 {
	if m != nil {
		return m.VcInternalLabel
	}
	return 0
}

func (m *FibShNhinfoPwheExt) GetCwEnabled() bool {
	if m != nil {
		return m.CwEnabled
	}
	return false
}

func (m *FibShNhinfoPwheExt) GetL2OverheadBytes() uint32 {
	if m != nil {
		return m.L2OverheadBytes
	}
	return 0
}

func (m *FibShNhinfoPwheExt) GetDot1QVlanTag() uint32 {
	if m != nil {
		return m.Dot1QVlanTag
	}
	return 0
}

type FibShFibObjBase struct {
	ObjectReferenceCount uint32   `protobuf:"varint,1,opt,name=object_reference_count,json=objectReferenceCount,proto3" json:"object_reference_count,omitempty"`
	ObjectFlags          uint32   `protobuf:"varint,2,opt,name=object_flags,json=objectFlags,proto3" json:"object_flags,omitempty"`
	ObjectType           uint32   `protobuf:"varint,3,opt,name=object_type,json=objectType,proto3" json:"object_type,omitempty"`
	ObjectTimeStamp      uint64   `protobuf:"varint,4,opt,name=object_time_stamp,json=objectTimeStamp,proto3" json:"object_time_stamp,omitempty"`
	ObjectPointer        uint64   `protobuf:"varint,5,opt,name=object_pointer,json=objectPointer,proto3" json:"object_pointer,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FibShFibObjBase) Reset()         { *m = FibShFibObjBase{} }
func (m *FibShFibObjBase) String() string { return proto.CompactTextString(m) }
func (*FibShFibObjBase) ProtoMessage()    {}
func (*FibShFibObjBase) Descriptor() ([]byte, []int) {
	return fileDescriptor_aef39e804ffbecc2, []int{2}
}

func (m *FibShFibObjBase) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FibShFibObjBase.Unmarshal(m, b)
}
func (m *FibShFibObjBase) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FibShFibObjBase.Marshal(b, m, deterministic)
}
func (m *FibShFibObjBase) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FibShFibObjBase.Merge(m, src)
}
func (m *FibShFibObjBase) XXX_Size() int {
	return xxx_messageInfo_FibShFibObjBase.Size(m)
}
func (m *FibShFibObjBase) XXX_DiscardUnknown() {
	xxx_messageInfo_FibShFibObjBase.DiscardUnknown(m)
}

var xxx_messageInfo_FibShFibObjBase proto.InternalMessageInfo

func (m *FibShFibObjBase) GetObjectReferenceCount() uint32 {
	if m != nil {
		return m.ObjectReferenceCount
	}
	return 0
}

func (m *FibShFibObjBase) GetObjectFlags() uint32 {
	if m != nil {
		return m.ObjectFlags
	}
	return 0
}

func (m *FibShFibObjBase) GetObjectType() uint32 {
	if m != nil {
		return m.ObjectType
	}
	return 0
}

func (m *FibShFibObjBase) GetObjectTimeStamp() uint64 {
	if m != nil {
		return m.ObjectTimeStamp
	}
	return 0
}

func (m *FibShFibObjBase) GetObjectPointer() uint64 {
	if m != nil {
		return m.ObjectPointer
	}
	return 0
}

type FibShExtBase struct {
	ObjectBase           *FibShFibObjBase `protobuf:"bytes,1,opt,name=object_base,json=objectBase,proto3" json:"object_base,omitempty"`
	ParentObjectPointer  uint64           `protobuf:"varint,2,opt,name=parent_object_pointer,json=parentObjectPointer,proto3" json:"parent_object_pointer,omitempty"`
	BackObjectPointer    uint64           `protobuf:"varint,3,opt,name=back_object_pointer,json=backObjectPointer,proto3" json:"back_object_pointer,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *FibShExtBase) Reset()         { *m = FibShExtBase{} }
func (m *FibShExtBase) String() string { return proto.CompactTextString(m) }
func (*FibShExtBase) ProtoMessage()    {}
func (*FibShExtBase) Descriptor() ([]byte, []int) {
	return fileDescriptor_aef39e804ffbecc2, []int{3}
}

func (m *FibShExtBase) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FibShExtBase.Unmarshal(m, b)
}
func (m *FibShExtBase) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FibShExtBase.Marshal(b, m, deterministic)
}
func (m *FibShExtBase) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FibShExtBase.Merge(m, src)
}
func (m *FibShExtBase) XXX_Size() int {
	return xxx_messageInfo_FibShExtBase.Size(m)
}
func (m *FibShExtBase) XXX_DiscardUnknown() {
	xxx_messageInfo_FibShExtBase.DiscardUnknown(m)
}

var xxx_messageInfo_FibShExtBase proto.InternalMessageInfo

func (m *FibShExtBase) GetObjectBase() *FibShFibObjBase {
	if m != nil {
		return m.ObjectBase
	}
	return nil
}

func (m *FibShExtBase) GetParentObjectPointer() uint64 {
	if m != nil {
		return m.ParentObjectPointer
	}
	return 0
}

func (m *FibShExtBase) GetBackObjectPointer() uint64 {
	if m != nil {
		return m.BackObjectPointer
	}
	return 0
}

type FibShNhinfoExtRepDet struct {
	NhInfoReplicatedType      uint32   `protobuf:"varint,1,opt,name=nh_info_replicated_type,json=nhInfoReplicatedType,proto3" json:"nh_info_replicated_type,omitempty"`
	NhInfoReplicatedNhId      uint32   `protobuf:"varint,2,opt,name=nh_info_replicated_nh_id,json=nhInfoReplicatedNhId,proto3" json:"nh_info_replicated_nh_id,omitempty"`
	NhInfoReplicatedInterface string   `protobuf:"bytes,3,opt,name=nh_info_replicated_interface,json=nhInfoReplicatedInterface,proto3" json:"nh_info_replicated_interface,omitempty"`
	XXX_NoUnkeyedLiteral      struct{} `json:"-"`
	XXX_unrecognized          []byte   `json:"-"`
	XXX_sizecache             int32    `json:"-"`
}

func (m *FibShNhinfoExtRepDet) Reset()         { *m = FibShNhinfoExtRepDet{} }
func (m *FibShNhinfoExtRepDet) String() string { return proto.CompactTextString(m) }
func (*FibShNhinfoExtRepDet) ProtoMessage()    {}
func (*FibShNhinfoExtRepDet) Descriptor() ([]byte, []int) {
	return fileDescriptor_aef39e804ffbecc2, []int{4}
}

func (m *FibShNhinfoExtRepDet) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FibShNhinfoExtRepDet.Unmarshal(m, b)
}
func (m *FibShNhinfoExtRepDet) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FibShNhinfoExtRepDet.Marshal(b, m, deterministic)
}
func (m *FibShNhinfoExtRepDet) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FibShNhinfoExtRepDet.Merge(m, src)
}
func (m *FibShNhinfoExtRepDet) XXX_Size() int {
	return xxx_messageInfo_FibShNhinfoExtRepDet.Size(m)
}
func (m *FibShNhinfoExtRepDet) XXX_DiscardUnknown() {
	xxx_messageInfo_FibShNhinfoExtRepDet.DiscardUnknown(m)
}

var xxx_messageInfo_FibShNhinfoExtRepDet proto.InternalMessageInfo

func (m *FibShNhinfoExtRepDet) GetNhInfoReplicatedType() uint32 {
	if m != nil {
		return m.NhInfoReplicatedType
	}
	return 0
}

func (m *FibShNhinfoExtRepDet) GetNhInfoReplicatedNhId() uint32 {
	if m != nil {
		return m.NhInfoReplicatedNhId
	}
	return 0
}

func (m *FibShNhinfoExtRepDet) GetNhInfoReplicatedInterface() string {
	if m != nil {
		return m.NhInfoReplicatedInterface
	}
	return ""
}

type FibShNhinfoExtCmnDet struct {
	Type                 string                `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	SnecdNhr             *FibShNhinfoExtRepDet `protobuf:"bytes,2,opt,name=snecd_nhr,json=snecdNhr,proto3" json:"snecd_nhr,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *FibShNhinfoExtCmnDet) Reset()         { *m = FibShNhinfoExtCmnDet{} }
func (m *FibShNhinfoExtCmnDet) String() string { return proto.CompactTextString(m) }
func (*FibShNhinfoExtCmnDet) ProtoMessage()    {}
func (*FibShNhinfoExtCmnDet) Descriptor() ([]byte, []int) {
	return fileDescriptor_aef39e804ffbecc2, []int{5}
}

func (m *FibShNhinfoExtCmnDet) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FibShNhinfoExtCmnDet.Unmarshal(m, b)
}
func (m *FibShNhinfoExtCmnDet) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FibShNhinfoExtCmnDet.Marshal(b, m, deterministic)
}
func (m *FibShNhinfoExtCmnDet) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FibShNhinfoExtCmnDet.Merge(m, src)
}
func (m *FibShNhinfoExtCmnDet) XXX_Size() int {
	return xxx_messageInfo_FibShNhinfoExtCmnDet.Size(m)
}
func (m *FibShNhinfoExtCmnDet) XXX_DiscardUnknown() {
	xxx_messageInfo_FibShNhinfoExtCmnDet.DiscardUnknown(m)
}

var xxx_messageInfo_FibShNhinfoExtCmnDet proto.InternalMessageInfo

func (m *FibShNhinfoExtCmnDet) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *FibShNhinfoExtCmnDet) GetSnecdNhr() *FibShNhinfoExtRepDet {
	if m != nil {
		return m.SnecdNhr
	}
	return nil
}

type FibShNhinfoExtDet struct {
	NhInfoExtensionBase   *FibShExtBase         `protobuf:"bytes,1,opt,name=nh_info_extension_base,json=nhInfoExtensionBase,proto3" json:"nh_info_extension_base,omitempty"`
	NhInfoExtensionDetail *FibShNhinfoExtCmnDet `protobuf:"bytes,2,opt,name=nh_info_extension_detail,json=nhInfoExtensionDetail,proto3" json:"nh_info_extension_detail,omitempty"`
	XXX_NoUnkeyedLiteral  struct{}              `json:"-"`
	XXX_unrecognized      []byte                `json:"-"`
	XXX_sizecache         int32                 `json:"-"`
}

func (m *FibShNhinfoExtDet) Reset()         { *m = FibShNhinfoExtDet{} }
func (m *FibShNhinfoExtDet) String() string { return proto.CompactTextString(m) }
func (*FibShNhinfoExtDet) ProtoMessage()    {}
func (*FibShNhinfoExtDet) Descriptor() ([]byte, []int) {
	return fileDescriptor_aef39e804ffbecc2, []int{6}
}

func (m *FibShNhinfoExtDet) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FibShNhinfoExtDet.Unmarshal(m, b)
}
func (m *FibShNhinfoExtDet) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FibShNhinfoExtDet.Marshal(b, m, deterministic)
}
func (m *FibShNhinfoExtDet) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FibShNhinfoExtDet.Merge(m, src)
}
func (m *FibShNhinfoExtDet) XXX_Size() int {
	return xxx_messageInfo_FibShNhinfoExtDet.Size(m)
}
func (m *FibShNhinfoExtDet) XXX_DiscardUnknown() {
	xxx_messageInfo_FibShNhinfoExtDet.DiscardUnknown(m)
}

var xxx_messageInfo_FibShNhinfoExtDet proto.InternalMessageInfo

func (m *FibShNhinfoExtDet) GetNhInfoExtensionBase() *FibShExtBase {
	if m != nil {
		return m.NhInfoExtensionBase
	}
	return nil
}

func (m *FibShNhinfoExtDet) GetNhInfoExtensionDetail() *FibShNhinfoExtCmnDet {
	if m != nil {
		return m.NhInfoExtensionDetail
	}
	return nil
}

type FibShNhinfoExt struct {
	NhInfoExtensionDetail []*FibShNhinfoExtDet `protobuf:"bytes,1,rep,name=nh_info_extension_detail,json=nhInfoExtensionDetail,proto3" json:"nh_info_extension_detail,omitempty"`
	XXX_NoUnkeyedLiteral  struct{}             `json:"-"`
	XXX_unrecognized      []byte               `json:"-"`
	XXX_sizecache         int32                `json:"-"`
}

func (m *FibShNhinfoExt) Reset()         { *m = FibShNhinfoExt{} }
func (m *FibShNhinfoExt) String() string { return proto.CompactTextString(m) }
func (*FibShNhinfoExt) ProtoMessage()    {}
func (*FibShNhinfoExt) Descriptor() ([]byte, []int) {
	return fileDescriptor_aef39e804ffbecc2, []int{7}
}

func (m *FibShNhinfoExt) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FibShNhinfoExt.Unmarshal(m, b)
}
func (m *FibShNhinfoExt) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FibShNhinfoExt.Marshal(b, m, deterministic)
}
func (m *FibShNhinfoExt) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FibShNhinfoExt.Merge(m, src)
}
func (m *FibShNhinfoExt) XXX_Size() int {
	return xxx_messageInfo_FibShNhinfoExt.Size(m)
}
func (m *FibShNhinfoExt) XXX_DiscardUnknown() {
	xxx_messageInfo_FibShNhinfoExt.DiscardUnknown(m)
}

var xxx_messageInfo_FibShNhinfoExt proto.InternalMessageInfo

func (m *FibShNhinfoExt) GetNhInfoExtensionDetail() []*FibShNhinfoExtDet {
	if m != nil {
		return m.NhInfoExtensionDetail
	}
	return nil
}

type FibShNhinfo struct {
	SiLinkProto           uint32              `protobuf:"varint,50,opt,name=si_link_proto,json=siLinkProto,proto3" json:"si_link_proto,omitempty"`
	SiNhinfo              uint32              `protobuf:"varint,51,opt,name=si_nhinfo,json=siNhinfo,proto3" json:"si_nhinfo,omitempty"`
	SiNhtype              uint32              `protobuf:"varint,52,opt,name=si_nhtype,json=siNhtype,proto3" json:"si_nhtype,omitempty"`
	SiIfh                 uint32              `protobuf:"varint,53,opt,name=si_ifh,json=siIfh,proto3" json:"si_ifh,omitempty"`
	SiPfiInterfaceType    uint32              `protobuf:"varint,54,opt,name=si_pfi_interface_type,json=siPfiInterfaceType,proto3" json:"si_pfi_interface_type,omitempty"`
	SiAdjPtr              uint32              `protobuf:"varint,55,opt,name=si_adj_ptr,json=siAdjPtr,proto3" json:"si_adj_ptr,omitempty"`
	SiAdjPresent          bool                `protobuf:"varint,56,opt,name=si_adj_present,json=siAdjPresent,proto3" json:"si_adj_present,omitempty"`
	SiSpecialType         uint32              `protobuf:"varint,57,opt,name=si_special_type,json=siSpecialType,proto3" json:"si_special_type,omitempty"`
	SiRefcount            uint32              `protobuf:"varint,58,opt,name=si_refcount,json=siRefcount,proto3" json:"si_refcount,omitempty"`
	SiFlags               uint32              `protobuf:"varint,59,opt,name=si_flags,json=siFlags,proto3" json:"si_flags,omitempty"`
	SiAdjIf               uint32              `protobuf:"varint,60,opt,name=si_adj_if,json=siAdjIf,proto3" json:"si_adj_if,omitempty"`
	SiExtPfx              []uint32            `protobuf:"varint,61,rep,packed,name=si_ext_pfx,json=siExtPfx,proto3" json:"si_ext_pfx,omitempty"`
	SiExtPfxLen           uint32              `protobuf:"varint,62,opt,name=si_ext_pfx_len,json=siExtPfxLen,proto3" json:"si_ext_pfx_len,omitempty"`
	SiExtPfxProto         uint32              `protobuf:"varint,63,opt,name=si_ext_pfx_proto,json=siExtPfxProto,proto3" json:"si_ext_pfx_proto,omitempty"`
	SiAdjAddress          []uint32            `protobuf:"varint,64,rep,packed,name=si_adj_address,json=siAdjAddress,proto3" json:"si_adj_address,omitempty"`
	SiAdjAddrlen          uint32              `protobuf:"varint,65,opt,name=si_adj_addrlen,json=siAdjAddrlen,proto3" json:"si_adj_addrlen,omitempty"`
	SiAdjAddrProto        uint32              `protobuf:"varint,66,opt,name=si_adj_addr_proto,json=siAdjAddrProto,proto3" json:"si_adj_addr_proto,omitempty"`
	SiAdjRwLen            uint32              `protobuf:"varint,67,opt,name=si_adj_rw_len,json=siAdjRwLen,proto3" json:"si_adj_rw_len,omitempty"`
	SiAdjRw               []uint32            `protobuf:"varint,68,rep,packed,name=si_adj_rw,json=siAdjRw,proto3" json:"si_adj_rw,omitempty"`
	SiDepNhinfoType       uint32              `protobuf:"varint,69,opt,name=si_dep_nhinfo_type,json=siDepNhinfoType,proto3" json:"si_dep_nhinfo_type,omitempty"`
	SiDepNhinfo           uint32              `protobuf:"varint,70,opt,name=si_dep_nhinfo,json=siDepNhinfo,proto3" json:"si_dep_nhinfo,omitempty"`
	SiDepNhinfoIfh        uint32              `protobuf:"varint,71,opt,name=si_dep_nhinfo_ifh,json=siDepNhinfoIfh,proto3" json:"si_dep_nhinfo_ifh,omitempty"`
	SiBkupFrr             uint32              `protobuf:"varint,72,opt,name=si_bkup_frr,json=siBkupFrr,proto3" json:"si_bkup_frr,omitempty"`
	SiProtectFrr          uint32              `protobuf:"varint,73,opt,name=si_protect_frr,json=siProtectFrr,proto3" json:"si_protect_frr,omitempty"`
	SiBkupNhinfo          uint32              `protobuf:"varint,74,opt,name=si_bkup_nhinfo,json=siBkupNhinfo,proto3" json:"si_bkup_nhinfo,omitempty"`
	SiBkupIfh             uint32              `protobuf:"varint,75,opt,name=si_bkup_ifh,json=siBkupIfh,proto3" json:"si_bkup_ifh,omitempty"`
	SiBkupAddr            []uint32            `protobuf:"varint,76,rep,packed,name=si_bkup_addr,json=siBkupAddr,proto3" json:"si_bkup_addr,omitempty"`
	SiBkupAddrlen         uint32              `protobuf:"varint,77,opt,name=si_bkup_addrlen,json=siBkupAddrlen,proto3" json:"si_bkup_addrlen,omitempty"`
	SiBkupAddrProto       uint32              `protobuf:"varint,78,opt,name=si_bkup_addr_proto,json=siBkupAddrProto,proto3" json:"si_bkup_addr_proto,omitempty"`
	SiFrrActive           bool                `protobuf:"varint,79,opt,name=si_frr_active,json=siFrrActive,proto3" json:"si_frr_active,omitempty"`
	SiAttrIsExtMgd        bool                `protobuf:"varint,80,opt,name=si_attr_is_ext_mgd,json=siAttrIsExtMgd,proto3" json:"si_attr_is_ext_mgd,omitempty"`
	SiAttrIsIncomp        bool                `protobuf:"varint,81,opt,name=si_attr_is_incomp,json=siAttrIsIncomp,proto3" json:"si_attr_is_incomp,omitempty"`
	SiAttrIsTunnel        bool                `protobuf:"varint,82,opt,name=si_attr_is_tunnel,json=siAttrIsTunnel,proto3" json:"si_attr_is_tunnel,omitempty"`
	SiAttrIsTunnelSrte    bool                `protobuf:"varint,83,opt,name=si_attr_is_tunnel_srte,json=siAttrIsTunnelSrte,proto3" json:"si_attr_is_tunnel_srte,omitempty"`
	SiAttrIsGreTunnel     bool                `protobuf:"varint,84,opt,name=si_attr_is_gre_tunnel,json=siAttrIsGreTunnel,proto3" json:"si_attr_is_gre_tunnel,omitempty"`
	SiGreTi               uint32              `protobuf:"varint,85,opt,name=si_gre_ti,json=siGreTi,proto3" json:"si_gre_ti,omitempty"`
	SiGreTiFlags          uint32              `protobuf:"varint,86,opt,name=si_gre_ti_flags,json=siGreTiFlags,proto3" json:"si_gre_ti_flags,omitempty"`
	SiGreTiRefcnt         uint32              `protobuf:"varint,87,opt,name=si_gre_ti_refcnt,json=siGreTiRefcnt,proto3" json:"si_gre_ti_refcnt,omitempty"`
	SiGreTosPropagate     bool                `protobuf:"varint,88,opt,name=si_gre_tos_propagate,json=siGreTosPropagate,proto3" json:"si_gre_tos_propagate,omitempty"`
	SiHardware            []byte              `protobuf:"bytes,89,opt,name=si_hardware,json=siHardware,proto3" json:"si_hardware,omitempty"`
	SiNhinfoPtr           uint32              `protobuf:"varint,90,opt,name=si_nhinfo_ptr,json=siNhinfoPtr,proto3" json:"si_nhinfo_ptr,omitempty"`
	SiFnbIdbPtr           uint32              `protobuf:"varint,91,opt,name=si_fnb_idb_ptr,json=siFnbIdbPtr,proto3" json:"si_fnb_idb_ptr,omitempty"`
	SiAncIfh              uint32              `protobuf:"varint,92,opt,name=si_anc_ifh,json=siAncIfh,proto3" json:"si_anc_ifh,omitempty"`
	SiPwhe                *FibShNhinfoPwheExt `protobuf:"bytes,93,opt,name=si_pwhe,json=siPwhe,proto3" json:"si_pwhe,omitempty"`
	SiGreTiResolvingLeafp uint32              `protobuf:"varint,94,opt,name=si_gre_ti_resolving_leafp,json=siGreTiResolvingLeafp,proto3" json:"si_gre_ti_resolving_leafp,omitempty"`
	SiGreDestAddr         []byte              `protobuf:"bytes,95,opt,name=si_gre_dest_addr,json=siGreDestAddr,proto3" json:"si_gre_dest_addr,omitempty"`
	SiNhid                uint32              `protobuf:"varint,96,opt,name=si_nhid,json=siNhid,proto3" json:"si_nhid,omitempty"`
	SiUpdTs               uint64              `protobuf:"varint,97,opt,name=si_upd_ts,json=siUpdTs,proto3" json:"si_upd_ts,omitempty"`
	NhInfoExtension       *FibShNhinfoExt     `protobuf:"bytes,98,opt,name=nh_info_extension,json=nhInfoExtension,proto3" json:"nh_info_extension,omitempty"`
	XXX_NoUnkeyedLiteral  struct{}            `json:"-"`
	XXX_unrecognized      []byte              `json:"-"`
	XXX_sizecache         int32               `json:"-"`
}

func (m *FibShNhinfo) Reset()         { *m = FibShNhinfo{} }
func (m *FibShNhinfo) String() string { return proto.CompactTextString(m) }
func (*FibShNhinfo) ProtoMessage()    {}
func (*FibShNhinfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_aef39e804ffbecc2, []int{8}
}

func (m *FibShNhinfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FibShNhinfo.Unmarshal(m, b)
}
func (m *FibShNhinfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FibShNhinfo.Marshal(b, m, deterministic)
}
func (m *FibShNhinfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FibShNhinfo.Merge(m, src)
}
func (m *FibShNhinfo) XXX_Size() int {
	return xxx_messageInfo_FibShNhinfo.Size(m)
}
func (m *FibShNhinfo) XXX_DiscardUnknown() {
	xxx_messageInfo_FibShNhinfo.DiscardUnknown(m)
}

var xxx_messageInfo_FibShNhinfo proto.InternalMessageInfo

func (m *FibShNhinfo) GetSiLinkProto() uint32 {
	if m != nil {
		return m.SiLinkProto
	}
	return 0
}

func (m *FibShNhinfo) GetSiNhinfo() uint32 {
	if m != nil {
		return m.SiNhinfo
	}
	return 0
}

func (m *FibShNhinfo) GetSiNhtype() uint32 {
	if m != nil {
		return m.SiNhtype
	}
	return 0
}

func (m *FibShNhinfo) GetSiIfh() uint32 {
	if m != nil {
		return m.SiIfh
	}
	return 0
}

func (m *FibShNhinfo) GetSiPfiInterfaceType() uint32 {
	if m != nil {
		return m.SiPfiInterfaceType
	}
	return 0
}

func (m *FibShNhinfo) GetSiAdjPtr() uint32 {
	if m != nil {
		return m.SiAdjPtr
	}
	return 0
}

func (m *FibShNhinfo) GetSiAdjPresent() bool {
	if m != nil {
		return m.SiAdjPresent
	}
	return false
}

func (m *FibShNhinfo) GetSiSpecialType() uint32 {
	if m != nil {
		return m.SiSpecialType
	}
	return 0
}

func (m *FibShNhinfo) GetSiRefcount() uint32 {
	if m != nil {
		return m.SiRefcount
	}
	return 0
}

func (m *FibShNhinfo) GetSiFlags() uint32 {
	if m != nil {
		return m.SiFlags
	}
	return 0
}

func (m *FibShNhinfo) GetSiAdjIf() uint32 {
	if m != nil {
		return m.SiAdjIf
	}
	return 0
}

func (m *FibShNhinfo) GetSiExtPfx() []uint32 {
	if m != nil {
		return m.SiExtPfx
	}
	return nil
}

func (m *FibShNhinfo) GetSiExtPfxLen() uint32 {
	if m != nil {
		return m.SiExtPfxLen
	}
	return 0
}

func (m *FibShNhinfo) GetSiExtPfxProto() uint32 {
	if m != nil {
		return m.SiExtPfxProto
	}
	return 0
}

func (m *FibShNhinfo) GetSiAdjAddress() []uint32 {
	if m != nil {
		return m.SiAdjAddress
	}
	return nil
}

func (m *FibShNhinfo) GetSiAdjAddrlen() uint32 {
	if m != nil {
		return m.SiAdjAddrlen
	}
	return 0
}

func (m *FibShNhinfo) GetSiAdjAddrProto() uint32 {
	if m != nil {
		return m.SiAdjAddrProto
	}
	return 0
}

func (m *FibShNhinfo) GetSiAdjRwLen() uint32 {
	if m != nil {
		return m.SiAdjRwLen
	}
	return 0
}

func (m *FibShNhinfo) GetSiAdjRw() []uint32 {
	if m != nil {
		return m.SiAdjRw
	}
	return nil
}

func (m *FibShNhinfo) GetSiDepNhinfoType() uint32 {
	if m != nil {
		return m.SiDepNhinfoType
	}
	return 0
}

func (m *FibShNhinfo) GetSiDepNhinfo() uint32 {
	if m != nil {
		return m.SiDepNhinfo
	}
	return 0
}

func (m *FibShNhinfo) GetSiDepNhinfoIfh() uint32 {
	if m != nil {
		return m.SiDepNhinfoIfh
	}
	return 0
}

func (m *FibShNhinfo) GetSiBkupFrr() uint32 {
	if m != nil {
		return m.SiBkupFrr
	}
	return 0
}

func (m *FibShNhinfo) GetSiProtectFrr() uint32 {
	if m != nil {
		return m.SiProtectFrr
	}
	return 0
}

func (m *FibShNhinfo) GetSiBkupNhinfo() uint32 {
	if m != nil {
		return m.SiBkupNhinfo
	}
	return 0
}

func (m *FibShNhinfo) GetSiBkupIfh() uint32 {
	if m != nil {
		return m.SiBkupIfh
	}
	return 0
}

func (m *FibShNhinfo) GetSiBkupAddr() []uint32 {
	if m != nil {
		return m.SiBkupAddr
	}
	return nil
}

func (m *FibShNhinfo) GetSiBkupAddrlen() uint32 {
	if m != nil {
		return m.SiBkupAddrlen
	}
	return 0
}

func (m *FibShNhinfo) GetSiBkupAddrProto() uint32 {
	if m != nil {
		return m.SiBkupAddrProto
	}
	return 0
}

func (m *FibShNhinfo) GetSiFrrActive() bool {
	if m != nil {
		return m.SiFrrActive
	}
	return false
}

func (m *FibShNhinfo) GetSiAttrIsExtMgd() bool {
	if m != nil {
		return m.SiAttrIsExtMgd
	}
	return false
}

func (m *FibShNhinfo) GetSiAttrIsIncomp() bool {
	if m != nil {
		return m.SiAttrIsIncomp
	}
	return false
}

func (m *FibShNhinfo) GetSiAttrIsTunnel() bool {
	if m != nil {
		return m.SiAttrIsTunnel
	}
	return false
}

func (m *FibShNhinfo) GetSiAttrIsTunnelSrte() bool {
	if m != nil {
		return m.SiAttrIsTunnelSrte
	}
	return false
}

func (m *FibShNhinfo) GetSiAttrIsGreTunnel() bool {
	if m != nil {
		return m.SiAttrIsGreTunnel
	}
	return false
}

func (m *FibShNhinfo) GetSiGreTi() uint32 {
	if m != nil {
		return m.SiGreTi
	}
	return 0
}

func (m *FibShNhinfo) GetSiGreTiFlags() uint32 {
	if m != nil {
		return m.SiGreTiFlags
	}
	return 0
}

func (m *FibShNhinfo) GetSiGreTiRefcnt() uint32 {
	if m != nil {
		return m.SiGreTiRefcnt
	}
	return 0
}

func (m *FibShNhinfo) GetSiGreTosPropagate() bool {
	if m != nil {
		return m.SiGreTosPropagate
	}
	return false
}

func (m *FibShNhinfo) GetSiHardware() []byte {
	if m != nil {
		return m.SiHardware
	}
	return nil
}

func (m *FibShNhinfo) GetSiNhinfoPtr() uint32 {
	if m != nil {
		return m.SiNhinfoPtr
	}
	return 0
}

func (m *FibShNhinfo) GetSiFnbIdbPtr() uint32 {
	if m != nil {
		return m.SiFnbIdbPtr
	}
	return 0
}

func (m *FibShNhinfo) GetSiAncIfh() uint32 {
	if m != nil {
		return m.SiAncIfh
	}
	return 0
}

func (m *FibShNhinfo) GetSiPwhe() *FibShNhinfoPwheExt {
	if m != nil {
		return m.SiPwhe
	}
	return nil
}

func (m *FibShNhinfo) GetSiGreTiResolvingLeafp() uint32 {
	if m != nil {
		return m.SiGreTiResolvingLeafp
	}
	return 0
}

func (m *FibShNhinfo) GetSiGreDestAddr() []byte {
	if m != nil {
		return m.SiGreDestAddr
	}
	return nil
}

func (m *FibShNhinfo) GetSiNhid() uint32 {
	if m != nil {
		return m.SiNhid
	}
	return 0
}

func (m *FibShNhinfo) GetSiUpdTs() uint64 {
	if m != nil {
		return m.SiUpdTs
	}
	return 0
}

func (m *FibShNhinfo) GetNhInfoExtension() *FibShNhinfoExt {
	if m != nil {
		return m.NhInfoExtension
	}
	return nil
}

func init() {
	proto.RegisterType((*FibShNhinfo_KEYS)(nil), "cisco_ios_xr_fib_common_oper.fib.nodes.node.protocols.protocol.vrfs.vrf.nh_info_detail_hardware_ingress.nh_info_remote_detail_hardware_ingresses.nh_info_remote_detail_hardware_ingress.fib_sh_nhinfo_KEYS")
	proto.RegisterType((*FibShNhinfoPwheExt)(nil), "cisco_ios_xr_fib_common_oper.fib.nodes.node.protocols.protocol.vrfs.vrf.nh_info_detail_hardware_ingress.nh_info_remote_detail_hardware_ingresses.nh_info_remote_detail_hardware_ingress.fib_sh_nhinfo_pwhe_ext")
	proto.RegisterType((*FibShFibObjBase)(nil), "cisco_ios_xr_fib_common_oper.fib.nodes.node.protocols.protocol.vrfs.vrf.nh_info_detail_hardware_ingress.nh_info_remote_detail_hardware_ingresses.nh_info_remote_detail_hardware_ingress.fib_sh_fib_obj_base")
	proto.RegisterType((*FibShExtBase)(nil), "cisco_ios_xr_fib_common_oper.fib.nodes.node.protocols.protocol.vrfs.vrf.nh_info_detail_hardware_ingress.nh_info_remote_detail_hardware_ingresses.nh_info_remote_detail_hardware_ingress.fib_sh_ext_base")
	proto.RegisterType((*FibShNhinfoExtRepDet)(nil), "cisco_ios_xr_fib_common_oper.fib.nodes.node.protocols.protocol.vrfs.vrf.nh_info_detail_hardware_ingress.nh_info_remote_detail_hardware_ingresses.nh_info_remote_detail_hardware_ingress.fib_sh_nhinfo_ext_rep_det")
	proto.RegisterType((*FibShNhinfoExtCmnDet)(nil), "cisco_ios_xr_fib_common_oper.fib.nodes.node.protocols.protocol.vrfs.vrf.nh_info_detail_hardware_ingress.nh_info_remote_detail_hardware_ingresses.nh_info_remote_detail_hardware_ingress.fib_sh_nhinfo_ext_cmn_det")
	proto.RegisterType((*FibShNhinfoExtDet)(nil), "cisco_ios_xr_fib_common_oper.fib.nodes.node.protocols.protocol.vrfs.vrf.nh_info_detail_hardware_ingress.nh_info_remote_detail_hardware_ingresses.nh_info_remote_detail_hardware_ingress.fib_sh_nhinfo_ext_det")
	proto.RegisterType((*FibShNhinfoExt)(nil), "cisco_ios_xr_fib_common_oper.fib.nodes.node.protocols.protocol.vrfs.vrf.nh_info_detail_hardware_ingress.nh_info_remote_detail_hardware_ingresses.nh_info_remote_detail_hardware_ingress.fib_sh_nhinfo_ext")
	proto.RegisterType((*FibShNhinfo)(nil), "cisco_ios_xr_fib_common_oper.fib.nodes.node.protocols.protocol.vrfs.vrf.nh_info_detail_hardware_ingress.nh_info_remote_detail_hardware_ingresses.nh_info_remote_detail_hardware_ingress.fib_sh_nhinfo")
}

func init() { proto.RegisterFile("fib_sh_nhinfo.proto", fileDescriptor_aef39e804ffbecc2) }

var fileDescriptor_aef39e804ffbecc2 = []byte{
	// 1647 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xdc, 0x58, 0x5f, 0x73, 0x2b, 0x37,
	0x15, 0x1f, 0xe7, 0xa6, 0x49, 0xac, 0xc4, 0x37, 0x44, 0x69, 0x72, 0x95, 0xb6, 0xd0, 0xd4, 0xa5,
	0x10, 0xca, 0x8c, 0xa1, 0xee, 0x1f, 0x0a, 0x05, 0x4a, 0x72, 0x93, 0xb4, 0xa6, 0x69, 0xae, 0xd9,
	0xa4, 0x85, 0xf2, 0x4f, 0x68, 0x77, 0xb5, 0x5e, 0x25, 0x6b, 0xed, 0x22, 0x29, 0xb6, 0xef, 0x37,
	0x60, 0x18, 0x3e, 0x03, 0x0f, 0xbc, 0xf0, 0x11, 0xf8, 0x0a, 0x0c, 0x65, 0x60, 0x86, 0x8f, 0xc0,
	0x03, 0x33, 0xbc, 0x30, 0xbc, 0xf1, 0xc0, 0x0c, 0xc3, 0xe8, 0x48, 0x5a, 0xdb, 0x49, 0xb8, 0xc3,
	0xeb, 0xcd, 0x4b, 0x62, 0x9f, 0xf3, 0x93, 0x74, 0xce, 0xef, 0xfc, 0x74, 0xf6, 0xac, 0xd1, 0x66,
	0x26, 0x62, 0xaa, 0x73, 0x2a, 0x73, 0x21, 0xb3, 0xb2, 0x53, 0xa9, 0xd2, 0x94, 0xf8, 0x77, 0x8d,
	0x44, 0xe8, 0xa4, 0xa4, 0xa2, 0xd4, 0x74, 0xa2, 0xa8, 0x85, 0x24, 0xe5, 0x70, 0x58, 0x4a, 0x5a,
	0x56, 0x5c, 0x75, 0x32, 0x11, 0x77, 0x64, 0x99, 0x72, 0x0d, 0x7f, 0xdd, 0x9a, 0xa4, 0x2c, 0x74,
	0xfd, 0xa9, 0x33, 0x52, 0x99, 0xb6, 0x7f, 0x3a, 0x32, 0xa7, 0x76, 0x5f, 0x9a, 0x72, 0xc3, 0x44,
	0x41, 0x73, 0xa6, 0xd2, 0x31, 0x53, 0x9c, 0x0a, 0x39, 0x50, 0x5c, 0xeb, 0xda, 0xaf, 0xf8, 0xb0,
	0x34, 0xfc, 0x7f, 0xc1, 0xf8, 0xff, 0x0b, 0x6c, 0xff, 0xbb, 0x81, 0xf0, 0x5c, 0x46, 0xf4, 0x83,
	0xa3, 0x4f, 0xce, 0xf0, 0xf3, 0xa8, 0x69, 0x43, 0xa5, 0x92, 0x0d, 0x39, 0x69, 0xec, 0x36, 0xf6,
	0x9a, 0xd1, 0x8a, 0x35, 0x9c, 0xb2, 0x21, 0xc7, 0x2f, 0xa3, 0x56, 0x08, 0xdc, 0x01, 0x16, 0x00,
	0xb0, 0x16, 0x8c, 0x00, 0xda, 0x41, 0x2b, 0x23, 0x95, 0x39, 0xff, 0x3d, 0xf0, 0x2f, 0x8f, 0x54,
	0x06, 0xae, 0x57, 0xd1, 0x06, 0x44, 0x67, 0xb8, 0xca, 0x58, 0xe2, 0x0f, 0x59, 0x04, 0xcc, 0xba,
	0xcc, 0x7b, 0xc1, 0x1e, 0xb6, 0x91, 0x39, 0x85, 0x9d, 0xc9, 0x33, 0x6e, 0x1b, 0x99, 0xf7, 0x81,
	0xf4, 0x36, 0x6a, 0x59, 0x57, 0x36, 0xa1, 0x05, 0x97, 0x03, 0x93, 0x93, 0xa5, 0xdd, 0xc6, 0x5e,
	0x2b, 0x5a, 0x95, 0x79, 0x3f, 0x9b, 0x9c, 0x80, 0x09, 0x7f, 0x16, 0x21, 0x99, 0x53, 0x96, 0xa6,
	0x36, 0x59, 0xb2, 0x0c, 0x1b, 0x34, 0x65, 0xbe, 0xef, 0x0c, 0xed, 0x5f, 0x2e, 0xa0, 0xed, 0xf9,
	0xec, 0xab, 0x71, 0xce, 0x29, 0x9f, 0x18, 0xfc, 0x0e, 0x7a, 0x0e, 0x3e, 0xb3, 0xf4, 0x82, 0x25,
	0x5c, 0x26, 0x8f, 0x69, 0x52, 0x08, 0x2e, 0x0d, 0x4d, 0x99, 0x61, 0x40, 0x49, 0x2b, 0x7a, 0x60,
	0x11, 0xfb, 0x01, 0xf0, 0x10, 0xfc, 0x87, 0xcc, 0x30, 0xbc, 0x8d, 0x96, 0x46, 0x89, 0x79, 0x5c,
	0x39, 0x6a, 0x5a, 0x91, 0xff, 0x66, 0x33, 0x1f, 0x25, 0x2e, 0x73, 0xc9, 0x0a, 0x5a, 0xb0, 0x98,
	0x17, 0xc0, 0x4e, 0x2b, 0x5a, 0x1f, 0x25, 0x3d, 0x6f, 0x3f, 0xb1, 0x66, 0x1b, 0x7a, 0x32, 0xa6,
	0x5c, 0xb2, 0xb8, 0xe0, 0x29, 0xd0, 0xb3, 0x12, 0x35, 0x93, 0xf1, 0x91, 0x33, 0xd8, 0xad, 0x8a,
	0x2e, 0x2d, 0x47, 0x5c, 0xe5, 0x9c, 0xa5, 0x34, 0x7e, 0x6c, 0xb8, 0x06, 0x86, 0x5a, 0xd1, 0x7a,
	0xd1, 0x7d, 0xe4, 0xed, 0x07, 0xd6, 0x8c, 0x3f, 0x8f, 0xee, 0xa7, 0xa5, 0x79, 0xed, 0xe7, 0x74,
	0x54, 0x30, 0x49, 0x0d, 0x1b, 0x78, 0xaa, 0xd6, 0xc0, 0xfa, 0x71, 0xc1, 0xe4, 0x39, 0x1b, 0xb4,
	0xff, 0xda, 0xa8, 0xc5, 0x6d, 0xff, 0x95, 0xf1, 0x05, 0x8d, 0x99, 0xe6, 0xf8, 0x0d, 0xb4, 0x5d,
	0xc6, 0x17, 0x3c, 0x31, 0x54, 0xf1, 0x8c, 0x2b, 0x2e, 0x13, 0x4e, 0x93, 0xf2, 0x4a, 0x1a, 0xcf,
	0xc2, 0xb3, 0xce, 0x1b, 0x05, 0xe7, 0x43, 0xeb, 0xc3, 0x2f, 0xa1, 0x35, 0xbf, 0x2a, 0x2b, 0xd8,
	0x40, 0x7b, 0x22, 0x56, 0x9d, 0xed, 0xd8, 0x9a, 0xf0, 0x8b, 0xc8, 0x7f, 0xa5, 0x40, 0x95, 0xe3,
	0x01, 0x39, 0xd3, 0xb9, 0xa7, 0x2b, 0x00, 0xc4, 0x90, 0x53, 0x6d, 0xd8, 0xb0, 0x02, 0x26, 0x16,
	0xa3, 0x75, 0x0f, 0x13, 0x43, 0x7e, 0x66, 0xcd, 0xf8, 0x15, 0x74, 0xdf, 0x63, 0xab, 0x12, 0x08,
	0x06, 0x32, 0x16, 0xa3, 0x96, 0xb3, 0xf6, 0x9d, 0xb1, 0xfd, 0xb7, 0x05, 0xb4, 0xee, 0x93, 0xe4,
	0x13, 0xe3, 0x12, 0xfc, 0x47, 0xa3, 0x0e, 0xc4, 0x7e, 0x87, 0xb4, 0x56, 0xbb, 0x7f, 0x6c, 0x74,
	0x9e, 0xd2, 0x4b, 0xdd, 0xb9, 0xa5, 0x8a, 0x81, 0xd7, 0x03, 0x9b, 0x70, 0x17, 0x6d, 0x55, 0x4c,
	0x59, 0x31, 0x5f, 0xa3, 0x6c, 0x01, 0x28, 0xdb, 0x74, 0xce, 0x47, 0xb3, 0xc4, 0xe1, 0x0e, 0xda,
	0x8c, 0x59, 0x72, 0x79, 0x7d, 0xc5, 0x3d, 0x58, 0xb1, 0x61, 0x5d, 0x73, 0xf8, 0xf6, 0xa7, 0x0d,
	0xb4, 0x33, 0x7f, 0xb5, 0x2c, 0xdf, 0x8a, 0x57, 0x36, 0x6a, 0xfc, 0x26, 0x7a, 0x30, 0xcd, 0xa5,
	0x2a, 0x44, 0xc2, 0x0c, 0x4f, 0x9d, 0x0c, 0xbc, 0xa8, 0x6c, 0x23, 0xc8, 0xca, 0xa8, 0x76, 0x82,
	0x20, 0xde, 0x42, 0xe4, 0x96, 0x65, 0xd6, 0x94, 0x7a, 0x81, 0xdd, 0x58, 0x77, 0x9a, 0xf7, 0x52,
	0xfc, 0x2e, 0x7a, 0xe1, 0x96, 0x75, 0x75, 0x07, 0xf2, 0x0d, 0x6a, 0xe7, 0xfa, 0xda, 0xba, 0x15,
	0xb5, 0x7f, 0xb3, 0x70, 0x5b, 0x36, 0xc9, 0x50, 0x42, 0x36, 0x18, 0x2d, 0xd6, 0xa1, 0x37, 0x23,
	0xf8, 0x8c, 0xff, 0xd9, 0x40, 0x4d, 0x2d, 0x79, 0x62, 0xc3, 0x73, 0xc4, 0xae, 0x76, 0xff, 0xf2,
	0xd4, 0x4b, 0xea, 0x66, 0x29, 0xa3, 0x15, 0xc8, 0xf2, 0x34, 0x57, 0xed, 0xdf, 0x2e, 0xa2, 0xad,
	0x9b, 0x38, 0x4b, 0xd0, 0x7f, 0x1a, 0x68, 0x3b, 0x1c, 0xc4, 0x27, 0x86, 0x4b, 0x2d, 0x4a, 0x39,
	0x7b, 0xd9, 0x7e, 0xff, 0xd4, 0x33, 0x13, 0xba, 0x49, 0xb4, 0xe9, 0x54, 0x74, 0x14, 0xd2, 0x84,
	0x1b, 0xf7, 0xab, 0x85, 0xa9, 0x72, 0xa7, 0x04, 0xb8, 0x2d, 0xef, 0xa2, 0x38, 0xfc, 0xcd, 0x88,
	0xb6, 0xae, 0x91, 0x71, 0x08, 0x3b, 0xb4, 0x7f, 0xbd, 0x80, 0x36, 0x6e, 0x2c, 0xc2, 0xbf, 0x78,
	0x12, 0x49, 0x8d, 0xdd, 0x7b, 0x7b, 0xab, 0xdd, 0x3f, 0xdd, 0x25, 0x92, 0x9e, 0x40, 0xd0, 0xa7,
	0x1b, 0xa8, 0x35, 0xb7, 0xc0, 0x4e, 0x3b, 0x5a, 0xd0, 0x42, 0xc8, 0x4b, 0x3f, 0x0d, 0x75, 0xdd,
	0x03, 0x55, 0x8b, 0x13, 0x21, 0x2f, 0xdd, 0x44, 0xf4, 0x3c, 0x6a, 0x6a, 0xe1, 0x17, 0x90, 0xd7,
	0xc1, 0xbf, 0xa2, 0xc5, 0xa9, 0xdb, 0x20, 0x38, 0xa1, 0x53, 0xbd, 0x31, 0x75, 0x42, 0xb7, 0xda,
	0x42, 0x4b, 0x5a, 0x50, 0x91, 0xe5, 0xe4, 0x4d, 0xf0, 0x3c, 0xa3, 0x45, 0x2f, 0xcb, 0xf1, 0x6b,
	0x68, 0x4b, 0x0b, 0x5a, 0x65, 0x62, 0x66, 0x5a, 0x83, 0xf5, 0x6f, 0x01, 0x0a, 0x6b, 0xd1, 0xcf,
	0x44, 0xdd, 0x25, 0xa1, 0x45, 0xbf, 0x80, 0x90, 0x16, 0x76, 0x6a, 0xa2, 0x95, 0x51, 0xe4, 0x6b,
	0xe1, 0x9c, 0xfd, 0xf4, 0xa2, 0x6f, 0x94, 0x9d, 0x44, 0x82, 0x57, 0x71, 0xcd, 0xa5, 0x21, 0x6f,
	0xc3, 0x60, 0xb3, 0xe6, 0x10, 0xce, 0x86, 0xbf, 0x80, 0xd6, 0xb5, 0xa0, 0xba, 0xe2, 0x89, 0x60,
	0x85, 0x3b, 0xf0, 0xeb, 0xb0, 0x51, 0x4b, 0x8b, 0x33, 0x67, 0x85, 0xb3, 0x5e, 0x44, 0xab, 0x5a,
	0xd8, 0xa9, 0xc4, 0x8d, 0x23, 0xdf, 0x70, 0x03, 0x84, 0x16, 0x91, 0xb7, 0xd8, 0xe9, 0x51, 0x0b,
	0x3f, 0x80, 0xbc, 0x03, 0xde, 0x65, 0x2d, 0xdc, 0xf0, 0xf1, 0x1c, 0xd0, 0x61, 0x23, 0x11, 0x19,
	0xf9, 0x66, 0xf0, 0xed, 0xa7, 0x17, 0xbd, 0xcc, 0xe7, 0x60, 0x4b, 0x54, 0x65, 0x13, 0xf2, 0xad,
	0xdd, 0x7b, 0x2e, 0x87, 0xa3, 0x89, 0xe9, 0x67, 0x13, 0xfc, 0x32, 0xe4, 0xe0, 0xbd, 0x76, 0xf6,
	0x24, 0xdf, 0x0e, 0xa5, 0x70, 0x88, 0x13, 0x2e, 0xf1, 0x17, 0xd1, 0x67, 0x66, 0x40, 0xae, 0x62,
	0xef, 0x86, 0x1c, 0x1c, 0xcc, 0xd5, 0x6c, 0xca, 0x48, 0x98, 0x52, 0xbf, 0x03, 0xe7, 0x39, 0x46,
	0xfc, 0xa0, 0x7a, 0x0d, 0x65, 0xcf, 0xdc, 0x77, 0x13, 0x5c, 0x8d, 0x2a, 0xb8, 0xc4, 0x5f, 0x42,
	0x1b, 0x33, 0x28, 0x7f, 0xea, 0x01, 0x00, 0xef, 0xd7, 0x40, 0x77, 0xec, 0x4b, 0x20, 0x27, 0x0b,
	0x55, 0x63, 0xc8, 0xe1, 0x61, 0x20, 0x6f, 0x3f, 0xbd, 0x88, 0xc6, 0x36, 0x85, 0x29, 0x43, 0x6a,
	0x4c, 0x0e, 0x21, 0xa8, 0x65, 0xef, 0xc6, 0x5f, 0x46, 0x58, 0x0b, 0x9a, 0xf2, 0x2a, 0xe8, 0x19,
	0x8a, 0x74, 0xe4, 0xc6, 0x4f, 0x2d, 0x0e, 0x79, 0xe5, 0x54, 0x07, 0x65, 0x72, 0xd2, 0x9d, 0x82,
	0xc9, 0x71, 0xe0, 0xab, 0xc6, 0xf9, 0xd0, 0x67, 0x36, 0xb4, 0x5a, 0x7c, 0x2f, 0x84, 0x5e, 0xe3,
	0xac, 0x28, 0x3f, 0x07, 0x55, 0x8f, 0x2f, 0xaf, 0x2a, 0x9a, 0x29, 0x45, 0xde, 0x07, 0x50, 0x53,
	0x8b, 0x83, 0xcb, 0xab, 0xea, 0x58, 0x05, 0x8d, 0xd9, 0xe4, 0x61, 0xfa, 0x54, 0x8a, 0xf4, 0x02,
	0x57, 0x7d, 0x67, 0x9c, 0xa2, 0x60, 0x17, 0x1f, 0xd5, 0x77, 0x03, 0xca, 0x6e, 0xe4, 0xc3, 0x9a,
	0x39, 0xcb, 0x06, 0xf4, 0xc1, 0xec, 0x59, 0x36, 0x96, 0x5d, 0xb4, 0x16, 0xfc, 0x96, 0x72, 0x72,
	0x02, 0x34, 0x21, 0x07, 0xb0, 0x6c, 0x7b, 0x2d, 0xd7, 0x08, 0x4b, 0xf5, 0x87, 0x41, 0x07, 0x01,
	0x64, 0x6b, 0xe7, 0x18, 0xad, 0x71, 0xbe, 0x78, 0xa7, 0x81, 0xd1, 0x00, 0xad, 0x5f, 0x7d, 0xac,
	0xae, 0x95, 0xa2, 0x2c, 0x31, 0x62, 0xc4, 0xc9, 0x23, 0xb8, 0x45, 0xab, 0x5a, 0x1c, 0x2b, 0xb5,
	0x0f, 0x26, 0xfc, 0x2a, 0x6c, 0xc8, 0x8c, 0x51, 0x54, 0x68, 0x50, 0xe2, 0x70, 0x90, 0x92, 0x3e,
	0x00, 0xad, 0x1a, 0x8c, 0x51, 0x3d, 0x7d, 0x34, 0x31, 0x1f, 0x0e, 0xd2, 0x20, 0x1c, 0x8f, 0x15,
	0x32, 0x29, 0x87, 0x15, 0xf9, 0xde, 0x3c, 0xb4, 0x07, 0xd6, 0x6b, 0x50, 0x73, 0x25, 0x25, 0x2f,
	0x48, 0x34, 0x0f, 0x3d, 0x07, 0x2b, 0xee, 0xa2, 0xed, 0x1b, 0x50, 0xaa, 0x95, 0xe1, 0xe4, 0x0c,
	0xf0, 0x78, 0x1e, 0x7f, 0xa6, 0x0c, 0xc7, 0x5f, 0x85, 0x8e, 0x13, 0xd6, 0x0c, 0x14, 0x0f, 0x47,
	0x9c, 0xc3, 0x92, 0x8d, 0xb0, 0xe4, 0x3d, 0xc5, 0xfd, 0x29, 0x4e, 0xa6, 0x80, 0x14, 0xe4, 0xa3,
	0x70, 0x91, 0xad, 0x5f, 0xe0, 0x57, 0x80, 0x7c, 0xe7, 0xf3, 0x6d, 0xe0, 0xe3, 0x50, 0x65, 0x40,
	0xb8, 0x5e, 0xe0, 0x2e, 0xab, 0x87, 0xd9, 0x76, 0x22, 0x0d, 0xf9, 0x7e, 0x28, 0x12, 0xe0, 0x22,
	0x30, 0xe2, 0xaf, 0xa0, 0x67, 0x03, 0xb0, 0xd4, 0xb6, 0x44, 0x15, 0x1b, 0x30, 0xc3, 0xc9, 0x0f,
	0x42, 0x70, 0x16, 0x5c, 0xea, 0x7e, 0x70, 0xf8, 0x0e, 0x15, 0x9e, 0x05, 0xe4, 0x93, 0xdd, 0xc6,
	0xde, 0x9a, 0x95, 0xc7, 0xfb, 0xde, 0xe2, 0x2b, 0x19, 0x5e, 0x3e, 0x8d, 0x22, 0x3f, 0x0c, 0x77,
	0xc3, 0x29, 0xd0, 0x36, 0x4d, 0xd7, 0x70, 0x32, 0x19, 0x53, 0x91, 0xc6, 0x00, 0xfa, 0x51, 0x00,
	0x1d, 0xcb, 0xb8, 0x97, 0xc6, 0x16, 0xe4, 0xfb, 0xae, 0x4c, 0x40, 0xa8, 0x3f, 0xae, 0xfb, 0xae,
	0x4c, 0xac, 0x4e, 0xff, 0xde, 0x40, 0xcb, 0xf6, 0x52, 0x8c, 0x73, 0x4e, 0x7e, 0x02, 0xe3, 0xc6,
	0x9f, 0xef, 0xca, 0x93, 0x34, 0xbc, 0xb1, 0x47, 0x4b, 0x5a, 0xf4, 0xc7, 0x39, 0xc7, 0x6f, 0xa3,
	0x9d, 0xd9, 0x6a, 0xea, 0xb2, 0x18, 0x09, 0x39, 0xa0, 0x05, 0x67, 0x59, 0x45, 0x7e, 0x0a, 0xc4,
	0x6c, 0xd5, 0x65, 0xf5, 0xde, 0x13, 0xeb, 0x9c, 0xd1, 0x41, 0xca, 0xb5, 0x71, 0x37, 0x9a, 0x42,
	0xc9, 0x9c, 0x0e, 0x0e, 0xb9, 0x36, 0x70, 0xa9, 0x1f, 0x00, 0x9b, 0x32, 0x17, 0x29, 0xf9, 0x99,
	0x7b, 0xc1, 0x87, 0x7a, 0xa5, 0x5e, 0x8c, 0x57, 0x55, 0x4a, 0x8d, 0x26, 0x0c, 0xde, 0x8d, 0x96,
	0xb5, 0xf8, 0xa8, 0x4a, 0xcf, 0x35, 0xfe, 0x57, 0xc3, 0xff, 0xee, 0x31, 0x3b, 0xde, 0x90, 0x18,
	0xaa, 0xf1, 0x87, 0x3b, 0x34, 0xd7, 0xb8, 0x1f, 0x71, 0x66, 0x66, 0x9a, 0x78, 0x09, 0xa2, 0x7c,
	0xfd, 0xbf, 0x01, 0x00, 0x00, 0xff, 0xff, 0x0f, 0x0a, 0x91, 0x94, 0x3c, 0x13, 0x00, 0x00,
}
