/*
Copyright 2019 Cisco Systems

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: an_remote_log_servers.proto

package cisco_ios_xr_infra_syslog_oper_syslog_an_remote_servers

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type AnRemoteLogServers_KEYS struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AnRemoteLogServers_KEYS) Reset()         { *m = AnRemoteLogServers_KEYS{} }
func (m *AnRemoteLogServers_KEYS) String() string { return proto.CompactTextString(m) }
func (*AnRemoteLogServers_KEYS) ProtoMessage()    {}
func (*AnRemoteLogServers_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_8985cd9b8696e3a6, []int{0}
}

func (m *AnRemoteLogServers_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AnRemoteLogServers_KEYS.Unmarshal(m, b)
}
func (m *AnRemoteLogServers_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AnRemoteLogServers_KEYS.Marshal(b, m, deterministic)
}
func (m *AnRemoteLogServers_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AnRemoteLogServers_KEYS.Merge(m, src)
}
func (m *AnRemoteLogServers_KEYS) XXX_Size() int {
	return xxx_messageInfo_AnRemoteLogServers_KEYS.Size(m)
}
func (m *AnRemoteLogServers_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_AnRemoteLogServers_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_AnRemoteLogServers_KEYS proto.InternalMessageInfo

type AnRemoteLogServerT struct {
	IpAddress            string   `protobuf:"bytes,1,opt,name=ip_address,json=ipAddress,proto3" json:"ip_address,omitempty"`
	VrfName              string   `protobuf:"bytes,2,opt,name=vrf_name,json=vrfName,proto3" json:"vrf_name,omitempty"`
	VrfSeverity          string   `protobuf:"bytes,3,opt,name=vrf_severity,json=vrfSeverity,proto3" json:"vrf_severity,omitempty"`
	RhDiscriminator      string   `protobuf:"bytes,4,opt,name=rh_discriminator,json=rhDiscriminator,proto3" json:"rh_discriminator,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AnRemoteLogServerT) Reset()         { *m = AnRemoteLogServerT{} }
func (m *AnRemoteLogServerT) String() string { return proto.CompactTextString(m) }
func (*AnRemoteLogServerT) ProtoMessage()    {}
func (*AnRemoteLogServerT) Descriptor() ([]byte, []int) {
	return fileDescriptor_8985cd9b8696e3a6, []int{1}
}

func (m *AnRemoteLogServerT) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AnRemoteLogServerT.Unmarshal(m, b)
}
func (m *AnRemoteLogServerT) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AnRemoteLogServerT.Marshal(b, m, deterministic)
}
func (m *AnRemoteLogServerT) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AnRemoteLogServerT.Merge(m, src)
}
func (m *AnRemoteLogServerT) XXX_Size() int {
	return xxx_messageInfo_AnRemoteLogServerT.Size(m)
}
func (m *AnRemoteLogServerT) XXX_DiscardUnknown() {
	xxx_messageInfo_AnRemoteLogServerT.DiscardUnknown(m)
}

var xxx_messageInfo_AnRemoteLogServerT proto.InternalMessageInfo

func (m *AnRemoteLogServerT) GetIpAddress() string {
	if m != nil {
		return m.IpAddress
	}
	return ""
}

func (m *AnRemoteLogServerT) GetVrfName() string {
	if m != nil {
		return m.VrfName
	}
	return ""
}

func (m *AnRemoteLogServerT) GetVrfSeverity() string {
	if m != nil {
		return m.VrfSeverity
	}
	return ""
}

func (m *AnRemoteLogServerT) GetRhDiscriminator() string {
	if m != nil {
		return m.RhDiscriminator
	}
	return ""
}

type AnRemoteLogServers struct {
	AnRemoteLogServer    []*AnRemoteLogServerT `protobuf:"bytes,50,rep,name=an_remote_log_server,json=anRemoteLogServer,proto3" json:"an_remote_log_server,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *AnRemoteLogServers) Reset()         { *m = AnRemoteLogServers{} }
func (m *AnRemoteLogServers) String() string { return proto.CompactTextString(m) }
func (*AnRemoteLogServers) ProtoMessage()    {}
func (*AnRemoteLogServers) Descriptor() ([]byte, []int) {
	return fileDescriptor_8985cd9b8696e3a6, []int{2}
}

func (m *AnRemoteLogServers) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AnRemoteLogServers.Unmarshal(m, b)
}
func (m *AnRemoteLogServers) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AnRemoteLogServers.Marshal(b, m, deterministic)
}
func (m *AnRemoteLogServers) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AnRemoteLogServers.Merge(m, src)
}
func (m *AnRemoteLogServers) XXX_Size() int {
	return xxx_messageInfo_AnRemoteLogServers.Size(m)
}
func (m *AnRemoteLogServers) XXX_DiscardUnknown() {
	xxx_messageInfo_AnRemoteLogServers.DiscardUnknown(m)
}

var xxx_messageInfo_AnRemoteLogServers proto.InternalMessageInfo

func (m *AnRemoteLogServers) GetAnRemoteLogServer() []*AnRemoteLogServerT {
	if m != nil {
		return m.AnRemoteLogServer
	}
	return nil
}

func init() {
	proto.RegisterType((*AnRemoteLogServers_KEYS)(nil), "cisco_ios_xr_infra_syslog_oper.syslog.an_remote_servers.an_remote_log_servers_KEYS")
	proto.RegisterType((*AnRemoteLogServerT)(nil), "cisco_ios_xr_infra_syslog_oper.syslog.an_remote_servers.an_remote_log_server_t")
	proto.RegisterType((*AnRemoteLogServers)(nil), "cisco_ios_xr_infra_syslog_oper.syslog.an_remote_servers.an_remote_log_servers")
}

func init() { proto.RegisterFile("an_remote_log_servers.proto", fileDescriptor_8985cd9b8696e3a6) }

var fileDescriptor_8985cd9b8696e3a6 = []byte{
	// 259 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x91, 0x3f, 0x4b, 0x03, 0x41,
	0x10, 0xc5, 0x39, 0x23, 0x6a, 0x26, 0x82, 0xba, 0xa8, 0x9c, 0xff, 0x20, 0x5e, 0x15, 0x9b, 0x2b,
	0x62, 0x61, 0x2d, 0x68, 0xa5, 0x28, 0xdc, 0x55, 0x56, 0xc3, 0x7a, 0x37, 0x97, 0x2c, 0x78, 0xb7,
	0xc7, 0xcc, 0xb2, 0x98, 0xce, 0xcf, 0x61, 0xe5, 0x47, 0x95, 0x6c, 0x02, 0x5a, 0x6c, 0x95, 0x6e,
	0xf9, 0xfd, 0xde, 0x3e, 0xd8, 0xb7, 0x70, 0xa1, 0x3b, 0x64, 0x6a, 0xad, 0x23, 0xfc, 0xb0, 0x33,
	0x14, 0x62, 0x4f, 0x2c, 0x79, 0xcf, 0xd6, 0x59, 0x75, 0x57, 0x19, 0xa9, 0x2c, 0x1a, 0x2b, 0xf8,
	0xc9, 0x68, 0xba, 0x86, 0x35, 0xca, 0x42, 0x96, 0x41, 0xdb, 0x13, 0xe7, 0xab, 0x73, 0xfe, 0x57,
	0xb1, 0xbe, 0x9e, 0x5d, 0xc2, 0x79, 0xb4, 0x17, 0x9f, 0x1e, 0xdf, 0xca, 0xec, 0x27, 0x81, 0xd3,
	0x98, 0x46, 0xa7, 0xae, 0x00, 0x4c, 0x8f, 0xba, 0xae, 0x99, 0x44, 0xd2, 0x64, 0x9c, 0x4c, 0x86,
	0xc5, 0xd0, 0xf4, 0xf7, 0x2b, 0xa0, 0xce, 0x60, 0xcf, 0x73, 0x83, 0x9d, 0x6e, 0x29, 0xdd, 0x0a,
	0x72, 0xd7, 0x73, 0xf3, 0xa2, 0x5b, 0x52, 0xd7, 0xb0, 0xbf, 0x54, 0x42, 0x9e, 0xd8, 0xb8, 0x45,
	0x3a, 0x08, 0x7a, 0xe4, 0xb9, 0x29, 0xd7, 0x48, 0xdd, 0xc0, 0x21, 0xcf, 0xb1, 0x36, 0x52, 0xb1,
	0x69, 0x4d, 0xa7, 0x9d, 0xe5, 0x74, 0x3b, 0xc4, 0x0e, 0x78, 0xfe, 0xf0, 0x1f, 0x67, 0xdf, 0x09,
	0x9c, 0x44, 0x5f, 0xa0, 0xbe, 0x12, 0x38, 0x8e, 0x99, 0x74, 0x3a, 0x1e, 0x4c, 0x46, 0xd3, 0xd7,
	0x7c, 0xc3, 0xcd, 0xf2, 0xf8, 0x22, 0xc5, 0x91, 0xee, 0x8a, 0x80, 0x9f, 0xed, 0xac, 0x0c, 0xf0,
	0x7d, 0x27, 0xfc, 0xce, 0xed, 0x6f, 0x00, 0x00, 0x00, 0xff, 0xff, 0xc6, 0xd5, 0xfb, 0x04, 0xbc,
	0x01, 0x00, 0x00,
}
