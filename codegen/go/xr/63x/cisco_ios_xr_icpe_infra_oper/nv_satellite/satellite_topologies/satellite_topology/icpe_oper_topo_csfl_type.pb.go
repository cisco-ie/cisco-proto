/*
Copyright 2019 Cisco Systems

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: icpe_oper_topo_csfl_type.proto

package cisco_ios_xr_icpe_infra_oper_nv_satellite_satellite_topologies_satellite_topology

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type IcpeOperTopoCsflType_KEYS struct {
	InterfaceName        string   `protobuf:"bytes,1,opt,name=interface_name,json=interfaceName,proto3" json:"interface_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IcpeOperTopoCsflType_KEYS) Reset()         { *m = IcpeOperTopoCsflType_KEYS{} }
func (m *IcpeOperTopoCsflType_KEYS) String() string { return proto.CompactTextString(m) }
func (*IcpeOperTopoCsflType_KEYS) ProtoMessage()    {}
func (*IcpeOperTopoCsflType_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_f5e3f7c0b5f6f91c, []int{0}
}

func (m *IcpeOperTopoCsflType_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IcpeOperTopoCsflType_KEYS.Unmarshal(m, b)
}
func (m *IcpeOperTopoCsflType_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IcpeOperTopoCsflType_KEYS.Marshal(b, m, deterministic)
}
func (m *IcpeOperTopoCsflType_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IcpeOperTopoCsflType_KEYS.Merge(m, src)
}
func (m *IcpeOperTopoCsflType_KEYS) XXX_Size() int {
	return xxx_messageInfo_IcpeOperTopoCsflType_KEYS.Size(m)
}
func (m *IcpeOperTopoCsflType_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_IcpeOperTopoCsflType_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_IcpeOperTopoCsflType_KEYS proto.InternalMessageInfo

func (m *IcpeOperTopoCsflType_KEYS) GetInterfaceName() string {
	if m != nil {
		return m.InterfaceName
	}
	return ""
}

type IcpeOperTopoDsfl struct {
	InterfaceNameXr      string   `protobuf:"bytes,1,opt,name=interface_name_xr,json=interfaceNameXr,proto3" json:"interface_name_xr,omitempty"`
	InterfaceHandle      string   `protobuf:"bytes,2,opt,name=interface_handle,json=interfaceHandle,proto3" json:"interface_handle,omitempty"`
	DiscoveryRunning     bool     `protobuf:"varint,3,opt,name=discovery_running,json=discoveryRunning,proto3" json:"discovery_running,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IcpeOperTopoDsfl) Reset()         { *m = IcpeOperTopoDsfl{} }
func (m *IcpeOperTopoDsfl) String() string { return proto.CompactTextString(m) }
func (*IcpeOperTopoDsfl) ProtoMessage()    {}
func (*IcpeOperTopoDsfl) Descriptor() ([]byte, []int) {
	return fileDescriptor_f5e3f7c0b5f6f91c, []int{1}
}

func (m *IcpeOperTopoDsfl) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IcpeOperTopoDsfl.Unmarshal(m, b)
}
func (m *IcpeOperTopoDsfl) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IcpeOperTopoDsfl.Marshal(b, m, deterministic)
}
func (m *IcpeOperTopoDsfl) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IcpeOperTopoDsfl.Merge(m, src)
}
func (m *IcpeOperTopoDsfl) XXX_Size() int {
	return xxx_messageInfo_IcpeOperTopoDsfl.Size(m)
}
func (m *IcpeOperTopoDsfl) XXX_DiscardUnknown() {
	xxx_messageInfo_IcpeOperTopoDsfl.DiscardUnknown(m)
}

var xxx_messageInfo_IcpeOperTopoDsfl proto.InternalMessageInfo

func (m *IcpeOperTopoDsfl) GetInterfaceNameXr() string {
	if m != nil {
		return m.InterfaceNameXr
	}
	return ""
}

func (m *IcpeOperTopoDsfl) GetInterfaceHandle() string {
	if m != nil {
		return m.InterfaceHandle
	}
	return ""
}

func (m *IcpeOperTopoDsfl) GetDiscoveryRunning() bool {
	if m != nil {
		return m.DiscoveryRunning
	}
	return false
}

type IcpeOperTopoRemoteSfl struct {
	MacAddress           string   `protobuf:"bytes,1,opt,name=mac_address,json=macAddress,proto3" json:"mac_address,omitempty"`
	Source               string   `protobuf:"bytes,2,opt,name=source,proto3" json:"source,omitempty"`
	RemoteIsSatellite    bool     `protobuf:"varint,3,opt,name=remote_is_satellite,json=remoteIsSatellite,proto3" json:"remote_is_satellite,omitempty"`
	RemoteIsLocalHost    bool     `protobuf:"varint,4,opt,name=remote_is_local_host,json=remoteIsLocalHost,proto3" json:"remote_is_local_host,omitempty"`
	IclId                uint32   `protobuf:"varint,5,opt,name=icl_id,json=iclId,proto3" json:"icl_id,omitempty"`
	InterfaceHandle      string   `protobuf:"bytes,6,opt,name=interface_handle,json=interfaceHandle,proto3" json:"interface_handle,omitempty"`
	InterfaceNameXr      string   `protobuf:"bytes,7,opt,name=interface_name_xr,json=interfaceNameXr,proto3" json:"interface_name_xr,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IcpeOperTopoRemoteSfl) Reset()         { *m = IcpeOperTopoRemoteSfl{} }
func (m *IcpeOperTopoRemoteSfl) String() string { return proto.CompactTextString(m) }
func (*IcpeOperTopoRemoteSfl) ProtoMessage()    {}
func (*IcpeOperTopoRemoteSfl) Descriptor() ([]byte, []int) {
	return fileDescriptor_f5e3f7c0b5f6f91c, []int{2}
}

func (m *IcpeOperTopoRemoteSfl) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IcpeOperTopoRemoteSfl.Unmarshal(m, b)
}
func (m *IcpeOperTopoRemoteSfl) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IcpeOperTopoRemoteSfl.Marshal(b, m, deterministic)
}
func (m *IcpeOperTopoRemoteSfl) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IcpeOperTopoRemoteSfl.Merge(m, src)
}
func (m *IcpeOperTopoRemoteSfl) XXX_Size() int {
	return xxx_messageInfo_IcpeOperTopoRemoteSfl.Size(m)
}
func (m *IcpeOperTopoRemoteSfl) XXX_DiscardUnknown() {
	xxx_messageInfo_IcpeOperTopoRemoteSfl.DiscardUnknown(m)
}

var xxx_messageInfo_IcpeOperTopoRemoteSfl proto.InternalMessageInfo

func (m *IcpeOperTopoRemoteSfl) GetMacAddress() string {
	if m != nil {
		return m.MacAddress
	}
	return ""
}

func (m *IcpeOperTopoRemoteSfl) GetSource() string {
	if m != nil {
		return m.Source
	}
	return ""
}

func (m *IcpeOperTopoRemoteSfl) GetRemoteIsSatellite() bool {
	if m != nil {
		return m.RemoteIsSatellite
	}
	return false
}

func (m *IcpeOperTopoRemoteSfl) GetRemoteIsLocalHost() bool {
	if m != nil {
		return m.RemoteIsLocalHost
	}
	return false
}

func (m *IcpeOperTopoRemoteSfl) GetIclId() uint32 {
	if m != nil {
		return m.IclId
	}
	return 0
}

func (m *IcpeOperTopoRemoteSfl) GetInterfaceHandle() string {
	if m != nil {
		return m.InterfaceHandle
	}
	return ""
}

func (m *IcpeOperTopoRemoteSfl) GetInterfaceNameXr() string {
	if m != nil {
		return m.InterfaceNameXr
	}
	return ""
}

type IcpeOperTopoLocalSfl struct {
	IclId                uint32                   `protobuf:"varint,1,opt,name=icl_id,json=iclId,proto3" json:"icl_id,omitempty"`
	InterfaceNameXr      string                   `protobuf:"bytes,2,opt,name=interface_name_xr,json=interfaceNameXr,proto3" json:"interface_name_xr,omitempty"`
	DisplayName          string                   `protobuf:"bytes,3,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	Redundant            bool                     `protobuf:"varint,4,opt,name=redundant,proto3" json:"redundant,omitempty"`
	Active               bool                     `protobuf:"varint,5,opt,name=active,proto3" json:"active,omitempty"`
	Obsolete             bool                     `protobuf:"varint,6,opt,name=obsolete,proto3" json:"obsolete,omitempty"`
	RemoteDevice         []*IcpeOperTopoRemoteSfl `protobuf:"bytes,7,rep,name=remote_device,json=remoteDevice,proto3" json:"remote_device,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *IcpeOperTopoLocalSfl) Reset()         { *m = IcpeOperTopoLocalSfl{} }
func (m *IcpeOperTopoLocalSfl) String() string { return proto.CompactTextString(m) }
func (*IcpeOperTopoLocalSfl) ProtoMessage()    {}
func (*IcpeOperTopoLocalSfl) Descriptor() ([]byte, []int) {
	return fileDescriptor_f5e3f7c0b5f6f91c, []int{3}
}

func (m *IcpeOperTopoLocalSfl) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IcpeOperTopoLocalSfl.Unmarshal(m, b)
}
func (m *IcpeOperTopoLocalSfl) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IcpeOperTopoLocalSfl.Marshal(b, m, deterministic)
}
func (m *IcpeOperTopoLocalSfl) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IcpeOperTopoLocalSfl.Merge(m, src)
}
func (m *IcpeOperTopoLocalSfl) XXX_Size() int {
	return xxx_messageInfo_IcpeOperTopoLocalSfl.Size(m)
}
func (m *IcpeOperTopoLocalSfl) XXX_DiscardUnknown() {
	xxx_messageInfo_IcpeOperTopoLocalSfl.DiscardUnknown(m)
}

var xxx_messageInfo_IcpeOperTopoLocalSfl proto.InternalMessageInfo

func (m *IcpeOperTopoLocalSfl) GetIclId() uint32 {
	if m != nil {
		return m.IclId
	}
	return 0
}

func (m *IcpeOperTopoLocalSfl) GetInterfaceNameXr() string {
	if m != nil {
		return m.InterfaceNameXr
	}
	return ""
}

func (m *IcpeOperTopoLocalSfl) GetDisplayName() string {
	if m != nil {
		return m.DisplayName
	}
	return ""
}

func (m *IcpeOperTopoLocalSfl) GetRedundant() bool {
	if m != nil {
		return m.Redundant
	}
	return false
}

func (m *IcpeOperTopoLocalSfl) GetActive() bool {
	if m != nil {
		return m.Active
	}
	return false
}

func (m *IcpeOperTopoLocalSfl) GetObsolete() bool {
	if m != nil {
		return m.Obsolete
	}
	return false
}

func (m *IcpeOperTopoLocalSfl) GetRemoteDevice() []*IcpeOperTopoRemoteSfl {
	if m != nil {
		return m.RemoteDevice
	}
	return nil
}

type IcpeOperTopoSattun struct {
	MacAddress                  string                  `protobuf:"bytes,1,opt,name=mac_address,json=macAddress,proto3" json:"mac_address,omitempty"`
	Configured                  bool                    `protobuf:"varint,2,opt,name=configured,proto3" json:"configured,omitempty"`
	NumHops                     uint32                  `protobuf:"varint,3,opt,name=num_hops,json=numHops,proto3" json:"num_hops,omitempty"`
	Type                        string                  `protobuf:"bytes,4,opt,name=type,proto3" json:"type,omitempty"`
	SatelliteId                 uint32                  `protobuf:"varint,5,opt,name=satellite_id,json=satelliteId,proto3" json:"satellite_id,omitempty"`
	ReceivedSerialNumber        string                  `protobuf:"bytes,6,opt,name=received_serial_number,json=receivedSerialNumber,proto3" json:"received_serial_number,omitempty"`
	ReceivedSerialNumberPresent bool                    `protobuf:"varint,7,opt,name=received_serial_number_present,json=receivedSerialNumberPresent,proto3" json:"received_serial_number_present,omitempty"`
	VlanId                      uint32                  `protobuf:"varint,8,opt,name=vlan_id,json=vlanId,proto3" json:"vlan_id,omitempty"`
	DisplayName                 string                  `protobuf:"bytes,9,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	ConflictReason              string                  `protobuf:"bytes,10,opt,name=conflict_reason,json=conflictReason,proto3" json:"conflict_reason,omitempty"`
	ConflictContext             string                  `protobuf:"bytes,11,opt,name=conflict_context,json=conflictContext,proto3" json:"conflict_context,omitempty"`
	FabricLink                  []*IcpeOperTopoLocalSfl `protobuf:"bytes,12,rep,name=fabric_link,json=fabricLink,proto3" json:"fabric_link,omitempty"`
	XXX_NoUnkeyedLiteral        struct{}                `json:"-"`
	XXX_unrecognized            []byte                  `json:"-"`
	XXX_sizecache               int32                   `json:"-"`
}

func (m *IcpeOperTopoSattun) Reset()         { *m = IcpeOperTopoSattun{} }
func (m *IcpeOperTopoSattun) String() string { return proto.CompactTextString(m) }
func (*IcpeOperTopoSattun) ProtoMessage()    {}
func (*IcpeOperTopoSattun) Descriptor() ([]byte, []int) {
	return fileDescriptor_f5e3f7c0b5f6f91c, []int{4}
}

func (m *IcpeOperTopoSattun) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IcpeOperTopoSattun.Unmarshal(m, b)
}
func (m *IcpeOperTopoSattun) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IcpeOperTopoSattun.Marshal(b, m, deterministic)
}
func (m *IcpeOperTopoSattun) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IcpeOperTopoSattun.Merge(m, src)
}
func (m *IcpeOperTopoSattun) XXX_Size() int {
	return xxx_messageInfo_IcpeOperTopoSattun.Size(m)
}
func (m *IcpeOperTopoSattun) XXX_DiscardUnknown() {
	xxx_messageInfo_IcpeOperTopoSattun.DiscardUnknown(m)
}

var xxx_messageInfo_IcpeOperTopoSattun proto.InternalMessageInfo

func (m *IcpeOperTopoSattun) GetMacAddress() string {
	if m != nil {
		return m.MacAddress
	}
	return ""
}

func (m *IcpeOperTopoSattun) GetConfigured() bool {
	if m != nil {
		return m.Configured
	}
	return false
}

func (m *IcpeOperTopoSattun) GetNumHops() uint32 {
	if m != nil {
		return m.NumHops
	}
	return 0
}

func (m *IcpeOperTopoSattun) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *IcpeOperTopoSattun) GetSatelliteId() uint32 {
	if m != nil {
		return m.SatelliteId
	}
	return 0
}

func (m *IcpeOperTopoSattun) GetReceivedSerialNumber() string {
	if m != nil {
		return m.ReceivedSerialNumber
	}
	return ""
}

func (m *IcpeOperTopoSattun) GetReceivedSerialNumberPresent() bool {
	if m != nil {
		return m.ReceivedSerialNumberPresent
	}
	return false
}

func (m *IcpeOperTopoSattun) GetVlanId() uint32 {
	if m != nil {
		return m.VlanId
	}
	return 0
}

func (m *IcpeOperTopoSattun) GetDisplayName() string {
	if m != nil {
		return m.DisplayName
	}
	return ""
}

func (m *IcpeOperTopoSattun) GetConflictReason() string {
	if m != nil {
		return m.ConflictReason
	}
	return ""
}

func (m *IcpeOperTopoSattun) GetConflictContext() string {
	if m != nil {
		return m.ConflictContext
	}
	return ""
}

func (m *IcpeOperTopoSattun) GetFabricLink() []*IcpeOperTopoLocalSfl {
	if m != nil {
		return m.FabricLink
	}
	return nil
}

type IcpeOperTopoCsflType struct {
	InterfaceNameXr      string                `protobuf:"bytes,50,opt,name=interface_name_xr,json=interfaceNameXr,proto3" json:"interface_name_xr,omitempty"`
	InterfaceHandle      string                `protobuf:"bytes,51,opt,name=interface_handle,json=interfaceHandle,proto3" json:"interface_handle,omitempty"`
	RedundancyIccpGroup  uint32                `protobuf:"varint,52,opt,name=redundancy_iccp_group,json=redundancyIccpGroup,proto3" json:"redundancy_iccp_group,omitempty"`
	IsPhysical           bool                  `protobuf:"varint,53,opt,name=is_physical,json=isPhysical,proto3" json:"is_physical,omitempty"`
	RingWhole            bool                  `protobuf:"varint,54,opt,name=ring_whole,json=ringWhole,proto3" json:"ring_whole,omitempty"`
	DiscoveredLink       []*IcpeOperTopoDsfl   `protobuf:"bytes,55,rep,name=discovered_link,json=discoveredLink,proto3" json:"discovered_link,omitempty"`
	Satellite            []*IcpeOperTopoSattun `protobuf:"bytes,56,rep,name=satellite,proto3" json:"satellite,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *IcpeOperTopoCsflType) Reset()         { *m = IcpeOperTopoCsflType{} }
func (m *IcpeOperTopoCsflType) String() string { return proto.CompactTextString(m) }
func (*IcpeOperTopoCsflType) ProtoMessage()    {}
func (*IcpeOperTopoCsflType) Descriptor() ([]byte, []int) {
	return fileDescriptor_f5e3f7c0b5f6f91c, []int{5}
}

func (m *IcpeOperTopoCsflType) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IcpeOperTopoCsflType.Unmarshal(m, b)
}
func (m *IcpeOperTopoCsflType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IcpeOperTopoCsflType.Marshal(b, m, deterministic)
}
func (m *IcpeOperTopoCsflType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IcpeOperTopoCsflType.Merge(m, src)
}
func (m *IcpeOperTopoCsflType) XXX_Size() int {
	return xxx_messageInfo_IcpeOperTopoCsflType.Size(m)
}
func (m *IcpeOperTopoCsflType) XXX_DiscardUnknown() {
	xxx_messageInfo_IcpeOperTopoCsflType.DiscardUnknown(m)
}

var xxx_messageInfo_IcpeOperTopoCsflType proto.InternalMessageInfo

func (m *IcpeOperTopoCsflType) GetInterfaceNameXr() string {
	if m != nil {
		return m.InterfaceNameXr
	}
	return ""
}

func (m *IcpeOperTopoCsflType) GetInterfaceHandle() string {
	if m != nil {
		return m.InterfaceHandle
	}
	return ""
}

func (m *IcpeOperTopoCsflType) GetRedundancyIccpGroup() uint32 {
	if m != nil {
		return m.RedundancyIccpGroup
	}
	return 0
}

func (m *IcpeOperTopoCsflType) GetIsPhysical() bool {
	if m != nil {
		return m.IsPhysical
	}
	return false
}

func (m *IcpeOperTopoCsflType) GetRingWhole() bool {
	if m != nil {
		return m.RingWhole
	}
	return false
}

func (m *IcpeOperTopoCsflType) GetDiscoveredLink() []*IcpeOperTopoDsfl {
	if m != nil {
		return m.DiscoveredLink
	}
	return nil
}

func (m *IcpeOperTopoCsflType) GetSatellite() []*IcpeOperTopoSattun {
	if m != nil {
		return m.Satellite
	}
	return nil
}

func init() {
	proto.RegisterType((*IcpeOperTopoCsflType_KEYS)(nil), "cisco_ios_xr_icpe_infra_oper.nv_satellite.satellite_topologies.satellite_topology.icpe_oper_topo_csfl_type_KEYS")
	proto.RegisterType((*IcpeOperTopoDsfl)(nil), "cisco_ios_xr_icpe_infra_oper.nv_satellite.satellite_topologies.satellite_topology.icpe_oper_topo_dsfl")
	proto.RegisterType((*IcpeOperTopoRemoteSfl)(nil), "cisco_ios_xr_icpe_infra_oper.nv_satellite.satellite_topologies.satellite_topology.icpe_oper_topo_remote_sfl")
	proto.RegisterType((*IcpeOperTopoLocalSfl)(nil), "cisco_ios_xr_icpe_infra_oper.nv_satellite.satellite_topologies.satellite_topology.icpe_oper_topo_local_sfl")
	proto.RegisterType((*IcpeOperTopoSattun)(nil), "cisco_ios_xr_icpe_infra_oper.nv_satellite.satellite_topologies.satellite_topology.icpe_oper_topo_sattun")
	proto.RegisterType((*IcpeOperTopoCsflType)(nil), "cisco_ios_xr_icpe_infra_oper.nv_satellite.satellite_topologies.satellite_topology.icpe_oper_topo_csfl_type")
}

func init() { proto.RegisterFile("icpe_oper_topo_csfl_type.proto", fileDescriptor_f5e3f7c0b5f6f91c) }

var fileDescriptor_f5e3f7c0b5f6f91c = []byte{
	// 801 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x56, 0x4b, 0x6f, 0x63, 0x35,
	0x14, 0xd6, 0x6d, 0x3b, 0x69, 0x72, 0xd2, 0xc7, 0xd4, 0x9d, 0x0e, 0x77, 0x80, 0x29, 0x25, 0x12,
	0xa2, 0x80, 0x14, 0xa4, 0xce, 0xf0, 0xd8, 0xa2, 0xe1, 0xd1, 0x88, 0xd1, 0x68, 0xb8, 0x5d, 0x00,
	0x2b, 0xcb, 0xb5, 0x4f, 0x12, 0xab, 0x8e, 0x7d, 0x65, 0xfb, 0x86, 0x66, 0xc7, 0x8a, 0x15, 0x12,
	0x62, 0xc9, 0x9a, 0xbf, 0xc2, 0x6f, 0xe1, 0x77, 0x20, 0xfb, 0xbe, 0xa6, 0xe9, 0x1d, 0xc1, 0x82,
	0xee, 0xec, 0xef, 0x1c, 0x1f, 0x7f, 0xf9, 0xfc, 0x9d, 0x93, 0x0b, 0xc7, 0x92, 0xe7, 0x48, 0x4d,
	0x8e, 0x96, 0x7a, 0x93, 0x1b, 0xca, 0xdd, 0x54, 0x51, 0xbf, 0xca, 0x71, 0x9c, 0x5b, 0xe3, 0x0d,
	0xf9, 0x8e, 0x4b, 0xc7, 0x0d, 0x95, 0xc6, 0xd1, 0x6b, 0x4b, 0x63, 0xb2, 0xd4, 0x53, 0xcb, 0xe2,
	0x91, 0xb1, 0x5e, 0x52, 0xc7, 0x3c, 0x2a, 0x25, 0x3d, 0x8e, 0x9b, 0x55, 0xac, 0xa4, 0xcc, 0x4c,
	0xa2, 0xbb, 0x0d, 0xae, 0x46, 0x5f, 0xc3, 0xe3, 0xd7, 0x5d, 0x4a, 0xbf, 0xfd, 0xea, 0xc7, 0x0b,
	0xf2, 0x1e, 0xec, 0x49, 0xed, 0xd1, 0x4e, 0x19, 0x47, 0xaa, 0xd9, 0x02, 0xd3, 0xe4, 0x24, 0x39,
	0x1d, 0x64, 0xbb, 0x0d, 0xfa, 0x82, 0x2d, 0x70, 0xf4, 0x47, 0x02, 0x87, 0x6b, 0x85, 0x84, 0x9b,
	0x2a, 0xf2, 0x21, 0x1c, 0xdc, 0x3c, 0x4e, 0xaf, 0x6d, 0x55, 0x61, 0xff, 0x46, 0x85, 0x1f, 0x2c,
	0xf9, 0x00, 0xee, 0xb7, 0xb9, 0x73, 0xa6, 0x85, 0xc2, 0x74, 0x63, 0x2d, 0xf5, 0x3c, 0xc2, 0xe4,
	0x23, 0x38, 0x10, 0x41, 0x8b, 0x25, 0xda, 0x15, 0xb5, 0x85, 0xd6, 0x52, 0xcf, 0xd2, 0xcd, 0x93,
	0xe4, 0xb4, 0x9f, 0xdd, 0x6f, 0x02, 0x59, 0x89, 0x8f, 0xfe, 0xdc, 0x80, 0x47, 0x6b, 0xdc, 0x2c,
	0x2e, 0x8c, 0x47, 0x1a, 0x18, 0xbe, 0x03, 0xc3, 0x05, 0xe3, 0x94, 0x09, 0x61, 0xd1, 0xb9, 0x8a,
	0x1b, 0x2c, 0x18, 0xff, 0xa2, 0x44, 0xc8, 0x43, 0xe8, 0x39, 0x53, 0x58, 0x5e, 0x93, 0xa9, 0x76,
	0x64, 0x0c, 0x87, 0x55, 0x19, 0xe9, 0x5a, 0xe5, 0x2b, 0x16, 0x07, 0x65, 0x68, 0xe2, 0x2e, 0xea,
	0x00, 0xf9, 0x18, 0x1e, 0xb4, 0xf9, 0xca, 0x70, 0xa6, 0xe8, 0xdc, 0x38, 0x9f, 0x6e, 0xdd, 0x3c,
	0xf0, 0x3c, 0x44, 0xce, 0x8d, 0xf3, 0xe4, 0x08, 0x7a, 0x92, 0x2b, 0x2a, 0x45, 0x7a, 0xef, 0x24,
	0x39, 0xdd, 0xcd, 0xee, 0x49, 0xae, 0x26, 0xa2, 0x53, 0xa6, 0x5e, 0xb7, 0x4c, 0x9d, 0xea, 0x6f,
	0x77, 0xaa, 0x3f, 0xfa, 0x7b, 0x03, 0xd2, 0x35, 0x95, 0x4a, 0x92, 0x41, 0xa4, 0x96, 0x4a, 0xf2,
	0x2a, 0x95, 0xce, 0xfa, 0x1b, 0xdd, 0xaf, 0xfb, 0x2e, 0xec, 0x08, 0xe9, 0x72, 0xc5, 0x56, 0xa5,
	0x8d, 0x36, 0x63, 0xda, 0xb0, 0xc2, 0x42, 0x12, 0x79, 0x1b, 0x06, 0x16, 0x45, 0xa1, 0x05, 0xd3,
	0xb5, 0x2c, 0x2d, 0x10, 0xde, 0x81, 0x71, 0x2f, 0x97, 0x18, 0xe5, 0xe8, 0x67, 0xd5, 0x8e, 0xbc,
	0x09, 0x7d, 0x73, 0xe9, 0x8c, 0x42, 0x5f, 0xea, 0xd0, 0xcf, 0x9a, 0x3d, 0xf9, 0x3d, 0x81, 0xdd,
	0x4a, 0x74, 0x81, 0x4b, 0xc9, 0x31, 0xdd, 0x3e, 0xd9, 0x3c, 0x1d, 0x9e, 0xa9, 0xf1, 0xff, 0xde,
	0x4a, 0xe3, 0xd7, 0x5a, 0x2c, 0xdb, 0x29, 0xd7, 0x5f, 0x46, 0x06, 0xa3, 0xbf, 0xb6, 0xe0, 0x68,
	0x2d, 0xd7, 0x31, 0xef, 0x0b, 0xfd, 0xef, 0x56, 0x3c, 0x06, 0xe0, 0x46, 0x4f, 0xe5, 0xac, 0xb0,
	0x28, 0xa2, 0xd0, 0xfd, 0xec, 0x15, 0x84, 0x3c, 0x82, 0xbe, 0x2e, 0x16, 0x74, 0x6e, 0x72, 0x17,
	0xf5, 0xdd, 0xcd, 0xb6, 0x75, 0xb1, 0x38, 0x37, 0xb9, 0x23, 0x04, 0xb6, 0x42, 0x53, 0x47, 0x59,
	0x07, 0x59, 0x5c, 0x87, 0x27, 0x69, 0x7f, 0x47, 0x63, 0xb3, 0x61, 0x83, 0x4d, 0x04, 0x79, 0x0a,
	0x0f, 0x2d, 0x72, 0x94, 0x4b, 0x14, 0xd4, 0xa1, 0x95, 0x4c, 0x51, 0x5d, 0x2c, 0x2e, 0xd1, 0x56,
	0x96, 0x7b, 0x50, 0x47, 0x2f, 0x62, 0xf0, 0x45, 0x8c, 0x91, 0x67, 0x70, 0xdc, 0x7d, 0x8a, 0xe6,
	0x16, 0x1d, 0x6a, 0x1f, 0x4d, 0xd8, 0xcf, 0xde, 0xea, 0x3a, 0xfd, 0xb2, 0x4c, 0x21, 0x6f, 0xc0,
	0xf6, 0x52, 0x31, 0x1d, 0x88, 0xf5, 0x23, 0xb1, 0x5e, 0xd8, 0x4e, 0xc4, 0x2d, 0x27, 0x0d, 0x6e,
	0x3b, 0xe9, 0x7d, 0xd8, 0x0f, 0xb2, 0x28, 0xc9, 0x3d, 0xb5, 0xc8, 0x9c, 0xd1, 0x29, 0xc4, 0xac,
	0xbd, 0x1a, 0xce, 0x22, 0x1a, 0x9a, 0xa9, 0x49, 0xe4, 0x46, 0x7b, 0xbc, 0xf6, 0xe9, 0xb0, 0x34,
	0x70, 0x8d, 0x3f, 0x2b, 0x61, 0xf2, 0x6b, 0x02, 0xc3, 0x29, 0xbb, 0xb4, 0x92, 0x53, 0x25, 0xf5,
	0x55, 0xba, 0x13, 0x9d, 0x74, 0x75, 0xf7, 0x4e, 0x6a, 0xda, 0x30, 0x83, 0xf2, 0xfe, 0xe7, 0x52,
	0x5f, 0x8d, 0x7e, 0xde, 0xba, 0xd5, 0xaf, 0xcd, 0xe8, 0xee, 0x6e, 0xcc, 0xb3, 0xff, 0x3e, 0x76,
	0x9f, 0x74, 0xcf, 0x93, 0x33, 0x38, 0xaa, 0xfb, 0x91, 0xaf, 0xa8, 0xe4, 0x3c, 0xa7, 0x33, 0x6b,
	0x8a, 0x3c, 0x7d, 0x1a, 0x1f, 0xe8, 0xb0, 0x0d, 0x4e, 0x38, 0xcf, 0xbf, 0x09, 0xa1, 0x60, 0x6a,
	0xe9, 0x68, 0x3e, 0x5f, 0x39, 0xc9, 0x99, 0x4a, 0x3f, 0x29, 0x4d, 0x2b, 0xdd, 0xcb, 0x0a, 0x21,
	0x8f, 0x01, 0xac, 0xd4, 0x33, 0xfa, 0xd3, 0xdc, 0x28, 0x4c, 0x3f, 0xad, 0xda, 0x5e, 0xea, 0xd9,
	0xf7, 0x01, 0x20, 0xbf, 0x25, 0xb0, 0x5f, 0x8f, 0x74, 0x14, 0xa5, 0xf4, 0x9f, 0x45, 0xe9, 0xa7,
	0x77, 0x2f, 0x7d, 0xf8, 0x0f, 0xcb, 0xf6, 0xda, 0xeb, 0x83, 0xf2, 0xe4, 0x97, 0x04, 0x06, 0xed,
	0xbc, 0xff, 0x3c, 0x72, 0x99, 0xdf, 0x3d, 0x97, 0x72, 0x48, 0x64, 0xed, 0xd5, 0x97, 0xbd, 0xf8,
	0x59, 0xf0, 0xe4, 0x9f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x6a, 0xeb, 0x06, 0xc7, 0x38, 0x08, 0x00,
	0x00,
}
