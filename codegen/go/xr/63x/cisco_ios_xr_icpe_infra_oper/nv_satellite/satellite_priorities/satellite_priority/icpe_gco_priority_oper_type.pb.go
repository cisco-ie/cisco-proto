/*
Copyright 2019 Cisco Systems

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: icpe_gco_priority_oper_type.proto

package cisco_ios_xr_icpe_infra_oper_nv_satellite_satellite_priorities_satellite_priority

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type IcpeGcoPriorityOperType_KEYS struct {
	SatelliteId          uint32   `protobuf:"varint,1,opt,name=satellite_id,json=satelliteId,proto3" json:"satellite_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IcpeGcoPriorityOperType_KEYS) Reset()         { *m = IcpeGcoPriorityOperType_KEYS{} }
func (m *IcpeGcoPriorityOperType_KEYS) String() string { return proto.CompactTextString(m) }
func (*IcpeGcoPriorityOperType_KEYS) ProtoMessage()    {}
func (*IcpeGcoPriorityOperType_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_f074a9395cac0bc1, []int{0}
}

func (m *IcpeGcoPriorityOperType_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IcpeGcoPriorityOperType_KEYS.Unmarshal(m, b)
}
func (m *IcpeGcoPriorityOperType_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IcpeGcoPriorityOperType_KEYS.Marshal(b, m, deterministic)
}
func (m *IcpeGcoPriorityOperType_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IcpeGcoPriorityOperType_KEYS.Merge(m, src)
}
func (m *IcpeGcoPriorityOperType_KEYS) XXX_Size() int {
	return xxx_messageInfo_IcpeGcoPriorityOperType_KEYS.Size(m)
}
func (m *IcpeGcoPriorityOperType_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_IcpeGcoPriorityOperType_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_IcpeGcoPriorityOperType_KEYS proto.InternalMessageInfo

func (m *IcpeGcoPriorityOperType_KEYS) GetSatelliteId() uint32 {
	if m != nil {
		return m.SatelliteId
	}
	return 0
}

type IcpeGcoPriorityOperType struct {
	SatelliteIdXr          uint32   `protobuf:"varint,50,opt,name=satellite_id_xr,json=satelliteIdXr,proto3" json:"satellite_id_xr,omitempty"`
	Rgid                   uint32   `protobuf:"varint,51,opt,name=rgid,proto3" json:"rgid,omitempty"`
	BestPathHops           uint32   `protobuf:"varint,52,opt,name=best_path_hops,json=bestPathHops,proto3" json:"best_path_hops,omitempty"`
	ConfiguredPriority     uint32   `protobuf:"varint,53,opt,name=configured_priority,json=configuredPriority,proto3" json:"configured_priority,omitempty"`
	HostPriority           uint64   `protobuf:"varint,54,opt,name=host_priority,json=hostPriority,proto3" json:"host_priority,omitempty"`
	PartnerPriority        uint64   `protobuf:"varint,55,opt,name=partner_priority,json=partnerPriority,proto3" json:"partner_priority,omitempty"`
	MultichassisRedundancy string   `protobuf:"bytes,56,opt,name=multichassis_redundancy,json=multichassisRedundancy,proto3" json:"multichassis_redundancy,omitempty"`
	XXX_NoUnkeyedLiteral   struct{} `json:"-"`
	XXX_unrecognized       []byte   `json:"-"`
	XXX_sizecache          int32    `json:"-"`
}

func (m *IcpeGcoPriorityOperType) Reset()         { *m = IcpeGcoPriorityOperType{} }
func (m *IcpeGcoPriorityOperType) String() string { return proto.CompactTextString(m) }
func (*IcpeGcoPriorityOperType) ProtoMessage()    {}
func (*IcpeGcoPriorityOperType) Descriptor() ([]byte, []int) {
	return fileDescriptor_f074a9395cac0bc1, []int{1}
}

func (m *IcpeGcoPriorityOperType) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IcpeGcoPriorityOperType.Unmarshal(m, b)
}
func (m *IcpeGcoPriorityOperType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IcpeGcoPriorityOperType.Marshal(b, m, deterministic)
}
func (m *IcpeGcoPriorityOperType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IcpeGcoPriorityOperType.Merge(m, src)
}
func (m *IcpeGcoPriorityOperType) XXX_Size() int {
	return xxx_messageInfo_IcpeGcoPriorityOperType.Size(m)
}
func (m *IcpeGcoPriorityOperType) XXX_DiscardUnknown() {
	xxx_messageInfo_IcpeGcoPriorityOperType.DiscardUnknown(m)
}

var xxx_messageInfo_IcpeGcoPriorityOperType proto.InternalMessageInfo

func (m *IcpeGcoPriorityOperType) GetSatelliteIdXr() uint32 {
	if m != nil {
		return m.SatelliteIdXr
	}
	return 0
}

func (m *IcpeGcoPriorityOperType) GetRgid() uint32 {
	if m != nil {
		return m.Rgid
	}
	return 0
}

func (m *IcpeGcoPriorityOperType) GetBestPathHops() uint32 {
	if m != nil {
		return m.BestPathHops
	}
	return 0
}

func (m *IcpeGcoPriorityOperType) GetConfiguredPriority() uint32 {
	if m != nil {
		return m.ConfiguredPriority
	}
	return 0
}

func (m *IcpeGcoPriorityOperType) GetHostPriority() uint64 {
	if m != nil {
		return m.HostPriority
	}
	return 0
}

func (m *IcpeGcoPriorityOperType) GetPartnerPriority() uint64 {
	if m != nil {
		return m.PartnerPriority
	}
	return 0
}

func (m *IcpeGcoPriorityOperType) GetMultichassisRedundancy() string {
	if m != nil {
		return m.MultichassisRedundancy
	}
	return ""
}

func init() {
	proto.RegisterType((*IcpeGcoPriorityOperType_KEYS)(nil), "cisco_ios_xr_icpe_infra_oper.nv_satellite.satellite_priorities.satellite_priority.icpe_gco_priority_oper_type_KEYS")
	proto.RegisterType((*IcpeGcoPriorityOperType)(nil), "cisco_ios_xr_icpe_infra_oper.nv_satellite.satellite_priorities.satellite_priority.icpe_gco_priority_oper_type")
}

func init() { proto.RegisterFile("icpe_gco_priority_oper_type.proto", fileDescriptor_f074a9395cac0bc1) }

var fileDescriptor_f074a9395cac0bc1 = []byte{
	// 299 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x91, 0xd1, 0x4a, 0x02, 0x41,
	0x14, 0x86, 0xd9, 0x90, 0xa0, 0x49, 0x33, 0x26, 0xa8, 0x85, 0x6e, 0x56, 0x8b, 0xb0, 0x1b, 0x83,
	0xac, 0xec, 0x05, 0x84, 0xa2, 0x1b, 0xdb, 0x6e, 0xea, 0xea, 0x30, 0xce, 0x8c, 0xee, 0x01, 0x9b,
	0x19, 0xce, 0x8c, 0xe1, 0x3e, 0x5a, 0x6f, 0x17, 0x0e, 0x3a, 0x0a, 0x81, 0x77, 0x87, 0xff, 0xfb,
	0xf6, 0xdb, 0x85, 0x65, 0x1d, 0x94, 0x4e, 0xc3, 0x4c, 0x5a, 0x70, 0x84, 0x96, 0x30, 0xd4, 0x60,
	0x9d, 0x26, 0x08, 0xb5, 0xd3, 0x7d, 0x47, 0x36, 0x58, 0xfe, 0x2e, 0xd1, 0x4b, 0x0b, 0x68, 0x3d,
	0x2c, 0x09, 0xa2, 0x8f, 0x66, 0x4a, 0x22, 0x8a, 0x7d, 0xf3, 0x03, 0x5e, 0x04, 0x3d, 0x9f, 0x63,
	0xd0, 0xfd, 0x74, 0x6d, 0x6a, 0xa8, 0xfd, 0xff, 0xb1, 0xee, 0x8e, 0x58, 0xb1, 0xe7, 0xbd, 0xf0,
	0x36, 0xfa, 0xfa, 0xe0, 0x1d, 0xd6, 0xdc, 0x3e, 0x89, 0x2a, 0xcf, 0x8a, 0xac, 0xd7, 0x2a, 0x8f,
	0xd3, 0xf6, 0xaa, 0xba, 0xbf, 0x07, 0xec, 0x72, 0x4f, 0x87, 0xdf, 0xb0, 0xf6, 0x6e, 0x02, 0x96,
	0x94, 0xdf, 0xc7, 0x4a, 0x6b, 0xa7, 0xf2, 0x49, 0x9c, 0xb3, 0x06, 0xcd, 0x50, 0xe5, 0x83, 0x08,
	0xe3, 0xcd, 0xaf, 0xd9, 0xc9, 0x44, 0xfb, 0x00, 0x4e, 0x84, 0x0a, 0x2a, 0xeb, 0x7c, 0xfe, 0x10,
	0x69, 0x73, 0xb5, 0x8e, 0x45, 0xa8, 0x5e, 0xac, 0xf3, 0xfc, 0x8e, 0x9d, 0x49, 0x6b, 0xa6, 0x38,
	0x5b, 0x90, 0x56, 0xe9, 0x13, 0xf2, 0xc7, 0xa8, 0xf2, 0x2d, 0x1a, 0xaf, 0x09, 0xbf, 0x62, 0xad,
	0xca, 0xae, 0xb2, 0x1b, 0xf5, 0xa9, 0xc8, 0x7a, 0x8d, 0xb2, 0xb9, 0x1a, 0x93, 0x74, 0xcb, 0x4e,
	0x9d, 0xa0, 0x60, 0x34, 0x6d, 0xbd, 0x61, 0xf4, 0xda, 0xeb, 0x3d, 0xa9, 0x43, 0x76, 0xf1, 0xbd,
	0x98, 0x07, 0x94, 0x95, 0xf0, 0x1e, 0x3d, 0x90, 0x56, 0x0b, 0xa3, 0x84, 0x91, 0x75, 0xfe, 0x5c,
	0x64, 0xbd, 0xa3, 0xf2, 0x7c, 0x17, 0x97, 0x89, 0x4e, 0x0e, 0xe3, 0xcf, 0x1d, 0xfc, 0x05, 0x00,
	0x00, 0xff, 0xff, 0x40, 0xe9, 0x51, 0xaf, 0x01, 0x02, 0x00, 0x00,
}
