/*
Copyright 2019 Cisco Systems

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: bgp_bmp_tbl_gbl_bag.proto

package cisco_ios_xr_ipv4_bgp_oper_bgp_instances_instance_instance_active_vrfs_vrf_afs_af_bmp_path_table_generic

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type BgpBmpTblGblBag_KEYS struct {
	InstanceName         string   `protobuf:"bytes,1,opt,name=instance_name,json=instanceName,proto3" json:"instance_name,omitempty"`
	VrfName              string   `protobuf:"bytes,2,opt,name=vrf_name,json=vrfName,proto3" json:"vrf_name,omitempty"`
	AfName               string   `protobuf:"bytes,3,opt,name=af_name,json=afName,proto3" json:"af_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BgpBmpTblGblBag_KEYS) Reset()         { *m = BgpBmpTblGblBag_KEYS{} }
func (m *BgpBmpTblGblBag_KEYS) String() string { return proto.CompactTextString(m) }
func (*BgpBmpTblGblBag_KEYS) ProtoMessage()    {}
func (*BgpBmpTblGblBag_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_afc5a561794997a2, []int{0}
}

func (m *BgpBmpTblGblBag_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BgpBmpTblGblBag_KEYS.Unmarshal(m, b)
}
func (m *BgpBmpTblGblBag_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BgpBmpTblGblBag_KEYS.Marshal(b, m, deterministic)
}
func (m *BgpBmpTblGblBag_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BgpBmpTblGblBag_KEYS.Merge(m, src)
}
func (m *BgpBmpTblGblBag_KEYS) XXX_Size() int {
	return xxx_messageInfo_BgpBmpTblGblBag_KEYS.Size(m)
}
func (m *BgpBmpTblGblBag_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_BgpBmpTblGblBag_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_BgpBmpTblGblBag_KEYS proto.InternalMessageInfo

func (m *BgpBmpTblGblBag_KEYS) GetInstanceName() string {
	if m != nil {
		return m.InstanceName
	}
	return ""
}

func (m *BgpBmpTblGblBag_KEYS) GetVrfName() string {
	if m != nil {
		return m.VrfName
	}
	return ""
}

func (m *BgpBmpTblGblBag_KEYS) GetAfName() string {
	if m != nil {
		return m.AfName
	}
	return ""
}

type BgpTimespec struct {
	Seconds              uint32   `protobuf:"varint,1,opt,name=seconds,proto3" json:"seconds,omitempty"`
	Nanoseconds          uint32   `protobuf:"varint,2,opt,name=nanoseconds,proto3" json:"nanoseconds,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BgpTimespec) Reset()         { *m = BgpTimespec{} }
func (m *BgpTimespec) String() string { return proto.CompactTextString(m) }
func (*BgpTimespec) ProtoMessage()    {}
func (*BgpTimespec) Descriptor() ([]byte, []int) {
	return fileDescriptor_afc5a561794997a2, []int{1}
}

func (m *BgpTimespec) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BgpTimespec.Unmarshal(m, b)
}
func (m *BgpTimespec) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BgpTimespec.Marshal(b, m, deterministic)
}
func (m *BgpTimespec) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BgpTimespec.Merge(m, src)
}
func (m *BgpTimespec) XXX_Size() int {
	return xxx_messageInfo_BgpTimespec.Size(m)
}
func (m *BgpTimespec) XXX_DiscardUnknown() {
	xxx_messageInfo_BgpTimespec.DiscardUnknown(m)
}

var xxx_messageInfo_BgpTimespec proto.InternalMessageInfo

func (m *BgpTimespec) GetSeconds() uint32 {
	if m != nil {
		return m.Seconds
	}
	return 0
}

func (m *BgpTimespec) GetNanoseconds() uint32 {
	if m != nil {
		return m.Nanoseconds
	}
	return 0
}

type BgpBmpTblGblBag struct {
	BmpRouteMonitoringeEnabled  bool         `protobuf:"varint,50,opt,name=bmp_route_monitoringe_enabled,json=bmpRouteMonitoringeEnabled,proto3" json:"bmp_route_monitoringe_enabled,omitempty"`
	BmpTableVersion             uint32       `protobuf:"varint,51,opt,name=bmp_table_version,json=bmpTableVersion,proto3" json:"bmp_table_version,omitempty"`
	NetworkCount                uint32       `protobuf:"varint,52,opt,name=network_count,json=networkCount,proto3" json:"network_count,omitempty"`
	PathCount                   uint32       `protobuf:"varint,53,opt,name=path_count,json=pathCount,proto3" json:"path_count,omitempty"`
	BmpVersionWrapped           uint32       `protobuf:"varint,54,opt,name=bmp_version_wrapped,json=bmpVersionWrapped,proto3" json:"bmp_version_wrapped,omitempty"`
	BmpVersionWrappedTid        uint32       `protobuf:"varint,55,opt,name=bmp_version_wrapped_tid,json=bmpVersionWrappedTid,proto3" json:"bmp_version_wrapped_tid,omitempty"`
	BmpVersionInprogress        bool         `protobuf:"varint,56,opt,name=bmp_version_inprogress,json=bmpVersionInprogress,proto3" json:"bmp_version_inprogress,omitempty"`
	BmpVersionIncremented       bool         `protobuf:"varint,57,opt,name=bmp_version_incremented,json=bmpVersionIncremented,proto3" json:"bmp_version_incremented,omitempty"`
	BmpVersionWrapTimeSpec      *BgpTimespec `protobuf:"bytes,58,opt,name=bmp_version_wrap_time_spec,json=bmpVersionWrapTimeSpec,proto3" json:"bmp_version_wrap_time_spec,omitempty"`
	BmpVersionWrapStartTimeSpec *BgpTimespec `protobuf:"bytes,59,opt,name=bmp_version_wrap_start_time_spec,json=bmpVersionWrapStartTimeSpec,proto3" json:"bmp_version_wrap_start_time_spec,omitempty"`
	BmpVersionWrapDoneTimeSpec  *BgpTimespec `protobuf:"bytes,60,opt,name=bmp_version_wrap_done_time_spec,json=bmpVersionWrapDoneTimeSpec,proto3" json:"bmp_version_wrap_done_time_spec,omitempty"`
	XXX_NoUnkeyedLiteral        struct{}     `json:"-"`
	XXX_unrecognized            []byte       `json:"-"`
	XXX_sizecache               int32        `json:"-"`
}

func (m *BgpBmpTblGblBag) Reset()         { *m = BgpBmpTblGblBag{} }
func (m *BgpBmpTblGblBag) String() string { return proto.CompactTextString(m) }
func (*BgpBmpTblGblBag) ProtoMessage()    {}
func (*BgpBmpTblGblBag) Descriptor() ([]byte, []int) {
	return fileDescriptor_afc5a561794997a2, []int{2}
}

func (m *BgpBmpTblGblBag) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BgpBmpTblGblBag.Unmarshal(m, b)
}
func (m *BgpBmpTblGblBag) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BgpBmpTblGblBag.Marshal(b, m, deterministic)
}
func (m *BgpBmpTblGblBag) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BgpBmpTblGblBag.Merge(m, src)
}
func (m *BgpBmpTblGblBag) XXX_Size() int {
	return xxx_messageInfo_BgpBmpTblGblBag.Size(m)
}
func (m *BgpBmpTblGblBag) XXX_DiscardUnknown() {
	xxx_messageInfo_BgpBmpTblGblBag.DiscardUnknown(m)
}

var xxx_messageInfo_BgpBmpTblGblBag proto.InternalMessageInfo

func (m *BgpBmpTblGblBag) GetBmpRouteMonitoringeEnabled() bool {
	if m != nil {
		return m.BmpRouteMonitoringeEnabled
	}
	return false
}

func (m *BgpBmpTblGblBag) GetBmpTableVersion() uint32 {
	if m != nil {
		return m.BmpTableVersion
	}
	return 0
}

func (m *BgpBmpTblGblBag) GetNetworkCount() uint32 {
	if m != nil {
		return m.NetworkCount
	}
	return 0
}

func (m *BgpBmpTblGblBag) GetPathCount() uint32 {
	if m != nil {
		return m.PathCount
	}
	return 0
}

func (m *BgpBmpTblGblBag) GetBmpVersionWrapped() uint32 {
	if m != nil {
		return m.BmpVersionWrapped
	}
	return 0
}

func (m *BgpBmpTblGblBag) GetBmpVersionWrappedTid() uint32 {
	if m != nil {
		return m.BmpVersionWrappedTid
	}
	return 0
}

func (m *BgpBmpTblGblBag) GetBmpVersionInprogress() bool {
	if m != nil {
		return m.BmpVersionInprogress
	}
	return false
}

func (m *BgpBmpTblGblBag) GetBmpVersionIncremented() bool {
	if m != nil {
		return m.BmpVersionIncremented
	}
	return false
}

func (m *BgpBmpTblGblBag) GetBmpVersionWrapTimeSpec() *BgpTimespec {
	if m != nil {
		return m.BmpVersionWrapTimeSpec
	}
	return nil
}

func (m *BgpBmpTblGblBag) GetBmpVersionWrapStartTimeSpec() *BgpTimespec {
	if m != nil {
		return m.BmpVersionWrapStartTimeSpec
	}
	return nil
}

func (m *BgpBmpTblGblBag) GetBmpVersionWrapDoneTimeSpec() *BgpTimespec {
	if m != nil {
		return m.BmpVersionWrapDoneTimeSpec
	}
	return nil
}

func init() {
	proto.RegisterType((*BgpBmpTblGblBag_KEYS)(nil), "cisco_ios_xr_ipv4_bgp_oper.bgp.instances.instance.instance_active.vrfs.vrf.afs.af.bmp_path_table_generic.bgp_bmp_tbl_gbl_bag_KEYS")
	proto.RegisterType((*BgpTimespec)(nil), "cisco_ios_xr_ipv4_bgp_oper.bgp.instances.instance.instance_active.vrfs.vrf.afs.af.bmp_path_table_generic.bgp_timespec")
	proto.RegisterType((*BgpBmpTblGblBag)(nil), "cisco_ios_xr_ipv4_bgp_oper.bgp.instances.instance.instance_active.vrfs.vrf.afs.af.bmp_path_table_generic.bgp_bmp_tbl_gbl_bag")
}

func init() { proto.RegisterFile("bgp_bmp_tbl_gbl_bag.proto", fileDescriptor_afc5a561794997a2) }

var fileDescriptor_afc5a561794997a2 = []byte{
	// 515 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xc4, 0x94, 0x4f, 0x6f, 0xd3, 0x30,
	0x18, 0xc6, 0x95, 0x21, 0xad, 0x9b, 0xd7, 0x09, 0xe1, 0xc1, 0xe6, 0x15, 0x4d, 0x54, 0xe5, 0x52,
	0x71, 0xf0, 0x61, 0xeb, 0xc6, 0xdf, 0x0b, 0x82, 0x1d, 0x00, 0xc1, 0x21, 0xad, 0x40, 0x9c, 0x2c,
	0x3b, 0x79, 0x93, 0x59, 0x34, 0xb6, 0x65, 0x7b, 0x19, 0x9f, 0x8b, 0x2b, 0xe2, 0x3b, 0xf0, 0x91,
	0x90, 0x9d, 0x36, 0xa4, 0xb4, 0x67, 0x76, 0x89, 0x9c, 0xe7, 0x79, 0x5e, 0xbf, 0xbf, 0xbc, 0xb6,
	0x82, 0x8e, 0x45, 0x69, 0x98, 0xa8, 0x0c, 0xf3, 0x62, 0xce, 0x4a, 0x31, 0x67, 0x82, 0x97, 0xd4,
	0x58, 0xed, 0x35, 0xbe, 0xca, 0xa4, 0xcb, 0x34, 0x93, 0xda, 0xb1, 0xef, 0x96, 0x49, 0x53, 0x4f,
	0x58, 0x08, 0x6b, 0x03, 0x96, 0x8a, 0xd2, 0x50, 0xa9, 0x9c, 0xe7, 0x2a, 0x03, 0xd7, 0xae, 0xda,
	0x05, 0xe3, 0x99, 0x97, 0x35, 0xd0, 0xda, 0x16, 0x2e, 0x3c, 0x28, 0x2f, 0x1c, 0xe5, 0x05, 0x0d,
	0x8d, 0x0c, 0xf7, 0x57, 0xcc, 0x73, 0x31, 0x07, 0x56, 0x82, 0x02, 0x2b, 0xb3, 0x91, 0x43, 0x64,
	0x03, 0x06, 0xfb, 0x70, 0xf9, 0x75, 0x8a, 0x1f, 0xa3, 0xfd, 0x76, 0x57, 0xc5, 0x2b, 0x20, 0xc9,
	0x30, 0x19, 0xef, 0xa6, 0xfd, 0xa5, 0xf8, 0x89, 0x57, 0x80, 0x8f, 0xd1, 0x4e, 0x6d, 0x8b, 0xc6,
	0xdf, 0x8a, 0x7e, 0xaf, 0xb6, 0x45, 0xb4, 0x8e, 0x50, 0x8f, 0x2f, 0x9c, 0x3b, 0xd1, 0xd9, 0xe6,
	0xd1, 0x18, 0xbd, 0x47, 0xfd, 0xd0, 0xd4, 0xcb, 0x0a, 0x9c, 0x81, 0x0c, 0x13, 0xd4, 0x73, 0x90,
	0x69, 0x95, 0xbb, 0xd8, 0x62, 0x3f, 0x5d, 0xbe, 0xe2, 0x21, 0xda, 0x53, 0x5c, 0xe9, 0xa5, 0xbb,
	0x15, 0xdd, 0xae, 0x34, 0xfa, 0xdd, 0x43, 0x07, 0x1b, 0xbe, 0x00, 0xbf, 0x46, 0x27, 0x41, 0xb2,
	0xfa, 0xda, 0x03, 0xab, 0xb4, 0x92, 0x5e, 0x5b, 0xa9, 0x4a, 0x60, 0xa0, 0xc2, 0x00, 0x72, 0x72,
	0x3a, 0x4c, 0xc6, 0x3b, 0xe9, 0x40, 0x54, 0x26, 0x0d, 0x99, 0x8f, 0x7f, 0x23, 0x97, 0x4d, 0x02,
	0x3f, 0x41, 0xf7, 0xe2, 0xae, 0x71, 0x60, 0x35, 0x58, 0x27, 0xb5, 0x22, 0x67, 0x11, 0xe1, 0xae,
	0xa8, 0xcc, 0x2c, 0xe8, 0x9f, 0x1b, 0x39, 0xcc, 0x4a, 0x81, 0xbf, 0xd1, 0xf6, 0x1b, 0xcb, 0xf4,
	0xb5, 0xf2, 0x64, 0x12, 0x73, 0xfd, 0x85, 0xf8, 0x26, 0x68, 0xf8, 0x04, 0xa1, 0x78, 0x04, 0x4d,
	0xe2, 0x3c, 0x26, 0x76, 0x83, 0xd2, 0xd8, 0x14, 0x1d, 0x84, 0x7e, 0x8b, 0x4e, 0xec, 0xc6, 0x72,
	0x63, 0x20, 0x27, 0x17, 0x31, 0x17, 0x50, 0x16, 0xcd, 0xbe, 0x34, 0x06, 0x3e, 0x47, 0x47, 0x1b,
	0xf2, 0xcc, 0xcb, 0x9c, 0x3c, 0x8d, 0x35, 0xf7, 0xd7, 0x6a, 0x66, 0x32, 0xc7, 0x13, 0x74, 0xd8,
	0x2d, 0x93, 0xca, 0x58, 0x5d, 0x5a, 0x70, 0x8e, 0x3c, 0x8b, 0x23, 0xe9, 0x54, 0xbd, 0x6b, 0x3d,
	0x7c, 0xb1, 0xda, 0x4c, 0xaa, 0xcc, 0x42, 0x05, 0xca, 0x43, 0x4e, 0x9e, 0xc7, 0xb2, 0x07, 0xdd,
	0xb2, 0xd6, 0xc4, 0x3f, 0x12, 0x34, 0xf8, 0x97, 0x32, 0x9e, 0x3c, 0x0b, 0x47, 0x4f, 0x5e, 0x0c,
	0x93, 0xf1, 0xde, 0x69, 0x4d, 0xff, 0xd7, 0x85, 0xa7, 0xdd, 0x8b, 0x97, 0x1e, 0xae, 0x0e, 0x68,
	0x26, 0x2b, 0x98, 0x86, 0x0b, 0xf9, 0x2b, 0x41, 0xc3, 0x35, 0x68, 0xe7, 0xb9, 0xf5, 0x1d, 0xf4,
	0x97, 0xb7, 0x8a, 0xfe, 0x70, 0x15, 0x7d, 0x1a, 0xe0, 0x5a, 0xfe, 0x9f, 0x09, 0x7a, 0xb4, 0xc6,
	0x9f, 0x6b, 0x05, 0x1d, 0xfc, 0x57, 0xb7, 0x8a, 0x3f, 0x58, 0xc5, 0x7f, 0xab, 0x15, 0x2c, 0xe9,
	0xc5, 0x76, 0xfc, 0x09, 0x9e, 0xfd, 0x09, 0x00, 0x00, 0xff, 0xff, 0x28, 0x5e, 0xd1, 0xb9, 0x21,
	0x05, 0x00, 0x00,
}
