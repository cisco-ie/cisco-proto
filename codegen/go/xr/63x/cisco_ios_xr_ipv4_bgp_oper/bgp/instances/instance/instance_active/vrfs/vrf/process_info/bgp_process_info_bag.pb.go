/*
Copyright 2019 Cisco Systems

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: bgp_process_info_bag.proto

package cisco_ios_xr_ipv4_bgp_oper_bgp_instances_instance_instance_active_vrfs_vrf_process_info

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type BgpProcessInfoBag_KEYS struct {
	InstanceName         string   `protobuf:"bytes,1,opt,name=instance_name,json=instanceName,proto3" json:"instance_name,omitempty"`
	VrfName              string   `protobuf:"bytes,2,opt,name=vrf_name,json=vrfName,proto3" json:"vrf_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BgpProcessInfoBag_KEYS) Reset()         { *m = BgpProcessInfoBag_KEYS{} }
func (m *BgpProcessInfoBag_KEYS) String() string { return proto.CompactTextString(m) }
func (*BgpProcessInfoBag_KEYS) ProtoMessage()    {}
func (*BgpProcessInfoBag_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_963cc3c7231da349, []int{0}
}

func (m *BgpProcessInfoBag_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BgpProcessInfoBag_KEYS.Unmarshal(m, b)
}
func (m *BgpProcessInfoBag_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BgpProcessInfoBag_KEYS.Marshal(b, m, deterministic)
}
func (m *BgpProcessInfoBag_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BgpProcessInfoBag_KEYS.Merge(m, src)
}
func (m *BgpProcessInfoBag_KEYS) XXX_Size() int {
	return xxx_messageInfo_BgpProcessInfoBag_KEYS.Size(m)
}
func (m *BgpProcessInfoBag_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_BgpProcessInfoBag_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_BgpProcessInfoBag_KEYS proto.InternalMessageInfo

func (m *BgpProcessInfoBag_KEYS) GetInstanceName() string {
	if m != nil {
		return m.InstanceName
	}
	return ""
}

func (m *BgpProcessInfoBag_KEYS) GetVrfName() string {
	if m != nil {
		return m.VrfName
	}
	return ""
}

type BgpProcessInfoGbl_ struct {
	ProcessInstanceNode            string   `protobuf:"bytes,1,opt,name=process_instance_node,json=processInstanceNode,proto3" json:"process_instance_node,omitempty"`
	RestartCount                   uint32   `protobuf:"varint,2,opt,name=restart_count,json=restartCount,proto3" json:"restart_count,omitempty"`
	PathAttributesEntryCount       uint32   `protobuf:"varint,3,opt,name=path_attributes_entry_count,json=pathAttributesEntryCount,proto3" json:"path_attributes_entry_count,omitempty"`
	PathAttributeMemory            uint32   `protobuf:"varint,4,opt,name=path_attribute_memory,json=pathAttributeMemory,proto3" json:"path_attribute_memory,omitempty"`
	AsPathEntryCount               uint32   `protobuf:"varint,5,opt,name=as_path_entry_count,json=asPathEntryCount,proto3" json:"as_path_entry_count,omitempty"`
	AsPathEntriesMemory            uint32   `protobuf:"varint,6,opt,name=as_path_entries_memory,json=asPathEntriesMemory,proto3" json:"as_path_entries_memory,omitempty"`
	CommunityEntryCount            uint32   `protobuf:"varint,7,opt,name=community_entry_count,json=communityEntryCount,proto3" json:"community_entry_count,omitempty"`
	CommunityMemory                uint32   `protobuf:"varint,8,opt,name=community_memory,json=communityMemory,proto3" json:"community_memory,omitempty"`
	ExtendedCommunityEntryCount    uint32   `protobuf:"varint,9,opt,name=extended_community_entry_count,json=extendedCommunityEntryCount,proto3" json:"extended_community_entry_count,omitempty"`
	ExtendedCommunityMemory        uint32   `protobuf:"varint,10,opt,name=extended_community_memory,json=extendedCommunityMemory,proto3" json:"extended_community_memory,omitempty"`
	PeDistinguisherLabelEntryCount uint32   `protobuf:"varint,11,opt,name=pe_distinguisher_label_entry_count,json=peDistinguisherLabelEntryCount,proto3" json:"pe_distinguisher_label_entry_count,omitempty"`
	PeDistinguisherLabelMemory     uint32   `protobuf:"varint,12,opt,name=pe_distinguisher_label_memory,json=peDistinguisherLabelMemory,proto3" json:"pe_distinguisher_label_memory,omitempty"`
	PtaEntryCount                  uint32   `protobuf:"varint,13,opt,name=pta_entry_count,json=ptaEntryCount,proto3" json:"pta_entry_count,omitempty"`
	PtaMemory                      uint32   `protobuf:"varint,14,opt,name=pta_memory,json=ptaMemory,proto3" json:"pta_memory,omitempty"`
	TunnelEncapEntryCount          uint32   `protobuf:"varint,15,opt,name=tunnel_encap_entry_count,json=tunnelEncapEntryCount,proto3" json:"tunnel_encap_entry_count,omitempty"`
	TunnelEncapMemory              uint32   `protobuf:"varint,16,opt,name=tunnel_encap_memory,json=tunnelEncapMemory,proto3" json:"tunnel_encap_memory,omitempty"`
	RibrnhEntryCount               uint32   `protobuf:"varint,17,opt,name=ribrnh_entry_count,json=ribrnhEntryCount,proto3" json:"ribrnh_entry_count,omitempty"`
	RibrnhMemory                   uint32   `protobuf:"varint,18,opt,name=ribrnh_memory,json=ribrnhMemory,proto3" json:"ribrnh_memory,omitempty"`
	PpmpEntryCount                 uint32   `protobuf:"varint,19,opt,name=ppmp_entry_count,json=ppmpEntryCount,proto3" json:"ppmp_entry_count,omitempty"`
	PpmpMemory                     uint32   `protobuf:"varint,20,opt,name=ppmp_memory,json=ppmpMemory,proto3" json:"ppmp_memory,omitempty"`
	RouteReflectors                uint32   `protobuf:"varint,21,opt,name=route_reflectors,json=routeReflectors,proto3" json:"route_reflectors,omitempty"`
	RouteReflectorMemory           uint32   `protobuf:"varint,22,opt,name=route_reflector_memory,json=routeReflectorMemory,proto3" json:"route_reflector_memory,omitempty"`
	NexthopCount                   uint32   `protobuf:"varint,23,opt,name=nexthop_count,json=nexthopCount,proto3" json:"nexthop_count,omitempty"`
	NexthopMemory                  uint32   `protobuf:"varint,24,opt,name=nexthop_memory,json=nexthopMemory,proto3" json:"nexthop_memory,omitempty"`
	LsattrEntryCount               uint32   `protobuf:"varint,25,opt,name=lsattr_entry_count,json=lsattrEntryCount,proto3" json:"lsattr_entry_count,omitempty"`
	LsattrMemory                   uint32   `protobuf:"varint,26,opt,name=lsattr_memory,json=lsattrMemory,proto3" json:"lsattr_memory,omitempty"`
	AttrSetEntryCount              uint32   `protobuf:"varint,27,opt,name=attr_set_entry_count,json=attrSetEntryCount,proto3" json:"attr_set_entry_count,omitempty"`
	AttrSetMemory                  uint32   `protobuf:"varint,28,opt,name=attr_set_memory,json=attrSetMemory,proto3" json:"attr_set_memory,omitempty"`
	LindexEntryCount               uint32   `protobuf:"varint,29,opt,name=lindex_entry_count,json=lindexEntryCount,proto3" json:"lindex_entry_count,omitempty"`
	LindexMemory                   uint32   `protobuf:"varint,30,opt,name=lindex_memory,json=lindexMemory,proto3" json:"lindex_memory,omitempty"`
	LocalAs                        uint32   `protobuf:"varint,31,opt,name=local_as,json=localAs,proto3" json:"local_as,omitempty"`
	PoolSize                       []uint32 `protobuf:"varint,32,rep,packed,name=pool_size,json=poolSize,proto3" json:"pool_size,omitempty"`
	PoolAllocCount                 []uint32 `protobuf:"varint,33,rep,packed,name=pool_alloc_count,json=poolAllocCount,proto3" json:"pool_alloc_count,omitempty"`
	PoolFreeCount                  []uint32 `protobuf:"varint,34,rep,packed,name=pool_free_count,json=poolFreeCount,proto3" json:"pool_free_count,omitempty"`
	MsgLogPoolSize                 []uint32 `protobuf:"varint,35,rep,packed,name=msg_log_pool_size,json=msgLogPoolSize,proto3" json:"msg_log_pool_size,omitempty"`
	MsgLogPoolAllocCount           []uint32 `protobuf:"varint,36,rep,packed,name=msg_log_pool_alloc_count,json=msgLogPoolAllocCount,proto3" json:"msg_log_pool_alloc_count,omitempty"`
	MsgLogPoolFreeCount            []uint32 `protobuf:"varint,37,rep,packed,name=msg_log_pool_free_count,json=msgLogPoolFreeCount,proto3" json:"msg_log_pool_free_count,omitempty"`
	TotalVrfCount                  uint32   `protobuf:"varint,38,opt,name=total_vrf_count,json=totalVrfCount,proto3" json:"total_vrf_count,omitempty"`
	NeighborsCountTotal            uint32   `protobuf:"varint,39,opt,name=neighbors_count_total,json=neighborsCountTotal,proto3" json:"neighbors_count_total,omitempty"`
	EstablishedNeighborsCountTotal uint32   `protobuf:"varint,40,opt,name=established_neighbors_count_total,json=establishedNeighborsCountTotal,proto3" json:"established_neighbors_count_total,omitempty"`
	SnNumNonDfltVrfNbrs            uint32   `protobuf:"varint,41,opt,name=sn_num_non_dflt_vrf_nbrs,json=snNumNonDfltVrfNbrs,proto3" json:"sn_num_non_dflt_vrf_nbrs,omitempty"`
	SnNumNonDfltVrfNbrsEstab       uint32   `protobuf:"varint,42,opt,name=sn_num_non_dflt_vrf_nbrs_estab,json=snNumNonDfltVrfNbrsEstab,proto3" json:"sn_num_non_dflt_vrf_nbrs_estab,omitempty"`
	BmpPoolSize                    []uint32 `protobuf:"varint,43,rep,packed,name=bmp_pool_size,json=bmpPoolSize,proto3" json:"bmp_pool_size,omitempty"`
	BmpPoolAllocCount              []uint32 `protobuf:"varint,44,rep,packed,name=bmp_pool_alloc_count,json=bmpPoolAllocCount,proto3" json:"bmp_pool_alloc_count,omitempty"`
	BmpPoolFreeCount               []uint32 `protobuf:"varint,45,rep,packed,name=bmp_pool_free_count,json=bmpPoolFreeCount,proto3" json:"bmp_pool_free_count,omitempty"`
	LargeCommunityEntryCount       uint32   `protobuf:"varint,46,opt,name=large_community_entry_count,json=largeCommunityEntryCount,proto3" json:"large_community_entry_count,omitempty"`
	LargeCommunityMemory           uint32   `protobuf:"varint,47,opt,name=large_community_memory,json=largeCommunityMemory,proto3" json:"large_community_memory,omitempty"`
	XXX_NoUnkeyedLiteral           struct{} `json:"-"`
	XXX_unrecognized               []byte   `json:"-"`
	XXX_sizecache                  int32    `json:"-"`
}

func (m *BgpProcessInfoGbl_) Reset()         { *m = BgpProcessInfoGbl_{} }
func (m *BgpProcessInfoGbl_) String() string { return proto.CompactTextString(m) }
func (*BgpProcessInfoGbl_) ProtoMessage()    {}
func (*BgpProcessInfoGbl_) Descriptor() ([]byte, []int) {
	return fileDescriptor_963cc3c7231da349, []int{1}
}

func (m *BgpProcessInfoGbl_) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BgpProcessInfoGbl_.Unmarshal(m, b)
}
func (m *BgpProcessInfoGbl_) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BgpProcessInfoGbl_.Marshal(b, m, deterministic)
}
func (m *BgpProcessInfoGbl_) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BgpProcessInfoGbl_.Merge(m, src)
}
func (m *BgpProcessInfoGbl_) XXX_Size() int {
	return xxx_messageInfo_BgpProcessInfoGbl_.Size(m)
}
func (m *BgpProcessInfoGbl_) XXX_DiscardUnknown() {
	xxx_messageInfo_BgpProcessInfoGbl_.DiscardUnknown(m)
}

var xxx_messageInfo_BgpProcessInfoGbl_ proto.InternalMessageInfo

func (m *BgpProcessInfoGbl_) GetProcessInstanceNode() string {
	if m != nil {
		return m.ProcessInstanceNode
	}
	return ""
}

func (m *BgpProcessInfoGbl_) GetRestartCount() uint32 {
	if m != nil {
		return m.RestartCount
	}
	return 0
}

func (m *BgpProcessInfoGbl_) GetPathAttributesEntryCount() uint32 {
	if m != nil {
		return m.PathAttributesEntryCount
	}
	return 0
}

func (m *BgpProcessInfoGbl_) GetPathAttributeMemory() uint32 {
	if m != nil {
		return m.PathAttributeMemory
	}
	return 0
}

func (m *BgpProcessInfoGbl_) GetAsPathEntryCount() uint32 {
	if m != nil {
		return m.AsPathEntryCount
	}
	return 0
}

func (m *BgpProcessInfoGbl_) GetAsPathEntriesMemory() uint32 {
	if m != nil {
		return m.AsPathEntriesMemory
	}
	return 0
}

func (m *BgpProcessInfoGbl_) GetCommunityEntryCount() uint32 {
	if m != nil {
		return m.CommunityEntryCount
	}
	return 0
}

func (m *BgpProcessInfoGbl_) GetCommunityMemory() uint32 {
	if m != nil {
		return m.CommunityMemory
	}
	return 0
}

func (m *BgpProcessInfoGbl_) GetExtendedCommunityEntryCount() uint32 {
	if m != nil {
		return m.ExtendedCommunityEntryCount
	}
	return 0
}

func (m *BgpProcessInfoGbl_) GetExtendedCommunityMemory() uint32 {
	if m != nil {
		return m.ExtendedCommunityMemory
	}
	return 0
}

func (m *BgpProcessInfoGbl_) GetPeDistinguisherLabelEntryCount() uint32 {
	if m != nil {
		return m.PeDistinguisherLabelEntryCount
	}
	return 0
}

func (m *BgpProcessInfoGbl_) GetPeDistinguisherLabelMemory() uint32 {
	if m != nil {
		return m.PeDistinguisherLabelMemory
	}
	return 0
}

func (m *BgpProcessInfoGbl_) GetPtaEntryCount() uint32 {
	if m != nil {
		return m.PtaEntryCount
	}
	return 0
}

func (m *BgpProcessInfoGbl_) GetPtaMemory() uint32 {
	if m != nil {
		return m.PtaMemory
	}
	return 0
}

func (m *BgpProcessInfoGbl_) GetTunnelEncapEntryCount() uint32 {
	if m != nil {
		return m.TunnelEncapEntryCount
	}
	return 0
}

func (m *BgpProcessInfoGbl_) GetTunnelEncapMemory() uint32 {
	if m != nil {
		return m.TunnelEncapMemory
	}
	return 0
}

func (m *BgpProcessInfoGbl_) GetRibrnhEntryCount() uint32 {
	if m != nil {
		return m.RibrnhEntryCount
	}
	return 0
}

func (m *BgpProcessInfoGbl_) GetRibrnhMemory() uint32 {
	if m != nil {
		return m.RibrnhMemory
	}
	return 0
}

func (m *BgpProcessInfoGbl_) GetPpmpEntryCount() uint32 {
	if m != nil {
		return m.PpmpEntryCount
	}
	return 0
}

func (m *BgpProcessInfoGbl_) GetPpmpMemory() uint32 {
	if m != nil {
		return m.PpmpMemory
	}
	return 0
}

func (m *BgpProcessInfoGbl_) GetRouteReflectors() uint32 {
	if m != nil {
		return m.RouteReflectors
	}
	return 0
}

func (m *BgpProcessInfoGbl_) GetRouteReflectorMemory() uint32 {
	if m != nil {
		return m.RouteReflectorMemory
	}
	return 0
}

func (m *BgpProcessInfoGbl_) GetNexthopCount() uint32 {
	if m != nil {
		return m.NexthopCount
	}
	return 0
}

func (m *BgpProcessInfoGbl_) GetNexthopMemory() uint32 {
	if m != nil {
		return m.NexthopMemory
	}
	return 0
}

func (m *BgpProcessInfoGbl_) GetLsattrEntryCount() uint32 {
	if m != nil {
		return m.LsattrEntryCount
	}
	return 0
}

func (m *BgpProcessInfoGbl_) GetLsattrMemory() uint32 {
	if m != nil {
		return m.LsattrMemory
	}
	return 0
}

func (m *BgpProcessInfoGbl_) GetAttrSetEntryCount() uint32 {
	if m != nil {
		return m.AttrSetEntryCount
	}
	return 0
}

func (m *BgpProcessInfoGbl_) GetAttrSetMemory() uint32 {
	if m != nil {
		return m.AttrSetMemory
	}
	return 0
}

func (m *BgpProcessInfoGbl_) GetLindexEntryCount() uint32 {
	if m != nil {
		return m.LindexEntryCount
	}
	return 0
}

func (m *BgpProcessInfoGbl_) GetLindexMemory() uint32 {
	if m != nil {
		return m.LindexMemory
	}
	return 0
}

func (m *BgpProcessInfoGbl_) GetLocalAs() uint32 {
	if m != nil {
		return m.LocalAs
	}
	return 0
}

func (m *BgpProcessInfoGbl_) GetPoolSize() []uint32 {
	if m != nil {
		return m.PoolSize
	}
	return nil
}

func (m *BgpProcessInfoGbl_) GetPoolAllocCount() []uint32 {
	if m != nil {
		return m.PoolAllocCount
	}
	return nil
}

func (m *BgpProcessInfoGbl_) GetPoolFreeCount() []uint32 {
	if m != nil {
		return m.PoolFreeCount
	}
	return nil
}

func (m *BgpProcessInfoGbl_) GetMsgLogPoolSize() []uint32 {
	if m != nil {
		return m.MsgLogPoolSize
	}
	return nil
}

func (m *BgpProcessInfoGbl_) GetMsgLogPoolAllocCount() []uint32 {
	if m != nil {
		return m.MsgLogPoolAllocCount
	}
	return nil
}

func (m *BgpProcessInfoGbl_) GetMsgLogPoolFreeCount() []uint32 {
	if m != nil {
		return m.MsgLogPoolFreeCount
	}
	return nil
}

func (m *BgpProcessInfoGbl_) GetTotalVrfCount() uint32 {
	if m != nil {
		return m.TotalVrfCount
	}
	return 0
}

func (m *BgpProcessInfoGbl_) GetNeighborsCountTotal() uint32 {
	if m != nil {
		return m.NeighborsCountTotal
	}
	return 0
}

func (m *BgpProcessInfoGbl_) GetEstablishedNeighborsCountTotal() uint32 {
	if m != nil {
		return m.EstablishedNeighborsCountTotal
	}
	return 0
}

func (m *BgpProcessInfoGbl_) GetSnNumNonDfltVrfNbrs() uint32 {
	if m != nil {
		return m.SnNumNonDfltVrfNbrs
	}
	return 0
}

func (m *BgpProcessInfoGbl_) GetSnNumNonDfltVrfNbrsEstab() uint32 {
	if m != nil {
		return m.SnNumNonDfltVrfNbrsEstab
	}
	return 0
}

func (m *BgpProcessInfoGbl_) GetBmpPoolSize() []uint32 {
	if m != nil {
		return m.BmpPoolSize
	}
	return nil
}

func (m *BgpProcessInfoGbl_) GetBmpPoolAllocCount() []uint32 {
	if m != nil {
		return m.BmpPoolAllocCount
	}
	return nil
}

func (m *BgpProcessInfoGbl_) GetBmpPoolFreeCount() []uint32 {
	if m != nil {
		return m.BmpPoolFreeCount
	}
	return nil
}

func (m *BgpProcessInfoGbl_) GetLargeCommunityEntryCount() uint32 {
	if m != nil {
		return m.LargeCommunityEntryCount
	}
	return 0
}

func (m *BgpProcessInfoGbl_) GetLargeCommunityMemory() uint32 {
	if m != nil {
		return m.LargeCommunityMemory
	}
	return 0
}

type BgpProcessInfoVrf_ struct {
	NeighborsCount            uint32   `protobuf:"varint,1,opt,name=neighbors_count,json=neighborsCount,proto3" json:"neighbors_count,omitempty"`
	EstablishedNeighborsCount uint32   `protobuf:"varint,2,opt,name=established_neighbors_count,json=establishedNeighborsCount,proto3" json:"established_neighbors_count,omitempty"`
	UpdateMessagesReceived    uint32   `protobuf:"varint,3,opt,name=update_messages_received,json=updateMessagesReceived,proto3" json:"update_messages_received,omitempty"`
	UpdateMessagesSent        uint32   `protobuf:"varint,4,opt,name=update_messages_sent,json=updateMessagesSent,proto3" json:"update_messages_sent,omitempty"`
	NotificationsReceived     uint32   `protobuf:"varint,5,opt,name=notifications_received,json=notificationsReceived,proto3" json:"notifications_received,omitempty"`
	NotificationsSent         uint32   `protobuf:"varint,6,opt,name=notifications_sent,json=notificationsSent,proto3" json:"notifications_sent,omitempty"`
	NetworkCount              uint32   `protobuf:"varint,7,opt,name=network_count,json=networkCount,proto3" json:"network_count,omitempty"`
	PathCount                 uint32   `protobuf:"varint,8,opt,name=path_count,json=pathCount,proto3" json:"path_count,omitempty"`
	XXX_NoUnkeyedLiteral      struct{} `json:"-"`
	XXX_unrecognized          []byte   `json:"-"`
	XXX_sizecache             int32    `json:"-"`
}

func (m *BgpProcessInfoVrf_) Reset()         { *m = BgpProcessInfoVrf_{} }
func (m *BgpProcessInfoVrf_) String() string { return proto.CompactTextString(m) }
func (*BgpProcessInfoVrf_) ProtoMessage()    {}
func (*BgpProcessInfoVrf_) Descriptor() ([]byte, []int) {
	return fileDescriptor_963cc3c7231da349, []int{2}
}

func (m *BgpProcessInfoVrf_) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BgpProcessInfoVrf_.Unmarshal(m, b)
}
func (m *BgpProcessInfoVrf_) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BgpProcessInfoVrf_.Marshal(b, m, deterministic)
}
func (m *BgpProcessInfoVrf_) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BgpProcessInfoVrf_.Merge(m, src)
}
func (m *BgpProcessInfoVrf_) XXX_Size() int {
	return xxx_messageInfo_BgpProcessInfoVrf_.Size(m)
}
func (m *BgpProcessInfoVrf_) XXX_DiscardUnknown() {
	xxx_messageInfo_BgpProcessInfoVrf_.DiscardUnknown(m)
}

var xxx_messageInfo_BgpProcessInfoVrf_ proto.InternalMessageInfo

func (m *BgpProcessInfoVrf_) GetNeighborsCount() uint32 {
	if m != nil {
		return m.NeighborsCount
	}
	return 0
}

func (m *BgpProcessInfoVrf_) GetEstablishedNeighborsCount() uint32 {
	if m != nil {
		return m.EstablishedNeighborsCount
	}
	return 0
}

func (m *BgpProcessInfoVrf_) GetUpdateMessagesReceived() uint32 {
	if m != nil {
		return m.UpdateMessagesReceived
	}
	return 0
}

func (m *BgpProcessInfoVrf_) GetUpdateMessagesSent() uint32 {
	if m != nil {
		return m.UpdateMessagesSent
	}
	return 0
}

func (m *BgpProcessInfoVrf_) GetNotificationsReceived() uint32 {
	if m != nil {
		return m.NotificationsReceived
	}
	return 0
}

func (m *BgpProcessInfoVrf_) GetNotificationsSent() uint32 {
	if m != nil {
		return m.NotificationsSent
	}
	return 0
}

func (m *BgpProcessInfoVrf_) GetNetworkCount() uint32 {
	if m != nil {
		return m.NetworkCount
	}
	return 0
}

func (m *BgpProcessInfoVrf_) GetPathCount() uint32 {
	if m != nil {
		return m.PathCount
	}
	return 0
}

type BgpL2VpnAddrT struct {
	L2VpnAddress         []uint32 `protobuf:"varint,1,rep,packed,name=l2vpn_address,json=l2vpnAddress,proto3" json:"l2vpn_address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BgpL2VpnAddrT) Reset()         { *m = BgpL2VpnAddrT{} }
func (m *BgpL2VpnAddrT) String() string { return proto.CompactTextString(m) }
func (*BgpL2VpnAddrT) ProtoMessage()    {}
func (*BgpL2VpnAddrT) Descriptor() ([]byte, []int) {
	return fileDescriptor_963cc3c7231da349, []int{3}
}

func (m *BgpL2VpnAddrT) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BgpL2VpnAddrT.Unmarshal(m, b)
}
func (m *BgpL2VpnAddrT) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BgpL2VpnAddrT.Marshal(b, m, deterministic)
}
func (m *BgpL2VpnAddrT) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BgpL2VpnAddrT.Merge(m, src)
}
func (m *BgpL2VpnAddrT) XXX_Size() int {
	return xxx_messageInfo_BgpL2VpnAddrT.Size(m)
}
func (m *BgpL2VpnAddrT) XXX_DiscardUnknown() {
	xxx_messageInfo_BgpL2VpnAddrT.DiscardUnknown(m)
}

var xxx_messageInfo_BgpL2VpnAddrT proto.InternalMessageInfo

func (m *BgpL2VpnAddrT) GetL2VpnAddress() []uint32 {
	if m != nil {
		return m.L2VpnAddress
	}
	return nil
}

type BgpL2VpnMspwAddrT struct {
	L2VpnAddress         []uint32 `protobuf:"varint,1,rep,packed,name=l2vpn_address,json=l2vpnAddress,proto3" json:"l2vpn_address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BgpL2VpnMspwAddrT) Reset()         { *m = BgpL2VpnMspwAddrT{} }
func (m *BgpL2VpnMspwAddrT) String() string { return proto.CompactTextString(m) }
func (*BgpL2VpnMspwAddrT) ProtoMessage()    {}
func (*BgpL2VpnMspwAddrT) Descriptor() ([]byte, []int) {
	return fileDescriptor_963cc3c7231da349, []int{4}
}

func (m *BgpL2VpnMspwAddrT) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BgpL2VpnMspwAddrT.Unmarshal(m, b)
}
func (m *BgpL2VpnMspwAddrT) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BgpL2VpnMspwAddrT.Marshal(b, m, deterministic)
}
func (m *BgpL2VpnMspwAddrT) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BgpL2VpnMspwAddrT.Merge(m, src)
}
func (m *BgpL2VpnMspwAddrT) XXX_Size() int {
	return xxx_messageInfo_BgpL2VpnMspwAddrT.Size(m)
}
func (m *BgpL2VpnMspwAddrT) XXX_DiscardUnknown() {
	xxx_messageInfo_BgpL2VpnMspwAddrT.DiscardUnknown(m)
}

var xxx_messageInfo_BgpL2VpnMspwAddrT proto.InternalMessageInfo

func (m *BgpL2VpnMspwAddrT) GetL2VpnAddress() []uint32 {
	if m != nil {
		return m.L2VpnAddress
	}
	return nil
}

type BgpIpv4SrpolicyAddrT struct {
	Ipv4SrpolicyAddress  []uint32 `protobuf:"varint,1,rep,packed,name=ipv4_srpolicy_address,json=ipv4SrpolicyAddress,proto3" json:"ipv4_srpolicy_address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BgpIpv4SrpolicyAddrT) Reset()         { *m = BgpIpv4SrpolicyAddrT{} }
func (m *BgpIpv4SrpolicyAddrT) String() string { return proto.CompactTextString(m) }
func (*BgpIpv4SrpolicyAddrT) ProtoMessage()    {}
func (*BgpIpv4SrpolicyAddrT) Descriptor() ([]byte, []int) {
	return fileDescriptor_963cc3c7231da349, []int{5}
}

func (m *BgpIpv4SrpolicyAddrT) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BgpIpv4SrpolicyAddrT.Unmarshal(m, b)
}
func (m *BgpIpv4SrpolicyAddrT) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BgpIpv4SrpolicyAddrT.Marshal(b, m, deterministic)
}
func (m *BgpIpv4SrpolicyAddrT) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BgpIpv4SrpolicyAddrT.Merge(m, src)
}
func (m *BgpIpv4SrpolicyAddrT) XXX_Size() int {
	return xxx_messageInfo_BgpIpv4SrpolicyAddrT.Size(m)
}
func (m *BgpIpv4SrpolicyAddrT) XXX_DiscardUnknown() {
	xxx_messageInfo_BgpIpv4SrpolicyAddrT.DiscardUnknown(m)
}

var xxx_messageInfo_BgpIpv4SrpolicyAddrT proto.InternalMessageInfo

func (m *BgpIpv4SrpolicyAddrT) GetIpv4SrpolicyAddress() []uint32 {
	if m != nil {
		return m.Ipv4SrpolicyAddress
	}
	return nil
}

type BgpIpv6SrpolicyAddrT struct {
	Ipv6SrpolicyAddress  []uint32 `protobuf:"varint,1,rep,packed,name=ipv6_srpolicy_address,json=ipv6SrpolicyAddress,proto3" json:"ipv6_srpolicy_address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BgpIpv6SrpolicyAddrT) Reset()         { *m = BgpIpv6SrpolicyAddrT{} }
func (m *BgpIpv6SrpolicyAddrT) String() string { return proto.CompactTextString(m) }
func (*BgpIpv6SrpolicyAddrT) ProtoMessage()    {}
func (*BgpIpv6SrpolicyAddrT) Descriptor() ([]byte, []int) {
	return fileDescriptor_963cc3c7231da349, []int{6}
}

func (m *BgpIpv6SrpolicyAddrT) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BgpIpv6SrpolicyAddrT.Unmarshal(m, b)
}
func (m *BgpIpv6SrpolicyAddrT) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BgpIpv6SrpolicyAddrT.Marshal(b, m, deterministic)
}
func (m *BgpIpv6SrpolicyAddrT) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BgpIpv6SrpolicyAddrT.Merge(m, src)
}
func (m *BgpIpv6SrpolicyAddrT) XXX_Size() int {
	return xxx_messageInfo_BgpIpv6SrpolicyAddrT.Size(m)
}
func (m *BgpIpv6SrpolicyAddrT) XXX_DiscardUnknown() {
	xxx_messageInfo_BgpIpv6SrpolicyAddrT.DiscardUnknown(m)
}

var xxx_messageInfo_BgpIpv6SrpolicyAddrT proto.InternalMessageInfo

func (m *BgpIpv6SrpolicyAddrT) GetIpv6SrpolicyAddress() []uint32 {
	if m != nil {
		return m.Ipv6SrpolicyAddress
	}
	return nil
}

type BgpAddrtype struct {
	Afi                    string                `protobuf:"bytes,1,opt,name=afi,proto3" json:"afi,omitempty"`
	Ipv4Address            string                `protobuf:"bytes,2,opt,name=ipv4_address,json=ipv4Address,proto3" json:"ipv4_address,omitempty"`
	Ipv4McastAddress       string                `protobuf:"bytes,3,opt,name=ipv4_mcast_address,json=ipv4McastAddress,proto3" json:"ipv4_mcast_address,omitempty"`
	Ipv4LabelAddress       string                `protobuf:"bytes,4,opt,name=ipv4_label_address,json=ipv4LabelAddress,proto3" json:"ipv4_label_address,omitempty"`
	Ipv4TunnelAddress      string                `protobuf:"bytes,5,opt,name=ipv4_tunnel_address,json=ipv4TunnelAddress,proto3" json:"ipv4_tunnel_address,omitempty"`
	Ipv4MdtAddress         string                `protobuf:"bytes,6,opt,name=ipv4_mdt_address,json=ipv4MdtAddress,proto3" json:"ipv4_mdt_address,omitempty"`
	Ipv4VpnAddress         string                `protobuf:"bytes,7,opt,name=ipv4vpn_address,json=ipv4vpnAddress,proto3" json:"ipv4vpn_address,omitempty"`
	Ipv4VpnaMcastddress    string                `protobuf:"bytes,8,opt,name=ipv4vpna_mcastddress,json=ipv4vpnaMcastddress,proto3" json:"ipv4vpna_mcastddress,omitempty"`
	Ipv6Address            string                `protobuf:"bytes,9,opt,name=ipv6_address,json=ipv6Address,proto3" json:"ipv6_address,omitempty"`
	Ipv6McastAddress       string                `protobuf:"bytes,10,opt,name=ipv6_mcast_address,json=ipv6McastAddress,proto3" json:"ipv6_mcast_address,omitempty"`
	Ipv6LabelAddress       string                `protobuf:"bytes,11,opt,name=ipv6_label_address,json=ipv6LabelAddress,proto3" json:"ipv6_label_address,omitempty"`
	Ipv6VpnAddress         string                `protobuf:"bytes,12,opt,name=ipv6vpn_address,json=ipv6vpnAddress,proto3" json:"ipv6vpn_address,omitempty"`
	Ipv6VpnMcastAddress    string                `protobuf:"bytes,13,opt,name=ipv6vpn_mcast_address,json=ipv6vpnMcastAddress,proto3" json:"ipv6vpn_mcast_address,omitempty"`
	L2VpnVplsAddress       *BgpL2VpnAddrT        `protobuf:"bytes,14,opt,name=l2vpn_vpls_address,json=l2vpnVplsAddress,proto3" json:"l2vpn_vpls_address,omitempty"`
	RtConstraintAddress    string                `protobuf:"bytes,15,opt,name=rt_constraint_address,json=rtConstraintAddress,proto3" json:"rt_constraint_address,omitempty"`
	Ipv6MvpnAddress        string                `protobuf:"bytes,16,opt,name=ipv6mvpn_address,json=ipv6mvpnAddress,proto3" json:"ipv6mvpn_address,omitempty"`
	Ipv4MvpnAddress        string                `protobuf:"bytes,17,opt,name=ipv4mvpn_address,json=ipv4mvpnAddress,proto3" json:"ipv4mvpn_address,omitempty"`
	L2VpnEvpnAddress       string                `protobuf:"bytes,18,opt,name=l2vpn_evpn_address,json=l2vpnEvpnAddress,proto3" json:"l2vpn_evpn_address,omitempty"`
	LsLsAddress            string                `protobuf:"bytes,19,opt,name=ls_ls_address,json=lsLsAddress,proto3" json:"ls_ls_address,omitempty"`
	L2VpnMspwAddress       *BgpL2VpnMspwAddrT    `protobuf:"bytes,20,opt,name=l2vpn_mspw_address,json=l2vpnMspwAddress,proto3" json:"l2vpn_mspw_address,omitempty"`
	Ipv4FlowspecAddress    string                `protobuf:"bytes,21,opt,name=ipv4_flowspec_address,json=ipv4FlowspecAddress,proto3" json:"ipv4_flowspec_address,omitempty"`
	Ipv6FlowspecAddress    string                `protobuf:"bytes,22,opt,name=ipv6_flowspec_address,json=ipv6FlowspecAddress,proto3" json:"ipv6_flowspec_address,omitempty"`
	Ipv4VpnFlowspecAddress string                `protobuf:"bytes,23,opt,name=ipv4vpn_flowspec_address,json=ipv4vpnFlowspecAddress,proto3" json:"ipv4vpn_flowspec_address,omitempty"`
	Ipv6VpnFlowspecAddress string                `protobuf:"bytes,24,opt,name=ipv6vpn_flowspec_address,json=ipv6vpnFlowspecAddress,proto3" json:"ipv6vpn_flowspec_address,omitempty"`
	Ipv4SrPolicyAddress    *BgpIpv4SrpolicyAddrT `protobuf:"bytes,25,opt,name=ipv4_sr_policy_address,json=ipv4SrPolicyAddress,proto3" json:"ipv4_sr_policy_address,omitempty"`
	Ipv6SrPolicyAddress    *BgpIpv6SrpolicyAddrT `protobuf:"bytes,26,opt,name=ipv6_sr_policy_address,json=ipv6SrPolicyAddress,proto3" json:"ipv6_sr_policy_address,omitempty"`
	XXX_NoUnkeyedLiteral   struct{}              `json:"-"`
	XXX_unrecognized       []byte                `json:"-"`
	XXX_sizecache          int32                 `json:"-"`
}

func (m *BgpAddrtype) Reset()         { *m = BgpAddrtype{} }
func (m *BgpAddrtype) String() string { return proto.CompactTextString(m) }
func (*BgpAddrtype) ProtoMessage()    {}
func (*BgpAddrtype) Descriptor() ([]byte, []int) {
	return fileDescriptor_963cc3c7231da349, []int{7}
}

func (m *BgpAddrtype) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BgpAddrtype.Unmarshal(m, b)
}
func (m *BgpAddrtype) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BgpAddrtype.Marshal(b, m, deterministic)
}
func (m *BgpAddrtype) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BgpAddrtype.Merge(m, src)
}
func (m *BgpAddrtype) XXX_Size() int {
	return xxx_messageInfo_BgpAddrtype.Size(m)
}
func (m *BgpAddrtype) XXX_DiscardUnknown() {
	xxx_messageInfo_BgpAddrtype.DiscardUnknown(m)
}

var xxx_messageInfo_BgpAddrtype proto.InternalMessageInfo

func (m *BgpAddrtype) GetAfi() string {
	if m != nil {
		return m.Afi
	}
	return ""
}

func (m *BgpAddrtype) GetIpv4Address() string {
	if m != nil {
		return m.Ipv4Address
	}
	return ""
}

func (m *BgpAddrtype) GetIpv4McastAddress() string {
	if m != nil {
		return m.Ipv4McastAddress
	}
	return ""
}

func (m *BgpAddrtype) GetIpv4LabelAddress() string {
	if m != nil {
		return m.Ipv4LabelAddress
	}
	return ""
}

func (m *BgpAddrtype) GetIpv4TunnelAddress() string {
	if m != nil {
		return m.Ipv4TunnelAddress
	}
	return ""
}

func (m *BgpAddrtype) GetIpv4MdtAddress() string {
	if m != nil {
		return m.Ipv4MdtAddress
	}
	return ""
}

func (m *BgpAddrtype) GetIpv4VpnAddress() string {
	if m != nil {
		return m.Ipv4VpnAddress
	}
	return ""
}

func (m *BgpAddrtype) GetIpv4VpnaMcastddress() string {
	if m != nil {
		return m.Ipv4VpnaMcastddress
	}
	return ""
}

func (m *BgpAddrtype) GetIpv6Address() string {
	if m != nil {
		return m.Ipv6Address
	}
	return ""
}

func (m *BgpAddrtype) GetIpv6McastAddress() string {
	if m != nil {
		return m.Ipv6McastAddress
	}
	return ""
}

func (m *BgpAddrtype) GetIpv6LabelAddress() string {
	if m != nil {
		return m.Ipv6LabelAddress
	}
	return ""
}

func (m *BgpAddrtype) GetIpv6VpnAddress() string {
	if m != nil {
		return m.Ipv6VpnAddress
	}
	return ""
}

func (m *BgpAddrtype) GetIpv6VpnMcastAddress() string {
	if m != nil {
		return m.Ipv6VpnMcastAddress
	}
	return ""
}

func (m *BgpAddrtype) GetL2VpnVplsAddress() *BgpL2VpnAddrT {
	if m != nil {
		return m.L2VpnVplsAddress
	}
	return nil
}

func (m *BgpAddrtype) GetRtConstraintAddress() string {
	if m != nil {
		return m.RtConstraintAddress
	}
	return ""
}

func (m *BgpAddrtype) GetIpv6MvpnAddress() string {
	if m != nil {
		return m.Ipv6MvpnAddress
	}
	return ""
}

func (m *BgpAddrtype) GetIpv4MvpnAddress() string {
	if m != nil {
		return m.Ipv4MvpnAddress
	}
	return ""
}

func (m *BgpAddrtype) GetL2VpnEvpnAddress() string {
	if m != nil {
		return m.L2VpnEvpnAddress
	}
	return ""
}

func (m *BgpAddrtype) GetLsLsAddress() string {
	if m != nil {
		return m.LsLsAddress
	}
	return ""
}

func (m *BgpAddrtype) GetL2VpnMspwAddress() *BgpL2VpnMspwAddrT {
	if m != nil {
		return m.L2VpnMspwAddress
	}
	return nil
}

func (m *BgpAddrtype) GetIpv4FlowspecAddress() string {
	if m != nil {
		return m.Ipv4FlowspecAddress
	}
	return ""
}

func (m *BgpAddrtype) GetIpv6FlowspecAddress() string {
	if m != nil {
		return m.Ipv6FlowspecAddress
	}
	return ""
}

func (m *BgpAddrtype) GetIpv4VpnFlowspecAddress() string {
	if m != nil {
		return m.Ipv4VpnFlowspecAddress
	}
	return ""
}

func (m *BgpAddrtype) GetIpv6VpnFlowspecAddress() string {
	if m != nil {
		return m.Ipv6VpnFlowspecAddress
	}
	return ""
}

func (m *BgpAddrtype) GetIpv4SrPolicyAddress() *BgpIpv4SrpolicyAddrT {
	if m != nil {
		return m.Ipv4SrPolicyAddress
	}
	return nil
}

func (m *BgpAddrtype) GetIpv6SrPolicyAddress() *BgpIpv6SrpolicyAddrT {
	if m != nil {
		return m.Ipv6SrPolicyAddress
	}
	return nil
}

type BgpPostitCountInfo_ struct {
	PostitCount          uint32       `protobuf:"varint,1,opt,name=postit_count,json=postitCount,proto3" json:"postit_count,omitempty"`
	NeighborAddress      *BgpAddrtype `protobuf:"bytes,2,opt,name=neighbor_address,json=neighborAddress,proto3" json:"neighbor_address,omitempty"`
	VrfName              string       `protobuf:"bytes,3,opt,name=vrf_name,json=vrfName,proto3" json:"vrf_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *BgpPostitCountInfo_) Reset()         { *m = BgpPostitCountInfo_{} }
func (m *BgpPostitCountInfo_) String() string { return proto.CompactTextString(m) }
func (*BgpPostitCountInfo_) ProtoMessage()    {}
func (*BgpPostitCountInfo_) Descriptor() ([]byte, []int) {
	return fileDescriptor_963cc3c7231da349, []int{8}
}

func (m *BgpPostitCountInfo_) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BgpPostitCountInfo_.Unmarshal(m, b)
}
func (m *BgpPostitCountInfo_) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BgpPostitCountInfo_.Marshal(b, m, deterministic)
}
func (m *BgpPostitCountInfo_) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BgpPostitCountInfo_.Merge(m, src)
}
func (m *BgpPostitCountInfo_) XXX_Size() int {
	return xxx_messageInfo_BgpPostitCountInfo_.Size(m)
}
func (m *BgpPostitCountInfo_) XXX_DiscardUnknown() {
	xxx_messageInfo_BgpPostitCountInfo_.DiscardUnknown(m)
}

var xxx_messageInfo_BgpPostitCountInfo_ proto.InternalMessageInfo

func (m *BgpPostitCountInfo_) GetPostitCount() uint32 {
	if m != nil {
		return m.PostitCount
	}
	return 0
}

func (m *BgpPostitCountInfo_) GetNeighborAddress() *BgpAddrtype {
	if m != nil {
		return m.NeighborAddress
	}
	return nil
}

func (m *BgpPostitCountInfo_) GetVrfName() string {
	if m != nil {
		return m.VrfName
	}
	return ""
}

type BgpTimespec struct {
	Seconds              uint32   `protobuf:"varint,1,opt,name=seconds,proto3" json:"seconds,omitempty"`
	Nanoseconds          uint32   `protobuf:"varint,2,opt,name=nanoseconds,proto3" json:"nanoseconds,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BgpTimespec) Reset()         { *m = BgpTimespec{} }
func (m *BgpTimespec) String() string { return proto.CompactTextString(m) }
func (*BgpTimespec) ProtoMessage()    {}
func (*BgpTimespec) Descriptor() ([]byte, []int) {
	return fileDescriptor_963cc3c7231da349, []int{9}
}

func (m *BgpTimespec) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BgpTimespec.Unmarshal(m, b)
}
func (m *BgpTimespec) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BgpTimespec.Marshal(b, m, deterministic)
}
func (m *BgpTimespec) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BgpTimespec.Merge(m, src)
}
func (m *BgpTimespec) XXX_Size() int {
	return xxx_messageInfo_BgpTimespec.Size(m)
}
func (m *BgpTimespec) XXX_DiscardUnknown() {
	xxx_messageInfo_BgpTimespec.DiscardUnknown(m)
}

var xxx_messageInfo_BgpTimespec proto.InternalMessageInfo

func (m *BgpTimespec) GetSeconds() uint32 {
	if m != nil {
		return m.Seconds
	}
	return 0
}

func (m *BgpTimespec) GetNanoseconds() uint32 {
	if m != nil {
		return m.Nanoseconds
	}
	return 0
}

type BgpPerfRibGblInfo_ struct {
	IsRibConnectionUp               bool         `protobuf:"varint,1,opt,name=is_rib_connection_up,json=isRibConnectionUp,proto3" json:"is_rib_connection_up,omitempty"`
	RibConnectionUpCount            uint32       `protobuf:"varint,2,opt,name=rib_connection_up_count,json=ribConnectionUpCount,proto3" json:"rib_connection_up_count,omitempty"`
	FirstRibConnectionUpTimestamp   *BgpTimespec `protobuf:"bytes,3,opt,name=first_rib_connection_up_timestamp,json=firstRibConnectionUpTimestamp,proto3" json:"first_rib_connection_up_timestamp,omitempty"`
	LastRibConnectionUpTimestamp    *BgpTimespec `protobuf:"bytes,4,opt,name=last_rib_connection_up_timestamp,json=lastRibConnectionUpTimestamp,proto3" json:"last_rib_connection_up_timestamp,omitempty"`
	LastRibConnectionUpAge          uint32       `protobuf:"varint,5,opt,name=last_rib_connection_up_age,json=lastRibConnectionUpAge,proto3" json:"last_rib_connection_up_age,omitempty"`
	RibConnectionDownCount          uint32       `protobuf:"varint,6,opt,name=rib_connection_down_count,json=ribConnectionDownCount,proto3" json:"rib_connection_down_count,omitempty"`
	FirstRibConnectionDownTimestamp *BgpTimespec `protobuf:"bytes,7,opt,name=first_rib_connection_down_timestamp,json=firstRibConnectionDownTimestamp,proto3" json:"first_rib_connection_down_timestamp,omitempty"`
	LastRibConnectionDownTimestamp  *BgpTimespec `protobuf:"bytes,8,opt,name=last_rib_connection_down_timestamp,json=lastRibConnectionDownTimestamp,proto3" json:"last_rib_connection_down_timestamp,omitempty"`
	LastRibConnectionDownAge        uint32       `protobuf:"varint,9,opt,name=last_rib_connection_down_age,json=lastRibConnectionDownAge,proto3" json:"last_rib_connection_down_age,omitempty"`
	XXX_NoUnkeyedLiteral            struct{}     `json:"-"`
	XXX_unrecognized                []byte       `json:"-"`
	XXX_sizecache                   int32        `json:"-"`
}

func (m *BgpPerfRibGblInfo_) Reset()         { *m = BgpPerfRibGblInfo_{} }
func (m *BgpPerfRibGblInfo_) String() string { return proto.CompactTextString(m) }
func (*BgpPerfRibGblInfo_) ProtoMessage()    {}
func (*BgpPerfRibGblInfo_) Descriptor() ([]byte, []int) {
	return fileDescriptor_963cc3c7231da349, []int{10}
}

func (m *BgpPerfRibGblInfo_) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BgpPerfRibGblInfo_.Unmarshal(m, b)
}
func (m *BgpPerfRibGblInfo_) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BgpPerfRibGblInfo_.Marshal(b, m, deterministic)
}
func (m *BgpPerfRibGblInfo_) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BgpPerfRibGblInfo_.Merge(m, src)
}
func (m *BgpPerfRibGblInfo_) XXX_Size() int {
	return xxx_messageInfo_BgpPerfRibGblInfo_.Size(m)
}
func (m *BgpPerfRibGblInfo_) XXX_DiscardUnknown() {
	xxx_messageInfo_BgpPerfRibGblInfo_.DiscardUnknown(m)
}

var xxx_messageInfo_BgpPerfRibGblInfo_ proto.InternalMessageInfo

func (m *BgpPerfRibGblInfo_) GetIsRibConnectionUp() bool {
	if m != nil {
		return m.IsRibConnectionUp
	}
	return false
}

func (m *BgpPerfRibGblInfo_) GetRibConnectionUpCount() uint32 {
	if m != nil {
		return m.RibConnectionUpCount
	}
	return 0
}

func (m *BgpPerfRibGblInfo_) GetFirstRibConnectionUpTimestamp() *BgpTimespec {
	if m != nil {
		return m.FirstRibConnectionUpTimestamp
	}
	return nil
}

func (m *BgpPerfRibGblInfo_) GetLastRibConnectionUpTimestamp() *BgpTimespec {
	if m != nil {
		return m.LastRibConnectionUpTimestamp
	}
	return nil
}

func (m *BgpPerfRibGblInfo_) GetLastRibConnectionUpAge() uint32 {
	if m != nil {
		return m.LastRibConnectionUpAge
	}
	return 0
}

func (m *BgpPerfRibGblInfo_) GetRibConnectionDownCount() uint32 {
	if m != nil {
		return m.RibConnectionDownCount
	}
	return 0
}

func (m *BgpPerfRibGblInfo_) GetFirstRibConnectionDownTimestamp() *BgpTimespec {
	if m != nil {
		return m.FirstRibConnectionDownTimestamp
	}
	return nil
}

func (m *BgpPerfRibGblInfo_) GetLastRibConnectionDownTimestamp() *BgpTimespec {
	if m != nil {
		return m.LastRibConnectionDownTimestamp
	}
	return nil
}

func (m *BgpPerfRibGblInfo_) GetLastRibConnectionDownAge() uint32 {
	if m != nil {
		return m.LastRibConnectionDownAge
	}
	return 0
}

type BgpPerfServerConnStat struct {
	IsConnectionUp               bool         `protobuf:"varint,1,opt,name=is_connection_up,json=isConnectionUp,proto3" json:"is_connection_up,omitempty"`
	ConnectionUpCount            uint32       `protobuf:"varint,2,opt,name=connection_up_count,json=connectionUpCount,proto3" json:"connection_up_count,omitempty"`
	FirstConnectionUpTimestamp   *BgpTimespec `protobuf:"bytes,3,opt,name=first_connection_up_timestamp,json=firstConnectionUpTimestamp,proto3" json:"first_connection_up_timestamp,omitempty"`
	LastConnectionUpTimestamp    *BgpTimespec `protobuf:"bytes,4,opt,name=last_connection_up_timestamp,json=lastConnectionUpTimestamp,proto3" json:"last_connection_up_timestamp,omitempty"`
	LastConnectionUpAge          uint32       `protobuf:"varint,5,opt,name=last_connection_up_age,json=lastConnectionUpAge,proto3" json:"last_connection_up_age,omitempty"`
	ConnectionDownCount          uint32       `protobuf:"varint,6,opt,name=connection_down_count,json=connectionDownCount,proto3" json:"connection_down_count,omitempty"`
	FirstConnectionDownTimestamp *BgpTimespec `protobuf:"bytes,7,opt,name=first_connection_down_timestamp,json=firstConnectionDownTimestamp,proto3" json:"first_connection_down_timestamp,omitempty"`
	LastConnectionDownTimestamp  *BgpTimespec `protobuf:"bytes,8,opt,name=last_connection_down_timestamp,json=lastConnectionDownTimestamp,proto3" json:"last_connection_down_timestamp,omitempty"`
	LastConnectionDownAge        uint32       `protobuf:"varint,9,opt,name=last_connection_down_age,json=lastConnectionDownAge,proto3" json:"last_connection_down_age,omitempty"`
	XXX_NoUnkeyedLiteral         struct{}     `json:"-"`
	XXX_unrecognized             []byte       `json:"-"`
	XXX_sizecache                int32        `json:"-"`
}

func (m *BgpPerfServerConnStat) Reset()         { *m = BgpPerfServerConnStat{} }
func (m *BgpPerfServerConnStat) String() string { return proto.CompactTextString(m) }
func (*BgpPerfServerConnStat) ProtoMessage()    {}
func (*BgpPerfServerConnStat) Descriptor() ([]byte, []int) {
	return fileDescriptor_963cc3c7231da349, []int{11}
}

func (m *BgpPerfServerConnStat) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BgpPerfServerConnStat.Unmarshal(m, b)
}
func (m *BgpPerfServerConnStat) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BgpPerfServerConnStat.Marshal(b, m, deterministic)
}
func (m *BgpPerfServerConnStat) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BgpPerfServerConnStat.Merge(m, src)
}
func (m *BgpPerfServerConnStat) XXX_Size() int {
	return xxx_messageInfo_BgpPerfServerConnStat.Size(m)
}
func (m *BgpPerfServerConnStat) XXX_DiscardUnknown() {
	xxx_messageInfo_BgpPerfServerConnStat.DiscardUnknown(m)
}

var xxx_messageInfo_BgpPerfServerConnStat proto.InternalMessageInfo

func (m *BgpPerfServerConnStat) GetIsConnectionUp() bool {
	if m != nil {
		return m.IsConnectionUp
	}
	return false
}

func (m *BgpPerfServerConnStat) GetConnectionUpCount() uint32 {
	if m != nil {
		return m.ConnectionUpCount
	}
	return 0
}

func (m *BgpPerfServerConnStat) GetFirstConnectionUpTimestamp() *BgpTimespec {
	if m != nil {
		return m.FirstConnectionUpTimestamp
	}
	return nil
}

func (m *BgpPerfServerConnStat) GetLastConnectionUpTimestamp() *BgpTimespec {
	if m != nil {
		return m.LastConnectionUpTimestamp
	}
	return nil
}

func (m *BgpPerfServerConnStat) GetLastConnectionUpAge() uint32 {
	if m != nil {
		return m.LastConnectionUpAge
	}
	return 0
}

func (m *BgpPerfServerConnStat) GetConnectionDownCount() uint32 {
	if m != nil {
		return m.ConnectionDownCount
	}
	return 0
}

func (m *BgpPerfServerConnStat) GetFirstConnectionDownTimestamp() *BgpTimespec {
	if m != nil {
		return m.FirstConnectionDownTimestamp
	}
	return nil
}

func (m *BgpPerfServerConnStat) GetLastConnectionDownTimestamp() *BgpTimespec {
	if m != nil {
		return m.LastConnectionDownTimestamp
	}
	return nil
}

func (m *BgpPerfServerConnStat) GetLastConnectionDownAge() uint32 {
	if m != nil {
		return m.LastConnectionDownAge
	}
	return 0
}

type NsrPlClientStatsType struct {
	NumSent              []uint64 `protobuf:"varint,1,rep,packed,name=num_sent,json=numSent,proto3" json:"num_sent,omitempty"`
	NumRecv              []uint64 `protobuf:"varint,2,rep,packed,name=num_recv,json=numRecv,proto3" json:"num_recv,omitempty"`
	NumSentDrop          []string `protobuf:"bytes,3,rep,name=num_sent_drop,json=numSentDrop,proto3" json:"num_sent_drop,omitempty"`
	NumRecvDrop          []string `protobuf:"bytes,4,rep,name=num_recv_drop,json=numRecvDrop,proto3" json:"num_recv_drop,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NsrPlClientStatsType) Reset()         { *m = NsrPlClientStatsType{} }
func (m *NsrPlClientStatsType) String() string { return proto.CompactTextString(m) }
func (*NsrPlClientStatsType) ProtoMessage()    {}
func (*NsrPlClientStatsType) Descriptor() ([]byte, []int) {
	return fileDescriptor_963cc3c7231da349, []int{12}
}

func (m *NsrPlClientStatsType) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NsrPlClientStatsType.Unmarshal(m, b)
}
func (m *NsrPlClientStatsType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NsrPlClientStatsType.Marshal(b, m, deterministic)
}
func (m *NsrPlClientStatsType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NsrPlClientStatsType.Merge(m, src)
}
func (m *NsrPlClientStatsType) XXX_Size() int {
	return xxx_messageInfo_NsrPlClientStatsType.Size(m)
}
func (m *NsrPlClientStatsType) XXX_DiscardUnknown() {
	xxx_messageInfo_NsrPlClientStatsType.DiscardUnknown(m)
}

var xxx_messageInfo_NsrPlClientStatsType proto.InternalMessageInfo

func (m *NsrPlClientStatsType) GetNumSent() []uint64 {
	if m != nil {
		return m.NumSent
	}
	return nil
}

func (m *NsrPlClientStatsType) GetNumRecv() []uint64 {
	if m != nil {
		return m.NumRecv
	}
	return nil
}

func (m *NsrPlClientStatsType) GetNumSentDrop() []string {
	if m != nil {
		return m.NumSentDrop
	}
	return nil
}

func (m *NsrPlClientStatsType) GetNumRecvDrop() []string {
	if m != nil {
		return m.NumRecvDrop
	}
	return nil
}

type BgpPerfNplEndpInfoBag_ struct {
	EndpointName         string   `protobuf:"bytes,1,opt,name=endpoint_name,json=endpointName,proto3" json:"endpoint_name,omitempty"`
	SyncGroupName        string   `protobuf:"bytes,2,opt,name=sync_group_name,json=syncGroupName,proto3" json:"sync_group_name,omitempty"`
	NodeId               string   `protobuf:"bytes,3,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	EndpointHandle       uint64   `protobuf:"varint,4,opt,name=endpoint_handle,json=endpointHandle,proto3" json:"endpoint_handle,omitempty"`
	EndpointStaleFlag    bool     `protobuf:"varint,5,opt,name=endpoint_stale_flag,json=endpointStaleFlag,proto3" json:"endpoint_stale_flag,omitempty"`
	EndpointIssuRole     string   `protobuf:"bytes,6,opt,name=endpoint_issu_role,json=endpointIssuRole,proto3" json:"endpoint_issu_role,omitempty"`
	EndpointActiveFlag   bool     `protobuf:"varint,7,opt,name=endpoint_active_flag,json=endpointActiveFlag,proto3" json:"endpoint_active_flag,omitempty"`
	MsgSize              uint32   `protobuf:"varint,8,opt,name=msg_size,json=msgSize,proto3" json:"msg_size,omitempty"`
	WheelId              uint32   `protobuf:"varint,9,opt,name=wheel_id,json=wheelId,proto3" json:"wheel_id,omitempty"`
	ExpectedSequenceNum  uint32   `protobuf:"varint,10,opt,name=expected_sequence_num,json=expectedSequenceNum,proto3" json:"expected_sequence_num,omitempty"`
	Endpoint             []uint32 `protobuf:"varint,11,rep,packed,name=endpoint,proto3" json:"endpoint,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BgpPerfNplEndpInfoBag_) Reset()         { *m = BgpPerfNplEndpInfoBag_{} }
func (m *BgpPerfNplEndpInfoBag_) String() string { return proto.CompactTextString(m) }
func (*BgpPerfNplEndpInfoBag_) ProtoMessage()    {}
func (*BgpPerfNplEndpInfoBag_) Descriptor() ([]byte, []int) {
	return fileDescriptor_963cc3c7231da349, []int{13}
}

func (m *BgpPerfNplEndpInfoBag_) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BgpPerfNplEndpInfoBag_.Unmarshal(m, b)
}
func (m *BgpPerfNplEndpInfoBag_) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BgpPerfNplEndpInfoBag_.Marshal(b, m, deterministic)
}
func (m *BgpPerfNplEndpInfoBag_) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BgpPerfNplEndpInfoBag_.Merge(m, src)
}
func (m *BgpPerfNplEndpInfoBag_) XXX_Size() int {
	return xxx_messageInfo_BgpPerfNplEndpInfoBag_.Size(m)
}
func (m *BgpPerfNplEndpInfoBag_) XXX_DiscardUnknown() {
	xxx_messageInfo_BgpPerfNplEndpInfoBag_.DiscardUnknown(m)
}

var xxx_messageInfo_BgpPerfNplEndpInfoBag_ proto.InternalMessageInfo

func (m *BgpPerfNplEndpInfoBag_) GetEndpointName() string {
	if m != nil {
		return m.EndpointName
	}
	return ""
}

func (m *BgpPerfNplEndpInfoBag_) GetSyncGroupName() string {
	if m != nil {
		return m.SyncGroupName
	}
	return ""
}

func (m *BgpPerfNplEndpInfoBag_) GetNodeId() string {
	if m != nil {
		return m.NodeId
	}
	return ""
}

func (m *BgpPerfNplEndpInfoBag_) GetEndpointHandle() uint64 {
	if m != nil {
		return m.EndpointHandle
	}
	return 0
}

func (m *BgpPerfNplEndpInfoBag_) GetEndpointStaleFlag() bool {
	if m != nil {
		return m.EndpointStaleFlag
	}
	return false
}

func (m *BgpPerfNplEndpInfoBag_) GetEndpointIssuRole() string {
	if m != nil {
		return m.EndpointIssuRole
	}
	return ""
}

func (m *BgpPerfNplEndpInfoBag_) GetEndpointActiveFlag() bool {
	if m != nil {
		return m.EndpointActiveFlag
	}
	return false
}

func (m *BgpPerfNplEndpInfoBag_) GetMsgSize() uint32 {
	if m != nil {
		return m.MsgSize
	}
	return 0
}

func (m *BgpPerfNplEndpInfoBag_) GetWheelId() uint32 {
	if m != nil {
		return m.WheelId
	}
	return 0
}

func (m *BgpPerfNplEndpInfoBag_) GetExpectedSequenceNum() uint32 {
	if m != nil {
		return m.ExpectedSequenceNum
	}
	return 0
}

func (m *BgpPerfNplEndpInfoBag_) GetEndpoint() []uint32 {
	if m != nil {
		return m.Endpoint
	}
	return nil
}

type BgpPerfDsNplInfoBag_ struct {
	DirServiceConnState  string                    `protobuf:"bytes,1,opt,name=dir_service_conn_state,json=dirServiceConnState,proto3" json:"dir_service_conn_state,omitempty"`
	IssuMgrConnState     string                    `protobuf:"bytes,2,opt,name=issu_mgr_conn_state,json=issuMgrConnState,proto3" json:"issu_mgr_conn_state,omitempty"`
	IssuPhase            string                    `protobuf:"bytes,3,opt,name=issu_phase,json=issuPhase,proto3" json:"issu_phase,omitempty"`
	IssuTypeNg           bool                      `protobuf:"varint,4,opt,name=issu_type_ng,json=issuTypeNg,proto3" json:"issu_type_ng,omitempty"`
	IssuhaOption         string                    `protobuf:"bytes,5,opt,name=issuha_option,json=issuhaOption,proto3" json:"issuha_option,omitempty"`
	LocalDsHandle        uint64                    `protobuf:"varint,6,opt,name=local_ds_handle,json=localDsHandle,proto3" json:"local_ds_handle,omitempty"`
	ServiceName          string                    `protobuf:"bytes,7,opt,name=service_name,json=serviceName,proto3" json:"service_name,omitempty"`
	DsissuStatusFlag     uint32                    `protobuf:"varint,8,opt,name=dsissu_status_flag,json=dsissuStatusFlag,proto3" json:"dsissu_status_flag,omitempty"`
	NplPriorityStatistic []*NsrPlClientStatsType   `protobuf:"bytes,9,rep,name=npl_priority_statistic,json=nplPriorityStatistic,proto3" json:"npl_priority_statistic,omitempty"`
	NplEndpoint          []*BgpPerfNplEndpInfoBag_ `protobuf:"bytes,10,rep,name=npl_endpoint,json=nplEndpoint,proto3" json:"npl_endpoint,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *BgpPerfDsNplInfoBag_) Reset()         { *m = BgpPerfDsNplInfoBag_{} }
func (m *BgpPerfDsNplInfoBag_) String() string { return proto.CompactTextString(m) }
func (*BgpPerfDsNplInfoBag_) ProtoMessage()    {}
func (*BgpPerfDsNplInfoBag_) Descriptor() ([]byte, []int) {
	return fileDescriptor_963cc3c7231da349, []int{14}
}

func (m *BgpPerfDsNplInfoBag_) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BgpPerfDsNplInfoBag_.Unmarshal(m, b)
}
func (m *BgpPerfDsNplInfoBag_) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BgpPerfDsNplInfoBag_.Marshal(b, m, deterministic)
}
func (m *BgpPerfDsNplInfoBag_) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BgpPerfDsNplInfoBag_.Merge(m, src)
}
func (m *BgpPerfDsNplInfoBag_) XXX_Size() int {
	return xxx_messageInfo_BgpPerfDsNplInfoBag_.Size(m)
}
func (m *BgpPerfDsNplInfoBag_) XXX_DiscardUnknown() {
	xxx_messageInfo_BgpPerfDsNplInfoBag_.DiscardUnknown(m)
}

var xxx_messageInfo_BgpPerfDsNplInfoBag_ proto.InternalMessageInfo

func (m *BgpPerfDsNplInfoBag_) GetDirServiceConnState() string {
	if m != nil {
		return m.DirServiceConnState
	}
	return ""
}

func (m *BgpPerfDsNplInfoBag_) GetIssuMgrConnState() string {
	if m != nil {
		return m.IssuMgrConnState
	}
	return ""
}

func (m *BgpPerfDsNplInfoBag_) GetIssuPhase() string {
	if m != nil {
		return m.IssuPhase
	}
	return ""
}

func (m *BgpPerfDsNplInfoBag_) GetIssuTypeNg() bool {
	if m != nil {
		return m.IssuTypeNg
	}
	return false
}

func (m *BgpPerfDsNplInfoBag_) GetIssuhaOption() string {
	if m != nil {
		return m.IssuhaOption
	}
	return ""
}

func (m *BgpPerfDsNplInfoBag_) GetLocalDsHandle() uint64 {
	if m != nil {
		return m.LocalDsHandle
	}
	return 0
}

func (m *BgpPerfDsNplInfoBag_) GetServiceName() string {
	if m != nil {
		return m.ServiceName
	}
	return ""
}

func (m *BgpPerfDsNplInfoBag_) GetDsissuStatusFlag() uint32 {
	if m != nil {
		return m.DsissuStatusFlag
	}
	return 0
}

func (m *BgpPerfDsNplInfoBag_) GetNplPriorityStatistic() []*NsrPlClientStatsType {
	if m != nil {
		return m.NplPriorityStatistic
	}
	return nil
}

func (m *BgpPerfDsNplInfoBag_) GetNplEndpoint() []*BgpPerfNplEndpInfoBag_ {
	if m != nil {
		return m.NplEndpoint
	}
	return nil
}

type BgpIssuMilestoneBag_ struct {
	MilestoneName           string   `protobuf:"bytes,1,opt,name=milestone_name,json=milestoneName,proto3" json:"milestone_name,omitempty"`
	MilestoneStartTimestamp uint32   `protobuf:"varint,2,opt,name=milestone_start_timestamp,json=milestoneStartTimestamp,proto3" json:"milestone_start_timestamp,omitempty"`
	MilestoneMetTimestamp   uint32   `protobuf:"varint,3,opt,name=milestone_met_timestamp,json=milestoneMetTimestamp,proto3" json:"milestone_met_timestamp,omitempty"`
	XXX_NoUnkeyedLiteral    struct{} `json:"-"`
	XXX_unrecognized        []byte   `json:"-"`
	XXX_sizecache           int32    `json:"-"`
}

func (m *BgpIssuMilestoneBag_) Reset()         { *m = BgpIssuMilestoneBag_{} }
func (m *BgpIssuMilestoneBag_) String() string { return proto.CompactTextString(m) }
func (*BgpIssuMilestoneBag_) ProtoMessage()    {}
func (*BgpIssuMilestoneBag_) Descriptor() ([]byte, []int) {
	return fileDescriptor_963cc3c7231da349, []int{15}
}

func (m *BgpIssuMilestoneBag_) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BgpIssuMilestoneBag_.Unmarshal(m, b)
}
func (m *BgpIssuMilestoneBag_) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BgpIssuMilestoneBag_.Marshal(b, m, deterministic)
}
func (m *BgpIssuMilestoneBag_) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BgpIssuMilestoneBag_.Merge(m, src)
}
func (m *BgpIssuMilestoneBag_) XXX_Size() int {
	return xxx_messageInfo_BgpIssuMilestoneBag_.Size(m)
}
func (m *BgpIssuMilestoneBag_) XXX_DiscardUnknown() {
	xxx_messageInfo_BgpIssuMilestoneBag_.DiscardUnknown(m)
}

var xxx_messageInfo_BgpIssuMilestoneBag_ proto.InternalMessageInfo

func (m *BgpIssuMilestoneBag_) GetMilestoneName() string {
	if m != nil {
		return m.MilestoneName
	}
	return ""
}

func (m *BgpIssuMilestoneBag_) GetMilestoneStartTimestamp() uint32 {
	if m != nil {
		return m.MilestoneStartTimestamp
	}
	return 0
}

func (m *BgpIssuMilestoneBag_) GetMilestoneMetTimestamp() uint32 {
	if m != nil {
		return m.MilestoneMetTimestamp
	}
	return 0
}

type BgpPerfProcessGbl_ struct {
	ConfigurationItemsProcessed      uint32                  `protobuf:"varint,1,opt,name=configuration_items_processed,json=configurationItemsProcessed,proto3" json:"configuration_items_processed,omitempty"`
	ConfigurationProcessingTime      uint32                  `protobuf:"varint,2,opt,name=configuration_processing_time,json=configurationProcessingTime,proto3" json:"configuration_processing_time,omitempty"`
	EdmRequestsCount                 uint32                  `protobuf:"varint,3,opt,name=edm_requests_count,json=edmRequestsCount,proto3" json:"edm_requests_count,omitempty"`
	EdmProcessingTime                uint32                  `protobuf:"varint,4,opt,name=edm_processing_time,json=edmProcessingTime,proto3" json:"edm_processing_time,omitempty"`
	BribApiOutputMessagesSent        uint32                  `protobuf:"varint,5,opt,name=brib_api_output_messages_sent,json=bribApiOutputMessagesSent,proto3" json:"brib_api_output_messages_sent,omitempty"`
	BribApiOutputBytesSent           uint32                  `protobuf:"varint,6,opt,name=brib_api_output_bytes_sent,json=bribApiOutputBytesSent,proto3" json:"brib_api_output_bytes_sent,omitempty"`
	BribApiOutputBytesGenerated      uint32                  `protobuf:"varint,7,opt,name=brib_api_output_bytes_generated,json=bribApiOutputBytesGenerated,proto3" json:"brib_api_output_bytes_generated,omitempty"`
	BribApiOutputPrefixesAdvertised  uint32                  `protobuf:"varint,8,opt,name=brib_api_output_prefixes_advertised,json=bribApiOutputPrefixesAdvertised,proto3" json:"brib_api_output_prefixes_advertised,omitempty"`
	BribApiOutputPrefixesWithdrawn   uint32                  `protobuf:"varint,9,opt,name=brib_api_output_prefixes_withdrawn,json=bribApiOutputPrefixesWithdrawn,proto3" json:"brib_api_output_prefixes_withdrawn,omitempty"`
	BribApiOutputSendingTime         uint32                  `protobuf:"varint,10,opt,name=brib_api_output_sending_time,json=bribApiOutputSendingTime,proto3" json:"brib_api_output_sending_time,omitempty"`
	BribApiOutputGenerationTime      uint32                  `protobuf:"varint,11,opt,name=brib_api_output_generation_time,json=bribApiOutputGenerationTime,proto3" json:"brib_api_output_generation_time,omitempty"`
	BribApiOutputCalls               uint32                  `protobuf:"varint,12,opt,name=brib_api_output_calls,json=bribApiOutputCalls,proto3" json:"brib_api_output_calls,omitempty"`
	BribApiInputMessages             uint32                  `protobuf:"varint,13,opt,name=brib_api_input_messages,json=bribApiInputMessages,proto3" json:"brib_api_input_messages,omitempty"`
	BribApiInputBytes                uint32                  `protobuf:"varint,14,opt,name=brib_api_input_bytes,json=bribApiInputBytes,proto3" json:"brib_api_input_bytes,omitempty"`
	BribApiInputPrefixesReceived     uint32                  `protobuf:"varint,15,opt,name=brib_api_input_prefixes_received,json=bribApiInputPrefixesReceived,proto3" json:"brib_api_input_prefixes_received,omitempty"`
	BribApiInputWithdrawnPrefixes    uint32                  `protobuf:"varint,16,opt,name=brib_api_input_withdrawn_prefixes,json=bribApiInputWithdrawnPrefixes,proto3" json:"brib_api_input_withdrawn_prefixes,omitempty"`
	BribApiInputProcessingTime       uint32                  `protobuf:"varint,17,opt,name=brib_api_input_processing_time,json=bribApiInputProcessingTime,proto3" json:"brib_api_input_processing_time,omitempty"`
	InstanceNodeRole                 bool                    `protobuf:"varint,18,opt,name=instance_node_role,json=instanceNodeRole,proto3" json:"instance_node_role,omitempty"`
	ActiveNsrModeEnterTime           []uint32                `protobuf:"varint,19,rep,packed,name=active_nsr_mode_enter_time,json=activeNsrModeEnterTime,proto3" json:"active_nsr_mode_enter_time,omitempty"`
	StandbyNsrModeEnterTime          []uint32                `protobuf:"varint,20,rep,packed,name=standby_nsr_mode_enter_time,json=standbyNsrModeEnterTime,proto3" json:"standby_nsr_mode_enter_time,omitempty"`
	ActiveNsrfoTime                  []uint32                `protobuf:"varint,21,rep,packed,name=active_nsrfo_time,json=activeNsrfoTime,proto3" json:"active_nsrfo_time,omitempty"`
	ActiveNsrtcpPhaseTwoEnterTime    uint32                  `protobuf:"varint,22,opt,name=active_nsrtcp_phase_two_enter_time,json=activeNsrtcpPhaseTwoEnterTime,proto3" json:"active_nsrtcp_phase_two_enter_time,omitempty"`
	SecActiveNsrtcpPhaseTwoEnterTime uint32                  `protobuf:"varint,23,opt,name=sec_active_nsrtcp_phase_two_enter_time,json=secActiveNsrtcpPhaseTwoEnterTime,proto3" json:"sec_active_nsrtcp_phase_two_enter_time,omitempty"`
	ProcScopedSyncState              string                  `protobuf:"bytes,24,opt,name=proc_scoped_sync_state,json=procScopedSyncState,proto3" json:"proc_scoped_sync_state,omitempty"`
	InitialSyncSessionsAdded         bool                    `protobuf:"varint,25,opt,name=initial_sync_sessions_added,json=initialSyncSessionsAdded,proto3" json:"initial_sync_sessions_added,omitempty"`
	InEventAttachCalls               uint32                  `protobuf:"varint,26,opt,name=in_event_attach_calls,json=inEventAttachCalls,proto3" json:"in_event_attach_calls,omitempty"`
	OutEventAttachCalls              uint32                  `protobuf:"varint,27,opt,name=out_event_attach_calls,json=outEventAttachCalls,proto3" json:"out_event_attach_calls,omitempty"`
	InOutEventAttachCalls            uint32                  `protobuf:"varint,28,opt,name=in_out_event_attach_calls,json=inOutEventAttachCalls,proto3" json:"in_out_event_attach_calls,omitempty"`
	UpdgenTimerId                    uint32                  `protobuf:"varint,29,opt,name=updgen_timer_id,json=updgenTimerId,proto3" json:"updgen_timer_id,omitempty"`
	UpdgenTreeTimerLeft              uint64                  `protobuf:"varint,30,opt,name=updgen_tree_timer_left,json=updgenTreeTimerLeft,proto3" json:"updgen_tree_timer_left,omitempty"`
	UpdgenTreeTimerExpiry            uint64                  `protobuf:"varint,31,opt,name=updgen_tree_timer_expiry,json=updgenTreeTimerExpiry,proto3" json:"updgen_tree_timer_expiry,omitempty"`
	CurrentClockTime                 uint64                  `protobuf:"varint,32,opt,name=current_clock_time,json=currentClockTime,proto3" json:"current_clock_time,omitempty"`
	UpdgenHandlerTm                  uint64                  `protobuf:"varint,33,opt,name=updgen_handler_tm,json=updgenHandlerTm,proto3" json:"updgen_handler_tm,omitempty"`
	IoTimerId                        uint32                  `protobuf:"varint,34,opt,name=io_timer_id,json=ioTimerId,proto3" json:"io_timer_id,omitempty"`
	IoTreeTimerLeft                  uint64                  `protobuf:"varint,35,opt,name=io_tree_timer_left,json=ioTreeTimerLeft,proto3" json:"io_tree_timer_left,omitempty"`
	IoTreeTimerExpiry                uint64                  `protobuf:"varint,36,opt,name=io_tree_timer_expiry,json=ioTreeTimerExpiry,proto3" json:"io_tree_timer_expiry,omitempty"`
	IoHandlerTm                      uint64                  `protobuf:"varint,37,opt,name=io_handler_tm,json=ioHandlerTm,proto3" json:"io_handler_tm,omitempty"`
	QadMessagesSent                  uint32                  `protobuf:"varint,38,opt,name=qad_messages_sent,json=qadMessagesSent,proto3" json:"qad_messages_sent,omitempty"`
	QadackSent                       uint32                  `protobuf:"varint,39,opt,name=qadack_sent,json=qadackSent,proto3" json:"qadack_sent,omitempty"`
	QadSendFailure                   uint32                  `protobuf:"varint,40,opt,name=qad_send_failure,json=qadSendFailure,proto3" json:"qad_send_failure,omitempty"`
	QadAcKsFailure                   uint32                  `protobuf:"varint,41,opt,name=qad_ac_ks_failure,json=qadAcKsFailure,proto3" json:"qad_ac_ks_failure,omitempty"`
	QadSuspends                      uint32                  `protobuf:"varint,42,opt,name=qad_suspends,json=qadSuspends,proto3" json:"qad_suspends,omitempty"`
	QadResumes                       uint32                  `protobuf:"varint,43,opt,name=qad_resumes,json=qadResumes,proto3" json:"qad_resumes,omitempty"`
	QadSendDrops                     uint32                  `protobuf:"varint,44,opt,name=qad_send_drops,json=qadSendDrops,proto3" json:"qad_send_drops,omitempty"`
	QadMessagesReceived              uint32                  `protobuf:"varint,45,opt,name=qad_messages_received,json=qadMessagesReceived,proto3" json:"qad_messages_received,omitempty"`
	QadProcessed                     uint32                  `protobuf:"varint,46,opt,name=qad_processed,json=qadProcessed,proto3" json:"qad_processed,omitempty"`
	QadAcKsReceived                  uint32                  `protobuf:"varint,47,opt,name=qad_ac_ks_received,json=qadAcKsReceived,proto3" json:"qad_ac_ks_received,omitempty"`
	QadTimeoutReceived               uint32                  `protobuf:"varint,48,opt,name=qad_timeout_received,json=qadTimeoutReceived,proto3" json:"qad_timeout_received,omitempty"`
	QadInitDrops                     uint32                  `protobuf:"varint,49,opt,name=qad_init_drops,json=qadInitDrops,proto3" json:"qad_init_drops,omitempty"`
	QadoosDrops                      uint32                  `protobuf:"varint,50,opt,name=qadoos_drops,json=qadoosDrops,proto3" json:"qadoos_drops,omitempty"`
	QadRecvDrops                     uint32                  `protobuf:"varint,51,opt,name=qad_recv_drops,json=qadRecvDrops,proto3" json:"qad_recv_drops,omitempty"`
	QadTimeoutRecvd                  uint32                  `protobuf:"varint,52,opt,name=qad_timeout_recvd,json=qadTimeoutRecvd,proto3" json:"qad_timeout_recvd,omitempty"`
	NsrLastResetReason               uint32                  `protobuf:"varint,53,opt,name=nsr_last_reset_reason,json=nsrLastResetReason,proto3" json:"nsr_last_reset_reason,omitempty"`
	RedconNsrReady                   bool                    `protobuf:"varint,54,opt,name=redcon_nsr_ready,json=redconNsrReady,proto3" json:"redcon_nsr_ready,omitempty"`
	RedconStateTime                  uint32                  `protobuf:"varint,55,opt,name=redcon_state_time,json=redconStateTime,proto3" json:"redcon_state_time,omitempty"`
	ActiveNsrState                   uint32                  `protobuf:"varint,56,opt,name=active_nsr_state,json=activeNsrState,proto3" json:"active_nsr_state,omitempty"`
	SecActiveNsrState                uint32                  `protobuf:"varint,57,opt,name=sec_active_nsr_state,json=secActiveNsrState,proto3" json:"sec_active_nsr_state,omitempty"`
	TotalOutstandingPostits          uint32                  `protobuf:"varint,58,opt,name=total_outstanding_postits,json=totalOutstandingPostits,proto3" json:"total_outstanding_postits,omitempty"`
	TotalNeighborsWithPendingPostits uint32                  `protobuf:"varint,59,opt,name=total_neighbors_with_pending_postits,json=totalNeighborsWithPendingPostits,proto3" json:"total_neighbors_with_pending_postits,omitempty"`
	PostitCountInfo                  []*BgpPostitCountInfo_  `protobuf:"bytes,60,rep,name=postit_count_info,json=postitCountInfo,proto3" json:"postit_count_info,omitempty"`
	Ipv4RibServer                    *BgpPerfRibGblInfo_     `protobuf:"bytes,61,opt,name=ipv4rib_server,json=ipv4ribServer,proto3" json:"ipv4rib_server,omitempty"`
	Ipv6RibServer                    *BgpPerfRibGblInfo_     `protobuf:"bytes,62,opt,name=ipv6rib_server,json=ipv6ribServer,proto3" json:"ipv6rib_server,omitempty"`
	TeConnection                     *BgpPerfServerConnStat  `protobuf:"bytes,63,opt,name=te_connection,json=teConnection,proto3" json:"te_connection,omitempty"`
	Tep2PAutoTunnelEnabled           bool                    `protobuf:"varint,64,opt,name=tep2p_auto_tunnel_enabled,json=tep2pAutoTunnelEnabled,proto3" json:"tep2p_auto_tunnel_enabled,omitempty"`
	LsdConnection                    *BgpPerfServerConnStat  `protobuf:"bytes,65,opt,name=lsd_connection,json=lsdConnection,proto3" json:"lsd_connection,omitempty"`
	DsNpl                            *BgpPerfDsNplInfoBag_   `protobuf:"bytes,66,opt,name=ds_npl,json=dsNpl,proto3" json:"ds_npl,omitempty"`
	IssuMilestone                    []*BgpIssuMilestoneBag_ `protobuf:"bytes,67,rep,name=issu_milestone,json=issuMilestone,proto3" json:"issu_milestone,omitempty"`
	XXX_NoUnkeyedLiteral             struct{}                `json:"-"`
	XXX_unrecognized                 []byte                  `json:"-"`
	XXX_sizecache                    int32                   `json:"-"`
}

func (m *BgpPerfProcessGbl_) Reset()         { *m = BgpPerfProcessGbl_{} }
func (m *BgpPerfProcessGbl_) String() string { return proto.CompactTextString(m) }
func (*BgpPerfProcessGbl_) ProtoMessage()    {}
func (*BgpPerfProcessGbl_) Descriptor() ([]byte, []int) {
	return fileDescriptor_963cc3c7231da349, []int{16}
}

func (m *BgpPerfProcessGbl_) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BgpPerfProcessGbl_.Unmarshal(m, b)
}
func (m *BgpPerfProcessGbl_) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BgpPerfProcessGbl_.Marshal(b, m, deterministic)
}
func (m *BgpPerfProcessGbl_) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BgpPerfProcessGbl_.Merge(m, src)
}
func (m *BgpPerfProcessGbl_) XXX_Size() int {
	return xxx_messageInfo_BgpPerfProcessGbl_.Size(m)
}
func (m *BgpPerfProcessGbl_) XXX_DiscardUnknown() {
	xxx_messageInfo_BgpPerfProcessGbl_.DiscardUnknown(m)
}

var xxx_messageInfo_BgpPerfProcessGbl_ proto.InternalMessageInfo

func (m *BgpPerfProcessGbl_) GetConfigurationItemsProcessed() uint32 {
	if m != nil {
		return m.ConfigurationItemsProcessed
	}
	return 0
}

func (m *BgpPerfProcessGbl_) GetConfigurationProcessingTime() uint32 {
	if m != nil {
		return m.ConfigurationProcessingTime
	}
	return 0
}

func (m *BgpPerfProcessGbl_) GetEdmRequestsCount() uint32 {
	if m != nil {
		return m.EdmRequestsCount
	}
	return 0
}

func (m *BgpPerfProcessGbl_) GetEdmProcessingTime() uint32 {
	if m != nil {
		return m.EdmProcessingTime
	}
	return 0
}

func (m *BgpPerfProcessGbl_) GetBribApiOutputMessagesSent() uint32 {
	if m != nil {
		return m.BribApiOutputMessagesSent
	}
	return 0
}

func (m *BgpPerfProcessGbl_) GetBribApiOutputBytesSent() uint32 {
	if m != nil {
		return m.BribApiOutputBytesSent
	}
	return 0
}

func (m *BgpPerfProcessGbl_) GetBribApiOutputBytesGenerated() uint32 {
	if m != nil {
		return m.BribApiOutputBytesGenerated
	}
	return 0
}

func (m *BgpPerfProcessGbl_) GetBribApiOutputPrefixesAdvertised() uint32 {
	if m != nil {
		return m.BribApiOutputPrefixesAdvertised
	}
	return 0
}

func (m *BgpPerfProcessGbl_) GetBribApiOutputPrefixesWithdrawn() uint32 {
	if m != nil {
		return m.BribApiOutputPrefixesWithdrawn
	}
	return 0
}

func (m *BgpPerfProcessGbl_) GetBribApiOutputSendingTime() uint32 {
	if m != nil {
		return m.BribApiOutputSendingTime
	}
	return 0
}

func (m *BgpPerfProcessGbl_) GetBribApiOutputGenerationTime() uint32 {
	if m != nil {
		return m.BribApiOutputGenerationTime
	}
	return 0
}

func (m *BgpPerfProcessGbl_) GetBribApiOutputCalls() uint32 {
	if m != nil {
		return m.BribApiOutputCalls
	}
	return 0
}

func (m *BgpPerfProcessGbl_) GetBribApiInputMessages() uint32 {
	if m != nil {
		return m.BribApiInputMessages
	}
	return 0
}

func (m *BgpPerfProcessGbl_) GetBribApiInputBytes() uint32 {
	if m != nil {
		return m.BribApiInputBytes
	}
	return 0
}

func (m *BgpPerfProcessGbl_) GetBribApiInputPrefixesReceived() uint32 {
	if m != nil {
		return m.BribApiInputPrefixesReceived
	}
	return 0
}

func (m *BgpPerfProcessGbl_) GetBribApiInputWithdrawnPrefixes() uint32 {
	if m != nil {
		return m.BribApiInputWithdrawnPrefixes
	}
	return 0
}

func (m *BgpPerfProcessGbl_) GetBribApiInputProcessingTime() uint32 {
	if m != nil {
		return m.BribApiInputProcessingTime
	}
	return 0
}

func (m *BgpPerfProcessGbl_) GetInstanceNodeRole() bool {
	if m != nil {
		return m.InstanceNodeRole
	}
	return false
}

func (m *BgpPerfProcessGbl_) GetActiveNsrModeEnterTime() []uint32 {
	if m != nil {
		return m.ActiveNsrModeEnterTime
	}
	return nil
}

func (m *BgpPerfProcessGbl_) GetStandbyNsrModeEnterTime() []uint32 {
	if m != nil {
		return m.StandbyNsrModeEnterTime
	}
	return nil
}

func (m *BgpPerfProcessGbl_) GetActiveNsrfoTime() []uint32 {
	if m != nil {
		return m.ActiveNsrfoTime
	}
	return nil
}

func (m *BgpPerfProcessGbl_) GetActiveNsrtcpPhaseTwoEnterTime() uint32 {
	if m != nil {
		return m.ActiveNsrtcpPhaseTwoEnterTime
	}
	return 0
}

func (m *BgpPerfProcessGbl_) GetSecActiveNsrtcpPhaseTwoEnterTime() uint32 {
	if m != nil {
		return m.SecActiveNsrtcpPhaseTwoEnterTime
	}
	return 0
}

func (m *BgpPerfProcessGbl_) GetProcScopedSyncState() string {
	if m != nil {
		return m.ProcScopedSyncState
	}
	return ""
}

func (m *BgpPerfProcessGbl_) GetInitialSyncSessionsAdded() bool {
	if m != nil {
		return m.InitialSyncSessionsAdded
	}
	return false
}

func (m *BgpPerfProcessGbl_) GetInEventAttachCalls() uint32 {
	if m != nil {
		return m.InEventAttachCalls
	}
	return 0
}

func (m *BgpPerfProcessGbl_) GetOutEventAttachCalls() uint32 {
	if m != nil {
		return m.OutEventAttachCalls
	}
	return 0
}

func (m *BgpPerfProcessGbl_) GetInOutEventAttachCalls() uint32 {
	if m != nil {
		return m.InOutEventAttachCalls
	}
	return 0
}

func (m *BgpPerfProcessGbl_) GetUpdgenTimerId() uint32 {
	if m != nil {
		return m.UpdgenTimerId
	}
	return 0
}

func (m *BgpPerfProcessGbl_) GetUpdgenTreeTimerLeft() uint64 {
	if m != nil {
		return m.UpdgenTreeTimerLeft
	}
	return 0
}

func (m *BgpPerfProcessGbl_) GetUpdgenTreeTimerExpiry() uint64 {
	if m != nil {
		return m.UpdgenTreeTimerExpiry
	}
	return 0
}

func (m *BgpPerfProcessGbl_) GetCurrentClockTime() uint64 {
	if m != nil {
		return m.CurrentClockTime
	}
	return 0
}

func (m *BgpPerfProcessGbl_) GetUpdgenHandlerTm() uint64 {
	if m != nil {
		return m.UpdgenHandlerTm
	}
	return 0
}

func (m *BgpPerfProcessGbl_) GetIoTimerId() uint32 {
	if m != nil {
		return m.IoTimerId
	}
	return 0
}

func (m *BgpPerfProcessGbl_) GetIoTreeTimerLeft() uint64 {
	if m != nil {
		return m.IoTreeTimerLeft
	}
	return 0
}

func (m *BgpPerfProcessGbl_) GetIoTreeTimerExpiry() uint64 {
	if m != nil {
		return m.IoTreeTimerExpiry
	}
	return 0
}

func (m *BgpPerfProcessGbl_) GetIoHandlerTm() uint64 {
	if m != nil {
		return m.IoHandlerTm
	}
	return 0
}

func (m *BgpPerfProcessGbl_) GetQadMessagesSent() uint32 {
	if m != nil {
		return m.QadMessagesSent
	}
	return 0
}

func (m *BgpPerfProcessGbl_) GetQadackSent() uint32 {
	if m != nil {
		return m.QadackSent
	}
	return 0
}

func (m *BgpPerfProcessGbl_) GetQadSendFailure() uint32 {
	if m != nil {
		return m.QadSendFailure
	}
	return 0
}

func (m *BgpPerfProcessGbl_) GetQadAcKsFailure() uint32 {
	if m != nil {
		return m.QadAcKsFailure
	}
	return 0
}

func (m *BgpPerfProcessGbl_) GetQadSuspends() uint32 {
	if m != nil {
		return m.QadSuspends
	}
	return 0
}

func (m *BgpPerfProcessGbl_) GetQadResumes() uint32 {
	if m != nil {
		return m.QadResumes
	}
	return 0
}

func (m *BgpPerfProcessGbl_) GetQadSendDrops() uint32 {
	if m != nil {
		return m.QadSendDrops
	}
	return 0
}

func (m *BgpPerfProcessGbl_) GetQadMessagesReceived() uint32 {
	if m != nil {
		return m.QadMessagesReceived
	}
	return 0
}

func (m *BgpPerfProcessGbl_) GetQadProcessed() uint32 {
	if m != nil {
		return m.QadProcessed
	}
	return 0
}

func (m *BgpPerfProcessGbl_) GetQadAcKsReceived() uint32 {
	if m != nil {
		return m.QadAcKsReceived
	}
	return 0
}

func (m *BgpPerfProcessGbl_) GetQadTimeoutReceived() uint32 {
	if m != nil {
		return m.QadTimeoutReceived
	}
	return 0
}

func (m *BgpPerfProcessGbl_) GetQadInitDrops() uint32 {
	if m != nil {
		return m.QadInitDrops
	}
	return 0
}

func (m *BgpPerfProcessGbl_) GetQadoosDrops() uint32 {
	if m != nil {
		return m.QadoosDrops
	}
	return 0
}

func (m *BgpPerfProcessGbl_) GetQadRecvDrops() uint32 {
	if m != nil {
		return m.QadRecvDrops
	}
	return 0
}

func (m *BgpPerfProcessGbl_) GetQadTimeoutRecvd() uint32 {
	if m != nil {
		return m.QadTimeoutRecvd
	}
	return 0
}

func (m *BgpPerfProcessGbl_) GetNsrLastResetReason() uint32 {
	if m != nil {
		return m.NsrLastResetReason
	}
	return 0
}

func (m *BgpPerfProcessGbl_) GetRedconNsrReady() bool {
	if m != nil {
		return m.RedconNsrReady
	}
	return false
}

func (m *BgpPerfProcessGbl_) GetRedconStateTime() uint32 {
	if m != nil {
		return m.RedconStateTime
	}
	return 0
}

func (m *BgpPerfProcessGbl_) GetActiveNsrState() uint32 {
	if m != nil {
		return m.ActiveNsrState
	}
	return 0
}

func (m *BgpPerfProcessGbl_) GetSecActiveNsrState() uint32 {
	if m != nil {
		return m.SecActiveNsrState
	}
	return 0
}

func (m *BgpPerfProcessGbl_) GetTotalOutstandingPostits() uint32 {
	if m != nil {
		return m.TotalOutstandingPostits
	}
	return 0
}

func (m *BgpPerfProcessGbl_) GetTotalNeighborsWithPendingPostits() uint32 {
	if m != nil {
		return m.TotalNeighborsWithPendingPostits
	}
	return 0
}

func (m *BgpPerfProcessGbl_) GetPostitCountInfo() []*BgpPostitCountInfo_ {
	if m != nil {
		return m.PostitCountInfo
	}
	return nil
}

func (m *BgpPerfProcessGbl_) GetIpv4RibServer() *BgpPerfRibGblInfo_ {
	if m != nil {
		return m.Ipv4RibServer
	}
	return nil
}

func (m *BgpPerfProcessGbl_) GetIpv6RibServer() *BgpPerfRibGblInfo_ {
	if m != nil {
		return m.Ipv6RibServer
	}
	return nil
}

func (m *BgpPerfProcessGbl_) GetTeConnection() *BgpPerfServerConnStat {
	if m != nil {
		return m.TeConnection
	}
	return nil
}

func (m *BgpPerfProcessGbl_) GetTep2PAutoTunnelEnabled() bool {
	if m != nil {
		return m.Tep2PAutoTunnelEnabled
	}
	return false
}

func (m *BgpPerfProcessGbl_) GetLsdConnection() *BgpPerfServerConnStat {
	if m != nil {
		return m.LsdConnection
	}
	return nil
}

func (m *BgpPerfProcessGbl_) GetDsNpl() *BgpPerfDsNplInfoBag_ {
	if m != nil {
		return m.DsNpl
	}
	return nil
}

func (m *BgpPerfProcessGbl_) GetIssuMilestone() []*BgpIssuMilestoneBag_ {
	if m != nil {
		return m.IssuMilestone
	}
	return nil
}

type BgpPerfProcessVrf_ struct {
	LptsSetUpTime              uint32   `protobuf:"varint,1,opt,name=lpts_set_up_time,json=lptsSetUpTime,proto3" json:"lpts_set_up_time,omitempty"`
	LptsCalls                  uint32   `protobuf:"varint,2,opt,name=lpts_calls,json=lptsCalls,proto3" json:"lpts_calls,omitempty"`
	ReadThrottlesCount         uint32   `protobuf:"varint,3,opt,name=read_throttles_count,json=readThrottlesCount,proto3" json:"read_throttles_count,omitempty"`
	LowThrottledReadCount      uint32   `protobuf:"varint,4,opt,name=low_throttled_read_count,json=lowThrottledReadCount,proto3" json:"low_throttled_read_count,omitempty"`
	HighThrottledReadCount     uint32   `protobuf:"varint,5,opt,name=high_throttled_read_count,json=highThrottledReadCount,proto3" json:"high_throttled_read_count,omitempty"`
	ReadCallsCount             uint32   `protobuf:"varint,6,opt,name=read_calls_count,json=readCallsCount,proto3" json:"read_calls_count,omitempty"`
	ReadMessagesCount          uint32   `protobuf:"varint,7,opt,name=read_messages_count,json=readMessagesCount,proto3" json:"read_messages_count,omitempty"`
	DataBytesRead              uint32   `protobuf:"varint,8,opt,name=data_bytes_read,json=dataBytesRead,proto3" json:"data_bytes_read,omitempty"`
	IoReadTime                 uint32   `protobuf:"varint,9,opt,name=io_read_time,json=ioReadTime,proto3" json:"io_read_time,omitempty"`
	WriteCallsCount            uint32   `protobuf:"varint,10,opt,name=write_calls_count,json=writeCallsCount,proto3" json:"write_calls_count,omitempty"`
	DataBytesWritten           uint32   `protobuf:"varint,11,opt,name=data_bytes_written,json=dataBytesWritten,proto3" json:"data_bytes_written,omitempty"`
	IoWriteTime                uint32   `protobuf:"varint,12,opt,name=io_write_time,json=ioWriteTime,proto3" json:"io_write_time,omitempty"`
	WriteSubgroupCallsCount    uint32   `protobuf:"varint,13,opt,name=write_subgroup_calls_count,json=writeSubgroupCallsCount,proto3" json:"write_subgroup_calls_count,omitempty"`
	WriteSubgroupMessagesCount uint32   `protobuf:"varint,14,opt,name=write_subgroup_messages_count,json=writeSubgroupMessagesCount,proto3" json:"write_subgroup_messages_count,omitempty"`
	SubgroupListTime           uint32   `protobuf:"varint,15,opt,name=subgroup_list_time,json=subgroupListTime,proto3" json:"subgroup_list_time,omitempty"`
	WriteQueueCallsCount       uint32   `protobuf:"varint,16,opt,name=write_queue_calls_count,json=writeQueueCallsCount,proto3" json:"write_queue_calls_count,omitempty"`
	WriteQueueMessagesCount    uint32   `protobuf:"varint,17,opt,name=write_queue_messages_count,json=writeQueueMessagesCount,proto3" json:"write_queue_messages_count,omitempty"`
	WriteQueueTime             uint32   `protobuf:"varint,18,opt,name=write_queue_time,json=writeQueueTime,proto3" json:"write_queue_time,omitempty"`
	InboundUpdateMessages      uint32   `protobuf:"varint,19,opt,name=inbound_update_messages,json=inboundUpdateMessages,proto3" json:"inbound_update_messages,omitempty"`
	InboundUpdateMessagesTime  uint32   `protobuf:"varint,20,opt,name=inbound_update_messages_time,json=inboundUpdateMessagesTime,proto3" json:"inbound_update_messages_time,omitempty"`
	XXX_NoUnkeyedLiteral       struct{} `json:"-"`
	XXX_unrecognized           []byte   `json:"-"`
	XXX_sizecache              int32    `json:"-"`
}

func (m *BgpPerfProcessVrf_) Reset()         { *m = BgpPerfProcessVrf_{} }
func (m *BgpPerfProcessVrf_) String() string { return proto.CompactTextString(m) }
func (*BgpPerfProcessVrf_) ProtoMessage()    {}
func (*BgpPerfProcessVrf_) Descriptor() ([]byte, []int) {
	return fileDescriptor_963cc3c7231da349, []int{17}
}

func (m *BgpPerfProcessVrf_) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BgpPerfProcessVrf_.Unmarshal(m, b)
}
func (m *BgpPerfProcessVrf_) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BgpPerfProcessVrf_.Marshal(b, m, deterministic)
}
func (m *BgpPerfProcessVrf_) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BgpPerfProcessVrf_.Merge(m, src)
}
func (m *BgpPerfProcessVrf_) XXX_Size() int {
	return xxx_messageInfo_BgpPerfProcessVrf_.Size(m)
}
func (m *BgpPerfProcessVrf_) XXX_DiscardUnknown() {
	xxx_messageInfo_BgpPerfProcessVrf_.DiscardUnknown(m)
}

var xxx_messageInfo_BgpPerfProcessVrf_ proto.InternalMessageInfo

func (m *BgpPerfProcessVrf_) GetLptsSetUpTime() uint32 {
	if m != nil {
		return m.LptsSetUpTime
	}
	return 0
}

func (m *BgpPerfProcessVrf_) GetLptsCalls() uint32 {
	if m != nil {
		return m.LptsCalls
	}
	return 0
}

func (m *BgpPerfProcessVrf_) GetReadThrottlesCount() uint32 {
	if m != nil {
		return m.ReadThrottlesCount
	}
	return 0
}

func (m *BgpPerfProcessVrf_) GetLowThrottledReadCount() uint32 {
	if m != nil {
		return m.LowThrottledReadCount
	}
	return 0
}

func (m *BgpPerfProcessVrf_) GetHighThrottledReadCount() uint32 {
	if m != nil {
		return m.HighThrottledReadCount
	}
	return 0
}

func (m *BgpPerfProcessVrf_) GetReadCallsCount() uint32 {
	if m != nil {
		return m.ReadCallsCount
	}
	return 0
}

func (m *BgpPerfProcessVrf_) GetReadMessagesCount() uint32 {
	if m != nil {
		return m.ReadMessagesCount
	}
	return 0
}

func (m *BgpPerfProcessVrf_) GetDataBytesRead() uint32 {
	if m != nil {
		return m.DataBytesRead
	}
	return 0
}

func (m *BgpPerfProcessVrf_) GetIoReadTime() uint32 {
	if m != nil {
		return m.IoReadTime
	}
	return 0
}

func (m *BgpPerfProcessVrf_) GetWriteCallsCount() uint32 {
	if m != nil {
		return m.WriteCallsCount
	}
	return 0
}

func (m *BgpPerfProcessVrf_) GetDataBytesWritten() uint32 {
	if m != nil {
		return m.DataBytesWritten
	}
	return 0
}

func (m *BgpPerfProcessVrf_) GetIoWriteTime() uint32 {
	if m != nil {
		return m.IoWriteTime
	}
	return 0
}

func (m *BgpPerfProcessVrf_) GetWriteSubgroupCallsCount() uint32 {
	if m != nil {
		return m.WriteSubgroupCallsCount
	}
	return 0
}

func (m *BgpPerfProcessVrf_) GetWriteSubgroupMessagesCount() uint32 {
	if m != nil {
		return m.WriteSubgroupMessagesCount
	}
	return 0
}

func (m *BgpPerfProcessVrf_) GetSubgroupListTime() uint32 {
	if m != nil {
		return m.SubgroupListTime
	}
	return 0
}

func (m *BgpPerfProcessVrf_) GetWriteQueueCallsCount() uint32 {
	if m != nil {
		return m.WriteQueueCallsCount
	}
	return 0
}

func (m *BgpPerfProcessVrf_) GetWriteQueueMessagesCount() uint32 {
	if m != nil {
		return m.WriteQueueMessagesCount
	}
	return 0
}

func (m *BgpPerfProcessVrf_) GetWriteQueueTime() uint32 {
	if m != nil {
		return m.WriteQueueTime
	}
	return 0
}

func (m *BgpPerfProcessVrf_) GetInboundUpdateMessages() uint32 {
	if m != nil {
		return m.InboundUpdateMessages
	}
	return 0
}

func (m *BgpPerfProcessVrf_) GetInboundUpdateMessagesTime() uint32 {
	if m != nil {
		return m.InboundUpdateMessagesTime
	}
	return 0
}

type BgpPerfProcess_ struct {
	Global               *BgpPerfProcessGbl_ `protobuf:"bytes,1,opt,name=global,proto3" json:"global,omitempty"`
	Vrf                  *BgpPerfProcessVrf_ `protobuf:"bytes,2,opt,name=vrf,proto3" json:"vrf,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *BgpPerfProcess_) Reset()         { *m = BgpPerfProcess_{} }
func (m *BgpPerfProcess_) String() string { return proto.CompactTextString(m) }
func (*BgpPerfProcess_) ProtoMessage()    {}
func (*BgpPerfProcess_) Descriptor() ([]byte, []int) {
	return fileDescriptor_963cc3c7231da349, []int{18}
}

func (m *BgpPerfProcess_) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BgpPerfProcess_.Unmarshal(m, b)
}
func (m *BgpPerfProcess_) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BgpPerfProcess_.Marshal(b, m, deterministic)
}
func (m *BgpPerfProcess_) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BgpPerfProcess_.Merge(m, src)
}
func (m *BgpPerfProcess_) XXX_Size() int {
	return xxx_messageInfo_BgpPerfProcess_.Size(m)
}
func (m *BgpPerfProcess_) XXX_DiscardUnknown() {
	xxx_messageInfo_BgpPerfProcess_.DiscardUnknown(m)
}

var xxx_messageInfo_BgpPerfProcess_ proto.InternalMessageInfo

func (m *BgpPerfProcess_) GetGlobal() *BgpPerfProcessGbl_ {
	if m != nil {
		return m.Global
	}
	return nil
}

func (m *BgpPerfProcess_) GetVrf() *BgpPerfProcessVrf_ {
	if m != nil {
		return m.Vrf
	}
	return nil
}

type BgpProcessInfoBag struct {
	ProcessInstance       uint32              `protobuf:"varint,50,opt,name=process_instance,json=processInstance,proto3" json:"process_instance,omitempty"`
	VrfName               string              `protobuf:"bytes,51,opt,name=vrf_name,json=vrfName,proto3" json:"vrf_name,omitempty"`
	VrfTotals             bool                `protobuf:"varint,52,opt,name=vrf_totals,json=vrfTotals,proto3" json:"vrf_totals,omitempty"`
	Global                *BgpProcessInfoGbl_ `protobuf:"bytes,53,opt,name=global,proto3" json:"global,omitempty"`
	Vrf                   *BgpProcessInfoVrf_ `protobuf:"bytes,54,opt,name=vrf,proto3" json:"vrf,omitempty"`
	PerformanceStatistics *BgpPerfProcess_    `protobuf:"bytes,55,opt,name=performance_statistics,json=performanceStatistics,proto3" json:"performance_statistics,omitempty"`
	XXX_NoUnkeyedLiteral  struct{}            `json:"-"`
	XXX_unrecognized      []byte              `json:"-"`
	XXX_sizecache         int32               `json:"-"`
}

func (m *BgpProcessInfoBag) Reset()         { *m = BgpProcessInfoBag{} }
func (m *BgpProcessInfoBag) String() string { return proto.CompactTextString(m) }
func (*BgpProcessInfoBag) ProtoMessage()    {}
func (*BgpProcessInfoBag) Descriptor() ([]byte, []int) {
	return fileDescriptor_963cc3c7231da349, []int{19}
}

func (m *BgpProcessInfoBag) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BgpProcessInfoBag.Unmarshal(m, b)
}
func (m *BgpProcessInfoBag) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BgpProcessInfoBag.Marshal(b, m, deterministic)
}
func (m *BgpProcessInfoBag) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BgpProcessInfoBag.Merge(m, src)
}
func (m *BgpProcessInfoBag) XXX_Size() int {
	return xxx_messageInfo_BgpProcessInfoBag.Size(m)
}
func (m *BgpProcessInfoBag) XXX_DiscardUnknown() {
	xxx_messageInfo_BgpProcessInfoBag.DiscardUnknown(m)
}

var xxx_messageInfo_BgpProcessInfoBag proto.InternalMessageInfo

func (m *BgpProcessInfoBag) GetProcessInstance() uint32 {
	if m != nil {
		return m.ProcessInstance
	}
	return 0
}

func (m *BgpProcessInfoBag) GetVrfName() string {
	if m != nil {
		return m.VrfName
	}
	return ""
}

func (m *BgpProcessInfoBag) GetVrfTotals() bool {
	if m != nil {
		return m.VrfTotals
	}
	return false
}

func (m *BgpProcessInfoBag) GetGlobal() *BgpProcessInfoGbl_ {
	if m != nil {
		return m.Global
	}
	return nil
}

func (m *BgpProcessInfoBag) GetVrf() *BgpProcessInfoVrf_ {
	if m != nil {
		return m.Vrf
	}
	return nil
}

func (m *BgpProcessInfoBag) GetPerformanceStatistics() *BgpPerfProcess_ {
	if m != nil {
		return m.PerformanceStatistics
	}
	return nil
}

func init() {
	proto.RegisterType((*BgpProcessInfoBag_KEYS)(nil), "cisco_ios_xr_ipv4_bgp_oper.bgp.instances.instance.instance_active.vrfs.vrf.process_info.bgp_process_info_bag_KEYS")
	proto.RegisterType((*BgpProcessInfoGbl_)(nil), "cisco_ios_xr_ipv4_bgp_oper.bgp.instances.instance.instance_active.vrfs.vrf.process_info.bgp_process_info_gbl_")
	proto.RegisterType((*BgpProcessInfoVrf_)(nil), "cisco_ios_xr_ipv4_bgp_oper.bgp.instances.instance.instance_active.vrfs.vrf.process_info.bgp_process_info_vrf_")
	proto.RegisterType((*BgpL2VpnAddrT)(nil), "cisco_ios_xr_ipv4_bgp_oper.bgp.instances.instance.instance_active.vrfs.vrf.process_info.bgp_l2vpn_addr_t")
	proto.RegisterType((*BgpL2VpnMspwAddrT)(nil), "cisco_ios_xr_ipv4_bgp_oper.bgp.instances.instance.instance_active.vrfs.vrf.process_info.bgp_l2vpn_mspw_addr_t")
	proto.RegisterType((*BgpIpv4SrpolicyAddrT)(nil), "cisco_ios_xr_ipv4_bgp_oper.bgp.instances.instance.instance_active.vrfs.vrf.process_info.bgp_ipv4_srpolicy_addr_t")
	proto.RegisterType((*BgpIpv6SrpolicyAddrT)(nil), "cisco_ios_xr_ipv4_bgp_oper.bgp.instances.instance.instance_active.vrfs.vrf.process_info.bgp_ipv6_srpolicy_addr_t")
	proto.RegisterType((*BgpAddrtype)(nil), "cisco_ios_xr_ipv4_bgp_oper.bgp.instances.instance.instance_active.vrfs.vrf.process_info.bgp_addrtype")
	proto.RegisterType((*BgpPostitCountInfo_)(nil), "cisco_ios_xr_ipv4_bgp_oper.bgp.instances.instance.instance_active.vrfs.vrf.process_info.bgp_postit_count_info_")
	proto.RegisterType((*BgpTimespec)(nil), "cisco_ios_xr_ipv4_bgp_oper.bgp.instances.instance.instance_active.vrfs.vrf.process_info.bgp_timespec")
	proto.RegisterType((*BgpPerfRibGblInfo_)(nil), "cisco_ios_xr_ipv4_bgp_oper.bgp.instances.instance.instance_active.vrfs.vrf.process_info.bgp_perf_rib_gbl_info_")
	proto.RegisterType((*BgpPerfServerConnStat)(nil), "cisco_ios_xr_ipv4_bgp_oper.bgp.instances.instance.instance_active.vrfs.vrf.process_info.bgp_perf_server_conn_stat")
	proto.RegisterType((*NsrPlClientStatsType)(nil), "cisco_ios_xr_ipv4_bgp_oper.bgp.instances.instance.instance_active.vrfs.vrf.process_info.nsr_pl_client_stats_type")
	proto.RegisterType((*BgpPerfNplEndpInfoBag_)(nil), "cisco_ios_xr_ipv4_bgp_oper.bgp.instances.instance.instance_active.vrfs.vrf.process_info.bgp_perf_npl_endp_info_bag_")
	proto.RegisterType((*BgpPerfDsNplInfoBag_)(nil), "cisco_ios_xr_ipv4_bgp_oper.bgp.instances.instance.instance_active.vrfs.vrf.process_info.bgp_perf_ds_npl_info_bag_")
	proto.RegisterType((*BgpIssuMilestoneBag_)(nil), "cisco_ios_xr_ipv4_bgp_oper.bgp.instances.instance.instance_active.vrfs.vrf.process_info.bgp_issu_milestone_bag_")
	proto.RegisterType((*BgpPerfProcessGbl_)(nil), "cisco_ios_xr_ipv4_bgp_oper.bgp.instances.instance.instance_active.vrfs.vrf.process_info.bgp_perf_process_gbl_")
	proto.RegisterType((*BgpPerfProcessVrf_)(nil), "cisco_ios_xr_ipv4_bgp_oper.bgp.instances.instance.instance_active.vrfs.vrf.process_info.bgp_perf_process_vrf_")
	proto.RegisterType((*BgpPerfProcess_)(nil), "cisco_ios_xr_ipv4_bgp_oper.bgp.instances.instance.instance_active.vrfs.vrf.process_info.bgp_perf_process_")
	proto.RegisterType((*BgpProcessInfoBag)(nil), "cisco_ios_xr_ipv4_bgp_oper.bgp.instances.instance.instance_active.vrfs.vrf.process_info.bgp_process_info_bag")
}

func init() { proto.RegisterFile("bgp_process_info_bag.proto", fileDescriptor_963cc3c7231da349) }

var fileDescriptor_963cc3c7231da349 = []byte{
	// 4429 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xcc, 0x7b, 0x5b, 0x6f, 0x1c, 0x47,
	0x76, 0x3f, 0xc6, 0x92, 0x45, 0xea, 0x90, 0x43, 0x0e, 0x9b, 0xe4, 0xb0, 0x49, 0x8a, 0xba, 0x8c,
	0x6c, 0xad, 0x64, 0x4b, 0x94, 0xad, 0xcb, 0xd8, 0xd6, 0xda, 0x5e, 0xd3, 0x92, 0xec, 0xa5, 0x57,
	0xa2, 0xf9, 0x1f, 0x6a, 0x6d, 0xfc, 0x91, 0x87, 0x46, 0x4f, 0x77, 0xcd, 0xb0, 0xe3, 0x9e, 0xae,
	0x56, 0x57, 0x0d, 0x29, 0xee, 0x53, 0x80, 0x00, 0x01, 0xf2, 0x96, 0xa7, 0x75, 0x82, 0x04, 0x08,
	0x36, 0x0f, 0x9b, 0x20, 0x17, 0x04, 0x41, 0xf2, 0x09, 0xf2, 0x92, 0xcf, 0x12, 0x60, 0x1f, 0xf3,
	0x01, 0x82, 0x73, 0x4e, 0x75, 0xf5, 0x65, 0x86, 0x4e, 0xf2, 0x40, 0x79, 0x5f, 0x08, 0xce, 0x39,
	0xbf, 0xdf, 0xa9, 0x53, 0x75, 0xea, 0x72, 0xea, 0xd2, 0xb0, 0xd1, 0x1f, 0xa6, 0x5e, 0x9a, 0xc9,
	0x40, 0x28, 0xe5, 0x45, 0xc9, 0x40, 0x7a, 0x7d, 0x7f, 0xb8, 0x9d, 0x66, 0x52, 0x4b, 0xe7, 0xdb,
	0x20, 0x52, 0x81, 0xf4, 0x22, 0xa9, 0xbc, 0x57, 0x99, 0x17, 0xa5, 0x47, 0x0f, 0x3c, 0x44, 0xcb,
	0x54, 0x64, 0xdb, 0xfd, 0x61, 0xba, 0x1d, 0x25, 0x4a, 0xfb, 0x49, 0x20, 0x94, 0xfd, 0xcf, 0xfe,
	0xe3, 0xf9, 0x81, 0x8e, 0x8e, 0xc4, 0xf6, 0x51, 0x36, 0x50, 0xf8, 0x67, 0xbb, 0x5c, 0x44, 0xe7,
	0x0f, 0x60, 0x7d, 0x5a, 0xb1, 0xde, 0x2f, 0x9e, 0xfe, 0xff, 0x03, 0xe7, 0x3a, 0x34, 0xad, 0x95,
	0xc4, 0x1f, 0x09, 0xb7, 0x71, 0xb5, 0x71, 0xf3, 0x62, 0x6f, 0x3e, 0x17, 0xee, 0xf9, 0x23, 0xe1,
	0xac, 0xc3, 0xec, 0x51, 0x36, 0x60, 0xfd, 0x1b, 0xa4, 0x9f, 0x39, 0xca, 0x06, 0xa8, 0xea, 0xfc,
	0x6e, 0x09, 0x56, 0x27, 0xac, 0x0f, 0xfb, 0xb1, 0xe7, 0xdc, 0x83, 0xd5, 0x42, 0x98, 0x97, 0x20,
	0xc3, 0xbc, 0x84, 0x65, 0xa3, 0xdc, 0xcd, 0x0b, 0x92, 0xa1, 0x40, 0x6f, 0x32, 0xa1, 0xb4, 0x9f,
	0x69, 0x2f, 0x90, 0xe3, 0x44, 0x53, 0x69, 0xcd, 0xde, 0xbc, 0x11, 0x3e, 0x46, 0x99, 0xf3, 0x09,
	0x6c, 0xa6, 0xbe, 0x3e, 0xf4, 0x7c, 0xad, 0xb3, 0xa8, 0x3f, 0xd6, 0x42, 0x79, 0x22, 0xd1, 0xd9,
	0x89, 0xa1, 0x9c, 0x23, 0x8a, 0x8b, 0x90, 0x1d, 0x8b, 0x78, 0x8a, 0x00, 0xa6, 0xa3, 0x5f, 0x15,
	0xba, 0x37, 0x12, 0x23, 0x99, 0x9d, 0xb8, 0xe7, 0x89, 0xb8, 0x5c, 0x21, 0x3e, 0x27, 0x95, 0x73,
	0x07, 0x96, 0x7d, 0xe5, 0x11, 0xad, 0x5c, 0xd4, 0x9b, 0xc4, 0x68, 0xf9, 0x6a, 0xdf, 0xd7, 0x87,
	0xa5, 0x22, 0xee, 0x43, 0xbb, 0x0c, 0x8f, 0x84, 0xca, 0xcb, 0xb8, 0xc0, 0x65, 0x14, 0x8c, 0x48,
	0x28, 0x53, 0xc6, 0x3d, 0x58, 0x0d, 0xe4, 0x68, 0x34, 0x4e, 0x22, 0x7d, 0x52, 0x29, 0x65, 0x86,
	0x39, 0x56, 0x59, 0x2a, 0xe8, 0x16, 0xb4, 0x0a, 0x8e, 0x29, 0x62, 0x96, 0xe0, 0x8b, 0x56, 0x6e,
	0xcc, 0x3f, 0x86, 0xcb, 0xe2, 0x95, 0x16, 0x49, 0x28, 0x42, 0x6f, 0x7a, 0x39, 0x17, 0x89, 0xb8,
	0x99, 0xa3, 0x1e, 0x4f, 0x29, 0xef, 0x11, 0xac, 0x4f, 0x31, 0x62, 0x0a, 0x06, 0xe2, 0xaf, 0x4d,
	0xf0, 0x8d, 0x03, 0x5f, 0x41, 0x27, 0x15, 0x5e, 0x18, 0x29, 0x1d, 0x25, 0xc3, 0x71, 0xa4, 0x0e,
	0x45, 0xe6, 0xc5, 0x7e, 0x5f, 0xc4, 0x15, 0x27, 0xe6, 0xc8, 0xc8, 0xe5, 0x54, 0x3c, 0x29, 0x03,
	0x9f, 0x21, 0xae, 0xe4, 0xc7, 0x0e, 0x6c, 0x9d, 0x62, 0xcb, 0xf8, 0x32, 0x4f, 0x66, 0x36, 0xa6,
	0x99, 0x31, 0xee, 0xdc, 0x80, 0xc5, 0x54, 0xfb, 0x95, 0xb2, 0x9b, 0x44, 0x6a, 0xa6, 0xda, 0x2f,
	0x15, 0xb5, 0x05, 0x80, 0x38, 0x63, 0x77, 0x81, 0x20, 0x17, 0x53, 0xed, 0x1b, 0x33, 0x1f, 0x80,
	0xab, 0xc7, 0x49, 0x42, 0xb5, 0x08, 0xfc, 0xb4, 0x62, 0x6f, 0x91, 0xc0, 0xab, 0xac, 0x7f, 0x8a,
	0xea, 0x92, 0xdd, 0x6d, 0x58, 0xae, 0x10, 0x4d, 0x01, 0x2d, 0xe2, 0x2c, 0x95, 0x38, 0xa6, 0xa0,
	0xdb, 0xe0, 0x64, 0x51, 0x3f, 0x4b, 0xaa, 0x3d, 0x70, 0x89, 0x7b, 0x20, 0x6b, 0x4a, 0xd6, 0x71,
	0x20, 0x31, 0xda, 0xd8, 0x75, 0xcc, 0x40, 0x22, 0xa1, 0x31, 0x79, 0x13, 0x5a, 0x69, 0x3a, 0xaa,
	0xfa, 0xbc, 0x4c, 0xb8, 0x05, 0x94, 0x97, 0xcc, 0x5d, 0x81, 0x39, 0x42, 0x1a, 0x63, 0x2b, 0x04,
	0x02, 0x14, 0x19, 0x53, 0xb7, 0xa0, 0x95, 0x49, 0x1c, 0x4b, 0x99, 0x18, 0xc4, 0x22, 0xd0, 0x32,
	0x53, 0xee, 0x2a, 0x77, 0x44, 0x92, 0xf7, 0xac, 0xd8, 0x79, 0x00, 0xed, 0x1a, 0x34, 0x37, 0xdb,
	0x26, 0xc2, 0x4a, 0x95, 0x60, 0x0a, 0xb8, 0x0e, 0xcd, 0x44, 0xbc, 0xd2, 0x87, 0x32, 0x35, 0x8e,
	0xae, 0x71, 0x85, 0x8c, 0x90, 0xdd, 0x7c, 0x1b, 0x16, 0x72, 0x90, 0x31, 0xe9, 0x72, 0x48, 0x8d,
	0xb4, 0x68, 0xca, 0x58, 0xe1, 0xf0, 0xaf, 0xd4, 0x7c, 0x9d, 0x9b, 0x92, 0x35, 0xd5, 0xa6, 0x34,
	0x68, 0x63, 0x73, 0x83, 0x4b, 0x66, 0xa1, 0x31, 0x79, 0x17, 0x56, 0x08, 0xa2, 0x84, 0xae, 0x18,
	0xdd, 0xe4, 0x70, 0xa2, 0xee, 0x40, 0xe8, 0x92, 0xd5, 0x1b, 0xb0, 0x68, 0x09, 0xc6, 0xee, 0x25,
	0xf6, 0xd5, 0x60, 0x4b, 0xbe, 0x46, 0x49, 0x28, 0x5e, 0x55, 0xcc, 0x6e, 0x19, 0x5f, 0x49, 0x53,
	0xf3, 0x95, 0xd1, 0xc6, 0xe6, 0x65, 0xe3, 0x2b, 0x09, 0x8d, 0xc9, 0x75, 0x98, 0x8d, 0x65, 0xe0,
	0xc7, 0x9e, 0xaf, 0xdc, 0x2b, 0xa4, 0x9f, 0xa1, 0xdf, 0x3b, 0xca, 0xd9, 0x84, 0x8b, 0xa9, 0x94,
	0xb1, 0xa7, 0xa2, 0x5f, 0x09, 0xf7, 0xea, 0xd5, 0x73, 0x37, 0x9b, 0xbd, 0x59, 0x14, 0x1c, 0x44,
	0xbf, 0x12, 0xd4, 0x5d, 0x50, 0xe9, 0xc7, 0xb1, 0x0c, 0x8c, 0x23, 0xd7, 0x08, 0xb3, 0x80, 0xf2,
	0x1d, 0x14, 0xdb, 0xca, 0x11, 0x72, 0x90, 0x09, 0x61, 0x80, 0x1d, 0x02, 0x36, 0x51, 0xfc, 0x45,
	0x26, 0x44, 0x3e, 0x7d, 0x2d, 0x8d, 0xd4, 0xd0, 0x8b, 0xe5, 0xd0, 0x2b, 0x8a, 0xbd, 0xce, 0x26,
	0x47, 0x6a, 0xf8, 0x4c, 0x0e, 0xf7, 0xf3, 0xc2, 0xbb, 0xe0, 0x56, 0xa0, 0x65, 0x27, 0xde, 0x22,
	0xc6, 0x4a, 0xc1, 0x28, 0xb9, 0xf2, 0x00, 0xd6, 0x2a, 0xbc, 0x92, 0x4b, 0x6f, 0x13, 0x6d, 0xb9,
	0xa0, 0x15, 0x8e, 0xdd, 0x80, 0x45, 0x2d, 0xb5, 0x1f, 0x7b, 0xb8, 0xec, 0x31, 0xfa, 0x06, 0x47,
	0x87, 0xc4, 0xdf, 0x64, 0x03, 0xbb, 0x96, 0x24, 0x22, 0x1a, 0x1e, 0xf6, 0x65, 0xa6, 0x18, 0xe7,
	0x11, 0xc0, 0xfd, 0x09, 0xcf, 0xd9, 0x56, 0x49, 0xf0, 0x17, 0xa8, 0x72, 0x76, 0xe1, 0x1a, 0xae,
	0x66, 0xfd, 0x18, 0xa7, 0xa4, 0xd0, 0x9b, 0xce, 0xbf, 0xc9, 0xd3, 0x60, 0x09, 0xb8, 0x37, 0xc5,
	0xd4, 0x43, 0x70, 0x55, 0xe2, 0x25, 0xe3, 0x91, 0x97, 0xc8, 0xc4, 0x0b, 0x07, 0xb1, 0x26, 0x87,
	0x93, 0x7e, 0xa6, 0xdc, 0x5b, 0xec, 0x81, 0x4a, 0xf6, 0xc6, 0xa3, 0x3d, 0x99, 0x3c, 0x19, 0xc4,
	0xfa, 0x9b, 0x6c, 0xb0, 0xd7, 0xcf, 0x94, 0xf3, 0x19, 0x5c, 0x3e, 0x8d, 0xe6, 0x51, 0x89, 0xee,
	0x3b, 0xbc, 0x86, 0x4e, 0x21, 0x3f, 0x45, 0xbd, 0xd3, 0x81, 0x66, 0x7f, 0x94, 0x96, 0x82, 0xf6,
	0x2e, 0xb5, 0xe5, 0x5c, 0x7f, 0x94, 0xda, 0x88, 0xdd, 0x85, 0x15, 0x8b, 0x29, 0x47, 0xeb, 0x36,
	0x41, 0x97, 0x0c, 0xb4, 0x14, 0xaa, 0x3b, 0xb0, 0x6c, 0x09, 0xa5, 0x30, 0xdd, 0x21, 0x7c, 0xcb,
	0xe0, 0x8b, 0x18, 0x7d, 0x02, 0x9b, 0xb1, 0x9f, 0x0d, 0xc5, 0x29, 0xab, 0xd9, 0x36, 0x57, 0x81,
	0x20, 0xd3, 0x96, 0xb2, 0x07, 0xd0, 0xae, 0xd3, 0xcd, 0x98, 0xb9, 0xcb, 0xd3, 0x50, 0x95, 0xc9,
	0x63, 0xa7, 0xf3, 0xeb, 0x73, 0x53, 0xd2, 0x1d, 0x6c, 0x3c, 0xe7, 0x27, 0xb0, 0x58, 0x0b, 0x25,
	0x25, 0x3a, 0xcd, 0xde, 0x42, 0xb5, 0x13, 0x38, 0x9f, 0xc2, 0xe6, 0x0f, 0xc4, 0xdf, 0x64, 0x3c,
	0xeb, 0xa7, 0x46, 0xde, 0xf9, 0x10, 0xdc, 0x71, 0x1a, 0xfa, 0x94, 0xb7, 0x28, 0xe5, 0x0f, 0x85,
	0xf2, 0x32, 0x11, 0x88, 0xe8, 0x48, 0x84, 0x26, 0xf7, 0x69, 0xb3, 0xfe, 0xb9, 0x51, 0xf7, 0x8c,
	0xd6, 0x79, 0x0f, 0x56, 0xea, 0x4c, 0x25, 0x12, 0x6d, 0x12, 0x1f, 0xa7, 0xca, 0x3a, 0x10, 0x89,
	0x76, 0x1e, 0x42, 0x3b, 0x91, 0x3a, 0x1a, 0x44, 0x81, 0xaf, 0x23, 0x99, 0x94, 0x4a, 0xe2, 0xd4,
	0x67, 0xb5, 0xa2, 0xb5, 0x05, 0xdd, 0x01, 0xa7, 0x4a, 0xa3, 0x62, 0x38, 0xf7, 0x59, 0xaa, 0x68,
	0xa8, 0x14, 0x9a, 0xdb, 0xf5, 0xb1, 0xcc, 0xbe, 0xab, 0x64, 0x3c, 0xf3, 0x46, 0x58, 0xac, 0xc3,
	0x98, 0x50, 0x31, 0x62, 0xd6, 0xac, 0xc3, 0xbe, 0x3e, 0x24, 0x75, 0xe7, 0x03, 0x68, 0x61, 0x5c,
	0xe2, 0x7b, 0x47, 0x69, 0xe2, 0xf9, 0x61, 0x98, 0x79, 0x3c, 0x1b, 0xda, 0xdf, 0x42, 0x29, 0xb7,
	0x41, 0x5d, 0x69, 0x9e, 0x84, 0x3b, 0x2c, 0xeb, 0x7c, 0xcc, 0x01, 0x65, 0xe0, 0x48, 0xa5, 0xc7,
	0xff, 0x27, 0xf6, 0x1e, 0xb8, 0xc8, 0xa6, 0x6c, 0x5d, 0x65, 0xa9, 0x8c, 0xa3, 0xe0, 0x24, 0x37,
	0x70, 0x0f, 0x56, 0x27, 0xe5, 0x85, 0xa1, 0x65, 0x54, 0x1e, 0x18, 0xdd, 0xa4, 0xbd, 0xee, 0x29,
	0xf6, 0xba, 0x3f, 0x64, 0xaf, 0x5b, 0xb7, 0xf7, 0x5f, 0xf3, 0x30, 0x8f, 0x06, 0x11, 0xaa, 0x4f,
	0x52, 0xe1, 0xb4, 0xe0, 0x9c, 0x3f, 0x88, 0x4c, 0x0e, 0x8e, 0xff, 0x3a, 0xd7, 0x60, 0x9e, 0xdc,
	0xcc, 0xad, 0x71, 0x82, 0x3f, 0x87, 0x32, 0x63, 0x05, 0x17, 0x21, 0x82, 0x8c, 0x02, 0x5f, 0x69,
	0x0b, 0x3c, 0x47, 0xc0, 0x16, 0x6a, 0x9e, 0xa3, 0xa2, 0x8e, 0xe6, 0x84, 0x2c, 0x47, 0x9f, 0x2f,
	0xd0, 0x94, 0x86, 0xe5, 0xe8, 0x6d, 0xa0, 0x86, 0xf0, 0x4c, 0x32, 0x94, 0xc3, 0xdf, 0x24, 0xf8,
	0x12, 0xaa, 0x5e, 0x90, 0x26, 0xc7, 0xdf, 0x84, 0x16, 0xfb, 0x12, 0x16, 0x9e, 0x5c, 0x20, 0xf0,
	0x02, 0x79, 0x12, 0x5a, 0x3f, 0x7e, 0x02, 0x8b, 0x28, 0x29, 0x87, 0x70, 0xa6, 0x00, 0x16, 0x41,
	0x74, 0xde, 0x87, 0x15, 0x23, 0xf1, 0xb9, 0x8a, 0x06, 0x3d, 0xcb, 0x1b, 0x95, 0x5c, 0xf7, 0xbc,
	0x50, 0x99, 0x46, 0xeb, 0x5a, 0xc3, 0x17, 0x6d, 0xa3, 0x75, 0xab, 0xcd, 0xd0, 0xad, 0x35, 0x1a,
	0xd8, 0x66, 0xe8, 0x4e, 0x69, 0xb4, 0x6e, 0xad, 0xd1, 0xe6, 0x0a, 0x74, 0xa5, 0xd1, 0xb8, 0x6a,
	0xdd, 0x72, 0xd5, 0xe6, 0x6d, 0xd5, 0xba, 0xa5, 0xaa, 0x99, 0x3e, 0x43, 0x7d, 0xbb, 0xe2, 0x47,
	0xd3, 0xd6, 0x0d, 0x95, 0x15, 0x57, 0xbe, 0x6f, 0x80, 0xc3, 0x3d, 0xff, 0x28, 0x8d, 0x95, 0x65,
	0x60, 0xea, 0x3b, 0x77, 0x2f, 0xda, 0x3e, 0xa3, 0x6d, 0xea, 0x76, 0x7d, 0xf8, 0xf6, 0x5a, 0xf4,
	0xeb, 0x9b, 0x34, 0x56, 0xa5, 0xda, 0xd0, 0xce, 0x30, 0x51, 0x3a, 0xf3, 0xa3, 0xa4, 0xa8, 0xcd,
	0x22, 0xd7, 0x06, 0x77, 0x88, 0xb9, 0x2e, 0xe7, 0xdc, 0xa2, 0xfe, 0xd2, 0x1d, 0x95, 0xdb, 0xaa,
	0x45, 0xf0, 0xc5, 0x5c, 0x5e, 0x85, 0x3e, 0xa8, 0x40, 0x97, 0x2c, 0xf4, 0x41, 0x19, 0x7a, 0x3b,
	0x6f, 0x22, 0x51, 0x06, 0x3b, 0x1c, 0x2e, 0xd2, 0x3c, 0x2d, 0xa1, 0x3b, 0x98, 0x42, 0x7a, 0xa5,
	0xb6, 0x5c, 0xe6, 0xee, 0x12, 0xab, 0x67, 0xb6, 0x6e, 0x7f, 0x65, 0x5b, 0xdd, 0x4e, 0x42, 0x88,
	0x5c, 0xa1, 0x56, 0x4f, 0x5e, 0x43, 0xab, 0x97, 0xe6, 0x3e, 0x53, 0x85, 0xe7, 0x2a, 0x3d, 0xae,
	0x76, 0xa4, 0x07, 0xde, 0x20, 0x96, 0xc7, 0x2a, 0x15, 0x81, 0x75, 0x70, 0xb5, 0x18, 0x24, 0x5f,
	0x18, 0x5d, 0xad, 0xf3, 0x4d, 0x72, 0xda, 0x45, 0xe7, 0xab, 0x73, 0x3e, 0x04, 0x37, 0x1f, 0xb4,
	0x13, 0xb4, 0x35, 0xa2, 0xb5, 0x8d, 0x7e, 0x3a, 0xb3, 0x3b, 0x95, 0xe9, 0x5a, 0x66, 0x77, 0x0a,
	0xf3, 0xb7, 0x0d, 0x68, 0x9b, 0x99, 0xda, 0xab, 0x4d, 0xad, 0xeb, 0xd4, 0xfc, 0x2f, 0xcf, 0xb4,
	0xf9, 0xa7, 0x2d, 0x1e, 0xf9, 0xea, 0xb0, 0x5f, 0x9e, 0xcd, 0x73, 0x47, 0xbb, 0x53, 0x1c, 0xdd,
	0x78, 0x3d, 0x8e, 0x76, 0xa7, 0x3a, 0xda, 0xad, 0x39, 0xda, 0xf9, 0xcf, 0x06, 0xb4, 0x29, 0x4d,
	0x92, 0x4a, 0x47, 0xe6, 0x2c, 0x87, 0x73, 0x25, 0x9c, 0x39, 0xcb, 0x52, 0x93, 0x24, 0xcd, 0xb1,
	0x8c, 0x97, 0xfa, 0x3f, 0x6b, 0x40, 0x2b, 0x4f, 0x8b, 0x2a, 0xcb, 0xd2, 0xdc, 0x3d, 0x71, 0xa6,
	0x15, 0xcc, 0x57, 0xc9, 0x9e, 0x4d, 0xe5, 0xf2, 0x96, 0x2f, 0x9f, 0x80, 0x9d, 0xab, 0x9e, 0x80,
	0x7d, 0xc5, 0x2b, 0xac, 0x8e, 0x46, 0x02, 0x3b, 0x95, 0xe3, 0xc2, 0x8c, 0x12, 0x81, 0x4c, 0x42,
	0x65, 0xea, 0x96, 0xff, 0x74, 0xae, 0xc2, 0x5c, 0xe2, 0x27, 0x32, 0xd7, 0x72, 0xa6, 0x57, 0x16,
	0x75, 0xfe, 0x78, 0xd6, 0xb4, 0x9b, 0xc8, 0x06, 0x5e, 0x16, 0xf5, 0xe9, 0x24, 0x8d, 0xdb, 0xed,
	0x2e, 0xac, 0x44, 0x8a, 0x64, 0x81, 0x4c, 0x12, 0x11, 0x60, 0xfa, 0xe4, 0x8d, 0x53, 0x2a, 0x63,
	0xb6, 0xb7, 0x14, 0xa9, 0x5e, 0xd4, 0x7f, 0x6c, 0x35, 0xbf, 0x4c, 0x9d, 0x87, 0xb0, 0x36, 0x81,
	0xae, 0xe4, 0x98, 0x2b, 0x59, 0x95, 0xc1, 0x8d, 0xff, 0xcf, 0x0d, 0xb8, 0x36, 0x88, 0x32, 0xa5,
	0x27, 0xcb, 0xe2, 0x3a, 0x6a, 0x7f, 0x94, 0x52, 0x1b, 0x9c, 0x75, 0x34, 0xf2, 0x16, 0xed, 0x6d,
	0x91, 0x3f, 0xb5, 0xfa, 0xbd, 0xc8, 0x7d, 0x71, 0xfe, 0xa9, 0x01, 0x57, 0x63, 0xff, 0x7f, 0x70,
	0xf8, 0xfc, 0xeb, 0x74, 0xf8, 0x12, 0xba, 0x73, 0xaa, 0xbf, 0x8f, 0x60, 0xe3, 0x14, 0x77, 0xfd,
	0xa1, 0x30, 0x89, 0x75, 0x7b, 0x8a, 0x85, 0x9d, 0xa1, 0x70, 0x3e, 0x82, 0xf5, 0x1a, 0x2d, 0x94,
	0xc7, 0x89, 0x09, 0x2b, 0x27, 0xd8, 0xed, 0x4a, 0x58, 0x9f, 0xc8, 0xe3, 0x84, 0x03, 0xfb, 0xaf,
	0x0d, 0xb8, 0x3e, 0x35, 0xb0, 0x64, 0xa1, 0x68, 0xa9, 0x99, 0xd7, 0xd9, 0x52, 0x57, 0x26, 0x43,
	0x8b, 0x1e, 0x17, 0x8d, 0xf5, 0x2f, 0x0d, 0xe8, 0x4c, 0x6b, 0xad, 0x9a, 0xd3, 0xb3, 0xaf, 0xd3,
	0xe9, 0xcb, 0x13, 0xc1, 0xa9, 0xfa, 0xfc, 0x29, 0x5c, 0x3a, 0xd5, 0x65, 0x0c, 0xf1, 0xc5, 0x7c,
	0x6b, 0x3a, 0xc5, 0xca, 0xce, 0x50, 0x74, 0xfe, 0x63, 0xc6, 0x9c, 0xd8, 0xe3, 0x2c, 0xa0, 0x44,
	0x76, 0x24, 0x32, 0xb2, 0xe3, 0x29, 0xed, 0x6b, 0x4a, 0x80, 0xd5, 0xd4, 0x49, 0x60, 0x21, 0x52,
	0x95, 0x19, 0x60, 0x1b, 0x96, 0x4f, 0x1f, 0xfd, 0x4b, 0xc1, 0xc4, 0xd0, 0xff, 0xbb, 0x06, 0xf0,
	0x50, 0xfb, 0xfd, 0x18, 0xf6, 0x1b, 0xe4, 0xcb, 0xf4, 0x31, 0xf4, 0xdb, 0x86, 0x69, 0xe3, 0xdf,
	0x8b, 0xf1, 0xbe, 0x8e, 0xae, 0x4c, 0x77, 0xf4, 0x3e, 0xb4, 0xa7, 0xf8, 0x59, 0x0c, 0xf4, 0xe5,
	0x3a, 0x15, 0x47, 0x39, 0x5d, 0x05, 0x9c, 0x3e, 0xc2, 0x4b, 0x51, 0x2d, 0x86, 0xf7, 0x3f, 0x36,
	0xe0, 0xca, 0x44, 0xf0, 0x7e, 0xcc, 0xa1, 0x7d, 0xa9, 0x16, 0xbe, 0xea, 0x18, 0xf9, 0xfb, 0x06,
	0x5c, 0xae, 0x37, 0xcc, 0x8f, 0x39, 0xa6, 0x37, 0xab, 0x71, 0xa8, 0x3a, 0xfb, 0x01, 0xb8, 0x53,
	0x7d, 0x2d, 0x06, 0xf3, 0xea, 0x24, 0x1d, 0x47, 0xf2, 0x9f, 0x37, 0xc0, 0x4d, 0x30, 0x59, 0x8b,
	0xbd, 0x20, 0x8e, 0x44, 0xa2, 0x69, 0x08, 0x2b, 0x8f, 0xb6, 0xe2, 0xeb, 0x30, 0x9b, 0x8c, 0x47,
	0x7c, 0x36, 0x82, 0x5b, 0xf8, 0xf3, 0xbd, 0x99, 0x64, 0x3c, 0xa2, 0x13, 0x11, 0xa3, 0xca, 0x44,
	0x70, 0xe4, 0xbe, 0x61, 0x55, 0x3d, 0x11, 0x1c, 0xe1, 0x5e, 0x22, 0x67, 0x79, 0x61, 0x26, 0x71,
	0x4c, 0x9e, 0xc3, 0xbd, 0x84, 0xa1, 0x3e, 0xc9, 0x64, 0x9a, 0x63, 0x90, 0xce, 0x98, 0xf3, 0x16,
	0x83, 0x36, 0x10, 0xd3, 0xf9, 0xf7, 0x73, 0xb0, 0x69, 0x27, 0x99, 0x24, 0x8d, 0x3d, 0x91, 0x84,
	0x69, 0x71, 0x39, 0xe8, 0x5c, 0x87, 0x26, 0x4a, 0x24, 0x6e, 0xb3, 0xca, 0x17, 0x83, 0xb9, 0x90,
	0x2e, 0x06, 0x6f, 0xc0, 0xa2, 0x3a, 0x49, 0x02, 0x6f, 0x98, 0xc9, 0x71, 0x5a, 0xbe, 0x1f, 0x6c,
	0xa2, 0xf8, 0x4b, 0x94, 0x12, 0x6e, 0x0d, 0x66, 0x12, 0x19, 0x0a, 0x2f, 0x0a, 0x4d, 0xf6, 0x74,
	0x01, 0x7f, 0xee, 0x86, 0xb8, 0x91, 0xb5, 0xa5, 0x1c, 0xfa, 0x49, 0x18, 0x0b, 0x1a, 0xb9, 0xe7,
	0x7b, 0x0b, 0xb9, 0xf8, 0xe7, 0x24, 0xc5, 0xb9, 0xcc, 0x02, 0x95, 0xf6, 0x63, 0xe1, 0x0d, 0x62,
	0x7f, 0x48, 0x83, 0x68, 0xb6, 0xb7, 0x94, 0xab, 0x0e, 0x50, 0xf3, 0x45, 0xec, 0x0f, 0x71, 0x83,
	0x66, 0xf1, 0x91, 0x52, 0x63, 0x2f, 0x93, 0xb1, 0x30, 0x07, 0x05, 0xad, 0x5c, 0xb3, 0xab, 0xd4,
	0xb8, 0x27, 0x63, 0xe1, 0xbc, 0x07, 0x2b, 0x16, 0xcd, 0x7d, 0x86, 0xcd, 0xcf, 0x90, 0x79, 0x6b,
	0x69, 0x87, 0x54, 0x64, 0x7f, 0x1d, 0x66, 0x47, 0x6a, 0xc8, 0x87, 0x9f, 0x7c, 0x18, 0x35, 0x33,
	0x52, 0x43, 0x3a, 0xf8, 0x5c, 0x87, 0xd9, 0xe3, 0x43, 0x21, 0x62, 0xac, 0x2d, 0xf7, 0x8e, 0x19,
	0xfa, 0xbd, 0x1b, 0xe2, 0xc0, 0x16, 0xaf, 0x52, 0x11, 0x68, 0x11, 0x7a, 0x4a, 0xbc, 0x1c, 0x0b,
	0xba, 0x14, 0x1d, 0x8f, 0xcc, 0xdd, 0xd9, 0x72, 0xae, 0x3c, 0x30, 0xba, 0xbd, 0xf1, 0xc8, 0xd9,
	0x80, 0xd9, 0xbc, 0x7c, 0x77, 0x8e, 0x8f, 0xe4, 0xf3, 0xdf, 0x9d, 0xbf, 0x79, 0xb3, 0xb4, 0x52,
	0x84, 0x8a, 0xe2, 0x58, 0x84, 0xf0, 0x3e, 0xb4, 0xc3, 0x28, 0xa3, 0x15, 0x24, 0x0a, 0x44, 0xb1,
	0x84, 0xd8, 0x2b, 0xd8, 0x30, 0xca, 0x0e, 0x58, 0x89, 0x5d, 0xf7, 0x00, 0x55, 0xce, 0x1d, 0x58,
	0xa6, 0xf6, 0x1a, 0x0d, 0xb3, 0x32, 0xe3, 0x0d, 0x73, 0x12, 0xa1, 0xd4, 0xf8, 0xf9, 0x30, 0x2b,
	0xe0, 0x5b, 0x00, 0x04, 0x4f, 0x0f, 0x7d, 0x95, 0xa7, 0xc6, 0x17, 0x51, 0xb2, 0x8f, 0x02, 0xe7,
	0x2a, 0xcc, 0x93, 0x1a, 0x3b, 0xbc, 0x97, 0x0c, 0x29, 0xb8, 0xb3, 0x3d, 0xa2, 0xbc, 0x38, 0x49,
	0xc5, 0xde, 0x90, 0x2e, 0xa0, 0x95, 0x1a, 0x1f, 0xfa, 0x9e, 0x4c, 0x71, 0xe8, 0x98, 0x93, 0x9f,
	0x79, 0x16, 0x7e, 0x4d, 0x32, 0xec, 0x67, 0x7c, 0x65, 0x11, 0xaa, 0xbc, 0x9b, 0x5c, 0xa0, 0x6e,
	0xd2, 0x24, 0xf1, 0x13, 0x65, 0x7a, 0xc9, 0x35, 0x98, 0xcf, 0x6b, 0x4b, 0x9d, 0x91, 0xcf, 0x7b,
	0xe6, 0x8c, 0x8c, 0xba, 0xe2, 0x6d, 0x70, 0x42, 0x45, 0x3e, 0x61, 0xc5, 0xc6, 0x8a, 0x03, 0xcd,
	0x21, 0x6c, 0xb1, 0xe6, 0x80, 0x14, 0x14, 0xe6, 0xbf, 0x6d, 0x40, 0x1b, 0x1b, 0x35, 0xcd, 0x22,
	0x99, 0x45, 0xfa, 0x84, 0x48, 0x91, 0xd2, 0x51, 0xe0, 0x5e, 0xbc, 0x7a, 0xee, 0x4c, 0x77, 0x5c,
	0xa7, 0xcd, 0x1b, 0xbd, 0x95, 0x24, 0x8d, 0xf7, 0x8d, 0x3f, 0x07, 0xb9, 0x3b, 0xce, 0xf7, 0x0d,
	0x98, 0xcf, 0x87, 0x31, 0xf5, 0x15, 0x20, 0xff, 0xf4, 0x99, 0x4e, 0x9f, 0xa7, 0x4c, 0x1e, 0xbd,
	0xb9, 0x24, 0x8d, 0x9f, 0xe6, 0x9d, 0xf4, 0xdf, 0x1a, 0xb0, 0x46, 0xdb, 0x47, 0xea, 0x56, 0x51,
	0x2c, 0x94, 0x96, 0x89, 0xe0, 0x2e, 0xfa, 0x36, 0x2c, 0x14, 0x92, 0xd2, 0x34, 0xd3, 0xb4, 0x52,
	0x0a, 0xda, 0x23, 0x58, 0x2f, 0x60, 0xfc, 0x3e, 0xa0, 0x58, 0x27, 0x38, 0x9f, 0x59, 0xb3, 0x80,
	0x03, 0xd4, 0x17, 0x93, 0x77, 0x17, 0x0a, 0x95, 0x37, 0x12, 0xba, 0x96, 0xce, 0x34, 0x7b, 0xab,
	0x56, 0xfd, 0x5c, 0x14, 0xbc, 0xce, 0x6f, 0xae, 0x99, 0xa3, 0x7e, 0xac, 0x63, 0x5e, 0x73, 0x7a,
	0xd9, 0xf0, 0x39, 0x6c, 0x05, 0x32, 0x19, 0x44, 0xc3, 0x71, 0x46, 0xa7, 0xd8, 0x5e, 0xa4, 0xc5,
	0x48, 0xe5, 0x18, 0x11, 0x9a, 0x7d, 0xdf, 0x66, 0x05, 0xb4, 0x8b, 0x98, 0xfd, 0x1c, 0x32, 0x69,
	0xc3, 0xb0, 0xa3, 0x64, 0x48, 0x0e, 0x9a, 0x5a, 0x55, 0x6d, 0xec, 0x5b, 0x0c, 0xba, 0x49, 0x73,
	0x5c, 0x88, 0xd3, 0xfc, 0xcb, 0xb1, 0x50, 0x5a, 0x55, 0xde, 0x3f, 0xb4, 0x44, 0x38, 0xea, 0x19,
	0x85, 0xbd, 0x70, 0x46, 0x74, 0xbd, 0x1c, 0x3e, 0xfc, 0x5f, 0x12, 0xe1, 0xa8, 0x66, 0xfd, 0x33,
	0xd8, 0xea, 0x63, 0x06, 0xeb, 0xa7, 0x91, 0x27, 0xc7, 0x3a, 0x1d, 0xeb, 0xda, 0xb5, 0x01, 0x27,
	0x30, 0xeb, 0x08, 0xda, 0x49, 0xa3, 0xaf, 0x09, 0x52, 0xb9, 0x3d, 0x78, 0x04, 0x1b, 0x75, 0x0b,
	0xfd, 0x13, 0x2d, 0x2a, 0xd7, 0x01, 0xed, 0x0a, 0xfd, 0x73, 0x54, 0x13, 0xf7, 0x09, 0x5c, 0x99,
	0xce, 0x1d, 0x8a, 0x44, 0x64, 0xbe, 0x16, 0xa1, 0xb9, 0x25, 0xd8, 0x9c, 0x34, 0xf0, 0x65, 0x0e,
	0x71, 0x9e, 0xc1, 0xf5, 0xba, 0x95, 0x34, 0x13, 0x83, 0xe8, 0x95, 0x50, 0x9e, 0x1f, 0x1e, 0x89,
	0x4c, 0x47, 0x18, 0x2f, 0x1e, 0xfd, 0x57, 0x2a, 0x96, 0xf6, 0x0d, 0x6e, 0xc7, 0xc2, 0x9c, 0xaf,
	0xa0, 0x73, 0xaa, 0xb5, 0xe3, 0x48, 0x1f, 0x86, 0x99, 0x7f, 0x9c, 0x98, 0x29, 0xff, 0xf2, 0x54,
	0x63, 0xdf, 0xe6, 0x28, 0xdc, 0x23, 0xd4, 0x6d, 0x29, 0x91, 0x84, 0x36, 0x2c, 0xbc, 0x20, 0xb8,
	0x15, 0x2b, 0x07, 0x0c, 0xa0, 0xe8, 0x4c, 0x69, 0x1f, 0xd3, 0x32, 0xd8, 0x99, 0xc8, 0xc4, 0xdc,
	0x94, 0xf6, 0xf9, 0xd2, 0x62, 0xc8, 0xca, 0xfb, 0xb0, 0x5a, 0xb7, 0x12, 0xf8, 0x71, 0xac, 0xcc,
	0xfb, 0x09, 0xa7, 0xc2, 0x7d, 0x8c, 0x1a, 0xe7, 0x21, 0xac, 0x59, 0x4a, 0x94, 0x94, 0x7b, 0x85,
	0x79, 0x3f, 0xb1, 0x62, 0x48, 0xbb, 0x49, 0xa9, 0x3f, 0xd0, 0x6d, 0x60, 0x95, 0x46, 0xe1, 0x34,
	0x0f, 0x2a, 0x96, 0xca, 0x1c, 0x8a, 0xa1, 0xf3, 0x05, 0x5c, 0xad, 0x11, 0x6c, 0x5b, 0xdb, 0x4b,
	0x28, 0x7e, 0x60, 0x71, 0xa9, 0x4c, 0xce, 0x5b, 0xda, 0xde, 0x45, 0xfd, 0x1c, 0xae, 0xd5, 0xec,
	0xd8, 0x50, 0x59, 0x8b, 0xe6, 0xd5, 0xc5, 0x56, 0xd9, 0x90, 0x0d, 0x55, 0x6e, 0xd1, 0xf9, 0x1c,
	0x2e, 0x4f, 0x78, 0x54, 0x1d, 0x4b, 0xfc, 0x1a, 0x63, 0xa3, 0xea, 0x4f, 0x7d, 0xc8, 0x56, 0x1e,
	0x43, 0x71, 0x5a, 0xe2, 0xd0, 0xaa, 0xd8, 0x8a, 0x4a, 0x4f, 0xa1, 0x28, 0x2d, 0x79, 0x04, 0x1b,
	0x26, 0x1b, 0xc1, 0xc5, 0x60, 0x84, 0x78, 0x91, 0x68, 0x91, 0x71, 0x69, 0xcb, 0x94, 0x0c, 0xb4,
	0x19, 0xb1, 0xa7, 0xb2, 0xe7, 0x32, 0x14, 0x4f, 0x51, 0x4d, 0x25, 0x7d, 0x0c, 0x9b, 0x68, 0x2d,
	0xec, 0x9f, 0x4c, 0x25, 0xaf, 0x10, 0x79, 0xcd, 0x40, 0x26, 0xd8, 0xef, 0xc0, 0x52, 0x51, 0xf2,
	0x40, 0x32, 0x67, 0x95, 0x38, 0x8b, 0xb6, 0xc0, 0x81, 0x24, 0xec, 0x2e, 0x74, 0x0a, 0xac, 0x0e,
	0x52, 0xce, 0x05, 0x3c, 0x7d, 0x2c, 0xcb, 0x05, 0xf2, 0xe3, 0x8e, 0x2d, 0x4b, 0xd6, 0x41, 0x4a,
	0x29, 0xc2, 0x8b, 0x63, 0x59, 0x14, 0xbb, 0x0f, 0x37, 0x94, 0x08, 0xbc, 0xff, 0x85, 0x39, 0x7e,
	0xfe, 0x71, 0x55, 0x89, 0x60, 0xe7, 0x07, 0x2d, 0xde, 0x87, 0x36, 0x46, 0xc9, 0x53, 0x81, 0x4c,
	0x31, 0xe9, 0xc2, 0x6c, 0x95, 0x33, 0x1a, 0xb7, 0x78, 0x86, 0x76, 0x40, 0xca, 0x83, 0x93, 0x24,
	0xe0, 0xa4, 0xe6, 0x13, 0xd8, 0x8c, 0x92, 0x48, 0x47, 0x7e, 0x6c, 0x08, 0x18, 0x41, 0x99, 0xd0,
	0xf9, 0xbd, 0x08, 0xe9, 0x50, 0x78, 0xb6, 0xe7, 0x1a, 0x08, 0xd1, 0x0c, 0x60, 0x07, 0xf5, 0x38,
	0xaa, 0xa2, 0xc4, 0x13, 0x47, 0xb8, 0x6e, 0xfb, 0x5a, 0xfb, 0xc1, 0xa1, 0x19, 0x55, 0xfc, 0x72,
	0xc4, 0x89, 0x92, 0xa7, 0xa8, 0xdb, 0x21, 0x15, 0x8f, 0xaa, 0xfb, 0xd0, 0x96, 0x63, 0x3d, 0x8d,
	0xc3, 0x2f, 0x48, 0x96, 0xe5, 0x58, 0x4f, 0x90, 0x3e, 0x84, 0xf5, 0x28, 0xf1, 0x4e, 0xe1, 0xf1,
	0x6b, 0x92, 0xd5, 0x28, 0xf9, 0x7a, 0x0a, 0xf3, 0x06, 0x2c, 0x8e, 0xd3, 0x70, 0x28, 0x78, 0xa6,
	0xc8, 0x30, 0x53, 0xe5, 0x27, 0x25, 0x4d, 0x16, 0x63, 0xd3, 0x65, 0xbb, 0x21, 0xba, 0x95, 0xe3,
	0x32, 0x21, 0x0c, 0x38, 0x16, 0x03, 0x4d, 0x0f, 0x4b, 0xce, 0xf7, 0x96, 0x0d, 0x3c, 0x13, 0x82,
	0x28, 0xcf, 0xc4, 0x40, 0xe3, 0x6e, 0x69, 0x92, 0x24, 0x5e, 0xa5, 0x51, 0x76, 0x42, 0xef, 0x4d,
	0xce, 0xf7, 0x56, 0x6b, 0xb4, 0xa7, 0xa4, 0xc4, 0xc1, 0x11, 0x8c, 0xb3, 0x0c, 0xab, 0x12, 0xc4,
	0x32, 0xf8, 0x8e, 0x23, 0x7d, 0x95, 0x28, 0x2d, 0xa3, 0x79, 0x8c, 0x8a, 0xbc, 0x8b, 0x9a, 0x62,
	0x38, 0x23, 0xcc, 0x3c, 0x3d, 0x72, 0xaf, 0x11, 0xd8, 0x54, 0x8e, 0x93, 0xc2, 0xec, 0xc5, 0xc8,
	0xb9, 0x0c, 0x73, 0x91, 0x2c, 0xea, 0xda, 0xe1, 0xdb, 0xe3, 0x48, 0xe6, 0xf5, 0x7c, 0x17, 0x1c,
	0xd4, 0xd7, 0xea, 0x78, 0x9d, 0x8d, 0x45, 0xb2, 0x5a, 0xbf, 0xbb, 0xb0, 0x52, 0x05, 0x9b, 0xba,
	0xbd, 0x45, 0xf0, 0xa5, 0x12, 0xdc, 0xd4, 0xab, 0x03, 0xcd, 0x48, 0x96, 0xbd, 0x7c, 0x9b, 0x90,
	0x73, 0x91, 0x2c, 0x3c, 0x7c, 0x07, 0x96, 0x5e, 0xfa, 0x61, 0x6d, 0x85, 0xe5, 0x37, 0x27, 0x8b,
	0x2f, 0xfd, 0xb0, 0xb2, 0xae, 0x5e, 0x81, 0xb9, 0x97, 0x7e, 0xe8, 0x07, 0xdf, 0x31, 0x8a, 0xdf,
	0x9a, 0x00, 0x8b, 0x08, 0x70, 0x13, 0x5a, 0x68, 0x0c, 0x17, 0x14, 0x6f, 0xe0, 0x47, 0xf1, 0x38,
	0x13, 0xe6, 0x45, 0xc9, 0xc2, 0x4b, 0x3f, 0xc4, 0x65, 0xe4, 0x0b, 0x96, 0x3a, 0xb7, 0xb8, 0x58,
	0x3f, 0xf0, 0xbe, 0x53, 0x16, 0x7a, 0xcb, 0x42, 0x77, 0x82, 0x5f, 0xa8, 0x1c, 0x7a, 0x0d, 0xe6,
	0xc9, 0xe8, 0x58, 0xa5, 0x22, 0x09, 0x95, 0x79, 0x23, 0x82, 0x9e, 0x1c, 0x18, 0x91, 0x71, 0xcc,
	0xcb, 0x84, 0x1a, 0x8f, 0x84, 0x72, 0xdf, 0xb5, 0x8e, 0xf5, 0x58, 0xe2, 0xbc, 0x05, 0x0b, 0xd6,
	0x31, 0xdc, 0x98, 0x2a, 0xf7, 0x36, 0x5f, 0xf5, 0x1b, 0xb7, 0x70, 0x67, 0x4a, 0xf7, 0x46, 0x95,
	0xb6, 0xb0, 0xf3, 0xfd, 0x1d, 0x1e, 0x0b, 0xa5, 0xf6, 0xb0, 0xd3, 0xfc, 0x75, 0x68, 0x22, 0xa7,
	0xc8, 0xc1, 0xb6, 0xad, 0xe1, 0x22, 0xe9, 0x7a, 0x17, 0x9c, 0xa2, 0xb6, 0xd6, 0xea, 0x5d, 0xdb,
	0xca, 0x58, 0xdd, 0xf2, 0x6b, 0x09, 0x04, 0x63, 0x88, 0x71, 0x88, 0x59, 0xf8, 0x7b, 0x3c, 0x88,
	0x5f, 0xfa, 0xe1, 0x0b, 0x56, 0x59, 0x86, 0xa9, 0x1d, 0xce, 0x0b, 0xa6, 0x76, 0xef, 0x5b, 0x27,
	0x76, 0x93, 0x48, 0x73, 0xed, 0xb8, 0x1d, 0xa5, 0x54, 0x06, 0x73, 0xcf, 0xb6, 0xa3, 0x94, 0x8a,
	0x21, 0xc6, 0x90, 0xdd, 0xbf, 0x2b, 0xf7, 0xbe, 0x35, 0x94, 0x6f, 0xe0, 0x55, 0xde, 0x65, 0x4a,
	0x0e, 0x1e, 0x85, 0xee, 0x03, 0x5b, 0x99, 0xc2, 0xbb, 0x23, 0x9a, 0x92, 0x70, 0x15, 0xe0, 0x63,
	0x49, 0xa1, 0x04, 0xfe, 0xf5, 0x95, 0x4c, 0xdc, 0x87, 0x5c, 0x9b, 0x44, 0x65, 0xcf, 0x7c, 0xa5,
	0x7b, 0xa8, 0xea, 0x91, 0x06, 0x3b, 0x51, 0x26, 0xc2, 0x40, 0x26, 0xb4, 0x7e, 0x64, 0xc2, 0x0f,
	0x4f, 0xdc, 0x2e, 0x9f, 0x33, 0xb2, 0x7c, 0x4f, 0x65, 0x3d, 0x94, 0xa2, 0x23, 0x06, 0x49, 0x33,
	0x2b, 0x0f, 0xdb, 0x0f, 0xcc, 0xeb, 0x3f, 0x52, 0xd0, 0xb4, 0x4a, 0xa3, 0xf6, 0x26, 0xb4, 0x4a,
	0x4b, 0x1a, 0xcf, 0xc4, 0x1f, 0x72, 0x7f, 0xb3, 0x4b, 0x03, 0x4f, 0xc2, 0x77, 0x61, 0xa5, 0xba,
	0x16, 0x18, 0xf4, 0x47, 0x9c, 0x31, 0x94, 0x67, 0x7e, 0x26, 0x3c, 0x82, 0x75, 0x7e, 0xb4, 0x25,
	0xc7, 0x9a, 0xd6, 0x35, 0x5c, 0x97, 0xf9, 0x5e, 0x49, 0xb9, 0x8f, 0x78, 0x93, 0x40, 0x80, 0xaf,
	0x0b, 0xfd, 0x3e, 0xab, 0x9d, 0x3d, 0x78, 0x8b, 0xb9, 0xc5, 0x73, 0x1c, 0x4c, 0x13, 0xbc, 0x54,
	0x54, 0xcd, 0xfc, 0x94, 0x97, 0x1d, 0xc2, 0xda, 0x77, 0x39, 0x98, 0x2a, 0xec, 0x8b, 0x8a, 0xbd,
	0xbf, 0x6c, 0xc0, 0xd2, 0xc4, 0xe5, 0x97, 0xfb, 0x31, 0x6d, 0xc9, 0xe4, 0xd9, 0x6e, 0xc9, 0x26,
	0xae, 0xdc, 0x7a, 0x8b, 0xa5, 0xcb, 0xb5, 0xdd, 0x64, 0x20, 0x9d, 0x5f, 0x37, 0x80, 0xde, 0x40,
	0x60, 0x36, 0xc3, 0xe7, 0xcb, 0xee, 0x27, 0x74, 0xd8, 0x26, 0xcf, 0x7e, 0xb7, 0x58, 0xb9, 0xd5,
	0xea, 0x35, 0x8d, 0x1b, 0x07, 0xe4, 0x45, 0xee, 0x58, 0xb7, 0xe4, 0xd8, 0xa7, 0x3f, 0x9e, 0x63,
	0xdd, 0xc2, 0xb1, 0xef, 0x1b, 0xd0, 0xd4, 0xa2, 0x74, 0x00, 0xe8, 0xfe, 0x8c, 0xfc, 0xca, 0xce,
	0xde, 0xaf, 0xfa, 0x05, 0x40, 0x6f, 0x5e, 0x8b, 0xe2, 0xa4, 0xd1, 0xf9, 0x08, 0xd6, 0xb5, 0x48,
	0xef, 0xa5, 0x9e, 0x3f, 0xd6, 0xd2, 0xb3, 0x4f, 0x8a, 0xfd, 0x7e, 0x2c, 0x42, 0xf7, 0x33, 0x1a,
	0xaf, 0x6d, 0x02, 0xec, 0x8c, 0xb5, 0x7c, 0x61, 0x9e, 0x15, 0x93, 0xd6, 0xf9, 0x8b, 0x06, 0x2c,
	0xc4, 0x2a, 0x2c, 0xd7, 0x6a, 0xe7, 0x47, 0xab, 0x55, 0x33, 0x56, 0x61, 0xa9, 0x5a, 0x7f, 0xda,
	0x80, 0x0b, 0x7c, 0xa0, 0xe5, 0x7e, 0xfe, 0xba, 0x7c, 0xaa, 0x1f, 0xa0, 0xf5, 0xde, 0x0c, 0xd5,
	0x5e, 0x1a, 0x63, 0xf0, 0x17, 0xaa, 0x87, 0x17, 0xee, 0x63, 0x1a, 0xc9, 0xe9, 0xd9, 0x5e, 0xb7,
	0x4f, 0x9e, 0x97, 0xf4, 0xe8, 0xac, 0xec, 0x79, 0x2e, 0xeb, 0xfc, 0x6e, 0x66, 0xca, 0x19, 0x85,
	0x79, 0x8e, 0xd8, 0x8a, 0x53, 0xad, 0xe8, 0x7d, 0xb1, 0xb9, 0x18, 0x31, 0xc7, 0x12, 0x4d, 0x94,
	0x1f, 0x08, 0xcd, 0xb7, 0x14, 0xce, 0x16, 0x00, 0x01, 0x39, 0x6b, 0xe4, 0x53, 0x87, 0x8b, 0x28,
	0xe1, 0x4c, 0xf1, 0x3d, 0x58, 0xc1, 0xa9, 0xdf, 0xd3, 0x87, 0x99, 0xd4, 0x3a, 0x16, 0xd5, 0x53,
	0x06, 0x07, 0x75, 0x2f, 0x72, 0x15, 0x9f, 0x33, 0x7c, 0x00, 0x6e, 0x2c, 0x8f, 0x2d, 0x21, 0xa4,
	0xa5, 0xc3, 0xb0, 0xce, 0x9b, 0xc3, 0x72, 0x79, 0x9c, 0x93, 0x42, 0x5c, 0x42, 0x98, 0xf8, 0x11,
	0xac, 0x1f, 0x46, 0xc3, 0xc3, 0xe9, 0x4c, 0x73, 0x2d, 0x8a, 0x80, 0x29, 0x54, 0x5a, 0xab, 0x10,
	0x8b, 0x3e, 0x57, 0xee, 0x4a, 0x16, 0x50, 0x4e, 0x55, 0xb1, 0xa7, 0x20, 0x84, 0xb4, 0xc9, 0x45,
	0xf9, 0xc5, 0xe1, 0x12, 0xaa, 0xf2, 0xd4, 0xc2, 0xbe, 0x04, 0x0e, 0x7d, 0xed, 0x9b, 0xc3, 0x07,
	0xd4, 0x9b, 0xd3, 0x82, 0x26, 0x8a, 0x69, 0xab, 0x8a, 0x6e, 0xd0, 0x41, 0xa7, 0x64, 0x87, 0xa9,
	0xad, 0xf9, 0x14, 0x00, 0x22, 0x89, 0xda, 0x3c, 0x5f, 0x3d, 0xce, 0x22, 0x9c, 0x44, 0x4a, 0x4e,
	0xf2, 0x36, 0x7f, 0x91, 0x14, 0x25, 0x2f, 0x6f, 0x83, 0x53, 0x2a, 0x15, 0xb5, 0x5a, 0x24, 0x66,
	0x43, 0xdf, 0xb2, 0x05, 0x7f, 0xcb, 0x72, 0x93, 0x5f, 0xb2, 0x71, 0x2a, 0x9c, 0x77, 0xef, 0x73,
	0x91, 0x44, 0x04, 0xaf, 0xbb, 0x3f, 0x85, 0x0d, 0x06, 0xa8, 0x71, 0x9f, 0x4f, 0xeb, 0xcb, 0x6e,
	0xf0, 0xce, 0x7d, 0x8d, 0x10, 0x07, 0x06, 0x50, 0x72, 0x67, 0x07, 0xb6, 0x6a, 0xe4, 0x5a, 0xf3,
	0xf1, 0x2e, 0x7e, 0xa3, 0xc2, 0xaf, 0xb6, 0xe3, 0x6d, 0x70, 0x2c, 0x39, 0x8e, 0x14, 0x9f, 0xc2,
	0x99, 0x0d, 0x7c, 0x2b, 0xd7, 0x3c, 0x8b, 0x14, 0x1d, 0xc0, 0x39, 0x0f, 0x81, 0x7d, 0xf1, 0x5e,
	0x8e, 0xc5, 0xb8, 0xda, 0x62, 0xbc, 0x55, 0x5f, 0x21, 0xf5, 0xff, 0x43, 0x6d, 0xc9, 0x4f, 0x5b,
	0x49, 0xa6, 0xd5, 0x9c, 0x5c, 0x2a, 0x55, 0x92, 0x98, 0x55, 0x0f, 0x6f, 0x42, 0xab, 0x4c, 0x26,
	0xff, 0xf8, 0xab, 0x89, 0x85, 0x82, 0x42, 0xde, 0x75, 0x61, 0x2d, 0x4a, 0xfa, 0x72, 0x9c, 0x84,
	0x5e, 0xed, 0x3d, 0xad, 0xf9, 0x7c, 0x62, 0xd5, 0xa8, 0x7f, 0x59, 0x79, 0x51, 0xeb, 0xfc, 0x0c,
	0x2e, 0x9d, 0xc2, 0xcb, 0xf7, 0xe4, 0x74, 0xa0, 0x36, 0x95, 0x8c, 0x05, 0x77, 0xfe, 0xfa, 0x0d,
	0x58, 0x9a, 0x18, 0xee, 0xce, 0x9f, 0x34, 0xe0, 0xc2, 0x30, 0x96, 0x7d, 0x3f, 0xa6, 0x11, 0x7e,
	0xd6, 0xaf, 0xc5, 0x26, 0xce, 0x43, 0x7b, 0xa6, 0x74, 0xe7, 0x8f, 0x1a, 0x70, 0xee, 0x28, 0x1b,
	0x98, 0xa7, 0x3a, 0xaf, 0xd1, 0x0b, 0x9c, 0xf1, 0x7a, 0x58, 0x74, 0xe7, 0x1f, 0xce, 0xc3, 0xca,
	0xb4, 0x8f, 0xdd, 0x9c, 0x5b, 0xd0, 0xaa, 0x7f, 0x8d, 0x66, 0x32, 0xef, 0xc5, 0xda, 0x87, 0x68,
	0x95, 0xb7, 0x3e, 0xf7, 0x2b, 0x6f, 0x7d, 0x70, 0xb2, 0x44, 0x15, 0xa5, 0x7f, 0x8a, 0x72, 0xed,
	0xd9, 0xde, 0xc5, 0xa3, 0x6c, 0x40, 0xcf, 0xf1, 0x55, 0x39, 0x12, 0x0f, 0x5f, 0x47, 0x1b, 0xd4,
	0xbf, 0xb9, 0x9b, 0x88, 0x44, 0xf7, 0x75, 0x7b, 0x61, 0x23, 0xe1, 0xfc, 0xa6, 0x01, 0x6d, 0x0c,
	0x92, 0xcc, 0x46, 0x64, 0xc7, 0x5e, 0x9c, 0x28, 0xda, 0x1a, 0xcc, 0xdd, 0xfb, 0xc3, 0xd7, 0xd7,
	0x3f, 0x7a, 0xab, 0x25, 0x4f, 0xec, 0x95, 0x89, 0xea, 0x5f, 0xa0, 0x2f, 0x2f, 0xef, 0xff, 0x77,
	0x00, 0x00, 0x00, 0xff, 0xff, 0xd2, 0x6c, 0xb6, 0xd1, 0x97, 0x39, 0x00, 0x00,
}
