/*
Copyright 2019 Cisco Systems

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: mdt_grpc_dialin/mdt_grpc_dialin.proto

package IOSXRExtensibleManagabilityService

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type CommitResult int32

const (
	CommitResult_CHANGE    CommitResult = 0
	CommitResult_NO_CHANGE CommitResult = 1
	CommitResult_FAIL      CommitResult = 2
)

var CommitResult_name = map[int32]string{
	0: "CHANGE",
	1: "NO_CHANGE",
	2: "FAIL",
}

var CommitResult_value = map[string]int32{
	"CHANGE":    0,
	"NO_CHANGE": 1,
	"FAIL":      2,
}

func (x CommitResult) String() string {
	return proto.EnumName(CommitResult_name, int32(x))
}

func (CommitResult) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_b8a8729ecb383e31, []int{0}
}

type ConfigGetArgs struct {
	ReqId                int64    `protobuf:"varint,1,opt,name=ReqId,proto3" json:"ReqId,omitempty"`
	Yangpathjson         string   `protobuf:"bytes,2,opt,name=yangpathjson,proto3" json:"yangpathjson,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ConfigGetArgs) Reset()         { *m = ConfigGetArgs{} }
func (m *ConfigGetArgs) String() string { return proto.CompactTextString(m) }
func (*ConfigGetArgs) ProtoMessage()    {}
func (*ConfigGetArgs) Descriptor() ([]byte, []int) {
	return fileDescriptor_b8a8729ecb383e31, []int{0}
}

func (m *ConfigGetArgs) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConfigGetArgs.Unmarshal(m, b)
}
func (m *ConfigGetArgs) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConfigGetArgs.Marshal(b, m, deterministic)
}
func (m *ConfigGetArgs) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConfigGetArgs.Merge(m, src)
}
func (m *ConfigGetArgs) XXX_Size() int {
	return xxx_messageInfo_ConfigGetArgs.Size(m)
}
func (m *ConfigGetArgs) XXX_DiscardUnknown() {
	xxx_messageInfo_ConfigGetArgs.DiscardUnknown(m)
}

var xxx_messageInfo_ConfigGetArgs proto.InternalMessageInfo

func (m *ConfigGetArgs) GetReqId() int64 {
	if m != nil {
		return m.ReqId
	}
	return 0
}

func (m *ConfigGetArgs) GetYangpathjson() string {
	if m != nil {
		return m.Yangpathjson
	}
	return ""
}

type ConfigGetReply struct {
	ResReqId             int64    `protobuf:"varint,1,opt,name=ResReqId,proto3" json:"ResReqId,omitempty"`
	Yangjson             string   `protobuf:"bytes,2,opt,name=yangjson,proto3" json:"yangjson,omitempty"`
	Errors               string   `protobuf:"bytes,3,opt,name=errors,proto3" json:"errors,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ConfigGetReply) Reset()         { *m = ConfigGetReply{} }
func (m *ConfigGetReply) String() string { return proto.CompactTextString(m) }
func (*ConfigGetReply) ProtoMessage()    {}
func (*ConfigGetReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_b8a8729ecb383e31, []int{1}
}

func (m *ConfigGetReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConfigGetReply.Unmarshal(m, b)
}
func (m *ConfigGetReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConfigGetReply.Marshal(b, m, deterministic)
}
func (m *ConfigGetReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConfigGetReply.Merge(m, src)
}
func (m *ConfigGetReply) XXX_Size() int {
	return xxx_messageInfo_ConfigGetReply.Size(m)
}
func (m *ConfigGetReply) XXX_DiscardUnknown() {
	xxx_messageInfo_ConfigGetReply.DiscardUnknown(m)
}

var xxx_messageInfo_ConfigGetReply proto.InternalMessageInfo

func (m *ConfigGetReply) GetResReqId() int64 {
	if m != nil {
		return m.ResReqId
	}
	return 0
}

func (m *ConfigGetReply) GetYangjson() string {
	if m != nil {
		return m.Yangjson
	}
	return ""
}

func (m *ConfigGetReply) GetErrors() string {
	if m != nil {
		return m.Errors
	}
	return ""
}

type GetOperArgs struct {
	ReqId                int64    `protobuf:"varint,1,opt,name=ReqId,proto3" json:"ReqId,omitempty"`
	Yangpathjson         string   `protobuf:"bytes,2,opt,name=yangpathjson,proto3" json:"yangpathjson,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetOperArgs) Reset()         { *m = GetOperArgs{} }
func (m *GetOperArgs) String() string { return proto.CompactTextString(m) }
func (*GetOperArgs) ProtoMessage()    {}
func (*GetOperArgs) Descriptor() ([]byte, []int) {
	return fileDescriptor_b8a8729ecb383e31, []int{2}
}

func (m *GetOperArgs) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetOperArgs.Unmarshal(m, b)
}
func (m *GetOperArgs) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetOperArgs.Marshal(b, m, deterministic)
}
func (m *GetOperArgs) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetOperArgs.Merge(m, src)
}
func (m *GetOperArgs) XXX_Size() int {
	return xxx_messageInfo_GetOperArgs.Size(m)
}
func (m *GetOperArgs) XXX_DiscardUnknown() {
	xxx_messageInfo_GetOperArgs.DiscardUnknown(m)
}

var xxx_messageInfo_GetOperArgs proto.InternalMessageInfo

func (m *GetOperArgs) GetReqId() int64 {
	if m != nil {
		return m.ReqId
	}
	return 0
}

func (m *GetOperArgs) GetYangpathjson() string {
	if m != nil {
		return m.Yangpathjson
	}
	return ""
}

type GetOperReply struct {
	ResReqId             int64    `protobuf:"varint,1,opt,name=ResReqId,proto3" json:"ResReqId,omitempty"`
	Yangjson             string   `protobuf:"bytes,2,opt,name=yangjson,proto3" json:"yangjson,omitempty"`
	Errors               string   `protobuf:"bytes,3,opt,name=errors,proto3" json:"errors,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetOperReply) Reset()         { *m = GetOperReply{} }
func (m *GetOperReply) String() string { return proto.CompactTextString(m) }
func (*GetOperReply) ProtoMessage()    {}
func (*GetOperReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_b8a8729ecb383e31, []int{3}
}

func (m *GetOperReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetOperReply.Unmarshal(m, b)
}
func (m *GetOperReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetOperReply.Marshal(b, m, deterministic)
}
func (m *GetOperReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetOperReply.Merge(m, src)
}
func (m *GetOperReply) XXX_Size() int {
	return xxx_messageInfo_GetOperReply.Size(m)
}
func (m *GetOperReply) XXX_DiscardUnknown() {
	xxx_messageInfo_GetOperReply.DiscardUnknown(m)
}

var xxx_messageInfo_GetOperReply proto.InternalMessageInfo

func (m *GetOperReply) GetResReqId() int64 {
	if m != nil {
		return m.ResReqId
	}
	return 0
}

func (m *GetOperReply) GetYangjson() string {
	if m != nil {
		return m.Yangjson
	}
	return ""
}

func (m *GetOperReply) GetErrors() string {
	if m != nil {
		return m.Errors
	}
	return ""
}

type ConfigArgs struct {
	ReqId                int64    `protobuf:"varint,1,opt,name=ReqId,proto3" json:"ReqId,omitempty"`
	Yangjson             string   `protobuf:"bytes,2,opt,name=yangjson,proto3" json:"yangjson,omitempty"`
	Confirmed            bool     `protobuf:"varint,3,opt,name=Confirmed,proto3" json:"Confirmed,omitempty"`
	ConfirmTimeout       uint32   `protobuf:"varint,4,opt,name=ConfirmTimeout,proto3" json:"ConfirmTimeout,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ConfigArgs) Reset()         { *m = ConfigArgs{} }
func (m *ConfigArgs) String() string { return proto.CompactTextString(m) }
func (*ConfigArgs) ProtoMessage()    {}
func (*ConfigArgs) Descriptor() ([]byte, []int) {
	return fileDescriptor_b8a8729ecb383e31, []int{4}
}

func (m *ConfigArgs) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConfigArgs.Unmarshal(m, b)
}
func (m *ConfigArgs) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConfigArgs.Marshal(b, m, deterministic)
}
func (m *ConfigArgs) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConfigArgs.Merge(m, src)
}
func (m *ConfigArgs) XXX_Size() int {
	return xxx_messageInfo_ConfigArgs.Size(m)
}
func (m *ConfigArgs) XXX_DiscardUnknown() {
	xxx_messageInfo_ConfigArgs.DiscardUnknown(m)
}

var xxx_messageInfo_ConfigArgs proto.InternalMessageInfo

func (m *ConfigArgs) GetReqId() int64 {
	if m != nil {
		return m.ReqId
	}
	return 0
}

func (m *ConfigArgs) GetYangjson() string {
	if m != nil {
		return m.Yangjson
	}
	return ""
}

func (m *ConfigArgs) GetConfirmed() bool {
	if m != nil {
		return m.Confirmed
	}
	return false
}

func (m *ConfigArgs) GetConfirmTimeout() uint32 {
	if m != nil {
		return m.ConfirmTimeout
	}
	return 0
}

type ConfigReply struct {
	ResReqId             int64    `protobuf:"varint,1,opt,name=ResReqId,proto3" json:"ResReqId,omitempty"`
	Errors               string   `protobuf:"bytes,2,opt,name=errors,proto3" json:"errors,omitempty"`
	CommitID             uint32   `protobuf:"varint,3,opt,name=CommitID,proto3" json:"CommitID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ConfigReply) Reset()         { *m = ConfigReply{} }
func (m *ConfigReply) String() string { return proto.CompactTextString(m) }
func (*ConfigReply) ProtoMessage()    {}
func (*ConfigReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_b8a8729ecb383e31, []int{5}
}

func (m *ConfigReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConfigReply.Unmarshal(m, b)
}
func (m *ConfigReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConfigReply.Marshal(b, m, deterministic)
}
func (m *ConfigReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConfigReply.Merge(m, src)
}
func (m *ConfigReply) XXX_Size() int {
	return xxx_messageInfo_ConfigReply.Size(m)
}
func (m *ConfigReply) XXX_DiscardUnknown() {
	xxx_messageInfo_ConfigReply.DiscardUnknown(m)
}

var xxx_messageInfo_ConfigReply proto.InternalMessageInfo

func (m *ConfigReply) GetResReqId() int64 {
	if m != nil {
		return m.ResReqId
	}
	return 0
}

func (m *ConfigReply) GetErrors() string {
	if m != nil {
		return m.Errors
	}
	return ""
}

func (m *ConfigReply) GetCommitID() uint32 {
	if m != nil {
		return m.CommitID
	}
	return 0
}

type CliConfigArgs struct {
	ReqId                int64    `protobuf:"varint,1,opt,name=ReqId,proto3" json:"ReqId,omitempty"`
	Cli                  string   `protobuf:"bytes,2,opt,name=cli,proto3" json:"cli,omitempty"`
	Confirmed            bool     `protobuf:"varint,3,opt,name=Confirmed,proto3" json:"Confirmed,omitempty"`
	ConfirmTimeout       uint32   `protobuf:"varint,4,opt,name=ConfirmTimeout,proto3" json:"ConfirmTimeout,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CliConfigArgs) Reset()         { *m = CliConfigArgs{} }
func (m *CliConfigArgs) String() string { return proto.CompactTextString(m) }
func (*CliConfigArgs) ProtoMessage()    {}
func (*CliConfigArgs) Descriptor() ([]byte, []int) {
	return fileDescriptor_b8a8729ecb383e31, []int{6}
}

func (m *CliConfigArgs) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CliConfigArgs.Unmarshal(m, b)
}
func (m *CliConfigArgs) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CliConfigArgs.Marshal(b, m, deterministic)
}
func (m *CliConfigArgs) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CliConfigArgs.Merge(m, src)
}
func (m *CliConfigArgs) XXX_Size() int {
	return xxx_messageInfo_CliConfigArgs.Size(m)
}
func (m *CliConfigArgs) XXX_DiscardUnknown() {
	xxx_messageInfo_CliConfigArgs.DiscardUnknown(m)
}

var xxx_messageInfo_CliConfigArgs proto.InternalMessageInfo

func (m *CliConfigArgs) GetReqId() int64 {
	if m != nil {
		return m.ReqId
	}
	return 0
}

func (m *CliConfigArgs) GetCli() string {
	if m != nil {
		return m.Cli
	}
	return ""
}

func (m *CliConfigArgs) GetConfirmed() bool {
	if m != nil {
		return m.Confirmed
	}
	return false
}

func (m *CliConfigArgs) GetConfirmTimeout() uint32 {
	if m != nil {
		return m.ConfirmTimeout
	}
	return 0
}

type CliConfigReply struct {
	ResReqId             int64    `protobuf:"varint,1,opt,name=ResReqId,proto3" json:"ResReqId,omitempty"`
	Errors               string   `protobuf:"bytes,2,opt,name=errors,proto3" json:"errors,omitempty"`
	CommitID             uint32   `protobuf:"varint,3,opt,name=CommitID,proto3" json:"CommitID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CliConfigReply) Reset()         { *m = CliConfigReply{} }
func (m *CliConfigReply) String() string { return proto.CompactTextString(m) }
func (*CliConfigReply) ProtoMessage()    {}
func (*CliConfigReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_b8a8729ecb383e31, []int{7}
}

func (m *CliConfigReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CliConfigReply.Unmarshal(m, b)
}
func (m *CliConfigReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CliConfigReply.Marshal(b, m, deterministic)
}
func (m *CliConfigReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CliConfigReply.Merge(m, src)
}
func (m *CliConfigReply) XXX_Size() int {
	return xxx_messageInfo_CliConfigReply.Size(m)
}
func (m *CliConfigReply) XXX_DiscardUnknown() {
	xxx_messageInfo_CliConfigReply.DiscardUnknown(m)
}

var xxx_messageInfo_CliConfigReply proto.InternalMessageInfo

func (m *CliConfigReply) GetResReqId() int64 {
	if m != nil {
		return m.ResReqId
	}
	return 0
}

func (m *CliConfigReply) GetErrors() string {
	if m != nil {
		return m.Errors
	}
	return ""
}

func (m *CliConfigReply) GetCommitID() uint32 {
	if m != nil {
		return m.CommitID
	}
	return 0
}

type CommitReplaceArgs struct {
	ReqId                int64    `protobuf:"varint,1,opt,name=ReqId,proto3" json:"ReqId,omitempty"`
	Cli                  string   `protobuf:"bytes,2,opt,name=cli,proto3" json:"cli,omitempty"`
	Yangjson             string   `protobuf:"bytes,3,opt,name=yangjson,proto3" json:"yangjson,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CommitReplaceArgs) Reset()         { *m = CommitReplaceArgs{} }
func (m *CommitReplaceArgs) String() string { return proto.CompactTextString(m) }
func (*CommitReplaceArgs) ProtoMessage()    {}
func (*CommitReplaceArgs) Descriptor() ([]byte, []int) {
	return fileDescriptor_b8a8729ecb383e31, []int{8}
}

func (m *CommitReplaceArgs) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CommitReplaceArgs.Unmarshal(m, b)
}
func (m *CommitReplaceArgs) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CommitReplaceArgs.Marshal(b, m, deterministic)
}
func (m *CommitReplaceArgs) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CommitReplaceArgs.Merge(m, src)
}
func (m *CommitReplaceArgs) XXX_Size() int {
	return xxx_messageInfo_CommitReplaceArgs.Size(m)
}
func (m *CommitReplaceArgs) XXX_DiscardUnknown() {
	xxx_messageInfo_CommitReplaceArgs.DiscardUnknown(m)
}

var xxx_messageInfo_CommitReplaceArgs proto.InternalMessageInfo

func (m *CommitReplaceArgs) GetReqId() int64 {
	if m != nil {
		return m.ReqId
	}
	return 0
}

func (m *CommitReplaceArgs) GetCli() string {
	if m != nil {
		return m.Cli
	}
	return ""
}

func (m *CommitReplaceArgs) GetYangjson() string {
	if m != nil {
		return m.Yangjson
	}
	return ""
}

type CommitReplaceReply struct {
	ResReqId             int64    `protobuf:"varint,1,opt,name=ResReqId,proto3" json:"ResReqId,omitempty"`
	Errors               string   `protobuf:"bytes,2,opt,name=errors,proto3" json:"errors,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CommitReplaceReply) Reset()         { *m = CommitReplaceReply{} }
func (m *CommitReplaceReply) String() string { return proto.CompactTextString(m) }
func (*CommitReplaceReply) ProtoMessage()    {}
func (*CommitReplaceReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_b8a8729ecb383e31, []int{9}
}

func (m *CommitReplaceReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CommitReplaceReply.Unmarshal(m, b)
}
func (m *CommitReplaceReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CommitReplaceReply.Marshal(b, m, deterministic)
}
func (m *CommitReplaceReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CommitReplaceReply.Merge(m, src)
}
func (m *CommitReplaceReply) XXX_Size() int {
	return xxx_messageInfo_CommitReplaceReply.Size(m)
}
func (m *CommitReplaceReply) XXX_DiscardUnknown() {
	xxx_messageInfo_CommitReplaceReply.DiscardUnknown(m)
}

var xxx_messageInfo_CommitReplaceReply proto.InternalMessageInfo

func (m *CommitReplaceReply) GetResReqId() int64 {
	if m != nil {
		return m.ResReqId
	}
	return 0
}

func (m *CommitReplaceReply) GetErrors() string {
	if m != nil {
		return m.Errors
	}
	return ""
}

type CommitMsg struct {
	Label                string   `protobuf:"bytes,1,opt,name=label,proto3" json:"label,omitempty"`
	Comment              string   `protobuf:"bytes,2,opt,name=comment,proto3" json:"comment,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CommitMsg) Reset()         { *m = CommitMsg{} }
func (m *CommitMsg) String() string { return proto.CompactTextString(m) }
func (*CommitMsg) ProtoMessage()    {}
func (*CommitMsg) Descriptor() ([]byte, []int) {
	return fileDescriptor_b8a8729ecb383e31, []int{10}
}

func (m *CommitMsg) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CommitMsg.Unmarshal(m, b)
}
func (m *CommitMsg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CommitMsg.Marshal(b, m, deterministic)
}
func (m *CommitMsg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CommitMsg.Merge(m, src)
}
func (m *CommitMsg) XXX_Size() int {
	return xxx_messageInfo_CommitMsg.Size(m)
}
func (m *CommitMsg) XXX_DiscardUnknown() {
	xxx_messageInfo_CommitMsg.DiscardUnknown(m)
}

var xxx_messageInfo_CommitMsg proto.InternalMessageInfo

func (m *CommitMsg) GetLabel() string {
	if m != nil {
		return m.Label
	}
	return ""
}

func (m *CommitMsg) GetComment() string {
	if m != nil {
		return m.Comment
	}
	return ""
}

type CommitArgs struct {
	ReqId                int64    `protobuf:"varint,1,opt,name=ReqId,proto3" json:"ReqId,omitempty"`
	CommitID             uint32   `protobuf:"varint,2,opt,name=CommitID,proto3" json:"CommitID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CommitArgs) Reset()         { *m = CommitArgs{} }
func (m *CommitArgs) String() string { return proto.CompactTextString(m) }
func (*CommitArgs) ProtoMessage()    {}
func (*CommitArgs) Descriptor() ([]byte, []int) {
	return fileDescriptor_b8a8729ecb383e31, []int{11}
}

func (m *CommitArgs) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CommitArgs.Unmarshal(m, b)
}
func (m *CommitArgs) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CommitArgs.Marshal(b, m, deterministic)
}
func (m *CommitArgs) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CommitArgs.Merge(m, src)
}
func (m *CommitArgs) XXX_Size() int {
	return xxx_messageInfo_CommitArgs.Size(m)
}
func (m *CommitArgs) XXX_DiscardUnknown() {
	xxx_messageInfo_CommitArgs.DiscardUnknown(m)
}

var xxx_messageInfo_CommitArgs proto.InternalMessageInfo

func (m *CommitArgs) GetReqId() int64 {
	if m != nil {
		return m.ReqId
	}
	return 0
}

func (m *CommitArgs) GetCommitID() uint32 {
	if m != nil {
		return m.CommitID
	}
	return 0
}

type CommitReply struct {
	ResReqId             int64    `protobuf:"varint,1,opt,name=ResReqId,proto3" json:"ResReqId,omitempty"`
	Errors               string   `protobuf:"bytes,2,opt,name=errors,proto3" json:"errors,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CommitReply) Reset()         { *m = CommitReply{} }
func (m *CommitReply) String() string { return proto.CompactTextString(m) }
func (*CommitReply) ProtoMessage()    {}
func (*CommitReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_b8a8729ecb383e31, []int{12}
}

func (m *CommitReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CommitReply.Unmarshal(m, b)
}
func (m *CommitReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CommitReply.Marshal(b, m, deterministic)
}
func (m *CommitReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CommitReply.Merge(m, src)
}
func (m *CommitReply) XXX_Size() int {
	return xxx_messageInfo_CommitReply.Size(m)
}
func (m *CommitReply) XXX_DiscardUnknown() {
	xxx_messageInfo_CommitReply.DiscardUnknown(m)
}

var xxx_messageInfo_CommitReply proto.InternalMessageInfo

func (m *CommitReply) GetResReqId() int64 {
	if m != nil {
		return m.ResReqId
	}
	return 0
}

func (m *CommitReply) GetErrors() string {
	if m != nil {
		return m.Errors
	}
	return ""
}

type DiscardChangesArgs struct {
	ReqId                int64    `protobuf:"varint,1,opt,name=ReqId,proto3" json:"ReqId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DiscardChangesArgs) Reset()         { *m = DiscardChangesArgs{} }
func (m *DiscardChangesArgs) String() string { return proto.CompactTextString(m) }
func (*DiscardChangesArgs) ProtoMessage()    {}
func (*DiscardChangesArgs) Descriptor() ([]byte, []int) {
	return fileDescriptor_b8a8729ecb383e31, []int{13}
}

func (m *DiscardChangesArgs) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DiscardChangesArgs.Unmarshal(m, b)
}
func (m *DiscardChangesArgs) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DiscardChangesArgs.Marshal(b, m, deterministic)
}
func (m *DiscardChangesArgs) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DiscardChangesArgs.Merge(m, src)
}
func (m *DiscardChangesArgs) XXX_Size() int {
	return xxx_messageInfo_DiscardChangesArgs.Size(m)
}
func (m *DiscardChangesArgs) XXX_DiscardUnknown() {
	xxx_messageInfo_DiscardChangesArgs.DiscardUnknown(m)
}

var xxx_messageInfo_DiscardChangesArgs proto.InternalMessageInfo

func (m *DiscardChangesArgs) GetReqId() int64 {
	if m != nil {
		return m.ReqId
	}
	return 0
}

type DiscardChangesReply struct {
	ResReqId             int64    `protobuf:"varint,1,opt,name=ResReqId,proto3" json:"ResReqId,omitempty"`
	Errors               string   `protobuf:"bytes,2,opt,name=errors,proto3" json:"errors,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DiscardChangesReply) Reset()         { *m = DiscardChangesReply{} }
func (m *DiscardChangesReply) String() string { return proto.CompactTextString(m) }
func (*DiscardChangesReply) ProtoMessage()    {}
func (*DiscardChangesReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_b8a8729ecb383e31, []int{14}
}

func (m *DiscardChangesReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DiscardChangesReply.Unmarshal(m, b)
}
func (m *DiscardChangesReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DiscardChangesReply.Marshal(b, m, deterministic)
}
func (m *DiscardChangesReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DiscardChangesReply.Merge(m, src)
}
func (m *DiscardChangesReply) XXX_Size() int {
	return xxx_messageInfo_DiscardChangesReply.Size(m)
}
func (m *DiscardChangesReply) XXX_DiscardUnknown() {
	xxx_messageInfo_DiscardChangesReply.DiscardUnknown(m)
}

var xxx_messageInfo_DiscardChangesReply proto.InternalMessageInfo

func (m *DiscardChangesReply) GetResReqId() int64 {
	if m != nil {
		return m.ResReqId
	}
	return 0
}

func (m *DiscardChangesReply) GetErrors() string {
	if m != nil {
		return m.Errors
	}
	return ""
}

type ShowCmdArgs struct {
	ReqId                int64    `protobuf:"varint,1,opt,name=ReqId,proto3" json:"ReqId,omitempty"`
	Cli                  string   `protobuf:"bytes,2,opt,name=cli,proto3" json:"cli,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ShowCmdArgs) Reset()         { *m = ShowCmdArgs{} }
func (m *ShowCmdArgs) String() string { return proto.CompactTextString(m) }
func (*ShowCmdArgs) ProtoMessage()    {}
func (*ShowCmdArgs) Descriptor() ([]byte, []int) {
	return fileDescriptor_b8a8729ecb383e31, []int{15}
}

func (m *ShowCmdArgs) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ShowCmdArgs.Unmarshal(m, b)
}
func (m *ShowCmdArgs) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ShowCmdArgs.Marshal(b, m, deterministic)
}
func (m *ShowCmdArgs) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ShowCmdArgs.Merge(m, src)
}
func (m *ShowCmdArgs) XXX_Size() int {
	return xxx_messageInfo_ShowCmdArgs.Size(m)
}
func (m *ShowCmdArgs) XXX_DiscardUnknown() {
	xxx_messageInfo_ShowCmdArgs.DiscardUnknown(m)
}

var xxx_messageInfo_ShowCmdArgs proto.InternalMessageInfo

func (m *ShowCmdArgs) GetReqId() int64 {
	if m != nil {
		return m.ReqId
	}
	return 0
}

func (m *ShowCmdArgs) GetCli() string {
	if m != nil {
		return m.Cli
	}
	return ""
}

type ShowCmdTextReply struct {
	ResReqId             int64    `protobuf:"varint,1,opt,name=ResReqId,proto3" json:"ResReqId,omitempty"`
	Output               string   `protobuf:"bytes,2,opt,name=output,proto3" json:"output,omitempty"`
	Errors               string   `protobuf:"bytes,3,opt,name=errors,proto3" json:"errors,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ShowCmdTextReply) Reset()         { *m = ShowCmdTextReply{} }
func (m *ShowCmdTextReply) String() string { return proto.CompactTextString(m) }
func (*ShowCmdTextReply) ProtoMessage()    {}
func (*ShowCmdTextReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_b8a8729ecb383e31, []int{16}
}

func (m *ShowCmdTextReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ShowCmdTextReply.Unmarshal(m, b)
}
func (m *ShowCmdTextReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ShowCmdTextReply.Marshal(b, m, deterministic)
}
func (m *ShowCmdTextReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ShowCmdTextReply.Merge(m, src)
}
func (m *ShowCmdTextReply) XXX_Size() int {
	return xxx_messageInfo_ShowCmdTextReply.Size(m)
}
func (m *ShowCmdTextReply) XXX_DiscardUnknown() {
	xxx_messageInfo_ShowCmdTextReply.DiscardUnknown(m)
}

var xxx_messageInfo_ShowCmdTextReply proto.InternalMessageInfo

func (m *ShowCmdTextReply) GetResReqId() int64 {
	if m != nil {
		return m.ResReqId
	}
	return 0
}

func (m *ShowCmdTextReply) GetOutput() string {
	if m != nil {
		return m.Output
	}
	return ""
}

func (m *ShowCmdTextReply) GetErrors() string {
	if m != nil {
		return m.Errors
	}
	return ""
}

type ShowCmdJSONReply struct {
	ResReqId             int64    `protobuf:"varint,1,opt,name=ResReqId,proto3" json:"ResReqId,omitempty"`
	Jsonoutput           string   `protobuf:"bytes,2,opt,name=jsonoutput,proto3" json:"jsonoutput,omitempty"`
	Errors               string   `protobuf:"bytes,3,opt,name=errors,proto3" json:"errors,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ShowCmdJSONReply) Reset()         { *m = ShowCmdJSONReply{} }
func (m *ShowCmdJSONReply) String() string { return proto.CompactTextString(m) }
func (*ShowCmdJSONReply) ProtoMessage()    {}
func (*ShowCmdJSONReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_b8a8729ecb383e31, []int{17}
}

func (m *ShowCmdJSONReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ShowCmdJSONReply.Unmarshal(m, b)
}
func (m *ShowCmdJSONReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ShowCmdJSONReply.Marshal(b, m, deterministic)
}
func (m *ShowCmdJSONReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ShowCmdJSONReply.Merge(m, src)
}
func (m *ShowCmdJSONReply) XXX_Size() int {
	return xxx_messageInfo_ShowCmdJSONReply.Size(m)
}
func (m *ShowCmdJSONReply) XXX_DiscardUnknown() {
	xxx_messageInfo_ShowCmdJSONReply.DiscardUnknown(m)
}

var xxx_messageInfo_ShowCmdJSONReply proto.InternalMessageInfo

func (m *ShowCmdJSONReply) GetResReqId() int64 {
	if m != nil {
		return m.ResReqId
	}
	return 0
}

func (m *ShowCmdJSONReply) GetJsonoutput() string {
	if m != nil {
		return m.Jsonoutput
	}
	return ""
}

func (m *ShowCmdJSONReply) GetErrors() string {
	if m != nil {
		return m.Errors
	}
	return ""
}

// QOSMarking specifies the DSCP value to be set on transmitted telemetry
type QOSMarking struct {
	Marking              uint32   `protobuf:"varint,1,opt,name=marking,proto3" json:"marking,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *QOSMarking) Reset()         { *m = QOSMarking{} }
func (m *QOSMarking) String() string { return proto.CompactTextString(m) }
func (*QOSMarking) ProtoMessage()    {}
func (*QOSMarking) Descriptor() ([]byte, []int) {
	return fileDescriptor_b8a8729ecb383e31, []int{18}
}

func (m *QOSMarking) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QOSMarking.Unmarshal(m, b)
}
func (m *QOSMarking) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QOSMarking.Marshal(b, m, deterministic)
}
func (m *QOSMarking) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QOSMarking.Merge(m, src)
}
func (m *QOSMarking) XXX_Size() int {
	return xxx_messageInfo_QOSMarking.Size(m)
}
func (m *QOSMarking) XXX_DiscardUnknown() {
	xxx_messageInfo_QOSMarking.DiscardUnknown(m)
}

var xxx_messageInfo_QOSMarking proto.InternalMessageInfo

func (m *QOSMarking) GetMarking() uint32 {
	if m != nil {
		return m.Marking
	}
	return 0
}

type CreateSubsArgs struct {
	ReqId                int64       `protobuf:"varint,1,opt,name=ReqId,proto3" json:"ReqId,omitempty"`
	Encode               int64       `protobuf:"varint,2,opt,name=encode,proto3" json:"encode,omitempty"`
	Subidstr             string      `protobuf:"bytes,3,opt,name=subidstr,proto3" json:"subidstr,omitempty"`
	Qos                  *QOSMarking `protobuf:"bytes,4,opt,name=qos,proto3" json:"qos,omitempty"`
	Subscriptions        []string    `protobuf:"bytes,5,rep,name=Subscriptions,proto3" json:"Subscriptions,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *CreateSubsArgs) Reset()         { *m = CreateSubsArgs{} }
func (m *CreateSubsArgs) String() string { return proto.CompactTextString(m) }
func (*CreateSubsArgs) ProtoMessage()    {}
func (*CreateSubsArgs) Descriptor() ([]byte, []int) {
	return fileDescriptor_b8a8729ecb383e31, []int{19}
}

func (m *CreateSubsArgs) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateSubsArgs.Unmarshal(m, b)
}
func (m *CreateSubsArgs) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateSubsArgs.Marshal(b, m, deterministic)
}
func (m *CreateSubsArgs) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateSubsArgs.Merge(m, src)
}
func (m *CreateSubsArgs) XXX_Size() int {
	return xxx_messageInfo_CreateSubsArgs.Size(m)
}
func (m *CreateSubsArgs) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateSubsArgs.DiscardUnknown(m)
}

var xxx_messageInfo_CreateSubsArgs proto.InternalMessageInfo

func (m *CreateSubsArgs) GetReqId() int64 {
	if m != nil {
		return m.ReqId
	}
	return 0
}

func (m *CreateSubsArgs) GetEncode() int64 {
	if m != nil {
		return m.Encode
	}
	return 0
}

func (m *CreateSubsArgs) GetSubidstr() string {
	if m != nil {
		return m.Subidstr
	}
	return ""
}

func (m *CreateSubsArgs) GetQos() *QOSMarking {
	if m != nil {
		return m.Qos
	}
	return nil
}

func (m *CreateSubsArgs) GetSubscriptions() []string {
	if m != nil {
		return m.Subscriptions
	}
	return nil
}

type ActionJSONArgs struct {
	ReqId                int64    `protobuf:"varint,1,opt,name=ReqId,proto3" json:"ReqId,omitempty"`
	Yangpathjson         string   `protobuf:"bytes,2,opt,name=yangpathjson,proto3" json:"yangpathjson,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ActionJSONArgs) Reset()         { *m = ActionJSONArgs{} }
func (m *ActionJSONArgs) String() string { return proto.CompactTextString(m) }
func (*ActionJSONArgs) ProtoMessage()    {}
func (*ActionJSONArgs) Descriptor() ([]byte, []int) {
	return fileDescriptor_b8a8729ecb383e31, []int{20}
}

func (m *ActionJSONArgs) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ActionJSONArgs.Unmarshal(m, b)
}
func (m *ActionJSONArgs) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ActionJSONArgs.Marshal(b, m, deterministic)
}
func (m *ActionJSONArgs) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ActionJSONArgs.Merge(m, src)
}
func (m *ActionJSONArgs) XXX_Size() int {
	return xxx_messageInfo_ActionJSONArgs.Size(m)
}
func (m *ActionJSONArgs) XXX_DiscardUnknown() {
	xxx_messageInfo_ActionJSONArgs.DiscardUnknown(m)
}

var xxx_messageInfo_ActionJSONArgs proto.InternalMessageInfo

func (m *ActionJSONArgs) GetReqId() int64 {
	if m != nil {
		return m.ReqId
	}
	return 0
}

func (m *ActionJSONArgs) GetYangpathjson() string {
	if m != nil {
		return m.Yangpathjson
	}
	return ""
}

type ActionJSONReply struct {
	ResReqId             int64    `protobuf:"varint,1,opt,name=ResReqId,proto3" json:"ResReqId,omitempty"`
	Yangjson             string   `protobuf:"bytes,2,opt,name=yangjson,proto3" json:"yangjson,omitempty"`
	Errors               string   `protobuf:"bytes,3,opt,name=errors,proto3" json:"errors,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ActionJSONReply) Reset()         { *m = ActionJSONReply{} }
func (m *ActionJSONReply) String() string { return proto.CompactTextString(m) }
func (*ActionJSONReply) ProtoMessage()    {}
func (*ActionJSONReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_b8a8729ecb383e31, []int{21}
}

func (m *ActionJSONReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ActionJSONReply.Unmarshal(m, b)
}
func (m *ActionJSONReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ActionJSONReply.Marshal(b, m, deterministic)
}
func (m *ActionJSONReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ActionJSONReply.Merge(m, src)
}
func (m *ActionJSONReply) XXX_Size() int {
	return xxx_messageInfo_ActionJSONReply.Size(m)
}
func (m *ActionJSONReply) XXX_DiscardUnknown() {
	xxx_messageInfo_ActionJSONReply.DiscardUnknown(m)
}

var xxx_messageInfo_ActionJSONReply proto.InternalMessageInfo

func (m *ActionJSONReply) GetResReqId() int64 {
	if m != nil {
		return m.ResReqId
	}
	return 0
}

func (m *ActionJSONReply) GetYangjson() string {
	if m != nil {
		return m.Yangjson
	}
	return ""
}

func (m *ActionJSONReply) GetErrors() string {
	if m != nil {
		return m.Errors
	}
	return ""
}

type CreateSubsReply struct {
	ResReqId             int64    `protobuf:"varint,1,opt,name=ResReqId,proto3" json:"ResReqId,omitempty"`
	Data                 []byte   `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	Errors               string   `protobuf:"bytes,3,opt,name=errors,proto3" json:"errors,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateSubsReply) Reset()         { *m = CreateSubsReply{} }
func (m *CreateSubsReply) String() string { return proto.CompactTextString(m) }
func (*CreateSubsReply) ProtoMessage()    {}
func (*CreateSubsReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_b8a8729ecb383e31, []int{22}
}

func (m *CreateSubsReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateSubsReply.Unmarshal(m, b)
}
func (m *CreateSubsReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateSubsReply.Marshal(b, m, deterministic)
}
func (m *CreateSubsReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateSubsReply.Merge(m, src)
}
func (m *CreateSubsReply) XXX_Size() int {
	return xxx_messageInfo_CreateSubsReply.Size(m)
}
func (m *CreateSubsReply) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateSubsReply.DiscardUnknown(m)
}

var xxx_messageInfo_CreateSubsReply proto.InternalMessageInfo

func (m *CreateSubsReply) GetResReqId() int64 {
	if m != nil {
		return m.ResReqId
	}
	return 0
}

func (m *CreateSubsReply) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *CreateSubsReply) GetErrors() string {
	if m != nil {
		return m.Errors
	}
	return ""
}

func init() {
	proto.RegisterEnum("IOSXRExtensibleManagabilityService.CommitResult", CommitResult_name, CommitResult_value)
	proto.RegisterType((*ConfigGetArgs)(nil), "IOSXRExtensibleManagabilityService.ConfigGetArgs")
	proto.RegisterType((*ConfigGetReply)(nil), "IOSXRExtensibleManagabilityService.ConfigGetReply")
	proto.RegisterType((*GetOperArgs)(nil), "IOSXRExtensibleManagabilityService.GetOperArgs")
	proto.RegisterType((*GetOperReply)(nil), "IOSXRExtensibleManagabilityService.GetOperReply")
	proto.RegisterType((*ConfigArgs)(nil), "IOSXRExtensibleManagabilityService.ConfigArgs")
	proto.RegisterType((*ConfigReply)(nil), "IOSXRExtensibleManagabilityService.ConfigReply")
	proto.RegisterType((*CliConfigArgs)(nil), "IOSXRExtensibleManagabilityService.CliConfigArgs")
	proto.RegisterType((*CliConfigReply)(nil), "IOSXRExtensibleManagabilityService.CliConfigReply")
	proto.RegisterType((*CommitReplaceArgs)(nil), "IOSXRExtensibleManagabilityService.CommitReplaceArgs")
	proto.RegisterType((*CommitReplaceReply)(nil), "IOSXRExtensibleManagabilityService.CommitReplaceReply")
	proto.RegisterType((*CommitMsg)(nil), "IOSXRExtensibleManagabilityService.CommitMsg")
	proto.RegisterType((*CommitArgs)(nil), "IOSXRExtensibleManagabilityService.CommitArgs")
	proto.RegisterType((*CommitReply)(nil), "IOSXRExtensibleManagabilityService.CommitReply")
	proto.RegisterType((*DiscardChangesArgs)(nil), "IOSXRExtensibleManagabilityService.DiscardChangesArgs")
	proto.RegisterType((*DiscardChangesReply)(nil), "IOSXRExtensibleManagabilityService.DiscardChangesReply")
	proto.RegisterType((*ShowCmdArgs)(nil), "IOSXRExtensibleManagabilityService.ShowCmdArgs")
	proto.RegisterType((*ShowCmdTextReply)(nil), "IOSXRExtensibleManagabilityService.ShowCmdTextReply")
	proto.RegisterType((*ShowCmdJSONReply)(nil), "IOSXRExtensibleManagabilityService.ShowCmdJSONReply")
	proto.RegisterType((*QOSMarking)(nil), "IOSXRExtensibleManagabilityService.QOSMarking")
	proto.RegisterType((*CreateSubsArgs)(nil), "IOSXRExtensibleManagabilityService.CreateSubsArgs")
	proto.RegisterType((*ActionJSONArgs)(nil), "IOSXRExtensibleManagabilityService.ActionJSONArgs")
	proto.RegisterType((*ActionJSONReply)(nil), "IOSXRExtensibleManagabilityService.ActionJSONReply")
	proto.RegisterType((*CreateSubsReply)(nil), "IOSXRExtensibleManagabilityService.CreateSubsReply")
}

func init() {
	proto.RegisterFile("mdt_grpc_dialin/mdt_grpc_dialin.proto", fileDescriptor_b8a8729ecb383e31)
}

var fileDescriptor_b8a8729ecb383e31 = []byte{
	// 895 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x57, 0xcf, 0x6f, 0xe3, 0x44,
	0x14, 0xae, 0xeb, 0x6e, 0xb7, 0x7e, 0x89, 0xbb, 0xdd, 0x61, 0x85, 0xa2, 0x08, 0xa1, 0x6a, 0x04,
	0xab, 0x6a, 0x0f, 0xd9, 0x25, 0x65, 0xe1, 0x80, 0x84, 0x88, 0xdc, 0x92, 0xcd, 0x8a, 0x34, 0x30,
	0x59, 0x09, 0x38, 0xb0, 0xc5, 0xb1, 0x67, 0xdd, 0x01, 0xff, 0xea, 0x78, 0xb2, 0x34, 0x07, 0x10,
	0x07, 0x38, 0xf0, 0x6f, 0x71, 0xe0, 0xef, 0x42, 0xe3, 0xdf, 0x0e, 0x4a, 0x62, 0xb7, 0xb4, 0xb7,
	0x79, 0x13, 0xbf, 0xef, 0xfb, 0xde, 0x7b, 0x63, 0x7f, 0x13, 0xf8, 0xd0, 0xb3, 0xc5, 0xb9, 0xc3,
	0x43, 0xeb, 0xdc, 0x66, 0xa6, 0xcb, 0xfc, 0xa7, 0x4b, 0x71, 0x2f, 0xe4, 0x81, 0x08, 0x10, 0x1e,
	0x4d, 0xa6, 0xdf, 0x91, 0xd3, 0x2b, 0x41, 0xfd, 0x88, 0xcd, 0x5c, 0x3a, 0x36, 0x7d, 0xd3, 0x31,
	0x67, 0xcc, 0x65, 0x62, 0x31, 0xa5, 0xfc, 0x2d, 0xb3, 0x28, 0x1e, 0x81, 0x6e, 0x04, 0xfe, 0x1b,
	0xe6, 0x0c, 0xa9, 0x18, 0x70, 0x27, 0x42, 0x8f, 0xe0, 0x1e, 0xa1, 0x97, 0x23, 0xbb, 0xa3, 0x1c,
	0x2a, 0x47, 0x2a, 0x49, 0x02, 0x84, 0xa1, 0xbd, 0x30, 0x7d, 0x27, 0x34, 0xc5, 0xc5, 0x4f, 0x51,
	0xe0, 0x77, 0xb6, 0x0f, 0x95, 0x23, 0x8d, 0x54, 0xf6, 0xf0, 0x8f, 0xb0, 0x9f, 0x43, 0x11, 0x1a,
	0xba, 0x0b, 0xd4, 0x85, 0x3d, 0x42, 0xa3, 0x32, 0x5c, 0x1e, 0xcb, 0xdf, 0x64, 0x76, 0x09, 0x2d,
	0x8f, 0xd1, 0xbb, 0xb0, 0x4b, 0x39, 0x0f, 0x78, 0xd4, 0x51, 0xe3, 0x5f, 0xd2, 0x08, 0x0f, 0xa1,
	0x35, 0xa4, 0x62, 0x12, 0x52, 0x7e, 0x43, 0xa9, 0xaf, 0xa1, 0x9d, 0x02, 0xdd, 0x8e, 0xd0, 0x3f,
	0x14, 0x80, 0xa4, 0x17, 0x6b, 0x84, 0xae, 0x03, 0x7e, 0x0f, 0xb4, 0x38, 0x9f, 0x7b, 0xd4, 0x8e,
	0xb1, 0xf7, 0x48, 0xb1, 0x81, 0x1e, 0xa7, 0x9d, 0xe6, 0xde, 0x2b, 0xe6, 0xd1, 0x60, 0x2e, 0x3a,
	0x3b, 0x87, 0xca, 0x91, 0x4e, 0x96, 0x76, 0xf1, 0x0f, 0xd0, 0x4a, 0x54, 0x6c, 0xae, 0xb2, 0xa8,
	0x64, 0xbb, 0x5c, 0x89, 0xcc, 0x31, 0x02, 0xcf, 0x63, 0x62, 0x74, 0x12, 0xeb, 0xd0, 0x49, 0x1e,
	0xe3, 0x5f, 0x41, 0x37, 0x5c, 0xb6, 0xb1, 0xce, 0x03, 0x50, 0x2d, 0x97, 0xa5, 0xb8, 0x72, 0xf9,
	0x3f, 0x55, 0x27, 0xcf, 0x5b, 0x46, 0x7f, 0x3b, 0x05, 0x7e, 0x0b, 0x0f, 0x93, 0xb5, 0x84, 0x37,
	0x2d, 0xda, 0xa8, 0xc8, 0xf2, 0x78, 0xd5, 0xea, 0x78, 0xf1, 0x0b, 0x40, 0x15, 0xe0, 0x6b, 0xcb,
	0xc7, 0x9f, 0xc9, 0x56, 0x4a, 0xa4, 0x71, 0xe4, 0x48, 0x69, 0xae, 0x39, 0xa3, 0x6e, 0x9c, 0xad,
	0x91, 0x24, 0x40, 0x1d, 0xb8, 0x6f, 0x05, 0x9e, 0x47, 0x7d, 0x91, 0xe6, 0x66, 0x21, 0xfe, 0x5c,
	0x9e, 0x52, 0x99, 0xbc, 0xfe, 0x94, 0xe6, 0xfd, 0xd9, 0x5e, 0xea, 0xcf, 0x40, 0x9e, 0xaf, 0xac,
	0x8c, 0xeb, 0xe9, 0x7f, 0x02, 0xe8, 0x84, 0x45, 0x96, 0xc9, 0x6d, 0xe3, 0xc2, 0xf4, 0x1d, 0x1a,
	0xad, 0x96, 0x82, 0x47, 0xf0, 0x4e, 0xf5, 0xd9, 0xeb, 0xd3, 0x3e, 0x87, 0xd6, 0xf4, 0x22, 0xf8,
	0xc5, 0xf0, 0xec, 0x26, 0x33, 0xc5, 0xaf, 0xe1, 0x20, 0x4d, 0x7b, 0x45, 0xaf, 0xea, 0x55, 0x1d,
	0xcc, 0x45, 0x38, 0xcf, 0x3a, 0x9f, 0x46, 0x2b, 0xbf, 0x1b, 0x6f, 0x72, 0xfc, 0x97, 0xd3, 0xc9,
	0xd9, 0x66, 0xfc, 0xf7, 0x01, 0xe4, 0x79, 0xaa, 0x70, 0x94, 0x76, 0x56, 0xf2, 0x3c, 0x06, 0xf8,
	0x66, 0x32, 0x1d, 0x9b, 0xfc, 0x67, 0xe6, 0x3b, 0xf2, 0x80, 0x78, 0xc9, 0x32, 0x26, 0xd0, 0x49,
	0x16, 0xe2, 0xbf, 0x15, 0xd8, 0x37, 0x38, 0x35, 0x05, 0x9d, 0xce, 0x67, 0x6b, 0x46, 0x13, 0x13,
	0xf9, 0x56, 0x60, 0xd3, 0x58, 0x84, 0x4a, 0xd2, 0x48, 0x8a, 0x8f, 0xe6, 0x33, 0x66, 0x47, 0x82,
	0x67, 0x2f, 0x41, 0x16, 0xa3, 0x2f, 0x40, 0xbd, 0x0c, 0xa2, 0xf8, 0xe5, 0x6e, 0xf5, 0x7b, 0xbd,
	0xcd, 0x66, 0xd5, 0x2b, 0x34, 0x13, 0x99, 0x8a, 0x3e, 0x00, 0x5d, 0xea, 0xb2, 0x38, 0x0b, 0x05,
	0x0b, 0xfc, 0xa8, 0x73, 0xef, 0x50, 0x3d, 0xd2, 0x48, 0x75, 0x13, 0xbf, 0x84, 0xfd, 0x81, 0x25,
	0x97, 0xb2, 0xa7, 0x37, 0x34, 0x0e, 0x13, 0x1e, 0x14, 0x58, 0xb7, 0xe3, 0x1d, 0xdf, 0xc3, 0x83,
	0xa2, 0xe5, 0x9b, 0x29, 0x10, 0xec, 0xd8, 0xa6, 0x30, 0x63, 0xf8, 0x36, 0x89, 0xd7, 0xab, 0xa0,
	0x9f, 0x1c, 0x43, 0x3b, 0x7b, 0x5f, 0xa3, 0xb9, 0x2b, 0x10, 0xc0, 0xae, 0xf1, 0x62, 0x70, 0x36,
	0x3c, 0x3d, 0xd8, 0x42, 0x3a, 0x68, 0x67, 0x93, 0xf3, 0x34, 0x54, 0xd0, 0x1e, 0xec, 0x7c, 0x39,
	0x18, 0x7d, 0x75, 0xb0, 0xdd, 0xff, 0x47, 0x83, 0x7d, 0x87, 0x7c, 0x6d, 0x24, 0x1f, 0x5a, 0xe9,
	0x99, 0xe8, 0x2d, 0x68, 0x43, 0x2a, 0x92, 0x0d, 0xf4, 0x51, 0x9d, 0xc9, 0x55, 0xee, 0x18, 0xdd,
	0x7e, 0xa3, 0x94, 0xb8, 0x07, 0x78, 0xeb, 0x99, 0x82, 0x42, 0x68, 0x8d, 0x29, 0x77, 0x68, 0xca,
	0xdc, 0xab, 0x0f, 0x13, 0xd3, 0x3e, 0xad, 0xff, 0x7c, 0xca, 0x89, 0x2e, 0xa1, 0x7d, 0x42, 0x5d,
	0x2a, 0xee, 0x90, 0x92, 0x83, 0x9e, 0xba, 0xc2, 0xdd, 0x71, 0x0a, 0xd0, 0x72, 0x2b, 0xad, 0x39,
	0xd0, 0xb2, 0xf1, 0xd7, 0x1c, 0x68, 0xc5, 0xac, 0xf1, 0x16, 0xfa, 0x5d, 0x91, 0x97, 0xcf, 0x92,
	0x0d, 0xa2, 0xe7, 0xf5, 0xa4, 0x2f, 0x59, 0x72, 0xf7, 0x93, 0xc6, 0x69, 0xa5, 0xf9, 0x26, 0xfb,
	0xcd, 0x7a, 0x9d, 0x79, 0x66, 0xdd, 0x5e, 0xe7, 0x1e, 0x89, 0xb7, 0xd0, 0x5f, 0x0a, 0x3c, 0x4a,
	0xd8, 0xaa, 0x66, 0x86, 0x6a, 0x55, 0xf1, 0x5f, 0xb3, 0xec, 0x7e, 0xda, 0x3c, 0x2f, 0xd3, 0x12,
	0xc2, 0xfd, 0xf4, 0x1e, 0x8c, 0x6a, 0x55, 0x52, 0xba, 0x7d, 0x77, 0x9f, 0x35, 0x48, 0x28, 0x5e,
	0xe1, 0x05, 0x40, 0xf1, 0x75, 0x43, 0xf5, 0xce, 0x4d, 0xc5, 0x80, 0xba, 0xc7, 0xcd, 0x72, 0x72,
	0xea, 0xfe, 0x9f, 0x2a, 0xec, 0xc9, 0x0f, 0xd9, 0xe9, 0x15, 0xb5, 0xd0, 0x6f, 0xf0, 0xb0, 0xe4,
	0xe4, 0x93, 0xc4, 0x2e, 0x6b, 0xf5, 0xa0, 0x74, 0x6f, 0xe8, 0x7e, 0xdc, 0x20, 0x21, 0xbf, 0x31,
	0xc4, 0x7d, 0x28, 0xf8, 0xa5, 0x93, 0xdc, 0x05, 0x7f, 0xee, 0x58, 0xd9, 0x1c, 0x0a, 0x23, 0xab,
	0x37, 0x87, 0xaa, 0x89, 0xd6, 0x9b, 0xc3, 0x92, 0x59, 0x4a, 0xea, 0xd9, 0x6e, 0xfc, 0xef, 0xf4,
	0xf8, 0xdf, 0x00, 0x00, 0x00, 0xff, 0xff, 0xfc, 0xbd, 0xe7, 0x52, 0xc6, 0x0e, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// GRPCConfigOperClient is the client API for GRPCConfigOper service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type GRPCConfigOperClient interface {
	GetConfig(ctx context.Context, in *ConfigGetArgs, opts ...grpc.CallOption) (GRPCConfigOper_GetConfigClient, error)
	MergeConfig(ctx context.Context, in *ConfigArgs, opts ...grpc.CallOption) (*ConfigReply, error)
	DeleteConfig(ctx context.Context, in *ConfigArgs, opts ...grpc.CallOption) (*ConfigReply, error)
	ReplaceConfig(ctx context.Context, in *ConfigArgs, opts ...grpc.CallOption) (*ConfigReply, error)
	CliConfig(ctx context.Context, in *CliConfigArgs, opts ...grpc.CallOption) (*CliConfigReply, error)
	CommitReplace(ctx context.Context, in *CommitReplaceArgs, opts ...grpc.CallOption) (*CommitReplaceReply, error)
	// Do we need implicit or explicit commit
	//
	CommitConfig(ctx context.Context, in *CommitArgs, opts ...grpc.CallOption) (*CommitReply, error)
	ConfigDiscardChanges(ctx context.Context, in *DiscardChangesArgs, opts ...grpc.CallOption) (*DiscardChangesReply, error)
	// Get only returns oper data
	//
	GetOper(ctx context.Context, in *GetOperArgs, opts ...grpc.CallOption) (GRPCConfigOper_GetOperClient, error)
	// Get Telemetry Data
	CreateSubs(ctx context.Context, in *CreateSubsArgs, opts ...grpc.CallOption) (GRPCConfigOper_CreateSubsClient, error)
}

type gRPCConfigOperClient struct {
	cc *grpc.ClientConn
}

func NewGRPCConfigOperClient(cc *grpc.ClientConn) GRPCConfigOperClient {
	return &gRPCConfigOperClient{cc}
}

func (c *gRPCConfigOperClient) GetConfig(ctx context.Context, in *ConfigGetArgs, opts ...grpc.CallOption) (GRPCConfigOper_GetConfigClient, error) {
	stream, err := c.cc.NewStream(ctx, &_GRPCConfigOper_serviceDesc.Streams[0], "/IOSXRExtensibleManagabilityService.gRPCConfigOper/GetConfig", opts...)
	if err != nil {
		return nil, err
	}
	x := &gRPCConfigOperGetConfigClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type GRPCConfigOper_GetConfigClient interface {
	Recv() (*ConfigGetReply, error)
	grpc.ClientStream
}

type gRPCConfigOperGetConfigClient struct {
	grpc.ClientStream
}

func (x *gRPCConfigOperGetConfigClient) Recv() (*ConfigGetReply, error) {
	m := new(ConfigGetReply)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *gRPCConfigOperClient) MergeConfig(ctx context.Context, in *ConfigArgs, opts ...grpc.CallOption) (*ConfigReply, error) {
	out := new(ConfigReply)
	err := c.cc.Invoke(ctx, "/IOSXRExtensibleManagabilityService.gRPCConfigOper/MergeConfig", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gRPCConfigOperClient) DeleteConfig(ctx context.Context, in *ConfigArgs, opts ...grpc.CallOption) (*ConfigReply, error) {
	out := new(ConfigReply)
	err := c.cc.Invoke(ctx, "/IOSXRExtensibleManagabilityService.gRPCConfigOper/DeleteConfig", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gRPCConfigOperClient) ReplaceConfig(ctx context.Context, in *ConfigArgs, opts ...grpc.CallOption) (*ConfigReply, error) {
	out := new(ConfigReply)
	err := c.cc.Invoke(ctx, "/IOSXRExtensibleManagabilityService.gRPCConfigOper/ReplaceConfig", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gRPCConfigOperClient) CliConfig(ctx context.Context, in *CliConfigArgs, opts ...grpc.CallOption) (*CliConfigReply, error) {
	out := new(CliConfigReply)
	err := c.cc.Invoke(ctx, "/IOSXRExtensibleManagabilityService.gRPCConfigOper/CliConfig", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gRPCConfigOperClient) CommitReplace(ctx context.Context, in *CommitReplaceArgs, opts ...grpc.CallOption) (*CommitReplaceReply, error) {
	out := new(CommitReplaceReply)
	err := c.cc.Invoke(ctx, "/IOSXRExtensibleManagabilityService.gRPCConfigOper/CommitReplace", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gRPCConfigOperClient) CommitConfig(ctx context.Context, in *CommitArgs, opts ...grpc.CallOption) (*CommitReply, error) {
	out := new(CommitReply)
	err := c.cc.Invoke(ctx, "/IOSXRExtensibleManagabilityService.gRPCConfigOper/CommitConfig", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gRPCConfigOperClient) ConfigDiscardChanges(ctx context.Context, in *DiscardChangesArgs, opts ...grpc.CallOption) (*DiscardChangesReply, error) {
	out := new(DiscardChangesReply)
	err := c.cc.Invoke(ctx, "/IOSXRExtensibleManagabilityService.gRPCConfigOper/ConfigDiscardChanges", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gRPCConfigOperClient) GetOper(ctx context.Context, in *GetOperArgs, opts ...grpc.CallOption) (GRPCConfigOper_GetOperClient, error) {
	stream, err := c.cc.NewStream(ctx, &_GRPCConfigOper_serviceDesc.Streams[1], "/IOSXRExtensibleManagabilityService.gRPCConfigOper/GetOper", opts...)
	if err != nil {
		return nil, err
	}
	x := &gRPCConfigOperGetOperClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type GRPCConfigOper_GetOperClient interface {
	Recv() (*GetOperReply, error)
	grpc.ClientStream
}

type gRPCConfigOperGetOperClient struct {
	grpc.ClientStream
}

func (x *gRPCConfigOperGetOperClient) Recv() (*GetOperReply, error) {
	m := new(GetOperReply)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *gRPCConfigOperClient) CreateSubs(ctx context.Context, in *CreateSubsArgs, opts ...grpc.CallOption) (GRPCConfigOper_CreateSubsClient, error) {
	stream, err := c.cc.NewStream(ctx, &_GRPCConfigOper_serviceDesc.Streams[2], "/IOSXRExtensibleManagabilityService.gRPCConfigOper/CreateSubs", opts...)
	if err != nil {
		return nil, err
	}
	x := &gRPCConfigOperCreateSubsClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type GRPCConfigOper_CreateSubsClient interface {
	Recv() (*CreateSubsReply, error)
	grpc.ClientStream
}

type gRPCConfigOperCreateSubsClient struct {
	grpc.ClientStream
}

func (x *gRPCConfigOperCreateSubsClient) Recv() (*CreateSubsReply, error) {
	m := new(CreateSubsReply)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// GRPCConfigOperServer is the server API for GRPCConfigOper service.
type GRPCConfigOperServer interface {
	GetConfig(*ConfigGetArgs, GRPCConfigOper_GetConfigServer) error
	MergeConfig(context.Context, *ConfigArgs) (*ConfigReply, error)
	DeleteConfig(context.Context, *ConfigArgs) (*ConfigReply, error)
	ReplaceConfig(context.Context, *ConfigArgs) (*ConfigReply, error)
	CliConfig(context.Context, *CliConfigArgs) (*CliConfigReply, error)
	CommitReplace(context.Context, *CommitReplaceArgs) (*CommitReplaceReply, error)
	// Do we need implicit or explicit commit
	//
	CommitConfig(context.Context, *CommitArgs) (*CommitReply, error)
	ConfigDiscardChanges(context.Context, *DiscardChangesArgs) (*DiscardChangesReply, error)
	// Get only returns oper data
	//
	GetOper(*GetOperArgs, GRPCConfigOper_GetOperServer) error
	// Get Telemetry Data
	CreateSubs(*CreateSubsArgs, GRPCConfigOper_CreateSubsServer) error
}

// UnimplementedGRPCConfigOperServer can be embedded to have forward compatible implementations.
type UnimplementedGRPCConfigOperServer struct {
}

func (*UnimplementedGRPCConfigOperServer) GetConfig(req *ConfigGetArgs, srv GRPCConfigOper_GetConfigServer) error {
	return status.Errorf(codes.Unimplemented, "method GetConfig not implemented")
}
func (*UnimplementedGRPCConfigOperServer) MergeConfig(ctx context.Context, req *ConfigArgs) (*ConfigReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MergeConfig not implemented")
}
func (*UnimplementedGRPCConfigOperServer) DeleteConfig(ctx context.Context, req *ConfigArgs) (*ConfigReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteConfig not implemented")
}
func (*UnimplementedGRPCConfigOperServer) ReplaceConfig(ctx context.Context, req *ConfigArgs) (*ConfigReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReplaceConfig not implemented")
}
func (*UnimplementedGRPCConfigOperServer) CliConfig(ctx context.Context, req *CliConfigArgs) (*CliConfigReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CliConfig not implemented")
}
func (*UnimplementedGRPCConfigOperServer) CommitReplace(ctx context.Context, req *CommitReplaceArgs) (*CommitReplaceReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CommitReplace not implemented")
}
func (*UnimplementedGRPCConfigOperServer) CommitConfig(ctx context.Context, req *CommitArgs) (*CommitReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CommitConfig not implemented")
}
func (*UnimplementedGRPCConfigOperServer) ConfigDiscardChanges(ctx context.Context, req *DiscardChangesArgs) (*DiscardChangesReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ConfigDiscardChanges not implemented")
}
func (*UnimplementedGRPCConfigOperServer) GetOper(req *GetOperArgs, srv GRPCConfigOper_GetOperServer) error {
	return status.Errorf(codes.Unimplemented, "method GetOper not implemented")
}
func (*UnimplementedGRPCConfigOperServer) CreateSubs(req *CreateSubsArgs, srv GRPCConfigOper_CreateSubsServer) error {
	return status.Errorf(codes.Unimplemented, "method CreateSubs not implemented")
}

func RegisterGRPCConfigOperServer(s *grpc.Server, srv GRPCConfigOperServer) {
	s.RegisterService(&_GRPCConfigOper_serviceDesc, srv)
}

func _GRPCConfigOper_GetConfig_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(ConfigGetArgs)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(GRPCConfigOperServer).GetConfig(m, &gRPCConfigOperGetConfigServer{stream})
}

type GRPCConfigOper_GetConfigServer interface {
	Send(*ConfigGetReply) error
	grpc.ServerStream
}

type gRPCConfigOperGetConfigServer struct {
	grpc.ServerStream
}

func (x *gRPCConfigOperGetConfigServer) Send(m *ConfigGetReply) error {
	return x.ServerStream.SendMsg(m)
}

func _GRPCConfigOper_MergeConfig_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ConfigArgs)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GRPCConfigOperServer).MergeConfig(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/IOSXRExtensibleManagabilityService.gRPCConfigOper/MergeConfig",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GRPCConfigOperServer).MergeConfig(ctx, req.(*ConfigArgs))
	}
	return interceptor(ctx, in, info, handler)
}

func _GRPCConfigOper_DeleteConfig_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ConfigArgs)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GRPCConfigOperServer).DeleteConfig(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/IOSXRExtensibleManagabilityService.gRPCConfigOper/DeleteConfig",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GRPCConfigOperServer).DeleteConfig(ctx, req.(*ConfigArgs))
	}
	return interceptor(ctx, in, info, handler)
}

func _GRPCConfigOper_ReplaceConfig_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ConfigArgs)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GRPCConfigOperServer).ReplaceConfig(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/IOSXRExtensibleManagabilityService.gRPCConfigOper/ReplaceConfig",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GRPCConfigOperServer).ReplaceConfig(ctx, req.(*ConfigArgs))
	}
	return interceptor(ctx, in, info, handler)
}

func _GRPCConfigOper_CliConfig_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CliConfigArgs)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GRPCConfigOperServer).CliConfig(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/IOSXRExtensibleManagabilityService.gRPCConfigOper/CliConfig",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GRPCConfigOperServer).CliConfig(ctx, req.(*CliConfigArgs))
	}
	return interceptor(ctx, in, info, handler)
}

func _GRPCConfigOper_CommitReplace_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CommitReplaceArgs)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GRPCConfigOperServer).CommitReplace(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/IOSXRExtensibleManagabilityService.gRPCConfigOper/CommitReplace",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GRPCConfigOperServer).CommitReplace(ctx, req.(*CommitReplaceArgs))
	}
	return interceptor(ctx, in, info, handler)
}

func _GRPCConfigOper_CommitConfig_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CommitArgs)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GRPCConfigOperServer).CommitConfig(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/IOSXRExtensibleManagabilityService.gRPCConfigOper/CommitConfig",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GRPCConfigOperServer).CommitConfig(ctx, req.(*CommitArgs))
	}
	return interceptor(ctx, in, info, handler)
}

func _GRPCConfigOper_ConfigDiscardChanges_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DiscardChangesArgs)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GRPCConfigOperServer).ConfigDiscardChanges(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/IOSXRExtensibleManagabilityService.gRPCConfigOper/ConfigDiscardChanges",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GRPCConfigOperServer).ConfigDiscardChanges(ctx, req.(*DiscardChangesArgs))
	}
	return interceptor(ctx, in, info, handler)
}

func _GRPCConfigOper_GetOper_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(GetOperArgs)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(GRPCConfigOperServer).GetOper(m, &gRPCConfigOperGetOperServer{stream})
}

type GRPCConfigOper_GetOperServer interface {
	Send(*GetOperReply) error
	grpc.ServerStream
}

type gRPCConfigOperGetOperServer struct {
	grpc.ServerStream
}

func (x *gRPCConfigOperGetOperServer) Send(m *GetOperReply) error {
	return x.ServerStream.SendMsg(m)
}

func _GRPCConfigOper_CreateSubs_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(CreateSubsArgs)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(GRPCConfigOperServer).CreateSubs(m, &gRPCConfigOperCreateSubsServer{stream})
}

type GRPCConfigOper_CreateSubsServer interface {
	Send(*CreateSubsReply) error
	grpc.ServerStream
}

type gRPCConfigOperCreateSubsServer struct {
	grpc.ServerStream
}

func (x *gRPCConfigOperCreateSubsServer) Send(m *CreateSubsReply) error {
	return x.ServerStream.SendMsg(m)
}

var _GRPCConfigOper_serviceDesc = grpc.ServiceDesc{
	ServiceName: "IOSXRExtensibleManagabilityService.gRPCConfigOper",
	HandlerType: (*GRPCConfigOperServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "MergeConfig",
			Handler:    _GRPCConfigOper_MergeConfig_Handler,
		},
		{
			MethodName: "DeleteConfig",
			Handler:    _GRPCConfigOper_DeleteConfig_Handler,
		},
		{
			MethodName: "ReplaceConfig",
			Handler:    _GRPCConfigOper_ReplaceConfig_Handler,
		},
		{
			MethodName: "CliConfig",
			Handler:    _GRPCConfigOper_CliConfig_Handler,
		},
		{
			MethodName: "CommitReplace",
			Handler:    _GRPCConfigOper_CommitReplace_Handler,
		},
		{
			MethodName: "CommitConfig",
			Handler:    _GRPCConfigOper_CommitConfig_Handler,
		},
		{
			MethodName: "ConfigDiscardChanges",
			Handler:    _GRPCConfigOper_ConfigDiscardChanges_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "GetConfig",
			Handler:       _GRPCConfigOper_GetConfig_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "GetOper",
			Handler:       _GRPCConfigOper_GetOper_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "CreateSubs",
			Handler:       _GRPCConfigOper_CreateSubs_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "mdt_grpc_dialin/mdt_grpc_dialin.proto",
}

// GRPCExecClient is the client API for GRPCExec service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type GRPCExecClient interface {
	// Exec commands
	ShowCmdTextOutput(ctx context.Context, in *ShowCmdArgs, opts ...grpc.CallOption) (GRPCExec_ShowCmdTextOutputClient, error)
	ShowCmdJSONOutput(ctx context.Context, in *ShowCmdArgs, opts ...grpc.CallOption) (GRPCExec_ShowCmdJSONOutputClient, error)
	ActionJSON(ctx context.Context, in *ActionJSONArgs, opts ...grpc.CallOption) (GRPCExec_ActionJSONClient, error)
}

type gRPCExecClient struct {
	cc *grpc.ClientConn
}

func NewGRPCExecClient(cc *grpc.ClientConn) GRPCExecClient {
	return &gRPCExecClient{cc}
}

func (c *gRPCExecClient) ShowCmdTextOutput(ctx context.Context, in *ShowCmdArgs, opts ...grpc.CallOption) (GRPCExec_ShowCmdTextOutputClient, error) {
	stream, err := c.cc.NewStream(ctx, &_GRPCExec_serviceDesc.Streams[0], "/IOSXRExtensibleManagabilityService.gRPCExec/ShowCmdTextOutput", opts...)
	if err != nil {
		return nil, err
	}
	x := &gRPCExecShowCmdTextOutputClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type GRPCExec_ShowCmdTextOutputClient interface {
	Recv() (*ShowCmdTextReply, error)
	grpc.ClientStream
}

type gRPCExecShowCmdTextOutputClient struct {
	grpc.ClientStream
}

func (x *gRPCExecShowCmdTextOutputClient) Recv() (*ShowCmdTextReply, error) {
	m := new(ShowCmdTextReply)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *gRPCExecClient) ShowCmdJSONOutput(ctx context.Context, in *ShowCmdArgs, opts ...grpc.CallOption) (GRPCExec_ShowCmdJSONOutputClient, error) {
	stream, err := c.cc.NewStream(ctx, &_GRPCExec_serviceDesc.Streams[1], "/IOSXRExtensibleManagabilityService.gRPCExec/ShowCmdJSONOutput", opts...)
	if err != nil {
		return nil, err
	}
	x := &gRPCExecShowCmdJSONOutputClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type GRPCExec_ShowCmdJSONOutputClient interface {
	Recv() (*ShowCmdJSONReply, error)
	grpc.ClientStream
}

type gRPCExecShowCmdJSONOutputClient struct {
	grpc.ClientStream
}

func (x *gRPCExecShowCmdJSONOutputClient) Recv() (*ShowCmdJSONReply, error) {
	m := new(ShowCmdJSONReply)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *gRPCExecClient) ActionJSON(ctx context.Context, in *ActionJSONArgs, opts ...grpc.CallOption) (GRPCExec_ActionJSONClient, error) {
	stream, err := c.cc.NewStream(ctx, &_GRPCExec_serviceDesc.Streams[2], "/IOSXRExtensibleManagabilityService.gRPCExec/ActionJSON", opts...)
	if err != nil {
		return nil, err
	}
	x := &gRPCExecActionJSONClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type GRPCExec_ActionJSONClient interface {
	Recv() (*ActionJSONReply, error)
	grpc.ClientStream
}

type gRPCExecActionJSONClient struct {
	grpc.ClientStream
}

func (x *gRPCExecActionJSONClient) Recv() (*ActionJSONReply, error) {
	m := new(ActionJSONReply)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// GRPCExecServer is the server API for GRPCExec service.
type GRPCExecServer interface {
	// Exec commands
	ShowCmdTextOutput(*ShowCmdArgs, GRPCExec_ShowCmdTextOutputServer) error
	ShowCmdJSONOutput(*ShowCmdArgs, GRPCExec_ShowCmdJSONOutputServer) error
	ActionJSON(*ActionJSONArgs, GRPCExec_ActionJSONServer) error
}

// UnimplementedGRPCExecServer can be embedded to have forward compatible implementations.
type UnimplementedGRPCExecServer struct {
}

func (*UnimplementedGRPCExecServer) ShowCmdTextOutput(req *ShowCmdArgs, srv GRPCExec_ShowCmdTextOutputServer) error {
	return status.Errorf(codes.Unimplemented, "method ShowCmdTextOutput not implemented")
}
func (*UnimplementedGRPCExecServer) ShowCmdJSONOutput(req *ShowCmdArgs, srv GRPCExec_ShowCmdJSONOutputServer) error {
	return status.Errorf(codes.Unimplemented, "method ShowCmdJSONOutput not implemented")
}
func (*UnimplementedGRPCExecServer) ActionJSON(req *ActionJSONArgs, srv GRPCExec_ActionJSONServer) error {
	return status.Errorf(codes.Unimplemented, "method ActionJSON not implemented")
}

func RegisterGRPCExecServer(s *grpc.Server, srv GRPCExecServer) {
	s.RegisterService(&_GRPCExec_serviceDesc, srv)
}

func _GRPCExec_ShowCmdTextOutput_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(ShowCmdArgs)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(GRPCExecServer).ShowCmdTextOutput(m, &gRPCExecShowCmdTextOutputServer{stream})
}

type GRPCExec_ShowCmdTextOutputServer interface {
	Send(*ShowCmdTextReply) error
	grpc.ServerStream
}

type gRPCExecShowCmdTextOutputServer struct {
	grpc.ServerStream
}

func (x *gRPCExecShowCmdTextOutputServer) Send(m *ShowCmdTextReply) error {
	return x.ServerStream.SendMsg(m)
}

func _GRPCExec_ShowCmdJSONOutput_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(ShowCmdArgs)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(GRPCExecServer).ShowCmdJSONOutput(m, &gRPCExecShowCmdJSONOutputServer{stream})
}

type GRPCExec_ShowCmdJSONOutputServer interface {
	Send(*ShowCmdJSONReply) error
	grpc.ServerStream
}

type gRPCExecShowCmdJSONOutputServer struct {
	grpc.ServerStream
}

func (x *gRPCExecShowCmdJSONOutputServer) Send(m *ShowCmdJSONReply) error {
	return x.ServerStream.SendMsg(m)
}

func _GRPCExec_ActionJSON_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(ActionJSONArgs)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(GRPCExecServer).ActionJSON(m, &gRPCExecActionJSONServer{stream})
}

type GRPCExec_ActionJSONServer interface {
	Send(*ActionJSONReply) error
	grpc.ServerStream
}

type gRPCExecActionJSONServer struct {
	grpc.ServerStream
}

func (x *gRPCExecActionJSONServer) Send(m *ActionJSONReply) error {
	return x.ServerStream.SendMsg(m)
}

var _GRPCExec_serviceDesc = grpc.ServiceDesc{
	ServiceName: "IOSXRExtensibleManagabilityService.gRPCExec",
	HandlerType: (*GRPCExecServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "ShowCmdTextOutput",
			Handler:       _GRPCExec_ShowCmdTextOutput_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "ShowCmdJSONOutput",
			Handler:       _GRPCExec_ShowCmdJSONOutput_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "ActionJSON",
			Handler:       _GRPCExec_ActionJSON_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "mdt_grpc_dialin/mdt_grpc_dialin.proto",
}
