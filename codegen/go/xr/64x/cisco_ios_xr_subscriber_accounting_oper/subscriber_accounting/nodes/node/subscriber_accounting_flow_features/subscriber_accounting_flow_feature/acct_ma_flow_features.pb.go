/*
Copyright 2019 Cisco Systems

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: acct_ma_flow_features.proto

package cisco_ios_xr_subscriber_accounting_oper_subscriber_accounting_nodes_node_subscriber_accounting_flow_features_subscriber_accounting_flow_feature

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type AcctMaFlowFeatures_KEYS struct {
	NodeId               string   `protobuf:"bytes,1,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	ClassLabel           uint32   `protobuf:"varint,2,opt,name=class_label,json=classLabel,proto3" json:"class_label,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AcctMaFlowFeatures_KEYS) Reset()         { *m = AcctMaFlowFeatures_KEYS{} }
func (m *AcctMaFlowFeatures_KEYS) String() string { return proto.CompactTextString(m) }
func (*AcctMaFlowFeatures_KEYS) ProtoMessage()    {}
func (*AcctMaFlowFeatures_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_d958de7ce1c87ae2, []int{0}
}

func (m *AcctMaFlowFeatures_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AcctMaFlowFeatures_KEYS.Unmarshal(m, b)
}
func (m *AcctMaFlowFeatures_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AcctMaFlowFeatures_KEYS.Marshal(b, m, deterministic)
}
func (m *AcctMaFlowFeatures_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AcctMaFlowFeatures_KEYS.Merge(m, src)
}
func (m *AcctMaFlowFeatures_KEYS) XXX_Size() int {
	return xxx_messageInfo_AcctMaFlowFeatures_KEYS.Size(m)
}
func (m *AcctMaFlowFeatures_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_AcctMaFlowFeatures_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_AcctMaFlowFeatures_KEYS proto.InternalMessageInfo

func (m *AcctMaFlowFeatures_KEYS) GetNodeId() string {
	if m != nil {
		return m.NodeId
	}
	return ""
}

func (m *AcctMaFlowFeatures_KEYS) GetClassLabel() uint32 {
	if m != nil {
		return m.ClassLabel
	}
	return 0
}

type AcctMaFlowFeatBagData struct {
	FlowAccountingEnabledFlag      bool     `protobuf:"varint,1,opt,name=flow_accounting_enabled_flag,json=flowAccountingEnabledFlag,proto3" json:"flow_accounting_enabled_flag,omitempty"`
	FlowIdleTimeoutEnabledFlag     bool     `protobuf:"varint,2,opt,name=flow_idle_timeout_enabled_flag,json=flowIdleTimeoutEnabledFlag,proto3" json:"flow_idle_timeout_enabled_flag,omitempty"`
	PrepaidEnabledFlag             bool     `protobuf:"varint,3,opt,name=prepaid_enabled_flag,json=prepaidEnabledFlag,proto3" json:"prepaid_enabled_flag,omitempty"`
	PrepaidReauthTimerEnabled      bool     `protobuf:"varint,4,opt,name=prepaid_reauth_timer_enabled,json=prepaidReauthTimerEnabled,proto3" json:"prepaid_reauth_timer_enabled,omitempty"`
	PrepaidIdleTimeoutEnabled      bool     `protobuf:"varint,5,opt,name=prepaid_idle_timeout_enabled,json=prepaidIdleTimeoutEnabled,proto3" json:"prepaid_idle_timeout_enabled,omitempty"`
	PrepaidFinalUnit               bool     `protobuf:"varint,6,opt,name=prepaid_final_unit,json=prepaidFinalUnit,proto3" json:"prepaid_final_unit,omitempty"`
	UniqueClassLabel               uint32   `protobuf:"varint,7,opt,name=unique_class_label,json=uniqueClassLabel,proto3" json:"unique_class_label,omitempty"`
	FlowDirection                  uint32   `protobuf:"varint,8,opt,name=flow_direction,json=flowDirection,proto3" json:"flow_direction,omitempty"`
	FlowAccountingPeriodicInterval uint32   `protobuf:"varint,9,opt,name=flow_accounting_periodic_interval,json=flowAccountingPeriodicInterval,proto3" json:"flow_accounting_periodic_interval,omitempty"`
	FlowIdleTimeoutValue           uint32   `protobuf:"varint,10,opt,name=flow_idle_timeout_value,json=flowIdleTimeoutValue,proto3" json:"flow_idle_timeout_value,omitempty"`
	PrepaidTimeQuota               uint32   `protobuf:"varint,11,opt,name=prepaid_time_quota,json=prepaidTimeQuota,proto3" json:"prepaid_time_quota,omitempty"`
	PrepaidTimeThreshold           uint32   `protobuf:"varint,12,opt,name=prepaid_time_threshold,json=prepaidTimeThreshold,proto3" json:"prepaid_time_threshold,omitempty"`
	PrepaidTotalTimeQuota          uint32   `protobuf:"varint,13,opt,name=prepaid_total_time_quota,json=prepaidTotalTimeQuota,proto3" json:"prepaid_total_time_quota,omitempty"`
	PrepaidVolumeThreshold         uint32   `protobuf:"varint,14,opt,name=prepaid_volume_threshold,json=prepaidVolumeThreshold,proto3" json:"prepaid_volume_threshold,omitempty"`
	PrepaidRemainingQt             uint32   `protobuf:"varint,15,opt,name=prepaid_remaining_qt,json=prepaidRemainingQt,proto3" json:"prepaid_remaining_qt,omitempty"`
	PrepaidRemainingQat            uint32   `protobuf:"varint,16,opt,name=prepaid_remaining_qat,json=prepaidRemainingQat,proto3" json:"prepaid_remaining_qat,omitempty"`
	PrepaidRemainingQit            uint32   `protobuf:"varint,17,opt,name=prepaid_remaining_qit,json=prepaidRemainingQit,proto3" json:"prepaid_remaining_qit,omitempty"`
	PrepaidRemainingQtt            uint32   `protobuf:"varint,18,opt,name=prepaid_remaining_qtt,json=prepaidRemainingQtt,proto3" json:"prepaid_remaining_qtt,omitempty"`
	PrepaidRemainingWheel          uint32   `protobuf:"varint,19,opt,name=prepaid_remaining_wheel,json=prepaidRemainingWheel,proto3" json:"prepaid_remaining_wheel,omitempty"`
	PrepaidTariffTime              uint32   `protobuf:"varint,20,opt,name=prepaid_tariff_time,json=prepaidTariffTime,proto3" json:"prepaid_tariff_time,omitempty"`
	PrepaidIdleTimeoutValue        uint32   `protobuf:"varint,21,opt,name=prepaid_idle_timeout_value,json=prepaidIdleTimeoutValue,proto3" json:"prepaid_idle_timeout_value,omitempty"`
	PrepaidReauthTimeoutValue      uint32   `protobuf:"varint,22,opt,name=prepaid_reauth_timeout_value,json=prepaidReauthTimeoutValue,proto3" json:"prepaid_reauth_timeout_value,omitempty"`
	PrepaidCcfh                    uint32   `protobuf:"varint,23,opt,name=prepaid_ccfh,json=prepaidCcfh,proto3" json:"prepaid_ccfh,omitempty"`
	PrepaidResultCode              uint32   `protobuf:"varint,24,opt,name=prepaid_result_code,json=prepaidResultCode,proto3" json:"prepaid_result_code,omitempty"`
	PrepaidVolumeiQuota            uint64   `protobuf:"varint,25,opt,name=prepaid_volumei_quota,json=prepaidVolumeiQuota,proto3" json:"prepaid_volumei_quota,omitempty"`
	PrepaidVolumeoQuota            uint64   `protobuf:"varint,26,opt,name=prepaid_volumeo_quota,json=prepaidVolumeoQuota,proto3" json:"prepaid_volumeo_quota,omitempty"`
	PrepaidVolumebQuota            uint64   `protobuf:"varint,27,opt,name=prepaid_volumeb_quota,json=prepaidVolumebQuota,proto3" json:"prepaid_volumeb_quota,omitempty"`
	PrepaidTotalVolumeiQuota       uint64   `protobuf:"varint,28,opt,name=prepaid_total_volumei_quota,json=prepaidTotalVolumeiQuota,proto3" json:"prepaid_total_volumei_quota,omitempty"`
	PrepaidTotalVolumeoQuota       uint64   `protobuf:"varint,29,opt,name=prepaid_total_volumeo_quota,json=prepaidTotalVolumeoQuota,proto3" json:"prepaid_total_volumeo_quota,omitempty"`
	PrepaidTotalVolumebQuota       uint64   `protobuf:"varint,30,opt,name=prepaid_total_volumeb_quota,json=prepaidTotalVolumebQuota,proto3" json:"prepaid_total_volumeb_quota,omitempty"`
	PrepaidVolumeUsediQuota        uint64   `protobuf:"varint,31,opt,name=prepaid_volume_usedi_quota,json=prepaidVolumeUsediQuota,proto3" json:"prepaid_volume_usedi_quota,omitempty"`
	PrepaidVolumeUsedoQuota        uint64   `protobuf:"varint,32,opt,name=prepaid_volume_usedo_quota,json=prepaidVolumeUsedoQuota,proto3" json:"prepaid_volume_usedo_quota,omitempty"`
	PrepaidVolumeRefiQuota         uint64   `protobuf:"varint,33,opt,name=prepaid_volume_refi_quota,json=prepaidVolumeRefiQuota,proto3" json:"prepaid_volume_refi_quota,omitempty"`
	PrepaidVolumeRefoQuota         uint64   `protobuf:"varint,34,opt,name=prepaid_volume_refo_quota,json=prepaidVolumeRefoQuota,proto3" json:"prepaid_volume_refo_quota,omitempty"`
	PrepaidVolumeRefbQuota         uint64   `protobuf:"varint,35,opt,name=prepaid_volume_refb_quota,json=prepaidVolumeRefbQuota,proto3" json:"prepaid_volume_refb_quota,omitempty"`
	PrepaidVolumeAggRefiQuota      uint64   `protobuf:"varint,36,opt,name=prepaid_volume_agg_refi_quota,json=prepaidVolumeAggRefiQuota,proto3" json:"prepaid_volume_agg_refi_quota,omitempty"`
	PrepaidVolumeAggRefoQuota      uint64   `protobuf:"varint,37,opt,name=prepaid_volume_agg_refo_quota,json=prepaidVolumeAggRefoQuota,proto3" json:"prepaid_volume_agg_refo_quota,omitempty"`
	PrepaidVolumeAggRefbQuota      uint64   `protobuf:"varint,38,opt,name=prepaid_volume_agg_refb_quota,json=prepaidVolumeAggRefbQuota,proto3" json:"prepaid_volume_agg_refb_quota,omitempty"`
	PrepaidVolumeNewiQuota         uint64   `protobuf:"varint,39,opt,name=prepaid_volume_newi_quota,json=prepaidVolumeNewiQuota,proto3" json:"prepaid_volume_newi_quota,omitempty"`
	PrepaidVolumeNewoQuota         uint64   `protobuf:"varint,40,opt,name=prepaid_volume_newo_quota,json=prepaidVolumeNewoQuota,proto3" json:"prepaid_volume_newo_quota,omitempty"`
	PrepaidVolumeNewbQuota         uint64   `protobuf:"varint,41,opt,name=prepaid_volume_newb_quota,json=prepaidVolumeNewbQuota,proto3" json:"prepaid_volume_newb_quota,omitempty"`
	PrepaidTariffVolumeiQuota      uint64   `protobuf:"varint,42,opt,name=prepaid_tariff_volumei_quota,json=prepaidTariffVolumeiQuota,proto3" json:"prepaid_tariff_volumei_quota,omitempty"`
	PrepaidTariffVolumeoQuota      uint64   `protobuf:"varint,43,opt,name=prepaid_tariff_volumeo_quota,json=prepaidTariffVolumeoQuota,proto3" json:"prepaid_tariff_volumeo_quota,omitempty"`
	PrepaidTariffVolumebQuota      uint64   `protobuf:"varint,44,opt,name=prepaid_tariff_volumeb_quota,json=prepaidTariffVolumebQuota,proto3" json:"prepaid_tariff_volumeb_quota,omitempty"`
	FlowAccountingMethodListName   string   `protobuf:"bytes,45,opt,name=flow_accounting_method_list_name,json=flowAccountingMethodListName,proto3" json:"flow_accounting_method_list_name,omitempty"`
	PrepaidCfg                     string   `protobuf:"bytes,46,opt,name=prepaid_cfg,json=prepaidCfg,proto3" json:"prepaid_cfg,omitempty"`
	PrepaidTimeState               string   `protobuf:"bytes,47,opt,name=prepaid_time_state,json=prepaidTimeState,proto3" json:"prepaid_time_state,omitempty"`
	PrepaidVolumeState             string   `protobuf:"bytes,48,opt,name=prepaid_volume_state,json=prepaidVolumeState,proto3" json:"prepaid_volume_state,omitempty"`
	PrepaidChargingRule            string   `protobuf:"bytes,49,opt,name=prepaid_charging_rule,json=prepaidChargingRule,proto3" json:"prepaid_charging_rule,omitempty"`
	XXX_NoUnkeyedLiteral           struct{} `json:"-"`
	XXX_unrecognized               []byte   `json:"-"`
	XXX_sizecache                  int32    `json:"-"`
}

func (m *AcctMaFlowFeatBagData) Reset()         { *m = AcctMaFlowFeatBagData{} }
func (m *AcctMaFlowFeatBagData) String() string { return proto.CompactTextString(m) }
func (*AcctMaFlowFeatBagData) ProtoMessage()    {}
func (*AcctMaFlowFeatBagData) Descriptor() ([]byte, []int) {
	return fileDescriptor_d958de7ce1c87ae2, []int{1}
}

func (m *AcctMaFlowFeatBagData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AcctMaFlowFeatBagData.Unmarshal(m, b)
}
func (m *AcctMaFlowFeatBagData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AcctMaFlowFeatBagData.Marshal(b, m, deterministic)
}
func (m *AcctMaFlowFeatBagData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AcctMaFlowFeatBagData.Merge(m, src)
}
func (m *AcctMaFlowFeatBagData) XXX_Size() int {
	return xxx_messageInfo_AcctMaFlowFeatBagData.Size(m)
}
func (m *AcctMaFlowFeatBagData) XXX_DiscardUnknown() {
	xxx_messageInfo_AcctMaFlowFeatBagData.DiscardUnknown(m)
}

var xxx_messageInfo_AcctMaFlowFeatBagData proto.InternalMessageInfo

func (m *AcctMaFlowFeatBagData) GetFlowAccountingEnabledFlag() bool {
	if m != nil {
		return m.FlowAccountingEnabledFlag
	}
	return false
}

func (m *AcctMaFlowFeatBagData) GetFlowIdleTimeoutEnabledFlag() bool {
	if m != nil {
		return m.FlowIdleTimeoutEnabledFlag
	}
	return false
}

func (m *AcctMaFlowFeatBagData) GetPrepaidEnabledFlag() bool {
	if m != nil {
		return m.PrepaidEnabledFlag
	}
	return false
}

func (m *AcctMaFlowFeatBagData) GetPrepaidReauthTimerEnabled() bool {
	if m != nil {
		return m.PrepaidReauthTimerEnabled
	}
	return false
}

func (m *AcctMaFlowFeatBagData) GetPrepaidIdleTimeoutEnabled() bool {
	if m != nil {
		return m.PrepaidIdleTimeoutEnabled
	}
	return false
}

func (m *AcctMaFlowFeatBagData) GetPrepaidFinalUnit() bool {
	if m != nil {
		return m.PrepaidFinalUnit
	}
	return false
}

func (m *AcctMaFlowFeatBagData) GetUniqueClassLabel() uint32 {
	if m != nil {
		return m.UniqueClassLabel
	}
	return 0
}

func (m *AcctMaFlowFeatBagData) GetFlowDirection() uint32 {
	if m != nil {
		return m.FlowDirection
	}
	return 0
}

func (m *AcctMaFlowFeatBagData) GetFlowAccountingPeriodicInterval() uint32 {
	if m != nil {
		return m.FlowAccountingPeriodicInterval
	}
	return 0
}

func (m *AcctMaFlowFeatBagData) GetFlowIdleTimeoutValue() uint32 {
	if m != nil {
		return m.FlowIdleTimeoutValue
	}
	return 0
}

func (m *AcctMaFlowFeatBagData) GetPrepaidTimeQuota() uint32 {
	if m != nil {
		return m.PrepaidTimeQuota
	}
	return 0
}

func (m *AcctMaFlowFeatBagData) GetPrepaidTimeThreshold() uint32 {
	if m != nil {
		return m.PrepaidTimeThreshold
	}
	return 0
}

func (m *AcctMaFlowFeatBagData) GetPrepaidTotalTimeQuota() uint32 {
	if m != nil {
		return m.PrepaidTotalTimeQuota
	}
	return 0
}

func (m *AcctMaFlowFeatBagData) GetPrepaidVolumeThreshold() uint32 {
	if m != nil {
		return m.PrepaidVolumeThreshold
	}
	return 0
}

func (m *AcctMaFlowFeatBagData) GetPrepaidRemainingQt() uint32 {
	if m != nil {
		return m.PrepaidRemainingQt
	}
	return 0
}

func (m *AcctMaFlowFeatBagData) GetPrepaidRemainingQat() uint32 {
	if m != nil {
		return m.PrepaidRemainingQat
	}
	return 0
}

func (m *AcctMaFlowFeatBagData) GetPrepaidRemainingQit() uint32 {
	if m != nil {
		return m.PrepaidRemainingQit
	}
	return 0
}

func (m *AcctMaFlowFeatBagData) GetPrepaidRemainingQtt() uint32 {
	if m != nil {
		return m.PrepaidRemainingQtt
	}
	return 0
}

func (m *AcctMaFlowFeatBagData) GetPrepaidRemainingWheel() uint32 {
	if m != nil {
		return m.PrepaidRemainingWheel
	}
	return 0
}

func (m *AcctMaFlowFeatBagData) GetPrepaidTariffTime() uint32 {
	if m != nil {
		return m.PrepaidTariffTime
	}
	return 0
}

func (m *AcctMaFlowFeatBagData) GetPrepaidIdleTimeoutValue() uint32 {
	if m != nil {
		return m.PrepaidIdleTimeoutValue
	}
	return 0
}

func (m *AcctMaFlowFeatBagData) GetPrepaidReauthTimeoutValue() uint32 {
	if m != nil {
		return m.PrepaidReauthTimeoutValue
	}
	return 0
}

func (m *AcctMaFlowFeatBagData) GetPrepaidCcfh() uint32 {
	if m != nil {
		return m.PrepaidCcfh
	}
	return 0
}

func (m *AcctMaFlowFeatBagData) GetPrepaidResultCode() uint32 {
	if m != nil {
		return m.PrepaidResultCode
	}
	return 0
}

func (m *AcctMaFlowFeatBagData) GetPrepaidVolumeiQuota() uint64 {
	if m != nil {
		return m.PrepaidVolumeiQuota
	}
	return 0
}

func (m *AcctMaFlowFeatBagData) GetPrepaidVolumeoQuota() uint64 {
	if m != nil {
		return m.PrepaidVolumeoQuota
	}
	return 0
}

func (m *AcctMaFlowFeatBagData) GetPrepaidVolumebQuota() uint64 {
	if m != nil {
		return m.PrepaidVolumebQuota
	}
	return 0
}

func (m *AcctMaFlowFeatBagData) GetPrepaidTotalVolumeiQuota() uint64 {
	if m != nil {
		return m.PrepaidTotalVolumeiQuota
	}
	return 0
}

func (m *AcctMaFlowFeatBagData) GetPrepaidTotalVolumeoQuota() uint64 {
	if m != nil {
		return m.PrepaidTotalVolumeoQuota
	}
	return 0
}

func (m *AcctMaFlowFeatBagData) GetPrepaidTotalVolumebQuota() uint64 {
	if m != nil {
		return m.PrepaidTotalVolumebQuota
	}
	return 0
}

func (m *AcctMaFlowFeatBagData) GetPrepaidVolumeUsediQuota() uint64 {
	if m != nil {
		return m.PrepaidVolumeUsediQuota
	}
	return 0
}

func (m *AcctMaFlowFeatBagData) GetPrepaidVolumeUsedoQuota() uint64 {
	if m != nil {
		return m.PrepaidVolumeUsedoQuota
	}
	return 0
}

func (m *AcctMaFlowFeatBagData) GetPrepaidVolumeRefiQuota() uint64 {
	if m != nil {
		return m.PrepaidVolumeRefiQuota
	}
	return 0
}

func (m *AcctMaFlowFeatBagData) GetPrepaidVolumeRefoQuota() uint64 {
	if m != nil {
		return m.PrepaidVolumeRefoQuota
	}
	return 0
}

func (m *AcctMaFlowFeatBagData) GetPrepaidVolumeRefbQuota() uint64 {
	if m != nil {
		return m.PrepaidVolumeRefbQuota
	}
	return 0
}

func (m *AcctMaFlowFeatBagData) GetPrepaidVolumeAggRefiQuota() uint64 {
	if m != nil {
		return m.PrepaidVolumeAggRefiQuota
	}
	return 0
}

func (m *AcctMaFlowFeatBagData) GetPrepaidVolumeAggRefoQuota() uint64 {
	if m != nil {
		return m.PrepaidVolumeAggRefoQuota
	}
	return 0
}

func (m *AcctMaFlowFeatBagData) GetPrepaidVolumeAggRefbQuota() uint64 {
	if m != nil {
		return m.PrepaidVolumeAggRefbQuota
	}
	return 0
}

func (m *AcctMaFlowFeatBagData) GetPrepaidVolumeNewiQuota() uint64 {
	if m != nil {
		return m.PrepaidVolumeNewiQuota
	}
	return 0
}

func (m *AcctMaFlowFeatBagData) GetPrepaidVolumeNewoQuota() uint64 {
	if m != nil {
		return m.PrepaidVolumeNewoQuota
	}
	return 0
}

func (m *AcctMaFlowFeatBagData) GetPrepaidVolumeNewbQuota() uint64 {
	if m != nil {
		return m.PrepaidVolumeNewbQuota
	}
	return 0
}

func (m *AcctMaFlowFeatBagData) GetPrepaidTariffVolumeiQuota() uint64 {
	if m != nil {
		return m.PrepaidTariffVolumeiQuota
	}
	return 0
}

func (m *AcctMaFlowFeatBagData) GetPrepaidTariffVolumeoQuota() uint64 {
	if m != nil {
		return m.PrepaidTariffVolumeoQuota
	}
	return 0
}

func (m *AcctMaFlowFeatBagData) GetPrepaidTariffVolumebQuota() uint64 {
	if m != nil {
		return m.PrepaidTariffVolumebQuota
	}
	return 0
}

func (m *AcctMaFlowFeatBagData) GetFlowAccountingMethodListName() string {
	if m != nil {
		return m.FlowAccountingMethodListName
	}
	return ""
}

func (m *AcctMaFlowFeatBagData) GetPrepaidCfg() string {
	if m != nil {
		return m.PrepaidCfg
	}
	return ""
}

func (m *AcctMaFlowFeatBagData) GetPrepaidTimeState() string {
	if m != nil {
		return m.PrepaidTimeState
	}
	return ""
}

func (m *AcctMaFlowFeatBagData) GetPrepaidVolumeState() string {
	if m != nil {
		return m.PrepaidVolumeState
	}
	return ""
}

func (m *AcctMaFlowFeatBagData) GetPrepaidChargingRule() string {
	if m != nil {
		return m.PrepaidChargingRule
	}
	return ""
}

type AcctMaFlowFeatures struct {
	FlowFeatureData      *AcctMaFlowFeatBagData `protobuf:"bytes,50,opt,name=flow_feature_data,json=flowFeatureData,proto3" json:"flow_feature_data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *AcctMaFlowFeatures) Reset()         { *m = AcctMaFlowFeatures{} }
func (m *AcctMaFlowFeatures) String() string { return proto.CompactTextString(m) }
func (*AcctMaFlowFeatures) ProtoMessage()    {}
func (*AcctMaFlowFeatures) Descriptor() ([]byte, []int) {
	return fileDescriptor_d958de7ce1c87ae2, []int{2}
}

func (m *AcctMaFlowFeatures) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AcctMaFlowFeatures.Unmarshal(m, b)
}
func (m *AcctMaFlowFeatures) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AcctMaFlowFeatures.Marshal(b, m, deterministic)
}
func (m *AcctMaFlowFeatures) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AcctMaFlowFeatures.Merge(m, src)
}
func (m *AcctMaFlowFeatures) XXX_Size() int {
	return xxx_messageInfo_AcctMaFlowFeatures.Size(m)
}
func (m *AcctMaFlowFeatures) XXX_DiscardUnknown() {
	xxx_messageInfo_AcctMaFlowFeatures.DiscardUnknown(m)
}

var xxx_messageInfo_AcctMaFlowFeatures proto.InternalMessageInfo

func (m *AcctMaFlowFeatures) GetFlowFeatureData() *AcctMaFlowFeatBagData {
	if m != nil {
		return m.FlowFeatureData
	}
	return nil
}

func init() {
	proto.RegisterType((*AcctMaFlowFeatures_KEYS)(nil), "cisco_ios_xr_subscriber_accounting_oper.subscriber_accounting.nodes.node.subscriber_accounting_flow_features.subscriber_accounting_flow_feature.acct_ma_flow_features_KEYS")
	proto.RegisterType((*AcctMaFlowFeatBagData)(nil), "cisco_ios_xr_subscriber_accounting_oper.subscriber_accounting.nodes.node.subscriber_accounting_flow_features.subscriber_accounting_flow_feature.acct_ma_flow_feat_bag_data")
	proto.RegisterType((*AcctMaFlowFeatures)(nil), "cisco_ios_xr_subscriber_accounting_oper.subscriber_accounting.nodes.node.subscriber_accounting_flow_features.subscriber_accounting_flow_feature.acct_ma_flow_features")
}

func init() { proto.RegisterFile("acct_ma_flow_features.proto", fileDescriptor_d958de7ce1c87ae2) }

var fileDescriptor_d958de7ce1c87ae2 = []byte{
	// 1026 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xcc, 0x97, 0xdd, 0x72, 0x1b, 0x35,
	0x14, 0xc7, 0xc7, 0xa5, 0xa4, 0xad, 0xd2, 0xb4, 0x89, 0x12, 0xd7, 0xca, 0x47, 0x53, 0x27, 0x50,
	0x30, 0x50, 0x4c, 0x09, 0xdf, 0xc3, 0x30, 0xa5, 0xa4, 0xcd, 0x4c, 0x86, 0xd2, 0xa1, 0x6e, 0x1b,
	0x86, 0x2b, 0x8d, 0xbc, 0xab, 0x5d, 0x6b, 0x46, 0x5e, 0x39, 0x5a, 0x6d, 0xc2, 0x5b, 0xf0, 0x20,
	0xbc, 0x10, 0xcf, 0x01, 0x2f, 0xc0, 0xe8, 0xac, 0x64, 0xaf, 0xec, 0x5d, 0xe7, 0x96, 0x9b, 0xcc,
	0x44, 0xe7, 0xfc, 0xfe, 0xe7, 0xaf, 0xa3, 0x0f, 0x6b, 0xd1, 0x2e, 0x8b, 0x22, 0x43, 0xc7, 0x8c,
	0x26, 0x52, 0x5d, 0xd2, 0x84, 0x33, 0x53, 0x68, 0x9e, 0xf7, 0x27, 0x5a, 0x19, 0x85, 0xff, 0x6c,
	0x45, 0x22, 0x8f, 0x14, 0x15, 0x2a, 0xa7, 0x7f, 0x68, 0x9a, 0x17, 0xc3, 0x3c, 0xd2, 0x62, 0xc8,
	0x35, 0x65, 0x51, 0xa4, 0x8a, 0xcc, 0x88, 0x2c, 0xa5, 0x6a, 0xc2, 0x75, 0xbf, 0x36, 0xd4, 0xcf,
	0x54, 0xcc, 0x73, 0xf8, 0x5b, 0x9f, 0x30, 0x57, 0xf4, 0xea, 0x9c, 0xc3, 0x33, 0xb4, 0x53, 0x6b,
	0x98, 0xfe, 0xfc, 0xfc, 0xf7, 0xd7, 0xb8, 0x83, 0x6e, 0xd8, 0x62, 0x54, 0xc4, 0xa4, 0xd5, 0x6d,
	0xf5, 0x6e, 0x0d, 0x56, 0xec, 0xbf, 0xa7, 0x31, 0x7e, 0x80, 0x56, 0x23, 0xc9, 0xf2, 0x9c, 0x4a,
	0x36, 0xe4, 0x92, 0x5c, 0xeb, 0xb6, 0x7a, 0x6b, 0x03, 0x04, 0x43, 0x2f, 0xec, 0xc8, 0xe1, 0xbf,
	0xed, 0x1a, 0x61, 0x3a, 0x64, 0x29, 0x8d, 0x99, 0x61, 0xf8, 0x09, 0xda, 0x83, 0xd1, 0x8a, 0x2d,
	0x9e, 0xb1, 0xa1, 0xe4, 0x31, 0x4d, 0x24, 0x4b, 0xa1, 0xda, 0xcd, 0xc1, 0xb6, 0xcd, 0x79, 0x3a,
	0x4d, 0x79, 0x5e, 0x66, 0x9c, 0x48, 0x96, 0xe2, 0x9f, 0xd0, 0x3e, 0x08, 0x88, 0x58, 0x72, 0x6a,
	0xc4, 0x98, 0xab, 0xc2, 0x84, 0x12, 0xd7, 0x40, 0x62, 0xc7, 0x66, 0x9d, 0xc6, 0x92, 0xbf, 0x29,
	0x73, 0xaa, 0x1a, 0x8f, 0xd1, 0xd6, 0x44, 0xf3, 0x09, 0x13, 0x71, 0x48, 0xbe, 0x03, 0x24, 0x76,
	0xb1, 0x2a, 0xf1, 0x04, 0xed, 0x79, 0x42, 0x73, 0x56, 0x98, 0x11, 0x94, 0xd6, 0x1e, 0x27, 0xd7,
	0x4b, 0xdb, 0x2e, 0x67, 0x00, 0x29, 0xb6, 0xb0, 0x76, 0x22, 0x55, 0x81, 0x3a, 0xe7, 0xe4, 0xdd,
	0x40, 0x60, 0xd1, 0x37, 0x7e, 0x84, 0xbc, 0x2f, 0x9a, 0x88, 0x8c, 0x49, 0x5a, 0x64, 0xc2, 0x90,
	0x15, 0xc0, 0xd6, 0x5d, 0xe4, 0xc4, 0x06, 0xde, 0x66, 0xc2, 0xd8, 0xec, 0x22, 0x13, 0xe7, 0x05,
	0xa7, 0xd5, 0xd5, 0xba, 0x01, 0xab, 0xb5, 0x5e, 0x46, 0x8e, 0xa7, 0x6b, 0x86, 0x1f, 0xa2, 0x3b,
	0xd0, 0xd3, 0x58, 0x68, 0x1e, 0x19, 0xa1, 0x32, 0x72, 0x13, 0x32, 0xd7, 0xec, 0xe8, 0x33, 0x3f,
	0x88, 0x4f, 0xd1, 0xc1, 0xfc, 0xda, 0x4d, 0xb8, 0x16, 0x2a, 0x16, 0x11, 0x15, 0x99, 0xe1, 0xfa,
	0x82, 0x49, 0x72, 0x0b, 0xc8, 0xfd, 0x70, 0x01, 0x7f, 0x75, 0x69, 0xa7, 0x2e, 0x0b, 0x7f, 0x85,
	0x3a, 0x8b, 0xab, 0x78, 0xc1, 0x64, 0xc1, 0x09, 0x02, 0x81, 0xad, 0xb9, 0xe5, 0x3b, 0xb3, 0xb1,
	0x6a, 0x13, 0x2c, 0x44, 0xcf, 0x0b, 0x65, 0x18, 0x59, 0x2d, 0xa7, 0xe5, 0x22, 0x16, 0x78, 0x65,
	0xc7, 0xf1, 0x97, 0xe8, 0x5e, 0x90, 0x6d, 0x46, 0x9a, 0xe7, 0x23, 0x25, 0x63, 0x72, 0xbb, 0xac,
	0x51, 0x21, 0xde, 0xf8, 0x18, 0xfe, 0x06, 0x91, 0x29, 0xa5, 0x0c, 0x93, 0xd5, 0x4a, 0x6b, 0xc0,
	0xb5, 0x3d, 0x67, 0xc3, 0xb3, 0x72, 0xdf, 0xce, 0xc0, 0x0b, 0x25, 0x8b, 0xa0, 0xe0, 0x1d, 0x00,
	0xbd, 0x9d, 0x33, 0x08, 0xcf, 0x4a, 0x56, 0xf6, 0xa3, 0xe6, 0x63, 0x26, 0x32, 0xdb, 0xda, 0x73,
	0x43, 0xee, 0x02, 0x85, 0xa7, 0xbb, 0xca, 0x85, 0x5e, 0x19, 0x7c, 0x84, 0xda, 0x35, 0x04, 0x33,
	0x64, 0x1d, 0x90, 0xcd, 0x05, 0x84, 0x35, 0x31, 0xc2, 0x90, 0x8d, 0x06, 0x46, 0x34, 0x31, 0xc6,
	0x10, 0xdc, 0xc0, 0x18, 0x83, 0xbf, 0x46, 0x9d, 0x45, 0xe6, 0x72, 0xc4, 0xb9, 0x24, 0x9b, 0x41,
	0xff, 0xa6, 0xd4, 0x6f, 0x36, 0x88, 0xfb, 0x68, 0x73, 0xda, 0x78, 0xa6, 0x45, 0x92, 0x40, 0xe7,
	0xc9, 0x16, 0x30, 0x1b, 0xbe, 0xe7, 0x10, 0xb1, 0x4d, 0xc7, 0xdf, 0xa3, 0x9d, 0xda, 0x23, 0x55,
	0x6e, 0xa3, 0x36, 0x60, 0x9d, 0xc5, 0x03, 0x55, 0xee, 0xa4, 0xfa, 0x03, 0x3d, 0xc3, 0xef, 0x01,
	0xbe, 0x78, 0xa0, 0xa7, 0x02, 0x07, 0xe8, 0xb6, 0x17, 0x88, 0xa2, 0x64, 0x44, 0x3a, 0x00, 0xac,
	0xba, 0xb1, 0xe3, 0x28, 0x19, 0x55, 0x27, 0xa4, 0x79, 0x5e, 0x48, 0x43, 0x23, 0x15, 0x73, 0x42,
	0x82, 0x09, 0x0d, 0x20, 0x72, 0xac, 0x62, 0x5e, 0x6d, 0x76, 0xb9, 0x81, 0x84, 0xdb, 0x76, 0xdb,
	0xdd, 0x56, 0xef, 0xfa, 0xb4, 0xd9, 0xe5, 0xee, 0x11, 0xe5, 0xa6, 0x5b, 0x60, 0x94, 0x63, 0x76,
	0x6a, 0x18, 0xd5, 0xc0, 0x0c, 0x1d, 0xb3, 0x5b, 0xc3, 0x0c, 0x4b, 0xe6, 0x07, 0xb4, 0x1b, 0x9e,
	0x8a, 0xd0, 0xe1, 0x1e, 0x90, 0xa4, 0x7a, 0x30, 0x02, 0x9b, 0x0d, 0xb8, 0x37, 0x7b, 0xbf, 0x09,
	0x57, 0x4b, 0x71, 0xef, 0x7b, 0xbf, 0x09, 0x77, 0xe6, 0x2b, 0x3b, 0xc5, 0x9d, 0xcc, 0x22, 0xe7,
	0xb1, 0xf7, 0xfe, 0x00, 0xe8, 0x4e, 0x30, 0xeb, 0xb7, 0x36, 0xbe, 0x0c, 0xf6, 0xce, 0xbb, 0x0d,
	0xb0, 0x33, 0xfe, 0x1d, 0xda, 0x9e, 0x83, 0x35, 0x4f, 0x7c, 0xe1, 0x03, 0x60, 0xc3, 0x4b, 0x61,
	0xc0, 0x13, 0xb1, 0x04, 0xf5, 0x65, 0x0f, 0xeb, 0xd1, 0x65, 0x55, 0x7d, 0xb3, 0xde, 0xab, 0x47,
	0x5d, 0xab, 0x7e, 0x44, 0xf7, 0xe7, 0x50, 0x96, 0xa6, 0x55, 0xd3, 0xef, 0x03, 0xbe, 0x1d, 0xe0,
	0x4f, 0xd3, 0x74, 0xe6, 0xbb, 0x51, 0xc1, 0x7b, 0x7f, 0xd8, 0xa8, 0xa0, 0xae, 0x50, 0xf0, 0x53,
	0xf8, 0xa0, 0x51, 0x61, 0xd8, 0xd4, 0x80, 0x8c, 0x5f, 0xfa, 0x19, 0x7c, 0x58, 0xd3, 0x80, 0x97,
	0xfc, 0x52, 0x2c, 0x41, 0xbd, 0xf5, 0x5e, 0x3d, 0xaa, 0x96, 0xa0, 0xde, 0xf3, 0x47, 0xf5, 0xa8,
	0x33, 0x5c, 0xb9, 0x8e, 0xdc, 0xdd, 0x17, 0x9e, 0xaf, 0x8f, 0x83, 0x19, 0x97, 0x97, 0x60, 0x70,
	0xc0, 0x9a, 0x04, 0xbc, 0xf3, 0x4f, 0x1a, 0x05, 0xd4, 0x72, 0x01, 0xef, 0xff, 0x51, 0xa3, 0x80,
	0x9b, 0xc2, 0x09, 0xea, 0xce, 0xbf, 0x0e, 0xc6, 0xdc, 0x8c, 0x54, 0x4c, 0xa5, 0xc8, 0x0d, 0xcd,
	0xd8, 0x98, 0x93, 0x4f, 0xe1, 0x2d, 0xb9, 0x17, 0x3e, 0x0e, 0x7e, 0x81, 0xac, 0x17, 0x22, 0x37,
	0x2f, 0xd9, 0x98, 0xdb, 0x17, 0xe6, 0xf4, 0x62, 0x4d, 0x52, 0xd2, 0x07, 0x04, 0xf9, 0x7b, 0x35,
	0x49, 0x17, 0x1e, 0x01, 0xb9, 0x61, 0x86, 0x93, 0xcf, 0x20, 0xaf, 0xfa, 0x08, 0x78, 0x6d, 0xc7,
	0xab, 0xbf, 0xad, 0x6e, 0x51, 0xca, 0xfc, 0xc7, 0x90, 0x8f, 0x83, 0xf5, 0x28, 0x89, 0xca, 0xf5,
	0x18, 0x8d, 0x98, 0x4e, 0xed, 0x4c, 0x74, 0x21, 0x39, 0xf9, 0x1c, 0x10, 0x7f, 0x3d, 0x1e, 0xbb,
	0xd8, 0xa0, 0x90, 0xfc, 0xf0, 0x9f, 0x16, 0x6a, 0xd7, 0x3e, 0xa7, 0xf1, 0xdf, 0x2d, 0xb4, 0x51,
	0x1d, 0x81, 0x67, 0x30, 0x39, 0xea, 0xb6, 0x7a, 0xab, 0x47, 0x7f, 0xb5, 0xfa, 0xff, 0xb3, 0xcf,
	0x82, 0x7e, 0xf3, 0xd3, 0x7d, 0x70, 0xd7, 0x8e, 0x9d, 0x94, 0x79, 0xcf, 0x98, 0x61, 0xc3, 0x15,
	0xf8, 0xb6, 0xf9, 0xe2, 0xbf, 0x00, 0x00, 0x00, 0xff, 0xff, 0xe8, 0x0a, 0x79, 0xd6, 0xfa, 0x0c,
	0x00, 0x00,
}
