/*
Copyright 2019 Cisco Systems

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: mpls_io_show_intf_info.proto

package cisco_ios_xr_mpls_io_oper_mpls_ea_nodes_node_interfaces_interface

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type MplsIoShowIntfInfo_KEYS struct {
	NodeName             string   `protobuf:"bytes,1,opt,name=node_name,json=nodeName,proto3" json:"node_name,omitempty"`
	InterfaceName        string   `protobuf:"bytes,2,opt,name=interface_name,json=interfaceName,proto3" json:"interface_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MplsIoShowIntfInfo_KEYS) Reset()         { *m = MplsIoShowIntfInfo_KEYS{} }
func (m *MplsIoShowIntfInfo_KEYS) String() string { return proto.CompactTextString(m) }
func (*MplsIoShowIntfInfo_KEYS) ProtoMessage()    {}
func (*MplsIoShowIntfInfo_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_575f8f26baae8c2c, []int{0}
}

func (m *MplsIoShowIntfInfo_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsIoShowIntfInfo_KEYS.Unmarshal(m, b)
}
func (m *MplsIoShowIntfInfo_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsIoShowIntfInfo_KEYS.Marshal(b, m, deterministic)
}
func (m *MplsIoShowIntfInfo_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsIoShowIntfInfo_KEYS.Merge(m, src)
}
func (m *MplsIoShowIntfInfo_KEYS) XXX_Size() int {
	return xxx_messageInfo_MplsIoShowIntfInfo_KEYS.Size(m)
}
func (m *MplsIoShowIntfInfo_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsIoShowIntfInfo_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_MplsIoShowIntfInfo_KEYS proto.InternalMessageInfo

func (m *MplsIoShowIntfInfo_KEYS) GetNodeName() string {
	if m != nil {
		return m.NodeName
	}
	return ""
}

func (m *MplsIoShowIntfInfo_KEYS) GetInterfaceName() string {
	if m != nil {
		return m.InterfaceName
	}
	return ""
}

type MplsIoShowIntfInfo struct {
	Mtu                  uint32   `protobuf:"varint,50,opt,name=mtu,proto3" json:"mtu,omitempty"`
	BkpLabelStackDepth   uint32   `protobuf:"varint,51,opt,name=bkp_label_stack_depth,json=bkpLabelStackDepth,proto3" json:"bkp_label_stack_depth,omitempty"`
	SrteLabelStackDepth  uint32   `protobuf:"varint,52,opt,name=srte_label_stack_depth,json=srteLabelStackDepth,proto3" json:"srte_label_stack_depth,omitempty"`
	PriLabelStackDepth   uint32   `protobuf:"varint,53,opt,name=pri_label_stack_depth,json=priLabelStackDepth,proto3" json:"pri_label_stack_depth,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MplsIoShowIntfInfo) Reset()         { *m = MplsIoShowIntfInfo{} }
func (m *MplsIoShowIntfInfo) String() string { return proto.CompactTextString(m) }
func (*MplsIoShowIntfInfo) ProtoMessage()    {}
func (*MplsIoShowIntfInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_575f8f26baae8c2c, []int{1}
}

func (m *MplsIoShowIntfInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsIoShowIntfInfo.Unmarshal(m, b)
}
func (m *MplsIoShowIntfInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsIoShowIntfInfo.Marshal(b, m, deterministic)
}
func (m *MplsIoShowIntfInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsIoShowIntfInfo.Merge(m, src)
}
func (m *MplsIoShowIntfInfo) XXX_Size() int {
	return xxx_messageInfo_MplsIoShowIntfInfo.Size(m)
}
func (m *MplsIoShowIntfInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsIoShowIntfInfo.DiscardUnknown(m)
}

var xxx_messageInfo_MplsIoShowIntfInfo proto.InternalMessageInfo

func (m *MplsIoShowIntfInfo) GetMtu() uint32 {
	if m != nil {
		return m.Mtu
	}
	return 0
}

func (m *MplsIoShowIntfInfo) GetBkpLabelStackDepth() uint32 {
	if m != nil {
		return m.BkpLabelStackDepth
	}
	return 0
}

func (m *MplsIoShowIntfInfo) GetSrteLabelStackDepth() uint32 {
	if m != nil {
		return m.SrteLabelStackDepth
	}
	return 0
}

func (m *MplsIoShowIntfInfo) GetPriLabelStackDepth() uint32 {
	if m != nil {
		return m.PriLabelStackDepth
	}
	return 0
}

func init() {
	proto.RegisterType((*MplsIoShowIntfInfo_KEYS)(nil), "cisco_ios_xr_mpls_io_oper.mpls_ea.nodes.node.interfaces.interface.mpls_io_show_intf_info_KEYS")
	proto.RegisterType((*MplsIoShowIntfInfo)(nil), "cisco_ios_xr_mpls_io_oper.mpls_ea.nodes.node.interfaces.interface.mpls_io_show_intf_info")
}

func init() { proto.RegisterFile("mpls_io_show_intf_info.proto", fileDescriptor_575f8f26baae8c2c) }

var fileDescriptor_575f8f26baae8c2c = []byte{
	// 249 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x90, 0xc1, 0x4a, 0x03, 0x31,
	0x10, 0x86, 0x59, 0x05, 0xb1, 0x03, 0x15, 0x89, 0xb4, 0x2c, 0xd4, 0x43, 0x29, 0x08, 0x3d, 0x2d,
	0xd4, 0xd5, 0x07, 0x10, 0xf4, 0xa4, 0x78, 0x68, 0x4f, 0x9e, 0x86, 0xec, 0x76, 0x96, 0x86, 0xdd,
	0xcd, 0x84, 0x24, 0xa2, 0x2f, 0xe8, 0x7b, 0xc9, 0xa4, 0x58, 0x61, 0xd9, 0x4b, 0x98, 0xcc, 0xff,
	0x7d, 0xf9, 0x21, 0x70, 0xdb, 0xbb, 0x2e, 0xa0, 0x61, 0x0c, 0x07, 0xfe, 0x42, 0x63, 0x63, 0x83,
	0xc6, 0x36, 0x5c, 0x38, 0xcf, 0x91, 0xd5, 0x53, 0x6d, 0x42, 0xcd, 0x68, 0x38, 0xe0, 0xb7, 0xc7,
	0x3f, 0x94, 0x1d, 0xf9, 0x22, 0x5d, 0x48, 0x17, 0x96, 0xf7, 0x14, 0xd2, 0x59, 0x18, 0x1b, 0xc9,
	0x37, 0xba, 0xa6, 0xf0, 0x3f, 0xae, 0x34, 0x2c, 0xc6, 0x2b, 0xf0, 0xf5, 0xe5, 0x63, 0xa7, 0x16,
	0x30, 0x11, 0x17, 0xad, 0xee, 0x29, 0xcf, 0x96, 0xd9, 0x7a, 0xb2, 0xbd, 0x94, 0xc5, 0xbb, 0xee,
	0x49, 0xdd, 0xc1, 0xd5, 0xe9, 0xa1, 0x23, 0x71, 0x96, 0x88, 0xe9, 0x69, 0x2b, 0xd8, 0xea, 0x27,
	0x83, 0xf9, 0x78, 0x87, 0xba, 0x86, 0xf3, 0x3e, 0x7e, 0xe6, 0xf7, 0xcb, 0x6c, 0x3d, 0xdd, 0xca,
	0xa8, 0x36, 0x30, 0xab, 0x5a, 0x87, 0x9d, 0xae, 0xa8, 0xc3, 0x10, 0x75, 0xdd, 0xe2, 0x9e, 0x5c,
	0x3c, 0xe4, 0x65, 0x62, 0x54, 0xd5, 0xba, 0x37, 0xc9, 0x76, 0x12, 0x3d, 0x4b, 0xa2, 0x4a, 0x98,
	0x07, 0x1f, 0x69, 0xc4, 0x79, 0x48, 0xce, 0x8d, 0xa4, 0x43, 0x69, 0x03, 0x33, 0xe7, 0xcd, 0x88,
	0xf3, 0x78, 0xec, 0x71, 0xde, 0x0c, 0x94, 0xea, 0x22, 0x7d, 0x7a, 0xf9, 0x1b, 0x00, 0x00, 0xff,
	0xff, 0x19, 0xaf, 0xae, 0x34, 0x94, 0x01, 0x00, 0x00,
}
