/*
Copyright 2019 Cisco Systems

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: isd_inv_info_container.proto

package cisco_ios_xr_spirit_install_instmgr_oper_software_install_issu_inventory

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type IsdInvInfoContainer_KEYS struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IsdInvInfoContainer_KEYS) Reset()         { *m = IsdInvInfoContainer_KEYS{} }
func (m *IsdInvInfoContainer_KEYS) String() string { return proto.CompactTextString(m) }
func (*IsdInvInfoContainer_KEYS) ProtoMessage()    {}
func (*IsdInvInfoContainer_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_0bc142dc6fd8a7b4, []int{0}
}

func (m *IsdInvInfoContainer_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IsdInvInfoContainer_KEYS.Unmarshal(m, b)
}
func (m *IsdInvInfoContainer_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IsdInvInfoContainer_KEYS.Marshal(b, m, deterministic)
}
func (m *IsdInvInfoContainer_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IsdInvInfoContainer_KEYS.Merge(m, src)
}
func (m *IsdInvInfoContainer_KEYS) XXX_Size() int {
	return xxx_messageInfo_IsdInvInfoContainer_KEYS.Size(m)
}
func (m *IsdInvInfoContainer_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_IsdInvInfoContainer_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_IsdInvInfoContainer_KEYS proto.InternalMessageInfo

type IsdInvInfoSt struct {
	NodeId               int32    `protobuf:"zigzag32,1,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	NodeType             string   `protobuf:"bytes,2,opt,name=node_type,json=nodeType,proto3" json:"node_type,omitempty"`
	IssuNodeRole         string   `protobuf:"bytes,3,opt,name=issu_node_role,json=issuNodeRole,proto3" json:"issu_node_role,omitempty"`
	NodeState            string   `protobuf:"bytes,4,opt,name=node_state,json=nodeState,proto3" json:"node_state,omitempty"`
	NodeRole             string   `protobuf:"bytes,5,opt,name=node_role,json=nodeRole,proto3" json:"node_role,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IsdInvInfoSt) Reset()         { *m = IsdInvInfoSt{} }
func (m *IsdInvInfoSt) String() string { return proto.CompactTextString(m) }
func (*IsdInvInfoSt) ProtoMessage()    {}
func (*IsdInvInfoSt) Descriptor() ([]byte, []int) {
	return fileDescriptor_0bc142dc6fd8a7b4, []int{1}
}

func (m *IsdInvInfoSt) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IsdInvInfoSt.Unmarshal(m, b)
}
func (m *IsdInvInfoSt) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IsdInvInfoSt.Marshal(b, m, deterministic)
}
func (m *IsdInvInfoSt) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IsdInvInfoSt.Merge(m, src)
}
func (m *IsdInvInfoSt) XXX_Size() int {
	return xxx_messageInfo_IsdInvInfoSt.Size(m)
}
func (m *IsdInvInfoSt) XXX_DiscardUnknown() {
	xxx_messageInfo_IsdInvInfoSt.DiscardUnknown(m)
}

var xxx_messageInfo_IsdInvInfoSt proto.InternalMessageInfo

func (m *IsdInvInfoSt) GetNodeId() int32 {
	if m != nil {
		return m.NodeId
	}
	return 0
}

func (m *IsdInvInfoSt) GetNodeType() string {
	if m != nil {
		return m.NodeType
	}
	return ""
}

func (m *IsdInvInfoSt) GetIssuNodeRole() string {
	if m != nil {
		return m.IssuNodeRole
	}
	return ""
}

func (m *IsdInvInfoSt) GetNodeState() string {
	if m != nil {
		return m.NodeState
	}
	return ""
}

func (m *IsdInvInfoSt) GetNodeRole() string {
	if m != nil {
		return m.NodeRole
	}
	return ""
}

type IsdInvInfoContainer struct {
	Invinfo              []*IsdInvInfoSt `protobuf:"bytes,50,rep,name=invinfo,proto3" json:"invinfo,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *IsdInvInfoContainer) Reset()         { *m = IsdInvInfoContainer{} }
func (m *IsdInvInfoContainer) String() string { return proto.CompactTextString(m) }
func (*IsdInvInfoContainer) ProtoMessage()    {}
func (*IsdInvInfoContainer) Descriptor() ([]byte, []int) {
	return fileDescriptor_0bc142dc6fd8a7b4, []int{2}
}

func (m *IsdInvInfoContainer) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IsdInvInfoContainer.Unmarshal(m, b)
}
func (m *IsdInvInfoContainer) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IsdInvInfoContainer.Marshal(b, m, deterministic)
}
func (m *IsdInvInfoContainer) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IsdInvInfoContainer.Merge(m, src)
}
func (m *IsdInvInfoContainer) XXX_Size() int {
	return xxx_messageInfo_IsdInvInfoContainer.Size(m)
}
func (m *IsdInvInfoContainer) XXX_DiscardUnknown() {
	xxx_messageInfo_IsdInvInfoContainer.DiscardUnknown(m)
}

var xxx_messageInfo_IsdInvInfoContainer proto.InternalMessageInfo

func (m *IsdInvInfoContainer) GetInvinfo() []*IsdInvInfoSt {
	if m != nil {
		return m.Invinfo
	}
	return nil
}

func init() {
	proto.RegisterType((*IsdInvInfoContainer_KEYS)(nil), "cisco_ios_xr_spirit_install_instmgr_oper.software_install.issu.inventory.isd_inv_info_container_KEYS")
	proto.RegisterType((*IsdInvInfoSt)(nil), "cisco_ios_xr_spirit_install_instmgr_oper.software_install.issu.inventory.isd_inv_info_st")
	proto.RegisterType((*IsdInvInfoContainer)(nil), "cisco_ios_xr_spirit_install_instmgr_oper.software_install.issu.inventory.isd_inv_info_container")
}

func init() { proto.RegisterFile("isd_inv_info_container.proto", fileDescriptor_0bc142dc6fd8a7b4) }

var fileDescriptor_0bc142dc6fd8a7b4 = []byte{
	// 270 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x91, 0xc1, 0x4a, 0x03, 0x31,
	0x10, 0x86, 0x59, 0xab, 0xad, 0x8d, 0xa2, 0x98, 0x83, 0x2e, 0xd4, 0x42, 0x59, 0x3c, 0xec, 0x29,
	0x87, 0xfa, 0x0c, 0x82, 0x22, 0x78, 0xd8, 0x7a, 0xe9, 0x69, 0x58, 0x77, 0xa7, 0x32, 0xb0, 0x66,
	0x42, 0x26, 0xae, 0xee, 0x43, 0xf8, 0x20, 0xbe, 0xa5, 0x24, 0x50, 0x45, 0xe9, 0xd1, 0x53, 0xc8,
	0xff, 0xff, 0x93, 0x8f, 0xfc, 0xa3, 0x2e, 0x49, 0x5a, 0x20, 0xdb, 0x03, 0xd9, 0x0d, 0x43, 0xc3,
	0x36, 0xd4, 0x64, 0xd1, 0x1b, 0xe7, 0x39, 0xb0, 0xbe, 0x6d, 0x48, 0x1a, 0x06, 0x62, 0x81, 0x77,
	0x0f, 0xe2, 0xc8, 0x53, 0x00, 0xb2, 0x12, 0xea, 0xae, 0x4b, 0xe7, 0xcb, 0xb3, 0x07, 0x76, 0xe8,
	0x8d, 0xf0, 0x26, 0xbc, 0xd5, 0x1e, 0xb7, 0xae, 0x21, 0x91, 0x57, 0x43, 0xb6, 0x47, 0x1b, 0xd8,
	0x0f, 0xc5, 0x5c, 0xcd, 0x76, 0x93, 0xe0, 0xfe, 0x66, 0xbd, 0x2a, 0x3e, 0x33, 0x75, 0xfa, 0xcb,
	0x97, 0xa0, 0x2f, 0xd4, 0xc4, 0x72, 0x8b, 0x40, 0x6d, 0x9e, 0x2d, 0xb2, 0xf2, 0xac, 0x1a, 0xc7,
	0xeb, 0x5d, 0xab, 0x67, 0x6a, 0x9a, 0x8c, 0x30, 0x38, 0xcc, 0xf7, 0x16, 0x59, 0x39, 0xad, 0x0e,
	0xa3, 0xf0, 0x38, 0x38, 0xd4, 0x57, 0xea, 0x24, 0xa2, 0x21, 0x25, 0x3c, 0x77, 0x98, 0x8f, 0x52,
	0xe2, 0x38, 0xaa, 0x0f, 0xdc, 0x62, 0xc5, 0x1d, 0xea, 0xb9, 0x52, 0x29, 0x20, 0xa1, 0x0e, 0x98,
	0xef, 0xa7, 0x44, 0x7a, 0x74, 0x15, 0x85, 0x6f, 0x42, 0x9a, 0x3f, 0xf8, 0x21, 0xc4, 0xd9, 0xe2,
	0x23, 0x53, 0xe7, 0xbb, 0xff, 0xa2, 0x45, 0x4d, 0xc8, 0xf6, 0x51, 0xcc, 0x97, 0x8b, 0x51, 0x79,
	0xb4, 0x5c, 0x9b, 0xff, 0x6a, 0xd0, 0xfc, 0xa9, 0xa7, 0xda, 0x92, 0x9e, 0xc6, 0x69, 0x57, 0xd7,
	0x5f, 0x01, 0x00, 0x00, 0xff, 0xff, 0x7c, 0x18, 0x00, 0xe3, 0xcb, 0x01, 0x00, 0x00,
}
