/*
Copyright 2019 Cisco Systems

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: ipsla_oper_state_bag.proto

package cisco_ios_xr_man_ipsla_oper_ipsla_operation_data_operations_operation_common_operational_state

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type IpslaOperStateBag_KEYS struct {
	OperationId          uint32   `protobuf:"varint,1,opt,name=operation_id,json=operationId,proto3" json:"operation_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IpslaOperStateBag_KEYS) Reset()         { *m = IpslaOperStateBag_KEYS{} }
func (m *IpslaOperStateBag_KEYS) String() string { return proto.CompactTextString(m) }
func (*IpslaOperStateBag_KEYS) ProtoMessage()    {}
func (*IpslaOperStateBag_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_32675a9b4d21a2a3, []int{0}
}

func (m *IpslaOperStateBag_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IpslaOperStateBag_KEYS.Unmarshal(m, b)
}
func (m *IpslaOperStateBag_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IpslaOperStateBag_KEYS.Marshal(b, m, deterministic)
}
func (m *IpslaOperStateBag_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IpslaOperStateBag_KEYS.Merge(m, src)
}
func (m *IpslaOperStateBag_KEYS) XXX_Size() int {
	return xxx_messageInfo_IpslaOperStateBag_KEYS.Size(m)
}
func (m *IpslaOperStateBag_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_IpslaOperStateBag_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_IpslaOperStateBag_KEYS proto.InternalMessageInfo

func (m *IpslaOperStateBag_KEYS) GetOperationId() uint32 {
	if m != nil {
		return m.OperationId
	}
	return 0
}

type IpslaOperStateBag struct {
	ModificationTime         uint64   `protobuf:"varint,50,opt,name=modification_time,json=modificationTime,proto3" json:"modification_time,omitempty"`
	StartTime                uint64   `protobuf:"varint,51,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	AttemptCount             uint32   `protobuf:"varint,52,opt,name=attempt_count,json=attemptCount,proto3" json:"attempt_count,omitempty"`
	SkippedCount             uint32   `protobuf:"varint,53,opt,name=skipped_count,json=skippedCount,proto3" json:"skipped_count,omitempty"`
	LifeRemaining            uint32   `protobuf:"varint,54,opt,name=life_remaining,json=lifeRemaining,proto3" json:"life_remaining,omitempty"`
	Frequency                uint32   `protobuf:"varint,55,opt,name=frequency,proto3" json:"frequency,omitempty"`
	Recurring                bool     `protobuf:"varint,56,opt,name=recurring,proto3" json:"recurring,omitempty"`
	OperationalState         string   `protobuf:"bytes,57,opt,name=operational_state,json=operationalState,proto3" json:"operational_state,omitempty"`
	Flags                    uint32   `protobuf:"varint,58,opt,name=flags,proto3" json:"flags,omitempty"`
	LocalPort                uint32   `protobuf:"varint,59,opt,name=local_port,json=localPort,proto3" json:"local_port,omitempty"`
	UnexpectedPackets        uint32   `protobuf:"varint,60,opt,name=unexpected_packets,json=unexpectedPackets,proto3" json:"unexpected_packets,omitempty"`
	UnexpectedControlPackets uint32   `protobuf:"varint,61,opt,name=unexpected_control_packets,json=unexpectedControlPackets,proto3" json:"unexpected_control_packets,omitempty"`
	OperationTime            uint64   `protobuf:"varint,62,opt,name=operation_time,json=operationTime,proto3" json:"operation_time,omitempty"`
	XXX_NoUnkeyedLiteral     struct{} `json:"-"`
	XXX_unrecognized         []byte   `json:"-"`
	XXX_sizecache            int32    `json:"-"`
}

func (m *IpslaOperStateBag) Reset()         { *m = IpslaOperStateBag{} }
func (m *IpslaOperStateBag) String() string { return proto.CompactTextString(m) }
func (*IpslaOperStateBag) ProtoMessage()    {}
func (*IpslaOperStateBag) Descriptor() ([]byte, []int) {
	return fileDescriptor_32675a9b4d21a2a3, []int{1}
}

func (m *IpslaOperStateBag) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IpslaOperStateBag.Unmarshal(m, b)
}
func (m *IpslaOperStateBag) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IpslaOperStateBag.Marshal(b, m, deterministic)
}
func (m *IpslaOperStateBag) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IpslaOperStateBag.Merge(m, src)
}
func (m *IpslaOperStateBag) XXX_Size() int {
	return xxx_messageInfo_IpslaOperStateBag.Size(m)
}
func (m *IpslaOperStateBag) XXX_DiscardUnknown() {
	xxx_messageInfo_IpslaOperStateBag.DiscardUnknown(m)
}

var xxx_messageInfo_IpslaOperStateBag proto.InternalMessageInfo

func (m *IpslaOperStateBag) GetModificationTime() uint64 {
	if m != nil {
		return m.ModificationTime
	}
	return 0
}

func (m *IpslaOperStateBag) GetStartTime() uint64 {
	if m != nil {
		return m.StartTime
	}
	return 0
}

func (m *IpslaOperStateBag) GetAttemptCount() uint32 {
	if m != nil {
		return m.AttemptCount
	}
	return 0
}

func (m *IpslaOperStateBag) GetSkippedCount() uint32 {
	if m != nil {
		return m.SkippedCount
	}
	return 0
}

func (m *IpslaOperStateBag) GetLifeRemaining() uint32 {
	if m != nil {
		return m.LifeRemaining
	}
	return 0
}

func (m *IpslaOperStateBag) GetFrequency() uint32 {
	if m != nil {
		return m.Frequency
	}
	return 0
}

func (m *IpslaOperStateBag) GetRecurring() bool {
	if m != nil {
		return m.Recurring
	}
	return false
}

func (m *IpslaOperStateBag) GetOperationalState() string {
	if m != nil {
		return m.OperationalState
	}
	return ""
}

func (m *IpslaOperStateBag) GetFlags() uint32 {
	if m != nil {
		return m.Flags
	}
	return 0
}

func (m *IpslaOperStateBag) GetLocalPort() uint32 {
	if m != nil {
		return m.LocalPort
	}
	return 0
}

func (m *IpslaOperStateBag) GetUnexpectedPackets() uint32 {
	if m != nil {
		return m.UnexpectedPackets
	}
	return 0
}

func (m *IpslaOperStateBag) GetUnexpectedControlPackets() uint32 {
	if m != nil {
		return m.UnexpectedControlPackets
	}
	return 0
}

func (m *IpslaOperStateBag) GetOperationTime() uint64 {
	if m != nil {
		return m.OperationTime
	}
	return 0
}

func init() {
	proto.RegisterType((*IpslaOperStateBag_KEYS)(nil), "cisco_ios_xr_man_ipsla_oper.ipsla.operation_data.operations.operation.common.operational_state.ipsla_oper_state_bag_KEYS")
	proto.RegisterType((*IpslaOperStateBag)(nil), "cisco_ios_xr_man_ipsla_oper.ipsla.operation_data.operations.operation.common.operational_state.ipsla_oper_state_bag")
}

func init() { proto.RegisterFile("ipsla_oper_state_bag.proto", fileDescriptor_32675a9b4d21a2a3) }

var fileDescriptor_32675a9b4d21a2a3 = []byte{
	// 397 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x92, 0xcf, 0x8b, 0xd4, 0x30,
	0x14, 0xc7, 0x29, 0xac, 0xe2, 0xc4, 0xed, 0xb2, 0x1b, 0xf6, 0x10, 0x17, 0x85, 0xba, 0xb2, 0x50,
	0x10, 0x7b, 0x70, 0xfd, 0xed, 0xba, 0x97, 0xc1, 0x83, 0x78, 0x19, 0x3a, 0x5e, 0xbc, 0x18, 0x32,
	0x69, 0x3a, 0x84, 0x69, 0x7e, 0x98, 0xbc, 0xc2, 0xf8, 0x07, 0xf8, 0x7f, 0x4b, 0x92, 0x99, 0x49,
	0xc1, 0xb9, 0x25, 0x9f, 0xef, 0xe7, 0xe5, 0xb5, 0x79, 0x41, 0x57, 0xd2, 0xfa, 0x81, 0x51, 0x63,
	0x85, 0xa3, 0x1e, 0x18, 0x08, 0xba, 0x62, 0xeb, 0xc6, 0x3a, 0x03, 0x06, 0xff, 0xe2, 0xd2, 0x73,
	0x43, 0xa5, 0xf1, 0x74, 0xeb, 0xa8, 0x62, 0x9a, 0x66, 0xb9, 0x89, 0xcb, 0x26, 0x2c, 0x19, 0x48,
	0xa3, 0x69, 0xc7, 0x60, 0xb2, 0xf5, 0x79, 0xd9, 0x70, 0xa3, 0x94, 0xd1, 0x19, 0xb0, 0x21, 0x75,
	0xba, 0xbe, 0x47, 0x4f, 0x8e, 0x75, 0xa7, 0xdf, 0xbf, 0xfe, 0x5c, 0xe2, 0xe7, 0xe8, 0x34, 0x1f,
	0x2e, 0x3b, 0x52, 0x54, 0x45, 0x5d, 0xb6, 0x8f, 0x0f, 0xec, 0x5b, 0x77, 0xfd, 0xf7, 0x04, 0x5d,
	0x1e, 0x3b, 0x00, 0xbf, 0x44, 0x17, 0xca, 0x74, 0xb2, 0x97, 0x3c, 0x95, 0x83, 0x54, 0x82, 0xbc,
	0xae, 0x8a, 0xfa, 0xa4, 0x3d, 0x9f, 0x06, 0x3f, 0xa4, 0x12, 0xf8, 0x19, 0x42, 0x1e, 0x98, 0x83,
	0x64, 0xdd, 0x46, 0x6b, 0x16, 0x49, 0x8c, 0x5f, 0xa0, 0x92, 0x01, 0x08, 0x65, 0x81, 0x72, 0x33,
	0x6a, 0x20, 0x6f, 0xe2, 0x87, 0x9c, 0xee, 0xe0, 0x3c, 0xb0, 0x20, 0xf9, 0x8d, 0xb4, 0x56, 0x74,
	0x3b, 0xe9, 0x6d, 0x92, 0x76, 0x30, 0x49, 0x37, 0xe8, 0x6c, 0x90, 0xbd, 0xa0, 0x4e, 0x28, 0x26,
	0xb5, 0xd4, 0x6b, 0xf2, 0x2e, 0x5a, 0x65, 0xa0, 0xed, 0x1e, 0xe2, 0xa7, 0x68, 0xd6, 0x3b, 0xf1,
	0x7b, 0x14, 0x9a, 0xff, 0x21, 0xef, 0xa3, 0x91, 0x41, 0x48, 0x9d, 0xe0, 0xa3, 0x73, 0xa1, 0xfe,
	0x43, 0x55, 0xd4, 0x8f, 0xda, 0x0c, 0xc2, 0x8f, 0xff, 0x77, 0xcd, 0xe4, 0x63, 0x55, 0xd4, 0xb3,
	0xf6, 0x7c, 0x12, 0x2c, 0x03, 0xc7, 0x97, 0xe8, 0x41, 0x3f, 0xb0, 0xb5, 0x27, 0x9f, 0x62, 0x93,
	0xb4, 0x09, 0xd7, 0x31, 0x18, 0xce, 0x06, 0x6a, 0x8d, 0x03, 0xf2, 0x39, 0xf5, 0x8f, 0x64, 0x61,
	0x1c, 0xe0, 0x57, 0x08, 0x8f, 0x5a, 0x6c, 0xad, 0xe0, 0x20, 0x3a, 0x6a, 0x19, 0xdf, 0x08, 0xf0,
	0xe4, 0x2e, 0x6a, 0x17, 0x39, 0x59, 0xa4, 0x00, 0xdf, 0xa1, 0xab, 0x89, 0xce, 0x8d, 0x06, 0x67,
	0x86, 0x43, 0xd9, 0x97, 0x58, 0x46, 0xb2, 0x31, 0x4f, 0xc2, 0xbe, 0xfa, 0x06, 0x9d, 0xe5, 0x37,
	0x10, 0xc7, 0x73, 0x1f, 0xc7, 0x53, 0x1e, 0x68, 0x18, 0xd1, 0xea, 0x61, 0x7c, 0xae, 0xb7, 0xff,
	0x02, 0x00, 0x00, 0xff, 0xff, 0x4d, 0x34, 0x5d, 0x5f, 0xcc, 0x02, 0x00, 0x00,
}
