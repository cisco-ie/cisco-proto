/*
Copyright 2019 Cisco Systems

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: autorp_map_traffic_bag.proto

package cisco_ios_xr_ipv4_autorp_oper_auto_rp_active_mapping_agent_traffic

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type AutorpMapTrafficBag_KEYS struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AutorpMapTrafficBag_KEYS) Reset()         { *m = AutorpMapTrafficBag_KEYS{} }
func (m *AutorpMapTrafficBag_KEYS) String() string { return proto.CompactTextString(m) }
func (*AutorpMapTrafficBag_KEYS) ProtoMessage()    {}
func (*AutorpMapTrafficBag_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_08e7c89c2e2fba98, []int{0}
}

func (m *AutorpMapTrafficBag_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AutorpMapTrafficBag_KEYS.Unmarshal(m, b)
}
func (m *AutorpMapTrafficBag_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AutorpMapTrafficBag_KEYS.Marshal(b, m, deterministic)
}
func (m *AutorpMapTrafficBag_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AutorpMapTrafficBag_KEYS.Merge(m, src)
}
func (m *AutorpMapTrafficBag_KEYS) XXX_Size() int {
	return xxx_messageInfo_AutorpMapTrafficBag_KEYS.Size(m)
}
func (m *AutorpMapTrafficBag_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_AutorpMapTrafficBag_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_AutorpMapTrafficBag_KEYS proto.InternalMessageInfo

type AutorpMapTrafficBag struct {
	ActiveSentPackets      uint32   `protobuf:"varint,50,opt,name=active_sent_packets,json=activeSentPackets,proto3" json:"active_sent_packets,omitempty"`
	StandbySentPackets     uint32   `protobuf:"varint,51,opt,name=standby_sent_packets,json=standbySentPackets,proto3" json:"standby_sent_packets,omitempty"`
	ActiveReceivedPackets  uint32   `protobuf:"varint,52,opt,name=active_received_packets,json=activeReceivedPackets,proto3" json:"active_received_packets,omitempty"`
	StandbyReceivedPackets uint32   `protobuf:"varint,53,opt,name=standby_received_packets,json=standbyReceivedPackets,proto3" json:"standby_received_packets,omitempty"`
	XXX_NoUnkeyedLiteral   struct{} `json:"-"`
	XXX_unrecognized       []byte   `json:"-"`
	XXX_sizecache          int32    `json:"-"`
}

func (m *AutorpMapTrafficBag) Reset()         { *m = AutorpMapTrafficBag{} }
func (m *AutorpMapTrafficBag) String() string { return proto.CompactTextString(m) }
func (*AutorpMapTrafficBag) ProtoMessage()    {}
func (*AutorpMapTrafficBag) Descriptor() ([]byte, []int) {
	return fileDescriptor_08e7c89c2e2fba98, []int{1}
}

func (m *AutorpMapTrafficBag) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AutorpMapTrafficBag.Unmarshal(m, b)
}
func (m *AutorpMapTrafficBag) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AutorpMapTrafficBag.Marshal(b, m, deterministic)
}
func (m *AutorpMapTrafficBag) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AutorpMapTrafficBag.Merge(m, src)
}
func (m *AutorpMapTrafficBag) XXX_Size() int {
	return xxx_messageInfo_AutorpMapTrafficBag.Size(m)
}
func (m *AutorpMapTrafficBag) XXX_DiscardUnknown() {
	xxx_messageInfo_AutorpMapTrafficBag.DiscardUnknown(m)
}

var xxx_messageInfo_AutorpMapTrafficBag proto.InternalMessageInfo

func (m *AutorpMapTrafficBag) GetActiveSentPackets() uint32 {
	if m != nil {
		return m.ActiveSentPackets
	}
	return 0
}

func (m *AutorpMapTrafficBag) GetStandbySentPackets() uint32 {
	if m != nil {
		return m.StandbySentPackets
	}
	return 0
}

func (m *AutorpMapTrafficBag) GetActiveReceivedPackets() uint32 {
	if m != nil {
		return m.ActiveReceivedPackets
	}
	return 0
}

func (m *AutorpMapTrafficBag) GetStandbyReceivedPackets() uint32 {
	if m != nil {
		return m.StandbyReceivedPackets
	}
	return 0
}

func init() {
	proto.RegisterType((*AutorpMapTrafficBag_KEYS)(nil), "cisco_ios_xr_ipv4_autorp_oper.auto_rp.active.mapping_agent.traffic.autorp_map_traffic_bag_KEYS")
	proto.RegisterType((*AutorpMapTrafficBag)(nil), "cisco_ios_xr_ipv4_autorp_oper.auto_rp.active.mapping_agent.traffic.autorp_map_traffic_bag")
}

func init() { proto.RegisterFile("autorp_map_traffic_bag.proto", fileDescriptor_08e7c89c2e2fba98) }

var fileDescriptor_08e7c89c2e2fba98 = []byte{
	// 226 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0xd0, 0xbf, 0x4a, 0x04, 0x31,
	0x10, 0xc7, 0x71, 0xae, 0xb1, 0x08, 0x58, 0x18, 0xf5, 0x3c, 0x50, 0x41, 0xae, 0xb2, 0x0a, 0xe2,
	0x9d, 0x62, 0x2d, 0x58, 0xd9, 0xc8, 0x5d, 0x65, 0x35, 0xcc, 0xe6, 0x66, 0x97, 0x20, 0x9b, 0x0c,
	0xc9, 0xb8, 0xe8, 0x3b, 0xfb, 0x10, 0x62, 0x92, 0x15, 0xff, 0x6c, 0xb7, 0xf0, 0xdd, 0xcf, 0xfc,
	0x20, 0xea, 0x0c, 0x5f, 0x25, 0x44, 0x86, 0x1e, 0x19, 0x24, 0x62, 0xdb, 0x3a, 0x0b, 0x0d, 0x76,
	0x86, 0x63, 0x90, 0xa0, 0xef, 0xad, 0x4b, 0x36, 0x80, 0x0b, 0x09, 0xde, 0x22, 0x38, 0x1e, 0xd6,
	0x50, 0xff, 0x0f, 0x4c, 0xd1, 0x7c, 0x7d, 0x43, 0x64, 0x83, 0x56, 0xdc, 0x40, 0xa6, 0x47, 0x66,
	0xe7, 0x3b, 0xc0, 0x8e, 0xbc, 0x98, 0x7a, 0x6d, 0x79, 0xae, 0x4e, 0xa7, 0x37, 0xe0, 0xf1, 0xe1,
	0x79, 0xbb, 0xfc, 0x98, 0xa9, 0xf9, 0x74, 0xd7, 0x46, 0x1d, 0x96, 0xcb, 0x90, 0xc8, 0x0b, 0x30,
	0xda, 0x17, 0x92, 0xb4, 0xb8, 0xbe, 0x98, 0x5d, 0xee, 0x6f, 0x0e, 0x4a, 0xda, 0x92, 0x97, 0xa7,
	0x12, 0xf4, 0x95, 0x3a, 0x4a, 0x82, 0x7e, 0xd7, 0xbc, 0xff, 0x06, 0xab, 0x0c, 0x74, 0x6d, 0x3f,
	0xc5, 0xad, 0x3a, 0xa9, 0x0b, 0x91, 0x2c, 0xb9, 0x81, 0x76, 0xdf, 0x68, 0x9d, 0xd1, 0x71, 0xc9,
	0x9b, 0x5a, 0x47, 0x77, 0xa7, 0x16, 0xe3, 0xd2, 0x3f, 0x78, 0x93, 0xe1, 0xbc, 0xf6, 0x3f, 0xb2,
	0xd9, 0xcb, 0x0f, 0xbb, 0xfa, 0x0c, 0x00, 0x00, 0xff, 0xff, 0x41, 0xcf, 0x2e, 0xc8, 0x78, 0x01,
	0x00, 0x00,
}
