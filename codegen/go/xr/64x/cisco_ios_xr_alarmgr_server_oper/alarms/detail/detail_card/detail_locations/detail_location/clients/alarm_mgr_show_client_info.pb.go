/*
Copyright 2019 Cisco Systems

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: alarm_mgr_show_client_info.proto

package cisco_ios_xr_alarmgr_server_oper_alarms_detail_detail_card_detail_locations_detail_location_clients

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type AlarmMgrShowClientInfo_KEYS struct {
	NodeId               string   `protobuf:"bytes,1,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AlarmMgrShowClientInfo_KEYS) Reset()         { *m = AlarmMgrShowClientInfo_KEYS{} }
func (m *AlarmMgrShowClientInfo_KEYS) String() string { return proto.CompactTextString(m) }
func (*AlarmMgrShowClientInfo_KEYS) ProtoMessage()    {}
func (*AlarmMgrShowClientInfo_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_63783e27523da5ac, []int{0}
}

func (m *AlarmMgrShowClientInfo_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AlarmMgrShowClientInfo_KEYS.Unmarshal(m, b)
}
func (m *AlarmMgrShowClientInfo_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AlarmMgrShowClientInfo_KEYS.Marshal(b, m, deterministic)
}
func (m *AlarmMgrShowClientInfo_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AlarmMgrShowClientInfo_KEYS.Merge(m, src)
}
func (m *AlarmMgrShowClientInfo_KEYS) XXX_Size() int {
	return xxx_messageInfo_AlarmMgrShowClientInfo_KEYS.Size(m)
}
func (m *AlarmMgrShowClientInfo_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_AlarmMgrShowClientInfo_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_AlarmMgrShowClientInfo_KEYS proto.InternalMessageInfo

func (m *AlarmMgrShowClientInfo_KEYS) GetNodeId() string {
	if m != nil {
		return m.NodeId
	}
	return ""
}

type AlarmMgrShowClientData struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Id                   uint32   `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	Location             string   `protobuf:"bytes,3,opt,name=location,proto3" json:"location,omitempty"`
	Handle               string   `protobuf:"bytes,4,opt,name=handle,proto3" json:"handle,omitempty"`
	State                string   `protobuf:"bytes,5,opt,name=state,proto3" json:"state,omitempty"`
	Type                 string   `protobuf:"bytes,6,opt,name=type,proto3" json:"type,omitempty"`
	FilterDisp           bool     `protobuf:"varint,7,opt,name=filter_disp,json=filterDisp,proto3" json:"filter_disp,omitempty"`
	SubscriberId         uint32   `protobuf:"varint,8,opt,name=subscriber_id,json=subscriberId,proto3" json:"subscriber_id,omitempty"`
	FilterSeverity       string   `protobuf:"bytes,9,opt,name=filter_severity,json=filterSeverity,proto3" json:"filter_severity,omitempty"`
	FilterState          string   `protobuf:"bytes,10,opt,name=filter_state,json=filterState,proto3" json:"filter_state,omitempty"`
	FilterGroup          string   `protobuf:"bytes,11,opt,name=filter_group,json=filterGroup,proto3" json:"filter_group,omitempty"`
	ConnectCount         uint32   `protobuf:"varint,12,opt,name=connect_count,json=connectCount,proto3" json:"connect_count,omitempty"`
	ConnectTimestamp     string   `protobuf:"bytes,13,opt,name=connect_timestamp,json=connectTimestamp,proto3" json:"connect_timestamp,omitempty"`
	GetCount             uint32   `protobuf:"varint,14,opt,name=get_count,json=getCount,proto3" json:"get_count,omitempty"`
	SubscribeCount       uint32   `protobuf:"varint,15,opt,name=subscribe_count,json=subscribeCount,proto3" json:"subscribe_count,omitempty"`
	ReportCount          uint32   `protobuf:"varint,16,opt,name=report_count,json=reportCount,proto3" json:"report_count,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AlarmMgrShowClientData) Reset()         { *m = AlarmMgrShowClientData{} }
func (m *AlarmMgrShowClientData) String() string { return proto.CompactTextString(m) }
func (*AlarmMgrShowClientData) ProtoMessage()    {}
func (*AlarmMgrShowClientData) Descriptor() ([]byte, []int) {
	return fileDescriptor_63783e27523da5ac, []int{1}
}

func (m *AlarmMgrShowClientData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AlarmMgrShowClientData.Unmarshal(m, b)
}
func (m *AlarmMgrShowClientData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AlarmMgrShowClientData.Marshal(b, m, deterministic)
}
func (m *AlarmMgrShowClientData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AlarmMgrShowClientData.Merge(m, src)
}
func (m *AlarmMgrShowClientData) XXX_Size() int {
	return xxx_messageInfo_AlarmMgrShowClientData.Size(m)
}
func (m *AlarmMgrShowClientData) XXX_DiscardUnknown() {
	xxx_messageInfo_AlarmMgrShowClientData.DiscardUnknown(m)
}

var xxx_messageInfo_AlarmMgrShowClientData proto.InternalMessageInfo

func (m *AlarmMgrShowClientData) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *AlarmMgrShowClientData) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *AlarmMgrShowClientData) GetLocation() string {
	if m != nil {
		return m.Location
	}
	return ""
}

func (m *AlarmMgrShowClientData) GetHandle() string {
	if m != nil {
		return m.Handle
	}
	return ""
}

func (m *AlarmMgrShowClientData) GetState() string {
	if m != nil {
		return m.State
	}
	return ""
}

func (m *AlarmMgrShowClientData) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *AlarmMgrShowClientData) GetFilterDisp() bool {
	if m != nil {
		return m.FilterDisp
	}
	return false
}

func (m *AlarmMgrShowClientData) GetSubscriberId() uint32 {
	if m != nil {
		return m.SubscriberId
	}
	return 0
}

func (m *AlarmMgrShowClientData) GetFilterSeverity() string {
	if m != nil {
		return m.FilterSeverity
	}
	return ""
}

func (m *AlarmMgrShowClientData) GetFilterState() string {
	if m != nil {
		return m.FilterState
	}
	return ""
}

func (m *AlarmMgrShowClientData) GetFilterGroup() string {
	if m != nil {
		return m.FilterGroup
	}
	return ""
}

func (m *AlarmMgrShowClientData) GetConnectCount() uint32 {
	if m != nil {
		return m.ConnectCount
	}
	return 0
}

func (m *AlarmMgrShowClientData) GetConnectTimestamp() string {
	if m != nil {
		return m.ConnectTimestamp
	}
	return ""
}

func (m *AlarmMgrShowClientData) GetGetCount() uint32 {
	if m != nil {
		return m.GetCount
	}
	return 0
}

func (m *AlarmMgrShowClientData) GetSubscribeCount() uint32 {
	if m != nil {
		return m.SubscribeCount
	}
	return 0
}

func (m *AlarmMgrShowClientData) GetReportCount() uint32 {
	if m != nil {
		return m.ReportCount
	}
	return 0
}

type AlarmMgrShowClientInfo struct {
	ClientInfo           []*AlarmMgrShowClientData `protobuf:"bytes,50,rep,name=client_info,json=clientInfo,proto3" json:"client_info,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *AlarmMgrShowClientInfo) Reset()         { *m = AlarmMgrShowClientInfo{} }
func (m *AlarmMgrShowClientInfo) String() string { return proto.CompactTextString(m) }
func (*AlarmMgrShowClientInfo) ProtoMessage()    {}
func (*AlarmMgrShowClientInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_63783e27523da5ac, []int{2}
}

func (m *AlarmMgrShowClientInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AlarmMgrShowClientInfo.Unmarshal(m, b)
}
func (m *AlarmMgrShowClientInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AlarmMgrShowClientInfo.Marshal(b, m, deterministic)
}
func (m *AlarmMgrShowClientInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AlarmMgrShowClientInfo.Merge(m, src)
}
func (m *AlarmMgrShowClientInfo) XXX_Size() int {
	return xxx_messageInfo_AlarmMgrShowClientInfo.Size(m)
}
func (m *AlarmMgrShowClientInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_AlarmMgrShowClientInfo.DiscardUnknown(m)
}

var xxx_messageInfo_AlarmMgrShowClientInfo proto.InternalMessageInfo

func (m *AlarmMgrShowClientInfo) GetClientInfo() []*AlarmMgrShowClientData {
	if m != nil {
		return m.ClientInfo
	}
	return nil
}

func init() {
	proto.RegisterType((*AlarmMgrShowClientInfo_KEYS)(nil), "cisco_ios_xr_alarmgr_server_oper.alarms.detail.detail_card.detail_locations.detail_location.clients.alarm_mgr_show_client_info_KEYS")
	proto.RegisterType((*AlarmMgrShowClientData)(nil), "cisco_ios_xr_alarmgr_server_oper.alarms.detail.detail_card.detail_locations.detail_location.clients.alarm_mgr_show_client_data")
	proto.RegisterType((*AlarmMgrShowClientInfo)(nil), "cisco_ios_xr_alarmgr_server_oper.alarms.detail.detail_card.detail_locations.detail_location.clients.alarm_mgr_show_client_info")
}

func init() { proto.RegisterFile("alarm_mgr_show_client_info.proto", fileDescriptor_63783e27523da5ac) }

var fileDescriptor_63783e27523da5ac = []byte{
	// 452 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x93, 0xcf, 0x6e, 0x13, 0x31,
	0x10, 0x87, 0xb5, 0x69, 0x9a, 0x26, 0xb3, 0xf9, 0x53, 0x2c, 0x04, 0x56, 0x39, 0x74, 0x1b, 0x0e,
	0x8d, 0x84, 0xb4, 0x87, 0x72, 0xe3, 0x0a, 0x08, 0x45, 0xdc, 0x12, 0x2e, 0x9c, 0x2c, 0xc7, 0x9e,
	0xa4, 0x96, 0x76, 0xed, 0x95, 0xed, 0x14, 0x7a, 0xe2, 0x0d, 0x78, 0x06, 0xde, 0x84, 0x57, 0x43,
	0x6b, 0x7b, 0xd3, 0x08, 0x91, 0x2b, 0xa7, 0x78, 0xbe, 0x7c, 0x9e, 0xf9, 0x59, 0x9a, 0x85, 0x82,
	0x57, 0xdc, 0xd6, 0xac, 0xde, 0x59, 0xe6, 0xee, 0xcd, 0x37, 0x26, 0x2a, 0x85, 0xda, 0x33, 0xa5,
	0xb7, 0xa6, 0x6c, 0xac, 0xf1, 0x86, 0x08, 0xa1, 0x9c, 0x30, 0x4c, 0x19, 0xc7, 0xbe, 0x5b, 0x16,
	0xf4, 0x56, 0x46, 0xfb, 0x80, 0x96, 0x99, 0x06, 0x6d, 0x19, 0x98, 0x2b, 0x25, 0x7a, 0xae, 0xaa,
	0xf4, 0xc3, 0x04, 0xb7, 0xb2, 0x3b, 0x57, 0x46, 0x70, 0xaf, 0x8c, 0x76, 0x7f, 0x83, 0x32, 0x8e,
	0x73, 0xf3, 0x77, 0x70, 0x7d, 0x3a, 0x08, 0xfb, 0xfc, 0xf1, 0xeb, 0x9a, 0xbc, 0x84, 0x0b, 0x6d,
	0x24, 0x32, 0x25, 0x69, 0x56, 0x64, 0x8b, 0xd1, 0x6a, 0xd0, 0x96, 0x4b, 0x39, 0xff, 0xd9, 0x87,
	0xab, 0x7f, 0x5f, 0x96, 0xdc, 0x73, 0x42, 0xa0, 0xaf, 0x79, 0x8d, 0xe9, 0x52, 0x38, 0x93, 0x29,
	0xf4, 0x94, 0xa4, 0xbd, 0x22, 0x5b, 0x4c, 0x56, 0x3d, 0x25, 0xc9, 0x15, 0x0c, 0xbb, 0x48, 0xf4,
	0x2c, 0x78, 0x87, 0x9a, 0xbc, 0x80, 0xc1, 0x3d, 0xd7, 0xb2, 0x42, 0xda, 0x8f, 0x63, 0x63, 0x45,
	0x9e, 0xc3, 0xb9, 0xf3, 0xdc, 0x23, 0x3d, 0x0f, 0x38, 0x16, 0xed, 0x34, 0xff, 0xd8, 0x20, 0x1d,
	0xc4, 0x69, 0xed, 0x99, 0x5c, 0x43, 0xbe, 0x55, 0x95, 0x47, 0xcb, 0xa4, 0x72, 0x0d, 0xbd, 0x28,
	0xb2, 0xc5, 0x70, 0x05, 0x11, 0x7d, 0x50, 0xae, 0x21, 0xaf, 0x61, 0xe2, 0xf6, 0x1b, 0x27, 0xac,
	0xda, 0xa0, 0x6d, 0x1f, 0x38, 0x0c, 0xc9, 0xc6, 0x4f, 0x70, 0x29, 0xc9, 0x2d, 0xcc, 0x52, 0x17,
	0x87, 0x0f, 0x68, 0x95, 0x7f, 0xa4, 0xa3, 0x30, 0x64, 0x1a, 0xf1, 0x3a, 0x51, 0x72, 0x03, 0xe3,
	0x4e, 0x0c, 0xf9, 0x20, 0x58, 0x29, 0xc2, 0x3a, 0xa4, 0x7c, 0x52, 0x76, 0xd6, 0xec, 0x1b, 0x9a,
	0x1f, 0x2b, 0x9f, 0x5a, 0xd4, 0x66, 0x12, 0x46, 0x6b, 0x14, 0x9e, 0x09, 0xb3, 0xd7, 0x9e, 0x8e,
	0x63, 0xa6, 0x04, 0xdf, 0xb7, 0x8c, 0xbc, 0x81, 0x67, 0x9d, 0xe4, 0x55, 0x8d, 0xce, 0xf3, 0xba,
	0xa1, 0x93, 0xd0, 0xec, 0x32, 0xfd, 0xf1, 0xa5, 0xe3, 0xe4, 0x15, 0x8c, 0x76, 0xd8, 0x75, 0x9b,
	0x86, 0x6e, 0xc3, 0x1d, 0xa6, 0x4e, 0xb7, 0x30, 0x3b, 0xbc, 0x36, 0x29, 0xb3, 0xa0, 0x4c, 0x0f,
	0x38, 0x8a, 0x37, 0x30, 0xb6, 0xd8, 0x18, 0xdb, 0x35, 0xba, 0x0c, 0x56, 0x1e, 0x59, 0x50, 0xe6,
	0xbf, 0xb3, 0x53, 0x0b, 0xd1, 0x6e, 0x13, 0xf9, 0x95, 0x41, 0x7e, 0x54, 0xd3, 0xbb, 0xe2, 0x6c,
	0x91, 0xdf, 0xfd, 0x28, 0xff, 0xc3, 0x9e, 0x97, 0xa7, 0xf7, 0x74, 0x05, 0xb1, 0x58, 0xea, 0xad,
	0xd9, 0x0c, 0xc2, 0xa7, 0xf7, 0xf6, 0x4f, 0x00, 0x00, 0x00, 0xff, 0xff, 0xda, 0x7e, 0x13, 0x38,
	0x9e, 0x03, 0x00, 0x00,
}
