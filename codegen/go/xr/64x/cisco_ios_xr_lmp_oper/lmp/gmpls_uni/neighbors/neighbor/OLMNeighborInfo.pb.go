/*
Copyright 2019 Cisco Systems

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: OLMNeighborInfo.proto

package cisco_ios_xr_lmp_oper_lmp_gmpls_uni_neighbors_neighbor

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type OLMNeighborInfo_KEYS struct {
	NeighborName         string   `protobuf:"bytes,1,opt,name=neighbor_name,json=neighborName,proto3" json:"neighbor_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OLMNeighborInfo_KEYS) Reset()         { *m = OLMNeighborInfo_KEYS{} }
func (m *OLMNeighborInfo_KEYS) String() string { return proto.CompactTextString(m) }
func (*OLMNeighborInfo_KEYS) ProtoMessage()    {}
func (*OLMNeighborInfo_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_d7ce8979e63a08fc, []int{0}
}

func (m *OLMNeighborInfo_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OLMNeighborInfo_KEYS.Unmarshal(m, b)
}
func (m *OLMNeighborInfo_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OLMNeighborInfo_KEYS.Marshal(b, m, deterministic)
}
func (m *OLMNeighborInfo_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OLMNeighborInfo_KEYS.Merge(m, src)
}
func (m *OLMNeighborInfo_KEYS) XXX_Size() int {
	return xxx_messageInfo_OLMNeighborInfo_KEYS.Size(m)
}
func (m *OLMNeighborInfo_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_OLMNeighborInfo_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_OLMNeighborInfo_KEYS proto.InternalMessageInfo

func (m *OLMNeighborInfo_KEYS) GetNeighborName() string {
	if m != nil {
		return m.NeighborName
	}
	return ""
}

type OLMAddrU struct {
	AddressType          string   `protobuf:"bytes,1,opt,name=address_type,json=addressType,proto3" json:"address_type,omitempty"`
	Ipv4Address          string   `protobuf:"bytes,2,opt,name=ipv4_address,json=ipv4Address,proto3" json:"ipv4_address,omitempty"`
	Ipv6Address          string   `protobuf:"bytes,3,opt,name=ipv6_address,json=ipv6Address,proto3" json:"ipv6_address,omitempty"`
	UnnumberedAddress    uint32   `protobuf:"varint,4,opt,name=unnumbered_address,json=unnumberedAddress,proto3" json:"unnumbered_address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OLMAddrU) Reset()         { *m = OLMAddrU{} }
func (m *OLMAddrU) String() string { return proto.CompactTextString(m) }
func (*OLMAddrU) ProtoMessage()    {}
func (*OLMAddrU) Descriptor() ([]byte, []int) {
	return fileDescriptor_d7ce8979e63a08fc, []int{1}
}

func (m *OLMAddrU) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OLMAddrU.Unmarshal(m, b)
}
func (m *OLMAddrU) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OLMAddrU.Marshal(b, m, deterministic)
}
func (m *OLMAddrU) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OLMAddrU.Merge(m, src)
}
func (m *OLMAddrU) XXX_Size() int {
	return xxx_messageInfo_OLMAddrU.Size(m)
}
func (m *OLMAddrU) XXX_DiscardUnknown() {
	xxx_messageInfo_OLMAddrU.DiscardUnknown(m)
}

var xxx_messageInfo_OLMAddrU proto.InternalMessageInfo

func (m *OLMAddrU) GetAddressType() string {
	if m != nil {
		return m.AddressType
	}
	return ""
}

func (m *OLMAddrU) GetIpv4Address() string {
	if m != nil {
		return m.Ipv4Address
	}
	return ""
}

func (m *OLMAddrU) GetIpv6Address() string {
	if m != nil {
		return m.Ipv6Address
	}
	return ""
}

func (m *OLMAddrU) GetUnnumberedAddress() uint32 {
	if m != nil {
		return m.UnnumberedAddress
	}
	return 0
}

type OLMAddr_ struct {
	Address              *OLMAddrU `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *OLMAddr_) Reset()         { *m = OLMAddr_{} }
func (m *OLMAddr_) String() string { return proto.CompactTextString(m) }
func (*OLMAddr_) ProtoMessage()    {}
func (*OLMAddr_) Descriptor() ([]byte, []int) {
	return fileDescriptor_d7ce8979e63a08fc, []int{2}
}

func (m *OLMAddr_) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OLMAddr_.Unmarshal(m, b)
}
func (m *OLMAddr_) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OLMAddr_.Marshal(b, m, deterministic)
}
func (m *OLMAddr_) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OLMAddr_.Merge(m, src)
}
func (m *OLMAddr_) XXX_Size() int {
	return xxx_messageInfo_OLMAddr_.Size(m)
}
func (m *OLMAddr_) XXX_DiscardUnknown() {
	xxx_messageInfo_OLMAddr_.DiscardUnknown(m)
}

var xxx_messageInfo_OLMAddr_ proto.InternalMessageInfo

func (m *OLMAddr_) GetAddress() *OLMAddrU {
	if m != nil {
		return m.Address
	}
	return nil
}

type OLM_TELinkInfo struct {
	InterfaceName                       string    `protobuf:"bytes,1,opt,name=interface_name,json=interfaceName,proto3" json:"interface_name,omitempty"`
	ProtocolOwner                       string    `protobuf:"bytes,2,opt,name=protocol_owner,json=protocolOwner,proto3" json:"protocol_owner,omitempty"`
	LocalLinkId                         *OLMAddr_ `protobuf:"bytes,3,opt,name=local_link_id,json=localLinkId,proto3" json:"local_link_id,omitempty"`
	RemoteLinkId                        *OLMAddr_ `protobuf:"bytes,4,opt,name=remote_link_id,json=remoteLinkId,proto3" json:"remote_link_id,omitempty"`
	LocalTeLinkId                       *OLMAddr_ `protobuf:"bytes,5,opt,name=local_te_link_id,json=localTeLinkId,proto3" json:"local_te_link_id,omitempty"`
	RemoteTeLinkId                      *OLMAddr_ `protobuf:"bytes,6,opt,name=remote_te_link_id,json=remoteTeLinkId,proto3" json:"remote_te_link_id,omitempty"`
	NeighborName                        string    `protobuf:"bytes,7,opt,name=neighbor_name,json=neighborName,proto3" json:"neighbor_name,omitempty"`
	NeighborAddress                     *OLMAddr_ `protobuf:"bytes,8,opt,name=neighbor_address,json=neighborAddress,proto3" json:"neighbor_address,omitempty"`
	IpccId                              uint32    `protobuf:"varint,9,opt,name=ipcc_id,json=ipccId,proto3" json:"ipcc_id,omitempty"`
	IpcCtype                            string    `protobuf:"bytes,10,opt,name=ipc_ctype,json=ipcCtype,proto3" json:"ipc_ctype,omitempty"`
	IpccName                            string    `protobuf:"bytes,11,opt,name=ipcc_name,json=ipccName,proto3" json:"ipcc_name,omitempty"`
	RemoteIpccAddress                   *OLMAddr_ `protobuf:"bytes,12,opt,name=remote_ipcc_address,json=remoteIpccAddress,proto3" json:"remote_ipcc_address,omitempty"`
	LocalMuxCap                         string    `protobuf:"bytes,13,opt,name=local_mux_cap,json=localMuxCap,proto3" json:"local_mux_cap,omitempty"`
	RemoteMuxCap                        string    `protobuf:"bytes,14,opt,name=remote_mux_cap,json=remoteMuxCap,proto3" json:"remote_mux_cap,omitempty"`
	ImState                             string    `protobuf:"bytes,15,opt,name=im_state,json=imState,proto3" json:"im_state,omitempty"`
	LmpState                            string    `protobuf:"bytes,16,opt,name=lmp_state,json=lmpState,proto3" json:"lmp_state,omitempty"`
	TeLinkLmpState                      string    `protobuf:"bytes,17,opt,name=te_link_lmp_state,json=teLinkLmpState,proto3" json:"te_link_lmp_state,omitempty"`
	GmplsTeLinkLocalMinimumBandwidth    uint64    `protobuf:"varint,18,opt,name=gmpls_te_link_local_minimum_bandwidth,json=gmplsTeLinkLocalMinimumBandwidth,proto3" json:"gmpls_te_link_local_minimum_bandwidth,omitempty"`
	GmplsTeLinkLocalMaximumBandwidth    uint64    `protobuf:"varint,19,opt,name=gmpls_te_link_local_maximum_bandwidth,json=gmplsTeLinkLocalMaximumBandwidth,proto3" json:"gmpls_te_link_local_maximum_bandwidth,omitempty"`
	GmplsTeLinkNeighborMinimumBandwidth uint64    `protobuf:"varint,20,opt,name=gmpls_te_link_neighbor_minimum_bandwidth,json=gmplsTeLinkNeighborMinimumBandwidth,proto3" json:"gmpls_te_link_neighbor_minimum_bandwidth,omitempty"`
	GmplsTeLinkNeighborMaximumBandwidth uint64    `protobuf:"varint,21,opt,name=gmpls_te_link_neighbor_maximum_bandwidth,json=gmplsTeLinkNeighborMaximumBandwidth,proto3" json:"gmpls_te_link_neighbor_maximum_bandwidth,omitempty"`
	GmplsTeLinkLocalEncodingType        string    `protobuf:"bytes,22,opt,name=gmpls_te_link_local_encoding_type,json=gmplsTeLinkLocalEncodingType,proto3" json:"gmpls_te_link_local_encoding_type,omitempty"`
	GmplsTeLinkNeighborEncodingType     string    `protobuf:"bytes,23,opt,name=gmpls_te_link_neighbor_encoding_type,json=gmplsTeLinkNeighborEncodingType,proto3" json:"gmpls_te_link_neighbor_encoding_type,omitempty"`
	IsLmpEnabled                        bool      `protobuf:"varint,24,opt,name=is_lmp_enabled,json=isLmpEnabled,proto3" json:"is_lmp_enabled,omitempty"`
	LmpCompLinkStatus                   []string  `protobuf:"bytes,25,rep,name=lmp_comp_link_status,json=lmpCompLinkStatus,proto3" json:"lmp_comp_link_status,omitempty"`
	LmpTransmitMsgId                    uint32    `protobuf:"varint,26,opt,name=lmp_transmit_msg_id,json=lmpTransmitMsgId,proto3" json:"lmp_transmit_msg_id,omitempty"`
	LmpReceiveMsgId                     uint32    `protobuf:"varint,27,opt,name=lmp_receive_msg_id,json=lmpReceiveMsgId,proto3" json:"lmp_receive_msg_id,omitempty"`
	XXX_NoUnkeyedLiteral                struct{}  `json:"-"`
	XXX_unrecognized                    []byte    `json:"-"`
	XXX_sizecache                       int32     `json:"-"`
}

func (m *OLM_TELinkInfo) Reset()         { *m = OLM_TELinkInfo{} }
func (m *OLM_TELinkInfo) String() string { return proto.CompactTextString(m) }
func (*OLM_TELinkInfo) ProtoMessage()    {}
func (*OLM_TELinkInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_d7ce8979e63a08fc, []int{3}
}

func (m *OLM_TELinkInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OLM_TELinkInfo.Unmarshal(m, b)
}
func (m *OLM_TELinkInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OLM_TELinkInfo.Marshal(b, m, deterministic)
}
func (m *OLM_TELinkInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OLM_TELinkInfo.Merge(m, src)
}
func (m *OLM_TELinkInfo) XXX_Size() int {
	return xxx_messageInfo_OLM_TELinkInfo.Size(m)
}
func (m *OLM_TELinkInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_OLM_TELinkInfo.DiscardUnknown(m)
}

var xxx_messageInfo_OLM_TELinkInfo proto.InternalMessageInfo

func (m *OLM_TELinkInfo) GetInterfaceName() string {
	if m != nil {
		return m.InterfaceName
	}
	return ""
}

func (m *OLM_TELinkInfo) GetProtocolOwner() string {
	if m != nil {
		return m.ProtocolOwner
	}
	return ""
}

func (m *OLM_TELinkInfo) GetLocalLinkId() *OLMAddr_ {
	if m != nil {
		return m.LocalLinkId
	}
	return nil
}

func (m *OLM_TELinkInfo) GetRemoteLinkId() *OLMAddr_ {
	if m != nil {
		return m.RemoteLinkId
	}
	return nil
}

func (m *OLM_TELinkInfo) GetLocalTeLinkId() *OLMAddr_ {
	if m != nil {
		return m.LocalTeLinkId
	}
	return nil
}

func (m *OLM_TELinkInfo) GetRemoteTeLinkId() *OLMAddr_ {
	if m != nil {
		return m.RemoteTeLinkId
	}
	return nil
}

func (m *OLM_TELinkInfo) GetNeighborName() string {
	if m != nil {
		return m.NeighborName
	}
	return ""
}

func (m *OLM_TELinkInfo) GetNeighborAddress() *OLMAddr_ {
	if m != nil {
		return m.NeighborAddress
	}
	return nil
}

func (m *OLM_TELinkInfo) GetIpccId() uint32 {
	if m != nil {
		return m.IpccId
	}
	return 0
}

func (m *OLM_TELinkInfo) GetIpcCtype() string {
	if m != nil {
		return m.IpcCtype
	}
	return ""
}

func (m *OLM_TELinkInfo) GetIpccName() string {
	if m != nil {
		return m.IpccName
	}
	return ""
}

func (m *OLM_TELinkInfo) GetRemoteIpccAddress() *OLMAddr_ {
	if m != nil {
		return m.RemoteIpccAddress
	}
	return nil
}

func (m *OLM_TELinkInfo) GetLocalMuxCap() string {
	if m != nil {
		return m.LocalMuxCap
	}
	return ""
}

func (m *OLM_TELinkInfo) GetRemoteMuxCap() string {
	if m != nil {
		return m.RemoteMuxCap
	}
	return ""
}

func (m *OLM_TELinkInfo) GetImState() string {
	if m != nil {
		return m.ImState
	}
	return ""
}

func (m *OLM_TELinkInfo) GetLmpState() string {
	if m != nil {
		return m.LmpState
	}
	return ""
}

func (m *OLM_TELinkInfo) GetTeLinkLmpState() string {
	if m != nil {
		return m.TeLinkLmpState
	}
	return ""
}

func (m *OLM_TELinkInfo) GetGmplsTeLinkLocalMinimumBandwidth() uint64 {
	if m != nil {
		return m.GmplsTeLinkLocalMinimumBandwidth
	}
	return 0
}

func (m *OLM_TELinkInfo) GetGmplsTeLinkLocalMaximumBandwidth() uint64 {
	if m != nil {
		return m.GmplsTeLinkLocalMaximumBandwidth
	}
	return 0
}

func (m *OLM_TELinkInfo) GetGmplsTeLinkNeighborMinimumBandwidth() uint64 {
	if m != nil {
		return m.GmplsTeLinkNeighborMinimumBandwidth
	}
	return 0
}

func (m *OLM_TELinkInfo) GetGmplsTeLinkNeighborMaximumBandwidth() uint64 {
	if m != nil {
		return m.GmplsTeLinkNeighborMaximumBandwidth
	}
	return 0
}

func (m *OLM_TELinkInfo) GetGmplsTeLinkLocalEncodingType() string {
	if m != nil {
		return m.GmplsTeLinkLocalEncodingType
	}
	return ""
}

func (m *OLM_TELinkInfo) GetGmplsTeLinkNeighborEncodingType() string {
	if m != nil {
		return m.GmplsTeLinkNeighborEncodingType
	}
	return ""
}

func (m *OLM_TELinkInfo) GetIsLmpEnabled() bool {
	if m != nil {
		return m.IsLmpEnabled
	}
	return false
}

func (m *OLM_TELinkInfo) GetLmpCompLinkStatus() []string {
	if m != nil {
		return m.LmpCompLinkStatus
	}
	return nil
}

func (m *OLM_TELinkInfo) GetLmpTransmitMsgId() uint32 {
	if m != nil {
		return m.LmpTransmitMsgId
	}
	return 0
}

func (m *OLM_TELinkInfo) GetLmpReceiveMsgId() uint32 {
	if m != nil {
		return m.LmpReceiveMsgId
	}
	return 0
}

type OLM_IPCCInfo struct {
	IpccId                               uint32    `protobuf:"varint,1,opt,name=ipcc_id,json=ipccId,proto3" json:"ipcc_id,omitempty"`
	IpcCtype                             string    `protobuf:"bytes,2,opt,name=ipc_ctype,json=ipcCtype,proto3" json:"ipc_ctype,omitempty"`
	InterfaceName                        string    `protobuf:"bytes,3,opt,name=interface_name,json=interfaceName,proto3" json:"interface_name,omitempty"`
	RemoteIpccAddress                    *OLMAddr_ `protobuf:"bytes,4,opt,name=remote_ipcc_address,json=remoteIpccAddress,proto3" json:"remote_ipcc_address,omitempty"`
	SourceIpCcAddress                    *OLMAddr_ `protobuf:"bytes,5,opt,name=source_ip_cc_address,json=sourceIpCcAddress,proto3" json:"source_ip_cc_address,omitempty"`
	NeighborName                         string    `protobuf:"bytes,6,opt,name=neighbor_name,json=neighborName,proto3" json:"neighbor_name,omitempty"`
	IpccState                            string    `protobuf:"bytes,7,opt,name=ipcc_state,json=ipccState,proto3" json:"ipcc_state,omitempty"`
	LmpHelloInterval                     uint32    `protobuf:"varint,8,opt,name=lmp_hello_interval,json=lmpHelloInterval,proto3" json:"lmp_hello_interval,omitempty"`
	LmpHelloIntervalMinimum              uint32    `protobuf:"varint,9,opt,name=lmp_hello_interval_minimum,json=lmpHelloIntervalMinimum,proto3" json:"lmp_hello_interval_minimum,omitempty"`
	LmpHelloIntervalMaximum              uint32    `protobuf:"varint,10,opt,name=lmp_hello_interval_maximum,json=lmpHelloIntervalMaximum,proto3" json:"lmp_hello_interval_maximum,omitempty"`
	LmpHelloDeadInterval                 uint32    `protobuf:"varint,11,opt,name=lmp_hello_dead_interval,json=lmpHelloDeadInterval,proto3" json:"lmp_hello_dead_interval,omitempty"`
	LmpHelloDeadIntervalMinimum          uint32    `protobuf:"varint,12,opt,name=lmp_hello_dead_interval_minimum,json=lmpHelloDeadIntervalMinimum,proto3" json:"lmp_hello_dead_interval_minimum,omitempty"`
	LmpHelloDeadIntervalMaximum          uint32    `protobuf:"varint,13,opt,name=lmp_hello_dead_interval_maximum,json=lmpHelloDeadIntervalMaximum,proto3" json:"lmp_hello_dead_interval_maximum,omitempty"`
	LmpHelloTransmitPackets              uint32    `protobuf:"varint,14,opt,name=lmp_hello_transmit_packets,json=lmpHelloTransmitPackets,proto3" json:"lmp_hello_transmit_packets,omitempty"`
	LmpHelloReceivePackets               uint32    `protobuf:"varint,15,opt,name=lmp_hello_receive_packets,json=lmpHelloReceivePackets,proto3" json:"lmp_hello_receive_packets,omitempty"`
	LmpHelloTransmitPacketSequenceNumber uint32    `protobuf:"varint,16,opt,name=lmp_hello_transmit_packet_sequence_number,json=lmpHelloTransmitPacketSequenceNumber,proto3" json:"lmp_hello_transmit_packet_sequence_number,omitempty"`
	LmpHelloReceivePacketSequenceNumber  uint32    `protobuf:"varint,17,opt,name=lmp_hello_receive_packet_sequence_number,json=lmpHelloReceivePacketSequenceNumber,proto3" json:"lmp_hello_receive_packet_sequence_number,omitempty"`
	LmpTransmitMsgId                     uint32    `protobuf:"varint,18,opt,name=lmp_transmit_msg_id,json=lmpTransmitMsgId,proto3" json:"lmp_transmit_msg_id,omitempty"`
	LmpReceiveMsgId                      uint32    `protobuf:"varint,19,opt,name=lmp_receive_msg_id,json=lmpReceiveMsgId,proto3" json:"lmp_receive_msg_id,omitempty"`
	LmpLinkSumTransmitPackets            uint32    `protobuf:"varint,20,opt,name=lmp_link_sum_transmit_packets,json=lmpLinkSumTransmitPackets,proto3" json:"lmp_link_sum_transmit_packets,omitempty"`
	LmpLinkSumReceivePackets             uint32    `protobuf:"varint,21,opt,name=lmp_link_sum_receive_packets,json=lmpLinkSumReceivePackets,proto3" json:"lmp_link_sum_receive_packets,omitempty"`
	XXX_NoUnkeyedLiteral                 struct{}  `json:"-"`
	XXX_unrecognized                     []byte    `json:"-"`
	XXX_sizecache                        int32     `json:"-"`
}

func (m *OLM_IPCCInfo) Reset()         { *m = OLM_IPCCInfo{} }
func (m *OLM_IPCCInfo) String() string { return proto.CompactTextString(m) }
func (*OLM_IPCCInfo) ProtoMessage()    {}
func (*OLM_IPCCInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_d7ce8979e63a08fc, []int{4}
}

func (m *OLM_IPCCInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OLM_IPCCInfo.Unmarshal(m, b)
}
func (m *OLM_IPCCInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OLM_IPCCInfo.Marshal(b, m, deterministic)
}
func (m *OLM_IPCCInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OLM_IPCCInfo.Merge(m, src)
}
func (m *OLM_IPCCInfo) XXX_Size() int {
	return xxx_messageInfo_OLM_IPCCInfo.Size(m)
}
func (m *OLM_IPCCInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_OLM_IPCCInfo.DiscardUnknown(m)
}

var xxx_messageInfo_OLM_IPCCInfo proto.InternalMessageInfo

func (m *OLM_IPCCInfo) GetIpccId() uint32 {
	if m != nil {
		return m.IpccId
	}
	return 0
}

func (m *OLM_IPCCInfo) GetIpcCtype() string {
	if m != nil {
		return m.IpcCtype
	}
	return ""
}

func (m *OLM_IPCCInfo) GetInterfaceName() string {
	if m != nil {
		return m.InterfaceName
	}
	return ""
}

func (m *OLM_IPCCInfo) GetRemoteIpccAddress() *OLMAddr_ {
	if m != nil {
		return m.RemoteIpccAddress
	}
	return nil
}

func (m *OLM_IPCCInfo) GetSourceIpCcAddress() *OLMAddr_ {
	if m != nil {
		return m.SourceIpCcAddress
	}
	return nil
}

func (m *OLM_IPCCInfo) GetNeighborName() string {
	if m != nil {
		return m.NeighborName
	}
	return ""
}

func (m *OLM_IPCCInfo) GetIpccState() string {
	if m != nil {
		return m.IpccState
	}
	return ""
}

func (m *OLM_IPCCInfo) GetLmpHelloInterval() uint32 {
	if m != nil {
		return m.LmpHelloInterval
	}
	return 0
}

func (m *OLM_IPCCInfo) GetLmpHelloIntervalMinimum() uint32 {
	if m != nil {
		return m.LmpHelloIntervalMinimum
	}
	return 0
}

func (m *OLM_IPCCInfo) GetLmpHelloIntervalMaximum() uint32 {
	if m != nil {
		return m.LmpHelloIntervalMaximum
	}
	return 0
}

func (m *OLM_IPCCInfo) GetLmpHelloDeadInterval() uint32 {
	if m != nil {
		return m.LmpHelloDeadInterval
	}
	return 0
}

func (m *OLM_IPCCInfo) GetLmpHelloDeadIntervalMinimum() uint32 {
	if m != nil {
		return m.LmpHelloDeadIntervalMinimum
	}
	return 0
}

func (m *OLM_IPCCInfo) GetLmpHelloDeadIntervalMaximum() uint32 {
	if m != nil {
		return m.LmpHelloDeadIntervalMaximum
	}
	return 0
}

func (m *OLM_IPCCInfo) GetLmpHelloTransmitPackets() uint32 {
	if m != nil {
		return m.LmpHelloTransmitPackets
	}
	return 0
}

func (m *OLM_IPCCInfo) GetLmpHelloReceivePackets() uint32 {
	if m != nil {
		return m.LmpHelloReceivePackets
	}
	return 0
}

func (m *OLM_IPCCInfo) GetLmpHelloTransmitPacketSequenceNumber() uint32 {
	if m != nil {
		return m.LmpHelloTransmitPacketSequenceNumber
	}
	return 0
}

func (m *OLM_IPCCInfo) GetLmpHelloReceivePacketSequenceNumber() uint32 {
	if m != nil {
		return m.LmpHelloReceivePacketSequenceNumber
	}
	return 0
}

func (m *OLM_IPCCInfo) GetLmpTransmitMsgId() uint32 {
	if m != nil {
		return m.LmpTransmitMsgId
	}
	return 0
}

func (m *OLM_IPCCInfo) GetLmpReceiveMsgId() uint32 {
	if m != nil {
		return m.LmpReceiveMsgId
	}
	return 0
}

func (m *OLM_IPCCInfo) GetLmpLinkSumTransmitPackets() uint32 {
	if m != nil {
		return m.LmpLinkSumTransmitPackets
	}
	return 0
}

func (m *OLM_IPCCInfo) GetLmpLinkSumReceivePackets() uint32 {
	if m != nil {
		return m.LmpLinkSumReceivePackets
	}
	return 0
}

type OLMNeighborInfo struct {
	ProtocolOwner             string            `protobuf:"bytes,50,opt,name=protocol_owner,json=protocolOwner,proto3" json:"protocol_owner,omitempty"`
	NeighborAddress           *OLMAddr_         `protobuf:"bytes,51,opt,name=neighbor_address,json=neighborAddress,proto3" json:"neighbor_address,omitempty"`
	IpccId                    uint32            `protobuf:"varint,52,opt,name=ipcc_id,json=ipccId,proto3" json:"ipcc_id,omitempty"`
	TeLink                    []*OLM_TELinkInfo `protobuf:"bytes,53,rep,name=te_link,json=teLink,proto3" json:"te_link,omitempty"`
	Ipcc                      []*OLM_IPCCInfo   `protobuf:"bytes,54,rep,name=ipcc,proto3" json:"ipcc,omitempty"`
	IsLmpEnabled              bool              `protobuf:"varint,55,opt,name=is_lmp_enabled,json=isLmpEnabled,proto3" json:"is_lmp_enabled,omitempty"`
	IsLmpConfigDisabled       bool              `protobuf:"varint,56,opt,name=is_lmp_config_disabled,json=isLmpConfigDisabled,proto3" json:"is_lmp_config_disabled,omitempty"`
	LmpTransmitMsgId          uint32            `protobuf:"varint,57,opt,name=lmp_transmit_msg_id,json=lmpTransmitMsgId,proto3" json:"lmp_transmit_msg_id,omitempty"`
	LmpReceiveMsgId           uint32            `protobuf:"varint,58,opt,name=lmp_receive_msg_id,json=lmpReceiveMsgId,proto3" json:"lmp_receive_msg_id,omitempty"`
	LmpLinkSumTransmitPackets uint32            `protobuf:"varint,59,opt,name=lmp_link_sum_transmit_packets,json=lmpLinkSumTransmitPackets,proto3" json:"lmp_link_sum_transmit_packets,omitempty"`
	LmpLinkSumReceivePackets  uint32            `protobuf:"varint,60,opt,name=lmp_link_sum_receive_packets,json=lmpLinkSumReceivePackets,proto3" json:"lmp_link_sum_receive_packets,omitempty"`
	XXX_NoUnkeyedLiteral      struct{}          `json:"-"`
	XXX_unrecognized          []byte            `json:"-"`
	XXX_sizecache             int32             `json:"-"`
}

func (m *OLMNeighborInfo) Reset()         { *m = OLMNeighborInfo{} }
func (m *OLMNeighborInfo) String() string { return proto.CompactTextString(m) }
func (*OLMNeighborInfo) ProtoMessage()    {}
func (*OLMNeighborInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_d7ce8979e63a08fc, []int{5}
}

func (m *OLMNeighborInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OLMNeighborInfo.Unmarshal(m, b)
}
func (m *OLMNeighborInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OLMNeighborInfo.Marshal(b, m, deterministic)
}
func (m *OLMNeighborInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OLMNeighborInfo.Merge(m, src)
}
func (m *OLMNeighborInfo) XXX_Size() int {
	return xxx_messageInfo_OLMNeighborInfo.Size(m)
}
func (m *OLMNeighborInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_OLMNeighborInfo.DiscardUnknown(m)
}

var xxx_messageInfo_OLMNeighborInfo proto.InternalMessageInfo

func (m *OLMNeighborInfo) GetProtocolOwner() string {
	if m != nil {
		return m.ProtocolOwner
	}
	return ""
}

func (m *OLMNeighborInfo) GetNeighborAddress() *OLMAddr_ {
	if m != nil {
		return m.NeighborAddress
	}
	return nil
}

func (m *OLMNeighborInfo) GetIpccId() uint32 {
	if m != nil {
		return m.IpccId
	}
	return 0
}

func (m *OLMNeighborInfo) GetTeLink() []*OLM_TELinkInfo {
	if m != nil {
		return m.TeLink
	}
	return nil
}

func (m *OLMNeighborInfo) GetIpcc() []*OLM_IPCCInfo {
	if m != nil {
		return m.Ipcc
	}
	return nil
}

func (m *OLMNeighborInfo) GetIsLmpEnabled() bool {
	if m != nil {
		return m.IsLmpEnabled
	}
	return false
}

func (m *OLMNeighborInfo) GetIsLmpConfigDisabled() bool {
	if m != nil {
		return m.IsLmpConfigDisabled
	}
	return false
}

func (m *OLMNeighborInfo) GetLmpTransmitMsgId() uint32 {
	if m != nil {
		return m.LmpTransmitMsgId
	}
	return 0
}

func (m *OLMNeighborInfo) GetLmpReceiveMsgId() uint32 {
	if m != nil {
		return m.LmpReceiveMsgId
	}
	return 0
}

func (m *OLMNeighborInfo) GetLmpLinkSumTransmitPackets() uint32 {
	if m != nil {
		return m.LmpLinkSumTransmitPackets
	}
	return 0
}

func (m *OLMNeighborInfo) GetLmpLinkSumReceivePackets() uint32 {
	if m != nil {
		return m.LmpLinkSumReceivePackets
	}
	return 0
}

func init() {
	proto.RegisterType((*OLMNeighborInfo_KEYS)(nil), "cisco_ios_xr_lmp_oper.lmp.gmpls_uni.neighbors.neighbor.OLMNeighborInfo_KEYS")
	proto.RegisterType((*OLMAddrU)(nil), "cisco_ios_xr_lmp_oper.lmp.gmpls_uni.neighbors.neighbor.OLMAddrU")
	proto.RegisterType((*OLMAddr_)(nil), "cisco_ios_xr_lmp_oper.lmp.gmpls_uni.neighbors.neighbor.OLM_addr_")
	proto.RegisterType((*OLM_TELinkInfo)(nil), "cisco_ios_xr_lmp_oper.lmp.gmpls_uni.neighbors.neighbor.OLM_TELinkInfo")
	proto.RegisterType((*OLM_IPCCInfo)(nil), "cisco_ios_xr_lmp_oper.lmp.gmpls_uni.neighbors.neighbor.OLM_IPCCInfo")
	proto.RegisterType((*OLMNeighborInfo)(nil), "cisco_ios_xr_lmp_oper.lmp.gmpls_uni.neighbors.neighbor.OLMNeighborInfo")
}

func init() { proto.RegisterFile("OLMNeighborInfo.proto", fileDescriptor_d7ce8979e63a08fc) }

var fileDescriptor_d7ce8979e63a08fc = []byte{
	// 1184 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x57, 0x5b, 0x4f, 0x1b, 0x47,
	0x14, 0x96, 0x03, 0xe1, 0x72, 0x7c, 0x01, 0x2f, 0x06, 0x4c, 0x48, 0x14, 0xc7, 0x10, 0xc9, 0x51,
	0x1b, 0x57, 0x82, 0x84, 0x36, 0xa5, 0xaa, 0x42, 0x0d, 0x6d, 0xad, 0xda, 0x10, 0x19, 0xa2, 0x5e,
	0x5e, 0x46, 0xcb, 0xee, 0x60, 0xa6, 0xec, 0xec, 0x4e, 0x76, 0x6d, 0x42, 0x7e, 0x41, 0xff, 0x47,
	0xdf, 0xfa, 0xdc, 0x3f, 0x58, 0xcd, 0x99, 0x99, 0xf5, 0x6d, 0x17, 0x29, 0xc1, 0xcd, 0x1b, 0x3e,
	0xe7, 0x3b, 0xdf, 0xb9, 0xcc, 0xb9, 0x2c, 0xb0, 0x7a, 0xd2, 0x6a, 0x1f, 0x53, 0xd6, 0xbd, 0x3c,
	0x0f, 0xc2, 0xa6, 0x7f, 0x11, 0xd4, 0x45, 0x18, 0xf4, 0x02, 0x6b, 0xcf, 0x61, 0x91, 0x13, 0x10,
	0x16, 0x44, 0xe4, 0x26, 0x24, 0x1e, 0x17, 0x24, 0x10, 0x34, 0xac, 0x7b, 0x5c, 0xd4, 0xbb, 0x5c,
	0x78, 0x11, 0xe9, 0xfb, 0xac, 0xee, 0x6b, 0xbb, 0x28, 0xfe, 0xab, 0xba, 0x0f, 0xa5, 0x31, 0x42,
	0xf2, 0xcb, 0xd1, 0xef, 0xa7, 0xd6, 0x16, 0xe4, 0x0d, 0x86, 0xf8, 0x36, 0xa7, 0xe5, 0x4c, 0x25,
	0x53, 0x5b, 0xec, 0xe4, 0x8c, 0xf0, 0xd8, 0xe6, 0xb4, 0xfa, 0x77, 0x06, 0x16, 0x4e, 0x5a, 0xed,
	0x03, 0xd7, 0x0d, 0xdf, 0x5a, 0x4f, 0x20, 0x67, 0xbb, 0x6e, 0x48, 0xa3, 0x88, 0xf4, 0x3e, 0x08,
	0x63, 0x90, 0xd5, 0xb2, 0xb3, 0x0f, 0x82, 0x4a, 0x08, 0x13, 0xd7, 0x2f, 0x88, 0x96, 0x95, 0xef,
	0x29, 0x88, 0x94, 0x1d, 0x28, 0x91, 0x86, 0xec, 0xc5, 0x90, 0x99, 0x18, 0xb2, 0x67, 0x20, 0xcf,
	0xc1, 0xea, 0xfb, 0x7e, 0x9f, 0x9f, 0xd3, 0x90, 0xba, 0x31, 0x70, 0xb6, 0x92, 0xa9, 0xe5, 0x3b,
	0xc5, 0x81, 0x46, 0xc3, 0xab, 0x5d, 0x58, 0x3c, 0x69, 0xb5, 0x11, 0x47, 0xac, 0x3f, 0x60, 0xde,
	0x18, 0xc8, 0xf8, 0xb2, 0x3b, 0xaf, 0xeb, 0x9f, 0x56, 0xb8, 0xba, 0xc9, 0xbb, 0x63, 0x08, 0xab,
	0xff, 0xe4, 0xa1, 0x20, 0x3d, 0x9d, 0x1d, 0xb5, 0x98, 0x7f, 0x25, 0x4b, 0x69, 0x3d, 0x85, 0x02,
	0xf3, 0x7b, 0x34, 0xbc, 0xb0, 0x1d, 0x3a, 0x5c, 0xc6, 0x7c, 0x2c, 0x95, 0x75, 0x94, 0x30, 0x7c,
	0x45, 0x27, 0xf0, 0x48, 0xf0, 0xde, 0xa7, 0xa1, 0xae, 0x4c, 0xde, 0x48, 0x4f, 0xa4, 0xd0, 0xa2,
	0x90, 0xf7, 0x02, 0xc7, 0xf6, 0x88, 0xc7, 0xfc, 0x2b, 0xc2, 0x5c, 0x2c, 0x4e, 0x76, 0xe7, 0xe0,
	0x0e, 0x29, 0xa8, 0xb2, 0x74, 0xb2, 0xc8, 0x8b, 0x61, 0xbb, 0x56, 0x17, 0x0a, 0x21, 0xe5, 0x41,
	0x8f, 0xc6, 0x7e, 0x66, 0xa7, 0xe5, 0x27, 0xa7, 0x88, 0xb5, 0xa3, 0x3f, 0x61, 0x59, 0xe5, 0x33,
	0xe4, 0xea, 0xfe, 0xb4, 0x5c, 0xa9, 0x52, 0x9d, 0x19, 0x5f, 0x1e, 0x14, 0x75, 0x52, 0x43, 0xce,
	0xe6, 0xa6, 0xe5, 0x4c, 0x17, 0x2c, 0xf6, 0x36, 0x31, 0x3d, 0xf3, 0x93, 0xd3, 0x63, 0x79, 0xb0,
	0x1c, 0x83, 0x4c, 0x53, 0x2e, 0x4c, 0x2b, 0xa2, 0x25, 0x23, 0x33, 0x53, 0xb3, 0x0e, 0xf3, 0x4c,
	0x38, 0x8e, 0x4c, 0x7b, 0x11, 0x47, 0x65, 0x4e, 0xfe, 0x6c, 0xba, 0xd6, 0x26, 0x2c, 0x32, 0xe1,
	0x10, 0x07, 0x87, 0x16, 0x30, 0xce, 0x05, 0x26, 0x9c, 0x86, 0xfc, 0xad, 0x95, 0x8e, 0x4a, 0x22,
	0x1b, 0x2b, 0x1d, 0x4c, 0xe0, 0x1d, 0xac, 0xe8, 0x9a, 0x22, 0xc6, 0xe4, 0x90, 0x9b, 0x56, 0x0e,
	0xfa, 0xc5, 0x9a, 0xc2, 0x71, 0x4c, 0x16, 0x55, 0x33, 0x02, 0xbc, 0x7f, 0x43, 0x1c, 0x5b, 0x94,
	0xf3, 0x6a, 0x3f, 0xa0, 0xb0, 0xdd, 0xbf, 0x69, 0xd8, 0xc2, 0xda, 0x8e, 0xfb, 0xd7, 0x80, 0x0a,
	0xaa, 0xfa, 0x4a, 0xaa, 0x51, 0x1b, 0xb0, 0xc0, 0x38, 0x89, 0x7a, 0x76, 0x8f, 0x96, 0x97, 0x50,
	0x3f, 0xcf, 0xf8, 0xa9, 0xfc, 0x29, 0x93, 0x96, 0xe1, 0x2a, 0xdd, 0xb2, 0x4a, 0xda, 0xe3, 0x42,
	0x29, 0x9f, 0x41, 0xd1, 0x74, 0xd0, 0x00, 0x54, 0x44, 0x50, 0x41, 0x75, 0x76, 0xcb, 0x40, 0x4f,
	0xe0, 0xa9, 0xca, 0x34, 0x36, 0x50, 0xa1, 0x33, 0x9f, 0xf1, 0x3e, 0x27, 0xe7, 0xb6, 0xef, 0xbe,
	0x67, 0x6e, 0xef, 0xb2, 0x6c, 0x55, 0x32, 0xb5, 0xd9, 0x4e, 0x05, 0xc1, 0xaa, 0x87, 0x5a, 0x98,
	0x8f, 0x02, 0xfe, 0x60, 0x70, 0xa9, 0x84, 0xf6, 0xcd, 0x18, 0xe1, 0x4a, 0x0a, 0xa1, 0x02, 0x0e,
	0x08, 0xdf, 0x42, 0x6d, 0x94, 0x30, 0x6e, 0xc8, 0xc9, 0x20, 0x4b, 0xc8, 0xb9, 0x35, 0xc4, 0x69,
	0xae, 0xc6, 0x44, 0x9c, 0xb7, 0xd0, 0x4e, 0x84, 0xba, 0x9a, 0x4e, 0x3b, 0x1e, 0xed, 0x4f, 0xf0,
	0x24, 0x29, 0x7d, 0xea, 0x3b, 0x81, 0xcb, 0xfc, 0xae, 0x3a, 0x3b, 0x6b, 0xf8, 0x14, 0x0f, 0xc7,
	0x53, 0x3f, 0xd2, 0x20, 0xbc, 0x43, 0x6d, 0xd8, 0x4e, 0x89, 0x6f, 0x94, 0x6b, 0x1d, 0xb9, 0x1e,
	0x27, 0xc4, 0x36, 0x42, 0xb7, 0x0d, 0x05, 0x16, 0x61, 0x37, 0x50, 0xdf, 0x3e, 0xf7, 0xa8, 0x5b,
	0x2e, 0x57, 0x32, 0xb5, 0x85, 0x4e, 0x8e, 0x45, 0x2d, 0x2e, 0x8e, 0x94, 0xcc, 0xfa, 0x0a, 0x4a,
	0x12, 0xe2, 0x04, 0x5c, 0x28, 0xa7, 0xb2, 0x75, 0xfa, 0x51, 0x79, 0xa3, 0x32, 0x53, 0x5b, 0xec,
	0x14, 0x3d, 0x2e, 0x1a, 0x01, 0x17, 0xd2, 0xc9, 0x29, 0x2a, 0xac, 0xe7, 0xb0, 0x22, 0x0d, 0x7a,
	0xa1, 0xed, 0x47, 0x9c, 0xf5, 0x08, 0x8f, 0xba, 0x72, 0x7a, 0x1f, 0xe0, 0xf4, 0x2e, 0x7b, 0x5c,
	0x9c, 0x69, 0x4d, 0x3b, 0xea, 0x36, 0x5d, 0xeb, 0x0b, 0xb0, 0x24, 0x3c, 0xa4, 0x0e, 0x65, 0xd7,
	0xd4, 0xa0, 0x37, 0x11, 0xbd, 0xe4, 0x71, 0xd1, 0x51, 0x0a, 0x04, 0x57, 0xff, 0x02, 0xc8, 0xc9,
	0x41, 0x6b, 0xbe, 0x69, 0x34, 0xf0, 0x52, 0x0d, 0xad, 0x87, 0x4c, 0xfa, 0x7a, 0xb8, 0x37, 0xb6,
	0x1e, 0x26, 0xef, 0xdb, 0x4c, 0xd2, 0x7d, 0x4b, 0x59, 0x14, 0xb3, 0xff, 0xe3, 0xa2, 0x08, 0xa1,
	0x14, 0x05, 0xfd, 0xd0, 0x91, 0x2e, 0xc9, 0x90, 0xcf, 0xa9, 0xdd, 0x97, 0xa2, 0xa2, 0x6f, 0x8a,
	0x46, 0xec, 0x73, 0x62, 0xeb, 0xcf, 0x25, 0x6c, 0xfd, 0x47, 0x00, 0x58, 0x04, 0xb5, 0x38, 0xd4,
	0x5d, 0xc0, 0x1d, 0xab, 0x76, 0xc6, 0x97, 0xea, 0x15, 0x2f, 0xa9, 0xe7, 0x05, 0x04, 0xab, 0x78,
	0x6d, 0x7b, 0x78, 0x16, 0xd4, 0x9b, 0xff, 0x2c, 0x15, 0x4d, 0x2d, 0xb7, 0xf6, 0xe1, 0xc1, 0x24,
	0xda, 0xcc, 0xae, 0xde, 0xf3, 0xeb, 0xe3, 0x56, 0x7a, 0x5c, 0xd3, 0x8c, 0xd5, 0xd4, 0xe1, 0x25,
	0x48, 0x32, 0x56, 0x6a, 0xeb, 0x25, 0xac, 0x0f, 0x8c, 0x5d, 0x6a, 0xbb, 0x83, 0x60, 0xb3, 0x68,
	0x59, 0x32, 0x96, 0x87, 0xd4, 0x76, 0xe3, 0x80, 0x0f, 0xe1, 0x71, 0x8a, 0x59, 0x1c, 0x75, 0x0e,
	0xcd, 0x37, 0x93, 0xcc, 0x4d, 0xe4, 0xb7, 0xb1, 0xe8, 0xf0, 0xf3, 0xb7, 0xb0, 0xe8, 0x14, 0x46,
	0xf2, 0x8f, 0xa7, 0x4c, 0xd8, 0xce, 0x15, 0xed, 0x45, 0x78, 0x33, 0x86, 0xf2, 0x37, 0xb3, 0xf6,
	0x46, 0xa9, 0xad, 0x57, 0xb0, 0x31, 0x30, 0x36, 0x33, 0x67, 0x6c, 0x97, 0xd0, 0x76, 0xcd, 0xd8,
	0xea, 0xc9, 0x33, 0xa6, 0xbf, 0xc2, 0xb3, 0x54, 0xbf, 0x24, 0xa2, 0xef, 0xfa, 0xd4, 0x97, 0xd3,
	0x84, 0x9f, 0xb1, 0x78, 0x7e, 0xf2, 0x9d, 0xed, 0xe4, 0x30, 0x4e, 0x35, 0xf8, 0x18, 0xb1, 0x72,
	0xed, 0xa6, 0xc5, 0x34, 0xc1, 0x5b, 0x44, 0xde, 0xad, 0xc4, 0x10, 0xc7, 0x68, 0x53, 0xf6, 0x90,
	0xf5, 0x51, 0x7b, 0x68, 0x25, 0x71, 0x0f, 0x59, 0xaf, 0xe1, 0x91, 0x17, 0xef, 0xc3, 0x3e, 0x9f,
	0x7c, 0x86, 0x12, 0xda, 0xc9, 0x5a, 0xe3, 0x66, 0xec, 0xf3, 0xf1, 0x87, 0xf8, 0x1e, 0x1e, 0x8e,
	0x30, 0x8c, 0xbf, 0xc5, 0x2a, 0x12, 0x94, 0x07, 0x04, 0xa3, 0xaf, 0x51, 0xfd, 0xf7, 0x3e, 0x2c,
	0x8d, 0xfd, 0x07, 0x94, 0xf0, 0x3d, 0xbe, 0x93, 0xf4, 0x3d, 0x9e, 0xf4, 0x01, 0xb7, 0xfb, 0x39,
	0x3e, 0xe0, 0x5e, 0x8c, 0x6c, 0x68, 0x02, 0xf3, 0xfa, 0x8e, 0x95, 0x5f, 0x56, 0x66, 0x6a, 0xd9,
	0x9d, 0x1f, 0xef, 0xe2, 0x7d, 0xf0, 0xdf, 0x4b, 0x67, 0x4e, 0x7d, 0xcf, 0x58, 0xbf, 0xc1, 0xac,
	0x74, 0x55, 0xde, 0x43, 0xf6, 0xc3, 0xbb, 0xb0, 0x9b, 0x7b, 0xd3, 0x41, 0xc6, 0x84, 0xcb, 0xf9,
	0x75, 0xc2, 0xe5, 0xdc, 0x85, 0x35, 0x8d, 0x72, 0x02, 0xff, 0x82, 0x75, 0x89, 0xcb, 0x22, 0x85,
	0xfe, 0x06, 0xd1, 0x2b, 0x88, 0x6e, 0xa0, 0xee, 0x50, 0xab, 0xd2, 0xba, 0xf6, 0xd5, 0x47, 0x75,
	0xed, 0xb7, 0x9f, 0xd8, 0xb5, 0xfb, 0x77, 0xed, 0xda, 0xef, 0x6e, 0xef, 0xda, 0xf3, 0x39, 0xec,
	0xc4, 0xdd, 0xff, 0x02, 0x00, 0x00, 0xff, 0xff, 0xd8, 0x97, 0x1d, 0x9e, 0x0e, 0x10, 0x00, 0x00,
}
