/*
Copyright 2019 Cisco Systems

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: macsec_ctrlr_if_status_t.proto

package cisco_ios_xr_macsec_ctrlr_oper_macsec_ctrlr_oper_macsec_ctrlr_ports_macsec_ctrlr_port_macsec_ctrlr_info

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type MacsecCtrlrIfStatusT_KEYS struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MacsecCtrlrIfStatusT_KEYS) Reset()         { *m = MacsecCtrlrIfStatusT_KEYS{} }
func (m *MacsecCtrlrIfStatusT_KEYS) String() string { return proto.CompactTextString(m) }
func (*MacsecCtrlrIfStatusT_KEYS) ProtoMessage()    {}
func (*MacsecCtrlrIfStatusT_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_0c0c775ddd67e80d, []int{0}
}

func (m *MacsecCtrlrIfStatusT_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MacsecCtrlrIfStatusT_KEYS.Unmarshal(m, b)
}
func (m *MacsecCtrlrIfStatusT_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MacsecCtrlrIfStatusT_KEYS.Marshal(b, m, deterministic)
}
func (m *MacsecCtrlrIfStatusT_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MacsecCtrlrIfStatusT_KEYS.Merge(m, src)
}
func (m *MacsecCtrlrIfStatusT_KEYS) XXX_Size() int {
	return xxx_messageInfo_MacsecCtrlrIfStatusT_KEYS.Size(m)
}
func (m *MacsecCtrlrIfStatusT_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_MacsecCtrlrIfStatusT_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_MacsecCtrlrIfStatusT_KEYS proto.InternalMessageInfo

func (m *MacsecCtrlrIfStatusT_KEYS) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type MacsecCtrlrAnStatusT struct {
	AssociationNumber    uint32   `protobuf:"varint,1,opt,name=association_number,json=associationNumber,proto3" json:"association_number,omitempty"`
	ShortSecureChannelId uint32   `protobuf:"varint,2,opt,name=short_secure_channel_id,json=shortSecureChannelId,proto3" json:"short_secure_channel_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MacsecCtrlrAnStatusT) Reset()         { *m = MacsecCtrlrAnStatusT{} }
func (m *MacsecCtrlrAnStatusT) String() string { return proto.CompactTextString(m) }
func (*MacsecCtrlrAnStatusT) ProtoMessage()    {}
func (*MacsecCtrlrAnStatusT) Descriptor() ([]byte, []int) {
	return fileDescriptor_0c0c775ddd67e80d, []int{1}
}

func (m *MacsecCtrlrAnStatusT) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MacsecCtrlrAnStatusT.Unmarshal(m, b)
}
func (m *MacsecCtrlrAnStatusT) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MacsecCtrlrAnStatusT.Marshal(b, m, deterministic)
}
func (m *MacsecCtrlrAnStatusT) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MacsecCtrlrAnStatusT.Merge(m, src)
}
func (m *MacsecCtrlrAnStatusT) XXX_Size() int {
	return xxx_messageInfo_MacsecCtrlrAnStatusT.Size(m)
}
func (m *MacsecCtrlrAnStatusT) XXX_DiscardUnknown() {
	xxx_messageInfo_MacsecCtrlrAnStatusT.DiscardUnknown(m)
}

var xxx_messageInfo_MacsecCtrlrAnStatusT proto.InternalMessageInfo

func (m *MacsecCtrlrAnStatusT) GetAssociationNumber() uint32 {
	if m != nil {
		return m.AssociationNumber
	}
	return 0
}

func (m *MacsecCtrlrAnStatusT) GetShortSecureChannelId() uint32 {
	if m != nil {
		return m.ShortSecureChannelId
	}
	return 0
}

type MacsecCtrlrScStatusT struct {
	ProtectionEnabled     bool                    `protobuf:"varint,1,opt,name=protection_enabled,json=protectionEnabled,proto3" json:"protection_enabled,omitempty"`
	SecureChannelId       string                  `protobuf:"bytes,2,opt,name=secure_channel_id,json=secureChannelId,proto3" json:"secure_channel_id,omitempty"`
	ConfidentialityOffset uint32                  `protobuf:"varint,3,opt,name=confidentiality_offset,json=confidentialityOffset,proto3" json:"confidentiality_offset,omitempty"`
	CipherSuite           string                  `protobuf:"bytes,4,opt,name=cipher_suite,json=cipherSuite,proto3" json:"cipher_suite,omitempty"`
	MaxPacketNumber       uint64                  `protobuf:"varint,5,opt,name=max_packet_number,json=maxPacketNumber,proto3" json:"max_packet_number,omitempty"`
	RecentPacketNumber    uint64                  `protobuf:"varint,6,opt,name=recent_packet_number,json=recentPacketNumber,proto3" json:"recent_packet_number,omitempty"`
	ActiveAssociation     []*MacsecCtrlrAnStatusT `protobuf:"bytes,7,rep,name=active_association,json=activeAssociation,proto3" json:"active_association,omitempty"`
	XXX_NoUnkeyedLiteral  struct{}                `json:"-"`
	XXX_unrecognized      []byte                  `json:"-"`
	XXX_sizecache         int32                   `json:"-"`
}

func (m *MacsecCtrlrScStatusT) Reset()         { *m = MacsecCtrlrScStatusT{} }
func (m *MacsecCtrlrScStatusT) String() string { return proto.CompactTextString(m) }
func (*MacsecCtrlrScStatusT) ProtoMessage()    {}
func (*MacsecCtrlrScStatusT) Descriptor() ([]byte, []int) {
	return fileDescriptor_0c0c775ddd67e80d, []int{2}
}

func (m *MacsecCtrlrScStatusT) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MacsecCtrlrScStatusT.Unmarshal(m, b)
}
func (m *MacsecCtrlrScStatusT) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MacsecCtrlrScStatusT.Marshal(b, m, deterministic)
}
func (m *MacsecCtrlrScStatusT) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MacsecCtrlrScStatusT.Merge(m, src)
}
func (m *MacsecCtrlrScStatusT) XXX_Size() int {
	return xxx_messageInfo_MacsecCtrlrScStatusT.Size(m)
}
func (m *MacsecCtrlrScStatusT) XXX_DiscardUnknown() {
	xxx_messageInfo_MacsecCtrlrScStatusT.DiscardUnknown(m)
}

var xxx_messageInfo_MacsecCtrlrScStatusT proto.InternalMessageInfo

func (m *MacsecCtrlrScStatusT) GetProtectionEnabled() bool {
	if m != nil {
		return m.ProtectionEnabled
	}
	return false
}

func (m *MacsecCtrlrScStatusT) GetSecureChannelId() string {
	if m != nil {
		return m.SecureChannelId
	}
	return ""
}

func (m *MacsecCtrlrScStatusT) GetConfidentialityOffset() uint32 {
	if m != nil {
		return m.ConfidentialityOffset
	}
	return 0
}

func (m *MacsecCtrlrScStatusT) GetCipherSuite() string {
	if m != nil {
		return m.CipherSuite
	}
	return ""
}

func (m *MacsecCtrlrScStatusT) GetMaxPacketNumber() uint64 {
	if m != nil {
		return m.MaxPacketNumber
	}
	return 0
}

func (m *MacsecCtrlrScStatusT) GetRecentPacketNumber() uint64 {
	if m != nil {
		return m.RecentPacketNumber
	}
	return 0
}

func (m *MacsecCtrlrScStatusT) GetActiveAssociation() []*MacsecCtrlrAnStatusT {
	if m != nil {
		return m.ActiveAssociation
	}
	return nil
}

type MacsecCtrlrIfStatusT struct {
	State                string                `protobuf:"bytes,50,opt,name=state,proto3" json:"state,omitempty"`
	ReplayWindowSize     uint32                `protobuf:"varint,51,opt,name=replay_window_size,json=replayWindowSize,proto3" json:"replay_window_size,omitempty"`
	MustSecure           bool                  `protobuf:"varint,52,opt,name=must_secure,json=mustSecure,proto3" json:"must_secure,omitempty"`
	EncryptScStatus      *MacsecCtrlrScStatusT `protobuf:"bytes,53,opt,name=encrypt_sc_status,json=encryptScStatus,proto3" json:"encrypt_sc_status,omitempty"`
	DecryptScStatus      *MacsecCtrlrScStatusT `protobuf:"bytes,54,opt,name=decrypt_sc_status,json=decryptScStatus,proto3" json:"decrypt_sc_status,omitempty"`
	SecureMode           uint32                `protobuf:"varint,55,opt,name=secure_mode,json=secureMode,proto3" json:"secure_mode,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *MacsecCtrlrIfStatusT) Reset()         { *m = MacsecCtrlrIfStatusT{} }
func (m *MacsecCtrlrIfStatusT) String() string { return proto.CompactTextString(m) }
func (*MacsecCtrlrIfStatusT) ProtoMessage()    {}
func (*MacsecCtrlrIfStatusT) Descriptor() ([]byte, []int) {
	return fileDescriptor_0c0c775ddd67e80d, []int{3}
}

func (m *MacsecCtrlrIfStatusT) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MacsecCtrlrIfStatusT.Unmarshal(m, b)
}
func (m *MacsecCtrlrIfStatusT) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MacsecCtrlrIfStatusT.Marshal(b, m, deterministic)
}
func (m *MacsecCtrlrIfStatusT) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MacsecCtrlrIfStatusT.Merge(m, src)
}
func (m *MacsecCtrlrIfStatusT) XXX_Size() int {
	return xxx_messageInfo_MacsecCtrlrIfStatusT.Size(m)
}
func (m *MacsecCtrlrIfStatusT) XXX_DiscardUnknown() {
	xxx_messageInfo_MacsecCtrlrIfStatusT.DiscardUnknown(m)
}

var xxx_messageInfo_MacsecCtrlrIfStatusT proto.InternalMessageInfo

func (m *MacsecCtrlrIfStatusT) GetState() string {
	if m != nil {
		return m.State
	}
	return ""
}

func (m *MacsecCtrlrIfStatusT) GetReplayWindowSize() uint32 {
	if m != nil {
		return m.ReplayWindowSize
	}
	return 0
}

func (m *MacsecCtrlrIfStatusT) GetMustSecure() bool {
	if m != nil {
		return m.MustSecure
	}
	return false
}

func (m *MacsecCtrlrIfStatusT) GetEncryptScStatus() *MacsecCtrlrScStatusT {
	if m != nil {
		return m.EncryptScStatus
	}
	return nil
}

func (m *MacsecCtrlrIfStatusT) GetDecryptScStatus() *MacsecCtrlrScStatusT {
	if m != nil {
		return m.DecryptScStatus
	}
	return nil
}

func (m *MacsecCtrlrIfStatusT) GetSecureMode() uint32 {
	if m != nil {
		return m.SecureMode
	}
	return 0
}

func init() {
	proto.RegisterType((*MacsecCtrlrIfStatusT_KEYS)(nil), "cisco_ios_xr_macsec_ctrlr_oper.macsec_ctrlr_oper.macsec_ctrlr_ports.macsec_ctrlr_port.macsec_ctrlr_info.macsec_ctrlr_if_status_t_KEYS")
	proto.RegisterType((*MacsecCtrlrAnStatusT)(nil), "cisco_ios_xr_macsec_ctrlr_oper.macsec_ctrlr_oper.macsec_ctrlr_ports.macsec_ctrlr_port.macsec_ctrlr_info.macsec_ctrlr_an_status_t")
	proto.RegisterType((*MacsecCtrlrScStatusT)(nil), "cisco_ios_xr_macsec_ctrlr_oper.macsec_ctrlr_oper.macsec_ctrlr_ports.macsec_ctrlr_port.macsec_ctrlr_info.macsec_ctrlr_sc_status_t")
	proto.RegisterType((*MacsecCtrlrIfStatusT)(nil), "cisco_ios_xr_macsec_ctrlr_oper.macsec_ctrlr_oper.macsec_ctrlr_ports.macsec_ctrlr_port.macsec_ctrlr_info.macsec_ctrlr_if_status_t")
}

func init() { proto.RegisterFile("macsec_ctrlr_if_status_t.proto", fileDescriptor_0c0c775ddd67e80d) }

var fileDescriptor_0c0c775ddd67e80d = []byte{
	// 500 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xcc, 0x94, 0xcf, 0x8e, 0xd3, 0x30,
	0x10, 0xc6, 0x15, 0xda, 0x5d, 0x58, 0x17, 0x54, 0x6a, 0x15, 0xf0, 0x05, 0xb6, 0xf4, 0x54, 0x21,
	0xa8, 0xd0, 0x96, 0xc2, 0x19, 0xa1, 0x3d, 0x20, 0xc4, 0x1f, 0x25, 0x07, 0xc4, 0xc9, 0x72, 0x9d,
	0x09, 0xb5, 0x48, 0xec, 0xc8, 0x76, 0xd8, 0x76, 0x4f, 0xc0, 0x03, 0x21, 0xf1, 0x48, 0xbc, 0x09,
	0xca, 0xb8, 0xbb, 0x6d, 0x02, 0x2b, 0x6e, 0xb0, 0x37, 0xe7, 0xfb, 0x66, 0xe2, 0x9f, 0x66, 0xbe,
	0x84, 0xdc, 0x2b, 0x84, 0x74, 0x20, 0xb9, 0xf4, 0x36, 0xb7, 0x5c, 0x65, 0xdc, 0x79, 0xe1, 0x2b,
	0xc7, 0xfd, 0xb4, 0xb4, 0xc6, 0x1b, 0xfa, 0x51, 0x2a, 0x27, 0x0d, 0x57, 0xc6, 0xf1, 0x95, 0xe5,
	0x8d, 0x62, 0x53, 0x82, 0x9d, 0xfe, 0x45, 0x29, 0x8d, 0xf5, 0xee, 0x77, 0xa9, 0xa9, 0x28, 0x9d,
	0x99, 0xf1, 0x8c, 0xdc, 0xbd, 0x08, 0x85, 0xbf, 0x3a, 0xfe, 0x90, 0x50, 0x4a, 0xba, 0x5a, 0x14,
	0xc0, 0xa2, 0x51, 0x34, 0x39, 0x88, 0xf1, 0x3c, 0xfe, 0x12, 0x11, 0xd6, 0xe8, 0x12, 0xfa, 0xbc,
	0x8b, 0x3e, 0x22, 0x54, 0x38, 0x67, 0xa4, 0x12, 0x5e, 0x19, 0xcd, 0x75, 0x55, 0x2c, 0xc0, 0x62,
	0xfb, 0x8d, 0x78, 0xb0, 0xe3, 0xbc, 0x41, 0x83, 0xce, 0xc9, 0x1d, 0xb7, 0x34, 0xd6, 0x73, 0x07,
	0xb2, 0xb2, 0xc0, 0xe5, 0x52, 0x68, 0x0d, 0x39, 0x57, 0x29, 0xbb, 0x82, 0x3d, 0x43, 0xb4, 0x13,
	0x74, 0x5f, 0x04, 0xf3, 0x65, 0x3a, 0xfe, 0xd9, 0x69, 0x21, 0x38, 0xd9, 0x40, 0xa8, 0xc7, 0x08,
	0x12, 0x09, 0x40, 0x8b, 0x45, 0x0e, 0x29, 0x22, 0x5c, 0x8b, 0x07, 0x5b, 0xe7, 0x38, 0x18, 0xf4,
	0x01, 0x19, 0xfc, 0xf9, 0xf2, 0x83, 0xb8, 0xef, 0x9a, 0xf7, 0xd2, 0x39, 0xb9, 0x2d, 0x8d, 0xce,
	0x54, 0x0a, 0xda, 0x2b, 0x91, 0x2b, 0xbf, 0xe6, 0x26, 0xcb, 0x1c, 0x78, 0xd6, 0x41, 0xda, 0x5b,
	0x2d, 0xf7, 0x2d, 0x9a, 0xf4, 0x3e, 0xb9, 0x2e, 0x55, 0xb9, 0x04, 0xcb, 0x5d, 0xa5, 0x3c, 0xb0,
	0x2e, 0xbe, 0xbd, 0x17, 0xb4, 0xa4, 0x96, 0x6a, 0x8a, 0x42, 0xac, 0x78, 0x29, 0xe4, 0x27, 0xf0,
	0x67, 0x63, 0xdb, 0x1b, 0x45, 0x93, 0x6e, 0xdc, 0x2f, 0xc4, 0xea, 0x1d, 0xea, 0x9b, 0xa1, 0x3d,
	0x26, 0x43, 0x0b, 0x12, 0xb4, 0x6f, 0x95, 0xef, 0x63, 0x39, 0x0d, 0x5e, 0xa3, 0xe3, 0x47, 0x44,
	0xa8, 0x90, 0x5e, 0x7d, 0x06, 0xbe, 0xb3, 0x03, 0x76, 0x75, 0xd4, 0x99, 0xf4, 0x8e, 0xbe, 0x46,
	0xd3, 0x7f, 0x94, 0xb7, 0xe9, 0x45, 0xb1, 0x89, 0x07, 0x81, 0xee, 0xf9, 0x16, 0x6e, 0xfc, 0xad,
	0xdb, 0xda, 0xf1, 0x4e, 0x38, 0xe9, 0x90, 0xec, 0xd5, 0x67, 0x60, 0x47, 0x38, 0xca, 0xf0, 0x40,
	0x1f, 0x12, 0x6a, 0xa1, 0xcc, 0xc5, 0x9a, 0x9f, 0x28, 0x9d, 0x9a, 0x13, 0xee, 0xd4, 0x29, 0xb0,
	0x19, 0xae, 0xe6, 0x66, 0x70, 0xde, 0xa3, 0x91, 0xa8, 0x53, 0xa0, 0x87, 0xa4, 0x57, 0x54, 0xee,
	0x2c, 0x7a, 0xec, 0x09, 0x06, 0x84, 0xd4, 0x52, 0x88, 0x1b, 0xfd, 0x1e, 0x91, 0x01, 0x68, 0x69,
	0xd7, 0xa5, 0xdf, 0x06, 0x8c, 0xcd, 0x47, 0xd1, 0x7f, 0x1c, 0xda, 0x4e, 0xd0, 0xe3, 0xfe, 0x06,
	0x2e, 0x91, 0x09, 0x4a, 0x08, 0x9c, 0x42, 0x1b, 0xf8, 0xe9, 0xe5, 0x01, 0xde, 0xc0, 0x9d, 0x03,
	0x1f, 0x92, 0xde, 0xe6, 0xdb, 0x2b, 0x4c, 0x0a, 0xec, 0x19, 0x6e, 0x8a, 0x04, 0xe9, 0xb5, 0x49,
	0x61, 0xb1, 0x8f, 0x3f, 0xc4, 0xd9, 0xaf, 0x00, 0x00, 0x00, 0xff, 0xff, 0x1b, 0xec, 0x78, 0x28,
	0x32, 0x05, 0x00, 0x00,
}
