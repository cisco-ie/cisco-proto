/*
Copyright 2019 Cisco Systems

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: fib_sh_tbl_ext_client_sum.proto

package cisco_ios_xr_fib_common_oper_fib_nodes_node_protocols_protocol_external_client_summaries_external_client_summary

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type FibShTblExtClientSum_KEYS struct {
	NodeName             string   `protobuf:"bytes,1,opt,name=node_name,json=nodeName,proto3" json:"node_name,omitempty"`
	ProtocolName         string   `protobuf:"bytes,2,opt,name=protocol_name,json=protocolName,proto3" json:"protocol_name,omitempty"`
	EcdVer               uint32   `protobuf:"varint,3,opt,name=ecd_ver,json=ecdVer,proto3" json:"ecd_ver,omitempty"`
	Id                   uint32   `protobuf:"varint,4,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FibShTblExtClientSum_KEYS) Reset()         { *m = FibShTblExtClientSum_KEYS{} }
func (m *FibShTblExtClientSum_KEYS) String() string { return proto.CompactTextString(m) }
func (*FibShTblExtClientSum_KEYS) ProtoMessage()    {}
func (*FibShTblExtClientSum_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_dbbd71fc393eada9, []int{0}
}

func (m *FibShTblExtClientSum_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FibShTblExtClientSum_KEYS.Unmarshal(m, b)
}
func (m *FibShTblExtClientSum_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FibShTblExtClientSum_KEYS.Marshal(b, m, deterministic)
}
func (m *FibShTblExtClientSum_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FibShTblExtClientSum_KEYS.Merge(m, src)
}
func (m *FibShTblExtClientSum_KEYS) XXX_Size() int {
	return xxx_messageInfo_FibShTblExtClientSum_KEYS.Size(m)
}
func (m *FibShTblExtClientSum_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_FibShTblExtClientSum_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_FibShTblExtClientSum_KEYS proto.InternalMessageInfo

func (m *FibShTblExtClientSum_KEYS) GetNodeName() string {
	if m != nil {
		return m.NodeName
	}
	return ""
}

func (m *FibShTblExtClientSum_KEYS) GetProtocolName() string {
	if m != nil {
		return m.ProtocolName
	}
	return ""
}

func (m *FibShTblExtClientSum_KEYS) GetEcdVer() uint32 {
	if m != nil {
		return m.EcdVer
	}
	return 0
}

func (m *FibShTblExtClientSum_KEYS) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

type FibShTblExtPlSum struct {
	SepNumEcdPathlist      uint32   `protobuf:"varint,1,opt,name=sep_num_ecd_pathlist,json=sepNumEcdPathlist,proto3" json:"sep_num_ecd_pathlist,omitempty"`
	SepNumEcdPlUnresolved  uint32   `protobuf:"varint,2,opt,name=sep_num_ecd_pl_unresolved,json=sepNumEcdPlUnresolved,proto3" json:"sep_num_ecd_pl_unresolved,omitempty"`
	SepNumEcdPlPerInterest []uint32 `protobuf:"varint,3,rep,packed,name=sep_num_ecd_pl_per_interest,json=sepNumEcdPlPerInterest,proto3" json:"sep_num_ecd_pl_per_interest,omitempty"`
	XXX_NoUnkeyedLiteral   struct{} `json:"-"`
	XXX_unrecognized       []byte   `json:"-"`
	XXX_sizecache          int32    `json:"-"`
}

func (m *FibShTblExtPlSum) Reset()         { *m = FibShTblExtPlSum{} }
func (m *FibShTblExtPlSum) String() string { return proto.CompactTextString(m) }
func (*FibShTblExtPlSum) ProtoMessage()    {}
func (*FibShTblExtPlSum) Descriptor() ([]byte, []int) {
	return fileDescriptor_dbbd71fc393eada9, []int{1}
}

func (m *FibShTblExtPlSum) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FibShTblExtPlSum.Unmarshal(m, b)
}
func (m *FibShTblExtPlSum) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FibShTblExtPlSum.Marshal(b, m, deterministic)
}
func (m *FibShTblExtPlSum) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FibShTblExtPlSum.Merge(m, src)
}
func (m *FibShTblExtPlSum) XXX_Size() int {
	return xxx_messageInfo_FibShTblExtPlSum.Size(m)
}
func (m *FibShTblExtPlSum) XXX_DiscardUnknown() {
	xxx_messageInfo_FibShTblExtPlSum.DiscardUnknown(m)
}

var xxx_messageInfo_FibShTblExtPlSum proto.InternalMessageInfo

func (m *FibShTblExtPlSum) GetSepNumEcdPathlist() uint32 {
	if m != nil {
		return m.SepNumEcdPathlist
	}
	return 0
}

func (m *FibShTblExtPlSum) GetSepNumEcdPlUnresolved() uint32 {
	if m != nil {
		return m.SepNumEcdPlUnresolved
	}
	return 0
}

func (m *FibShTblExtPlSum) GetSepNumEcdPlPerInterest() []uint32 {
	if m != nil {
		return m.SepNumEcdPlPerInterest
	}
	return nil
}

type FibShTblExtClientSum struct {
	SesClientName        string            `protobuf:"bytes,50,opt,name=ses_client_name,json=sesClientName,proto3" json:"ses_client_name,omitempty"`
	SesFeciFibProto      uint32            `protobuf:"varint,51,opt,name=ses_feci_fib_proto,json=sesFeciFibProto,proto3" json:"ses_feci_fib_proto,omitempty"`
	SesNumRegs           uint32            `protobuf:"varint,52,opt,name=ses_num_regs,json=sesNumRegs,proto3" json:"ses_num_regs,omitempty"`
	SesNumPending        uint32            `protobuf:"varint,53,opt,name=ses_num_pending,json=sesNumPending,proto3" json:"ses_num_pending,omitempty"`
	SesClientPulsedTime  uint64            `protobuf:"varint,54,opt,name=ses_client_pulsed_time,json=sesClientPulsedTime,proto3" json:"ses_client_pulsed_time,omitempty"`
	SesCompId            uint32            `protobuf:"varint,55,opt,name=ses_comp_id,json=sesCompId,proto3" json:"ses_comp_id,omitempty"`
	SesEcdVersion        uint32            `protobuf:"varint,56,opt,name=ses_ecd_version,json=sesEcdVersion,proto3" json:"ses_ecd_version,omitempty"`
	SesPlSum             *FibShTblExtPlSum `protobuf:"bytes,57,opt,name=ses_pl_sum,json=sesPlSum,proto3" json:"ses_pl_sum,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *FibShTblExtClientSum) Reset()         { *m = FibShTblExtClientSum{} }
func (m *FibShTblExtClientSum) String() string { return proto.CompactTextString(m) }
func (*FibShTblExtClientSum) ProtoMessage()    {}
func (*FibShTblExtClientSum) Descriptor() ([]byte, []int) {
	return fileDescriptor_dbbd71fc393eada9, []int{2}
}

func (m *FibShTblExtClientSum) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FibShTblExtClientSum.Unmarshal(m, b)
}
func (m *FibShTblExtClientSum) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FibShTblExtClientSum.Marshal(b, m, deterministic)
}
func (m *FibShTblExtClientSum) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FibShTblExtClientSum.Merge(m, src)
}
func (m *FibShTblExtClientSum) XXX_Size() int {
	return xxx_messageInfo_FibShTblExtClientSum.Size(m)
}
func (m *FibShTblExtClientSum) XXX_DiscardUnknown() {
	xxx_messageInfo_FibShTblExtClientSum.DiscardUnknown(m)
}

var xxx_messageInfo_FibShTblExtClientSum proto.InternalMessageInfo

func (m *FibShTblExtClientSum) GetSesClientName() string {
	if m != nil {
		return m.SesClientName
	}
	return ""
}

func (m *FibShTblExtClientSum) GetSesFeciFibProto() uint32 {
	if m != nil {
		return m.SesFeciFibProto
	}
	return 0
}

func (m *FibShTblExtClientSum) GetSesNumRegs() uint32 {
	if m != nil {
		return m.SesNumRegs
	}
	return 0
}

func (m *FibShTblExtClientSum) GetSesNumPending() uint32 {
	if m != nil {
		return m.SesNumPending
	}
	return 0
}

func (m *FibShTblExtClientSum) GetSesClientPulsedTime() uint64 {
	if m != nil {
		return m.SesClientPulsedTime
	}
	return 0
}

func (m *FibShTblExtClientSum) GetSesCompId() uint32 {
	if m != nil {
		return m.SesCompId
	}
	return 0
}

func (m *FibShTblExtClientSum) GetSesEcdVersion() uint32 {
	if m != nil {
		return m.SesEcdVersion
	}
	return 0
}

func (m *FibShTblExtClientSum) GetSesPlSum() *FibShTblExtPlSum {
	if m != nil {
		return m.SesPlSum
	}
	return nil
}

func init() {
	proto.RegisterType((*FibShTblExtClientSum_KEYS)(nil), "cisco_ios_xr_fib_common_oper.fib.nodes.node.protocols.protocol.external_client_summaries.external_client_summary.fib_sh_tbl_ext_client_sum_KEYS")
	proto.RegisterType((*FibShTblExtPlSum)(nil), "cisco_ios_xr_fib_common_oper.fib.nodes.node.protocols.protocol.external_client_summaries.external_client_summary.fib_sh_tbl_ext_pl_sum")
	proto.RegisterType((*FibShTblExtClientSum)(nil), "cisco_ios_xr_fib_common_oper.fib.nodes.node.protocols.protocol.external_client_summaries.external_client_summary.fib_sh_tbl_ext_client_sum")
}

func init() { proto.RegisterFile("fib_sh_tbl_ext_client_sum.proto", fileDescriptor_dbbd71fc393eada9) }

var fileDescriptor_dbbd71fc393eada9 = []byte{
	// 501 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x93, 0xdf, 0x6a, 0x13, 0x41,
	0x14, 0xc6, 0xd9, 0xa4, 0xd4, 0x66, 0xda, 0x55, 0x1c, 0x6d, 0x9d, 0x52, 0xa8, 0x4b, 0x04, 0x09,
	0x08, 0x2b, 0x34, 0xfe, 0xa9, 0x78, 0x29, 0x29, 0x14, 0x21, 0x2c, 0x5b, 0x15, 0xbc, 0x1a, 0x92,
	0x9d, 0x93, 0x74, 0x60, 0xfe, 0x31, 0x67, 0xb7, 0xc4, 0x27, 0xf0, 0xc2, 0xf7, 0xf0, 0x35, 0x7c,
	0x15, 0x1f, 0x45, 0x66, 0x92, 0x8d, 0xb1, 0x98, 0xdb, 0xde, 0x2c, 0xcb, 0x77, 0x7e, 0xdf, 0x39,
	0x1f, 0x67, 0xcf, 0x92, 0xa7, 0x33, 0x39, 0xe5, 0x78, 0xcd, 0xeb, 0xa9, 0xe2, 0xb0, 0xa8, 0x79,
	0xa5, 0x24, 0x98, 0x9a, 0x63, 0xa3, 0x73, 0xe7, 0x6d, 0x6d, 0xa9, 0xab, 0x24, 0x56, 0x96, 0x4b,
	0x8b, 0x7c, 0xe1, 0x79, 0xa0, 0x2b, 0xab, 0xb5, 0x35, 0xdc, 0x3a, 0xf0, 0xf9, 0x4c, 0x4e, 0x73,
	0x63, 0x05, 0x60, 0x7c, 0x2e, 0x2d, 0x95, 0x55, 0xb8, 0x7e, 0xcb, 0x61, 0x51, 0x83, 0x37, 0x13,
	0xb5, 0xd1, 0x59, 0x4f, 0xbc, 0x04, 0xdc, 0x52, 0xf9, 0xd6, 0xff, 0x91, 0x90, 0xd3, 0xad, 0xa9,
	0xf8, 0xc7, 0xd1, 0xd7, 0x2b, 0x7a, 0x42, 0x7a, 0x61, 0x1e, 0x37, 0x13, 0x0d, 0x2c, 0xc9, 0x92,
	0x41, 0xaf, 0xdc, 0x0b, 0xc2, 0x78, 0xa2, 0x81, 0x3e, 0x23, 0x69, 0x3b, 0x7d, 0x09, 0x74, 0x22,
	0x70, 0xd0, 0x8a, 0x11, 0x7a, 0x42, 0xee, 0x41, 0x25, 0xf8, 0x0d, 0x78, 0xd6, 0xcd, 0x92, 0x41,
	0x5a, 0xee, 0x42, 0x25, 0xbe, 0x80, 0xa7, 0xf7, 0x49, 0x47, 0x0a, 0xb6, 0x13, 0xb5, 0x8e, 0x14,
	0xfd, 0x5f, 0x09, 0x39, 0xbc, 0x95, 0xc6, 0xa9, 0x90, 0x84, 0xbe, 0x24, 0x8f, 0x11, 0x1c, 0x37,
	0x8d, 0xe6, 0xa1, 0x95, 0x9b, 0xd4, 0xd7, 0x4a, 0x62, 0x1d, 0xf3, 0xa4, 0xe5, 0x43, 0x04, 0x37,
	0x6e, 0xf4, 0xa8, 0x12, 0xc5, 0xaa, 0x40, 0xcf, 0xc9, 0xf1, 0x3f, 0x06, 0xc5, 0x1b, 0xe3, 0x01,
	0xad, 0xba, 0x01, 0x11, 0x43, 0xa6, 0xe5, 0xe1, 0x5f, 0x97, 0xfa, 0xbc, 0x2e, 0xd2, 0xf7, 0xe4,
	0xe4, 0x96, 0xd3, 0x81, 0xe7, 0xd2, 0xd4, 0xe0, 0x01, 0x6b, 0xd6, 0xcd, 0xba, 0x83, 0xb4, 0x3c,
	0xda, 0xf0, 0x16, 0xe0, 0x2f, 0x57, 0xd5, 0xfe, 0xef, 0x2e, 0x39, 0xde, 0xba, 0x4f, 0xfa, 0x9c,
	0x3c, 0x40, 0xc0, 0x56, 0x89, 0xfb, 0x3a, 0x8b, 0xfb, 0x4a, 0x11, 0xf0, 0x43, 0x54, 0xe3, 0xc2,
	0x5e, 0x10, 0x1a, 0xb8, 0x19, 0x54, 0x32, 0x5e, 0x41, 0xdc, 0x26, 0x1b, 0xc6, 0xd4, 0xa1, 0xc3,
	0x05, 0x54, 0xf2, 0x42, 0x4e, 0x8b, 0x78, 0x34, 0x19, 0x39, 0x08, 0x70, 0xc8, 0xeb, 0x61, 0x8e,
	0xec, 0x55, 0xc4, 0x08, 0x02, 0x8e, 0x1b, 0x5d, 0xc2, 0x1c, 0xdb, 0xb1, 0x81, 0x70, 0x60, 0x84,
	0x34, 0x73, 0xf6, 0x3a, 0x42, 0xe9, 0x12, 0x2a, 0x96, 0x22, 0x1d, 0x92, 0xa3, 0x8d, 0x78, 0xae,
	0x51, 0x08, 0x82, 0xd7, 0x52, 0x03, 0x7b, 0x93, 0x25, 0x83, 0x9d, 0xf2, 0xd1, 0x3a, 0x65, 0x11,
	0x6b, 0x9f, 0xa4, 0x06, 0x7a, 0x4a, 0xf6, 0xa3, 0xc9, 0x6a, 0xc7, 0xa5, 0x60, 0x6f, 0x63, 0xe3,
	0x5e, 0x20, 0xad, 0x76, 0x97, 0xa2, 0x1d, 0xbe, 0x3a, 0x00, 0x94, 0xd6, 0xb0, 0xf3, 0xf5, 0xf0,
	0x51, 0xbc, 0x83, 0x20, 0xd2, 0x9f, 0x09, 0x09, 0x99, 0x57, 0x1f, 0x9c, 0xbd, 0xcb, 0x92, 0xc1,
	0xfe, 0xd9, 0xf7, 0x24, 0xbf, 0xeb, 0x5f, 0x22, 0xff, 0xef, 0x01, 0x96, 0x7b, 0x08, 0x58, 0xa8,
	0xab, 0x46, 0x4f, 0x77, 0x63, 0xef, 0xe1, 0x9f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x03, 0x5d, 0xb7,
	0x38, 0xce, 0x03, 0x00, 0x00,
}
