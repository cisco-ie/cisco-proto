/*
Copyright 2019 Cisco Systems

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: rsi_srlg_group_show.proto

package cisco_ios_xr_infra_rsi_oper_srlg_nodes_node_groups_group

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type RsiSrlgGroupShow_KEYS struct {
	NodeName             string   `protobuf:"bytes,1,opt,name=node_name,json=nodeName,proto3" json:"node_name,omitempty"`
	GroupName            string   `protobuf:"bytes,2,opt,name=group_name,json=groupName,proto3" json:"group_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RsiSrlgGroupShow_KEYS) Reset()         { *m = RsiSrlgGroupShow_KEYS{} }
func (m *RsiSrlgGroupShow_KEYS) String() string { return proto.CompactTextString(m) }
func (*RsiSrlgGroupShow_KEYS) ProtoMessage()    {}
func (*RsiSrlgGroupShow_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_4d4a1f2a6b9d8a38, []int{0}
}

func (m *RsiSrlgGroupShow_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RsiSrlgGroupShow_KEYS.Unmarshal(m, b)
}
func (m *RsiSrlgGroupShow_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RsiSrlgGroupShow_KEYS.Marshal(b, m, deterministic)
}
func (m *RsiSrlgGroupShow_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RsiSrlgGroupShow_KEYS.Merge(m, src)
}
func (m *RsiSrlgGroupShow_KEYS) XXX_Size() int {
	return xxx_messageInfo_RsiSrlgGroupShow_KEYS.Size(m)
}
func (m *RsiSrlgGroupShow_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_RsiSrlgGroupShow_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_RsiSrlgGroupShow_KEYS proto.InternalMessageInfo

func (m *RsiSrlgGroupShow_KEYS) GetNodeName() string {
	if m != nil {
		return m.NodeName
	}
	return ""
}

func (m *RsiSrlgGroupShow_KEYS) GetGroupName() string {
	if m != nil {
		return m.GroupName
	}
	return ""
}

type RsiSrlgAttrBrief struct {
	SrlgValue            uint32   `protobuf:"varint,1,opt,name=srlg_value,json=srlgValue,proto3" json:"srlg_value,omitempty"`
	Priority             string   `protobuf:"bytes,2,opt,name=priority,proto3" json:"priority,omitempty"`
	SrlgIndex            uint32   `protobuf:"varint,3,opt,name=srlg_index,json=srlgIndex,proto3" json:"srlg_index,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RsiSrlgAttrBrief) Reset()         { *m = RsiSrlgAttrBrief{} }
func (m *RsiSrlgAttrBrief) String() string { return proto.CompactTextString(m) }
func (*RsiSrlgAttrBrief) ProtoMessage()    {}
func (*RsiSrlgAttrBrief) Descriptor() ([]byte, []int) {
	return fileDescriptor_4d4a1f2a6b9d8a38, []int{1}
}

func (m *RsiSrlgAttrBrief) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RsiSrlgAttrBrief.Unmarshal(m, b)
}
func (m *RsiSrlgAttrBrief) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RsiSrlgAttrBrief.Marshal(b, m, deterministic)
}
func (m *RsiSrlgAttrBrief) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RsiSrlgAttrBrief.Merge(m, src)
}
func (m *RsiSrlgAttrBrief) XXX_Size() int {
	return xxx_messageInfo_RsiSrlgAttrBrief.Size(m)
}
func (m *RsiSrlgAttrBrief) XXX_DiscardUnknown() {
	xxx_messageInfo_RsiSrlgAttrBrief.DiscardUnknown(m)
}

var xxx_messageInfo_RsiSrlgAttrBrief proto.InternalMessageInfo

func (m *RsiSrlgAttrBrief) GetSrlgValue() uint32 {
	if m != nil {
		return m.SrlgValue
	}
	return 0
}

func (m *RsiSrlgAttrBrief) GetPriority() string {
	if m != nil {
		return m.Priority
	}
	return ""
}

func (m *RsiSrlgAttrBrief) GetSrlgIndex() uint32 {
	if m != nil {
		return m.SrlgIndex
	}
	return 0
}

type RsiSrlgGroupShow struct {
	GroupNameXr          string              `protobuf:"bytes,50,opt,name=group_name_xr,json=groupNameXr,proto3" json:"group_name_xr,omitempty"`
	GroupValues          uint32              `protobuf:"varint,51,opt,name=group_values,json=groupValues,proto3" json:"group_values,omitempty"`
	SrlgAttribute        []*RsiSrlgAttrBrief `protobuf:"bytes,52,rep,name=srlg_attribute,json=srlgAttribute,proto3" json:"srlg_attribute,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *RsiSrlgGroupShow) Reset()         { *m = RsiSrlgGroupShow{} }
func (m *RsiSrlgGroupShow) String() string { return proto.CompactTextString(m) }
func (*RsiSrlgGroupShow) ProtoMessage()    {}
func (*RsiSrlgGroupShow) Descriptor() ([]byte, []int) {
	return fileDescriptor_4d4a1f2a6b9d8a38, []int{2}
}

func (m *RsiSrlgGroupShow) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RsiSrlgGroupShow.Unmarshal(m, b)
}
func (m *RsiSrlgGroupShow) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RsiSrlgGroupShow.Marshal(b, m, deterministic)
}
func (m *RsiSrlgGroupShow) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RsiSrlgGroupShow.Merge(m, src)
}
func (m *RsiSrlgGroupShow) XXX_Size() int {
	return xxx_messageInfo_RsiSrlgGroupShow.Size(m)
}
func (m *RsiSrlgGroupShow) XXX_DiscardUnknown() {
	xxx_messageInfo_RsiSrlgGroupShow.DiscardUnknown(m)
}

var xxx_messageInfo_RsiSrlgGroupShow proto.InternalMessageInfo

func (m *RsiSrlgGroupShow) GetGroupNameXr() string {
	if m != nil {
		return m.GroupNameXr
	}
	return ""
}

func (m *RsiSrlgGroupShow) GetGroupValues() uint32 {
	if m != nil {
		return m.GroupValues
	}
	return 0
}

func (m *RsiSrlgGroupShow) GetSrlgAttribute() []*RsiSrlgAttrBrief {
	if m != nil {
		return m.SrlgAttribute
	}
	return nil
}

func init() {
	proto.RegisterType((*RsiSrlgGroupShow_KEYS)(nil), "cisco_ios_xr_infra_rsi_oper.srlg.nodes.node.groups.group.rsi_srlg_group_show_KEYS")
	proto.RegisterType((*RsiSrlgAttrBrief)(nil), "cisco_ios_xr_infra_rsi_oper.srlg.nodes.node.groups.group.rsi_srlg_attr_brief")
	proto.RegisterType((*RsiSrlgGroupShow)(nil), "cisco_ios_xr_infra_rsi_oper.srlg.nodes.node.groups.group.rsi_srlg_group_show")
}

func init() { proto.RegisterFile("rsi_srlg_group_show.proto", fileDescriptor_4d4a1f2a6b9d8a38) }

var fileDescriptor_4d4a1f2a6b9d8a38 = []byte{
	// 284 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x51, 0x31, 0x4f, 0xf3, 0x30,
	0x10, 0x55, 0xbe, 0x4a, 0x9f, 0x1a, 0x97, 0x30, 0x98, 0xc5, 0x80, 0x90, 0x4a, 0xa6, 0x4e, 0x1e,
	0x5a, 0x06, 0x56, 0x06, 0x06, 0x84, 0x60, 0x08, 0x52, 0x05, 0xd3, 0x29, 0x69, 0xdd, 0x62, 0xa9,
	0x8d, 0xa3, 0xb3, 0x03, 0xe1, 0x6f, 0xf2, 0x8b, 0xd0, 0x5d, 0xc0, 0x61, 0xe8, 0xc4, 0x62, 0xcb,
	0xef, 0xde, 0x7b, 0xf7, 0xee, 0x2c, 0x4e, 0xd1, 0x5b, 0xf0, 0xb8, 0xdb, 0xc2, 0x16, 0x5d, 0xdb,
	0x80, 0x7f, 0x75, 0xef, 0xba, 0x41, 0x17, 0x9c, 0xbc, 0x5e, 0x59, 0xbf, 0x72, 0x60, 0x9d, 0x87,
	0x0e, 0xc1, 0xd6, 0x1b, 0x2c, 0x81, 0xd8, 0xae, 0x31, 0xa8, 0x49, 0xa2, 0x6b, 0xb7, 0x36, 0x9e,
	0x4f, 0xcd, 0x6a, 0xdf, 0x5f, 0xf9, 0x52, 0xa8, 0x03, 0xb6, 0x70, 0x7f, 0xfb, 0xf2, 0x24, 0xcf,
	0x45, 0x4a, 0x02, 0xa8, 0xcb, 0xbd, 0x51, 0xc9, 0x34, 0x99, 0xa5, 0xc5, 0x98, 0x80, 0xc7, 0x72,
	0x6f, 0xe4, 0x85, 0x10, 0x3d, 0x9f, 0xab, 0xff, 0xb8, 0x9a, 0x32, 0x42, 0xe5, 0xdc, 0x89, 0x93,
	0xe8, 0x5b, 0x86, 0x80, 0x50, 0xa1, 0x35, 0x1b, 0x52, 0x31, 0xf4, 0x56, 0xee, 0xda, 0xde, 0x33,
	0x2b, 0x52, 0x42, 0x96, 0x04, 0xc8, 0x33, 0x31, 0x6e, 0xd0, 0x3a, 0xb4, 0xe1, 0xe3, 0xdb, 0x32,
	0xbe, 0xa3, 0xd4, 0xd6, 0x6b, 0xd3, 0xa9, 0xd1, 0x20, 0xbd, 0x23, 0x20, 0xff, 0x4c, 0x7e, 0x75,
	0x1c, 0x26, 0x91, 0xb9, 0xc8, 0x86, 0x9c, 0xd0, 0xa1, 0x9a, 0xb3, 0xef, 0x24, 0x46, 0x7d, 0x46,
	0x79, 0x29, 0x8e, 0x7a, 0x0e, 0xc7, 0xf2, 0x6a, 0xc1, 0xe6, 0x3d, 0x85, 0x83, 0x79, 0x19, 0xc4,
	0x71, 0x9c, 0xc5, 0x56, 0x6d, 0x30, 0xea, 0x6a, 0x3a, 0x9a, 0x4d, 0xe6, 0x0f, 0xfa, 0xaf, 0xab,
	0xd7, 0x07, 0xf6, 0x53, 0x64, 0x04, 0xdc, 0xfc, 0xf4, 0xa8, 0xfe, 0xf3, 0xf7, 0x2e, 0xbe, 0x02,
	0x00, 0x00, 0xff, 0xff, 0x49, 0xf3, 0x95, 0xe2, 0xfb, 0x01, 0x00, 0x00,
}
