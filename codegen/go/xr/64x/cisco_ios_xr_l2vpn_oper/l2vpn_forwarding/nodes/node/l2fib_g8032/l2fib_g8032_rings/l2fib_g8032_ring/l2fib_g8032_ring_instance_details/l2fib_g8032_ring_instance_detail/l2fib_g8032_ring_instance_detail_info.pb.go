/*
Copyright 2019 Cisco Systems

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: l2fib_g8032_ring_instance_detail_info.proto

package cisco_ios_xr_l2vpn_oper_l2vpn_forwarding_nodes_node_l2fib_g8032_l2fib_g8032_rings_l2fib_g8032_ring_l2fib_g8032_ring_instance_details_l2fib_g8032_ring_instance_detail

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type L2FibG8032RingInstanceDetailInfo_KEYS struct {
	NodeId               string   `protobuf:"bytes,1,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	RingName             string   `protobuf:"bytes,2,opt,name=ring_name,json=ringName,proto3" json:"ring_name,omitempty"`
	Instance             uint32   `protobuf:"varint,3,opt,name=instance,proto3" json:"instance,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *L2FibG8032RingInstanceDetailInfo_KEYS) Reset()         { *m = L2FibG8032RingInstanceDetailInfo_KEYS{} }
func (m *L2FibG8032RingInstanceDetailInfo_KEYS) String() string { return proto.CompactTextString(m) }
func (*L2FibG8032RingInstanceDetailInfo_KEYS) ProtoMessage()    {}
func (*L2FibG8032RingInstanceDetailInfo_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_2375f2a402624b49, []int{0}
}

func (m *L2FibG8032RingInstanceDetailInfo_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_L2FibG8032RingInstanceDetailInfo_KEYS.Unmarshal(m, b)
}
func (m *L2FibG8032RingInstanceDetailInfo_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_L2FibG8032RingInstanceDetailInfo_KEYS.Marshal(b, m, deterministic)
}
func (m *L2FibG8032RingInstanceDetailInfo_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_L2FibG8032RingInstanceDetailInfo_KEYS.Merge(m, src)
}
func (m *L2FibG8032RingInstanceDetailInfo_KEYS) XXX_Size() int {
	return xxx_messageInfo_L2FibG8032RingInstanceDetailInfo_KEYS.Size(m)
}
func (m *L2FibG8032RingInstanceDetailInfo_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_L2FibG8032RingInstanceDetailInfo_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_L2FibG8032RingInstanceDetailInfo_KEYS proto.InternalMessageInfo

func (m *L2FibG8032RingInstanceDetailInfo_KEYS) GetNodeId() string {
	if m != nil {
		return m.NodeId
	}
	return ""
}

func (m *L2FibG8032RingInstanceDetailInfo_KEYS) GetRingName() string {
	if m != nil {
		return m.RingName
	}
	return ""
}

func (m *L2FibG8032RingInstanceDetailInfo_KEYS) GetInstance() uint32 {
	if m != nil {
		return m.Instance
	}
	return 0
}

type L2FibG8032RingInstanceDetailInfo struct {
	RingInstance         uint32   `protobuf:"varint,50,opt,name=ring_instance,json=ringInstance,proto3" json:"ring_instance,omitempty"`
	VlanIds              string   `protobuf:"bytes,51,opt,name=vlan_ids,json=vlanIds,proto3" json:"vlan_ids,omitempty"`
	RingProfile          string   `protobuf:"bytes,52,opt,name=ring_profile,json=ringProfile,proto3" json:"ring_profile,omitempty"`
	Rpl                  string   `protobuf:"bytes,53,opt,name=rpl,proto3" json:"rpl,omitempty"`
	ApsPort0             string   `protobuf:"bytes,54,opt,name=aps_port0,json=apsPort0,proto3" json:"aps_port0,omitempty"`
	ApsPort1             string   `protobuf:"bytes,55,opt,name=aps_port1,json=apsPort1,proto3" json:"aps_port1,omitempty"`
	ApsPortStatus0       string   `protobuf:"bytes,56,opt,name=aps_port_status0,json=apsPortStatus0,proto3" json:"aps_port_status0,omitempty"`
	ApsPortStatus1       string   `protobuf:"bytes,57,opt,name=aps_port_status1,json=apsPortStatus1,proto3" json:"aps_port_status1,omitempty"`
	ApsChannelLevel      uint32   `protobuf:"varint,58,opt,name=aps_channel_level,json=apsChannelLevel,proto3" json:"aps_channel_level,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *L2FibG8032RingInstanceDetailInfo) Reset()         { *m = L2FibG8032RingInstanceDetailInfo{} }
func (m *L2FibG8032RingInstanceDetailInfo) String() string { return proto.CompactTextString(m) }
func (*L2FibG8032RingInstanceDetailInfo) ProtoMessage()    {}
func (*L2FibG8032RingInstanceDetailInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_2375f2a402624b49, []int{1}
}

func (m *L2FibG8032RingInstanceDetailInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_L2FibG8032RingInstanceDetailInfo.Unmarshal(m, b)
}
func (m *L2FibG8032RingInstanceDetailInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_L2FibG8032RingInstanceDetailInfo.Marshal(b, m, deterministic)
}
func (m *L2FibG8032RingInstanceDetailInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_L2FibG8032RingInstanceDetailInfo.Merge(m, src)
}
func (m *L2FibG8032RingInstanceDetailInfo) XXX_Size() int {
	return xxx_messageInfo_L2FibG8032RingInstanceDetailInfo.Size(m)
}
func (m *L2FibG8032RingInstanceDetailInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_L2FibG8032RingInstanceDetailInfo.DiscardUnknown(m)
}

var xxx_messageInfo_L2FibG8032RingInstanceDetailInfo proto.InternalMessageInfo

func (m *L2FibG8032RingInstanceDetailInfo) GetRingInstance() uint32 {
	if m != nil {
		return m.RingInstance
	}
	return 0
}

func (m *L2FibG8032RingInstanceDetailInfo) GetVlanIds() string {
	if m != nil {
		return m.VlanIds
	}
	return ""
}

func (m *L2FibG8032RingInstanceDetailInfo) GetRingProfile() string {
	if m != nil {
		return m.RingProfile
	}
	return ""
}

func (m *L2FibG8032RingInstanceDetailInfo) GetRpl() string {
	if m != nil {
		return m.Rpl
	}
	return ""
}

func (m *L2FibG8032RingInstanceDetailInfo) GetApsPort0() string {
	if m != nil {
		return m.ApsPort0
	}
	return ""
}

func (m *L2FibG8032RingInstanceDetailInfo) GetApsPort1() string {
	if m != nil {
		return m.ApsPort1
	}
	return ""
}

func (m *L2FibG8032RingInstanceDetailInfo) GetApsPortStatus0() string {
	if m != nil {
		return m.ApsPortStatus0
	}
	return ""
}

func (m *L2FibG8032RingInstanceDetailInfo) GetApsPortStatus1() string {
	if m != nil {
		return m.ApsPortStatus1
	}
	return ""
}

func (m *L2FibG8032RingInstanceDetailInfo) GetApsChannelLevel() uint32 {
	if m != nil {
		return m.ApsChannelLevel
	}
	return 0
}

func init() {
	proto.RegisterType((*L2FibG8032RingInstanceDetailInfo_KEYS)(nil), "cisco_ios_xr_l2vpn_oper.l2vpn_forwarding.nodes.node.l2fib_g8032.l2fib_g8032_rings.l2fib_g8032_ring.l2fib_g8032_ring_instance_details.l2fib_g8032_ring_instance_detail.l2fib_g8032_ring_instance_detail_info_KEYS")
	proto.RegisterType((*L2FibG8032RingInstanceDetailInfo)(nil), "cisco_ios_xr_l2vpn_oper.l2vpn_forwarding.nodes.node.l2fib_g8032.l2fib_g8032_rings.l2fib_g8032_ring.l2fib_g8032_ring_instance_details.l2fib_g8032_ring_instance_detail.l2fib_g8032_ring_instance_detail_info")
}

func init() {
	proto.RegisterFile("l2fib_g8032_ring_instance_detail_info.proto", fileDescriptor_2375f2a402624b49)
}

var fileDescriptor_2375f2a402624b49 = []byte{
	// 362 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x92, 0xcd, 0x6e, 0xe2, 0x30,
	0x14, 0x85, 0x15, 0x90, 0xf8, 0xf1, 0x0c, 0x33, 0x8c, 0x37, 0xe3, 0x99, 0x6e, 0x28, 0x55, 0x25,
	0x44, 0xa5, 0x88, 0x84, 0xfe, 0xd0, 0x6e, 0xab, 0x2e, 0x50, 0xab, 0x0a, 0xc1, 0xaa, 0xab, 0x2b,
	0x93, 0x38, 0xd4, 0x92, 0xb1, 0x2d, 0x3b, 0xa5, 0x5d, 0xf5, 0x6d, 0xfa, 0x4a, 0x7d, 0x9e, 0xca,
	0x0e, 0x54, 0xd0, 0x22, 0xc1, 0x26, 0xf2, 0xf9, 0xce, 0x89, 0xef, 0xb9, 0x51, 0xd0, 0x89, 0x88,
	0x33, 0x3e, 0x85, 0xd9, 0xa0, 0xd7, 0x8f, 0xc1, 0x70, 0x39, 0x03, 0x2e, 0x6d, 0x4e, 0x65, 0xc2,
	0x20, 0x65, 0x39, 0xe5, 0x02, 0xb8, 0xcc, 0x54, 0xa8, 0x8d, 0xca, 0x15, 0x7e, 0x0b, 0x12, 0x6e,
	0x13, 0x05, 0x5c, 0x59, 0x78, 0x31, 0x20, 0xe2, 0x85, 0x96, 0xa0, 0x34, 0x33, 0x61, 0x71, 0xcc,
	0x94, 0x79, 0xa6, 0x26, 0xe5, 0x72, 0x16, 0x4a, 0x95, 0x32, 0xeb, 0x9f, 0xe1, 0xda, 0x84, 0xf0,
	0xeb, 0x34, 0xfb, 0x8d, 0x84, 0xbb, 0x0a, 0xd9, 0x9d, 0x89, 0xf6, 0x2b, 0xea, 0xee, 0xb5, 0x16,
	0xdc, 0xde, 0x3c, 0x4c, 0xf0, 0x5f, 0x54, 0x75, 0x3d, 0x81, 0xa7, 0x24, 0x68, 0x05, 0x9d, 0xfa,
	0xb8, 0xe2, 0xe4, 0x30, 0xc5, 0x07, 0xa8, 0xee, 0x5f, 0x95, 0x74, 0xce, 0x48, 0xc9, 0x5b, 0x35,
	0x07, 0xee, 0xe9, 0x9c, 0xe1, 0xff, 0xa8, 0xb6, 0xba, 0x92, 0x94, 0x5b, 0x41, 0xa7, 0x31, 0xfe,
	0xd4, 0xed, 0xf7, 0x12, 0x3a, 0xde, 0xab, 0x00, 0x3e, 0x42, 0x8d, 0x0d, 0x93, 0xc4, 0xfe, 0xaa,
	0x9f, 0x0e, 0x0e, 0x97, 0x0c, 0xff, 0x43, 0xb5, 0x85, 0xa0, 0x12, 0x78, 0x6a, 0x49, 0xdf, 0xd7,
	0xa8, 0x3a, 0x3d, 0x4c, 0x2d, 0x3e, 0x44, 0x3e, 0x0a, 0xda, 0xa8, 0x8c, 0x0b, 0x46, 0x4e, 0xbd,
	0xfd, 0xc3, 0xb1, 0x51, 0x81, 0x70, 0x13, 0x95, 0x8d, 0x16, 0xe4, 0xcc, 0x3b, 0xee, 0xe8, 0xf6,
	0xa2, 0xda, 0x82, 0x56, 0x26, 0xef, 0x91, 0xf3, 0x62, 0x2f, 0xaa, 0xed, 0xc8, 0xe9, 0x75, 0x33,
	0x22, 0x17, 0x1b, 0x66, 0x84, 0x3b, 0xa8, 0xb9, 0x32, 0xc1, 0xe6, 0x34, 0x7f, 0xb2, 0x3d, 0x32,
	0xf0, 0x99, 0x5f, 0xcb, 0xcc, 0xa4, 0xa0, 0x5b, 0x92, 0x11, 0xb9, 0xdc, 0x92, 0x8c, 0x70, 0x17,
	0xfd, 0x71, 0xc9, 0xe4, 0x91, 0x4a, 0xc9, 0x04, 0x08, 0xb6, 0x60, 0x82, 0x5c, 0xf9, 0xcf, 0xf0,
	0x9b, 0x6a, 0x7b, 0x5d, 0xf0, 0x3b, 0x87, 0xa7, 0x15, 0xff, 0x1f, 0xf6, 0x3f, 0x02, 0x00, 0x00,
	0xff, 0xff, 0x7e, 0xfc, 0x1b, 0xac, 0xb6, 0x02, 0x00, 0x00,
}
