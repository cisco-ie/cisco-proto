/*
Copyright 2019 Cisco Systems

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: l2vpn_main_interface_instance.proto

package cisco_ios_xr_l2vpn_oper_l2vpnv2_nodes_node_main_interfaces_main_interface_main_interface_instances_main_interface_instance_main_interface_instance_info

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type L2VpnMainInterfaceInstance_KEYS struct {
	NodeId               string   `protobuf:"bytes,1,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	InterfaceName        string   `protobuf:"bytes,2,opt,name=interface_name,json=interfaceName,proto3" json:"interface_name,omitempty"`
	Instance             uint32   `protobuf:"varint,3,opt,name=instance,proto3" json:"instance,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *L2VpnMainInterfaceInstance_KEYS) Reset()         { *m = L2VpnMainInterfaceInstance_KEYS{} }
func (m *L2VpnMainInterfaceInstance_KEYS) String() string { return proto.CompactTextString(m) }
func (*L2VpnMainInterfaceInstance_KEYS) ProtoMessage()    {}
func (*L2VpnMainInterfaceInstance_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_dd7d7294270a3af3, []int{0}
}

func (m *L2VpnMainInterfaceInstance_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_L2VpnMainInterfaceInstance_KEYS.Unmarshal(m, b)
}
func (m *L2VpnMainInterfaceInstance_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_L2VpnMainInterfaceInstance_KEYS.Marshal(b, m, deterministic)
}
func (m *L2VpnMainInterfaceInstance_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_L2VpnMainInterfaceInstance_KEYS.Merge(m, src)
}
func (m *L2VpnMainInterfaceInstance_KEYS) XXX_Size() int {
	return xxx_messageInfo_L2VpnMainInterfaceInstance_KEYS.Size(m)
}
func (m *L2VpnMainInterfaceInstance_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_L2VpnMainInterfaceInstance_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_L2VpnMainInterfaceInstance_KEYS proto.InternalMessageInfo

func (m *L2VpnMainInterfaceInstance_KEYS) GetNodeId() string {
	if m != nil {
		return m.NodeId
	}
	return ""
}

func (m *L2VpnMainInterfaceInstance_KEYS) GetInterfaceName() string {
	if m != nil {
		return m.InterfaceName
	}
	return ""
}

func (m *L2VpnMainInterfaceInstance_KEYS) GetInstance() uint32 {
	if m != nil {
		return m.Instance
	}
	return 0
}

type L2VpnMainInterfaceInstance struct {
	ConfiguredInstance   uint32   `protobuf:"varint,50,opt,name=configured_instance,json=configuredInstance,proto3" json:"configured_instance,omitempty"`
	FlushCount           uint32   `protobuf:"varint,51,opt,name=flush_count,json=flushCount,proto3" json:"flush_count,omitempty"`
	InterfaceCount       uint32   `protobuf:"varint,52,opt,name=interface_count,json=interfaceCount,proto3" json:"interface_count,omitempty"`
	InstanceFlags        uint32   `protobuf:"varint,53,opt,name=instance_flags,json=instanceFlags,proto3" json:"instance_flags,omitempty"`
	InstanceId           uint32   `protobuf:"varint,54,opt,name=instance_id,json=instanceId,proto3" json:"instance_id,omitempty"`
	InstanceState        string   `protobuf:"bytes,55,opt,name=instance_state,json=instanceState,proto3" json:"instance_state,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *L2VpnMainInterfaceInstance) Reset()         { *m = L2VpnMainInterfaceInstance{} }
func (m *L2VpnMainInterfaceInstance) String() string { return proto.CompactTextString(m) }
func (*L2VpnMainInterfaceInstance) ProtoMessage()    {}
func (*L2VpnMainInterfaceInstance) Descriptor() ([]byte, []int) {
	return fileDescriptor_dd7d7294270a3af3, []int{1}
}

func (m *L2VpnMainInterfaceInstance) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_L2VpnMainInterfaceInstance.Unmarshal(m, b)
}
func (m *L2VpnMainInterfaceInstance) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_L2VpnMainInterfaceInstance.Marshal(b, m, deterministic)
}
func (m *L2VpnMainInterfaceInstance) XXX_Merge(src proto.Message) {
	xxx_messageInfo_L2VpnMainInterfaceInstance.Merge(m, src)
}
func (m *L2VpnMainInterfaceInstance) XXX_Size() int {
	return xxx_messageInfo_L2VpnMainInterfaceInstance.Size(m)
}
func (m *L2VpnMainInterfaceInstance) XXX_DiscardUnknown() {
	xxx_messageInfo_L2VpnMainInterfaceInstance.DiscardUnknown(m)
}

var xxx_messageInfo_L2VpnMainInterfaceInstance proto.InternalMessageInfo

func (m *L2VpnMainInterfaceInstance) GetConfiguredInstance() uint32 {
	if m != nil {
		return m.ConfiguredInstance
	}
	return 0
}

func (m *L2VpnMainInterfaceInstance) GetFlushCount() uint32 {
	if m != nil {
		return m.FlushCount
	}
	return 0
}

func (m *L2VpnMainInterfaceInstance) GetInterfaceCount() uint32 {
	if m != nil {
		return m.InterfaceCount
	}
	return 0
}

func (m *L2VpnMainInterfaceInstance) GetInstanceFlags() uint32 {
	if m != nil {
		return m.InstanceFlags
	}
	return 0
}

func (m *L2VpnMainInterfaceInstance) GetInstanceId() uint32 {
	if m != nil {
		return m.InstanceId
	}
	return 0
}

func (m *L2VpnMainInterfaceInstance) GetInstanceState() string {
	if m != nil {
		return m.InstanceState
	}
	return ""
}

func init() {
	proto.RegisterType((*L2VpnMainInterfaceInstance_KEYS)(nil), "cisco_ios_xr_l2vpn_oper.l2vpnv2.nodes.node.main_interfaces.main_interface.main_interface_instances.main_interface_instance.main_interface_instance_info.l2vpn_main_interface_instance_KEYS")
	proto.RegisterType((*L2VpnMainInterfaceInstance)(nil), "cisco_ios_xr_l2vpn_oper.l2vpnv2.nodes.node.main_interfaces.main_interface.main_interface_instances.main_interface_instance.main_interface_instance_info.l2vpn_main_interface_instance")
}

func init() {
	proto.RegisterFile("l2vpn_main_interface_instance.proto", fileDescriptor_dd7d7294270a3af3)
}

var fileDescriptor_dd7d7294270a3af3 = []byte{
	// 303 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x92, 0x4d, 0x4b, 0xc3, 0x30,
	0x18, 0xc7, 0xe9, 0x84, 0xa9, 0x91, 0x2a, 0xc4, 0x83, 0x41, 0x10, 0x47, 0x45, 0xdc, 0xa9, 0x42,
	0xe7, 0xcb, 0x07, 0x10, 0x85, 0x21, 0x78, 0xd8, 0x4e, 0x9e, 0x42, 0x4c, 0xd3, 0x19, 0x68, 0x93,
	0xd2, 0xa4, 0xc3, 0xa3, 0x57, 0x3f, 0x81, 0x5f, 0x57, 0xf2, 0x74, 0x69, 0x70, 0xd0, 0x5d, 0x4a,
	0x9f, 0xdf, 0xf3, 0x7f, 0xde, 0xfe, 0x04, 0x5d, 0x95, 0xd9, 0xba, 0x56, 0xb4, 0x62, 0x52, 0x51,
	0xa9, 0xac, 0x68, 0x0a, 0xc6, 0x05, 0x95, 0xca, 0x58, 0xa6, 0xb8, 0x48, 0xeb, 0x46, 0x5b, 0x8d,
	0x7f, 0x23, 0x2e, 0x0d, 0xd7, 0x54, 0x6a, 0x43, 0xbf, 0x1a, 0xda, 0x95, 0xe8, 0x5a, 0x34, 0x29,
	0xfc, 0xae, 0xb3, 0x54, 0xe9, 0x5c, 0x18, 0xf8, 0xa6, 0xff, 0x5b, 0x99, 0xad, 0x38, 0x1d, 0x98,
	0x64, 0x86, 0x12, 0x43, 0x9c, 0x4a, 0x55, 0xe8, 0xe4, 0x3b, 0x42, 0xc9, 0xce, 0x0b, 0xe8, 0xeb,
	0xf3, 0xfb, 0x12, 0x9f, 0xa1, 0x7d, 0xb7, 0x1b, 0x95, 0x39, 0x89, 0x26, 0xd1, 0xf4, 0x70, 0x31,
	0x76, 0xe1, 0x3c, 0xc7, 0xd7, 0xe8, 0x38, 0xd4, 0x28, 0x56, 0x09, 0x32, 0x82, 0x7c, 0xdc, 0xd3,
	0x37, 0x56, 0x09, 0x7c, 0x8e, 0x0e, 0x7c, 0x43, 0xb2, 0x37, 0x89, 0xa6, 0xf1, 0xa2, 0x8f, 0x93,
	0x9f, 0x11, 0xba, 0xd8, 0xb9, 0x02, 0xbe, 0x45, 0xa7, 0x5c, 0xab, 0x42, 0xae, 0xda, 0x46, 0xe4,
	0x3d, 0x26, 0x19, 0x34, 0xc2, 0x21, 0x35, 0xf7, 0x05, 0x97, 0xe8, 0xa8, 0x28, 0x5b, 0xf3, 0x49,
	0xb9, 0x6e, 0x95, 0x25, 0x33, 0x10, 0x22, 0x40, 0x4f, 0x8e, 0xe0, 0x1b, 0x74, 0x12, 0xe6, 0x74,
	0xa2, 0x3b, 0x10, 0x85, 0x6b, 0x3a, 0x21, 0xdc, 0xb7, 0x71, 0xa2, 0x28, 0xd9, 0xca, 0x90, 0x7b,
	0xd0, 0xc5, 0x9e, 0xbe, 0x38, 0xe8, 0x06, 0x06, 0x5f, 0x73, 0xf2, 0xd0, 0x0d, 0xf4, 0xc8, 0xfb,
	0xb4, 0x11, 0x18, 0xcb, 0xac, 0x20, 0x8f, 0xde, 0xa7, 0x8e, 0x2e, 0x1d, 0xfc, 0x18, 0xc3, 0x7b,
	0x99, 0xfd, 0x05, 0x00, 0x00, 0xff, 0xff, 0xbc, 0x5f, 0x9f, 0x37, 0x56, 0x02, 0x00, 0x00,
}
