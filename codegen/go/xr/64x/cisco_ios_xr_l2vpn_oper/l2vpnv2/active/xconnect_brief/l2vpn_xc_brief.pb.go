/*
Copyright 2019 Cisco Systems

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: l2vpn_xc_brief.proto

package cisco_ios_xr_l2vpn_oper_l2vpnv2_active_xconnect_brief

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type L2VpnXcBrief_KEYS struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *L2VpnXcBrief_KEYS) Reset()         { *m = L2VpnXcBrief_KEYS{} }
func (m *L2VpnXcBrief_KEYS) String() string { return proto.CompactTextString(m) }
func (*L2VpnXcBrief_KEYS) ProtoMessage()    {}
func (*L2VpnXcBrief_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_8d19351c63b40399, []int{0}
}

func (m *L2VpnXcBrief_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_L2VpnXcBrief_KEYS.Unmarshal(m, b)
}
func (m *L2VpnXcBrief_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_L2VpnXcBrief_KEYS.Marshal(b, m, deterministic)
}
func (m *L2VpnXcBrief_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_L2VpnXcBrief_KEYS.Merge(m, src)
}
func (m *L2VpnXcBrief_KEYS) XXX_Size() int {
	return xxx_messageInfo_L2VpnXcBrief_KEYS.Size(m)
}
func (m *L2VpnXcBrief_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_L2VpnXcBrief_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_L2VpnXcBrief_KEYS proto.InternalMessageInfo

type L2VpnXcBriefLine struct {
	PsnType              string   `protobuf:"bytes,1,opt,name=psn_type,json=psnType,proto3" json:"psn_type,omitempty"`
	Ac1Encapsulation     string   `protobuf:"bytes,2,opt,name=ac1_encapsulation,json=ac1Encapsulation,proto3" json:"ac1_encapsulation,omitempty"`
	Ac2Encapsulation     string   `protobuf:"bytes,3,opt,name=ac2_encapsulation,json=ac2Encapsulation,proto3" json:"ac2_encapsulation,omitempty"`
	UpCount              []uint32 `protobuf:"varint,4,rep,packed,name=up_count,json=upCount,proto3" json:"up_count,omitempty"`
	DownCount            []uint32 `protobuf:"varint,5,rep,packed,name=down_count,json=downCount,proto3" json:"down_count,omitempty"`
	UnresolvedCount      []uint32 `protobuf:"varint,6,rep,packed,name=unresolved_count,json=unresolvedCount,proto3" json:"unresolved_count,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *L2VpnXcBriefLine) Reset()         { *m = L2VpnXcBriefLine{} }
func (m *L2VpnXcBriefLine) String() string { return proto.CompactTextString(m) }
func (*L2VpnXcBriefLine) ProtoMessage()    {}
func (*L2VpnXcBriefLine) Descriptor() ([]byte, []int) {
	return fileDescriptor_8d19351c63b40399, []int{1}
}

func (m *L2VpnXcBriefLine) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_L2VpnXcBriefLine.Unmarshal(m, b)
}
func (m *L2VpnXcBriefLine) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_L2VpnXcBriefLine.Marshal(b, m, deterministic)
}
func (m *L2VpnXcBriefLine) XXX_Merge(src proto.Message) {
	xxx_messageInfo_L2VpnXcBriefLine.Merge(m, src)
}
func (m *L2VpnXcBriefLine) XXX_Size() int {
	return xxx_messageInfo_L2VpnXcBriefLine.Size(m)
}
func (m *L2VpnXcBriefLine) XXX_DiscardUnknown() {
	xxx_messageInfo_L2VpnXcBriefLine.DiscardUnknown(m)
}

var xxx_messageInfo_L2VpnXcBriefLine proto.InternalMessageInfo

func (m *L2VpnXcBriefLine) GetPsnType() string {
	if m != nil {
		return m.PsnType
	}
	return ""
}

func (m *L2VpnXcBriefLine) GetAc1Encapsulation() string {
	if m != nil {
		return m.Ac1Encapsulation
	}
	return ""
}

func (m *L2VpnXcBriefLine) GetAc2Encapsulation() string {
	if m != nil {
		return m.Ac2Encapsulation
	}
	return ""
}

func (m *L2VpnXcBriefLine) GetUpCount() []uint32 {
	if m != nil {
		return m.UpCount
	}
	return nil
}

func (m *L2VpnXcBriefLine) GetDownCount() []uint32 {
	if m != nil {
		return m.DownCount
	}
	return nil
}

func (m *L2VpnXcBriefLine) GetUnresolvedCount() []uint32 {
	if m != nil {
		return m.UnresolvedCount
	}
	return nil
}

type L2VpnXcBriefFirstLayer struct {
	Ac2                  []*L2VpnXcBriefLine `protobuf:"bytes,1,rep,name=ac2,proto3" json:"ac2,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *L2VpnXcBriefFirstLayer) Reset()         { *m = L2VpnXcBriefFirstLayer{} }
func (m *L2VpnXcBriefFirstLayer) String() string { return proto.CompactTextString(m) }
func (*L2VpnXcBriefFirstLayer) ProtoMessage()    {}
func (*L2VpnXcBriefFirstLayer) Descriptor() ([]byte, []int) {
	return fileDescriptor_8d19351c63b40399, []int{2}
}

func (m *L2VpnXcBriefFirstLayer) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_L2VpnXcBriefFirstLayer.Unmarshal(m, b)
}
func (m *L2VpnXcBriefFirstLayer) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_L2VpnXcBriefFirstLayer.Marshal(b, m, deterministic)
}
func (m *L2VpnXcBriefFirstLayer) XXX_Merge(src proto.Message) {
	xxx_messageInfo_L2VpnXcBriefFirstLayer.Merge(m, src)
}
func (m *L2VpnXcBriefFirstLayer) XXX_Size() int {
	return xxx_messageInfo_L2VpnXcBriefFirstLayer.Size(m)
}
func (m *L2VpnXcBriefFirstLayer) XXX_DiscardUnknown() {
	xxx_messageInfo_L2VpnXcBriefFirstLayer.DiscardUnknown(m)
}

var xxx_messageInfo_L2VpnXcBriefFirstLayer proto.InternalMessageInfo

func (m *L2VpnXcBriefFirstLayer) GetAc2() []*L2VpnXcBriefLine {
	if m != nil {
		return m.Ac2
	}
	return nil
}

type L2VpnXcBriefMatrix struct {
	Ac1                  []*L2VpnXcBriefFirstLayer `protobuf:"bytes,1,rep,name=ac1,proto3" json:"ac1,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *L2VpnXcBriefMatrix) Reset()         { *m = L2VpnXcBriefMatrix{} }
func (m *L2VpnXcBriefMatrix) String() string { return proto.CompactTextString(m) }
func (*L2VpnXcBriefMatrix) ProtoMessage()    {}
func (*L2VpnXcBriefMatrix) Descriptor() ([]byte, []int) {
	return fileDescriptor_8d19351c63b40399, []int{3}
}

func (m *L2VpnXcBriefMatrix) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_L2VpnXcBriefMatrix.Unmarshal(m, b)
}
func (m *L2VpnXcBriefMatrix) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_L2VpnXcBriefMatrix.Marshal(b, m, deterministic)
}
func (m *L2VpnXcBriefMatrix) XXX_Merge(src proto.Message) {
	xxx_messageInfo_L2VpnXcBriefMatrix.Merge(m, src)
}
func (m *L2VpnXcBriefMatrix) XXX_Size() int {
	return xxx_messageInfo_L2VpnXcBriefMatrix.Size(m)
}
func (m *L2VpnXcBriefMatrix) XXX_DiscardUnknown() {
	xxx_messageInfo_L2VpnXcBriefMatrix.DiscardUnknown(m)
}

var xxx_messageInfo_L2VpnXcBriefMatrix proto.InternalMessageInfo

func (m *L2VpnXcBriefMatrix) GetAc1() []*L2VpnXcBriefFirstLayer {
	if m != nil {
		return m.Ac1
	}
	return nil
}

type L2VpnXcBrief struct {
	EncapsulationReportMatrix []*L2VpnXcBriefMatrix `protobuf:"bytes,50,rep,name=encapsulation_report_matrix,json=encapsulationReportMatrix,proto3" json:"encapsulation_report_matrix,omitempty"`
	EncapsulationTotal        []*L2VpnXcBriefLine   `protobuf:"bytes,51,rep,name=encapsulation_total,json=encapsulationTotal,proto3" json:"encapsulation_total,omitempty"`
	MainTotalUp               uint32                `protobuf:"varint,52,opt,name=main_total_up,json=mainTotalUp,proto3" json:"main_total_up,omitempty"`
	MainTotalDown             uint32                `protobuf:"varint,53,opt,name=main_total_down,json=mainTotalDown,proto3" json:"main_total_down,omitempty"`
	MainTotalUnresolved       uint32                `protobuf:"varint,54,opt,name=main_total_unresolved,json=mainTotalUnresolved,proto3" json:"main_total_unresolved,omitempty"`
	UndefinedXc               uint32                `protobuf:"varint,55,opt,name=undefined_xc,json=undefinedXc,proto3" json:"undefined_xc,omitempty"`
	MemoryState               string                `protobuf:"bytes,56,opt,name=memory_state,json=memoryState,proto3" json:"memory_state,omitempty"`
	XXX_NoUnkeyedLiteral      struct{}              `json:"-"`
	XXX_unrecognized          []byte                `json:"-"`
	XXX_sizecache             int32                 `json:"-"`
}

func (m *L2VpnXcBrief) Reset()         { *m = L2VpnXcBrief{} }
func (m *L2VpnXcBrief) String() string { return proto.CompactTextString(m) }
func (*L2VpnXcBrief) ProtoMessage()    {}
func (*L2VpnXcBrief) Descriptor() ([]byte, []int) {
	return fileDescriptor_8d19351c63b40399, []int{4}
}

func (m *L2VpnXcBrief) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_L2VpnXcBrief.Unmarshal(m, b)
}
func (m *L2VpnXcBrief) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_L2VpnXcBrief.Marshal(b, m, deterministic)
}
func (m *L2VpnXcBrief) XXX_Merge(src proto.Message) {
	xxx_messageInfo_L2VpnXcBrief.Merge(m, src)
}
func (m *L2VpnXcBrief) XXX_Size() int {
	return xxx_messageInfo_L2VpnXcBrief.Size(m)
}
func (m *L2VpnXcBrief) XXX_DiscardUnknown() {
	xxx_messageInfo_L2VpnXcBrief.DiscardUnknown(m)
}

var xxx_messageInfo_L2VpnXcBrief proto.InternalMessageInfo

func (m *L2VpnXcBrief) GetEncapsulationReportMatrix() []*L2VpnXcBriefMatrix {
	if m != nil {
		return m.EncapsulationReportMatrix
	}
	return nil
}

func (m *L2VpnXcBrief) GetEncapsulationTotal() []*L2VpnXcBriefLine {
	if m != nil {
		return m.EncapsulationTotal
	}
	return nil
}

func (m *L2VpnXcBrief) GetMainTotalUp() uint32 {
	if m != nil {
		return m.MainTotalUp
	}
	return 0
}

func (m *L2VpnXcBrief) GetMainTotalDown() uint32 {
	if m != nil {
		return m.MainTotalDown
	}
	return 0
}

func (m *L2VpnXcBrief) GetMainTotalUnresolved() uint32 {
	if m != nil {
		return m.MainTotalUnresolved
	}
	return 0
}

func (m *L2VpnXcBrief) GetUndefinedXc() uint32 {
	if m != nil {
		return m.UndefinedXc
	}
	return 0
}

func (m *L2VpnXcBrief) GetMemoryState() string {
	if m != nil {
		return m.MemoryState
	}
	return ""
}

func init() {
	proto.RegisterType((*L2VpnXcBrief_KEYS)(nil), "cisco_ios_xr_l2vpn_oper.l2vpnv2.active.xconnect_brief.l2vpn_xc_brief_KEYS")
	proto.RegisterType((*L2VpnXcBriefLine)(nil), "cisco_ios_xr_l2vpn_oper.l2vpnv2.active.xconnect_brief.l2vpn_xc_brief_line")
	proto.RegisterType((*L2VpnXcBriefFirstLayer)(nil), "cisco_ios_xr_l2vpn_oper.l2vpnv2.active.xconnect_brief.l2vpn_xc_brief_first_layer")
	proto.RegisterType((*L2VpnXcBriefMatrix)(nil), "cisco_ios_xr_l2vpn_oper.l2vpnv2.active.xconnect_brief.l2vpn_xc_brief_matrix")
	proto.RegisterType((*L2VpnXcBrief)(nil), "cisco_ios_xr_l2vpn_oper.l2vpnv2.active.xconnect_brief.l2vpn_xc_brief")
}

func init() { proto.RegisterFile("l2vpn_xc_brief.proto", fileDescriptor_8d19351c63b40399) }

var fileDescriptor_8d19351c63b40399 = []byte{
	// 465 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x94, 0xcd, 0x8e, 0xd3, 0x30,
	0x14, 0x85, 0x15, 0x02, 0xf3, 0x73, 0x4b, 0x99, 0xc1, 0xa5, 0x92, 0x0b, 0x42, 0x2a, 0x59, 0xa0,
	0x22, 0xa4, 0x48, 0xcd, 0x30, 0xc0, 0x1e, 0x66, 0xc3, 0xcf, 0x82, 0xcc, 0x20, 0x81, 0x84, 0x64,
	0x79, 0xdc, 0x5b, 0xc9, 0x52, 0x6a, 0x5b, 0x8e, 0xd3, 0x49, 0x81, 0x47, 0xe0, 0x29, 0x79, 0x01,
	0x5e, 0x01, 0xd9, 0x09, 0x9d, 0xa6, 0xb0, 0x42, 0xdd, 0x25, 0xe7, 0x7e, 0x39, 0xe7, 0xfa, 0xda,
	0x31, 0xdc, 0x2b, 0xb2, 0xa5, 0x51, 0xac, 0x16, 0xec, 0xd2, 0x4a, 0x9c, 0xa7, 0xc6, 0x6a, 0xa7,
	0xc9, 0xa9, 0x90, 0xa5, 0xd0, 0x4c, 0xea, 0x92, 0xd5, 0x96, 0x35, 0x88, 0x36, 0x68, 0xd3, 0xf0,
	0xb8, 0xcc, 0x52, 0x2e, 0x9c, 0x5c, 0x62, 0x5a, 0x0b, 0xad, 0x14, 0x0a, 0xd7, 0x7c, 0x9c, 0x0c,
	0x61, 0xd0, 0xb5, 0x63, 0x6f, 0xcf, 0x3e, 0x9f, 0x27, 0xbf, 0xa2, 0xbf, 0xf4, 0x42, 0x2a, 0x24,
	0x23, 0x38, 0x30, 0xa5, 0x62, 0x6e, 0x65, 0x90, 0x46, 0xe3, 0x68, 0x72, 0x98, 0xef, 0x9b, 0x52,
	0x5d, 0xac, 0x0c, 0x92, 0xa7, 0x70, 0x97, 0x8b, 0x29, 0x43, 0x25, 0xb8, 0x29, 0xab, 0x82, 0x3b,
	0xa9, 0x15, 0xbd, 0x11, 0x98, 0x63, 0x2e, 0xa6, 0x67, 0x9b, 0x7a, 0x03, 0x67, 0x5b, 0x70, 0xfc,
	0x07, 0xce, 0xba, 0xf0, 0x08, 0x0e, 0x2a, 0xc3, 0x84, 0xae, 0x94, 0xa3, 0x37, 0xc7, 0xf1, 0xa4,
	0x9f, 0xef, 0x57, 0xe6, 0x95, 0x7f, 0x25, 0x0f, 0x01, 0x66, 0xfa, 0x4a, 0xb5, 0xc5, 0x5b, 0xa1,
	0x78, 0xe8, 0x95, 0xa6, 0xfc, 0x04, 0x8e, 0x2b, 0x65, 0xb1, 0xd4, 0xc5, 0x12, 0x67, 0x2d, 0xb4,
	0x17, 0xa0, 0xa3, 0x6b, 0x3d, 0xa0, 0xc9, 0x57, 0xb8, 0xbf, 0xb5, 0xe0, 0xb9, 0xb4, 0xa5, 0x63,
	0x05, 0x5f, 0xa1, 0x25, 0x5f, 0x20, 0xe6, 0x22, 0xa3, 0xd1, 0x38, 0x9e, 0xf4, 0xb2, 0x37, 0xe9,
	0x7f, 0xcd, 0x3a, 0xfd, 0xc7, 0x40, 0x73, 0x6f, 0x9b, 0x7c, 0x87, 0xe1, 0x56, 0x6d, 0xc1, 0x9d,
	0x95, 0x35, 0x11, 0x3e, 0x76, 0xda, 0xc6, 0x7e, 0xd8, 0x4d, 0xec, 0xc6, 0xb2, 0x7c, 0xfa, 0x34,
	0xf9, 0x19, 0xc3, 0x9d, 0x2e, 0x43, 0x7e, 0x44, 0xf0, 0xa0, 0xb3, 0x37, 0xcc, 0xa2, 0xd1, 0xd6,
	0xb5, 0x7d, 0xd1, 0x2c, 0x34, 0xf4, 0x6e, 0x37, 0x0d, 0x35, 0x9e, 0xf9, 0xa8, 0x13, 0x98, 0x87,
	0xbc, 0xf7, 0xcd, 0x18, 0xbe, 0xc1, 0xa0, 0xdb, 0x8d, 0xd3, 0x8e, 0x17, 0xf4, 0x64, 0xe7, 0xbb,
	0x41, 0x3a, 0x31, 0x17, 0x3e, 0x85, 0x24, 0xd0, 0x5f, 0x70, 0xd9, 0x66, 0xb2, 0xca, 0xd0, 0x67,
	0xe3, 0x68, 0xd2, 0xcf, 0x7b, 0x5e, 0x0c, 0xc4, 0x47, 0x43, 0x1e, 0xc3, 0xd1, 0x06, 0xe3, 0xcf,
	0x1f, 0x3d, 0x0d, 0x54, 0x7f, 0x4d, 0xbd, 0xd6, 0x57, 0x8a, 0x64, 0x30, 0xdc, 0xf4, 0x5a, 0x1f,
	0x41, 0xfa, 0x3c, 0xd0, 0x83, 0x6b, 0xcf, 0x75, 0x89, 0x3c, 0x82, 0xdb, 0x95, 0x9a, 0xe1, 0x5c,
	0x2a, 0x9c, 0xb1, 0x5a, 0xd0, 0x17, 0x4d, 0xfc, 0x5a, 0xfb, 0x24, 0x3c, 0xb2, 0xc0, 0x85, 0xb6,
	0x2b, 0x56, 0x3a, 0xee, 0x90, 0xbe, 0x0c, 0x3f, 0x52, 0xaf, 0xd1, 0xce, 0xbd, 0x74, 0xb9, 0x17,
	0x6e, 0x89, 0x93, 0xdf, 0x01, 0x00, 0x00, 0xff, 0xff, 0x33, 0x83, 0x9a, 0x4f, 0x3d, 0x04, 0x00,
	0x00,
}
