/*
Copyright 2019 Cisco Systems

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: daps_vrf_info.proto

package cisco_ios_xr_ip_daps_oper_address_pool_service_nodes_node_vrfs_vrf_ipv4

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type DapsVrfInfo_KEYS struct {
	NodeName             string   `protobuf:"bytes,1,opt,name=node_name,json=nodeName,proto3" json:"node_name,omitempty"`
	VrfName              string   `protobuf:"bytes,2,opt,name=vrf_name,json=vrfName,proto3" json:"vrf_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DapsVrfInfo_KEYS) Reset()         { *m = DapsVrfInfo_KEYS{} }
func (m *DapsVrfInfo_KEYS) String() string { return proto.CompactTextString(m) }
func (*DapsVrfInfo_KEYS) ProtoMessage()    {}
func (*DapsVrfInfo_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_008c6694e9121cbb, []int{0}
}

func (m *DapsVrfInfo_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DapsVrfInfo_KEYS.Unmarshal(m, b)
}
func (m *DapsVrfInfo_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DapsVrfInfo_KEYS.Marshal(b, m, deterministic)
}
func (m *DapsVrfInfo_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DapsVrfInfo_KEYS.Merge(m, src)
}
func (m *DapsVrfInfo_KEYS) XXX_Size() int {
	return xxx_messageInfo_DapsVrfInfo_KEYS.Size(m)
}
func (m *DapsVrfInfo_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_DapsVrfInfo_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_DapsVrfInfo_KEYS proto.InternalMessageInfo

func (m *DapsVrfInfo_KEYS) GetNodeName() string {
	if m != nil {
		return m.NodeName
	}
	return ""
}

func (m *DapsVrfInfo_KEYS) GetVrfName() string {
	if m != nil {
		return m.VrfName
	}
	return ""
}

type DapsVrfAllocationSummary struct {
	Used                     uint32   `protobuf:"varint,1,opt,name=used,proto3" json:"used,omitempty"`
	Excluded                 uint32   `protobuf:"varint,2,opt,name=excluded,proto3" json:"excluded,omitempty"`
	Free                     uint32   `protobuf:"varint,3,opt,name=free,proto3" json:"free,omitempty"`
	Total                    uint32   `protobuf:"varint,4,opt,name=total,proto3" json:"total,omitempty"`
	HighUtilizationThreshold uint32   `protobuf:"varint,5,opt,name=high_utilization_threshold,json=highUtilizationThreshold,proto3" json:"high_utilization_threshold,omitempty"`
	LowUtilizationThreshold  uint32   `protobuf:"varint,6,opt,name=low_utilization_threshold,json=lowUtilizationThreshold,proto3" json:"low_utilization_threshold,omitempty"`
	Utilization              uint32   `protobuf:"varint,7,opt,name=utilization,proto3" json:"utilization,omitempty"`
	XXX_NoUnkeyedLiteral     struct{} `json:"-"`
	XXX_unrecognized         []byte   `json:"-"`
	XXX_sizecache            int32    `json:"-"`
}

func (m *DapsVrfAllocationSummary) Reset()         { *m = DapsVrfAllocationSummary{} }
func (m *DapsVrfAllocationSummary) String() string { return proto.CompactTextString(m) }
func (*DapsVrfAllocationSummary) ProtoMessage()    {}
func (*DapsVrfAllocationSummary) Descriptor() ([]byte, []int) {
	return fileDescriptor_008c6694e9121cbb, []int{1}
}

func (m *DapsVrfAllocationSummary) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DapsVrfAllocationSummary.Unmarshal(m, b)
}
func (m *DapsVrfAllocationSummary) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DapsVrfAllocationSummary.Marshal(b, m, deterministic)
}
func (m *DapsVrfAllocationSummary) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DapsVrfAllocationSummary.Merge(m, src)
}
func (m *DapsVrfAllocationSummary) XXX_Size() int {
	return xxx_messageInfo_DapsVrfAllocationSummary.Size(m)
}
func (m *DapsVrfAllocationSummary) XXX_DiscardUnknown() {
	xxx_messageInfo_DapsVrfAllocationSummary.DiscardUnknown(m)
}

var xxx_messageInfo_DapsVrfAllocationSummary proto.InternalMessageInfo

func (m *DapsVrfAllocationSummary) GetUsed() uint32 {
	if m != nil {
		return m.Used
	}
	return 0
}

func (m *DapsVrfAllocationSummary) GetExcluded() uint32 {
	if m != nil {
		return m.Excluded
	}
	return 0
}

func (m *DapsVrfAllocationSummary) GetFree() uint32 {
	if m != nil {
		return m.Free
	}
	return 0
}

func (m *DapsVrfAllocationSummary) GetTotal() uint32 {
	if m != nil {
		return m.Total
	}
	return 0
}

func (m *DapsVrfAllocationSummary) GetHighUtilizationThreshold() uint32 {
	if m != nil {
		return m.HighUtilizationThreshold
	}
	return 0
}

func (m *DapsVrfAllocationSummary) GetLowUtilizationThreshold() uint32 {
	if m != nil {
		return m.LowUtilizationThreshold
	}
	return 0
}

func (m *DapsVrfAllocationSummary) GetUtilization() uint32 {
	if m != nil {
		return m.Utilization
	}
	return 0
}

type DapsVrfPoolInfo struct {
	PoolName             string   `protobuf:"bytes,1,opt,name=pool_name,json=poolName,proto3" json:"pool_name,omitempty"`
	VrfName              string   `protobuf:"bytes,2,opt,name=vrf_name,json=vrfName,proto3" json:"vrf_name,omitempty"`
	Used                 uint32   `protobuf:"varint,3,opt,name=used,proto3" json:"used,omitempty"`
	Excluded             uint32   `protobuf:"varint,4,opt,name=excluded,proto3" json:"excluded,omitempty"`
	Free                 uint32   `protobuf:"varint,5,opt,name=free,proto3" json:"free,omitempty"`
	Total                uint32   `protobuf:"varint,6,opt,name=total,proto3" json:"total,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DapsVrfPoolInfo) Reset()         { *m = DapsVrfPoolInfo{} }
func (m *DapsVrfPoolInfo) String() string { return proto.CompactTextString(m) }
func (*DapsVrfPoolInfo) ProtoMessage()    {}
func (*DapsVrfPoolInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_008c6694e9121cbb, []int{2}
}

func (m *DapsVrfPoolInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DapsVrfPoolInfo.Unmarshal(m, b)
}
func (m *DapsVrfPoolInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DapsVrfPoolInfo.Marshal(b, m, deterministic)
}
func (m *DapsVrfPoolInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DapsVrfPoolInfo.Merge(m, src)
}
func (m *DapsVrfPoolInfo) XXX_Size() int {
	return xxx_messageInfo_DapsVrfPoolInfo.Size(m)
}
func (m *DapsVrfPoolInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_DapsVrfPoolInfo.DiscardUnknown(m)
}

var xxx_messageInfo_DapsVrfPoolInfo proto.InternalMessageInfo

func (m *DapsVrfPoolInfo) GetPoolName() string {
	if m != nil {
		return m.PoolName
	}
	return ""
}

func (m *DapsVrfPoolInfo) GetVrfName() string {
	if m != nil {
		return m.VrfName
	}
	return ""
}

func (m *DapsVrfPoolInfo) GetUsed() uint32 {
	if m != nil {
		return m.Used
	}
	return 0
}

func (m *DapsVrfPoolInfo) GetExcluded() uint32 {
	if m != nil {
		return m.Excluded
	}
	return 0
}

func (m *DapsVrfPoolInfo) GetFree() uint32 {
	if m != nil {
		return m.Free
	}
	return 0
}

func (m *DapsVrfPoolInfo) GetTotal() uint32 {
	if m != nil {
		return m.Total
	}
	return 0
}

type DapsVrfInfo struct {
	AllocationSummary    *DapsVrfAllocationSummary `protobuf:"bytes,50,opt,name=allocation_summary,json=allocationSummary,proto3" json:"allocation_summary,omitempty"`
	Pools                []*DapsVrfPoolInfo        `protobuf:"bytes,51,rep,name=pools,proto3" json:"pools,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *DapsVrfInfo) Reset()         { *m = DapsVrfInfo{} }
func (m *DapsVrfInfo) String() string { return proto.CompactTextString(m) }
func (*DapsVrfInfo) ProtoMessage()    {}
func (*DapsVrfInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_008c6694e9121cbb, []int{3}
}

func (m *DapsVrfInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DapsVrfInfo.Unmarshal(m, b)
}
func (m *DapsVrfInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DapsVrfInfo.Marshal(b, m, deterministic)
}
func (m *DapsVrfInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DapsVrfInfo.Merge(m, src)
}
func (m *DapsVrfInfo) XXX_Size() int {
	return xxx_messageInfo_DapsVrfInfo.Size(m)
}
func (m *DapsVrfInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_DapsVrfInfo.DiscardUnknown(m)
}

var xxx_messageInfo_DapsVrfInfo proto.InternalMessageInfo

func (m *DapsVrfInfo) GetAllocationSummary() *DapsVrfAllocationSummary {
	if m != nil {
		return m.AllocationSummary
	}
	return nil
}

func (m *DapsVrfInfo) GetPools() []*DapsVrfPoolInfo {
	if m != nil {
		return m.Pools
	}
	return nil
}

func init() {
	proto.RegisterType((*DapsVrfInfo_KEYS)(nil), "cisco_ios_xr_ip_daps_oper.address_pool_service.nodes.node.vrfs.vrf.ipv4.daps_vrf_info_KEYS")
	proto.RegisterType((*DapsVrfAllocationSummary)(nil), "cisco_ios_xr_ip_daps_oper.address_pool_service.nodes.node.vrfs.vrf.ipv4.daps_vrf_allocation_summary")
	proto.RegisterType((*DapsVrfPoolInfo)(nil), "cisco_ios_xr_ip_daps_oper.address_pool_service.nodes.node.vrfs.vrf.ipv4.daps_vrf_pool_info")
	proto.RegisterType((*DapsVrfInfo)(nil), "cisco_ios_xr_ip_daps_oper.address_pool_service.nodes.node.vrfs.vrf.ipv4.daps_vrf_info")
}

func init() { proto.RegisterFile("daps_vrf_info.proto", fileDescriptor_008c6694e9121cbb) }

var fileDescriptor_008c6694e9121cbb = []byte{
	// 396 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x93, 0xbf, 0x6e, 0xdb, 0x30,
	0x10, 0xc6, 0x21, 0xdb, 0xf2, 0x1f, 0x1a, 0x1e, 0xca, 0x16, 0x28, 0x6d, 0x2f, 0x82, 0x26, 0x4f,
	0x1a, 0xec, 0x4e, 0x45, 0xd7, 0xa2, 0x43, 0x83, 0x0c, 0x72, 0x32, 0x04, 0x19, 0x08, 0x46, 0xa4,
	0x22, 0x02, 0x94, 0xa8, 0x90, 0x92, 0xec, 0xe4, 0x35, 0xbc, 0xe4, 0x09, 0xf2, 0x9c, 0x01, 0xa9,
	0x44, 0x96, 0x11, 0x3b, 0x59, 0xbc, 0x10, 0xbc, 0xbb, 0xef, 0x3e, 0x0a, 0xbf, 0x3b, 0x81, 0xef,
	0x94, 0xe4, 0x1a, 0x57, 0x2a, 0xc6, 0x3c, 0x8b, 0x65, 0x90, 0x2b, 0x59, 0x48, 0xf8, 0x2f, 0xe2,
	0x3a, 0x92, 0x98, 0x4b, 0x8d, 0xb7, 0x0a, 0xf3, 0x1c, 0x5b, 0x91, 0xcc, 0x99, 0x0a, 0x08, 0xa5,
	0x8a, 0x69, 0x8d, 0x73, 0x29, 0x05, 0xd6, 0x4c, 0x55, 0x3c, 0x62, 0x41, 0x26, 0x29, 0xd3, 0xf6,
	0x0c, 0x2a, 0x15, 0x6b, 0x73, 0x04, 0x3c, 0xaf, 0x7e, 0xf9, 0x17, 0x00, 0x1e, 0xf8, 0xe3, 0xff,
	0x7f, 0x6f, 0xd6, 0x70, 0x0e, 0x46, 0x46, 0x8b, 0x33, 0x92, 0x32, 0xe4, 0x78, 0xce, 0x62, 0x14,
	0x0e, 0x4d, 0xe2, 0x92, 0xa4, 0x0c, 0x4e, 0xc1, 0xd0, 0xa8, 0x6d, 0xad, 0x63, 0x6b, 0x83, 0x4a,
	0xc5, 0xa6, 0xe4, 0xef, 0x3a, 0x60, 0xde, 0xd8, 0x11, 0x21, 0x64, 0x44, 0x0a, 0x2e, 0x33, 0xac,
	0xcb, 0x34, 0x25, 0xea, 0x11, 0x42, 0xd0, 0x2b, 0x35, 0xa3, 0xd6, 0x72, 0x12, 0xda, 0x3b, 0x9c,
	0x81, 0x21, 0xdb, 0x46, 0xa2, 0xa4, 0x8c, 0x5a, 0xbb, 0x49, 0xd8, 0xc4, 0x46, 0x1f, 0x2b, 0xc6,
	0x50, 0xb7, 0xd6, 0x9b, 0x3b, 0xfc, 0x01, 0xdc, 0x42, 0x16, 0x44, 0xa0, 0x9e, 0x4d, 0xd6, 0x01,
	0xfc, 0x03, 0x66, 0x09, 0xbf, 0x4f, 0x70, 0x59, 0x70, 0xc1, 0x9f, 0xea, 0x57, 0x8b, 0x44, 0x31,
	0x9d, 0x48, 0x41, 0x91, 0x6b, 0xa5, 0xc8, 0x28, 0xae, 0xf7, 0x82, 0xab, 0xf7, 0x3a, 0xfc, 0x0d,
	0xa6, 0x42, 0x6e, 0x4e, 0x34, 0xf7, 0x6d, 0xf3, 0x4f, 0x21, 0x37, 0x47, 0x7b, 0x3d, 0x30, 0x6e,
	0xf5, 0xa1, 0x81, 0x55, 0xb7, 0x53, 0xfe, 0x8b, 0xd3, 0x82, 0x6c, 0xc7, 0x62, 0x48, 0x1b, 0xc8,
	0x36, 0x68, 0x43, 0x36, 0x89, 0x2f, 0x20, 0x37, 0x10, 0xbb, 0x27, 0x20, 0xf6, 0x4e, 0x40, 0x74,
	0x8f, 0x41, 0xec, 0xb7, 0x20, 0xfa, 0xcf, 0x1d, 0x30, 0x39, 0xd8, 0x06, 0xb8, 0x73, 0x00, 0xfc,
	0x38, 0x47, 0xb4, 0xf4, 0x9c, 0xc5, 0x78, 0x49, 0x83, 0x33, 0x6d, 0x61, 0xf0, 0xc9, 0xce, 0x84,
	0xdf, 0xf6, 0xb9, 0xf5, 0xdb, 0x1a, 0x3d, 0x00, 0xd7, 0xf8, 0x6a, 0xb4, 0xf2, 0xba, 0x8b, 0xf1,
	0xf2, 0xf6, 0xfc, 0xdf, 0xd1, 0x4c, 0x29, 0xac, 0x5f, 0xba, 0xeb, 0xdb, 0xff, 0x6e, 0xf5, 0x1a,
	0x00, 0x00, 0xff, 0xff, 0x2f, 0x50, 0xbd, 0x44, 0x8e, 0x03, 0x00, 0x00,
}
