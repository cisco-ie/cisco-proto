/*
Copyright 2019 Cisco Systems

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: ipv4_dhcpd_snoop_profile.proto

package cisco_ios_xr_ipv4_dhcpd_oper_ipv4_dhcpd_snoop_profiles_profile

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Ipv4DhcpdSnoopProfile_KEYS struct {
	ProfileName          string   `protobuf:"bytes,1,opt,name=profile_name,json=profileName,proto3" json:"profile_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Ipv4DhcpdSnoopProfile_KEYS) Reset()         { *m = Ipv4DhcpdSnoopProfile_KEYS{} }
func (m *Ipv4DhcpdSnoopProfile_KEYS) String() string { return proto.CompactTextString(m) }
func (*Ipv4DhcpdSnoopProfile_KEYS) ProtoMessage()    {}
func (*Ipv4DhcpdSnoopProfile_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_f53b1ad62881d5ba, []int{0}
}

func (m *Ipv4DhcpdSnoopProfile_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Ipv4DhcpdSnoopProfile_KEYS.Unmarshal(m, b)
}
func (m *Ipv4DhcpdSnoopProfile_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Ipv4DhcpdSnoopProfile_KEYS.Marshal(b, m, deterministic)
}
func (m *Ipv4DhcpdSnoopProfile_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Ipv4DhcpdSnoopProfile_KEYS.Merge(m, src)
}
func (m *Ipv4DhcpdSnoopProfile_KEYS) XXX_Size() int {
	return xxx_messageInfo_Ipv4DhcpdSnoopProfile_KEYS.Size(m)
}
func (m *Ipv4DhcpdSnoopProfile_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_Ipv4DhcpdSnoopProfile_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_Ipv4DhcpdSnoopProfile_KEYS proto.InternalMessageInfo

func (m *Ipv4DhcpdSnoopProfile_KEYS) GetProfileName() string {
	if m != nil {
		return m.ProfileName
	}
	return ""
}

type Ipv4DhcpdSnoopProfile struct {
	SnoopProfileName                    string   `protobuf:"bytes,50,opt,name=snoop_profile_name,json=snoopProfileName,proto3" json:"snoop_profile_name,omitempty"`
	SnoopProfileUid                     uint32   `protobuf:"varint,51,opt,name=snoop_profile_uid,json=snoopProfileUid,proto3" json:"snoop_profile_uid,omitempty"`
	SnoopProfileRelayInfoOption         uint32   `protobuf:"varint,52,opt,name=snoop_profile_relay_info_option,json=snoopProfileRelayInfoOption,proto3" json:"snoop_profile_relay_info_option,omitempty"`
	SnoopProfileRelayInfoAllowUntrusted uint32   `protobuf:"varint,53,opt,name=snoop_profile_relay_info_allow_untrusted,json=snoopProfileRelayInfoAllowUntrusted,proto3" json:"snoop_profile_relay_info_allow_untrusted,omitempty"`
	SnoopProfileRelayInfoPolicy         uint32   `protobuf:"varint,54,opt,name=snoop_profile_relay_info_policy,json=snoopProfileRelayInfoPolicy,proto3" json:"snoop_profile_relay_info_policy,omitempty"`
	SnoopProfileTrusted                 uint32   `protobuf:"varint,55,opt,name=snoop_profile_trusted,json=snoopProfileTrusted,proto3" json:"snoop_profile_trusted,omitempty"`
	XXX_NoUnkeyedLiteral                struct{} `json:"-"`
	XXX_unrecognized                    []byte   `json:"-"`
	XXX_sizecache                       int32    `json:"-"`
}

func (m *Ipv4DhcpdSnoopProfile) Reset()         { *m = Ipv4DhcpdSnoopProfile{} }
func (m *Ipv4DhcpdSnoopProfile) String() string { return proto.CompactTextString(m) }
func (*Ipv4DhcpdSnoopProfile) ProtoMessage()    {}
func (*Ipv4DhcpdSnoopProfile) Descriptor() ([]byte, []int) {
	return fileDescriptor_f53b1ad62881d5ba, []int{1}
}

func (m *Ipv4DhcpdSnoopProfile) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Ipv4DhcpdSnoopProfile.Unmarshal(m, b)
}
func (m *Ipv4DhcpdSnoopProfile) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Ipv4DhcpdSnoopProfile.Marshal(b, m, deterministic)
}
func (m *Ipv4DhcpdSnoopProfile) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Ipv4DhcpdSnoopProfile.Merge(m, src)
}
func (m *Ipv4DhcpdSnoopProfile) XXX_Size() int {
	return xxx_messageInfo_Ipv4DhcpdSnoopProfile.Size(m)
}
func (m *Ipv4DhcpdSnoopProfile) XXX_DiscardUnknown() {
	xxx_messageInfo_Ipv4DhcpdSnoopProfile.DiscardUnknown(m)
}

var xxx_messageInfo_Ipv4DhcpdSnoopProfile proto.InternalMessageInfo

func (m *Ipv4DhcpdSnoopProfile) GetSnoopProfileName() string {
	if m != nil {
		return m.SnoopProfileName
	}
	return ""
}

func (m *Ipv4DhcpdSnoopProfile) GetSnoopProfileUid() uint32 {
	if m != nil {
		return m.SnoopProfileUid
	}
	return 0
}

func (m *Ipv4DhcpdSnoopProfile) GetSnoopProfileRelayInfoOption() uint32 {
	if m != nil {
		return m.SnoopProfileRelayInfoOption
	}
	return 0
}

func (m *Ipv4DhcpdSnoopProfile) GetSnoopProfileRelayInfoAllowUntrusted() uint32 {
	if m != nil {
		return m.SnoopProfileRelayInfoAllowUntrusted
	}
	return 0
}

func (m *Ipv4DhcpdSnoopProfile) GetSnoopProfileRelayInfoPolicy() uint32 {
	if m != nil {
		return m.SnoopProfileRelayInfoPolicy
	}
	return 0
}

func (m *Ipv4DhcpdSnoopProfile) GetSnoopProfileTrusted() uint32 {
	if m != nil {
		return m.SnoopProfileTrusted
	}
	return 0
}

func init() {
	proto.RegisterType((*Ipv4DhcpdSnoopProfile_KEYS)(nil), "cisco_ios_xr_ipv4_dhcpd_oper.ipv4_dhcpd.snoop.profiles.profile.ipv4_dhcpd_snoop_profile_KEYS")
	proto.RegisterType((*Ipv4DhcpdSnoopProfile)(nil), "cisco_ios_xr_ipv4_dhcpd_oper.ipv4_dhcpd.snoop.profiles.profile.ipv4_dhcpd_snoop_profile")
}

func init() { proto.RegisterFile("ipv4_dhcpd_snoop_profile.proto", fileDescriptor_f53b1ad62881d5ba) }

var fileDescriptor_f53b1ad62881d5ba = []byte{
	// 280 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x92, 0x41, 0x4b, 0xc3, 0x30,
	0x14, 0xc7, 0x29, 0x82, 0x60, 0x54, 0xd4, 0x88, 0x10, 0x10, 0x75, 0xce, 0x4b, 0x11, 0xe9, 0x61,
	0x9b, 0x7a, 0x13, 0x14, 0x3d, 0x88, 0xa0, 0xa3, 0xda, 0x83, 0xa7, 0x47, 0x6d, 0x53, 0x0c, 0x64,
	0x79, 0x21, 0x69, 0xd5, 0x7d, 0x06, 0xbf, 0xb4, 0xec, 0xb9, 0xb2, 0x16, 0xd6, 0xdd, 0xf2, 0xf2,
	0x7e, 0xff, 0x5f, 0xfe, 0x87, 0xb0, 0x63, 0x65, 0xbf, 0x46, 0x90, 0x7f, 0x66, 0x36, 0x07, 0x6f,
	0x10, 0x2d, 0x58, 0x87, 0x85, 0xd2, 0x32, 0xb2, 0x0e, 0x4b, 0xe4, 0x37, 0x99, 0xf2, 0x19, 0x82,
	0x42, 0x0f, 0x3f, 0x0e, 0x1a, 0x30, 0x5a, 0xe9, 0xa2, 0xc5, 0x1c, 0x51, 0x38, 0x9a, 0x87, 0x7d,
	0x7d, 0xe8, 0xdf, 0xb1, 0xa3, 0xae, 0x17, 0xe0, 0xe9, 0xe1, 0xfd, 0x95, 0x9f, 0xb2, 0xad, 0x7a,
	0x36, 0xe9, 0x44, 0x8a, 0xa0, 0x17, 0x84, 0x1b, 0xf1, 0xe6, 0xfc, 0xee, 0x39, 0x9d, 0xc8, 0xfe,
	0xef, 0x1a, 0x13, 0x5d, 0x12, 0x7e, 0xc1, 0x78, 0xdb, 0x4a, 0x96, 0x01, 0x59, 0x76, 0x69, 0x33,
	0x5e, 0xa8, 0xf8, 0x39, 0xdb, 0x6b, 0xd3, 0x95, 0xca, 0xc5, 0xb0, 0x17, 0x84, 0xdb, 0xf1, 0x4e,
	0x13, 0x4e, 0x54, 0xce, 0xef, 0xd9, 0x49, 0x9b, 0x75, 0x52, 0xa7, 0x53, 0x50, 0xa6, 0x40, 0x40,
	0x5b, 0x2a, 0x34, 0x62, 0x44, 0xc9, 0xc3, 0x66, 0x32, 0x9e, 0x41, 0x8f, 0xa6, 0xc0, 0x17, 0x42,
	0x78, 0xc2, 0xc2, 0x4e, 0x4b, 0xaa, 0x35, 0x7e, 0x43, 0x65, 0x4a, 0x57, 0xf9, 0x52, 0xe6, 0xe2,
	0x92, 0x74, 0x67, 0x4b, 0x75, 0xb7, 0x33, 0x36, 0xa9, 0xd1, 0x95, 0xe5, 0x2c, 0x6a, 0x95, 0x4d,
	0xc5, 0xd5, 0x8a, 0x72, 0x63, 0x42, 0xf8, 0x80, 0x1d, 0xb4, 0x2d, 0x75, 0x93, 0x6b, 0xca, 0xee,
	0x37, 0xb3, 0x6f, 0xff, 0xab, 0x8f, 0x75, 0xfa, 0x18, 0xc3, 0xbf, 0x00, 0x00, 0x00, 0xff, 0xff,
	0xd0, 0x8c, 0xbd, 0x8e, 0x3a, 0x02, 0x00, 0x00,
}
