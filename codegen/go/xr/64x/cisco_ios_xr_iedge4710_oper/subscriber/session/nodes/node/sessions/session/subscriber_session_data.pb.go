/*
Copyright 2019 Cisco Systems

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: subscriber_session_data.proto

package cisco_ios_xr_iedge4710_oper_subscriber_session_nodes_node_sessions_session

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type SubscriberSessionData_KEYS struct {
	NodeName             string   `protobuf:"bytes,1,opt,name=node_name,json=nodeName,proto3" json:"node_name,omitempty"`
	SessionId            string   `protobuf:"bytes,2,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SubscriberSessionData_KEYS) Reset()         { *m = SubscriberSessionData_KEYS{} }
func (m *SubscriberSessionData_KEYS) String() string { return proto.CompactTextString(m) }
func (*SubscriberSessionData_KEYS) ProtoMessage()    {}
func (*SubscriberSessionData_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_0e0d9a3f80b04023, []int{0}
}

func (m *SubscriberSessionData_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubscriberSessionData_KEYS.Unmarshal(m, b)
}
func (m *SubscriberSessionData_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubscriberSessionData_KEYS.Marshal(b, m, deterministic)
}
func (m *SubscriberSessionData_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubscriberSessionData_KEYS.Merge(m, src)
}
func (m *SubscriberSessionData_KEYS) XXX_Size() int {
	return xxx_messageInfo_SubscriberSessionData_KEYS.Size(m)
}
func (m *SubscriberSessionData_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_SubscriberSessionData_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_SubscriberSessionData_KEYS proto.InternalMessageInfo

func (m *SubscriberSessionData_KEYS) GetNodeName() string {
	if m != nil {
		return m.NodeName
	}
	return ""
}

func (m *SubscriberSessionData_KEYS) GetSessionId() string {
	if m != nil {
		return m.SessionId
	}
	return ""
}

type IedgeOperAccountingData struct {
	AccountingStateRc               uint32   `protobuf:"varint,1,opt,name=accounting_state_rc,json=accountingStateRc,proto3" json:"accounting_state_rc,omitempty"`
	AccountingStopState             uint32   `protobuf:"varint,2,opt,name=accounting_stop_state,json=accountingStopState,proto3" json:"accounting_stop_state,omitempty"`
	RecordContextName               string   `protobuf:"bytes,3,opt,name=record_context_name,json=recordContextName,proto3" json:"record_context_name,omitempty"`
	MethodListName                  string   `protobuf:"bytes,4,opt,name=method_list_name,json=methodListName,proto3" json:"method_list_name,omitempty"`
	AccountSessionId                string   `protobuf:"bytes,5,opt,name=account_session_id,json=accountSessionId,proto3" json:"account_session_id,omitempty"`
	AccountingStartTime             string   `protobuf:"bytes,6,opt,name=accounting_start_time,json=accountingStartTime,proto3" json:"accounting_start_time,omitempty"`
	IsInterimAccountingEnabled      bool     `protobuf:"varint,7,opt,name=is_interim_accounting_enabled,json=isInterimAccountingEnabled,proto3" json:"is_interim_accounting_enabled,omitempty"`
	InterimInterval                 uint32   `protobuf:"varint,8,opt,name=interim_interval,json=interimInterval,proto3" json:"interim_interval,omitempty"`
	LastSuccessfulInterimUpdateTime string   `protobuf:"bytes,9,opt,name=last_successful_interim_update_time,json=lastSuccessfulInterimUpdateTime,proto3" json:"last_successful_interim_update_time,omitempty"`
	NextInterimUpdateAttemptTime    uint32   `protobuf:"varint,10,opt,name=next_interim_update_attempt_time,json=nextInterimUpdateAttemptTime,proto3" json:"next_interim_update_attempt_time,omitempty"`
	LastInterimUpdateAttemptTime    string   `protobuf:"bytes,11,opt,name=last_interim_update_attempt_time,json=lastInterimUpdateAttemptTime,proto3" json:"last_interim_update_attempt_time,omitempty"`
	SentInterimUpdates              uint32   `protobuf:"varint,12,opt,name=sent_interim_updates,json=sentInterimUpdates,proto3" json:"sent_interim_updates,omitempty"`
	AcceptedInterimUpdates          uint32   `protobuf:"varint,13,opt,name=accepted_interim_updates,json=acceptedInterimUpdates,proto3" json:"accepted_interim_updates,omitempty"`
	RejectedInterimUpdates          uint32   `protobuf:"varint,14,opt,name=rejected_interim_updates,json=rejectedInterimUpdates,proto3" json:"rejected_interim_updates,omitempty"`
	SentInterimUpdateFailures       uint32   `protobuf:"varint,15,opt,name=sent_interim_update_failures,json=sentInterimUpdateFailures,proto3" json:"sent_interim_update_failures,omitempty"`
	XXX_NoUnkeyedLiteral            struct{} `json:"-"`
	XXX_unrecognized                []byte   `json:"-"`
	XXX_sizecache                   int32    `json:"-"`
}

func (m *IedgeOperAccountingData) Reset()         { *m = IedgeOperAccountingData{} }
func (m *IedgeOperAccountingData) String() string { return proto.CompactTextString(m) }
func (*IedgeOperAccountingData) ProtoMessage()    {}
func (*IedgeOperAccountingData) Descriptor() ([]byte, []int) {
	return fileDescriptor_0e0d9a3f80b04023, []int{1}
}

func (m *IedgeOperAccountingData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IedgeOperAccountingData.Unmarshal(m, b)
}
func (m *IedgeOperAccountingData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IedgeOperAccountingData.Marshal(b, m, deterministic)
}
func (m *IedgeOperAccountingData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IedgeOperAccountingData.Merge(m, src)
}
func (m *IedgeOperAccountingData) XXX_Size() int {
	return xxx_messageInfo_IedgeOperAccountingData.Size(m)
}
func (m *IedgeOperAccountingData) XXX_DiscardUnknown() {
	xxx_messageInfo_IedgeOperAccountingData.DiscardUnknown(m)
}

var xxx_messageInfo_IedgeOperAccountingData proto.InternalMessageInfo

func (m *IedgeOperAccountingData) GetAccountingStateRc() uint32 {
	if m != nil {
		return m.AccountingStateRc
	}
	return 0
}

func (m *IedgeOperAccountingData) GetAccountingStopState() uint32 {
	if m != nil {
		return m.AccountingStopState
	}
	return 0
}

func (m *IedgeOperAccountingData) GetRecordContextName() string {
	if m != nil {
		return m.RecordContextName
	}
	return ""
}

func (m *IedgeOperAccountingData) GetMethodListName() string {
	if m != nil {
		return m.MethodListName
	}
	return ""
}

func (m *IedgeOperAccountingData) GetAccountSessionId() string {
	if m != nil {
		return m.AccountSessionId
	}
	return ""
}

func (m *IedgeOperAccountingData) GetAccountingStartTime() string {
	if m != nil {
		return m.AccountingStartTime
	}
	return ""
}

func (m *IedgeOperAccountingData) GetIsInterimAccountingEnabled() bool {
	if m != nil {
		return m.IsInterimAccountingEnabled
	}
	return false
}

func (m *IedgeOperAccountingData) GetInterimInterval() uint32 {
	if m != nil {
		return m.InterimInterval
	}
	return 0
}

func (m *IedgeOperAccountingData) GetLastSuccessfulInterimUpdateTime() string {
	if m != nil {
		return m.LastSuccessfulInterimUpdateTime
	}
	return ""
}

func (m *IedgeOperAccountingData) GetNextInterimUpdateAttemptTime() uint32 {
	if m != nil {
		return m.NextInterimUpdateAttemptTime
	}
	return 0
}

func (m *IedgeOperAccountingData) GetLastInterimUpdateAttemptTime() string {
	if m != nil {
		return m.LastInterimUpdateAttemptTime
	}
	return ""
}

func (m *IedgeOperAccountingData) GetSentInterimUpdates() uint32 {
	if m != nil {
		return m.SentInterimUpdates
	}
	return 0
}

func (m *IedgeOperAccountingData) GetAcceptedInterimUpdates() uint32 {
	if m != nil {
		return m.AcceptedInterimUpdates
	}
	return 0
}

func (m *IedgeOperAccountingData) GetRejectedInterimUpdates() uint32 {
	if m != nil {
		return m.RejectedInterimUpdates
	}
	return 0
}

func (m *IedgeOperAccountingData) GetSentInterimUpdateFailures() uint32 {
	if m != nil {
		return m.SentInterimUpdateFailures
	}
	return 0
}

type IedgeAccntData struct {
	AccountingSession    []*IedgeOperAccountingData `protobuf:"bytes,1,rep,name=accounting_session,json=accountingSession,proto3" json:"accounting_session,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *IedgeAccntData) Reset()         { *m = IedgeAccntData{} }
func (m *IedgeAccntData) String() string { return proto.CompactTextString(m) }
func (*IedgeAccntData) ProtoMessage()    {}
func (*IedgeAccntData) Descriptor() ([]byte, []int) {
	return fileDescriptor_0e0d9a3f80b04023, []int{2}
}

func (m *IedgeAccntData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IedgeAccntData.Unmarshal(m, b)
}
func (m *IedgeAccntData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IedgeAccntData.Marshal(b, m, deterministic)
}
func (m *IedgeAccntData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IedgeAccntData.Merge(m, src)
}
func (m *IedgeAccntData) XXX_Size() int {
	return xxx_messageInfo_IedgeAccntData.Size(m)
}
func (m *IedgeAccntData) XXX_DiscardUnknown() {
	xxx_messageInfo_IedgeAccntData.DiscardUnknown(m)
}

var xxx_messageInfo_IedgeAccntData proto.InternalMessageInfo

func (m *IedgeAccntData) GetAccountingSession() []*IedgeOperAccountingData {
	if m != nil {
		return m.AccountingSession
	}
	return nil
}

type IedgeOperCoaData struct {
	RequestAcked         bool     `protobuf:"varint,1,opt,name=request_acked,json=requestAcked,proto3" json:"request_acked,omitempty"`
	RequestTime          string   `protobuf:"bytes,2,opt,name=request_time,json=requestTime,proto3" json:"request_time,omitempty"`
	CoaRequestAttributes []byte   `protobuf:"bytes,3,opt,name=coa_request_attributes,json=coaRequestAttributes,proto3" json:"coa_request_attributes,omitempty"`
	ReplyTime            string   `protobuf:"bytes,4,opt,name=reply_time,json=replyTime,proto3" json:"reply_time,omitempty"`
	CoaReplyAttributes   []byte   `protobuf:"bytes,5,opt,name=coa_reply_attributes,json=coaReplyAttributes,proto3" json:"coa_reply_attributes,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IedgeOperCoaData) Reset()         { *m = IedgeOperCoaData{} }
func (m *IedgeOperCoaData) String() string { return proto.CompactTextString(m) }
func (*IedgeOperCoaData) ProtoMessage()    {}
func (*IedgeOperCoaData) Descriptor() ([]byte, []int) {
	return fileDescriptor_0e0d9a3f80b04023, []int{3}
}

func (m *IedgeOperCoaData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IedgeOperCoaData.Unmarshal(m, b)
}
func (m *IedgeOperCoaData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IedgeOperCoaData.Marshal(b, m, deterministic)
}
func (m *IedgeOperCoaData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IedgeOperCoaData.Merge(m, src)
}
func (m *IedgeOperCoaData) XXX_Size() int {
	return xxx_messageInfo_IedgeOperCoaData.Size(m)
}
func (m *IedgeOperCoaData) XXX_DiscardUnknown() {
	xxx_messageInfo_IedgeOperCoaData.DiscardUnknown(m)
}

var xxx_messageInfo_IedgeOperCoaData proto.InternalMessageInfo

func (m *IedgeOperCoaData) GetRequestAcked() bool {
	if m != nil {
		return m.RequestAcked
	}
	return false
}

func (m *IedgeOperCoaData) GetRequestTime() string {
	if m != nil {
		return m.RequestTime
	}
	return ""
}

func (m *IedgeOperCoaData) GetCoaRequestAttributes() []byte {
	if m != nil {
		return m.CoaRequestAttributes
	}
	return nil
}

func (m *IedgeOperCoaData) GetReplyTime() string {
	if m != nil {
		return m.ReplyTime
	}
	return ""
}

func (m *IedgeOperCoaData) GetCoaReplyAttributes() []byte {
	if m != nil {
		return m.CoaReplyAttributes
	}
	return nil
}

type IedgeAaaAttr struct {
	Ipv4Mtu                          uint32   `protobuf:"varint,1,opt,name=ipv4mtu,proto3" json:"ipv4mtu,omitempty"`
	Ipv4Unnumbered                   string   `protobuf:"bytes,2,opt,name=ipv4_unnumbered,json=ipv4Unnumbered,proto3" json:"ipv4_unnumbered,omitempty"`
	AuthorizationServiceType         string   `protobuf:"bytes,3,opt,name=authorization_service_type,json=authorizationServiceType,proto3" json:"authorization_service_type,omitempty"`
	TunnelClientEndpoint             string   `protobuf:"bytes,4,opt,name=tunnel_client_endpoint,json=tunnelClientEndpoint,proto3" json:"tunnel_client_endpoint,omitempty"`
	TunnelServerEndpoint             string   `protobuf:"bytes,5,opt,name=tunnel_server_endpoint,json=tunnelServerEndpoint,proto3" json:"tunnel_server_endpoint,omitempty"`
	TunnelTosSetting                 uint32   `protobuf:"varint,6,opt,name=tunnel_tos_setting,json=tunnelTosSetting,proto3" json:"tunnel_tos_setting,omitempty"`
	TunnelMedium                     string   `protobuf:"bytes,7,opt,name=tunnel_medium,json=tunnelMedium,proto3" json:"tunnel_medium,omitempty"`
	TunnelPreference                 uint32   `protobuf:"varint,8,opt,name=tunnel_preference,json=tunnelPreference,proto3" json:"tunnel_preference,omitempty"`
	TunnelClientAuthenticationId     string   `protobuf:"bytes,9,opt,name=tunnel_client_authentication_id,json=tunnelClientAuthenticationId,proto3" json:"tunnel_client_authentication_id,omitempty"`
	TunnelProtocol                   string   `protobuf:"bytes,10,opt,name=tunnel_protocol,json=tunnelProtocol,proto3" json:"tunnel_protocol,omitempty"`
	ActualDataRateUpstream           uint32   `protobuf:"varint,11,opt,name=actual_data_rate_upstream,json=actualDataRateUpstream,proto3" json:"actual_data_rate_upstream,omitempty"`
	ActualDataRateDownstream         uint32   `protobuf:"varint,12,opt,name=actual_data_rate_downstream,json=actualDataRateDownstream,proto3" json:"actual_data_rate_downstream,omitempty"`
	AttainableDataRateUpstream       uint32   `protobuf:"varint,13,opt,name=attainable_data_rate_upstream,json=attainableDataRateUpstream,proto3" json:"attainable_data_rate_upstream,omitempty"`
	AttainableDataRateDownstream     uint32   `protobuf:"varint,14,opt,name=attainable_data_rate_downstream,json=attainableDataRateDownstream,proto3" json:"attainable_data_rate_downstream,omitempty"`
	PoolAddress                      string   `protobuf:"bytes,15,opt,name=pool_address,json=poolAddress,proto3" json:"pool_address,omitempty"`
	CircuitId                        string   `protobuf:"bytes,16,opt,name=circuit_id,json=circuitId,proto3" json:"circuit_id,omitempty"`
	ConnectionReceiveSpeed           uint32   `protobuf:"varint,17,opt,name=connection_receive_speed,json=connectionReceiveSpeed,proto3" json:"connection_receive_speed,omitempty"`
	ConnectionTransmissionSpeed      uint32   `protobuf:"varint,18,opt,name=connection_transmission_speed,json=connectionTransmissionSpeed,proto3" json:"connection_transmission_speed,omitempty"`
	DestinationStationId             string   `protobuf:"bytes,19,opt,name=destination_station_id,json=destinationStationId,proto3" json:"destination_station_id,omitempty"`
	PrimaryDnsServerAddress          string   `protobuf:"bytes,20,opt,name=primary_dns_server_address,json=primaryDnsServerAddress,proto3" json:"primary_dns_server_address,omitempty"`
	SecondaryDnsServerAddress        string   `protobuf:"bytes,21,opt,name=secondary_dns_server_address,json=secondaryDnsServerAddress,proto3" json:"secondary_dns_server_address,omitempty"`
	FormattedCallingStationId        string   `protobuf:"bytes,22,opt,name=formatted_calling_station_id,json=formattedCallingStationId,proto3" json:"formatted_calling_station_id,omitempty"`
	InterfaceName                    string   `protobuf:"bytes,23,opt,name=interface_name,json=interfaceName,proto3" json:"interface_name,omitempty"`
	InterfaceType                    string   `protobuf:"bytes,24,opt,name=interface_type,json=interfaceType,proto3" json:"interface_type,omitempty"`
	InterimAccountingInterval        uint32   `protobuf:"varint,25,opt,name=interim_accounting_interval,json=interimAccountingInterval,proto3" json:"interim_accounting_interval,omitempty"`
	IngressAccessList                string   `protobuf:"bytes,26,opt,name=ingress_access_list,json=ingressAccessList,proto3" json:"ingress_access_list,omitempty"`
	EgressAccessList                 string   `protobuf:"bytes,27,opt,name=egress_access_list,json=egressAccessList,proto3" json:"egress_access_list,omitempty"`
	IpNetmask                        string   `protobuf:"bytes,28,opt,name=ip_netmask,json=ipNetmask,proto3" json:"ip_netmask,omitempty"`
	IsInterworkingFunctionality      bool     `protobuf:"varint,29,opt,name=is_interworking_functionality,json=isInterworkingFunctionality,proto3" json:"is_interworking_functionality,omitempty"`
	MaxInterleavingDelayDownstream   uint32   `protobuf:"varint,30,opt,name=max_interleaving_delay_downstream,json=maxInterleavingDelayDownstream,proto3" json:"max_interleaving_delay_downstream,omitempty"`
	MaxInterleavingDelayUpstream     uint32   `protobuf:"varint,31,opt,name=max_interleaving_delay_upstream,json=maxInterleavingDelayUpstream,proto3" json:"max_interleaving_delay_upstream,omitempty"`
	MaxDataRateUpstream              uint32   `protobuf:"varint,32,opt,name=max_data_rate_upstream,json=maxDataRateUpstream,proto3" json:"max_data_rate_upstream,omitempty"`
	MaxDataRateDownstream            uint32   `protobuf:"varint,33,opt,name=max_data_rate_downstream,json=maxDataRateDownstream,proto3" json:"max_data_rate_downstream,omitempty"`
	MinDataRateDownstream            uint32   `protobuf:"varint,34,opt,name=min_data_rate_downstream,json=minDataRateDownstream,proto3" json:"min_data_rate_downstream,omitempty"`
	MinDataRateDownstreamLowPower    uint32   `protobuf:"varint,35,opt,name=min_data_rate_downstream_low_power,json=minDataRateDownstreamLowPower,proto3" json:"min_data_rate_downstream_low_power,omitempty"`
	MinDataRateUpstreamLowPower      uint32   `protobuf:"varint,36,opt,name=min_data_rate_upstream_low_power,json=minDataRateUpstreamLowPower,proto3" json:"min_data_rate_upstream_low_power,omitempty"`
	PrimaryNetBiosServerAddress      string   `protobuf:"bytes,37,opt,name=primary_net_bios_server_address,json=primaryNetBiosServerAddress,proto3" json:"primary_net_bios_server_address,omitempty"`
	SecondaryNetBiosServerAddress    string   `protobuf:"bytes,38,opt,name=secondary_net_bios_server_address,json=secondaryNetBiosServerAddress,proto3" json:"secondary_net_bios_server_address,omitempty"`
	ParentInterfaceName              string   `protobuf:"bytes,39,opt,name=parent_interface_name,json=parentInterfaceName,proto3" json:"parent_interface_name,omitempty"`
	RemoteId                         string   `protobuf:"bytes,40,opt,name=remote_id,json=remoteId,proto3" json:"remote_id,omitempty"`
	Route                            string   `protobuf:"bytes,41,opt,name=route,proto3" json:"route,omitempty"`
	SessionTimeout                   uint32   `protobuf:"varint,42,opt,name=session_timeout,json=sessionTimeout,proto3" json:"session_timeout,omitempty"`
	StrictRpfPackets                 uint32   `protobuf:"varint,43,opt,name=strict_rpf_packets,json=strictRpfPackets,proto3" json:"strict_rpf_packets,omitempty"`
	AccountingSessionId              string   `protobuf:"bytes,44,opt,name=accounting_session_id,json=accountingSessionId,proto3" json:"accounting_session_id,omitempty"`
	UpstreamParameterizedQosPolicy   string   `protobuf:"bytes,45,opt,name=upstream_parameterized_qos_policy,json=upstreamParameterizedQosPolicy,proto3" json:"upstream_parameterized_qos_policy,omitempty"`
	DownstreamParameterizedQosPolicy string   `protobuf:"bytes,46,opt,name=downstream_parameterized_qos_policy,json=downstreamParameterizedQosPolicy,proto3" json:"downstream_parameterized_qos_policy,omitempty"`
	UpstreamQosPolicy                string   `protobuf:"bytes,47,opt,name=upstream_qos_policy,json=upstreamQosPolicy,proto3" json:"upstream_qos_policy,omitempty"`
	DownstreamQosPolicy              string   `protobuf:"bytes,48,opt,name=downstream_qos_policy,json=downstreamQosPolicy,proto3" json:"downstream_qos_policy,omitempty"`
	SessionTerminationCause          string   `protobuf:"bytes,49,opt,name=session_termination_cause,json=sessionTerminationCause,proto3" json:"session_termination_cause,omitempty"`
	XXX_NoUnkeyedLiteral             struct{} `json:"-"`
	XXX_unrecognized                 []byte   `json:"-"`
	XXX_sizecache                    int32    `json:"-"`
}

func (m *IedgeAaaAttr) Reset()         { *m = IedgeAaaAttr{} }
func (m *IedgeAaaAttr) String() string { return proto.CompactTextString(m) }
func (*IedgeAaaAttr) ProtoMessage()    {}
func (*IedgeAaaAttr) Descriptor() ([]byte, []int) {
	return fileDescriptor_0e0d9a3f80b04023, []int{4}
}

func (m *IedgeAaaAttr) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IedgeAaaAttr.Unmarshal(m, b)
}
func (m *IedgeAaaAttr) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IedgeAaaAttr.Marshal(b, m, deterministic)
}
func (m *IedgeAaaAttr) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IedgeAaaAttr.Merge(m, src)
}
func (m *IedgeAaaAttr) XXX_Size() int {
	return xxx_messageInfo_IedgeAaaAttr.Size(m)
}
func (m *IedgeAaaAttr) XXX_DiscardUnknown() {
	xxx_messageInfo_IedgeAaaAttr.DiscardUnknown(m)
}

var xxx_messageInfo_IedgeAaaAttr proto.InternalMessageInfo

func (m *IedgeAaaAttr) GetIpv4Mtu() uint32 {
	if m != nil {
		return m.Ipv4Mtu
	}
	return 0
}

func (m *IedgeAaaAttr) GetIpv4Unnumbered() string {
	if m != nil {
		return m.Ipv4Unnumbered
	}
	return ""
}

func (m *IedgeAaaAttr) GetAuthorizationServiceType() string {
	if m != nil {
		return m.AuthorizationServiceType
	}
	return ""
}

func (m *IedgeAaaAttr) GetTunnelClientEndpoint() string {
	if m != nil {
		return m.TunnelClientEndpoint
	}
	return ""
}

func (m *IedgeAaaAttr) GetTunnelServerEndpoint() string {
	if m != nil {
		return m.TunnelServerEndpoint
	}
	return ""
}

func (m *IedgeAaaAttr) GetTunnelTosSetting() uint32 {
	if m != nil {
		return m.TunnelTosSetting
	}
	return 0
}

func (m *IedgeAaaAttr) GetTunnelMedium() string {
	if m != nil {
		return m.TunnelMedium
	}
	return ""
}

func (m *IedgeAaaAttr) GetTunnelPreference() uint32 {
	if m != nil {
		return m.TunnelPreference
	}
	return 0
}

func (m *IedgeAaaAttr) GetTunnelClientAuthenticationId() string {
	if m != nil {
		return m.TunnelClientAuthenticationId
	}
	return ""
}

func (m *IedgeAaaAttr) GetTunnelProtocol() string {
	if m != nil {
		return m.TunnelProtocol
	}
	return ""
}

func (m *IedgeAaaAttr) GetActualDataRateUpstream() uint32 {
	if m != nil {
		return m.ActualDataRateUpstream
	}
	return 0
}

func (m *IedgeAaaAttr) GetActualDataRateDownstream() uint32 {
	if m != nil {
		return m.ActualDataRateDownstream
	}
	return 0
}

func (m *IedgeAaaAttr) GetAttainableDataRateUpstream() uint32 {
	if m != nil {
		return m.AttainableDataRateUpstream
	}
	return 0
}

func (m *IedgeAaaAttr) GetAttainableDataRateDownstream() uint32 {
	if m != nil {
		return m.AttainableDataRateDownstream
	}
	return 0
}

func (m *IedgeAaaAttr) GetPoolAddress() string {
	if m != nil {
		return m.PoolAddress
	}
	return ""
}

func (m *IedgeAaaAttr) GetCircuitId() string {
	if m != nil {
		return m.CircuitId
	}
	return ""
}

func (m *IedgeAaaAttr) GetConnectionReceiveSpeed() uint32 {
	if m != nil {
		return m.ConnectionReceiveSpeed
	}
	return 0
}

func (m *IedgeAaaAttr) GetConnectionTransmissionSpeed() uint32 {
	if m != nil {
		return m.ConnectionTransmissionSpeed
	}
	return 0
}

func (m *IedgeAaaAttr) GetDestinationStationId() string {
	if m != nil {
		return m.DestinationStationId
	}
	return ""
}

func (m *IedgeAaaAttr) GetPrimaryDnsServerAddress() string {
	if m != nil {
		return m.PrimaryDnsServerAddress
	}
	return ""
}

func (m *IedgeAaaAttr) GetSecondaryDnsServerAddress() string {
	if m != nil {
		return m.SecondaryDnsServerAddress
	}
	return ""
}

func (m *IedgeAaaAttr) GetFormattedCallingStationId() string {
	if m != nil {
		return m.FormattedCallingStationId
	}
	return ""
}

func (m *IedgeAaaAttr) GetInterfaceName() string {
	if m != nil {
		return m.InterfaceName
	}
	return ""
}

func (m *IedgeAaaAttr) GetInterfaceType() string {
	if m != nil {
		return m.InterfaceType
	}
	return ""
}

func (m *IedgeAaaAttr) GetInterimAccountingInterval() uint32 {
	if m != nil {
		return m.InterimAccountingInterval
	}
	return 0
}

func (m *IedgeAaaAttr) GetIngressAccessList() string {
	if m != nil {
		return m.IngressAccessList
	}
	return ""
}

func (m *IedgeAaaAttr) GetEgressAccessList() string {
	if m != nil {
		return m.EgressAccessList
	}
	return ""
}

func (m *IedgeAaaAttr) GetIpNetmask() string {
	if m != nil {
		return m.IpNetmask
	}
	return ""
}

func (m *IedgeAaaAttr) GetIsInterworkingFunctionality() bool {
	if m != nil {
		return m.IsInterworkingFunctionality
	}
	return false
}

func (m *IedgeAaaAttr) GetMaxInterleavingDelayDownstream() uint32 {
	if m != nil {
		return m.MaxInterleavingDelayDownstream
	}
	return 0
}

func (m *IedgeAaaAttr) GetMaxInterleavingDelayUpstream() uint32 {
	if m != nil {
		return m.MaxInterleavingDelayUpstream
	}
	return 0
}

func (m *IedgeAaaAttr) GetMaxDataRateUpstream() uint32 {
	if m != nil {
		return m.MaxDataRateUpstream
	}
	return 0
}

func (m *IedgeAaaAttr) GetMaxDataRateDownstream() uint32 {
	if m != nil {
		return m.MaxDataRateDownstream
	}
	return 0
}

func (m *IedgeAaaAttr) GetMinDataRateDownstream() uint32 {
	if m != nil {
		return m.MinDataRateDownstream
	}
	return 0
}

func (m *IedgeAaaAttr) GetMinDataRateDownstreamLowPower() uint32 {
	if m != nil {
		return m.MinDataRateDownstreamLowPower
	}
	return 0
}

func (m *IedgeAaaAttr) GetMinDataRateUpstreamLowPower() uint32 {
	if m != nil {
		return m.MinDataRateUpstreamLowPower
	}
	return 0
}

func (m *IedgeAaaAttr) GetPrimaryNetBiosServerAddress() string {
	if m != nil {
		return m.PrimaryNetBiosServerAddress
	}
	return ""
}

func (m *IedgeAaaAttr) GetSecondaryNetBiosServerAddress() string {
	if m != nil {
		return m.SecondaryNetBiosServerAddress
	}
	return ""
}

func (m *IedgeAaaAttr) GetParentInterfaceName() string {
	if m != nil {
		return m.ParentInterfaceName
	}
	return ""
}

func (m *IedgeAaaAttr) GetRemoteId() string {
	if m != nil {
		return m.RemoteId
	}
	return ""
}

func (m *IedgeAaaAttr) GetRoute() string {
	if m != nil {
		return m.Route
	}
	return ""
}

func (m *IedgeAaaAttr) GetSessionTimeout() uint32 {
	if m != nil {
		return m.SessionTimeout
	}
	return 0
}

func (m *IedgeAaaAttr) GetStrictRpfPackets() uint32 {
	if m != nil {
		return m.StrictRpfPackets
	}
	return 0
}

func (m *IedgeAaaAttr) GetAccountingSessionId() string {
	if m != nil {
		return m.AccountingSessionId
	}
	return ""
}

func (m *IedgeAaaAttr) GetUpstreamParameterizedQosPolicy() string {
	if m != nil {
		return m.UpstreamParameterizedQosPolicy
	}
	return ""
}

func (m *IedgeAaaAttr) GetDownstreamParameterizedQosPolicy() string {
	if m != nil {
		return m.DownstreamParameterizedQosPolicy
	}
	return ""
}

func (m *IedgeAaaAttr) GetUpstreamQosPolicy() string {
	if m != nil {
		return m.UpstreamQosPolicy
	}
	return ""
}

func (m *IedgeAaaAttr) GetDownstreamQosPolicy() string {
	if m != nil {
		return m.DownstreamQosPolicy
	}
	return ""
}

func (m *IedgeAaaAttr) GetSessionTerminationCause() string {
	if m != nil {
		return m.SessionTerminationCause
	}
	return ""
}

type IedgeMobilitySessionData struct {
	MpcProtocol                bool     `protobuf:"varint,1,opt,name=mpc_protocol,json=mpcProtocol,proto3" json:"mpc_protocol,omitempty"`
	MobilityIpv4Address        string   `protobuf:"bytes,2,opt,name=mobility_ipv4_address,json=mobilityIpv4Address,proto3" json:"mobility_ipv4_address,omitempty"`
	MobilityDefaultIpv4Gateway string   `protobuf:"bytes,3,opt,name=mobility_default_ipv4_gateway,json=mobilityDefaultIpv4Gateway,proto3" json:"mobility_default_ipv4_gateway,omitempty"`
	MobilityDnsServer          string   `protobuf:"bytes,4,opt,name=mobility_dns_server,json=mobilityDnsServer,proto3" json:"mobility_dns_server,omitempty"`
	MobilityDhcpServer         string   `protobuf:"bytes,5,opt,name=mobility_dhcp_server,json=mobilityDhcpServer,proto3" json:"mobility_dhcp_server,omitempty"`
	MobilityIpv4Netmask        string   `protobuf:"bytes,6,opt,name=mobility_ipv4_netmask,json=mobilityIpv4Netmask,proto3" json:"mobility_ipv4_netmask,omitempty"`
	DomainName                 string   `protobuf:"bytes,7,opt,name=domain_name,json=domainName,proto3" json:"domain_name,omitempty"`
	UplinkGreKey               string   `protobuf:"bytes,8,opt,name=uplink_gre_key,json=uplinkGreKey,proto3" json:"uplink_gre_key,omitempty"`
	DownlinkGreKey             string   `protobuf:"bytes,9,opt,name=downlink_gre_key,json=downlinkGreKey,proto3" json:"downlink_gre_key,omitempty"`
	LeaseTime                  string   `protobuf:"bytes,10,opt,name=lease_time,json=leaseTime,proto3" json:"lease_time,omitempty"`
	XXX_NoUnkeyedLiteral       struct{} `json:"-"`
	XXX_unrecognized           []byte   `json:"-"`
	XXX_sizecache              int32    `json:"-"`
}

func (m *IedgeMobilitySessionData) Reset()         { *m = IedgeMobilitySessionData{} }
func (m *IedgeMobilitySessionData) String() string { return proto.CompactTextString(m) }
func (*IedgeMobilitySessionData) ProtoMessage()    {}
func (*IedgeMobilitySessionData) Descriptor() ([]byte, []int) {
	return fileDescriptor_0e0d9a3f80b04023, []int{5}
}

func (m *IedgeMobilitySessionData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IedgeMobilitySessionData.Unmarshal(m, b)
}
func (m *IedgeMobilitySessionData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IedgeMobilitySessionData.Marshal(b, m, deterministic)
}
func (m *IedgeMobilitySessionData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IedgeMobilitySessionData.Merge(m, src)
}
func (m *IedgeMobilitySessionData) XXX_Size() int {
	return xxx_messageInfo_IedgeMobilitySessionData.Size(m)
}
func (m *IedgeMobilitySessionData) XXX_DiscardUnknown() {
	xxx_messageInfo_IedgeMobilitySessionData.DiscardUnknown(m)
}

var xxx_messageInfo_IedgeMobilitySessionData proto.InternalMessageInfo

func (m *IedgeMobilitySessionData) GetMpcProtocol() bool {
	if m != nil {
		return m.MpcProtocol
	}
	return false
}

func (m *IedgeMobilitySessionData) GetMobilityIpv4Address() string {
	if m != nil {
		return m.MobilityIpv4Address
	}
	return ""
}

func (m *IedgeMobilitySessionData) GetMobilityDefaultIpv4Gateway() string {
	if m != nil {
		return m.MobilityDefaultIpv4Gateway
	}
	return ""
}

func (m *IedgeMobilitySessionData) GetMobilityDnsServer() string {
	if m != nil {
		return m.MobilityDnsServer
	}
	return ""
}

func (m *IedgeMobilitySessionData) GetMobilityDhcpServer() string {
	if m != nil {
		return m.MobilityDhcpServer
	}
	return ""
}

func (m *IedgeMobilitySessionData) GetMobilityIpv4Netmask() string {
	if m != nil {
		return m.MobilityIpv4Netmask
	}
	return ""
}

func (m *IedgeMobilitySessionData) GetDomainName() string {
	if m != nil {
		return m.DomainName
	}
	return ""
}

func (m *IedgeMobilitySessionData) GetUplinkGreKey() string {
	if m != nil {
		return m.UplinkGreKey
	}
	return ""
}

func (m *IedgeMobilitySessionData) GetDownlinkGreKey() string {
	if m != nil {
		return m.DownlinkGreKey
	}
	return ""
}

func (m *IedgeMobilitySessionData) GetLeaseTime() string {
	if m != nil {
		return m.LeaseTime
	}
	return ""
}

type SubscriberSessionData struct {
	SessionType                  string                    `protobuf:"bytes,50,opt,name=session_type,json=sessionType,proto3" json:"session_type,omitempty"`
	PppoeSubType                 string                    `protobuf:"bytes,51,opt,name=pppoe_sub_type,json=pppoeSubType,proto3" json:"pppoe_sub_type,omitempty"`
	InterfaceName                string                    `protobuf:"bytes,52,opt,name=interface_name,json=interfaceName,proto3" json:"interface_name,omitempty"`
	VrfName                      string                    `protobuf:"bytes,53,opt,name=vrf_name,json=vrfName,proto3" json:"vrf_name,omitempty"`
	CircuitId                    string                    `protobuf:"bytes,54,opt,name=circuit_id,json=circuitId,proto3" json:"circuit_id,omitempty"`
	RemoteId                     string                    `protobuf:"bytes,55,opt,name=remote_id,json=remoteId,proto3" json:"remote_id,omitempty"`
	LnsAddress                   string                    `protobuf:"bytes,56,opt,name=lns_address,json=lnsAddress,proto3" json:"lns_address,omitempty"`
	LacAddress                   string                    `protobuf:"bytes,57,opt,name=lac_address,json=lacAddress,proto3" json:"lac_address,omitempty"`
	TunnelClientAuthenticationId string                    `protobuf:"bytes,58,opt,name=tunnel_client_authentication_id,json=tunnelClientAuthenticationId,proto3" json:"tunnel_client_authentication_id,omitempty"`
	TunnelServerAuthenticationId string                    `protobuf:"bytes,59,opt,name=tunnel_server_authentication_id,json=tunnelServerAuthenticationId,proto3" json:"tunnel_server_authentication_id,omitempty"`
	SessionIpAddress             string                    `protobuf:"bytes,60,opt,name=session_ip_address,json=sessionIpAddress,proto3" json:"session_ip_address,omitempty"`
	SessionIpv6Address           string                    `protobuf:"bytes,61,opt,name=session_ipv6_address,json=sessionIpv6Address,proto3" json:"session_ipv6_address,omitempty"`
	SessionIpv6Prefix            string                    `protobuf:"bytes,62,opt,name=session_ipv6_prefix,json=sessionIpv6Prefix,proto3" json:"session_ipv6_prefix,omitempty"`
	DelegatedIpv6Prefix          string                    `protobuf:"bytes,63,opt,name=delegated_ipv6_prefix,json=delegatedIpv6Prefix,proto3" json:"delegated_ipv6_prefix,omitempty"`
	Ipv6InterfaceId              []byte                    `protobuf:"bytes,64,opt,name=ipv6_interface_id,json=ipv6InterfaceId,proto3" json:"ipv6_interface_id,omitempty"`
	MacAddress                   string                    `protobuf:"bytes,65,opt,name=mac_address,json=macAddress,proto3" json:"mac_address,omitempty"`
	AccountSessionId             string                    `protobuf:"bytes,66,opt,name=account_session_id,json=accountSessionId,proto3" json:"account_session_id,omitempty"`
	NasPort                      string                    `protobuf:"bytes,67,opt,name=nas_port,json=nasPort,proto3" json:"nas_port,omitempty"`
	Username                     string                    `protobuf:"bytes,68,opt,name=username,proto3" json:"username,omitempty"`
	Clientname                   string                    `protobuf:"bytes,69,opt,name=clientname,proto3" json:"clientname,omitempty"`
	Formattedname                string                    `protobuf:"bytes,70,opt,name=formattedname,proto3" json:"formattedname,omitempty"`
	IsSessionAuthentic           bool                      `protobuf:"varint,71,opt,name=is_session_authentic,json=isSessionAuthentic,proto3" json:"is_session_authentic,omitempty"`
	IsSessionAuthor              bool                      `protobuf:"varint,72,opt,name=is_session_author,json=isSessionAuthor,proto3" json:"is_session_author,omitempty"`
	SessionState                 string                    `protobuf:"bytes,73,opt,name=session_state,json=sessionState,proto3" json:"session_state,omitempty"`
	SessionCreationTime          string                    `protobuf:"bytes,74,opt,name=session_creation_time,json=sessionCreationTime,proto3" json:"session_creation_time,omitempty"`
	IdleStateChangeTime          string                    `protobuf:"bytes,75,opt,name=idle_state_change_time,json=idleStateChangeTime,proto3" json:"idle_state_change_time,omitempty"`
	TotalSessionIdleTime         uint32                    `protobuf:"varint,76,opt,name=total_session_idle_time,json=totalSessionIdleTime,proto3" json:"total_session_idle_time,omitempty"`
	AccessInterfaceName          string                    `protobuf:"bytes,77,opt,name=access_interface_name,json=accessInterfaceName,proto3" json:"access_interface_name,omitempty"`
	Accounting                   *IedgeAccntData           `protobuf:"bytes,78,opt,name=accounting,proto3" json:"accounting,omitempty"`
	SessionChangeOfAuthorization []*IedgeOperCoaData       `protobuf:"bytes,79,rep,name=session_change_of_authorization,json=sessionChangeOfAuthorization,proto3" json:"session_change_of_authorization,omitempty"`
	UserProfileAttributes        *IedgeAaaAttr             `protobuf:"bytes,80,opt,name=user_profile_attributes,json=userProfileAttributes,proto3" json:"user_profile_attributes,omitempty"`
	PendingCallbacks             uint64                    `protobuf:"varint,81,opt,name=pending_callbacks,json=pendingCallbacks,proto3" json:"pending_callbacks,omitempty"`
	AfUpStatus                   uint32                    `protobuf:"varint,82,opt,name=af_up_status,json=afUpStatus,proto3" json:"af_up_status,omitempty"`
	SessionIpv4State             string                    `protobuf:"bytes,83,opt,name=session_ipv4_state,json=sessionIpv4State,proto3" json:"session_ipv4_state,omitempty"`
	SessionIpv6State             string                    `protobuf:"bytes,84,opt,name=session_ipv6_state,json=sessionIpv6State,proto3" json:"session_ipv6_state,omitempty"`
	MobilityAttributes           *IedgeMobilitySessionData `protobuf:"bytes,85,opt,name=mobility_attributes,json=mobilityAttributes,proto3" json:"mobility_attributes,omitempty"`
	XXX_NoUnkeyedLiteral         struct{}                  `json:"-"`
	XXX_unrecognized             []byte                    `json:"-"`
	XXX_sizecache                int32                     `json:"-"`
}

func (m *SubscriberSessionData) Reset()         { *m = SubscriberSessionData{} }
func (m *SubscriberSessionData) String() string { return proto.CompactTextString(m) }
func (*SubscriberSessionData) ProtoMessage()    {}
func (*SubscriberSessionData) Descriptor() ([]byte, []int) {
	return fileDescriptor_0e0d9a3f80b04023, []int{6}
}

func (m *SubscriberSessionData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubscriberSessionData.Unmarshal(m, b)
}
func (m *SubscriberSessionData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubscriberSessionData.Marshal(b, m, deterministic)
}
func (m *SubscriberSessionData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubscriberSessionData.Merge(m, src)
}
func (m *SubscriberSessionData) XXX_Size() int {
	return xxx_messageInfo_SubscriberSessionData.Size(m)
}
func (m *SubscriberSessionData) XXX_DiscardUnknown() {
	xxx_messageInfo_SubscriberSessionData.DiscardUnknown(m)
}

var xxx_messageInfo_SubscriberSessionData proto.InternalMessageInfo

func (m *SubscriberSessionData) GetSessionType() string {
	if m != nil {
		return m.SessionType
	}
	return ""
}

func (m *SubscriberSessionData) GetPppoeSubType() string {
	if m != nil {
		return m.PppoeSubType
	}
	return ""
}

func (m *SubscriberSessionData) GetInterfaceName() string {
	if m != nil {
		return m.InterfaceName
	}
	return ""
}

func (m *SubscriberSessionData) GetVrfName() string {
	if m != nil {
		return m.VrfName
	}
	return ""
}

func (m *SubscriberSessionData) GetCircuitId() string {
	if m != nil {
		return m.CircuitId
	}
	return ""
}

func (m *SubscriberSessionData) GetRemoteId() string {
	if m != nil {
		return m.RemoteId
	}
	return ""
}

func (m *SubscriberSessionData) GetLnsAddress() string {
	if m != nil {
		return m.LnsAddress
	}
	return ""
}

func (m *SubscriberSessionData) GetLacAddress() string {
	if m != nil {
		return m.LacAddress
	}
	return ""
}

func (m *SubscriberSessionData) GetTunnelClientAuthenticationId() string {
	if m != nil {
		return m.TunnelClientAuthenticationId
	}
	return ""
}

func (m *SubscriberSessionData) GetTunnelServerAuthenticationId() string {
	if m != nil {
		return m.TunnelServerAuthenticationId
	}
	return ""
}

func (m *SubscriberSessionData) GetSessionIpAddress() string {
	if m != nil {
		return m.SessionIpAddress
	}
	return ""
}

func (m *SubscriberSessionData) GetSessionIpv6Address() string {
	if m != nil {
		return m.SessionIpv6Address
	}
	return ""
}

func (m *SubscriberSessionData) GetSessionIpv6Prefix() string {
	if m != nil {
		return m.SessionIpv6Prefix
	}
	return ""
}

func (m *SubscriberSessionData) GetDelegatedIpv6Prefix() string {
	if m != nil {
		return m.DelegatedIpv6Prefix
	}
	return ""
}

func (m *SubscriberSessionData) GetIpv6InterfaceId() []byte {
	if m != nil {
		return m.Ipv6InterfaceId
	}
	return nil
}

func (m *SubscriberSessionData) GetMacAddress() string {
	if m != nil {
		return m.MacAddress
	}
	return ""
}

func (m *SubscriberSessionData) GetAccountSessionId() string {
	if m != nil {
		return m.AccountSessionId
	}
	return ""
}

func (m *SubscriberSessionData) GetNasPort() string {
	if m != nil {
		return m.NasPort
	}
	return ""
}

func (m *SubscriberSessionData) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *SubscriberSessionData) GetClientname() string {
	if m != nil {
		return m.Clientname
	}
	return ""
}

func (m *SubscriberSessionData) GetFormattedname() string {
	if m != nil {
		return m.Formattedname
	}
	return ""
}

func (m *SubscriberSessionData) GetIsSessionAuthentic() bool {
	if m != nil {
		return m.IsSessionAuthentic
	}
	return false
}

func (m *SubscriberSessionData) GetIsSessionAuthor() bool {
	if m != nil {
		return m.IsSessionAuthor
	}
	return false
}

func (m *SubscriberSessionData) GetSessionState() string {
	if m != nil {
		return m.SessionState
	}
	return ""
}

func (m *SubscriberSessionData) GetSessionCreationTime() string {
	if m != nil {
		return m.SessionCreationTime
	}
	return ""
}

func (m *SubscriberSessionData) GetIdleStateChangeTime() string {
	if m != nil {
		return m.IdleStateChangeTime
	}
	return ""
}

func (m *SubscriberSessionData) GetTotalSessionIdleTime() uint32 {
	if m != nil {
		return m.TotalSessionIdleTime
	}
	return 0
}

func (m *SubscriberSessionData) GetAccessInterfaceName() string {
	if m != nil {
		return m.AccessInterfaceName
	}
	return ""
}

func (m *SubscriberSessionData) GetAccounting() *IedgeAccntData {
	if m != nil {
		return m.Accounting
	}
	return nil
}

func (m *SubscriberSessionData) GetSessionChangeOfAuthorization() []*IedgeOperCoaData {
	if m != nil {
		return m.SessionChangeOfAuthorization
	}
	return nil
}

func (m *SubscriberSessionData) GetUserProfileAttributes() *IedgeAaaAttr {
	if m != nil {
		return m.UserProfileAttributes
	}
	return nil
}

func (m *SubscriberSessionData) GetPendingCallbacks() uint64 {
	if m != nil {
		return m.PendingCallbacks
	}
	return 0
}

func (m *SubscriberSessionData) GetAfUpStatus() uint32 {
	if m != nil {
		return m.AfUpStatus
	}
	return 0
}

func (m *SubscriberSessionData) GetSessionIpv4State() string {
	if m != nil {
		return m.SessionIpv4State
	}
	return ""
}

func (m *SubscriberSessionData) GetSessionIpv6State() string {
	if m != nil {
		return m.SessionIpv6State
	}
	return ""
}

func (m *SubscriberSessionData) GetMobilityAttributes() *IedgeMobilitySessionData {
	if m != nil {
		return m.MobilityAttributes
	}
	return nil
}

func init() {
	proto.RegisterType((*SubscriberSessionData_KEYS)(nil), "cisco_ios_xr_iedge4710_oper.subscriber.session.nodes.node.sessions.session.subscriber_session_data_KEYS")
	proto.RegisterType((*IedgeOperAccountingData)(nil), "cisco_ios_xr_iedge4710_oper.subscriber.session.nodes.node.sessions.session.iedge_oper_accounting_data")
	proto.RegisterType((*IedgeAccntData)(nil), "cisco_ios_xr_iedge4710_oper.subscriber.session.nodes.node.sessions.session.iedge_accnt_data")
	proto.RegisterType((*IedgeOperCoaData)(nil), "cisco_ios_xr_iedge4710_oper.subscriber.session.nodes.node.sessions.session.iedge_oper_coa_data")
	proto.RegisterType((*IedgeAaaAttr)(nil), "cisco_ios_xr_iedge4710_oper.subscriber.session.nodes.node.sessions.session.iedge_aaa_attr")
	proto.RegisterType((*IedgeMobilitySessionData)(nil), "cisco_ios_xr_iedge4710_oper.subscriber.session.nodes.node.sessions.session.iedge_mobility_session_data")
	proto.RegisterType((*SubscriberSessionData)(nil), "cisco_ios_xr_iedge4710_oper.subscriber.session.nodes.node.sessions.session.subscriber_session_data")
}

func init() { proto.RegisterFile("subscriber_session_data.proto", fileDescriptor_0e0d9a3f80b04023) }

var fileDescriptor_0e0d9a3f80b04023 = []byte{
	// 2405 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x58, 0xd9, 0x72, 0x1c, 0xb7,
	0xd5, 0xae, 0xf9, 0x6d, 0xc9, 0x1c, 0x70, 0x11, 0xd9, 0x5c, 0xd4, 0xdc, 0xc4, 0x45, 0xf2, 0x6f,
	0x7a, 0x09, 0x63, 0x53, 0x34, 0xbd, 0xdb, 0xa1, 0x48, 0x4a, 0x1e, 0x6b, 0x31, 0x3d, 0xa4, 0x2e,
	0xe2, 0x4a, 0x55, 0x17, 0xd8, 0x8d, 0xa1, 0x10, 0x76, 0x37, 0xda, 0x00, 0x7a, 0x48, 0xba, 0xf2,
	0x14, 0xa9, 0x4a, 0x55, 0x9e, 0x20, 0x17, 0x79, 0x8f, 0x3c, 0x46, 0xee, 0x72, 0x9f, 0x17, 0xc8,
	0x45, 0x0a, 0xe7, 0x00, 0xe8, 0xee, 0x99, 0x61, 0xca, 0x17, 0xf2, 0x8d, 0xc4, 0x39, 0xe7, 0xfb,
	0x0e, 0x4e, 0x03, 0x67, 0x03, 0xc8, 0xaa, 0x2a, 0xcf, 0x54, 0x2c, 0xf9, 0x19, 0x93, 0x91, 0x62,
	0x4a, 0x71, 0x91, 0x47, 0x09, 0xd5, 0x74, 0xbb, 0x90, 0x42, 0x8b, 0xe0, 0xbb, 0x98, 0xab, 0x58,
	0x44, 0x5c, 0xa8, 0xe8, 0x4a, 0x46, 0x9c, 0x25, 0xe7, 0x6c, 0xf7, 0x93, 0x8f, 0x3e, 0x8c, 0x44,
	0xc1, 0xe4, 0x76, 0x45, 0xdd, 0xb6, 0xd4, 0xed, 0x5c, 0x24, 0x4c, 0xc1, 0xbf, 0x4e, 0xa4, 0xdc,
	0x1f, 0x9b, 0x3f, 0x92, 0x95, 0x1b, 0x16, 0x8b, 0x9e, 0x1e, 0xfd, 0xfe, 0x24, 0x58, 0x26, 0x6d,
	0x43, 0x8c, 0x72, 0x9a, 0xb1, 0xb0, 0xb5, 0xde, 0xda, 0x6a, 0x77, 0xc7, 0x8c, 0xe0, 0x05, 0xcd,
	0x58, 0xb0, 0x4a, 0x88, 0x63, 0xf0, 0x24, 0xfc, 0x3f, 0xd0, 0xb6, 0xad, 0xa4, 0x93, 0x6c, 0xfe,
	0xfb, 0x36, 0x59, 0x02, 0xef, 0xc0, 0xb3, 0x88, 0xc6, 0xb1, 0x28, 0x73, 0xcd, 0xf3, 0x73, 0xb0,
	0x1f, 0x6c, 0x93, 0xd9, 0x9a, 0x48, 0x69, 0xaa, 0x59, 0x24, 0x63, 0x58, 0x64, 0xb2, 0x3b, 0x53,
	0xa9, 0x4e, 0x8c, 0xa6, 0x1b, 0x07, 0x3b, 0x64, 0xbe, 0x81, 0x17, 0x05, 0x92, 0x60, 0xe1, 0xc9,
	0xee, 0x6c, 0x9d, 0x21, 0x0a, 0x60, 0x99, 0x35, 0x24, 0x8b, 0x85, 0x4c, 0xa2, 0x58, 0xe4, 0x9a,
	0x5d, 0x69, 0xfc, 0x90, 0x37, 0xc0, 0xd5, 0x19, 0x54, 0x1d, 0xa0, 0x06, 0xbe, 0x68, 0x8b, 0x4c,
	0x67, 0x4c, 0xbf, 0x12, 0x49, 0x94, 0x72, 0x65, 0xc1, 0x6f, 0x02, 0x78, 0x0a, 0xe5, 0xcf, 0xb8,
	0x42, 0xe4, 0x07, 0x24, 0xb0, 0x0b, 0x46, 0xb5, 0x3d, 0xb8, 0x05, 0xd8, 0x69, 0xab, 0x39, 0x71,
	0x5b, 0x31, 0xe4, 0x3b, 0x95, 0x3a, 0xd2, 0x3c, 0x63, 0xe1, 0x6d, 0x20, 0x34, 0x7c, 0xa7, 0x52,
	0x9f, 0xf2, 0x8c, 0x05, 0xfb, 0x64, 0x95, 0xab, 0x88, 0xe7, 0x9a, 0x49, 0x9e, 0xd5, 0x77, 0x8f,
	0xe5, 0xf4, 0x2c, 0x65, 0x49, 0xf8, 0xd6, 0x7a, 0x6b, 0x6b, 0xac, 0xbb, 0xc4, 0x55, 0x07, 0x31,
	0xfb, 0x1e, 0x72, 0x84, 0x88, 0xe0, 0x5d, 0x32, 0xed, 0xf8, 0xf0, 0x7f, 0x9f, 0xa6, 0xe1, 0x18,
	0xec, 0xd6, 0x1d, 0x2b, 0xef, 0x58, 0x71, 0xf0, 0x8c, 0xdc, 0x4f, 0xa9, 0xd2, 0x91, 0x2a, 0xe3,
	0x98, 0x29, 0xd5, 0x2b, 0x53, 0xbf, 0x74, 0x59, 0x24, 0xe6, 0x6c, 0xc0, 0xdf, 0x36, 0xf8, 0xbb,
	0x66, 0xa0, 0x27, 0x1e, 0x69, 0xd7, 0x7f, 0x09, 0x38, 0xf0, 0xfd, 0x31, 0x59, 0xcf, 0xcd, 0x6e,
	0x0f, 0x98, 0xa0, 0x5a, 0xb3, 0xac, 0xb0, 0x9f, 0x4e, 0xc0, 0x91, 0x15, 0x83, 0x6b, 0x18, 0xd8,
	0x47, 0x90, 0xb3, 0x03, 0x5e, 0xfd, 0x2f, 0x3b, 0xe3, 0xe0, 0xd2, 0x8a, 0xc1, 0xdd, 0x68, 0xe7,
	0x43, 0x32, 0xa7, 0x58, 0x3e, 0x68, 0x47, 0x85, 0x13, 0xe0, 0x43, 0x60, 0x74, 0x0d, 0xae, 0x0a,
	0x3e, 0x25, 0x21, 0x8d, 0x63, 0x56, 0x68, 0x96, 0x0c, 0xb1, 0x26, 0x81, 0xb5, 0xe0, 0xf4, 0xc3,
	0x4c, 0xc9, 0xfe, 0xc8, 0xe2, 0x51, 0xcc, 0x29, 0x64, 0x3a, 0xfd, 0x00, 0xf3, 0x1b, 0xb2, 0x32,
	0xc2, 0xcb, 0xa8, 0x47, 0x79, 0x5a, 0x4a, 0xa6, 0xc2, 0x3b, 0xc0, 0x5e, 0x1c, 0xf2, 0xf6, 0xb1,
	0x05, 0x6c, 0xfe, 0xbd, 0x45, 0xa6, 0x31, 0xe3, 0x68, 0x1c, 0xe7, 0x1a, 0xf3, 0xec, 0x2f, 0x2d,
	0x1f, 0xaa, 0x10, 0x7c, 0x18, 0x94, 0x61, 0x6b, 0xfd, 0x8d, 0xad, 0xf1, 0x9d, 0xde, 0xf6, 0xeb,
	0x2b, 0x26, 0xdb, 0x37, 0x27, 0x7b, 0x23, 0x9f, 0x6d, 0xe9, 0xf9, 0x57, 0x8b, 0xcc, 0xd6, 0x18,
	0xb1, 0xa0, 0xe8, 0xef, 0x7d, 0x32, 0x29, 0xd9, 0x4f, 0x25, 0x53, 0x3a, 0xa2, 0xf1, 0x05, 0x4b,
	0xa0, 0x22, 0x8c, 0x75, 0x27, 0xac, 0x70, 0xdf, 0xc8, 0x82, 0x0d, 0xe2, 0x7e, 0x63, 0x10, 0x60,
	0xf1, 0x19, 0xb7, 0x32, 0x38, 0xf3, 0x5d, 0xb2, 0x60, 0x6c, 0x7a, 0x5b, 0x5a, 0x4b, 0x7e, 0x56,
	0x9a, 0x53, 0x30, 0xe9, 0x3f, 0xd1, 0x9d, 0x8b, 0x05, 0xed, 0x5a, 0x9b, 0x5e, 0x67, 0x6a, 0x9a,
	0x64, 0x45, 0x7a, 0x8d, 0x66, 0x31, 0xf7, 0xdb, 0x20, 0x71, 0x81, 0x84, 0x46, 0x0d, 0xa4, 0x66,
	0xf2, 0x16, 0x98, 0x0c, 0xc0, 0x64, 0x91, 0x5e, 0x57, 0x06, 0x37, 0xff, 0x33, 0x47, 0xa6, 0xec,
	0x99, 0x50, 0x0a, 0x94, 0x20, 0x24, 0x6f, 0xf1, 0xa2, 0xbf, 0x9b, 0xe9, 0xd2, 0x56, 0x3b, 0xf7,
	0x33, 0x78, 0x87, 0xdc, 0x31, 0x7f, 0x46, 0x65, 0x9e, 0x97, 0xd9, 0x19, 0x93, 0xcc, 0x95, 0xd5,
	0x29, 0x23, 0x7e, 0xe9, 0xa5, 0xc1, 0x97, 0x64, 0x89, 0x96, 0xfa, 0x95, 0x90, 0xfc, 0x67, 0xaa,
	0x4d, 0xf1, 0x51, 0x4c, 0xf6, 0x79, 0xcc, 0x22, 0x7d, 0x5d, 0xb8, 0xfa, 0x16, 0x36, 0x10, 0x27,
	0x08, 0x38, 0xbd, 0x2e, 0x60, 0x6b, 0x74, 0x99, 0xe7, 0x2c, 0x8d, 0xe2, 0x94, 0x9b, 0x88, 0x63,
	0x79, 0x52, 0x08, 0x9e, 0x6b, 0xfb, 0xc1, 0x73, 0xa8, 0x3d, 0x00, 0xe5, 0x91, 0xd5, 0xd5, 0x58,
	0x66, 0x31, 0x26, 0x2b, 0xd6, 0xad, 0x3a, 0xeb, 0x04, 0x94, 0x9e, 0xf5, 0x01, 0x09, 0x2c, 0x4b,
	0x0b, 0x15, 0x29, 0xa6, 0x4d, 0x0c, 0x40, 0xdd, 0x9b, 0xec, 0x4e, 0xa3, 0xe6, 0x54, 0xa8, 0x13,
	0x94, 0x9b, 0xc3, 0xb7, 0xe8, 0x8c, 0x25, 0xbc, 0xcc, 0xa0, 0xc8, 0xb5, 0xbb, 0x13, 0x28, 0x7c,
	0x0e, 0xb2, 0xe0, 0x7d, 0x32, 0x63, 0x41, 0x85, 0x64, 0x3d, 0x26, 0x59, 0x1e, 0x33, 0x5b, 0xd7,
	0xac, 0xc5, 0x63, 0x2f, 0x0f, 0x8e, 0xc8, 0x5a, 0xf3, 0x5b, 0xcd, 0xae, 0xb0, 0x5c, 0xf3, 0x18,
	0x37, 0x8e, 0x27, 0xb6, 0xa8, 0xad, 0xd4, 0x3f, 0x7a, 0xbf, 0x01, 0xea, 0x24, 0xe6, 0x64, 0xfc,
	0x9a, 0x42, 0x8b, 0x58, 0xa4, 0x50, 0xc0, 0xda, 0xdd, 0x29, 0xb7, 0x22, 0x4a, 0x83, 0xcf, 0xc8,
	0x22, 0x8d, 0x75, 0x49, 0x53, 0xec, 0xa2, 0xd2, 0x64, 0x70, 0x59, 0x28, 0x2d, 0x19, 0xcd, 0xa0,
	0x56, 0x41, 0xe5, 0x30, 0x80, 0x43, 0x93, 0x18, 0x54, 0xb3, 0x97, 0x56, 0x1b, 0x7c, 0x45, 0x96,
	0x87, 0xa8, 0x89, 0xb8, 0xcc, 0x2d, 0x19, 0x8b, 0x55, 0xd8, 0x24, 0x1f, 0x7a, 0xbd, 0x69, 0x18,
	0x54, 0x6b, 0xca, 0xa1, 0xf8, 0x8f, 0x5a, 0x1d, 0xeb, 0xd6, 0x52, 0x05, 0x1a, 0xf2, 0xe0, 0x88,
	0xac, 0x8d, 0x34, 0x51, 0xf3, 0x02, 0x4b, 0xd8, 0xca, 0xb0, 0x91, 0x9a, 0x27, 0x1b, 0x64, 0xa2,
	0x10, 0x22, 0x8d, 0x68, 0x92, 0x48, 0xa6, 0xb0, 0x70, 0xb5, 0xbb, 0xe3, 0x46, 0xb6, 0x8f, 0x22,
	0x93, 0x67, 0x31, 0x97, 0x71, 0xc9, 0xb5, 0x39, 0x81, 0x69, 0xcc, 0x33, 0x2b, 0xe9, 0x24, 0xa6,
	0x88, 0xc6, 0x22, 0xcf, 0x59, 0x0c, 0x67, 0x24, 0x59, 0xcc, 0x78, 0x9f, 0x45, 0xaa, 0x60, 0x2c,
	0x09, 0x67, 0x70, 0x13, 0x2b, 0x7d, 0x17, 0xd5, 0x27, 0x46, 0x1b, 0x3c, 0x22, 0xab, 0x35, 0xa6,
	0x96, 0x34, 0x57, 0x19, 0xc7, 0x06, 0x8d, 0xf4, 0x00, 0xe8, 0xcb, 0x15, 0xe8, 0xb4, 0x86, 0x41,
	0x1b, 0xbb, 0x64, 0x21, 0x61, 0x4a, 0xf3, 0xdc, 0xe6, 0x96, 0xf6, 0xa1, 0x32, 0x8b, 0x91, 0x5e,
	0xd3, 0x9e, 0x68, 0x17, 0x22, 0x5f, 0x90, 0xa5, 0x42, 0xf2, 0x8c, 0xca, 0xeb, 0x28, 0xc9, 0x95,
	0x4b, 0x12, 0xb7, 0x07, 0x73, 0xc0, 0xbc, 0x6b, 0x11, 0x87, 0xb9, 0xc2, 0x3c, 0x71, 0xfb, 0x01,
	0xb5, 0x3f, 0x16, 0x79, 0x72, 0x03, 0x7d, 0x1e, 0xe8, 0x8b, 0x1e, 0x33, 0xca, 0x40, 0x4f, 0xc8,
	0xcc, 0xb4, 0xc6, 0x24, 0x8a, 0x69, 0x9a, 0xba, 0xa9, 0xca, 0x7a, 0xbe, 0x80, 0x06, 0x3c, 0xe6,
	0x00, 0x21, 0x95, 0xfb, 0x6f, 0x93, 0x29, 0x68, 0x3c, 0x3d, 0x1a, 0xdb, 0x79, 0xef, 0x2e, 0x50,
	0x26, 0xbd, 0x14, 0x06, 0x9f, 0x06, 0x0c, 0xaa, 0x4d, 0x38, 0x00, 0x83, 0x12, 0xf3, 0x35, 0x59,
	0x1e, 0x31, 0xba, 0xf8, 0x29, 0x64, 0x11, 0x5b, 0x19, 0x1f, 0x9c, 0x5c, 0xfc, 0x3c, 0xb2, 0x4d,
	0x66, 0x79, 0x7e, 0x6e, 0xbe, 0xcc, 0xf0, 0xcd, 0x7f, 0x66, 0x22, 0x0b, 0x97, 0x70, 0x72, 0xb3,
	0xaa, 0x7d, 0xd0, 0x98, 0x99, 0xcc, 0x94, 0x19, 0x36, 0x0c, 0x5f, 0xc6, 0x79, 0x8c, 0x0d, 0xa2,
	0x57, 0x09, 0xe1, 0x45, 0x94, 0x33, 0x9d, 0x51, 0x75, 0x11, 0xae, 0x60, 0xf4, 0xf1, 0xe2, 0x05,
	0x0a, 0x4c, 0x0c, 0xb9, 0xd1, 0xeb, 0x52, 0xc8, 0x0b, 0xe3, 0x79, 0xaf, 0xcc, 0x21, 0x58, 0x68,
	0xca, 0xf5, 0x75, 0xb8, 0x0a, 0x2d, 0x69, 0xd9, 0x8e, 0x5e, 0x16, 0xf3, 0xb8, 0x0e, 0x09, 0x3a,
	0x64, 0x23, 0xa3, 0x57, 0x68, 0x24, 0x65, 0xb4, 0x0f, 0xad, 0x90, 0xa5, 0xf4, 0xba, 0x9e, 0x4c,
	0xf7, 0x60, 0x1b, 0xee, 0x65, 0xf4, 0xaa, 0x53, 0xc3, 0x1d, 0x1a, 0x58, 0x2d, 0x9d, 0x8e, 0xc8,
	0xda, 0x0d, 0xa6, 0x7c, 0x6a, 0xaf, 0x61, 0x56, 0x8e, 0x32, 0xe4, 0x93, 0xfb, 0x21, 0x59, 0x30,
	0x66, 0x46, 0x14, 0x86, 0x75, 0x9c, 0xa0, 0x33, 0x7a, 0x35, 0x54, 0x11, 0x3e, 0x21, 0x61, 0x93,
	0x54, 0xf3, 0x7e, 0x03, 0x68, 0xf3, 0x35, 0x5a, 0xcd, 0x69, 0x43, 0xe4, 0xf9, 0x68, 0xe2, 0xa6,
	0x25, 0xf2, 0x7c, 0x04, 0xb1, 0x43, 0x36, 0x6f, 0x22, 0x46, 0xa9, 0xb8, 0x8c, 0x0a, 0x71, 0xc9,
	0x64, 0x78, 0x1f, 0x4c, 0xac, 0x8e, 0x34, 0xf1, 0x4c, 0x5c, 0x1e, 0x1b, 0x50, 0x70, 0x44, 0xd6,
	0x9b, 0xa6, 0xdc, 0x17, 0xd7, 0x0c, 0x3d, 0xc0, 0x72, 0x50, 0x33, 0xe4, 0xbe, 0xdd, 0x9b, 0x39,
	0x24, 0x6b, 0x2e, 0xb1, 0x73, 0xa6, 0xa3, 0x33, 0x2e, 0x86, 0xd2, 0xf3, 0x6d, 0x08, 0xa1, 0x65,
	0x0b, 0x7b, 0xc1, 0xf4, 0x23, 0x2e, 0x06, 0x12, 0xf4, 0x5b, 0xb2, 0x51, 0x65, 0xf8, 0x4d, 0x76,
	0xfe, 0x1f, 0xec, 0xac, 0x7a, 0xe0, 0x48, 0x4b, 0x3b, 0x64, 0xbe, 0xa0, 0xd2, 0x4f, 0x8a, 0x55,
	0xc2, 0xbe, 0x83, 0xb7, 0x09, 0x54, 0x76, 0x1a, 0x69, 0xbb, 0x4c, 0xda, 0x92, 0x65, 0x42, 0x33,
	0x53, 0x0b, 0xb6, 0xf0, 0x22, 0x87, 0x82, 0x4e, 0x12, 0xcc, 0x91, 0x5b, 0x52, 0x94, 0x9a, 0x85,
	0xef, 0x82, 0x02, 0x7f, 0x98, 0x96, 0xe7, 0xae, 0x36, 0x66, 0x18, 0x12, 0xa5, 0x0e, 0xdf, 0x83,
	0xcd, 0x9a, 0xb2, 0xe2, 0x53, 0x94, 0x9a, 0xdc, 0x53, 0x5a, 0xf2, 0x58, 0x47, 0xb2, 0xe8, 0x45,
	0x85, 0x99, 0xda, 0xb4, 0x0a, 0xdf, 0xc7, 0x86, 0x8c, 0x9a, 0x6e, 0xd1, 0x3b, 0x46, 0xf9, 0xe0,
	0x5d, 0xa8, 0xba, 0x3c, 0x7d, 0x30, 0x74, 0x17, 0xf2, 0xf7, 0xa7, 0x0e, 0xd9, 0xf0, 0x47, 0x57,
	0x50, 0x49, 0x33, 0x66, 0xea, 0xc6, 0xcf, 0x2c, 0x89, 0x7e, 0x12, 0x2a, 0x2a, 0x44, 0xca, 0xe3,
	0xeb, 0xf0, 0x37, 0xc0, 0xbf, 0xe7, 0x80, 0xc7, 0x75, 0xdc, 0x0f, 0x42, 0x1d, 0x03, 0x2a, 0x78,
	0x4e, 0xee, 0xd7, 0x02, 0xea, 0x46, 0x63, 0xdb, 0x60, 0x6c, 0xbd, 0x82, 0xde, 0x60, 0x6e, 0x9b,
	0xcc, 0x7a, 0xcf, 0x6a, 0xf4, 0xdf, 0x62, 0x9d, 0x72, 0xaa, 0x0a, 0xbf, 0x43, 0xe6, 0x6b, 0xcb,
	0xd7, 0x18, 0x1f, 0xe2, 0xd7, 0x57, 0xca, 0x8a, 0xf3, 0x39, 0x59, 0xf4, 0x07, 0xc1, 0x64, 0xe6,
	0xda, 0x52, 0x4c, 0x4b, 0xc5, 0xc2, 0x8f, 0xb0, 0xaf, 0xb8, 0x23, 0xa9, 0xf4, 0x07, 0x46, 0xbd,
	0xf9, 0xcf, 0x37, 0xc8, 0x32, 0x8e, 0x9f, 0x99, 0x38, 0xe3, 0xa6, 0x32, 0x35, 0x6e, 0xf9, 0xa6,
	0x55, 0x67, 0x45, 0x5c, 0x0d, 0x35, 0x38, 0x6c, 0x8f, 0x67, 0x45, 0xec, 0x27, 0x9a, 0x1d, 0x32,
	0xef, 0xb9, 0x30, 0x9d, 0xba, 0x60, 0xc5, 0xd1, 0x74, 0xd6, 0x29, 0x3b, 0x45, 0x7f, 0xd7, 0x85,
	0xe8, 0x3e, 0x59, 0xf5, 0x9c, 0x84, 0xf5, 0x68, 0x99, 0x6a, 0xe4, 0x9e, 0x53, 0xcd, 0x2e, 0xe9,
	0xb5, 0x1d, 0x51, 0x97, 0x1c, 0xe8, 0x10, 0x31, 0xc6, 0xc4, 0x13, 0x44, 0x98, 0x9d, 0xad, 0x4c,
	0xf8, 0x86, 0x68, 0x27, 0xd4, 0x19, 0x4f, 0x74, 0x7d, 0xd0, 0x8c, 0xe6, 0x15, 0xfe, 0x55, 0x5c,
	0x38, 0x02, 0x0e, 0xa7, 0x81, 0x27, 0xbc, 0x8a, 0x0b, 0xcb, 0x18, 0xfa, 0x30, 0xd7, 0x10, 0x6e,
	0x0f, 0x7f, 0x98, 0x6b, 0x0d, 0x6b, 0x64, 0x3c, 0x11, 0x19, 0xe5, 0x39, 0x66, 0x1c, 0x8e, 0xa7,
	0x04, 0x45, 0x90, 0x68, 0x0f, 0xc8, 0x54, 0x59, 0xa4, 0x3c, 0xbf, 0x88, 0xce, 0x25, 0x8b, 0x2e,
	0xd8, 0x35, 0x4c, 0xa6, 0xed, 0xee, 0x04, 0x4a, 0x9f, 0x48, 0xf6, 0x94, 0x5d, 0x07, 0x5b, 0x64,
	0xda, 0x9c, 0x74, 0x03, 0x87, 0x63, 0xe8, 0x94, 0x93, 0x5b, 0xe4, 0x2a, 0x21, 0x29, 0xa3, 0x8a,
	0x55, 0x97, 0xe6, 0x76, 0xb7, 0x0d, 0x12, 0x93, 0x7e, 0x9b, 0xff, 0xb8, 0x43, 0xee, 0xde, 0xf0,
	0x82, 0x63, 0xce, 0xd6, 0xc7, 0x8d, 0x69, 0xd4, 0x3b, 0x38, 0x86, 0xb9, 0x50, 0x31, 0x6d, 0xfa,
	0x01, 0x99, 0x2a, 0x8a, 0x42, 0xb0, 0x48, 0x95, 0x67, 0x08, 0x7a, 0x88, 0xde, 0x82, 0xf4, 0xa4,
	0x3c, 0x03, 0xd4, 0xf0, 0x68, 0xb0, 0x3b, 0x6a, 0x34, 0x58, 0x24, 0x63, 0x7d, 0xd9, 0x43, 0xc0,
	0xc7, 0x00, 0x78, 0xab, 0x2f, 0x7b, 0xee, 0xa9, 0xa8, 0x36, 0xee, 0xed, 0x0d, 0x8e, 0x7b, 0x8d,
	0xea, 0xf4, 0xc9, 0x40, 0x75, 0x5a, 0x23, 0xe3, 0x69, 0xae, 0x7c, 0xd4, 0x7d, 0x8a, 0x5b, 0x9e,
	0xe6, 0xca, 0x05, 0x9b, 0x01, 0xd0, 0xd8, 0x03, 0x3e, 0xb3, 0x00, 0x1a, 0x3b, 0xc0, 0x2f, 0xb8,
	0x03, 0x7c, 0xfe, 0x0b, 0xee, 0x00, 0x95, 0x19, 0x57, 0xb5, 0x87, 0xcc, 0x7c, 0x51, 0x37, 0x63,
	0xab, 0xf6, 0xa0, 0x19, 0x53, 0x2e, 0x5d, 0xd5, 0x2b, 0xbc, 0xd7, 0x5f, 0xe2, 0xa8, 0xe2, 0x9e,
	0xcf, 0x0a, 0xe7, 0x3b, 0x3c, 0x5d, 0x38, 0x74, 0x7f, 0xcf, 0xe3, 0xbf, 0xc2, 0xb0, 0xf6, 0xf8,
	0xfe, 0x9e, 0x63, 0x6c, 0x93, 0xd9, 0x06, 0xc3, 0x5c, 0x92, 0xf8, 0x55, 0xf8, 0x35, 0x26, 0x4e,
	0x8d, 0x70, 0x0c, 0x0a, 0x28, 0x49, 0x2c, 0x65, 0x26, 0x33, 0x93, 0x06, 0xe3, 0x1b, 0x5b, 0x92,
	0x9c, 0xb2, 0xc6, 0x79, 0x8f, 0xcc, 0x00, 0xb2, 0x0a, 0x0b, 0x9e, 0x84, 0xbf, 0x83, 0x4b, 0xb0,
	0xb9, 0xc1, 0xee, 0xf9, 0xe6, 0x83, 0xe7, 0x97, 0xd5, 0x8e, 0x67, 0x1f, 0x8f, 0x27, 0xab, 0x8e,
	0x67, 0xf4, 0x5b, 0xda, 0xa3, 0x1b, 0xde, 0xd2, 0x16, 0xc9, 0x58, 0x4e, 0x4d, 0xd9, 0x94, 0x3a,
	0x3c, 0xc0, 0x28, 0xcb, 0xa9, 0x3a, 0x16, 0x52, 0x07, 0x4b, 0x64, 0xac, 0x54, 0x4c, 0x42, 0x00,
	0x1e, 0x62, 0x14, 0xb9, 0xdf, 0xc1, 0x3d, 0x42, 0xf0, 0xf0, 0x41, 0x7b, 0x84, 0x4e, 0x54, 0x92,
	0xe0, 0x01, 0x99, 0xf4, 0xb3, 0x31, 0x40, 0x1e, 0x63, 0x88, 0x37, 0x84, 0xe6, 0x34, 0xb8, 0xf2,
	0x5e, 0xfa, 0xf3, 0x0f, 0x9f, 0x40, 0xd9, 0x0c, 0xb8, 0xb2, 0x7e, 0xfa, 0x43, 0x87, 0x9d, 0x6a,
	0x32, 0x84, 0x0c, 0xbf, 0x05, 0xf8, 0x9d, 0x06, 0x5c, 0x48, 0x73, 0xfb, 0x75, 0x40, 0x7c, 0xda,
	0xec, 0x60, 0x32, 0x5a, 0x21, 0xbe, 0x69, 0xee, 0x90, 0x79, 0x07, 0x8a, 0x25, 0xc3, 0xc8, 0x83,
	0xda, 0xf0, 0x1d, 0x1e, 0x97, 0x55, 0x1e, 0x58, 0x1d, 0x3c, 0x5b, 0x3c, 0x24, 0x0b, 0x3c, 0x49,
	0x99, 0x7d, 0x65, 0x8d, 0x5f, 0xd1, 0xfc, 0xdc, 0x16, 0x94, 0xa7, 0x48, 0x32, 0x5a, 0x30, 0x7f,
	0x00, 0x3a, 0x20, 0x7d, 0x4c, 0xee, 0x6a, 0xa1, 0x69, 0x5a, 0x3b, 0x94, 0xd4, 0xb2, 0x9e, 0x41,
	0x6f, 0x9f, 0x03, 0xb5, 0x3f, 0x99, 0x14, 0x69, 0xd8, 0xdf, 0xcd, 0x08, 0x3e, 0x50, 0x33, 0x9e,
	0xfb, 0xfe, 0xce, 0x94, 0x6a, 0x4e, 0x27, 0x7f, 0x22, 0xa4, 0x6a, 0xfb, 0xe1, 0x8b, 0xf5, 0xd6,
	0xd6, 0xf8, 0xce, 0x1f, 0x5e, 0xff, 0xd3, 0x54, 0xf5, 0x2a, 0xd6, 0xad, 0xad, 0x17, 0xfc, 0xad,
	0x45, 0xd6, 0xfc, 0x96, 0xe2, 0xde, 0x88, 0x5e, 0xd4, 0x78, 0x3d, 0x09, 0xbf, 0x87, 0xe7, 0xb2,
	0xe8, 0x57, 0x7a, 0x2e, 0x73, 0x8f, 0x5f, 0xdd, 0x15, 0x77, 0x7a, 0xe0, 0xc6, 0xf7, 0xbd, 0xfd,
	0xba, 0x13, 0xc1, 0x9f, 0x5b, 0xe4, 0xae, 0x09, 0x68, 0xd3, 0xae, 0x7b, 0x3c, 0x65, 0xf5, 0x17,
	0xa8, 0x63, 0xd8, 0xb4, 0x1f, 0x7f, 0x85, 0x4d, 0xb3, 0xcf, 0x56, 0xdd, 0x79, 0xb3, 0xf4, 0x31,
	0xae, 0x5c, 0x7b, 0x31, 0x7b, 0x9f, 0xcc, 0x14, 0x2c, 0x4f, 0xcc, 0x30, 0x67, 0xae, 0x9d, 0x67,
	0x34, 0xbe, 0x50, 0xe1, 0x0f, 0xeb, 0xad, 0xad, 0x37, 0xbb, 0xd3, 0x56, 0x71, 0xe0, 0xe4, 0xc1,
	0x3a, 0x99, 0xa0, 0xbd, 0xa8, 0xc4, 0xa7, 0xfb, 0x52, 0x85, 0x5d, 0x08, 0x24, 0x42, 0x7b, 0x2f,
	0xe1, 0xc5, 0xbe, 0x54, 0xcd, 0xea, 0xd8, 0xdf, 0xb5, 0x89, 0x70, 0x32, 0x50, 0x1d, 0xfb, 0xbb,
	0x98, 0x0c, 0x4d, 0xf4, 0x9e, 0x45, 0x9f, 0x0e, 0xa2, 0xf7, 0x10, 0xfd, 0xd7, 0x56, 0x6d, 0xa6,
	0xa8, 0xed, 0xdd, 0x4b, 0xd8, 0xbb, 0xf3, 0xd7, 0xbf, 0x77, 0x23, 0x67, 0xae, 0x6a, 0x16, 0xa9,
	0x76, 0xf1, 0xec, 0x36, 0x4c, 0x60, 0x0f, 0xff, 0x1b, 0x00, 0x00, 0xff, 0xff, 0x48, 0xd8, 0xb0,
	0x66, 0xfc, 0x19, 0x00, 0x00,
}
