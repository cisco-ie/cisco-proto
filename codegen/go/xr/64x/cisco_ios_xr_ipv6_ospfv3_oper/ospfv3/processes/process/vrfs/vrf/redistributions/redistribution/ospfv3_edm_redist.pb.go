/*
Copyright 2019 Cisco Systems

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: ospfv3_edm_redist.proto

package cisco_ios_xr_ipv6_ospfv3_oper_ospfv3_processes_process_vrfs_vrf_redistributions_redistribution

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Ospfv3EdmRedist_KEYS struct {
	ProcessName          string   `protobuf:"bytes,1,opt,name=process_name,json=processName,proto3" json:"process_name,omitempty"`
	VrfName              string   `protobuf:"bytes,2,opt,name=vrf_name,json=vrfName,proto3" json:"vrf_name,omitempty"`
	ProtocolName         string   `protobuf:"bytes,3,opt,name=protocol_name,json=protocolName,proto3" json:"protocol_name,omitempty"`
	ProcessName_1        string   `protobuf:"bytes,4,opt,name=process_name_1,json=processName1,proto3" json:"process_name_1,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Ospfv3EdmRedist_KEYS) Reset()         { *m = Ospfv3EdmRedist_KEYS{} }
func (m *Ospfv3EdmRedist_KEYS) String() string { return proto.CompactTextString(m) }
func (*Ospfv3EdmRedist_KEYS) ProtoMessage()    {}
func (*Ospfv3EdmRedist_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_68c50ae606891583, []int{0}
}

func (m *Ospfv3EdmRedist_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Ospfv3EdmRedist_KEYS.Unmarshal(m, b)
}
func (m *Ospfv3EdmRedist_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Ospfv3EdmRedist_KEYS.Marshal(b, m, deterministic)
}
func (m *Ospfv3EdmRedist_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Ospfv3EdmRedist_KEYS.Merge(m, src)
}
func (m *Ospfv3EdmRedist_KEYS) XXX_Size() int {
	return xxx_messageInfo_Ospfv3EdmRedist_KEYS.Size(m)
}
func (m *Ospfv3EdmRedist_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_Ospfv3EdmRedist_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_Ospfv3EdmRedist_KEYS proto.InternalMessageInfo

func (m *Ospfv3EdmRedist_KEYS) GetProcessName() string {
	if m != nil {
		return m.ProcessName
	}
	return ""
}

func (m *Ospfv3EdmRedist_KEYS) GetVrfName() string {
	if m != nil {
		return m.VrfName
	}
	return ""
}

func (m *Ospfv3EdmRedist_KEYS) GetProtocolName() string {
	if m != nil {
		return m.ProtocolName
	}
	return ""
}

func (m *Ospfv3EdmRedist_KEYS) GetProcessName_1() string {
	if m != nil {
		return m.ProcessName_1
	}
	return ""
}

type Ospfv3EdmRedist struct {
	ProtocolNameXr       string   `protobuf:"bytes,50,opt,name=protocol_name_xr,json=protocolNameXr,proto3" json:"protocol_name_xr,omitempty"`
	ProcessId            string   `protobuf:"bytes,51,opt,name=process_id,json=processId,proto3" json:"process_id,omitempty"`
	RedMetricFlag        bool     `protobuf:"varint,52,opt,name=red_metric_flag,json=redMetricFlag,proto3" json:"red_metric_flag,omitempty"`
	RedMetric            uint32   `protobuf:"varint,53,opt,name=red_metric,json=redMetric,proto3" json:"red_metric,omitempty"`
	RedMtypeFlag         bool     `protobuf:"varint,54,opt,name=red_mtype_flag,json=redMtypeFlag,proto3" json:"red_mtype_flag,omitempty"`
	RedMetricType        uint32   `protobuf:"varint,55,opt,name=red_metric_type,json=redMetricType,proto3" json:"red_metric_type,omitempty"`
	RedTag               uint32   `protobuf:"varint,56,opt,name=red_tag,json=redTag,proto3" json:"red_tag,omitempty"`
	PolicyName           string   `protobuf:"bytes,57,opt,name=policy_name,json=policyName,proto3" json:"policy_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Ospfv3EdmRedist) Reset()         { *m = Ospfv3EdmRedist{} }
func (m *Ospfv3EdmRedist) String() string { return proto.CompactTextString(m) }
func (*Ospfv3EdmRedist) ProtoMessage()    {}
func (*Ospfv3EdmRedist) Descriptor() ([]byte, []int) {
	return fileDescriptor_68c50ae606891583, []int{1}
}

func (m *Ospfv3EdmRedist) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Ospfv3EdmRedist.Unmarshal(m, b)
}
func (m *Ospfv3EdmRedist) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Ospfv3EdmRedist.Marshal(b, m, deterministic)
}
func (m *Ospfv3EdmRedist) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Ospfv3EdmRedist.Merge(m, src)
}
func (m *Ospfv3EdmRedist) XXX_Size() int {
	return xxx_messageInfo_Ospfv3EdmRedist.Size(m)
}
func (m *Ospfv3EdmRedist) XXX_DiscardUnknown() {
	xxx_messageInfo_Ospfv3EdmRedist.DiscardUnknown(m)
}

var xxx_messageInfo_Ospfv3EdmRedist proto.InternalMessageInfo

func (m *Ospfv3EdmRedist) GetProtocolNameXr() string {
	if m != nil {
		return m.ProtocolNameXr
	}
	return ""
}

func (m *Ospfv3EdmRedist) GetProcessId() string {
	if m != nil {
		return m.ProcessId
	}
	return ""
}

func (m *Ospfv3EdmRedist) GetRedMetricFlag() bool {
	if m != nil {
		return m.RedMetricFlag
	}
	return false
}

func (m *Ospfv3EdmRedist) GetRedMetric() uint32 {
	if m != nil {
		return m.RedMetric
	}
	return 0
}

func (m *Ospfv3EdmRedist) GetRedMtypeFlag() bool {
	if m != nil {
		return m.RedMtypeFlag
	}
	return false
}

func (m *Ospfv3EdmRedist) GetRedMetricType() uint32 {
	if m != nil {
		return m.RedMetricType
	}
	return 0
}

func (m *Ospfv3EdmRedist) GetRedTag() uint32 {
	if m != nil {
		return m.RedTag
	}
	return 0
}

func (m *Ospfv3EdmRedist) GetPolicyName() string {
	if m != nil {
		return m.PolicyName
	}
	return ""
}

func init() {
	proto.RegisterType((*Ospfv3EdmRedist_KEYS)(nil), "cisco_ios_xr_ipv6_ospfv3_oper.ospfv3.processes.process.vrfs.vrf.redistributions.redistribution.ospfv3_edm_redist_KEYS")
	proto.RegisterType((*Ospfv3EdmRedist)(nil), "cisco_ios_xr_ipv6_ospfv3_oper.ospfv3.processes.process.vrfs.vrf.redistributions.redistribution.ospfv3_edm_redist")
}

func init() { proto.RegisterFile("ospfv3_edm_redist.proto", fileDescriptor_68c50ae606891583) }

var fileDescriptor_68c50ae606891583 = []byte{
	// 349 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x64, 0x90, 0xcb, 0x4e, 0xeb, 0x30,
	0x18, 0x84, 0x95, 0x9e, 0xa3, 0x5e, 0xdc, 0xcb, 0x39, 0x78, 0x41, 0xcd, 0x02, 0x51, 0x0a, 0x42,
	0x59, 0x45, 0x2a, 0x85, 0x02, 0x0f, 0x00, 0x12, 0x42, 0xb0, 0x28, 0x5d, 0xc0, 0x06, 0x2b, 0x4d,
	0x9c, 0xc8, 0x52, 0x52, 0x47, 0xbf, 0x43, 0xd4, 0x3e, 0x0e, 0x6b, 0x5e, 0x12, 0xf9, 0x77, 0xd2,
	0x0b, 0xdd, 0x44, 0xce, 0xcc, 0x97, 0x99, 0x8c, 0x49, 0x5f, 0xe9, 0x2c, 0x2a, 0xc6, 0x5c, 0x84,
	0x29, 0x07, 0x11, 0x4a, 0x9d, 0x7b, 0x19, 0xa8, 0x5c, 0xd1, 0x8f, 0x40, 0xea, 0x40, 0x71, 0xa9,
	0x34, 0x5f, 0x02, 0x97, 0x59, 0x31, 0xe1, 0x25, 0xaa, 0x32, 0x01, 0x9e, 0x3d, 0x1b, 0x36, 0x10,
	0x5a, 0x0b, 0x5d, 0x9d, 0xbc, 0x02, 0x22, 0x7c, 0x78, 0x36, 0x0d, 0xe4, 0xfc, 0x33, 0x97, 0x6a,
	0xa1, 0x7f, 0xbd, 0x0f, 0xbf, 0x1c, 0x72, 0xb8, 0xd7, 0xcd, 0x9f, 0xee, 0xdf, 0x5f, 0xe9, 0x29,
	0xe9, 0x94, 0x69, 0x7c, 0xe1, 0xa7, 0x82, 0x39, 0x03, 0xc7, 0x6d, 0x4d, 0xdb, 0xa5, 0xf6, 0xe2,
	0xa7, 0x82, 0x1e, 0x91, 0x66, 0x01, 0x91, 0xb5, 0x6b, 0x68, 0x37, 0x0a, 0x88, 0xd0, 0x3a, 0x23,
	0x5d, 0x5c, 0x10, 0xa8, 0xc4, 0xfa, 0x7f, 0xd0, 0xef, 0x54, 0x22, 0x42, 0xe7, 0xa4, 0xb7, 0x5d,
	0xc1, 0x47, 0xec, 0xef, 0x9a, 0xaa, 0x4a, 0x46, 0xc3, 0xef, 0x1a, 0x39, 0xd8, 0xfb, 0x47, 0xea,
	0x92, 0xff, 0x3b, 0x05, 0x7c, 0x09, 0xec, 0x12, 0xbf, 0xee, 0x6d, 0x77, 0xbc, 0x01, 0x3d, 0x26,
	0xa4, 0x6a, 0x91, 0x21, 0x1b, 0x23, 0xd3, 0x2a, 0x95, 0xc7, 0x90, 0x5e, 0x90, 0x7f, 0x20, 0x42,
	0x9e, 0x8a, 0x1c, 0x64, 0xc0, 0xa3, 0xc4, 0x8f, 0xd9, 0xd5, 0xc0, 0x71, 0x9b, 0xd3, 0x2e, 0x88,
	0xf0, 0x19, 0xd5, 0x87, 0xc4, 0x8f, 0x4d, 0xcc, 0x86, 0x63, 0xd7, 0x03, 0xc7, 0xed, 0x4e, 0x5b,
	0x6b, 0xc4, 0x6c, 0x41, 0x3b, 0x5f, 0x65, 0xc2, 0xa6, 0x4c, 0x30, 0xa5, 0x63, 0x10, 0x23, 0x62,
	0xc8, 0x6e, 0x99, 0x91, 0xd9, 0x0d, 0x26, 0x6d, 0xca, 0x66, 0xab, 0x4c, 0xd0, 0x3e, 0x69, 0x18,
	0x2e, 0xf7, 0x63, 0x76, 0x8b, 0x7e, 0x1d, 0x44, 0x38, 0xf3, 0x63, 0x7a, 0x42, 0xda, 0x99, 0x4a,
	0x64, 0xb0, 0xb2, 0xb7, 0x7a, 0x87, 0x6b, 0x88, 0x95, 0xcc, 0xde, 0x79, 0x1d, 0xd7, 0x8f, 0x7f,
	0x02, 0x00, 0x00, 0xff, 0xff, 0xa4, 0x78, 0xa6, 0x57, 0x53, 0x02, 0x00, 0x00,
}
