/*
Copyright 2019 Cisco Systems

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: ospfv3_edm_virtual_links.proto

package cisco_ios_xr_ipv6_ospfv3_oper_ospfv3_processes_process_vrfs_vrf_virtual_link

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Ospfv3EdmVirtualLinks_KEYS struct {
	ProcessName          string   `protobuf:"bytes,1,opt,name=process_name,json=processName,proto3" json:"process_name,omitempty"`
	VrfName              string   `protobuf:"bytes,2,opt,name=vrf_name,json=vrfName,proto3" json:"vrf_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Ospfv3EdmVirtualLinks_KEYS) Reset()         { *m = Ospfv3EdmVirtualLinks_KEYS{} }
func (m *Ospfv3EdmVirtualLinks_KEYS) String() string { return proto.CompactTextString(m) }
func (*Ospfv3EdmVirtualLinks_KEYS) ProtoMessage()    {}
func (*Ospfv3EdmVirtualLinks_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_8f13c285dbc19a4c, []int{0}
}

func (m *Ospfv3EdmVirtualLinks_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Ospfv3EdmVirtualLinks_KEYS.Unmarshal(m, b)
}
func (m *Ospfv3EdmVirtualLinks_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Ospfv3EdmVirtualLinks_KEYS.Marshal(b, m, deterministic)
}
func (m *Ospfv3EdmVirtualLinks_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Ospfv3EdmVirtualLinks_KEYS.Merge(m, src)
}
func (m *Ospfv3EdmVirtualLinks_KEYS) XXX_Size() int {
	return xxx_messageInfo_Ospfv3EdmVirtualLinks_KEYS.Size(m)
}
func (m *Ospfv3EdmVirtualLinks_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_Ospfv3EdmVirtualLinks_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_Ospfv3EdmVirtualLinks_KEYS proto.InternalMessageInfo

func (m *Ospfv3EdmVirtualLinks_KEYS) GetProcessName() string {
	if m != nil {
		return m.ProcessName
	}
	return ""
}

func (m *Ospfv3EdmVirtualLinks_KEYS) GetVrfName() string {
	if m != nil {
		return m.VrfName
	}
	return ""
}

type Ospfv3EdmNeighborRetrans struct {
	DatabaseDescriptorRetransmissions uint32   `protobuf:"varint,1,opt,name=database_descriptor_retransmissions,json=databaseDescriptorRetransmissions,proto3" json:"database_descriptor_retransmissions,omitempty"`
	AreaFloodIndex                    uint32   `protobuf:"varint,2,opt,name=area_flood_index,json=areaFloodIndex,proto3" json:"area_flood_index,omitempty"`
	AsFloodIndex                      uint32   `protobuf:"varint,3,opt,name=as_flood_index,json=asFloodIndex,proto3" json:"as_flood_index,omitempty"`
	LinkFloodIndex                    uint32   `protobuf:"varint,4,opt,name=link_flood_index,json=linkFloodIndex,proto3" json:"link_flood_index,omitempty"`
	NeighborRetransmissions           uint32   `protobuf:"varint,5,opt,name=neighbor_retransmissions,json=neighborRetransmissions,proto3" json:"neighbor_retransmissions,omitempty"`
	Retransmissions                   uint32   `protobuf:"varint,6,opt,name=retransmissions,proto3" json:"retransmissions,omitempty"`
	AreaFirstFlood                    uint32   `protobuf:"varint,7,opt,name=area_first_flood,json=areaFirstFlood,proto3" json:"area_first_flood,omitempty"`
	AreaFirstFloodIndex               uint32   `protobuf:"varint,8,opt,name=area_first_flood_index,json=areaFirstFloodIndex,proto3" json:"area_first_flood_index,omitempty"`
	AsFirstFlood                      uint32   `protobuf:"varint,9,opt,name=as_first_flood,json=asFirstFlood,proto3" json:"as_first_flood,omitempty"`
	AsFirstFloodIndex                 uint32   `protobuf:"varint,10,opt,name=as_first_flood_index,json=asFirstFloodIndex,proto3" json:"as_first_flood_index,omitempty"`
	LinkFirstFlood                    uint32   `protobuf:"varint,11,opt,name=link_first_flood,json=linkFirstFlood,proto3" json:"link_first_flood,omitempty"`
	LinkFirstFloodIndex               uint32   `protobuf:"varint,12,opt,name=link_first_flood_index,json=linkFirstFloodIndex,proto3" json:"link_first_flood_index,omitempty"`
	AreaNextFlood                     uint32   `protobuf:"varint,13,opt,name=area_next_flood,json=areaNextFlood,proto3" json:"area_next_flood,omitempty"`
	AreaNextFloodIndex                uint32   `protobuf:"varint,14,opt,name=area_next_flood_index,json=areaNextFloodIndex,proto3" json:"area_next_flood_index,omitempty"`
	AsNextFlood                       uint32   `protobuf:"varint,15,opt,name=as_next_flood,json=asNextFlood,proto3" json:"as_next_flood,omitempty"`
	AsNextFloodIndex                  uint32   `protobuf:"varint,16,opt,name=as_next_flood_index,json=asNextFloodIndex,proto3" json:"as_next_flood_index,omitempty"`
	LinkNextFlood                     uint32   `protobuf:"varint,17,opt,name=link_next_flood,json=linkNextFlood,proto3" json:"link_next_flood,omitempty"`
	LinkNextFloodIndex                uint32   `protobuf:"varint,18,opt,name=link_next_flood_index,json=linkNextFloodIndex,proto3" json:"link_next_flood_index,omitempty"`
	LastRetransmissionLength          uint32   `protobuf:"varint,19,opt,name=last_retransmission_length,json=lastRetransmissionLength,proto3" json:"last_retransmission_length,omitempty"`
	MaximumRetransmissionLength       uint32   `protobuf:"varint,20,opt,name=maximum_retransmission_length,json=maximumRetransmissionLength,proto3" json:"maximum_retransmission_length,omitempty"`
	LastRetransmissionTime            uint32   `protobuf:"varint,21,opt,name=last_retransmission_time,json=lastRetransmissionTime,proto3" json:"last_retransmission_time,omitempty"`
	MaximumRetransmissionTime         uint32   `protobuf:"varint,22,opt,name=maximum_retransmission_time,json=maximumRetransmissionTime,proto3" json:"maximum_retransmission_time,omitempty"`
	LsaRetransmissionTimer            uint32   `protobuf:"varint,23,opt,name=lsa_retransmission_timer,json=lsaRetransmissionTimer,proto3" json:"lsa_retransmission_timer,omitempty"`
	XXX_NoUnkeyedLiteral              struct{} `json:"-"`
	XXX_unrecognized                  []byte   `json:"-"`
	XXX_sizecache                     int32    `json:"-"`
}

func (m *Ospfv3EdmNeighborRetrans) Reset()         { *m = Ospfv3EdmNeighborRetrans{} }
func (m *Ospfv3EdmNeighborRetrans) String() string { return proto.CompactTextString(m) }
func (*Ospfv3EdmNeighborRetrans) ProtoMessage()    {}
func (*Ospfv3EdmNeighborRetrans) Descriptor() ([]byte, []int) {
	return fileDescriptor_8f13c285dbc19a4c, []int{1}
}

func (m *Ospfv3EdmNeighborRetrans) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Ospfv3EdmNeighborRetrans.Unmarshal(m, b)
}
func (m *Ospfv3EdmNeighborRetrans) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Ospfv3EdmNeighborRetrans.Marshal(b, m, deterministic)
}
func (m *Ospfv3EdmNeighborRetrans) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Ospfv3EdmNeighborRetrans.Merge(m, src)
}
func (m *Ospfv3EdmNeighborRetrans) XXX_Size() int {
	return xxx_messageInfo_Ospfv3EdmNeighborRetrans.Size(m)
}
func (m *Ospfv3EdmNeighborRetrans) XXX_DiscardUnknown() {
	xxx_messageInfo_Ospfv3EdmNeighborRetrans.DiscardUnknown(m)
}

var xxx_messageInfo_Ospfv3EdmNeighborRetrans proto.InternalMessageInfo

func (m *Ospfv3EdmNeighborRetrans) GetDatabaseDescriptorRetransmissions() uint32 {
	if m != nil {
		return m.DatabaseDescriptorRetransmissions
	}
	return 0
}

func (m *Ospfv3EdmNeighborRetrans) GetAreaFloodIndex() uint32 {
	if m != nil {
		return m.AreaFloodIndex
	}
	return 0
}

func (m *Ospfv3EdmNeighborRetrans) GetAsFloodIndex() uint32 {
	if m != nil {
		return m.AsFloodIndex
	}
	return 0
}

func (m *Ospfv3EdmNeighborRetrans) GetLinkFloodIndex() uint32 {
	if m != nil {
		return m.LinkFloodIndex
	}
	return 0
}

func (m *Ospfv3EdmNeighborRetrans) GetNeighborRetransmissions() uint32 {
	if m != nil {
		return m.NeighborRetransmissions
	}
	return 0
}

func (m *Ospfv3EdmNeighborRetrans) GetRetransmissions() uint32 {
	if m != nil {
		return m.Retransmissions
	}
	return 0
}

func (m *Ospfv3EdmNeighborRetrans) GetAreaFirstFlood() uint32 {
	if m != nil {
		return m.AreaFirstFlood
	}
	return 0
}

func (m *Ospfv3EdmNeighborRetrans) GetAreaFirstFloodIndex() uint32 {
	if m != nil {
		return m.AreaFirstFloodIndex
	}
	return 0
}

func (m *Ospfv3EdmNeighborRetrans) GetAsFirstFlood() uint32 {
	if m != nil {
		return m.AsFirstFlood
	}
	return 0
}

func (m *Ospfv3EdmNeighborRetrans) GetAsFirstFloodIndex() uint32 {
	if m != nil {
		return m.AsFirstFloodIndex
	}
	return 0
}

func (m *Ospfv3EdmNeighborRetrans) GetLinkFirstFlood() uint32 {
	if m != nil {
		return m.LinkFirstFlood
	}
	return 0
}

func (m *Ospfv3EdmNeighborRetrans) GetLinkFirstFloodIndex() uint32 {
	if m != nil {
		return m.LinkFirstFloodIndex
	}
	return 0
}

func (m *Ospfv3EdmNeighborRetrans) GetAreaNextFlood() uint32 {
	if m != nil {
		return m.AreaNextFlood
	}
	return 0
}

func (m *Ospfv3EdmNeighborRetrans) GetAreaNextFloodIndex() uint32 {
	if m != nil {
		return m.AreaNextFloodIndex
	}
	return 0
}

func (m *Ospfv3EdmNeighborRetrans) GetAsNextFlood() uint32 {
	if m != nil {
		return m.AsNextFlood
	}
	return 0
}

func (m *Ospfv3EdmNeighborRetrans) GetAsNextFloodIndex() uint32 {
	if m != nil {
		return m.AsNextFloodIndex
	}
	return 0
}

func (m *Ospfv3EdmNeighborRetrans) GetLinkNextFlood() uint32 {
	if m != nil {
		return m.LinkNextFlood
	}
	return 0
}

func (m *Ospfv3EdmNeighborRetrans) GetLinkNextFloodIndex() uint32 {
	if m != nil {
		return m.LinkNextFloodIndex
	}
	return 0
}

func (m *Ospfv3EdmNeighborRetrans) GetLastRetransmissionLength() uint32 {
	if m != nil {
		return m.LastRetransmissionLength
	}
	return 0
}

func (m *Ospfv3EdmNeighborRetrans) GetMaximumRetransmissionLength() uint32 {
	if m != nil {
		return m.MaximumRetransmissionLength
	}
	return 0
}

func (m *Ospfv3EdmNeighborRetrans) GetLastRetransmissionTime() uint32 {
	if m != nil {
		return m.LastRetransmissionTime
	}
	return 0
}

func (m *Ospfv3EdmNeighborRetrans) GetMaximumRetransmissionTime() uint32 {
	if m != nil {
		return m.MaximumRetransmissionTime
	}
	return 0
}

func (m *Ospfv3EdmNeighborRetrans) GetLsaRetransmissionTimer() uint32 {
	if m != nil {
		return m.LsaRetransmissionTimer
	}
	return 0
}

type Ospfv3EdmVlinkNeighbor struct {
	IsVirtualLinkHelloSuppressed bool                      `protobuf:"varint,1,opt,name=is_virtual_link_hello_suppressed,json=isVirtualLinkHelloSuppressed,proto3" json:"is_virtual_link_hello_suppressed,omitempty"`
	VirtualLinkState             string                    `protobuf:"bytes,2,opt,name=virtual_link_state,json=virtualLinkState,proto3" json:"virtual_link_state,omitempty"`
	VirtualLinkRetransmission    *Ospfv3EdmNeighborRetrans `protobuf:"bytes,3,opt,name=virtual_link_retransmission,json=virtualLinkRetransmission,proto3" json:"virtual_link_retransmission,omitempty"`
	XXX_NoUnkeyedLiteral         struct{}                  `json:"-"`
	XXX_unrecognized             []byte                    `json:"-"`
	XXX_sizecache                int32                     `json:"-"`
}

func (m *Ospfv3EdmVlinkNeighbor) Reset()         { *m = Ospfv3EdmVlinkNeighbor{} }
func (m *Ospfv3EdmVlinkNeighbor) String() string { return proto.CompactTextString(m) }
func (*Ospfv3EdmVlinkNeighbor) ProtoMessage()    {}
func (*Ospfv3EdmVlinkNeighbor) Descriptor() ([]byte, []int) {
	return fileDescriptor_8f13c285dbc19a4c, []int{2}
}

func (m *Ospfv3EdmVlinkNeighbor) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Ospfv3EdmVlinkNeighbor.Unmarshal(m, b)
}
func (m *Ospfv3EdmVlinkNeighbor) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Ospfv3EdmVlinkNeighbor.Marshal(b, m, deterministic)
}
func (m *Ospfv3EdmVlinkNeighbor) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Ospfv3EdmVlinkNeighbor.Merge(m, src)
}
func (m *Ospfv3EdmVlinkNeighbor) XXX_Size() int {
	return xxx_messageInfo_Ospfv3EdmVlinkNeighbor.Size(m)
}
func (m *Ospfv3EdmVlinkNeighbor) XXX_DiscardUnknown() {
	xxx_messageInfo_Ospfv3EdmVlinkNeighbor.DiscardUnknown(m)
}

var xxx_messageInfo_Ospfv3EdmVlinkNeighbor proto.InternalMessageInfo

func (m *Ospfv3EdmVlinkNeighbor) GetIsVirtualLinkHelloSuppressed() bool {
	if m != nil {
		return m.IsVirtualLinkHelloSuppressed
	}
	return false
}

func (m *Ospfv3EdmVlinkNeighbor) GetVirtualLinkState() string {
	if m != nil {
		return m.VirtualLinkState
	}
	return ""
}

func (m *Ospfv3EdmVlinkNeighbor) GetVirtualLinkRetransmission() *Ospfv3EdmNeighborRetrans {
	if m != nil {
		return m.VirtualLinkRetransmission
	}
	return nil
}

type Ospfv3EdmVirtualLinks struct {
	VirtualLinkNeighborId                         string                  `protobuf:"bytes,50,opt,name=virtual_link_neighbor_id,json=virtualLinkNeighborId,proto3" json:"virtual_link_neighbor_id,omitempty"`
	VirtualLinkInterfaceNumber                    uint32                  `protobuf:"varint,51,opt,name=virtual_link_interface_number,json=virtualLinkInterfaceNumber,proto3" json:"virtual_link_interface_number,omitempty"`
	VirtualLinkState                              string                  `protobuf:"bytes,52,opt,name=virtual_link_state,json=virtualLinkState,proto3" json:"virtual_link_state,omitempty"`
	IsVirtualLinkIpSecurityRequired               bool                    `protobuf:"varint,53,opt,name=is_virtual_link_ip_security_required,json=isVirtualLinkIpSecurityRequired,proto3" json:"is_virtual_link_ip_security_required,omitempty"`
	IsVirtualLinkIpSecurityActive                 bool                    `protobuf:"varint,54,opt,name=is_virtual_link_ip_security_active,json=isVirtualLinkIpSecurityActive,proto3" json:"is_virtual_link_ip_security_active,omitempty"`
	VirtualLinkNeighborAddress                    string                  `protobuf:"bytes,55,opt,name=virtual_link_neighbor_address,json=virtualLinkNeighborAddress,proto3" json:"virtual_link_neighbor_address,omitempty"`
	IsVirtualLinkDemandCircuit                    bool                    `protobuf:"varint,56,opt,name=is_virtual_link_demand_circuit,json=isVirtualLinkDemandCircuit,proto3" json:"is_virtual_link_demand_circuit,omitempty"`
	VirtualLinkDcBitlessLsa                       uint32                  `protobuf:"varint,57,opt,name=virtual_link_dc_bitless_lsa,json=virtualLinkDcBitlessLsa,proto3" json:"virtual_link_dc_bitless_lsa,omitempty"`
	TransitAreaId                                 string                  `protobuf:"bytes,58,opt,name=transit_area_id,json=transitAreaId,proto3" json:"transit_area_id,omitempty"`
	InterfaceName                                 string                  `protobuf:"bytes,59,opt,name=interface_name,json=interfaceName,proto3" json:"interface_name,omitempty"`
	VirtualLinkCost                               uint32                  `protobuf:"varint,60,opt,name=virtual_link_cost,json=virtualLinkCost,proto3" json:"virtual_link_cost,omitempty"`
	VirualLinkTransmissionDelay                   uint32                  `protobuf:"varint,61,opt,name=virual_link_transmission_delay,json=virualLinkTransmissionDelay,proto3" json:"virual_link_transmission_delay,omitempty"`
	VirtualLinkHelloInterval                      uint32                  `protobuf:"varint,62,opt,name=virtual_link_hello_interval,json=virtualLinkHelloInterval,proto3" json:"virtual_link_hello_interval,omitempty"`
	VirtualLinkDeadInterval                       uint32                  `protobuf:"varint,63,opt,name=virtual_link_dead_interval,json=virtualLinkDeadInterval,proto3" json:"virtual_link_dead_interval,omitempty"`
	VirtualLinkWaitInterval                       uint32                  `protobuf:"varint,64,opt,name=virtual_link_wait_interval,json=virtualLinkWaitInterval,proto3" json:"virtual_link_wait_interval,omitempty"`
	VirtualLinkRetransmissionInterval             uint32                  `protobuf:"varint,65,opt,name=virtual_link_retransmission_interval,json=virtualLinkRetransmissionInterval,proto3" json:"virtual_link_retransmission_interval,omitempty"`
	VirtualLinkNextHello                          uint32                  `protobuf:"varint,66,opt,name=virtual_link_next_hello,json=virtualLinkNextHello,proto3" json:"virtual_link_next_hello,omitempty"`
	IsVirtualLinkPassive                          bool                    `protobuf:"varint,67,opt,name=is_virtual_link_passive,json=isVirtualLinkPassive,proto3" json:"is_virtual_link_passive,omitempty"`
	IsVirtualLinkAuthenticationEnabled            bool                    `protobuf:"varint,68,opt,name=is_virtual_link_authentication_enabled,json=isVirtualLinkAuthenticationEnabled,proto3" json:"is_virtual_link_authentication_enabled,omitempty"`
	VirtualLinkAuthenticationSpi                  uint32                  `protobuf:"varint,69,opt,name=virtual_link_authentication_spi,json=virtualLinkAuthenticationSpi,proto3" json:"virtual_link_authentication_spi,omitempty"`
	VirtualLinkAuthenticationTransmit             uint32                  `protobuf:"varint,70,opt,name=virtual_link_authentication_transmit,json=virtualLinkAuthenticationTransmit,proto3" json:"virtual_link_authentication_transmit,omitempty"`
	IsVirtualLinkEncryptionEnabled                bool                    `protobuf:"varint,71,opt,name=is_virtual_link_encryption_enabled,json=isVirtualLinkEncryptionEnabled,proto3" json:"is_virtual_link_encryption_enabled,omitempty"`
	VirtualLinkEncryptionSpi                      uint32                  `protobuf:"varint,72,opt,name=virtual_link_encryption_spi,json=virtualLinkEncryptionSpi,proto3" json:"virtual_link_encryption_spi,omitempty"`
	VirtualLinkEncryptionTransmitted              uint32                  `protobuf:"varint,73,opt,name=virtual_link_encryption_transmitted,json=virtualLinkEncryptionTransmitted,proto3" json:"virtual_link_encryption_transmitted,omitempty"`
	VirtualLinkEncryptedAuthenticationTransmitted uint32                  `protobuf:"varint,74,opt,name=virtual_link_encrypted_authentication_transmitted,json=virtualLinkEncryptedAuthenticationTransmitted,proto3" json:"virtual_link_encrypted_authentication_transmitted,omitempty"`
	VirtualLinkNeighbor                           *Ospfv3EdmVlinkNeighbor `protobuf:"bytes,75,opt,name=virtual_link_neighbor,json=virtualLinkNeighbor,proto3" json:"virtual_link_neighbor,omitempty"`
	XXX_NoUnkeyedLiteral                          struct{}                `json:"-"`
	XXX_unrecognized                              []byte                  `json:"-"`
	XXX_sizecache                                 int32                   `json:"-"`
}

func (m *Ospfv3EdmVirtualLinks) Reset()         { *m = Ospfv3EdmVirtualLinks{} }
func (m *Ospfv3EdmVirtualLinks) String() string { return proto.CompactTextString(m) }
func (*Ospfv3EdmVirtualLinks) ProtoMessage()    {}
func (*Ospfv3EdmVirtualLinks) Descriptor() ([]byte, []int) {
	return fileDescriptor_8f13c285dbc19a4c, []int{3}
}

func (m *Ospfv3EdmVirtualLinks) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Ospfv3EdmVirtualLinks.Unmarshal(m, b)
}
func (m *Ospfv3EdmVirtualLinks) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Ospfv3EdmVirtualLinks.Marshal(b, m, deterministic)
}
func (m *Ospfv3EdmVirtualLinks) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Ospfv3EdmVirtualLinks.Merge(m, src)
}
func (m *Ospfv3EdmVirtualLinks) XXX_Size() int {
	return xxx_messageInfo_Ospfv3EdmVirtualLinks.Size(m)
}
func (m *Ospfv3EdmVirtualLinks) XXX_DiscardUnknown() {
	xxx_messageInfo_Ospfv3EdmVirtualLinks.DiscardUnknown(m)
}

var xxx_messageInfo_Ospfv3EdmVirtualLinks proto.InternalMessageInfo

func (m *Ospfv3EdmVirtualLinks) GetVirtualLinkNeighborId() string {
	if m != nil {
		return m.VirtualLinkNeighborId
	}
	return ""
}

func (m *Ospfv3EdmVirtualLinks) GetVirtualLinkInterfaceNumber() uint32 {
	if m != nil {
		return m.VirtualLinkInterfaceNumber
	}
	return 0
}

func (m *Ospfv3EdmVirtualLinks) GetVirtualLinkState() string {
	if m != nil {
		return m.VirtualLinkState
	}
	return ""
}

func (m *Ospfv3EdmVirtualLinks) GetIsVirtualLinkIpSecurityRequired() bool {
	if m != nil {
		return m.IsVirtualLinkIpSecurityRequired
	}
	return false
}

func (m *Ospfv3EdmVirtualLinks) GetIsVirtualLinkIpSecurityActive() bool {
	if m != nil {
		return m.IsVirtualLinkIpSecurityActive
	}
	return false
}

func (m *Ospfv3EdmVirtualLinks) GetVirtualLinkNeighborAddress() string {
	if m != nil {
		return m.VirtualLinkNeighborAddress
	}
	return ""
}

func (m *Ospfv3EdmVirtualLinks) GetIsVirtualLinkDemandCircuit() bool {
	if m != nil {
		return m.IsVirtualLinkDemandCircuit
	}
	return false
}

func (m *Ospfv3EdmVirtualLinks) GetVirtualLinkDcBitlessLsa() uint32 {
	if m != nil {
		return m.VirtualLinkDcBitlessLsa
	}
	return 0
}

func (m *Ospfv3EdmVirtualLinks) GetTransitAreaId() string {
	if m != nil {
		return m.TransitAreaId
	}
	return ""
}

func (m *Ospfv3EdmVirtualLinks) GetInterfaceName() string {
	if m != nil {
		return m.InterfaceName
	}
	return ""
}

func (m *Ospfv3EdmVirtualLinks) GetVirtualLinkCost() uint32 {
	if m != nil {
		return m.VirtualLinkCost
	}
	return 0
}

func (m *Ospfv3EdmVirtualLinks) GetVirualLinkTransmissionDelay() uint32 {
	if m != nil {
		return m.VirualLinkTransmissionDelay
	}
	return 0
}

func (m *Ospfv3EdmVirtualLinks) GetVirtualLinkHelloInterval() uint32 {
	if m != nil {
		return m.VirtualLinkHelloInterval
	}
	return 0
}

func (m *Ospfv3EdmVirtualLinks) GetVirtualLinkDeadInterval() uint32 {
	if m != nil {
		return m.VirtualLinkDeadInterval
	}
	return 0
}

func (m *Ospfv3EdmVirtualLinks) GetVirtualLinkWaitInterval() uint32 {
	if m != nil {
		return m.VirtualLinkWaitInterval
	}
	return 0
}

func (m *Ospfv3EdmVirtualLinks) GetVirtualLinkRetransmissionInterval() uint32 {
	if m != nil {
		return m.VirtualLinkRetransmissionInterval
	}
	return 0
}

func (m *Ospfv3EdmVirtualLinks) GetVirtualLinkNextHello() uint32 {
	if m != nil {
		return m.VirtualLinkNextHello
	}
	return 0
}

func (m *Ospfv3EdmVirtualLinks) GetIsVirtualLinkPassive() bool {
	if m != nil {
		return m.IsVirtualLinkPassive
	}
	return false
}

func (m *Ospfv3EdmVirtualLinks) GetIsVirtualLinkAuthenticationEnabled() bool {
	if m != nil {
		return m.IsVirtualLinkAuthenticationEnabled
	}
	return false
}

func (m *Ospfv3EdmVirtualLinks) GetVirtualLinkAuthenticationSpi() uint32 {
	if m != nil {
		return m.VirtualLinkAuthenticationSpi
	}
	return 0
}

func (m *Ospfv3EdmVirtualLinks) GetVirtualLinkAuthenticationTransmit() uint32 {
	if m != nil {
		return m.VirtualLinkAuthenticationTransmit
	}
	return 0
}

func (m *Ospfv3EdmVirtualLinks) GetIsVirtualLinkEncryptionEnabled() bool {
	if m != nil {
		return m.IsVirtualLinkEncryptionEnabled
	}
	return false
}

func (m *Ospfv3EdmVirtualLinks) GetVirtualLinkEncryptionSpi() uint32 {
	if m != nil {
		return m.VirtualLinkEncryptionSpi
	}
	return 0
}

func (m *Ospfv3EdmVirtualLinks) GetVirtualLinkEncryptionTransmitted() uint32 {
	if m != nil {
		return m.VirtualLinkEncryptionTransmitted
	}
	return 0
}

func (m *Ospfv3EdmVirtualLinks) GetVirtualLinkEncryptedAuthenticationTransmitted() uint32 {
	if m != nil {
		return m.VirtualLinkEncryptedAuthenticationTransmitted
	}
	return 0
}

func (m *Ospfv3EdmVirtualLinks) GetVirtualLinkNeighbor() *Ospfv3EdmVlinkNeighbor {
	if m != nil {
		return m.VirtualLinkNeighbor
	}
	return nil
}

func init() {
	proto.RegisterType((*Ospfv3EdmVirtualLinks_KEYS)(nil), "cisco_ios_xr_ipv6_ospfv3_oper.ospfv3.processes.process.vrfs.vrf.virtual_link.ospfv3_edm_virtual_links_KEYS")
	proto.RegisterType((*Ospfv3EdmNeighborRetrans)(nil), "cisco_ios_xr_ipv6_ospfv3_oper.ospfv3.processes.process.vrfs.vrf.virtual_link.ospfv3_edm_neighbor_retrans")
	proto.RegisterType((*Ospfv3EdmVlinkNeighbor)(nil), "cisco_ios_xr_ipv6_ospfv3_oper.ospfv3.processes.process.vrfs.vrf.virtual_link.ospfv3_edm_vlink_neighbor")
	proto.RegisterType((*Ospfv3EdmVirtualLinks)(nil), "cisco_ios_xr_ipv6_ospfv3_oper.ospfv3.processes.process.vrfs.vrf.virtual_link.ospfv3_edm_virtual_links")
}

func init() { proto.RegisterFile("ospfv3_edm_virtual_links.proto", fileDescriptor_8f13c285dbc19a4c) }

var fileDescriptor_8f13c285dbc19a4c = []byte{
	// 1170 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x97, 0x5b, 0x6f, 0xdb, 0x36,
	0x14, 0xc7, 0x91, 0x6e, 0x6b, 0x13, 0x26, 0xce, 0x85, 0xb9, 0x31, 0x49, 0x93, 0xa6, 0x6e, 0x56,
	0x04, 0xc3, 0xea, 0xa1, 0xcd, 0x7a, 0x5b, 0xd3, 0x6e, 0xce, 0x6d, 0x75, 0x9b, 0x66, 0x83, 0x13,
	0x6c, 0xd8, 0xc3, 0x20, 0xd0, 0x22, 0x9d, 0x10, 0x95, 0x25, 0x8d, 0xa4, 0x35, 0xe7, 0xb3, 0xec,
	0x65, 0xaf, 0xfd, 0x10, 0xfb, 0x6e, 0x03, 0x0f, 0x65, 0x59, 0x94, 0xac, 0x3c, 0x6d, 0x2f, 0x81,
	0x41, 0xfe, 0xfe, 0x7f, 0x9e, 0x73, 0x74, 0x74, 0xa8, 0xa0, 0xad, 0x48, 0xc5, 0xdd, 0x64, 0xcf,
	0xe3, 0xac, 0xe7, 0x25, 0x42, 0xea, 0x3e, 0x0d, 0xbc, 0x40, 0x84, 0x1f, 0x55, 0x23, 0x96, 0x91,
	0x8e, 0xf0, 0xa9, 0x2f, 0x94, 0x1f, 0x79, 0x22, 0x52, 0xde, 0x40, 0x7a, 0x22, 0x4e, 0x9e, 0x79,
	0xa9, 0x22, 0x8a, 0xb9, 0x6c, 0xd8, 0xdf, 0x86, 0xf5, 0xb9, 0x52, 0x5c, 0x0d, 0x7f, 0x35, 0x12,
	0xd9, 0x85, 0x3f, 0x8d, 0xbc, 0x69, 0xfd, 0x77, 0xb4, 0x59, 0x75, 0x9e, 0xf7, 0xfe, 0xf8, 0xb7,
	0x73, 0x7c, 0x1f, 0xcd, 0xa4, 0x0e, 0x5e, 0x48, 0x7b, 0x9c, 0x4c, 0x6c, 0x4f, 0xec, 0x4e, 0xb5,
	0xa7, 0xd3, 0xb5, 0x33, 0xda, 0xe3, 0x78, 0x0d, 0x4d, 0x26, 0xb2, 0x6b, 0xb7, 0x6f, 0xc1, 0xf6,
	0x9d, 0x44, 0x76, 0xcd, 0x56, 0xfd, 0xef, 0x29, 0xb4, 0x91, 0xf3, 0x0f, 0xb9, 0xb8, 0xbc, 0xea,
	0x44, 0xd2, 0x93, 0x5c, 0x4b, 0x1a, 0x2a, 0x7c, 0x86, 0x1e, 0x30, 0xaa, 0x69, 0x87, 0x2a, 0xee,
	0x31, 0xae, 0x7c, 0x29, 0x62, 0x3d, 0xda, 0xee, 0x09, 0xa5, 0x44, 0x14, 0x2a, 0x38, 0xb4, 0xd6,
	0xbe, 0x3f, 0x44, 0x8f, 0x32, 0xb2, 0xed, 0x82, 0x78, 0x17, 0xcd, 0x53, 0xc9, 0xa9, 0xd7, 0x0d,
	0xa2, 0x88, 0x79, 0x22, 0x64, 0x7c, 0x00, 0x21, 0xd5, 0xda, 0xb3, 0x66, 0xfd, 0xc4, 0x2c, 0xb7,
	0xcc, 0x2a, 0xde, 0x41, 0xb3, 0x54, 0x39, 0xdc, 0x67, 0xc0, 0xcd, 0x50, 0x95, 0xa3, 0x76, 0xd1,
	0xbc, 0xa9, 0x85, 0xc3, 0x7d, 0x6e, 0xfd, 0xcc, 0x7a, 0x8e, 0x7c, 0x89, 0x48, 0x31, 0xbb, 0x2c,
	0xfc, 0x2f, 0x40, 0xb1, 0x3a, 0xdc, 0x2f, 0x07, 0x3d, 0x57, 0x54, 0xdc, 0x06, 0x45, 0x71, 0x79,
	0x94, 0x9e, 0x90, 0x4a, 0xdb, 0xa0, 0xc8, 0x9d, 0x5c, 0x7a, 0x66, 0x19, 0x62, 0xc2, 0x7b, 0x68,
	0xa5, 0x48, 0xa6, 0xe1, 0x4f, 0x02, 0xbf, 0xe8, 0xf2, 0x4e, 0x4d, 0x72, 0xe6, 0x53, 0x59, 0x4d,
	0x46, 0xd6, 0xdf, 0xa0, 0x25, 0x97, 0x4a, 0x8d, 0x11, 0xb0, 0x0b, 0x79, 0xb6, 0x50, 0xc4, 0x9c,
	0xf1, 0x74, 0xae, 0x88, 0x4e, 0xd4, 0x45, 0x32, 0x35, 0x9f, 0xb1, 0x51, 0xbb, 0xbc, 0xb5, 0x7f,
	0x88, 0xe6, 0x20, 0xd5, 0x90, 0x0f, 0x86, 0xee, 0x35, 0xa0, 0x6b, 0x66, 0xf9, 0x8c, 0x0f, 0x52,
	0xf3, 0xc7, 0x68, 0xb9, 0xc0, 0xa5, 0xde, 0xb3, 0x40, 0x63, 0x87, 0xb6, 0xd6, 0x75, 0x54, 0xa3,
	0x2a, 0x6f, 0x3c, 0x07, 0xe8, 0x34, 0x55, 0x23, 0xdb, 0x47, 0x68, 0xd1, 0x61, 0x52, 0xd3, 0x79,
	0x20, 0xe7, 0x73, 0x64, 0x16, 0x2d, 0xa4, 0x98, 0x33, 0x5d, 0xb0, 0xd1, 0x9a, 0x65, 0x27, 0xda,
	0x02, 0x97, 0x1a, 0x63, 0x1b, 0xad, 0x43, 0x5b, 0xeb, 0x7d, 0xb4, 0x1e, 0x50, 0xa5, 0x0b, 0xed,
	0xe7, 0x05, 0x3c, 0xbc, 0xd4, 0x57, 0x64, 0x11, 0x74, 0xc4, 0x10, 0x6e, 0x03, 0x9e, 0xc2, 0x3e,
	0x3e, 0x40, 0x9b, 0x3d, 0x3a, 0x10, 0xbd, 0x7e, 0xaf, 0xc2, 0x60, 0x09, 0x0c, 0x36, 0x52, 0x68,
	0xac, 0xc7, 0x0b, 0x44, 0xc6, 0x45, 0xa0, 0x45, 0x8f, 0x93, 0x65, 0x90, 0xaf, 0x94, 0xcf, 0xbf,
	0x10, 0x3d, 0x8e, 0xdf, 0xa0, 0x8d, 0x8a, 0xd3, 0x41, 0xbc, 0x02, 0xe2, 0xb5, 0xb1, 0x67, 0x83,
	0xde, 0x9c, 0xac, 0xe8, 0x38, 0xad, 0x24, 0xab, 0xe9, 0xc9, 0x8a, 0x96, 0x85, 0xb2, 0xfe, 0xcf,
	0x2d, 0xb4, 0x96, 0x1f, 0x81, 0x69, 0xd5, 0xed, 0xab, 0x8a, 0x4f, 0xd0, 0xb6, 0x50, 0xce, 0x5c,
	0xf4, 0xae, 0x78, 0x10, 0x44, 0x9e, 0xea, 0xc7, 0xb1, 0x34, 0x13, 0x96, 0xc1, 0x74, 0x9a, 0x6c,
	0xdf, 0x15, 0xea, 0x17, 0x8b, 0x9d, 0x8a, 0xf0, 0xe3, 0x5b, 0x03, 0x9d, 0x67, 0x0c, 0xfe, 0x1a,
	0x61, 0xc7, 0x44, 0x69, 0xaa, 0x87, 0xd3, 0x72, 0x3e, 0x19, 0xe9, 0xce, 0xcd, 0x3a, 0xfe, 0x34,
	0x81, 0x36, 0x1c, 0xdc, 0xcd, 0x0b, 0x46, 0xd5, 0xf4, 0x13, 0xd1, 0xf8, 0x2f, 0xaf, 0x82, 0xc6,
	0x0d, 0x73, 0xba, 0xbd, 0x96, 0x0b, 0xd1, 0x2d, 0x62, 0xfd, 0xd3, 0x2c, 0x22, 0x55, 0x57, 0x08,
	0x7e, 0x8e, 0x88, 0x93, 0x47, 0x66, 0x2c, 0x18, 0x79, 0x02, 0xc9, 0x2f, 0xe7, 0x9c, 0xcf, 0xd2,
	0xdd, 0x16, 0xc3, 0x4d, 0xb4, 0xe9, 0x08, 0x45, 0xa8, 0xb9, 0xec, 0x52, 0x9f, 0x7b, 0x61, 0xbf,
	0xd7, 0xe1, 0x92, 0xec, 0xc1, 0x43, 0x5d, 0xcf, 0xa9, 0x5b, 0x43, 0xe4, 0x0c, 0x88, 0x8a, 0x92,
	0x7f, 0x5b, 0x51, 0xf2, 0x0f, 0x68, 0xa7, 0xf8, 0xa0, 0x45, 0xec, 0x29, 0xee, 0xf7, 0xa5, 0xd0,
	0xd7, 0x9e, 0xe4, 0x7f, 0xf4, 0x85, 0xe4, 0x8c, 0x3c, 0x85, 0x87, 0x7d, 0xcf, 0x79, 0xd8, 0xad,
	0xf8, 0x3c, 0xe5, 0xda, 0x29, 0x86, 0x5b, 0xa8, 0x7e, 0x93, 0x1d, 0xf5, 0xb5, 0x48, 0x38, 0x79,
	0x06, 0x66, 0x9b, 0x15, 0x66, 0x4d, 0x80, 0x4a, 0xa5, 0xc8, 0x6a, 0x48, 0x19, 0x33, 0xdd, 0x45,
	0x9e, 0x43, 0x4a, 0xeb, 0x63, 0x0a, 0xd9, 0xb4, 0x04, 0x3e, 0x40, 0x5b, 0xc5, 0x68, 0x18, 0xef,
	0xd1, 0x90, 0x79, 0xbe, 0x90, 0x7e, 0x5f, 0x68, 0xf2, 0x02, 0x22, 0x59, 0x77, 0x22, 0x39, 0x02,
	0xe4, 0xd0, 0x12, 0x78, 0xbf, 0xd0, 0x92, 0xcc, 0xf7, 0x3a, 0x42, 0x07, 0xe6, 0xc3, 0x20, 0x50,
	0x94, 0xbc, 0xb4, 0x77, 0x5c, 0x2e, 0x88, 0x23, 0xff, 0xc0, 0xee, 0x9f, 0x2a, 0x6a, 0xc6, 0x1e,
	0x74, 0x8d, 0xd0, 0x1e, 0x0c, 0x61, 0xc1, 0xc8, 0x77, 0x10, 0x76, 0x2d, 0x5d, 0x6e, 0x4a, 0x4e,
	0x5b, 0x0c, 0x7f, 0x89, 0x66, 0x73, 0x8f, 0xda, 0x7c, 0x51, 0xbc, 0xb2, 0x58, 0xb6, 0x0a, 0x9f,
	0x1c, 0x5f, 0xa1, 0x05, 0x27, 0x18, 0x3f, 0x52, 0x9a, 0xec, 0xdb, 0x4b, 0x33, 0x17, 0xc2, 0x61,
	0xa4, 0x34, 0x3e, 0x44, 0x5b, 0x89, 0x90, 0x19, 0xea, 0x0c, 0x08, 0xc6, 0x03, 0x7a, 0x4d, 0x5e,
	0xdb, 0xc9, 0x66, 0x29, 0xa3, 0xbb, 0xc8, 0x31, 0x47, 0x06, 0xc1, 0xaf, 0x0b, 0xd9, 0xdb, 0x21,
	0x00, 0x41, 0x25, 0x34, 0x20, 0x6f, 0xec, 0x70, 0x4d, 0x0a, 0x03, 0xa0, 0x95, 0xee, 0xe3, 0x57,
	0x68, 0xbd, 0x50, 0x7d, 0xca, 0x46, 0xea, 0xef, 0xcb, 0xb5, 0xe3, 0x94, 0x55, 0x8a, 0xff, 0xa4,
	0x42, 0x8f, 0xc4, 0x3f, 0x94, 0xc4, 0xbf, 0x52, 0xa1, 0x33, 0xf1, 0x4f, 0x68, 0xe7, 0x86, 0x49,
	0x32, 0xb2, 0x69, 0xda, 0x4f, 0xac, 0xca, 0xf7, 0x3c, 0x33, 0x7c, 0x8a, 0x56, 0x0b, 0xed, 0x38,
	0xd0, 0xb6, 0x1c, 0xe4, 0x00, 0x3c, 0x96, 0x9c, 0x46, 0x1c, 0x68, 0xa8, 0x84, 0x91, 0x15, 0x5b,
	0x30, 0xa6, 0x4a, 0x99, 0xb7, 0xe0, 0x10, 0x7a, 0x6f, 0xc9, 0xe9, 0xbd, 0x9f, 0xed, 0x1e, 0x6e,
	0xa3, 0x87, 0x45, 0x19, 0xed, 0xeb, 0x2b, 0x1e, 0x6a, 0xe1, 0x53, 0x6d, 0x32, 0xe0, 0x21, 0xed,
	0x04, 0x9c, 0x91, 0x23, 0x70, 0xa9, 0x3b, 0x2e, 0x4d, 0x07, 0x3d, 0xb6, 0x24, 0x3e, 0x46, 0xf7,
	0x6e, 0x32, 0x54, 0xb1, 0x20, 0xc7, 0x90, 0xc9, 0xdd, 0xa4, 0xca, 0xea, 0x3c, 0x16, 0xa5, 0xca,
	0x16, 0x6c, 0xd2, 0xe2, 0x69, 0x72, 0x52, 0xaa, 0xac, 0xeb, 0x95, 0x36, 0x9b, 0xc6, 0xef, 0xca,
	0x33, 0x83, 0x87, 0xbe, 0xbc, 0x8e, 0x9d, 0x3c, 0x7f, 0x84, 0x3c, 0xb7, 0x9c, 0x3c, 0x8f, 0x33,
	0x6c, 0x98, 0x63, 0xb1, 0x5f, 0x73, 0x46, 0x26, 0xbf, 0xb7, 0xa5, 0x7e, 0x1d, 0x59, 0x98, 0xdc,
	0x3e, 0xa0, 0x07, 0x55, 0xf2, 0x61, 0x5e, 0x9a, 0x33, 0xd2, 0x02, 0x9b, 0xed, 0xb1, 0x36, 0x17,
	0x23, 0x0e, 0x5f, 0xa1, 0xc7, 0xe3, 0xec, 0x38, 0xab, 0x2a, 0x9a, 0x31, 0x7f, 0x07, 0xe6, 0x8f,
	0xca, 0xe6, 0x9c, 0x8d, 0x2f, 0xa0, 0x39, 0xe9, 0xaf, 0x09, 0xb4, 0x3c, 0x76, 0x5a, 0x92, 0xf7,
	0x70, 0x67, 0x5e, 0xfe, 0x6f, 0x77, 0xa6, 0xfb, 0xe1, 0xd0, 0x5e, 0x1c, 0x33, 0x8e, 0x3b, 0xb7,
	0xe1, 0x5f, 0xb8, 0xbd, 0x7f, 0x03, 0x00, 0x00, 0xff, 0xff, 0x63, 0xe2, 0x23, 0xbc, 0xe4, 0x0d,
	0x00, 0x00,
}
