/*
Copyright 2019 Cisco Systems

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: bgp_config_entity_bag.proto

package cisco_ios_xr_ipv4_bgp_oper_bgp_config_instances_config_instance_config_vrfs_config_vrf_entity_configurations_entity_configuration

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type BgpConfigEntityBag_KEYS struct {
	InstanceName         string   `protobuf:"bytes,1,opt,name=instance_name,json=instanceName,proto3" json:"instance_name,omitempty"`
	VrfName              string   `protobuf:"bytes,2,opt,name=vrf_name,json=vrfName,proto3" json:"vrf_name,omitempty"`
	EntityType           string   `protobuf:"bytes,3,opt,name=entity_type,json=entityType,proto3" json:"entity_type,omitempty"`
	NeighborAddress      string   `protobuf:"bytes,4,opt,name=neighbor_address,json=neighborAddress,proto3" json:"neighbor_address,omitempty"`
	EntityName           string   `protobuf:"bytes,5,opt,name=entity_name,json=entityName,proto3" json:"entity_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BgpConfigEntityBag_KEYS) Reset()         { *m = BgpConfigEntityBag_KEYS{} }
func (m *BgpConfigEntityBag_KEYS) String() string { return proto.CompactTextString(m) }
func (*BgpConfigEntityBag_KEYS) ProtoMessage()    {}
func (*BgpConfigEntityBag_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_987a149f58a2b9ee, []int{0}
}

func (m *BgpConfigEntityBag_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BgpConfigEntityBag_KEYS.Unmarshal(m, b)
}
func (m *BgpConfigEntityBag_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BgpConfigEntityBag_KEYS.Marshal(b, m, deterministic)
}
func (m *BgpConfigEntityBag_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BgpConfigEntityBag_KEYS.Merge(m, src)
}
func (m *BgpConfigEntityBag_KEYS) XXX_Size() int {
	return xxx_messageInfo_BgpConfigEntityBag_KEYS.Size(m)
}
func (m *BgpConfigEntityBag_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_BgpConfigEntityBag_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_BgpConfigEntityBag_KEYS proto.InternalMessageInfo

func (m *BgpConfigEntityBag_KEYS) GetInstanceName() string {
	if m != nil {
		return m.InstanceName
	}
	return ""
}

func (m *BgpConfigEntityBag_KEYS) GetVrfName() string {
	if m != nil {
		return m.VrfName
	}
	return ""
}

func (m *BgpConfigEntityBag_KEYS) GetEntityType() string {
	if m != nil {
		return m.EntityType
	}
	return ""
}

func (m *BgpConfigEntityBag_KEYS) GetNeighborAddress() string {
	if m != nil {
		return m.NeighborAddress
	}
	return ""
}

func (m *BgpConfigEntityBag_KEYS) GetEntityName() string {
	if m != nil {
		return m.EntityName
	}
	return ""
}

type BgpL2VpnAddrT struct {
	L2VpnAddress         []uint32 `protobuf:"varint,1,rep,packed,name=l2vpn_address,json=l2vpnAddress,proto3" json:"l2vpn_address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BgpL2VpnAddrT) Reset()         { *m = BgpL2VpnAddrT{} }
func (m *BgpL2VpnAddrT) String() string { return proto.CompactTextString(m) }
func (*BgpL2VpnAddrT) ProtoMessage()    {}
func (*BgpL2VpnAddrT) Descriptor() ([]byte, []int) {
	return fileDescriptor_987a149f58a2b9ee, []int{1}
}

func (m *BgpL2VpnAddrT) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BgpL2VpnAddrT.Unmarshal(m, b)
}
func (m *BgpL2VpnAddrT) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BgpL2VpnAddrT.Marshal(b, m, deterministic)
}
func (m *BgpL2VpnAddrT) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BgpL2VpnAddrT.Merge(m, src)
}
func (m *BgpL2VpnAddrT) XXX_Size() int {
	return xxx_messageInfo_BgpL2VpnAddrT.Size(m)
}
func (m *BgpL2VpnAddrT) XXX_DiscardUnknown() {
	xxx_messageInfo_BgpL2VpnAddrT.DiscardUnknown(m)
}

var xxx_messageInfo_BgpL2VpnAddrT proto.InternalMessageInfo

func (m *BgpL2VpnAddrT) GetL2VpnAddress() []uint32 {
	if m != nil {
		return m.L2VpnAddress
	}
	return nil
}

type BgpL2VpnMspwAddrT struct {
	L2VpnAddress         []uint32 `protobuf:"varint,1,rep,packed,name=l2vpn_address,json=l2vpnAddress,proto3" json:"l2vpn_address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BgpL2VpnMspwAddrT) Reset()         { *m = BgpL2VpnMspwAddrT{} }
func (m *BgpL2VpnMspwAddrT) String() string { return proto.CompactTextString(m) }
func (*BgpL2VpnMspwAddrT) ProtoMessage()    {}
func (*BgpL2VpnMspwAddrT) Descriptor() ([]byte, []int) {
	return fileDescriptor_987a149f58a2b9ee, []int{2}
}

func (m *BgpL2VpnMspwAddrT) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BgpL2VpnMspwAddrT.Unmarshal(m, b)
}
func (m *BgpL2VpnMspwAddrT) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BgpL2VpnMspwAddrT.Marshal(b, m, deterministic)
}
func (m *BgpL2VpnMspwAddrT) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BgpL2VpnMspwAddrT.Merge(m, src)
}
func (m *BgpL2VpnMspwAddrT) XXX_Size() int {
	return xxx_messageInfo_BgpL2VpnMspwAddrT.Size(m)
}
func (m *BgpL2VpnMspwAddrT) XXX_DiscardUnknown() {
	xxx_messageInfo_BgpL2VpnMspwAddrT.DiscardUnknown(m)
}

var xxx_messageInfo_BgpL2VpnMspwAddrT proto.InternalMessageInfo

func (m *BgpL2VpnMspwAddrT) GetL2VpnAddress() []uint32 {
	if m != nil {
		return m.L2VpnAddress
	}
	return nil
}

type BgpIpv4SrpolicyAddrT struct {
	Ipv4SrpolicyAddress  []uint32 `protobuf:"varint,1,rep,packed,name=ipv4_srpolicy_address,json=ipv4SrpolicyAddress,proto3" json:"ipv4_srpolicy_address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BgpIpv4SrpolicyAddrT) Reset()         { *m = BgpIpv4SrpolicyAddrT{} }
func (m *BgpIpv4SrpolicyAddrT) String() string { return proto.CompactTextString(m) }
func (*BgpIpv4SrpolicyAddrT) ProtoMessage()    {}
func (*BgpIpv4SrpolicyAddrT) Descriptor() ([]byte, []int) {
	return fileDescriptor_987a149f58a2b9ee, []int{3}
}

func (m *BgpIpv4SrpolicyAddrT) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BgpIpv4SrpolicyAddrT.Unmarshal(m, b)
}
func (m *BgpIpv4SrpolicyAddrT) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BgpIpv4SrpolicyAddrT.Marshal(b, m, deterministic)
}
func (m *BgpIpv4SrpolicyAddrT) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BgpIpv4SrpolicyAddrT.Merge(m, src)
}
func (m *BgpIpv4SrpolicyAddrT) XXX_Size() int {
	return xxx_messageInfo_BgpIpv4SrpolicyAddrT.Size(m)
}
func (m *BgpIpv4SrpolicyAddrT) XXX_DiscardUnknown() {
	xxx_messageInfo_BgpIpv4SrpolicyAddrT.DiscardUnknown(m)
}

var xxx_messageInfo_BgpIpv4SrpolicyAddrT proto.InternalMessageInfo

func (m *BgpIpv4SrpolicyAddrT) GetIpv4SrpolicyAddress() []uint32 {
	if m != nil {
		return m.Ipv4SrpolicyAddress
	}
	return nil
}

type BgpIpv6SrpolicyAddrT struct {
	Ipv6SrpolicyAddress  []uint32 `protobuf:"varint,1,rep,packed,name=ipv6_srpolicy_address,json=ipv6SrpolicyAddress,proto3" json:"ipv6_srpolicy_address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BgpIpv6SrpolicyAddrT) Reset()         { *m = BgpIpv6SrpolicyAddrT{} }
func (m *BgpIpv6SrpolicyAddrT) String() string { return proto.CompactTextString(m) }
func (*BgpIpv6SrpolicyAddrT) ProtoMessage()    {}
func (*BgpIpv6SrpolicyAddrT) Descriptor() ([]byte, []int) {
	return fileDescriptor_987a149f58a2b9ee, []int{4}
}

func (m *BgpIpv6SrpolicyAddrT) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BgpIpv6SrpolicyAddrT.Unmarshal(m, b)
}
func (m *BgpIpv6SrpolicyAddrT) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BgpIpv6SrpolicyAddrT.Marshal(b, m, deterministic)
}
func (m *BgpIpv6SrpolicyAddrT) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BgpIpv6SrpolicyAddrT.Merge(m, src)
}
func (m *BgpIpv6SrpolicyAddrT) XXX_Size() int {
	return xxx_messageInfo_BgpIpv6SrpolicyAddrT.Size(m)
}
func (m *BgpIpv6SrpolicyAddrT) XXX_DiscardUnknown() {
	xxx_messageInfo_BgpIpv6SrpolicyAddrT.DiscardUnknown(m)
}

var xxx_messageInfo_BgpIpv6SrpolicyAddrT proto.InternalMessageInfo

func (m *BgpIpv6SrpolicyAddrT) GetIpv6SrpolicyAddress() []uint32 {
	if m != nil {
		return m.Ipv6SrpolicyAddress
	}
	return nil
}

type BgpAddrtype struct {
	Afi                    string                `protobuf:"bytes,1,opt,name=afi,proto3" json:"afi,omitempty"`
	Ipv4Address            string                `protobuf:"bytes,2,opt,name=ipv4_address,json=ipv4Address,proto3" json:"ipv4_address,omitempty"`
	Ipv4McastAddress       string                `protobuf:"bytes,3,opt,name=ipv4_mcast_address,json=ipv4McastAddress,proto3" json:"ipv4_mcast_address,omitempty"`
	Ipv4LabelAddress       string                `protobuf:"bytes,4,opt,name=ipv4_label_address,json=ipv4LabelAddress,proto3" json:"ipv4_label_address,omitempty"`
	Ipv4TunnelAddress      string                `protobuf:"bytes,5,opt,name=ipv4_tunnel_address,json=ipv4TunnelAddress,proto3" json:"ipv4_tunnel_address,omitempty"`
	Ipv4MdtAddress         string                `protobuf:"bytes,6,opt,name=ipv4_mdt_address,json=ipv4MdtAddress,proto3" json:"ipv4_mdt_address,omitempty"`
	Ipv4VpnAddress         string                `protobuf:"bytes,7,opt,name=ipv4vpn_address,json=ipv4vpnAddress,proto3" json:"ipv4vpn_address,omitempty"`
	Ipv4VpnaMcastddress    string                `protobuf:"bytes,8,opt,name=ipv4vpna_mcastddress,json=ipv4vpnaMcastddress,proto3" json:"ipv4vpna_mcastddress,omitempty"`
	Ipv6Address            string                `protobuf:"bytes,9,opt,name=ipv6_address,json=ipv6Address,proto3" json:"ipv6_address,omitempty"`
	Ipv6McastAddress       string                `protobuf:"bytes,10,opt,name=ipv6_mcast_address,json=ipv6McastAddress,proto3" json:"ipv6_mcast_address,omitempty"`
	Ipv6LabelAddress       string                `protobuf:"bytes,11,opt,name=ipv6_label_address,json=ipv6LabelAddress,proto3" json:"ipv6_label_address,omitempty"`
	Ipv6VpnAddress         string                `protobuf:"bytes,12,opt,name=ipv6vpn_address,json=ipv6vpnAddress,proto3" json:"ipv6vpn_address,omitempty"`
	Ipv6VpnMcastAddress    string                `protobuf:"bytes,13,opt,name=ipv6vpn_mcast_address,json=ipv6vpnMcastAddress,proto3" json:"ipv6vpn_mcast_address,omitempty"`
	L2VpnVplsAddress       *BgpL2VpnAddrT        `protobuf:"bytes,14,opt,name=l2vpn_vpls_address,json=l2vpnVplsAddress,proto3" json:"l2vpn_vpls_address,omitempty"`
	RtConstraintAddress    string                `protobuf:"bytes,15,opt,name=rt_constraint_address,json=rtConstraintAddress,proto3" json:"rt_constraint_address,omitempty"`
	Ipv6MvpnAddress        string                `protobuf:"bytes,16,opt,name=ipv6mvpn_address,json=ipv6mvpnAddress,proto3" json:"ipv6mvpn_address,omitempty"`
	Ipv4MvpnAddress        string                `protobuf:"bytes,17,opt,name=ipv4mvpn_address,json=ipv4mvpnAddress,proto3" json:"ipv4mvpn_address,omitempty"`
	L2VpnEvpnAddress       string                `protobuf:"bytes,18,opt,name=l2vpn_evpn_address,json=l2vpnEvpnAddress,proto3" json:"l2vpn_evpn_address,omitempty"`
	LsLsAddress            string                `protobuf:"bytes,19,opt,name=ls_ls_address,json=lsLsAddress,proto3" json:"ls_ls_address,omitempty"`
	L2VpnMspwAddress       *BgpL2VpnMspwAddrT    `protobuf:"bytes,20,opt,name=l2vpn_mspw_address,json=l2vpnMspwAddress,proto3" json:"l2vpn_mspw_address,omitempty"`
	Ipv4FlowspecAddress    string                `protobuf:"bytes,21,opt,name=ipv4_flowspec_address,json=ipv4FlowspecAddress,proto3" json:"ipv4_flowspec_address,omitempty"`
	Ipv6FlowspecAddress    string                `protobuf:"bytes,22,opt,name=ipv6_flowspec_address,json=ipv6FlowspecAddress,proto3" json:"ipv6_flowspec_address,omitempty"`
	Ipv4VpnFlowspecAddress string                `protobuf:"bytes,23,opt,name=ipv4vpn_flowspec_address,json=ipv4vpnFlowspecAddress,proto3" json:"ipv4vpn_flowspec_address,omitempty"`
	Ipv6VpnFlowspecAddress string                `protobuf:"bytes,24,opt,name=ipv6vpn_flowspec_address,json=ipv6vpnFlowspecAddress,proto3" json:"ipv6vpn_flowspec_address,omitempty"`
	Ipv4SrPolicyAddress    *BgpIpv4SrpolicyAddrT `protobuf:"bytes,25,opt,name=ipv4_sr_policy_address,json=ipv4SrPolicyAddress,proto3" json:"ipv4_sr_policy_address,omitempty"`
	Ipv6SrPolicyAddress    *BgpIpv6SrpolicyAddrT `protobuf:"bytes,26,opt,name=ipv6_sr_policy_address,json=ipv6SrPolicyAddress,proto3" json:"ipv6_sr_policy_address,omitempty"`
	XXX_NoUnkeyedLiteral   struct{}              `json:"-"`
	XXX_unrecognized       []byte                `json:"-"`
	XXX_sizecache          int32                 `json:"-"`
}

func (m *BgpAddrtype) Reset()         { *m = BgpAddrtype{} }
func (m *BgpAddrtype) String() string { return proto.CompactTextString(m) }
func (*BgpAddrtype) ProtoMessage()    {}
func (*BgpAddrtype) Descriptor() ([]byte, []int) {
	return fileDescriptor_987a149f58a2b9ee, []int{5}
}

func (m *BgpAddrtype) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BgpAddrtype.Unmarshal(m, b)
}
func (m *BgpAddrtype) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BgpAddrtype.Marshal(b, m, deterministic)
}
func (m *BgpAddrtype) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BgpAddrtype.Merge(m, src)
}
func (m *BgpAddrtype) XXX_Size() int {
	return xxx_messageInfo_BgpAddrtype.Size(m)
}
func (m *BgpAddrtype) XXX_DiscardUnknown() {
	xxx_messageInfo_BgpAddrtype.DiscardUnknown(m)
}

var xxx_messageInfo_BgpAddrtype proto.InternalMessageInfo

func (m *BgpAddrtype) GetAfi() string {
	if m != nil {
		return m.Afi
	}
	return ""
}

func (m *BgpAddrtype) GetIpv4Address() string {
	if m != nil {
		return m.Ipv4Address
	}
	return ""
}

func (m *BgpAddrtype) GetIpv4McastAddress() string {
	if m != nil {
		return m.Ipv4McastAddress
	}
	return ""
}

func (m *BgpAddrtype) GetIpv4LabelAddress() string {
	if m != nil {
		return m.Ipv4LabelAddress
	}
	return ""
}

func (m *BgpAddrtype) GetIpv4TunnelAddress() string {
	if m != nil {
		return m.Ipv4TunnelAddress
	}
	return ""
}

func (m *BgpAddrtype) GetIpv4MdtAddress() string {
	if m != nil {
		return m.Ipv4MdtAddress
	}
	return ""
}

func (m *BgpAddrtype) GetIpv4VpnAddress() string {
	if m != nil {
		return m.Ipv4VpnAddress
	}
	return ""
}

func (m *BgpAddrtype) GetIpv4VpnaMcastddress() string {
	if m != nil {
		return m.Ipv4VpnaMcastddress
	}
	return ""
}

func (m *BgpAddrtype) GetIpv6Address() string {
	if m != nil {
		return m.Ipv6Address
	}
	return ""
}

func (m *BgpAddrtype) GetIpv6McastAddress() string {
	if m != nil {
		return m.Ipv6McastAddress
	}
	return ""
}

func (m *BgpAddrtype) GetIpv6LabelAddress() string {
	if m != nil {
		return m.Ipv6LabelAddress
	}
	return ""
}

func (m *BgpAddrtype) GetIpv6VpnAddress() string {
	if m != nil {
		return m.Ipv6VpnAddress
	}
	return ""
}

func (m *BgpAddrtype) GetIpv6VpnMcastAddress() string {
	if m != nil {
		return m.Ipv6VpnMcastAddress
	}
	return ""
}

func (m *BgpAddrtype) GetL2VpnVplsAddress() *BgpL2VpnAddrT {
	if m != nil {
		return m.L2VpnVplsAddress
	}
	return nil
}

func (m *BgpAddrtype) GetRtConstraintAddress() string {
	if m != nil {
		return m.RtConstraintAddress
	}
	return ""
}

func (m *BgpAddrtype) GetIpv6MvpnAddress() string {
	if m != nil {
		return m.Ipv6MvpnAddress
	}
	return ""
}

func (m *BgpAddrtype) GetIpv4MvpnAddress() string {
	if m != nil {
		return m.Ipv4MvpnAddress
	}
	return ""
}

func (m *BgpAddrtype) GetL2VpnEvpnAddress() string {
	if m != nil {
		return m.L2VpnEvpnAddress
	}
	return ""
}

func (m *BgpAddrtype) GetLsLsAddress() string {
	if m != nil {
		return m.LsLsAddress
	}
	return ""
}

func (m *BgpAddrtype) GetL2VpnMspwAddress() *BgpL2VpnMspwAddrT {
	if m != nil {
		return m.L2VpnMspwAddress
	}
	return nil
}

func (m *BgpAddrtype) GetIpv4FlowspecAddress() string {
	if m != nil {
		return m.Ipv4FlowspecAddress
	}
	return ""
}

func (m *BgpAddrtype) GetIpv6FlowspecAddress() string {
	if m != nil {
		return m.Ipv6FlowspecAddress
	}
	return ""
}

func (m *BgpAddrtype) GetIpv4VpnFlowspecAddress() string {
	if m != nil {
		return m.Ipv4VpnFlowspecAddress
	}
	return ""
}

func (m *BgpAddrtype) GetIpv6VpnFlowspecAddress() string {
	if m != nil {
		return m.Ipv6VpnFlowspecAddress
	}
	return ""
}

func (m *BgpAddrtype) GetIpv4SrPolicyAddress() *BgpIpv4SrpolicyAddrT {
	if m != nil {
		return m.Ipv4SrPolicyAddress
	}
	return nil
}

func (m *BgpAddrtype) GetIpv6SrPolicyAddress() *BgpIpv6SrpolicyAddrT {
	if m != nil {
		return m.Ipv6SrPolicyAddress
	}
	return nil
}

type BgpConfigEntid_Item struct {
	AddressFamilyIdentifier uint32       `protobuf:"varint,1,opt,name=address_family_identifier,json=addressFamilyIdentifier,proto3" json:"address_family_identifier,omitempty"`
	ConfigurationType       string       `protobuf:"bytes,2,opt,name=configuration_type,json=configurationType,proto3" json:"configuration_type,omitempty"`
	NeighborAddressXr       *BgpAddrtype `protobuf:"bytes,3,opt,name=neighbor_address_xr,json=neighborAddressXr,proto3" json:"neighbor_address_xr,omitempty"`
	GroupName               string       `protobuf:"bytes,4,opt,name=group_name,json=groupName,proto3" json:"group_name,omitempty"`
	XXX_NoUnkeyedLiteral    struct{}     `json:"-"`
	XXX_unrecognized        []byte       `json:"-"`
	XXX_sizecache           int32        `json:"-"`
}

func (m *BgpConfigEntid_Item) Reset()         { *m = BgpConfigEntid_Item{} }
func (m *BgpConfigEntid_Item) String() string { return proto.CompactTextString(m) }
func (*BgpConfigEntid_Item) ProtoMessage()    {}
func (*BgpConfigEntid_Item) Descriptor() ([]byte, []int) {
	return fileDescriptor_987a149f58a2b9ee, []int{6}
}

func (m *BgpConfigEntid_Item) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BgpConfigEntid_Item.Unmarshal(m, b)
}
func (m *BgpConfigEntid_Item) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BgpConfigEntid_Item.Marshal(b, m, deterministic)
}
func (m *BgpConfigEntid_Item) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BgpConfigEntid_Item.Merge(m, src)
}
func (m *BgpConfigEntid_Item) XXX_Size() int {
	return xxx_messageInfo_BgpConfigEntid_Item.Size(m)
}
func (m *BgpConfigEntid_Item) XXX_DiscardUnknown() {
	xxx_messageInfo_BgpConfigEntid_Item.DiscardUnknown(m)
}

var xxx_messageInfo_BgpConfigEntid_Item proto.InternalMessageInfo

func (m *BgpConfigEntid_Item) GetAddressFamilyIdentifier() uint32 {
	if m != nil {
		return m.AddressFamilyIdentifier
	}
	return 0
}

func (m *BgpConfigEntid_Item) GetConfigurationType() string {
	if m != nil {
		return m.ConfigurationType
	}
	return ""
}

func (m *BgpConfigEntid_Item) GetNeighborAddressXr() *BgpAddrtype {
	if m != nil {
		return m.NeighborAddressXr
	}
	return nil
}

func (m *BgpConfigEntid_Item) GetGroupName() string {
	if m != nil {
		return m.GroupName
	}
	return ""
}

type BgpConfigEntid_Entry struct {
	BgpConfigEntid_      []*BgpConfigEntid_Item `protobuf:"bytes,1,rep,name=bgp_config_entid_,json=bgpConfigEntid,proto3" json:"bgp_config_entid_,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *BgpConfigEntid_Entry) Reset()         { *m = BgpConfigEntid_Entry{} }
func (m *BgpConfigEntid_Entry) String() string { return proto.CompactTextString(m) }
func (*BgpConfigEntid_Entry) ProtoMessage()    {}
func (*BgpConfigEntid_Entry) Descriptor() ([]byte, []int) {
	return fileDescriptor_987a149f58a2b9ee, []int{7}
}

func (m *BgpConfigEntid_Entry) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BgpConfigEntid_Entry.Unmarshal(m, b)
}
func (m *BgpConfigEntid_Entry) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BgpConfigEntid_Entry.Marshal(b, m, deterministic)
}
func (m *BgpConfigEntid_Entry) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BgpConfigEntid_Entry.Merge(m, src)
}
func (m *BgpConfigEntid_Entry) XXX_Size() int {
	return xxx_messageInfo_BgpConfigEntid_Entry.Size(m)
}
func (m *BgpConfigEntid_Entry) XXX_DiscardUnknown() {
	xxx_messageInfo_BgpConfigEntid_Entry.DiscardUnknown(m)
}

var xxx_messageInfo_BgpConfigEntid_Entry proto.InternalMessageInfo

func (m *BgpConfigEntid_Entry) GetBgpConfigEntid_() []*BgpConfigEntid_Item {
	if m != nil {
		return m.BgpConfigEntid_
	}
	return nil
}

type BgpConfigInfo_ struct {
	IsItemConfigured     bool                  `protobuf:"varint,1,opt,name=is_item_configured,json=isItemConfigured,proto3" json:"is_item_configured,omitempty"`
	InheritanceChain     *BgpConfigEntid_Entry `protobuf:"bytes,2,opt,name=inheritance_chain,json=inheritanceChain,proto3" json:"inheritance_chain,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *BgpConfigInfo_) Reset()         { *m = BgpConfigInfo_{} }
func (m *BgpConfigInfo_) String() string { return proto.CompactTextString(m) }
func (*BgpConfigInfo_) ProtoMessage()    {}
func (*BgpConfigInfo_) Descriptor() ([]byte, []int) {
	return fileDescriptor_987a149f58a2b9ee, []int{8}
}

func (m *BgpConfigInfo_) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BgpConfigInfo_.Unmarshal(m, b)
}
func (m *BgpConfigInfo_) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BgpConfigInfo_.Marshal(b, m, deterministic)
}
func (m *BgpConfigInfo_) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BgpConfigInfo_.Merge(m, src)
}
func (m *BgpConfigInfo_) XXX_Size() int {
	return xxx_messageInfo_BgpConfigInfo_.Size(m)
}
func (m *BgpConfigInfo_) XXX_DiscardUnknown() {
	xxx_messageInfo_BgpConfigInfo_.DiscardUnknown(m)
}

var xxx_messageInfo_BgpConfigInfo_ proto.InternalMessageInfo

func (m *BgpConfigInfo_) GetIsItemConfigured() bool {
	if m != nil {
		return m.IsItemConfigured
	}
	return false
}

func (m *BgpConfigInfo_) GetInheritanceChain() *BgpConfigEntid_Entry {
	if m != nil {
		return m.InheritanceChain
	}
	return nil
}

type BgpAfIndep_ struct {
	RemoteAsNumberXx                               uint32          `protobuf:"varint,1,opt,name=remote_as_number_xx,json=remoteAsNumberXx,proto3" json:"remote_as_number_xx,omitempty"`
	RemoteAsNumberYy                               uint32          `protobuf:"varint,2,opt,name=remote_as_number_yy,json=remoteAsNumberYy,proto3" json:"remote_as_number_yy,omitempty"`
	ConfiguredSpeakerId                            uint32          `protobuf:"varint,3,opt,name=configured_speaker_id,json=configuredSpeakerId,proto3" json:"configured_speaker_id,omitempty"`
	TcpMss                                         uint32          `protobuf:"varint,4,opt,name=tcp_mss,json=tcpMss,proto3" json:"tcp_mss,omitempty"`
	MinAdvertisementInterval                       uint32          `protobuf:"varint,5,opt,name=min_advertisement_interval,json=minAdvertisementInterval,proto3" json:"min_advertisement_interval,omitempty"`
	MinAdvertisementIntervalMsecs                  uint32          `protobuf:"varint,6,opt,name=min_advertisement_interval_msecs,json=minAdvertisementIntervalMsecs,proto3" json:"min_advertisement_interval_msecs,omitempty"`
	Description                                    string          `protobuf:"bytes,7,opt,name=description,proto3" json:"description,omitempty"`
	EbgpHopCount                                   uint32          `protobuf:"varint,8,opt,name=ebgp_hop_count,json=ebgpHopCount,proto3" json:"ebgp_hop_count,omitempty"`
	BmpServers                                     uint32          `protobuf:"varint,9,opt,name=bmp_servers,json=bmpServers,proto3" json:"bmp_servers,omitempty"`
	IsEbgpMultihopBgpMplsForwardingDisabled        bool            `protobuf:"varint,10,opt,name=is_ebgp_multihop_bgp_mpls_forwarding_disabled,json=isEbgpMultihopBgpMplsForwardingDisabled,proto3" json:"is_ebgp_multihop_bgp_mpls_forwarding_disabled,omitempty"`
	Keychain                                       string          `protobuf:"bytes,11,opt,name=keychain,proto3" json:"keychain,omitempty"`
	LocalAsNumberXx                                uint32          `protobuf:"varint,12,opt,name=local_as_number_xx,json=localAsNumberXx,proto3" json:"local_as_number_xx,omitempty"`
	LocalAsNumberYy                                uint32          `protobuf:"varint,13,opt,name=local_as_number_yy,json=localAsNumberYy,proto3" json:"local_as_number_yy,omitempty"`
	LocalAsNoPrepend                               bool            `protobuf:"varint,14,opt,name=local_as_no_prepend,json=localAsNoPrepend,proto3" json:"local_as_no_prepend,omitempty"`
	Password                                       string          `protobuf:"bytes,15,opt,name=password,proto3" json:"password,omitempty"`
	SocketBufferReceiveSize                        uint32          `protobuf:"varint,16,opt,name=socket_buffer_receive_size,json=socketBufferReceiveSize,proto3" json:"socket_buffer_receive_size,omitempty"`
	BgpBufferReceiveSize                           uint32          `protobuf:"varint,17,opt,name=bgp_buffer_receive_size,json=bgpBufferReceiveSize,proto3" json:"bgp_buffer_receive_size,omitempty"`
	SocketBufferSendSize                           uint32          `protobuf:"varint,18,opt,name=socket_buffer_send_size,json=socketBufferSendSize,proto3" json:"socket_buffer_send_size,omitempty"`
	BgpBufferSendSize                              uint32          `protobuf:"varint,19,opt,name=bgp_buffer_send_size,json=bgpBufferSendSize,proto3" json:"bgp_buffer_send_size,omitempty"`
	AdminstrativeShutdown                          bool            `protobuf:"varint,20,opt,name=adminstrative_shutdown,json=adminstrativeShutdown,proto3" json:"adminstrative_shutdown,omitempty"`
	KeepaliveInterval                              uint32          `protobuf:"varint,21,opt,name=keepalive_interval,json=keepaliveInterval,proto3" json:"keepalive_interval,omitempty"`
	HoldTimeValue                                  uint32          `protobuf:"varint,22,opt,name=hold_time_value,json=holdTimeValue,proto3" json:"hold_time_value,omitempty"`
	MinAccHoldTimeValue                            uint32          `protobuf:"varint,23,opt,name=min_acc_hold_time_value,json=minAccHoldTimeValue,proto3" json:"min_acc_hold_time_value,omitempty"`
	LocalIpAddress                                 *BgpAddrtype    `protobuf:"bytes,24,opt,name=local_ip_address,json=localIpAddress,proto3" json:"local_ip_address,omitempty"`
	MsgLogInBufCount                               uint32          `protobuf:"varint,25,opt,name=msg_log_in_buf_count,json=msgLogInBufCount,proto3" json:"msg_log_in_buf_count,omitempty"`
	MsgLogOutBufCount                              uint32          `protobuf:"varint,26,opt,name=msg_log_out_buf_count,json=msgLogOutBufCount,proto3" json:"msg_log_out_buf_count,omitempty"`
	RouteUpdatesSource                             string          `protobuf:"bytes,27,opt,name=route_updates_source,json=routeUpdatesSource,proto3" json:"route_updates_source,omitempty"`
	DmzLinkBandwidth                               uint32          `protobuf:"varint,28,opt,name=dmz_link_bandwidth,json=dmzLinkBandwidth,proto3" json:"dmz_link_bandwidth,omitempty"`
	EbgpRecvDmz                                    uint32          `protobuf:"varint,29,opt,name=ebgp_recv_dmz,json=ebgpRecvDmz,proto3" json:"ebgp_recv_dmz,omitempty"`
	EbgpSendDmzMode                                string          `protobuf:"bytes,30,opt,name=ebgp_send_dmz_mode,json=ebgpSendDmzMode,proto3" json:"ebgp_send_dmz_mode,omitempty"`
	TtlSecurity                                    uint32          `protobuf:"varint,31,opt,name=ttl_security,json=ttlSecurity,proto3" json:"ttl_security,omitempty"`
	Suppress4ByteAs                                uint32          `protobuf:"varint,32,opt,name=suppress4_byte_as,json=suppress4ByteAs,proto3" json:"suppress4_byte_as,omitempty"`
	CapabilityNegotiationSuppressed                uint32          `protobuf:"varint,33,opt,name=capability_negotiation_suppressed,json=capabilityNegotiationSuppressed,proto3" json:"capability_negotiation_suppressed,omitempty"`
	SessionOpenMode                                string          `protobuf:"bytes,34,opt,name=session_open_mode,json=sessionOpenMode,proto3" json:"session_open_mode,omitempty"`
	Bfd                                            uint32          `protobuf:"varint,35,opt,name=bfd,proto3" json:"bfd,omitempty"`
	BfdMininterval                                 uint32          `protobuf:"varint,36,opt,name=bfd_mininterval,json=bfdMininterval,proto3" json:"bfd_mininterval,omitempty"`
	BfdMultiplier                                  uint32          `protobuf:"varint,37,opt,name=bfd_multiplier,json=bfdMultiplier,proto3" json:"bfd_multiplier,omitempty"`
	TosTypeInfo                                    uint32          `protobuf:"varint,38,opt,name=tos_type_info,json=tosTypeInfo,proto3" json:"tos_type_info,omitempty"`
	TosValueInfo                                   uint32          `protobuf:"varint,39,opt,name=tos_value_info,json=tosValueInfo,proto3" json:"tos_value_info,omitempty"`
	NsrDisabled                                    uint32          `protobuf:"varint,40,opt,name=nsr_disabled,json=nsrDisabled,proto3" json:"nsr_disabled,omitempty"`
	GracefulRestartDisabled                        uint32          `protobuf:"varint,41,opt,name=graceful_restart_disabled,json=gracefulRestartDisabled,proto3" json:"graceful_restart_disabled,omitempty"`
	NbrRestartTime                                 uint32          `protobuf:"varint,42,opt,name=nbr_restart_time,json=nbrRestartTime,proto3" json:"nbr_restart_time,omitempty"`
	NbrStalePathTime                               uint32          `protobuf:"varint,43,opt,name=nbr_stale_path_time,json=nbrStalePathTime,proto3" json:"nbr_stale_path_time,omitempty"`
	NbrEnforceFirstAsStatus                        bool            `protobuf:"varint,44,opt,name=nbr_enforce_first_as_status,json=nbrEnforceFirstAsStatus,proto3" json:"nbr_enforce_first_as_status,omitempty"`
	NbrClusterIdTypeInfo                           uint32          `protobuf:"varint,45,opt,name=nbr_cluster_id_type_info,json=nbrClusterIdTypeInfo,proto3" json:"nbr_cluster_id_type_info,omitempty"`
	NbrClusterIdInfo                               uint32          `protobuf:"varint,46,opt,name=nbr_cluster_id_info,json=nbrClusterIdInfo,proto3" json:"nbr_cluster_id_info,omitempty"`
	IgnoreConnectedCheck                           bool            `protobuf:"varint,47,opt,name=ignore_connected_check,json=ignoreConnectedCheck,proto3" json:"ignore_connected_check,omitempty"`
	InternalVpnClient                              bool            `protobuf:"varint,48,opt,name=internal_vpn_client,json=internalVpnClient,proto3" json:"internal_vpn_client,omitempty"`
	AddpathSendCapability                          uint32          `protobuf:"varint,49,opt,name=addpath_send_capability,json=addpathSendCapability,proto3" json:"addpath_send_capability,omitempty"`
	UpdateErrorHandlingNoReset                     uint32          `protobuf:"varint,50,opt,name=update_error_handling_no_reset,json=updateErrorHandlingNoReset,proto3" json:"update_error_handling_no_reset,omitempty"`
	AddpathReceiveCapability                       uint32          `protobuf:"varint,51,opt,name=addpath_receive_capability,json=addpathReceiveCapability,proto3" json:"addpath_receive_capability,omitempty"`
	EgressPeerEngineering                          uint32          `protobuf:"varint,52,opt,name=egress_peer_engineering,json=egressPeerEngineering,proto3" json:"egress_peer_engineering,omitempty"`
	PrefixValidationDisable                        uint32          `protobuf:"varint,53,opt,name=prefix_validation_disable,json=prefixValidationDisable,proto3" json:"prefix_validation_disable,omitempty"`
	BestpathUseOriginAsValidity                    uint32          `protobuf:"varint,54,opt,name=bestpath_use_origin_as_validity,json=bestpathUseOriginAsValidity,proto3" json:"bestpath_use_origin_as_validity,omitempty"`
	PrefixValidationAllowInvalid                   uint32          `protobuf:"varint,55,opt,name=prefix_validation_allow_invalid,json=prefixValidationAllowInvalid,proto3" json:"prefix_validation_allow_invalid,omitempty"`
	PrefixValidationSignalIbgp                     uint32          `protobuf:"varint,56,opt,name=prefix_validation_signal_ibgp,json=prefixValidationSignalIbgp,proto3" json:"prefix_validation_signal_ibgp,omitempty"`
	NeighborUpdateFilterExists                     bool            `protobuf:"varint,57,opt,name=neighbor_update_filter_exists,json=neighborUpdateFilterExists,proto3" json:"neighbor_update_filter_exists,omitempty"`
	NeighborUpdateFilterMessageBufferCount         uint32          `protobuf:"varint,58,opt,name=neighbor_update_filter_message_buffer_count,json=neighborUpdateFilterMessageBufferCount,proto3" json:"neighbor_update_filter_message_buffer_count,omitempty"`
	NeighborUpdateFilterMessageBufferIsNonCircular bool            `protobuf:"varint,59,opt,name=neighbor_update_filter_message_buffer_is_non_circular,json=neighborUpdateFilterMessageBufferIsNonCircular,proto3" json:"neighbor_update_filter_message_buffer_is_non_circular,omitempty"`
	NeighborUpdateFilterLoggingDisable             bool            `protobuf:"varint,60,opt,name=neighbor_update_filter_logging_disable,json=neighborUpdateFilterLoggingDisable,proto3" json:"neighbor_update_filter_logging_disable,omitempty"`
	NeighborUpdateFilterAttributeFilterGroupName   string          `protobuf:"bytes,61,opt,name=neighbor_update_filter_attribute_filter_group_name,json=neighborUpdateFilterAttributeFilterGroupName,proto3" json:"neighbor_update_filter_attribute_filter_group_name,omitempty"`
	GracefulShutdownExists                         uint32          `protobuf:"varint,62,opt,name=graceful_shutdown_exists,json=gracefulShutdownExists,proto3" json:"graceful_shutdown_exists,omitempty"`
	GracefulShutdownLocPref                        uint32          `protobuf:"varint,63,opt,name=graceful_shutdown_loc_pref,json=gracefulShutdownLocPref,proto3" json:"graceful_shutdown_loc_pref,omitempty"`
	GracefulShutdownAsPrepends                     uint32          `protobuf:"varint,64,opt,name=graceful_shutdown_as_prepends,json=gracefulShutdownAsPrepends,proto3" json:"graceful_shutdown_as_prepends,omitempty"`
	GracefulShutdownActivate                       uint32          `protobuf:"varint,65,opt,name=graceful_shutdown_activate,json=gracefulShutdownActivate,proto3" json:"graceful_shutdown_activate,omitempty"`
	NeighborRemoteAsListGroupName                  string          `protobuf:"bytes,66,opt,name=neighbor_remote_as_list_group_name,json=neighborRemoteAsListGroupName,proto3" json:"neighbor_remote_as_list_group_name,omitempty"`
	MaxPeers                                       uint32          `protobuf:"varint,67,opt,name=max_peers,json=maxPeers,proto3" json:"max_peers,omitempty"`
	IdleWatchTime                                  uint32          `protobuf:"varint,68,opt,name=idle_watch_time,json=idleWatchTime,proto3" json:"idle_watch_time,omitempty"`
	RemoteAsInfo                                   *BgpConfigInfo_ `protobuf:"bytes,69,opt,name=remote_as_info,json=remoteAsInfo,proto3" json:"remote_as_info,omitempty"`
	SpeakerIdInfo                                  *BgpConfigInfo_ `protobuf:"bytes,70,opt,name=speaker_id_info,json=speakerIdInfo,proto3" json:"speaker_id_info,omitempty"`
	MinAdvertisementInfo                           *BgpConfigInfo_ `protobuf:"bytes,71,opt,name=min_advertisement_info,json=minAdvertisementInfo,proto3" json:"min_advertisement_info,omitempty"`
	DescriptionInfo                                *BgpConfigInfo_ `protobuf:"bytes,72,opt,name=description_info,json=descriptionInfo,proto3" json:"description_info,omitempty"`
	EbgpHopCountInfo                               *BgpConfigInfo_ `protobuf:"bytes,73,opt,name=ebgp_hop_count_info,json=ebgpHopCountInfo,proto3" json:"ebgp_hop_count_info,omitempty"`
	TcpmssInfo                                     *BgpConfigInfo_ `protobuf:"bytes,74,opt,name=tcpmss_info,json=tcpmssInfo,proto3" json:"tcpmss_info,omitempty"`
	BmpServersInfo                                 *BgpConfigInfo_ `protobuf:"bytes,75,opt,name=bmp_servers_info,json=bmpServersInfo,proto3" json:"bmp_servers_info,omitempty"`
	KeychainInfo                                   *BgpConfigInfo_ `protobuf:"bytes,76,opt,name=keychain_info,json=keychainInfo,proto3" json:"keychain_info,omitempty"`
	LocalAsInfo                                    *BgpConfigInfo_ `protobuf:"bytes,77,opt,name=local_as_info,json=localAsInfo,proto3" json:"local_as_info,omitempty"`
	PasswordInfo                                   *BgpConfigInfo_ `protobuf:"bytes,78,opt,name=password_info,json=passwordInfo,proto3" json:"password_info,omitempty"`
	ReceiveBufferInfo                              *BgpConfigInfo_ `protobuf:"bytes,79,opt,name=receive_buffer_info,json=receiveBufferInfo,proto3" json:"receive_buffer_info,omitempty"`
	SendBufferInfo                                 *BgpConfigInfo_ `protobuf:"bytes,80,opt,name=send_buffer_info,json=sendBufferInfo,proto3" json:"send_buffer_info,omitempty"`
	ShutdownInfo                                   *BgpConfigInfo_ `protobuf:"bytes,81,opt,name=shutdown_info,json=shutdownInfo,proto3" json:"shutdown_info,omitempty"`
	TimersInfo                                     *BgpConfigInfo_ `protobuf:"bytes,82,opt,name=timers_info,json=timersInfo,proto3" json:"timers_info,omitempty"`
	LocalAddressInfo                               *BgpConfigInfo_ `protobuf:"bytes,83,opt,name=local_address_info,json=localAddressInfo,proto3" json:"local_address_info,omitempty"`
	MsgLogInInfo                                   *BgpConfigInfo_ `protobuf:"bytes,84,opt,name=msg_log_in_info,json=msgLogInInfo,proto3" json:"msg_log_in_info,omitempty"`
	MsgLogOutInfo                                  *BgpConfigInfo_ `protobuf:"bytes,85,opt,name=msg_log_out_info,json=msgLogOutInfo,proto3" json:"msg_log_out_info,omitempty"`
	UpdateSourceInfo                               *BgpConfigInfo_ `protobuf:"bytes,86,opt,name=update_source_info,json=updateSourceInfo,proto3" json:"update_source_info,omitempty"`
	DmzLinkBandwidthInfo                           *BgpConfigInfo_ `protobuf:"bytes,87,opt,name=dmz_link_bandwidth_info,json=dmzLinkBandwidthInfo,proto3" json:"dmz_link_bandwidth_info,omitempty"`
	EbgpRecvDmzInfo                                *BgpConfigInfo_ `protobuf:"bytes,88,opt,name=ebgp_recv_dmz_info,json=ebgpRecvDmzInfo,proto3" json:"ebgp_recv_dmz_info,omitempty"`
	EbgpSendDmzInfo                                *BgpConfigInfo_ `protobuf:"bytes,89,opt,name=ebgp_send_dmz_info,json=ebgpSendDmzInfo,proto3" json:"ebgp_send_dmz_info,omitempty"`
	TtlSecurityInfo                                *BgpConfigInfo_ `protobuf:"bytes,90,opt,name=ttl_security_info,json=ttlSecurityInfo,proto3" json:"ttl_security_info,omitempty"`
	Suppress4BbyteAsInfo                           *BgpConfigInfo_ `protobuf:"bytes,91,opt,name=suppress4_bbyte_as_info,json=suppress4BbyteAsInfo,proto3" json:"suppress4_bbyte_as_info,omitempty"`
	SessionOpenModeInfo                            *BgpConfigInfo_ `protobuf:"bytes,92,opt,name=session_open_mode_info,json=sessionOpenModeInfo,proto3" json:"session_open_mode_info,omitempty"`
	BfdInfo                                        *BgpConfigInfo_ `protobuf:"bytes,93,opt,name=bfd_info,json=bfdInfo,proto3" json:"bfd_info,omitempty"`
	BfdMinintervalInfo                             *BgpConfigInfo_ `protobuf:"bytes,94,opt,name=bfd_mininterval_info,json=bfdMinintervalInfo,proto3" json:"bfd_mininterval_info,omitempty"`
	BfdMultiplierInfo                              *BgpConfigInfo_ `protobuf:"bytes,95,opt,name=bfd_multiplier_info,json=bfdMultiplierInfo,proto3" json:"bfd_multiplier_info,omitempty"`
	TosInfo                                        *BgpConfigInfo_ `protobuf:"bytes,96,opt,name=tos_info,json=tosInfo,proto3" json:"tos_info,omitempty"`
	NsrDisabledInfo                                *BgpConfigInfo_ `protobuf:"bytes,97,opt,name=nsr_disabled_info,json=nsrDisabledInfo,proto3" json:"nsr_disabled_info,omitempty"`
	GracefulRestartDisabledInfo                    *BgpConfigInfo_ `protobuf:"bytes,98,opt,name=graceful_restart_disabled_info,json=gracefulRestartDisabledInfo,proto3" json:"graceful_restart_disabled_info,omitempty"`
	NbrRestartTimeInfo                             *BgpConfigInfo_ `protobuf:"bytes,99,opt,name=nbr_restart_time_info,json=nbrRestartTimeInfo,proto3" json:"nbr_restart_time_info,omitempty"`
	NbrStalePathTimeInfo                           *BgpConfigInfo_ `protobuf:"bytes,100,opt,name=nbr_stale_path_time_info,json=nbrStalePathTimeInfo,proto3" json:"nbr_stale_path_time_info,omitempty"`
	NbrEnforceFirstAsInfo                          *BgpConfigInfo_ `protobuf:"bytes,101,opt,name=nbr_enforce_first_as_info,json=nbrEnforceFirstAsInfo,proto3" json:"nbr_enforce_first_as_info,omitempty"`
	ClusterIdInfo                                  *BgpConfigInfo_ `protobuf:"bytes,102,opt,name=cluster_id_info,json=clusterIdInfo,proto3" json:"cluster_id_info,omitempty"`
	IgnoreConnectedInfo                            *BgpConfigInfo_ `protobuf:"bytes,103,opt,name=ignore_connected_info,json=ignoreConnectedInfo,proto3" json:"ignore_connected_info,omitempty"`
	InternalVpnClientInfo                          *BgpConfigInfo_ `protobuf:"bytes,104,opt,name=internal_vpn_client_info,json=internalVpnClientInfo,proto3" json:"internal_vpn_client_info,omitempty"`
	AddpathSendCapabilityInfo                      *BgpConfigInfo_ `protobuf:"bytes,105,opt,name=addpath_send_capability_info,json=addpathSendCapabilityInfo,proto3" json:"addpath_send_capability_info,omitempty"`
	AddpathReceiveCapabilityInfo                   *BgpConfigInfo_ `protobuf:"bytes,106,opt,name=addpath_receive_capability_info,json=addpathReceiveCapabilityInfo,proto3" json:"addpath_receive_capability_info,omitempty"`
	EgressPeerEngineeringInfo                      *BgpConfigInfo_ `protobuf:"bytes,107,opt,name=egress_peer_engineering_info,json=egressPeerEngineeringInfo,proto3" json:"egress_peer_engineering_info,omitempty"`
	UpdateErrorHandlingNoResetInfo                 *BgpConfigInfo_ `protobuf:"bytes,108,opt,name=update_error_handling_no_reset_info,json=updateErrorHandlingNoResetInfo,proto3" json:"update_error_handling_no_reset_info,omitempty"`
	PrefixValidationDisableInfo                    *BgpConfigInfo_ `protobuf:"bytes,109,opt,name=prefix_validation_disable_info,json=prefixValidationDisableInfo,proto3" json:"prefix_validation_disable_info,omitempty"`
	PrefixValidationUseValiditInfo                 *BgpConfigInfo_ `protobuf:"bytes,110,opt,name=prefix_validation_use_validit_info,json=prefixValidationUseValiditInfo,proto3" json:"prefix_validation_use_validit_info,omitempty"`
	PrefixValidationAllowInvalidInfo               *BgpConfigInfo_ `protobuf:"bytes,111,opt,name=prefix_validation_allow_invalid_info,json=prefixValidationAllowInvalidInfo,proto3" json:"prefix_validation_allow_invalid_info,omitempty"`
	PrefixValidationSignalIbgpInfo                 *BgpConfigInfo_ `protobuf:"bytes,112,opt,name=prefix_validation_signal_ibgp_info,json=prefixValidationSignalIbgpInfo,proto3" json:"prefix_validation_signal_ibgp_info,omitempty"`
	NeighborUpdateFilterExistsInfo                 *BgpConfigInfo_ `protobuf:"bytes,113,opt,name=neighbor_update_filter_exists_info,json=neighborUpdateFilterExistsInfo,proto3" json:"neighbor_update_filter_exists_info,omitempty"`
	NeighborUpdateFilterMessageBufferCountInfo     *BgpConfigInfo_ `protobuf:"bytes,114,opt,name=neighbor_update_filter_message_buffer_count_info,json=neighborUpdateFilterMessageBufferCountInfo,proto3" json:"neighbor_update_filter_message_buffer_count_info,omitempty"`
	NeighborUpdateFilterSyslogDisableInfo          *BgpConfigInfo_ `protobuf:"bytes,115,opt,name=neighbor_update_filter_syslog_disable_info,json=neighborUpdateFilterSyslogDisableInfo,proto3" json:"neighbor_update_filter_syslog_disable_info,omitempty"`
	NeighborUpdateFilterAttributeInfo              *BgpConfigInfo_ `protobuf:"bytes,116,opt,name=neighbor_update_filter_attribute_info,json=neighborUpdateFilterAttributeInfo,proto3" json:"neighbor_update_filter_attribute_info,omitempty"`
	GracefulShutdownInfo                           *BgpConfigInfo_ `protobuf:"bytes,117,opt,name=graceful_shutdown_info,json=gracefulShutdownInfo,proto3" json:"graceful_shutdown_info,omitempty"`
	GracefulShutdownLocPrefInfo                    *BgpConfigInfo_ `protobuf:"bytes,118,opt,name=graceful_shutdown_loc_pref_info,json=gracefulShutdownLocPrefInfo,proto3" json:"graceful_shutdown_loc_pref_info,omitempty"`
	GracefulShutdownAsPrependsInfo                 *BgpConfigInfo_ `protobuf:"bytes,119,opt,name=graceful_shutdown_as_prepends_info,json=gracefulShutdownAsPrependsInfo,proto3" json:"graceful_shutdown_as_prepends_info,omitempty"`
	GracefulShutdownActivateInfo                   *BgpConfigInfo_ `protobuf:"bytes,120,opt,name=graceful_shutdown_activate_info,json=gracefulShutdownActivateInfo,proto3" json:"graceful_shutdown_activate_info,omitempty"`
	CapabilityNegotiationSuppressedInfo            *BgpConfigInfo_ `protobuf:"bytes,121,opt,name=capability_negotiation_suppressed_info,json=capabilityNegotiationSuppressedInfo,proto3" json:"capability_negotiation_suppressed_info,omitempty"`
	LocalAsReplaceAs                               bool            `protobuf:"varint,122,opt,name=local_as_replace_as,json=localAsReplaceAs,proto3" json:"local_as_replace_as,omitempty"`
	LocalAsDualAs                                  bool            `protobuf:"varint,123,opt,name=local_as_dual_as,json=localAsDualAs,proto3" json:"local_as_dual_as,omitempty"`
	NeighborRemoteAsListInfo                       *BgpConfigInfo_ `protobuf:"bytes,124,opt,name=neighbor_remote_as_list_info,json=neighborRemoteAsListInfo,proto3" json:"neighbor_remote_as_list_info,omitempty"`
	MaxPeersInfo                                   *BgpConfigInfo_ `protobuf:"bytes,125,opt,name=max_peers_info,json=maxPeersInfo,proto3" json:"max_peers_info,omitempty"`
	IdleWatchTimeInfo                              *BgpConfigInfo_ `protobuf:"bytes,126,opt,name=idle_watch_time_info,json=idleWatchTimeInfo,proto3" json:"idle_watch_time_info,omitempty"`
	XXX_NoUnkeyedLiteral                           struct{}        `json:"-"`
	XXX_unrecognized                               []byte          `json:"-"`
	XXX_sizecache                                  int32           `json:"-"`
}

func (m *BgpAfIndep_) Reset()         { *m = BgpAfIndep_{} }
func (m *BgpAfIndep_) String() string { return proto.CompactTextString(m) }
func (*BgpAfIndep_) ProtoMessage()    {}
func (*BgpAfIndep_) Descriptor() ([]byte, []int) {
	return fileDescriptor_987a149f58a2b9ee, []int{9}
}

func (m *BgpAfIndep_) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BgpAfIndep_.Unmarshal(m, b)
}
func (m *BgpAfIndep_) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BgpAfIndep_.Marshal(b, m, deterministic)
}
func (m *BgpAfIndep_) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BgpAfIndep_.Merge(m, src)
}
func (m *BgpAfIndep_) XXX_Size() int {
	return xxx_messageInfo_BgpAfIndep_.Size(m)
}
func (m *BgpAfIndep_) XXX_DiscardUnknown() {
	xxx_messageInfo_BgpAfIndep_.DiscardUnknown(m)
}

var xxx_messageInfo_BgpAfIndep_ proto.InternalMessageInfo

func (m *BgpAfIndep_) GetRemoteAsNumberXx() uint32 {
	if m != nil {
		return m.RemoteAsNumberXx
	}
	return 0
}

func (m *BgpAfIndep_) GetRemoteAsNumberYy() uint32 {
	if m != nil {
		return m.RemoteAsNumberYy
	}
	return 0
}

func (m *BgpAfIndep_) GetConfiguredSpeakerId() uint32 {
	if m != nil {
		return m.ConfiguredSpeakerId
	}
	return 0
}

func (m *BgpAfIndep_) GetTcpMss() uint32 {
	if m != nil {
		return m.TcpMss
	}
	return 0
}

func (m *BgpAfIndep_) GetMinAdvertisementInterval() uint32 {
	if m != nil {
		return m.MinAdvertisementInterval
	}
	return 0
}

func (m *BgpAfIndep_) GetMinAdvertisementIntervalMsecs() uint32 {
	if m != nil {
		return m.MinAdvertisementIntervalMsecs
	}
	return 0
}

func (m *BgpAfIndep_) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *BgpAfIndep_) GetEbgpHopCount() uint32 {
	if m != nil {
		return m.EbgpHopCount
	}
	return 0
}

func (m *BgpAfIndep_) GetBmpServers() uint32 {
	if m != nil {
		return m.BmpServers
	}
	return 0
}

func (m *BgpAfIndep_) GetIsEbgpMultihopBgpMplsForwardingDisabled() bool {
	if m != nil {
		return m.IsEbgpMultihopBgpMplsForwardingDisabled
	}
	return false
}

func (m *BgpAfIndep_) GetKeychain() string {
	if m != nil {
		return m.Keychain
	}
	return ""
}

func (m *BgpAfIndep_) GetLocalAsNumberXx() uint32 {
	if m != nil {
		return m.LocalAsNumberXx
	}
	return 0
}

func (m *BgpAfIndep_) GetLocalAsNumberYy() uint32 {
	if m != nil {
		return m.LocalAsNumberYy
	}
	return 0
}

func (m *BgpAfIndep_) GetLocalAsNoPrepend() bool {
	if m != nil {
		return m.LocalAsNoPrepend
	}
	return false
}

func (m *BgpAfIndep_) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func (m *BgpAfIndep_) GetSocketBufferReceiveSize() uint32 {
	if m != nil {
		return m.SocketBufferReceiveSize
	}
	return 0
}

func (m *BgpAfIndep_) GetBgpBufferReceiveSize() uint32 {
	if m != nil {
		return m.BgpBufferReceiveSize
	}
	return 0
}

func (m *BgpAfIndep_) GetSocketBufferSendSize() uint32 {
	if m != nil {
		return m.SocketBufferSendSize
	}
	return 0
}

func (m *BgpAfIndep_) GetBgpBufferSendSize() uint32 {
	if m != nil {
		return m.BgpBufferSendSize
	}
	return 0
}

func (m *BgpAfIndep_) GetAdminstrativeShutdown() bool {
	if m != nil {
		return m.AdminstrativeShutdown
	}
	return false
}

func (m *BgpAfIndep_) GetKeepaliveInterval() uint32 {
	if m != nil {
		return m.KeepaliveInterval
	}
	return 0
}

func (m *BgpAfIndep_) GetHoldTimeValue() uint32 {
	if m != nil {
		return m.HoldTimeValue
	}
	return 0
}

func (m *BgpAfIndep_) GetMinAccHoldTimeValue() uint32 {
	if m != nil {
		return m.MinAccHoldTimeValue
	}
	return 0
}

func (m *BgpAfIndep_) GetLocalIpAddress() *BgpAddrtype {
	if m != nil {
		return m.LocalIpAddress
	}
	return nil
}

func (m *BgpAfIndep_) GetMsgLogInBufCount() uint32 {
	if m != nil {
		return m.MsgLogInBufCount
	}
	return 0
}

func (m *BgpAfIndep_) GetMsgLogOutBufCount() uint32 {
	if m != nil {
		return m.MsgLogOutBufCount
	}
	return 0
}

func (m *BgpAfIndep_) GetRouteUpdatesSource() string {
	if m != nil {
		return m.RouteUpdatesSource
	}
	return ""
}

func (m *BgpAfIndep_) GetDmzLinkBandwidth() uint32 {
	if m != nil {
		return m.DmzLinkBandwidth
	}
	return 0
}

func (m *BgpAfIndep_) GetEbgpRecvDmz() uint32 {
	if m != nil {
		return m.EbgpRecvDmz
	}
	return 0
}

func (m *BgpAfIndep_) GetEbgpSendDmzMode() string {
	if m != nil {
		return m.EbgpSendDmzMode
	}
	return ""
}

func (m *BgpAfIndep_) GetTtlSecurity() uint32 {
	if m != nil {
		return m.TtlSecurity
	}
	return 0
}

func (m *BgpAfIndep_) GetSuppress4ByteAs() uint32 {
	if m != nil {
		return m.Suppress4ByteAs
	}
	return 0
}

func (m *BgpAfIndep_) GetCapabilityNegotiationSuppressed() uint32 {
	if m != nil {
		return m.CapabilityNegotiationSuppressed
	}
	return 0
}

func (m *BgpAfIndep_) GetSessionOpenMode() string {
	if m != nil {
		return m.SessionOpenMode
	}
	return ""
}

func (m *BgpAfIndep_) GetBfd() uint32 {
	if m != nil {
		return m.Bfd
	}
	return 0
}

func (m *BgpAfIndep_) GetBfdMininterval() uint32 {
	if m != nil {
		return m.BfdMininterval
	}
	return 0
}

func (m *BgpAfIndep_) GetBfdMultiplier() uint32 {
	if m != nil {
		return m.BfdMultiplier
	}
	return 0
}

func (m *BgpAfIndep_) GetTosTypeInfo() uint32 {
	if m != nil {
		return m.TosTypeInfo
	}
	return 0
}

func (m *BgpAfIndep_) GetTosValueInfo() uint32 {
	if m != nil {
		return m.TosValueInfo
	}
	return 0
}

func (m *BgpAfIndep_) GetNsrDisabled() uint32 {
	if m != nil {
		return m.NsrDisabled
	}
	return 0
}

func (m *BgpAfIndep_) GetGracefulRestartDisabled() uint32 {
	if m != nil {
		return m.GracefulRestartDisabled
	}
	return 0
}

func (m *BgpAfIndep_) GetNbrRestartTime() uint32 {
	if m != nil {
		return m.NbrRestartTime
	}
	return 0
}

func (m *BgpAfIndep_) GetNbrStalePathTime() uint32 {
	if m != nil {
		return m.NbrStalePathTime
	}
	return 0
}

func (m *BgpAfIndep_) GetNbrEnforceFirstAsStatus() bool {
	if m != nil {
		return m.NbrEnforceFirstAsStatus
	}
	return false
}

func (m *BgpAfIndep_) GetNbrClusterIdTypeInfo() uint32 {
	if m != nil {
		return m.NbrClusterIdTypeInfo
	}
	return 0
}

func (m *BgpAfIndep_) GetNbrClusterIdInfo() uint32 {
	if m != nil {
		return m.NbrClusterIdInfo
	}
	return 0
}

func (m *BgpAfIndep_) GetIgnoreConnectedCheck() bool {
	if m != nil {
		return m.IgnoreConnectedCheck
	}
	return false
}

func (m *BgpAfIndep_) GetInternalVpnClient() bool {
	if m != nil {
		return m.InternalVpnClient
	}
	return false
}

func (m *BgpAfIndep_) GetAddpathSendCapability() uint32 {
	if m != nil {
		return m.AddpathSendCapability
	}
	return 0
}

func (m *BgpAfIndep_) GetUpdateErrorHandlingNoReset() uint32 {
	if m != nil {
		return m.UpdateErrorHandlingNoReset
	}
	return 0
}

func (m *BgpAfIndep_) GetAddpathReceiveCapability() uint32 {
	if m != nil {
		return m.AddpathReceiveCapability
	}
	return 0
}

func (m *BgpAfIndep_) GetEgressPeerEngineering() uint32 {
	if m != nil {
		return m.EgressPeerEngineering
	}
	return 0
}

func (m *BgpAfIndep_) GetPrefixValidationDisable() uint32 {
	if m != nil {
		return m.PrefixValidationDisable
	}
	return 0
}

func (m *BgpAfIndep_) GetBestpathUseOriginAsValidity() uint32 {
	if m != nil {
		return m.BestpathUseOriginAsValidity
	}
	return 0
}

func (m *BgpAfIndep_) GetPrefixValidationAllowInvalid() uint32 {
	if m != nil {
		return m.PrefixValidationAllowInvalid
	}
	return 0
}

func (m *BgpAfIndep_) GetPrefixValidationSignalIbgp() uint32 {
	if m != nil {
		return m.PrefixValidationSignalIbgp
	}
	return 0
}

func (m *BgpAfIndep_) GetNeighborUpdateFilterExists() bool {
	if m != nil {
		return m.NeighborUpdateFilterExists
	}
	return false
}

func (m *BgpAfIndep_) GetNeighborUpdateFilterMessageBufferCount() uint32 {
	if m != nil {
		return m.NeighborUpdateFilterMessageBufferCount
	}
	return 0
}

func (m *BgpAfIndep_) GetNeighborUpdateFilterMessageBufferIsNonCircular() bool {
	if m != nil {
		return m.NeighborUpdateFilterMessageBufferIsNonCircular
	}
	return false
}

func (m *BgpAfIndep_) GetNeighborUpdateFilterLoggingDisable() bool {
	if m != nil {
		return m.NeighborUpdateFilterLoggingDisable
	}
	return false
}

func (m *BgpAfIndep_) GetNeighborUpdateFilterAttributeFilterGroupName() string {
	if m != nil {
		return m.NeighborUpdateFilterAttributeFilterGroupName
	}
	return ""
}

func (m *BgpAfIndep_) GetGracefulShutdownExists() uint32 {
	if m != nil {
		return m.GracefulShutdownExists
	}
	return 0
}

func (m *BgpAfIndep_) GetGracefulShutdownLocPref() uint32 {
	if m != nil {
		return m.GracefulShutdownLocPref
	}
	return 0
}

func (m *BgpAfIndep_) GetGracefulShutdownAsPrepends() uint32 {
	if m != nil {
		return m.GracefulShutdownAsPrepends
	}
	return 0
}

func (m *BgpAfIndep_) GetGracefulShutdownActivate() uint32 {
	if m != nil {
		return m.GracefulShutdownActivate
	}
	return 0
}

func (m *BgpAfIndep_) GetNeighborRemoteAsListGroupName() string {
	if m != nil {
		return m.NeighborRemoteAsListGroupName
	}
	return ""
}

func (m *BgpAfIndep_) GetMaxPeers() uint32 {
	if m != nil {
		return m.MaxPeers
	}
	return 0
}

func (m *BgpAfIndep_) GetIdleWatchTime() uint32 {
	if m != nil {
		return m.IdleWatchTime
	}
	return 0
}

func (m *BgpAfIndep_) GetRemoteAsInfo() *BgpConfigInfo_ {
	if m != nil {
		return m.RemoteAsInfo
	}
	return nil
}

func (m *BgpAfIndep_) GetSpeakerIdInfo() *BgpConfigInfo_ {
	if m != nil {
		return m.SpeakerIdInfo
	}
	return nil
}

func (m *BgpAfIndep_) GetMinAdvertisementInfo() *BgpConfigInfo_ {
	if m != nil {
		return m.MinAdvertisementInfo
	}
	return nil
}

func (m *BgpAfIndep_) GetDescriptionInfo() *BgpConfigInfo_ {
	if m != nil {
		return m.DescriptionInfo
	}
	return nil
}

func (m *BgpAfIndep_) GetEbgpHopCountInfo() *BgpConfigInfo_ {
	if m != nil {
		return m.EbgpHopCountInfo
	}
	return nil
}

func (m *BgpAfIndep_) GetTcpmssInfo() *BgpConfigInfo_ {
	if m != nil {
		return m.TcpmssInfo
	}
	return nil
}

func (m *BgpAfIndep_) GetBmpServersInfo() *BgpConfigInfo_ {
	if m != nil {
		return m.BmpServersInfo
	}
	return nil
}

func (m *BgpAfIndep_) GetKeychainInfo() *BgpConfigInfo_ {
	if m != nil {
		return m.KeychainInfo
	}
	return nil
}

func (m *BgpAfIndep_) GetLocalAsInfo() *BgpConfigInfo_ {
	if m != nil {
		return m.LocalAsInfo
	}
	return nil
}

func (m *BgpAfIndep_) GetPasswordInfo() *BgpConfigInfo_ {
	if m != nil {
		return m.PasswordInfo
	}
	return nil
}

func (m *BgpAfIndep_) GetReceiveBufferInfo() *BgpConfigInfo_ {
	if m != nil {
		return m.ReceiveBufferInfo
	}
	return nil
}

func (m *BgpAfIndep_) GetSendBufferInfo() *BgpConfigInfo_ {
	if m != nil {
		return m.SendBufferInfo
	}
	return nil
}

func (m *BgpAfIndep_) GetShutdownInfo() *BgpConfigInfo_ {
	if m != nil {
		return m.ShutdownInfo
	}
	return nil
}

func (m *BgpAfIndep_) GetTimersInfo() *BgpConfigInfo_ {
	if m != nil {
		return m.TimersInfo
	}
	return nil
}

func (m *BgpAfIndep_) GetLocalAddressInfo() *BgpConfigInfo_ {
	if m != nil {
		return m.LocalAddressInfo
	}
	return nil
}

func (m *BgpAfIndep_) GetMsgLogInInfo() *BgpConfigInfo_ {
	if m != nil {
		return m.MsgLogInInfo
	}
	return nil
}

func (m *BgpAfIndep_) GetMsgLogOutInfo() *BgpConfigInfo_ {
	if m != nil {
		return m.MsgLogOutInfo
	}
	return nil
}

func (m *BgpAfIndep_) GetUpdateSourceInfo() *BgpConfigInfo_ {
	if m != nil {
		return m.UpdateSourceInfo
	}
	return nil
}

func (m *BgpAfIndep_) GetDmzLinkBandwidthInfo() *BgpConfigInfo_ {
	if m != nil {
		return m.DmzLinkBandwidthInfo
	}
	return nil
}

func (m *BgpAfIndep_) GetEbgpRecvDmzInfo() *BgpConfigInfo_ {
	if m != nil {
		return m.EbgpRecvDmzInfo
	}
	return nil
}

func (m *BgpAfIndep_) GetEbgpSendDmzInfo() *BgpConfigInfo_ {
	if m != nil {
		return m.EbgpSendDmzInfo
	}
	return nil
}

func (m *BgpAfIndep_) GetTtlSecurityInfo() *BgpConfigInfo_ {
	if m != nil {
		return m.TtlSecurityInfo
	}
	return nil
}

func (m *BgpAfIndep_) GetSuppress4BbyteAsInfo() *BgpConfigInfo_ {
	if m != nil {
		return m.Suppress4BbyteAsInfo
	}
	return nil
}

func (m *BgpAfIndep_) GetSessionOpenModeInfo() *BgpConfigInfo_ {
	if m != nil {
		return m.SessionOpenModeInfo
	}
	return nil
}

func (m *BgpAfIndep_) GetBfdInfo() *BgpConfigInfo_ {
	if m != nil {
		return m.BfdInfo
	}
	return nil
}

func (m *BgpAfIndep_) GetBfdMinintervalInfo() *BgpConfigInfo_ {
	if m != nil {
		return m.BfdMinintervalInfo
	}
	return nil
}

func (m *BgpAfIndep_) GetBfdMultiplierInfo() *BgpConfigInfo_ {
	if m != nil {
		return m.BfdMultiplierInfo
	}
	return nil
}

func (m *BgpAfIndep_) GetTosInfo() *BgpConfigInfo_ {
	if m != nil {
		return m.TosInfo
	}
	return nil
}

func (m *BgpAfIndep_) GetNsrDisabledInfo() *BgpConfigInfo_ {
	if m != nil {
		return m.NsrDisabledInfo
	}
	return nil
}

func (m *BgpAfIndep_) GetGracefulRestartDisabledInfo() *BgpConfigInfo_ {
	if m != nil {
		return m.GracefulRestartDisabledInfo
	}
	return nil
}

func (m *BgpAfIndep_) GetNbrRestartTimeInfo() *BgpConfigInfo_ {
	if m != nil {
		return m.NbrRestartTimeInfo
	}
	return nil
}

func (m *BgpAfIndep_) GetNbrStalePathTimeInfo() *BgpConfigInfo_ {
	if m != nil {
		return m.NbrStalePathTimeInfo
	}
	return nil
}

func (m *BgpAfIndep_) GetNbrEnforceFirstAsInfo() *BgpConfigInfo_ {
	if m != nil {
		return m.NbrEnforceFirstAsInfo
	}
	return nil
}

func (m *BgpAfIndep_) GetClusterIdInfo() *BgpConfigInfo_ {
	if m != nil {
		return m.ClusterIdInfo
	}
	return nil
}

func (m *BgpAfIndep_) GetIgnoreConnectedInfo() *BgpConfigInfo_ {
	if m != nil {
		return m.IgnoreConnectedInfo
	}
	return nil
}

func (m *BgpAfIndep_) GetInternalVpnClientInfo() *BgpConfigInfo_ {
	if m != nil {
		return m.InternalVpnClientInfo
	}
	return nil
}

func (m *BgpAfIndep_) GetAddpathSendCapabilityInfo() *BgpConfigInfo_ {
	if m != nil {
		return m.AddpathSendCapabilityInfo
	}
	return nil
}

func (m *BgpAfIndep_) GetAddpathReceiveCapabilityInfo() *BgpConfigInfo_ {
	if m != nil {
		return m.AddpathReceiveCapabilityInfo
	}
	return nil
}

func (m *BgpAfIndep_) GetEgressPeerEngineeringInfo() *BgpConfigInfo_ {
	if m != nil {
		return m.EgressPeerEngineeringInfo
	}
	return nil
}

func (m *BgpAfIndep_) GetUpdateErrorHandlingNoResetInfo() *BgpConfigInfo_ {
	if m != nil {
		return m.UpdateErrorHandlingNoResetInfo
	}
	return nil
}

func (m *BgpAfIndep_) GetPrefixValidationDisableInfo() *BgpConfigInfo_ {
	if m != nil {
		return m.PrefixValidationDisableInfo
	}
	return nil
}

func (m *BgpAfIndep_) GetPrefixValidationUseValiditInfo() *BgpConfigInfo_ {
	if m != nil {
		return m.PrefixValidationUseValiditInfo
	}
	return nil
}

func (m *BgpAfIndep_) GetPrefixValidationAllowInvalidInfo() *BgpConfigInfo_ {
	if m != nil {
		return m.PrefixValidationAllowInvalidInfo
	}
	return nil
}

func (m *BgpAfIndep_) GetPrefixValidationSignalIbgpInfo() *BgpConfigInfo_ {
	if m != nil {
		return m.PrefixValidationSignalIbgpInfo
	}
	return nil
}

func (m *BgpAfIndep_) GetNeighborUpdateFilterExistsInfo() *BgpConfigInfo_ {
	if m != nil {
		return m.NeighborUpdateFilterExistsInfo
	}
	return nil
}

func (m *BgpAfIndep_) GetNeighborUpdateFilterMessageBufferCountInfo() *BgpConfigInfo_ {
	if m != nil {
		return m.NeighborUpdateFilterMessageBufferCountInfo
	}
	return nil
}

func (m *BgpAfIndep_) GetNeighborUpdateFilterSyslogDisableInfo() *BgpConfigInfo_ {
	if m != nil {
		return m.NeighborUpdateFilterSyslogDisableInfo
	}
	return nil
}

func (m *BgpAfIndep_) GetNeighborUpdateFilterAttributeInfo() *BgpConfigInfo_ {
	if m != nil {
		return m.NeighborUpdateFilterAttributeInfo
	}
	return nil
}

func (m *BgpAfIndep_) GetGracefulShutdownInfo() *BgpConfigInfo_ {
	if m != nil {
		return m.GracefulShutdownInfo
	}
	return nil
}

func (m *BgpAfIndep_) GetGracefulShutdownLocPrefInfo() *BgpConfigInfo_ {
	if m != nil {
		return m.GracefulShutdownLocPrefInfo
	}
	return nil
}

func (m *BgpAfIndep_) GetGracefulShutdownAsPrependsInfo() *BgpConfigInfo_ {
	if m != nil {
		return m.GracefulShutdownAsPrependsInfo
	}
	return nil
}

func (m *BgpAfIndep_) GetGracefulShutdownActivateInfo() *BgpConfigInfo_ {
	if m != nil {
		return m.GracefulShutdownActivateInfo
	}
	return nil
}

func (m *BgpAfIndep_) GetCapabilityNegotiationSuppressedInfo() *BgpConfigInfo_ {
	if m != nil {
		return m.CapabilityNegotiationSuppressedInfo
	}
	return nil
}

func (m *BgpAfIndep_) GetLocalAsReplaceAs() bool {
	if m != nil {
		return m.LocalAsReplaceAs
	}
	return false
}

func (m *BgpAfIndep_) GetLocalAsDualAs() bool {
	if m != nil {
		return m.LocalAsDualAs
	}
	return false
}

func (m *BgpAfIndep_) GetNeighborRemoteAsListInfo() *BgpConfigInfo_ {
	if m != nil {
		return m.NeighborRemoteAsListInfo
	}
	return nil
}

func (m *BgpAfIndep_) GetMaxPeersInfo() *BgpConfigInfo_ {
	if m != nil {
		return m.MaxPeersInfo
	}
	return nil
}

func (m *BgpAfIndep_) GetIdleWatchTimeInfo() *BgpConfigInfo_ {
	if m != nil {
		return m.IdleWatchTimeInfo
	}
	return nil
}

type BgpAfDep_ struct {
	HasOrfCapability                          uint32          `protobuf:"varint,1,opt,name=has_orf_capability,json=hasOrfCapability,proto3" json:"has_orf_capability,omitempty"`
	IsDefaultOriginateNotDisabled             bool            `protobuf:"varint,2,opt,name=is_default_originate_not_disabled,json=isDefaultOriginateNotDisabled,proto3" json:"is_default_originate_not_disabled,omitempty"`
	DefaultOriginateRoutePolicy               string          `protobuf:"bytes,3,opt,name=default_originate_route_policy,json=defaultOriginateRoutePolicy,proto3" json:"default_originate_route_policy,omitempty"`
	MaxPrefixes                               uint32          `protobuf:"varint,4,opt,name=max_prefixes,json=maxPrefixes,proto3" json:"max_prefixes,omitempty"`
	MaxPrefixWarnThreshold                    uint32          `protobuf:"varint,5,opt,name=max_prefix_warn_threshold,json=maxPrefixWarnThreshold,proto3" json:"max_prefix_warn_threshold,omitempty"`
	IsMaxPrefixWarnOnly                       bool            `protobuf:"varint,6,opt,name=is_max_prefix_warn_only,json=isMaxPrefixWarnOnly,proto3" json:"is_max_prefix_warn_only,omitempty"`
	MaxPrefixRestartTime                      uint32          `protobuf:"varint,7,opt,name=max_prefix_restart_time,json=maxPrefixRestartTime,proto3" json:"max_prefix_restart_time,omitempty"`
	OrrRootAddress                            *BgpAddrtype    `protobuf:"bytes,8,opt,name=orr_root_address,json=orrRootAddress,proto3" json:"orr_root_address,omitempty"`
	IsMaxPrefixDiscardExtraPaths              bool            `protobuf:"varint,9,opt,name=is_max_prefix_discard_extra_paths,json=isMaxPrefixDiscardExtraPaths,proto3" json:"is_max_prefix_discard_extra_paths,omitempty"`
	IsNextHopSelfDisabled                     bool            `protobuf:"varint,10,opt,name=is_next_hop_self_disabled,json=isNextHopSelfDisabled,proto3" json:"is_next_hop_self_disabled,omitempty"`
	IsNextHopUnchanged                        bool            `protobuf:"varint,11,opt,name=is_next_hop_unchanged,json=isNextHopUnchanged,proto3" json:"is_next_hop_unchanged,omitempty"`
	PermanentNetwork                          bool            `protobuf:"varint,12,opt,name=permanent_network,json=permanentNetwork,proto3" json:"permanent_network,omitempty"`
	RoutePolicyIn                             string          `protobuf:"bytes,13,opt,name=route_policy_in,json=routePolicyIn,proto3" json:"route_policy_in,omitempty"`
	RoutePolicyOut                            string          `protobuf:"bytes,14,opt,name=route_policy_out,json=routePolicyOut,proto3" json:"route_policy_out,omitempty"`
	PrefixOrfFilter                           string          `protobuf:"bytes,15,opt,name=prefix_orf_filter,json=prefixOrfFilter,proto3" json:"prefix_orf_filter,omitempty"`
	RemovePrivateAsOut                        bool            `protobuf:"varint,16,opt,name=remove_private_as_out,json=removePrivateAsOut,proto3" json:"remove_private_as_out,omitempty"`
	EntireAspathOut                           bool            `protobuf:"varint,17,opt,name=entire_aspath_out,json=entireAspathOut,proto3" json:"entire_aspath_out,omitempty"`
	RemovePrivateAsin                         bool            `protobuf:"varint,18,opt,name=remove_private_asin,json=removePrivateAsin,proto3" json:"remove_private_asin,omitempty"`
	EntireAspathIn                            bool            `protobuf:"varint,19,opt,name=entire_aspath_in,json=entireAspathIn,proto3" json:"entire_aspath_in,omitempty"`
	ClientRouteReflector                      bool            `protobuf:"varint,20,opt,name=client_route_reflector,json=clientRouteReflector,proto3" json:"client_route_reflector,omitempty"`
	AcceptRouteLegacyPeRt                     bool            `protobuf:"varint,21,opt,name=accept_route_legacy_pe_rt,json=acceptRouteLegacyPeRt,proto3" json:"accept_route_legacy_pe_rt,omitempty"`
	IsAfEnabled                               bool            `protobuf:"varint,22,opt,name=is_af_enabled,json=isAfEnabled,proto3" json:"is_af_enabled,omitempty"`
	SendCommunityAttribute                    bool            `protobuf:"varint,23,opt,name=send_community_attribute,json=sendCommunityAttribute,proto3" json:"send_community_attribute,omitempty"`
	SendGracefulShutCommunityAttributes       bool            `protobuf:"varint,24,opt,name=send_graceful_shut_community_attributes,json=sendGracefulShutCommunityAttributes,proto3" json:"send_graceful_shut_community_attributes,omitempty"`
	SendExtendedCommunityAttribute            bool            `protobuf:"varint,25,opt,name=send_extended_community_attribute,json=sendExtendedCommunityAttribute,proto3" json:"send_extended_community_attribute,omitempty"`
	SoftReconfigNotDisabled                   bool            `protobuf:"varint,26,opt,name=soft_reconfig_not_disabled,json=softReconfigNotDisabled,proto3" json:"soft_reconfig_not_disabled,omitempty"`
	AlwayUseSoftReconfig                      bool            `protobuf:"varint,27,opt,name=alway_use_soft_reconfig,json=alwayUseSoftReconfig,proto3" json:"alway_use_soft_reconfig,omitempty"`
	SiteOfOrigin                              string          `protobuf:"bytes,28,opt,name=site_of_origin,json=siteOfOrigin,proto3" json:"site_of_origin,omitempty"`
	DefaultWeight                             uint32          `protobuf:"varint,29,opt,name=default_weight,json=defaultWeight,proto3" json:"default_weight,omitempty"`
	DefaultAllowas                            uint32          `protobuf:"varint,30,opt,name=default_allowas,json=defaultAllowas,proto3" json:"default_allowas,omitempty"`
	AfLongLivedGracefulRestartStaleTimeSend   uint32          `protobuf:"varint,31,opt,name=af_long_lived_graceful_restart_stale_time_send,json=afLongLivedGracefulRestartStaleTimeSend,proto3" json:"af_long_lived_graceful_restart_stale_time_send,omitempty"`
	AfLongLivedGracefulRestartStaleTimeAccept uint32          `protobuf:"varint,32,opt,name=af_long_lived_graceful_restart_stale_time_accept,json=afLongLivedGracefulRestartStaleTimeAccept,proto3" json:"af_long_lived_graceful_restart_stale_time_accept,omitempty"`
	AfLongLivedGracefulRestartCapable         uint32          `protobuf:"varint,33,opt,name=af_long_lived_graceful_restart_capable,json=afLongLivedGracefulRestartCapable,proto3" json:"af_long_lived_graceful_restart_capable,omitempty"`
	IsAsOverrideDisabled                      bool            `protobuf:"varint,34,opt,name=is_as_override_disabled,json=isAsOverrideDisabled,proto3" json:"is_as_override_disabled,omitempty"`
	IsAigpEnabled                             bool            `protobuf:"varint,35,opt,name=is_aigp_enabled,json=isAigpEnabled,proto3" json:"is_aigp_enabled,omitempty"`
	IsAigpCostCommunityEnabled                bool            `protobuf:"varint,36,opt,name=is_aigp_cost_community_enabled,json=isAigpCostCommunityEnabled,proto3" json:"is_aigp_cost_community_enabled,omitempty"`
	IsAigpCostCommunityId                     uint32          `protobuf:"varint,37,opt,name=is_aigp_cost_community_id,json=isAigpCostCommunityId,proto3" json:"is_aigp_cost_community_id,omitempty"`
	IsAigpCostCommunityTransitive             uint32          `protobuf:"varint,38,opt,name=is_aigp_cost_community_transitive,json=isAigpCostCommunityTransitive,proto3" json:"is_aigp_cost_community_transitive,omitempty"`
	AigpCostCommunityPoi                      uint32          `protobuf:"varint,39,opt,name=aigp_cost_community_poi,json=aigpCostCommunityPoi,proto3" json:"aigp_cost_community_poi,omitempty"`
	IsAigpMedEnabled                          bool            `protobuf:"varint,40,opt,name=is_aigp_med_enabled,json=isAigpMedEnabled,proto3" json:"is_aigp_med_enabled,omitempty"`
	AcceptOwn                                 bool            `protobuf:"varint,41,opt,name=accept_own,json=acceptOwn,proto3" json:"accept_own,omitempty"`
	Multipath                                 bool            `protobuf:"varint,42,opt,name=multipath,proto3" json:"multipath,omitempty"`
	IsFspecValidEnabled                       bool            `protobuf:"varint,43,opt,name=is_fspec_valid_enabled,json=isFspecValidEnabled,proto3" json:"is_fspec_valid_enabled,omitempty"`
	IsNextHopUnchangedMpath                   bool            `protobuf:"varint,44,opt,name=is_next_hop_unchanged_mpath,json=isNextHopUnchangedMpath,proto3" json:"is_next_hop_unchanged_mpath,omitempty"`
	IsSendMcastAttrEnabled                    bool            `protobuf:"varint,45,opt,name=is_send_mcast_attr_enabled,json=isSendMcastAttrEnabled,proto3" json:"is_send_mcast_attr_enabled,omitempty"`
	AdvertiseV4                               uint32          `protobuf:"varint,46,opt,name=advertise_v4,json=advertiseV4,proto3" json:"advertise_v4,omitempty"`
	AdvertiseV6                               uint32          `protobuf:"varint,47,opt,name=advertise_v6,json=advertiseV6,proto3" json:"advertise_v6,omitempty"`
	AdvertiseL2VpnEvpn                        uint32          `protobuf:"varint,48,opt,name=advertise_l2vpn_evpn,json=advertiseL2vpnEvpn,proto3" json:"advertise_l2vpn_evpn,omitempty"`
	AdvertiseDisable                          uint32          `protobuf:"varint,49,opt,name=advertise_disable,json=advertiseDisable,proto3" json:"advertise_disable,omitempty"`
	AdvertiseDefVrfImpDisableV4               uint32          `protobuf:"varint,50,opt,name=advertise_def_vrf_imp_disable_v4,json=advertiseDefVrfImpDisableV4,proto3" json:"advertise_def_vrf_imp_disable_v4,omitempty"`
	AdvertiseDefVrfImpDisableV6               uint32          `protobuf:"varint,51,opt,name=advertise_def_vrf_imp_disable_v6,json=advertiseDefVrfImpDisableV6,proto3" json:"advertise_def_vrf_imp_disable_v6,omitempty"`
	AdvertiseVrfReImpDisableV4                uint32          `protobuf:"varint,52,opt,name=advertise_vrf_re_imp_disable_v4,json=advertiseVrfReImpDisableV4,proto3" json:"advertise_vrf_re_imp_disable_v4,omitempty"`
	AdvertiseVrfReImpDisableV6                uint32          `protobuf:"varint,53,opt,name=advertise_vrf_re_imp_disable_v6,json=advertiseVrfReImpDisableV6,proto3" json:"advertise_vrf_re_imp_disable_v6,omitempty"`
	EncapsulationType                         uint32          `protobuf:"varint,54,opt,name=encapsulation_type,json=encapsulationType,proto3" json:"encapsulation_type,omitempty"`
	Import                                    bool            `protobuf:"varint,55,opt,name=import,proto3" json:"import,omitempty"`
	ImportStitching                           bool            `protobuf:"varint,56,opt,name=import_stitching,json=importStitching,proto3" json:"import_stitching,omitempty"`
	ImportReoriginate                         bool            `protobuf:"varint,57,opt,name=import_reoriginate,json=importReoriginate,proto3" json:"import_reoriginate,omitempty"`
	ImportReoriginateStitching                bool            `protobuf:"varint,58,opt,name=import_reoriginate_stitching,json=importReoriginateStitching,proto3" json:"import_reoriginate_stitching,omitempty"`
	AdvertiseLocalLabeledRoute                uint32          `protobuf:"varint,59,opt,name=advertise_local_labeled_route,json=advertiseLocalLabeledRoute,proto3" json:"advertise_local_labeled_route,omitempty"`
	EnforceMultipleLabels                     uint32          `protobuf:"varint,60,opt,name=enforce_multiple_labels,json=enforceMultipleLabels,proto3" json:"enforce_multiple_labels,omitempty"`
	OrfCapabilityInfo                         *BgpConfigInfo_ `protobuf:"bytes,61,opt,name=orf_capability_info,json=orfCapabilityInfo,proto3" json:"orf_capability_info,omitempty"`
	DefaultOriginateInfo                      *BgpConfigInfo_ `protobuf:"bytes,62,opt,name=default_originate_info,json=defaultOriginateInfo,proto3" json:"default_originate_info,omitempty"`
	MaxPrefixesInfo                           *BgpConfigInfo_ `protobuf:"bytes,63,opt,name=max_prefixes_info,json=maxPrefixesInfo,proto3" json:"max_prefixes_info,omitempty"`
	OrrInfo                                   *BgpConfigInfo_ `protobuf:"bytes,64,opt,name=orr_info,json=orrInfo,proto3" json:"orr_info,omitempty"`
	NextHopSelfInfo                           *BgpConfigInfo_ `protobuf:"bytes,65,opt,name=next_hop_self_info,json=nextHopSelfInfo,proto3" json:"next_hop_self_info,omitempty"`
	NextHopUnchangedInfo                      *BgpConfigInfo_ `protobuf:"bytes,66,opt,name=next_hop_unchanged_info,json=nextHopUnchangedInfo,proto3" json:"next_hop_unchanged_info,omitempty"`
	RoutePolicyInInfo                         *BgpConfigInfo_ `protobuf:"bytes,67,opt,name=route_policy_in_info,json=routePolicyInInfo,proto3" json:"route_policy_in_info,omitempty"`
	RoutePolicyOutInfo                        *BgpConfigInfo_ `protobuf:"bytes,68,opt,name=route_policy_out_info,json=routePolicyOutInfo,proto3" json:"route_policy_out_info,omitempty"`
	PrefixFilterInfo                          *BgpConfigInfo_ `protobuf:"bytes,69,opt,name=prefix_filter_info,json=prefixFilterInfo,proto3" json:"prefix_filter_info,omitempty"`
	RemovePrivateAsInfo                       *BgpConfigInfo_ `protobuf:"bytes,70,opt,name=remove_private_as_info,json=removePrivateAsInfo,proto3" json:"remove_private_as_info,omitempty"`
	RemovePrivateAsInInfo                     *BgpConfigInfo_ `protobuf:"bytes,71,opt,name=remove_private_as_in_info,json=removePrivateAsInInfo,proto3" json:"remove_private_as_in_info,omitempty"`
	RouteReflectorInfo                        *BgpConfigInfo_ `protobuf:"bytes,72,opt,name=route_reflector_info,json=routeReflectorInfo,proto3" json:"route_reflector_info,omitempty"`
	LegacyPeRtInfo                            *BgpConfigInfo_ `protobuf:"bytes,73,opt,name=legacy_pe_rt_info,json=legacyPeRtInfo,proto3" json:"legacy_pe_rt_info,omitempty"`
	AfEnabledInfo                             *BgpConfigInfo_ `protobuf:"bytes,74,opt,name=af_enabled_info,json=afEnabledInfo,proto3" json:"af_enabled_info,omitempty"`
	SendCommunityInfo                         *BgpConfigInfo_ `protobuf:"bytes,75,opt,name=send_community_info,json=sendCommunityInfo,proto3" json:"send_community_info,omitempty"`
	SendGracefulShutdownCommunityInfo         *BgpConfigInfo_ `protobuf:"bytes,76,opt,name=send_graceful_shutdown_community_info,json=sendGracefulShutdownCommunityInfo,proto3" json:"send_graceful_shutdown_community_info,omitempty"`
	SendExtendedCommunityInfo                 *BgpConfigInfo_ `protobuf:"bytes,77,opt,name=send_extended_community_info,json=sendExtendedCommunityInfo,proto3" json:"send_extended_community_info,omitempty"`
	SoftReconfigInfo                          *BgpConfigInfo_ `protobuf:"bytes,78,opt,name=soft_reconfig_info,json=softReconfigInfo,proto3" json:"soft_reconfig_info,omitempty"`
	SoOInfo                                   *BgpConfigInfo_ `protobuf:"bytes,79,opt,name=so_o_info,json=soOInfo,proto3" json:"so_o_info,omitempty"`
	WeightInfo                                *BgpConfigInfo_ `protobuf:"bytes,80,opt,name=weight_info,json=weightInfo,proto3" json:"weight_info,omitempty"`
	AllowasInInfo                             *BgpConfigInfo_ `protobuf:"bytes,81,opt,name=allowas_in_info,json=allowasInInfo,proto3" json:"allowas_in_info,omitempty"`
	AfLongLivedGracefulStartStaleTimeInfo     *BgpConfigInfo_ `protobuf:"bytes,82,opt,name=af_long_lived_graceful_start_stale_time_info,json=afLongLivedGracefulStartStaleTimeInfo,proto3" json:"af_long_lived_graceful_start_stale_time_info,omitempty"`
	AfLongLivedGracefulStartCapableInfo       *BgpConfigInfo_ `protobuf:"bytes,83,opt,name=af_long_lived_graceful_start_capable_info,json=afLongLivedGracefulStartCapableInfo,proto3" json:"af_long_lived_graceful_start_capable_info,omitempty"`
	AsOverrideInfo                            *BgpConfigInfo_ `protobuf:"bytes,84,opt,name=as_override_info,json=asOverrideInfo,proto3" json:"as_override_info,omitempty"`
	AigpInfo                                  *BgpConfigInfo_ `protobuf:"bytes,85,opt,name=aigp_info,json=aigpInfo,proto3" json:"aigp_info,omitempty"`
	AigpCostCommunityInfo                     *BgpConfigInfo_ `protobuf:"bytes,86,opt,name=aigp_cost_community_info,json=aigpCostCommunityInfo,proto3" json:"aigp_cost_community_info,omitempty"`
	AigpMed                                   *BgpConfigInfo_ `protobuf:"bytes,87,opt,name=aigp_med,json=aigpMed,proto3" json:"aigp_med,omitempty"`
	AcceptOwnInfo                             *BgpConfigInfo_ `protobuf:"bytes,88,opt,name=accept_own_info,json=acceptOwnInfo,proto3" json:"accept_own_info,omitempty"`
	MultipathInfo                             *BgpConfigInfo_ `protobuf:"bytes,89,opt,name=multipath_info,json=multipathInfo,proto3" json:"multipath_info,omitempty"`
	FspecValidInfo                            *BgpConfigInfo_ `protobuf:"bytes,90,opt,name=fspec_valid_info,json=fspecValidInfo,proto3" json:"fspec_valid_info,omitempty"`
	NextHopUnchangedMpathInfo                 *BgpConfigInfo_ `protobuf:"bytes,91,opt,name=next_hop_unchanged_mpath_info,json=nextHopUnchangedMpathInfo,proto3" json:"next_hop_unchanged_mpath_info,omitempty"`
	PermanentNetworkInfo                      *BgpConfigInfo_ `protobuf:"bytes,92,opt,name=permanent_network_info,json=permanentNetworkInfo,proto3" json:"permanent_network_info,omitempty"`
	SendMcastAttrInfo                         *BgpConfigInfo_ `protobuf:"bytes,93,opt,name=send_mcast_attr_info,json=sendMcastAttrInfo,proto3" json:"send_mcast_attr_info,omitempty"`
	AdvertiseV4AfiInfo                        *BgpConfigInfo_ `protobuf:"bytes,94,opt,name=advertise_v4_afi_info,json=advertiseV4AfiInfo,proto3" json:"advertise_v4_afi_info,omitempty"`
	AdvertiseV6AfiInfo                        *BgpConfigInfo_ `protobuf:"bytes,95,opt,name=advertise_v6_afi_info,json=advertiseV6AfiInfo,proto3" json:"advertise_v6_afi_info,omitempty"`
	AdvertiseL2VpnEvpnAfiInfo                 *BgpConfigInfo_ `protobuf:"bytes,96,opt,name=advertise_l2vpn_evpn_afi_info,json=advertiseL2vpnEvpnAfiInfo,proto3" json:"advertise_l2vpn_evpn_afi_info,omitempty"`
	AdvertiseDisInfo                          *BgpConfigInfo_ `protobuf:"bytes,97,opt,name=advertise_dis_info,json=advertiseDisInfo,proto3" json:"advertise_dis_info,omitempty"`
	AdvertiseDefVrfImpDisableAfiV4Info        *BgpConfigInfo_ `protobuf:"bytes,98,opt,name=advertise_def_vrf_imp_disable_afi_v4_info,json=advertiseDefVrfImpDisableAfiV4Info,proto3" json:"advertise_def_vrf_imp_disable_afi_v4_info,omitempty"`
	AdvertiseDefVrfImpDisableAfiV6Info        *BgpConfigInfo_ `protobuf:"bytes,99,opt,name=advertise_def_vrf_imp_disable_afi_v6_info,json=advertiseDefVrfImpDisableAfiV6Info,proto3" json:"advertise_def_vrf_imp_disable_afi_v6_info,omitempty"`
	AdvertiseVrfReImpDisableAfiV4Info         *BgpConfigInfo_ `protobuf:"bytes,100,opt,name=advertise_vrf_re_imp_disable_afi_v4_info,json=advertiseVrfReImpDisableAfiV4Info,proto3" json:"advertise_vrf_re_imp_disable_afi_v4_info,omitempty"`
	AdvertiseVrfReImpDisableAfiV6Info         *BgpConfigInfo_ `protobuf:"bytes,101,opt,name=advertise_vrf_re_imp_disable_afi_v6_info,json=advertiseVrfReImpDisableAfiV6Info,proto3" json:"advertise_vrf_re_imp_disable_afi_v6_info,omitempty"`
	AfEncapsulationTypeInfo                   *BgpConfigInfo_ `protobuf:"bytes,102,opt,name=af_encapsulation_type_info,json=afEncapsulationTypeInfo,proto3" json:"af_encapsulation_type_info,omitempty"`
	ImportAfiInfo                             *BgpConfigInfo_ `protobuf:"bytes,103,opt,name=import_afi_info,json=importAfiInfo,proto3" json:"import_afi_info,omitempty"`
	AdvertiseLocalLabeledRouteInfo            *BgpConfigInfo_ `protobuf:"bytes,104,opt,name=advertise_local_labeled_route_info,json=advertiseLocalLabeledRouteInfo,proto3" json:"advertise_local_labeled_route_info,omitempty"`
	EnforceMultipleLabelsInfo                 *BgpConfigInfo_ `protobuf:"bytes,105,opt,name=enforce_multiple_labels_info,json=enforceMultipleLabelsInfo,proto3" json:"enforce_multiple_labels_info,omitempty"`
	XXX_NoUnkeyedLiteral                      struct{}        `json:"-"`
	XXX_unrecognized                          []byte          `json:"-"`
	XXX_sizecache                             int32           `json:"-"`
}

func (m *BgpAfDep_) Reset()         { *m = BgpAfDep_{} }
func (m *BgpAfDep_) String() string { return proto.CompactTextString(m) }
func (*BgpAfDep_) ProtoMessage()    {}
func (*BgpAfDep_) Descriptor() ([]byte, []int) {
	return fileDescriptor_987a149f58a2b9ee, []int{10}
}

func (m *BgpAfDep_) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BgpAfDep_.Unmarshal(m, b)
}
func (m *BgpAfDep_) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BgpAfDep_.Marshal(b, m, deterministic)
}
func (m *BgpAfDep_) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BgpAfDep_.Merge(m, src)
}
func (m *BgpAfDep_) XXX_Size() int {
	return xxx_messageInfo_BgpAfDep_.Size(m)
}
func (m *BgpAfDep_) XXX_DiscardUnknown() {
	xxx_messageInfo_BgpAfDep_.DiscardUnknown(m)
}

var xxx_messageInfo_BgpAfDep_ proto.InternalMessageInfo

func (m *BgpAfDep_) GetHasOrfCapability() uint32 {
	if m != nil {
		return m.HasOrfCapability
	}
	return 0
}

func (m *BgpAfDep_) GetIsDefaultOriginateNotDisabled() bool {
	if m != nil {
		return m.IsDefaultOriginateNotDisabled
	}
	return false
}

func (m *BgpAfDep_) GetDefaultOriginateRoutePolicy() string {
	if m != nil {
		return m.DefaultOriginateRoutePolicy
	}
	return ""
}

func (m *BgpAfDep_) GetMaxPrefixes() uint32 {
	if m != nil {
		return m.MaxPrefixes
	}
	return 0
}

func (m *BgpAfDep_) GetMaxPrefixWarnThreshold() uint32 {
	if m != nil {
		return m.MaxPrefixWarnThreshold
	}
	return 0
}

func (m *BgpAfDep_) GetIsMaxPrefixWarnOnly() bool {
	if m != nil {
		return m.IsMaxPrefixWarnOnly
	}
	return false
}

func (m *BgpAfDep_) GetMaxPrefixRestartTime() uint32 {
	if m != nil {
		return m.MaxPrefixRestartTime
	}
	return 0
}

func (m *BgpAfDep_) GetOrrRootAddress() *BgpAddrtype {
	if m != nil {
		return m.OrrRootAddress
	}
	return nil
}

func (m *BgpAfDep_) GetIsMaxPrefixDiscardExtraPaths() bool {
	if m != nil {
		return m.IsMaxPrefixDiscardExtraPaths
	}
	return false
}

func (m *BgpAfDep_) GetIsNextHopSelfDisabled() bool {
	if m != nil {
		return m.IsNextHopSelfDisabled
	}
	return false
}

func (m *BgpAfDep_) GetIsNextHopUnchanged() bool {
	if m != nil {
		return m.IsNextHopUnchanged
	}
	return false
}

func (m *BgpAfDep_) GetPermanentNetwork() bool {
	if m != nil {
		return m.PermanentNetwork
	}
	return false
}

func (m *BgpAfDep_) GetRoutePolicyIn() string {
	if m != nil {
		return m.RoutePolicyIn
	}
	return ""
}

func (m *BgpAfDep_) GetRoutePolicyOut() string {
	if m != nil {
		return m.RoutePolicyOut
	}
	return ""
}

func (m *BgpAfDep_) GetPrefixOrfFilter() string {
	if m != nil {
		return m.PrefixOrfFilter
	}
	return ""
}

func (m *BgpAfDep_) GetRemovePrivateAsOut() bool {
	if m != nil {
		return m.RemovePrivateAsOut
	}
	return false
}

func (m *BgpAfDep_) GetEntireAspathOut() bool {
	if m != nil {
		return m.EntireAspathOut
	}
	return false
}

func (m *BgpAfDep_) GetRemovePrivateAsin() bool {
	if m != nil {
		return m.RemovePrivateAsin
	}
	return false
}

func (m *BgpAfDep_) GetEntireAspathIn() bool {
	if m != nil {
		return m.EntireAspathIn
	}
	return false
}

func (m *BgpAfDep_) GetClientRouteReflector() bool {
	if m != nil {
		return m.ClientRouteReflector
	}
	return false
}

func (m *BgpAfDep_) GetAcceptRouteLegacyPeRt() bool {
	if m != nil {
		return m.AcceptRouteLegacyPeRt
	}
	return false
}

func (m *BgpAfDep_) GetIsAfEnabled() bool {
	if m != nil {
		return m.IsAfEnabled
	}
	return false
}

func (m *BgpAfDep_) GetSendCommunityAttribute() bool {
	if m != nil {
		return m.SendCommunityAttribute
	}
	return false
}

func (m *BgpAfDep_) GetSendGracefulShutCommunityAttributes() bool {
	if m != nil {
		return m.SendGracefulShutCommunityAttributes
	}
	return false
}

func (m *BgpAfDep_) GetSendExtendedCommunityAttribute() bool {
	if m != nil {
		return m.SendExtendedCommunityAttribute
	}
	return false
}

func (m *BgpAfDep_) GetSoftReconfigNotDisabled() bool {
	if m != nil {
		return m.SoftReconfigNotDisabled
	}
	return false
}

func (m *BgpAfDep_) GetAlwayUseSoftReconfig() bool {
	if m != nil {
		return m.AlwayUseSoftReconfig
	}
	return false
}

func (m *BgpAfDep_) GetSiteOfOrigin() string {
	if m != nil {
		return m.SiteOfOrigin
	}
	return ""
}

func (m *BgpAfDep_) GetDefaultWeight() uint32 {
	if m != nil {
		return m.DefaultWeight
	}
	return 0
}

func (m *BgpAfDep_) GetDefaultAllowas() uint32 {
	if m != nil {
		return m.DefaultAllowas
	}
	return 0
}

func (m *BgpAfDep_) GetAfLongLivedGracefulRestartStaleTimeSend() uint32 {
	if m != nil {
		return m.AfLongLivedGracefulRestartStaleTimeSend
	}
	return 0
}

func (m *BgpAfDep_) GetAfLongLivedGracefulRestartStaleTimeAccept() uint32 {
	if m != nil {
		return m.AfLongLivedGracefulRestartStaleTimeAccept
	}
	return 0
}

func (m *BgpAfDep_) GetAfLongLivedGracefulRestartCapable() uint32 {
	if m != nil {
		return m.AfLongLivedGracefulRestartCapable
	}
	return 0
}

func (m *BgpAfDep_) GetIsAsOverrideDisabled() bool {
	if m != nil {
		return m.IsAsOverrideDisabled
	}
	return false
}

func (m *BgpAfDep_) GetIsAigpEnabled() bool {
	if m != nil {
		return m.IsAigpEnabled
	}
	return false
}

func (m *BgpAfDep_) GetIsAigpCostCommunityEnabled() bool {
	if m != nil {
		return m.IsAigpCostCommunityEnabled
	}
	return false
}

func (m *BgpAfDep_) GetIsAigpCostCommunityId() uint32 {
	if m != nil {
		return m.IsAigpCostCommunityId
	}
	return 0
}

func (m *BgpAfDep_) GetIsAigpCostCommunityTransitive() uint32 {
	if m != nil {
		return m.IsAigpCostCommunityTransitive
	}
	return 0
}

func (m *BgpAfDep_) GetAigpCostCommunityPoi() uint32 {
	if m != nil {
		return m.AigpCostCommunityPoi
	}
	return 0
}

func (m *BgpAfDep_) GetIsAigpMedEnabled() bool {
	if m != nil {
		return m.IsAigpMedEnabled
	}
	return false
}

func (m *BgpAfDep_) GetAcceptOwn() bool {
	if m != nil {
		return m.AcceptOwn
	}
	return false
}

func (m *BgpAfDep_) GetMultipath() bool {
	if m != nil {
		return m.Multipath
	}
	return false
}

func (m *BgpAfDep_) GetIsFspecValidEnabled() bool {
	if m != nil {
		return m.IsFspecValidEnabled
	}
	return false
}

func (m *BgpAfDep_) GetIsNextHopUnchangedMpath() bool {
	if m != nil {
		return m.IsNextHopUnchangedMpath
	}
	return false
}

func (m *BgpAfDep_) GetIsSendMcastAttrEnabled() bool {
	if m != nil {
		return m.IsSendMcastAttrEnabled
	}
	return false
}

func (m *BgpAfDep_) GetAdvertiseV4() uint32 {
	if m != nil {
		return m.AdvertiseV4
	}
	return 0
}

func (m *BgpAfDep_) GetAdvertiseV6() uint32 {
	if m != nil {
		return m.AdvertiseV6
	}
	return 0
}

func (m *BgpAfDep_) GetAdvertiseL2VpnEvpn() uint32 {
	if m != nil {
		return m.AdvertiseL2VpnEvpn
	}
	return 0
}

func (m *BgpAfDep_) GetAdvertiseDisable() uint32 {
	if m != nil {
		return m.AdvertiseDisable
	}
	return 0
}

func (m *BgpAfDep_) GetAdvertiseDefVrfImpDisableV4() uint32 {
	if m != nil {
		return m.AdvertiseDefVrfImpDisableV4
	}
	return 0
}

func (m *BgpAfDep_) GetAdvertiseDefVrfImpDisableV6() uint32 {
	if m != nil {
		return m.AdvertiseDefVrfImpDisableV6
	}
	return 0
}

func (m *BgpAfDep_) GetAdvertiseVrfReImpDisableV4() uint32 {
	if m != nil {
		return m.AdvertiseVrfReImpDisableV4
	}
	return 0
}

func (m *BgpAfDep_) GetAdvertiseVrfReImpDisableV6() uint32 {
	if m != nil {
		return m.AdvertiseVrfReImpDisableV6
	}
	return 0
}

func (m *BgpAfDep_) GetEncapsulationType() uint32 {
	if m != nil {
		return m.EncapsulationType
	}
	return 0
}

func (m *BgpAfDep_) GetImport() bool {
	if m != nil {
		return m.Import
	}
	return false
}

func (m *BgpAfDep_) GetImportStitching() bool {
	if m != nil {
		return m.ImportStitching
	}
	return false
}

func (m *BgpAfDep_) GetImportReoriginate() bool {
	if m != nil {
		return m.ImportReoriginate
	}
	return false
}

func (m *BgpAfDep_) GetImportReoriginateStitching() bool {
	if m != nil {
		return m.ImportReoriginateStitching
	}
	return false
}

func (m *BgpAfDep_) GetAdvertiseLocalLabeledRoute() uint32 {
	if m != nil {
		return m.AdvertiseLocalLabeledRoute
	}
	return 0
}

func (m *BgpAfDep_) GetEnforceMultipleLabels() uint32 {
	if m != nil {
		return m.EnforceMultipleLabels
	}
	return 0
}

func (m *BgpAfDep_) GetOrfCapabilityInfo() *BgpConfigInfo_ {
	if m != nil {
		return m.OrfCapabilityInfo
	}
	return nil
}

func (m *BgpAfDep_) GetDefaultOriginateInfo() *BgpConfigInfo_ {
	if m != nil {
		return m.DefaultOriginateInfo
	}
	return nil
}

func (m *BgpAfDep_) GetMaxPrefixesInfo() *BgpConfigInfo_ {
	if m != nil {
		return m.MaxPrefixesInfo
	}
	return nil
}

func (m *BgpAfDep_) GetOrrInfo() *BgpConfigInfo_ {
	if m != nil {
		return m.OrrInfo
	}
	return nil
}

func (m *BgpAfDep_) GetNextHopSelfInfo() *BgpConfigInfo_ {
	if m != nil {
		return m.NextHopSelfInfo
	}
	return nil
}

func (m *BgpAfDep_) GetNextHopUnchangedInfo() *BgpConfigInfo_ {
	if m != nil {
		return m.NextHopUnchangedInfo
	}
	return nil
}

func (m *BgpAfDep_) GetRoutePolicyInInfo() *BgpConfigInfo_ {
	if m != nil {
		return m.RoutePolicyInInfo
	}
	return nil
}

func (m *BgpAfDep_) GetRoutePolicyOutInfo() *BgpConfigInfo_ {
	if m != nil {
		return m.RoutePolicyOutInfo
	}
	return nil
}

func (m *BgpAfDep_) GetPrefixFilterInfo() *BgpConfigInfo_ {
	if m != nil {
		return m.PrefixFilterInfo
	}
	return nil
}

func (m *BgpAfDep_) GetRemovePrivateAsInfo() *BgpConfigInfo_ {
	if m != nil {
		return m.RemovePrivateAsInfo
	}
	return nil
}

func (m *BgpAfDep_) GetRemovePrivateAsInInfo() *BgpConfigInfo_ {
	if m != nil {
		return m.RemovePrivateAsInInfo
	}
	return nil
}

func (m *BgpAfDep_) GetRouteReflectorInfo() *BgpConfigInfo_ {
	if m != nil {
		return m.RouteReflectorInfo
	}
	return nil
}

func (m *BgpAfDep_) GetLegacyPeRtInfo() *BgpConfigInfo_ {
	if m != nil {
		return m.LegacyPeRtInfo
	}
	return nil
}

func (m *BgpAfDep_) GetAfEnabledInfo() *BgpConfigInfo_ {
	if m != nil {
		return m.AfEnabledInfo
	}
	return nil
}

func (m *BgpAfDep_) GetSendCommunityInfo() *BgpConfigInfo_ {
	if m != nil {
		return m.SendCommunityInfo
	}
	return nil
}

func (m *BgpAfDep_) GetSendGracefulShutdownCommunityInfo() *BgpConfigInfo_ {
	if m != nil {
		return m.SendGracefulShutdownCommunityInfo
	}
	return nil
}

func (m *BgpAfDep_) GetSendExtendedCommunityInfo() *BgpConfigInfo_ {
	if m != nil {
		return m.SendExtendedCommunityInfo
	}
	return nil
}

func (m *BgpAfDep_) GetSoftReconfigInfo() *BgpConfigInfo_ {
	if m != nil {
		return m.SoftReconfigInfo
	}
	return nil
}

func (m *BgpAfDep_) GetSoOInfo() *BgpConfigInfo_ {
	if m != nil {
		return m.SoOInfo
	}
	return nil
}

func (m *BgpAfDep_) GetWeightInfo() *BgpConfigInfo_ {
	if m != nil {
		return m.WeightInfo
	}
	return nil
}

func (m *BgpAfDep_) GetAllowasInInfo() *BgpConfigInfo_ {
	if m != nil {
		return m.AllowasInInfo
	}
	return nil
}

func (m *BgpAfDep_) GetAfLongLivedGracefulStartStaleTimeInfo() *BgpConfigInfo_ {
	if m != nil {
		return m.AfLongLivedGracefulStartStaleTimeInfo
	}
	return nil
}

func (m *BgpAfDep_) GetAfLongLivedGracefulStartCapableInfo() *BgpConfigInfo_ {
	if m != nil {
		return m.AfLongLivedGracefulStartCapableInfo
	}
	return nil
}

func (m *BgpAfDep_) GetAsOverrideInfo() *BgpConfigInfo_ {
	if m != nil {
		return m.AsOverrideInfo
	}
	return nil
}

func (m *BgpAfDep_) GetAigpInfo() *BgpConfigInfo_ {
	if m != nil {
		return m.AigpInfo
	}
	return nil
}

func (m *BgpAfDep_) GetAigpCostCommunityInfo() *BgpConfigInfo_ {
	if m != nil {
		return m.AigpCostCommunityInfo
	}
	return nil
}

func (m *BgpAfDep_) GetAigpMed() *BgpConfigInfo_ {
	if m != nil {
		return m.AigpMed
	}
	return nil
}

func (m *BgpAfDep_) GetAcceptOwnInfo() *BgpConfigInfo_ {
	if m != nil {
		return m.AcceptOwnInfo
	}
	return nil
}

func (m *BgpAfDep_) GetMultipathInfo() *BgpConfigInfo_ {
	if m != nil {
		return m.MultipathInfo
	}
	return nil
}

func (m *BgpAfDep_) GetFspecValidInfo() *BgpConfigInfo_ {
	if m != nil {
		return m.FspecValidInfo
	}
	return nil
}

func (m *BgpAfDep_) GetNextHopUnchangedMpathInfo() *BgpConfigInfo_ {
	if m != nil {
		return m.NextHopUnchangedMpathInfo
	}
	return nil
}

func (m *BgpAfDep_) GetPermanentNetworkInfo() *BgpConfigInfo_ {
	if m != nil {
		return m.PermanentNetworkInfo
	}
	return nil
}

func (m *BgpAfDep_) GetSendMcastAttrInfo() *BgpConfigInfo_ {
	if m != nil {
		return m.SendMcastAttrInfo
	}
	return nil
}

func (m *BgpAfDep_) GetAdvertiseV4AfiInfo() *BgpConfigInfo_ {
	if m != nil {
		return m.AdvertiseV4AfiInfo
	}
	return nil
}

func (m *BgpAfDep_) GetAdvertiseV6AfiInfo() *BgpConfigInfo_ {
	if m != nil {
		return m.AdvertiseV6AfiInfo
	}
	return nil
}

func (m *BgpAfDep_) GetAdvertiseL2VpnEvpnAfiInfo() *BgpConfigInfo_ {
	if m != nil {
		return m.AdvertiseL2VpnEvpnAfiInfo
	}
	return nil
}

func (m *BgpAfDep_) GetAdvertiseDisInfo() *BgpConfigInfo_ {
	if m != nil {
		return m.AdvertiseDisInfo
	}
	return nil
}

func (m *BgpAfDep_) GetAdvertiseDefVrfImpDisableAfiV4Info() *BgpConfigInfo_ {
	if m != nil {
		return m.AdvertiseDefVrfImpDisableAfiV4Info
	}
	return nil
}

func (m *BgpAfDep_) GetAdvertiseDefVrfImpDisableAfiV6Info() *BgpConfigInfo_ {
	if m != nil {
		return m.AdvertiseDefVrfImpDisableAfiV6Info
	}
	return nil
}

func (m *BgpAfDep_) GetAdvertiseVrfReImpDisableAfiV4Info() *BgpConfigInfo_ {
	if m != nil {
		return m.AdvertiseVrfReImpDisableAfiV4Info
	}
	return nil
}

func (m *BgpAfDep_) GetAdvertiseVrfReImpDisableAfiV6Info() *BgpConfigInfo_ {
	if m != nil {
		return m.AdvertiseVrfReImpDisableAfiV6Info
	}
	return nil
}

func (m *BgpAfDep_) GetAfEncapsulationTypeInfo() *BgpConfigInfo_ {
	if m != nil {
		return m.AfEncapsulationTypeInfo
	}
	return nil
}

func (m *BgpAfDep_) GetImportAfiInfo() *BgpConfigInfo_ {
	if m != nil {
		return m.ImportAfiInfo
	}
	return nil
}

func (m *BgpAfDep_) GetAdvertiseLocalLabeledRouteInfo() *BgpConfigInfo_ {
	if m != nil {
		return m.AdvertiseLocalLabeledRouteInfo
	}
	return nil
}

func (m *BgpAfDep_) GetEnforceMultipleLabelsInfo() *BgpConfigInfo_ {
	if m != nil {
		return m.EnforceMultipleLabelsInfo
	}
	return nil
}

type BgpConfigEntityBag struct {
	NeighborAddressXr       *BgpAddrtype `protobuf:"bytes,50,opt,name=neighbor_address_xr,json=neighborAddressXr,proto3" json:"neighbor_address_xr,omitempty"`
	GroupName               string       `protobuf:"bytes,51,opt,name=group_name,json=groupName,proto3" json:"group_name,omitempty"`
	ConfigurationType       string       `protobuf:"bytes,52,opt,name=configuration_type,json=configurationType,proto3" json:"configuration_type,omitempty"`
	AddressFamilyIdentifier uint32       `protobuf:"varint,53,opt,name=address_family_identifier,json=addressFamilyIdentifier,proto3" json:"address_family_identifier,omitempty"`
	AfIndependentConfig     *BgpAfIndep_ `protobuf:"bytes,54,opt,name=af_independent_config,json=afIndependentConfig,proto3" json:"af_independent_config,omitempty"`
	AfDependentConfig       []*BgpAfDep_ `protobuf:"bytes,55,rep,name=af_dependent_config,json=afDependentConfig,proto3" json:"af_dependent_config,omitempty"`
	XXX_NoUnkeyedLiteral    struct{}     `json:"-"`
	XXX_unrecognized        []byte       `json:"-"`
	XXX_sizecache           int32        `json:"-"`
}

func (m *BgpConfigEntityBag) Reset()         { *m = BgpConfigEntityBag{} }
func (m *BgpConfigEntityBag) String() string { return proto.CompactTextString(m) }
func (*BgpConfigEntityBag) ProtoMessage()    {}
func (*BgpConfigEntityBag) Descriptor() ([]byte, []int) {
	return fileDescriptor_987a149f58a2b9ee, []int{11}
}

func (m *BgpConfigEntityBag) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BgpConfigEntityBag.Unmarshal(m, b)
}
func (m *BgpConfigEntityBag) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BgpConfigEntityBag.Marshal(b, m, deterministic)
}
func (m *BgpConfigEntityBag) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BgpConfigEntityBag.Merge(m, src)
}
func (m *BgpConfigEntityBag) XXX_Size() int {
	return xxx_messageInfo_BgpConfigEntityBag.Size(m)
}
func (m *BgpConfigEntityBag) XXX_DiscardUnknown() {
	xxx_messageInfo_BgpConfigEntityBag.DiscardUnknown(m)
}

var xxx_messageInfo_BgpConfigEntityBag proto.InternalMessageInfo

func (m *BgpConfigEntityBag) GetNeighborAddressXr() *BgpAddrtype {
	if m != nil {
		return m.NeighborAddressXr
	}
	return nil
}

func (m *BgpConfigEntityBag) GetGroupName() string {
	if m != nil {
		return m.GroupName
	}
	return ""
}

func (m *BgpConfigEntityBag) GetConfigurationType() string {
	if m != nil {
		return m.ConfigurationType
	}
	return ""
}

func (m *BgpConfigEntityBag) GetAddressFamilyIdentifier() uint32 {
	if m != nil {
		return m.AddressFamilyIdentifier
	}
	return 0
}

func (m *BgpConfigEntityBag) GetAfIndependentConfig() *BgpAfIndep_ {
	if m != nil {
		return m.AfIndependentConfig
	}
	return nil
}

func (m *BgpConfigEntityBag) GetAfDependentConfig() []*BgpAfDep_ {
	if m != nil {
		return m.AfDependentConfig
	}
	return nil
}

func init() {
	proto.RegisterType((*BgpConfigEntityBag_KEYS)(nil), "cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.bgp_config_entity_bag_KEYS")
	proto.RegisterType((*BgpL2VpnAddrT)(nil), "cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.bgp_l2vpn_addr_t")
	proto.RegisterType((*BgpL2VpnMspwAddrT)(nil), "cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.bgp_l2vpn_mspw_addr_t")
	proto.RegisterType((*BgpIpv4SrpolicyAddrT)(nil), "cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.bgp_ipv4_srpolicy_addr_t")
	proto.RegisterType((*BgpIpv6SrpolicyAddrT)(nil), "cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.bgp_ipv6_srpolicy_addr_t")
	proto.RegisterType((*BgpAddrtype)(nil), "cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.bgp_addrtype")
	proto.RegisterType((*BgpConfigEntid_Item)(nil), "cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.bgp_config_entid__item")
	proto.RegisterType((*BgpConfigEntid_Entry)(nil), "cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.bgp_config_entid__entry")
	proto.RegisterType((*BgpConfigInfo_)(nil), "cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.bgp_config_info_")
	proto.RegisterType((*BgpAfIndep_)(nil), "cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.bgp_af_indep_")
	proto.RegisterType((*BgpAfDep_)(nil), "cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.bgp_af_dep_")
	proto.RegisterType((*BgpConfigEntityBag)(nil), "cisco_ios_xr_ipv4_bgp_oper.bgp.config_instances.config_instance.config_vrfs.config_vrf.entity_configurations.entity_configuration.bgp_config_entity_bag")
}

func init() { proto.RegisterFile("bgp_config_entity_bag.proto", fileDescriptor_987a149f58a2b9ee) }

var fileDescriptor_987a149f58a2b9ee = []byte{
	// 5574 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xd4, 0x5d, 0xe9, 0x8f, 0x1c, 0xc7,
	0x75, 0x47, 0x4b, 0xb1, 0x38, 0xac, 0xdd, 0xd9, 0xa3, 0xf7, 0x9a, 0x5d, 0x9e, 0xbb, 0x14, 0x0f,
	0x49, 0x24, 0x2d, 0x53, 0xcb, 0xb1, 0x2c, 0xcb, 0xc7, 0x72, 0xb9, 0x24, 0xd7, 0xde, 0xe5, 0x52,
	0xbd, 0x24, 0x25, 0xc5, 0x89, 0xdb, 0x3d, 0xdd, 0xd5, 0xb3, 0x15, 0xf6, 0x74, 0x77, 0xaa, 0x7a,
	0xf6, 0x60, 0x0e, 0x20, 0x9f, 0x03, 0x24, 0x06, 0xf2, 0x25, 0xc7, 0x97, 0xfc, 0x07, 0x49, 0x3e,
	0x04, 0x48, 0x94, 0xc3, 0xce, 0xa1, 0xd8, 0xce, 0x05, 0x18, 0x88, 0x03, 0x24, 0xf9, 0x62, 0x03,
	0x49, 0x80, 0x20, 0x41, 0x82, 0x7c, 0x0d, 0xf2, 0x21, 0xa8, 0xf7, 0xaa, 0xab, 0x8f, 0x99, 0x59,
	0x52, 0x9f, 0x52, 0xfc, 0x22, 0x71, 0xeb, 0xbd, 0x57, 0xfd, 0x7e, 0x75, 0xbe, 0x7a, 0xf5, 0x5e,
	0x0d, 0x39, 0xd5, 0xe9, 0xa6, 0xae, 0x9f, 0xc4, 0x21, 0xeb, 0xba, 0x34, 0xce, 0x58, 0x76, 0xe4,
	0x76, 0xbc, 0xee, 0xf5, 0x94, 0x27, 0x59, 0x62, 0xff, 0x82, 0xe5, 0x33, 0xe1, 0x27, 0x2e, 0x4b,
	0x84, 0x7b, 0xc8, 0x5d, 0x96, 0xee, 0xaf, 0xba, 0x92, 0x3f, 0x49, 0x29, 0xbf, 0xde, 0xe9, 0xa6,
	0xd7, 0x95, 0x20, 0x8b, 0x45, 0xe6, 0xc5, 0x3e, 0x15, 0xf5, 0x82, 0xfc, 0xef, 0x7d, 0x1e, 0x8a,
	0xd2, 0xbf, 0xaf, 0xab, 0x2f, 0x61, 0x49, 0x9f, 0x7b, 0x19, 0x4b, 0x62, 0x31, 0xb4, 0x74, 0xe5,
	0x7b, 0x16, 0x59, 0x1a, 0xaa, 0xa3, 0xfb, 0xd5, 0x8d, 0x0f, 0x77, 0xed, 0x0b, 0xa4, 0x99, 0x7f,
	0xcc, 0x8d, 0xbd, 0x1e, 0x6d, 0x59, 0xe7, 0xad, 0x2b, 0x27, 0x9d, 0xf1, 0xbc, 0xf0, 0xbe, 0xd7,
	0xa3, 0xf6, 0x22, 0x69, 0xec, 0xf3, 0x10, 0xe9, 0x2f, 0x01, 0xfd, 0xc4, 0x3e, 0x0f, 0x81, 0x74,
	0x8e, 0x8c, 0xa9, 0x2a, 0xb3, 0xa3, 0x94, 0xb6, 0x5e, 0x06, 0x2a, 0xc1, 0xa2, 0x87, 0x47, 0x29,
	0xb5, 0x5f, 0x23, 0x53, 0x31, 0x65, 0xdd, 0xbd, 0x4e, 0xc2, 0x5d, 0x2f, 0x08, 0x38, 0x15, 0xa2,
	0xf5, 0x63, 0xc0, 0x35, 0x99, 0x97, 0xaf, 0x61, 0x71, 0xa9, 0x2e, 0xf8, 0xd2, 0xa7, 0xca, 0x75,
	0xc9, 0x8f, 0xad, 0x7c, 0x96, 0x4c, 0x49, 0x28, 0xd1, 0x8d, 0xfd, 0x34, 0x86, 0xca, 0xdc, 0x4c,
	0x02, 0x28, 0xfe, 0x96, 0x95, 0x5b, 0xe7, 0x5f, 0xbe, 0xd2, 0x74, 0xc6, 0xa1, 0x50, 0xd5, 0xbc,
	0xf2, 0x2e, 0x99, 0x2b, 0x04, 0x7b, 0x22, 0x3d, 0xf8, 0x44, 0xd2, 0xf7, 0x49, 0x4b, 0x4a, 0x43,
	0xf7, 0x09, 0x9e, 0x26, 0x11, 0xf3, 0x8f, 0xf2, 0x0a, 0x6e, 0x90, 0xb9, 0xc1, 0xf2, 0xa2, 0xa2,
	0x19, 0x49, 0xdc, 0x55, 0xb4, 0xc1, 0xfa, 0xda, 0x23, 0xea, 0x6b, 0x1f, 0x57, 0x5f, 0xbb, 0x5e,
	0xdf, 0x6f, 0x4e, 0x90, 0x71, 0x59, 0xa1, 0x64, 0x95, 0xbd, 0x60, 0x4f, 0x91, 0x97, 0xbd, 0x90,
	0xa9, 0xae, 0x94, 0xff, 0xb4, 0x97, 0xc9, 0x38, 0xa8, 0x99, 0xd7, 0x86, 0xbd, 0x38, 0x26, 0xcb,
	0xf2, 0xd6, 0xbf, 0x4a, 0x6c, 0x60, 0xe9, 0xf9, 0x9e, 0xc8, 0x34, 0x23, 0x76, 0xe8, 0x94, 0xa4,
	0x6c, 0x4b, 0x42, 0x9d, 0x3b, 0xf2, 0x3a, 0x34, 0xaa, 0x75, 0x2c, 0x70, 0x6f, 0x49, 0x42, 0xce,
	0x7d, 0x9d, 0x40, 0x43, 0xb8, 0x59, 0x3f, 0x8e, 0x4b, 0xec, 0xd8, 0xc3, 0xd3, 0x92, 0xf4, 0x10,
	0x28, 0x39, 0xff, 0x15, 0x32, 0x85, 0xba, 0x04, 0x85, 0x26, 0xaf, 0x00, 0xf3, 0x04, 0x68, 0x12,
	0x68, 0x3d, 0x2e, 0x93, 0x49, 0x59, 0x52, 0xee, 0xc2, 0x13, 0x05, 0x63, 0xd1, 0x89, 0xf6, 0x67,
	0xc8, 0xac, 0x2a, 0xf1, 0x10, 0xa2, 0xe2, 0x6e, 0x00, 0xf7, 0x4c, 0x4e, 0xdb, 0x2e, 0x48, 0xaa,
	0xd1, 0xda, 0xba, 0xe2, 0x93, 0xba, 0xd1, 0xda, 0xd5, 0x66, 0x68, 0xd7, 0x1a, 0x8d, 0xe8, 0x66,
	0x68, 0x0f, 0x69, 0xb4, 0x76, 0xad, 0xd1, 0xc6, 0x0a, 0xee, 0x4a, 0xa3, 0x21, 0xb4, 0x76, 0x19,
	0xda, 0xb8, 0x86, 0xd6, 0x2e, 0x41, 0x53, 0x63, 0x06, 0xc6, 0x76, 0x45, 0x8f, 0xa6, 0xc6, 0x26,
	0x89, 0x15, 0x55, 0xfe, 0xd4, 0x22, 0x36, 0x8e, 0xfc, 0xfd, 0x34, 0x12, 0x5a, 0x62, 0xe2, 0xbc,
	0x75, 0x65, 0xec, 0xc6, 0xaf, 0x58, 0xd7, 0xff, 0xdf, 0x17, 0xae, 0xeb, 0xf5, 0x99, 0xee, 0x4c,
	0xc1, 0x5f, 0x8f, 0xd3, 0x48, 0x94, 0x80, 0xf3, 0x4c, 0x8a, 0x89, 0x8c, 0x7b, 0x2c, 0x2e, 0x80,
	0x4f, 0x22, 0x70, 0x9e, 0xad, 0x6b, 0x5a, 0x2e, 0xf3, 0x1a, 0x0c, 0xad, 0x76, 0xaf, 0xdc, 0xac,
	0x53, 0xb8, 0x1e, 0xe5, 0xe5, 0x55, 0xd6, 0xd5, 0x0a, 0xeb, 0xb4, 0x66, 0x5d, 0x2d, 0xb3, 0x5e,
	0xcd, 0x5b, 0x93, 0x96, 0x99, 0x6d, 0xec, 0x59, 0xa0, 0x6c, 0x94, 0xb8, 0x57, 0x48, 0x33, 0x12,
	0x6e, 0xa9, 0xd9, 0x67, 0x70, 0x64, 0x45, 0x62, 0x4b, 0x63, 0xfb, 0x8e, 0xee, 0x20, 0xbd, 0x5e,
	0x49, 0xce, 0x59, 0xe8, 0xa0, 0x5f, 0x35, 0xab, 0x83, 0x4a, 0x2b, 0xaa, 0x42, 0xbb, 0x2d, 0xd2,
	0x83, 0xea, 0xf0, 0x5c, 0x75, 0xc3, 0x28, 0x39, 0x10, 0x29, 0xf5, 0x35, 0x96, 0xb9, 0x62, 0xea,
	0xdd, 0x51, 0xb4, 0xda, 0x90, 0x1e, 0x94, 0x99, 0x2f, 0x86, 0x74, 0x5d, 0xe6, 0x6d, 0xd2, 0xca,
	0x97, 0x82, 0x01, 0xb1, 0x05, 0x10, 0x9b, 0x57, 0xf4, 0xe1, 0x92, 0xed, 0xa1, 0x92, 0x2d, 0x2d,
	0xd9, 0x1e, 0x22, 0xf9, 0x7d, 0x8b, 0xcc, 0xab, 0xf5, 0xdf, 0xad, 0x2d, 0xd8, 0x8b, 0xd0, 0x53,
	0xbf, 0x61, 0x4a, 0x4f, 0x0d, 0xdb, 0xbd, 0xf2, 0xed, 0xe9, 0x41, 0x79, 0x3b, 0xc9, 0x31, 0xb5,
	0x87, 0x60, 0x5a, 0x32, 0x0e, 0x53, 0x7b, 0x28, 0xa6, 0x76, 0x0d, 0xd3, 0xca, 0xbf, 0xbc, 0x44,
	0xe6, 0x6b, 0x56, 0x50, 0xe0, 0xba, 0x2c, 0xa3, 0x3d, 0xfb, 0x1d, 0xb2, 0xa8, 0xe0, 0xb9, 0xa1,
	0xd7, 0x63, 0xd1, 0x91, 0xcb, 0x02, 0x49, 0x0f, 0x19, 0xe5, 0xb0, 0x85, 0x36, 0x9d, 0x05, 0xc5,
	0x70, 0x07, 0xe8, 0x9b, 0x9a, 0x6c, 0x5f, 0x23, 0x76, 0x45, 0x2b, 0x34, 0x82, 0x70, 0x73, 0x9d,
	0xae, 0x50, 0xc0, 0x16, 0xfa, 0xb6, 0x45, 0x66, 0xea, 0xc6, 0x90, 0x7b, 0xc8, 0x61, 0x93, 0x1d,
	0xbb, 0xf1, 0xcb, 0xa6, 0x34, 0x6b, 0x6e, 0x47, 0x38, 0xd3, 0x35, 0x0b, 0xed, 0x03, 0x6e, 0x9f,
	0x21, 0xa4, 0xcb, 0x93, 0x7e, 0x8a, 0x26, 0x1a, 0xee, 0xf7, 0x27, 0xa1, 0x04, 0x2c, 0xb4, 0x1f,
	0x59, 0x64, 0x61, 0xb0, 0x9d, 0x69, 0x9c, 0xf1, 0x23, 0xfb, 0x63, 0x8b, 0x4c, 0x0f, 0xd0, 0xc0,
	0xae, 0x19, 0xbb, 0xf1, 0x6b, 0xa6, 0x60, 0x1f, 0x1c, 0x20, 0xce, 0x44, 0xa7, 0x9b, 0xae, 0x43,
	0xf1, 0x86, 0x2c, 0x5d, 0xf9, 0xc5, 0x97, 0xd0, 0x0c, 0xd5, 0x0a, 0x84, 0x89, 0x0b, 0x5b, 0xbb,
	0x00, 0x7e, 0x5d, 0x29, 0x0d, 0x60, 0xf8, 0x34, 0x9c, 0x29, 0x26, 0x36, 0x33, 0xda, 0x5b, 0xd7,
	0xe5, 0xf6, 0x77, 0x2d, 0x32, 0xcd, 0xe2, 0x3d, 0xca, 0x19, 0x5a, 0xde, 0xfe, 0x9e, 0xc7, 0x62,
	0x18, 0x37, 0x63, 0x37, 0x7e, 0xdd, 0xcc, 0xa6, 0x80, 0x3e, 0x74, 0xa6, 0x4a, 0x5a, 0xaf, 0x4b,
	0xa5, 0x57, 0xbe, 0x79, 0x48, 0x9a, 0x30, 0x68, 0x42, 0x97, 0xc5, 0x01, 0x4d, 0x5d, 0xfb, 0x1a,
	0x99, 0xe1, 0xb4, 0x97, 0x64, 0xd4, 0xf5, 0x84, 0x1b, 0xf7, 0x7b, 0x1d, 0xca, 0xdd, 0xc3, 0x43,
	0x35, 0x95, 0xa6, 0x90, 0xb4, 0x26, 0xee, 0x03, 0xe1, 0x83, 0xc3, 0xa1, 0xec, 0x47, 0x47, 0xd0,
	0x18, 0x03, 0xec, 0x1f, 0x1e, 0xc9, 0x9d, 0xa1, 0x68, 0x60, 0x57, 0xa4, 0xd4, 0x7b, 0x42, 0xb9,
	0xcb, 0x02, 0x98, 0x44, 0x4d, 0x67, 0xa6, 0x20, 0xee, 0x22, 0x6d, 0x33, 0xb0, 0x17, 0xc8, 0x89,
	0xcc, 0x4f, 0xdd, 0x9e, 0xb2, 0x50, 0x9b, 0xce, 0x2b, 0x99, 0x9f, 0x6e, 0x0b, 0x61, 0xbf, 0x4b,
	0x96, 0x7a, 0x4c, 0xee, 0xd7, 0xfb, 0x94, 0x67, 0x4c, 0xd0, 0x1e, 0x8d, 0x33, 0x97, 0xc5, 0x19,
	0xe5, 0xfb, 0x5e, 0x04, 0xe6, 0x69, 0xd3, 0x69, 0xf5, 0x58, 0xbc, 0x56, 0x66, 0xd8, 0x54, 0x74,
	0xfb, 0x2e, 0x39, 0x3f, 0x5a, 0xda, 0xed, 0x09, 0xea, 0xa3, 0xd5, 0xda, 0x74, 0xce, 0x8c, 0xaa,
	0x63, 0x5b, 0x32, 0xd9, 0xe7, 0xc9, 0x58, 0x40, 0x85, 0xcf, 0x59, 0x2a, 0x1b, 0x5f, 0x19, 0xb0,
	0xe5, 0x22, 0xfb, 0x55, 0x32, 0x41, 0x65, 0x2b, 0xef, 0x25, 0xb2, 0x5f, 0xfa, 0x71, 0x06, 0x76,
	0x6b, 0xd3, 0x19, 0x97, 0xa5, 0xf7, 0x92, 0x74, 0x5d, 0x96, 0xc9, 0x03, 0x54, 0xa7, 0x97, 0xba,
	0x82, 0xf2, 0x7d, 0xca, 0xd1, 0x5e, 0x6d, 0x3a, 0xa4, 0xd3, 0x4b, 0x77, 0xb1, 0xc4, 0xfe, 0x3a,
	0xb9, 0xc6, 0x84, 0x0b, 0x35, 0xf5, 0xfa, 0x51, 0xc6, 0x64, 0x75, 0xf0, 0x87, 0xb4, 0x01, 0xc3,
	0x84, 0x1f, 0x78, 0x3c, 0x60, 0x71, 0xd7, 0x0d, 0x98, 0xf0, 0x3a, 0x11, 0x0d, 0xc0, 0x92, 0x6d,
	0x38, 0x97, 0x99, 0xd8, 0xe8, 0x74, 0xd3, 0x6d, 0x25, 0x72, 0xab, 0x9b, 0x6e, 0xa7, 0x91, 0xb8,
	0xa3, 0xf9, 0x6f, 0x2b, 0x76, 0x7b, 0x89, 0x34, 0x9e, 0xd0, 0x23, 0x1c, 0xcd, 0x68, 0xd6, 0xea,
	0xbf, 0xed, 0x37, 0x88, 0x1d, 0x25, 0xbe, 0x17, 0x55, 0x47, 0xc5, 0x38, 0xe8, 0x38, 0x09, 0x94,
	0xd2, 0xa0, 0x18, 0xc2, 0x7c, 0x74, 0x04, 0xf6, 0x6c, 0x9d, 0xf9, 0xc3, 0x23, 0x39, 0x82, 0x0a,
	0xe6, 0xc4, 0x4d, 0x39, 0x4d, 0x69, 0x1c, 0x80, 0x2d, 0xdb, 0x70, 0xa6, 0x72, 0xee, 0xe4, 0x01,
	0x96, 0x4b, 0x25, 0x53, 0x4f, 0x88, 0x83, 0x84, 0x07, 0xca, 0x50, 0xd4, 0x7f, 0xdb, 0x9f, 0x27,
	0x4b, 0x22, 0xf1, 0x9f, 0xd0, 0xcc, 0xed, 0xf4, 0xc3, 0x90, 0x72, 0x97, 0x53, 0x9f, 0xb2, 0x7d,
	0xea, 0x0a, 0xf6, 0x94, 0x82, 0x9d, 0xd8, 0x74, 0x16, 0x90, 0xe3, 0x16, 0x30, 0x38, 0x48, 0xdf,
	0x65, 0x4f, 0xa9, 0x7d, 0x13, 0xd7, 0xbe, 0x61, 0x92, 0xd3, 0x20, 0x39, 0xdb, 0xe9, 0xa6, 0x43,
	0xc5, 0xaa, 0xdf, 0x14, 0x34, 0x0e, 0x50, 0xcc, 0x46, 0xb1, 0xf2, 0x07, 0x77, 0x69, 0x1c, 0x80,
	0xd8, 0xa7, 0xc9, 0x6c, 0xe9, 0x6b, 0x85, 0xcc, 0x0c, 0xc8, 0x4c, 0xeb, 0x4f, 0x69, 0x81, 0x9b,
	0x64, 0xde, 0x0b, 0x7a, 0x0c, 0x0c, 0xe2, 0x0c, 0x34, 0xdb, 0xeb, 0x67, 0x41, 0x72, 0x10, 0x83,
	0x51, 0xd9, 0x70, 0xe6, 0x2a, 0xd4, 0x5d, 0x45, 0x94, 0x7b, 0xdc, 0x13, 0x4a, 0x53, 0x2f, 0x92,
	0x22, 0x7a, 0x6e, 0xcc, 0xe1, 0x57, 0x34, 0x45, 0x4f, 0x8a, 0x4b, 0x64, 0x72, 0x2f, 0x89, 0x02,
	0x37, 0x63, 0x3d, 0xea, 0xee, 0x7b, 0x51, 0x9f, 0x82, 0xcd, 0xd6, 0x74, 0x9a, 0xb2, 0xf8, 0x21,
	0xeb, 0xd1, 0xc7, 0xb2, 0xd0, 0x5e, 0x25, 0x0b, 0x30, 0x79, 0x7c, 0xdf, 0xad, 0xf3, 0x2f, 0xe0,
	0x4c, 0x96, 0x73, 0xc6, 0xf7, 0xef, 0x55, 0xa4, 0x3e, 0xb2, 0x08, 0x76, 0xa8, 0xcb, 0xd2, 0x8a,
	0x89, 0x66, 0xe2, 0xf6, 0x39, 0x01, 0x9a, 0x6e, 0xa6, 0xc5, 0x29, 0x78, 0xb6, 0x27, 0xba, 0x6e,
	0x94, 0xc8, 0x4f, 0xca, 0x8e, 0x53, 0x53, 0x79, 0x11, 0x97, 0xba, 0x9e, 0xe8, 0x6e, 0x25, 0xdd,
	0xcd, 0xf8, 0x56, 0x3f, 0xc4, 0xe9, 0xfc, 0x26, 0x99, 0xcb, 0xf9, 0x93, 0x7e, 0x56, 0x12, 0x58,
	0xc2, 0xc6, 0x47, 0x81, 0x9d, 0x7e, 0x56, 0x92, 0x98, 0xe5, 0x49, 0x3f, 0xa3, 0x6e, 0x3f, 0x0d,
	0xbc, 0x8c, 0x0a, 0x57, 0x24, 0x7d, 0xee, 0xd3, 0xd6, 0x29, 0x18, 0xe6, 0x36, 0xd0, 0x1e, 0x21,
	0x69, 0x17, 0x28, 0x72, 0xdf, 0x0a, 0x7a, 0x4f, 0xdd, 0x88, 0xc5, 0x4f, 0xdc, 0x8e, 0x17, 0x07,
	0x07, 0x2c, 0xc8, 0xf6, 0x5a, 0xa7, 0x51, 0xa3, 0xa0, 0xf7, 0x74, 0x8b, 0xc5, 0x4f, 0x6e, 0xe5,
	0xe5, 0xf2, 0xe0, 0x02, 0x8b, 0x07, 0xa7, 0xfe, 0xbe, 0x1b, 0xf4, 0x9e, 0xb6, 0xce, 0x00, 0xe3,
	0x98, 0x2c, 0x74, 0xa8, 0xbf, 0x7f, 0xbb, 0xf7, 0x54, 0x4e, 0x5d, 0xe0, 0x81, 0x11, 0x29, 0xeb,
	0xee, 0x25, 0x01, 0x6d, 0x9d, 0xc5, 0x73, 0x93, 0xa4, 0xc8, 0x01, 0x79, 0xbb, 0xf7, 0x74, 0x3b,
	0x09, 0xa8, 0x3c, 0x62, 0x67, 0x59, 0xe4, 0x0a, 0xea, 0xf7, 0x39, 0xcb, 0x8e, 0x5a, 0xe7, 0xb0,
	0xbe, 0x2c, 0x8b, 0x76, 0x55, 0x91, 0xfd, 0x3a, 0x99, 0x16, 0xfd, 0x34, 0x95, 0x2d, 0xb8, 0xea,
	0x76, 0x8e, 0x60, 0x9f, 0x68, 0x9d, 0xc7, 0x95, 0x40, 0x13, 0x6e, 0x1d, 0xc9, 0x4d, 0xc2, 0xfe,
	0x0a, 0x59, 0xf6, 0xbd, 0xd4, 0xeb, 0xb0, 0x08, 0xbc, 0x48, 0xb4, 0x9b, 0x64, 0x0c, 0x0d, 0xb3,
	0x9c, 0x93, 0x06, 0xad, 0x65, 0x90, 0x3d, 0x57, 0x30, 0xde, 0x2f, 0xf8, 0x76, 0x35, 0x1b, 0x7c,
	0x97, 0x0a, 0x21, 0x85, 0x93, 0x94, 0xc6, 0x08, 0x63, 0x05, 0x61, 0x28, 0xc2, 0x4e, 0x4a, 0x63,
	0x80, 0x31, 0x45, 0x5e, 0xee, 0x84, 0x41, 0xeb, 0x02, 0xd4, 0x2c, 0xff, 0x29, 0x0f, 0xef, 0x9d,
	0x30, 0x70, 0x7b, 0x2c, 0xd6, 0x53, 0xe6, 0x55, 0xa0, 0x4e, 0x74, 0xc2, 0x60, 0xbb, 0x28, 0xb5,
	0x2f, 0x92, 0x09, 0x60, 0x94, 0x6b, 0x6b, 0x1a, 0x49, 0x9b, 0xf3, 0x22, 0x4e, 0x17, 0xc9, 0xa7,
	0x0b, 0x65, 0xcb, 0x67, 0x89, 0x00, 0xfb, 0x12, 0x2c, 0x8e, 0xd6, 0x25, 0xd5, 0x52, 0x89, 0x90,
	0xa6, 0xe5, 0x66, 0x1c, 0x26, 0x72, 0x93, 0x90, 0x3c, 0x30, 0x89, 0x90, 0xe9, 0x32, 0x6e, 0x12,
	0x59, 0x22, 0x60, 0xfa, 0x00, 0xd7, 0x32, 0x19, 0x8f, 0x05, 0x2f, 0x96, 0xf8, 0x2b, 0x58, 0x51,
	0x2c, 0xb8, 0x5e, 0xc6, 0xdf, 0x21, 0x8b, 0x5d, 0xee, 0xf9, 0x34, 0xec, 0x47, 0x2e, 0xa7, 0x22,
	0xf3, 0x78, 0x56, 0xf0, 0xbf, 0x86, 0x8b, 0x60, 0xce, 0xe0, 0x20, 0x5d, 0xcb, 0x5e, 0x21, 0x53,
	0x71, 0x87, 0x6b, 0x31, 0x39, 0xad, 0x5b, 0xaf, 0x23, 0xf2, 0xb8, 0xc3, 0x15, 0xb7, 0x9c, 0xd0,
	0x72, 0xd9, 0x96, 0x9c, 0x22, 0xf3, 0x22, 0xea, 0xa6, 0x5e, 0xb6, 0x87, 0xcc, 0x6f, 0xe0, 0xd8,
	0x8b, 0x3b, 0x7c, 0x57, 0x52, 0x1e, 0x78, 0xd9, 0x1e, 0xb0, 0xbf, 0x4b, 0x4e, 0x49, 0x76, 0x1a,
	0x87, 0x09, 0xf7, 0xa9, 0x1b, 0x32, 0x2e, 0x32, 0xb9, 0xe2, 0x8b, 0xcc, 0xcb, 0xfa, 0xa2, 0x75,
	0x15, 0xd6, 0xb0, 0x85, 0xb8, 0xc3, 0x37, 0x90, 0xe3, 0x8e, 0x64, 0x58, 0x13, 0xbb, 0x40, 0xb6,
	0xdb, 0xa4, 0x25, 0xa5, 0xfd, 0xa8, 0x2f, 0x32, 0xb0, 0x17, 0x4a, 0x4d, 0x79, 0x0d, 0x57, 0xd9,
	0xb8, 0xc3, 0xd7, 0x91, 0xbc, 0x19, 0xe8, 0x36, 0x55, 0x4a, 0x96, 0xe4, 0x40, 0xe4, 0xba, 0x56,
	0x52, 0x8b, 0x00, 0xfb, 0x2a, 0x99, 0x67, 0xdd, 0x38, 0xe1, 0x54, 0xae, 0x0b, 0x31, 0xf5, 0x33,
	0x1a, 0xb8, 0xfe, 0x1e, 0xf5, 0x9f, 0xb4, 0x3e, 0x0d, 0xfa, 0xcd, 0x22, 0x75, 0x3d, 0x27, 0xae,
	0x4b, 0x1a, 0xb8, 0xc7, 0xe4, 0x78, 0x88, 0xbd, 0xc8, 0x95, 0x87, 0x50, 0x3f, 0x62, 0x34, 0xce,
	0x5a, 0x6f, 0x82, 0xc8, 0x74, 0x4e, 0x7a, 0x9c, 0xc6, 0xeb, 0x40, 0xb0, 0xdb, 0x44, 0x9e, 0x48,
	0xa0, 0xc9, 0x60, 0x96, 0x15, 0x43, 0xb9, 0xf5, 0x19, 0x50, 0x6c, 0x4e, 0x91, 0xe5, 0x54, 0x5b,
	0xd7, 0x44, 0xfb, 0x16, 0x39, 0x8b, 0x0b, 0x83, 0x4b, 0x39, 0x4f, 0xb8, 0xbb, 0xe7, 0xc5, 0x41,
	0x24, 0xf7, 0xfb, 0x38, 0x91, 0x1d, 0x46, 0xb3, 0xd6, 0x0d, 0x10, 0x5f, 0x42, 0xae, 0x0d, 0xc9,
	0x74, 0x4f, 0xf1, 0xdc, 0x4f, 0x1c, 0xc9, 0x21, 0x4d, 0xa6, 0xfc, 0xdb, 0xf9, 0x0e, 0x57, 0xfa,
	0xfc, 0x5b, 0x68, 0x32, 0x29, 0x0e, 0xb5, 0xcb, 0x95, 0x34, 0x68, 0x93, 0x05, 0xda, 0x85, 0x63,
	0x4f, 0x4a, 0xa9, 0xec, 0xcc, 0x2e, 0x8b, 0x29, 0xe5, 0x2c, 0xee, 0xb6, 0x56, 0x51, 0x73, 0x24,
	0x3f, 0xa0, 0x94, 0x6f, 0x14, 0x44, 0x39, 0x22, 0x53, 0x4e, 0x43, 0x76, 0x28, 0x47, 0x37, 0x0b,
	0x70, 0x4e, 0xab, 0x21, 0xd9, 0xba, 0x89, 0x23, 0x12, 0x19, 0x1e, 0x6b, 0xba, 0x1a, 0x92, 0xf6,
	0x6d, 0x72, 0xae, 0x43, 0x45, 0x06, 0x2a, 0xf7, 0x05, 0x75, 0x13, 0xce, 0xba, 0x72, 0xe7, 0x11,
	0x58, 0x97, 0x54, 0xbb, 0x0d, 0x35, 0x9c, 0xca, 0xd9, 0x1e, 0x09, 0xba, 0x03, 0x4c, 0x6b, 0xe2,
	0xb1, 0x62, 0xb1, 0x37, 0xc8, 0xb9, 0x41, 0x0d, 0xbc, 0x28, 0x4a, 0x0e, 0x5c, 0x16, 0x43, 0x51,
	0xeb, 0xb3, 0x50, 0xcb, 0xe9, 0xba, 0x1e, 0x6b, 0x92, 0x69, 0x13, 0x79, 0xec, 0x35, 0x72, 0x66,
	0xb0, 0x1a, 0xc1, 0xba, 0xb2, 0xeb, 0x59, 0xa7, 0x9b, 0xb6, 0xde, 0xc6, 0x1e, 0xa8, 0x57, 0xb2,
	0x0b, 0x2c, 0x9b, 0x9d, 0x6e, 0x2a, 0xab, 0xd0, 0x87, 0x48, 0xd5, 0x9d, 0x21, 0x8b, 0xe4, 0xe8,
	0xa4, 0x87, 0x4c, 0x64, 0xa2, 0xf5, 0x39, 0x18, 0x37, 0x4b, 0x39, 0x13, 0x2e, 0xf8, 0x77, 0x80,
	0x65, 0x03, 0x38, 0xec, 0xaf, 0x91, 0x37, 0x46, 0x54, 0xd1, 0xa3, 0x42, 0x78, 0x5d, 0x9a, 0x9b,
	0x15, 0xb8, 0xdf, 0xbc, 0x03, 0x3a, 0x5d, 0x1a, 0x56, 0xe1, 0x36, 0xf2, 0xa3, 0xa9, 0x81, 0x9b,
	0x50, 0x8f, 0xdc, 0x7c, 0xbe, 0xca, 0x99, 0x34, 0xd7, 0x62, 0xd7, 0x67, 0xdc, 0xef, 0x47, 0x1e,
	0x6f, 0x7d, 0x1e, 0xf4, 0xbe, 0xfe, 0xcc, 0xcf, 0x6c, 0x8a, 0xfb, 0x49, 0xbc, 0xae, 0xa4, 0x6c,
	0x87, 0x5c, 0x1a, 0xf1, 0xb9, 0x28, 0xe9, 0x76, 0x4b, 0xd6, 0x6c, 0xeb, 0x5d, 0xa8, 0x7f, 0x65,
	0x58, 0xfd, 0x5b, 0xc8, 0x9a, 0x0f, 0x99, 0x3d, 0x72, 0x63, 0x44, 0x9d, 0x5e, 0x96, 0x71, 0xd6,
	0xe9, 0x17, 0x05, 0xa5, 0xd3, 0xf0, 0x17, 0x60, 0x73, 0xb8, 0x3a, 0xac, 0xfe, 0xb5, 0x5c, 0x0c,
	0xff, 0xbc, 0x9b, 0x1f, 0x98, 0xed, 0xb7, 0x49, 0x4b, 0x2f, 0xb5, 0xb9, 0x3d, 0x96, 0xf7, 0xe3,
	0x17, 0xa1, 0xd9, 0xe7, 0x73, 0x7a, 0x6e, 0x91, 0xa9, 0x3e, 0xfc, 0x3c, 0x59, 0x1a, 0x94, 0x8c,
	0x12, 0x5f, 0xda, 0xbf, 0x61, 0xeb, 0x4b, 0xd5, 0x55, 0x3a, 0x97, 0xdd, 0x4a, 0xfc, 0x07, 0x9c,
	0x86, 0x72, 0x0c, 0x0d, 0x0a, 0x7b, 0x22, 0xb7, 0x9d, 0x45, 0xeb, 0xcb, 0x38, 0x0c, 0xeb, 0xf2,
	0x6b, 0x42, 0x59, 0xd1, 0x70, 0x76, 0x1a, 0x52, 0x85, 0x9f, 0xb1, 0x7d, 0x2f, 0xa3, 0xad, 0x35,
	0x5c, 0x08, 0x06, 0xe4, 0x15, 0xdd, 0xde, 0x24, 0xba, 0x1f, 0xdc, 0xe2, 0xf8, 0x17, 0x31, 0x91,
	0x95, 0x5b, 0xf4, 0x16, 0xb4, 0xa8, 0x1e, 0xee, 0x8e, 0x3a, 0x0c, 0x6e, 0x31, 0x91, 0x15, 0x4d,
	0x78, 0x8a, 0x9c, 0xec, 0x79, 0x87, 0xb0, 0xa0, 0x88, 0xd6, 0x3a, 0x7c, 0xb7, 0xd1, 0xf3, 0x0e,
	0xe5, 0x12, 0x22, 0xa4, 0x39, 0xca, 0x82, 0x88, 0xba, 0x07, 0x5e, 0xe6, 0xab, 0x0d, 0xe6, 0x36,
	0xee, 0xaf, 0xb2, 0xf8, 0x7d, 0x59, 0x0a, 0xbb, 0xcb, 0x47, 0x16, 0x99, 0x28, 0xf4, 0x80, 0x35,
	0x7e, 0xc3, 0x2c, 0x5f, 0x78, 0xd9, 0xdd, 0xe0, 0x8c, 0xe7, 0xe7, 0x62, 0xd8, 0x75, 0xfe, 0xd0,
	0x22, 0x93, 0xc5, 0x49, 0x18, 0xb5, 0xbf, 0x63, 0xb0, 0xf6, 0x4d, 0x91, 0x1f, 0xcd, 0x41, 0xfd,
	0xbf, 0xb4, 0xc8, 0xfc, 0xb0, 0x83, 0x74, 0x98, 0xb4, 0xee, 0x1a, 0x8c, 0x62, 0x76, 0xf0, 0x50,
	0x1f, 0x26, 0xf6, 0xb7, 0x2c, 0x32, 0x55, 0x3a, 0xb9, 0x23, 0x8c, 0x7b, 0x06, 0xc3, 0x98, 0x2c,
	0x69, 0x0b, 0x08, 0xfe, 0xcc, 0x22, 0x33, 0x55, 0x67, 0x03, 0x82, 0xd8, 0x34, 0x18, 0xc4, 0x54,
	0xd9, 0x0f, 0x02, 0x28, 0x7e, 0xd7, 0x22, 0x63, 0x99, 0x9f, 0xf6, 0x84, 0x9a, 0xcd, 0x5f, 0x31,
	0x58, 0x7b, 0x82, 0x8a, 0x82, 0xde, 0x7f, 0x6c, 0x91, 0xa9, 0x92, 0x13, 0x07, 0x95, 0xff, 0xaa,
	0xc1, 0xca, 0x4f, 0x14, 0xfe, 0x25, 0x00, 0xf0, 0xfb, 0x16, 0x69, 0xe6, 0x4e, 0x1f, 0xd4, 0x7e,
	0xcb, 0xe4, 0x85, 0x34, 0x57, 0x15, 0x74, 0xff, 0x3d, 0x8b, 0x34, 0xb5, 0x2b, 0x09, 0x74, 0xdf,
	0x36, 0x58, 0xf7, 0x31, 0xe5, 0xda, 0xd2, 0xcd, 0x9e, 0xbb, 0xb1, 0x50, 0xf5, 0xfb, 0x26, 0x37,
	0x7b, 0xae, 0x2a, 0xe8, 0xfe, 0xe7, 0x16, 0x99, 0xc9, 0x0f, 0x13, 0xb9, 0x6d, 0x28, 0x11, 0xec,
	0x18, 0x8c, 0x60, 0x5a, 0x29, 0xac, 0x4c, 0xd2, 0x7c, 0xea, 0xc2, 0x79, 0xac, 0x8c, 0xe1, 0x81,
	0xc9, 0x53, 0x57, 0x6a, 0x5b, 0x02, 0x20, 0xc7, 0x90, 0x36, 0xe5, 0x40, 0xfb, 0xf7, 0x4c, 0x1e,
	0x43, 0xb9, 0xaa, 0xc5, 0x7a, 0xcf, 0x7a, 0x7a, 0xc9, 0x74, 0x8c, 0x5e, 0xef, 0x41, 0x51, 0xd0,
	0x1b, 0x02, 0x31, 0x70, 0xc9, 0x51, 0x17, 0x82, 0xa0, 0xfe, 0xae, 0xc9, 0x9b, 0x2d, 0xae, 0x3b,
	0xa8, 0x2e, 0x80, 0xf8, 0x03, 0x8b, 0x4c, 0x96, 0x5c, 0x9b, 0x80, 0xe0, 0xa1, 0xc9, 0x43, 0x27,
	0xf7, 0xb5, 0x82, 0xf6, 0x7f, 0x64, 0x91, 0xa9, 0xb2, 0xa3, 0x15, 0xd4, 0x7f, 0x64, 0xb2, 0xfd,
	0xac, 0x3d, 0xbf, 0x7a, 0x08, 0xa9, 0x53, 0x2a, 0xfa, 0x7b, 0x11, 0xc1, 0x63, 0x93, 0x87, 0x10,
	0xea, 0x8b, 0x4e, 0x68, 0x00, 0xf1, 0x57, 0x16, 0x59, 0x18, 0xf4, 0x44, 0x23, 0x92, 0xf7, 0x4d,
	0x3e, 0x05, 0xd4, 0x9d, 0xe4, 0x80, 0xe6, 0x4f, 0x2c, 0xe5, 0x05, 0xcf, 0x3d, 0xe5, 0x08, 0xe4,
	0x03, 0x93, 0xcf, 0x01, 0x25, 0x27, 0x7e, 0x15, 0x83, 0xf6, 0xe4, 0x03, 0x86, 0x0f, 0x4d, 0xc7,
	0xa0, 0xee, 0x17, 0x00, 0xc3, 0xb7, 0x2d, 0x32, 0x5d, 0xbe, 0x60, 0x40, 0x08, 0x3f, 0x6e, 0x32,
	0x84, 0xd2, 0xdd, 0x87, 0x9e, 0x18, 0xa5, 0x0b, 0x10, 0x75, 0x03, 0x82, 0x40, 0xbe, 0x66, 0xf2,
	0xc4, 0x28, 0x2e, 0x67, 0x3a, 0x47, 0xda, 0x55, 0xf1, 0x3d, 0x8b, 0xcc, 0x0f, 0x5c, 0xab, 0x20,
	0x98, 0x9f, 0x30, 0x18, 0xcc, 0x4c, 0xed, 0xc6, 0x07, 0xb0, 0xfc, 0x96, 0x45, 0x1a, 0x9d, 0x50,
	0x59, 0xdb, 0x3f, 0x69, 0xb0, 0xf6, 0x27, 0x3a, 0x21, 0x1a, 0xda, 0x7f, 0x61, 0x91, 0xd9, 0xda,
	0xb5, 0x14, 0x6a, 0xff, 0x75, 0x83, 0xb5, 0xb7, 0xab, 0x37, 0x66, 0xfa, 0xc4, 0x50, 0xbd, 0x36,
	0x43, 0x1c, 0xae, 0xc9, 0x27, 0x86, 0xca, 0x8d, 0x9e, 0x1e, 0x41, 0x59, 0xa2, 0x26, 0xf3, 0x37,
	0x4c, 0x1e, 0x41, 0x59, 0x22, 0xf4, 0x82, 0x5a, 0xbe, 0x3e, 0x44, 0xd5, 0x3d, 0x93, 0x17, 0xd4,
	0xd2, 0xcd, 0x26, 0x40, 0xf8, 0x07, 0x8b, 0x9c, 0x1d, 0x79, 0xbd, 0x89, 0x78, 0x3a, 0x06, 0xe3,
	0x39, 0x35, 0xe2, 0xe6, 0x15, 0xb0, 0x7d, 0xc7, 0x22, 0x73, 0xf5, 0xeb, 0x57, 0x84, 0xe4, 0x9b,
	0x3c, 0xc3, 0xab, 0x37, 0xc3, 0x80, 0xe4, 0xaf, 0x2d, 0xbc, 0xb1, 0xad, 0x5d, 0x0f, 0x23, 0x98,
	0xc0, 0xe4, 0x7d, 0xaf, 0x7e, 0x73, 0x0d, 0x70, 0xfe, 0xd6, 0x22, 0x8b, 0x43, 0xaf, 0xaf, 0x01,
	0x0f, 0x35, 0x18, 0xcf, 0xdc, 0xc0, 0x95, 0xba, 0xbe, 0x73, 0xa8, 0xdf, 0x8a, 0x87, 0x26, 0x9f,
	0x99, 0xfc, 0xca, 0x45, 0xfd, 0x77, 0x2d, 0x32, 0x37, 0x70, 0x53, 0x0f, 0x20, 0xba, 0x26, 0x9b,
	0x21, 0xb5, 0xf0, 0x01, 0x80, 0xf2, 0x37, 0x16, 0x69, 0x0d, 0x09, 0x1f, 0x40, 0x34, 0x7b, 0x26,
	0x8f, 0xac, 0x81, 0xc8, 0x06, 0xc0, 0xf3, 0x03, 0x8b, 0x9c, 0x1e, 0x11, 0xde, 0x80, 0x98, 0x98,
	0xc1, 0x98, 0x16, 0x87, 0x46, 0x5e, 0x00, 0xae, 0x7f, 0xb2, 0xc8, 0xb9, 0xd1, 0xa1, 0x13, 0x08,
	0xed, 0xa7, 0x0c, 0x86, 0x76, 0x7a, 0x54, 0x54, 0x87, 0xee, 0xb5, 0x11, 0xa1, 0x1d, 0x08, 0xed,
	0x89, 0xc9, 0xbd, 0x36, 0x34, 0xea, 0x04, 0x70, 0xfd, 0xc8, 0x22, 0x17, 0x8e, 0x0f, 0x9a, 0x41,
	0x78, 0x91, 0xc1, 0xf0, 0xce, 0x8e, 0x8e, 0xe7, 0xd1, 0x16, 0xd1, 0xc8, 0xf0, 0x1a, 0x84, 0xd7,
	0x33, 0xd9, 0x22, 0x1a, 0x11, 0xf9, 0x03, 0xd8, 0x7e, 0x68, 0x91, 0x95, 0x41, 0x6c, 0x7d, 0x41,
	0xf3, 0xe8, 0x1f, 0xc4, 0x17, 0x9b, 0xdc, 0x7d, 0x75, 0x7c, 0x8f, 0x04, 0x55, 0x71, 0x49, 0x00,
	0xf1, 0x9f, 0x2d, 0xf2, 0xea, 0x33, 0x62, 0x93, 0x10, 0x64, 0x62, 0x30, 0xc8, 0xf3, 0xc7, 0x85,
	0x4d, 0x1d, 0xd3, 0x93, 0xa5, 0xd8, 0x29, 0x04, 0x99, 0xbe, 0x48, 0x3d, 0x59, 0x84, 0x75, 0x69,
	0x88, 0xc7, 0xc6, 0x76, 0x21, 0xc4, 0x9f, 0x36, 0x19, 0xe2, 0xe8, 0xb0, 0x33, 0x80, 0xf8, 0x3f,
	0x16, 0x79, 0xf3, 0x13, 0xc4, 0x9e, 0x21, 0x60, 0x6e, 0x30, 0xe0, 0xd7, 0x9f, 0x2f, 0x2c, 0x0e,
	0xc0, 0xff, 0x97, 0x45, 0x5e, 0x1f, 0x01, 0x5e, 0x1c, 0x89, 0x28, 0xe9, 0x56, 0x17, 0x5d, 0x61,
	0x30, 0xec, 0x8b, 0xc3, 0x60, 0xef, 0x02, 0x88, 0xf2, 0xf2, 0xfb, 0xaf, 0x16, 0xb9, 0xf8, 0xcc,
	0x50, 0x3a, 0x00, 0x9b, 0x19, 0x0c, 0x76, 0xf9, 0xd8, 0x98, 0x3e, 0x1d, 0xc4, 0x34, 0x18, 0x0f,
	0x07, 0xc8, 0xfa, 0x26, 0x9f, 0x56, 0xeb, 0x11, 0x7a, 0x00, 0xe6, 0x1f, 0x2d, 0x72, 0x6e, 0x74,
	0x70, 0x21, 0xa2, 0xda, 0x7f, 0x11, 0x7c, 0x24, 0xb5, 0xb8, 0x47, 0xbd, 0xc8, 0x1e, 0x1b, 0xfc,
	0x88, 0xf8, 0x0e, 0x4c, 0x5e, 0x64, 0x47, 0xc7, 0x65, 0xea, 0xa3, 0xc6, 0xe8, 0xe0, 0x4c, 0xc4,
	0x77, 0x68, 0xf2, 0x51, 0x63, 0x54, 0xdc, 0x28, 0xa0, 0xfb, 0x37, 0x8b, 0x5c, 0x7a, 0x66, 0x9a,
	0x07, 0x82, 0x3c, 0x32, 0x18, 0xe4, 0x85, 0x67, 0x64, 0xa0, 0xe4, 0xf9, 0x07, 0x3a, 0x20, 0x89,
	0xd3, 0x34, 0xf2, 0x7c, 0xc8, 0x7f, 0x79, 0x5a, 0xc9, 0x6d, 0x73, 0x90, 0xb0, 0x26, 0xec, 0xcb,
	0x79, 0x7a, 0x94, 0x27, 0xdc, 0xa0, 0x0f, 0xff, 0x6f, 0xfd, 0x0c, 0xf0, 0x36, 0x15, 0xef, 0xed,
	0xbe, 0xfc, 0xaf, 0xfd, 0x77, 0x16, 0x39, 0x3d, 0x2a, 0x00, 0x17, 0x5a, 0xee, 0x67, 0x0d, 0x6e,
	0xb9, 0xd6, 0xb0, 0x80, 0x60, 0x68, 0xae, 0x8f, 0x2c, 0x32, 0xa1, 0x83, 0x81, 0x11, 0xc8, 0xcf,
	0x19, 0x1d, 0x87, 0xa0, 0xe2, 0x94, 0x41, 0xf9, 0x8f, 0x2d, 0x32, 0x5b, 0x0b, 0x56, 0x46, 0x08,
	0x3f, 0x6f, 0xf2, 0xad, 0x46, 0x25, 0x8e, 0x5a, 0xe2, 0x58, 0xf9, 0xdf, 0x0e, 0x19, 0x53, 0x29,
	0xc1, 0x90, 0x10, 0x7c, 0x95, 0xd8, 0x7b, 0x9e, 0x70, 0x13, 0x1e, 0x96, 0x53, 0x45, 0x54, 0x3e,
	0xf0, 0x9e, 0x27, 0x76, 0x78, 0x58, 0x4a, 0x11, 0xb9, 0x47, 0x96, 0x99, 0x70, 0x03, 0x1a, 0x7a,
	0xfd, 0x28, 0x53, 0xc9, 0x1a, 0x72, 0xd1, 0x8a, 0x93, 0x52, 0x12, 0xd2, 0x4b, 0x30, 0xa6, 0xcf,
	0x30, 0x71, 0x1b, 0xf9, 0x76, 0x72, 0xb6, 0xfb, 0x49, 0x91, 0x8a, 0xb4, 0x4e, 0xce, 0x0e, 0x56,
	0x83, 0xf9, 0x71, 0xf8, 0x64, 0x80, 0x7a, 0xdd, 0xe6, 0x54, 0x50, 0xab, 0xc4, 0x91, 0x3c, 0xf8,
	0x80, 0x80, 0xbd, 0x4c, 0xc6, 0x61, 0x40, 0x81, 0xe1, 0x4e, 0xf3, 0x04, 0xe2, 0x31, 0xd9, 0x71,
	0xaa, 0xc8, 0xfe, 0x1c, 0x59, 0x2c, 0x58, 0xdc, 0x03, 0x8f, 0xc7, 0x6e, 0xb6, 0xc7, 0xa9, 0xd8,
	0x4b, 0xa2, 0x40, 0x25, 0x11, 0xcf, 0x6b, 0xfe, 0xf7, 0x3d, 0x1e, 0x3f, 0xcc, 0xa9, 0xf6, 0x2a,
	0x59, 0x60, 0xc2, 0xad, 0x4b, 0x27, 0x71, 0x74, 0x04, 0x99, 0xc3, 0x0d, 0x67, 0x86, 0x89, 0xed,
	0xb2, 0xe8, 0x4e, 0x1c, 0x1d, 0xd9, 0x37, 0xc9, 0x42, 0x49, 0xa4, 0x92, 0x6a, 0x75, 0x02, 0x73,
	0x99, 0xf4, 0xe7, 0xca, 0x09, 0x57, 0x1f, 0x59, 0x64, 0x2a, 0xe1, 0xdc, 0xe5, 0x49, 0x52, 0x3c,
	0x95, 0xd2, 0x30, 0x35, 0x79, 0x32, 0xe1, 0xdc, 0x49, 0x12, 0xfd, 0x6e, 0xcb, 0x5d, 0x18, 0x16,
	0x25, 0xd8, 0x01, 0x13, 0xbe, 0xc7, 0x03, 0x97, 0x1e, 0x66, 0xdc, 0x83, 0x0b, 0x02, 0xcc, 0x78,
	0x6e, 0x38, 0xa7, 0x4b, 0x6d, 0x76, 0x1b, 0xb9, 0x36, 0x24, 0xd3, 0x03, 0xc9, 0x63, 0xbf, 0x4d,
	0x16, 0x99, 0x70, 0x63, 0x7a, 0x98, 0x41, 0x80, 0xb3, 0xa0, 0x51, 0x58, 0xcf, 0x77, 0x9e, 0x63,
	0xe2, 0x3e, 0x3d, 0xcc, 0xee, 0x25, 0xe9, 0x2e, 0x8d, 0x42, 0x3d, 0x9e, 0x3e, 0x43, 0xe6, 0xca,
	0x92, 0xfd, 0xd8, 0xdf, 0xf3, 0xe2, 0x2e, 0x0d, 0x20, 0xd5, 0xb9, 0xe1, 0xd8, 0x5a, 0xea, 0x51,
	0x4e, 0xb1, 0xdf, 0x20, 0xd3, 0x29, 0xe5, 0x3d, 0x2f, 0xa6, 0x71, 0xe6, 0xc6, 0x34, 0x3b, 0x48,
	0xf8, 0x13, 0xc8, 0x79, 0x6e, 0x38, 0x53, 0x9a, 0x70, 0x1f, 0xcb, 0xed, 0x4b, 0x64, 0xb2, 0x3c,
	0x3a, 0x5d, 0x16, 0xab, 0x17, 0x7c, 0x9a, 0xbc, 0x18, 0x90, 0x9b, 0xb1, 0x7d, 0x85, 0x4c, 0x55,
	0xf8, 0x92, 0x7e, 0x06, 0xc9, 0xce, 0x27, 0x9d, 0x89, 0x12, 0xe3, 0x4e, 0x3f, 0xb3, 0x5f, 0x27,
	0xd3, 0xaa, 0xb5, 0xe4, 0xe4, 0x43, 0xbb, 0x5b, 0xe5, 0x3c, 0x4f, 0x22, 0x61, 0x87, 0x87, 0x68,
	0xcd, 0x4a, 0x74, 0x72, 0x1f, 0xd8, 0xa7, 0x6e, 0xca, 0xd1, 0x4c, 0x90, 0x73, 0xb6, 0x9f, 0x41,
	0xd6, 0x73, 0xc3, 0xb1, 0x91, 0xf8, 0x00, 0x69, 0x6b, 0x42, 0x55, 0x2f, 0x3b, 0x92, 0x4b, 0x56,
	0x70, 0x6b, 0x4a, 0xf6, 0x69, 0x60, 0x9f, 0x44, 0xc2, 0x1a, 0x94, 0x4b, 0xde, 0xeb, 0x98, 0xe6,
	0x5f, 0xa9, 0x9e, 0xc5, 0x90, 0xe1, 0xdc, 0x70, 0xa6, 0x6b, 0x95, 0x33, 0x00, 0x59, 0xad, 0x9b,
	0xc5, 0x90, 0xda, 0xdc, 0x70, 0x26, 0xca, 0x55, 0x6f, 0xc6, 0xf6, 0x2a, 0x99, 0x57, 0x1e, 0x6f,
	0x6c, 0x15, 0x4e, 0xc3, 0x88, 0xfa, 0x59, 0xc2, 0x55, 0x5e, 0xf3, 0x2c, 0x52, 0x61, 0x52, 0x3b,
	0x39, 0x4d, 0x0e, 0x03, 0xcf, 0xf7, 0x69, 0x9a, 0x4b, 0x45, 0xb4, 0xeb, 0xf9, 0x47, 0x6e, 0x4a,
	0x5d, 0x9e, 0x41, 0x76, 0x73, 0xc3, 0x99, 0x43, 0x06, 0x10, 0xdc, 0x02, 0xf2, 0x03, 0xea, 0x64,
	0xf6, 0x0a, 0x69, 0x32, 0x21, 0x17, 0x37, 0x1a, 0xe3, 0xa0, 0x99, 0x07, 0xee, 0x31, 0x26, 0xd6,
	0xc2, 0x0d, 0x2c, 0xb2, 0xdf, 0x26, 0x2d, 0x74, 0x5d, 0x27, 0xbd, 0x5e, 0x3f, 0x96, 0x43, 0x5d,
	0x9f, 0x76, 0x20, 0xbd, 0xb9, 0xe1, 0xcc, 0x4b, 0xfa, 0x7a, 0x4e, 0xd6, 0x67, 0x09, 0xfb, 0x21,
	0xb9, 0x0c, 0x92, 0x15, 0xf3, 0x6d, 0x58, 0x3d, 0x98, 0xf7, 0xdc, 0x70, 0x2e, 0x48, 0xf6, 0xbb,
	0x25, 0x7b, 0x69, 0xb0, 0x52, 0x61, 0x6f, 0x92, 0x65, 0xa8, 0x95, 0x1e, 0x66, 0x34, 0x0e, 0xe8,
	0x70, 0xc5, 0x16, 0xa1, 0xbe, 0xb3, 0x92, 0x71, 0x43, 0xf1, 0x0d, 0x51, 0x10, 0x52, 0xe4, 0xc3,
	0xcc, 0xe5, 0x54, 0xcd, 0xf2, 0xca, 0xc2, 0xbc, 0x84, 0x69, 0x98, 0x92, 0xc3, 0x51, 0x0c, 0xe5,
	0x25, 0xf9, 0x26, 0x59, 0xf0, 0xa2, 0x03, 0xef, 0x08, 0x1c, 0x70, 0x95, 0x6a, 0x20, 0x47, 0xb9,
	0xe1, 0xcc, 0x02, 0xf9, 0x91, 0xa0, 0xbb, 0xa5, 0x1a, 0xec, 0x57, 0xc9, 0x84, 0x60, 0x19, 0x75,
	0x93, 0x50, 0xad, 0xe4, 0x90, 0xa1, 0x7c, 0xd2, 0x19, 0x97, 0xa5, 0x3b, 0x21, 0x2e, 0xdc, 0xf6,
	0x45, 0x32, 0x91, 0xaf, 0xf7, 0x07, 0xd2, 0x40, 0xc8, 0x54, 0x7a, 0x72, 0x53, 0x95, 0xbe, 0x0f,
	0x85, 0xf6, 0x65, 0x32, 0x99, 0xb3, 0x81, 0x8f, 0xcc, 0x13, 0x90, 0x9d, 0xdc, 0x74, 0x72, 0xe9,
	0x35, 0x2c, 0xb5, 0x5d, 0x72, 0xdd, 0x0b, 0xdd, 0x28, 0x89, 0xbb, 0x6e, 0xc4, 0xf6, 0x69, 0xa9,
	0x4f, 0xf2, 0x25, 0x17, 0x2f, 0x27, 0x61, 0xa3, 0x96, 0xad, 0xa6, 0xd2, 0x97, 0x2f, 0x7b, 0xe1,
	0x56, 0x12, 0x77, 0xb7, 0xa4, 0xcc, 0xdd, 0xea, 0x65, 0x2d, 0x5c, 0x0c, 0xca, 0xc5, 0x78, 0x97,
	0xc6, 0x81, 0xed, 0x93, 0x37, 0x9f, 0xff, 0x03, 0x38, 0x18, 0x55, 0xe6, 0xf3, 0x6b, 0xcf, 0xf1,
	0x89, 0x35, 0x10, 0xb0, 0xdf, 0x23, 0x97, 0x9e, 0xf1, 0x11, 0xd8, 0x94, 0x23, 0xaa, 0x12, 0xa3,
	0x97, 0x47, 0x57, 0xbd, 0x8e, 0x8c, 0xb2, 0x17, 0xe5, 0x0c, 0x10, 0x6e, 0xb2, 0x4f, 0x39, 0x67,
	0x01, 0x2d, 0xfa, 0x7f, 0x45, 0xa5, 0xb9, 0x8a, 0x35, 0xb1, 0xa3, 0x88, 0xba, 0xf3, 0x2f, 0x91,
	0x49, 0x29, 0xc6, 0xba, 0xa9, 0x9e, 0x3a, 0x17, 0xd0, 0x36, 0x65, 0x62, 0x8d, 0x75, 0xd3, 0x7c,
	0xf2, 0xdc, 0x22, 0x67, 0x73, 0x3e, 0x3f, 0x11, 0xe5, 0xc1, 0x9f, 0x8b, 0xbd, 0x8a, 0x19, 0x8e,
	0x28, 0xb6, 0x9e, 0x88, 0x62, 0xcc, 0x17, 0x13, 0x70, 0x71, 0x44, 0x1d, 0x2c, 0x50, 0x19, 0xd6,
	0x73, 0x43, 0xc4, 0x37, 0x03, 0x65, 0x7f, 0x0c, 0x93, 0xcc, 0xb8, 0x17, 0x0b, 0x96, 0xb1, 0x7d,
	0xaa, 0xb2, 0xaf, 0xcf, 0x0c, 0xa9, 0xe1, 0xa1, 0x66, 0x82, 0xc1, 0x3e, 0xa4, 0x9a, 0x34, 0x61,
	0x2a, 0x31, 0x7b, 0xd6, 0xab, 0x4b, 0x3f, 0x48, 0x98, 0x34, 0xf9, 0x73, 0x05, 0x7a, 0x34, 0xd0,
	0x98, 0xaf, 0xe4, 0x6f, 0xc9, 0xc8, 0x4f, 0x6e, 0xd3, 0x20, 0x47, 0x7a, 0x86, 0x10, 0xb5, 0x90,
	0x25, 0x07, 0x31, 0x64, 0x67, 0x37, 0x9c, 0x93, 0x58, 0xb2, 0x73, 0x10, 0xdb, 0xa7, 0xc9, 0x49,
	0x0c, 0x92, 0xf1, 0xb2, 0x3d, 0x48, 0xc4, 0x6e, 0x38, 0x45, 0x81, 0xfd, 0x16, 0x99, 0x67, 0xc2,
	0x0d, 0xe1, 0xc5, 0x2b, 0x74, 0x14, 0xe7, 0x9f, 0x7b, 0x23, 0x37, 0x3f, 0xee, 0x48, 0x22, 0x78,
	0x2c, 0xf3, 0x2f, 0xbe, 0x4b, 0x4e, 0x0d, 0xdd, 0x07, 0xdd, 0x1e, 0x7c, 0x44, 0x65, 0x62, 0x0f,
	0xee, 0x86, 0xdb, 0xf0, 0xc9, 0x77, 0xc8, 0x12, 0x13, 0x78, 0xb1, 0xa7, 0x5e, 0xab, 0xcb, 0x32,
	0xae, 0x3f, 0x7b, 0x0d, 0x17, 0x47, 0x26, 0xe4, 0x04, 0xc1, 0x17, 0xeb, 0xb2, 0x8c, 0xe7, 0x5f,
	0x5e, 0x26, 0xe3, 0x3a, 0x49, 0xcc, 0xdd, 0x5f, 0x55, 0x69, 0xd8, 0x63, 0xba, 0xec, 0xf1, 0x6a,
	0x8d, 0xa5, 0x0d, 0x79, 0xd7, 0x15, 0x96, 0xb6, 0xfd, 0x26, 0x99, 0x2d, 0x58, 0x8a, 0x67, 0xdb,
	0x20, 0xdf, 0xba, 0xe9, 0xd8, 0x9a, 0xb6, 0x95, 0xbf, 0xdb, 0x26, 0xb7, 0xf1, 0x42, 0x22, 0x4f,
	0x27, 0xc5, 0x54, 0xeb, 0x29, 0x4d, 0xc8, 0x93, 0x47, 0x37, 0xc8, 0xf9, 0x12, 0x33, 0x0d, 0xa5,
	0x19, 0xe4, 0xb2, 0x5e, 0xaa, 0x7d, 0x7b, 0xfb, 0xab, 0x2a, 0xcf, 0xfa, 0x54, 0x21, 0x4b, 0xc3,
	0xc7, 0x3c, 0xdc, 0xec, 0xa5, 0xaa, 0x92, 0xc7, 0xab, 0xcf, 0x51, 0x4d, 0x5b, 0xa5, 0x5b, 0x1f,
	0x53, 0x4d, 0xdb, 0x5e, 0x27, 0xe7, 0x4a, 0xed, 0xc1, 0x43, 0x97, 0xd3, 0xba, 0x32, 0x98, 0x79,
	0xbd, 0x54, 0x34, 0x11, 0x0f, 0x1d, 0x5a, 0xd1, 0xe5, 0x99, 0x95, 0xb4, 0x55, 0x12, 0xf6, 0xe8,
	0x4a, 0xda, 0xf6, 0x35, 0x62, 0xd3, 0xd8, 0xf7, 0x52, 0xd1, 0x8f, 0x4a, 0x8f, 0x65, 0x61, 0xea,
	0xf5, 0x74, 0x85, 0x02, 0x8f, 0x65, 0xcd, 0x93, 0x57, 0x58, 0x2f, 0x4d, 0x78, 0x06, 0x79, 0xd5,
	0x0d, 0x47, 0xfd, 0x05, 0xaf, 0xf2, 0xc1, 0xbf, 0x5c, 0x91, 0xb1, 0xcc, 0xdf, 0x63, 0x71, 0x17,
	0x92, 0xa6, 0x1b, 0xce, 0x24, 0x96, 0xef, 0xe6, 0xc5, 0xf2, 0x8b, 0x8a, 0x95, 0x53, 0x7d, 0x02,
	0x50, 0xe9, 0xd1, 0xd3, 0x48, 0x71, 0x0a, 0x82, 0xfd, 0x65, 0x72, 0x7a, 0x90, 0xbd, 0xf4, 0x95,
	0x77, 0xd4, 0xaa, 0x53, 0x17, 0x2c, 0x3e, 0xb8, 0x46, 0xce, 0x94, 0x46, 0x16, 0x1c, 0xc4, 0xe1,
	0xad, 0x47, 0x1a, 0xa0, 0x95, 0x01, 0x29, 0xce, 0xe5, 0x56, 0xda, 0x92, 0x3c, 0x5b, 0xc8, 0x02,
	0x76, 0x06, 0x64, 0xc8, 0xab, 0x18, 0x11, 0x15, 0xdc, 0x46, 0xb1, 0x0e, 0x01, 0xf9, 0xcb, 0x4d,
	0x67, 0x4e, 0x91, 0x55, 0x28, 0x19, 0x05, 0x69, 0x01, 0x11, 0x71, 0xd5, 0x13, 0x16, 0x9e, 0x1d,
	0xbf, 0x60, 0xf2, 0xd9, 0x31, 0x29, 0x9f, 0xfc, 0xb4, 0x1b, 0x75, 0xf0, 0xd0, 0x06, 0x48, 0xbe,
	0x68, 0x74, 0x14, 0x78, 0xed, 0x08, 0xa9, 0x83, 0xe5, 0xca, 0x87, 0x47, 0xc4, 0xf1, 0x25, 0x93,
	0x83, 0xe5, 0x4a, 0xe7, 0x5a, 0x1d, 0xa1, 0x28, 0xcf, 0x8c, 0xa0, 0xf9, 0x97, 0x4d, 0x8e, 0x50,
	0x4c, 0x38, 0xd7, 0x61, 0xeb, 0xd5, 0xd3, 0x1d, 0xe8, 0xbe, 0x66, 0x74, 0x88, 0x62, 0x71, 0xda,
	0xd4, 0x31, 0xdf, 0x43, 0xf6, 0x57, 0x00, 0x72, 0xcb, 0xe8, 0xd8, 0xb7, 0xda, 0x96, 0xaf, 0xfd,
	0x5a, 0xb5, 0x83, 0x2d, 0x42, 0x59, 0x37, 0x3a, 0xbf, 0xaf, 0x7c, 0xe6, 0xd6, 0xc1, 0x95, 0xf5,
	0x83, 0x37, 0x02, 0xb9, 0x6d, 0x72, 0x70, 0x65, 0xd5, 0x27, 0xa0, 0x33, 0x86, 0x94, 0x63, 0x40,
	0x5d, 0xc6, 0x19, 0xff, 0xe2, 0xc1, 0x14, 0xea, 0x8b, 0xce, 0x0a, 0x9d, 0x4a, 0x30, 0xe8, 0xb1,
	0x30, 0xfe, 0xf1, 0x83, 0x99, 0x9a, 0xaf, 0x43, 0x87, 0x87, 0x0e, 0xc3, 0x62, 0xfe, 0x2b, 0x08,
	0x73, 0x03, 0x70, 0x74, 0xa6, 0x41, 0xcd, 0x1d, 0x63, 0xfe, 0x53, 0x08, 0x38, 0x55, 0xb4, 0x8f,
	0x28, 0x7f, 0xcf, 0x61, 0xba, 0xec, 0x1b, 0x32, 0xff, 0x2d, 0x84, 0x89, 0x48, 0xfb, 0xaa, 0x74,
	0xa4, 0x6e, 0xe1, 0xad, 0x32, 0xff, 0x35, 0x84, 0xa6, 0x97, 0xbb, 0xd1, 0x74, 0xaa, 0x47, 0xcd,
	0x97, 0x66, 0xfc, 0x9b, 0x08, 0xd3, 0x15, 0xe7, 0x9e, 0x0e, 0x84, 0x18, 0x74, 0xec, 0xc1, 0xbd,
	0x6c, 0x0d, 0x98, 0xc9, 0xcf, 0x25, 0x2c, 0xd7, 0x9d, 0x8d, 0x12, 0x40, 0x15, 0xe8, 0x0f, 0x2c,
	0x72, 0x7a, 0x94, 0xaf, 0xd1, 0xf8, 0x27, 0x15, 0x16, 0x87, 0x3a, 0x3f, 0xf5, 0x9e, 0x59, 0x75,
	0x7c, 0x1a, 0xff, 0xca, 0xc2, 0x54, 0xd9, 0x0d, 0x0b, 0x20, 0x7e, 0xdb, 0x22, 0x27, 0x45, 0xe2,
	0x26, 0xe6, 0xbf, 0xaf, 0x70, 0x42, 0x24, 0x3b, 0x3a, 0xb1, 0x1f, 0xdd, 0xb9, 0xe6, 0x3f, 0xa8,
	0x40, 0x50, 0xd1, 0x62, 0xd9, 0x45, 0x4f, 0xb2, 0xde, 0xc8, 0xdf, 0x33, 0x7a, 0xd9, 0x45, 0x65,
	0xd5, 0x06, 0xfe, 0xdf, 0x16, 0xb9, 0x3a, 0xc2, 0x6f, 0x3c, 0xe0, 0x9a, 0x36, 0xfe, 0xc1, 0x85,
	0x8b, 0x43, 0x7c, 0xda, 0xbb, 0x15, 0x67, 0x39, 0x60, 0xfe, 0x0f, 0x8b, 0xbc, 0x76, 0x2c, 0x66,
	0xe5, 0x29, 0x37, 0xff, 0x89, 0x86, 0x0b, 0xa3, 0x00, 0x2b, 0x17, 0xbe, 0x7e, 0xaf, 0xa4, 0xec,
	0xc4, 0x37, 0xfe, 0xd9, 0x86, 0x09, 0x4f, 0x5f, 0x2a, 0x00, 0x80, 0xdf, 0xb1, 0xc8, 0x49, 0xf0,
	0x93, 0x1b, 0xff, 0x62, 0x43, 0x43, 0xaa, 0xa9, 0xb3, 0x75, 0x86, 0x5e, 0x4b, 0x98, 0xfe, 0x64,
	0xc3, 0xdc, 0xc0, 0x65, 0x85, 0x76, 0x10, 0xe5, 0x77, 0x15, 0x46, 0x3f, 0xd4, 0x70, 0xc2, 0xc3,
	0x7b, 0x13, 0x5c, 0x98, 0xf5, 0x8d, 0x89, 0xf9, 0x0f, 0x33, 0x34, 0xf5, 0x65, 0x4e, 0xfe, 0xd6,
	0xca, 0x84, 0xbe, 0xc0, 0x31, 0xff, 0x49, 0x86, 0xa6, 0xd6, 0x55, 0xaf, 0x39, 0xe5, 0xeb, 0x26,
	0xe3, 0xdf, 0x63, 0x98, 0x08, 0xf5, 0xfd, 0x17, 0x00, 0xf8, 0x7b, 0x8b, 0x9c, 0x19, 0x75, 0xf5,
	0x65, 0xfe, 0xa3, 0x0c, 0x8b, 0xf1, 0xb0, 0x3b, 0x39, 0xed, 0x79, 0x1f, 0x88, 0x55, 0x31, 0xff,
	0x65, 0x86, 0xd9, 0x7a, 0x18, 0x8d, 0x76, 0x39, 0xd6, 0xaf, 0x18, 0x8d, 0x7f, 0xa6, 0x01, 0x4e,
	0x8d, 0xfa, 0xce, 0x53, 0xbb, 0x1c, 0xcb, 0x37, 0x9e, 0xae, 0x17, 0xb2, 0x17, 0xe0, 0xc5, 0x86,
	0xd2, 0x85, 0xec, 0x5a, 0xc8, 0x86, 0x21, 0x69, 0x17, 0x48, 0xdc, 0x17, 0x03, 0x49, 0x3b, 0x47,
	0x22, 0x57, 0x80, 0x61, 0xf7, 0xc7, 0x05, 0xa2, 0x6f, 0x98, 0x9d, 0xa0, 0x5a, 0xbf, 0xde, 0xce,
	0x81, 0xc9, 0x13, 0x6e, 0xe5, 0x9a, 0xdb, 0xfc, 0xc7, 0x1d, 0x2a, 0xb7, 0xef, 0x00, 0xe2, 0xdf,
	0xa5, 0x0d, 0x7f, 0xec, 0xbd, 0xb9, 0xec, 0xa6, 0xfd, 0x55, 0xf3, 0x1f, 0x7a, 0x58, 0x19, 0x79,
	0xad, 0xbf, 0x16, 0xb2, 0xc7, 0xab, 0x9f, 0x04, 0x6d, 0xdb, 0xfc, 0x37, 0x20, 0x8e, 0x47, 0xdb,
	0xce, 0x03, 0xff, 0xaf, 0x1c, 0x1b, 0x87, 0x50, 0xee, 0x5a, 0x93, 0xdf, 0x88, 0x58, 0x1e, 0x15,
	0x26, 0x51, 0xf4, 0xec, 0xf3, 0x61, 0x6d, 0x9b, 0xff, 0x7e, 0xc4, 0xb1, 0x58, 0xb1, 0x5f, 0xbf,
	0x6f, 0x91, 0x25, 0xf0, 0x50, 0xd7, 0xa3, 0x43, 0xcc, 0x7f, 0x56, 0x62, 0xc1, 0x0b, 0x37, 0xea,
	0xa1, 0x2b, 0xda, 0xfd, 0xa3, 0xa2, 0x49, 0xf4, 0xbe, 0x60, 0xf2, 0xd3, 0x12, 0x4d, 0x54, 0x36,
	0xdf, 0x0b, 0x7e, 0x68, 0x91, 0x95, 0x63, 0x43, 0x59, 0xcc, 0x7f, 0x5e, 0xe2, 0xec, 0xe8, 0x28,
	0x9b, 0xe2, 0xc5, 0x82, 0xe1, 0xa1, 0x36, 0x2f, 0xc0, 0x3b, 0x13, 0x43, 0xa3, 0x80, 0x20, 0xfd,
	0xe2, 0x3f, 0x3f, 0x85, 0xbf, 0x76, 0x3c, 0xf0, 0x8b, 0xcf, 0x23, 0x7f, 0x7f, 0xf0, 0xc6, 0x8b,
	0xfa, 0xfb, 0x83, 0x6f, 0xd5, 0x7e, 0x7f, 0x70, 0xc4, 0x0f, 0x32, 0xae, 0x8e, 0xfa, 0x41, 0xc6,
	0x63, 0x7f, 0xfb, 0xf1, 0xe6, 0xf1, 0xbf, 0xfd, 0xf8, 0xb1, 0x34, 0x68, 0xd5, 0x8f, 0xde, 0xd1,
	0x58, 0x96, 0x2b, 0x28, 0x10, 0xd2, 0x36, 0x76, 0xe3, 0x9b, 0xc6, 0x34, 0x67, 0xfe, 0xcb, 0x7c,
	0xce, 0x8c, 0x17, 0x6e, 0x16, 0xea, 0xe2, 0xef, 0x11, 0xda, 0xdf, 0xb2, 0xc8, 0x0c, 0x66, 0xea,
	0x54, 0x51, 0x7c, 0x16, 0x7e, 0x98, 0xf1, 0x97, 0x0c, 0x42, 0x01, 0x18, 0xa6, 0xbd, 0xf0, 0x76,
	0x15, 0x41, 0xe7, 0x15, 0xf8, 0xb5, 0xf5, 0xb7, 0xfe, 0x2f, 0x00, 0x00, 0xff, 0xff, 0xe7, 0x5a,
	0xff, 0xc5, 0x8c, 0x7d, 0x00, 0x00,
}
