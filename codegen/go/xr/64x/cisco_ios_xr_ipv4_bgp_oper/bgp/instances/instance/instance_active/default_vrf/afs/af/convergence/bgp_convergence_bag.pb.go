/*
Copyright 2019 Cisco Systems

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: bgp_convergence_bag.proto

package cisco_ios_xr_ipv4_bgp_oper_bgp_instances_instance_instance_active_default_vrf_afs_af_convergence

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type BgpConvergenceBag_KEYS struct {
	InstanceName         string   `protobuf:"bytes,1,opt,name=instance_name,json=instanceName,proto3" json:"instance_name,omitempty"`
	AfName               string   `protobuf:"bytes,2,opt,name=af_name,json=afName,proto3" json:"af_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BgpConvergenceBag_KEYS) Reset()         { *m = BgpConvergenceBag_KEYS{} }
func (m *BgpConvergenceBag_KEYS) String() string { return proto.CompactTextString(m) }
func (*BgpConvergenceBag_KEYS) ProtoMessage()    {}
func (*BgpConvergenceBag_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_d12437cce6d3364d, []int{0}
}

func (m *BgpConvergenceBag_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BgpConvergenceBag_KEYS.Unmarshal(m, b)
}
func (m *BgpConvergenceBag_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BgpConvergenceBag_KEYS.Marshal(b, m, deterministic)
}
func (m *BgpConvergenceBag_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BgpConvergenceBag_KEYS.Merge(m, src)
}
func (m *BgpConvergenceBag_KEYS) XXX_Size() int {
	return xxx_messageInfo_BgpConvergenceBag_KEYS.Size(m)
}
func (m *BgpConvergenceBag_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_BgpConvergenceBag_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_BgpConvergenceBag_KEYS proto.InternalMessageInfo

func (m *BgpConvergenceBag_KEYS) GetInstanceName() string {
	if m != nil {
		return m.InstanceName
	}
	return ""
}

func (m *BgpConvergenceBag_KEYS) GetAfName() string {
	if m != nil {
		return m.AfName
	}
	return ""
}

type BgpConvergenceBag struct {
	AfName               string   `protobuf:"bytes,50,opt,name=af_name,json=afName,proto3" json:"af_name,omitempty"`
	HasConverged         bool     `protobuf:"varint,51,opt,name=has_converged,json=hasConverged,proto3" json:"has_converged,omitempty"`
	AreWriteQueuesEmpty  bool     `protobuf:"varint,52,opt,name=are_write_queues_empty,json=areWriteQueuesEmpty,proto3" json:"are_write_queues_empty,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BgpConvergenceBag) Reset()         { *m = BgpConvergenceBag{} }
func (m *BgpConvergenceBag) String() string { return proto.CompactTextString(m) }
func (*BgpConvergenceBag) ProtoMessage()    {}
func (*BgpConvergenceBag) Descriptor() ([]byte, []int) {
	return fileDescriptor_d12437cce6d3364d, []int{1}
}

func (m *BgpConvergenceBag) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BgpConvergenceBag.Unmarshal(m, b)
}
func (m *BgpConvergenceBag) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BgpConvergenceBag.Marshal(b, m, deterministic)
}
func (m *BgpConvergenceBag) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BgpConvergenceBag.Merge(m, src)
}
func (m *BgpConvergenceBag) XXX_Size() int {
	return xxx_messageInfo_BgpConvergenceBag.Size(m)
}
func (m *BgpConvergenceBag) XXX_DiscardUnknown() {
	xxx_messageInfo_BgpConvergenceBag.DiscardUnknown(m)
}

var xxx_messageInfo_BgpConvergenceBag proto.InternalMessageInfo

func (m *BgpConvergenceBag) GetAfName() string {
	if m != nil {
		return m.AfName
	}
	return ""
}

func (m *BgpConvergenceBag) GetHasConverged() bool {
	if m != nil {
		return m.HasConverged
	}
	return false
}

func (m *BgpConvergenceBag) GetAreWriteQueuesEmpty() bool {
	if m != nil {
		return m.AreWriteQueuesEmpty
	}
	return false
}

func init() {
	proto.RegisterType((*BgpConvergenceBag_KEYS)(nil), "cisco_ios_xr_ipv4_bgp_oper.bgp.instances.instance.instance_active.default_vrf.afs.af.convergence.bgp_convergence_bag_KEYS")
	proto.RegisterType((*BgpConvergenceBag)(nil), "cisco_ios_xr_ipv4_bgp_oper.bgp.instances.instance.instance_active.default_vrf.afs.af.convergence.bgp_convergence_bag")
}

func init() { proto.RegisterFile("bgp_convergence_bag.proto", fileDescriptor_d12437cce6d3364d) }

var fileDescriptor_d12437cce6d3364d = []byte{
	// 244 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x90, 0xbf, 0x4e, 0xc3, 0x30,
	0x10, 0xc6, 0x15, 0x86, 0x02, 0x56, 0x59, 0x52, 0x09, 0xc2, 0x56, 0x95, 0xa5, 0x93, 0x07, 0xd2,
	0x37, 0x40, 0x9d, 0x90, 0x90, 0x28, 0x03, 0x30, 0x1d, 0x17, 0xf7, 0x9c, 0x5a, 0x22, 0xb6, 0xf1,
	0x39, 0x01, 0xde, 0x80, 0xc7, 0x46, 0x4e, 0xd5, 0x28, 0x43, 0xb6, 0xd3, 0xf7, 0xfb, 0xfe, 0x48,
	0x27, 0x6e, 0xab, 0xda, 0x83, 0x72, 0xb6, 0xa3, 0x50, 0x93, 0x55, 0x04, 0x15, 0xd6, 0xd2, 0x07,
	0x17, 0x5d, 0xfe, 0xa1, 0x0c, 0x2b, 0x07, 0xc6, 0x31, 0xfc, 0x04, 0x30, 0xbe, 0xdb, 0x40, 0x32,
	0x3b, 0x4f, 0x41, 0x56, 0xb5, 0x97, 0xc6, 0x72, 0x44, 0xab, 0x88, 0x87, 0x6b, 0x38, 0x00, 0x55,
	0x34, 0x1d, 0xc9, 0x3d, 0x69, 0x6c, 0x3f, 0x23, 0x74, 0x41, 0x4b, 0xd4, 0x2c, 0x51, 0xcb, 0xd1,
	0xd6, 0xea, 0x4d, 0x14, 0x13, 0xf3, 0xf0, 0xb8, 0x7d, 0x7f, 0xc9, 0xef, 0xc4, 0xd5, 0xd0, 0x66,
	0xb1, 0xa1, 0x22, 0x5b, 0x66, 0xeb, 0xcb, 0xdd, 0xfc, 0x24, 0x3e, 0x61, 0x43, 0xf9, 0x8d, 0x38,
	0x47, 0x7d, 0xc4, 0x67, 0x3d, 0x9e, 0xa1, 0x4e, 0x60, 0xf5, 0x97, 0x89, 0xc5, 0x44, 0xf5, 0x38,
	0x70, 0x3f, 0x0e, 0xa4, 0xb9, 0x03, 0xf2, 0xe0, 0xdf, 0x17, 0xe5, 0x32, 0x5b, 0x5f, 0xec, 0xe6,
	0x07, 0xe4, 0x87, 0x93, 0x96, 0x97, 0xe2, 0x1a, 0x03, 0xc1, 0x77, 0x30, 0x91, 0xe0, 0xab, 0xa5,
	0x96, 0x18, 0xa8, 0xf1, 0xf1, 0xb7, 0xd8, 0xf4, 0xee, 0x05, 0x06, 0x7a, 0x4d, 0xf0, 0xb9, 0x67,
	0xdb, 0x84, 0xaa, 0x59, 0xff, 0xcd, 0xf2, 0x3f, 0x00, 0x00, 0xff, 0xff, 0x8e, 0x02, 0xb3, 0x06,
	0x6a, 0x01, 0x00, 0x00,
}
