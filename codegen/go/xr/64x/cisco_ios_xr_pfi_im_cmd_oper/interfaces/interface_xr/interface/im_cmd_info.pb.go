/*
Copyright 2019 Cisco Systems

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: im_cmd_info.proto

package cisco_ios_xr_pfi_im_cmd_oper_interfaces_interface_xr_interface

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ImCmdInfo_KEYS struct {
	InterfaceName        string   `protobuf:"bytes,1,opt,name=interface_name,json=interfaceName,proto3" json:"interface_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ImCmdInfo_KEYS) Reset()         { *m = ImCmdInfo_KEYS{} }
func (m *ImCmdInfo_KEYS) String() string { return proto.CompactTextString(m) }
func (*ImCmdInfo_KEYS) ProtoMessage()    {}
func (*ImCmdInfo_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_9abf17a6a17540ff, []int{0}
}

func (m *ImCmdInfo_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ImCmdInfo_KEYS.Unmarshal(m, b)
}
func (m *ImCmdInfo_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ImCmdInfo_KEYS.Marshal(b, m, deterministic)
}
func (m *ImCmdInfo_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ImCmdInfo_KEYS.Merge(m, src)
}
func (m *ImCmdInfo_KEYS) XXX_Size() int {
	return xxx_messageInfo_ImCmdInfo_KEYS.Size(m)
}
func (m *ImCmdInfo_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_ImCmdInfo_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_ImCmdInfo_KEYS proto.InternalMessageInfo

func (m *ImCmdInfo_KEYS) GetInterfaceName() string {
	if m != nil {
		return m.InterfaceName
	}
	return ""
}

type ImCmdDampSt struct {
	Penalty              uint32   `protobuf:"varint,1,opt,name=penalty,proto3" json:"penalty,omitempty"`
	IsSuppressedEnabled  bool     `protobuf:"varint,2,opt,name=is_suppressed_enabled,json=isSuppressedEnabled,proto3" json:"is_suppressed_enabled,omitempty"`
	SecondsRemaining     uint32   `protobuf:"varint,3,opt,name=seconds_remaining,json=secondsRemaining,proto3" json:"seconds_remaining,omitempty"`
	HalfLife             uint32   `protobuf:"varint,4,opt,name=half_life,json=halfLife,proto3" json:"half_life,omitempty"`
	ReuseThreshold       uint32   `protobuf:"varint,5,opt,name=reuse_threshold,json=reuseThreshold,proto3" json:"reuse_threshold,omitempty"`
	SuppressThreshold    uint32   `protobuf:"varint,6,opt,name=suppress_threshold,json=suppressThreshold,proto3" json:"suppress_threshold,omitempty"`
	MaximumSuppressTime  uint32   `protobuf:"varint,7,opt,name=maximum_suppress_time,json=maximumSuppressTime,proto3" json:"maximum_suppress_time,omitempty"`
	RestartPenalty       uint32   `protobuf:"varint,8,opt,name=restart_penalty,json=restartPenalty,proto3" json:"restart_penalty,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ImCmdDampSt) Reset()         { *m = ImCmdDampSt{} }
func (m *ImCmdDampSt) String() string { return proto.CompactTextString(m) }
func (*ImCmdDampSt) ProtoMessage()    {}
func (*ImCmdDampSt) Descriptor() ([]byte, []int) {
	return fileDescriptor_9abf17a6a17540ff, []int{1}
}

func (m *ImCmdDampSt) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ImCmdDampSt.Unmarshal(m, b)
}
func (m *ImCmdDampSt) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ImCmdDampSt.Marshal(b, m, deterministic)
}
func (m *ImCmdDampSt) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ImCmdDampSt.Merge(m, src)
}
func (m *ImCmdDampSt) XXX_Size() int {
	return xxx_messageInfo_ImCmdDampSt.Size(m)
}
func (m *ImCmdDampSt) XXX_DiscardUnknown() {
	xxx_messageInfo_ImCmdDampSt.DiscardUnknown(m)
}

var xxx_messageInfo_ImCmdDampSt proto.InternalMessageInfo

func (m *ImCmdDampSt) GetPenalty() uint32 {
	if m != nil {
		return m.Penalty
	}
	return 0
}

func (m *ImCmdDampSt) GetIsSuppressedEnabled() bool {
	if m != nil {
		return m.IsSuppressedEnabled
	}
	return false
}

func (m *ImCmdDampSt) GetSecondsRemaining() uint32 {
	if m != nil {
		return m.SecondsRemaining
	}
	return 0
}

func (m *ImCmdDampSt) GetHalfLife() uint32 {
	if m != nil {
		return m.HalfLife
	}
	return 0
}

func (m *ImCmdDampSt) GetReuseThreshold() uint32 {
	if m != nil {
		return m.ReuseThreshold
	}
	return 0
}

func (m *ImCmdDampSt) GetSuppressThreshold() uint32 {
	if m != nil {
		return m.SuppressThreshold
	}
	return 0
}

func (m *ImCmdDampSt) GetMaximumSuppressTime() uint32 {
	if m != nil {
		return m.MaximumSuppressTime
	}
	return 0
}

func (m *ImCmdDampSt) GetRestartPenalty() uint32 {
	if m != nil {
		return m.RestartPenalty
	}
	return 0
}

type ImCmdMacAddrSt struct {
	Address              string   `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ImCmdMacAddrSt) Reset()         { *m = ImCmdMacAddrSt{} }
func (m *ImCmdMacAddrSt) String() string { return proto.CompactTextString(m) }
func (*ImCmdMacAddrSt) ProtoMessage()    {}
func (*ImCmdMacAddrSt) Descriptor() ([]byte, []int) {
	return fileDescriptor_9abf17a6a17540ff, []int{2}
}

func (m *ImCmdMacAddrSt) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ImCmdMacAddrSt.Unmarshal(m, b)
}
func (m *ImCmdMacAddrSt) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ImCmdMacAddrSt.Marshal(b, m, deterministic)
}
func (m *ImCmdMacAddrSt) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ImCmdMacAddrSt.Merge(m, src)
}
func (m *ImCmdMacAddrSt) XXX_Size() int {
	return xxx_messageInfo_ImCmdMacAddrSt.Size(m)
}
func (m *ImCmdMacAddrSt) XXX_DiscardUnknown() {
	xxx_messageInfo_ImCmdMacAddrSt.DiscardUnknown(m)
}

var xxx_messageInfo_ImCmdMacAddrSt proto.InternalMessageInfo

func (m *ImCmdMacAddrSt) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

type ImCmdCarrierDelaySt struct {
	CarrierDelayUp       uint32   `protobuf:"varint,1,opt,name=carrier_delay_up,json=carrierDelayUp,proto3" json:"carrier_delay_up,omitempty"`
	CarrierDelayDown     uint32   `protobuf:"varint,2,opt,name=carrier_delay_down,json=carrierDelayDown,proto3" json:"carrier_delay_down,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ImCmdCarrierDelaySt) Reset()         { *m = ImCmdCarrierDelaySt{} }
func (m *ImCmdCarrierDelaySt) String() string { return proto.CompactTextString(m) }
func (*ImCmdCarrierDelaySt) ProtoMessage()    {}
func (*ImCmdCarrierDelaySt) Descriptor() ([]byte, []int) {
	return fileDescriptor_9abf17a6a17540ff, []int{3}
}

func (m *ImCmdCarrierDelaySt) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ImCmdCarrierDelaySt.Unmarshal(m, b)
}
func (m *ImCmdCarrierDelaySt) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ImCmdCarrierDelaySt.Marshal(b, m, deterministic)
}
func (m *ImCmdCarrierDelaySt) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ImCmdCarrierDelaySt.Merge(m, src)
}
func (m *ImCmdCarrierDelaySt) XXX_Size() int {
	return xxx_messageInfo_ImCmdCarrierDelaySt.Size(m)
}
func (m *ImCmdCarrierDelaySt) XXX_DiscardUnknown() {
	xxx_messageInfo_ImCmdCarrierDelaySt.DiscardUnknown(m)
}

var xxx_messageInfo_ImCmdCarrierDelaySt proto.InternalMessageInfo

func (m *ImCmdCarrierDelaySt) GetCarrierDelayUp() uint32 {
	if m != nil {
		return m.CarrierDelayUp
	}
	return 0
}

func (m *ImCmdCarrierDelaySt) GetCarrierDelayDown() uint32 {
	if m != nil {
		return m.CarrierDelayDown
	}
	return 0
}

type ImCmdArpInfoSt struct {
	ArpTimeout            uint32   `protobuf:"varint,1,opt,name=arp_timeout,json=arpTimeout,proto3" json:"arp_timeout,omitempty"`
	ArpTypeName           string   `protobuf:"bytes,2,opt,name=arp_type_name,json=arpTypeName,proto3" json:"arp_type_name,omitempty"`
	ArpIsLearningDisabled bool     `protobuf:"varint,3,opt,name=arp_is_learning_disabled,json=arpIsLearningDisabled,proto3" json:"arp_is_learning_disabled,omitempty"`
	XXX_NoUnkeyedLiteral  struct{} `json:"-"`
	XXX_unrecognized      []byte   `json:"-"`
	XXX_sizecache         int32    `json:"-"`
}

func (m *ImCmdArpInfoSt) Reset()         { *m = ImCmdArpInfoSt{} }
func (m *ImCmdArpInfoSt) String() string { return proto.CompactTextString(m) }
func (*ImCmdArpInfoSt) ProtoMessage()    {}
func (*ImCmdArpInfoSt) Descriptor() ([]byte, []int) {
	return fileDescriptor_9abf17a6a17540ff, []int{4}
}

func (m *ImCmdArpInfoSt) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ImCmdArpInfoSt.Unmarshal(m, b)
}
func (m *ImCmdArpInfoSt) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ImCmdArpInfoSt.Marshal(b, m, deterministic)
}
func (m *ImCmdArpInfoSt) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ImCmdArpInfoSt.Merge(m, src)
}
func (m *ImCmdArpInfoSt) XXX_Size() int {
	return xxx_messageInfo_ImCmdArpInfoSt.Size(m)
}
func (m *ImCmdArpInfoSt) XXX_DiscardUnknown() {
	xxx_messageInfo_ImCmdArpInfoSt.DiscardUnknown(m)
}

var xxx_messageInfo_ImCmdArpInfoSt proto.InternalMessageInfo

func (m *ImCmdArpInfoSt) GetArpTimeout() uint32 {
	if m != nil {
		return m.ArpTimeout
	}
	return 0
}

func (m *ImCmdArpInfoSt) GetArpTypeName() string {
	if m != nil {
		return m.ArpTypeName
	}
	return ""
}

func (m *ImCmdArpInfoSt) GetArpIsLearningDisabled() bool {
	if m != nil {
		return m.ArpIsLearningDisabled
	}
	return false
}

type ImCmdIpInfoSt struct {
	IpAddress            string   `protobuf:"bytes,1,opt,name=ip_address,json=ipAddress,proto3" json:"ip_address,omitempty"`
	SubnetMaskLength     uint32   `protobuf:"varint,2,opt,name=subnet_mask_length,json=subnetMaskLength,proto3" json:"subnet_mask_length,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ImCmdIpInfoSt) Reset()         { *m = ImCmdIpInfoSt{} }
func (m *ImCmdIpInfoSt) String() string { return proto.CompactTextString(m) }
func (*ImCmdIpInfoSt) ProtoMessage()    {}
func (*ImCmdIpInfoSt) Descriptor() ([]byte, []int) {
	return fileDescriptor_9abf17a6a17540ff, []int{5}
}

func (m *ImCmdIpInfoSt) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ImCmdIpInfoSt.Unmarshal(m, b)
}
func (m *ImCmdIpInfoSt) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ImCmdIpInfoSt.Marshal(b, m, deterministic)
}
func (m *ImCmdIpInfoSt) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ImCmdIpInfoSt.Merge(m, src)
}
func (m *ImCmdIpInfoSt) XXX_Size() int {
	return xxx_messageInfo_ImCmdIpInfoSt.Size(m)
}
func (m *ImCmdIpInfoSt) XXX_DiscardUnknown() {
	xxx_messageInfo_ImCmdIpInfoSt.DiscardUnknown(m)
}

var xxx_messageInfo_ImCmdIpInfoSt proto.InternalMessageInfo

func (m *ImCmdIpInfoSt) GetIpAddress() string {
	if m != nil {
		return m.IpAddress
	}
	return ""
}

func (m *ImCmdIpInfoSt) GetSubnetMaskLength() uint32 {
	if m != nil {
		return m.SubnetMaskLength
	}
	return 0
}

type ImCmdFrInfo struct {
	FrEncapsulationType  string   `protobuf:"bytes,1,opt,name=fr_encapsulation_type,json=frEncapsulationType,proto3" json:"fr_encapsulation_type,omitempty"`
	LmiType              string   `protobuf:"bytes,2,opt,name=lmi_type,json=lmiType,proto3" json:"lmi_type,omitempty"`
	Lmidlci              uint32   `protobuf:"varint,3,opt,name=lmidlci,proto3" json:"lmidlci,omitempty"`
	IsNni                bool     `protobuf:"varint,4,opt,name=is_nni,json=isNni,proto3" json:"is_nni,omitempty"`
	IsDte                bool     `protobuf:"varint,5,opt,name=is_dte,json=isDte,proto3" json:"is_dte,omitempty"`
	IsLmiUp              bool     `protobuf:"varint,6,opt,name=is_lmi_up,json=isLmiUp,proto3" json:"is_lmi_up,omitempty"`
	IsLmiNniDceUp        bool     `protobuf:"varint,7,opt,name=is_lmi_nni_dce_up,json=isLmiNniDceUp,proto3" json:"is_lmi_nni_dce_up,omitempty"`
	IsLmiEnabled         bool     `protobuf:"varint,8,opt,name=is_lmi_enabled,json=isLmiEnabled,proto3" json:"is_lmi_enabled,omitempty"`
	EnquiriesReceived    uint32   `protobuf:"varint,9,opt,name=enquiries_received,json=enquiriesReceived,proto3" json:"enquiries_received,omitempty"`
	EnquiriesSent        uint32   `protobuf:"varint,10,opt,name=enquiries_sent,json=enquiriesSent,proto3" json:"enquiries_sent,omitempty"`
	StatusReceived       uint32   `protobuf:"varint,11,opt,name=status_received,json=statusReceived,proto3" json:"status_received,omitempty"`
	StatusSent           uint32   `protobuf:"varint,12,opt,name=status_sent,json=statusSent,proto3" json:"status_sent,omitempty"`
	UpdateStatusReceived uint32   `protobuf:"varint,13,opt,name=update_status_received,json=updateStatusReceived,proto3" json:"update_status_received,omitempty"`
	UpdateStatusSent     uint32   `protobuf:"varint,14,opt,name=update_status_sent,json=updateStatusSent,proto3" json:"update_status_sent,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ImCmdFrInfo) Reset()         { *m = ImCmdFrInfo{} }
func (m *ImCmdFrInfo) String() string { return proto.CompactTextString(m) }
func (*ImCmdFrInfo) ProtoMessage()    {}
func (*ImCmdFrInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_9abf17a6a17540ff, []int{6}
}

func (m *ImCmdFrInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ImCmdFrInfo.Unmarshal(m, b)
}
func (m *ImCmdFrInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ImCmdFrInfo.Marshal(b, m, deterministic)
}
func (m *ImCmdFrInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ImCmdFrInfo.Merge(m, src)
}
func (m *ImCmdFrInfo) XXX_Size() int {
	return xxx_messageInfo_ImCmdFrInfo.Size(m)
}
func (m *ImCmdFrInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_ImCmdFrInfo.DiscardUnknown(m)
}

var xxx_messageInfo_ImCmdFrInfo proto.InternalMessageInfo

func (m *ImCmdFrInfo) GetFrEncapsulationType() string {
	if m != nil {
		return m.FrEncapsulationType
	}
	return ""
}

func (m *ImCmdFrInfo) GetLmiType() string {
	if m != nil {
		return m.LmiType
	}
	return ""
}

func (m *ImCmdFrInfo) GetLmidlci() uint32 {
	if m != nil {
		return m.Lmidlci
	}
	return 0
}

func (m *ImCmdFrInfo) GetIsNni() bool {
	if m != nil {
		return m.IsNni
	}
	return false
}

func (m *ImCmdFrInfo) GetIsDte() bool {
	if m != nil {
		return m.IsDte
	}
	return false
}

func (m *ImCmdFrInfo) GetIsLmiUp() bool {
	if m != nil {
		return m.IsLmiUp
	}
	return false
}

func (m *ImCmdFrInfo) GetIsLmiNniDceUp() bool {
	if m != nil {
		return m.IsLmiNniDceUp
	}
	return false
}

func (m *ImCmdFrInfo) GetIsLmiEnabled() bool {
	if m != nil {
		return m.IsLmiEnabled
	}
	return false
}

func (m *ImCmdFrInfo) GetEnquiriesReceived() uint32 {
	if m != nil {
		return m.EnquiriesReceived
	}
	return 0
}

func (m *ImCmdFrInfo) GetEnquiriesSent() uint32 {
	if m != nil {
		return m.EnquiriesSent
	}
	return 0
}

func (m *ImCmdFrInfo) GetStatusReceived() uint32 {
	if m != nil {
		return m.StatusReceived
	}
	return 0
}

func (m *ImCmdFrInfo) GetStatusSent() uint32 {
	if m != nil {
		return m.StatusSent
	}
	return 0
}

func (m *ImCmdFrInfo) GetUpdateStatusReceived() uint32 {
	if m != nil {
		return m.UpdateStatusReceived
	}
	return 0
}

func (m *ImCmdFrInfo) GetUpdateStatusSent() uint32 {
	if m != nil {
		return m.UpdateStatusSent
	}
	return 0
}

type VlanDoubleTagStack struct {
	OuterTag             uint32   `protobuf:"varint,1,opt,name=outer_tag,json=outerTag,proto3" json:"outer_tag,omitempty"`
	SecondTag            uint32   `protobuf:"varint,2,opt,name=second_tag,json=secondTag,proto3" json:"second_tag,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VlanDoubleTagStack) Reset()         { *m = VlanDoubleTagStack{} }
func (m *VlanDoubleTagStack) String() string { return proto.CompactTextString(m) }
func (*VlanDoubleTagStack) ProtoMessage()    {}
func (*VlanDoubleTagStack) Descriptor() ([]byte, []int) {
	return fileDescriptor_9abf17a6a17540ff, []int{7}
}

func (m *VlanDoubleTagStack) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VlanDoubleTagStack.Unmarshal(m, b)
}
func (m *VlanDoubleTagStack) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VlanDoubleTagStack.Marshal(b, m, deterministic)
}
func (m *VlanDoubleTagStack) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VlanDoubleTagStack.Merge(m, src)
}
func (m *VlanDoubleTagStack) XXX_Size() int {
	return xxx_messageInfo_VlanDoubleTagStack.Size(m)
}
func (m *VlanDoubleTagStack) XXX_DiscardUnknown() {
	xxx_messageInfo_VlanDoubleTagStack.DiscardUnknown(m)
}

var xxx_messageInfo_VlanDoubleTagStack proto.InternalMessageInfo

func (m *VlanDoubleTagStack) GetOuterTag() uint32 {
	if m != nil {
		return m.OuterTag
	}
	return 0
}

func (m *VlanDoubleTagStack) GetSecondTag() uint32 {
	if m != nil {
		return m.SecondTag
	}
	return 0
}

type EfpRange struct {
	VlanIdLow            uint32   `protobuf:"varint,1,opt,name=vlan_id_low,json=vlanIdLow,proto3" json:"vlan_id_low,omitempty"`
	VlanIdHigh           uint32   `protobuf:"varint,2,opt,name=vlan_id_high,json=vlanIdHigh,proto3" json:"vlan_id_high,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EfpRange) Reset()         { *m = EfpRange{} }
func (m *EfpRange) String() string { return proto.CompactTextString(m) }
func (*EfpRange) ProtoMessage()    {}
func (*EfpRange) Descriptor() ([]byte, []int) {
	return fileDescriptor_9abf17a6a17540ff, []int{8}
}

func (m *EfpRange) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EfpRange.Unmarshal(m, b)
}
func (m *EfpRange) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EfpRange.Marshal(b, m, deterministic)
}
func (m *EfpRange) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EfpRange.Merge(m, src)
}
func (m *EfpRange) XXX_Size() int {
	return xxx_messageInfo_EfpRange.Size(m)
}
func (m *EfpRange) XXX_DiscardUnknown() {
	xxx_messageInfo_EfpRange.DiscardUnknown(m)
}

var xxx_messageInfo_EfpRange proto.InternalMessageInfo

func (m *EfpRange) GetVlanIdLow() uint32 {
	if m != nil {
		return m.VlanIdLow
	}
	return 0
}

func (m *EfpRange) GetVlanIdHigh() uint32 {
	if m != nil {
		return m.VlanIdHigh
	}
	return 0
}

type EfpTagMatch struct {
	Ethertype            string      `protobuf:"bytes,1,opt,name=ethertype,proto3" json:"ethertype,omitempty"`
	VlanRange            []*EfpRange `protobuf:"bytes,2,rep,name=vlan_range,json=vlanRange,proto3" json:"vlan_range,omitempty"`
	Priority             string      `protobuf:"bytes,3,opt,name=priority,proto3" json:"priority,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *EfpTagMatch) Reset()         { *m = EfpTagMatch{} }
func (m *EfpTagMatch) String() string { return proto.CompactTextString(m) }
func (*EfpTagMatch) ProtoMessage()    {}
func (*EfpTagMatch) Descriptor() ([]byte, []int) {
	return fileDescriptor_9abf17a6a17540ff, []int{9}
}

func (m *EfpTagMatch) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EfpTagMatch.Unmarshal(m, b)
}
func (m *EfpTagMatch) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EfpTagMatch.Marshal(b, m, deterministic)
}
func (m *EfpTagMatch) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EfpTagMatch.Merge(m, src)
}
func (m *EfpTagMatch) XXX_Size() int {
	return xxx_messageInfo_EfpTagMatch.Size(m)
}
func (m *EfpTagMatch) XXX_DiscardUnknown() {
	xxx_messageInfo_EfpTagMatch.DiscardUnknown(m)
}

var xxx_messageInfo_EfpTagMatch proto.InternalMessageInfo

func (m *EfpTagMatch) GetEthertype() string {
	if m != nil {
		return m.Ethertype
	}
	return ""
}

func (m *EfpTagMatch) GetVlanRange() []*EfpRange {
	if m != nil {
		return m.VlanRange
	}
	return nil
}

func (m *EfpTagMatch) GetPriority() string {
	if m != nil {
		return m.Priority
	}
	return ""
}

type EfpVlanTag struct {
	Ethertype            string   `protobuf:"bytes,1,opt,name=ethertype,proto3" json:"ethertype,omitempty"`
	VlanId               uint32   `protobuf:"varint,2,opt,name=vlan_id,json=vlanId,proto3" json:"vlan_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EfpVlanTag) Reset()         { *m = EfpVlanTag{} }
func (m *EfpVlanTag) String() string { return proto.CompactTextString(m) }
func (*EfpVlanTag) ProtoMessage()    {}
func (*EfpVlanTag) Descriptor() ([]byte, []int) {
	return fileDescriptor_9abf17a6a17540ff, []int{10}
}

func (m *EfpVlanTag) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EfpVlanTag.Unmarshal(m, b)
}
func (m *EfpVlanTag) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EfpVlanTag.Marshal(b, m, deterministic)
}
func (m *EfpVlanTag) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EfpVlanTag.Merge(m, src)
}
func (m *EfpVlanTag) XXX_Size() int {
	return xxx_messageInfo_EfpVlanTag.Size(m)
}
func (m *EfpVlanTag) XXX_DiscardUnknown() {
	xxx_messageInfo_EfpVlanTag.DiscardUnknown(m)
}

var xxx_messageInfo_EfpVlanTag proto.InternalMessageInfo

func (m *EfpVlanTag) GetEthertype() string {
	if m != nil {
		return m.Ethertype
	}
	return ""
}

func (m *EfpVlanTag) GetVlanId() uint32 {
	if m != nil {
		return m.VlanId
	}
	return 0
}

type EfpTagLocalTrafficStack struct {
	LocalTrafficTag      []*EfpVlanTag `protobuf:"bytes,1,rep,name=local_traffic_tag,json=localTrafficTag,proto3" json:"local_traffic_tag,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *EfpTagLocalTrafficStack) Reset()         { *m = EfpTagLocalTrafficStack{} }
func (m *EfpTagLocalTrafficStack) String() string { return proto.CompactTextString(m) }
func (*EfpTagLocalTrafficStack) ProtoMessage()    {}
func (*EfpTagLocalTrafficStack) Descriptor() ([]byte, []int) {
	return fileDescriptor_9abf17a6a17540ff, []int{11}
}

func (m *EfpTagLocalTrafficStack) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EfpTagLocalTrafficStack.Unmarshal(m, b)
}
func (m *EfpTagLocalTrafficStack) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EfpTagLocalTrafficStack.Marshal(b, m, deterministic)
}
func (m *EfpTagLocalTrafficStack) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EfpTagLocalTrafficStack.Merge(m, src)
}
func (m *EfpTagLocalTrafficStack) XXX_Size() int {
	return xxx_messageInfo_EfpTagLocalTrafficStack.Size(m)
}
func (m *EfpTagLocalTrafficStack) XXX_DiscardUnknown() {
	xxx_messageInfo_EfpTagLocalTrafficStack.DiscardUnknown(m)
}

var xxx_messageInfo_EfpTagLocalTrafficStack proto.InternalMessageInfo

func (m *EfpTagLocalTrafficStack) GetLocalTrafficTag() []*EfpVlanTag {
	if m != nil {
		return m.LocalTrafficTag
	}
	return nil
}

type EfpDescription struct {
	TagsToMatch          []*EfpTagMatch           `protobuf:"bytes,1,rep,name=tags_to_match,json=tagsToMatch,proto3" json:"tags_to_match,omitempty"`
	PayloadEthertype     string                   `protobuf:"bytes,2,opt,name=payload_ethertype,json=payloadEthertype,proto3" json:"payload_ethertype,omitempty"`
	TagsPopped           uint32                   `protobuf:"varint,3,opt,name=tags_popped,json=tagsPopped,proto3" json:"tags_popped,omitempty"`
	Pushe                []*EfpVlanTag            `protobuf:"bytes,4,rep,name=pushe,proto3" json:"pushe,omitempty"`
	LocalTrafficStack    *EfpTagLocalTrafficStack `protobuf:"bytes,5,opt,name=local_traffic_stack,json=localTrafficStack,proto3" json:"local_traffic_stack,omitempty"`
	IsExactMatch         int32                    `protobuf:"zigzag32,6,opt,name=is_exact_match,json=isExactMatch,proto3" json:"is_exact_match,omitempty"`
	IsNativeVlan         int32                    `protobuf:"zigzag32,7,opt,name=is_native_vlan,json=isNativeVlan,proto3" json:"is_native_vlan,omitempty"`
	IsNativePreserving   int32                    `protobuf:"zigzag32,8,opt,name=is_native_preserving,json=isNativePreserving,proto3" json:"is_native_preserving,omitempty"`
	SourceMacMatch       string                   `protobuf:"bytes,9,opt,name=source_mac_match,json=sourceMacMatch,proto3" json:"source_mac_match,omitempty"`
	DestinationMacMatch  string                   `protobuf:"bytes,10,opt,name=destination_mac_match,json=destinationMacMatch,proto3" json:"destination_mac_match,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *EfpDescription) Reset()         { *m = EfpDescription{} }
func (m *EfpDescription) String() string { return proto.CompactTextString(m) }
func (*EfpDescription) ProtoMessage()    {}
func (*EfpDescription) Descriptor() ([]byte, []int) {
	return fileDescriptor_9abf17a6a17540ff, []int{12}
}

func (m *EfpDescription) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EfpDescription.Unmarshal(m, b)
}
func (m *EfpDescription) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EfpDescription.Marshal(b, m, deterministic)
}
func (m *EfpDescription) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EfpDescription.Merge(m, src)
}
func (m *EfpDescription) XXX_Size() int {
	return xxx_messageInfo_EfpDescription.Size(m)
}
func (m *EfpDescription) XXX_DiscardUnknown() {
	xxx_messageInfo_EfpDescription.DiscardUnknown(m)
}

var xxx_messageInfo_EfpDescription proto.InternalMessageInfo

func (m *EfpDescription) GetTagsToMatch() []*EfpTagMatch {
	if m != nil {
		return m.TagsToMatch
	}
	return nil
}

func (m *EfpDescription) GetPayloadEthertype() string {
	if m != nil {
		return m.PayloadEthertype
	}
	return ""
}

func (m *EfpDescription) GetTagsPopped() uint32 {
	if m != nil {
		return m.TagsPopped
	}
	return 0
}

func (m *EfpDescription) GetPushe() []*EfpVlanTag {
	if m != nil {
		return m.Pushe
	}
	return nil
}

func (m *EfpDescription) GetLocalTrafficStack() *EfpTagLocalTrafficStack {
	if m != nil {
		return m.LocalTrafficStack
	}
	return nil
}

func (m *EfpDescription) GetIsExactMatch() int32 {
	if m != nil {
		return m.IsExactMatch
	}
	return 0
}

func (m *EfpDescription) GetIsNativeVlan() int32 {
	if m != nil {
		return m.IsNativeVlan
	}
	return 0
}

func (m *EfpDescription) GetIsNativePreserving() int32 {
	if m != nil {
		return m.IsNativePreserving
	}
	return 0
}

func (m *EfpDescription) GetSourceMacMatch() string {
	if m != nil {
		return m.SourceMacMatch
	}
	return ""
}

func (m *EfpDescription) GetDestinationMacMatch() string {
	if m != nil {
		return m.DestinationMacMatch
	}
	return ""
}

type VlanTagStackType struct {
	VlanEncapsulation      string              `protobuf:"bytes,1,opt,name=vlan_encapsulation,json=vlanEncapsulation,proto3" json:"vlan_encapsulation,omitempty"`
	Tag                    uint32              `protobuf:"varint,2,opt,name=tag,proto3" json:"tag,omitempty"`
	Stack                  *VlanDoubleTagStack `protobuf:"bytes,3,opt,name=stack,proto3" json:"stack,omitempty"`
	OuterTag               uint32              `protobuf:"varint,4,opt,name=outer_tag,json=outerTag,proto3" json:"outer_tag,omitempty"`
	NativeTag              uint32              `protobuf:"varint,5,opt,name=native_tag,json=nativeTag,proto3" json:"native_tag,omitempty"`
	Dot1AdTag              uint32              `protobuf:"varint,6,opt,name=dot1ad_tag,json=dot1adTag,proto3" json:"dot1ad_tag,omitempty"`
	Dot1AdNativeTag        uint32              `protobuf:"varint,7,opt,name=dot1ad_native_tag,json=dot1adNativeTag,proto3" json:"dot1ad_native_tag,omitempty"`
	ServiceInstanceDetails *EfpDescription     `protobuf:"bytes,8,opt,name=service_instance_details,json=serviceInstanceDetails,proto3" json:"service_instance_details,omitempty"`
	Dot1AdDot1QStack       *VlanDoubleTagStack `protobuf:"bytes,9,opt,name=dot1ad_dot1q_stack,json=dot1adDot1qStack,proto3" json:"dot1ad_dot1q_stack,omitempty"`
	Dot1AdOuterTag         uint32              `protobuf:"varint,10,opt,name=dot1ad_outer_tag,json=dot1adOuterTag,proto3" json:"dot1ad_outer_tag,omitempty"`
	XXX_NoUnkeyedLiteral   struct{}            `json:"-"`
	XXX_unrecognized       []byte              `json:"-"`
	XXX_sizecache          int32               `json:"-"`
}

func (m *VlanTagStackType) Reset()         { *m = VlanTagStackType{} }
func (m *VlanTagStackType) String() string { return proto.CompactTextString(m) }
func (*VlanTagStackType) ProtoMessage()    {}
func (*VlanTagStackType) Descriptor() ([]byte, []int) {
	return fileDescriptor_9abf17a6a17540ff, []int{13}
}

func (m *VlanTagStackType) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VlanTagStackType.Unmarshal(m, b)
}
func (m *VlanTagStackType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VlanTagStackType.Marshal(b, m, deterministic)
}
func (m *VlanTagStackType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VlanTagStackType.Merge(m, src)
}
func (m *VlanTagStackType) XXX_Size() int {
	return xxx_messageInfo_VlanTagStackType.Size(m)
}
func (m *VlanTagStackType) XXX_DiscardUnknown() {
	xxx_messageInfo_VlanTagStackType.DiscardUnknown(m)
}

var xxx_messageInfo_VlanTagStackType proto.InternalMessageInfo

func (m *VlanTagStackType) GetVlanEncapsulation() string {
	if m != nil {
		return m.VlanEncapsulation
	}
	return ""
}

func (m *VlanTagStackType) GetTag() uint32 {
	if m != nil {
		return m.Tag
	}
	return 0
}

func (m *VlanTagStackType) GetStack() *VlanDoubleTagStack {
	if m != nil {
		return m.Stack
	}
	return nil
}

func (m *VlanTagStackType) GetOuterTag() uint32 {
	if m != nil {
		return m.OuterTag
	}
	return 0
}

func (m *VlanTagStackType) GetNativeTag() uint32 {
	if m != nil {
		return m.NativeTag
	}
	return 0
}

func (m *VlanTagStackType) GetDot1AdTag() uint32 {
	if m != nil {
		return m.Dot1AdTag
	}
	return 0
}

func (m *VlanTagStackType) GetDot1AdNativeTag() uint32 {
	if m != nil {
		return m.Dot1AdNativeTag
	}
	return 0
}

func (m *VlanTagStackType) GetServiceInstanceDetails() *EfpDescription {
	if m != nil {
		return m.ServiceInstanceDetails
	}
	return nil
}

func (m *VlanTagStackType) GetDot1AdDot1QStack() *VlanDoubleTagStack {
	if m != nil {
		return m.Dot1AdDot1QStack
	}
	return nil
}

func (m *VlanTagStackType) GetDot1AdOuterTag() uint32 {
	if m != nil {
		return m.Dot1AdOuterTag
	}
	return 0
}

type VlanIntfGeneric struct {
	EncapsulationDetails *VlanTagStackType `protobuf:"bytes,1,opt,name=encapsulation_details,json=encapsulationDetails,proto3" json:"encapsulation_details,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *VlanIntfGeneric) Reset()         { *m = VlanIntfGeneric{} }
func (m *VlanIntfGeneric) String() string { return proto.CompactTextString(m) }
func (*VlanIntfGeneric) ProtoMessage()    {}
func (*VlanIntfGeneric) Descriptor() ([]byte, []int) {
	return fileDescriptor_9abf17a6a17540ff, []int{14}
}

func (m *VlanIntfGeneric) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VlanIntfGeneric.Unmarshal(m, b)
}
func (m *VlanIntfGeneric) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VlanIntfGeneric.Marshal(b, m, deterministic)
}
func (m *VlanIntfGeneric) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VlanIntfGeneric.Merge(m, src)
}
func (m *VlanIntfGeneric) XXX_Size() int {
	return xxx_messageInfo_VlanIntfGeneric.Size(m)
}
func (m *VlanIntfGeneric) XXX_DiscardUnknown() {
	xxx_messageInfo_VlanIntfGeneric.DiscardUnknown(m)
}

var xxx_messageInfo_VlanIntfGeneric proto.InternalMessageInfo

func (m *VlanIntfGeneric) GetEncapsulationDetails() *VlanTagStackType {
	if m != nil {
		return m.EncapsulationDetails
	}
	return nil
}

type PppShowIntNcpInfo struct {
	NcpState             string   `protobuf:"bytes,1,opt,name=ncp_state,json=ncpState,proto3" json:"ncp_state,omitempty"`
	NcpIdentifier        string   `protobuf:"bytes,2,opt,name=ncp_identifier,json=ncpIdentifier,proto3" json:"ncp_identifier,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PppShowIntNcpInfo) Reset()         { *m = PppShowIntNcpInfo{} }
func (m *PppShowIntNcpInfo) String() string { return proto.CompactTextString(m) }
func (*PppShowIntNcpInfo) ProtoMessage()    {}
func (*PppShowIntNcpInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_9abf17a6a17540ff, []int{15}
}

func (m *PppShowIntNcpInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PppShowIntNcpInfo.Unmarshal(m, b)
}
func (m *PppShowIntNcpInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PppShowIntNcpInfo.Marshal(b, m, deterministic)
}
func (m *PppShowIntNcpInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PppShowIntNcpInfo.Merge(m, src)
}
func (m *PppShowIntNcpInfo) XXX_Size() int {
	return xxx_messageInfo_PppShowIntNcpInfo.Size(m)
}
func (m *PppShowIntNcpInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_PppShowIntNcpInfo.DiscardUnknown(m)
}

var xxx_messageInfo_PppShowIntNcpInfo proto.InternalMessageInfo

func (m *PppShowIntNcpInfo) GetNcpState() string {
	if m != nil {
		return m.NcpState
	}
	return ""
}

func (m *PppShowIntNcpInfo) GetNcpIdentifier() string {
	if m != nil {
		return m.NcpIdentifier
	}
	return ""
}

type PppShowIntInfo struct {
	LcpState             string               `protobuf:"bytes,1,opt,name=lcp_state,json=lcpState,proto3" json:"lcp_state,omitempty"`
	IsLoopbackDetected   int32                `protobuf:"zigzag32,2,opt,name=is_loopback_detected,json=isLoopbackDetected,proto3" json:"is_loopback_detected,omitempty"`
	KeepalivePeriod      uint32               `protobuf:"varint,3,opt,name=keepalive_period,json=keepalivePeriod,proto3" json:"keepalive_period,omitempty"`
	IsMpBundleMember     int32                `protobuf:"zigzag32,4,opt,name=is_mp_bundle_member,json=isMpBundleMember,proto3" json:"is_mp_bundle_member,omitempty"`
	IsMultilinkOpen      int32                `protobuf:"zigzag32,5,opt,name=is_multilink_open,json=isMultilinkOpen,proto3" json:"is_multilink_open,omitempty"`
	NcpInfoArray         []*PppShowIntNcpInfo `protobuf:"bytes,6,rep,name=ncp_info_array,json=ncpInfoArray,proto3" json:"ncp_info_array,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *PppShowIntInfo) Reset()         { *m = PppShowIntInfo{} }
func (m *PppShowIntInfo) String() string { return proto.CompactTextString(m) }
func (*PppShowIntInfo) ProtoMessage()    {}
func (*PppShowIntInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_9abf17a6a17540ff, []int{16}
}

func (m *PppShowIntInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PppShowIntInfo.Unmarshal(m, b)
}
func (m *PppShowIntInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PppShowIntInfo.Marshal(b, m, deterministic)
}
func (m *PppShowIntInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PppShowIntInfo.Merge(m, src)
}
func (m *PppShowIntInfo) XXX_Size() int {
	return xxx_messageInfo_PppShowIntInfo.Size(m)
}
func (m *PppShowIntInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_PppShowIntInfo.DiscardUnknown(m)
}

var xxx_messageInfo_PppShowIntInfo proto.InternalMessageInfo

func (m *PppShowIntInfo) GetLcpState() string {
	if m != nil {
		return m.LcpState
	}
	return ""
}

func (m *PppShowIntInfo) GetIsLoopbackDetected() int32 {
	if m != nil {
		return m.IsLoopbackDetected
	}
	return 0
}

func (m *PppShowIntInfo) GetKeepalivePeriod() uint32 {
	if m != nil {
		return m.KeepalivePeriod
	}
	return 0
}

func (m *PppShowIntInfo) GetIsMpBundleMember() int32 {
	if m != nil {
		return m.IsMpBundleMember
	}
	return 0
}

func (m *PppShowIntInfo) GetIsMultilinkOpen() int32 {
	if m != nil {
		return m.IsMultilinkOpen
	}
	return 0
}

func (m *PppShowIntInfo) GetNcpInfoArray() []*PppShowIntNcpInfo {
	if m != nil {
		return m.NcpInfoArray
	}
	return nil
}

type ImCmdEncapsInfo struct {
	EncapsulationType     string           `protobuf:"bytes,1,opt,name=encapsulation_type,json=encapsulationType,proto3" json:"encapsulation_type,omitempty"`
	FrameRelayInformation *ImCmdFrInfo     `protobuf:"bytes,2,opt,name=frame_relay_information,json=frameRelayInformation,proto3" json:"frame_relay_information,omitempty"`
	Dot1QInformation      *VlanIntfGeneric `protobuf:"bytes,3,opt,name=dot1q_information,json=dot1qInformation,proto3" json:"dot1q_information,omitempty"`
	PppInformation        *PppShowIntInfo  `protobuf:"bytes,4,opt,name=ppp_information,json=pppInformation,proto3" json:"ppp_information,omitempty"`
	XXX_NoUnkeyedLiteral  struct{}         `json:"-"`
	XXX_unrecognized      []byte           `json:"-"`
	XXX_sizecache         int32            `json:"-"`
}

func (m *ImCmdEncapsInfo) Reset()         { *m = ImCmdEncapsInfo{} }
func (m *ImCmdEncapsInfo) String() string { return proto.CompactTextString(m) }
func (*ImCmdEncapsInfo) ProtoMessage()    {}
func (*ImCmdEncapsInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_9abf17a6a17540ff, []int{17}
}

func (m *ImCmdEncapsInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ImCmdEncapsInfo.Unmarshal(m, b)
}
func (m *ImCmdEncapsInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ImCmdEncapsInfo.Marshal(b, m, deterministic)
}
func (m *ImCmdEncapsInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ImCmdEncapsInfo.Merge(m, src)
}
func (m *ImCmdEncapsInfo) XXX_Size() int {
	return xxx_messageInfo_ImCmdEncapsInfo.Size(m)
}
func (m *ImCmdEncapsInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_ImCmdEncapsInfo.DiscardUnknown(m)
}

var xxx_messageInfo_ImCmdEncapsInfo proto.InternalMessageInfo

func (m *ImCmdEncapsInfo) GetEncapsulationType() string {
	if m != nil {
		return m.EncapsulationType
	}
	return ""
}

func (m *ImCmdEncapsInfo) GetFrameRelayInformation() *ImCmdFrInfo {
	if m != nil {
		return m.FrameRelayInformation
	}
	return nil
}

func (m *ImCmdEncapsInfo) GetDot1QInformation() *VlanIntfGeneric {
	if m != nil {
		return m.Dot1QInformation
	}
	return nil
}

func (m *ImCmdEncapsInfo) GetPppInformation() *PppShowIntInfo {
	if m != nil {
		return m.PppInformation
	}
	return nil
}

type SrpFailureInfo struct {
	Type                 string   `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	ReportedState        string   `protobuf:"bytes,2,opt,name=reported_state,json=reportedState,proto3" json:"reported_state,omitempty"`
	DebouncedState       string   `protobuf:"bytes,3,opt,name=debounced_state,json=debouncedState,proto3" json:"debounced_state,omitempty"`
	CurrentState         string   `protobuf:"bytes,4,opt,name=current_state,json=currentState,proto3" json:"current_state,omitempty"`
	StableTime           uint64   `protobuf:"varint,5,opt,name=stable_time,json=stableTime,proto3" json:"stable_time,omitempty"`
	DebouncedDelay       uint32   `protobuf:"varint,6,opt,name=debounced_delay,json=debouncedDelay,proto3" json:"debounced_delay,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SrpFailureInfo) Reset()         { *m = SrpFailureInfo{} }
func (m *SrpFailureInfo) String() string { return proto.CompactTextString(m) }
func (*SrpFailureInfo) ProtoMessage()    {}
func (*SrpFailureInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_9abf17a6a17540ff, []int{18}
}

func (m *SrpFailureInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SrpFailureInfo.Unmarshal(m, b)
}
func (m *SrpFailureInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SrpFailureInfo.Marshal(b, m, deterministic)
}
func (m *SrpFailureInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SrpFailureInfo.Merge(m, src)
}
func (m *SrpFailureInfo) XXX_Size() int {
	return xxx_messageInfo_SrpFailureInfo.Size(m)
}
func (m *SrpFailureInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_SrpFailureInfo.DiscardUnknown(m)
}

var xxx_messageInfo_SrpFailureInfo proto.InternalMessageInfo

func (m *SrpFailureInfo) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *SrpFailureInfo) GetReportedState() string {
	if m != nil {
		return m.ReportedState
	}
	return ""
}

func (m *SrpFailureInfo) GetDebouncedState() string {
	if m != nil {
		return m.DebouncedState
	}
	return ""
}

func (m *SrpFailureInfo) GetCurrentState() string {
	if m != nil {
		return m.CurrentState
	}
	return ""
}

func (m *SrpFailureInfo) GetStableTime() uint64 {
	if m != nil {
		return m.StableTime
	}
	return 0
}

func (m *SrpFailureInfo) GetDebouncedDelay() uint32 {
	if m != nil {
		return m.DebouncedDelay
	}
	return 0
}

type SrpIpsSideDetail struct {
	MacAddress             string            `protobuf:"bytes,1,opt,name=mac_address,json=macAddress,proto3" json:"mac_address,omitempty"`
	WrapState              string            `protobuf:"bytes,2,opt,name=wrap_state,json=wrapState,proto3" json:"wrap_state,omitempty"`
	PacketSentTimer        uint32            `protobuf:"varint,3,opt,name=packet_sent_timer,json=packetSentTimer,proto3" json:"packet_sent_timer,omitempty"`
	SendTimerTimeRemaining uint32            `protobuf:"varint,4,opt,name=send_timer_time_remaining,json=sendTimerTimeRemaining,proto3" json:"send_timer_time_remaining,omitempty"`
	WtrTimerRemaining      uint32            `protobuf:"varint,5,opt,name=wtr_timer_remaining,json=wtrTimerRemaining,proto3" json:"wtr_timer_remaining,omitempty"`
	SelfDetectedRequest    string            `protobuf:"bytes,6,opt,name=self_detected_request,json=selfDetectedRequest,proto3" json:"self_detected_request,omitempty"`
	RemoteRequest          string            `protobuf:"bytes,7,opt,name=remote_request,json=remoteRequest,proto3" json:"remote_request,omitempty"`
	AssertedFailure        []*SrpFailureInfo `protobuf:"bytes,8,rep,name=asserted_failure,json=assertedFailure,proto3" json:"asserted_failure,omitempty"`
	RxNeighborMacAddress   string            `protobuf:"bytes,9,opt,name=rx_neighbor_mac_address,json=rxNeighborMacAddress,proto3" json:"rx_neighbor_mac_address,omitempty"`
	RxMessageType          string            `protobuf:"bytes,10,opt,name=rx_message_type,json=rxMessageType,proto3" json:"rx_message_type,omitempty"`
	RxPathType             string            `protobuf:"bytes,11,opt,name=rx_path_type,json=rxPathType,proto3" json:"rx_path_type,omitempty"`
	RxTtl                  uint32            `protobuf:"varint,12,opt,name=rx_ttl,json=rxTtl,proto3" json:"rx_ttl,omitempty"`
	RxPacketTest           int32             `protobuf:"zigzag32,13,opt,name=rx_packet_test,json=rxPacketTest,proto3" json:"rx_packet_test,omitempty"`
	TxNeighborMacAddress   string            `protobuf:"bytes,14,opt,name=tx_neighbor_mac_address,json=txNeighborMacAddress,proto3" json:"tx_neighbor_mac_address,omitempty"`
	TxMessageType          string            `protobuf:"bytes,15,opt,name=tx_message_type,json=txMessageType,proto3" json:"tx_message_type,omitempty"`
	TxPathType             string            `protobuf:"bytes,16,opt,name=tx_path_type,json=txPathType,proto3" json:"tx_path_type,omitempty"`
	TxTtl                  uint32            `protobuf:"varint,17,opt,name=tx_ttl,json=txTtl,proto3" json:"tx_ttl,omitempty"`
	TxPacketTest           int32             `protobuf:"zigzag32,18,opt,name=tx_packet_test,json=txPacketTest,proto3" json:"tx_packet_test,omitempty"`
	DelayKeepAliveTrigger  uint32            `protobuf:"varint,19,opt,name=delay_keep_alive_trigger,json=delayKeepAliveTrigger,proto3" json:"delay_keep_alive_trigger,omitempty"`
	XXX_NoUnkeyedLiteral   struct{}          `json:"-"`
	XXX_unrecognized       []byte            `json:"-"`
	XXX_sizecache          int32             `json:"-"`
}

func (m *SrpIpsSideDetail) Reset()         { *m = SrpIpsSideDetail{} }
func (m *SrpIpsSideDetail) String() string { return proto.CompactTextString(m) }
func (*SrpIpsSideDetail) ProtoMessage()    {}
func (*SrpIpsSideDetail) Descriptor() ([]byte, []int) {
	return fileDescriptor_9abf17a6a17540ff, []int{19}
}

func (m *SrpIpsSideDetail) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SrpIpsSideDetail.Unmarshal(m, b)
}
func (m *SrpIpsSideDetail) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SrpIpsSideDetail.Marshal(b, m, deterministic)
}
func (m *SrpIpsSideDetail) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SrpIpsSideDetail.Merge(m, src)
}
func (m *SrpIpsSideDetail) XXX_Size() int {
	return xxx_messageInfo_SrpIpsSideDetail.Size(m)
}
func (m *SrpIpsSideDetail) XXX_DiscardUnknown() {
	xxx_messageInfo_SrpIpsSideDetail.DiscardUnknown(m)
}

var xxx_messageInfo_SrpIpsSideDetail proto.InternalMessageInfo

func (m *SrpIpsSideDetail) GetMacAddress() string {
	if m != nil {
		return m.MacAddress
	}
	return ""
}

func (m *SrpIpsSideDetail) GetWrapState() string {
	if m != nil {
		return m.WrapState
	}
	return ""
}

func (m *SrpIpsSideDetail) GetPacketSentTimer() uint32 {
	if m != nil {
		return m.PacketSentTimer
	}
	return 0
}

func (m *SrpIpsSideDetail) GetSendTimerTimeRemaining() uint32 {
	if m != nil {
		return m.SendTimerTimeRemaining
	}
	return 0
}

func (m *SrpIpsSideDetail) GetWtrTimerRemaining() uint32 {
	if m != nil {
		return m.WtrTimerRemaining
	}
	return 0
}

func (m *SrpIpsSideDetail) GetSelfDetectedRequest() string {
	if m != nil {
		return m.SelfDetectedRequest
	}
	return ""
}

func (m *SrpIpsSideDetail) GetRemoteRequest() string {
	if m != nil {
		return m.RemoteRequest
	}
	return ""
}

func (m *SrpIpsSideDetail) GetAssertedFailure() []*SrpFailureInfo {
	if m != nil {
		return m.AssertedFailure
	}
	return nil
}

func (m *SrpIpsSideDetail) GetRxNeighborMacAddress() string {
	if m != nil {
		return m.RxNeighborMacAddress
	}
	return ""
}

func (m *SrpIpsSideDetail) GetRxMessageType() string {
	if m != nil {
		return m.RxMessageType
	}
	return ""
}

func (m *SrpIpsSideDetail) GetRxPathType() string {
	if m != nil {
		return m.RxPathType
	}
	return ""
}

func (m *SrpIpsSideDetail) GetRxTtl() uint32 {
	if m != nil {
		return m.RxTtl
	}
	return 0
}

func (m *SrpIpsSideDetail) GetRxPacketTest() int32 {
	if m != nil {
		return m.RxPacketTest
	}
	return 0
}

func (m *SrpIpsSideDetail) GetTxNeighborMacAddress() string {
	if m != nil {
		return m.TxNeighborMacAddress
	}
	return ""
}

func (m *SrpIpsSideDetail) GetTxMessageType() string {
	if m != nil {
		return m.TxMessageType
	}
	return ""
}

func (m *SrpIpsSideDetail) GetTxPathType() string {
	if m != nil {
		return m.TxPathType
	}
	return ""
}

func (m *SrpIpsSideDetail) GetTxTtl() uint32 {
	if m != nil {
		return m.TxTtl
	}
	return 0
}

func (m *SrpIpsSideDetail) GetTxPacketTest() int32 {
	if m != nil {
		return m.TxPacketTest
	}
	return 0
}

func (m *SrpIpsSideDetail) GetDelayKeepAliveTrigger() uint32 {
	if m != nil {
		return m.DelayKeepAliveTrigger
	}
	return 0
}

type SrpIpsDetail struct {
	MacAddress            string            `protobuf:"bytes,1,opt,name=mac_address,json=macAddress,proto3" json:"mac_address,omitempty"`
	IsInterCardBusEnabled int32             `protobuf:"zigzag32,2,opt,name=is_inter_card_bus_enabled,json=isInterCardBusEnabled,proto3" json:"is_inter_card_bus_enabled,omitempty"`
	WtrTimerPeriod        uint32            `protobuf:"varint,3,opt,name=wtr_timer_period,json=wtrTimerPeriod,proto3" json:"wtr_timer_period,omitempty"`
	SideA                 *SrpIpsSideDetail `protobuf:"bytes,4,opt,name=side_a,json=sideA,proto3" json:"side_a,omitempty"`
	SideB                 *SrpIpsSideDetail `protobuf:"bytes,5,opt,name=side_b,json=sideB,proto3" json:"side_b,omitempty"`
	XXX_NoUnkeyedLiteral  struct{}          `json:"-"`
	XXX_unrecognized      []byte            `json:"-"`
	XXX_sizecache         int32             `json:"-"`
}

func (m *SrpIpsDetail) Reset()         { *m = SrpIpsDetail{} }
func (m *SrpIpsDetail) String() string { return proto.CompactTextString(m) }
func (*SrpIpsDetail) ProtoMessage()    {}
func (*SrpIpsDetail) Descriptor() ([]byte, []int) {
	return fileDescriptor_9abf17a6a17540ff, []int{20}
}

func (m *SrpIpsDetail) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SrpIpsDetail.Unmarshal(m, b)
}
func (m *SrpIpsDetail) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SrpIpsDetail.Marshal(b, m, deterministic)
}
func (m *SrpIpsDetail) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SrpIpsDetail.Merge(m, src)
}
func (m *SrpIpsDetail) XXX_Size() int {
	return xxx_messageInfo_SrpIpsDetail.Size(m)
}
func (m *SrpIpsDetail) XXX_DiscardUnknown() {
	xxx_messageInfo_SrpIpsDetail.DiscardUnknown(m)
}

var xxx_messageInfo_SrpIpsDetail proto.InternalMessageInfo

func (m *SrpIpsDetail) GetMacAddress() string {
	if m != nil {
		return m.MacAddress
	}
	return ""
}

func (m *SrpIpsDetail) GetIsInterCardBusEnabled() int32 {
	if m != nil {
		return m.IsInterCardBusEnabled
	}
	return 0
}

func (m *SrpIpsDetail) GetWtrTimerPeriod() uint32 {
	if m != nil {
		return m.WtrTimerPeriod
	}
	return 0
}

func (m *SrpIpsDetail) GetSideA() *SrpIpsSideDetail {
	if m != nil {
		return m.SideA
	}
	return nil
}

func (m *SrpIpsDetail) GetSideB() *SrpIpsSideDetail {
	if m != nil {
		return m.SideB
	}
	return nil
}

type SrpIpsInfo struct {
	IsAdminDown          int32           `protobuf:"zigzag32,1,opt,name=is_admin_down,json=isAdminDown,proto3" json:"is_admin_down,omitempty"`
	LocalInformation     []*SrpIpsDetail `protobuf:"bytes,2,rep,name=local_information,json=localInformation,proto3" json:"local_information,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *SrpIpsInfo) Reset()         { *m = SrpIpsInfo{} }
func (m *SrpIpsInfo) String() string { return proto.CompactTextString(m) }
func (*SrpIpsInfo) ProtoMessage()    {}
func (*SrpIpsInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_9abf17a6a17540ff, []int{21}
}

func (m *SrpIpsInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SrpIpsInfo.Unmarshal(m, b)
}
func (m *SrpIpsInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SrpIpsInfo.Marshal(b, m, deterministic)
}
func (m *SrpIpsInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SrpIpsInfo.Merge(m, src)
}
func (m *SrpIpsInfo) XXX_Size() int {
	return xxx_messageInfo_SrpIpsInfo.Size(m)
}
func (m *SrpIpsInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_SrpIpsInfo.DiscardUnknown(m)
}

var xxx_messageInfo_SrpIpsInfo proto.InternalMessageInfo

func (m *SrpIpsInfo) GetIsAdminDown() int32 {
	if m != nil {
		return m.IsAdminDown
	}
	return 0
}

func (m *SrpIpsInfo) GetLocalInformation() []*SrpIpsDetail {
	if m != nil {
		return m.LocalInformation
	}
	return nil
}

type SrpTopologyNodeData struct {
	HopCount             uint32   `protobuf:"varint,1,opt,name=hop_count,json=hopCount,proto3" json:"hop_count,omitempty"`
	MacAddress           string   `protobuf:"bytes,2,opt,name=mac_address,json=macAddress,proto3" json:"mac_address,omitempty"`
	Ipv4Address          string   `protobuf:"bytes,3,opt,name=ipv4_address,json=ipv4Address,proto3" json:"ipv4_address,omitempty"`
	IsWrapped            int32    `protobuf:"zigzag32,4,opt,name=is_wrapped,json=isWrapped,proto3" json:"is_wrapped,omitempty"`
	IsSrrSupported       int32    `protobuf:"zigzag32,5,opt,name=is_srr_supported,json=isSrrSupported,proto3" json:"is_srr_supported,omitempty"`
	NodeName             string   `protobuf:"bytes,6,opt,name=node_name,json=nodeName,proto3" json:"node_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SrpTopologyNodeData) Reset()         { *m = SrpTopologyNodeData{} }
func (m *SrpTopologyNodeData) String() string { return proto.CompactTextString(m) }
func (*SrpTopologyNodeData) ProtoMessage()    {}
func (*SrpTopologyNodeData) Descriptor() ([]byte, []int) {
	return fileDescriptor_9abf17a6a17540ff, []int{22}
}

func (m *SrpTopologyNodeData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SrpTopologyNodeData.Unmarshal(m, b)
}
func (m *SrpTopologyNodeData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SrpTopologyNodeData.Marshal(b, m, deterministic)
}
func (m *SrpTopologyNodeData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SrpTopologyNodeData.Merge(m, src)
}
func (m *SrpTopologyNodeData) XXX_Size() int {
	return xxx_messageInfo_SrpTopologyNodeData.Size(m)
}
func (m *SrpTopologyNodeData) XXX_DiscardUnknown() {
	xxx_messageInfo_SrpTopologyNodeData.DiscardUnknown(m)
}

var xxx_messageInfo_SrpTopologyNodeData proto.InternalMessageInfo

func (m *SrpTopologyNodeData) GetHopCount() uint32 {
	if m != nil {
		return m.HopCount
	}
	return 0
}

func (m *SrpTopologyNodeData) GetMacAddress() string {
	if m != nil {
		return m.MacAddress
	}
	return ""
}

func (m *SrpTopologyNodeData) GetIpv4Address() string {
	if m != nil {
		return m.Ipv4Address
	}
	return ""
}

func (m *SrpTopologyNodeData) GetIsWrapped() int32 {
	if m != nil {
		return m.IsWrapped
	}
	return 0
}

func (m *SrpTopologyNodeData) GetIsSrrSupported() int32 {
	if m != nil {
		return m.IsSrrSupported
	}
	return 0
}

func (m *SrpTopologyNodeData) GetNodeName() string {
	if m != nil {
		return m.NodeName
	}
	return ""
}

type SrpTopologyMap struct {
	TopologyTimer                       uint32                 `protobuf:"varint,1,opt,name=topology_timer,json=topologyTimer,proto3" json:"topology_timer,omitempty"`
	NextTopologyPacketDelay             uint32                 `protobuf:"varint,2,opt,name=next_topology_packet_delay,json=nextTopologyPacketDelay,proto3" json:"next_topology_packet_delay,omitempty"`
	TimeSinceLastTopologyPacketReceived uint32                 `protobuf:"varint,3,opt,name=time_since_last_topology_packet_received,json=timeSinceLastTopologyPacketReceived,proto3" json:"time_since_last_topology_packet_received,omitempty"`
	TimeSinceLastTopologyChange         uint32                 `protobuf:"varint,4,opt,name=time_since_last_topology_change,json=timeSinceLastTopologyChange,proto3" json:"time_since_last_topology_change,omitempty"`
	NumberOfNodesOnRing                 uint32                 `protobuf:"varint,5,opt,name=number_of_nodes_on_ring,json=numberOfNodesOnRing,proto3" json:"number_of_nodes_on_ring,omitempty"`
	RingNode                            []*SrpTopologyNodeData `protobuf:"bytes,6,rep,name=ring_node,json=ringNode,proto3" json:"ring_node,omitempty"`
	XXX_NoUnkeyedLiteral                struct{}               `json:"-"`
	XXX_unrecognized                    []byte                 `json:"-"`
	XXX_sizecache                       int32                  `json:"-"`
}

func (m *SrpTopologyMap) Reset()         { *m = SrpTopologyMap{} }
func (m *SrpTopologyMap) String() string { return proto.CompactTextString(m) }
func (*SrpTopologyMap) ProtoMessage()    {}
func (*SrpTopologyMap) Descriptor() ([]byte, []int) {
	return fileDescriptor_9abf17a6a17540ff, []int{23}
}

func (m *SrpTopologyMap) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SrpTopologyMap.Unmarshal(m, b)
}
func (m *SrpTopologyMap) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SrpTopologyMap.Marshal(b, m, deterministic)
}
func (m *SrpTopologyMap) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SrpTopologyMap.Merge(m, src)
}
func (m *SrpTopologyMap) XXX_Size() int {
	return xxx_messageInfo_SrpTopologyMap.Size(m)
}
func (m *SrpTopologyMap) XXX_DiscardUnknown() {
	xxx_messageInfo_SrpTopologyMap.DiscardUnknown(m)
}

var xxx_messageInfo_SrpTopologyMap proto.InternalMessageInfo

func (m *SrpTopologyMap) GetTopologyTimer() uint32 {
	if m != nil {
		return m.TopologyTimer
	}
	return 0
}

func (m *SrpTopologyMap) GetNextTopologyPacketDelay() uint32 {
	if m != nil {
		return m.NextTopologyPacketDelay
	}
	return 0
}

func (m *SrpTopologyMap) GetTimeSinceLastTopologyPacketReceived() uint32 {
	if m != nil {
		return m.TimeSinceLastTopologyPacketReceived
	}
	return 0
}

func (m *SrpTopologyMap) GetTimeSinceLastTopologyChange() uint32 {
	if m != nil {
		return m.TimeSinceLastTopologyChange
	}
	return 0
}

func (m *SrpTopologyMap) GetNumberOfNodesOnRing() uint32 {
	if m != nil {
		return m.NumberOfNodesOnRing
	}
	return 0
}

func (m *SrpTopologyMap) GetRingNode() []*SrpTopologyNodeData {
	if m != nil {
		return m.RingNode
	}
	return nil
}

type SrpTopologyInfo struct {
	IsAdminDown          int32             `protobuf:"zigzag32,1,opt,name=is_admin_down,json=isAdminDown,proto3" json:"is_admin_down,omitempty"`
	LocalInformation     []*SrpTopologyMap `protobuf:"bytes,2,rep,name=local_information,json=localInformation,proto3" json:"local_information,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *SrpTopologyInfo) Reset()         { *m = SrpTopologyInfo{} }
func (m *SrpTopologyInfo) String() string { return proto.CompactTextString(m) }
func (*SrpTopologyInfo) ProtoMessage()    {}
func (*SrpTopologyInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_9abf17a6a17540ff, []int{24}
}

func (m *SrpTopologyInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SrpTopologyInfo.Unmarshal(m, b)
}
func (m *SrpTopologyInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SrpTopologyInfo.Marshal(b, m, deterministic)
}
func (m *SrpTopologyInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SrpTopologyInfo.Merge(m, src)
}
func (m *SrpTopologyInfo) XXX_Size() int {
	return xxx_messageInfo_SrpTopologyInfo.Size(m)
}
func (m *SrpTopologyInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_SrpTopologyInfo.DiscardUnknown(m)
}

var xxx_messageInfo_SrpTopologyInfo proto.InternalMessageInfo

func (m *SrpTopologyInfo) GetIsAdminDown() int32 {
	if m != nil {
		return m.IsAdminDown
	}
	return 0
}

func (m *SrpTopologyInfo) GetLocalInformation() []*SrpTopologyMap {
	if m != nil {
		return m.LocalInformation
	}
	return nil
}

type SrrNodeData struct {
	NodeName                 string   `protobuf:"bytes,1,opt,name=node_name,json=nodeName,proto3" json:"node_name,omitempty"`
	SrrEntryExits            int32    `protobuf:"zigzag32,2,opt,name=srr_entry_exits,json=srrEntryExits,proto3" json:"srr_entry_exits,omitempty"`
	MacAddress               string   `protobuf:"bytes,3,opt,name=mac_address,json=macAddress,proto3" json:"mac_address,omitempty"`
	OuterFailure             string   `protobuf:"bytes,4,opt,name=outer_failure,json=outerFailure,proto3" json:"outer_failure,omitempty"`
	InnerFailure             string   `protobuf:"bytes,5,opt,name=inner_failure,json=innerFailure,proto3" json:"inner_failure,omitempty"`
	IsLastAnnounceReceived   int32    `protobuf:"zigzag32,6,opt,name=is_last_announce_received,json=isLastAnnounceReceived,proto3" json:"is_last_announce_received,omitempty"`
	LastAnnounceReceivedTime uint32   `protobuf:"varint,7,opt,name=last_announce_received_time,json=lastAnnounceReceivedTime,proto3" json:"last_announce_received_time,omitempty"`
	XXX_NoUnkeyedLiteral     struct{} `json:"-"`
	XXX_unrecognized         []byte   `json:"-"`
	XXX_sizecache            int32    `json:"-"`
}

func (m *SrrNodeData) Reset()         { *m = SrrNodeData{} }
func (m *SrrNodeData) String() string { return proto.CompactTextString(m) }
func (*SrrNodeData) ProtoMessage()    {}
func (*SrrNodeData) Descriptor() ([]byte, []int) {
	return fileDescriptor_9abf17a6a17540ff, []int{25}
}

func (m *SrrNodeData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SrrNodeData.Unmarshal(m, b)
}
func (m *SrrNodeData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SrrNodeData.Marshal(b, m, deterministic)
}
func (m *SrrNodeData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SrrNodeData.Merge(m, src)
}
func (m *SrrNodeData) XXX_Size() int {
	return xxx_messageInfo_SrrNodeData.Size(m)
}
func (m *SrrNodeData) XXX_DiscardUnknown() {
	xxx_messageInfo_SrrNodeData.DiscardUnknown(m)
}

var xxx_messageInfo_SrrNodeData proto.InternalMessageInfo

func (m *SrrNodeData) GetNodeName() string {
	if m != nil {
		return m.NodeName
	}
	return ""
}

func (m *SrrNodeData) GetSrrEntryExits() int32 {
	if m != nil {
		return m.SrrEntryExits
	}
	return 0
}

func (m *SrrNodeData) GetMacAddress() string {
	if m != nil {
		return m.MacAddress
	}
	return ""
}

func (m *SrrNodeData) GetOuterFailure() string {
	if m != nil {
		return m.OuterFailure
	}
	return ""
}

func (m *SrrNodeData) GetInnerFailure() string {
	if m != nil {
		return m.InnerFailure
	}
	return ""
}

func (m *SrrNodeData) GetIsLastAnnounceReceived() int32 {
	if m != nil {
		return m.IsLastAnnounceReceived
	}
	return 0
}

func (m *SrrNodeData) GetLastAnnounceReceivedTime() uint32 {
	if m != nil {
		return m.LastAnnounceReceivedTime
	}
	return 0
}

type SrpSrrDetail struct {
	VersionNumber               uint32         `protobuf:"varint,1,opt,name=version_number,json=versionNumber,proto3" json:"version_number,omitempty"`
	IsWrongVersionReceived      int32          `protobuf:"zigzag32,2,opt,name=is_wrong_version_received,json=isWrongVersionReceived,proto3" json:"is_wrong_version_received,omitempty"`
	LastWrongVersionReceiveTime uint32         `protobuf:"varint,3,opt,name=last_wrong_version_receive_time,json=lastWrongVersionReceiveTime,proto3" json:"last_wrong_version_receive_time,omitempty"`
	MacAddress                  string         `protobuf:"bytes,4,opt,name=mac_address,json=macAddress,proto3" json:"mac_address,omitempty"`
	NodeState                   string         `protobuf:"bytes,5,opt,name=node_state,json=nodeState,proto3" json:"node_state,omitempty"`
	IsOuterRingInUse            int32          `protobuf:"zigzag32,6,opt,name=is_outer_ring_in_use,json=isOuterRingInUse,proto3" json:"is_outer_ring_in_use,omitempty"`
	IsInnerRingInUse            int32          `protobuf:"zigzag32,7,opt,name=is_inner_ring_in_use,json=isInnerRingInUse,proto3" json:"is_inner_ring_in_use,omitempty"`
	IsAnnounce                  int32          `protobuf:"zigzag32,8,opt,name=is_announce,json=isAnnounce,proto3" json:"is_announce,omitempty"`
	OuterFailType               string         `protobuf:"bytes,9,opt,name=outer_fail_type,json=outerFailType,proto3" json:"outer_fail_type,omitempty"`
	InnerFailType               string         `protobuf:"bytes,10,opt,name=inner_fail_type,json=innerFailType,proto3" json:"inner_fail_type,omitempty"`
	PacketSendTimer             uint32         `protobuf:"varint,11,opt,name=packet_send_timer,json=packetSendTimer,proto3" json:"packet_send_timer,omitempty"`
	NextSrrPacketSendTime       uint32         `protobuf:"varint,12,opt,name=next_srr_packet_send_time,json=nextSrrPacketSendTime,proto3" json:"next_srr_packet_send_time,omitempty"`
	SingleRingBw                uint32         `protobuf:"varint,13,opt,name=single_ring_bw,json=singleRingBw,proto3" json:"single_ring_bw,omitempty"`
	WtrTime                     uint32         `protobuf:"varint,14,opt,name=wtr_time,json=wtrTime,proto3" json:"wtr_time,omitempty"`
	WtrTimerRemainingOuterRing  uint32         `protobuf:"varint,15,opt,name=wtr_timer_remaining_outer_ring,json=wtrTimerRemainingOuterRing,proto3" json:"wtr_timer_remaining_outer_ring,omitempty"`
	WtrTimerRemainingInnerRing  uint32         `protobuf:"varint,16,opt,name=wtr_timer_remaining_inner_ring,json=wtrTimerRemainingInnerRing,proto3" json:"wtr_timer_remaining_inner_ring,omitempty"`
	NodesOnRing                 []*SrrNodeData `protobuf:"bytes,17,rep,name=nodes_on_ring,json=nodesOnRing,proto3" json:"nodes_on_ring,omitempty"`
	NodesNotOnRing              []*SrrNodeData `protobuf:"bytes,18,rep,name=nodes_not_on_ring,json=nodesNotOnRing,proto3" json:"nodes_not_on_ring,omitempty"`
	XXX_NoUnkeyedLiteral        struct{}       `json:"-"`
	XXX_unrecognized            []byte         `json:"-"`
	XXX_sizecache               int32          `json:"-"`
}

func (m *SrpSrrDetail) Reset()         { *m = SrpSrrDetail{} }
func (m *SrpSrrDetail) String() string { return proto.CompactTextString(m) }
func (*SrpSrrDetail) ProtoMessage()    {}
func (*SrpSrrDetail) Descriptor() ([]byte, []int) {
	return fileDescriptor_9abf17a6a17540ff, []int{26}
}

func (m *SrpSrrDetail) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SrpSrrDetail.Unmarshal(m, b)
}
func (m *SrpSrrDetail) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SrpSrrDetail.Marshal(b, m, deterministic)
}
func (m *SrpSrrDetail) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SrpSrrDetail.Merge(m, src)
}
func (m *SrpSrrDetail) XXX_Size() int {
	return xxx_messageInfo_SrpSrrDetail.Size(m)
}
func (m *SrpSrrDetail) XXX_DiscardUnknown() {
	xxx_messageInfo_SrpSrrDetail.DiscardUnknown(m)
}

var xxx_messageInfo_SrpSrrDetail proto.InternalMessageInfo

func (m *SrpSrrDetail) GetVersionNumber() uint32 {
	if m != nil {
		return m.VersionNumber
	}
	return 0
}

func (m *SrpSrrDetail) GetIsWrongVersionReceived() int32 {
	if m != nil {
		return m.IsWrongVersionReceived
	}
	return 0
}

func (m *SrpSrrDetail) GetLastWrongVersionReceiveTime() uint32 {
	if m != nil {
		return m.LastWrongVersionReceiveTime
	}
	return 0
}

func (m *SrpSrrDetail) GetMacAddress() string {
	if m != nil {
		return m.MacAddress
	}
	return ""
}

func (m *SrpSrrDetail) GetNodeState() string {
	if m != nil {
		return m.NodeState
	}
	return ""
}

func (m *SrpSrrDetail) GetIsOuterRingInUse() int32 {
	if m != nil {
		return m.IsOuterRingInUse
	}
	return 0
}

func (m *SrpSrrDetail) GetIsInnerRingInUse() int32 {
	if m != nil {
		return m.IsInnerRingInUse
	}
	return 0
}

func (m *SrpSrrDetail) GetIsAnnounce() int32 {
	if m != nil {
		return m.IsAnnounce
	}
	return 0
}

func (m *SrpSrrDetail) GetOuterFailType() string {
	if m != nil {
		return m.OuterFailType
	}
	return ""
}

func (m *SrpSrrDetail) GetInnerFailType() string {
	if m != nil {
		return m.InnerFailType
	}
	return ""
}

func (m *SrpSrrDetail) GetPacketSendTimer() uint32 {
	if m != nil {
		return m.PacketSendTimer
	}
	return 0
}

func (m *SrpSrrDetail) GetNextSrrPacketSendTime() uint32 {
	if m != nil {
		return m.NextSrrPacketSendTime
	}
	return 0
}

func (m *SrpSrrDetail) GetSingleRingBw() uint32 {
	if m != nil {
		return m.SingleRingBw
	}
	return 0
}

func (m *SrpSrrDetail) GetWtrTime() uint32 {
	if m != nil {
		return m.WtrTime
	}
	return 0
}

func (m *SrpSrrDetail) GetWtrTimerRemainingOuterRing() uint32 {
	if m != nil {
		return m.WtrTimerRemainingOuterRing
	}
	return 0
}

func (m *SrpSrrDetail) GetWtrTimerRemainingInnerRing() uint32 {
	if m != nil {
		return m.WtrTimerRemainingInnerRing
	}
	return 0
}

func (m *SrpSrrDetail) GetNodesOnRing() []*SrrNodeData {
	if m != nil {
		return m.NodesOnRing
	}
	return nil
}

func (m *SrpSrrDetail) GetNodesNotOnRing() []*SrrNodeData {
	if m != nil {
		return m.NodesNotOnRing
	}
	return nil
}

type SrpSrrInfo struct {
	IsAdminDown          int32           `protobuf:"zigzag32,1,opt,name=is_admin_down,json=isAdminDown,proto3" json:"is_admin_down,omitempty"`
	IsSrrEnabled         int32           `protobuf:"zigzag32,2,opt,name=is_srr_enabled,json=isSrrEnabled,proto3" json:"is_srr_enabled,omitempty"`
	SrrDetailedInfo      []*SrpSrrDetail `protobuf:"bytes,3,rep,name=srr_detailed_info,json=srrDetailedInfo,proto3" json:"srr_detailed_info,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *SrpSrrInfo) Reset()         { *m = SrpSrrInfo{} }
func (m *SrpSrrInfo) String() string { return proto.CompactTextString(m) }
func (*SrpSrrInfo) ProtoMessage()    {}
func (*SrpSrrInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_9abf17a6a17540ff, []int{27}
}

func (m *SrpSrrInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SrpSrrInfo.Unmarshal(m, b)
}
func (m *SrpSrrInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SrpSrrInfo.Marshal(b, m, deterministic)
}
func (m *SrpSrrInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SrpSrrInfo.Merge(m, src)
}
func (m *SrpSrrInfo) XXX_Size() int {
	return xxx_messageInfo_SrpSrrInfo.Size(m)
}
func (m *SrpSrrInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_SrpSrrInfo.DiscardUnknown(m)
}

var xxx_messageInfo_SrpSrrInfo proto.InternalMessageInfo

func (m *SrpSrrInfo) GetIsAdminDown() int32 {
	if m != nil {
		return m.IsAdminDown
	}
	return 0
}

func (m *SrpSrrInfo) GetIsSrrEnabled() int32 {
	if m != nil {
		return m.IsSrrEnabled
	}
	return 0
}

func (m *SrpSrrInfo) GetSrrDetailedInfo() []*SrpSrrDetail {
	if m != nil {
		return m.SrrDetailedInfo
	}
	return nil
}

type SrpRateLimitDetail struct {
	MinPriorityValue     uint32   `protobuf:"varint,1,opt,name=min_priority_value,json=minPriorityValue,proto3" json:"min_priority_value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SrpRateLimitDetail) Reset()         { *m = SrpRateLimitDetail{} }
func (m *SrpRateLimitDetail) String() string { return proto.CompactTextString(m) }
func (*SrpRateLimitDetail) ProtoMessage()    {}
func (*SrpRateLimitDetail) Descriptor() ([]byte, []int) {
	return fileDescriptor_9abf17a6a17540ff, []int{28}
}

func (m *SrpRateLimitDetail) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SrpRateLimitDetail.Unmarshal(m, b)
}
func (m *SrpRateLimitDetail) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SrpRateLimitDetail.Marshal(b, m, deterministic)
}
func (m *SrpRateLimitDetail) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SrpRateLimitDetail.Merge(m, src)
}
func (m *SrpRateLimitDetail) XXX_Size() int {
	return xxx_messageInfo_SrpRateLimitDetail.Size(m)
}
func (m *SrpRateLimitDetail) XXX_DiscardUnknown() {
	xxx_messageInfo_SrpRateLimitDetail.DiscardUnknown(m)
}

var xxx_messageInfo_SrpRateLimitDetail proto.InternalMessageInfo

func (m *SrpRateLimitDetail) GetMinPriorityValue() uint32 {
	if m != nil {
		return m.MinPriorityValue
	}
	return 0
}

type SrpRateLimitInfo struct {
	IsAdminDown           int32                 `protobuf:"zigzag32,1,opt,name=is_admin_down,json=isAdminDown,proto3" json:"is_admin_down,omitempty"`
	RateLimitDetailedInfo []*SrpRateLimitDetail `protobuf:"bytes,2,rep,name=rate_limit_detailed_info,json=rateLimitDetailedInfo,proto3" json:"rate_limit_detailed_info,omitempty"`
	XXX_NoUnkeyedLiteral  struct{}              `json:"-"`
	XXX_unrecognized      []byte                `json:"-"`
	XXX_sizecache         int32                 `json:"-"`
}

func (m *SrpRateLimitInfo) Reset()         { *m = SrpRateLimitInfo{} }
func (m *SrpRateLimitInfo) String() string { return proto.CompactTextString(m) }
func (*SrpRateLimitInfo) ProtoMessage()    {}
func (*SrpRateLimitInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_9abf17a6a17540ff, []int{29}
}

func (m *SrpRateLimitInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SrpRateLimitInfo.Unmarshal(m, b)
}
func (m *SrpRateLimitInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SrpRateLimitInfo.Marshal(b, m, deterministic)
}
func (m *SrpRateLimitInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SrpRateLimitInfo.Merge(m, src)
}
func (m *SrpRateLimitInfo) XXX_Size() int {
	return xxx_messageInfo_SrpRateLimitInfo.Size(m)
}
func (m *SrpRateLimitInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_SrpRateLimitInfo.DiscardUnknown(m)
}

var xxx_messageInfo_SrpRateLimitInfo proto.InternalMessageInfo

func (m *SrpRateLimitInfo) GetIsAdminDown() int32 {
	if m != nil {
		return m.IsAdminDown
	}
	return 0
}

func (m *SrpRateLimitInfo) GetRateLimitDetailedInfo() []*SrpRateLimitDetail {
	if m != nil {
		return m.RateLimitDetailedInfo
	}
	return nil
}

type SrpAllInfo struct {
	IpsInfo              *SrpIpsInfo       `protobuf:"bytes,1,opt,name=ips_info,json=ipsInfo,proto3" json:"ips_info,omitempty"`
	TopologyInfo         *SrpTopologyInfo  `protobuf:"bytes,2,opt,name=topology_info,json=topologyInfo,proto3" json:"topology_info,omitempty"`
	SrrInfo              *SrpSrrInfo       `protobuf:"bytes,3,opt,name=srr_info,json=srrInfo,proto3" json:"srr_info,omitempty"`
	RateLimitInfo        *SrpRateLimitInfo `protobuf:"bytes,4,opt,name=rate_limit_info,json=rateLimitInfo,proto3" json:"rate_limit_info,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *SrpAllInfo) Reset()         { *m = SrpAllInfo{} }
func (m *SrpAllInfo) String() string { return proto.CompactTextString(m) }
func (*SrpAllInfo) ProtoMessage()    {}
func (*SrpAllInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_9abf17a6a17540ff, []int{30}
}

func (m *SrpAllInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SrpAllInfo.Unmarshal(m, b)
}
func (m *SrpAllInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SrpAllInfo.Marshal(b, m, deterministic)
}
func (m *SrpAllInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SrpAllInfo.Merge(m, src)
}
func (m *SrpAllInfo) XXX_Size() int {
	return xxx_messageInfo_SrpAllInfo.Size(m)
}
func (m *SrpAllInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_SrpAllInfo.DiscardUnknown(m)
}

var xxx_messageInfo_SrpAllInfo proto.InternalMessageInfo

func (m *SrpAllInfo) GetIpsInfo() *SrpIpsInfo {
	if m != nil {
		return m.IpsInfo
	}
	return nil
}

func (m *SrpAllInfo) GetTopologyInfo() *SrpTopologyInfo {
	if m != nil {
		return m.TopologyInfo
	}
	return nil
}

func (m *SrpAllInfo) GetSrrInfo() *SrpSrrInfo {
	if m != nil {
		return m.SrrInfo
	}
	return nil
}

func (m *SrpAllInfo) GetRateLimitInfo() *SrpRateLimitInfo {
	if m != nil {
		return m.RateLimitInfo
	}
	return nil
}

type IfstatsSrpPerSideDataRateSt struct {
	BitRateSent          uint32   `protobuf:"varint,1,opt,name=bit_rate_sent,json=bitRateSent,proto3" json:"bit_rate_sent,omitempty"`
	PacketRateSent       uint32   `protobuf:"varint,2,opt,name=packet_rate_sent,json=packetRateSent,proto3" json:"packet_rate_sent,omitempty"`
	BitRateReceived      uint32   `protobuf:"varint,3,opt,name=bit_rate_received,json=bitRateReceived,proto3" json:"bit_rate_received,omitempty"`
	PacketRateReceived   uint32   `protobuf:"varint,4,opt,name=packet_rate_received,json=packetRateReceived,proto3" json:"packet_rate_received,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IfstatsSrpPerSideDataRateSt) Reset()         { *m = IfstatsSrpPerSideDataRateSt{} }
func (m *IfstatsSrpPerSideDataRateSt) String() string { return proto.CompactTextString(m) }
func (*IfstatsSrpPerSideDataRateSt) ProtoMessage()    {}
func (*IfstatsSrpPerSideDataRateSt) Descriptor() ([]byte, []int) {
	return fileDescriptor_9abf17a6a17540ff, []int{31}
}

func (m *IfstatsSrpPerSideDataRateSt) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IfstatsSrpPerSideDataRateSt.Unmarshal(m, b)
}
func (m *IfstatsSrpPerSideDataRateSt) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IfstatsSrpPerSideDataRateSt.Marshal(b, m, deterministic)
}
func (m *IfstatsSrpPerSideDataRateSt) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IfstatsSrpPerSideDataRateSt.Merge(m, src)
}
func (m *IfstatsSrpPerSideDataRateSt) XXX_Size() int {
	return xxx_messageInfo_IfstatsSrpPerSideDataRateSt.Size(m)
}
func (m *IfstatsSrpPerSideDataRateSt) XXX_DiscardUnknown() {
	xxx_messageInfo_IfstatsSrpPerSideDataRateSt.DiscardUnknown(m)
}

var xxx_messageInfo_IfstatsSrpPerSideDataRateSt proto.InternalMessageInfo

func (m *IfstatsSrpPerSideDataRateSt) GetBitRateSent() uint32 {
	if m != nil {
		return m.BitRateSent
	}
	return 0
}

func (m *IfstatsSrpPerSideDataRateSt) GetPacketRateSent() uint32 {
	if m != nil {
		return m.PacketRateSent
	}
	return 0
}

func (m *IfstatsSrpPerSideDataRateSt) GetBitRateReceived() uint32 {
	if m != nil {
		return m.BitRateReceived
	}
	return 0
}

func (m *IfstatsSrpPerSideDataRateSt) GetPacketRateReceived() uint32 {
	if m != nil {
		return m.PacketRateReceived
	}
	return 0
}

type IfstatsSrpPerSideErrorsSt struct {
	ErrorPacketsReceived            uint32   `protobuf:"varint,1,opt,name=error_packets_received,json=errorPacketsReceived,proto3" json:"error_packets_received,omitempty"`
	CrcErrors                       uint32   `protobuf:"varint,2,opt,name=crc_errors,json=crcErrors,proto3" json:"crc_errors,omitempty"`
	InputInsufficientResourceEvents uint32   `protobuf:"varint,3,opt,name=input_insufficient_resource_events,json=inputInsufficientResourceEvents,proto3" json:"input_insufficient_resource_events,omitempty"`
	MacAbortsReceived               uint32   `protobuf:"varint,4,opt,name=mac_aborts_received,json=macAbortsReceived,proto3" json:"mac_aborts_received,omitempty"`
	MacRuntPacketsReceived          uint32   `protobuf:"varint,5,opt,name=mac_runt_packets_received,json=macRuntPacketsReceived,proto3" json:"mac_runt_packets_received,omitempty"`
	MacGiantPacketsReceived         uint32   `protobuf:"varint,6,opt,name=mac_giant_packets_received,json=macGiantPacketsReceived,proto3" json:"mac_giant_packets_received,omitempty"`
	FramerRuntPacketsReceived       uint32   `protobuf:"varint,7,opt,name=framer_runt_packets_received,json=framerRuntPacketsReceived,proto3" json:"framer_runt_packets_received,omitempty"`
	FramerGiantPacketsReceived      uint32   `protobuf:"varint,8,opt,name=framer_giant_packets_received,json=framerGiantPacketsReceived,proto3" json:"framer_giant_packets_received,omitempty"`
	FramerAbortsReceived            uint32   `protobuf:"varint,9,opt,name=framer_aborts_received,json=framerAbortsReceived,proto3" json:"framer_aborts_received,omitempty"`
	XXX_NoUnkeyedLiteral            struct{} `json:"-"`
	XXX_unrecognized                []byte   `json:"-"`
	XXX_sizecache                   int32    `json:"-"`
}

func (m *IfstatsSrpPerSideErrorsSt) Reset()         { *m = IfstatsSrpPerSideErrorsSt{} }
func (m *IfstatsSrpPerSideErrorsSt) String() string { return proto.CompactTextString(m) }
func (*IfstatsSrpPerSideErrorsSt) ProtoMessage()    {}
func (*IfstatsSrpPerSideErrorsSt) Descriptor() ([]byte, []int) {
	return fileDescriptor_9abf17a6a17540ff, []int{32}
}

func (m *IfstatsSrpPerSideErrorsSt) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IfstatsSrpPerSideErrorsSt.Unmarshal(m, b)
}
func (m *IfstatsSrpPerSideErrorsSt) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IfstatsSrpPerSideErrorsSt.Marshal(b, m, deterministic)
}
func (m *IfstatsSrpPerSideErrorsSt) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IfstatsSrpPerSideErrorsSt.Merge(m, src)
}
func (m *IfstatsSrpPerSideErrorsSt) XXX_Size() int {
	return xxx_messageInfo_IfstatsSrpPerSideErrorsSt.Size(m)
}
func (m *IfstatsSrpPerSideErrorsSt) XXX_DiscardUnknown() {
	xxx_messageInfo_IfstatsSrpPerSideErrorsSt.DiscardUnknown(m)
}

var xxx_messageInfo_IfstatsSrpPerSideErrorsSt proto.InternalMessageInfo

func (m *IfstatsSrpPerSideErrorsSt) GetErrorPacketsReceived() uint32 {
	if m != nil {
		return m.ErrorPacketsReceived
	}
	return 0
}

func (m *IfstatsSrpPerSideErrorsSt) GetCrcErrors() uint32 {
	if m != nil {
		return m.CrcErrors
	}
	return 0
}

func (m *IfstatsSrpPerSideErrorsSt) GetInputInsufficientResourceEvents() uint32 {
	if m != nil {
		return m.InputInsufficientResourceEvents
	}
	return 0
}

func (m *IfstatsSrpPerSideErrorsSt) GetMacAbortsReceived() uint32 {
	if m != nil {
		return m.MacAbortsReceived
	}
	return 0
}

func (m *IfstatsSrpPerSideErrorsSt) GetMacRuntPacketsReceived() uint32 {
	if m != nil {
		return m.MacRuntPacketsReceived
	}
	return 0
}

func (m *IfstatsSrpPerSideErrorsSt) GetMacGiantPacketsReceived() uint32 {
	if m != nil {
		return m.MacGiantPacketsReceived
	}
	return 0
}

func (m *IfstatsSrpPerSideErrorsSt) GetFramerRuntPacketsReceived() uint32 {
	if m != nil {
		return m.FramerRuntPacketsReceived
	}
	return 0
}

func (m *IfstatsSrpPerSideErrorsSt) GetFramerGiantPacketsReceived() uint32 {
	if m != nil {
		return m.FramerGiantPacketsReceived
	}
	return 0
}

func (m *IfstatsSrpPerSideErrorsSt) GetFramerAbortsReceived() uint32 {
	if m != nil {
		return m.FramerAbortsReceived
	}
	return 0
}

type IfstatsbagSrp struct {
	DataRateInterval     uint32                       `protobuf:"varint,1,opt,name=data_rate_interval,json=dataRateInterval,proto3" json:"data_rate_interval,omitempty"`
	SideADataRate        *IfstatsSrpPerSideDataRateSt `protobuf:"bytes,2,opt,name=side_a_data_rate,json=sideADataRate,proto3" json:"side_a_data_rate,omitempty"`
	SideBDataRate        *IfstatsSrpPerSideDataRateSt `protobuf:"bytes,3,opt,name=side_b_data_rate,json=sideBDataRate,proto3" json:"side_b_data_rate,omitempty"`
	SideAErrors          *IfstatsSrpPerSideErrorsSt   `protobuf:"bytes,4,opt,name=side_a_errors,json=sideAErrors,proto3" json:"side_a_errors,omitempty"`
	SideBErrors          *IfstatsSrpPerSideErrorsSt   `protobuf:"bytes,5,opt,name=side_b_errors,json=sideBErrors,proto3" json:"side_b_errors,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                     `json:"-"`
	XXX_unrecognized     []byte                       `json:"-"`
	XXX_sizecache        int32                        `json:"-"`
}

func (m *IfstatsbagSrp) Reset()         { *m = IfstatsbagSrp{} }
func (m *IfstatsbagSrp) String() string { return proto.CompactTextString(m) }
func (*IfstatsbagSrp) ProtoMessage()    {}
func (*IfstatsbagSrp) Descriptor() ([]byte, []int) {
	return fileDescriptor_9abf17a6a17540ff, []int{33}
}

func (m *IfstatsbagSrp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IfstatsbagSrp.Unmarshal(m, b)
}
func (m *IfstatsbagSrp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IfstatsbagSrp.Marshal(b, m, deterministic)
}
func (m *IfstatsbagSrp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IfstatsbagSrp.Merge(m, src)
}
func (m *IfstatsbagSrp) XXX_Size() int {
	return xxx_messageInfo_IfstatsbagSrp.Size(m)
}
func (m *IfstatsbagSrp) XXX_DiscardUnknown() {
	xxx_messageInfo_IfstatsbagSrp.DiscardUnknown(m)
}

var xxx_messageInfo_IfstatsbagSrp proto.InternalMessageInfo

func (m *IfstatsbagSrp) GetDataRateInterval() uint32 {
	if m != nil {
		return m.DataRateInterval
	}
	return 0
}

func (m *IfstatsbagSrp) GetSideADataRate() *IfstatsSrpPerSideDataRateSt {
	if m != nil {
		return m.SideADataRate
	}
	return nil
}

func (m *IfstatsbagSrp) GetSideBDataRate() *IfstatsSrpPerSideDataRateSt {
	if m != nil {
		return m.SideBDataRate
	}
	return nil
}

func (m *IfstatsbagSrp) GetSideAErrors() *IfstatsSrpPerSideErrorsSt {
	if m != nil {
		return m.SideAErrors
	}
	return nil
}

func (m *IfstatsbagSrp) GetSideBErrors() *IfstatsSrpPerSideErrorsSt {
	if m != nil {
		return m.SideBErrors
	}
	return nil
}

type ImCmdSrpInfo struct {
	SrpInformation       *SrpAllInfo    `protobuf:"bytes,1,opt,name=srp_information,json=srpInformation,proto3" json:"srp_information,omitempty"`
	SrpStatistics        *IfstatsbagSrp `protobuf:"bytes,2,opt,name=srp_statistics,json=srpStatistics,proto3" json:"srp_statistics,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *ImCmdSrpInfo) Reset()         { *m = ImCmdSrpInfo{} }
func (m *ImCmdSrpInfo) String() string { return proto.CompactTextString(m) }
func (*ImCmdSrpInfo) ProtoMessage()    {}
func (*ImCmdSrpInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_9abf17a6a17540ff, []int{34}
}

func (m *ImCmdSrpInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ImCmdSrpInfo.Unmarshal(m, b)
}
func (m *ImCmdSrpInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ImCmdSrpInfo.Marshal(b, m, deterministic)
}
func (m *ImCmdSrpInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ImCmdSrpInfo.Merge(m, src)
}
func (m *ImCmdSrpInfo) XXX_Size() int {
	return xxx_messageInfo_ImCmdSrpInfo.Size(m)
}
func (m *ImCmdSrpInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_ImCmdSrpInfo.DiscardUnknown(m)
}

var xxx_messageInfo_ImCmdSrpInfo proto.InternalMessageInfo

func (m *ImCmdSrpInfo) GetSrpInformation() *SrpAllInfo {
	if m != nil {
		return m.SrpInformation
	}
	return nil
}

func (m *ImCmdSrpInfo) GetSrpStatistics() *IfstatsbagSrp {
	if m != nil {
		return m.SrpStatistics
	}
	return nil
}

type ImCmdTunnelInfo struct {
	SourceName             string   `protobuf:"bytes,1,opt,name=source_name,json=sourceName,proto3" json:"source_name,omitempty"`
	SourceIpv4Address      string   `protobuf:"bytes,2,opt,name=source_ipv4_address,json=sourceIpv4Address,proto3" json:"source_ipv4_address,omitempty"`
	DestinationIpv4Address string   `protobuf:"bytes,3,opt,name=destination_ipv4_address,json=destinationIpv4Address,proto3" json:"destination_ipv4_address,omitempty"`
	TunnelType             string   `protobuf:"bytes,4,opt,name=tunnel_type,json=tunnelType,proto3" json:"tunnel_type,omitempty"`
	Key                    uint32   `protobuf:"varint,5,opt,name=key,proto3" json:"key,omitempty"`
	Ttl                    uint32   `protobuf:"varint,6,opt,name=ttl,proto3" json:"ttl,omitempty"`
	XXX_NoUnkeyedLiteral   struct{} `json:"-"`
	XXX_unrecognized       []byte   `json:"-"`
	XXX_sizecache          int32    `json:"-"`
}

func (m *ImCmdTunnelInfo) Reset()         { *m = ImCmdTunnelInfo{} }
func (m *ImCmdTunnelInfo) String() string { return proto.CompactTextString(m) }
func (*ImCmdTunnelInfo) ProtoMessage()    {}
func (*ImCmdTunnelInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_9abf17a6a17540ff, []int{35}
}

func (m *ImCmdTunnelInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ImCmdTunnelInfo.Unmarshal(m, b)
}
func (m *ImCmdTunnelInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ImCmdTunnelInfo.Marshal(b, m, deterministic)
}
func (m *ImCmdTunnelInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ImCmdTunnelInfo.Merge(m, src)
}
func (m *ImCmdTunnelInfo) XXX_Size() int {
	return xxx_messageInfo_ImCmdTunnelInfo.Size(m)
}
func (m *ImCmdTunnelInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_ImCmdTunnelInfo.DiscardUnknown(m)
}

var xxx_messageInfo_ImCmdTunnelInfo proto.InternalMessageInfo

func (m *ImCmdTunnelInfo) GetSourceName() string {
	if m != nil {
		return m.SourceName
	}
	return ""
}

func (m *ImCmdTunnelInfo) GetSourceIpv4Address() string {
	if m != nil {
		return m.SourceIpv4Address
	}
	return ""
}

func (m *ImCmdTunnelInfo) GetDestinationIpv4Address() string {
	if m != nil {
		return m.DestinationIpv4Address
	}
	return ""
}

func (m *ImCmdTunnelInfo) GetTunnelType() string {
	if m != nil {
		return m.TunnelType
	}
	return ""
}

func (m *ImCmdTunnelInfo) GetKey() uint32 {
	if m != nil {
		return m.Key
	}
	return 0
}

func (m *ImCmdTunnelInfo) GetTtl() uint32 {
	if m != nil {
		return m.Ttl
	}
	return 0
}

type BmLacpCounters struct {
	LacpdUsReceived             uint32   `protobuf:"varint,1,opt,name=lacpd_us_received,json=lacpdUsReceived,proto3" json:"lacpd_us_received,omitempty"`
	LacpdUsTransmitted          uint32   `protobuf:"varint,2,opt,name=lacpd_us_transmitted,json=lacpdUsTransmitted,proto3" json:"lacpd_us_transmitted,omitempty"`
	MarkerPacketsReceived       uint32   `protobuf:"varint,3,opt,name=marker_packets_received,json=markerPacketsReceived,proto3" json:"marker_packets_received,omitempty"`
	MarkerResponsesTransmitted  uint32   `protobuf:"varint,4,opt,name=marker_responses_transmitted,json=markerResponsesTransmitted,proto3" json:"marker_responses_transmitted,omitempty"`
	IllegalPacketsReceived      uint32   `protobuf:"varint,5,opt,name=illegal_packets_received,json=illegalPacketsReceived,proto3" json:"illegal_packets_received,omitempty"`
	ExcessLacpdUsReceived       uint32   `protobuf:"varint,6,opt,name=excess_lacpd_us_received,json=excessLacpdUsReceived,proto3" json:"excess_lacpd_us_received,omitempty"`
	ExcessMarkerPacketsReceived uint32   `protobuf:"varint,7,opt,name=excess_marker_packets_received,json=excessMarkerPacketsReceived,proto3" json:"excess_marker_packets_received,omitempty"`
	Defaulted                   uint32   `protobuf:"varint,8,opt,name=defaulted,proto3" json:"defaulted,omitempty"`
	Expired                     uint32   `protobuf:"varint,9,opt,name=expired,proto3" json:"expired,omitempty"`
	LastClearedSec              uint32   `protobuf:"varint,10,opt,name=last_cleared_sec,json=lastClearedSec,proto3" json:"last_cleared_sec,omitempty"`
	LastClearedNsec             uint32   `protobuf:"varint,11,opt,name=last_cleared_nsec,json=lastClearedNsec,proto3" json:"last_cleared_nsec,omitempty"`
	XXX_NoUnkeyedLiteral        struct{} `json:"-"`
	XXX_unrecognized            []byte   `json:"-"`
	XXX_sizecache               int32    `json:"-"`
}

func (m *BmLacpCounters) Reset()         { *m = BmLacpCounters{} }
func (m *BmLacpCounters) String() string { return proto.CompactTextString(m) }
func (*BmLacpCounters) ProtoMessage()    {}
func (*BmLacpCounters) Descriptor() ([]byte, []int) {
	return fileDescriptor_9abf17a6a17540ff, []int{36}
}

func (m *BmLacpCounters) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BmLacpCounters.Unmarshal(m, b)
}
func (m *BmLacpCounters) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BmLacpCounters.Marshal(b, m, deterministic)
}
func (m *BmLacpCounters) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BmLacpCounters.Merge(m, src)
}
func (m *BmLacpCounters) XXX_Size() int {
	return xxx_messageInfo_BmLacpCounters.Size(m)
}
func (m *BmLacpCounters) XXX_DiscardUnknown() {
	xxx_messageInfo_BmLacpCounters.DiscardUnknown(m)
}

var xxx_messageInfo_BmLacpCounters proto.InternalMessageInfo

func (m *BmLacpCounters) GetLacpdUsReceived() uint32 {
	if m != nil {
		return m.LacpdUsReceived
	}
	return 0
}

func (m *BmLacpCounters) GetLacpdUsTransmitted() uint32 {
	if m != nil {
		return m.LacpdUsTransmitted
	}
	return 0
}

func (m *BmLacpCounters) GetMarkerPacketsReceived() uint32 {
	if m != nil {
		return m.MarkerPacketsReceived
	}
	return 0
}

func (m *BmLacpCounters) GetMarkerResponsesTransmitted() uint32 {
	if m != nil {
		return m.MarkerResponsesTransmitted
	}
	return 0
}

func (m *BmLacpCounters) GetIllegalPacketsReceived() uint32 {
	if m != nil {
		return m.IllegalPacketsReceived
	}
	return 0
}

func (m *BmLacpCounters) GetExcessLacpdUsReceived() uint32 {
	if m != nil {
		return m.ExcessLacpdUsReceived
	}
	return 0
}

func (m *BmLacpCounters) GetExcessMarkerPacketsReceived() uint32 {
	if m != nil {
		return m.ExcessMarkerPacketsReceived
	}
	return 0
}

func (m *BmLacpCounters) GetDefaulted() uint32 {
	if m != nil {
		return m.Defaulted
	}
	return 0
}

func (m *BmLacpCounters) GetExpired() uint32 {
	if m != nil {
		return m.Expired
	}
	return 0
}

func (m *BmLacpCounters) GetLastClearedSec() uint32 {
	if m != nil {
		return m.LastClearedSec
	}
	return 0
}

func (m *BmLacpCounters) GetLastClearedNsec() uint32 {
	if m != nil {
		return m.LastClearedNsec
	}
	return 0
}

type BmLacpLinkData struct {
	InterfaceHandle         string   `protobuf:"bytes,1,opt,name=interface_handle,json=interfaceHandle,proto3" json:"interface_handle,omitempty"`
	ActorSystemPriority     uint32   `protobuf:"varint,2,opt,name=actor_system_priority,json=actorSystemPriority,proto3" json:"actor_system_priority,omitempty"`
	ActorSystemMacAddress   string   `protobuf:"bytes,3,opt,name=actor_system_mac_address,json=actorSystemMacAddress,proto3" json:"actor_system_mac_address,omitempty"`
	ActorOperationalKey     uint32   `protobuf:"varint,4,opt,name=actor_operational_key,json=actorOperationalKey,proto3" json:"actor_operational_key,omitempty"`
	PartnerSystemPriority   uint32   `protobuf:"varint,5,opt,name=partner_system_priority,json=partnerSystemPriority,proto3" json:"partner_system_priority,omitempty"`
	PartnerSystemMacAddress string   `protobuf:"bytes,6,opt,name=partner_system_mac_address,json=partnerSystemMacAddress,proto3" json:"partner_system_mac_address,omitempty"`
	PartnerOperationalKey   uint32   `protobuf:"varint,7,opt,name=partner_operational_key,json=partnerOperationalKey,proto3" json:"partner_operational_key,omitempty"`
	SelectedAggregatorId    uint32   `protobuf:"varint,8,opt,name=selected_aggregator_id,json=selectedAggregatorId,proto3" json:"selected_aggregator_id,omitempty"`
	AttachedAggregatorId    uint32   `protobuf:"varint,9,opt,name=attached_aggregator_id,json=attachedAggregatorId,proto3" json:"attached_aggregator_id,omitempty"`
	ActorPortId             uint32   `protobuf:"varint,10,opt,name=actor_port_id,json=actorPortId,proto3" json:"actor_port_id,omitempty"`
	ActorPortPriority       uint32   `protobuf:"varint,11,opt,name=actor_port_priority,json=actorPortPriority,proto3" json:"actor_port_priority,omitempty"`
	PartnerPortId           uint32   `protobuf:"varint,12,opt,name=partner_port_id,json=partnerPortId,proto3" json:"partner_port_id,omitempty"`
	PartnerPortPriority     uint32   `protobuf:"varint,13,opt,name=partner_port_priority,json=partnerPortPriority,proto3" json:"partner_port_priority,omitempty"`
	ActorPortState          uint32   `protobuf:"varint,14,opt,name=actor_port_state,json=actorPortState,proto3" json:"actor_port_state,omitempty"`
	PartnerPortState        uint32   `protobuf:"varint,15,opt,name=partner_port_state,json=partnerPortState,proto3" json:"partner_port_state,omitempty"`
	XXX_NoUnkeyedLiteral    struct{} `json:"-"`
	XXX_unrecognized        []byte   `json:"-"`
	XXX_sizecache           int32    `json:"-"`
}

func (m *BmLacpLinkData) Reset()         { *m = BmLacpLinkData{} }
func (m *BmLacpLinkData) String() string { return proto.CompactTextString(m) }
func (*BmLacpLinkData) ProtoMessage()    {}
func (*BmLacpLinkData) Descriptor() ([]byte, []int) {
	return fileDescriptor_9abf17a6a17540ff, []int{37}
}

func (m *BmLacpLinkData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BmLacpLinkData.Unmarshal(m, b)
}
func (m *BmLacpLinkData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BmLacpLinkData.Marshal(b, m, deterministic)
}
func (m *BmLacpLinkData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BmLacpLinkData.Merge(m, src)
}
func (m *BmLacpLinkData) XXX_Size() int {
	return xxx_messageInfo_BmLacpLinkData.Size(m)
}
func (m *BmLacpLinkData) XXX_DiscardUnknown() {
	xxx_messageInfo_BmLacpLinkData.DiscardUnknown(m)
}

var xxx_messageInfo_BmLacpLinkData proto.InternalMessageInfo

func (m *BmLacpLinkData) GetInterfaceHandle() string {
	if m != nil {
		return m.InterfaceHandle
	}
	return ""
}

func (m *BmLacpLinkData) GetActorSystemPriority() uint32 {
	if m != nil {
		return m.ActorSystemPriority
	}
	return 0
}

func (m *BmLacpLinkData) GetActorSystemMacAddress() string {
	if m != nil {
		return m.ActorSystemMacAddress
	}
	return ""
}

func (m *BmLacpLinkData) GetActorOperationalKey() uint32 {
	if m != nil {
		return m.ActorOperationalKey
	}
	return 0
}

func (m *BmLacpLinkData) GetPartnerSystemPriority() uint32 {
	if m != nil {
		return m.PartnerSystemPriority
	}
	return 0
}

func (m *BmLacpLinkData) GetPartnerSystemMacAddress() string {
	if m != nil {
		return m.PartnerSystemMacAddress
	}
	return ""
}

func (m *BmLacpLinkData) GetPartnerOperationalKey() uint32 {
	if m != nil {
		return m.PartnerOperationalKey
	}
	return 0
}

func (m *BmLacpLinkData) GetSelectedAggregatorId() uint32 {
	if m != nil {
		return m.SelectedAggregatorId
	}
	return 0
}

func (m *BmLacpLinkData) GetAttachedAggregatorId() uint32 {
	if m != nil {
		return m.AttachedAggregatorId
	}
	return 0
}

func (m *BmLacpLinkData) GetActorPortId() uint32 {
	if m != nil {
		return m.ActorPortId
	}
	return 0
}

func (m *BmLacpLinkData) GetActorPortPriority() uint32 {
	if m != nil {
		return m.ActorPortPriority
	}
	return 0
}

func (m *BmLacpLinkData) GetPartnerPortId() uint32 {
	if m != nil {
		return m.PartnerPortId
	}
	return 0
}

func (m *BmLacpLinkData) GetPartnerPortPriority() uint32 {
	if m != nil {
		return m.PartnerPortPriority
	}
	return 0
}

func (m *BmLacpLinkData) GetActorPortState() uint32 {
	if m != nil {
		return m.ActorPortState
	}
	return 0
}

func (m *BmLacpLinkData) GetPartnerPortState() uint32 {
	if m != nil {
		return m.PartnerPortState
	}
	return 0
}

type BmMbrStateReasonDataType struct {
	ReasonType           string   `protobuf:"bytes,1,opt,name=reason_type,json=reasonType,proto3" json:"reason_type,omitempty"`
	Severity             string   `protobuf:"bytes,2,opt,name=severity,proto3" json:"severity,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BmMbrStateReasonDataType) Reset()         { *m = BmMbrStateReasonDataType{} }
func (m *BmMbrStateReasonDataType) String() string { return proto.CompactTextString(m) }
func (*BmMbrStateReasonDataType) ProtoMessage()    {}
func (*BmMbrStateReasonDataType) Descriptor() ([]byte, []int) {
	return fileDescriptor_9abf17a6a17540ff, []int{38}
}

func (m *BmMbrStateReasonDataType) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BmMbrStateReasonDataType.Unmarshal(m, b)
}
func (m *BmMbrStateReasonDataType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BmMbrStateReasonDataType.Marshal(b, m, deterministic)
}
func (m *BmMbrStateReasonDataType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BmMbrStateReasonDataType.Merge(m, src)
}
func (m *BmMbrStateReasonDataType) XXX_Size() int {
	return xxx_messageInfo_BmMbrStateReasonDataType.Size(m)
}
func (m *BmMbrStateReasonDataType) XXX_DiscardUnknown() {
	xxx_messageInfo_BmMbrStateReasonDataType.DiscardUnknown(m)
}

var xxx_messageInfo_BmMbrStateReasonDataType proto.InternalMessageInfo

func (m *BmMbrStateReasonDataType) GetReasonType() string {
	if m != nil {
		return m.ReasonType
	}
	return ""
}

func (m *BmMbrStateReasonDataType) GetSeverity() string {
	if m != nil {
		return m.Severity
	}
	return ""
}

type BmMuxData struct {
	MuxState                 string                    `protobuf:"bytes,1,opt,name=mux_state,json=muxState,proto3" json:"mux_state,omitempty"`
	Error                    uint32                    `protobuf:"varint,2,opt,name=error,proto3" json:"error,omitempty"`
	MemberMuxStateReason     string                    `protobuf:"bytes,3,opt,name=member_mux_state_reason,json=memberMuxStateReason,proto3" json:"member_mux_state_reason,omitempty"`
	MemberMuxStateReasonData *BmMbrStateReasonDataType `protobuf:"bytes,4,opt,name=member_mux_state_reason_data,json=memberMuxStateReasonData,proto3" json:"member_mux_state_reason_data,omitempty"`
	MemberState              string                    `protobuf:"bytes,5,opt,name=member_state,json=memberState,proto3" json:"member_state,omitempty"`
	MuxStateReason           string                    `protobuf:"bytes,6,opt,name=mux_state_reason,json=muxStateReason,proto3" json:"mux_state_reason,omitempty"`
	XXX_NoUnkeyedLiteral     struct{}                  `json:"-"`
	XXX_unrecognized         []byte                    `json:"-"`
	XXX_sizecache            int32                     `json:"-"`
}

func (m *BmMuxData) Reset()         { *m = BmMuxData{} }
func (m *BmMuxData) String() string { return proto.CompactTextString(m) }
func (*BmMuxData) ProtoMessage()    {}
func (*BmMuxData) Descriptor() ([]byte, []int) {
	return fileDescriptor_9abf17a6a17540ff, []int{39}
}

func (m *BmMuxData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BmMuxData.Unmarshal(m, b)
}
func (m *BmMuxData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BmMuxData.Marshal(b, m, deterministic)
}
func (m *BmMuxData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BmMuxData.Merge(m, src)
}
func (m *BmMuxData) XXX_Size() int {
	return xxx_messageInfo_BmMuxData.Size(m)
}
func (m *BmMuxData) XXX_DiscardUnknown() {
	xxx_messageInfo_BmMuxData.DiscardUnknown(m)
}

var xxx_messageInfo_BmMuxData proto.InternalMessageInfo

func (m *BmMuxData) GetMuxState() string {
	if m != nil {
		return m.MuxState
	}
	return ""
}

func (m *BmMuxData) GetError() uint32 {
	if m != nil {
		return m.Error
	}
	return 0
}

func (m *BmMuxData) GetMemberMuxStateReason() string {
	if m != nil {
		return m.MemberMuxStateReason
	}
	return ""
}

func (m *BmMuxData) GetMemberMuxStateReasonData() *BmMbrStateReasonDataType {
	if m != nil {
		return m.MemberMuxStateReasonData
	}
	return nil
}

func (m *BmMuxData) GetMemberState() string {
	if m != nil {
		return m.MemberState
	}
	return ""
}

func (m *BmMuxData) GetMuxStateReason() string {
	if m != nil {
		return m.MuxStateReason
	}
	return ""
}

type BmMacAddrSt struct {
	Address              string   `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BmMacAddrSt) Reset()         { *m = BmMacAddrSt{} }
func (m *BmMacAddrSt) String() string { return proto.CompactTextString(m) }
func (*BmMacAddrSt) ProtoMessage()    {}
func (*BmMacAddrSt) Descriptor() ([]byte, []int) {
	return fileDescriptor_9abf17a6a17540ff, []int{40}
}

func (m *BmMacAddrSt) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BmMacAddrSt.Unmarshal(m, b)
}
func (m *BmMacAddrSt) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BmMacAddrSt.Marshal(b, m, deterministic)
}
func (m *BmMacAddrSt) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BmMacAddrSt.Merge(m, src)
}
func (m *BmMacAddrSt) XXX_Size() int {
	return xxx_messageInfo_BmMacAddrSt.Size(m)
}
func (m *BmMacAddrSt) XXX_DiscardUnknown() {
	xxx_messageInfo_BmMacAddrSt.DiscardUnknown(m)
}

var xxx_messageInfo_BmMacAddrSt proto.InternalMessageInfo

func (m *BmMacAddrSt) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

type BmMemberData struct {
	InterfaceName        string          `protobuf:"bytes,1,opt,name=interface_name,json=interfaceName,proto3" json:"interface_name,omitempty"`
	PortPriority         uint32          `protobuf:"varint,2,opt,name=port_priority,json=portPriority,proto3" json:"port_priority,omitempty"`
	PortNumber           uint32          `protobuf:"varint,3,opt,name=port_number,json=portNumber,proto3" json:"port_number,omitempty"`
	UnderlyingLinkId     uint32          `protobuf:"varint,4,opt,name=underlying_link_id,json=underlyingLinkId,proto3" json:"underlying_link_id,omitempty"`
	LinkOrderNumber      uint32          `protobuf:"varint,5,opt,name=link_order_number,json=linkOrderNumber,proto3" json:"link_order_number,omitempty"`
	IccpNode             uint32          `protobuf:"varint,6,opt,name=iccp_node,json=iccpNode,proto3" json:"iccp_node,omitempty"`
	Bandwidth            uint32          `protobuf:"varint,7,opt,name=bandwidth,proto3" json:"bandwidth,omitempty"`
	LacpEnabled          string          `protobuf:"bytes,8,opt,name=lacp_enabled,json=lacpEnabled,proto3" json:"lacp_enabled,omitempty"`
	Counters             *BmLacpCounters `protobuf:"bytes,9,opt,name=counters,proto3" json:"counters,omitempty"`
	LinkData             *BmLacpLinkData `protobuf:"bytes,10,opt,name=link_data,json=linkData,proto3" json:"link_data,omitempty"`
	MemberMuxData        *BmMuxData      `protobuf:"bytes,11,opt,name=member_mux_data,json=memberMuxData,proto3" json:"member_mux_data,omitempty"`
	MemberType           string          `protobuf:"bytes,12,opt,name=member_type,json=memberType,proto3" json:"member_type,omitempty"`
	MemberName           string          `protobuf:"bytes,13,opt,name=member_name,json=memberName,proto3" json:"member_name,omitempty"`
	MacAddress           *BmMacAddrSt    `protobuf:"bytes,14,opt,name=mac_address,json=macAddress,proto3" json:"mac_address,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *BmMemberData) Reset()         { *m = BmMemberData{} }
func (m *BmMemberData) String() string { return proto.CompactTextString(m) }
func (*BmMemberData) ProtoMessage()    {}
func (*BmMemberData) Descriptor() ([]byte, []int) {
	return fileDescriptor_9abf17a6a17540ff, []int{41}
}

func (m *BmMemberData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BmMemberData.Unmarshal(m, b)
}
func (m *BmMemberData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BmMemberData.Marshal(b, m, deterministic)
}
func (m *BmMemberData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BmMemberData.Merge(m, src)
}
func (m *BmMemberData) XXX_Size() int {
	return xxx_messageInfo_BmMemberData.Size(m)
}
func (m *BmMemberData) XXX_DiscardUnknown() {
	xxx_messageInfo_BmMemberData.DiscardUnknown(m)
}

var xxx_messageInfo_BmMemberData proto.InternalMessageInfo

func (m *BmMemberData) GetInterfaceName() string {
	if m != nil {
		return m.InterfaceName
	}
	return ""
}

func (m *BmMemberData) GetPortPriority() uint32 {
	if m != nil {
		return m.PortPriority
	}
	return 0
}

func (m *BmMemberData) GetPortNumber() uint32 {
	if m != nil {
		return m.PortNumber
	}
	return 0
}

func (m *BmMemberData) GetUnderlyingLinkId() uint32 {
	if m != nil {
		return m.UnderlyingLinkId
	}
	return 0
}

func (m *BmMemberData) GetLinkOrderNumber() uint32 {
	if m != nil {
		return m.LinkOrderNumber
	}
	return 0
}

func (m *BmMemberData) GetIccpNode() uint32 {
	if m != nil {
		return m.IccpNode
	}
	return 0
}

func (m *BmMemberData) GetBandwidth() uint32 {
	if m != nil {
		return m.Bandwidth
	}
	return 0
}

func (m *BmMemberData) GetLacpEnabled() string {
	if m != nil {
		return m.LacpEnabled
	}
	return ""
}

func (m *BmMemberData) GetCounters() *BmLacpCounters {
	if m != nil {
		return m.Counters
	}
	return nil
}

func (m *BmMemberData) GetLinkData() *BmLacpLinkData {
	if m != nil {
		return m.LinkData
	}
	return nil
}

func (m *BmMemberData) GetMemberMuxData() *BmMuxData {
	if m != nil {
		return m.MemberMuxData
	}
	return nil
}

func (m *BmMemberData) GetMemberType() string {
	if m != nil {
		return m.MemberType
	}
	return ""
}

func (m *BmMemberData) GetMemberName() string {
	if m != nil {
		return m.MemberName
	}
	return ""
}

func (m *BmMemberData) GetMacAddress() *BmMacAddrSt {
	if m != nil {
		return m.MacAddress
	}
	return nil
}

type ImCmdBundleInfo struct {
	Member               []*BmMemberData `protobuf:"bytes,1,rep,name=member,proto3" json:"member,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *ImCmdBundleInfo) Reset()         { *m = ImCmdBundleInfo{} }
func (m *ImCmdBundleInfo) String() string { return proto.CompactTextString(m) }
func (*ImCmdBundleInfo) ProtoMessage()    {}
func (*ImCmdBundleInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_9abf17a6a17540ff, []int{42}
}

func (m *ImCmdBundleInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ImCmdBundleInfo.Unmarshal(m, b)
}
func (m *ImCmdBundleInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ImCmdBundleInfo.Marshal(b, m, deterministic)
}
func (m *ImCmdBundleInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ImCmdBundleInfo.Merge(m, src)
}
func (m *ImCmdBundleInfo) XXX_Size() int {
	return xxx_messageInfo_ImCmdBundleInfo.Size(m)
}
func (m *ImCmdBundleInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_ImCmdBundleInfo.DiscardUnknown(m)
}

var xxx_messageInfo_ImCmdBundleInfo proto.InternalMessageInfo

func (m *ImCmdBundleInfo) GetMember() []*BmMemberData {
	if m != nil {
		return m.Member
	}
	return nil
}

type SerialInterface struct {
	Timeslots            string   `protobuf:"bytes,1,opt,name=timeslots,proto3" json:"timeslots,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SerialInterface) Reset()         { *m = SerialInterface{} }
func (m *SerialInterface) String() string { return proto.CompactTextString(m) }
func (*SerialInterface) ProtoMessage()    {}
func (*SerialInterface) Descriptor() ([]byte, []int) {
	return fileDescriptor_9abf17a6a17540ff, []int{43}
}

func (m *SerialInterface) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SerialInterface.Unmarshal(m, b)
}
func (m *SerialInterface) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SerialInterface.Marshal(b, m, deterministic)
}
func (m *SerialInterface) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SerialInterface.Merge(m, src)
}
func (m *SerialInterface) XXX_Size() int {
	return xxx_messageInfo_SerialInterface.Size(m)
}
func (m *SerialInterface) XXX_DiscardUnknown() {
	xxx_messageInfo_SerialInterface.DiscardUnknown(m)
}

var xxx_messageInfo_SerialInterface proto.InternalMessageInfo

func (m *SerialInterface) GetTimeslots() string {
	if m != nil {
		return m.Timeslots
	}
	return ""
}

type ImSonetPosInfoInterface struct {
	ApsState             string   `protobuf:"bytes,1,opt,name=aps_state,json=apsState,proto3" json:"aps_state,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ImSonetPosInfoInterface) Reset()         { *m = ImSonetPosInfoInterface{} }
func (m *ImSonetPosInfoInterface) String() string { return proto.CompactTextString(m) }
func (*ImSonetPosInfoInterface) ProtoMessage()    {}
func (*ImSonetPosInfoInterface) Descriptor() ([]byte, []int) {
	return fileDescriptor_9abf17a6a17540ff, []int{44}
}

func (m *ImSonetPosInfoInterface) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ImSonetPosInfoInterface.Unmarshal(m, b)
}
func (m *ImSonetPosInfoInterface) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ImSonetPosInfoInterface.Marshal(b, m, deterministic)
}
func (m *ImSonetPosInfoInterface) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ImSonetPosInfoInterface.Merge(m, src)
}
func (m *ImSonetPosInfoInterface) XXX_Size() int {
	return xxx_messageInfo_ImSonetPosInfoInterface.Size(m)
}
func (m *ImSonetPosInfoInterface) XXX_DiscardUnknown() {
	xxx_messageInfo_ImSonetPosInfoInterface.DiscardUnknown(m)
}

var xxx_messageInfo_ImSonetPosInfoInterface proto.InternalMessageInfo

func (m *ImSonetPosInfoInterface) GetApsState() string {
	if m != nil {
		return m.ApsState
	}
	return ""
}

type PfiIpAddrUnion struct {
	Afi                  string   `protobuf:"bytes,1,opt,name=afi,proto3" json:"afi,omitempty"`
	Ipv4                 string   `protobuf:"bytes,2,opt,name=ipv4,proto3" json:"ipv4,omitempty"`
	Ipv6                 string   `protobuf:"bytes,3,opt,name=ipv6,proto3" json:"ipv6,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PfiIpAddrUnion) Reset()         { *m = PfiIpAddrUnion{} }
func (m *PfiIpAddrUnion) String() string { return proto.CompactTextString(m) }
func (*PfiIpAddrUnion) ProtoMessage()    {}
func (*PfiIpAddrUnion) Descriptor() ([]byte, []int) {
	return fileDescriptor_9abf17a6a17540ff, []int{45}
}

func (m *PfiIpAddrUnion) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PfiIpAddrUnion.Unmarshal(m, b)
}
func (m *PfiIpAddrUnion) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PfiIpAddrUnion.Marshal(b, m, deterministic)
}
func (m *PfiIpAddrUnion) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PfiIpAddrUnion.Merge(m, src)
}
func (m *PfiIpAddrUnion) XXX_Size() int {
	return xxx_messageInfo_PfiIpAddrUnion.Size(m)
}
func (m *PfiIpAddrUnion) XXX_DiscardUnknown() {
	xxx_messageInfo_PfiIpAddrUnion.DiscardUnknown(m)
}

var xxx_messageInfo_PfiIpAddrUnion proto.InternalMessageInfo

func (m *PfiIpAddrUnion) GetAfi() string {
	if m != nil {
		return m.Afi
	}
	return ""
}

func (m *PfiIpAddrUnion) GetIpv4() string {
	if m != nil {
		return m.Ipv4
	}
	return ""
}

func (m *PfiIpAddrUnion) GetIpv6() string {
	if m != nil {
		return m.Ipv6
	}
	return ""
}

type ImCmdTunlGreInfo struct {
	SourceName                 string          `protobuf:"bytes,1,opt,name=source_name,json=sourceName,proto3" json:"source_name,omitempty"`
	SourceIpAddress            *PfiIpAddrUnion `protobuf:"bytes,2,opt,name=source_ip_address,json=sourceIpAddress,proto3" json:"source_ip_address,omitempty"`
	DestinationIpAddress       *PfiIpAddrUnion `protobuf:"bytes,3,opt,name=destination_ip_address,json=destinationIpAddress,proto3" json:"destination_ip_address,omitempty"`
	DestinationIpAddressLength uint32          `protobuf:"varint,4,opt,name=destination_ip_address_length,json=destinationIpAddressLength,proto3" json:"destination_ip_address_length,omitempty"`
	TunnelTos                  uint32          `protobuf:"varint,5,opt,name=tunnel_tos,json=tunnelTos,proto3" json:"tunnel_tos,omitempty"`
	TunnelTtl                  uint32          `protobuf:"varint,6,opt,name=tunnel_ttl,json=tunnelTtl,proto3" json:"tunnel_ttl,omitempty"`
	Key                        uint32          `protobuf:"varint,7,opt,name=key,proto3" json:"key,omitempty"`
	KeepalivePeriod            uint32          `protobuf:"varint,8,opt,name=keepalive_period,json=keepalivePeriod,proto3" json:"keepalive_period,omitempty"`
	KeepaliveMaximumRetry      uint32          `protobuf:"varint,9,opt,name=keepalive_maximum_retry,json=keepaliveMaximumRetry,proto3" json:"keepalive_maximum_retry,omitempty"`
	TunnelMode                 string          `protobuf:"bytes,10,opt,name=tunnel_mode,json=tunnelMode,proto3" json:"tunnel_mode,omitempty"`
	TunnelModeDirection        string          `protobuf:"bytes,11,opt,name=tunnel_mode_direction,json=tunnelModeDirection,proto3" json:"tunnel_mode_direction,omitempty"`
	KeepaliveState             string          `protobuf:"bytes,12,opt,name=keepalive_state,json=keepaliveState,proto3" json:"keepalive_state,omitempty"`
	DfBitState                 string          `protobuf:"bytes,13,opt,name=df_bit_state,json=dfBitState,proto3" json:"df_bit_state,omitempty"`
	KeyBitState                string          `protobuf:"bytes,14,opt,name=key_bit_state,json=keyBitState,proto3" json:"key_bit_state,omitempty"`
	XXX_NoUnkeyedLiteral       struct{}        `json:"-"`
	XXX_unrecognized           []byte          `json:"-"`
	XXX_sizecache              int32           `json:"-"`
}

func (m *ImCmdTunlGreInfo) Reset()         { *m = ImCmdTunlGreInfo{} }
func (m *ImCmdTunlGreInfo) String() string { return proto.CompactTextString(m) }
func (*ImCmdTunlGreInfo) ProtoMessage()    {}
func (*ImCmdTunlGreInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_9abf17a6a17540ff, []int{46}
}

func (m *ImCmdTunlGreInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ImCmdTunlGreInfo.Unmarshal(m, b)
}
func (m *ImCmdTunlGreInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ImCmdTunlGreInfo.Marshal(b, m, deterministic)
}
func (m *ImCmdTunlGreInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ImCmdTunlGreInfo.Merge(m, src)
}
func (m *ImCmdTunlGreInfo) XXX_Size() int {
	return xxx_messageInfo_ImCmdTunlGreInfo.Size(m)
}
func (m *ImCmdTunlGreInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_ImCmdTunlGreInfo.DiscardUnknown(m)
}

var xxx_messageInfo_ImCmdTunlGreInfo proto.InternalMessageInfo

func (m *ImCmdTunlGreInfo) GetSourceName() string {
	if m != nil {
		return m.SourceName
	}
	return ""
}

func (m *ImCmdTunlGreInfo) GetSourceIpAddress() *PfiIpAddrUnion {
	if m != nil {
		return m.SourceIpAddress
	}
	return nil
}

func (m *ImCmdTunlGreInfo) GetDestinationIpAddress() *PfiIpAddrUnion {
	if m != nil {
		return m.DestinationIpAddress
	}
	return nil
}

func (m *ImCmdTunlGreInfo) GetDestinationIpAddressLength() uint32 {
	if m != nil {
		return m.DestinationIpAddressLength
	}
	return 0
}

func (m *ImCmdTunlGreInfo) GetTunnelTos() uint32 {
	if m != nil {
		return m.TunnelTos
	}
	return 0
}

func (m *ImCmdTunlGreInfo) GetTunnelTtl() uint32 {
	if m != nil {
		return m.TunnelTtl
	}
	return 0
}

func (m *ImCmdTunlGreInfo) GetKey() uint32 {
	if m != nil {
		return m.Key
	}
	return 0
}

func (m *ImCmdTunlGreInfo) GetKeepalivePeriod() uint32 {
	if m != nil {
		return m.KeepalivePeriod
	}
	return 0
}

func (m *ImCmdTunlGreInfo) GetKeepaliveMaximumRetry() uint32 {
	if m != nil {
		return m.KeepaliveMaximumRetry
	}
	return 0
}

func (m *ImCmdTunlGreInfo) GetTunnelMode() string {
	if m != nil {
		return m.TunnelMode
	}
	return ""
}

func (m *ImCmdTunlGreInfo) GetTunnelModeDirection() string {
	if m != nil {
		return m.TunnelModeDirection
	}
	return ""
}

func (m *ImCmdTunlGreInfo) GetKeepaliveState() string {
	if m != nil {
		return m.KeepaliveState
	}
	return ""
}

func (m *ImCmdTunlGreInfo) GetDfBitState() string {
	if m != nil {
		return m.DfBitState
	}
	return ""
}

func (m *ImCmdTunlGreInfo) GetKeyBitState() string {
	if m != nil {
		return m.KeyBitState
	}
	return ""
}

type PwheEtherInterfaceInfo struct {
	InterfaceListName    string   `protobuf:"bytes,1,opt,name=interface_list_name,json=interfaceListName,proto3" json:"interface_list_name,omitempty"`
	L2Overhead           uint32   `protobuf:"varint,2,opt,name=l2_overhead,json=l2Overhead,proto3" json:"l2_overhead,omitempty"`
	InternalLabel        uint32   `protobuf:"varint,3,opt,name=internal_label,json=internalLabel,proto3" json:"internal_label,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PwheEtherInterfaceInfo) Reset()         { *m = PwheEtherInterfaceInfo{} }
func (m *PwheEtherInterfaceInfo) String() string { return proto.CompactTextString(m) }
func (*PwheEtherInterfaceInfo) ProtoMessage()    {}
func (*PwheEtherInterfaceInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_9abf17a6a17540ff, []int{47}
}

func (m *PwheEtherInterfaceInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PwheEtherInterfaceInfo.Unmarshal(m, b)
}
func (m *PwheEtherInterfaceInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PwheEtherInterfaceInfo.Marshal(b, m, deterministic)
}
func (m *PwheEtherInterfaceInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PwheEtherInterfaceInfo.Merge(m, src)
}
func (m *PwheEtherInterfaceInfo) XXX_Size() int {
	return xxx_messageInfo_PwheEtherInterfaceInfo.Size(m)
}
func (m *PwheEtherInterfaceInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_PwheEtherInterfaceInfo.DiscardUnknown(m)
}

var xxx_messageInfo_PwheEtherInterfaceInfo proto.InternalMessageInfo

func (m *PwheEtherInterfaceInfo) GetInterfaceListName() string {
	if m != nil {
		return m.InterfaceListName
	}
	return ""
}

func (m *PwheEtherInterfaceInfo) GetL2Overhead() uint32 {
	if m != nil {
		return m.L2Overhead
	}
	return 0
}

func (m *PwheEtherInterfaceInfo) GetInternalLabel() uint32 {
	if m != nil {
		return m.InternalLabel
	}
	return 0
}

type CemInterface struct {
	Timeslots            string   `protobuf:"bytes,1,opt,name=timeslots,proto3" json:"timeslots,omitempty"`
	Payload              uint32   `protobuf:"varint,2,opt,name=payload,proto3" json:"payload,omitempty"`
	DejitterBuffer       uint32   `protobuf:"varint,3,opt,name=dejitter_buffer,json=dejitterBuffer,proto3" json:"dejitter_buffer,omitempty"`
	Framing              int32    `protobuf:"zigzag32,4,opt,name=framing,proto3" json:"framing,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CemInterface) Reset()         { *m = CemInterface{} }
func (m *CemInterface) String() string { return proto.CompactTextString(m) }
func (*CemInterface) ProtoMessage()    {}
func (*CemInterface) Descriptor() ([]byte, []int) {
	return fileDescriptor_9abf17a6a17540ff, []int{48}
}

func (m *CemInterface) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CemInterface.Unmarshal(m, b)
}
func (m *CemInterface) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CemInterface.Marshal(b, m, deterministic)
}
func (m *CemInterface) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CemInterface.Merge(m, src)
}
func (m *CemInterface) XXX_Size() int {
	return xxx_messageInfo_CemInterface.Size(m)
}
func (m *CemInterface) XXX_DiscardUnknown() {
	xxx_messageInfo_CemInterface.DiscardUnknown(m)
}

var xxx_messageInfo_CemInterface proto.InternalMessageInfo

func (m *CemInterface) GetTimeslots() string {
	if m != nil {
		return m.Timeslots
	}
	return ""
}

func (m *CemInterface) GetPayload() uint32 {
	if m != nil {
		return m.Payload
	}
	return 0
}

func (m *CemInterface) GetDejitterBuffer() uint32 {
	if m != nil {
		return m.DejitterBuffer
	}
	return 0
}

func (m *CemInterface) GetFraming() int32 {
	if m != nil {
		return m.Framing
	}
	return 0
}

type ImCmdGccPerPortInfo struct {
	DerivedMode          string   `protobuf:"bytes,1,opt,name=derived_mode,json=derivedMode,proto3" json:"derived_mode,omitempty"`
	SecState             string   `protobuf:"bytes,2,opt,name=sec_state,json=secState,proto3" json:"sec_state,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ImCmdGccPerPortInfo) Reset()         { *m = ImCmdGccPerPortInfo{} }
func (m *ImCmdGccPerPortInfo) String() string { return proto.CompactTextString(m) }
func (*ImCmdGccPerPortInfo) ProtoMessage()    {}
func (*ImCmdGccPerPortInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_9abf17a6a17540ff, []int{49}
}

func (m *ImCmdGccPerPortInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ImCmdGccPerPortInfo.Unmarshal(m, b)
}
func (m *ImCmdGccPerPortInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ImCmdGccPerPortInfo.Marshal(b, m, deterministic)
}
func (m *ImCmdGccPerPortInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ImCmdGccPerPortInfo.Merge(m, src)
}
func (m *ImCmdGccPerPortInfo) XXX_Size() int {
	return xxx_messageInfo_ImCmdGccPerPortInfo.Size(m)
}
func (m *ImCmdGccPerPortInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_ImCmdGccPerPortInfo.DiscardUnknown(m)
}

var xxx_messageInfo_ImCmdGccPerPortInfo proto.InternalMessageInfo

func (m *ImCmdGccPerPortInfo) GetDerivedMode() string {
	if m != nil {
		return m.DerivedMode
	}
	return ""
}

func (m *ImCmdGccPerPortInfo) GetSecState() string {
	if m != nil {
		return m.SecState
	}
	return ""
}

type ImCmdIntfTypeInfo struct {
	InterfaceTypeInfo            string                   `protobuf:"bytes,1,opt,name=interface_type_info,json=interfaceTypeInfo,proto3" json:"interface_type_info,omitempty"`
	SrpInformation               *ImCmdSrpInfo            `protobuf:"bytes,2,opt,name=srp_information,json=srpInformation,proto3" json:"srp_information,omitempty"`
	TunnelInformation            *ImCmdTunnelInfo         `protobuf:"bytes,3,opt,name=tunnel_information,json=tunnelInformation,proto3" json:"tunnel_information,omitempty"`
	BundleInformation            *ImCmdBundleInfo         `protobuf:"bytes,4,opt,name=bundle_information,json=bundleInformation,proto3" json:"bundle_information,omitempty"`
	SerialInformation            *SerialInterface         `protobuf:"bytes,5,opt,name=serial_information,json=serialInformation,proto3" json:"serial_information,omitempty"`
	SonetPosInformation          *ImSonetPosInfoInterface `protobuf:"bytes,6,opt,name=sonet_pos_information,json=sonetPosInformation,proto3" json:"sonet_pos_information,omitempty"`
	TunnelGreInformation         *ImCmdTunlGreInfo        `protobuf:"bytes,7,opt,name=tunnel_gre_information,json=tunnelGreInformation,proto3" json:"tunnel_gre_information,omitempty"`
	PseudowireHeadEndInformation *PwheEtherInterfaceInfo  `protobuf:"bytes,8,opt,name=pseudowire_head_end_information,json=pseudowireHeadEndInformation,proto3" json:"pseudowire_head_end_information,omitempty"`
	CemInformation               *CemInterface            `protobuf:"bytes,9,opt,name=cem_information,json=cemInformation,proto3" json:"cem_information,omitempty"`
	GccInformation               *ImCmdGccPerPortInfo     `protobuf:"bytes,10,opt,name=gcc_information,json=gccInformation,proto3" json:"gcc_information,omitempty"`
	XXX_NoUnkeyedLiteral         struct{}                 `json:"-"`
	XXX_unrecognized             []byte                   `json:"-"`
	XXX_sizecache                int32                    `json:"-"`
}

func (m *ImCmdIntfTypeInfo) Reset()         { *m = ImCmdIntfTypeInfo{} }
func (m *ImCmdIntfTypeInfo) String() string { return proto.CompactTextString(m) }
func (*ImCmdIntfTypeInfo) ProtoMessage()    {}
func (*ImCmdIntfTypeInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_9abf17a6a17540ff, []int{50}
}

func (m *ImCmdIntfTypeInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ImCmdIntfTypeInfo.Unmarshal(m, b)
}
func (m *ImCmdIntfTypeInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ImCmdIntfTypeInfo.Marshal(b, m, deterministic)
}
func (m *ImCmdIntfTypeInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ImCmdIntfTypeInfo.Merge(m, src)
}
func (m *ImCmdIntfTypeInfo) XXX_Size() int {
	return xxx_messageInfo_ImCmdIntfTypeInfo.Size(m)
}
func (m *ImCmdIntfTypeInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_ImCmdIntfTypeInfo.DiscardUnknown(m)
}

var xxx_messageInfo_ImCmdIntfTypeInfo proto.InternalMessageInfo

func (m *ImCmdIntfTypeInfo) GetInterfaceTypeInfo() string {
	if m != nil {
		return m.InterfaceTypeInfo
	}
	return ""
}

func (m *ImCmdIntfTypeInfo) GetSrpInformation() *ImCmdSrpInfo {
	if m != nil {
		return m.SrpInformation
	}
	return nil
}

func (m *ImCmdIntfTypeInfo) GetTunnelInformation() *ImCmdTunnelInfo {
	if m != nil {
		return m.TunnelInformation
	}
	return nil
}

func (m *ImCmdIntfTypeInfo) GetBundleInformation() *ImCmdBundleInfo {
	if m != nil {
		return m.BundleInformation
	}
	return nil
}

func (m *ImCmdIntfTypeInfo) GetSerialInformation() *SerialInterface {
	if m != nil {
		return m.SerialInformation
	}
	return nil
}

func (m *ImCmdIntfTypeInfo) GetSonetPosInformation() *ImSonetPosInfoInterface {
	if m != nil {
		return m.SonetPosInformation
	}
	return nil
}

func (m *ImCmdIntfTypeInfo) GetTunnelGreInformation() *ImCmdTunlGreInfo {
	if m != nil {
		return m.TunnelGreInformation
	}
	return nil
}

func (m *ImCmdIntfTypeInfo) GetPseudowireHeadEndInformation() *PwheEtherInterfaceInfo {
	if m != nil {
		return m.PseudowireHeadEndInformation
	}
	return nil
}

func (m *ImCmdIntfTypeInfo) GetCemInformation() *CemInterface {
	if m != nil {
		return m.CemInformation
	}
	return nil
}

func (m *ImCmdIntfTypeInfo) GetGccInformation() *ImCmdGccPerPortInfo {
	if m != nil {
		return m.GccInformation
	}
	return nil
}

type StatsdbagDatarate struct {
	InputDataRate        uint64   `protobuf:"varint,1,opt,name=input_data_rate,json=inputDataRate,proto3" json:"input_data_rate,omitempty"`
	InputPacketRate      uint64   `protobuf:"varint,2,opt,name=input_packet_rate,json=inputPacketRate,proto3" json:"input_packet_rate,omitempty"`
	OutputDataRate       uint64   `protobuf:"varint,3,opt,name=output_data_rate,json=outputDataRate,proto3" json:"output_data_rate,omitempty"`
	OutputPacketRate     uint64   `protobuf:"varint,4,opt,name=output_packet_rate,json=outputPacketRate,proto3" json:"output_packet_rate,omitempty"`
	PeakInputDataRate    uint64   `protobuf:"varint,5,opt,name=peak_input_data_rate,json=peakInputDataRate,proto3" json:"peak_input_data_rate,omitempty"`
	PeakInputPacketRate  uint64   `protobuf:"varint,6,opt,name=peak_input_packet_rate,json=peakInputPacketRate,proto3" json:"peak_input_packet_rate,omitempty"`
	PeakOutputDataRate   uint64   `protobuf:"varint,7,opt,name=peak_output_data_rate,json=peakOutputDataRate,proto3" json:"peak_output_data_rate,omitempty"`
	PeakOutputPacketRate uint64   `protobuf:"varint,8,opt,name=peak_output_packet_rate,json=peakOutputPacketRate,proto3" json:"peak_output_packet_rate,omitempty"`
	Bandwidth            uint32   `protobuf:"varint,9,opt,name=bandwidth,proto3" json:"bandwidth,omitempty"`
	LoadInterval         uint32   `protobuf:"varint,10,opt,name=load_interval,json=loadInterval,proto3" json:"load_interval,omitempty"`
	OutputLoad           uint32   `protobuf:"varint,11,opt,name=output_load,json=outputLoad,proto3" json:"output_load,omitempty"`
	InputLoad            uint32   `protobuf:"varint,12,opt,name=input_load,json=inputLoad,proto3" json:"input_load,omitempty"`
	Reliability          uint32   `protobuf:"varint,13,opt,name=reliability,proto3" json:"reliability,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StatsdbagDatarate) Reset()         { *m = StatsdbagDatarate{} }
func (m *StatsdbagDatarate) String() string { return proto.CompactTextString(m) }
func (*StatsdbagDatarate) ProtoMessage()    {}
func (*StatsdbagDatarate) Descriptor() ([]byte, []int) {
	return fileDescriptor_9abf17a6a17540ff, []int{51}
}

func (m *StatsdbagDatarate) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StatsdbagDatarate.Unmarshal(m, b)
}
func (m *StatsdbagDatarate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StatsdbagDatarate.Marshal(b, m, deterministic)
}
func (m *StatsdbagDatarate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StatsdbagDatarate.Merge(m, src)
}
func (m *StatsdbagDatarate) XXX_Size() int {
	return xxx_messageInfo_StatsdbagDatarate.Size(m)
}
func (m *StatsdbagDatarate) XXX_DiscardUnknown() {
	xxx_messageInfo_StatsdbagDatarate.DiscardUnknown(m)
}

var xxx_messageInfo_StatsdbagDatarate proto.InternalMessageInfo

func (m *StatsdbagDatarate) GetInputDataRate() uint64 {
	if m != nil {
		return m.InputDataRate
	}
	return 0
}

func (m *StatsdbagDatarate) GetInputPacketRate() uint64 {
	if m != nil {
		return m.InputPacketRate
	}
	return 0
}

func (m *StatsdbagDatarate) GetOutputDataRate() uint64 {
	if m != nil {
		return m.OutputDataRate
	}
	return 0
}

func (m *StatsdbagDatarate) GetOutputPacketRate() uint64 {
	if m != nil {
		return m.OutputPacketRate
	}
	return 0
}

func (m *StatsdbagDatarate) GetPeakInputDataRate() uint64 {
	if m != nil {
		return m.PeakInputDataRate
	}
	return 0
}

func (m *StatsdbagDatarate) GetPeakInputPacketRate() uint64 {
	if m != nil {
		return m.PeakInputPacketRate
	}
	return 0
}

func (m *StatsdbagDatarate) GetPeakOutputDataRate() uint64 {
	if m != nil {
		return m.PeakOutputDataRate
	}
	return 0
}

func (m *StatsdbagDatarate) GetPeakOutputPacketRate() uint64 {
	if m != nil {
		return m.PeakOutputPacketRate
	}
	return 0
}

func (m *StatsdbagDatarate) GetBandwidth() uint32 {
	if m != nil {
		return m.Bandwidth
	}
	return 0
}

func (m *StatsdbagDatarate) GetLoadInterval() uint32 {
	if m != nil {
		return m.LoadInterval
	}
	return 0
}

func (m *StatsdbagDatarate) GetOutputLoad() uint32 {
	if m != nil {
		return m.OutputLoad
	}
	return 0
}

func (m *StatsdbagDatarate) GetInputLoad() uint32 {
	if m != nil {
		return m.InputLoad
	}
	return 0
}

func (m *StatsdbagDatarate) GetReliability() uint32 {
	if m != nil {
		return m.Reliability
	}
	return 0
}

type IfstatsbagGeneric struct {
	PacketsReceived                uint64   `protobuf:"varint,1,opt,name=packets_received,json=packetsReceived,proto3" json:"packets_received,omitempty"`
	BytesReceived                  uint64   `protobuf:"varint,2,opt,name=bytes_received,json=bytesReceived,proto3" json:"bytes_received,omitempty"`
	PacketsSent                    uint64   `protobuf:"varint,3,opt,name=packets_sent,json=packetsSent,proto3" json:"packets_sent,omitempty"`
	BytesSent                      uint64   `protobuf:"varint,4,opt,name=bytes_sent,json=bytesSent,proto3" json:"bytes_sent,omitempty"`
	MulticastPacketsReceived       uint64   `protobuf:"varint,5,opt,name=multicast_packets_received,json=multicastPacketsReceived,proto3" json:"multicast_packets_received,omitempty"`
	BroadcastPacketsReceived       uint64   `protobuf:"varint,6,opt,name=broadcast_packets_received,json=broadcastPacketsReceived,proto3" json:"broadcast_packets_received,omitempty"`
	MulticastPacketsSent           uint64   `protobuf:"varint,7,opt,name=multicast_packets_sent,json=multicastPacketsSent,proto3" json:"multicast_packets_sent,omitempty"`
	BroadcastPacketsSent           uint64   `protobuf:"varint,8,opt,name=broadcast_packets_sent,json=broadcastPacketsSent,proto3" json:"broadcast_packets_sent,omitempty"`
	OutputDrops                    uint32   `protobuf:"varint,9,opt,name=output_drops,json=outputDrops,proto3" json:"output_drops,omitempty"`
	OutputQueueDrops               uint32   `protobuf:"varint,10,opt,name=output_queue_drops,json=outputQueueDrops,proto3" json:"output_queue_drops,omitempty"`
	InputDrops                     uint32   `protobuf:"varint,11,opt,name=input_drops,json=inputDrops,proto3" json:"input_drops,omitempty"`
	InputQueueDrops                uint32   `protobuf:"varint,12,opt,name=input_queue_drops,json=inputQueueDrops,proto3" json:"input_queue_drops,omitempty"`
	RuntPacketsReceived            uint32   `protobuf:"varint,13,opt,name=runt_packets_received,json=runtPacketsReceived,proto3" json:"runt_packets_received,omitempty"`
	GiantPacketsReceived           uint32   `protobuf:"varint,14,opt,name=giant_packets_received,json=giantPacketsReceived,proto3" json:"giant_packets_received,omitempty"`
	ThrottledPacketsReceived       uint32   `protobuf:"varint,15,opt,name=throttled_packets_received,json=throttledPacketsReceived,proto3" json:"throttled_packets_received,omitempty"`
	ParityPacketsReceived          uint32   `protobuf:"varint,16,opt,name=parity_packets_received,json=parityPacketsReceived,proto3" json:"parity_packets_received,omitempty"`
	UnknownProtocolPacketsReceived uint32   `protobuf:"varint,17,opt,name=unknown_protocol_packets_received,json=unknownProtocolPacketsReceived,proto3" json:"unknown_protocol_packets_received,omitempty"`
	InputErrors                    uint32   `protobuf:"varint,18,opt,name=input_errors,json=inputErrors,proto3" json:"input_errors,omitempty"`
	CrcErrors                      uint32   `protobuf:"varint,19,opt,name=crc_errors,json=crcErrors,proto3" json:"crc_errors,omitempty"`
	InputOverruns                  uint32   `protobuf:"varint,20,opt,name=input_overruns,json=inputOverruns,proto3" json:"input_overruns,omitempty"`
	FramingErrorsReceived          uint32   `protobuf:"varint,21,opt,name=framing_errors_received,json=framingErrorsReceived,proto3" json:"framing_errors_received,omitempty"`
	InputIgnoredPackets            uint32   `protobuf:"varint,22,opt,name=input_ignored_packets,json=inputIgnoredPackets,proto3" json:"input_ignored_packets,omitempty"`
	InputAborts                    uint32   `protobuf:"varint,23,opt,name=input_aborts,json=inputAborts,proto3" json:"input_aborts,omitempty"`
	OutputErrors                   uint32   `protobuf:"varint,24,opt,name=output_errors,json=outputErrors,proto3" json:"output_errors,omitempty"`
	OutputUnderruns                uint32   `protobuf:"varint,25,opt,name=output_underruns,json=outputUnderruns,proto3" json:"output_underruns,omitempty"`
	OutputBufferFailures           uint32   `protobuf:"varint,26,opt,name=output_buffer_failures,json=outputBufferFailures,proto3" json:"output_buffer_failures,omitempty"`
	OutputBuffersSwappedOut        uint32   `protobuf:"varint,27,opt,name=output_buffers_swapped_out,json=outputBuffersSwappedOut,proto3" json:"output_buffers_swapped_out,omitempty"`
	Applique                       uint32   `protobuf:"varint,28,opt,name=applique,proto3" json:"applique,omitempty"`
	Resets                         uint32   `protobuf:"varint,29,opt,name=resets,proto3" json:"resets,omitempty"`
	CarrierTransitions             uint32   `protobuf:"varint,30,opt,name=carrier_transitions,json=carrierTransitions,proto3" json:"carrier_transitions,omitempty"`
	AvailabilityFlag               uint32   `protobuf:"varint,31,opt,name=availability_flag,json=availabilityFlag,proto3" json:"availability_flag,omitempty"`
	LastDataTime                   uint32   `protobuf:"varint,32,opt,name=last_data_time,json=lastDataTime,proto3" json:"last_data_time,omitempty"`
	SecondsSinceLastClearCounters  uint32   `protobuf:"varint,33,opt,name=seconds_since_last_clear_counters,json=secondsSinceLastClearCounters,proto3" json:"seconds_since_last_clear_counters,omitempty"`
	LastDiscontinuityTime          uint32   `protobuf:"varint,34,opt,name=last_discontinuity_time,json=lastDiscontinuityTime,proto3" json:"last_discontinuity_time,omitempty"`
	SecondsSincePacketReceived     uint32   `protobuf:"varint,35,opt,name=seconds_since_packet_received,json=secondsSincePacketReceived,proto3" json:"seconds_since_packet_received,omitempty"`
	SecondsSincePacketSent         uint32   `protobuf:"varint,36,opt,name=seconds_since_packet_sent,json=secondsSincePacketSent,proto3" json:"seconds_since_packet_sent,omitempty"`
	XXX_NoUnkeyedLiteral           struct{} `json:"-"`
	XXX_unrecognized               []byte   `json:"-"`
	XXX_sizecache                  int32    `json:"-"`
}

func (m *IfstatsbagGeneric) Reset()         { *m = IfstatsbagGeneric{} }
func (m *IfstatsbagGeneric) String() string { return proto.CompactTextString(m) }
func (*IfstatsbagGeneric) ProtoMessage()    {}
func (*IfstatsbagGeneric) Descriptor() ([]byte, []int) {
	return fileDescriptor_9abf17a6a17540ff, []int{52}
}

func (m *IfstatsbagGeneric) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IfstatsbagGeneric.Unmarshal(m, b)
}
func (m *IfstatsbagGeneric) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IfstatsbagGeneric.Marshal(b, m, deterministic)
}
func (m *IfstatsbagGeneric) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IfstatsbagGeneric.Merge(m, src)
}
func (m *IfstatsbagGeneric) XXX_Size() int {
	return xxx_messageInfo_IfstatsbagGeneric.Size(m)
}
func (m *IfstatsbagGeneric) XXX_DiscardUnknown() {
	xxx_messageInfo_IfstatsbagGeneric.DiscardUnknown(m)
}

var xxx_messageInfo_IfstatsbagGeneric proto.InternalMessageInfo

func (m *IfstatsbagGeneric) GetPacketsReceived() uint64 {
	if m != nil {
		return m.PacketsReceived
	}
	return 0
}

func (m *IfstatsbagGeneric) GetBytesReceived() uint64 {
	if m != nil {
		return m.BytesReceived
	}
	return 0
}

func (m *IfstatsbagGeneric) GetPacketsSent() uint64 {
	if m != nil {
		return m.PacketsSent
	}
	return 0
}

func (m *IfstatsbagGeneric) GetBytesSent() uint64 {
	if m != nil {
		return m.BytesSent
	}
	return 0
}

func (m *IfstatsbagGeneric) GetMulticastPacketsReceived() uint64 {
	if m != nil {
		return m.MulticastPacketsReceived
	}
	return 0
}

func (m *IfstatsbagGeneric) GetBroadcastPacketsReceived() uint64 {
	if m != nil {
		return m.BroadcastPacketsReceived
	}
	return 0
}

func (m *IfstatsbagGeneric) GetMulticastPacketsSent() uint64 {
	if m != nil {
		return m.MulticastPacketsSent
	}
	return 0
}

func (m *IfstatsbagGeneric) GetBroadcastPacketsSent() uint64 {
	if m != nil {
		return m.BroadcastPacketsSent
	}
	return 0
}

func (m *IfstatsbagGeneric) GetOutputDrops() uint32 {
	if m != nil {
		return m.OutputDrops
	}
	return 0
}

func (m *IfstatsbagGeneric) GetOutputQueueDrops() uint32 {
	if m != nil {
		return m.OutputQueueDrops
	}
	return 0
}

func (m *IfstatsbagGeneric) GetInputDrops() uint32 {
	if m != nil {
		return m.InputDrops
	}
	return 0
}

func (m *IfstatsbagGeneric) GetInputQueueDrops() uint32 {
	if m != nil {
		return m.InputQueueDrops
	}
	return 0
}

func (m *IfstatsbagGeneric) GetRuntPacketsReceived() uint32 {
	if m != nil {
		return m.RuntPacketsReceived
	}
	return 0
}

func (m *IfstatsbagGeneric) GetGiantPacketsReceived() uint32 {
	if m != nil {
		return m.GiantPacketsReceived
	}
	return 0
}

func (m *IfstatsbagGeneric) GetThrottledPacketsReceived() uint32 {
	if m != nil {
		return m.ThrottledPacketsReceived
	}
	return 0
}

func (m *IfstatsbagGeneric) GetParityPacketsReceived() uint32 {
	if m != nil {
		return m.ParityPacketsReceived
	}
	return 0
}

func (m *IfstatsbagGeneric) GetUnknownProtocolPacketsReceived() uint32 {
	if m != nil {
		return m.UnknownProtocolPacketsReceived
	}
	return 0
}

func (m *IfstatsbagGeneric) GetInputErrors() uint32 {
	if m != nil {
		return m.InputErrors
	}
	return 0
}

func (m *IfstatsbagGeneric) GetCrcErrors() uint32 {
	if m != nil {
		return m.CrcErrors
	}
	return 0
}

func (m *IfstatsbagGeneric) GetInputOverruns() uint32 {
	if m != nil {
		return m.InputOverruns
	}
	return 0
}

func (m *IfstatsbagGeneric) GetFramingErrorsReceived() uint32 {
	if m != nil {
		return m.FramingErrorsReceived
	}
	return 0
}

func (m *IfstatsbagGeneric) GetInputIgnoredPackets() uint32 {
	if m != nil {
		return m.InputIgnoredPackets
	}
	return 0
}

func (m *IfstatsbagGeneric) GetInputAborts() uint32 {
	if m != nil {
		return m.InputAborts
	}
	return 0
}

func (m *IfstatsbagGeneric) GetOutputErrors() uint32 {
	if m != nil {
		return m.OutputErrors
	}
	return 0
}

func (m *IfstatsbagGeneric) GetOutputUnderruns() uint32 {
	if m != nil {
		return m.OutputUnderruns
	}
	return 0
}

func (m *IfstatsbagGeneric) GetOutputBufferFailures() uint32 {
	if m != nil {
		return m.OutputBufferFailures
	}
	return 0
}

func (m *IfstatsbagGeneric) GetOutputBuffersSwappedOut() uint32 {
	if m != nil {
		return m.OutputBuffersSwappedOut
	}
	return 0
}

func (m *IfstatsbagGeneric) GetApplique() uint32 {
	if m != nil {
		return m.Applique
	}
	return 0
}

func (m *IfstatsbagGeneric) GetResets() uint32 {
	if m != nil {
		return m.Resets
	}
	return 0
}

func (m *IfstatsbagGeneric) GetCarrierTransitions() uint32 {
	if m != nil {
		return m.CarrierTransitions
	}
	return 0
}

func (m *IfstatsbagGeneric) GetAvailabilityFlag() uint32 {
	if m != nil {
		return m.AvailabilityFlag
	}
	return 0
}

func (m *IfstatsbagGeneric) GetLastDataTime() uint32 {
	if m != nil {
		return m.LastDataTime
	}
	return 0
}

func (m *IfstatsbagGeneric) GetSecondsSinceLastClearCounters() uint32 {
	if m != nil {
		return m.SecondsSinceLastClearCounters
	}
	return 0
}

func (m *IfstatsbagGeneric) GetLastDiscontinuityTime() uint32 {
	if m != nil {
		return m.LastDiscontinuityTime
	}
	return 0
}

func (m *IfstatsbagGeneric) GetSecondsSincePacketReceived() uint32 {
	if m != nil {
		return m.SecondsSincePacketReceived
	}
	return 0
}

func (m *IfstatsbagGeneric) GetSecondsSincePacketSent() uint32 {
	if m != nil {
		return m.SecondsSincePacketSent
	}
	return 0
}

type IfstatsbagBasic struct {
	PacketsReceived                uint64   `protobuf:"varint,1,opt,name=packets_received,json=packetsReceived,proto3" json:"packets_received,omitempty"`
	BytesReceived                  uint64   `protobuf:"varint,2,opt,name=bytes_received,json=bytesReceived,proto3" json:"bytes_received,omitempty"`
	PacketsSent                    uint64   `protobuf:"varint,3,opt,name=packets_sent,json=packetsSent,proto3" json:"packets_sent,omitempty"`
	BytesSent                      uint64   `protobuf:"varint,4,opt,name=bytes_sent,json=bytesSent,proto3" json:"bytes_sent,omitempty"`
	InputDrops                     uint32   `protobuf:"varint,5,opt,name=input_drops,json=inputDrops,proto3" json:"input_drops,omitempty"`
	InputQueueDrops                uint32   `protobuf:"varint,6,opt,name=input_queue_drops,json=inputQueueDrops,proto3" json:"input_queue_drops,omitempty"`
	InputErrors                    uint32   `protobuf:"varint,7,opt,name=input_errors,json=inputErrors,proto3" json:"input_errors,omitempty"`
	UnknownProtocolPacketsReceived uint32   `protobuf:"varint,8,opt,name=unknown_protocol_packets_received,json=unknownProtocolPacketsReceived,proto3" json:"unknown_protocol_packets_received,omitempty"`
	OutputDrops                    uint32   `protobuf:"varint,9,opt,name=output_drops,json=outputDrops,proto3" json:"output_drops,omitempty"`
	OutputQueueDrops               uint32   `protobuf:"varint,10,opt,name=output_queue_drops,json=outputQueueDrops,proto3" json:"output_queue_drops,omitempty"`
	OutputErrors                   uint32   `protobuf:"varint,11,opt,name=output_errors,json=outputErrors,proto3" json:"output_errors,omitempty"`
	LastDataTime                   uint32   `protobuf:"varint,12,opt,name=last_data_time,json=lastDataTime,proto3" json:"last_data_time,omitempty"`
	SecondsSinceLastClearCounters  uint32   `protobuf:"varint,13,opt,name=seconds_since_last_clear_counters,json=secondsSinceLastClearCounters,proto3" json:"seconds_since_last_clear_counters,omitempty"`
	LastDiscontinuityTime          uint32   `protobuf:"varint,14,opt,name=last_discontinuity_time,json=lastDiscontinuityTime,proto3" json:"last_discontinuity_time,omitempty"`
	SecondsSincePacketReceived     uint32   `protobuf:"varint,15,opt,name=seconds_since_packet_received,json=secondsSincePacketReceived,proto3" json:"seconds_since_packet_received,omitempty"`
	SecondsSincePacketSent         uint32   `protobuf:"varint,16,opt,name=seconds_since_packet_sent,json=secondsSincePacketSent,proto3" json:"seconds_since_packet_sent,omitempty"`
	XXX_NoUnkeyedLiteral           struct{} `json:"-"`
	XXX_unrecognized               []byte   `json:"-"`
	XXX_sizecache                  int32    `json:"-"`
}

func (m *IfstatsbagBasic) Reset()         { *m = IfstatsbagBasic{} }
func (m *IfstatsbagBasic) String() string { return proto.CompactTextString(m) }
func (*IfstatsbagBasic) ProtoMessage()    {}
func (*IfstatsbagBasic) Descriptor() ([]byte, []int) {
	return fileDescriptor_9abf17a6a17540ff, []int{53}
}

func (m *IfstatsbagBasic) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IfstatsbagBasic.Unmarshal(m, b)
}
func (m *IfstatsbagBasic) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IfstatsbagBasic.Marshal(b, m, deterministic)
}
func (m *IfstatsbagBasic) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IfstatsbagBasic.Merge(m, src)
}
func (m *IfstatsbagBasic) XXX_Size() int {
	return xxx_messageInfo_IfstatsbagBasic.Size(m)
}
func (m *IfstatsbagBasic) XXX_DiscardUnknown() {
	xxx_messageInfo_IfstatsbagBasic.DiscardUnknown(m)
}

var xxx_messageInfo_IfstatsbagBasic proto.InternalMessageInfo

func (m *IfstatsbagBasic) GetPacketsReceived() uint64 {
	if m != nil {
		return m.PacketsReceived
	}
	return 0
}

func (m *IfstatsbagBasic) GetBytesReceived() uint64 {
	if m != nil {
		return m.BytesReceived
	}
	return 0
}

func (m *IfstatsbagBasic) GetPacketsSent() uint64 {
	if m != nil {
		return m.PacketsSent
	}
	return 0
}

func (m *IfstatsbagBasic) GetBytesSent() uint64 {
	if m != nil {
		return m.BytesSent
	}
	return 0
}

func (m *IfstatsbagBasic) GetInputDrops() uint32 {
	if m != nil {
		return m.InputDrops
	}
	return 0
}

func (m *IfstatsbagBasic) GetInputQueueDrops() uint32 {
	if m != nil {
		return m.InputQueueDrops
	}
	return 0
}

func (m *IfstatsbagBasic) GetInputErrors() uint32 {
	if m != nil {
		return m.InputErrors
	}
	return 0
}

func (m *IfstatsbagBasic) GetUnknownProtocolPacketsReceived() uint32 {
	if m != nil {
		return m.UnknownProtocolPacketsReceived
	}
	return 0
}

func (m *IfstatsbagBasic) GetOutputDrops() uint32 {
	if m != nil {
		return m.OutputDrops
	}
	return 0
}

func (m *IfstatsbagBasic) GetOutputQueueDrops() uint32 {
	if m != nil {
		return m.OutputQueueDrops
	}
	return 0
}

func (m *IfstatsbagBasic) GetOutputErrors() uint32 {
	if m != nil {
		return m.OutputErrors
	}
	return 0
}

func (m *IfstatsbagBasic) GetLastDataTime() uint32 {
	if m != nil {
		return m.LastDataTime
	}
	return 0
}

func (m *IfstatsbagBasic) GetSecondsSinceLastClearCounters() uint32 {
	if m != nil {
		return m.SecondsSinceLastClearCounters
	}
	return 0
}

func (m *IfstatsbagBasic) GetLastDiscontinuityTime() uint32 {
	if m != nil {
		return m.LastDiscontinuityTime
	}
	return 0
}

func (m *IfstatsbagBasic) GetSecondsSincePacketReceived() uint32 {
	if m != nil {
		return m.SecondsSincePacketReceived
	}
	return 0
}

func (m *IfstatsbagBasic) GetSecondsSincePacketSent() uint32 {
	if m != nil {
		return m.SecondsSincePacketSent
	}
	return 0
}

type ImCmdIfStats struct {
	StatsType            string             `protobuf:"bytes,1,opt,name=stats_type,json=statsType,proto3" json:"stats_type,omitempty"`
	FullInterfaceStats   *IfstatsbagGeneric `protobuf:"bytes,2,opt,name=full_interface_stats,json=fullInterfaceStats,proto3" json:"full_interface_stats,omitempty"`
	BasicInterfaceStats  *IfstatsbagBasic   `protobuf:"bytes,3,opt,name=basic_interface_stats,json=basicInterfaceStats,proto3" json:"basic_interface_stats,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *ImCmdIfStats) Reset()         { *m = ImCmdIfStats{} }
func (m *ImCmdIfStats) String() string { return proto.CompactTextString(m) }
func (*ImCmdIfStats) ProtoMessage()    {}
func (*ImCmdIfStats) Descriptor() ([]byte, []int) {
	return fileDescriptor_9abf17a6a17540ff, []int{54}
}

func (m *ImCmdIfStats) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ImCmdIfStats.Unmarshal(m, b)
}
func (m *ImCmdIfStats) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ImCmdIfStats.Marshal(b, m, deterministic)
}
func (m *ImCmdIfStats) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ImCmdIfStats.Merge(m, src)
}
func (m *ImCmdIfStats) XXX_Size() int {
	return xxx_messageInfo_ImCmdIfStats.Size(m)
}
func (m *ImCmdIfStats) XXX_DiscardUnknown() {
	xxx_messageInfo_ImCmdIfStats.DiscardUnknown(m)
}

var xxx_messageInfo_ImCmdIfStats proto.InternalMessageInfo

func (m *ImCmdIfStats) GetStatsType() string {
	if m != nil {
		return m.StatsType
	}
	return ""
}

func (m *ImCmdIfStats) GetFullInterfaceStats() *IfstatsbagGeneric {
	if m != nil {
		return m.FullInterfaceStats
	}
	return nil
}

func (m *ImCmdIfStats) GetBasicInterfaceStats() *IfstatsbagBasic {
	if m != nil {
		return m.BasicInterfaceStats
	}
	return nil
}

type StatsBagIdTd struct {
	IdType               string   `protobuf:"bytes,1,opt,name=id_type,json=idType,proto3" json:"id_type,omitempty"`
	Unused               uint32   `protobuf:"varint,2,opt,name=unused,proto3" json:"unused,omitempty"`
	InterfaceHandle      string   `protobuf:"bytes,3,opt,name=interface_handle,json=interfaceHandle,proto3" json:"interface_handle,omitempty"`
	NodeId               string   `protobuf:"bytes,4,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	FeatureId            uint32   `protobuf:"varint,5,opt,name=feature_id,json=featureId,proto3" json:"feature_id,omitempty"`
	Id                   uint32   `protobuf:"varint,6,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StatsBagIdTd) Reset()         { *m = StatsBagIdTd{} }
func (m *StatsBagIdTd) String() string { return proto.CompactTextString(m) }
func (*StatsBagIdTd) ProtoMessage()    {}
func (*StatsBagIdTd) Descriptor() ([]byte, []int) {
	return fileDescriptor_9abf17a6a17540ff, []int{55}
}

func (m *StatsBagIdTd) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StatsBagIdTd.Unmarshal(m, b)
}
func (m *StatsBagIdTd) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StatsBagIdTd.Marshal(b, m, deterministic)
}
func (m *StatsBagIdTd) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StatsBagIdTd.Merge(m, src)
}
func (m *StatsBagIdTd) XXX_Size() int {
	return xxx_messageInfo_StatsBagIdTd.Size(m)
}
func (m *StatsBagIdTd) XXX_DiscardUnknown() {
	xxx_messageInfo_StatsBagIdTd.DiscardUnknown(m)
}

var xxx_messageInfo_StatsBagIdTd proto.InternalMessageInfo

func (m *StatsBagIdTd) GetIdType() string {
	if m != nil {
		return m.IdType
	}
	return ""
}

func (m *StatsBagIdTd) GetUnused() uint32 {
	if m != nil {
		return m.Unused
	}
	return 0
}

func (m *StatsBagIdTd) GetInterfaceHandle() string {
	if m != nil {
		return m.InterfaceHandle
	}
	return ""
}

func (m *StatsBagIdTd) GetNodeId() string {
	if m != nil {
		return m.NodeId
	}
	return ""
}

func (m *StatsBagIdTd) GetFeatureId() uint32 {
	if m != nil {
		return m.FeatureId
	}
	return 0
}

func (m *StatsBagIdTd) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

type StatsBagBlockSt struct {
	Type                 string   `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Count                uint32   `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	Data                 []byte   `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StatsBagBlockSt) Reset()         { *m = StatsBagBlockSt{} }
func (m *StatsBagBlockSt) String() string { return proto.CompactTextString(m) }
func (*StatsBagBlockSt) ProtoMessage()    {}
func (*StatsBagBlockSt) Descriptor() ([]byte, []int) {
	return fileDescriptor_9abf17a6a17540ff, []int{56}
}

func (m *StatsBagBlockSt) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StatsBagBlockSt.Unmarshal(m, b)
}
func (m *StatsBagBlockSt) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StatsBagBlockSt.Marshal(b, m, deterministic)
}
func (m *StatsBagBlockSt) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StatsBagBlockSt.Merge(m, src)
}
func (m *StatsBagBlockSt) XXX_Size() int {
	return xxx_messageInfo_StatsBagBlockSt.Size(m)
}
func (m *StatsBagBlockSt) XXX_DiscardUnknown() {
	xxx_messageInfo_StatsBagBlockSt.DiscardUnknown(m)
}

var xxx_messageInfo_StatsBagBlockSt proto.InternalMessageInfo

func (m *StatsBagBlockSt) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *StatsBagBlockSt) GetCount() uint32 {
	if m != nil {
		return m.Count
	}
	return 0
}

func (m *StatsBagBlockSt) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type StatsBagElementSt struct {
	Key                  []byte             `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	BlockArray           []*StatsBagBlockSt `protobuf:"bytes,2,rep,name=block_array,json=blockArray,proto3" json:"block_array,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *StatsBagElementSt) Reset()         { *m = StatsBagElementSt{} }
func (m *StatsBagElementSt) String() string { return proto.CompactTextString(m) }
func (*StatsBagElementSt) ProtoMessage()    {}
func (*StatsBagElementSt) Descriptor() ([]byte, []int) {
	return fileDescriptor_9abf17a6a17540ff, []int{57}
}

func (m *StatsBagElementSt) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StatsBagElementSt.Unmarshal(m, b)
}
func (m *StatsBagElementSt) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StatsBagElementSt.Marshal(b, m, deterministic)
}
func (m *StatsBagElementSt) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StatsBagElementSt.Merge(m, src)
}
func (m *StatsBagElementSt) XXX_Size() int {
	return xxx_messageInfo_StatsBagElementSt.Size(m)
}
func (m *StatsBagElementSt) XXX_DiscardUnknown() {
	xxx_messageInfo_StatsBagElementSt.DiscardUnknown(m)
}

var xxx_messageInfo_StatsBagElementSt proto.InternalMessageInfo

func (m *StatsBagElementSt) GetKey() []byte {
	if m != nil {
		return m.Key
	}
	return nil
}

func (m *StatsBagElementSt) GetBlockArray() []*StatsBagBlockSt {
	if m != nil {
		return m.BlockArray
	}
	return nil
}

type StatsData struct {
	StatsType            uint32               `protobuf:"varint,1,opt,name=stats_type,json=statsType,proto3" json:"stats_type,omitempty"`
	StatsId              *StatsBagIdTd        `protobuf:"bytes,2,opt,name=stats_id,json=statsId,proto3" json:"stats_id,omitempty"`
	Contents             string               `protobuf:"bytes,3,opt,name=contents,proto3" json:"contents,omitempty"`
	BlockArray           []*StatsBagBlockSt   `protobuf:"bytes,4,rep,name=block_array,json=blockArray,proto3" json:"block_array,omitempty"`
	ElementArray         []*StatsBagElementSt `protobuf:"bytes,5,rep,name=element_array,json=elementArray,proto3" json:"element_array,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *StatsData) Reset()         { *m = StatsData{} }
func (m *StatsData) String() string { return proto.CompactTextString(m) }
func (*StatsData) ProtoMessage()    {}
func (*StatsData) Descriptor() ([]byte, []int) {
	return fileDescriptor_9abf17a6a17540ff, []int{58}
}

func (m *StatsData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StatsData.Unmarshal(m, b)
}
func (m *StatsData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StatsData.Marshal(b, m, deterministic)
}
func (m *StatsData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StatsData.Merge(m, src)
}
func (m *StatsData) XXX_Size() int {
	return xxx_messageInfo_StatsData.Size(m)
}
func (m *StatsData) XXX_DiscardUnknown() {
	xxx_messageInfo_StatsData.DiscardUnknown(m)
}

var xxx_messageInfo_StatsData proto.InternalMessageInfo

func (m *StatsData) GetStatsType() uint32 {
	if m != nil {
		return m.StatsType
	}
	return 0
}

func (m *StatsData) GetStatsId() *StatsBagIdTd {
	if m != nil {
		return m.StatsId
	}
	return nil
}

func (m *StatsData) GetContents() string {
	if m != nil {
		return m.Contents
	}
	return ""
}

func (m *StatsData) GetBlockArray() []*StatsBagBlockSt {
	if m != nil {
		return m.BlockArray
	}
	return nil
}

func (m *StatsData) GetElementArray() []*StatsBagElementSt {
	if m != nil {
		return m.ElementArray
	}
	return nil
}

type ImCmdInfo struct {
	InterfaceHandle          string               `protobuf:"bytes,50,opt,name=interface_handle,json=interfaceHandle,proto3" json:"interface_handle,omitempty"`
	InterfaceType            string               `protobuf:"bytes,51,opt,name=interface_type,json=interfaceType,proto3" json:"interface_type,omitempty"`
	HardwareTypeString       string               `protobuf:"bytes,52,opt,name=hardware_type_string,json=hardwareTypeString,proto3" json:"hardware_type_string,omitempty"`
	State                    string               `protobuf:"bytes,53,opt,name=state,proto3" json:"state,omitempty"`
	LineState                string               `protobuf:"bytes,54,opt,name=line_state,json=lineState,proto3" json:"line_state,omitempty"`
	Encapsulation            string               `protobuf:"bytes,55,opt,name=encapsulation,proto3" json:"encapsulation,omitempty"`
	EncapsulationTypeString  string               `protobuf:"bytes,56,opt,name=encapsulation_type_string,json=encapsulationTypeString,proto3" json:"encapsulation_type_string,omitempty"`
	Mtu                      uint32               `protobuf:"varint,57,opt,name=mtu,proto3" json:"mtu,omitempty"`
	IsL2TransportEnabled     bool                 `protobuf:"varint,58,opt,name=is_l2_transport_enabled,json=isL2TransportEnabled,proto3" json:"is_l2_transport_enabled,omitempty"`
	StateTransitionCount     uint32               `protobuf:"varint,59,opt,name=state_transition_count,json=stateTransitionCount,proto3" json:"state_transition_count,omitempty"`
	LastStateTransitionTime  uint32               `protobuf:"varint,60,opt,name=last_state_transition_time,json=lastStateTransitionTime,proto3" json:"last_state_transition_time,omitempty"`
	IsDampeningEnabled       bool                 `protobuf:"varint,61,opt,name=is_dampening_enabled,json=isDampeningEnabled,proto3" json:"is_dampening_enabled,omitempty"`
	DampeningInformation     *ImCmdDampSt         `protobuf:"bytes,62,opt,name=dampening_information,json=dampeningInformation,proto3" json:"dampening_information,omitempty"`
	Speed                    uint32               `protobuf:"varint,63,opt,name=speed,proto3" json:"speed,omitempty"`
	CrcLength                uint32               `protobuf:"varint,64,opt,name=crc_length,json=crcLength,proto3" json:"crc_length,omitempty"`
	IsScrambleEnabled        bool                 `protobuf:"varint,65,opt,name=is_scramble_enabled,json=isScrambleEnabled,proto3" json:"is_scramble_enabled,omitempty"`
	Duplexity                string               `protobuf:"bytes,66,opt,name=duplexity,proto3" json:"duplexity,omitempty"`
	MediaType                string               `protobuf:"bytes,67,opt,name=media_type,json=mediaType,proto3" json:"media_type,omitempty"`
	LinkType                 string               `protobuf:"bytes,68,opt,name=link_type,json=linkType,proto3" json:"link_type,omitempty"`
	InFlowControl            string               `protobuf:"bytes,69,opt,name=in_flow_control,json=inFlowControl,proto3" json:"in_flow_control,omitempty"`
	OutFlowControl           string               `protobuf:"bytes,70,opt,name=out_flow_control,json=outFlowControl,proto3" json:"out_flow_control,omitempty"`
	MacAddress               *ImCmdMacAddrSt      `protobuf:"bytes,71,opt,name=mac_address,json=macAddress,proto3" json:"mac_address,omitempty"`
	BurnedInAddress          *ImCmdMacAddrSt      `protobuf:"bytes,72,opt,name=burned_in_address,json=burnedInAddress,proto3" json:"burned_in_address,omitempty"`
	CarrierDelay             *ImCmdCarrierDelaySt `protobuf:"bytes,73,opt,name=carrier_delay,json=carrierDelay,proto3" json:"carrier_delay,omitempty"`
	Bandwidth                uint32               `protobuf:"varint,74,opt,name=bandwidth,proto3" json:"bandwidth,omitempty"`
	MaxBandwidth             uint32               `protobuf:"varint,75,opt,name=max_bandwidth,json=maxBandwidth,proto3" json:"max_bandwidth,omitempty"`
	Keepalive                uint32               `protobuf:"varint,76,opt,name=keepalive,proto3" json:"keepalive,omitempty"`
	IsL2Looped               bool                 `protobuf:"varint,77,opt,name=is_l2_looped,json=isL2Looped,proto3" json:"is_l2_looped,omitempty"`
	ParentInterfaceName      string               `protobuf:"bytes,78,opt,name=parent_interface_name,json=parentInterfaceName,proto3" json:"parent_interface_name,omitempty"`
	LoopbackConfiguration    string               `protobuf:"bytes,79,opt,name=loopback_configuration,json=loopbackConfiguration,proto3" json:"loopback_configuration,omitempty"`
	Description              string               `protobuf:"bytes,80,opt,name=description,proto3" json:"description,omitempty"`
	ArpInformation           *ImCmdArpInfoSt      `protobuf:"bytes,81,opt,name=arp_information,json=arpInformation,proto3" json:"arp_information,omitempty"`
	IpInformation            *ImCmdIpInfoSt       `protobuf:"bytes,82,opt,name=ip_information,json=ipInformation,proto3" json:"ip_information,omitempty"`
	IsMaintenanceEnabled     bool                 `protobuf:"varint,83,opt,name=is_maintenance_enabled,json=isMaintenanceEnabled,proto3" json:"is_maintenance_enabled,omitempty"`
	IsDataInverted           bool                 `protobuf:"varint,84,opt,name=is_data_inverted,json=isDataInverted,proto3" json:"is_data_inverted,omitempty"`
	TransportMode            string               `protobuf:"bytes,85,opt,name=transport_mode,json=transportMode,proto3" json:"transport_mode,omitempty"`
	FastShutdown             bool                 `protobuf:"varint,86,opt,name=fast_shutdown,json=fastShutdown,proto3" json:"fast_shutdown,omitempty"`
	EncapsulationInformation *ImCmdEncapsInfo     `protobuf:"bytes,87,opt,name=encapsulation_information,json=encapsulationInformation,proto3" json:"encapsulation_information,omitempty"`
	InterfaceTypeInformation *ImCmdIntfTypeInfo   `protobuf:"bytes,88,opt,name=interface_type_information,json=interfaceTypeInformation,proto3" json:"interface_type_information,omitempty"`
	DataRates                *StatsdbagDatarate   `protobuf:"bytes,89,opt,name=data_rates,json=dataRates,proto3" json:"data_rates,omitempty"`
	InterfaceStatistics      *ImCmdIfStats        `protobuf:"bytes,90,opt,name=interface_statistics,json=interfaceStatistics,proto3" json:"interface_statistics,omitempty"`
	L2InterfaceStatistics    *StatsData           `protobuf:"bytes,91,opt,name=l2_interface_statistics,json=l2InterfaceStatistics,proto3" json:"l2_interface_statistics,omitempty"`
	IfIndex                  uint32               `protobuf:"varint,92,opt,name=if_index,json=ifIndex,proto3" json:"if_index,omitempty"`
	XXX_NoUnkeyedLiteral     struct{}             `json:"-"`
	XXX_unrecognized         []byte               `json:"-"`
	XXX_sizecache            int32                `json:"-"`
}

func (m *ImCmdInfo) Reset()         { *m = ImCmdInfo{} }
func (m *ImCmdInfo) String() string { return proto.CompactTextString(m) }
func (*ImCmdInfo) ProtoMessage()    {}
func (*ImCmdInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_9abf17a6a17540ff, []int{59}
}

func (m *ImCmdInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ImCmdInfo.Unmarshal(m, b)
}
func (m *ImCmdInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ImCmdInfo.Marshal(b, m, deterministic)
}
func (m *ImCmdInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ImCmdInfo.Merge(m, src)
}
func (m *ImCmdInfo) XXX_Size() int {
	return xxx_messageInfo_ImCmdInfo.Size(m)
}
func (m *ImCmdInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_ImCmdInfo.DiscardUnknown(m)
}

var xxx_messageInfo_ImCmdInfo proto.InternalMessageInfo

func (m *ImCmdInfo) GetInterfaceHandle() string {
	if m != nil {
		return m.InterfaceHandle
	}
	return ""
}

func (m *ImCmdInfo) GetInterfaceType() string {
	if m != nil {
		return m.InterfaceType
	}
	return ""
}

func (m *ImCmdInfo) GetHardwareTypeString() string {
	if m != nil {
		return m.HardwareTypeString
	}
	return ""
}

func (m *ImCmdInfo) GetState() string {
	if m != nil {
		return m.State
	}
	return ""
}

func (m *ImCmdInfo) GetLineState() string {
	if m != nil {
		return m.LineState
	}
	return ""
}

func (m *ImCmdInfo) GetEncapsulation() string {
	if m != nil {
		return m.Encapsulation
	}
	return ""
}

func (m *ImCmdInfo) GetEncapsulationTypeString() string {
	if m != nil {
		return m.EncapsulationTypeString
	}
	return ""
}

func (m *ImCmdInfo) GetMtu() uint32 {
	if m != nil {
		return m.Mtu
	}
	return 0
}

func (m *ImCmdInfo) GetIsL2TransportEnabled() bool {
	if m != nil {
		return m.IsL2TransportEnabled
	}
	return false
}

func (m *ImCmdInfo) GetStateTransitionCount() uint32 {
	if m != nil {
		return m.StateTransitionCount
	}
	return 0
}

func (m *ImCmdInfo) GetLastStateTransitionTime() uint32 {
	if m != nil {
		return m.LastStateTransitionTime
	}
	return 0
}

func (m *ImCmdInfo) GetIsDampeningEnabled() bool {
	if m != nil {
		return m.IsDampeningEnabled
	}
	return false
}

func (m *ImCmdInfo) GetDampeningInformation() *ImCmdDampSt {
	if m != nil {
		return m.DampeningInformation
	}
	return nil
}

func (m *ImCmdInfo) GetSpeed() uint32 {
	if m != nil {
		return m.Speed
	}
	return 0
}

func (m *ImCmdInfo) GetCrcLength() uint32 {
	if m != nil {
		return m.CrcLength
	}
	return 0
}

func (m *ImCmdInfo) GetIsScrambleEnabled() bool {
	if m != nil {
		return m.IsScrambleEnabled
	}
	return false
}

func (m *ImCmdInfo) GetDuplexity() string {
	if m != nil {
		return m.Duplexity
	}
	return ""
}

func (m *ImCmdInfo) GetMediaType() string {
	if m != nil {
		return m.MediaType
	}
	return ""
}

func (m *ImCmdInfo) GetLinkType() string {
	if m != nil {
		return m.LinkType
	}
	return ""
}

func (m *ImCmdInfo) GetInFlowControl() string {
	if m != nil {
		return m.InFlowControl
	}
	return ""
}

func (m *ImCmdInfo) GetOutFlowControl() string {
	if m != nil {
		return m.OutFlowControl
	}
	return ""
}

func (m *ImCmdInfo) GetMacAddress() *ImCmdMacAddrSt {
	if m != nil {
		return m.MacAddress
	}
	return nil
}

func (m *ImCmdInfo) GetBurnedInAddress() *ImCmdMacAddrSt {
	if m != nil {
		return m.BurnedInAddress
	}
	return nil
}

func (m *ImCmdInfo) GetCarrierDelay() *ImCmdCarrierDelaySt {
	if m != nil {
		return m.CarrierDelay
	}
	return nil
}

func (m *ImCmdInfo) GetBandwidth() uint32 {
	if m != nil {
		return m.Bandwidth
	}
	return 0
}

func (m *ImCmdInfo) GetMaxBandwidth() uint32 {
	if m != nil {
		return m.MaxBandwidth
	}
	return 0
}

func (m *ImCmdInfo) GetKeepalive() uint32 {
	if m != nil {
		return m.Keepalive
	}
	return 0
}

func (m *ImCmdInfo) GetIsL2Looped() bool {
	if m != nil {
		return m.IsL2Looped
	}
	return false
}

func (m *ImCmdInfo) GetParentInterfaceName() string {
	if m != nil {
		return m.ParentInterfaceName
	}
	return ""
}

func (m *ImCmdInfo) GetLoopbackConfiguration() string {
	if m != nil {
		return m.LoopbackConfiguration
	}
	return ""
}

func (m *ImCmdInfo) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *ImCmdInfo) GetArpInformation() *ImCmdArpInfoSt {
	if m != nil {
		return m.ArpInformation
	}
	return nil
}

func (m *ImCmdInfo) GetIpInformation() *ImCmdIpInfoSt {
	if m != nil {
		return m.IpInformation
	}
	return nil
}

func (m *ImCmdInfo) GetIsMaintenanceEnabled() bool {
	if m != nil {
		return m.IsMaintenanceEnabled
	}
	return false
}

func (m *ImCmdInfo) GetIsDataInverted() bool {
	if m != nil {
		return m.IsDataInverted
	}
	return false
}

func (m *ImCmdInfo) GetTransportMode() string {
	if m != nil {
		return m.TransportMode
	}
	return ""
}

func (m *ImCmdInfo) GetFastShutdown() bool {
	if m != nil {
		return m.FastShutdown
	}
	return false
}

func (m *ImCmdInfo) GetEncapsulationInformation() *ImCmdEncapsInfo {
	if m != nil {
		return m.EncapsulationInformation
	}
	return nil
}

func (m *ImCmdInfo) GetInterfaceTypeInformation() *ImCmdIntfTypeInfo {
	if m != nil {
		return m.InterfaceTypeInformation
	}
	return nil
}

func (m *ImCmdInfo) GetDataRates() *StatsdbagDatarate {
	if m != nil {
		return m.DataRates
	}
	return nil
}

func (m *ImCmdInfo) GetInterfaceStatistics() *ImCmdIfStats {
	if m != nil {
		return m.InterfaceStatistics
	}
	return nil
}

func (m *ImCmdInfo) GetL2InterfaceStatistics() *StatsData {
	if m != nil {
		return m.L2InterfaceStatistics
	}
	return nil
}

func (m *ImCmdInfo) GetIfIndex() uint32 {
	if m != nil {
		return m.IfIndex
	}
	return 0
}

func init() {
	proto.RegisterType((*ImCmdInfo_KEYS)(nil), "cisco_ios_xr_pfi_im_cmd_oper.interfaces.interface_xr.interface.im_cmd_info_KEYS")
	proto.RegisterType((*ImCmdDampSt)(nil), "cisco_ios_xr_pfi_im_cmd_oper.interfaces.interface_xr.interface.im_cmd_damp_st")
	proto.RegisterType((*ImCmdMacAddrSt)(nil), "cisco_ios_xr_pfi_im_cmd_oper.interfaces.interface_xr.interface.im_cmd_mac_addr_st")
	proto.RegisterType((*ImCmdCarrierDelaySt)(nil), "cisco_ios_xr_pfi_im_cmd_oper.interfaces.interface_xr.interface.im_cmd_carrier_delay_st")
	proto.RegisterType((*ImCmdArpInfoSt)(nil), "cisco_ios_xr_pfi_im_cmd_oper.interfaces.interface_xr.interface.im_cmd_arp_info_st")
	proto.RegisterType((*ImCmdIpInfoSt)(nil), "cisco_ios_xr_pfi_im_cmd_oper.interfaces.interface_xr.interface.im_cmd_ip_info_st")
	proto.RegisterType((*ImCmdFrInfo)(nil), "cisco_ios_xr_pfi_im_cmd_oper.interfaces.interface_xr.interface.im_cmd_fr_info")
	proto.RegisterType((*VlanDoubleTagStack)(nil), "cisco_ios_xr_pfi_im_cmd_oper.interfaces.interface_xr.interface.vlan_double_tag_stack")
	proto.RegisterType((*EfpRange)(nil), "cisco_ios_xr_pfi_im_cmd_oper.interfaces.interface_xr.interface.efp_range")
	proto.RegisterType((*EfpTagMatch)(nil), "cisco_ios_xr_pfi_im_cmd_oper.interfaces.interface_xr.interface.efp_tag_match")
	proto.RegisterType((*EfpVlanTag)(nil), "cisco_ios_xr_pfi_im_cmd_oper.interfaces.interface_xr.interface.efp_vlan_tag")
	proto.RegisterType((*EfpTagLocalTrafficStack)(nil), "cisco_ios_xr_pfi_im_cmd_oper.interfaces.interface_xr.interface.efp_tag_local_traffic_stack")
	proto.RegisterType((*EfpDescription)(nil), "cisco_ios_xr_pfi_im_cmd_oper.interfaces.interface_xr.interface.efp_description")
	proto.RegisterType((*VlanTagStackType)(nil), "cisco_ios_xr_pfi_im_cmd_oper.interfaces.interface_xr.interface.vlan_tag_stack_type")
	proto.RegisterType((*VlanIntfGeneric)(nil), "cisco_ios_xr_pfi_im_cmd_oper.interfaces.interface_xr.interface.vlan_intf_generic")
	proto.RegisterType((*PppShowIntNcpInfo)(nil), "cisco_ios_xr_pfi_im_cmd_oper.interfaces.interface_xr.interface.ppp_show_int_ncp_info")
	proto.RegisterType((*PppShowIntInfo)(nil), "cisco_ios_xr_pfi_im_cmd_oper.interfaces.interface_xr.interface.ppp_show_int_info")
	proto.RegisterType((*ImCmdEncapsInfo)(nil), "cisco_ios_xr_pfi_im_cmd_oper.interfaces.interface_xr.interface.im_cmd_encaps_info")
	proto.RegisterType((*SrpFailureInfo)(nil), "cisco_ios_xr_pfi_im_cmd_oper.interfaces.interface_xr.interface.srp_failure_info")
	proto.RegisterType((*SrpIpsSideDetail)(nil), "cisco_ios_xr_pfi_im_cmd_oper.interfaces.interface_xr.interface.srp_ips_side_detail")
	proto.RegisterType((*SrpIpsDetail)(nil), "cisco_ios_xr_pfi_im_cmd_oper.interfaces.interface_xr.interface.srp_ips_detail")
	proto.RegisterType((*SrpIpsInfo)(nil), "cisco_ios_xr_pfi_im_cmd_oper.interfaces.interface_xr.interface.srp_ips_info")
	proto.RegisterType((*SrpTopologyNodeData)(nil), "cisco_ios_xr_pfi_im_cmd_oper.interfaces.interface_xr.interface.srp_topology_node_data")
	proto.RegisterType((*SrpTopologyMap)(nil), "cisco_ios_xr_pfi_im_cmd_oper.interfaces.interface_xr.interface.srp_topology_map")
	proto.RegisterType((*SrpTopologyInfo)(nil), "cisco_ios_xr_pfi_im_cmd_oper.interfaces.interface_xr.interface.srp_topology_info")
	proto.RegisterType((*SrrNodeData)(nil), "cisco_ios_xr_pfi_im_cmd_oper.interfaces.interface_xr.interface.srr_node_data")
	proto.RegisterType((*SrpSrrDetail)(nil), "cisco_ios_xr_pfi_im_cmd_oper.interfaces.interface_xr.interface.srp_srr_detail")
	proto.RegisterType((*SrpSrrInfo)(nil), "cisco_ios_xr_pfi_im_cmd_oper.interfaces.interface_xr.interface.srp_srr_info")
	proto.RegisterType((*SrpRateLimitDetail)(nil), "cisco_ios_xr_pfi_im_cmd_oper.interfaces.interface_xr.interface.srp_rate_limit_detail")
	proto.RegisterType((*SrpRateLimitInfo)(nil), "cisco_ios_xr_pfi_im_cmd_oper.interfaces.interface_xr.interface.srp_rate_limit_info")
	proto.RegisterType((*SrpAllInfo)(nil), "cisco_ios_xr_pfi_im_cmd_oper.interfaces.interface_xr.interface.srp_all_info")
	proto.RegisterType((*IfstatsSrpPerSideDataRateSt)(nil), "cisco_ios_xr_pfi_im_cmd_oper.interfaces.interface_xr.interface.ifstats_srp_per_side_data_rate_st")
	proto.RegisterType((*IfstatsSrpPerSideErrorsSt)(nil), "cisco_ios_xr_pfi_im_cmd_oper.interfaces.interface_xr.interface.ifstats_srp_per_side_errors_st")
	proto.RegisterType((*IfstatsbagSrp)(nil), "cisco_ios_xr_pfi_im_cmd_oper.interfaces.interface_xr.interface.ifstatsbag_srp")
	proto.RegisterType((*ImCmdSrpInfo)(nil), "cisco_ios_xr_pfi_im_cmd_oper.interfaces.interface_xr.interface.im_cmd_srp_info")
	proto.RegisterType((*ImCmdTunnelInfo)(nil), "cisco_ios_xr_pfi_im_cmd_oper.interfaces.interface_xr.interface.im_cmd_tunnel_info")
	proto.RegisterType((*BmLacpCounters)(nil), "cisco_ios_xr_pfi_im_cmd_oper.interfaces.interface_xr.interface.bm_lacp_counters")
	proto.RegisterType((*BmLacpLinkData)(nil), "cisco_ios_xr_pfi_im_cmd_oper.interfaces.interface_xr.interface.bm_lacp_link_data")
	proto.RegisterType((*BmMbrStateReasonDataType)(nil), "cisco_ios_xr_pfi_im_cmd_oper.interfaces.interface_xr.interface.bm_mbr_state_reason_data_type")
	proto.RegisterType((*BmMuxData)(nil), "cisco_ios_xr_pfi_im_cmd_oper.interfaces.interface_xr.interface.bm_mux_data")
	proto.RegisterType((*BmMacAddrSt)(nil), "cisco_ios_xr_pfi_im_cmd_oper.interfaces.interface_xr.interface.bm_mac_addr_st")
	proto.RegisterType((*BmMemberData)(nil), "cisco_ios_xr_pfi_im_cmd_oper.interfaces.interface_xr.interface.bm_member_data")
	proto.RegisterType((*ImCmdBundleInfo)(nil), "cisco_ios_xr_pfi_im_cmd_oper.interfaces.interface_xr.interface.im_cmd_bundle_info")
	proto.RegisterType((*SerialInterface)(nil), "cisco_ios_xr_pfi_im_cmd_oper.interfaces.interface_xr.interface.serial_interface")
	proto.RegisterType((*ImSonetPosInfoInterface)(nil), "cisco_ios_xr_pfi_im_cmd_oper.interfaces.interface_xr.interface.im_sonet_pos_info_interface")
	proto.RegisterType((*PfiIpAddrUnion)(nil), "cisco_ios_xr_pfi_im_cmd_oper.interfaces.interface_xr.interface.pfi_ip_addr_union")
	proto.RegisterType((*ImCmdTunlGreInfo)(nil), "cisco_ios_xr_pfi_im_cmd_oper.interfaces.interface_xr.interface.im_cmd_tunl_gre_info")
	proto.RegisterType((*PwheEtherInterfaceInfo)(nil), "cisco_ios_xr_pfi_im_cmd_oper.interfaces.interface_xr.interface.pwhe_ether_interface_info")
	proto.RegisterType((*CemInterface)(nil), "cisco_ios_xr_pfi_im_cmd_oper.interfaces.interface_xr.interface.cem_interface")
	proto.RegisterType((*ImCmdGccPerPortInfo)(nil), "cisco_ios_xr_pfi_im_cmd_oper.interfaces.interface_xr.interface.im_cmd_gcc_per_port_info")
	proto.RegisterType((*ImCmdIntfTypeInfo)(nil), "cisco_ios_xr_pfi_im_cmd_oper.interfaces.interface_xr.interface.im_cmd_intf_type_info")
	proto.RegisterType((*StatsdbagDatarate)(nil), "cisco_ios_xr_pfi_im_cmd_oper.interfaces.interface_xr.interface.statsdbag_datarate")
	proto.RegisterType((*IfstatsbagGeneric)(nil), "cisco_ios_xr_pfi_im_cmd_oper.interfaces.interface_xr.interface.ifstatsbag_generic")
	proto.RegisterType((*IfstatsbagBasic)(nil), "cisco_ios_xr_pfi_im_cmd_oper.interfaces.interface_xr.interface.ifstatsbag_basic")
	proto.RegisterType((*ImCmdIfStats)(nil), "cisco_ios_xr_pfi_im_cmd_oper.interfaces.interface_xr.interface.im_cmd_if_stats")
	proto.RegisterType((*StatsBagIdTd)(nil), "cisco_ios_xr_pfi_im_cmd_oper.interfaces.interface_xr.interface.stats_bag_id_td")
	proto.RegisterType((*StatsBagBlockSt)(nil), "cisco_ios_xr_pfi_im_cmd_oper.interfaces.interface_xr.interface.stats_bag_block_st")
	proto.RegisterType((*StatsBagElementSt)(nil), "cisco_ios_xr_pfi_im_cmd_oper.interfaces.interface_xr.interface.stats_bag_element_st")
	proto.RegisterType((*StatsData)(nil), "cisco_ios_xr_pfi_im_cmd_oper.interfaces.interface_xr.interface.stats_data")
	proto.RegisterType((*ImCmdInfo)(nil), "cisco_ios_xr_pfi_im_cmd_oper.interfaces.interface_xr.interface.im_cmd_info")
}

func init() { proto.RegisterFile("im_cmd_info.proto", fileDescriptor_9abf17a6a17540ff) }

var fileDescriptor_9abf17a6a17540ff = []byte{
	// 7005 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xcc, 0x7c, 0x5d, 0x6f, 0x1c, 0xc9,
	0x75, 0x28, 0x86, 0xdf, 0x73, 0x86, 0x33, 0xe4, 0x34, 0x39, 0xe4, 0x88, 0x92, 0x56, 0xd2, 0x68,
	0x6d, 0x6b, 0xd7, 0x6b, 0x79, 0x4d, 0x6b, 0xbf, 0xbc, 0xeb, 0x0f, 0x49, 0xd4, 0x7a, 0xe9, 0x25,
	0x25, 0x6d, 0x93, 0xda, 0xf5, 0xd7, 0xbd, 0x7d, 0x6b, 0xba, 0x6b, 0x86, 0x65, 0xf6, 0x74, 0xb7,
	0xba, 0x6a, 0x44, 0xd2, 0x6b, 0xfb, 0x7e, 0xd8, 0xf0, 0xf5, 0xf5, 0x05, 0xae, 0x81, 0xeb, 0x07,
	0x3f, 0x39, 0x30, 0x90, 0xbc, 0x27, 0x40, 0xe0, 0x00, 0x41, 0x00, 0x3f, 0x07, 0x41, 0x80, 0xbc,
	0x24, 0x8f, 0x41, 0x80, 0xc0, 0x7e, 0xcc, 0x0f, 0x48, 0x80, 0x20, 0x41, 0x9d, 0x53, 0xd5, 0x1f,
	0x33, 0x43, 0x5b, 0x88, 0x66, 0x8d, 0xbc, 0x90, 0xd3, 0xe7, 0x9c, 0xaa, 0x73, 0xaa, 0xea, 0xd4,
	0x39, 0xa7, 0xce, 0xa9, 0x6e, 0x68, 0x8a, 0x81, 0xe7, 0x0f, 0x02, 0x4f, 0x44, 0xbd, 0xf8, 0x66,
	0x92, 0xc6, 0x2a, 0x76, 0xbe, 0xe0, 0x0b, 0xe9, 0xc7, 0x9e, 0x88, 0xa5, 0x77, 0x9a, 0x7a, 0x49,
	0x4f, 0x78, 0x86, 0x26, 0x4e, 0x78, 0x7a, 0x53, 0x44, 0x8a, 0xa7, 0x3d, 0xe6, 0x73, 0x99, 0xff,
	0xf4, 0x4e, 0x0b, 0xf0, 0xce, 0x1b, 0xb0, 0x5a, 0xe8, 0xd4, 0x7b, 0xf7, 0xde, 0xd7, 0x0e, 0x9c,
	0x8f, 0x41, 0x23, 0xa7, 0x8e, 0xd8, 0x80, 0xb7, 0x2b, 0x57, 0x2b, 0x37, 0xaa, 0x6e, 0x3d, 0x83,
	0xde, 0x67, 0x03, 0xde, 0xf9, 0xfb, 0x19, 0x68, 0x98, 0xb6, 0x01, 0x1b, 0x24, 0x9e, 0x54, 0x4e,
	0x1b, 0x16, 0x13, 0x1e, 0xb1, 0x50, 0x9d, 0x61, 0x93, 0xba, 0x6b, 0x1f, 0x9d, 0x6d, 0x68, 0x09,
	0xe9, 0xc9, 0x61, 0x92, 0xa4, 0x5c, 0x4a, 0x1e, 0x78, 0x3c, 0x62, 0xdd, 0x90, 0x07, 0xed, 0x99,
	0xab, 0x95, 0x1b, 0x4b, 0xee, 0x9a, 0x90, 0x07, 0x19, 0xee, 0x1e, 0xa1, 0x9c, 0x4f, 0x42, 0x53,
	0x72, 0x3f, 0x8e, 0x02, 0xe9, 0xa5, 0x7c, 0xc0, 0x44, 0x24, 0xa2, 0x7e, 0x7b, 0x16, 0xfb, 0x5d,
	0x35, 0x08, 0xd7, 0xc2, 0x9d, 0x8b, 0x50, 0x3d, 0x62, 0x61, 0xcf, 0x0b, 0x45, 0x8f, 0xb7, 0xe7,
	0x90, 0x68, 0x49, 0x03, 0xf6, 0x44, 0x8f, 0x3b, 0x9f, 0x80, 0x95, 0x94, 0x0f, 0x25, 0xf7, 0xd4,
	0x51, 0xca, 0xe5, 0x51, 0x1c, 0x06, 0xed, 0x79, 0x24, 0x69, 0x20, 0xf8, 0xd0, 0x42, 0x9d, 0x4f,
	0x81, 0x63, 0x65, 0x2c, 0xd0, 0x2e, 0x20, 0x6d, 0xd3, 0x62, 0x72, 0xf2, 0x6d, 0x68, 0x0d, 0xd8,
	0xa9, 0x18, 0x0c, 0x07, 0x5e, 0xde, 0x4c, 0x0c, 0x78, 0x7b, 0x11, 0x5b, 0xac, 0x19, 0xa4, 0x1d,
	0xda, 0xa1, 0x18, 0x18, 0x59, 0xa4, 0x62, 0xa9, 0xf2, 0xec, 0x5c, 0x2d, 0x59, 0x59, 0x10, 0xfc,
	0x90, 0xa0, 0x9d, 0x9b, 0xe0, 0x98, 0xe9, 0x1d, 0x30, 0xdf, 0x63, 0x41, 0x90, 0x9a, 0x29, 0xd6,
	0x3f, 0xb9, 0x94, 0x66, 0x55, 0xec, 0x63, 0xe7, 0x31, 0x6c, 0x1a, 0x7a, 0x9f, 0xa5, 0xa9, 0xe0,
	0xa9, 0x17, 0xf0, 0x90, 0x9d, 0xe9, 0x46, 0x37, 0x60, 0xb5, 0x0c, 0x1b, 0x26, 0x66, 0x81, 0x1a,
	0x06, 0xbe, 0xa3, 0xc1, 0x8f, 0x12, 0xe7, 0x25, 0x70, 0xca, 0x94, 0x41, 0x7c, 0x12, 0xe1, 0x22,
	0xd5, 0xdd, 0xd5, 0x22, 0xed, 0x4e, 0x7c, 0x12, 0x75, 0xfe, 0x7f, 0x25, 0x93, 0x91, 0xa5, 0x09,
	0xa9, 0x90, 0x54, 0xce, 0x15, 0xa8, 0xe9, 0x47, 0x3d, 0x13, 0xf1, 0x50, 0x19, 0x4e, 0xc0, 0xd2,
	0xe4, 0x90, 0x20, 0x4e, 0x07, 0xea, 0x48, 0x70, 0x96, 0x18, 0x05, 0x9b, 0xc1, 0xa1, 0xe8, 0x56,
	0x87, 0x67, 0x09, 0xaa, 0x97, 0xf3, 0x1a, 0xb4, 0xb1, 0x4f, 0xe9, 0x85, 0x9c, 0xa5, 0x7a, 0x8d,
	0xbd, 0x40, 0x48, 0x52, 0x9a, 0x59, 0x54, 0x9a, 0x16, 0x4b, 0x93, 0x5d, 0xb9, 0x67, 0xb0, 0x3b,
	0x06, 0xd9, 0xf9, 0x6f, 0xf9, 0x3e, 0xc9, 0x45, 0xba, 0x0c, 0x20, 0x12, 0xaf, 0x3c, 0x73, 0x55,
	0x91, 0xdc, 0x26, 0x80, 0x1e, 0xb6, 0x1c, 0x76, 0x23, 0xae, 0xbc, 0x01, 0x93, 0xc7, 0x5e, 0xc8,
	0xa3, 0xbe, 0x3a, 0xb2, 0xc3, 0x26, 0xcc, 0x3e, 0x93, 0xc7, 0x7b, 0x08, 0xef, 0xfc, 0x6c, 0x2e,
	0xd3, 0xfc, 0x5e, 0x8a, 0x2c, 0xb4, 0x26, 0xf4, 0x52, 0x8f, 0x47, 0x3e, 0x4b, 0xe4, 0x30, 0x64,
	0x4a, 0xc4, 0x11, 0x0e, 0xcf, 0xb0, 0x5a, 0xeb, 0xa5, 0xf7, 0x8a, 0x38, 0x3d, 0x4a, 0xe7, 0x02,
	0x2c, 0x85, 0x03, 0x41, 0x64, 0x34, 0x01, 0x8b, 0xe1, 0x40, 0x20, 0xaa, 0x0d, 0xfa, 0x67, 0x10,
	0xfa, 0xc2, 0x28, 0xbc, 0x7d, 0x74, 0x5a, 0xb0, 0x20, 0xa4, 0x17, 0x45, 0x02, 0x95, 0x7c, 0xc9,
	0x9d, 0x17, 0xf2, 0x7e, 0x64, 0xc1, 0x81, 0xe2, 0xa8, 0xd8, 0x08, 0xde, 0x51, 0xdc, 0xd9, 0x82,
	0xaa, 0x9e, 0xc0, 0x81, 0xd0, 0x2b, 0xbe, 0x80, 0x98, 0x45, 0x21, 0xf7, 0x06, 0xe2, 0x51, 0xe2,
	0xdc, 0x80, 0xa6, 0xc1, 0x45, 0x91, 0xf0, 0x02, 0x9f, 0x6b, 0x9a, 0x45, 0xa4, 0xa9, 0x23, 0xcd,
	0xfd, 0x48, 0xec, 0xf8, 0xfc, 0x51, 0xe2, 0x3c, 0x0f, 0x0d, 0x43, 0x69, 0x77, 0xed, 0x12, 0x92,
	0x2d, 0x23, 0x99, 0xdd, 0xae, 0x9f, 0x02, 0x87, 0x47, 0x8f, 0x87, 0x22, 0x15, 0x5c, 0x6f, 0x58,
	0x9f, 0x8b, 0x27, 0x3c, 0x68, 0x57, 0x69, 0xef, 0x64, 0x18, 0xd7, 0x20, 0xb4, 0x95, 0xc9, 0xc9,
	0x25, 0x8f, 0x54, 0x1b, 0x90, 0xb4, 0x9e, 0x41, 0x0f, 0x78, 0xa4, 0xf4, 0x76, 0x91, 0x8a, 0xa9,
	0x61, 0xa1, 0xcb, 0x1a, 0x69, 0x2e, 0x81, 0xb3, 0xfe, 0xae, 0x40, 0xcd, 0x10, 0x62, 0x67, 0xcb,
	0xa4, 0x74, 0x04, 0xc2, 0x9e, 0x6e, 0xc1, 0xc6, 0x30, 0x09, 0x98, 0xe2, 0xde, 0x68, 0x87, 0x75,
	0xa4, 0x5d, 0x27, 0xec, 0x41, 0xb9, 0xdb, 0x97, 0xc0, 0x29, 0xb7, 0xc2, 0xde, 0x1b, 0xa4, 0x19,
	0xc5, 0x16, 0x9a, 0x47, 0xe7, 0x00, 0x5a, 0x4f, 0x42, 0x16, 0x79, 0x41, 0x3c, 0xec, 0x86, 0xdc,
	0x53, 0xac, 0xaf, 0x9b, 0xf9, 0xc7, 0xda, 0x3c, 0xc5, 0x43, 0xc5, 0x53, 0x0d, 0x32, 0x1b, 0x62,
	0x09, 0x01, 0x87, 0xac, 0xaf, 0x95, 0x93, 0xec, 0x19, 0x62, 0x49, 0xeb, 0xaa, 0x04, 0x39, 0x64,
	0xfd, 0xce, 0x3e, 0x54, 0x79, 0x2f, 0xf1, 0x52, 0x16, 0xf5, 0xb9, 0xf3, 0x1c, 0xd4, 0x90, 0x83,
	0x08, 0xbc, 0x30, 0x3e, 0x31, 0x5d, 0x55, 0x35, 0x68, 0x37, 0xd8, 0x8b, 0x4f, 0x9c, 0xab, 0xb0,
	0x6c, 0xf1, 0x47, 0xa2, 0x6f, 0x75, 0x18, 0x88, 0xe0, 0x1d, 0xd1, 0x3f, 0xea, 0xfc, 0x69, 0x05,
	0xea, 0xba, 0x3f, 0x2d, 0xdc, 0x80, 0x29, 0xff, 0xc8, 0xb9, 0x04, 0x55, 0xae, 0x8e, 0x78, 0x5a,
	0x50, 0xd8, 0x1c, 0xe0, 0x1c, 0x01, 0xb6, 0x26, 0xfe, 0xed, 0x99, 0xab, 0xb3, 0x37, 0x6a, 0xdb,
	0xbb, 0x37, 0x9f, 0xcd, 0xef, 0xdc, 0xcc, 0x06, 0x44, 0xb2, 0xbb, 0x38, 0xb6, 0x2d, 0x58, 0x4a,
	0x52, 0x11, 0xa7, 0x42, 0x9d, 0xa1, 0xda, 0x57, 0xdd, 0xec, 0xb9, 0x73, 0x0f, 0x96, 0x75, 0x1b,
	0x94, 0x44, 0xb1, 0xfe, 0xef, 0x90, 0x79, 0x13, 0x16, 0xcd, 0x2c, 0x98, 0x09, 0x58, 0xa0, 0x09,
	0xe8, 0xfc, 0xac, 0x02, 0x17, 0xed, 0xe0, 0xc3, 0xd8, 0x67, 0xa1, 0xa7, 0x52, 0xd6, 0xeb, 0x09,
	0xdf, 0xac, 0xd3, 0x29, 0x34, 0xcb, 0x60, 0x5a, 0x2f, 0x3d, 0xe6, 0xbd, 0x69, 0x8c, 0xd9, 0xca,
	0xef, 0xae, 0x20, 0x9b, 0x43, 0xe2, 0xa2, 0x57, 0xf9, 0x17, 0xf3, 0xb0, 0xa2, 0x29, 0x02, 0x2e,
	0xfd, 0x54, 0x24, 0xda, 0x4a, 0x38, 0x8f, 0xa1, 0xae, 0x58, 0x5f, 0x7a, 0x2a, 0xa6, 0x95, 0x32,
	0x92, 0xec, 0x4f, 0x43, 0x92, 0x6c, 0xf9, 0xdd, 0x9a, 0xe6, 0x71, 0x18, 0xef, 0xa3, 0x2e, 0x7c,
	0x12, 0x9a, 0x09, 0x3b, 0x0b, 0x63, 0x16, 0x78, 0xf9, 0xfc, 0x92, 0x75, 0x5a, 0x35, 0x88, 0x7b,
	0xd9, 0x34, 0x5f, 0x01, 0x6c, 0xeb, 0x25, 0x71, 0x92, 0x18, 0xb3, 0x5c, 0x77, 0x41, 0x83, 0x1e,
	0x22, 0xc4, 0xe9, 0xc2, 0x7c, 0x32, 0x94, 0x47, 0xda, 0x23, 0x4f, 0x7f, 0x0a, 0xa9, 0x6b, 0xe7,
	0xff, 0x56, 0x60, 0x6d, 0xc2, 0x52, 0xa2, 0x21, 0xac, 0x6d, 0x7f, 0x63, 0x5a, 0x73, 0x35, 0x81,
	0x85, 0xdb, 0x2c, 0x2e, 0xe2, 0x01, 0x2a, 0x10, 0xd9, 0x4a, 0x7e, 0xca, 0x7c, 0x65, 0xd6, 0x4c,
	0x9b, 0xdd, 0xa6, 0xb6, 0x95, 0xf7, 0x34, 0x90, 0x66, 0x99, 0xa8, 0x22, 0xa6, 0xc4, 0x13, 0x8e,
	0x03, 0x42, 0xc3, 0x8b, 0x54, 0xf7, 0x11, 0xf8, 0x7e, 0xc8, 0x22, 0xe7, 0x65, 0x58, 0xcf, 0xa9,
	0x74, 0x04, 0xc1, 0xd3, 0x27, 0x3a, 0x06, 0x5a, 0x42, 0x5a, 0xc7, 0xd2, 0x3e, 0xcc, 0x30, 0xda,
	0xd1, 0xcb, 0x78, 0x98, 0xfa, 0x1c, 0x63, 0x06, 0xe2, 0x5f, 0xc5, 0xc5, 0x6b, 0x10, 0x7c, 0x9f,
	0xf9, 0x24, 0xc1, 0x36, 0xb4, 0x02, 0x2e, 0x95, 0x88, 0xc8, 0x57, 0xe5, 0xe4, 0x40, 0x0e, 0xab,
	0x80, 0xb4, 0x6d, 0x3a, 0x3f, 0x9c, 0x87, 0x35, 0x3b, 0xfb, 0x34, 0x03, 0xe8, 0xbc, 0xb4, 0xe5,
	0x47, 0x70, 0xc9, 0xfd, 0x99, 0x4d, 0xd9, 0xd4, 0x98, 0x92, 0xef, 0x73, 0x56, 0x61, 0x36, 0xb7,
	0x73, 0xfa, 0xa7, 0x73, 0x0c, 0xf3, 0xb4, 0x66, 0xb3, 0xb8, 0x66, 0x8f, 0x9e, 0x75, 0xcd, 0x26,
	0xda, 0x60, 0x77, 0x7e, 0x82, 0x29, 0x9e, 0x1b, 0x37, 0xc5, 0x66, 0xbe, 0x35, 0x96, 0x82, 0xc4,
	0x2a, 0x41, 0x0c, 0x3a, 0x88, 0xd5, 0x67, 0x18, 0x59, 0x6a, 0x8a, 0x0b, 0xab, 0x04, 0xd1, 0xe8,
	0x17, 0xa1, 0x69, 0xd0, 0x85, 0x4e, 0x28, 0x16, 0x5c, 0x21, 0xc4, 0xfd, 0xac, 0xab, 0xff, 0x53,
	0x81, 0x36, 0x2e, 0x9b, 0xcf, 0x3d, 0x11, 0x49, 0xc5, 0x22, 0x9f, 0x7b, 0x01, 0x57, 0x4c, 0x84,
	0x12, 0x57, 0xb8, 0xb6, 0xfd, 0x60, 0x1a, 0xba, 0x5b, 0xb0, 0x27, 0xee, 0x86, 0x61, 0xb8, 0x6b,
	0xf8, 0xed, 0x10, 0x3b, 0xe7, 0xfb, 0x15, 0x70, 0x8c, 0xe0, 0xfa, 0xdf, 0x63, 0xb3, 0x83, 0xaa,
	0x1f, 0xe5, 0x6a, 0xac, 0x12, 0xc3, 0x1d, 0xcd, 0x8f, 0xb6, 0xce, 0x0d, 0x30, 0x30, 0x2f, 0x5f,
	0x1f, 0x8a, 0x09, 0x1a, 0x04, 0x7f, 0x60, 0x56, 0xa9, 0xf3, 0x07, 0x15, 0x68, 0x92, 0x7d, 0x8f,
	0x54, 0xcf, 0xeb, 0xf3, 0x88, 0xa7, 0xc2, 0x77, 0x7e, 0x54, 0x81, 0x56, 0x39, 0x02, 0xb3, 0xd3,
	0x59, 0xc1, 0x81, 0x1c, 0x4c, 0x65, 0x20, 0x65, 0xdd, 0x77, 0xd7, 0x4b, 0x1c, 0xcd, 0x84, 0x76,
	0xbe, 0x01, 0xad, 0x24, 0x49, 0x3c, 0x79, 0x14, 0x9f, 0x68, 0x19, 0xbd, 0xc8, 0xa7, 0x50, 0x54,
	0x2b, 0x9f, 0xfe, 0xad, 0x63, 0x09, 0xeb, 0xb6, 0x96, 0x22, 0x3f, 0xd1, 0x21, 0x04, 0xd7, 0x21,
	0x11, 0x12, 0x06, 0x3c, 0x52, 0xa2, 0x27, 0x78, 0x6a, 0x0c, 0x6f, 0x3d, 0xf2, 0x93, 0xdd, 0x0c,
	0xd8, 0xf9, 0xcd, 0x0c, 0x34, 0x4b, 0xbd, 0xdb, 0x9e, 0xc3, 0xd1, 0x9e, 0x43, 0xdb, 0x33, 0x59,
	0x92, 0x30, 0x8e, 0x93, 0xae, 0x96, 0x3c, 0xe0, 0x8a, 0xfb, 0xca, 0x9c, 0xbe, 0xd0, 0x92, 0xec,
	0x19, 0xd4, 0x8e, 0xc1, 0x38, 0x2f, 0xc0, 0xea, 0x31, 0xe7, 0x09, 0x0b, 0xd1, 0xf6, 0xf0, 0x54,
	0xc4, 0xd6, 0xbe, 0xaf, 0x64, 0xf0, 0x87, 0x08, 0x76, 0x3e, 0x05, 0x6b, 0x42, 0x7a, 0x83, 0xc4,
	0xeb, 0x0e, 0xa3, 0x20, 0xe4, 0xde, 0x80, 0x0f, 0xba, 0x3c, 0xc5, 0xad, 0xd5, 0x74, 0x57, 0x85,
	0xdc, 0x4f, 0xee, 0x20, 0x62, 0x1f, 0xe1, 0x7a, 0x93, 0x68, 0xf2, 0x61, 0xa8, 0x44, 0x28, 0xa2,
	0x63, 0x3d, 0xf9, 0x11, 0xee, 0xb4, 0xa6, 0xbb, 0x22, 0xe4, 0xbe, 0x85, 0x3f, 0x48, 0x78, 0xe4,
	0x7c, 0x68, 0x66, 0x44, 0x47, 0xf1, 0x2c, 0x4d, 0xd9, 0x59, 0x7b, 0x01, 0x1d, 0xc9, 0x33, 0xeb,
	0xe4, 0xc4, 0xd5, 0x71, 0x97, 0xf5, 0x44, 0x47, 0xbd, 0xf8, 0xb6, 0x66, 0xd5, 0xf9, 0xcb, 0xd9,
	0xec, 0x74, 0x43, 0x8b, 0x4c, 0x13, 0x8d, 0x71, 0xee, 0x39, 0x71, 0x7e, 0x93, 0x8f, 0x45, 0xf9,
	0x3f, 0xac, 0xc0, 0x66, 0x2f, 0x65, 0x03, 0xee, 0xa5, 0x78, 0xa0, 0xd2, 0x7d, 0xa4, 0x03, 0x32,
	0x91, 0x33, 0xa8, 0x97, 0xf7, 0x9f, 0x75, 0x30, 0xe5, 0xb3, 0x88, 0xdb, 0x42, 0x76, 0xae, 0xe6,
	0xb6, 0x9b, 0x33, 0x73, 0xbe, 0x47, 0xc6, 0xe9, 0x71, 0x49, 0x02, 0x32, 0xb8, 0xef, 0x4d, 0x65,
	0x67, 0x14, 0x37, 0x23, 0x6d, 0xef, 0xc7, 0x45, 0xfe, 0xdf, 0x86, 0x15, 0x3d, 0xeb, 0x45, 0xee,
	0x73, 0xd3, 0xe1, 0x3e, 0xb6, 0x19, 0xdc, 0x46, 0x92, 0x24, 0x05, 0xde, 0x9d, 0xdf, 0x54, 0x60,
	0x55, 0xa6, 0x89, 0xd7, 0x63, 0x22, 0x1c, 0xa6, 0x9c, 0x16, 0xd2, 0x81, 0xb9, 0xc2, 0xd2, 0xe1,
	0x6f, 0xbd, 0x05, 0x53, 0x9e, 0xc4, 0xa9, 0xe2, 0x81, 0xd9, 0x4a, 0x66, 0x0b, 0x5a, 0x28, 0xed,
	0xa7, 0x4f, 0xc0, 0x4a, 0xc0, 0xbb, 0xf1, 0x30, 0xf2, 0x33, 0x3a, 0x0a, 0x58, 0x1b, 0x19, 0x98,
	0x08, 0xaf, 0x43, 0xdd, 0x1f, 0xa6, 0x29, 0x8f, 0x94, 0x21, 0x9b, 0x43, 0xb2, 0x65, 0x03, 0x24,
	0x22, 0x3a, 0xba, 0xa0, 0x79, 0x14, 0x03, 0x3a, 0xc1, 0xcd, 0xe1, 0xd1, 0xa5, 0x1b, 0x72, 0x9b,
	0x33, 0xc8, 0xd9, 0xe1, 0xb9, 0xdc, 0xf8, 0x9e, 0x9c, 0x1d, 0x1e, 0xca, 0x3b, 0xff, 0xbc, 0x00,
	0x6b, 0x7a, 0x9c, 0x22, 0x91, 0x9e, 0x14, 0x81, 0x75, 0x28, 0x9a, 0x83, 0x4d, 0x22, 0xe4, 0xe7,
	0x5f, 0x18, 0x30, 0xdf, 0x1e, 0x80, 0x2f, 0x03, 0x9c, 0xa4, 0x2c, 0x29, 0x8d, 0xb9, 0xaa, 0x21,
	0x24, 0xe1, 0x8b, 0x3a, 0x2a, 0xf4, 0x8f, 0xb9, 0xc2, 0xe3, 0x0f, 0x8a, 0x99, 0x5a, 0x73, 0x40,
	0x08, 0x7d, 0xfc, 0xd1, 0xb2, 0xa6, 0xce, 0x1b, 0x70, 0x41, 0x72, 0x7d, 0x96, 0xd1, 0x4f, 0xf8,
	0xb7, 0x90, 0xbe, 0x21, 0x7f, 0xbb, 0xa1, 0x09, 0x90, 0x5a, 0xff, 0xc9, 0x93, 0x38, 0x37, 0x61,
	0xed, 0x44, 0xa5, 0xa6, 0x65, 0xde, 0x88, 0xdc, 0x70, 0xf3, 0x44, 0x21, 0x79, 0x9a, 0xd3, 0x6f,
	0x43, 0x4b, 0xf2, 0xb0, 0x97, 0xd9, 0x33, 0x2f, 0xe5, 0x8f, 0x87, 0x5c, 0x2a, 0x9c, 0x9d, 0xaa,
	0xbb, 0xa6, 0x91, 0xd6, 0xa2, 0xb9, 0x84, 0xa2, 0x15, 0x1e, 0xc4, 0x8a, 0x67, 0xc4, 0x8b, 0x76,
	0x85, 0x35, 0xd4, 0x92, 0x7d, 0x08, 0xab, 0x4c, 0x4a, 0x8e, 0x8a, 0x60, 0xb4, 0xa6, 0xbd, 0x84,
	0xb6, 0xe7, 0xe1, 0xb3, 0xaa, 0xeb, 0xa8, 0x22, 0xba, 0x2b, 0x96, 0xd3, 0xdb, 0x04, 0x75, 0x5e,
	0x81, 0xcd, 0xf4, 0xd4, 0x8b, 0xb8, 0xe8, 0x1f, 0x75, 0xe3, 0xd4, 0x2b, 0x2e, 0x1d, 0x45, 0x73,
	0xeb, 0xe9, 0xe9, 0x7d, 0x83, 0xdd, 0xcf, 0x17, 0xf1, 0xe3, 0xb0, 0x92, 0x9e, 0x7a, 0x03, 0x2e,
	0x25, 0xeb, 0x73, 0x32, 0x4b, 0x60, 0xc6, 0x76, 0xba, 0x4f, 0x50, 0x34, 0x49, 0x57, 0x61, 0x39,
	0x3d, 0xf5, 0x12, 0xa6, 0x8e, 0x88, 0xa8, 0x46, 0xea, 0x90, 0x9e, 0x3e, 0x64, 0xea, 0x08, 0x29,
	0x5a, 0xb0, 0x90, 0x9e, 0x7a, 0x4a, 0x85, 0xe6, 0x1c, 0x3d, 0x9f, 0x9e, 0x1e, 0xaa, 0x50, 0x87,
	0xad, 0xd8, 0x10, 0x35, 0x41, 0xe9, 0xb9, 0xab, 0x53, 0xd8, 0xaa, 0x9b, 0x6a, 0xe0, 0xa1, 0x9e,
	0xba, 0x57, 0x60, 0x53, 0x9d, 0x23, 0x7d, 0x83, 0xa4, 0x57, 0xe7, 0x48, 0xaf, 0x46, 0xa4, 0x5f,
	0x21, 0xe9, 0xd5, 0xa8, 0xf4, 0xaa, 0x28, 0xfd, 0x2a, 0x49, 0xaf, 0x4a, 0xd2, 0x2b, 0x92, 0xbe,
	0x49, 0xd2, 0x2b, 0x2b, 0xbd, 0x2a, 0x4b, 0xef, 0x90, 0xf4, 0xaa, 0x28, 0xfd, 0x6b, 0xd0, 0xa6,
	0xcc, 0x97, 0x76, 0x73, 0x1e, 0xf9, 0x3f, 0x95, 0x8a, 0x7e, 0x9f, 0xa7, 0xed, 0x35, 0xec, 0xae,
	0x85, 0xf8, 0x77, 0x39, 0x4f, 0x6e, 0x6b, 0xec, 0x21, 0x21, 0x3b, 0xff, 0x34, 0x03, 0x0d, 0xbb,
	0xf7, 0x9e, 0x76, 0xdb, 0xbd, 0x0e, 0x17, 0x84, 0x76, 0x2b, 0x3a, 0xdc, 0xf1, 0x59, 0x1a, 0x78,
	0xdd, 0xa1, 0x2c, 0xa5, 0x46, 0x9b, 0x6e, 0x4b, 0xc8, 0x5d, 0x8d, 0xbf, 0xcb, 0xd2, 0xe0, 0xce,
	0x50, 0xda, 0x6c, 0xcb, 0x0d, 0x58, 0xcd, 0xb7, 0x4a, 0xc9, 0x3f, 0x37, 0xec, 0x3e, 0x31, 0xee,
	0xf9, 0x5b, 0xb0, 0x80, 0xa6, 0x80, 0x19, 0x73, 0x7b, 0x30, 0x0d, 0xfd, 0x1d, 0x31, 0x30, 0xee,
	0xbc, 0x7e, 0xb8, 0x9d, 0xf1, 0xea, 0x9a, 0xd3, 0xd7, 0x47, 0xc7, 0xeb, 0x4e, 0xe7, 0x8f, 0x2b,
	0xb0, 0x6c, 0xd1, 0x68, 0xcf, 0x3b, 0x50, 0x17, 0xd2, 0x63, 0xc1, 0x40, 0x44, 0x94, 0xb6, 0xac,
	0xe0, 0x04, 0xd6, 0x84, 0xbc, 0xad, 0x61, 0x3b, 0xf1, 0x89, 0x0e, 0x28, 0xcc, 0xf9, 0xbe, 0xec,
	0x86, 0x67, 0xa7, 0xe1, 0x86, 0xcb, 0x8b, 0xef, 0xae, 0x22, 0xa3, 0xa2, 0x17, 0xfa, 0x87, 0x0a,
	0x6c, 0x68, 0x22, 0x15, 0x27, 0x71, 0x18, 0xf7, 0xcf, 0xbc, 0x28, 0xd6, 0xa3, 0x62, 0x8a, 0x61,
	0xfa, 0x3a, 0x4e, 0x3c, 0x3f, 0x1e, 0x46, 0x36, 0x61, 0xba, 0x74, 0x14, 0x27, 0x77, 0xf5, 0xf3,
	0xa8, 0x1a, 0xcd, 0x8c, 0xa9, 0xd1, 0x35, 0x58, 0x16, 0xc9, 0x93, 0x5b, 0x19, 0x05, 0xf9, 0xa2,
	0x9a, 0x86, 0x15, 0x0c, 0xbc, 0x90, 0x9e, 0xb6, 0xe8, 0xfa, 0xa4, 0x4e, 0xb1, 0x59, 0x55, 0xc8,
	0x0f, 0x08, 0xa0, 0xd5, 0x49, 0x48, 0x4f, 0xa6, 0x29, 0x26, 0xb2, 0xd1, 0xd3, 0x99, 0x98, 0xac,
	0x21, 0xe4, 0x41, 0x9a, 0x1e, 0x58, 0x28, 0x46, 0xb0, 0x5a, 0x6c, 0xcc, 0xdb, 0x2e, 0x98, 0x08,
	0x36, 0x0e, 0xa8, 0x26, 0xf0, 0xab, 0x59, 0xf2, 0xb3, 0xd9, 0x08, 0x07, 0x2c, 0xd1, 0x16, 0x37,
	0x7b, 0x26, 0xcf, 0x41, 0x03, 0xac, 0x5b, 0x28, 0xf9, 0x8d, 0x37, 0x61, 0x2b, 0xe2, 0xa7, 0x2a,
	0x6f, 0x6b, 0x76, 0x2a, 0xf9, 0x3b, 0x3a, 0x2d, 0x6e, 0x6a, 0x8a, 0x43, 0x43, 0x40, 0x9b, 0x16,
	0x1d, 0x9f, 0xf3, 0x08, 0x6e, 0xa0, 0xa7, 0x91, 0x42, 0x1f, 0xa3, 0x42, 0x26, 0xc7, 0xfb, 0xc9,
	0xd2, 0x7d, 0xb4, 0x4d, 0xae, 0x6b, 0xfa, 0x03, 0x4d, 0xbe, 0xc7, 0xe4, 0x48, 0x9f, 0x59, 0xf6,
	0x6f, 0x07, 0xae, 0x9c, 0xdb, 0xad, 0x7f, 0x84, 0x09, 0x31, 0xf2, 0x68, 0x17, 0x27, 0xf6, 0x76,
	0x17, 0x49, 0x9c, 0x5b, 0xb0, 0x19, 0x0d, 0x75, 0xec, 0xeb, 0xc5, 0x3d, 0x5c, 0x73, 0xe9, 0xc5,
	0x91, 0x97, 0xe6, 0xae, 0x6d, 0x8d, 0xd0, 0x0f, 0x7a, 0xf7, 0x35, 0xf2, 0x41, 0xe4, 0x6a, 0xe7,
	0x26, 0xa1, 0xaa, 0x49, 0xb0, 0x81, 0x09, 0x7b, 0xdf, 0x9f, 0x86, 0x8a, 0x8e, 0x6b, 0x9f, 0xbb,
	0xa4, 0x19, 0x69, 0xde, 0x9d, 0x3f, 0xab, 0x40, 0xb3, 0x44, 0xf4, 0xd4, 0x3b, 0xeb, 0xbb, 0xe7,
	0xef, 0xac, 0x87, 0x53, 0x15, 0x7b, 0xc0, 0x92, 0x09, 0x7b, 0xeb, 0xcf, 0x67, 0xa0, 0xae, 0xd5,
	0xb7, 0xb4, 0xa5, 0x72, 0x45, 0xad, 0x94, 0x15, 0x55, 0x3b, 0x1b, 0x4d, 0xcd, 0x23, 0x95, 0x9e,
	0x79, 0xfc, 0x54, 0x28, 0x69, 0xcc, 0xad, 0xee, 0xe4, 0x9e, 0x86, 0xde, 0xd3, 0xc0, 0xd1, 0xad,
	0x37, 0x3b, 0xb6, 0xf5, 0xae, 0x43, 0x9d, 0x4e, 0xab, 0x36, 0x48, 0x30, 0x01, 0x1e, 0x02, 0xad,
	0x3f, 0xbf, 0x0e, 0x75, 0x11, 0x45, 0x05, 0xa2, 0x79, 0x22, 0x42, 0xa0, 0x25, 0x7a, 0x03, 0x7d,
	0x01, 0xea, 0x18, 0x8b, 0x22, 0x8c, 0xea, 0x72, 0x9d, 0xa5, 0x24, 0xd2, 0x86, 0x90, 0x5a, 0xbd,
	0x6e, 0x1b, 0x74, 0xa6, 0xa6, 0x9f, 0x87, 0x8b, 0x93, 0xdb, 0x15, 0xab, 0x51, 0xed, 0x70, 0x42,
	0x53, 0xbd, 0xf5, 0x3a, 0xbf, 0x59, 0x24, 0xcf, 0xa5, 0x67, 0xc4, 0x78, 0xae, 0x8f, 0x41, 0xe3,
	0x09, 0x4f, 0xa5, 0x3e, 0xde, 0x90, 0x6e, 0xda, 0x3d, 0x6b, 0xa0, 0xf7, 0x11, 0x68, 0x64, 0x3e,
	0x49, 0xe3, 0xa8, 0xef, 0x59, 0xfa, 0x4c, 0xe6, 0x19, 0x2b, 0xf3, 0x07, 0x1a, 0xff, 0x3e, 0xa1,
	0x8b, 0x5b, 0x0b, 0x65, 0x9e, 0xd8, 0x98, 0xe4, 0xa6, 0x8d, 0x8a, 0x43, 0x9b, 0xd0, 0x05, 0x46,
	0xc6, 0x23, 0xeb, 0x33, 0x37, 0x29, 0xb0, 0x45, 0x2d, 0xa0, 0xc0, 0x96, 0xe6, 0x1d, 0xf5, 0x82,
	0x02, 0xdb, 0x9b, 0x78, 0x30, 0xa6, 0x15, 0xc4, 0xdd, 0x26, 0x22, 0x6f, 0x28, 0xb9, 0x99, 0xef,
	0x55, 0x21, 0x31, 0xe7, 0xa0, 0xf7, 0xe3, 0x6e, 0xf4, 0x48, 0x5a, 0x7a, 0x5a, 0xcc, 0x22, 0xfd,
	0xa2, 0xa5, 0xdf, 0xd5, 0xa8, 0x9c, 0xfe, 0x0a, 0xd4, 0xf4, 0xce, 0x31, 0xb3, 0x6e, 0x32, 0x77,
	0x20, 0xa4, 0x5d, 0x07, 0xad, 0x88, 0xb9, 0xfe, 0x50, 0x40, 0x43, 0x21, 0x5e, 0x3d, 0xd3, 0x20,
	0x8c, 0x69, 0x3e, 0x0e, 0x2b, 0xb9, 0x0a, 0x95, 0x62, 0xbb, 0x4c, 0x89, 0x90, 0xae, 0x14, 0xa9,
	0x9b, 0x20, 0xdc, 0x54, 0x4c, 0xf2, 0x48, 0x9d, 0x62, 0x6f, 0x1d, 0x7d, 0xa0, 0xc5, 0xd5, 0xeb,
	0x3e, 0xda, 0xc8, 0x04, 0x7e, 0x2d, 0x4d, 0x70, 0x90, 0xa6, 0x0f, 0x4b, 0x4d, 0x75, 0x28, 0x25,
	0x45, 0xd4, 0x0f, 0x39, 0x4d, 0x42, 0xf7, 0xc4, 0xd4, 0x50, 0x96, 0x09, 0xaa, 0xc7, 0x7f, 0xe7,
	0xc4, 0xb9, 0x00, 0x4b, 0x36, 0x46, 0x31, 0x15, 0x93, 0x45, 0x13, 0x9b, 0x38, 0x77, 0xe0, 0xb9,
	0x09, 0x91, 0x7e, 0x61, 0x21, 0x30, 0xf6, 0xab, 0xbb, 0x5b, 0x63, 0x41, 0x7f, 0xb6, 0x20, 0xe7,
	0xf5, 0x91, 0x2f, 0x0e, 0x86, 0x86, 0x93, 0xfa, 0xc8, 0x16, 0xc9, 0x79, 0x0c, 0xf5, 0xb2, 0x41,
	0x6e, 0x4e, 0x27, 0xc3, 0x5e, 0x32, 0x45, 0x6e, 0x2d, 0x2a, 0xd8, 0xf5, 0x53, 0x68, 0x12, 0xcb,
	0x28, 0x56, 0x19, 0x5b, 0xe7, 0xa3, 0x60, 0xdb, 0x40, 0x3e, 0xf7, 0x63, 0x45, 0x9c, 0x3b, 0x7f,
	0x6b, 0x22, 0x26, 0x4d, 0xf5, 0xd4, 0x76, 0x9d, 0x52, 0xd5, 0x64, 0x2c, 0x8b, 0x71, 0xe9, 0x32,
	0xc6, 0x05, 0x36, 0x1c, 0xfd, 0xb6, 0x76, 0x1b, 0xd6, 0x7a, 0x70, 0xba, 0x4d, 0xd0, 0x9e, 0x9d,
	0x5e, 0x5c, 0x95, 0x77, 0xee, 0x6a, 0xc3, 0xbd, 0x63, 0xf8, 0x68, 0x0f, 0xd0, 0xb9, 0x07, 0x2d,
	0x4d, 0x92, 0x32, 0xc5, 0xbd, 0x50, 0x0c, 0x84, 0xb2, 0x46, 0xec, 0x25, 0x70, 0xf4, 0xc8, 0x6c,
	0x0d, 0xc9, 0x7b, 0xc2, 0xc2, 0x21, 0x37, 0x86, 0x6c, 0x75, 0x20, 0xa2, 0x87, 0x06, 0xf1, 0xbe,
	0x86, 0x77, 0xfe, 0xaa, 0x42, 0x67, 0xe7, 0x42, 0x3f, 0x4f, 0x3d, 0x49, 0xff, 0xaf, 0x02, 0xed,
	0x31, 0xfe, 0x76, 0x1a, 0x66, 0xa6, 0x93, 0xb2, 0x9a, 0x38, 0x46, 0xb7, 0xa5, 0x41, 0x7b, 0x1a,
	0x52, 0x9a, 0x93, 0xbf, 0x9b, 0xa5, 0xa5, 0x66, 0x21, 0x39, 0x64, 0xa7, 0x0f, 0x4b, 0x36, 0x50,
	0x36, 0xe9, 0xd0, 0xbd, 0x69, 0xc5, 0xbb, 0x78, 0x86, 0x5d, 0x14, 0x89, 0xd4, 0x9c, 0x9d, 0x27,
	0x50, 0x2f, 0x05, 0x0f, 0x26, 0xc9, 0xf5, 0xde, 0x54, 0x63, 0x00, 0xca, 0xd6, 0xd9, 0xc7, 0x5d,
	0x33, 0x40, 0xab, 0xd7, 0x26, 0xab, 0xb5, 0x37, 0x2d, 0xc5, 0xa3, 0x01, 0xca, 0x34, 0x45, 0x46,
	0x1f, 0xc2, 0xca, 0x88, 0x8a, 0x4c, 0xf3, 0x60, 0x35, 0xd2, 0xb5, 0x5b, 0xcf, 0xd6, 0x17, 0xd7,
	0xf5, 0x6f, 0x2a, 0x70, 0x4d, 0xf4, 0xb4, 0x33, 0xd3, 0x7b, 0x32, 0xd1, 0x27, 0x3f, 0x73, 0x36,
	0x62, 0x8a, 0x51, 0x63, 0x89, 0xf7, 0x2b, 0xba, 0x42, 0x99, 0x47, 0x9e, 0x9d, 0x28, 0x6a, 0x5d,
	0xa1, 0x5c, 0xa6, 0x38, 0x96, 0xc3, 0x6f, 0xc0, 0xaa, 0x0d, 0x8c, 0x33, 0x32, 0x0a, 0xb2, 0x1b,
	0x04, 0xcf, 0x28, 0x5f, 0x84, 0x66, 0xd6, 0xdb, 0x48, 0x10, 0xbd, 0x62, 0x7a, 0xcc, 0xbc, 0xfa,
	0xcb, 0xb0, 0x5e, 0xec, 0x35, 0x23, 0xa7, 0x28, 0xd9, 0xc9, 0x7b, 0xb6, 0x2d, 0x3a, 0x7f, 0x34,
	0x07, 0xcf, 0x4d, 0x1c, 0x11, 0x4f, 0xd3, 0x38, 0x95, 0x7a, 0x38, 0xb7, 0x60, 0x03, 0x1f, 0x8c,
	0x93, 0x2a, 0x54, 0xee, 0x69, 0x5c, 0xeb, 0x88, 0x25, 0x17, 0x95, 0x57, 0xee, 0x2f, 0x03, 0xf8,
	0xa9, 0x6f, 0xba, 0xb1, 0x55, 0x75, 0x3f, 0xf5, 0xef, 0x21, 0xc0, 0x79, 0x17, 0x3a, 0x22, 0x4a,
	0x86, 0x7a, 0x9a, 0xe5, 0xb0, 0xd7, 0x13, 0xbe, 0xe0, 0x91, 0x3e, 0x24, 0x98, 0xfa, 0x19, 0x7f,
	0xc2, 0x23, 0x25, 0xcd, 0x30, 0xaf, 0x20, 0xe5, 0x6e, 0x81, 0xd0, 0x35, 0x74, 0xf7, 0x90, 0xcc,
	0xb9, 0x09, 0x6b, 0x18, 0x86, 0x74, 0xe3, 0xb4, 0x28, 0x1e, 0x8d, 0xba, 0xa9, 0xc3, 0x11, 0xc4,
	0x64, 0xb2, 0xbd, 0x01, 0x17, 0x34, 0x7d, 0x3a, 0x8c, 0xd4, 0xf8, 0xa0, 0xe8, 0x4c, 0xb0, 0x31,
	0x60, 0xbe, 0x3b, 0x8c, 0xd4, 0xe8, 0xb0, 0xde, 0x84, 0x2d, 0xdd, 0xb4, 0x2f, 0xd8, 0xa4, 0xb6,
	0x94, 0x16, 0xdc, 0x1c, 0x30, 0xff, 0xcb, 0x9a, 0x60, 0xb4, 0xf1, 0x17, 0xe1, 0x12, 0x26, 0x87,
	0xd3, 0x73, 0x58, 0x53, 0xa4, 0x78, 0x81, 0x68, 0x26, 0x71, 0xbf, 0x0d, 0x97, 0x4d, 0x07, 0xe7,
	0x08, 0x40, 0x77, 0x99, 0xb6, 0x88, 0x68, 0xa2, 0x0c, 0xb7, 0x60, 0xc3, 0x74, 0x31, 0x3a, 0x5d,
	0x74, 0x57, 0x64, 0x9d, 0xb0, 0xe5, 0x19, 0xeb, 0xfc, 0xe3, 0x1c, 0x34, 0x8c, 0x9a, 0x74, 0x59,
	0x5f, 0x6b, 0x8a, 0x36, 0xef, 0xb9, 0xd6, 0xe3, 0x2e, 0x7a, 0xc2, 0x42, 0x6b, 0xde, 0xd1, 0x01,
	0x32, 0xc5, 0x77, 0x0d, 0xdc, 0xf9, 0x71, 0x05, 0x56, 0x29, 0x0f, 0x92, 0xef, 0x15, 0x63, 0x9b,
	0xd8, 0x33, 0x27, 0xe0, 0x7f, 0xd7, 0x8e, 0x74, 0xeb, 0x98, 0x1f, 0xd9, 0x31, 0x42, 0xe5, 0xc2,
	0x74, 0x0b, 0xc2, 0xcc, 0xfe, 0x5e, 0x85, 0xb9, 0x93, 0x09, 0xf3, 0xbf, 0x2a, 0x50, 0x37, 0x33,
	0x63, 0x36, 0x0b, 0xd9, 0xb3, 0xff, 0xfa, 0x91, 0x48, 0x92, 0x6d, 0x6b, 0xb7, 0x86, 0x73, 0x62,
	0xb6, 0x63, 0x26, 0x44, 0xd7, 0x0a, 0x31, 0xff, 0xfb, 0x13, 0xe2, 0x0e, 0x09, 0xd1, 0xf9, 0xb7,
	0x0a, 0xac, 0x98, 0xde, 0xa5, 0xb9, 0xcf, 0xe6, 0x0c, 0xf5, 0x49, 0xb1, 0x5c, 0xb6, 0x98, 0xa2,
	0xff, 0xb4, 0xfe, 0xd9, 0xd5, 0x07, 0xb0, 0x62, 0xb5, 0x64, 0x68, 0x8e, 0x64, 0x8a, 0x29, 0x21,
	0x95, 0xf0, 0xe5, 0xd4, 0x8a, 0x45, 0xa5, 0x4d, 0xa4, 0xcf, 0xbb, 0x98, 0xe3, 0x27, 0x26, 0x9d,
	0x5f, 0xe7, 0x37, 0xfa, 0xd4, 0x30, 0x8a, 0xb8, 0x89, 0x1e, 0xae, 0x40, 0xcd, 0xd8, 0xc5, 0xc2,
	0x69, 0x1a, 0x08, 0x84, 0xe7, 0xe9, 0x9b, 0xb0, 0x66, 0x08, 0x4a, 0x89, 0x28, 0x4a, 0x55, 0x35,
	0x09, 0xb5, 0x5b, 0x48, 0x47, 0xbd, 0x0e, 0xed, 0xe2, 0xf5, 0x83, 0x09, 0xd9, 0xab, 0x8d, 0x02,
	0xbe, 0xd8, 0xf2, 0x0a, 0xd4, 0x8c, 0x64, 0x78, 0x08, 0x32, 0x27, 0x3e, 0x02, 0xe1, 0x09, 0x68,
	0x15, 0x66, 0x8f, 0xf9, 0x99, 0xb1, 0xa2, 0xfa, 0x27, 0x5e, 0x38, 0x50, 0xa1, 0xb1, 0x8d, 0xfa,
	0x67, 0xe7, 0x4f, 0xe6, 0x60, 0xb5, 0x3b, 0xf0, 0x42, 0xe6, 0x9b, 0x9c, 0x1b, 0x4f, 0xa5, 0xf6,
	0x73, 0x1a, 0x10, 0x78, 0xc3, 0x31, 0x0f, 0xb3, 0x82, 0x88, 0x47, 0xb2, 0xe8, 0xe7, 0x32, 0x5a,
	0x95, 0xb2, 0x48, 0x0e, 0x84, 0xb2, 0x05, 0xd5, 0xba, 0xeb, 0x18, 0xf2, 0xc3, 0x1c, 0xe3, 0xbc,
	0x0a, 0x9b, 0x03, 0x96, 0x1e, 0xf3, 0x09, 0x5e, 0x8c, 0x9c, 0x4c, 0x8b, 0xd0, 0xa3, 0xe6, 0xf2,
	0x4b, 0x70, 0xc9, 0xb4, 0x4b, 0xb9, 0x4c, 0xe2, 0x48, 0xf2, 0x32, 0x47, 0xf2, 0x31, 0x5b, 0x44,
	0xe3, 0x5a, 0x92, 0x22, 0xe7, 0xd7, 0xa1, 0x2d, 0xc2, 0x90, 0xf7, 0x59, 0x78, 0xae, 0xaf, 0x31,
	0xf8, 0x51, 0xde, 0xaf, 0x41, 0x9b, 0x9f, 0xfa, 0x5c, 0x4a, 0x6f, 0x7c, 0x62, 0x68, 0x36, 0x5b,
	0x84, 0xdf, 0x1b, 0x99, 0x9e, 0xbb, 0xf0, 0x9c, 0x69, 0x78, 0xde, 0x98, 0xc9, 0xd3, 0x5c, 0x24,
	0xaa, 0xfd, 0x89, 0x23, 0xbf, 0x04, 0xd5, 0x80, 0xf7, 0xd8, 0x30, 0x54, 0x99, 0x5f, 0xc9, 0x01,
	0x4e, 0x1b, 0x16, 0xf9, 0x69, 0x22, 0xd2, 0xcc, 0x6f, 0xd8, 0x47, 0x1d, 0xd9, 0x60, 0x66, 0xc1,
	0x0f, 0x39, 0x4b, 0x79, 0xe0, 0x49, 0xee, 0xdb, 0x7b, 0x04, 0x1a, 0x7e, 0x97, 0xc0, 0x07, 0xdc,
	0xa7, 0x15, 0x2f, 0x50, 0x46, 0x9a, 0xb4, 0x66, 0x57, 0x3c, 0x23, 0xbd, 0x2f, 0xb9, 0xdf, 0xf9,
	0x1f, 0x0b, 0xd0, 0xb4, 0x2a, 0x83, 0x75, 0x6b, 0x4c, 0x32, 0xbd, 0x00, 0xab, 0xf9, 0x3e, 0x3b,
	0x62, 0x51, 0x10, 0xda, 0xdd, 0xb1, 0x92, 0xc1, 0xdf, 0x41, 0xb0, 0xb3, 0x0d, 0x2d, 0xe6, 0xab,
	0x38, 0xf5, 0xe4, 0x99, 0x54, 0x7c, 0x90, 0x1d, 0x4b, 0x8c, 0xce, 0xac, 0x21, 0xf2, 0x00, 0x71,
	0xf6, 0x60, 0x82, 0x97, 0x60, 0x8b, 0x6d, 0xc6, 0x73, 0x51, 0xad, 0x42, 0xb3, 0x42, 0x31, 0x25,
	0x63, 0xa6, 0xad, 0x02, 0xee, 0x21, 0x16, 0x7a, 0x7a, 0x5b, 0xcc, 0x15, 0x98, 0x3d, 0xc8, 0x71,
	0xef, 0xf2, 0x33, 0xad, 0xa1, 0x09, 0x4b, 0x95, 0x3e, 0x3d, 0x8f, 0x8a, 0x48, 0x6a, 0xd2, 0x32,
	0xe8, 0x11, 0x21, 0xdf, 0x84, 0xad, 0x91, 0x76, 0x45, 0x31, 0x29, 0x45, 0xbc, 0x59, 0x6a, 0x5a,
	0x10, 0xb4, 0xc0, 0x74, 0x54, 0xd4, 0xc5, 0x12, 0xd3, 0x11, 0x61, 0x6f, 0xc1, 0x86, 0xe4, 0x21,
	0x55, 0xfd, 0x58, 0xbf, 0x9f, 0xf2, 0x3e, 0xd3, 0xc3, 0x15, 0x56, 0x53, 0xd6, 0x2d, 0xf6, 0x76,
	0x86, 0xdc, 0xc5, 0xd8, 0x83, 0x29, 0xc5, 0xfc, 0xa3, 0xb1, 0x56, 0x26, 0xf6, 0xb0, 0xd8, 0x52,
	0xab, 0x0e, 0xd4, 0x69, 0x32, 0x93, 0x38, 0x55, 0x9a, 0x98, 0xb4, 0xa9, 0x86, 0xc0, 0x87, 0x71,
	0xaa, 0x76, 0x03, 0x6d, 0x00, 0x0b, 0x34, 0xd9, 0xc4, 0x91, 0x32, 0x35, 0x33, 0xca, 0x6c, 0xd2,
	0x3e, 0x0e, 0x2b, 0x76, 0xdc, 0xb6, 0x57, 0xca, 0xb8, 0xd4, 0x0d, 0xd8, 0xf4, 0xbb, 0x0d, 0xad,
	0x12, 0x5d, 0xd6, 0x33, 0x25, 0x5c, 0xd6, 0x0a, 0xd4, 0x59, 0xdf, 0x37, 0x60, 0xb5, 0x20, 0x0b,
	0x65, 0xbe, 0x28, 0xff, 0xd2, 0xc8, 0x04, 0xa1, 0xf4, 0xd7, 0x4b, 0xe0, 0x94, 0x7a, 0x27, 0x5a,
	0x4a, 0xbd, 0xac, 0x16, 0xba, 0x46, 0xea, 0xce, 0x37, 0xe1, 0x72, 0x77, 0xe0, 0x0d, 0xba, 0x29,
	0xd1, 0x79, 0x29, 0x67, 0x32, 0x8e, 0x28, 0xb6, 0xb0, 0xf7, 0x01, 0x0d, 0xac, 0x50, 0x58, 0x07,
	0x02, 0xa1, 0x6d, 0xde, 0x82, 0x25, 0xc9, 0x9f, 0xf0, 0x4c, 0xed, 0xab, 0x6e, 0xf6, 0xdc, 0xf9,
	0xf5, 0x0c, 0xd4, 0x74, 0xf7, 0xc3, 0xd3, 0x2c, 0x7f, 0xab, 0x7f, 0x97, 0x2e, 0xb4, 0x0c, 0x86,
	0xa7, 0x24, 0xf8, 0x3a, 0xcc, 0xa3, 0x0f, 0x37, 0x9b, 0x87, 0x1e, 0x9c, 0x57, 0x60, 0x93, 0x2e,
	0x9f, 0x78, 0x59, 0x4b, 0x23, 0xa4, 0xd9, 0x2d, 0xeb, 0x84, 0xde, 0x37, 0xdd, 0xb8, 0x88, 0x73,
	0x7e, 0x5e, 0x81, 0x4b, 0xe7, 0xb4, 0x43, 0x51, 0x4c, 0x3c, 0xf4, 0x5f, 0x9e, 0xd5, 0xf5, 0xfe,
	0xd6, 0xc9, 0x73, 0xdb, 0x93, 0x64, 0xd3, 0x41, 0x9a, 0x73, 0x0d, 0x96, 0x8d, 0x78, 0xc5, 0x2c,
	0x66, 0x8d, 0x60, 0x34, 0x1f, 0x37, 0x60, 0x75, 0x6c, 0xc8, 0xb4, 0xf3, 0x1a, 0x83, 0x52, 0x87,
	0x9d, 0x17, 0xa1, 0xd1, 0x1d, 0x3c, 0xe5, 0x2b, 0x05, 0x7f, 0xb1, 0x40, 0xc4, 0xc4, 0x1c, 0x57,
	0xe5, 0xe9, 0x5e, 0x0e, 0x71, 0xae, 0x43, 0xbd, 0xac, 0xae, 0xb4, 0x4e, 0xcb, 0x49, 0x51, 0x4f,
	0xaf, 0x40, 0x0d, 0x89, 0x4c, 0x86, 0xd9, 0x5c, 0x1f, 0xd5, 0x20, 0x93, 0x5e, 0x7e, 0x09, 0x9c,
	0x61, 0x14, 0xf0, 0x34, 0x3c, 0x13, 0x51, 0x9f, 0xac, 0xae, 0xb0, 0x1e, 0x6f, 0x35, 0xc7, 0xec,
	0x89, 0xe8, 0x78, 0x37, 0x40, 0x6b, 0x8e, 0x17, 0x8a, 0xd2, 0x80, 0xa7, 0xb6, 0xd3, 0x79, 0x63,
	0xcd, 0x45, 0x74, 0xfc, 0x40, 0xc3, 0x4d, 0xcf, 0x17, 0xa1, 0x2a, 0x7c, 0x3f, 0xb1, 0xc5, 0x15,
	0xac, 0xb7, 0x69, 0xc0, 0xfd, 0x38, 0xe0, 0xda, 0xf1, 0x74, 0x59, 0x14, 0x9c, 0x88, 0x40, 0x1d,
	0x19, 0x2b, 0x94, 0x03, 0xf4, 0x6a, 0xa0, 0x13, 0x28, 0xde, 0x85, 0xaf, 0xba, 0x35, 0x0d, 0xb3,
	0xd9, 0xb0, 0x10, 0x96, 0x6c, 0x54, 0x61, 0x2e, 0xd1, 0x3d, 0x9c, 0x82, 0xee, 0x94, 0xa2, 0x15,
	0x37, 0xe3, 0xe0, 0x44, 0x50, 0xcd, 0x1c, 0x12, 0x9a, 0xa6, 0x29, 0x64, 0x5b, 0xc6, 0x3c, 0x9d,
	0xbb, 0xa4, 0x7f, 0xa2, 0x3a, 0x4a, 0x58, 0x29, 0xec, 0x16, 0xe4, 0x5a, 0x43, 0xae, 0xef, 0x4e,
	0x63, 0x83, 0x98, 0x2e, 0xdd, 0x7a, 0xb6, 0x1d, 0x90, 0xe9, 0x15, 0x30, 0xfa, 0x4e, 0xa6, 0x65,
	0xd9, 0x24, 0xfa, 0x11, 0x74, 0x68, 0x6c, 0x8f, 0x21, 0x40, 0xad, 0xac, 0x17, 0x09, 0x50, 0x25,
	0xe3, 0x72, 0xa9, 0xa0, 0x31, 0x9d, 0x70, 0xba, 0xbc, 0x97, 0x8a, 0xa5, 0x87, 0xce, 0x77, 0xb2,
	0x50, 0xda, 0x5c, 0x8c, 0xc3, 0x50, 0xba, 0x07, 0x0b, 0xe6, 0x82, 0x5c, 0x65, 0x3a, 0xe9, 0xd1,
	0xf2, 0x06, 0x75, 0x4d, 0xef, 0x9d, 0x97, 0x61, 0x55, 0xf2, 0x54, 0x60, 0x41, 0xce, 0x90, 0x6a,
	0xc5, 0x56, 0x62, 0xc0, 0x65, 0x18, 0xab, 0xec, 0x25, 0x98, 0x0c, 0xd0, 0xf9, 0x1c, 0x5c, 0x14,
	0x03, 0x4f, 0xc6, 0x11, 0x57, 0x5e, 0x12, 0x53, 0x5e, 0xaf, 0xd0, 0xf8, 0x22, 0x54, 0x59, 0x22,
	0xcb, 0xf6, 0x98, 0x25, 0x92, 0x5c, 0xc3, 0x3e, 0x34, 0x51, 0x72, 0x7a, 0xc7, 0xc6, 0x1b, 0x46,
	0xe6, 0xa2, 0x2f, 0xeb, 0x09, 0x43, 0xab, 0x7f, 0x3a, 0x0e, 0xcc, 0xe9, 0x50, 0xdf, 0xd8, 0x7e,
	0xfc, 0x6d, 0x60, 0xaf, 0x1a, 0x0b, 0x8d, 0xbf, 0x3b, 0xff, 0x32, 0x0f, 0xeb, 0xf9, 0x31, 0x24,
	0xf4, 0xfa, 0xf6, 0xce, 0xd6, 0xef, 0x3c, 0x88, 0x7c, 0x17, 0x9a, 0xd9, 0x41, 0xa4, 0x74, 0x0c,
	0x99, 0xc6, 0x3d, 0xb3, 0xd1, 0x11, 0xba, 0x2b, 0xf6, 0x64, 0x63, 0xc3, 0x99, 0xff, 0x5d, 0x81,
	0x8d, 0xf2, 0xc1, 0xa6, 0x14, 0xaf, 0x7d, 0x24, 0x42, 0xac, 0x97, 0x4e, 0x4a, 0x56, 0x92, 0xdb,
	0x70, 0x79, 0xb2, 0x20, 0xf6, 0xed, 0x26, 0x73, 0x70, 0x98, 0xd4, 0x98, 0xde, 0x73, 0x72, 0x2e,
	0x03, 0xd8, 0xa3, 0x56, 0x2c, 0xed, 0x65, 0x68, 0x73, 0xd2, 0x8a, 0x65, 0x11, 0x9d, 0x9d, 0xae,
	0x2c, 0x5a, 0x85, 0xf6, 0x1c, 0xb6, 0x98, 0x9f, 0xc3, 0x26, 0xdd, 0x29, 0x5d, 0x9a, 0x7c, 0xa7,
	0xf4, 0x55, 0xd8, 0xcc, 0x49, 0xed, 0x3b, 0x76, 0x29, 0x57, 0xe9, 0x99, 0x89, 0xd4, 0x5a, 0x19,
	0x7a, 0x9f, 0xb0, 0xae, 0x46, 0x16, 0x4e, 0x87, 0x03, 0x6d, 0xd9, 0xa1, 0x78, 0x3a, 0xdc, 0xd7,
	0xb6, 0x7d, 0x1b, 0x5a, 0x05, 0x02, 0x2f, 0x10, 0x29, 0xf7, 0xf1, 0x50, 0x4f, 0x97, 0xa0, 0xd6,
	0x72, 0xd2, 0x1d, 0x8b, 0x72, 0x3e, 0x01, 0xb9, 0x7c, 0x46, 0xff, 0xc9, 0xfe, 0x34, 0x32, 0x30,
	0x79, 0xe1, 0xab, 0xb0, 0x1c, 0xf4, 0xbc, 0xae, 0xb0, 0x81, 0x94, 0x31, 0x42, 0x41, 0xef, 0x8e,
	0x30, 0x01, 0x57, 0x07, 0xea, 0xc7, 0xfc, 0xac, 0x40, 0x42, 0x37, 0xa2, 0x6a, 0xc7, 0xfc, 0xcc,
	0xd2, 0x74, 0x7e, 0x5a, 0x81, 0x0b, 0xc9, 0xc9, 0x11, 0xa7, 0x17, 0x30, 0xf2, 0x1d, 0x48, 0x3b,
	0xe0, 0x26, 0xac, 0xe5, 0x90, 0x50, 0x48, 0x55, 0xdc, 0x09, 0xcd, 0x0c, 0xb5, 0x27, 0xa4, 0xc2,
	0x0d, 0x71, 0x05, 0x6a, 0xe1, 0xb6, 0x17, 0x3f, 0xe1, 0xe9, 0x11, 0x67, 0xf6, 0x80, 0x0a, 0xe1,
	0xf6, 0x03, 0x03, 0xc9, 0x3c, 0xba, 0x0e, 0xbb, 0x43, 0xd6, 0xe5, 0xa1, 0x71, 0xc4, 0x75, 0x0b,
	0xdd, 0xd3, 0xc0, 0xce, 0x8f, 0x2b, 0x50, 0xf7, 0xf9, 0xe0, 0x69, 0xad, 0x09, 0xbe, 0x0b, 0x4a,
	0xef, 0x8b, 0x18, 0x9e, 0xf6, 0x91, 0x6e, 0x33, 0x7e, 0x4b, 0x9f, 0x4d, 0x53, 0xaf, 0x3b, 0xec,
	0xf5, 0x32, 0xd7, 0xdf, 0xb0, 0xe0, 0x3b, 0x08, 0xd5, 0x5d, 0xf4, 0x52, 0x36, 0xb0, 0xf7, 0x06,
	0x9b, 0xae, 0x7d, 0xec, 0x7c, 0x1d, 0xda, 0x66, 0xd7, 0xf4, 0x7d, 0x1f, 0xd3, 0x3a, 0x14, 0x44,
	0xeb, 0x09, 0xba, 0x06, 0xcb, 0x01, 0x4f, 0xb1, 0xfa, 0x8d, 0x3a, 0x40, 0x92, 0xd5, 0x0c, 0x0c,
	0x95, 0xe0, 0x22, 0x54, 0x25, 0xf7, 0x4b, 0x97, 0x1d, 0x97, 0x24, 0xf7, 0x69, 0xfa, 0x7f, 0x04,
	0xd0, 0xca, 0xde, 0x89, 0x55, 0x3d, 0x7a, 0x4b, 0x71, 0x7c, 0xea, 0x33, 0xf0, 0xd8, 0xd4, 0x6b,
	0x77, 0x84, 0x95, 0x82, 0xd3, 0xf1, 0xd4, 0xd1, 0xcc, 0x74, 0x2e, 0xf6, 0x8f, 0x24, 0xa9, 0xc6,
	0xb2, 0x47, 0xff, 0xb3, 0x02, 0x4e, 0x21, 0x7f, 0x53, 0xbe, 0xed, 0xeb, 0x4e, 0x89, 0x7b, 0x81,
	0x81, 0xdb, 0xa4, 0x87, 0x51, 0x19, 0x0a, 0x8e, 0xaf, 0x7c, 0xe7, 0x77, 0x5a, 0x32, 0x14, 0x18,
	0xb8, 0x4d, 0x7a, 0x28, 0xca, 0xf0, 0xdf, 0xc1, 0xc9, 0x9c, 0x60, 0x2e, 0xc2, 0xfc, 0x74, 0x42,
	0xb2, 0x51, 0xf7, 0xea, 0x36, 0x09, 0x52, 0x14, 0xe0, 0x27, 0x15, 0x68, 0x95, 0x3d, 0xaa, 0x15,
	0x62, 0x61, 0x3a, 0xaf, 0x27, 0xfd, 0x16, 0x8f, 0xed, 0xae, 0x21, 0xe6, 0x61, 0x2c, 0x8b, 0x12,
	0xfd, 0xb8, 0x02, 0x1b, 0x66, 0xe5, 0xac, 0x57, 0xb5, 0x22, 0x2d, 0xa2, 0x48, 0x87, 0xd3, 0x53,
	0x8f, 0x9c, 0x85, 0xbb, 0x4e, 0x3c, 0xbf, 0x9c, 0x96, 0xd6, 0xe7, 0x17, 0x15, 0xb8, 0x92, 0x48,
	0x3e, 0x0c, 0xe2, 0x13, 0x91, 0x72, 0x4f, 0xdb, 0x23, 0x8f, 0x47, 0x41, 0x49, 0x2a, 0x7a, 0x17,
	0xe6, 0x6b, 0xcf, 0xec, 0x37, 0xcf, 0xb3, 0xa8, 0xee, 0xa5, 0x5c, 0x82, 0x77, 0x38, 0x0b, 0xee,
	0x45, 0x41, 0x51, 0xc4, 0x27, 0xb0, 0x42, 0x66, 0x2f, 0x97, 0x88, 0x42, 0xfa, 0x67, 0x2e, 0xd6,
	0x97, 0xac, 0xa9, 0xdb, 0xf0, 0xf9, 0x60, 0x64, 0xfb, 0xac, 0x68, 0xe3, 0x56, 0x64, 0x4c, 0xc1,
	0xfd, 0x57, 0xa7, 0xb4, 0x40, 0x63, 0xa6, 0xd3, 0x6d, 0xf4, 0x7d, 0xbf, 0x78, 0xa9, 0xea, 0x97,
	0x73, 0xe0, 0x60, 0xb6, 0x38, 0xe8, 0xb2, 0x3e, 0x86, 0x97, 0xa9, 0x76, 0x62, 0x78, 0x17, 0x25,
	0x19, 0xaa, 0x42, 0xed, 0xa2, 0x82, 0x77, 0xd6, 0xeb, 0x08, 0xce, 0x0a, 0x0b, 0x2f, 0x42, 0x93,
	0xe8, 0x0a, 0x25, 0x41, 0xb4, 0x80, 0x73, 0x2e, 0x75, 0xf0, 0x30, 0x2b, 0x07, 0xea, 0x03, 0x6c,
	0x3c, 0x54, 0xe5, 0x4e, 0x67, 0x91, 0xb4, 0x41, 0xf0, 0xac, 0xd7, 0x97, 0xc0, 0x31, 0x94, 0xc5,
	0x6e, 0xe7, 0x90, 0xd6, 0xf4, 0x51, 0xe8, 0xf7, 0xd3, 0xb0, 0x9e, 0x70, 0x76, 0xec, 0x8d, 0x0a,
	0x4c, 0x97, 0xec, 0x9b, 0x1a, 0xb7, 0x5b, 0x12, 0xfa, 0xb3, 0xb0, 0x51, 0x68, 0x50, 0x64, 0xb1,
	0x80, 0x4d, 0xd6, 0xb2, 0x26, 0x05, 0x2e, 0x9f, 0x81, 0x16, 0x36, 0x1a, 0x1b, 0xc2, 0x22, 0xb6,
	0x71, 0x34, 0xf2, 0x41, 0x79, 0x18, 0xaf, 0xc0, 0x66, 0xb1, 0x49, 0x91, 0xd1, 0x12, 0x36, 0x5a,
	0xcf, 0x1b, 0x15, 0x38, 0x95, 0xce, 0xa6, 0xd5, 0xd1, 0xb3, 0xe9, 0x75, 0xa8, 0xe3, 0xab, 0x9b,
	0x59, 0x35, 0x8c, 0x32, 0x55, 0xcb, 0x1a, 0x98, 0x55, 0xc2, 0xae, 0x40, 0xcd, 0x30, 0x45, 0xef,
	0x4c, 0x29, 0x2a, 0x20, 0xd0, 0x9e, 0x76, 0xd0, 0x97, 0x01, 0x68, 0xf4, 0x88, 0xa7, 0xb4, 0x54,
	0x15, 0x21, 0x88, 0xbe, 0x0a, 0xb5, 0x94, 0x87, 0x82, 0x75, 0x45, 0x98, 0x27, 0xa2, 0x8a, 0xa0,
	0xce, 0x5f, 0xd7, 0xc1, 0x29, 0xd4, 0x19, 0xec, 0x0b, 0x5a, 0x2f, 0xd8, 0x92, 0xf3, 0x48, 0x7e,
	0x7d, 0xce, 0x5e, 0x4d, 0x2a, 0xbd, 0x1d, 0xde, 0x3d, 0x53, 0xc5, 0x17, 0xc9, 0x49, 0x6f, 0xea,
	0x08, 0xcd, 0xc8, 0xae, 0xc1, 0xb2, 0xed, 0x11, 0x0b, 0xd8, 0xa4, 0x31, 0x35, 0x03, 0xc3, 0xea,
	0xf5, 0x65, 0x00, 0xea, 0x09, 0x09, 0x48, 0x4d, 0xaa, 0x08, 0x41, 0xf4, 0x5b, 0xb0, 0x85, 0xaf,
	0x22, 0xf9, 0x4c, 0x9e, 0x53, 0x8a, 0x9d, 0x73, 0xdb, 0x19, 0xc5, 0x68, 0x8a, 0xfa, 0x2d, 0xd8,
	0xea, 0xa6, 0x31, 0x0b, 0x26, 0xb7, 0x26, 0x85, 0x69, 0x67, 0x14, 0x13, 0x2a, 0xa1, 0xe3, 0xbc,
	0x51, 0x4c, 0x52, 0x9b, 0xf5, 0x51, 0xbe, 0xf6, 0x3d, 0xf6, 0x71, 0x9e, 0xd8, 0xca, 0xe8, 0xcd,
	0x28, 0x3f, 0x6c, 0x75, 0x0d, 0x96, 0xad, 0x72, 0xa6, 0x71, 0x22, 0x8d, 0xea, 0x18, 0x45, 0xd8,
	0xd1, 0xa0, 0xc2, 0xc6, 0x7a, 0x3c, 0xe4, 0x43, 0x6e, 0x08, 0x49, 0x83, 0xcc, 0xc6, 0x7a, 0x4f,
	0x23, 0x88, 0xfa, 0x0a, 0xd4, 0xcc, 0x9e, 0x42, 0x32, 0xa3, 0x45, 0x64, 0x00, 0x90, 0x20, 0xdb,
	0xfd, 0xc5, 0xde, 0x48, 0x99, 0x68, 0xf7, 0x17, 0x3a, 0xdb, 0x86, 0xd6, 0xe4, 0x82, 0xb4, 0xc9,
	0x72, 0xa6, 0xc3, 0x89, 0x75, 0xe4, 0x73, 0x6a, 0xd0, 0x94, 0xeb, 0x5c, 0xef, 0x4f, 0xaa, 0x3e,
	0xbf, 0x05, 0x5b, 0xea, 0x28, 0x8d, 0x95, 0x0a, 0x79, 0x30, 0xde, 0x92, 0x32, 0x9f, 0xed, 0x8c,
	0x62, 0xb4, 0x35, 0x65, 0xab, 0x85, 0x3a, 0x1b, 0x6f, 0xba, 0x9a, 0x65, 0xab, 0x85, 0x3a, 0x1b,
	0x6d, 0xb7, 0x0b, 0xd7, 0x86, 0xd1, 0x71, 0x14, 0x9f, 0x44, 0x1e, 0x7e, 0xb7, 0xc5, 0x8f, 0x27,
	0xd4, 0x62, 0xe8, 0x65, 0x85, 0xe7, 0x0c, 0xe1, 0x43, 0x43, 0x37, 0xda, 0xd5, 0x35, 0x58, 0xa6,
	0x69, 0x35, 0x65, 0x52, 0x87, 0x16, 0x12, 0x61, 0xa6, 0x96, 0x5a, 0xbe, 0xf9, 0xb0, 0x36, 0x7a,
	0xf3, 0x01, 0x03, 0x7e, 0xdd, 0x83, 0x3e, 0x14, 0xa4, 0xc3, 0x48, 0xb6, 0xd7, 0x6d, 0xc0, 0x9f,
	0x0c, 0xd5, 0x03, 0x03, 0xd4, 0x63, 0x35, 0xe1, 0xb6, 0x2d, 0x97, 0x66, 0x92, 0xb6, 0x68, 0xac,
	0x06, 0x4d, 0xdd, 0x66, 0x02, 0x6e, 0x43, 0xcb, 0x5c, 0xac, 0xe8, 0x47, 0x71, 0x9a, 0xcf, 0x72,
	0x7b, 0x83, 0xd6, 0x92, 0xee, 0x52, 0x10, 0xce, 0x0c, 0x2e, 0x1f, 0x14, 0x5d, 0x09, 0x68, 0x6f,
	0x16, 0x06, 0x45, 0x17, 0x01, 0xcc, 0x45, 0xdb, 0xc2, 0xc0, 0xdb, 0x64, 0xda, 0x08, 0x68, 0x86,
	0xf6, 0x42, 0xe6, 0x45, 0x30, 0x3b, 0x88, 0x83, 0xbb, 0x40, 0x2a, 0x47, 0xf0, 0x47, 0x16, 0xac,
	0xd5, 0xc7, 0x90, 0xd2, 0x19, 0xc4, 0xde, 0xcd, 0x95, 0xed, 0x2d, 0x52, 0x1f, 0xc2, 0xd2, 0x51,
	0xc4, 0xdc, 0xd1, 0x95, 0xce, 0x9b, 0xb0, 0x55, 0x6a, 0x25, 0x3d, 0x79, 0x82, 0x37, 0xe8, 0xb5,
	0x1d, 0x6f, 0x5f, 0xa4, 0xdb, 0x17, 0xc5, 0x96, 0xf2, 0x80, 0xf0, 0x0f, 0x86, 0xca, 0xd9, 0x82,
	0x25, 0x96, 0x24, 0xa1, 0x78, 0x3c, 0xe4, 0xed, 0x4b, 0x94, 0x73, 0xb4, 0xcf, 0xce, 0x06, 0x2c,
	0xa4, 0x5c, 0xea, 0x69, 0xba, 0x4c, 0x1f, 0x2c, 0xa0, 0x27, 0xe7, 0xd3, 0xb0, 0x66, 0x3f, 0xc8,
	0x82, 0x55, 0x3f, 0xa1, 0x1d, 0xb3, 0x6c, 0x3f, 0x47, 0x75, 0x46, 0x83, 0x3a, 0xcc, 0x31, 0xce,
	0x27, 0xa1, 0xc9, 0x9e, 0x30, 0x11, 0x1a, 0x5b, 0xec, 0xf5, 0x42, 0xd6, 0x6f, 0x5f, 0xa1, 0x4d,
	0x5c, 0x44, 0xbc, 0x1d, 0xb2, 0xbe, 0xf3, 0x3c, 0x60, 0x49, 0xcc, 0x64, 0xa1, 0xc5, 0x80, 0xb7,
	0xaf, 0x1a, 0x87, 0xc1, 0x24, 0xba, 0x2a, 0xbc, 0xac, 0xf9, 0x0e, 0x5c, 0xb3, 0x1f, 0xe2, 0x29,
	0x5c, 0x84, 0xc7, 0xa2, 0x59, 0x96, 0x8f, 0x6c, 0x5f, 0xc3, 0x86, 0x97, 0x0d, 0x61, 0x76, 0x15,
	0x1e, 0x4b, 0x68, 0x77, 0x6d, 0xaa, 0xf2, 0x55, 0xd8, 0x24, 0x7e, 0x3a, 0x80, 0x89, 0x94, 0x88,
	0x86, 0x5a, 0x44, 0x64, 0xdc, 0x21, 0x9d, 0x42, 0xc6, 0x45, 0x2c, 0x4a, 0x70, 0x1b, 0x2e, 0x97,
	0x25, 0x18, 0xbd, 0xd3, 0x7f, 0x9d, 0x92, 0x19, 0x45, 0xee, 0x23, 0x57, 0xf9, 0xf1, 0xb5, 0xb4,
	0x09, 0x5d, 0xa0, 0xe5, 0x7c, 0xde, 0xbe, 0x96, 0x36, 0xda, 0x1c, 0xbf, 0xea, 0xf1, 0xaf, 0xf3,
	0xb0, 0x5a, 0x70, 0x67, 0x5d, 0x26, 0xff, 0x93, 0x3a, 0xb3, 0x11, 0x9b, 0x3c, 0xff, 0x74, 0x36,
	0x79, 0x61, 0xb2, 0x4d, 0x1e, 0x35, 0x34, 0x8b, 0xe3, 0x86, 0xe6, 0xa9, 0xcc, 0xda, 0xd2, 0xd3,
	0x9a, 0xb5, 0xe9, 0xfa, 0xa7, 0x31, 0x7b, 0x51, 0x9b, 0x60, 0x2f, 0xc6, 0xf5, 0x7f, 0xf9, 0x3f,
	0xaa, 0xff, 0xf5, 0x67, 0xd4, 0xff, 0xc6, 0x33, 0xe9, 0xff, 0xca, 0xb3, 0xe9, 0xff, 0xea, 0x6f,
	0xd5, 0xff, 0x5f, 0xcd, 0x64, 0xd7, 0x62, 0x44, 0x0f, 0xb3, 0x26, 0xe8, 0x63, 0xe8, 0x5e, 0x4d,
	0xf1, 0x03, 0x2c, 0x08, 0xc1, 0x6c, 0xfc, 0x0f, 0x2a, 0xb0, 0xde, 0x1b, 0x86, 0x85, 0xd3, 0x31,
	0xb5, 0x33, 0x09, 0x10, 0x77, 0x8a, 0xb7, 0x58, 0xec, 0x1b, 0xc7, 0x8e, 0xe6, 0xb7, 0x6b, 0x29,
	0x0e, 0x50, 0xca, 0x1f, 0x54, 0xa0, 0x85, 0xdb, 0x75, 0x4c, 0x8e, 0xd9, 0xe9, 0xe4, 0x00, 0x46,
	0xcd, 0x82, 0xbb, 0x86, 0xff, 0xca, 0x62, 0x74, 0x7e, 0x59, 0xa1, 0xaf, 0x18, 0x49, 0x4f, 0x13,
	0x8a, 0xc0, 0x53, 0x81, 0xb3, 0x09, 0x8b, 0xfa, 0x47, 0x3e, 0x7b, 0x0b, 0x22, 0xc0, 0xa9, 0xdb,
	0x80, 0x85, 0x61, 0x34, 0x94, 0xd9, 0x65, 0x12, 0xf3, 0x34, 0xf1, 0xaa, 0xc1, 0xec, 0xe4, 0xab,
	0x06, 0x9b, 0xb0, 0x88, 0xb7, 0xc0, 0x4d, 0xb1, 0xac, 0xea, 0x2e, 0xe8, 0xc7, 0x5d, 0x8c, 0xec,
	0x7b, 0x9c, 0x29, 0x7c, 0xf3, 0xd4, 0x5e, 0xfe, 0xa8, 0x1a, 0xc8, 0x6e, 0xe0, 0x34, 0x60, 0x46,
	0xd8, 0x9b, 0x1d, 0x33, 0x22, 0xe8, 0xb8, 0xe6, 0xf8, 0x87, 0x62, 0x77, 0xc3, 0xd8, 0x3f, 0xf6,
	0xa4, 0x9a, 0xf8, 0xde, 0xf4, 0x3a, 0xcc, 0xd3, 0xbb, 0x6b, 0xa6, 0x1e, 0x8b, 0x0f, 0x9a, 0x12,
	0xcb, 0x43, 0x5a, 0xcc, 0x65, 0x17, 0x7f, 0x77, 0x7e, 0x5e, 0x81, 0xf5, 0xbc, 0x53, 0x1e, 0xf2,
	0x01, 0xbd, 0x1c, 0x6d, 0xf3, 0xc5, 0x15, 0xa4, 0xc5, 0x7c, 0xb1, 0x84, 0x1a, 0x31, 0xa5, 0x57,
	0xff, 0xe9, 0x1e, 0xf5, 0x33, 0xab, 0xce, 0xf8, 0x88, 0x5c, 0xc0, 0x5f, 0xf4, 0xd6, 0xff, 0x1f,
	0xce, 0x5a, 0xcd, 0xc6, 0x7a, 0xe7, 0xb8, 0x9e, 0xd7, 0x8b, 0x7a, 0xfe, 0x2d, 0x58, 0x22, 0xb4,
	0xf9, 0xd2, 0xd0, 0x14, 0x72, 0x7b, 0x23, 0x8a, 0xe2, 0x2e, 0x22, 0x60, 0x37, 0xd0, 0xe1, 0x83,
	0x36, 0x0b, 0xd9, 0xbd, 0xd4, 0xaa, 0x9b, 0x3d, 0x8f, 0x4e, 0xd5, 0xdc, 0xef, 0x63, 0xaa, 0x9c,
	0x33, 0xa8, 0xdb, 0xf5, 0x23, 0xb6, 0xf3, 0xc8, 0xf6, 0x70, 0x7a, 0x6c, 0x73, 0xf5, 0x70, 0x97,
	0xcd, 0x6f, 0x5a, 0xa5, 0x9f, 0xb6, 0xa0, 0x56, 0xf8, 0x70, 0xe1, 0xc4, 0xcd, 0xb1, 0x3d, 0x79,
	0x73, 0x94, 0x2a, 0xd8, 0xb8, 0xaa, 0x9f, 0x1d, 0xa9, 0x60, 0xe3, 0xca, 0xbe, 0x0c, 0xeb, 0x47,
	0x2c, 0x0d, 0x4e, 0x58, 0x6a, 0x72, 0xbd, 0x52, 0xe1, 0x9b, 0x1a, 0xb7, 0x90, 0xd8, 0xb1, 0x38,
	0x4d, 0x7b, 0x80, 0x18, 0xbd, 0x07, 0x28, 0xa3, 0xfc, 0x0a, 0x92, 0xd0, 0x83, 0x56, 0xa0, 0x50,
	0x44, 0xb6, 0x6e, 0xf0, 0x2a, 0x19, 0x4a, 0x0d, 0xa1, 0x82, 0xc0, 0xf3, 0x50, 0x2f, 0x7f, 0x36,
	0xe7, 0x35, 0x12, 0xa6, 0x04, 0x74, 0x3e, 0x07, 0x17, 0xc6, 0xbf, 0x39, 0x61, 0x25, 0x7a, 0x9d,
	0x6e, 0xd8, 0x8c, 0x7d, 0x7a, 0xc2, 0x88, 0xb5, 0x0a, 0xb3, 0x03, 0x35, 0x6c, 0xbf, 0x41, 0x75,
	0x98, 0x81, 0x1a, 0x3a, 0xaf, 0xc0, 0xa6, 0x90, 0x5e, 0xb8, 0x4d, 0x11, 0x25, 0xa6, 0x7f, 0x6c,
	0x31, 0xfb, 0x73, 0xf8, 0x61, 0xb7, 0x75, 0x21, 0xf7, 0xb6, 0x0f, 0x2d, 0xd2, 0x56, 0xb5, 0x6f,
	0xc1, 0x06, 0xdd, 0x2f, 0xc8, 0x03, 0x51, 0xf3, 0xc2, 0xea, 0x9b, 0xe6, 0xca, 0x8d, 0xc6, 0xe6,
	0xb1, 0x28, 0xbd, 0xbc, 0xfa, 0x26, 0x6c, 0xa1, 0xcb, 0x1b, 0x6b, 0x8a, 0x5e, 0xef, 0x2d, 0x8a,
	0x98, 0x35, 0xc5, 0x41, 0xb9, 0x35, 0xfa, 0x3d, 0xfa, 0x6e, 0x49, 0xc0, 0x06, 0x09, 0xc7, 0x77,
	0x7b, 0xac, 0x98, 0x9f, 0x47, 0x31, 0x1d, 0x21, 0x77, 0x2c, 0xca, 0x0a, 0xf9, 0xfd, 0x0a, 0xb4,
	0x72, 0xfa, 0x62, 0xf2, 0xec, 0x0b, 0x53, 0xfd, 0xd8, 0x86, 0xf9, 0xe4, 0xa5, 0xbb, 0x9e, 0x31,
	0x2b, 0x26, 0xef, 0xb4, 0x2a, 0x24, 0x9c, 0x07, 0xed, 0x2f, 0x92, 0x39, 0xc4, 0x07, 0x7b, 0x2e,
	0x33, 0xf5, 0xb7, 0x2f, 0x65, 0xe7, 0x32, 0x53, 0x6e, 0xbb, 0x89, 0xdf, 0x51, 0x91, 0x7e, 0xca,
	0x06, 0xdd, 0x90, 0x67, 0x63, 0xbd, 0x8d, 0x63, 0x6d, 0x0a, 0x79, 0x60, 0x30, 0x76, 0xa8, 0x97,
	0xa0, 0x1a, 0x0c, 0x93, 0x90, 0x9f, 0x0a, 0x75, 0xd6, 0xbe, 0x43, 0x8a, 0x95, 0x01, 0x34, 0xb3,
	0x01, 0x0f, 0x04, 0x5d, 0x2e, 0x69, 0xdf, 0x25, 0x34, 0x42, 0x50, 0xbd, 0x2f, 0x9a, 0x4b, 0x03,
	0x88, 0xdd, 0x31, 0x9f, 0x8b, 0x11, 0xd1, 0x71, 0xfe, 0xb2, 0x99, 0xd7, 0x0b, 0xe3, 0x13, 0x4f,
	0x5b, 0x98, 0x34, 0x0e, 0xdb, 0xf7, 0xec, 0x1e, 0x79, 0x3b, 0x8c, 0x4f, 0xee, 0x12, 0xd0, 0x24,
	0xed, 0xca, 0x84, 0x6f, 0x53, 0x65, 0x2c, 0x1e, 0xaa, 0x22, 0xa5, 0x2c, 0x17, 0xdf, 0xbf, 0x3c,
	0xd5, 0x22, 0xc0, 0x39, 0x05, 0x78, 0xe7, 0x7b, 0xd0, 0xec, 0x0e, 0xd3, 0x08, 0xdf, 0xc3, 0xc9,
	0x58, 0xbf, 0xf3, 0x91, 0xb1, 0x5e, 0x21, 0x66, 0xbb, 0x91, 0xe5, 0xff, 0x1d, 0xa8, 0x97, 0x3e,
	0xa6, 0xd9, 0xde, 0x45, 0xde, 0x1f, 0x4c, 0x89, 0xf7, 0xe8, 0x67, 0x3e, 0xdd, 0xe5, 0xe2, 0x07,
	0x3a, 0xcb, 0x99, 0xc2, 0xaf, 0x4c, 0xc8, 0x14, 0x0e, 0xd8, 0xa9, 0x97, 0x53, 0xbc, 0x4b, 0x81,
	0xef, 0x80, 0x9d, 0xde, 0xc9, 0x88, 0x2e, 0x41, 0x35, 0xab, 0x70, 0xb6, 0xf7, 0xa8, 0x8b, 0x0c,
	0xe0, 0x5c, 0x85, 0x65, 0x32, 0x23, 0x61, 0x1c, 0x27, 0x3c, 0x68, 0xef, 0xa3, 0xa2, 0x82, 0xb6,
	0x1d, 0x7b, 0x08, 0x31, 0x97, 0xd7, 0x38, 0x7e, 0x95, 0xa5, 0x74, 0x67, 0xe8, 0x3e, 0x15, 0x5b,
	0x09, 0xb9, 0x5b, 0xba, 0x39, 0xf4, 0x0a, 0x6c, 0x64, 0xdf, 0x29, 0xf2, 0xe3, 0xa8, 0x27, 0xfa,
	0x43, 0xba, 0xf7, 0xd7, 0x7e, 0x40, 0x17, 0x1e, 0x2d, 0xf6, 0x6e, 0x11, 0xe9, 0x5c, 0x85, 0x5a,
	0xe1, 0x4b, 0x57, 0xed, 0x87, 0xb6, 0xe8, 0x97, 0x7f, 0x4c, 0xef, 0x43, 0x58, 0x61, 0x23, 0xd5,
	0xb8, 0xf7, 0xa6, 0xaa, 0x0b, 0x85, 0x4f, 0xa0, 0xba, 0x0d, 0x56, 0x2e, 0xc8, 0x9d, 0x42, 0x43,
	0x94, 0x79, 0xbb, 0xd3, 0xb9, 0x0e, 0x30, 0xf6, 0xa9, 0x53, 0xb7, 0x2e, 0x4a, 0x9c, 0x6f, 0xc1,
	0x86, 0x90, 0xde, 0x80, 0xe9, 0x26, 0x11, 0x7e, 0x64, 0xcc, 0x1a, 0x96, 0x03, 0x6b, 0xeb, 0xf7,
	0x73, 0x64, 0xe1, 0xf3, 0x12, 0x82, 0x22, 0x20, 0x4f, 0x44, 0x4f, 0xf0, 0xe3, 0x24, 0xed, 0x43,
	0xa4, 0x6f, 0x68, 0xa3, 0xab, 0xd8, 0xae, 0x81, 0xe2, 0xdb, 0xfd, 0x99, 0x1b, 0xc1, 0x82, 0xeb,
	0x23, 0xf3, 0xd5, 0x0e, 0x0b, 0xc5, 0x92, 0xeb, 0x75, 0xa8, 0xf7, 0xd0, 0x0d, 0x1c, 0x0d, 0x15,
	0xbe, 0x45, 0xf7, 0x3e, 0x7d, 0x42, 0x54, 0x03, 0x0f, 0x0c, 0xcc, 0xf9, 0x49, 0x65, 0xd4, 0xcf,
	0x15, 0x67, 0xec, 0x83, 0xa9, 0xae, 0x56, 0xe1, 0x93, 0x4e, 0x6e, 0xbb, 0xc4, 0xb4, 0x38, 0x7b,
	0x3f, 0xad, 0xc0, 0xd6, 0x84, 0x9a, 0xaf, 0x15, 0xe9, 0xab, 0xd3, 0xf9, 0x42, 0xda, 0xc4, 0x72,
	0xb3, 0xdb, 0x1e, 0xab, 0x28, 0x5b, 0xa9, 0x1e, 0x03, 0x64, 0x25, 0x06, 0xd9, 0xfe, 0xda, 0x74,
	0xe6, 0x65, 0xbc, 0xd0, 0xe3, 0x56, 0xed, 0x5b, 0x34, 0xf8, 0x7e, 0xc6, 0x7a, 0xf9, 0x0c, 0x65,
	0x5e, 0x4b, 0xf8, 0xfa, 0x54, 0x2b, 0xda, 0xf6, 0x7c, 0xe9, 0xe6, 0x95, 0xf6, 0xfc, 0xed, 0x04,
	0x2d, 0xc4, 0x66, 0xb8, 0xed, 0x4d, 0x94, 0xe3, 0x1b, 0x28, 0xc7, 0x57, 0xa6, 0x13, 0x7b, 0xe2,
	0xb8, 0x5b, 0xe1, 0xf6, 0xee, 0x04, 0x21, 0x2e, 0xc0, 0x92, 0xe8, 0x79, 0x22, 0x0a, 0xf8, 0x69,
	0xfb, 0x9b, 0x74, 0xb3, 0x41, 0xf4, 0x76, 0xf5, 0x63, 0x77, 0x01, 0xb3, 0x20, 0x9f, 0xfd, 0xf7,
	0x00, 0x00, 0x00, 0xff, 0xff, 0x1c, 0xfd, 0x1e, 0x6a, 0xa9, 0x5b, 0x00, 0x00,
}
