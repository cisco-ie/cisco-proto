/*
Copyright 2019 Cisco Systems

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: ip_arm_edm_summary_bag_type.proto

package cisco_ios_xr_ip_iarm_v4_oper_ipv4arm_summary

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type IpArmEdmSummaryBagType_KEYS struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IpArmEdmSummaryBagType_KEYS) Reset()         { *m = IpArmEdmSummaryBagType_KEYS{} }
func (m *IpArmEdmSummaryBagType_KEYS) String() string { return proto.CompactTextString(m) }
func (*IpArmEdmSummaryBagType_KEYS) ProtoMessage()    {}
func (*IpArmEdmSummaryBagType_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_354fe647745a9b0d, []int{0}
}

func (m *IpArmEdmSummaryBagType_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IpArmEdmSummaryBagType_KEYS.Unmarshal(m, b)
}
func (m *IpArmEdmSummaryBagType_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IpArmEdmSummaryBagType_KEYS.Marshal(b, m, deterministic)
}
func (m *IpArmEdmSummaryBagType_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IpArmEdmSummaryBagType_KEYS.Merge(m, src)
}
func (m *IpArmEdmSummaryBagType_KEYS) XXX_Size() int {
	return xxx_messageInfo_IpArmEdmSummaryBagType_KEYS.Size(m)
}
func (m *IpArmEdmSummaryBagType_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_IpArmEdmSummaryBagType_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_IpArmEdmSummaryBagType_KEYS proto.InternalMessageInfo

type IpArmEdmSummaryBagType struct {
	ProducerCount           int32    `protobuf:"zigzag32,50,opt,name=producer_count,json=producerCount,proto3" json:"producer_count,omitempty"`
	AddressConflictCount    int32    `protobuf:"zigzag32,51,opt,name=address_conflict_count,json=addressConflictCount,proto3" json:"address_conflict_count,omitempty"`
	UnnumberedConflictCount int32    `protobuf:"zigzag32,52,opt,name=unnumbered_conflict_count,json=unnumberedConflictCount,proto3" json:"unnumbered_conflict_count,omitempty"`
	DbMasterVersion         uint32   `protobuf:"varint,53,opt,name=db_master_version,json=dbMasterVersion,proto3" json:"db_master_version,omitempty"`
	VrfCount                int32    `protobuf:"zigzag32,54,opt,name=vrf_count,json=vrfCount,proto3" json:"vrf_count,omitempty"`
	XXX_NoUnkeyedLiteral    struct{} `json:"-"`
	XXX_unrecognized        []byte   `json:"-"`
	XXX_sizecache           int32    `json:"-"`
}

func (m *IpArmEdmSummaryBagType) Reset()         { *m = IpArmEdmSummaryBagType{} }
func (m *IpArmEdmSummaryBagType) String() string { return proto.CompactTextString(m) }
func (*IpArmEdmSummaryBagType) ProtoMessage()    {}
func (*IpArmEdmSummaryBagType) Descriptor() ([]byte, []int) {
	return fileDescriptor_354fe647745a9b0d, []int{1}
}

func (m *IpArmEdmSummaryBagType) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IpArmEdmSummaryBagType.Unmarshal(m, b)
}
func (m *IpArmEdmSummaryBagType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IpArmEdmSummaryBagType.Marshal(b, m, deterministic)
}
func (m *IpArmEdmSummaryBagType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IpArmEdmSummaryBagType.Merge(m, src)
}
func (m *IpArmEdmSummaryBagType) XXX_Size() int {
	return xxx_messageInfo_IpArmEdmSummaryBagType.Size(m)
}
func (m *IpArmEdmSummaryBagType) XXX_DiscardUnknown() {
	xxx_messageInfo_IpArmEdmSummaryBagType.DiscardUnknown(m)
}

var xxx_messageInfo_IpArmEdmSummaryBagType proto.InternalMessageInfo

func (m *IpArmEdmSummaryBagType) GetProducerCount() int32 {
	if m != nil {
		return m.ProducerCount
	}
	return 0
}

func (m *IpArmEdmSummaryBagType) GetAddressConflictCount() int32 {
	if m != nil {
		return m.AddressConflictCount
	}
	return 0
}

func (m *IpArmEdmSummaryBagType) GetUnnumberedConflictCount() int32 {
	if m != nil {
		return m.UnnumberedConflictCount
	}
	return 0
}

func (m *IpArmEdmSummaryBagType) GetDbMasterVersion() uint32 {
	if m != nil {
		return m.DbMasterVersion
	}
	return 0
}

func (m *IpArmEdmSummaryBagType) GetVrfCount() int32 {
	if m != nil {
		return m.VrfCount
	}
	return 0
}

func init() {
	proto.RegisterType((*IpArmEdmSummaryBagType_KEYS)(nil), "cisco_ios_xr_ip_iarm_v4_oper.ipv4arm.summary.ip_arm_edm_summary_bag_type_KEYS")
	proto.RegisterType((*IpArmEdmSummaryBagType)(nil), "cisco_ios_xr_ip_iarm_v4_oper.ipv4arm.summary.ip_arm_edm_summary_bag_type")
}

func init() { proto.RegisterFile("ip_arm_edm_summary_bag_type.proto", fileDescriptor_354fe647745a9b0d) }

var fileDescriptor_354fe647745a9b0d = []byte{
	// 248 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x90, 0x4f, 0x4b, 0x03, 0x31,
	0x10, 0x47, 0xd9, 0x8b, 0x68, 0xa0, 0x4a, 0x17, 0xd1, 0x4a, 0x2f, 0xeb, 0x82, 0x50, 0x44, 0xf6,
	0x60, 0x57, 0x0f, 0x5e, 0x8b, 0x27, 0xf1, 0x52, 0x41, 0xf0, 0x34, 0x64, 0x93, 0xac, 0x04, 0x4c,
	0x26, 0x4c, 0xfe, 0x60, 0x3f, 0xbd, 0xd2, 0x34, 0x22, 0x7a, 0xe8, 0xf5, 0x37, 0xef, 0xbd, 0xc3,
	0xb0, 0x4b, 0xed, 0x80, 0x93, 0x01, 0x25, 0x0d, 0xf8, 0x68, 0x0c, 0xa7, 0x0d, 0x0c, 0xfc, 0x1d,
	0xc2, 0xc6, 0xa9, 0xce, 0x11, 0x06, 0xac, 0x6f, 0x84, 0xf6, 0x02, 0x41, 0xa3, 0x87, 0x4f, 0x02,
	0xed, 0x40, 0x6f, 0x85, 0xd4, 0x03, 0x3a, 0x45, 0x9d, 0x76, 0xa9, 0xe7, 0x64, 0xba, 0x22, 0xb7,
	0x2d, 0x6b, 0xf6, 0x24, 0xe1, 0xe9, 0xf1, 0xed, 0xa5, 0xfd, 0xaa, 0xd8, 0x7c, 0x0f, 0x54, 0x5f,
	0xb1, 0x63, 0x47, 0x28, 0xa3, 0x50, 0x04, 0x02, 0xa3, 0x0d, 0xb3, 0xdb, 0xa6, 0x5a, 0x4c, 0xd7,
	0x93, 0x9f, 0x75, 0xb5, 0x1d, 0xeb, 0x9e, 0x9d, 0x71, 0x29, 0x49, 0x79, 0x0f, 0x02, 0xed, 0xf8,
	0xa1, 0x45, 0x28, 0xf8, 0x32, 0xe3, 0xa7, 0xe5, 0xba, 0x2a, 0xc7, 0x9d, 0xf5, 0xc0, 0x2e, 0xa2,
	0xb5, 0xd1, 0x0c, 0x8a, 0x94, 0xfc, 0x2f, 0xf6, 0x59, 0x3c, 0xff, 0x05, 0xfe, 0xba, 0xd7, 0x6c,
	0x2a, 0x07, 0x30, 0xdc, 0x07, 0x45, 0x90, 0x14, 0x79, 0x8d, 0x76, 0x76, 0xd7, 0x54, 0x8b, 0xc9,
	0xfa, 0x44, 0x0e, 0xcf, 0x79, 0x7f, 0xdd, 0xcd, 0xf5, 0x9c, 0x1d, 0x25, 0x1a, 0x4b, 0xf7, 0x3e,
	0x77, 0x0f, 0x13, 0x8d, 0x39, 0x34, 0x1c, 0xe4, 0xd7, 0x2e, 0xbf, 0x03, 0x00, 0x00, 0xff, 0xff,
	0x9f, 0x30, 0x49, 0xb7, 0x7f, 0x01, 0x00, 0x00,
}
