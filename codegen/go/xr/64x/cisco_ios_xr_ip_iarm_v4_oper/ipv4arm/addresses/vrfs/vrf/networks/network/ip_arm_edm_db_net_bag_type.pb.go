/*
Copyright 2019 Cisco Systems

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: ip_arm_edm_db_net_bag_type.proto

package cisco_ios_xr_ip_iarm_v4_oper_ipv4arm_addresses_vrfs_vrf_networks_network

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type IpArmEdmDbNetBagType_KEYS struct {
	VrfName              string   `protobuf:"bytes,1,opt,name=vrf_name,json=vrfName,proto3" json:"vrf_name,omitempty"`
	Address              string   `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
	PrefixLength         uint32   `protobuf:"varint,3,opt,name=prefix_length,json=prefixLength,proto3" json:"prefix_length,omitempty"`
	Handle               string   `protobuf:"bytes,4,opt,name=handle,proto3" json:"handle,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IpArmEdmDbNetBagType_KEYS) Reset()         { *m = IpArmEdmDbNetBagType_KEYS{} }
func (m *IpArmEdmDbNetBagType_KEYS) String() string { return proto.CompactTextString(m) }
func (*IpArmEdmDbNetBagType_KEYS) ProtoMessage()    {}
func (*IpArmEdmDbNetBagType_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_6ccc3a5259e08d9a, []int{0}
}

func (m *IpArmEdmDbNetBagType_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IpArmEdmDbNetBagType_KEYS.Unmarshal(m, b)
}
func (m *IpArmEdmDbNetBagType_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IpArmEdmDbNetBagType_KEYS.Marshal(b, m, deterministic)
}
func (m *IpArmEdmDbNetBagType_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IpArmEdmDbNetBagType_KEYS.Merge(m, src)
}
func (m *IpArmEdmDbNetBagType_KEYS) XXX_Size() int {
	return xxx_messageInfo_IpArmEdmDbNetBagType_KEYS.Size(m)
}
func (m *IpArmEdmDbNetBagType_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_IpArmEdmDbNetBagType_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_IpArmEdmDbNetBagType_KEYS proto.InternalMessageInfo

func (m *IpArmEdmDbNetBagType_KEYS) GetVrfName() string {
	if m != nil {
		return m.VrfName
	}
	return ""
}

func (m *IpArmEdmDbNetBagType_KEYS) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *IpArmEdmDbNetBagType_KEYS) GetPrefixLength() uint32 {
	if m != nil {
		return m.PrefixLength
	}
	return 0
}

func (m *IpArmEdmDbNetBagType_KEYS) GetHandle() string {
	if m != nil {
		return m.Handle
	}
	return ""
}

type ArmAddrtype struct {
	Afi                  int32    `protobuf:"zigzag32,1,opt,name=afi,proto3" json:"afi,omitempty"`
	Ipv4Address          string   `protobuf:"bytes,2,opt,name=ipv4_address,json=ipv4Address,proto3" json:"ipv4_address,omitempty"`
	Ipv6Address          string   `protobuf:"bytes,3,opt,name=ipv6_address,json=ipv6Address,proto3" json:"ipv6_address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ArmAddrtype) Reset()         { *m = ArmAddrtype{} }
func (m *ArmAddrtype) String() string { return proto.CompactTextString(m) }
func (*ArmAddrtype) ProtoMessage()    {}
func (*ArmAddrtype) Descriptor() ([]byte, []int) {
	return fileDescriptor_6ccc3a5259e08d9a, []int{1}
}

func (m *ArmAddrtype) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ArmAddrtype.Unmarshal(m, b)
}
func (m *ArmAddrtype) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ArmAddrtype.Marshal(b, m, deterministic)
}
func (m *ArmAddrtype) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ArmAddrtype.Merge(m, src)
}
func (m *ArmAddrtype) XXX_Size() int {
	return xxx_messageInfo_ArmAddrtype.Size(m)
}
func (m *ArmAddrtype) XXX_DiscardUnknown() {
	xxx_messageInfo_ArmAddrtype.DiscardUnknown(m)
}

var xxx_messageInfo_ArmAddrtype proto.InternalMessageInfo

func (m *ArmAddrtype) GetAfi() int32 {
	if m != nil {
		return m.Afi
	}
	return 0
}

func (m *ArmAddrtype) GetIpv4Address() string {
	if m != nil {
		return m.Ipv4Address
	}
	return ""
}

func (m *ArmAddrtype) GetIpv6Address() string {
	if m != nil {
		return m.Ipv6Address
	}
	return ""
}

type IpArmEdmAddr struct {
	AddressXr            *ArmAddrtype `protobuf:"bytes,1,opt,name=address_xr,json=addressXr,proto3" json:"address_xr,omitempty"`
	PrefixLength         uint32       `protobuf:"varint,2,opt,name=prefix_length,json=prefixLength,proto3" json:"prefix_length,omitempty"`
	RouteTag             uint32       `protobuf:"varint,3,opt,name=route_tag,json=routeTag,proto3" json:"route_tag,omitempty"`
	IsPrimary            bool         `protobuf:"varint,4,opt,name=is_primary,json=isPrimary,proto3" json:"is_primary,omitempty"`
	IsTentative          bool         `protobuf:"varint,5,opt,name=is_tentative,json=isTentative,proto3" json:"is_tentative,omitempty"`
	IsPrefixSid          bool         `protobuf:"varint,6,opt,name=is_prefix_sid,json=isPrefixSid,proto3" json:"is_prefix_sid,omitempty"`
	Producer             string       `protobuf:"bytes,7,opt,name=producer,proto3" json:"producer,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *IpArmEdmAddr) Reset()         { *m = IpArmEdmAddr{} }
func (m *IpArmEdmAddr) String() string { return proto.CompactTextString(m) }
func (*IpArmEdmAddr) ProtoMessage()    {}
func (*IpArmEdmAddr) Descriptor() ([]byte, []int) {
	return fileDescriptor_6ccc3a5259e08d9a, []int{2}
}

func (m *IpArmEdmAddr) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IpArmEdmAddr.Unmarshal(m, b)
}
func (m *IpArmEdmAddr) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IpArmEdmAddr.Marshal(b, m, deterministic)
}
func (m *IpArmEdmAddr) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IpArmEdmAddr.Merge(m, src)
}
func (m *IpArmEdmAddr) XXX_Size() int {
	return xxx_messageInfo_IpArmEdmAddr.Size(m)
}
func (m *IpArmEdmAddr) XXX_DiscardUnknown() {
	xxx_messageInfo_IpArmEdmAddr.DiscardUnknown(m)
}

var xxx_messageInfo_IpArmEdmAddr proto.InternalMessageInfo

func (m *IpArmEdmAddr) GetAddressXr() *ArmAddrtype {
	if m != nil {
		return m.AddressXr
	}
	return nil
}

func (m *IpArmEdmAddr) GetPrefixLength() uint32 {
	if m != nil {
		return m.PrefixLength
	}
	return 0
}

func (m *IpArmEdmAddr) GetRouteTag() uint32 {
	if m != nil {
		return m.RouteTag
	}
	return 0
}

func (m *IpArmEdmAddr) GetIsPrimary() bool {
	if m != nil {
		return m.IsPrimary
	}
	return false
}

func (m *IpArmEdmAddr) GetIsTentative() bool {
	if m != nil {
		return m.IsTentative
	}
	return false
}

func (m *IpArmEdmAddr) GetIsPrefixSid() bool {
	if m != nil {
		return m.IsPrefixSid
	}
	return false
}

func (m *IpArmEdmAddr) GetProducer() string {
	if m != nil {
		return m.Producer
	}
	return ""
}

type ReferencedInterfaceItem struct {
	Value                string   `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReferencedInterfaceItem) Reset()         { *m = ReferencedInterfaceItem{} }
func (m *ReferencedInterfaceItem) String() string { return proto.CompactTextString(m) }
func (*ReferencedInterfaceItem) ProtoMessage()    {}
func (*ReferencedInterfaceItem) Descriptor() ([]byte, []int) {
	return fileDescriptor_6ccc3a5259e08d9a, []int{3}
}

func (m *ReferencedInterfaceItem) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReferencedInterfaceItem.Unmarshal(m, b)
}
func (m *ReferencedInterfaceItem) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReferencedInterfaceItem.Marshal(b, m, deterministic)
}
func (m *ReferencedInterfaceItem) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReferencedInterfaceItem.Merge(m, src)
}
func (m *ReferencedInterfaceItem) XXX_Size() int {
	return xxx_messageInfo_ReferencedInterfaceItem.Size(m)
}
func (m *ReferencedInterfaceItem) XXX_DiscardUnknown() {
	xxx_messageInfo_ReferencedInterfaceItem.DiscardUnknown(m)
}

var xxx_messageInfo_ReferencedInterfaceItem proto.InternalMessageInfo

func (m *ReferencedInterfaceItem) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

type IpArmEdmDbNetBagType struct {
	InterfaceName        string                   `protobuf:"bytes,50,opt,name=interface_name,json=interfaceName,proto3" json:"interface_name,omitempty"`
	AddressXr            *IpArmEdmAddr            `protobuf:"bytes,51,opt,name=address_xr,json=addressXr,proto3" json:"address_xr,omitempty"`
	ReferencedInterface  *ReferencedInterfaceItem `protobuf:"bytes,52,opt,name=referenced_interface,json=referencedInterface,proto3" json:"referenced_interface,omitempty"`
	VrfName              string                   `protobuf:"bytes,53,opt,name=vrf_name,json=vrfName,proto3" json:"vrf_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *IpArmEdmDbNetBagType) Reset()         { *m = IpArmEdmDbNetBagType{} }
func (m *IpArmEdmDbNetBagType) String() string { return proto.CompactTextString(m) }
func (*IpArmEdmDbNetBagType) ProtoMessage()    {}
func (*IpArmEdmDbNetBagType) Descriptor() ([]byte, []int) {
	return fileDescriptor_6ccc3a5259e08d9a, []int{4}
}

func (m *IpArmEdmDbNetBagType) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IpArmEdmDbNetBagType.Unmarshal(m, b)
}
func (m *IpArmEdmDbNetBagType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IpArmEdmDbNetBagType.Marshal(b, m, deterministic)
}
func (m *IpArmEdmDbNetBagType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IpArmEdmDbNetBagType.Merge(m, src)
}
func (m *IpArmEdmDbNetBagType) XXX_Size() int {
	return xxx_messageInfo_IpArmEdmDbNetBagType.Size(m)
}
func (m *IpArmEdmDbNetBagType) XXX_DiscardUnknown() {
	xxx_messageInfo_IpArmEdmDbNetBagType.DiscardUnknown(m)
}

var xxx_messageInfo_IpArmEdmDbNetBagType proto.InternalMessageInfo

func (m *IpArmEdmDbNetBagType) GetInterfaceName() string {
	if m != nil {
		return m.InterfaceName
	}
	return ""
}

func (m *IpArmEdmDbNetBagType) GetAddressXr() *IpArmEdmAddr {
	if m != nil {
		return m.AddressXr
	}
	return nil
}

func (m *IpArmEdmDbNetBagType) GetReferencedInterface() *ReferencedInterfaceItem {
	if m != nil {
		return m.ReferencedInterface
	}
	return nil
}

func (m *IpArmEdmDbNetBagType) GetVrfName() string {
	if m != nil {
		return m.VrfName
	}
	return ""
}

func init() {
	proto.RegisterType((*IpArmEdmDbNetBagType_KEYS)(nil), "cisco_ios_xr_ip_iarm_v4_oper.ipv4arm.addresses.vrfs.vrf.networks.network.ip_arm_edm_db_net_bag_type_KEYS")
	proto.RegisterType((*ArmAddrtype)(nil), "cisco_ios_xr_ip_iarm_v4_oper.ipv4arm.addresses.vrfs.vrf.networks.network.arm_addrtype")
	proto.RegisterType((*IpArmEdmAddr)(nil), "cisco_ios_xr_ip_iarm_v4_oper.ipv4arm.addresses.vrfs.vrf.networks.network.ip_arm_edm_addr")
	proto.RegisterType((*ReferencedInterfaceItem)(nil), "cisco_ios_xr_ip_iarm_v4_oper.ipv4arm.addresses.vrfs.vrf.networks.network.referenced_interface_item")
	proto.RegisterType((*IpArmEdmDbNetBagType)(nil), "cisco_ios_xr_ip_iarm_v4_oper.ipv4arm.addresses.vrfs.vrf.networks.network.ip_arm_edm_db_net_bag_type")
}

func init() { proto.RegisterFile("ip_arm_edm_db_net_bag_type.proto", fileDescriptor_6ccc3a5259e08d9a) }

var fileDescriptor_6ccc3a5259e08d9a = []byte{
	// 491 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x54, 0xdb, 0x6e, 0xd3, 0x40,
	0x10, 0x95, 0x13, 0x9a, 0xcb, 0x24, 0xe1, 0xb2, 0x54, 0xc8, 0x2d, 0x42, 0x04, 0x23, 0xa4, 0x3e,
	0x59, 0xa2, 0x0d, 0x7d, 0xe7, 0x01, 0x09, 0x04, 0x42, 0x95, 0x5b, 0x21, 0xfa, 0x34, 0xda, 0xd8,
	0xe3, 0x74, 0x45, 0x7c, 0xd1, 0xec, 0xc6, 0xa4, 0xdf, 0x81, 0xc4, 0x57, 0xf1, 0x33, 0xfc, 0x01,
	0xf2, 0xda, 0x4e, 0x13, 0x9a, 0xbc, 0xe5, 0xc5, 0xda, 0x39, 0x7b, 0xe6, 0x76, 0x66, 0xd6, 0x30,
	0x56, 0x39, 0x4a, 0x4e, 0x90, 0xa2, 0x04, 0xa3, 0x29, 0xa6, 0x64, 0x70, 0x2a, 0x67, 0x68, 0x6e,
	0x73, 0xf2, 0x73, 0xce, 0x4c, 0x26, 0x3e, 0x86, 0x4a, 0x87, 0x19, 0xaa, 0x4c, 0xe3, 0x92, 0x51,
	0xe5, 0xa8, 0x4a, 0x7e, 0x31, 0xc1, 0x2c, 0x27, 0xf6, 0x55, 0x5e, 0x4c, 0x24, 0x27, 0xbe, 0x8c,
	0x22, 0x26, 0xad, 0x49, 0xfb, 0x05, 0xc7, 0xf6, 0xe3, 0xa7, 0x64, 0x7e, 0x66, 0xfc, 0x43, 0x37,
	0x07, 0xef, 0x97, 0x03, 0x2f, 0x77, 0xa7, 0xc3, 0xcf, 0x1f, 0xae, 0x2f, 0xc5, 0x11, 0xf4, 0x0a,
	0x8e, 0x31, 0x95, 0x09, 0xb9, 0xce, 0xd8, 0x39, 0xe9, 0x07, 0xdd, 0x82, 0xe3, 0xaf, 0x32, 0x21,
	0xe1, 0x42, 0xb7, 0xce, 0xe2, 0xb6, 0xaa, 0x9b, 0xda, 0x14, 0xaf, 0x61, 0x94, 0x33, 0xc5, 0x6a,
	0x89, 0x73, 0x4a, 0x67, 0xe6, 0xc6, 0x6d, 0x8f, 0x9d, 0x93, 0x51, 0x30, 0xac, 0xc0, 0x2f, 0x16,
	0x13, 0xcf, 0xa0, 0x73, 0x23, 0xd3, 0x68, 0x4e, 0xee, 0x03, 0xeb, 0x5d, 0x5b, 0x5e, 0x0c, 0xc3,
	0xb2, 0xa2, 0x32, 0x56, 0x59, 0x86, 0x78, 0x0c, 0x6d, 0x19, 0x2b, 0x9b, 0xfc, 0x49, 0x50, 0x1e,
	0xc5, 0x2b, 0x18, 0x96, 0x6d, 0xe2, 0x66, 0xf6, 0x41, 0x89, 0xbd, 0xaf, 0x2b, 0xa8, 0x28, 0xe7,
	0x2b, 0x4a, 0x7b, 0x45, 0x39, 0xaf, 0x29, 0xde, 0x9f, 0x16, 0x3c, 0x5a, 0xeb, 0xbe, 0x64, 0x8a,
	0x05, 0x40, 0xed, 0x81, 0x4b, 0xb6, 0x29, 0x07, 0xa7, 0xdf, 0xfc, 0x7d, 0x09, 0xee, 0xaf, 0xf7,
	0x15, 0xf4, 0x6b, 0x8f, 0xef, 0x7c, 0x5f, 0xaf, 0xd6, 0x16, 0xbd, 0x9e, 0x43, 0x9f, 0xb3, 0x85,
	0x21, 0x34, 0x72, 0x56, 0x0b, 0xda, 0xb3, 0xc0, 0x95, 0x9c, 0x89, 0x17, 0x00, 0x4a, 0x63, 0xce,
	0x2a, 0x91, 0x7c, 0x6b, 0x05, 0xed, 0x05, 0x7d, 0xa5, 0x2f, 0x2a, 0xc0, 0xca, 0xa1, 0xd1, 0x50,
	0x6a, 0xa4, 0x51, 0x05, 0xb9, 0x07, 0x96, 0x30, 0x50, 0xfa, 0xaa, 0x81, 0x84, 0x07, 0x23, 0x1b,
	0xc1, 0x96, 0xa1, 0x55, 0xe4, 0x76, 0x1a, 0xce, 0x85, 0xc5, 0x2e, 0x55, 0x24, 0x8e, 0xa1, 0x97,
	0x73, 0x16, 0x2d, 0x42, 0x62, 0xb7, 0x6b, 0x15, 0x5d, 0xd9, 0xde, 0x5b, 0x38, 0x62, 0x8a, 0x89,
	0x29, 0x0d, 0x29, 0x42, 0x95, 0x1a, 0xe2, 0x58, 0x86, 0x84, 0xca, 0x50, 0x22, 0x0e, 0xe1, 0xa0,
	0x90, 0xf3, 0x45, 0xb3, 0x42, 0x95, 0xe1, 0xfd, 0x6d, 0xc1, 0xf1, 0xee, 0xfd, 0x13, 0x6f, 0xe0,
	0xe1, 0x5d, 0x18, 0xbb, 0x80, 0xa7, 0xd6, 0x7b, 0xb4, 0x42, 0xed, 0x1a, 0x2e, 0x37, 0x66, 0x76,
	0x66, 0x67, 0x76, 0xbd, 0xbf, 0x99, 0xfd, 0xb7, 0x22, 0xeb, 0x63, 0xfb, 0xed, 0xc0, 0xe1, 0xb6,
	0x9e, 0xdd, 0x89, 0x2d, 0x22, 0xdc, 0x5f, 0x11, 0x3b, 0x95, 0x0d, 0x9e, 0xde, 0x5d, 0x7d, 0x6a,
	0x6e, 0x36, 0x1e, 0xed, 0xbb, 0x8d, 0x47, 0x3b, 0xed, 0xd8, 0x9f, 0xc8, 0xd9, 0xbf, 0x00, 0x00,
	0x00, 0xff, 0xff, 0x60, 0xa4, 0x46, 0x97, 0x68, 0x04, 0x00, 0x00,
}
