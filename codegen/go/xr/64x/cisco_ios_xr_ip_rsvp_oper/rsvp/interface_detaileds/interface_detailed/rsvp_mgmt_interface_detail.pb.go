/*
Copyright 2019 Cisco Systems

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: rsvp_mgmt_interface_detail.proto

package cisco_ios_xr_ip_rsvp_oper_rsvp_interface_detaileds_interface_detailed

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type RsvpMgmtInterfaceDetail_KEYS struct {
	InterfaceName        string   `protobuf:"bytes,1,opt,name=interface_name,json=interfaceName,proto3" json:"interface_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RsvpMgmtInterfaceDetail_KEYS) Reset()         { *m = RsvpMgmtInterfaceDetail_KEYS{} }
func (m *RsvpMgmtInterfaceDetail_KEYS) String() string { return proto.CompactTextString(m) }
func (*RsvpMgmtInterfaceDetail_KEYS) ProtoMessage()    {}
func (*RsvpMgmtInterfaceDetail_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_e874017d55a4e2b8, []int{0}
}

func (m *RsvpMgmtInterfaceDetail_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RsvpMgmtInterfaceDetail_KEYS.Unmarshal(m, b)
}
func (m *RsvpMgmtInterfaceDetail_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RsvpMgmtInterfaceDetail_KEYS.Marshal(b, m, deterministic)
}
func (m *RsvpMgmtInterfaceDetail_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RsvpMgmtInterfaceDetail_KEYS.Merge(m, src)
}
func (m *RsvpMgmtInterfaceDetail_KEYS) XXX_Size() int {
	return xxx_messageInfo_RsvpMgmtInterfaceDetail_KEYS.Size(m)
}
func (m *RsvpMgmtInterfaceDetail_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_RsvpMgmtInterfaceDetail_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_RsvpMgmtInterfaceDetail_KEYS proto.InternalMessageInfo

func (m *RsvpMgmtInterfaceDetail_KEYS) GetInterfaceName() string {
	if m != nil {
		return m.InterfaceName
	}
	return ""
}

type RsvpMgmtInterfaceBwPrestdDste struct {
	AllocatedBitRate              uint64   `protobuf:"varint,1,opt,name=allocated_bit_rate,json=allocatedBitRate,proto3" json:"allocated_bit_rate,omitempty"`
	MaxFlowBandwidth              uint64   `protobuf:"varint,2,opt,name=max_flow_bandwidth,json=maxFlowBandwidth,proto3" json:"max_flow_bandwidth,omitempty"`
	MaxBandwidth                  uint64   `protobuf:"varint,3,opt,name=max_bandwidth,json=maxBandwidth,proto3" json:"max_bandwidth,omitempty"`
	MaxSubpoolBandwidth           uint64   `protobuf:"varint,4,opt,name=max_subpool_bandwidth,json=maxSubpoolBandwidth,proto3" json:"max_subpool_bandwidth,omitempty"`
	IsMaxBandwidthAbsolute        bool     `protobuf:"varint,5,opt,name=is_max_bandwidth_absolute,json=isMaxBandwidthAbsolute,proto3" json:"is_max_bandwidth_absolute,omitempty"`
	IsMaxSubpoolBandwidthAbsolute bool     `protobuf:"varint,6,opt,name=is_max_subpool_bandwidth_absolute,json=isMaxSubpoolBandwidthAbsolute,proto3" json:"is_max_subpool_bandwidth_absolute,omitempty"`
	XXX_NoUnkeyedLiteral          struct{} `json:"-"`
	XXX_unrecognized              []byte   `json:"-"`
	XXX_sizecache                 int32    `json:"-"`
}

func (m *RsvpMgmtInterfaceBwPrestdDste) Reset()         { *m = RsvpMgmtInterfaceBwPrestdDste{} }
func (m *RsvpMgmtInterfaceBwPrestdDste) String() string { return proto.CompactTextString(m) }
func (*RsvpMgmtInterfaceBwPrestdDste) ProtoMessage()    {}
func (*RsvpMgmtInterfaceBwPrestdDste) Descriptor() ([]byte, []int) {
	return fileDescriptor_e874017d55a4e2b8, []int{1}
}

func (m *RsvpMgmtInterfaceBwPrestdDste) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RsvpMgmtInterfaceBwPrestdDste.Unmarshal(m, b)
}
func (m *RsvpMgmtInterfaceBwPrestdDste) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RsvpMgmtInterfaceBwPrestdDste.Marshal(b, m, deterministic)
}
func (m *RsvpMgmtInterfaceBwPrestdDste) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RsvpMgmtInterfaceBwPrestdDste.Merge(m, src)
}
func (m *RsvpMgmtInterfaceBwPrestdDste) XXX_Size() int {
	return xxx_messageInfo_RsvpMgmtInterfaceBwPrestdDste.Size(m)
}
func (m *RsvpMgmtInterfaceBwPrestdDste) XXX_DiscardUnknown() {
	xxx_messageInfo_RsvpMgmtInterfaceBwPrestdDste.DiscardUnknown(m)
}

var xxx_messageInfo_RsvpMgmtInterfaceBwPrestdDste proto.InternalMessageInfo

func (m *RsvpMgmtInterfaceBwPrestdDste) GetAllocatedBitRate() uint64 {
	if m != nil {
		return m.AllocatedBitRate
	}
	return 0
}

func (m *RsvpMgmtInterfaceBwPrestdDste) GetMaxFlowBandwidth() uint64 {
	if m != nil {
		return m.MaxFlowBandwidth
	}
	return 0
}

func (m *RsvpMgmtInterfaceBwPrestdDste) GetMaxBandwidth() uint64 {
	if m != nil {
		return m.MaxBandwidth
	}
	return 0
}

func (m *RsvpMgmtInterfaceBwPrestdDste) GetMaxSubpoolBandwidth() uint64 {
	if m != nil {
		return m.MaxSubpoolBandwidth
	}
	return 0
}

func (m *RsvpMgmtInterfaceBwPrestdDste) GetIsMaxBandwidthAbsolute() bool {
	if m != nil {
		return m.IsMaxBandwidthAbsolute
	}
	return false
}

func (m *RsvpMgmtInterfaceBwPrestdDste) GetIsMaxSubpoolBandwidthAbsolute() bool {
	if m != nil {
		return m.IsMaxSubpoolBandwidthAbsolute
	}
	return false
}

type RsvpMgmtInterfaceBwStdDste struct {
	AllocatedBitRate          uint64   `protobuf:"varint,1,opt,name=allocated_bit_rate,json=allocatedBitRate,proto3" json:"allocated_bit_rate,omitempty"`
	MaxFlowBandwidth          uint64   `protobuf:"varint,2,opt,name=max_flow_bandwidth,json=maxFlowBandwidth,proto3" json:"max_flow_bandwidth,omitempty"`
	MaxBandwidth              uint64   `protobuf:"varint,3,opt,name=max_bandwidth,json=maxBandwidth,proto3" json:"max_bandwidth,omitempty"`
	MaxPool0Bandwidth         uint64   `protobuf:"varint,4,opt,name=max_pool0_bandwidth,json=maxPool0Bandwidth,proto3" json:"max_pool0_bandwidth,omitempty"`
	MaxPool1Bandwidth         uint64   `protobuf:"varint,5,opt,name=max_pool1_bandwidth,json=maxPool1Bandwidth,proto3" json:"max_pool1_bandwidth,omitempty"`
	IsMaxBandwidthAbsolute    bool     `protobuf:"varint,6,opt,name=is_max_bandwidth_absolute,json=isMaxBandwidthAbsolute,proto3" json:"is_max_bandwidth_absolute,omitempty"`
	IsMaxBc0BandwidthAbsolute bool     `protobuf:"varint,7,opt,name=is_max_bc0_bandwidth_absolute,json=isMaxBc0BandwidthAbsolute,proto3" json:"is_max_bc0_bandwidth_absolute,omitempty"`
	IsMaxBc1BandwidthAbsolute bool     `protobuf:"varint,8,opt,name=is_max_bc1_bandwidth_absolute,json=isMaxBc1BandwidthAbsolute,proto3" json:"is_max_bc1_bandwidth_absolute,omitempty"`
	XXX_NoUnkeyedLiteral      struct{} `json:"-"`
	XXX_unrecognized          []byte   `json:"-"`
	XXX_sizecache             int32    `json:"-"`
}

func (m *RsvpMgmtInterfaceBwStdDste) Reset()         { *m = RsvpMgmtInterfaceBwStdDste{} }
func (m *RsvpMgmtInterfaceBwStdDste) String() string { return proto.CompactTextString(m) }
func (*RsvpMgmtInterfaceBwStdDste) ProtoMessage()    {}
func (*RsvpMgmtInterfaceBwStdDste) Descriptor() ([]byte, []int) {
	return fileDescriptor_e874017d55a4e2b8, []int{2}
}

func (m *RsvpMgmtInterfaceBwStdDste) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RsvpMgmtInterfaceBwStdDste.Unmarshal(m, b)
}
func (m *RsvpMgmtInterfaceBwStdDste) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RsvpMgmtInterfaceBwStdDste.Marshal(b, m, deterministic)
}
func (m *RsvpMgmtInterfaceBwStdDste) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RsvpMgmtInterfaceBwStdDste.Merge(m, src)
}
func (m *RsvpMgmtInterfaceBwStdDste) XXX_Size() int {
	return xxx_messageInfo_RsvpMgmtInterfaceBwStdDste.Size(m)
}
func (m *RsvpMgmtInterfaceBwStdDste) XXX_DiscardUnknown() {
	xxx_messageInfo_RsvpMgmtInterfaceBwStdDste.DiscardUnknown(m)
}

var xxx_messageInfo_RsvpMgmtInterfaceBwStdDste proto.InternalMessageInfo

func (m *RsvpMgmtInterfaceBwStdDste) GetAllocatedBitRate() uint64 {
	if m != nil {
		return m.AllocatedBitRate
	}
	return 0
}

func (m *RsvpMgmtInterfaceBwStdDste) GetMaxFlowBandwidth() uint64 {
	if m != nil {
		return m.MaxFlowBandwidth
	}
	return 0
}

func (m *RsvpMgmtInterfaceBwStdDste) GetMaxBandwidth() uint64 {
	if m != nil {
		return m.MaxBandwidth
	}
	return 0
}

func (m *RsvpMgmtInterfaceBwStdDste) GetMaxPool0Bandwidth() uint64 {
	if m != nil {
		return m.MaxPool0Bandwidth
	}
	return 0
}

func (m *RsvpMgmtInterfaceBwStdDste) GetMaxPool1Bandwidth() uint64 {
	if m != nil {
		return m.MaxPool1Bandwidth
	}
	return 0
}

func (m *RsvpMgmtInterfaceBwStdDste) GetIsMaxBandwidthAbsolute() bool {
	if m != nil {
		return m.IsMaxBandwidthAbsolute
	}
	return false
}

func (m *RsvpMgmtInterfaceBwStdDste) GetIsMaxBc0BandwidthAbsolute() bool {
	if m != nil {
		return m.IsMaxBc0BandwidthAbsolute
	}
	return false
}

func (m *RsvpMgmtInterfaceBwStdDste) GetIsMaxBc1BandwidthAbsolute() bool {
	if m != nil {
		return m.IsMaxBc1BandwidthAbsolute
	}
	return false
}

type RsvpMgmtDsteModeInterfaceBw struct {
	DsteMode                 string                         `protobuf:"bytes,1,opt,name=dste_mode,json=dsteMode,proto3" json:"dste_mode,omitempty"`
	PreStandardDsteInterface *RsvpMgmtInterfaceBwPrestdDste `protobuf:"bytes,2,opt,name=pre_standard_dste_interface,json=preStandardDsteInterface,proto3" json:"pre_standard_dste_interface,omitempty"`
	StandardDsteInterface    *RsvpMgmtInterfaceBwStdDste    `protobuf:"bytes,3,opt,name=standard_dste_interface,json=standardDsteInterface,proto3" json:"standard_dste_interface,omitempty"`
	XXX_NoUnkeyedLiteral     struct{}                       `json:"-"`
	XXX_unrecognized         []byte                         `json:"-"`
	XXX_sizecache            int32                          `json:"-"`
}

func (m *RsvpMgmtDsteModeInterfaceBw) Reset()         { *m = RsvpMgmtDsteModeInterfaceBw{} }
func (m *RsvpMgmtDsteModeInterfaceBw) String() string { return proto.CompactTextString(m) }
func (*RsvpMgmtDsteModeInterfaceBw) ProtoMessage()    {}
func (*RsvpMgmtDsteModeInterfaceBw) Descriptor() ([]byte, []int) {
	return fileDescriptor_e874017d55a4e2b8, []int{3}
}

func (m *RsvpMgmtDsteModeInterfaceBw) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RsvpMgmtDsteModeInterfaceBw.Unmarshal(m, b)
}
func (m *RsvpMgmtDsteModeInterfaceBw) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RsvpMgmtDsteModeInterfaceBw.Marshal(b, m, deterministic)
}
func (m *RsvpMgmtDsteModeInterfaceBw) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RsvpMgmtDsteModeInterfaceBw.Merge(m, src)
}
func (m *RsvpMgmtDsteModeInterfaceBw) XXX_Size() int {
	return xxx_messageInfo_RsvpMgmtDsteModeInterfaceBw.Size(m)
}
func (m *RsvpMgmtDsteModeInterfaceBw) XXX_DiscardUnknown() {
	xxx_messageInfo_RsvpMgmtDsteModeInterfaceBw.DiscardUnknown(m)
}

var xxx_messageInfo_RsvpMgmtDsteModeInterfaceBw proto.InternalMessageInfo

func (m *RsvpMgmtDsteModeInterfaceBw) GetDsteMode() string {
	if m != nil {
		return m.DsteMode
	}
	return ""
}

func (m *RsvpMgmtDsteModeInterfaceBw) GetPreStandardDsteInterface() *RsvpMgmtInterfaceBwPrestdDste {
	if m != nil {
		return m.PreStandardDsteInterface
	}
	return nil
}

func (m *RsvpMgmtDsteModeInterfaceBw) GetStandardDsteInterface() *RsvpMgmtInterfaceBwStdDste {
	if m != nil {
		return m.StandardDsteInterface
	}
	return nil
}

type RsvpMgmtInterfaceFlags struct {
	IsMplsEnabled             bool     `protobuf:"varint,1,opt,name=is_mpls_enabled,json=isMplsEnabled,proto3" json:"is_mpls_enabled,omitempty"`
	IsRefreshReductionEnabled bool     `protobuf:"varint,2,opt,name=is_refresh_reduction_enabled,json=isRefreshReductionEnabled,proto3" json:"is_refresh_reduction_enabled,omitempty"`
	IsPacingEnabled           bool     `protobuf:"varint,3,opt,name=is_pacing_enabled,json=isPacingEnabled,proto3" json:"is_pacing_enabled,omitempty"`
	IsRefreshEnabled          bool     `protobuf:"varint,4,opt,name=is_refresh_enabled,json=isRefreshEnabled,proto3" json:"is_refresh_enabled,omitempty"`
	IsSRefreshEnabled         bool     `protobuf:"varint,5,opt,name=is_s_refresh_enabled,json=isSRefreshEnabled,proto3" json:"is_s_refresh_enabled,omitempty"`
	IsInterfaceDown           bool     `protobuf:"varint,6,opt,name=is_interface_down,json=isInterfaceDown,proto3" json:"is_interface_down,omitempty"`
	IsInterfaceCreated        bool     `protobuf:"varint,7,opt,name=is_interface_created,json=isInterfaceCreated,proto3" json:"is_interface_created,omitempty"`
	IsRelSRefreshEnabled      bool     `protobuf:"varint,8,opt,name=is_rel_s_refresh_enabled,json=isRelSRefreshEnabled,proto3" json:"is_rel_s_refresh_enabled,omitempty"`
	IsBackupTunnel            bool     `protobuf:"varint,9,opt,name=is_backup_tunnel,json=isBackupTunnel,proto3" json:"is_backup_tunnel,omitempty"`
	IsRsvpConfigured          bool     `protobuf:"varint,10,opt,name=is_rsvp_configured,json=isRsvpConfigured,proto3" json:"is_rsvp_configured,omitempty"`
	IsNonDefaultVrf           bool     `protobuf:"varint,11,opt,name=is_non_default_vrf,json=isNonDefaultVrf,proto3" json:"is_non_default_vrf,omitempty"`
	IsMessageBundlingEnabled  bool     `protobuf:"varint,12,opt,name=is_message_bundling_enabled,json=isMessageBundlingEnabled,proto3" json:"is_message_bundling_enabled,omitempty"`
	XXX_NoUnkeyedLiteral      struct{} `json:"-"`
	XXX_unrecognized          []byte   `json:"-"`
	XXX_sizecache             int32    `json:"-"`
}

func (m *RsvpMgmtInterfaceFlags) Reset()         { *m = RsvpMgmtInterfaceFlags{} }
func (m *RsvpMgmtInterfaceFlags) String() string { return proto.CompactTextString(m) }
func (*RsvpMgmtInterfaceFlags) ProtoMessage()    {}
func (*RsvpMgmtInterfaceFlags) Descriptor() ([]byte, []int) {
	return fileDescriptor_e874017d55a4e2b8, []int{4}
}

func (m *RsvpMgmtInterfaceFlags) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RsvpMgmtInterfaceFlags.Unmarshal(m, b)
}
func (m *RsvpMgmtInterfaceFlags) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RsvpMgmtInterfaceFlags.Marshal(b, m, deterministic)
}
func (m *RsvpMgmtInterfaceFlags) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RsvpMgmtInterfaceFlags.Merge(m, src)
}
func (m *RsvpMgmtInterfaceFlags) XXX_Size() int {
	return xxx_messageInfo_RsvpMgmtInterfaceFlags.Size(m)
}
func (m *RsvpMgmtInterfaceFlags) XXX_DiscardUnknown() {
	xxx_messageInfo_RsvpMgmtInterfaceFlags.DiscardUnknown(m)
}

var xxx_messageInfo_RsvpMgmtInterfaceFlags proto.InternalMessageInfo

func (m *RsvpMgmtInterfaceFlags) GetIsMplsEnabled() bool {
	if m != nil {
		return m.IsMplsEnabled
	}
	return false
}

func (m *RsvpMgmtInterfaceFlags) GetIsRefreshReductionEnabled() bool {
	if m != nil {
		return m.IsRefreshReductionEnabled
	}
	return false
}

func (m *RsvpMgmtInterfaceFlags) GetIsPacingEnabled() bool {
	if m != nil {
		return m.IsPacingEnabled
	}
	return false
}

func (m *RsvpMgmtInterfaceFlags) GetIsRefreshEnabled() bool {
	if m != nil {
		return m.IsRefreshEnabled
	}
	return false
}

func (m *RsvpMgmtInterfaceFlags) GetIsSRefreshEnabled() bool {
	if m != nil {
		return m.IsSRefreshEnabled
	}
	return false
}

func (m *RsvpMgmtInterfaceFlags) GetIsInterfaceDown() bool {
	if m != nil {
		return m.IsInterfaceDown
	}
	return false
}

func (m *RsvpMgmtInterfaceFlags) GetIsInterfaceCreated() bool {
	if m != nil {
		return m.IsInterfaceCreated
	}
	return false
}

func (m *RsvpMgmtInterfaceFlags) GetIsRelSRefreshEnabled() bool {
	if m != nil {
		return m.IsRelSRefreshEnabled
	}
	return false
}

func (m *RsvpMgmtInterfaceFlags) GetIsBackupTunnel() bool {
	if m != nil {
		return m.IsBackupTunnel
	}
	return false
}

func (m *RsvpMgmtInterfaceFlags) GetIsRsvpConfigured() bool {
	if m != nil {
		return m.IsRsvpConfigured
	}
	return false
}

func (m *RsvpMgmtInterfaceFlags) GetIsNonDefaultVrf() bool {
	if m != nil {
		return m.IsNonDefaultVrf
	}
	return false
}

func (m *RsvpMgmtInterfaceFlags) GetIsMessageBundlingEnabled() bool {
	if m != nil {
		return m.IsMessageBundlingEnabled
	}
	return false
}

type RsvpMgmtMessageid struct {
	MessageId            uint32   `protobuf:"varint,1,opt,name=message_id,json=messageId,proto3" json:"message_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RsvpMgmtMessageid) Reset()         { *m = RsvpMgmtMessageid{} }
func (m *RsvpMgmtMessageid) String() string { return proto.CompactTextString(m) }
func (*RsvpMgmtMessageid) ProtoMessage()    {}
func (*RsvpMgmtMessageid) Descriptor() ([]byte, []int) {
	return fileDescriptor_e874017d55a4e2b8, []int{5}
}

func (m *RsvpMgmtMessageid) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RsvpMgmtMessageid.Unmarshal(m, b)
}
func (m *RsvpMgmtMessageid) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RsvpMgmtMessageid.Marshal(b, m, deterministic)
}
func (m *RsvpMgmtMessageid) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RsvpMgmtMessageid.Merge(m, src)
}
func (m *RsvpMgmtMessageid) XXX_Size() int {
	return xxx_messageInfo_RsvpMgmtMessageid.Size(m)
}
func (m *RsvpMgmtMessageid) XXX_DiscardUnknown() {
	xxx_messageInfo_RsvpMgmtMessageid.DiscardUnknown(m)
}

var xxx_messageInfo_RsvpMgmtMessageid proto.InternalMessageInfo

func (m *RsvpMgmtMessageid) GetMessageId() uint32 {
	if m != nil {
		return m.MessageId
	}
	return 0
}

type RsvpMgmtTimespec struct {
	Seconds              int32    `protobuf:"zigzag32,1,opt,name=seconds,proto3" json:"seconds,omitempty"`
	Nanoseconds          int32    `protobuf:"zigzag32,2,opt,name=nanoseconds,proto3" json:"nanoseconds,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RsvpMgmtTimespec) Reset()         { *m = RsvpMgmtTimespec{} }
func (m *RsvpMgmtTimespec) String() string { return proto.CompactTextString(m) }
func (*RsvpMgmtTimespec) ProtoMessage()    {}
func (*RsvpMgmtTimespec) Descriptor() ([]byte, []int) {
	return fileDescriptor_e874017d55a4e2b8, []int{6}
}

func (m *RsvpMgmtTimespec) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RsvpMgmtTimespec.Unmarshal(m, b)
}
func (m *RsvpMgmtTimespec) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RsvpMgmtTimespec.Marshal(b, m, deterministic)
}
func (m *RsvpMgmtTimespec) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RsvpMgmtTimespec.Merge(m, src)
}
func (m *RsvpMgmtTimespec) XXX_Size() int {
	return xxx_messageInfo_RsvpMgmtTimespec.Size(m)
}
func (m *RsvpMgmtTimespec) XXX_DiscardUnknown() {
	xxx_messageInfo_RsvpMgmtTimespec.DiscardUnknown(m)
}

var xxx_messageInfo_RsvpMgmtTimespec proto.InternalMessageInfo

func (m *RsvpMgmtTimespec) GetSeconds() int32 {
	if m != nil {
		return m.Seconds
	}
	return 0
}

func (m *RsvpMgmtTimespec) GetNanoseconds() int32 {
	if m != nil {
		return m.Nanoseconds
	}
	return 0
}

type RsvpMgmtNbor struct {
	IsNeighborRefreshReductionCapable bool                 `protobuf:"varint,1,opt,name=is_neighbor_refresh_reduction_capable,json=isNeighborRefreshReductionCapable,proto3" json:"is_neighbor_refresh_reduction_capable,omitempty"`
	NeighborAddress                   string               `protobuf:"bytes,2,opt,name=neighbor_address,json=neighborAddress,proto3" json:"neighbor_address,omitempty"`
	MessageIds                        uint32               `protobuf:"varint,3,opt,name=message_ids,json=messageIds,proto3" json:"message_ids,omitempty"`
	NeighborMessageId                 []*RsvpMgmtMessageid `protobuf:"bytes,4,rep,name=neighbor_message_id,json=neighborMessageId,proto3" json:"neighbor_message_id,omitempty"`
	OutgoingStates                    int32                `protobuf:"zigzag32,5,opt,name=outgoing_states,json=outgoingStates,proto3" json:"outgoing_states,omitempty"`
	ExpiryTime                        *RsvpMgmtTimespec    `protobuf:"bytes,6,opt,name=expiry_time,json=expiryTime,proto3" json:"expiry_time,omitempty"`
	XXX_NoUnkeyedLiteral              struct{}             `json:"-"`
	XXX_unrecognized                  []byte               `json:"-"`
	XXX_sizecache                     int32                `json:"-"`
}

func (m *RsvpMgmtNbor) Reset()         { *m = RsvpMgmtNbor{} }
func (m *RsvpMgmtNbor) String() string { return proto.CompactTextString(m) }
func (*RsvpMgmtNbor) ProtoMessage()    {}
func (*RsvpMgmtNbor) Descriptor() ([]byte, []int) {
	return fileDescriptor_e874017d55a4e2b8, []int{7}
}

func (m *RsvpMgmtNbor) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RsvpMgmtNbor.Unmarshal(m, b)
}
func (m *RsvpMgmtNbor) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RsvpMgmtNbor.Marshal(b, m, deterministic)
}
func (m *RsvpMgmtNbor) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RsvpMgmtNbor.Merge(m, src)
}
func (m *RsvpMgmtNbor) XXX_Size() int {
	return xxx_messageInfo_RsvpMgmtNbor.Size(m)
}
func (m *RsvpMgmtNbor) XXX_DiscardUnknown() {
	xxx_messageInfo_RsvpMgmtNbor.DiscardUnknown(m)
}

var xxx_messageInfo_RsvpMgmtNbor proto.InternalMessageInfo

func (m *RsvpMgmtNbor) GetIsNeighborRefreshReductionCapable() bool {
	if m != nil {
		return m.IsNeighborRefreshReductionCapable
	}
	return false
}

func (m *RsvpMgmtNbor) GetNeighborAddress() string {
	if m != nil {
		return m.NeighborAddress
	}
	return ""
}

func (m *RsvpMgmtNbor) GetMessageIds() uint32 {
	if m != nil {
		return m.MessageIds
	}
	return 0
}

func (m *RsvpMgmtNbor) GetNeighborMessageId() []*RsvpMgmtMessageid {
	if m != nil {
		return m.NeighborMessageId
	}
	return nil
}

func (m *RsvpMgmtNbor) GetOutgoingStates() int32 {
	if m != nil {
		return m.OutgoingStates
	}
	return 0
}

func (m *RsvpMgmtNbor) GetExpiryTime() *RsvpMgmtTimespec {
	if m != nil {
		return m.ExpiryTime
	}
	return nil
}

type RsvpMgmtInterfaceDetail struct {
	InterfaceNameXr                  string                       `protobuf:"bytes,50,opt,name=interface_name_xr,json=interfaceNameXr,proto3" json:"interface_name_xr,omitempty"`
	BandwidthInformation             *RsvpMgmtDsteModeInterfaceBw `protobuf:"bytes,51,opt,name=bandwidth_information,json=bandwidthInformation,proto3" json:"bandwidth_information,omitempty"`
	Flags                            *RsvpMgmtInterfaceFlags      `protobuf:"bytes,52,opt,name=flags,proto3" json:"flags,omitempty"`
	SignallingIpTos                  uint32                       `protobuf:"varint,53,opt,name=signalling_ip_tos,json=signallingIpTos,proto3" json:"signalling_ip_tos,omitempty"`
	IntegritySendPassword            string                       `protobuf:"bytes,54,opt,name=integrity_send_password,json=integritySendPassword,proto3" json:"integrity_send_password,omitempty"`
	IntegrityReceivePassword         string                       `protobuf:"bytes,55,opt,name=integrity_receive_password,json=integrityReceivePassword,proto3" json:"integrity_receive_password,omitempty"`
	IntegrityReceivePasswordOptional uint32                       `protobuf:"varint,56,opt,name=integrity_receive_password_optional,json=integrityReceivePasswordOptional,proto3" json:"integrity_receive_password_optional,omitempty"`
	RefreshTimerState                string                       `protobuf:"bytes,57,opt,name=refresh_timer_state,json=refreshTimerState,proto3" json:"refresh_timer_state,omitempty"`
	SummaryRefreshTimerState         string                       `protobuf:"bytes,58,opt,name=summary_refresh_timer_state,json=summaryRefreshTimerState,proto3" json:"summary_refresh_timer_state,omitempty"`
	RefreshInterval                  int32                        `protobuf:"zigzag32,59,opt,name=refresh_interval,json=refreshInterval,proto3" json:"refresh_interval,omitempty"`
	OutOfBandRefreshInterval         uint32                       `protobuf:"varint,60,opt,name=out_of_band_refresh_interval,json=outOfBandRefreshInterval,proto3" json:"out_of_band_refresh_interval,omitempty"`
	SummaryRefreshMaxSize            uint32                       `protobuf:"varint,61,opt,name=summary_refresh_max_size,json=summaryRefreshMaxSize,proto3" json:"summary_refresh_max_size,omitempty"`
	BundleMessageMaxSize             uint32                       `protobuf:"varint,62,opt,name=bundle_message_max_size,json=bundleMessageMaxSize,proto3" json:"bundle_message_max_size,omitempty"`
	ExpiryTimerState                 string                       `protobuf:"bytes,63,opt,name=expiry_timer_state,json=expiryTimerState,proto3" json:"expiry_timer_state,omitempty"`
	ExpiryStates                     int32                        `protobuf:"zigzag32,64,opt,name=expiry_states,json=expiryStates,proto3" json:"expiry_states,omitempty"`
	ExpiryInterval                   int32                        `protobuf:"zigzag32,65,opt,name=expiry_interval,json=expiryInterval,proto3" json:"expiry_interval,omitempty"`
	ExpiryDropsTolerated             int32                        `protobuf:"zigzag32,66,opt,name=expiry_drops_tolerated,json=expiryDropsTolerated,proto3" json:"expiry_drops_tolerated,omitempty"`
	OutOfBandExpiryDropsTolerated    uint32                       `protobuf:"varint,67,opt,name=out_of_band_expiry_drops_tolerated,json=outOfBandExpiryDropsTolerated,proto3" json:"out_of_band_expiry_drops_tolerated,omitempty"`
	AckHoldTime                      uint32                       `protobuf:"varint,68,opt,name=ack_hold_time,json=ackHoldTime,proto3" json:"ack_hold_time,omitempty"`
	AckMaxSize                       uint32                       `protobuf:"varint,69,opt,name=ack_max_size,json=ackMaxSize,proto3" json:"ack_max_size,omitempty"`
	RetransmitTime                   uint32                       `protobuf:"varint,70,opt,name=retransmit_time,json=retransmitTime,proto3" json:"retransmit_time,omitempty"`
	PacingInterval                   uint32                       `protobuf:"varint,71,opt,name=pacing_interval,json=pacingInterval,proto3" json:"pacing_interval,omitempty"`
	PacingMessageRate                uint32                       `protobuf:"varint,72,opt,name=pacing_message_rate,json=pacingMessageRate,proto3" json:"pacing_message_rate,omitempty"`
	PacingTimerState                 string                       `protobuf:"bytes,73,opt,name=pacing_timer_state,json=pacingTimerState,proto3" json:"pacing_timer_state,omitempty"`
	PacingMessages                   int32                        `protobuf:"zigzag32,74,opt,name=pacing_messages,json=pacingMessages,proto3" json:"pacing_messages,omitempty"`
	NeighborArray                    []*RsvpMgmtNbor              `protobuf:"bytes,75,rep,name=neighbor_array,json=neighborArray,proto3" json:"neighbor_array,omitempty"`
	XXX_NoUnkeyedLiteral             struct{}                     `json:"-"`
	XXX_unrecognized                 []byte                       `json:"-"`
	XXX_sizecache                    int32                        `json:"-"`
}

func (m *RsvpMgmtInterfaceDetail) Reset()         { *m = RsvpMgmtInterfaceDetail{} }
func (m *RsvpMgmtInterfaceDetail) String() string { return proto.CompactTextString(m) }
func (*RsvpMgmtInterfaceDetail) ProtoMessage()    {}
func (*RsvpMgmtInterfaceDetail) Descriptor() ([]byte, []int) {
	return fileDescriptor_e874017d55a4e2b8, []int{8}
}

func (m *RsvpMgmtInterfaceDetail) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RsvpMgmtInterfaceDetail.Unmarshal(m, b)
}
func (m *RsvpMgmtInterfaceDetail) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RsvpMgmtInterfaceDetail.Marshal(b, m, deterministic)
}
func (m *RsvpMgmtInterfaceDetail) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RsvpMgmtInterfaceDetail.Merge(m, src)
}
func (m *RsvpMgmtInterfaceDetail) XXX_Size() int {
	return xxx_messageInfo_RsvpMgmtInterfaceDetail.Size(m)
}
func (m *RsvpMgmtInterfaceDetail) XXX_DiscardUnknown() {
	xxx_messageInfo_RsvpMgmtInterfaceDetail.DiscardUnknown(m)
}

var xxx_messageInfo_RsvpMgmtInterfaceDetail proto.InternalMessageInfo

func (m *RsvpMgmtInterfaceDetail) GetInterfaceNameXr() string {
	if m != nil {
		return m.InterfaceNameXr
	}
	return ""
}

func (m *RsvpMgmtInterfaceDetail) GetBandwidthInformation() *RsvpMgmtDsteModeInterfaceBw {
	if m != nil {
		return m.BandwidthInformation
	}
	return nil
}

func (m *RsvpMgmtInterfaceDetail) GetFlags() *RsvpMgmtInterfaceFlags {
	if m != nil {
		return m.Flags
	}
	return nil
}

func (m *RsvpMgmtInterfaceDetail) GetSignallingIpTos() uint32 {
	if m != nil {
		return m.SignallingIpTos
	}
	return 0
}

func (m *RsvpMgmtInterfaceDetail) GetIntegritySendPassword() string {
	if m != nil {
		return m.IntegritySendPassword
	}
	return ""
}

func (m *RsvpMgmtInterfaceDetail) GetIntegrityReceivePassword() string {
	if m != nil {
		return m.IntegrityReceivePassword
	}
	return ""
}

func (m *RsvpMgmtInterfaceDetail) GetIntegrityReceivePasswordOptional() uint32 {
	if m != nil {
		return m.IntegrityReceivePasswordOptional
	}
	return 0
}

func (m *RsvpMgmtInterfaceDetail) GetRefreshTimerState() string {
	if m != nil {
		return m.RefreshTimerState
	}
	return ""
}

func (m *RsvpMgmtInterfaceDetail) GetSummaryRefreshTimerState() string {
	if m != nil {
		return m.SummaryRefreshTimerState
	}
	return ""
}

func (m *RsvpMgmtInterfaceDetail) GetRefreshInterval() int32 {
	if m != nil {
		return m.RefreshInterval
	}
	return 0
}

func (m *RsvpMgmtInterfaceDetail) GetOutOfBandRefreshInterval() uint32 {
	if m != nil {
		return m.OutOfBandRefreshInterval
	}
	return 0
}

func (m *RsvpMgmtInterfaceDetail) GetSummaryRefreshMaxSize() uint32 {
	if m != nil {
		return m.SummaryRefreshMaxSize
	}
	return 0
}

func (m *RsvpMgmtInterfaceDetail) GetBundleMessageMaxSize() uint32 {
	if m != nil {
		return m.BundleMessageMaxSize
	}
	return 0
}

func (m *RsvpMgmtInterfaceDetail) GetExpiryTimerState() string {
	if m != nil {
		return m.ExpiryTimerState
	}
	return ""
}

func (m *RsvpMgmtInterfaceDetail) GetExpiryStates() int32 {
	if m != nil {
		return m.ExpiryStates
	}
	return 0
}

func (m *RsvpMgmtInterfaceDetail) GetExpiryInterval() int32 {
	if m != nil {
		return m.ExpiryInterval
	}
	return 0
}

func (m *RsvpMgmtInterfaceDetail) GetExpiryDropsTolerated() int32 {
	if m != nil {
		return m.ExpiryDropsTolerated
	}
	return 0
}

func (m *RsvpMgmtInterfaceDetail) GetOutOfBandExpiryDropsTolerated() uint32 {
	if m != nil {
		return m.OutOfBandExpiryDropsTolerated
	}
	return 0
}

func (m *RsvpMgmtInterfaceDetail) GetAckHoldTime() uint32 {
	if m != nil {
		return m.AckHoldTime
	}
	return 0
}

func (m *RsvpMgmtInterfaceDetail) GetAckMaxSize() uint32 {
	if m != nil {
		return m.AckMaxSize
	}
	return 0
}

func (m *RsvpMgmtInterfaceDetail) GetRetransmitTime() uint32 {
	if m != nil {
		return m.RetransmitTime
	}
	return 0
}

func (m *RsvpMgmtInterfaceDetail) GetPacingInterval() uint32 {
	if m != nil {
		return m.PacingInterval
	}
	return 0
}

func (m *RsvpMgmtInterfaceDetail) GetPacingMessageRate() uint32 {
	if m != nil {
		return m.PacingMessageRate
	}
	return 0
}

func (m *RsvpMgmtInterfaceDetail) GetPacingTimerState() string {
	if m != nil {
		return m.PacingTimerState
	}
	return ""
}

func (m *RsvpMgmtInterfaceDetail) GetPacingMessages() int32 {
	if m != nil {
		return m.PacingMessages
	}
	return 0
}

func (m *RsvpMgmtInterfaceDetail) GetNeighborArray() []*RsvpMgmtNbor {
	if m != nil {
		return m.NeighborArray
	}
	return nil
}

func init() {
	proto.RegisterType((*RsvpMgmtInterfaceDetail_KEYS)(nil), "cisco_ios_xr_ip_rsvp_oper.rsvp.interface_detaileds.interface_detailed.rsvp_mgmt_interface_detail_KEYS")
	proto.RegisterType((*RsvpMgmtInterfaceBwPrestdDste)(nil), "cisco_ios_xr_ip_rsvp_oper.rsvp.interface_detaileds.interface_detailed.rsvp_mgmt_interface_bw_prestd_dste")
	proto.RegisterType((*RsvpMgmtInterfaceBwStdDste)(nil), "cisco_ios_xr_ip_rsvp_oper.rsvp.interface_detaileds.interface_detailed.rsvp_mgmt_interface_bw_std_dste")
	proto.RegisterType((*RsvpMgmtDsteModeInterfaceBw)(nil), "cisco_ios_xr_ip_rsvp_oper.rsvp.interface_detaileds.interface_detailed.rsvp_mgmt_dste_mode_interface_bw")
	proto.RegisterType((*RsvpMgmtInterfaceFlags)(nil), "cisco_ios_xr_ip_rsvp_oper.rsvp.interface_detaileds.interface_detailed.rsvp_mgmt_interface_flags")
	proto.RegisterType((*RsvpMgmtMessageid)(nil), "cisco_ios_xr_ip_rsvp_oper.rsvp.interface_detaileds.interface_detailed.rsvp_mgmt_messageid")
	proto.RegisterType((*RsvpMgmtTimespec)(nil), "cisco_ios_xr_ip_rsvp_oper.rsvp.interface_detaileds.interface_detailed.rsvp_mgmt_timespec")
	proto.RegisterType((*RsvpMgmtNbor)(nil), "cisco_ios_xr_ip_rsvp_oper.rsvp.interface_detaileds.interface_detailed.rsvp_mgmt_nbor")
	proto.RegisterType((*RsvpMgmtInterfaceDetail)(nil), "cisco_ios_xr_ip_rsvp_oper.rsvp.interface_detaileds.interface_detailed.rsvp_mgmt_interface_detail")
}

func init() { proto.RegisterFile("rsvp_mgmt_interface_detail.proto", fileDescriptor_e874017d55a4e2b8) }

var fileDescriptor_e874017d55a4e2b8 = []byte{
	// 1465 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xcc, 0x58, 0xdd, 0x52, 0x1c, 0xbb,
	0x11, 0x2e, 0x7e, 0x6c, 0x43, 0x2f, 0xcb, 0xb2, 0x02, 0xec, 0xf1, 0x0f, 0x65, 0xbc, 0x2e, 0x07,
	0x9c, 0xb8, 0x08, 0xe0, 0xbf, 0x38, 0xf1, 0x2f, 0x3f, 0x0e, 0xc4, 0x85, 0x4d, 0x0d, 0x24, 0x15,
	0xe7, 0x46, 0xd1, 0xce, 0x68, 0x17, 0x15, 0x33, 0xa3, 0x29, 0x69, 0x96, 0x5d, 0x5c, 0x79, 0x82,
	0xe4, 0x15, 0x52, 0xb9, 0xce, 0x03, 0xe4, 0x05, 0xf2, 0x22, 0xa7, 0xce, 0xed, 0x79, 0x8b, 0x53,
	0x6a, 0x69, 0x66, 0x76, 0x61, 0xf1, 0x39, 0x17, 0xb8, 0xea, 0xdc, 0x41, 0xf7, 0xf7, 0xb5, 0x5a,
	0xfd, 0xb5, 0x5a, 0x9a, 0x85, 0x45, 0xa5, 0x4f, 0x52, 0x1a, 0xb7, 0xe3, 0x8c, 0x8a, 0x24, 0xe3,
	0xaa, 0xc5, 0x02, 0x4e, 0x43, 0x9e, 0x31, 0x11, 0xad, 0xa4, 0x4a, 0x66, 0x92, 0x6c, 0x07, 0x42,
	0x07, 0x92, 0x0a, 0xa9, 0x69, 0x4f, 0x51, 0x91, 0x52, 0x64, 0xc8, 0x94, 0xab, 0x15, 0xf3, 0xd7,
	0xca, 0x59, 0x1a, 0x0f, 0xf5, 0x10, 0x5b, 0x63, 0x07, 0xee, 0x5e, 0xbc, 0x14, 0xfd, 0xb0, 0xfd,
	0xf9, 0x80, 0x3c, 0x80, 0xe9, 0xd2, 0x91, 0xb0, 0x98, 0x7b, 0x23, 0x8b, 0x23, 0xcb, 0x93, 0x7e,
	0xb5, 0xb0, 0x7e, 0x64, 0x31, 0x6f, 0x7c, 0x37, 0x0a, 0x8d, 0x61, 0xa1, 0x9a, 0x5d, 0x9a, 0x2a,
	0xae, 0xb3, 0x90, 0x86, 0x3a, 0xe3, 0xe4, 0x11, 0x10, 0x16, 0x45, 0x32, 0x60, 0x19, 0x0f, 0x69,
	0x53, 0x64, 0x54, 0xb1, 0xcc, 0x46, 0x1c, 0xf7, 0x67, 0x0a, 0xcf, 0x86, 0xc8, 0x7c, 0x66, 0xd1,
	0x31, 0xeb, 0xd1, 0x56, 0x24, 0xbb, 0xb4, 0xc9, 0x92, 0xb0, 0x2b, 0xc2, 0xec, 0xc8, 0x1b, 0xb5,
	0xe8, 0x98, 0xf5, 0xde, 0x47, 0xb2, 0xbb, 0x91, 0xdb, 0xc9, 0x7d, 0xa8, 0x1a, 0x74, 0x09, 0x1c,
	0x43, 0xe0, 0x54, 0xcc, 0x7a, 0x25, 0x68, 0x1d, 0xe6, 0x0d, 0x48, 0x77, 0x9a, 0xa9, 0x94, 0x51,
	0x1f, 0x78, 0x1c, 0xc1, 0xb3, 0x31, 0xeb, 0x1d, 0x58, 0x5f, 0xc9, 0x79, 0x01, 0x37, 0x85, 0xa6,
	0x03, 0xb1, 0x29, 0x6b, 0x6a, 0x19, 0x75, 0x32, 0xee, 0x5d, 0x59, 0x1c, 0x59, 0x9e, 0xf0, 0xaf,
	0x0b, 0xbd, 0xd7, 0xb7, 0xcc, 0x3b, 0xe7, 0x25, 0x3b, 0x70, 0xcf, 0x51, 0xcf, 0xad, 0x58, 0x86,
	0xb8, 0x8a, 0x21, 0x16, 0x30, 0xc4, 0xd9, 0xc5, 0xf3, 0x48, 0x8d, 0xff, 0x8f, 0x0d, 0xd7, 0xaa,
	0xd9, 0xa5, 0xbf, 0x9c, 0xea, 0xae, 0x80, 0x29, 0x20, 0x35, 0x3b, 0x58, 0x3d, 0x57, 0xdb, 0x7a,
	0xcc, 0x7a, 0xfb, 0xc6, 0x33, 0x14, 0xbf, 0xd6, 0x87, 0xbf, 0x32, 0x80, 0x5f, 0xfb, 0x99, 0x4a,
	0x5c, 0xfd, 0xaa, 0x12, 0x6f, 0x61, 0x21, 0xa7, 0x06, 0xab, 0xc3, 0xe8, 0xd7, 0x90, 0x7e, 0xd3,
	0xd2, 0x83, 0xd5, 0xaf, 0x47, 0x58, 0x1b, 0x16, 0x61, 0x62, 0x20, 0xc2, 0xda, 0x79, 0x0d, 0xff,
	0x35, 0xd6, 0x7f, 0xb4, 0x8d, 0x64, 0x34, 0x96, 0x21, 0x1f, 0x50, 0x93, 0xdc, 0x86, 0xc9, 0xc2,
	0xe3, 0xce, 0xda, 0x84, 0x31, 0xec, 0xc9, 0x90, 0x93, 0xff, 0x8e, 0xc0, 0xed, 0x54, 0x71, 0xaa,
	0x33, 0x96, 0x84, 0x4c, 0x59, 0xdd, 0x4b, 0x3e, 0xaa, 0x57, 0x59, 0x17, 0x2b, 0x97, 0x32, 0x1e,
	0x56, 0x7e, 0xfa, 0x40, 0xfb, 0x5e, 0xaa, 0xf8, 0x81, 0x4b, 0x66, 0x4b, 0x67, 0x7c, 0x37, 0x07,
	0x92, 0xff, 0x8c, 0xc0, 0x8d, 0x8b, 0xd2, 0x1c, 0xc3, 0x34, 0x5b, 0xdf, 0x36, 0xcd, 0x22, 0xc7,
	0x79, 0x3d, 0x2c, 0xc1, 0xc6, 0x0f, 0xe3, 0x70, 0x73, 0x18, 0xb5, 0x15, 0xb1, 0xb6, 0x26, 0xbf,
	0x82, 0x9a, 0x51, 0x3b, 0x8d, 0x34, 0xe5, 0x09, 0x6b, 0x46, 0x3c, 0x44, 0x31, 0x26, 0xfc, 0xaa,
	0xd0, 0x7b, 0x69, 0xa4, 0xb7, 0xad, 0x91, 0xbc, 0x81, 0x3b, 0x42, 0x53, 0xc5, 0x5b, 0x8a, 0xeb,
	0x23, 0xaa, 0x78, 0xd8, 0x09, 0x32, 0x21, 0x93, 0x82, 0x34, 0x9a, 0x37, 0x85, 0x6f, 0x21, 0x7e,
	0x8e, 0xc8, 0x03, 0xfc, 0x1a, 0xea, 0x42, 0xd3, 0x94, 0x05, 0x22, 0x69, 0x17, 0xac, 0x31, 0x64,
	0xd5, 0x84, 0xde, 0x47, 0x7b, 0x8e, 0x7d, 0x04, 0xa4, 0x6f, 0xb1, 0x1c, 0x3c, 0x8e, 0xe0, 0x99,
	0x62, 0x89, 0x1c, 0xfd, 0x5b, 0x98, 0x13, 0x9a, 0x9e, 0xc7, 0xdb, 0x91, 0x55, 0x17, 0xfa, 0xe0,
	0x0c, 0xc1, 0xa6, 0xd2, 0x57, 0x61, 0xd9, 0x4d, 0xdc, 0xb1, 0xaa, 0x09, 0x5d, 0x54, 0x6e, 0x4b,
	0x76, 0x13, 0xb2, 0x8a, 0xc1, 0x4b, 0x6c, 0xa0, 0xb8, 0x19, 0x2e, 0xee, 0x18, 0x91, 0x3e, 0xf8,
	0xa6, 0xf5, 0x90, 0x67, 0xe0, 0x61, 0xf2, 0xd1, 0x90, 0x94, 0xec, 0xd1, 0x99, 0x33, 0x5b, 0x88,
	0xce, 0x66, 0xb5, 0x0c, 0x33, 0x42, 0xd3, 0x26, 0x0b, 0x8e, 0x3b, 0x29, 0xcd, 0x3a, 0x49, 0xc2,
	0x23, 0x6f, 0x12, 0xf1, 0xd3, 0x42, 0x6f, 0xa0, 0xf9, 0x10, 0xad, 0x79, 0x79, 0x8c, 0xa6, 0x81,
	0x4c, 0x5a, 0xa2, 0xdd, 0x51, 0x3c, 0xf4, 0xa0, 0x28, 0x8f, 0x3e, 0x49, 0x37, 0x0b, 0x3b, 0xf9,
	0x0d, 0xa2, 0x13, 0x99, 0xd0, 0x90, 0xb7, 0x58, 0x27, 0xca, 0xe8, 0x89, 0x6a, 0x79, 0x95, 0x7c,
	0xbb, 0x1f, 0x65, 0xb2, 0x65, 0xed, 0x7f, 0x51, 0x2d, 0xf2, 0x0a, 0x6e, 0x9b, 0x76, 0xe0, 0x5a,
	0xb3, 0x36, 0xa7, 0xcd, 0x4e, 0x12, 0x46, 0xfd, 0x7a, 0x4d, 0x21, 0xcb, 0x13, 0x7a, 0xcf, 0x22,
	0x36, 0x1c, 0xc0, 0xed, 0xa1, 0xf1, 0x04, 0x66, 0xcb, 0x56, 0x73, 0x51, 0x44, 0x48, 0x16, 0x00,
	0xf2, 0x90, 0xc2, 0xf6, 0x57, 0xd5, 0x9f, 0x74, 0x96, 0xdd, 0xb0, 0xb1, 0x0f, 0xa4, 0x64, 0x65,
	0x22, 0xe6, 0x3a, 0xe5, 0x01, 0xf1, 0xe0, 0x9a, 0xe6, 0x81, 0x4c, 0x42, 0x8d, 0x8c, 0xba, 0x9f,
	0xff, 0x4b, 0x16, 0xa1, 0x92, 0xb0, 0x44, 0xe6, 0xde, 0x51, 0xf4, 0xf6, 0x9b, 0x1a, 0xdf, 0x8f,
	0xc1, 0x74, 0x19, 0x32, 0x69, 0x4a, 0x45, 0xf6, 0xe1, 0x81, 0x29, 0x03, 0x17, 0xed, 0xa3, 0xa6,
	0x54, 0x43, 0x3a, 0x39, 0x60, 0xa9, 0xd9, 0x84, 0x6b, 0xff, 0x7b, 0x42, 0x7f, 0x74, 0xd8, 0xb3,
	0x1d, 0xbd, 0x69, 0x81, 0xe4, 0x21, 0xcc, 0x14, 0xe1, 0x58, 0x18, 0x2a, 0xae, 0x6d, 0x2e, 0x93,
	0x7e, 0x2d, 0xb7, 0xbf, 0xb3, 0x66, 0x72, 0x17, 0x2a, 0x65, 0x01, 0x34, 0xb6, 0x7d, 0xd5, 0x87,
	0xa2, 0x02, 0x9a, 0xfc, 0x73, 0x04, 0x66, 0x8b, 0x60, 0x7d, 0xb5, 0x1a, 0x5f, 0x1c, 0x5b, 0xae,
	0xac, 0xff, 0xed, 0xd2, 0x27, 0x48, 0xa1, 0x8d, 0x5f, 0xcf, 0x97, 0xdd, 0xcb, 0xb3, 0x21, 0x4b,
	0x50, 0x93, 0x9d, 0xac, 0x2d, 0x8d, 0xf2, 0x3a, 0x63, 0x19, 0xd7, 0x78, 0x96, 0xea, 0xfe, 0x74,
	0x6e, 0x3e, 0x40, 0x2b, 0xf9, 0x02, 0x15, 0xde, 0x4b, 0x85, 0x3a, 0x45, 0xd5, 0xf0, 0x08, 0x55,
	0xd6, 0x3f, 0x5f, 0x7a, 0xb2, 0x79, 0x4b, 0xf8, 0x60, 0x57, 0x3b, 0x14, 0x31, 0x6f, 0xfc, 0x6f,
	0x0a, 0x6e, 0x5d, 0xfc, 0xa8, 0xc3, 0x33, 0x3e, 0xf0, 0x9e, 0xa3, 0x3d, 0xe5, 0xad, 0x5b, 0x75,
	0x06, 0x9e, 0x74, 0x7f, 0x55, 0xe4, 0xdf, 0x23, 0x30, 0x5f, 0xde, 0x73, 0x22, 0x69, 0x49, 0x15,
	0x33, 0xa3, 0xb4, 0xf7, 0x18, 0x77, 0xd4, 0xbe, 0xf4, 0x1d, 0x0d, 0xbf, 0x13, 0xfd, 0xb9, 0x22,
	0x8b, 0xdd, 0x32, 0x09, 0x72, 0x02, 0x57, 0x70, 0x56, 0x7b, 0x4f, 0x30, 0x9b, 0xbf, 0x7f, 0xc3,
	0xeb, 0x04, 0xd7, 0xf1, 0xed, 0x72, 0xa6, 0x84, 0x5a, 0xb4, 0x13, 0x16, 0xe1, 0x08, 0x10, 0x29,
	0xcd, 0xa4, 0xf6, 0x9e, 0x62, 0xeb, 0xd6, 0x4a, 0xc7, 0x6e, 0x7a, 0x28, 0x35, 0x79, 0x06, 0x37,
	0x4c, 0x94, 0xb6, 0x12, 0xd9, 0x29, 0xd5, 0x3c, 0x09, 0x69, 0xca, 0xb4, 0xee, 0x4a, 0x15, 0x7a,
	0xcf, 0xb0, 0xe8, 0xf3, 0x85, 0xfb, 0x80, 0x27, 0xe1, 0xbe, 0x73, 0x92, 0x97, 0x70, 0xab, 0xe4,
	0x29, 0x1e, 0x70, 0x71, 0xc2, 0x4b, 0xea, 0x73, 0xa4, 0x7a, 0x05, 0xc2, 0xb7, 0x80, 0x82, 0xbd,
	0x07, 0xf7, 0x2f, 0x66, 0x53, 0x99, 0x9a, 0xf2, 0xb1, 0xc8, 0xfb, 0x1d, 0xe6, 0xbc, 0x78, 0x51,
	0x98, 0x4f, 0x0e, 0x67, 0x9e, 0x69, 0xf9, 0x58, 0x30, 0x2d, 0xa7, 0x6c, 0xf3, 0x7b, 0x2f, 0x30,
	0x8b, 0xba, 0x73, 0x99, 0xe6, 0x53, 0xd8, 0xff, 0x66, 0x58, 0xea, 0x4e, 0x1c, 0x33, 0x75, 0x4a,
	0x87, 0xf1, 0x7e, 0x6f, 0xb3, 0x77, 0x10, 0xff, 0x1c, 0xfd, 0x21, 0xcc, 0xe4, 0x34, 0x54, 0xe0,
	0x84, 0x45, 0xde, 0x1f, 0xf0, 0x9c, 0xd5, 0x9c, 0x7d, 0xd7, 0x99, 0xc9, 0x6b, 0xb8, 0x23, 0x3b,
	0x19, 0x95, 0x2d, 0x7c, 0x8f, 0xd1, 0x73, 0xb4, 0x97, 0xb8, 0x43, 0x4f, 0x76, 0xb2, 0x4f, 0x2d,
	0xf3, 0x1e, 0xf3, 0xcf, 0xf0, 0x9f, 0x83, 0x77, 0x36, 0x53, 0x7c, 0xac, 0x8b, 0x2f, 0xdc, 0x7b,
	0x85, 0xdc, 0xf9, 0xc1, 0x34, 0xcd, 0x13, 0x5d, 0x7c, 0xe1, 0xe4, 0x29, 0xdc, 0xc0, 0x4b, 0x80,
	0x17, 0x43, 0xa9, 0xe0, 0xbd, 0x46, 0xde, 0x9c, 0x75, 0xbb, 0xe1, 0x91, 0xd3, 0x1e, 0x01, 0xe9,
	0x1b, 0x0c, 0x79, 0x41, 0xde, 0x60, 0x41, 0x66, 0xca, 0x43, 0xec, 0x0a, 0x71, 0x1f, 0xaa, 0x0e,
	0xed, 0xa6, 0xcd, 0x5b, 0xac, 0xc2, 0x94, 0x35, 0xba, 0x59, 0xb3, 0x04, 0x35, 0x07, 0x2a, 0x76,
	0xfd, 0xce, 0x0e, 0x25, 0x6b, 0x2e, 0xf6, 0xfa, 0x04, 0xae, 0x3b, 0x60, 0xa8, 0x64, 0xaa, 0x69,
	0x26, 0x23, 0xae, 0xf0, 0xce, 0xde, 0x40, 0xfc, 0x9c, 0xf5, 0x6e, 0x19, 0xe7, 0x61, 0xee, 0x23,
	0xbb, 0xd0, 0xe8, 0xaf, 0xf0, 0x05, 0x11, 0x36, 0x71, 0xcf, 0x0b, 0x45, 0x9d, 0xb7, 0x87, 0x85,
	0x6a, 0x40, 0x95, 0x05, 0xc7, 0xf4, 0x48, 0x46, 0xa1, 0x9d, 0x8b, 0x5b, 0xc8, 0xaa, 0xb0, 0xe0,
	0x78, 0x47, 0x46, 0xa1, 0xd9, 0x38, 0x59, 0x84, 0x29, 0x83, 0x29, 0x8a, 0xb9, 0x6d, 0x6f, 0x04,
	0x16, 0x1c, 0xe7, 0x25, 0x5c, 0x82, 0x9a, 0xe2, 0x99, 0x62, 0x89, 0x8e, 0x85, 0x1d, 0x81, 0xde,
	0x7b, 0x04, 0x4d, 0x97, 0x66, 0x0c, 0xb5, 0x04, 0x35, 0xf7, 0xaa, 0x2a, 0x0a, 0xf3, 0x47, 0x0b,
	0xb4, 0xe6, 0xa2, 0x30, 0x2b, 0x30, 0xeb, 0x80, 0xb9, 0x96, 0xf8, 0xdd, 0xb4, 0x83, 0xe0, 0xba,
	0x75, 0x39, 0x1d, 0xf3, 0x0f, 0x27, 0x87, 0xef, 0x17, 0x71, 0xd7, 0x8a, 0x68, 0x3d, 0x7d, 0x22,
	0x96, 0x69, 0xb8, 0xe8, 0xda, 0xfb, 0x93, 0xd5, 0x67, 0x20, 0xb2, 0x26, 0xff, 0x80, 0xe9, 0xf2,
	0xda, 0x54, 0x8a, 0x9d, 0x7a, 0x1f, 0xf0, 0x92, 0xfb, 0xf3, 0xa5, 0xcf, 0x35, 0x73, 0xef, 0xfb,
	0xd5, 0xe2, 0x2e, 0x36, 0x6b, 0x35, 0xaf, 0xe2, 0x0f, 0x0b, 0x8f, 0x7f, 0x0c, 0x00, 0x00, 0xff,
	0xff, 0x28, 0xa2, 0x9c, 0xe6, 0x7c, 0x10, 0x00, 0x00,
}
