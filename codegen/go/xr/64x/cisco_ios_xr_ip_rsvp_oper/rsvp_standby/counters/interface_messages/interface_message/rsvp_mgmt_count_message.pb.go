/*
Copyright 2019 Cisco Systems

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: rsvp_mgmt_count_message.proto

package cisco_ios_xr_ip_rsvp_oper_rsvp_standby_counters_interface_messages_interface_message

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type RsvpMgmtCountMessage_KEYS struct {
	InterfaceName        string   `protobuf:"bytes,1,opt,name=interface_name,json=interfaceName,proto3" json:"interface_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RsvpMgmtCountMessage_KEYS) Reset()         { *m = RsvpMgmtCountMessage_KEYS{} }
func (m *RsvpMgmtCountMessage_KEYS) String() string { return proto.CompactTextString(m) }
func (*RsvpMgmtCountMessage_KEYS) ProtoMessage()    {}
func (*RsvpMgmtCountMessage_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_19350649986e59b7, []int{0}
}

func (m *RsvpMgmtCountMessage_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RsvpMgmtCountMessage_KEYS.Unmarshal(m, b)
}
func (m *RsvpMgmtCountMessage_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RsvpMgmtCountMessage_KEYS.Marshal(b, m, deterministic)
}
func (m *RsvpMgmtCountMessage_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RsvpMgmtCountMessage_KEYS.Merge(m, src)
}
func (m *RsvpMgmtCountMessage_KEYS) XXX_Size() int {
	return xxx_messageInfo_RsvpMgmtCountMessage_KEYS.Size(m)
}
func (m *RsvpMgmtCountMessage_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_RsvpMgmtCountMessage_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_RsvpMgmtCountMessage_KEYS proto.InternalMessageInfo

func (m *RsvpMgmtCountMessage_KEYS) GetInterfaceName() string {
	if m != nil {
		return m.InterfaceName
	}
	return ""
}

type RsvpMgmtCounts struct {
	Path                 uint32   `protobuf:"varint,1,opt,name=path,proto3" json:"path,omitempty"`
	Reservation          uint32   `protobuf:"varint,2,opt,name=reservation,proto3" json:"reservation,omitempty"`
	PathError            uint32   `protobuf:"varint,3,opt,name=path_error,json=pathError,proto3" json:"path_error,omitempty"`
	ReservationError     uint32   `protobuf:"varint,4,opt,name=reservation_error,json=reservationError,proto3" json:"reservation_error,omitempty"`
	PathTear             uint32   `protobuf:"varint,5,opt,name=path_tear,json=pathTear,proto3" json:"path_tear,omitempty"`
	ReservationTear      uint32   `protobuf:"varint,6,opt,name=reservation_tear,json=reservationTear,proto3" json:"reservation_tear,omitempty"`
	ReservationConfirm   uint32   `protobuf:"varint,7,opt,name=reservation_confirm,json=reservationConfirm,proto3" json:"reservation_confirm,omitempty"`
	Bundle               uint32   `protobuf:"varint,8,opt,name=bundle,proto3" json:"bundle,omitempty"`
	Ack                  uint32   `protobuf:"varint,9,opt,name=ack,proto3" json:"ack,omitempty"`
	Srefresh             uint32   `protobuf:"varint,10,opt,name=srefresh,proto3" json:"srefresh,omitempty"`
	Hello                uint32   `protobuf:"varint,11,opt,name=hello,proto3" json:"hello,omitempty"`
	Challenge            uint32   `protobuf:"varint,12,opt,name=challenge,proto3" json:"challenge,omitempty"`
	Response             uint32   `protobuf:"varint,13,opt,name=response,proto3" json:"response,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RsvpMgmtCounts) Reset()         { *m = RsvpMgmtCounts{} }
func (m *RsvpMgmtCounts) String() string { return proto.CompactTextString(m) }
func (*RsvpMgmtCounts) ProtoMessage()    {}
func (*RsvpMgmtCounts) Descriptor() ([]byte, []int) {
	return fileDescriptor_19350649986e59b7, []int{1}
}

func (m *RsvpMgmtCounts) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RsvpMgmtCounts.Unmarshal(m, b)
}
func (m *RsvpMgmtCounts) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RsvpMgmtCounts.Marshal(b, m, deterministic)
}
func (m *RsvpMgmtCounts) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RsvpMgmtCounts.Merge(m, src)
}
func (m *RsvpMgmtCounts) XXX_Size() int {
	return xxx_messageInfo_RsvpMgmtCounts.Size(m)
}
func (m *RsvpMgmtCounts) XXX_DiscardUnknown() {
	xxx_messageInfo_RsvpMgmtCounts.DiscardUnknown(m)
}

var xxx_messageInfo_RsvpMgmtCounts proto.InternalMessageInfo

func (m *RsvpMgmtCounts) GetPath() uint32 {
	if m != nil {
		return m.Path
	}
	return 0
}

func (m *RsvpMgmtCounts) GetReservation() uint32 {
	if m != nil {
		return m.Reservation
	}
	return 0
}

func (m *RsvpMgmtCounts) GetPathError() uint32 {
	if m != nil {
		return m.PathError
	}
	return 0
}

func (m *RsvpMgmtCounts) GetReservationError() uint32 {
	if m != nil {
		return m.ReservationError
	}
	return 0
}

func (m *RsvpMgmtCounts) GetPathTear() uint32 {
	if m != nil {
		return m.PathTear
	}
	return 0
}

func (m *RsvpMgmtCounts) GetReservationTear() uint32 {
	if m != nil {
		return m.ReservationTear
	}
	return 0
}

func (m *RsvpMgmtCounts) GetReservationConfirm() uint32 {
	if m != nil {
		return m.ReservationConfirm
	}
	return 0
}

func (m *RsvpMgmtCounts) GetBundle() uint32 {
	if m != nil {
		return m.Bundle
	}
	return 0
}

func (m *RsvpMgmtCounts) GetAck() uint32 {
	if m != nil {
		return m.Ack
	}
	return 0
}

func (m *RsvpMgmtCounts) GetSrefresh() uint32 {
	if m != nil {
		return m.Srefresh
	}
	return 0
}

func (m *RsvpMgmtCounts) GetHello() uint32 {
	if m != nil {
		return m.Hello
	}
	return 0
}

func (m *RsvpMgmtCounts) GetChallenge() uint32 {
	if m != nil {
		return m.Challenge
	}
	return 0
}

func (m *RsvpMgmtCounts) GetResponse() uint32 {
	if m != nil {
		return m.Response
	}
	return 0
}

type RsvpMgmtCountMessage struct {
	ReceivedMessages          *RsvpMgmtCounts `protobuf:"bytes,50,opt,name=received_messages,json=receivedMessages,proto3" json:"received_messages,omitempty"`
	TransmittedMessages       *RsvpMgmtCounts `protobuf:"bytes,51,opt,name=transmitted_messages,json=transmittedMessages,proto3" json:"transmitted_messages,omitempty"`
	BundleReceivedMessages    *RsvpMgmtCounts `protobuf:"bytes,52,opt,name=bundle_received_messages,json=bundleReceivedMessages,proto3" json:"bundle_received_messages,omitempty"`
	BundleTransmittedMessages *RsvpMgmtCounts `protobuf:"bytes,53,opt,name=bundle_transmitted_messages,json=bundleTransmittedMessages,proto3" json:"bundle_transmitted_messages,omitempty"`
	RetransmittedMessages     uint32          `protobuf:"varint,54,opt,name=retransmitted_messages,json=retransmittedMessages,proto3" json:"retransmitted_messages,omitempty"`
	OutOfOrderMessages        uint32          `protobuf:"varint,55,opt,name=out_of_order_messages,json=outOfOrderMessages,proto3" json:"out_of_order_messages,omitempty"`
	RateLimitedMessages       uint32          `protobuf:"varint,56,opt,name=rate_limited_messages,json=rateLimitedMessages,proto3" json:"rate_limited_messages,omitempty"`
	XXX_NoUnkeyedLiteral      struct{}        `json:"-"`
	XXX_unrecognized          []byte          `json:"-"`
	XXX_sizecache             int32           `json:"-"`
}

func (m *RsvpMgmtCountMessage) Reset()         { *m = RsvpMgmtCountMessage{} }
func (m *RsvpMgmtCountMessage) String() string { return proto.CompactTextString(m) }
func (*RsvpMgmtCountMessage) ProtoMessage()    {}
func (*RsvpMgmtCountMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_19350649986e59b7, []int{2}
}

func (m *RsvpMgmtCountMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RsvpMgmtCountMessage.Unmarshal(m, b)
}
func (m *RsvpMgmtCountMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RsvpMgmtCountMessage.Marshal(b, m, deterministic)
}
func (m *RsvpMgmtCountMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RsvpMgmtCountMessage.Merge(m, src)
}
func (m *RsvpMgmtCountMessage) XXX_Size() int {
	return xxx_messageInfo_RsvpMgmtCountMessage.Size(m)
}
func (m *RsvpMgmtCountMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_RsvpMgmtCountMessage.DiscardUnknown(m)
}

var xxx_messageInfo_RsvpMgmtCountMessage proto.InternalMessageInfo

func (m *RsvpMgmtCountMessage) GetReceivedMessages() *RsvpMgmtCounts {
	if m != nil {
		return m.ReceivedMessages
	}
	return nil
}

func (m *RsvpMgmtCountMessage) GetTransmittedMessages() *RsvpMgmtCounts {
	if m != nil {
		return m.TransmittedMessages
	}
	return nil
}

func (m *RsvpMgmtCountMessage) GetBundleReceivedMessages() *RsvpMgmtCounts {
	if m != nil {
		return m.BundleReceivedMessages
	}
	return nil
}

func (m *RsvpMgmtCountMessage) GetBundleTransmittedMessages() *RsvpMgmtCounts {
	if m != nil {
		return m.BundleTransmittedMessages
	}
	return nil
}

func (m *RsvpMgmtCountMessage) GetRetransmittedMessages() uint32 {
	if m != nil {
		return m.RetransmittedMessages
	}
	return 0
}

func (m *RsvpMgmtCountMessage) GetOutOfOrderMessages() uint32 {
	if m != nil {
		return m.OutOfOrderMessages
	}
	return 0
}

func (m *RsvpMgmtCountMessage) GetRateLimitedMessages() uint32 {
	if m != nil {
		return m.RateLimitedMessages
	}
	return 0
}

func init() {
	proto.RegisterType((*RsvpMgmtCountMessage_KEYS)(nil), "cisco_ios_xr_ip_rsvp_oper.rsvp_standby.counters.interface_messages.interface_message.rsvp_mgmt_count_message_KEYS")
	proto.RegisterType((*RsvpMgmtCounts)(nil), "cisco_ios_xr_ip_rsvp_oper.rsvp_standby.counters.interface_messages.interface_message.rsvp_mgmt_counts")
	proto.RegisterType((*RsvpMgmtCountMessage)(nil), "cisco_ios_xr_ip_rsvp_oper.rsvp_standby.counters.interface_messages.interface_message.rsvp_mgmt_count_message")
}

func init() { proto.RegisterFile("rsvp_mgmt_count_message.proto", fileDescriptor_19350649986e59b7) }

var fileDescriptor_19350649986e59b7 = []byte{
	// 515 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x54, 0x4d, 0x8f, 0x12, 0x4d,
	0x10, 0xce, 0xbc, 0xbb, 0xcb, 0x0b, 0x85, 0x28, 0x36, 0x0b, 0xb6, 0xee, 0x6e, 0x42, 0x48, 0x4c,
	0xd6, 0x98, 0x8c, 0x91, 0x75, 0xd5, 0xbb, 0xe1, 0xe4, 0xc7, 0x26, 0xc8, 0xc5, 0x53, 0xa7, 0x19,
	0x6a, 0x60, 0xe2, 0xcc, 0xf4, 0xa4, 0xba, 0x21, 0xfa, 0x3b, 0x3c, 0x79, 0x33, 0x31, 0xf1, 0x1f,
	0xf8, 0xff, 0x4c, 0x77, 0xc3, 0xec, 0x2c, 0xb2, 0x47, 0x39, 0xd1, 0xf5, 0x7c, 0x54, 0x3f, 0xa9,
	0x2e, 0x06, 0xce, 0x48, 0xaf, 0x0a, 0x91, 0xcd, 0x33, 0x23, 0x22, 0xb5, 0xcc, 0x8d, 0xc8, 0x50,
	0x6b, 0x39, 0xc7, 0xb0, 0x20, 0x65, 0x14, 0x9b, 0x44, 0x89, 0x8e, 0x94, 0x48, 0x94, 0x16, 0x5f,
	0x48, 0x24, 0x85, 0x70, 0x72, 0x55, 0x20, 0x85, 0xee, 0xa4, 0x8d, 0xcc, 0x67, 0xd3, 0xaf, 0xa1,
	0xf3, 0x22, 0xe9, 0x30, 0xb1, 0x3f, 0xb1, 0x8c, 0x70, 0xd3, 0x68, 0x07, 0x34, 0x18, 0xc1, 0xe9,
	0x2d, 0xd7, 0x8a, 0xb7, 0xa3, 0x4f, 0x1f, 0xd9, 0x63, 0xb8, 0x7b, 0x6d, 0xca, 0x65, 0x86, 0x3c,
	0xe8, 0x07, 0xe7, 0x8d, 0x71, 0xab, 0x44, 0x3f, 0xc8, 0x0c, 0x07, 0x3f, 0x0f, 0xa0, 0xbd, 0xd5,
	0x47, 0x33, 0x06, 0x87, 0x85, 0x34, 0x0b, 0xe7, 0x68, 0x8d, 0xdd, 0x99, 0xf5, 0xa1, 0x49, 0xa8,
	0x91, 0x56, 0xd2, 0x24, 0x2a, 0xe7, 0xff, 0x39, 0xaa, 0x0a, 0xb1, 0x33, 0x00, 0xab, 0x14, 0x48,
	0xa4, 0x88, 0x1f, 0x38, 0x41, 0xc3, 0x22, 0x23, 0x0b, 0xb0, 0xa7, 0x70, 0xbf, 0xa2, 0x5e, 0xab,
	0x0e, 0x9d, 0xaa, 0x5d, 0x21, 0xbc, 0xf8, 0x04, 0x9c, 0x53, 0x18, 0x94, 0xc4, 0x8f, 0x9c, 0xa8,
	0x6e, 0x81, 0x09, 0x4a, 0x62, 0x4f, 0xa0, 0x6a, 0xf0, 0x9a, 0x9a, 0xd3, 0xdc, 0xab, 0xe0, 0x4e,
	0xfa, 0x0c, 0x3a, 0x55, 0x69, 0xa4, 0xf2, 0x38, 0xa1, 0x8c, 0xff, 0xef, 0xd4, 0xac, 0x42, 0xbd,
	0xf1, 0x0c, 0xeb, 0x41, 0x6d, 0xba, 0xcc, 0x67, 0x29, 0xf2, 0xba, 0xd3, 0xac, 0x2b, 0xd6, 0x86,
	0x03, 0x19, 0x7d, 0xe6, 0x0d, 0x07, 0xda, 0x23, 0x7b, 0x04, 0x75, 0x4d, 0x18, 0x13, 0xea, 0x05,
	0x07, 0x9f, 0x70, 0x53, 0xb3, 0x63, 0x38, 0x5a, 0x60, 0x9a, 0x2a, 0xde, 0x74, 0x84, 0x2f, 0xd8,
	0x29, 0x34, 0xa2, 0x85, 0x4c, 0x53, 0xcc, 0xe7, 0xc8, 0xef, 0xf8, 0xf9, 0x94, 0x80, 0xed, 0x47,
	0xa8, 0x0b, 0x95, 0x6b, 0xe4, 0x2d, 0xdf, 0x6f, 0x53, 0x0f, 0x7e, 0xd7, 0xe0, 0xc1, 0x2d, 0xaf,
	0xcd, 0xbe, 0x05, 0x76, 0xb0, 0x11, 0x26, 0x2b, 0x9c, 0x95, 0x0b, 0xc3, 0x87, 0xfd, 0xe0, 0xbc,
	0x39, 0x8c, 0xc3, 0x7f, 0xb1, 0x7b, 0xe1, 0xf6, 0xc2, 0xd8, 0x07, 0xf4, 0x01, 0xde, 0xaf, 0x4d,
	0xec, 0x7b, 0x00, 0xc7, 0x86, 0x64, 0xae, 0xb3, 0xc4, 0x98, 0x6a, 0xb0, 0x8b, 0xbd, 0x06, 0xeb,
	0x54, 0x32, 0x94, 0xd9, 0x7e, 0x04, 0xc0, 0xfd, 0xb3, 0x8a, 0xbf, 0x07, 0xf7, 0x62, 0xaf, 0xf9,
	0x7a, 0x3e, 0xc7, 0x78, 0x7b, 0x7c, 0xbf, 0x02, 0x38, 0x59, 0x47, 0xdc, 0x39, 0xc5, 0xcb, 0xbd,
	0xa6, 0x7c, 0xe8, 0xa3, 0x4c, 0x76, 0xcc, 0xf2, 0x12, 0x7a, 0x84, 0x3b, 0x23, 0xbe, 0x74, 0x3b,
	0xdc, 0xbd, 0xc1, 0x96, 0xb6, 0xe7, 0xd0, 0x55, 0x4b, 0x23, 0x54, 0x2c, 0x14, 0xcd, 0x90, 0xae,
	0x5d, 0xaf, 0xfc, 0x3f, 0x53, 0x2d, 0xcd, 0x55, 0x7c, 0x65, 0xa9, 0xd2, 0x32, 0x84, 0x2e, 0x49,
	0x83, 0x22, 0x4d, 0xb2, 0xe4, 0xc6, 0x45, 0xaf, 0x9d, 0xa5, 0x63, 0xc9, 0x77, 0x9e, 0xdb, 0x78,
	0xa6, 0x35, 0xf7, 0x05, 0xbe, 0xf8, 0x13, 0x00, 0x00, 0xff, 0xff, 0xee, 0x45, 0xd8, 0xab, 0xa2,
	0x05, 0x00, 0x00,
}
