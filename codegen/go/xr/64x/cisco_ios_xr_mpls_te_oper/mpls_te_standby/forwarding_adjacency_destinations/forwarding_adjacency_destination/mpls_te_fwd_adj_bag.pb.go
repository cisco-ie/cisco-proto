/*
Copyright 2019 Cisco Systems

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: mpls_te_fwd_adj_bag.proto

package cisco_ios_xr_mpls_te_oper_mpls_te_standby_forwarding_adjacency_destinations_forwarding_adjacency_destination

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type MplsTeFwdAdjBag_KEYS struct {
	DestinationAddress   string   `protobuf:"bytes,1,opt,name=destination_address,json=destinationAddress,proto3" json:"destination_address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MplsTeFwdAdjBag_KEYS) Reset()         { *m = MplsTeFwdAdjBag_KEYS{} }
func (m *MplsTeFwdAdjBag_KEYS) String() string { return proto.CompactTextString(m) }
func (*MplsTeFwdAdjBag_KEYS) ProtoMessage()    {}
func (*MplsTeFwdAdjBag_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_04ede6f726d10987, []int{0}
}

func (m *MplsTeFwdAdjBag_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsTeFwdAdjBag_KEYS.Unmarshal(m, b)
}
func (m *MplsTeFwdAdjBag_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsTeFwdAdjBag_KEYS.Marshal(b, m, deterministic)
}
func (m *MplsTeFwdAdjBag_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsTeFwdAdjBag_KEYS.Merge(m, src)
}
func (m *MplsTeFwdAdjBag_KEYS) XXX_Size() int {
	return xxx_messageInfo_MplsTeFwdAdjBag_KEYS.Size(m)
}
func (m *MplsTeFwdAdjBag_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsTeFwdAdjBag_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_MplsTeFwdAdjBag_KEYS proto.InternalMessageInfo

func (m *MplsTeFwdAdjBag_KEYS) GetDestinationAddress() string {
	if m != nil {
		return m.DestinationAddress
	}
	return ""
}

type MplsTeAreaAfiInfo struct {
	IgpAreaId            string   `protobuf:"bytes,1,opt,name=igp_area_id,json=igpAreaId,proto3" json:"igp_area_id,omitempty"`
	Afi                  string   `protobuf:"bytes,2,opt,name=afi,proto3" json:"afi,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MplsTeAreaAfiInfo) Reset()         { *m = MplsTeAreaAfiInfo{} }
func (m *MplsTeAreaAfiInfo) String() string { return proto.CompactTextString(m) }
func (*MplsTeAreaAfiInfo) ProtoMessage()    {}
func (*MplsTeAreaAfiInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_04ede6f726d10987, []int{1}
}

func (m *MplsTeAreaAfiInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsTeAreaAfiInfo.Unmarshal(m, b)
}
func (m *MplsTeAreaAfiInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsTeAreaAfiInfo.Marshal(b, m, deterministic)
}
func (m *MplsTeAreaAfiInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsTeAreaAfiInfo.Merge(m, src)
}
func (m *MplsTeAreaAfiInfo) XXX_Size() int {
	return xxx_messageInfo_MplsTeAreaAfiInfo.Size(m)
}
func (m *MplsTeAreaAfiInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsTeAreaAfiInfo.DiscardUnknown(m)
}

var xxx_messageInfo_MplsTeAreaAfiInfo proto.InternalMessageInfo

func (m *MplsTeAreaAfiInfo) GetIgpAreaId() string {
	if m != nil {
		return m.IgpAreaId
	}
	return ""
}

func (m *MplsTeAreaAfiInfo) GetAfi() string {
	if m != nil {
		return m.Afi
	}
	return ""
}

type MplsTeFwdAdjInfo struct {
	TunnelName           string               `protobuf:"bytes,1,opt,name=tunnel_name,json=tunnelName,proto3" json:"tunnel_name,omitempty"`
	TrafficShare         uint32               `protobuf:"varint,2,opt,name=traffic_share,json=trafficShare,proto3" json:"traffic_share,omitempty"`
	HoldTime             uint32               `protobuf:"varint,3,opt,name=hold_time,json=holdTime,proto3" json:"hold_time,omitempty"`
	IsAdjacencyUp        bool                 `protobuf:"varint,4,opt,name=is_adjacency_up,json=isAdjacencyUp,proto3" json:"is_adjacency_up,omitempty"`
	IgPs                 []*MplsTeAreaAfiInfo `protobuf:"bytes,5,rep,name=ig_ps,json=igPs,proto3" json:"ig_ps,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *MplsTeFwdAdjInfo) Reset()         { *m = MplsTeFwdAdjInfo{} }
func (m *MplsTeFwdAdjInfo) String() string { return proto.CompactTextString(m) }
func (*MplsTeFwdAdjInfo) ProtoMessage()    {}
func (*MplsTeFwdAdjInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_04ede6f726d10987, []int{2}
}

func (m *MplsTeFwdAdjInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsTeFwdAdjInfo.Unmarshal(m, b)
}
func (m *MplsTeFwdAdjInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsTeFwdAdjInfo.Marshal(b, m, deterministic)
}
func (m *MplsTeFwdAdjInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsTeFwdAdjInfo.Merge(m, src)
}
func (m *MplsTeFwdAdjInfo) XXX_Size() int {
	return xxx_messageInfo_MplsTeFwdAdjInfo.Size(m)
}
func (m *MplsTeFwdAdjInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsTeFwdAdjInfo.DiscardUnknown(m)
}

var xxx_messageInfo_MplsTeFwdAdjInfo proto.InternalMessageInfo

func (m *MplsTeFwdAdjInfo) GetTunnelName() string {
	if m != nil {
		return m.TunnelName
	}
	return ""
}

func (m *MplsTeFwdAdjInfo) GetTrafficShare() uint32 {
	if m != nil {
		return m.TrafficShare
	}
	return 0
}

func (m *MplsTeFwdAdjInfo) GetHoldTime() uint32 {
	if m != nil {
		return m.HoldTime
	}
	return 0
}

func (m *MplsTeFwdAdjInfo) GetIsAdjacencyUp() bool {
	if m != nil {
		return m.IsAdjacencyUp
	}
	return false
}

func (m *MplsTeFwdAdjInfo) GetIgPs() []*MplsTeAreaAfiInfo {
	if m != nil {
		return m.IgPs
	}
	return nil
}

type MplsTeFwdAdjBag struct {
	Adjacencies          uint32              `protobuf:"varint,50,opt,name=adjacencies,proto3" json:"adjacencies,omitempty"`
	Ipv6Adjacencies      uint32              `protobuf:"varint,51,opt,name=ipv6_adjacencies,json=ipv6Adjacencies,proto3" json:"ipv6_adjacencies,omitempty"`
	DestinationAddressXr string              `protobuf:"bytes,52,opt,name=destination_address_xr,json=destinationAddressXr,proto3" json:"destination_address_xr,omitempty"`
	ForwardAdjacency     []*MplsTeFwdAdjInfo `protobuf:"bytes,53,rep,name=forward_adjacency,json=forwardAdjacency,proto3" json:"forward_adjacency,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *MplsTeFwdAdjBag) Reset()         { *m = MplsTeFwdAdjBag{} }
func (m *MplsTeFwdAdjBag) String() string { return proto.CompactTextString(m) }
func (*MplsTeFwdAdjBag) ProtoMessage()    {}
func (*MplsTeFwdAdjBag) Descriptor() ([]byte, []int) {
	return fileDescriptor_04ede6f726d10987, []int{3}
}

func (m *MplsTeFwdAdjBag) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsTeFwdAdjBag.Unmarshal(m, b)
}
func (m *MplsTeFwdAdjBag) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsTeFwdAdjBag.Marshal(b, m, deterministic)
}
func (m *MplsTeFwdAdjBag) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsTeFwdAdjBag.Merge(m, src)
}
func (m *MplsTeFwdAdjBag) XXX_Size() int {
	return xxx_messageInfo_MplsTeFwdAdjBag.Size(m)
}
func (m *MplsTeFwdAdjBag) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsTeFwdAdjBag.DiscardUnknown(m)
}

var xxx_messageInfo_MplsTeFwdAdjBag proto.InternalMessageInfo

func (m *MplsTeFwdAdjBag) GetAdjacencies() uint32 {
	if m != nil {
		return m.Adjacencies
	}
	return 0
}

func (m *MplsTeFwdAdjBag) GetIpv6Adjacencies() uint32 {
	if m != nil {
		return m.Ipv6Adjacencies
	}
	return 0
}

func (m *MplsTeFwdAdjBag) GetDestinationAddressXr() string {
	if m != nil {
		return m.DestinationAddressXr
	}
	return ""
}

func (m *MplsTeFwdAdjBag) GetForwardAdjacency() []*MplsTeFwdAdjInfo {
	if m != nil {
		return m.ForwardAdjacency
	}
	return nil
}

func init() {
	proto.RegisterType((*MplsTeFwdAdjBag_KEYS)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te_standby.forwarding_adjacency_destinations.forwarding_adjacency_destination.mpls_te_fwd_adj_bag_KEYS")
	proto.RegisterType((*MplsTeAreaAfiInfo)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te_standby.forwarding_adjacency_destinations.forwarding_adjacency_destination.mpls_te_area_afi_info")
	proto.RegisterType((*MplsTeFwdAdjInfo)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te_standby.forwarding_adjacency_destinations.forwarding_adjacency_destination.mpls_te_fwd_adj_info")
	proto.RegisterType((*MplsTeFwdAdjBag)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te_standby.forwarding_adjacency_destinations.forwarding_adjacency_destination.mpls_te_fwd_adj_bag")
}

func init() { proto.RegisterFile("mpls_te_fwd_adj_bag.proto", fileDescriptor_04ede6f726d10987) }

var fileDescriptor_04ede6f726d10987 = []byte{
	// 419 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xc4, 0x93, 0xd1, 0x6a, 0xd4, 0x40,
	0x14, 0x86, 0xc9, 0x6e, 0x2b, 0xdd, 0xb3, 0x2e, 0x5d, 0xa7, 0x55, 0x46, 0x04, 0x5d, 0x56, 0x90,
	0xf5, 0x26, 0x42, 0x5b, 0xbd, 0xdf, 0x0b, 0x2f, 0x4a, 0x41, 0x24, 0x55, 0xd0, 0xab, 0xc3, 0xd9,
	0xcc, 0x24, 0x3d, 0xb2, 0x99, 0x19, 0x66, 0x52, 0xdb, 0xde, 0xea, 0x53, 0xf8, 0x16, 0xbe, 0x80,
	0x4f, 0xe0, 0x4b, 0x49, 0x66, 0x13, 0x0d, 0xba, 0xe0, 0x9d, 0xde, 0x25, 0xdf, 0xfc, 0xf9, 0x99,
	0xf3, 0xff, 0x27, 0x70, 0xbf, 0x72, 0xeb, 0x80, 0xb5, 0xc6, 0xe2, 0x4a, 0x21, 0xa9, 0x0f, 0xb8,
	0xa2, 0x32, 0x75, 0xde, 0xd6, 0x56, 0xac, 0x73, 0x0e, 0xb9, 0x45, 0xb6, 0x01, 0xaf, 0x3d, 0x76,
	0x3a, 0xeb, 0xb4, 0x4f, 0xbb, 0x97, 0x50, 0x93, 0x51, 0xab, 0x9b, 0xb4, 0xb0, 0xfe, 0x8a, 0xbc,
	0x62, 0x53, 0x36, 0x1e, 0x94, 0x6b, 0x93, 0xdf, 0xa0, 0xd2, 0xa1, 0x66, 0x43, 0x35, 0x5b, 0x13,
	0xfe, 0xaa, 0x98, 0x9f, 0x81, 0xdc, 0x72, 0x15, 0x3c, 0x7b, 0xf9, 0xfe, 0x5c, 0x3c, 0x83, 0x83,
	0x9e, 0x14, 0x49, 0x29, 0xaf, 0x43, 0x90, 0xc9, 0x2c, 0x59, 0x8c, 0x32, 0xd1, 0x3b, 0x5a, 0x6e,
	0x4e, 0xe6, 0xa7, 0x70, 0xb7, 0x33, 0x23, 0xaf, 0x09, 0xa9, 0x60, 0x64, 0x53, 0x58, 0xf1, 0x10,
	0xc6, 0x5c, 0xba, 0x0d, 0x64, 0xd5, 0x3a, 0x8c, 0xb8, 0x74, 0x4b, 0xaf, 0xe9, 0x54, 0x89, 0x29,
	0x0c, 0xa9, 0x60, 0x39, 0x88, 0xbc, 0x79, 0x9c, 0x7f, 0x1b, 0xc0, 0xe1, 0xef, 0x17, 0x8b, 0x56,
	0x8f, 0x60, 0x5c, 0x5f, 0x1a, 0xa3, 0xd7, 0x68, 0xa8, 0xd2, 0xad, 0x15, 0x6c, 0xd0, 0x2b, 0xaa,
	0xb4, 0x78, 0x0c, 0x93, 0xda, 0x53, 0x51, 0x70, 0x8e, 0xe1, 0x82, 0xbc, 0x8e, 0xae, 0x93, 0xec,
	0x76, 0x0b, 0xcf, 0x1b, 0x26, 0x1e, 0xc0, 0xe8, 0xc2, 0xae, 0x15, 0xd6, 0x5c, 0x69, 0x39, 0x8c,
	0x82, 0xbd, 0x06, 0xbc, 0xe1, 0x4a, 0x8b, 0x27, 0xb0, 0xcf, 0xa1, 0x97, 0xd7, 0xa5, 0x93, 0x3b,
	0xb3, 0x64, 0xb1, 0x97, 0x4d, 0x38, 0x2c, 0x3b, 0xfa, 0xd6, 0x89, 0x2f, 0x09, 0xec, 0x72, 0x89,
	0x2e, 0xc8, 0xdd, 0xd9, 0x70, 0x31, 0x3e, 0xfa, 0x9c, 0xa4, 0xff, 0xb2, 0xbb, 0x74, 0x6b, 0xd6,
	0xd9, 0x0e, 0x97, 0xaf, 0xc3, 0xfc, 0xfb, 0x00, 0x0e, 0xb6, 0x14, 0x2b, 0x66, 0x30, 0xee, 0xcc,
	0x58, 0x07, 0x79, 0x14, 0x47, 0xef, 0x23, 0xf1, 0x14, 0xa6, 0xec, 0x3e, 0xbe, 0xc0, 0xbe, 0xec,
	0x38, 0xca, 0xf6, 0x1b, 0xbe, 0xec, 0x49, 0x4f, 0xe0, 0xde, 0x96, 0x05, 0xc1, 0x6b, 0x2f, 0x4f,
	0x62, 0x2d, 0x87, 0x7f, 0xee, 0xc8, 0x3b, 0x2f, 0xbe, 0x26, 0x70, 0xa7, 0x9d, 0xed, 0xd7, 0x60,
	0xf2, 0x79, 0x8c, 0xf0, 0xd3, 0x7f, 0x8a, 0xb0, 0xbf, 0x62, 0xd9, 0xb4, 0xfd, 0xec, 0x67, 0xd7,
	0xab, 0x5b, 0xf1, 0xd7, 0x3c, 0xfe, 0x11, 0x00, 0x00, 0xff, 0xff, 0x29, 0x41, 0xdc, 0x51, 0xb7,
	0x03, 0x00, 0x00,
}
