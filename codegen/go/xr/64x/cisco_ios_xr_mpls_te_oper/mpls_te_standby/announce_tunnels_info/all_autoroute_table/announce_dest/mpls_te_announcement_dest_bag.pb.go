/*
Copyright 2019 Cisco Systems

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: mpls_te_announcement_dest_bag.proto

package cisco_ios_xr_mpls_te_oper_mpls_te_standby_announce_tunnels_info_all_autoroute_table_announce_dest

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type MplsTeAnnouncementDestBag_KEYS struct {
	DestinationAddress   string   `protobuf:"bytes,1,opt,name=destination_address,json=destinationAddress,proto3" json:"destination_address,omitempty"`
	Protocol             string   `protobuf:"bytes,2,opt,name=protocol,proto3" json:"protocol,omitempty"`
	Area                 uint32   `protobuf:"varint,3,opt,name=area,proto3" json:"area,omitempty"`
	IgpId                string   `protobuf:"bytes,4,opt,name=igp_id,json=igpId,proto3" json:"igp_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MplsTeAnnouncementDestBag_KEYS) Reset()         { *m = MplsTeAnnouncementDestBag_KEYS{} }
func (m *MplsTeAnnouncementDestBag_KEYS) String() string { return proto.CompactTextString(m) }
func (*MplsTeAnnouncementDestBag_KEYS) ProtoMessage()    {}
func (*MplsTeAnnouncementDestBag_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_a9026b4980d11f95, []int{0}
}

func (m *MplsTeAnnouncementDestBag_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsTeAnnouncementDestBag_KEYS.Unmarshal(m, b)
}
func (m *MplsTeAnnouncementDestBag_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsTeAnnouncementDestBag_KEYS.Marshal(b, m, deterministic)
}
func (m *MplsTeAnnouncementDestBag_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsTeAnnouncementDestBag_KEYS.Merge(m, src)
}
func (m *MplsTeAnnouncementDestBag_KEYS) XXX_Size() int {
	return xxx_messageInfo_MplsTeAnnouncementDestBag_KEYS.Size(m)
}
func (m *MplsTeAnnouncementDestBag_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsTeAnnouncementDestBag_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_MplsTeAnnouncementDestBag_KEYS proto.InternalMessageInfo

func (m *MplsTeAnnouncementDestBag_KEYS) GetDestinationAddress() string {
	if m != nil {
		return m.DestinationAddress
	}
	return ""
}

func (m *MplsTeAnnouncementDestBag_KEYS) GetProtocol() string {
	if m != nil {
		return m.Protocol
	}
	return ""
}

func (m *MplsTeAnnouncementDestBag_KEYS) GetArea() uint32 {
	if m != nil {
		return m.Area
	}
	return 0
}

func (m *MplsTeAnnouncementDestBag_KEYS) GetIgpId() string {
	if m != nil {
		return m.IgpId
	}
	return ""
}

type MplsTeAreaAfiInfo struct {
	IgpAreaId            string   `protobuf:"bytes,1,opt,name=igp_area_id,json=igpAreaId,proto3" json:"igp_area_id,omitempty"`
	Afi                  string   `protobuf:"bytes,2,opt,name=afi,proto3" json:"afi,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MplsTeAreaAfiInfo) Reset()         { *m = MplsTeAreaAfiInfo{} }
func (m *MplsTeAreaAfiInfo) String() string { return proto.CompactTextString(m) }
func (*MplsTeAreaAfiInfo) ProtoMessage()    {}
func (*MplsTeAreaAfiInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_a9026b4980d11f95, []int{1}
}

func (m *MplsTeAreaAfiInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsTeAreaAfiInfo.Unmarshal(m, b)
}
func (m *MplsTeAreaAfiInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsTeAreaAfiInfo.Marshal(b, m, deterministic)
}
func (m *MplsTeAreaAfiInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsTeAreaAfiInfo.Merge(m, src)
}
func (m *MplsTeAreaAfiInfo) XXX_Size() int {
	return xxx_messageInfo_MplsTeAreaAfiInfo.Size(m)
}
func (m *MplsTeAreaAfiInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsTeAreaAfiInfo.DiscardUnknown(m)
}

var xxx_messageInfo_MplsTeAreaAfiInfo proto.InternalMessageInfo

func (m *MplsTeAreaAfiInfo) GetIgpAreaId() string {
	if m != nil {
		return m.IgpAreaId
	}
	return ""
}

func (m *MplsTeAreaAfiInfo) GetAfi() string {
	if m != nil {
		return m.Afi
	}
	return ""
}

type MplsTeAutorouteBag struct {
	TunnelName              string               `protobuf:"bytes,1,opt,name=tunnel_name,json=tunnelName,proto3" json:"tunnel_name,omitempty"`
	TunnelSigName           string               `protobuf:"bytes,2,opt,name=tunnel_sig_name,json=tunnelSigName,proto3" json:"tunnel_sig_name,omitempty"`
	TunnelLoadshare         uint32               `protobuf:"varint,3,opt,name=tunnel_loadshare,json=tunnelLoadshare,proto3" json:"tunnel_loadshare,omitempty"`
	AnnounceType            string               `protobuf:"bytes,4,opt,name=announce_type,json=announceType,proto3" json:"announce_type,omitempty"`
	NextHopAddress          string               `protobuf:"bytes,5,opt,name=next_hop_address,json=nextHopAddress,proto3" json:"next_hop_address,omitempty"`
	Mode                    string               `protobuf:"bytes,6,opt,name=mode,proto3" json:"mode,omitempty"`
	IgpMetric               int32                `protobuf:"zigzag32,7,opt,name=igp_metric,json=igpMetric,proto3" json:"igp_metric,omitempty"`
	HoldTime                uint32               `protobuf:"varint,8,opt,name=hold_time,json=holdTime,proto3" json:"hold_time,omitempty"`
	AreaFormat              string               `protobuf:"bytes,9,opt,name=area_format,json=areaFormat,proto3" json:"area_format,omitempty"`
	IsAutoMeshAa            bool                 `protobuf:"varint,10,opt,name=is_auto_mesh_aa,json=isAutoMeshAa,proto3" json:"is_auto_mesh_aa,omitempty"`
	IsSr                    bool                 `protobuf:"varint,11,opt,name=is_sr,json=isSr,proto3" json:"is_sr,omitempty"`
	IsSrStrict              bool                 `protobuf:"varint,12,opt,name=is_sr_strict,json=isSrStrict,proto3" json:"is_sr_strict,omitempty"`
	MeshGroupIdaa           uint32               `protobuf:"varint,13,opt,name=mesh_group_idaa,json=meshGroupIdaa,proto3" json:"mesh_group_idaa,omitempty"`
	IgPs                    []*MplsTeAreaAfiInfo `protobuf:"bytes,14,rep,name=ig_ps,json=igPs,proto3" json:"ig_ps,omitempty"`
	IsExcludeSegmentRouting bool                 `protobuf:"varint,15,opt,name=is_exclude_segment_routing,json=isExcludeSegmentRouting,proto3" json:"is_exclude_segment_routing,omitempty"`
	XXX_NoUnkeyedLiteral    struct{}             `json:"-"`
	XXX_unrecognized        []byte               `json:"-"`
	XXX_sizecache           int32                `json:"-"`
}

func (m *MplsTeAutorouteBag) Reset()         { *m = MplsTeAutorouteBag{} }
func (m *MplsTeAutorouteBag) String() string { return proto.CompactTextString(m) }
func (*MplsTeAutorouteBag) ProtoMessage()    {}
func (*MplsTeAutorouteBag) Descriptor() ([]byte, []int) {
	return fileDescriptor_a9026b4980d11f95, []int{2}
}

func (m *MplsTeAutorouteBag) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsTeAutorouteBag.Unmarshal(m, b)
}
func (m *MplsTeAutorouteBag) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsTeAutorouteBag.Marshal(b, m, deterministic)
}
func (m *MplsTeAutorouteBag) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsTeAutorouteBag.Merge(m, src)
}
func (m *MplsTeAutorouteBag) XXX_Size() int {
	return xxx_messageInfo_MplsTeAutorouteBag.Size(m)
}
func (m *MplsTeAutorouteBag) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsTeAutorouteBag.DiscardUnknown(m)
}

var xxx_messageInfo_MplsTeAutorouteBag proto.InternalMessageInfo

func (m *MplsTeAutorouteBag) GetTunnelName() string {
	if m != nil {
		return m.TunnelName
	}
	return ""
}

func (m *MplsTeAutorouteBag) GetTunnelSigName() string {
	if m != nil {
		return m.TunnelSigName
	}
	return ""
}

func (m *MplsTeAutorouteBag) GetTunnelLoadshare() uint32 {
	if m != nil {
		return m.TunnelLoadshare
	}
	return 0
}

func (m *MplsTeAutorouteBag) GetAnnounceType() string {
	if m != nil {
		return m.AnnounceType
	}
	return ""
}

func (m *MplsTeAutorouteBag) GetNextHopAddress() string {
	if m != nil {
		return m.NextHopAddress
	}
	return ""
}

func (m *MplsTeAutorouteBag) GetMode() string {
	if m != nil {
		return m.Mode
	}
	return ""
}

func (m *MplsTeAutorouteBag) GetIgpMetric() int32 {
	if m != nil {
		return m.IgpMetric
	}
	return 0
}

func (m *MplsTeAutorouteBag) GetHoldTime() uint32 {
	if m != nil {
		return m.HoldTime
	}
	return 0
}

func (m *MplsTeAutorouteBag) GetAreaFormat() string {
	if m != nil {
		return m.AreaFormat
	}
	return ""
}

func (m *MplsTeAutorouteBag) GetIsAutoMeshAa() bool {
	if m != nil {
		return m.IsAutoMeshAa
	}
	return false
}

func (m *MplsTeAutorouteBag) GetIsSr() bool {
	if m != nil {
		return m.IsSr
	}
	return false
}

func (m *MplsTeAutorouteBag) GetIsSrStrict() bool {
	if m != nil {
		return m.IsSrStrict
	}
	return false
}

func (m *MplsTeAutorouteBag) GetMeshGroupIdaa() uint32 {
	if m != nil {
		return m.MeshGroupIdaa
	}
	return 0
}

func (m *MplsTeAutorouteBag) GetIgPs() []*MplsTeAreaAfiInfo {
	if m != nil {
		return m.IgPs
	}
	return nil
}

func (m *MplsTeAutorouteBag) GetIsExcludeSegmentRouting() bool {
	if m != nil {
		return m.IsExcludeSegmentRouting
	}
	return false
}

type MplsTeAnnouncementDestBag struct {
	IgpType                         string                `protobuf:"bytes,50,opt,name=igp_type,json=igpType,proto3" json:"igp_type,omitempty"`
	IgpInstance                     string                `protobuf:"bytes,51,opt,name=igp_instance,json=igpInstance,proto3" json:"igp_instance,omitempty"`
	IgpArea                         uint32                `protobuf:"varint,52,opt,name=igp_area,json=igpArea,proto3" json:"igp_area,omitempty"`
	Destination                     string                `protobuf:"bytes,53,opt,name=destination,proto3" json:"destination,omitempty"`
	AnnouncedTunnelsCount           uint32                `protobuf:"varint,54,opt,name=announced_tunnels_count,json=announcedTunnelsCount,proto3" json:"announced_tunnels_count,omitempty"`
	AutoroutedTunnelsCount          uint32                `protobuf:"varint,55,opt,name=autorouted_tunnels_count,json=autoroutedTunnelsCount,proto3" json:"autorouted_tunnels_count,omitempty"`
	ForwardingAdjacencyTunnelsCount uint32                `protobuf:"varint,56,opt,name=forwarding_adjacency_tunnels_count,json=forwardingAdjacencyTunnelsCount,proto3" json:"forwarding_adjacency_tunnels_count,omitempty"`
	AreaFormat                      string                `protobuf:"bytes,57,opt,name=area_format,json=areaFormat,proto3" json:"area_format,omitempty"`
	TotalTunnel                     []*MplsTeAutorouteBag `protobuf:"bytes,58,rep,name=total_tunnel,json=totalTunnel,proto3" json:"total_tunnel,omitempty"`
	XXX_NoUnkeyedLiteral            struct{}              `json:"-"`
	XXX_unrecognized                []byte                `json:"-"`
	XXX_sizecache                   int32                 `json:"-"`
}

func (m *MplsTeAnnouncementDestBag) Reset()         { *m = MplsTeAnnouncementDestBag{} }
func (m *MplsTeAnnouncementDestBag) String() string { return proto.CompactTextString(m) }
func (*MplsTeAnnouncementDestBag) ProtoMessage()    {}
func (*MplsTeAnnouncementDestBag) Descriptor() ([]byte, []int) {
	return fileDescriptor_a9026b4980d11f95, []int{3}
}

func (m *MplsTeAnnouncementDestBag) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsTeAnnouncementDestBag.Unmarshal(m, b)
}
func (m *MplsTeAnnouncementDestBag) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsTeAnnouncementDestBag.Marshal(b, m, deterministic)
}
func (m *MplsTeAnnouncementDestBag) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsTeAnnouncementDestBag.Merge(m, src)
}
func (m *MplsTeAnnouncementDestBag) XXX_Size() int {
	return xxx_messageInfo_MplsTeAnnouncementDestBag.Size(m)
}
func (m *MplsTeAnnouncementDestBag) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsTeAnnouncementDestBag.DiscardUnknown(m)
}

var xxx_messageInfo_MplsTeAnnouncementDestBag proto.InternalMessageInfo

func (m *MplsTeAnnouncementDestBag) GetIgpType() string {
	if m != nil {
		return m.IgpType
	}
	return ""
}

func (m *MplsTeAnnouncementDestBag) GetIgpInstance() string {
	if m != nil {
		return m.IgpInstance
	}
	return ""
}

func (m *MplsTeAnnouncementDestBag) GetIgpArea() uint32 {
	if m != nil {
		return m.IgpArea
	}
	return 0
}

func (m *MplsTeAnnouncementDestBag) GetDestination() string {
	if m != nil {
		return m.Destination
	}
	return ""
}

func (m *MplsTeAnnouncementDestBag) GetAnnouncedTunnelsCount() uint32 {
	if m != nil {
		return m.AnnouncedTunnelsCount
	}
	return 0
}

func (m *MplsTeAnnouncementDestBag) GetAutoroutedTunnelsCount() uint32 {
	if m != nil {
		return m.AutoroutedTunnelsCount
	}
	return 0
}

func (m *MplsTeAnnouncementDestBag) GetForwardingAdjacencyTunnelsCount() uint32 {
	if m != nil {
		return m.ForwardingAdjacencyTunnelsCount
	}
	return 0
}

func (m *MplsTeAnnouncementDestBag) GetAreaFormat() string {
	if m != nil {
		return m.AreaFormat
	}
	return ""
}

func (m *MplsTeAnnouncementDestBag) GetTotalTunnel() []*MplsTeAutorouteBag {
	if m != nil {
		return m.TotalTunnel
	}
	return nil
}

func init() {
	proto.RegisterType((*MplsTeAnnouncementDestBag_KEYS)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te_standby.announce_tunnels_info.all_autoroute_table.announce_dest.mpls_te_announcement_dest_bag_KEYS")
	proto.RegisterType((*MplsTeAreaAfiInfo)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te_standby.announce_tunnels_info.all_autoroute_table.announce_dest.mpls_te_area_afi_info")
	proto.RegisterType((*MplsTeAutorouteBag)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te_standby.announce_tunnels_info.all_autoroute_table.announce_dest.mpls_te_autoroute_bag")
	proto.RegisterType((*MplsTeAnnouncementDestBag)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te_standby.announce_tunnels_info.all_autoroute_table.announce_dest.mpls_te_announcement_dest_bag")
}

func init() {
	proto.RegisterFile("mpls_te_announcement_dest_bag.proto", fileDescriptor_a9026b4980d11f95)
}

var fileDescriptor_a9026b4980d11f95 = []byte{
	// 730 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x54, 0x51, 0x8f, 0x1b, 0x35,
	0x10, 0xd6, 0x72, 0xc9, 0x5d, 0x32, 0x49, 0x7a, 0x87, 0xab, 0xa3, 0xa6, 0xa8, 0x34, 0xa4, 0x02,
	0x85, 0x97, 0x20, 0xb5, 0x50, 0x0a, 0x3c, 0x45, 0xa8, 0x40, 0x54, 0x8a, 0x50, 0x72, 0x2f, 0x3c,
	0x59, 0x93, 0xb5, 0xb3, 0x31, 0xda, 0xb5, 0x57, 0xb6, 0x57, 0x24, 0x3f, 0x82, 0x77, 0x24, 0x10,
	0xbf, 0x15, 0x79, 0x76, 0x37, 0x49, 0x0f, 0x74, 0x6f, 0xf4, 0xcd, 0xfb, 0x7d, 0xdf, 0xcc, 0xce,
	0x7c, 0x9e, 0x31, 0x3c, 0x29, 0xca, 0xdc, 0x8b, 0xa0, 0x04, 0x1a, 0x63, 0x2b, 0x93, 0xaa, 0x42,
	0x99, 0x20, 0xa4, 0xf2, 0x41, 0xac, 0x31, 0x9b, 0x95, 0xce, 0x06, 0xcb, 0x30, 0xd5, 0x3e, 0xb5,
	0x42, 0x5b, 0x2f, 0x76, 0x4e, 0xb4, 0x11, 0xb6, 0x54, 0x6e, 0xd6, 0x7e, 0xf8, 0x80, 0x46, 0xae,
	0xf7, 0xb3, 0x36, 0x8d, 0x08, 0x95, 0x31, 0x2a, 0xf7, 0x42, 0x9b, 0x8d, 0x9d, 0x61, 0x9e, 0x0b,
	0xac, 0x82, 0x75, 0xb6, 0x0a, 0x4a, 0x04, 0x5c, 0xe7, 0xea, 0xa8, 0x8c, 0x3f, 0x9b, 0xfc, 0x95,
	0xc0, 0xe4, 0xce, 0x52, 0xc4, 0xab, 0x97, 0xbf, 0xac, 0xd8, 0x67, 0x70, 0x3f, 0x02, 0xda, 0x60,
	0xd0, 0xd6, 0x08, 0x94, 0xd2, 0x29, 0xef, 0x79, 0x32, 0x4e, 0xa6, 0xfd, 0x25, 0x3b, 0xa1, 0xe6,
	0x35, 0xc3, 0x1e, 0x42, 0x8f, 0x7a, 0x48, 0x6d, 0xce, 0xdf, 0x21, 0xd5, 0xe1, 0x9b, 0x31, 0xe8,
	0xa0, 0x53, 0xc8, 0xcf, 0xc6, 0xc9, 0x74, 0xb4, 0xa4, 0x33, 0xbb, 0x86, 0x73, 0x9d, 0x95, 0x42,
	0x4b, 0xde, 0x21, 0x75, 0x57, 0x67, 0xe5, 0x42, 0x4e, 0x16, 0x70, 0x7d, 0xa8, 0xce, 0x29, 0x14,
	0xb8, 0xd1, 0xd4, 0x19, 0xfb, 0x10, 0x06, 0x51, 0x4f, 0xa0, 0x96, 0x4d, 0x21, 0x7d, 0x9d, 0x95,
	0x73, 0xa7, 0x70, 0x21, 0xd9, 0x15, 0x9c, 0xe1, 0x46, 0x37, 0xbf, 0x8e, 0xc7, 0xc9, 0xdf, 0xdd,
	0x93, 0x5c, 0x07, 0x4f, 0xd6, 0x98, 0xb1, 0xc7, 0x30, 0xa8, 0x5d, 0x13, 0x06, 0x0b, 0xd5, 0xe4,
	0x82, 0x1a, 0xfa, 0x09, 0x0b, 0xc5, 0x3e, 0x81, 0xcb, 0x46, 0xe0, 0x75, 0x56, 0x8b, 0xea, 0xc4,
	0xa3, 0x1a, 0x5e, 0xe9, 0x8c, 0x74, 0x9f, 0xc2, 0x55, 0xa3, 0xcb, 0x2d, 0x4a, 0xbf, 0x45, 0xa7,
	0x9a, 0x26, 0x9b, 0xf8, 0x1f, 0x5b, 0x98, 0x3d, 0x81, 0xd1, 0xf1, 0xca, 0xf6, 0xa5, 0x6a, 0xda,
	0x1e, 0xb6, 0xe0, 0xcd, 0xbe, 0x54, 0x6c, 0x0a, 0x57, 0x46, 0xed, 0x82, 0xd8, 0xda, 0xf2, 0x60,
	0x79, 0x97, 0x74, 0xf7, 0x22, 0xfe, 0x83, 0x2d, 0x5b, 0xbb, 0x19, 0x74, 0x0a, 0x2b, 0x15, 0x3f,
	0x27, 0x96, 0xce, 0xec, 0x11, 0x40, 0xb4, 0xa8, 0x50, 0xc1, 0xe9, 0x94, 0x5f, 0x8c, 0x93, 0xe9,
	0xbb, 0xe4, 0xd0, 0x6b, 0x02, 0xd8, 0x07, 0xd0, 0xdf, 0xda, 0x5c, 0x8a, 0xa0, 0x0b, 0xc5, 0x7b,
	0x54, 0x65, 0x2f, 0x02, 0x37, 0xba, 0x50, 0xd1, 0x12, 0xb2, 0x76, 0x63, 0x5d, 0x81, 0x81, 0xf7,
	0x6b, 0x4b, 0x22, 0xf4, 0x1d, 0x21, 0xec, 0x63, 0xb8, 0xd4, 0x9e, 0x7c, 0x14, 0x85, 0xf2, 0x5b,
	0x81, 0xc8, 0x61, 0x9c, 0x4c, 0x7b, 0xcb, 0xa1, 0xf6, 0xf3, 0x2a, 0xd8, 0xd7, 0xca, 0x6f, 0xe7,
	0xc8, 0xee, 0x43, 0x57, 0x7b, 0xe1, 0x1d, 0x1f, 0x10, 0xd9, 0xd1, 0x7e, 0xe5, 0xd8, 0x18, 0x86,
	0x04, 0x0a, 0x1f, 0x0b, 0x09, 0x7c, 0x48, 0x1c, 0x44, 0x6e, 0x45, 0x48, 0x34, 0x9c, 0xb2, 0x66,
	0xce, 0x56, 0x71, 0x28, 0x10, 0xf9, 0x88, 0x2a, 0x1c, 0x45, 0xf8, 0xfb, 0x88, 0x2e, 0x24, 0x22,
	0xfb, 0x3d, 0x81, 0xae, 0xce, 0x44, 0xe9, 0xf9, 0xbd, 0xf1, 0xd9, 0x74, 0xf0, 0x74, 0x37, 0xfb,
	0xdf, 0x37, 0x66, 0xf6, 0x9f, 0xf3, 0xb8, 0xec, 0xe8, 0xec, 0x67, 0xcf, 0xbe, 0x81, 0x87, 0xda,
	0x0b, 0xb5, 0x4b, 0xf3, 0x4a, 0x2a, 0xe1, 0x55, 0x46, 0xab, 0x14, 0x73, 0x69, 0x93, 0xf1, 0x4b,
	0xea, 0xf3, 0x81, 0xf6, 0x2f, 0x6b, 0xc1, 0xaa, 0xe6, 0x97, 0x35, 0x3d, 0xf9, 0xa3, 0x03, 0x8f,
	0xee, 0x5c, 0x45, 0xf6, 0x3e, 0xf4, 0xe2, 0x8d, 0xd2, 0xbc, 0x3c, 0xa5, 0x2b, 0xb9, 0xd0, 0x59,
	0x49, 0xa3, 0xf2, 0x11, 0x0c, 0x69, 0x7f, 0x4c, 0x6c, 0x2f, 0x55, 0xfc, 0x19, 0xd1, 0x71, 0x47,
	0x16, 0x0d, 0xd4, 0x46, 0xd3, 0xea, 0x7d, 0x4e, 0x6e, 0x5e, 0x34, 0xfb, 0xc2, 0xc6, 0x30, 0x38,
	0xd9, 0x61, 0xfe, 0x45, 0x1d, 0x7c, 0x02, 0xb1, 0xe7, 0xf0, 0xa0, 0xad, 0x49, 0x1e, 0x1c, 0x4b,
	0x6d, 0x65, 0x02, 0x7f, 0x4e, 0xb9, 0xae, 0x0f, 0xf4, 0x4d, 0xcd, 0x7e, 0x1b, 0x49, 0xf6, 0x02,
	0xf8, 0xc1, 0xce, 0xdb, 0x81, 0x5f, 0x52, 0xe0, 0x7b, 0x47, 0xfe, 0x8d, 0xc8, 0x57, 0x30, 0xd9,
	0x58, 0xf7, 0x1b, 0x3a, 0xa9, 0x4d, 0x26, 0x50, 0xfe, 0x8a, 0xa9, 0x32, 0xe9, 0xfe, 0x56, 0x8e,
	0x17, 0x94, 0xe3, 0xf1, 0x51, 0x39, 0x6f, 0x85, 0x6f, 0x24, 0xbb, 0x35, 0xcf, 0x5f, 0xfd, 0x6b,
	0x9e, 0xff, 0x4c, 0x60, 0x18, 0x6c, 0xc0, 0xbc, 0xc9, 0xcf, 0xbf, 0x7e, 0xfb, 0x03, 0x75, 0xfa,
	0x28, 0x2d, 0x07, 0x54, 0x4d, 0xdd, 0xc4, 0xfa, 0x9c, 0xde, 0xce, 0x67, 0xff, 0x04, 0x00, 0x00,
	0xff, 0xff, 0x3c, 0xd5, 0x6b, 0x7e, 0x36, 0x06, 0x00, 0x00,
}
