/*
Copyright 2019 Cisco Systems

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: mpls_te_automesh_onehop_interface.proto

package cisco_ios_xr_mpls_te_oper_mpls_te_auto_tunnel_mesh_one_hop_interfaces_interface

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type MplsTeAutomeshOnehopInterface_KEYS struct {
	InterfaceName        string   `protobuf:"bytes,1,opt,name=interface_name,json=interfaceName,proto3" json:"interface_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MplsTeAutomeshOnehopInterface_KEYS) Reset()         { *m = MplsTeAutomeshOnehopInterface_KEYS{} }
func (m *MplsTeAutomeshOnehopInterface_KEYS) String() string { return proto.CompactTextString(m) }
func (*MplsTeAutomeshOnehopInterface_KEYS) ProtoMessage()    {}
func (*MplsTeAutomeshOnehopInterface_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_d8c41847107b398a, []int{0}
}

func (m *MplsTeAutomeshOnehopInterface_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsTeAutomeshOnehopInterface_KEYS.Unmarshal(m, b)
}
func (m *MplsTeAutomeshOnehopInterface_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsTeAutomeshOnehopInterface_KEYS.Marshal(b, m, deterministic)
}
func (m *MplsTeAutomeshOnehopInterface_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsTeAutomeshOnehopInterface_KEYS.Merge(m, src)
}
func (m *MplsTeAutomeshOnehopInterface_KEYS) XXX_Size() int {
	return xxx_messageInfo_MplsTeAutomeshOnehopInterface_KEYS.Size(m)
}
func (m *MplsTeAutomeshOnehopInterface_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsTeAutomeshOnehopInterface_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_MplsTeAutomeshOnehopInterface_KEYS proto.InternalMessageInfo

func (m *MplsTeAutomeshOnehopInterface_KEYS) GetInterfaceName() string {
	if m != nil {
		return m.InterfaceName
	}
	return ""
}

type MplsTeAutomeshOnehopTunnel struct {
	TunnelId             uint32   `protobuf:"varint,1,opt,name=tunnel_id,json=tunnelId,proto3" json:"tunnel_id,omitempty"`
	DestinationAddress   string   `protobuf:"bytes,2,opt,name=destination_address,json=destinationAddress,proto3" json:"destination_address,omitempty"`
	TunnelLspid          uint32   `protobuf:"varint,3,opt,name=tunnel_lspid,json=tunnelLspid,proto3" json:"tunnel_lspid,omitempty"`
	MeshGroupId          uint32   `protobuf:"varint,4,opt,name=mesh_group_id,json=meshGroupId,proto3" json:"mesh_group_id,omitempty"`
	TunnelState          string   `protobuf:"bytes,5,opt,name=tunnel_state,json=tunnelState,proto3" json:"tunnel_state,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MplsTeAutomeshOnehopTunnel) Reset()         { *m = MplsTeAutomeshOnehopTunnel{} }
func (m *MplsTeAutomeshOnehopTunnel) String() string { return proto.CompactTextString(m) }
func (*MplsTeAutomeshOnehopTunnel) ProtoMessage()    {}
func (*MplsTeAutomeshOnehopTunnel) Descriptor() ([]byte, []int) {
	return fileDescriptor_d8c41847107b398a, []int{1}
}

func (m *MplsTeAutomeshOnehopTunnel) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsTeAutomeshOnehopTunnel.Unmarshal(m, b)
}
func (m *MplsTeAutomeshOnehopTunnel) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsTeAutomeshOnehopTunnel.Marshal(b, m, deterministic)
}
func (m *MplsTeAutomeshOnehopTunnel) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsTeAutomeshOnehopTunnel.Merge(m, src)
}
func (m *MplsTeAutomeshOnehopTunnel) XXX_Size() int {
	return xxx_messageInfo_MplsTeAutomeshOnehopTunnel.Size(m)
}
func (m *MplsTeAutomeshOnehopTunnel) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsTeAutomeshOnehopTunnel.DiscardUnknown(m)
}

var xxx_messageInfo_MplsTeAutomeshOnehopTunnel proto.InternalMessageInfo

func (m *MplsTeAutomeshOnehopTunnel) GetTunnelId() uint32 {
	if m != nil {
		return m.TunnelId
	}
	return 0
}

func (m *MplsTeAutomeshOnehopTunnel) GetDestinationAddress() string {
	if m != nil {
		return m.DestinationAddress
	}
	return ""
}

func (m *MplsTeAutomeshOnehopTunnel) GetTunnelLspid() uint32 {
	if m != nil {
		return m.TunnelLspid
	}
	return 0
}

func (m *MplsTeAutomeshOnehopTunnel) GetMeshGroupId() uint32 {
	if m != nil {
		return m.MeshGroupId
	}
	return 0
}

func (m *MplsTeAutomeshOnehopTunnel) GetTunnelState() string {
	if m != nil {
		return m.TunnelState
	}
	return ""
}

type MplsTeAutomeshOnehopInterface struct {
	InterfaceNameXr      string                        `protobuf:"bytes,50,opt,name=interface_name_xr,json=interfaceNameXr,proto3" json:"interface_name_xr,omitempty"`
	Tunnel               []*MplsTeAutomeshOnehopTunnel `protobuf:"bytes,51,rep,name=tunnel,proto3" json:"tunnel,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                      `json:"-"`
	XXX_unrecognized     []byte                        `json:"-"`
	XXX_sizecache        int32                         `json:"-"`
}

func (m *MplsTeAutomeshOnehopInterface) Reset()         { *m = MplsTeAutomeshOnehopInterface{} }
func (m *MplsTeAutomeshOnehopInterface) String() string { return proto.CompactTextString(m) }
func (*MplsTeAutomeshOnehopInterface) ProtoMessage()    {}
func (*MplsTeAutomeshOnehopInterface) Descriptor() ([]byte, []int) {
	return fileDescriptor_d8c41847107b398a, []int{2}
}

func (m *MplsTeAutomeshOnehopInterface) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsTeAutomeshOnehopInterface.Unmarshal(m, b)
}
func (m *MplsTeAutomeshOnehopInterface) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsTeAutomeshOnehopInterface.Marshal(b, m, deterministic)
}
func (m *MplsTeAutomeshOnehopInterface) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsTeAutomeshOnehopInterface.Merge(m, src)
}
func (m *MplsTeAutomeshOnehopInterface) XXX_Size() int {
	return xxx_messageInfo_MplsTeAutomeshOnehopInterface.Size(m)
}
func (m *MplsTeAutomeshOnehopInterface) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsTeAutomeshOnehopInterface.DiscardUnknown(m)
}

var xxx_messageInfo_MplsTeAutomeshOnehopInterface proto.InternalMessageInfo

func (m *MplsTeAutomeshOnehopInterface) GetInterfaceNameXr() string {
	if m != nil {
		return m.InterfaceNameXr
	}
	return ""
}

func (m *MplsTeAutomeshOnehopInterface) GetTunnel() []*MplsTeAutomeshOnehopTunnel {
	if m != nil {
		return m.Tunnel
	}
	return nil
}

func init() {
	proto.RegisterType((*MplsTeAutomeshOnehopInterface_KEYS)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.auto_tunnel.mesh.one_hop.interfaces.interface.mpls_te_automesh_onehop_interface_KEYS")
	proto.RegisterType((*MplsTeAutomeshOnehopTunnel)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.auto_tunnel.mesh.one_hop.interfaces.interface.mpls_te_automesh_onehop_tunnel")
	proto.RegisterType((*MplsTeAutomeshOnehopInterface)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.auto_tunnel.mesh.one_hop.interfaces.interface.mpls_te_automesh_onehop_interface")
}

func init() {
	proto.RegisterFile("mpls_te_automesh_onehop_interface.proto", fileDescriptor_d8c41847107b398a)
}

var fileDescriptor_d8c41847107b398a = []byte{
	// 316 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x92, 0xcf, 0x4a, 0x3b, 0x31,
	0x10, 0xc7, 0xd9, 0x5f, 0x7f, 0x16, 0x9b, 0x5a, 0xc5, 0x78, 0x59, 0x10, 0xa4, 0x5d, 0x50, 0x8b,
	0x87, 0x08, 0xed, 0x13, 0x78, 0x10, 0x29, 0x8a, 0x85, 0xf6, 0xa2, 0xa7, 0x10, 0x9b, 0xd1, 0x06,
	0xba, 0x99, 0x90, 0x64, 0xa1, 0x6f, 0xe0, 0x2b, 0xea, 0xdb, 0x48, 0x92, 0xb5, 0x7f, 0x0e, 0xda,
	0x8b, 0xb7, 0xd9, 0xcf, 0xec, 0x7e, 0xbe, 0xc3, 0xcc, 0x92, 0xcb, 0xd2, 0x2c, 0x1c, 0xf7, 0xc0,
	0x45, 0xe5, 0xb1, 0x04, 0x37, 0xe7, 0xa8, 0x61, 0x8e, 0x86, 0x2b, 0xed, 0xc1, 0xbe, 0x8a, 0x19,
	0x30, 0x63, 0xd1, 0x23, 0x1d, 0xcf, 0x94, 0x9b, 0x21, 0x57, 0xe8, 0xf8, 0xd2, 0xf2, 0xef, 0xaf,
	0xd0, 0x80, 0x65, 0xf5, 0x03, 0x0b, 0x0a, 0xee, 0x2b, 0xad, 0x61, 0xc1, 0x82, 0x8a, 0xa1, 0x06,
	0x3e, 0x47, 0xc3, 0x56, 0x2e, 0xb7, 0x2e, 0x8b, 0x31, 0xb9, 0xd8, 0x99, 0xcd, 0xef, 0x6f, 0x9f,
	0xa7, 0xf4, 0x9c, 0x1c, 0xae, 0x89, 0x16, 0x25, 0xe4, 0x59, 0x37, 0xeb, 0xb7, 0x26, 0x9d, 0x15,
	0x7d, 0x14, 0x25, 0x14, 0x1f, 0x19, 0x39, 0xfb, 0xc9, 0x98, 0xa6, 0xa2, 0xa7, 0xa4, 0x95, 0x2a,
	0xae, 0x64, 0x94, 0x74, 0x26, 0xfb, 0x09, 0x8c, 0x24, 0xbd, 0x26, 0x27, 0x12, 0x9c, 0x57, 0x5a,
	0x78, 0x85, 0x9a, 0x0b, 0x29, 0x2d, 0x38, 0x97, 0xff, 0x8b, 0x59, 0x74, 0xa3, 0x75, 0x93, 0x3a,
	0xb4, 0x47, 0x0e, 0x6a, 0xdb, 0xc2, 0x19, 0x25, 0xf3, 0x46, 0x14, 0xb6, 0x13, 0x7b, 0x08, 0x88,
	0x16, 0xa4, 0x13, 0xc7, 0x78, 0xb3, 0x58, 0x99, 0x10, 0xfa, 0x3f, 0xbd, 0x13, 0xe0, 0x5d, 0x60,
	0x23, 0xb9, 0xa1, 0x71, 0x5e, 0x78, 0xc8, 0xf7, 0x62, 0x60, 0xad, 0x99, 0x06, 0x54, 0x7c, 0x66,
	0xa4, 0xb7, 0x73, 0x59, 0xf4, 0x8a, 0x1c, 0x6f, 0xef, 0x89, 0x2f, 0x6d, 0x3e, 0x88, 0xb6, 0xa3,
	0xad, 0x55, 0x3d, 0x59, 0xfa, 0x9e, 0x91, 0x66, 0x4a, 0xc8, 0x87, 0xdd, 0x46, 0xbf, 0x3d, 0x40,
	0xf6, 0xc7, 0x07, 0x66, 0xbf, 0xdf, 0x62, 0x52, 0xc7, 0xbf, 0x34, 0xe3, 0xff, 0x35, 0xfc, 0x0a,
	0x00, 0x00, 0xff, 0xff, 0xc8, 0x92, 0x9a, 0x89, 0x8a, 0x02, 0x00, 0x00,
}
