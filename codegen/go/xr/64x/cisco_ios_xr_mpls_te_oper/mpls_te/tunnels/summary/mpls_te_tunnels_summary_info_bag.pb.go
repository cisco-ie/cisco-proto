/*
Copyright 2019 Cisco Systems

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: mpls_te_tunnels_summary_info_bag.proto

package cisco_ios_xr_mpls_te_oper_mpls_te_tunnels_summary

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type MplsTeTunnelsSummaryInfoBag_KEYS struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MplsTeTunnelsSummaryInfoBag_KEYS) Reset()         { *m = MplsTeTunnelsSummaryInfoBag_KEYS{} }
func (m *MplsTeTunnelsSummaryInfoBag_KEYS) String() string { return proto.CompactTextString(m) }
func (*MplsTeTunnelsSummaryInfoBag_KEYS) ProtoMessage()    {}
func (*MplsTeTunnelsSummaryInfoBag_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_ebd3bd0af160239b, []int{0}
}

func (m *MplsTeTunnelsSummaryInfoBag_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsTeTunnelsSummaryInfoBag_KEYS.Unmarshal(m, b)
}
func (m *MplsTeTunnelsSummaryInfoBag_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsTeTunnelsSummaryInfoBag_KEYS.Marshal(b, m, deterministic)
}
func (m *MplsTeTunnelsSummaryInfoBag_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsTeTunnelsSummaryInfoBag_KEYS.Merge(m, src)
}
func (m *MplsTeTunnelsSummaryInfoBag_KEYS) XXX_Size() int {
	return xxx_messageInfo_MplsTeTunnelsSummaryInfoBag_KEYS.Size(m)
}
func (m *MplsTeTunnelsSummaryInfoBag_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsTeTunnelsSummaryInfoBag_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_MplsTeTunnelsSummaryInfoBag_KEYS proto.InternalMessageInfo

type MplsTeAutotunBackupSummaryInfo struct {
	Autobackups                                   uint32   `protobuf:"varint,1,opt,name=autobackups,proto3" json:"autobackups,omitempty"`
	UpAutobackups                                 uint32   `protobuf:"varint,2,opt,name=up_autobackups,json=upAutobackups,proto3" json:"up_autobackups,omitempty"`
	DownAutobackups                               uint32   `protobuf:"varint,3,opt,name=down_autobackups,json=downAutobackups,proto3" json:"down_autobackups,omitempty"`
	UnusedAutobackups                             uint32   `protobuf:"varint,4,opt,name=unused_autobackups,json=unusedAutobackups,proto3" json:"unused_autobackups,omitempty"`
	NextHopAutobackups                            uint32   `protobuf:"varint,5,opt,name=next_hop_autobackups,json=nextHopAutobackups,proto3" json:"next_hop_autobackups,omitempty"`
	NextNextHopAutobackups                        uint32   `protobuf:"varint,6,opt,name=next_next_hop_autobackups,json=nextNextHopAutobackups,proto3" json:"next_next_hop_autobackups,omitempty"`
	SrlgStrictAutobackups                         uint32   `protobuf:"varint,7,opt,name=srlg_strict_autobackups,json=srlgStrictAutobackups,proto3" json:"srlg_strict_autobackups,omitempty"`
	SrlgPreferredAutobackups                      uint32   `protobuf:"varint,8,opt,name=srlg_preferred_autobackups,json=srlgPreferredAutobackups,proto3" json:"srlg_preferred_autobackups,omitempty"`
	SrlgWeightedAutobackups                       uint32   `protobuf:"varint,9,opt,name=srlg_weighted_autobackups,json=srlgWeightedAutobackups,proto3" json:"srlg_weighted_autobackups,omitempty"`
	NextHopAutobackupProtectedLsPs                uint32   `protobuf:"varint,10,opt,name=next_hop_autobackup_protected_ls_ps,json=nextHopAutobackupProtectedLsPs,proto3" json:"next_hop_autobackup_protected_ls_ps,omitempty"`
	NextNextHopAutobackupProtectedLsPs            uint32   `protobuf:"varint,11,opt,name=next_next_hop_autobackup_protected_ls_ps,json=nextNextHopAutobackupProtectedLsPs,proto3" json:"next_next_hop_autobackup_protected_ls_ps,omitempty"`
	NextHopSrlgAutobackupProtectedLsPs            uint32   `protobuf:"varint,12,opt,name=next_hop_srlg_autobackup_protected_ls_ps,json=nextHopSrlgAutobackupProtectedLsPs,proto3" json:"next_hop_srlg_autobackup_protected_ls_ps,omitempty"`
	NextNextHopSrlgAutobackupProtectedLsPs        uint32   `protobuf:"varint,13,opt,name=next_next_hop_srlg_autobackup_protected_ls_ps,json=nextNextHopSrlgAutobackupProtectedLsPs,proto3" json:"next_next_hop_srlg_autobackup_protected_ls_ps,omitempty"`
	NextHopAutobackupProtectedS2LFamilies         uint32   `protobuf:"varint,14,opt,name=next_hop_autobackup_protected_s2l_families,json=nextHopAutobackupProtectedS2lFamilies,proto3" json:"next_hop_autobackup_protected_s2l_families,omitempty"`
	NextNextHopAutobackupProtectedS2LFamilies     uint32   `protobuf:"varint,15,opt,name=next_next_hop_autobackup_protected_s2l_families,json=nextNextHopAutobackupProtectedS2lFamilies,proto3" json:"next_next_hop_autobackup_protected_s2l_families,omitempty"`
	NextHopSrlgAutobackupProtectedS2LFamilies     uint32   `protobuf:"varint,16,opt,name=next_hop_srlg_autobackup_protected_s2l_families,json=nextHopSrlgAutobackupProtectedS2lFamilies,proto3" json:"next_hop_srlg_autobackup_protected_s2l_families,omitempty"`
	NextNextHopSrlgAutobackupProtectedS2LFamilies uint32   `protobuf:"varint,17,opt,name=next_next_hop_srlg_autobackup_protected_s2l_families,json=nextNextHopSrlgAutobackupProtectedS2lFamilies,proto3" json:"next_next_hop_srlg_autobackup_protected_s2l_families,omitempty"`
	NextHopAutobackupProtectedS2Ls                uint32   `protobuf:"varint,18,opt,name=next_hop_autobackup_protected_s2_ls,json=nextHopAutobackupProtectedS2Ls,proto3" json:"next_hop_autobackup_protected_s2_ls,omitempty"`
	NextNextHopAutobackupProtectedS2Ls            uint32   `protobuf:"varint,19,opt,name=next_next_hop_autobackup_protected_s2_ls,json=nextNextHopAutobackupProtectedS2Ls,proto3" json:"next_next_hop_autobackup_protected_s2_ls,omitempty"`
	NextHopSrlgAutobackupProtectedS2Ls            uint32   `protobuf:"varint,20,opt,name=next_hop_srlg_autobackup_protected_s2_ls,json=nextHopSrlgAutobackupProtectedS2Ls,proto3" json:"next_hop_srlg_autobackup_protected_s2_ls,omitempty"`
	NextNextHopSrlgAutobackupProtectedS2Ls        uint32   `protobuf:"varint,21,opt,name=next_next_hop_srlg_autobackup_protected_s2_ls,json=nextNextHopSrlgAutobackupProtectedS2Ls,proto3" json:"next_next_hop_srlg_autobackup_protected_s2_ls,omitempty"`
	XXX_NoUnkeyedLiteral                          struct{} `json:"-"`
	XXX_unrecognized                              []byte   `json:"-"`
	XXX_sizecache                                 int32    `json:"-"`
}

func (m *MplsTeAutotunBackupSummaryInfo) Reset()         { *m = MplsTeAutotunBackupSummaryInfo{} }
func (m *MplsTeAutotunBackupSummaryInfo) String() string { return proto.CompactTextString(m) }
func (*MplsTeAutotunBackupSummaryInfo) ProtoMessage()    {}
func (*MplsTeAutotunBackupSummaryInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_ebd3bd0af160239b, []int{1}
}

func (m *MplsTeAutotunBackupSummaryInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsTeAutotunBackupSummaryInfo.Unmarshal(m, b)
}
func (m *MplsTeAutotunBackupSummaryInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsTeAutotunBackupSummaryInfo.Marshal(b, m, deterministic)
}
func (m *MplsTeAutotunBackupSummaryInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsTeAutotunBackupSummaryInfo.Merge(m, src)
}
func (m *MplsTeAutotunBackupSummaryInfo) XXX_Size() int {
	return xxx_messageInfo_MplsTeAutotunBackupSummaryInfo.Size(m)
}
func (m *MplsTeAutotunBackupSummaryInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsTeAutotunBackupSummaryInfo.DiscardUnknown(m)
}

var xxx_messageInfo_MplsTeAutotunBackupSummaryInfo proto.InternalMessageInfo

func (m *MplsTeAutotunBackupSummaryInfo) GetAutobackups() uint32 {
	if m != nil {
		return m.Autobackups
	}
	return 0
}

func (m *MplsTeAutotunBackupSummaryInfo) GetUpAutobackups() uint32 {
	if m != nil {
		return m.UpAutobackups
	}
	return 0
}

func (m *MplsTeAutotunBackupSummaryInfo) GetDownAutobackups() uint32 {
	if m != nil {
		return m.DownAutobackups
	}
	return 0
}

func (m *MplsTeAutotunBackupSummaryInfo) GetUnusedAutobackups() uint32 {
	if m != nil {
		return m.UnusedAutobackups
	}
	return 0
}

func (m *MplsTeAutotunBackupSummaryInfo) GetNextHopAutobackups() uint32 {
	if m != nil {
		return m.NextHopAutobackups
	}
	return 0
}

func (m *MplsTeAutotunBackupSummaryInfo) GetNextNextHopAutobackups() uint32 {
	if m != nil {
		return m.NextNextHopAutobackups
	}
	return 0
}

func (m *MplsTeAutotunBackupSummaryInfo) GetSrlgStrictAutobackups() uint32 {
	if m != nil {
		return m.SrlgStrictAutobackups
	}
	return 0
}

func (m *MplsTeAutotunBackupSummaryInfo) GetSrlgPreferredAutobackups() uint32 {
	if m != nil {
		return m.SrlgPreferredAutobackups
	}
	return 0
}

func (m *MplsTeAutotunBackupSummaryInfo) GetSrlgWeightedAutobackups() uint32 {
	if m != nil {
		return m.SrlgWeightedAutobackups
	}
	return 0
}

func (m *MplsTeAutotunBackupSummaryInfo) GetNextHopAutobackupProtectedLsPs() uint32 {
	if m != nil {
		return m.NextHopAutobackupProtectedLsPs
	}
	return 0
}

func (m *MplsTeAutotunBackupSummaryInfo) GetNextNextHopAutobackupProtectedLsPs() uint32 {
	if m != nil {
		return m.NextNextHopAutobackupProtectedLsPs
	}
	return 0
}

func (m *MplsTeAutotunBackupSummaryInfo) GetNextHopSrlgAutobackupProtectedLsPs() uint32 {
	if m != nil {
		return m.NextHopSrlgAutobackupProtectedLsPs
	}
	return 0
}

func (m *MplsTeAutotunBackupSummaryInfo) GetNextNextHopSrlgAutobackupProtectedLsPs() uint32 {
	if m != nil {
		return m.NextNextHopSrlgAutobackupProtectedLsPs
	}
	return 0
}

func (m *MplsTeAutotunBackupSummaryInfo) GetNextHopAutobackupProtectedS2LFamilies() uint32 {
	if m != nil {
		return m.NextHopAutobackupProtectedS2LFamilies
	}
	return 0
}

func (m *MplsTeAutotunBackupSummaryInfo) GetNextNextHopAutobackupProtectedS2LFamilies() uint32 {
	if m != nil {
		return m.NextNextHopAutobackupProtectedS2LFamilies
	}
	return 0
}

func (m *MplsTeAutotunBackupSummaryInfo) GetNextHopSrlgAutobackupProtectedS2LFamilies() uint32 {
	if m != nil {
		return m.NextHopSrlgAutobackupProtectedS2LFamilies
	}
	return 0
}

func (m *MplsTeAutotunBackupSummaryInfo) GetNextNextHopSrlgAutobackupProtectedS2LFamilies() uint32 {
	if m != nil {
		return m.NextNextHopSrlgAutobackupProtectedS2LFamilies
	}
	return 0
}

func (m *MplsTeAutotunBackupSummaryInfo) GetNextHopAutobackupProtectedS2Ls() uint32 {
	if m != nil {
		return m.NextHopAutobackupProtectedS2Ls
	}
	return 0
}

func (m *MplsTeAutotunBackupSummaryInfo) GetNextNextHopAutobackupProtectedS2Ls() uint32 {
	if m != nil {
		return m.NextNextHopAutobackupProtectedS2Ls
	}
	return 0
}

func (m *MplsTeAutotunBackupSummaryInfo) GetNextHopSrlgAutobackupProtectedS2Ls() uint32 {
	if m != nil {
		return m.NextHopSrlgAutobackupProtectedS2Ls
	}
	return 0
}

func (m *MplsTeAutotunBackupSummaryInfo) GetNextNextHopSrlgAutobackupProtectedS2Ls() uint32 {
	if m != nil {
		return m.NextNextHopSrlgAutobackupProtectedS2Ls
	}
	return 0
}

type MplsTeAutotunMeshSummaryInfo struct {
	AutoMeshTunnels      uint32   `protobuf:"varint,1,opt,name=auto_mesh_tunnels,json=autoMeshTunnels,proto3" json:"auto_mesh_tunnels,omitempty"`
	UpAutoMeshTunnels    uint32   `protobuf:"varint,2,opt,name=up_auto_mesh_tunnels,json=upAutoMeshTunnels,proto3" json:"up_auto_mesh_tunnels,omitempty"`
	DownAutoMeshTunnels  uint32   `protobuf:"varint,3,opt,name=down_auto_mesh_tunnels,json=downAutoMeshTunnels,proto3" json:"down_auto_mesh_tunnels,omitempty"`
	FrrAutoMeshTunnels   uint32   `protobuf:"varint,4,opt,name=frr_auto_mesh_tunnels,json=frrAutoMeshTunnels,proto3" json:"frr_auto_mesh_tunnels,omitempty"`
	AutoMeshGroups       uint32   `protobuf:"varint,5,opt,name=auto_mesh_groups,json=autoMeshGroups,proto3" json:"auto_mesh_groups,omitempty"`
	AutoMeshDestinations uint32   `protobuf:"varint,6,opt,name=auto_mesh_destinations,json=autoMeshDestinations,proto3" json:"auto_mesh_destinations,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MplsTeAutotunMeshSummaryInfo) Reset()         { *m = MplsTeAutotunMeshSummaryInfo{} }
func (m *MplsTeAutotunMeshSummaryInfo) String() string { return proto.CompactTextString(m) }
func (*MplsTeAutotunMeshSummaryInfo) ProtoMessage()    {}
func (*MplsTeAutotunMeshSummaryInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_ebd3bd0af160239b, []int{2}
}

func (m *MplsTeAutotunMeshSummaryInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsTeAutotunMeshSummaryInfo.Unmarshal(m, b)
}
func (m *MplsTeAutotunMeshSummaryInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsTeAutotunMeshSummaryInfo.Marshal(b, m, deterministic)
}
func (m *MplsTeAutotunMeshSummaryInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsTeAutotunMeshSummaryInfo.Merge(m, src)
}
func (m *MplsTeAutotunMeshSummaryInfo) XXX_Size() int {
	return xxx_messageInfo_MplsTeAutotunMeshSummaryInfo.Size(m)
}
func (m *MplsTeAutotunMeshSummaryInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsTeAutotunMeshSummaryInfo.DiscardUnknown(m)
}

var xxx_messageInfo_MplsTeAutotunMeshSummaryInfo proto.InternalMessageInfo

func (m *MplsTeAutotunMeshSummaryInfo) GetAutoMeshTunnels() uint32 {
	if m != nil {
		return m.AutoMeshTunnels
	}
	return 0
}

func (m *MplsTeAutotunMeshSummaryInfo) GetUpAutoMeshTunnels() uint32 {
	if m != nil {
		return m.UpAutoMeshTunnels
	}
	return 0
}

func (m *MplsTeAutotunMeshSummaryInfo) GetDownAutoMeshTunnels() uint32 {
	if m != nil {
		return m.DownAutoMeshTunnels
	}
	return 0
}

func (m *MplsTeAutotunMeshSummaryInfo) GetFrrAutoMeshTunnels() uint32 {
	if m != nil {
		return m.FrrAutoMeshTunnels
	}
	return 0
}

func (m *MplsTeAutotunMeshSummaryInfo) GetAutoMeshGroups() uint32 {
	if m != nil {
		return m.AutoMeshGroups
	}
	return 0
}

func (m *MplsTeAutotunMeshSummaryInfo) GetAutoMeshDestinations() uint32 {
	if m != nil {
		return m.AutoMeshDestinations
	}
	return 0
}

type MplsTeAutotunMeshOnehopSummaryInfo struct {
	AutoMeshOneHopTunnels      uint32   `protobuf:"varint,1,opt,name=auto_mesh_one_hop_tunnels,json=autoMeshOneHopTunnels,proto3" json:"auto_mesh_one_hop_tunnels,omitempty"`
	UpAutoMeshOneHopTunnels    uint32   `protobuf:"varint,2,opt,name=up_auto_mesh_one_hop_tunnels,json=upAutoMeshOneHopTunnels,proto3" json:"up_auto_mesh_one_hop_tunnels,omitempty"`
	DownAutoMeshOneHopTunnels  uint32   `protobuf:"varint,3,opt,name=down_auto_mesh_one_hop_tunnels,json=downAutoMeshOneHopTunnels,proto3" json:"down_auto_mesh_one_hop_tunnels,omitempty"`
	FrrAutoMeshTunnels         uint32   `protobuf:"varint,4,opt,name=frr_auto_mesh_tunnels,json=frrAutoMeshTunnels,proto3" json:"frr_auto_mesh_tunnels,omitempty"`
	AutoMeshOneHopGroups       uint32   `protobuf:"varint,5,opt,name=auto_mesh_one_hop_groups,json=autoMeshOneHopGroups,proto3" json:"auto_mesh_one_hop_groups,omitempty"`
	AutoMeshOneHopDestinations uint32   `protobuf:"varint,6,opt,name=auto_mesh_one_hop_destinations,json=autoMeshOneHopDestinations,proto3" json:"auto_mesh_one_hop_destinations,omitempty"`
	XXX_NoUnkeyedLiteral       struct{} `json:"-"`
	XXX_unrecognized           []byte   `json:"-"`
	XXX_sizecache              int32    `json:"-"`
}

func (m *MplsTeAutotunMeshOnehopSummaryInfo) Reset()         { *m = MplsTeAutotunMeshOnehopSummaryInfo{} }
func (m *MplsTeAutotunMeshOnehopSummaryInfo) String() string { return proto.CompactTextString(m) }
func (*MplsTeAutotunMeshOnehopSummaryInfo) ProtoMessage()    {}
func (*MplsTeAutotunMeshOnehopSummaryInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_ebd3bd0af160239b, []int{3}
}

func (m *MplsTeAutotunMeshOnehopSummaryInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsTeAutotunMeshOnehopSummaryInfo.Unmarshal(m, b)
}
func (m *MplsTeAutotunMeshOnehopSummaryInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsTeAutotunMeshOnehopSummaryInfo.Marshal(b, m, deterministic)
}
func (m *MplsTeAutotunMeshOnehopSummaryInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsTeAutotunMeshOnehopSummaryInfo.Merge(m, src)
}
func (m *MplsTeAutotunMeshOnehopSummaryInfo) XXX_Size() int {
	return xxx_messageInfo_MplsTeAutotunMeshOnehopSummaryInfo.Size(m)
}
func (m *MplsTeAutotunMeshOnehopSummaryInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsTeAutotunMeshOnehopSummaryInfo.DiscardUnknown(m)
}

var xxx_messageInfo_MplsTeAutotunMeshOnehopSummaryInfo proto.InternalMessageInfo

func (m *MplsTeAutotunMeshOnehopSummaryInfo) GetAutoMeshOneHopTunnels() uint32 {
	if m != nil {
		return m.AutoMeshOneHopTunnels
	}
	return 0
}

func (m *MplsTeAutotunMeshOnehopSummaryInfo) GetUpAutoMeshOneHopTunnels() uint32 {
	if m != nil {
		return m.UpAutoMeshOneHopTunnels
	}
	return 0
}

func (m *MplsTeAutotunMeshOnehopSummaryInfo) GetDownAutoMeshOneHopTunnels() uint32 {
	if m != nil {
		return m.DownAutoMeshOneHopTunnels
	}
	return 0
}

func (m *MplsTeAutotunMeshOnehopSummaryInfo) GetFrrAutoMeshTunnels() uint32 {
	if m != nil {
		return m.FrrAutoMeshTunnels
	}
	return 0
}

func (m *MplsTeAutotunMeshOnehopSummaryInfo) GetAutoMeshOneHopGroups() uint32 {
	if m != nil {
		return m.AutoMeshOneHopGroups
	}
	return 0
}

func (m *MplsTeAutotunMeshOnehopSummaryInfo) GetAutoMeshOneHopDestinations() uint32 {
	if m != nil {
		return m.AutoMeshOneHopDestinations
	}
	return 0
}

type MplsTeGmplsUniSummaryInfo struct {
	HeadsUp              uint32   `protobuf:"varint,1,opt,name=heads_up,json=headsUp,proto3" json:"heads_up,omitempty"`
	HeadsDown            uint32   `protobuf:"varint,2,opt,name=heads_down,json=headsDown,proto3" json:"heads_down,omitempty"`
	TailsUp              uint32   `protobuf:"varint,3,opt,name=tails_up,json=tailsUp,proto3" json:"tails_up,omitempty"`
	TailsDown            uint32   `protobuf:"varint,4,opt,name=tails_down,json=tailsDown,proto3" json:"tails_down,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MplsTeGmplsUniSummaryInfo) Reset()         { *m = MplsTeGmplsUniSummaryInfo{} }
func (m *MplsTeGmplsUniSummaryInfo) String() string { return proto.CompactTextString(m) }
func (*MplsTeGmplsUniSummaryInfo) ProtoMessage()    {}
func (*MplsTeGmplsUniSummaryInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_ebd3bd0af160239b, []int{4}
}

func (m *MplsTeGmplsUniSummaryInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsTeGmplsUniSummaryInfo.Unmarshal(m, b)
}
func (m *MplsTeGmplsUniSummaryInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsTeGmplsUniSummaryInfo.Marshal(b, m, deterministic)
}
func (m *MplsTeGmplsUniSummaryInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsTeGmplsUniSummaryInfo.Merge(m, src)
}
func (m *MplsTeGmplsUniSummaryInfo) XXX_Size() int {
	return xxx_messageInfo_MplsTeGmplsUniSummaryInfo.Size(m)
}
func (m *MplsTeGmplsUniSummaryInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsTeGmplsUniSummaryInfo.DiscardUnknown(m)
}

var xxx_messageInfo_MplsTeGmplsUniSummaryInfo proto.InternalMessageInfo

func (m *MplsTeGmplsUniSummaryInfo) GetHeadsUp() uint32 {
	if m != nil {
		return m.HeadsUp
	}
	return 0
}

func (m *MplsTeGmplsUniSummaryInfo) GetHeadsDown() uint32 {
	if m != nil {
		return m.HeadsDown
	}
	return 0
}

func (m *MplsTeGmplsUniSummaryInfo) GetTailsUp() uint32 {
	if m != nil {
		return m.TailsUp
	}
	return 0
}

func (m *MplsTeGmplsUniSummaryInfo) GetTailsDown() uint32 {
	if m != nil {
		return m.TailsDown
	}
	return 0
}

type MplsTeGmplsNniSummaryInfo struct {
	HeadsUp              uint32   `protobuf:"varint,1,opt,name=heads_up,json=headsUp,proto3" json:"heads_up,omitempty"`
	HeadsDown            uint32   `protobuf:"varint,2,opt,name=heads_down,json=headsDown,proto3" json:"heads_down,omitempty"`
	MidsUp               uint32   `protobuf:"varint,3,opt,name=mids_up,json=midsUp,proto3" json:"mids_up,omitempty"`
	MidsDown             uint32   `protobuf:"varint,4,opt,name=mids_down,json=midsDown,proto3" json:"mids_down,omitempty"`
	TailsUp              uint32   `protobuf:"varint,5,opt,name=tails_up,json=tailsUp,proto3" json:"tails_up,omitempty"`
	TailsDown            uint32   `protobuf:"varint,6,opt,name=tails_down,json=tailsDown,proto3" json:"tails_down,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MplsTeGmplsNniSummaryInfo) Reset()         { *m = MplsTeGmplsNniSummaryInfo{} }
func (m *MplsTeGmplsNniSummaryInfo) String() string { return proto.CompactTextString(m) }
func (*MplsTeGmplsNniSummaryInfo) ProtoMessage()    {}
func (*MplsTeGmplsNniSummaryInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_ebd3bd0af160239b, []int{5}
}

func (m *MplsTeGmplsNniSummaryInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsTeGmplsNniSummaryInfo.Unmarshal(m, b)
}
func (m *MplsTeGmplsNniSummaryInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsTeGmplsNniSummaryInfo.Marshal(b, m, deterministic)
}
func (m *MplsTeGmplsNniSummaryInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsTeGmplsNniSummaryInfo.Merge(m, src)
}
func (m *MplsTeGmplsNniSummaryInfo) XXX_Size() int {
	return xxx_messageInfo_MplsTeGmplsNniSummaryInfo.Size(m)
}
func (m *MplsTeGmplsNniSummaryInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsTeGmplsNniSummaryInfo.DiscardUnknown(m)
}

var xxx_messageInfo_MplsTeGmplsNniSummaryInfo proto.InternalMessageInfo

func (m *MplsTeGmplsNniSummaryInfo) GetHeadsUp() uint32 {
	if m != nil {
		return m.HeadsUp
	}
	return 0
}

func (m *MplsTeGmplsNniSummaryInfo) GetHeadsDown() uint32 {
	if m != nil {
		return m.HeadsDown
	}
	return 0
}

func (m *MplsTeGmplsNniSummaryInfo) GetMidsUp() uint32 {
	if m != nil {
		return m.MidsUp
	}
	return 0
}

func (m *MplsTeGmplsNniSummaryInfo) GetMidsDown() uint32 {
	if m != nil {
		return m.MidsDown
	}
	return 0
}

func (m *MplsTeGmplsNniSummaryInfo) GetTailsUp() uint32 {
	if m != nil {
		return m.TailsUp
	}
	return 0
}

func (m *MplsTeGmplsNniSummaryInfo) GetTailsDown() uint32 {
	if m != nil {
		return m.TailsDown
	}
	return 0
}

type TeTableDatapointInfo struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TeTableDatapointInfo) Reset()         { *m = TeTableDatapointInfo{} }
func (m *TeTableDatapointInfo) String() string { return proto.CompactTextString(m) }
func (*TeTableDatapointInfo) ProtoMessage()    {}
func (*TeTableDatapointInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_ebd3bd0af160239b, []int{6}
}

func (m *TeTableDatapointInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TeTableDatapointInfo.Unmarshal(m, b)
}
func (m *TeTableDatapointInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TeTableDatapointInfo.Marshal(b, m, deterministic)
}
func (m *TeTableDatapointInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TeTableDatapointInfo.Merge(m, src)
}
func (m *TeTableDatapointInfo) XXX_Size() int {
	return xxx_messageInfo_TeTableDatapointInfo.Size(m)
}
func (m *TeTableDatapointInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_TeTableDatapointInfo.DiscardUnknown(m)
}

var xxx_messageInfo_TeTableDatapointInfo proto.InternalMessageInfo

type TeConvTblSummaryBag struct {
	TunnelFrrActiveCount               uint32                `protobuf:"varint,1,opt,name=tunnel_frr_active_count,json=tunnelFrrActiveCount,proto3" json:"tunnel_frr_active_count,omitempty"`
	TunnelFrrTotalCount                uint32                `protobuf:"varint,2,opt,name=tunnel_frr_total_count,json=tunnelFrrTotalCount,proto3" json:"tunnel_frr_total_count,omitempty"`
	TunnelConvergedCount               uint32                `protobuf:"varint,3,opt,name=tunnel_converged_count,json=tunnelConvergedCount,proto3" json:"tunnel_converged_count,omitempty"`
	TunnelTotalConvergenceCompleteTime uint64                `protobuf:"varint,4,opt,name=tunnel_total_convergence_complete_time,json=tunnelTotalConvergenceCompleteTime,proto3" json:"tunnel_total_convergence_complete_time,omitempty"`
	TablePathOut                       *TeTableDatapointInfo `protobuf:"bytes,5,opt,name=table_path_out,json=tablePathOut,proto3" json:"table_path_out,omitempty"`
	TableResvIn                        *TeTableDatapointInfo `protobuf:"bytes,6,opt,name=table_resv_in,json=tableResvIn,proto3" json:"table_resv_in,omitempty"`
	TableLabelRewrite                  *TeTableDatapointInfo `protobuf:"bytes,7,opt,name=table_label_rewrite,json=tableLabelRewrite,proto3" json:"table_label_rewrite,omitempty"`
	TablePcalc                         *TeTableDatapointInfo `protobuf:"bytes,8,opt,name=table_pcalc,json=tablePcalc,proto3" json:"table_pcalc,omitempty"`
	TableTunnelRewrite                 *TeTableDatapointInfo `protobuf:"bytes,9,opt,name=table_tunnel_rewrite,json=tableTunnelRewrite,proto3" json:"table_tunnel_rewrite,omitempty"`
	TableFrrTrigger                    *TeTableDatapointInfo `protobuf:"bytes,10,opt,name=table_frr_trigger,json=tableFrrTrigger,proto3" json:"table_frr_trigger,omitempty"`
	XXX_NoUnkeyedLiteral               struct{}              `json:"-"`
	XXX_unrecognized                   []byte                `json:"-"`
	XXX_sizecache                      int32                 `json:"-"`
}

func (m *TeConvTblSummaryBag) Reset()         { *m = TeConvTblSummaryBag{} }
func (m *TeConvTblSummaryBag) String() string { return proto.CompactTextString(m) }
func (*TeConvTblSummaryBag) ProtoMessage()    {}
func (*TeConvTblSummaryBag) Descriptor() ([]byte, []int) {
	return fileDescriptor_ebd3bd0af160239b, []int{7}
}

func (m *TeConvTblSummaryBag) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TeConvTblSummaryBag.Unmarshal(m, b)
}
func (m *TeConvTblSummaryBag) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TeConvTblSummaryBag.Marshal(b, m, deterministic)
}
func (m *TeConvTblSummaryBag) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TeConvTblSummaryBag.Merge(m, src)
}
func (m *TeConvTblSummaryBag) XXX_Size() int {
	return xxx_messageInfo_TeConvTblSummaryBag.Size(m)
}
func (m *TeConvTblSummaryBag) XXX_DiscardUnknown() {
	xxx_messageInfo_TeConvTblSummaryBag.DiscardUnknown(m)
}

var xxx_messageInfo_TeConvTblSummaryBag proto.InternalMessageInfo

func (m *TeConvTblSummaryBag) GetTunnelFrrActiveCount() uint32 {
	if m != nil {
		return m.TunnelFrrActiveCount
	}
	return 0
}

func (m *TeConvTblSummaryBag) GetTunnelFrrTotalCount() uint32 {
	if m != nil {
		return m.TunnelFrrTotalCount
	}
	return 0
}

func (m *TeConvTblSummaryBag) GetTunnelConvergedCount() uint32 {
	if m != nil {
		return m.TunnelConvergedCount
	}
	return 0
}

func (m *TeConvTblSummaryBag) GetTunnelTotalConvergenceCompleteTime() uint64 {
	if m != nil {
		return m.TunnelTotalConvergenceCompleteTime
	}
	return 0
}

func (m *TeConvTblSummaryBag) GetTablePathOut() *TeTableDatapointInfo {
	if m != nil {
		return m.TablePathOut
	}
	return nil
}

func (m *TeConvTblSummaryBag) GetTableResvIn() *TeTableDatapointInfo {
	if m != nil {
		return m.TableResvIn
	}
	return nil
}

func (m *TeConvTblSummaryBag) GetTableLabelRewrite() *TeTableDatapointInfo {
	if m != nil {
		return m.TableLabelRewrite
	}
	return nil
}

func (m *TeConvTblSummaryBag) GetTablePcalc() *TeTableDatapointInfo {
	if m != nil {
		return m.TablePcalc
	}
	return nil
}

func (m *TeConvTblSummaryBag) GetTableTunnelRewrite() *TeTableDatapointInfo {
	if m != nil {
		return m.TableTunnelRewrite
	}
	return nil
}

func (m *TeConvTblSummaryBag) GetTableFrrTrigger() *TeTableDatapointInfo {
	if m != nil {
		return m.TableFrrTrigger
	}
	return nil
}

type MplsTeAutotunP2MpInfo struct {
	AutoP2MpTunnel           uint32   `protobuf:"varint,1,opt,name=auto_p2mp_tunnel,json=autoP2mpTunnel,proto3" json:"auto_p2mp_tunnel,omitempty"`
	AutoP2MpDestinations     uint32   `protobuf:"varint,2,opt,name=auto_p2mp_destinations,json=autoP2mpDestinations,proto3" json:"auto_p2mp_destinations,omitempty"`
	UpAutoP2MpDestinations   uint32   `protobuf:"varint,3,opt,name=up_auto_p2mp_destinations,json=upAutoP2mpDestinations,proto3" json:"up_auto_p2mp_destinations,omitempty"`
	DownAutoP2MpDestinations uint32   `protobuf:"varint,4,opt,name=down_auto_p2mp_destinations,json=downAutoP2mpDestinations,proto3" json:"down_auto_p2mp_destinations,omitempty"`
	UpAutoP2MpTunnels        uint32   `protobuf:"varint,5,opt,name=up_auto_p2mp_tunnels,json=upAutoP2mpTunnels,proto3" json:"up_auto_p2mp_tunnels,omitempty"`
	DownAutoP2MpTunnels      uint32   `protobuf:"varint,6,opt,name=down_auto_p2mp_tunnels,json=downAutoP2mpTunnels,proto3" json:"down_auto_p2mp_tunnels,omitempty"`
	FrrAutoP2MpTunnels       uint32   `protobuf:"varint,7,opt,name=frr_auto_p2mp_tunnels,json=frrAutoP2mpTunnels,proto3" json:"frr_auto_p2mp_tunnels,omitempty"`
	XXX_NoUnkeyedLiteral     struct{} `json:"-"`
	XXX_unrecognized         []byte   `json:"-"`
	XXX_sizecache            int32    `json:"-"`
}

func (m *MplsTeAutotunP2MpInfo) Reset()         { *m = MplsTeAutotunP2MpInfo{} }
func (m *MplsTeAutotunP2MpInfo) String() string { return proto.CompactTextString(m) }
func (*MplsTeAutotunP2MpInfo) ProtoMessage()    {}
func (*MplsTeAutotunP2MpInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_ebd3bd0af160239b, []int{8}
}

func (m *MplsTeAutotunP2MpInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsTeAutotunP2MpInfo.Unmarshal(m, b)
}
func (m *MplsTeAutotunP2MpInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsTeAutotunP2MpInfo.Marshal(b, m, deterministic)
}
func (m *MplsTeAutotunP2MpInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsTeAutotunP2MpInfo.Merge(m, src)
}
func (m *MplsTeAutotunP2MpInfo) XXX_Size() int {
	return xxx_messageInfo_MplsTeAutotunP2MpInfo.Size(m)
}
func (m *MplsTeAutotunP2MpInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsTeAutotunP2MpInfo.DiscardUnknown(m)
}

var xxx_messageInfo_MplsTeAutotunP2MpInfo proto.InternalMessageInfo

func (m *MplsTeAutotunP2MpInfo) GetAutoP2MpTunnel() uint32 {
	if m != nil {
		return m.AutoP2MpTunnel
	}
	return 0
}

func (m *MplsTeAutotunP2MpInfo) GetAutoP2MpDestinations() uint32 {
	if m != nil {
		return m.AutoP2MpDestinations
	}
	return 0
}

func (m *MplsTeAutotunP2MpInfo) GetUpAutoP2MpDestinations() uint32 {
	if m != nil {
		return m.UpAutoP2MpDestinations
	}
	return 0
}

func (m *MplsTeAutotunP2MpInfo) GetDownAutoP2MpDestinations() uint32 {
	if m != nil {
		return m.DownAutoP2MpDestinations
	}
	return 0
}

func (m *MplsTeAutotunP2MpInfo) GetUpAutoP2MpTunnels() uint32 {
	if m != nil {
		return m.UpAutoP2MpTunnels
	}
	return 0
}

func (m *MplsTeAutotunP2MpInfo) GetDownAutoP2MpTunnels() uint32 {
	if m != nil {
		return m.DownAutoP2MpTunnels
	}
	return 0
}

func (m *MplsTeAutotunP2MpInfo) GetFrrAutoP2MpTunnels() uint32 {
	if m != nil {
		return m.FrrAutoP2MpTunnels
	}
	return 0
}

type MplsTeAutotunP2PInfo struct {
	AutoP2PTunnel        uint32   `protobuf:"varint,1,opt,name=auto_p2p_tunnel,json=autoP2pTunnel,proto3" json:"auto_p2p_tunnel,omitempty"`
	UpAutoP2PTunnels     uint32   `protobuf:"varint,2,opt,name=up_auto_p2p_tunnels,json=upAutoP2pTunnels,proto3" json:"up_auto_p2p_tunnels,omitempty"`
	DownAutoP2PTunnels   uint32   `protobuf:"varint,3,opt,name=down_auto_p2p_tunnels,json=downAutoP2pTunnels,proto3" json:"down_auto_p2p_tunnels,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MplsTeAutotunP2PInfo) Reset()         { *m = MplsTeAutotunP2PInfo{} }
func (m *MplsTeAutotunP2PInfo) String() string { return proto.CompactTextString(m) }
func (*MplsTeAutotunP2PInfo) ProtoMessage()    {}
func (*MplsTeAutotunP2PInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_ebd3bd0af160239b, []int{9}
}

func (m *MplsTeAutotunP2PInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsTeAutotunP2PInfo.Unmarshal(m, b)
}
func (m *MplsTeAutotunP2PInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsTeAutotunP2PInfo.Marshal(b, m, deterministic)
}
func (m *MplsTeAutotunP2PInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsTeAutotunP2PInfo.Merge(m, src)
}
func (m *MplsTeAutotunP2PInfo) XXX_Size() int {
	return xxx_messageInfo_MplsTeAutotunP2PInfo.Size(m)
}
func (m *MplsTeAutotunP2PInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsTeAutotunP2PInfo.DiscardUnknown(m)
}

var xxx_messageInfo_MplsTeAutotunP2PInfo proto.InternalMessageInfo

func (m *MplsTeAutotunP2PInfo) GetAutoP2PTunnel() uint32 {
	if m != nil {
		return m.AutoP2PTunnel
	}
	return 0
}

func (m *MplsTeAutotunP2PInfo) GetUpAutoP2PTunnels() uint32 {
	if m != nil {
		return m.UpAutoP2PTunnels
	}
	return 0
}

func (m *MplsTeAutotunP2PInfo) GetDownAutoP2PTunnels() uint32 {
	if m != nil {
		return m.DownAutoP2PTunnels
	}
	return 0
}

type MplsTeAutotunSvrInfo struct {
	P2MpInfo             *MplsTeAutotunP2MpInfo `protobuf:"bytes,1,opt,name=p2mp_info,json=p2mpInfo,proto3" json:"p2mp_info,omitempty"`
	P2PInfo              *MplsTeAutotunP2PInfo  `protobuf:"bytes,2,opt,name=p2p_info,json=p2pInfo,proto3" json:"p2p_info,omitempty"`
	ProtocolType         string                 `protobuf:"bytes,3,opt,name=protocol_type,json=protocolType,proto3" json:"protocol_type,omitempty"`
	ClientInstanceName   string                 `protobuf:"bytes,4,opt,name=client_instance_name,json=clientInstanceName,proto3" json:"client_instance_name,omitempty"`
	ClientId             uint32                 `protobuf:"varint,5,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *MplsTeAutotunSvrInfo) Reset()         { *m = MplsTeAutotunSvrInfo{} }
func (m *MplsTeAutotunSvrInfo) String() string { return proto.CompactTextString(m) }
func (*MplsTeAutotunSvrInfo) ProtoMessage()    {}
func (*MplsTeAutotunSvrInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_ebd3bd0af160239b, []int{10}
}

func (m *MplsTeAutotunSvrInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsTeAutotunSvrInfo.Unmarshal(m, b)
}
func (m *MplsTeAutotunSvrInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsTeAutotunSvrInfo.Marshal(b, m, deterministic)
}
func (m *MplsTeAutotunSvrInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsTeAutotunSvrInfo.Merge(m, src)
}
func (m *MplsTeAutotunSvrInfo) XXX_Size() int {
	return xxx_messageInfo_MplsTeAutotunSvrInfo.Size(m)
}
func (m *MplsTeAutotunSvrInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsTeAutotunSvrInfo.DiscardUnknown(m)
}

var xxx_messageInfo_MplsTeAutotunSvrInfo proto.InternalMessageInfo

func (m *MplsTeAutotunSvrInfo) GetP2MpInfo() *MplsTeAutotunP2MpInfo {
	if m != nil {
		return m.P2MpInfo
	}
	return nil
}

func (m *MplsTeAutotunSvrInfo) GetP2PInfo() *MplsTeAutotunP2PInfo {
	if m != nil {
		return m.P2PInfo
	}
	return nil
}

func (m *MplsTeAutotunSvrInfo) GetProtocolType() string {
	if m != nil {
		return m.ProtocolType
	}
	return ""
}

func (m *MplsTeAutotunSvrInfo) GetClientInstanceName() string {
	if m != nil {
		return m.ClientInstanceName
	}
	return ""
}

func (m *MplsTeAutotunSvrInfo) GetClientId() uint32 {
	if m != nil {
		return m.ClientId
	}
	return 0
}

type MplsTeAutotunSvrSummaryInfo struct {
	ClientsSummary       []*MplsTeAutotunSvrInfo `protobuf:"bytes,1,rep,name=clients_summary,json=clientsSummary,proto3" json:"clients_summary,omitempty"`
	TotalAutoP2MpTunnels *MplsTeAutotunP2MpInfo  `protobuf:"bytes,2,opt,name=total_auto_p2mp_tunnels,json=totalAutoP2mpTunnels,proto3" json:"total_auto_p2mp_tunnels,omitempty"`
	TotalAutoP2PTunnels  *MplsTeAutotunP2PInfo   `protobuf:"bytes,3,opt,name=total_auto_p2p_tunnels,json=totalAutoP2pTunnels,proto3" json:"total_auto_p2p_tunnels,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *MplsTeAutotunSvrSummaryInfo) Reset()         { *m = MplsTeAutotunSvrSummaryInfo{} }
func (m *MplsTeAutotunSvrSummaryInfo) String() string { return proto.CompactTextString(m) }
func (*MplsTeAutotunSvrSummaryInfo) ProtoMessage()    {}
func (*MplsTeAutotunSvrSummaryInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_ebd3bd0af160239b, []int{11}
}

func (m *MplsTeAutotunSvrSummaryInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsTeAutotunSvrSummaryInfo.Unmarshal(m, b)
}
func (m *MplsTeAutotunSvrSummaryInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsTeAutotunSvrSummaryInfo.Marshal(b, m, deterministic)
}
func (m *MplsTeAutotunSvrSummaryInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsTeAutotunSvrSummaryInfo.Merge(m, src)
}
func (m *MplsTeAutotunSvrSummaryInfo) XXX_Size() int {
	return xxx_messageInfo_MplsTeAutotunSvrSummaryInfo.Size(m)
}
func (m *MplsTeAutotunSvrSummaryInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsTeAutotunSvrSummaryInfo.DiscardUnknown(m)
}

var xxx_messageInfo_MplsTeAutotunSvrSummaryInfo proto.InternalMessageInfo

func (m *MplsTeAutotunSvrSummaryInfo) GetClientsSummary() []*MplsTeAutotunSvrInfo {
	if m != nil {
		return m.ClientsSummary
	}
	return nil
}

func (m *MplsTeAutotunSvrSummaryInfo) GetTotalAutoP2MpTunnels() *MplsTeAutotunP2MpInfo {
	if m != nil {
		return m.TotalAutoP2MpTunnels
	}
	return nil
}

func (m *MplsTeAutotunSvrSummaryInfo) GetTotalAutoP2PTunnels() *MplsTeAutotunP2PInfo {
	if m != nil {
		return m.TotalAutoP2PTunnels
	}
	return nil
}

type MplsTeTunnelsSummaryInfoBag struct {
	PcalcTieBreakerType                   string                              `protobuf:"bytes,50,opt,name=pcalc_tie_breaker_type,json=pcalcTieBreakerType,proto3" json:"pcalc_tie_breaker_type,omitempty"`
	PcalcTiebreaker                       uint32                              `protobuf:"varint,51,opt,name=pcalc_tiebreaker,json=pcalcTiebreaker,proto3" json:"pcalc_tiebreaker,omitempty"`
	TiebreakerQualifier                   string                              `protobuf:"bytes,52,opt,name=tiebreaker_qualifier,json=tiebreakerQualifier,proto3" json:"tiebreaker_qualifier,omitempty"`
	TeProcessStatus                       string                              `protobuf:"bytes,53,opt,name=te_process_status,json=teProcessStatus,proto3" json:"te_process_status,omitempty"`
	IsRsvpProcessEnabled                  bool                                `protobuf:"varint,54,opt,name=is_rsvp_process_enabled,json=isRsvpProcessEnabled,proto3" json:"is_rsvp_process_enabled,omitempty"`
	IsForwardingEnabled                   bool                                `protobuf:"varint,55,opt,name=is_forwarding_enabled,json=isForwardingEnabled,proto3" json:"is_forwarding_enabled,omitempty"`
	ActivatedHeads                        uint32                              `protobuf:"varint,56,opt,name=activated_heads,json=activatedHeads,proto3" json:"activated_heads,omitempty"`
	DeactivatedHeads                      uint32                              `protobuf:"varint,57,opt,name=deactivated_heads,json=deactivatedHeads,proto3" json:"deactivated_heads,omitempty"`
	RecoveredHeads                        uint32                              `protobuf:"varint,58,opt,name=recovered_heads,json=recoveredHeads,proto3" json:"recovered_heads,omitempty"`
	IsPeriodicReoptimizationOn            bool                                `protobuf:"varint,59,opt,name=is_periodic_reoptimization_on,json=isPeriodicReoptimizationOn,proto3" json:"is_periodic_reoptimization_on,omitempty"`
	ReoptimizationPeriod                  uint32                              `protobuf:"varint,60,opt,name=reoptimization_period,json=reoptimizationPeriod,proto3" json:"reoptimization_period,omitempty"`
	NextReoptimizationTimer               uint32                              `protobuf:"varint,61,opt,name=next_reoptimization_timer,json=nextReoptimizationTimer,proto3" json:"next_reoptimization_timer,omitempty"`
	AutoBandwidthTunnels                  uint32                              `protobuf:"varint,62,opt,name=auto_bandwidth_tunnels,json=autoBandwidthTunnels,proto3" json:"auto_bandwidth_tunnels,omitempty"`
	AutoBandwidthCollectionPeriod         uint32                              `protobuf:"varint,63,opt,name=auto_bandwidth_collection_period,json=autoBandwidthCollectionPeriod,proto3" json:"auto_bandwidth_collection_period,omitempty"`
	IsPromotionOn                         bool                                `protobuf:"varint,64,opt,name=is_promotion_on,json=isPromotionOn,proto3" json:"is_promotion_on,omitempty"`
	PromotionPeriod                       uint32                              `protobuf:"varint,65,opt,name=promotion_period,json=promotionPeriod,proto3" json:"promotion_period,omitempty"`
	NextPromotionTimer                    uint32                              `protobuf:"varint,66,opt,name=next_promotion_timer,json=nextPromotionTimer,proto3" json:"next_promotion_timer,omitempty"`
	TunnelCheckPeriod                     uint32                              `protobuf:"varint,67,opt,name=tunnel_check_period,json=tunnelCheckPeriod,proto3" json:"tunnel_check_period,omitempty"`
	NextCheckTime                         uint32                              `protobuf:"varint,68,opt,name=next_check_time,json=nextCheckTime,proto3" json:"next_check_time,omitempty"`
	TunnelVerifyPeriod                    uint32                              `protobuf:"varint,69,opt,name=tunnel_verify_period,json=tunnelVerifyPeriod,proto3" json:"tunnel_verify_period,omitempty"`
	NextVerifyTimer                       uint32                              `protobuf:"varint,70,opt,name=next_verify_timer,json=nextVerifyTimer,proto3" json:"next_verify_timer,omitempty"`
	FrrHeadTunnels                        uint32                              `protobuf:"varint,71,opt,name=frr_head_tunnels,json=frrHeadTunnels,proto3" json:"frr_head_tunnels,omitempty"`
	ProtectedHeadTunnels                  uint32                              `protobuf:"varint,72,opt,name=protected_head_tunnels,json=protectedHeadTunnels,proto3" json:"protected_head_tunnels,omitempty"`
	ReroutedHeadTunnels                   uint32                              `protobuf:"varint,73,opt,name=rerouted_head_tunnels,json=reroutedHeadTunnels,proto3" json:"rerouted_head_tunnels,omitempty"`
	FrrMidPointTunnels                    uint32                              `protobuf:"varint,74,opt,name=frr_mid_point_tunnels,json=frrMidPointTunnels,proto3" json:"frr_mid_point_tunnels,omitempty"`
	ProtectedMidPointTunnels              uint32                              `protobuf:"varint,75,opt,name=protected_mid_point_tunnels,json=protectedMidPointTunnels,proto3" json:"protected_mid_point_tunnels,omitempty"`
	ReroutedMidPointTunnels               uint32                              `protobuf:"varint,76,opt,name=rerouted_mid_point_tunnels,json=reroutedMidPointTunnels,proto3" json:"rerouted_mid_point_tunnels,omitempty"`
	LinkProtectedTunnels                  uint32                              `protobuf:"varint,77,opt,name=link_protected_tunnels,json=linkProtectedTunnels,proto3" json:"link_protected_tunnels,omitempty"`
	NodeProtectedTunnels                  uint32                              `protobuf:"varint,78,opt,name=node_protected_tunnels,json=nodeProtectedTunnels,proto3" json:"node_protected_tunnels,omitempty"`
	BwProtectedTunnels                    uint32                              `protobuf:"varint,79,opt,name=bw_protected_tunnels,json=bwProtectedTunnels,proto3" json:"bw_protected_tunnels,omitempty"`
	FrrP2PHeadTunnels                     uint32                              `protobuf:"varint,80,opt,name=frr_p2p_head_tunnels,json=frrP2pHeadTunnels,proto3" json:"frr_p2p_head_tunnels,omitempty"`
	ProtectedP2PHeadTunnels               uint32                              `protobuf:"varint,81,opt,name=protected_p2p_head_tunnels,json=protectedP2pHeadTunnels,proto3" json:"protected_p2p_head_tunnels,omitempty"`
	ReroutedP2PHeadTunnels                uint32                              `protobuf:"varint,82,opt,name=rerouted_p2p_head_tunnels,json=reroutedP2pHeadTunnels,proto3" json:"rerouted_p2p_head_tunnels,omitempty"`
	FrrP2PMidPointTunnels                 uint32                              `protobuf:"varint,83,opt,name=frr_p2p_mid_point_tunnels,json=frrP2pMidPointTunnels,proto3" json:"frr_p2p_mid_point_tunnels,omitempty"`
	ProtectedP2PMidPointTunnels           uint32                              `protobuf:"varint,84,opt,name=protected_p2p_mid_point_tunnels,json=protectedP2pMidPointTunnels,proto3" json:"protected_p2p_mid_point_tunnels,omitempty"`
	ReroutedP2PMidPointTunnels            uint32                              `protobuf:"varint,85,opt,name=rerouted_p2p_mid_point_tunnels,json=reroutedP2pMidPointTunnels,proto3" json:"rerouted_p2p_mid_point_tunnels,omitempty"`
	LinkProtectedP2PTunnels               uint32                              `protobuf:"varint,86,opt,name=link_protected_p2p_tunnels,json=linkProtectedP2pTunnels,proto3" json:"link_protected_p2p_tunnels,omitempty"`
	NodeProtectedP2PTunnels               uint32                              `protobuf:"varint,87,opt,name=node_protected_p2p_tunnels,json=nodeProtectedP2pTunnels,proto3" json:"node_protected_p2p_tunnels,omitempty"`
	BwProtectedP2PTunnels                 uint32                              `protobuf:"varint,88,opt,name=bw_protected_p2p_tunnels,json=bwProtectedP2pTunnels,proto3" json:"bw_protected_p2p_tunnels,omitempty"`
	BackupTunnels                         uint32                              `protobuf:"varint,89,opt,name=backup_tunnels,json=backupTunnels,proto3" json:"backup_tunnels,omitempty"`
	BackupsAssigned                       uint32                              `protobuf:"varint,90,opt,name=backups_assigned,json=backupsAssigned,proto3" json:"backups_assigned,omitempty"`
	FrrProtectedInterfaces                uint32                              `protobuf:"varint,91,opt,name=frr_protected_interfaces,json=frrProtectedInterfaces,proto3" json:"frr_protected_interfaces,omitempty"`
	ReroutedInterfaces                    uint32                              `protobuf:"varint,92,opt,name=rerouted_interfaces,json=reroutedInterfaces,proto3" json:"rerouted_interfaces,omitempty"`
	P2PHeadTunnels                        uint32                              `protobuf:"varint,93,opt,name=p2p_head_tunnels,json=p2pHeadTunnels,proto3" json:"p2p_head_tunnels,omitempty"`
	UpP2PHeadTunnels                      uint32                              `protobuf:"varint,94,opt,name=up_p2p_head_tunnels,json=upP2pHeadTunnels,proto3" json:"up_p2p_head_tunnels,omitempty"`
	DynamicUpP2PHeadTunnels               uint32                              `protobuf:"varint,95,opt,name=dynamic_up_p2p_head_tunnels,json=dynamicUpP2pHeadTunnels,proto3" json:"dynamic_up_p2p_head_tunnels,omitempty"`
	FrrConfigP2PHeadTunnels               uint32                              `protobuf:"varint,96,opt,name=frr_config_p2p_head_tunnels,json=frrConfigP2pHeadTunnels,proto3" json:"frr_config_p2p_head_tunnels,omitempty"`
	P2PHeadDestinations                   uint32                              `protobuf:"varint,97,opt,name=p2p_head_destinations,json=p2pHeadDestinations,proto3" json:"p2p_head_destinations,omitempty"`
	P2PHeadDestinationsUp                 uint32                              `protobuf:"varint,98,opt,name=p2p_head_destinations_up,json=p2pHeadDestinationsUp,proto3" json:"p2p_head_destinations_up,omitempty"`
	BwProtectedP2PS2Ls                    uint32                              `protobuf:"varint,99,opt,name=bw_protected_p2p_s2_ls,json=bwProtectedP2pS2Ls,proto3" json:"bw_protected_p2p_s2_ls,omitempty"`
	LinkProtectedP2PS2Ls                  uint32                              `protobuf:"varint,100,opt,name=link_protected_p2p_s2_ls,json=linkProtectedP2pS2Ls,proto3" json:"link_protected_p2p_s2_ls,omitempty"`
	UpP2PHeadS2Ls                         uint32                              `protobuf:"varint,101,opt,name=up_p2p_head_s2_ls,json=upP2pHeadS2Ls,proto3" json:"up_p2p_head_s2_ls,omitempty"`
	ProceedingP2PHeadS2Ls                 uint32                              `protobuf:"varint,102,opt,name=proceeding_p2p_head_s2_ls,json=proceedingP2pHeadS2Ls,proto3" json:"proceeding_p2p_head_s2_ls,omitempty"`
	RecoveringP2PHeadS2Ls                 uint32                              `protobuf:"varint,103,opt,name=recovering_p2p_head_s2_ls,json=recoveringP2pHeadS2Ls,proto3" json:"recovering_p2p_head_s2_ls,omitempty"`
	FrrP2PHeadS2Ls                        uint32                              `protobuf:"varint,104,opt,name=frr_p2p_head_s2_ls,json=frrP2pHeadS2Ls,proto3" json:"frr_p2p_head_s2_ls,omitempty"`
	ProtectedP2PHeadS2Ls                  uint32                              `protobuf:"varint,105,opt,name=protected_p2p_head_s2_ls,json=protectedP2pHeadS2Ls,proto3" json:"protected_p2p_head_s2_ls,omitempty"`
	ReroutedP2PHeadS2Ls                   uint32                              `protobuf:"varint,106,opt,name=rerouted_p2p_head_s2_ls,json=reroutedP2pHeadS2Ls,proto3" json:"rerouted_p2p_head_s2_ls,omitempty"`
	P2PMidPointS2Ls                       uint32                              `protobuf:"varint,107,opt,name=p2p_mid_point_s2_ls,json=p2pMidPointS2Ls,proto3" json:"p2p_mid_point_s2_ls,omitempty"`
	UpP2PMidPointS2Ls                     uint32                              `protobuf:"varint,108,opt,name=up_p2p_mid_point_s2_ls,json=upP2pMidPointS2Ls,proto3" json:"up_p2p_mid_point_s2_ls,omitempty"`
	ProceedingP2PMidPointS2Ls             uint32                              `protobuf:"varint,109,opt,name=proceeding_p2p_mid_point_s2_ls,json=proceedingP2pMidPointS2Ls,proto3" json:"proceeding_p2p_mid_point_s2_ls,omitempty"`
	FrrP2PMidPointS2Ls                    uint32                              `protobuf:"varint,110,opt,name=frr_p2p_mid_point_s2_ls,json=frrP2pMidPointS2Ls,proto3" json:"frr_p2p_mid_point_s2_ls,omitempty"`
	ProtectedP2PMidPointS2Ls              uint32                              `protobuf:"varint,111,opt,name=protected_p2p_mid_point_s2_ls,json=protectedP2pMidPointS2Ls,proto3" json:"protected_p2p_mid_point_s2_ls,omitempty"`
	ReroutedP2PMidPointS2Ls               uint32                              `protobuf:"varint,112,opt,name=rerouted_p2p_mid_point_s2_ls,json=reroutedP2pMidPointS2Ls,proto3" json:"rerouted_p2p_mid_point_s2_ls,omitempty"`
	P2PTailS2Ls                           uint32                              `protobuf:"varint,113,opt,name=p2p_tail_s2_ls,json=p2pTailS2Ls,proto3" json:"p2p_tail_s2_ls,omitempty"`
	UpP2PTailS2Ls                         uint32                              `protobuf:"varint,114,opt,name=up_p2p_tail_s2_ls,json=upP2pTailS2Ls,proto3" json:"up_p2p_tail_s2_ls,omitempty"`
	P2PTailTunnels                        uint32                              `protobuf:"varint,115,opt,name=p2p_tail_tunnels,json=p2pTailTunnels,proto3" json:"p2p_tail_tunnels,omitempty"`
	PathProtectConfiguredTunnels          uint32                              `protobuf:"varint,116,opt,name=path_protect_configured_tunnels,json=pathProtectConfiguredTunnels,proto3" json:"path_protect_configured_tunnels,omitempty"`
	PathProtectConfiguredTunnelsUp        uint32                              `protobuf:"varint,117,opt,name=path_protect_configured_tunnels_up,json=pathProtectConfiguredTunnelsUp,proto3" json:"path_protect_configured_tunnels_up,omitempty"`
	PathProtectConfiguredTunnelsStandbyUp uint32                              `protobuf:"varint,118,opt,name=path_protect_configured_tunnels_standby_up,json=pathProtectConfiguredTunnelsStandbyUp,proto3" json:"path_protect_configured_tunnels_standby_up,omitempty"`
	LinkDiversePaths                      uint32                              `protobuf:"varint,119,opt,name=link_diverse_paths,json=linkDiversePaths,proto3" json:"link_diverse_paths,omitempty"`
	NodeDiversePaths                      uint32                              `protobuf:"varint,120,opt,name=node_diverse_paths,json=nodeDiversePaths,proto3" json:"node_diverse_paths,omitempty"`
	LinkAndNodeDiversePaths               uint32                              `protobuf:"varint,121,opt,name=link_and_node_diverse_paths,json=linkAndNodeDiversePaths,proto3" json:"link_and_node_diverse_paths,omitempty"`
	UserDefinedPaths                      uint32                              `protobuf:"varint,122,opt,name=user_defined_paths,json=userDefinedPaths,proto3" json:"user_defined_paths,omitempty"`
	P2MpHeadTunnels                       uint32                              `protobuf:"varint,123,opt,name=p2mp_head_tunnels,json=p2mpHeadTunnels,proto3" json:"p2mp_head_tunnels,omitempty"`
	UpP2MpHeadTunnels                     uint32                              `protobuf:"varint,124,opt,name=up_p2mp_head_tunnels,json=upP2mpHeadTunnels,proto3" json:"up_p2mp_head_tunnels,omitempty"`
	FrrConfigP2MpHeadTunnels              uint32                              `protobuf:"varint,125,opt,name=frr_config_p2mp_head_tunnels,json=frrConfigP2mpHeadTunnels,proto3" json:"frr_config_p2mp_head_tunnels,omitempty"`
	P2MpHeadDestinations                  uint32                              `protobuf:"varint,126,opt,name=p2mp_head_destinations,json=p2mpHeadDestinations,proto3" json:"p2mp_head_destinations,omitempty"`
	UpP2MpHeadDestinations                uint32                              `protobuf:"varint,127,opt,name=up_p2mp_head_destinations,json=upP2mpHeadDestinations,proto3" json:"up_p2mp_head_destinations,omitempty"`
	BwProtectedP2MpS2Ls                   uint32                              `protobuf:"varint,128,opt,name=bw_protected_p2mp_s2_ls,json=bwProtectedP2mpS2Ls,proto3" json:"bw_protected_p2mp_s2_ls,omitempty"`
	LinkProtectedP2MpS2Ls                 uint32                              `protobuf:"varint,129,opt,name=link_protected_p2mp_s2_ls,json=linkProtectedP2mpS2Ls,proto3" json:"link_protected_p2mp_s2_ls,omitempty"`
	UpP2MpHeadS2Ls                        uint32                              `protobuf:"varint,130,opt,name=up_p2mp_head_s2_ls,json=upP2mpHeadS2Ls,proto3" json:"up_p2mp_head_s2_ls,omitempty"`
	ProceedingP2MpHeadS2Ls                uint32                              `protobuf:"varint,131,opt,name=proceeding_p2mp_head_s2_ls,json=proceedingP2mpHeadS2Ls,proto3" json:"proceeding_p2mp_head_s2_ls,omitempty"`
	FrrP2MpHeadS2Ls                       uint32                              `protobuf:"varint,132,opt,name=frr_p2mp_head_s2_ls,json=frrP2mpHeadS2Ls,proto3" json:"frr_p2mp_head_s2_ls,omitempty"`
	ProtectedP2MpHeadS2Ls                 uint32                              `protobuf:"varint,133,opt,name=protected_p2mp_head_s2_ls,json=protectedP2mpHeadS2Ls,proto3" json:"protected_p2mp_head_s2_ls,omitempty"`
	ReroutedP2MpHeadS2Ls                  uint32                              `protobuf:"varint,134,opt,name=rerouted_p2mp_head_s2_ls,json=reroutedP2mpHeadS2Ls,proto3" json:"rerouted_p2mp_head_s2_ls,omitempty"`
	P2MpMidPointS2Ls                      uint32                              `protobuf:"varint,135,opt,name=p2mp_mid_point_s2_ls,json=p2mpMidPointS2Ls,proto3" json:"p2mp_mid_point_s2_ls,omitempty"`
	UpP2MpMidPointS2Ls                    uint32                              `protobuf:"varint,136,opt,name=up_p2mp_mid_point_s2_ls,json=upP2mpMidPointS2Ls,proto3" json:"up_p2mp_mid_point_s2_ls,omitempty"`
	ProceedingP2MpMidPointS2Ls            uint32                              `protobuf:"varint,137,opt,name=proceeding_p2mp_mid_point_s2_ls,json=proceedingP2mpMidPointS2Ls,proto3" json:"proceeding_p2mp_mid_point_s2_ls,omitempty"`
	FrrP2MpMidPointS2Ls                   uint32                              `protobuf:"varint,138,opt,name=frr_p2mp_mid_point_s2_ls,json=frrP2mpMidPointS2Ls,proto3" json:"frr_p2mp_mid_point_s2_ls,omitempty"`
	ProtectedP2MpMidPointS2Ls             uint32                              `protobuf:"varint,139,opt,name=protected_p2mp_mid_point_s2_ls,json=protectedP2mpMidPointS2Ls,proto3" json:"protected_p2mp_mid_point_s2_ls,omitempty"`
	ReroutedP2MpMidPointS2Ls              uint32                              `protobuf:"varint,140,opt,name=rerouted_p2mp_mid_point_s2_ls,json=reroutedP2mpMidPointS2Ls,proto3" json:"rerouted_p2mp_mid_point_s2_ls,omitempty"`
	P2MpTailS2Ls                          uint32                              `protobuf:"varint,141,opt,name=p2mp_tail_s2_ls,json=p2mpTailS2Ls,proto3" json:"p2mp_tail_s2_ls,omitempty"`
	UpP2MpTailS2Ls                        uint32                              `protobuf:"varint,142,opt,name=up_p2mp_tail_s2_ls,json=upP2mpTailS2Ls,proto3" json:"up_p2mp_tail_s2_ls,omitempty"`
	BidirHeadTunnels                      uint32                              `protobuf:"varint,143,opt,name=bidir_head_tunnels,json=bidirHeadTunnels,proto3" json:"bidir_head_tunnels,omitempty"`
	BidirHeadTunnelsUp                    uint32                              `protobuf:"varint,144,opt,name=bidir_head_tunnels_up,json=bidirHeadTunnelsUp,proto3" json:"bidir_head_tunnels_up,omitempty"`
	BidirHeadTunnelsAssociated            uint32                              `protobuf:"varint,145,opt,name=bidir_head_tunnels_associated,json=bidirHeadTunnelsAssociated,proto3" json:"bidir_head_tunnels_associated,omitempty"`
	BidirHeadTunnelsCorouted              uint32                              `protobuf:"varint,146,opt,name=bidir_head_tunnels_corouted,json=bidirHeadTunnelsCorouted,proto3" json:"bidir_head_tunnels_corouted,omitempty"`
	BidirHeadLsPsUp                       uint32                              `protobuf:"varint,147,opt,name=bidir_head_ls_ps_up,json=bidirHeadLsPsUp,proto3" json:"bidir_head_ls_ps_up,omitempty"`
	BidirHeadLsPsProceeding               uint32                              `protobuf:"varint,148,opt,name=bidir_head_ls_ps_proceeding,json=bidirHeadLsPsProceeding,proto3" json:"bidir_head_ls_ps_proceeding,omitempty"`
	BidirHeadLsPsAssociated               uint32                              `protobuf:"varint,149,opt,name=bidir_head_ls_ps_associated,json=bidirHeadLsPsAssociated,proto3" json:"bidir_head_ls_ps_associated,omitempty"`
	BidirHeadLsPsStandby                  uint32                              `protobuf:"varint,150,opt,name=bidir_head_ls_ps_standby,json=bidirHeadLsPsStandby,proto3" json:"bidir_head_ls_ps_standby,omitempty"`
	BidirMidTunnels                       uint32                              `protobuf:"varint,151,opt,name=bidir_mid_tunnels,json=bidirMidTunnels,proto3" json:"bidir_mid_tunnels,omitempty"`
	BidirMidTunnelsUp                     uint32                              `protobuf:"varint,152,opt,name=bidir_mid_tunnels_up,json=bidirMidTunnelsUp,proto3" json:"bidir_mid_tunnels_up,omitempty"`
	BidirMidLsPsProceeding                uint32                              `protobuf:"varint,153,opt,name=bidir_mid_ls_ps_proceeding,json=bidirMidLsPsProceeding,proto3" json:"bidir_mid_ls_ps_proceeding,omitempty"`
	BidirMidLsPsAssociated                uint32                              `protobuf:"varint,154,opt,name=bidir_mid_ls_ps_associated,json=bidirMidLsPsAssociated,proto3" json:"bidir_mid_ls_ps_associated,omitempty"`
	BidirMidLsPsStandby                   uint32                              `protobuf:"varint,155,opt,name=bidir_mid_ls_ps_standby,json=bidirMidLsPsStandby,proto3" json:"bidir_mid_ls_ps_standby,omitempty"`
	BidirTailLsPs                         uint32                              `protobuf:"varint,156,opt,name=bidir_tail_ls_ps,json=bidirTailLsPs,proto3" json:"bidir_tail_ls_ps,omitempty"`
	BidirTailLsPsUp                       uint32                              `protobuf:"varint,157,opt,name=bidir_tail_ls_ps_up,json=bidirTailLsPsUp,proto3" json:"bidir_tail_ls_ps_up,omitempty"`
	BidirTailLsPsProceeding               uint32                              `protobuf:"varint,158,opt,name=bidir_tail_ls_ps_proceeding,json=bidirTailLsPsProceeding,proto3" json:"bidir_tail_ls_ps_proceeding,omitempty"`
	BidirTailLsPsAssociated               uint32                              `protobuf:"varint,159,opt,name=bidir_tail_ls_ps_associated,json=bidirTailLsPsAssociated,proto3" json:"bidir_tail_ls_ps_associated,omitempty"`
	BidirTailLsPsStandby                  uint32                              `protobuf:"varint,160,opt,name=bidir_tail_ls_ps_standby,json=bidirTailLsPsStandby,proto3" json:"bidir_tail_ls_ps_standby,omitempty"`
	BidirTailLsPsCorouted                 uint32                              `protobuf:"varint,161,opt,name=bidir_tail_ls_ps_corouted,json=bidirTailLsPsCorouted,proto3" json:"bidir_tail_ls_ps_corouted,omitempty"`
	AutobackupSummary                     *MplsTeAutotunBackupSummaryInfo     `protobuf:"bytes,162,opt,name=autobackup_summary,json=autobackupSummary,proto3" json:"autobackup_summary,omitempty"`
	AutoMeshSummary                       *MplsTeAutotunMeshSummaryInfo       `protobuf:"bytes,163,opt,name=auto_mesh_summary,json=autoMeshSummary,proto3" json:"auto_mesh_summary,omitempty"`
	AutoMeshOneHopSummary                 *MplsTeAutotunMeshOnehopSummaryInfo `protobuf:"bytes,164,opt,name=auto_mesh_one_hop_summary,json=autoMeshOneHopSummary,proto3" json:"auto_mesh_one_hop_summary,omitempty"`
	GmplsUniSummary                       *MplsTeGmplsUniSummaryInfo          `protobuf:"bytes,165,opt,name=gmpls_uni_summary,json=gmplsUniSummary,proto3" json:"gmpls_uni_summary,omitempty"`
	GmplsNniSummary                       *MplsTeGmplsNniSummaryInfo          `protobuf:"bytes,166,opt,name=gmpls_nni_summary,json=gmplsNniSummary,proto3" json:"gmpls_nni_summary,omitempty"`
	CurrentTunnelConvergenceSummary       *TeConvTblSummaryBag                `protobuf:"bytes,167,opt,name=current_tunnel_convergence_summary,json=currentTunnelConvergenceSummary,proto3" json:"current_tunnel_convergence_summary,omitempty"`
	LastTunnelConvergenceSummary          *TeConvTblSummaryBag                `protobuf:"bytes,168,opt,name=last_tunnel_convergence_summary,json=lastTunnelConvergenceSummary,proto3" json:"last_tunnel_convergence_summary,omitempty"`
	AutoTunServerSummary                  *MplsTeAutotunSvrSummaryInfo        `protobuf:"bytes,169,opt,name=auto_tun_server_summary,json=autoTunServerSummary,proto3" json:"auto_tun_server_summary,omitempty"`
	XXX_NoUnkeyedLiteral                  struct{}                            `json:"-"`
	XXX_unrecognized                      []byte                              `json:"-"`
	XXX_sizecache                         int32                               `json:"-"`
}

func (m *MplsTeTunnelsSummaryInfoBag) Reset()         { *m = MplsTeTunnelsSummaryInfoBag{} }
func (m *MplsTeTunnelsSummaryInfoBag) String() string { return proto.CompactTextString(m) }
func (*MplsTeTunnelsSummaryInfoBag) ProtoMessage()    {}
func (*MplsTeTunnelsSummaryInfoBag) Descriptor() ([]byte, []int) {
	return fileDescriptor_ebd3bd0af160239b, []int{12}
}

func (m *MplsTeTunnelsSummaryInfoBag) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsTeTunnelsSummaryInfoBag.Unmarshal(m, b)
}
func (m *MplsTeTunnelsSummaryInfoBag) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsTeTunnelsSummaryInfoBag.Marshal(b, m, deterministic)
}
func (m *MplsTeTunnelsSummaryInfoBag) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsTeTunnelsSummaryInfoBag.Merge(m, src)
}
func (m *MplsTeTunnelsSummaryInfoBag) XXX_Size() int {
	return xxx_messageInfo_MplsTeTunnelsSummaryInfoBag.Size(m)
}
func (m *MplsTeTunnelsSummaryInfoBag) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsTeTunnelsSummaryInfoBag.DiscardUnknown(m)
}

var xxx_messageInfo_MplsTeTunnelsSummaryInfoBag proto.InternalMessageInfo

func (m *MplsTeTunnelsSummaryInfoBag) GetPcalcTieBreakerType() string {
	if m != nil {
		return m.PcalcTieBreakerType
	}
	return ""
}

func (m *MplsTeTunnelsSummaryInfoBag) GetPcalcTiebreaker() uint32 {
	if m != nil {
		return m.PcalcTiebreaker
	}
	return 0
}

func (m *MplsTeTunnelsSummaryInfoBag) GetTiebreakerQualifier() string {
	if m != nil {
		return m.TiebreakerQualifier
	}
	return ""
}

func (m *MplsTeTunnelsSummaryInfoBag) GetTeProcessStatus() string {
	if m != nil {
		return m.TeProcessStatus
	}
	return ""
}

func (m *MplsTeTunnelsSummaryInfoBag) GetIsRsvpProcessEnabled() bool {
	if m != nil {
		return m.IsRsvpProcessEnabled
	}
	return false
}

func (m *MplsTeTunnelsSummaryInfoBag) GetIsForwardingEnabled() bool {
	if m != nil {
		return m.IsForwardingEnabled
	}
	return false
}

func (m *MplsTeTunnelsSummaryInfoBag) GetActivatedHeads() uint32 {
	if m != nil {
		return m.ActivatedHeads
	}
	return 0
}

func (m *MplsTeTunnelsSummaryInfoBag) GetDeactivatedHeads() uint32 {
	if m != nil {
		return m.DeactivatedHeads
	}
	return 0
}

func (m *MplsTeTunnelsSummaryInfoBag) GetRecoveredHeads() uint32 {
	if m != nil {
		return m.RecoveredHeads
	}
	return 0
}

func (m *MplsTeTunnelsSummaryInfoBag) GetIsPeriodicReoptimizationOn() bool {
	if m != nil {
		return m.IsPeriodicReoptimizationOn
	}
	return false
}

func (m *MplsTeTunnelsSummaryInfoBag) GetReoptimizationPeriod() uint32 {
	if m != nil {
		return m.ReoptimizationPeriod
	}
	return 0
}

func (m *MplsTeTunnelsSummaryInfoBag) GetNextReoptimizationTimer() uint32 {
	if m != nil {
		return m.NextReoptimizationTimer
	}
	return 0
}

func (m *MplsTeTunnelsSummaryInfoBag) GetAutoBandwidthTunnels() uint32 {
	if m != nil {
		return m.AutoBandwidthTunnels
	}
	return 0
}

func (m *MplsTeTunnelsSummaryInfoBag) GetAutoBandwidthCollectionPeriod() uint32 {
	if m != nil {
		return m.AutoBandwidthCollectionPeriod
	}
	return 0
}

func (m *MplsTeTunnelsSummaryInfoBag) GetIsPromotionOn() bool {
	if m != nil {
		return m.IsPromotionOn
	}
	return false
}

func (m *MplsTeTunnelsSummaryInfoBag) GetPromotionPeriod() uint32 {
	if m != nil {
		return m.PromotionPeriod
	}
	return 0
}

func (m *MplsTeTunnelsSummaryInfoBag) GetNextPromotionTimer() uint32 {
	if m != nil {
		return m.NextPromotionTimer
	}
	return 0
}

func (m *MplsTeTunnelsSummaryInfoBag) GetTunnelCheckPeriod() uint32 {
	if m != nil {
		return m.TunnelCheckPeriod
	}
	return 0
}

func (m *MplsTeTunnelsSummaryInfoBag) GetNextCheckTime() uint32 {
	if m != nil {
		return m.NextCheckTime
	}
	return 0
}

func (m *MplsTeTunnelsSummaryInfoBag) GetTunnelVerifyPeriod() uint32 {
	if m != nil {
		return m.TunnelVerifyPeriod
	}
	return 0
}

func (m *MplsTeTunnelsSummaryInfoBag) GetNextVerifyTimer() uint32 {
	if m != nil {
		return m.NextVerifyTimer
	}
	return 0
}

func (m *MplsTeTunnelsSummaryInfoBag) GetFrrHeadTunnels() uint32 {
	if m != nil {
		return m.FrrHeadTunnels
	}
	return 0
}

func (m *MplsTeTunnelsSummaryInfoBag) GetProtectedHeadTunnels() uint32 {
	if m != nil {
		return m.ProtectedHeadTunnels
	}
	return 0
}

func (m *MplsTeTunnelsSummaryInfoBag) GetReroutedHeadTunnels() uint32 {
	if m != nil {
		return m.ReroutedHeadTunnels
	}
	return 0
}

func (m *MplsTeTunnelsSummaryInfoBag) GetFrrMidPointTunnels() uint32 {
	if m != nil {
		return m.FrrMidPointTunnels
	}
	return 0
}

func (m *MplsTeTunnelsSummaryInfoBag) GetProtectedMidPointTunnels() uint32 {
	if m != nil {
		return m.ProtectedMidPointTunnels
	}
	return 0
}

func (m *MplsTeTunnelsSummaryInfoBag) GetReroutedMidPointTunnels() uint32 {
	if m != nil {
		return m.ReroutedMidPointTunnels
	}
	return 0
}

func (m *MplsTeTunnelsSummaryInfoBag) GetLinkProtectedTunnels() uint32 {
	if m != nil {
		return m.LinkProtectedTunnels
	}
	return 0
}

func (m *MplsTeTunnelsSummaryInfoBag) GetNodeProtectedTunnels() uint32 {
	if m != nil {
		return m.NodeProtectedTunnels
	}
	return 0
}

func (m *MplsTeTunnelsSummaryInfoBag) GetBwProtectedTunnels() uint32 {
	if m != nil {
		return m.BwProtectedTunnels
	}
	return 0
}

func (m *MplsTeTunnelsSummaryInfoBag) GetFrrP2PHeadTunnels() uint32 {
	if m != nil {
		return m.FrrP2PHeadTunnels
	}
	return 0
}

func (m *MplsTeTunnelsSummaryInfoBag) GetProtectedP2PHeadTunnels() uint32 {
	if m != nil {
		return m.ProtectedP2PHeadTunnels
	}
	return 0
}

func (m *MplsTeTunnelsSummaryInfoBag) GetReroutedP2PHeadTunnels() uint32 {
	if m != nil {
		return m.ReroutedP2PHeadTunnels
	}
	return 0
}

func (m *MplsTeTunnelsSummaryInfoBag) GetFrrP2PMidPointTunnels() uint32 {
	if m != nil {
		return m.FrrP2PMidPointTunnels
	}
	return 0
}

func (m *MplsTeTunnelsSummaryInfoBag) GetProtectedP2PMidPointTunnels() uint32 {
	if m != nil {
		return m.ProtectedP2PMidPointTunnels
	}
	return 0
}

func (m *MplsTeTunnelsSummaryInfoBag) GetReroutedP2PMidPointTunnels() uint32 {
	if m != nil {
		return m.ReroutedP2PMidPointTunnels
	}
	return 0
}

func (m *MplsTeTunnelsSummaryInfoBag) GetLinkProtectedP2PTunnels() uint32 {
	if m != nil {
		return m.LinkProtectedP2PTunnels
	}
	return 0
}

func (m *MplsTeTunnelsSummaryInfoBag) GetNodeProtectedP2PTunnels() uint32 {
	if m != nil {
		return m.NodeProtectedP2PTunnels
	}
	return 0
}

func (m *MplsTeTunnelsSummaryInfoBag) GetBwProtectedP2PTunnels() uint32 {
	if m != nil {
		return m.BwProtectedP2PTunnels
	}
	return 0
}

func (m *MplsTeTunnelsSummaryInfoBag) GetBackupTunnels() uint32 {
	if m != nil {
		return m.BackupTunnels
	}
	return 0
}

func (m *MplsTeTunnelsSummaryInfoBag) GetBackupsAssigned() uint32 {
	if m != nil {
		return m.BackupsAssigned
	}
	return 0
}

func (m *MplsTeTunnelsSummaryInfoBag) GetFrrProtectedInterfaces() uint32 {
	if m != nil {
		return m.FrrProtectedInterfaces
	}
	return 0
}

func (m *MplsTeTunnelsSummaryInfoBag) GetReroutedInterfaces() uint32 {
	if m != nil {
		return m.ReroutedInterfaces
	}
	return 0
}

func (m *MplsTeTunnelsSummaryInfoBag) GetP2PHeadTunnels() uint32 {
	if m != nil {
		return m.P2PHeadTunnels
	}
	return 0
}

func (m *MplsTeTunnelsSummaryInfoBag) GetUpP2PHeadTunnels() uint32 {
	if m != nil {
		return m.UpP2PHeadTunnels
	}
	return 0
}

func (m *MplsTeTunnelsSummaryInfoBag) GetDynamicUpP2PHeadTunnels() uint32 {
	if m != nil {
		return m.DynamicUpP2PHeadTunnels
	}
	return 0
}

func (m *MplsTeTunnelsSummaryInfoBag) GetFrrConfigP2PHeadTunnels() uint32 {
	if m != nil {
		return m.FrrConfigP2PHeadTunnels
	}
	return 0
}

func (m *MplsTeTunnelsSummaryInfoBag) GetP2PHeadDestinations() uint32 {
	if m != nil {
		return m.P2PHeadDestinations
	}
	return 0
}

func (m *MplsTeTunnelsSummaryInfoBag) GetP2PHeadDestinationsUp() uint32 {
	if m != nil {
		return m.P2PHeadDestinationsUp
	}
	return 0
}

func (m *MplsTeTunnelsSummaryInfoBag) GetBwProtectedP2PS2Ls() uint32 {
	if m != nil {
		return m.BwProtectedP2PS2Ls
	}
	return 0
}

func (m *MplsTeTunnelsSummaryInfoBag) GetLinkProtectedP2PS2Ls() uint32 {
	if m != nil {
		return m.LinkProtectedP2PS2Ls
	}
	return 0
}

func (m *MplsTeTunnelsSummaryInfoBag) GetUpP2PHeadS2Ls() uint32 {
	if m != nil {
		return m.UpP2PHeadS2Ls
	}
	return 0
}

func (m *MplsTeTunnelsSummaryInfoBag) GetProceedingP2PHeadS2Ls() uint32 {
	if m != nil {
		return m.ProceedingP2PHeadS2Ls
	}
	return 0
}

func (m *MplsTeTunnelsSummaryInfoBag) GetRecoveringP2PHeadS2Ls() uint32 {
	if m != nil {
		return m.RecoveringP2PHeadS2Ls
	}
	return 0
}

func (m *MplsTeTunnelsSummaryInfoBag) GetFrrP2PHeadS2Ls() uint32 {
	if m != nil {
		return m.FrrP2PHeadS2Ls
	}
	return 0
}

func (m *MplsTeTunnelsSummaryInfoBag) GetProtectedP2PHeadS2Ls() uint32 {
	if m != nil {
		return m.ProtectedP2PHeadS2Ls
	}
	return 0
}

func (m *MplsTeTunnelsSummaryInfoBag) GetReroutedP2PHeadS2Ls() uint32 {
	if m != nil {
		return m.ReroutedP2PHeadS2Ls
	}
	return 0
}

func (m *MplsTeTunnelsSummaryInfoBag) GetP2PMidPointS2Ls() uint32 {
	if m != nil {
		return m.P2PMidPointS2Ls
	}
	return 0
}

func (m *MplsTeTunnelsSummaryInfoBag) GetUpP2PMidPointS2Ls() uint32 {
	if m != nil {
		return m.UpP2PMidPointS2Ls
	}
	return 0
}

func (m *MplsTeTunnelsSummaryInfoBag) GetProceedingP2PMidPointS2Ls() uint32 {
	if m != nil {
		return m.ProceedingP2PMidPointS2Ls
	}
	return 0
}

func (m *MplsTeTunnelsSummaryInfoBag) GetFrrP2PMidPointS2Ls() uint32 {
	if m != nil {
		return m.FrrP2PMidPointS2Ls
	}
	return 0
}

func (m *MplsTeTunnelsSummaryInfoBag) GetProtectedP2PMidPointS2Ls() uint32 {
	if m != nil {
		return m.ProtectedP2PMidPointS2Ls
	}
	return 0
}

func (m *MplsTeTunnelsSummaryInfoBag) GetReroutedP2PMidPointS2Ls() uint32 {
	if m != nil {
		return m.ReroutedP2PMidPointS2Ls
	}
	return 0
}

func (m *MplsTeTunnelsSummaryInfoBag) GetP2PTailS2Ls() uint32 {
	if m != nil {
		return m.P2PTailS2Ls
	}
	return 0
}

func (m *MplsTeTunnelsSummaryInfoBag) GetUpP2PTailS2Ls() uint32 {
	if m != nil {
		return m.UpP2PTailS2Ls
	}
	return 0
}

func (m *MplsTeTunnelsSummaryInfoBag) GetP2PTailTunnels() uint32 {
	if m != nil {
		return m.P2PTailTunnels
	}
	return 0
}

func (m *MplsTeTunnelsSummaryInfoBag) GetPathProtectConfiguredTunnels() uint32 {
	if m != nil {
		return m.PathProtectConfiguredTunnels
	}
	return 0
}

func (m *MplsTeTunnelsSummaryInfoBag) GetPathProtectConfiguredTunnelsUp() uint32 {
	if m != nil {
		return m.PathProtectConfiguredTunnelsUp
	}
	return 0
}

func (m *MplsTeTunnelsSummaryInfoBag) GetPathProtectConfiguredTunnelsStandbyUp() uint32 {
	if m != nil {
		return m.PathProtectConfiguredTunnelsStandbyUp
	}
	return 0
}

func (m *MplsTeTunnelsSummaryInfoBag) GetLinkDiversePaths() uint32 {
	if m != nil {
		return m.LinkDiversePaths
	}
	return 0
}

func (m *MplsTeTunnelsSummaryInfoBag) GetNodeDiversePaths() uint32 {
	if m != nil {
		return m.NodeDiversePaths
	}
	return 0
}

func (m *MplsTeTunnelsSummaryInfoBag) GetLinkAndNodeDiversePaths() uint32 {
	if m != nil {
		return m.LinkAndNodeDiversePaths
	}
	return 0
}

func (m *MplsTeTunnelsSummaryInfoBag) GetUserDefinedPaths() uint32 {
	if m != nil {
		return m.UserDefinedPaths
	}
	return 0
}

func (m *MplsTeTunnelsSummaryInfoBag) GetP2MpHeadTunnels() uint32 {
	if m != nil {
		return m.P2MpHeadTunnels
	}
	return 0
}

func (m *MplsTeTunnelsSummaryInfoBag) GetUpP2MpHeadTunnels() uint32 {
	if m != nil {
		return m.UpP2MpHeadTunnels
	}
	return 0
}

func (m *MplsTeTunnelsSummaryInfoBag) GetFrrConfigP2MpHeadTunnels() uint32 {
	if m != nil {
		return m.FrrConfigP2MpHeadTunnels
	}
	return 0
}

func (m *MplsTeTunnelsSummaryInfoBag) GetP2MpHeadDestinations() uint32 {
	if m != nil {
		return m.P2MpHeadDestinations
	}
	return 0
}

func (m *MplsTeTunnelsSummaryInfoBag) GetUpP2MpHeadDestinations() uint32 {
	if m != nil {
		return m.UpP2MpHeadDestinations
	}
	return 0
}

func (m *MplsTeTunnelsSummaryInfoBag) GetBwProtectedP2MpS2Ls() uint32 {
	if m != nil {
		return m.BwProtectedP2MpS2Ls
	}
	return 0
}

func (m *MplsTeTunnelsSummaryInfoBag) GetLinkProtectedP2MpS2Ls() uint32 {
	if m != nil {
		return m.LinkProtectedP2MpS2Ls
	}
	return 0
}

func (m *MplsTeTunnelsSummaryInfoBag) GetUpP2MpHeadS2Ls() uint32 {
	if m != nil {
		return m.UpP2MpHeadS2Ls
	}
	return 0
}

func (m *MplsTeTunnelsSummaryInfoBag) GetProceedingP2MpHeadS2Ls() uint32 {
	if m != nil {
		return m.ProceedingP2MpHeadS2Ls
	}
	return 0
}

func (m *MplsTeTunnelsSummaryInfoBag) GetFrrP2MpHeadS2Ls() uint32 {
	if m != nil {
		return m.FrrP2MpHeadS2Ls
	}
	return 0
}

func (m *MplsTeTunnelsSummaryInfoBag) GetProtectedP2MpHeadS2Ls() uint32 {
	if m != nil {
		return m.ProtectedP2MpHeadS2Ls
	}
	return 0
}

func (m *MplsTeTunnelsSummaryInfoBag) GetReroutedP2MpHeadS2Ls() uint32 {
	if m != nil {
		return m.ReroutedP2MpHeadS2Ls
	}
	return 0
}

func (m *MplsTeTunnelsSummaryInfoBag) GetP2MpMidPointS2Ls() uint32 {
	if m != nil {
		return m.P2MpMidPointS2Ls
	}
	return 0
}

func (m *MplsTeTunnelsSummaryInfoBag) GetUpP2MpMidPointS2Ls() uint32 {
	if m != nil {
		return m.UpP2MpMidPointS2Ls
	}
	return 0
}

func (m *MplsTeTunnelsSummaryInfoBag) GetProceedingP2MpMidPointS2Ls() uint32 {
	if m != nil {
		return m.ProceedingP2MpMidPointS2Ls
	}
	return 0
}

func (m *MplsTeTunnelsSummaryInfoBag) GetFrrP2MpMidPointS2Ls() uint32 {
	if m != nil {
		return m.FrrP2MpMidPointS2Ls
	}
	return 0
}

func (m *MplsTeTunnelsSummaryInfoBag) GetProtectedP2MpMidPointS2Ls() uint32 {
	if m != nil {
		return m.ProtectedP2MpMidPointS2Ls
	}
	return 0
}

func (m *MplsTeTunnelsSummaryInfoBag) GetReroutedP2MpMidPointS2Ls() uint32 {
	if m != nil {
		return m.ReroutedP2MpMidPointS2Ls
	}
	return 0
}

func (m *MplsTeTunnelsSummaryInfoBag) GetP2MpTailS2Ls() uint32 {
	if m != nil {
		return m.P2MpTailS2Ls
	}
	return 0
}

func (m *MplsTeTunnelsSummaryInfoBag) GetUpP2MpTailS2Ls() uint32 {
	if m != nil {
		return m.UpP2MpTailS2Ls
	}
	return 0
}

func (m *MplsTeTunnelsSummaryInfoBag) GetBidirHeadTunnels() uint32 {
	if m != nil {
		return m.BidirHeadTunnels
	}
	return 0
}

func (m *MplsTeTunnelsSummaryInfoBag) GetBidirHeadTunnelsUp() uint32 {
	if m != nil {
		return m.BidirHeadTunnelsUp
	}
	return 0
}

func (m *MplsTeTunnelsSummaryInfoBag) GetBidirHeadTunnelsAssociated() uint32 {
	if m != nil {
		return m.BidirHeadTunnelsAssociated
	}
	return 0
}

func (m *MplsTeTunnelsSummaryInfoBag) GetBidirHeadTunnelsCorouted() uint32 {
	if m != nil {
		return m.BidirHeadTunnelsCorouted
	}
	return 0
}

func (m *MplsTeTunnelsSummaryInfoBag) GetBidirHeadLsPsUp() uint32 {
	if m != nil {
		return m.BidirHeadLsPsUp
	}
	return 0
}

func (m *MplsTeTunnelsSummaryInfoBag) GetBidirHeadLsPsProceeding() uint32 {
	if m != nil {
		return m.BidirHeadLsPsProceeding
	}
	return 0
}

func (m *MplsTeTunnelsSummaryInfoBag) GetBidirHeadLsPsAssociated() uint32 {
	if m != nil {
		return m.BidirHeadLsPsAssociated
	}
	return 0
}

func (m *MplsTeTunnelsSummaryInfoBag) GetBidirHeadLsPsStandby() uint32 {
	if m != nil {
		return m.BidirHeadLsPsStandby
	}
	return 0
}

func (m *MplsTeTunnelsSummaryInfoBag) GetBidirMidTunnels() uint32 {
	if m != nil {
		return m.BidirMidTunnels
	}
	return 0
}

func (m *MplsTeTunnelsSummaryInfoBag) GetBidirMidTunnelsUp() uint32 {
	if m != nil {
		return m.BidirMidTunnelsUp
	}
	return 0
}

func (m *MplsTeTunnelsSummaryInfoBag) GetBidirMidLsPsProceeding() uint32 {
	if m != nil {
		return m.BidirMidLsPsProceeding
	}
	return 0
}

func (m *MplsTeTunnelsSummaryInfoBag) GetBidirMidLsPsAssociated() uint32 {
	if m != nil {
		return m.BidirMidLsPsAssociated
	}
	return 0
}

func (m *MplsTeTunnelsSummaryInfoBag) GetBidirMidLsPsStandby() uint32 {
	if m != nil {
		return m.BidirMidLsPsStandby
	}
	return 0
}

func (m *MplsTeTunnelsSummaryInfoBag) GetBidirTailLsPs() uint32 {
	if m != nil {
		return m.BidirTailLsPs
	}
	return 0
}

func (m *MplsTeTunnelsSummaryInfoBag) GetBidirTailLsPsUp() uint32 {
	if m != nil {
		return m.BidirTailLsPsUp
	}
	return 0
}

func (m *MplsTeTunnelsSummaryInfoBag) GetBidirTailLsPsProceeding() uint32 {
	if m != nil {
		return m.BidirTailLsPsProceeding
	}
	return 0
}

func (m *MplsTeTunnelsSummaryInfoBag) GetBidirTailLsPsAssociated() uint32 {
	if m != nil {
		return m.BidirTailLsPsAssociated
	}
	return 0
}

func (m *MplsTeTunnelsSummaryInfoBag) GetBidirTailLsPsStandby() uint32 {
	if m != nil {
		return m.BidirTailLsPsStandby
	}
	return 0
}

func (m *MplsTeTunnelsSummaryInfoBag) GetBidirTailLsPsCorouted() uint32 {
	if m != nil {
		return m.BidirTailLsPsCorouted
	}
	return 0
}

func (m *MplsTeTunnelsSummaryInfoBag) GetAutobackupSummary() *MplsTeAutotunBackupSummaryInfo {
	if m != nil {
		return m.AutobackupSummary
	}
	return nil
}

func (m *MplsTeTunnelsSummaryInfoBag) GetAutoMeshSummary() *MplsTeAutotunMeshSummaryInfo {
	if m != nil {
		return m.AutoMeshSummary
	}
	return nil
}

func (m *MplsTeTunnelsSummaryInfoBag) GetAutoMeshOneHopSummary() *MplsTeAutotunMeshOnehopSummaryInfo {
	if m != nil {
		return m.AutoMeshOneHopSummary
	}
	return nil
}

func (m *MplsTeTunnelsSummaryInfoBag) GetGmplsUniSummary() *MplsTeGmplsUniSummaryInfo {
	if m != nil {
		return m.GmplsUniSummary
	}
	return nil
}

func (m *MplsTeTunnelsSummaryInfoBag) GetGmplsNniSummary() *MplsTeGmplsNniSummaryInfo {
	if m != nil {
		return m.GmplsNniSummary
	}
	return nil
}

func (m *MplsTeTunnelsSummaryInfoBag) GetCurrentTunnelConvergenceSummary() *TeConvTblSummaryBag {
	if m != nil {
		return m.CurrentTunnelConvergenceSummary
	}
	return nil
}

func (m *MplsTeTunnelsSummaryInfoBag) GetLastTunnelConvergenceSummary() *TeConvTblSummaryBag {
	if m != nil {
		return m.LastTunnelConvergenceSummary
	}
	return nil
}

func (m *MplsTeTunnelsSummaryInfoBag) GetAutoTunServerSummary() *MplsTeAutotunSvrSummaryInfo {
	if m != nil {
		return m.AutoTunServerSummary
	}
	return nil
}

func init() {
	proto.RegisterType((*MplsTeTunnelsSummaryInfoBag_KEYS)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.tunnels.summary.mpls_te_tunnels_summary_info_bag_KEYS")
	proto.RegisterType((*MplsTeAutotunBackupSummaryInfo)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.tunnels.summary.mpls_te_autotun_backup_summary_info")
	proto.RegisterType((*MplsTeAutotunMeshSummaryInfo)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.tunnels.summary.mpls_te_autotun_mesh_summary_info")
	proto.RegisterType((*MplsTeAutotunMeshOnehopSummaryInfo)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.tunnels.summary.mpls_te_autotun_mesh_onehop_summary_info")
	proto.RegisterType((*MplsTeGmplsUniSummaryInfo)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.tunnels.summary.mpls_te_gmpls_uni_summary_info")
	proto.RegisterType((*MplsTeGmplsNniSummaryInfo)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.tunnels.summary.mpls_te_gmpls_nni_summary_info")
	proto.RegisterType((*TeTableDatapointInfo)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.tunnels.summary.te_table_datapoint_info")
	proto.RegisterType((*TeConvTblSummaryBag)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.tunnels.summary.te_conv_tbl_summary_bag")
	proto.RegisterType((*MplsTeAutotunP2MpInfo)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.tunnels.summary.mpls_te_autotun_p2mp_info")
	proto.RegisterType((*MplsTeAutotunP2PInfo)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.tunnels.summary.mpls_te_autotun_p2p_info")
	proto.RegisterType((*MplsTeAutotunSvrInfo)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.tunnels.summary.mpls_te_autotun_svr_info")
	proto.RegisterType((*MplsTeAutotunSvrSummaryInfo)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.tunnels.summary.mpls_te_autotun_svr_summary_info")
	proto.RegisterType((*MplsTeTunnelsSummaryInfoBag)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.tunnels.summary.mpls_te_tunnels_summary_info_bag")
}

func init() {
	proto.RegisterFile("mpls_te_tunnels_summary_info_bag.proto", fileDescriptor_ebd3bd0af160239b)
}

var fileDescriptor_ebd3bd0af160239b = []byte{
	// 3382 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x9a, 0x7b, 0x77, 0x1c, 0xc5,
	0xb1, 0xc0, 0xcf, 0xda, 0x60, 0x5b, 0x25, 0xeb, 0x35, 0x7a, 0x8d, 0x24, 0xbf, 0xae, 0x7c, 0x6c,
	0x64, 0x83, 0x65, 0x7b, 0x2d, 0xfc, 0xc0, 0x36, 0x20, 0xc9, 0x36, 0x36, 0x7e, 0x2d, 0x2b, 0x09,
	0xae, 0x2f, 0x97, 0x3b, 0x77, 0x76, 0xa7, 0x77, 0xd5, 0xd1, 0xee, 0xcc, 0x30, 0x33, 0x2b, 0x21,
	0x42, 0x08, 0x84, 0x84, 0x3c, 0x48, 0x48, 0x42, 0x80, 0x90, 0x77, 0x48, 0x48, 0x48, 0xbe, 0x44,
	0xfe, 0xce, 0xc9, 0x5f, 0xf9, 0x0a, 0xf9, 0x26, 0x39, 0xdd, 0xd5, 0x3d, 0xd3, 0xdd, 0x33, 0x92,
	0x0c, 0x6c, 0xfe, 0x93, 0xba, 0xea, 0x57, 0x5d, 0x5d, 0x5d, 0x53, 0xd5, 0xd3, 0x3b, 0x70, 0xbc,
	0x1d, 0xb6, 0x62, 0x27, 0x21, 0x4e, 0xd2, 0xf1, 0x7d, 0xd2, 0x8a, 0x9d, 0xb8, 0xd3, 0x6e, 0xbb,
	0xd1, 0xa6, 0x43, 0xfd, 0x46, 0xe0, 0xd4, 0xdc, 0xe6, 0x6c, 0x18, 0x05, 0x49, 0x60, 0x9d, 0xad,
	0xd3, 0xb8, 0x1e, 0x38, 0x34, 0x88, 0x9d, 0xd7, 0x22, 0x47, 0x42, 0x41, 0x48, 0xa2, 0x59, 0xf1,
	0xcf, 0xac, 0xb0, 0x30, 0x2b, 0x2c, 0x4c, 0x3f, 0x06, 0xc7, 0x76, 0x32, 0xee, 0xdc, 0xbe, 0xfe,
	0x60, 0x69, 0xfa, 0xf3, 0xfd, 0x70, 0x54, 0x6a, 0xba, 0x9d, 0x24, 0x48, 0x3a, 0xbe, 0x53, 0x73,
	0xeb, 0x6b, 0x9d, 0x50, 0x03, 0xac, 0x23, 0xd0, 0xcb, 0xc4, 0x28, 0x8a, 0xed, 0xd2, 0x91, 0xd2,
	0x4c, 0x5f, 0x55, 0x1d, 0xb2, 0x8e, 0x41, 0x7f, 0x27, 0x74, 0x54, 0xa5, 0x5d, 0x5c, 0xa9, 0xaf,
	0x13, 0xce, 0x2b, 0x6a, 0x27, 0x60, 0xd0, 0x0b, 0x36, 0x7c, 0x4d, 0x71, 0x37, 0x57, 0x1c, 0x60,
	0xe3, 0xaa, 0xea, 0x29, 0xb0, 0x3a, 0x7e, 0x27, 0x26, 0x9e, 0xa6, 0xfc, 0x08, 0x57, 0x1e, 0x42,
	0x89, 0xaa, 0x7e, 0x06, 0x46, 0x7c, 0xf2, 0x5a, 0xe2, 0xac, 0x06, 0xba, 0x1b, 0x8f, 0x72, 0xc0,
	0x62, 0xb2, 0x9b, 0x81, 0xe6, 0xcb, 0x25, 0x98, 0xe0, 0x44, 0x21, 0xb6, 0x87, 0x63, 0x63, 0x4c,
	0x76, 0x2f, 0x8f, 0x9e, 0x87, 0xf1, 0x38, 0x6a, 0x35, 0x9d, 0x38, 0x89, 0x68, 0x3d, 0xd1, 0xc0,
	0xbd, 0x1c, 0x1c, 0x65, 0xe2, 0x25, 0x2e, 0x55, 0xb9, 0x2b, 0x30, 0xc9, 0xb9, 0x30, 0x22, 0x0d,
	0x12, 0x45, 0xc6, 0xda, 0xf6, 0x71, 0xd4, 0x66, 0x1a, 0x15, 0xa9, 0xa0, 0xd2, 0x4f, 0xc1, 0x04,
	0xa7, 0x37, 0x08, 0x6d, 0xae, 0x26, 0x06, 0xdc, 0xc3, 0x61, 0xee, 0xd6, 0x4b, 0x42, 0xae, 0xb2,
	0xb7, 0xe1, 0x68, 0xc1, 0x3a, 0x1d, 0x96, 0x62, 0xa4, 0xce, 0x6c, 0xb5, 0x62, 0x27, 0x8c, 0x6d,
	0xe0, 0x56, 0x0e, 0xe5, 0xa2, 0x55, 0x91, 0x7a, 0x77, 0xe2, 0x4a, 0x6c, 0x2d, 0xc3, 0xcc, 0x56,
	0x91, 0xcb, 0x59, 0xec, 0xe5, 0x16, 0xa7, 0x0b, 0x03, 0x59, 0x6c, 0x95, 0x19, 0xe4, 0xeb, 0xdc,
	0xc6, 0xea, 0xfe, 0xcc, 0xea, 0xcd, 0x20, 0x5c, 0x8a, 0x5a, 0xcd, 0xad, 0xac, 0xbe, 0x02, 0xa7,
	0x74, 0x5f, 0x77, 0x32, 0xdd, 0xc7, 0x4d, 0x1f, 0x57, 0x1c, 0xde, 0xce, 0xfc, 0x03, 0x38, 0xb9,
	0x7d, 0x14, 0xe2, 0x72, 0xcb, 0x69, 0xb8, 0x6d, 0xda, 0xa2, 0x24, 0xb6, 0xfb, 0xb9, 0xed, 0x63,
	0x5b, 0x87, 0x77, 0xa9, 0xdc, 0xba, 0x21, 0x94, 0xad, 0x1a, 0x9c, 0x7e, 0x88, 0x28, 0x6b, 0xf6,
	0x07, 0xb8, 0xfd, 0x13, 0xdb, 0x07, 0xbb, 0x68, 0x8e, 0xed, 0x03, 0xa3, 0xcd, 0x31, 0x98, 0xcd,
	0xb1, 0x75, 0x6c, 0xd4, 0x39, 0xd6, 0x60, 0xee, 0x61, 0x77, 0x40, 0x9b, 0x68, 0x88, 0x4f, 0x74,
	0x6a, 0xe7, 0x8d, 0x50, 0x27, 0xdb, 0x31, 0xcf, 0xe3, 0xb2, 0xd3, 0x8a, 0x6d, 0x6b, 0xa7, 0x3c,
	0x5f, 0x2a, 0xdf, 0x79, 0xd8, 0x3c, 0x47, 0x8b, 0xc3, 0x0f, 0x93, 0xe7, 0x9a, 0xd5, 0x9d, 0x42,
	0xc1, 0xac, 0x8e, 0x3c, 0x4c, 0x9e, 0x73, 0xab, 0x5f, 0x20, 0xcf, 0xd1, 0xf4, 0xe8, 0xc3, 0xe6,
	0x39, 0x33, 0x3f, 0xfd, 0xf7, 0x5d, 0xf0, 0x5f, 0x66, 0xa7, 0x68, 0x93, 0x78, 0x55, 0xef, 0x13,
	0x27, 0x61, 0x88, 0x09, 0x51, 0x22, 0x5a, 0x8f, 0xe8, 0x16, 0x03, 0x4c, 0x70, 0x97, 0xc4, 0xab,
	0xcb, 0x38, 0x6c, 0x9d, 0x86, 0x11, 0xd1, 0x31, 0x74, 0xf5, 0x5d, 0xa2, 0xc2, 0xf3, 0xf8, 0xa9,
	0xc0, 0x39, 0x18, 0x4b, 0x7b, 0x87, 0x8e, 0x60, 0x07, 0x19, 0x96, 0x1d, 0x44, 0x85, 0xce, 0xc2,
	0x68, 0x23, 0x8a, 0x0a, 0x18, 0x6c, 0x24, 0x56, 0x23, 0x8a, 0x4c, 0x64, 0x06, 0x06, 0x33, 0xf5,
	0x66, 0x14, 0x64, 0x5d, 0xa4, 0x5f, 0xae, 0xe1, 0x39, 0x3e, 0x6a, 0xcd, 0xc1, 0x58, 0xa6, 0xe9,
	0x91, 0x38, 0xa1, 0xbe, 0x9b, 0xd0, 0xc0, 0x97, 0xed, 0x63, 0x44, 0xea, 0x5f, 0x53, 0x64, 0xd3,
	0x1f, 0xed, 0x86, 0x99, 0xc2, 0x50, 0x06, 0x3e, 0xe1, 0x1b, 0xa7, 0x46, 0xf4, 0x22, 0x4c, 0x64,
	0x53, 0x04, 0x3e, 0xe1, 0x5b, 0xab, 0x47, 0x76, 0x54, 0xce, 0x72, 0xdf, 0x27, 0x37, 0x83, 0x50,
	0x2e, 0xe3, 0x2a, 0x1c, 0xd0, 0xe2, 0x6b, 0xc2, 0x18, 0xe7, 0xf1, 0x2c, 0xce, 0x3a, 0x3e, 0x0f,
	0x87, 0x8c, 0x68, 0x9b, 0x06, 0x30, 0xea, 0x13, 0x6a, 0xd4, 0x75, 0x13, 0x5f, 0x22, 0xf6, 0xe7,
	0xc1, 0xce, 0x4f, 0xa8, 0xed, 0xc1, 0x88, 0xbe, 0x5a, 0xb1, 0x13, 0x0b, 0x70, 0x28, 0xcf, 0x15,
	0xec, 0xc8, 0xa4, 0x4e, 0x6b, 0xfb, 0xf2, 0x61, 0x09, 0x0e, 0xc9, 0x7d, 0x69, 0xf2, 0x3f, 0x3a,
	0x3e, 0xd5, 0x77, 0x63, 0x02, 0xf6, 0xad, 0x12, 0xd7, 0x8b, 0x9d, 0x4e, 0x28, 0x82, 0xbf, 0x97,
	0xff, 0xbf, 0x12, 0x5a, 0x07, 0x01, 0x50, 0xc4, 0xe2, 0x21, 0x82, 0xdb, 0xc3, 0x47, 0xae, 0x05,
	0x1b, 0x3e, 0x23, 0x13, 0x97, 0xb6, 0x38, 0x89, 0x81, 0xdb, 0xcb, 0xff, 0x47, 0x12, 0x45, 0x9c,
	0xc4, 0xd8, 0xf4, 0xf0, 0x11, 0x46, 0x4e, 0xff, 0x23, 0xe7, 0x96, 0xdf, 0x3d, 0xb7, 0xc6, 0x61,
	0x6f, 0x9b, 0x7a, 0x8a, 0x57, 0x7b, 0xd8, 0xbf, 0x2b, 0xa1, 0x35, 0x05, 0x3d, 0x5c, 0xa0, 0xf8,
	0xb4, 0x8f, 0x0d, 0xe4, 0x16, 0xf3, 0xe8, 0x76, 0x8b, 0xd9, 0x63, 0x2e, 0x66, 0x02, 0xc6, 0xd9,
	0xa1, 0xd4, 0xad, 0xb5, 0x88, 0xe3, 0xb9, 0x89, 0x1b, 0x06, 0xd4, 0x4f, 0xf8, 0x22, 0xa6, 0xff,
	0xb9, 0x97, 0xcb, 0xea, 0x81, 0xbf, 0xee, 0x24, 0xb5, 0x56, 0xba, 0xc2, 0x9a, 0xdb, 0xb4, 0x9e,
	0x84, 0x71, 0xcc, 0x1d, 0x87, 0x27, 0x54, 0x3d, 0xa1, 0xeb, 0x4c, 0xb3, 0xe3, 0x27, 0x62, 0xbd,
	0x23, 0x28, 0xbe, 0x11, 0x45, 0xf3, 0x5c, 0xb8, 0xc8, 0x64, 0xac, 0x62, 0x28, 0x58, 0x12, 0x24,
	0x6e, 0x4b, 0x50, 0x18, 0x88, 0xe1, 0x94, 0x5a, 0x66, 0x32, 0x84, 0xe6, 0x52, 0x88, 0xb9, 0x42,
	0xa2, 0x26, 0xf1, 0x04, 0xb4, 0x5b, 0x9d, 0x6a, 0x51, 0x0a, 0x91, 0xaa, 0xc2, 0x71, 0x41, 0xc9,
	0x69, 0x50, 0xec, 0xd7, 0x99, 0xa3, 0xed, 0xb0, 0x45, 0xd8, 0xba, 0x69, 0x9b, 0xf0, 0x60, 0x3e,
	0x52, 0x9d, 0x46, 0x6d, 0x31, 0x6f, 0xaa, 0xbb, 0x28, 0x54, 0x97, 0x69, 0x9b, 0x58, 0x21, 0xf4,
	0x63, 0xa4, 0x42, 0x37, 0x59, 0x75, 0x82, 0x4e, 0xc2, 0x83, 0xdd, 0x5b, 0x7e, 0x7e, 0xf6, 0x0b,
	0xbf, 0x12, 0xcc, 0x6e, 0x11, 0xf5, 0xea, 0x7e, 0x3e, 0x5a, 0x71, 0x93, 0xd5, 0xfb, 0x9d, 0xc4,
	0xf2, 0xa1, 0x0f, 0xb5, 0x22, 0x12, 0xaf, 0x3b, 0x14, 0x37, 0xb0, 0xbb, 0x13, 0xf6, 0xf2, 0xd1,
	0x2a, 0x89, 0xd7, 0x6f, 0xf9, 0xd6, 0xeb, 0x30, 0x8c, 0x4a, 0x2d, 0xb7, 0x46, 0x5a, 0x4e, 0x44,
	0x36, 0x22, 0x9a, 0x10, 0x7e, 0x86, 0xee, 0xee, 0xac, 0x43, 0x7c, 0xf4, 0x0e, 0x9b, 0xa5, 0x8a,
	0x93, 0x58, 0x6b, 0xd0, 0x2b, 0xa2, 0x5b, 0x77, 0x5b, 0x75, 0x7e, 0xf8, 0xee, 0xee, 0x9c, 0x80,
	0xa1, 0x65, 0xd6, 0xad, 0x37, 0x60, 0x04, 0x75, 0x44, 0x92, 0xc8, 0x95, 0xf6, 0x74, 0x7d, 0x56,
	0x8b, 0x8f, 0x62, 0x3d, 0x95, 0x4b, 0x5d, 0x07, 0x5c, 0x3f, 0x3e, 0x06, 0x11, 0x6d, 0x36, 0x49,
	0xc4, 0x8f, 0xfa, 0xdd, 0x9d, 0x7a, 0x80, 0x8f, 0xb2, 0xa7, 0x09, 0xa7, 0x98, 0x7e, 0x7f, 0x37,
	0x4c, 0x98, 0x9d, 0x2e, 0x2c, 0xb7, 0x43, 0xac, 0x5a, 0xb2, 0xcf, 0xf2, 0x11, 0x9c, 0x43, 0x3c,
	0xcd, 0xbc, 0xcf, 0x56, 0xca, 0x6d, 0xd1, 0x49, 0xd2, 0x3e, 0xcb, 0x35, 0xb5, 0xaa, 0xbe, 0x2b,
	0xeb, 0x09, 0x4c, 0x5f, 0xad, 0xe7, 0xec, 0xfd, 0x4e, 0x36, 0xc0, 0x3c, 0x88, 0xcf, 0xf2, 0x18,
	0x76, 0xbf, 0x1c, 0x7a, 0x15, 0xa6, 0xb2, 0xe6, 0x97, 0x87, 0xb1, 0x1e, 0xda, 0xb2, 0xf3, 0xe5,
	0x70, 0xe5, 0x68, 0xa3, 0x2c, 0x4e, 0x76, 0xb0, 0xa1, 0x6c, 0xd2, 0xc2, 0xa3, 0x8d, 0x86, 0xec,
	0xd1, 0x8f, 0x36, 0x2a, 0xa4, 0xb6, 0x57, 0x8d, 0xd9, 0xab, 0xb5, 0x57, 0x05, 0x99, 0xfe, 0xac,
	0x04, 0x76, 0x7e, 0x43, 0xc4, 0x7e, 0x1c, 0x87, 0x01, 0x61, 0xcb, 0xd8, 0x8e, 0x3e, 0x0c, 0xaf,
	0xdc, 0x8d, 0x53, 0x30, 0x9c, 0xad, 0xce, 0x3c, 0x4f, 0x0c, 0xca, 0xc5, 0xa9, 0x6e, 0xaa, 0x6b,
	0x33, 0xcf, 0x0f, 0x56, 0xb6, 0xb4, 0xd4, 0xcd, 0x7f, 0xed, 0xca, 0xbb, 0x19, 0xaf, 0x47, 0xe8,
	0x26, 0x85, 0x9e, 0x34, 0x87, 0xb8, 0x83, 0xbd, 0xe5, 0x3b, 0x5f, 0x22, 0x89, 0xb7, 0xcc, 0xcb,
	0xea, 0x3e, 0xf6, 0xe7, 0x2d, 0x36, 0x55, 0x03, 0xf6, 0xc9, 0xe8, 0xf0, 0xe5, 0xf5, 0x96, 0x6f,
	0x77, 0x65, 0x26, 0x31, 0xd1, 0xde, 0xb0, 0x8c, 0xf3, 0x1c, 0x85, 0x3e, 0x7e, 0xd7, 0x53, 0x0f,
	0x5a, 0x4e, 0xb2, 0x19, 0x12, 0x1e, 0x9a, 0x9e, 0xea, 0x7e, 0x39, 0xb8, 0xbc, 0x19, 0x12, 0xeb,
	0x0c, 0x8c, 0xd4, 0x5b, 0x94, 0xf0, 0x87, 0x2d, 0x4e, 0x5c, 0xd6, 0x58, 0x7c, 0x57, 0xf4, 0x93,
	0x9e, 0xaa, 0x85, 0xb2, 0x5b, 0x42, 0x74, 0xcf, 0x6d, 0x13, 0xd6, 0xc3, 0x25, 0xe1, 0x89, 0xdc,
	0xdb, 0x27, 0xd4, 0xbc, 0xe9, 0x4f, 0x77, 0xc3, 0x91, 0xa2, 0x18, 0x6b, 0x07, 0x8b, 0x04, 0x06,
	0x10, 0x48, 0x2f, 0x90, 0xec, 0xd2, 0x91, 0xdd, 0x5d, 0x8a, 0x83, 0xdc, 0xd1, 0x6a, 0xbf, 0x98,
	0x63, 0x09, 0x15, 0xad, 0x77, 0x4a, 0x30, 0x8e, 0x5d, 0x34, 0x9f, 0xdb, 0xbb, 0xfe, 0x03, 0x1b,
	0x3e, 0xc2, 0x27, 0x33, 0x1f, 0xaf, 0xb7, 0x4a, 0x30, 0xa6, 0x79, 0xa1, 0x67, 0x6e, 0x97, 0x73,
	0x61, 0x58, 0xf1, 0x21, 0x7d, 0x0e, 0xfe, 0x76, 0x31, 0xdb, 0xa3, 0xad, 0x2e, 0xf2, 0x58, 0xed,
	0xe0, 0x1d, 0xcc, 0x49, 0x28, 0x71, 0x6a, 0x11, 0x71, 0xd7, 0x48, 0x84, 0x59, 0x54, 0xe6, 0x99,
	0x31, 0xcc, 0xa5, 0xcb, 0x94, 0x2c, 0xa0, 0x8c, 0x27, 0xd3, 0x09, 0x18, 0x4c, 0x21, 0xc1, 0xd8,
	0xe7, 0xf0, 0x3d, 0x4d, 0xaa, 0x8b, 0x61, 0xeb, 0x2c, 0x8c, 0x64, 0x4a, 0xce, 0xab, 0x1d, 0xb7,
	0x45, 0x1b, 0x94, 0x44, 0xf6, 0x1c, 0x5a, 0xcf, 0x64, 0x2f, 0x48, 0x11, 0x7b, 0x0d, 0x4c, 0x08,
	0x7b, 0xe1, 0xac, 0x93, 0x38, 0x76, 0xe2, 0xc4, 0x4d, 0x3a, 0xb1, 0xfd, 0x24, 0xd7, 0x1f, 0x48,
	0x48, 0x05, 0xc7, 0x97, 0xf8, 0x30, 0x3b, 0xda, 0xd1, 0xd8, 0x89, 0xe2, 0xf5, 0x30, 0x05, 0x88,
	0xcf, 0xfa, 0x88, 0x67, 0x9f, 0x3f, 0x52, 0x9a, 0xd9, 0x57, 0x1d, 0xa1, 0x71, 0x35, 0x5e, 0x0f,
	0x05, 0x75, 0x1d, 0x65, 0x56, 0x19, 0x46, 0x69, 0xec, 0x34, 0x82, 0x68, 0xc3, 0x8d, 0x3c, 0xea,
	0x37, 0x53, 0xe8, 0x02, 0x87, 0x86, 0x69, 0x7c, 0x23, 0x95, 0x49, 0xe6, 0x31, 0x18, 0xe0, 0x47,
	0x47, 0x97, 0xbd, 0x04, 0xf3, 0x33, 0xb0, 0x7d, 0x51, 0xf4, 0x1b, 0x39, 0x7c, 0x93, 0x8d, 0x5a,
	0x8f, 0xc3, 0x90, 0x47, 0x4c, 0xd5, 0x4b, 0x58, 0xdf, 0x14, 0x01, 0x2a, 0x3f, 0x06, 0x03, 0x11,
	0xa9, 0x07, 0xeb, 0x24, 0x4a, 0x55, 0x9f, 0x42, 0xab, 0xe9, 0x30, 0x2a, 0xce, 0xc3, 0x41, 0x1a,
	0x3b, 0x21, 0x89, 0x68, 0xe0, 0xd1, 0xba, 0x13, 0x91, 0x20, 0x4c, 0x68, 0x9b, 0xbe, 0xce, 0x9b,
	0x86, 0x13, 0xf8, 0xf6, 0x65, 0xee, 0xfa, 0x24, 0x8d, 0x2b, 0x42, 0xa7, 0xaa, 0xa9, 0xdc, 0xf7,
	0xad, 0x73, 0x30, 0x6a, 0x60, 0x68, 0xce, 0xbe, 0x82, 0x7d, 0x50, 0x17, 0xa2, 0x19, 0xeb, 0x29,
	0x71, 0xcf, 0x69, 0x90, 0xec, 0x30, 0x1a, 0xd9, 0x57, 0xf1, 0x2d, 0x90, 0x29, 0xe8, 0xb3, 0xb1,
	0x13, 0x68, 0x94, 0x76, 0xde, 0x9a, 0xeb, 0x7b, 0x1b, 0xd4, 0x4b, 0xb2, 0x77, 0xb8, 0xa7, 0xb3,
	0xce, 0xbb, 0x20, 0x85, 0xf2, 0xd1, 0x79, 0x0e, 0x8e, 0x18, 0x54, 0x3d, 0x68, 0xb5, 0x48, 0x5d,
	0xf5, 0xf8, 0x19, 0xce, 0x1f, 0xd4, 0xf8, 0xc5, 0x54, 0x4b, 0xb8, 0x7e, 0x1c, 0x06, 0x58, 0xc8,
	0xa2, 0xa0, 0x1d, 0xc8, 0x20, 0x3d, 0xcb, 0x83, 0xd4, 0x47, 0xe3, 0x8a, 0x1c, 0xbd, 0xef, 0xf3,
	0x74, 0x4e, 0x95, 0xc4, 0x04, 0xf3, 0x22, 0x9d, 0xe5, 0xb8, 0x30, 0x29, 0xef, 0x89, 0x33, 0x7d,
	0x0c, 0xc4, 0x42, 0x76, 0x4f, 0x9c, 0x5a, 0xc6, 0x18, 0xcc, 0xc2, 0xb0, 0x7c, 0x21, 0x58, 0x25,
	0xf5, 0x35, 0x69, 0x7f, 0x11, 0x9b, 0xb9, 0x78, 0x1b, 0x60, 0x92, 0xcc, 0x69, 0x3e, 0x03, 0x6a,
	0xf3, 0x33, 0xff, 0x35, 0xec, 0xa3, 0x6c, 0x98, 0x6b, 0xf2, 0xe3, 0xfd, 0x19, 0x10, 0xaf, 0x12,
	0xce, 0x3a, 0x89, 0x68, 0x63, 0x53, 0x1a, 0xbe, 0x8e, 0x9e, 0xa0, 0xec, 0x45, 0x2e, 0x12, 0x96,
	0x4f, 0xc2, 0x10, 0xb7, 0x2c, 0xf4, 0xd1, 0xf1, 0x1b, 0xb8, 0x4e, 0x26, 0x40, 0x65, 0xf4, 0x7a,
	0x06, 0x06, 0xd9, 0xe9, 0x80, 0x25, 0x64, 0xba, 0x67, 0xcf, 0x61, 0x5e, 0x36, 0xa2, 0x88, 0x65,
	0xa4, 0xdc, 0xad, 0x39, 0x18, 0xcb, 0xee, 0x86, 0x34, 0xfd, 0x9b, 0xb8, 0xc7, 0xa9, 0x54, 0xa5,
	0xca, 0x2c, 0x15, 0xa3, 0xa0, 0x93, 0x83, 0x6e, 0xe1, 0x89, 0x45, 0x0a, 0x55, 0x46, 0x9c, 0x58,
	0xda, 0xd4, 0x73, 0xf0, 0xd8, 0x28, 0x99, 0xe7, 0xd3, 0x13, 0xcb, 0x5d, 0xea, 0x55, 0x98, 0x28,
	0xbb, 0xc5, 0x98, 0xca, 0x9c, 0xcb, 0x83, 0xb7, 0xf1, 0x24, 0x96, 0xaa, 0x98, 0xf8, 0x65, 0x98,
	0x4c, 0xbd, 0xcc, 0xd3, 0x77, 0x30, 0xf9, 0xa5, 0x86, 0x09, 0xcf, 0xc1, 0x58, 0x8b, 0xfa, 0x6b,
	0xca, 0xcd, 0x99, 0x04, 0xef, 0x62, 0x60, 0x98, 0x34, 0xbd, 0x26, 0x53, 0x28, 0x3f, 0xf0, 0x48,
	0x01, 0x75, 0x0f, 0x29, 0x26, 0xcd, 0x51, 0x67, 0x60, 0xa4, 0xb6, 0x51, 0xc0, 0xdc, 0xc7, 0xc8,
	0xd4, 0x36, 0x72, 0xc4, 0x69, 0x18, 0x61, 0xc1, 0x64, 0x1d, 0x44, 0x8b, 0x7f, 0x05, 0xf3, 0xb2,
	0x11, 0x45, 0x95, 0x72, 0xa8, 0x46, 0xff, 0x32, 0x4c, 0x66, 0xf6, 0x73, 0xd8, 0x0b, 0x18, 0x8b,
	0x54, 0xc3, 0x80, 0x2f, 0xc1, 0x44, 0x1a, 0xc8, 0x1c, 0x5b, 0xc5, 0xc3, 0xb4, 0x54, 0x30, 0xd0,
	0x8b, 0x30, 0x21, 0x1d, 0xcd, 0x6f, 0xc1, 0x12, 0x5e, 0x61, 0xa1, 0xb7, 0xe6, 0x06, 0x5c, 0x83,
	0xc3, 0xba, 0xc7, 0x79, 0x7e, 0x99, 0xf3, 0x53, 0xaa, 0xdb, 0xa6, 0x95, 0x05, 0x38, 0xa4, 0xb9,
	0x9e, 0x37, 0xb2, 0x82, 0x77, 0x43, 0x8a, 0xff, 0x05, 0x79, 0x64, 0xa4, 0x82, 0x7a, 0x1e, 0x78,
	0x11, 0x63, 0xa7, 0xa5, 0x83, 0x72, 0x02, 0xbe, 0x0c, 0x93, 0x46, 0x46, 0xa8, 0xf0, 0x4b, 0xa2,
	0x02, 0xab, 0x59, 0xa1, 0xc0, 0x17, 0xc0, 0xd6, 0x12, 0x43, 0x45, 0xff, 0x1b, 0x83, 0xa7, 0x24,
	0x87, 0x02, 0x1e, 0x83, 0x7e, 0x71, 0xf3, 0x2b, 0xd5, 0x1f, 0x60, 0x15, 0xc2, 0x51, 0xa9, 0x76,
	0x02, 0x06, 0xc5, 0x6f, 0x44, 0x8e, 0x1b, 0xc7, 0xb4, 0xe9, 0x13, 0xcf, 0xfe, 0x1f, 0x2c, 0x29,
	0x62, 0x7c, 0x5e, 0x0c, 0x5b, 0x17, 0xc1, 0xe6, 0x1b, 0x99, 0xfa, 0x42, 0xfd, 0x84, 0x44, 0x0d,
	0xb7, 0x4e, 0x62, 0xfb, 0x65, 0x4c, 0x01, 0xb6, 0x8f, 0x52, 0x7c, 0x2b, 0x95, 0x5a, 0xa7, 0x21,
	0xad, 0x07, 0x2a, 0xf4, 0xbf, 0x98, 0xdc, 0x52, 0xa4, 0x00, 0x33, 0x30, 0x98, 0xcb, 0xb2, 0x57,
	0xb0, 0x7a, 0x85, 0x7a, 0x76, 0xe1, 0xdb, 0x48, 0x4e, 0xf9, 0xff, 0xe4, 0xdb, 0x88, 0x91, 0x8c,
	0x57, 0x60, 0xca, 0xdb, 0xf4, 0xdd, 0x36, 0xad, 0x3b, 0x45, 0x98, 0x83, 0x9b, 0x21, 0x54, 0x56,
	0x0a, 0x68, 0x16, 0x81, 0x7a, 0xe0, 0x37, 0x68, 0x33, 0x4f, 0xff, 0x3f, 0xd2, 0x8d, 0x28, 0x5a,
	0xe4, 0x1a, 0x06, 0x5d, 0x86, 0xd1, 0x14, 0xd1, 0xde, 0x27, 0x5d, 0x2c, 0x99, 0x62, 0x65, 0xda,
	0xab, 0xe4, 0x05, 0xb0, 0x0b, 0x19, 0xa7, 0x13, 0xda, 0x35, 0xdc, 0xfe, 0x02, 0x6c, 0x25, 0xb4,
	0xca, 0x30, 0x96, 0xcb, 0x1b, 0xbc, 0xf8, 0xaf, 0xe7, 0x4a, 0x4a, 0xa5, 0x1c, 0xf2, 0xdf, 0x10,
	0xce, 0x83, 0x5d, 0x90, 0xe5, 0x48, 0x79, 0x05, 0x25, 0x4f, 0x72, 0x33, 0x30, 0xa4, 0x06, 0x13,
	0x01, 0x22, 0x7f, 0xff, 0x15, 0x51, 0xe0, 0x9a, 0x17, 0x61, 0x82, 0x9f, 0xf2, 0x08, 0x3f, 0xb3,
	0x19, 0x44, 0x43, 0xac, 0x27, 0x55, 0x30, 0x48, 0x71, 0x9e, 0x2a, 0x20, 0x9b, 0x48, 0x66, 0x0a,
	0x2a, 0x79, 0x12, 0x2c, 0xad, 0x50, 0x22, 0xb2, 0x9a, 0xf6, 0x42, 0x55, 0xf7, 0x3c, 0xd8, 0x05,
	0x35, 0x12, 0x09, 0x6a, 0x74, 0x43, 0x95, 0x9b, 0x83, 0xf1, 0x7c, 0x79, 0x44, 0xec, 0x6b, 0x7a,
	0x3f, 0x54, 0xa9, 0x27, 0x60, 0x58, 0x2f, 0x48, 0x48, 0xac, 0x89, 0x93, 0x4b, 0x56, 0x86, 0xb8,
	0xf6, 0x59, 0x18, 0x13, 0x51, 0x36, 0x81, 0x96, 0xbc, 0x57, 0xa8, 0x18, 0xc8, 0x3c, 0x1c, 0x32,
	0xc2, 0x6d, 0xa2, 0x6d, 0xbc, 0xc4, 0xd7, 0x62, 0xae, 0x99, 0x38, 0x07, 0xe3, 0xf9, 0xea, 0x8d,
	0xac, 0x9f, 0x76, 0x6d, 0x13, 0x7a, 0x06, 0x0e, 0x6e, 0x55, 0xb8, 0x11, 0x0d, 0x8c, 0xbe, 0x6d,
	0x1a, 0xb8, 0x0a, 0x07, 0xb6, 0xa8, 0xd9, 0xc8, 0x87, 0x7a, 0xe7, 0x36, 0xf1, 0xa3, 0xd0, 0xcf,
	0xeb, 0xa4, 0x4b, 0x5b, 0x02, 0x78, 0x15, 0x3f, 0x59, 0x08, 0xcb, 0xe1, 0xb2, 0x4b, 0x5b, 0x46,
	0xd6, 0x2a, 0x7a, 0x91, 0x92, 0xb5, 0x8a, 0xe6, 0x60, 0xaa, 0x26, 0x9f, 0xf5, 0x38, 0xad, 0x46,
	0x4c, 0x4d, 0x3e, 0xe2, 0xd7, 0xe1, 0x30, 0xbf, 0xac, 0x15, 0x0b, 0x13, 0x95, 0xa2, 0x13, 0x29,
	0x1d, 0x3d, 0xe1, 0xe0, 0x01, 0xa6, 0x26, 0x1e, 0xa4, 0xc5, 0x54, 0x49, 0x9a, 0x79, 0x1e, 0xa6,
	0x77, 0x30, 0xc3, 0x9e, 0xff, 0x0e, 0xfe, 0x88, 0xb9, 0x9d, 0xa5, 0x95, 0xd0, 0x7a, 0x00, 0x27,
	0x77, 0xb2, 0x15, 0x27, 0xae, 0xef, 0xd5, 0x36, 0x99, 0xcd, 0x75, 0xfc, 0x85, 0x7a, 0x3b, 0x9b,
	0x4b, 0xa8, 0xbd, 0x12, 0x5a, 0x4f, 0x80, 0xc5, 0xeb, 0x85, 0x47, 0xd7, 0x49, 0x14, 0xe3, 0x3d,
	0x75, 0x6c, 0x6f, 0x60, 0xe9, 0x65, 0x92, 0x6b, 0x28, 0xa8, 0xb0, 0x71, 0xa6, 0xcd, 0xdb, 0xa0,
	0xae, 0xfd, 0x1a, 0x6a, 0x33, 0x89, 0xa6, 0x7d, 0x05, 0xa6, 0xb8, 0x6d, 0xd7, 0xf7, 0x9c, 0x02,
	0x6c, 0x33, 0x6b, 0xb9, 0xf3, 0xbe, 0x77, 0xcf, 0xa4, 0x9f, 0x00, 0xab, 0x13, 0x93, 0xc8, 0xf1,
	0x48, 0x83, 0xfa, 0x2c, 0x87, 0x38, 0xf4, 0xba, 0x68, 0x0a, 0x31, 0x89, 0xae, 0xa1, 0x00, 0xb5,
	0x4f, 0xc2, 0x10, 0xbf, 0x0d, 0xd0, 0x8a, 0xf9, 0xd7, 0xe5, 0x53, 0xd8, 0xd6, 0x8a, 0x38, 0xde,
	0xed, 0xe5, 0xd5, 0xdf, 0xc8, 0x9e, 0x41, 0x1d, 0x78, 0x1a, 0x0e, 0x68, 0x3d, 0xc3, 0x04, 0xbf,
	0x81, 0x8f, 0x82, 0xd2, 0x34, 0x74, 0x9e, 0x1d, 0xcf, 0x53, 0x48, 0x6b, 0x1b, 0x6f, 0x8a, 0x82,
	0x24, 0x80, 0x82, 0xcb, 0xcf, 0x2d, 0xc0, 0x6f, 0xca, 0xcb, 0xcf, 0x4a, 0x11, 0xfa, 0x24, 0x8c,
	0x1b, 0x9d, 0xa3, 0x2d, 0x9b, 0xc0, 0x5b, 0x78, 0x21, 0x38, 0xac, 0xf5, 0x8e, 0x36, 0x36, 0x81,
	0x4b, 0x30, 0x91, 0x6b, 0x1e, 0x29, 0xf8, 0xb6, 0xf8, 0xa9, 0xd2, 0x68, 0x1f, 0x02, 0x7d, 0x1c,
	0x2c, 0xcd, 0x59, 0x64, 0xbe, 0x25, 0x2e, 0x83, 0x33, 0x37, 0xb9, 0x32, 0x1e, 0x63, 0xb3, 0x9a,
	0xa6, 0x43, 0xef, 0x20, 0x34, 0xa6, 0x16, 0x34, 0x05, 0x3e, 0x05, 0xc3, 0x58, 0xcd, 0x74, 0xea,
	0xdb, 0xe2, 0x37, 0x6a, 0x5e, 0xca, 0x14, 0xf5, 0x4b, 0xbc, 0x5d, 0xa9, 0xcb, 0x51, 0xa0, 0xef,
	0x94, 0xd2, 0x7e, 0x95, 0xad, 0x27, 0x45, 0x2f, 0x80, 0xad, 0x54, 0x30, 0x9d, 0x7c, 0xb7, 0x24,
	0x5f, 0xd7, 0x65, 0xf9, 0x52, 0xc0, 0xd3, 0xc0, 0x77, 0x34, 0x57, 0xf2, 0xbe, 0x8b, 0xd0, 0x20,
	0x13, 0x6a, 0xc5, 0x6e, 0x0e, 0xc6, 0x65, 0xf4, 0x4c, 0xe6, 0x7b, 0xc8, 0x58, 0x18, 0x42, 0x8d,
	0xc2, 0xb3, 0xb5, 0x16, 0x46, 0x93, 0xfe, 0x3e, 0xd2, 0x93, 0x7a, 0x2c, 0x35, 0x2b, 0xe7, 0xc5,
	0x91, 0xb0, 0x08, 0xff, 0x81, 0x48, 0x16, 0x11, 0x54, 0x8d, 0x5b, 0xe0, 0x8d, 0x49, 0x0d, 0xac,
	0x49, 0xbf, 0x57, 0x4a, 0x3b, 0x53, 0x16, 0x5d, 0xcd, 0xc6, 0xb3, 0x70, 0x50, 0x8f, 0xb0, 0x69,
	0xe2, 0x87, 0x68, 0xc2, 0x56, 0xc3, 0xac, 0x59, 0x38, 0x0e, 0x03, 0x78, 0xb9, 0x98, 0xd5, 0xff,
	0x1f, 0x21, 0xb3, 0x9f, 0x8d, 0xa7, 0xf5, 0x5f, 0xc9, 0x4f, 0x45, 0xf5, 0x7d, 0x2d, 0x3f, 0x53,
	0xe5, 0x53, 0x60, 0xd5, 0xa8, 0x47, 0x8d, 0x57, 0xef, 0x1f, 0x8b, 0xdd, 0xe3, 0x22, 0xe3, 0x50,
	0x98, 0x57, 0x67, 0x95, 0xf8, 0x27, 0x62, 0xef, 0x4c, 0x62, 0x25, 0xb4, 0x16, 0xe0, 0x60, 0x01,
	0xe3, 0xc6, 0x71, 0x50, 0xa7, 0x6e, 0x42, 0x3c, 0xfb, 0xa7, 0x62, 0xe7, 0x4c, 0x76, 0x3e, 0x55,
	0xb1, 0x9e, 0x86, 0xa9, 0x02, 0x1b, 0xf5, 0x00, 0x43, 0x65, 0x7f, 0x20, 0x62, 0x67, 0x5a, 0x58,
	0x14, 0x0a, 0xec, 0x49, 0x52, 0x78, 0xfe, 0xe9, 0x14, 0xf3, 0xfa, 0x67, 0xe2, 0x49, 0x4a, 0xb9,
	0x3b, 0x71, 0x85, 0xb9, 0x7c, 0x55, 0x9b, 0x0e, 0xd5, 0xb3, 0xbc, 0xb2, 0x3f, 0x44, 0x6c, 0x5c,
	0xc3, 0x2a, 0xa9, 0xbc, 0x10, 0x57, 0xd6, 0xfb, 0x51, 0x11, 0xae, 0x2c, 0x96, 0xbd, 0x44, 0x99,
	0xb8, 0x68, 0x7a, 0xf6, 0xc7, 0xe2, 0x61, 0xd4, 0x58, 0xd1, 0xe3, 0xac, 0xc7, 0x61, 0x08, 0x41,
	0x96, 0x5b, 0x72, 0x2f, 0x7f, 0xae, 0xae, 0xf1, 0x2e, 0xd5, 0xde, 0xe1, 0x4d, 0x65, 0x16, 0x93,
	0x4f, 0x50, 0x7f, 0xc8, 0xd0, 0x5f, 0x09, 0x59, 0x2d, 0xcb, 0x88, 0x5c, 0x50, 0x7e, 0x21, 0x6a,
	0x99, 0xe4, 0x8c, 0x98, 0x14, 0xc0, 0x4a, 0x48, 0x7e, 0x59, 0x00, 0x2b, 0x11, 0x61, 0x45, 0xde,
	0x80, 0x65, 0x40, 0x7e, 0x25, 0x8b, 0xbc, 0x42, 0xca, 0x78, 0xcc, 0x00, 0x66, 0x30, 0x3e, 0x07,
	0xf8, 0xc1, 0xdc, 0xaf, 0xc5, 0xaf, 0x44, 0x5c, 0xc0, 0x1e, 0x03, 0xfe, 0x61, 0x5c, 0x9a, 0x1f,
	0x99, 0x26, 0x8b, 0xc5, 0x6f, 0xd4, 0xd8, 0x49, 0x65, 0x35, 0x3f, 0x14, 0x75, 0x25, 0x14, 0xbf,
	0x55, 0x37, 0x58, 0x62, 0x45, 0xf9, 0xa1, 0xe0, 0x4a, 0x30, 0x7e, 0x57, 0x84, 0x17, 0xe5, 0x87,
	0x82, 0xcb, 0x70, 0xfc, 0x5e, 0xcd, 0x0f, 0xc9, 0xca, 0x78, 0x5c, 0x82, 0x89, 0x1c, 0x98, 0x3e,
	0x43, 0x9f, 0x8a, 0x06, 0xa1, 0x91, 0xe9, 0x03, 0xf4, 0x6e, 0x09, 0x2c, 0xe5, 0xf3, 0x2c, 0xf9,
	0xfb, 0xca, 0x1f, 0xf0, 0x27, 0xad, 0x17, 0xbb, 0xf0, 0xe3, 0x42, 0xc1, 0x97, 0xbc, 0xd5, 0xa1,
	0x6c, 0x4a, 0xf9, 0x73, 0xcb, 0xdb, 0x25, 0xf5, 0xab, 0x2d, 0xe9, 0xc7, 0x1f, 0xd1, 0x8f, 0xe5,
	0x2e, 0xf8, 0x91, 0xfb, 0x4e, 0x2c, 0xfb, 0x18, 0x4c, 0xfa, 0xf0, 0x71, 0xa9, 0xe8, 0x3b, 0x27,
	0xe9, 0xcb, 0x67, 0xe8, 0xcb, 0xcb, 0xdd, 0xf2, 0xa5, 0xe0, 0x43, 0x2b, 0xf3, 0x2b, 0x2a, 0xe9,
	0xd8, 0x9b, 0x30, 0x94, 0xfb, 0x16, 0xc8, 0xfe, 0x13, 0xfa, 0xf3, 0xc2, 0x57, 0xf0, 0xa7, 0xf8,
	0x03, 0xa3, 0xea, 0x00, 0x1f, 0x5f, 0xf1, 0x69, 0x6e, 0x7e, 0xe5, 0xa3, 0x1f, 0xfb, 0xcf, 0xdd,
	0x9a, 0xdf, 0x2f, 0x9e, 0xff, 0x5e, 0x36, 0xff, 0x27, 0x25, 0x98, 0xae, 0x77, 0xa2, 0x88, 0xa4,
	0xd7, 0x65, 0xda, 0xa7, 0x2d, 0xd2, 0xa3, 0xcf, 0x4b, 0x5f, 0xe5, 0x6b, 0x82, 0xa2, 0x6f, 0x7e,
	0xaa, 0x87, 0xc5, 0xb4, 0xcb, 0xda, 0xe7, 0x36, 0x7e, 0x9d, 0x48, 0xd7, 0x3e, 0x28, 0xc1, 0xe1,
	0x96, 0x1b, 0x6f, 0xeb, 0xd7, 0x5f, 0xba, 0xef, 0xd7, 0x01, 0x36, 0xe7, 0x96, 0x4e, 0xbd, 0x57,
	0x82, 0x71, 0x9e, 0xc8, 0xfc, 0x17, 0x4e, 0x12, 0xad, 0x93, 0xf4, 0x27, 0x55, 0xfb, 0xaf, 0xe8,
	0xcc, 0x52, 0x97, 0x7e, 0x3b, 0xd5, 0x36, 0x8e, 0xff, 0x10, 0xb3, 0xdc, 0xf1, 0x97, 0xf8, 0x94,
	0xc2, 0x9b, 0xda, 0x1e, 0xfe, 0x0b, 0xf2, 0xb9, 0x7f, 0x07, 0x00, 0x00, 0xff, 0xff, 0xd2, 0x19,
	0xf0, 0x8d, 0x6c, 0x30, 0x00, 0x00,
}
