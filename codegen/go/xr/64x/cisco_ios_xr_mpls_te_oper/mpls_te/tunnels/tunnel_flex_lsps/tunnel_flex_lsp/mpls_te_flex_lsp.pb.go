/*
Copyright 2019 Cisco Systems

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: mpls_te_flex_lsp.proto

package cisco_ios_xr_mpls_te_oper_mpls_te_tunnels_tunnel_flex_lsps_tunnel_flex_lsp

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type MplsTeFlexLsp_KEYS struct {
	Ctype                string   `protobuf:"bytes,1,opt,name=ctype,proto3" json:"ctype,omitempty"`
	TunnelId             uint32   `protobuf:"varint,2,opt,name=tunnel_id,json=tunnelId,proto3" json:"tunnel_id,omitempty"`
	TunnelName           string   `protobuf:"bytes,3,opt,name=tunnel_name,json=tunnelName,proto3" json:"tunnel_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MplsTeFlexLsp_KEYS) Reset()         { *m = MplsTeFlexLsp_KEYS{} }
func (m *MplsTeFlexLsp_KEYS) String() string { return proto.CompactTextString(m) }
func (*MplsTeFlexLsp_KEYS) ProtoMessage()    {}
func (*MplsTeFlexLsp_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_9ee32426f0782307, []int{0}
}

func (m *MplsTeFlexLsp_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsTeFlexLsp_KEYS.Unmarshal(m, b)
}
func (m *MplsTeFlexLsp_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsTeFlexLsp_KEYS.Marshal(b, m, deterministic)
}
func (m *MplsTeFlexLsp_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsTeFlexLsp_KEYS.Merge(m, src)
}
func (m *MplsTeFlexLsp_KEYS) XXX_Size() int {
	return xxx_messageInfo_MplsTeFlexLsp_KEYS.Size(m)
}
func (m *MplsTeFlexLsp_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsTeFlexLsp_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_MplsTeFlexLsp_KEYS proto.InternalMessageInfo

func (m *MplsTeFlexLsp_KEYS) GetCtype() string {
	if m != nil {
		return m.Ctype
	}
	return ""
}

func (m *MplsTeFlexLsp_KEYS) GetTunnelId() uint32 {
	if m != nil {
		return m.TunnelId
	}
	return 0
}

func (m *MplsTeFlexLsp_KEYS) GetTunnelName() string {
	if m != nil {
		return m.TunnelName
	}
	return ""
}

type RsvpMgmtEroIpv4Subobj struct {
	IsStrictRoute        bool     `protobuf:"varint,1,opt,name=is_strict_route,json=isStrictRoute,proto3" json:"is_strict_route,omitempty"`
	EroAddress           string   `protobuf:"bytes,2,opt,name=ero_address,json=eroAddress,proto3" json:"ero_address,omitempty"`
	PrefixLength         uint32   `protobuf:"varint,3,opt,name=prefix_length,json=prefixLength,proto3" json:"prefix_length,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RsvpMgmtEroIpv4Subobj) Reset()         { *m = RsvpMgmtEroIpv4Subobj{} }
func (m *RsvpMgmtEroIpv4Subobj) String() string { return proto.CompactTextString(m) }
func (*RsvpMgmtEroIpv4Subobj) ProtoMessage()    {}
func (*RsvpMgmtEroIpv4Subobj) Descriptor() ([]byte, []int) {
	return fileDescriptor_9ee32426f0782307, []int{1}
}

func (m *RsvpMgmtEroIpv4Subobj) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RsvpMgmtEroIpv4Subobj.Unmarshal(m, b)
}
func (m *RsvpMgmtEroIpv4Subobj) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RsvpMgmtEroIpv4Subobj.Marshal(b, m, deterministic)
}
func (m *RsvpMgmtEroIpv4Subobj) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RsvpMgmtEroIpv4Subobj.Merge(m, src)
}
func (m *RsvpMgmtEroIpv4Subobj) XXX_Size() int {
	return xxx_messageInfo_RsvpMgmtEroIpv4Subobj.Size(m)
}
func (m *RsvpMgmtEroIpv4Subobj) XXX_DiscardUnknown() {
	xxx_messageInfo_RsvpMgmtEroIpv4Subobj.DiscardUnknown(m)
}

var xxx_messageInfo_RsvpMgmtEroIpv4Subobj proto.InternalMessageInfo

func (m *RsvpMgmtEroIpv4Subobj) GetIsStrictRoute() bool {
	if m != nil {
		return m.IsStrictRoute
	}
	return false
}

func (m *RsvpMgmtEroIpv4Subobj) GetEroAddress() string {
	if m != nil {
		return m.EroAddress
	}
	return ""
}

func (m *RsvpMgmtEroIpv4Subobj) GetPrefixLength() uint32 {
	if m != nil {
		return m.PrefixLength
	}
	return 0
}

type RsvpMgmtEroUnnumSubobj struct {
	IsStrictRoute        bool     `protobuf:"varint,1,opt,name=is_strict_route,json=isStrictRoute,proto3" json:"is_strict_route,omitempty"`
	EroInterfaceId       uint32   `protobuf:"varint,2,opt,name=ero_interface_id,json=eroInterfaceId,proto3" json:"ero_interface_id,omitempty"`
	EroRouterId          string   `protobuf:"bytes,3,opt,name=ero_router_id,json=eroRouterId,proto3" json:"ero_router_id,omitempty"`
	Status               string   `protobuf:"bytes,4,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RsvpMgmtEroUnnumSubobj) Reset()         { *m = RsvpMgmtEroUnnumSubobj{} }
func (m *RsvpMgmtEroUnnumSubobj) String() string { return proto.CompactTextString(m) }
func (*RsvpMgmtEroUnnumSubobj) ProtoMessage()    {}
func (*RsvpMgmtEroUnnumSubobj) Descriptor() ([]byte, []int) {
	return fileDescriptor_9ee32426f0782307, []int{2}
}

func (m *RsvpMgmtEroUnnumSubobj) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RsvpMgmtEroUnnumSubobj.Unmarshal(m, b)
}
func (m *RsvpMgmtEroUnnumSubobj) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RsvpMgmtEroUnnumSubobj.Marshal(b, m, deterministic)
}
func (m *RsvpMgmtEroUnnumSubobj) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RsvpMgmtEroUnnumSubobj.Merge(m, src)
}
func (m *RsvpMgmtEroUnnumSubobj) XXX_Size() int {
	return xxx_messageInfo_RsvpMgmtEroUnnumSubobj.Size(m)
}
func (m *RsvpMgmtEroUnnumSubobj) XXX_DiscardUnknown() {
	xxx_messageInfo_RsvpMgmtEroUnnumSubobj.DiscardUnknown(m)
}

var xxx_messageInfo_RsvpMgmtEroUnnumSubobj proto.InternalMessageInfo

func (m *RsvpMgmtEroUnnumSubobj) GetIsStrictRoute() bool {
	if m != nil {
		return m.IsStrictRoute
	}
	return false
}

func (m *RsvpMgmtEroUnnumSubobj) GetEroInterfaceId() uint32 {
	if m != nil {
		return m.EroInterfaceId
	}
	return 0
}

func (m *RsvpMgmtEroUnnumSubobj) GetEroRouterId() string {
	if m != nil {
		return m.EroRouterId
	}
	return ""
}

func (m *RsvpMgmtEroUnnumSubobj) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

type RsvpMgmtEroSubobj struct {
	EroType                string                  `protobuf:"bytes,1,opt,name=ero_type,json=eroType,proto3" json:"ero_type,omitempty"`
	Ipv4EroSubObject       *RsvpMgmtEroIpv4Subobj  `protobuf:"bytes,2,opt,name=ipv4ero_sub_object,json=ipv4eroSubObject,proto3" json:"ipv4ero_sub_object,omitempty"`
	UnnumberedEroSubObject *RsvpMgmtEroUnnumSubobj `protobuf:"bytes,3,opt,name=unnumbered_ero_sub_object,json=unnumberedEroSubObject,proto3" json:"unnumbered_ero_sub_object,omitempty"`
	XXX_NoUnkeyedLiteral   struct{}                `json:"-"`
	XXX_unrecognized       []byte                  `json:"-"`
	XXX_sizecache          int32                   `json:"-"`
}

func (m *RsvpMgmtEroSubobj) Reset()         { *m = RsvpMgmtEroSubobj{} }
func (m *RsvpMgmtEroSubobj) String() string { return proto.CompactTextString(m) }
func (*RsvpMgmtEroSubobj) ProtoMessage()    {}
func (*RsvpMgmtEroSubobj) Descriptor() ([]byte, []int) {
	return fileDescriptor_9ee32426f0782307, []int{3}
}

func (m *RsvpMgmtEroSubobj) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RsvpMgmtEroSubobj.Unmarshal(m, b)
}
func (m *RsvpMgmtEroSubobj) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RsvpMgmtEroSubobj.Marshal(b, m, deterministic)
}
func (m *RsvpMgmtEroSubobj) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RsvpMgmtEroSubobj.Merge(m, src)
}
func (m *RsvpMgmtEroSubobj) XXX_Size() int {
	return xxx_messageInfo_RsvpMgmtEroSubobj.Size(m)
}
func (m *RsvpMgmtEroSubobj) XXX_DiscardUnknown() {
	xxx_messageInfo_RsvpMgmtEroSubobj.DiscardUnknown(m)
}

var xxx_messageInfo_RsvpMgmtEroSubobj proto.InternalMessageInfo

func (m *RsvpMgmtEroSubobj) GetEroType() string {
	if m != nil {
		return m.EroType
	}
	return ""
}

func (m *RsvpMgmtEroSubobj) GetIpv4EroSubObject() *RsvpMgmtEroIpv4Subobj {
	if m != nil {
		return m.Ipv4EroSubObject
	}
	return nil
}

func (m *RsvpMgmtEroSubobj) GetUnnumberedEroSubObject() *RsvpMgmtEroUnnumSubobj {
	if m != nil {
		return m.UnnumberedEroSubObject
	}
	return nil
}

type TeS2LFecT struct {
	S2LFecSubgroupId         uint32   `protobuf:"varint,1,opt,name=s2l_fec_subgroup_id,json=s2lFecSubgroupId,proto3" json:"s2l_fec_subgroup_id,omitempty"`
	S2LFecLspId              uint32   `protobuf:"varint,2,opt,name=s2l_fec_lsp_id,json=s2lFecLspId,proto3" json:"s2l_fec_lsp_id,omitempty"`
	S2LFecTunnelId           uint32   `protobuf:"varint,3,opt,name=s2l_fec_tunnel_id,json=s2lFecTunnelId,proto3" json:"s2l_fec_tunnel_id,omitempty"`
	S2LFecExtendedTunnelId   string   `protobuf:"bytes,4,opt,name=s2l_fec_extended_tunnel_id,json=s2lFecExtendedTunnelId,proto3" json:"s2l_fec_extended_tunnel_id,omitempty"`
	S2LFecSource             string   `protobuf:"bytes,5,opt,name=s2l_fec_source,json=s2lFecSource,proto3" json:"s2l_fec_source,omitempty"`
	S2LFecDest               string   `protobuf:"bytes,6,opt,name=s2l_fec_dest,json=s2lFecDest,proto3" json:"s2l_fec_dest,omitempty"`
	S2LFecP2MpId             uint32   `protobuf:"varint,7,opt,name=s2l_fec_p2mp_id,json=s2lFecP2mpId,proto3" json:"s2l_fec_p2mp_id,omitempty"`
	S2LFecSubgroupOriginator string   `protobuf:"bytes,8,opt,name=s2l_fec_subgroup_originator,json=s2lFecSubgroupOriginator,proto3" json:"s2l_fec_subgroup_originator,omitempty"`
	S2LFecCtype              string   `protobuf:"bytes,9,opt,name=s2l_fec_ctype,json=s2lFecCtype,proto3" json:"s2l_fec_ctype,omitempty"`
	S2LFecVrf                string   `protobuf:"bytes,10,opt,name=s2l_fec_vrf,json=s2lFecVrf,proto3" json:"s2l_fec_vrf,omitempty"`
	XXX_NoUnkeyedLiteral     struct{} `json:"-"`
	XXX_unrecognized         []byte   `json:"-"`
	XXX_sizecache            int32    `json:"-"`
}

func (m *TeS2LFecT) Reset()         { *m = TeS2LFecT{} }
func (m *TeS2LFecT) String() string { return proto.CompactTextString(m) }
func (*TeS2LFecT) ProtoMessage()    {}
func (*TeS2LFecT) Descriptor() ([]byte, []int) {
	return fileDescriptor_9ee32426f0782307, []int{4}
}

func (m *TeS2LFecT) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TeS2LFecT.Unmarshal(m, b)
}
func (m *TeS2LFecT) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TeS2LFecT.Marshal(b, m, deterministic)
}
func (m *TeS2LFecT) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TeS2LFecT.Merge(m, src)
}
func (m *TeS2LFecT) XXX_Size() int {
	return xxx_messageInfo_TeS2LFecT.Size(m)
}
func (m *TeS2LFecT) XXX_DiscardUnknown() {
	xxx_messageInfo_TeS2LFecT.DiscardUnknown(m)
}

var xxx_messageInfo_TeS2LFecT proto.InternalMessageInfo

func (m *TeS2LFecT) GetS2LFecSubgroupId() uint32 {
	if m != nil {
		return m.S2LFecSubgroupId
	}
	return 0
}

func (m *TeS2LFecT) GetS2LFecLspId() uint32 {
	if m != nil {
		return m.S2LFecLspId
	}
	return 0
}

func (m *TeS2LFecT) GetS2LFecTunnelId() uint32 {
	if m != nil {
		return m.S2LFecTunnelId
	}
	return 0
}

func (m *TeS2LFecT) GetS2LFecExtendedTunnelId() string {
	if m != nil {
		return m.S2LFecExtendedTunnelId
	}
	return ""
}

func (m *TeS2LFecT) GetS2LFecSource() string {
	if m != nil {
		return m.S2LFecSource
	}
	return ""
}

func (m *TeS2LFecT) GetS2LFecDest() string {
	if m != nil {
		return m.S2LFecDest
	}
	return ""
}

func (m *TeS2LFecT) GetS2LFecP2MpId() uint32 {
	if m != nil {
		return m.S2LFecP2MpId
	}
	return 0
}

func (m *TeS2LFecT) GetS2LFecSubgroupOriginator() string {
	if m != nil {
		return m.S2LFecSubgroupOriginator
	}
	return ""
}

func (m *TeS2LFecT) GetS2LFecCtype() string {
	if m != nil {
		return m.S2LFecCtype
	}
	return ""
}

func (m *TeS2LFecT) GetS2LFecVrf() string {
	if m != nil {
		return m.S2LFecVrf
	}
	return ""
}

type MplsTeS2LFlexInfo struct {
	EntryExists          bool       `protobuf:"varint,1,opt,name=entry_exists,json=entryExists,proto3" json:"entry_exists,omitempty"`
	InLabel              uint32     `protobuf:"varint,2,opt,name=in_label,json=inLabel,proto3" json:"in_label,omitempty"`
	BfdCreated           bool       `protobuf:"varint,3,opt,name=bfd_created,json=bfdCreated,proto3" json:"bfd_created,omitempty"`
	BfdUp                bool       `protobuf:"varint,4,opt,name=bfd_up,json=bfdUp,proto3" json:"bfd_up,omitempty"`
	OamCreated           bool       `protobuf:"varint,5,opt,name=oam_created,json=oamCreated,proto3" json:"oam_created,omitempty"`
	FlexFec              *TeS2LFecT `protobuf:"bytes,6,opt,name=flex_fec,json=flexFec,proto3" json:"flex_fec,omitempty"`
	BfdNextHop           string     `protobuf:"bytes,7,opt,name=bfd_next_hop,json=bfdNextHop,proto3" json:"bfd_next_hop,omitempty"`
	BfdTunIfh            string     `protobuf:"bytes,8,opt,name=bfd_tun_ifh,json=bfdTunIfh,proto3" json:"bfd_tun_ifh,omitempty"`
	BfdOutIfh            string     `protobuf:"bytes,9,opt,name=bfd_out_ifh,json=bfdOutIfh,proto3" json:"bfd_out_ifh,omitempty"`
	BfdIntLabel          uint32     `protobuf:"varint,10,opt,name=bfd_int_label,json=bfdIntLabel,proto3" json:"bfd_int_label,omitempty"`
	BfdEgressLabel       uint32     `protobuf:"varint,11,opt,name=bfd_egress_label,json=bfdEgressLabel,proto3" json:"bfd_egress_label,omitempty"`
	FaultLdiLockout      bool       `protobuf:"varint,12,opt,name=fault_ldi_lockout,json=faultLdiLockout,proto3" json:"fault_ldi_lockout,omitempty"`
	FaultLdi             bool       `protobuf:"varint,13,opt,name=fault_ldi,json=faultLdi,proto3" json:"fault_ldi,omitempty"`
	FaultLkr             bool       `protobuf:"varint,14,opt,name=fault_lkr,json=faultLkr,proto3" json:"fault_lkr,omitempty"`
	FaultAis             bool       `protobuf:"varint,15,opt,name=fault_ais,json=faultAis,proto3" json:"fault_ais,omitempty"`
	FaultTime            uint32     `protobuf:"varint,16,opt,name=fault_time,json=faultTime,proto3" json:"fault_time,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *MplsTeS2LFlexInfo) Reset()         { *m = MplsTeS2LFlexInfo{} }
func (m *MplsTeS2LFlexInfo) String() string { return proto.CompactTextString(m) }
func (*MplsTeS2LFlexInfo) ProtoMessage()    {}
func (*MplsTeS2LFlexInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_9ee32426f0782307, []int{5}
}

func (m *MplsTeS2LFlexInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsTeS2LFlexInfo.Unmarshal(m, b)
}
func (m *MplsTeS2LFlexInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsTeS2LFlexInfo.Marshal(b, m, deterministic)
}
func (m *MplsTeS2LFlexInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsTeS2LFlexInfo.Merge(m, src)
}
func (m *MplsTeS2LFlexInfo) XXX_Size() int {
	return xxx_messageInfo_MplsTeS2LFlexInfo.Size(m)
}
func (m *MplsTeS2LFlexInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsTeS2LFlexInfo.DiscardUnknown(m)
}

var xxx_messageInfo_MplsTeS2LFlexInfo proto.InternalMessageInfo

func (m *MplsTeS2LFlexInfo) GetEntryExists() bool {
	if m != nil {
		return m.EntryExists
	}
	return false
}

func (m *MplsTeS2LFlexInfo) GetInLabel() uint32 {
	if m != nil {
		return m.InLabel
	}
	return 0
}

func (m *MplsTeS2LFlexInfo) GetBfdCreated() bool {
	if m != nil {
		return m.BfdCreated
	}
	return false
}

func (m *MplsTeS2LFlexInfo) GetBfdUp() bool {
	if m != nil {
		return m.BfdUp
	}
	return false
}

func (m *MplsTeS2LFlexInfo) GetOamCreated() bool {
	if m != nil {
		return m.OamCreated
	}
	return false
}

func (m *MplsTeS2LFlexInfo) GetFlexFec() *TeS2LFecT {
	if m != nil {
		return m.FlexFec
	}
	return nil
}

func (m *MplsTeS2LFlexInfo) GetBfdNextHop() string {
	if m != nil {
		return m.BfdNextHop
	}
	return ""
}

func (m *MplsTeS2LFlexInfo) GetBfdTunIfh() string {
	if m != nil {
		return m.BfdTunIfh
	}
	return ""
}

func (m *MplsTeS2LFlexInfo) GetBfdOutIfh() string {
	if m != nil {
		return m.BfdOutIfh
	}
	return ""
}

func (m *MplsTeS2LFlexInfo) GetBfdIntLabel() uint32 {
	if m != nil {
		return m.BfdIntLabel
	}
	return 0
}

func (m *MplsTeS2LFlexInfo) GetBfdEgressLabel() uint32 {
	if m != nil {
		return m.BfdEgressLabel
	}
	return 0
}

func (m *MplsTeS2LFlexInfo) GetFaultLdiLockout() bool {
	if m != nil {
		return m.FaultLdiLockout
	}
	return false
}

func (m *MplsTeS2LFlexInfo) GetFaultLdi() bool {
	if m != nil {
		return m.FaultLdi
	}
	return false
}

func (m *MplsTeS2LFlexInfo) GetFaultLkr() bool {
	if m != nil {
		return m.FaultLkr
	}
	return false
}

func (m *MplsTeS2LFlexInfo) GetFaultAis() bool {
	if m != nil {
		return m.FaultAis
	}
	return false
}

func (m *MplsTeS2LFlexInfo) GetFaultTime() uint32 {
	if m != nil {
		return m.FaultTime
	}
	return 0
}

type MplsTeS2LAssociationObject struct {
	S2LAssociationType    uint32   `protobuf:"varint,1,opt,name=s2l_association_type,json=s2lAssociationType,proto3" json:"s2l_association_type,omitempty"`
	S2LAssociationTieRole string   `protobuf:"bytes,2,opt,name=s2l_association_tie_role,json=s2lAssociationTieRole,proto3" json:"s2l_association_tie_role,omitempty"`
	S2LAssociationId      uint32   `protobuf:"varint,3,opt,name=s2l_association_id,json=s2lAssociationId,proto3" json:"s2l_association_id,omitempty"`
	S2LAssociationSource  string   `protobuf:"bytes,4,opt,name=s2l_association_source,json=s2lAssociationSource,proto3" json:"s2l_association_source,omitempty"`
	S2LGlobalSource       uint32   `protobuf:"varint,5,opt,name=s2l_global_source,json=s2lGlobalSource,proto3" json:"s2l_global_source,omitempty"`
	S2LExtendedId         []uint32 `protobuf:"varint,6,rep,packed,name=s2l_extended_id,json=s2lExtendedId,proto3" json:"s2l_extended_id,omitempty"`
	XXX_NoUnkeyedLiteral  struct{} `json:"-"`
	XXX_unrecognized      []byte   `json:"-"`
	XXX_sizecache         int32    `json:"-"`
}

func (m *MplsTeS2LAssociationObject) Reset()         { *m = MplsTeS2LAssociationObject{} }
func (m *MplsTeS2LAssociationObject) String() string { return proto.CompactTextString(m) }
func (*MplsTeS2LAssociationObject) ProtoMessage()    {}
func (*MplsTeS2LAssociationObject) Descriptor() ([]byte, []int) {
	return fileDescriptor_9ee32426f0782307, []int{6}
}

func (m *MplsTeS2LAssociationObject) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsTeS2LAssociationObject.Unmarshal(m, b)
}
func (m *MplsTeS2LAssociationObject) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsTeS2LAssociationObject.Marshal(b, m, deterministic)
}
func (m *MplsTeS2LAssociationObject) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsTeS2LAssociationObject.Merge(m, src)
}
func (m *MplsTeS2LAssociationObject) XXX_Size() int {
	return xxx_messageInfo_MplsTeS2LAssociationObject.Size(m)
}
func (m *MplsTeS2LAssociationObject) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsTeS2LAssociationObject.DiscardUnknown(m)
}

var xxx_messageInfo_MplsTeS2LAssociationObject proto.InternalMessageInfo

func (m *MplsTeS2LAssociationObject) GetS2LAssociationType() uint32 {
	if m != nil {
		return m.S2LAssociationType
	}
	return 0
}

func (m *MplsTeS2LAssociationObject) GetS2LAssociationTieRole() string {
	if m != nil {
		return m.S2LAssociationTieRole
	}
	return ""
}

func (m *MplsTeS2LAssociationObject) GetS2LAssociationId() uint32 {
	if m != nil {
		return m.S2LAssociationId
	}
	return 0
}

func (m *MplsTeS2LAssociationObject) GetS2LAssociationSource() string {
	if m != nil {
		return m.S2LAssociationSource
	}
	return ""
}

func (m *MplsTeS2LAssociationObject) GetS2LGlobalSource() uint32 {
	if m != nil {
		return m.S2LGlobalSource
	}
	return 0
}

func (m *MplsTeS2LAssociationObject) GetS2LExtendedId() []uint32 {
	if m != nil {
		return m.S2LExtendedId
	}
	return nil
}

type MplsTeS2LProtectionObject struct {
	S2LSecondary         bool     `protobuf:"varint,1,opt,name=s2l_secondary,json=s2lSecondary,proto3" json:"s2l_secondary,omitempty"`
	S2LProtecting        bool     `protobuf:"varint,2,opt,name=s2l_protecting,json=s2lProtecting,proto3" json:"s2l_protecting,omitempty"`
	S2LNotification      bool     `protobuf:"varint,3,opt,name=s2l_notification,json=s2lNotification,proto3" json:"s2l_notification,omitempty"`
	S2LOperational       bool     `protobuf:"varint,4,opt,name=s2l_operational,json=s2lOperational,proto3" json:"s2l_operational,omitempty"`
	Enhanced             bool     `protobuf:"varint,5,opt,name=enhanced,proto3" json:"enhanced,omitempty"`
	Ded1Plus1            bool     `protobuf:"varint,6,opt,name=ded1_plus1,json=ded1Plus1,proto3" json:"ded1_plus1,omitempty"`
	Ded1To1              bool     `protobuf:"varint,7,opt,name=ded1_to1,json=ded1To1,proto3" json:"ded1_to1,omitempty"`
	Shared               bool     `protobuf:"varint,8,opt,name=shared,proto3" json:"shared,omitempty"`
	LinkUnprotected      bool     `protobuf:"varint,9,opt,name=link_unprotected,json=linkUnprotected,proto3" json:"link_unprotected,omitempty"`
	ExtraTraffic         bool     `protobuf:"varint,10,opt,name=extra_traffic,json=extraTraffic,proto3" json:"extra_traffic,omitempty"`
	Any                  bool     `protobuf:"varint,11,opt,name=any,proto3" json:"any,omitempty"`
	Rerouting            bool     `protobuf:"varint,12,opt,name=rerouting,proto3" json:"rerouting,omitempty"`
	ReroutingNoEt        bool     `protobuf:"varint,13,opt,name=rerouting_no_et,json=reroutingNoEt,proto3" json:"rerouting_no_et,omitempty"`
	OneToNProtectionEt   bool     `protobuf:"varint,14,opt,name=one_to_n_protection_et,json=oneToNProtectionEt,proto3" json:"one_to_n_protection_et,omitempty"`
	OnePlusOneUni        bool     `protobuf:"varint,15,opt,name=one_plus_one_uni,json=onePlusOneUni,proto3" json:"one_plus_one_uni,omitempty"`
	OnePlusOneBi         bool     `protobuf:"varint,16,opt,name=one_plus_one_bi,json=onePlusOneBi,proto3" json:"one_plus_one_bi,omitempty"`
	LspUnprotected       bool     `protobuf:"varint,17,opt,name=lsp_unprotected,json=lspUnprotected,proto3" json:"lsp_unprotected,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MplsTeS2LProtectionObject) Reset()         { *m = MplsTeS2LProtectionObject{} }
func (m *MplsTeS2LProtectionObject) String() string { return proto.CompactTextString(m) }
func (*MplsTeS2LProtectionObject) ProtoMessage()    {}
func (*MplsTeS2LProtectionObject) Descriptor() ([]byte, []int) {
	return fileDescriptor_9ee32426f0782307, []int{7}
}

func (m *MplsTeS2LProtectionObject) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsTeS2LProtectionObject.Unmarshal(m, b)
}
func (m *MplsTeS2LProtectionObject) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsTeS2LProtectionObject.Marshal(b, m, deterministic)
}
func (m *MplsTeS2LProtectionObject) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsTeS2LProtectionObject.Merge(m, src)
}
func (m *MplsTeS2LProtectionObject) XXX_Size() int {
	return xxx_messageInfo_MplsTeS2LProtectionObject.Size(m)
}
func (m *MplsTeS2LProtectionObject) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsTeS2LProtectionObject.DiscardUnknown(m)
}

var xxx_messageInfo_MplsTeS2LProtectionObject proto.InternalMessageInfo

func (m *MplsTeS2LProtectionObject) GetS2LSecondary() bool {
	if m != nil {
		return m.S2LSecondary
	}
	return false
}

func (m *MplsTeS2LProtectionObject) GetS2LProtecting() bool {
	if m != nil {
		return m.S2LProtecting
	}
	return false
}

func (m *MplsTeS2LProtectionObject) GetS2LNotification() bool {
	if m != nil {
		return m.S2LNotification
	}
	return false
}

func (m *MplsTeS2LProtectionObject) GetS2LOperational() bool {
	if m != nil {
		return m.S2LOperational
	}
	return false
}

func (m *MplsTeS2LProtectionObject) GetEnhanced() bool {
	if m != nil {
		return m.Enhanced
	}
	return false
}

func (m *MplsTeS2LProtectionObject) GetDed1Plus1() bool {
	if m != nil {
		return m.Ded1Plus1
	}
	return false
}

func (m *MplsTeS2LProtectionObject) GetDed1To1() bool {
	if m != nil {
		return m.Ded1To1
	}
	return false
}

func (m *MplsTeS2LProtectionObject) GetShared() bool {
	if m != nil {
		return m.Shared
	}
	return false
}

func (m *MplsTeS2LProtectionObject) GetLinkUnprotected() bool {
	if m != nil {
		return m.LinkUnprotected
	}
	return false
}

func (m *MplsTeS2LProtectionObject) GetExtraTraffic() bool {
	if m != nil {
		return m.ExtraTraffic
	}
	return false
}

func (m *MplsTeS2LProtectionObject) GetAny() bool {
	if m != nil {
		return m.Any
	}
	return false
}

func (m *MplsTeS2LProtectionObject) GetRerouting() bool {
	if m != nil {
		return m.Rerouting
	}
	return false
}

func (m *MplsTeS2LProtectionObject) GetReroutingNoEt() bool {
	if m != nil {
		return m.ReroutingNoEt
	}
	return false
}

func (m *MplsTeS2LProtectionObject) GetOneToNProtectionEt() bool {
	if m != nil {
		return m.OneToNProtectionEt
	}
	return false
}

func (m *MplsTeS2LProtectionObject) GetOnePlusOneUni() bool {
	if m != nil {
		return m.OnePlusOneUni
	}
	return false
}

func (m *MplsTeS2LProtectionObject) GetOnePlusOneBi() bool {
	if m != nil {
		return m.OnePlusOneBi
	}
	return false
}

func (m *MplsTeS2LProtectionObject) GetLspUnprotected() bool {
	if m != nil {
		return m.LspUnprotected
	}
	return false
}

type TeLspFecCtypeDataT struct {
	FecCtype             string   `protobuf:"bytes,1,opt,name=fec_ctype,json=fecCtype,proto3" json:"fec_ctype,omitempty"`
	P2PLspDestination    string   `protobuf:"bytes,2,opt,name=p2p_lsp_destination,json=p2pLspDestination,proto3" json:"p2p_lsp_destination,omitempty"`
	FecDestinationP2MpId uint32   `protobuf:"varint,3,opt,name=fec_destination_p2mp_id,json=fecDestinationP2mpId,proto3" json:"fec_destination_p2mp_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TeLspFecCtypeDataT) Reset()         { *m = TeLspFecCtypeDataT{} }
func (m *TeLspFecCtypeDataT) String() string { return proto.CompactTextString(m) }
func (*TeLspFecCtypeDataT) ProtoMessage()    {}
func (*TeLspFecCtypeDataT) Descriptor() ([]byte, []int) {
	return fileDescriptor_9ee32426f0782307, []int{8}
}

func (m *TeLspFecCtypeDataT) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TeLspFecCtypeDataT.Unmarshal(m, b)
}
func (m *TeLspFecCtypeDataT) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TeLspFecCtypeDataT.Marshal(b, m, deterministic)
}
func (m *TeLspFecCtypeDataT) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TeLspFecCtypeDataT.Merge(m, src)
}
func (m *TeLspFecCtypeDataT) XXX_Size() int {
	return xxx_messageInfo_TeLspFecCtypeDataT.Size(m)
}
func (m *TeLspFecCtypeDataT) XXX_DiscardUnknown() {
	xxx_messageInfo_TeLspFecCtypeDataT.DiscardUnknown(m)
}

var xxx_messageInfo_TeLspFecCtypeDataT proto.InternalMessageInfo

func (m *TeLspFecCtypeDataT) GetFecCtype() string {
	if m != nil {
		return m.FecCtype
	}
	return ""
}

func (m *TeLspFecCtypeDataT) GetP2PLspDestination() string {
	if m != nil {
		return m.P2PLspDestination
	}
	return ""
}

func (m *TeLspFecCtypeDataT) GetFecDestinationP2MpId() uint32 {
	if m != nil {
		return m.FecDestinationP2MpId
	}
	return 0
}

type TeLspFecT struct {
	FecLspId             uint32              `protobuf:"varint,1,opt,name=fec_lsp_id,json=fecLspId,proto3" json:"fec_lsp_id,omitempty"`
	FecTunnelId          uint32              `protobuf:"varint,2,opt,name=fec_tunnel_id,json=fecTunnelId,proto3" json:"fec_tunnel_id,omitempty"`
	FecExtendedTunnelId  string              `protobuf:"bytes,3,opt,name=fec_extended_tunnel_id,json=fecExtendedTunnelId,proto3" json:"fec_extended_tunnel_id,omitempty"`
	FecSource            string              `protobuf:"bytes,4,opt,name=fec_source,json=fecSource,proto3" json:"fec_source,omitempty"`
	FecDestinationInfo   *TeLspFecCtypeDataT `protobuf:"bytes,5,opt,name=fec_destination_info,json=fecDestinationInfo,proto3" json:"fec_destination_info,omitempty"`
	FecVrf               string              `protobuf:"bytes,6,opt,name=fec_vrf,json=fecVrf,proto3" json:"fec_vrf,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *TeLspFecT) Reset()         { *m = TeLspFecT{} }
func (m *TeLspFecT) String() string { return proto.CompactTextString(m) }
func (*TeLspFecT) ProtoMessage()    {}
func (*TeLspFecT) Descriptor() ([]byte, []int) {
	return fileDescriptor_9ee32426f0782307, []int{9}
}

func (m *TeLspFecT) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TeLspFecT.Unmarshal(m, b)
}
func (m *TeLspFecT) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TeLspFecT.Marshal(b, m, deterministic)
}
func (m *TeLspFecT) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TeLspFecT.Merge(m, src)
}
func (m *TeLspFecT) XXX_Size() int {
	return xxx_messageInfo_TeLspFecT.Size(m)
}
func (m *TeLspFecT) XXX_DiscardUnknown() {
	xxx_messageInfo_TeLspFecT.DiscardUnknown(m)
}

var xxx_messageInfo_TeLspFecT proto.InternalMessageInfo

func (m *TeLspFecT) GetFecLspId() uint32 {
	if m != nil {
		return m.FecLspId
	}
	return 0
}

func (m *TeLspFecT) GetFecTunnelId() uint32 {
	if m != nil {
		return m.FecTunnelId
	}
	return 0
}

func (m *TeLspFecT) GetFecExtendedTunnelId() string {
	if m != nil {
		return m.FecExtendedTunnelId
	}
	return ""
}

func (m *TeLspFecT) GetFecSource() string {
	if m != nil {
		return m.FecSource
	}
	return ""
}

func (m *TeLspFecT) GetFecDestinationInfo() *TeLspFecCtypeDataT {
	if m != nil {
		return m.FecDestinationInfo
	}
	return nil
}

func (m *TeLspFecT) GetFecVrf() string {
	if m != nil {
		return m.FecVrf
	}
	return ""
}

type MplsTeFlexLspRevLsp struct {
	ReverseLspPresent    bool                        `protobuf:"varint,1,opt,name=reverse_lsp_present,json=reverseLspPresent,proto3" json:"reverse_lsp_present,omitempty"`
	ReverseLspConnected  bool                        `protobuf:"varint,2,opt,name=reverse_lsp_connected,json=reverseLspConnected,proto3" json:"reverse_lsp_connected,omitempty"`
	ReverseLspFec        *TeLspFecT                  `protobuf:"bytes,3,opt,name=reverse_lsp_fec,json=reverseLspFec,proto3" json:"reverse_lsp_fec,omitempty"`
	Association          *MplsTeS2LAssociationObject `protobuf:"bytes,4,opt,name=association,proto3" json:"association,omitempty"`
	Protection           *MplsTeS2LProtectionObject  `protobuf:"bytes,5,opt,name=protection,proto3" json:"protection,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *MplsTeFlexLspRevLsp) Reset()         { *m = MplsTeFlexLspRevLsp{} }
func (m *MplsTeFlexLspRevLsp) String() string { return proto.CompactTextString(m) }
func (*MplsTeFlexLspRevLsp) ProtoMessage()    {}
func (*MplsTeFlexLspRevLsp) Descriptor() ([]byte, []int) {
	return fileDescriptor_9ee32426f0782307, []int{10}
}

func (m *MplsTeFlexLspRevLsp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsTeFlexLspRevLsp.Unmarshal(m, b)
}
func (m *MplsTeFlexLspRevLsp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsTeFlexLspRevLsp.Marshal(b, m, deterministic)
}
func (m *MplsTeFlexLspRevLsp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsTeFlexLspRevLsp.Merge(m, src)
}
func (m *MplsTeFlexLspRevLsp) XXX_Size() int {
	return xxx_messageInfo_MplsTeFlexLspRevLsp.Size(m)
}
func (m *MplsTeFlexLspRevLsp) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsTeFlexLspRevLsp.DiscardUnknown(m)
}

var xxx_messageInfo_MplsTeFlexLspRevLsp proto.InternalMessageInfo

func (m *MplsTeFlexLspRevLsp) GetReverseLspPresent() bool {
	if m != nil {
		return m.ReverseLspPresent
	}
	return false
}

func (m *MplsTeFlexLspRevLsp) GetReverseLspConnected() bool {
	if m != nil {
		return m.ReverseLspConnected
	}
	return false
}

func (m *MplsTeFlexLspRevLsp) GetReverseLspFec() *TeLspFecT {
	if m != nil {
		return m.ReverseLspFec
	}
	return nil
}

func (m *MplsTeFlexLspRevLsp) GetAssociation() *MplsTeS2LAssociationObject {
	if m != nil {
		return m.Association
	}
	return nil
}

func (m *MplsTeFlexLspRevLsp) GetProtection() *MplsTeS2LProtectionObject {
	if m != nil {
		return m.Protection
	}
	return nil
}

type MplsTeFlexLspLsp struct {
	IsOperational        bool                        `protobuf:"varint,1,opt,name=is_operational,json=isOperational,proto3" json:"is_operational,omitempty"`
	LspUptime            uint32                      `protobuf:"varint,2,opt,name=lsp_uptime,json=lspUptime,proto3" json:"lsp_uptime,omitempty"`
	PathProtectionLspId  uint32                      `protobuf:"varint,3,opt,name=path_protection_lsp_id,json=pathProtectionLspId,proto3" json:"path_protection_lsp_id,omitempty"`
	LspMode              string                      `protobuf:"bytes,4,opt,name=lsp_mode,json=lspMode,proto3" json:"lsp_mode,omitempty"`
	LspLocalLabel        uint32                      `protobuf:"varint,5,opt,name=lsp_local_label,json=lspLocalLabel,proto3" json:"lsp_local_label,omitempty"`
	LspOutputInterface   string                      `protobuf:"bytes,6,opt,name=lsp_output_interface,json=lspOutputInterface,proto3" json:"lsp_output_interface,omitempty"`
	LspOutputLabel       uint32                      `protobuf:"varint,7,opt,name=lsp_output_label,json=lspOutputLabel,proto3" json:"lsp_output_label,omitempty"`
	LspHop               []*RsvpMgmtEroSubobj        `protobuf:"bytes,8,rep,name=lsp_hop,json=lspHop,proto3" json:"lsp_hop,omitempty"`
	LspState             string                      `protobuf:"bytes,9,opt,name=lsp_state,json=lspState,proto3" json:"lsp_state,omitempty"`
	FlexInfo             *MplsTeS2LFlexInfo          `protobuf:"bytes,10,opt,name=flex_info,json=flexInfo,proto3" json:"flex_info,omitempty"`
	Association          *MplsTeS2LAssociationObject `protobuf:"bytes,11,opt,name=association,proto3" json:"association,omitempty"`
	Protection           *MplsTeS2LProtectionObject  `protobuf:"bytes,12,opt,name=protection,proto3" json:"protection,omitempty"`
	ReverseLsp           *MplsTeFlexLspRevLsp        `protobuf:"bytes,13,opt,name=reverse_lsp,json=reverseLsp,proto3" json:"reverse_lsp,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *MplsTeFlexLspLsp) Reset()         { *m = MplsTeFlexLspLsp{} }
func (m *MplsTeFlexLspLsp) String() string { return proto.CompactTextString(m) }
func (*MplsTeFlexLspLsp) ProtoMessage()    {}
func (*MplsTeFlexLspLsp) Descriptor() ([]byte, []int) {
	return fileDescriptor_9ee32426f0782307, []int{11}
}

func (m *MplsTeFlexLspLsp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsTeFlexLspLsp.Unmarshal(m, b)
}
func (m *MplsTeFlexLspLsp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsTeFlexLspLsp.Marshal(b, m, deterministic)
}
func (m *MplsTeFlexLspLsp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsTeFlexLspLsp.Merge(m, src)
}
func (m *MplsTeFlexLspLsp) XXX_Size() int {
	return xxx_messageInfo_MplsTeFlexLspLsp.Size(m)
}
func (m *MplsTeFlexLspLsp) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsTeFlexLspLsp.DiscardUnknown(m)
}

var xxx_messageInfo_MplsTeFlexLspLsp proto.InternalMessageInfo

func (m *MplsTeFlexLspLsp) GetIsOperational() bool {
	if m != nil {
		return m.IsOperational
	}
	return false
}

func (m *MplsTeFlexLspLsp) GetLspUptime() uint32 {
	if m != nil {
		return m.LspUptime
	}
	return 0
}

func (m *MplsTeFlexLspLsp) GetPathProtectionLspId() uint32 {
	if m != nil {
		return m.PathProtectionLspId
	}
	return 0
}

func (m *MplsTeFlexLspLsp) GetLspMode() string {
	if m != nil {
		return m.LspMode
	}
	return ""
}

func (m *MplsTeFlexLspLsp) GetLspLocalLabel() uint32 {
	if m != nil {
		return m.LspLocalLabel
	}
	return 0
}

func (m *MplsTeFlexLspLsp) GetLspOutputInterface() string {
	if m != nil {
		return m.LspOutputInterface
	}
	return ""
}

func (m *MplsTeFlexLspLsp) GetLspOutputLabel() uint32 {
	if m != nil {
		return m.LspOutputLabel
	}
	return 0
}

func (m *MplsTeFlexLspLsp) GetLspHop() []*RsvpMgmtEroSubobj {
	if m != nil {
		return m.LspHop
	}
	return nil
}

func (m *MplsTeFlexLspLsp) GetLspState() string {
	if m != nil {
		return m.LspState
	}
	return ""
}

func (m *MplsTeFlexLspLsp) GetFlexInfo() *MplsTeS2LFlexInfo {
	if m != nil {
		return m.FlexInfo
	}
	return nil
}

func (m *MplsTeFlexLspLsp) GetAssociation() *MplsTeS2LAssociationObject {
	if m != nil {
		return m.Association
	}
	return nil
}

func (m *MplsTeFlexLspLsp) GetProtection() *MplsTeS2LProtectionObject {
	if m != nil {
		return m.Protection
	}
	return nil
}

func (m *MplsTeFlexLspLsp) GetReverseLsp() *MplsTeFlexLspRevLsp {
	if m != nil {
		return m.ReverseLsp
	}
	return nil
}

type MplsTeFlexLsp struct {
	IsTunnelUp           bool              `protobuf:"varint,50,opt,name=is_tunnel_up,json=isTunnelUp,proto3" json:"is_tunnel_up,omitempty"`
	TunId                uint32            `protobuf:"varint,51,opt,name=tun_id,json=tunId,proto3" json:"tun_id,omitempty"`
	SourceAddress        string            `protobuf:"bytes,52,opt,name=source_address,json=sourceAddress,proto3" json:"source_address,omitempty"`
	DestinationAddress   string            `protobuf:"bytes,53,opt,name=destination_address,json=destinationAddress,proto3" json:"destination_address,omitempty"`
	ExtendedTunnelId     string            `protobuf:"bytes,54,opt,name=extended_tunnel_id,json=extendedTunnelId,proto3" json:"extended_tunnel_id,omitempty"`
	WorkingLsp           *MplsTeFlexLspLsp `protobuf:"bytes,55,opt,name=working_lsp,json=workingLsp,proto3" json:"working_lsp,omitempty"`
	ProtectLsp           *MplsTeFlexLspLsp `protobuf:"bytes,56,opt,name=protect_lsp,json=protectLsp,proto3" json:"protect_lsp,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *MplsTeFlexLsp) Reset()         { *m = MplsTeFlexLsp{} }
func (m *MplsTeFlexLsp) String() string { return proto.CompactTextString(m) }
func (*MplsTeFlexLsp) ProtoMessage()    {}
func (*MplsTeFlexLsp) Descriptor() ([]byte, []int) {
	return fileDescriptor_9ee32426f0782307, []int{12}
}

func (m *MplsTeFlexLsp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsTeFlexLsp.Unmarshal(m, b)
}
func (m *MplsTeFlexLsp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsTeFlexLsp.Marshal(b, m, deterministic)
}
func (m *MplsTeFlexLsp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsTeFlexLsp.Merge(m, src)
}
func (m *MplsTeFlexLsp) XXX_Size() int {
	return xxx_messageInfo_MplsTeFlexLsp.Size(m)
}
func (m *MplsTeFlexLsp) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsTeFlexLsp.DiscardUnknown(m)
}

var xxx_messageInfo_MplsTeFlexLsp proto.InternalMessageInfo

func (m *MplsTeFlexLsp) GetIsTunnelUp() bool {
	if m != nil {
		return m.IsTunnelUp
	}
	return false
}

func (m *MplsTeFlexLsp) GetTunId() uint32 {
	if m != nil {
		return m.TunId
	}
	return 0
}

func (m *MplsTeFlexLsp) GetSourceAddress() string {
	if m != nil {
		return m.SourceAddress
	}
	return ""
}

func (m *MplsTeFlexLsp) GetDestinationAddress() string {
	if m != nil {
		return m.DestinationAddress
	}
	return ""
}

func (m *MplsTeFlexLsp) GetExtendedTunnelId() string {
	if m != nil {
		return m.ExtendedTunnelId
	}
	return ""
}

func (m *MplsTeFlexLsp) GetWorkingLsp() *MplsTeFlexLspLsp {
	if m != nil {
		return m.WorkingLsp
	}
	return nil
}

func (m *MplsTeFlexLsp) GetProtectLsp() *MplsTeFlexLspLsp {
	if m != nil {
		return m.ProtectLsp
	}
	return nil
}

func init() {
	proto.RegisterType((*MplsTeFlexLsp_KEYS)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.tunnels.tunnel_flex_lsps.tunnel_flex_lsp.mpls_te_flex_lsp_KEYS")
	proto.RegisterType((*RsvpMgmtEroIpv4Subobj)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.tunnels.tunnel_flex_lsps.tunnel_flex_lsp.rsvp_mgmt_ero_ipv4_subobj")
	proto.RegisterType((*RsvpMgmtEroUnnumSubobj)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.tunnels.tunnel_flex_lsps.tunnel_flex_lsp.rsvp_mgmt_ero_unnum_subobj")
	proto.RegisterType((*RsvpMgmtEroSubobj)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.tunnels.tunnel_flex_lsps.tunnel_flex_lsp.rsvp_mgmt_ero_subobj")
	proto.RegisterType((*TeS2LFecT)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.tunnels.tunnel_flex_lsps.tunnel_flex_lsp.te_s2l_fec_t")
	proto.RegisterType((*MplsTeS2LFlexInfo)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.tunnels.tunnel_flex_lsps.tunnel_flex_lsp.mpls_te_s2l_flex_info")
	proto.RegisterType((*MplsTeS2LAssociationObject)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.tunnels.tunnel_flex_lsps.tunnel_flex_lsp.mpls_te_s2l_association_object")
	proto.RegisterType((*MplsTeS2LProtectionObject)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.tunnels.tunnel_flex_lsps.tunnel_flex_lsp.mpls_te_s2l_protection_object")
	proto.RegisterType((*TeLspFecCtypeDataT)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.tunnels.tunnel_flex_lsps.tunnel_flex_lsp.te_lsp_fec_ctype_data_t")
	proto.RegisterType((*TeLspFecT)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.tunnels.tunnel_flex_lsps.tunnel_flex_lsp.te_lsp_fec_t")
	proto.RegisterType((*MplsTeFlexLspRevLsp)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.tunnels.tunnel_flex_lsps.tunnel_flex_lsp.mpls_te_flex_lsp_rev_lsp")
	proto.RegisterType((*MplsTeFlexLspLsp)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.tunnels.tunnel_flex_lsps.tunnel_flex_lsp.mpls_te_flex_lsp_lsp")
	proto.RegisterType((*MplsTeFlexLsp)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.tunnels.tunnel_flex_lsps.tunnel_flex_lsp.mpls_te_flex_lsp")
}

func init() { proto.RegisterFile("mpls_te_flex_lsp.proto", fileDescriptor_9ee32426f0782307) }

var fileDescriptor_9ee32426f0782307 = []byte{
	// 1911 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xcc, 0x58, 0x41, 0x6f, 0x1c, 0x49,
	0x15, 0xd6, 0xc4, 0xb1, 0xdd, 0xf3, 0x66, 0xc6, 0x1e, 0x97, 0x1d, 0xa7, 0x93, 0x6c, 0x16, 0x33,
	0x21, 0xbb, 0xde, 0xd5, 0x62, 0x36, 0x93, 0x2c, 0x8b, 0x90, 0x38, 0x84, 0xac, 0x17, 0x06, 0x06,
	0xdb, 0x6a, 0x3b, 0x08, 0x4e, 0xb5, 0x3d, 0xdd, 0xd5, 0x76, 0xc5, 0x3d, 0x5d, 0xad, 0xae, 0x6a,
	0x63, 0x5f, 0x10, 0x20, 0x71, 0x58, 0x89, 0x1b, 0xe2, 0x06, 0x07, 0xae, 0xfc, 0x05, 0x8e, 0xfc,
	0x06, 0x0e, 0xfc, 0x86, 0x3d, 0x73, 0x47, 0xef, 0x55, 0x75, 0x4f, 0xcf, 0x38, 0x41, 0x42, 0x8a,
	0x81, 0x93, 0x5d, 0xef, 0x7d, 0xaf, 0xeb, 0xd5, 0x7b, 0xf5, 0xbd, 0xf7, 0x6a, 0x60, 0x7b, 0x9a,
	0xa7, 0x9a, 0x1b, 0xc1, 0x93, 0x54, 0x5c, 0xf2, 0x54, 0xe7, 0x7b, 0x79, 0xa1, 0x8c, 0x62, 0x3f,
	0x8a, 0xa4, 0x8e, 0x14, 0x97, 0x4a, 0xf3, 0xcb, 0x82, 0x57, 0x20, 0x95, 0x8b, 0x62, 0xcf, 0x2d,
	0xf6, 0x4c, 0x99, 0x65, 0x22, 0xd5, 0xee, 0x6f, 0xfd, 0x81, 0x6b, 0x82, 0xc1, 0x39, 0xdc, 0x59,
	0xdc, 0x85, 0xff, 0x78, 0xff, 0xe7, 0xc7, 0x6c, 0x0b, 0x96, 0x23, 0x73, 0x95, 0x0b, 0xbf, 0xb5,
	0xd3, 0xda, 0x6d, 0x07, 0x76, 0xc1, 0x1e, 0x40, 0xdb, 0x7d, 0x41, 0xc6, 0xfe, 0xad, 0x9d, 0xd6,
	0x6e, 0x2f, 0xf0, 0xac, 0x60, 0x14, 0xb3, 0xaf, 0x41, 0xc7, 0x29, 0xb3, 0x70, 0x2a, 0xfc, 0x25,
	0x32, 0x04, 0x2b, 0x3a, 0x08, 0xa7, 0x62, 0xf0, 0x65, 0x0b, 0xee, 0x15, 0xfa, 0x22, 0xe7, 0xd3,
	0xd3, 0xa9, 0xe1, 0xa2, 0x50, 0x5c, 0xe6, 0x17, 0xcf, 0xb8, 0x2e, 0x27, 0x6a, 0xf2, 0x8a, 0xbd,
	0x07, 0xeb, 0x52, 0x73, 0x6d, 0x0a, 0x19, 0x19, 0x5e, 0xa8, 0xd2, 0xd8, 0xbd, 0xbd, 0xa0, 0x27,
	0xf5, 0x31, 0x49, 0x03, 0x14, 0xe2, 0x36, 0x68, 0x1a, 0xc6, 0x71, 0x21, 0xb4, 0x26, 0x2f, 0xda,
	0x01, 0x88, 0x42, 0x3d, 0xb7, 0x12, 0xf6, 0x08, 0x7a, 0x79, 0x21, 0x12, 0x79, 0xc9, 0x53, 0x91,
	0x9d, 0x9a, 0x33, 0xf2, 0xa4, 0x17, 0x74, 0xad, 0x70, 0x4c, 0xb2, 0xc1, 0x5f, 0x5a, 0x70, 0x7f,
	0xde, 0x97, 0x32, 0xcb, 0xca, 0xe9, 0x7f, 0xea, 0xcc, 0x2e, 0xf4, 0xe9, 0x1c, 0x99, 0x11, 0x45,
	0x12, 0x46, 0x62, 0x16, 0x97, 0x35, 0x51, 0xa8, 0x51, 0x25, 0x1e, 0xc5, 0x6c, 0x00, 0x3d, 0x44,
	0xd2, 0xb7, 0x0a, 0x84, 0xd9, 0xf8, 0xe0, 0x59, 0xe8, 0x53, 0xc5, 0x28, 0x66, 0xdb, 0xb0, 0xa2,
	0x4d, 0x68, 0x4a, 0xed, 0xdf, 0x26, 0xa5, 0x5b, 0x0d, 0xbe, 0xba, 0x05, 0x5b, 0xf3, 0xce, 0x3a,
	0x37, 0xef, 0x81, 0x87, 0xab, 0x46, 0xa2, 0x56, 0x45, 0xa1, 0x4e, 0x30, 0x55, 0xbf, 0x6f, 0x01,
	0xc3, 0xf0, 0x3a, 0x34, 0x57, 0x93, 0x57, 0x22, 0x32, 0xe4, 0x5c, 0x67, 0x28, 0xf6, 0xde, 0xde,
	0x1d, 0xda, 0x7b, 0x63, 0x4a, 0x83, 0xbe, 0x73, 0xe0, 0xb8, 0x9c, 0x1c, 0xd2, 0xf6, 0xec, 0xcf,
	0x2d, 0xb8, 0x47, 0x81, 0x9e, 0x88, 0x42, 0xc4, 0x7c, 0xc1, 0xb9, 0x25, 0x72, 0x2e, 0xb9, 0x39,
	0xe7, 0x9a, 0x39, 0x0e, 0xb6, 0x67, 0x8e, 0xec, 0x37, 0x7c, 0x1c, 0xfc, 0x75, 0x09, 0xba, 0x46,
	0x70, 0x3d, 0x4c, 0x79, 0x22, 0x22, 0x6e, 0xd8, 0x37, 0x61, 0xb3, 0x5a, 0xe8, 0x72, 0x72, 0x5a,
	0xa8, 0x32, 0xc7, 0x04, 0xb6, 0x28, 0xcf, 0x7d, 0x3d, 0x4c, 0x3f, 0x17, 0xd1, 0xb1, 0x53, 0x8c,
	0x62, 0xf6, 0x08, 0xd6, 0x2a, 0x38, 0xd2, 0xa9, 0xbe, 0x11, 0x1d, 0x8b, 0x1c, 0x6b, 0x04, 0x7d,
	0x00, 0x1b, 0xf5, 0x06, 0x35, 0xa3, 0xec, 0x45, 0x5d, 0xb3, 0xb8, 0x93, 0x8a, 0x57, 0xdf, 0x85,
	0xfb, 0x15, 0x54, 0x5c, 0x1a, 0x91, 0xc5, 0x22, 0x6e, 0xd8, 0xd8, 0x9b, 0xb2, 0x6d, 0x6d, 0xf6,
	0x9d, 0xbe, 0xb6, 0xfd, 0xc6, 0xcc, 0x17, 0xad, 0xca, 0x22, 0x12, 0xfe, 0x32, 0xe1, 0xbb, 0xce,
	0x6b, 0x92, 0xb1, 0x1d, 0xe8, 0x56, 0xa8, 0x58, 0x68, 0xe3, 0xaf, 0x58, 0x4e, 0x59, 0xcc, 0x67,
	0x42, 0x1b, 0xf6, 0x18, 0xd6, 0x2b, 0x44, 0x3e, 0x9c, 0xd2, 0xa1, 0x56, 0x2d, 0xab, 0x2c, 0xe8,
	0x68, 0x38, 0xc5, 0x53, 0x7d, 0x0f, 0x1e, 0x5c, 0x8b, 0x94, 0x2a, 0xe4, 0xa9, 0xcc, 0x42, 0xa3,
	0x0a, 0xdf, 0xa3, 0xef, 0xfa, 0xf3, 0x11, 0x3b, 0xac, 0xf5, 0xc8, 0x91, 0xca, 0xdc, 0x16, 0x9f,
	0xb6, 0xe5, 0x88, 0x35, 0x78, 0x41, 0x25, 0xe8, 0x5d, 0xe8, 0x54, 0x98, 0x8b, 0x22, 0xf1, 0x81,
	0x10, 0x6d, 0x8b, 0xf8, 0x69, 0x91, 0x0c, 0xfe, 0x79, 0x7b, 0x56, 0xd2, 0x08, 0x88, 0x37, 0x41,
	0x66, 0x89, 0x62, 0x5f, 0x87, 0xae, 0xc8, 0x4c, 0x71, 0xc5, 0xc5, 0xa5, 0xd4, 0x46, 0x3b, 0x42,
	0x77, 0x48, 0xb6, 0x4f, 0x22, 0xe4, 0x93, 0xcc, 0x78, 0x1a, 0x4e, 0x44, 0xea, 0x92, 0xb6, 0x2a,
	0xb3, 0x31, 0x2e, 0xb1, 0xec, 0x4c, 0x92, 0x98, 0x47, 0x85, 0x08, 0x8d, 0xb0, 0xa9, 0xf2, 0x02,
	0x98, 0x24, 0xf1, 0x0b, 0x2b, 0x61, 0x77, 0x60, 0x05, 0x01, 0x65, 0x4e, 0x29, 0xf1, 0x82, 0xe5,
	0x49, 0x12, 0xbf, 0xcc, 0xd1, 0x4e, 0x85, 0xd3, 0xda, 0x6e, 0xd9, 0xda, 0xa9, 0x70, 0x5a, 0xd9,
	0x69, 0xf0, 0xc8, 0xc7, 0x44, 0x44, 0x14, 0xf8, 0xce, 0xf0, 0x67, 0x6f, 0x93, 0x00, 0xcd, 0x9b,
	0x1c, 0xac, 0xa2, 0xf8, 0x73, 0x11, 0x61, 0xc6, 0xd1, 0xd9, 0x4c, 0x5c, 0x1a, 0x7e, 0xa6, 0x72,
	0x4a, 0x66, 0x9b, 0x8e, 0x73, 0x20, 0x2e, 0xcd, 0x0f, 0x55, 0x8e, 0x71, 0x46, 0x84, 0x29, 0x33,
	0x2e, 0x93, 0x33, 0x97, 0xba, 0xf6, 0x24, 0xc1, 0xbb, 0x35, 0x4a, 0xce, 0x2a, 0xbd, 0x2a, 0x0d,
	0xe9, 0xdb, 0xb5, 0xfe, 0xb0, 0x34, 0xa8, 0x1f, 0x40, 0x0f, 0xf5, 0x32, 0x33, 0x2e, 0x9e, 0x60,
	0x49, 0x30, 0x49, 0xe2, 0x51, 0x66, 0x6c, 0x4c, 0x77, 0xa1, 0x8f, 0x18, 0x71, 0x8a, 0x75, 0xdb,
	0xc1, 0x3a, 0x96, 0x03, 0x93, 0x24, 0xde, 0x27, 0xb1, 0x45, 0x7e, 0x08, 0x1b, 0x49, 0x58, 0xa6,
	0x86, 0xa7, 0xb1, 0xe4, 0xa9, 0x8a, 0xce, 0x55, 0x69, 0xfc, 0x2e, 0xc5, 0x72, 0x9d, 0x14, 0xe3,
	0x58, 0x8e, 0xad, 0x18, 0x9b, 0x54, 0x8d, 0xf5, 0x7b, 0x84, 0xf1, 0x2a, 0x4c, 0x43, 0x79, 0x5e,
	0xf8, 0x6b, 0x4d, 0xe5, 0x79, 0x31, 0x53, 0x86, 0x52, 0xfb, 0xeb, 0x0d, 0xe5, 0x73, 0xa9, 0xd9,
	0x43, 0x00, 0xab, 0x34, 0x72, 0x2a, 0xfc, 0x3e, 0xb9, 0x69, 0xe1, 0x27, 0x72, 0x2a, 0x06, 0x7f,
	0xbb, 0x05, 0xef, 0x36, 0xef, 0x5d, 0xa8, 0xb5, 0x8a, 0x64, 0x68, 0xa4, 0xca, 0x5c, 0x79, 0x63,
	0x1f, 0xc3, 0xd6, 0xa2, 0xa6, 0xae, 0xdc, 0xbd, 0x80, 0xe9, 0x61, 0xfa, 0x7c, 0xa6, 0xa2, 0x22,
	0xfe, 0x29, 0xf8, 0xd7, 0x2c, 0xa4, 0xe0, 0x85, 0x4a, 0x85, 0x6b, 0x7c, 0x77, 0x16, 0xac, 0xa4,
	0x08, 0x54, 0x2a, 0xd8, 0x47, 0xc0, 0x16, 0x0d, 0xeb, 0xfa, 0xd2, 0x9f, 0x37, 0x19, 0xc5, 0xec,
	0x19, 0x6c, 0x2f, 0xa2, 0x5d, 0xb5, 0xb0, 0xd5, 0x65, 0x6b, 0xde, 0xc2, 0x55, 0x8d, 0x0f, 0x6d,
	0x09, 0x3b, 0x4d, 0xd5, 0x24, 0x4c, 0x9b, 0xe5, 0xa5, 0x17, 0x60, 0xb1, 0xf8, 0x01, 0xc9, 0x1d,
	0xf6, 0x3d, 0x5b, 0x3f, 0xea, 0xfa, 0x25, 0x63, 0x7f, 0x65, 0x67, 0x69, 0xb7, 0x17, 0x20, 0xe1,
	0xab, 0xaa, 0x35, 0x8a, 0x07, 0xbf, 0x59, 0x86, 0x87, 0xcd, 0x28, 0xe2, 0xc4, 0x23, 0xa2, 0x66,
	0x10, 0x1f, 0xd9, 0x1a, 0xa1, 0x45, 0xa4, 0xb2, 0x38, 0x2c, 0xae, 0x1c, 0x8d, 0xb1, 0x0e, 0x1d,
	0x57, 0x32, 0xf6, 0xd8, 0x96, 0xbd, 0xca, 0x3a, 0x3b, 0xa5, 0x68, 0x79, 0xb4, 0xdb, 0x51, 0x2d,
	0x64, 0x1f, 0x00, 0xc6, 0x82, 0x67, 0xca, 0xc8, 0x44, 0x46, 0x74, 0x36, 0x47, 0x6c, 0xf4, 0xf6,
	0xa0, 0x21, 0x66, 0xef, 0xdb, 0x03, 0x20, 0x07, 0x49, 0x10, 0xa6, 0x8e, 0xe6, 0xb8, 0xd1, 0xe1,
	0x4c, 0xca, 0xee, 0x83, 0x27, 0xb2, 0xb3, 0x30, 0x8b, 0x6a, 0xb2, 0xd7, 0x6b, 0xbc, 0x42, 0xb1,
	0x88, 0x9f, 0xf0, 0x3c, 0x2d, 0xf5, 0x13, 0x22, 0xbb, 0x17, 0xb4, 0x51, 0x72, 0x84, 0x02, 0xac,
	0x3e, 0xa4, 0x36, 0xea, 0x09, 0x11, 0xd2, 0x0b, 0x56, 0x71, 0x7d, 0xa2, 0x9e, 0xd0, 0x64, 0x70,
	0x16, 0x16, 0x22, 0x26, 0x22, 0x7a, 0x81, 0x5b, 0xe1, 0x09, 0x52, 0x99, 0x9d, 0xf3, 0x32, 0x73,
	0x67, 0x15, 0x31, 0x51, 0xd1, 0x0b, 0xd6, 0x51, 0xfe, 0x72, 0x26, 0xc6, 0xc0, 0x89, 0x4b, 0x53,
	0x84, 0xdc, 0x14, 0x61, 0x92, 0xc8, 0x88, 0x08, 0xe9, 0x05, 0x5d, 0x12, 0x9e, 0x58, 0x19, 0xeb,
	0xc3, 0x52, 0x98, 0x5d, 0x11, 0x09, 0xbd, 0x00, 0xff, 0x65, 0xef, 0x40, 0xbb, 0x10, 0x38, 0xb5,
	0x60, 0x14, 0x2d, 0xe3, 0x66, 0x02, 0xcc, 0x6b, 0xbd, 0xe0, 0x99, 0xe2, 0xc2, 0x38, 0xc6, 0xf5,
	0x6a, 0xf1, 0x81, 0xda, 0x37, 0x6c, 0x08, 0xdb, 0x2a, 0x13, 0xdc, 0x28, 0x9e, 0x35, 0x73, 0x2a,
	0x8c, 0xe3, 0x20, 0x53, 0x99, 0x38, 0x51, 0x07, 0x47, 0xb5, 0x6a, 0xdf, 0xb0, 0xf7, 0xa1, 0x8f,
	0x36, 0x18, 0x2c, 0x8e, 0xff, 0x94, 0x99, 0x74, 0xa4, 0xec, 0xa9, 0x4c, 0x60, 0xc8, 0x0e, 0x33,
	0xf1, 0x32, 0x93, 0xd8, 0x9c, 0xe6, 0x80, 0x13, 0x49, 0xf4, 0xf4, 0x82, 0xee, 0x0c, 0xf7, 0x7d,
	0x89, 0x29, 0xc4, 0x7e, 0xdc, 0x0c, 0xd5, 0x86, 0x4d, 0x61, 0xaa, 0xf3, 0x46, 0xa4, 0x06, 0x7f,
	0x6a, 0xc1, 0x5d, 0x23, 0xa8, 0x79, 0xd7, 0xad, 0x88, 0xc7, 0xa1, 0x09, 0xb9, 0x2d, 0x2e, 0x75,
	0x7b, 0xb2, 0x23, 0x97, 0x97, 0x54, 0xbd, 0x69, 0x0f, 0x36, 0xf3, 0x61, 0x4e, 0x86, 0xd8, 0x47,
	0xb1, 0xab, 0xe1, 0x95, 0xb2, 0x4c, 0xdd, 0xc8, 0x87, 0xf9, 0x58, 0xe7, 0x9f, 0xcd, 0x14, 0xec,
	0x13, 0xb8, 0x5b, 0xf5, 0x5c, 0x27, 0xaa, 0xbb, 0xab, 0xa5, 0xea, 0x56, 0x62, 0xfb, 0xaf, 0xd3,
	0xda, 0x2e, 0x3b, 0xf8, 0xfb, 0x2d, 0x1a, 0x50, 0x2a, 0xff, 0x0c, 0x7b, 0x07, 0xa0, 0x31, 0x6d,
	0xd8, 0x72, 0x82, 0x5e, 0xd9, 0x51, 0x63, 0x00, 0xbd, 0xf9, 0x31, 0xc3, 0x8d, 0x23, 0x49, 0x63,
	0xc6, 0x78, 0x0a, 0xdb, 0x6f, 0x98, 0x2f, 0xec, 0x98, 0xba, 0x99, 0xbc, 0x66, 0xb8, 0x78, 0x68,
	0xb7, 0x9d, 0x2b, 0x15, 0x18, 0x1d, 0xc7, 0xf9, 0x3f, 0xb4, 0x60, 0x6b, 0xf1, 0x78, 0xd8, 0x88,
	0x89, 0x16, 0x9d, 0x61, 0xf4, 0x96, 0xbb, 0xdc, 0xeb, 0xd2, 0x15, 0xb0, 0xf9, 0x00, 0x8e, 0x70,
	0x0e, 0xb8, 0x0b, 0xab, 0xd5, 0xf4, 0x60, 0x07, 0x9d, 0x95, 0xc4, 0x8e, 0x0e, 0x7f, 0xbc, 0x0d,
	0xfe, 0xb5, 0xd7, 0x50, 0x21, 0x2e, 0xf0, 0x2f, 0xe6, 0xb6, 0x10, 0x17, 0xa2, 0xd0, 0x76, 0xa7,
	0xbc, 0x10, 0x5a, 0x64, 0xc6, 0x55, 0x9f, 0x0d, 0xa7, 0x1a, 0xeb, 0xfc, 0xc8, 0x2a, 0xd8, 0x10,
	0xee, 0x34, 0xf1, 0x91, 0xca, 0x32, 0x7b, 0xe7, 0x6c, 0x25, 0xda, 0x9c, 0x59, 0xbc, 0xa8, 0x54,
	0xec, 0x57, 0x2d, 0xa4, 0xd3, 0xcc, 0x08, 0x47, 0x82, 0xa5, 0x1b, 0x19, 0x09, 0xea, 0xbb, 0x83,
	0x44, 0xad, 0x1c, 0xc1, 0xc1, 0xe0, 0x77, 0x2d, 0xe8, 0x34, 0xfa, 0x00, 0x65, 0xb5, 0x33, 0x7c,
	0xf5, 0x36, 0xb7, 0xff, 0xf7, 0x5d, 0x32, 0x68, 0x6e, 0xcf, 0xbe, 0x6c, 0x01, 0xcc, 0xea, 0x85,
	0xbb, 0x39, 0xf2, 0xa6, 0xbc, 0xb9, 0xd6, 0x6d, 0x82, 0xc6, 0xe6, 0x83, 0xaf, 0x56, 0x61, 0xeb,
	0xda, 0xf5, 0xc0, 0xab, 0xf1, 0x18, 0xd6, 0xa4, 0x9e, 0x6b, 0x0d, 0xf5, 0x5b, 0xb1, 0xd9, 0x19,
	0x1e, 0x02, 0x50, 0xfd, 0xc9, 0x69, 0x80, 0xb0, 0x24, 0x6c, 0x63, 0xe9, 0x21, 0x01, 0x52, 0x30,
	0x0f, 0xcd, 0x59, 0xd3, 0x09, 0x47, 0x68, 0x5b, 0x0b, 0x36, 0x51, 0x3b, 0x2b, 0x90, 0x96, 0xdb,
	0xf7, 0xc0, 0x43, 0xd0, 0x54, 0xc5, 0x15, 0x01, 0x57, 0x53, 0x9d, 0xff, 0x44, 0xc5, 0xd4, 0x72,
	0xc9, 0x41, 0x15, 0x85, 0xa9, 0x9b, 0xad, 0x6c, 0x73, 0xee, 0xa5, 0x3a, 0x1f, 0xa3, 0xd4, 0x8e,
	0x56, 0x1f, 0xc3, 0x16, 0xe2, 0x54, 0x69, 0x72, 0x9c, 0xe5, 0xaa, 0x27, 0xab, 0xe3, 0x06, 0x4b,
	0x75, 0x7e, 0x48, 0xaa, 0xfa, 0x31, 0x8b, 0x63, 0x5b, 0xc3, 0xc2, 0x7e, 0xda, 0xbe, 0x06, 0xd6,
	0x6a, 0xb4, 0xfd, 0xf6, 0x15, 0xa0, 0x3b, 0x34, 0x61, 0x7a, 0x3b, 0x4b, 0xbb, 0x9d, 0xe1, 0x17,
	0x37, 0xf7, 0xb6, 0x73, 0xaf, 0xba, 0x95, 0x54, 0xe7, 0x38, 0xbf, 0x3e, 0x00, 0x8c, 0x2d, 0xc7,
	0x17, 0x74, 0xf5, 0x8e, 0xc0, 0x50, 0x1d, 0xe3, 0x9a, 0xfd, 0x12, 0xda, 0xf5, 0xbb, 0x80, 0xfa,
	0x60, 0x67, 0x18, 0xde, 0xd4, 0xa5, 0xaa, 0x37, 0x0a, 0x68, 0xce, 0xa7, 0x12, 0xb4, 0xc8, 0xb2,
	0xce, 0xff, 0x15, 0xcb, 0xba, 0xff, 0x43, 0x96, 0xb1, 0xdf, 0xb6, 0xa0, 0xd3, 0xa8, 0x81, 0x34,
	0x4e, 0x74, 0x86, 0xf1, 0x4d, 0x38, 0xb3, 0x58, 0xe3, 0x03, 0x98, 0xd5, 0xc2, 0xc1, 0x3f, 0x96,
	0xa0, 0xbf, 0x08, 0xc4, 0x67, 0x93, 0xd4, 0x55, 0x73, 0x2c, 0x73, 0x7f, 0x68, 0x5f, 0x73, 0x52,
	0xdb, 0x9e, 0xf8, 0x32, 0xc7, 0x57, 0x20, 0x3d, 0x99, 0x62, 0xff, 0x29, 0x31, 0x62, 0xd9, 0x94,
	0x38, 0x61, 0xe3, 0x40, 0x4a, 0x5d, 0xb1, 0xfe, 0xdd, 0xea, 0x19, 0x5d, 0xc9, 0x9e, 0x95, 0x56,
	0x3f, 0x5d, 0x7d, 0x0b, 0x36, 0x9b, 0xdd, 0xb2, 0xc2, 0x7e, 0x62, 0xa9, 0xd8, 0x50, 0x55, 0x06,
	0x1f, 0x01, 0x7b, 0x4d, 0xcf, 0xfe, 0x36, 0xe1, 0xfb, 0x62, 0xb1, 0x61, 0xff, 0xba, 0x05, 0x9d,
	0x5f, 0xa8, 0xe2, 0x1c, 0x87, 0x35, 0x8c, 0xed, 0xa7, 0x14, 0xdb, 0x2f, 0x6e, 0x34, 0xb6, 0x14,
	0x57, 0xb7, 0xe9, 0x58, 0xe7, 0xe4, 0x83, 0x4b, 0x37, 0xf9, 0xf0, 0x9d, 0xff, 0x96, 0x0f, 0x6e,
	0xd3, 0xb1, 0xce, 0x27, 0x2b, 0xf4, 0x43, 0xea, 0xd3, 0x7f, 0x05, 0x00, 0x00, 0xff, 0xff, 0x76,
	0x57, 0x18, 0xd9, 0x62, 0x15, 0x00, 0x00,
}
