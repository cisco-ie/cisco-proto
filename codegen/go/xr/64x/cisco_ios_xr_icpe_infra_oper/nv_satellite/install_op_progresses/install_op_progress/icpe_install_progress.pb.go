/*
Copyright 2019 Cisco Systems

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: icpe_install_progress.proto

package cisco_ios_xr_icpe_infra_oper_nv_satellite_install_op_progresses_install_op_progress

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type IcpeInstallProgress_KEYS struct {
	OperationId          uint32   `protobuf:"varint,1,opt,name=operation_id,json=operationId,proto3" json:"operation_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IcpeInstallProgress_KEYS) Reset()         { *m = IcpeInstallProgress_KEYS{} }
func (m *IcpeInstallProgress_KEYS) String() string { return proto.CompactTextString(m) }
func (*IcpeInstallProgress_KEYS) ProtoMessage()    {}
func (*IcpeInstallProgress_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_cbc200f28b5e90ab, []int{0}
}

func (m *IcpeInstallProgress_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IcpeInstallProgress_KEYS.Unmarshal(m, b)
}
func (m *IcpeInstallProgress_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IcpeInstallProgress_KEYS.Marshal(b, m, deterministic)
}
func (m *IcpeInstallProgress_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IcpeInstallProgress_KEYS.Merge(m, src)
}
func (m *IcpeInstallProgress_KEYS) XXX_Size() int {
	return xxx_messageInfo_IcpeInstallProgress_KEYS.Size(m)
}
func (m *IcpeInstallProgress_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_IcpeInstallProgress_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_IcpeInstallProgress_KEYS proto.InternalMessageInfo

func (m *IcpeInstallProgress_KEYS) GetOperationId() uint32 {
	if m != nil {
		return m.OperationId
	}
	return 0
}

type IcpeInstallProgress struct {
	OperationIdXr        uint32   `protobuf:"varint,50,opt,name=operation_id_xr,json=operationIdXr,proto3" json:"operation_id_xr,omitempty"`
	ProgressPercentage   uint32   `protobuf:"varint,51,opt,name=progress_percentage,json=progressPercentage,proto3" json:"progress_percentage,omitempty"`
	SatelliteCount       uint32   `protobuf:"varint,52,opt,name=satellite_count,json=satelliteCount,proto3" json:"satellite_count,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IcpeInstallProgress) Reset()         { *m = IcpeInstallProgress{} }
func (m *IcpeInstallProgress) String() string { return proto.CompactTextString(m) }
func (*IcpeInstallProgress) ProtoMessage()    {}
func (*IcpeInstallProgress) Descriptor() ([]byte, []int) {
	return fileDescriptor_cbc200f28b5e90ab, []int{1}
}

func (m *IcpeInstallProgress) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IcpeInstallProgress.Unmarshal(m, b)
}
func (m *IcpeInstallProgress) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IcpeInstallProgress.Marshal(b, m, deterministic)
}
func (m *IcpeInstallProgress) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IcpeInstallProgress.Merge(m, src)
}
func (m *IcpeInstallProgress) XXX_Size() int {
	return xxx_messageInfo_IcpeInstallProgress.Size(m)
}
func (m *IcpeInstallProgress) XXX_DiscardUnknown() {
	xxx_messageInfo_IcpeInstallProgress.DiscardUnknown(m)
}

var xxx_messageInfo_IcpeInstallProgress proto.InternalMessageInfo

func (m *IcpeInstallProgress) GetOperationIdXr() uint32 {
	if m != nil {
		return m.OperationIdXr
	}
	return 0
}

func (m *IcpeInstallProgress) GetProgressPercentage() uint32 {
	if m != nil {
		return m.ProgressPercentage
	}
	return 0
}

func (m *IcpeInstallProgress) GetSatelliteCount() uint32 {
	if m != nil {
		return m.SatelliteCount
	}
	return 0
}

func init() {
	proto.RegisterType((*IcpeInstallProgress_KEYS)(nil), "cisco_ios_xr_icpe_infra_oper.nv_satellite.install_op_progresses.install_op_progress.icpe_install_progress_KEYS")
	proto.RegisterType((*IcpeInstallProgress)(nil), "cisco_ios_xr_icpe_infra_oper.nv_satellite.install_op_progresses.install_op_progress.icpe_install_progress")
}

func init() { proto.RegisterFile("icpe_install_progress.proto", fileDescriptor_cbc200f28b5e90ab) }

var fileDescriptor_cbc200f28b5e90ab = []byte{
	// 213 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x90, 0x31, 0x4b, 0xc0, 0x30,
	0x10, 0x85, 0xe9, 0xe2, 0x10, 0xad, 0x85, 0x88, 0x10, 0x74, 0xd1, 0x0e, 0xea, 0x54, 0xc1, 0xba,
	0x3b, 0x88, 0x83, 0xb8, 0x88, 0x5d, 0x74, 0x3a, 0x62, 0x7a, 0x96, 0x40, 0xc8, 0x85, 0x4b, 0x94,
	0xfe, 0x15, 0xff, 0xad, 0x34, 0xd8, 0xd0, 0xa1, 0xeb, 0x77, 0xef, 0x7d, 0x8f, 0x44, 0x9c, 0x5b,
	0x13, 0x10, 0xac, 0x8f, 0x49, 0x3b, 0x07, 0x81, 0x69, 0x62, 0x8c, 0xb1, 0x0b, 0x4c, 0x89, 0xe4,
	0x60, 0x6c, 0x34, 0x04, 0x96, 0x22, 0xcc, 0x0c, 0xff, 0xc9, 0x2f, 0xd6, 0x40, 0x01, 0xb9, 0xf3,
	0x3f, 0x10, 0x75, 0x42, 0xe7, 0x6c, 0xc2, 0x6e, 0x35, 0x50, 0x28, 0x12, 0x8c, 0x7b, 0xb4, 0x7d,
	0x10, 0x67, 0xbb, 0x9b, 0xf0, 0xf2, 0xf4, 0x31, 0xc8, 0x4b, 0x71, 0xb4, 0xc8, 0x75, 0xb2, 0xe4,
	0xc1, 0x8e, 0xaa, 0xba, 0xa8, 0x6e, 0xea, 0xb7, 0xc3, 0xc2, 0x9e, 0xc7, 0xf6, 0xb7, 0x12, 0xa7,
	0xbb, 0x06, 0x79, 0x25, 0x9a, 0x6d, 0x19, 0x66, 0x56, 0x77, 0xb9, 0x5f, 0x6f, 0xfa, 0xef, 0x2c,
	0x6f, 0xc5, 0x49, 0x59, 0x0d, 0xc8, 0x06, 0x7d, 0xd2, 0x13, 0xaa, 0x3e, 0x67, 0xe5, 0x7a, 0x7a,
	0x2d, 0x17, 0x79, 0x2d, 0x9a, 0xf2, 0x54, 0x30, 0xf4, 0xed, 0x93, 0xba, 0xcf, 0xe1, 0xe3, 0x82,
	0x1f, 0x17, 0xfa, 0x79, 0x90, 0x3f, 0xae, 0xff, 0x0b, 0x00, 0x00, 0xff, 0xff, 0xe3, 0xd0, 0x51,
	0xb1, 0x57, 0x01, 0x00, 0x00,
}
