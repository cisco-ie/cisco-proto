/*
Copyright 2019 Cisco Systems

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: nacm_group_detail.proto

package cisco_ios_xr_aaa_nacm_oper_aaa_nacm_groups_group

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type NacmGroupDetail_KEYS struct {
	Group                string   `protobuf:"bytes,1,opt,name=group,proto3" json:"group,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NacmGroupDetail_KEYS) Reset()         { *m = NacmGroupDetail_KEYS{} }
func (m *NacmGroupDetail_KEYS) String() string { return proto.CompactTextString(m) }
func (*NacmGroupDetail_KEYS) ProtoMessage()    {}
func (*NacmGroupDetail_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_dc28dbdeb846f8df, []int{0}
}

func (m *NacmGroupDetail_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NacmGroupDetail_KEYS.Unmarshal(m, b)
}
func (m *NacmGroupDetail_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NacmGroupDetail_KEYS.Marshal(b, m, deterministic)
}
func (m *NacmGroupDetail_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NacmGroupDetail_KEYS.Merge(m, src)
}
func (m *NacmGroupDetail_KEYS) XXX_Size() int {
	return xxx_messageInfo_NacmGroupDetail_KEYS.Size(m)
}
func (m *NacmGroupDetail_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_NacmGroupDetail_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_NacmGroupDetail_KEYS proto.InternalMessageInfo

func (m *NacmGroupDetail_KEYS) GetGroup() string {
	if m != nil {
		return m.Group
	}
	return ""
}

type ListNode struct {
	Name                 []string `protobuf:"bytes,1,rep,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListNode) Reset()         { *m = ListNode{} }
func (m *ListNode) String() string { return proto.CompactTextString(m) }
func (*ListNode) ProtoMessage()    {}
func (*ListNode) Descriptor() ([]byte, []int) {
	return fileDescriptor_dc28dbdeb846f8df, []int{1}
}

func (m *ListNode) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListNode.Unmarshal(m, b)
}
func (m *ListNode) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListNode.Marshal(b, m, deterministic)
}
func (m *ListNode) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListNode.Merge(m, src)
}
func (m *ListNode) XXX_Size() int {
	return xxx_messageInfo_ListNode.Size(m)
}
func (m *ListNode) XXX_DiscardUnknown() {
	xxx_messageInfo_ListNode.DiscardUnknown(m)
}

var xxx_messageInfo_ListNode proto.InternalMessageInfo

func (m *ListNode) GetName() []string {
	if m != nil {
		return m.Name
	}
	return nil
}

type NacmGroupDetail struct {
	GroupName            []string    `protobuf:"bytes,50,rep,name=group_name,json=groupName,proto3" json:"group_name,omitempty"`
	UserName             []*ListNode `protobuf:"bytes,51,rep,name=user_name,json=userName,proto3" json:"user_name,omitempty"`
	RuleName             []*ListNode `protobuf:"bytes,52,rep,name=rule_name,json=ruleName,proto3" json:"rule_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *NacmGroupDetail) Reset()         { *m = NacmGroupDetail{} }
func (m *NacmGroupDetail) String() string { return proto.CompactTextString(m) }
func (*NacmGroupDetail) ProtoMessage()    {}
func (*NacmGroupDetail) Descriptor() ([]byte, []int) {
	return fileDescriptor_dc28dbdeb846f8df, []int{2}
}

func (m *NacmGroupDetail) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NacmGroupDetail.Unmarshal(m, b)
}
func (m *NacmGroupDetail) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NacmGroupDetail.Marshal(b, m, deterministic)
}
func (m *NacmGroupDetail) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NacmGroupDetail.Merge(m, src)
}
func (m *NacmGroupDetail) XXX_Size() int {
	return xxx_messageInfo_NacmGroupDetail.Size(m)
}
func (m *NacmGroupDetail) XXX_DiscardUnknown() {
	xxx_messageInfo_NacmGroupDetail.DiscardUnknown(m)
}

var xxx_messageInfo_NacmGroupDetail proto.InternalMessageInfo

func (m *NacmGroupDetail) GetGroupName() []string {
	if m != nil {
		return m.GroupName
	}
	return nil
}

func (m *NacmGroupDetail) GetUserName() []*ListNode {
	if m != nil {
		return m.UserName
	}
	return nil
}

func (m *NacmGroupDetail) GetRuleName() []*ListNode {
	if m != nil {
		return m.RuleName
	}
	return nil
}

func init() {
	proto.RegisterType((*NacmGroupDetail_KEYS)(nil), "cisco_ios_xr_aaa_nacm_oper.aaa_nacm.groups.group.nacm_group_detail_KEYS")
	proto.RegisterType((*ListNode)(nil), "cisco_ios_xr_aaa_nacm_oper.aaa_nacm.groups.group.list_node")
	proto.RegisterType((*NacmGroupDetail)(nil), "cisco_ios_xr_aaa_nacm_oper.aaa_nacm.groups.group.nacm_group_detail")
}

func init() { proto.RegisterFile("nacm_group_detail.proto", fileDescriptor_dc28dbdeb846f8df) }

var fileDescriptor_dc28dbdeb846f8df = []byte{
	// 212 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0xcf, 0x4b, 0x4c, 0xce,
	0x8d, 0x4f, 0x2f, 0xca, 0x2f, 0x2d, 0x88, 0x4f, 0x49, 0x2d, 0x49, 0xcc, 0xcc, 0xd1, 0x2b, 0x28,
	0xca, 0x2f, 0xc9, 0x17, 0x32, 0x48, 0xce, 0x2c, 0x4e, 0xce, 0x8f, 0xcf, 0xcc, 0x2f, 0x8e, 0xaf,
	0x28, 0x8a, 0x4f, 0x4c, 0x4c, 0x8c, 0x07, 0xab, 0xcc, 0x2f, 0x48, 0x2d, 0xd2, 0x83, 0xf1, 0xf4,
	0xc0, 0xfa, 0x8a, 0x21, 0x94, 0x92, 0x1e, 0x97, 0x18, 0x86, 0x61, 0xf1, 0xde, 0xae, 0x91, 0xc1,
	0x42, 0x22, 0x5c, 0xac, 0x60, 0x41, 0x09, 0x46, 0x05, 0x46, 0x0d, 0xce, 0x20, 0x08, 0x47, 0x49,
	0x9e, 0x8b, 0x33, 0x27, 0xb3, 0xb8, 0x24, 0x3e, 0x2f, 0x3f, 0x25, 0x55, 0x48, 0x88, 0x8b, 0x25,
	0x2f, 0x31, 0x37, 0x55, 0x82, 0x51, 0x81, 0x59, 0x83, 0x33, 0x08, 0xcc, 0x56, 0x7a, 0xc6, 0xc8,
	0x25, 0x88, 0x61, 0xa2, 0x90, 0x2c, 0x17, 0x17, 0x84, 0x0f, 0x56, 0x6f, 0x04, 0x56, 0xcf, 0x09,
	0x16, 0xf1, 0x4b, 0xcc, 0x4d, 0x15, 0x8a, 0xe0, 0xe2, 0x2c, 0x2d, 0x4e, 0x2d, 0x82, 0xc8, 0x1a,
	0x2b, 0x30, 0x6b, 0x70, 0x1b, 0x59, 0xeb, 0x91, 0xea, 0x17, 0x3d, 0xb8, 0xc3, 0x82, 0x38, 0x40,
	0xa6, 0xc1, 0x4c, 0x2e, 0x2a, 0xcd, 0x49, 0x85, 0x98, 0x6c, 0x42, 0x05, 0x93, 0x41, 0xa6, 0x81,
	0x4c, 0x4e, 0x62, 0x03, 0x07, 0xb9, 0x31, 0x20, 0x00, 0x00, 0xff, 0xff, 0x6d, 0x1f, 0xa0, 0xb5,
	0x8d, 0x01, 0x00, 0x00,
}
