/*
Copyright 2019 Cisco Systems

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: isis_sh_adj.proto

package cisco_ios_xr_clns_isis_oper_isis_instances_instance_levels_level_adjacencies_adjacency

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type IsisShAdj_KEYS struct {
	InstanceName         string   `protobuf:"bytes,1,opt,name=instance_name,json=instanceName,proto3" json:"instance_name,omitempty"`
	Level                string   `protobuf:"bytes,2,opt,name=level,proto3" json:"level,omitempty"`
	SystemId             string   `protobuf:"bytes,3,opt,name=system_id,json=systemId,proto3" json:"system_id,omitempty"`
	InterfaceName        string   `protobuf:"bytes,4,opt,name=interface_name,json=interfaceName,proto3" json:"interface_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IsisShAdj_KEYS) Reset()         { *m = IsisShAdj_KEYS{} }
func (m *IsisShAdj_KEYS) String() string { return proto.CompactTextString(m) }
func (*IsisShAdj_KEYS) ProtoMessage()    {}
func (*IsisShAdj_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_9df2ab394e39008f, []int{0}
}

func (m *IsisShAdj_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IsisShAdj_KEYS.Unmarshal(m, b)
}
func (m *IsisShAdj_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IsisShAdj_KEYS.Marshal(b, m, deterministic)
}
func (m *IsisShAdj_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IsisShAdj_KEYS.Merge(m, src)
}
func (m *IsisShAdj_KEYS) XXX_Size() int {
	return xxx_messageInfo_IsisShAdj_KEYS.Size(m)
}
func (m *IsisShAdj_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_IsisShAdj_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_IsisShAdj_KEYS proto.InternalMessageInfo

func (m *IsisShAdj_KEYS) GetInstanceName() string {
	if m != nil {
		return m.InstanceName
	}
	return ""
}

func (m *IsisShAdj_KEYS) GetLevel() string {
	if m != nil {
		return m.Level
	}
	return ""
}

func (m *IsisShAdj_KEYS) GetSystemId() string {
	if m != nil {
		return m.SystemId
	}
	return ""
}

func (m *IsisShAdj_KEYS) GetInterfaceName() string {
	if m != nil {
		return m.InterfaceName
	}
	return ""
}

type IsisTopoIdType struct {
	AfName               string   `protobuf:"bytes,1,opt,name=af_name,json=afName,proto3" json:"af_name,omitempty"`
	SafName              string   `protobuf:"bytes,2,opt,name=saf_name,json=safName,proto3" json:"saf_name,omitempty"`
	VrfName              string   `protobuf:"bytes,3,opt,name=vrf_name,json=vrfName,proto3" json:"vrf_name,omitempty"`
	TopologyName         string   `protobuf:"bytes,4,opt,name=topology_name,json=topologyName,proto3" json:"topology_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IsisTopoIdType) Reset()         { *m = IsisTopoIdType{} }
func (m *IsisTopoIdType) String() string { return proto.CompactTextString(m) }
func (*IsisTopoIdType) ProtoMessage()    {}
func (*IsisTopoIdType) Descriptor() ([]byte, []int) {
	return fileDescriptor_9df2ab394e39008f, []int{1}
}

func (m *IsisTopoIdType) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IsisTopoIdType.Unmarshal(m, b)
}
func (m *IsisTopoIdType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IsisTopoIdType.Marshal(b, m, deterministic)
}
func (m *IsisTopoIdType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IsisTopoIdType.Merge(m, src)
}
func (m *IsisTopoIdType) XXX_Size() int {
	return xxx_messageInfo_IsisTopoIdType.Size(m)
}
func (m *IsisTopoIdType) XXX_DiscardUnknown() {
	xxx_messageInfo_IsisTopoIdType.DiscardUnknown(m)
}

var xxx_messageInfo_IsisTopoIdType proto.InternalMessageInfo

func (m *IsisTopoIdType) GetAfName() string {
	if m != nil {
		return m.AfName
	}
	return ""
}

func (m *IsisTopoIdType) GetSafName() string {
	if m != nil {
		return m.SafName
	}
	return ""
}

func (m *IsisTopoIdType) GetVrfName() string {
	if m != nil {
		return m.VrfName
	}
	return ""
}

func (m *IsisTopoIdType) GetTopologyName() string {
	if m != nil {
		return m.TopologyName
	}
	return ""
}

type IsisShAdjTopo struct {
	Id                            *IsisTopoIdType `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	TopologyStatus                string          `protobuf:"bytes,2,opt,name=topology_status,json=topologyStatus,proto3" json:"topology_status,omitempty"`
	ParallelP2PLinkSuppressedFlag bool            `protobuf:"varint,3,opt,name=parallel_p2p_link_suppressed_flag,json=parallelP2pLinkSuppressedFlag,proto3" json:"parallel_p2p_link_suppressed_flag,omitempty"`
	XXX_NoUnkeyedLiteral          struct{}        `json:"-"`
	XXX_unrecognized              []byte          `json:"-"`
	XXX_sizecache                 int32           `json:"-"`
}

func (m *IsisShAdjTopo) Reset()         { *m = IsisShAdjTopo{} }
func (m *IsisShAdjTopo) String() string { return proto.CompactTextString(m) }
func (*IsisShAdjTopo) ProtoMessage()    {}
func (*IsisShAdjTopo) Descriptor() ([]byte, []int) {
	return fileDescriptor_9df2ab394e39008f, []int{2}
}

func (m *IsisShAdjTopo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IsisShAdjTopo.Unmarshal(m, b)
}
func (m *IsisShAdjTopo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IsisShAdjTopo.Marshal(b, m, deterministic)
}
func (m *IsisShAdjTopo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IsisShAdjTopo.Merge(m, src)
}
func (m *IsisShAdjTopo) XXX_Size() int {
	return xxx_messageInfo_IsisShAdjTopo.Size(m)
}
func (m *IsisShAdjTopo) XXX_DiscardUnknown() {
	xxx_messageInfo_IsisShAdjTopo.DiscardUnknown(m)
}

var xxx_messageInfo_IsisShAdjTopo proto.InternalMessageInfo

func (m *IsisShAdjTopo) GetId() *IsisTopoIdType {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *IsisShAdjTopo) GetTopologyStatus() string {
	if m != nil {
		return m.TopologyStatus
	}
	return ""
}

func (m *IsisShAdjTopo) GetParallelP2PLinkSuppressedFlag() bool {
	if m != nil {
		return m.ParallelP2PLinkSuppressedFlag
	}
	return false
}

type IsisIpv4AdjSidBackupInfo struct {
	BackupLabelStackSize uint32   `protobuf:"varint,1,opt,name=backup_label_stack_size,json=backupLabelStackSize,proto3" json:"backup_label_stack_size,omitempty"`
	BackupLabelStack     []uint32 `protobuf:"varint,2,rep,packed,name=backup_label_stack,json=backupLabelStack,proto3" json:"backup_label_stack,omitempty"`
	BackupNodeAddress    string   `protobuf:"bytes,3,opt,name=backup_node_address,json=backupNodeAddress,proto3" json:"backup_node_address,omitempty"`
	BackupNexthop        string   `protobuf:"bytes,4,opt,name=backup_nexthop,json=backupNexthop,proto3" json:"backup_nexthop,omitempty"`
	BackupInterface      string   `protobuf:"bytes,5,opt,name=backup_interface,json=backupInterface,proto3" json:"backup_interface,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IsisIpv4AdjSidBackupInfo) Reset()         { *m = IsisIpv4AdjSidBackupInfo{} }
func (m *IsisIpv4AdjSidBackupInfo) String() string { return proto.CompactTextString(m) }
func (*IsisIpv4AdjSidBackupInfo) ProtoMessage()    {}
func (*IsisIpv4AdjSidBackupInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_9df2ab394e39008f, []int{3}
}

func (m *IsisIpv4AdjSidBackupInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IsisIpv4AdjSidBackupInfo.Unmarshal(m, b)
}
func (m *IsisIpv4AdjSidBackupInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IsisIpv4AdjSidBackupInfo.Marshal(b, m, deterministic)
}
func (m *IsisIpv4AdjSidBackupInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IsisIpv4AdjSidBackupInfo.Merge(m, src)
}
func (m *IsisIpv4AdjSidBackupInfo) XXX_Size() int {
	return xxx_messageInfo_IsisIpv4AdjSidBackupInfo.Size(m)
}
func (m *IsisIpv4AdjSidBackupInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_IsisIpv4AdjSidBackupInfo.DiscardUnknown(m)
}

var xxx_messageInfo_IsisIpv4AdjSidBackupInfo proto.InternalMessageInfo

func (m *IsisIpv4AdjSidBackupInfo) GetBackupLabelStackSize() uint32 {
	if m != nil {
		return m.BackupLabelStackSize
	}
	return 0
}

func (m *IsisIpv4AdjSidBackupInfo) GetBackupLabelStack() []uint32 {
	if m != nil {
		return m.BackupLabelStack
	}
	return nil
}

func (m *IsisIpv4AdjSidBackupInfo) GetBackupNodeAddress() string {
	if m != nil {
		return m.BackupNodeAddress
	}
	return ""
}

func (m *IsisIpv4AdjSidBackupInfo) GetBackupNexthop() string {
	if m != nil {
		return m.BackupNexthop
	}
	return ""
}

func (m *IsisIpv4AdjSidBackupInfo) GetBackupInterface() string {
	if m != nil {
		return m.BackupInterface
	}
	return ""
}

type IsisIpv4AdjSid struct {
	AdjacencySidValue    uint32                    `protobuf:"varint,1,opt,name=adjacency_sid_value,json=adjacencySidValue,proto3" json:"adjacency_sid_value,omitempty"`
	AdjacencySidBackup   *IsisIpv4AdjSidBackupInfo `protobuf:"bytes,2,opt,name=adjacency_sid_backup,json=adjacencySidBackup,proto3" json:"adjacency_sid_backup,omitempty"`
	AdjacencySidBackupTe *IsisIpv4AdjSidBackupInfo `protobuf:"bytes,3,opt,name=adjacency_sid_backup_te,json=adjacencySidBackupTe,proto3" json:"adjacency_sid_backup_te,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *IsisIpv4AdjSid) Reset()         { *m = IsisIpv4AdjSid{} }
func (m *IsisIpv4AdjSid) String() string { return proto.CompactTextString(m) }
func (*IsisIpv4AdjSid) ProtoMessage()    {}
func (*IsisIpv4AdjSid) Descriptor() ([]byte, []int) {
	return fileDescriptor_9df2ab394e39008f, []int{4}
}

func (m *IsisIpv4AdjSid) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IsisIpv4AdjSid.Unmarshal(m, b)
}
func (m *IsisIpv4AdjSid) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IsisIpv4AdjSid.Marshal(b, m, deterministic)
}
func (m *IsisIpv4AdjSid) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IsisIpv4AdjSid.Merge(m, src)
}
func (m *IsisIpv4AdjSid) XXX_Size() int {
	return xxx_messageInfo_IsisIpv4AdjSid.Size(m)
}
func (m *IsisIpv4AdjSid) XXX_DiscardUnknown() {
	xxx_messageInfo_IsisIpv4AdjSid.DiscardUnknown(m)
}

var xxx_messageInfo_IsisIpv4AdjSid proto.InternalMessageInfo

func (m *IsisIpv4AdjSid) GetAdjacencySidValue() uint32 {
	if m != nil {
		return m.AdjacencySidValue
	}
	return 0
}

func (m *IsisIpv4AdjSid) GetAdjacencySidBackup() *IsisIpv4AdjSidBackupInfo {
	if m != nil {
		return m.AdjacencySidBackup
	}
	return nil
}

func (m *IsisIpv4AdjSid) GetAdjacencySidBackupTe() *IsisIpv4AdjSidBackupInfo {
	if m != nil {
		return m.AdjacencySidBackupTe
	}
	return nil
}

type IsisShIntfDet struct {
	InterfaceIndex       uint32   `protobuf:"varint,1,opt,name=interface_index,json=interfaceIndex,proto3" json:"interface_index,omitempty"`
	InterfaceName        string   `protobuf:"bytes,2,opt,name=interface_name,json=interfaceName,proto3" json:"interface_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IsisShIntfDet) Reset()         { *m = IsisShIntfDet{} }
func (m *IsisShIntfDet) String() string { return proto.CompactTextString(m) }
func (*IsisShIntfDet) ProtoMessage()    {}
func (*IsisShIntfDet) Descriptor() ([]byte, []int) {
	return fileDescriptor_9df2ab394e39008f, []int{5}
}

func (m *IsisShIntfDet) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IsisShIntfDet.Unmarshal(m, b)
}
func (m *IsisShIntfDet) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IsisShIntfDet.Marshal(b, m, deterministic)
}
func (m *IsisShIntfDet) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IsisShIntfDet.Merge(m, src)
}
func (m *IsisShIntfDet) XXX_Size() int {
	return xxx_messageInfo_IsisShIntfDet.Size(m)
}
func (m *IsisShIntfDet) XXX_DiscardUnknown() {
	xxx_messageInfo_IsisShIntfDet.DiscardUnknown(m)
}

var xxx_messageInfo_IsisShIntfDet proto.InternalMessageInfo

func (m *IsisShIntfDet) GetInterfaceIndex() uint32 {
	if m != nil {
		return m.InterfaceIndex
	}
	return 0
}

func (m *IsisShIntfDet) GetInterfaceName() string {
	if m != nil {
		return m.InterfaceName
	}
	return ""
}

type IsisShAdjIpv4 struct {
	NextHop                string           `protobuf:"bytes,1,opt,name=next_hop,json=nextHop,proto3" json:"next_hop,omitempty"`
	InterfaceAddress       []string         `protobuf:"bytes,2,rep,name=interface_address,json=interfaceAddress,proto3" json:"interface_address,omitempty"`
	AdjacencySid           *IsisIpv4AdjSid  `protobuf:"bytes,3,opt,name=adjacency_sid,json=adjacencySid,proto3" json:"adjacency_sid,omitempty"`
	NonFrrAdjacencySid     *IsisIpv4AdjSid  `protobuf:"bytes,4,opt,name=non_frr_adjacency_sid,json=nonFrrAdjacencySid,proto3" json:"non_frr_adjacency_sid,omitempty"`
	UnderlyingInterface    []*IsisShIntfDet `protobuf:"bytes,5,rep,name=underlying_interface,json=underlyingInterface,proto3" json:"underlying_interface,omitempty"`
	UnderlyingAdjacencySid []uint32         `protobuf:"varint,6,rep,packed,name=underlying_adjacency_sid,json=underlyingAdjacencySid,proto3" json:"underlying_adjacency_sid,omitempty"`
	XXX_NoUnkeyedLiteral   struct{}         `json:"-"`
	XXX_unrecognized       []byte           `json:"-"`
	XXX_sizecache          int32            `json:"-"`
}

func (m *IsisShAdjIpv4) Reset()         { *m = IsisShAdjIpv4{} }
func (m *IsisShAdjIpv4) String() string { return proto.CompactTextString(m) }
func (*IsisShAdjIpv4) ProtoMessage()    {}
func (*IsisShAdjIpv4) Descriptor() ([]byte, []int) {
	return fileDescriptor_9df2ab394e39008f, []int{6}
}

func (m *IsisShAdjIpv4) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IsisShAdjIpv4.Unmarshal(m, b)
}
func (m *IsisShAdjIpv4) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IsisShAdjIpv4.Marshal(b, m, deterministic)
}
func (m *IsisShAdjIpv4) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IsisShAdjIpv4.Merge(m, src)
}
func (m *IsisShAdjIpv4) XXX_Size() int {
	return xxx_messageInfo_IsisShAdjIpv4.Size(m)
}
func (m *IsisShAdjIpv4) XXX_DiscardUnknown() {
	xxx_messageInfo_IsisShAdjIpv4.DiscardUnknown(m)
}

var xxx_messageInfo_IsisShAdjIpv4 proto.InternalMessageInfo

func (m *IsisShAdjIpv4) GetNextHop() string {
	if m != nil {
		return m.NextHop
	}
	return ""
}

func (m *IsisShAdjIpv4) GetInterfaceAddress() []string {
	if m != nil {
		return m.InterfaceAddress
	}
	return nil
}

func (m *IsisShAdjIpv4) GetAdjacencySid() *IsisIpv4AdjSid {
	if m != nil {
		return m.AdjacencySid
	}
	return nil
}

func (m *IsisShAdjIpv4) GetNonFrrAdjacencySid() *IsisIpv4AdjSid {
	if m != nil {
		return m.NonFrrAdjacencySid
	}
	return nil
}

func (m *IsisShAdjIpv4) GetUnderlyingInterface() []*IsisShIntfDet {
	if m != nil {
		return m.UnderlyingInterface
	}
	return nil
}

func (m *IsisShAdjIpv4) GetUnderlyingAdjacencySid() []uint32 {
	if m != nil {
		return m.UnderlyingAdjacencySid
	}
	return nil
}

type IsisIpv6AdjSidBackupInfo struct {
	BackupLabelStackSize uint32   `protobuf:"varint,1,opt,name=backup_label_stack_size,json=backupLabelStackSize,proto3" json:"backup_label_stack_size,omitempty"`
	BackupLabelStack     []uint32 `protobuf:"varint,2,rep,packed,name=backup_label_stack,json=backupLabelStack,proto3" json:"backup_label_stack,omitempty"`
	BackupNodeAddress    string   `protobuf:"bytes,3,opt,name=backup_node_address,json=backupNodeAddress,proto3" json:"backup_node_address,omitempty"`
	BackupNexthop        string   `protobuf:"bytes,4,opt,name=backup_nexthop,json=backupNexthop,proto3" json:"backup_nexthop,omitempty"`
	BackupInterface      string   `protobuf:"bytes,5,opt,name=backup_interface,json=backupInterface,proto3" json:"backup_interface,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IsisIpv6AdjSidBackupInfo) Reset()         { *m = IsisIpv6AdjSidBackupInfo{} }
func (m *IsisIpv6AdjSidBackupInfo) String() string { return proto.CompactTextString(m) }
func (*IsisIpv6AdjSidBackupInfo) ProtoMessage()    {}
func (*IsisIpv6AdjSidBackupInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_9df2ab394e39008f, []int{7}
}

func (m *IsisIpv6AdjSidBackupInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IsisIpv6AdjSidBackupInfo.Unmarshal(m, b)
}
func (m *IsisIpv6AdjSidBackupInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IsisIpv6AdjSidBackupInfo.Marshal(b, m, deterministic)
}
func (m *IsisIpv6AdjSidBackupInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IsisIpv6AdjSidBackupInfo.Merge(m, src)
}
func (m *IsisIpv6AdjSidBackupInfo) XXX_Size() int {
	return xxx_messageInfo_IsisIpv6AdjSidBackupInfo.Size(m)
}
func (m *IsisIpv6AdjSidBackupInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_IsisIpv6AdjSidBackupInfo.DiscardUnknown(m)
}

var xxx_messageInfo_IsisIpv6AdjSidBackupInfo proto.InternalMessageInfo

func (m *IsisIpv6AdjSidBackupInfo) GetBackupLabelStackSize() uint32 {
	if m != nil {
		return m.BackupLabelStackSize
	}
	return 0
}

func (m *IsisIpv6AdjSidBackupInfo) GetBackupLabelStack() []uint32 {
	if m != nil {
		return m.BackupLabelStack
	}
	return nil
}

func (m *IsisIpv6AdjSidBackupInfo) GetBackupNodeAddress() string {
	if m != nil {
		return m.BackupNodeAddress
	}
	return ""
}

func (m *IsisIpv6AdjSidBackupInfo) GetBackupNexthop() string {
	if m != nil {
		return m.BackupNexthop
	}
	return ""
}

func (m *IsisIpv6AdjSidBackupInfo) GetBackupInterface() string {
	if m != nil {
		return m.BackupInterface
	}
	return ""
}

type IsisIpv6AdjSid struct {
	AdjacencySidValue    uint32                    `protobuf:"varint,1,opt,name=adjacency_sid_value,json=adjacencySidValue,proto3" json:"adjacency_sid_value,omitempty"`
	AdjacencySidBackup   *IsisIpv6AdjSidBackupInfo `protobuf:"bytes,2,opt,name=adjacency_sid_backup,json=adjacencySidBackup,proto3" json:"adjacency_sid_backup,omitempty"`
	AdjacencySidBackupTe *IsisIpv6AdjSidBackupInfo `protobuf:"bytes,3,opt,name=adjacency_sid_backup_te,json=adjacencySidBackupTe,proto3" json:"adjacency_sid_backup_te,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *IsisIpv6AdjSid) Reset()         { *m = IsisIpv6AdjSid{} }
func (m *IsisIpv6AdjSid) String() string { return proto.CompactTextString(m) }
func (*IsisIpv6AdjSid) ProtoMessage()    {}
func (*IsisIpv6AdjSid) Descriptor() ([]byte, []int) {
	return fileDescriptor_9df2ab394e39008f, []int{8}
}

func (m *IsisIpv6AdjSid) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IsisIpv6AdjSid.Unmarshal(m, b)
}
func (m *IsisIpv6AdjSid) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IsisIpv6AdjSid.Marshal(b, m, deterministic)
}
func (m *IsisIpv6AdjSid) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IsisIpv6AdjSid.Merge(m, src)
}
func (m *IsisIpv6AdjSid) XXX_Size() int {
	return xxx_messageInfo_IsisIpv6AdjSid.Size(m)
}
func (m *IsisIpv6AdjSid) XXX_DiscardUnknown() {
	xxx_messageInfo_IsisIpv6AdjSid.DiscardUnknown(m)
}

var xxx_messageInfo_IsisIpv6AdjSid proto.InternalMessageInfo

func (m *IsisIpv6AdjSid) GetAdjacencySidValue() uint32 {
	if m != nil {
		return m.AdjacencySidValue
	}
	return 0
}

func (m *IsisIpv6AdjSid) GetAdjacencySidBackup() *IsisIpv6AdjSidBackupInfo {
	if m != nil {
		return m.AdjacencySidBackup
	}
	return nil
}

func (m *IsisIpv6AdjSid) GetAdjacencySidBackupTe() *IsisIpv6AdjSidBackupInfo {
	if m != nil {
		return m.AdjacencySidBackupTe
	}
	return nil
}

type IsisShAdjIpv6 struct {
	NextHop                string           `protobuf:"bytes,1,opt,name=next_hop,json=nextHop,proto3" json:"next_hop,omitempty"`
	InterfaceAddress       []string         `protobuf:"bytes,2,rep,name=interface_address,json=interfaceAddress,proto3" json:"interface_address,omitempty"`
	AdjacencySid           *IsisIpv6AdjSid  `protobuf:"bytes,3,opt,name=adjacency_sid,json=adjacencySid,proto3" json:"adjacency_sid,omitempty"`
	NonFrrAdjacencySid     *IsisIpv6AdjSid  `protobuf:"bytes,4,opt,name=non_frr_adjacency_sid,json=nonFrrAdjacencySid,proto3" json:"non_frr_adjacency_sid,omitempty"`
	UnderlyingInterface    []*IsisShIntfDet `protobuf:"bytes,5,rep,name=underlying_interface,json=underlyingInterface,proto3" json:"underlying_interface,omitempty"`
	UnderlyingAdjacencySid []uint32         `protobuf:"varint,6,rep,packed,name=underlying_adjacency_sid,json=underlyingAdjacencySid,proto3" json:"underlying_adjacency_sid,omitempty"`
	XXX_NoUnkeyedLiteral   struct{}         `json:"-"`
	XXX_unrecognized       []byte           `json:"-"`
	XXX_sizecache          int32            `json:"-"`
}

func (m *IsisShAdjIpv6) Reset()         { *m = IsisShAdjIpv6{} }
func (m *IsisShAdjIpv6) String() string { return proto.CompactTextString(m) }
func (*IsisShAdjIpv6) ProtoMessage()    {}
func (*IsisShAdjIpv6) Descriptor() ([]byte, []int) {
	return fileDescriptor_9df2ab394e39008f, []int{9}
}

func (m *IsisShAdjIpv6) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IsisShAdjIpv6.Unmarshal(m, b)
}
func (m *IsisShAdjIpv6) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IsisShAdjIpv6.Marshal(b, m, deterministic)
}
func (m *IsisShAdjIpv6) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IsisShAdjIpv6.Merge(m, src)
}
func (m *IsisShAdjIpv6) XXX_Size() int {
	return xxx_messageInfo_IsisShAdjIpv6.Size(m)
}
func (m *IsisShAdjIpv6) XXX_DiscardUnknown() {
	xxx_messageInfo_IsisShAdjIpv6.DiscardUnknown(m)
}

var xxx_messageInfo_IsisShAdjIpv6 proto.InternalMessageInfo

func (m *IsisShAdjIpv6) GetNextHop() string {
	if m != nil {
		return m.NextHop
	}
	return ""
}

func (m *IsisShAdjIpv6) GetInterfaceAddress() []string {
	if m != nil {
		return m.InterfaceAddress
	}
	return nil
}

func (m *IsisShAdjIpv6) GetAdjacencySid() *IsisIpv6AdjSid {
	if m != nil {
		return m.AdjacencySid
	}
	return nil
}

func (m *IsisShAdjIpv6) GetNonFrrAdjacencySid() *IsisIpv6AdjSid {
	if m != nil {
		return m.NonFrrAdjacencySid
	}
	return nil
}

func (m *IsisShAdjIpv6) GetUnderlyingInterface() []*IsisShIntfDet {
	if m != nil {
		return m.UnderlyingInterface
	}
	return nil
}

func (m *IsisShAdjIpv6) GetUnderlyingAdjacencySid() []uint32 {
	if m != nil {
		return m.UnderlyingAdjacencySid
	}
	return nil
}

type IsisShAdjAf struct {
	AfName               string         `protobuf:"bytes,1,opt,name=af_name,json=afName,proto3" json:"af_name,omitempty"`
	Ipv4                 *IsisShAdjIpv4 `protobuf:"bytes,2,opt,name=ipv4,proto3" json:"ipv4,omitempty"`
	Ipv6                 *IsisShAdjIpv6 `protobuf:"bytes,3,opt,name=ipv6,proto3" json:"ipv6,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *IsisShAdjAf) Reset()         { *m = IsisShAdjAf{} }
func (m *IsisShAdjAf) String() string { return proto.CompactTextString(m) }
func (*IsisShAdjAf) ProtoMessage()    {}
func (*IsisShAdjAf) Descriptor() ([]byte, []int) {
	return fileDescriptor_9df2ab394e39008f, []int{10}
}

func (m *IsisShAdjAf) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IsisShAdjAf.Unmarshal(m, b)
}
func (m *IsisShAdjAf) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IsisShAdjAf.Marshal(b, m, deterministic)
}
func (m *IsisShAdjAf) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IsisShAdjAf.Merge(m, src)
}
func (m *IsisShAdjAf) XXX_Size() int {
	return xxx_messageInfo_IsisShAdjAf.Size(m)
}
func (m *IsisShAdjAf) XXX_DiscardUnknown() {
	xxx_messageInfo_IsisShAdjAf.DiscardUnknown(m)
}

var xxx_messageInfo_IsisShAdjAf proto.InternalMessageInfo

func (m *IsisShAdjAf) GetAfName() string {
	if m != nil {
		return m.AfName
	}
	return ""
}

func (m *IsisShAdjAf) GetIpv4() *IsisShAdjIpv4 {
	if m != nil {
		return m.Ipv4
	}
	return nil
}

func (m *IsisShAdjAf) GetIpv6() *IsisShAdjIpv6 {
	if m != nil {
		return m.Ipv6
	}
	return nil
}

type IsisShAdj struct {
	AdjacencySystemId             string           `protobuf:"bytes,50,opt,name=adjacency_system_id,json=adjacencySystemId,proto3" json:"adjacency_system_id,omitempty"`
	AdjacencySnpa                 string           `protobuf:"bytes,51,opt,name=adjacency_snpa,json=adjacencySnpa,proto3" json:"adjacency_snpa,omitempty"`
	AdjacencyInterface            string           `protobuf:"bytes,52,opt,name=adjacency_interface,json=adjacencyInterface,proto3" json:"adjacency_interface,omitempty"`
	AdjacencyMediaType            string           `protobuf:"bytes,53,opt,name=adjacency_media_type,json=adjacencyMediaType,proto3" json:"adjacency_media_type,omitempty"`
	AdjacencyState                string           `protobuf:"bytes,54,opt,name=adjacency_state,json=adjacencyState,proto3" json:"adjacency_state,omitempty"`
	AdjacencyBfdState             string           `protobuf:"bytes,55,opt,name=adjacency_bfd_state,json=adjacencyBfdState,proto3" json:"adjacency_bfd_state,omitempty"`
	AdjacencyIpv6BfdState         string           `protobuf:"bytes,56,opt,name=adjacency_ipv6bfd_state,json=adjacencyIpv6bfdState,proto3" json:"adjacency_ipv6bfd_state,omitempty"`
	AdjIpv4BfdRetryRunning        bool             `protobuf:"varint,57,opt,name=adj_ipv4bfd_retry_running,json=adjIpv4bfdRetryRunning,proto3" json:"adj_ipv4bfd_retry_running,omitempty"`
	AdjIpv6BfdRetryRunning        bool             `protobuf:"varint,58,opt,name=adj_ipv6bfd_retry_running,json=adjIpv6bfdRetryRunning,proto3" json:"adj_ipv6bfd_retry_running,omitempty"`
	AdjIpv4BfdRetryExp            uint32           `protobuf:"varint,59,opt,name=adj_ipv4bfd_retry_exp,json=adjIpv4bfdRetryExp,proto3" json:"adj_ipv4bfd_retry_exp,omitempty"`
	AdjIpv6BfdRetryExp            uint32           `protobuf:"varint,60,opt,name=adj_ipv6bfd_retry_exp,json=adjIpv6bfdRetryExp,proto3" json:"adj_ipv6bfd_retry_exp,omitempty"`
	AdjIpv4BfdRetryCount          uint32           `protobuf:"varint,61,opt,name=adj_ipv4bfd_retry_count,json=adjIpv4bfdRetryCount,proto3" json:"adj_ipv4bfd_retry_count,omitempty"`
	AdjIpv6BfdRetryCount          uint32           `protobuf:"varint,62,opt,name=adj_ipv6bfd_retry_count,json=adjIpv6bfdRetryCount,proto3" json:"adj_ipv6bfd_retry_count,omitempty"`
	AdjacencyUptimeValidFlag      bool             `protobuf:"varint,63,opt,name=adjacency_uptime_valid_flag,json=adjacencyUptimeValidFlag,proto3" json:"adjacency_uptime_valid_flag,omitempty"`
	AdjacencyUptime               uint32           `protobuf:"varint,64,opt,name=adjacency_uptime,json=adjacencyUptime,proto3" json:"adjacency_uptime,omitempty"`
	AdjacencyHoldtime             uint32           `protobuf:"varint,65,opt,name=adjacency_holdtime,json=adjacencyHoldtime,proto3" json:"adjacency_holdtime,omitempty"`
	AdjacencyCheckpointObjectId   uint32           `protobuf:"varint,66,opt,name=adjacency_checkpoint_object_id,json=adjacencyCheckpointObjectId,proto3" json:"adjacency_checkpoint_object_id,omitempty"`
	AdjacencyIetfNsfCapableFlag   bool             `protobuf:"varint,67,opt,name=adjacency_ietf_nsf_capable_flag,json=adjacencyIetfNsfCapableFlag,proto3" json:"adjacency_ietf_nsf_capable_flag,omitempty"`
	AdjacencyDispriority          uint32           `protobuf:"varint,68,opt,name=adjacency_dispriority,json=adjacencyDispriority,proto3" json:"adjacency_dispriority,omitempty"`
	AdjacencyNeighborPriority     uint32           `protobuf:"varint,69,opt,name=adjacency_neighbor_priority,json=adjacencyNeighborPriority,proto3" json:"adjacency_neighbor_priority,omitempty"`
	AdjacencyLocalPriority        uint32           `protobuf:"varint,70,opt,name=adjacency_local_priority,json=adjacencyLocalPriority,proto3" json:"adjacency_local_priority,omitempty"`
	LocalDisFlag                  bool             `protobuf:"varint,71,opt,name=local_dis_flag,json=localDisFlag,proto3" json:"local_dis_flag,omitempty"`
	NeighborDisFlag               bool             `protobuf:"varint,72,opt,name=neighbor_dis_flag,json=neighborDisFlag,proto3" json:"neighbor_dis_flag,omitempty"`
	AdjacencyAreaAddress          []string         `protobuf:"bytes,73,rep,name=adjacency_area_address,json=adjacencyAreaAddress,proto3" json:"adjacency_area_address,omitempty"`
	AdjacencyTopology             []*IsisShAdjTopo `protobuf:"bytes,74,rep,name=adjacency_topology,json=adjacencyTopology,proto3" json:"adjacency_topology,omitempty"`
	AdjacencyPerAddressFamilyData []*IsisShAdjAf   `protobuf:"bytes,75,rep,name=adjacency_per_address_family_data,json=adjacencyPerAddressFamilyData,proto3" json:"adjacency_per_address_family_data,omitempty"`
	NsrStandby                    uint32           `protobuf:"varint,76,opt,name=nsr_standby,json=nsrStandby,proto3" json:"nsr_standby,omitempty"`
	XXX_NoUnkeyedLiteral          struct{}         `json:"-"`
	XXX_unrecognized              []byte           `json:"-"`
	XXX_sizecache                 int32            `json:"-"`
}

func (m *IsisShAdj) Reset()         { *m = IsisShAdj{} }
func (m *IsisShAdj) String() string { return proto.CompactTextString(m) }
func (*IsisShAdj) ProtoMessage()    {}
func (*IsisShAdj) Descriptor() ([]byte, []int) {
	return fileDescriptor_9df2ab394e39008f, []int{11}
}

func (m *IsisShAdj) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IsisShAdj.Unmarshal(m, b)
}
func (m *IsisShAdj) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IsisShAdj.Marshal(b, m, deterministic)
}
func (m *IsisShAdj) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IsisShAdj.Merge(m, src)
}
func (m *IsisShAdj) XXX_Size() int {
	return xxx_messageInfo_IsisShAdj.Size(m)
}
func (m *IsisShAdj) XXX_DiscardUnknown() {
	xxx_messageInfo_IsisShAdj.DiscardUnknown(m)
}

var xxx_messageInfo_IsisShAdj proto.InternalMessageInfo

func (m *IsisShAdj) GetAdjacencySystemId() string {
	if m != nil {
		return m.AdjacencySystemId
	}
	return ""
}

func (m *IsisShAdj) GetAdjacencySnpa() string {
	if m != nil {
		return m.AdjacencySnpa
	}
	return ""
}

func (m *IsisShAdj) GetAdjacencyInterface() string {
	if m != nil {
		return m.AdjacencyInterface
	}
	return ""
}

func (m *IsisShAdj) GetAdjacencyMediaType() string {
	if m != nil {
		return m.AdjacencyMediaType
	}
	return ""
}

func (m *IsisShAdj) GetAdjacencyState() string {
	if m != nil {
		return m.AdjacencyState
	}
	return ""
}

func (m *IsisShAdj) GetAdjacencyBfdState() string {
	if m != nil {
		return m.AdjacencyBfdState
	}
	return ""
}

func (m *IsisShAdj) GetAdjacencyIpv6BfdState() string {
	if m != nil {
		return m.AdjacencyIpv6BfdState
	}
	return ""
}

func (m *IsisShAdj) GetAdjIpv4BfdRetryRunning() bool {
	if m != nil {
		return m.AdjIpv4BfdRetryRunning
	}
	return false
}

func (m *IsisShAdj) GetAdjIpv6BfdRetryRunning() bool {
	if m != nil {
		return m.AdjIpv6BfdRetryRunning
	}
	return false
}

func (m *IsisShAdj) GetAdjIpv4BfdRetryExp() uint32 {
	if m != nil {
		return m.AdjIpv4BfdRetryExp
	}
	return 0
}

func (m *IsisShAdj) GetAdjIpv6BfdRetryExp() uint32 {
	if m != nil {
		return m.AdjIpv6BfdRetryExp
	}
	return 0
}

func (m *IsisShAdj) GetAdjIpv4BfdRetryCount() uint32 {
	if m != nil {
		return m.AdjIpv4BfdRetryCount
	}
	return 0
}

func (m *IsisShAdj) GetAdjIpv6BfdRetryCount() uint32 {
	if m != nil {
		return m.AdjIpv6BfdRetryCount
	}
	return 0
}

func (m *IsisShAdj) GetAdjacencyUptimeValidFlag() bool {
	if m != nil {
		return m.AdjacencyUptimeValidFlag
	}
	return false
}

func (m *IsisShAdj) GetAdjacencyUptime() uint32 {
	if m != nil {
		return m.AdjacencyUptime
	}
	return 0
}

func (m *IsisShAdj) GetAdjacencyHoldtime() uint32 {
	if m != nil {
		return m.AdjacencyHoldtime
	}
	return 0
}

func (m *IsisShAdj) GetAdjacencyCheckpointObjectId() uint32 {
	if m != nil {
		return m.AdjacencyCheckpointObjectId
	}
	return 0
}

func (m *IsisShAdj) GetAdjacencyIetfNsfCapableFlag() bool {
	if m != nil {
		return m.AdjacencyIetfNsfCapableFlag
	}
	return false
}

func (m *IsisShAdj) GetAdjacencyDispriority() uint32 {
	if m != nil {
		return m.AdjacencyDispriority
	}
	return 0
}

func (m *IsisShAdj) GetAdjacencyNeighborPriority() uint32 {
	if m != nil {
		return m.AdjacencyNeighborPriority
	}
	return 0
}

func (m *IsisShAdj) GetAdjacencyLocalPriority() uint32 {
	if m != nil {
		return m.AdjacencyLocalPriority
	}
	return 0
}

func (m *IsisShAdj) GetLocalDisFlag() bool {
	if m != nil {
		return m.LocalDisFlag
	}
	return false
}

func (m *IsisShAdj) GetNeighborDisFlag() bool {
	if m != nil {
		return m.NeighborDisFlag
	}
	return false
}

func (m *IsisShAdj) GetAdjacencyAreaAddress() []string {
	if m != nil {
		return m.AdjacencyAreaAddress
	}
	return nil
}

func (m *IsisShAdj) GetAdjacencyTopology() []*IsisShAdjTopo {
	if m != nil {
		return m.AdjacencyTopology
	}
	return nil
}

func (m *IsisShAdj) GetAdjacencyPerAddressFamilyData() []*IsisShAdjAf {
	if m != nil {
		return m.AdjacencyPerAddressFamilyData
	}
	return nil
}

func (m *IsisShAdj) GetNsrStandby() uint32 {
	if m != nil {
		return m.NsrStandby
	}
	return 0
}

func init() {
	proto.RegisterType((*IsisShAdj_KEYS)(nil), "cisco_ios_xr_clns_isis_oper.isis.instances.instance.levels.level.adjacencies.adjacency.isis_sh_adj_KEYS")
	proto.RegisterType((*IsisTopoIdType)(nil), "cisco_ios_xr_clns_isis_oper.isis.instances.instance.levels.level.adjacencies.adjacency.isis_topo_id_type")
	proto.RegisterType((*IsisShAdjTopo)(nil), "cisco_ios_xr_clns_isis_oper.isis.instances.instance.levels.level.adjacencies.adjacency.isis_sh_adj_topo")
	proto.RegisterType((*IsisIpv4AdjSidBackupInfo)(nil), "cisco_ios_xr_clns_isis_oper.isis.instances.instance.levels.level.adjacencies.adjacency.isis_ipv4_adj_sid_backup_info")
	proto.RegisterType((*IsisIpv4AdjSid)(nil), "cisco_ios_xr_clns_isis_oper.isis.instances.instance.levels.level.adjacencies.adjacency.isis_ipv4_adj_sid")
	proto.RegisterType((*IsisShIntfDet)(nil), "cisco_ios_xr_clns_isis_oper.isis.instances.instance.levels.level.adjacencies.adjacency.isis_sh_intf_det")
	proto.RegisterType((*IsisShAdjIpv4)(nil), "cisco_ios_xr_clns_isis_oper.isis.instances.instance.levels.level.adjacencies.adjacency.isis_sh_adj_ipv4")
	proto.RegisterType((*IsisIpv6AdjSidBackupInfo)(nil), "cisco_ios_xr_clns_isis_oper.isis.instances.instance.levels.level.adjacencies.adjacency.isis_ipv6_adj_sid_backup_info")
	proto.RegisterType((*IsisIpv6AdjSid)(nil), "cisco_ios_xr_clns_isis_oper.isis.instances.instance.levels.level.adjacencies.adjacency.isis_ipv6_adj_sid")
	proto.RegisterType((*IsisShAdjIpv6)(nil), "cisco_ios_xr_clns_isis_oper.isis.instances.instance.levels.level.adjacencies.adjacency.isis_sh_adj_ipv6")
	proto.RegisterType((*IsisShAdjAf)(nil), "cisco_ios_xr_clns_isis_oper.isis.instances.instance.levels.level.adjacencies.adjacency.isis_sh_adj_af")
	proto.RegisterType((*IsisShAdj)(nil), "cisco_ios_xr_clns_isis_oper.isis.instances.instance.levels.level.adjacencies.adjacency.isis_sh_adj")
}

func init() { proto.RegisterFile("isis_sh_adj.proto", fileDescriptor_9df2ab394e39008f) }

var fileDescriptor_9df2ab394e39008f = []byte{
	// 1328 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xec, 0x58, 0x4f, 0x73, 0x1b, 0xb5,
	0x1b, 0x1e, 0x3b, 0x69, 0xd3, 0x2a, 0xff, 0xd5, 0xb4, 0xdd, 0x4e, 0xa7, 0xbf, 0xb6, 0xe9, 0x8f,
	0x69, 0xf9, 0x67, 0x20, 0x6d, 0x97, 0x16, 0x68, 0x21, 0x4d, 0x1a, 0x62, 0x1a, 0x42, 0x67, 0x5d,
	0x3a, 0xc3, 0x49, 0x23, 0xaf, 0xb4, 0xb6, 0x92, 0xb5, 0x76, 0x47, 0x92, 0x33, 0x71, 0x87, 0x03,
	0x27, 0xb8, 0x31, 0xc3, 0x89, 0x03, 0xbd, 0x32, 0x5c, 0x38, 0xf0, 0x99, 0xb8, 0xf2, 0x25, 0x18,
	0x49, 0xbb, 0x2b, 0x79, 0x93, 0x1e, 0x38, 0x24, 0x90, 0x81, 0x93, 0x6d, 0x3d, 0xcf, 0x23, 0x3d,
	0xef, 0xab, 0x77, 0xdf, 0x95, 0x0c, 0x16, 0x99, 0x64, 0x12, 0xc9, 0x3e, 0xc2, 0x64, 0xa7, 0x95,
	0x8b, 0x4c, 0x65, 0xf0, 0x79, 0xcc, 0x64, 0x9c, 0x21, 0x96, 0x49, 0xb4, 0x2f, 0x50, 0x9c, 0x72,
	0x89, 0x0c, 0x29, 0xcb, 0xa9, 0x68, 0xe9, 0x6f, 0x2d, 0xc6, 0xa5, 0xc2, 0x3c, 0xa6, 0xee, 0x5b,
	0x2b, 0xa5, 0x7b, 0x34, 0x95, 0xf6, 0xa3, 0x85, 0xc9, 0x0e, 0x8e, 0x29, 0x8f, 0x19, 0x95, 0xd5,
	0xf7, 0xd1, 0xf2, 0x0f, 0x0d, 0xb0, 0xe0, 0xad, 0x86, 0x9e, 0x3c, 0xfe, 0xaa, 0x03, 0x6f, 0x80,
	0xd9, 0x72, 0x0e, 0xc4, 0xf1, 0x80, 0x06, 0x8d, 0x6b, 0x8d, 0x5b, 0x67, 0xa3, 0x99, 0x72, 0x70,
	0x1b, 0x0f, 0x28, 0x5c, 0x02, 0xa7, 0xcc, 0xc4, 0x41, 0xd3, 0x80, 0xf6, 0x07, 0xbc, 0x0c, 0xce,
	0xca, 0x91, 0x54, 0x74, 0x80, 0x18, 0x09, 0x26, 0x0c, 0x72, 0xc6, 0x0e, 0xb4, 0x09, 0x7c, 0x0d,
	0xcc, 0x31, 0xae, 0xa8, 0x48, 0x70, 0x39, 0xf1, 0xa4, 0x61, 0xcc, 0x56, 0xa3, 0x7a, 0xe6, 0xe5,
	0xef, 0x1a, 0x45, 0x06, 0x54, 0x96, 0x67, 0x88, 0x11, 0xa4, 0x46, 0x39, 0x85, 0x17, 0xc1, 0x14,
	0x4e, 0x7c, 0x3b, 0xa7, 0x71, 0x62, 0x8c, 0x5c, 0x02, 0x67, 0x64, 0x89, 0x58, 0x2f, 0x53, 0xd2,
	0x41, 0x7b, 0xa2, 0x80, 0xac, 0x99, 0xa9, 0x3d, 0x61, 0xa1, 0x1b, 0x60, 0x56, 0x4f, 0x9f, 0x66,
	0xbd, 0x91, 0x6f, 0x65, 0xa6, 0x1c, 0x34, 0x4e, 0xbe, 0x69, 0x8e, 0x67, 0x47, 0x83, 0x70, 0x04,
	0x9a, 0x8c, 0x18, 0x0f, 0xd3, 0x2b, 0xac, 0x75, 0x34, 0xfb, 0xd2, 0x3a, 0x10, 0x7f, 0xd4, 0x64,
	0x04, 0xde, 0x04, 0xf3, 0x95, 0x69, 0xa9, 0xb0, 0x1a, 0xca, 0x22, 0xe2, 0xb9, 0x72, 0xb8, 0x63,
	0x46, 0xe1, 0x26, 0xb8, 0x9e, 0x63, 0x81, 0xd3, 0x94, 0xa6, 0x28, 0x5f, 0xc9, 0x51, 0xca, 0xf8,
	0x2e, 0x92, 0xc3, 0x3c, 0x17, 0x54, 0x4a, 0x4a, 0x50, 0x92, 0xe2, 0x9e, 0xc9, 0xc8, 0x99, 0xe8,
	0x4a, 0x49, 0x7c, 0xba, 0x92, 0x6f, 0x31, 0xbe, 0xdb, 0xa9, 0x58, 0x1b, 0x29, 0xee, 0x2d, 0x7f,
	0xdb, 0x04, 0x57, 0x8c, 0x19, 0x96, 0xef, 0xdd, 0x31, 0x49, 0x90, 0x8c, 0xa0, 0x2e, 0x8e, 0x77,
	0x87, 0x39, 0x62, 0x3c, 0xc9, 0xe0, 0x5d, 0x70, 0xb1, 0xf8, 0x99, 0xe2, 0x2e, 0x4d, 0xb5, 0xb1,
	0x78, 0x17, 0x49, 0xf6, 0xc2, 0x6e, 0xd4, 0x6c, 0xb4, 0x64, 0xe1, 0x2d, 0x8d, 0x76, 0x34, 0xd8,
	0x61, 0x2f, 0x28, 0x7c, 0x0b, 0xc0, 0x83, 0xb2, 0xa0, 0x79, 0x6d, 0xe2, 0xd6, 0x6c, 0xb4, 0x50,
	0x57, 0xc0, 0x16, 0x38, 0x57, 0xb0, 0x79, 0x46, 0x28, 0xc2, 0x84, 0x68, 0x8f, 0xc5, 0xa6, 0x2e,
	0x5a, 0x68, 0x3b, 0x23, 0x74, 0xd5, 0x02, 0xba, 0xd4, 0x4a, 0x3e, 0xdd, 0x57, 0xfd, 0x2c, 0x2f,
	0x4b, 0xad, 0xa0, 0xda, 0x41, 0xf8, 0x3a, 0x58, 0xa8, 0x42, 0x29, 0x4a, 0x30, 0x38, 0x65, 0x88,
	0xf3, 0x76, 0xbc, 0x5d, 0x0e, 0x2f, 0xbf, 0x9c, 0x28, 0xaa, 0xd2, 0x4f, 0x84, 0xf6, 0x55, 0x6d,
	0x9a, 0xc9, 0xcc, 0x1e, 0x4e, 0x87, 0x65, 0xe0, 0x8b, 0x15, 0xd4, 0x61, 0xe4, 0xb9, 0x06, 0xe0,
	0x2f, 0x0d, 0xb0, 0x34, 0x2e, 0xb0, 0xeb, 0x98, 0x7d, 0x9c, 0x5e, 0x19, 0x1e, 0x69, 0x3d, 0xbd,
	0x6a, 0x0b, 0x23, 0xe8, 0x1b, 0x7d, 0x64, 0x00, 0xf8, 0x6b, 0x03, 0x5c, 0x3c, 0xcc, 0x29, 0x52,
	0xf6, 0x59, 0xfa, 0xdb, 0xcc, 0x2e, 0x1d, 0x34, 0xfb, 0x8c, 0x2e, 0x77, 0xdd, 0x93, 0xca, 0xb8,
	0x4a, 0x10, 0xa1, 0x4a, 0x3f, 0x2e, 0xae, 0xdf, 0x30, 0x4e, 0xe8, 0x7e, 0xb1, 0x31, 0xae, 0x0d,
	0xb5, 0xf5, 0xe8, 0x21, 0x8d, 0xa9, 0x79, 0x58, 0x63, 0xfa, 0x7d, 0x72, 0xbc, 0x1d, 0x68, 0x8b,
	0xba, 0xc7, 0xe8, 0x12, 0x43, 0xba, 0xc6, 0x6c, 0x63, 0x9a, 0xd2, 0xbf, 0x37, 0xb3, 0x1c, 0xbe,
	0x09, 0x16, 0xdd, 0xb4, 0x65, 0xc9, 0xea, 0x0a, 0x3f, 0x1b, 0x2d, 0x54, 0x40, 0x59, 0xb1, 0xdf,
	0x37, 0xc0, 0xec, 0x58, 0xbe, 0x8b, 0x2c, 0xb3, 0x63, 0xcb, 0x72, 0x34, 0xe3, 0x67, 0x16, 0xbe,
	0x6c, 0x80, 0xf3, 0x3c, 0xe3, 0x28, 0x11, 0x02, 0x8d, 0x1b, 0x9b, 0x3c, 0x6e, 0x63, 0x90, 0x67,
	0x7c, 0x43, 0x88, 0x55, 0xdf, 0xde, 0x4f, 0x0d, 0xb0, 0x34, 0xe4, 0x84, 0x8a, 0x74, 0xc4, 0x78,
	0x6f, 0xec, 0xf9, 0x9d, 0xb8, 0x35, 0xbd, 0xd2, 0x3f, 0x52, 0x77, 0x5e, 0x95, 0x45, 0xe7, 0x9c,
	0x8b, 0xaa, 0x5b, 0xc0, 0x7b, 0x20, 0xf0, 0xcc, 0x8d, 0xa7, 0xef, 0xb4, 0xe9, 0x71, 0x17, 0x1c,
	0xee, 0xc7, 0x35, 0xd6, 0x70, 0xc3, 0xff, 0x1a, 0x6e, 0x2d, 0x11, 0x27, 0xae, 0xe1, 0x86, 0x27,
	0xa9, 0xe1, 0x86, 0x7f, 0xa1, 0xe1, 0x1e, 0xd2, 0x0c, 0xc3, 0x93, 0xdf, 0x0c, 0xc3, 0x7f, 0x6a,
	0x33, 0x0c, 0xff, 0x95, 0xcd, 0xf0, 0xe7, 0x26, 0x98, 0xf3, 0x8b, 0x0c, 0x27, 0xaf, 0xbe, 0x07,
	0x7c, 0x0d, 0x26, 0xf5, 0x4b, 0xa3, 0x78, 0xb0, 0x8f, 0x3c, 0xe4, 0xf2, 0x00, 0x10, 0x99, 0x55,
	0x8b, 0xd5, 0xc3, 0xa2, 0x4e, 0x8f, 0x6b, 0xf5, 0xd0, 0xac, 0x1e, 0x2e, 0xff, 0x31, 0x03, 0xa6,
	0x3d, 0xa8, 0xd6, 0x25, 0xab, 0x0b, 0xd9, 0x8a, 0xed, 0xde, 0xae, 0xb2, 0xbd, 0x9b, 0x99, 0xc7,
	0xe7, 0x39, 0x0e, 0x6e, 0xdb, 0xee, 0xed, 0xa8, 0x3c, 0xc7, 0xf0, 0x1d, 0x7f, 0x5a, 0x57, 0x64,
	0x77, 0x0c, 0xd7, 0xf5, 0x34, 0xb7, 0xf3, 0xef, 0xfa, 0xcd, 0x77, 0x40, 0x09, 0xc3, 0xe6, 0x32,
	0x13, 0xdc, 0xad, 0x29, 0x3e, 0xd7, 0xd0, 0x33, 0x7d, 0xcd, 0xbb, 0x09, 0xe6, 0x3d, 0x27, 0x0a,
	0x2b, 0x1a, 0x84, 0xf6, 0x8a, 0xe3, 0xac, 0xe8, 0xd1, 0xf1, 0x10, 0xbb, 0x09, 0x29, 0xc8, 0xef,
	0xd7, 0x42, 0x7c, 0x94, 0x10, 0xcb, 0x0f, 0xfd, 0xee, 0xaa, 0x93, 0xe6, 0x34, 0xf7, 0x8c, 0xe6,
	0xbc, 0xf3, 0x6f, 0x51, 0xab, 0xbb, 0x0f, 0x2e, 0x95, 0x5b, 0xad, 0x15, 0x82, 0x2a, 0x31, 0x42,
	0x62, 0xc8, 0x39, 0xe3, 0xbd, 0xe0, 0xbe, 0xb9, 0x42, 0x5d, 0xc0, 0x64, 0xa7, 0x6d, 0xf1, 0x48,
	0xc3, 0x91, 0x45, 0x3d, 0x69, 0x78, 0x50, 0xfa, 0x81, 0x2f, 0x0d, 0xeb, 0xd2, 0xf7, 0xc0, 0xf9,
	0x83, 0xab, 0xd2, 0xfd, 0x3c, 0xf8, 0xd0, 0xbc, 0xe8, 0x60, 0x6d, 0xc5, 0xc7, 0xfb, 0xb9, 0x27,
	0x09, 0xc7, 0x25, 0x1f, 0xf9, 0x92, 0xd0, 0x97, 0xdc, 0x35, 0x39, 0xa9, 0xad, 0x12, 0x67, 0x43,
	0xae, 0x82, 0x07, 0xf6, 0x24, 0x51, 0x5b, 0x67, 0x4d, 0x63, 0x9e, 0x2c, 0xac, 0xcb, 0x1e, 0xfa,
	0xb2, 0x70, 0x5c, 0xf6, 0x00, 0x5c, 0x76, 0x3b, 0x30, 0xcc, 0x15, 0x1b, 0x50, 0xfd, 0xf6, 0x66,
	0xc5, 0x75, 0xf4, 0x63, 0x93, 0x90, 0xa0, 0xa2, 0x7c, 0x69, 0x18, 0xcf, 0x35, 0x41, 0xdf, 0x44,
	0xf5, 0xd1, 0xa1, 0x2e, 0x0f, 0x3e, 0x31, 0xcb, 0xcd, 0xd7, 0x34, 0xf0, 0x6d, 0xe0, 0x4a, 0x0b,
	0xf5, 0xb3, 0x94, 0x18, 0xf2, 0x6a, 0xed, 0x8c, 0xb0, 0x59, 0x00, 0x70, 0x0d, 0xfc, 0xcf, 0xd1,
	0xe3, 0x3e, 0x8d, 0x77, 0xf3, 0x8c, 0x71, 0x85, 0xb2, 0xee, 0x0e, 0x8d, 0x95, 0x7e, 0x70, 0x1e,
	0x19, 0xa9, 0xb3, 0xbf, 0x56, 0x91, 0xbe, 0x30, 0x9c, 0x36, 0x81, 0xeb, 0xe0, 0xaa, 0x57, 0x5f,
	0x54, 0x25, 0x88, 0xcb, 0x04, 0xc5, 0x38, 0xc7, 0xdd, 0x94, 0xda, 0x08, 0xd7, 0x4c, 0x84, 0x6e,
	0x96, 0x36, 0x55, 0xc9, 0xb6, 0x4c, 0xd6, 0x2c, 0xc7, 0x04, 0x79, 0x1b, 0xb8, 0x32, 0x44, 0x84,
	0xc9, 0x5c, 0xb0, 0x4c, 0x30, 0x35, 0x0a, 0xd6, 0xab, 0xc4, 0x5a, 0x70, 0xdd, 0x61, 0xf0, 0xa1,
	0x9f, 0x58, 0x4e, 0x59, 0xaf, 0xdf, 0xcd, 0x04, 0xaa, 0xa4, 0x8f, 0x8d, 0xf4, 0x52, 0x45, 0xd9,
	0x2e, 0x18, 0x4f, 0x4b, 0xfd, 0x3d, 0xe0, 0xb2, 0x8e, 0xd2, 0x2c, 0xc6, 0xa9, 0x13, 0x6f, 0x18,
	0xf1, 0x85, 0x0a, 0xdf, 0xd2, 0x70, 0xa5, 0xfc, 0x3f, 0x98, 0xb3, 0x7c, 0xc2, 0xa4, 0x8d, 0xf1,
	0x53, 0x13, 0xe3, 0x8c, 0x19, 0x5d, 0x67, 0xd2, 0x04, 0xf5, 0x06, 0x58, 0xac, 0x5c, 0x55, 0xc4,
	0x4d, 0x43, 0x9c, 0x2f, 0x81, 0x92, 0x7b, 0x07, 0xb8, 0xb5, 0x10, 0x16, 0x14, 0x57, 0x67, 0x85,
	0xb6, 0x39, 0x2b, 0xb8, 0x0c, 0xac, 0x0a, 0x8a, 0xcb, 0xf3, 0xc2, 0x8f, 0x0d, 0x7f, 0xc7, 0xcb,
	0x3f, 0x43, 0x82, 0xcf, 0x8e, 0xe7, 0xed, 0x57, 0xfe, 0x35, 0xe4, 0xd5, 0xd6, 0xb3, 0xc2, 0x02,
	0xfc, 0xad, 0x01, 0xae, 0x3b, 0x67, 0x39, 0x15, 0x65, 0x3c, 0x28, 0xc1, 0x03, 0x96, 0x8e, 0x10,
	0xc1, 0x0a, 0x07, 0x4f, 0x8c, 0xd1, 0xe4, 0x38, 0x8c, 0xe2, 0x24, 0xba, 0x52, 0x21, 0x4f, 0xa9,
	0x28, 0x52, 0xb8, 0x61, 0xdc, 0xac, 0x63, 0x85, 0xe1, 0x55, 0x30, 0xcd, 0xa5, 0xd0, 0xbd, 0x91,
	0x93, 0xee, 0x28, 0xd8, 0x32, 0x15, 0x00, 0xb8, 0x14, 0x1d, 0x3b, 0xd2, 0x3d, 0x6d, 0xfe, 0x93,
	0xbc, 0xfd, 0x67, 0x00, 0x00, 0x00, 0xff, 0xff, 0x35, 0xbc, 0xeb, 0x98, 0xa8, 0x14, 0x00, 0x00,
}
