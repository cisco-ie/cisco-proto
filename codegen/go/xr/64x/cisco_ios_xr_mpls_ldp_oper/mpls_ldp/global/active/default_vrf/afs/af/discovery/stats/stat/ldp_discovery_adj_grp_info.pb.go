/*
Copyright 2019 Cisco Systems

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: ldp_discovery_adj_grp_info.proto

package cisco_ios_xr_mpls_ldp_oper_mpls_ldp_global_active_default_vrf_afs_af_discovery_stats_stat

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type LdpDiscoveryAdjGrpInfo_KEYS struct {
	AfName               string   `protobuf:"bytes,1,opt,name=af_name,json=afName,proto3" json:"af_name,omitempty"`
	LsrId                string   `protobuf:"bytes,2,opt,name=lsr_id,json=lsrId,proto3" json:"lsr_id,omitempty"`
	LabelSpaceId         uint32   `protobuf:"varint,3,opt,name=label_space_id,json=labelSpaceId,proto3" json:"label_space_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LdpDiscoveryAdjGrpInfo_KEYS) Reset()         { *m = LdpDiscoveryAdjGrpInfo_KEYS{} }
func (m *LdpDiscoveryAdjGrpInfo_KEYS) String() string { return proto.CompactTextString(m) }
func (*LdpDiscoveryAdjGrpInfo_KEYS) ProtoMessage()    {}
func (*LdpDiscoveryAdjGrpInfo_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_8555183d56035bcf, []int{0}
}

func (m *LdpDiscoveryAdjGrpInfo_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LdpDiscoveryAdjGrpInfo_KEYS.Unmarshal(m, b)
}
func (m *LdpDiscoveryAdjGrpInfo_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LdpDiscoveryAdjGrpInfo_KEYS.Marshal(b, m, deterministic)
}
func (m *LdpDiscoveryAdjGrpInfo_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LdpDiscoveryAdjGrpInfo_KEYS.Merge(m, src)
}
func (m *LdpDiscoveryAdjGrpInfo_KEYS) XXX_Size() int {
	return xxx_messageInfo_LdpDiscoveryAdjGrpInfo_KEYS.Size(m)
}
func (m *LdpDiscoveryAdjGrpInfo_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_LdpDiscoveryAdjGrpInfo_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_LdpDiscoveryAdjGrpInfo_KEYS proto.InternalMessageInfo

func (m *LdpDiscoveryAdjGrpInfo_KEYS) GetAfName() string {
	if m != nil {
		return m.AfName
	}
	return ""
}

func (m *LdpDiscoveryAdjGrpInfo_KEYS) GetLsrId() string {
	if m != nil {
		return m.LsrId
	}
	return ""
}

func (m *LdpDiscoveryAdjGrpInfo_KEYS) GetLabelSpaceId() uint32 {
	if m != nil {
		return m.LabelSpaceId
	}
	return 0
}

type LdpDiscoveryAdjGrpInfo struct {
	AdjacencyGroupUpTime uint32   `protobuf:"varint,50,opt,name=adjacency_group_up_time,json=adjacencyGroupUpTime,proto3" json:"adjacency_group_up_time,omitempty"`
	TcpOpenCount         uint32   `protobuf:"varint,51,opt,name=tcp_open_count,json=tcpOpenCount,proto3" json:"tcp_open_count,omitempty"`
	TcpArbChgCount       uint32   `protobuf:"varint,52,opt,name=tcp_arb_chg_count,json=tcpArbChgCount,proto3" json:"tcp_arb_chg_count,omitempty"`
	TcpRole              uint32   `protobuf:"varint,53,opt,name=tcp_role,json=tcpRole,proto3" json:"tcp_role,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LdpDiscoveryAdjGrpInfo) Reset()         { *m = LdpDiscoveryAdjGrpInfo{} }
func (m *LdpDiscoveryAdjGrpInfo) String() string { return proto.CompactTextString(m) }
func (*LdpDiscoveryAdjGrpInfo) ProtoMessage()    {}
func (*LdpDiscoveryAdjGrpInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_8555183d56035bcf, []int{1}
}

func (m *LdpDiscoveryAdjGrpInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LdpDiscoveryAdjGrpInfo.Unmarshal(m, b)
}
func (m *LdpDiscoveryAdjGrpInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LdpDiscoveryAdjGrpInfo.Marshal(b, m, deterministic)
}
func (m *LdpDiscoveryAdjGrpInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LdpDiscoveryAdjGrpInfo.Merge(m, src)
}
func (m *LdpDiscoveryAdjGrpInfo) XXX_Size() int {
	return xxx_messageInfo_LdpDiscoveryAdjGrpInfo.Size(m)
}
func (m *LdpDiscoveryAdjGrpInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_LdpDiscoveryAdjGrpInfo.DiscardUnknown(m)
}

var xxx_messageInfo_LdpDiscoveryAdjGrpInfo proto.InternalMessageInfo

func (m *LdpDiscoveryAdjGrpInfo) GetAdjacencyGroupUpTime() uint32 {
	if m != nil {
		return m.AdjacencyGroupUpTime
	}
	return 0
}

func (m *LdpDiscoveryAdjGrpInfo) GetTcpOpenCount() uint32 {
	if m != nil {
		return m.TcpOpenCount
	}
	return 0
}

func (m *LdpDiscoveryAdjGrpInfo) GetTcpArbChgCount() uint32 {
	if m != nil {
		return m.TcpArbChgCount
	}
	return 0
}

func (m *LdpDiscoveryAdjGrpInfo) GetTcpRole() uint32 {
	if m != nil {
		return m.TcpRole
	}
	return 0
}

func init() {
	proto.RegisterType((*LdpDiscoveryAdjGrpInfo_KEYS)(nil), "cisco_ios_xr_mpls_ldp_oper.mpls_ldp.global.active.default_vrf.afs.af.discovery.stats.stat.ldp_discovery_adj_grp_info_KEYS")
	proto.RegisterType((*LdpDiscoveryAdjGrpInfo)(nil), "cisco_ios_xr_mpls_ldp_oper.mpls_ldp.global.active.default_vrf.afs.af.discovery.stats.stat.ldp_discovery_adj_grp_info")
}

func init() { proto.RegisterFile("ldp_discovery_adj_grp_info.proto", fileDescriptor_8555183d56035bcf) }

var fileDescriptor_8555183d56035bcf = []byte{
	// 314 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x91, 0xc1, 0x4a, 0x03, 0x31,
	0x10, 0x86, 0x59, 0xc5, 0x56, 0x83, 0x0a, 0x2e, 0x4a, 0x57, 0x2f, 0x96, 0xe2, 0xa1, 0x5e, 0x72,
	0xb0, 0xf6, 0x01, 0xa4, 0x88, 0x14, 0x41, 0xa1, 0xd5, 0x43, 0x4f, 0xc3, 0x6c, 0x32, 0xbb, 0xdd,
	0x92, 0xdd, 0x84, 0x24, 0x5b, 0xed, 0xd3, 0xf9, 0x6a, 0x92, 0x54, 0x7b, 0xeb, 0x25, 0x90, 0xff,
	0xff, 0x26, 0x1f, 0x64, 0x58, 0x5f, 0x49, 0x03, 0xb2, 0x72, 0x42, 0xaf, 0xc9, 0x6e, 0x00, 0xe5,
	0x0a, 0x4a, 0x6b, 0xa0, 0x6a, 0x0a, 0xcd, 0x8d, 0xd5, 0x5e, 0xa7, 0x0b, 0x11, 0x5a, 0xa8, 0xb4,
	0x83, 0x6f, 0x0b, 0xb5, 0x51, 0x0e, 0xc2, 0x8c, 0x36, 0x64, 0xf9, 0xff, 0x8d, 0x97, 0x4a, 0xe7,
	0xa8, 0x38, 0x0a, 0x5f, 0xad, 0x89, 0x4b, 0x2a, 0xb0, 0x55, 0x1e, 0xd6, 0xb6, 0xe0, 0x58, 0x38,
	0x8e, 0x05, 0xdf, 0x29, 0xb8, 0xf3, 0xe8, 0x5d, 0x3c, 0x07, 0x5f, 0xec, 0x76, 0xbf, 0x1e, 0x5e,
	0x9f, 0x17, 0xf3, 0xb4, 0xc7, 0xba, 0x58, 0x40, 0x83, 0x35, 0x65, 0x49, 0x3f, 0x19, 0x9e, 0xcc,
	0x3a, 0x58, 0xbc, 0x61, 0x4d, 0xe9, 0x15, 0xeb, 0x28, 0x67, 0xa1, 0x92, 0xd9, 0x41, 0xcc, 0x8f,
	0x94, 0xb3, 0x53, 0x99, 0xde, 0xb1, 0x73, 0x85, 0x39, 0x29, 0x70, 0x06, 0x05, 0x85, 0xfa, 0xb0,
	0x9f, 0x0c, 0xcf, 0x66, 0xa7, 0x31, 0x9d, 0x87, 0x70, 0x2a, 0x07, 0x3f, 0x09, 0xbb, 0xd9, 0x6f,
	0x4e, 0xc7, 0xac, 0x87, 0x72, 0x85, 0x82, 0x1a, 0xb1, 0x81, 0xd2, 0xea, 0xd6, 0x40, 0x6b, 0xc0,
	0x57, 0x35, 0x65, 0x0f, 0xf1, 0xb5, 0xcb, 0x5d, 0xfd, 0x12, 0xda, 0x4f, 0xf3, 0x51, 0xd5, 0x14,
	0xdc, 0x5e, 0xc4, 0x9f, 0x69, 0x40, 0xe8, 0xb6, 0xf1, 0xd9, 0x68, 0xeb, 0xf6, 0xc2, 0xbc, 0x1b,
	0x6a, 0x26, 0x21, 0x4b, 0xef, 0xd9, 0x45, 0xa0, 0xd0, 0xe6, 0x20, 0x96, 0xe5, 0x1f, 0xf8, 0x18,
	0xc1, 0x30, 0xfe, 0x64, 0xf3, 0xc9, 0xb2, 0xdc, 0xa2, 0xd7, 0xec, 0x38, 0xa0, 0x56, 0x2b, 0xca,
	0xc6, 0x91, 0xe8, 0x7a, 0x61, 0x66, 0x5a, 0x51, 0xde, 0x89, 0xcb, 0x19, 0xfd, 0x06, 0x00, 0x00,
	0xff, 0xff, 0xc9, 0x64, 0x02, 0x64, 0xc0, 0x01, 0x00, 0x00,
}
