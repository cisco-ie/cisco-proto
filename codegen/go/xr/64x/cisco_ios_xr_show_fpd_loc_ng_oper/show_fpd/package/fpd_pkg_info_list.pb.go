/*
Copyright 2019 Cisco Systems

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: fpd_pkg_info_list.proto

package cisco_ios_xr_show_fpd_loc_ng_oper_show_fpd_package

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type FpdPkgInfoList_KEYS struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FpdPkgInfoList_KEYS) Reset()         { *m = FpdPkgInfoList_KEYS{} }
func (m *FpdPkgInfoList_KEYS) String() string { return proto.CompactTextString(m) }
func (*FpdPkgInfoList_KEYS) ProtoMessage()    {}
func (*FpdPkgInfoList_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_36787d221a1f0c7a, []int{0}
}

func (m *FpdPkgInfoList_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FpdPkgInfoList_KEYS.Unmarshal(m, b)
}
func (m *FpdPkgInfoList_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FpdPkgInfoList_KEYS.Marshal(b, m, deterministic)
}
func (m *FpdPkgInfoList_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FpdPkgInfoList_KEYS.Merge(m, src)
}
func (m *FpdPkgInfoList_KEYS) XXX_Size() int {
	return xxx_messageInfo_FpdPkgInfoList_KEYS.Size(m)
}
func (m *FpdPkgInfoList_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_FpdPkgInfoList_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_FpdPkgInfoList_KEYS proto.InternalMessageInfo

type FpdPkgInfo struct {
	CardType             string   `protobuf:"bytes,1,opt,name=card_type,json=cardType,proto3" json:"card_type,omitempty"`
	FpdDesc              string   `protobuf:"bytes,2,opt,name=fpd_desc,json=fpdDesc,proto3" json:"fpd_desc,omitempty"`
	UpgradeMethod        string   `protobuf:"bytes,3,opt,name=upgrade_method,json=upgradeMethod,proto3" json:"upgrade_method,omitempty"`
	FpdVer               string   `protobuf:"bytes,4,opt,name=fpd_ver,json=fpdVer,proto3" json:"fpd_ver,omitempty"`
	MinSwVer             string   `protobuf:"bytes,5,opt,name=min_sw_ver,json=minSwVer,proto3" json:"min_sw_ver,omitempty"`
	MinHwVer             string   `protobuf:"bytes,6,opt,name=min_hw_ver,json=minHwVer,proto3" json:"min_hw_ver,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FpdPkgInfo) Reset()         { *m = FpdPkgInfo{} }
func (m *FpdPkgInfo) String() string { return proto.CompactTextString(m) }
func (*FpdPkgInfo) ProtoMessage()    {}
func (*FpdPkgInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_36787d221a1f0c7a, []int{1}
}

func (m *FpdPkgInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FpdPkgInfo.Unmarshal(m, b)
}
func (m *FpdPkgInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FpdPkgInfo.Marshal(b, m, deterministic)
}
func (m *FpdPkgInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FpdPkgInfo.Merge(m, src)
}
func (m *FpdPkgInfo) XXX_Size() int {
	return xxx_messageInfo_FpdPkgInfo.Size(m)
}
func (m *FpdPkgInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_FpdPkgInfo.DiscardUnknown(m)
}

var xxx_messageInfo_FpdPkgInfo proto.InternalMessageInfo

func (m *FpdPkgInfo) GetCardType() string {
	if m != nil {
		return m.CardType
	}
	return ""
}

func (m *FpdPkgInfo) GetFpdDesc() string {
	if m != nil {
		return m.FpdDesc
	}
	return ""
}

func (m *FpdPkgInfo) GetUpgradeMethod() string {
	if m != nil {
		return m.UpgradeMethod
	}
	return ""
}

func (m *FpdPkgInfo) GetFpdVer() string {
	if m != nil {
		return m.FpdVer
	}
	return ""
}

func (m *FpdPkgInfo) GetMinSwVer() string {
	if m != nil {
		return m.MinSwVer
	}
	return ""
}

func (m *FpdPkgInfo) GetMinHwVer() string {
	if m != nil {
		return m.MinHwVer
	}
	return ""
}

type FpdPkgInfoList struct {
	FpdPkgData           []*FpdPkgInfo `protobuf:"bytes,50,rep,name=fpd_pkg_data,json=fpdPkgData,proto3" json:"fpd_pkg_data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *FpdPkgInfoList) Reset()         { *m = FpdPkgInfoList{} }
func (m *FpdPkgInfoList) String() string { return proto.CompactTextString(m) }
func (*FpdPkgInfoList) ProtoMessage()    {}
func (*FpdPkgInfoList) Descriptor() ([]byte, []int) {
	return fileDescriptor_36787d221a1f0c7a, []int{2}
}

func (m *FpdPkgInfoList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FpdPkgInfoList.Unmarshal(m, b)
}
func (m *FpdPkgInfoList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FpdPkgInfoList.Marshal(b, m, deterministic)
}
func (m *FpdPkgInfoList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FpdPkgInfoList.Merge(m, src)
}
func (m *FpdPkgInfoList) XXX_Size() int {
	return xxx_messageInfo_FpdPkgInfoList.Size(m)
}
func (m *FpdPkgInfoList) XXX_DiscardUnknown() {
	xxx_messageInfo_FpdPkgInfoList.DiscardUnknown(m)
}

var xxx_messageInfo_FpdPkgInfoList proto.InternalMessageInfo

func (m *FpdPkgInfoList) GetFpdPkgData() []*FpdPkgInfo {
	if m != nil {
		return m.FpdPkgData
	}
	return nil
}

func init() {
	proto.RegisterType((*FpdPkgInfoList_KEYS)(nil), "cisco_ios_xr_show_fpd_loc_ng_oper.show_fpd.package.fpd_pkg_info_list_KEYS")
	proto.RegisterType((*FpdPkgInfo)(nil), "cisco_ios_xr_show_fpd_loc_ng_oper.show_fpd.package.fpd_pkg_info")
	proto.RegisterType((*FpdPkgInfoList)(nil), "cisco_ios_xr_show_fpd_loc_ng_oper.show_fpd.package.fpd_pkg_info_list")
}

func init() { proto.RegisterFile("fpd_pkg_info_list.proto", fileDescriptor_36787d221a1f0c7a) }

var fileDescriptor_36787d221a1f0c7a = []byte{
	// 274 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0xd1, 0xcd, 0x4a, 0x03, 0x31,
	0x10, 0x07, 0x70, 0x6a, 0xb5, 0xb6, 0xe3, 0x07, 0x98, 0x83, 0x8d, 0xe8, 0xa1, 0x14, 0x84, 0x9e,
	0xf6, 0xb0, 0xbe, 0x80, 0x87, 0x0a, 0x82, 0x08, 0xd2, 0x8a, 0xe0, 0x69, 0x48, 0x93, 0xec, 0x6e,
	0xd8, 0xee, 0x66, 0x48, 0xa2, 0x6b, 0x5f, 0xcf, 0x27, 0x93, 0x4d, 0xfd, 0x58, 0xe8, 0xc9, 0xeb,
	0xff, 0xf7, 0xcf, 0x84, 0x49, 0x60, 0x9c, 0x91, 0x42, 0x2a, 0x73, 0x34, 0x75, 0x66, 0x71, 0x6d,
	0x7c, 0x48, 0xc8, 0xd9, 0x60, 0x59, 0x2a, 0x8d, 0x97, 0x16, 0x8d, 0xf5, 0xf8, 0xe1, 0xd0, 0x17,
	0xb6, 0xc1, 0xb6, 0xba, 0xb6, 0x12, 0xeb, 0x1c, 0x2d, 0x69, 0x97, 0xfc, 0x84, 0x09, 0x09, 0x59,
	0x8a, 0x5c, 0x4f, 0x39, 0x9c, 0xef, 0x8c, 0xc3, 0x87, 0xbb, 0xd7, 0xe5, 0xf4, 0xb3, 0x07, 0xc7,
	0x5d, 0x62, 0x97, 0x30, 0x92, 0xc2, 0x29, 0x0c, 0x1b, 0xd2, 0xbc, 0x37, 0xe9, 0xcd, 0x46, 0x8b,
	0x61, 0x1b, 0x3c, 0x6f, 0x48, 0xb3, 0x0b, 0x18, 0xb6, 0x65, 0xa5, 0xbd, 0xe4, 0x7b, 0xd1, 0x0e,
	0x33, 0x52, 0x73, 0xed, 0x25, 0xbb, 0x86, 0xd3, 0x37, 0xca, 0x9d, 0x50, 0x1a, 0x2b, 0x1d, 0x0a,
	0xab, 0x78, 0x3f, 0x16, 0x4e, 0xbe, 0xd3, 0xc7, 0x18, 0xb2, 0x31, 0xb4, 0x27, 0xf0, 0x5d, 0x3b,
	0xbe, 0x1f, 0x7d, 0x90, 0x91, 0x7a, 0xd1, 0x8e, 0x5d, 0x01, 0x54, 0xa6, 0x46, 0xdf, 0x44, 0x3b,
	0xd8, 0x5e, 0x5c, 0x99, 0x7a, 0xd9, 0x74, 0xb4, 0xd8, 0xea, 0xe0, 0x57, 0xef, 0x5b, 0x9d, 0x36,
	0x70, 0xb6, 0xb3, 0x1e, 0x5b, 0xfd, 0x2d, 0xa6, 0x44, 0x10, 0x3c, 0x9d, 0xf4, 0x67, 0x47, 0xe9,
	0x6d, 0xf2, 0xff, 0xe7, 0x4b, 0xba, 0xc3, 0x17, 0x90, 0x91, 0x7a, 0x2a, 0xf3, 0xb9, 0x08, 0x62,
	0x35, 0x88, 0x5f, 0x72, 0xf3, 0x15, 0x00, 0x00, 0xff, 0xff, 0xba, 0x6b, 0x19, 0x80, 0xad, 0x01,
	0x00, 0x00,
}
