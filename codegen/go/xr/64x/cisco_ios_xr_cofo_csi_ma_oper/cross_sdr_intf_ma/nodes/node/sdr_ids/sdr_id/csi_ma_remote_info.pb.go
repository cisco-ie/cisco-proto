/*
Copyright 2019 Cisco Systems

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: csi_ma_remote_info.proto

package cisco_ios_xr_cofo_csi_ma_oper_cross_sdr_intf_ma_nodes_node_sdr_ids_sdr_id

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type CsiMaRemoteInfo_KEYS struct {
	NodeName             string   `protobuf:"bytes,1,opt,name=node_name,json=nodeName,proto3" json:"node_name,omitempty"`
	SdrId                uint32   `protobuf:"varint,2,opt,name=sdr_id,json=sdrId,proto3" json:"sdr_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CsiMaRemoteInfo_KEYS) Reset()         { *m = CsiMaRemoteInfo_KEYS{} }
func (m *CsiMaRemoteInfo_KEYS) String() string { return proto.CompactTextString(m) }
func (*CsiMaRemoteInfo_KEYS) ProtoMessage()    {}
func (*CsiMaRemoteInfo_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_081b3bceb9664627, []int{0}
}

func (m *CsiMaRemoteInfo_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CsiMaRemoteInfo_KEYS.Unmarshal(m, b)
}
func (m *CsiMaRemoteInfo_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CsiMaRemoteInfo_KEYS.Marshal(b, m, deterministic)
}
func (m *CsiMaRemoteInfo_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CsiMaRemoteInfo_KEYS.Merge(m, src)
}
func (m *CsiMaRemoteInfo_KEYS) XXX_Size() int {
	return xxx_messageInfo_CsiMaRemoteInfo_KEYS.Size(m)
}
func (m *CsiMaRemoteInfo_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_CsiMaRemoteInfo_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_CsiMaRemoteInfo_KEYS proto.InternalMessageInfo

func (m *CsiMaRemoteInfo_KEYS) GetNodeName() string {
	if m != nil {
		return m.NodeName
	}
	return ""
}

func (m *CsiMaRemoteInfo_KEYS) GetSdrId() uint32 {
	if m != nil {
		return m.SdrId
	}
	return 0
}

type CsiIpaddrT struct {
	Af                   string   `protobuf:"bytes,1,opt,name=af,proto3" json:"af,omitempty"`
	Ipv4                 string   `protobuf:"bytes,2,opt,name=ipv4,proto3" json:"ipv4,omitempty"`
	Ipv6                 string   `protobuf:"bytes,3,opt,name=ipv6,proto3" json:"ipv6,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CsiIpaddrT) Reset()         { *m = CsiIpaddrT{} }
func (m *CsiIpaddrT) String() string { return proto.CompactTextString(m) }
func (*CsiIpaddrT) ProtoMessage()    {}
func (*CsiIpaddrT) Descriptor() ([]byte, []int) {
	return fileDescriptor_081b3bceb9664627, []int{1}
}

func (m *CsiIpaddrT) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CsiIpaddrT.Unmarshal(m, b)
}
func (m *CsiIpaddrT) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CsiIpaddrT.Marshal(b, m, deterministic)
}
func (m *CsiIpaddrT) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CsiIpaddrT.Merge(m, src)
}
func (m *CsiIpaddrT) XXX_Size() int {
	return xxx_messageInfo_CsiIpaddrT.Size(m)
}
func (m *CsiIpaddrT) XXX_DiscardUnknown() {
	xxx_messageInfo_CsiIpaddrT.DiscardUnknown(m)
}

var xxx_messageInfo_CsiIpaddrT proto.InternalMessageInfo

func (m *CsiIpaddrT) GetAf() string {
	if m != nil {
		return m.Af
	}
	return ""
}

func (m *CsiIpaddrT) GetIpv4() string {
	if m != nil {
		return m.Ipv4
	}
	return ""
}

func (m *CsiIpaddrT) GetIpv6() string {
	if m != nil {
		return m.Ipv6
	}
	return ""
}

type CsiIndexInfo_ struct {
	CsiIndex             uint32        `protobuf:"varint,1,opt,name=csi_index,json=csiIndex,proto3" json:"csi_index,omitempty"`
	IpArr                []*CsiIpaddrT `protobuf:"bytes,2,rep,name=ip_arr,json=ipArr,proto3" json:"ip_arr,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *CsiIndexInfo_) Reset()         { *m = CsiIndexInfo_{} }
func (m *CsiIndexInfo_) String() string { return proto.CompactTextString(m) }
func (*CsiIndexInfo_) ProtoMessage()    {}
func (*CsiIndexInfo_) Descriptor() ([]byte, []int) {
	return fileDescriptor_081b3bceb9664627, []int{2}
}

func (m *CsiIndexInfo_) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CsiIndexInfo_.Unmarshal(m, b)
}
func (m *CsiIndexInfo_) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CsiIndexInfo_.Marshal(b, m, deterministic)
}
func (m *CsiIndexInfo_) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CsiIndexInfo_.Merge(m, src)
}
func (m *CsiIndexInfo_) XXX_Size() int {
	return xxx_messageInfo_CsiIndexInfo_.Size(m)
}
func (m *CsiIndexInfo_) XXX_DiscardUnknown() {
	xxx_messageInfo_CsiIndexInfo_.DiscardUnknown(m)
}

var xxx_messageInfo_CsiIndexInfo_ proto.InternalMessageInfo

func (m *CsiIndexInfo_) GetCsiIndex() uint32 {
	if m != nil {
		return m.CsiIndex
	}
	return 0
}

func (m *CsiIndexInfo_) GetIpArr() []*CsiIpaddrT {
	if m != nil {
		return m.IpArr
	}
	return nil
}

type CsiHelperPub_ struct {
	CsiPicArr            []uint64         `protobuf:"varint,1,rep,packed,name=csi_pic_arr,json=csiPicArr,proto3" json:"csi_pic_arr,omitempty"`
	CsiInfoArr           []*CsiIndexInfo_ `protobuf:"bytes,2,rep,name=csi_info_arr,json=csiInfoArr,proto3" json:"csi_info_arr,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *CsiHelperPub_) Reset()         { *m = CsiHelperPub_{} }
func (m *CsiHelperPub_) String() string { return proto.CompactTextString(m) }
func (*CsiHelperPub_) ProtoMessage()    {}
func (*CsiHelperPub_) Descriptor() ([]byte, []int) {
	return fileDescriptor_081b3bceb9664627, []int{3}
}

func (m *CsiHelperPub_) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CsiHelperPub_.Unmarshal(m, b)
}
func (m *CsiHelperPub_) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CsiHelperPub_.Marshal(b, m, deterministic)
}
func (m *CsiHelperPub_) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CsiHelperPub_.Merge(m, src)
}
func (m *CsiHelperPub_) XXX_Size() int {
	return xxx_messageInfo_CsiHelperPub_.Size(m)
}
func (m *CsiHelperPub_) XXX_DiscardUnknown() {
	xxx_messageInfo_CsiHelperPub_.DiscardUnknown(m)
}

var xxx_messageInfo_CsiHelperPub_ proto.InternalMessageInfo

func (m *CsiHelperPub_) GetCsiPicArr() []uint64 {
	if m != nil {
		return m.CsiPicArr
	}
	return nil
}

func (m *CsiHelperPub_) GetCsiInfoArr() []*CsiIndexInfo_ {
	if m != nil {
		return m.CsiInfoArr
	}
	return nil
}

type CsiMaRemoteInfo struct {
	SdrIdXr              uint32         `protobuf:"varint,50,opt,name=sdr_id_xr,json=sdrIdXr,proto3" json:"sdr_id_xr,omitempty"`
	PubData              *CsiHelperPub_ `protobuf:"bytes,51,opt,name=pub_data,json=pubData,proto3" json:"pub_data,omitempty"`
	ItemState            string         `protobuf:"bytes,52,opt,name=item_state,json=itemState,proto3" json:"item_state,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *CsiMaRemoteInfo) Reset()         { *m = CsiMaRemoteInfo{} }
func (m *CsiMaRemoteInfo) String() string { return proto.CompactTextString(m) }
func (*CsiMaRemoteInfo) ProtoMessage()    {}
func (*CsiMaRemoteInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_081b3bceb9664627, []int{4}
}

func (m *CsiMaRemoteInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CsiMaRemoteInfo.Unmarshal(m, b)
}
func (m *CsiMaRemoteInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CsiMaRemoteInfo.Marshal(b, m, deterministic)
}
func (m *CsiMaRemoteInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CsiMaRemoteInfo.Merge(m, src)
}
func (m *CsiMaRemoteInfo) XXX_Size() int {
	return xxx_messageInfo_CsiMaRemoteInfo.Size(m)
}
func (m *CsiMaRemoteInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_CsiMaRemoteInfo.DiscardUnknown(m)
}

var xxx_messageInfo_CsiMaRemoteInfo proto.InternalMessageInfo

func (m *CsiMaRemoteInfo) GetSdrIdXr() uint32 {
	if m != nil {
		return m.SdrIdXr
	}
	return 0
}

func (m *CsiMaRemoteInfo) GetPubData() *CsiHelperPub_ {
	if m != nil {
		return m.PubData
	}
	return nil
}

func (m *CsiMaRemoteInfo) GetItemState() string {
	if m != nil {
		return m.ItemState
	}
	return ""
}

func init() {
	proto.RegisterType((*CsiMaRemoteInfo_KEYS)(nil), "cisco_ios_xr_cofo_csi_ma_oper.cross_sdr_intf_ma.nodes.node.sdr_ids.sdr_id.csi_ma_remote_info_KEYS")
	proto.RegisterType((*CsiIpaddrT)(nil), "cisco_ios_xr_cofo_csi_ma_oper.cross_sdr_intf_ma.nodes.node.sdr_ids.sdr_id.csi_ipaddr_t")
	proto.RegisterType((*CsiIndexInfo_)(nil), "cisco_ios_xr_cofo_csi_ma_oper.cross_sdr_intf_ma.nodes.node.sdr_ids.sdr_id.csi_index_info_")
	proto.RegisterType((*CsiHelperPub_)(nil), "cisco_ios_xr_cofo_csi_ma_oper.cross_sdr_intf_ma.nodes.node.sdr_ids.sdr_id.csi_helper_pub_")
	proto.RegisterType((*CsiMaRemoteInfo)(nil), "cisco_ios_xr_cofo_csi_ma_oper.cross_sdr_intf_ma.nodes.node.sdr_ids.sdr_id.csi_ma_remote_info")
}

func init() { proto.RegisterFile("csi_ma_remote_info.proto", fileDescriptor_081b3bceb9664627) }

var fileDescriptor_081b3bceb9664627 = []byte{
	// 387 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x93, 0xcd, 0x8a, 0xdb, 0x30,
	0x10, 0xc7, 0xb1, 0xb3, 0x9b, 0x8d, 0x67, 0xbb, 0x2d, 0x08, 0x4a, 0x45, 0x4b, 0x8b, 0xf1, 0xc9,
	0x27, 0x1f, 0x76, 0x97, 0xbd, 0x2f, 0xb4, 0x85, 0x50, 0x5a, 0x8a, 0xf6, 0xd0, 0x8f, 0xcb, 0xa0,
	0x48, 0x32, 0x15, 0xd4, 0x96, 0x18, 0x29, 0x25, 0x87, 0x3e, 0x4b, 0x5f, 0xa1, 0x6f, 0xd1, 0xe7,
	0x2a, 0x52, 0x4c, 0x12, 0xc8, 0x35, 0x7b, 0xf1, 0xc7, 0x0f, 0xcf, 0xf8, 0x37, 0xff, 0xb1, 0x81,
	0xab, 0x60, 0x71, 0x90, 0x48, 0x66, 0x70, 0xd1, 0xa0, 0x1d, 0x7b, 0xd7, 0x79, 0x72, 0xd1, 0xb1,
	0xa5, 0xb2, 0x41, 0x39, 0xb4, 0x2e, 0xe0, 0x86, 0x50, 0xb9, 0xde, 0xe1, 0xf4, 0xac, 0xf3, 0x86,
	0x3a, 0x45, 0x2e, 0x04, 0x0c, 0x9a, 0xd0, 0x8e, 0xb1, 0xc7, 0x41, 0x76, 0xa3, 0xd3, 0x26, 0xe4,
	0x63, 0x97, 0xb1, 0x0e, 0xd3, 0xb9, 0xf9, 0x08, 0x2f, 0x8e, 0x5f, 0x83, 0x1f, 0xde, 0x7d, 0x7b,
	0x60, 0xaf, 0xa0, 0x4a, 0x15, 0x38, 0xca, 0xc1, 0xf0, 0xa2, 0x2e, 0xda, 0x4a, 0x2c, 0x12, 0xf8,
	0x24, 0x07, 0xc3, 0x9e, 0xc3, 0x7c, 0xdb, 0x81, 0x97, 0x75, 0xd1, 0x5e, 0x89, 0xf3, 0xa0, 0x69,
	0xa9, 0x9b, 0xf7, 0xf0, 0x24, 0xb5, 0xb3, 0x5e, 0x6a, 0x4d, 0x18, 0xd9, 0x53, 0x28, 0x65, 0x3f,
	0x15, 0x97, 0xb2, 0x67, 0x0c, 0xce, 0xac, 0xff, 0x75, 0x9b, 0x8b, 0x2a, 0x91, 0xaf, 0x27, 0x76,
	0xc7, 0x67, 0x3b, 0x76, 0xd7, 0xfc, 0x29, 0xe0, 0x59, 0x6e, 0x34, 0x6a, 0xb3, 0xd9, 0x3a, 0x25,
	0x9f, 0x1d, 0xca, 0x2d, 0xaf, 0xc4, 0x42, 0x05, 0xbb, 0x4c, 0xf7, 0x6c, 0x84, 0xb9, 0xf5, 0x28,
	0x89, 0x78, 0x59, 0xcf, 0xda, 0xcb, 0xeb, 0x2f, 0xdd, 0xc9, 0x32, 0xea, 0x0e, 0x27, 0x12, 0xe7,
	0xd6, 0xdf, 0x13, 0x35, 0x7f, 0x27, 0xc1, 0x1f, 0xe6, 0xa7, 0x37, 0x84, 0x7e, 0xbd, 0x42, 0xf6,
	0x06, 0x2e, 0x13, 0xf2, 0x56, 0x65, 0x91, 0xa2, 0x9e, 0xb5, 0x67, 0x22, 0x39, 0x7f, 0xb6, 0xea,
	0x9e, 0x88, 0xfd, 0x9e, 0xc2, 0x49, 0xd3, 0xec, 0x4d, 0xbf, 0x9f, 0xda, 0x74, 0x1f, 0x99, 0x80,
	0x9c, 0x4f, 0xef, 0x92, 0xf1, 0xbf, 0x02, 0xd8, 0xf1, 0xaa, 0xd9, 0x4b, 0xa8, 0xb6, 0xc5, 0xb8,
	0x21, 0x7e, 0x9d, 0x53, 0xbd, 0xc8, 0xbb, 0xfc, 0x4a, 0x6c, 0x0d, 0x8b, 0x34, 0x98, 0x96, 0x51,
	0xf2, 0x9b, 0xba, 0x78, 0x04, 0xd9, 0x83, 0xf8, 0xc4, 0x85, 0x5f, 0xaf, 0xde, 0xca, 0x28, 0xd9,
	0x6b, 0x00, 0x1b, 0xcd, 0x80, 0x21, 0xca, 0x68, 0xf8, 0x6d, 0xfe, 0x2c, 0xaa, 0x44, 0x1e, 0x12,
	0x58, 0xcd, 0xf3, 0x4f, 0x70, 0xf3, 0x3f, 0x00, 0x00, 0xff, 0xff, 0x64, 0x97, 0x30, 0x4e, 0x20,
	0x03, 0x00, 0x00,
}
