/*
Copyright 2019 Cisco Systems

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: vpdn_lsg_node.proto

package cisco_ios_xr_tunnel_vpdn_oper_vpdn_tunnel_destinations_tunnel_destination

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type VpdnLsgNode_KEYS struct {
	VrfName              string   `protobuf:"bytes,1,opt,name=vrf_name,json=vrfName,proto3" json:"vrf_name,omitempty"`
	Address              string   `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VpdnLsgNode_KEYS) Reset()         { *m = VpdnLsgNode_KEYS{} }
func (m *VpdnLsgNode_KEYS) String() string { return proto.CompactTextString(m) }
func (*VpdnLsgNode_KEYS) ProtoMessage()    {}
func (*VpdnLsgNode_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_7d4e00189bf0a3a4, []int{0}
}

func (m *VpdnLsgNode_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VpdnLsgNode_KEYS.Unmarshal(m, b)
}
func (m *VpdnLsgNode_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VpdnLsgNode_KEYS.Marshal(b, m, deterministic)
}
func (m *VpdnLsgNode_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VpdnLsgNode_KEYS.Merge(m, src)
}
func (m *VpdnLsgNode_KEYS) XXX_Size() int {
	return xxx_messageInfo_VpdnLsgNode_KEYS.Size(m)
}
func (m *VpdnLsgNode_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_VpdnLsgNode_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_VpdnLsgNode_KEYS proto.InternalMessageInfo

func (m *VpdnLsgNode_KEYS) GetVrfName() string {
	if m != nil {
		return m.VrfName
	}
	return ""
}

func (m *VpdnLsgNode_KEYS) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

type VpdnLsgNode struct {
	VrfNameXr            string   `protobuf:"bytes,50,opt,name=vrf_name_xr,json=vrfNameXr,proto3" json:"vrf_name_xr,omitempty"`
	Load                 uint32   `protobuf:"varint,51,opt,name=load,proto3" json:"load,omitempty"`
	Status               string   `protobuf:"bytes,52,opt,name=status,proto3" json:"status,omitempty"`
	Connects             uint32   `protobuf:"varint,53,opt,name=connects,proto3" json:"connects,omitempty"`
	Disconnects          uint32   `protobuf:"varint,54,opt,name=disconnects,proto3" json:"disconnects,omitempty"`
	Retry                uint32   `protobuf:"varint,55,opt,name=retry,proto3" json:"retry,omitempty"`
	StatusChangeTime     uint32   `protobuf:"varint,56,opt,name=status_change_time,json=statusChangeTime,proto3" json:"status_change_time,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VpdnLsgNode) Reset()         { *m = VpdnLsgNode{} }
func (m *VpdnLsgNode) String() string { return proto.CompactTextString(m) }
func (*VpdnLsgNode) ProtoMessage()    {}
func (*VpdnLsgNode) Descriptor() ([]byte, []int) {
	return fileDescriptor_7d4e00189bf0a3a4, []int{1}
}

func (m *VpdnLsgNode) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VpdnLsgNode.Unmarshal(m, b)
}
func (m *VpdnLsgNode) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VpdnLsgNode.Marshal(b, m, deterministic)
}
func (m *VpdnLsgNode) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VpdnLsgNode.Merge(m, src)
}
func (m *VpdnLsgNode) XXX_Size() int {
	return xxx_messageInfo_VpdnLsgNode.Size(m)
}
func (m *VpdnLsgNode) XXX_DiscardUnknown() {
	xxx_messageInfo_VpdnLsgNode.DiscardUnknown(m)
}

var xxx_messageInfo_VpdnLsgNode proto.InternalMessageInfo

func (m *VpdnLsgNode) GetVrfNameXr() string {
	if m != nil {
		return m.VrfNameXr
	}
	return ""
}

func (m *VpdnLsgNode) GetLoad() uint32 {
	if m != nil {
		return m.Load
	}
	return 0
}

func (m *VpdnLsgNode) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *VpdnLsgNode) GetConnects() uint32 {
	if m != nil {
		return m.Connects
	}
	return 0
}

func (m *VpdnLsgNode) GetDisconnects() uint32 {
	if m != nil {
		return m.Disconnects
	}
	return 0
}

func (m *VpdnLsgNode) GetRetry() uint32 {
	if m != nil {
		return m.Retry
	}
	return 0
}

func (m *VpdnLsgNode) GetStatusChangeTime() uint32 {
	if m != nil {
		return m.StatusChangeTime
	}
	return 0
}

func init() {
	proto.RegisterType((*VpdnLsgNode_KEYS)(nil), "cisco_ios_xr_tunnel_vpdn_oper.vpdn.tunnel_destinations.tunnel_destination.vpdn_lsg_node_KEYS")
	proto.RegisterType((*VpdnLsgNode)(nil), "cisco_ios_xr_tunnel_vpdn_oper.vpdn.tunnel_destinations.tunnel_destination.vpdn_lsg_node")
}

func init() { proto.RegisterFile("vpdn_lsg_node.proto", fileDescriptor_7d4e00189bf0a3a4) }

var fileDescriptor_7d4e00189bf0a3a4 = []byte{
	// 272 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x90, 0x4d, 0x4b, 0x03, 0x31,
	0x10, 0x86, 0x59, 0xd1, 0x7e, 0x4c, 0x29, 0xc8, 0x28, 0x12, 0x3d, 0xc8, 0xd2, 0x53, 0x0f, 0xb2,
	0x07, 0xeb, 0xd7, 0x5d, 0x3c, 0x14, 0xc1, 0x43, 0xf5, 0xa0, 0xa7, 0x21, 0x6e, 0xa6, 0x35, 0xb0,
	0x9b, 0x2c, 0x49, 0xba, 0xd4, 0x1f, 0xeb, 0x7f, 0x91, 0x66, 0xa3, 0x58, 0xf0, 0x96, 0xf7, 0x7d,
	0x1e, 0xde, 0xc0, 0xc0, 0x51, 0xdb, 0x28, 0x43, 0x95, 0x5f, 0x91, 0xb1, 0x8a, 0x8b, 0xc6, 0xd9,
	0x60, 0x71, 0x5e, 0x6a, 0x5f, 0x5a, 0xd2, 0xd6, 0xd3, 0xc6, 0x51, 0x58, 0x1b, 0xc3, 0x15, 0x45,
	0xd1, 0x36, 0xec, 0x8a, 0xed, 0xab, 0x48, 0xad, 0x62, 0x1f, 0xb4, 0x91, 0x41, 0x5b, 0xe3, 0xff,
	0xe9, 0x26, 0x73, 0xc0, 0x9d, 0x1f, 0xe8, 0xf1, 0xe1, 0xed, 0x19, 0x4f, 0x61, 0xd0, 0xba, 0x25,
	0x19, 0x59, 0xb3, 0xc8, 0xf2, 0x6c, 0x3a, 0x5c, 0xf4, 0x5b, 0xb7, 0x7c, 0x92, 0x35, 0xa3, 0x80,
	0xbe, 0x54, 0xca, 0xb1, 0xf7, 0x62, 0xaf, 0x23, 0x29, 0x4e, 0xbe, 0x32, 0x18, 0xef, 0x6c, 0xe1,
	0x39, 0x8c, 0x7e, 0x66, 0x68, 0xe3, 0xc4, 0x65, 0xf4, 0x87, 0x69, 0xe9, 0xd5, 0x21, 0xc2, 0x7e,
	0x65, 0xa5, 0x12, 0xb3, 0x3c, 0x9b, 0x8e, 0x17, 0xf1, 0x8d, 0x27, 0xd0, 0xf3, 0x41, 0x86, 0xb5,
	0x17, 0x57, 0x51, 0x4f, 0x09, 0xcf, 0x60, 0x50, 0x5a, 0x63, 0xb8, 0x0c, 0x5e, 0x5c, 0x47, 0xff,
	0x37, 0x63, 0x0e, 0x23, 0xb5, 0xbd, 0x48, 0xc2, 0x37, 0x11, 0xff, 0xad, 0xf0, 0x18, 0x0e, 0x1c,
	0x07, 0xf7, 0x29, 0x6e, 0x23, 0xeb, 0x02, 0x5e, 0x00, 0x76, 0xeb, 0x54, 0x7e, 0x48, 0xb3, 0x62,
	0x0a, 0xba, 0x66, 0x71, 0x17, 0x95, 0xc3, 0x8e, 0xdc, 0x47, 0xf0, 0xa2, 0x6b, 0x7e, 0xef, 0xc5,
	0xe3, 0xcf, 0xbe, 0x03, 0x00, 0x00, 0xff, 0xff, 0x1c, 0xb0, 0x6e, 0xd2, 0x93, 0x01, 0x00, 0x00,
}
