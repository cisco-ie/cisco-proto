/*
Copyright 2019 Cisco Systems

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: syncc_clock_setting_newtbl.proto

package cisco_ios_xr_syncc_oper_timing_controller_nodes_node_clock

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type SynccClockSettingNewtbl_KEYS struct {
	NodeName             string   `protobuf:"bytes,1,opt,name=node_name,json=nodeName,proto3" json:"node_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SynccClockSettingNewtbl_KEYS) Reset()         { *m = SynccClockSettingNewtbl_KEYS{} }
func (m *SynccClockSettingNewtbl_KEYS) String() string { return proto.CompactTextString(m) }
func (*SynccClockSettingNewtbl_KEYS) ProtoMessage()    {}
func (*SynccClockSettingNewtbl_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_3d487ccce0d51093, []int{0}
}

func (m *SynccClockSettingNewtbl_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SynccClockSettingNewtbl_KEYS.Unmarshal(m, b)
}
func (m *SynccClockSettingNewtbl_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SynccClockSettingNewtbl_KEYS.Marshal(b, m, deterministic)
}
func (m *SynccClockSettingNewtbl_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SynccClockSettingNewtbl_KEYS.Merge(m, src)
}
func (m *SynccClockSettingNewtbl_KEYS) XXX_Size() int {
	return xxx_messageInfo_SynccClockSettingNewtbl_KEYS.Size(m)
}
func (m *SynccClockSettingNewtbl_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_SynccClockSettingNewtbl_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_SynccClockSettingNewtbl_KEYS proto.InternalMessageInfo

func (m *SynccClockSettingNewtbl_KEYS) GetNodeName() string {
	if m != nil {
		return m.NodeName
	}
	return ""
}

type SynccClockSetting struct {
	IsConfiguredPort0    bool     `protobuf:"varint,1,opt,name=is_configured_port0,json=isConfiguredPort0,proto3" json:"is_configured_port0,omitempty"`
	IsConfiguredPort1    bool     `protobuf:"varint,2,opt,name=is_configured_port1,json=isConfiguredPort1,proto3" json:"is_configured_port1,omitempty"`
	IsConfiguredPort2    bool     `protobuf:"varint,3,opt,name=is_configured_port2,json=isConfiguredPort2,proto3" json:"is_configured_port2,omitempty"`
	IsConfiguredPort3    bool     `protobuf:"varint,4,opt,name=is_configured_port3,json=isConfiguredPort3,proto3" json:"is_configured_port3,omitempty"`
	ModePort0            string   `protobuf:"bytes,5,opt,name=mode_port0,json=modePort0,proto3" json:"mode_port0,omitempty"`
	ModePort1            string   `protobuf:"bytes,6,opt,name=mode_port1,json=modePort1,proto3" json:"mode_port1,omitempty"`
	ModePort2            string   `protobuf:"bytes,7,opt,name=mode_port2,json=modePort2,proto3" json:"mode_port2,omitempty"`
	ModePort3            string   `protobuf:"bytes,8,opt,name=mode_port3,json=modePort3,proto3" json:"mode_port3,omitempty"`
	Submode1Port0        string   `protobuf:"bytes,9,opt,name=submode1_port0,json=submode1Port0,proto3" json:"submode1_port0,omitempty"`
	Submode1Port1        string   `protobuf:"bytes,10,opt,name=submode1_port1,json=submode1Port1,proto3" json:"submode1_port1,omitempty"`
	Submode1Port2        string   `protobuf:"bytes,11,opt,name=submode1_port2,json=submode1Port2,proto3" json:"submode1_port2,omitempty"`
	Submode1Port3        string   `protobuf:"bytes,12,opt,name=submode1_port3,json=submode1Port3,proto3" json:"submode1_port3,omitempty"`
	Submode2Port0        string   `protobuf:"bytes,13,opt,name=submode2_port0,json=submode2Port0,proto3" json:"submode2_port0,omitempty"`
	Submode2Port1        string   `protobuf:"bytes,14,opt,name=submode2_port1,json=submode2Port1,proto3" json:"submode2_port1,omitempty"`
	Submode2Port2        string   `protobuf:"bytes,15,opt,name=submode2_port2,json=submode2Port2,proto3" json:"submode2_port2,omitempty"`
	Submode2Port3        string   `protobuf:"bytes,16,opt,name=submode2_port3,json=submode2Port3,proto3" json:"submode2_port3,omitempty"`
	Submode3Port0        uint32   `protobuf:"varint,17,opt,name=submode3_port0,json=submode3Port0,proto3" json:"submode3_port0,omitempty"`
	Submode3Port1        uint32   `protobuf:"varint,18,opt,name=submode3_port1,json=submode3Port1,proto3" json:"submode3_port1,omitempty"`
	Submode3Port2        uint32   `protobuf:"varint,19,opt,name=submode3_port2,json=submode3Port2,proto3" json:"submode3_port2,omitempty"`
	Submode3Port3        uint32   `protobuf:"varint,20,opt,name=submode3_port3,json=submode3Port3,proto3" json:"submode3_port3,omitempty"`
	ShutdownPort0        uint32   `protobuf:"varint,21,opt,name=shutdown_port0,json=shutdownPort0,proto3" json:"shutdown_port0,omitempty"`
	ShutdownPort1        uint32   `protobuf:"varint,22,opt,name=shutdown_port1,json=shutdownPort1,proto3" json:"shutdown_port1,omitempty"`
	ShutdownPort2        uint32   `protobuf:"varint,23,opt,name=shutdown_port2,json=shutdownPort2,proto3" json:"shutdown_port2,omitempty"`
	ShutdownPort3        uint32   `protobuf:"varint,24,opt,name=shutdown_port3,json=shutdownPort3,proto3" json:"shutdown_port3,omitempty"`
	DirectionPort0       string   `protobuf:"bytes,25,opt,name=direction_port0,json=directionPort0,proto3" json:"direction_port0,omitempty"`
	DirectionPort1       string   `protobuf:"bytes,26,opt,name=direction_port1,json=directionPort1,proto3" json:"direction_port1,omitempty"`
	DirectionPort2       string   `protobuf:"bytes,27,opt,name=direction_port2,json=directionPort2,proto3" json:"direction_port2,omitempty"`
	DirectionPort3       string   `protobuf:"bytes,28,opt,name=direction_port3,json=directionPort3,proto3" json:"direction_port3,omitempty"`
	BaudratePort0        uint32   `protobuf:"varint,29,opt,name=baudrate_port0,json=baudratePort0,proto3" json:"baudrate_port0,omitempty"`
	BaudratePort1        uint32   `protobuf:"varint,30,opt,name=baudrate_port1,json=baudratePort1,proto3" json:"baudrate_port1,omitempty"`
	BaudratePort2        uint32   `protobuf:"varint,31,opt,name=baudrate_port2,json=baudratePort2,proto3" json:"baudrate_port2,omitempty"`
	BaudratePort3        uint32   `protobuf:"varint,32,opt,name=baudrate_port3,json=baudratePort3,proto3" json:"baudrate_port3,omitempty"`
	QualityOptionPort0   string   `protobuf:"bytes,33,opt,name=quality_option_port0,json=qualityOptionPort0,proto3" json:"quality_option_port0,omitempty"`
	QualityOptionPort1   string   `protobuf:"bytes,34,opt,name=quality_option_port1,json=qualityOptionPort1,proto3" json:"quality_option_port1,omitempty"`
	QualityOptionPort2   string   `protobuf:"bytes,35,opt,name=quality_option_port2,json=qualityOptionPort2,proto3" json:"quality_option_port2,omitempty"`
	QualityOptionPort3   string   `protobuf:"bytes,36,opt,name=quality_option_port3,json=qualityOptionPort3,proto3" json:"quality_option_port3,omitempty"`
	TransmitSsmPort0     uint32   `protobuf:"varint,37,opt,name=transmit_ssm_port0,json=transmitSsmPort0,proto3" json:"transmit_ssm_port0,omitempty"`
	TransmitSsmPort1     uint32   `protobuf:"varint,38,opt,name=transmit_ssm_port1,json=transmitSsmPort1,proto3" json:"transmit_ssm_port1,omitempty"`
	TransmitSsmPort2     uint32   `protobuf:"varint,39,opt,name=transmit_ssm_port2,json=transmitSsmPort2,proto3" json:"transmit_ssm_port2,omitempty"`
	TransmitSsmPort3     uint32   `protobuf:"varint,40,opt,name=transmit_ssm_port3,json=transmitSsmPort3,proto3" json:"transmit_ssm_port3,omitempty"`
	RecieveSsmPort0      uint32   `protobuf:"varint,41,opt,name=recieve_ssm_port0,json=recieveSsmPort0,proto3" json:"recieve_ssm_port0,omitempty"`
	RecieveSsmPort1      uint32   `protobuf:"varint,42,opt,name=recieve_ssm_port1,json=recieveSsmPort1,proto3" json:"recieve_ssm_port1,omitempty"`
	RecieveSsmPort2      uint32   `protobuf:"varint,43,opt,name=recieve_ssm_port2,json=recieveSsmPort2,proto3" json:"recieve_ssm_port2,omitempty"`
	RecieveSsmPort3      uint32   `protobuf:"varint,44,opt,name=recieve_ssm_port3,json=recieveSsmPort3,proto3" json:"recieve_ssm_port3,omitempty"`
	InterfaceStatePort0  string   `protobuf:"bytes,45,opt,name=interface_state_port0,json=interfaceStatePort0,proto3" json:"interface_state_port0,omitempty"`
	InterfaceStatePort1  string   `protobuf:"bytes,46,opt,name=interface_state_port1,json=interfaceStatePort1,proto3" json:"interface_state_port1,omitempty"`
	InterfaceStatePort2  string   `protobuf:"bytes,47,opt,name=interface_state_port2,json=interfaceStatePort2,proto3" json:"interface_state_port2,omitempty"`
	InterfaceStatePort3  string   `protobuf:"bytes,48,opt,name=interface_state_port3,json=interfaceStatePort3,proto3" json:"interface_state_port3,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SynccClockSetting) Reset()         { *m = SynccClockSetting{} }
func (m *SynccClockSetting) String() string { return proto.CompactTextString(m) }
func (*SynccClockSetting) ProtoMessage()    {}
func (*SynccClockSetting) Descriptor() ([]byte, []int) {
	return fileDescriptor_3d487ccce0d51093, []int{1}
}

func (m *SynccClockSetting) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SynccClockSetting.Unmarshal(m, b)
}
func (m *SynccClockSetting) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SynccClockSetting.Marshal(b, m, deterministic)
}
func (m *SynccClockSetting) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SynccClockSetting.Merge(m, src)
}
func (m *SynccClockSetting) XXX_Size() int {
	return xxx_messageInfo_SynccClockSetting.Size(m)
}
func (m *SynccClockSetting) XXX_DiscardUnknown() {
	xxx_messageInfo_SynccClockSetting.DiscardUnknown(m)
}

var xxx_messageInfo_SynccClockSetting proto.InternalMessageInfo

func (m *SynccClockSetting) GetIsConfiguredPort0() bool {
	if m != nil {
		return m.IsConfiguredPort0
	}
	return false
}

func (m *SynccClockSetting) GetIsConfiguredPort1() bool {
	if m != nil {
		return m.IsConfiguredPort1
	}
	return false
}

func (m *SynccClockSetting) GetIsConfiguredPort2() bool {
	if m != nil {
		return m.IsConfiguredPort2
	}
	return false
}

func (m *SynccClockSetting) GetIsConfiguredPort3() bool {
	if m != nil {
		return m.IsConfiguredPort3
	}
	return false
}

func (m *SynccClockSetting) GetModePort0() string {
	if m != nil {
		return m.ModePort0
	}
	return ""
}

func (m *SynccClockSetting) GetModePort1() string {
	if m != nil {
		return m.ModePort1
	}
	return ""
}

func (m *SynccClockSetting) GetModePort2() string {
	if m != nil {
		return m.ModePort2
	}
	return ""
}

func (m *SynccClockSetting) GetModePort3() string {
	if m != nil {
		return m.ModePort3
	}
	return ""
}

func (m *SynccClockSetting) GetSubmode1Port0() string {
	if m != nil {
		return m.Submode1Port0
	}
	return ""
}

func (m *SynccClockSetting) GetSubmode1Port1() string {
	if m != nil {
		return m.Submode1Port1
	}
	return ""
}

func (m *SynccClockSetting) GetSubmode1Port2() string {
	if m != nil {
		return m.Submode1Port2
	}
	return ""
}

func (m *SynccClockSetting) GetSubmode1Port3() string {
	if m != nil {
		return m.Submode1Port3
	}
	return ""
}

func (m *SynccClockSetting) GetSubmode2Port0() string {
	if m != nil {
		return m.Submode2Port0
	}
	return ""
}

func (m *SynccClockSetting) GetSubmode2Port1() string {
	if m != nil {
		return m.Submode2Port1
	}
	return ""
}

func (m *SynccClockSetting) GetSubmode2Port2() string {
	if m != nil {
		return m.Submode2Port2
	}
	return ""
}

func (m *SynccClockSetting) GetSubmode2Port3() string {
	if m != nil {
		return m.Submode2Port3
	}
	return ""
}

func (m *SynccClockSetting) GetSubmode3Port0() uint32 {
	if m != nil {
		return m.Submode3Port0
	}
	return 0
}

func (m *SynccClockSetting) GetSubmode3Port1() uint32 {
	if m != nil {
		return m.Submode3Port1
	}
	return 0
}

func (m *SynccClockSetting) GetSubmode3Port2() uint32 {
	if m != nil {
		return m.Submode3Port2
	}
	return 0
}

func (m *SynccClockSetting) GetSubmode3Port3() uint32 {
	if m != nil {
		return m.Submode3Port3
	}
	return 0
}

func (m *SynccClockSetting) GetShutdownPort0() uint32 {
	if m != nil {
		return m.ShutdownPort0
	}
	return 0
}

func (m *SynccClockSetting) GetShutdownPort1() uint32 {
	if m != nil {
		return m.ShutdownPort1
	}
	return 0
}

func (m *SynccClockSetting) GetShutdownPort2() uint32 {
	if m != nil {
		return m.ShutdownPort2
	}
	return 0
}

func (m *SynccClockSetting) GetShutdownPort3() uint32 {
	if m != nil {
		return m.ShutdownPort3
	}
	return 0
}

func (m *SynccClockSetting) GetDirectionPort0() string {
	if m != nil {
		return m.DirectionPort0
	}
	return ""
}

func (m *SynccClockSetting) GetDirectionPort1() string {
	if m != nil {
		return m.DirectionPort1
	}
	return ""
}

func (m *SynccClockSetting) GetDirectionPort2() string {
	if m != nil {
		return m.DirectionPort2
	}
	return ""
}

func (m *SynccClockSetting) GetDirectionPort3() string {
	if m != nil {
		return m.DirectionPort3
	}
	return ""
}

func (m *SynccClockSetting) GetBaudratePort0() uint32 {
	if m != nil {
		return m.BaudratePort0
	}
	return 0
}

func (m *SynccClockSetting) GetBaudratePort1() uint32 {
	if m != nil {
		return m.BaudratePort1
	}
	return 0
}

func (m *SynccClockSetting) GetBaudratePort2() uint32 {
	if m != nil {
		return m.BaudratePort2
	}
	return 0
}

func (m *SynccClockSetting) GetBaudratePort3() uint32 {
	if m != nil {
		return m.BaudratePort3
	}
	return 0
}

func (m *SynccClockSetting) GetQualityOptionPort0() string {
	if m != nil {
		return m.QualityOptionPort0
	}
	return ""
}

func (m *SynccClockSetting) GetQualityOptionPort1() string {
	if m != nil {
		return m.QualityOptionPort1
	}
	return ""
}

func (m *SynccClockSetting) GetQualityOptionPort2() string {
	if m != nil {
		return m.QualityOptionPort2
	}
	return ""
}

func (m *SynccClockSetting) GetQualityOptionPort3() string {
	if m != nil {
		return m.QualityOptionPort3
	}
	return ""
}

func (m *SynccClockSetting) GetTransmitSsmPort0() uint32 {
	if m != nil {
		return m.TransmitSsmPort0
	}
	return 0
}

func (m *SynccClockSetting) GetTransmitSsmPort1() uint32 {
	if m != nil {
		return m.TransmitSsmPort1
	}
	return 0
}

func (m *SynccClockSetting) GetTransmitSsmPort2() uint32 {
	if m != nil {
		return m.TransmitSsmPort2
	}
	return 0
}

func (m *SynccClockSetting) GetTransmitSsmPort3() uint32 {
	if m != nil {
		return m.TransmitSsmPort3
	}
	return 0
}

func (m *SynccClockSetting) GetRecieveSsmPort0() uint32 {
	if m != nil {
		return m.RecieveSsmPort0
	}
	return 0
}

func (m *SynccClockSetting) GetRecieveSsmPort1() uint32 {
	if m != nil {
		return m.RecieveSsmPort1
	}
	return 0
}

func (m *SynccClockSetting) GetRecieveSsmPort2() uint32 {
	if m != nil {
		return m.RecieveSsmPort2
	}
	return 0
}

func (m *SynccClockSetting) GetRecieveSsmPort3() uint32 {
	if m != nil {
		return m.RecieveSsmPort3
	}
	return 0
}

func (m *SynccClockSetting) GetInterfaceStatePort0() string {
	if m != nil {
		return m.InterfaceStatePort0
	}
	return ""
}

func (m *SynccClockSetting) GetInterfaceStatePort1() string {
	if m != nil {
		return m.InterfaceStatePort1
	}
	return ""
}

func (m *SynccClockSetting) GetInterfaceStatePort2() string {
	if m != nil {
		return m.InterfaceStatePort2
	}
	return ""
}

func (m *SynccClockSetting) GetInterfaceStatePort3() string {
	if m != nil {
		return m.InterfaceStatePort3
	}
	return ""
}

type SynccClockSettingTbln struct {
	Clock                *SynccClockSetting `protobuf:"bytes,1,opt,name=clock,proto3" json:"clock,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *SynccClockSettingTbln) Reset()         { *m = SynccClockSettingTbln{} }
func (m *SynccClockSettingTbln) String() string { return proto.CompactTextString(m) }
func (*SynccClockSettingTbln) ProtoMessage()    {}
func (*SynccClockSettingTbln) Descriptor() ([]byte, []int) {
	return fileDescriptor_3d487ccce0d51093, []int{2}
}

func (m *SynccClockSettingTbln) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SynccClockSettingTbln.Unmarshal(m, b)
}
func (m *SynccClockSettingTbln) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SynccClockSettingTbln.Marshal(b, m, deterministic)
}
func (m *SynccClockSettingTbln) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SynccClockSettingTbln.Merge(m, src)
}
func (m *SynccClockSettingTbln) XXX_Size() int {
	return xxx_messageInfo_SynccClockSettingTbln.Size(m)
}
func (m *SynccClockSettingTbln) XXX_DiscardUnknown() {
	xxx_messageInfo_SynccClockSettingTbln.DiscardUnknown(m)
}

var xxx_messageInfo_SynccClockSettingTbln proto.InternalMessageInfo

func (m *SynccClockSettingTbln) GetClock() *SynccClockSetting {
	if m != nil {
		return m.Clock
	}
	return nil
}

type SynccClockSettingNewtbl struct {
	SynccInstance        []*SynccClockSettingTbln `protobuf:"bytes,50,rep,name=syncc_instance,json=synccInstance,proto3" json:"syncc_instance,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *SynccClockSettingNewtbl) Reset()         { *m = SynccClockSettingNewtbl{} }
func (m *SynccClockSettingNewtbl) String() string { return proto.CompactTextString(m) }
func (*SynccClockSettingNewtbl) ProtoMessage()    {}
func (*SynccClockSettingNewtbl) Descriptor() ([]byte, []int) {
	return fileDescriptor_3d487ccce0d51093, []int{3}
}

func (m *SynccClockSettingNewtbl) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SynccClockSettingNewtbl.Unmarshal(m, b)
}
func (m *SynccClockSettingNewtbl) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SynccClockSettingNewtbl.Marshal(b, m, deterministic)
}
func (m *SynccClockSettingNewtbl) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SynccClockSettingNewtbl.Merge(m, src)
}
func (m *SynccClockSettingNewtbl) XXX_Size() int {
	return xxx_messageInfo_SynccClockSettingNewtbl.Size(m)
}
func (m *SynccClockSettingNewtbl) XXX_DiscardUnknown() {
	xxx_messageInfo_SynccClockSettingNewtbl.DiscardUnknown(m)
}

var xxx_messageInfo_SynccClockSettingNewtbl proto.InternalMessageInfo

func (m *SynccClockSettingNewtbl) GetSynccInstance() []*SynccClockSettingTbln {
	if m != nil {
		return m.SynccInstance
	}
	return nil
}

func init() {
	proto.RegisterType((*SynccClockSettingNewtbl_KEYS)(nil), "cisco_ios_xr_syncc_oper.timing_controller.nodes.node.clock.syncc_clock_setting_newtbl_KEYS")
	proto.RegisterType((*SynccClockSetting)(nil), "cisco_ios_xr_syncc_oper.timing_controller.nodes.node.clock.syncc_clock_setting")
	proto.RegisterType((*SynccClockSettingTbln)(nil), "cisco_ios_xr_syncc_oper.timing_controller.nodes.node.clock.syncc_clock_setting_tbln")
	proto.RegisterType((*SynccClockSettingNewtbl)(nil), "cisco_ios_xr_syncc_oper.timing_controller.nodes.node.clock.syncc_clock_setting_newtbl")
}

func init() { proto.RegisterFile("syncc_clock_setting_newtbl.proto", fileDescriptor_3d487ccce0d51093) }

var fileDescriptor_3d487ccce0d51093 = []byte{
	// 691 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0xd6, 0xc1, 0x53, 0x13, 0x3f,
	0x14, 0x07, 0xf0, 0xe9, 0x8f, 0x1f, 0x48, 0x83, 0x2d, 0x90, 0x82, 0x3e, 0x41, 0xa4, 0x56, 0x91,
	0x8a, 0xb8, 0x92, 0x97, 0x9b, 0x07, 0x2f, 0x8e, 0x07, 0xc7, 0x19, 0x71, 0x8a, 0x17, 0x4f, 0x3b,
	0xdb, 0x6d, 0xc0, 0x8c, 0xed, 0x6e, 0xdd, 0xa4, 0x22, 0xe3, 0x89, 0x3f, 0xc3, 0xff, 0xd6, 0xd9,
	0xec, 0xb6, 0xb4, 0xbc, 0xec, 0xc5, 0xf1, 0xc2, 0x0c, 0x79, 0x9f, 0x97, 0x7c, 0x5f, 0x28, 0xd3,
	0xb0, 0xb6, 0xb9, 0x4a, 0xe2, 0x38, 0x8c, 0x87, 0x69, 0xfc, 0x2d, 0x34, 0xca, 0x5a, 0x9d, 0x5c,
	0x84, 0x89, 0xba, 0xb4, 0xfd, 0x61, 0x30, 0xce, 0x52, 0x9b, 0xf2, 0xd7, 0xb1, 0x36, 0x71, 0x1a,
	0xea, 0xd4, 0x84, 0x3f, 0xb3, 0xb0, 0xe0, 0xe9, 0x58, 0x65, 0x81, 0xd5, 0xa3, 0x1c, 0xc7, 0x69,
	0x62, 0xb3, 0x74, 0x38, 0x54, 0x59, 0x90, 0xa4, 0x03, 0x65, 0xdc, 0xcf, 0xc0, 0x6d, 0xd8, 0x79,
	0xc3, 0xf6, 0xab, 0xf7, 0x0f, 0x3f, 0xbc, 0xfb, 0x72, 0xc6, 0x77, 0x59, 0x3d, 0x6f, 0x08, 0x93,
	0x68, 0xa4, 0xa0, 0xd6, 0xae, 0x75, 0xeb, 0xbd, 0xd5, 0x7c, 0xe1, 0x63, 0x34, 0x52, 0x9d, 0xeb,
	0x0d, 0xd6, 0xf2, 0x6c, 0xc0, 0x03, 0xd6, 0xd2, 0x26, 0x3f, 0xf9, 0x5c, 0x5f, 0x4c, 0x32, 0x35,
	0x08, 0xc7, 0x69, 0x66, 0x4f, 0x5c, 0xfb, 0x6a, 0x6f, 0x53, 0x9b, 0xb7, 0xb3, 0xca, 0xa7, 0xbc,
	0xe0, 0xf7, 0x02, 0xfe, 0xf3, 0x7b, 0xe1, 0xf7, 0x08, 0x4b, 0x7e, 0x8f, 0x7e, 0x2f, 0xe1, 0x7f,
	0xbf, 0x97, 0x7c, 0x8f, 0xb1, 0x51, 0x3e, 0x74, 0x11, 0x7b, 0xd9, 0x4d, 0x5d, 0xcf, 0x57, 0x8a,
	0xb8, 0xf3, 0x65, 0x01, 0x2b, 0x8b, 0x65, 0xb1, 0x50, 0x46, 0xb8, 0xb3, 0x58, 0xc6, 0x85, 0xb2,
	0x84, 0xd5, 0xc5, 0xb2, 0xe4, 0x07, 0xac, 0x69, 0x26, 0xfd, 0xfc, 0x77, 0x51, 0x9e, 0x5f, 0x77,
	0xa4, 0x31, 0x5d, 0x2d, 0x32, 0xdc, 0x66, 0x02, 0x18, 0x65, 0x82, 0x30, 0x84, 0x35, 0xca, 0x90,
	0x30, 0x09, 0x77, 0x29, 0x9b, 0xcf, 0x86, 0x65, 0xb6, 0xc6, 0x02, 0xc3, 0xdb, 0xd9, 0xb0, 0xcc,
	0xd6, 0xa4, 0x4c, 0x10, 0x86, 0xb0, 0x4e, 0x19, 0x12, 0x26, 0x61, 0x83, 0xb2, 0xf9, 0x6c, 0xb2,
	0xcc, 0xb6, 0xd9, 0xae, 0x75, 0x1b, 0x33, 0x26, 0x6f, 0x67, 0x93, 0x65, 0x36, 0x4e, 0x99, 0x20,
	0x0c, 0xa1, 0x45, 0x19, 0x12, 0x26, 0x61, 0x8b, 0xb2, 0x22, 0xdb, 0xd7, 0x89, 0x1d, 0xa4, 0x97,
	0x49, 0x99, 0x6d, 0xbb, 0x64, 0xe5, 0xea, 0x4d, 0xb6, 0x79, 0x26, 0xe0, 0x1e, 0x65, 0x82, 0x30,
	0x84, 0xfb, 0x94, 0x21, 0x61, 0x12, 0x80, 0x32, 0xc9, 0x0f, 0xd9, 0xfa, 0x40, 0x67, 0x2a, 0xb6,
	0x3a, 0x9d, 0x86, 0x7b, 0xe0, 0xee, 0xb7, 0x39, 0x5b, 0x2e, 0xd2, 0x11, 0x28, 0x60, 0xc7, 0x03,
	0x05, 0x85, 0x08, 0xbb, 0x1e, 0x88, 0x14, 0x4a, 0x78, 0xe8, 0x81, 0xee, 0xfe, 0xfa, 0xd1, 0x64,
	0x90, 0x45, 0x76, 0xfa, 0x3f, 0xb9, 0x57, 0x8c, 0x32, 0x5d, 0x9d, 0xdd, 0xdf, 0x02, 0x13, 0xf0,
	0x88, 0x32, 0x41, 0x18, 0xc2, 0x3e, 0x65, 0x48, 0x98, 0x84, 0x36, 0x65, 0x92, 0x9f, 0xb0, 0xad,
	0xef, 0x93, 0x68, 0xa8, 0xed, 0x55, 0x98, 0x8e, 0xe7, 0x2e, 0xf1, 0xb1, 0x9b, 0x84, 0x97, 0xb5,
	0xd3, 0xf1, 0xcd, 0x45, 0xfa, 0x3b, 0x04, 0x74, 0x2a, 0x3a, 0x44, 0x45, 0x07, 0xc2, 0x93, 0x8a,
	0x0e, 0xac, 0xe8, 0x90, 0xf0, 0xb4, 0xa2, 0x43, 0xf2, 0x63, 0xc6, 0x6d, 0x16, 0x25, 0x66, 0xa4,
	0x6d, 0x68, 0xcc, 0xa8, 0x9c, 0xe2, 0xc0, 0x8d, 0xbc, 0x31, 0xad, 0x9c, 0x99, 0x51, 0x31, 0x83,
	0x4f, 0x0b, 0x78, 0xe6, 0xd5, 0xc2, 0xab, 0x11, 0x0e, 0xbd, 0x1a, 0xbd, 0x5a, 0x42, 0xd7, 0xab,
	0x25, 0x3f, 0x62, 0x9b, 0x99, 0x8a, 0xb5, 0xfa, 0xa1, 0xe6, 0x62, 0x3f, 0x77, 0x78, 0xbd, 0x2c,
	0xcc, 0x52, 0x7b, 0xac, 0x80, 0x23, 0x9f, 0x15, 0x3e, 0x8b, 0xf0, 0xc2, 0x67, 0xd1, 0x67, 0x25,
	0x1c, 0xfb, 0xac, 0xe4, 0xc8, 0xb6, 0x75, 0x62, 0x55, 0x76, 0x1e, 0xc5, 0x2a, 0x34, 0xf6, 0xe6,
	0x23, 0xfd, 0xd2, 0xfd, 0x69, 0x5a, 0xb3, 0xe2, 0x99, 0x9d, 0x7d, 0xb0, 0x2b, 0x7a, 0x04, 0x04,
	0x55, 0x3d, 0xa2, 0xaa, 0x07, 0xe1, 0x55, 0x55, 0x0f, 0x56, 0xf5, 0x48, 0x38, 0xa9, 0xea, 0x91,
	0x9d, 0xeb, 0x1a, 0x03, 0xdf, 0x23, 0xc2, 0xf6, 0x87, 0x09, 0x57, 0x6c, 0xd9, 0xad, 0xba, 0xaf,
	0xfe, 0x35, 0x3c, 0x0d, 0xfe, 0xfe, 0xb1, 0x12, 0x78, 0x0e, 0xe9, 0x15, 0xbb, 0x77, 0x7e, 0xd7,
	0xd8, 0x4e, 0xf5, 0x43, 0x86, 0xff, 0x62, 0xcd, 0xa2, 0xaa, 0x13, 0x63, 0xa3, 0x24, 0x56, 0x80,
	0xed, 0xa5, 0xee, 0x1a, 0x7e, 0xfe, 0xc7, 0x71, 0xdc, 0xcc, 0xbd, 0x86, 0xab, 0xbc, 0x2f, 0x8f,
	0xea, 0xaf, 0xb8, 0x67, 0x9a, 0xfc, 0x13, 0x00, 0x00, 0xff, 0xff, 0x71, 0x54, 0xaa, 0xe8, 0xca,
	0x09, 0x00, 0x00,
}
