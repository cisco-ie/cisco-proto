/*
Copyright 2019 Cisco Systems

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: pim_ifstats_bag.proto

package cisco_ios_xr_ipv4_pim_oper_ipv6_pim_active_default_context_interface_statistics_interface_statistic

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type PimIfstatsBag_KEYS struct {
	InterfaceName        string   `protobuf:"bytes,1,opt,name=interface_name,json=interfaceName,proto3" json:"interface_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PimIfstatsBag_KEYS) Reset()         { *m = PimIfstatsBag_KEYS{} }
func (m *PimIfstatsBag_KEYS) String() string { return proto.CompactTextString(m) }
func (*PimIfstatsBag_KEYS) ProtoMessage()    {}
func (*PimIfstatsBag_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_42110ba1d1e0463b, []int{0}
}

func (m *PimIfstatsBag_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PimIfstatsBag_KEYS.Unmarshal(m, b)
}
func (m *PimIfstatsBag_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PimIfstatsBag_KEYS.Marshal(b, m, deterministic)
}
func (m *PimIfstatsBag_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PimIfstatsBag_KEYS.Merge(m, src)
}
func (m *PimIfstatsBag_KEYS) XXX_Size() int {
	return xxx_messageInfo_PimIfstatsBag_KEYS.Size(m)
}
func (m *PimIfstatsBag_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_PimIfstatsBag_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_PimIfstatsBag_KEYS proto.InternalMessageInfo

func (m *PimIfstatsBag_KEYS) GetInterfaceName() string {
	if m != nil {
		return m.InterfaceName
	}
	return ""
}

type PimIfstatsBag struct {
	InputHello                     uint32   `protobuf:"varint,50,opt,name=input_hello,json=inputHello,proto3" json:"input_hello,omitempty"`
	OutputHello                    uint32   `protobuf:"varint,51,opt,name=output_hello,json=outputHello,proto3" json:"output_hello,omitempty"`
	InputRegister                  uint32   `protobuf:"varint,52,opt,name=input_register,json=inputRegister,proto3" json:"input_register,omitempty"`
	OutputRegister                 uint32   `protobuf:"varint,53,opt,name=output_register,json=outputRegister,proto3" json:"output_register,omitempty"`
	InputRegisterStop              uint32   `protobuf:"varint,54,opt,name=input_register_stop,json=inputRegisterStop,proto3" json:"input_register_stop,omitempty"`
	OutputRegisterStop             uint32   `protobuf:"varint,55,opt,name=output_register_stop,json=outputRegisterStop,proto3" json:"output_register_stop,omitempty"`
	InputJp                        uint32   `protobuf:"varint,56,opt,name=input_jp,json=inputJp,proto3" json:"input_jp,omitempty"`
	OutputJp                       uint32   `protobuf:"varint,57,opt,name=output_jp,json=outputJp,proto3" json:"output_jp,omitempty"`
	InputBsrMessage                uint32   `protobuf:"varint,58,opt,name=input_bsr_message,json=inputBsrMessage,proto3" json:"input_bsr_message,omitempty"`
	OutputBsrMessage               uint32   `protobuf:"varint,59,opt,name=output_bsr_message,json=outputBsrMessage,proto3" json:"output_bsr_message,omitempty"`
	InputAssert                    uint32   `protobuf:"varint,60,opt,name=input_assert,json=inputAssert,proto3" json:"input_assert,omitempty"`
	OutputAssert                   uint32   `protobuf:"varint,61,opt,name=output_assert,json=outputAssert,proto3" json:"output_assert,omitempty"`
	InputGraftMessage              uint32   `protobuf:"varint,62,opt,name=input_graft_message,json=inputGraftMessage,proto3" json:"input_graft_message,omitempty"`
	OutputGraftMessage             uint32   `protobuf:"varint,63,opt,name=output_graft_message,json=outputGraftMessage,proto3" json:"output_graft_message,omitempty"`
	InputGraftAckMessage           uint32   `protobuf:"varint,64,opt,name=input_graft_ack_message,json=inputGraftAckMessage,proto3" json:"input_graft_ack_message,omitempty"`
	OutputGraftAckMessage          uint32   `protobuf:"varint,65,opt,name=output_graft_ack_message,json=outputGraftAckMessage,proto3" json:"output_graft_ack_message,omitempty"`
	InputCandidateRpAdvertisement  uint32   `protobuf:"varint,66,opt,name=input_candidate_rp_advertisement,json=inputCandidateRpAdvertisement,proto3" json:"input_candidate_rp_advertisement,omitempty"`
	OutputCandidateRpAdvertisement uint32   `protobuf:"varint,67,opt,name=output_candidate_rp_advertisement,json=outputCandidateRpAdvertisement,proto3" json:"output_candidate_rp_advertisement,omitempty"`
	InputDfElection                uint32   `protobuf:"varint,68,opt,name=input_df_election,json=inputDfElection,proto3" json:"input_df_election,omitempty"`
	OutputDfElection               uint32   `protobuf:"varint,69,opt,name=output_df_election,json=outputDfElection,proto3" json:"output_df_election,omitempty"`
	InputMiscellaneous             uint32   `protobuf:"varint,70,opt,name=input_miscellaneous,json=inputMiscellaneous,proto3" json:"input_miscellaneous,omitempty"`
	XXX_NoUnkeyedLiteral           struct{} `json:"-"`
	XXX_unrecognized               []byte   `json:"-"`
	XXX_sizecache                  int32    `json:"-"`
}

func (m *PimIfstatsBag) Reset()         { *m = PimIfstatsBag{} }
func (m *PimIfstatsBag) String() string { return proto.CompactTextString(m) }
func (*PimIfstatsBag) ProtoMessage()    {}
func (*PimIfstatsBag) Descriptor() ([]byte, []int) {
	return fileDescriptor_42110ba1d1e0463b, []int{1}
}

func (m *PimIfstatsBag) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PimIfstatsBag.Unmarshal(m, b)
}
func (m *PimIfstatsBag) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PimIfstatsBag.Marshal(b, m, deterministic)
}
func (m *PimIfstatsBag) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PimIfstatsBag.Merge(m, src)
}
func (m *PimIfstatsBag) XXX_Size() int {
	return xxx_messageInfo_PimIfstatsBag.Size(m)
}
func (m *PimIfstatsBag) XXX_DiscardUnknown() {
	xxx_messageInfo_PimIfstatsBag.DiscardUnknown(m)
}

var xxx_messageInfo_PimIfstatsBag proto.InternalMessageInfo

func (m *PimIfstatsBag) GetInputHello() uint32 {
	if m != nil {
		return m.InputHello
	}
	return 0
}

func (m *PimIfstatsBag) GetOutputHello() uint32 {
	if m != nil {
		return m.OutputHello
	}
	return 0
}

func (m *PimIfstatsBag) GetInputRegister() uint32 {
	if m != nil {
		return m.InputRegister
	}
	return 0
}

func (m *PimIfstatsBag) GetOutputRegister() uint32 {
	if m != nil {
		return m.OutputRegister
	}
	return 0
}

func (m *PimIfstatsBag) GetInputRegisterStop() uint32 {
	if m != nil {
		return m.InputRegisterStop
	}
	return 0
}

func (m *PimIfstatsBag) GetOutputRegisterStop() uint32 {
	if m != nil {
		return m.OutputRegisterStop
	}
	return 0
}

func (m *PimIfstatsBag) GetInputJp() uint32 {
	if m != nil {
		return m.InputJp
	}
	return 0
}

func (m *PimIfstatsBag) GetOutputJp() uint32 {
	if m != nil {
		return m.OutputJp
	}
	return 0
}

func (m *PimIfstatsBag) GetInputBsrMessage() uint32 {
	if m != nil {
		return m.InputBsrMessage
	}
	return 0
}

func (m *PimIfstatsBag) GetOutputBsrMessage() uint32 {
	if m != nil {
		return m.OutputBsrMessage
	}
	return 0
}

func (m *PimIfstatsBag) GetInputAssert() uint32 {
	if m != nil {
		return m.InputAssert
	}
	return 0
}

func (m *PimIfstatsBag) GetOutputAssert() uint32 {
	if m != nil {
		return m.OutputAssert
	}
	return 0
}

func (m *PimIfstatsBag) GetInputGraftMessage() uint32 {
	if m != nil {
		return m.InputGraftMessage
	}
	return 0
}

func (m *PimIfstatsBag) GetOutputGraftMessage() uint32 {
	if m != nil {
		return m.OutputGraftMessage
	}
	return 0
}

func (m *PimIfstatsBag) GetInputGraftAckMessage() uint32 {
	if m != nil {
		return m.InputGraftAckMessage
	}
	return 0
}

func (m *PimIfstatsBag) GetOutputGraftAckMessage() uint32 {
	if m != nil {
		return m.OutputGraftAckMessage
	}
	return 0
}

func (m *PimIfstatsBag) GetInputCandidateRpAdvertisement() uint32 {
	if m != nil {
		return m.InputCandidateRpAdvertisement
	}
	return 0
}

func (m *PimIfstatsBag) GetOutputCandidateRpAdvertisement() uint32 {
	if m != nil {
		return m.OutputCandidateRpAdvertisement
	}
	return 0
}

func (m *PimIfstatsBag) GetInputDfElection() uint32 {
	if m != nil {
		return m.InputDfElection
	}
	return 0
}

func (m *PimIfstatsBag) GetOutputDfElection() uint32 {
	if m != nil {
		return m.OutputDfElection
	}
	return 0
}

func (m *PimIfstatsBag) GetInputMiscellaneous() uint32 {
	if m != nil {
		return m.InputMiscellaneous
	}
	return 0
}

func init() {
	proto.RegisterType((*PimIfstatsBag_KEYS)(nil), "cisco_ios_xr_ipv4_pim_oper.ipv6_pim.active.default_context.interface_statistics.interface_statistic.pim_ifstats_bag_KEYS")
	proto.RegisterType((*PimIfstatsBag)(nil), "cisco_ios_xr_ipv4_pim_oper.ipv6_pim.active.default_context.interface_statistics.interface_statistic.pim_ifstats_bag")
}

func init() { proto.RegisterFile("pim_ifstats_bag.proto", fileDescriptor_42110ba1d1e0463b) }

var fileDescriptor_42110ba1d1e0463b = []byte{
	// 529 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x94, 0x5f, 0x6f, 0xd3, 0x30,
	0x14, 0xc5, 0xb5, 0x17, 0xb6, 0x79, 0xeb, 0x06, 0xa6, 0x13, 0x46, 0x08, 0x68, 0x87, 0x10, 0x13,
	0x42, 0x01, 0xb1, 0x7f, 0xfc, 0x1b, 0xd0, 0x6d, 0x65, 0x30, 0x34, 0x1e, 0xba, 0x27, 0x9e, 0x2c,
	0xd7, 0xbd, 0x29, 0xde, 0x92, 0xd8, 0xb2, 0xdd, 0x6a, 0x9f, 0x93, 0x4f, 0x84, 0x72, 0x9d, 0xa6,
	0x4e, 0x05, 0x3c, 0xe6, 0xdc, 0xdf, 0x39, 0xa7, 0xba, 0xbe, 0x2a, 0xd9, 0x32, 0x2a, 0xe7, 0x2a,
	0x75, 0x5e, 0x78, 0xc7, 0x87, 0x62, 0x9c, 0x18, 0xab, 0xbd, 0xa6, 0x52, 0x2a, 0x27, 0x35, 0x57,
	0xda, 0xf1, 0x1b, 0xcb, 0x95, 0x99, 0xee, 0xf1, 0x12, 0xd4, 0x06, 0x6c, 0xa2, 0xcc, 0xf4, 0xa0,
	0xfc, 0x4a, 0x84, 0xf4, 0x6a, 0x0a, 0xc9, 0x08, 0x52, 0x31, 0xc9, 0x3c, 0x97, 0xba, 0xf0, 0x70,
	0xe3, 0x13, 0x55, 0x78, 0xb0, 0xa9, 0x90, 0xc0, 0xcb, 0x54, 0xe5, 0xbc, 0x92, 0xee, 0x6f, 0xe2,
	0xf6, 0x11, 0x69, 0x2f, 0xb4, 0xf3, 0xef, 0xfd, 0x9f, 0x97, 0xf4, 0x29, 0xd9, 0x98, 0xe3, 0x85,
	0xc8, 0x81, 0x2d, 0x75, 0x96, 0x76, 0x56, 0x07, 0xad, 0x5a, 0xfd, 0x21, 0x72, 0xd8, 0xfe, 0xbd,
	0x4c, 0x36, 0x17, 0xfc, 0xf4, 0x31, 0x59, 0x53, 0x85, 0x99, 0x78, 0xfe, 0x0b, 0xb2, 0x4c, 0xb3,
	0xd7, 0x9d, 0xa5, 0x9d, 0xd6, 0x80, 0xa0, 0xf4, 0xb5, 0x54, 0x68, 0x97, 0xac, 0xeb, 0x89, 0x9f,
	0x13, 0xbb, 0x48, 0xac, 0x05, 0x2d, 0x20, 0x58, 0x5f, 0x12, 0x16, 0xc6, 0xca, 0x79, 0xb0, 0x6c,
	0x0f, 0xa1, 0x16, 0xaa, 0x83, 0x4a, 0xa4, 0xcf, 0xc8, 0x66, 0x95, 0x54, 0x73, 0xfb, 0xc8, 0x6d,
	0x04, 0xb9, 0x06, 0x13, 0x72, 0xb7, 0x99, 0xc7, 0x9d, 0xd7, 0x86, 0x1d, 0x20, 0x7c, 0xa7, 0x11,
	0x7a, 0xe9, 0xb5, 0xa1, 0xaf, 0x48, 0x7b, 0x21, 0x38, 0x18, 0x0e, 0xd1, 0x40, 0x9b, 0xe9, 0xe8,
	0xb8, 0x4f, 0x56, 0x42, 0xc3, 0x95, 0x61, 0x6f, 0x90, 0x5a, 0xc6, 0xef, 0x73, 0x43, 0x1f, 0x90,
	0xd5, 0x2a, 0xec, 0xca, 0xb0, 0xb7, 0x38, 0x5b, 0x09, 0xc2, 0xb9, 0xa1, 0xcf, 0x49, 0xa8, 0xe7,
	0x43, 0x67, 0x79, 0x0e, 0xce, 0x89, 0x31, 0xb0, 0x77, 0x08, 0x6d, 0xe2, 0xe0, 0xd8, 0xd9, 0x8b,
	0x20, 0xd3, 0x17, 0xa4, 0x6a, 0x6e, 0xc0, 0xef, 0x11, 0xbe, 0x1d, 0x26, 0x11, 0xdd, 0x25, 0xeb,
	0x21, 0x59, 0x38, 0x07, 0xd6, 0xb3, 0x0f, 0x61, 0xcd, 0xa8, 0xf5, 0x50, 0xa2, 0x4f, 0x48, 0xab,
	0x0a, 0xac, 0x98, 0x23, 0x64, 0xaa, 0xe7, 0xa9, 0xa0, 0x7a, 0x77, 0x63, 0x2b, 0x52, 0x5f, 0xd7,
	0x7e, 0x8c, 0x76, 0x77, 0x56, 0x4e, 0x66, 0xbd, 0xf3, 0xdd, 0x35, 0x0d, 0x9f, 0xe2, 0xdd, 0x35,
	0x1c, 0xfb, 0xe4, 0x5e, 0xdc, 0x20, 0xe4, 0x75, 0x6d, 0xfa, 0x8c, 0xa6, 0xf6, 0xbc, 0xa5, 0x27,
	0xaf, 0x67, 0xb6, 0x43, 0xc2, 0x1a, 0x45, 0xb1, 0xaf, 0x87, 0xbe, 0xad, 0xa8, 0x2c, 0x32, 0x9e,
	0x91, 0x4e, 0xe8, 0x93, 0xa2, 0x18, 0xa9, 0x91, 0xf0, 0xc0, 0xad, 0xe1, 0x62, 0x34, 0x05, 0xeb,
	0x95, 0x83, 0x1c, 0x0a, 0xcf, 0x8e, 0x31, 0xe0, 0x21, 0x72, 0x27, 0x33, 0x6c, 0x60, 0x7a, 0x31,
	0x44, 0xbf, 0x91, 0x6e, 0xf5, 0x0b, 0xfe, 0x93, 0x74, 0x82, 0x49, 0x8f, 0x02, 0xf8, 0xcf, 0xa8,
	0xfa, 0x0e, 0x46, 0x29, 0x87, 0x0c, 0xa4, 0x57, 0xba, 0x60, 0xa7, 0xd1, 0x1d, 0x9c, 0xa6, 0xfd,
	0x4a, 0x8e, 0xee, 0x20, 0x86, 0xfb, 0xf1, 0x1d, 0x44, 0xf4, 0xcb, 0xd9, 0xfb, 0xe5, 0xca, 0x49,
	0xc8, 0x32, 0x51, 0x80, 0x9e, 0x38, 0xf6, 0x25, 0x3c, 0x07, 0x8e, 0x2e, 0xe2, 0xc9, 0xf0, 0x16,
	0xfe, 0xff, 0xec, 0xfe, 0x09, 0x00, 0x00, 0xff, 0xff, 0xd8, 0x68, 0xe9, 0x71, 0x98, 0x04, 0x00,
	0x00,
}
