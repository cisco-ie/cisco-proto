/*
Copyright 2019 Cisco Systems

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: pim_rpf_summary_bag.proto

package cisco_ios_xr_ipv4_pim_oper_ipv6_pim_active_default_context_rpf_summary

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type PimRpfSummaryBag_KEYS struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PimRpfSummaryBag_KEYS) Reset()         { *m = PimRpfSummaryBag_KEYS{} }
func (m *PimRpfSummaryBag_KEYS) String() string { return proto.CompactTextString(m) }
func (*PimRpfSummaryBag_KEYS) ProtoMessage()    {}
func (*PimRpfSummaryBag_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_518a1da88f7a522f, []int{0}
}

func (m *PimRpfSummaryBag_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PimRpfSummaryBag_KEYS.Unmarshal(m, b)
}
func (m *PimRpfSummaryBag_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PimRpfSummaryBag_KEYS.Marshal(b, m, deterministic)
}
func (m *PimRpfSummaryBag_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PimRpfSummaryBag_KEYS.Merge(m, src)
}
func (m *PimRpfSummaryBag_KEYS) XXX_Size() int {
	return xxx_messageInfo_PimRpfSummaryBag_KEYS.Size(m)
}
func (m *PimRpfSummaryBag_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_PimRpfSummaryBag_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_PimRpfSummaryBag_KEYS proto.InternalMessageInfo

type PimRpfSummaryBag struct {
	DefaultSafi                         uint32   `protobuf:"varint,50,opt,name=default_safi,json=defaultSafi,proto3" json:"default_safi,omitempty"`
	DefaultTableName                    string   `protobuf:"bytes,51,opt,name=default_table_name,json=defaultTableName,proto3" json:"default_table_name,omitempty"`
	IsMbgpConfigured                    bool     `protobuf:"varint,52,opt,name=is_mbgp_configured,json=isMbgpConfigured,proto3" json:"is_mbgp_configured,omitempty"`
	IsOspfTeConfigured                  bool     `protobuf:"varint,53,opt,name=is_ospf_te_configured,json=isOspfTeConfigured,proto3" json:"is_ospf_te_configured,omitempty"`
	IsIsisTeConfigured                  bool     `protobuf:"varint,54,opt,name=is_isis_te_configured,json=isIsisTeConfigured,proto3" json:"is_isis_te_configured,omitempty"`
	IsIsisMtrConfigured                 bool     `protobuf:"varint,55,opt,name=is_isis_mtr_configured,json=isIsisMtrConfigured,proto3" json:"is_isis_mtr_configured,omitempty"`
	MoFrrConfigured                     bool     `protobuf:"varint,56,opt,name=mo_frr_configured,json=moFrrConfigured,proto3" json:"mo_frr_configured,omitempty"`
	RibMoFrrConfigured                  bool     `protobuf:"varint,57,opt,name=rib_mo_frr_configured,json=ribMoFrrConfigured,proto3" json:"rib_mo_frr_configured,omitempty"`
	RumpEnabled                         bool     `protobuf:"varint,58,opt,name=rump_enabled,json=rumpEnabled,proto3" json:"rump_enabled,omitempty"`
	RibConvergenceTimeout               uint32   `protobuf:"varint,59,opt,name=rib_convergence_timeout,json=ribConvergenceTimeout,proto3" json:"rib_convergence_timeout,omitempty"`
	RibConvergenceTimeLeft              uint32   `protobuf:"varint,60,opt,name=rib_convergence_time_left,json=ribConvergenceTimeLeft,proto3" json:"rib_convergence_time_left,omitempty"`
	IsMultipathEnabled                  bool     `protobuf:"varint,61,opt,name=is_multipath_enabled,json=isMultipathEnabled,proto3" json:"is_multipath_enabled,omitempty"`
	IsMultipathInterfaceHashEnabled     bool     `protobuf:"varint,62,opt,name=is_multipath_interface_hash_enabled,json=isMultipathInterfaceHashEnabled,proto3" json:"is_multipath_interface_hash_enabled,omitempty"`
	IsMultipathSourceHashEnabled        bool     `protobuf:"varint,63,opt,name=is_multipath_source_hash_enabled,json=isMultipathSourceHashEnabled,proto3" json:"is_multipath_source_hash_enabled,omitempty"`
	IsMultipathSourceNextHopHashEnabled bool     `protobuf:"varint,64,opt,name=is_multipath_source_next_hop_hash_enabled,json=isMultipathSourceNextHopHashEnabled,proto3" json:"is_multipath_source_next_hop_hash_enabled,omitempty"`
	RpfRegistrations                    uint32   `protobuf:"varint,65,opt,name=rpf_registrations,json=rpfRegistrations,proto3" json:"rpf_registrations,omitempty"`
	IsRibConvergence                    bool     `protobuf:"varint,66,opt,name=is_rib_convergence,json=isRibConvergence,proto3" json:"is_rib_convergence,omitempty"`
	XXX_NoUnkeyedLiteral                struct{} `json:"-"`
	XXX_unrecognized                    []byte   `json:"-"`
	XXX_sizecache                       int32    `json:"-"`
}

func (m *PimRpfSummaryBag) Reset()         { *m = PimRpfSummaryBag{} }
func (m *PimRpfSummaryBag) String() string { return proto.CompactTextString(m) }
func (*PimRpfSummaryBag) ProtoMessage()    {}
func (*PimRpfSummaryBag) Descriptor() ([]byte, []int) {
	return fileDescriptor_518a1da88f7a522f, []int{1}
}

func (m *PimRpfSummaryBag) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PimRpfSummaryBag.Unmarshal(m, b)
}
func (m *PimRpfSummaryBag) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PimRpfSummaryBag.Marshal(b, m, deterministic)
}
func (m *PimRpfSummaryBag) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PimRpfSummaryBag.Merge(m, src)
}
func (m *PimRpfSummaryBag) XXX_Size() int {
	return xxx_messageInfo_PimRpfSummaryBag.Size(m)
}
func (m *PimRpfSummaryBag) XXX_DiscardUnknown() {
	xxx_messageInfo_PimRpfSummaryBag.DiscardUnknown(m)
}

var xxx_messageInfo_PimRpfSummaryBag proto.InternalMessageInfo

func (m *PimRpfSummaryBag) GetDefaultSafi() uint32 {
	if m != nil {
		return m.DefaultSafi
	}
	return 0
}

func (m *PimRpfSummaryBag) GetDefaultTableName() string {
	if m != nil {
		return m.DefaultTableName
	}
	return ""
}

func (m *PimRpfSummaryBag) GetIsMbgpConfigured() bool {
	if m != nil {
		return m.IsMbgpConfigured
	}
	return false
}

func (m *PimRpfSummaryBag) GetIsOspfTeConfigured() bool {
	if m != nil {
		return m.IsOspfTeConfigured
	}
	return false
}

func (m *PimRpfSummaryBag) GetIsIsisTeConfigured() bool {
	if m != nil {
		return m.IsIsisTeConfigured
	}
	return false
}

func (m *PimRpfSummaryBag) GetIsIsisMtrConfigured() bool {
	if m != nil {
		return m.IsIsisMtrConfigured
	}
	return false
}

func (m *PimRpfSummaryBag) GetMoFrrConfigured() bool {
	if m != nil {
		return m.MoFrrConfigured
	}
	return false
}

func (m *PimRpfSummaryBag) GetRibMoFrrConfigured() bool {
	if m != nil {
		return m.RibMoFrrConfigured
	}
	return false
}

func (m *PimRpfSummaryBag) GetRumpEnabled() bool {
	if m != nil {
		return m.RumpEnabled
	}
	return false
}

func (m *PimRpfSummaryBag) GetRibConvergenceTimeout() uint32 {
	if m != nil {
		return m.RibConvergenceTimeout
	}
	return 0
}

func (m *PimRpfSummaryBag) GetRibConvergenceTimeLeft() uint32 {
	if m != nil {
		return m.RibConvergenceTimeLeft
	}
	return 0
}

func (m *PimRpfSummaryBag) GetIsMultipathEnabled() bool {
	if m != nil {
		return m.IsMultipathEnabled
	}
	return false
}

func (m *PimRpfSummaryBag) GetIsMultipathInterfaceHashEnabled() bool {
	if m != nil {
		return m.IsMultipathInterfaceHashEnabled
	}
	return false
}

func (m *PimRpfSummaryBag) GetIsMultipathSourceHashEnabled() bool {
	if m != nil {
		return m.IsMultipathSourceHashEnabled
	}
	return false
}

func (m *PimRpfSummaryBag) GetIsMultipathSourceNextHopHashEnabled() bool {
	if m != nil {
		return m.IsMultipathSourceNextHopHashEnabled
	}
	return false
}

func (m *PimRpfSummaryBag) GetRpfRegistrations() uint32 {
	if m != nil {
		return m.RpfRegistrations
	}
	return 0
}

func (m *PimRpfSummaryBag) GetIsRibConvergence() bool {
	if m != nil {
		return m.IsRibConvergence
	}
	return false
}

func init() {
	proto.RegisterType((*PimRpfSummaryBag_KEYS)(nil), "cisco_ios_xr_ipv4_pim_oper.ipv6_pim.active.default_context.rpf_summary.pim_rpf_summary_bag_KEYS")
	proto.RegisterType((*PimRpfSummaryBag)(nil), "cisco_ios_xr_ipv4_pim_oper.ipv6_pim.active.default_context.rpf_summary.pim_rpf_summary_bag")
}

func init() { proto.RegisterFile("pim_rpf_summary_bag.proto", fileDescriptor_518a1da88f7a522f) }

var fileDescriptor_518a1da88f7a522f = []byte{
	// 508 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x94, 0x5b, 0x6f, 0xd3, 0x30,
	0x14, 0xc7, 0xd5, 0x17, 0x2e, 0xde, 0x10, 0x5d, 0x06, 0x23, 0x43, 0x48, 0x74, 0xdb, 0x4b, 0xb9,
	0x28, 0x02, 0x3a, 0x0a, 0xe3, 0x0e, 0xd3, 0xaa, 0x4d, 0xac, 0x43, 0x4a, 0x2b, 0x24, 0x9e, 0x2c,
	0x27, 0x3d, 0x4e, 0x8f, 0x54, 0xc7, 0x96, 0xed, 0x54, 0xe5, 0xd3, 0xf0, 0x55, 0x91, 0xdd, 0xa6,
	0x4d, 0xda, 0x3e, 0xe6, 0x9c, 0xff, 0xef, 0xe7, 0xa3, 0x63, 0x39, 0xe4, 0x50, 0xa1, 0xa0, 0x5a,
	0x71, 0x6a, 0x0a, 0x21, 0x98, 0xfe, 0x4b, 0x13, 0x96, 0x45, 0x4a, 0x4b, 0x2b, 0x83, 0x5e, 0x8a,
	0x26, 0x95, 0x14, 0xa5, 0xa1, 0x33, 0x4d, 0x51, 0x4d, 0x4f, 0xa9, 0x0b, 0x4b, 0x05, 0x3a, 0x42,
	0x35, 0xed, 0xba, 0xaf, 0x88, 0xa5, 0x16, 0xa7, 0x10, 0x8d, 0x80, 0xb3, 0x62, 0x62, 0x69, 0x2a,
	0x73, 0x0b, 0x33, 0x1b, 0x55, 0x8c, 0xc7, 0x8f, 0x49, 0xb8, 0xe5, 0x10, 0xfa, 0xf3, 0xe2, 0xcf,
	0xe0, 0xf8, 0xdf, 0x6d, 0xb2, 0xbf, 0xa5, 0x19, 0x1c, 0x91, 0xdd, 0x52, 0x69, 0x18, 0xc7, 0xf0,
	0x4d, 0xab, 0xd1, 0xbe, 0x17, 0xef, 0x2c, 0x6a, 0x03, 0xc6, 0x31, 0x78, 0x49, 0x82, 0x32, 0x62,
	0x59, 0x32, 0x01, 0x9a, 0x33, 0x01, 0x61, 0xa7, 0xd5, 0x68, 0xdf, 0x8d, 0x9b, 0x8b, 0xce, 0xd0,
	0x35, 0x6e, 0x98, 0x00, 0x97, 0x46, 0x43, 0x45, 0x92, 0x29, 0x37, 0x23, 0xc7, 0xac, 0xd0, 0x30,
	0x0a, 0x4f, 0x5b, 0x8d, 0xf6, 0x9d, 0xb8, 0x89, 0xa6, 0x9f, 0x64, 0xea, 0x7c, 0x59, 0x0f, 0x5e,
	0x93, 0x87, 0x68, 0xa8, 0x34, 0x8a, 0x53, 0x0b, 0x55, 0xe0, 0xad, 0x07, 0x02, 0x34, 0xbf, 0x8c,
	0xe2, 0x43, 0xd8, 0x40, 0xd0, 0xa0, 0x59, 0x43, 0xba, 0x25, 0x72, 0x65, 0xd0, 0xd4, 0x90, 0x0e,
	0x39, 0x28, 0x11, 0x61, 0x75, 0x95, 0x79, 0xe7, 0x99, 0xfd, 0x39, 0xd3, 0xb7, 0xba, 0x02, 0x3d,
	0x27, 0x7b, 0x42, 0x52, 0xae, 0x6b, 0xf9, 0xf7, 0x3e, 0x7f, 0x5f, 0xc8, 0x9e, 0xd6, 0xf5, 0x99,
	0x34, 0x26, 0x74, 0x33, 0x7f, 0x36, 0x9f, 0x49, 0x63, 0xd2, 0x5f, 0x43, 0x8e, 0xc8, 0xae, 0x2e,
	0x84, 0xa2, 0x90, 0xbb, 0xd5, 0x8d, 0xc2, 0x0f, 0x3e, 0xb9, 0xe3, 0x6a, 0x17, 0xf3, 0x52, 0xd0,
	0x25, 0x8f, 0x9c, 0x35, 0x95, 0xf9, 0x14, 0x74, 0x06, 0x79, 0x0a, 0xd4, 0xa2, 0x00, 0x59, 0xd8,
	0xf0, 0xa3, 0xbf, 0x26, 0x77, 0xe8, 0xf9, 0xaa, 0x3b, 0x9c, 0x37, 0x83, 0x33, 0x72, 0xb8, 0x8d,
	0xa3, 0x13, 0xe0, 0x36, 0xfc, 0xe4, 0xc9, 0x83, 0x4d, 0xf2, 0x1a, 0xb8, 0x0d, 0x5e, 0x91, 0x07,
	0x6e, 0x49, 0xc5, 0xc4, 0xa2, 0x62, 0x76, 0xbc, 0x9c, 0xee, 0x73, 0xb9, 0xdb, 0x7e, 0xd9, 0x2a,
	0x87, 0xbc, 0x26, 0x27, 0x35, 0x02, 0x73, 0x0b, 0x9a, 0xb3, 0x14, 0xe8, 0x98, 0x99, 0x95, 0xe0,
	0x8b, 0x17, 0x3c, 0xad, 0x08, 0xae, 0xca, 0xe0, 0x25, 0x33, 0x4b, 0x5b, 0x8f, 0xb4, 0x6a, 0x36,
	0x23, 0x0b, 0xbd, 0xae, 0xfa, 0xea, 0x55, 0x4f, 0x2a, 0xaa, 0x81, 0x4f, 0x55, 0x3d, 0xbf, 0xc9,
	0xb3, 0x6d, 0x9e, 0x1c, 0x66, 0x96, 0x8e, 0xa5, 0xaa, 0x0b, 0xbf, 0x79, 0xe1, 0xc9, 0x86, 0xf0,
	0x06, 0x66, 0xf6, 0x52, 0xaa, 0xaa, 0xf7, 0x05, 0xd9, 0x73, 0x2f, 0x48, 0x43, 0x86, 0xc6, 0x6a,
	0x66, 0x51, 0xe6, 0x26, 0xfc, 0xee, 0x57, 0xda, 0xd4, 0x8a, 0xc7, 0xd5, 0xfa, 0xe2, 0x29, 0xac,
	0x5d, 0x45, 0xf8, 0xa3, 0x7c, 0x0a, 0x71, 0xed, 0x0a, 0x92, 0x5b, 0xfe, 0x67, 0xd0, 0xf9, 0x1f,
	0x00, 0x00, 0xff, 0xff, 0x35, 0xdd, 0x4c, 0xdc, 0x29, 0x04, 0x00, 0x00,
}
