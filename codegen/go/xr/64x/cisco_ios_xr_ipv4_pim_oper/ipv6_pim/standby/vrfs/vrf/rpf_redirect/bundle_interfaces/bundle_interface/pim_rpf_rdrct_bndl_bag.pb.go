/*
Copyright 2019 Cisco Systems

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: pim_rpf_rdrct_bndl_bag.proto

package cisco_ios_xr_ipv4_pim_oper_ipv6_pim_standby_vrfs_vrf_rpf_redirect_bundle_interfaces_bundle_interface

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type PimRpfRdrctBndlBag_KEYS struct {
	VrfName              string   `protobuf:"bytes,1,opt,name=vrf_name,json=vrfName,proto3" json:"vrf_name,omitempty"`
	BundleName           string   `protobuf:"bytes,2,opt,name=bundle_name,json=bundleName,proto3" json:"bundle_name,omitempty"`
	InterfaceName        string   `protobuf:"bytes,3,opt,name=interface_name,json=interfaceName,proto3" json:"interface_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PimRpfRdrctBndlBag_KEYS) Reset()         { *m = PimRpfRdrctBndlBag_KEYS{} }
func (m *PimRpfRdrctBndlBag_KEYS) String() string { return proto.CompactTextString(m) }
func (*PimRpfRdrctBndlBag_KEYS) ProtoMessage()    {}
func (*PimRpfRdrctBndlBag_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_86ec24c5935320a1, []int{0}
}

func (m *PimRpfRdrctBndlBag_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PimRpfRdrctBndlBag_KEYS.Unmarshal(m, b)
}
func (m *PimRpfRdrctBndlBag_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PimRpfRdrctBndlBag_KEYS.Marshal(b, m, deterministic)
}
func (m *PimRpfRdrctBndlBag_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PimRpfRdrctBndlBag_KEYS.Merge(m, src)
}
func (m *PimRpfRdrctBndlBag_KEYS) XXX_Size() int {
	return xxx_messageInfo_PimRpfRdrctBndlBag_KEYS.Size(m)
}
func (m *PimRpfRdrctBndlBag_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_PimRpfRdrctBndlBag_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_PimRpfRdrctBndlBag_KEYS proto.InternalMessageInfo

func (m *PimRpfRdrctBndlBag_KEYS) GetVrfName() string {
	if m != nil {
		return m.VrfName
	}
	return ""
}

func (m *PimRpfRdrctBndlBag_KEYS) GetBundleName() string {
	if m != nil {
		return m.BundleName
	}
	return ""
}

func (m *PimRpfRdrctBndlBag_KEYS) GetInterfaceName() string {
	if m != nil {
		return m.InterfaceName
	}
	return ""
}

type PimRpfRdrctBndlBag struct {
	RpfRedirectBundleName       string   `protobuf:"bytes,50,opt,name=rpf_redirect_bundle_name,json=rpfRedirectBundleName,proto3" json:"rpf_redirect_bundle_name,omitempty"`
	RpfRedirectInterfaceName    string   `protobuf:"bytes,51,opt,name=rpf_redirect_interface_name,json=rpfRedirectInterfaceName,proto3" json:"rpf_redirect_interface_name,omitempty"`
	AvailableBandwidth          int32    `protobuf:"zigzag32,52,opt,name=available_bandwidth,json=availableBandwidth,proto3" json:"available_bandwidth,omitempty"`
	AllocatedBandwidth          int32    `protobuf:"zigzag32,53,opt,name=allocated_bandwidth,json=allocatedBandwidth,proto3" json:"allocated_bandwidth,omitempty"`
	TotalBandwidth              int32    `protobuf:"zigzag32,54,opt,name=total_bandwidth,json=totalBandwidth,proto3" json:"total_bandwidth,omitempty"`
	TopologyBandwidthUsed       int32    `protobuf:"zigzag32,55,opt,name=topology_bandwidth_used,json=topologyBandwidthUsed,proto3" json:"topology_bandwidth_used,omitempty"`
	SnoopingBandwidthUsed       int32    `protobuf:"zigzag32,56,opt,name=snooping_bandwidth_used,json=snoopingBandwidthUsed,proto3" json:"snooping_bandwidth_used,omitempty"`
	AllocatedThresholdBandwidth int32    `protobuf:"zigzag32,57,opt,name=allocated_threshold_bandwidth,json=allocatedThresholdBandwidth,proto3" json:"allocated_threshold_bandwidth,omitempty"`
	AvailableThresholdBandwidth int32    `protobuf:"zigzag32,58,opt,name=available_threshold_bandwidth,json=availableThresholdBandwidth,proto3" json:"available_threshold_bandwidth,omitempty"`
	XXX_NoUnkeyedLiteral        struct{} `json:"-"`
	XXX_unrecognized            []byte   `json:"-"`
	XXX_sizecache               int32    `json:"-"`
}

func (m *PimRpfRdrctBndlBag) Reset()         { *m = PimRpfRdrctBndlBag{} }
func (m *PimRpfRdrctBndlBag) String() string { return proto.CompactTextString(m) }
func (*PimRpfRdrctBndlBag) ProtoMessage()    {}
func (*PimRpfRdrctBndlBag) Descriptor() ([]byte, []int) {
	return fileDescriptor_86ec24c5935320a1, []int{1}
}

func (m *PimRpfRdrctBndlBag) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PimRpfRdrctBndlBag.Unmarshal(m, b)
}
func (m *PimRpfRdrctBndlBag) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PimRpfRdrctBndlBag.Marshal(b, m, deterministic)
}
func (m *PimRpfRdrctBndlBag) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PimRpfRdrctBndlBag.Merge(m, src)
}
func (m *PimRpfRdrctBndlBag) XXX_Size() int {
	return xxx_messageInfo_PimRpfRdrctBndlBag.Size(m)
}
func (m *PimRpfRdrctBndlBag) XXX_DiscardUnknown() {
	xxx_messageInfo_PimRpfRdrctBndlBag.DiscardUnknown(m)
}

var xxx_messageInfo_PimRpfRdrctBndlBag proto.InternalMessageInfo

func (m *PimRpfRdrctBndlBag) GetRpfRedirectBundleName() string {
	if m != nil {
		return m.RpfRedirectBundleName
	}
	return ""
}

func (m *PimRpfRdrctBndlBag) GetRpfRedirectInterfaceName() string {
	if m != nil {
		return m.RpfRedirectInterfaceName
	}
	return ""
}

func (m *PimRpfRdrctBndlBag) GetAvailableBandwidth() int32 {
	if m != nil {
		return m.AvailableBandwidth
	}
	return 0
}

func (m *PimRpfRdrctBndlBag) GetAllocatedBandwidth() int32 {
	if m != nil {
		return m.AllocatedBandwidth
	}
	return 0
}

func (m *PimRpfRdrctBndlBag) GetTotalBandwidth() int32 {
	if m != nil {
		return m.TotalBandwidth
	}
	return 0
}

func (m *PimRpfRdrctBndlBag) GetTopologyBandwidthUsed() int32 {
	if m != nil {
		return m.TopologyBandwidthUsed
	}
	return 0
}

func (m *PimRpfRdrctBndlBag) GetSnoopingBandwidthUsed() int32 {
	if m != nil {
		return m.SnoopingBandwidthUsed
	}
	return 0
}

func (m *PimRpfRdrctBndlBag) GetAllocatedThresholdBandwidth() int32 {
	if m != nil {
		return m.AllocatedThresholdBandwidth
	}
	return 0
}

func (m *PimRpfRdrctBndlBag) GetAvailableThresholdBandwidth() int32 {
	if m != nil {
		return m.AvailableThresholdBandwidth
	}
	return 0
}

func init() {
	proto.RegisterType((*PimRpfRdrctBndlBag_KEYS)(nil), "cisco_ios_xr_ipv4_pim_oper.ipv6_pim.standby.vrfs.vrf.rpf_redirect.bundle_interfaces.bundle_interface.pim_rpf_rdrct_bndl_bag_KEYS")
	proto.RegisterType((*PimRpfRdrctBndlBag)(nil), "cisco_ios_xr_ipv4_pim_oper.ipv6_pim.standby.vrfs.vrf.rpf_redirect.bundle_interfaces.bundle_interface.pim_rpf_rdrct_bndl_bag")
}

func init() { proto.RegisterFile("pim_rpf_rdrct_bndl_bag.proto", fileDescriptor_86ec24c5935320a1) }

var fileDescriptor_86ec24c5935320a1 = []byte{
	// 387 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x93, 0x4d, 0x4b, 0xc3, 0x30,
	0x18, 0xc7, 0xa9, 0x8a, 0x2f, 0x11, 0x27, 0x56, 0xa6, 0x95, 0x29, 0x8e, 0x81, 0xb8, 0x53, 0x05,
	0x37, 0x37, 0x15, 0xbc, 0x0c, 0x3c, 0x88, 0xe0, 0x61, 0xea, 0xc1, 0x53, 0x48, 0x9b, 0x74, 0x0b,
	0x64, 0x49, 0x48, 0xb2, 0xea, 0x6e, 0x7e, 0x07, 0xbf, 0xb0, 0x34, 0xeb, 0x4b, 0xf6, 0x72, 0x29,
	0xf4, 0xf9, 0xff, 0x7e, 0xff, 0x3c, 0x29, 0x14, 0x9c, 0x4b, 0x3a, 0x81, 0x4a, 0x26, 0x50, 0x61,
	0x15, 0x1b, 0x18, 0x71, 0xcc, 0x60, 0x84, 0x46, 0xa1, 0x54, 0xc2, 0x08, 0x1f, 0xc7, 0x54, 0xc7,
	0x02, 0x52, 0xa1, 0xe1, 0x8f, 0x82, 0x54, 0xa6, 0x5d, 0x98, 0xf1, 0x42, 0x12, 0x15, 0x52, 0x99,
	0xf6, 0xb2, 0xb7, 0x50, 0x1b, 0xc4, 0x71, 0x34, 0x0b, 0x53, 0x95, 0xe8, 0xec, 0x11, 0xda, 0x3a,
	0x82, 0xa9, 0x22, 0xb1, 0x09, 0xa3, 0x29, 0xc7, 0x8c, 0x40, 0xca, 0x0d, 0x51, 0x09, 0x8a, 0x89,
	0x5e, 0x99, 0xb4, 0x7e, 0x3d, 0xd0, 0x58, 0xbf, 0x06, 0x7c, 0x7d, 0xfe, 0x7a, 0xf7, 0xcf, 0xc0,
	0x6e, 0xaa, 0x12, 0xc8, 0xd1, 0x84, 0x04, 0x5e, 0xd3, 0x6b, 0xef, 0x0d, 0x77, 0x52, 0x95, 0xbc,
	0xa1, 0x09, 0xf1, 0x2f, 0xc1, 0x7e, 0x5e, 0x67, 0xd3, 0x0d, 0x9b, 0x82, 0xf9, 0xc8, 0x02, 0x57,
	0xa0, 0x56, 0x1e, 0x34, 0x67, 0x36, 0x2d, 0x73, 0x50, 0x4e, 0x33, 0xac, 0xf5, 0xb7, 0x05, 0x4e,
	0xd6, 0xaf, 0xe0, 0xf7, 0x41, 0xe0, 0x5e, 0x08, 0xba, 0xe7, 0xdd, 0xda, 0xae, 0xba, 0x92, 0xc9,
	0x30, 0x8f, 0x07, 0xd5, 0xd1, 0x4f, 0xa0, 0xb1, 0x20, 0x2e, 0xed, 0xd1, 0xb1, 0x6e, 0xe0, 0xb8,
	0x2f, 0xee, 0x4a, 0xfe, 0x0d, 0x38, 0x46, 0x29, 0xa2, 0x0c, 0x45, 0x8c, 0xc0, 0x08, 0x71, 0xfc,
	0x4d, 0xb1, 0x19, 0x07, 0xdd, 0xa6, 0xd7, 0x3e, 0x1a, 0xfa, 0x65, 0x34, 0x28, 0x12, 0x2b, 0x30,
	0x26, 0x62, 0x64, 0x08, 0x76, 0x84, 0xbb, 0x5c, 0x28, 0xa2, 0x4a, 0xb8, 0x06, 0x87, 0x46, 0x18,
	0xc4, 0x1c, 0xb8, 0x67, 0xe1, 0x9a, 0x1d, 0x57, 0x60, 0x0f, 0x9c, 0x1a, 0x21, 0x05, 0x13, 0xa3,
	0x59, 0xc5, 0xc2, 0xa9, 0x26, 0x38, 0xe8, 0x5b, 0xa1, 0x5e, 0xc4, 0xa5, 0xf3, 0xa9, 0x09, 0xce,
	0x3c, 0xcd, 0x85, 0x90, 0x94, 0x8f, 0x96, 0xbd, 0xfb, 0xb9, 0x57, 0xc4, 0x8b, 0xde, 0x00, 0x5c,
	0x54, 0x37, 0x31, 0x63, 0x45, 0xf4, 0x58, 0x30, 0xf7, 0x4e, 0x0f, 0xd6, 0x6e, 0x94, 0xd0, 0x47,
	0xc1, 0x54, 0x3b, 0x67, 0x1d, 0xe5, 0xe7, 0x5b, 0xd7, 0xf1, 0x98, 0x77, 0x14, 0xd0, 0x6a, 0x47,
	0xb4, 0x6d, 0xff, 0x82, 0xce, 0x7f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x2f, 0x2b, 0x0e, 0x9e, 0x25,
	0x03, 0x00, 0x00,
}
