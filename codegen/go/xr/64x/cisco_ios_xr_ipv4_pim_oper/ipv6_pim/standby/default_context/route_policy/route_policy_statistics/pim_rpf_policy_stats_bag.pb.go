/*
Copyright 2019 Cisco Systems

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: pim_rpf_policy_stats_bag.proto

package cisco_ios_xr_ipv4_pim_oper_ipv6_pim_standby_default_context_route_policy_route_policy_statistics

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type PimRpfPolicyStatsBag_KEYS struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PimRpfPolicyStatsBag_KEYS) Reset()         { *m = PimRpfPolicyStatsBag_KEYS{} }
func (m *PimRpfPolicyStatsBag_KEYS) String() string { return proto.CompactTextString(m) }
func (*PimRpfPolicyStatsBag_KEYS) ProtoMessage()    {}
func (*PimRpfPolicyStatsBag_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_6e3c28953e18359f, []int{0}
}

func (m *PimRpfPolicyStatsBag_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PimRpfPolicyStatsBag_KEYS.Unmarshal(m, b)
}
func (m *PimRpfPolicyStatsBag_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PimRpfPolicyStatsBag_KEYS.Marshal(b, m, deterministic)
}
func (m *PimRpfPolicyStatsBag_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PimRpfPolicyStatsBag_KEYS.Merge(m, src)
}
func (m *PimRpfPolicyStatsBag_KEYS) XXX_Size() int {
	return xxx_messageInfo_PimRpfPolicyStatsBag_KEYS.Size(m)
}
func (m *PimRpfPolicyStatsBag_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_PimRpfPolicyStatsBag_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_PimRpfPolicyStatsBag_KEYS proto.InternalMessageInfo

type PimRpfPolicyStatsBag struct {
	PolicyName           string   `protobuf:"bytes,50,opt,name=policy_name,json=policyName,proto3" json:"policy_name,omitempty"`
	Requests             uint32   `protobuf:"varint,51,opt,name=requests,proto3" json:"requests,omitempty"`
	Pass                 uint32   `protobuf:"varint,52,opt,name=pass,proto3" json:"pass,omitempty"`
	Drop                 uint32   `protobuf:"varint,53,opt,name=drop,proto3" json:"drop,omitempty"`
	DefaultTable         uint32   `protobuf:"varint,54,opt,name=default_table,json=defaultTable,proto3" json:"default_table,omitempty"`
	AnyTable             uint32   `protobuf:"varint,55,opt,name=any_table,json=anyTable,proto3" json:"any_table,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PimRpfPolicyStatsBag) Reset()         { *m = PimRpfPolicyStatsBag{} }
func (m *PimRpfPolicyStatsBag) String() string { return proto.CompactTextString(m) }
func (*PimRpfPolicyStatsBag) ProtoMessage()    {}
func (*PimRpfPolicyStatsBag) Descriptor() ([]byte, []int) {
	return fileDescriptor_6e3c28953e18359f, []int{1}
}

func (m *PimRpfPolicyStatsBag) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PimRpfPolicyStatsBag.Unmarshal(m, b)
}
func (m *PimRpfPolicyStatsBag) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PimRpfPolicyStatsBag.Marshal(b, m, deterministic)
}
func (m *PimRpfPolicyStatsBag) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PimRpfPolicyStatsBag.Merge(m, src)
}
func (m *PimRpfPolicyStatsBag) XXX_Size() int {
	return xxx_messageInfo_PimRpfPolicyStatsBag.Size(m)
}
func (m *PimRpfPolicyStatsBag) XXX_DiscardUnknown() {
	xxx_messageInfo_PimRpfPolicyStatsBag.DiscardUnknown(m)
}

var xxx_messageInfo_PimRpfPolicyStatsBag proto.InternalMessageInfo

func (m *PimRpfPolicyStatsBag) GetPolicyName() string {
	if m != nil {
		return m.PolicyName
	}
	return ""
}

func (m *PimRpfPolicyStatsBag) GetRequests() uint32 {
	if m != nil {
		return m.Requests
	}
	return 0
}

func (m *PimRpfPolicyStatsBag) GetPass() uint32 {
	if m != nil {
		return m.Pass
	}
	return 0
}

func (m *PimRpfPolicyStatsBag) GetDrop() uint32 {
	if m != nil {
		return m.Drop
	}
	return 0
}

func (m *PimRpfPolicyStatsBag) GetDefaultTable() uint32 {
	if m != nil {
		return m.DefaultTable
	}
	return 0
}

func (m *PimRpfPolicyStatsBag) GetAnyTable() uint32 {
	if m != nil {
		return m.AnyTable
	}
	return 0
}

func init() {
	proto.RegisterType((*PimRpfPolicyStatsBag_KEYS)(nil), "cisco_ios_xr_ipv4_pim_oper.ipv6_pim.standby.default_context.route_policy.route_policy_statistics.pim_rpf_policy_stats_bag_KEYS")
	proto.RegisterType((*PimRpfPolicyStatsBag)(nil), "cisco_ios_xr_ipv4_pim_oper.ipv6_pim.standby.default_context.route_policy.route_policy_statistics.pim_rpf_policy_stats_bag")
}

func init() { proto.RegisterFile("pim_rpf_policy_stats_bag.proto", fileDescriptor_6e3c28953e18359f) }

var fileDescriptor_6e3c28953e18359f = []byte{
	// 250 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x90, 0x31, 0x4f, 0xc3, 0x30,
	0x10, 0x85, 0x15, 0x09, 0x21, 0x6a, 0xe8, 0xe2, 0xc9, 0x02, 0x41, 0xab, 0xb2, 0x74, 0xca, 0x40,
	0x4b, 0xf9, 0x05, 0x4c, 0x48, 0x0c, 0x85, 0x85, 0xe9, 0xb8, 0x38, 0x2e, 0xb2, 0x94, 0xd8, 0xc6,
	0x77, 0xa9, 0x9a, 0x9f, 0xc7, 0x3f, 0x43, 0x76, 0x02, 0x52, 0x87, 0x6e, 0xf7, 0xbe, 0xf7, 0xec,
	0x67, 0x9f, 0xb8, 0x0b, 0xb6, 0x85, 0x18, 0x76, 0x10, 0x7c, 0x63, 0x75, 0x0f, 0xc4, 0xc8, 0x04,
	0x15, 0x7e, 0x95, 0x21, 0x7a, 0xf6, 0xf2, 0x53, 0x5b, 0xd2, 0x1e, 0xac, 0x27, 0x38, 0x44, 0xb0,
	0x61, 0xbf, 0x86, 0x74, 0xc2, 0x07, 0x13, 0x4b, 0x1b, 0xf6, 0x9b, 0xa4, 0x4a, 0x62, 0x74, 0x75,
	0xd5, 0x97, 0xb5, 0xd9, 0x61, 0xd7, 0x30, 0x68, 0xef, 0xd8, 0x1c, 0xb8, 0x8c, 0xbe, 0x63, 0x33,
	0xde, 0x7c, 0x24, 0x72, 0x8d, 0x25, 0xb6, 0x9a, 0x16, 0x33, 0x71, 0x7b, 0xea, 0x0d, 0xf0, 0xf2,
	0xfc, 0xf1, 0xb6, 0xf8, 0x29, 0x84, 0x3a, 0x95, 0x90, 0x33, 0x71, 0x39, 0x32, 0x87, 0xad, 0x51,
	0x0f, 0xf3, 0x62, 0x39, 0xd9, 0x8a, 0x01, 0xbd, 0x62, 0x6b, 0xe4, 0xb5, 0xb8, 0x88, 0xe6, 0xbb,
	0x33, 0xc4, 0xa4, 0x56, 0xf3, 0x62, 0x39, 0xdd, 0xfe, 0x6b, 0x29, 0xc5, 0x59, 0x40, 0x22, 0xb5,
	0xce, 0x3c, 0xcf, 0x89, 0xd5, 0xd1, 0x07, 0xf5, 0x38, 0xb0, 0x34, 0xcb, 0x7b, 0x31, 0xfd, 0xfb,
	0x1a, 0x63, 0xd5, 0x18, 0xb5, 0xc9, 0xe6, 0xd5, 0x08, 0xdf, 0x13, 0x93, 0x37, 0x62, 0x82, 0xae,
	0x1f, 0x03, 0x4f, 0x43, 0x13, 0xba, 0x3e, 0x9b, 0xd5, 0x79, 0xde, 0xe6, 0xea, 0x37, 0x00, 0x00,
	0xff, 0xff, 0x2d, 0xa8, 0xea, 0x24, 0x6f, 0x01, 0x00, 0x00,
}
