/*
Copyright 2019 Cisco Systems

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: pim_ma_summary.proto

package cisco_ios_xr_ipv4_pim_oper_pim6_ma_standby_pim_ma_summary

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type PimMaSummary_KEYS struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PimMaSummary_KEYS) Reset()         { *m = PimMaSummary_KEYS{} }
func (m *PimMaSummary_KEYS) String() string { return proto.CompactTextString(m) }
func (*PimMaSummary_KEYS) ProtoMessage()    {}
func (*PimMaSummary_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_4e5164df2bfba2c7, []int{0}
}

func (m *PimMaSummary_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PimMaSummary_KEYS.Unmarshal(m, b)
}
func (m *PimMaSummary_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PimMaSummary_KEYS.Marshal(b, m, deterministic)
}
func (m *PimMaSummary_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PimMaSummary_KEYS.Merge(m, src)
}
func (m *PimMaSummary_KEYS) XXX_Size() int {
	return xxx_messageInfo_PimMaSummary_KEYS.Size(m)
}
func (m *PimMaSummary_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_PimMaSummary_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_PimMaSummary_KEYS proto.InternalMessageInfo

type PimMaSummary struct {
	IsImConnectionOpen         bool     `protobuf:"varint,50,opt,name=is_im_connection_open,json=isImConnectionOpen,proto3" json:"is_im_connection_open,omitempty"`
	IsNetioConnectionOpen      bool     `protobuf:"varint,51,opt,name=is_netio_connection_open,json=isNetioConnectionOpen,proto3" json:"is_netio_connection_open,omitempty"`
	IsEdmConnectionOpen        bool     `protobuf:"varint,52,opt,name=is_edm_connection_open,json=isEdmConnectionOpen,proto3" json:"is_edm_connection_open,omitempty"`
	IsStandbyEdmConnectionOpen bool     `protobuf:"varint,53,opt,name=is_standby_edm_connection_open,json=isStandbyEdmConnectionOpen,proto3" json:"is_standby_edm_connection_open,omitempty"`
	EncapInterfaceCount        uint32   `protobuf:"varint,54,opt,name=encap_interface_count,json=encapInterfaceCount,proto3" json:"encap_interface_count,omitempty"`
	DecapInterfaceCount        uint32   `protobuf:"varint,55,opt,name=decap_interface_count,json=decapInterfaceCount,proto3" json:"decap_interface_count,omitempty"`
	MdtInterfaceCount          uint32   `protobuf:"varint,56,opt,name=mdt_interface_count,json=mdtInterfaceCount,proto3" json:"mdt_interface_count,omitempty"`
	XXX_NoUnkeyedLiteral       struct{} `json:"-"`
	XXX_unrecognized           []byte   `json:"-"`
	XXX_sizecache              int32    `json:"-"`
}

func (m *PimMaSummary) Reset()         { *m = PimMaSummary{} }
func (m *PimMaSummary) String() string { return proto.CompactTextString(m) }
func (*PimMaSummary) ProtoMessage()    {}
func (*PimMaSummary) Descriptor() ([]byte, []int) {
	return fileDescriptor_4e5164df2bfba2c7, []int{1}
}

func (m *PimMaSummary) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PimMaSummary.Unmarshal(m, b)
}
func (m *PimMaSummary) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PimMaSummary.Marshal(b, m, deterministic)
}
func (m *PimMaSummary) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PimMaSummary.Merge(m, src)
}
func (m *PimMaSummary) XXX_Size() int {
	return xxx_messageInfo_PimMaSummary.Size(m)
}
func (m *PimMaSummary) XXX_DiscardUnknown() {
	xxx_messageInfo_PimMaSummary.DiscardUnknown(m)
}

var xxx_messageInfo_PimMaSummary proto.InternalMessageInfo

func (m *PimMaSummary) GetIsImConnectionOpen() bool {
	if m != nil {
		return m.IsImConnectionOpen
	}
	return false
}

func (m *PimMaSummary) GetIsNetioConnectionOpen() bool {
	if m != nil {
		return m.IsNetioConnectionOpen
	}
	return false
}

func (m *PimMaSummary) GetIsEdmConnectionOpen() bool {
	if m != nil {
		return m.IsEdmConnectionOpen
	}
	return false
}

func (m *PimMaSummary) GetIsStandbyEdmConnectionOpen() bool {
	if m != nil {
		return m.IsStandbyEdmConnectionOpen
	}
	return false
}

func (m *PimMaSummary) GetEncapInterfaceCount() uint32 {
	if m != nil {
		return m.EncapInterfaceCount
	}
	return 0
}

func (m *PimMaSummary) GetDecapInterfaceCount() uint32 {
	if m != nil {
		return m.DecapInterfaceCount
	}
	return 0
}

func (m *PimMaSummary) GetMdtInterfaceCount() uint32 {
	if m != nil {
		return m.MdtInterfaceCount
	}
	return 0
}

func init() {
	proto.RegisterType((*PimMaSummary_KEYS)(nil), "cisco_ios_xr_ipv4_pim_oper.pim6_ma.standby.pim_ma_summary.pim_ma_summary_KEYS")
	proto.RegisterType((*PimMaSummary)(nil), "cisco_ios_xr_ipv4_pim_oper.pim6_ma.standby.pim_ma_summary.pim_ma_summary")
}

func init() { proto.RegisterFile("pim_ma_summary.proto", fileDescriptor_4e5164df2bfba2c7) }

var fileDescriptor_4e5164df2bfba2c7 = []byte{
	// 273 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0xd1, 0xc1, 0x4a, 0x03, 0x31,
	0x10, 0x06, 0x60, 0x8a, 0x20, 0x12, 0x50, 0x70, 0xd7, 0x95, 0xc5, 0x83, 0x94, 0x9e, 0x7a, 0x5a,
	0xb0, 0x5b, 0x5b, 0xbd, 0x5a, 0x7a, 0x28, 0x82, 0x42, 0x7b, 0xf2, 0x34, 0xa4, 0x49, 0x84, 0x39,
	0x64, 0x12, 0x76, 0x52, 0xb1, 0x0f, 0xe1, 0x3b, 0x4b, 0x52, 0x2d, 0xec, 0x6e, 0xaf, 0xf3, 0xcf,
	0x37, 0x3f, 0x21, 0xe2, 0xc6, 0xa3, 0x05, 0x2b, 0x81, 0x77, 0xd6, 0xca, 0x66, 0x5f, 0xf9, 0xc6,
	0x05, 0x97, 0x3d, 0x2b, 0x64, 0xe5, 0x00, 0x1d, 0xc3, 0x77, 0x03, 0xe8, 0xbf, 0xa6, 0x10, 0xf7,
	0x9c, 0x37, 0x4d, 0xe5, 0xd1, 0xce, 0xc0, 0xca, 0x8a, 0x83, 0x24, 0xbd, 0xdd, 0x57, 0xed, 0x03,
	0xa3, 0x42, 0xe4, 0xed, 0x09, 0xbc, 0x2e, 0x3f, 0x36, 0xa3, 0x9f, 0x33, 0x71, 0xd5, 0x9e, 0x67,
	0x0f, 0xa2, 0x40, 0x06, 0xb4, 0xa0, 0x1c, 0x91, 0x51, 0x01, 0x1d, 0xc5, 0x06, 0x2a, 0x27, 0xc3,
	0xc1, 0xf8, 0x62, 0x9d, 0x21, 0xaf, 0xec, 0xe2, 0x18, 0xbd, 0x7b, 0x43, 0xd9, 0x5c, 0x94, 0xc8,
	0x40, 0x26, 0xa0, 0xeb, 0xa9, 0x3a, 0xa9, 0x02, 0xf9, 0x2d, 0xc6, 0x1d, 0x58, 0x8b, 0x5b, 0x64,
	0x30, 0xba, 0x5f, 0x36, 0x4d, 0x2c, 0x47, 0x5e, 0xea, 0x6e, 0xdb, 0x8b, 0xb8, 0x47, 0x86, 0xbf,
	0x77, 0x9e, 0xc4, 0x8f, 0x09, 0xdf, 0x21, 0x6f, 0x0e, 0x4b, 0xfd, 0x1b, 0x13, 0x51, 0x18, 0x52,
	0xd2, 0x03, 0x52, 0x30, 0xcd, 0xa7, 0x54, 0x06, 0x94, 0xdb, 0x51, 0x28, 0x67, 0xc3, 0xc1, 0xf8,
	0x72, 0x9d, 0xa7, 0x70, 0xf5, 0x9f, 0x2d, 0x62, 0x14, 0x8d, 0x36, 0xa7, 0xcc, 0xfc, 0x60, 0x52,
	0xd8, 0x31, 0x95, 0xc8, 0xad, 0x0e, 0x3d, 0xf1, 0x94, 0xc4, 0xb5, 0xd5, 0xa1, 0xbd, 0xbf, 0x3d,
	0x4f, 0x1f, 0x5d, 0xff, 0x06, 0x00, 0x00, 0xff, 0xff, 0xa3, 0x8a, 0x28, 0xde, 0x00, 0x02, 0x00,
	0x00,
}
