/*
Copyright 2019 Cisco Systems

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: rcmd_show_process.proto

package cisco_ios_xr_infra_rcmd_oper_rcmd_process_ospf

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type RcmdShowProcess_KEYS struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RcmdShowProcess_KEYS) Reset()         { *m = RcmdShowProcess_KEYS{} }
func (m *RcmdShowProcess_KEYS) String() string { return proto.CompactTextString(m) }
func (*RcmdShowProcess_KEYS) ProtoMessage()    {}
func (*RcmdShowProcess_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_833905fefabeb7bf, []int{0}
}

func (m *RcmdShowProcess_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RcmdShowProcess_KEYS.Unmarshal(m, b)
}
func (m *RcmdShowProcess_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RcmdShowProcess_KEYS.Marshal(b, m, deterministic)
}
func (m *RcmdShowProcess_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RcmdShowProcess_KEYS.Merge(m, src)
}
func (m *RcmdShowProcess_KEYS) XXX_Size() int {
	return xxx_messageInfo_RcmdShowProcess_KEYS.Size(m)
}
func (m *RcmdShowProcess_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_RcmdShowProcess_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_RcmdShowProcess_KEYS proto.InternalMessageInfo

type RcmdShowInstance struct {
	InstanceId           uint32   `protobuf:"varint,1,opt,name=instance_id,json=instanceId,proto3" json:"instance_id,omitempty"`
	InstanceState        string   `protobuf:"bytes,2,opt,name=instance_state,json=instanceState,proto3" json:"instance_state,omitempty"`
	InstanceDeleted      string   `protobuf:"bytes,3,opt,name=instance_deleted,json=instanceDeleted,proto3" json:"instance_deleted,omitempty"`
	FwdReferenced        string   `protobuf:"bytes,4,opt,name=fwd_referenced,json=fwdReferenced,proto3" json:"fwd_referenced,omitempty"`
	LastUpdateTime       string   `protobuf:"bytes,5,opt,name=last_update_time,json=lastUpdateTime,proto3" json:"last_update_time,omitempty"`
	NodeId               uint32   `protobuf:"varint,6,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	SpfOffset            uint32   `protobuf:"varint,7,opt,name=spf_offset,json=spfOffset,proto3" json:"spf_offset,omitempty"`
	TotalSpfNos          uint32   `protobuf:"varint,8,opt,name=total_spf_nos,json=totalSpfNos,proto3" json:"total_spf_nos,omitempty"`
	ArchSpfRun           uint32   `protobuf:"varint,9,opt,name=arch_spf_run,json=archSpfRun,proto3" json:"arch_spf_run,omitempty"`
	RouteChangeSpfNos    uint32   `protobuf:"varint,10,opt,name=route_change_spf_nos,json=routeChangeSpfNos,proto3" json:"route_change_spf_nos,omitempty"`
	NoRouteChangeSpfNos  uint32   `protobuf:"varint,11,opt,name=no_route_change_spf_nos,json=noRouteChangeSpfNos,proto3" json:"no_route_change_spf_nos,omitempty"`
	NotInterestedSpfNos  uint32   `protobuf:"varint,12,opt,name=not_interested_spf_nos,json=notInterestedSpfNos,proto3" json:"not_interested_spf_nos,omitempty"`
	TotalSptNos          uint32   `protobuf:"varint,13,opt,name=total_spt_nos,json=totalSptNos,proto3" json:"total_spt_nos,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RcmdShowInstance) Reset()         { *m = RcmdShowInstance{} }
func (m *RcmdShowInstance) String() string { return proto.CompactTextString(m) }
func (*RcmdShowInstance) ProtoMessage()    {}
func (*RcmdShowInstance) Descriptor() ([]byte, []int) {
	return fileDescriptor_833905fefabeb7bf, []int{1}
}

func (m *RcmdShowInstance) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RcmdShowInstance.Unmarshal(m, b)
}
func (m *RcmdShowInstance) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RcmdShowInstance.Marshal(b, m, deterministic)
}
func (m *RcmdShowInstance) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RcmdShowInstance.Merge(m, src)
}
func (m *RcmdShowInstance) XXX_Size() int {
	return xxx_messageInfo_RcmdShowInstance.Size(m)
}
func (m *RcmdShowInstance) XXX_DiscardUnknown() {
	xxx_messageInfo_RcmdShowInstance.DiscardUnknown(m)
}

var xxx_messageInfo_RcmdShowInstance proto.InternalMessageInfo

func (m *RcmdShowInstance) GetInstanceId() uint32 {
	if m != nil {
		return m.InstanceId
	}
	return 0
}

func (m *RcmdShowInstance) GetInstanceState() string {
	if m != nil {
		return m.InstanceState
	}
	return ""
}

func (m *RcmdShowInstance) GetInstanceDeleted() string {
	if m != nil {
		return m.InstanceDeleted
	}
	return ""
}

func (m *RcmdShowInstance) GetFwdReferenced() string {
	if m != nil {
		return m.FwdReferenced
	}
	return ""
}

func (m *RcmdShowInstance) GetLastUpdateTime() string {
	if m != nil {
		return m.LastUpdateTime
	}
	return ""
}

func (m *RcmdShowInstance) GetNodeId() uint32 {
	if m != nil {
		return m.NodeId
	}
	return 0
}

func (m *RcmdShowInstance) GetSpfOffset() uint32 {
	if m != nil {
		return m.SpfOffset
	}
	return 0
}

func (m *RcmdShowInstance) GetTotalSpfNos() uint32 {
	if m != nil {
		return m.TotalSpfNos
	}
	return 0
}

func (m *RcmdShowInstance) GetArchSpfRun() uint32 {
	if m != nil {
		return m.ArchSpfRun
	}
	return 0
}

func (m *RcmdShowInstance) GetRouteChangeSpfNos() uint32 {
	if m != nil {
		return m.RouteChangeSpfNos
	}
	return 0
}

func (m *RcmdShowInstance) GetNoRouteChangeSpfNos() uint32 {
	if m != nil {
		return m.NoRouteChangeSpfNos
	}
	return 0
}

func (m *RcmdShowInstance) GetNotInterestedSpfNos() uint32 {
	if m != nil {
		return m.NotInterestedSpfNos
	}
	return 0
}

func (m *RcmdShowInstance) GetTotalSptNos() uint32 {
	if m != nil {
		return m.TotalSptNos
	}
	return 0
}

type RcmdShowInstanceName struct {
	Name                  string              `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	LastUpdateTime        string              `protobuf:"bytes,2,opt,name=last_update_time,json=lastUpdateTime,proto3" json:"last_update_time,omitempty"`
	TotalSpfNos           uint32              `protobuf:"varint,3,opt,name=total_spf_nos,json=totalSpfNos,proto3" json:"total_spf_nos,omitempty"`
	RouteChangeSpfNos     uint32              `protobuf:"varint,4,opt,name=route_change_spf_nos,json=routeChangeSpfNos,proto3" json:"route_change_spf_nos,omitempty"`
	NoRouteChangeSpfNos   uint32              `protobuf:"varint,5,opt,name=no_route_change_spf_nos,json=noRouteChangeSpfNos,proto3" json:"no_route_change_spf_nos,omitempty"`
	NotInterestedSpfNos   uint32              `protobuf:"varint,6,opt,name=not_interested_spf_nos,json=notInterestedSpfNos,proto3" json:"not_interested_spf_nos,omitempty"`
	LspRegenerationCount  uint32              `protobuf:"varint,7,opt,name=lsp_regeneration_count,json=lspRegenerationCount,proto3" json:"lsp_regeneration_count,omitempty"`
	LspRegenerationSerial uint32              `protobuf:"varint,8,opt,name=lsp_regeneration_serial,json=lspRegenerationSerial,proto3" json:"lsp_regeneration_serial,omitempty"`
	ArchSpfEvent          uint32              `protobuf:"varint,9,opt,name=arch_spf_event,json=archSpfEvent,proto3" json:"arch_spf_event,omitempty"`
	ArchLspRegeneration   uint32              `protobuf:"varint,10,opt,name=arch_lsp_regeneration,json=archLspRegeneration,proto3" json:"arch_lsp_regeneration,omitempty"`
	Instance              []*RcmdShowInstance `protobuf:"bytes,11,rep,name=instance,proto3" json:"instance,omitempty"`
	XXX_NoUnkeyedLiteral  struct{}            `json:"-"`
	XXX_unrecognized      []byte              `json:"-"`
	XXX_sizecache         int32               `json:"-"`
}

func (m *RcmdShowInstanceName) Reset()         { *m = RcmdShowInstanceName{} }
func (m *RcmdShowInstanceName) String() string { return proto.CompactTextString(m) }
func (*RcmdShowInstanceName) ProtoMessage()    {}
func (*RcmdShowInstanceName) Descriptor() ([]byte, []int) {
	return fileDescriptor_833905fefabeb7bf, []int{2}
}

func (m *RcmdShowInstanceName) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RcmdShowInstanceName.Unmarshal(m, b)
}
func (m *RcmdShowInstanceName) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RcmdShowInstanceName.Marshal(b, m, deterministic)
}
func (m *RcmdShowInstanceName) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RcmdShowInstanceName.Merge(m, src)
}
func (m *RcmdShowInstanceName) XXX_Size() int {
	return xxx_messageInfo_RcmdShowInstanceName.Size(m)
}
func (m *RcmdShowInstanceName) XXX_DiscardUnknown() {
	xxx_messageInfo_RcmdShowInstanceName.DiscardUnknown(m)
}

var xxx_messageInfo_RcmdShowInstanceName proto.InternalMessageInfo

func (m *RcmdShowInstanceName) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *RcmdShowInstanceName) GetLastUpdateTime() string {
	if m != nil {
		return m.LastUpdateTime
	}
	return ""
}

func (m *RcmdShowInstanceName) GetTotalSpfNos() uint32 {
	if m != nil {
		return m.TotalSpfNos
	}
	return 0
}

func (m *RcmdShowInstanceName) GetRouteChangeSpfNos() uint32 {
	if m != nil {
		return m.RouteChangeSpfNos
	}
	return 0
}

func (m *RcmdShowInstanceName) GetNoRouteChangeSpfNos() uint32 {
	if m != nil {
		return m.NoRouteChangeSpfNos
	}
	return 0
}

func (m *RcmdShowInstanceName) GetNotInterestedSpfNos() uint32 {
	if m != nil {
		return m.NotInterestedSpfNos
	}
	return 0
}

func (m *RcmdShowInstanceName) GetLspRegenerationCount() uint32 {
	if m != nil {
		return m.LspRegenerationCount
	}
	return 0
}

func (m *RcmdShowInstanceName) GetLspRegenerationSerial() uint32 {
	if m != nil {
		return m.LspRegenerationSerial
	}
	return 0
}

func (m *RcmdShowInstanceName) GetArchSpfEvent() uint32 {
	if m != nil {
		return m.ArchSpfEvent
	}
	return 0
}

func (m *RcmdShowInstanceName) GetArchLspRegeneration() uint32 {
	if m != nil {
		return m.ArchLspRegeneration
	}
	return 0
}

func (m *RcmdShowInstanceName) GetInstance() []*RcmdShowInstance {
	if m != nil {
		return m.Instance
	}
	return nil
}

type RcmdShowProcessInfo struct {
	ProtocolId           string                  `protobuf:"bytes,1,opt,name=protocol_id,json=protocolId,proto3" json:"protocol_id,omitempty"`
	ProcessName          string                  `protobuf:"bytes,2,opt,name=process_name,json=processName,proto3" json:"process_name,omitempty"`
	InstanceName         []*RcmdShowInstanceName `protobuf:"bytes,3,rep,name=instance_name,json=instanceName,proto3" json:"instance_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *RcmdShowProcessInfo) Reset()         { *m = RcmdShowProcessInfo{} }
func (m *RcmdShowProcessInfo) String() string { return proto.CompactTextString(m) }
func (*RcmdShowProcessInfo) ProtoMessage()    {}
func (*RcmdShowProcessInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_833905fefabeb7bf, []int{3}
}

func (m *RcmdShowProcessInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RcmdShowProcessInfo.Unmarshal(m, b)
}
func (m *RcmdShowProcessInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RcmdShowProcessInfo.Marshal(b, m, deterministic)
}
func (m *RcmdShowProcessInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RcmdShowProcessInfo.Merge(m, src)
}
func (m *RcmdShowProcessInfo) XXX_Size() int {
	return xxx_messageInfo_RcmdShowProcessInfo.Size(m)
}
func (m *RcmdShowProcessInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_RcmdShowProcessInfo.DiscardUnknown(m)
}

var xxx_messageInfo_RcmdShowProcessInfo proto.InternalMessageInfo

func (m *RcmdShowProcessInfo) GetProtocolId() string {
	if m != nil {
		return m.ProtocolId
	}
	return ""
}

func (m *RcmdShowProcessInfo) GetProcessName() string {
	if m != nil {
		return m.ProcessName
	}
	return ""
}

func (m *RcmdShowProcessInfo) GetInstanceName() []*RcmdShowInstanceName {
	if m != nil {
		return m.InstanceName
	}
	return nil
}

type RcmdShowProcess struct {
	Process              []*RcmdShowProcessInfo `protobuf:"bytes,50,rep,name=process,proto3" json:"process,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *RcmdShowProcess) Reset()         { *m = RcmdShowProcess{} }
func (m *RcmdShowProcess) String() string { return proto.CompactTextString(m) }
func (*RcmdShowProcess) ProtoMessage()    {}
func (*RcmdShowProcess) Descriptor() ([]byte, []int) {
	return fileDescriptor_833905fefabeb7bf, []int{4}
}

func (m *RcmdShowProcess) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RcmdShowProcess.Unmarshal(m, b)
}
func (m *RcmdShowProcess) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RcmdShowProcess.Marshal(b, m, deterministic)
}
func (m *RcmdShowProcess) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RcmdShowProcess.Merge(m, src)
}
func (m *RcmdShowProcess) XXX_Size() int {
	return xxx_messageInfo_RcmdShowProcess.Size(m)
}
func (m *RcmdShowProcess) XXX_DiscardUnknown() {
	xxx_messageInfo_RcmdShowProcess.DiscardUnknown(m)
}

var xxx_messageInfo_RcmdShowProcess proto.InternalMessageInfo

func (m *RcmdShowProcess) GetProcess() []*RcmdShowProcessInfo {
	if m != nil {
		return m.Process
	}
	return nil
}

func init() {
	proto.RegisterType((*RcmdShowProcess_KEYS)(nil), "cisco_ios_xr_infra_rcmd_oper.rcmd.process.ospf.rcmd_show_process_KEYS")
	proto.RegisterType((*RcmdShowInstance)(nil), "cisco_ios_xr_infra_rcmd_oper.rcmd.process.ospf.rcmd_show_instance")
	proto.RegisterType((*RcmdShowInstanceName)(nil), "cisco_ios_xr_infra_rcmd_oper.rcmd.process.ospf.rcmd_show_instance_name")
	proto.RegisterType((*RcmdShowProcessInfo)(nil), "cisco_ios_xr_infra_rcmd_oper.rcmd.process.ospf.rcmd_show_process_info")
	proto.RegisterType((*RcmdShowProcess)(nil), "cisco_ios_xr_infra_rcmd_oper.rcmd.process.ospf.rcmd_show_process")
}

func init() { proto.RegisterFile("rcmd_show_process.proto", fileDescriptor_833905fefabeb7bf) }

var fileDescriptor_833905fefabeb7bf = []byte{
	// 611 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x54, 0x4f, 0x6f, 0x13, 0x3f,
	0x10, 0x55, 0x9a, 0x34, 0x6d, 0x26, 0x49, 0x7f, 0xad, 0xfb, 0x27, 0x7b, 0xf9, 0x89, 0x10, 0x81,
	0x14, 0x2e, 0x41, 0x6a, 0x2b, 0x3e, 0x00, 0xa5, 0xa0, 0x08, 0x54, 0xa4, 0x0d, 0x1c, 0xb8, 0x60,
	0x96, 0xf5, 0xb8, 0x5d, 0x69, 0x63, 0xaf, 0x6c, 0x87, 0xf2, 0x49, 0xf8, 0x3a, 0xdc, 0xf9, 0x54,
	0xc8, 0x93, 0xf5, 0x92, 0x76, 0xd3, 0x03, 0xe1, 0x14, 0xe7, 0xcd, 0x7b, 0xe3, 0x9d, 0xe7, 0xa7,
	0x81, 0x81, 0x49, 0xe7, 0x82, 0xdb, 0x1b, 0x7d, 0xcb, 0x0b, 0xa3, 0x53, 0xb4, 0x76, 0x52, 0x18,
	0xed, 0x34, 0x9b, 0xa4, 0x99, 0x4d, 0x35, 0xcf, 0xb4, 0xe5, 0xdf, 0x0d, 0xcf, 0x94, 0x34, 0x09,
	0x27, 0xae, 0x2e, 0xd0, 0x4c, 0xfc, 0x69, 0x12, 0x04, 0xda, 0x16, 0x72, 0x14, 0xc1, 0x49, 0xad,
	0x15, 0x7f, 0x7b, 0xf9, 0x69, 0x36, 0xfa, 0xd1, 0x02, 0xf6, 0xa7, 0x94, 0x29, 0xeb, 0x12, 0x95,
	0x22, 0x7b, 0x04, 0xdd, 0x70, 0xe6, 0x99, 0x88, 0x1a, 0xc3, 0xc6, 0xb8, 0x1f, 0x43, 0x80, 0xa6,
	0x82, 0x3d, 0x85, 0xbd, 0x8a, 0x60, 0x5d, 0xe2, 0x30, 0xda, 0x1a, 0x36, 0xc6, 0x9d, 0xb8, 0x1f,
	0xd0, 0x99, 0x07, 0xd9, 0x33, 0xd8, 0xaf, 0x68, 0x02, 0x73, 0x74, 0x28, 0xa2, 0x26, 0x11, 0xff,
	0x0b, 0xf8, 0xab, 0x25, 0xec, 0x3b, 0xca, 0x5b, 0xc1, 0x0d, 0x4a, 0x34, 0xa8, 0x52, 0x14, 0x51,
	0x6b, 0xd9, 0x51, 0xde, 0x8a, 0xb8, 0x02, 0xd9, 0x18, 0xf6, 0xf3, 0xc4, 0x3a, 0xbe, 0x28, 0x44,
	0xe2, 0x90, 0xbb, 0x6c, 0x8e, 0xd1, 0x36, 0x11, 0xf7, 0x3c, 0xfe, 0x91, 0xe0, 0x0f, 0xd9, 0x1c,
	0xd9, 0x00, 0x76, 0x94, 0x16, 0xf4, 0xfd, 0x6d, 0xfa, 0xfe, 0xb6, 0xff, 0x3b, 0x15, 0xec, 0x7f,
	0x00, 0x5b, 0x48, 0xae, 0xa5, 0xb4, 0xe8, 0xa2, 0x1d, 0xaa, 0x75, 0x6c, 0x21, 0xdf, 0x13, 0xc0,
	0x46, 0xd0, 0x77, 0xda, 0x25, 0x39, 0xf7, 0x24, 0xa5, 0x6d, 0xb4, 0x4b, 0x8c, 0x2e, 0x81, 0xb3,
	0x42, 0x5e, 0x69, 0xcb, 0x86, 0xd0, 0x4b, 0x4c, 0x7a, 0x43, 0x14, 0xb3, 0x50, 0x51, 0x67, 0x69,
	0x90, 0xc7, 0x66, 0x85, 0x8c, 0x17, 0x8a, 0x3d, 0x87, 0x23, 0xa3, 0x17, 0x0e, 0x79, 0x7a, 0x93,
	0xa8, 0x6b, 0xac, 0x9a, 0x01, 0x31, 0x0f, 0xa8, 0x76, 0x41, 0xa5, 0xb2, 0xe5, 0x39, 0x0c, 0x94,
	0xe6, 0x6b, 0x35, 0x5d, 0xd2, 0x1c, 0x2a, 0x1d, 0xd7, 0x54, 0x67, 0x70, 0xa2, 0xb4, 0xe3, 0x99,
	0x72, 0x68, 0xd0, 0x3a, 0x14, 0x95, 0xa8, 0x17, 0x44, 0x6e, 0x5a, 0x15, 0x4b, 0xd1, 0xca, 0x84,
	0x8e, 0xb8, 0xfd, 0x3b, 0x13, 0xba, 0x2b, 0x6d, 0x47, 0x3f, 0x5b, 0xab, 0xf1, 0xab, 0x1e, 0x51,
	0x25, 0x73, 0x64, 0x0c, 0x5a, 0xfe, 0x97, 0x62, 0xd1, 0x89, 0xe9, 0xbc, 0xf6, 0x5d, 0xb6, 0xd6,
	0xbe, 0x4b, 0xcd, 0xdf, 0x66, 0xdd, 0xdf, 0x87, 0xdc, 0x6b, 0x6d, 0xe0, 0xde, 0xf6, 0x26, 0xee,
	0xb5, 0x1f, 0x76, 0xef, 0x1c, 0x4e, 0x72, 0x5b, 0x70, 0x83, 0xd7, 0xa8, 0xd0, 0x24, 0x2e, 0xd3,
	0x8a, 0xa7, 0x7a, 0xa1, 0x42, 0x94, 0x8e, 0x72, 0x5b, 0xc4, 0x2b, 0xc5, 0x0b, 0x5f, 0x63, 0x2f,
	0x60, 0x50, 0x53, 0x59, 0x34, 0x59, 0x92, 0x97, 0xf9, 0x3a, 0xbe, 0x27, 0x9b, 0x51, 0x91, 0x3d,
	0x81, 0xbd, 0x2a, 0x69, 0xf8, 0x0d, 0x95, 0x2b, 0xb3, 0xd6, 0x2b, 0xb3, 0x76, 0xe9, 0x31, 0x76,
	0x0a, 0xc7, 0xc4, 0xba, 0x7f, 0x45, 0x19, 0xb7, 0x43, 0x5f, 0x7c, 0x77, 0xb7, 0x3f, 0xfb, 0x0c,
	0xbb, 0xe1, 0x59, 0xa3, 0xee, 0xb0, 0x39, 0xee, 0x9e, 0xbe, 0xfc, 0xcb, 0xbd, 0x32, 0xa9, 0x07,
	0x24, 0xae, 0x7a, 0x8e, 0x7e, 0x35, 0xd6, 0x6d, 0x9d, 0x4c, 0x49, 0xed, 0xd7, 0x0b, 0x2d, 0xb2,
	0x54, 0xe7, 0x61, 0xbd, 0x74, 0x62, 0x08, 0xd0, 0x54, 0xb0, 0xc7, 0xd0, 0x0b, 0x02, 0x4a, 0xda,
	0x32, 0x49, 0xdd, 0x12, 0xbb, 0xf2, 0x81, 0xcb, 0xa1, 0x7f, 0x27, 0x95, 0x51, 0x93, 0x66, 0x78,
	0xf3, 0xef, 0x33, 0x50, 0xbb, 0xb8, 0x17, 0xfe, 0xfa, 0xdb, 0x46, 0x0b, 0x38, 0xa8, 0xcd, 0xc2,
	0xbe, 0xc0, 0x4e, 0x79, 0x8c, 0x4e, 0xe9, 0xf2, 0xd7, 0x9b, 0x5f, 0xbe, 0xea, 0x4f, 0x1c, 0xda,
	0x7e, 0x6d, 0x93, 0x27, 0x67, 0xbf, 0x03, 0x00, 0x00, 0xff, 0xff, 0xc6, 0xfc, 0x19, 0xbd, 0x0a,
	0x06, 0x00, 0x00,
}
