/*
Copyright 2019 Cisco Systems

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: eth_showctrl_bert.proto

package cisco_ios_xr_drivers_media_eth_oper_ethernet_interface_berts_bert

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type EthShowctrlBert_KEYS struct {
	InterfaceName        string   `protobuf:"bytes,1,opt,name=interface_name,json=interfaceName,proto3" json:"interface_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EthShowctrlBert_KEYS) Reset()         { *m = EthShowctrlBert_KEYS{} }
func (m *EthShowctrlBert_KEYS) String() string { return proto.CompactTextString(m) }
func (*EthShowctrlBert_KEYS) ProtoMessage()    {}
func (*EthShowctrlBert_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_42d52ccdd898f643, []int{0}
}

func (m *EthShowctrlBert_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EthShowctrlBert_KEYS.Unmarshal(m, b)
}
func (m *EthShowctrlBert_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EthShowctrlBert_KEYS.Marshal(b, m, deterministic)
}
func (m *EthShowctrlBert_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EthShowctrlBert_KEYS.Merge(m, src)
}
func (m *EthShowctrlBert_KEYS) XXX_Size() int {
	return xxx_messageInfo_EthShowctrlBert_KEYS.Size(m)
}
func (m *EthShowctrlBert_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_EthShowctrlBert_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_EthShowctrlBert_KEYS proto.InternalMessageInfo

func (m *EthShowctrlBert_KEYS) GetInterfaceName() string {
	if m != nil {
		return m.InterfaceName
	}
	return ""
}

type EthernetBertStatus_ struct {
	BertStateEnabled     uint32   `protobuf:"varint,1,opt,name=bert_state_enabled,json=bertStateEnabled,proto3" json:"bert_state_enabled,omitempty"`
	DataAvailability     uint32   `protobuf:"varint,2,opt,name=data_availability,json=dataAvailability,proto3" json:"data_availability,omitempty"`
	ReceiveCount         uint64   `protobuf:"varint,3,opt,name=receive_count,json=receiveCount,proto3" json:"receive_count,omitempty"`
	TransmitCount        uint64   `protobuf:"varint,4,opt,name=transmit_count,json=transmitCount,proto3" json:"transmit_count,omitempty"`
	ReceiveErrors        uint64   `protobuf:"varint,5,opt,name=receive_errors,json=receiveErrors,proto3" json:"receive_errors,omitempty"`
	ErrorType            string   `protobuf:"bytes,6,opt,name=error_type,json=errorType,proto3" json:"error_type,omitempty"`
	TestPattern          string   `protobuf:"bytes,7,opt,name=test_pattern,json=testPattern,proto3" json:"test_pattern,omitempty"`
	DeviceUnderTest      string   `protobuf:"bytes,8,opt,name=device_under_test,json=deviceUnderTest,proto3" json:"device_under_test,omitempty"`
	InterfaceDevice      string   `protobuf:"bytes,9,opt,name=interface_device,json=interfaceDevice,proto3" json:"interface_device,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EthernetBertStatus_) Reset()         { *m = EthernetBertStatus_{} }
func (m *EthernetBertStatus_) String() string { return proto.CompactTextString(m) }
func (*EthernetBertStatus_) ProtoMessage()    {}
func (*EthernetBertStatus_) Descriptor() ([]byte, []int) {
	return fileDescriptor_42d52ccdd898f643, []int{1}
}

func (m *EthernetBertStatus_) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EthernetBertStatus_.Unmarshal(m, b)
}
func (m *EthernetBertStatus_) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EthernetBertStatus_.Marshal(b, m, deterministic)
}
func (m *EthernetBertStatus_) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EthernetBertStatus_.Merge(m, src)
}
func (m *EthernetBertStatus_) XXX_Size() int {
	return xxx_messageInfo_EthernetBertStatus_.Size(m)
}
func (m *EthernetBertStatus_) XXX_DiscardUnknown() {
	xxx_messageInfo_EthernetBertStatus_.DiscardUnknown(m)
}

var xxx_messageInfo_EthernetBertStatus_ proto.InternalMessageInfo

func (m *EthernetBertStatus_) GetBertStateEnabled() uint32 {
	if m != nil {
		return m.BertStateEnabled
	}
	return 0
}

func (m *EthernetBertStatus_) GetDataAvailability() uint32 {
	if m != nil {
		return m.DataAvailability
	}
	return 0
}

func (m *EthernetBertStatus_) GetReceiveCount() uint64 {
	if m != nil {
		return m.ReceiveCount
	}
	return 0
}

func (m *EthernetBertStatus_) GetTransmitCount() uint64 {
	if m != nil {
		return m.TransmitCount
	}
	return 0
}

func (m *EthernetBertStatus_) GetReceiveErrors() uint64 {
	if m != nil {
		return m.ReceiveErrors
	}
	return 0
}

func (m *EthernetBertStatus_) GetErrorType() string {
	if m != nil {
		return m.ErrorType
	}
	return ""
}

func (m *EthernetBertStatus_) GetTestPattern() string {
	if m != nil {
		return m.TestPattern
	}
	return ""
}

func (m *EthernetBertStatus_) GetDeviceUnderTest() string {
	if m != nil {
		return m.DeviceUnderTest
	}
	return ""
}

func (m *EthernetBertStatus_) GetInterfaceDevice() string {
	if m != nil {
		return m.InterfaceDevice
	}
	return ""
}

type EthShowctrlBert struct {
	BertStatus           *EthernetBertStatus_ `protobuf:"bytes,50,opt,name=bert_status,json=bertStatus,proto3" json:"bert_status,omitempty"`
	TimeLeft             uint32               `protobuf:"varint,51,opt,name=time_left,json=timeLeft,proto3" json:"time_left,omitempty"`
	PortBertInterval     uint32               `protobuf:"varint,52,opt,name=port_bert_interval,json=portBertInterval,proto3" json:"port_bert_interval,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *EthShowctrlBert) Reset()         { *m = EthShowctrlBert{} }
func (m *EthShowctrlBert) String() string { return proto.CompactTextString(m) }
func (*EthShowctrlBert) ProtoMessage()    {}
func (*EthShowctrlBert) Descriptor() ([]byte, []int) {
	return fileDescriptor_42d52ccdd898f643, []int{2}
}

func (m *EthShowctrlBert) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EthShowctrlBert.Unmarshal(m, b)
}
func (m *EthShowctrlBert) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EthShowctrlBert.Marshal(b, m, deterministic)
}
func (m *EthShowctrlBert) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EthShowctrlBert.Merge(m, src)
}
func (m *EthShowctrlBert) XXX_Size() int {
	return xxx_messageInfo_EthShowctrlBert.Size(m)
}
func (m *EthShowctrlBert) XXX_DiscardUnknown() {
	xxx_messageInfo_EthShowctrlBert.DiscardUnknown(m)
}

var xxx_messageInfo_EthShowctrlBert proto.InternalMessageInfo

func (m *EthShowctrlBert) GetBertStatus() *EthernetBertStatus_ {
	if m != nil {
		return m.BertStatus
	}
	return nil
}

func (m *EthShowctrlBert) GetTimeLeft() uint32 {
	if m != nil {
		return m.TimeLeft
	}
	return 0
}

func (m *EthShowctrlBert) GetPortBertInterval() uint32 {
	if m != nil {
		return m.PortBertInterval
	}
	return 0
}

func init() {
	proto.RegisterType((*EthShowctrlBert_KEYS)(nil), "cisco_ios_xr_drivers_media_eth_oper.ethernet_interface.berts.bert.eth_showctrl_bert_KEYS")
	proto.RegisterType((*EthernetBertStatus_)(nil), "cisco_ios_xr_drivers_media_eth_oper.ethernet_interface.berts.bert.ethernet_bert_status_")
	proto.RegisterType((*EthShowctrlBert)(nil), "cisco_ios_xr_drivers_media_eth_oper.ethernet_interface.berts.bert.eth_showctrl_bert")
}

func init() { proto.RegisterFile("eth_showctrl_bert.proto", fileDescriptor_42d52ccdd898f643) }

var fileDescriptor_42d52ccdd898f643 = []byte{
	// 423 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x92, 0x5f, 0x8b, 0xd3, 0x40,
	0x14, 0xc5, 0xc9, 0xba, 0xae, 0xdb, 0xdb, 0xad, 0x6e, 0x07, 0xd4, 0x01, 0x11, 0x6a, 0x45, 0xa8,
	0x7f, 0xc8, 0xc3, 0xae, 0xef, 0xb2, 0x6a, 0x1f, 0x44, 0x11, 0xe9, 0xae, 0xa0, 0x4f, 0x97, 0x69,
	0x72, 0x4b, 0x07, 0x92, 0x4c, 0xb8, 0x73, 0x1b, 0xcd, 0x47, 0xf5, 0xcb, 0x88, 0xcc, 0x24, 0x8d,
	0x0b, 0xeb, 0x9b, 0x2f, 0x81, 0xfc, 0xce, 0xb9, 0x67, 0x98, 0x39, 0x17, 0x1e, 0x92, 0x6c, 0xd1,
	0x6f, 0xdd, 0x8f, 0x4c, 0xb8, 0xc0, 0x35, 0xb1, 0xa4, 0x35, 0x3b, 0x71, 0xea, 0x22, 0xb3, 0x3e,
	0x73, 0x68, 0x9d, 0xc7, 0x9f, 0x8c, 0x39, 0xdb, 0x86, 0xd8, 0x63, 0x49, 0xb9, 0x35, 0x18, 0x66,
	0x5c, 0x4d, 0x9c, 0x92, 0x6c, 0x89, 0x2b, 0x12, 0xb4, 0x95, 0x10, 0x6f, 0x4c, 0x46, 0x69, 0x88,
	0xf0, 0xf1, 0x3b, 0x7f, 0x03, 0x0f, 0x6e, 0xa4, 0xe3, 0xc7, 0xe5, 0xf7, 0x4b, 0xf5, 0x0c, 0xee,
	0x0e, 0x13, 0x58, 0x99, 0x92, 0x74, 0x32, 0x4b, 0x16, 0xa3, 0xd5, 0x64, 0xa0, 0x9f, 0x4d, 0x49,
	0xf3, 0xdf, 0x07, 0x70, 0x7f, 0x38, 0x22, 0x4e, 0x7b, 0x31, 0xb2, 0xf3, 0xa8, 0x5e, 0x81, 0x1a,
	0xfe, 0x09, 0xa9, 0x32, 0xeb, 0x82, 0xf2, 0x18, 0x32, 0x59, 0x9d, 0x06, 0xe5, 0x32, 0x08, 0xcb,
	0x8e, 0xab, 0x97, 0x30, 0xcd, 0x8d, 0x18, 0x34, 0x8d, 0xb1, 0x85, 0x59, 0xdb, 0xc2, 0x4a, 0xab,
	0x0f, 0x3a, 0x73, 0x10, 0x2e, 0xae, 0x71, 0xf5, 0x14, 0x26, 0x4c, 0x19, 0xd9, 0x86, 0x30, 0x73,
	0xbb, 0x4a, 0xf4, 0xad, 0x59, 0xb2, 0x38, 0x5c, 0x9d, 0xf4, 0xf0, 0x5d, 0x60, 0xe1, 0x02, 0xc2,
	0xa6, 0xf2, 0xa5, 0x95, 0xde, 0x75, 0x18, 0x5d, 0x93, 0x3d, 0x1d, 0x6c, 0xfb, 0x2c, 0x62, 0x76,
	0xec, 0xf5, 0xed, 0xce, 0xd6, 0xd3, 0x65, 0x84, 0xea, 0x31, 0x40, 0x94, 0x51, 0xda, 0x9a, 0xf4,
	0x51, 0x7c, 0x8a, 0x51, 0x24, 0x57, 0x6d, 0x4d, 0xea, 0x09, 0x9c, 0x08, 0x79, 0xc1, 0xda, 0x88,
	0x10, 0x57, 0xfa, 0x4e, 0x34, 0x8c, 0x03, 0xfb, 0xd2, 0x21, 0xf5, 0x02, 0xa6, 0x39, 0x35, 0x36,
	0x23, 0xdc, 0x55, 0x39, 0x31, 0x06, 0x4d, 0x1f, 0x47, 0xdf, 0xbd, 0x4e, 0xf8, 0x1a, 0xf8, 0x15,
	0x79, 0x51, 0xcf, 0xe1, 0xf4, 0xef, 0xe3, 0x77, 0xa2, 0x1e, 0x75, 0xd6, 0x81, 0xbf, 0x8f, 0x78,
	0xfe, 0x2b, 0x81, 0xe9, 0x8d, 0x0a, 0x55, 0x0b, 0xe3, 0x6b, 0x65, 0xe8, 0xb3, 0x59, 0xb2, 0x18,
	0x9f, 0x7d, 0x4b, 0xff, 0x7b, 0x61, 0xd2, 0x7f, 0x76, 0xbd, 0x82, 0x7d, 0x9f, 0x3b, 0xaf, 0x1e,
	0xc1, 0x48, 0x6c, 0x49, 0x58, 0xd0, 0x46, 0xf4, 0x79, 0x6c, 0xf0, 0x38, 0x80, 0x4f, 0xb4, 0x91,
	0xb0, 0x14, 0xb5, 0xe3, 0x7e, 0x3a, 0x1e, 0xd0, 0x98, 0x42, 0xbf, 0xee, 0x7a, 0x0e, 0xca, 0x5b,
	0x62, 0xf9, 0xd0, 0xf3, 0xf5, 0x51, 0xdc, 0xf3, 0xf3, 0x3f, 0x01, 0x00, 0x00, 0xff, 0xff, 0x27,
	0xa6, 0x8d, 0x25, 0x02, 0x03, 0x00, 0x00,
}
