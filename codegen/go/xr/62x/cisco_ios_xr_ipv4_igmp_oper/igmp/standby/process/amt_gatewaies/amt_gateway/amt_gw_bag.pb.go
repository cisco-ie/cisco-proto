/*
Copyright 2019 Cisco Systems

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: amt_gw_bag.proto

package cisco_ios_xr_ipv4_igmp_oper_igmp_standby_process_amt_gatewaies_amt_gateway

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type AmtGwBag_KEYS struct {
	GatewayAddress       string   `protobuf:"bytes,1,opt,name=gateway_address,json=gatewayAddress,proto3" json:"gateway_address,omitempty"`
	Port                 uint32   `protobuf:"varint,2,opt,name=port,proto3" json:"port,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AmtGwBag_KEYS) Reset()         { *m = AmtGwBag_KEYS{} }
func (m *AmtGwBag_KEYS) String() string { return proto.CompactTextString(m) }
func (*AmtGwBag_KEYS) ProtoMessage()    {}
func (*AmtGwBag_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_ff04cd119f53e4f3, []int{0}
}

func (m *AmtGwBag_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AmtGwBag_KEYS.Unmarshal(m, b)
}
func (m *AmtGwBag_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AmtGwBag_KEYS.Marshal(b, m, deterministic)
}
func (m *AmtGwBag_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AmtGwBag_KEYS.Merge(m, src)
}
func (m *AmtGwBag_KEYS) XXX_Size() int {
	return xxx_messageInfo_AmtGwBag_KEYS.Size(m)
}
func (m *AmtGwBag_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_AmtGwBag_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_AmtGwBag_KEYS proto.InternalMessageInfo

func (m *AmtGwBag_KEYS) GetGatewayAddress() string {
	if m != nil {
		return m.GatewayAddress
	}
	return ""
}

func (m *AmtGwBag_KEYS) GetPort() uint32 {
	if m != nil {
		return m.Port
	}
	return 0
}

type AmtGwBag struct {
	Amtgw                string   `protobuf:"bytes,50,opt,name=amtgw,proto3" json:"amtgw,omitempty"`
	AmtPort              uint32   `protobuf:"varint,51,opt,name=amt_port,json=amtPort,proto3" json:"amt_port,omitempty"`
	KeyLen               uint32   `protobuf:"varint,52,opt,name=key_len,json=keyLen,proto3" json:"key_len,omitempty"`
	Amtnh                uint32   `protobuf:"varint,53,opt,name=amtnh,proto3" json:"amtnh,omitempty"`
	AmtNonce             uint32   `protobuf:"varint,54,opt,name=amt_nonce,json=amtNonce,proto3" json:"amt_nonce,omitempty"`
	Idb                  uint64   `protobuf:"varint,55,opt,name=idb,proto3" json:"idb,omitempty"`
	MemUpdIn             uint32   `protobuf:"varint,56,opt,name=mem_upd_in,json=memUpdIn,proto3" json:"mem_upd_in,omitempty"`
	MemUpdOut            uint32   `protobuf:"varint,57,opt,name=mem_upd_out,json=memUpdOut,proto3" json:"mem_upd_out,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AmtGwBag) Reset()         { *m = AmtGwBag{} }
func (m *AmtGwBag) String() string { return proto.CompactTextString(m) }
func (*AmtGwBag) ProtoMessage()    {}
func (*AmtGwBag) Descriptor() ([]byte, []int) {
	return fileDescriptor_ff04cd119f53e4f3, []int{1}
}

func (m *AmtGwBag) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AmtGwBag.Unmarshal(m, b)
}
func (m *AmtGwBag) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AmtGwBag.Marshal(b, m, deterministic)
}
func (m *AmtGwBag) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AmtGwBag.Merge(m, src)
}
func (m *AmtGwBag) XXX_Size() int {
	return xxx_messageInfo_AmtGwBag.Size(m)
}
func (m *AmtGwBag) XXX_DiscardUnknown() {
	xxx_messageInfo_AmtGwBag.DiscardUnknown(m)
}

var xxx_messageInfo_AmtGwBag proto.InternalMessageInfo

func (m *AmtGwBag) GetAmtgw() string {
	if m != nil {
		return m.Amtgw
	}
	return ""
}

func (m *AmtGwBag) GetAmtPort() uint32 {
	if m != nil {
		return m.AmtPort
	}
	return 0
}

func (m *AmtGwBag) GetKeyLen() uint32 {
	if m != nil {
		return m.KeyLen
	}
	return 0
}

func (m *AmtGwBag) GetAmtnh() uint32 {
	if m != nil {
		return m.Amtnh
	}
	return 0
}

func (m *AmtGwBag) GetAmtNonce() uint32 {
	if m != nil {
		return m.AmtNonce
	}
	return 0
}

func (m *AmtGwBag) GetIdb() uint64 {
	if m != nil {
		return m.Idb
	}
	return 0
}

func (m *AmtGwBag) GetMemUpdIn() uint32 {
	if m != nil {
		return m.MemUpdIn
	}
	return 0
}

func (m *AmtGwBag) GetMemUpdOut() uint32 {
	if m != nil {
		return m.MemUpdOut
	}
	return 0
}

func init() {
	proto.RegisterType((*AmtGwBag_KEYS)(nil), "cisco_ios_xr_ipv4_igmp_oper.igmp.standby.process.amt_gatewaies.amt_gateway.amt_gw_bag_KEYS")
	proto.RegisterType((*AmtGwBag)(nil), "cisco_ios_xr_ipv4_igmp_oper.igmp.standby.process.amt_gatewaies.amt_gateway.amt_gw_bag")
}

func init() { proto.RegisterFile("amt_gw_bag.proto", fileDescriptor_ff04cd119f53e4f3) }

var fileDescriptor_ff04cd119f53e4f3 = []byte{
	// 294 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x4c, 0x90, 0x3b, 0x4f, 0xf3, 0x30,
	0x14, 0x86, 0x95, 0xef, 0x2b, 0x2d, 0x3d, 0x08, 0x5a, 0x59, 0x48, 0x18, 0x81, 0x50, 0xd5, 0x85,
	0x4e, 0x19, 0x68, 0xb9, 0x8d, 0x0c, 0x0c, 0x5c, 0x54, 0x50, 0x11, 0x03, 0xd3, 0x91, 0x93, 0x1c,
	0x05, 0xab, 0xf8, 0xa2, 0xd8, 0xa5, 0xe4, 0xa7, 0xf2, 0x6f, 0x90, 0x9d, 0xa0, 0xb2, 0x9d, 0xf7,
	0x7d, 0x5e, 0x3f, 0x83, 0x61, 0x28, 0x94, 0xc7, 0x72, 0x8d, 0x99, 0x28, 0x53, 0x5b, 0x19, 0x6f,
	0xd8, 0x7d, 0x2e, 0x5d, 0x6e, 0x50, 0x1a, 0x87, 0x5f, 0x15, 0x4a, 0xfb, 0x39, 0x43, 0x59, 0x2a,
	0x8b, 0xc6, 0x52, 0x95, 0x86, 0x2b, 0x75, 0x5e, 0xe8, 0x22, 0xab, 0xc3, 0x3e, 0x27, 0xe7, 0xd2,
	0xa8, 0x10, 0x9e, 0xd6, 0x42, 0xd2, 0xdf, 0x54, 0x8f, 0xe7, 0x30, 0xd8, 0xf8, 0xf1, 0xe1, 0xf6,
	0xed, 0x85, 0x9d, 0xc2, 0xa0, 0xa5, 0x28, 0x8a, 0xa2, 0x22, 0xe7, 0x78, 0x32, 0x4a, 0x26, 0xfd,
	0xc5, 0x5e, 0x5b, 0xdf, 0x34, 0x2d, 0x63, 0xd0, 0xb1, 0xa6, 0xf2, 0xfc, 0xdf, 0x28, 0x99, 0xec,
	0x2e, 0xe2, 0x3d, 0xfe, 0x4e, 0x00, 0x36, 0x42, 0xb6, 0x0f, 0x5b, 0x42, 0xf9, 0x72, 0xcd, 0xcf,
	0xa2, 0xa1, 0x09, 0xec, 0x10, 0xb6, 0xc3, 0x26, 0x3e, 0x9e, 0xc6, 0xc7, 0x3d, 0xa1, 0xfc, 0xb3,
	0xa9, 0x3c, 0x3b, 0x80, 0xde, 0x92, 0x6a, 0xfc, 0x20, 0xcd, 0x67, 0x91, 0x74, 0x97, 0x54, 0x3f,
	0x92, 0x6e, 0x4d, 0xfa, 0x9d, 0x9f, 0xc7, 0xba, 0x09, 0xec, 0x08, 0xfa, 0xc1, 0xa4, 0x8d, 0xce,
	0x89, 0x5f, 0x44, 0x12, 0xd4, 0xf3, 0x90, 0xd9, 0x10, 0xfe, 0xcb, 0x22, 0xe3, 0x97, 0xa3, 0x64,
	0xd2, 0x59, 0x84, 0x93, 0x1d, 0x03, 0x28, 0x52, 0xb8, 0xb2, 0x05, 0x4a, 0xcd, 0xaf, 0x9a, 0xbd,
	0x22, 0xf5, 0x6a, 0x8b, 0x3b, 0xcd, 0x4e, 0x60, 0xe7, 0x97, 0x9a, 0x95, 0xe7, 0xd7, 0x11, 0xf7,
	0x1b, 0xfc, 0xb4, 0xf2, 0x59, 0x37, 0x7e, 0xff, 0xf4, 0x27, 0x00, 0x00, 0xff, 0xff, 0xd5, 0x12,
	0x9c, 0xb4, 0x92, 0x01, 0x00, 0x00,
}
