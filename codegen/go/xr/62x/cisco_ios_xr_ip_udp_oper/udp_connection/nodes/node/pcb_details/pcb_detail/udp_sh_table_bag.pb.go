/*
Copyright 2019 Cisco Systems

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: udp_sh_table_bag.proto

package cisco_ios_xr_ip_udp_oper_udp_connection_nodes_node_pcb_details_pcb_detail

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type UdpShTableBag_KEYS struct {
	NodeName             string   `protobuf:"bytes,1,opt,name=node_name,json=nodeName,proto3" json:"node_name,omitempty"`
	PcbAddress           uint32   `protobuf:"varint,2,opt,name=pcb_address,json=pcbAddress,proto3" json:"pcb_address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UdpShTableBag_KEYS) Reset()         { *m = UdpShTableBag_KEYS{} }
func (m *UdpShTableBag_KEYS) String() string { return proto.CompactTextString(m) }
func (*UdpShTableBag_KEYS) ProtoMessage()    {}
func (*UdpShTableBag_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_dbae815597458c95, []int{0}
}

func (m *UdpShTableBag_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UdpShTableBag_KEYS.Unmarshal(m, b)
}
func (m *UdpShTableBag_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UdpShTableBag_KEYS.Marshal(b, m, deterministic)
}
func (m *UdpShTableBag_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UdpShTableBag_KEYS.Merge(m, src)
}
func (m *UdpShTableBag_KEYS) XXX_Size() int {
	return xxx_messageInfo_UdpShTableBag_KEYS.Size(m)
}
func (m *UdpShTableBag_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_UdpShTableBag_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_UdpShTableBag_KEYS proto.InternalMessageInfo

func (m *UdpShTableBag_KEYS) GetNodeName() string {
	if m != nil {
		return m.NodeName
	}
	return ""
}

func (m *UdpShTableBag_KEYS) GetPcbAddress() uint32 {
	if m != nil {
		return m.PcbAddress
	}
	return 0
}

type UdpAddressType struct {
	AfName               string   `protobuf:"bytes,1,opt,name=af_name,json=afName,proto3" json:"af_name,omitempty"`
	Ipv4Address          string   `protobuf:"bytes,2,opt,name=ipv4_address,json=ipv4Address,proto3" json:"ipv4_address,omitempty"`
	Ipv6Address          string   `protobuf:"bytes,3,opt,name=ipv6_address,json=ipv6Address,proto3" json:"ipv6_address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UdpAddressType) Reset()         { *m = UdpAddressType{} }
func (m *UdpAddressType) String() string { return proto.CompactTextString(m) }
func (*UdpAddressType) ProtoMessage()    {}
func (*UdpAddressType) Descriptor() ([]byte, []int) {
	return fileDescriptor_dbae815597458c95, []int{1}
}

func (m *UdpAddressType) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UdpAddressType.Unmarshal(m, b)
}
func (m *UdpAddressType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UdpAddressType.Marshal(b, m, deterministic)
}
func (m *UdpAddressType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UdpAddressType.Merge(m, src)
}
func (m *UdpAddressType) XXX_Size() int {
	return xxx_messageInfo_UdpAddressType.Size(m)
}
func (m *UdpAddressType) XXX_DiscardUnknown() {
	xxx_messageInfo_UdpAddressType.DiscardUnknown(m)
}

var xxx_messageInfo_UdpAddressType proto.InternalMessageInfo

func (m *UdpAddressType) GetAfName() string {
	if m != nil {
		return m.AfName
	}
	return ""
}

func (m *UdpAddressType) GetIpv4Address() string {
	if m != nil {
		return m.Ipv4Address
	}
	return ""
}

func (m *UdpAddressType) GetIpv6Address() string {
	if m != nil {
		return m.Ipv6Address
	}
	return ""
}

type UdpShTableBag struct {
	AfName               string          `protobuf:"bytes,50,opt,name=af_name,json=afName,proto3" json:"af_name,omitempty"`
	LocalProcessId       uint32          `protobuf:"varint,51,opt,name=local_process_id,json=localProcessId,proto3" json:"local_process_id,omitempty"`
	LocalAddress         *UdpAddressType `protobuf:"bytes,52,opt,name=local_address,json=localAddress,proto3" json:"local_address,omitempty"`
	ForeignAddress       *UdpAddressType `protobuf:"bytes,53,opt,name=foreign_address,json=foreignAddress,proto3" json:"foreign_address,omitempty"`
	LocalPort            uint32          `protobuf:"varint,54,opt,name=local_port,json=localPort,proto3" json:"local_port,omitempty"`
	ForeignPort          uint32          `protobuf:"varint,55,opt,name=foreign_port,json=foreignPort,proto3" json:"foreign_port,omitempty"`
	ReceiveQueue         uint32          `protobuf:"varint,56,opt,name=receive_queue,json=receiveQueue,proto3" json:"receive_queue,omitempty"`
	SendQueue            uint32          `protobuf:"varint,57,opt,name=send_queue,json=sendQueue,proto3" json:"send_queue,omitempty"`
	VrfId                uint32          `protobuf:"varint,58,opt,name=vrf_id,json=vrfId,proto3" json:"vrf_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *UdpShTableBag) Reset()         { *m = UdpShTableBag{} }
func (m *UdpShTableBag) String() string { return proto.CompactTextString(m) }
func (*UdpShTableBag) ProtoMessage()    {}
func (*UdpShTableBag) Descriptor() ([]byte, []int) {
	return fileDescriptor_dbae815597458c95, []int{2}
}

func (m *UdpShTableBag) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UdpShTableBag.Unmarshal(m, b)
}
func (m *UdpShTableBag) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UdpShTableBag.Marshal(b, m, deterministic)
}
func (m *UdpShTableBag) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UdpShTableBag.Merge(m, src)
}
func (m *UdpShTableBag) XXX_Size() int {
	return xxx_messageInfo_UdpShTableBag.Size(m)
}
func (m *UdpShTableBag) XXX_DiscardUnknown() {
	xxx_messageInfo_UdpShTableBag.DiscardUnknown(m)
}

var xxx_messageInfo_UdpShTableBag proto.InternalMessageInfo

func (m *UdpShTableBag) GetAfName() string {
	if m != nil {
		return m.AfName
	}
	return ""
}

func (m *UdpShTableBag) GetLocalProcessId() uint32 {
	if m != nil {
		return m.LocalProcessId
	}
	return 0
}

func (m *UdpShTableBag) GetLocalAddress() *UdpAddressType {
	if m != nil {
		return m.LocalAddress
	}
	return nil
}

func (m *UdpShTableBag) GetForeignAddress() *UdpAddressType {
	if m != nil {
		return m.ForeignAddress
	}
	return nil
}

func (m *UdpShTableBag) GetLocalPort() uint32 {
	if m != nil {
		return m.LocalPort
	}
	return 0
}

func (m *UdpShTableBag) GetForeignPort() uint32 {
	if m != nil {
		return m.ForeignPort
	}
	return 0
}

func (m *UdpShTableBag) GetReceiveQueue() uint32 {
	if m != nil {
		return m.ReceiveQueue
	}
	return 0
}

func (m *UdpShTableBag) GetSendQueue() uint32 {
	if m != nil {
		return m.SendQueue
	}
	return 0
}

func (m *UdpShTableBag) GetVrfId() uint32 {
	if m != nil {
		return m.VrfId
	}
	return 0
}

func init() {
	proto.RegisterType((*UdpShTableBag_KEYS)(nil), "cisco_ios_xr_ip_udp_oper.udp_connection.nodes.node.pcb_details.pcb_detail.udp_sh_table_bag_KEYS")
	proto.RegisterType((*UdpAddressType)(nil), "cisco_ios_xr_ip_udp_oper.udp_connection.nodes.node.pcb_details.pcb_detail.udp_address_type")
	proto.RegisterType((*UdpShTableBag)(nil), "cisco_ios_xr_ip_udp_oper.udp_connection.nodes.node.pcb_details.pcb_detail.udp_sh_table_bag")
}

func init() { proto.RegisterFile("udp_sh_table_bag.proto", fileDescriptor_dbae815597458c95) }

var fileDescriptor_dbae815597458c95 = []byte{
	// 391 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x93, 0xcd, 0x6b, 0xdb, 0x30,
	0x18, 0xc6, 0xf1, 0xc2, 0xb2, 0x59, 0x4e, 0xb2, 0x60, 0xc8, 0x66, 0x18, 0x63, 0x59, 0x76, 0xf1,
	0xc9, 0x87, 0x24, 0xcb, 0x3e, 0x6e, 0x3b, 0xec, 0x10, 0x06, 0xa5, 0x75, 0xe9, 0xa1, 0xf4, 0x20,
	0x64, 0xe9, 0x75, 0x2a, 0x70, 0x2c, 0x45, 0x72, 0x4c, 0x7b, 0xeb, 0xa1, 0x7f, 0x76, 0x0f, 0x45,
	0xb2, 0x1c, 0x9c, 0x9c, 0xdb, 0x8b, 0x11, 0x8f, 0x7e, 0x7e, 0x9e, 0xf7, 0x03, 0xa1, 0x8f, 0x7b,
	0x26, 0xb1, 0xbe, 0xc5, 0x15, 0xc9, 0x0a, 0xc0, 0x19, 0xd9, 0x24, 0x52, 0x89, 0x4a, 0x84, 0x6b,
	0xca, 0x35, 0x15, 0x98, 0x0b, 0x8d, 0xef, 0x14, 0xe6, 0x12, 0x1b, 0x4e, 0x48, 0x50, 0x89, 0x39,
	0x50, 0x51, 0x96, 0x40, 0x2b, 0x2e, 0xca, 0xa4, 0x14, 0x0c, 0xb4, 0xfd, 0x26, 0x92, 0x66, 0x98,
	0x41, 0x45, 0x78, 0xa1, 0x3b, 0xe7, 0xd9, 0x15, 0x9a, 0x9c, 0x86, 0xe0, 0xff, 0xff, 0xae, 0x2f,
	0xc3, 0xcf, 0xc8, 0x37, 0xff, 0xe1, 0x92, 0x6c, 0x21, 0xf2, 0xa6, 0x5e, 0xec, 0xa7, 0xef, 0x8d,
	0x70, 0x46, 0xb6, 0x10, 0x7e, 0x45, 0x81, 0xf1, 0x20, 0x8c, 0x29, 0xd0, 0x3a, 0x7a, 0x33, 0xf5,
	0xe2, 0x61, 0x8a, 0x24, 0xcd, 0xfe, 0x36, 0xca, 0x6c, 0x87, 0xc6, 0xc6, 0xd6, 0x01, 0xb8, 0xba,
	0x97, 0x10, 0x7e, 0x42, 0xef, 0x48, 0xde, 0xf5, 0xeb, 0x93, 0xdc, 0xba, 0x7d, 0x43, 0x03, 0x2e,
	0xeb, 0xe5, 0x91, 0x9d, 0x9f, 0x06, 0x46, 0x73, 0x7e, 0x0e, 0x59, 0x1d, 0x90, 0xde, 0x01, 0x59,
	0xb5, 0x91, 0x4f, 0xbd, 0x26, 0xb3, 0xdb, 0x4a, 0x37, 0x73, 0x7e, 0x94, 0x19, 0xa3, 0x71, 0x21,
	0x28, 0x29, 0xb0, 0x54, 0x82, 0x9a, 0x12, 0x39, 0x8b, 0x16, 0xb6, 0x8d, 0x91, 0xd5, 0xcf, 0x1b,
	0x79, 0xcd, 0xc2, 0x07, 0x0f, 0x0d, 0x1b, 0xb4, 0x0d, 0x5f, 0x4e, 0xbd, 0x38, 0x98, 0xdf, 0x24,
	0x2f, 0xb6, 0x85, 0xe4, 0x74, 0x56, 0xe9, 0xc0, 0x26, 0xb6, 0xdd, 0x3f, 0x7a, 0xe8, 0x43, 0x2e,
	0x14, 0xf0, 0x4d, 0x79, 0x28, 0xe2, 0xc7, 0xeb, 0x17, 0x31, 0x72, 0x99, 0x6d, 0x19, 0x5f, 0x10,
	0x72, 0x33, 0x13, 0xaa, 0x8a, 0x56, 0x76, 0x5a, 0x7e, 0x33, 0x2d, 0xa1, 0x2a, 0xb3, 0xa3, 0xb6,
	0x48, 0x0b, 0xfc, 0xb4, 0x40, 0xe0, 0x34, 0x8b, 0x7c, 0x47, 0x43, 0x05, 0x14, 0x78, 0x0d, 0x78,
	0xb7, 0x87, 0x3d, 0x44, 0xbf, 0x2c, 0x33, 0x70, 0xe2, 0x85, 0xd1, 0x4c, 0x8c, 0x86, 0x92, 0x39,
	0xe2, 0x77, 0x13, 0x63, 0x94, 0xe6, 0x7a, 0x82, 0xfa, 0xb5, 0xca, 0xcd, 0xbe, 0xfe, 0xd8, 0xab,
	0xb7, 0xb5, 0xca, 0xd7, 0x2c, 0xeb, 0xdb, 0xa7, 0xb1, 0x78, 0x0e, 0x00, 0x00, 0xff, 0xff, 0x06,
	0x9b, 0xb2, 0x2b, 0x34, 0x03, 0x00, 0x00,
}
