/*
Copyright 2019 Cisco Systems

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: crypto_sam_crl_info.proto

package cisco_ios_xr_crypto_sam_oper_sam_certificate_revocation_list_summary

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type CryptoSamCrlInfo_KEYS struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CryptoSamCrlInfo_KEYS) Reset()         { *m = CryptoSamCrlInfo_KEYS{} }
func (m *CryptoSamCrlInfo_KEYS) String() string { return proto.CompactTextString(m) }
func (*CryptoSamCrlInfo_KEYS) ProtoMessage()    {}
func (*CryptoSamCrlInfo_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_928337a268aff277, []int{0}
}

func (m *CryptoSamCrlInfo_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CryptoSamCrlInfo_KEYS.Unmarshal(m, b)
}
func (m *CryptoSamCrlInfo_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CryptoSamCrlInfo_KEYS.Marshal(b, m, deterministic)
}
func (m *CryptoSamCrlInfo_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CryptoSamCrlInfo_KEYS.Merge(m, src)
}
func (m *CryptoSamCrlInfo_KEYS) XXX_Size() int {
	return xxx_messageInfo_CryptoSamCrlInfo_KEYS.Size(m)
}
func (m *CryptoSamCrlInfo_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_CryptoSamCrlInfo_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_CryptoSamCrlInfo_KEYS proto.InternalMessageInfo

type IssuerInfo struct {
	CommonName           string   `protobuf:"bytes,1,opt,name=common_name,json=commonName,proto3" json:"common_name,omitempty"`
	Organization         string   `protobuf:"bytes,2,opt,name=organization,proto3" json:"organization,omitempty"`
	Country              string   `protobuf:"bytes,3,opt,name=country,proto3" json:"country,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IssuerInfo) Reset()         { *m = IssuerInfo{} }
func (m *IssuerInfo) String() string { return proto.CompactTextString(m) }
func (*IssuerInfo) ProtoMessage()    {}
func (*IssuerInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_928337a268aff277, []int{1}
}

func (m *IssuerInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IssuerInfo.Unmarshal(m, b)
}
func (m *IssuerInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IssuerInfo.Marshal(b, m, deterministic)
}
func (m *IssuerInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IssuerInfo.Merge(m, src)
}
func (m *IssuerInfo) XXX_Size() int {
	return xxx_messageInfo_IssuerInfo.Size(m)
}
func (m *IssuerInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_IssuerInfo.DiscardUnknown(m)
}

var xxx_messageInfo_IssuerInfo proto.InternalMessageInfo

func (m *IssuerInfo) GetCommonName() string {
	if m != nil {
		return m.CommonName
	}
	return ""
}

func (m *IssuerInfo) GetOrganization() string {
	if m != nil {
		return m.Organization
	}
	return ""
}

func (m *IssuerInfo) GetCountry() string {
	if m != nil {
		return m.Country
	}
	return ""
}

type CryptoSamCrlInfo struct {
	CrlIndex             uint32      `protobuf:"varint,50,opt,name=crl_index,json=crlIndex,proto3" json:"crl_index,omitempty"`
	Issuer               *IssuerInfo `protobuf:"bytes,51,opt,name=issuer,proto3" json:"issuer,omitempty"`
	Updates              string      `protobuf:"bytes,52,opt,name=updates,proto3" json:"updates,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *CryptoSamCrlInfo) Reset()         { *m = CryptoSamCrlInfo{} }
func (m *CryptoSamCrlInfo) String() string { return proto.CompactTextString(m) }
func (*CryptoSamCrlInfo) ProtoMessage()    {}
func (*CryptoSamCrlInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_928337a268aff277, []int{2}
}

func (m *CryptoSamCrlInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CryptoSamCrlInfo.Unmarshal(m, b)
}
func (m *CryptoSamCrlInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CryptoSamCrlInfo.Marshal(b, m, deterministic)
}
func (m *CryptoSamCrlInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CryptoSamCrlInfo.Merge(m, src)
}
func (m *CryptoSamCrlInfo) XXX_Size() int {
	return xxx_messageInfo_CryptoSamCrlInfo.Size(m)
}
func (m *CryptoSamCrlInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_CryptoSamCrlInfo.DiscardUnknown(m)
}

var xxx_messageInfo_CryptoSamCrlInfo proto.InternalMessageInfo

func (m *CryptoSamCrlInfo) GetCrlIndex() uint32 {
	if m != nil {
		return m.CrlIndex
	}
	return 0
}

func (m *CryptoSamCrlInfo) GetIssuer() *IssuerInfo {
	if m != nil {
		return m.Issuer
	}
	return nil
}

func (m *CryptoSamCrlInfo) GetUpdates() string {
	if m != nil {
		return m.Updates
	}
	return ""
}

func init() {
	proto.RegisterType((*CryptoSamCrlInfo_KEYS)(nil), "cisco_ios_xr_crypto_sam_oper.sam.certificate_revocation_list_summary.crypto_sam_crl_info_KEYS")
	proto.RegisterType((*IssuerInfo)(nil), "cisco_ios_xr_crypto_sam_oper.sam.certificate_revocation_list_summary.issuer_info")
	proto.RegisterType((*CryptoSamCrlInfo)(nil), "cisco_ios_xr_crypto_sam_oper.sam.certificate_revocation_list_summary.crypto_sam_crl_info")
}

func init() { proto.RegisterFile("crypto_sam_crl_info.proto", fileDescriptor_928337a268aff277) }

var fileDescriptor_928337a268aff277 = []byte{
	// 259 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x91, 0x41, 0x4b, 0xc3, 0x40,
	0x10, 0x85, 0x89, 0x42, 0xb5, 0x1b, 0xbd, 0xac, 0x97, 0x55, 0x0f, 0x86, 0x9c, 0x72, 0xca, 0xa1,
	0xf5, 0x27, 0xe8, 0x41, 0x04, 0xc1, 0x78, 0xf2, 0x34, 0xac, 0xd3, 0xad, 0x0c, 0x64, 0x77, 0xc2,
	0xec, 0x46, 0x1a, 0xff, 0x98, 0x7f, 0x4f, 0x9a, 0x54, 0xa8, 0xd0, 0x63, 0x6f, 0xfb, 0xde, 0x3e,
	0x78, 0xdf, 0xcc, 0xa8, 0x6b, 0x94, 0xa1, 0x4b, 0x0c, 0xd1, 0x7a, 0x40, 0x69, 0x81, 0xc2, 0x9a,
	0xeb, 0x4e, 0x38, 0xb1, 0x7e, 0x40, 0x8a, 0xc8, 0x40, 0x1c, 0x61, 0x23, 0xb0, 0x97, 0xe3, 0xce,
	0x49, 0x1d, 0xad, 0xaf, 0xd1, 0x49, 0xa2, 0x35, 0xa1, 0x4d, 0x0e, 0xc4, 0x7d, 0x31, 0xda, 0x44,
	0x1c, 0xa0, 0xa5, 0x98, 0x20, 0xf6, 0xde, 0x5b, 0x19, 0xca, 0x1b, 0x65, 0x0e, 0x54, 0xc0, 0xf3,
	0xe3, 0xfb, 0x5b, 0xd9, 0xaa, 0x9c, 0x62, 0xec, 0x9d, 0x8c, 0x9e, 0xbe, 0x53, 0x39, 0xb2, 0xf7,
	0x1c, 0x20, 0x58, 0xef, 0x4c, 0x56, 0x64, 0xd5, 0xbc, 0x51, 0x93, 0xf5, 0x62, 0xbd, 0xd3, 0xa5,
	0xba, 0x60, 0xf9, 0xb4, 0x81, 0xbe, 0xc7, 0x22, 0x73, 0x32, 0x26, 0xfe, 0x79, 0xda, 0xa8, 0x33,
	0xe4, 0x3e, 0x24, 0x19, 0xcc, 0xe9, 0xf8, 0xfd, 0x27, 0xcb, 0x9f, 0x4c, 0x5d, 0x1d, 0x40, 0xd1,
	0xb7, 0x6a, 0x3e, 0xbd, 0x57, 0x6e, 0x63, 0x16, 0x45, 0x56, 0x5d, 0x36, 0xe7, 0x28, 0xed, 0xd3,
	0x56, 0x6b, 0x52, 0xb3, 0x09, 0xd1, 0x2c, 0x8b, 0xac, 0xca, 0x17, 0xaf, 0xf5, 0x31, 0xb6, 0x52,
	0xef, 0x8d, 0xdd, 0xec, 0x0a, 0xb6, 0xe4, 0x7d, 0xb7, 0xb2, 0xc9, 0x45, 0x73, 0x3f, 0x91, 0xef,
	0xe4, 0xc7, 0x6c, 0x3c, 0xc8, 0xf2, 0x37, 0x00, 0x00, 0xff, 0xff, 0xd7, 0xc9, 0x87, 0x94, 0xad,
	0x01, 0x00, 0x00,
}
