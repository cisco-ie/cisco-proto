/*
Copyright 2019 Cisco Systems

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: ncs1k_macsec_if_status_t.proto

package cisco_ios_xr_ncs1k_macsec_ea_oper_ncs1k_macsec_oper_ncs1k_macsec_ctrlr_names_ncs1k_macsec_ctrlr_name_ncs1k_status_info

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Ncs1KMacsecIfStatusT_KEYS struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Ncs1KMacsecIfStatusT_KEYS) Reset()         { *m = Ncs1KMacsecIfStatusT_KEYS{} }
func (m *Ncs1KMacsecIfStatusT_KEYS) String() string { return proto.CompactTextString(m) }
func (*Ncs1KMacsecIfStatusT_KEYS) ProtoMessage()    {}
func (*Ncs1KMacsecIfStatusT_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_04bc5b049d0d4333, []int{0}
}

func (m *Ncs1KMacsecIfStatusT_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Ncs1KMacsecIfStatusT_KEYS.Unmarshal(m, b)
}
func (m *Ncs1KMacsecIfStatusT_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Ncs1KMacsecIfStatusT_KEYS.Marshal(b, m, deterministic)
}
func (m *Ncs1KMacsecIfStatusT_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Ncs1KMacsecIfStatusT_KEYS.Merge(m, src)
}
func (m *Ncs1KMacsecIfStatusT_KEYS) XXX_Size() int {
	return xxx_messageInfo_Ncs1KMacsecIfStatusT_KEYS.Size(m)
}
func (m *Ncs1KMacsecIfStatusT_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_Ncs1KMacsecIfStatusT_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_Ncs1KMacsecIfStatusT_KEYS proto.InternalMessageInfo

func (m *Ncs1KMacsecIfStatusT_KEYS) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type Ncs1KAnStatusT struct {
	AssociationNumber       uint32   `protobuf:"varint,1,opt,name=association_number,json=associationNumber,proto3" json:"association_number,omitempty"`
	DeviceAssociationNumber uint32   `protobuf:"varint,2,opt,name=device_association_number,json=deviceAssociationNumber,proto3" json:"device_association_number,omitempty"`
	ShortSecureChannelId    uint32   `protobuf:"varint,3,opt,name=short_secure_channel_id,json=shortSecureChannelId,proto3" json:"short_secure_channel_id,omitempty"`
	ProgrammedTime          string   `protobuf:"bytes,4,opt,name=programmed_time,json=programmedTime,proto3" json:"programmed_time,omitempty"`
	KeyCrc                  string   `protobuf:"bytes,5,opt,name=key_crc,json=keyCrc,proto3" json:"key_crc,omitempty"`
	XpnSalt                 []string `protobuf:"bytes,6,rep,name=xpn_salt,json=xpnSalt,proto3" json:"xpn_salt,omitempty"`
	XXX_NoUnkeyedLiteral    struct{} `json:"-"`
	XXX_unrecognized        []byte   `json:"-"`
	XXX_sizecache           int32    `json:"-"`
}

func (m *Ncs1KAnStatusT) Reset()         { *m = Ncs1KAnStatusT{} }
func (m *Ncs1KAnStatusT) String() string { return proto.CompactTextString(m) }
func (*Ncs1KAnStatusT) ProtoMessage()    {}
func (*Ncs1KAnStatusT) Descriptor() ([]byte, []int) {
	return fileDescriptor_04bc5b049d0d4333, []int{1}
}

func (m *Ncs1KAnStatusT) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Ncs1KAnStatusT.Unmarshal(m, b)
}
func (m *Ncs1KAnStatusT) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Ncs1KAnStatusT.Marshal(b, m, deterministic)
}
func (m *Ncs1KAnStatusT) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Ncs1KAnStatusT.Merge(m, src)
}
func (m *Ncs1KAnStatusT) XXX_Size() int {
	return xxx_messageInfo_Ncs1KAnStatusT.Size(m)
}
func (m *Ncs1KAnStatusT) XXX_DiscardUnknown() {
	xxx_messageInfo_Ncs1KAnStatusT.DiscardUnknown(m)
}

var xxx_messageInfo_Ncs1KAnStatusT proto.InternalMessageInfo

func (m *Ncs1KAnStatusT) GetAssociationNumber() uint32 {
	if m != nil {
		return m.AssociationNumber
	}
	return 0
}

func (m *Ncs1KAnStatusT) GetDeviceAssociationNumber() uint32 {
	if m != nil {
		return m.DeviceAssociationNumber
	}
	return 0
}

func (m *Ncs1KAnStatusT) GetShortSecureChannelId() uint32 {
	if m != nil {
		return m.ShortSecureChannelId
	}
	return 0
}

func (m *Ncs1KAnStatusT) GetProgrammedTime() string {
	if m != nil {
		return m.ProgrammedTime
	}
	return ""
}

func (m *Ncs1KAnStatusT) GetKeyCrc() string {
	if m != nil {
		return m.KeyCrc
	}
	return ""
}

func (m *Ncs1KAnStatusT) GetXpnSalt() []string {
	if m != nil {
		return m.XpnSalt
	}
	return nil
}

type Ncs1KScStatusT struct {
	ProtectionEnabled     bool              `protobuf:"varint,1,opt,name=protection_enabled,json=protectionEnabled,proto3" json:"protection_enabled,omitempty"`
	SecureChannelId       string            `protobuf:"bytes,2,opt,name=secure_channel_id,json=secureChannelId,proto3" json:"secure_channel_id,omitempty"`
	ConfidentialityOffset uint32            `protobuf:"varint,3,opt,name=confidentiality_offset,json=confidentialityOffset,proto3" json:"confidentiality_offset,omitempty"`
	CipherSuite           string            `protobuf:"bytes,4,opt,name=cipher_suite,json=cipherSuite,proto3" json:"cipher_suite,omitempty"`
	InitialPacketNumber   uint64            `protobuf:"varint,5,opt,name=initial_packet_number,json=initialPacketNumber,proto3" json:"initial_packet_number,omitempty"`
	SecureTagLength       uint32            `protobuf:"varint,6,opt,name=secure_tag_length,json=secureTagLength,proto3" json:"secure_tag_length,omitempty"`
	MaxPacketNumber       uint64            `protobuf:"varint,7,opt,name=max_packet_number,json=maxPacketNumber,proto3" json:"max_packet_number,omitempty"`
	RecentPacketNumber    uint64            `protobuf:"varint,8,opt,name=recent_packet_number,json=recentPacketNumber,proto3" json:"recent_packet_number,omitempty"`
	ActiveAssociation     []*Ncs1KAnStatusT `protobuf:"bytes,9,rep,name=active_association,json=activeAssociation,proto3" json:"active_association,omitempty"`
	XXX_NoUnkeyedLiteral  struct{}          `json:"-"`
	XXX_unrecognized      []byte            `json:"-"`
	XXX_sizecache         int32             `json:"-"`
}

func (m *Ncs1KScStatusT) Reset()         { *m = Ncs1KScStatusT{} }
func (m *Ncs1KScStatusT) String() string { return proto.CompactTextString(m) }
func (*Ncs1KScStatusT) ProtoMessage()    {}
func (*Ncs1KScStatusT) Descriptor() ([]byte, []int) {
	return fileDescriptor_04bc5b049d0d4333, []int{2}
}

func (m *Ncs1KScStatusT) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Ncs1KScStatusT.Unmarshal(m, b)
}
func (m *Ncs1KScStatusT) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Ncs1KScStatusT.Marshal(b, m, deterministic)
}
func (m *Ncs1KScStatusT) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Ncs1KScStatusT.Merge(m, src)
}
func (m *Ncs1KScStatusT) XXX_Size() int {
	return xxx_messageInfo_Ncs1KScStatusT.Size(m)
}
func (m *Ncs1KScStatusT) XXX_DiscardUnknown() {
	xxx_messageInfo_Ncs1KScStatusT.DiscardUnknown(m)
}

var xxx_messageInfo_Ncs1KScStatusT proto.InternalMessageInfo

func (m *Ncs1KScStatusT) GetProtectionEnabled() bool {
	if m != nil {
		return m.ProtectionEnabled
	}
	return false
}

func (m *Ncs1KScStatusT) GetSecureChannelId() string {
	if m != nil {
		return m.SecureChannelId
	}
	return ""
}

func (m *Ncs1KScStatusT) GetConfidentialityOffset() uint32 {
	if m != nil {
		return m.ConfidentialityOffset
	}
	return 0
}

func (m *Ncs1KScStatusT) GetCipherSuite() string {
	if m != nil {
		return m.CipherSuite
	}
	return ""
}

func (m *Ncs1KScStatusT) GetInitialPacketNumber() uint64 {
	if m != nil {
		return m.InitialPacketNumber
	}
	return 0
}

func (m *Ncs1KScStatusT) GetSecureTagLength() uint32 {
	if m != nil {
		return m.SecureTagLength
	}
	return 0
}

func (m *Ncs1KScStatusT) GetMaxPacketNumber() uint64 {
	if m != nil {
		return m.MaxPacketNumber
	}
	return 0
}

func (m *Ncs1KScStatusT) GetRecentPacketNumber() uint64 {
	if m != nil {
		return m.RecentPacketNumber
	}
	return 0
}

func (m *Ncs1KScStatusT) GetActiveAssociation() []*Ncs1KAnStatusT {
	if m != nil {
		return m.ActiveAssociation
	}
	return nil
}

type Ncs1KMacsecIfStatusT struct {
	ReplayWindowSize     uint32          `protobuf:"varint,50,opt,name=replay_window_size,json=replayWindowSize,proto3" json:"replay_window_size,omitempty"`
	MustSecure           bool            `protobuf:"varint,51,opt,name=must_secure,json=mustSecure,proto3" json:"must_secure,omitempty"`
	EncryptScStatus      *Ncs1KScStatusT `protobuf:"bytes,52,opt,name=encrypt_sc_status,json=encryptScStatus,proto3" json:"encrypt_sc_status,omitempty"`
	DecryptScStatus      *Ncs1KScStatusT `protobuf:"bytes,53,opt,name=decrypt_sc_status,json=decryptScStatus,proto3" json:"decrypt_sc_status,omitempty"`
	SecureMode           uint32          `protobuf:"varint,54,opt,name=secure_mode,json=secureMode,proto3" json:"secure_mode,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *Ncs1KMacsecIfStatusT) Reset()         { *m = Ncs1KMacsecIfStatusT{} }
func (m *Ncs1KMacsecIfStatusT) String() string { return proto.CompactTextString(m) }
func (*Ncs1KMacsecIfStatusT) ProtoMessage()    {}
func (*Ncs1KMacsecIfStatusT) Descriptor() ([]byte, []int) {
	return fileDescriptor_04bc5b049d0d4333, []int{3}
}

func (m *Ncs1KMacsecIfStatusT) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Ncs1KMacsecIfStatusT.Unmarshal(m, b)
}
func (m *Ncs1KMacsecIfStatusT) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Ncs1KMacsecIfStatusT.Marshal(b, m, deterministic)
}
func (m *Ncs1KMacsecIfStatusT) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Ncs1KMacsecIfStatusT.Merge(m, src)
}
func (m *Ncs1KMacsecIfStatusT) XXX_Size() int {
	return xxx_messageInfo_Ncs1KMacsecIfStatusT.Size(m)
}
func (m *Ncs1KMacsecIfStatusT) XXX_DiscardUnknown() {
	xxx_messageInfo_Ncs1KMacsecIfStatusT.DiscardUnknown(m)
}

var xxx_messageInfo_Ncs1KMacsecIfStatusT proto.InternalMessageInfo

func (m *Ncs1KMacsecIfStatusT) GetReplayWindowSize() uint32 {
	if m != nil {
		return m.ReplayWindowSize
	}
	return 0
}

func (m *Ncs1KMacsecIfStatusT) GetMustSecure() bool {
	if m != nil {
		return m.MustSecure
	}
	return false
}

func (m *Ncs1KMacsecIfStatusT) GetEncryptScStatus() *Ncs1KScStatusT {
	if m != nil {
		return m.EncryptScStatus
	}
	return nil
}

func (m *Ncs1KMacsecIfStatusT) GetDecryptScStatus() *Ncs1KScStatusT {
	if m != nil {
		return m.DecryptScStatus
	}
	return nil
}

func (m *Ncs1KMacsecIfStatusT) GetSecureMode() uint32 {
	if m != nil {
		return m.SecureMode
	}
	return 0
}

func init() {
	proto.RegisterType((*Ncs1KMacsecIfStatusT_KEYS)(nil), "cisco_ios_xr_ncs1k_macsec_ea_oper.ncs1k_macsec_oper.ncs1k_macsec_ctrlr_names.ncs1k_macsec_ctrlr_name.ncs1k_status_info.ncs1k_macsec_if_status_t_KEYS")
	proto.RegisterType((*Ncs1KAnStatusT)(nil), "cisco_ios_xr_ncs1k_macsec_ea_oper.ncs1k_macsec_oper.ncs1k_macsec_ctrlr_names.ncs1k_macsec_ctrlr_name.ncs1k_status_info.ncs1k_an_status_t")
	proto.RegisterType((*Ncs1KScStatusT)(nil), "cisco_ios_xr_ncs1k_macsec_ea_oper.ncs1k_macsec_oper.ncs1k_macsec_ctrlr_names.ncs1k_macsec_ctrlr_name.ncs1k_status_info.ncs1k_sc_status_t")
	proto.RegisterType((*Ncs1KMacsecIfStatusT)(nil), "cisco_ios_xr_ncs1k_macsec_ea_oper.ncs1k_macsec_oper.ncs1k_macsec_ctrlr_names.ncs1k_macsec_ctrlr_name.ncs1k_status_info.ncs1k_macsec_if_status_t")
}

func init() { proto.RegisterFile("ncs1k_macsec_if_status_t.proto", fileDescriptor_04bc5b049d0d4333) }

var fileDescriptor_04bc5b049d0d4333 = []byte{
	// 611 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xcc, 0x55, 0x3d, 0x6f, 0x13, 0x41,
	0x10, 0x95, 0x63, 0xe3, 0x24, 0x6b, 0xc0, 0x78, 0x49, 0xc8, 0xa5, 0x80, 0x18, 0x37, 0x44, 0x08,
	0x2c, 0x48, 0x08, 0x05, 0x1d, 0x8a, 0x52, 0x20, 0x3e, 0x75, 0x17, 0x09, 0x51, 0x8d, 0x36, 0x7b,
	0x63, 0x7b, 0xe5, 0xbb, 0xdd, 0xd3, 0xee, 0x3a, 0xb1, 0xf3, 0x0f, 0x68, 0xf9, 0x31, 0x48, 0xb4,
	0xfc, 0x2e, 0x0a, 0x74, 0x73, 0xe7, 0x38, 0xb6, 0x71, 0x4d, 0x3a, 0xeb, 0xbd, 0x79, 0xeb, 0x37,
	0x6f, 0x66, 0x74, 0xec, 0x91, 0x96, 0xee, 0xe5, 0x10, 0x52, 0x21, 0x1d, 0x4a, 0x50, 0x3d, 0x70,
	0x5e, 0xf8, 0x91, 0x03, 0xdf, 0xcd, 0xac, 0xf1, 0x86, 0x9f, 0x4b, 0xe5, 0xa4, 0x01, 0x65, 0x1c,
	0x8c, 0x2d, 0xcc, 0x15, 0xa3, 0x00, 0x93, 0xa1, 0xed, 0xce, 0x81, 0xcb, 0x88, 0xf4, 0x36, 0xb1,
	0xa0, 0x45, 0x8a, 0x6e, 0x15, 0x51, 0xe2, 0xe5, 0x5f, 0x2b, 0xdd, 0x33, 0x9d, 0x43, 0xf6, 0x70,
	0x95, 0x33, 0x78, 0x7f, 0xf2, 0x2d, 0xe2, 0x9c, 0xd5, 0x72, 0x69, 0x50, 0x69, 0x57, 0xf6, 0x37,
	0x43, 0xfa, 0xdd, 0xf9, 0xb1, 0xc6, 0x5a, 0x85, 0x4a, 0xe8, 0xab, 0x72, 0xfe, 0x9c, 0x71, 0xe1,
	0x9c, 0x91, 0x4a, 0x78, 0x65, 0x34, 0xe8, 0x51, 0x7a, 0x86, 0x96, 0x74, 0x77, 0xc2, 0xd6, 0x35,
	0xe6, 0x13, 0x11, 0xfc, 0x0d, 0xdb, 0x8d, 0xf1, 0x5c, 0x49, 0x84, 0x7f, 0xa8, 0xd6, 0x48, 0xb5,
	0x53, 0x14, 0xbc, 0x5d, 0xd2, 0x1e, 0xb1, 0x1d, 0x37, 0x30, 0xd6, 0x83, 0x43, 0x39, 0xb2, 0x08,
	0x72, 0x20, 0xb4, 0xc6, 0x04, 0x54, 0x1c, 0x54, 0x49, 0xb9, 0x45, 0x74, 0x44, 0xec, 0x71, 0x41,
	0xbe, 0x8b, 0xf9, 0x13, 0xd6, 0xcc, 0xac, 0xe9, 0x5b, 0x91, 0xa6, 0x18, 0x83, 0x57, 0x29, 0x06,
	0x35, 0x6a, 0xeb, 0xee, 0x0c, 0x3e, 0x55, 0x29, 0xf2, 0x1d, 0xb6, 0x3e, 0xc4, 0x09, 0x48, 0x2b,
	0x83, 0x5b, 0x54, 0x50, 0x1f, 0xe2, 0xe4, 0xd8, 0x4a, 0xbe, 0xcb, 0x36, 0xc6, 0x99, 0x06, 0x27,
	0x12, 0x1f, 0xd4, 0xdb, 0xd5, 0xfd, 0xcd, 0x70, 0x7d, 0x9c, 0xe9, 0x48, 0x24, 0xbe, 0xf3, 0xbb,
	0x36, 0x0d, 0xc5, 0xc9, 0xb9, 0x50, 0xf2, 0x01, 0xa3, 0xa4, 0xee, 0x50, 0x8b, 0xb3, 0x04, 0x63,
	0x0a, 0x65, 0x23, 0x6c, 0xcd, 0x98, 0x93, 0x82, 0xe0, 0x4f, 0x59, 0x6b, 0xb9, 0xa5, 0x35, 0xb2,
	0xd0, 0x74, 0x0b, 0xdd, 0x1c, 0xb1, 0x07, 0xd2, 0xe8, 0x9e, 0x8a, 0x51, 0x7b, 0x25, 0x12, 0xe5,
	0x27, 0x60, 0x7a, 0x3d, 0x87, 0xbe, 0xcc, 0x60, 0x7b, 0x81, 0xfd, 0x4c, 0x24, 0x7f, 0xcc, 0x6e,
	0x4b, 0x95, 0x0d, 0xd0, 0x82, 0x1b, 0x29, 0x3f, 0x4d, 0xa0, 0x51, 0x60, 0x51, 0x0e, 0xf1, 0x03,
	0xb6, 0xad, 0xb4, 0xca, 0x65, 0x90, 0x09, 0x39, 0x44, 0x3f, 0x1d, 0x4b, 0x1e, 0x46, 0x2d, 0xbc,
	0x5f, 0x92, 0x5f, 0x88, 0x2b, 0x47, 0x32, 0x73, 0xee, 0x45, 0x1f, 0x12, 0xd4, 0x7d, 0x3f, 0x08,
	0xea, 0x64, 0xa4, 0x74, 0x7e, 0x2a, 0xfa, 0x1f, 0x08, 0xce, 0x6b, 0x53, 0x31, 0x5e, 0x78, 0x7b,
	0x9d, 0xde, 0x6e, 0xa6, 0x62, 0x3c, 0xf7, 0xee, 0x0b, 0xb6, 0x65, 0x51, 0xa2, 0xf6, 0x0b, 0xe5,
	0x1b, 0x54, 0xce, 0x0b, 0x6e, 0x4e, 0xf1, 0xab, 0xc2, 0xb8, 0x90, 0x5e, 0x9d, 0xcf, 0x6d, 0x56,
	0xb0, 0xd9, 0xae, 0xee, 0x37, 0x0e, 0xbe, 0x57, 0xba, 0xff, 0xe7, 0xd2, 0xba, 0x4b, 0x07, 0x13,
	0xb6, 0x0a, 0x97, 0xd7, 0xd6, 0xbb, 0xf3, 0xa7, 0xca, 0x82, 0x55, 0xf7, 0xc8, 0x9f, 0x31, 0x6e,
	0x31, 0x4b, 0xc4, 0x04, 0x2e, 0x94, 0x8e, 0xcd, 0x05, 0x38, 0x75, 0x89, 0xc1, 0x01, 0x65, 0x7c,
	0xaf, 0x60, 0xbe, 0x12, 0x11, 0xa9, 0x4b, 0xe4, 0x7b, 0xac, 0x91, 0x8e, 0xdc, 0xf4, 0x44, 0x82,
	0x43, 0x5a, 0x39, 0x96, 0x43, 0xc5, 0x59, 0xf0, 0x9f, 0x15, 0xd6, 0x42, 0x2d, 0xed, 0x24, 0xf3,
	0xb3, 0x95, 0x0d, 0x5e, 0xb5, 0x2b, 0x37, 0x20, 0xa6, 0x6b, 0x27, 0x14, 0x36, 0x4b, 0x93, 0x91,
	0x8c, 0x08, 0x22, 0xe3, 0x31, 0x2e, 0x1a, 0x3f, 0xba, 0x79, 0xc6, 0x4b, 0x93, 0x57, 0xc6, 0xf7,
	0x58, 0xa3, 0xbc, 0x91, 0xd4, 0xc4, 0x18, 0xbc, 0xa6, 0xc9, 0xb1, 0x02, 0xfa, 0x68, 0x62, 0x3c,
	0xab, 0xd3, 0xc7, 0xe0, 0xf0, 0x6f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x26, 0xcb, 0x63, 0x96, 0x2e,
	0x06, 0x00, 0x00,
}
