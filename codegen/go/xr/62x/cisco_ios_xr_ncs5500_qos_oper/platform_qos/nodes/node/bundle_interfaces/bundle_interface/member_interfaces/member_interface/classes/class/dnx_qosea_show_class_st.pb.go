/*
Copyright 2019 Cisco Systems

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: dnx_qosea_show_class_st.proto

package cisco_ios_xr_ncs5500_qos_oper_platform_qos_nodes_node_bundle_interfaces_bundle_interface_member_interfaces_member_interface_classes_class

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type DnxQoseaShowClassSt_KEYS struct {
	NodeName             string   `protobuf:"bytes,1,opt,name=node_name,json=nodeName,proto3" json:"node_name,omitempty"`
	InterfaceName        string   `protobuf:"bytes,2,opt,name=interface_name,json=interfaceName,proto3" json:"interface_name,omitempty"`
	NpuId                uint32   `protobuf:"varint,3,opt,name=npu_id,json=npuId,proto3" json:"npu_id,omitempty"`
	QosDirection         string   `protobuf:"bytes,4,opt,name=qos_direction,json=qosDirection,proto3" json:"qos_direction,omitempty"`
	InterfaceName_1      string   `protobuf:"bytes,5,opt,name=interface_name_1,json=interfaceName1,proto3" json:"interface_name_1,omitempty"`
	LevelOneClassName    string   `protobuf:"bytes,6,opt,name=level_one_class_name,json=levelOneClassName,proto3" json:"level_one_class_name,omitempty"`
	LevelTwoClassName    string   `protobuf:"bytes,7,opt,name=level_two_class_name,json=levelTwoClassName,proto3" json:"level_two_class_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DnxQoseaShowClassSt_KEYS) Reset()         { *m = DnxQoseaShowClassSt_KEYS{} }
func (m *DnxQoseaShowClassSt_KEYS) String() string { return proto.CompactTextString(m) }
func (*DnxQoseaShowClassSt_KEYS) ProtoMessage()    {}
func (*DnxQoseaShowClassSt_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_4a790e8a59d1ee85, []int{0}
}

func (m *DnxQoseaShowClassSt_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DnxQoseaShowClassSt_KEYS.Unmarshal(m, b)
}
func (m *DnxQoseaShowClassSt_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DnxQoseaShowClassSt_KEYS.Marshal(b, m, deterministic)
}
func (m *DnxQoseaShowClassSt_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DnxQoseaShowClassSt_KEYS.Merge(m, src)
}
func (m *DnxQoseaShowClassSt_KEYS) XXX_Size() int {
	return xxx_messageInfo_DnxQoseaShowClassSt_KEYS.Size(m)
}
func (m *DnxQoseaShowClassSt_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_DnxQoseaShowClassSt_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_DnxQoseaShowClassSt_KEYS proto.InternalMessageInfo

func (m *DnxQoseaShowClassSt_KEYS) GetNodeName() string {
	if m != nil {
		return m.NodeName
	}
	return ""
}

func (m *DnxQoseaShowClassSt_KEYS) GetInterfaceName() string {
	if m != nil {
		return m.InterfaceName
	}
	return ""
}

func (m *DnxQoseaShowClassSt_KEYS) GetNpuId() uint32 {
	if m != nil {
		return m.NpuId
	}
	return 0
}

func (m *DnxQoseaShowClassSt_KEYS) GetQosDirection() string {
	if m != nil {
		return m.QosDirection
	}
	return ""
}

func (m *DnxQoseaShowClassSt_KEYS) GetInterfaceName_1() string {
	if m != nil {
		return m.InterfaceName_1
	}
	return ""
}

func (m *DnxQoseaShowClassSt_KEYS) GetLevelOneClassName() string {
	if m != nil {
		return m.LevelOneClassName
	}
	return ""
}

func (m *DnxQoseaShowClassSt_KEYS) GetLevelTwoClassName() string {
	if m != nil {
		return m.LevelTwoClassName
	}
	return ""
}

type DnxQoseaShowMarkSt_ struct {
	MarkType             string   `protobuf:"bytes,1,opt,name=mark_type,json=markType,proto3" json:"mark_type,omitempty"`
	MarkValue            uint32   `protobuf:"varint,2,opt,name=mark_value,json=markValue,proto3" json:"mark_value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DnxQoseaShowMarkSt_) Reset()         { *m = DnxQoseaShowMarkSt_{} }
func (m *DnxQoseaShowMarkSt_) String() string { return proto.CompactTextString(m) }
func (*DnxQoseaShowMarkSt_) ProtoMessage()    {}
func (*DnxQoseaShowMarkSt_) Descriptor() ([]byte, []int) {
	return fileDescriptor_4a790e8a59d1ee85, []int{1}
}

func (m *DnxQoseaShowMarkSt_) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DnxQoseaShowMarkSt_.Unmarshal(m, b)
}
func (m *DnxQoseaShowMarkSt_) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DnxQoseaShowMarkSt_.Marshal(b, m, deterministic)
}
func (m *DnxQoseaShowMarkSt_) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DnxQoseaShowMarkSt_.Merge(m, src)
}
func (m *DnxQoseaShowMarkSt_) XXX_Size() int {
	return xxx_messageInfo_DnxQoseaShowMarkSt_.Size(m)
}
func (m *DnxQoseaShowMarkSt_) XXX_DiscardUnknown() {
	xxx_messageInfo_DnxQoseaShowMarkSt_.DiscardUnknown(m)
}

var xxx_messageInfo_DnxQoseaShowMarkSt_ proto.InternalMessageInfo

func (m *DnxQoseaShowMarkSt_) GetMarkType() string {
	if m != nil {
		return m.MarkType
	}
	return ""
}

func (m *DnxQoseaShowMarkSt_) GetMarkValue() uint32 {
	if m != nil {
		return m.MarkValue
	}
	return 0
}

type DnxQoseaShowPolicyParamSt_ struct {
	PolicyValue          uint32   `protobuf:"varint,1,opt,name=policy_value,json=policyValue,proto3" json:"policy_value,omitempty"`
	PolicyUnit           string   `protobuf:"bytes,2,opt,name=policy_unit,json=policyUnit,proto3" json:"policy_unit,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DnxQoseaShowPolicyParamSt_) Reset()         { *m = DnxQoseaShowPolicyParamSt_{} }
func (m *DnxQoseaShowPolicyParamSt_) String() string { return proto.CompactTextString(m) }
func (*DnxQoseaShowPolicyParamSt_) ProtoMessage()    {}
func (*DnxQoseaShowPolicyParamSt_) Descriptor() ([]byte, []int) {
	return fileDescriptor_4a790e8a59d1ee85, []int{2}
}

func (m *DnxQoseaShowPolicyParamSt_) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DnxQoseaShowPolicyParamSt_.Unmarshal(m, b)
}
func (m *DnxQoseaShowPolicyParamSt_) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DnxQoseaShowPolicyParamSt_.Marshal(b, m, deterministic)
}
func (m *DnxQoseaShowPolicyParamSt_) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DnxQoseaShowPolicyParamSt_.Merge(m, src)
}
func (m *DnxQoseaShowPolicyParamSt_) XXX_Size() int {
	return xxx_messageInfo_DnxQoseaShowPolicyParamSt_.Size(m)
}
func (m *DnxQoseaShowPolicyParamSt_) XXX_DiscardUnknown() {
	xxx_messageInfo_DnxQoseaShowPolicyParamSt_.DiscardUnknown(m)
}

var xxx_messageInfo_DnxQoseaShowPolicyParamSt_ proto.InternalMessageInfo

func (m *DnxQoseaShowPolicyParamSt_) GetPolicyValue() uint32 {
	if m != nil {
		return m.PolicyValue
	}
	return 0
}

func (m *DnxQoseaShowPolicyParamSt_) GetPolicyUnit() string {
	if m != nil {
		return m.PolicyUnit
	}
	return ""
}

type DnxQoseaShowPolActionSt_ struct {
	ActionType           string                 `protobuf:"bytes,1,opt,name=action_type,json=actionType,proto3" json:"action_type,omitempty"`
	Mark                 []*DnxQoseaShowMarkSt_ `protobuf:"bytes,2,rep,name=mark,proto3" json:"mark,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *DnxQoseaShowPolActionSt_) Reset()         { *m = DnxQoseaShowPolActionSt_{} }
func (m *DnxQoseaShowPolActionSt_) String() string { return proto.CompactTextString(m) }
func (*DnxQoseaShowPolActionSt_) ProtoMessage()    {}
func (*DnxQoseaShowPolActionSt_) Descriptor() ([]byte, []int) {
	return fileDescriptor_4a790e8a59d1ee85, []int{3}
}

func (m *DnxQoseaShowPolActionSt_) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DnxQoseaShowPolActionSt_.Unmarshal(m, b)
}
func (m *DnxQoseaShowPolActionSt_) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DnxQoseaShowPolActionSt_.Marshal(b, m, deterministic)
}
func (m *DnxQoseaShowPolActionSt_) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DnxQoseaShowPolActionSt_.Merge(m, src)
}
func (m *DnxQoseaShowPolActionSt_) XXX_Size() int {
	return xxx_messageInfo_DnxQoseaShowPolActionSt_.Size(m)
}
func (m *DnxQoseaShowPolActionSt_) XXX_DiscardUnknown() {
	xxx_messageInfo_DnxQoseaShowPolActionSt_.DiscardUnknown(m)
}

var xxx_messageInfo_DnxQoseaShowPolActionSt_ proto.InternalMessageInfo

func (m *DnxQoseaShowPolActionSt_) GetActionType() string {
	if m != nil {
		return m.ActionType
	}
	return ""
}

func (m *DnxQoseaShowPolActionSt_) GetMark() []*DnxQoseaShowMarkSt_ {
	if m != nil {
		return m.Mark
	}
	return nil
}

type DnxQoseaShowUint8RngSt_ struct {
	RangeStart           uint32   `protobuf:"varint,1,opt,name=range_start,json=rangeStart,proto3" json:"range_start,omitempty"`
	RangeEnd             uint32   `protobuf:"varint,2,opt,name=range_end,json=rangeEnd,proto3" json:"range_end,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DnxQoseaShowUint8RngSt_) Reset()         { *m = DnxQoseaShowUint8RngSt_{} }
func (m *DnxQoseaShowUint8RngSt_) String() string { return proto.CompactTextString(m) }
func (*DnxQoseaShowUint8RngSt_) ProtoMessage()    {}
func (*DnxQoseaShowUint8RngSt_) Descriptor() ([]byte, []int) {
	return fileDescriptor_4a790e8a59d1ee85, []int{4}
}

func (m *DnxQoseaShowUint8RngSt_) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DnxQoseaShowUint8RngSt_.Unmarshal(m, b)
}
func (m *DnxQoseaShowUint8RngSt_) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DnxQoseaShowUint8RngSt_.Marshal(b, m, deterministic)
}
func (m *DnxQoseaShowUint8RngSt_) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DnxQoseaShowUint8RngSt_.Merge(m, src)
}
func (m *DnxQoseaShowUint8RngSt_) XXX_Size() int {
	return xxx_messageInfo_DnxQoseaShowUint8RngSt_.Size(m)
}
func (m *DnxQoseaShowUint8RngSt_) XXX_DiscardUnknown() {
	xxx_messageInfo_DnxQoseaShowUint8RngSt_.DiscardUnknown(m)
}

var xxx_messageInfo_DnxQoseaShowUint8RngSt_ proto.InternalMessageInfo

func (m *DnxQoseaShowUint8RngSt_) GetRangeStart() uint32 {
	if m != nil {
		return m.RangeStart
	}
	return 0
}

func (m *DnxQoseaShowUint8RngSt_) GetRangeEnd() uint32 {
	if m != nil {
		return m.RangeEnd
	}
	return 0
}

type DnxQoseaShowWredParamsSt_ struct {
	WredMatchType             string                      `protobuf:"bytes,1,opt,name=wred_match_type,json=wredMatchType,proto3" json:"wred_match_type,omitempty"`
	WredMatchValue            []*DnxQoseaShowUint8RngSt_  `protobuf:"bytes,2,rep,name=wred_match_value,json=wredMatchValue,proto3" json:"wred_match_value,omitempty"`
	ConfigMinThreshold        *DnxQoseaShowPolicyParamSt_ `protobuf:"bytes,3,opt,name=config_min_threshold,json=configMinThreshold,proto3" json:"config_min_threshold,omitempty"`
	HardwareMinThresholdBytes uint32                      `protobuf:"varint,4,opt,name=hardware_min_threshold_bytes,json=hardwareMinThresholdBytes,proto3" json:"hardware_min_threshold_bytes,omitempty"`
	ConfigMaxThreshold        *DnxQoseaShowPolicyParamSt_ `protobuf:"bytes,5,opt,name=config_max_threshold,json=configMaxThreshold,proto3" json:"config_max_threshold,omitempty"`
	HardwareMaxThresholdBytes uint32                      `protobuf:"varint,6,opt,name=hardware_max_threshold_bytes,json=hardwareMaxThresholdBytes,proto3" json:"hardware_max_threshold_bytes,omitempty"`
	FirstSegment              uint32                      `protobuf:"varint,7,opt,name=first_segment,json=firstSegment,proto3" json:"first_segment,omitempty"`
	SegmentSize               uint32                      `protobuf:"varint,8,opt,name=segment_size,json=segmentSize,proto3" json:"segment_size,omitempty"`
	XXX_NoUnkeyedLiteral      struct{}                    `json:"-"`
	XXX_unrecognized          []byte                      `json:"-"`
	XXX_sizecache             int32                       `json:"-"`
}

func (m *DnxQoseaShowWredParamsSt_) Reset()         { *m = DnxQoseaShowWredParamsSt_{} }
func (m *DnxQoseaShowWredParamsSt_) String() string { return proto.CompactTextString(m) }
func (*DnxQoseaShowWredParamsSt_) ProtoMessage()    {}
func (*DnxQoseaShowWredParamsSt_) Descriptor() ([]byte, []int) {
	return fileDescriptor_4a790e8a59d1ee85, []int{5}
}

func (m *DnxQoseaShowWredParamsSt_) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DnxQoseaShowWredParamsSt_.Unmarshal(m, b)
}
func (m *DnxQoseaShowWredParamsSt_) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DnxQoseaShowWredParamsSt_.Marshal(b, m, deterministic)
}
func (m *DnxQoseaShowWredParamsSt_) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DnxQoseaShowWredParamsSt_.Merge(m, src)
}
func (m *DnxQoseaShowWredParamsSt_) XXX_Size() int {
	return xxx_messageInfo_DnxQoseaShowWredParamsSt_.Size(m)
}
func (m *DnxQoseaShowWredParamsSt_) XXX_DiscardUnknown() {
	xxx_messageInfo_DnxQoseaShowWredParamsSt_.DiscardUnknown(m)
}

var xxx_messageInfo_DnxQoseaShowWredParamsSt_ proto.InternalMessageInfo

func (m *DnxQoseaShowWredParamsSt_) GetWredMatchType() string {
	if m != nil {
		return m.WredMatchType
	}
	return ""
}

func (m *DnxQoseaShowWredParamsSt_) GetWredMatchValue() []*DnxQoseaShowUint8RngSt_ {
	if m != nil {
		return m.WredMatchValue
	}
	return nil
}

func (m *DnxQoseaShowWredParamsSt_) GetConfigMinThreshold() *DnxQoseaShowPolicyParamSt_ {
	if m != nil {
		return m.ConfigMinThreshold
	}
	return nil
}

func (m *DnxQoseaShowWredParamsSt_) GetHardwareMinThresholdBytes() uint32 {
	if m != nil {
		return m.HardwareMinThresholdBytes
	}
	return 0
}

func (m *DnxQoseaShowWredParamsSt_) GetConfigMaxThreshold() *DnxQoseaShowPolicyParamSt_ {
	if m != nil {
		return m.ConfigMaxThreshold
	}
	return nil
}

func (m *DnxQoseaShowWredParamsSt_) GetHardwareMaxThresholdBytes() uint32 {
	if m != nil {
		return m.HardwareMaxThresholdBytes
	}
	return 0
}

func (m *DnxQoseaShowWredParamsSt_) GetFirstSegment() uint32 {
	if m != nil {
		return m.FirstSegment
	}
	return 0
}

func (m *DnxQoseaShowWredParamsSt_) GetSegmentSize() uint32 {
	if m != nil {
		return m.SegmentSize
	}
	return 0
}

type DnxQoseaShowClassSt struct {
	ClassLevel                       string                       `protobuf:"bytes,50,opt,name=class_level,json=classLevel,proto3" json:"class_level,omitempty"`
	IpMark                           []*DnxQoseaShowMarkSt_       `protobuf:"bytes,51,rep,name=ip_mark,json=ipMark,proto3" json:"ip_mark,omitempty"`
	CommonMark                       []*DnxQoseaShowMarkSt_       `protobuf:"bytes,52,rep,name=common_mark,json=commonMark,proto3" json:"common_mark,omitempty"`
	MplsMark                         []*DnxQoseaShowMarkSt_       `protobuf:"bytes,53,rep,name=mpls_mark,json=mplsMark,proto3" json:"mpls_mark,omitempty"`
	EgressQueueId                    int32                        `protobuf:"zigzag32,54,opt,name=egress_queue_id,json=egressQueueId,proto3" json:"egress_queue_id,omitempty"`
	QueueType                        string                       `protobuf:"bytes,55,opt,name=queue_type,json=queueType,proto3" json:"queue_type,omitempty"`
	PriorityLevel                    string                       `protobuf:"bytes,56,opt,name=priority_level,json=priorityLevel,proto3" json:"priority_level,omitempty"`
	ConfigMaxRate                    *DnxQoseaShowPolicyParamSt_  `protobuf:"bytes,57,opt,name=config_max_rate,json=configMaxRate,proto3" json:"config_max_rate,omitempty"`
	HardwareMaxRateKbps              uint32                       `protobuf:"varint,58,opt,name=hardware_max_rate_kbps,json=hardwareMaxRateKbps,proto3" json:"hardware_max_rate_kbps,omitempty"`
	ConfigMinRate                    *DnxQoseaShowPolicyParamSt_  `protobuf:"bytes,59,opt,name=config_min_rate,json=configMinRate,proto3" json:"config_min_rate,omitempty"`
	HardwareMinRateKbps              uint32                       `protobuf:"varint,60,opt,name=hardware_min_rate_kbps,json=hardwareMinRateKbps,proto3" json:"hardware_min_rate_kbps,omitempty"`
	ConfigExcessBandwidthPercent     uint32                       `protobuf:"varint,61,opt,name=config_excess_bandwidth_percent,json=configExcessBandwidthPercent,proto3" json:"config_excess_bandwidth_percent,omitempty"`
	ConfigExcessBandwidthUnit        uint32                       `protobuf:"varint,62,opt,name=config_excess_bandwidth_unit,json=configExcessBandwidthUnit,proto3" json:"config_excess_bandwidth_unit,omitempty"`
	HardwareExcessBandwidthWeight    uint32                       `protobuf:"varint,63,opt,name=hardware_excess_bandwidth_weight,json=hardwareExcessBandwidthWeight,proto3" json:"hardware_excess_bandwidth_weight,omitempty"`
	NetworkMinBandwidthKbps          uint32                       `protobuf:"varint,64,opt,name=network_min_bandwidth_kbps,json=networkMinBandwidthKbps,proto3" json:"network_min_bandwidth_kbps,omitempty"`
	ConfigQueueLimit                 *DnxQoseaShowPolicyParamSt_  `protobuf:"bytes,65,opt,name=config_queue_limit,json=configQueueLimit,proto3" json:"config_queue_limit,omitempty"`
	HardwareQueueLimitBytes          uint64                       `protobuf:"varint,66,opt,name=hardware_queue_limit_bytes,json=hardwareQueueLimitBytes,proto3" json:"hardware_queue_limit_bytes,omitempty"`
	HardwareQueueLimitMicroseconds   uint64                       `protobuf:"varint,67,opt,name=hardware_queue_limit_microseconds,json=hardwareQueueLimitMicroseconds,proto3" json:"hardware_queue_limit_microseconds,omitempty"`
	PolicerBucketId                  uint32                       `protobuf:"varint,68,opt,name=policer_bucket_id,json=policerBucketId,proto3" json:"policer_bucket_id,omitempty"`
	PolicerStatsHandle               uint64                       `protobuf:"varint,69,opt,name=policer_stats_handle,json=policerStatsHandle,proto3" json:"policer_stats_handle,omitempty"`
	ConfigPolicerAverageRate         *DnxQoseaShowPolicyParamSt_  `protobuf:"bytes,70,opt,name=config_policer_average_rate,json=configPolicerAverageRate,proto3" json:"config_policer_average_rate,omitempty"`
	HardwarePolicerAverageRateKbps   uint32                       `protobuf:"varint,71,opt,name=hardware_policer_average_rate_kbps,json=hardwarePolicerAverageRateKbps,proto3" json:"hardware_policer_average_rate_kbps,omitempty"`
	ConfigPolicerPeakRate            *DnxQoseaShowPolicyParamSt_  `protobuf:"bytes,72,opt,name=config_policer_peak_rate,json=configPolicerPeakRate,proto3" json:"config_policer_peak_rate,omitempty"`
	HardwarePolicerPeakRateKbps      uint32                       `protobuf:"varint,73,opt,name=hardware_policer_peak_rate_kbps,json=hardwarePolicerPeakRateKbps,proto3" json:"hardware_policer_peak_rate_kbps,omitempty"`
	ConfigPolicerConformBurst        *DnxQoseaShowPolicyParamSt_  `protobuf:"bytes,74,opt,name=config_policer_conform_burst,json=configPolicerConformBurst,proto3" json:"config_policer_conform_burst,omitempty"`
	HardwarePolicerConformBurstBytes uint32                       `protobuf:"varint,75,opt,name=hardware_policer_conform_burst_bytes,json=hardwarePolicerConformBurstBytes,proto3" json:"hardware_policer_conform_burst_bytes,omitempty"`
	ConfigPolicerExcessBurst         *DnxQoseaShowPolicyParamSt_  `protobuf:"bytes,76,opt,name=config_policer_excess_burst,json=configPolicerExcessBurst,proto3" json:"config_policer_excess_burst,omitempty"`
	HardwarePolicerExcessBurstBytes  uint32                       `protobuf:"varint,77,opt,name=hardware_policer_excess_burst_bytes,json=hardwarePolicerExcessBurstBytes,proto3" json:"hardware_policer_excess_burst_bytes,omitempty"`
	ConformAction                    *DnxQoseaShowPolActionSt_    `protobuf:"bytes,78,opt,name=conform_action,json=conformAction,proto3" json:"conform_action,omitempty"`
	ExceedAction                     *DnxQoseaShowPolActionSt_    `protobuf:"bytes,79,opt,name=exceed_action,json=exceedAction,proto3" json:"exceed_action,omitempty"`
	ViolateAction                    *DnxQoseaShowPolActionSt_    `protobuf:"bytes,80,opt,name=violate_action,json=violateAction,proto3" json:"violate_action,omitempty"`
	Wred                             []*DnxQoseaShowWredParamsSt_ `protobuf:"bytes,81,rep,name=wred,proto3" json:"wred,omitempty"`
	XXX_NoUnkeyedLiteral             struct{}                     `json:"-"`
	XXX_unrecognized                 []byte                       `json:"-"`
	XXX_sizecache                    int32                        `json:"-"`
}

func (m *DnxQoseaShowClassSt) Reset()         { *m = DnxQoseaShowClassSt{} }
func (m *DnxQoseaShowClassSt) String() string { return proto.CompactTextString(m) }
func (*DnxQoseaShowClassSt) ProtoMessage()    {}
func (*DnxQoseaShowClassSt) Descriptor() ([]byte, []int) {
	return fileDescriptor_4a790e8a59d1ee85, []int{6}
}

func (m *DnxQoseaShowClassSt) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DnxQoseaShowClassSt.Unmarshal(m, b)
}
func (m *DnxQoseaShowClassSt) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DnxQoseaShowClassSt.Marshal(b, m, deterministic)
}
func (m *DnxQoseaShowClassSt) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DnxQoseaShowClassSt.Merge(m, src)
}
func (m *DnxQoseaShowClassSt) XXX_Size() int {
	return xxx_messageInfo_DnxQoseaShowClassSt.Size(m)
}
func (m *DnxQoseaShowClassSt) XXX_DiscardUnknown() {
	xxx_messageInfo_DnxQoseaShowClassSt.DiscardUnknown(m)
}

var xxx_messageInfo_DnxQoseaShowClassSt proto.InternalMessageInfo

func (m *DnxQoseaShowClassSt) GetClassLevel() string {
	if m != nil {
		return m.ClassLevel
	}
	return ""
}

func (m *DnxQoseaShowClassSt) GetIpMark() []*DnxQoseaShowMarkSt_ {
	if m != nil {
		return m.IpMark
	}
	return nil
}

func (m *DnxQoseaShowClassSt) GetCommonMark() []*DnxQoseaShowMarkSt_ {
	if m != nil {
		return m.CommonMark
	}
	return nil
}

func (m *DnxQoseaShowClassSt) GetMplsMark() []*DnxQoseaShowMarkSt_ {
	if m != nil {
		return m.MplsMark
	}
	return nil
}

func (m *DnxQoseaShowClassSt) GetEgressQueueId() int32 {
	if m != nil {
		return m.EgressQueueId
	}
	return 0
}

func (m *DnxQoseaShowClassSt) GetQueueType() string {
	if m != nil {
		return m.QueueType
	}
	return ""
}

func (m *DnxQoseaShowClassSt) GetPriorityLevel() string {
	if m != nil {
		return m.PriorityLevel
	}
	return ""
}

func (m *DnxQoseaShowClassSt) GetConfigMaxRate() *DnxQoseaShowPolicyParamSt_ {
	if m != nil {
		return m.ConfigMaxRate
	}
	return nil
}

func (m *DnxQoseaShowClassSt) GetHardwareMaxRateKbps() uint32 {
	if m != nil {
		return m.HardwareMaxRateKbps
	}
	return 0
}

func (m *DnxQoseaShowClassSt) GetConfigMinRate() *DnxQoseaShowPolicyParamSt_ {
	if m != nil {
		return m.ConfigMinRate
	}
	return nil
}

func (m *DnxQoseaShowClassSt) GetHardwareMinRateKbps() uint32 {
	if m != nil {
		return m.HardwareMinRateKbps
	}
	return 0
}

func (m *DnxQoseaShowClassSt) GetConfigExcessBandwidthPercent() uint32 {
	if m != nil {
		return m.ConfigExcessBandwidthPercent
	}
	return 0
}

func (m *DnxQoseaShowClassSt) GetConfigExcessBandwidthUnit() uint32 {
	if m != nil {
		return m.ConfigExcessBandwidthUnit
	}
	return 0
}

func (m *DnxQoseaShowClassSt) GetHardwareExcessBandwidthWeight() uint32 {
	if m != nil {
		return m.HardwareExcessBandwidthWeight
	}
	return 0
}

func (m *DnxQoseaShowClassSt) GetNetworkMinBandwidthKbps() uint32 {
	if m != nil {
		return m.NetworkMinBandwidthKbps
	}
	return 0
}

func (m *DnxQoseaShowClassSt) GetConfigQueueLimit() *DnxQoseaShowPolicyParamSt_ {
	if m != nil {
		return m.ConfigQueueLimit
	}
	return nil
}

func (m *DnxQoseaShowClassSt) GetHardwareQueueLimitBytes() uint64 {
	if m != nil {
		return m.HardwareQueueLimitBytes
	}
	return 0
}

func (m *DnxQoseaShowClassSt) GetHardwareQueueLimitMicroseconds() uint64 {
	if m != nil {
		return m.HardwareQueueLimitMicroseconds
	}
	return 0
}

func (m *DnxQoseaShowClassSt) GetPolicerBucketId() uint32 {
	if m != nil {
		return m.PolicerBucketId
	}
	return 0
}

func (m *DnxQoseaShowClassSt) GetPolicerStatsHandle() uint64 {
	if m != nil {
		return m.PolicerStatsHandle
	}
	return 0
}

func (m *DnxQoseaShowClassSt) GetConfigPolicerAverageRate() *DnxQoseaShowPolicyParamSt_ {
	if m != nil {
		return m.ConfigPolicerAverageRate
	}
	return nil
}

func (m *DnxQoseaShowClassSt) GetHardwarePolicerAverageRateKbps() uint32 {
	if m != nil {
		return m.HardwarePolicerAverageRateKbps
	}
	return 0
}

func (m *DnxQoseaShowClassSt) GetConfigPolicerPeakRate() *DnxQoseaShowPolicyParamSt_ {
	if m != nil {
		return m.ConfigPolicerPeakRate
	}
	return nil
}

func (m *DnxQoseaShowClassSt) GetHardwarePolicerPeakRateKbps() uint32 {
	if m != nil {
		return m.HardwarePolicerPeakRateKbps
	}
	return 0
}

func (m *DnxQoseaShowClassSt) GetConfigPolicerConformBurst() *DnxQoseaShowPolicyParamSt_ {
	if m != nil {
		return m.ConfigPolicerConformBurst
	}
	return nil
}

func (m *DnxQoseaShowClassSt) GetHardwarePolicerConformBurstBytes() uint32 {
	if m != nil {
		return m.HardwarePolicerConformBurstBytes
	}
	return 0
}

func (m *DnxQoseaShowClassSt) GetConfigPolicerExcessBurst() *DnxQoseaShowPolicyParamSt_ {
	if m != nil {
		return m.ConfigPolicerExcessBurst
	}
	return nil
}

func (m *DnxQoseaShowClassSt) GetHardwarePolicerExcessBurstBytes() uint32 {
	if m != nil {
		return m.HardwarePolicerExcessBurstBytes
	}
	return 0
}

func (m *DnxQoseaShowClassSt) GetConformAction() *DnxQoseaShowPolActionSt_ {
	if m != nil {
		return m.ConformAction
	}
	return nil
}

func (m *DnxQoseaShowClassSt) GetExceedAction() *DnxQoseaShowPolActionSt_ {
	if m != nil {
		return m.ExceedAction
	}
	return nil
}

func (m *DnxQoseaShowClassSt) GetViolateAction() *DnxQoseaShowPolActionSt_ {
	if m != nil {
		return m.ViolateAction
	}
	return nil
}

func (m *DnxQoseaShowClassSt) GetWred() []*DnxQoseaShowWredParamsSt_ {
	if m != nil {
		return m.Wred
	}
	return nil
}

func init() {
	proto.RegisterType((*DnxQoseaShowClassSt_KEYS)(nil), "cisco_ios_xr_ncs5500_qos_oper.platform_qos.nodes.node.bundle_interfaces.bundle_interface.member_interfaces.member_interface.classes.class.dnx_qosea_show_class_st_KEYS")
	proto.RegisterType((*DnxQoseaShowMarkSt_)(nil), "cisco_ios_xr_ncs5500_qos_oper.platform_qos.nodes.node.bundle_interfaces.bundle_interface.member_interfaces.member_interface.classes.class.dnx_qosea_show_mark_st_")
	proto.RegisterType((*DnxQoseaShowPolicyParamSt_)(nil), "cisco_ios_xr_ncs5500_qos_oper.platform_qos.nodes.node.bundle_interfaces.bundle_interface.member_interfaces.member_interface.classes.class.dnx_qosea_show_policy_param_st_")
	proto.RegisterType((*DnxQoseaShowPolActionSt_)(nil), "cisco_ios_xr_ncs5500_qos_oper.platform_qos.nodes.node.bundle_interfaces.bundle_interface.member_interfaces.member_interface.classes.class.dnx_qosea_show_pol_action_st_")
	proto.RegisterType((*DnxQoseaShowUint8RngSt_)(nil), "cisco_ios_xr_ncs5500_qos_oper.platform_qos.nodes.node.bundle_interfaces.bundle_interface.member_interfaces.member_interface.classes.class.dnx_qosea_show_uint8_rng_st_")
	proto.RegisterType((*DnxQoseaShowWredParamsSt_)(nil), "cisco_ios_xr_ncs5500_qos_oper.platform_qos.nodes.node.bundle_interfaces.bundle_interface.member_interfaces.member_interface.classes.class.dnx_qosea_show_wred_params_st_")
	proto.RegisterType((*DnxQoseaShowClassSt)(nil), "cisco_ios_xr_ncs5500_qos_oper.platform_qos.nodes.node.bundle_interfaces.bundle_interface.member_interfaces.member_interface.classes.class.dnx_qosea_show_class_st")
}

func init() { proto.RegisterFile("dnx_qosea_show_class_st.proto", fileDescriptor_4a790e8a59d1ee85) }

var fileDescriptor_4a790e8a59d1ee85 = []byte{
	// 1359 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xd4, 0x98, 0x4f, 0x73, 0x14, 0xc5,
	0x1b, 0xc7, 0x6b, 0x20, 0x84, 0xa4, 0x93, 0x4d, 0x60, 0x7e, 0xf0, 0x63, 0x90, 0x3f, 0xbb, 0x2c,
	0x42, 0xa5, 0x3c, 0xac, 0xfc, 0x11, 0x45, 0x51, 0x91, 0x40, 0x84, 0x40, 0x16, 0xc2, 0x06, 0xb4,
	0xac, 0xb2, 0xaa, 0xab, 0x77, 0xa6, 0xb3, 0xdb, 0xb5, 0x33, 0xdd, 0x93, 0xee, 0xde, 0x6c, 0xc2,
	0x3b, 0xf0, 0x6d, 0x78, 0x41, 0x79, 0x03, 0x5e, 0x2c, 0xcb, 0x83, 0x67, 0xcb, 0xd2, 0x93, 0x07,
	0x6f, 0x9e, 0x2c, 0xab, 0xbc, 0x7b, 0xb2, 0xfa, 0xe9, 0x9e, 0x61, 0x76, 0x36, 0xb9, 0x67, 0x2e,
	0x9a, 0xfd, 0xf6, 0xf3, 0x3c, 0xd3, 0xdf, 0x4f, 0x77, 0x3f, 0x3d, 0x0c, 0x3a, 0x17, 0xf1, 0x1d,
	0xbc, 0x25, 0x14, 0x25, 0x58, 0xf5, 0xc5, 0x08, 0x87, 0x31, 0x51, 0x0a, 0x2b, 0xdd, 0x4a, 0xa5,
	0xd0, 0xc2, 0xff, 0xca, 0x0b, 0x99, 0x0a, 0x05, 0x66, 0x42, 0xe1, 0x1d, 0x89, 0x79, 0xa8, 0x6e,
	0xdc, 0xb8, 0x72, 0xc5, 0x24, 0x60, 0x91, 0x52, 0xd9, 0x4a, 0x63, 0xa2, 0x37, 0x85, 0x4c, 0x8c,
	0xd2, 0xe2, 0x22, 0xa2, 0xf6, 0xbf, 0xad, 0xee, 0x90, 0x47, 0x31, 0xc5, 0x8c, 0x6b, 0x2a, 0x37,
	0x49, 0x48, 0xd5, 0x84, 0xd2, 0x4a, 0x68, 0xd2, 0xa5, 0xb2, 0x18, 0x52, 0x56, 0x5a, 0x30, 0x19,
	0xaa, 0xec, 0xff, 0x9b, 0xaf, 0x0e, 0xa1, 0xb3, 0xfb, 0xcc, 0x16, 0x3f, 0x5a, 0xf9, 0x62, 0xc3,
	0x3f, 0x83, 0x66, 0xcd, 0xc3, 0x31, 0x27, 0x09, 0x0d, 0xbc, 0x86, 0xb7, 0x34, 0xdb, 0x99, 0x31,
	0xc2, 0x63, 0x92, 0x50, 0xff, 0x12, 0x5a, 0xc8, 0x0b, 0xdb, 0x88, 0x43, 0x10, 0x51, 0xcb, 0x55,
	0x08, 0x3b, 0x89, 0xa6, 0x79, 0x3a, 0xc4, 0x2c, 0x0a, 0x0e, 0x37, 0xbc, 0xa5, 0x5a, 0xe7, 0x08,
	0x4f, 0x87, 0xab, 0x91, 0x7f, 0x11, 0xd5, 0x8c, 0xe7, 0x88, 0x49, 0x1a, 0x6a, 0x26, 0x78, 0x30,
	0x05, 0xc9, 0xf3, 0x5b, 0x42, 0xdd, 0xcb, 0x34, 0x7f, 0x09, 0x1d, 0x1b, 0x7f, 0x04, 0xbe, 0x1a,
	0x1c, 0x81, 0xb8, 0x85, 0xb1, 0x87, 0x5c, 0xf5, 0xdf, 0x46, 0x27, 0x62, 0xba, 0x4d, 0x63, 0x2c,
	0x38, 0x75, 0x26, 0x60, 0x4a, 0xd3, 0x10, 0x7d, 0x1c, 0xc6, 0x9e, 0x70, 0x7a, 0xd7, 0x8c, 0xc0,
	0xb4, 0xf2, 0x04, 0x3d, 0x12, 0xc5, 0x84, 0xa3, 0x85, 0x84, 0x67, 0x23, 0x91, 0x27, 0x34, 0x9f,
	0xa3, 0x53, 0x25, 0x56, 0x09, 0x91, 0x03, 0x83, 0xca, 0x60, 0x82, 0xbf, 0xf5, 0x6e, 0x9a, 0x63,
	0x32, 0xc2, 0xb3, 0xdd, 0x94, 0xfa, 0xe7, 0x10, 0x82, 0xc1, 0x6d, 0x12, 0x0f, 0x2d, 0xa2, 0x5a,
	0x07, 0xc2, 0x3f, 0x33, 0x42, 0x93, 0xa2, 0x7a, 0xa9, 0x6c, 0x2a, 0x62, 0x16, 0xee, 0xe2, 0x94,
	0x48, 0x92, 0x40, 0xf9, 0x0b, 0x68, 0xde, 0x69, 0xb6, 0x86, 0x07, 0x35, 0xe6, 0xac, 0x06, 0x55,
	0xfc, 0x3a, 0x72, 0x3f, 0xf1, 0x90, 0x33, 0xed, 0x16, 0x02, 0x59, 0xe9, 0x39, 0x67, 0xba, 0xf9,
	0xaf, 0x37, 0xb1, 0x31, 0x53, 0x11, 0x63, 0x02, 0x9c, 0xe1, 0x29, 0x75, 0x34, 0xe7, 0x7e, 0x15,
	0x6c, 0x20, 0x2b, 0x81, 0x91, 0xef, 0x3c, 0x34, 0x65, 0xe6, 0x1d, 0x1c, 0x6a, 0x1c, 0x5e, 0x9a,
	0xbb, 0xf6, 0xb5, 0xd7, 0x3a, 0x30, 0x3b, 0xb9, 0xb5, 0xcf, 0xca, 0x74, 0x60, 0xc2, 0xcd, 0x2f,
	0x27, 0xb6, 0xf9, 0x90, 0x71, 0x7d, 0x13, 0x4b, 0xde, 0xcb, 0xac, 0x4b, 0xc2, 0x7b, 0x14, 0x2b,
	0x4d, 0xa4, 0x76, 0x7c, 0x11, 0x48, 0x1b, 0x46, 0x31, 0x0b, 0x6c, 0x03, 0x28, 0x8f, 0xdc, 0x12,
	0xce, 0x80, 0xb0, 0xc2, 0xa3, 0xe6, 0xcb, 0xa3, 0xe8, 0x7c, 0xa9, 0xfc, 0x48, 0xd2, 0xc8, 0x2e,
	0x20, 0x9c, 0x25, 0xff, 0x32, 0x5a, 0x04, 0x29, 0x21, 0x3a, 0xec, 0x17, 0xf9, 0xd6, 0x8c, 0xdc,
	0x36, 0x2a, 0x20, 0xfe, 0xd5, 0x43, 0xc7, 0x0a, 0x81, 0xd9, 0x96, 0x31, 0xb8, 0x5f, 0x1e, 0x60,
	0xdc, 0x63, 0x34, 0x3b, 0x0b, 0xb9, 0x27, 0xbb, 0x37, 0xff, 0xf0, 0xd0, 0x89, 0x50, 0xf0, 0x4d,
	0xd6, 0xc3, 0x09, 0xe3, 0x58, 0xf7, 0x25, 0x55, 0x7d, 0x11, 0xdb, 0x7e, 0x30, 0x77, 0xed, 0xd5,
	0x01, 0x36, 0x56, 0x3e, 0x8a, 0x1d, 0xdf, 0x1a, 0x69, 0x33, 0xfe, 0x2c, 0xb3, 0xe1, 0xdf, 0x46,
	0x67, 0xfb, 0x44, 0x46, 0x23, 0x22, 0xe9, 0xb8, 0x41, 0xdc, 0xdd, 0xd5, 0x54, 0x41, 0x63, 0xab,
	0x75, 0x4e, 0x67, 0x31, 0xc5, 0xdc, 0x65, 0x13, 0x30, 0x06, 0x88, 0xec, 0x14, 0x00, 0x1d, 0xa9,
	0x2e, 0x20, 0xb2, 0xb3, 0x0f, 0xa0, 0xa2, 0x41, 0x07, 0x68, 0xba, 0x04, 0xa8, 0x90, 0x6b, 0x01,
	0x5d, 0x44, 0xb5, 0x4d, 0x26, 0x95, 0xc6, 0x8a, 0xf6, 0x12, 0xca, 0x35, 0x34, 0xe9, 0x5a, 0x67,
	0x1e, 0xc4, 0x0d, 0xab, 0x99, 0x2e, 0xe9, 0x86, 0xb1, 0x62, 0x2f, 0x68, 0x30, 0x63, 0xbb, 0xa4,
	0xd3, 0x36, 0xd8, 0x0b, 0xda, 0xfc, 0xa7, 0x3e, 0xd1, 0xc3, 0xb3, 0xfb, 0xce, 0xf4, 0x00, 0xfb,
	0x37, 0x74, 0xfe, 0xe0, 0x9a, 0x6d, 0x7f, 0x20, 0xad, 0x19, 0xc5, 0xff, 0xde, 0x43, 0x47, 0x59,
	0x0a, 0xad, 0x25, 0xb8, 0x5e, 0x9d, 0x0e, 0x38, 0xcd, 0xd2, 0x36, 0x91, 0x03, 0xff, 0x27, 0x0f,
	0xcd, 0x85, 0x22, 0x49, 0x04, 0xb7, 0x16, 0xde, 0xa9, 0x8e, 0x05, 0x64, 0xe7, 0x0d, 0x36, 0x7e,
	0xf4, 0xd0, 0x6c, 0x92, 0xc6, 0xca, 0x9a, 0xb8, 0x51, 0x1d, 0x13, 0x33, 0x66, 0xd6, 0x60, 0xe1,
	0x32, 0x5a, 0xa4, 0x3d, 0x49, 0x95, 0xc2, 0x5b, 0x43, 0x3a, 0xa4, 0xe6, 0xcd, 0xe8, 0xdd, 0x86,
	0xb7, 0x74, 0xbc, 0x53, 0xb3, 0xf2, 0x53, 0xa3, 0xae, 0x46, 0xe6, 0xc5, 0xc1, 0x06, 0xc0, 0x7d,
	0xf1, 0x1e, 0x6c, 0xc8, 0x59, 0x50, 0xe0, 0xae, 0xb8, 0x84, 0x16, 0x52, 0xc9, 0x84, 0x64, 0x7a,
	0xd7, 0xed, 0xd9, 0x9b, 0xf6, 0x4a, 0xc9, 0x54, 0xbb, 0x6d, 0x7f, 0xf3, 0xd0, 0x62, 0xa1, 0xb9,
	0x48, 0xa2, 0x69, 0xf0, 0x7e, 0xf5, 0xfa, 0x4a, 0x2d, 0xef, 0x2b, 0x1d, 0xa2, 0xa9, 0x7f, 0x1d,
	0xfd, 0x7f, 0xac, 0xa5, 0x18, 0x5b, 0x78, 0xd0, 0x4d, 0x55, 0xf0, 0x01, 0x1c, 0xfb, 0xff, 0x15,
	0x9a, 0x89, 0x49, 0x78, 0xd4, 0x4d, 0xd5, 0x18, 0x0a, 0xc6, 0x2d, 0x8a, 0x5b, 0xd5, 0x45, 0xc1,
	0xf8, 0x24, 0x0a, 0x67, 0xcb, 0xa2, 0xf8, 0xb0, 0x84, 0xc2, 0x26, 0x00, 0x8a, 0x15, 0x54, 0x77,
	0x24, 0xe8, 0x4e, 0x68, 0xb6, 0x62, 0x97, 0xf0, 0x68, 0xc4, 0x22, 0xdd, 0xc7, 0x29, 0x95, 0xa1,
	0xe9, 0xb1, 0x1f, 0x41, 0xf6, 0x59, 0x1b, 0xb6, 0x02, 0x51, 0xcb, 0x59, 0xd0, 0xba, 0x8d, 0x31,
	0x9d, 0x7d, 0xbf, 0x32, 0xf0, 0x1e, 0xfa, 0xb1, 0xed, 0xec, 0x7b, 0xd6, 0x30, 0xaf, 0xa5, 0xfe,
	0x7d, 0xd4, 0xc8, 0x27, 0x3f, 0x51, 0x62, 0x44, 0x59, 0xaf, 0xaf, 0x83, 0xdb, 0x50, 0xe4, 0x5c,
	0x16, 0x57, 0x2a, 0xf3, 0x39, 0x04, 0xf9, 0xb7, 0xd0, 0x1b, 0x9c, 0xea, 0x91, 0x90, 0x03, 0x80,
	0xf0, 0xba, 0x08, 0x90, 0xf8, 0x04, 0x4a, 0x9c, 0x72, 0x11, 0x6d, 0xc6, 0xf3, 0x74, 0xa0, 0xf1,
	0xbb, 0x87, 0xdc, 0xbd, 0xe5, 0x8e, 0x64, 0xcc, 0x12, 0xa6, 0x83, 0x3b, 0xd5, 0xdb, 0x1b, 0xc7,
	0xac, 0x0d, 0x68, 0x21, 0x6b, 0xc6, 0x84, 0x01, 0x93, 0x13, 0x2e, 0x98, 0x73, 0x57, 0xef, 0x72,
	0xc3, 0x5b, 0x9a, 0xea, 0x9c, 0xca, 0x22, 0x5e, 0xe7, 0xd9, 0x8b, 0x77, 0x15, 0x5d, 0xd8, 0x33,
	0x39, 0x61, 0xa1, 0x14, 0x8a, 0x86, 0x82, 0x47, 0x2a, 0xb8, 0x0b, 0x35, 0xce, 0x4f, 0xd6, 0x68,
	0x17, 0xa2, 0xfc, 0xb7, 0xd0, 0x71, 0x98, 0x2d, 0x95, 0xb8, 0x3b, 0x0c, 0x07, 0x54, 0x9b, 0xbe,
	0x77, 0x0f, 0xd6, 0x65, 0xd1, 0x0d, 0x2c, 0x83, 0xbe, 0x1a, 0xf9, 0x57, 0xd0, 0x89, 0x2c, 0x56,
	0x69, 0xa2, 0x15, 0xee, 0x13, 0x03, 0x2e, 0x58, 0x81, 0x27, 0xf9, 0x6e, 0x6c, 0xc3, 0x0c, 0x3d,
	0x80, 0x11, 0xff, 0x2f, 0x0f, 0x9d, 0x71, 0x2b, 0x98, 0x65, 0x92, 0x6d, 0x2a, 0x49, 0x8f, 0xda,
	0x63, 0xfe, 0x69, 0xf5, 0x96, 0x32, 0xb0, 0x7e, 0xd6, 0xad, 0x9d, 0x3b, 0xd6, 0x0d, 0x9c, 0xf8,
	0x87, 0xa8, 0x99, 0xaf, 0xca, 0x5e, 0x6e, 0xed, 0x9e, 0xbf, 0x0f, 0x6c, 0xf3, 0x65, 0x99, 0xac,
	0x03, 0x5b, 0xff, 0x4f, 0x0f, 0x05, 0x25, 0x70, 0x29, 0x25, 0x03, 0x4b, 0xed, 0x41, 0xf5, 0xa8,
	0x9d, 0x1c, 0xa3, 0xb6, 0x4e, 0xc9, 0x00, 0x90, 0xdd, 0x43, 0xf5, 0x09, 0x64, 0xb9, 0x4f, 0xcb,
	0x6b, 0x15, 0x78, 0x9d, 0x29, 0xf1, 0xca, 0x2a, 0x00, 0xac, 0xbf, 0xbd, 0xbc, 0xdf, 0x65, 0x45,
	0xcc, 0x4f, 0x63, 0xbd, 0x3b, 0x94, 0x4a, 0x07, 0x0f, 0xab, 0x07, 0xec, 0xf4, 0x18, 0xb0, 0xbb,
	0xd6, 0xce, 0xb2, 0x71, 0xe3, 0x3f, 0x46, 0x6f, 0x4e, 0x40, 0x1b, 0xf3, 0xeb, 0x9a, 0xc8, 0x23,
	0x20, 0xd7, 0x28, 0x91, 0x2b, 0x96, 0xb2, 0xdd, 0x64, 0x8f, 0x43, 0x9a, 0xf5, 0x7c, 0xa0, 0xb7,
	0x56, 0xf5, 0x43, 0xea, 0xae, 0x26, 0x80, 0xb7, 0x86, 0x2e, 0x4e, 0xc0, 0x2b, 0xba, 0x75, 0xec,
	0xda, 0xc0, 0xae, 0x5e, 0x62, 0x57, 0x28, 0x64, 0xd1, 0xfd, 0xe2, 0xa1, 0x85, 0x0c, 0xbd, 0xfd,
	0x24, 0x13, 0x3c, 0x06, 0x5a, 0xdf, 0x1c, 0x6c, 0x5a, 0x85, 0x0f, 0x4c, 0xf6, 0xbd, 0x45, 0xc8,
	0xe4, 0x8e, 0xfd, 0xb6, 0xf7, 0xb3, 0x87, 0x6a, 0x06, 0x08, 0x8d, 0x32, 0x47, 0x4f, 0xaa, 0xe6,
	0x68, 0xde, 0xce, 0xdf, 0x19, 0x32, 0x6b, 0xb4, 0xcd, 0x44, 0x6c, 0x3a, 0x8a, 0x73, 0xb4, 0x5e,
	0xb9, 0x35, 0x72, 0x06, 0x9c, 0xa5, 0x1f, 0x3c, 0x34, 0x35, 0x92, 0x34, 0x0a, 0x9e, 0xc2, 0x3f,
	0xb4, 0xbe, 0x3d, 0xc0, 0x46, 0x4a, 0x9f, 0xdc, 0x3a, 0x30, 0xef, 0xee, 0x34, 0x7c, 0x74, 0xbf,
	0xfe, 0x5f, 0x00, 0x00, 0x00, 0xff, 0xff, 0xea, 0x0a, 0xaa, 0x1c, 0x95, 0x17, 0x00, 0x00,
}
