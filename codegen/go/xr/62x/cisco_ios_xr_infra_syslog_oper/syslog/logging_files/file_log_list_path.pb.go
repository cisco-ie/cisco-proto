/*
Copyright 2019 Cisco Systems

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: file_log_list_path.proto

package cisco_ios_xr_infra_syslog_oper_syslog_logging_files

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type FileLogListPath_KEYS struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FileLogListPath_KEYS) Reset()         { *m = FileLogListPath_KEYS{} }
func (m *FileLogListPath_KEYS) String() string { return proto.CompactTextString(m) }
func (*FileLogListPath_KEYS) ProtoMessage()    {}
func (*FileLogListPath_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_e799385964037fa3, []int{0}
}

func (m *FileLogListPath_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FileLogListPath_KEYS.Unmarshal(m, b)
}
func (m *FileLogListPath_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FileLogListPath_KEYS.Marshal(b, m, deterministic)
}
func (m *FileLogListPath_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FileLogListPath_KEYS.Merge(m, src)
}
func (m *FileLogListPath_KEYS) XXX_Size() int {
	return xxx_messageInfo_FileLogListPath_KEYS.Size(m)
}
func (m *FileLogListPath_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_FileLogListPath_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_FileLogListPath_KEYS proto.InternalMessageInfo

type FileLogDetailsT struct {
	FilePath             string   `protobuf:"bytes,1,opt,name=file_path,json=filePath,proto3" json:"file_path,omitempty"`
	FileName             string   `protobuf:"bytes,2,opt,name=file_name,json=fileName,proto3" json:"file_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FileLogDetailsT) Reset()         { *m = FileLogDetailsT{} }
func (m *FileLogDetailsT) String() string { return proto.CompactTextString(m) }
func (*FileLogDetailsT) ProtoMessage()    {}
func (*FileLogDetailsT) Descriptor() ([]byte, []int) {
	return fileDescriptor_e799385964037fa3, []int{1}
}

func (m *FileLogDetailsT) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FileLogDetailsT.Unmarshal(m, b)
}
func (m *FileLogDetailsT) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FileLogDetailsT.Marshal(b, m, deterministic)
}
func (m *FileLogDetailsT) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FileLogDetailsT.Merge(m, src)
}
func (m *FileLogDetailsT) XXX_Size() int {
	return xxx_messageInfo_FileLogDetailsT.Size(m)
}
func (m *FileLogDetailsT) XXX_DiscardUnknown() {
	xxx_messageInfo_FileLogDetailsT.DiscardUnknown(m)
}

var xxx_messageInfo_FileLogDetailsT proto.InternalMessageInfo

func (m *FileLogDetailsT) GetFilePath() string {
	if m != nil {
		return m.FilePath
	}
	return ""
}

func (m *FileLogDetailsT) GetFileName() string {
	if m != nil {
		return m.FileName
	}
	return ""
}

type FileLogListPath struct {
	FileLogDetail        []*FileLogDetailsT `protobuf:"bytes,50,rep,name=file_log_detail,json=fileLogDetail,proto3" json:"file_log_detail,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *FileLogListPath) Reset()         { *m = FileLogListPath{} }
func (m *FileLogListPath) String() string { return proto.CompactTextString(m) }
func (*FileLogListPath) ProtoMessage()    {}
func (*FileLogListPath) Descriptor() ([]byte, []int) {
	return fileDescriptor_e799385964037fa3, []int{2}
}

func (m *FileLogListPath) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FileLogListPath.Unmarshal(m, b)
}
func (m *FileLogListPath) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FileLogListPath.Marshal(b, m, deterministic)
}
func (m *FileLogListPath) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FileLogListPath.Merge(m, src)
}
func (m *FileLogListPath) XXX_Size() int {
	return xxx_messageInfo_FileLogListPath.Size(m)
}
func (m *FileLogListPath) XXX_DiscardUnknown() {
	xxx_messageInfo_FileLogListPath.DiscardUnknown(m)
}

var xxx_messageInfo_FileLogListPath proto.InternalMessageInfo

func (m *FileLogListPath) GetFileLogDetail() []*FileLogDetailsT {
	if m != nil {
		return m.FileLogDetail
	}
	return nil
}

func init() {
	proto.RegisterType((*FileLogListPath_KEYS)(nil), "cisco_ios_xr_infra_syslog_oper.syslog.logging_files.file_log_list_path_KEYS")
	proto.RegisterType((*FileLogDetailsT)(nil), "cisco_ios_xr_infra_syslog_oper.syslog.logging_files.file_log_details_t")
	proto.RegisterType((*FileLogListPath)(nil), "cisco_ios_xr_infra_syslog_oper.syslog.logging_files.file_log_list_path")
}

func init() { proto.RegisterFile("file_log_list_path.proto", fileDescriptor_e799385964037fa3) }

var fileDescriptor_e799385964037fa3 = []byte{
	// 200 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x92, 0x48, 0xcb, 0xcc, 0x49,
	0x8d, 0xcf, 0xc9, 0x4f, 0x8f, 0xcf, 0xc9, 0x2c, 0x2e, 0x89, 0x2f, 0x48, 0x2c, 0xc9, 0xd0, 0x2b,
	0x28, 0xca, 0x2f, 0xc9, 0x17, 0x32, 0x4e, 0xce, 0x2c, 0x4e, 0xce, 0x8f, 0xcf, 0xcc, 0x2f, 0x8e,
	0xaf, 0x28, 0x8a, 0xcf, 0xcc, 0x4b, 0x2b, 0x4a, 0x8c, 0x2f, 0xae, 0x2c, 0x06, 0x29, 0xcd, 0x2f,
	0x48, 0x2d, 0xd2, 0x83, 0xb0, 0xf5, 0x72, 0xf2, 0xd3, 0xd3, 0x33, 0xf3, 0xd2, 0xe3, 0x41, 0xe6,
	0x14, 0x2b, 0x49, 0x72, 0x89, 0x63, 0x1a, 0x18, 0xef, 0xed, 0x1a, 0x19, 0xac, 0xe4, 0xc7, 0x25,
	0x04, 0x97, 0x4a, 0x49, 0x2d, 0x49, 0xcc, 0xcc, 0x29, 0x8e, 0x2f, 0x11, 0x92, 0xe6, 0xe2, 0x04,
	0x8b, 0x82, 0xd4, 0x49, 0x30, 0x2a, 0x30, 0x6a, 0x70, 0x06, 0x71, 0x80, 0x04, 0x02, 0x12, 0x4b,
	0x32, 0xe0, 0x92, 0x79, 0x89, 0xb9, 0xa9, 0x12, 0x4c, 0x08, 0x49, 0xbf, 0xc4, 0xdc, 0x54, 0xa5,
	0x56, 0x46, 0x24, 0x03, 0xe1, 0x76, 0x09, 0xe5, 0x73, 0xf1, 0xa3, 0x59, 0x23, 0x61, 0xa4, 0xc0,
	0xac, 0xc1, 0x6d, 0xe4, 0xae, 0x47, 0x86, 0x87, 0xf4, 0x30, 0x9d, 0x1c, 0xc4, 0x0b, 0x12, 0xf3,
	0xc9, 0x4f, 0x77, 0x01, 0x8b, 0x24, 0xb1, 0x81, 0x83, 0xcb, 0x18, 0x10, 0x00, 0x00, 0xff, 0xff,
	0x06, 0x08, 0x08, 0xb1, 0x4a, 0x01, 0x00, 0x00,
}
