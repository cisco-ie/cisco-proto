/*
Copyright 2019 Cisco Systems

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: drop_stats.proto

package cisco_ios_xr_fretta_bcm_dpa_drop_stats_oper_drop_nodes_node_npu_number_for_drop_stats_npu_number_for_drop_stat_drop_specific_stats_data

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type DropStats_KEYS struct {
	NodeName             string   `protobuf:"bytes,1,opt,name=node_name,json=nodeName,proto3" json:"node_name,omitempty"`
	NpuId                uint32   `protobuf:"varint,2,opt,name=npu_id,json=npuId,proto3" json:"npu_id,omitempty"`
	DropData             uint32   `protobuf:"varint,3,opt,name=drop_data,json=dropData,proto3" json:"drop_data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DropStats_KEYS) Reset()         { *m = DropStats_KEYS{} }
func (m *DropStats_KEYS) String() string { return proto.CompactTextString(m) }
func (*DropStats_KEYS) ProtoMessage()    {}
func (*DropStats_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_be4753b2b885c272, []int{0}
}

func (m *DropStats_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DropStats_KEYS.Unmarshal(m, b)
}
func (m *DropStats_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DropStats_KEYS.Marshal(b, m, deterministic)
}
func (m *DropStats_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DropStats_KEYS.Merge(m, src)
}
func (m *DropStats_KEYS) XXX_Size() int {
	return xxx_messageInfo_DropStats_KEYS.Size(m)
}
func (m *DropStats_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_DropStats_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_DropStats_KEYS proto.InternalMessageInfo

func (m *DropStats_KEYS) GetNodeName() string {
	if m != nil {
		return m.NodeName
	}
	return ""
}

func (m *DropStats_KEYS) GetNpuId() uint32 {
	if m != nil {
		return m.NpuId
	}
	return 0
}

func (m *DropStats_KEYS) GetDropData() uint32 {
	if m != nil {
		return m.DropData
	}
	return 0
}

type DropStats struct {
	Id                   uint32   `protobuf:"varint,50,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string   `protobuf:"bytes,51,opt,name=name,proto3" json:"name,omitempty"`
	Count                uint64   `protobuf:"varint,52,opt,name=count,proto3" json:"count,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DropStats) Reset()         { *m = DropStats{} }
func (m *DropStats) String() string { return proto.CompactTextString(m) }
func (*DropStats) ProtoMessage()    {}
func (*DropStats) Descriptor() ([]byte, []int) {
	return fileDescriptor_be4753b2b885c272, []int{1}
}

func (m *DropStats) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DropStats.Unmarshal(m, b)
}
func (m *DropStats) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DropStats.Marshal(b, m, deterministic)
}
func (m *DropStats) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DropStats.Merge(m, src)
}
func (m *DropStats) XXX_Size() int {
	return xxx_messageInfo_DropStats.Size(m)
}
func (m *DropStats) XXX_DiscardUnknown() {
	xxx_messageInfo_DropStats.DiscardUnknown(m)
}

var xxx_messageInfo_DropStats proto.InternalMessageInfo

func (m *DropStats) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *DropStats) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *DropStats) GetCount() uint64 {
	if m != nil {
		return m.Count
	}
	return 0
}

func init() {
	proto.RegisterType((*DropStats_KEYS)(nil), "cisco_ios_xr_fretta_bcm_dpa_drop_stats_oper.drop.nodes.node.npu_number_for_drop_stats.npu_number_for_drop_stat.drop_specific_stats_data.drop_stats_KEYS")
	proto.RegisterType((*DropStats)(nil), "cisco_ios_xr_fretta_bcm_dpa_drop_stats_oper.drop.nodes.node.npu_number_for_drop_stats.npu_number_for_drop_stat.drop_specific_stats_data.drop_stats")
}

func init() { proto.RegisterFile("drop_stats.proto", fileDescriptor_be4753b2b885c272) }

var fileDescriptor_be4753b2b885c272 = []byte{
	// 239 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x90, 0x3f, 0x4b, 0x04, 0x31,
	0x10, 0xc5, 0xc9, 0x7a, 0x77, 0xdc, 0x0d, 0xf8, 0x87, 0xa0, 0x10, 0xb0, 0x59, 0xac, 0xb6, 0x4a,
	0xe1, 0xf9, 0x11, 0x54, 0x10, 0xc1, 0x62, 0xad, 0xac, 0x86, 0x6c, 0x92, 0x85, 0x14, 0x9b, 0x09,
	0xf9, 0x03, 0x7e, 0x03, 0xbf, 0xb6, 0x24, 0x27, 0xdc, 0x36, 0x36, 0x61, 0xe6, 0xbd, 0x97, 0xf7,
	0x83, 0x81, 0x1b, 0x13, 0x29, 0x60, 0xca, 0x2a, 0x27, 0x19, 0x22, 0x65, 0xe2, 0x3f, 0x4c, 0xbb,
	0xa4, 0x09, 0x1d, 0x25, 0xfc, 0x8e, 0x38, 0x47, 0x9b, 0xb3, 0xc2, 0x49, 0x2f, 0x68, 0x82, 0xc2,
	0x73, 0x1c, 0x29, 0xd8, 0x28, 0xeb, 0x2e, 0x3d, 0x19, 0x9b, 0xda, 0x2b, 0x7d, 0x28, 0xe8, 0xcb,
	0x32, 0xd9, 0x88, 0x33, 0xc5, 0x55, 0xfc, 0x5f, 0x47, 0x9e, 0xa6, 0x60, 0xb5, 0x9b, 0x9d, 0xfe,
	0xeb, 0x36, 0x2a, 0xab, 0x87, 0x09, 0xae, 0x57, 0xb8, 0xf7, 0x97, 0xaf, 0x4f, 0x7e, 0x0f, 0x87,
	0x8a, 0x41, 0xaf, 0x16, 0x2b, 0x58, 0xcf, 0x86, 0xc3, 0xb8, 0xaf, 0xc2, 0x87, 0x5a, 0x2c, 0xbf,
	0x83, 0x5d, 0x85, 0x38, 0x23, 0xba, 0x9e, 0x0d, 0x97, 0xe3, 0xd6, 0x87, 0xf2, 0x66, 0xea, 0x9f,
	0x56, 0x53, 0x3b, 0xc5, 0x45, 0x73, 0xf6, 0x55, 0x78, 0xae, 0x8c, 0x57, 0x80, 0x33, 0x83, 0x5f,
	0x41, 0xe7, 0x8c, 0x78, 0x6c, 0x99, 0xce, 0x19, 0xce, 0x61, 0xd3, 0x48, 0xc7, 0x46, 0x6a, 0x33,
	0xbf, 0x85, 0xad, 0xa6, 0xe2, 0xb3, 0x78, 0xea, 0xd9, 0xb0, 0x19, 0x4f, 0xcb, 0xb4, 0x6b, 0xc7,
	0x3b, 0xfe, 0x06, 0x00, 0x00, 0xff, 0xff, 0x42, 0x9f, 0xd3, 0x3f, 0x50, 0x01, 0x00, 0x00,
}
