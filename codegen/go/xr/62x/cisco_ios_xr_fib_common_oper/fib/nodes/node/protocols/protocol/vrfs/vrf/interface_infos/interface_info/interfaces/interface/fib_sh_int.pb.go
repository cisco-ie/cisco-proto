/*
Copyright 2019 Cisco Systems

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: fib_sh_int.proto

package cisco_ios_xr_fib_common_oper_fib_nodes_node_protocols_protocol_vrfs_vrf_interface_infos_interface_info_interfaces_interface

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type FibShInt_KEYS struct {
	NodeName             string   `protobuf:"bytes,1,opt,name=node_name,json=nodeName,proto3" json:"node_name,omitempty"`
	ProtocolName         string   `protobuf:"bytes,2,opt,name=protocol_name,json=protocolName,proto3" json:"protocol_name,omitempty"`
	VrfName              string   `protobuf:"bytes,3,opt,name=vrf_name,json=vrfName,proto3" json:"vrf_name,omitempty"`
	LinkType             string   `protobuf:"bytes,4,opt,name=link_type,json=linkType,proto3" json:"link_type,omitempty"`
	InterfaceName        string   `protobuf:"bytes,5,opt,name=interface_name,json=interfaceName,proto3" json:"interface_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FibShInt_KEYS) Reset()         { *m = FibShInt_KEYS{} }
func (m *FibShInt_KEYS) String() string { return proto.CompactTextString(m) }
func (*FibShInt_KEYS) ProtoMessage()    {}
func (*FibShInt_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_355fccdb923d1d69, []int{0}
}

func (m *FibShInt_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FibShInt_KEYS.Unmarshal(m, b)
}
func (m *FibShInt_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FibShInt_KEYS.Marshal(b, m, deterministic)
}
func (m *FibShInt_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FibShInt_KEYS.Merge(m, src)
}
func (m *FibShInt_KEYS) XXX_Size() int {
	return xxx_messageInfo_FibShInt_KEYS.Size(m)
}
func (m *FibShInt_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_FibShInt_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_FibShInt_KEYS proto.InternalMessageInfo

func (m *FibShInt_KEYS) GetNodeName() string {
	if m != nil {
		return m.NodeName
	}
	return ""
}

func (m *FibShInt_KEYS) GetProtocolName() string {
	if m != nil {
		return m.ProtocolName
	}
	return ""
}

func (m *FibShInt_KEYS) GetVrfName() string {
	if m != nil {
		return m.VrfName
	}
	return ""
}

func (m *FibShInt_KEYS) GetLinkType() string {
	if m != nil {
		return m.LinkType
	}
	return ""
}

func (m *FibShInt_KEYS) GetInterfaceName() string {
	if m != nil {
		return m.InterfaceName
	}
	return ""
}

type FibShIntDet struct {
	InterfaceMtu                         uint32   `protobuf:"varint,1,opt,name=interface_mtu,json=interfaceMtu,proto3" json:"interface_mtu,omitempty"`
	ForwardingFlag                       bool     `protobuf:"varint,2,opt,name=forwarding_flag,json=forwardingFlag,proto3" json:"forwarding_flag,omitempty"`
	RpfConfiguredFlag                    bool     `protobuf:"varint,3,opt,name=rpf_configured_flag,json=rpfConfiguredFlag,proto3" json:"rpf_configured_flag,omitempty"`
	RpfMode                              string   `protobuf:"bytes,4,opt,name=rpf_mode,json=rpfMode,proto3" json:"rpf_mode,omitempty"`
	DefaultRouteWithRpf                  bool     `protobuf:"varint,5,opt,name=default_route_with_rpf,json=defaultRouteWithRpf,proto3" json:"default_route_with_rpf,omitempty"`
	SelfPingWithRpf                      bool     `protobuf:"varint,6,opt,name=self_ping_with_rpf,json=selfPingWithRpf,proto3" json:"self_ping_with_rpf,omitempty"`
	BgpPaInputConfiguredFlag             bool     `protobuf:"varint,7,opt,name=bgp_pa_input_configured_flag,json=bgpPaInputConfiguredFlag,proto3" json:"bgp_pa_input_configured_flag,omitempty"`
	SourceBgpPaInputConfiguredFlag       bool     `protobuf:"varint,8,opt,name=source_bgp_pa_input_configured_flag,json=sourceBgpPaInputConfiguredFlag,proto3" json:"source_bgp_pa_input_configured_flag,omitempty"`
	DestinationBgpPaInputConfiguredFlag  bool     `protobuf:"varint,9,opt,name=destination_bgp_pa_input_configured_flag,json=destinationBgpPaInputConfiguredFlag,proto3" json:"destination_bgp_pa_input_configured_flag,omitempty"`
	BgpPaOutputConfiguredFlag            bool     `protobuf:"varint,10,opt,name=bgp_pa_output_configured_flag,json=bgpPaOutputConfiguredFlag,proto3" json:"bgp_pa_output_configured_flag,omitempty"`
	SourceBgpPaOutputConfiguredFlag      bool     `protobuf:"varint,11,opt,name=source_bgp_pa_output_configured_flag,json=sourceBgpPaOutputConfiguredFlag,proto3" json:"source_bgp_pa_output_configured_flag,omitempty"`
	DestinationBgpPaOutputConfiguredFlag bool     `protobuf:"varint,12,opt,name=destination_bgp_pa_output_configured_flag,json=destinationBgpPaOutputConfiguredFlag,proto3" json:"destination_bgp_pa_output_configured_flag,omitempty"`
	IcmpFlag                             uint32   `protobuf:"varint,13,opt,name=icmp_flag,json=icmpFlag,proto3" json:"icmp_flag,omitempty"`
	MultiLabelDropFlag                   bool     `protobuf:"varint,14,opt,name=multi_label_drop_flag,json=multiLabelDropFlag,proto3" json:"multi_label_drop_flag,omitempty"`
	XXX_NoUnkeyedLiteral                 struct{} `json:"-"`
	XXX_unrecognized                     []byte   `json:"-"`
	XXX_sizecache                        int32    `json:"-"`
}

func (m *FibShIntDet) Reset()         { *m = FibShIntDet{} }
func (m *FibShIntDet) String() string { return proto.CompactTextString(m) }
func (*FibShIntDet) ProtoMessage()    {}
func (*FibShIntDet) Descriptor() ([]byte, []int) {
	return fileDescriptor_355fccdb923d1d69, []int{1}
}

func (m *FibShIntDet) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FibShIntDet.Unmarshal(m, b)
}
func (m *FibShIntDet) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FibShIntDet.Marshal(b, m, deterministic)
}
func (m *FibShIntDet) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FibShIntDet.Merge(m, src)
}
func (m *FibShIntDet) XXX_Size() int {
	return xxx_messageInfo_FibShIntDet.Size(m)
}
func (m *FibShIntDet) XXX_DiscardUnknown() {
	xxx_messageInfo_FibShIntDet.DiscardUnknown(m)
}

var xxx_messageInfo_FibShIntDet proto.InternalMessageInfo

func (m *FibShIntDet) GetInterfaceMtu() uint32 {
	if m != nil {
		return m.InterfaceMtu
	}
	return 0
}

func (m *FibShIntDet) GetForwardingFlag() bool {
	if m != nil {
		return m.ForwardingFlag
	}
	return false
}

func (m *FibShIntDet) GetRpfConfiguredFlag() bool {
	if m != nil {
		return m.RpfConfiguredFlag
	}
	return false
}

func (m *FibShIntDet) GetRpfMode() string {
	if m != nil {
		return m.RpfMode
	}
	return ""
}

func (m *FibShIntDet) GetDefaultRouteWithRpf() bool {
	if m != nil {
		return m.DefaultRouteWithRpf
	}
	return false
}

func (m *FibShIntDet) GetSelfPingWithRpf() bool {
	if m != nil {
		return m.SelfPingWithRpf
	}
	return false
}

func (m *FibShIntDet) GetBgpPaInputConfiguredFlag() bool {
	if m != nil {
		return m.BgpPaInputConfiguredFlag
	}
	return false
}

func (m *FibShIntDet) GetSourceBgpPaInputConfiguredFlag() bool {
	if m != nil {
		return m.SourceBgpPaInputConfiguredFlag
	}
	return false
}

func (m *FibShIntDet) GetDestinationBgpPaInputConfiguredFlag() bool {
	if m != nil {
		return m.DestinationBgpPaInputConfiguredFlag
	}
	return false
}

func (m *FibShIntDet) GetBgpPaOutputConfiguredFlag() bool {
	if m != nil {
		return m.BgpPaOutputConfiguredFlag
	}
	return false
}

func (m *FibShIntDet) GetSourceBgpPaOutputConfiguredFlag() bool {
	if m != nil {
		return m.SourceBgpPaOutputConfiguredFlag
	}
	return false
}

func (m *FibShIntDet) GetDestinationBgpPaOutputConfiguredFlag() bool {
	if m != nil {
		return m.DestinationBgpPaOutputConfiguredFlag
	}
	return false
}

func (m *FibShIntDet) GetIcmpFlag() uint32 {
	if m != nil {
		return m.IcmpFlag
	}
	return 0
}

func (m *FibShIntDet) GetMultiLabelDropFlag() bool {
	if m != nil {
		return m.MultiLabelDropFlag
	}
	return false
}

type EvtHistEntry struct {
	EvtTimestamp         string   `protobuf:"bytes,1,opt,name=evt_timestamp,json=evtTimestamp,proto3" json:"evt_timestamp,omitempty"`
	EvtName              string   `protobuf:"bytes,2,opt,name=evt_name,json=evtName,proto3" json:"evt_name,omitempty"`
	EvtType              uint32   `protobuf:"varint,3,opt,name=evt_type,json=evtType,proto3" json:"evt_type,omitempty"`
	EvtMany              bool     `protobuf:"varint,4,opt,name=evt_many,json=evtMany,proto3" json:"evt_many,omitempty"`
	EvtSticky            bool     `protobuf:"varint,5,opt,name=evt_sticky,json=evtSticky,proto3" json:"evt_sticky,omitempty"`
	EvtData              []uint32 `protobuf:"varint,6,rep,packed,name=evt_data,json=evtData,proto3" json:"evt_data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EvtHistEntry) Reset()         { *m = EvtHistEntry{} }
func (m *EvtHistEntry) String() string { return proto.CompactTextString(m) }
func (*EvtHistEntry) ProtoMessage()    {}
func (*EvtHistEntry) Descriptor() ([]byte, []int) {
	return fileDescriptor_355fccdb923d1d69, []int{2}
}

func (m *EvtHistEntry) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EvtHistEntry.Unmarshal(m, b)
}
func (m *EvtHistEntry) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EvtHistEntry.Marshal(b, m, deterministic)
}
func (m *EvtHistEntry) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EvtHistEntry.Merge(m, src)
}
func (m *EvtHistEntry) XXX_Size() int {
	return xxx_messageInfo_EvtHistEntry.Size(m)
}
func (m *EvtHistEntry) XXX_DiscardUnknown() {
	xxx_messageInfo_EvtHistEntry.DiscardUnknown(m)
}

var xxx_messageInfo_EvtHistEntry proto.InternalMessageInfo

func (m *EvtHistEntry) GetEvtTimestamp() string {
	if m != nil {
		return m.EvtTimestamp
	}
	return ""
}

func (m *EvtHistEntry) GetEvtName() string {
	if m != nil {
		return m.EvtName
	}
	return ""
}

func (m *EvtHistEntry) GetEvtType() uint32 {
	if m != nil {
		return m.EvtType
	}
	return 0
}

func (m *EvtHistEntry) GetEvtMany() bool {
	if m != nil {
		return m.EvtMany
	}
	return false
}

func (m *EvtHistEntry) GetEvtSticky() bool {
	if m != nil {
		return m.EvtSticky
	}
	return false
}

func (m *EvtHistEntry) GetEvtData() []uint32 {
	if m != nil {
		return m.EvtData
	}
	return nil
}

type EvtHistInfo struct {
	EvtClassName         string          `protobuf:"bytes,1,opt,name=evt_class_name,json=evtClassName,proto3" json:"evt_class_name,omitempty"`
	EvtEntry             []*EvtHistEntry `protobuf:"bytes,2,rep,name=evt_entry,json=evtEntry,proto3" json:"evt_entry,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *EvtHistInfo) Reset()         { *m = EvtHistInfo{} }
func (m *EvtHistInfo) String() string { return proto.CompactTextString(m) }
func (*EvtHistInfo) ProtoMessage()    {}
func (*EvtHistInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_355fccdb923d1d69, []int{3}
}

func (m *EvtHistInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EvtHistInfo.Unmarshal(m, b)
}
func (m *EvtHistInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EvtHistInfo.Marshal(b, m, deterministic)
}
func (m *EvtHistInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EvtHistInfo.Merge(m, src)
}
func (m *EvtHistInfo) XXX_Size() int {
	return xxx_messageInfo_EvtHistInfo.Size(m)
}
func (m *EvtHistInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_EvtHistInfo.DiscardUnknown(m)
}

var xxx_messageInfo_EvtHistInfo proto.InternalMessageInfo

func (m *EvtHistInfo) GetEvtClassName() string {
	if m != nil {
		return m.EvtClassName
	}
	return ""
}

func (m *EvtHistInfo) GetEvtEntry() []*EvtHistEntry {
	if m != nil {
		return m.EvtEntry
	}
	return nil
}

type FibShIntInternal struct {
	FibIdbHist           *EvtHistInfo `protobuf:"bytes,1,opt,name=fib_idb_hist,json=fibIdbHist,proto3" json:"fib_idb_hist,omitempty"`
	FibSrteHeadHist      *EvtHistInfo `protobuf:"bytes,2,opt,name=fib_srte_head_hist,json=fibSrteHeadHist,proto3" json:"fib_srte_head_hist,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *FibShIntInternal) Reset()         { *m = FibShIntInternal{} }
func (m *FibShIntInternal) String() string { return proto.CompactTextString(m) }
func (*FibShIntInternal) ProtoMessage()    {}
func (*FibShIntInternal) Descriptor() ([]byte, []int) {
	return fileDescriptor_355fccdb923d1d69, []int{4}
}

func (m *FibShIntInternal) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FibShIntInternal.Unmarshal(m, b)
}
func (m *FibShIntInternal) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FibShIntInternal.Marshal(b, m, deterministic)
}
func (m *FibShIntInternal) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FibShIntInternal.Merge(m, src)
}
func (m *FibShIntInternal) XXX_Size() int {
	return xxx_messageInfo_FibShIntInternal.Size(m)
}
func (m *FibShIntInternal) XXX_DiscardUnknown() {
	xxx_messageInfo_FibShIntInternal.DiscardUnknown(m)
}

var xxx_messageInfo_FibShIntInternal proto.InternalMessageInfo

func (m *FibShIntInternal) GetFibIdbHist() *EvtHistInfo {
	if m != nil {
		return m.FibIdbHist
	}
	return nil
}

func (m *FibShIntInternal) GetFibSrteHeadHist() *EvtHistInfo {
	if m != nil {
		return m.FibSrteHeadHist
	}
	return nil
}

type FibShInt struct {
	PerInterface                        string            `protobuf:"bytes,50,opt,name=per_interface,json=perInterface,proto3" json:"per_interface,omitempty"`
	FibInterfaceType                    uint32            `protobuf:"varint,51,opt,name=fib_interface_type,json=fibInterfaceType,proto3" json:"fib_interface_type,omitempty"`
	FibIdPointer                        uint32            `protobuf:"varint,52,opt,name=fib_id_pointer,json=fibIdPointer,proto3" json:"fib_id_pointer,omitempty"`
	FibIdFlags                          uint32            `protobuf:"varint,53,opt,name=fib_id_flags,json=fibIdFlags,proto3" json:"fib_id_flags,omitempty"`
	FibIdExtensionPointer               uint32            `protobuf:"varint,54,opt,name=fib_id_extension_pointer,json=fibIdExtensionPointer,proto3" json:"fib_id_extension_pointer,omitempty"`
	FibIdExtensionFlags                 uint32            `protobuf:"varint,55,opt,name=fib_id_extension_flags,json=fibIdExtensionFlags,proto3" json:"fib_id_extension_flags,omitempty"`
	NumberOfDependentNextHopInformation uint32            `protobuf:"varint,56,opt,name=number_of_dependent_next_hop_information,json=numberOfDependentNextHopInformation,proto3" json:"number_of_dependent_next_hop_information,omitempty"`
	VrfLocalCefInformationPointer       uint32            `protobuf:"varint,57,opt,name=vrf_local_cef_information_pointer,json=vrfLocalCefInformationPointer,proto3" json:"vrf_local_cef_information_pointer,omitempty"`
	ReferenceCount                      uint32            `protobuf:"varint,58,opt,name=reference_count,json=referenceCount,proto3" json:"reference_count,omitempty"`
	LastModifiedTime                    uint32            `protobuf:"varint,59,opt,name=last_modified_time,json=lastModifiedTime,proto3" json:"last_modified_time,omitempty"`
	LastOperation                       string            `protobuf:"bytes,60,opt,name=last_operation,json=lastOperation,proto3" json:"last_operation,omitempty"`
	ProtocolEnabled                     bool              `protobuf:"varint,61,opt,name=protocol_enabled,json=protocolEnabled,proto3" json:"protocol_enabled,omitempty"`
	DetailFibIntInformation             *FibShIntDet      `protobuf:"bytes,62,opt,name=detail_fib_int_information,json=detailFibIntInformation,proto3" json:"detail_fib_int_information,omitempty"`
	ReferanceCountForProtocol           uint32            `protobuf:"varint,63,opt,name=referance_count_for_protocol,json=referanceCountForProtocol,proto3" json:"referance_count_for_protocol,omitempty"`
	NumberOfInputPackets                uint64            `protobuf:"varint,64,opt,name=number_of_input_packets,json=numberOfInputPackets,proto3" json:"number_of_input_packets,omitempty"`
	NumberOfInputBytes                  uint64            `protobuf:"varint,65,opt,name=number_of_input_bytes,json=numberOfInputBytes,proto3" json:"number_of_input_bytes,omitempty"`
	NumberOfOutputPackets               uint64            `protobuf:"varint,66,opt,name=number_of_output_packets,json=numberOfOutputPackets,proto3" json:"number_of_output_packets,omitempty"`
	NumberOfOutputBytes                 uint64            `protobuf:"varint,67,opt,name=number_of_output_bytes,json=numberOfOutputBytes,proto3" json:"number_of_output_bytes,omitempty"`
	InterfaceUpFlag                     bool              `protobuf:"varint,68,opt,name=interface_up_flag,json=interfaceUpFlag,proto3" json:"interface_up_flag,omitempty"`
	PerPacketLoadBalancingFlag          bool              `protobuf:"varint,69,opt,name=per_packet_load_balancing_flag,json=perPacketLoadBalancingFlag,proto3" json:"per_packet_load_balancing_flag,omitempty"`
	P2PInterfaceFlag                    bool              `protobuf:"varint,70,opt,name=p2p_interface_flag,json=p2pInterfaceFlag,proto3" json:"p2p_interface_flag,omitempty"`
	LoopbackInterfaceFlag               bool              `protobuf:"varint,71,opt,name=loopback_interface_flag,json=loopbackInterfaceFlag,proto3" json:"loopback_interface_flag,omitempty"`
	NullInterfaceFlag                   bool              `protobuf:"varint,72,opt,name=null_interface_flag,json=nullInterfaceFlag,proto3" json:"null_interface_flag,omitempty"`
	TunnelInterfaceFlag                 bool              `protobuf:"varint,73,opt,name=tunnel_interface_flag,json=tunnelInterfaceFlag,proto3" json:"tunnel_interface_flag,omitempty"`
	GreTunnelInterfaceFlag              bool              `protobuf:"varint,74,opt,name=gre_tunnel_interface_flag,json=greTunnelInterfaceFlag,proto3" json:"gre_tunnel_interface_flag,omitempty"`
	PuntPacketsFromFibSwitchingFlag     bool              `protobuf:"varint,75,opt,name=punt_packets_from_fib_switching_flag,json=puntPacketsFromFibSwitchingFlag,proto3" json:"punt_packets_from_fib_switching_flag,omitempty"`
	DropPacketsWhileFibSwitchingFlag    bool              `protobuf:"varint,76,opt,name=drop_packets_while_fib_switching_flag,json=dropPacketsWhileFibSwitchingFlag,proto3" json:"drop_packets_while_fib_switching_flag,omitempty"`
	PuntPacketsFromLinecardFlag         bool              `protobuf:"varint,77,opt,name=punt_packets_from_linecard_flag,json=puntPacketsFromLinecardFlag,proto3" json:"punt_packets_from_linecard_flag,omitempty"`
	PrimaryIpv4Address                  string            `protobuf:"bytes,78,opt,name=primary_ipv4_address,json=primaryIpv4Address,proto3" json:"primary_ipv4_address,omitempty"`
	PrimaryIpv6Address                  string            `protobuf:"bytes,79,opt,name=primary_ipv6_address,json=primaryIpv6Address,proto3" json:"primary_ipv6_address,omitempty"`
	SiInternal                          *FibShIntInternal `protobuf:"bytes,80,opt,name=si_internal,json=siInternal,proto3" json:"si_internal,omitempty"`
	XXX_NoUnkeyedLiteral                struct{}          `json:"-"`
	XXX_unrecognized                    []byte            `json:"-"`
	XXX_sizecache                       int32             `json:"-"`
}

func (m *FibShInt) Reset()         { *m = FibShInt{} }
func (m *FibShInt) String() string { return proto.CompactTextString(m) }
func (*FibShInt) ProtoMessage()    {}
func (*FibShInt) Descriptor() ([]byte, []int) {
	return fileDescriptor_355fccdb923d1d69, []int{5}
}

func (m *FibShInt) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FibShInt.Unmarshal(m, b)
}
func (m *FibShInt) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FibShInt.Marshal(b, m, deterministic)
}
func (m *FibShInt) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FibShInt.Merge(m, src)
}
func (m *FibShInt) XXX_Size() int {
	return xxx_messageInfo_FibShInt.Size(m)
}
func (m *FibShInt) XXX_DiscardUnknown() {
	xxx_messageInfo_FibShInt.DiscardUnknown(m)
}

var xxx_messageInfo_FibShInt proto.InternalMessageInfo

func (m *FibShInt) GetPerInterface() string {
	if m != nil {
		return m.PerInterface
	}
	return ""
}

func (m *FibShInt) GetFibInterfaceType() uint32 {
	if m != nil {
		return m.FibInterfaceType
	}
	return 0
}

func (m *FibShInt) GetFibIdPointer() uint32 {
	if m != nil {
		return m.FibIdPointer
	}
	return 0
}

func (m *FibShInt) GetFibIdFlags() uint32 {
	if m != nil {
		return m.FibIdFlags
	}
	return 0
}

func (m *FibShInt) GetFibIdExtensionPointer() uint32 {
	if m != nil {
		return m.FibIdExtensionPointer
	}
	return 0
}

func (m *FibShInt) GetFibIdExtensionFlags() uint32 {
	if m != nil {
		return m.FibIdExtensionFlags
	}
	return 0
}

func (m *FibShInt) GetNumberOfDependentNextHopInformation() uint32 {
	if m != nil {
		return m.NumberOfDependentNextHopInformation
	}
	return 0
}

func (m *FibShInt) GetVrfLocalCefInformationPointer() uint32 {
	if m != nil {
		return m.VrfLocalCefInformationPointer
	}
	return 0
}

func (m *FibShInt) GetReferenceCount() uint32 {
	if m != nil {
		return m.ReferenceCount
	}
	return 0
}

func (m *FibShInt) GetLastModifiedTime() uint32 {
	if m != nil {
		return m.LastModifiedTime
	}
	return 0
}

func (m *FibShInt) GetLastOperation() string {
	if m != nil {
		return m.LastOperation
	}
	return ""
}

func (m *FibShInt) GetProtocolEnabled() bool {
	if m != nil {
		return m.ProtocolEnabled
	}
	return false
}

func (m *FibShInt) GetDetailFibIntInformation() *FibShIntDet {
	if m != nil {
		return m.DetailFibIntInformation
	}
	return nil
}

func (m *FibShInt) GetReferanceCountForProtocol() uint32 {
	if m != nil {
		return m.ReferanceCountForProtocol
	}
	return 0
}

func (m *FibShInt) GetNumberOfInputPackets() uint64 {
	if m != nil {
		return m.NumberOfInputPackets
	}
	return 0
}

func (m *FibShInt) GetNumberOfInputBytes() uint64 {
	if m != nil {
		return m.NumberOfInputBytes
	}
	return 0
}

func (m *FibShInt) GetNumberOfOutputPackets() uint64 {
	if m != nil {
		return m.NumberOfOutputPackets
	}
	return 0
}

func (m *FibShInt) GetNumberOfOutputBytes() uint64 {
	if m != nil {
		return m.NumberOfOutputBytes
	}
	return 0
}

func (m *FibShInt) GetInterfaceUpFlag() bool {
	if m != nil {
		return m.InterfaceUpFlag
	}
	return false
}

func (m *FibShInt) GetPerPacketLoadBalancingFlag() bool {
	if m != nil {
		return m.PerPacketLoadBalancingFlag
	}
	return false
}

func (m *FibShInt) GetP2PInterfaceFlag() bool {
	if m != nil {
		return m.P2PInterfaceFlag
	}
	return false
}

func (m *FibShInt) GetLoopbackInterfaceFlag() bool {
	if m != nil {
		return m.LoopbackInterfaceFlag
	}
	return false
}

func (m *FibShInt) GetNullInterfaceFlag() bool {
	if m != nil {
		return m.NullInterfaceFlag
	}
	return false
}

func (m *FibShInt) GetTunnelInterfaceFlag() bool {
	if m != nil {
		return m.TunnelInterfaceFlag
	}
	return false
}

func (m *FibShInt) GetGreTunnelInterfaceFlag() bool {
	if m != nil {
		return m.GreTunnelInterfaceFlag
	}
	return false
}

func (m *FibShInt) GetPuntPacketsFromFibSwitchingFlag() bool {
	if m != nil {
		return m.PuntPacketsFromFibSwitchingFlag
	}
	return false
}

func (m *FibShInt) GetDropPacketsWhileFibSwitchingFlag() bool {
	if m != nil {
		return m.DropPacketsWhileFibSwitchingFlag
	}
	return false
}

func (m *FibShInt) GetPuntPacketsFromLinecardFlag() bool {
	if m != nil {
		return m.PuntPacketsFromLinecardFlag
	}
	return false
}

func (m *FibShInt) GetPrimaryIpv4Address() string {
	if m != nil {
		return m.PrimaryIpv4Address
	}
	return ""
}

func (m *FibShInt) GetPrimaryIpv6Address() string {
	if m != nil {
		return m.PrimaryIpv6Address
	}
	return ""
}

func (m *FibShInt) GetSiInternal() *FibShIntInternal {
	if m != nil {
		return m.SiInternal
	}
	return nil
}

func init() {
	proto.RegisterType((*FibShInt_KEYS)(nil), "cisco_ios_xr_fib_common_oper.fib.nodes.node.protocols.protocol.vrfs.vrf.interface_infos.interface_info.interfaces.interface.fib_sh_int_KEYS")
	proto.RegisterType((*FibShIntDet)(nil), "cisco_ios_xr_fib_common_oper.fib.nodes.node.protocols.protocol.vrfs.vrf.interface_infos.interface_info.interfaces.interface.fib_sh_int_det")
	proto.RegisterType((*EvtHistEntry)(nil), "cisco_ios_xr_fib_common_oper.fib.nodes.node.protocols.protocol.vrfs.vrf.interface_infos.interface_info.interfaces.interface.evt_hist_entry")
	proto.RegisterType((*EvtHistInfo)(nil), "cisco_ios_xr_fib_common_oper.fib.nodes.node.protocols.protocol.vrfs.vrf.interface_infos.interface_info.interfaces.interface.evt_hist_info")
	proto.RegisterType((*FibShIntInternal)(nil), "cisco_ios_xr_fib_common_oper.fib.nodes.node.protocols.protocol.vrfs.vrf.interface_infos.interface_info.interfaces.interface.fib_sh_int_internal")
	proto.RegisterType((*FibShInt)(nil), "cisco_ios_xr_fib_common_oper.fib.nodes.node.protocols.protocol.vrfs.vrf.interface_infos.interface_info.interfaces.interface.fib_sh_int")
}

func init() { proto.RegisterFile("fib_sh_int.proto", fileDescriptor_355fccdb923d1d69) }

var fileDescriptor_355fccdb923d1d69 = []byte{
	// 1450 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xcc, 0x56, 0x4b, 0x53, 0x1c, 0x47,
	0x12, 0x8e, 0x11, 0x5a, 0x18, 0x8a, 0x97, 0xd4, 0x08, 0xd4, 0x08, 0x3d, 0x58, 0x40, 0x21, 0xb4,
	0xab, 0x98, 0xd8, 0x05, 0x09, 0xad, 0xd6, 0xb6, 0x1e, 0xbc, 0x0c, 0x16, 0x08, 0x62, 0x90, 0x42,
	0xe1, 0x53, 0x45, 0x75, 0x77, 0xf6, 0x4c, 0x05, 0xdd, 0x55, 0x15, 0xd5, 0x35, 0x03, 0x13, 0xbe,
	0xf8, 0x6c, 0x5f, 0xfc, 0x37, 0x74, 0xf0, 0x45, 0x27, 0x1d, 0x7d, 0xf5, 0xcf, 0xf0, 0x3f, 0x71,
	0x54, 0x56, 0x77, 0xcf, 0x03, 0xd0, 0x55, 0xba, 0x4c, 0xf4, 0x64, 0x7e, 0xdf, 0x57, 0x99, 0x55,
	0x95, 0x59, 0x49, 0xae, 0xc5, 0x3c, 0xa0, 0x59, 0x93, 0x72, 0x61, 0x6a, 0x4a, 0x4b, 0x23, 0xbd,
	0x9f, 0x42, 0x9e, 0x85, 0x92, 0x72, 0x99, 0xd1, 0x33, 0x4d, 0xad, 0x3b, 0x94, 0x69, 0x2a, 0x05,
	0x95, 0x0a, 0x74, 0x2d, 0xe6, 0x41, 0x4d, 0xc8, 0x08, 0x32, 0xfc, 0x75, 0x94, 0x50, 0x26, 0x59,
	0xf9, 0x55, 0x6b, 0xeb, 0x38, 0xb3, 0x3f, 0x35, 0x2e, 0x0c, 0xe8, 0x98, 0x85, 0x40, 0xb9, 0x88,
	0x65, 0x36, 0xf0, 0xbf, 0xfb, 0xb7, 0xc7, 0xb3, 0xf8, 0xb1, 0x42, 0xa6, 0xba, 0x11, 0xd1, 0xd7,
	0xdb, 0x3f, 0x1e, 0x7b, 0xf3, 0x64, 0xd4, 0xae, 0x45, 0x05, 0x4b, 0xc1, 0xaf, 0x2c, 0x54, 0x56,
	0x46, 0xeb, 0x55, 0x6b, 0x78, 0xc3, 0x52, 0xf0, 0x96, 0xc8, 0x44, 0xb1, 0xb2, 0x03, 0x5c, 0x41,
	0xc0, 0x78, 0x61, 0x44, 0xd0, 0x1c, 0xa9, 0xb6, 0x75, 0xec, 0xfc, 0x43, 0xe8, 0x1f, 0x69, 0xeb,
	0x18, 0x5d, 0xf3, 0x64, 0x34, 0xe1, 0xe2, 0x84, 0x9a, 0x8e, 0x02, 0xff, 0xaa, 0x13, 0xb7, 0x86,
	0xb7, 0x1d, 0x05, 0xde, 0x7d, 0x32, 0xd9, 0x0d, 0x1a, 0xd9, 0xff, 0x40, 0xc4, 0x44, 0x69, 0xb5,
	0x1a, 0x8b, 0x1f, 0x86, 0xc9, 0x64, 0x4f, 0xd0, 0x11, 0x18, 0x1b, 0x56, 0x97, 0x99, 0x9a, 0x16,
	0xc6, 0x3d, 0x51, 0x1f, 0x2f, 0x8d, 0x07, 0xa6, 0xe5, 0x3d, 0x20, 0x53, 0xb1, 0xd4, 0xa7, 0x4c,
	0x47, 0x5c, 0x34, 0x68, 0x9c, 0xb0, 0x06, 0x46, 0x5f, 0xad, 0x4f, 0x76, 0xcd, 0x3b, 0x09, 0x6b,
	0x78, 0x35, 0x32, 0xad, 0x55, 0x4c, 0x43, 0x29, 0x62, 0xde, 0x68, 0x69, 0x88, 0x1c, 0x78, 0x08,
	0xc1, 0xd7, 0xb5, 0x8a, 0x37, 0x4b, 0x0f, 0xe2, 0xe7, 0x48, 0xd5, 0xe2, 0x53, 0x19, 0x15, 0x39,
	0x8d, 0x68, 0x15, 0x1f, 0xc8, 0x08, 0xbc, 0x35, 0x32, 0x1b, 0x41, 0xcc, 0x5a, 0x89, 0xa1, 0x5a,
	0xb6, 0x0c, 0xd0, 0x53, 0x6e, 0x9a, 0x54, 0xab, 0x18, 0x53, 0xab, 0xd6, 0xa7, 0x73, 0x6f, 0xdd,
	0x3a, 0xdf, 0x73, 0xd3, 0xac, 0xab, 0xd8, 0xfb, 0x37, 0xf1, 0x32, 0x48, 0x62, 0xaa, 0x6c, 0x9c,
	0x25, 0x61, 0x18, 0x09, 0x53, 0xd6, 0x73, 0xc4, 0x45, 0xa3, 0x00, 0x3f, 0x27, 0xb7, 0x83, 0x86,
	0xa2, 0x8a, 0x51, 0x2e, 0x54, 0xcb, 0x9c, 0x8b, 0x7a, 0x04, 0x69, 0x7e, 0xd0, 0x50, 0x47, 0x6c,
	0xcf, 0x22, 0x06, 0x82, 0x7f, 0x4d, 0x96, 0x32, 0xd9, 0xd2, 0x21, 0xd0, 0xcf, 0xca, 0x54, 0x51,
	0xe6, 0xae, 0x83, 0x6e, 0x5c, 0x26, 0xf6, 0x8e, 0xac, 0x44, 0x90, 0x19, 0x2e, 0x98, 0xe1, 0x52,
	0x7c, 0x5e, 0x71, 0x14, 0x15, 0x97, 0x7a, 0xf0, 0x97, 0xca, 0xbe, 0x24, 0x77, 0x72, 0x29, 0xd9,
	0x32, 0x17, 0x69, 0x11, 0xd4, 0x9a, 0xc3, 0x24, 0x0f, 0x11, 0x32, 0xa0, 0x70, 0x40, 0x96, 0xfb,
	0xb3, 0xbc, 0x44, 0x68, 0x0c, 0x85, 0xee, 0xf5, 0xa4, 0x79, 0xa1, 0xdc, 0x7b, 0xf2, 0xf0, 0x82,
	0x3c, 0x2f, 0xd1, 0x1c, 0x47, 0xcd, 0xe5, 0xc1, 0x44, 0x2f, 0x14, 0x9e, 0x27, 0xa3, 0x3c, 0x4c,
	0x95, 0x23, 0x4e, 0xe0, 0x25, 0xae, 0x5a, 0x03, 0x3a, 0xff, 0x4b, 0x66, 0xd2, 0x56, 0x62, 0x38,
	0x4d, 0x58, 0x00, 0x09, 0x8d, 0xb4, 0xcc, 0x81, 0x93, 0xb8, 0x82, 0x87, 0xce, 0x7d, 0xeb, 0xdb,
	0xd2, 0x12, 0x29, 0x8b, 0x7f, 0x54, 0xc8, 0x24, 0xb4, 0x0d, 0x6d, 0xf2, 0xcc, 0x50, 0x10, 0x46,
	0x77, 0x6c, 0xad, 0x58, 0x8b, 0xe1, 0x29, 0x64, 0x86, 0xa5, 0x2a, 0xaf, 0xf1, 0x71, 0x68, 0x9b,
	0xb7, 0x85, 0xcd, 0x5e, 0x69, 0x0b, 0xea, 0x29, 0xf1, 0x11, 0x68, 0x9b, 0xa2, 0xba, 0x91, 0x6f,
	0x2b, 0x78, 0x08, 0x23, 0xb4, 0x2e, 0x2c, 0xe0, 0xdc, 0x95, 0x32, 0xd1, 0xc1, 0x42, 0xa8, 0xa2,
	0xeb, 0x80, 0x89, 0x8e, 0x77, 0x87, 0x10, 0xeb, 0xca, 0x0c, 0x0f, 0x4f, 0x3a, 0xf9, 0xe5, 0x1f,
	0x85, 0xb6, 0x39, 0x46, 0x43, 0xc1, 0x8c, 0x98, 0x61, 0xfe, 0xf0, 0xc2, 0x50, 0x2e, 0xba, 0xc5,
	0x0c, 0x5b, 0xfc, 0xab, 0xe2, 0x02, 0xc6, 0x14, 0x6c, 0x2b, 0xf3, 0x96, 0x5d, 0x4e, 0x61, 0xc2,
	0xb2, 0xac, 0xb7, 0x4d, 0xd9, 0x14, 0x36, 0xad, 0x11, 0xe3, 0xfc, 0x50, 0x21, 0x76, 0x01, 0x97,
	0xb5, 0x7f, 0x65, 0x61, 0x68, 0x65, 0x6c, 0xf5, 0xd7, 0x4a, 0xed, 0x0b, 0xb6, 0xdb, 0x5a, 0xff,
	0x49, 0xd4, 0x6d, 0xca, 0xdb, 0xf6, 0x6b, 0xf1, 0xe7, 0x21, 0x32, 0xdd, 0xd3, 0xd2, 0x90, 0x21,
	0x58, 0xe2, 0xfd, 0x5e, 0x21, 0xe3, 0xd6, 0xce, 0xa3, 0x00, 0x89, 0x98, 0xe8, 0xd8, 0xea, 0x2f,
	0x5f, 0x49, 0x1a, 0x16, 0x52, 0x27, 0x31, 0x0f, 0xf6, 0xa2, 0x60, 0x97, 0x67, 0xc6, 0xfb, 0x54,
	0x21, 0x1e, 0xe6, 0xa1, 0x0d, 0xd0, 0x26, 0xb0, 0xc8, 0x45, 0x7d, 0xe5, 0xeb, 0x8b, 0xda, 0x3e,
	0x7b, 0xc7, 0xda, 0xc0, 0x2e, 0xb0, 0xc8, 0x86, 0xbe, 0xf8, 0x69, 0x8a, 0x90, 0xee, 0x11, 0xe0,
	0x43, 0x07, 0x9a, 0x96, 0x74, 0x7f, 0x35, 0x7f, 0xe8, 0x40, 0xef, 0x15, 0x36, 0xef, 0x91, 0xcb,
	0xb6, 0xbb, 0x3a, 0x16, 0xc5, 0x1a, 0x16, 0x85, 0x7d, 0xe9, 0x4b, 0x24, 0x56, 0xc7, 0xb2, 0x7b,
	0xb6, 0x78, 0x44, 0x95, 0x44, 0x8a, 0xff, 0xd8, 0xbd, 0x52, 0xb8, 0x81, 0x47, 0xce, 0xe6, 0x2d,
	0x14, 0x27, 0x8e, 0xa5, 0x9d, 0xf9, 0x4f, 0x10, 0xe3, 0x36, 0xd9, 0x96, 0x74, 0xe6, 0x3d, 0x25,
	0x7e, 0x8e, 0x80, 0x33, 0x03, 0x22, 0xb3, 0x1d, 0xa8, 0x50, 0x5c, 0x47, 0xf4, 0x0c, 0xa2, 0xb7,
	0x0b, 0x6f, 0x21, 0xbd, 0x46, 0x66, 0xcf, 0x11, 0xdd, 0x22, 0x4f, 0x91, 0x36, 0xdd, 0x4f, 0x73,
	0xab, 0xbd, 0x23, 0x2b, 0xa2, 0x95, 0x06, 0xa0, 0xa9, 0x8c, 0x69, 0x04, 0x0a, 0x44, 0x04, 0xc2,
	0x50, 0x01, 0x67, 0x86, 0x36, 0xa5, 0xc2, 0xdd, 0xd4, 0x29, 0xb6, 0x35, 0xff, 0x7f, 0x28, 0xb3,
	0xe4, 0xf0, 0x87, 0xf1, 0x56, 0x81, 0x7e, 0x03, 0x67, 0x66, 0x57, 0xaa, 0xbd, 0x2e, 0xd4, 0xdb,
	0x25, 0xff, 0xb4, 0x33, 0x42, 0x22, 0x43, 0x96, 0xd0, 0x10, 0xe2, 0x5e, 0x9d, 0x32, 0x9b, 0x67,
	0xa8, 0x77, 0xa7, 0xad, 0xe3, 0x7d, 0x8b, 0xdb, 0x84, 0xb8, 0x47, 0xa2, 0xc8, 0xea, 0x01, 0x99,
	0xd2, 0x10, 0x83, 0x06, 0x11, 0x02, 0x0d, 0x65, 0x4b, 0x18, 0xff, 0xff, 0xc8, 0x9b, 0x2c, 0xcd,
	0x9b, 0xd6, 0x6a, 0x4f, 0x2b, 0x61, 0x99, 0xb1, 0xef, 0x34, 0x8f, 0x39, 0x44, 0xd8, 0x02, 0xfd,
	0x6f, 0xdc, 0x69, 0x59, 0xcf, 0x41, 0xee, 0xb0, 0x6d, 0xd0, 0x0e, 0x23, 0x88, 0xb6, 0x57, 0xd3,
	0x65, 0xf7, 0xad, 0x1b, 0x46, 0xac, 0xf5, 0xb0, 0x30, 0x7a, 0x0f, 0xc9, 0xb5, 0x72, 0x20, 0x02,
	0xc1, 0x82, 0x04, 0x22, 0xff, 0x3b, 0xf7, 0x52, 0x17, 0xf6, 0x6d, 0x67, 0xf6, 0xfe, 0xac, 0x90,
	0x5b, 0x11, 0x18, 0xc6, 0x13, 0x9a, 0xdf, 0x9a, 0xbe, 0xcd, 0x7b, 0x8e, 0x45, 0xf2, 0x85, 0x3b,
	0x54, 0xff, 0x5c, 0x55, 0xbf, 0xe9, 0xe2, 0xdd, 0xc1, 0xab, 0xdc, 0x7b, 0x7c, 0x2f, 0xc8, 0x6d,
	0xdc, 0x5d, 0x56, 0x6e, 0x3a, 0x8d, 0xa5, 0xa6, 0x45, 0x10, 0xfe, 0x0b, 0xdc, 0xd5, 0xb9, 0x12,
	0x83, 0x27, 0xb0, 0x23, 0xf5, 0x51, 0x0e, 0xf0, 0x9e, 0x90, 0x9b, 0xdd, 0x6b, 0xe5, 0x06, 0x04,
	0xc5, 0xc2, 0x13, 0x30, 0x99, 0xff, 0x72, 0xa1, 0xb2, 0x72, 0xb5, 0x7e, 0xa3, 0xb8, 0x45, 0x38,
	0x10, 0x1c, 0x39, 0x9f, 0x7d, 0x02, 0x07, 0x69, 0x41, 0xc7, 0x40, 0xe6, 0xbf, 0x42, 0x92, 0xd7,
	0x47, 0xda, 0xb0, 0x1e, 0x5b, 0x2e, 0x5d, 0x4a, 0xfe, 0x44, 0x17, 0x4b, 0x6d, 0x20, 0x6b, 0xa6,
	0x60, 0xb9, 0x27, 0xb9, 0x58, 0x6b, 0x8d, 0xcc, 0x9e, 0x23, 0xba, 0xc5, 0x36, 0x91, 0x36, 0xdd,
	0x4f, 0x73, 0xab, 0xfd, 0x8b, 0x5c, 0xef, 0xee, 0x73, 0x2b, 0x7f, 0x9f, 0xb7, 0xdc, 0x85, 0x28,
	0x1d, 0xef, 0xdc, 0x7b, 0xbe, 0x41, 0xee, 0xda, 0x1e, 0xe3, 0x82, 0xa1, 0x89, 0x64, 0x11, 0x0d,
	0x58, 0xc2, 0x44, 0x58, 0xce, 0xa7, 0xdb, 0x48, 0xbc, 0xa5, 0x40, 0xbb, 0xa0, 0xf6, 0x25, 0x8b,
	0x36, 0x0a, 0x08, 0x6a, 0x3c, 0x22, 0x9e, 0x5a, 0x55, 0x3d, 0x2d, 0x08, 0x79, 0x3b, 0xc8, 0xbb,
	0xa6, 0x56, 0x55, 0xd9, 0x82, 0x10, 0xbd, 0x4e, 0x6e, 0x26, 0x52, 0xaa, 0x80, 0x85, 0x27, 0x83,
	0x94, 0xef, 0x91, 0x32, 0x53, 0xb8, 0xfb, 0x79, 0x35, 0x32, 0x2d, 0x5a, 0x49, 0x32, 0xc8, 0xd9,
	0x75, 0x13, 0xb1, 0x75, 0xf5, 0xe3, 0x57, 0xc9, 0x8c, 0x69, 0x09, 0x01, 0xe7, 0x18, 0x7b, 0x6e,
	0xea, 0x75, 0xce, 0x7e, 0xce, 0x33, 0x32, 0xd7, 0xd0, 0x40, 0x2f, 0xe6, 0xfd, 0x80, 0xbc, 0xd9,
	0x86, 0x86, 0xb7, 0x17, 0x50, 0x0f, 0xc8, 0xb2, 0xb2, 0x57, 0x30, 0x3f, 0x56, 0x1a, 0x6b, 0x99,
	0x62, 0xe5, 0x64, 0xa7, 0xdc, 0x84, 0xcd, 0x72, 0x3b, 0x5f, 0xbb, 0xe9, 0xce, 0x62, 0xf3, 0x43,
	0xde, 0xd1, 0x32, 0xdd, 0xe1, 0xc1, 0x71, 0x81, 0x43, 0xb9, 0x43, 0x72, 0x1f, 0x67, 0xab, 0x42,
	0xee, 0xb4, 0xc9, 0x13, 0xb8, 0x48, 0x6f, 0x1f, 0xf5, 0x16, 0x2c, 0x38, 0xd7, 0x7b, 0x6f, 0xa1,
	0xe7, 0x04, 0xb7, 0xc8, 0xbd, 0xf3, 0xf1, 0x25, 0x5c, 0x40, 0xc8, 0x74, 0x3e, 0x24, 0x1e, 0xa0,
	0xd4, 0xfc, 0x40, 0x68, 0xfb, 0x39, 0x06, 0x55, 0xfe, 0x43, 0x6e, 0x28, 0xcd, 0x53, 0xa6, 0x3b,
	0x94, 0xab, 0xf6, 0x63, 0xca, 0xa2, 0x48, 0x43, 0x96, 0xf9, 0x6f, 0xb0, 0x2f, 0x79, 0xb9, 0x6f,
	0x4f, 0xb5, 0x1f, 0xbf, 0x72, 0x9e, 0x01, 0xc6, 0x7a, 0xc9, 0x38, 0x1c, 0x64, 0xac, 0x17, 0x8c,
	0x8f, 0x15, 0x32, 0x96, 0xf1, 0x72, 0x00, 0xf1, 0x8f, 0xb0, 0x29, 0xfd, 0xf6, 0xd5, 0x34, 0xa5,
	0x22, 0xb0, 0x3a, 0xc9, 0xf8, 0x5e, 0xfe, 0x1d, 0x0c, 0xe3, 0x32, 0x6b, 0x7f, 0x07, 0x00, 0x00,
	0xff, 0xff, 0xe5, 0x39, 0x21, 0x53, 0x5d, 0x0f, 0x00, 0x00,
}
