/*
Copyright 2019 Cisco Systems

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: bfd_mgmt_mib_database.proto

package cisco_ios_xr_ip_bfd_oper_bfd_session_mibs_session_mib

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type BfdMgmtMibDatabase_KEYS struct {
	Discriminator        uint32   `protobuf:"varint,1,opt,name=discriminator,proto3" json:"discriminator,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BfdMgmtMibDatabase_KEYS) Reset()         { *m = BfdMgmtMibDatabase_KEYS{} }
func (m *BfdMgmtMibDatabase_KEYS) String() string { return proto.CompactTextString(m) }
func (*BfdMgmtMibDatabase_KEYS) ProtoMessage()    {}
func (*BfdMgmtMibDatabase_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_5b461f1029b2c99b, []int{0}
}

func (m *BfdMgmtMibDatabase_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BfdMgmtMibDatabase_KEYS.Unmarshal(m, b)
}
func (m *BfdMgmtMibDatabase_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BfdMgmtMibDatabase_KEYS.Marshal(b, m, deterministic)
}
func (m *BfdMgmtMibDatabase_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BfdMgmtMibDatabase_KEYS.Merge(m, src)
}
func (m *BfdMgmtMibDatabase_KEYS) XXX_Size() int {
	return xxx_messageInfo_BfdMgmtMibDatabase_KEYS.Size(m)
}
func (m *BfdMgmtMibDatabase_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_BfdMgmtMibDatabase_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_BfdMgmtMibDatabase_KEYS proto.InternalMessageInfo

func (m *BfdMgmtMibDatabase_KEYS) GetDiscriminator() uint32 {
	if m != nil {
		return m.Discriminator
	}
	return 0
}

type IpAddrTUnion struct {
	Afi                  string   `protobuf:"bytes,1,opt,name=afi,proto3" json:"afi,omitempty"`
	Dummy                uint32   `protobuf:"varint,2,opt,name=dummy,proto3" json:"dummy,omitempty"`
	Ipv4                 string   `protobuf:"bytes,3,opt,name=ipv4,proto3" json:"ipv4,omitempty"`
	Ipv6                 string   `protobuf:"bytes,4,opt,name=ipv6,proto3" json:"ipv6,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IpAddrTUnion) Reset()         { *m = IpAddrTUnion{} }
func (m *IpAddrTUnion) String() string { return proto.CompactTextString(m) }
func (*IpAddrTUnion) ProtoMessage()    {}
func (*IpAddrTUnion) Descriptor() ([]byte, []int) {
	return fileDescriptor_5b461f1029b2c99b, []int{1}
}

func (m *IpAddrTUnion) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IpAddrTUnion.Unmarshal(m, b)
}
func (m *IpAddrTUnion) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IpAddrTUnion.Marshal(b, m, deterministic)
}
func (m *IpAddrTUnion) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IpAddrTUnion.Merge(m, src)
}
func (m *IpAddrTUnion) XXX_Size() int {
	return xxx_messageInfo_IpAddrTUnion.Size(m)
}
func (m *IpAddrTUnion) XXX_DiscardUnknown() {
	xxx_messageInfo_IpAddrTUnion.DiscardUnknown(m)
}

var xxx_messageInfo_IpAddrTUnion proto.InternalMessageInfo

func (m *IpAddrTUnion) GetAfi() string {
	if m != nil {
		return m.Afi
	}
	return ""
}

func (m *IpAddrTUnion) GetDummy() uint32 {
	if m != nil {
		return m.Dummy
	}
	return 0
}

func (m *IpAddrTUnion) GetIpv4() string {
	if m != nil {
		return m.Ipv4
	}
	return ""
}

func (m *IpAddrTUnion) GetIpv6() string {
	if m != nil {
		return m.Ipv6
	}
	return ""
}

type BfdMgmtMibDatabase struct {
	LocalDiscriminator        uint32        `protobuf:"varint,50,opt,name=local_discriminator,json=localDiscriminator,proto3" json:"local_discriminator,omitempty"`
	RemoteDiscriminator       uint32        `protobuf:"varint,51,opt,name=remote_discriminator,json=remoteDiscriminator,proto3" json:"remote_discriminator,omitempty"`
	Sessionversion            uint32        `protobuf:"varint,52,opt,name=sessionversion,proto3" json:"sessionversion,omitempty"`
	SessionState              uint32        `protobuf:"varint,53,opt,name=session_state,json=sessionState,proto3" json:"session_state,omitempty"`
	TrapBitmap                uint32        `protobuf:"varint,54,opt,name=trap_bitmap,json=trapBitmap,proto3" json:"trap_bitmap,omitempty"`
	PktIn                     uint64        `protobuf:"varint,55,opt,name=pkt_in,json=pktIn,proto3" json:"pkt_in,omitempty"`
	PktOut                    uint64        `protobuf:"varint,56,opt,name=pkt_out,json=pktOut,proto3" json:"pkt_out,omitempty"`
	LastUpTimeSec             uint64        `protobuf:"varint,57,opt,name=last_up_time_sec,json=lastUpTimeSec,proto3" json:"last_up_time_sec,omitempty"`
	LastUpTimeNsec            uint32        `protobuf:"varint,58,opt,name=last_up_time_nsec,json=lastUpTimeNsec,proto3" json:"last_up_time_nsec,omitempty"`
	LastDownTimeSec           uint64        `protobuf:"varint,59,opt,name=last_down_time_sec,json=lastDownTimeSec,proto3" json:"last_down_time_sec,omitempty"`
	LastDownTimeNsec          uint32        `protobuf:"varint,60,opt,name=last_down_time_nsec,json=lastDownTimeNsec,proto3" json:"last_down_time_nsec,omitempty"`
	LastDownDiag              string        `protobuf:"bytes,61,opt,name=last_down_diag,json=lastDownDiag,proto3" json:"last_down_diag,omitempty"`
	UpCounter                 uint32        `protobuf:"varint,62,opt,name=up_counter,json=upCounter,proto3" json:"up_counter,omitempty"`
	LastTimeCached            uint64        `protobuf:"varint,63,opt,name=last_time_cached,json=lastTimeCached,proto3" json:"last_time_cached,omitempty"`
	DestAddress               *IpAddrTUnion `protobuf:"bytes,64,opt,name=dest_address,json=destAddress,proto3" json:"dest_address,omitempty"`
	InterfaceName             string        `protobuf:"bytes,65,opt,name=interface_name,json=interfaceName,proto3" json:"interface_name,omitempty"`
	IntHandle                 uint32        `protobuf:"varint,66,opt,name=int_handle,json=intHandle,proto3" json:"int_handle,omitempty"`
	DetectionMultiplier       uint32        `protobuf:"varint,67,opt,name=detection_multiplier,json=detectionMultiplier,proto3" json:"detection_multiplier,omitempty"`
	DesiredMinTxInterval      uint32        `protobuf:"varint,68,opt,name=desired_min_tx_interval,json=desiredMinTxInterval,proto3" json:"desired_min_tx_interval,omitempty"`
	RequiredMinRxInterval     uint32        `protobuf:"varint,69,opt,name=required_min_rx_interval,json=requiredMinRxInterval,proto3" json:"required_min_rx_interval,omitempty"`
	RequiredMinRxEchoInterval uint32        `protobuf:"varint,70,opt,name=required_min_rx_echo_interval,json=requiredMinRxEchoInterval,proto3" json:"required_min_rx_echo_interval,omitempty"`
	XXX_NoUnkeyedLiteral      struct{}      `json:"-"`
	XXX_unrecognized          []byte        `json:"-"`
	XXX_sizecache             int32         `json:"-"`
}

func (m *BfdMgmtMibDatabase) Reset()         { *m = BfdMgmtMibDatabase{} }
func (m *BfdMgmtMibDatabase) String() string { return proto.CompactTextString(m) }
func (*BfdMgmtMibDatabase) ProtoMessage()    {}
func (*BfdMgmtMibDatabase) Descriptor() ([]byte, []int) {
	return fileDescriptor_5b461f1029b2c99b, []int{2}
}

func (m *BfdMgmtMibDatabase) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BfdMgmtMibDatabase.Unmarshal(m, b)
}
func (m *BfdMgmtMibDatabase) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BfdMgmtMibDatabase.Marshal(b, m, deterministic)
}
func (m *BfdMgmtMibDatabase) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BfdMgmtMibDatabase.Merge(m, src)
}
func (m *BfdMgmtMibDatabase) XXX_Size() int {
	return xxx_messageInfo_BfdMgmtMibDatabase.Size(m)
}
func (m *BfdMgmtMibDatabase) XXX_DiscardUnknown() {
	xxx_messageInfo_BfdMgmtMibDatabase.DiscardUnknown(m)
}

var xxx_messageInfo_BfdMgmtMibDatabase proto.InternalMessageInfo

func (m *BfdMgmtMibDatabase) GetLocalDiscriminator() uint32 {
	if m != nil {
		return m.LocalDiscriminator
	}
	return 0
}

func (m *BfdMgmtMibDatabase) GetRemoteDiscriminator() uint32 {
	if m != nil {
		return m.RemoteDiscriminator
	}
	return 0
}

func (m *BfdMgmtMibDatabase) GetSessionversion() uint32 {
	if m != nil {
		return m.Sessionversion
	}
	return 0
}

func (m *BfdMgmtMibDatabase) GetSessionState() uint32 {
	if m != nil {
		return m.SessionState
	}
	return 0
}

func (m *BfdMgmtMibDatabase) GetTrapBitmap() uint32 {
	if m != nil {
		return m.TrapBitmap
	}
	return 0
}

func (m *BfdMgmtMibDatabase) GetPktIn() uint64 {
	if m != nil {
		return m.PktIn
	}
	return 0
}

func (m *BfdMgmtMibDatabase) GetPktOut() uint64 {
	if m != nil {
		return m.PktOut
	}
	return 0
}

func (m *BfdMgmtMibDatabase) GetLastUpTimeSec() uint64 {
	if m != nil {
		return m.LastUpTimeSec
	}
	return 0
}

func (m *BfdMgmtMibDatabase) GetLastUpTimeNsec() uint32 {
	if m != nil {
		return m.LastUpTimeNsec
	}
	return 0
}

func (m *BfdMgmtMibDatabase) GetLastDownTimeSec() uint64 {
	if m != nil {
		return m.LastDownTimeSec
	}
	return 0
}

func (m *BfdMgmtMibDatabase) GetLastDownTimeNsec() uint32 {
	if m != nil {
		return m.LastDownTimeNsec
	}
	return 0
}

func (m *BfdMgmtMibDatabase) GetLastDownDiag() string {
	if m != nil {
		return m.LastDownDiag
	}
	return ""
}

func (m *BfdMgmtMibDatabase) GetUpCounter() uint32 {
	if m != nil {
		return m.UpCounter
	}
	return 0
}

func (m *BfdMgmtMibDatabase) GetLastTimeCached() uint64 {
	if m != nil {
		return m.LastTimeCached
	}
	return 0
}

func (m *BfdMgmtMibDatabase) GetDestAddress() *IpAddrTUnion {
	if m != nil {
		return m.DestAddress
	}
	return nil
}

func (m *BfdMgmtMibDatabase) GetInterfaceName() string {
	if m != nil {
		return m.InterfaceName
	}
	return ""
}

func (m *BfdMgmtMibDatabase) GetIntHandle() uint32 {
	if m != nil {
		return m.IntHandle
	}
	return 0
}

func (m *BfdMgmtMibDatabase) GetDetectionMultiplier() uint32 {
	if m != nil {
		return m.DetectionMultiplier
	}
	return 0
}

func (m *BfdMgmtMibDatabase) GetDesiredMinTxInterval() uint32 {
	if m != nil {
		return m.DesiredMinTxInterval
	}
	return 0
}

func (m *BfdMgmtMibDatabase) GetRequiredMinRxInterval() uint32 {
	if m != nil {
		return m.RequiredMinRxInterval
	}
	return 0
}

func (m *BfdMgmtMibDatabase) GetRequiredMinRxEchoInterval() uint32 {
	if m != nil {
		return m.RequiredMinRxEchoInterval
	}
	return 0
}

func init() {
	proto.RegisterType((*BfdMgmtMibDatabase_KEYS)(nil), "cisco_ios_xr_ip_bfd_oper.bfd.session_mibs.session_mib.bfd_mgmt_mib_database_KEYS")
	proto.RegisterType((*IpAddrTUnion)(nil), "cisco_ios_xr_ip_bfd_oper.bfd.session_mibs.session_mib.ip_addr_t_union")
	proto.RegisterType((*BfdMgmtMibDatabase)(nil), "cisco_ios_xr_ip_bfd_oper.bfd.session_mibs.session_mib.bfd_mgmt_mib_database")
}

func init() { proto.RegisterFile("bfd_mgmt_mib_database.proto", fileDescriptor_5b461f1029b2c99b) }

var fileDescriptor_5b461f1029b2c99b = []byte{
	// 626 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x54, 0x59, 0x4f, 0x1b, 0x3f,
	0x10, 0x57, 0xfe, 0x5c, 0x62, 0x20, 0xc0, 0xdf, 0x80, 0x70, 0x5b, 0xa1, 0x22, 0x4a, 0xdb, 0x54,
	0x55, 0x53, 0x95, 0xb3, 0x77, 0x39, 0x02, 0x2a, 0xaa, 0xa0, 0x52, 0xa0, 0x0f, 0x7d, 0xb2, 0x9c,
	0xb5, 0x43, 0x46, 0x64, 0xed, 0xad, 0xed, 0x05, 0xfa, 0x25, 0xfb, 0x99, 0x2a, 0xcf, 0xe6, 0x16,
	0x4f, 0x7d, 0x8a, 0xfd, 0xbb, 0x66, 0xc6, 0x99, 0x04, 0x1e, 0x35, 0x9a, 0x4a, 0xa4, 0x57, 0x69,
	0x10, 0x29, 0x36, 0x84, 0x92, 0x41, 0x36, 0xa4, 0xd7, 0xd5, 0xcc, 0xd9, 0x60, 0xd9, 0x4e, 0x82,
	0x3e, 0xb1, 0x02, 0xad, 0x17, 0x77, 0x4e, 0x60, 0x26, 0xa2, 0xd8, 0x66, 0xda, 0x55, 0x1b, 0x4d,
	0x55, 0xf5, 0xda, 0x7b, 0xb4, 0x26, 0x1a, 0xfd, 0xe0, 0x65, 0xfd, 0x10, 0x1e, 0xde, 0x9b, 0x2a,
	0xbe, 0x1d, 0xff, 0xbc, 0x60, 0x1b, 0x50, 0x56, 0xe8, 0x13, 0x87, 0x29, 0x1a, 0x19, 0xac, 0xe3,
	0xa5, 0xb5, 0x52, 0xa5, 0x5c, 0x1f, 0x06, 0xd7, 0x25, 0xcc, 0x63, 0x26, 0xa4, 0x52, 0x4e, 0x04,
	0x91, 0x1b, 0xb4, 0x86, 0x2d, 0xc0, 0x98, 0x6c, 0x22, 0xc9, 0xa7, 0xeb, 0xf1, 0xc8, 0x96, 0x60,
	0x42, 0xe5, 0x69, 0xfa, 0x9b, 0xff, 0x47, 0x11, 0xc5, 0x85, 0x31, 0x18, 0xc7, 0xec, 0x66, 0x9b,
	0x8f, 0x91, 0x90, 0xce, 0x1d, 0x6c, 0x97, 0x8f, 0xf7, 0xb0, 0xdd, 0xf5, 0x3f, 0x53, 0xb0, 0x7c,
	0x6f, 0x9f, 0xec, 0x35, 0x2c, 0xb6, 0x6d, 0x22, 0xdb, 0x62, 0xb8, 0xd1, 0x4d, 0xaa, 0xc2, 0x88,
	0xaa, 0x0d, 0x32, 0xec, 0x0d, 0x2c, 0x39, 0x9d, 0xda, 0xa0, 0x47, 0x1c, 0x5b, 0xe4, 0x58, 0x2c,
	0xb8, 0x61, 0xcb, 0x33, 0x98, 0xeb, 0xbc, 0xd9, 0x8d, 0x76, 0xf1, 0x83, 0x6f, 0x93, 0x78, 0x04,
	0x65, 0x4f, 0xa0, 0xdc, 0x7d, 0x5b, 0x1f, 0x64, 0xd0, 0x7c, 0x87, 0x64, 0xb3, 0x1d, 0xf0, 0x22,
	0x62, 0xec, 0x31, 0xcc, 0x04, 0x27, 0x33, 0xd1, 0xc0, 0x90, 0xca, 0x8c, 0xef, 0x92, 0x04, 0x22,
	0x74, 0x48, 0x08, 0x5b, 0x86, 0xc9, 0xec, 0x3a, 0x08, 0x34, 0x7c, 0x6f, 0xad, 0x54, 0x19, 0xaf,
	0x4f, 0x64, 0xd7, 0xe1, 0xd4, 0xb0, 0x15, 0x98, 0x8a, 0xb0, 0xcd, 0x03, 0x7f, 0x4b, 0x78, 0x54,
	0x7d, 0xcf, 0x03, 0x7b, 0x0e, 0x0b, 0x6d, 0xe9, 0x83, 0xc8, 0x33, 0x11, 0x30, 0xd5, 0xc2, 0xeb,
	0x84, 0xbf, 0x23, 0x45, 0x39, 0xe2, 0x3f, 0xb2, 0x4b, 0x4c, 0xf5, 0x85, 0x4e, 0xd8, 0x0b, 0xf8,
	0x7f, 0x48, 0x68, 0xa2, 0xf2, 0x7d, 0x31, 0x49, 0x5f, 0x79, 0xee, 0x75, 0xc2, 0x5e, 0x02, 0x23,
	0xa9, 0xb2, 0xb7, 0xa6, 0x9f, 0xfa, 0x81, 0x52, 0xe7, 0x23, 0x53, 0xb3, 0xb7, 0xa6, 0x9b, 0xfb,
	0x0a, 0x16, 0x47, 0xc4, 0x94, 0xfc, 0x91, 0x92, 0x17, 0x06, 0xd5, 0x94, 0xbd, 0x01, 0x73, 0x7d,
	0xb9, 0x42, 0x79, 0xc5, 0x3f, 0xd1, 0x37, 0x3d, 0xdb, 0x55, 0xd6, 0x50, 0x5e, 0xb1, 0x55, 0x80,
	0x3c, 0x13, 0x89, 0xcd, 0x4d, 0xd0, 0x8e, 0x7f, 0xa6, 0xac, 0xe9, 0x3c, 0x3b, 0x2a, 0x00, 0x56,
	0xe9, 0x0c, 0x4d, 0xe5, 0x12, 0x99, 0xb4, 0xb4, 0xe2, 0x5f, 0xa8, 0x3d, 0x0a, 0x8f, 0xc5, 0x8e,
	0x08, 0x65, 0x08, 0xb3, 0x4a, 0xfb, 0x40, 0xfb, 0xa9, 0xbd, 0xe7, 0xfb, 0x6b, 0xa5, 0xca, 0xcc,
	0xe6, 0x49, 0xf5, 0x9f, 0x7e, 0x2f, 0xd5, 0x91, 0x45, 0xaf, 0xcf, 0xc4, 0xec, 0x83, 0x22, 0x9a,
	0x3d, 0x85, 0x39, 0x8c, 0xdd, 0x35, 0x65, 0xa2, 0x85, 0x91, 0xa9, 0xe6, 0x07, 0x34, 0x59, 0xb9,
	0x87, 0x9e, 0xcb, 0x54, 0xc7, 0xd1, 0xd0, 0x04, 0xd1, 0x92, 0x46, 0xb5, 0x35, 0x3f, 0x2c, 0x46,
	0x43, 0x13, 0xbe, 0x12, 0x10, 0x17, 0x54, 0xe9, 0xa0, 0x93, 0x40, 0x35, 0xf3, 0x76, 0xc0, 0xac,
	0x8d, 0xda, 0xf1, 0xa3, 0x62, 0x41, 0x7b, 0xdc, 0x59, 0x8f, 0x62, 0x3b, 0xb0, 0xa2, 0xb4, 0x47,
	0xa7, 0x95, 0x48, 0xd1, 0x88, 0x70, 0x27, 0xa8, 0xe2, 0x8d, 0x6c, 0xf3, 0x1a, 0xb9, 0x96, 0x3a,
	0xf4, 0x19, 0x9a, 0xcb, 0xbb, 0xd3, 0x0e, 0xc7, 0xf6, 0x80, 0x3b, 0xfd, 0x2b, 0xef, 0xf9, 0xdc,
	0x80, 0xef, 0x98, 0x7c, 0xcb, 0x5d, 0xfe, 0x0c, 0x4d, 0xbd, 0x6f, 0xdc, 0x87, 0xd5, 0x51, 0xa3,
	0x4e, 0x5a, 0xb6, 0xef, 0x3e, 0x21, 0xf7, 0x83, 0x21, 0xf7, 0x71, 0xd2, 0xb2, 0xdd, 0x84, 0xc6,
	0x24, 0xfd, 0x6b, 0x6d, 0xfd, 0x0d, 0x00, 0x00, 0xff, 0xff, 0xd8, 0x4f, 0x76, 0x3f, 0xd4, 0x04,
	0x00, 0x00,
}
