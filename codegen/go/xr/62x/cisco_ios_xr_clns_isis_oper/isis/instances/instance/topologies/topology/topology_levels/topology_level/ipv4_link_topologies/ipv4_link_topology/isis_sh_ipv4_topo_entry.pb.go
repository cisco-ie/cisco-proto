/*
Copyright 2019 Cisco Systems

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: isis_sh_ipv4_topo_entry.proto

package cisco_ios_xr_clns_isis_oper_isis_instances_instance_topologies_topology_topology_levels_topology_level_ipv4_link_topologies_ipv4_link_topology

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type IsisShIpv4TopoEntry_KEYS struct {
	InstanceName         string   `protobuf:"bytes,1,opt,name=instance_name,json=instanceName,proto3" json:"instance_name,omitempty"`
	AfName               string   `protobuf:"bytes,2,opt,name=af_name,json=afName,proto3" json:"af_name,omitempty"`
	SafName              string   `protobuf:"bytes,3,opt,name=saf_name,json=safName,proto3" json:"saf_name,omitempty"`
	TopologyName         string   `protobuf:"bytes,4,opt,name=topology_name,json=topologyName,proto3" json:"topology_name,omitempty"`
	Level                string   `protobuf:"bytes,5,opt,name=level,proto3" json:"level,omitempty"`
	SystemId             string   `protobuf:"bytes,6,opt,name=system_id,json=systemId,proto3" json:"system_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IsisShIpv4TopoEntry_KEYS) Reset()         { *m = IsisShIpv4TopoEntry_KEYS{} }
func (m *IsisShIpv4TopoEntry_KEYS) String() string { return proto.CompactTextString(m) }
func (*IsisShIpv4TopoEntry_KEYS) ProtoMessage()    {}
func (*IsisShIpv4TopoEntry_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_6cdb1da045927d12, []int{0}
}

func (m *IsisShIpv4TopoEntry_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IsisShIpv4TopoEntry_KEYS.Unmarshal(m, b)
}
func (m *IsisShIpv4TopoEntry_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IsisShIpv4TopoEntry_KEYS.Marshal(b, m, deterministic)
}
func (m *IsisShIpv4TopoEntry_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IsisShIpv4TopoEntry_KEYS.Merge(m, src)
}
func (m *IsisShIpv4TopoEntry_KEYS) XXX_Size() int {
	return xxx_messageInfo_IsisShIpv4TopoEntry_KEYS.Size(m)
}
func (m *IsisShIpv4TopoEntry_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_IsisShIpv4TopoEntry_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_IsisShIpv4TopoEntry_KEYS proto.InternalMessageInfo

func (m *IsisShIpv4TopoEntry_KEYS) GetInstanceName() string {
	if m != nil {
		return m.InstanceName
	}
	return ""
}

func (m *IsisShIpv4TopoEntry_KEYS) GetAfName() string {
	if m != nil {
		return m.AfName
	}
	return ""
}

func (m *IsisShIpv4TopoEntry_KEYS) GetSafName() string {
	if m != nil {
		return m.SafName
	}
	return ""
}

func (m *IsisShIpv4TopoEntry_KEYS) GetTopologyName() string {
	if m != nil {
		return m.TopologyName
	}
	return ""
}

func (m *IsisShIpv4TopoEntry_KEYS) GetLevel() string {
	if m != nil {
		return m.Level
	}
	return ""
}

func (m *IsisShIpv4TopoEntry_KEYS) GetSystemId() string {
	if m != nil {
		return m.SystemId
	}
	return ""
}

type NeighborSnpaItem struct {
	Value                string   `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NeighborSnpaItem) Reset()         { *m = NeighborSnpaItem{} }
func (m *NeighborSnpaItem) String() string { return proto.CompactTextString(m) }
func (*NeighborSnpaItem) ProtoMessage()    {}
func (*NeighborSnpaItem) Descriptor() ([]byte, []int) {
	return fileDescriptor_6cdb1da045927d12, []int{1}
}

func (m *NeighborSnpaItem) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NeighborSnpaItem.Unmarshal(m, b)
}
func (m *NeighborSnpaItem) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NeighborSnpaItem.Marshal(b, m, deterministic)
}
func (m *NeighborSnpaItem) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NeighborSnpaItem.Merge(m, src)
}
func (m *NeighborSnpaItem) XXX_Size() int {
	return xxx_messageInfo_NeighborSnpaItem.Size(m)
}
func (m *NeighborSnpaItem) XXX_DiscardUnknown() {
	xxx_messageInfo_NeighborSnpaItem.DiscardUnknown(m)
}

var xxx_messageInfo_NeighborSnpaItem proto.InternalMessageInfo

func (m *NeighborSnpaItem) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

type IsisShRepEl struct {
	RepairElementNodeId  string   `protobuf:"bytes,1,opt,name=repair_element_node_id,json=repairElementNodeId,proto3" json:"repair_element_node_id,omitempty"`
	RepairIpv4Addr       string   `protobuf:"bytes,2,opt,name=repair_ipv4_addr,json=repairIpv4Addr,proto3" json:"repair_ipv4_addr,omitempty"`
	RepairIpv6Addr       string   `protobuf:"bytes,3,opt,name=repair_ipv6_addr,json=repairIpv6Addr,proto3" json:"repair_ipv6_addr,omitempty"`
	RepairLabel          uint32   `protobuf:"varint,4,opt,name=repair_label,json=repairLabel,proto3" json:"repair_label,omitempty"`
	RepairElementType    uint32   `protobuf:"varint,5,opt,name=repair_element_type,json=repairElementType,proto3" json:"repair_element_type,omitempty"`
	RepairStrictSpfLabel uint32   `protobuf:"varint,6,opt,name=repair_strict_spf_label,json=repairStrictSpfLabel,proto3" json:"repair_strict_spf_label,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IsisShRepEl) Reset()         { *m = IsisShRepEl{} }
func (m *IsisShRepEl) String() string { return proto.CompactTextString(m) }
func (*IsisShRepEl) ProtoMessage()    {}
func (*IsisShRepEl) Descriptor() ([]byte, []int) {
	return fileDescriptor_6cdb1da045927d12, []int{2}
}

func (m *IsisShRepEl) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IsisShRepEl.Unmarshal(m, b)
}
func (m *IsisShRepEl) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IsisShRepEl.Marshal(b, m, deterministic)
}
func (m *IsisShRepEl) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IsisShRepEl.Merge(m, src)
}
func (m *IsisShRepEl) XXX_Size() int {
	return xxx_messageInfo_IsisShRepEl.Size(m)
}
func (m *IsisShRepEl) XXX_DiscardUnknown() {
	xxx_messageInfo_IsisShRepEl.DiscardUnknown(m)
}

var xxx_messageInfo_IsisShRepEl proto.InternalMessageInfo

func (m *IsisShRepEl) GetRepairElementNodeId() string {
	if m != nil {
		return m.RepairElementNodeId
	}
	return ""
}

func (m *IsisShRepEl) GetRepairIpv4Addr() string {
	if m != nil {
		return m.RepairIpv4Addr
	}
	return ""
}

func (m *IsisShRepEl) GetRepairIpv6Addr() string {
	if m != nil {
		return m.RepairIpv6Addr
	}
	return ""
}

func (m *IsisShRepEl) GetRepairLabel() uint32 {
	if m != nil {
		return m.RepairLabel
	}
	return 0
}

func (m *IsisShRepEl) GetRepairElementType() uint32 {
	if m != nil {
		return m.RepairElementType
	}
	return 0
}

func (m *IsisShRepEl) GetRepairStrictSpfLabel() uint32 {
	if m != nil {
		return m.RepairStrictSpfLabel
	}
	return 0
}

type IsisShIpv4FrrBackup struct {
	NeighborId                  string            `protobuf:"bytes,1,opt,name=neighbor_id,json=neighborId,proto3" json:"neighbor_id,omitempty"`
	EgressInterface             string            `protobuf:"bytes,2,opt,name=egress_interface,json=egressInterface,proto3" json:"egress_interface,omitempty"`
	NeighborAddress             string            `protobuf:"bytes,3,opt,name=neighbor_address,json=neighborAddress,proto3" json:"neighbor_address,omitempty"`
	TunnelEgressInterface       string            `protobuf:"bytes,4,opt,name=tunnel_egress_interface,json=tunnelEgressInterface,proto3" json:"tunnel_egress_interface,omitempty"`
	NeighborSnpa                *NeighborSnpaItem `protobuf:"bytes,5,opt,name=neighbor_snpa,json=neighborSnpa,proto3" json:"neighbor_snpa,omitempty"`
	RemoteLfaSystemId           string            `protobuf:"bytes,6,opt,name=remote_lfa_system_id,json=remoteLfaSystemId,proto3" json:"remote_lfa_system_id,omitempty"`
	RemoteLfaRouterId           string            `protobuf:"bytes,7,opt,name=remote_lfa_router_id,json=remoteLfaRouterId,proto3" json:"remote_lfa_router_id,omitempty"`
	RemoteLfaSystemPid          string            `protobuf:"bytes,8,opt,name=remote_lfa_system_pid,json=remoteLfaSystemPid,proto3" json:"remote_lfa_system_pid,omitempty"`
	RemoteLfaRouterPid          string            `protobuf:"bytes,9,opt,name=remote_lfa_router_pid,json=remoteLfaRouterPid,proto3" json:"remote_lfa_router_pid,omitempty"`
	TotalBackupDistance         uint32            `protobuf:"varint,10,opt,name=total_backup_distance,json=totalBackupDistance,proto3" json:"total_backup_distance,omitempty"`
	SegmentRoutingSidValue      uint32            `protobuf:"varint,11,opt,name=segment_routing_sid_value,json=segmentRoutingSidValue,proto3" json:"segment_routing_sid_value,omitempty"`
	NumSid                      uint32            `protobuf:"varint,12,opt,name=num_sid,json=numSid,proto3" json:"num_sid,omitempty"`
	SegmentRoutingSidValueEntry []uint32          `protobuf:"varint,13,rep,packed,name=segment_routing_sid_value_entry,json=segmentRoutingSidValueEntry,proto3" json:"segment_routing_sid_value_entry,omitempty"`
	BackupRepairListSize        uint32            `protobuf:"varint,14,opt,name=backup_repair_list_size,json=backupRepairListSize,proto3" json:"backup_repair_list_size,omitempty"`
	TilfaComputation            string            `protobuf:"bytes,15,opt,name=tilfa_computation,json=tilfaComputation,proto3" json:"tilfa_computation,omitempty"`
	BackupRepair                []*IsisShRepEl    `protobuf:"bytes,16,rep,name=backup_repair,json=backupRepair,proto3" json:"backup_repair,omitempty"`
	PrefixSourceNodeId          string            `protobuf:"bytes,17,opt,name=prefix_source_node_id,json=prefixSourceNodeId,proto3" json:"prefix_source_node_id,omitempty"`
	IsDownstream                bool              `protobuf:"varint,18,opt,name=is_downstream,json=isDownstream,proto3" json:"is_downstream,omitempty"`
	IsLcDisjoint                bool              `protobuf:"varint,19,opt,name=is_lc_disjoint,json=isLcDisjoint,proto3" json:"is_lc_disjoint,omitempty"`
	IsNodeProtecting            bool              `protobuf:"varint,20,opt,name=is_node_protecting,json=isNodeProtecting,proto3" json:"is_node_protecting,omitempty"`
	IsPrimaryPath               bool              `protobuf:"varint,21,opt,name=is_primary_path,json=isPrimaryPath,proto3" json:"is_primary_path,omitempty"`
	IsSrlgDisjoint              bool              `protobuf:"varint,22,opt,name=is_srlg_disjoint,json=isSrlgDisjoint,proto3" json:"is_srlg_disjoint,omitempty"`
	IsRemoteLfa                 bool              `protobuf:"varint,23,opt,name=is_remote_lfa,json=isRemoteLfa,proto3" json:"is_remote_lfa,omitempty"`
	IsEpcfrrLfa                 bool              `protobuf:"varint,24,opt,name=is_epcfrr_lfa,json=isEpcfrrLfa,proto3" json:"is_epcfrr_lfa,omitempty"`
	IsStrictSpflfa              bool              `protobuf:"varint,25,opt,name=is_strict_spflfa,json=isStrictSpflfa,proto3" json:"is_strict_spflfa,omitempty"`
	IsTunnelRequested           bool              `protobuf:"varint,26,opt,name=is_tunnel_requested,json=isTunnelRequested,proto3" json:"is_tunnel_requested,omitempty"`
	Weight                      uint32            `protobuf:"varint,27,opt,name=weight,proto3" json:"weight,omitempty"`
	XXX_NoUnkeyedLiteral        struct{}          `json:"-"`
	XXX_unrecognized            []byte            `json:"-"`
	XXX_sizecache               int32             `json:"-"`
}

func (m *IsisShIpv4FrrBackup) Reset()         { *m = IsisShIpv4FrrBackup{} }
func (m *IsisShIpv4FrrBackup) String() string { return proto.CompactTextString(m) }
func (*IsisShIpv4FrrBackup) ProtoMessage()    {}
func (*IsisShIpv4FrrBackup) Descriptor() ([]byte, []int) {
	return fileDescriptor_6cdb1da045927d12, []int{3}
}

func (m *IsisShIpv4FrrBackup) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IsisShIpv4FrrBackup.Unmarshal(m, b)
}
func (m *IsisShIpv4FrrBackup) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IsisShIpv4FrrBackup.Marshal(b, m, deterministic)
}
func (m *IsisShIpv4FrrBackup) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IsisShIpv4FrrBackup.Merge(m, src)
}
func (m *IsisShIpv4FrrBackup) XXX_Size() int {
	return xxx_messageInfo_IsisShIpv4FrrBackup.Size(m)
}
func (m *IsisShIpv4FrrBackup) XXX_DiscardUnknown() {
	xxx_messageInfo_IsisShIpv4FrrBackup.DiscardUnknown(m)
}

var xxx_messageInfo_IsisShIpv4FrrBackup proto.InternalMessageInfo

func (m *IsisShIpv4FrrBackup) GetNeighborId() string {
	if m != nil {
		return m.NeighborId
	}
	return ""
}

func (m *IsisShIpv4FrrBackup) GetEgressInterface() string {
	if m != nil {
		return m.EgressInterface
	}
	return ""
}

func (m *IsisShIpv4FrrBackup) GetNeighborAddress() string {
	if m != nil {
		return m.NeighborAddress
	}
	return ""
}

func (m *IsisShIpv4FrrBackup) GetTunnelEgressInterface() string {
	if m != nil {
		return m.TunnelEgressInterface
	}
	return ""
}

func (m *IsisShIpv4FrrBackup) GetNeighborSnpa() *NeighborSnpaItem {
	if m != nil {
		return m.NeighborSnpa
	}
	return nil
}

func (m *IsisShIpv4FrrBackup) GetRemoteLfaSystemId() string {
	if m != nil {
		return m.RemoteLfaSystemId
	}
	return ""
}

func (m *IsisShIpv4FrrBackup) GetRemoteLfaRouterId() string {
	if m != nil {
		return m.RemoteLfaRouterId
	}
	return ""
}

func (m *IsisShIpv4FrrBackup) GetRemoteLfaSystemPid() string {
	if m != nil {
		return m.RemoteLfaSystemPid
	}
	return ""
}

func (m *IsisShIpv4FrrBackup) GetRemoteLfaRouterPid() string {
	if m != nil {
		return m.RemoteLfaRouterPid
	}
	return ""
}

func (m *IsisShIpv4FrrBackup) GetTotalBackupDistance() uint32 {
	if m != nil {
		return m.TotalBackupDistance
	}
	return 0
}

func (m *IsisShIpv4FrrBackup) GetSegmentRoutingSidValue() uint32 {
	if m != nil {
		return m.SegmentRoutingSidValue
	}
	return 0
}

func (m *IsisShIpv4FrrBackup) GetNumSid() uint32 {
	if m != nil {
		return m.NumSid
	}
	return 0
}

func (m *IsisShIpv4FrrBackup) GetSegmentRoutingSidValueEntry() []uint32 {
	if m != nil {
		return m.SegmentRoutingSidValueEntry
	}
	return nil
}

func (m *IsisShIpv4FrrBackup) GetBackupRepairListSize() uint32 {
	if m != nil {
		return m.BackupRepairListSize
	}
	return 0
}

func (m *IsisShIpv4FrrBackup) GetTilfaComputation() string {
	if m != nil {
		return m.TilfaComputation
	}
	return ""
}

func (m *IsisShIpv4FrrBackup) GetBackupRepair() []*IsisShRepEl {
	if m != nil {
		return m.BackupRepair
	}
	return nil
}

func (m *IsisShIpv4FrrBackup) GetPrefixSourceNodeId() string {
	if m != nil {
		return m.PrefixSourceNodeId
	}
	return ""
}

func (m *IsisShIpv4FrrBackup) GetIsDownstream() bool {
	if m != nil {
		return m.IsDownstream
	}
	return false
}

func (m *IsisShIpv4FrrBackup) GetIsLcDisjoint() bool {
	if m != nil {
		return m.IsLcDisjoint
	}
	return false
}

func (m *IsisShIpv4FrrBackup) GetIsNodeProtecting() bool {
	if m != nil {
		return m.IsNodeProtecting
	}
	return false
}

func (m *IsisShIpv4FrrBackup) GetIsPrimaryPath() bool {
	if m != nil {
		return m.IsPrimaryPath
	}
	return false
}

func (m *IsisShIpv4FrrBackup) GetIsSrlgDisjoint() bool {
	if m != nil {
		return m.IsSrlgDisjoint
	}
	return false
}

func (m *IsisShIpv4FrrBackup) GetIsRemoteLfa() bool {
	if m != nil {
		return m.IsRemoteLfa
	}
	return false
}

func (m *IsisShIpv4FrrBackup) GetIsEpcfrrLfa() bool {
	if m != nil {
		return m.IsEpcfrrLfa
	}
	return false
}

func (m *IsisShIpv4FrrBackup) GetIsStrictSpflfa() bool {
	if m != nil {
		return m.IsStrictSpflfa
	}
	return false
}

func (m *IsisShIpv4FrrBackup) GetIsTunnelRequested() bool {
	if m != nil {
		return m.IsTunnelRequested
	}
	return false
}

func (m *IsisShIpv4FrrBackup) GetWeight() uint32 {
	if m != nil {
		return m.Weight
	}
	return 0
}

type IsisShIpv4Path struct {
	NeighborId                 string               `protobuf:"bytes,1,opt,name=neighbor_id,json=neighborId,proto3" json:"neighbor_id,omitempty"`
	EgressInterface            string               `protobuf:"bytes,2,opt,name=egress_interface,json=egressInterface,proto3" json:"egress_interface,omitempty"`
	NeighborAddress            string               `protobuf:"bytes,3,opt,name=neighbor_address,json=neighborAddress,proto3" json:"neighbor_address,omitempty"`
	NeighborSnpa               *NeighborSnpaItem    `protobuf:"bytes,4,opt,name=neighbor_snpa,json=neighborSnpa,proto3" json:"neighbor_snpa,omitempty"`
	Tag                        uint32               `protobuf:"varint,5,opt,name=tag,proto3" json:"tag,omitempty"`
	FrrBackup                  *IsisShIpv4FrrBackup `protobuf:"bytes,6,opt,name=frr_backup,json=frrBackup,proto3" json:"frr_backup,omitempty"`
	UloopExplicit              []*IsisShRepEl       `protobuf:"bytes,7,rep,name=uloop_explicit,json=uloopExplicit,proto3" json:"uloop_explicit,omitempty"`
	TunnelInterface            string               `protobuf:"bytes,8,opt,name=tunnel_interface,json=tunnelInterface,proto3" json:"tunnel_interface,omitempty"`
	SegmentRoutingSidValue     uint32               `protobuf:"varint,9,opt,name=segment_routing_sid_value,json=segmentRoutingSidValue,proto3" json:"segment_routing_sid_value,omitempty"`
	Weight                     uint32               `protobuf:"varint,10,opt,name=weight,proto3" json:"weight,omitempty"`
	IsTeTunnelInterface        bool                 `protobuf:"varint,11,opt,name=is_te_tunnel_interface,json=isTeTunnelInterface,proto3" json:"is_te_tunnel_interface,omitempty"`
	IsSrExcludeTunnelInterface bool                 `protobuf:"varint,12,opt,name=is_sr_exclude_tunnel_interface,json=isSrExcludeTunnelInterface,proto3" json:"is_sr_exclude_tunnel_interface,omitempty"`
	XXX_NoUnkeyedLiteral       struct{}             `json:"-"`
	XXX_unrecognized           []byte               `json:"-"`
	XXX_sizecache              int32                `json:"-"`
}

func (m *IsisShIpv4Path) Reset()         { *m = IsisShIpv4Path{} }
func (m *IsisShIpv4Path) String() string { return proto.CompactTextString(m) }
func (*IsisShIpv4Path) ProtoMessage()    {}
func (*IsisShIpv4Path) Descriptor() ([]byte, []int) {
	return fileDescriptor_6cdb1da045927d12, []int{4}
}

func (m *IsisShIpv4Path) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IsisShIpv4Path.Unmarshal(m, b)
}
func (m *IsisShIpv4Path) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IsisShIpv4Path.Marshal(b, m, deterministic)
}
func (m *IsisShIpv4Path) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IsisShIpv4Path.Merge(m, src)
}
func (m *IsisShIpv4Path) XXX_Size() int {
	return xxx_messageInfo_IsisShIpv4Path.Size(m)
}
func (m *IsisShIpv4Path) XXX_DiscardUnknown() {
	xxx_messageInfo_IsisShIpv4Path.DiscardUnknown(m)
}

var xxx_messageInfo_IsisShIpv4Path proto.InternalMessageInfo

func (m *IsisShIpv4Path) GetNeighborId() string {
	if m != nil {
		return m.NeighborId
	}
	return ""
}

func (m *IsisShIpv4Path) GetEgressInterface() string {
	if m != nil {
		return m.EgressInterface
	}
	return ""
}

func (m *IsisShIpv4Path) GetNeighborAddress() string {
	if m != nil {
		return m.NeighborAddress
	}
	return ""
}

func (m *IsisShIpv4Path) GetNeighborSnpa() *NeighborSnpaItem {
	if m != nil {
		return m.NeighborSnpa
	}
	return nil
}

func (m *IsisShIpv4Path) GetTag() uint32 {
	if m != nil {
		return m.Tag
	}
	return 0
}

func (m *IsisShIpv4Path) GetFrrBackup() *IsisShIpv4FrrBackup {
	if m != nil {
		return m.FrrBackup
	}
	return nil
}

func (m *IsisShIpv4Path) GetUloopExplicit() []*IsisShRepEl {
	if m != nil {
		return m.UloopExplicit
	}
	return nil
}

func (m *IsisShIpv4Path) GetTunnelInterface() string {
	if m != nil {
		return m.TunnelInterface
	}
	return ""
}

func (m *IsisShIpv4Path) GetSegmentRoutingSidValue() uint32 {
	if m != nil {
		return m.SegmentRoutingSidValue
	}
	return 0
}

func (m *IsisShIpv4Path) GetWeight() uint32 {
	if m != nil {
		return m.Weight
	}
	return 0
}

func (m *IsisShIpv4Path) GetIsTeTunnelInterface() bool {
	if m != nil {
		return m.IsTeTunnelInterface
	}
	return false
}

func (m *IsisShIpv4Path) GetIsSrExcludeTunnelInterface() bool {
	if m != nil {
		return m.IsSrExcludeTunnelInterface
	}
	return false
}

type IsisShTopoNeighbor struct {
	NeighborId             string   `protobuf:"bytes,1,opt,name=neighbor_id,json=neighborId,proto3" json:"neighbor_id,omitempty"`
	IntermediatePseudonode string   `protobuf:"bytes,2,opt,name=intermediate_pseudonode,json=intermediatePseudonode,proto3" json:"intermediate_pseudonode,omitempty"`
	XXX_NoUnkeyedLiteral   struct{} `json:"-"`
	XXX_unrecognized       []byte   `json:"-"`
	XXX_sizecache          int32    `json:"-"`
}

func (m *IsisShTopoNeighbor) Reset()         { *m = IsisShTopoNeighbor{} }
func (m *IsisShTopoNeighbor) String() string { return proto.CompactTextString(m) }
func (*IsisShTopoNeighbor) ProtoMessage()    {}
func (*IsisShTopoNeighbor) Descriptor() ([]byte, []int) {
	return fileDescriptor_6cdb1da045927d12, []int{5}
}

func (m *IsisShTopoNeighbor) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IsisShTopoNeighbor.Unmarshal(m, b)
}
func (m *IsisShTopoNeighbor) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IsisShTopoNeighbor.Marshal(b, m, deterministic)
}
func (m *IsisShTopoNeighbor) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IsisShTopoNeighbor.Merge(m, src)
}
func (m *IsisShTopoNeighbor) XXX_Size() int {
	return xxx_messageInfo_IsisShTopoNeighbor.Size(m)
}
func (m *IsisShTopoNeighbor) XXX_DiscardUnknown() {
	xxx_messageInfo_IsisShTopoNeighbor.DiscardUnknown(m)
}

var xxx_messageInfo_IsisShTopoNeighbor proto.InternalMessageInfo

func (m *IsisShTopoNeighbor) GetNeighborId() string {
	if m != nil {
		return m.NeighborId
	}
	return ""
}

func (m *IsisShTopoNeighbor) GetIntermediatePseudonode() string {
	if m != nil {
		return m.IntermediatePseudonode
	}
	return ""
}

type IsisShIpv4TopoReachableDetails struct {
	RootDistance          uint32                `protobuf:"varint,1,opt,name=root_distance,json=rootDistance,proto3" json:"root_distance,omitempty"`
	MulticastRootDistance uint32                `protobuf:"varint,2,opt,name=multicast_root_distance,json=multicastRootDistance,proto3" json:"multicast_root_distance,omitempty"`
	Paths                 []*IsisShIpv4Path     `protobuf:"bytes,3,rep,name=paths,proto3" json:"paths,omitempty"`
	MulticastPath         []*IsisShIpv4Path     `protobuf:"bytes,4,rep,name=multicast_path,json=multicastPath,proto3" json:"multicast_path,omitempty"`
	Parent                []*IsisShTopoNeighbor `protobuf:"bytes,5,rep,name=parent,proto3" json:"parent,omitempty"`
	Children              []*IsisShTopoNeighbor `protobuf:"bytes,6,rep,name=children,proto3" json:"children,omitempty"`
	XXX_NoUnkeyedLiteral  struct{}              `json:"-"`
	XXX_unrecognized      []byte                `json:"-"`
	XXX_sizecache         int32                 `json:"-"`
}

func (m *IsisShIpv4TopoReachableDetails) Reset()         { *m = IsisShIpv4TopoReachableDetails{} }
func (m *IsisShIpv4TopoReachableDetails) String() string { return proto.CompactTextString(m) }
func (*IsisShIpv4TopoReachableDetails) ProtoMessage()    {}
func (*IsisShIpv4TopoReachableDetails) Descriptor() ([]byte, []int) {
	return fileDescriptor_6cdb1da045927d12, []int{6}
}

func (m *IsisShIpv4TopoReachableDetails) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IsisShIpv4TopoReachableDetails.Unmarshal(m, b)
}
func (m *IsisShIpv4TopoReachableDetails) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IsisShIpv4TopoReachableDetails.Marshal(b, m, deterministic)
}
func (m *IsisShIpv4TopoReachableDetails) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IsisShIpv4TopoReachableDetails.Merge(m, src)
}
func (m *IsisShIpv4TopoReachableDetails) XXX_Size() int {
	return xxx_messageInfo_IsisShIpv4TopoReachableDetails.Size(m)
}
func (m *IsisShIpv4TopoReachableDetails) XXX_DiscardUnknown() {
	xxx_messageInfo_IsisShIpv4TopoReachableDetails.DiscardUnknown(m)
}

var xxx_messageInfo_IsisShIpv4TopoReachableDetails proto.InternalMessageInfo

func (m *IsisShIpv4TopoReachableDetails) GetRootDistance() uint32 {
	if m != nil {
		return m.RootDistance
	}
	return 0
}

func (m *IsisShIpv4TopoReachableDetails) GetMulticastRootDistance() uint32 {
	if m != nil {
		return m.MulticastRootDistance
	}
	return 0
}

func (m *IsisShIpv4TopoReachableDetails) GetPaths() []*IsisShIpv4Path {
	if m != nil {
		return m.Paths
	}
	return nil
}

func (m *IsisShIpv4TopoReachableDetails) GetMulticastPath() []*IsisShIpv4Path {
	if m != nil {
		return m.MulticastPath
	}
	return nil
}

func (m *IsisShIpv4TopoReachableDetails) GetParent() []*IsisShTopoNeighbor {
	if m != nil {
		return m.Parent
	}
	return nil
}

func (m *IsisShIpv4TopoReachableDetails) GetChildren() []*IsisShTopoNeighbor {
	if m != nil {
		return m.Children
	}
	return nil
}

type IsisShIpv4TopoReachableStatus struct {
	ReachableStatus      string                          `protobuf:"bytes,1,opt,name=reachable_status,json=reachableStatus,proto3" json:"reachable_status,omitempty"`
	ReachableDetails     *IsisShIpv4TopoReachableDetails `protobuf:"bytes,2,opt,name=reachable_details,json=reachableDetails,proto3" json:"reachable_details,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                        `json:"-"`
	XXX_unrecognized     []byte                          `json:"-"`
	XXX_sizecache        int32                           `json:"-"`
}

func (m *IsisShIpv4TopoReachableStatus) Reset()         { *m = IsisShIpv4TopoReachableStatus{} }
func (m *IsisShIpv4TopoReachableStatus) String() string { return proto.CompactTextString(m) }
func (*IsisShIpv4TopoReachableStatus) ProtoMessage()    {}
func (*IsisShIpv4TopoReachableStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_6cdb1da045927d12, []int{7}
}

func (m *IsisShIpv4TopoReachableStatus) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IsisShIpv4TopoReachableStatus.Unmarshal(m, b)
}
func (m *IsisShIpv4TopoReachableStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IsisShIpv4TopoReachableStatus.Marshal(b, m, deterministic)
}
func (m *IsisShIpv4TopoReachableStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IsisShIpv4TopoReachableStatus.Merge(m, src)
}
func (m *IsisShIpv4TopoReachableStatus) XXX_Size() int {
	return xxx_messageInfo_IsisShIpv4TopoReachableStatus.Size(m)
}
func (m *IsisShIpv4TopoReachableStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_IsisShIpv4TopoReachableStatus.DiscardUnknown(m)
}

var xxx_messageInfo_IsisShIpv4TopoReachableStatus proto.InternalMessageInfo

func (m *IsisShIpv4TopoReachableStatus) GetReachableStatus() string {
	if m != nil {
		return m.ReachableStatus
	}
	return ""
}

func (m *IsisShIpv4TopoReachableStatus) GetReachableDetails() *IsisShIpv4TopoReachableDetails {
	if m != nil {
		return m.ReachableDetails
	}
	return nil
}

type IsisPerPriorityCounts struct {
	Critical             uint32   `protobuf:"varint,1,opt,name=critical,proto3" json:"critical,omitempty"`
	High                 uint32   `protobuf:"varint,2,opt,name=high,proto3" json:"high,omitempty"`
	Medium               uint32   `protobuf:"varint,3,opt,name=medium,proto3" json:"medium,omitempty"`
	Low                  uint32   `protobuf:"varint,4,opt,name=low,proto3" json:"low,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IsisPerPriorityCounts) Reset()         { *m = IsisPerPriorityCounts{} }
func (m *IsisPerPriorityCounts) String() string { return proto.CompactTextString(m) }
func (*IsisPerPriorityCounts) ProtoMessage()    {}
func (*IsisPerPriorityCounts) Descriptor() ([]byte, []int) {
	return fileDescriptor_6cdb1da045927d12, []int{8}
}

func (m *IsisPerPriorityCounts) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IsisPerPriorityCounts.Unmarshal(m, b)
}
func (m *IsisPerPriorityCounts) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IsisPerPriorityCounts.Marshal(b, m, deterministic)
}
func (m *IsisPerPriorityCounts) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IsisPerPriorityCounts.Merge(m, src)
}
func (m *IsisPerPriorityCounts) XXX_Size() int {
	return xxx_messageInfo_IsisPerPriorityCounts.Size(m)
}
func (m *IsisPerPriorityCounts) XXX_DiscardUnknown() {
	xxx_messageInfo_IsisPerPriorityCounts.DiscardUnknown(m)
}

var xxx_messageInfo_IsisPerPriorityCounts proto.InternalMessageInfo

func (m *IsisPerPriorityCounts) GetCritical() uint32 {
	if m != nil {
		return m.Critical
	}
	return 0
}

func (m *IsisPerPriorityCounts) GetHigh() uint32 {
	if m != nil {
		return m.High
	}
	return 0
}

func (m *IsisPerPriorityCounts) GetMedium() uint32 {
	if m != nil {
		return m.Medium
	}
	return 0
}

func (m *IsisPerPriorityCounts) GetLow() uint32 {
	if m != nil {
		return m.Low
	}
	return 0
}

type IsisShIpv4TopoEntry struct {
	SourceAddress              string                         `protobuf:"bytes,50,opt,name=source_address,json=sourceAddress,proto3" json:"source_address,omitempty"`
	IsParticipant              bool                           `protobuf:"varint,51,opt,name=is_participant,json=isParticipant,proto3" json:"is_participant,omitempty"`
	IsOverloaded               bool                           `protobuf:"varint,52,opt,name=is_overloaded,json=isOverloaded,proto3" json:"is_overloaded,omitempty"`
	IsAttached                 bool                           `protobuf:"varint,53,opt,name=is_attached,json=isAttached,proto3" json:"is_attached,omitempty"`
	ReachabilityStatus         *IsisShIpv4TopoReachableStatus `protobuf:"bytes,54,opt,name=reachability_status,json=reachabilityStatus,proto3" json:"reachability_status,omitempty"`
	AdvertisedPrefixItemCounts *IsisPerPriorityCounts         `protobuf:"bytes,55,opt,name=advertised_prefix_item_counts,json=advertisedPrefixItemCounts,proto3" json:"advertised_prefix_item_counts,omitempty"`
	XXX_NoUnkeyedLiteral       struct{}                       `json:"-"`
	XXX_unrecognized           []byte                         `json:"-"`
	XXX_sizecache              int32                          `json:"-"`
}

func (m *IsisShIpv4TopoEntry) Reset()         { *m = IsisShIpv4TopoEntry{} }
func (m *IsisShIpv4TopoEntry) String() string { return proto.CompactTextString(m) }
func (*IsisShIpv4TopoEntry) ProtoMessage()    {}
func (*IsisShIpv4TopoEntry) Descriptor() ([]byte, []int) {
	return fileDescriptor_6cdb1da045927d12, []int{9}
}

func (m *IsisShIpv4TopoEntry) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IsisShIpv4TopoEntry.Unmarshal(m, b)
}
func (m *IsisShIpv4TopoEntry) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IsisShIpv4TopoEntry.Marshal(b, m, deterministic)
}
func (m *IsisShIpv4TopoEntry) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IsisShIpv4TopoEntry.Merge(m, src)
}
func (m *IsisShIpv4TopoEntry) XXX_Size() int {
	return xxx_messageInfo_IsisShIpv4TopoEntry.Size(m)
}
func (m *IsisShIpv4TopoEntry) XXX_DiscardUnknown() {
	xxx_messageInfo_IsisShIpv4TopoEntry.DiscardUnknown(m)
}

var xxx_messageInfo_IsisShIpv4TopoEntry proto.InternalMessageInfo

func (m *IsisShIpv4TopoEntry) GetSourceAddress() string {
	if m != nil {
		return m.SourceAddress
	}
	return ""
}

func (m *IsisShIpv4TopoEntry) GetIsParticipant() bool {
	if m != nil {
		return m.IsParticipant
	}
	return false
}

func (m *IsisShIpv4TopoEntry) GetIsOverloaded() bool {
	if m != nil {
		return m.IsOverloaded
	}
	return false
}

func (m *IsisShIpv4TopoEntry) GetIsAttached() bool {
	if m != nil {
		return m.IsAttached
	}
	return false
}

func (m *IsisShIpv4TopoEntry) GetReachabilityStatus() *IsisShIpv4TopoReachableStatus {
	if m != nil {
		return m.ReachabilityStatus
	}
	return nil
}

func (m *IsisShIpv4TopoEntry) GetAdvertisedPrefixItemCounts() *IsisPerPriorityCounts {
	if m != nil {
		return m.AdvertisedPrefixItemCounts
	}
	return nil
}

func init() {
	proto.RegisterType((*IsisShIpv4TopoEntry_KEYS)(nil), "cisco_ios_xr_clns_isis_oper.isis.instances.instance.topologies.topology.topology_levels.topology_level.ipv4_link_topologies.ipv4_link_topology.isis_sh_ipv4_topo_entry_KEYS")
	proto.RegisterType((*NeighborSnpaItem)(nil), "cisco_ios_xr_clns_isis_oper.isis.instances.instance.topologies.topology.topology_levels.topology_level.ipv4_link_topologies.ipv4_link_topology.neighbor_snpa_item")
	proto.RegisterType((*IsisShRepEl)(nil), "cisco_ios_xr_clns_isis_oper.isis.instances.instance.topologies.topology.topology_levels.topology_level.ipv4_link_topologies.ipv4_link_topology.isis_sh_rep_el")
	proto.RegisterType((*IsisShIpv4FrrBackup)(nil), "cisco_ios_xr_clns_isis_oper.isis.instances.instance.topologies.topology.topology_levels.topology_level.ipv4_link_topologies.ipv4_link_topology.isis_sh_ipv4_frr_backup")
	proto.RegisterType((*IsisShIpv4Path)(nil), "cisco_ios_xr_clns_isis_oper.isis.instances.instance.topologies.topology.topology_levels.topology_level.ipv4_link_topologies.ipv4_link_topology.isis_sh_ipv4_path")
	proto.RegisterType((*IsisShTopoNeighbor)(nil), "cisco_ios_xr_clns_isis_oper.isis.instances.instance.topologies.topology.topology_levels.topology_level.ipv4_link_topologies.ipv4_link_topology.isis_sh_topo_neighbor")
	proto.RegisterType((*IsisShIpv4TopoReachableDetails)(nil), "cisco_ios_xr_clns_isis_oper.isis.instances.instance.topologies.topology.topology_levels.topology_level.ipv4_link_topologies.ipv4_link_topology.isis_sh_ipv4_topo_reachable_details")
	proto.RegisterType((*IsisShIpv4TopoReachableStatus)(nil), "cisco_ios_xr_clns_isis_oper.isis.instances.instance.topologies.topology.topology_levels.topology_level.ipv4_link_topologies.ipv4_link_topology.isis_sh_ipv4_topo_reachable_status")
	proto.RegisterType((*IsisPerPriorityCounts)(nil), "cisco_ios_xr_clns_isis_oper.isis.instances.instance.topologies.topology.topology_levels.topology_level.ipv4_link_topologies.ipv4_link_topology.isis_per_priority_counts")
	proto.RegisterType((*IsisShIpv4TopoEntry)(nil), "cisco_ios_xr_clns_isis_oper.isis.instances.instance.topologies.topology.topology_levels.topology_level.ipv4_link_topologies.ipv4_link_topology.isis_sh_ipv4_topo_entry")
}

func init() { proto.RegisterFile("isis_sh_ipv4_topo_entry.proto", fileDescriptor_6cdb1da045927d12) }

var fileDescriptor_6cdb1da045927d12 = []byte{
	// 1544 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xd4, 0x58, 0x4b, 0x6f, 0x1c, 0xc5,
	0x16, 0x56, 0xfb, 0x31, 0xb6, 0x6b, 0x66, 0xfc, 0x28, 0xbf, 0x3a, 0xce, 0xcd, 0x8d, 0xef, 0xe4,
	0xe6, 0xca, 0xf7, 0xa1, 0xb9, 0xc2, 0x49, 0x1c, 0xb1, 0x4c, 0x62, 0x2f, 0x2c, 0xa2, 0x60, 0xf5,
	0x58, 0x48, 0xac, 0x4a, 0xe5, 0xee, 0x9a, 0x99, 0x22, 0xdd, 0x5d, 0x9d, 0xaa, 0x6a, 0xc7, 0x93,
	0x2d, 0x5b, 0x04, 0xff, 0x00, 0x09, 0x10, 0x82, 0x35, 0xd9, 0xb0, 0x62, 0x81, 0x10, 0x8f, 0x15,
	0xbf, 0x01, 0x89, 0x25, 0x1b, 0xfe, 0x01, 0xaa, 0x53, 0xd5, 0xdd, 0x9e, 0x1e, 0x27, 0x2c, 0xb1,
	0x77, 0xdd, 0xe7, 0x3b, 0xa7, 0xce, 0x63, 0xce, 0xf9, 0x4e, 0xf5, 0xa0, 0x1b, 0x5c, 0x71, 0x45,
	0xd4, 0x90, 0xf0, 0xec, 0xf4, 0x2e, 0xd1, 0x22, 0x13, 0x84, 0xa5, 0x5a, 0x8e, 0xba, 0x99, 0x14,
	0x5a, 0xe0, 0x0f, 0xbd, 0x90, 0xab, 0x50, 0x10, 0x2e, 0x14, 0x39, 0x93, 0x24, 0x8c, 0x53, 0x45,
	0xc0, 0x42, 0x64, 0x4c, 0x76, 0xcd, 0x53, 0x97, 0xa7, 0x4a, 0xd3, 0x34, 0x64, 0xd5, 0x53, 0xd7,
	0x1c, 0x13, 0x8b, 0x01, 0x67, 0xaa, 0x78, 0x1c, 0x95, 0x0f, 0x24, 0x66, 0xa7, 0x2c, 0x56, 0xb5,
	0xf7, 0x2e, 0xb8, 0x8f, 0x79, 0xfa, 0x94, 0x9c, 0x33, 0x9e, 0x10, 0x8e, 0x3a, 0x3f, 0x7b, 0xe8,
	0x6f, 0xaf, 0x08, 0x99, 0xbc, 0x75, 0xf0, 0x6e, 0x0f, 0xdf, 0x42, 0xed, 0x22, 0x0e, 0x92, 0xd2,
	0x84, 0xf9, 0xde, 0xb6, 0xb7, 0xb3, 0x10, 0xb4, 0x0a, 0xe1, 0x13, 0x9a, 0x30, 0xbc, 0x89, 0xe6,
	0x68, 0xdf, 0xc2, 0x53, 0x00, 0x37, 0x68, 0x1f, 0x80, 0x6b, 0x68, 0x5e, 0x15, 0xc8, 0x34, 0x20,
	0x73, 0xca, 0x41, 0xb7, 0x50, 0xbb, 0x8c, 0x19, 0xf0, 0x19, 0x7b, 0x70, 0x21, 0x04, 0xa5, 0x35,
	0x34, 0x0b, 0xf9, 0xf8, 0xb3, 0x00, 0xda, 0x17, 0x7c, 0x1d, 0x2d, 0xa8, 0x91, 0xd2, 0x2c, 0x21,
	0x3c, 0xf2, 0x1b, 0x80, 0xcc, 0x5b, 0xc1, 0x61, 0xd4, 0xf9, 0x0f, 0xc2, 0x29, 0xe3, 0x83, 0xe1,
	0x89, 0x90, 0x44, 0xa5, 0x19, 0x25, 0x5c, 0xb3, 0xc4, 0x1c, 0x74, 0x4a, 0xe3, 0xbc, 0x08, 0xdf,
	0xbe, 0x74, 0x3e, 0x9b, 0x42, 0x8b, 0x45, 0xf6, 0x92, 0x65, 0x84, 0xc5, 0xf8, 0x0e, 0xda, 0x90,
	0x2c, 0xa3, 0x5c, 0x12, 0x16, 0xb3, 0x84, 0xa5, 0x9a, 0xa4, 0x22, 0x62, 0xc6, 0x91, 0xb5, 0x5c,
	0xb5, 0xe8, 0x81, 0x05, 0x9f, 0x88, 0x88, 0x1d, 0x46, 0x78, 0x07, 0x2d, 0x3b, 0x23, 0xa8, 0x21,
	0x8d, 0x22, 0xe9, 0x0a, 0xb1, 0x68, 0xe5, 0x87, 0xd9, 0xe9, 0xdd, 0x07, 0x51, 0x24, 0xc7, 0x35,
	0xf7, 0xac, 0xe6, 0x74, 0x4d, 0x73, 0x0f, 0x34, 0xff, 0x81, 0x5a, 0x4e, 0x33, 0xa6, 0x27, 0x2c,
	0x86, 0xf2, 0xb4, 0x83, 0xa6, 0x95, 0x3d, 0x36, 0x22, 0xdc, 0x45, 0xab, 0xb5, 0x58, 0xf5, 0x28,
	0x63, 0x50, 0xab, 0x76, 0xb0, 0x32, 0x16, 0xe8, 0xf1, 0x28, 0x63, 0xf8, 0x1e, 0xda, 0x74, 0xfa,
	0x4a, 0x4b, 0x1e, 0x6a, 0xa2, 0xb2, 0xbe, 0x3b, 0xbd, 0x01, 0x36, 0x6b, 0x16, 0xee, 0x01, 0xda,
	0xcb, 0xfa, 0xe0, 0xa6, 0xf3, 0x41, 0x0b, 0x6d, 0x8e, 0xf5, 0x48, 0x5f, 0x4a, 0x72, 0x42, 0xc3,
	0xa7, 0x79, 0x86, 0x6f, 0xa2, 0x66, 0x59, 0xed, 0xb2, 0x46, 0xa8, 0x10, 0x1d, 0x46, 0xf8, 0xdf,
	0x68, 0x99, 0x0d, 0x24, 0x53, 0x8a, 0xf0, 0x54, 0x33, 0xd9, 0xa7, 0x61, 0xd1, 0x23, 0x4b, 0x56,
	0x7e, 0x58, 0x88, 0x8d, 0x6a, 0x79, 0x96, 0x29, 0x0c, 0x53, 0xca, 0xd5, 0x66, 0xa9, 0x90, 0x3f,
	0xb0, 0x62, 0xbc, 0x87, 0x36, 0x75, 0x9e, 0xa6, 0x2c, 0x26, 0x13, 0x87, 0xdb, 0x36, 0x5a, 0xb7,
	0xf0, 0x41, 0xcd, 0xc5, 0x8f, 0x1e, 0x6a, 0x8f, 0x75, 0x07, 0x14, 0xab, 0xb9, 0xfb, 0xa9, 0xd7,
	0xbd, 0x5c, 0x83, 0xd9, 0x9d, 0xec, 0xe1, 0xa0, 0x55, 0xc8, 0x7a, 0x69, 0x46, 0xf1, 0xff, 0xd1,
	0x9a, 0x64, 0x89, 0xd0, 0x8c, 0xc4, 0x7d, 0x4a, 0xea, 0xf3, 0xb0, 0x62, 0xb1, 0xc7, 0x7d, 0xda,
	0x73, 0x83, 0x51, 0x33, 0x90, 0x22, 0xd7, 0x0c, 0x7e, 0xb3, 0xb9, 0x9a, 0x41, 0x00, 0xc8, 0x61,
	0x84, 0xdf, 0x40, 0xeb, 0x93, 0x1e, 0x32, 0x1e, 0xf9, 0xf3, 0x60, 0x81, 0x6b, 0x2e, 0x8e, 0x78,
	0xdd, 0xc4, 0xf9, 0x30, 0x26, 0x0b, 0x35, 0x13, 0xeb, 0xc4, 0x98, 0xec, 0xa2, 0x75, 0x2d, 0x34,
	0x8d, 0x5d, 0x47, 0x91, 0x88, 0xdb, 0xe2, 0xfa, 0x08, 0x5a, 0x72, 0x15, 0xc0, 0x87, 0x80, 0xed,
	0x3b, 0x08, 0xbf, 0x89, 0xae, 0x29, 0x36, 0x80, 0x8e, 0x37, 0x3e, 0x78, 0x3a, 0x20, 0x8a, 0x47,
	0xc4, 0x4e, 0x78, 0x13, 0xec, 0x36, 0x9c, 0x42, 0x60, 0xf1, 0x1e, 0x8f, 0xde, 0x31, 0xa8, 0xa1,
	0xaa, 0x34, 0x4f, 0x8c, 0xba, 0xdf, 0x02, 0xc5, 0x46, 0x9a, 0x27, 0x3d, 0x1e, 0xe1, 0x7d, 0x74,
	0xf3, 0x95, 0x67, 0x5a, 0x42, 0xf4, 0xdb, 0xdb, 0xd3, 0x3b, 0xed, 0xe0, 0xfa, 0xc5, 0x27, 0x1f,
	0x18, 0x15, 0x33, 0x62, 0x2e, 0x8f, 0x62, 0x78, 0xb9, 0xd2, 0x44, 0xf1, 0x17, 0xcc, 0x5f, 0xb4,
	0x23, 0x66, 0xe1, 0xc0, 0x8e, 0x31, 0x57, 0xba, 0xc7, 0x5f, 0x30, 0xfc, 0x5f, 0xb4, 0xa2, 0xb9,
	0x29, 0x59, 0x28, 0x92, 0x2c, 0xd7, 0x54, 0x73, 0x91, 0xfa, 0x4b, 0x50, 0xb3, 0x65, 0x00, 0x1e,
	0x55, 0x72, 0xfc, 0x9d, 0x87, 0xda, 0x63, 0x4e, 0xfc, 0xe5, 0xed, 0xe9, 0x9d, 0xe6, 0xee, 0xc7,
	0x97, 0xae, 0x89, 0xc7, 0xb9, 0x35, 0x68, 0x9d, 0xcf, 0xdd, 0xf4, 0x4a, 0x26, 0x59, 0x9f, 0x9f,
	0x11, 0x25, 0x72, 0x69, 0xd6, 0x8b, 0x23, 0xda, 0x15, 0xdb, 0x2b, 0x16, 0xec, 0x01, 0xe6, 0x78,
	0xd6, 0x2c, 0x23, 0x45, 0x22, 0xf1, 0x3c, 0x55, 0x5a, 0x32, 0x9a, 0xf8, 0x78, 0xdb, 0xdb, 0x99,
	0x0f, 0x5a, 0x5c, 0xed, 0x97, 0x32, 0xfc, 0x4f, 0xc3, 0xe9, 0x24, 0x0e, 0x4d, 0x27, 0xbd, 0x27,
	0x78, 0xaa, 0xfd, 0xd5, 0x42, 0xeb, 0x71, 0xb8, 0xef, 0x64, 0xf8, 0x7f, 0x08, 0x73, 0x65, 0x5d,
	0x9a, 0xd5, 0xcc, 0x42, 0xf3, 0x5b, 0xfa, 0x6b, 0xa0, 0xb9, 0xcc, 0x95, 0x71, 0x78, 0x54, 0xca,
	0xf1, 0xbf, 0xd0, 0x12, 0x57, 0x24, 0x93, 0x3c, 0xa1, 0x72, 0x44, 0x32, 0xaa, 0x87, 0xfe, 0x3a,
	0xa8, 0xb6, 0xb9, 0x3a, 0xb2, 0xd2, 0x23, 0xaa, 0x87, 0x86, 0xde, 0x4d, 0xc6, 0x32, 0x1e, 0x54,
	0xde, 0x37, 0x40, 0x71, 0x91, 0xab, 0x9e, 0x8c, 0x07, 0xa5, 0xff, 0x0e, 0xa4, 0x52, 0x0d, 0x8b,
	0xbf, 0x09, 0x6a, 0x4d, 0xae, 0x82, 0x62, 0x46, 0x9c, 0x0e, 0xcb, 0x42, 0x43, 0xb8, 0x46, 0xc7,
	0x2f, 0x74, 0x0e, 0x40, 0x66, 0x74, 0x9c, 0xc7, 0x92, 0xcf, 0x8d, 0xda, 0xb5, 0xd2, 0x63, 0x41,
	0xe4, 0x71, 0x9f, 0x9a, 0x6d, 0xc1, 0x15, 0x71, 0xb4, 0x29, 0xd9, 0xb3, 0x9c, 0x29, 0xcd, 0x22,
	0x7f, 0x0b, 0x94, 0x57, 0xb8, 0x3a, 0x06, 0x24, 0x28, 0x00, 0xbc, 0x81, 0x1a, 0xcf, 0x0d, 0xe1,
	0x68, 0xff, 0xba, 0x1d, 0x14, 0xfb, 0xd6, 0xf9, 0x7d, 0x0e, 0xad, 0x8c, 0xad, 0x03, 0x53, 0x8e,
	0xbf, 0x6a, 0x11, 0x4c, 0x12, 0xfa, 0xcc, 0x55, 0x25, 0xf4, 0x65, 0x34, 0xad, 0xe9, 0xc0, 0x6d,
	0x6f, 0xf3, 0x88, 0x7f, 0xf0, 0x10, 0xaa, 0x76, 0x2d, 0x30, 0x7b, 0x73, 0xf7, 0x8b, 0x4b, 0x3b,
	0xe5, 0xb5, 0xbb, 0x41, 0xb0, 0xd0, 0x97, 0xd2, 0x12, 0x37, 0xfe, 0xde, 0x43, 0x8b, 0x79, 0x2c,
	0x44, 0x46, 0xd8, 0x59, 0x16, 0xf3, 0x90, 0x6b, 0x7f, 0xee, 0x6a, 0x70, 0x56, 0x1b, 0xc2, 0x3e,
	0x70, 0x51, 0x9b, 0xd6, 0x74, 0x13, 0x54, 0x75, 0xb1, 0x5d, 0x87, 0x4b, 0x56, 0x5e, 0x75, 0xf1,
	0x6b, 0x97, 0xd4, 0xc2, 0x6b, 0x97, 0x54, 0x35, 0x7a, 0xe8, 0xfc, 0xe8, 0x99, 0xcb, 0xa9, 0x19,
	0x61, 0x46, 0x26, 0x62, 0x68, 0xc2, 0x14, 0xaf, 0x72, 0x75, 0xcc, 0x8e, 0x6b, 0x71, 0x3c, 0x44,
	0x7f, 0x07, 0x4e, 0x22, 0xec, 0x2c, 0x8c, 0xf3, 0xe8, 0x02, 0xe3, 0x16, 0x18, 0x6f, 0x19, 0x86,
	0x3a, 0xb0, 0x3a, 0xb5, 0x33, 0x3a, 0xcf, 0xd0, 0x7a, 0x51, 0x17, 0xf8, 0x40, 0x28, 0x1a, 0xf7,
	0xcf, 0xc7, 0xfe, 0x3e, 0xda, 0x04, 0x47, 0x09, 0x8b, 0x38, 0xd5, 0x8c, 0x64, 0x8a, 0xe5, 0x91,
	0x30, 0xbc, 0xeb, 0xa6, 0x7f, 0xe3, 0x3c, 0x7c, 0x54, 0xa2, 0x9d, 0x8f, 0xe6, 0xd0, 0xad, 0xc9,
	0x2f, 0x13, 0xc9, 0x68, 0x38, 0xa4, 0x27, 0x31, 0x23, 0x11, 0xd3, 0x94, 0xc7, 0xca, 0xec, 0x04,
	0x29, 0x84, 0xae, 0xee, 0x0d, 0x1e, 0x94, 0xac, 0x65, 0x84, 0xe5, 0x85, 0x61, 0x0f, 0x6d, 0x26,
	0x79, 0xac, 0x79, 0x48, 0x95, 0xf9, 0x35, 0xce, 0xab, 0x4f, 0x81, 0xfa, 0x7a, 0x09, 0x07, 0xe7,
	0xed, 0xbe, 0xf6, 0xd0, 0xac, 0xa1, 0x37, 0xc3, 0x3f, 0xa6, 0x5d, 0x3f, 0xb9, 0xdc, 0xc3, 0x67,
	0x42, 0x0d, 0x6c, 0xc0, 0xf8, 0x27, 0x0f, 0x2d, 0x56, 0x39, 0xc3, 0xca, 0x9a, 0xb9, 0x32, 0x39,
	0xb4, 0xcb, 0xc8, 0x61, 0xad, 0x7e, 0xe3, 0xa1, 0x46, 0x46, 0x25, 0x4b, 0xb5, 0x3f, 0x0b, 0x39,
	0x7c, 0x7e, 0x69, 0x73, 0x18, 0x1b, 0x8f, 0xc0, 0x45, 0x8d, 0xbf, 0xf5, 0xd0, 0x7c, 0x38, 0xe4,
	0x71, 0x24, 0x59, 0xea, 0x37, 0xae, 0x54, 0x0a, 0x65, 0xdc, 0x9d, 0x97, 0x53, 0xa8, 0xf3, 0xba,
	0x89, 0x54, 0x9a, 0xea, 0x5c, 0x19, 0x8a, 0xac, 0xcb, 0x1c, 0x2f, 0x2c, 0x95, 0xf2, 0x9e, 0x55,
	0xfd, 0xc5, 0x43, 0x2b, 0x13, 0x13, 0x0d, 0x13, 0xd9, 0xdc, 0x7d, 0x79, 0xb9, 0xdb, 0xf4, 0x62,
	0x36, 0x0a, 0xaa, 0xd4, 0xf7, 0xad, 0xa4, 0xa3, 0x91, 0x0f, 0x86, 0x99, 0xf9, 0x12, 0x92, 0x5c,
	0x48, 0xae, 0x47, 0x24, 0x14, 0x79, 0xaa, 0x15, 0xde, 0x42, 0xf3, 0xa1, 0xe4, 0xa6, 0xd1, 0x63,
	0x47, 0x5b, 0xe5, 0x3b, 0xc6, 0x68, 0x66, 0xc8, 0x07, 0x43, 0xc7, 0x4f, 0xf0, 0x6c, 0xf6, 0x82,
	0x21, 0xca, 0x3c, 0x81, 0xeb, 0x50, 0x3b, 0x70, 0x6f, 0xe6, 0xea, 0x10, 0x8b, 0xe7, 0xee, 0x2f,
	0x02, 0xf3, 0xd8, 0x79, 0x7f, 0xb6, 0xf6, 0xcd, 0x5e, 0xfd, 0xaf, 0x83, 0x6f, 0xa3, 0x45, 0x77,
	0xe3, 0x2e, 0x2e, 0x57, 0xbb, 0xf0, 0xf3, 0xb4, 0xad, 0xb4, 0xb8, 0x5a, 0xdd, 0x86, 0x7b, 0x74,
	0x46, 0xa5, 0xe6, 0x21, 0xcf, 0x68, 0xaa, 0xfd, 0x3b, 0xe5, 0x95, 0xb7, 0x12, 0xba, 0x3b, 0xb9,
	0x38, 0x65, 0x32, 0x16, 0x34, 0x62, 0x91, 0x7f, 0xb7, 0xb8, 0x6d, 0xbf, 0x5d, 0xca, 0xcc, 0x9a,
	0xe0, 0x8a, 0x50, 0xad, 0x69, 0x38, 0x64, 0x91, 0x7f, 0x0f, 0x54, 0x10, 0x57, 0x0f, 0x9c, 0x04,
	0xff, 0xea, 0xa1, 0x55, 0x57, 0x3a, 0x1e, 0x9b, 0x0a, 0xb9, 0xc6, 0xd9, 0x83, 0x5e, 0xf8, 0xea,
	0x4a, 0xf5, 0x82, 0x0d, 0xdd, 0x7c, 0xec, 0x56, 0xf9, 0xb8, 0x86, 0xff, 0xcd, 0x43, 0x37, 0x68,
	0x74, 0xca, 0xa4, 0xe6, 0x8a, 0x45, 0xc4, 0x7d, 0xff, 0x98, 0xcb, 0xa0, 0x6b, 0x09, 0xff, 0x3e,
	0x24, 0xfc, 0xe5, 0xe5, 0x4c, 0xf8, 0x82, 0x1e, 0x0e, 0xb6, 0xaa, 0x7c, 0x8e, 0x20, 0x9d, 0x43,
	0xcd, 0x92, 0x47, 0x80, 0x9d, 0x34, 0xe0, 0x5f, 0xcf, 0x3b, 0x7f, 0x04, 0x00, 0x00, 0xff, 0xff,
	0x08, 0x60, 0x64, 0xb1, 0x16, 0x15, 0x00, 0x00,
}
