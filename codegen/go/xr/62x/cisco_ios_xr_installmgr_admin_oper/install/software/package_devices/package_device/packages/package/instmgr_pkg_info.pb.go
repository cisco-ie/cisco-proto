/*
Copyright 2019 Cisco Systems

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: instmgr_pkg_info.proto

package cisco_ios_xr_installmgr_admin_oper_install_software_package_devices_package_device_packages_package

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type InstmgrPkgInfo_KEYS struct {
	DeviceName           string   `protobuf:"bytes,1,opt,name=device_name,json=deviceName,proto3" json:"device_name,omitempty"`
	PackageName          string   `protobuf:"bytes,2,opt,name=package_name,json=packageName,proto3" json:"package_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *InstmgrPkgInfo_KEYS) Reset()         { *m = InstmgrPkgInfo_KEYS{} }
func (m *InstmgrPkgInfo_KEYS) String() string { return proto.CompactTextString(m) }
func (*InstmgrPkgInfo_KEYS) ProtoMessage()    {}
func (*InstmgrPkgInfo_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_1845d7a5064857f7, []int{0}
}

func (m *InstmgrPkgInfo_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InstmgrPkgInfo_KEYS.Unmarshal(m, b)
}
func (m *InstmgrPkgInfo_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InstmgrPkgInfo_KEYS.Marshal(b, m, deterministic)
}
func (m *InstmgrPkgInfo_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InstmgrPkgInfo_KEYS.Merge(m, src)
}
func (m *InstmgrPkgInfo_KEYS) XXX_Size() int {
	return xxx_messageInfo_InstmgrPkgInfo_KEYS.Size(m)
}
func (m *InstmgrPkgInfo_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_InstmgrPkgInfo_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_InstmgrPkgInfo_KEYS proto.InternalMessageInfo

func (m *InstmgrPkgInfo_KEYS) GetDeviceName() string {
	if m != nil {
		return m.DeviceName
	}
	return ""
}

func (m *InstmgrPkgInfo_KEYS) GetPackageName() string {
	if m != nil {
		return m.PackageName
	}
	return ""
}

type InstmgrSubPkgInfo struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	NodeTypes            uint64   `protobuf:"varint,2,opt,name=node_types,json=nodeTypes,proto3" json:"node_types,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *InstmgrSubPkgInfo) Reset()         { *m = InstmgrSubPkgInfo{} }
func (m *InstmgrSubPkgInfo) String() string { return proto.CompactTextString(m) }
func (*InstmgrSubPkgInfo) ProtoMessage()    {}
func (*InstmgrSubPkgInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_1845d7a5064857f7, []int{1}
}

func (m *InstmgrSubPkgInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InstmgrSubPkgInfo.Unmarshal(m, b)
}
func (m *InstmgrSubPkgInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InstmgrSubPkgInfo.Marshal(b, m, deterministic)
}
func (m *InstmgrSubPkgInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InstmgrSubPkgInfo.Merge(m, src)
}
func (m *InstmgrSubPkgInfo) XXX_Size() int {
	return xxx_messageInfo_InstmgrSubPkgInfo.Size(m)
}
func (m *InstmgrSubPkgInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_InstmgrSubPkgInfo.DiscardUnknown(m)
}

var xxx_messageInfo_InstmgrSubPkgInfo proto.InternalMessageInfo

func (m *InstmgrSubPkgInfo) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *InstmgrSubPkgInfo) GetNodeTypes() uint64 {
	if m != nil {
		return m.NodeTypes
	}
	return 0
}

type InstmgrPkgInfo struct {
	Name                 string               `protobuf:"bytes,50,opt,name=name,proto3" json:"name,omitempty"`
	Version              string               `protobuf:"bytes,51,opt,name=version,proto3" json:"version,omitempty"`
	Description          string               `protobuf:"bytes,52,opt,name=description,proto3" json:"description,omitempty"`
	Release              string               `protobuf:"bytes,53,opt,name=release,proto3" json:"release,omitempty"`
	Vendor               string               `protobuf:"bytes,54,opt,name=vendor,proto3" json:"vendor,omitempty"`
	Date                 string               `protobuf:"bytes,55,opt,name=date,proto3" json:"date,omitempty"`
	Source               string               `protobuf:"bytes,56,opt,name=source,proto3" json:"source,omitempty"`
	Base                 string               `protobuf:"bytes,57,opt,name=base,proto3" json:"base,omitempty"`
	Bootable             bool                 `protobuf:"varint,58,opt,name=bootable,proto3" json:"bootable,omitempty"`
	Composite            bool                 `protobuf:"varint,59,opt,name=composite,proto3" json:"composite,omitempty"`
	Cards                []string             `protobuf:"bytes,60,rep,name=cards,proto3" json:"cards,omitempty"`
	RestartInfo          string               `protobuf:"bytes,61,opt,name=restart_info,json=restartInfo,proto3" json:"restart_info,omitempty"`
	PackageType          string               `protobuf:"bytes,62,opt,name=package_type,json=packageType,proto3" json:"package_type,omitempty"`
	GroupType            string               `protobuf:"bytes,63,opt,name=group_type,json=groupType,proto3" json:"group_type,omitempty"`
	SubPkg               []*InstmgrSubPkgInfo `protobuf:"bytes,64,rep,name=sub_pkg,json=subPkg,proto3" json:"sub_pkg,omitempty"`
	Depth                uint32               `protobuf:"varint,65,opt,name=depth,proto3" json:"depth,omitempty"`
	UncompressedSize     uint32               `protobuf:"varint,66,opt,name=uncompressed_size,json=uncompressedSize,proto3" json:"uncompressed_size,omitempty"`
	CompressedSize       uint32               `protobuf:"varint,67,opt,name=compressed_size,json=compressedSize,proto3" json:"compressed_size,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *InstmgrPkgInfo) Reset()         { *m = InstmgrPkgInfo{} }
func (m *InstmgrPkgInfo) String() string { return proto.CompactTextString(m) }
func (*InstmgrPkgInfo) ProtoMessage()    {}
func (*InstmgrPkgInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_1845d7a5064857f7, []int{2}
}

func (m *InstmgrPkgInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InstmgrPkgInfo.Unmarshal(m, b)
}
func (m *InstmgrPkgInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InstmgrPkgInfo.Marshal(b, m, deterministic)
}
func (m *InstmgrPkgInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InstmgrPkgInfo.Merge(m, src)
}
func (m *InstmgrPkgInfo) XXX_Size() int {
	return xxx_messageInfo_InstmgrPkgInfo.Size(m)
}
func (m *InstmgrPkgInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_InstmgrPkgInfo.DiscardUnknown(m)
}

var xxx_messageInfo_InstmgrPkgInfo proto.InternalMessageInfo

func (m *InstmgrPkgInfo) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *InstmgrPkgInfo) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func (m *InstmgrPkgInfo) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *InstmgrPkgInfo) GetRelease() string {
	if m != nil {
		return m.Release
	}
	return ""
}

func (m *InstmgrPkgInfo) GetVendor() string {
	if m != nil {
		return m.Vendor
	}
	return ""
}

func (m *InstmgrPkgInfo) GetDate() string {
	if m != nil {
		return m.Date
	}
	return ""
}

func (m *InstmgrPkgInfo) GetSource() string {
	if m != nil {
		return m.Source
	}
	return ""
}

func (m *InstmgrPkgInfo) GetBase() string {
	if m != nil {
		return m.Base
	}
	return ""
}

func (m *InstmgrPkgInfo) GetBootable() bool {
	if m != nil {
		return m.Bootable
	}
	return false
}

func (m *InstmgrPkgInfo) GetComposite() bool {
	if m != nil {
		return m.Composite
	}
	return false
}

func (m *InstmgrPkgInfo) GetCards() []string {
	if m != nil {
		return m.Cards
	}
	return nil
}

func (m *InstmgrPkgInfo) GetRestartInfo() string {
	if m != nil {
		return m.RestartInfo
	}
	return ""
}

func (m *InstmgrPkgInfo) GetPackageType() string {
	if m != nil {
		return m.PackageType
	}
	return ""
}

func (m *InstmgrPkgInfo) GetGroupType() string {
	if m != nil {
		return m.GroupType
	}
	return ""
}

func (m *InstmgrPkgInfo) GetSubPkg() []*InstmgrSubPkgInfo {
	if m != nil {
		return m.SubPkg
	}
	return nil
}

func (m *InstmgrPkgInfo) GetDepth() uint32 {
	if m != nil {
		return m.Depth
	}
	return 0
}

func (m *InstmgrPkgInfo) GetUncompressedSize() uint32 {
	if m != nil {
		return m.UncompressedSize
	}
	return 0
}

func (m *InstmgrPkgInfo) GetCompressedSize() uint32 {
	if m != nil {
		return m.CompressedSize
	}
	return 0
}

func init() {
	proto.RegisterType((*InstmgrPkgInfo_KEYS)(nil), "cisco_ios_xr_installmgr_admin_oper.install.software.package_devices.package_device.packages.package.instmgr_pkg_info_KEYS")
	proto.RegisterType((*InstmgrSubPkgInfo)(nil), "cisco_ios_xr_installmgr_admin_oper.install.software.package_devices.package_device.packages.package.instmgr_sub_pkg_info")
	proto.RegisterType((*InstmgrPkgInfo)(nil), "cisco_ios_xr_installmgr_admin_oper.install.software.package_devices.package_device.packages.package.instmgr_pkg_info")
}

func init() { proto.RegisterFile("instmgr_pkg_info.proto", fileDescriptor_1845d7a5064857f7) }

var fileDescriptor_1845d7a5064857f7 = []byte{
	// 474 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x93, 0xcb, 0x6f, 0xd4, 0x30,
	0x10, 0xc6, 0x15, 0xfa, 0x8c, 0x97, 0x47, 0xb1, 0x4a, 0x65, 0x21, 0x10, 0x61, 0x2f, 0x44, 0x42,
	0xca, 0xa1, 0xe5, 0xfd, 0x7e, 0x88, 0x43, 0x85, 0x84, 0x50, 0xca, 0x05, 0x71, 0xb0, 0x9c, 0x64,
	0x1a, 0xac, 0xdd, 0xc4, 0x91, 0xc7, 0x59, 0x68, 0xff, 0x04, 0x8e, 0xfc, 0xc5, 0x68, 0xec, 0xec,
	0x92, 0xae, 0x38, 0x73, 0xf3, 0xf7, 0xcd, 0xcf, 0x5f, 0x26, 0x33, 0x09, 0x3b, 0xd0, 0x2d, 0xba,
	0xa6, 0xb6, 0xb2, 0x9b, 0xd5, 0x52, 0xb7, 0xa7, 0x26, 0xeb, 0xac, 0x71, 0x86, 0x97, 0xa5, 0xc6,
	0xd2, 0x48, 0x6d, 0x50, 0xfe, 0xb4, 0x92, 0x20, 0x35, 0x9f, 0x13, 0xa7, 0xaa, 0x46, 0xb7, 0xd2,
	0x74, 0x60, 0xb3, 0xc1, 0xcd, 0xd0, 0x9c, 0xba, 0x1f, 0xca, 0x42, 0xd6, 0xa9, 0x72, 0xa6, 0x6a,
	0x90, 0x15, 0x2c, 0x74, 0x09, 0xb8, 0xa6, 0x97, 0x72, 0xe5, 0x4f, 0xbf, 0xb1, 0x1b, 0xeb, 0x8f,
	0x97, 0x1f, 0x3f, 0x7c, 0x3d, 0xe1, 0x77, 0xd8, 0x24, 0xdc, 0x91, 0xad, 0x6a, 0x40, 0x44, 0x49,
	0x94, 0xc6, 0x39, 0x0b, 0xd6, 0x27, 0xd5, 0x00, 0xbf, 0xcb, 0x2e, 0x2f, 0xc3, 0x3d, 0x71, 0xc9,
	0x13, 0x93, 0xc1, 0x23, 0x64, 0x7a, 0xcc, 0xf6, 0x97, 0xe1, 0xd8, 0x17, 0xab, 0x07, 0x70, 0xce,
	0x36, 0x47, 0xa1, 0xfe, 0xcc, 0x6f, 0x33, 0xd6, 0x9a, 0x0a, 0xa4, 0x3b, 0xeb, 0x00, 0x7d, 0xd8,
	0x66, 0x1e, 0x93, 0xf3, 0x85, 0x8c, 0xe9, 0xaf, 0x2d, 0xb6, 0xb7, 0xde, 0xe8, 0x2a, 0xe7, 0x70,
	0x94, 0x23, 0xd8, 0xce, 0x02, 0x2c, 0x6a, 0xd3, 0x8a, 0x23, 0x6f, 0x2f, 0x25, 0x4f, 0xe8, 0x8d,
	0xb0, 0xb4, 0xba, 0x73, 0x54, 0x7d, 0x10, 0xfa, 0x1d, 0x59, 0x74, 0xd7, 0xc2, 0x1c, 0x14, 0x82,
	0x78, 0x18, 0xee, 0x0e, 0x92, 0x1f, 0xb0, 0xed, 0x05, 0xb4, 0x95, 0xb1, 0xe2, 0x91, 0x2f, 0x0c,
	0x8a, 0x3a, 0xa8, 0x94, 0x03, 0xf1, 0x38, 0x74, 0x40, 0x67, 0x62, 0xd1, 0xf4, 0xb6, 0x04, 0xf1,
	0x24, 0xb0, 0x41, 0x11, 0x5b, 0x50, 0xf4, 0xd3, 0xc0, 0xd2, 0x99, 0xdf, 0x64, 0xbb, 0x85, 0x31,
	0x4e, 0x15, 0x73, 0x10, 0xcf, 0x92, 0x28, 0xdd, 0xcd, 0x57, 0x9a, 0xdf, 0x62, 0x71, 0x69, 0x9a,
	0xce, 0xa0, 0x76, 0x20, 0x9e, 0xfb, 0xe2, 0x5f, 0x83, 0xef, 0xb3, 0xad, 0x52, 0xd9, 0x0a, 0xc5,
	0x8b, 0x64, 0x23, 0x8d, 0xf3, 0x20, 0x68, 0x29, 0x16, 0xd0, 0x29, 0xeb, 0xfc, 0x84, 0xc4, 0xcb,
	0xf0, 0x92, 0x83, 0x77, 0x4c, 0x43, 0x1b, 0xed, 0x8d, 0x66, 0x2d, 0x5e, 0x5d, 0xd8, 0x1b, 0x4d,
	0x9b, 0x76, 0x51, 0x5b, 0xd3, 0x77, 0x01, 0x78, 0xed, 0x81, 0xd8, 0x3b, 0xbe, 0xfc, 0x3b, 0x62,
	0x3b, 0xc3, 0x3e, 0xc5, 0x9b, 0x64, 0x23, 0x9d, 0x1c, 0x9e, 0x65, 0xff, 0xe1, 0x5b, 0xcd, 0xfe,
	0xf5, 0x2d, 0xe5, 0xdb, 0xd8, 0x17, 0x9f, 0x67, 0x35, 0xcd, 0xa3, 0x82, 0xce, 0x7d, 0x17, 0x6f,
	0x93, 0x28, 0xbd, 0x92, 0x07, 0xc1, 0xef, 0xb3, 0xeb, 0x7d, 0x4b, 0x43, 0xb3, 0x80, 0x08, 0x95,
	0x44, 0x7d, 0x0e, 0xe2, 0x9d, 0x27, 0xf6, 0xc6, 0x85, 0x13, 0x7d, 0x0e, 0xfc, 0x1e, 0xbb, 0xb6,
	0x8e, 0xbe, 0xf7, 0xe8, 0xd5, 0x8b, 0x60, 0xb1, 0xed, 0x7f, 0xd0, 0xa3, 0x3f, 0x01, 0x00, 0x00,
	0xff, 0xff, 0xd1, 0xe3, 0xe2, 0xcd, 0xba, 0x03, 0x00, 0x00,
}
