/*
Copyright 2019 Cisco Systems

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: ntp_edm_status_result.proto

package cisco_ios_xr_ip_ntp_oper_ntp_nodes_node_status

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type NtpEdmStatusResult_KEYS struct {
	Node                 string   `protobuf:"bytes,1,opt,name=node,proto3" json:"node,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NtpEdmStatusResult_KEYS) Reset()         { *m = NtpEdmStatusResult_KEYS{} }
func (m *NtpEdmStatusResult_KEYS) String() string { return proto.CompactTextString(m) }
func (*NtpEdmStatusResult_KEYS) ProtoMessage()    {}
func (*NtpEdmStatusResult_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_849f5972412e8156, []int{0}
}

func (m *NtpEdmStatusResult_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NtpEdmStatusResult_KEYS.Unmarshal(m, b)
}
func (m *NtpEdmStatusResult_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NtpEdmStatusResult_KEYS.Marshal(b, m, deterministic)
}
func (m *NtpEdmStatusResult_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NtpEdmStatusResult_KEYS.Merge(m, src)
}
func (m *NtpEdmStatusResult_KEYS) XXX_Size() int {
	return xxx_messageInfo_NtpEdmStatusResult_KEYS.Size(m)
}
func (m *NtpEdmStatusResult_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_NtpEdmStatusResult_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_NtpEdmStatusResult_KEYS proto.InternalMessageInfo

func (m *NtpEdmStatusResult_KEYS) GetNode() string {
	if m != nil {
		return m.Node
	}
	return ""
}

type EdmUlI struct {
	Int                  uint32   `protobuf:"varint,1,opt,name=int,proto3" json:"int,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EdmUlI) Reset()         { *m = EdmUlI{} }
func (m *EdmUlI) String() string { return proto.CompactTextString(m) }
func (*EdmUlI) ProtoMessage()    {}
func (*EdmUlI) Descriptor() ([]byte, []int) {
	return fileDescriptor_849f5972412e8156, []int{1}
}

func (m *EdmUlI) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EdmUlI.Unmarshal(m, b)
}
func (m *EdmUlI) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EdmUlI.Marshal(b, m, deterministic)
}
func (m *EdmUlI) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EdmUlI.Merge(m, src)
}
func (m *EdmUlI) XXX_Size() int {
	return xxx_messageInfo_EdmUlI.Size(m)
}
func (m *EdmUlI) XXX_DiscardUnknown() {
	xxx_messageInfo_EdmUlI.DiscardUnknown(m)
}

var xxx_messageInfo_EdmUlI proto.InternalMessageInfo

func (m *EdmUlI) GetInt() uint32 {
	if m != nil {
		return m.Int
	}
	return 0
}

type EdmUlF struct {
	Frac                 uint32   `protobuf:"varint,1,opt,name=frac,proto3" json:"frac,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EdmUlF) Reset()         { *m = EdmUlF{} }
func (m *EdmUlF) String() string { return proto.CompactTextString(m) }
func (*EdmUlF) ProtoMessage()    {}
func (*EdmUlF) Descriptor() ([]byte, []int) {
	return fileDescriptor_849f5972412e8156, []int{2}
}

func (m *EdmUlF) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EdmUlF.Unmarshal(m, b)
}
func (m *EdmUlF) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EdmUlF.Marshal(b, m, deterministic)
}
func (m *EdmUlF) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EdmUlF.Merge(m, src)
}
func (m *EdmUlF) XXX_Size() int {
	return xxx_messageInfo_EdmUlF.Size(m)
}
func (m *EdmUlF) XXX_DiscardUnknown() {
	xxx_messageInfo_EdmUlF.DiscardUnknown(m)
}

var xxx_messageInfo_EdmUlF proto.InternalMessageInfo

func (m *EdmUlF) GetFrac() uint32 {
	if m != nil {
		return m.Frac
	}
	return 0
}

type EdmLFp struct {
	Sec                  *EdmUlI  `protobuf:"bytes,1,opt,name=sec,proto3" json:"sec,omitempty"`
	FracSecs             *EdmUlF  `protobuf:"bytes,2,opt,name=frac_secs,json=fracSecs,proto3" json:"frac_secs,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EdmLFp) Reset()         { *m = EdmLFp{} }
func (m *EdmLFp) String() string { return proto.CompactTextString(m) }
func (*EdmLFp) ProtoMessage()    {}
func (*EdmLFp) Descriptor() ([]byte, []int) {
	return fileDescriptor_849f5972412e8156, []int{3}
}

func (m *EdmLFp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EdmLFp.Unmarshal(m, b)
}
func (m *EdmLFp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EdmLFp.Marshal(b, m, deterministic)
}
func (m *EdmLFp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EdmLFp.Merge(m, src)
}
func (m *EdmLFp) XXX_Size() int {
	return xxx_messageInfo_EdmLFp.Size(m)
}
func (m *EdmLFp) XXX_DiscardUnknown() {
	xxx_messageInfo_EdmLFp.DiscardUnknown(m)
}

var xxx_messageInfo_EdmLFp proto.InternalMessageInfo

func (m *EdmLFp) GetSec() *EdmUlI {
	if m != nil {
		return m.Sec
	}
	return nil
}

func (m *EdmLFp) GetFracSecs() *EdmUlF {
	if m != nil {
		return m.FracSecs
	}
	return nil
}

type NtpEdmStatusResult struct {
	IsNtpEnabled         bool     `protobuf:"varint,50,opt,name=is_ntp_enabled,json=isNtpEnabled,proto3" json:"is_ntp_enabled,omitempty"`
	SysDispersion        string   `protobuf:"bytes,51,opt,name=sys_dispersion,json=sysDispersion,proto3" json:"sys_dispersion,omitempty"`
	SysOffset            string   `protobuf:"bytes,52,opt,name=sys_offset,json=sysOffset,proto3" json:"sys_offset,omitempty"`
	ClockPeriod          uint32   `protobuf:"varint,53,opt,name=clock_period,json=clockPeriod,proto3" json:"clock_period,omitempty"`
	SysLeap              string   `protobuf:"bytes,54,opt,name=sys_leap,json=sysLeap,proto3" json:"sys_leap,omitempty"`
	SysPrecision         string   `protobuf:"bytes,55,opt,name=sys_precision,json=sysPrecision,proto3" json:"sys_precision,omitempty"`
	SysStratum           uint32   `protobuf:"varint,56,opt,name=sys_stratum,json=sysStratum,proto3" json:"sys_stratum,omitempty"`
	SysRefId             string   `protobuf:"bytes,57,opt,name=sys_ref_id,json=sysRefId,proto3" json:"sys_ref_id,omitempty"`
	SysRefTime           *EdmLFp  `protobuf:"bytes,58,opt,name=sys_ref_time,json=sysRefTime,proto3" json:"sys_ref_time,omitempty"`
	SysRootDelay         string   `protobuf:"bytes,59,opt,name=sys_root_delay,json=sysRootDelay,proto3" json:"sys_root_delay,omitempty"`
	SysRootDispersion    string   `protobuf:"bytes,60,opt,name=sys_root_dispersion,json=sysRootDispersion,proto3" json:"sys_root_dispersion,omitempty"`
	LoopFilterState      string   `protobuf:"bytes,61,opt,name=loop_filter_state,json=loopFilterState,proto3" json:"loop_filter_state,omitempty"`
	SysDrift             *EdmLFp  `protobuf:"bytes,62,opt,name=sys_drift,json=sysDrift,proto3" json:"sys_drift,omitempty"`
	PollInterval         uint32   `protobuf:"varint,63,opt,name=poll_interval,json=pollInterval,proto3" json:"poll_interval,omitempty"`
	IsUpdated            string   `protobuf:"bytes,64,opt,name=is_updated,json=isUpdated,proto3" json:"is_updated,omitempty"`
	LastUpdate           int32    `protobuf:"zigzag32,65,opt,name=last_update,json=lastUpdate,proto3" json:"last_update,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NtpEdmStatusResult) Reset()         { *m = NtpEdmStatusResult{} }
func (m *NtpEdmStatusResult) String() string { return proto.CompactTextString(m) }
func (*NtpEdmStatusResult) ProtoMessage()    {}
func (*NtpEdmStatusResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_849f5972412e8156, []int{4}
}

func (m *NtpEdmStatusResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NtpEdmStatusResult.Unmarshal(m, b)
}
func (m *NtpEdmStatusResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NtpEdmStatusResult.Marshal(b, m, deterministic)
}
func (m *NtpEdmStatusResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NtpEdmStatusResult.Merge(m, src)
}
func (m *NtpEdmStatusResult) XXX_Size() int {
	return xxx_messageInfo_NtpEdmStatusResult.Size(m)
}
func (m *NtpEdmStatusResult) XXX_DiscardUnknown() {
	xxx_messageInfo_NtpEdmStatusResult.DiscardUnknown(m)
}

var xxx_messageInfo_NtpEdmStatusResult proto.InternalMessageInfo

func (m *NtpEdmStatusResult) GetIsNtpEnabled() bool {
	if m != nil {
		return m.IsNtpEnabled
	}
	return false
}

func (m *NtpEdmStatusResult) GetSysDispersion() string {
	if m != nil {
		return m.SysDispersion
	}
	return ""
}

func (m *NtpEdmStatusResult) GetSysOffset() string {
	if m != nil {
		return m.SysOffset
	}
	return ""
}

func (m *NtpEdmStatusResult) GetClockPeriod() uint32 {
	if m != nil {
		return m.ClockPeriod
	}
	return 0
}

func (m *NtpEdmStatusResult) GetSysLeap() string {
	if m != nil {
		return m.SysLeap
	}
	return ""
}

func (m *NtpEdmStatusResult) GetSysPrecision() string {
	if m != nil {
		return m.SysPrecision
	}
	return ""
}

func (m *NtpEdmStatusResult) GetSysStratum() uint32 {
	if m != nil {
		return m.SysStratum
	}
	return 0
}

func (m *NtpEdmStatusResult) GetSysRefId() string {
	if m != nil {
		return m.SysRefId
	}
	return ""
}

func (m *NtpEdmStatusResult) GetSysRefTime() *EdmLFp {
	if m != nil {
		return m.SysRefTime
	}
	return nil
}

func (m *NtpEdmStatusResult) GetSysRootDelay() string {
	if m != nil {
		return m.SysRootDelay
	}
	return ""
}

func (m *NtpEdmStatusResult) GetSysRootDispersion() string {
	if m != nil {
		return m.SysRootDispersion
	}
	return ""
}

func (m *NtpEdmStatusResult) GetLoopFilterState() string {
	if m != nil {
		return m.LoopFilterState
	}
	return ""
}

func (m *NtpEdmStatusResult) GetSysDrift() *EdmLFp {
	if m != nil {
		return m.SysDrift
	}
	return nil
}

func (m *NtpEdmStatusResult) GetPollInterval() uint32 {
	if m != nil {
		return m.PollInterval
	}
	return 0
}

func (m *NtpEdmStatusResult) GetIsUpdated() string {
	if m != nil {
		return m.IsUpdated
	}
	return ""
}

func (m *NtpEdmStatusResult) GetLastUpdate() int32 {
	if m != nil {
		return m.LastUpdate
	}
	return 0
}

func init() {
	proto.RegisterType((*NtpEdmStatusResult_KEYS)(nil), "cisco_ios_xr_ip_ntp_oper.ntp.nodes.node.status.ntp_edm_status_result_KEYS")
	proto.RegisterType((*EdmUlI)(nil), "cisco_ios_xr_ip_ntp_oper.ntp.nodes.node.status.edm_ul_i")
	proto.RegisterType((*EdmUlF)(nil), "cisco_ios_xr_ip_ntp_oper.ntp.nodes.node.status.edm_ul_f")
	proto.RegisterType((*EdmLFp)(nil), "cisco_ios_xr_ip_ntp_oper.ntp.nodes.node.status.edm_l_fp")
	proto.RegisterType((*NtpEdmStatusResult)(nil), "cisco_ios_xr_ip_ntp_oper.ntp.nodes.node.status.ntp_edm_status_result")
}

func init() { proto.RegisterFile("ntp_edm_status_result.proto", fileDescriptor_849f5972412e8156) }

var fileDescriptor_849f5972412e8156 = []byte{
	// 532 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x54, 0xdd, 0x6e, 0x13, 0x3d,
	0x10, 0x55, 0xbe, 0x7e, 0x40, 0xea, 0xa4, 0x85, 0x18, 0x21, 0x19, 0x28, 0x10, 0x02, 0x48, 0x11,
	0x17, 0x2b, 0xd4, 0xf2, 0x53, 0xfe, 0x41, 0x4a, 0x91, 0x0a, 0x08, 0xaa, 0x0d, 0xbd, 0x80, 0x1b,
	0x6b, 0xbb, 0x3b, 0x96, 0x2c, 0x9c, 0xb5, 0xe5, 0x71, 0x10, 0xfb, 0x50, 0x3c, 0x03, 0xaf, 0x86,
	0x66, 0x36, 0x3f, 0x37, 0xbd, 0x81, 0xde, 0xac, 0xac, 0x73, 0x8e, 0xcf, 0x8c, 0xcf, 0x8c, 0x56,
	0x5c, 0xaf, 0x53, 0xd0, 0x50, 0xcd, 0x34, 0xa6, 0x22, 0xcd, 0x51, 0x47, 0xc0, 0xb9, 0x4b, 0x59,
	0x88, 0x3e, 0x79, 0x99, 0x95, 0x16, 0x4b, 0xaf, 0xad, 0x47, 0xfd, 0x33, 0x6a, 0x1b, 0x34, 0x89,
	0x7d, 0x80, 0x98, 0xd5, 0x29, 0x64, 0xb5, 0xaf, 0x00, 0xf9, 0x9b, 0xb5, 0x97, 0x47, 0x0f, 0xc4,
	0xb5, 0x53, 0xed, 0xf4, 0x87, 0x83, 0xaf, 0x53, 0x29, 0xc5, 0xff, 0x24, 0x56, 0x9d, 0x61, 0x67,
	0xbc, 0x99, 0xf3, 0x79, 0xb4, 0x23, 0xba, 0xa4, 0x9e, 0x3b, 0x6d, 0xe5, 0x25, 0xb1, 0x61, 0xeb,
	0xc4, 0xf4, 0x56, 0x4e, 0xc7, 0xd1, 0xcd, 0x15, 0x6b, 0xe8, 0xb6, 0x89, 0x45, 0xb9, 0xa0, 0xf9,
	0x3c, 0xfa, 0xd5, 0x69, 0x05, 0x4e, 0x9b, 0x20, 0xdf, 0x8b, 0x0d, 0x84, 0x96, 0xef, 0xed, 0xee,
	0xff, 0x65, 0xeb, 0xd9, 0xb2, 0x8b, 0x9c, 0x4c, 0xe4, 0xb1, 0xd8, 0xa4, 0x02, 0x1a, 0xa1, 0x44,
	0xf5, 0xdf, 0x99, 0x1c, 0x4d, 0xde, 0x25, 0xab, 0x29, 0x94, 0x38, 0xfa, 0x7d, 0x4e, 0x5c, 0x39,
	0x35, 0x20, 0x79, 0x57, 0x6c, 0x5b, 0x64, 0x47, 0xa8, 0x8b, 0x13, 0x07, 0x95, 0xda, 0x1d, 0x76,
	0xc6, 0xdd, 0xbc, 0x6f, 0xf1, 0x53, 0x0a, 0x07, 0x2d, 0x26, 0xef, 0x89, 0x6d, 0x6c, 0x50, 0x57,
	0x16, 0x03, 0x44, 0xb4, 0xbe, 0x56, 0x7b, 0x9c, 0xe5, 0x16, 0x36, 0x38, 0x59, 0x81, 0xf2, 0x86,
	0x10, 0x24, 0xf3, 0xc6, 0x20, 0x24, 0xf5, 0x90, 0x25, 0x9b, 0xd8, 0xe0, 0x67, 0x06, 0xe4, 0x6d,
	0xd1, 0x2f, 0x9d, 0x2f, 0xbf, 0xeb, 0x00, 0xd1, 0xfa, 0x4a, 0x3d, 0xe2, 0x44, 0x7b, 0x8c, 0x1d,
	0x31, 0x24, 0xaf, 0x8a, 0x2e, 0x39, 0x38, 0x28, 0x82, 0x7a, 0xcc, 0xf7, 0x2f, 0x60, 0x83, 0x1f,
	0xa1, 0x08, 0xf2, 0x8e, 0xa0, 0x6a, 0x3a, 0x44, 0x28, 0x2d, 0xb7, 0xf0, 0x84, 0xf9, 0x3e, 0x36,
	0x78, 0xb4, 0xc4, 0xe4, 0x2d, 0xd1, 0x23, 0x11, 0xa6, 0x58, 0xa4, 0xf9, 0x4c, 0xed, 0x73, 0x05,
	0x6a, 0x6a, 0xda, 0x22, 0x72, 0xa7, 0x6d, 0x31, 0x82, 0xd1, 0xb6, 0x52, 0x4f, 0xd9, 0x82, 0x4a,
	0xe6, 0x60, 0x0e, 0x2b, 0xf9, 0x4d, 0xf4, 0x97, 0x6c, 0xb2, 0x33, 0x50, 0xcf, 0xfe, 0x7d, 0x02,
	0xb4, 0x1a, 0x5c, 0x39, 0x07, 0xf3, 0xc5, 0xce, 0x80, 0x92, 0x66, 0x6f, 0xef, 0x93, 0xae, 0xc0,
	0x15, 0x8d, 0x7a, 0xbe, 0x7a, 0x40, 0xee, 0x7d, 0x9a, 0x10, 0x26, 0x33, 0x71, 0x79, 0xad, 0x5a,
	0xc7, 0xfd, 0x82, 0xa5, 0x83, 0xa5, 0x74, 0x1d, 0xf9, 0x7d, 0x31, 0x70, 0xde, 0x07, 0x6d, 0xac,
	0x4b, 0x10, 0x79, 0xb8, 0xa0, 0x5e, 0xb2, 0xfa, 0x22, 0x11, 0xef, 0x18, 0x9f, 0x12, 0x4c, 0xcb,
	0xc5, 0x53, 0x8c, 0xd6, 0x24, 0xf5, 0xea, 0x8c, 0x4f, 0xa3, 0xd0, 0x26, 0xe4, 0x44, 0x83, 0x09,
	0xde, 0x39, 0x6d, 0xeb, 0x04, 0xf1, 0x47, 0xe1, 0xd4, 0x6b, 0x4e, 0xbd, 0x4f, 0xe0, 0xe1, 0x02,
	0xa3, 0xd5, 0xb0, 0xa8, 0xe7, 0xa1, 0x2a, 0x12, 0x54, 0xea, 0x4d, 0xbb, 0x1a, 0x16, 0x8f, 0x5b,
	0x80, 0xe6, 0xe6, 0x0a, 0x4c, 0x0b, 0x81, 0x7a, 0x3b, 0xec, 0x8c, 0x07, 0xb9, 0x20, 0xa8, 0x55,
	0x9c, 0x9c, 0xe7, 0x1f, 0xc3, 0xde, 0x9f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x0b, 0x12, 0x31, 0x9d,
	0x37, 0x04, 0x00, 0x00,
}
