/*
Copyright 2019 Cisco Systems

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: tcp_sh_brief_bag.proto

package cisco_ios_xr_ip_tcp_oper_tcp_connection_nodes_node_brief_informations_brief_information

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type TcpShBriefBag_KEYS struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	PcbId                uint32   `protobuf:"varint,2,opt,name=pcb_id,json=pcbId,proto3" json:"pcb_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TcpShBriefBag_KEYS) Reset()         { *m = TcpShBriefBag_KEYS{} }
func (m *TcpShBriefBag_KEYS) String() string { return proto.CompactTextString(m) }
func (*TcpShBriefBag_KEYS) ProtoMessage()    {}
func (*TcpShBriefBag_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_24a163aa564e6e36, []int{0}
}

func (m *TcpShBriefBag_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TcpShBriefBag_KEYS.Unmarshal(m, b)
}
func (m *TcpShBriefBag_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TcpShBriefBag_KEYS.Marshal(b, m, deterministic)
}
func (m *TcpShBriefBag_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TcpShBriefBag_KEYS.Merge(m, src)
}
func (m *TcpShBriefBag_KEYS) XXX_Size() int {
	return xxx_messageInfo_TcpShBriefBag_KEYS.Size(m)
}
func (m *TcpShBriefBag_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_TcpShBriefBag_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_TcpShBriefBag_KEYS proto.InternalMessageInfo

func (m *TcpShBriefBag_KEYS) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *TcpShBriefBag_KEYS) GetPcbId() uint32 {
	if m != nil {
		return m.PcbId
	}
	return 0
}

type TcpAddressType struct {
	AfName               string   `protobuf:"bytes,1,opt,name=af_name,json=afName,proto3" json:"af_name,omitempty"`
	Ipv4Address          string   `protobuf:"bytes,2,opt,name=ipv4_address,json=ipv4Address,proto3" json:"ipv4_address,omitempty"`
	Ipv6Address          string   `protobuf:"bytes,3,opt,name=ipv6_address,json=ipv6Address,proto3" json:"ipv6_address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TcpAddressType) Reset()         { *m = TcpAddressType{} }
func (m *TcpAddressType) String() string { return proto.CompactTextString(m) }
func (*TcpAddressType) ProtoMessage()    {}
func (*TcpAddressType) Descriptor() ([]byte, []int) {
	return fileDescriptor_24a163aa564e6e36, []int{1}
}

func (m *TcpAddressType) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TcpAddressType.Unmarshal(m, b)
}
func (m *TcpAddressType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TcpAddressType.Marshal(b, m, deterministic)
}
func (m *TcpAddressType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TcpAddressType.Merge(m, src)
}
func (m *TcpAddressType) XXX_Size() int {
	return xxx_messageInfo_TcpAddressType.Size(m)
}
func (m *TcpAddressType) XXX_DiscardUnknown() {
	xxx_messageInfo_TcpAddressType.DiscardUnknown(m)
}

var xxx_messageInfo_TcpAddressType proto.InternalMessageInfo

func (m *TcpAddressType) GetAfName() string {
	if m != nil {
		return m.AfName
	}
	return ""
}

func (m *TcpAddressType) GetIpv4Address() string {
	if m != nil {
		return m.Ipv4Address
	}
	return ""
}

func (m *TcpAddressType) GetIpv6Address() string {
	if m != nil {
		return m.Ipv6Address
	}
	return ""
}

type TcpShBriefBag struct {
	AfName                  string          `protobuf:"bytes,50,opt,name=af_name,json=afName,proto3" json:"af_name,omitempty"`
	Pcb                     uint64          `protobuf:"varint,51,opt,name=pcb,proto3" json:"pcb,omitempty"`
	ConnectionState         string          `protobuf:"bytes,52,opt,name=connection_state,json=connectionState,proto3" json:"connection_state,omitempty"`
	LocalPid                uint32          `protobuf:"varint,53,opt,name=local_pid,json=localPid,proto3" json:"local_pid,omitempty"`
	LocalAddress            *TcpAddressType `protobuf:"bytes,54,opt,name=local_address,json=localAddress,proto3" json:"local_address,omitempty"`
	ForeignAddress          *TcpAddressType `protobuf:"bytes,55,opt,name=foreign_address,json=foreignAddress,proto3" json:"foreign_address,omitempty"`
	LocalPort               uint32          `protobuf:"varint,56,opt,name=local_port,json=localPort,proto3" json:"local_port,omitempty"`
	ForeignPort             uint32          `protobuf:"varint,57,opt,name=foreign_port,json=foreignPort,proto3" json:"foreign_port,omitempty"`
	CurrentReceiveQueueSize uint32          `protobuf:"varint,58,opt,name=current_receive_queue_size,json=currentReceiveQueueSize,proto3" json:"current_receive_queue_size,omitempty"`
	CurrentSendQueueSize    uint32          `protobuf:"varint,59,opt,name=current_send_queue_size,json=currentSendQueueSize,proto3" json:"current_send_queue_size,omitempty"`
	VrfId                   uint32          `protobuf:"varint,60,opt,name=vrf_id,json=vrfId,proto3" json:"vrf_id,omitempty"`
	XXX_NoUnkeyedLiteral    struct{}        `json:"-"`
	XXX_unrecognized        []byte          `json:"-"`
	XXX_sizecache           int32           `json:"-"`
}

func (m *TcpShBriefBag) Reset()         { *m = TcpShBriefBag{} }
func (m *TcpShBriefBag) String() string { return proto.CompactTextString(m) }
func (*TcpShBriefBag) ProtoMessage()    {}
func (*TcpShBriefBag) Descriptor() ([]byte, []int) {
	return fileDescriptor_24a163aa564e6e36, []int{2}
}

func (m *TcpShBriefBag) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TcpShBriefBag.Unmarshal(m, b)
}
func (m *TcpShBriefBag) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TcpShBriefBag.Marshal(b, m, deterministic)
}
func (m *TcpShBriefBag) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TcpShBriefBag.Merge(m, src)
}
func (m *TcpShBriefBag) XXX_Size() int {
	return xxx_messageInfo_TcpShBriefBag.Size(m)
}
func (m *TcpShBriefBag) XXX_DiscardUnknown() {
	xxx_messageInfo_TcpShBriefBag.DiscardUnknown(m)
}

var xxx_messageInfo_TcpShBriefBag proto.InternalMessageInfo

func (m *TcpShBriefBag) GetAfName() string {
	if m != nil {
		return m.AfName
	}
	return ""
}

func (m *TcpShBriefBag) GetPcb() uint64 {
	if m != nil {
		return m.Pcb
	}
	return 0
}

func (m *TcpShBriefBag) GetConnectionState() string {
	if m != nil {
		return m.ConnectionState
	}
	return ""
}

func (m *TcpShBriefBag) GetLocalPid() uint32 {
	if m != nil {
		return m.LocalPid
	}
	return 0
}

func (m *TcpShBriefBag) GetLocalAddress() *TcpAddressType {
	if m != nil {
		return m.LocalAddress
	}
	return nil
}

func (m *TcpShBriefBag) GetForeignAddress() *TcpAddressType {
	if m != nil {
		return m.ForeignAddress
	}
	return nil
}

func (m *TcpShBriefBag) GetLocalPort() uint32 {
	if m != nil {
		return m.LocalPort
	}
	return 0
}

func (m *TcpShBriefBag) GetForeignPort() uint32 {
	if m != nil {
		return m.ForeignPort
	}
	return 0
}

func (m *TcpShBriefBag) GetCurrentReceiveQueueSize() uint32 {
	if m != nil {
		return m.CurrentReceiveQueueSize
	}
	return 0
}

func (m *TcpShBriefBag) GetCurrentSendQueueSize() uint32 {
	if m != nil {
		return m.CurrentSendQueueSize
	}
	return 0
}

func (m *TcpShBriefBag) GetVrfId() uint32 {
	if m != nil {
		return m.VrfId
	}
	return 0
}

func init() {
	proto.RegisterType((*TcpShBriefBag_KEYS)(nil), "cisco_ios_xr_ip_tcp_oper.tcp_connection.nodes.node.brief_informations.brief_information.tcp_sh_brief_bag_KEYS")
	proto.RegisterType((*TcpAddressType)(nil), "cisco_ios_xr_ip_tcp_oper.tcp_connection.nodes.node.brief_informations.brief_information.tcp_address_type")
	proto.RegisterType((*TcpShBriefBag)(nil), "cisco_ios_xr_ip_tcp_oper.tcp_connection.nodes.node.brief_informations.brief_information.tcp_sh_brief_bag")
}

func init() { proto.RegisterFile("tcp_sh_brief_bag.proto", fileDescriptor_24a163aa564e6e36) }

var fileDescriptor_24a163aa564e6e36 = []byte{
	// 444 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x93, 0xcb, 0x6f, 0x13, 0x31,
	0x10, 0xc6, 0xb5, 0x69, 0x09, 0xc4, 0xe9, 0x23, 0x5a, 0x11, 0xba, 0x02, 0x21, 0x85, 0x9c, 0xc2,
	0x65, 0x0f, 0x7d, 0x84, 0x47, 0x11, 0x12, 0x07, 0x0e, 0x15, 0x12, 0x2a, 0x9b, 0x03, 0xe2, 0x34,
	0xf2, 0xda, 0xb3, 0x65, 0xa4, 0xc6, 0x76, 0x6d, 0x67, 0x05, 0xfd, 0x23, 0x38, 0xf0, 0xd7, 0x72,
	0x44, 0xf6, 0xee, 0x26, 0xa1, 0x9c, 0xe1, 0xb2, 0xb2, 0xbe, 0xf9, 0x7d, 0x9e, 0x6f, 0xc7, 0x36,
	0x7b, 0xe4, 0x85, 0x01, 0xf7, 0x15, 0x4a, 0x4b, 0x58, 0x41, 0xc9, 0xaf, 0x72, 0x63, 0xb5, 0xd7,
	0xe9, 0x67, 0x41, 0x4e, 0x68, 0x20, 0xed, 0xe0, 0x9b, 0x05, 0x32, 0x10, 0x38, 0x6d, 0xd0, 0xe6,
	0x61, 0x21, 0xb4, 0x52, 0x28, 0x3c, 0x69, 0x95, 0x2b, 0x2d, 0xd1, 0xc5, 0x6f, 0xde, 0xec, 0x41,
	0xaa, 0xd2, 0x76, 0xc9, 0x43, 0xd1, 0xfd, 0x2d, 0x4d, 0xdf, 0xb2, 0xf1, 0xdd, 0x96, 0xf0, 0xe1,
	0xfd, 0x97, 0x45, 0x7a, 0xc0, 0x7a, 0x24, 0xb3, 0x64, 0x92, 0xcc, 0x06, 0x45, 0x8f, 0x64, 0x3a,
	0x66, 0x7d, 0x23, 0x4a, 0x20, 0x99, 0xf5, 0x26, 0xc9, 0x6c, 0xbf, 0xb8, 0x67, 0x44, 0x79, 0x21,
	0xa7, 0x37, 0x6c, 0x14, 0xfc, 0x5c, 0x4a, 0x8b, 0xce, 0x81, 0xff, 0x6e, 0x30, 0x3d, 0x62, 0xf7,
	0x79, 0x05, 0x8a, 0x2f, 0xb1, 0xf5, 0xf7, 0x79, 0xf5, 0x91, 0x2f, 0x31, 0x7d, 0xc6, 0xf6, 0xc8,
	0xd4, 0xa7, 0x1d, 0x1d, 0x77, 0x1a, 0x14, 0xc3, 0xa0, 0xbd, 0x6b, 0xa4, 0x16, 0x99, 0xaf, 0x91,
	0x9d, 0x35, 0x32, 0x6f, 0x91, 0xe9, 0xaf, 0xdd, 0xa6, 0xe7, 0x76, 0xe6, 0xed, 0x9e, 0xc7, 0x7f,
	0xf4, 0x1c, 0xb1, 0x1d, 0x23, 0xca, 0xec, 0x64, 0x92, 0xcc, 0x76, 0x8b, 0xb0, 0x4c, 0x9f, 0xb3,
	0xd1, 0x66, 0x60, 0xe0, 0x3c, 0xf7, 0x98, 0x9d, 0x46, 0xcf, 0xe1, 0x46, 0x5f, 0x04, 0x39, 0x7d,
	0xc2, 0x06, 0xd7, 0x5a, 0xf0, 0x6b, 0x30, 0x24, 0xb3, 0xb3, 0xf8, 0xdf, 0x0f, 0xa2, 0x70, 0x49,
	0x32, 0xfd, 0x91, 0xb0, 0xfd, 0xa6, 0xda, 0x85, 0x9d, 0x4f, 0x92, 0xd9, 0xf0, 0x98, 0xf2, 0x7f,
	0x74, 0x58, 0xf9, 0xdd, 0x49, 0x17, 0x7b, 0xb1, 0x7f, 0x37, 0xbb, 0x9f, 0x09, 0x3b, 0xac, 0xb4,
	0x45, 0xba, 0x52, 0xeb, 0x48, 0x2f, 0xfe, 0x77, 0xa4, 0x83, 0x36, 0x41, 0x17, 0xea, 0x29, 0x63,
	0xed, 0x08, 0xb5, 0xf5, 0xd9, 0xcb, 0x38, 0xc3, 0x66, 0xa8, 0x97, 0xda, 0xfa, 0x70, 0xde, 0x5d,
	0xe4, 0x08, 0xbc, 0x8a, 0xc0, 0xb0, 0xd5, 0x22, 0x72, 0xce, 0x1e, 0x8b, 0x95, 0xb5, 0xa8, 0x3c,
	0x58, 0x14, 0x48, 0x35, 0xc2, 0xcd, 0x0a, 0x57, 0x08, 0x8e, 0x6e, 0x31, 0x7b, 0x1d, 0x0d, 0x47,
	0x2d, 0x51, 0x34, 0xc0, 0xa7, 0x50, 0x5f, 0xd0, 0x2d, 0xa6, 0x67, 0xac, 0x2b, 0x81, 0x43, 0x25,
	0xb7, 0x9d, 0xe7, 0xd1, 0xf9, 0xb0, 0x2d, 0x2f, 0x50, 0xc9, 0x8d, 0x6d, 0xcc, 0xfa, 0xb5, 0xad,
	0xc2, 0x6d, 0x7f, 0xd3, 0xdc, 0xf6, 0xda, 0x56, 0x17, 0xb2, 0xec, 0xc7, 0xd7, 0x78, 0xf2, 0x3b,
	0x00, 0x00, 0xff, 0xff, 0xcc, 0x34, 0xc3, 0x1b, 0xa7, 0x03, 0x00, 0x00,
}
