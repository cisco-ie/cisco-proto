/*
Copyright 2019 Cisco Systems

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: ipv4_rib_edm_advert_entry.proto

package cisco_ios_xr_ip_rib_ipv4_oper_rib_stdby_vrfs_vrf_afs_af_safs_saf_ip_rib_route_table_names_ip_rib_route_table_name_adverts_advert

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Ipv4RibEdmAdvertEntry_KEYS struct {
	VrfName              string   `protobuf:"bytes,1,opt,name=vrf_name,json=vrfName,proto3" json:"vrf_name,omitempty"`
	AfName               string   `protobuf:"bytes,2,opt,name=af_name,json=afName,proto3" json:"af_name,omitempty"`
	SafName              string   `protobuf:"bytes,3,opt,name=saf_name,json=safName,proto3" json:"saf_name,omitempty"`
	RouteTableName       string   `protobuf:"bytes,4,opt,name=route_table_name,json=routeTableName,proto3" json:"route_table_name,omitempty"`
	Address              string   `protobuf:"bytes,5,opt,name=address,proto3" json:"address,omitempty"`
	PrefixLength         uint32   `protobuf:"varint,6,opt,name=prefix_length,json=prefixLength,proto3" json:"prefix_length,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Ipv4RibEdmAdvertEntry_KEYS) Reset()         { *m = Ipv4RibEdmAdvertEntry_KEYS{} }
func (m *Ipv4RibEdmAdvertEntry_KEYS) String() string { return proto.CompactTextString(m) }
func (*Ipv4RibEdmAdvertEntry_KEYS) ProtoMessage()    {}
func (*Ipv4RibEdmAdvertEntry_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_c245ff5e582cbb2a, []int{0}
}

func (m *Ipv4RibEdmAdvertEntry_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Ipv4RibEdmAdvertEntry_KEYS.Unmarshal(m, b)
}
func (m *Ipv4RibEdmAdvertEntry_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Ipv4RibEdmAdvertEntry_KEYS.Marshal(b, m, deterministic)
}
func (m *Ipv4RibEdmAdvertEntry_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Ipv4RibEdmAdvertEntry_KEYS.Merge(m, src)
}
func (m *Ipv4RibEdmAdvertEntry_KEYS) XXX_Size() int {
	return xxx_messageInfo_Ipv4RibEdmAdvertEntry_KEYS.Size(m)
}
func (m *Ipv4RibEdmAdvertEntry_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_Ipv4RibEdmAdvertEntry_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_Ipv4RibEdmAdvertEntry_KEYS proto.InternalMessageInfo

func (m *Ipv4RibEdmAdvertEntry_KEYS) GetVrfName() string {
	if m != nil {
		return m.VrfName
	}
	return ""
}

func (m *Ipv4RibEdmAdvertEntry_KEYS) GetAfName() string {
	if m != nil {
		return m.AfName
	}
	return ""
}

func (m *Ipv4RibEdmAdvertEntry_KEYS) GetSafName() string {
	if m != nil {
		return m.SafName
	}
	return ""
}

func (m *Ipv4RibEdmAdvertEntry_KEYS) GetRouteTableName() string {
	if m != nil {
		return m.RouteTableName
	}
	return ""
}

func (m *Ipv4RibEdmAdvertEntry_KEYS) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *Ipv4RibEdmAdvertEntry_KEYS) GetPrefixLength() uint32 {
	if m != nil {
		return m.PrefixLength
	}
	return 0
}

type Ipv4RibEdmAdvertItem struct {
	ProtocolId                  uint32   `protobuf:"varint,1,opt,name=protocol_id,json=protocolId,proto3" json:"protocol_id,omitempty"`
	ClientId                    uint32   `protobuf:"varint,2,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	NumberOfExtendedCommunities uint32   `protobuf:"varint,3,opt,name=number_of_extended_communities,json=numberOfExtendedCommunities,proto3" json:"number_of_extended_communities,omitempty"`
	ExtendedCommunities         []uint32 `protobuf:"varint,4,rep,packed,name=extended_communities,json=extendedCommunities,proto3" json:"extended_communities,omitempty"`
	ProtocolOpaqueFlags         uint32   `protobuf:"varint,5,opt,name=protocol_opaque_flags,json=protocolOpaqueFlags,proto3" json:"protocol_opaque_flags,omitempty"`
	ProtocolOpaque              uint32   `protobuf:"varint,6,opt,name=protocol_opaque,json=protocolOpaque,proto3" json:"protocol_opaque,omitempty"`
	Code                        string   `protobuf:"bytes,7,opt,name=code,proto3" json:"code,omitempty"`
	InstanceName                []string `protobuf:"bytes,8,rep,name=instance_name,json=instanceName,proto3" json:"instance_name,omitempty"`
	XXX_NoUnkeyedLiteral        struct{} `json:"-"`
	XXX_unrecognized            []byte   `json:"-"`
	XXX_sizecache               int32    `json:"-"`
}

func (m *Ipv4RibEdmAdvertItem) Reset()         { *m = Ipv4RibEdmAdvertItem{} }
func (m *Ipv4RibEdmAdvertItem) String() string { return proto.CompactTextString(m) }
func (*Ipv4RibEdmAdvertItem) ProtoMessage()    {}
func (*Ipv4RibEdmAdvertItem) Descriptor() ([]byte, []int) {
	return fileDescriptor_c245ff5e582cbb2a, []int{1}
}

func (m *Ipv4RibEdmAdvertItem) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Ipv4RibEdmAdvertItem.Unmarshal(m, b)
}
func (m *Ipv4RibEdmAdvertItem) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Ipv4RibEdmAdvertItem.Marshal(b, m, deterministic)
}
func (m *Ipv4RibEdmAdvertItem) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Ipv4RibEdmAdvertItem.Merge(m, src)
}
func (m *Ipv4RibEdmAdvertItem) XXX_Size() int {
	return xxx_messageInfo_Ipv4RibEdmAdvertItem.Size(m)
}
func (m *Ipv4RibEdmAdvertItem) XXX_DiscardUnknown() {
	xxx_messageInfo_Ipv4RibEdmAdvertItem.DiscardUnknown(m)
}

var xxx_messageInfo_Ipv4RibEdmAdvertItem proto.InternalMessageInfo

func (m *Ipv4RibEdmAdvertItem) GetProtocolId() uint32 {
	if m != nil {
		return m.ProtocolId
	}
	return 0
}

func (m *Ipv4RibEdmAdvertItem) GetClientId() uint32 {
	if m != nil {
		return m.ClientId
	}
	return 0
}

func (m *Ipv4RibEdmAdvertItem) GetNumberOfExtendedCommunities() uint32 {
	if m != nil {
		return m.NumberOfExtendedCommunities
	}
	return 0
}

func (m *Ipv4RibEdmAdvertItem) GetExtendedCommunities() []uint32 {
	if m != nil {
		return m.ExtendedCommunities
	}
	return nil
}

func (m *Ipv4RibEdmAdvertItem) GetProtocolOpaqueFlags() uint32 {
	if m != nil {
		return m.ProtocolOpaqueFlags
	}
	return 0
}

func (m *Ipv4RibEdmAdvertItem) GetProtocolOpaque() uint32 {
	if m != nil {
		return m.ProtocolOpaque
	}
	return 0
}

func (m *Ipv4RibEdmAdvertItem) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *Ipv4RibEdmAdvertItem) GetInstanceName() []string {
	if m != nil {
		return m.InstanceName
	}
	return nil
}

type Ipv4RibEdmAdvertEntry struct {
	Ipv4RibEdmAdvert     []*Ipv4RibEdmAdvertItem `protobuf:"bytes,50,rep,name=ipv4_rib_edm_advert,json=ipv4RibEdmAdvert,proto3" json:"ipv4_rib_edm_advert,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *Ipv4RibEdmAdvertEntry) Reset()         { *m = Ipv4RibEdmAdvertEntry{} }
func (m *Ipv4RibEdmAdvertEntry) String() string { return proto.CompactTextString(m) }
func (*Ipv4RibEdmAdvertEntry) ProtoMessage()    {}
func (*Ipv4RibEdmAdvertEntry) Descriptor() ([]byte, []int) {
	return fileDescriptor_c245ff5e582cbb2a, []int{2}
}

func (m *Ipv4RibEdmAdvertEntry) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Ipv4RibEdmAdvertEntry.Unmarshal(m, b)
}
func (m *Ipv4RibEdmAdvertEntry) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Ipv4RibEdmAdvertEntry.Marshal(b, m, deterministic)
}
func (m *Ipv4RibEdmAdvertEntry) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Ipv4RibEdmAdvertEntry.Merge(m, src)
}
func (m *Ipv4RibEdmAdvertEntry) XXX_Size() int {
	return xxx_messageInfo_Ipv4RibEdmAdvertEntry.Size(m)
}
func (m *Ipv4RibEdmAdvertEntry) XXX_DiscardUnknown() {
	xxx_messageInfo_Ipv4RibEdmAdvertEntry.DiscardUnknown(m)
}

var xxx_messageInfo_Ipv4RibEdmAdvertEntry proto.InternalMessageInfo

func (m *Ipv4RibEdmAdvertEntry) GetIpv4RibEdmAdvert() []*Ipv4RibEdmAdvertItem {
	if m != nil {
		return m.Ipv4RibEdmAdvert
	}
	return nil
}

func init() {
	proto.RegisterType((*Ipv4RibEdmAdvertEntry_KEYS)(nil), "cisco_ios_xr_ip_rib_ipv4_oper.rib_stdby.vrfs.vrf.afs.af.safs.saf.ip_rib_route_table_names.ip_rib_route_table_name.adverts.advert.ipv4_rib_edm_advert_entry_KEYS")
	proto.RegisterType((*Ipv4RibEdmAdvertItem)(nil), "cisco_ios_xr_ip_rib_ipv4_oper.rib_stdby.vrfs.vrf.afs.af.safs.saf.ip_rib_route_table_names.ip_rib_route_table_name.adverts.advert.ipv4_rib_edm_advert_item")
	proto.RegisterType((*Ipv4RibEdmAdvertEntry)(nil), "cisco_ios_xr_ip_rib_ipv4_oper.rib_stdby.vrfs.vrf.afs.af.safs.saf.ip_rib_route_table_names.ip_rib_route_table_name.adverts.advert.ipv4_rib_edm_advert_entry")
}

func init() { proto.RegisterFile("ipv4_rib_edm_advert_entry.proto", fileDescriptor_c245ff5e582cbb2a) }

var fileDescriptor_c245ff5e582cbb2a = []byte{
	// 469 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xc4, 0x93, 0xdf, 0x6e, 0xd3, 0x30,
	0x14, 0xc6, 0x95, 0xb6, 0xf4, 0xcf, 0xd9, 0x32, 0x26, 0x17, 0x44, 0xaa, 0x49, 0x5b, 0x54, 0x2e,
	0xc8, 0x95, 0x25, 0x0a, 0x2f, 0x80, 0xa6, 0x22, 0x4d, 0x20, 0x26, 0x05, 0x6e, 0xb8, 0xb2, 0x9c,
	0xf8, 0x78, 0x58, 0x4a, 0xe2, 0x60, 0xbb, 0x51, 0x77, 0xc7, 0x73, 0xf0, 0x48, 0x3c, 0x01, 0x4f,
	0x80, 0x78, 0x0c, 0x14, 0x27, 0x05, 0x51, 0xb5, 0xd7, 0xbb, 0x89, 0xe3, 0xef, 0xf7, 0x7d, 0xd1,
	0xf1, 0x39, 0x0e, 0x5c, 0xa9, 0xba, 0x79, 0xcd, 0x8c, 0xca, 0x18, 0x8a, 0x92, 0x71, 0xd1, 0xa0,
	0x71, 0x0c, 0x2b, 0x67, 0xee, 0x69, 0x6d, 0xb4, 0xd3, 0xe4, 0x5b, 0x90, 0x2b, 0x9b, 0x6b, 0xa6,
	0xb4, 0x65, 0x5b, 0xc3, 0x54, 0xed, 0xcd, 0x3e, 0xa5, 0x6b, 0x34, 0xb4, 0xdd, 0x59, 0x27, 0xb2,
	0x7b, 0xda, 0x18, 0x69, 0xdb, 0x07, 0xe5, 0xd2, 0x52, 0x2e, 0xa9, 0x6d, 0x57, 0xcb, 0x25, 0xed,
	0x33, 0x46, 0x6f, 0x1c, 0x32, 0xc7, 0xb3, 0x02, 0x59, 0xc5, 0x4b, 0xb4, 0xc7, 0x00, 0xed, 0xca,
	0xb0, 0xfd, 0xba, 0xfc, 0x19, 0xc0, 0xe5, 0xd1, 0x32, 0xd9, 0xbb, 0xf5, 0xe7, 0x8f, 0x64, 0x01,
	0xd3, 0xc6, 0x48, 0x9f, 0x8e, 0x82, 0x38, 0x48, 0x66, 0xe9, 0xa4, 0x31, 0xf2, 0x03, 0x2f, 0x91,
	0x3c, 0x83, 0x09, 0xef, 0xc9, 0xc0, 0x93, 0x31, 0xef, 0xc0, 0x02, 0xa6, 0x76, 0x47, 0x86, 0x5d,
	0xc6, 0xf6, 0x28, 0x81, 0xf3, 0xfd, 0xa2, 0xa2, 0x91, 0xb7, 0x9c, 0x79, 0xfd, 0x53, 0x2b, 0x7b,
	0x67, 0x04, 0x13, 0x2e, 0x84, 0x41, 0x6b, 0xa3, 0x47, 0xdd, 0x37, 0xfa, 0x2d, 0x79, 0x0e, 0x61,
	0x6d, 0x50, 0xaa, 0x2d, 0x2b, 0xb0, 0xba, 0x73, 0x5f, 0xa2, 0x71, 0x1c, 0x24, 0x61, 0x7a, 0xda,
	0x89, 0xef, 0xbd, 0xb6, 0xfc, 0x35, 0x80, 0xe8, 0xd0, 0xd1, 0x94, 0xc3, 0x92, 0x5c, 0xc1, 0x89,
	0x9f, 0x41, 0xae, 0x0b, 0xa6, 0x84, 0x3f, 0x57, 0x98, 0xc2, 0x4e, 0xba, 0x11, 0xe4, 0x02, 0x66,
	0x79, 0xa1, 0xb0, 0x72, 0x2d, 0x1e, 0x78, 0x3c, 0xed, 0x84, 0x1b, 0x41, 0xae, 0xe1, 0xb2, 0xda,
	0x94, 0x19, 0x1a, 0xa6, 0x25, 0xc3, 0xad, 0xc3, 0x4a, 0xa0, 0x60, 0xb9, 0x2e, 0xcb, 0x4d, 0xa5,
	0x9c, 0x42, 0xeb, 0x0f, 0x1d, 0xa6, 0x17, 0x9d, 0xeb, 0x56, 0xae, 0x7b, 0xcf, 0xf5, 0x3f, 0x0b,
	0x79, 0x09, 0x4f, 0x0e, 0x46, 0x47, 0xf1, 0x30, 0x09, 0xd3, 0x39, 0x1e, 0x88, 0xac, 0xe0, 0xe9,
	0xdf, 0xaa, 0x75, 0xcd, 0xbf, 0x6e, 0x90, 0xc9, 0x82, 0xdf, 0x75, 0xfd, 0x09, 0xd3, 0xf9, 0x0e,
	0xde, 0x7a, 0xf6, 0xb6, 0x45, 0xe4, 0x05, 0x3c, 0xde, 0xcb, 0xf4, 0xdd, 0x3a, 0xfb, 0xdf, 0x4d,
	0x08, 0x8c, 0x72, 0x2d, 0x30, 0x9a, 0xf8, 0x5e, 0xfb, 0xf7, 0xb6, 0xd1, 0xaa, 0xb2, 0x8e, 0x57,
	0x79, 0x3f, 0xa9, 0x69, 0x3c, 0x4c, 0x66, 0xe9, 0xe9, 0x4e, 0x6c, 0xe7, 0xb4, 0xfc, 0x1d, 0xc0,
	0xe2, 0xe8, 0x1d, 0x22, 0x3f, 0x02, 0x98, 0x1f, 0xa0, 0xd1, 0x2a, 0x1e, 0x26, 0x27, 0xab, 0xef,
	0x01, 0x7d, 0xe8, 0x7f, 0x80, 0x1e, 0xbb, 0x24, 0xe9, 0x79, 0x4b, 0x52, 0x95, 0xad, 0x45, 0xf9,
	0xc6, 0xcb, 0xd9, 0xd8, 0xf7, 0xec, 0xd5, 0x9f, 0x00, 0x00, 0x00, 0xff, 0xff, 0xf0, 0x35, 0x1c,
	0xa1, 0xdb, 0x03, 0x00, 0x00,
}
