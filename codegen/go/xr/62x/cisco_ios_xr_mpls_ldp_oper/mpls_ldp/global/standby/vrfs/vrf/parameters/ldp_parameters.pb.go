/*
Copyright 2019 Cisco Systems

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: ldp_parameters.proto

package cisco_ios_xr_mpls_ldp_oper_mpls_ldp_global_standby_vrfs_vrf_parameters

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type LdpParameters_KEYS struct {
	VrfName              string   `protobuf:"bytes,1,opt,name=vrf_name,json=vrfName,proto3" json:"vrf_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LdpParameters_KEYS) Reset()         { *m = LdpParameters_KEYS{} }
func (m *LdpParameters_KEYS) String() string { return proto.CompactTextString(m) }
func (*LdpParameters_KEYS) ProtoMessage()    {}
func (*LdpParameters_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_3ad4e1a45191b20a, []int{0}
}

func (m *LdpParameters_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LdpParameters_KEYS.Unmarshal(m, b)
}
func (m *LdpParameters_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LdpParameters_KEYS.Marshal(b, m, deterministic)
}
func (m *LdpParameters_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LdpParameters_KEYS.Merge(m, src)
}
func (m *LdpParameters_KEYS) XXX_Size() int {
	return xxx_messageInfo_LdpParameters_KEYS.Size(m)
}
func (m *LdpParameters_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_LdpParameters_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_LdpParameters_KEYS proto.InternalMessageInfo

func (m *LdpParameters_KEYS) GetVrfName() string {
	if m != nil {
		return m.VrfName
	}
	return ""
}

type LdpGracefulRestartInfo struct {
	IsGracefulRestartConfigured            bool     `protobuf:"varint,1,opt,name=is_graceful_restart_configured,json=isGracefulRestartConfigured,proto3" json:"is_graceful_restart_configured,omitempty"`
	GracefulRestartReconnectTimeout        uint32   `protobuf:"varint,2,opt,name=graceful_restart_reconnect_timeout,json=gracefulRestartReconnectTimeout,proto3" json:"graceful_restart_reconnect_timeout,omitempty"`
	GracefulRestartForwardingStateHoldTime uint32   `protobuf:"varint,3,opt,name=graceful_restart_forwarding_state_hold_time,json=gracefulRestartForwardingStateHoldTime,proto3" json:"graceful_restart_forwarding_state_hold_time,omitempty"`
	XXX_NoUnkeyedLiteral                   struct{} `json:"-"`
	XXX_unrecognized                       []byte   `json:"-"`
	XXX_sizecache                          int32    `json:"-"`
}

func (m *LdpGracefulRestartInfo) Reset()         { *m = LdpGracefulRestartInfo{} }
func (m *LdpGracefulRestartInfo) String() string { return proto.CompactTextString(m) }
func (*LdpGracefulRestartInfo) ProtoMessage()    {}
func (*LdpGracefulRestartInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_3ad4e1a45191b20a, []int{1}
}

func (m *LdpGracefulRestartInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LdpGracefulRestartInfo.Unmarshal(m, b)
}
func (m *LdpGracefulRestartInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LdpGracefulRestartInfo.Marshal(b, m, deterministic)
}
func (m *LdpGracefulRestartInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LdpGracefulRestartInfo.Merge(m, src)
}
func (m *LdpGracefulRestartInfo) XXX_Size() int {
	return xxx_messageInfo_LdpGracefulRestartInfo.Size(m)
}
func (m *LdpGracefulRestartInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_LdpGracefulRestartInfo.DiscardUnknown(m)
}

var xxx_messageInfo_LdpGracefulRestartInfo proto.InternalMessageInfo

func (m *LdpGracefulRestartInfo) GetIsGracefulRestartConfigured() bool {
	if m != nil {
		return m.IsGracefulRestartConfigured
	}
	return false
}

func (m *LdpGracefulRestartInfo) GetGracefulRestartReconnectTimeout() uint32 {
	if m != nil {
		return m.GracefulRestartReconnectTimeout
	}
	return 0
}

func (m *LdpGracefulRestartInfo) GetGracefulRestartForwardingStateHoldTime() uint32 {
	if m != nil {
		return m.GracefulRestartForwardingStateHoldTime
	}
	return 0
}

type LdpIpAddrTUnion struct {
	Afi                  string   `protobuf:"bytes,1,opt,name=afi,proto3" json:"afi,omitempty"`
	Dummy                uint32   `protobuf:"varint,2,opt,name=dummy,proto3" json:"dummy,omitempty"`
	Ipv4                 string   `protobuf:"bytes,3,opt,name=ipv4,proto3" json:"ipv4,omitempty"`
	Ipv6                 string   `protobuf:"bytes,4,opt,name=ipv6,proto3" json:"ipv6,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LdpIpAddrTUnion) Reset()         { *m = LdpIpAddrTUnion{} }
func (m *LdpIpAddrTUnion) String() string { return proto.CompactTextString(m) }
func (*LdpIpAddrTUnion) ProtoMessage()    {}
func (*LdpIpAddrTUnion) Descriptor() ([]byte, []int) {
	return fileDescriptor_3ad4e1a45191b20a, []int{2}
}

func (m *LdpIpAddrTUnion) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LdpIpAddrTUnion.Unmarshal(m, b)
}
func (m *LdpIpAddrTUnion) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LdpIpAddrTUnion.Marshal(b, m, deterministic)
}
func (m *LdpIpAddrTUnion) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LdpIpAddrTUnion.Merge(m, src)
}
func (m *LdpIpAddrTUnion) XXX_Size() int {
	return xxx_messageInfo_LdpIpAddrTUnion.Size(m)
}
func (m *LdpIpAddrTUnion) XXX_DiscardUnknown() {
	xxx_messageInfo_LdpIpAddrTUnion.DiscardUnknown(m)
}

var xxx_messageInfo_LdpIpAddrTUnion proto.InternalMessageInfo

func (m *LdpIpAddrTUnion) GetAfi() string {
	if m != nil {
		return m.Afi
	}
	return ""
}

func (m *LdpIpAddrTUnion) GetDummy() uint32 {
	if m != nil {
		return m.Dummy
	}
	return 0
}

func (m *LdpIpAddrTUnion) GetIpv4() string {
	if m != nil {
		return m.Ipv4
	}
	return ""
}

func (m *LdpIpAddrTUnion) GetIpv6() string {
	if m != nil {
		return m.Ipv6
	}
	return ""
}

type LdpParametersAf struct {
	AddressFamily             string           `protobuf:"bytes,1,opt,name=address_family,json=addressFamily,proto3" json:"address_family,omitempty"`
	NullLabel                 string           `protobuf:"bytes,2,opt,name=null_label,json=nullLabel,proto3" json:"null_label,omitempty"`
	LabelImpNullOverrideAcl   string           `protobuf:"bytes,3,opt,name=label_imp_null_override_acl,json=labelImpNullOverrideAcl,proto3" json:"label_imp_null_override_acl,omitempty"`
	IsAcceptingTargetedHellos bool             `protobuf:"varint,4,opt,name=is_accepting_targeted_hellos,json=isAcceptingTargetedHellos,proto3" json:"is_accepting_targeted_hellos,omitempty"`
	TargetedHelloAcl          string           `protobuf:"bytes,5,opt,name=targeted_hello_acl,json=targetedHelloAcl,proto3" json:"targeted_hello_acl,omitempty"`
	DiscoveryTransportAddress *LdpIpAddrTUnion `protobuf:"bytes,6,opt,name=discovery_transport_address,json=discoveryTransportAddress,proto3" json:"discovery_transport_address,omitempty"`
	XXX_NoUnkeyedLiteral      struct{}         `json:"-"`
	XXX_unrecognized          []byte           `json:"-"`
	XXX_sizecache             int32            `json:"-"`
}

func (m *LdpParametersAf) Reset()         { *m = LdpParametersAf{} }
func (m *LdpParametersAf) String() string { return proto.CompactTextString(m) }
func (*LdpParametersAf) ProtoMessage()    {}
func (*LdpParametersAf) Descriptor() ([]byte, []int) {
	return fileDescriptor_3ad4e1a45191b20a, []int{3}
}

func (m *LdpParametersAf) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LdpParametersAf.Unmarshal(m, b)
}
func (m *LdpParametersAf) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LdpParametersAf.Marshal(b, m, deterministic)
}
func (m *LdpParametersAf) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LdpParametersAf.Merge(m, src)
}
func (m *LdpParametersAf) XXX_Size() int {
	return xxx_messageInfo_LdpParametersAf.Size(m)
}
func (m *LdpParametersAf) XXX_DiscardUnknown() {
	xxx_messageInfo_LdpParametersAf.DiscardUnknown(m)
}

var xxx_messageInfo_LdpParametersAf proto.InternalMessageInfo

func (m *LdpParametersAf) GetAddressFamily() string {
	if m != nil {
		return m.AddressFamily
	}
	return ""
}

func (m *LdpParametersAf) GetNullLabel() string {
	if m != nil {
		return m.NullLabel
	}
	return ""
}

func (m *LdpParametersAf) GetLabelImpNullOverrideAcl() string {
	if m != nil {
		return m.LabelImpNullOverrideAcl
	}
	return ""
}

func (m *LdpParametersAf) GetIsAcceptingTargetedHellos() bool {
	if m != nil {
		return m.IsAcceptingTargetedHellos
	}
	return false
}

func (m *LdpParametersAf) GetTargetedHelloAcl() string {
	if m != nil {
		return m.TargetedHelloAcl
	}
	return ""
}

func (m *LdpParametersAf) GetDiscoveryTransportAddress() *LdpIpAddrTUnion {
	if m != nil {
		return m.DiscoveryTransportAddress
	}
	return nil
}

type LdpParameters struct {
	RoleIsActive                            bool                    `protobuf:"varint,50,opt,name=role_is_active,json=roleIsActive,proto3" json:"role_is_active,omitempty"`
	GlobalMd5PasswordEnabled                bool                    `protobuf:"varint,51,opt,name=global_md5_password_enabled,json=globalMd5PasswordEnabled,proto3" json:"global_md5_password_enabled,omitempty"`
	ProtocolVersion                         uint32                  `protobuf:"varint,52,opt,name=protocol_version,json=protocolVersion,proto3" json:"protocol_version,omitempty"`
	RouterId                                string                  `protobuf:"bytes,53,opt,name=router_id,json=routerId,proto3" json:"router_id,omitempty"`
	KeepaliveInterval                       uint32                  `protobuf:"varint,54,opt,name=keepalive_interval,json=keepaliveInterval,proto3" json:"keepalive_interval,omitempty"`
	HelloHoldTime                           uint32                  `protobuf:"varint,55,opt,name=hello_hold_time,json=helloHoldTime,proto3" json:"hello_hold_time,omitempty"`
	HelloInterval                           uint32                  `protobuf:"varint,56,opt,name=hello_interval,json=helloInterval,proto3" json:"hello_interval,omitempty"`
	TargetedHelloHoldTime                   uint32                  `protobuf:"varint,57,opt,name=targeted_hello_hold_time,json=targetedHelloHoldTime,proto3" json:"targeted_hello_hold_time,omitempty"`
	TargetedHelloInterval                   uint32                  `protobuf:"varint,58,opt,name=targeted_hello_interval,json=targetedHelloInterval,proto3" json:"targeted_hello_interval,omitempty"`
	SessionHoldTime                         uint32                  `protobuf:"varint,59,opt,name=session_hold_time,json=sessionHoldTime,proto3" json:"session_hold_time,omitempty"`
	HousekeepingTimerInterval               uint32                  `protobuf:"varint,60,opt,name=housekeeping_timer_interval,json=housekeepingTimerInterval,proto3" json:"housekeeping_timer_interval,omitempty"`
	LeNoRouteTimeout                        uint32                  `protobuf:"varint,61,opt,name=le_no_route_timeout,json=leNoRouteTimeout,proto3" json:"le_no_route_timeout,omitempty"`
	LdpRecoveryTimeout                      uint32                  `protobuf:"varint,62,opt,name=ldp_recovery_timeout,json=ldpRecoveryTimeout,proto3" json:"ldp_recovery_timeout,omitempty"`
	AfBindingWithdrawDelay                  uint32                  `protobuf:"varint,63,opt,name=af_binding_withdraw_delay,json=afBindingWithdrawDelay,proto3" json:"af_binding_withdraw_delay,omitempty"`
	MaxIntfAttached                         uint32                  `protobuf:"varint,64,opt,name=max_intf_attached,json=maxIntfAttached,proto3" json:"max_intf_attached,omitempty"`
	MaxIntfTe                               uint32                  `protobuf:"varint,65,opt,name=max_intf_te,json=maxIntfTe,proto3" json:"max_intf_te,omitempty"`
	MaxPeer                                 uint32                  `protobuf:"varint,66,opt,name=max_peer,json=maxPeer,proto3" json:"max_peer,omitempty"`
	LdpOutOfMemState                        uint32                  `protobuf:"varint,67,opt,name=ldp_out_of_mem_state,json=ldpOutOfMemState,proto3" json:"ldp_out_of_mem_state,omitempty"`
	GracefulRestartInformation              *LdpGracefulRestartInfo `protobuf:"bytes,68,opt,name=graceful_restart_information,json=gracefulRestartInformation,proto3" json:"graceful_restart_information,omitempty"`
	NsrEnabled                              bool                    `protobuf:"varint,69,opt,name=nsr_enabled,json=nsrEnabled,proto3" json:"nsr_enabled,omitempty"`
	NsrSynced                               bool                    `protobuf:"varint,70,opt,name=nsr_synced,json=nsrSynced,proto3" json:"nsr_synced,omitempty"`
	IgpSyncDelayTimeForInterface            uint32                  `protobuf:"varint,71,opt,name=igp_sync_delay_time_for_interface,json=igpSyncDelayTimeForInterface,proto3" json:"igp_sync_delay_time_for_interface,omitempty"`
	IgpSyncDelayTimeOnRestart               uint32                  `protobuf:"varint,72,opt,name=igp_sync_delay_time_on_restart,json=igpSyncDelayTimeOnRestart,proto3" json:"igp_sync_delay_time_on_restart,omitempty"`
	GlobalDiscoveryQuickStartDisabled       bool                    `protobuf:"varint,73,opt,name=global_discovery_quick_start_disabled,json=globalDiscoveryQuickStartDisabled,proto3" json:"global_discovery_quick_start_disabled,omitempty"`
	DiscoveryQuickStartDisabledOnInterfaces bool                    `protobuf:"varint,74,opt,name=discovery_quick_start_disabled_on_interfaces,json=discoveryQuickStartDisabledOnInterfaces,proto3" json:"discovery_quick_start_disabled_on_interfaces,omitempty"`
	AddressFamilyParameter                  []*LdpParametersAf      `protobuf:"bytes,75,rep,name=address_family_parameter,json=addressFamilyParameter,proto3" json:"address_family_parameter,omitempty"`
	XXX_NoUnkeyedLiteral                    struct{}                `json:"-"`
	XXX_unrecognized                        []byte                  `json:"-"`
	XXX_sizecache                           int32                   `json:"-"`
}

func (m *LdpParameters) Reset()         { *m = LdpParameters{} }
func (m *LdpParameters) String() string { return proto.CompactTextString(m) }
func (*LdpParameters) ProtoMessage()    {}
func (*LdpParameters) Descriptor() ([]byte, []int) {
	return fileDescriptor_3ad4e1a45191b20a, []int{4}
}

func (m *LdpParameters) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LdpParameters.Unmarshal(m, b)
}
func (m *LdpParameters) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LdpParameters.Marshal(b, m, deterministic)
}
func (m *LdpParameters) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LdpParameters.Merge(m, src)
}
func (m *LdpParameters) XXX_Size() int {
	return xxx_messageInfo_LdpParameters.Size(m)
}
func (m *LdpParameters) XXX_DiscardUnknown() {
	xxx_messageInfo_LdpParameters.DiscardUnknown(m)
}

var xxx_messageInfo_LdpParameters proto.InternalMessageInfo

func (m *LdpParameters) GetRoleIsActive() bool {
	if m != nil {
		return m.RoleIsActive
	}
	return false
}

func (m *LdpParameters) GetGlobalMd5PasswordEnabled() bool {
	if m != nil {
		return m.GlobalMd5PasswordEnabled
	}
	return false
}

func (m *LdpParameters) GetProtocolVersion() uint32 {
	if m != nil {
		return m.ProtocolVersion
	}
	return 0
}

func (m *LdpParameters) GetRouterId() string {
	if m != nil {
		return m.RouterId
	}
	return ""
}

func (m *LdpParameters) GetKeepaliveInterval() uint32 {
	if m != nil {
		return m.KeepaliveInterval
	}
	return 0
}

func (m *LdpParameters) GetHelloHoldTime() uint32 {
	if m != nil {
		return m.HelloHoldTime
	}
	return 0
}

func (m *LdpParameters) GetHelloInterval() uint32 {
	if m != nil {
		return m.HelloInterval
	}
	return 0
}

func (m *LdpParameters) GetTargetedHelloHoldTime() uint32 {
	if m != nil {
		return m.TargetedHelloHoldTime
	}
	return 0
}

func (m *LdpParameters) GetTargetedHelloInterval() uint32 {
	if m != nil {
		return m.TargetedHelloInterval
	}
	return 0
}

func (m *LdpParameters) GetSessionHoldTime() uint32 {
	if m != nil {
		return m.SessionHoldTime
	}
	return 0
}

func (m *LdpParameters) GetHousekeepingTimerInterval() uint32 {
	if m != nil {
		return m.HousekeepingTimerInterval
	}
	return 0
}

func (m *LdpParameters) GetLeNoRouteTimeout() uint32 {
	if m != nil {
		return m.LeNoRouteTimeout
	}
	return 0
}

func (m *LdpParameters) GetLdpRecoveryTimeout() uint32 {
	if m != nil {
		return m.LdpRecoveryTimeout
	}
	return 0
}

func (m *LdpParameters) GetAfBindingWithdrawDelay() uint32 {
	if m != nil {
		return m.AfBindingWithdrawDelay
	}
	return 0
}

func (m *LdpParameters) GetMaxIntfAttached() uint32 {
	if m != nil {
		return m.MaxIntfAttached
	}
	return 0
}

func (m *LdpParameters) GetMaxIntfTe() uint32 {
	if m != nil {
		return m.MaxIntfTe
	}
	return 0
}

func (m *LdpParameters) GetMaxPeer() uint32 {
	if m != nil {
		return m.MaxPeer
	}
	return 0
}

func (m *LdpParameters) GetLdpOutOfMemState() uint32 {
	if m != nil {
		return m.LdpOutOfMemState
	}
	return 0
}

func (m *LdpParameters) GetGracefulRestartInformation() *LdpGracefulRestartInfo {
	if m != nil {
		return m.GracefulRestartInformation
	}
	return nil
}

func (m *LdpParameters) GetNsrEnabled() bool {
	if m != nil {
		return m.NsrEnabled
	}
	return false
}

func (m *LdpParameters) GetNsrSynced() bool {
	if m != nil {
		return m.NsrSynced
	}
	return false
}

func (m *LdpParameters) GetIgpSyncDelayTimeForInterface() uint32 {
	if m != nil {
		return m.IgpSyncDelayTimeForInterface
	}
	return 0
}

func (m *LdpParameters) GetIgpSyncDelayTimeOnRestart() uint32 {
	if m != nil {
		return m.IgpSyncDelayTimeOnRestart
	}
	return 0
}

func (m *LdpParameters) GetGlobalDiscoveryQuickStartDisabled() bool {
	if m != nil {
		return m.GlobalDiscoveryQuickStartDisabled
	}
	return false
}

func (m *LdpParameters) GetDiscoveryQuickStartDisabledOnInterfaces() bool {
	if m != nil {
		return m.DiscoveryQuickStartDisabledOnInterfaces
	}
	return false
}

func (m *LdpParameters) GetAddressFamilyParameter() []*LdpParametersAf {
	if m != nil {
		return m.AddressFamilyParameter
	}
	return nil
}

func init() {
	proto.RegisterType((*LdpParameters_KEYS)(nil), "cisco_ios_xr_mpls_ldp_oper.mpls_ldp.global.standby.vrfs.vrf.parameters.ldp_parameters_KEYS")
	proto.RegisterType((*LdpGracefulRestartInfo)(nil), "cisco_ios_xr_mpls_ldp_oper.mpls_ldp.global.standby.vrfs.vrf.parameters.ldp_graceful_restart_info")
	proto.RegisterType((*LdpIpAddrTUnion)(nil), "cisco_ios_xr_mpls_ldp_oper.mpls_ldp.global.standby.vrfs.vrf.parameters.ldp_ip_addr_t_union")
	proto.RegisterType((*LdpParametersAf)(nil), "cisco_ios_xr_mpls_ldp_oper.mpls_ldp.global.standby.vrfs.vrf.parameters.ldp_parameters_af")
	proto.RegisterType((*LdpParameters)(nil), "cisco_ios_xr_mpls_ldp_oper.mpls_ldp.global.standby.vrfs.vrf.parameters.ldp_parameters")
}

func init() { proto.RegisterFile("ldp_parameters.proto", fileDescriptor_3ad4e1a45191b20a) }

var fileDescriptor_3ad4e1a45191b20a = []byte{
	// 1108 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x55, 0xdd, 0x73, 0x13, 0x37,
	0x10, 0x1f, 0x13, 0x3e, 0x62, 0x85, 0x8f, 0x20, 0x28, 0x9c, 0x6b, 0x0a, 0xc1, 0x53, 0x68, 0xda,
	0x82, 0x87, 0xe1, 0x23, 0x94, 0x96, 0x8f, 0x1a, 0x42, 0xc0, 0x4d, 0x49, 0xd2, 0x4b, 0xa6, 0x1d,
	0x86, 0xe9, 0x68, 0xe4, 0xd3, 0x9e, 0xa3, 0x41, 0x27, 0x5d, 0x25, 0x9d, 0x13, 0xbf, 0xf7, 0xa9,
	0xaf, 0x7d, 0xec, 0x63, 0xfb, 0x87, 0x76, 0x24, 0xdd, 0x9d, 0x63, 0x27, 0xed, 0x53, 0x5e, 0x3c,
	0xbe, 0xdd, 0xdf, 0xfe, 0x7e, 0xda, 0xd5, 0xee, 0x0a, 0x5d, 0x16, 0x2c, 0x27, 0x39, 0xd5, 0x34,
	0x03, 0x0b, 0xda, 0x74, 0x73, 0xad, 0xac, 0xc2, 0x6b, 0x09, 0x37, 0x89, 0x22, 0x5c, 0x19, 0xb2,
	0xaf, 0x49, 0x96, 0x0b, 0x43, 0x1c, 0x4e, 0xe5, 0xa0, 0xbb, 0xd5, 0x57, 0x77, 0x28, 0xd4, 0x80,
	0x8a, 0xae, 0xb1, 0x54, 0xb2, 0xc1, 0xb8, 0x3b, 0xd2, 0xa9, 0x71, 0x3f, 0xdd, 0x09, 0x5b, 0xe7,
	0x1e, 0xba, 0x34, 0xcd, 0x4f, 0xd6, 0x5f, 0xbf, 0xdf, 0xc6, 0x2d, 0x34, 0x3f, 0xd2, 0x29, 0x91,
	0x34, 0x83, 0xa8, 0xb1, 0xd4, 0x58, 0x6e, 0xc6, 0x67, 0x46, 0x3a, 0xdd, 0xa0, 0x19, 0x74, 0xfe,
	0x38, 0x81, 0x5a, 0x2e, 0x64, 0xa8, 0x69, 0x02, 0x69, 0x21, 0x88, 0x06, 0x63, 0xa9, 0xb6, 0x84,
	0xcb, 0x54, 0xe1, 0x57, 0xe8, 0x3a, 0x37, 0x87, 0x7d, 0x89, 0x92, 0x29, 0x1f, 0x16, 0x1a, 0x98,
	0xa7, 0x9b, 0x8f, 0xdb, 0xdc, 0xbc, 0x29, 0x41, 0x71, 0xc0, 0xbc, 0xaa, 0x21, 0x78, 0x1d, 0x75,
	0x0e, 0x31, 0x68, 0x48, 0x94, 0x94, 0x90, 0x58, 0x62, 0x79, 0x06, 0xaa, 0xb0, 0xd1, 0x89, 0xa5,
	0xc6, 0xf2, 0xb9, 0xf8, 0xc6, 0x70, 0x9a, 0x26, 0xae, 0x70, 0x3b, 0x01, 0x86, 0x3f, 0xa0, 0xaf,
	0x0f, 0x91, 0xa5, 0x4a, 0xef, 0x51, 0xcd, 0xb8, 0x1c, 0x12, 0x63, 0xa9, 0x05, 0xb2, 0xab, 0x04,
	0xf3, 0xc4, 0xd1, 0x9c, 0x67, 0xbd, 0x3d, 0xc3, 0xba, 0x56, 0x07, 0x6c, 0x3b, 0xfc, 0x5b, 0x25,
	0x98, 0xe3, 0xef, 0x40, 0x28, 0x1f, 0xcf, 0x09, 0x65, 0x4c, 0x13, 0x4b, 0x0a, 0xc9, 0x95, 0xc4,
	0x8b, 0x68, 0x8e, 0xa6, 0xbc, 0xac, 0x9c, 0xfb, 0x8b, 0x2f, 0xa3, 0x53, 0xac, 0xc8, 0xb2, 0x71,
	0x79, 0xea, 0xf0, 0x81, 0x31, 0x3a, 0xc9, 0xf3, 0xd1, 0x43, 0x2f, 0xda, 0x8c, 0xfd, 0xff, 0xd2,
	0xb6, 0x12, 0x9d, 0xac, 0x6d, 0x2b, 0x9d, 0x7f, 0xe6, 0xd0, 0xc5, 0x99, 0x6b, 0xa2, 0x29, 0xbe,
	0x85, 0xce, 0x3b, 0x55, 0x30, 0x86, 0xa4, 0x34, 0xe3, 0x62, 0x5c, 0x0a, 0x9e, 0x2b, 0xad, 0x6b,
	0xde, 0x88, 0x3f, 0x43, 0x48, 0x16, 0x42, 0x10, 0x41, 0x07, 0x20, 0xbc, 0x7e, 0x33, 0x6e, 0x3a,
	0xcb, 0x8f, 0xce, 0x80, 0x9f, 0xa2, 0xb6, 0xf7, 0x10, 0x9e, 0xe5, 0xc4, 0x03, 0xd5, 0x08, 0xb4,
	0xe6, 0x0c, 0x08, 0x4d, 0x44, 0x79, 0xb4, 0xab, 0x1e, 0xd2, 0xcf, 0xf2, 0x8d, 0x42, 0x88, 0xcd,
	0xd2, 0xdf, 0x4b, 0x04, 0x7e, 0x81, 0xae, 0x71, 0x43, 0x68, 0x92, 0x40, 0x6e, 0x5d, 0x39, 0x2d,
	0xd5, 0x43, 0xb0, 0xc0, 0xc8, 0x2e, 0x08, 0xa1, 0x8c, 0xcf, 0x62, 0x3e, 0x6e, 0x71, 0xd3, 0xab,
	0x20, 0x3b, 0x25, 0xe2, 0xad, 0x07, 0xe0, 0x3b, 0x08, 0x4f, 0xc7, 0x78, 0xd5, 0x53, 0x5e, 0x75,
	0xd1, 0x1e, 0xc4, 0x3a, 0xb9, 0xbf, 0x1a, 0xa8, 0xcd, 0x5c, 0xe7, 0x8f, 0x40, 0x8f, 0x89, 0xd5,
	0x54, 0x9a, 0x5c, 0x69, 0x4b, 0xca, 0x8c, 0xa3, 0xd3, 0x4b, 0x8d, 0xe5, 0x85, 0xfb, 0x1f, 0xba,
	0xc7, 0x33, 0x1d, 0xdd, 0x23, 0xee, 0x36, 0x6e, 0xd5, 0xfa, 0x3b, 0x95, 0x7c, 0x2f, 0xa8, 0x77,
	0x7e, 0x3f, 0x8b, 0xce, 0x4f, 0x5f, 0x13, 0xfe, 0x1c, 0x9d, 0xd7, 0x4a, 0x00, 0xf1, 0x45, 0xb2,
	0x7c, 0x04, 0xd1, 0x7d, 0x5f, 0x91, 0xb3, 0xce, 0xda, 0x37, 0x3d, 0x6f, 0xc3, 0xcf, 0x50, 0x3b,
	0x9c, 0x86, 0x64, 0xec, 0x11, 0xc9, 0xa9, 0x31, 0x7b, 0x4a, 0x33, 0x02, 0x92, 0x0e, 0x04, 0xb0,
	0xe8, 0x81, 0x0f, 0x89, 0x02, 0xe4, 0x1d, 0x7b, 0xb4, 0x55, 0x02, 0x5e, 0x07, 0x3f, 0xfe, 0x12,
	0x2d, 0xfa, 0xad, 0x90, 0x28, 0x41, 0x46, 0xa0, 0x0d, 0x57, 0x32, 0x7a, 0xe8, 0xfb, 0xec, 0x42,
	0x65, 0xff, 0x39, 0x98, 0x71, 0x1b, 0x35, 0xb5, 0x2a, 0x2c, 0x68, 0xc2, 0x59, 0xf4, 0xc8, 0x57,
	0x79, 0x3e, 0x18, 0xfa, 0x0c, 0xdf, 0x45, 0xf8, 0x23, 0x40, 0x4e, 0x05, 0x1f, 0x01, 0xe1, 0xd2,
	0x82, 0x1e, 0x51, 0x11, 0xad, 0x78, 0xa6, 0x8b, 0xb5, 0xa7, 0x5f, 0x3a, 0xf0, 0x6d, 0x74, 0x21,
	0xdc, 0xd8, 0x64, 0x7a, 0x1e, 0x7b, 0xec, 0x39, 0x6f, 0xae, 0x86, 0xc4, 0xf5, 0x69, 0xc0, 0xd5,
	0x94, 0xdf, 0x1c, 0x80, 0xd5, 0x74, 0x8f, 0x51, 0x34, 0xd3, 0x09, 0x13, 0xde, 0x27, 0x3e, 0xe0,
	0x93, 0xa9, 0x7e, 0xa8, 0xf9, 0x57, 0xd0, 0xd5, 0x99, 0xc0, 0x5a, 0xe8, 0xdb, 0x23, 0xe2, 0x6a,
	0xc1, 0xaf, 0xd0, 0x45, 0x03, 0xc6, 0x95, 0xe5, 0x80, 0xd2, 0x77, 0xa1, 0x6e, 0xa5, 0xa3, 0xd6,
	0x78, 0x8e, 0xda, 0xbb, 0xaa, 0x30, 0xe0, 0xaa, 0xe0, 0xfb, 0x9c, 0x67, 0xae, 0x86, 0x95, 0xce,
	0x53, 0x1f, 0xd5, 0x3a, 0x08, 0x71, 0x61, 0xba, 0xd6, 0xba, 0x8b, 0x2e, 0x09, 0x20, 0x52, 0x11,
	0x5f, 0xec, 0x7a, 0x87, 0x3d, 0xf3, 0x71, 0x8b, 0x02, 0x36, 0x54, 0xec, 0x1c, 0xd5, 0xd2, 0xba,
	0x17, 0xd6, 0xbe, 0x5b, 0x7a, 0xa1, 0xd3, 0x4b, 0xfc, 0x73, 0x8f, 0xc7, 0x82, 0xe5, 0x71, 0xe9,
	0xaa, 0x22, 0x9e, 0xa0, 0x16, 0x4d, 0xc9, 0x80, 0x4b, 0xbf, 0xd5, 0xf6, 0xb8, 0xdd, 0x65, 0x9a,
	0xee, 0x11, 0x06, 0x82, 0x8e, 0xa3, 0x17, 0x3e, 0xec, 0x0a, 0x4d, 0x5f, 0x06, 0xff, 0x2f, 0xa5,
	0x7b, 0xd5, 0x79, 0x5d, 0x1d, 0x32, 0xba, 0xef, 0x92, 0x49, 0x09, 0xb5, 0x96, 0x26, 0xbb, 0xc0,
	0xa2, 0xef, 0x43, 0x1d, 0x32, 0xba, 0xdf, 0x97, 0x36, 0xed, 0x95, 0x66, 0x7c, 0x1d, 0x2d, 0xd4,
	0x58, 0x0b, 0x51, 0xcf, 0xa3, 0x9a, 0x25, 0x6a, 0x07, 0xdc, 0xc3, 0xe1, 0xfc, 0x39, 0x80, 0x8e,
	0x5e, 0x7a, 0xe7, 0x99, 0x8c, 0xee, 0x6f, 0x01, 0x68, 0xdc, 0x0d, 0x39, 0xa9, 0xc2, 0x12, 0x95,
	0x92, 0x0c, 0xb2, 0xb0, 0x7b, 0xa3, 0x57, 0x65, 0x0d, 0x58, 0xbe, 0x59, 0xd8, 0xcd, 0xf4, 0x1d,
	0x64, 0x7e, 0xc7, 0xe2, 0xbf, 0x1b, 0xe8, 0xda, 0x91, 0x8f, 0x8c, 0xce, 0xa8, 0x75, 0x2d, 0xbe,
	0xea, 0x87, 0x9d, 0x1e, 0xe7, 0xb0, 0x1f, 0xa9, 0x17, 0x7f, 0x3a, 0xf3, 0x1a, 0xf4, 0x27, 0x87,
	0xc0, 0x37, 0xd0, 0x82, 0x34, 0xba, 0x1e, 0xd5, 0xd7, 0x7e, 0x54, 0x91, 0x34, 0xba, 0x1a, 0x4e,
	0xb7, 0x7e, 0x8d, 0x26, 0x66, 0x2c, 0x13, 0x60, 0xd1, 0x9a, 0xf7, 0x37, 0xa5, 0xd1, 0xdb, 0xde,
	0x80, 0xdf, 0xa0, 0x9b, 0x7c, 0x98, 0x7b, 0x77, 0xb8, 0x2c, 0x7f, 0xd7, 0xee, 0x85, 0x0a, 0xdd,
	0x95, 0xd2, 0x04, 0xa2, 0x37, 0xbe, 0x44, 0xd7, 0xf8, 0x30, 0x77, 0x51, 0xfe, 0xd6, 0xdc, 0xbd,
	0xaf, 0xa9, 0xd0, 0x60, 0x0e, 0x83, 0x7b, 0xe8, 0xfa, 0x51, 0x44, 0x4a, 0x56, 0xb9, 0x44, 0x6f,
	0x43, 0x93, 0xce, 0xb2, 0x6c, 0xca, 0x32, 0x2d, 0xbc, 0x85, 0x6e, 0x95, 0x6b, 0x68, 0xb2, 0x63,
	0x7f, 0x2b, 0x78, 0xf2, 0x91, 0x84, 0x62, 0x30, 0x6e, 0x42, 0x96, 0x7d, 0x9f, 0xc5, 0xcd, 0x00,
	0x5e, 0xad, 0xb0, 0x3f, 0x39, 0xe8, 0xb6, 0x43, 0xae, 0x96, 0x40, 0xfc, 0x2b, 0xba, 0xf3, 0xff,
	0x54, 0xee, 0x7c, 0x75, 0x9e, 0x26, 0xfa, 0xc1, 0x13, 0x7f, 0xc1, 0xfe, 0x9b, 0x72, 0x53, 0xd6,
	0x29, 0x1b, 0xfc, 0x67, 0x03, 0x45, 0xd3, 0x4f, 0xe0, 0x64, 0xf7, 0x46, 0xeb, 0x4b, 0x73, 0xcb,
	0x0b, 0xf7, 0xdf, 0x1f, 0x67, 0x7b, 0x4c, 0xbd, 0xbf, 0xf1, 0x95, 0xa9, 0x77, 0x76, 0xab, 0xf2,
	0x0d, 0x4e, 0xfb, 0xa5, 0xfb, 0xe0, 0xdf, 0x00, 0x00, 0x00, 0xff, 0xff, 0x4b, 0x23, 0x56, 0xcf,
	0xba, 0x09, 0x00, 0x00,
}
