/*
Copyright 2019 Cisco Systems

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: resource_edm_data.proto

package cisco_ios_xr_prm_server_oper_prm_nodes_node_server_resource_indexes_index

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ResourceEdmData_KEYS struct {
	NodeName             string   `protobuf:"bytes,1,opt,name=node_name,json=nodeName,proto3" json:"node_name,omitempty"`
	Index                uint32   `protobuf:"varint,2,opt,name=index,proto3" json:"index,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ResourceEdmData_KEYS) Reset()         { *m = ResourceEdmData_KEYS{} }
func (m *ResourceEdmData_KEYS) String() string { return proto.CompactTextString(m) }
func (*ResourceEdmData_KEYS) ProtoMessage()    {}
func (*ResourceEdmData_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_900f57e0e1ca468c, []int{0}
}

func (m *ResourceEdmData_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResourceEdmData_KEYS.Unmarshal(m, b)
}
func (m *ResourceEdmData_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResourceEdmData_KEYS.Marshal(b, m, deterministic)
}
func (m *ResourceEdmData_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResourceEdmData_KEYS.Merge(m, src)
}
func (m *ResourceEdmData_KEYS) XXX_Size() int {
	return xxx_messageInfo_ResourceEdmData_KEYS.Size(m)
}
func (m *ResourceEdmData_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_ResourceEdmData_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_ResourceEdmData_KEYS proto.InternalMessageInfo

func (m *ResourceEdmData_KEYS) GetNodeName() string {
	if m != nil {
		return m.NodeName
	}
	return ""
}

func (m *ResourceEdmData_KEYS) GetIndex() uint32 {
	if m != nil {
		return m.Index
	}
	return 0
}

type ResourceEdmData struct {
	ResourceName         string   `protobuf:"bytes,50,opt,name=resource_name,json=resourceName,proto3" json:"resource_name,omitempty"`
	ResourceType         uint32   `protobuf:"varint,51,opt,name=resource_type,json=resourceType,proto3" json:"resource_type,omitempty"`
	TotalNum             uint32   `protobuf:"varint,52,opt,name=total_num,json=totalNum,proto3" json:"total_num,omitempty"`
	FreeNum              uint32   `protobuf:"varint,53,opt,name=free_num,json=freeNum,proto3" json:"free_num,omitempty"`
	FirstAvailableIndex  uint32   `protobuf:"varint,54,opt,name=first_available_index,json=firstAvailableIndex,proto3" json:"first_available_index,omitempty"`
	StartIndex           uint32   `protobuf:"varint,55,opt,name=start_index,json=startIndex,proto3" json:"start_index,omitempty"`
	AvailabilityStatus   bool     `protobuf:"varint,56,opt,name=availability_status,json=availabilityStatus,proto3" json:"availability_status,omitempty"`
	Flags                uint32   `protobuf:"varint,57,opt,name=flags,proto3" json:"flags,omitempty"`
	Inconsistent         bool     `protobuf:"varint,58,opt,name=inconsistent,proto3" json:"inconsistent,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ResourceEdmData) Reset()         { *m = ResourceEdmData{} }
func (m *ResourceEdmData) String() string { return proto.CompactTextString(m) }
func (*ResourceEdmData) ProtoMessage()    {}
func (*ResourceEdmData) Descriptor() ([]byte, []int) {
	return fileDescriptor_900f57e0e1ca468c, []int{1}
}

func (m *ResourceEdmData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResourceEdmData.Unmarshal(m, b)
}
func (m *ResourceEdmData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResourceEdmData.Marshal(b, m, deterministic)
}
func (m *ResourceEdmData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResourceEdmData.Merge(m, src)
}
func (m *ResourceEdmData) XXX_Size() int {
	return xxx_messageInfo_ResourceEdmData.Size(m)
}
func (m *ResourceEdmData) XXX_DiscardUnknown() {
	xxx_messageInfo_ResourceEdmData.DiscardUnknown(m)
}

var xxx_messageInfo_ResourceEdmData proto.InternalMessageInfo

func (m *ResourceEdmData) GetResourceName() string {
	if m != nil {
		return m.ResourceName
	}
	return ""
}

func (m *ResourceEdmData) GetResourceType() uint32 {
	if m != nil {
		return m.ResourceType
	}
	return 0
}

func (m *ResourceEdmData) GetTotalNum() uint32 {
	if m != nil {
		return m.TotalNum
	}
	return 0
}

func (m *ResourceEdmData) GetFreeNum() uint32 {
	if m != nil {
		return m.FreeNum
	}
	return 0
}

func (m *ResourceEdmData) GetFirstAvailableIndex() uint32 {
	if m != nil {
		return m.FirstAvailableIndex
	}
	return 0
}

func (m *ResourceEdmData) GetStartIndex() uint32 {
	if m != nil {
		return m.StartIndex
	}
	return 0
}

func (m *ResourceEdmData) GetAvailabilityStatus() bool {
	if m != nil {
		return m.AvailabilityStatus
	}
	return false
}

func (m *ResourceEdmData) GetFlags() uint32 {
	if m != nil {
		return m.Flags
	}
	return 0
}

func (m *ResourceEdmData) GetInconsistent() bool {
	if m != nil {
		return m.Inconsistent
	}
	return false
}

func init() {
	proto.RegisterType((*ResourceEdmData_KEYS)(nil), "cisco_ios_xr_prm_server_oper.prm.nodes.node.server.resource.indexes.index.resource_edm_data_KEYS")
	proto.RegisterType((*ResourceEdmData)(nil), "cisco_ios_xr_prm_server_oper.prm.nodes.node.server.resource.indexes.index.resource_edm_data")
}

func init() { proto.RegisterFile("resource_edm_data.proto", fileDescriptor_900f57e0e1ca468c) }

var fileDescriptor_900f57e0e1ca468c = []byte{
	// 330 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x64, 0x91, 0x3f, 0x6f, 0x22, 0x31,
	0x10, 0xc5, 0xb5, 0x48, 0x77, 0xb7, 0xf8, 0xa0, 0x38, 0x73, 0x49, 0x1c, 0xa5, 0x08, 0x22, 0x0d,
	0xd5, 0x46, 0x82, 0xfc, 0xef, 0x52, 0xa4, 0x40, 0x48, 0x14, 0x90, 0x26, 0x95, 0x65, 0x76, 0x87,
	0xc8, 0xd2, 0xda, 0x5e, 0xd9, 0xb3, 0x08, 0x3e, 0x68, 0xbe, 0x4f, 0xe4, 0x59, 0x40, 0x44, 0x34,
	0xb6, 0xe6, 0xfd, 0xde, 0x3c, 0x8f, 0xc6, 0xec, 0xc2, 0x43, 0x70, 0xb5, 0xcf, 0x41, 0x42, 0x61,
	0x64, 0xa1, 0x50, 0x65, 0x95, 0x77, 0xe8, 0xf8, 0x24, 0xd7, 0x21, 0x77, 0x52, 0xbb, 0x20, 0x37,
	0x5e, 0x56, 0xde, 0xc8, 0x00, 0x7e, 0x0d, 0x5e, 0xba, 0x0a, 0x7c, 0x56, 0x79, 0x93, 0x59, 0x57,
	0x40, 0xa0, 0x33, 0x6b, 0x50, 0xb6, 0xcf, 0xca, 0xb4, 0x2d, 0x60, 0x03, 0xa1, 0xb9, 0x07, 0x53,
	0x76, 0x7e, 0xf2, 0x8a, 0x9c, 0xbe, 0x7d, 0x2c, 0xf8, 0x15, 0x6b, 0xc7, 0x7e, 0x69, 0x95, 0x01,
	0x91, 0xf4, 0x93, 0x61, 0x7b, 0x9e, 0x46, 0x61, 0xa6, 0x0c, 0xf0, 0xff, 0xec, 0x17, 0xf5, 0x8b,
	0x56, 0x3f, 0x19, 0x76, 0xe7, 0x4d, 0x31, 0xf8, 0x6a, 0xb1, 0x7f, 0x27, 0x69, 0xfc, 0x86, 0x75,
	0x0f, 0x22, 0x85, 0x8d, 0x28, 0xac, 0xb3, 0x17, 0x29, 0xf0, 0xd8, 0x84, 0xdb, 0x0a, 0xc4, 0x98,
	0x82, 0x0f, 0xa6, 0xf7, 0x6d, 0x05, 0x71, 0x24, 0x74, 0xa8, 0x4a, 0x69, 0x6b, 0x23, 0xee, 0xc8,
	0x90, 0x92, 0x30, 0xab, 0x0d, 0xbf, 0x64, 0xe9, 0xca, 0x03, 0x10, 0xbb, 0x27, 0xf6, 0x27, 0xd6,
	0x11, 0x8d, 0xd8, 0xd9, 0x4a, 0xfb, 0x80, 0x52, 0xad, 0x95, 0x2e, 0xd5, 0xb2, 0x04, 0xd9, 0x4c,
	0xff, 0x40, 0xbe, 0x1e, 0xc1, 0xd7, 0x3d, 0x9b, 0x44, 0xc4, 0xaf, 0xd9, 0xdf, 0x80, 0xca, 0xe3,
	0xce, 0xf9, 0x48, 0x4e, 0x46, 0x52, 0x63, 0xb8, 0x65, 0xbd, 0x5d, 0x9c, 0x2e, 0x35, 0x6e, 0x65,
	0x40, 0x85, 0x75, 0x10, 0x4f, 0xfd, 0x64, 0x98, 0xce, 0xf9, 0x31, 0x5a, 0x10, 0x89, 0x3b, 0x5b,
	0x95, 0xea, 0x33, 0x88, 0xe7, 0x66, 0x67, 0x54, 0xf0, 0x01, 0xeb, 0x68, 0x9b, 0x3b, 0x1b, 0x74,
	0x40, 0xb0, 0x28, 0x5e, 0xa8, 0xff, 0x87, 0xb6, 0xfc, 0x4d, 0xdf, 0x3e, 0xfe, 0x0e, 0x00, 0x00,
	0xff, 0xff, 0x7b, 0x39, 0x2b, 0x2c, 0x11, 0x02, 0x00, 0x00,
}
