/*
Copyright 2019 Cisco Systems

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: ospf_sh_interface.proto

package cisco_ios_xr_ipv4_ospf_oper_ospf_processes_process_default_vrf_interface_information_interfaces_interface

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type OspfShInterface_KEYS struct {
	ProcessName          string   `protobuf:"bytes,1,opt,name=process_name,json=processName,proto3" json:"process_name,omitempty"`
	InterfaceName        string   `protobuf:"bytes,2,opt,name=interface_name,json=interfaceName,proto3" json:"interface_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OspfShInterface_KEYS) Reset()         { *m = OspfShInterface_KEYS{} }
func (m *OspfShInterface_KEYS) String() string { return proto.CompactTextString(m) }
func (*OspfShInterface_KEYS) ProtoMessage()    {}
func (*OspfShInterface_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_c681b2dfc63a990e, []int{0}
}

func (m *OspfShInterface_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OspfShInterface_KEYS.Unmarshal(m, b)
}
func (m *OspfShInterface_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OspfShInterface_KEYS.Marshal(b, m, deterministic)
}
func (m *OspfShInterface_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OspfShInterface_KEYS.Merge(m, src)
}
func (m *OspfShInterface_KEYS) XXX_Size() int {
	return xxx_messageInfo_OspfShInterface_KEYS.Size(m)
}
func (m *OspfShInterface_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_OspfShInterface_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_OspfShInterface_KEYS proto.InternalMessageInfo

func (m *OspfShInterface_KEYS) GetProcessName() string {
	if m != nil {
		return m.ProcessName
	}
	return ""
}

func (m *OspfShInterface_KEYS) GetInterfaceName() string {
	if m != nil {
		return m.InterfaceName
	}
	return ""
}

type OspfShInterfaceNbr struct {
	InterfaceNeighborId   string   `protobuf:"bytes,1,opt,name=interface_neighbor_id,json=interfaceNeighborId,proto3" json:"interface_neighbor_id,omitempty"`
	InterfaceNeighborCost uint32   `protobuf:"varint,2,opt,name=interface_neighbor_cost,json=interfaceNeighborCost,proto3" json:"interface_neighbor_cost,omitempty"`
	NeighborDr            bool     `protobuf:"varint,3,opt,name=neighbor_dr,json=neighborDr,proto3" json:"neighbor_dr,omitempty"`
	NeighborBdr           bool     `protobuf:"varint,4,opt,name=neighbor_bdr,json=neighborBdr,proto3" json:"neighbor_bdr,omitempty"`
	SuppressHello         bool     `protobuf:"varint,5,opt,name=suppress_hello,json=suppressHello,proto3" json:"suppress_hello,omitempty"`
	XXX_NoUnkeyedLiteral  struct{} `json:"-"`
	XXX_unrecognized      []byte   `json:"-"`
	XXX_sizecache         int32    `json:"-"`
}

func (m *OspfShInterfaceNbr) Reset()         { *m = OspfShInterfaceNbr{} }
func (m *OspfShInterfaceNbr) String() string { return proto.CompactTextString(m) }
func (*OspfShInterfaceNbr) ProtoMessage()    {}
func (*OspfShInterfaceNbr) Descriptor() ([]byte, []int) {
	return fileDescriptor_c681b2dfc63a990e, []int{1}
}

func (m *OspfShInterfaceNbr) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OspfShInterfaceNbr.Unmarshal(m, b)
}
func (m *OspfShInterfaceNbr) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OspfShInterfaceNbr.Marshal(b, m, deterministic)
}
func (m *OspfShInterfaceNbr) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OspfShInterfaceNbr.Merge(m, src)
}
func (m *OspfShInterfaceNbr) XXX_Size() int {
	return xxx_messageInfo_OspfShInterfaceNbr.Size(m)
}
func (m *OspfShInterfaceNbr) XXX_DiscardUnknown() {
	xxx_messageInfo_OspfShInterfaceNbr.DiscardUnknown(m)
}

var xxx_messageInfo_OspfShInterfaceNbr proto.InternalMessageInfo

func (m *OspfShInterfaceNbr) GetInterfaceNeighborId() string {
	if m != nil {
		return m.InterfaceNeighborId
	}
	return ""
}

func (m *OspfShInterfaceNbr) GetInterfaceNeighborCost() uint32 {
	if m != nil {
		return m.InterfaceNeighborCost
	}
	return 0
}

func (m *OspfShInterfaceNbr) GetNeighborDr() bool {
	if m != nil {
		return m.NeighborDr
	}
	return false
}

func (m *OspfShInterfaceNbr) GetNeighborBdr() bool {
	if m != nil {
		return m.NeighborBdr
	}
	return false
}

func (m *OspfShInterfaceNbr) GetSuppressHello() bool {
	if m != nil {
		return m.SuppressHello
	}
	return false
}

type OspfShInterfaceBfd struct {
	BfdIntfEnableMode    uint32   `protobuf:"varint,1,opt,name=bfd_intf_enable_mode,json=bfdIntfEnableMode,proto3" json:"bfd_intf_enable_mode,omitempty"`
	Interval             uint32   `protobuf:"varint,2,opt,name=interval,proto3" json:"interval,omitempty"`
	DetectionMultiplier  uint32   `protobuf:"varint,3,opt,name=detection_multiplier,json=detectionMultiplier,proto3" json:"detection_multiplier,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OspfShInterfaceBfd) Reset()         { *m = OspfShInterfaceBfd{} }
func (m *OspfShInterfaceBfd) String() string { return proto.CompactTextString(m) }
func (*OspfShInterfaceBfd) ProtoMessage()    {}
func (*OspfShInterfaceBfd) Descriptor() ([]byte, []int) {
	return fileDescriptor_c681b2dfc63a990e, []int{2}
}

func (m *OspfShInterfaceBfd) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OspfShInterfaceBfd.Unmarshal(m, b)
}
func (m *OspfShInterfaceBfd) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OspfShInterfaceBfd.Marshal(b, m, deterministic)
}
func (m *OspfShInterfaceBfd) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OspfShInterfaceBfd.Merge(m, src)
}
func (m *OspfShInterfaceBfd) XXX_Size() int {
	return xxx_messageInfo_OspfShInterfaceBfd.Size(m)
}
func (m *OspfShInterfaceBfd) XXX_DiscardUnknown() {
	xxx_messageInfo_OspfShInterfaceBfd.DiscardUnknown(m)
}

var xxx_messageInfo_OspfShInterfaceBfd proto.InternalMessageInfo

func (m *OspfShInterfaceBfd) GetBfdIntfEnableMode() uint32 {
	if m != nil {
		return m.BfdIntfEnableMode
	}
	return 0
}

func (m *OspfShInterfaceBfd) GetInterval() uint32 {
	if m != nil {
		return m.Interval
	}
	return 0
}

func (m *OspfShInterfaceBfd) GetDetectionMultiplier() uint32 {
	if m != nil {
		return m.DetectionMultiplier
	}
	return 0
}

type OspfShInterfaceUp struct {
	WaitTime                    uint32   `protobuf:"varint,1,opt,name=wait_time,json=waitTime,proto3" json:"wait_time,omitempty"`
	InterfaceAreaFloodIndex     uint32   `protobuf:"varint,2,opt,name=interface_area_flood_index,json=interfaceAreaFloodIndex,proto3" json:"interface_area_flood_index,omitempty"`
	InterfaceAsFloodIndex       uint32   `protobuf:"varint,3,opt,name=interface_as_flood_index,json=interfaceAsFloodIndex,proto3" json:"interface_as_flood_index,omitempty"`
	InterfaceFloodLength        uint32   `protobuf:"varint,4,opt,name=interface_flood_length,json=interfaceFloodLength,proto3" json:"interface_flood_length,omitempty"`
	InterfaceAreaNextFlood      uint32   `protobuf:"varint,5,opt,name=interface_area_next_flood,json=interfaceAreaNextFlood,proto3" json:"interface_area_next_flood,omitempty"`
	InterfaceAreaNextFloodIndex uint32   `protobuf:"varint,6,opt,name=interface_area_next_flood_index,json=interfaceAreaNextFloodIndex,proto3" json:"interface_area_next_flood_index,omitempty"`
	InterfaceAsNextFlood        uint32   `protobuf:"varint,7,opt,name=interface_as_next_flood,json=interfaceAsNextFlood,proto3" json:"interface_as_next_flood,omitempty"`
	InterfaceAsNextFloodIndex   uint32   `protobuf:"varint,8,opt,name=interface_as_next_flood_index,json=interfaceAsNextFloodIndex,proto3" json:"interface_as_next_flood_index,omitempty"`
	FloodScanLength             uint32   `protobuf:"varint,9,opt,name=flood_scan_length,json=floodScanLength,proto3" json:"flood_scan_length,omitempty"`
	MaximumFloodLength          uint32   `protobuf:"varint,10,opt,name=maximum_flood_length,json=maximumFloodLength,proto3" json:"maximum_flood_length,omitempty"`
	LastFloodTime               uint32   `protobuf:"varint,11,opt,name=last_flood_time,json=lastFloodTime,proto3" json:"last_flood_time,omitempty"`
	MaximumFloodTime            uint32   `protobuf:"varint,12,opt,name=maximum_flood_time,json=maximumFloodTime,proto3" json:"maximum_flood_time,omitempty"`
	InterfaceFloodPacingTimer   uint32   `protobuf:"varint,13,opt,name=interface_flood_pacing_timer,json=interfaceFloodPacingTimer,proto3" json:"interface_flood_pacing_timer,omitempty"`
	InterfaceNeighborCount      uint32   `protobuf:"varint,14,opt,name=interface_neighbor_count,json=interfaceNeighborCount,proto3" json:"interface_neighbor_count,omitempty"`
	SuppressHelloCount          uint32   `protobuf:"varint,15,opt,name=suppress_hello_count,json=suppressHelloCount,proto3" json:"suppress_hello_count,omitempty"`
	InterfaceAuthenticationType string   `protobuf:"bytes,16,opt,name=interface_authentication_type,json=interfaceAuthenticationType,proto3" json:"interface_authentication_type,omitempty"`
	YoungestMdKey               bool     `protobuf:"varint,17,opt,name=youngest_md_key,json=youngestMdKey,proto3" json:"youngest_md_key,omitempty"`
	OldMd5KeyNeighborCount      uint32   `protobuf:"varint,18,opt,name=old_md5_key_neighbor_count,json=oldMd5KeyNeighborCount,proto3" json:"old_md5_key_neighbor_count,omitempty"`
	YoungestMdKeyId             uint32   `protobuf:"varint,19,opt,name=youngest_md_key_id,json=youngestMdKeyId,proto3" json:"youngest_md_key_id,omitempty"`
	MdKeys                      []uint32 `protobuf:"varint,20,rep,packed,name=md_keys,json=mdKeys,proto3" json:"md_keys,omitempty"`
	KeychainId                  uint64   `protobuf:"varint,21,opt,name=keychain_id,json=keychainId,proto3" json:"keychain_id,omitempty"`
	XXX_NoUnkeyedLiteral        struct{} `json:"-"`
	XXX_unrecognized            []byte   `json:"-"`
	XXX_sizecache               int32    `json:"-"`
}

func (m *OspfShInterfaceUp) Reset()         { *m = OspfShInterfaceUp{} }
func (m *OspfShInterfaceUp) String() string { return proto.CompactTextString(m) }
func (*OspfShInterfaceUp) ProtoMessage()    {}
func (*OspfShInterfaceUp) Descriptor() ([]byte, []int) {
	return fileDescriptor_c681b2dfc63a990e, []int{3}
}

func (m *OspfShInterfaceUp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OspfShInterfaceUp.Unmarshal(m, b)
}
func (m *OspfShInterfaceUp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OspfShInterfaceUp.Marshal(b, m, deterministic)
}
func (m *OspfShInterfaceUp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OspfShInterfaceUp.Merge(m, src)
}
func (m *OspfShInterfaceUp) XXX_Size() int {
	return xxx_messageInfo_OspfShInterfaceUp.Size(m)
}
func (m *OspfShInterfaceUp) XXX_DiscardUnknown() {
	xxx_messageInfo_OspfShInterfaceUp.DiscardUnknown(m)
}

var xxx_messageInfo_OspfShInterfaceUp proto.InternalMessageInfo

func (m *OspfShInterfaceUp) GetWaitTime() uint32 {
	if m != nil {
		return m.WaitTime
	}
	return 0
}

func (m *OspfShInterfaceUp) GetInterfaceAreaFloodIndex() uint32 {
	if m != nil {
		return m.InterfaceAreaFloodIndex
	}
	return 0
}

func (m *OspfShInterfaceUp) GetInterfaceAsFloodIndex() uint32 {
	if m != nil {
		return m.InterfaceAsFloodIndex
	}
	return 0
}

func (m *OspfShInterfaceUp) GetInterfaceFloodLength() uint32 {
	if m != nil {
		return m.InterfaceFloodLength
	}
	return 0
}

func (m *OspfShInterfaceUp) GetInterfaceAreaNextFlood() uint32 {
	if m != nil {
		return m.InterfaceAreaNextFlood
	}
	return 0
}

func (m *OspfShInterfaceUp) GetInterfaceAreaNextFloodIndex() uint32 {
	if m != nil {
		return m.InterfaceAreaNextFloodIndex
	}
	return 0
}

func (m *OspfShInterfaceUp) GetInterfaceAsNextFlood() uint32 {
	if m != nil {
		return m.InterfaceAsNextFlood
	}
	return 0
}

func (m *OspfShInterfaceUp) GetInterfaceAsNextFloodIndex() uint32 {
	if m != nil {
		return m.InterfaceAsNextFloodIndex
	}
	return 0
}

func (m *OspfShInterfaceUp) GetFloodScanLength() uint32 {
	if m != nil {
		return m.FloodScanLength
	}
	return 0
}

func (m *OspfShInterfaceUp) GetMaximumFloodLength() uint32 {
	if m != nil {
		return m.MaximumFloodLength
	}
	return 0
}

func (m *OspfShInterfaceUp) GetLastFloodTime() uint32 {
	if m != nil {
		return m.LastFloodTime
	}
	return 0
}

func (m *OspfShInterfaceUp) GetMaximumFloodTime() uint32 {
	if m != nil {
		return m.MaximumFloodTime
	}
	return 0
}

func (m *OspfShInterfaceUp) GetInterfaceFloodPacingTimer() uint32 {
	if m != nil {
		return m.InterfaceFloodPacingTimer
	}
	return 0
}

func (m *OspfShInterfaceUp) GetInterfaceNeighborCount() uint32 {
	if m != nil {
		return m.InterfaceNeighborCount
	}
	return 0
}

func (m *OspfShInterfaceUp) GetSuppressHelloCount() uint32 {
	if m != nil {
		return m.SuppressHelloCount
	}
	return 0
}

func (m *OspfShInterfaceUp) GetInterfaceAuthenticationType() string {
	if m != nil {
		return m.InterfaceAuthenticationType
	}
	return ""
}

func (m *OspfShInterfaceUp) GetYoungestMdKey() bool {
	if m != nil {
		return m.YoungestMdKey
	}
	return false
}

func (m *OspfShInterfaceUp) GetOldMd5KeyNeighborCount() uint32 {
	if m != nil {
		return m.OldMd5KeyNeighborCount
	}
	return 0
}

func (m *OspfShInterfaceUp) GetYoungestMdKeyId() uint32 {
	if m != nil {
		return m.YoungestMdKeyId
	}
	return 0
}

func (m *OspfShInterfaceUp) GetMdKeys() []uint32 {
	if m != nil {
		return m.MdKeys
	}
	return nil
}

func (m *OspfShInterfaceUp) GetKeychainId() uint64 {
	if m != nil {
		return m.KeychainId
	}
	return 0
}

type OspfShInterfaceMadj struct {
	InterfaceArea             string   `protobuf:"bytes,1,opt,name=interface_area,json=interfaceArea,proto3" json:"interface_area,omitempty"`
	MadjAreaId                uint32   `protobuf:"varint,2,opt,name=madj_area_id,json=madjAreaId,proto3" json:"madj_area_id,omitempty"`
	InterfaceNeighborCount    uint32   `protobuf:"varint,3,opt,name=interface_neighbor_count,json=interfaceNeighborCount,proto3" json:"interface_neighbor_count,omitempty"`
	InterfaceAdjNeighborCount uint32   `protobuf:"varint,4,opt,name=interface_adj_neighbor_count,json=interfaceAdjNeighborCount,proto3" json:"interface_adj_neighbor_count,omitempty"`
	InterfaceLinkCost         uint32   `protobuf:"varint,5,opt,name=interface_link_cost,json=interfaceLinkCost,proto3" json:"interface_link_cost,omitempty"`
	OspfInterfaceState        string   `protobuf:"bytes,6,opt,name=ospf_interface_state,json=ospfInterfaceState,proto3" json:"ospf_interface_state,omitempty"`
	XXX_NoUnkeyedLiteral      struct{} `json:"-"`
	XXX_unrecognized          []byte   `json:"-"`
	XXX_sizecache             int32    `json:"-"`
}

func (m *OspfShInterfaceMadj) Reset()         { *m = OspfShInterfaceMadj{} }
func (m *OspfShInterfaceMadj) String() string { return proto.CompactTextString(m) }
func (*OspfShInterfaceMadj) ProtoMessage()    {}
func (*OspfShInterfaceMadj) Descriptor() ([]byte, []int) {
	return fileDescriptor_c681b2dfc63a990e, []int{4}
}

func (m *OspfShInterfaceMadj) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OspfShInterfaceMadj.Unmarshal(m, b)
}
func (m *OspfShInterfaceMadj) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OspfShInterfaceMadj.Marshal(b, m, deterministic)
}
func (m *OspfShInterfaceMadj) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OspfShInterfaceMadj.Merge(m, src)
}
func (m *OspfShInterfaceMadj) XXX_Size() int {
	return xxx_messageInfo_OspfShInterfaceMadj.Size(m)
}
func (m *OspfShInterfaceMadj) XXX_DiscardUnknown() {
	xxx_messageInfo_OspfShInterfaceMadj.DiscardUnknown(m)
}

var xxx_messageInfo_OspfShInterfaceMadj proto.InternalMessageInfo

func (m *OspfShInterfaceMadj) GetInterfaceArea() string {
	if m != nil {
		return m.InterfaceArea
	}
	return ""
}

func (m *OspfShInterfaceMadj) GetMadjAreaId() uint32 {
	if m != nil {
		return m.MadjAreaId
	}
	return 0
}

func (m *OspfShInterfaceMadj) GetInterfaceNeighborCount() uint32 {
	if m != nil {
		return m.InterfaceNeighborCount
	}
	return 0
}

func (m *OspfShInterfaceMadj) GetInterfaceAdjNeighborCount() uint32 {
	if m != nil {
		return m.InterfaceAdjNeighborCount
	}
	return 0
}

func (m *OspfShInterfaceMadj) GetInterfaceLinkCost() uint32 {
	if m != nil {
		return m.InterfaceLinkCost
	}
	return 0
}

func (m *OspfShInterfaceMadj) GetOspfInterfaceState() string {
	if m != nil {
		return m.OspfInterfaceState
	}
	return ""
}

type OspfShIpfrrTb struct {
	TiebreakerType       string   `protobuf:"bytes,1,opt,name=tiebreaker_type,json=tiebreakerType,proto3" json:"tiebreaker_type,omitempty"`
	TiebreakerIndex      uint32   `protobuf:"varint,2,opt,name=tiebreaker_index,json=tiebreakerIndex,proto3" json:"tiebreaker_index,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OspfShIpfrrTb) Reset()         { *m = OspfShIpfrrTb{} }
func (m *OspfShIpfrrTb) String() string { return proto.CompactTextString(m) }
func (*OspfShIpfrrTb) ProtoMessage()    {}
func (*OspfShIpfrrTb) Descriptor() ([]byte, []int) {
	return fileDescriptor_c681b2dfc63a990e, []int{5}
}

func (m *OspfShIpfrrTb) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OspfShIpfrrTb.Unmarshal(m, b)
}
func (m *OspfShIpfrrTb) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OspfShIpfrrTb.Marshal(b, m, deterministic)
}
func (m *OspfShIpfrrTb) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OspfShIpfrrTb.Merge(m, src)
}
func (m *OspfShIpfrrTb) XXX_Size() int {
	return xxx_messageInfo_OspfShIpfrrTb.Size(m)
}
func (m *OspfShIpfrrTb) XXX_DiscardUnknown() {
	xxx_messageInfo_OspfShIpfrrTb.DiscardUnknown(m)
}

var xxx_messageInfo_OspfShIpfrrTb proto.InternalMessageInfo

func (m *OspfShIpfrrTb) GetTiebreakerType() string {
	if m != nil {
		return m.TiebreakerType
	}
	return ""
}

func (m *OspfShIpfrrTb) GetTiebreakerIndex() uint32 {
	if m != nil {
		return m.TiebreakerIndex
	}
	return 0
}

type OspfShInterface struct {
	InterfaceNameXr                    string                 `protobuf:"bytes,50,opt,name=interface_name_xr,json=interfaceNameXr,proto3" json:"interface_name_xr,omitempty"`
	InterfaceState                     string                 `protobuf:"bytes,51,opt,name=interface_state,json=interfaceState,proto3" json:"interface_state,omitempty"`
	InterfaceLineState                 bool                   `protobuf:"varint,52,opt,name=interface_line_state,json=interfaceLineState,proto3" json:"interface_line_state,omitempty"`
	InterfaceAddress                   string                 `protobuf:"bytes,53,opt,name=interface_address,json=interfaceAddress,proto3" json:"interface_address,omitempty"`
	InterfaceMask                      uint32                 `protobuf:"varint,54,opt,name=interface_mask,json=interfaceMask,proto3" json:"interface_mask,omitempty"`
	InterfaceArea                      string                 `protobuf:"bytes,55,opt,name=interface_area,json=interfaceArea,proto3" json:"interface_area,omitempty"`
	InterfaceSid                       uint32                 `protobuf:"varint,56,opt,name=interface_sid,json=interfaceSid,proto3" json:"interface_sid,omitempty"`
	InterfaceSidPhpOff                 bool                   `protobuf:"varint,57,opt,name=interface_sid_php_off,json=interfaceSidPhpOff,proto3" json:"interface_sid_php_off,omitempty"`
	InterfaceSidNFlagClear             bool                   `protobuf:"varint,58,opt,name=interface_sid_n_flag_clear,json=interfaceSidNFlagClear,proto3" json:"interface_sid_n_flag_clear,omitempty"`
	InterfaceStrictSpfSid              uint32                 `protobuf:"varint,59,opt,name=interface_strict_spf_sid,json=interfaceStrictSpfSid,proto3" json:"interface_strict_spf_sid,omitempty"`
	InterfaceStrictSpfSidPhpOff        bool                   `protobuf:"varint,60,opt,name=interface_strict_spf_sid_php_off,json=interfaceStrictSpfSidPhpOff,proto3" json:"interface_strict_spf_sid_php_off,omitempty"`
	InterfaceStrictSpfSidNFlagClear    bool                   `protobuf:"varint,61,opt,name=interface_strict_spf_sid_n_flag_clear,json=interfaceStrictSpfSidNFlagClear,proto3" json:"interface_strict_spf_sid_n_flag_clear,omitempty"`
	InterfaceRouterId                  string                 `protobuf:"bytes,62,opt,name=interface_router_id,json=interfaceRouterId,proto3" json:"interface_router_id,omitempty"`
	NetworkType                        string                 `protobuf:"bytes,63,opt,name=network_type,json=networkType,proto3" json:"network_type,omitempty"`
	IpMtu                              uint32                 `protobuf:"varint,64,opt,name=ip_mtu,json=ipMtu,proto3" json:"ip_mtu,omitempty"`
	MaximumPacketSize                  uint32                 `protobuf:"varint,65,opt,name=maximum_packet_size,json=maximumPacketSize,proto3" json:"maximum_packet_size,omitempty"`
	InterfaceTunnelFlags               uint32                 `protobuf:"varint,66,opt,name=interface_tunnel_flags,json=interfaceTunnelFlags,proto3" json:"interface_tunnel_flags,omitempty"`
	InterfaceLinkCost                  uint32                 `protobuf:"varint,67,opt,name=interface_link_cost,json=interfaceLinkCost,proto3" json:"interface_link_cost,omitempty"`
	InterfaceBandwidth                 uint32                 `protobuf:"varint,68,opt,name=interface_bandwidth,json=interfaceBandwidth,proto3" json:"interface_bandwidth,omitempty"`
	CfgCostFallback                    bool                   `protobuf:"varint,69,opt,name=cfg_cost_fallback,json=cfgCostFallback,proto3" json:"cfg_cost_fallback,omitempty"`
	InterfaceCostFallback              uint32                 `protobuf:"varint,70,opt,name=interface_cost_fallback,json=interfaceCostFallback,proto3" json:"interface_cost_fallback,omitempty"`
	CostFallbackActive                 bool                   `protobuf:"varint,71,opt,name=cost_fallback_active,json=costFallbackActive,proto3" json:"cost_fallback_active,omitempty"`
	ConfiguredLdpSync                  bool                   `protobuf:"varint,72,opt,name=configured_ldp_sync,json=configuredLdpSync,proto3" json:"configured_ldp_sync,omitempty"`
	ConfiguredLdpSyncIgpShortcuts      bool                   `protobuf:"varint,73,opt,name=configured_ldp_sync_igp_shortcuts,json=configuredLdpSyncIgpShortcuts,proto3" json:"configured_ldp_sync_igp_shortcuts,omitempty"`
	InterfaceLdpSync                   bool                   `protobuf:"varint,74,opt,name=interface_ldp_sync,json=interfaceLdpSync,proto3" json:"interface_ldp_sync,omitempty"`
	ConfiguredDemandCircuit            bool                   `protobuf:"varint,75,opt,name=configured_demand_circuit,json=configuredDemandCircuit,proto3" json:"configured_demand_circuit,omitempty"`
	InterfaceDemandCircuit             bool                   `protobuf:"varint,76,opt,name=interface_demand_circuit,json=interfaceDemandCircuit,proto3" json:"interface_demand_circuit,omitempty"`
	InterfaceDcBitlessLsaCount         uint32                 `protobuf:"varint,77,opt,name=interface_dc_bitless_lsa_count,json=interfaceDcBitlessLsaCount,proto3" json:"interface_dc_bitless_lsa_count,omitempty"`
	TransmissionDelay                  uint32                 `protobuf:"varint,78,opt,name=transmission_delay,json=transmissionDelay,proto3" json:"transmission_delay,omitempty"`
	OspfInterfaceState                 string                 `protobuf:"bytes,79,opt,name=ospf_interface_state,json=ospfInterfaceState,proto3" json:"ospf_interface_state,omitempty"`
	InterfacePriority                  uint32                 `protobuf:"varint,80,opt,name=interface_priority,json=interfacePriority,proto3" json:"interface_priority,omitempty"`
	DesignatedRouter                   bool                   `protobuf:"varint,81,opt,name=designated_router,json=designatedRouter,proto3" json:"designated_router,omitempty"`
	DesignatedRouterId                 string                 `protobuf:"bytes,82,opt,name=designated_router_id,json=designatedRouterId,proto3" json:"designated_router_id,omitempty"`
	DesignatedRouterAddress            string                 `protobuf:"bytes,83,opt,name=designated_router_address,json=designatedRouterAddress,proto3" json:"designated_router_address,omitempty"`
	BackupDesignatedRouter             bool                   `protobuf:"varint,84,opt,name=backup_designated_router,json=backupDesignatedRouter,proto3" json:"backup_designated_router,omitempty"`
	BackupDesignatedRouterId           string                 `protobuf:"bytes,85,opt,name=backup_designated_router_id,json=backupDesignatedRouterId,proto3" json:"backup_designated_router_id,omitempty"`
	BackupDesignatedRouterAddress      string                 `protobuf:"bytes,86,opt,name=backup_designated_router_address,json=backupDesignatedRouterAddress,proto3" json:"backup_designated_router_address,omitempty"`
	NetworkLsaFlushTimer               uint32                 `protobuf:"varint,87,opt,name=network_lsa_flush_timer,json=networkLsaFlushTimer,proto3" json:"network_lsa_flush_timer,omitempty"`
	InterfaceLsaFilter                 bool                   `protobuf:"varint,88,opt,name=interface_lsa_filter,json=interfaceLsaFilter,proto3" json:"interface_lsa_filter,omitempty"`
	HelloInterval                      uint32                 `protobuf:"varint,89,opt,name=hello_interval,json=helloInterval,proto3" json:"hello_interval,omitempty"`
	HelloIntervalMs                    uint32                 `protobuf:"varint,90,opt,name=hello_interval_ms,json=helloIntervalMs,proto3" json:"hello_interval_ms,omitempty"`
	DeadInterval                       uint32                 `protobuf:"varint,91,opt,name=dead_interval,json=deadInterval,proto3" json:"dead_interval,omitempty"`
	WaitInterval                       uint32                 `protobuf:"varint,92,opt,name=wait_interval,json=waitInterval,proto3" json:"wait_interval,omitempty"`
	InterfaceRetransmissionInterrval   uint32                 `protobuf:"varint,93,opt,name=interface_retransmission_interrval,json=interfaceRetransmissionInterrval,proto3" json:"interface_retransmission_interrval,omitempty"`
	InterfaceNsfEnabled                bool                   `protobuf:"varint,94,opt,name=interface_nsf_enabled,json=interfaceNsfEnabled,proto3" json:"interface_nsf_enabled,omitempty"`
	InterfaceNsf                       bool                   `protobuf:"varint,95,opt,name=interface_nsf,json=interfaceNsf,proto3" json:"interface_nsf,omitempty"`
	InterfaceLastNsf                   uint32                 `protobuf:"varint,96,opt,name=interface_last_nsf,json=interfaceLastNsf,proto3" json:"interface_last_nsf,omitempty"`
	PassiveInterface                   bool                   `protobuf:"varint,97,opt,name=passive_interface,json=passiveInterface,proto3" json:"passive_interface,omitempty"`
	NextHelloTime                      uint32                 `protobuf:"varint,98,opt,name=next_hello_time,json=nextHelloTime,proto3" json:"next_hello_time,omitempty"`
	NextHelloTimeMs                    uint32                 `protobuf:"varint,99,opt,name=next_hello_time_ms,json=nextHelloTimeMs,proto3" json:"next_hello_time_ms,omitempty"`
	InterfaceNeighbor                  []*OspfShInterfaceNbr  `protobuf:"bytes,100,rep,name=interface_neighbor,json=interfaceNeighbor,proto3" json:"interface_neighbor,omitempty"`
	InterfaceBfdInformation            *OspfShInterfaceBfd    `protobuf:"bytes,101,opt,name=interface_bfd_information,json=interfaceBfdInformation,proto3" json:"interface_bfd_information,omitempty"`
	TtlSecurityEnabled                 bool                   `protobuf:"varint,102,opt,name=ttl_security_enabled,json=ttlSecurityEnabled,proto3" json:"ttl_security_enabled,omitempty"`
	TtlSecurityHopCount                uint32                 `protobuf:"varint,103,opt,name=ttl_security_hop_count,json=ttlSecurityHopCount,proto3" json:"ttl_security_hop_count,omitempty"`
	ActiveInterface                    *OspfShInterfaceUp     `protobuf:"bytes,104,opt,name=active_interface,json=activeInterface,proto3" json:"active_interface,omitempty"`
	InterfaceisMadj                    bool                   `protobuf:"varint,105,opt,name=interfaceis_madj,json=interfaceisMadj,proto3" json:"interfaceis_madj,omitempty"`
	InterfaceMadjCount                 uint32                 `protobuf:"varint,106,opt,name=interface_madj_count,json=interfaceMadjCount,proto3" json:"interface_madj_count,omitempty"`
	InterfaceMadj                      []*OspfShInterfaceMadj `protobuf:"bytes,107,rep,name=interface_madj,json=interfaceMadj,proto3" json:"interface_madj,omitempty"`
	PrefixSuppressPrimaryAddresses     bool                   `protobuf:"varint,108,opt,name=prefix_suppress_primary_addresses,json=prefixSuppressPrimaryAddresses,proto3" json:"prefix_suppress_primary_addresses,omitempty"`
	PrefixSuppressSecondaryAddresses   bool                   `protobuf:"varint,109,opt,name=prefix_suppress_secondary_addresses,json=prefixSuppressSecondaryAddresses,proto3" json:"prefix_suppress_secondary_addresses,omitempty"`
	IsLoopbackStubNetwork              bool                   `protobuf:"varint,110,opt,name=is_loopback_stub_network,json=isLoopbackStubNetwork,proto3" json:"is_loopback_stub_network,omitempty"`
	InterfaceAckListCount              uint32                 `protobuf:"varint,111,opt,name=interface_ack_list_count,json=interfaceAckListCount,proto3" json:"interface_ack_list_count,omitempty"`
	InterfaceAckListHighWatermark      uint32                 `protobuf:"varint,112,opt,name=interface_ack_list_high_watermark,json=interfaceAckListHighWatermark,proto3" json:"interface_ack_list_high_watermark,omitempty"`
	RegisteredForLinkDownFastDetection bool                   `protobuf:"varint,113,opt,name=registered_for_link_down_fast_detection,json=registeredForLinkDownFastDetection,proto3" json:"registered_for_link_down_fast_detection,omitempty"`
	FastDetectHoldDownTime             uint32                 `protobuf:"varint,114,opt,name=fast_detect_hold_down_time,json=fastDetectHoldDownTime,proto3" json:"fast_detect_hold_down_time,omitempty"`
	InterfaceFastDetectHoldDown        bool                   `protobuf:"varint,115,opt,name=interface_fast_detect_hold_down,json=interfaceFastDetectHoldDown,proto3" json:"interface_fast_detect_hold_down,omitempty"`
	FastDetectHoldDownTimeRemaining    uint32                 `protobuf:"varint,116,opt,name=fast_detect_hold_down_time_remaining,json=fastDetectHoldDownTimeRemaining,proto3" json:"fast_detect_hold_down_time_remaining,omitempty"`
	FastRerouteType                    string                 `protobuf:"bytes,117,opt,name=fast_reroute_type,json=fastRerouteType,proto3" json:"fast_reroute_type,omitempty"`
	FastRerouteTopologyIndependentLfa  bool                   `protobuf:"varint,118,opt,name=fast_reroute_topology_independent_lfa,json=fastRerouteTopologyIndependentLfa,proto3" json:"fast_reroute_topology_independent_lfa,omitempty"`
	Srlg                               []uint32               `protobuf:"varint,119,rep,packed,name=srlg,proto3" json:"srlg,omitempty"`
	IpfrrTiebreakers                   []*OspfShIpfrrTb       `protobuf:"bytes,120,rep,name=ipfrr_tiebreakers,json=ipfrrTiebreakers,proto3" json:"ipfrr_tiebreakers,omitempty"`
	XXX_NoUnkeyedLiteral               struct{}               `json:"-"`
	XXX_unrecognized                   []byte                 `json:"-"`
	XXX_sizecache                      int32                  `json:"-"`
}

func (m *OspfShInterface) Reset()         { *m = OspfShInterface{} }
func (m *OspfShInterface) String() string { return proto.CompactTextString(m) }
func (*OspfShInterface) ProtoMessage()    {}
func (*OspfShInterface) Descriptor() ([]byte, []int) {
	return fileDescriptor_c681b2dfc63a990e, []int{6}
}

func (m *OspfShInterface) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OspfShInterface.Unmarshal(m, b)
}
func (m *OspfShInterface) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OspfShInterface.Marshal(b, m, deterministic)
}
func (m *OspfShInterface) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OspfShInterface.Merge(m, src)
}
func (m *OspfShInterface) XXX_Size() int {
	return xxx_messageInfo_OspfShInterface.Size(m)
}
func (m *OspfShInterface) XXX_DiscardUnknown() {
	xxx_messageInfo_OspfShInterface.DiscardUnknown(m)
}

var xxx_messageInfo_OspfShInterface proto.InternalMessageInfo

func (m *OspfShInterface) GetInterfaceNameXr() string {
	if m != nil {
		return m.InterfaceNameXr
	}
	return ""
}

func (m *OspfShInterface) GetInterfaceState() string {
	if m != nil {
		return m.InterfaceState
	}
	return ""
}

func (m *OspfShInterface) GetInterfaceLineState() bool {
	if m != nil {
		return m.InterfaceLineState
	}
	return false
}

func (m *OspfShInterface) GetInterfaceAddress() string {
	if m != nil {
		return m.InterfaceAddress
	}
	return ""
}

func (m *OspfShInterface) GetInterfaceMask() uint32 {
	if m != nil {
		return m.InterfaceMask
	}
	return 0
}

func (m *OspfShInterface) GetInterfaceArea() string {
	if m != nil {
		return m.InterfaceArea
	}
	return ""
}

func (m *OspfShInterface) GetInterfaceSid() uint32 {
	if m != nil {
		return m.InterfaceSid
	}
	return 0
}

func (m *OspfShInterface) GetInterfaceSidPhpOff() bool {
	if m != nil {
		return m.InterfaceSidPhpOff
	}
	return false
}

func (m *OspfShInterface) GetInterfaceSidNFlagClear() bool {
	if m != nil {
		return m.InterfaceSidNFlagClear
	}
	return false
}

func (m *OspfShInterface) GetInterfaceStrictSpfSid() uint32 {
	if m != nil {
		return m.InterfaceStrictSpfSid
	}
	return 0
}

func (m *OspfShInterface) GetInterfaceStrictSpfSidPhpOff() bool {
	if m != nil {
		return m.InterfaceStrictSpfSidPhpOff
	}
	return false
}

func (m *OspfShInterface) GetInterfaceStrictSpfSidNFlagClear() bool {
	if m != nil {
		return m.InterfaceStrictSpfSidNFlagClear
	}
	return false
}

func (m *OspfShInterface) GetInterfaceRouterId() string {
	if m != nil {
		return m.InterfaceRouterId
	}
	return ""
}

func (m *OspfShInterface) GetNetworkType() string {
	if m != nil {
		return m.NetworkType
	}
	return ""
}

func (m *OspfShInterface) GetIpMtu() uint32 {
	if m != nil {
		return m.IpMtu
	}
	return 0
}

func (m *OspfShInterface) GetMaximumPacketSize() uint32 {
	if m != nil {
		return m.MaximumPacketSize
	}
	return 0
}

func (m *OspfShInterface) GetInterfaceTunnelFlags() uint32 {
	if m != nil {
		return m.InterfaceTunnelFlags
	}
	return 0
}

func (m *OspfShInterface) GetInterfaceLinkCost() uint32 {
	if m != nil {
		return m.InterfaceLinkCost
	}
	return 0
}

func (m *OspfShInterface) GetInterfaceBandwidth() uint32 {
	if m != nil {
		return m.InterfaceBandwidth
	}
	return 0
}

func (m *OspfShInterface) GetCfgCostFallback() bool {
	if m != nil {
		return m.CfgCostFallback
	}
	return false
}

func (m *OspfShInterface) GetInterfaceCostFallback() uint32 {
	if m != nil {
		return m.InterfaceCostFallback
	}
	return 0
}

func (m *OspfShInterface) GetCostFallbackActive() bool {
	if m != nil {
		return m.CostFallbackActive
	}
	return false
}

func (m *OspfShInterface) GetConfiguredLdpSync() bool {
	if m != nil {
		return m.ConfiguredLdpSync
	}
	return false
}

func (m *OspfShInterface) GetConfiguredLdpSyncIgpShortcuts() bool {
	if m != nil {
		return m.ConfiguredLdpSyncIgpShortcuts
	}
	return false
}

func (m *OspfShInterface) GetInterfaceLdpSync() bool {
	if m != nil {
		return m.InterfaceLdpSync
	}
	return false
}

func (m *OspfShInterface) GetConfiguredDemandCircuit() bool {
	if m != nil {
		return m.ConfiguredDemandCircuit
	}
	return false
}

func (m *OspfShInterface) GetInterfaceDemandCircuit() bool {
	if m != nil {
		return m.InterfaceDemandCircuit
	}
	return false
}

func (m *OspfShInterface) GetInterfaceDcBitlessLsaCount() uint32 {
	if m != nil {
		return m.InterfaceDcBitlessLsaCount
	}
	return 0
}

func (m *OspfShInterface) GetTransmissionDelay() uint32 {
	if m != nil {
		return m.TransmissionDelay
	}
	return 0
}

func (m *OspfShInterface) GetOspfInterfaceState() string {
	if m != nil {
		return m.OspfInterfaceState
	}
	return ""
}

func (m *OspfShInterface) GetInterfacePriority() uint32 {
	if m != nil {
		return m.InterfacePriority
	}
	return 0
}

func (m *OspfShInterface) GetDesignatedRouter() bool {
	if m != nil {
		return m.DesignatedRouter
	}
	return false
}

func (m *OspfShInterface) GetDesignatedRouterId() string {
	if m != nil {
		return m.DesignatedRouterId
	}
	return ""
}

func (m *OspfShInterface) GetDesignatedRouterAddress() string {
	if m != nil {
		return m.DesignatedRouterAddress
	}
	return ""
}

func (m *OspfShInterface) GetBackupDesignatedRouter() bool {
	if m != nil {
		return m.BackupDesignatedRouter
	}
	return false
}

func (m *OspfShInterface) GetBackupDesignatedRouterId() string {
	if m != nil {
		return m.BackupDesignatedRouterId
	}
	return ""
}

func (m *OspfShInterface) GetBackupDesignatedRouterAddress() string {
	if m != nil {
		return m.BackupDesignatedRouterAddress
	}
	return ""
}

func (m *OspfShInterface) GetNetworkLsaFlushTimer() uint32 {
	if m != nil {
		return m.NetworkLsaFlushTimer
	}
	return 0
}

func (m *OspfShInterface) GetInterfaceLsaFilter() bool {
	if m != nil {
		return m.InterfaceLsaFilter
	}
	return false
}

func (m *OspfShInterface) GetHelloInterval() uint32 {
	if m != nil {
		return m.HelloInterval
	}
	return 0
}

func (m *OspfShInterface) GetHelloIntervalMs() uint32 {
	if m != nil {
		return m.HelloIntervalMs
	}
	return 0
}

func (m *OspfShInterface) GetDeadInterval() uint32 {
	if m != nil {
		return m.DeadInterval
	}
	return 0
}

func (m *OspfShInterface) GetWaitInterval() uint32 {
	if m != nil {
		return m.WaitInterval
	}
	return 0
}

func (m *OspfShInterface) GetInterfaceRetransmissionInterrval() uint32 {
	if m != nil {
		return m.InterfaceRetransmissionInterrval
	}
	return 0
}

func (m *OspfShInterface) GetInterfaceNsfEnabled() bool {
	if m != nil {
		return m.InterfaceNsfEnabled
	}
	return false
}

func (m *OspfShInterface) GetInterfaceNsf() bool {
	if m != nil {
		return m.InterfaceNsf
	}
	return false
}

func (m *OspfShInterface) GetInterfaceLastNsf() uint32 {
	if m != nil {
		return m.InterfaceLastNsf
	}
	return 0
}

func (m *OspfShInterface) GetPassiveInterface() bool {
	if m != nil {
		return m.PassiveInterface
	}
	return false
}

func (m *OspfShInterface) GetNextHelloTime() uint32 {
	if m != nil {
		return m.NextHelloTime
	}
	return 0
}

func (m *OspfShInterface) GetNextHelloTimeMs() uint32 {
	if m != nil {
		return m.NextHelloTimeMs
	}
	return 0
}

func (m *OspfShInterface) GetInterfaceNeighbor() []*OspfShInterfaceNbr {
	if m != nil {
		return m.InterfaceNeighbor
	}
	return nil
}

func (m *OspfShInterface) GetInterfaceBfdInformation() *OspfShInterfaceBfd {
	if m != nil {
		return m.InterfaceBfdInformation
	}
	return nil
}

func (m *OspfShInterface) GetTtlSecurityEnabled() bool {
	if m != nil {
		return m.TtlSecurityEnabled
	}
	return false
}

func (m *OspfShInterface) GetTtlSecurityHopCount() uint32 {
	if m != nil {
		return m.TtlSecurityHopCount
	}
	return 0
}

func (m *OspfShInterface) GetActiveInterface() *OspfShInterfaceUp {
	if m != nil {
		return m.ActiveInterface
	}
	return nil
}

func (m *OspfShInterface) GetInterfaceisMadj() bool {
	if m != nil {
		return m.InterfaceisMadj
	}
	return false
}

func (m *OspfShInterface) GetInterfaceMadjCount() uint32 {
	if m != nil {
		return m.InterfaceMadjCount
	}
	return 0
}

func (m *OspfShInterface) GetInterfaceMadj() []*OspfShInterfaceMadj {
	if m != nil {
		return m.InterfaceMadj
	}
	return nil
}

func (m *OspfShInterface) GetPrefixSuppressPrimaryAddresses() bool {
	if m != nil {
		return m.PrefixSuppressPrimaryAddresses
	}
	return false
}

func (m *OspfShInterface) GetPrefixSuppressSecondaryAddresses() bool {
	if m != nil {
		return m.PrefixSuppressSecondaryAddresses
	}
	return false
}

func (m *OspfShInterface) GetIsLoopbackStubNetwork() bool {
	if m != nil {
		return m.IsLoopbackStubNetwork
	}
	return false
}

func (m *OspfShInterface) GetInterfaceAckListCount() uint32 {
	if m != nil {
		return m.InterfaceAckListCount
	}
	return 0
}

func (m *OspfShInterface) GetInterfaceAckListHighWatermark() uint32 {
	if m != nil {
		return m.InterfaceAckListHighWatermark
	}
	return 0
}

func (m *OspfShInterface) GetRegisteredForLinkDownFastDetection() bool {
	if m != nil {
		return m.RegisteredForLinkDownFastDetection
	}
	return false
}

func (m *OspfShInterface) GetFastDetectHoldDownTime() uint32 {
	if m != nil {
		return m.FastDetectHoldDownTime
	}
	return 0
}

func (m *OspfShInterface) GetInterfaceFastDetectHoldDown() bool {
	if m != nil {
		return m.InterfaceFastDetectHoldDown
	}
	return false
}

func (m *OspfShInterface) GetFastDetectHoldDownTimeRemaining() uint32 {
	if m != nil {
		return m.FastDetectHoldDownTimeRemaining
	}
	return 0
}

func (m *OspfShInterface) GetFastRerouteType() string {
	if m != nil {
		return m.FastRerouteType
	}
	return ""
}

func (m *OspfShInterface) GetFastRerouteTopologyIndependentLfa() bool {
	if m != nil {
		return m.FastRerouteTopologyIndependentLfa
	}
	return false
}

func (m *OspfShInterface) GetSrlg() []uint32 {
	if m != nil {
		return m.Srlg
	}
	return nil
}

func (m *OspfShInterface) GetIpfrrTiebreakers() []*OspfShIpfrrTb {
	if m != nil {
		return m.IpfrrTiebreakers
	}
	return nil
}

func init() {
	proto.RegisterType((*OspfShInterface_KEYS)(nil), "cisco_ios_xr_ipv4_ospf_oper.ospf.processes.process.default_vrf.interface_information.interfaces.interface.ospf_sh_interface_KEYS")
	proto.RegisterType((*OspfShInterfaceNbr)(nil), "cisco_ios_xr_ipv4_ospf_oper.ospf.processes.process.default_vrf.interface_information.interfaces.interface.ospf_sh_interface_nbr")
	proto.RegisterType((*OspfShInterfaceBfd)(nil), "cisco_ios_xr_ipv4_ospf_oper.ospf.processes.process.default_vrf.interface_information.interfaces.interface.ospf_sh_interface_bfd")
	proto.RegisterType((*OspfShInterfaceUp)(nil), "cisco_ios_xr_ipv4_ospf_oper.ospf.processes.process.default_vrf.interface_information.interfaces.interface.ospf_sh_interface_up")
	proto.RegisterType((*OspfShInterfaceMadj)(nil), "cisco_ios_xr_ipv4_ospf_oper.ospf.processes.process.default_vrf.interface_information.interfaces.interface.ospf_sh_interface_madj")
	proto.RegisterType((*OspfShIpfrrTb)(nil), "cisco_ios_xr_ipv4_ospf_oper.ospf.processes.process.default_vrf.interface_information.interfaces.interface.ospf_sh_ipfrr_tb")
	proto.RegisterType((*OspfShInterface)(nil), "cisco_ios_xr_ipv4_ospf_oper.ospf.processes.process.default_vrf.interface_information.interfaces.interface.ospf_sh_interface")
}

func init() { proto.RegisterFile("ospf_sh_interface.proto", fileDescriptor_c681b2dfc63a990e) }

var fileDescriptor_c681b2dfc63a990e = []byte{
	// 2276 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xc4, 0x59, 0xdb, 0x7a, 0x1b, 0xb7,
	0x11, 0xfe, 0x18, 0x3b, 0x8e, 0x0d, 0x9b, 0x96, 0xb4, 0x96, 0x2c, 0xd8, 0xae, 0x63, 0x59, 0xae,
	0x1b, 0x27, 0x6e, 0x15, 0xc7, 0x87, 0xc4, 0x71, 0x9a, 0x26, 0x92, 0x65, 0x45, 0xac, 0x49, 0x45,
	0x25, 0xdd, 0x26, 0xe9, 0x09, 0x05, 0x17, 0x58, 0x12, 0xe2, 0x9e, 0x0a, 0x60, 0x25, 0x31, 0xbd,
	0x68, 0xfb, 0x14, 0x7d, 0x85, 0xb6, 0x57, 0xbd, 0xe9, 0x65, 0x7b, 0xdf, 0x97, 0xe9, 0x33, 0xf4,
	0xc3, 0x60, 0x4f, 0x58, 0x92, 0xb9, 0xac, 0xef, 0x96, 0x98, 0xff, 0x1f, 0x0c, 0x06, 0x83, 0x19,
	0x0c, 0x88, 0xd6, 0x13, 0x95, 0x06, 0x44, 0x8d, 0x89, 0x88, 0x35, 0x97, 0x01, 0xf5, 0xf9, 0x56,
	0x2a, 0x13, 0x9d, 0x78, 0xc2, 0x17, 0xca, 0x4f, 0x88, 0x48, 0x14, 0x39, 0x95, 0x44, 0xa4, 0xc7,
	0x8f, 0x09, 0x40, 0x93, 0x94, 0xcb, 0x2d, 0xf3, 0x65, 0x70, 0x3e, 0x57, 0x8a, 0xab, 0xe2, 0x6b,
	0x8b, 0xf1, 0x80, 0x66, 0xa1, 0x26, 0xc7, 0x32, 0xd8, 0x2a, 0xf5, 0x11, 0x11, 0x07, 0x89, 0x8c,
	0xa8, 0x16, 0x49, 0x5c, 0x8d, 0xaa, 0xea, 0x73, 0x73, 0x88, 0xae, 0xce, 0x58, 0x41, 0x5e, 0xbe,
	0xf8, 0x66, 0xe0, 0xdd, 0x46, 0x97, 0x72, 0xdd, 0x24, 0xa6, 0x11, 0xc7, 0xad, 0x8d, 0xd6, 0xbd,
	0x0b, 0xfd, 0x8b, 0xf9, 0xd8, 0x01, 0x8d, 0xb8, 0x77, 0x17, 0x5d, 0xae, 0x48, 0x00, 0x7a, 0x03,
	0x40, 0xed, 0x72, 0xd4, 0xc0, 0x36, 0xff, 0xdb, 0x42, 0x6b, 0xb3, 0x93, 0xc4, 0x43, 0xe9, 0x3d,
	0x44, 0x6b, 0xb5, 0x01, 0x2e, 0x46, 0xe3, 0x61, 0x22, 0x89, 0x60, 0xf9, 0x64, 0x57, 0x2a, 0x3d,
	0xb9, 0xac, 0xc3, 0xbc, 0x0f, 0xd1, 0xfa, 0x1c, 0x8e, 0x9f, 0x28, 0x0d, 0xb3, 0xb7, 0xfb, 0x6b,
	0x33, 0xac, 0xe7, 0x89, 0xd2, 0xde, 0x2d, 0x74, 0xb1, 0x44, 0x33, 0x89, 0xcf, 0x6c, 0xb4, 0xee,
	0x9d, 0xef, 0xa3, 0x62, 0x68, 0x57, 0x9a, 0x05, 0x97, 0x80, 0x21, 0x93, 0xf8, 0x2c, 0x20, 0x4a,
	0xd2, 0x0e, 0x93, 0x66, 0xc1, 0x2a, 0x4b, 0x53, 0x69, 0x9c, 0x32, 0xe6, 0x61, 0x98, 0xe0, 0x37,
	0x01, 0xd4, 0x2e, 0x46, 0xf7, 0xcd, 0xe0, 0xe6, 0x5f, 0xe6, 0x2e, 0x78, 0x18, 0x30, 0xef, 0x7d,
	0xb4, 0x3a, 0x0c, 0x98, 0x19, 0x0c, 0x08, 0x8f, 0xe9, 0x30, 0xe4, 0x24, 0x4a, 0x98, 0x75, 0x6e,
	0xbb, 0xbf, 0x32, 0x0c, 0x58, 0x27, 0xd6, 0xc1, 0x0b, 0x90, 0xf4, 0x12, 0xc6, 0xbd, 0xeb, 0xe8,
	0x3c, 0x68, 0x38, 0xa6, 0x61, 0xbe, 0xbc, 0xf2, 0xb7, 0xf7, 0x01, 0x5a, 0x65, 0x5c, 0x73, 0xdf,
	0xec, 0x2e, 0x89, 0xb2, 0x50, 0x8b, 0x34, 0x14, 0xdc, 0x2e, 0xad, 0xdd, 0xbf, 0x52, 0xca, 0x7a,
	0xa5, 0x68, 0xf3, 0x3f, 0xe7, 0xd1, 0xea, 0xac, 0x65, 0x59, 0xea, 0xdd, 0x40, 0x17, 0x4e, 0xa8,
	0xd0, 0x44, 0x8b, 0xa8, 0xb0, 0xe6, 0xbc, 0x19, 0x78, 0x25, 0x22, 0xee, 0x7d, 0x82, 0xae, 0x57,
	0x60, 0x2a, 0x39, 0x25, 0x41, 0x98, 0x24, 0x66, 0x19, 0x8c, 0x9f, 0xe6, 0x66, 0x55, 0x9b, 0xb2,
	0x2d, 0x39, 0xdd, 0x33, 0xf2, 0x8e, 0x11, 0x7b, 0x1f, 0x21, 0x5c, 0x23, 0x2b, 0x87, 0x7a, 0xa6,
	0xb1, 0x61, 0xdb, 0xaa, 0x46, 0x7c, 0x8c, 0xae, 0x56, 0x44, 0xcb, 0x0a, 0x79, 0x3c, 0xd2, 0x63,
	0xd8, 0x99, 0x76, 0x7f, 0xb5, 0x94, 0x02, 0xa9, 0x0b, 0x32, 0xef, 0x63, 0x74, 0xad, 0x61, 0x6b,
	0xcc, 0x4f, 0xb5, 0xe5, 0xc3, 0x6e, 0xb5, 0xfb, 0x57, 0x1d, 0x53, 0x0f, 0xf8, 0xa9, 0x06, 0x05,
	0xde, 0x2e, 0xba, 0xb5, 0x90, 0x9a, 0x1b, 0x7c, 0x0e, 0x14, 0xdc, 0x98, 0xaf, 0xc0, 0x9a, 0xfd,
	0xa4, 0x1e, 0x9f, 0x54, 0xd5, 0xa7, 0x7f, 0xab, 0x61, 0xf7, 0xb6, 0xaa, 0x26, 0xff, 0x1c, 0xdd,
	0x5c, 0x40, 0xcb, 0xa7, 0x3e, 0x0f, 0xe4, 0x6b, 0xf3, 0xc8, 0x76, 0xe2, 0xf7, 0xd0, 0x8a, 0xc5,
	0x2b, 0x9f, 0xc6, 0x85, 0xab, 0x2e, 0x00, 0x6b, 0x09, 0x04, 0x03, 0x9f, 0xc6, 0xb9, 0x97, 0x1e,
	0xa0, 0xd5, 0x88, 0x9e, 0x8a, 0x28, 0x8b, 0x5c, 0xcf, 0x22, 0x80, 0x7b, 0xb9, 0xac, 0xee, 0xd7,
	0x1f, 0xa0, 0xa5, 0x90, 0xaa, 0xc2, 0x24, 0x08, 0x93, 0x8b, 0x00, 0x6e, 0x9b, 0x61, 0x40, 0x42,
	0xac, 0xfc, 0x10, 0x79, 0xae, 0x66, 0x80, 0x5e, 0x02, 0xe8, 0x72, 0x5d, 0x2f, 0xa0, 0x3f, 0x43,
	0xdf, 0x6b, 0xee, 0x71, 0x4a, 0x7d, 0x11, 0x8f, 0x80, 0x26, 0x71, 0xbb, 0xb1, 0x68, 0x60, 0x1e,
	0x02, 0xc2, 0xf0, 0xa5, 0xf7, 0xb4, 0x1e, 0x5d, 0xb5, 0x6c, 0x90, 0xc5, 0x1a, 0x5f, 0x6e, 0xec,
	0x76, 0x95, 0x0e, 0xb2, 0x58, 0x1b, 0x17, 0xb8, 0x67, 0x39, 0x67, 0x2d, 0x59, 0x17, 0x38, 0x27,
	0xda, 0x32, 0x76, 0x9c, 0x2d, 0xca, 0xf4, 0x98, 0xc7, 0x5a, 0xf8, 0x90, 0x5c, 0x89, 0x9e, 0xa6,
	0x1c, 0x2f, 0x43, 0xd6, 0xaa, 0x45, 0x87, 0x83, 0x79, 0x35, 0x4d, 0xb9, 0x71, 0xe3, 0x34, 0xc9,
	0xe2, 0x11, 0x57, 0x9a, 0x44, 0x8c, 0x4c, 0xf8, 0x14, 0xaf, 0xd8, 0x14, 0x52, 0x0c, 0xf7, 0xd8,
	0x4b, 0x3e, 0xf5, 0x9e, 0xa1, 0xeb, 0x49, 0xc8, 0x48, 0xc4, 0x9e, 0x18, 0x4c, 0x73, 0x65, 0x9e,
	0x5d, 0x59, 0x12, 0xb2, 0x1e, 0x7b, 0xf2, 0x92, 0x4f, 0xdd, 0x95, 0xdd, 0x47, 0x5e, 0x63, 0x0e,
	0x93, 0x52, 0xaf, 0xd8, 0x48, 0x70, 0xa6, 0xe9, 0x30, 0x6f, 0x1d, 0xbd, 0x65, 0x31, 0x0a, 0xaf,
	0x6e, 0x9c, 0xb9, 0xd7, 0xee, 0x9f, 0x8b, 0x8c, 0x44, 0x99, 0x7c, 0x39, 0xe1, 0x53, 0x7f, 0x4c,
	0x45, 0x6c, 0xe8, 0x6b, 0x1b, 0xad, 0x7b, 0x67, 0xfb, 0xa8, 0x18, 0xea, 0xb0, 0xcd, 0x7f, 0xbf,
	0x31, 0xaf, 0x76, 0x44, 0x94, 0x1d, 0xb9, 0x85, 0xc1, 0x9c, 0xa4, 0x3c, 0xa1, 0xb7, 0x9d, 0x83,
	0xe3, 0x6d, 0xa0, 0x4b, 0x06, 0x6e, 0xcf, 0x9a, 0x60, 0x79, 0x26, 0x41, 0x66, 0xcc, 0xc8, 0x3b,
	0xec, 0x3b, 0xb7, 0xf7, 0xcc, 0x77, 0x6e, 0xaf, 0x13, 0x59, 0x66, 0x92, 0x06, 0xfb, 0x6c, 0xf3,
	0x38, 0xb1, 0x23, 0x57, 0xc1, 0x16, 0xaa, 0xca, 0x0f, 0x09, 0x45, 0x3c, 0xb1, 0x35, 0xc6, 0xa6,
	0x90, 0x95, 0x52, 0xd4, 0x15, 0xf1, 0x04, 0xea, 0xcb, 0x83, 0x3c, 0xb3, 0x56, 0x24, 0xa5, 0xa9,
	0xe6, 0x90, 0x32, 0x2e, 0xf4, 0x3d, 0x23, 0xeb, 0x14, 0xa2, 0x81, 0x91, 0x6c, 0x06, 0x68, 0xb9,
	0xf4, 0x5f, 0x1a, 0x48, 0x49, 0xf4, 0xd0, 0x7b, 0x07, 0x2d, 0x69, 0xc1, 0x87, 0x92, 0xd3, 0x09,
	0x97, 0x36, 0xaa, 0xac, 0xeb, 0x2e, 0x57, 0xc3, 0x10, 0x48, 0xef, 0xa2, 0xe5, 0x1a, 0xb0, 0x9e,
	0x89, 0x6b, 0x0a, 0x20, 0x31, 0x6c, 0xfe, 0x73, 0x13, 0xad, 0xcc, 0x6c, 0x94, 0x49, 0x17, 0x6e,
	0xf1, 0x26, 0xa7, 0x12, 0x3f, 0x84, 0xb9, 0x96, 0x9c, 0xfa, 0xfd, 0xb5, 0x34, 0x56, 0x35, 0x97,
	0xf5, 0xc8, 0x5a, 0x25, 0x9c, 0x25, 0x19, 0x27, 0x38, 0x4e, 0x2b, 0xd0, 0x8f, 0x21, 0xc6, 0xbd,
	0xba, 0xd7, 0x72, 0xc6, 0xfd, 0xba, 0x19, 0x94, 0x31, 0x73, 0xe6, 0xf0, 0x13, 0x50, 0xbe, 0x5c,
	0xdb, 0x1c, 0x18, 0x77, 0xe3, 0x2a, 0xa2, 0x6a, 0x82, 0x3f, 0xb4, 0x39, 0xa8, 0x1c, 0xed, 0x51,
	0x35, 0x99, 0x13, 0x7e, 0x1f, 0xcd, 0x0b, 0xbf, 0x3b, 0xa8, 0x5d, 0x5b, 0x95, 0x60, 0xf8, 0x29,
	0x28, 0xbb, 0x54, 0xad, 0x49, 0x30, 0xef, 0x83, 0xfa, 0x15, 0x45, 0x09, 0x46, 0xd2, 0x71, 0x4a,
	0x92, 0x20, 0xc0, 0x1f, 0x37, 0x96, 0x34, 0x10, 0xec, 0x70, 0x9c, 0x7e, 0x19, 0x04, 0xe6, 0xec,
	0xba, 0x94, 0x98, 0x04, 0x21, 0x1d, 0x11, 0x3f, 0xe4, 0x54, 0xe2, 0x67, 0xc0, 0xbb, 0x5a, 0xe7,
	0x1d, 0xec, 0x85, 0x74, 0xf4, 0xdc, 0x48, 0xdd, 0x6a, 0xa9, 0xb4, 0x14, 0xbe, 0x26, 0xb0, 0x75,
	0x82, 0xe1, 0x4f, 0x1a, 0xd5, 0x72, 0x00, 0xe2, 0x41, 0x1a, 0x18, 0x3b, 0x5f, 0xa0, 0x8d, 0x45,
	0xc4, 0xd2, 0xe4, 0x1f, 0xc3, 0xd4, 0x37, 0xe6, 0x2a, 0xc8, 0x6d, 0x3f, 0x40, 0x77, 0x17, 0xaa,
	0x71, 0x96, 0xf1, 0x29, 0xe8, 0xba, 0x35, 0x57, 0x57, 0x6d, 0x3d, 0xce, 0x29, 0x92, 0x49, 0xa6,
	0x39, 0xdc, 0xef, 0x7e, 0x02, 0xfb, 0x51, 0xed, 0x7c, 0x1f, 0x24, 0x1d, 0x66, 0x2f, 0x61, 0xfa,
	0x24, 0x91, 0x13, 0x1b, 0xfc, 0x9f, 0xd9, 0x5b, 0x67, 0x3e, 0x06, 0x91, 0xbf, 0x86, 0xce, 0x89,
	0x94, 0x44, 0x3a, 0xc3, 0x9f, 0x83, 0x43, 0xde, 0x14, 0x69, 0x4f, 0x67, 0x66, 0xa6, 0xa2, 0xf0,
	0xa4, 0xd4, 0x9f, 0x70, 0x4d, 0x94, 0xf8, 0x96, 0xe3, 0x6d, 0x7b, 0x5e, 0x73, 0xd1, 0x21, 0x48,
	0x06, 0xe2, 0x5b, 0xee, 0x5e, 0x2f, 0x74, 0x16, 0xc7, 0x3c, 0x84, 0xf5, 0x29, 0xbc, 0xd3, 0x28,
	0xd3, 0xaf, 0x40, 0x68, 0xd6, 0xa4, 0x16, 0x65, 0x85, 0xe7, 0x8b, 0xb2, 0xc2, 0xfb, 0x75, 0xfc,
	0x90, 0xc6, 0xec, 0x44, 0x30, 0x3d, 0xc6, 0xbb, 0xb6, 0xc8, 0x94, 0xa2, 0x9d, 0x42, 0x62, 0x8e,
	0xa5, 0x1f, 0x8c, 0x40, 0x2b, 0x09, 0x68, 0x18, 0x0e, 0xa9, 0x3f, 0xc1, 0x2f, 0xc0, 0xd9, 0x4b,
	0x7e, 0x30, 0x32, 0x4a, 0xf7, 0xf2, 0x61, 0xf7, 0x2a, 0xec, 0x32, 0xf6, 0x1a, 0xb1, 0xe2, 0xf0,
	0x1e, 0xa0, 0x55, 0x07, 0x4d, 0xa8, 0xaf, 0xc5, 0x31, 0xc7, 0x5f, 0xd8, 0x90, 0xf6, 0x6b, 0xd8,
	0x6d, 0x90, 0x98, 0x65, 0xfb, 0x49, 0x1c, 0x88, 0x51, 0x26, 0x39, 0x23, 0x21, 0x4b, 0x89, 0x9a,
	0xc6, 0x3e, 0xde, 0x07, 0xc2, 0x4a, 0x25, 0xea, 0xb2, 0x74, 0x30, 0x8d, 0x7d, 0x6f, 0x1f, 0xdd,
	0x9e, 0x83, 0x27, 0x62, 0x94, 0x12, 0x35, 0x4e, 0xa4, 0xf6, 0x33, 0xad, 0x70, 0x07, 0xd8, 0x37,
	0x67, 0xd8, 0x9d, 0x51, 0x3a, 0x28, 0x40, 0xe6, 0x3e, 0x51, 0x73, 0x78, 0x31, 0xf1, 0x4f, 0x81,
	0x5a, 0x25, 0x88, 0x62, 0xde, 0x67, 0xe8, 0x5a, 0x6d, 0x5e, 0xc6, 0x23, 0x1a, 0x33, 0xe2, 0x0b,
	0xe9, 0x67, 0x42, 0xe3, 0x97, 0x40, 0x5a, 0xaf, 0x00, 0xbb, 0x20, 0x7f, 0x6e, 0xc5, 0x6e, 0xad,
	0x69, 0x50, 0xbb, 0x8d, 0x43, 0xeb, 0x32, 0x77, 0xd0, 0xdb, 0x35, 0xa6, 0x4f, 0x86, 0x42, 0x87,
	0xe6, 0x5a, 0x11, 0x2a, 0x9a, 0x57, 0x9b, 0x1e, 0x6c, 0x47, 0x95, 0x16, 0x76, 0xfd, 0x1d, 0x8b,
	0xe9, 0x2a, 0x6a, 0xcb, 0xcd, 0x8f, 0x90, 0xa7, 0x25, 0x8d, 0x55, 0x24, 0x94, 0x32, 0x17, 0x0a,
	0xc6, 0x43, 0x3a, 0xc5, 0x07, 0x36, 0xae, 0xea, 0x92, 0x5d, 0x23, 0x58, 0x58, 0x6d, 0xbe, 0x5c,
	0x54, 0x6d, 0xcc, 0x04, 0x15, 0x38, 0x95, 0x22, 0x91, 0x42, 0x4f, 0xf1, 0x61, 0x23, 0x70, 0x0f,
	0x73, 0x81, 0xc9, 0xcb, 0x8c, 0x2b, 0x31, 0x8a, 0xa9, 0xe6, 0x2c, 0x3f, 0xb9, 0xf8, 0x67, 0xd6,
	0xed, 0x95, 0xc0, 0x9e, 0x5b, 0x63, 0xcd, 0x0c, 0xd8, 0x1c, 0xf3, 0xbe, 0xb5, 0xa6, 0x89, 0xef,
	0x30, 0xb3, 0x51, 0xb3, 0x8c, 0x22, 0xfd, 0x0f, 0x80, 0xb6, 0xde, 0xa4, 0x15, 0x55, 0xe0, 0x29,
	0xc2, 0x26, 0x34, 0xb3, 0x94, 0xcc, 0x5a, 0xf8, 0xca, 0x6e, 0x94, 0x95, 0xef, 0x36, 0xed, 0xfc,
	0x14, 0xdd, 0x58, 0xc4, 0x34, 0xe6, 0xfe, 0x1c, 0xe6, 0xc5, 0xf3, 0xc9, 0x1d, 0xe6, 0x7d, 0x81,
	0x36, 0x16, 0xd2, 0x0b, 0xdb, 0x7f, 0x01, 0x3a, 0x6e, 0xce, 0xd7, 0x51, 0xac, 0xe0, 0x09, 0x5a,
	0x2f, 0xb2, 0x9c, 0x89, 0x91, 0x20, 0xcc, 0xd4, 0x38, 0xbf, 0xf1, 0x7e, 0x65, 0x93, 0x4f, 0x2e,
	0xee, 0x2a, 0xba, 0x67, 0x84, 0xf6, 0xb2, 0xeb, 0x56, 0x57, 0x43, 0x14, 0xa1, 0x59, 0xf4, 0xd7,
	0xcd, 0xea, 0xaa, 0xe8, 0x1e, 0x48, 0x4c, 0x25, 0xb4, 0x77, 0xdb, 0xb2, 0x89, 0xfc, 0xc6, 0x16,
	0x4c, 0x18, 0xed, 0x14, 0x9d, 0xe4, 0x7b, 0x68, 0xc5, 0x85, 0x91, 0x48, 0xe1, 0x5f, 0xda, 0xdb,
	0x84, 0x83, 0xec, 0x29, 0x53, 0x35, 0x19, 0xa7, 0xac, 0xd2, 0xf8, 0x2b, 0x5b, 0x35, 0xcd, 0x60,
	0xa9, 0xf0, 0x0e, 0x6a, 0x43, 0x3b, 0x59, 0x82, 0x7e, 0x6d, 0x41, 0x66, 0xb0, 0x04, 0x75, 0xd1,
	0x66, 0xad, 0x36, 0x70, 0x27, 0xfc, 0x41, 0x00, 0xcc, 0xdf, 0x00, 0xb3, 0x2a, 0x6e, 0x7d, 0x07,
	0xd8, 0x29, 0x70, 0x8d, 0xb7, 0x04, 0x55, 0xf4, 0xd7, 0x0c, 0xff, 0x16, 0xbc, 0x53, 0x7b, 0x4b,
	0x50, 0x79, 0x83, 0xcd, 0xdc, 0x1b, 0x40, 0xac, 0x02, 0x4c, 0x00, 0x7b, 0xa9, 0x8e, 0x6d, 0x64,
	0x20, 0xd3, 0x03, 0x19, 0xe4, 0xef, 0x6c, 0x47, 0x53, 0xf9, 0x9c, 0x2a, 0x6d, 0xd0, 0xf7, 0xd1,
	0x4a, 0x4a, 0x95, 0x12, 0xc7, 0xbc, 0x3a, 0x9b, 0x98, 0xda, 0x73, 0x93, 0x0b, 0xca, 0x83, 0x69,
	0xba, 0x01, 0xe8, 0xf3, 0xac, 0xf3, 0xa1, 0x53, 0x1a, 0xda, 0xfd, 0x31, 0xc3, 0xd0, 0x7a, 0x40,
	0x9b, 0x74, 0x1f, 0x79, 0x0d, 0x9c, 0xd9, 0x20, 0xdf, 0x6e, 0x90, 0x03, 0xed, 0x29, 0xef, 0x1f,
	0xad, 0xba, 0xc1, 0xc5, 0xb5, 0x17, 0xb3, 0x8d, 0x33, 0xf7, 0x2e, 0x3e, 0xfc, 0x53, 0x6b, 0xeb,
	0xff, 0xf6, 0xb8, 0xb4, 0x35, 0xf7, 0xd1, 0xa7, 0x96, 0x6c, 0x8a, 0x0b, 0xb7, 0xf7, 0xaf, 0x56,
	0xbd, 0x6b, 0xb7, 0x2f, 0x24, 0xa5, 0x6e, 0xcc, 0x37, 0x5a, 0xaf, 0xdf, 0xf2, 0x61, 0xc0, 0x6a,
	0x6f, 0x1c, 0x3b, 0x01, 0xeb, 0x54, 0x3a, 0xcc, 0xc1, 0xd4, 0x3a, 0x24, 0x8a, 0xfb, 0x99, 0x49,
	0x9e, 0x65, 0xe8, 0x05, 0xf6, 0x60, 0x6a, 0x1d, 0x0e, 0x72, 0x51, 0x11, 0x79, 0x8f, 0xd0, 0x55,
	0x87, 0x31, 0x4e, 0xd2, 0xbc, 0x54, 0x8c, 0xec, 0xeb, 0x4d, 0x8d, 0xb3, 0x9f, 0xa4, 0xb6, 0x46,
	0xfc, 0xbd, 0x85, 0x96, 0x6d, 0xa9, 0xae, 0xc5, 0xd6, 0x18, 0xbc, 0xf3, 0xc7, 0xd7, 0xea, 0x9c,
	0x2c, 0xed, 0x2f, 0x59, 0xc3, 0xaa, 0xd8, 0x7e, 0x17, 0x55, 0x87, 0x43, 0x28, 0xe8, 0x0b, 0xb1,
	0xb0, 0xf7, 0x98, 0xda, 0x78, 0xcf, 0xb4, 0x8b, 0x4e, 0x5e, 0x83, 0x8e, 0xd0, 0xba, 0xe2, 0xa8,
	0x71, 0x4b, 0x32, 0x60, 0xeb, 0x89, 0xbf, 0xb5, 0xdc, 0x4e, 0x80, 0x1d, 0xe1, 0x09, 0xc4, 0xf7,
	0x9f, 0x5f, 0x6f, 0x94, 0x18, 0x4b, 0x9c, 0x6e, 0x84, 0x1d, 0x79, 0x1d, 0x74, 0x3b, 0x95, 0x3c,
	0x10, 0xa7, 0xa4, 0x7c, 0x6f, 0x48, 0xa5, 0x88, 0xa8, 0x9c, 0x16, 0x45, 0x83, 0x2b, 0x1c, 0x82,
	0x67, 0xde, 0xb6, 0xc0, 0x41, 0x8e, 0x3b, 0xb4, 0xb0, 0xed, 0x02, 0xe5, 0xf5, 0xd0, 0x9d, 0xa6,
	0x2a, 0xc5, 0xfd, 0x24, 0x66, 0xae, 0xb2, 0x08, 0x94, 0x6d, 0xb8, 0xca, 0x06, 0x05, 0xb0, 0x52,
	0x67, 0x9a, 0x0d, 0x45, 0xc2, 0x24, 0x49, 0xe1, 0x16, 0xa8, 0x74, 0x36, 0x24, 0x79, 0xe1, 0xc1,
	0x31, 0xe8, 0x58, 0x13, 0xaa, 0x9b, 0x8b, 0x07, 0x3a, 0x1b, 0x1e, 0x58, 0x61, 0xe3, 0x4d, 0xcf,
	0x9f, 0x90, 0x50, 0x28, 0x9d, 0x6f, 0x5a, 0xd2, 0x7c, 0xd3, 0xf3, 0x27, 0x5d, 0xa1, 0xb4, 0xdd,
	0xb7, 0x7d, 0x74, 0x7b, 0x0e, 0x71, 0x2c, 0x46, 0x63, 0x72, 0x42, 0x35, 0x97, 0x11, 0x95, 0x13,
	0x9c, 0x82, 0x86, 0x9b, 0x4d, 0x0d, 0xfb, 0x62, 0x34, 0xfe, 0xaa, 0x00, 0x79, 0x03, 0xf4, 0x8e,
	0xe4, 0x23, 0xa1, 0x34, 0x37, 0x37, 0xbd, 0x20, 0x91, 0xf6, 0x36, 0xce, 0x92, 0x93, 0x98, 0x04,
	0x26, 0x49, 0x97, 0xcf, 0x9f, 0xf8, 0xf7, 0xb0, 0x94, 0xcd, 0x0a, 0xbe, 0x97, 0x48, 0x73, 0x41,
	0xdf, 0x4d, 0x4e, 0xe2, 0x3d, 0xaa, 0xf4, 0x6e, 0x81, 0x34, 0x9d, 0x5b, 0x8d, 0x4b, 0xc6, 0x49,
	0xc8, 0xac, 0x46, 0x48, 0xcd, 0xd2, 0x3e, 0x38, 0x04, 0x25, 0x65, 0x3f, 0x09, 0x99, 0x51, 0x02,
	0x39, 0xda, 0x79, 0x3d, 0x9c, 0xab, 0x05, 0xab, 0x46, 0xff, 0xb5, 0x37, 0xa3, 0xc9, 0xeb, 0xa1,
	0xef, 0x2f, 0xb6, 0x80, 0x48, 0x1e, 0x51, 0x11, 0x8b, 0x78, 0x84, 0x35, 0xd8, 0x72, 0x6b, 0xbe,
	0x2d, 0xfd, 0x02, 0x06, 0x6f, 0x82, 0x46, 0x9d, 0xe4, 0x70, 0x4d, 0xb1, 0x3d, 0x55, 0x66, 0x9b,
	0x7c, 0x23, 0xe8, 0xdb, 0x71, 0xe8, 0xab, 0x0e, 0xd1, 0x5d, 0x17, 0x9b, 0xa4, 0x49, 0x98, 0x8c,
	0xa6, 0xf0, 0xb8, 0x90, 0xf2, 0x98, 0xf1, 0x58, 0x93, 0x30, 0xa0, 0xf8, 0x18, 0x96, 0x71, 0xbb,
	0xce, 0xcf, 0xa1, 0x9d, 0x0a, 0xd9, 0x0d, 0xa8, 0xe7, 0xa1, 0xb3, 0x4a, 0x86, 0x23, 0x7c, 0x02,
	0x0f, 0x4b, 0xf0, 0xed, 0xfd, 0xb5, 0x85, 0x56, 0xf2, 0xd7, 0x8e, 0xf2, 0x99, 0x42, 0xe1, 0x53,
	0x38, 0xbc, 0x7f, 0x78, 0x1d, 0x67, 0x37, 0x7f, 0x79, 0xe9, 0x2f, 0xc3, 0xd7, 0xab, 0xca, 0xa8,
	0xe1, 0x39, 0xf8, 0x37, 0xe6, 0xd1, 0xff, 0x02, 0x00, 0x00, 0xff, 0xff, 0x42, 0x33, 0x50, 0xb6,
	0xa8, 0x19, 0x00, 0x00,
}
