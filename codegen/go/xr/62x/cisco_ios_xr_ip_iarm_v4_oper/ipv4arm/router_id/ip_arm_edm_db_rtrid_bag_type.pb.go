/*
Copyright 2019 Cisco Systems

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: ip_arm_edm_db_rtrid_bag_type.proto

package cisco_ios_xr_ip_iarm_v4_oper_ipv4arm_router_id

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type IpArmEdmDbRtridBagType_KEYS struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IpArmEdmDbRtridBagType_KEYS) Reset()         { *m = IpArmEdmDbRtridBagType_KEYS{} }
func (m *IpArmEdmDbRtridBagType_KEYS) String() string { return proto.CompactTextString(m) }
func (*IpArmEdmDbRtridBagType_KEYS) ProtoMessage()    {}
func (*IpArmEdmDbRtridBagType_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_6308b53547aecaee, []int{0}
}

func (m *IpArmEdmDbRtridBagType_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IpArmEdmDbRtridBagType_KEYS.Unmarshal(m, b)
}
func (m *IpArmEdmDbRtridBagType_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IpArmEdmDbRtridBagType_KEYS.Marshal(b, m, deterministic)
}
func (m *IpArmEdmDbRtridBagType_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IpArmEdmDbRtridBagType_KEYS.Merge(m, src)
}
func (m *IpArmEdmDbRtridBagType_KEYS) XXX_Size() int {
	return xxx_messageInfo_IpArmEdmDbRtridBagType_KEYS.Size(m)
}
func (m *IpArmEdmDbRtridBagType_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_IpArmEdmDbRtridBagType_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_IpArmEdmDbRtridBagType_KEYS proto.InternalMessageInfo

type IpArmEdmDbRtridBagType struct {
	VrfId                uint32   `protobuf:"varint,50,opt,name=vrf_id,json=vrfId,proto3" json:"vrf_id,omitempty"`
	VrfName              string   `protobuf:"bytes,51,opt,name=vrf_name,json=vrfName,proto3" json:"vrf_name,omitempty"`
	InterfaceName        string   `protobuf:"bytes,52,opt,name=interface_name,json=interfaceName,proto3" json:"interface_name,omitempty"`
	RouterId             string   `protobuf:"bytes,53,opt,name=router_id,json=routerId,proto3" json:"router_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IpArmEdmDbRtridBagType) Reset()         { *m = IpArmEdmDbRtridBagType{} }
func (m *IpArmEdmDbRtridBagType) String() string { return proto.CompactTextString(m) }
func (*IpArmEdmDbRtridBagType) ProtoMessage()    {}
func (*IpArmEdmDbRtridBagType) Descriptor() ([]byte, []int) {
	return fileDescriptor_6308b53547aecaee, []int{1}
}

func (m *IpArmEdmDbRtridBagType) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IpArmEdmDbRtridBagType.Unmarshal(m, b)
}
func (m *IpArmEdmDbRtridBagType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IpArmEdmDbRtridBagType.Marshal(b, m, deterministic)
}
func (m *IpArmEdmDbRtridBagType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IpArmEdmDbRtridBagType.Merge(m, src)
}
func (m *IpArmEdmDbRtridBagType) XXX_Size() int {
	return xxx_messageInfo_IpArmEdmDbRtridBagType.Size(m)
}
func (m *IpArmEdmDbRtridBagType) XXX_DiscardUnknown() {
	xxx_messageInfo_IpArmEdmDbRtridBagType.DiscardUnknown(m)
}

var xxx_messageInfo_IpArmEdmDbRtridBagType proto.InternalMessageInfo

func (m *IpArmEdmDbRtridBagType) GetVrfId() uint32 {
	if m != nil {
		return m.VrfId
	}
	return 0
}

func (m *IpArmEdmDbRtridBagType) GetVrfName() string {
	if m != nil {
		return m.VrfName
	}
	return ""
}

func (m *IpArmEdmDbRtridBagType) GetInterfaceName() string {
	if m != nil {
		return m.InterfaceName
	}
	return ""
}

func (m *IpArmEdmDbRtridBagType) GetRouterId() string {
	if m != nil {
		return m.RouterId
	}
	return ""
}

func init() {
	proto.RegisterType((*IpArmEdmDbRtridBagType_KEYS)(nil), "cisco_ios_xr_ip_iarm_v4_oper.ipv4arm.router_id.ip_arm_edm_db_rtrid_bag_type_KEYS")
	proto.RegisterType((*IpArmEdmDbRtridBagType)(nil), "cisco_ios_xr_ip_iarm_v4_oper.ipv4arm.router_id.ip_arm_edm_db_rtrid_bag_type")
}

func init() { proto.RegisterFile("ip_arm_edm_db_rtrid_bag_type.proto", fileDescriptor_6308b53547aecaee) }

var fileDescriptor_6308b53547aecaee = []byte{
	// 209 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0xcf, 0x31, 0x4b, 0xc5, 0x30,
	0x10, 0xc0, 0x71, 0x3a, 0xf8, 0x7c, 0x2f, 0xf0, 0x1c, 0x02, 0x42, 0x45, 0x87, 0x67, 0x45, 0x78,
	0x53, 0x06, 0x5b, 0x3f, 0x82, 0x43, 0x11, 0x1c, 0xea, 0xe4, 0x74, 0xa4, 0xcd, 0x45, 0x6e, 0x48,
	0x13, 0xae, 0x31, 0xe8, 0xf7, 0xf0, 0x03, 0x3f, 0x9a, 0x42, 0xc7, 0xae, 0x7f, 0x7e, 0x77, 0xdc,
	0x89, 0x8a, 0x02, 0x68, 0x76, 0x80, 0xc6, 0x81, 0xe9, 0x81, 0x23, 0x93, 0x81, 0x5e, 0x7f, 0x43,
	0xfc, 0x0b, 0xa8, 0x02, 0xfb, 0xe8, 0xa5, 0x1a, 0x68, 0x1a, 0x3c, 0x90, 0x9f, 0xe0, 0x97, 0x81,
	0x02, 0xd0, 0x3c, 0x91, 0x1a, 0xf0, 0x01, 0x59, 0x51, 0x48, 0x8d, 0x66, 0xa7, 0xd8, 0xff, 0x44,
	0x64, 0x20, 0x53, 0x3d, 0x89, 0xc7, 0xad, 0xad, 0xf0, 0xfe, 0xf6, 0xf5, 0x59, 0xfd, 0x17, 0xe2,
	0x61, 0x4b, 0xc9, 0x5b, 0xb1, 0x4b, 0x6c, 0x81, 0x4c, 0xf9, 0x72, 0x2a, 0xce, 0xc7, 0xee, 0x2a,
	0xb1, 0x6d, 0x8d, 0xbc, 0x13, 0xfb, 0x39, 0x8f, 0xda, 0x61, 0x59, 0x9f, 0x8a, 0xf3, 0xa1, 0xbb,
	0x4e, 0x6c, 0x3f, 0xb4, 0x43, 0xf9, 0x2c, 0x6e, 0x68, 0x8c, 0xc8, 0x56, 0x0f, 0xb8, 0x80, 0x26,
	0x83, 0xe3, 0x5a, 0x33, 0xbb, 0x17, 0x87, 0xf5, 0xd6, 0xf2, 0x35, 0x8b, 0xfd, 0x12, 0x5a, 0xd3,
	0xef, 0xf2, 0xcb, 0xf5, 0x25, 0x00, 0x00, 0xff, 0xff, 0x5d, 0x22, 0xe2, 0x1d, 0x18, 0x01, 0x00,
	0x00,
}
