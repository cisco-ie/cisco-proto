/*
Copyright 2019 Cisco Systems

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: time_date.proto

package cisco_ios_xr_shellutil_oper_system_time_clock

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type TimeDate_KEYS struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TimeDate_KEYS) Reset()         { *m = TimeDate_KEYS{} }
func (m *TimeDate_KEYS) String() string { return proto.CompactTextString(m) }
func (*TimeDate_KEYS) ProtoMessage()    {}
func (*TimeDate_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_5ee1333175fb93a4, []int{0}
}

func (m *TimeDate_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TimeDate_KEYS.Unmarshal(m, b)
}
func (m *TimeDate_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TimeDate_KEYS.Marshal(b, m, deterministic)
}
func (m *TimeDate_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TimeDate_KEYS.Merge(m, src)
}
func (m *TimeDate_KEYS) XXX_Size() int {
	return xxx_messageInfo_TimeDate_KEYS.Size(m)
}
func (m *TimeDate_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_TimeDate_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_TimeDate_KEYS proto.InternalMessageInfo

type TimeDate struct {
	Year                 uint32   `protobuf:"varint,50,opt,name=year,proto3" json:"year,omitempty"`
	Month                uint32   `protobuf:"varint,51,opt,name=month,proto3" json:"month,omitempty"`
	Day                  uint32   `protobuf:"varint,52,opt,name=day,proto3" json:"day,omitempty"`
	Hour                 uint32   `protobuf:"varint,53,opt,name=hour,proto3" json:"hour,omitempty"`
	Minute               uint32   `protobuf:"varint,54,opt,name=minute,proto3" json:"minute,omitempty"`
	Second               uint32   `protobuf:"varint,55,opt,name=second,proto3" json:"second,omitempty"`
	Millisecond          uint32   `protobuf:"varint,56,opt,name=millisecond,proto3" json:"millisecond,omitempty"`
	Wday                 uint32   `protobuf:"varint,57,opt,name=wday,proto3" json:"wday,omitempty"`
	TimeZone             string   `protobuf:"bytes,58,opt,name=time_zone,json=timeZone,proto3" json:"time_zone,omitempty"`
	TimeSource           string   `protobuf:"bytes,59,opt,name=time_source,json=timeSource,proto3" json:"time_source,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TimeDate) Reset()         { *m = TimeDate{} }
func (m *TimeDate) String() string { return proto.CompactTextString(m) }
func (*TimeDate) ProtoMessage()    {}
func (*TimeDate) Descriptor() ([]byte, []int) {
	return fileDescriptor_5ee1333175fb93a4, []int{1}
}

func (m *TimeDate) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TimeDate.Unmarshal(m, b)
}
func (m *TimeDate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TimeDate.Marshal(b, m, deterministic)
}
func (m *TimeDate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TimeDate.Merge(m, src)
}
func (m *TimeDate) XXX_Size() int {
	return xxx_messageInfo_TimeDate.Size(m)
}
func (m *TimeDate) XXX_DiscardUnknown() {
	xxx_messageInfo_TimeDate.DiscardUnknown(m)
}

var xxx_messageInfo_TimeDate proto.InternalMessageInfo

func (m *TimeDate) GetYear() uint32 {
	if m != nil {
		return m.Year
	}
	return 0
}

func (m *TimeDate) GetMonth() uint32 {
	if m != nil {
		return m.Month
	}
	return 0
}

func (m *TimeDate) GetDay() uint32 {
	if m != nil {
		return m.Day
	}
	return 0
}

func (m *TimeDate) GetHour() uint32 {
	if m != nil {
		return m.Hour
	}
	return 0
}

func (m *TimeDate) GetMinute() uint32 {
	if m != nil {
		return m.Minute
	}
	return 0
}

func (m *TimeDate) GetSecond() uint32 {
	if m != nil {
		return m.Second
	}
	return 0
}

func (m *TimeDate) GetMillisecond() uint32 {
	if m != nil {
		return m.Millisecond
	}
	return 0
}

func (m *TimeDate) GetWday() uint32 {
	if m != nil {
		return m.Wday
	}
	return 0
}

func (m *TimeDate) GetTimeZone() string {
	if m != nil {
		return m.TimeZone
	}
	return ""
}

func (m *TimeDate) GetTimeSource() string {
	if m != nil {
		return m.TimeSource
	}
	return ""
}

func init() {
	proto.RegisterType((*TimeDate_KEYS)(nil), "cisco_ios_xr_shellutil_oper.system_time.clock.time_date_KEYS")
	proto.RegisterType((*TimeDate)(nil), "cisco_ios_xr_shellutil_oper.system_time.clock.time_date")
}

func init() { proto.RegisterFile("time_date.proto", fileDescriptor_5ee1333175fb93a4) }

var fileDescriptor_5ee1333175fb93a4 = []byte{
	// 249 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x4c, 0x90, 0x4f, 0x4b, 0x03, 0x31,
	0x10, 0xc5, 0x59, 0xd4, 0x62, 0xa7, 0xa8, 0x25, 0x88, 0x04, 0x3c, 0xb8, 0xf4, 0xd4, 0x8b, 0x7b,
	0xb0, 0xfe, 0xf7, 0xec, 0xc9, 0x5b, 0x7b, 0xd2, 0x4b, 0x58, 0xb3, 0x03, 0x1b, 0xcc, 0x66, 0x4a,
	0x92, 0x45, 0xd7, 0x2f, 0xaf, 0x4c, 0xb2, 0x94, 0xde, 0xde, 0xfb, 0x3d, 0x5e, 0x1e, 0x19, 0x38,
	0x8b, 0xa6, 0x43, 0xd5, 0xd4, 0x11, 0xab, 0xad, 0xa7, 0x48, 0xe2, 0x5a, 0x9b, 0xa0, 0x49, 0x19,
	0x0a, 0xea, 0xc7, 0xab, 0xd0, 0xa2, 0xb5, 0x7d, 0x34, 0x56, 0xd1, 0x16, 0x7d, 0x15, 0x86, 0x10,
	0xb1, 0x53, 0xdc, 0xa9, 0xb4, 0x25, 0xfd, 0xb5, 0x98, 0xc3, 0xe9, 0xee, 0x05, 0xf5, 0xf6, 0xfa,
	0xbe, 0x59, 0xfc, 0x15, 0x30, 0xdd, 0x21, 0x21, 0xe0, 0x70, 0xc0, 0xda, 0xcb, 0x9b, 0xb2, 0x58,
	0x9e, 0xac, 0x93, 0x16, 0xe7, 0x70, 0xd4, 0x91, 0x8b, 0xad, 0x5c, 0x25, 0x98, 0x8d, 0x98, 0xc3,
	0x41, 0x53, 0x0f, 0xf2, 0x36, 0x31, 0x96, 0xdc, 0x6d, 0xa9, 0xf7, 0xf2, 0x2e, 0x77, 0x59, 0x8b,
	0x0b, 0x98, 0x74, 0xc6, 0xf5, 0x11, 0xe5, 0x7d, 0xa2, 0xa3, 0x63, 0x1e, 0x50, 0x93, 0x6b, 0xe4,
	0x43, 0xe6, 0xd9, 0x89, 0x12, 0x66, 0x9d, 0xb1, 0xd6, 0x8c, 0xe1, 0x63, 0x0a, 0xf7, 0x11, 0xaf,
	0x7c, 0xf3, 0xf0, 0x53, 0x5e, 0x61, 0x2d, 0x2e, 0xc7, 0x2f, 0xfc, 0x92, 0x43, 0xf9, 0x5c, 0x16,
	0xcb, 0xe9, 0xfa, 0x98, 0xc1, 0x07, 0x39, 0x14, 0x57, 0x30, 0x4b, 0x61, 0xa0, 0xde, 0x6b, 0x94,
	0x2f, 0x29, 0x06, 0x46, 0x9b, 0x44, 0x3e, 0x27, 0xe9, 0x92, 0xab, 0xff, 0x00, 0x00, 0x00, 0xff,
	0xff, 0x36, 0x29, 0x4e, 0x1c, 0x5c, 0x01, 0x00, 0x00,
}
