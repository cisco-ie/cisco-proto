/*
Copyright 2019 Cisco Systems

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: arp_reshist.proto

package cisco_ios_xr_ipv4_arp_oper_arp_nodes_node_resolution_history_client

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ArpReshist_KEYS struct {
	NodeName             string   `protobuf:"bytes,1,opt,name=node_name,json=nodeName,proto3" json:"node_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ArpReshist_KEYS) Reset()         { *m = ArpReshist_KEYS{} }
func (m *ArpReshist_KEYS) String() string { return proto.CompactTextString(m) }
func (*ArpReshist_KEYS) ProtoMessage()    {}
func (*ArpReshist_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_957bd29664843221, []int{0}
}

func (m *ArpReshist_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ArpReshist_KEYS.Unmarshal(m, b)
}
func (m *ArpReshist_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ArpReshist_KEYS.Marshal(b, m, deterministic)
}
func (m *ArpReshist_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ArpReshist_KEYS.Merge(m, src)
}
func (m *ArpReshist_KEYS) XXX_Size() int {
	return xxx_messageInfo_ArpReshist_KEYS.Size(m)
}
func (m *ArpReshist_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_ArpReshist_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_ArpReshist_KEYS proto.InternalMessageInfo

func (m *ArpReshist_KEYS) GetNodeName() string {
	if m != nil {
		return m.NodeName
	}
	return ""
}

type ArpReshistEntry struct {
	NsecTimestamp          uint64   `protobuf:"varint,1,opt,name=nsec_timestamp,json=nsecTimestamp,proto3" json:"nsec_timestamp,omitempty"`
	IdbInterfaceName       string   `protobuf:"bytes,2,opt,name=idb_interface_name,json=idbInterfaceName,proto3" json:"idb_interface_name,omitempty"`
	Ipv4Address            string   `protobuf:"bytes,3,opt,name=ipv4_address,json=ipv4Address,proto3" json:"ipv4_address,omitempty"`
	MacAddress             string   `protobuf:"bytes,4,opt,name=mac_address,json=macAddress,proto3" json:"mac_address,omitempty"`
	Status                 string   `protobuf:"bytes,5,opt,name=status,proto3" json:"status,omitempty"`
	ClientId               int32    `protobuf:"zigzag32,6,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	EntryState             int32    `protobuf:"zigzag32,7,opt,name=entry_state,json=entryState,proto3" json:"entry_state,omitempty"`
	ResolutionRequestCount uint32   `protobuf:"varint,8,opt,name=resolution_request_count,json=resolutionRequestCount,proto3" json:"resolution_request_count,omitempty"`
	XXX_NoUnkeyedLiteral   struct{} `json:"-"`
	XXX_unrecognized       []byte   `json:"-"`
	XXX_sizecache          int32    `json:"-"`
}

func (m *ArpReshistEntry) Reset()         { *m = ArpReshistEntry{} }
func (m *ArpReshistEntry) String() string { return proto.CompactTextString(m) }
func (*ArpReshistEntry) ProtoMessage()    {}
func (*ArpReshistEntry) Descriptor() ([]byte, []int) {
	return fileDescriptor_957bd29664843221, []int{1}
}

func (m *ArpReshistEntry) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ArpReshistEntry.Unmarshal(m, b)
}
func (m *ArpReshistEntry) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ArpReshistEntry.Marshal(b, m, deterministic)
}
func (m *ArpReshistEntry) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ArpReshistEntry.Merge(m, src)
}
func (m *ArpReshistEntry) XXX_Size() int {
	return xxx_messageInfo_ArpReshistEntry.Size(m)
}
func (m *ArpReshistEntry) XXX_DiscardUnknown() {
	xxx_messageInfo_ArpReshistEntry.DiscardUnknown(m)
}

var xxx_messageInfo_ArpReshistEntry proto.InternalMessageInfo

func (m *ArpReshistEntry) GetNsecTimestamp() uint64 {
	if m != nil {
		return m.NsecTimestamp
	}
	return 0
}

func (m *ArpReshistEntry) GetIdbInterfaceName() string {
	if m != nil {
		return m.IdbInterfaceName
	}
	return ""
}

func (m *ArpReshistEntry) GetIpv4Address() string {
	if m != nil {
		return m.Ipv4Address
	}
	return ""
}

func (m *ArpReshistEntry) GetMacAddress() string {
	if m != nil {
		return m.MacAddress
	}
	return ""
}

func (m *ArpReshistEntry) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *ArpReshistEntry) GetClientId() int32 {
	if m != nil {
		return m.ClientId
	}
	return 0
}

func (m *ArpReshistEntry) GetEntryState() int32 {
	if m != nil {
		return m.EntryState
	}
	return 0
}

func (m *ArpReshistEntry) GetResolutionRequestCount() uint32 {
	if m != nil {
		return m.ResolutionRequestCount
	}
	return 0
}

type ArpReshist struct {
	ArpEntry             []*ArpReshistEntry `protobuf:"bytes,50,rep,name=arp_entry,json=arpEntry,proto3" json:"arp_entry,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *ArpReshist) Reset()         { *m = ArpReshist{} }
func (m *ArpReshist) String() string { return proto.CompactTextString(m) }
func (*ArpReshist) ProtoMessage()    {}
func (*ArpReshist) Descriptor() ([]byte, []int) {
	return fileDescriptor_957bd29664843221, []int{2}
}

func (m *ArpReshist) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ArpReshist.Unmarshal(m, b)
}
func (m *ArpReshist) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ArpReshist.Marshal(b, m, deterministic)
}
func (m *ArpReshist) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ArpReshist.Merge(m, src)
}
func (m *ArpReshist) XXX_Size() int {
	return xxx_messageInfo_ArpReshist.Size(m)
}
func (m *ArpReshist) XXX_DiscardUnknown() {
	xxx_messageInfo_ArpReshist.DiscardUnknown(m)
}

var xxx_messageInfo_ArpReshist proto.InternalMessageInfo

func (m *ArpReshist) GetArpEntry() []*ArpReshistEntry {
	if m != nil {
		return m.ArpEntry
	}
	return nil
}

func init() {
	proto.RegisterType((*ArpReshist_KEYS)(nil), "cisco_ios_xr_ipv4_arp_oper.arp.nodes.node.resolution_history_client.arp_reshist_KEYS")
	proto.RegisterType((*ArpReshistEntry)(nil), "cisco_ios_xr_ipv4_arp_oper.arp.nodes.node.resolution_history_client.arp_reshist_entry")
	proto.RegisterType((*ArpReshist)(nil), "cisco_ios_xr_ipv4_arp_oper.arp.nodes.node.resolution_history_client.arp_reshist")
}

func init() { proto.RegisterFile("arp_reshist.proto", fileDescriptor_957bd29664843221) }

var fileDescriptor_957bd29664843221 = []byte{
	// 355 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x92, 0xc1, 0x4b, 0xeb, 0x40,
	0x10, 0xc6, 0x49, 0xdb, 0xd7, 0x97, 0x6e, 0x5e, 0x1f, 0xed, 0x1e, 0xca, 0x82, 0x07, 0x63, 0x41,
	0xc8, 0x41, 0x22, 0x54, 0x0f, 0x5e, 0xa5, 0xf4, 0x50, 0x04, 0x0f, 0xa9, 0x08, 0x9e, 0x86, 0xed,
	0x66, 0xc4, 0x85, 0x66, 0x37, 0xee, 0x6e, 0xc4, 0x5e, 0xfd, 0xbb, 0xfc, 0xe3, 0x64, 0x37, 0xad,
	0x56, 0xbc, 0x7a, 0x09, 0xd9, 0xdf, 0xf7, 0xed, 0x37, 0x99, 0x99, 0x90, 0x31, 0x37, 0x35, 0x18,
	0xb4, 0x4f, 0xd2, 0xba, 0xbc, 0x36, 0xda, 0x69, 0x3a, 0x17, 0xd2, 0x0a, 0x0d, 0x52, 0x5b, 0x78,
	0x35, 0x20, 0xeb, 0x97, 0x4b, 0xf0, 0x26, 0x5d, 0xa3, 0xc9, 0xb9, 0xa9, 0x73, 0xa5, 0x4b, 0xb4,
	0xe1, 0x99, 0x1b, 0xb4, 0x7a, 0xd3, 0x38, 0xa9, 0x15, 0xf8, 0x00, 0x6d, 0xb6, 0x20, 0x36, 0x12,
	0x95, 0x9b, 0x9e, 0x93, 0xd1, 0x41, 0x32, 0xdc, 0x2c, 0x1e, 0x56, 0xf4, 0x88, 0x0c, 0xfc, 0x2d,
	0x50, 0xbc, 0x42, 0x16, 0xa5, 0x51, 0x36, 0x28, 0x62, 0x0f, 0x6e, 0x79, 0x85, 0xd3, 0xf7, 0xce,
	0xb7, 0x6f, 0x01, 0x54, 0xce, 0x6c, 0xe9, 0x29, 0xf9, 0xaf, 0x2c, 0x0a, 0x70, 0xb2, 0x42, 0xeb,
	0x78, 0x55, 0x87, 0x7b, 0xbd, 0x62, 0xe8, 0xe9, 0xdd, 0x1e, 0xd2, 0x33, 0x42, 0x65, 0xb9, 0x06,
	0xa9, 0x1c, 0x9a, 0x47, 0x2e, 0x76, 0x25, 0x3a, 0xa1, 0xc4, 0x48, 0x96, 0xeb, 0xe5, 0x5e, 0xf0,
	0xa5, 0xe8, 0x09, 0xf9, 0xd7, 0x76, 0x55, 0x96, 0x06, 0xad, 0x65, 0xdd, 0xe0, 0x4b, 0x3c, 0xbb,
	0x6e, 0x11, 0x3d, 0x26, 0x49, 0xc5, 0xc5, 0xa7, 0xa3, 0x17, 0x1c, 0xa4, 0xe2, 0x62, 0x6f, 0x98,
	0x90, 0xbe, 0x75, 0xdc, 0x35, 0x96, 0xfd, 0x09, 0xda, 0xee, 0xe4, 0x7b, 0x6c, 0x27, 0x00, 0xb2,
	0x64, 0xfd, 0x34, 0xca, 0xc6, 0x45, 0xdc, 0x82, 0x65, 0xe9, 0x53, 0x43, 0x5b, 0xe0, 0xcd, 0xc8,
	0xfe, 0x06, 0x99, 0x04, 0xb4, 0xf2, 0x84, 0x5e, 0x11, 0x76, 0x30, 0x52, 0x83, 0xcf, 0x0d, 0x5a,
	0x07, 0x42, 0x37, 0xca, 0xb1, 0x38, 0x8d, 0xb2, 0x61, 0x31, 0xf9, 0xd2, 0x8b, 0x56, 0x9e, 0x7b,
	0x75, 0xfa, 0x16, 0x91, 0xe4, 0x60, 0x7c, 0xd4, 0x92, 0x81, 0x3f, 0x86, 0x6c, 0x36, 0x4b, 0xbb,
	0x59, 0x32, 0xbb, 0xcf, 0x7f, 0x61, 0xb1, 0xf9, 0x8f, 0x1d, 0x15, 0x31, 0x37, 0xf5, 0xc2, 0xbf,
	0xad, 0xfb, 0xe1, 0x07, 0xba, 0xf8, 0x08, 0x00, 0x00, 0xff, 0xff, 0xc0, 0x08, 0x4a, 0xb2, 0x55,
	0x02, 0x00, 0x00,
}
