/*
Copyright 2019 Cisco Systems

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: mdt_subscription_details.proto

package cisco_ios_xr_telemetry_model_driven_oper_telemetry_model_driven_subscriptions_subscription

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type MdtSubscriptionDetails_KEYS struct {
	SubscriptionId       string   `protobuf:"bytes,1,opt,name=subscription_id,json=subscriptionId,proto3" json:"subscription_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MdtSubscriptionDetails_KEYS) Reset()         { *m = MdtSubscriptionDetails_KEYS{} }
func (m *MdtSubscriptionDetails_KEYS) String() string { return proto.CompactTextString(m) }
func (*MdtSubscriptionDetails_KEYS) ProtoMessage()    {}
func (*MdtSubscriptionDetails_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_27dd82830226cd40, []int{0}
}

func (m *MdtSubscriptionDetails_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MdtSubscriptionDetails_KEYS.Unmarshal(m, b)
}
func (m *MdtSubscriptionDetails_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MdtSubscriptionDetails_KEYS.Marshal(b, m, deterministic)
}
func (m *MdtSubscriptionDetails_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MdtSubscriptionDetails_KEYS.Merge(m, src)
}
func (m *MdtSubscriptionDetails_KEYS) XXX_Size() int {
	return xxx_messageInfo_MdtSubscriptionDetails_KEYS.Size(m)
}
func (m *MdtSubscriptionDetails_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_MdtSubscriptionDetails_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_MdtSubscriptionDetails_KEYS proto.InternalMessageInfo

func (m *MdtSubscriptionDetails_KEYS) GetSubscriptionId() string {
	if m != nil {
		return m.SubscriptionId
	}
	return ""
}

type MdtSourceInterface struct {
	InterfaceName        string   `protobuf:"bytes,1,opt,name=interface_name,json=interfaceName,proto3" json:"interface_name,omitempty"`
	State                bool     `protobuf:"varint,2,opt,name=state,proto3" json:"state,omitempty"`
	Ipv4Address          string   `protobuf:"bytes,3,opt,name=ipv4_address,json=ipv4Address,proto3" json:"ipv4_address,omitempty"`
	Ipv6Address          string   `protobuf:"bytes,4,opt,name=ipv6_address,json=ipv6Address,proto3" json:"ipv6_address,omitempty"`
	VrfId                uint32   `protobuf:"varint,5,opt,name=vrf_id,json=vrfId,proto3" json:"vrf_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MdtSourceInterface) Reset()         { *m = MdtSourceInterface{} }
func (m *MdtSourceInterface) String() string { return proto.CompactTextString(m) }
func (*MdtSourceInterface) ProtoMessage()    {}
func (*MdtSourceInterface) Descriptor() ([]byte, []int) {
	return fileDescriptor_27dd82830226cd40, []int{1}
}

func (m *MdtSourceInterface) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MdtSourceInterface.Unmarshal(m, b)
}
func (m *MdtSourceInterface) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MdtSourceInterface.Marshal(b, m, deterministic)
}
func (m *MdtSourceInterface) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MdtSourceInterface.Merge(m, src)
}
func (m *MdtSourceInterface) XXX_Size() int {
	return xxx_messageInfo_MdtSourceInterface.Size(m)
}
func (m *MdtSourceInterface) XXX_DiscardUnknown() {
	xxx_messageInfo_MdtSourceInterface.DiscardUnknown(m)
}

var xxx_messageInfo_MdtSourceInterface proto.InternalMessageInfo

func (m *MdtSourceInterface) GetInterfaceName() string {
	if m != nil {
		return m.InterfaceName
	}
	return ""
}

func (m *MdtSourceInterface) GetState() bool {
	if m != nil {
		return m.State
	}
	return false
}

func (m *MdtSourceInterface) GetIpv4Address() string {
	if m != nil {
		return m.Ipv4Address
	}
	return ""
}

func (m *MdtSourceInterface) GetIpv6Address() string {
	if m != nil {
		return m.Ipv6Address
	}
	return ""
}

func (m *MdtSourceInterface) GetVrfId() uint32 {
	if m != nil {
		return m.VrfId
	}
	return 0
}

type MdtSensorPaths struct {
	Path                 string   `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	State                bool     `protobuf:"varint,2,opt,name=state,proto3" json:"state,omitempty"`
	StatusStr            string   `protobuf:"bytes,3,opt,name=status_str,json=statusStr,proto3" json:"status_str,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MdtSensorPaths) Reset()         { *m = MdtSensorPaths{} }
func (m *MdtSensorPaths) String() string { return proto.CompactTextString(m) }
func (*MdtSensorPaths) ProtoMessage()    {}
func (*MdtSensorPaths) Descriptor() ([]byte, []int) {
	return fileDescriptor_27dd82830226cd40, []int{2}
}

func (m *MdtSensorPaths) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MdtSensorPaths.Unmarshal(m, b)
}
func (m *MdtSensorPaths) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MdtSensorPaths.Marshal(b, m, deterministic)
}
func (m *MdtSensorPaths) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MdtSensorPaths.Merge(m, src)
}
func (m *MdtSensorPaths) XXX_Size() int {
	return xxx_messageInfo_MdtSensorPaths.Size(m)
}
func (m *MdtSensorPaths) XXX_DiscardUnknown() {
	xxx_messageInfo_MdtSensorPaths.DiscardUnknown(m)
}

var xxx_messageInfo_MdtSensorPaths proto.InternalMessageInfo

func (m *MdtSensorPaths) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func (m *MdtSensorPaths) GetState() bool {
	if m != nil {
		return m.State
	}
	return false
}

func (m *MdtSensorPaths) GetStatusStr() string {
	if m != nil {
		return m.StatusStr
	}
	return ""
}

type MdtSensorGroup struct {
	Id                   string            `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Configured           uint32            `protobuf:"varint,2,opt,name=configured,proto3" json:"configured,omitempty"`
	SensorPath           []*MdtSensorPaths `protobuf:"bytes,3,rep,name=sensor_path,json=sensorPath,proto3" json:"sensor_path,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *MdtSensorGroup) Reset()         { *m = MdtSensorGroup{} }
func (m *MdtSensorGroup) String() string { return proto.CompactTextString(m) }
func (*MdtSensorGroup) ProtoMessage()    {}
func (*MdtSensorGroup) Descriptor() ([]byte, []int) {
	return fileDescriptor_27dd82830226cd40, []int{3}
}

func (m *MdtSensorGroup) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MdtSensorGroup.Unmarshal(m, b)
}
func (m *MdtSensorGroup) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MdtSensorGroup.Marshal(b, m, deterministic)
}
func (m *MdtSensorGroup) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MdtSensorGroup.Merge(m, src)
}
func (m *MdtSensorGroup) XXX_Size() int {
	return xxx_messageInfo_MdtSensorGroup.Size(m)
}
func (m *MdtSensorGroup) XXX_DiscardUnknown() {
	xxx_messageInfo_MdtSensorGroup.DiscardUnknown(m)
}

var xxx_messageInfo_MdtSensorGroup proto.InternalMessageInfo

func (m *MdtSensorGroup) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *MdtSensorGroup) GetConfigured() uint32 {
	if m != nil {
		return m.Configured
	}
	return 0
}

func (m *MdtSensorGroup) GetSensorPath() []*MdtSensorPaths {
	if m != nil {
		return m.SensorPath
	}
	return nil
}

type MdtSensorProfile struct {
	SensorGroup          *MdtSensorGroup `protobuf:"bytes,1,opt,name=sensor_group,json=sensorGroup,proto3" json:"sensor_group,omitempty"`
	SampleInterval       uint32          `protobuf:"varint,2,opt,name=sample_interval,json=sampleInterval,proto3" json:"sample_interval,omitempty"`
	HeartbeatInterval    uint32          `protobuf:"varint,3,opt,name=heartbeat_interval,json=heartbeatInterval,proto3" json:"heartbeat_interval,omitempty"`
	SuppressRedundant    bool            `protobuf:"varint,4,opt,name=suppress_redundant,json=suppressRedundant,proto3" json:"suppress_redundant,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *MdtSensorProfile) Reset()         { *m = MdtSensorProfile{} }
func (m *MdtSensorProfile) String() string { return proto.CompactTextString(m) }
func (*MdtSensorProfile) ProtoMessage()    {}
func (*MdtSensorProfile) Descriptor() ([]byte, []int) {
	return fileDescriptor_27dd82830226cd40, []int{4}
}

func (m *MdtSensorProfile) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MdtSensorProfile.Unmarshal(m, b)
}
func (m *MdtSensorProfile) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MdtSensorProfile.Marshal(b, m, deterministic)
}
func (m *MdtSensorProfile) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MdtSensorProfile.Merge(m, src)
}
func (m *MdtSensorProfile) XXX_Size() int {
	return xxx_messageInfo_MdtSensorProfile.Size(m)
}
func (m *MdtSensorProfile) XXX_DiscardUnknown() {
	xxx_messageInfo_MdtSensorProfile.DiscardUnknown(m)
}

var xxx_messageInfo_MdtSensorProfile proto.InternalMessageInfo

func (m *MdtSensorProfile) GetSensorGroup() *MdtSensorGroup {
	if m != nil {
		return m.SensorGroup
	}
	return nil
}

func (m *MdtSensorProfile) GetSampleInterval() uint32 {
	if m != nil {
		return m.SampleInterval
	}
	return 0
}

func (m *MdtSensorProfile) GetHeartbeatInterval() uint32 {
	if m != nil {
		return m.HeartbeatInterval
	}
	return 0
}

func (m *MdtSensorProfile) GetSuppressRedundant() bool {
	if m != nil {
		return m.SuppressRedundant
	}
	return false
}

type MdtDestinationIPAddress struct {
	IpType               string   `protobuf:"bytes,1,opt,name=ip_type,json=ipType,proto3" json:"ip_type,omitempty"`
	Ipv4Address          string   `protobuf:"bytes,2,opt,name=ipv4_address,json=ipv4Address,proto3" json:"ipv4_address,omitempty"`
	Ipv6Address          string   `protobuf:"bytes,3,opt,name=ipv6_address,json=ipv6Address,proto3" json:"ipv6_address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MdtDestinationIPAddress) Reset()         { *m = MdtDestinationIPAddress{} }
func (m *MdtDestinationIPAddress) String() string { return proto.CompactTextString(m) }
func (*MdtDestinationIPAddress) ProtoMessage()    {}
func (*MdtDestinationIPAddress) Descriptor() ([]byte, []int) {
	return fileDescriptor_27dd82830226cd40, []int{5}
}

func (m *MdtDestinationIPAddress) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MdtDestinationIPAddress.Unmarshal(m, b)
}
func (m *MdtDestinationIPAddress) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MdtDestinationIPAddress.Marshal(b, m, deterministic)
}
func (m *MdtDestinationIPAddress) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MdtDestinationIPAddress.Merge(m, src)
}
func (m *MdtDestinationIPAddress) XXX_Size() int {
	return xxx_messageInfo_MdtDestinationIPAddress.Size(m)
}
func (m *MdtDestinationIPAddress) XXX_DiscardUnknown() {
	xxx_messageInfo_MdtDestinationIPAddress.DiscardUnknown(m)
}

var xxx_messageInfo_MdtDestinationIPAddress proto.InternalMessageInfo

func (m *MdtDestinationIPAddress) GetIpType() string {
	if m != nil {
		return m.IpType
	}
	return ""
}

func (m *MdtDestinationIPAddress) GetIpv4Address() string {
	if m != nil {
		return m.Ipv4Address
	}
	return ""
}

func (m *MdtDestinationIPAddress) GetIpv6Address() string {
	if m != nil {
		return m.Ipv6Address
	}
	return ""
}

type MdtDestination struct {
	Id                    string                   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	SubIdStr              string                   `protobuf:"bytes,2,opt,name=sub_id_str,json=subIdStr,proto3" json:"sub_id_str,omitempty"`
	SubId                 []uint64                 `protobuf:"varint,3,rep,packed,name=sub_id,json=subId,proto3" json:"sub_id,omitempty"`
	DestIpAddress         *MdtDestinationIPAddress `protobuf:"bytes,4,opt,name=dest_ip_address,json=destIpAddress,proto3" json:"dest_ip_address,omitempty"`
	DestPort              uint32                   `protobuf:"varint,5,opt,name=dest_port,json=destPort,proto3" json:"dest_port,omitempty"`
	Encoding              string                   `protobuf:"bytes,6,opt,name=encoding,proto3" json:"encoding,omitempty"`
	Transport             string                   `protobuf:"bytes,7,opt,name=transport,proto3" json:"transport,omitempty"`
	Vrf                   string                   `protobuf:"bytes,8,opt,name=vrf,proto3" json:"vrf,omitempty"`
	VrfId                 uint32                   `protobuf:"varint,9,opt,name=vrf_id,json=vrfId,proto3" json:"vrf_id,omitempty"`
	State                 string                   `protobuf:"bytes,10,opt,name=state,proto3" json:"state,omitempty"`
	UdpMtu                uint32                   `protobuf:"varint,11,opt,name=udp_mtu,json=udpMtu,proto3" json:"udp_mtu,omitempty"`
	Dscp                  uint32                   `protobuf:"varint,12,opt,name=dscp,proto3" json:"dscp,omitempty"`
	Tls                   uint32                   `protobuf:"varint,13,opt,name=tls,proto3" json:"tls,omitempty"`
	TlsHost               string                   `protobuf:"bytes,14,opt,name=tls_host,json=tlsHost,proto3" json:"tls_host,omitempty"`
	TotalNumOfPacketsSent uint64                   `protobuf:"varint,15,opt,name=total_num_of_packets_sent,json=totalNumOfPacketsSent,proto3" json:"total_num_of_packets_sent,omitempty"`
	TotalNumOfBytesSent   uint64                   `protobuf:"varint,16,opt,name=total_num_of_bytes_sent,json=totalNumOfBytesSent,proto3" json:"total_num_of_bytes_sent,omitempty"`
	LastCollectionTime    uint64                   `protobuf:"varint,17,opt,name=last_collection_time,json=lastCollectionTime,proto3" json:"last_collection_time,omitempty"`
	XXX_NoUnkeyedLiteral  struct{}                 `json:"-"`
	XXX_unrecognized      []byte                   `json:"-"`
	XXX_sizecache         int32                    `json:"-"`
}

func (m *MdtDestination) Reset()         { *m = MdtDestination{} }
func (m *MdtDestination) String() string { return proto.CompactTextString(m) }
func (*MdtDestination) ProtoMessage()    {}
func (*MdtDestination) Descriptor() ([]byte, []int) {
	return fileDescriptor_27dd82830226cd40, []int{6}
}

func (m *MdtDestination) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MdtDestination.Unmarshal(m, b)
}
func (m *MdtDestination) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MdtDestination.Marshal(b, m, deterministic)
}
func (m *MdtDestination) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MdtDestination.Merge(m, src)
}
func (m *MdtDestination) XXX_Size() int {
	return xxx_messageInfo_MdtDestination.Size(m)
}
func (m *MdtDestination) XXX_DiscardUnknown() {
	xxx_messageInfo_MdtDestination.DiscardUnknown(m)
}

var xxx_messageInfo_MdtDestination proto.InternalMessageInfo

func (m *MdtDestination) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *MdtDestination) GetSubIdStr() string {
	if m != nil {
		return m.SubIdStr
	}
	return ""
}

func (m *MdtDestination) GetSubId() []uint64 {
	if m != nil {
		return m.SubId
	}
	return nil
}

func (m *MdtDestination) GetDestIpAddress() *MdtDestinationIPAddress {
	if m != nil {
		return m.DestIpAddress
	}
	return nil
}

func (m *MdtDestination) GetDestPort() uint32 {
	if m != nil {
		return m.DestPort
	}
	return 0
}

func (m *MdtDestination) GetEncoding() string {
	if m != nil {
		return m.Encoding
	}
	return ""
}

func (m *MdtDestination) GetTransport() string {
	if m != nil {
		return m.Transport
	}
	return ""
}

func (m *MdtDestination) GetVrf() string {
	if m != nil {
		return m.Vrf
	}
	return ""
}

func (m *MdtDestination) GetVrfId() uint32 {
	if m != nil {
		return m.VrfId
	}
	return 0
}

func (m *MdtDestination) GetState() string {
	if m != nil {
		return m.State
	}
	return ""
}

func (m *MdtDestination) GetUdpMtu() uint32 {
	if m != nil {
		return m.UdpMtu
	}
	return 0
}

func (m *MdtDestination) GetDscp() uint32 {
	if m != nil {
		return m.Dscp
	}
	return 0
}

func (m *MdtDestination) GetTls() uint32 {
	if m != nil {
		return m.Tls
	}
	return 0
}

func (m *MdtDestination) GetTlsHost() string {
	if m != nil {
		return m.TlsHost
	}
	return ""
}

func (m *MdtDestination) GetTotalNumOfPacketsSent() uint64 {
	if m != nil {
		return m.TotalNumOfPacketsSent
	}
	return 0
}

func (m *MdtDestination) GetTotalNumOfBytesSent() uint64 {
	if m != nil {
		return m.TotalNumOfBytesSent
	}
	return 0
}

func (m *MdtDestination) GetLastCollectionTime() uint64 {
	if m != nil {
		return m.LastCollectionTime
	}
	return 0
}

type MdtDestinationGroup struct {
	Id                   string            `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Configured           uint32            `protobuf:"varint,2,opt,name=configured,proto3" json:"configured,omitempty"`
	Destination          []*MdtDestination `protobuf:"bytes,3,rep,name=destination,proto3" json:"destination,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *MdtDestinationGroup) Reset()         { *m = MdtDestinationGroup{} }
func (m *MdtDestinationGroup) String() string { return proto.CompactTextString(m) }
func (*MdtDestinationGroup) ProtoMessage()    {}
func (*MdtDestinationGroup) Descriptor() ([]byte, []int) {
	return fileDescriptor_27dd82830226cd40, []int{7}
}

func (m *MdtDestinationGroup) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MdtDestinationGroup.Unmarshal(m, b)
}
func (m *MdtDestinationGroup) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MdtDestinationGroup.Marshal(b, m, deterministic)
}
func (m *MdtDestinationGroup) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MdtDestinationGroup.Merge(m, src)
}
func (m *MdtDestinationGroup) XXX_Size() int {
	return xxx_messageInfo_MdtDestinationGroup.Size(m)
}
func (m *MdtDestinationGroup) XXX_DiscardUnknown() {
	xxx_messageInfo_MdtDestinationGroup.DiscardUnknown(m)
}

var xxx_messageInfo_MdtDestinationGroup proto.InternalMessageInfo

func (m *MdtDestinationGroup) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *MdtDestinationGroup) GetConfigured() uint32 {
	if m != nil {
		return m.Configured
	}
	return 0
}

func (m *MdtDestinationGroup) GetDestination() []*MdtDestination {
	if m != nil {
		return m.Destination
	}
	return nil
}

type MdtSubscription struct {
	Id                   string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	State                string                 `protobuf:"bytes,2,opt,name=state,proto3" json:"state,omitempty"`
	SourceInterface      *MdtSourceInterface    `protobuf:"bytes,3,opt,name=source_interface,json=sourceInterface,proto3" json:"source_interface,omitempty"`
	SensorProfile        []*MdtSensorProfile    `protobuf:"bytes,4,rep,name=sensor_profile,json=sensorProfile,proto3" json:"sensor_profile,omitempty"`
	DestinationGrp       []*MdtDestinationGroup `protobuf:"bytes,5,rep,name=destination_grp,json=destinationGrp,proto3" json:"destination_grp,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *MdtSubscription) Reset()         { *m = MdtSubscription{} }
func (m *MdtSubscription) String() string { return proto.CompactTextString(m) }
func (*MdtSubscription) ProtoMessage()    {}
func (*MdtSubscription) Descriptor() ([]byte, []int) {
	return fileDescriptor_27dd82830226cd40, []int{8}
}

func (m *MdtSubscription) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MdtSubscription.Unmarshal(m, b)
}
func (m *MdtSubscription) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MdtSubscription.Marshal(b, m, deterministic)
}
func (m *MdtSubscription) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MdtSubscription.Merge(m, src)
}
func (m *MdtSubscription) XXX_Size() int {
	return xxx_messageInfo_MdtSubscription.Size(m)
}
func (m *MdtSubscription) XXX_DiscardUnknown() {
	xxx_messageInfo_MdtSubscription.DiscardUnknown(m)
}

var xxx_messageInfo_MdtSubscription proto.InternalMessageInfo

func (m *MdtSubscription) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *MdtSubscription) GetState() string {
	if m != nil {
		return m.State
	}
	return ""
}

func (m *MdtSubscription) GetSourceInterface() *MdtSourceInterface {
	if m != nil {
		return m.SourceInterface
	}
	return nil
}

func (m *MdtSubscription) GetSensorProfile() []*MdtSensorProfile {
	if m != nil {
		return m.SensorProfile
	}
	return nil
}

func (m *MdtSubscription) GetDestinationGrp() []*MdtDestinationGroup {
	if m != nil {
		return m.DestinationGrp
	}
	return nil
}

type MdtCollectionSysdbGroup struct {
	Path                   string   `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	Cadence                uint64   `protobuf:"varint,2,opt,name=cadence,proto3" json:"cadence,omitempty"`
	TotalGetCount          uint64   `protobuf:"varint,3,opt,name=total_get_count,json=totalGetCount,proto3" json:"total_get_count,omitempty"`
	TotalListCount         uint64   `protobuf:"varint,4,opt,name=total_list_count,json=totalListCount,proto3" json:"total_list_count,omitempty"`
	TotalDatalistCount     uint64   `protobuf:"varint,5,opt,name=total_datalist_count,json=totalDatalistCount,proto3" json:"total_datalist_count,omitempty"`
	TotalFinddataCount     uint64   `protobuf:"varint,6,opt,name=total_finddata_count,json=totalFinddataCount,proto3" json:"total_finddata_count,omitempty"`
	TotalGetBulkCount      uint64   `protobuf:"varint,7,opt,name=total_get_bulk_count,json=totalGetBulkCount,proto3" json:"total_get_bulk_count,omitempty"`
	TotalItemCount         uint64   `protobuf:"varint,8,opt,name=total_item_count,json=totalItemCount,proto3" json:"total_item_count,omitempty"`
	TotalGetErrors         uint64   `protobuf:"varint,9,opt,name=total_get_errors,json=totalGetErrors,proto3" json:"total_get_errors,omitempty"`
	TotalListErrors        uint64   `protobuf:"varint,10,opt,name=total_list_errors,json=totalListErrors,proto3" json:"total_list_errors,omitempty"`
	TotalDatalistErrors    uint64   `protobuf:"varint,11,opt,name=total_datalist_errors,json=totalDatalistErrors,proto3" json:"total_datalist_errors,omitempty"`
	TotalFinddataErrors    uint64   `protobuf:"varint,12,opt,name=total_finddata_errors,json=totalFinddataErrors,proto3" json:"total_finddata_errors,omitempty"`
	TotalGetBulkErrors     uint64   `protobuf:"varint,13,opt,name=total_get_bulk_errors,json=totalGetBulkErrors,proto3" json:"total_get_bulk_errors,omitempty"`
	TotalEncodeErrors      uint64   `protobuf:"varint,14,opt,name=total_encode_errors,json=totalEncodeErrors,proto3" json:"total_encode_errors,omitempty"`
	TotalEncodeNotready    uint64   `protobuf:"varint,15,opt,name=total_encode_notready,json=totalEncodeNotready,proto3" json:"total_encode_notready,omitempty"`
	TotalSendErrors        uint64   `protobuf:"varint,16,opt,name=total_send_errors,json=totalSendErrors,proto3" json:"total_send_errors,omitempty"`
	TotalSendDrops         uint64   `protobuf:"varint,17,opt,name=total_send_drops,json=totalSendDrops,proto3" json:"total_send_drops,omitempty"`
	TotalSentBytes         uint64   `protobuf:"varint,18,opt,name=total_sent_bytes,json=totalSentBytes,proto3" json:"total_sent_bytes,omitempty"`
	TotalSendPackets       uint64   `protobuf:"varint,19,opt,name=total_send_packets,json=totalSendPackets,proto3" json:"total_send_packets,omitempty"`
	TotalSendBytesDropped  uint64   `protobuf:"varint,20,opt,name=total_send_bytes_dropped,json=totalSendBytesDropped,proto3" json:"total_send_bytes_dropped,omitempty"`
	TotalCollections       uint64   `protobuf:"varint,21,opt,name=total_collections,json=totalCollections,proto3" json:"total_collections,omitempty"`
	TotalCollectionsMissed uint64   `protobuf:"varint,22,opt,name=total_collections_missed,json=totalCollectionsMissed,proto3" json:"total_collections_missed,omitempty"`
	MaxCollectionTime      uint64   `protobuf:"varint,23,opt,name=max_collection_time,json=maxCollectionTime,proto3" json:"max_collection_time,omitempty"`
	MinCollectionTime      uint64   `protobuf:"varint,24,opt,name=min_collection_time,json=minCollectionTime,proto3" json:"min_collection_time,omitempty"`
	AvgCollectionTime      uint64   `protobuf:"varint,25,opt,name=avg_collection_time,json=avgCollectionTime,proto3" json:"avg_collection_time,omitempty"`
	CollectionMethod       uint64   `protobuf:"varint,26,opt,name=collection_method,json=collectionMethod,proto3" json:"collection_method,omitempty"`
	Status                 string   `protobuf:"bytes,27,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral   struct{} `json:"-"`
	XXX_unrecognized       []byte   `json:"-"`
	XXX_sizecache          int32    `json:"-"`
}

func (m *MdtCollectionSysdbGroup) Reset()         { *m = MdtCollectionSysdbGroup{} }
func (m *MdtCollectionSysdbGroup) String() string { return proto.CompactTextString(m) }
func (*MdtCollectionSysdbGroup) ProtoMessage()    {}
func (*MdtCollectionSysdbGroup) Descriptor() ([]byte, []int) {
	return fileDescriptor_27dd82830226cd40, []int{9}
}

func (m *MdtCollectionSysdbGroup) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MdtCollectionSysdbGroup.Unmarshal(m, b)
}
func (m *MdtCollectionSysdbGroup) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MdtCollectionSysdbGroup.Marshal(b, m, deterministic)
}
func (m *MdtCollectionSysdbGroup) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MdtCollectionSysdbGroup.Merge(m, src)
}
func (m *MdtCollectionSysdbGroup) XXX_Size() int {
	return xxx_messageInfo_MdtCollectionSysdbGroup.Size(m)
}
func (m *MdtCollectionSysdbGroup) XXX_DiscardUnknown() {
	xxx_messageInfo_MdtCollectionSysdbGroup.DiscardUnknown(m)
}

var xxx_messageInfo_MdtCollectionSysdbGroup proto.InternalMessageInfo

func (m *MdtCollectionSysdbGroup) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func (m *MdtCollectionSysdbGroup) GetCadence() uint64 {
	if m != nil {
		return m.Cadence
	}
	return 0
}

func (m *MdtCollectionSysdbGroup) GetTotalGetCount() uint64 {
	if m != nil {
		return m.TotalGetCount
	}
	return 0
}

func (m *MdtCollectionSysdbGroup) GetTotalListCount() uint64 {
	if m != nil {
		return m.TotalListCount
	}
	return 0
}

func (m *MdtCollectionSysdbGroup) GetTotalDatalistCount() uint64 {
	if m != nil {
		return m.TotalDatalistCount
	}
	return 0
}

func (m *MdtCollectionSysdbGroup) GetTotalFinddataCount() uint64 {
	if m != nil {
		return m.TotalFinddataCount
	}
	return 0
}

func (m *MdtCollectionSysdbGroup) GetTotalGetBulkCount() uint64 {
	if m != nil {
		return m.TotalGetBulkCount
	}
	return 0
}

func (m *MdtCollectionSysdbGroup) GetTotalItemCount() uint64 {
	if m != nil {
		return m.TotalItemCount
	}
	return 0
}

func (m *MdtCollectionSysdbGroup) GetTotalGetErrors() uint64 {
	if m != nil {
		return m.TotalGetErrors
	}
	return 0
}

func (m *MdtCollectionSysdbGroup) GetTotalListErrors() uint64 {
	if m != nil {
		return m.TotalListErrors
	}
	return 0
}

func (m *MdtCollectionSysdbGroup) GetTotalDatalistErrors() uint64 {
	if m != nil {
		return m.TotalDatalistErrors
	}
	return 0
}

func (m *MdtCollectionSysdbGroup) GetTotalFinddataErrors() uint64 {
	if m != nil {
		return m.TotalFinddataErrors
	}
	return 0
}

func (m *MdtCollectionSysdbGroup) GetTotalGetBulkErrors() uint64 {
	if m != nil {
		return m.TotalGetBulkErrors
	}
	return 0
}

func (m *MdtCollectionSysdbGroup) GetTotalEncodeErrors() uint64 {
	if m != nil {
		return m.TotalEncodeErrors
	}
	return 0
}

func (m *MdtCollectionSysdbGroup) GetTotalEncodeNotready() uint64 {
	if m != nil {
		return m.TotalEncodeNotready
	}
	return 0
}

func (m *MdtCollectionSysdbGroup) GetTotalSendErrors() uint64 {
	if m != nil {
		return m.TotalSendErrors
	}
	return 0
}

func (m *MdtCollectionSysdbGroup) GetTotalSendDrops() uint64 {
	if m != nil {
		return m.TotalSendDrops
	}
	return 0
}

func (m *MdtCollectionSysdbGroup) GetTotalSentBytes() uint64 {
	if m != nil {
		return m.TotalSentBytes
	}
	return 0
}

func (m *MdtCollectionSysdbGroup) GetTotalSendPackets() uint64 {
	if m != nil {
		return m.TotalSendPackets
	}
	return 0
}

func (m *MdtCollectionSysdbGroup) GetTotalSendBytesDropped() uint64 {
	if m != nil {
		return m.TotalSendBytesDropped
	}
	return 0
}

func (m *MdtCollectionSysdbGroup) GetTotalCollections() uint64 {
	if m != nil {
		return m.TotalCollections
	}
	return 0
}

func (m *MdtCollectionSysdbGroup) GetTotalCollectionsMissed() uint64 {
	if m != nil {
		return m.TotalCollectionsMissed
	}
	return 0
}

func (m *MdtCollectionSysdbGroup) GetMaxCollectionTime() uint64 {
	if m != nil {
		return m.MaxCollectionTime
	}
	return 0
}

func (m *MdtCollectionSysdbGroup) GetMinCollectionTime() uint64 {
	if m != nil {
		return m.MinCollectionTime
	}
	return 0
}

func (m *MdtCollectionSysdbGroup) GetAvgCollectionTime() uint64 {
	if m != nil {
		return m.AvgCollectionTime
	}
	return 0
}

func (m *MdtCollectionSysdbGroup) GetCollectionMethod() uint64 {
	if m != nil {
		return m.CollectionMethod
	}
	return 0
}

func (m *MdtCollectionSysdbGroup) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

type MdtCollectionGroup struct {
	Id                      uint64                     `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Cadence                 uint32                     `protobuf:"varint,2,opt,name=cadence,proto3" json:"cadence,omitempty"`
	TotalCollections        uint32                     `protobuf:"varint,3,opt,name=total_collections,json=totalCollections,proto3" json:"total_collections,omitempty"`
	Encoding                string                     `protobuf:"bytes,4,opt,name=encoding,proto3" json:"encoding,omitempty"`
	LastCollectionStartTime uint64                     `protobuf:"varint,5,opt,name=last_collection_start_time,json=lastCollectionStartTime,proto3" json:"last_collection_start_time,omitempty"`
	LastCollectionEndTime   uint64                     `protobuf:"varint,6,opt,name=last_collection_end_time,json=lastCollectionEndTime,proto3" json:"last_collection_end_time,omitempty"`
	MaxCollectionTime       uint32                     `protobuf:"varint,7,opt,name=max_collection_time,json=maxCollectionTime,proto3" json:"max_collection_time,omitempty"`
	MinCollectionTime       uint32                     `protobuf:"varint,8,opt,name=min_collection_time,json=minCollectionTime,proto3" json:"min_collection_time,omitempty"`
	MinTotalTime            uint32                     `protobuf:"varint,9,opt,name=min_total_time,json=minTotalTime,proto3" json:"min_total_time,omitempty"`
	MaxTotalTime            uint32                     `protobuf:"varint,10,opt,name=max_total_time,json=maxTotalTime,proto3" json:"max_total_time,omitempty"`
	AvgTotalTime            uint32                     `protobuf:"varint,11,opt,name=avg_total_time,json=avgTotalTime,proto3" json:"avg_total_time,omitempty"`
	TotalOtherErrors        uint32                     `protobuf:"varint,12,opt,name=total_other_errors,json=totalOtherErrors,proto3" json:"total_other_errors,omitempty"`
	TotalOnDataInstances    uint32                     `protobuf:"varint,13,opt,name=total_on_data_instances,json=totalOnDataInstances,proto3" json:"total_on_data_instances,omitempty"`
	TotalNotReady           uint32                     `protobuf:"varint,14,opt,name=total_not_ready,json=totalNotReady,proto3" json:"total_not_ready,omitempty"`
	TotalSendErrors         uint32                     `protobuf:"varint,15,opt,name=total_send_errors,json=totalSendErrors,proto3" json:"total_send_errors,omitempty"`
	TotalSendDrops          uint32                     `protobuf:"varint,16,opt,name=total_send_drops,json=totalSendDrops,proto3" json:"total_send_drops,omitempty"`
	CollectionPath          []*MdtSensorPaths          `protobuf:"bytes,17,rep,name=collection_path,json=collectionPath,proto3" json:"collection_path,omitempty"`
	InternalCollectionGroup []*MdtCollectionSysdbGroup `protobuf:"bytes,18,rep,name=internal_collection_group,json=internalCollectionGroup,proto3" json:"internal_collection_group,omitempty"`
	XXX_NoUnkeyedLiteral    struct{}                   `json:"-"`
	XXX_unrecognized        []byte                     `json:"-"`
	XXX_sizecache           int32                      `json:"-"`
}

func (m *MdtCollectionGroup) Reset()         { *m = MdtCollectionGroup{} }
func (m *MdtCollectionGroup) String() string { return proto.CompactTextString(m) }
func (*MdtCollectionGroup) ProtoMessage()    {}
func (*MdtCollectionGroup) Descriptor() ([]byte, []int) {
	return fileDescriptor_27dd82830226cd40, []int{10}
}

func (m *MdtCollectionGroup) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MdtCollectionGroup.Unmarshal(m, b)
}
func (m *MdtCollectionGroup) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MdtCollectionGroup.Marshal(b, m, deterministic)
}
func (m *MdtCollectionGroup) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MdtCollectionGroup.Merge(m, src)
}
func (m *MdtCollectionGroup) XXX_Size() int {
	return xxx_messageInfo_MdtCollectionGroup.Size(m)
}
func (m *MdtCollectionGroup) XXX_DiscardUnknown() {
	xxx_messageInfo_MdtCollectionGroup.DiscardUnknown(m)
}

var xxx_messageInfo_MdtCollectionGroup proto.InternalMessageInfo

func (m *MdtCollectionGroup) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *MdtCollectionGroup) GetCadence() uint32 {
	if m != nil {
		return m.Cadence
	}
	return 0
}

func (m *MdtCollectionGroup) GetTotalCollections() uint32 {
	if m != nil {
		return m.TotalCollections
	}
	return 0
}

func (m *MdtCollectionGroup) GetEncoding() string {
	if m != nil {
		return m.Encoding
	}
	return ""
}

func (m *MdtCollectionGroup) GetLastCollectionStartTime() uint64 {
	if m != nil {
		return m.LastCollectionStartTime
	}
	return 0
}

func (m *MdtCollectionGroup) GetLastCollectionEndTime() uint64 {
	if m != nil {
		return m.LastCollectionEndTime
	}
	return 0
}

func (m *MdtCollectionGroup) GetMaxCollectionTime() uint32 {
	if m != nil {
		return m.MaxCollectionTime
	}
	return 0
}

func (m *MdtCollectionGroup) GetMinCollectionTime() uint32 {
	if m != nil {
		return m.MinCollectionTime
	}
	return 0
}

func (m *MdtCollectionGroup) GetMinTotalTime() uint32 {
	if m != nil {
		return m.MinTotalTime
	}
	return 0
}

func (m *MdtCollectionGroup) GetMaxTotalTime() uint32 {
	if m != nil {
		return m.MaxTotalTime
	}
	return 0
}

func (m *MdtCollectionGroup) GetAvgTotalTime() uint32 {
	if m != nil {
		return m.AvgTotalTime
	}
	return 0
}

func (m *MdtCollectionGroup) GetTotalOtherErrors() uint32 {
	if m != nil {
		return m.TotalOtherErrors
	}
	return 0
}

func (m *MdtCollectionGroup) GetTotalOnDataInstances() uint32 {
	if m != nil {
		return m.TotalOnDataInstances
	}
	return 0
}

func (m *MdtCollectionGroup) GetTotalNotReady() uint32 {
	if m != nil {
		return m.TotalNotReady
	}
	return 0
}

func (m *MdtCollectionGroup) GetTotalSendErrors() uint32 {
	if m != nil {
		return m.TotalSendErrors
	}
	return 0
}

func (m *MdtCollectionGroup) GetTotalSendDrops() uint32 {
	if m != nil {
		return m.TotalSendDrops
	}
	return 0
}

func (m *MdtCollectionGroup) GetCollectionPath() []*MdtSensorPaths {
	if m != nil {
		return m.CollectionPath
	}
	return nil
}

func (m *MdtCollectionGroup) GetInternalCollectionGroup() []*MdtCollectionSysdbGroup {
	if m != nil {
		return m.InternalCollectionGroup
	}
	return nil
}

type MdtSubscriptionDetails struct {
	Subscription         *MdtSubscription      `protobuf:"bytes,50,opt,name=subscription,proto3" json:"subscription,omitempty"`
	CollectionGroup      []*MdtCollectionGroup `protobuf:"bytes,51,rep,name=collection_group,json=collectionGroup,proto3" json:"collection_group,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *MdtSubscriptionDetails) Reset()         { *m = MdtSubscriptionDetails{} }
func (m *MdtSubscriptionDetails) String() string { return proto.CompactTextString(m) }
func (*MdtSubscriptionDetails) ProtoMessage()    {}
func (*MdtSubscriptionDetails) Descriptor() ([]byte, []int) {
	return fileDescriptor_27dd82830226cd40, []int{11}
}

func (m *MdtSubscriptionDetails) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MdtSubscriptionDetails.Unmarshal(m, b)
}
func (m *MdtSubscriptionDetails) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MdtSubscriptionDetails.Marshal(b, m, deterministic)
}
func (m *MdtSubscriptionDetails) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MdtSubscriptionDetails.Merge(m, src)
}
func (m *MdtSubscriptionDetails) XXX_Size() int {
	return xxx_messageInfo_MdtSubscriptionDetails.Size(m)
}
func (m *MdtSubscriptionDetails) XXX_DiscardUnknown() {
	xxx_messageInfo_MdtSubscriptionDetails.DiscardUnknown(m)
}

var xxx_messageInfo_MdtSubscriptionDetails proto.InternalMessageInfo

func (m *MdtSubscriptionDetails) GetSubscription() *MdtSubscription {
	if m != nil {
		return m.Subscription
	}
	return nil
}

func (m *MdtSubscriptionDetails) GetCollectionGroup() []*MdtCollectionGroup {
	if m != nil {
		return m.CollectionGroup
	}
	return nil
}

func init() {
	proto.RegisterType((*MdtSubscriptionDetails_KEYS)(nil), "cisco_ios_xr_telemetry_model_driven_oper.telemetry_model_driven.subscriptions.subscription.mdt_subscription_details_KEYS")
	proto.RegisterType((*MdtSourceInterface)(nil), "cisco_ios_xr_telemetry_model_driven_oper.telemetry_model_driven.subscriptions.subscription.mdt_source_interface")
	proto.RegisterType((*MdtSensorPaths)(nil), "cisco_ios_xr_telemetry_model_driven_oper.telemetry_model_driven.subscriptions.subscription.mdt_sensor_paths")
	proto.RegisterType((*MdtSensorGroup)(nil), "cisco_ios_xr_telemetry_model_driven_oper.telemetry_model_driven.subscriptions.subscription.mdt_sensor_group")
	proto.RegisterType((*MdtSensorProfile)(nil), "cisco_ios_xr_telemetry_model_driven_oper.telemetry_model_driven.subscriptions.subscription.mdt_sensor_profile")
	proto.RegisterType((*MdtDestinationIPAddress)(nil), "cisco_ios_xr_telemetry_model_driven_oper.telemetry_model_driven.subscriptions.subscription.MdtDestinationIPAddress")
	proto.RegisterType((*MdtDestination)(nil), "cisco_ios_xr_telemetry_model_driven_oper.telemetry_model_driven.subscriptions.subscription.mdt_destination")
	proto.RegisterType((*MdtDestinationGroup)(nil), "cisco_ios_xr_telemetry_model_driven_oper.telemetry_model_driven.subscriptions.subscription.mdt_destination_group")
	proto.RegisterType((*MdtSubscription)(nil), "cisco_ios_xr_telemetry_model_driven_oper.telemetry_model_driven.subscriptions.subscription.mdt_subscription")
	proto.RegisterType((*MdtCollectionSysdbGroup)(nil), "cisco_ios_xr_telemetry_model_driven_oper.telemetry_model_driven.subscriptions.subscription.mdt_collection_sysdb_group")
	proto.RegisterType((*MdtCollectionGroup)(nil), "cisco_ios_xr_telemetry_model_driven_oper.telemetry_model_driven.subscriptions.subscription.mdt_collection_group")
	proto.RegisterType((*MdtSubscriptionDetails)(nil), "cisco_ios_xr_telemetry_model_driven_oper.telemetry_model_driven.subscriptions.subscription.mdt_subscription_details")
}

func init() { proto.RegisterFile("mdt_subscription_details.proto", fileDescriptor_27dd82830226cd40) }

var fileDescriptor_27dd82830226cd40 = []byte{
	// 1574 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xc4, 0x58, 0x4f, 0x6f, 0x1c, 0x35,
	0x14, 0xd7, 0x26, 0x9b, 0x64, 0xe3, 0x64, 0xff, 0xc4, 0x4d, 0x9a, 0x49, 0xfa, 0x47, 0x61, 0xc5,
	0x9f, 0x88, 0x42, 0x28, 0x69, 0x69, 0x2b, 0x71, 0xa2, 0x4d, 0x48, 0x57, 0x90, 0x34, 0x9a, 0xf4,
	0x02, 0x1c, 0x46, 0xde, 0xb5, 0x37, 0x19, 0x65, 0xc6, 0x33, 0xd8, 0x9e, 0x55, 0x72, 0xe4, 0xc2,
	0x05, 0x21, 0xb8, 0xf4, 0x42, 0x3f, 0x03, 0x12, 0xe2, 0x6b, 0x70, 0x83, 0x03, 0x5f, 0x07, 0xf9,
	0xd9, 0x33, 0xeb, 0x99, 0x4d, 0x44, 0x25, 0x94, 0x70, 0x9b, 0x79, 0xef, 0xf7, 0xb3, 0xdf, 0xfc,
	0xfc, 0xfc, 0x9e, 0x3d, 0xe8, 0x6e, 0x4c, 0x55, 0x20, 0xb3, 0xbe, 0x1c, 0x88, 0x30, 0x55, 0x61,
	0xc2, 0x03, 0xca, 0x14, 0x09, 0x23, 0xb9, 0x95, 0x8a, 0x44, 0x25, 0xf8, 0xeb, 0x41, 0x28, 0x07,
	0x49, 0x10, 0x26, 0x32, 0x38, 0x13, 0x81, 0x62, 0x11, 0x8b, 0x99, 0x12, 0xe7, 0x41, 0x9c, 0x50,
	0x16, 0x05, 0x54, 0x84, 0x23, 0xc6, 0x83, 0x24, 0x65, 0x62, 0xeb, 0x62, 0xdf, 0x96, 0x3b, 0xb6,
	0x2c, 0xbd, 0x75, 0x9f, 0xa3, 0x3b, 0x97, 0xcd, 0x1e, 0x7c, 0xb1, 0xfb, 0xd5, 0x11, 0x7e, 0x0f,
	0xb5, 0x4b, 0xce, 0x90, 0x7a, 0xb5, 0x8d, 0xda, 0xe6, 0xbc, 0xdf, 0x72, 0xcd, 0x3d, 0xda, 0xfd,
	0xad, 0x86, 0x96, 0x61, 0xa8, 0x24, 0x13, 0x03, 0x16, 0x84, 0x5c, 0x31, 0x31, 0x24, 0x03, 0x86,
	0xdf, 0x41, 0xad, 0xe2, 0x25, 0xe0, 0x24, 0x66, 0x76, 0x80, 0x66, 0x61, 0x3d, 0x20, 0x31, 0xc3,
	0xcb, 0x68, 0x46, 0x2a, 0xa2, 0x98, 0x37, 0xb5, 0x51, 0xdb, 0x6c, 0xf8, 0xe6, 0x05, 0xbf, 0x85,
	0x16, 0xc3, 0x74, 0xf4, 0x30, 0x20, 0x94, 0x0a, 0x26, 0xa5, 0x37, 0x0d, 0xd4, 0x05, 0x6d, 0xfb,
	0xcc, 0x98, 0x2c, 0xe4, 0x51, 0x01, 0xa9, 0x17, 0x90, 0x47, 0x39, 0x64, 0x05, 0xcd, 0x8e, 0xc4,
	0x50, 0xc7, 0x3e, 0xb3, 0x51, 0xdb, 0x6c, 0xfa, 0x33, 0x23, 0x31, 0xec, 0xd1, 0xee, 0x37, 0xa8,
	0x03, 0x11, 0x33, 0x2e, 0x13, 0x11, 0xa4, 0x44, 0x9d, 0x48, 0x8c, 0x51, 0x5d, 0x3f, 0xd8, 0x18,
	0xe1, 0xf9, 0x92, 0xd0, 0xee, 0x20, 0xa4, 0x1f, 0x32, 0x19, 0x48, 0x25, 0x6c, 0x60, 0xf3, 0xc6,
	0x72, 0xa4, 0x44, 0xf7, 0xcf, 0x5a, 0x69, 0xf4, 0x63, 0x91, 0x64, 0x29, 0x6e, 0xa1, 0xa9, 0x42,
	0xc0, 0xa9, 0x90, 0xe2, 0xbb, 0x08, 0x0d, 0x12, 0x3e, 0x0c, 0x8f, 0x33, 0xc1, 0x28, 0x0c, 0xdf,
	0xf4, 0x1d, 0x0b, 0xfe, 0xb1, 0x86, 0x16, 0x9c, 0xf0, 0xbc, 0xe9, 0x8d, 0xe9, 0xcd, 0x85, 0xed,
	0x68, 0xeb, 0xea, 0x32, 0x62, 0xab, 0xaa, 0x88, 0x8f, 0xcc, 0xdb, 0x21, 0x51, 0x27, 0xdd, 0x5f,
	0xa7, 0x10, 0x76, 0x01, 0x22, 0x19, 0x86, 0x11, 0xc3, 0x3f, 0xd5, 0xd0, 0xa2, 0xfb, 0x9d, 0xf0,
	0x85, 0xd7, 0x17, 0x27, 0xcc, 0xe9, 0x5b, 0xa1, 0xf6, 0x40, 0x68, 0x9d, 0xb6, 0x24, 0x4e, 0x23,
	0x9b, 0x88, 0x23, 0x12, 0x59, 0x75, 0x5b, 0xc6, 0xdc, 0xb3, 0x56, 0xfc, 0x21, 0xc2, 0x27, 0x8c,
	0x08, 0xd5, 0x67, 0x44, 0x8d, 0xb1, 0xd3, 0x80, 0x5d, 0x2a, 0x3c, 0x2e, 0x5c, 0x66, 0x69, 0xaa,
	0xb3, 0x2a, 0x10, 0x8c, 0x66, 0x9c, 0x12, 0xae, 0x20, 0xe5, 0x1a, 0xfe, 0x52, 0xee, 0xf1, 0x73,
	0x47, 0xf7, 0x0c, 0xad, 0xee, 0x53, 0xb5, 0xc3, 0xa4, 0x0a, 0x39, 0x81, 0x8d, 0x72, 0x98, 0xe7,
	0xe4, 0x2a, 0x9a, 0x0b, 0xd3, 0x40, 0x9d, 0xa7, 0xf9, 0x7e, 0x98, 0x0d, 0xd3, 0x97, 0xe7, 0xe9,
	0x64, 0xca, 0x4f, 0xfd, 0x7b, 0xca, 0x4f, 0x4f, 0xa4, 0x7c, 0xf7, 0xfb, 0x19, 0xd4, 0xd6, 0x12,
	0xd1, 0xf1, 0xdc, 0x13, 0xd9, 0x77, 0x1b, 0x21, 0x99, 0xf5, 0x83, 0x90, 0x42, 0x06, 0x9b, 0x79,
	0x1a, 0x32, 0xeb, 0xf7, 0xe8, 0x91, 0x12, 0x7a, 0xd3, 0x18, 0x2f, 0x64, 0x5d, 0xdd, 0x9f, 0x01,
	0x0f, 0x7e, 0x5d, 0x43, 0x6d, 0x3d, 0x68, 0x10, 0xa6, 0xa5, 0x2d, 0xb7, 0xb0, 0x2d, 0xaf, 0x72,
	0xb9, 0x2f, 0x91, 0xd1, 0x6f, 0xea, 0x58, 0x7a, 0x69, 0xae, 0xcc, 0x2d, 0x34, 0x0f, 0xc1, 0xa5,
	0x89, 0x50, 0x76, 0xb3, 0x37, 0xb4, 0xe1, 0x30, 0x11, 0x0a, 0xaf, 0xa3, 0x06, 0xe3, 0x83, 0x84,
	0x86, 0xfc, 0xd8, 0x9b, 0x35, 0x5f, 0x9b, 0xbf, 0xe3, 0xdb, 0x68, 0x5e, 0x09, 0xc2, 0x25, 0x10,
	0xe7, 0xcc, 0x66, 0x2e, 0x0c, 0xb8, 0x83, 0xa6, 0x47, 0x62, 0xe8, 0x35, 0xc0, 0xae, 0x1f, 0x9d,
	0x92, 0x32, 0xef, 0x94, 0x94, 0x71, 0xa9, 0x40, 0x00, 0xb5, 0xa5, 0x62, 0x15, 0xcd, 0x65, 0x34,
	0x0d, 0x62, 0x95, 0x79, 0x0b, 0x80, 0x9e, 0xcd, 0x68, 0xba, 0xaf, 0x32, 0x5d, 0x6d, 0xa8, 0x1c,
	0xa4, 0xde, 0x22, 0x58, 0xe1, 0x59, 0xcf, 0xa5, 0x22, 0xe9, 0x35, 0xc1, 0xa4, 0x1f, 0xf1, 0x1a,
	0x6a, 0xa8, 0x48, 0x06, 0x27, 0x89, 0x54, 0x5e, 0x0b, 0xc6, 0x9d, 0x53, 0x91, 0x7c, 0x9e, 0x48,
	0x85, 0x9f, 0xa0, 0x35, 0x95, 0x28, 0x12, 0x05, 0x3c, 0x8b, 0x83, 0x64, 0x18, 0xa4, 0x64, 0x70,
	0xca, 0x94, 0xd4, 0x3b, 0x43, 0x79, 0xed, 0x8d, 0xda, 0x66, 0xdd, 0x5f, 0x01, 0xc0, 0x41, 0x16,
	0xbf, 0x18, 0x1e, 0x1a, 0xef, 0x11, 0xe3, 0x0a, 0x3f, 0x44, 0xab, 0x25, 0x66, 0xff, 0x5c, 0x31,
	0xcb, 0xeb, 0x00, 0xef, 0xc6, 0x98, 0xf7, 0x54, 0xfb, 0x80, 0x75, 0x1f, 0x2d, 0x47, 0x44, 0xaa,
	0x60, 0x90, 0x44, 0x11, 0x1b, 0x40, 0x47, 0x50, 0x61, 0xcc, 0xbc, 0x25, 0xa0, 0x60, 0xed, 0x7b,
	0x56, 0xb8, 0x5e, 0x86, 0x31, 0xeb, 0xfe, 0x5d, 0x43, 0x2b, 0x95, 0x44, 0xfc, 0x0f, 0xc5, 0xd0,
	0x19, 0xc5, 0x16, 0xc3, 0xd3, 0xab, 0x2e, 0x32, 0xce, 0x94, 0xbe, 0x3b, 0x7f, 0xf7, 0x87, 0xba,
	0xad, 0xf0, 0x0e, 0x63, 0xe2, 0xa3, 0x4a, 0xbd, 0xa3, 0x48, 0x88, 0xd7, 0x35, 0xd4, 0xa9, 0x36,
	0x4a, 0xd8, 0xc5, 0x0b, 0xdb, 0xe9, 0x95, 0x17, 0xcd, 0xca, 0xbc, 0x7e, 0xdb, 0x58, 0x7a, 0x45,
	0xc7, 0x7e, 0x55, 0x43, 0xad, 0x72, 0x85, 0xf7, 0xea, 0xa0, 0x35, 0xbf, 0xae, 0xc6, 0x63, 0x66,
	0xf5, 0x9b, 0xb6, 0xf5, 0xd8, 0x36, 0xf3, 0x8b, 0x2d, 0x3d, 0xe3, 0x34, 0x4a, 0xbd, 0x19, 0x08,
	0xec, 0xdb, 0x6b, 0x4c, 0x02, 0xdb, 0x6e, 0x5a, 0x8e, 0x69, 0x4f, 0xa4, 0xdd, 0xbf, 0xe6, 0xd1,
	0xba, 0x46, 0x3a, 0x3b, 0x43, 0x9e, 0x4b, 0xda, 0xb7, 0xc9, 0x7e, 0xd1, 0xb9, 0xc2, 0x43, 0x73,
	0x03, 0x42, 0x19, 0x1f, 0x98, 0xec, 0xa8, 0xfb, 0xf9, 0x2b, 0x7e, 0x17, 0xb5, 0xcd, 0xe6, 0x3c,
	0x66, 0x7a, 0xc4, 0x8c, 0x2b, 0xc8, 0x8e, 0xba, 0xdf, 0x04, 0xf3, 0x1e, 0x53, 0xcf, 0xb4, 0x11,
	0x6f, 0xa2, 0x8e, 0xc1, 0x45, 0xa1, 0xcc, 0x81, 0x75, 0x00, 0xb6, 0xc0, 0xfe, 0x65, 0x28, 0x2d,
	0xf2, 0x3e, 0x5a, 0x36, 0x48, 0x4a, 0x14, 0x71, 0xd0, 0x33, 0x66, 0xe3, 0x82, 0x6f, 0xc7, 0xba,
	0x2a, 0x8c, 0x61, 0xc8, 0xa9, 0x66, 0x59, 0xc6, 0xac, 0xc3, 0xf8, 0xdc, 0xba, 0x0c, 0xe3, 0xa3,
	0x9c, 0xa1, 0xa3, 0xee, 0x67, 0xd1, 0xa9, 0x65, 0xcc, 0x01, 0x63, 0x29, 0x0f, 0xfd, 0x69, 0x16,
	0x9d, 0x56, 0xc2, 0x0f, 0x15, 0x8b, 0x2d, 0xb8, 0xe1, 0x84, 0xdf, 0x53, 0x2c, 0xae, 0x20, 0xf5,
	0xd0, 0x4c, 0x88, 0x44, 0x48, 0x28, 0xbc, 0x39, 0x72, 0x8f, 0xa9, 0x5d, 0xb0, 0xe2, 0xf7, 0xd1,
	0x92, 0x23, 0x89, 0x85, 0x22, 0x80, 0xb6, 0x0b, 0x4d, 0x2c, 0x76, 0x1b, 0xad, 0x54, 0x44, 0xb1,
	0xf8, 0x05, 0xa7, 0x02, 0xe6, 0xaa, 0x54, 0x39, 0x85, 0x2c, 0x96, 0xb3, 0xe8, 0x70, 0x72, 0x5d,
	0x2c, 0xe7, 0xe3, 0x9c, 0x53, 0x08, 0x63, 0x39, 0x4d, 0x47, 0x4b, 0xab, 0x8c, 0xa5, 0x6c, 0x21,
	0x33, 0x52, 0x00, 0x1d, 0x8a, 0xe5, 0x84, 0x96, 0x23, 0xe5, 0x2e, 0x78, 0xaa, 0x61, 0x59, 0x3c,
	0x4f, 0x94, 0x60, 0x84, 0x9e, 0xdb, 0x26, 0x70, 0xc3, 0x61, 0x1c, 0x58, 0xd7, 0x58, 0x2a, 0xc9,
	0x38, 0xcd, 0x67, 0xe8, 0x38, 0x52, 0x1d, 0x31, 0x4e, 0xed, 0xf8, 0xc5, 0x02, 0x00, 0x96, 0x8a,
	0x24, 0x95, 0xb6, 0xe8, 0xb7, 0x0a, 0xe8, 0x8e, 0xb6, 0x96, 0x90, 0xca, 0xb4, 0x15, 0x0f, 0x97,
	0x91, 0x0a, 0x1a, 0x0a, 0xfe, 0x00, 0x61, 0x67, 0x4c, 0xdb, 0xba, 0xbc, 0x1b, 0x80, 0xed, 0x14,
	0xa3, 0xda, 0xa6, 0x85, 0x1f, 0x23, 0xcf, 0x41, 0x9b, 0x76, 0xa5, 0xe3, 0x48, 0x19, 0xf5, 0x96,
	0x9d, 0x4e, 0xa7, 0x39, 0x30, 0xfe, 0x8e, 0x71, 0xe2, 0x7b, 0xf9, 0x67, 0x8e, 0xb7, 0xa6, 0xf4,
	0x56, 0x9c, 0x59, 0xc6, 0x1d, 0x4b, 0xe2, 0x27, 0xf9, 0x2c, 0x0e, 0x38, 0x88, 0x43, 0x29, 0x19,
	0xf5, 0x6e, 0x02, 0xe7, 0x66, 0x95, 0xb3, 0x0f, 0x5e, 0xbd, 0x62, 0x31, 0x39, 0x9b, 0xe8, 0x8c,
	0xab, 0x66, 0xc5, 0x62, 0x72, 0x56, 0x6e, 0x8c, 0x80, 0x0f, 0xf9, 0x04, 0xde, 0xb3, 0xf8, 0x90,
	0x4f, 0xe2, 0xc9, 0xe8, 0x78, 0x02, 0xbf, 0x66, 0xf0, 0x64, 0x74, 0x5c, 0xc1, 0xdf, 0x43, 0x4b,
	0x0e, 0x36, 0x66, 0xea, 0x24, 0xa1, 0xde, 0xba, 0xf9, 0xec, 0xb1, 0x63, 0x1f, 0xec, 0xf8, 0x26,
	0x9a, 0x35, 0x57, 0x17, 0xef, 0x96, 0x39, 0x8c, 0x9a, 0xb7, 0xee, 0x77, 0x0d, 0x73, 0xab, 0x73,
	0x46, 0xaa, 0x36, 0xef, 0x3a, 0xf4, 0xb9, 0x4a, 0x2d, 0x6b, 0x8e, 0x6b, 0xd9, 0x85, 0xf2, 0x9b,
	0x03, 0xf6, 0xa4, 0xfc, 0xee, 0x11, 0xad, 0x5e, 0x39, 0xa2, 0x7d, 0x8a, 0xd6, 0xab, 0x67, 0x0f,
	0xa9, 0x88, 0x50, 0x46, 0x07, 0x53, 0xc8, 0x56, 0xcb, 0x27, 0x90, 0x23, 0xed, 0x07, 0x35, 0x1e,
	0x23, 0xaf, 0x4a, 0xd6, 0x69, 0x04, 0x54, 0x53, 0xd1, 0x56, 0xca, 0xd4, 0x5d, 0x4e, 0x8b, 0x65,
	0xba, 0x60, 0x59, 0xe7, 0xcc, 0x0d, 0xe1, 0x8d, 0x97, 0xb5, 0x61, 0xf1, 0x13, 0xcb, 0xfa, 0x36,
	0x6a, 0x69, 0xbc, 0x91, 0x08, 0xa0, 0xe6, 0x40, 0xb9, 0x18, 0x87, 0xfc, 0xa5, 0x36, 0x16, 0x28,
	0x72, 0xe6, 0xa2, 0x90, 0x45, 0x91, 0xb3, 0x12, 0x4a, 0xa7, 0x88, 0x83, 0x32, 0xc7, 0xcd, 0x45,
	0x32, 0x3a, 0x1e, 0xa3, 0x8a, 0x6d, 0x97, 0xa8, 0x13, 0x26, 0xdc, 0xf2, 0x95, 0xaf, 0xc8, 0x0b,
	0xed, 0xb0, 0x1b, 0xff, 0x93, 0xfc, 0x9c, 0x98, 0x70, 0x28, 0x93, 0x41, 0xc8, 0xa5, 0x22, 0x7c,
	0xc0, 0xf2, 0x23, 0xaa, 0xa9, 0xf9, 0x2f, 0xb8, 0xae, 0x93, 0xbd, 0xdc, 0x37, 0xee, 0x60, 0x3c,
	0x51, 0x81, 0xa9, 0x44, 0x2d, 0x80, 0x9b, 0x0e, 0x76, 0x90, 0x28, 0xff, 0xf2, 0x1a, 0xd4, 0x06,
	0xe4, 0x1b, 0xd5, 0xa0, 0x8e, 0xb9, 0xd5, 0x55, 0x6a, 0xd0, 0xab, 0x1a, 0x6a, 0x3b, 0x2b, 0x00,
	0x9d, 0x77, 0xe9, 0x7f, 0xb8, 0x3b, 0xb7, 0xc6, 0x41, 0xe8, 0xfb, 0x33, 0xfe, 0xbd, 0x86, 0xd6,
	0xe0, 0xe0, 0xc5, 0x4b, 0xfb, 0xc1, 0xde, 0x9a, 0x31, 0x44, 0x38, 0xba, 0xea, 0x08, 0x2f, 0x3e,
	0xa1, 0xf8, 0xab, 0x79, 0x60, 0xe3, 0x04, 0x85, 0xbb, 0x74, 0xf7, 0x8f, 0x29, 0xe4, 0x5d, 0xf6,
	0x93, 0x08, 0xff, 0xac, 0xaf, 0xfe, 0x8e, 0xc3, 0xdb, 0xbe, 0xa6, 0xab, 0xbf, 0x63, 0xf0, 0x4b,
	0x11, 0xc0, 0xe1, 0x7a, 0x42, 0xdb, 0x07, 0xa0, 0x6d, 0x7a, 0x8d, 0xda, 0x1a, 0x55, 0x9d, 0x34,
	0x04, 0x35, 0xfb, 0xb3, 0xf0, 0x53, 0xef, 0xc1, 0x3f, 0x01, 0x00, 0x00, 0xff, 0xff, 0x2d, 0x90,
	0x05, 0x2c, 0xf6, 0x13, 0x00, 0x00,
}
