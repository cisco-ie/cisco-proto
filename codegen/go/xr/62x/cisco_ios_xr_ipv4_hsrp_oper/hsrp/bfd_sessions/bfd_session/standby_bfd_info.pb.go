/*
Copyright 2019 Cisco Systems

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: standby_bfd_info.proto

package cisco_ios_xr_ipv4_hsrp_oper_hsrp_bfd_sessions_bfd_session

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type StandbyBfdInfo_KEYS struct {
	InterfaceName        string   `protobuf:"bytes,1,opt,name=interface_name,json=interfaceName,proto3" json:"interface_name,omitempty"`
	IpAddress            string   `protobuf:"bytes,2,opt,name=ip_address,json=ipAddress,proto3" json:"ip_address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StandbyBfdInfo_KEYS) Reset()         { *m = StandbyBfdInfo_KEYS{} }
func (m *StandbyBfdInfo_KEYS) String() string { return proto.CompactTextString(m) }
func (*StandbyBfdInfo_KEYS) ProtoMessage()    {}
func (*StandbyBfdInfo_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_2f5ed0659de01225, []int{0}
}

func (m *StandbyBfdInfo_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StandbyBfdInfo_KEYS.Unmarshal(m, b)
}
func (m *StandbyBfdInfo_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StandbyBfdInfo_KEYS.Marshal(b, m, deterministic)
}
func (m *StandbyBfdInfo_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StandbyBfdInfo_KEYS.Merge(m, src)
}
func (m *StandbyBfdInfo_KEYS) XXX_Size() int {
	return xxx_messageInfo_StandbyBfdInfo_KEYS.Size(m)
}
func (m *StandbyBfdInfo_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_StandbyBfdInfo_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_StandbyBfdInfo_KEYS proto.InternalMessageInfo

func (m *StandbyBfdInfo_KEYS) GetInterfaceName() string {
	if m != nil {
		return m.InterfaceName
	}
	return ""
}

func (m *StandbyBfdInfo_KEYS) GetIpAddress() string {
	if m != nil {
		return m.IpAddress
	}
	return ""
}

type HsrpBfdGroupInfo struct {
	InterfaceName        string   `protobuf:"bytes,1,opt,name=interface_name,json=interfaceName,proto3" json:"interface_name,omitempty"`
	HsrpGroupNumber      uint32   `protobuf:"varint,2,opt,name=hsrp_group_number,json=hsrpGroupNumber,proto3" json:"hsrp_group_number,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HsrpBfdGroupInfo) Reset()         { *m = HsrpBfdGroupInfo{} }
func (m *HsrpBfdGroupInfo) String() string { return proto.CompactTextString(m) }
func (*HsrpBfdGroupInfo) ProtoMessage()    {}
func (*HsrpBfdGroupInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_2f5ed0659de01225, []int{1}
}

func (m *HsrpBfdGroupInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HsrpBfdGroupInfo.Unmarshal(m, b)
}
func (m *HsrpBfdGroupInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HsrpBfdGroupInfo.Marshal(b, m, deterministic)
}
func (m *HsrpBfdGroupInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HsrpBfdGroupInfo.Merge(m, src)
}
func (m *HsrpBfdGroupInfo) XXX_Size() int {
	return xxx_messageInfo_HsrpBfdGroupInfo.Size(m)
}
func (m *HsrpBfdGroupInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_HsrpBfdGroupInfo.DiscardUnknown(m)
}

var xxx_messageInfo_HsrpBfdGroupInfo proto.InternalMessageInfo

func (m *HsrpBfdGroupInfo) GetInterfaceName() string {
	if m != nil {
		return m.InterfaceName
	}
	return ""
}

func (m *HsrpBfdGroupInfo) GetHsrpGroupNumber() uint32 {
	if m != nil {
		return m.HsrpGroupNumber
	}
	return 0
}

type StandbyBfdInfo struct {
	BfdInterfaceName       string              `protobuf:"bytes,50,opt,name=bfd_interface_name,json=bfdInterfaceName,proto3" json:"bfd_interface_name,omitempty"`
	SessionAddressFamily   string              `protobuf:"bytes,51,opt,name=session_address_family,json=sessionAddressFamily,proto3" json:"session_address_family,omitempty"`
	DestinationAddress     string              `protobuf:"bytes,52,opt,name=destination_address,json=destinationAddress,proto3" json:"destination_address,omitempty"`
	DestinationIpv6Address string              `protobuf:"bytes,53,opt,name=destination_ipv6_address,json=destinationIpv6Address,proto3" json:"destination_ipv6_address,omitempty"`
	BfdSessionState        string              `protobuf:"bytes,54,opt,name=bfd_session_state,json=bfdSessionState,proto3" json:"bfd_session_state,omitempty"`
	BfdInterval            uint32              `protobuf:"varint,55,opt,name=bfd_interval,json=bfdInterval,proto3" json:"bfd_interval,omitempty"`
	BfdMultiplier          uint32              `protobuf:"varint,56,opt,name=bfd_multiplier,json=bfdMultiplier,proto3" json:"bfd_multiplier,omitempty"`
	Group                  []*HsrpBfdGroupInfo `protobuf:"bytes,57,rep,name=group,proto3" json:"group,omitempty"`
	XXX_NoUnkeyedLiteral   struct{}            `json:"-"`
	XXX_unrecognized       []byte              `json:"-"`
	XXX_sizecache          int32               `json:"-"`
}

func (m *StandbyBfdInfo) Reset()         { *m = StandbyBfdInfo{} }
func (m *StandbyBfdInfo) String() string { return proto.CompactTextString(m) }
func (*StandbyBfdInfo) ProtoMessage()    {}
func (*StandbyBfdInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_2f5ed0659de01225, []int{2}
}

func (m *StandbyBfdInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StandbyBfdInfo.Unmarshal(m, b)
}
func (m *StandbyBfdInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StandbyBfdInfo.Marshal(b, m, deterministic)
}
func (m *StandbyBfdInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StandbyBfdInfo.Merge(m, src)
}
func (m *StandbyBfdInfo) XXX_Size() int {
	return xxx_messageInfo_StandbyBfdInfo.Size(m)
}
func (m *StandbyBfdInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_StandbyBfdInfo.DiscardUnknown(m)
}

var xxx_messageInfo_StandbyBfdInfo proto.InternalMessageInfo

func (m *StandbyBfdInfo) GetBfdInterfaceName() string {
	if m != nil {
		return m.BfdInterfaceName
	}
	return ""
}

func (m *StandbyBfdInfo) GetSessionAddressFamily() string {
	if m != nil {
		return m.SessionAddressFamily
	}
	return ""
}

func (m *StandbyBfdInfo) GetDestinationAddress() string {
	if m != nil {
		return m.DestinationAddress
	}
	return ""
}

func (m *StandbyBfdInfo) GetDestinationIpv6Address() string {
	if m != nil {
		return m.DestinationIpv6Address
	}
	return ""
}

func (m *StandbyBfdInfo) GetBfdSessionState() string {
	if m != nil {
		return m.BfdSessionState
	}
	return ""
}

func (m *StandbyBfdInfo) GetBfdInterval() uint32 {
	if m != nil {
		return m.BfdInterval
	}
	return 0
}

func (m *StandbyBfdInfo) GetBfdMultiplier() uint32 {
	if m != nil {
		return m.BfdMultiplier
	}
	return 0
}

func (m *StandbyBfdInfo) GetGroup() []*HsrpBfdGroupInfo {
	if m != nil {
		return m.Group
	}
	return nil
}

func init() {
	proto.RegisterType((*StandbyBfdInfo_KEYS)(nil), "cisco_ios_xr_ipv4_hsrp_oper.hsrp.bfd_sessions.bfd_session.standby_bfd_info_KEYS")
	proto.RegisterType((*HsrpBfdGroupInfo)(nil), "cisco_ios_xr_ipv4_hsrp_oper.hsrp.bfd_sessions.bfd_session.hsrp_bfd_group_info")
	proto.RegisterType((*StandbyBfdInfo)(nil), "cisco_ios_xr_ipv4_hsrp_oper.hsrp.bfd_sessions.bfd_session.standby_bfd_info")
}

func init() { proto.RegisterFile("standby_bfd_info.proto", fileDescriptor_2f5ed0659de01225) }

var fileDescriptor_2f5ed0659de01225 = []byte{
	// 381 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x92, 0xc1, 0x6b, 0x22, 0x31,
	0x14, 0xc6, 0x71, 0x65, 0x17, 0x8c, 0xeb, 0xaa, 0x71, 0x57, 0x72, 0x59, 0x70, 0x85, 0x05, 0x91,
	0x65, 0x16, 0xd4, 0x75, 0xf5, 0xd8, 0x43, 0x5b, 0xa4, 0xd4, 0x83, 0x9e, 0x7a, 0x28, 0x21, 0x63,
	0x32, 0x35, 0x30, 0x33, 0x09, 0x49, 0x1c, 0xea, 0x1f, 0xd7, 0xff, 0xad, 0xe4, 0xcd, 0x38, 0x8c,
	0xd2, 0x43, 0xe9, 0x2d, 0xf3, 0xbd, 0xfc, 0xde, 0x37, 0x5f, 0xde, 0x43, 0x7d, 0xeb, 0x58, 0xca,
	0xc3, 0x23, 0x0d, 0x23, 0x4e, 0x65, 0x1a, 0xa9, 0x40, 0x1b, 0xe5, 0x14, 0x5e, 0xee, 0xa4, 0xdd,
	0x29, 0x2a, 0x95, 0xa5, 0xcf, 0x86, 0x4a, 0x9d, 0xcd, 0xe8, 0xde, 0x1a, 0x4d, 0x95, 0x16, 0x26,
	0xf0, 0xa7, 0xc0, 0x03, 0x56, 0x58, 0x2b, 0x55, 0x6a, 0xab, 0x1f, 0xc3, 0x47, 0xf4, 0xe3, 0xb2,
	0x29, 0xbd, 0xbb, 0x7e, 0xd8, 0xe2, 0xdf, 0xe8, 0x9b, 0x4c, 0x9d, 0x30, 0x11, 0xdb, 0x09, 0x9a,
	0xb2, 0x44, 0x90, 0xda, 0xa0, 0x36, 0x6a, 0x6c, 0x5a, 0xa5, 0xba, 0x66, 0x89, 0xc0, 0x3f, 0x11,
	0x92, 0x9a, 0x32, 0xce, 0x8d, 0xb0, 0x96, 0x7c, 0x82, 0x2b, 0x0d, 0xa9, 0xaf, 0x72, 0x61, 0xb8,
	0x47, 0x3d, 0xf8, 0x13, 0xdf, 0xfb, 0xc9, 0xa8, 0x83, 0x06, 0x87, 0xf7, 0x36, 0x1f, 0xa3, 0x2e,
	0xd0, 0x39, 0x99, 0x1e, 0x92, 0x50, 0x18, 0xf0, 0x68, 0x6d, 0xda, 0xbe, 0x70, 0xeb, 0xf5, 0x35,
	0xc8, 0xc3, 0x97, 0x3a, 0xea, 0x5c, 0x26, 0xc1, 0x7f, 0x10, 0xce, 0xcf, 0x67, 0x5e, 0x13, 0xf0,
	0xea, 0x84, 0x11, 0x5f, 0x9d, 0xd9, 0xcd, 0x50, 0xbf, 0x78, 0x96, 0x53, 0x20, 0x1a, 0xb1, 0x44,
	0xc6, 0x47, 0x32, 0x05, 0xe2, 0x7b, 0x51, 0x2d, 0xc2, 0xdd, 0x40, 0x0d, 0xff, 0x45, 0x3d, 0x2e,
	0xac, 0x93, 0x29, 0x73, 0x15, 0x92, 0xcc, 0x00, 0xc1, 0x95, 0x52, 0x81, 0xe1, 0x05, 0x22, 0x55,
	0x40, 0xea, 0x6c, 0x5e, 0x52, 0xff, 0x80, 0xea, 0x57, 0xea, 0x2b, 0x9d, 0xcd, 0x4f, 0xe4, 0x18,
	0x75, 0x2b, 0xb3, 0xa3, 0xd6, 0x31, 0x27, 0xc8, 0x1c, 0x90, 0x76, 0x18, 0xf1, 0x6d, 0xae, 0x6f,
	0xbd, 0x8c, 0x7f, 0xa1, 0xaf, 0x65, 0xf4, 0x8c, 0xc5, 0xe4, 0x3f, 0x3c, 0x5b, 0xf3, 0x14, 0x3a,
	0x63, 0xb1, 0x9f, 0x82, 0xbf, 0x92, 0x1c, 0x62, 0x27, 0x75, 0x2c, 0x85, 0x21, 0x0b, 0xb8, 0xd4,
	0x0a, 0x23, 0x7e, 0x5f, 0x8a, 0x98, 0xa3, 0xcf, 0x30, 0x00, 0xb2, 0x1c, 0xd4, 0x47, 0xcd, 0xc9,
	0x3a, 0xf8, 0xf0, 0xb6, 0x05, 0x6f, 0xec, 0xc2, 0x26, 0x6f, 0x1e, 0x7e, 0x81, 0x55, 0x9e, 0xbe,
	0x06, 0x00, 0x00, 0xff, 0xff, 0xc1, 0x35, 0x35, 0x2f, 0xe4, 0x02, 0x00, 0x00,
}
