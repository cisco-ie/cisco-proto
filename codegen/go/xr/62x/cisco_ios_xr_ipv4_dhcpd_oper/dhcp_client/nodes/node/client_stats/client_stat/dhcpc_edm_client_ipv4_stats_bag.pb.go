/*
Copyright 2019 Cisco Systems

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: dhcpc_edm_client_ipv4_stats_bag.proto

package cisco_ios_xr_ipv4_dhcpd_oper_dhcp_client_nodes_node_client_stats_client_stat

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type DhcpcEdmClientIpv4StatsBag_KEYS struct {
	NodeName             string   `protobuf:"bytes,1,opt,name=node_name,json=nodeName,proto3" json:"node_name,omitempty"`
	ClientIfhandle       string   `protobuf:"bytes,2,opt,name=client_ifhandle,json=clientIfhandle,proto3" json:"client_ifhandle,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DhcpcEdmClientIpv4StatsBag_KEYS) Reset()         { *m = DhcpcEdmClientIpv4StatsBag_KEYS{} }
func (m *DhcpcEdmClientIpv4StatsBag_KEYS) String() string { return proto.CompactTextString(m) }
func (*DhcpcEdmClientIpv4StatsBag_KEYS) ProtoMessage()    {}
func (*DhcpcEdmClientIpv4StatsBag_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_9747d90a82ec3916, []int{0}
}

func (m *DhcpcEdmClientIpv4StatsBag_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DhcpcEdmClientIpv4StatsBag_KEYS.Unmarshal(m, b)
}
func (m *DhcpcEdmClientIpv4StatsBag_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DhcpcEdmClientIpv4StatsBag_KEYS.Marshal(b, m, deterministic)
}
func (m *DhcpcEdmClientIpv4StatsBag_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DhcpcEdmClientIpv4StatsBag_KEYS.Merge(m, src)
}
func (m *DhcpcEdmClientIpv4StatsBag_KEYS) XXX_Size() int {
	return xxx_messageInfo_DhcpcEdmClientIpv4StatsBag_KEYS.Size(m)
}
func (m *DhcpcEdmClientIpv4StatsBag_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_DhcpcEdmClientIpv4StatsBag_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_DhcpcEdmClientIpv4StatsBag_KEYS proto.InternalMessageInfo

func (m *DhcpcEdmClientIpv4StatsBag_KEYS) GetNodeName() string {
	if m != nil {
		return m.NodeName
	}
	return ""
}

func (m *DhcpcEdmClientIpv4StatsBag_KEYS) GetClientIfhandle() string {
	if m != nil {
		return m.ClientIfhandle
	}
	return ""
}

type DhcpcEdmClientIpv4StatsBag struct {
	InterfaceName                    string   `protobuf:"bytes,50,opt,name=interface_name,json=interfaceName,proto3" json:"interface_name,omitempty"`
	NumEventsReceived                uint32   `protobuf:"varint,51,opt,name=num_events_received,json=numEventsReceived,proto3" json:"num_events_received,omitempty"`
	NumCreateEventReceived           uint32   `protobuf:"varint,52,opt,name=num_create_event_received,json=numCreateEventReceived,proto3" json:"num_create_event_received,omitempty"`
	NumDeleteEventReceived           uint32   `protobuf:"varint,53,opt,name=num_delete_event_received,json=numDeleteEventReceived,proto3" json:"num_delete_event_received,omitempty"`
	NumRebootEventReceived           uint32   `protobuf:"varint,54,opt,name=num_reboot_event_received,json=numRebootEventReceived,proto3" json:"num_reboot_event_received,omitempty"`
	NumReinitEventReceived           uint32   `protobuf:"varint,55,opt,name=num_reinit_event_received,json=numReinitEventReceived,proto3" json:"num_reinit_event_received,omitempty"`
	NumPacketEventReceived           uint32   `protobuf:"varint,56,opt,name=num_packet_event_received,json=numPacketEventReceived,proto3" json:"num_packet_event_received,omitempty"`
	NumInitTimerEventi               uint32   `protobuf:"varint,57,opt,name=num_init_timer_eventi,json=numInitTimerEventi,proto3" json:"num_init_timer_eventi,omitempty"`
	NumT1TimerEvent                  uint32   `protobuf:"varint,58,opt,name=num_t1_timer_event,json=numT1TimerEvent,proto3" json:"num_t1_timer_event,omitempty"`
	NumT2TimerEvent                  uint32   `protobuf:"varint,59,opt,name=num_t2_timer_event,json=numT2TimerEvent,proto3" json:"num_t2_timer_event,omitempty"`
	NumLeaseTimerEvent               uint32   `protobuf:"varint,60,opt,name=num_lease_timer_event,json=numLeaseTimerEvent,proto3" json:"num_lease_timer_event,omitempty"`
	NumDiscoversSentSuccessfully     uint32   `protobuf:"varint,61,opt,name=num_discovers_sent_successfully,json=numDiscoversSentSuccessfully,proto3" json:"num_discovers_sent_successfully,omitempty"`
	NumRequestsSentSuccessfully      uint32   `protobuf:"varint,62,opt,name=num_requests_sent_successfully,json=numRequestsSentSuccessfully,proto3" json:"num_requests_sent_successfully,omitempty"`
	NumReleasesSentSuccessfully      uint32   `protobuf:"varint,63,opt,name=num_releases_sent_successfully,json=numReleasesSentSuccessfully,proto3" json:"num_releases_sent_successfully,omitempty"`
	NumRenewsSentSuccessfully        uint32   `protobuf:"varint,64,opt,name=num_renews_sent_successfully,json=numRenewsSentSuccessfully,proto3" json:"num_renews_sent_successfully,omitempty"`
	NumRebindsSentSuccessfully       uint32   `protobuf:"varint,65,opt,name=num_rebinds_sent_successfully,json=numRebindsSentSuccessfully,proto3" json:"num_rebinds_sent_successfully,omitempty"`
	NumDeclinesSentSuccessfully      uint32   `protobuf:"varint,66,opt,name=num_declines_sent_successfully,json=numDeclinesSentSuccessfully,proto3" json:"num_declines_sent_successfully,omitempty"`
	NumRequestAfterRebootSent        uint32   `protobuf:"varint,67,opt,name=num_request_after_reboot_sent,json=numRequestAfterRebootSent,proto3" json:"num_request_after_reboot_sent,omitempty"`
	NumValidOffersReceived           uint32   `protobuf:"varint,68,opt,name=num_valid_offers_received,json=numValidOffersReceived,proto3" json:"num_valid_offers_received,omitempty"`
	NumValidAcksReceived             uint32   `protobuf:"varint,69,opt,name=num_valid_acks_received,json=numValidAcksReceived,proto3" json:"num_valid_acks_received,omitempty"`
	NumValidNacksReceived            uint32   `protobuf:"varint,70,opt,name=num_valid_nacks_received,json=numValidNacksReceived,proto3" json:"num_valid_nacks_received,omitempty"`
	NumUnicastPacketSentSuccessfully uint32   `protobuf:"varint,71,opt,name=num_unicast_packet_sent_successfully,json=numUnicastPacketSentSuccessfully,proto3" json:"num_unicast_packet_sent_successfully,omitempty"`
	NumBroadcastPacketSentSuccess    uint32   `protobuf:"varint,72,opt,name=num_broadcast_packet_sent_success,json=numBroadcastPacketSentSuccess,proto3" json:"num_broadcast_packet_sent_success,omitempty"`
	NumInitTimerStart                uint32   `protobuf:"varint,73,opt,name=num_init_timer_start,json=numInitTimerStart,proto3" json:"num_init_timer_start,omitempty"`
	NumInitTimerStop                 uint32   `protobuf:"varint,74,opt,name=num_init_timer_stop,json=numInitTimerStop,proto3" json:"num_init_timer_stop,omitempty"`
	NumT1TimerStart                  uint32   `protobuf:"varint,75,opt,name=num_t1_timer_start,json=numT1TimerStart,proto3" json:"num_t1_timer_start,omitempty"`
	NumT1TimerStop                   uint32   `protobuf:"varint,76,opt,name=num_t1_timer_stop,json=numT1TimerStop,proto3" json:"num_t1_timer_stop,omitempty"`
	NumT2TimerStart                  uint32   `protobuf:"varint,77,opt,name=num_t2_timer_start,json=numT2TimerStart,proto3" json:"num_t2_timer_start,omitempty"`
	NumT2TimerStop                   uint32   `protobuf:"varint,78,opt,name=num_t2_timer_stop,json=numT2TimerStop,proto3" json:"num_t2_timer_stop,omitempty"`
	NumLeaseTimerStart               uint32   `protobuf:"varint,79,opt,name=num_lease_timer_start,json=numLeaseTimerStart,proto3" json:"num_lease_timer_start,omitempty"`
	NumLeaseTimerStop                uint32   `protobuf:"varint,80,opt,name=num_lease_timer_stop,json=numLeaseTimerStop,proto3" json:"num_lease_timer_stop,omitempty"`
	NumInvalidEvents                 uint32   `protobuf:"varint,81,opt,name=num_invalid_events,json=numInvalidEvents,proto3" json:"num_invalid_events,omitempty"`
	NumDiscoversFailed               uint32   `protobuf:"varint,82,opt,name=num_discovers_failed,json=numDiscoversFailed,proto3" json:"num_discovers_failed,omitempty"`
	NumRequestsFailed                uint32   `protobuf:"varint,83,opt,name=num_requests_failed,json=numRequestsFailed,proto3" json:"num_requests_failed,omitempty"`
	NumReleasesFailed                uint32   `protobuf:"varint,84,opt,name=num_releases_failed,json=numReleasesFailed,proto3" json:"num_releases_failed,omitempty"`
	NumRenewsFailed                  uint32   `protobuf:"varint,85,opt,name=num_renews_failed,json=numRenewsFailed,proto3" json:"num_renews_failed,omitempty"`
	NumRebindsFailed                 uint32   `protobuf:"varint,86,opt,name=num_rebinds_failed,json=numRebindsFailed,proto3" json:"num_rebinds_failed,omitempty"`
	NumDeclinesFailed                uint32   `protobuf:"varint,87,opt,name=num_declines_failed,json=numDeclinesFailed,proto3" json:"num_declines_failed,omitempty"`
	NumRequestAfterRebootFailed      uint32   `protobuf:"varint,88,opt,name=num_request_after_reboot_failed,json=numRequestAfterRebootFailed,proto3" json:"num_request_after_reboot_failed,omitempty"`
	NumInvalidOffers                 uint32   `protobuf:"varint,89,opt,name=num_invalid_offers,json=numInvalidOffers,proto3" json:"num_invalid_offers,omitempty"`
	NumInvalidAcks                   uint32   `protobuf:"varint,90,opt,name=num_invalid_acks,json=numInvalidAcks,proto3" json:"num_invalid_acks,omitempty"`
	NumInvalidNacks                  uint32   `protobuf:"varint,91,opt,name=num_invalid_nacks,json=numInvalidNacks,proto3" json:"num_invalid_nacks,omitempty"`
	NumInvalidPackets                uint32   `protobuf:"varint,92,opt,name=num_invalid_packets,json=numInvalidPackets,proto3" json:"num_invalid_packets,omitempty"`
	NumUnicastFailed                 uint32   `protobuf:"varint,93,opt,name=num_unicast_failed,json=numUnicastFailed,proto3" json:"num_unicast_failed,omitempty"`
	NumBroadcastFailed               uint32   `protobuf:"varint,94,opt,name=num_broadcast_failed,json=numBroadcastFailed,proto3" json:"num_broadcast_failed,omitempty"`
	NumXidMismatch                   uint32   `protobuf:"varint,95,opt,name=num_xid_mismatch,json=numXidMismatch,proto3" json:"num_xid_mismatch,omitempty"`
	XXX_NoUnkeyedLiteral             struct{} `json:"-"`
	XXX_unrecognized                 []byte   `json:"-"`
	XXX_sizecache                    int32    `json:"-"`
}

func (m *DhcpcEdmClientIpv4StatsBag) Reset()         { *m = DhcpcEdmClientIpv4StatsBag{} }
func (m *DhcpcEdmClientIpv4StatsBag) String() string { return proto.CompactTextString(m) }
func (*DhcpcEdmClientIpv4StatsBag) ProtoMessage()    {}
func (*DhcpcEdmClientIpv4StatsBag) Descriptor() ([]byte, []int) {
	return fileDescriptor_9747d90a82ec3916, []int{1}
}

func (m *DhcpcEdmClientIpv4StatsBag) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DhcpcEdmClientIpv4StatsBag.Unmarshal(m, b)
}
func (m *DhcpcEdmClientIpv4StatsBag) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DhcpcEdmClientIpv4StatsBag.Marshal(b, m, deterministic)
}
func (m *DhcpcEdmClientIpv4StatsBag) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DhcpcEdmClientIpv4StatsBag.Merge(m, src)
}
func (m *DhcpcEdmClientIpv4StatsBag) XXX_Size() int {
	return xxx_messageInfo_DhcpcEdmClientIpv4StatsBag.Size(m)
}
func (m *DhcpcEdmClientIpv4StatsBag) XXX_DiscardUnknown() {
	xxx_messageInfo_DhcpcEdmClientIpv4StatsBag.DiscardUnknown(m)
}

var xxx_messageInfo_DhcpcEdmClientIpv4StatsBag proto.InternalMessageInfo

func (m *DhcpcEdmClientIpv4StatsBag) GetInterfaceName() string {
	if m != nil {
		return m.InterfaceName
	}
	return ""
}

func (m *DhcpcEdmClientIpv4StatsBag) GetNumEventsReceived() uint32 {
	if m != nil {
		return m.NumEventsReceived
	}
	return 0
}

func (m *DhcpcEdmClientIpv4StatsBag) GetNumCreateEventReceived() uint32 {
	if m != nil {
		return m.NumCreateEventReceived
	}
	return 0
}

func (m *DhcpcEdmClientIpv4StatsBag) GetNumDeleteEventReceived() uint32 {
	if m != nil {
		return m.NumDeleteEventReceived
	}
	return 0
}

func (m *DhcpcEdmClientIpv4StatsBag) GetNumRebootEventReceived() uint32 {
	if m != nil {
		return m.NumRebootEventReceived
	}
	return 0
}

func (m *DhcpcEdmClientIpv4StatsBag) GetNumReinitEventReceived() uint32 {
	if m != nil {
		return m.NumReinitEventReceived
	}
	return 0
}

func (m *DhcpcEdmClientIpv4StatsBag) GetNumPacketEventReceived() uint32 {
	if m != nil {
		return m.NumPacketEventReceived
	}
	return 0
}

func (m *DhcpcEdmClientIpv4StatsBag) GetNumInitTimerEventi() uint32 {
	if m != nil {
		return m.NumInitTimerEventi
	}
	return 0
}

func (m *DhcpcEdmClientIpv4StatsBag) GetNumT1TimerEvent() uint32 {
	if m != nil {
		return m.NumT1TimerEvent
	}
	return 0
}

func (m *DhcpcEdmClientIpv4StatsBag) GetNumT2TimerEvent() uint32 {
	if m != nil {
		return m.NumT2TimerEvent
	}
	return 0
}

func (m *DhcpcEdmClientIpv4StatsBag) GetNumLeaseTimerEvent() uint32 {
	if m != nil {
		return m.NumLeaseTimerEvent
	}
	return 0
}

func (m *DhcpcEdmClientIpv4StatsBag) GetNumDiscoversSentSuccessfully() uint32 {
	if m != nil {
		return m.NumDiscoversSentSuccessfully
	}
	return 0
}

func (m *DhcpcEdmClientIpv4StatsBag) GetNumRequestsSentSuccessfully() uint32 {
	if m != nil {
		return m.NumRequestsSentSuccessfully
	}
	return 0
}

func (m *DhcpcEdmClientIpv4StatsBag) GetNumReleasesSentSuccessfully() uint32 {
	if m != nil {
		return m.NumReleasesSentSuccessfully
	}
	return 0
}

func (m *DhcpcEdmClientIpv4StatsBag) GetNumRenewsSentSuccessfully() uint32 {
	if m != nil {
		return m.NumRenewsSentSuccessfully
	}
	return 0
}

func (m *DhcpcEdmClientIpv4StatsBag) GetNumRebindsSentSuccessfully() uint32 {
	if m != nil {
		return m.NumRebindsSentSuccessfully
	}
	return 0
}

func (m *DhcpcEdmClientIpv4StatsBag) GetNumDeclinesSentSuccessfully() uint32 {
	if m != nil {
		return m.NumDeclinesSentSuccessfully
	}
	return 0
}

func (m *DhcpcEdmClientIpv4StatsBag) GetNumRequestAfterRebootSent() uint32 {
	if m != nil {
		return m.NumRequestAfterRebootSent
	}
	return 0
}

func (m *DhcpcEdmClientIpv4StatsBag) GetNumValidOffersReceived() uint32 {
	if m != nil {
		return m.NumValidOffersReceived
	}
	return 0
}

func (m *DhcpcEdmClientIpv4StatsBag) GetNumValidAcksReceived() uint32 {
	if m != nil {
		return m.NumValidAcksReceived
	}
	return 0
}

func (m *DhcpcEdmClientIpv4StatsBag) GetNumValidNacksReceived() uint32 {
	if m != nil {
		return m.NumValidNacksReceived
	}
	return 0
}

func (m *DhcpcEdmClientIpv4StatsBag) GetNumUnicastPacketSentSuccessfully() uint32 {
	if m != nil {
		return m.NumUnicastPacketSentSuccessfully
	}
	return 0
}

func (m *DhcpcEdmClientIpv4StatsBag) GetNumBroadcastPacketSentSuccess() uint32 {
	if m != nil {
		return m.NumBroadcastPacketSentSuccess
	}
	return 0
}

func (m *DhcpcEdmClientIpv4StatsBag) GetNumInitTimerStart() uint32 {
	if m != nil {
		return m.NumInitTimerStart
	}
	return 0
}

func (m *DhcpcEdmClientIpv4StatsBag) GetNumInitTimerStop() uint32 {
	if m != nil {
		return m.NumInitTimerStop
	}
	return 0
}

func (m *DhcpcEdmClientIpv4StatsBag) GetNumT1TimerStart() uint32 {
	if m != nil {
		return m.NumT1TimerStart
	}
	return 0
}

func (m *DhcpcEdmClientIpv4StatsBag) GetNumT1TimerStop() uint32 {
	if m != nil {
		return m.NumT1TimerStop
	}
	return 0
}

func (m *DhcpcEdmClientIpv4StatsBag) GetNumT2TimerStart() uint32 {
	if m != nil {
		return m.NumT2TimerStart
	}
	return 0
}

func (m *DhcpcEdmClientIpv4StatsBag) GetNumT2TimerStop() uint32 {
	if m != nil {
		return m.NumT2TimerStop
	}
	return 0
}

func (m *DhcpcEdmClientIpv4StatsBag) GetNumLeaseTimerStart() uint32 {
	if m != nil {
		return m.NumLeaseTimerStart
	}
	return 0
}

func (m *DhcpcEdmClientIpv4StatsBag) GetNumLeaseTimerStop() uint32 {
	if m != nil {
		return m.NumLeaseTimerStop
	}
	return 0
}

func (m *DhcpcEdmClientIpv4StatsBag) GetNumInvalidEvents() uint32 {
	if m != nil {
		return m.NumInvalidEvents
	}
	return 0
}

func (m *DhcpcEdmClientIpv4StatsBag) GetNumDiscoversFailed() uint32 {
	if m != nil {
		return m.NumDiscoversFailed
	}
	return 0
}

func (m *DhcpcEdmClientIpv4StatsBag) GetNumRequestsFailed() uint32 {
	if m != nil {
		return m.NumRequestsFailed
	}
	return 0
}

func (m *DhcpcEdmClientIpv4StatsBag) GetNumReleasesFailed() uint32 {
	if m != nil {
		return m.NumReleasesFailed
	}
	return 0
}

func (m *DhcpcEdmClientIpv4StatsBag) GetNumRenewsFailed() uint32 {
	if m != nil {
		return m.NumRenewsFailed
	}
	return 0
}

func (m *DhcpcEdmClientIpv4StatsBag) GetNumRebindsFailed() uint32 {
	if m != nil {
		return m.NumRebindsFailed
	}
	return 0
}

func (m *DhcpcEdmClientIpv4StatsBag) GetNumDeclinesFailed() uint32 {
	if m != nil {
		return m.NumDeclinesFailed
	}
	return 0
}

func (m *DhcpcEdmClientIpv4StatsBag) GetNumRequestAfterRebootFailed() uint32 {
	if m != nil {
		return m.NumRequestAfterRebootFailed
	}
	return 0
}

func (m *DhcpcEdmClientIpv4StatsBag) GetNumInvalidOffers() uint32 {
	if m != nil {
		return m.NumInvalidOffers
	}
	return 0
}

func (m *DhcpcEdmClientIpv4StatsBag) GetNumInvalidAcks() uint32 {
	if m != nil {
		return m.NumInvalidAcks
	}
	return 0
}

func (m *DhcpcEdmClientIpv4StatsBag) GetNumInvalidNacks() uint32 {
	if m != nil {
		return m.NumInvalidNacks
	}
	return 0
}

func (m *DhcpcEdmClientIpv4StatsBag) GetNumInvalidPackets() uint32 {
	if m != nil {
		return m.NumInvalidPackets
	}
	return 0
}

func (m *DhcpcEdmClientIpv4StatsBag) GetNumUnicastFailed() uint32 {
	if m != nil {
		return m.NumUnicastFailed
	}
	return 0
}

func (m *DhcpcEdmClientIpv4StatsBag) GetNumBroadcastFailed() uint32 {
	if m != nil {
		return m.NumBroadcastFailed
	}
	return 0
}

func (m *DhcpcEdmClientIpv4StatsBag) GetNumXidMismatch() uint32 {
	if m != nil {
		return m.NumXidMismatch
	}
	return 0
}

func init() {
	proto.RegisterType((*DhcpcEdmClientIpv4StatsBag_KEYS)(nil), "cisco_ios_xr_ipv4_dhcpd_oper.dhcp_client.nodes.node.client_stats.client_stat.dhcpc_edm_client_ipv4_stats_bag_KEYS")
	proto.RegisterType((*DhcpcEdmClientIpv4StatsBag)(nil), "cisco_ios_xr_ipv4_dhcpd_oper.dhcp_client.nodes.node.client_stats.client_stat.dhcpc_edm_client_ipv4_stats_bag")
}

func init() {
	proto.RegisterFile("dhcpc_edm_client_ipv4_stats_bag.proto", fileDescriptor_9747d90a82ec3916)
}

var fileDescriptor_9747d90a82ec3916 = []byte{
	// 947 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x96, 0x7b, 0x73, 0xd4, 0x36,
	0x14, 0xc5, 0x27, 0xfd, 0xa3, 0x53, 0x34, 0x43, 0x00, 0x03, 0xad, 0x28, 0xb4, 0xa4, 0x0c, 0x4c,
	0xd3, 0xd7, 0xb6, 0x59, 0xa0, 0x94, 0xbe, 0x20, 0x24, 0xa1, 0xa4, 0x84, 0x85, 0xee, 0x06, 0x0a,
	0x7d, 0x69, 0xb4, 0xb2, 0xb6, 0xd1, 0xc4, 0x96, 0x5d, 0x4b, 0xde, 0xd2, 0xaf, 0xd7, 0x4f, 0xc6,
	0xe8, 0xea, 0x61, 0xf9, 0xb1, 0x93, 0x7f, 0x32, 0x89, 0xef, 0xf9, 0x1d, 0xeb, 0x5e, 0x49, 0xc7,
	0x41, 0x37, 0xd2, 0x23, 0x56, 0x32, 0xc2, 0xd3, 0x9c, 0xb0, 0x4c, 0x70, 0xa9, 0x89, 0x28, 0x97,
	0xb7, 0x88, 0xd2, 0x54, 0x2b, 0x32, 0xa7, 0x7f, 0x8f, 0xca, 0xaa, 0xd0, 0x45, 0x72, 0xc0, 0x84,
	0x62, 0x05, 0x11, 0x85, 0x22, 0xaf, 0x2b, 0x2b, 0x31, 0x60, 0x4a, 0x8a, 0x92, 0x57, 0x23, 0xf3,
	0xab, 0xc3, 0x47, 0xb2, 0x48, 0xb9, 0x82, 0x9f, 0x23, 0x67, 0x08, 0x5e, 0xf1, 0x1f, 0xd7, 0x32,
	0x74, 0xfd, 0x84, 0xd7, 0x92, 0xc7, 0x7b, 0xaf, 0x66, 0xc9, 0x65, 0x74, 0xca, 0x18, 0x11, 0x49,
	0x73, 0x8e, 0xd7, 0x36, 0xd6, 0x36, 0x4f, 0x4d, 0xdf, 0x31, 0x0f, 0x26, 0x34, 0xe7, 0xc9, 0xc7,
	0xe8, 0x8c, 0x47, 0x17, 0x47, 0x54, 0xa6, 0x19, 0xc7, 0x6f, 0x81, 0x64, 0xdd, 0x3e, 0xde, 0x77,
	0x4f, 0xaf, 0xfd, 0x7f, 0x1e, 0x5d, 0x3d, 0xe1, 0x75, 0xc9, 0x0d, 0xb4, 0x2e, 0xa4, 0xe6, 0xd5,
	0x82, 0x32, 0xf7, 0xba, 0x31, 0x78, 0x9d, 0x0e, 0x4f, 0xe1, 0x9d, 0x23, 0x74, 0x5e, 0xd6, 0x39,
	0xe1, 0x4b, 0x2e, 0xb5, 0x22, 0x15, 0x67, 0x5c, 0x2c, 0x79, 0x8a, 0x6f, 0x6e, 0xac, 0x6d, 0x9e,
	0x9e, 0x9e, 0x93, 0x75, 0xbe, 0x07, 0x95, 0xa9, 0x2b, 0x24, 0x77, 0xd1, 0x25, 0xa3, 0x67, 0x15,
	0xa7, 0x9a, 0x5b, 0xac, 0xa1, 0x6e, 0x01, 0xf5, 0xae, 0xac, 0xf3, 0x1d, 0xa8, 0x03, 0xdb, 0x45,
	0x53, 0x9e, 0xf1, 0x3e, 0x7a, 0x3b, 0xa0, 0xbb, 0x50, 0x1f, 0x44, 0x2b, 0x3e, 0x2f, 0x0a, 0xdd,
	0x45, 0xbf, 0x0e, 0xe8, 0x14, 0xea, 0x2b, 0x50, 0x21, 0x45, 0x0f, 0xbd, 0x13, 0xa1, 0xa6, 0x3e,
	0x88, 0x96, 0x94, 0x1d, 0xf3, 0x1e, 0xfa, 0x4d, 0x40, 0x9f, 0x41, 0xbd, 0x8d, 0x6e, 0xa1, 0x8b,
	0x06, 0x85, 0x77, 0x6a, 0x91, 0xf3, 0xca, 0xe2, 0x02, 0xdf, 0x05, 0x2c, 0x91, 0x75, 0xbe, 0x2f,
	0x85, 0x3e, 0x34, 0x25, 0x20, 0x45, 0xf2, 0x19, 0x32, 0x4f, 0x89, 0xde, 0x8a, 0x01, 0xfc, 0x2d,
	0xe8, 0xcf, 0xc8, 0x3a, 0x3f, 0xdc, 0x6a, 0xd4, 0x41, 0x3c, 0x6e, 0x89, 0xbf, 0x6b, 0xc4, 0xe3,
	0x48, 0xec, 0x16, 0x93, 0x71, 0xaa, 0x78, 0x4b, 0xff, 0x7d, 0x58, 0xcc, 0x81, 0xa9, 0x45, 0xc8,
	0x1e, 0xba, 0x0a, 0x7b, 0x65, 0xee, 0xc8, 0x92, 0x57, 0x8a, 0x28, 0x38, 0xea, 0x35, 0x63, 0x5c,
	0xa9, 0x45, 0x9d, 0x65, 0xff, 0xe1, 0x1f, 0x00, 0xbe, 0x62, 0x76, 0xcc, 0xab, 0x66, 0x5c, 0xea,
	0x59, 0xa4, 0x49, 0x76, 0xd0, 0x87, 0x76, 0xf8, 0xff, 0xd4, 0x5c, 0xe9, 0x21, 0x97, 0x1f, 0xc1,
	0xe5, 0x32, 0xec, 0x80, 0x15, 0xad, 0x36, 0x81, 0x06, 0x86, 0x4c, 0xee, 0x45, 0x26, 0x56, 0xd4,
	0x33, 0xb9, 0x87, 0xae, 0x58, 0x13, 0xc9, 0xff, 0x1d, 0xb2, 0xb8, 0x0f, 0x16, 0x97, 0xc0, 0xc2,
	0x48, 0x7a, 0x06, 0xdb, 0xe8, 0x03, 0x77, 0x04, 0x85, 0x4c, 0x87, 0x1c, 0xb6, 0xc1, 0xe1, 0x7d,
	0x7b, 0x0c, 0x8d, 0x66, 0x55, 0x23, 0x29, 0x67, 0x99, 0x90, 0x83, 0x8d, 0x3c, 0x08, 0x8d, 0xec,
	0x3a, 0x51, 0xcf, 0xe4, 0xbe, 0x5f, 0x07, 0x4c, 0x8b, 0xd0, 0x85, 0xe6, 0x95, 0xbf, 0x18, 0xc6,
	0x10, 0xef, 0x44, 0x9d, 0x80, 0x66, 0xdb, 0x48, 0xec, 0xd5, 0x30, 0x6e, 0xfe, 0x58, 0x2f, 0x69,
	0x26, 0x52, 0x52, 0x2c, 0x16, 0x66, 0x7b, 0xc3, 0xb1, 0xde, 0x0d, 0xc7, 0xfa, 0x85, 0xa9, 0x3f,
	0x85, 0x72, 0x38, 0xd6, 0xb7, 0xd1, 0x7b, 0x0d, 0x4a, 0xd9, 0x71, 0x04, 0xee, 0x01, 0x78, 0xc1,
	0x83, 0xdb, 0xec, 0xb8, 0xc1, 0xee, 0x20, 0xdc, 0x60, 0xb2, 0xcd, 0x3d, 0x04, 0xee, 0xa2, 0xe7,
	0x26, 0x34, 0x06, 0x27, 0xe8, 0xba, 0x01, 0x6b, 0x29, 0x18, 0x55, 0xda, 0xdf, 0xc4, 0xfe, 0xdc,
	0x7e, 0x02, 0x93, 0x0d, 0x59, 0xe7, 0xcf, 0xad, 0xd4, 0xde, 0xc9, 0xde, 0xf0, 0x1e, 0xa1, 0x8f,
	0x8c, 0xdf, 0xbc, 0x2a, 0x68, 0xba, 0xca, 0x11, 0x3f, 0x02, 0x33, 0x33, 0xe5, 0x07, 0x5e, 0xd7,
	0xb3, 0x4b, 0xbe, 0x44, 0x17, 0x3a, 0x17, 0x5c, 0x69, 0x5a, 0x69, 0xbc, 0x1f, 0x82, 0x33, 0xdc,
	0xef, 0x99, 0x29, 0x24, 0x5f, 0xd8, 0xa0, 0x6d, 0x01, 0x45, 0x89, 0x7f, 0x06, 0xfd, 0xd9, 0xb6,
	0xbe, 0x28, 0x7b, 0x69, 0x60, 0xdd, 0x1f, 0x77, 0xd3, 0xc0, 0x7a, 0x7f, 0x82, 0xce, 0x75, 0xc4,
	0x45, 0x89, 0x0f, 0x40, 0xbb, 0x1e, 0x6b, 0x23, 0xdf, 0x71, 0xcb, 0xf7, 0x49, 0x37, 0x38, 0xda,
	0xbe, 0xe3, 0xd8, 0x77, 0xd2, 0xf8, 0x8e, 0x1b, 0xdf, 0x81, 0x8c, 0xb1, 0xd6, 0x4f, 0x07, 0x32,
	0xc6, 0xba, 0xbb, 0x11, 0xb6, 0x91, 0xa2, 0xc4, 0xcf, 0xc2, 0x08, 0x63, 0xa2, 0x28, 0x93, 0xcf,
	0xed, 0xda, 0x85, 0xb4, 0x07, 0xc9, 0x7e, 0xb3, 0xf0, 0x2f, 0xd1, 0x04, 0xa1, 0x60, 0xbf, 0x58,
	0xc9, 0x57, 0xd6, 0xbe, 0x89, 0xb0, 0x05, 0x15, 0x19, 0x4f, 0xf1, 0x34, 0x2c, 0x28, 0xe4, 0xd6,
	0x43, 0xa8, 0xf8, 0x6f, 0x61, 0x48, 0x2b, 0x07, 0xcc, 0xc2, 0x7a, 0x7c, 0x44, 0x75, 0xf5, 0x2e,
	0x98, 0x9c, 0xfe, 0x30, 0xd2, 0xdb, 0x8a, 0xd3, 0x7f, 0x6a, 0xc7, 0xe9, 0x32, 0xc8, 0xa9, 0x9f,
	0x87, 0xd1, 0xdb, 0xe0, 0x71, 0x5a, 0xd7, 0xab, 0x8f, 0x1b, 0x27, 0x7e, 0x11, 0x7a, 0x75, 0x19,
	0xd3, 0x5e, 0x49, 0x48, 0x16, 0x27, 0xff, 0x35, 0xac, 0xc4, 0xc7, 0x89, 0xd3, 0xef, 0xda, 0x78,
	0x1f, 0x0c, 0x11, 0xc7, 0xbe, 0xec, 0x06, 0x73, 0x14, 0x23, 0xed, 0x35, 0xfa, 0xfd, 0xb0, 0x51,
	0x82, 0x5f, 0x75, 0xf7, 0xc3, 0x66, 0x48, 0xb2, 0x89, 0xce, 0xc6, 0x6a, 0x73, 0xcf, 0xf1, 0x6f,
	0xe1, 0x2c, 0x39, 0xad, 0x89, 0x0d, 0x3f, 0x27, 0xaf, 0x84, 0xc0, 0xc0, 0xbf, 0x87, 0x39, 0x39,
	0x29, 0x24, 0x85, 0xef, 0xdc, 0x6b, 0xed, 0x7d, 0x56, 0xf8, 0x8f, 0xe8, 0x1a, 0x42, 0xc5, 0xde,
	0x60, 0xe5, 0xd7, 0xec, 0x13, 0xc5, 0x35, 0xfb, 0x67, 0x58, 0xb3, 0xcb, 0x0f, 0xd7, 0xa1, 0x3b,
	0x43, 0x4d, 0x5e, 0x38, 0xfd, 0x5f, 0xe1, 0x0c, 0x85, 0x88, 0x70, 0x84, 0xeb, 0xf2, 0xb5, 0x48,
	0x49, 0x2e, 0x54, 0x4e, 0x35, 0x3b, 0xc2, 0x24, 0x74, 0xf9, 0x52, 0xa4, 0x4f, 0xdc, 0xd3, 0xf9,
	0xdb, 0xf0, 0x7f, 0xe8, 0xcd, 0x37, 0x01, 0x00, 0x00, 0xff, 0xff, 0x0f, 0x3d, 0x03, 0x86, 0xb0,
	0x0a, 0x00, 0x00,
}
