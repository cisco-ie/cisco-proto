/*
Copyright 2019 Cisco Systems

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: optics_edm_lane_data.proto

package cisco_ios_xr_controller_optics_oper_optics_oper_optics_ports_optics_port_optics_lanes_optics_lane

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type OpticsEdmLaneData_KEYS struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Number               uint32   `protobuf:"varint,2,opt,name=number,proto3" json:"number,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OpticsEdmLaneData_KEYS) Reset()         { *m = OpticsEdmLaneData_KEYS{} }
func (m *OpticsEdmLaneData_KEYS) String() string { return proto.CompactTextString(m) }
func (*OpticsEdmLaneData_KEYS) ProtoMessage()    {}
func (*OpticsEdmLaneData_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_610dcff6840e6c13, []int{0}
}

func (m *OpticsEdmLaneData_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OpticsEdmLaneData_KEYS.Unmarshal(m, b)
}
func (m *OpticsEdmLaneData_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OpticsEdmLaneData_KEYS.Marshal(b, m, deterministic)
}
func (m *OpticsEdmLaneData_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OpticsEdmLaneData_KEYS.Merge(m, src)
}
func (m *OpticsEdmLaneData_KEYS) XXX_Size() int {
	return xxx_messageInfo_OpticsEdmLaneData_KEYS.Size(m)
}
func (m *OpticsEdmLaneData_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_OpticsEdmLaneData_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_OpticsEdmLaneData_KEYS proto.InternalMessageInfo

func (m *OpticsEdmLaneData_KEYS) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *OpticsEdmLaneData_KEYS) GetNumber() uint32 {
	if m != nil {
		return m.Number
	}
	return 0
}

type LaneAlarmDetail struct {
	IsDetected           bool     `protobuf:"varint,1,opt,name=is_detected,json=isDetected,proto3" json:"is_detected,omitempty"`
	Counter              uint32   `protobuf:"varint,2,opt,name=counter,proto3" json:"counter,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LaneAlarmDetail) Reset()         { *m = LaneAlarmDetail{} }
func (m *LaneAlarmDetail) String() string { return proto.CompactTextString(m) }
func (*LaneAlarmDetail) ProtoMessage()    {}
func (*LaneAlarmDetail) Descriptor() ([]byte, []int) {
	return fileDescriptor_610dcff6840e6c13, []int{1}
}

func (m *LaneAlarmDetail) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LaneAlarmDetail.Unmarshal(m, b)
}
func (m *LaneAlarmDetail) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LaneAlarmDetail.Marshal(b, m, deterministic)
}
func (m *LaneAlarmDetail) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LaneAlarmDetail.Merge(m, src)
}
func (m *LaneAlarmDetail) XXX_Size() int {
	return xxx_messageInfo_LaneAlarmDetail.Size(m)
}
func (m *LaneAlarmDetail) XXX_DiscardUnknown() {
	xxx_messageInfo_LaneAlarmDetail.DiscardUnknown(m)
}

var xxx_messageInfo_LaneAlarmDetail proto.InternalMessageInfo

func (m *LaneAlarmDetail) GetIsDetected() bool {
	if m != nil {
		return m.IsDetected
	}
	return false
}

func (m *LaneAlarmDetail) GetCounter() uint32 {
	if m != nil {
		return m.Counter
	}
	return 0
}

type LaneEdmAlarmInfo struct {
	HighRxPower          *LaneAlarmDetail `protobuf:"bytes,1,opt,name=high_rx_power,json=highRxPower,proto3" json:"high_rx_power,omitempty"`
	LowRxPower           *LaneAlarmDetail `protobuf:"bytes,2,opt,name=low_rx_power,json=lowRxPower,proto3" json:"low_rx_power,omitempty"`
	HighTxPower          *LaneAlarmDetail `protobuf:"bytes,3,opt,name=high_tx_power,json=highTxPower,proto3" json:"high_tx_power,omitempty"`
	LowTxPower           *LaneAlarmDetail `protobuf:"bytes,4,opt,name=low_tx_power,json=lowTxPower,proto3" json:"low_tx_power,omitempty"`
	HighLbc              *LaneAlarmDetail `protobuf:"bytes,5,opt,name=high_lbc,json=highLbc,proto3" json:"high_lbc,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *LaneEdmAlarmInfo) Reset()         { *m = LaneEdmAlarmInfo{} }
func (m *LaneEdmAlarmInfo) String() string { return proto.CompactTextString(m) }
func (*LaneEdmAlarmInfo) ProtoMessage()    {}
func (*LaneEdmAlarmInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_610dcff6840e6c13, []int{2}
}

func (m *LaneEdmAlarmInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LaneEdmAlarmInfo.Unmarshal(m, b)
}
func (m *LaneEdmAlarmInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LaneEdmAlarmInfo.Marshal(b, m, deterministic)
}
func (m *LaneEdmAlarmInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LaneEdmAlarmInfo.Merge(m, src)
}
func (m *LaneEdmAlarmInfo) XXX_Size() int {
	return xxx_messageInfo_LaneEdmAlarmInfo.Size(m)
}
func (m *LaneEdmAlarmInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_LaneEdmAlarmInfo.DiscardUnknown(m)
}

var xxx_messageInfo_LaneEdmAlarmInfo proto.InternalMessageInfo

func (m *LaneEdmAlarmInfo) GetHighRxPower() *LaneAlarmDetail {
	if m != nil {
		return m.HighRxPower
	}
	return nil
}

func (m *LaneEdmAlarmInfo) GetLowRxPower() *LaneAlarmDetail {
	if m != nil {
		return m.LowRxPower
	}
	return nil
}

func (m *LaneEdmAlarmInfo) GetHighTxPower() *LaneAlarmDetail {
	if m != nil {
		return m.HighTxPower
	}
	return nil
}

func (m *LaneEdmAlarmInfo) GetLowTxPower() *LaneAlarmDetail {
	if m != nil {
		return m.LowTxPower
	}
	return nil
}

func (m *LaneEdmAlarmInfo) GetHighLbc() *LaneAlarmDetail {
	if m != nil {
		return m.HighLbc
	}
	return nil
}

type OpticsEdmLaneData struct {
	LaneIndex                 uint32            `protobuf:"varint,50,opt,name=lane_index,json=laneIndex,proto3" json:"lane_index,omitempty"`
	LaserBiasCurrentPercent   uint32            `protobuf:"varint,51,opt,name=laser_bias_current_percent,json=laserBiasCurrentPercent,proto3" json:"laser_bias_current_percent,omitempty"`
	LaserBiasCurrentMilliAmps uint32            `protobuf:"varint,52,opt,name=laser_bias_current_milli_amps,json=laserBiasCurrentMilliAmps,proto3" json:"laser_bias_current_milli_amps,omitempty"`
	TransmitPower             int32             `protobuf:"zigzag32,53,opt,name=transmit_power,json=transmitPower,proto3" json:"transmit_power,omitempty"`
	ReceivePower              int32             `protobuf:"zigzag32,54,opt,name=receive_power,json=receivePower,proto3" json:"receive_power,omitempty"`
	ReceiveSignalPower        int32             `protobuf:"zigzag32,55,opt,name=receive_signal_power,json=receiveSignalPower,proto3" json:"receive_signal_power,omitempty"`
	TransmitSignalPower       int32             `protobuf:"zigzag32,56,opt,name=transmit_signal_power,json=transmitSignalPower,proto3" json:"transmit_signal_power,omitempty"`
	OutputFrequency           int32             `protobuf:"zigzag32,57,opt,name=output_frequency,json=outputFrequency,proto3" json:"output_frequency,omitempty"`
	LaneAlarmInfo             *LaneEdmAlarmInfo `protobuf:"bytes,58,opt,name=lane_alarm_info,json=laneAlarmInfo,proto3" json:"lane_alarm_info,omitempty"`
	XXX_NoUnkeyedLiteral      struct{}          `json:"-"`
	XXX_unrecognized          []byte            `json:"-"`
	XXX_sizecache             int32             `json:"-"`
}

func (m *OpticsEdmLaneData) Reset()         { *m = OpticsEdmLaneData{} }
func (m *OpticsEdmLaneData) String() string { return proto.CompactTextString(m) }
func (*OpticsEdmLaneData) ProtoMessage()    {}
func (*OpticsEdmLaneData) Descriptor() ([]byte, []int) {
	return fileDescriptor_610dcff6840e6c13, []int{3}
}

func (m *OpticsEdmLaneData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OpticsEdmLaneData.Unmarshal(m, b)
}
func (m *OpticsEdmLaneData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OpticsEdmLaneData.Marshal(b, m, deterministic)
}
func (m *OpticsEdmLaneData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OpticsEdmLaneData.Merge(m, src)
}
func (m *OpticsEdmLaneData) XXX_Size() int {
	return xxx_messageInfo_OpticsEdmLaneData.Size(m)
}
func (m *OpticsEdmLaneData) XXX_DiscardUnknown() {
	xxx_messageInfo_OpticsEdmLaneData.DiscardUnknown(m)
}

var xxx_messageInfo_OpticsEdmLaneData proto.InternalMessageInfo

func (m *OpticsEdmLaneData) GetLaneIndex() uint32 {
	if m != nil {
		return m.LaneIndex
	}
	return 0
}

func (m *OpticsEdmLaneData) GetLaserBiasCurrentPercent() uint32 {
	if m != nil {
		return m.LaserBiasCurrentPercent
	}
	return 0
}

func (m *OpticsEdmLaneData) GetLaserBiasCurrentMilliAmps() uint32 {
	if m != nil {
		return m.LaserBiasCurrentMilliAmps
	}
	return 0
}

func (m *OpticsEdmLaneData) GetTransmitPower() int32 {
	if m != nil {
		return m.TransmitPower
	}
	return 0
}

func (m *OpticsEdmLaneData) GetReceivePower() int32 {
	if m != nil {
		return m.ReceivePower
	}
	return 0
}

func (m *OpticsEdmLaneData) GetReceiveSignalPower() int32 {
	if m != nil {
		return m.ReceiveSignalPower
	}
	return 0
}

func (m *OpticsEdmLaneData) GetTransmitSignalPower() int32 {
	if m != nil {
		return m.TransmitSignalPower
	}
	return 0
}

func (m *OpticsEdmLaneData) GetOutputFrequency() int32 {
	if m != nil {
		return m.OutputFrequency
	}
	return 0
}

func (m *OpticsEdmLaneData) GetLaneAlarmInfo() *LaneEdmAlarmInfo {
	if m != nil {
		return m.LaneAlarmInfo
	}
	return nil
}

func init() {
	proto.RegisterType((*OpticsEdmLaneData_KEYS)(nil), "cisco_ios_xr_controller_optics_oper.optics_oper.optics_ports.optics_port.optics_lanes.optics_lane.optics_edm_lane_data_KEYS")
	proto.RegisterType((*LaneAlarmDetail)(nil), "cisco_ios_xr_controller_optics_oper.optics_oper.optics_ports.optics_port.optics_lanes.optics_lane.lane_alarm_detail")
	proto.RegisterType((*LaneEdmAlarmInfo)(nil), "cisco_ios_xr_controller_optics_oper.optics_oper.optics_ports.optics_port.optics_lanes.optics_lane.lane_edm_alarm_info")
	proto.RegisterType((*OpticsEdmLaneData)(nil), "cisco_ios_xr_controller_optics_oper.optics_oper.optics_ports.optics_port.optics_lanes.optics_lane.optics_edm_lane_data")
}

func init() { proto.RegisterFile("optics_edm_lane_data.proto", fileDescriptor_610dcff6840e6c13) }

var fileDescriptor_610dcff6840e6c13 = []byte{
	// 528 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xc4, 0x55, 0xcb, 0x6e, 0x13, 0x31,
	0x14, 0xd5, 0x94, 0x92, 0xb6, 0x37, 0x0d, 0xa5, 0x6e, 0x81, 0x69, 0xa5, 0x8a, 0x28, 0x08, 0x29,
	0x6c, 0x22, 0x94, 0xf2, 0x66, 0x43, 0x79, 0xaa, 0xe2, 0xa1, 0x6a, 0xca, 0x86, 0x95, 0xe5, 0xf1,
	0xdc, 0xb4, 0x96, 0x3c, 0xf6, 0x60, 0x7b, 0x9a, 0xf0, 0x15, 0xdd, 0x21, 0x56, 0x7c, 0x04, 0x5f,
	0x88, 0xec, 0x99, 0x09, 0x69, 0xc9, 0x16, 0xb2, 0xf3, 0x3d, 0xf7, 0x9c, 0x3b, 0x27, 0xc7, 0x8f,
	0xc0, 0xae, 0x2e, 0x9c, 0xe0, 0x96, 0x62, 0x96, 0x53, 0xc9, 0x14, 0xd2, 0x8c, 0x39, 0x36, 0x28,
	0x8c, 0x76, 0x9a, 0x30, 0x2e, 0x2c, 0xd7, 0x54, 0x68, 0x4b, 0x27, 0x86, 0x72, 0xad, 0x9c, 0xd1,
	0x52, 0xa2, 0xa1, 0xb5, 0x46, 0x17, 0x68, 0x06, 0x73, 0xd6, 0x85, 0x36, 0xce, 0xce, 0x16, 0xcd,
	0xda, 0x7f, 0xc0, 0xce, 0x16, 0xbd, 0x77, 0xb0, 0x33, 0xcf, 0x00, 0x7d, 0xff, 0xe6, 0xcb, 0x31,
	0x21, 0xb0, 0xac, 0x58, 0x8e, 0x71, 0xd4, 0x8d, 0xfa, 0x6b, 0x49, 0x58, 0x93, 0x9b, 0xd0, 0x52,
	0x65, 0x9e, 0xa2, 0x89, 0x97, 0xba, 0x51, 0xbf, 0x93, 0xd4, 0x55, 0xef, 0x13, 0x6c, 0x06, 0x35,
	0x93, 0xcc, 0xe4, 0x34, 0x43, 0xc7, 0x84, 0x24, 0xb7, 0xa1, 0x2d, 0xac, 0x2f, 0x90, 0x3b, 0xcc,
	0xc2, 0x9c, 0xd5, 0x04, 0x84, 0x7d, 0x5d, 0x23, 0x24, 0x86, 0x15, 0xae, 0x4b, 0xe5, 0xa6, 0xe3,
	0x9a, 0xb2, 0x77, 0xde, 0x82, 0xad, 0x30, 0xd0, 0xfb, 0xaa, 0x86, 0x0a, 0x35, 0xd2, 0xe4, 0x47,
	0x04, 0x9d, 0x53, 0x71, 0x72, 0x4a, 0xcd, 0x84, 0x16, 0x7a, 0x8c, 0x26, 0x4c, 0x6d, 0x0f, 0xdd,
	0xe0, 0x9f, 0x87, 0x35, 0xf8, 0xeb, 0x07, 0x26, 0x6d, 0x6f, 0x25, 0x99, 0x1c, 0x79, 0x23, 0xe4,
	0x7b, 0x04, 0xeb, 0x52, 0x8f, 0xff, 0x38, 0x5b, 0x5a, 0xa0, 0x33, 0x90, 0x7a, 0xdc, 0x18, 0x9b,
	0x66, 0xe6, 0x1a, 0x67, 0x57, 0x16, 0x9d, 0xd9, 0xe7, 0x4b, 0x99, 0x4d, 0x9d, 0x2d, 0x2f, 0x38,
	0xb3, 0xc6, 0xd8, 0x79, 0x04, 0xab, 0x21, 0x33, 0x99, 0xf2, 0xf8, 0xea, 0x02, 0x4d, 0xad, 0x78,
	0x17, 0x1f, 0x52, 0xde, 0xfb, 0xb5, 0x0c, 0xdb, 0xf3, 0xee, 0x2a, 0xd9, 0x03, 0x08, 0x85, 0x50,
	0x19, 0x4e, 0xe2, 0x61, 0xb8, 0x47, 0x6b, 0x1e, 0x39, 0xf4, 0x00, 0x79, 0x0e, 0xbb, 0x92, 0x59,
	0x34, 0x34, 0x15, 0xcc, 0x52, 0x5e, 0x1a, 0x83, 0xca, 0xd1, 0x02, 0x0d, 0x47, 0xe5, 0xe2, 0xfd,
	0x40, 0xbf, 0x15, 0x18, 0x2f, 0x05, 0xb3, 0xaf, 0xaa, 0xfe, 0x51, 0xd5, 0x26, 0x2f, 0x60, 0x6f,
	0x8e, 0x38, 0x17, 0x52, 0x0a, 0xca, 0xf2, 0xc2, 0xc6, 0x0f, 0x82, 0x7e, 0xe7, 0xb2, 0xfe, 0xa3,
	0x67, 0x1c, 0xe4, 0x85, 0x25, 0x77, 0xe1, 0x9a, 0x33, 0x4c, 0xd9, 0x5c, 0xb8, 0x7a, 0x8b, 0x1f,
	0x76, 0xa3, 0xfe, 0x66, 0xd2, 0x69, 0xd0, 0x2a, 0xef, 0x3b, 0xd0, 0x31, 0xc8, 0x51, 0x9c, 0x61,
	0xcd, 0x7a, 0x14, 0x58, 0xeb, 0x35, 0x58, 0x91, 0xee, 0xc3, 0x76, 0x43, 0xb2, 0xe2, 0x44, 0x31,
	0x59, 0x73, 0x1f, 0x07, 0x2e, 0xa9, 0x7b, 0xc7, 0xa1, 0x55, 0x29, 0x86, 0x70, 0x63, 0xfa, 0xf5,
	0x0b, 0x92, 0x27, 0x41, 0xb2, 0xd5, 0x34, 0x67, 0x35, 0xf7, 0xe0, 0xba, 0x2e, 0x5d, 0x51, 0x3a,
	0x3a, 0x32, 0xf8, 0xb5, 0x44, 0xc5, 0xbf, 0xc5, 0x4f, 0x03, 0x7d, 0xa3, 0xc2, 0xdf, 0x36, 0x30,
	0xf9, 0x19, 0xc1, 0xc6, 0xcc, 0x96, 0xf9, 0x17, 0x2a, 0x7e, 0x16, 0x0e, 0xcb, 0xd9, 0xff, 0x3a,
	0x2c, 0x17, 0xdf, 0xc7, 0xa4, 0xe3, 0xc1, 0x03, 0x5f, 0x1f, 0xaa, 0x91, 0x4e, 0x5b, 0xe1, 0x9f,
	0x64, 0xff, 0x77, 0x00, 0x00, 0x00, 0xff, 0xff, 0x57, 0x0a, 0xfc, 0x12, 0x67, 0x06, 0x00, 0x00,
}
