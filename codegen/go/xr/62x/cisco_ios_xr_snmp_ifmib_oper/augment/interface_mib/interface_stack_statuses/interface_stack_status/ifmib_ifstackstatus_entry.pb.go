/*
Copyright 2019 Cisco Systems

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: ifmib_ifstackstatus_entry.proto

package cisco_ios_xr_snmp_ifmib_oper_augment_interface_mib_interface_stack_statuses_interface_stack_status

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type IfmibIfstackstatusEntry_KEYS struct {
	InterfaceStackStatus string   `protobuf:"bytes,1,opt,name=interface_stack_status,json=interfaceStackStatus,proto3" json:"interface_stack_status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IfmibIfstackstatusEntry_KEYS) Reset()         { *m = IfmibIfstackstatusEntry_KEYS{} }
func (m *IfmibIfstackstatusEntry_KEYS) String() string { return proto.CompactTextString(m) }
func (*IfmibIfstackstatusEntry_KEYS) ProtoMessage()    {}
func (*IfmibIfstackstatusEntry_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_db2ea698d1b4b782, []int{0}
}

func (m *IfmibIfstackstatusEntry_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IfmibIfstackstatusEntry_KEYS.Unmarshal(m, b)
}
func (m *IfmibIfstackstatusEntry_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IfmibIfstackstatusEntry_KEYS.Marshal(b, m, deterministic)
}
func (m *IfmibIfstackstatusEntry_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IfmibIfstackstatusEntry_KEYS.Merge(m, src)
}
func (m *IfmibIfstackstatusEntry_KEYS) XXX_Size() int {
	return xxx_messageInfo_IfmibIfstackstatusEntry_KEYS.Size(m)
}
func (m *IfmibIfstackstatusEntry_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_IfmibIfstackstatusEntry_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_IfmibIfstackstatusEntry_KEYS proto.InternalMessageInfo

func (m *IfmibIfstackstatusEntry_KEYS) GetInterfaceStackStatus() string {
	if m != nil {
		return m.InterfaceStackStatus
	}
	return ""
}

type IfmibIfstackstatusEntry struct {
	IfStackHigherLayer   string   `protobuf:"bytes,50,opt,name=if_stack_higher_layer,json=ifStackHigherLayer,proto3" json:"if_stack_higher_layer,omitempty"`
	IfStackLowerLayer    string   `protobuf:"bytes,51,opt,name=if_stack_lower_layer,json=ifStackLowerLayer,proto3" json:"if_stack_lower_layer,omitempty"`
	IfStackStatus        string   `protobuf:"bytes,52,opt,name=if_stack_status,json=ifStackStatus,proto3" json:"if_stack_status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IfmibIfstackstatusEntry) Reset()         { *m = IfmibIfstackstatusEntry{} }
func (m *IfmibIfstackstatusEntry) String() string { return proto.CompactTextString(m) }
func (*IfmibIfstackstatusEntry) ProtoMessage()    {}
func (*IfmibIfstackstatusEntry) Descriptor() ([]byte, []int) {
	return fileDescriptor_db2ea698d1b4b782, []int{1}
}

func (m *IfmibIfstackstatusEntry) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IfmibIfstackstatusEntry.Unmarshal(m, b)
}
func (m *IfmibIfstackstatusEntry) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IfmibIfstackstatusEntry.Marshal(b, m, deterministic)
}
func (m *IfmibIfstackstatusEntry) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IfmibIfstackstatusEntry.Merge(m, src)
}
func (m *IfmibIfstackstatusEntry) XXX_Size() int {
	return xxx_messageInfo_IfmibIfstackstatusEntry.Size(m)
}
func (m *IfmibIfstackstatusEntry) XXX_DiscardUnknown() {
	xxx_messageInfo_IfmibIfstackstatusEntry.DiscardUnknown(m)
}

var xxx_messageInfo_IfmibIfstackstatusEntry proto.InternalMessageInfo

func (m *IfmibIfstackstatusEntry) GetIfStackHigherLayer() string {
	if m != nil {
		return m.IfStackHigherLayer
	}
	return ""
}

func (m *IfmibIfstackstatusEntry) GetIfStackLowerLayer() string {
	if m != nil {
		return m.IfStackLowerLayer
	}
	return ""
}

func (m *IfmibIfstackstatusEntry) GetIfStackStatus() string {
	if m != nil {
		return m.IfStackStatus
	}
	return ""
}

func init() {
	proto.RegisterType((*IfmibIfstackstatusEntry_KEYS)(nil), "cisco_ios_xr_snmp_ifmib_oper.augment.interface_mib.interface_stack_statuses.interface_stack_status.ifmib_ifstackstatus_entry_KEYS")
	proto.RegisterType((*IfmibIfstackstatusEntry)(nil), "cisco_ios_xr_snmp_ifmib_oper.augment.interface_mib.interface_stack_statuses.interface_stack_status.ifmib_ifstackstatus_entry")
}

func init() { proto.RegisterFile("ifmib_ifstackstatus_entry.proto", fileDescriptor_db2ea698d1b4b782) }

var fileDescriptor_db2ea698d1b4b782 = []byte{
	// 228 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x90, 0xc1, 0x4a, 0xc4, 0x30,
	0x10, 0x86, 0xe9, 0x45, 0x30, 0x20, 0x62, 0x58, 0x65, 0xbd, 0xa8, 0x78, 0x10, 0x4f, 0x15, 0xdd,
	0x7d, 0x05, 0x41, 0x70, 0x4f, 0x16, 0x04, 0x4f, 0x43, 0x12, 0x26, 0xbb, 0x83, 0x4d, 0x52, 0x92,
	0x14, 0xed, 0x13, 0xf9, 0x9a, 0xd2, 0x24, 0x04, 0x0f, 0xf6, 0x18, 0xbe, 0xf9, 0x3e, 0x7e, 0xc2,
	0xae, 0x49, 0x1b, 0x92, 0x40, 0x3a, 0x44, 0xa1, 0x3e, 0x43, 0x14, 0x71, 0x0c, 0x80, 0x36, 0xfa,
	0xa9, 0x1d, 0xbc, 0x8b, 0x8e, 0x4b, 0x45, 0x41, 0x39, 0x20, 0x17, 0xe0, 0xdb, 0x43, 0xb0, 0x66,
	0x80, 0xac, 0xb8, 0x01, 0x7d, 0x2b, 0xc6, 0xbd, 0x41, 0x1b, 0x5b, 0xb2, 0x11, 0xbd, 0x16, 0x0a,
	0xc1, 0x90, 0xfc, 0xf3, 0x4a, 0x55, 0xc8, 0x59, 0x0c, 0x0b, 0xe0, 0xf6, 0x9d, 0x5d, 0x2d, 0xce,
	0x80, 0xd7, 0xe7, 0x8f, 0x8e, 0x6f, 0xd9, 0xc5, 0xff, 0xee, 0xba, 0xb9, 0x69, 0xee, 0x8f, 0xdf,
	0x56, 0x95, 0x76, 0x33, 0xec, 0x72, 0xf7, 0xa7, 0x61, 0x97, 0x8b, 0x61, 0xfe, 0xc8, 0xce, 0x49,
	0x97, 0xd8, 0x81, 0xf6, 0x07, 0xf4, 0xd0, 0x8b, 0x09, 0xfd, 0xfa, 0x29, 0x25, 0x39, 0xe9, 0xd4,
	0x7a, 0x49, 0x68, 0x37, 0x13, 0xfe, 0xc0, 0x56, 0x55, 0xe9, 0xdd, 0x57, 0x35, 0x36, 0xc9, 0x38,
	0x2b, 0xc6, 0x6e, 0x26, 0x59, 0xb8, 0x63, 0xa7, 0x55, 0x28, 0x83, 0xb7, 0xe9, 0xf6, 0xa4, 0xdc,
	0xe6, 0xa5, 0xf2, 0x28, 0x7d, 0xf6, 0xe6, 0x37, 0x00, 0x00, 0xff, 0xff, 0x53, 0x27, 0x09, 0x62,
	0x8f, 0x01, 0x00, 0x00,
}
