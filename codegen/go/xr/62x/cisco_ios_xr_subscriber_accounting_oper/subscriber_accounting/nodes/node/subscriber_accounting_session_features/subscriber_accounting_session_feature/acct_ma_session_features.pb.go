/*
Copyright 2019 Cisco Systems

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: acct_ma_session_features.proto

package cisco_ios_xr_subscriber_accounting_oper_subscriber_accounting_nodes_node_subscriber_accounting_session_features_subscriber_accounting_session_feature

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type AcctMaSessionFeatures_KEYS struct {
	NodeId               string   `protobuf:"bytes,1,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	SubLabel             uint32   `protobuf:"varint,2,opt,name=sub_label,json=subLabel,proto3" json:"sub_label,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AcctMaSessionFeatures_KEYS) Reset()         { *m = AcctMaSessionFeatures_KEYS{} }
func (m *AcctMaSessionFeatures_KEYS) String() string { return proto.CompactTextString(m) }
func (*AcctMaSessionFeatures_KEYS) ProtoMessage()    {}
func (*AcctMaSessionFeatures_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_ac3694eff921e0e1, []int{0}
}

func (m *AcctMaSessionFeatures_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AcctMaSessionFeatures_KEYS.Unmarshal(m, b)
}
func (m *AcctMaSessionFeatures_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AcctMaSessionFeatures_KEYS.Marshal(b, m, deterministic)
}
func (m *AcctMaSessionFeatures_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AcctMaSessionFeatures_KEYS.Merge(m, src)
}
func (m *AcctMaSessionFeatures_KEYS) XXX_Size() int {
	return xxx_messageInfo_AcctMaSessionFeatures_KEYS.Size(m)
}
func (m *AcctMaSessionFeatures_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_AcctMaSessionFeatures_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_AcctMaSessionFeatures_KEYS proto.InternalMessageInfo

func (m *AcctMaSessionFeatures_KEYS) GetNodeId() string {
	if m != nil {
		return m.NodeId
	}
	return ""
}

func (m *AcctMaSessionFeatures_KEYS) GetSubLabel() uint32 {
	if m != nil {
		return m.SubLabel
	}
	return 0
}

type AcctMaServFeatBagData struct {
	ServiceAccountingEnabledFlag      bool     `protobuf:"varint,1,opt,name=service_accounting_enabled_flag,json=serviceAccountingEnabledFlag,proto3" json:"service_accounting_enabled_flag,omitempty"`
	ServiceAccountingServiceId        uint32   `protobuf:"varint,2,opt,name=service_accounting_service_id,json=serviceAccountingServiceId,proto3" json:"service_accounting_service_id,omitempty"`
	ServiceAccountingMethodList       string   `protobuf:"bytes,3,opt,name=service_accounting_method_list,json=serviceAccountingMethodList,proto3" json:"service_accounting_method_list,omitempty"`
	ServiceAccountingPeriodicInterval uint32   `protobuf:"varint,4,opt,name=service_accounting_periodic_interval,json=serviceAccountingPeriodicInterval,proto3" json:"service_accounting_periodic_interval,omitempty"`
	SessionAccountingAaaTransPending  uint32   `protobuf:"varint,5,opt,name=session_accounting_aaa_trans_pending,json=sessionAccountingAaaTransPending,proto3" json:"session_accounting_aaa_trans_pending,omitempty"`
	SessionAccountingAaaRequestFailed uint32   `protobuf:"varint,6,opt,name=session_accounting_aaa_request_failed,json=sessionAccountingAaaRequestFailed,proto3" json:"session_accounting_aaa_request_failed,omitempty"`
	SessionAccountingStarted          bool     `protobuf:"varint,7,opt,name=session_accounting_started,json=sessionAccountingStarted,proto3" json:"session_accounting_started,omitempty"`
	XXX_NoUnkeyedLiteral              struct{} `json:"-"`
	XXX_unrecognized                  []byte   `json:"-"`
	XXX_sizecache                     int32    `json:"-"`
}

func (m *AcctMaServFeatBagData) Reset()         { *m = AcctMaServFeatBagData{} }
func (m *AcctMaServFeatBagData) String() string { return proto.CompactTextString(m) }
func (*AcctMaServFeatBagData) ProtoMessage()    {}
func (*AcctMaServFeatBagData) Descriptor() ([]byte, []int) {
	return fileDescriptor_ac3694eff921e0e1, []int{1}
}

func (m *AcctMaServFeatBagData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AcctMaServFeatBagData.Unmarshal(m, b)
}
func (m *AcctMaServFeatBagData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AcctMaServFeatBagData.Marshal(b, m, deterministic)
}
func (m *AcctMaServFeatBagData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AcctMaServFeatBagData.Merge(m, src)
}
func (m *AcctMaServFeatBagData) XXX_Size() int {
	return xxx_messageInfo_AcctMaServFeatBagData.Size(m)
}
func (m *AcctMaServFeatBagData) XXX_DiscardUnknown() {
	xxx_messageInfo_AcctMaServFeatBagData.DiscardUnknown(m)
}

var xxx_messageInfo_AcctMaServFeatBagData proto.InternalMessageInfo

func (m *AcctMaServFeatBagData) GetServiceAccountingEnabledFlag() bool {
	if m != nil {
		return m.ServiceAccountingEnabledFlag
	}
	return false
}

func (m *AcctMaServFeatBagData) GetServiceAccountingServiceId() uint32 {
	if m != nil {
		return m.ServiceAccountingServiceId
	}
	return 0
}

func (m *AcctMaServFeatBagData) GetServiceAccountingMethodList() string {
	if m != nil {
		return m.ServiceAccountingMethodList
	}
	return ""
}

func (m *AcctMaServFeatBagData) GetServiceAccountingPeriodicInterval() uint32 {
	if m != nil {
		return m.ServiceAccountingPeriodicInterval
	}
	return 0
}

func (m *AcctMaServFeatBagData) GetSessionAccountingAaaTransPending() uint32 {
	if m != nil {
		return m.SessionAccountingAaaTransPending
	}
	return 0
}

func (m *AcctMaServFeatBagData) GetSessionAccountingAaaRequestFailed() uint32 {
	if m != nil {
		return m.SessionAccountingAaaRequestFailed
	}
	return 0
}

func (m *AcctMaServFeatBagData) GetSessionAccountingStarted() bool {
	if m != nil {
		return m.SessionAccountingStarted
	}
	return false
}

type AcctMaSessFeatBagData struct {
	UniqueSubscriberLabel             uint32                   `protobuf:"varint,1,opt,name=unique_subscriber_label,json=uniqueSubscriberLabel,proto3" json:"unique_subscriber_label,omitempty"`
	InterfaceHandle                   uint32                   `protobuf:"varint,2,opt,name=interface_handle,json=interfaceHandle,proto3" json:"interface_handle,omitempty"`
	SessionDisconnected               bool                     `protobuf:"varint,3,opt,name=session_disconnected,json=sessionDisconnected,proto3" json:"session_disconnected,omitempty"`
	SessionAccountingEnabledFlag      bool                     `protobuf:"varint,4,opt,name=session_accounting_enabled_flag,json=sessionAccountingEnabledFlag,proto3" json:"session_accounting_enabled_flag,omitempty"`
	SessionAccountingMethodList       string                   `protobuf:"bytes,5,opt,name=session_accounting_method_list,json=sessionAccountingMethodList,proto3" json:"session_accounting_method_list,omitempty"`
	SessionAccountingPeriodicInterval uint32                   `protobuf:"varint,6,opt,name=session_accounting_periodic_interval,json=sessionAccountingPeriodicInterval,proto3" json:"session_accounting_periodic_interval,omitempty"`
	SessionAccountingAaaTransPending  uint32                   `protobuf:"varint,7,opt,name=session_accounting_aaa_trans_pending,json=sessionAccountingAaaTransPending,proto3" json:"session_accounting_aaa_trans_pending,omitempty"`
	SessionAccountingAaaRequestFailed uint32                   `protobuf:"varint,8,opt,name=session_accounting_aaa_request_failed,json=sessionAccountingAaaRequestFailed,proto3" json:"session_accounting_aaa_request_failed,omitempty"`
	SessionAccountingStarted          bool                     `protobuf:"varint,9,opt,name=session_accounting_started,json=sessionAccountingStarted,proto3" json:"session_accounting_started,omitempty"`
	ServiceAccountingFeature          []*AcctMaServFeatBagData `protobuf:"bytes,10,rep,name=service_accounting_feature,json=serviceAccountingFeature,proto3" json:"service_accounting_feature,omitempty"`
	SessionIdleTimeoutEnabledFlag     bool                     `protobuf:"varint,11,opt,name=session_idle_timeout_enabled_flag,json=sessionIdleTimeoutEnabledFlag,proto3" json:"session_idle_timeout_enabled_flag,omitempty"`
	IdleTimeoutValue                  uint32                   `protobuf:"varint,12,opt,name=idle_timeout_value,json=idleTimeoutValue,proto3" json:"idle_timeout_value,omitempty"`
	IdleTimeoutThreshold              uint32                   `protobuf:"varint,13,opt,name=idle_timeout_threshold,json=idleTimeoutThreshold,proto3" json:"idle_timeout_threshold,omitempty"`
	IdleTimeoutDirection              string                   `protobuf:"bytes,14,opt,name=idle_timeout_direction,json=idleTimeoutDirection,proto3" json:"idle_timeout_direction,omitempty"`
	SessionIsIdle                     bool                     `protobuf:"varint,15,opt,name=session_is_idle,json=sessionIsIdle,proto3" json:"session_is_idle,omitempty"`
	SessionStatsChangedTime           uint32                   `protobuf:"varint,16,opt,name=session_stats_changed_time,json=sessionStatsChangedTime,proto3" json:"session_stats_changed_time,omitempty"`
	SessionTotalIdleTime              uint32                   `protobuf:"varint,17,opt,name=session_total_idle_time,json=sessionTotalIdleTime,proto3" json:"session_total_idle_time,omitempty"`
	SessionToIdleCount                uint32                   `protobuf:"varint,18,opt,name=session_to_idle_count,json=sessionToIdleCount,proto3" json:"session_to_idle_count,omitempty"`
	SessionToAwakeCount               uint32                   `protobuf:"varint,19,opt,name=session_to_awake_count,json=sessionToAwakeCount,proto3" json:"session_to_awake_count,omitempty"`
	SessionIdleToAaaTransPending      uint32                   `protobuf:"varint,20,opt,name=session_idle_to_aaa_trans_pending,json=sessionIdleToAaaTransPending,proto3" json:"session_idle_to_aaa_trans_pending,omitempty"`
	SessionIdleToAaaRequestFailed     uint32                   `protobuf:"varint,21,opt,name=session_idle_to_aaa_request_failed,json=sessionIdleToAaaRequestFailed,proto3" json:"session_idle_to_aaa_request_failed,omitempty"`
	SessionTimeoutEnabledFlag         bool                     `protobuf:"varint,22,opt,name=session_timeout_enabled_flag,json=sessionTimeoutEnabledFlag,proto3" json:"session_timeout_enabled_flag,omitempty"`
	SessionTimeoutValue               uint32                   `protobuf:"varint,23,opt,name=session_timeout_value,json=sessionTimeoutValue,proto3" json:"session_timeout_value,omitempty"`
	SessionTimeoutTimeRemaining       uint32                   `protobuf:"varint,24,opt,name=session_timeout_time_remaining,json=sessionTimeoutTimeRemaining,proto3" json:"session_timeout_time_remaining,omitempty"`
	XXX_NoUnkeyedLiteral              struct{}                 `json:"-"`
	XXX_unrecognized                  []byte                   `json:"-"`
	XXX_sizecache                     int32                    `json:"-"`
}

func (m *AcctMaSessFeatBagData) Reset()         { *m = AcctMaSessFeatBagData{} }
func (m *AcctMaSessFeatBagData) String() string { return proto.CompactTextString(m) }
func (*AcctMaSessFeatBagData) ProtoMessage()    {}
func (*AcctMaSessFeatBagData) Descriptor() ([]byte, []int) {
	return fileDescriptor_ac3694eff921e0e1, []int{2}
}

func (m *AcctMaSessFeatBagData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AcctMaSessFeatBagData.Unmarshal(m, b)
}
func (m *AcctMaSessFeatBagData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AcctMaSessFeatBagData.Marshal(b, m, deterministic)
}
func (m *AcctMaSessFeatBagData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AcctMaSessFeatBagData.Merge(m, src)
}
func (m *AcctMaSessFeatBagData) XXX_Size() int {
	return xxx_messageInfo_AcctMaSessFeatBagData.Size(m)
}
func (m *AcctMaSessFeatBagData) XXX_DiscardUnknown() {
	xxx_messageInfo_AcctMaSessFeatBagData.DiscardUnknown(m)
}

var xxx_messageInfo_AcctMaSessFeatBagData proto.InternalMessageInfo

func (m *AcctMaSessFeatBagData) GetUniqueSubscriberLabel() uint32 {
	if m != nil {
		return m.UniqueSubscriberLabel
	}
	return 0
}

func (m *AcctMaSessFeatBagData) GetInterfaceHandle() uint32 {
	if m != nil {
		return m.InterfaceHandle
	}
	return 0
}

func (m *AcctMaSessFeatBagData) GetSessionDisconnected() bool {
	if m != nil {
		return m.SessionDisconnected
	}
	return false
}

func (m *AcctMaSessFeatBagData) GetSessionAccountingEnabledFlag() bool {
	if m != nil {
		return m.SessionAccountingEnabledFlag
	}
	return false
}

func (m *AcctMaSessFeatBagData) GetSessionAccountingMethodList() string {
	if m != nil {
		return m.SessionAccountingMethodList
	}
	return ""
}

func (m *AcctMaSessFeatBagData) GetSessionAccountingPeriodicInterval() uint32 {
	if m != nil {
		return m.SessionAccountingPeriodicInterval
	}
	return 0
}

func (m *AcctMaSessFeatBagData) GetSessionAccountingAaaTransPending() uint32 {
	if m != nil {
		return m.SessionAccountingAaaTransPending
	}
	return 0
}

func (m *AcctMaSessFeatBagData) GetSessionAccountingAaaRequestFailed() uint32 {
	if m != nil {
		return m.SessionAccountingAaaRequestFailed
	}
	return 0
}

func (m *AcctMaSessFeatBagData) GetSessionAccountingStarted() bool {
	if m != nil {
		return m.SessionAccountingStarted
	}
	return false
}

func (m *AcctMaSessFeatBagData) GetServiceAccountingFeature() []*AcctMaServFeatBagData {
	if m != nil {
		return m.ServiceAccountingFeature
	}
	return nil
}

func (m *AcctMaSessFeatBagData) GetSessionIdleTimeoutEnabledFlag() bool {
	if m != nil {
		return m.SessionIdleTimeoutEnabledFlag
	}
	return false
}

func (m *AcctMaSessFeatBagData) GetIdleTimeoutValue() uint32 {
	if m != nil {
		return m.IdleTimeoutValue
	}
	return 0
}

func (m *AcctMaSessFeatBagData) GetIdleTimeoutThreshold() uint32 {
	if m != nil {
		return m.IdleTimeoutThreshold
	}
	return 0
}

func (m *AcctMaSessFeatBagData) GetIdleTimeoutDirection() string {
	if m != nil {
		return m.IdleTimeoutDirection
	}
	return ""
}

func (m *AcctMaSessFeatBagData) GetSessionIsIdle() bool {
	if m != nil {
		return m.SessionIsIdle
	}
	return false
}

func (m *AcctMaSessFeatBagData) GetSessionStatsChangedTime() uint32 {
	if m != nil {
		return m.SessionStatsChangedTime
	}
	return 0
}

func (m *AcctMaSessFeatBagData) GetSessionTotalIdleTime() uint32 {
	if m != nil {
		return m.SessionTotalIdleTime
	}
	return 0
}

func (m *AcctMaSessFeatBagData) GetSessionToIdleCount() uint32 {
	if m != nil {
		return m.SessionToIdleCount
	}
	return 0
}

func (m *AcctMaSessFeatBagData) GetSessionToAwakeCount() uint32 {
	if m != nil {
		return m.SessionToAwakeCount
	}
	return 0
}

func (m *AcctMaSessFeatBagData) GetSessionIdleToAaaTransPending() uint32 {
	if m != nil {
		return m.SessionIdleToAaaTransPending
	}
	return 0
}

func (m *AcctMaSessFeatBagData) GetSessionIdleToAaaRequestFailed() uint32 {
	if m != nil {
		return m.SessionIdleToAaaRequestFailed
	}
	return 0
}

func (m *AcctMaSessFeatBagData) GetSessionTimeoutEnabledFlag() bool {
	if m != nil {
		return m.SessionTimeoutEnabledFlag
	}
	return false
}

func (m *AcctMaSessFeatBagData) GetSessionTimeoutValue() uint32 {
	if m != nil {
		return m.SessionTimeoutValue
	}
	return 0
}

func (m *AcctMaSessFeatBagData) GetSessionTimeoutTimeRemaining() uint32 {
	if m != nil {
		return m.SessionTimeoutTimeRemaining
	}
	return 0
}

type AcctMaSessionFeatures struct {
	SessionFeatureData   *AcctMaSessFeatBagData `protobuf:"bytes,50,opt,name=session_feature_data,json=sessionFeatureData,proto3" json:"session_feature_data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *AcctMaSessionFeatures) Reset()         { *m = AcctMaSessionFeatures{} }
func (m *AcctMaSessionFeatures) String() string { return proto.CompactTextString(m) }
func (*AcctMaSessionFeatures) ProtoMessage()    {}
func (*AcctMaSessionFeatures) Descriptor() ([]byte, []int) {
	return fileDescriptor_ac3694eff921e0e1, []int{3}
}

func (m *AcctMaSessionFeatures) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AcctMaSessionFeatures.Unmarshal(m, b)
}
func (m *AcctMaSessionFeatures) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AcctMaSessionFeatures.Marshal(b, m, deterministic)
}
func (m *AcctMaSessionFeatures) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AcctMaSessionFeatures.Merge(m, src)
}
func (m *AcctMaSessionFeatures) XXX_Size() int {
	return xxx_messageInfo_AcctMaSessionFeatures.Size(m)
}
func (m *AcctMaSessionFeatures) XXX_DiscardUnknown() {
	xxx_messageInfo_AcctMaSessionFeatures.DiscardUnknown(m)
}

var xxx_messageInfo_AcctMaSessionFeatures proto.InternalMessageInfo

func (m *AcctMaSessionFeatures) GetSessionFeatureData() *AcctMaSessFeatBagData {
	if m != nil {
		return m.SessionFeatureData
	}
	return nil
}

func init() {
	proto.RegisterType((*AcctMaSessionFeatures_KEYS)(nil), "cisco_ios_xr_subscriber_accounting_oper.subscriber_accounting.nodes.node.subscriber_accounting_session_features.subscriber_accounting_session_feature.acct_ma_session_features_KEYS")
	proto.RegisterType((*AcctMaServFeatBagData)(nil), "cisco_ios_xr_subscriber_accounting_oper.subscriber_accounting.nodes.node.subscriber_accounting_session_features.subscriber_accounting_session_feature.acct_ma_serv_feat_bag_data")
	proto.RegisterType((*AcctMaSessFeatBagData)(nil), "cisco_ios_xr_subscriber_accounting_oper.subscriber_accounting.nodes.node.subscriber_accounting_session_features.subscriber_accounting_session_feature.acct_ma_sess_feat_bag_data")
	proto.RegisterType((*AcctMaSessionFeatures)(nil), "cisco_ios_xr_subscriber_accounting_oper.subscriber_accounting.nodes.node.subscriber_accounting_session_features.subscriber_accounting_session_feature.acct_ma_session_features")
}

func init() { proto.RegisterFile("acct_ma_session_features.proto", fileDescriptor_ac3694eff921e0e1) }

var fileDescriptor_ac3694eff921e0e1 = []byte{
	// 872 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xd4, 0x56, 0xdb, 0x6e, 0x23, 0x35,
	0x18, 0xd6, 0x6c, 0xbb, 0x3d, 0x78, 0x09, 0x2d, 0xee, 0x21, 0x26, 0x6d, 0x96, 0x10, 0x01, 0x2a,
	0x12, 0x8a, 0xb4, 0x5d, 0xe0, 0x06, 0x24, 0x14, 0xf5, 0xc0, 0x46, 0x2c, 0x50, 0x25, 0x01, 0x89,
	0x2b, 0xcb, 0x33, 0x76, 0x12, 0x8b, 0x89, 0x9d, 0x1d, 0x7b, 0x0a, 0xb7, 0x3c, 0x04, 0x12, 0x17,
	0xbc, 0x04, 0xef, 0xc4, 0x03, 0xf0, 0x08, 0xc8, 0xff, 0x1c, 0x32, 0xa7, 0x20, 0x84, 0x7a, 0xc1,
	0xde, 0xb4, 0x8a, 0xff, 0xef, 0xfb, 0xfc, 0x1f, 0xbe, 0xdf, 0x09, 0x7a, 0xca, 0x82, 0xc0, 0xd2,
	0x25, 0xa3, 0x46, 0x18, 0x23, 0xb5, 0xa2, 0x33, 0xc1, 0x6c, 0x1c, 0x09, 0x33, 0x58, 0x45, 0xda,
	0x6a, 0xfc, 0xab, 0x17, 0x48, 0x13, 0x68, 0x2a, 0xb5, 0xa1, 0x3f, 0x47, 0xd4, 0xc4, 0xbe, 0x09,
	0x22, 0xe9, 0x8b, 0x88, 0xb2, 0x20, 0xd0, 0xb1, 0xb2, 0x52, 0xcd, 0xa9, 0x5e, 0x89, 0x68, 0xd0,
	0x18, 0x1a, 0x28, 0xcd, 0x85, 0x81, 0xbf, 0xcd, 0x80, 0xfa, 0xbd, 0xff, 0x0a, 0xd6, 0xff, 0x0e,
	0x75, 0x37, 0x65, 0x4e, 0xbf, 0xba, 0xf9, 0x61, 0x82, 0xdb, 0x68, 0xd7, 0xdd, 0x4a, 0x25, 0x27,
	0x5e, 0xcf, 0xbb, 0xd8, 0x1f, 0xef, 0xb8, 0x8f, 0x23, 0x8e, 0xcf, 0xd0, 0xbe, 0x89, 0x7d, 0x1a,
	0x32, 0x5f, 0x84, 0xe4, 0x51, 0xcf, 0xbb, 0x68, 0x8d, 0xf7, 0x4c, 0xec, 0xbf, 0x74, 0x9f, 0xfb,
	0xbf, 0x6f, 0xa3, 0xce, 0x5a, 0x37, 0xba, 0x07, 0x51, 0xea, 0xb3, 0x39, 0xe5, 0xcc, 0x32, 0x7c,
	0x83, 0xde, 0x71, 0xa7, 0x32, 0x10, 0xc5, 0xdc, 0x84, 0x62, 0x7e, 0x28, 0x38, 0x9d, 0x85, 0x6c,
	0x0e, 0x97, 0xed, 0x8d, 0xcf, 0x53, 0xd8, 0x30, 0x47, 0xdd, 0x24, 0xa0, 0xdb, 0x90, 0xcd, 0xf1,
	0x10, 0x75, 0x1b, 0x64, 0xb2, 0x23, 0xc9, 0xd3, 0xb4, 0x3a, 0x35, 0x91, 0x49, 0x72, 0x30, 0xe2,
	0xf8, 0x0a, 0x3d, 0x6d, 0x90, 0x58, 0x0a, 0xbb, 0xd0, 0x9c, 0x86, 0xd2, 0x58, 0xb2, 0x05, 0x55,
	0x9f, 0xd5, 0x34, 0xbe, 0x06, 0xcc, 0x4b, 0x69, 0x2c, 0xfe, 0x16, 0xbd, 0xd7, 0x20, 0xb2, 0x12,
	0x91, 0xd4, 0x5c, 0x06, 0x54, 0x2a, 0x2b, 0xa2, 0x7b, 0x16, 0x92, 0x6d, 0x48, 0xe7, 0xdd, 0x9a,
	0xd4, 0x5d, 0x8a, 0x1c, 0xa5, 0x40, 0xfc, 0x8d, 0x13, 0x4c, 0xa6, 0x51, 0x10, 0x64, 0x8c, 0x51,
	0x1b, 0x31, 0x65, 0xe8, 0x4a, 0x28, 0x2e, 0xd5, 0x9c, 0x3c, 0x06, 0xc1, 0x5e, 0x8a, 0x5d, 0x0b,
	0x0e, 0x19, 0x9b, 0x3a, 0xe0, 0x5d, 0x82, 0xc3, 0x77, 0xe8, 0xfd, 0x0d, 0x7a, 0x91, 0x78, 0x15,
	0x0b, 0x63, 0xe9, 0x8c, 0xc9, 0x50, 0x70, 0xb2, 0x93, 0x65, 0x58, 0x17, 0x1c, 0x27, 0xc8, 0x5b,
	0x00, 0xe2, 0xcf, 0x51, 0xa7, 0x41, 0xd1, 0x58, 0x16, 0x59, 0xc1, 0xc9, 0x2e, 0x0c, 0x8f, 0xd4,
	0x64, 0x26, 0x49, 0xbc, 0xff, 0x5b, 0xab, 0x68, 0x0f, 0x63, 0x2a, 0xf6, 0xf8, 0x14, 0xb5, 0x63,
	0x25, 0x5f, 0xc5, 0xa2, 0xb8, 0x27, 0x89, 0xd1, 0x3c, 0x48, 0xf0, 0x24, 0x09, 0x4f, 0xf2, 0x28,
	0xb8, 0x0e, 0x7f, 0x88, 0x0e, 0xa1, 0xd7, 0x33, 0x16, 0x08, 0xba, 0x60, 0x8a, 0x87, 0x22, 0xb5,
	0xc0, 0x41, 0x7e, 0xfe, 0x02, 0x8e, 0xf1, 0x33, 0x74, 0x9c, 0xe5, 0xcf, 0xdd, 0x62, 0x2a, 0x25,
	0x02, 0x97, 0xf9, 0x16, 0x64, 0x7e, 0x94, 0xc6, 0xae, 0x0b, 0xa1, 0xc4, 0xb4, 0xb5, 0x92, 0x4b,
	0xa6, 0xdd, 0xce, 0x4c, 0x5b, 0xa9, 0xbb, 0x68, 0x5a, 0x70, 0x5c, 0x4d, 0xa6, 0xe8, 0xb8, 0xc7,
	0x99, 0xe3, 0x2a, 0x2a, 0x55, 0xc7, 0xd5, 0x44, 0xea, 0x8e, 0xdb, 0x34, 0xcf, 0xff, 0xec, 0xb8,
	0xdd, 0x87, 0x76, 0xdc, 0xde, 0xc3, 0x38, 0x6e, 0xff, 0x9f, 0x1d, 0x87, 0xff, 0xf2, 0x50, 0xa7,
	0x61, 0x47, 0xd3, 0xb7, 0x8e, 0xa0, 0xde, 0xd6, 0xc5, 0x93, 0xcb, 0x3f, 0xbc, 0xc1, 0xff, 0xf2,
	0x95, 0x1e, 0x6c, 0x7e, 0x4a, 0x5d, 0xc9, 0x95, 0xd7, 0xe4, 0x36, 0x21, 0xe1, 0x17, 0x28, 0xeb,
	0x2a, 0x95, 0x3c, 0x14, 0xd4, 0xca, 0xa5, 0xd0, 0xb1, 0x2d, 0x3b, 0xf6, 0x09, 0xf4, 0xad, 0x9b,
	0x02, 0x47, 0x3c, 0x14, 0xd3, 0x04, 0x56, 0xb4, 0xec, 0x47, 0x08, 0x97, 0x14, 0xee, 0x59, 0x18,
	0x0b, 0xf2, 0x06, 0x4c, 0xee, 0x50, 0xae, 0x39, 0xdf, 0xbb, 0x73, 0xfc, 0x31, 0x3a, 0x2d, 0xa1,
	0xed, 0x22, 0x12, 0x66, 0xa1, 0x43, 0x4e, 0x5a, 0xc0, 0x38, 0x2e, 0x30, 0xa6, 0x59, 0xac, 0xc6,
	0xe2, 0x32, 0x12, 0x81, 0x95, 0x5a, 0x91, 0x37, 0x61, 0x1d, 0x8a, 0xac, 0xeb, 0x2c, 0x86, 0x3f,
	0x40, 0x07, 0x79, 0x8d, 0x06, 0xca, 0x24, 0x07, 0x50, 0x51, 0x2b, 0xab, 0xc8, 0xb8, 0x9a, 0xf0,
	0x67, 0x6b, 0xf3, 0x18, 0xcb, 0xac, 0xa1, 0xc1, 0x82, 0xa9, 0xb9, 0xe0, 0x70, 0x1d, 0x39, 0x84,
	0xbc, 0xda, 0x29, 0x62, 0xe2, 0x00, 0x57, 0x49, 0xdc, 0x5d, 0x88, 0x3f, 0x41, 0x59, 0x88, 0x5a,
	0x6d, 0x59, 0xb8, 0x6e, 0x27, 0x79, 0x2b, 0xa9, 0x28, 0x0d, 0x4f, 0x5d, 0x34, 0xeb, 0x21, 0x7e,
	0x86, 0x4e, 0xd6, 0xb4, 0x84, 0x03, 0x23, 0x22, 0x18, 0x48, 0x38, 0x27, 0x39, 0xc6, 0x95, 0x8b,
	0xe0, 0xe7, 0xe8, 0xb4, 0x40, 0x61, 0x3f, 0xb1, 0x1f, 0x33, 0xce, 0x11, 0x70, 0x8e, 0x72, 0xce,
	0xd0, 0xc5, 0x12, 0xd2, 0x97, 0xd5, 0x39, 0xeb, 0x86, 0xbd, 0x3d, 0x06, 0xfe, 0x79, 0x71, 0xce,
	0xba, 0xba, 0xb3, 0x23, 0xd4, 0x6f, 0x12, 0xaa, 0x2c, 0xec, 0x09, 0x28, 0x75, 0xab, 0x4a, 0xe5,
	0x65, 0xfd, 0x02, 0x9d, 0xe7, 0x85, 0x34, 0xd9, 0xee, 0x14, 0x86, 0xf4, 0x76, 0x56, 0x4e, 0xdd,
	0x72, 0x97, 0x85, 0xe6, 0x95, 0x5c, 0xd7, 0x2e, 0x37, 0xa2, 0x68, 0xbc, 0xc2, 0xcb, 0x9a, 0x7b,
	0x4f, 0x2e, 0x05, 0x8d, 0xc4, 0x92, 0x49, 0xe5, 0xba, 0x40, 0x80, 0x7c, 0x56, 0x26, 0xbb, 0x7f,
	0xe3, 0x0c, 0xd2, 0xff, 0xe5, 0x11, 0x22, 0x9b, 0x7e, 0x11, 0xe1, 0x3f, 0xbd, 0xf5, 0xd7, 0x46,
	0x7a, 0x08, 0x5b, 0x48, 0x2e, 0x7b, 0xde, 0xeb, 0xf1, 0x7e, 0x54, 0xbf, 0x6b, 0x73, 0x1b, 0xa6,
	0xaf, 0xc6, 0x35, 0xb3, 0xcc, 0xdf, 0x81, 0xdf, 0xac, 0xcf, 0xff, 0x0e, 0x00, 0x00, 0xff, 0xff,
	0xa9, 0x52, 0xf6, 0xb3, 0xd5, 0x0a, 0x00, 0x00,
}
