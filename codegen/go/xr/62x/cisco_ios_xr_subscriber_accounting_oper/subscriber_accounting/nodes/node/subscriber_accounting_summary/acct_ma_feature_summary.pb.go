/*
Copyright 2019 Cisco Systems

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: acct_ma_feature_summary.proto

package cisco_ios_xr_subscriber_accounting_oper_subscriber_accounting_nodes_node_subscriber_accounting_summary

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type AcctMaFeatureSummary_KEYS struct {
	NodeId               string   `protobuf:"bytes,1,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AcctMaFeatureSummary_KEYS) Reset()         { *m = AcctMaFeatureSummary_KEYS{} }
func (m *AcctMaFeatureSummary_KEYS) String() string { return proto.CompactTextString(m) }
func (*AcctMaFeatureSummary_KEYS) ProtoMessage()    {}
func (*AcctMaFeatureSummary_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_d2a00260cc57f342, []int{0}
}

func (m *AcctMaFeatureSummary_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AcctMaFeatureSummary_KEYS.Unmarshal(m, b)
}
func (m *AcctMaFeatureSummary_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AcctMaFeatureSummary_KEYS.Marshal(b, m, deterministic)
}
func (m *AcctMaFeatureSummary_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AcctMaFeatureSummary_KEYS.Merge(m, src)
}
func (m *AcctMaFeatureSummary_KEYS) XXX_Size() int {
	return xxx_messageInfo_AcctMaFeatureSummary_KEYS.Size(m)
}
func (m *AcctMaFeatureSummary_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_AcctMaFeatureSummary_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_AcctMaFeatureSummary_KEYS proto.InternalMessageInfo

func (m *AcctMaFeatureSummary_KEYS) GetNodeId() string {
	if m != nil {
		return m.NodeId
	}
	return ""
}

type AcctMaAaaBagSumCounts struct {
	FlowStart                     uint32   `protobuf:"varint,1,opt,name=flow_start,json=flowStart,proto3" json:"flow_start,omitempty"`
	FlowDisconnect                uint32   `protobuf:"varint,2,opt,name=flow_disconnect,json=flowDisconnect,proto3" json:"flow_disconnect,omitempty"`
	SessionAccountingStart        uint32   `protobuf:"varint,3,opt,name=session_accounting_start,json=sessionAccountingStart,proto3" json:"session_accounting_start,omitempty"`
	SessionAccountingStop         uint32   `protobuf:"varint,4,opt,name=session_accounting_stop,json=sessionAccountingStop,proto3" json:"session_accounting_stop,omitempty"`
	SessionAccountingUpdate       uint32   `protobuf:"varint,5,opt,name=session_accounting_update,json=sessionAccountingUpdate,proto3" json:"session_accounting_update,omitempty"`
	ServiceAccountingStart        uint32   `protobuf:"varint,6,opt,name=service_accounting_start,json=serviceAccountingStart,proto3" json:"service_accounting_start,omitempty"`
	ServiceAccountingStop         uint32   `protobuf:"varint,7,opt,name=service_accounting_stop,json=serviceAccountingStop,proto3" json:"service_accounting_stop,omitempty"`
	ServiceAccountingUpdate       uint32   `protobuf:"varint,8,opt,name=service_accounting_update,json=serviceAccountingUpdate,proto3" json:"service_accounting_update,omitempty"`
	FlowAccountingStart           uint32   `protobuf:"varint,9,opt,name=flow_accounting_start,json=flowAccountingStart,proto3" json:"flow_accounting_start,omitempty"`
	FlowAccountingStop            uint32   `protobuf:"varint,10,opt,name=flow_accounting_stop,json=flowAccountingStop,proto3" json:"flow_accounting_stop,omitempty"`
	FlowAccountingUpdate          uint32   `protobuf:"varint,11,opt,name=flow_accounting_update,json=flowAccountingUpdate,proto3" json:"flow_accounting_update,omitempty"`
	AccountingCallback            uint32   `protobuf:"varint,12,opt,name=accounting_callback,json=accountingCallback,proto3" json:"accounting_callback,omitempty"`
	SessionAcctTransPending       uint32   `protobuf:"varint,13,opt,name=session_acct_trans_pending,json=sessionAcctTransPending,proto3" json:"session_acct_trans_pending,omitempty"`
	SessionAcctReqsFailed         uint32   `protobuf:"varint,14,opt,name=session_acct_reqs_failed,json=sessionAcctReqsFailed,proto3" json:"session_acct_reqs_failed,omitempty"`
	SessionAcctOutOfSync          uint32   `protobuf:"varint,15,opt,name=session_acct_out_of_sync,json=sessionAcctOutOfSync,proto3" json:"session_acct_out_of_sync,omitempty"`
	SessionIdleToTransPending     uint32   `protobuf:"varint,16,opt,name=session_idle_to_trans_pending,json=sessionIdleToTransPending,proto3" json:"session_idle_to_trans_pending,omitempty"`
	SessionIdleToReqsFailed       uint32   `protobuf:"varint,17,opt,name=session_idle_to_reqs_failed,json=sessionIdleToReqsFailed,proto3" json:"session_idle_to_reqs_failed,omitempty"`
	SessionIdleToOutOfSync        uint32   `protobuf:"varint,18,opt,name=session_idle_to_out_of_sync,json=sessionIdleToOutOfSync,proto3" json:"session_idle_to_out_of_sync,omitempty"`
	ServiceAcctTransPending       uint32   `protobuf:"varint,19,opt,name=service_acct_trans_pending,json=serviceAcctTransPending,proto3" json:"service_acct_trans_pending,omitempty"`
	ServiceAcctReqsFailed         uint32   `protobuf:"varint,20,opt,name=service_acct_reqs_failed,json=serviceAcctReqsFailed,proto3" json:"service_acct_reqs_failed,omitempty"`
	ServiceAcctOutOfSync          uint32   `protobuf:"varint,21,opt,name=service_acct_out_of_sync,json=serviceAcctOutOfSync,proto3" json:"service_acct_out_of_sync,omitempty"`
	ServiceIdleToTransPending     uint32   `protobuf:"varint,22,opt,name=service_idle_to_trans_pending,json=serviceIdleToTransPending,proto3" json:"service_idle_to_trans_pending,omitempty"`
	ServiceIdleToReqsFailed       uint32   `protobuf:"varint,23,opt,name=service_idle_to_reqs_failed,json=serviceIdleToReqsFailed,proto3" json:"service_idle_to_reqs_failed,omitempty"`
	ServiceIdleToOutOfSync        uint32   `protobuf:"varint,24,opt,name=service_idle_to_out_of_sync,json=serviceIdleToOutOfSync,proto3" json:"service_idle_to_out_of_sync,omitempty"`
	PrepaidStart                  uint32   `protobuf:"varint,25,opt,name=prepaid_start,json=prepaidStart,proto3" json:"prepaid_start,omitempty"`
	PrepaidStop                   uint32   `protobuf:"varint,26,opt,name=prepaid_stop,json=prepaidStop,proto3" json:"prepaid_stop,omitempty"`
	PrepaidAccountingStart        uint32   `protobuf:"varint,27,opt,name=prepaid_accounting_start,json=prepaidAccountingStart,proto3" json:"prepaid_accounting_start,omitempty"`
	PrepaidAccountingStop         uint32   `protobuf:"varint,28,opt,name=prepaid_accounting_stop,json=prepaidAccountingStop,proto3" json:"prepaid_accounting_stop,omitempty"`
	PrepaidVolumeThresholdReached uint32   `protobuf:"varint,29,opt,name=prepaid_volume_threshold_reached,json=prepaidVolumeThresholdReached,proto3" json:"prepaid_volume_threshold_reached,omitempty"`
	PrepaidTimeThresholdReached   uint32   `protobuf:"varint,30,opt,name=prepaid_time_threshold_reached,json=prepaidTimeThresholdReached,proto3" json:"prepaid_time_threshold_reached,omitempty"`
	PrepaidQuotaDepleted          uint32   `protobuf:"varint,31,opt,name=prepaid_quota_depleted,json=prepaidQuotaDepleted,proto3" json:"prepaid_quota_depleted,omitempty"`
	PrepaidReauthorization        uint32   `protobuf:"varint,32,opt,name=prepaid_reauthorization,json=prepaidReauthorization,proto3" json:"prepaid_reauthorization,omitempty"`
	IdleTimeout                   uint32   `protobuf:"varint,33,opt,name=idle_timeout,json=idleTimeout,proto3" json:"idle_timeout,omitempty"`
	IdleTimeoutResponseCallback   uint32   `protobuf:"varint,34,opt,name=idle_timeout_response_callback,json=idleTimeoutResponseCallback,proto3" json:"idle_timeout_response_callback,omitempty"`
	OwnedResourceStart            uint32   `protobuf:"varint,35,opt,name=owned_resource_start,json=ownedResourceStart,proto3" json:"owned_resource_start,omitempty"`
	XXX_NoUnkeyedLiteral          struct{} `json:"-"`
	XXX_unrecognized              []byte   `json:"-"`
	XXX_sizecache                 int32    `json:"-"`
}

func (m *AcctMaAaaBagSumCounts) Reset()         { *m = AcctMaAaaBagSumCounts{} }
func (m *AcctMaAaaBagSumCounts) String() string { return proto.CompactTextString(m) }
func (*AcctMaAaaBagSumCounts) ProtoMessage()    {}
func (*AcctMaAaaBagSumCounts) Descriptor() ([]byte, []int) {
	return fileDescriptor_d2a00260cc57f342, []int{1}
}

func (m *AcctMaAaaBagSumCounts) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AcctMaAaaBagSumCounts.Unmarshal(m, b)
}
func (m *AcctMaAaaBagSumCounts) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AcctMaAaaBagSumCounts.Marshal(b, m, deterministic)
}
func (m *AcctMaAaaBagSumCounts) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AcctMaAaaBagSumCounts.Merge(m, src)
}
func (m *AcctMaAaaBagSumCounts) XXX_Size() int {
	return xxx_messageInfo_AcctMaAaaBagSumCounts.Size(m)
}
func (m *AcctMaAaaBagSumCounts) XXX_DiscardUnknown() {
	xxx_messageInfo_AcctMaAaaBagSumCounts.DiscardUnknown(m)
}

var xxx_messageInfo_AcctMaAaaBagSumCounts proto.InternalMessageInfo

func (m *AcctMaAaaBagSumCounts) GetFlowStart() uint32 {
	if m != nil {
		return m.FlowStart
	}
	return 0
}

func (m *AcctMaAaaBagSumCounts) GetFlowDisconnect() uint32 {
	if m != nil {
		return m.FlowDisconnect
	}
	return 0
}

func (m *AcctMaAaaBagSumCounts) GetSessionAccountingStart() uint32 {
	if m != nil {
		return m.SessionAccountingStart
	}
	return 0
}

func (m *AcctMaAaaBagSumCounts) GetSessionAccountingStop() uint32 {
	if m != nil {
		return m.SessionAccountingStop
	}
	return 0
}

func (m *AcctMaAaaBagSumCounts) GetSessionAccountingUpdate() uint32 {
	if m != nil {
		return m.SessionAccountingUpdate
	}
	return 0
}

func (m *AcctMaAaaBagSumCounts) GetServiceAccountingStart() uint32 {
	if m != nil {
		return m.ServiceAccountingStart
	}
	return 0
}

func (m *AcctMaAaaBagSumCounts) GetServiceAccountingStop() uint32 {
	if m != nil {
		return m.ServiceAccountingStop
	}
	return 0
}

func (m *AcctMaAaaBagSumCounts) GetServiceAccountingUpdate() uint32 {
	if m != nil {
		return m.ServiceAccountingUpdate
	}
	return 0
}

func (m *AcctMaAaaBagSumCounts) GetFlowAccountingStart() uint32 {
	if m != nil {
		return m.FlowAccountingStart
	}
	return 0
}

func (m *AcctMaAaaBagSumCounts) GetFlowAccountingStop() uint32 {
	if m != nil {
		return m.FlowAccountingStop
	}
	return 0
}

func (m *AcctMaAaaBagSumCounts) GetFlowAccountingUpdate() uint32 {
	if m != nil {
		return m.FlowAccountingUpdate
	}
	return 0
}

func (m *AcctMaAaaBagSumCounts) GetAccountingCallback() uint32 {
	if m != nil {
		return m.AccountingCallback
	}
	return 0
}

func (m *AcctMaAaaBagSumCounts) GetSessionAcctTransPending() uint32 {
	if m != nil {
		return m.SessionAcctTransPending
	}
	return 0
}

func (m *AcctMaAaaBagSumCounts) GetSessionAcctReqsFailed() uint32 {
	if m != nil {
		return m.SessionAcctReqsFailed
	}
	return 0
}

func (m *AcctMaAaaBagSumCounts) GetSessionAcctOutOfSync() uint32 {
	if m != nil {
		return m.SessionAcctOutOfSync
	}
	return 0
}

func (m *AcctMaAaaBagSumCounts) GetSessionIdleToTransPending() uint32 {
	if m != nil {
		return m.SessionIdleToTransPending
	}
	return 0
}

func (m *AcctMaAaaBagSumCounts) GetSessionIdleToReqsFailed() uint32 {
	if m != nil {
		return m.SessionIdleToReqsFailed
	}
	return 0
}

func (m *AcctMaAaaBagSumCounts) GetSessionIdleToOutOfSync() uint32 {
	if m != nil {
		return m.SessionIdleToOutOfSync
	}
	return 0
}

func (m *AcctMaAaaBagSumCounts) GetServiceAcctTransPending() uint32 {
	if m != nil {
		return m.ServiceAcctTransPending
	}
	return 0
}

func (m *AcctMaAaaBagSumCounts) GetServiceAcctReqsFailed() uint32 {
	if m != nil {
		return m.ServiceAcctReqsFailed
	}
	return 0
}

func (m *AcctMaAaaBagSumCounts) GetServiceAcctOutOfSync() uint32 {
	if m != nil {
		return m.ServiceAcctOutOfSync
	}
	return 0
}

func (m *AcctMaAaaBagSumCounts) GetServiceIdleToTransPending() uint32 {
	if m != nil {
		return m.ServiceIdleToTransPending
	}
	return 0
}

func (m *AcctMaAaaBagSumCounts) GetServiceIdleToReqsFailed() uint32 {
	if m != nil {
		return m.ServiceIdleToReqsFailed
	}
	return 0
}

func (m *AcctMaAaaBagSumCounts) GetServiceIdleToOutOfSync() uint32 {
	if m != nil {
		return m.ServiceIdleToOutOfSync
	}
	return 0
}

func (m *AcctMaAaaBagSumCounts) GetPrepaidStart() uint32 {
	if m != nil {
		return m.PrepaidStart
	}
	return 0
}

func (m *AcctMaAaaBagSumCounts) GetPrepaidStop() uint32 {
	if m != nil {
		return m.PrepaidStop
	}
	return 0
}

func (m *AcctMaAaaBagSumCounts) GetPrepaidAccountingStart() uint32 {
	if m != nil {
		return m.PrepaidAccountingStart
	}
	return 0
}

func (m *AcctMaAaaBagSumCounts) GetPrepaidAccountingStop() uint32 {
	if m != nil {
		return m.PrepaidAccountingStop
	}
	return 0
}

func (m *AcctMaAaaBagSumCounts) GetPrepaidVolumeThresholdReached() uint32 {
	if m != nil {
		return m.PrepaidVolumeThresholdReached
	}
	return 0
}

func (m *AcctMaAaaBagSumCounts) GetPrepaidTimeThresholdReached() uint32 {
	if m != nil {
		return m.PrepaidTimeThresholdReached
	}
	return 0
}

func (m *AcctMaAaaBagSumCounts) GetPrepaidQuotaDepleted() uint32 {
	if m != nil {
		return m.PrepaidQuotaDepleted
	}
	return 0
}

func (m *AcctMaAaaBagSumCounts) GetPrepaidReauthorization() uint32 {
	if m != nil {
		return m.PrepaidReauthorization
	}
	return 0
}

func (m *AcctMaAaaBagSumCounts) GetIdleTimeout() uint32 {
	if m != nil {
		return m.IdleTimeout
	}
	return 0
}

func (m *AcctMaAaaBagSumCounts) GetIdleTimeoutResponseCallback() uint32 {
	if m != nil {
		return m.IdleTimeoutResponseCallback
	}
	return 0
}

func (m *AcctMaAaaBagSumCounts) GetOwnedResourceStart() uint32 {
	if m != nil {
		return m.OwnedResourceStart
	}
	return 0
}

type AcctMaIdleToBagSumCounts struct {
	ActiveSessionIdleTimers  uint32   `protobuf:"varint,1,opt,name=active_session_idle_timers,json=activeSessionIdleTimers,proto3" json:"active_session_idle_timers,omitempty"`
	IdleSessions             uint32   `protobuf:"varint,2,opt,name=idle_sessions,json=idleSessions,proto3" json:"idle_sessions,omitempty"`
	TransitionsToIdle        uint32   `protobuf:"varint,3,opt,name=transitions_to_idle,json=transitionsToIdle,proto3" json:"transitions_to_idle,omitempty"`
	TransitionsToAwake       uint32   `protobuf:"varint,4,opt,name=transitions_to_awake,json=transitionsToAwake,proto3" json:"transitions_to_awake,omitempty"`
	ActiveFlowIdleTimers     uint32   `protobuf:"varint,5,opt,name=active_flow_idle_timers,json=activeFlowIdleTimers,proto3" json:"active_flow_idle_timers,omitempty"`
	ExpiredFlowIdleTimers    uint32   `protobuf:"varint,6,opt,name=expired_flow_idle_timers,json=expiredFlowIdleTimers,proto3" json:"expired_flow_idle_timers,omitempty"`
	ActivePrepaidIdleTimers  uint32   `protobuf:"varint,7,opt,name=active_prepaid_idle_timers,json=activePrepaidIdleTimers,proto3" json:"active_prepaid_idle_timers,omitempty"`
	ExpiredPrepaidIdleTimers uint32   `protobuf:"varint,8,opt,name=expired_prepaid_idle_timers,json=expiredPrepaidIdleTimers,proto3" json:"expired_prepaid_idle_timers,omitempty"`
	XXX_NoUnkeyedLiteral     struct{} `json:"-"`
	XXX_unrecognized         []byte   `json:"-"`
	XXX_sizecache            int32    `json:"-"`
}

func (m *AcctMaIdleToBagSumCounts) Reset()         { *m = AcctMaIdleToBagSumCounts{} }
func (m *AcctMaIdleToBagSumCounts) String() string { return proto.CompactTextString(m) }
func (*AcctMaIdleToBagSumCounts) ProtoMessage()    {}
func (*AcctMaIdleToBagSumCounts) Descriptor() ([]byte, []int) {
	return fileDescriptor_d2a00260cc57f342, []int{2}
}

func (m *AcctMaIdleToBagSumCounts) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AcctMaIdleToBagSumCounts.Unmarshal(m, b)
}
func (m *AcctMaIdleToBagSumCounts) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AcctMaIdleToBagSumCounts.Marshal(b, m, deterministic)
}
func (m *AcctMaIdleToBagSumCounts) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AcctMaIdleToBagSumCounts.Merge(m, src)
}
func (m *AcctMaIdleToBagSumCounts) XXX_Size() int {
	return xxx_messageInfo_AcctMaIdleToBagSumCounts.Size(m)
}
func (m *AcctMaIdleToBagSumCounts) XXX_DiscardUnknown() {
	xxx_messageInfo_AcctMaIdleToBagSumCounts.DiscardUnknown(m)
}

var xxx_messageInfo_AcctMaIdleToBagSumCounts proto.InternalMessageInfo

func (m *AcctMaIdleToBagSumCounts) GetActiveSessionIdleTimers() uint32 {
	if m != nil {
		return m.ActiveSessionIdleTimers
	}
	return 0
}

func (m *AcctMaIdleToBagSumCounts) GetIdleSessions() uint32 {
	if m != nil {
		return m.IdleSessions
	}
	return 0
}

func (m *AcctMaIdleToBagSumCounts) GetTransitionsToIdle() uint32 {
	if m != nil {
		return m.TransitionsToIdle
	}
	return 0
}

func (m *AcctMaIdleToBagSumCounts) GetTransitionsToAwake() uint32 {
	if m != nil {
		return m.TransitionsToAwake
	}
	return 0
}

func (m *AcctMaIdleToBagSumCounts) GetActiveFlowIdleTimers() uint32 {
	if m != nil {
		return m.ActiveFlowIdleTimers
	}
	return 0
}

func (m *AcctMaIdleToBagSumCounts) GetExpiredFlowIdleTimers() uint32 {
	if m != nil {
		return m.ExpiredFlowIdleTimers
	}
	return 0
}

func (m *AcctMaIdleToBagSumCounts) GetActivePrepaidIdleTimers() uint32 {
	if m != nil {
		return m.ActivePrepaidIdleTimers
	}
	return 0
}

func (m *AcctMaIdleToBagSumCounts) GetExpiredPrepaidIdleTimers() uint32 {
	if m != nil {
		return m.ExpiredPrepaidIdleTimers
	}
	return 0
}

type AcctMaSessToBagSumCounts struct {
	ActiveSessionTimers  uint32   `protobuf:"varint,1,opt,name=active_session_timers,json=activeSessionTimers,proto3" json:"active_session_timers,omitempty"`
	ExpiredSessionTimers uint32   `protobuf:"varint,2,opt,name=expired_session_timers,json=expiredSessionTimers,proto3" json:"expired_session_timers,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AcctMaSessToBagSumCounts) Reset()         { *m = AcctMaSessToBagSumCounts{} }
func (m *AcctMaSessToBagSumCounts) String() string { return proto.CompactTextString(m) }
func (*AcctMaSessToBagSumCounts) ProtoMessage()    {}
func (*AcctMaSessToBagSumCounts) Descriptor() ([]byte, []int) {
	return fileDescriptor_d2a00260cc57f342, []int{3}
}

func (m *AcctMaSessToBagSumCounts) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AcctMaSessToBagSumCounts.Unmarshal(m, b)
}
func (m *AcctMaSessToBagSumCounts) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AcctMaSessToBagSumCounts.Marshal(b, m, deterministic)
}
func (m *AcctMaSessToBagSumCounts) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AcctMaSessToBagSumCounts.Merge(m, src)
}
func (m *AcctMaSessToBagSumCounts) XXX_Size() int {
	return xxx_messageInfo_AcctMaSessToBagSumCounts.Size(m)
}
func (m *AcctMaSessToBagSumCounts) XXX_DiscardUnknown() {
	xxx_messageInfo_AcctMaSessToBagSumCounts.DiscardUnknown(m)
}

var xxx_messageInfo_AcctMaSessToBagSumCounts proto.InternalMessageInfo

func (m *AcctMaSessToBagSumCounts) GetActiveSessionTimers() uint32 {
	if m != nil {
		return m.ActiveSessionTimers
	}
	return 0
}

func (m *AcctMaSessToBagSumCounts) GetExpiredSessionTimers() uint32 {
	if m != nil {
		return m.ExpiredSessionTimers
	}
	return 0
}

type AcctMaCtxBagSumCounts struct {
	ActiveSessions                  uint32   `protobuf:"varint,1,opt,name=active_sessions,json=activeSessions,proto3" json:"active_sessions,omitempty"`
	DisconnectedSessions            uint32   `protobuf:"varint,2,opt,name=disconnected_sessions,json=disconnectedSessions,proto3" json:"disconnected_sessions,omitempty"`
	ActiveSessionAccountingSessions uint32   `protobuf:"varint,3,opt,name=active_session_accounting_sessions,json=activeSessionAccountingSessions,proto3" json:"active_session_accounting_sessions,omitempty"`
	ActiveFlows                     uint32   `protobuf:"varint,4,opt,name=active_flows,json=activeFlows,proto3" json:"active_flows,omitempty"`
	QuotaReceived                   uint32   `protobuf:"varint,5,opt,name=quota_received,json=quotaReceived,proto3" json:"quota_received,omitempty"`
	XXX_NoUnkeyedLiteral            struct{} `json:"-"`
	XXX_unrecognized                []byte   `json:"-"`
	XXX_sizecache                   int32    `json:"-"`
}

func (m *AcctMaCtxBagSumCounts) Reset()         { *m = AcctMaCtxBagSumCounts{} }
func (m *AcctMaCtxBagSumCounts) String() string { return proto.CompactTextString(m) }
func (*AcctMaCtxBagSumCounts) ProtoMessage()    {}
func (*AcctMaCtxBagSumCounts) Descriptor() ([]byte, []int) {
	return fileDescriptor_d2a00260cc57f342, []int{4}
}

func (m *AcctMaCtxBagSumCounts) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AcctMaCtxBagSumCounts.Unmarshal(m, b)
}
func (m *AcctMaCtxBagSumCounts) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AcctMaCtxBagSumCounts.Marshal(b, m, deterministic)
}
func (m *AcctMaCtxBagSumCounts) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AcctMaCtxBagSumCounts.Merge(m, src)
}
func (m *AcctMaCtxBagSumCounts) XXX_Size() int {
	return xxx_messageInfo_AcctMaCtxBagSumCounts.Size(m)
}
func (m *AcctMaCtxBagSumCounts) XXX_DiscardUnknown() {
	xxx_messageInfo_AcctMaCtxBagSumCounts.DiscardUnknown(m)
}

var xxx_messageInfo_AcctMaCtxBagSumCounts proto.InternalMessageInfo

func (m *AcctMaCtxBagSumCounts) GetActiveSessions() uint32 {
	if m != nil {
		return m.ActiveSessions
	}
	return 0
}

func (m *AcctMaCtxBagSumCounts) GetDisconnectedSessions() uint32 {
	if m != nil {
		return m.DisconnectedSessions
	}
	return 0
}

func (m *AcctMaCtxBagSumCounts) GetActiveSessionAccountingSessions() uint32 {
	if m != nil {
		return m.ActiveSessionAccountingSessions
	}
	return 0
}

func (m *AcctMaCtxBagSumCounts) GetActiveFlows() uint32 {
	if m != nil {
		return m.ActiveFlows
	}
	return 0
}

func (m *AcctMaCtxBagSumCounts) GetQuotaReceived() uint32 {
	if m != nil {
		return m.QuotaReceived
	}
	return 0
}

type AcctMaFeatureSummary struct {
	AaaCounters            *AcctMaAaaBagSumCounts    `protobuf:"bytes,50,opt,name=aaa_counters,json=aaaCounters,proto3" json:"aaa_counters,omitempty"`
	IdleTimeoutCounters    *AcctMaIdleToBagSumCounts `protobuf:"bytes,51,opt,name=idle_timeout_counters,json=idleTimeoutCounters,proto3" json:"idle_timeout_counters,omitempty"`
	SessionTimeoutCounters *AcctMaSessToBagSumCounts `protobuf:"bytes,52,opt,name=session_timeout_counters,json=sessionTimeoutCounters,proto3" json:"session_timeout_counters,omitempty"`
	SessionFlowCounters    *AcctMaCtxBagSumCounts    `protobuf:"bytes,53,opt,name=session_flow_counters,json=sessionFlowCounters,proto3" json:"session_flow_counters,omitempty"`
	XXX_NoUnkeyedLiteral   struct{}                  `json:"-"`
	XXX_unrecognized       []byte                    `json:"-"`
	XXX_sizecache          int32                     `json:"-"`
}

func (m *AcctMaFeatureSummary) Reset()         { *m = AcctMaFeatureSummary{} }
func (m *AcctMaFeatureSummary) String() string { return proto.CompactTextString(m) }
func (*AcctMaFeatureSummary) ProtoMessage()    {}
func (*AcctMaFeatureSummary) Descriptor() ([]byte, []int) {
	return fileDescriptor_d2a00260cc57f342, []int{5}
}

func (m *AcctMaFeatureSummary) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AcctMaFeatureSummary.Unmarshal(m, b)
}
func (m *AcctMaFeatureSummary) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AcctMaFeatureSummary.Marshal(b, m, deterministic)
}
func (m *AcctMaFeatureSummary) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AcctMaFeatureSummary.Merge(m, src)
}
func (m *AcctMaFeatureSummary) XXX_Size() int {
	return xxx_messageInfo_AcctMaFeatureSummary.Size(m)
}
func (m *AcctMaFeatureSummary) XXX_DiscardUnknown() {
	xxx_messageInfo_AcctMaFeatureSummary.DiscardUnknown(m)
}

var xxx_messageInfo_AcctMaFeatureSummary proto.InternalMessageInfo

func (m *AcctMaFeatureSummary) GetAaaCounters() *AcctMaAaaBagSumCounts {
	if m != nil {
		return m.AaaCounters
	}
	return nil
}

func (m *AcctMaFeatureSummary) GetIdleTimeoutCounters() *AcctMaIdleToBagSumCounts {
	if m != nil {
		return m.IdleTimeoutCounters
	}
	return nil
}

func (m *AcctMaFeatureSummary) GetSessionTimeoutCounters() *AcctMaSessToBagSumCounts {
	if m != nil {
		return m.SessionTimeoutCounters
	}
	return nil
}

func (m *AcctMaFeatureSummary) GetSessionFlowCounters() *AcctMaCtxBagSumCounts {
	if m != nil {
		return m.SessionFlowCounters
	}
	return nil
}

func init() {
	proto.RegisterType((*AcctMaFeatureSummary_KEYS)(nil), "cisco_ios_xr_subscriber_accounting_oper.subscriber_accounting.nodes.node.subscriber_accounting_summary.acct_ma_feature_summary_KEYS")
	proto.RegisterType((*AcctMaAaaBagSumCounts)(nil), "cisco_ios_xr_subscriber_accounting_oper.subscriber_accounting.nodes.node.subscriber_accounting_summary.acct_ma_aaa_bag_sum_counts")
	proto.RegisterType((*AcctMaIdleToBagSumCounts)(nil), "cisco_ios_xr_subscriber_accounting_oper.subscriber_accounting.nodes.node.subscriber_accounting_summary.acct_ma_idle_to_bag_sum_counts")
	proto.RegisterType((*AcctMaSessToBagSumCounts)(nil), "cisco_ios_xr_subscriber_accounting_oper.subscriber_accounting.nodes.node.subscriber_accounting_summary.acct_ma_sess_to_bag_sum_counts")
	proto.RegisterType((*AcctMaCtxBagSumCounts)(nil), "cisco_ios_xr_subscriber_accounting_oper.subscriber_accounting.nodes.node.subscriber_accounting_summary.acct_ma_ctx_bag_sum_counts")
	proto.RegisterType((*AcctMaFeatureSummary)(nil), "cisco_ios_xr_subscriber_accounting_oper.subscriber_accounting.nodes.node.subscriber_accounting_summary.acct_ma_feature_summary")
}

func init() { proto.RegisterFile("acct_ma_feature_summary.proto", fileDescriptor_d2a00260cc57f342) }

var fileDescriptor_d2a00260cc57f342 = []byte{
	// 1162 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xc4, 0x57, 0xcb, 0x6e, 0x1b, 0x37,
	0x17, 0x86, 0x92, 0x3f, 0xf6, 0x6f, 0xfa, 0xd6, 0x50, 0x92, 0x3d, 0xb1, 0x63, 0xc7, 0x56, 0x50,
	0x24, 0x2b, 0x35, 0xb0, 0x9d, 0xb8, 0xa8, 0x5b, 0xa0, 0x81, 0xd3, 0x14, 0x41, 0x16, 0x49, 0x65,
	0xb5, 0x40, 0x57, 0x04, 0x3d, 0x43, 0xc5, 0x44, 0xa4, 0xe1, 0x98, 0xe4, 0xf8, 0xd2, 0x65, 0x17,
	0x5d, 0x74, 0xd7, 0x97, 0xe8, 0x13, 0x14, 0xe8, 0xa2, 0xab, 0xbe, 0x41, 0x9f, 0xa8, 0x28, 0x78,
	0x9b, 0x21, 0x39, 0xe3, 0x6d, 0xb2, 0x11, 0x20, 0x7e, 0xe7, 0x3b, 0xfc, 0xce, 0x85, 0x87, 0x1c,
	0xb0, 0x85, 0xd3, 0x54, 0xa2, 0x19, 0x46, 0x13, 0x82, 0x65, 0xc9, 0x09, 0x12, 0xe5, 0x6c, 0x86,
	0xf9, 0xf5, 0xb0, 0xe0, 0x4c, 0x32, 0x38, 0x49, 0xa9, 0x48, 0x19, 0xa2, 0x4c, 0xa0, 0x2b, 0x8e,
	0x44, 0x79, 0x2a, 0x52, 0x4e, 0x4f, 0x09, 0x47, 0x38, 0x4d, 0x59, 0x99, 0x4b, 0x9a, 0xbf, 0x43,
	0xac, 0x20, 0x7c, 0xd8, 0x0a, 0x0d, 0x73, 0x96, 0x11, 0xa1, 0x7f, 0xdb, 0x0d, 0xdc, 0x6e, 0x83,
	0x43, 0x70, 0xff, 0x06, 0x21, 0xe8, 0xf5, 0x37, 0x3f, 0x9e, 0xc0, 0x75, 0x30, 0xaf, 0xbc, 0x20,
	0x9a, 0x25, 0x9d, 0x9d, 0xce, 0xe3, 0x85, 0xd1, 0x9c, 0xfa, 0xfb, 0x2a, 0x1b, 0xfc, 0xb1, 0x0a,
	0x36, 0x1c, 0x13, 0x63, 0x8c, 0x4e, 0xb1, 0x76, 0x8a, 0xf4, 0x0e, 0x02, 0x6e, 0x01, 0x30, 0x99,
	0xb2, 0x4b, 0x24, 0x24, 0xe6, 0x52, 0x53, 0x97, 0x47, 0x0b, 0x6a, 0xe5, 0x44, 0x2d, 0xc0, 0x47,
	0x60, 0x55, 0xc3, 0x99, 0x8a, 0x32, 0xcf, 0x49, 0x2a, 0x93, 0x5b, 0xda, 0x66, 0x45, 0x2d, 0xbf,
	0xa8, 0x56, 0xe1, 0xe7, 0x20, 0x11, 0x44, 0x08, 0xca, 0xf2, 0x40, 0xbd, 0xf6, 0x7a, 0x5b, 0x33,
	0xd6, 0x2c, 0xfe, 0xbc, 0x82, 0xcd, 0x16, 0xcf, 0xc0, 0x7a, 0x2b, 0x93, 0x15, 0xc9, 0xff, 0x34,
	0xb1, 0xdf, 0x42, 0x64, 0x05, 0xfc, 0x02, 0xdc, 0x6b, 0xe1, 0x95, 0x45, 0x86, 0x25, 0x49, 0xee,
	0x68, 0xe6, 0x7a, 0x83, 0xf9, 0xbd, 0x86, 0x8d, 0x5a, 0x7e, 0x41, 0x53, 0xd2, 0x54, 0x3b, 0xe7,
	0xd4, 0x6a, 0xbc, 0x55, 0x6d, 0x0b, 0x93, 0x15, 0xc9, 0xbc, 0x53, 0xdb, 0x20, 0x3a, 0xb5, 0x0d,
	0x9e, 0x55, 0xfb, 0x7f, 0xa7, 0x36, 0x62, 0x5a, 0xb5, 0x7b, 0xa0, 0xaf, 0x8b, 0xd0, 0x90, 0xba,
	0xa0, 0x79, 0x5d, 0x05, 0xc6, 0x3a, 0x9f, 0x80, 0x5e, 0x93, 0xc3, 0x8a, 0x04, 0x68, 0x0a, 0x8c,
	0x29, 0xac, 0x80, 0x07, 0x60, 0x2d, 0x66, 0x58, 0x79, 0x8b, 0x9a, 0xd3, 0x0b, 0x39, 0x56, 0xdb,
	0x67, 0xa0, 0xeb, 0x11, 0x52, 0x3c, 0x9d, 0x9e, 0xe2, 0xf4, 0x7d, 0xb2, 0x64, 0xb6, 0xa9, 0xa1,
	0x63, 0x8b, 0xc0, 0x23, 0xb0, 0xe1, 0x95, 0x4d, 0x22, 0xc9, 0x71, 0x2e, 0x50, 0x41, 0xf2, 0x8c,
	0xe6, 0xef, 0x92, 0xe5, 0xb8, 0x6e, 0x72, 0xac, 0xf0, 0xb7, 0x06, 0x86, 0x87, 0x41, 0x97, 0x49,
	0xc4, 0xc9, 0xb9, 0x40, 0x13, 0x4c, 0xa7, 0x24, 0x4b, 0x56, 0xe2, 0x66, 0x91, 0x23, 0x72, 0x2e,
	0x5e, 0x6a, 0x10, 0x3e, 0x8b, 0x88, 0xac, 0x94, 0x88, 0x4d, 0x90, 0xb8, 0xce, 0xd3, 0x64, 0xd5,
	0x84, 0xe7, 0x11, 0xdf, 0x94, 0xf2, 0xcd, 0xe4, 0xe4, 0x3a, 0x4f, 0xe1, 0xd7, 0x60, 0xcb, 0xf1,
	0x68, 0x36, 0x25, 0x48, 0xb2, 0x48, 0xf0, 0x27, 0x9a, 0xec, 0x3a, 0xf1, 0x55, 0x36, 0x25, 0x63,
	0x16, 0x48, 0xfe, 0x12, 0x6c, 0xc6, 0x1e, 0x7c, 0xd5, 0x77, 0x83, 0x80, 0x0d, 0xdf, 0xd3, 0x7d,
	0xd4, 0x64, 0xfb, 0xd2, 0x61, 0x70, 0xb2, 0x0c, 0xbb, 0x16, 0xaf, 0x53, 0x5d, 0xf5, 0x5c, 0x9c,
	0xea, 0x6e, 0xdc, 0x74, 0x2d, 0xa9, 0xf6, 0xc8, 0xbe, 0xe8, 0x5e, 0xdc, 0xe9, 0x8d, 0x54, 0x7b,
	0x44, 0x5f, 0x6f, 0xdf, 0xa5, 0xba, 0x22, 0x46, 0xa9, 0x36, 0xbc, 0xf6, 0x54, 0xaf, 0xb9, 0x54,
	0x6b, 0xa3, 0x9b, 0x52, 0x1d, 0x7a, 0xf0, 0x55, 0xaf, 0x07, 0x01, 0xb7, 0xa7, 0x3a, 0x64, 0xfb,
	0xd2, 0x93, 0x60, 0x2c, 0xc4, 0xa9, 0x7e, 0x08, 0x96, 0x0b, 0x4e, 0x0a, 0x4c, 0x33, 0x7b, 0x34,
	0xef, 0x69, 0xf3, 0x25, 0xbb, 0x68, 0xce, 0xe4, 0x2e, 0x58, 0xaa, 0x8d, 0x58, 0x91, 0x6c, 0x68,
	0x9b, 0xc5, 0xca, 0x86, 0x15, 0x6a, 0x30, 0x39, 0x93, 0xc6, 0x69, 0xdf, 0x34, 0x0a, 0x2c, 0xde,
	0x32, 0x98, 0x5a, 0x99, 0xac, 0x48, 0xee, 0x9b, 0x72, 0xb5, 0x10, 0x59, 0x01, 0xbf, 0x05, 0x3b,
	0x8e, 0x77, 0xc1, 0xa6, 0xe5, 0x8c, 0x20, 0x79, 0xc6, 0x89, 0x38, 0x63, 0xd3, 0x0c, 0x71, 0x82,
	0xd3, 0x33, 0x92, 0x25, 0x5b, 0xda, 0xc1, 0x96, 0xb5, 0xfb, 0x41, 0x9b, 0x8d, 0x9d, 0xd5, 0xc8,
	0x18, 0xc1, 0x63, 0xb0, 0xed, 0x1c, 0x49, 0xda, 0xea, 0x66, 0x5b, 0xbb, 0xd9, 0xb4, 0x56, 0x63,
	0xda, 0xe2, 0xe4, 0x00, 0xb8, 0xf8, 0xd0, 0x79, 0xc9, 0x24, 0x46, 0x19, 0x29, 0xa6, 0x44, 0x92,
	0x2c, 0x79, 0x60, 0x5a, 0xc7, 0xa2, 0xdf, 0x29, 0xf0, 0x85, 0xc5, 0xe0, 0x61, 0x1d, 0x3b, 0x27,
	0xb8, 0x94, 0x67, 0x8c, 0xd3, 0x9f, 0xb0, 0xa4, 0x2c, 0x4f, 0x76, 0x82, 0xa4, 0x8d, 0x42, 0x54,
	0x55, 0xc4, 0xd4, 0x9a, 0xce, 0x08, 0x2b, 0x65, 0xb2, 0x6b, 0x2a, 0xa2, 0xd6, 0xc6, 0x66, 0x49,
	0x85, 0xe5, 0x9b, 0x20, 0x4e, 0x44, 0xc1, 0x72, 0x41, 0xea, 0x59, 0x37, 0x30, 0x61, 0x79, 0xa4,
	0x91, 0xb5, 0xa9, 0x86, 0xde, 0x13, 0xd0, 0x63, 0x97, 0x39, 0x51, 0xf2, 0x04, 0x2b, 0x79, 0x4a,
	0x6c, 0x49, 0x1f, 0x9a, 0x31, 0xa9, 0xb1, 0x91, 0x85, 0x74, 0x39, 0x07, 0xff, 0xdc, 0x06, 0xdb,
	0xee, 0xda, 0x76, 0xed, 0x18, 0x5d, 0xdd, 0x47, 0xea, 0x62, 0x97, 0xf4, 0x82, 0xa0, 0x70, 0x44,
	0xd0, 0x19, 0xe1, 0xc2, 0x5e, 0xe5, 0xeb, 0xc6, 0xe2, 0xc4, 0x1b, 0x10, 0x1a, 0x56, 0x0d, 0xab,
	0xad, 0x2d, 0x55, 0xd8, 0x6b, 0x5d, 0xa7, 0xc3, 0x5a, 0x0b, 0x38, 0x04, 0x5d, 0x7d, 0x04, 0xa9,
	0x4a, 0x96, 0x50, 0x12, 0x14, 0x6c, 0xef, 0xf3, 0xbb, 0x1e, 0x34, 0x66, 0xca, 0xb5, 0x0a, 0x33,
	0xb2, 0xc7, 0x97, 0xf8, 0x3d, 0xb1, 0xf7, 0x38, 0x0c, 0x08, 0xcf, 0x15, 0x02, 0x9f, 0x02, 0xab,
	0x10, 0xe9, 0xbb, 0xc7, 0x0f, 0xc0, 0x5c, 0xe1, 0x3d, 0x03, 0xbf, 0x9c, 0xb2, 0x4b, 0x4f, 0xfd,
	0x21, 0x48, 0xc8, 0x55, 0x41, 0x39, 0xc9, 0x9a, 0x3c, 0x73, 0x7f, 0xf7, 0x2d, 0x1e, 0x11, 0xeb,
	0x9c, 0xb9, 0x86, 0xf1, 0xa9, 0xf3, 0x7e, 0xce, 0xde, 0x1a, 0x03, 0x8f, 0xfc, 0x15, 0xd8, 0x74,
	0xbb, 0xb6, 0xb1, 0xcd, 0x2d, 0xee, 0x84, 0x35, 0xe8, 0x83, 0x5f, 0x3b, 0x75, 0x49, 0x55, 0xda,
	0x5b, 0x4a, 0xba, 0x07, 0xfa, 0x51, 0x49, 0x83, 0x6a, 0x76, 0x83, 0x6a, 0x5a, 0x55, 0x07, 0x60,
	0xcd, 0xa9, 0x8a, 0x48, 0xa6, 0xa4, 0x3d, 0x8b, 0x06, 0xac, 0xc1, 0x6f, 0xb7, 0xea, 0x67, 0x61,
	0x2a, 0xaf, 0x62, 0x21, 0x8f, 0xc0, 0x6a, 0x28, 0xc4, 0x49, 0x58, 0x09, 0x24, 0x08, 0xb8, 0x0f,
	0xfa, 0xf5, 0xdb, 0xb0, 0x96, 0x50, 0x6d, 0xee, 0x83, 0x15, 0xe9, 0x35, 0x18, 0x44, 0x61, 0xfa,
	0x23, 0xcb, 0x79, 0x30, 0x6d, 0xf6, 0x20, 0xd8, 0xd0, 0x1b, 0x5e, 0xce, 0xd9, 0x2e, 0x58, 0xf2,
	0x5a, 0x48, 0xd8, 0x66, 0x5b, 0xac, 0xfb, 0x46, 0xc0, 0x4f, 0xc1, 0x8a, 0x99, 0x26, 0x9c, 0xa4,
	0x84, 0x5e, 0x90, 0xcc, 0x36, 0xd7, 0xb2, 0x5e, 0x1d, 0xd9, 0xc5, 0xc1, 0xbf, 0x77, 0x54, 0x37,
	0xb6, 0x3e, 0xb2, 0xe1, 0xef, 0x1d, 0xb0, 0xa4, 0x9e, 0xcf, 0x7a, 0x7b, 0x95, 0xdc, 0xbd, 0x9d,
	0xce, 0xe3, 0xc5, 0xbd, 0x9f, 0x3b, 0xc3, 0x0f, 0xf3, 0x01, 0x30, 0xbc, 0xf9, 0x0d, 0x3f, 0x5a,
	0xc4, 0x18, 0x1f, 0x5b, 0x5d, 0xf0, 0xaf, 0x0e, 0xe8, 0x07, 0x03, 0xab, 0x52, 0xbc, 0xaf, 0x15,
	0xff, 0xf2, 0xc1, 0x15, 0xb7, 0x8f, 0xaf, 0x51, 0xd7, 0x1b, 0x98, 0x95, 0xfa, 0xbf, 0x3b, 0xf5,
	0x43, 0xad, 0x11, 0xc0, 0xc1, 0x47, 0x0a, 0xa0, 0xfd, 0xb0, 0x56, 0xcf, 0xae, 0x38, 0x86, 0x3f,
	0x3b, 0xc0, 0xbd, 0x42, 0xcd, 0x74, 0xaa, 0x02, 0x78, 0xfa, 0x91, 0x7a, 0xa6, 0x79, 0xc0, 0x47,
	0x5d, 0xab, 0x50, 0x1d, 0x10, 0xa7, 0xfc, 0x74, 0x4e, 0x7f, 0xd3, 0xee, 0xff, 0x17, 0x00, 0x00,
	0xff, 0xff, 0x17, 0x4e, 0x94, 0x45, 0xf4, 0x0e, 0x00, 0x00,
}
