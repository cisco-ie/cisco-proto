/*
Copyright 2019 Cisco Systems

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: span_ma_statistics_bag.proto

package cisco_ios_xr_ethernet_span_oper_span_monitor_session_global_statistics_statistic

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type SpanMaStatisticsBag_KEYS struct {
	Session              string   `protobuf:"bytes,1,opt,name=session,proto3" json:"session,omitempty"`
	Interface            string   `protobuf:"bytes,2,opt,name=interface,proto3" json:"interface,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SpanMaStatisticsBag_KEYS) Reset()         { *m = SpanMaStatisticsBag_KEYS{} }
func (m *SpanMaStatisticsBag_KEYS) String() string { return proto.CompactTextString(m) }
func (*SpanMaStatisticsBag_KEYS) ProtoMessage()    {}
func (*SpanMaStatisticsBag_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_89c5813264a845f9, []int{0}
}

func (m *SpanMaStatisticsBag_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SpanMaStatisticsBag_KEYS.Unmarshal(m, b)
}
func (m *SpanMaStatisticsBag_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SpanMaStatisticsBag_KEYS.Marshal(b, m, deterministic)
}
func (m *SpanMaStatisticsBag_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SpanMaStatisticsBag_KEYS.Merge(m, src)
}
func (m *SpanMaStatisticsBag_KEYS) XXX_Size() int {
	return xxx_messageInfo_SpanMaStatisticsBag_KEYS.Size(m)
}
func (m *SpanMaStatisticsBag_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_SpanMaStatisticsBag_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_SpanMaStatisticsBag_KEYS proto.InternalMessageInfo

func (m *SpanMaStatisticsBag_KEYS) GetSession() string {
	if m != nil {
		return m.Session
	}
	return ""
}

func (m *SpanMaStatisticsBag_KEYS) GetInterface() string {
	if m != nil {
		return m.Interface
	}
	return ""
}

type SpanMaStatisticsBag struct {
	RxPacketsMirrored    uint64   `protobuf:"varint,50,opt,name=rx_packets_mirrored,json=rxPacketsMirrored,proto3" json:"rx_packets_mirrored,omitempty"`
	RxOctetsMirrored     uint64   `protobuf:"varint,51,opt,name=rx_octets_mirrored,json=rxOctetsMirrored,proto3" json:"rx_octets_mirrored,omitempty"`
	TxPacketsMirrored    uint64   `protobuf:"varint,52,opt,name=tx_packets_mirrored,json=txPacketsMirrored,proto3" json:"tx_packets_mirrored,omitempty"`
	TxOctetsMirrored     uint64   `protobuf:"varint,53,opt,name=tx_octets_mirrored,json=txOctetsMirrored,proto3" json:"tx_octets_mirrored,omitempty"`
	PacketsNotMirrored   uint64   `protobuf:"varint,54,opt,name=packets_not_mirrored,json=packetsNotMirrored,proto3" json:"packets_not_mirrored,omitempty"`
	OctetsNotMirrored    uint64   `protobuf:"varint,55,opt,name=octets_not_mirrored,json=octetsNotMirrored,proto3" json:"octets_not_mirrored,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SpanMaStatisticsBag) Reset()         { *m = SpanMaStatisticsBag{} }
func (m *SpanMaStatisticsBag) String() string { return proto.CompactTextString(m) }
func (*SpanMaStatisticsBag) ProtoMessage()    {}
func (*SpanMaStatisticsBag) Descriptor() ([]byte, []int) {
	return fileDescriptor_89c5813264a845f9, []int{1}
}

func (m *SpanMaStatisticsBag) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SpanMaStatisticsBag.Unmarshal(m, b)
}
func (m *SpanMaStatisticsBag) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SpanMaStatisticsBag.Marshal(b, m, deterministic)
}
func (m *SpanMaStatisticsBag) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SpanMaStatisticsBag.Merge(m, src)
}
func (m *SpanMaStatisticsBag) XXX_Size() int {
	return xxx_messageInfo_SpanMaStatisticsBag.Size(m)
}
func (m *SpanMaStatisticsBag) XXX_DiscardUnknown() {
	xxx_messageInfo_SpanMaStatisticsBag.DiscardUnknown(m)
}

var xxx_messageInfo_SpanMaStatisticsBag proto.InternalMessageInfo

func (m *SpanMaStatisticsBag) GetRxPacketsMirrored() uint64 {
	if m != nil {
		return m.RxPacketsMirrored
	}
	return 0
}

func (m *SpanMaStatisticsBag) GetRxOctetsMirrored() uint64 {
	if m != nil {
		return m.RxOctetsMirrored
	}
	return 0
}

func (m *SpanMaStatisticsBag) GetTxPacketsMirrored() uint64 {
	if m != nil {
		return m.TxPacketsMirrored
	}
	return 0
}

func (m *SpanMaStatisticsBag) GetTxOctetsMirrored() uint64 {
	if m != nil {
		return m.TxOctetsMirrored
	}
	return 0
}

func (m *SpanMaStatisticsBag) GetPacketsNotMirrored() uint64 {
	if m != nil {
		return m.PacketsNotMirrored
	}
	return 0
}

func (m *SpanMaStatisticsBag) GetOctetsNotMirrored() uint64 {
	if m != nil {
		return m.OctetsNotMirrored
	}
	return 0
}

func init() {
	proto.RegisterType((*SpanMaStatisticsBag_KEYS)(nil), "cisco_ios_xr_ethernet_span_oper.span_monitor_session.global.statistics.statistic.span_ma_statistics_bag_KEYS")
	proto.RegisterType((*SpanMaStatisticsBag)(nil), "cisco_ios_xr_ethernet_span_oper.span_monitor_session.global.statistics.statistic.span_ma_statistics_bag")
}

func init() { proto.RegisterFile("span_ma_statistics_bag.proto", fileDescriptor_89c5813264a845f9) }

var fileDescriptor_89c5813264a845f9 = []byte{
	// 269 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x91, 0xcd, 0x4a, 0x03, 0x31,
	0x10, 0x80, 0xd9, 0x22, 0x4a, 0x73, 0xd2, 0x54, 0x64, 0xc1, 0x1e, 0x4a, 0x4f, 0x3d, 0x48, 0x10,
	0xeb, 0xcf, 0x13, 0x78, 0x12, 0xb5, 0x54, 0x3c, 0x78, 0x1a, 0xb2, 0x31, 0xd6, 0x60, 0x9b, 0x59,
	0x66, 0xe6, 0xb0, 0x4f, 0xe6, 0xf3, 0x09, 0xc9, 0xd6, 0x6d, 0x75, 0x6f, 0xbb, 0xf9, 0xbe, 0xf9,
	0x32, 0x10, 0x35, 0xe6, 0xda, 0x46, 0xd8, 0x58, 0x60, 0xb1, 0x12, 0x58, 0x82, 0x63, 0xa8, 0xec,
	0xca, 0xd4, 0x84, 0x82, 0x7a, 0xe1, 0x02, 0x3b, 0x84, 0x80, 0x0c, 0x0d, 0x81, 0x97, 0x4f, 0x4f,
	0xd1, 0x0b, 0xa4, 0x19, 0xac, 0x3d, 0x99, 0x3c, 0x8d, 0x31, 0x08, 0x12, 0xb0, 0x67, 0x0e, 0x18,
	0xcd, 0x6a, 0x8d, 0x95, 0x5d, 0x9b, 0xae, 0xd8, 0x7d, 0x4e, 0x5f, 0xd5, 0x79, 0xff, 0x8d, 0xf0,
	0x70, 0xff, 0xf6, 0xa2, 0x4b, 0x75, 0xd4, 0x56, 0xca, 0x62, 0x52, 0xcc, 0x86, 0xcb, 0xed, 0xaf,
	0x1e, 0xab, 0x61, 0x88, 0xe2, 0xe9, 0xc3, 0x3a, 0x5f, 0x0e, 0x12, 0xeb, 0x0e, 0xa6, 0xdf, 0x03,
	0x75, 0xd6, 0xdf, 0xd5, 0x46, 0x8d, 0xa8, 0x81, 0xda, 0xba, 0x2f, 0x2f, 0x0c, 0x9b, 0x40, 0x84,
	0xe4, 0xdf, 0xcb, 0xab, 0x49, 0x31, 0x3b, 0x58, 0x9e, 0x50, 0xb3, 0xc8, 0xe4, 0xb1, 0x05, 0xfa,
	0x42, 0x69, 0x6a, 0x00, 0x9d, 0xec, 0xe9, 0xf3, 0xa4, 0x1f, 0x53, 0xf3, 0x9c, 0xc0, 0xaf, 0x6d,
	0xd4, 0x48, 0x7a, 0xea, 0xd7, 0xb9, 0x2e, 0x7d, 0x75, 0xf9, 0x5f, 0xbf, 0xc9, 0x75, 0xf9, 0x5b,
	0xbf, 0x54, 0xa7, 0xdb, 0x74, 0x44, 0xe9, 0xfc, 0xdb, 0xe4, 0xeb, 0x96, 0x3d, 0xa1, 0xec, 0xee,
	0xd3, 0xc6, 0xf7, 0x06, 0xee, 0xf2, 0x3e, 0x19, 0xed, 0xf8, 0xd5, 0x61, 0x7a, 0xe8, 0xf9, 0x4f,
	0x00, 0x00, 0x00, 0xff, 0xff, 0x88, 0x88, 0xa8, 0x93, 0x08, 0x02, 0x00, 0x00,
}
