/*
Copyright 2019 Cisco Systems

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: span_mgr_session_bag.proto

package cisco_ios_xr_ethernet_span_oper_span_monitor_session_global_global_sessions_global_session

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type SpanMgrSessionBag_KEYS struct {
	Session              string   `protobuf:"bytes,1,opt,name=session,proto3" json:"session,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SpanMgrSessionBag_KEYS) Reset()         { *m = SpanMgrSessionBag_KEYS{} }
func (m *SpanMgrSessionBag_KEYS) String() string { return proto.CompactTextString(m) }
func (*SpanMgrSessionBag_KEYS) ProtoMessage()    {}
func (*SpanMgrSessionBag_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_28510afab5a9450e, []int{0}
}

func (m *SpanMgrSessionBag_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SpanMgrSessionBag_KEYS.Unmarshal(m, b)
}
func (m *SpanMgrSessionBag_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SpanMgrSessionBag_KEYS.Marshal(b, m, deterministic)
}
func (m *SpanMgrSessionBag_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SpanMgrSessionBag_KEYS.Merge(m, src)
}
func (m *SpanMgrSessionBag_KEYS) XXX_Size() int {
	return xxx_messageInfo_SpanMgrSessionBag_KEYS.Size(m)
}
func (m *SpanMgrSessionBag_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_SpanMgrSessionBag_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_SpanMgrSessionBag_KEYS proto.InternalMessageInfo

func (m *SpanMgrSessionBag_KEYS) GetSession() string {
	if m != nil {
		return m.Session
	}
	return ""
}

type SpanBagDstIntfData_ struct {
	InterfaceName        string   `protobuf:"bytes,1,opt,name=interface_name,json=interfaceName,proto3" json:"interface_name,omitempty"`
	InterfaceState       string   `protobuf:"bytes,2,opt,name=interface_state,json=interfaceState,proto3" json:"interface_state,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SpanBagDstIntfData_) Reset()         { *m = SpanBagDstIntfData_{} }
func (m *SpanBagDstIntfData_) String() string { return proto.CompactTextString(m) }
func (*SpanBagDstIntfData_) ProtoMessage()    {}
func (*SpanBagDstIntfData_) Descriptor() ([]byte, []int) {
	return fileDescriptor_28510afab5a9450e, []int{1}
}

func (m *SpanBagDstIntfData_) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SpanBagDstIntfData_.Unmarshal(m, b)
}
func (m *SpanBagDstIntfData_) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SpanBagDstIntfData_.Marshal(b, m, deterministic)
}
func (m *SpanBagDstIntfData_) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SpanBagDstIntfData_.Merge(m, src)
}
func (m *SpanBagDstIntfData_) XXX_Size() int {
	return xxx_messageInfo_SpanBagDstIntfData_.Size(m)
}
func (m *SpanBagDstIntfData_) XXX_DiscardUnknown() {
	xxx_messageInfo_SpanBagDstIntfData_.DiscardUnknown(m)
}

var xxx_messageInfo_SpanBagDstIntfData_ proto.InternalMessageInfo

func (m *SpanBagDstIntfData_) GetInterfaceName() string {
	if m != nil {
		return m.InterfaceName
	}
	return ""
}

func (m *SpanBagDstIntfData_) GetInterfaceState() string {
	if m != nil {
		return m.InterfaceState
	}
	return ""
}

type SpanBagDstPwData_ struct {
	PseudowireName       string   `protobuf:"bytes,1,opt,name=pseudowire_name,json=pseudowireName,proto3" json:"pseudowire_name,omitempty"`
	PseudowireIsUp       bool     `protobuf:"varint,2,opt,name=pseudowire_is_up,json=pseudowireIsUp,proto3" json:"pseudowire_is_up,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SpanBagDstPwData_) Reset()         { *m = SpanBagDstPwData_{} }
func (m *SpanBagDstPwData_) String() string { return proto.CompactTextString(m) }
func (*SpanBagDstPwData_) ProtoMessage()    {}
func (*SpanBagDstPwData_) Descriptor() ([]byte, []int) {
	return fileDescriptor_28510afab5a9450e, []int{2}
}

func (m *SpanBagDstPwData_) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SpanBagDstPwData_.Unmarshal(m, b)
}
func (m *SpanBagDstPwData_) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SpanBagDstPwData_.Marshal(b, m, deterministic)
}
func (m *SpanBagDstPwData_) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SpanBagDstPwData_.Merge(m, src)
}
func (m *SpanBagDstPwData_) XXX_Size() int {
	return xxx_messageInfo_SpanBagDstPwData_.Size(m)
}
func (m *SpanBagDstPwData_) XXX_DiscardUnknown() {
	xxx_messageInfo_SpanBagDstPwData_.DiscardUnknown(m)
}

var xxx_messageInfo_SpanBagDstPwData_ proto.InternalMessageInfo

func (m *SpanBagDstPwData_) GetPseudowireName() string {
	if m != nil {
		return m.PseudowireName
	}
	return ""
}

func (m *SpanBagDstPwData_) GetPseudowireIsUp() bool {
	if m != nil {
		return m.PseudowireIsUp
	}
	return false
}

type SpanBagDstNhIpv4Data_ struct {
	Ipv4Address          string   `protobuf:"bytes,1,opt,name=ipv4_address,json=ipv4Address,proto3" json:"ipv4_address,omitempty"`
	VrfName              string   `protobuf:"bytes,2,opt,name=vrf_name,json=vrfName,proto3" json:"vrf_name,omitempty"`
	AddressIsReachable   bool     `protobuf:"varint,3,opt,name=address_is_reachable,json=addressIsReachable,proto3" json:"address_is_reachable,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SpanBagDstNhIpv4Data_) Reset()         { *m = SpanBagDstNhIpv4Data_{} }
func (m *SpanBagDstNhIpv4Data_) String() string { return proto.CompactTextString(m) }
func (*SpanBagDstNhIpv4Data_) ProtoMessage()    {}
func (*SpanBagDstNhIpv4Data_) Descriptor() ([]byte, []int) {
	return fileDescriptor_28510afab5a9450e, []int{3}
}

func (m *SpanBagDstNhIpv4Data_) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SpanBagDstNhIpv4Data_.Unmarshal(m, b)
}
func (m *SpanBagDstNhIpv4Data_) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SpanBagDstNhIpv4Data_.Marshal(b, m, deterministic)
}
func (m *SpanBagDstNhIpv4Data_) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SpanBagDstNhIpv4Data_.Merge(m, src)
}
func (m *SpanBagDstNhIpv4Data_) XXX_Size() int {
	return xxx_messageInfo_SpanBagDstNhIpv4Data_.Size(m)
}
func (m *SpanBagDstNhIpv4Data_) XXX_DiscardUnknown() {
	xxx_messageInfo_SpanBagDstNhIpv4Data_.DiscardUnknown(m)
}

var xxx_messageInfo_SpanBagDstNhIpv4Data_ proto.InternalMessageInfo

func (m *SpanBagDstNhIpv4Data_) GetIpv4Address() string {
	if m != nil {
		return m.Ipv4Address
	}
	return ""
}

func (m *SpanBagDstNhIpv4Data_) GetVrfName() string {
	if m != nil {
		return m.VrfName
	}
	return ""
}

func (m *SpanBagDstNhIpv4Data_) GetAddressIsReachable() bool {
	if m != nil {
		return m.AddressIsReachable
	}
	return false
}

type SpanBagDstNhIpv6Data_ struct {
	Ipv6Address          string   `protobuf:"bytes,1,opt,name=ipv6_address,json=ipv6Address,proto3" json:"ipv6_address,omitempty"`
	VrfName              string   `protobuf:"bytes,2,opt,name=vrf_name,json=vrfName,proto3" json:"vrf_name,omitempty"`
	AddressIsReachable   bool     `protobuf:"varint,3,opt,name=address_is_reachable,json=addressIsReachable,proto3" json:"address_is_reachable,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SpanBagDstNhIpv6Data_) Reset()         { *m = SpanBagDstNhIpv6Data_{} }
func (m *SpanBagDstNhIpv6Data_) String() string { return proto.CompactTextString(m) }
func (*SpanBagDstNhIpv6Data_) ProtoMessage()    {}
func (*SpanBagDstNhIpv6Data_) Descriptor() ([]byte, []int) {
	return fileDescriptor_28510afab5a9450e, []int{4}
}

func (m *SpanBagDstNhIpv6Data_) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SpanBagDstNhIpv6Data_.Unmarshal(m, b)
}
func (m *SpanBagDstNhIpv6Data_) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SpanBagDstNhIpv6Data_.Marshal(b, m, deterministic)
}
func (m *SpanBagDstNhIpv6Data_) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SpanBagDstNhIpv6Data_.Merge(m, src)
}
func (m *SpanBagDstNhIpv6Data_) XXX_Size() int {
	return xxx_messageInfo_SpanBagDstNhIpv6Data_.Size(m)
}
func (m *SpanBagDstNhIpv6Data_) XXX_DiscardUnknown() {
	xxx_messageInfo_SpanBagDstNhIpv6Data_.DiscardUnknown(m)
}

var xxx_messageInfo_SpanBagDstNhIpv6Data_ proto.InternalMessageInfo

func (m *SpanBagDstNhIpv6Data_) GetIpv6Address() string {
	if m != nil {
		return m.Ipv6Address
	}
	return ""
}

func (m *SpanBagDstNhIpv6Data_) GetVrfName() string {
	if m != nil {
		return m.VrfName
	}
	return ""
}

func (m *SpanBagDstNhIpv6Data_) GetAddressIsReachable() bool {
	if m != nil {
		return m.AddressIsReachable
	}
	return false
}

type SpanBagDstData struct {
	DestinationClass     string                 `protobuf:"bytes,1,opt,name=destination_class,json=destinationClass,proto3" json:"destination_class,omitempty"`
	InterfaceData        *SpanBagDstIntfData_   `protobuf:"bytes,2,opt,name=interface_data,json=interfaceData,proto3" json:"interface_data,omitempty"`
	PseudowireData       *SpanBagDstPwData_     `protobuf:"bytes,3,opt,name=pseudowire_data,json=pseudowireData,proto3" json:"pseudowire_data,omitempty"`
	NextHopIpv4Data      *SpanBagDstNhIpv4Data_ `protobuf:"bytes,4,opt,name=next_hop_ipv4_data,json=nextHopIpv4Data,proto3" json:"next_hop_ipv4_data,omitempty"`
	NextHopIpv6Data      *SpanBagDstNhIpv6Data_ `protobuf:"bytes,5,opt,name=next_hop_ipv6_data,json=nextHopIpv6Data,proto3" json:"next_hop_ipv6_data,omitempty"`
	InvalidValue         uint32                 `protobuf:"varint,6,opt,name=invalid_value,json=invalidValue,proto3" json:"invalid_value,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *SpanBagDstData) Reset()         { *m = SpanBagDstData{} }
func (m *SpanBagDstData) String() string { return proto.CompactTextString(m) }
func (*SpanBagDstData) ProtoMessage()    {}
func (*SpanBagDstData) Descriptor() ([]byte, []int) {
	return fileDescriptor_28510afab5a9450e, []int{5}
}

func (m *SpanBagDstData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SpanBagDstData.Unmarshal(m, b)
}
func (m *SpanBagDstData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SpanBagDstData.Marshal(b, m, deterministic)
}
func (m *SpanBagDstData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SpanBagDstData.Merge(m, src)
}
func (m *SpanBagDstData) XXX_Size() int {
	return xxx_messageInfo_SpanBagDstData.Size(m)
}
func (m *SpanBagDstData) XXX_DiscardUnknown() {
	xxx_messageInfo_SpanBagDstData.DiscardUnknown(m)
}

var xxx_messageInfo_SpanBagDstData proto.InternalMessageInfo

func (m *SpanBagDstData) GetDestinationClass() string {
	if m != nil {
		return m.DestinationClass
	}
	return ""
}

func (m *SpanBagDstData) GetInterfaceData() *SpanBagDstIntfData_ {
	if m != nil {
		return m.InterfaceData
	}
	return nil
}

func (m *SpanBagDstData) GetPseudowireData() *SpanBagDstPwData_ {
	if m != nil {
		return m.PseudowireData
	}
	return nil
}

func (m *SpanBagDstData) GetNextHopIpv4Data() *SpanBagDstNhIpv4Data_ {
	if m != nil {
		return m.NextHopIpv4Data
	}
	return nil
}

func (m *SpanBagDstData) GetNextHopIpv6Data() *SpanBagDstNhIpv6Data_ {
	if m != nil {
		return m.NextHopIpv6Data
	}
	return nil
}

func (m *SpanBagDstData) GetInvalidValue() uint32 {
	if m != nil {
		return m.InvalidValue
	}
	return 0
}

type SpanBagDstIdNexthopV4_ struct {
	Ipv4Address          string   `protobuf:"bytes,1,opt,name=ipv4_address,json=ipv4Address,proto3" json:"ipv4_address,omitempty"`
	VrfName              string   `protobuf:"bytes,2,opt,name=vrf_name,json=vrfName,proto3" json:"vrf_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SpanBagDstIdNexthopV4_) Reset()         { *m = SpanBagDstIdNexthopV4_{} }
func (m *SpanBagDstIdNexthopV4_) String() string { return proto.CompactTextString(m) }
func (*SpanBagDstIdNexthopV4_) ProtoMessage()    {}
func (*SpanBagDstIdNexthopV4_) Descriptor() ([]byte, []int) {
	return fileDescriptor_28510afab5a9450e, []int{6}
}

func (m *SpanBagDstIdNexthopV4_) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SpanBagDstIdNexthopV4_.Unmarshal(m, b)
}
func (m *SpanBagDstIdNexthopV4_) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SpanBagDstIdNexthopV4_.Marshal(b, m, deterministic)
}
func (m *SpanBagDstIdNexthopV4_) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SpanBagDstIdNexthopV4_.Merge(m, src)
}
func (m *SpanBagDstIdNexthopV4_) XXX_Size() int {
	return xxx_messageInfo_SpanBagDstIdNexthopV4_.Size(m)
}
func (m *SpanBagDstIdNexthopV4_) XXX_DiscardUnknown() {
	xxx_messageInfo_SpanBagDstIdNexthopV4_.DiscardUnknown(m)
}

var xxx_messageInfo_SpanBagDstIdNexthopV4_ proto.InternalMessageInfo

func (m *SpanBagDstIdNexthopV4_) GetIpv4Address() string {
	if m != nil {
		return m.Ipv4Address
	}
	return ""
}

func (m *SpanBagDstIdNexthopV4_) GetVrfName() string {
	if m != nil {
		return m.VrfName
	}
	return ""
}

type SpanBagDstIdNexthopV6_ struct {
	Ipv6Address          string   `protobuf:"bytes,1,opt,name=ipv6_address,json=ipv6Address,proto3" json:"ipv6_address,omitempty"`
	VrfName              string   `protobuf:"bytes,2,opt,name=vrf_name,json=vrfName,proto3" json:"vrf_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SpanBagDstIdNexthopV6_) Reset()         { *m = SpanBagDstIdNexthopV6_{} }
func (m *SpanBagDstIdNexthopV6_) String() string { return proto.CompactTextString(m) }
func (*SpanBagDstIdNexthopV6_) ProtoMessage()    {}
func (*SpanBagDstIdNexthopV6_) Descriptor() ([]byte, []int) {
	return fileDescriptor_28510afab5a9450e, []int{7}
}

func (m *SpanBagDstIdNexthopV6_) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SpanBagDstIdNexthopV6_.Unmarshal(m, b)
}
func (m *SpanBagDstIdNexthopV6_) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SpanBagDstIdNexthopV6_.Marshal(b, m, deterministic)
}
func (m *SpanBagDstIdNexthopV6_) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SpanBagDstIdNexthopV6_.Merge(m, src)
}
func (m *SpanBagDstIdNexthopV6_) XXX_Size() int {
	return xxx_messageInfo_SpanBagDstIdNexthopV6_.Size(m)
}
func (m *SpanBagDstIdNexthopV6_) XXX_DiscardUnknown() {
	xxx_messageInfo_SpanBagDstIdNexthopV6_.DiscardUnknown(m)
}

var xxx_messageInfo_SpanBagDstIdNexthopV6_ proto.InternalMessageInfo

func (m *SpanBagDstIdNexthopV6_) GetIpv6Address() string {
	if m != nil {
		return m.Ipv6Address
	}
	return ""
}

func (m *SpanBagDstIdNexthopV6_) GetVrfName() string {
	if m != nil {
		return m.VrfName
	}
	return ""
}

type SpanBagDstId struct {
	DestinationClass     string                  `protobuf:"bytes,1,opt,name=destination_class,json=destinationClass,proto3" json:"destination_class,omitempty"`
	Interface            string                  `protobuf:"bytes,2,opt,name=interface,proto3" json:"interface,omitempty"`
	PseudowireId         uint32                  `protobuf:"varint,3,opt,name=pseudowire_id,json=pseudowireId,proto3" json:"pseudowire_id,omitempty"`
	Ipv4AddressAndVrf    *SpanBagDstIdNexthopV4_ `protobuf:"bytes,4,opt,name=ipv4_address_and_vrf,json=ipv4AddressAndVrf,proto3" json:"ipv4_address_and_vrf,omitempty"`
	Ipv6AddressAndVrf    *SpanBagDstIdNexthopV6_ `protobuf:"bytes,5,opt,name=ipv6_address_and_vrf,json=ipv6AddressAndVrf,proto3" json:"ipv6_address_and_vrf,omitempty"`
	InvalidValue         uint32                  `protobuf:"varint,6,opt,name=invalid_value,json=invalidValue,proto3" json:"invalid_value,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *SpanBagDstId) Reset()         { *m = SpanBagDstId{} }
func (m *SpanBagDstId) String() string { return proto.CompactTextString(m) }
func (*SpanBagDstId) ProtoMessage()    {}
func (*SpanBagDstId) Descriptor() ([]byte, []int) {
	return fileDescriptor_28510afab5a9450e, []int{8}
}

func (m *SpanBagDstId) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SpanBagDstId.Unmarshal(m, b)
}
func (m *SpanBagDstId) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SpanBagDstId.Marshal(b, m, deterministic)
}
func (m *SpanBagDstId) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SpanBagDstId.Merge(m, src)
}
func (m *SpanBagDstId) XXX_Size() int {
	return xxx_messageInfo_SpanBagDstId.Size(m)
}
func (m *SpanBagDstId) XXX_DiscardUnknown() {
	xxx_messageInfo_SpanBagDstId.DiscardUnknown(m)
}

var xxx_messageInfo_SpanBagDstId proto.InternalMessageInfo

func (m *SpanBagDstId) GetDestinationClass() string {
	if m != nil {
		return m.DestinationClass
	}
	return ""
}

func (m *SpanBagDstId) GetInterface() string {
	if m != nil {
		return m.Interface
	}
	return ""
}

func (m *SpanBagDstId) GetPseudowireId() uint32 {
	if m != nil {
		return m.PseudowireId
	}
	return 0
}

func (m *SpanBagDstId) GetIpv4AddressAndVrf() *SpanBagDstIdNexthopV4_ {
	if m != nil {
		return m.Ipv4AddressAndVrf
	}
	return nil
}

func (m *SpanBagDstId) GetIpv6AddressAndVrf() *SpanBagDstIdNexthopV6_ {
	if m != nil {
		return m.Ipv6AddressAndVrf
	}
	return nil
}

func (m *SpanBagDstId) GetInvalidValue() uint32 {
	if m != nil {
		return m.InvalidValue
	}
	return 0
}

type SpanMgrSessionBag struct {
	Name                       string          `protobuf:"bytes,50,opt,name=name,proto3" json:"name,omitempty"`
	SessionClass               string          `protobuf:"bytes,51,opt,name=session_class,json=sessionClass,proto3" json:"session_class,omitempty"`
	Id                         uint32          `protobuf:"varint,52,opt,name=id,proto3" json:"id,omitempty"`
	DestinationData            *SpanBagDstData `protobuf:"bytes,53,opt,name=destination_data,json=destinationData,proto3" json:"destination_data,omitempty"`
	DestinationId              *SpanBagDstId   `protobuf:"bytes,54,opt,name=destination_id,json=destinationId,proto3" json:"destination_id,omitempty"`
	DestinationError           uint32          `protobuf:"varint,55,opt,name=destination_error,json=destinationError,proto3" json:"destination_error,omitempty"`
	DestinationInterfaceName   string          `protobuf:"bytes,56,opt,name=destination_interface_name,json=destinationInterfaceName,proto3" json:"destination_interface_name,omitempty"`
	DestinationInterfaceHandle string          `protobuf:"bytes,57,opt,name=destination_interface_handle,json=destinationInterfaceHandle,proto3" json:"destination_interface_handle,omitempty"`
	InterfaceError             uint32          `protobuf:"varint,58,opt,name=interface_error,json=interfaceError,proto3" json:"interface_error,omitempty"`
	XXX_NoUnkeyedLiteral       struct{}        `json:"-"`
	XXX_unrecognized           []byte          `json:"-"`
	XXX_sizecache              int32           `json:"-"`
}

func (m *SpanMgrSessionBag) Reset()         { *m = SpanMgrSessionBag{} }
func (m *SpanMgrSessionBag) String() string { return proto.CompactTextString(m) }
func (*SpanMgrSessionBag) ProtoMessage()    {}
func (*SpanMgrSessionBag) Descriptor() ([]byte, []int) {
	return fileDescriptor_28510afab5a9450e, []int{9}
}

func (m *SpanMgrSessionBag) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SpanMgrSessionBag.Unmarshal(m, b)
}
func (m *SpanMgrSessionBag) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SpanMgrSessionBag.Marshal(b, m, deterministic)
}
func (m *SpanMgrSessionBag) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SpanMgrSessionBag.Merge(m, src)
}
func (m *SpanMgrSessionBag) XXX_Size() int {
	return xxx_messageInfo_SpanMgrSessionBag.Size(m)
}
func (m *SpanMgrSessionBag) XXX_DiscardUnknown() {
	xxx_messageInfo_SpanMgrSessionBag.DiscardUnknown(m)
}

var xxx_messageInfo_SpanMgrSessionBag proto.InternalMessageInfo

func (m *SpanMgrSessionBag) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *SpanMgrSessionBag) GetSessionClass() string {
	if m != nil {
		return m.SessionClass
	}
	return ""
}

func (m *SpanMgrSessionBag) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *SpanMgrSessionBag) GetDestinationData() *SpanBagDstData {
	if m != nil {
		return m.DestinationData
	}
	return nil
}

func (m *SpanMgrSessionBag) GetDestinationId() *SpanBagDstId {
	if m != nil {
		return m.DestinationId
	}
	return nil
}

func (m *SpanMgrSessionBag) GetDestinationError() uint32 {
	if m != nil {
		return m.DestinationError
	}
	return 0
}

func (m *SpanMgrSessionBag) GetDestinationInterfaceName() string {
	if m != nil {
		return m.DestinationInterfaceName
	}
	return ""
}

func (m *SpanMgrSessionBag) GetDestinationInterfaceHandle() string {
	if m != nil {
		return m.DestinationInterfaceHandle
	}
	return ""
}

func (m *SpanMgrSessionBag) GetInterfaceError() uint32 {
	if m != nil {
		return m.InterfaceError
	}
	return 0
}

func init() {
	proto.RegisterType((*SpanMgrSessionBag_KEYS)(nil), "cisco_ios_xr_ethernet_span_oper.span_monitor_session.global.global_sessions.global_session.span_mgr_session_bag_KEYS")
	proto.RegisterType((*SpanBagDstIntfData_)(nil), "cisco_ios_xr_ethernet_span_oper.span_monitor_session.global.global_sessions.global_session.span_bag_dst_intf_data_")
	proto.RegisterType((*SpanBagDstPwData_)(nil), "cisco_ios_xr_ethernet_span_oper.span_monitor_session.global.global_sessions.global_session.span_bag_dst_pw_data_")
	proto.RegisterType((*SpanBagDstNhIpv4Data_)(nil), "cisco_ios_xr_ethernet_span_oper.span_monitor_session.global.global_sessions.global_session.span_bag_dst_nh_ipv4_data_")
	proto.RegisterType((*SpanBagDstNhIpv6Data_)(nil), "cisco_ios_xr_ethernet_span_oper.span_monitor_session.global.global_sessions.global_session.span_bag_dst_nh_ipv6_data_")
	proto.RegisterType((*SpanBagDstData)(nil), "cisco_ios_xr_ethernet_span_oper.span_monitor_session.global.global_sessions.global_session.span_bag_dst_data")
	proto.RegisterType((*SpanBagDstIdNexthopV4_)(nil), "cisco_ios_xr_ethernet_span_oper.span_monitor_session.global.global_sessions.global_session.span_bag_dst_id_nexthop_v4_")
	proto.RegisterType((*SpanBagDstIdNexthopV6_)(nil), "cisco_ios_xr_ethernet_span_oper.span_monitor_session.global.global_sessions.global_session.span_bag_dst_id_nexthop_v6_")
	proto.RegisterType((*SpanBagDstId)(nil), "cisco_ios_xr_ethernet_span_oper.span_monitor_session.global.global_sessions.global_session.span_bag_dst_id")
	proto.RegisterType((*SpanMgrSessionBag)(nil), "cisco_ios_xr_ethernet_span_oper.span_monitor_session.global.global_sessions.global_session.span_mgr_session_bag")
}

func init() { proto.RegisterFile("span_mgr_session_bag.proto", fileDescriptor_28510afab5a9450e) }

var fileDescriptor_28510afab5a9450e = []byte{
	// 734 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xc4, 0x96, 0xcd, 0x4e, 0x1b, 0x3b,
	0x14, 0xc7, 0x35, 0x7c, 0x73, 0xc8, 0x07, 0x58, 0x5c, 0xdd, 0x81, 0xcb, 0x82, 0x9b, 0xab, 0x2b,
	0x90, 0x2a, 0x45, 0x15, 0x84, 0xe9, 0x87, 0xba, 0x28, 0x6a, 0x91, 0x88, 0x2a, 0x75, 0x31, 0xa8,
	0x48, 0x6d, 0x17, 0x96, 0x13, 0x3b, 0xc4, 0x6d, 0xe2, 0x99, 0xda, 0xc3, 0xc0, 0x43, 0x74, 0xd5,
	0x55, 0xc5, 0xb6, 0x9b, 0xbe, 0x58, 0x57, 0x7d, 0x85, 0x2e, 0x2a, 0x9f, 0x99, 0x24, 0x1e, 0x08,
	0x55, 0x2b, 0x44, 0x58, 0x25, 0xf3, 0xf7, 0x39, 0x3e, 0x3f, 0xdb, 0xff, 0x33, 0x63, 0x58, 0x37,
	0x31, 0x53, 0xb4, 0x7f, 0xa2, 0xa9, 0x11, 0xc6, 0xc8, 0x48, 0xd1, 0x16, 0x3b, 0xa9, 0xc7, 0x3a,
	0x4a, 0x22, 0xf2, 0xa6, 0x2d, 0x4d, 0x3b, 0xa2, 0x32, 0x32, 0xf4, 0x5c, 0x53, 0x91, 0x74, 0x85,
	0x56, 0x22, 0xa1, 0x98, 0x11, 0xc5, 0x42, 0xd7, 0xb3, 0xdc, 0x48, 0xc9, 0x24, 0x1a, 0xe6, 0xd7,
	0x4f, 0x7a, 0x51, 0x8b, 0xf5, 0xf2, 0x9f, 0x81, 0x6a, 0x2e, 0x3d, 0xd7, 0xf6, 0x60, 0x6d, 0x5c,
	0x65, 0xfa, 0xe2, 0xe0, 0xf5, 0x11, 0xf1, 0x61, 0x3e, 0xd7, 0x7c, 0x6f, 0xd3, 0xdb, 0x5e, 0x0c,
	0x07, 0x8f, 0x35, 0x09, 0x7f, 0x63, 0x9a, 0x0d, 0xe5, 0x26, 0xa1, 0x52, 0x25, 0x1d, 0xca, 0x59,
	0xc2, 0x28, 0xf9, 0x1f, 0x2a, 0x52, 0x25, 0x42, 0x77, 0x58, 0x5b, 0x50, 0xc5, 0xfa, 0x22, 0xcf,
	0x2d, 0x0f, 0xd5, 0x97, 0xac, 0x2f, 0xc8, 0x16, 0x54, 0x47, 0x61, 0x26, 0x61, 0x89, 0xf0, 0xa7,
	0x30, 0x6e, 0x94, 0x7d, 0x64, 0xd5, 0xda, 0x3b, 0xf8, 0xab, 0x50, 0x2a, 0x3e, 0xcb, 0x0b, 0x6d,
	0x41, 0x35, 0x36, 0xe2, 0x94, 0x47, 0x67, 0x52, 0x17, 0x2a, 0x55, 0x46, 0x32, 0x96, 0xda, 0x86,
	0x65, 0x27, 0x50, 0x1a, 0x7a, 0x1a, 0x63, 0xad, 0x05, 0x37, 0xb2, 0x69, 0x5e, 0xc5, 0xb5, 0x8f,
	0x5e, 0x7e, 0x10, 0x83, 0x62, 0xaa, 0x4b, 0x65, 0x9c, 0x36, 0xf2, 0x8a, 0xff, 0x42, 0x09, 0x9f,
	0x18, 0xe7, 0x5a, 0x18, 0x93, 0x97, 0x5b, 0xb2, 0xda, 0x7e, 0x26, 0x91, 0x35, 0x58, 0x48, 0x75,
	0x27, 0xa3, 0xc9, 0xd6, 0x33, 0x9f, 0xea, 0x0e, 0x62, 0xdc, 0x87, 0xd5, 0x3c, 0xd1, 0x32, 0x68,
	0xc1, 0xda, 0x5d, 0xd6, 0xea, 0x09, 0x7f, 0x1a, 0x51, 0x48, 0x3e, 0xd6, 0x34, 0xe1, 0x60, 0xe4,
	0x3a, 0x9c, 0xa0, 0x80, 0x13, 0x8c, 0xc1, 0x09, 0x6e, 0x05, 0xe7, 0xfb, 0x2c, 0xac, 0x14, 0x70,
	0x2c, 0x06, 0xb9, 0x07, 0x2b, 0x5c, 0x98, 0x44, 0x2a, 0x96, 0x58, 0xf3, 0xb4, 0x7b, 0x6c, 0x88,
	0xb2, 0xec, 0x0c, 0x3c, 0xb3, 0x3a, 0xb9, 0xf0, 0x5c, 0x77, 0xd8, 0x7c, 0xc4, 0x5a, 0xda, 0x31,
	0xf5, 0xdb, 0x33, 0x79, 0xfd, 0x1a, 0xab, 0x3a, 0x96, 0x7c, 0x6e, 0x57, 0x72, 0xe1, 0x15, 0x1c,
	0x85, 0x74, 0xd3, 0x48, 0xf7, 0x61, 0x62, 0x74, 0x03, 0x77, 0xbb, 0xd6, 0x44, 0xb8, 0x2f, 0x1e,
	0x10, 0x25, 0xce, 0x13, 0xda, 0x8d, 0xe2, 0x91, 0x27, 0xfd, 0x19, 0xe4, 0x4b, 0x27, 0xc6, 0x57,
	0x68, 0x88, 0xb0, 0x6a, 0x89, 0x0e, 0xa3, 0xb8, 0x19, 0xa7, 0x8d, 0xb1, 0x94, 0x99, 0x55, 0xfd,
	0xd9, 0x3b, 0xa1, 0x0c, 0xae, 0x52, 0x06, 0x48, 0xf9, 0x1f, 0x94, 0xa5, 0x4a, 0x59, 0x4f, 0x72,
	0x9a, 0xb2, 0xde, 0xa9, 0xf0, 0xe7, 0x36, 0xbd, 0xed, 0x72, 0x58, 0xca, 0xc5, 0x63, 0xab, 0xd5,
	0xde, 0xc2, 0x3f, 0x45, 0xdf, 0x70, 0x6a, 0xe7, 0xb1, 0x0b, 0x4b, 0x1b, 0x37, 0x7c, 0x17, 0xfc,
	0x72, 0xf2, 0xe0, 0x86, 0x9d, 0x5d, 0xfb, 0x31, 0x0d, 0xd5, 0x4b, 0xb3, 0xff, 0x59, 0x97, 0x6e,
	0xc0, 0xe2, 0xb0, 0x33, 0xf2, 0xc9, 0x47, 0x82, 0xdd, 0x3d, 0xf7, 0x75, 0xca, 0xb1, 0x47, 0xca,
	0x61, 0xc9, 0x79, 0x97, 0x72, 0xf2, 0xd5, 0x83, 0x55, 0x77, 0x7f, 0x28, 0x53, 0x9c, 0xa6, 0xba,
	0x93, 0x1b, 0xf6, 0x6c, 0x72, 0xed, 0x5e, 0x38, 0xb6, 0x70, 0xc5, 0x39, 0xa0, 0x7d, 0xc5, 0x8f,
	0x75, 0x67, 0x80, 0x1a, 0x5c, 0x41, 0x9d, 0xbd, 0x43, 0xd4, 0x20, 0x43, 0x0d, 0x8a, 0xa8, 0xbf,
	0x65, 0xdc, 0x6f, 0x33, 0xb0, 0x3a, 0xee, 0x9b, 0x4e, 0x08, 0xcc, 0xa0, 0x5d, 0x76, 0xf0, 0x44,
	0xf1, 0xbf, 0x9d, 0x71, 0x10, 0x92, 0x79, 0x62, 0x17, 0x07, 0x4b, 0xb9, 0x98, 0xf9, 0xa1, 0x02,
	0x53, 0x92, 0xfb, 0x0d, 0xac, 0x35, 0x25, 0x39, 0xf9, 0xec, 0x81, 0x6b, 0x9a, 0xac, 0xc7, 0xf7,
	0x70, 0xb7, 0xfa, 0x13, 0xdb, 0x2d, 0x5b, 0x34, 0xac, 0x3a, 0x18, 0xd8, 0xda, 0x9f, 0x3c, 0xa8,
	0xb8, 0x68, 0x92, 0xfb, 0x01, 0x82, 0xbd, 0x9f, 0xe0, 0x31, 0x86, 0x65, 0x07, 0xa1, 0x79, 0xa5,
	0xf9, 0x84, 0xd6, 0x91, 0xf6, 0x1f, 0xe0, 0x76, 0xba, 0xfb, 0x78, 0x60, 0x75, 0xf2, 0x04, 0xd6,
	0x0b, 0x0b, 0x28, 0xde, 0xa5, 0x1e, 0xe2, 0xf1, 0xf8, 0xee, 0xfc, 0x85, 0x6b, 0xd5, 0x53, 0xd8,
	0x18, 0x9f, 0xdd, 0x65, 0x8a, 0xf7, 0x84, 0xff, 0x08, 0xf3, 0xd7, 0xc7, 0xe5, 0x1f, 0x62, 0x44,
	0xf1, 0x62, 0x96, 0xa1, 0x3e, 0x46, 0xd4, 0xd1, 0x87, 0x1b, 0x41, 0x5b, 0x73, 0x78, 0x3b, 0xdd,
	0xfd, 0x19, 0x00, 0x00, 0xff, 0xff, 0xd7, 0x9c, 0x02, 0xb0, 0xbb, 0x0a, 0x00, 0x00,
}
