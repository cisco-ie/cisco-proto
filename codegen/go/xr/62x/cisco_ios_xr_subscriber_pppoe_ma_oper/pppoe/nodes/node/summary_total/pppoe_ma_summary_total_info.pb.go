/*
Copyright 2019 Cisco Systems

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: pppoe_ma_summary_total_info.proto

package cisco_ios_xr_subscriber_pppoe_ma_oper_pppoe_nodes_node_summary_total

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type PppoeMaSummaryTotalInfo_KEYS struct {
	NodeName             string   `protobuf:"bytes,1,opt,name=node_name,json=nodeName,proto3" json:"node_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PppoeMaSummaryTotalInfo_KEYS) Reset()         { *m = PppoeMaSummaryTotalInfo_KEYS{} }
func (m *PppoeMaSummaryTotalInfo_KEYS) String() string { return proto.CompactTextString(m) }
func (*PppoeMaSummaryTotalInfo_KEYS) ProtoMessage()    {}
func (*PppoeMaSummaryTotalInfo_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_14ef40323ac5eb64, []int{0}
}

func (m *PppoeMaSummaryTotalInfo_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PppoeMaSummaryTotalInfo_KEYS.Unmarshal(m, b)
}
func (m *PppoeMaSummaryTotalInfo_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PppoeMaSummaryTotalInfo_KEYS.Marshal(b, m, deterministic)
}
func (m *PppoeMaSummaryTotalInfo_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PppoeMaSummaryTotalInfo_KEYS.Merge(m, src)
}
func (m *PppoeMaSummaryTotalInfo_KEYS) XXX_Size() int {
	return xxx_messageInfo_PppoeMaSummaryTotalInfo_KEYS.Size(m)
}
func (m *PppoeMaSummaryTotalInfo_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_PppoeMaSummaryTotalInfo_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_PppoeMaSummaryTotalInfo_KEYS proto.InternalMessageInfo

func (m *PppoeMaSummaryTotalInfo_KEYS) GetNodeName() string {
	if m != nil {
		return m.NodeName
	}
	return ""
}

type PppoeMaSummaryTotalInfo struct {
	ReadyAccessInterfaces             uint32   `protobuf:"varint,50,opt,name=ready_access_interfaces,json=readyAccessInterfaces,proto3" json:"ready_access_interfaces,omitempty"`
	NotReadyAccessInterfaces          uint32   `protobuf:"varint,51,opt,name=not_ready_access_interfaces,json=notReadyAccessInterfaces,proto3" json:"not_ready_access_interfaces,omitempty"`
	CompleteSessions                  uint32   `protobuf:"varint,52,opt,name=complete_sessions,json=completeSessions,proto3" json:"complete_sessions,omitempty"`
	IncompleteSessions                uint32   `protobuf:"varint,53,opt,name=incomplete_sessions,json=incompleteSessions,proto3" json:"incomplete_sessions,omitempty"`
	FlowControlLimit                  uint32   `protobuf:"varint,54,opt,name=flow_control_limit,json=flowControlLimit,proto3" json:"flow_control_limit,omitempty"`
	FlowControlInFlightSessions       uint32   `protobuf:"varint,55,opt,name=flow_control_in_flight_sessions,json=flowControlInFlightSessions,proto3" json:"flow_control_in_flight_sessions,omitempty"`
	FlowControlDroppedSessions        uint64   `protobuf:"varint,56,opt,name=flow_control_dropped_sessions,json=flowControlDroppedSessions,proto3" json:"flow_control_dropped_sessions,omitempty"`
	FlowControlDisconnectedSessions   uint64   `protobuf:"varint,57,opt,name=flow_control_disconnected_sessions,json=flowControlDisconnectedSessions,proto3" json:"flow_control_disconnected_sessions,omitempty"`
	FlowControlSuccessfulSessions     uint64   `protobuf:"varint,58,opt,name=flow_control_successful_sessions,json=flowControlSuccessfulSessions,proto3" json:"flow_control_successful_sessions,omitempty"`
	PppoemaSubscriberInfraFlowControl uint32   `protobuf:"varint,59,opt,name=pppoema_subscriber_infra_flow_control,json=pppoemaSubscriberInfraFlowControl,proto3" json:"pppoema_subscriber_infra_flow_control,omitempty"`
	XXX_NoUnkeyedLiteral              struct{} `json:"-"`
	XXX_unrecognized                  []byte   `json:"-"`
	XXX_sizecache                     int32    `json:"-"`
}

func (m *PppoeMaSummaryTotalInfo) Reset()         { *m = PppoeMaSummaryTotalInfo{} }
func (m *PppoeMaSummaryTotalInfo) String() string { return proto.CompactTextString(m) }
func (*PppoeMaSummaryTotalInfo) ProtoMessage()    {}
func (*PppoeMaSummaryTotalInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_14ef40323ac5eb64, []int{1}
}

func (m *PppoeMaSummaryTotalInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PppoeMaSummaryTotalInfo.Unmarshal(m, b)
}
func (m *PppoeMaSummaryTotalInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PppoeMaSummaryTotalInfo.Marshal(b, m, deterministic)
}
func (m *PppoeMaSummaryTotalInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PppoeMaSummaryTotalInfo.Merge(m, src)
}
func (m *PppoeMaSummaryTotalInfo) XXX_Size() int {
	return xxx_messageInfo_PppoeMaSummaryTotalInfo.Size(m)
}
func (m *PppoeMaSummaryTotalInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_PppoeMaSummaryTotalInfo.DiscardUnknown(m)
}

var xxx_messageInfo_PppoeMaSummaryTotalInfo proto.InternalMessageInfo

func (m *PppoeMaSummaryTotalInfo) GetReadyAccessInterfaces() uint32 {
	if m != nil {
		return m.ReadyAccessInterfaces
	}
	return 0
}

func (m *PppoeMaSummaryTotalInfo) GetNotReadyAccessInterfaces() uint32 {
	if m != nil {
		return m.NotReadyAccessInterfaces
	}
	return 0
}

func (m *PppoeMaSummaryTotalInfo) GetCompleteSessions() uint32 {
	if m != nil {
		return m.CompleteSessions
	}
	return 0
}

func (m *PppoeMaSummaryTotalInfo) GetIncompleteSessions() uint32 {
	if m != nil {
		return m.IncompleteSessions
	}
	return 0
}

func (m *PppoeMaSummaryTotalInfo) GetFlowControlLimit() uint32 {
	if m != nil {
		return m.FlowControlLimit
	}
	return 0
}

func (m *PppoeMaSummaryTotalInfo) GetFlowControlInFlightSessions() uint32 {
	if m != nil {
		return m.FlowControlInFlightSessions
	}
	return 0
}

func (m *PppoeMaSummaryTotalInfo) GetFlowControlDroppedSessions() uint64 {
	if m != nil {
		return m.FlowControlDroppedSessions
	}
	return 0
}

func (m *PppoeMaSummaryTotalInfo) GetFlowControlDisconnectedSessions() uint64 {
	if m != nil {
		return m.FlowControlDisconnectedSessions
	}
	return 0
}

func (m *PppoeMaSummaryTotalInfo) GetFlowControlSuccessfulSessions() uint64 {
	if m != nil {
		return m.FlowControlSuccessfulSessions
	}
	return 0
}

func (m *PppoeMaSummaryTotalInfo) GetPppoemaSubscriberInfraFlowControl() uint32 {
	if m != nil {
		return m.PppoemaSubscriberInfraFlowControl
	}
	return 0
}

func init() {
	proto.RegisterType((*PppoeMaSummaryTotalInfo_KEYS)(nil), "cisco_ios_xr_subscriber_pppoe_ma_oper.pppoe.nodes.node.summary_total.pppoe_ma_summary_total_info_KEYS")
	proto.RegisterType((*PppoeMaSummaryTotalInfo)(nil), "cisco_ios_xr_subscriber_pppoe_ma_oper.pppoe.nodes.node.summary_total.pppoe_ma_summary_total_info")
}

func init() { proto.RegisterFile("pppoe_ma_summary_total_info.proto", fileDescriptor_14ef40323ac5eb64) }

var fileDescriptor_14ef40323ac5eb64 = []byte{
	// 404 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x93, 0x6f, 0x8b, 0xd4, 0x30,
	0x10, 0xc6, 0x29, 0xa8, 0x78, 0x01, 0x41, 0x23, 0x62, 0xb1, 0x1c, 0xd7, 0x5b, 0x10, 0x16, 0x94,
	0x0a, 0x9e, 0x9e, 0xff, 0x10, 0x39, 0x5c, 0x4f, 0x96, 0x13, 0x91, 0xf6, 0x95, 0xaf, 0x86, 0x6c,
	0x9a, 0x6a, 0xa0, 0xcd, 0x84, 0x24, 0x45, 0xf7, 0x63, 0xf8, 0x8d, 0xa5, 0xb3, 0x6b, 0xda, 0xa2,
	0xee, 0x9b, 0x85, 0x9d, 0xe7, 0xf7, 0xfc, 0x06, 0xda, 0x29, 0x3b, 0xb5, 0xd6, 0xa2, 0x82, 0x4e,
	0x80, 0xef, 0xbb, 0x4e, 0xb8, 0x2d, 0x04, 0x0c, 0xa2, 0x05, 0x6d, 0x1a, 0x2c, 0xac, 0xc3, 0x80,
	0x7c, 0x25, 0xb5, 0x97, 0x08, 0x1a, 0x3d, 0xfc, 0x74, 0xe0, 0xfb, 0x8d, 0x97, 0x4e, 0x6f, 0x94,
	0x83, 0x58, 0x45, 0xab, 0x5c, 0x41, 0xff, 0x0a, 0x83, 0xb5, 0xf2, 0xf4, 0x5b, 0xcc, 0x84, 0x8b,
	0x77, 0x2c, 0x3f, 0xb0, 0x0a, 0xae, 0x3e, 0x7c, 0xad, 0x78, 0xc6, 0x8e, 0x86, 0x26, 0x18, 0xd1,
	0xa9, 0x34, 0xc9, 0x93, 0xe5, 0x51, 0x79, 0x73, 0x18, 0x7c, 0x16, 0x9d, 0x5a, 0xfc, 0xba, 0xce,
	0xb2, 0x03, 0x06, 0x7e, 0xce, 0xee, 0x3b, 0x25, 0xea, 0x2d, 0x08, 0x29, 0x95, 0xf7, 0xa0, 0x4d,
	0x50, 0xae, 0x11, 0x52, 0xf9, 0xf4, 0x69, 0x9e, 0x2c, 0x6f, 0x95, 0xf7, 0x28, 0xbe, 0xa0, 0x74,
	0x1d, 0x43, 0xfe, 0x96, 0x65, 0x06, 0x03, 0xfc, 0xaf, 0x7b, 0x46, 0xdd, 0xd4, 0x60, 0x28, 0xff,
	0x59, 0x7f, 0xc4, 0xee, 0x48, 0xec, 0x6c, 0xab, 0x82, 0x02, 0xaf, 0xbc, 0xd7, 0x68, 0x7c, 0xfa,
	0x8c, 0x4a, 0xb7, 0xff, 0x04, 0xd5, 0x7e, 0xce, 0x9f, 0xb0, 0xbb, 0xda, 0xfc, 0x8d, 0x3f, 0x27,
	0x9c, 0x8f, 0x51, 0x2c, 0x3c, 0x66, 0xbc, 0x69, 0xf1, 0x07, 0x48, 0x34, 0xc1, 0x61, 0x0b, 0xad,
	0xee, 0x74, 0x48, 0xcf, 0x77, 0xfa, 0x21, 0x79, 0xbf, 0x0b, 0x3e, 0x0d, 0x73, 0xbe, 0x62, 0x27,
	0x33, 0x5a, 0x1b, 0x68, 0x5a, 0xfd, 0xed, 0x7b, 0x18, 0x57, 0xbd, 0xa0, 0x6a, 0x36, 0xa9, 0xae,
	0xcd, 0x25, 0x31, 0x71, 0xe7, 0x05, 0x3b, 0x9e, 0x59, 0x6a, 0x87, 0xd6, 0xaa, 0x7a, 0x74, 0xbc,
	0xcc, 0x93, 0xe5, 0xb5, 0xf2, 0xc1, 0xc4, 0xb1, 0xda, 0x21, 0x51, 0x71, 0xc5, 0x16, 0x73, 0xc5,
	0x70, 0x41, 0xc6, 0x28, 0x19, 0xa6, 0x9e, 0x57, 0xe4, 0x39, 0x99, 0x7a, 0x26, 0x5c, 0x94, 0x7d,
	0x64, 0xf9, 0x4c, 0xe6, 0x7b, 0x7a, 0x07, 0x4d, 0xdf, 0x8e, 0xaa, 0xd7, 0xa4, 0x3a, 0x9e, 0xa8,
	0xaa, 0x48, 0x45, 0xd1, 0x17, 0xf6, 0x90, 0x0e, 0x88, 0xee, 0x27, 0x5e, 0xb1, 0x36, 0x8d, 0x13,
	0x30, 0xdd, 0x90, 0xbe, 0xa1, 0x87, 0x74, 0xba, 0x87, 0xab, 0xc8, 0xae, 0x07, 0xf4, 0x72, 0xdc,
	0xb1, 0xb9, 0x41, 0x5f, 0xc8, 0xd9, 0xef, 0x00, 0x00, 0x00, 0xff, 0xff, 0x72, 0x35, 0x11, 0xf8,
	0x46, 0x03, 0x00, 0x00,
}
