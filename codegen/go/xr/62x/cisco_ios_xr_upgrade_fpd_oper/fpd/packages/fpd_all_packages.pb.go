/*
Copyright 2019 Cisco Systems

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: fpd_all_packages.proto

package cisco_ios_xr_upgrade_fpd_oper_fpd_packages

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type FpdAllPackages_KEYS struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FpdAllPackages_KEYS) Reset()         { *m = FpdAllPackages_KEYS{} }
func (m *FpdAllPackages_KEYS) String() string { return proto.CompactTextString(m) }
func (*FpdAllPackages_KEYS) ProtoMessage()    {}
func (*FpdAllPackages_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_0629039f843f4c04, []int{0}
}

func (m *FpdAllPackages_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FpdAllPackages_KEYS.Unmarshal(m, b)
}
func (m *FpdAllPackages_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FpdAllPackages_KEYS.Marshal(b, m, deterministic)
}
func (m *FpdAllPackages_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FpdAllPackages_KEYS.Merge(m, src)
}
func (m *FpdAllPackages_KEYS) XXX_Size() int {
	return xxx_messageInfo_FpdAllPackages_KEYS.Size(m)
}
func (m *FpdAllPackages_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_FpdAllPackages_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_FpdAllPackages_KEYS proto.InternalMessageInfo

type FpdPackageInfo struct {
	CardType                       string   `protobuf:"bytes,1,opt,name=card_type,json=cardType,proto3" json:"card_type,omitempty"`
	CardDescription                string   `protobuf:"bytes,2,opt,name=card_description,json=cardDescription,proto3" json:"card_description,omitempty"`
	FpdType                        string   `protobuf:"bytes,3,opt,name=fpd_type,json=fpdType,proto3" json:"fpd_type,omitempty"`
	FpdSubType                     string   `protobuf:"bytes,4,opt,name=fpd_sub_type,json=fpdSubType,proto3" json:"fpd_sub_type,omitempty"`
	SoftwareVersion                string   `protobuf:"bytes,5,opt,name=software_version,json=softwareVersion,proto3" json:"software_version,omitempty"`
	MinimumRequiredSoftwareVersion string   `protobuf:"bytes,6,opt,name=minimum_required_software_version,json=minimumRequiredSoftwareVersion,proto3" json:"minimum_required_software_version,omitempty"`
	MinimumRequiredHardwareVersion string   `protobuf:"bytes,7,opt,name=minimum_required_hardware_version,json=minimumRequiredHardwareVersion,proto3" json:"minimum_required_hardware_version,omitempty"`
	XXX_NoUnkeyedLiteral           struct{} `json:"-"`
	XXX_unrecognized               []byte   `json:"-"`
	XXX_sizecache                  int32    `json:"-"`
}

func (m *FpdPackageInfo) Reset()         { *m = FpdPackageInfo{} }
func (m *FpdPackageInfo) String() string { return proto.CompactTextString(m) }
func (*FpdPackageInfo) ProtoMessage()    {}
func (*FpdPackageInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_0629039f843f4c04, []int{1}
}

func (m *FpdPackageInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FpdPackageInfo.Unmarshal(m, b)
}
func (m *FpdPackageInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FpdPackageInfo.Marshal(b, m, deterministic)
}
func (m *FpdPackageInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FpdPackageInfo.Merge(m, src)
}
func (m *FpdPackageInfo) XXX_Size() int {
	return xxx_messageInfo_FpdPackageInfo.Size(m)
}
func (m *FpdPackageInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_FpdPackageInfo.DiscardUnknown(m)
}

var xxx_messageInfo_FpdPackageInfo proto.InternalMessageInfo

func (m *FpdPackageInfo) GetCardType() string {
	if m != nil {
		return m.CardType
	}
	return ""
}

func (m *FpdPackageInfo) GetCardDescription() string {
	if m != nil {
		return m.CardDescription
	}
	return ""
}

func (m *FpdPackageInfo) GetFpdType() string {
	if m != nil {
		return m.FpdType
	}
	return ""
}

func (m *FpdPackageInfo) GetFpdSubType() string {
	if m != nil {
		return m.FpdSubType
	}
	return ""
}

func (m *FpdPackageInfo) GetSoftwareVersion() string {
	if m != nil {
		return m.SoftwareVersion
	}
	return ""
}

func (m *FpdPackageInfo) GetMinimumRequiredSoftwareVersion() string {
	if m != nil {
		return m.MinimumRequiredSoftwareVersion
	}
	return ""
}

func (m *FpdPackageInfo) GetMinimumRequiredHardwareVersion() string {
	if m != nil {
		return m.MinimumRequiredHardwareVersion
	}
	return ""
}

type FpdAllPackages struct {
	AllPackage           []*FpdPackageInfo `protobuf:"bytes,50,rep,name=all_package,json=allPackage,proto3" json:"all_package,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *FpdAllPackages) Reset()         { *m = FpdAllPackages{} }
func (m *FpdAllPackages) String() string { return proto.CompactTextString(m) }
func (*FpdAllPackages) ProtoMessage()    {}
func (*FpdAllPackages) Descriptor() ([]byte, []int) {
	return fileDescriptor_0629039f843f4c04, []int{2}
}

func (m *FpdAllPackages) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FpdAllPackages.Unmarshal(m, b)
}
func (m *FpdAllPackages) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FpdAllPackages.Marshal(b, m, deterministic)
}
func (m *FpdAllPackages) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FpdAllPackages.Merge(m, src)
}
func (m *FpdAllPackages) XXX_Size() int {
	return xxx_messageInfo_FpdAllPackages.Size(m)
}
func (m *FpdAllPackages) XXX_DiscardUnknown() {
	xxx_messageInfo_FpdAllPackages.DiscardUnknown(m)
}

var xxx_messageInfo_FpdAllPackages proto.InternalMessageInfo

func (m *FpdAllPackages) GetAllPackage() []*FpdPackageInfo {
	if m != nil {
		return m.AllPackage
	}
	return nil
}

func init() {
	proto.RegisterType((*FpdAllPackages_KEYS)(nil), "cisco_ios_xr_upgrade_fpd_oper.fpd.packages.fpd_all_packages_KEYS")
	proto.RegisterType((*FpdPackageInfo)(nil), "cisco_ios_xr_upgrade_fpd_oper.fpd.packages.fpd_package_info")
	proto.RegisterType((*FpdAllPackages)(nil), "cisco_ios_xr_upgrade_fpd_oper.fpd.packages.fpd_all_packages")
}

func init() { proto.RegisterFile("fpd_all_packages.proto", fileDescriptor_0629039f843f4c04) }

var fileDescriptor_0629039f843f4c04 = []byte{
	// 303 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x92, 0xcf, 0x4b, 0xc3, 0x30,
	0x14, 0xc7, 0xd9, 0xa6, 0xfb, 0x91, 0x09, 0x8e, 0x80, 0x3a, 0x11, 0xa4, 0xf6, 0x34, 0x3d, 0xf4,
	0x30, 0xaf, 0x1e, 0x15, 0x14, 0x2f, 0xd2, 0x8a, 0xe0, 0x41, 0x1e, 0x69, 0x93, 0xcc, 0x60, 0xdb,
	0x64, 0x49, 0xab, 0xee, 0x3f, 0xf5, 0xcf, 0x91, 0x24, 0x2d, 0xce, 0xe9, 0x61, 0xc7, 0x7e, 0xbe,
	0xdf, 0xf7, 0x79, 0x90, 0x57, 0x74, 0xc8, 0x15, 0x05, 0x92, 0xe7, 0xa0, 0x48, 0xf6, 0x46, 0x16,
	0xcc, 0x44, 0x4a, 0xcb, 0x4a, 0xe2, 0x8b, 0x4c, 0x98, 0x4c, 0x82, 0x90, 0x06, 0x3e, 0x35, 0xd4,
	0x6a, 0xa1, 0x09, 0x65, 0x60, 0xcb, 0x52, 0x31, 0x1d, 0x71, 0x45, 0xa3, 0x76, 0x22, 0x3c, 0x42,
	0x07, 0x9b, 0x16, 0xb8, 0xbf, 0x79, 0x4e, 0xc2, 0xaf, 0x2e, 0x9a, 0xd8, 0xa4, 0xa1, 0x20, 0x4a,
	0x2e, 0xf1, 0x09, 0x1a, 0x65, 0x44, 0x53, 0xa8, 0x56, 0x8a, 0x4d, 0x3b, 0x41, 0x67, 0x36, 0x8a,
	0x87, 0x16, 0x3c, 0xae, 0x14, 0xc3, 0xe7, 0x68, 0xe2, 0x42, 0xca, 0x4c, 0xa6, 0x85, 0xaa, 0x84,
	0x2c, 0xa7, 0x5d, 0xd7, 0xd9, 0xb7, 0xfc, 0xfa, 0x07, 0xe3, 0x63, 0x34, 0xb4, 0x6e, 0xa7, 0xe9,
	0xb9, 0xca, 0x80, 0x2b, 0x6f, 0x09, 0xd0, 0x9e, 0x8d, 0x4c, 0x9d, 0xfa, 0x78, 0xc7, 0xc5, 0x88,
	0x2b, 0x9a, 0xd4, 0x69, 0xbb, 0xc7, 0x48, 0x5e, 0x7d, 0x10, 0xcd, 0xe0, 0x9d, 0x69, 0x63, 0xf7,
	0xec, 0xfa, 0x3d, 0x2d, 0x7f, 0xf2, 0x18, 0xdf, 0xa1, 0xb3, 0x42, 0x94, 0xa2, 0xa8, 0x0b, 0xd0,
	0x6c, 0x59, 0x0b, 0xcd, 0x28, 0xfc, 0x99, 0xed, 0xbb, 0xd9, 0xd3, 0xa6, 0x18, 0x37, 0xbd, 0x64,
	0x0b, 0xd5, 0x2b, 0xd1, 0xf4, 0x97, 0x6a, 0xf0, 0xaf, 0xea, 0xb6, 0xa9, 0x35, 0xaa, 0x70, 0xe9,
	0x5f, 0x76, 0xfd, 0xcd, 0xf1, 0x0b, 0x1a, 0xaf, 0x7d, 0x4f, 0xe7, 0x41, 0x6f, 0x36, 0x9e, 0x5f,
	0x45, 0xdb, 0x5f, 0x32, 0xda, 0x3c, 0x56, 0x8c, 0x48, 0x9e, 0x3f, 0x78, 0x90, 0xf6, 0xdd, 0x9f,
	0x71, 0xf9, 0x1d, 0x00, 0x00, 0xff, 0xff, 0xd7, 0x75, 0x93, 0x37, 0x33, 0x02, 0x00, 0x00,
}
