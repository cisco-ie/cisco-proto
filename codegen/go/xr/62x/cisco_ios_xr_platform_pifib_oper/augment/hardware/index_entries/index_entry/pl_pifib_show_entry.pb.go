/*
Copyright 2019 Cisco Systems

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: pl_pifib_show_entry.proto

package cisco_ios_xr_platform_pifib_oper_augment_hardware_index_entries_index_entry

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type PlPifibShowEntry_KEYS struct {
	Index                uint32   `protobuf:"varint,1,opt,name=index,proto3" json:"index,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PlPifibShowEntry_KEYS) Reset()         { *m = PlPifibShowEntry_KEYS{} }
func (m *PlPifibShowEntry_KEYS) String() string { return proto.CompactTextString(m) }
func (*PlPifibShowEntry_KEYS) ProtoMessage()    {}
func (*PlPifibShowEntry_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_9fdccdc06fa47a5c, []int{0}
}

func (m *PlPifibShowEntry_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PlPifibShowEntry_KEYS.Unmarshal(m, b)
}
func (m *PlPifibShowEntry_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PlPifibShowEntry_KEYS.Marshal(b, m, deterministic)
}
func (m *PlPifibShowEntry_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PlPifibShowEntry_KEYS.Merge(m, src)
}
func (m *PlPifibShowEntry_KEYS) XXX_Size() int {
	return xxx_messageInfo_PlPifibShowEntry_KEYS.Size(m)
}
func (m *PlPifibShowEntry_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_PlPifibShowEntry_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_PlPifibShowEntry_KEYS proto.InternalMessageInfo

func (m *PlPifibShowEntry_KEYS) GetIndex() uint32 {
	if m != nil {
		return m.Index
	}
	return 0
}

type PlPifibShowEntry struct {
	L3Protocol           uint32   `protobuf:"varint,50,opt,name=l3protocol,proto3" json:"l3protocol,omitempty"`
	L4Protocol           uint32   `protobuf:"varint,51,opt,name=l4protocol,proto3" json:"l4protocol,omitempty"`
	IntfHandle           uint32   `protobuf:"varint,52,opt,name=intf_handle,json=intfHandle,proto3" json:"intf_handle,omitempty"`
	UidbIndex            uint32   `protobuf:"varint,53,opt,name=uidb_index,json=uidbIndex,proto3" json:"uidb_index,omitempty"`
	VrfId                uint32   `protobuf:"varint,54,opt,name=vrf_id,json=vrfId,proto3" json:"vrf_id,omitempty"`
	TblId                uint32   `protobuf:"varint,55,opt,name=tbl_id,json=tblId,proto3" json:"tbl_id,omitempty"`
	LocalAddr            []byte   `protobuf:"bytes,56,opt,name=local_addr,json=localAddr,proto3" json:"local_addr,omitempty"`
	LocalPrefixLen       uint32   `protobuf:"varint,57,opt,name=local_prefix_len,json=localPrefixLen,proto3" json:"local_prefix_len,omitempty"`
	RemoteAddr           []byte   `protobuf:"bytes,58,opt,name=remote_addr,json=remoteAddr,proto3" json:"remote_addr,omitempty"`
	RemotePrefixLen      uint32   `protobuf:"varint,59,opt,name=remote_prefix_len,json=remotePrefixLen,proto3" json:"remote_prefix_len,omitempty"`
	UType                uint32   `protobuf:"varint,60,opt,name=u_type,json=uType,proto3" json:"u_type,omitempty"`
	UValue               uint32   `protobuf:"varint,61,opt,name=u_value,json=uValue,proto3" json:"u_value,omitempty"`
	ULen                 uint32   `protobuf:"varint,62,opt,name=u_len,json=uLen,proto3" json:"u_len,omitempty"`
	RemotePort           uint32   `protobuf:"varint,63,opt,name=remote_port,json=remotePort,proto3" json:"remote_port,omitempty"`
	IsFrag               uint32   `protobuf:"varint,64,opt,name=is_frag,json=isFrag,proto3" json:"is_frag,omitempty"`
	IsSyn                uint32   `protobuf:"varint,65,opt,name=is_syn,json=isSyn,proto3" json:"is_syn,omitempty"`
	Value                []byte   `protobuf:"bytes,66,opt,name=value,proto3" json:"value,omitempty"`
	Mask                 []byte   `protobuf:"bytes,67,opt,name=mask,proto3" json:"mask,omitempty"`
	FlowType             uint32   `protobuf:"varint,68,opt,name=flow_type,json=flowType,proto3" json:"flow_type,omitempty"`
	Destaddr             uint32   `protobuf:"varint,69,opt,name=destaddr,proto3" json:"destaddr,omitempty"`
	DropAction           bool     `protobuf:"varint,70,opt,name=drop_action,json=dropAction,proto3" json:"drop_action,omitempty"`
	Matches              uint64   `protobuf:"varint,71,opt,name=matches,proto3" json:"matches,omitempty"`
	Sid                  uint32   `protobuf:"varint,72,opt,name=sid,proto3" json:"sid,omitempty"`
	ListenerTag          uint32   `protobuf:"varint,73,opt,name=listener_tag,json=listenerTag,proto3" json:"listener_tag,omitempty"`
	MinTtl               uint32   `protobuf:"varint,74,opt,name=min_ttl,json=minTtl,proto3" json:"min_ttl,omitempty"`
	DropTtl              uint64   `protobuf:"varint,75,opt,name=drop_ttl,json=dropTtl,proto3" json:"drop_ttl,omitempty"`
	DropPolicer          uint64   `protobuf:"varint,76,opt,name=drop_policer,json=dropPolicer,proto3" json:"drop_policer,omitempty"`
	DropTos              uint64   `protobuf:"varint,77,opt,name=drop_tos,json=dropTos,proto3" json:"drop_tos,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PlPifibShowEntry) Reset()         { *m = PlPifibShowEntry{} }
func (m *PlPifibShowEntry) String() string { return proto.CompactTextString(m) }
func (*PlPifibShowEntry) ProtoMessage()    {}
func (*PlPifibShowEntry) Descriptor() ([]byte, []int) {
	return fileDescriptor_9fdccdc06fa47a5c, []int{1}
}

func (m *PlPifibShowEntry) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PlPifibShowEntry.Unmarshal(m, b)
}
func (m *PlPifibShowEntry) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PlPifibShowEntry.Marshal(b, m, deterministic)
}
func (m *PlPifibShowEntry) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PlPifibShowEntry.Merge(m, src)
}
func (m *PlPifibShowEntry) XXX_Size() int {
	return xxx_messageInfo_PlPifibShowEntry.Size(m)
}
func (m *PlPifibShowEntry) XXX_DiscardUnknown() {
	xxx_messageInfo_PlPifibShowEntry.DiscardUnknown(m)
}

var xxx_messageInfo_PlPifibShowEntry proto.InternalMessageInfo

func (m *PlPifibShowEntry) GetL3Protocol() uint32 {
	if m != nil {
		return m.L3Protocol
	}
	return 0
}

func (m *PlPifibShowEntry) GetL4Protocol() uint32 {
	if m != nil {
		return m.L4Protocol
	}
	return 0
}

func (m *PlPifibShowEntry) GetIntfHandle() uint32 {
	if m != nil {
		return m.IntfHandle
	}
	return 0
}

func (m *PlPifibShowEntry) GetUidbIndex() uint32 {
	if m != nil {
		return m.UidbIndex
	}
	return 0
}

func (m *PlPifibShowEntry) GetVrfId() uint32 {
	if m != nil {
		return m.VrfId
	}
	return 0
}

func (m *PlPifibShowEntry) GetTblId() uint32 {
	if m != nil {
		return m.TblId
	}
	return 0
}

func (m *PlPifibShowEntry) GetLocalAddr() []byte {
	if m != nil {
		return m.LocalAddr
	}
	return nil
}

func (m *PlPifibShowEntry) GetLocalPrefixLen() uint32 {
	if m != nil {
		return m.LocalPrefixLen
	}
	return 0
}

func (m *PlPifibShowEntry) GetRemoteAddr() []byte {
	if m != nil {
		return m.RemoteAddr
	}
	return nil
}

func (m *PlPifibShowEntry) GetRemotePrefixLen() uint32 {
	if m != nil {
		return m.RemotePrefixLen
	}
	return 0
}

func (m *PlPifibShowEntry) GetUType() uint32 {
	if m != nil {
		return m.UType
	}
	return 0
}

func (m *PlPifibShowEntry) GetUValue() uint32 {
	if m != nil {
		return m.UValue
	}
	return 0
}

func (m *PlPifibShowEntry) GetULen() uint32 {
	if m != nil {
		return m.ULen
	}
	return 0
}

func (m *PlPifibShowEntry) GetRemotePort() uint32 {
	if m != nil {
		return m.RemotePort
	}
	return 0
}

func (m *PlPifibShowEntry) GetIsFrag() uint32 {
	if m != nil {
		return m.IsFrag
	}
	return 0
}

func (m *PlPifibShowEntry) GetIsSyn() uint32 {
	if m != nil {
		return m.IsSyn
	}
	return 0
}

func (m *PlPifibShowEntry) GetValue() []byte {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *PlPifibShowEntry) GetMask() []byte {
	if m != nil {
		return m.Mask
	}
	return nil
}

func (m *PlPifibShowEntry) GetFlowType() uint32 {
	if m != nil {
		return m.FlowType
	}
	return 0
}

func (m *PlPifibShowEntry) GetDestaddr() uint32 {
	if m != nil {
		return m.Destaddr
	}
	return 0
}

func (m *PlPifibShowEntry) GetDropAction() bool {
	if m != nil {
		return m.DropAction
	}
	return false
}

func (m *PlPifibShowEntry) GetMatches() uint64 {
	if m != nil {
		return m.Matches
	}
	return 0
}

func (m *PlPifibShowEntry) GetSid() uint32 {
	if m != nil {
		return m.Sid
	}
	return 0
}

func (m *PlPifibShowEntry) GetListenerTag() uint32 {
	if m != nil {
		return m.ListenerTag
	}
	return 0
}

func (m *PlPifibShowEntry) GetMinTtl() uint32 {
	if m != nil {
		return m.MinTtl
	}
	return 0
}

func (m *PlPifibShowEntry) GetDropTtl() uint64 {
	if m != nil {
		return m.DropTtl
	}
	return 0
}

func (m *PlPifibShowEntry) GetDropPolicer() uint64 {
	if m != nil {
		return m.DropPolicer
	}
	return 0
}

func (m *PlPifibShowEntry) GetDropTos() uint64 {
	if m != nil {
		return m.DropTos
	}
	return 0
}

func init() {
	proto.RegisterType((*PlPifibShowEntry_KEYS)(nil), "cisco_ios_xr_platform_pifib_oper.augment.hardware.index_entries.index_entry.pl_pifib_show_entry_KEYS")
	proto.RegisterType((*PlPifibShowEntry)(nil), "cisco_ios_xr_platform_pifib_oper.augment.hardware.index_entries.index_entry.pl_pifib_show_entry")
}

func init() { proto.RegisterFile("pl_pifib_show_entry.proto", fileDescriptor_9fdccdc06fa47a5c) }

var fileDescriptor_9fdccdc06fa47a5c = []byte{
	// 564 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x92, 0x5d, 0x6f, 0x13, 0x3d,
	0x10, 0x85, 0x15, 0xbd, 0x6d, 0x9a, 0x4e, 0xfb, 0x42, 0x71, 0xa9, 0x70, 0x41, 0x40, 0xda, 0xab,
	0x88, 0x8b, 0x08, 0xd1, 0xf2, 0xfd, 0x59, 0xa0, 0xa5, 0xa1, 0x45, 0xaa, 0xd2, 0x08, 0x89, 0x2b,
	0xcb, 0x59, 0x7b, 0x13, 0x0b, 0xaf, 0xbd, 0xb2, 0xbd, 0x49, 0xf6, 0x7f, 0xf1, 0x03, 0x91, 0xc7,
	0x49, 0x1b, 0xa4, 0xde, 0xed, 0x3c, 0xc7, 0x73, 0xe6, 0x78, 0xd6, 0xb0, 0x5b, 0x6a, 0x56, 0xaa,
	0x5c, 0x0d, 0x99, 0x1f, 0xdb, 0x29, 0x93, 0x26, 0xb8, 0xba, 0x5b, 0x3a, 0x1b, 0x2c, 0x39, 0xcb,
	0x94, 0xcf, 0x2c, 0x53, 0xd6, 0xb3, 0x99, 0x63, 0xa5, 0xe6, 0x21, 0xb7, 0xae, 0x98, 0x9f, 0xb6,
	0xa5, 0x74, 0x5d, 0x5e, 0x8d, 0x0a, 0x69, 0x42, 0x77, 0xcc, 0x9d, 0x98, 0x72, 0x27, 0xbb, 0xca,
	0x08, 0x39, 0x43, 0x13, 0x25, 0xfd, 0x52, 0x55, 0xef, 0x3f, 0x05, 0x7a, 0xc3, 0x24, 0x76, 0x76,
	0xfc, 0xeb, 0x92, 0xdc, 0x85, 0x55, 0x3c, 0x4a, 0x1b, 0xed, 0x46, 0xe7, 0xff, 0x7e, 0x2a, 0xf6,
	0xff, 0x34, 0x61, 0xfb, 0x86, 0x16, 0xf2, 0x08, 0x40, 0x1f, 0x60, 0xc2, 0xcc, 0x6a, 0xfa, 0x0c,
	0x5b, 0x96, 0x08, 0xea, 0x87, 0x57, 0xfa, 0xc1, 0x5c, 0xbf, 0x22, 0xe4, 0x31, 0x6c, 0x28, 0x13,
	0x72, 0x36, 0xe6, 0x46, 0x68, 0x49, 0x0f, 0xd3, 0x81, 0x88, 0x4e, 0x91, 0x90, 0x87, 0x00, 0x95,
	0x12, 0x43, 0x96, 0x32, 0x3d, 0x47, 0x7d, 0x3d, 0x92, 0x5e, 0x04, 0x64, 0x07, 0x9a, 0x13, 0x97,
	0x33, 0x25, 0xe8, 0x8b, 0x14, 0x77, 0xe2, 0xf2, 0x9e, 0x88, 0x38, 0x0c, 0x75, 0xc4, 0x2f, 0x13,
	0x0e, 0x43, 0xdd, 0x13, 0xd1, 0x4c, 0xdb, 0x8c, 0x6b, 0xc6, 0x85, 0x70, 0xf4, 0x55, 0xbb, 0xd1,
	0xd9, 0xec, 0xaf, 0x23, 0x39, 0x12, 0xc2, 0x91, 0x0e, 0x6c, 0x25, 0xb9, 0x74, 0x32, 0x57, 0x33,
	0xa6, 0xa5, 0xa1, 0xaf, 0xb1, 0xff, 0x16, 0xf2, 0x0b, 0xc4, 0xe7, 0xd2, 0xc4, 0xd8, 0x4e, 0x16,
	0x36, 0xc8, 0xe4, 0xf4, 0x06, 0x9d, 0x20, 0x21, 0xb4, 0x7a, 0x02, 0x77, 0xe6, 0x07, 0x96, 0xbc,
	0xde, 0xa2, 0xd7, 0xed, 0x24, 0x5c, 0x9b, 0xed, 0x40, 0xb3, 0x62, 0xa1, 0x2e, 0x25, 0x7d, 0x97,
	0xc2, 0x56, 0x83, 0xba, 0x94, 0xe4, 0x1e, 0xac, 0x55, 0x6c, 0xc2, 0x75, 0x25, 0xe9, 0x7b, 0xe4,
	0xcd, 0xea, 0x67, 0xac, 0xc8, 0x36, 0xac, 0x56, 0xe8, 0xf7, 0x01, 0xf1, 0x4a, 0xf5, 0x6f, 0xa2,
	0xd2, 0xba, 0x40, 0x3f, 0xa6, 0x45, 0xce, 0x47, 0x59, 0x17, 0xa2, 0x9d, 0xf2, 0x2c, 0x77, 0x7c,
	0x44, 0x3f, 0x25, 0x3b, 0xe5, 0x4f, 0x1c, 0x1f, 0xc5, 0xf1, 0xca, 0x33, 0x5f, 0x1b, 0x7a, 0x34,
	0xff, 0xe3, 0xfe, 0xb2, 0x36, 0xf1, 0x1d, 0xa4, 0xe1, 0x9f, 0xf1, 0x72, 0xa9, 0x20, 0x04, 0x56,
	0x0a, 0xee, 0x7f, 0xd3, 0x2f, 0x08, 0xf1, 0x9b, 0x3c, 0x80, 0xf5, 0x5c, 0xdb, 0x69, 0xba, 0xc2,
	0x57, 0xf4, 0x68, 0x45, 0x80, 0xb7, 0xb8, 0x0f, 0x2d, 0x21, 0x7d, 0xc0, 0x35, 0x1d, 0x27, 0x6d,
	0x51, 0xc7, 0xcc, 0xc2, 0xd9, 0x92, 0xf1, 0x2c, 0x28, 0x6b, 0xe8, 0x49, 0xbb, 0xd1, 0x69, 0xf5,
	0x21, 0xa2, 0x23, 0x24, 0x84, 0xc2, 0x5a, 0xc1, 0x43, 0x36, 0x96, 0x9e, 0x7e, 0x6b, 0x37, 0x3a,
	0x2b, 0xfd, 0x45, 0x49, 0xb6, 0xe0, 0x3f, 0xaf, 0x04, 0x3d, 0x45, 0xc7, 0xf8, 0x49, 0xf6, 0x60,
	0x53, 0x2b, 0x1f, 0xa4, 0x91, 0x8e, 0x05, 0x3e, 0xa2, 0x3d, 0x94, 0x36, 0x16, 0x6c, 0xc0, 0x47,
	0x71, 0x05, 0x85, 0x32, 0x2c, 0x04, 0x4d, 0xbf, 0xa7, 0x15, 0x14, 0xca, 0x0c, 0x82, 0x26, 0xbb,
	0xd0, 0xc2, 0x20, 0x51, 0x39, 0x4b, 0x83, 0x62, 0x1d, 0xa5, 0x3d, 0xd8, 0x44, 0xa9, 0xb4, 0x5a,
	0x65, 0xd2, 0xd1, 0x73, 0x94, 0x31, 0xf7, 0x45, 0x42, 0xd7, 0xdd, 0xd6, 0xd3, 0x1f, 0x4b, 0xdd,
	0xd6, 0x0f, 0x9b, 0xf8, 0xd0, 0x0f, 0xfe, 0x06, 0x00, 0x00, 0xff, 0xff, 0xc8, 0xbc, 0xe9, 0xbf,
	0xd9, 0x03, 0x00, 0x00,
}
