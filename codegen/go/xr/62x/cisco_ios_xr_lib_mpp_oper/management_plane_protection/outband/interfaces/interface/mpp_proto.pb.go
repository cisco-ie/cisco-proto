/*
Copyright 2019 Cisco Systems

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: mpp_proto.proto

package cisco_ios_xr_lib_mpp_oper_management_plane_protection_outband_interfaces_interface

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type MppProto_KEYS struct {
	InterfaceName        string   `protobuf:"bytes,1,opt,name=interface_name,json=interfaceName,proto3" json:"interface_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MppProto_KEYS) Reset()         { *m = MppProto_KEYS{} }
func (m *MppProto_KEYS) String() string { return proto.CompactTextString(m) }
func (*MppProto_KEYS) ProtoMessage()    {}
func (*MppProto_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_4c41161fcf4a5ff9, []int{0}
}

func (m *MppProto_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MppProto_KEYS.Unmarshal(m, b)
}
func (m *MppProto_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MppProto_KEYS.Marshal(b, m, deterministic)
}
func (m *MppProto_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MppProto_KEYS.Merge(m, src)
}
func (m *MppProto_KEYS) XXX_Size() int {
	return xxx_messageInfo_MppProto_KEYS.Size(m)
}
func (m *MppProto_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_MppProto_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_MppProto_KEYS proto.InternalMessageInfo

func (m *MppProto_KEYS) GetInterfaceName() string {
	if m != nil {
		return m.InterfaceName
	}
	return ""
}

type IpAddrTUnion struct {
	AfName               string   `protobuf:"bytes,1,opt,name=af_name,json=afName,proto3" json:"af_name,omitempty"`
	Ipv4Address          string   `protobuf:"bytes,2,opt,name=ipv4_address,json=ipv4Address,proto3" json:"ipv4_address,omitempty"`
	Ipv6Address          string   `protobuf:"bytes,3,opt,name=ipv6_address,json=ipv6Address,proto3" json:"ipv6_address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IpAddrTUnion) Reset()         { *m = IpAddrTUnion{} }
func (m *IpAddrTUnion) String() string { return proto.CompactTextString(m) }
func (*IpAddrTUnion) ProtoMessage()    {}
func (*IpAddrTUnion) Descriptor() ([]byte, []int) {
	return fileDescriptor_4c41161fcf4a5ff9, []int{1}
}

func (m *IpAddrTUnion) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IpAddrTUnion.Unmarshal(m, b)
}
func (m *IpAddrTUnion) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IpAddrTUnion.Marshal(b, m, deterministic)
}
func (m *IpAddrTUnion) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IpAddrTUnion.Merge(m, src)
}
func (m *IpAddrTUnion) XXX_Size() int {
	return xxx_messageInfo_IpAddrTUnion.Size(m)
}
func (m *IpAddrTUnion) XXX_DiscardUnknown() {
	xxx_messageInfo_IpAddrTUnion.DiscardUnknown(m)
}

var xxx_messageInfo_IpAddrTUnion proto.InternalMessageInfo

func (m *IpAddrTUnion) GetAfName() string {
	if m != nil {
		return m.AfName
	}
	return ""
}

func (m *IpAddrTUnion) GetIpv4Address() string {
	if m != nil {
		return m.Ipv4Address
	}
	return ""
}

func (m *IpAddrTUnion) GetIpv6Address() string {
	if m != nil {
		return m.Ipv6Address
	}
	return ""
}

type MppInfo struct {
	Allow                string          `protobuf:"bytes,1,opt,name=allow,proto3" json:"allow,omitempty"`
	PeerAddress          []*IpAddrTUnion `protobuf:"bytes,2,rep,name=peer_address,json=peerAddress,proto3" json:"peer_address,omitempty"`
	IsAllPeersAllowed    bool            `protobuf:"varint,3,opt,name=is_all_peers_allowed,json=isAllPeersAllowed,proto3" json:"is_all_peers_allowed,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *MppInfo) Reset()         { *m = MppInfo{} }
func (m *MppInfo) String() string { return proto.CompactTextString(m) }
func (*MppInfo) ProtoMessage()    {}
func (*MppInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_4c41161fcf4a5ff9, []int{2}
}

func (m *MppInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MppInfo.Unmarshal(m, b)
}
func (m *MppInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MppInfo.Marshal(b, m, deterministic)
}
func (m *MppInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MppInfo.Merge(m, src)
}
func (m *MppInfo) XXX_Size() int {
	return xxx_messageInfo_MppInfo.Size(m)
}
func (m *MppInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_MppInfo.DiscardUnknown(m)
}

var xxx_messageInfo_MppInfo proto.InternalMessageInfo

func (m *MppInfo) GetAllow() string {
	if m != nil {
		return m.Allow
	}
	return ""
}

func (m *MppInfo) GetPeerAddress() []*IpAddrTUnion {
	if m != nil {
		return m.PeerAddress
	}
	return nil
}

func (m *MppInfo) GetIsAllPeersAllowed() bool {
	if m != nil {
		return m.IsAllPeersAllowed
	}
	return false
}

type MppProto struct {
	Protocol             []*MppInfo `protobuf:"bytes,50,rep,name=protocol,proto3" json:"protocol,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *MppProto) Reset()         { *m = MppProto{} }
func (m *MppProto) String() string { return proto.CompactTextString(m) }
func (*MppProto) ProtoMessage()    {}
func (*MppProto) Descriptor() ([]byte, []int) {
	return fileDescriptor_4c41161fcf4a5ff9, []int{3}
}

func (m *MppProto) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MppProto.Unmarshal(m, b)
}
func (m *MppProto) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MppProto.Marshal(b, m, deterministic)
}
func (m *MppProto) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MppProto.Merge(m, src)
}
func (m *MppProto) XXX_Size() int {
	return xxx_messageInfo_MppProto.Size(m)
}
func (m *MppProto) XXX_DiscardUnknown() {
	xxx_messageInfo_MppProto.DiscardUnknown(m)
}

var xxx_messageInfo_MppProto proto.InternalMessageInfo

func (m *MppProto) GetProtocol() []*MppInfo {
	if m != nil {
		return m.Protocol
	}
	return nil
}

func init() {
	proto.RegisterType((*MppProto_KEYS)(nil), "cisco_ios_xr_lib_mpp_oper.management_plane_protection.outband.interfaces.interface.mpp_proto_KEYS")
	proto.RegisterType((*IpAddrTUnion)(nil), "cisco_ios_xr_lib_mpp_oper.management_plane_protection.outband.interfaces.interface.ip_addr_t_union")
	proto.RegisterType((*MppInfo)(nil), "cisco_ios_xr_lib_mpp_oper.management_plane_protection.outband.interfaces.interface.mpp_info")
	proto.RegisterType((*MppProto)(nil), "cisco_ios_xr_lib_mpp_oper.management_plane_protection.outband.interfaces.interface.mpp_proto")
}

func init() { proto.RegisterFile("mpp_proto.proto", fileDescriptor_4c41161fcf4a5ff9) }

var fileDescriptor_4c41161fcf4a5ff9 = []byte{
	// 311 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x51, 0xc1, 0x4a, 0x03, 0x31,
	0x14, 0x64, 0x2d, 0xd6, 0x36, 0xad, 0x2d, 0x86, 0x82, 0x3d, 0xea, 0x82, 0xd0, 0xd3, 0x0a, 0x55,
	0xea, 0xb9, 0x07, 0x4f, 0x82, 0xc8, 0x7a, 0x12, 0x84, 0x47, 0xba, 0xfb, 0x56, 0x02, 0xd9, 0xbc,
	0xb0, 0x49, 0x6d, 0x7f, 0x40, 0x3f, 0xd2, 0xaf, 0x91, 0xa4, 0xdb, 0x58, 0x3c, 0xeb, 0x25, 0x4c,
	0x66, 0xe6, 0x31, 0x99, 0x17, 0x36, 0xae, 0x8d, 0x01, 0xd3, 0x90, 0xa3, 0x2c, 0x9c, 0x3c, 0x2f,
	0xa4, 0x2d, 0x08, 0x24, 0x59, 0xd8, 0x36, 0xa0, 0xe4, 0x0a, 0xbc, 0x83, 0x0c, 0x36, 0x59, 0x2d,
	0xb4, 0x78, 0xc3, 0x1a, 0xb5, 0x03, 0xa3, 0x84, 0xc6, 0x30, 0x87, 0x85, 0x93, 0xa4, 0x33, 0x5a,
	0xbb, 0x95, 0xd0, 0x65, 0x26, 0xb5, 0xc3, 0xa6, 0x12, 0x05, 0xda, 0x1f, 0x98, 0xde, 0xb1, 0x51,
	0x8c, 0x81, 0x87, 0xfb, 0x97, 0x67, 0x7e, 0xc5, 0x46, 0x51, 0x06, 0x2d, 0x6a, 0x9c, 0x26, 0x17,
	0xc9, 0xac, 0x9f, 0x9f, 0x46, 0xf6, 0x51, 0xd4, 0x98, 0x1a, 0x36, 0x96, 0x06, 0x44, 0x59, 0x36,
	0xe0, 0x60, 0xad, 0x25, 0x69, 0x7e, 0xce, 0x4e, 0x44, 0x75, 0x38, 0xd2, 0x15, 0x95, 0xf7, 0xf2,
	0x4b, 0x36, 0x94, 0xe6, 0xfd, 0x36, 0xb8, 0xd1, 0xda, 0xe9, 0x51, 0x50, 0x07, 0x9e, 0x5b, 0xee,
	0xa8, 0xd6, 0xb2, 0x88, 0x96, 0x4e, 0xb4, 0x2c, 0x5a, 0x4b, 0xfa, 0x95, 0xb0, 0x9e, 0x7f, 0xab,
	0xd4, 0x15, 0xf1, 0x09, 0x3b, 0x16, 0x4a, 0xd1, 0xa6, 0x4d, 0xda, 0x5d, 0xf8, 0x67, 0xc2, 0x86,
	0x06, 0xb1, 0x39, 0x48, 0xea, 0xcc, 0x06, 0xf3, 0x22, 0xfb, 0xfb, 0xcd, 0x65, 0xbf, 0xda, 0xe7,
	0x03, 0x1f, 0xbc, 0xaf, 0x73, 0xcd, 0x26, 0xd2, 0x82, 0x50, 0x0a, 0x3c, 0x1b, 0x10, 0x6d, 0xb0,
	0x0c, 0xb5, 0x7a, 0xf9, 0x99, 0xb4, 0x4b, 0xa5, 0x9e, 0xbc, 0xb2, 0xdc, 0x09, 0xe9, 0x47, 0xc2,
	0xfa, 0xf1, 0x23, 0xf8, 0x96, 0xf5, 0x02, 0x28, 0x48, 0x4d, 0xe7, 0xa1, 0xc2, 0xeb, 0x7f, 0x54,
	0xd8, 0x6f, 0x33, 0x8f, 0x69, 0xab, 0x6e, 0x40, 0x37, 0xdf, 0x01, 0x00, 0x00, 0xff, 0xff, 0x92,
	0x53, 0x57, 0xd8, 0x7d, 0x02, 0x00, 0x00,
}
