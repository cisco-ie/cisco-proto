/*
Copyright 2019 Cisco Systems

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: ssh_session_rekey.proto

package cisco_ios_xr_crypto_ssh_oper_ssh_session_rekey

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type SshSessionRekey_KEYS struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SshSessionRekey_KEYS) Reset()         { *m = SshSessionRekey_KEYS{} }
func (m *SshSessionRekey_KEYS) String() string { return proto.CompactTextString(m) }
func (*SshSessionRekey_KEYS) ProtoMessage()    {}
func (*SshSessionRekey_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_f19f1c57ea0ab067, []int{0}
}

func (m *SshSessionRekey_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SshSessionRekey_KEYS.Unmarshal(m, b)
}
func (m *SshSessionRekey_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SshSessionRekey_KEYS.Marshal(b, m, deterministic)
}
func (m *SshSessionRekey_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SshSessionRekey_KEYS.Merge(m, src)
}
func (m *SshSessionRekey_KEYS) XXX_Size() int {
	return xxx_messageInfo_SshSessionRekey_KEYS.Size(m)
}
func (m *SshSessionRekey_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_SshSessionRekey_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_SshSessionRekey_KEYS proto.InternalMessageInfo

type SessionRekeyInfoItem struct {
	SessionId            uint32   `protobuf:"varint,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	SessionRekeyCount    uint32   `protobuf:"varint,2,opt,name=session_rekey_count,json=sessionRekeyCount,proto3" json:"session_rekey_count,omitempty"`
	TimeToRekey          string   `protobuf:"bytes,3,opt,name=time_to_rekey,json=timeToRekey,proto3" json:"time_to_rekey,omitempty"`
	VolumeToRekey        string   `protobuf:"bytes,4,opt,name=volume_to_rekey,json=volumeToRekey,proto3" json:"volume_to_rekey,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SessionRekeyInfoItem) Reset()         { *m = SessionRekeyInfoItem{} }
func (m *SessionRekeyInfoItem) String() string { return proto.CompactTextString(m) }
func (*SessionRekeyInfoItem) ProtoMessage()    {}
func (*SessionRekeyInfoItem) Descriptor() ([]byte, []int) {
	return fileDescriptor_f19f1c57ea0ab067, []int{1}
}

func (m *SessionRekeyInfoItem) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SessionRekeyInfoItem.Unmarshal(m, b)
}
func (m *SessionRekeyInfoItem) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SessionRekeyInfoItem.Marshal(b, m, deterministic)
}
func (m *SessionRekeyInfoItem) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SessionRekeyInfoItem.Merge(m, src)
}
func (m *SessionRekeyInfoItem) XXX_Size() int {
	return xxx_messageInfo_SessionRekeyInfoItem.Size(m)
}
func (m *SessionRekeyInfoItem) XXX_DiscardUnknown() {
	xxx_messageInfo_SessionRekeyInfoItem.DiscardUnknown(m)
}

var xxx_messageInfo_SessionRekeyInfoItem proto.InternalMessageInfo

func (m *SessionRekeyInfoItem) GetSessionId() uint32 {
	if m != nil {
		return m.SessionId
	}
	return 0
}

func (m *SessionRekeyInfoItem) GetSessionRekeyCount() uint32 {
	if m != nil {
		return m.SessionRekeyCount
	}
	return 0
}

func (m *SessionRekeyInfoItem) GetTimeToRekey() string {
	if m != nil {
		return m.TimeToRekey
	}
	return ""
}

func (m *SessionRekeyInfoItem) GetVolumeToRekey() string {
	if m != nil {
		return m.VolumeToRekey
	}
	return ""
}

type SessionRekeyInfoEntry struct {
	SessionRekeyInfo     []*SessionRekeyInfoItem `protobuf:"bytes,5,rep,name=session_rekey_info,json=sessionRekeyInfo,proto3" json:"session_rekey_info,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *SessionRekeyInfoEntry) Reset()         { *m = SessionRekeyInfoEntry{} }
func (m *SessionRekeyInfoEntry) String() string { return proto.CompactTextString(m) }
func (*SessionRekeyInfoEntry) ProtoMessage()    {}
func (*SessionRekeyInfoEntry) Descriptor() ([]byte, []int) {
	return fileDescriptor_f19f1c57ea0ab067, []int{2}
}

func (m *SessionRekeyInfoEntry) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SessionRekeyInfoEntry.Unmarshal(m, b)
}
func (m *SessionRekeyInfoEntry) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SessionRekeyInfoEntry.Marshal(b, m, deterministic)
}
func (m *SessionRekeyInfoEntry) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SessionRekeyInfoEntry.Merge(m, src)
}
func (m *SessionRekeyInfoEntry) XXX_Size() int {
	return xxx_messageInfo_SessionRekeyInfoEntry.Size(m)
}
func (m *SessionRekeyInfoEntry) XXX_DiscardUnknown() {
	xxx_messageInfo_SessionRekeyInfoEntry.DiscardUnknown(m)
}

var xxx_messageInfo_SessionRekeyInfoEntry proto.InternalMessageInfo

func (m *SessionRekeyInfoEntry) GetSessionRekeyInfo() []*SessionRekeyInfoItem {
	if m != nil {
		return m.SessionRekeyInfo
	}
	return nil
}

type SshSessionRekey struct {
	IncomingSessions     *SessionRekeyInfoEntry `protobuf:"bytes,50,opt,name=incoming_sessions,json=incomingSessions,proto3" json:"incoming_sessions,omitempty"`
	OutgoingConnections  *SessionRekeyInfoEntry `protobuf:"bytes,51,opt,name=outgoing_connections,json=outgoingConnections,proto3" json:"outgoing_connections,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *SshSessionRekey) Reset()         { *m = SshSessionRekey{} }
func (m *SshSessionRekey) String() string { return proto.CompactTextString(m) }
func (*SshSessionRekey) ProtoMessage()    {}
func (*SshSessionRekey) Descriptor() ([]byte, []int) {
	return fileDescriptor_f19f1c57ea0ab067, []int{3}
}

func (m *SshSessionRekey) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SshSessionRekey.Unmarshal(m, b)
}
func (m *SshSessionRekey) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SshSessionRekey.Marshal(b, m, deterministic)
}
func (m *SshSessionRekey) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SshSessionRekey.Merge(m, src)
}
func (m *SshSessionRekey) XXX_Size() int {
	return xxx_messageInfo_SshSessionRekey.Size(m)
}
func (m *SshSessionRekey) XXX_DiscardUnknown() {
	xxx_messageInfo_SshSessionRekey.DiscardUnknown(m)
}

var xxx_messageInfo_SshSessionRekey proto.InternalMessageInfo

func (m *SshSessionRekey) GetIncomingSessions() *SessionRekeyInfoEntry {
	if m != nil {
		return m.IncomingSessions
	}
	return nil
}

func (m *SshSessionRekey) GetOutgoingConnections() *SessionRekeyInfoEntry {
	if m != nil {
		return m.OutgoingConnections
	}
	return nil
}

func init() {
	proto.RegisterType((*SshSessionRekey_KEYS)(nil), "cisco_ios_xr_crypto_ssh_oper.ssh.session.rekey.ssh_session_rekey_KEYS")
	proto.RegisterType((*SessionRekeyInfoItem)(nil), "cisco_ios_xr_crypto_ssh_oper.ssh.session.rekey.session_rekey_info_item")
	proto.RegisterType((*SessionRekeyInfoEntry)(nil), "cisco_ios_xr_crypto_ssh_oper.ssh.session.rekey.session_rekey_info_entry")
	proto.RegisterType((*SshSessionRekey)(nil), "cisco_ios_xr_crypto_ssh_oper.ssh.session.rekey.ssh_session_rekey")
}

func init() { proto.RegisterFile("ssh_session_rekey.proto", fileDescriptor_f19f1c57ea0ab067) }

var fileDescriptor_f19f1c57ea0ab067 = []byte{
	// 308 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x92, 0x41, 0x4b, 0xc3, 0x30,
	0x14, 0xc7, 0xc9, 0xa6, 0xc2, 0xde, 0x18, 0x6e, 0x99, 0xb8, 0x5c, 0x84, 0xd2, 0x83, 0xf4, 0x94,
	0xc3, 0xf6, 0x11, 0x86, 0xe8, 0xf0, 0xd6, 0x79, 0xf1, 0x14, 0x30, 0xcb, 0xb6, 0xa0, 0xcd, 0x2b,
	0x49, 0x2a, 0x16, 0x3f, 0x80, 0x67, 0xbf, 0x8b, 0x1f, 0x50, 0x9a, 0xb5, 0xb8, 0x51, 0x3d, 0x08,
	0xbb, 0xfe, 0xff, 0xbf, 0xd7, 0x5f, 0xde, 0xa3, 0x30, 0x71, 0x6e, 0x2b, 0x9c, 0x72, 0x4e, 0xa3,
	0x11, 0x56, 0x3d, 0xab, 0x92, 0xe7, 0x16, 0x3d, 0x52, 0x2e, 0xb5, 0x93, 0x28, 0x34, 0x3a, 0xf1,
	0x66, 0x85, 0xb4, 0x65, 0xee, 0x51, 0x54, 0x30, 0xe6, 0xca, 0x72, 0xe7, 0xb6, 0xbc, 0x9e, 0xe2,
	0x61, 0x2a, 0x66, 0x70, 0xd9, 0xfa, 0x94, 0xb8, 0xbf, 0x79, 0x5c, 0xc6, 0x5f, 0x04, 0x26, 0x87,
	0xb1, 0x36, 0x6b, 0x14, 0xda, 0xab, 0x8c, 0x5e, 0x01, 0x34, 0x95, 0x5e, 0x31, 0x12, 0x91, 0x64,
	0x90, 0xf6, 0xea, 0x64, 0xb1, 0xa2, 0x1c, 0xc6, 0x87, 0x93, 0x12, 0x0b, 0xe3, 0x59, 0x27, 0x70,
	0xa3, 0xba, 0x4a, 0xab, 0x66, 0x5e, 0x15, 0x34, 0x86, 0x81, 0xd7, 0x99, 0x12, 0x1e, 0x77, 0x3c,
	0xeb, 0x46, 0x24, 0xe9, 0xa5, 0xfd, 0x2a, 0x7c, 0xc0, 0x00, 0xd2, 0x6b, 0x38, 0x7f, 0xc5, 0x97,
	0x62, 0x9f, 0x3a, 0x09, 0xd4, 0x60, 0x17, 0xd7, 0x5c, 0xfc, 0x49, 0x80, 0xfd, 0xf2, 0x6c, 0x65,
	0xbc, 0x2d, 0x69, 0x01, 0xb4, 0xdd, 0xb1, 0xd3, 0xa8, 0x9b, 0xf4, 0xa7, 0xb7, 0xff, 0x3c, 0x1d,
	0xff, 0xe3, 0x38, 0xe9, 0x70, 0x7f, 0xc1, 0x85, 0x59, 0x63, 0xfc, 0xd1, 0x81, 0x51, 0xeb, 0xca,
	0xb4, 0x80, 0x91, 0x36, 0x12, 0x33, 0x6d, 0x36, 0x4d, 0xe3, 0xd8, 0x34, 0x22, 0x49, 0x7f, 0x7a,
	0x77, 0x84, 0xb7, 0x84, 0x8d, 0xd3, 0x61, 0xa3, 0x58, 0xd6, 0x06, 0xfa, 0x0e, 0x17, 0x58, 0xf8,
	0x0d, 0x56, 0x5a, 0x89, 0xc6, 0x28, 0xe9, 0x83, 0x79, 0x76, 0x64, 0xf3, 0xb8, 0xb1, 0xcc, 0x7f,
	0x24, 0x4f, 0x67, 0xe1, 0x2f, 0x9d, 0x7d, 0x07, 0x00, 0x00, 0xff, 0xff, 0xf3, 0x94, 0x54, 0x26,
	0xc0, 0x02, 0x00, 0x00,
}
