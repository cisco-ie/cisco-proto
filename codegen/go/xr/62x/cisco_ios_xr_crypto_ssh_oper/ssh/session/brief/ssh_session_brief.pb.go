/*
Copyright 2019 Cisco Systems

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: ssh_session_brief.proto

package cisco_ios_xr_crypto_ssh_oper_ssh_session_brief

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type SshSessionBrief_KEYS struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SshSessionBrief_KEYS) Reset()         { *m = SshSessionBrief_KEYS{} }
func (m *SshSessionBrief_KEYS) String() string { return proto.CompactTextString(m) }
func (*SshSessionBrief_KEYS) ProtoMessage()    {}
func (*SshSessionBrief_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_27dd79317fc89792, []int{0}
}

func (m *SshSessionBrief_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SshSessionBrief_KEYS.Unmarshal(m, b)
}
func (m *SshSessionBrief_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SshSessionBrief_KEYS.Marshal(b, m, deterministic)
}
func (m *SshSessionBrief_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SshSessionBrief_KEYS.Merge(m, src)
}
func (m *SshSessionBrief_KEYS) XXX_Size() int {
	return xxx_messageInfo_SshSessionBrief_KEYS.Size(m)
}
func (m *SshSessionBrief_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_SshSessionBrief_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_SshSessionBrief_KEYS proto.InternalMessageInfo

type SessionBriefInfoItem struct {
	SessionId            uint32   `protobuf:"varint,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	ChannelId            uint32   `protobuf:"varint,2,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
	VtyAssigned          bool     `protobuf:"varint,3,opt,name=vty_assigned,json=vtyAssigned,proto3" json:"vty_assigned,omitempty"`
	VtyLineNumber        uint32   `protobuf:"varint,4,opt,name=vty_line_number,json=vtyLineNumber,proto3" json:"vty_line_number,omitempty"`
	NodeName             string   `protobuf:"bytes,5,opt,name=node_name,json=nodeName,proto3" json:"node_name,omitempty"`
	SessionState         string   `protobuf:"bytes,6,opt,name=session_state,json=sessionState,proto3" json:"session_state,omitempty"`
	UserId               string   `protobuf:"bytes,7,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	HostAddress          string   `protobuf:"bytes,8,opt,name=host_address,json=hostAddress,proto3" json:"host_address,omitempty"`
	Version              string   `protobuf:"bytes,9,opt,name=version,proto3" json:"version,omitempty"`
	AuthenticationType   string   `protobuf:"bytes,10,opt,name=authentication_type,json=authenticationType,proto3" json:"authentication_type,omitempty"`
	ConnectionType       string   `protobuf:"bytes,11,opt,name=connection_type,json=connectionType,proto3" json:"connection_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SessionBriefInfoItem) Reset()         { *m = SessionBriefInfoItem{} }
func (m *SessionBriefInfoItem) String() string { return proto.CompactTextString(m) }
func (*SessionBriefInfoItem) ProtoMessage()    {}
func (*SessionBriefInfoItem) Descriptor() ([]byte, []int) {
	return fileDescriptor_27dd79317fc89792, []int{1}
}

func (m *SessionBriefInfoItem) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SessionBriefInfoItem.Unmarshal(m, b)
}
func (m *SessionBriefInfoItem) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SessionBriefInfoItem.Marshal(b, m, deterministic)
}
func (m *SessionBriefInfoItem) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SessionBriefInfoItem.Merge(m, src)
}
func (m *SessionBriefInfoItem) XXX_Size() int {
	return xxx_messageInfo_SessionBriefInfoItem.Size(m)
}
func (m *SessionBriefInfoItem) XXX_DiscardUnknown() {
	xxx_messageInfo_SessionBriefInfoItem.DiscardUnknown(m)
}

var xxx_messageInfo_SessionBriefInfoItem proto.InternalMessageInfo

func (m *SessionBriefInfoItem) GetSessionId() uint32 {
	if m != nil {
		return m.SessionId
	}
	return 0
}

func (m *SessionBriefInfoItem) GetChannelId() uint32 {
	if m != nil {
		return m.ChannelId
	}
	return 0
}

func (m *SessionBriefInfoItem) GetVtyAssigned() bool {
	if m != nil {
		return m.VtyAssigned
	}
	return false
}

func (m *SessionBriefInfoItem) GetVtyLineNumber() uint32 {
	if m != nil {
		return m.VtyLineNumber
	}
	return 0
}

func (m *SessionBriefInfoItem) GetNodeName() string {
	if m != nil {
		return m.NodeName
	}
	return ""
}

func (m *SessionBriefInfoItem) GetSessionState() string {
	if m != nil {
		return m.SessionState
	}
	return ""
}

func (m *SessionBriefInfoItem) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *SessionBriefInfoItem) GetHostAddress() string {
	if m != nil {
		return m.HostAddress
	}
	return ""
}

func (m *SessionBriefInfoItem) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func (m *SessionBriefInfoItem) GetAuthenticationType() string {
	if m != nil {
		return m.AuthenticationType
	}
	return ""
}

func (m *SessionBriefInfoItem) GetConnectionType() string {
	if m != nil {
		return m.ConnectionType
	}
	return ""
}

type SessionBriefInfoEntry struct {
	SessionBriefInfo     []*SessionBriefInfoItem `protobuf:"bytes,12,rep,name=session_brief_info,json=sessionBriefInfo,proto3" json:"session_brief_info,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *SessionBriefInfoEntry) Reset()         { *m = SessionBriefInfoEntry{} }
func (m *SessionBriefInfoEntry) String() string { return proto.CompactTextString(m) }
func (*SessionBriefInfoEntry) ProtoMessage()    {}
func (*SessionBriefInfoEntry) Descriptor() ([]byte, []int) {
	return fileDescriptor_27dd79317fc89792, []int{2}
}

func (m *SessionBriefInfoEntry) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SessionBriefInfoEntry.Unmarshal(m, b)
}
func (m *SessionBriefInfoEntry) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SessionBriefInfoEntry.Marshal(b, m, deterministic)
}
func (m *SessionBriefInfoEntry) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SessionBriefInfoEntry.Merge(m, src)
}
func (m *SessionBriefInfoEntry) XXX_Size() int {
	return xxx_messageInfo_SessionBriefInfoEntry.Size(m)
}
func (m *SessionBriefInfoEntry) XXX_DiscardUnknown() {
	xxx_messageInfo_SessionBriefInfoEntry.DiscardUnknown(m)
}

var xxx_messageInfo_SessionBriefInfoEntry proto.InternalMessageInfo

func (m *SessionBriefInfoEntry) GetSessionBriefInfo() []*SessionBriefInfoItem {
	if m != nil {
		return m.SessionBriefInfo
	}
	return nil
}

type SshSessionBrief struct {
	IncomingSessions     *SessionBriefInfoEntry `protobuf:"bytes,50,opt,name=incoming_sessions,json=incomingSessions,proto3" json:"incoming_sessions,omitempty"`
	OutgoingSessions     *SessionBriefInfoEntry `protobuf:"bytes,51,opt,name=outgoing_sessions,json=outgoingSessions,proto3" json:"outgoing_sessions,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *SshSessionBrief) Reset()         { *m = SshSessionBrief{} }
func (m *SshSessionBrief) String() string { return proto.CompactTextString(m) }
func (*SshSessionBrief) ProtoMessage()    {}
func (*SshSessionBrief) Descriptor() ([]byte, []int) {
	return fileDescriptor_27dd79317fc89792, []int{3}
}

func (m *SshSessionBrief) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SshSessionBrief.Unmarshal(m, b)
}
func (m *SshSessionBrief) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SshSessionBrief.Marshal(b, m, deterministic)
}
func (m *SshSessionBrief) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SshSessionBrief.Merge(m, src)
}
func (m *SshSessionBrief) XXX_Size() int {
	return xxx_messageInfo_SshSessionBrief.Size(m)
}
func (m *SshSessionBrief) XXX_DiscardUnknown() {
	xxx_messageInfo_SshSessionBrief.DiscardUnknown(m)
}

var xxx_messageInfo_SshSessionBrief proto.InternalMessageInfo

func (m *SshSessionBrief) GetIncomingSessions() *SessionBriefInfoEntry {
	if m != nil {
		return m.IncomingSessions
	}
	return nil
}

func (m *SshSessionBrief) GetOutgoingSessions() *SessionBriefInfoEntry {
	if m != nil {
		return m.OutgoingSessions
	}
	return nil
}

func init() {
	proto.RegisterType((*SshSessionBrief_KEYS)(nil), "cisco_ios_xr_crypto_ssh_oper.ssh.session.brief.ssh_session_brief_KEYS")
	proto.RegisterType((*SessionBriefInfoItem)(nil), "cisco_ios_xr_crypto_ssh_oper.ssh.session.brief.session_brief_info_item")
	proto.RegisterType((*SessionBriefInfoEntry)(nil), "cisco_ios_xr_crypto_ssh_oper.ssh.session.brief.session_brief_info_entry")
	proto.RegisterType((*SshSessionBrief)(nil), "cisco_ios_xr_crypto_ssh_oper.ssh.session.brief.ssh_session_brief")
}

func init() { proto.RegisterFile("ssh_session_brief.proto", fileDescriptor_27dd79317fc89792) }

var fileDescriptor_27dd79317fc89792 = []byte{
	// 431 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x93, 0x4f, 0x8b, 0xd3, 0x40,
	0x18, 0xc6, 0xc9, 0x56, 0xfb, 0xe7, 0x4d, 0xeb, 0xee, 0x8e, 0x60, 0x07, 0x44, 0x88, 0x15, 0x34,
	0xa7, 0x08, 0xdd, 0x4f, 0xb0, 0x82, 0x68, 0x51, 0xf6, 0x90, 0x7a, 0xf1, 0x34, 0xa4, 0xc9, 0xdb,
	0x66, 0x60, 0x33, 0x13, 0xe6, 0x9d, 0x04, 0x73, 0xf4, 0x23, 0x08, 0x7e, 0x60, 0x99, 0x69, 0xc2,
	0x52, 0xaa, 0x07, 0x61, 0x8f, 0xf3, 0xfb, 0x3d, 0x33, 0xcf, 0x1b, 0x66, 0x02, 0x4b, 0xa2, 0x52,
	0x10, 0x12, 0x49, 0xad, 0xc4, 0xce, 0x48, 0xdc, 0x27, 0xb5, 0xd1, 0x56, 0xb3, 0x24, 0x97, 0x94,
	0x6b, 0x21, 0x35, 0x89, 0x1f, 0x46, 0xe4, 0xa6, 0xab, 0xad, 0x16, 0x2e, 0xac, 0x6b, 0x34, 0x09,
	0x51, 0x99, 0xf4, 0xbb, 0x12, 0xbf, 0x6b, 0xc5, 0xe1, 0xc5, 0xd9, 0x51, 0xe2, 0xcb, 0xc7, 0xef,
	0xdb, 0xd5, 0xef, 0x11, 0x2c, 0x4f, 0xb1, 0x54, 0x7b, 0x2d, 0xa4, 0xc5, 0x8a, 0xbd, 0x02, 0x18,
	0x94, 0x2c, 0x78, 0x10, 0x05, 0xf1, 0x22, 0x9d, 0xf5, 0x64, 0x53, 0x38, 0x9d, 0x97, 0x99, 0x52,
	0x78, 0xef, 0xf4, 0xc5, 0x51, 0xf7, 0x64, 0x53, 0xb0, 0xd7, 0x30, 0x6f, 0x6d, 0x27, 0x32, 0x22,
	0x79, 0x50, 0x58, 0xf0, 0x51, 0x14, 0xc4, 0xd3, 0x34, 0x6c, 0x6d, 0x77, 0xdb, 0x23, 0xf6, 0x16,
	0x2e, 0x5d, 0xe4, 0x5e, 0x2a, 0x14, 0xaa, 0xa9, 0x76, 0x68, 0xf8, 0x13, 0x7f, 0xcc, 0xa2, 0xb5,
	0xdd, 0x57, 0xa9, 0xf0, 0xce, 0x43, 0xf6, 0x12, 0x66, 0x4a, 0x17, 0x28, 0x54, 0x56, 0x21, 0x7f,
	0x1a, 0x05, 0xf1, 0x2c, 0x9d, 0x3a, 0x70, 0x97, 0x55, 0xc8, 0xde, 0xc0, 0x62, 0x98, 0x92, 0x6c,
	0x66, 0x91, 0x8f, 0x7d, 0x60, 0xde, 0xc3, 0xad, 0x63, 0x6c, 0x09, 0x93, 0x86, 0xd0, 0xb8, 0x41,
	0x27, 0x5e, 0x8f, 0xdd, 0xf2, 0x38, 0x65, 0xa9, 0xc9, 0x8a, 0xac, 0x28, 0x0c, 0x12, 0xf1, 0xa9,
	0xb7, 0xa1, 0x63, 0xb7, 0x47, 0xc4, 0x38, 0x4c, 0x5a, 0x34, 0xee, 0x2c, 0x3e, 0xf3, 0x76, 0x58,
	0xb2, 0xf7, 0xf0, 0x3c, 0x6b, 0x6c, 0x89, 0xca, 0xca, 0x3c, 0xb3, 0x6e, 0x02, 0xdb, 0xd5, 0xc8,
	0xc1, 0xa7, 0xd8, 0xa9, 0xfa, 0xd6, 0xd5, 0xc8, 0xde, 0xc1, 0x65, 0xae, 0x95, 0xc2, 0xfc, 0x21,
	0x1c, 0xfa, 0xf0, 0xb3, 0x07, 0xec, 0x82, 0xab, 0x5f, 0x01, 0xf0, 0xbf, 0x5c, 0x0b, 0x2a, 0x6b,
	0x3a, 0xd6, 0x00, 0x3b, 0x77, 0x7c, 0x1e, 0x8d, 0xe2, 0x70, 0xfd, 0xe9, 0x3f, 0x9f, 0x46, 0xf2,
	0x8f, 0xcb, 0x4f, 0xaf, 0x7a, 0xf1, 0xc1, 0xf1, 0x8d, 0xda, 0xeb, 0xd5, 0xcf, 0x0b, 0xb8, 0x3e,
	0x7b, 0x45, 0xac, 0x81, 0x6b, 0xa9, 0x72, 0x5d, 0x49, 0x75, 0x18, 0x0c, 0xf1, 0x75, 0x14, 0xc4,
	0xe1, 0xfa, 0xf3, 0x23, 0xcc, 0xe2, 0xbf, 0x38, 0xbd, 0x1a, 0x2a, 0xb6, 0x7d, 0x83, 0xab, 0xd5,
	0x8d, 0x3d, 0xe8, 0x93, 0xda, 0x9b, 0xc7, 0xae, 0x1d, 0x2a, 0x86, 0xda, 0xdd, 0xd8, 0xff, 0x7f,
	0x37, 0x7f, 0x02, 0x00, 0x00, 0xff, 0xff, 0x80, 0xa0, 0xf3, 0xfd, 0x9a, 0x03, 0x00, 0x00,
}
