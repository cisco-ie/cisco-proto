/*
Copyright 2019 Cisco Systems

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: l2vpn_pwhe_detail.proto

package cisco_ios_xr_l2vpn_oper_l2vpn_pseudowire_headend_detail_interfaces_detail_interface

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type L2VpnPwheDetail_KEYS struct {
	InterfaceName        string   `protobuf:"bytes,1,opt,name=interface_name,json=interfaceName,proto3" json:"interface_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *L2VpnPwheDetail_KEYS) Reset()         { *m = L2VpnPwheDetail_KEYS{} }
func (m *L2VpnPwheDetail_KEYS) String() string { return proto.CompactTextString(m) }
func (*L2VpnPwheDetail_KEYS) ProtoMessage()    {}
func (*L2VpnPwheDetail_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_7a8dc59e93eff627, []int{0}
}

func (m *L2VpnPwheDetail_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_L2VpnPwheDetail_KEYS.Unmarshal(m, b)
}
func (m *L2VpnPwheDetail_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_L2VpnPwheDetail_KEYS.Marshal(b, m, deterministic)
}
func (m *L2VpnPwheDetail_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_L2VpnPwheDetail_KEYS.Merge(m, src)
}
func (m *L2VpnPwheDetail_KEYS) XXX_Size() int {
	return xxx_messageInfo_L2VpnPwheDetail_KEYS.Size(m)
}
func (m *L2VpnPwheDetail_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_L2VpnPwheDetail_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_L2VpnPwheDetail_KEYS proto.InternalMessageInfo

func (m *L2VpnPwheDetail_KEYS) GetInterfaceName() string {
	if m != nil {
		return m.InterfaceName
	}
	return ""
}

type L2VpnPwheMacAddrT struct {
	MacAddress           string   `protobuf:"bytes,1,opt,name=mac_address,json=macAddress,proto3" json:"mac_address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *L2VpnPwheMacAddrT) Reset()         { *m = L2VpnPwheMacAddrT{} }
func (m *L2VpnPwheMacAddrT) String() string { return proto.CompactTextString(m) }
func (*L2VpnPwheMacAddrT) ProtoMessage()    {}
func (*L2VpnPwheMacAddrT) Descriptor() ([]byte, []int) {
	return fileDescriptor_7a8dc59e93eff627, []int{1}
}

func (m *L2VpnPwheMacAddrT) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_L2VpnPwheMacAddrT.Unmarshal(m, b)
}
func (m *L2VpnPwheMacAddrT) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_L2VpnPwheMacAddrT.Marshal(b, m, deterministic)
}
func (m *L2VpnPwheMacAddrT) XXX_Merge(src proto.Message) {
	xxx_messageInfo_L2VpnPwheMacAddrT.Merge(m, src)
}
func (m *L2VpnPwheMacAddrT) XXX_Size() int {
	return xxx_messageInfo_L2VpnPwheMacAddrT.Size(m)
}
func (m *L2VpnPwheMacAddrT) XXX_DiscardUnknown() {
	xxx_messageInfo_L2VpnPwheMacAddrT.DiscardUnknown(m)
}

var xxx_messageInfo_L2VpnPwheMacAddrT proto.InternalMessageInfo

func (m *L2VpnPwheMacAddrT) GetMacAddress() string {
	if m != nil {
		return m.MacAddress
	}
	return ""
}

type L2VpnL2AddrPwheDetail struct {
	InterfaceType        string             `protobuf:"bytes,1,opt,name=interface_type,json=interfaceType,proto3" json:"interface_type,omitempty"`
	MacAddress           *L2VpnPwheMacAddrT `protobuf:"bytes,2,opt,name=mac_address,json=macAddress,proto3" json:"mac_address,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *L2VpnL2AddrPwheDetail) Reset()         { *m = L2VpnL2AddrPwheDetail{} }
func (m *L2VpnL2AddrPwheDetail) String() string { return proto.CompactTextString(m) }
func (*L2VpnL2AddrPwheDetail) ProtoMessage()    {}
func (*L2VpnL2AddrPwheDetail) Descriptor() ([]byte, []int) {
	return fileDescriptor_7a8dc59e93eff627, []int{2}
}

func (m *L2VpnL2AddrPwheDetail) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_L2VpnL2AddrPwheDetail.Unmarshal(m, b)
}
func (m *L2VpnL2AddrPwheDetail) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_L2VpnL2AddrPwheDetail.Marshal(b, m, deterministic)
}
func (m *L2VpnL2AddrPwheDetail) XXX_Merge(src proto.Message) {
	xxx_messageInfo_L2VpnL2AddrPwheDetail.Merge(m, src)
}
func (m *L2VpnL2AddrPwheDetail) XXX_Size() int {
	return xxx_messageInfo_L2VpnL2AddrPwheDetail.Size(m)
}
func (m *L2VpnL2AddrPwheDetail) XXX_DiscardUnknown() {
	xxx_messageInfo_L2VpnL2AddrPwheDetail.DiscardUnknown(m)
}

var xxx_messageInfo_L2VpnL2AddrPwheDetail proto.InternalMessageInfo

func (m *L2VpnL2AddrPwheDetail) GetInterfaceType() string {
	if m != nil {
		return m.InterfaceType
	}
	return ""
}

func (m *L2VpnL2AddrPwheDetail) GetMacAddress() *L2VpnPwheMacAddrT {
	if m != nil {
		return m.MacAddress
	}
	return nil
}

type L2VpnPwheGenericIflistIntf struct {
	InterfaceName        string   `protobuf:"bytes,1,opt,name=interface_name,json=interfaceName,proto3" json:"interface_name,omitempty"`
	BundleInterfaceName  string   `protobuf:"bytes,2,opt,name=bundle_interface_name,json=bundleInterfaceName,proto3" json:"bundle_interface_name,omitempty"`
	InterfaceState       string   `protobuf:"bytes,3,opt,name=interface_state,json=interfaceState,proto3" json:"interface_state,omitempty"`
	ReplicateState       string   `protobuf:"bytes,4,opt,name=replicate_state,json=replicateState,proto3" json:"replicate_state,omitempty"`
	Misconfigured        bool     `protobuf:"varint,5,opt,name=misconfigured,proto3" json:"misconfigured,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *L2VpnPwheGenericIflistIntf) Reset()         { *m = L2VpnPwheGenericIflistIntf{} }
func (m *L2VpnPwheGenericIflistIntf) String() string { return proto.CompactTextString(m) }
func (*L2VpnPwheGenericIflistIntf) ProtoMessage()    {}
func (*L2VpnPwheGenericIflistIntf) Descriptor() ([]byte, []int) {
	return fileDescriptor_7a8dc59e93eff627, []int{3}
}

func (m *L2VpnPwheGenericIflistIntf) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_L2VpnPwheGenericIflistIntf.Unmarshal(m, b)
}
func (m *L2VpnPwheGenericIflistIntf) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_L2VpnPwheGenericIflistIntf.Marshal(b, m, deterministic)
}
func (m *L2VpnPwheGenericIflistIntf) XXX_Merge(src proto.Message) {
	xxx_messageInfo_L2VpnPwheGenericIflistIntf.Merge(m, src)
}
func (m *L2VpnPwheGenericIflistIntf) XXX_Size() int {
	return xxx_messageInfo_L2VpnPwheGenericIflistIntf.Size(m)
}
func (m *L2VpnPwheGenericIflistIntf) XXX_DiscardUnknown() {
	xxx_messageInfo_L2VpnPwheGenericIflistIntf.DiscardUnknown(m)
}

var xxx_messageInfo_L2VpnPwheGenericIflistIntf proto.InternalMessageInfo

func (m *L2VpnPwheGenericIflistIntf) GetInterfaceName() string {
	if m != nil {
		return m.InterfaceName
	}
	return ""
}

func (m *L2VpnPwheGenericIflistIntf) GetBundleInterfaceName() string {
	if m != nil {
		return m.BundleInterfaceName
	}
	return ""
}

func (m *L2VpnPwheGenericIflistIntf) GetInterfaceState() string {
	if m != nil {
		return m.InterfaceState
	}
	return ""
}

func (m *L2VpnPwheGenericIflistIntf) GetReplicateState() string {
	if m != nil {
		return m.ReplicateState
	}
	return ""
}

func (m *L2VpnPwheGenericIflistIntf) GetMisconfigured() bool {
	if m != nil {
		return m.Misconfigured
	}
	return false
}

type L2VpnPwheGenericIflist struct {
	GenericInterfaceListName string                        `protobuf:"bytes,1,opt,name=generic_interface_list_name,json=genericInterfaceListName,proto3" json:"generic_interface_list_name,omitempty"`
	Id                       uint32                        `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	InterfaceDetail          []*L2VpnPwheGenericIflistIntf `protobuf:"bytes,3,rep,name=interface_detail,json=interfaceDetail,proto3" json:"interface_detail,omitempty"`
	XXX_NoUnkeyedLiteral     struct{}                      `json:"-"`
	XXX_unrecognized         []byte                        `json:"-"`
	XXX_sizecache            int32                         `json:"-"`
}

func (m *L2VpnPwheGenericIflist) Reset()         { *m = L2VpnPwheGenericIflist{} }
func (m *L2VpnPwheGenericIflist) String() string { return proto.CompactTextString(m) }
func (*L2VpnPwheGenericIflist) ProtoMessage()    {}
func (*L2VpnPwheGenericIflist) Descriptor() ([]byte, []int) {
	return fileDescriptor_7a8dc59e93eff627, []int{4}
}

func (m *L2VpnPwheGenericIflist) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_L2VpnPwheGenericIflist.Unmarshal(m, b)
}
func (m *L2VpnPwheGenericIflist) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_L2VpnPwheGenericIflist.Marshal(b, m, deterministic)
}
func (m *L2VpnPwheGenericIflist) XXX_Merge(src proto.Message) {
	xxx_messageInfo_L2VpnPwheGenericIflist.Merge(m, src)
}
func (m *L2VpnPwheGenericIflist) XXX_Size() int {
	return xxx_messageInfo_L2VpnPwheGenericIflist.Size(m)
}
func (m *L2VpnPwheGenericIflist) XXX_DiscardUnknown() {
	xxx_messageInfo_L2VpnPwheGenericIflist.DiscardUnknown(m)
}

var xxx_messageInfo_L2VpnPwheGenericIflist proto.InternalMessageInfo

func (m *L2VpnPwheGenericIflist) GetGenericInterfaceListName() string {
	if m != nil {
		return m.GenericInterfaceListName
	}
	return ""
}

func (m *L2VpnPwheGenericIflist) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *L2VpnPwheGenericIflist) GetInterfaceDetail() []*L2VpnPwheGenericIflistIntf {
	if m != nil {
		return m.InterfaceDetail
	}
	return nil
}

type L2VpnPwheDetail struct {
	InterfaceState       string                  `protobuf:"bytes,50,opt,name=interface_state,json=interfaceState,proto3" json:"interface_state,omitempty"`
	AdminState           string                  `protobuf:"bytes,51,opt,name=admin_state,json=adminState,proto3" json:"admin_state,omitempty"`
	Mtu                  uint32                  `protobuf:"varint,52,opt,name=mtu,proto3" json:"mtu,omitempty"`
	Bandwidth            uint32                  `protobuf:"varint,53,opt,name=bandwidth,proto3" json:"bandwidth,omitempty"`
	Label                uint32                  `protobuf:"varint,54,opt,name=label,proto3" json:"label,omitempty"`
	L2Overhead           uint32                  `protobuf:"varint,55,opt,name=l2_overhead,json=l2Overhead,proto3" json:"l2_overhead,omitempty"`
	Vctype               uint32                  `protobuf:"varint,56,opt,name=vctype,proto3" json:"vctype,omitempty"`
	ControlWord          bool                    `protobuf:"varint,57,opt,name=control_word,json=controlWord,proto3" json:"control_word,omitempty"`
	L2Address            *L2VpnL2AddrPwheDetail  `protobuf:"bytes,58,opt,name=l2_address,json=l2Address,proto3" json:"l2_address,omitempty"`
	GenericInterfaceList *L2VpnPwheGenericIflist `protobuf:"bytes,59,opt,name=generic_interface_list,json=genericInterfaceList,proto3" json:"generic_interface_list,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *L2VpnPwheDetail) Reset()         { *m = L2VpnPwheDetail{} }
func (m *L2VpnPwheDetail) String() string { return proto.CompactTextString(m) }
func (*L2VpnPwheDetail) ProtoMessage()    {}
func (*L2VpnPwheDetail) Descriptor() ([]byte, []int) {
	return fileDescriptor_7a8dc59e93eff627, []int{5}
}

func (m *L2VpnPwheDetail) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_L2VpnPwheDetail.Unmarshal(m, b)
}
func (m *L2VpnPwheDetail) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_L2VpnPwheDetail.Marshal(b, m, deterministic)
}
func (m *L2VpnPwheDetail) XXX_Merge(src proto.Message) {
	xxx_messageInfo_L2VpnPwheDetail.Merge(m, src)
}
func (m *L2VpnPwheDetail) XXX_Size() int {
	return xxx_messageInfo_L2VpnPwheDetail.Size(m)
}
func (m *L2VpnPwheDetail) XXX_DiscardUnknown() {
	xxx_messageInfo_L2VpnPwheDetail.DiscardUnknown(m)
}

var xxx_messageInfo_L2VpnPwheDetail proto.InternalMessageInfo

func (m *L2VpnPwheDetail) GetInterfaceState() string {
	if m != nil {
		return m.InterfaceState
	}
	return ""
}

func (m *L2VpnPwheDetail) GetAdminState() string {
	if m != nil {
		return m.AdminState
	}
	return ""
}

func (m *L2VpnPwheDetail) GetMtu() uint32 {
	if m != nil {
		return m.Mtu
	}
	return 0
}

func (m *L2VpnPwheDetail) GetBandwidth() uint32 {
	if m != nil {
		return m.Bandwidth
	}
	return 0
}

func (m *L2VpnPwheDetail) GetLabel() uint32 {
	if m != nil {
		return m.Label
	}
	return 0
}

func (m *L2VpnPwheDetail) GetL2Overhead() uint32 {
	if m != nil {
		return m.L2Overhead
	}
	return 0
}

func (m *L2VpnPwheDetail) GetVctype() uint32 {
	if m != nil {
		return m.Vctype
	}
	return 0
}

func (m *L2VpnPwheDetail) GetControlWord() bool {
	if m != nil {
		return m.ControlWord
	}
	return false
}

func (m *L2VpnPwheDetail) GetL2Address() *L2VpnL2AddrPwheDetail {
	if m != nil {
		return m.L2Address
	}
	return nil
}

func (m *L2VpnPwheDetail) GetGenericInterfaceList() *L2VpnPwheGenericIflist {
	if m != nil {
		return m.GenericInterfaceList
	}
	return nil
}

func init() {
	proto.RegisterType((*L2VpnPwheDetail_KEYS)(nil), "cisco_ios_xr_l2vpn_oper.l2vpn.pseudowire_headend.detail_interfaces.detail_interface.l2vpn_pwhe_detail_KEYS")
	proto.RegisterType((*L2VpnPwheMacAddrT)(nil), "cisco_ios_xr_l2vpn_oper.l2vpn.pseudowire_headend.detail_interfaces.detail_interface.l2vpn_pwhe_mac_addr_t")
	proto.RegisterType((*L2VpnL2AddrPwheDetail)(nil), "cisco_ios_xr_l2vpn_oper.l2vpn.pseudowire_headend.detail_interfaces.detail_interface.l2vpn_l2_addr_pwhe_detail")
	proto.RegisterType((*L2VpnPwheGenericIflistIntf)(nil), "cisco_ios_xr_l2vpn_oper.l2vpn.pseudowire_headend.detail_interfaces.detail_interface.l2vpn_pwhe_generic_iflist_intf")
	proto.RegisterType((*L2VpnPwheGenericIflist)(nil), "cisco_ios_xr_l2vpn_oper.l2vpn.pseudowire_headend.detail_interfaces.detail_interface.l2vpn_pwhe_generic_iflist")
	proto.RegisterType((*L2VpnPwheDetail)(nil), "cisco_ios_xr_l2vpn_oper.l2vpn.pseudowire_headend.detail_interfaces.detail_interface.l2vpn_pwhe_detail")
}

func init() { proto.RegisterFile("l2vpn_pwhe_detail.proto", fileDescriptor_7a8dc59e93eff627) }

var fileDescriptor_7a8dc59e93eff627 = []byte{
	// 558 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x94, 0xdd, 0x6e, 0xd3, 0x30,
	0x14, 0xc7, 0x95, 0x76, 0x9b, 0xe8, 0x29, 0x1d, 0xc3, 0x6c, 0xc5, 0x08, 0xc4, 0x4a, 0x05, 0xa2,
	0x57, 0xb9, 0xc8, 0xf8, 0x18, 0x20, 0x84, 0x90, 0xe0, 0x02, 0x81, 0x40, 0x4a, 0x91, 0x10, 0x57,
	0x96, 0x1b, 0xbb, 0xab, 0x91, 0x63, 0x47, 0x8e, 0xdb, 0xb2, 0x67, 0x98, 0x78, 0x05, 0xae, 0x78,
	0x06, 0x9e, 0x83, 0x77, 0xe1, 0x05, 0x50, 0xec, 0x34, 0x6d, 0x69, 0x2e, 0x76, 0xd3, 0xbb, 0xf8,
	0x7f, 0x7e, 0xc7, 0xc7, 0xe7, 0x2b, 0x70, 0x53, 0x46, 0xb3, 0x4c, 0x91, 0x6c, 0x3e, 0xe1, 0x84,
	0x71, 0x4b, 0x85, 0x0c, 0x33, 0xa3, 0xad, 0x46, 0xc3, 0x44, 0xe4, 0x89, 0x26, 0x42, 0xe7, 0xe4,
	0xbb, 0x21, 0x9e, 0xd2, 0x19, 0x37, 0xa1, 0xfb, 0x0c, 0xb3, 0x9c, 0x4f, 0x99, 0x9e, 0x0b, 0xc3,
	0xc9, 0x84, 0x53, 0xc6, 0x15, 0x0b, 0xbd, 0x3b, 0x11, 0xca, 0x72, 0x33, 0xa6, 0x09, 0xcf, 0x37,
	0x94, 0xfe, 0x2b, 0xe8, 0x6e, 0xc4, 0x23, 0xef, 0xdf, 0x7e, 0x1d, 0xa2, 0x07, 0xb0, 0x5f, 0x61,
	0x44, 0xd1, 0x94, 0xe3, 0xa0, 0x17, 0x0c, 0x5a, 0x71, 0xa7, 0x52, 0x3f, 0xd2, 0x94, 0xf7, 0x4f,
	0xe1, 0x68, 0xe5, 0x82, 0x94, 0x26, 0x84, 0x32, 0x66, 0x88, 0x45, 0xc7, 0xd0, 0x5e, 0x9c, 0x78,
	0x9e, 0x97, 0xce, 0x90, 0xd2, 0xe4, 0xb5, 0x57, 0xfa, 0x7f, 0x02, 0xb8, 0xe5, 0x5d, 0x65, 0xe4,
	0x9d, 0x56, 0xde, 0xb0, 0x1e, 0xde, 0x9e, 0x67, 0x9b, 0xe1, 0x3f, 0x9f, 0x67, 0x1c, 0x5d, 0x04,
	0xeb, 0x61, 0x1a, 0xbd, 0x60, 0xd0, 0x8e, 0xbe, 0x85, 0x5b, 0xa8, 0x55, 0x58, 0x9b, 0xe7, 0x5a,
	0x4a, 0x7f, 0x03, 0xb8, 0xbb, 0x42, 0x9d, 0x71, 0xc5, 0x8d, 0x48, 0x88, 0x18, 0x4b, 0x91, 0xdb,
	0xe2, 0xa6, 0xf1, 0x25, 0xcb, 0x8a, 0x22, 0x38, 0x1a, 0x4d, 0x15, 0x93, 0x9c, 0xfc, 0x47, 0x37,
	0x1c, 0x7d, 0xc3, 0x1b, 0xdf, 0xad, 0xf9, 0x3c, 0x84, 0x6b, 0x4b, 0x38, 0xb7, 0xd4, 0x72, 0xdc,
	0x74, 0xf4, 0x32, 0xe2, 0xb0, 0x50, 0x0b, 0xd0, 0xf0, 0x4c, 0x8a, 0x84, 0xda, 0x05, 0xb8, 0xe3,
	0xc1, 0x4a, 0xf6, 0xe0, 0x7d, 0xe8, 0xa4, 0x45, 0x21, 0xd5, 0x58, 0x9c, 0x4d, 0x0d, 0x67, 0x78,
	0xb7, 0x17, 0x0c, 0xae, 0xc4, 0xeb, 0x62, 0xff, 0xa2, 0xb1, 0x68, 0x64, 0x4d, 0xd6, 0xe8, 0x25,
	0xdc, 0xae, 0x94, 0xea, 0x75, 0xae, 0x1e, 0x2b, 0xd9, 0xe3, 0x12, 0xa9, 0x12, 0xfa, 0x20, 0x72,
	0xeb, 0x92, 0xda, 0x87, 0x86, 0x60, 0x2e, 0xeb, 0x4e, 0xdc, 0x10, 0x0c, 0xfd, 0x0c, 0xe0, 0x60,
	0x79, 0x8f, 0xef, 0x11, 0x6e, 0xf6, 0x9a, 0x83, 0x76, 0x94, 0x6f, 0xbb, 0xeb, 0x35, 0xfd, 0x8c,
	0x97, 0x25, 0x7f, 0xe3, 0x3c, 0xfb, 0xbf, 0x77, 0xe0, 0xfa, 0xc6, 0x4a, 0xd5, 0xf5, 0x26, 0xaa,
	0xed, 0xcd, 0x31, 0xb4, 0x29, 0x4b, 0x85, 0x2a, 0xa1, 0x13, 0xbf, 0x36, 0x4e, 0xf2, 0xc0, 0x01,
	0x34, 0x53, 0x3b, 0xc5, 0x8f, 0x5c, 0x45, 0x8a, 0x4f, 0x74, 0x07, 0x5a, 0x23, 0xaa, 0xd8, 0x5c,
	0x30, 0x3b, 0xc1, 0x8f, 0x9d, 0xbe, 0x14, 0xd0, 0x21, 0xec, 0x4a, 0x3a, 0xe2, 0x12, 0x3f, 0x71,
	0x16, 0x7f, 0x28, 0xc2, 0xc8, 0x88, 0xe8, 0x19, 0x37, 0x45, 0x29, 0xf0, 0x53, 0x67, 0x03, 0x19,
	0x7d, 0x2a, 0x15, 0xd4, 0x85, 0xbd, 0x59, 0xe2, 0xf6, 0xee, 0xd4, 0xd9, 0xca, 0x13, 0xba, 0x07,
	0x57, 0x13, 0xad, 0xac, 0xd1, 0x92, 0xcc, 0xb5, 0x61, 0xf8, 0x99, 0x9b, 0x88, 0x76, 0xa9, 0x7d,
	0xd1, 0x86, 0xa1, 0x1f, 0x01, 0x40, 0xb9, 0xd2, 0xc5, 0x4a, 0x3e, 0x77, 0x2b, 0xa9, 0xb6, 0xd8,
	0x9c, 0x9a, 0xff, 0x47, 0xdc, 0x92, 0x51, 0xb9, 0x95, 0xe8, 0x57, 0x00, 0xdd, 0xfa, 0x11, 0xc4,
	0x2f, 0xb6, 0xfe, 0xb6, 0x9a, 0xc1, 0x89, 0x0f, 0xeb, 0xa6, 0x7d, 0xb4, 0xe7, 0x7e, 0xf3, 0x27,
	0xff, 0x02, 0x00, 0x00, 0xff, 0xff, 0xdf, 0x87, 0x02, 0x5c, 0x01, 0x06, 0x00, 0x00,
}
