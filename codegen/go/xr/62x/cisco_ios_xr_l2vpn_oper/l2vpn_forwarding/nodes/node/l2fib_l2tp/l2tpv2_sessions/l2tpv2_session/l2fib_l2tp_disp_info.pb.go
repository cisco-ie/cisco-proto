/*
Copyright 2019 Cisco Systems

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: l2fib_l2tp_disp_info.proto

package cisco_ios_xr_l2vpn_oper_l2vpn_forwarding_nodes_node_l2fib_l2tp_l2tpv2_sessions_l2tpv2_session

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type L2FibL2TpDispInfo_KEYS struct {
	NodeId               string   `protobuf:"bytes,1,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	SessionId            uint32   `protobuf:"varint,2,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	TunnelId             uint32   `protobuf:"varint,3,opt,name=tunnel_id,json=tunnelId,proto3" json:"tunnel_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *L2FibL2TpDispInfo_KEYS) Reset()         { *m = L2FibL2TpDispInfo_KEYS{} }
func (m *L2FibL2TpDispInfo_KEYS) String() string { return proto.CompactTextString(m) }
func (*L2FibL2TpDispInfo_KEYS) ProtoMessage()    {}
func (*L2FibL2TpDispInfo_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_ee86639b28dadfff, []int{0}
}

func (m *L2FibL2TpDispInfo_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_L2FibL2TpDispInfo_KEYS.Unmarshal(m, b)
}
func (m *L2FibL2TpDispInfo_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_L2FibL2TpDispInfo_KEYS.Marshal(b, m, deterministic)
}
func (m *L2FibL2TpDispInfo_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_L2FibL2TpDispInfo_KEYS.Merge(m, src)
}
func (m *L2FibL2TpDispInfo_KEYS) XXX_Size() int {
	return xxx_messageInfo_L2FibL2TpDispInfo_KEYS.Size(m)
}
func (m *L2FibL2TpDispInfo_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_L2FibL2TpDispInfo_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_L2FibL2TpDispInfo_KEYS proto.InternalMessageInfo

func (m *L2FibL2TpDispInfo_KEYS) GetNodeId() string {
	if m != nil {
		return m.NodeId
	}
	return ""
}

func (m *L2FibL2TpDispInfo_KEYS) GetSessionId() uint32 {
	if m != nil {
		return m.SessionId
	}
	return 0
}

func (m *L2FibL2TpDispInfo_KEYS) GetTunnelId() uint32 {
	if m != nil {
		return m.TunnelId
	}
	return 0
}

type L2FibBaseInfo struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *L2FibBaseInfo) Reset()         { *m = L2FibBaseInfo{} }
func (m *L2FibBaseInfo) String() string { return proto.CompactTextString(m) }
func (*L2FibBaseInfo) ProtoMessage()    {}
func (*L2FibBaseInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_ee86639b28dadfff, []int{1}
}

func (m *L2FibBaseInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_L2FibBaseInfo.Unmarshal(m, b)
}
func (m *L2FibBaseInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_L2FibBaseInfo.Marshal(b, m, deterministic)
}
func (m *L2FibBaseInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_L2FibBaseInfo.Merge(m, src)
}
func (m *L2FibBaseInfo) XXX_Size() int {
	return xxx_messageInfo_L2FibBaseInfo.Size(m)
}
func (m *L2FibBaseInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_L2FibBaseInfo.DiscardUnknown(m)
}

var xxx_messageInfo_L2FibBaseInfo proto.InternalMessageInfo

type L2FibL2TpDispInfo struct {
	Base                 *L2FibBaseInfo `protobuf:"bytes,50,opt,name=base,proto3" json:"base,omitempty"`
	SessionIdXr          uint32         `protobuf:"varint,51,opt,name=session_id_xr,json=sessionIdXr,proto3" json:"session_id_xr,omitempty"`
	InterfaceHandle      string         `protobuf:"bytes,52,opt,name=interface_handle,json=interfaceHandle,proto3" json:"interface_handle,omitempty"`
	SubInterfaceName     string         `protobuf:"bytes,53,opt,name=sub_interface_name,json=subInterfaceName,proto3" json:"sub_interface_name,omitempty"`
	SourceAddress        string         `protobuf:"bytes,54,opt,name=source_address,json=sourceAddress,proto3" json:"source_address,omitempty"`
	Bound                bool           `protobuf:"varint,55,opt,name=bound,proto3" json:"bound,omitempty"`
	TunnelIdXr           uint32         `protobuf:"varint,56,opt,name=tunnel_id_xr,json=tunnelIdXr,proto3" json:"tunnel_id_xr,omitempty"`
	Ipv4TableId          uint32         `protobuf:"varint,57,opt,name=ipv4_table_id,json=ipv4TableId,proto3" json:"ipv4_table_id,omitempty"`
	Ipv6TableId          uint32         `protobuf:"varint,58,opt,name=ipv6_table_id,json=ipv6TableId,proto3" json:"ipv6_table_id,omitempty"`
	NhopIpAddr           string         `protobuf:"bytes,59,opt,name=nhop_ip_addr,json=nhopIpAddr,proto3" json:"nhop_ip_addr,omitempty"`
	SessionType          string         `protobuf:"bytes,60,opt,name=session_type,json=sessionType,proto3" json:"session_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *L2FibL2TpDispInfo) Reset()         { *m = L2FibL2TpDispInfo{} }
func (m *L2FibL2TpDispInfo) String() string { return proto.CompactTextString(m) }
func (*L2FibL2TpDispInfo) ProtoMessage()    {}
func (*L2FibL2TpDispInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_ee86639b28dadfff, []int{2}
}

func (m *L2FibL2TpDispInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_L2FibL2TpDispInfo.Unmarshal(m, b)
}
func (m *L2FibL2TpDispInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_L2FibL2TpDispInfo.Marshal(b, m, deterministic)
}
func (m *L2FibL2TpDispInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_L2FibL2TpDispInfo.Merge(m, src)
}
func (m *L2FibL2TpDispInfo) XXX_Size() int {
	return xxx_messageInfo_L2FibL2TpDispInfo.Size(m)
}
func (m *L2FibL2TpDispInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_L2FibL2TpDispInfo.DiscardUnknown(m)
}

var xxx_messageInfo_L2FibL2TpDispInfo proto.InternalMessageInfo

func (m *L2FibL2TpDispInfo) GetBase() *L2FibBaseInfo {
	if m != nil {
		return m.Base
	}
	return nil
}

func (m *L2FibL2TpDispInfo) GetSessionIdXr() uint32 {
	if m != nil {
		return m.SessionIdXr
	}
	return 0
}

func (m *L2FibL2TpDispInfo) GetInterfaceHandle() string {
	if m != nil {
		return m.InterfaceHandle
	}
	return ""
}

func (m *L2FibL2TpDispInfo) GetSubInterfaceName() string {
	if m != nil {
		return m.SubInterfaceName
	}
	return ""
}

func (m *L2FibL2TpDispInfo) GetSourceAddress() string {
	if m != nil {
		return m.SourceAddress
	}
	return ""
}

func (m *L2FibL2TpDispInfo) GetBound() bool {
	if m != nil {
		return m.Bound
	}
	return false
}

func (m *L2FibL2TpDispInfo) GetTunnelIdXr() uint32 {
	if m != nil {
		return m.TunnelIdXr
	}
	return 0
}

func (m *L2FibL2TpDispInfo) GetIpv4TableId() uint32 {
	if m != nil {
		return m.Ipv4TableId
	}
	return 0
}

func (m *L2FibL2TpDispInfo) GetIpv6TableId() uint32 {
	if m != nil {
		return m.Ipv6TableId
	}
	return 0
}

func (m *L2FibL2TpDispInfo) GetNhopIpAddr() string {
	if m != nil {
		return m.NhopIpAddr
	}
	return ""
}

func (m *L2FibL2TpDispInfo) GetSessionType() string {
	if m != nil {
		return m.SessionType
	}
	return ""
}

func init() {
	proto.RegisterType((*L2FibL2TpDispInfo_KEYS)(nil), "cisco_ios_xr_l2vpn_oper.l2vpn_forwarding.nodes.node.l2fib_l2tp.l2tpv2_sessions.l2tpv2_session.l2fib_l2tp_disp_info_KEYS")
	proto.RegisterType((*L2FibBaseInfo)(nil), "cisco_ios_xr_l2vpn_oper.l2vpn_forwarding.nodes.node.l2fib_l2tp.l2tpv2_sessions.l2tpv2_session.l2fib_base_info")
	proto.RegisterType((*L2FibL2TpDispInfo)(nil), "cisco_ios_xr_l2vpn_oper.l2vpn_forwarding.nodes.node.l2fib_l2tp.l2tpv2_sessions.l2tpv2_session.l2fib_l2tp_disp_info")
}

func init() { proto.RegisterFile("l2fib_l2tp_disp_info.proto", fileDescriptor_ee86639b28dadfff) }

var fileDescriptor_ee86639b28dadfff = []byte{
	// 422 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x92, 0xcf, 0x6b, 0xd5, 0x40,
	0x10, 0xc7, 0x89, 0xd6, 0xda, 0x37, 0x7d, 0xcf, 0xd6, 0xa5, 0xe0, 0xaa, 0x08, 0x31, 0x20, 0x44,
	0x90, 0x1c, 0xd2, 0xfa, 0xfc, 0x79, 0xf1, 0x20, 0x18, 0x04, 0x0f, 0xb1, 0x87, 0x7a, 0x90, 0x61,
	0x93, 0xdd, 0xd8, 0x85, 0x74, 0x77, 0xd9, 0x4d, 0x9e, 0xed, 0x55, 0xfc, 0xc3, 0x65, 0x37, 0x2f,
	0x09, 0x94, 0x77, 0xf5, 0xb2, 0x64, 0xbe, 0xf3, 0x61, 0xe6, 0x3b, 0x33, 0x81, 0x27, 0x6d, 0xde,
	0xc8, 0x0a, 0xdb, 0xbc, 0x33, 0xc8, 0xa5, 0x33, 0x28, 0x55, 0xa3, 0x33, 0x63, 0x75, 0xa7, 0xc9,
	0xcf, 0x5a, 0xba, 0x5a, 0xa3, 0xd4, 0x0e, 0xaf, 0x2d, 0xb6, 0xf9, 0xc6, 0x28, 0xd4, 0x46, 0xd8,
	0x6c, 0xf8, 0x6c, 0xb4, 0xfd, 0xcd, 0x2c, 0x97, 0xea, 0x57, 0xa6, 0x34, 0x17, 0x2e, 0xbc, 0xd9,
	0x5c, 0x2f, 0xf3, 0xcf, 0x26, 0x47, 0x27, 0x9c, 0x93, 0x5a, 0xb9, 0x5b, 0x71, 0x62, 0xe0, 0xf1,
	0xae, 0xe6, 0xf8, 0xf5, 0xf3, 0x8f, 0xef, 0xe4, 0x11, 0xdc, 0xf7, 0xe5, 0x50, 0x72, 0x1a, 0xc5,
	0x51, 0xba, 0x28, 0xf7, 0x7d, 0x58, 0x70, 0xf2, 0x0c, 0x60, 0x5b, 0xc0, 0xe7, 0xee, 0xc4, 0x51,
	0xba, 0x2a, 0x17, 0x5b, 0xa5, 0xe0, 0xe4, 0x29, 0x2c, 0xba, 0x5e, 0x29, 0xd1, 0xfa, 0xec, 0xdd,
	0x90, 0x3d, 0x18, 0x84, 0x82, 0x27, 0x0f, 0xe1, 0x68, 0xe8, 0x58, 0x31, 0x27, 0x42, 0xb3, 0xe4,
	0xef, 0x1e, 0x9c, 0xec, 0x72, 0x41, 0xfe, 0x44, 0xb0, 0xe7, 0x31, 0x9a, 0xc7, 0x51, 0x7a, 0x98,
	0xab, 0xec, 0xbf, 0x2e, 0x23, 0xbb, 0xe5, 0xab, 0x0c, 0xbd, 0x49, 0x02, 0xab, 0x79, 0x58, 0xbc,
	0xb6, 0xf4, 0x34, 0x4c, 0x74, 0x38, 0xcd, 0x7b, 0x61, 0xc9, 0x4b, 0x38, 0x96, 0xaa, 0x13, 0xb6,
	0x61, 0xb5, 0xc0, 0x4b, 0xa6, 0x78, 0x2b, 0xe8, 0x59, 0x58, 0xd9, 0xd1, 0xa4, 0x7f, 0x09, 0x32,
	0x79, 0x05, 0xc4, 0xf5, 0x15, 0xce, 0xb8, 0x62, 0x57, 0x82, 0xbe, 0x0e, 0xf0, 0xb1, 0xeb, 0xab,
	0x62, 0x4c, 0x7c, 0x63, 0x57, 0x82, 0xbc, 0x80, 0x07, 0x4e, 0xf7, 0xb6, 0x16, 0xc8, 0x38, 0xb7,
	0xc2, 0x39, 0xba, 0x0e, 0xe4, 0x6a, 0x50, 0x3f, 0x0d, 0x22, 0x39, 0x81, 0x7b, 0x95, 0xee, 0x15,
	0xa7, 0x6f, 0xe2, 0x28, 0x3d, 0x28, 0x87, 0x80, 0xc4, 0xb0, 0x9c, 0xee, 0xe0, 0x8d, 0xbf, 0x0d,
	0xc6, 0x61, 0x3c, 0xc5, 0x85, 0xf5, 0xb3, 0x49, 0xb3, 0x39, 0xc3, 0x8e, 0x55, 0x6d, 0xb8, 0xf3,
	0xbb, 0x61, 0x36, 0x2f, 0x9e, 0x7b, 0xad, 0xe0, 0x5b, 0x66, 0x3d, 0x33, 0xef, 0x27, 0x66, 0x3d,
	0x32, 0x31, 0x2c, 0xd5, 0xa5, 0x36, 0x28, 0x4d, 0xf0, 0x49, 0x3f, 0x04, 0x93, 0xe0, 0xb5, 0xc2,
	0x78, 0x93, 0xe4, 0x39, 0x2c, 0xc7, 0x2d, 0x76, 0x37, 0x46, 0xd0, 0x8f, 0x81, 0x18, 0x97, 0x78,
	0x7e, 0x63, 0x44, 0xb5, 0x1f, 0xfe, 0xf8, 0xd3, 0x7f, 0x01, 0x00, 0x00, 0xff, 0xff, 0x4a, 0xb1,
	0xc9, 0xf7, 0x0f, 0x03, 0x00, 0x00,
}
