/*
Copyright 2019 Cisco Systems

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: l2fib_xcon_info.proto

package cisco_ios_xr_l2vpn_oper_l2vpn_forwarding_nodes_node_l2fibx_con_l2tpv2s_l2fibx_con_l2tpv2

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type L2FibXconInfo_KEYS struct {
	NodeId               string   `protobuf:"bytes,1,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	InterfaceName        string   `protobuf:"bytes,2,opt,name=interface_name,json=interfaceName,proto3" json:"interface_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *L2FibXconInfo_KEYS) Reset()         { *m = L2FibXconInfo_KEYS{} }
func (m *L2FibXconInfo_KEYS) String() string { return proto.CompactTextString(m) }
func (*L2FibXconInfo_KEYS) ProtoMessage()    {}
func (*L2FibXconInfo_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_246c0372d5d8a0c8, []int{0}
}

func (m *L2FibXconInfo_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_L2FibXconInfo_KEYS.Unmarshal(m, b)
}
func (m *L2FibXconInfo_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_L2FibXconInfo_KEYS.Marshal(b, m, deterministic)
}
func (m *L2FibXconInfo_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_L2FibXconInfo_KEYS.Merge(m, src)
}
func (m *L2FibXconInfo_KEYS) XXX_Size() int {
	return xxx_messageInfo_L2FibXconInfo_KEYS.Size(m)
}
func (m *L2FibXconInfo_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_L2FibXconInfo_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_L2FibXconInfo_KEYS proto.InternalMessageInfo

func (m *L2FibXconInfo_KEYS) GetNodeId() string {
	if m != nil {
		return m.NodeId
	}
	return ""
}

func (m *L2FibXconInfo_KEYS) GetInterfaceName() string {
	if m != nil {
		return m.InterfaceName
	}
	return ""
}

type L2FibBaseInfo struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *L2FibBaseInfo) Reset()         { *m = L2FibBaseInfo{} }
func (m *L2FibBaseInfo) String() string { return proto.CompactTextString(m) }
func (*L2FibBaseInfo) ProtoMessage()    {}
func (*L2FibBaseInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_246c0372d5d8a0c8, []int{1}
}

func (m *L2FibBaseInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_L2FibBaseInfo.Unmarshal(m, b)
}
func (m *L2FibBaseInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_L2FibBaseInfo.Marshal(b, m, deterministic)
}
func (m *L2FibBaseInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_L2FibBaseInfo.Merge(m, src)
}
func (m *L2FibBaseInfo) XXX_Size() int {
	return xxx_messageInfo_L2FibBaseInfo.Size(m)
}
func (m *L2FibBaseInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_L2FibBaseInfo.DiscardUnknown(m)
}

var xxx_messageInfo_L2FibBaseInfo proto.InternalMessageInfo

type L2FibNhopInfo struct {
	Base                 *L2FibBaseInfo `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	NextHopAddress       string         `protobuf:"bytes,2,opt,name=next_hop_address,json=nextHopAddress,proto3" json:"next_hop_address,omitempty"`
	NextHopInternalLabel uint32         `protobuf:"varint,3,opt,name=next_hop_internal_label,json=nextHopInternalLabel,proto3" json:"next_hop_internal_label,omitempty"`
	PlaformtDataValid    bool           `protobuf:"varint,4,opt,name=plaformt_data_valid,json=plaformtDataValid,proto3" json:"plaformt_data_valid,omitempty"`
	PlatformDataLength   uint32         `protobuf:"varint,5,opt,name=platform_data_length,json=platformDataLength,proto3" json:"platform_data_length,omitempty"`
	ChildrenCount        uint32         `protobuf:"varint,6,opt,name=children_count,json=childrenCount,proto3" json:"children_count,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *L2FibNhopInfo) Reset()         { *m = L2FibNhopInfo{} }
func (m *L2FibNhopInfo) String() string { return proto.CompactTextString(m) }
func (*L2FibNhopInfo) ProtoMessage()    {}
func (*L2FibNhopInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_246c0372d5d8a0c8, []int{2}
}

func (m *L2FibNhopInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_L2FibNhopInfo.Unmarshal(m, b)
}
func (m *L2FibNhopInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_L2FibNhopInfo.Marshal(b, m, deterministic)
}
func (m *L2FibNhopInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_L2FibNhopInfo.Merge(m, src)
}
func (m *L2FibNhopInfo) XXX_Size() int {
	return xxx_messageInfo_L2FibNhopInfo.Size(m)
}
func (m *L2FibNhopInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_L2FibNhopInfo.DiscardUnknown(m)
}

var xxx_messageInfo_L2FibNhopInfo proto.InternalMessageInfo

func (m *L2FibNhopInfo) GetBase() *L2FibBaseInfo {
	if m != nil {
		return m.Base
	}
	return nil
}

func (m *L2FibNhopInfo) GetNextHopAddress() string {
	if m != nil {
		return m.NextHopAddress
	}
	return ""
}

func (m *L2FibNhopInfo) GetNextHopInternalLabel() uint32 {
	if m != nil {
		return m.NextHopInternalLabel
	}
	return 0
}

func (m *L2FibNhopInfo) GetPlaformtDataValid() bool {
	if m != nil {
		return m.PlaformtDataValid
	}
	return false
}

func (m *L2FibNhopInfo) GetPlatformDataLength() uint32 {
	if m != nil {
		return m.PlatformDataLength
	}
	return 0
}

func (m *L2FibNhopInfo) GetChildrenCount() uint32 {
	if m != nil {
		return m.ChildrenCount
	}
	return 0
}

type L2FibAcInfo struct {
	Base                 *L2FibBaseInfo `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	InterfaceHandle      string         `protobuf:"bytes,2,opt,name=interface_handle,json=interfaceHandle,proto3" json:"interface_handle,omitempty"`
	SubInterfaceHandle   string         `protobuf:"bytes,3,opt,name=sub_interface_handle,json=subInterfaceHandle,proto3" json:"sub_interface_handle,omitempty"`
	AttachmentCircuitId  uint32         `protobuf:"varint,4,opt,name=attachment_circuit_id,json=attachmentCircuitId,proto3" json:"attachment_circuit_id,omitempty"`
	AttachmentCircuitMtu uint32         `protobuf:"varint,5,opt,name=attachment_circuit_mtu,json=attachmentCircuitMtu,proto3" json:"attachment_circuit_mtu,omitempty"`
	Actype               uint32         `protobuf:"varint,6,opt,name=actype,proto3" json:"actype,omitempty"`
	InterWorkingMode     uint32         `protobuf:"varint,7,opt,name=inter_working_mode,json=interWorkingMode,proto3" json:"inter_working_mode,omitempty"`
	AdjacencyValid       bool           `protobuf:"varint,8,opt,name=adjacency_valid,json=adjacencyValid,proto3" json:"adjacency_valid,omitempty"`
	AdjacencyAddress     string         `protobuf:"bytes,9,opt,name=adjacency_address,json=adjacencyAddress,proto3" json:"adjacency_address,omitempty"`
	Bound                bool           `protobuf:"varint,10,opt,name=bound,proto3" json:"bound,omitempty"`
	IpInterWorkingMac    string         `protobuf:"bytes,11,opt,name=ip_inter_working_mac,json=ipInterWorkingMac,proto3" json:"ip_inter_working_mac,omitempty"`
	RedundancyGroupId    uint32         `protobuf:"varint,12,opt,name=redundancy_group_id,json=redundancyGroupId,proto3" json:"redundancy_group_id,omitempty"`
	RedundancyObjectId   uint64         `protobuf:"varint,13,opt,name=redundancy_object_id,json=redundancyObjectId,proto3" json:"redundancy_object_id,omitempty"`
	EvpnInternalLabel    uint32         `protobuf:"varint,14,opt,name=evpn_internal_label,json=evpnInternalLabel,proto3" json:"evpn_internal_label,omitempty"`
	FxcNextHopValid      bool           `protobuf:"varint,15,opt,name=fxc_next_hop_valid,json=fxcNextHopValid,proto3" json:"fxc_next_hop_valid,omitempty"`
	FxcNextHop           *L2FibNhopInfo `protobuf:"bytes,16,opt,name=fxc_next_hop,json=fxcNextHop,proto3" json:"fxc_next_hop,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *L2FibAcInfo) Reset()         { *m = L2FibAcInfo{} }
func (m *L2FibAcInfo) String() string { return proto.CompactTextString(m) }
func (*L2FibAcInfo) ProtoMessage()    {}
func (*L2FibAcInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_246c0372d5d8a0c8, []int{3}
}

func (m *L2FibAcInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_L2FibAcInfo.Unmarshal(m, b)
}
func (m *L2FibAcInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_L2FibAcInfo.Marshal(b, m, deterministic)
}
func (m *L2FibAcInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_L2FibAcInfo.Merge(m, src)
}
func (m *L2FibAcInfo) XXX_Size() int {
	return xxx_messageInfo_L2FibAcInfo.Size(m)
}
func (m *L2FibAcInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_L2FibAcInfo.DiscardUnknown(m)
}

var xxx_messageInfo_L2FibAcInfo proto.InternalMessageInfo

func (m *L2FibAcInfo) GetBase() *L2FibBaseInfo {
	if m != nil {
		return m.Base
	}
	return nil
}

func (m *L2FibAcInfo) GetInterfaceHandle() string {
	if m != nil {
		return m.InterfaceHandle
	}
	return ""
}

func (m *L2FibAcInfo) GetSubInterfaceHandle() string {
	if m != nil {
		return m.SubInterfaceHandle
	}
	return ""
}

func (m *L2FibAcInfo) GetAttachmentCircuitId() uint32 {
	if m != nil {
		return m.AttachmentCircuitId
	}
	return 0
}

func (m *L2FibAcInfo) GetAttachmentCircuitMtu() uint32 {
	if m != nil {
		return m.AttachmentCircuitMtu
	}
	return 0
}

func (m *L2FibAcInfo) GetActype() uint32 {
	if m != nil {
		return m.Actype
	}
	return 0
}

func (m *L2FibAcInfo) GetInterWorkingMode() uint32 {
	if m != nil {
		return m.InterWorkingMode
	}
	return 0
}

func (m *L2FibAcInfo) GetAdjacencyValid() bool {
	if m != nil {
		return m.AdjacencyValid
	}
	return false
}

func (m *L2FibAcInfo) GetAdjacencyAddress() string {
	if m != nil {
		return m.AdjacencyAddress
	}
	return ""
}

func (m *L2FibAcInfo) GetBound() bool {
	if m != nil {
		return m.Bound
	}
	return false
}

func (m *L2FibAcInfo) GetIpInterWorkingMac() string {
	if m != nil {
		return m.IpInterWorkingMac
	}
	return ""
}

func (m *L2FibAcInfo) GetRedundancyGroupId() uint32 {
	if m != nil {
		return m.RedundancyGroupId
	}
	return 0
}

func (m *L2FibAcInfo) GetRedundancyObjectId() uint64 {
	if m != nil {
		return m.RedundancyObjectId
	}
	return 0
}

func (m *L2FibAcInfo) GetEvpnInternalLabel() uint32 {
	if m != nil {
		return m.EvpnInternalLabel
	}
	return 0
}

func (m *L2FibAcInfo) GetFxcNextHopValid() bool {
	if m != nil {
		return m.FxcNextHopValid
	}
	return false
}

func (m *L2FibAcInfo) GetFxcNextHop() *L2FibNhopInfo {
	if m != nil {
		return m.FxcNextHop
	}
	return nil
}

type L2FibPbbEdgeInfo struct {
	MacConfigured        bool     `protobuf:"varint,1,opt,name=mac_configured,json=macConfigured,proto3" json:"mac_configured,omitempty"`
	Mac                  string   `protobuf:"bytes,2,opt,name=mac,proto3" json:"mac,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *L2FibPbbEdgeInfo) Reset()         { *m = L2FibPbbEdgeInfo{} }
func (m *L2FibPbbEdgeInfo) String() string { return proto.CompactTextString(m) }
func (*L2FibPbbEdgeInfo) ProtoMessage()    {}
func (*L2FibPbbEdgeInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_246c0372d5d8a0c8, []int{4}
}

func (m *L2FibPbbEdgeInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_L2FibPbbEdgeInfo.Unmarshal(m, b)
}
func (m *L2FibPbbEdgeInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_L2FibPbbEdgeInfo.Marshal(b, m, deterministic)
}
func (m *L2FibPbbEdgeInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_L2FibPbbEdgeInfo.Merge(m, src)
}
func (m *L2FibPbbEdgeInfo) XXX_Size() int {
	return xxx_messageInfo_L2FibPbbEdgeInfo.Size(m)
}
func (m *L2FibPbbEdgeInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_L2FibPbbEdgeInfo.DiscardUnknown(m)
}

var xxx_messageInfo_L2FibPbbEdgeInfo proto.InternalMessageInfo

func (m *L2FibPbbEdgeInfo) GetMacConfigured() bool {
	if m != nil {
		return m.MacConfigured
	}
	return false
}

func (m *L2FibPbbEdgeInfo) GetMac() string {
	if m != nil {
		return m.Mac
	}
	return ""
}

type L2FibPbbCoreInfo struct {
	VlanId               uint32   `protobuf:"varint,1,opt,name=vlan_id,json=vlanId,proto3" json:"vlan_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *L2FibPbbCoreInfo) Reset()         { *m = L2FibPbbCoreInfo{} }
func (m *L2FibPbbCoreInfo) String() string { return proto.CompactTextString(m) }
func (*L2FibPbbCoreInfo) ProtoMessage()    {}
func (*L2FibPbbCoreInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_246c0372d5d8a0c8, []int{5}
}

func (m *L2FibPbbCoreInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_L2FibPbbCoreInfo.Unmarshal(m, b)
}
func (m *L2FibPbbCoreInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_L2FibPbbCoreInfo.Marshal(b, m, deterministic)
}
func (m *L2FibPbbCoreInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_L2FibPbbCoreInfo.Merge(m, src)
}
func (m *L2FibPbbCoreInfo) XXX_Size() int {
	return xxx_messageInfo_L2FibPbbCoreInfo.Size(m)
}
func (m *L2FibPbbCoreInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_L2FibPbbCoreInfo.DiscardUnknown(m)
}

var xxx_messageInfo_L2FibPbbCoreInfo proto.InternalMessageInfo

func (m *L2FibPbbCoreInfo) GetVlanId() uint32 {
	if m != nil {
		return m.VlanId
	}
	return 0
}

type L2FibPbbUn struct {
	PbbType              string            `protobuf:"bytes,1,opt,name=pbb_type,json=pbbType,proto3" json:"pbb_type,omitempty"`
	Edge                 *L2FibPbbEdgeInfo `protobuf:"bytes,2,opt,name=edge,proto3" json:"edge,omitempty"`
	Core                 *L2FibPbbCoreInfo `protobuf:"bytes,3,opt,name=core,proto3" json:"core,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *L2FibPbbUn) Reset()         { *m = L2FibPbbUn{} }
func (m *L2FibPbbUn) String() string { return proto.CompactTextString(m) }
func (*L2FibPbbUn) ProtoMessage()    {}
func (*L2FibPbbUn) Descriptor() ([]byte, []int) {
	return fileDescriptor_246c0372d5d8a0c8, []int{6}
}

func (m *L2FibPbbUn) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_L2FibPbbUn.Unmarshal(m, b)
}
func (m *L2FibPbbUn) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_L2FibPbbUn.Marshal(b, m, deterministic)
}
func (m *L2FibPbbUn) XXX_Merge(src proto.Message) {
	xxx_messageInfo_L2FibPbbUn.Merge(m, src)
}
func (m *L2FibPbbUn) XXX_Size() int {
	return xxx_messageInfo_L2FibPbbUn.Size(m)
}
func (m *L2FibPbbUn) XXX_DiscardUnknown() {
	xxx_messageInfo_L2FibPbbUn.DiscardUnknown(m)
}

var xxx_messageInfo_L2FibPbbUn proto.InternalMessageInfo

func (m *L2FibPbbUn) GetPbbType() string {
	if m != nil {
		return m.PbbType
	}
	return ""
}

func (m *L2FibPbbUn) GetEdge() *L2FibPbbEdgeInfo {
	if m != nil {
		return m.Edge
	}
	return nil
}

func (m *L2FibPbbUn) GetCore() *L2FibPbbCoreInfo {
	if m != nil {
		return m.Core
	}
	return nil
}

type L2FibPbbInfo struct {
	Base                 *L2FibBaseInfo `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	Bound                bool           `protobuf:"varint,2,opt,name=bound,proto3" json:"bound,omitempty"`
	PbbUnion             *L2FibPbbUn    `protobuf:"bytes,3,opt,name=pbb_union,json=pbbUnion,proto3" json:"pbb_union,omitempty"`
	ForwardClass         uint32         `protobuf:"varint,4,opt,name=forward_class,json=forwardClass,proto3" json:"forward_class,omitempty"`
	CorePbbEvpnEnabled   bool           `protobuf:"varint,5,opt,name=core_pbb_evpn_enabled,json=corePbbEvpnEnabled,proto3" json:"core_pbb_evpn_enabled,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *L2FibPbbInfo) Reset()         { *m = L2FibPbbInfo{} }
func (m *L2FibPbbInfo) String() string { return proto.CompactTextString(m) }
func (*L2FibPbbInfo) ProtoMessage()    {}
func (*L2FibPbbInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_246c0372d5d8a0c8, []int{7}
}

func (m *L2FibPbbInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_L2FibPbbInfo.Unmarshal(m, b)
}
func (m *L2FibPbbInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_L2FibPbbInfo.Marshal(b, m, deterministic)
}
func (m *L2FibPbbInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_L2FibPbbInfo.Merge(m, src)
}
func (m *L2FibPbbInfo) XXX_Size() int {
	return xxx_messageInfo_L2FibPbbInfo.Size(m)
}
func (m *L2FibPbbInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_L2FibPbbInfo.DiscardUnknown(m)
}

var xxx_messageInfo_L2FibPbbInfo proto.InternalMessageInfo

func (m *L2FibPbbInfo) GetBase() *L2FibBaseInfo {
	if m != nil {
		return m.Base
	}
	return nil
}

func (m *L2FibPbbInfo) GetBound() bool {
	if m != nil {
		return m.Bound
	}
	return false
}

func (m *L2FibPbbInfo) GetPbbUnion() *L2FibPbbUn {
	if m != nil {
		return m.PbbUnion
	}
	return nil
}

func (m *L2FibPbbInfo) GetForwardClass() uint32 {
	if m != nil {
		return m.ForwardClass
	}
	return 0
}

func (m *L2FibPbbInfo) GetCorePbbEvpnEnabled() bool {
	if m != nil {
		return m.CorePbbEvpnEnabled
	}
	return false
}

type L2FibVniInfo struct {
	Base                 *L2FibBaseInfo `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	Srcip                string         `protobuf:"bytes,2,opt,name=srcip,proto3" json:"srcip,omitempty"`
	Mcastip              string         `protobuf:"bytes,3,opt,name=mcastip,proto3" json:"mcastip,omitempty"`
	Bound                bool           `protobuf:"varint,4,opt,name=bound,proto3" json:"bound,omitempty"`
	ParentIf             string         `protobuf:"bytes,5,opt,name=parent_if,json=parentIf,proto3" json:"parent_if,omitempty"`
	Encap                uint32         `protobuf:"varint,6,opt,name=encap,proto3" json:"encap,omitempty"`
	UdpPort              uint32         `protobuf:"varint,7,opt,name=udp_port,json=udpPort,proto3" json:"udp_port,omitempty"`
	SourceVtepIf         string         `protobuf:"bytes,8,opt,name=source_vtep_if,json=sourceVtepIf,proto3" json:"source_vtep_if,omitempty"`
	AnyCastIp            string         `protobuf:"bytes,9,opt,name=any_cast_ip,json=anyCastIp,proto3" json:"any_cast_ip,omitempty"`
	AnycastMcastIp       string         `protobuf:"bytes,10,opt,name=anycast_mcast_ip,json=anycastMcastIp,proto3" json:"anycast_mcast_ip,omitempty"`
	VxLanMode            uint32         `protobuf:"varint,11,opt,name=vx_lan_mode,json=vxLanMode,proto3" json:"vx_lan_mode,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *L2FibVniInfo) Reset()         { *m = L2FibVniInfo{} }
func (m *L2FibVniInfo) String() string { return proto.CompactTextString(m) }
func (*L2FibVniInfo) ProtoMessage()    {}
func (*L2FibVniInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_246c0372d5d8a0c8, []int{8}
}

func (m *L2FibVniInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_L2FibVniInfo.Unmarshal(m, b)
}
func (m *L2FibVniInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_L2FibVniInfo.Marshal(b, m, deterministic)
}
func (m *L2FibVniInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_L2FibVniInfo.Merge(m, src)
}
func (m *L2FibVniInfo) XXX_Size() int {
	return xxx_messageInfo_L2FibVniInfo.Size(m)
}
func (m *L2FibVniInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_L2FibVniInfo.DiscardUnknown(m)
}

var xxx_messageInfo_L2FibVniInfo proto.InternalMessageInfo

func (m *L2FibVniInfo) GetBase() *L2FibBaseInfo {
	if m != nil {
		return m.Base
	}
	return nil
}

func (m *L2FibVniInfo) GetSrcip() string {
	if m != nil {
		return m.Srcip
	}
	return ""
}

func (m *L2FibVniInfo) GetMcastip() string {
	if m != nil {
		return m.Mcastip
	}
	return ""
}

func (m *L2FibVniInfo) GetBound() bool {
	if m != nil {
		return m.Bound
	}
	return false
}

func (m *L2FibVniInfo) GetParentIf() string {
	if m != nil {
		return m.ParentIf
	}
	return ""
}

func (m *L2FibVniInfo) GetEncap() uint32 {
	if m != nil {
		return m.Encap
	}
	return 0
}

func (m *L2FibVniInfo) GetUdpPort() uint32 {
	if m != nil {
		return m.UdpPort
	}
	return 0
}

func (m *L2FibVniInfo) GetSourceVtepIf() string {
	if m != nil {
		return m.SourceVtepIf
	}
	return ""
}

func (m *L2FibVniInfo) GetAnyCastIp() string {
	if m != nil {
		return m.AnyCastIp
	}
	return ""
}

func (m *L2FibVniInfo) GetAnycastMcastIp() string {
	if m != nil {
		return m.AnycastMcastIp
	}
	return ""
}

func (m *L2FibVniInfo) GetVxLanMode() uint32 {
	if m != nil {
		return m.VxLanMode
	}
	return 0
}

type L2FibEvpnInfo struct {
	Base                 *L2FibBaseInfo `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	Bound                bool           `protobuf:"varint,2,opt,name=bound,proto3" json:"bound,omitempty"`
	Evi                  uint32         `protobuf:"varint,3,opt,name=evi,proto3" json:"evi,omitempty"`
	ForwardClass         uint32         `protobuf:"varint,4,opt,name=forward_class,json=forwardClass,proto3" json:"forward_class,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *L2FibEvpnInfo) Reset()         { *m = L2FibEvpnInfo{} }
func (m *L2FibEvpnInfo) String() string { return proto.CompactTextString(m) }
func (*L2FibEvpnInfo) ProtoMessage()    {}
func (*L2FibEvpnInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_246c0372d5d8a0c8, []int{9}
}

func (m *L2FibEvpnInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_L2FibEvpnInfo.Unmarshal(m, b)
}
func (m *L2FibEvpnInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_L2FibEvpnInfo.Marshal(b, m, deterministic)
}
func (m *L2FibEvpnInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_L2FibEvpnInfo.Merge(m, src)
}
func (m *L2FibEvpnInfo) XXX_Size() int {
	return xxx_messageInfo_L2FibEvpnInfo.Size(m)
}
func (m *L2FibEvpnInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_L2FibEvpnInfo.DiscardUnknown(m)
}

var xxx_messageInfo_L2FibEvpnInfo proto.InternalMessageInfo

func (m *L2FibEvpnInfo) GetBase() *L2FibBaseInfo {
	if m != nil {
		return m.Base
	}
	return nil
}

func (m *L2FibEvpnInfo) GetBound() bool {
	if m != nil {
		return m.Bound
	}
	return false
}

func (m *L2FibEvpnInfo) GetEvi() uint32 {
	if m != nil {
		return m.Evi
	}
	return 0
}

func (m *L2FibEvpnInfo) GetForwardClass() uint32 {
	if m != nil {
		return m.ForwardClass
	}
	return 0
}

type L2FibMonitorSessionInfo struct {
	Base                 *L2FibBaseInfo `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	Xcid                 uint32         `protobuf:"varint,2,opt,name=xcid,proto3" json:"xcid,omitempty"`
	SessionName          string         `protobuf:"bytes,3,opt,name=session_name,json=sessionName,proto3" json:"session_name,omitempty"`
	HardwareInformation  []byte         `protobuf:"bytes,4,opt,name=hardware_information,json=hardwareInformation,proto3" json:"hardware_information,omitempty"`
	Bound                bool           `protobuf:"varint,5,opt,name=bound,proto3" json:"bound,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *L2FibMonitorSessionInfo) Reset()         { *m = L2FibMonitorSessionInfo{} }
func (m *L2FibMonitorSessionInfo) String() string { return proto.CompactTextString(m) }
func (*L2FibMonitorSessionInfo) ProtoMessage()    {}
func (*L2FibMonitorSessionInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_246c0372d5d8a0c8, []int{10}
}

func (m *L2FibMonitorSessionInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_L2FibMonitorSessionInfo.Unmarshal(m, b)
}
func (m *L2FibMonitorSessionInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_L2FibMonitorSessionInfo.Marshal(b, m, deterministic)
}
func (m *L2FibMonitorSessionInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_L2FibMonitorSessionInfo.Merge(m, src)
}
func (m *L2FibMonitorSessionInfo) XXX_Size() int {
	return xxx_messageInfo_L2FibMonitorSessionInfo.Size(m)
}
func (m *L2FibMonitorSessionInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_L2FibMonitorSessionInfo.DiscardUnknown(m)
}

var xxx_messageInfo_L2FibMonitorSessionInfo proto.InternalMessageInfo

func (m *L2FibMonitorSessionInfo) GetBase() *L2FibBaseInfo {
	if m != nil {
		return m.Base
	}
	return nil
}

func (m *L2FibMonitorSessionInfo) GetXcid() uint32 {
	if m != nil {
		return m.Xcid
	}
	return 0
}

func (m *L2FibMonitorSessionInfo) GetSessionName() string {
	if m != nil {
		return m.SessionName
	}
	return ""
}

func (m *L2FibMonitorSessionInfo) GetHardwareInformation() []byte {
	if m != nil {
		return m.HardwareInformation
	}
	return nil
}

func (m *L2FibMonitorSessionInfo) GetBound() bool {
	if m != nil {
		return m.Bound
	}
	return false
}

type L2FibPwMplsInfo struct {
	PwLabel              uint32   `protobuf:"varint,1,opt,name=pw_label,json=pwLabel,proto3" json:"pw_label,omitempty"`
	PwLocalLabel         uint32   `protobuf:"varint,2,opt,name=pw_local_label,json=pwLocalLabel,proto3" json:"pw_local_label,omitempty"`
	PwTunnelInterface    uint32   `protobuf:"varint,3,opt,name=pw_tunnel_interface,json=pwTunnelInterface,proto3" json:"pw_tunnel_interface,omitempty"`
	PwXcid               uint32   `protobuf:"varint,4,opt,name=pw_xcid,json=pwXcid,proto3" json:"pw_xcid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *L2FibPwMplsInfo) Reset()         { *m = L2FibPwMplsInfo{} }
func (m *L2FibPwMplsInfo) String() string { return proto.CompactTextString(m) }
func (*L2FibPwMplsInfo) ProtoMessage()    {}
func (*L2FibPwMplsInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_246c0372d5d8a0c8, []int{11}
}

func (m *L2FibPwMplsInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_L2FibPwMplsInfo.Unmarshal(m, b)
}
func (m *L2FibPwMplsInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_L2FibPwMplsInfo.Marshal(b, m, deterministic)
}
func (m *L2FibPwMplsInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_L2FibPwMplsInfo.Merge(m, src)
}
func (m *L2FibPwMplsInfo) XXX_Size() int {
	return xxx_messageInfo_L2FibPwMplsInfo.Size(m)
}
func (m *L2FibPwMplsInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_L2FibPwMplsInfo.DiscardUnknown(m)
}

var xxx_messageInfo_L2FibPwMplsInfo proto.InternalMessageInfo

func (m *L2FibPwMplsInfo) GetPwLabel() uint32 {
	if m != nil {
		return m.PwLabel
	}
	return 0
}

func (m *L2FibPwMplsInfo) GetPwLocalLabel() uint32 {
	if m != nil {
		return m.PwLocalLabel
	}
	return 0
}

func (m *L2FibPwMplsInfo) GetPwTunnelInterface() uint32 {
	if m != nil {
		return m.PwTunnelInterface
	}
	return 0
}

func (m *L2FibPwMplsInfo) GetPwXcid() uint32 {
	if m != nil {
		return m.PwXcid
	}
	return 0
}

type L2FibPwL2TpSessInfo struct {
	SessionId            uint32   `protobuf:"varint,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	CookieSize           uint32   `protobuf:"varint,2,opt,name=cookie_size,json=cookieSize,proto3" json:"cookie_size,omitempty"`
	CookieLowValue       uint32   `protobuf:"varint,3,opt,name=cookie_low_value,json=cookieLowValue,proto3" json:"cookie_low_value,omitempty"`
	CookieHighValue      uint32   `protobuf:"varint,4,opt,name=cookie_high_value,json=cookieHighValue,proto3" json:"cookie_high_value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *L2FibPwL2TpSessInfo) Reset()         { *m = L2FibPwL2TpSessInfo{} }
func (m *L2FibPwL2TpSessInfo) String() string { return proto.CompactTextString(m) }
func (*L2FibPwL2TpSessInfo) ProtoMessage()    {}
func (*L2FibPwL2TpSessInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_246c0372d5d8a0c8, []int{12}
}

func (m *L2FibPwL2TpSessInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_L2FibPwL2TpSessInfo.Unmarshal(m, b)
}
func (m *L2FibPwL2TpSessInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_L2FibPwL2TpSessInfo.Marshal(b, m, deterministic)
}
func (m *L2FibPwL2TpSessInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_L2FibPwL2TpSessInfo.Merge(m, src)
}
func (m *L2FibPwL2TpSessInfo) XXX_Size() int {
	return xxx_messageInfo_L2FibPwL2TpSessInfo.Size(m)
}
func (m *L2FibPwL2TpSessInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_L2FibPwL2TpSessInfo.DiscardUnknown(m)
}

var xxx_messageInfo_L2FibPwL2TpSessInfo proto.InternalMessageInfo

func (m *L2FibPwL2TpSessInfo) GetSessionId() uint32 {
	if m != nil {
		return m.SessionId
	}
	return 0
}

func (m *L2FibPwL2TpSessInfo) GetCookieSize() uint32 {
	if m != nil {
		return m.CookieSize
	}
	return 0
}

func (m *L2FibPwL2TpSessInfo) GetCookieLowValue() uint32 {
	if m != nil {
		return m.CookieLowValue
	}
	return 0
}

func (m *L2FibPwL2TpSessInfo) GetCookieHighValue() uint32 {
	if m != nil {
		return m.CookieHighValue
	}
	return 0
}

type L2FibPwL2TpInfo struct {
	Local                  *L2FibPwL2TpSessInfo `protobuf:"bytes,1,opt,name=local,proto3" json:"local,omitempty"`
	Remote                 *L2FibPwL2TpSessInfo `protobuf:"bytes,2,opt,name=remote,proto3" json:"remote,omitempty"`
	TosVal                 uint32               `protobuf:"varint,3,opt,name=tos_val,json=tosVal,proto3" json:"tos_val,omitempty"`
	Ttl                    uint32               `protobuf:"varint,4,opt,name=ttl,proto3" json:"ttl,omitempty"`
	PathMtu                uint32               `protobuf:"varint,5,opt,name=path_mtu,json=pathMtu,proto3" json:"path_mtu,omitempty"`
	SequenceNumberSent     uint32               `protobuf:"varint,6,opt,name=sequence_number_sent,json=sequenceNumberSent,proto3" json:"sequence_number_sent,omitempty"`
	SequenceNumberExpected uint32               `protobuf:"varint,7,opt,name=sequence_number_expected,json=sequenceNumberExpected,proto3" json:"sequence_number_expected,omitempty"`
	XXX_NoUnkeyedLiteral   struct{}             `json:"-"`
	XXX_unrecognized       []byte               `json:"-"`
	XXX_sizecache          int32                `json:"-"`
}

func (m *L2FibPwL2TpInfo) Reset()         { *m = L2FibPwL2TpInfo{} }
func (m *L2FibPwL2TpInfo) String() string { return proto.CompactTextString(m) }
func (*L2FibPwL2TpInfo) ProtoMessage()    {}
func (*L2FibPwL2TpInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_246c0372d5d8a0c8, []int{13}
}

func (m *L2FibPwL2TpInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_L2FibPwL2TpInfo.Unmarshal(m, b)
}
func (m *L2FibPwL2TpInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_L2FibPwL2TpInfo.Marshal(b, m, deterministic)
}
func (m *L2FibPwL2TpInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_L2FibPwL2TpInfo.Merge(m, src)
}
func (m *L2FibPwL2TpInfo) XXX_Size() int {
	return xxx_messageInfo_L2FibPwL2TpInfo.Size(m)
}
func (m *L2FibPwL2TpInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_L2FibPwL2TpInfo.DiscardUnknown(m)
}

var xxx_messageInfo_L2FibPwL2TpInfo proto.InternalMessageInfo

func (m *L2FibPwL2TpInfo) GetLocal() *L2FibPwL2TpSessInfo {
	if m != nil {
		return m.Local
	}
	return nil
}

func (m *L2FibPwL2TpInfo) GetRemote() *L2FibPwL2TpSessInfo {
	if m != nil {
		return m.Remote
	}
	return nil
}

func (m *L2FibPwL2TpInfo) GetTosVal() uint32 {
	if m != nil {
		return m.TosVal
	}
	return 0
}

func (m *L2FibPwL2TpInfo) GetTtl() uint32 {
	if m != nil {
		return m.Ttl
	}
	return 0
}

func (m *L2FibPwL2TpInfo) GetPathMtu() uint32 {
	if m != nil {
		return m.PathMtu
	}
	return 0
}

func (m *L2FibPwL2TpInfo) GetSequenceNumberSent() uint32 {
	if m != nil {
		return m.SequenceNumberSent
	}
	return 0
}

func (m *L2FibPwL2TpInfo) GetSequenceNumberExpected() uint32 {
	if m != nil {
		return m.SequenceNumberExpected
	}
	return 0
}

type L2FibPwL2Tpv2SessInfo struct {
	SessionId            uint32   `protobuf:"varint,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	TunnelId             uint32   `protobuf:"varint,2,opt,name=tunnel_id,json=tunnelId,proto3" json:"tunnel_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *L2FibPwL2Tpv2SessInfo) Reset()         { *m = L2FibPwL2Tpv2SessInfo{} }
func (m *L2FibPwL2Tpv2SessInfo) String() string { return proto.CompactTextString(m) }
func (*L2FibPwL2Tpv2SessInfo) ProtoMessage()    {}
func (*L2FibPwL2Tpv2SessInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_246c0372d5d8a0c8, []int{14}
}

func (m *L2FibPwL2Tpv2SessInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_L2FibPwL2Tpv2SessInfo.Unmarshal(m, b)
}
func (m *L2FibPwL2Tpv2SessInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_L2FibPwL2Tpv2SessInfo.Marshal(b, m, deterministic)
}
func (m *L2FibPwL2Tpv2SessInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_L2FibPwL2Tpv2SessInfo.Merge(m, src)
}
func (m *L2FibPwL2Tpv2SessInfo) XXX_Size() int {
	return xxx_messageInfo_L2FibPwL2Tpv2SessInfo.Size(m)
}
func (m *L2FibPwL2Tpv2SessInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_L2FibPwL2Tpv2SessInfo.DiscardUnknown(m)
}

var xxx_messageInfo_L2FibPwL2Tpv2SessInfo proto.InternalMessageInfo

func (m *L2FibPwL2Tpv2SessInfo) GetSessionId() uint32 {
	if m != nil {
		return m.SessionId
	}
	return 0
}

func (m *L2FibPwL2Tpv2SessInfo) GetTunnelId() uint32 {
	if m != nil {
		return m.TunnelId
	}
	return 0
}

type L2FibPwL2Tpv2Info struct {
	Local                *L2FibPwL2Tpv2SessInfo `protobuf:"bytes,1,opt,name=local,proto3" json:"local,omitempty"`
	Remote               *L2FibPwL2Tpv2SessInfo `protobuf:"bytes,2,opt,name=remote,proto3" json:"remote,omitempty"`
	PwFlags              uint32                 `protobuf:"varint,3,opt,name=pw_flags,json=pwFlags,proto3" json:"pw_flags,omitempty"`
	TosVal               uint32                 `protobuf:"varint,4,opt,name=tos_val,json=tosVal,proto3" json:"tos_val,omitempty"`
	Ttl                  uint32                 `protobuf:"varint,5,opt,name=ttl,proto3" json:"ttl,omitempty"`
	PathMtu              uint32                 `protobuf:"varint,6,opt,name=path_mtu,json=pathMtu,proto3" json:"path_mtu,omitempty"`
	Protocol             uint32                 `protobuf:"varint,7,opt,name=protocol,proto3" json:"protocol,omitempty"`
	RemUdpPort           uint32                 `protobuf:"varint,8,opt,name=rem_udp_port,json=remUdpPort,proto3" json:"rem_udp_port,omitempty"`
	XconnectId           uint32                 `protobuf:"varint,9,opt,name=xconnect_id,json=xconnectId,proto3" json:"xconnect_id,omitempty"`
	NextHopAddress       string                 `protobuf:"bytes,10,opt,name=next_hop_address,json=nextHopAddress,proto3" json:"next_hop_address,omitempty"`
	SourceAddress        string                 `protobuf:"bytes,11,opt,name=source_address,json=sourceAddress,proto3" json:"source_address,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *L2FibPwL2Tpv2Info) Reset()         { *m = L2FibPwL2Tpv2Info{} }
func (m *L2FibPwL2Tpv2Info) String() string { return proto.CompactTextString(m) }
func (*L2FibPwL2Tpv2Info) ProtoMessage()    {}
func (*L2FibPwL2Tpv2Info) Descriptor() ([]byte, []int) {
	return fileDescriptor_246c0372d5d8a0c8, []int{15}
}

func (m *L2FibPwL2Tpv2Info) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_L2FibPwL2Tpv2Info.Unmarshal(m, b)
}
func (m *L2FibPwL2Tpv2Info) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_L2FibPwL2Tpv2Info.Marshal(b, m, deterministic)
}
func (m *L2FibPwL2Tpv2Info) XXX_Merge(src proto.Message) {
	xxx_messageInfo_L2FibPwL2Tpv2Info.Merge(m, src)
}
func (m *L2FibPwL2Tpv2Info) XXX_Size() int {
	return xxx_messageInfo_L2FibPwL2Tpv2Info.Size(m)
}
func (m *L2FibPwL2Tpv2Info) XXX_DiscardUnknown() {
	xxx_messageInfo_L2FibPwL2Tpv2Info.DiscardUnknown(m)
}

var xxx_messageInfo_L2FibPwL2Tpv2Info proto.InternalMessageInfo

func (m *L2FibPwL2Tpv2Info) GetLocal() *L2FibPwL2Tpv2SessInfo {
	if m != nil {
		return m.Local
	}
	return nil
}

func (m *L2FibPwL2Tpv2Info) GetRemote() *L2FibPwL2Tpv2SessInfo {
	if m != nil {
		return m.Remote
	}
	return nil
}

func (m *L2FibPwL2Tpv2Info) GetPwFlags() uint32 {
	if m != nil {
		return m.PwFlags
	}
	return 0
}

func (m *L2FibPwL2Tpv2Info) GetTosVal() uint32 {
	if m != nil {
		return m.TosVal
	}
	return 0
}

func (m *L2FibPwL2Tpv2Info) GetTtl() uint32 {
	if m != nil {
		return m.Ttl
	}
	return 0
}

func (m *L2FibPwL2Tpv2Info) GetPathMtu() uint32 {
	if m != nil {
		return m.PathMtu
	}
	return 0
}

func (m *L2FibPwL2Tpv2Info) GetProtocol() uint32 {
	if m != nil {
		return m.Protocol
	}
	return 0
}

func (m *L2FibPwL2Tpv2Info) GetRemUdpPort() uint32 {
	if m != nil {
		return m.RemUdpPort
	}
	return 0
}

func (m *L2FibPwL2Tpv2Info) GetXconnectId() uint32 {
	if m != nil {
		return m.XconnectId
	}
	return 0
}

func (m *L2FibPwL2Tpv2Info) GetNextHopAddress() string {
	if m != nil {
		return m.NextHopAddress
	}
	return ""
}

func (m *L2FibPwL2Tpv2Info) GetSourceAddress() string {
	if m != nil {
		return m.SourceAddress
	}
	return ""
}

type L2FibPwL2TpIpv6TsSessInfo struct {
	CookieSize               uint32   `protobuf:"varint,1,opt,name=cookie_size,json=cookieSize,proto3" json:"cookie_size,omitempty"`
	CookieLowValue           uint32   `protobuf:"varint,2,opt,name=cookie_low_value,json=cookieLowValue,proto3" json:"cookie_low_value,omitempty"`
	CookieHighValue          uint32   `protobuf:"varint,3,opt,name=cookie_high_value,json=cookieHighValue,proto3" json:"cookie_high_value,omitempty"`
	SecondaryCookieSize      uint32   `protobuf:"varint,4,opt,name=secondary_cookie_size,json=secondaryCookieSize,proto3" json:"secondary_cookie_size,omitempty"`
	SecondaryCookieLowValue  uint32   `protobuf:"varint,5,opt,name=secondary_cookie_low_value,json=secondaryCookieLowValue,proto3" json:"secondary_cookie_low_value,omitempty"`
	SecondaryCookieHighValue uint32   `protobuf:"varint,6,opt,name=secondary_cookie_high_value,json=secondaryCookieHighValue,proto3" json:"secondary_cookie_high_value,omitempty"`
	SessionId                uint32   `protobuf:"varint,7,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	XXX_NoUnkeyedLiteral     struct{} `json:"-"`
	XXX_unrecognized         []byte   `json:"-"`
	XXX_sizecache            int32    `json:"-"`
}

func (m *L2FibPwL2TpIpv6TsSessInfo) Reset()         { *m = L2FibPwL2TpIpv6TsSessInfo{} }
func (m *L2FibPwL2TpIpv6TsSessInfo) String() string { return proto.CompactTextString(m) }
func (*L2FibPwL2TpIpv6TsSessInfo) ProtoMessage()    {}
func (*L2FibPwL2TpIpv6TsSessInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_246c0372d5d8a0c8, []int{16}
}

func (m *L2FibPwL2TpIpv6TsSessInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_L2FibPwL2TpIpv6TsSessInfo.Unmarshal(m, b)
}
func (m *L2FibPwL2TpIpv6TsSessInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_L2FibPwL2TpIpv6TsSessInfo.Marshal(b, m, deterministic)
}
func (m *L2FibPwL2TpIpv6TsSessInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_L2FibPwL2TpIpv6TsSessInfo.Merge(m, src)
}
func (m *L2FibPwL2TpIpv6TsSessInfo) XXX_Size() int {
	return xxx_messageInfo_L2FibPwL2TpIpv6TsSessInfo.Size(m)
}
func (m *L2FibPwL2TpIpv6TsSessInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_L2FibPwL2TpIpv6TsSessInfo.DiscardUnknown(m)
}

var xxx_messageInfo_L2FibPwL2TpIpv6TsSessInfo proto.InternalMessageInfo

func (m *L2FibPwL2TpIpv6TsSessInfo) GetCookieSize() uint32 {
	if m != nil {
		return m.CookieSize
	}
	return 0
}

func (m *L2FibPwL2TpIpv6TsSessInfo) GetCookieLowValue() uint32 {
	if m != nil {
		return m.CookieLowValue
	}
	return 0
}

func (m *L2FibPwL2TpIpv6TsSessInfo) GetCookieHighValue() uint32 {
	if m != nil {
		return m.CookieHighValue
	}
	return 0
}

func (m *L2FibPwL2TpIpv6TsSessInfo) GetSecondaryCookieSize() uint32 {
	if m != nil {
		return m.SecondaryCookieSize
	}
	return 0
}

func (m *L2FibPwL2TpIpv6TsSessInfo) GetSecondaryCookieLowValue() uint32 {
	if m != nil {
		return m.SecondaryCookieLowValue
	}
	return 0
}

func (m *L2FibPwL2TpIpv6TsSessInfo) GetSecondaryCookieHighValue() uint32 {
	if m != nil {
		return m.SecondaryCookieHighValue
	}
	return 0
}

func (m *L2FibPwL2TpIpv6TsSessInfo) GetSessionId() uint32 {
	if m != nil {
		return m.SessionId
	}
	return 0
}

type L2FibPwL2TpIpv6TsInfo struct {
	Local                  *L2FibPwL2TpIpv6TsSessInfo `protobuf:"bytes,1,opt,name=local,proto3" json:"local,omitempty"`
	Remote                 *L2FibPwL2TpSessInfo       `protobuf:"bytes,2,opt,name=remote,proto3" json:"remote,omitempty"`
	TosVal                 uint32                     `protobuf:"varint,3,opt,name=tos_val,json=tosVal,proto3" json:"tos_val,omitempty"`
	Ttl                    uint32                     `protobuf:"varint,4,opt,name=ttl,proto3" json:"ttl,omitempty"`
	PathMtu                uint32                     `protobuf:"varint,5,opt,name=path_mtu,json=pathMtu,proto3" json:"path_mtu,omitempty"`
	SequenceNumberSent     uint32                     `protobuf:"varint,6,opt,name=sequence_number_sent,json=sequenceNumberSent,proto3" json:"sequence_number_sent,omitempty"`
	SequenceNumberExpected uint32                     `protobuf:"varint,7,opt,name=sequence_number_expected,json=sequenceNumberExpected,proto3" json:"sequence_number_expected,omitempty"`
	LocalAddress           string                     `protobuf:"bytes,8,opt,name=local_address,json=localAddress,proto3" json:"local_address,omitempty"`
	RemoteAddress          string                     `protobuf:"bytes,9,opt,name=remote_address,json=remoteAddress,proto3" json:"remote_address,omitempty"`
	XXX_NoUnkeyedLiteral   struct{}                   `json:"-"`
	XXX_unrecognized       []byte                     `json:"-"`
	XXX_sizecache          int32                      `json:"-"`
}

func (m *L2FibPwL2TpIpv6TsInfo) Reset()         { *m = L2FibPwL2TpIpv6TsInfo{} }
func (m *L2FibPwL2TpIpv6TsInfo) String() string { return proto.CompactTextString(m) }
func (*L2FibPwL2TpIpv6TsInfo) ProtoMessage()    {}
func (*L2FibPwL2TpIpv6TsInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_246c0372d5d8a0c8, []int{17}
}

func (m *L2FibPwL2TpIpv6TsInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_L2FibPwL2TpIpv6TsInfo.Unmarshal(m, b)
}
func (m *L2FibPwL2TpIpv6TsInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_L2FibPwL2TpIpv6TsInfo.Marshal(b, m, deterministic)
}
func (m *L2FibPwL2TpIpv6TsInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_L2FibPwL2TpIpv6TsInfo.Merge(m, src)
}
func (m *L2FibPwL2TpIpv6TsInfo) XXX_Size() int {
	return xxx_messageInfo_L2FibPwL2TpIpv6TsInfo.Size(m)
}
func (m *L2FibPwL2TpIpv6TsInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_L2FibPwL2TpIpv6TsInfo.DiscardUnknown(m)
}

var xxx_messageInfo_L2FibPwL2TpIpv6TsInfo proto.InternalMessageInfo

func (m *L2FibPwL2TpIpv6TsInfo) GetLocal() *L2FibPwL2TpIpv6TsSessInfo {
	if m != nil {
		return m.Local
	}
	return nil
}

func (m *L2FibPwL2TpIpv6TsInfo) GetRemote() *L2FibPwL2TpSessInfo {
	if m != nil {
		return m.Remote
	}
	return nil
}

func (m *L2FibPwL2TpIpv6TsInfo) GetTosVal() uint32 {
	if m != nil {
		return m.TosVal
	}
	return 0
}

func (m *L2FibPwL2TpIpv6TsInfo) GetTtl() uint32 {
	if m != nil {
		return m.Ttl
	}
	return 0
}

func (m *L2FibPwL2TpIpv6TsInfo) GetPathMtu() uint32 {
	if m != nil {
		return m.PathMtu
	}
	return 0
}

func (m *L2FibPwL2TpIpv6TsInfo) GetSequenceNumberSent() uint32 {
	if m != nil {
		return m.SequenceNumberSent
	}
	return 0
}

func (m *L2FibPwL2TpIpv6TsInfo) GetSequenceNumberExpected() uint32 {
	if m != nil {
		return m.SequenceNumberExpected
	}
	return 0
}

func (m *L2FibPwL2TpIpv6TsInfo) GetLocalAddress() string {
	if m != nil {
		return m.LocalAddress
	}
	return ""
}

func (m *L2FibPwL2TpIpv6TsInfo) GetRemoteAddress() string {
	if m != nil {
		return m.RemoteAddress
	}
	return ""
}

type L2FibPwUn struct {
	DataType             string                 `protobuf:"bytes,1,opt,name=data_type,json=dataType,proto3" json:"data_type,omitempty"`
	Mpls                 *L2FibPwMplsInfo       `protobuf:"bytes,2,opt,name=mpls,proto3" json:"mpls,omitempty"`
	L2Tp                 *L2FibPwL2TpInfo       `protobuf:"bytes,3,opt,name=l2tp,proto3" json:"l2tp,omitempty"`
	L2Tpv2               *L2FibPwL2Tpv2Info     `protobuf:"bytes,4,opt,name=l2tpv2,proto3" json:"l2tpv2,omitempty"`
	L2TpIpv6Ts           *L2FibPwL2TpIpv6TsInfo `protobuf:"bytes,5,opt,name=l2tp_ipv6_ts,json=l2tpIpv6Ts,proto3" json:"l2tp_ipv6_ts,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *L2FibPwUn) Reset()         { *m = L2FibPwUn{} }
func (m *L2FibPwUn) String() string { return proto.CompactTextString(m) }
func (*L2FibPwUn) ProtoMessage()    {}
func (*L2FibPwUn) Descriptor() ([]byte, []int) {
	return fileDescriptor_246c0372d5d8a0c8, []int{18}
}

func (m *L2FibPwUn) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_L2FibPwUn.Unmarshal(m, b)
}
func (m *L2FibPwUn) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_L2FibPwUn.Marshal(b, m, deterministic)
}
func (m *L2FibPwUn) XXX_Merge(src proto.Message) {
	xxx_messageInfo_L2FibPwUn.Merge(m, src)
}
func (m *L2FibPwUn) XXX_Size() int {
	return xxx_messageInfo_L2FibPwUn.Size(m)
}
func (m *L2FibPwUn) XXX_DiscardUnknown() {
	xxx_messageInfo_L2FibPwUn.DiscardUnknown(m)
}

var xxx_messageInfo_L2FibPwUn proto.InternalMessageInfo

func (m *L2FibPwUn) GetDataType() string {
	if m != nil {
		return m.DataType
	}
	return ""
}

func (m *L2FibPwUn) GetMpls() *L2FibPwMplsInfo {
	if m != nil {
		return m.Mpls
	}
	return nil
}

func (m *L2FibPwUn) GetL2Tp() *L2FibPwL2TpInfo {
	if m != nil {
		return m.L2Tp
	}
	return nil
}

func (m *L2FibPwUn) GetL2Tpv2() *L2FibPwL2Tpv2Info {
	if m != nil {
		return m.L2Tpv2
	}
	return nil
}

func (m *L2FibPwUn) GetL2TpIpv6Ts() *L2FibPwL2TpIpv6TsInfo {
	if m != nil {
		return m.L2TpIpv6Ts
	}
	return nil
}

type L2FibBackupPwInfo struct {
	BackupNextHop          string           `protobuf:"bytes,1,opt,name=backup_next_hop,json=backupNextHop,proto3" json:"backup_next_hop,omitempty"`
	BackupPseudoWireIdType string           `protobuf:"bytes,2,opt,name=backup_pseudo_wire_id_type,json=backupPseudoWireIdType,proto3" json:"backup_pseudo_wire_id_type,omitempty"`
	BackupPseudoWireId     uint32           `protobuf:"varint,3,opt,name=backup_pseudo_wire_id,json=backupPseudoWireId,proto3" json:"backup_pseudo_wire_id,omitempty"`
	Atom                   *L2FibPwMplsInfo `protobuf:"bytes,4,opt,name=atom,proto3" json:"atom,omitempty"`
	RedundancyRole         string           `protobuf:"bytes,5,opt,name=redundancy_role,json=redundancyRole,proto3" json:"redundancy_role,omitempty"`
	Active                 bool             `protobuf:"varint,6,opt,name=active,proto3" json:"active,omitempty"`
	Bound                  bool             `protobuf:"varint,7,opt,name=bound,proto3" json:"bound,omitempty"`
	PwFlowLabelTx          bool             `protobuf:"varint,8,opt,name=pw_flow_label_tx,json=pwFlowLabelTx,proto3" json:"pw_flow_label_tx,omitempty"`
	GroupingSupported      bool             `protobuf:"varint,9,opt,name=grouping_supported,json=groupingSupported,proto3" json:"grouping_supported,omitempty"`
	GroupId                uint32           `protobuf:"varint,10,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	GroupState             string           `protobuf:"bytes,11,opt,name=group_state,json=groupState,proto3" json:"group_state,omitempty"`
	XXX_NoUnkeyedLiteral   struct{}         `json:"-"`
	XXX_unrecognized       []byte           `json:"-"`
	XXX_sizecache          int32            `json:"-"`
}

func (m *L2FibBackupPwInfo) Reset()         { *m = L2FibBackupPwInfo{} }
func (m *L2FibBackupPwInfo) String() string { return proto.CompactTextString(m) }
func (*L2FibBackupPwInfo) ProtoMessage()    {}
func (*L2FibBackupPwInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_246c0372d5d8a0c8, []int{19}
}

func (m *L2FibBackupPwInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_L2FibBackupPwInfo.Unmarshal(m, b)
}
func (m *L2FibBackupPwInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_L2FibBackupPwInfo.Marshal(b, m, deterministic)
}
func (m *L2FibBackupPwInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_L2FibBackupPwInfo.Merge(m, src)
}
func (m *L2FibBackupPwInfo) XXX_Size() int {
	return xxx_messageInfo_L2FibBackupPwInfo.Size(m)
}
func (m *L2FibBackupPwInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_L2FibBackupPwInfo.DiscardUnknown(m)
}

var xxx_messageInfo_L2FibBackupPwInfo proto.InternalMessageInfo

func (m *L2FibBackupPwInfo) GetBackupNextHop() string {
	if m != nil {
		return m.BackupNextHop
	}
	return ""
}

func (m *L2FibBackupPwInfo) GetBackupPseudoWireIdType() string {
	if m != nil {
		return m.BackupPseudoWireIdType
	}
	return ""
}

func (m *L2FibBackupPwInfo) GetBackupPseudoWireId() uint32 {
	if m != nil {
		return m.BackupPseudoWireId
	}
	return 0
}

func (m *L2FibBackupPwInfo) GetAtom() *L2FibPwMplsInfo {
	if m != nil {
		return m.Atom
	}
	return nil
}

func (m *L2FibBackupPwInfo) GetRedundancyRole() string {
	if m != nil {
		return m.RedundancyRole
	}
	return ""
}

func (m *L2FibBackupPwInfo) GetActive() bool {
	if m != nil {
		return m.Active
	}
	return false
}

func (m *L2FibBackupPwInfo) GetBound() bool {
	if m != nil {
		return m.Bound
	}
	return false
}

func (m *L2FibBackupPwInfo) GetPwFlowLabelTx() bool {
	if m != nil {
		return m.PwFlowLabelTx
	}
	return false
}

func (m *L2FibBackupPwInfo) GetGroupingSupported() bool {
	if m != nil {
		return m.GroupingSupported
	}
	return false
}

func (m *L2FibBackupPwInfo) GetGroupId() uint32 {
	if m != nil {
		return m.GroupId
	}
	return 0
}

func (m *L2FibBackupPwInfo) GetGroupState() string {
	if m != nil {
		return m.GroupState
	}
	return ""
}

type L2FibPwInfo struct {
	Base                    *L2FibBaseInfo     `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	PwId                    uint64             `protobuf:"varint,2,opt,name=pw_id,json=pwId,proto3" json:"pw_id,omitempty"`
	SignalCapabilityFlags   uint32             `protobuf:"varint,3,opt,name=signal_capability_flags,json=signalCapabilityFlags,proto3" json:"signal_capability_flags,omitempty"`
	Context                 uint32             `protobuf:"varint,4,opt,name=context,proto3" json:"context,omitempty"`
	SequenceResyncThreshold uint32             `protobuf:"varint,5,opt,name=sequence_resync_threshold,json=sequenceResyncThreshold,proto3" json:"sequence_resync_threshold,omitempty"`
	Bound                   bool               `protobuf:"varint,6,opt,name=bound,proto3" json:"bound,omitempty"`
	NextHopValid            bool               `protobuf:"varint,7,opt,name=next_hop_valid,json=nextHopValid,proto3" json:"next_hop_valid,omitempty"`
	NextHop                 *L2FibNhopInfo     `protobuf:"bytes,8,opt,name=next_hop,json=nextHop,proto3" json:"next_hop,omitempty"`
	PseudoWireUnion         *L2FibPwUn         `protobuf:"bytes,9,opt,name=pseudo_wire_union,json=pseudoWireUnion,proto3" json:"pseudo_wire_union,omitempty"`
	BackupConfigured        bool               `protobuf:"varint,10,opt,name=backup_configured,json=backupConfigured,proto3" json:"backup_configured,omitempty"`
	BackupPseudoWire        *L2FibBackupPwInfo `protobuf:"bytes,11,opt,name=backup_pseudo_wire,json=backupPseudoWire,proto3" json:"backup_pseudo_wire,omitempty"`
	RedundancyRole          string             `protobuf:"bytes,12,opt,name=redundancy_role,json=redundancyRole,proto3" json:"redundancy_role,omitempty"`
	Active                  bool               `protobuf:"varint,13,opt,name=active,proto3" json:"active,omitempty"`
	PseudoWireIdType        string             `protobuf:"bytes,14,opt,name=pseudo_wire_id_type,json=pseudoWireIdType,proto3" json:"pseudo_wire_id_type,omitempty"`
	PwLoadBalanceType       string             `protobuf:"bytes,15,opt,name=pw_load_balance_type,json=pwLoadBalanceType,proto3" json:"pw_load_balance_type,omitempty"`
	PwFlowLabelTx           bool               `protobuf:"varint,16,opt,name=pw_flow_label_tx,json=pwFlowLabelTx,proto3" json:"pw_flow_label_tx,omitempty"`
	GroupingSupported       bool               `protobuf:"varint,17,opt,name=grouping_supported,json=groupingSupported,proto3" json:"grouping_supported,omitempty"`
	GroupId                 uint32             `protobuf:"varint,18,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	GroupState              string             `protobuf:"bytes,19,opt,name=group_state,json=groupState,proto3" json:"group_state,omitempty"`
	GlobalId                uint32             `protobuf:"varint,20,opt,name=global_id,json=globalId,proto3" json:"global_id,omitempty"`
	AcId                    uint32             `protobuf:"varint,21,opt,name=ac_id,json=acId,proto3" json:"ac_id,omitempty"`
	ForwardClass            uint32             `protobuf:"varint,22,opt,name=forward_class,json=forwardClass,proto3" json:"forward_class,omitempty"`
	XXX_NoUnkeyedLiteral    struct{}           `json:"-"`
	XXX_unrecognized        []byte             `json:"-"`
	XXX_sizecache           int32              `json:"-"`
}

func (m *L2FibPwInfo) Reset()         { *m = L2FibPwInfo{} }
func (m *L2FibPwInfo) String() string { return proto.CompactTextString(m) }
func (*L2FibPwInfo) ProtoMessage()    {}
func (*L2FibPwInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_246c0372d5d8a0c8, []int{20}
}

func (m *L2FibPwInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_L2FibPwInfo.Unmarshal(m, b)
}
func (m *L2FibPwInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_L2FibPwInfo.Marshal(b, m, deterministic)
}
func (m *L2FibPwInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_L2FibPwInfo.Merge(m, src)
}
func (m *L2FibPwInfo) XXX_Size() int {
	return xxx_messageInfo_L2FibPwInfo.Size(m)
}
func (m *L2FibPwInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_L2FibPwInfo.DiscardUnknown(m)
}

var xxx_messageInfo_L2FibPwInfo proto.InternalMessageInfo

func (m *L2FibPwInfo) GetBase() *L2FibBaseInfo {
	if m != nil {
		return m.Base
	}
	return nil
}

func (m *L2FibPwInfo) GetPwId() uint64 {
	if m != nil {
		return m.PwId
	}
	return 0
}

func (m *L2FibPwInfo) GetSignalCapabilityFlags() uint32 {
	if m != nil {
		return m.SignalCapabilityFlags
	}
	return 0
}

func (m *L2FibPwInfo) GetContext() uint32 {
	if m != nil {
		return m.Context
	}
	return 0
}

func (m *L2FibPwInfo) GetSequenceResyncThreshold() uint32 {
	if m != nil {
		return m.SequenceResyncThreshold
	}
	return 0
}

func (m *L2FibPwInfo) GetBound() bool {
	if m != nil {
		return m.Bound
	}
	return false
}

func (m *L2FibPwInfo) GetNextHopValid() bool {
	if m != nil {
		return m.NextHopValid
	}
	return false
}

func (m *L2FibPwInfo) GetNextHop() *L2FibNhopInfo {
	if m != nil {
		return m.NextHop
	}
	return nil
}

func (m *L2FibPwInfo) GetPseudoWireUnion() *L2FibPwUn {
	if m != nil {
		return m.PseudoWireUnion
	}
	return nil
}

func (m *L2FibPwInfo) GetBackupConfigured() bool {
	if m != nil {
		return m.BackupConfigured
	}
	return false
}

func (m *L2FibPwInfo) GetBackupPseudoWire() *L2FibBackupPwInfo {
	if m != nil {
		return m.BackupPseudoWire
	}
	return nil
}

func (m *L2FibPwInfo) GetRedundancyRole() string {
	if m != nil {
		return m.RedundancyRole
	}
	return ""
}

func (m *L2FibPwInfo) GetActive() bool {
	if m != nil {
		return m.Active
	}
	return false
}

func (m *L2FibPwInfo) GetPseudoWireIdType() string {
	if m != nil {
		return m.PseudoWireIdType
	}
	return ""
}

func (m *L2FibPwInfo) GetPwLoadBalanceType() string {
	if m != nil {
		return m.PwLoadBalanceType
	}
	return ""
}

func (m *L2FibPwInfo) GetPwFlowLabelTx() bool {
	if m != nil {
		return m.PwFlowLabelTx
	}
	return false
}

func (m *L2FibPwInfo) GetGroupingSupported() bool {
	if m != nil {
		return m.GroupingSupported
	}
	return false
}

func (m *L2FibPwInfo) GetGroupId() uint32 {
	if m != nil {
		return m.GroupId
	}
	return 0
}

func (m *L2FibPwInfo) GetGroupState() string {
	if m != nil {
		return m.GroupState
	}
	return ""
}

func (m *L2FibPwInfo) GetGlobalId() uint32 {
	if m != nil {
		return m.GlobalId
	}
	return 0
}

func (m *L2FibPwInfo) GetAcId() uint32 {
	if m != nil {
		return m.AcId
	}
	return 0
}

func (m *L2FibPwInfo) GetForwardClass() uint32 {
	if m != nil {
		return m.ForwardClass
	}
	return 0
}

type L2FibSeg1Un struct {
	DataType             string                   `protobuf:"bytes,1,opt,name=data_type,json=dataType,proto3" json:"data_type,omitempty"`
	Ac                   *L2FibAcInfo             `protobuf:"bytes,2,opt,name=ac,proto3" json:"ac,omitempty"`
	Pbb                  *L2FibPbbInfo            `protobuf:"bytes,3,opt,name=pbb,proto3" json:"pbb,omitempty"`
	Vni                  *L2FibVniInfo            `protobuf:"bytes,4,opt,name=vni,proto3" json:"vni,omitempty"`
	Evpn                 *L2FibEvpnInfo           `protobuf:"bytes,5,opt,name=evpn,proto3" json:"evpn,omitempty"`
	MonitorSession       *L2FibMonitorSessionInfo `protobuf:"bytes,6,opt,name=monitor_session,json=monitorSession,proto3" json:"monitor_session,omitempty"`
	Pw                   *L2FibPwInfo             `protobuf:"bytes,7,opt,name=pw,proto3" json:"pw,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *L2FibSeg1Un) Reset()         { *m = L2FibSeg1Un{} }
func (m *L2FibSeg1Un) String() string { return proto.CompactTextString(m) }
func (*L2FibSeg1Un) ProtoMessage()    {}
func (*L2FibSeg1Un) Descriptor() ([]byte, []int) {
	return fileDescriptor_246c0372d5d8a0c8, []int{21}
}

func (m *L2FibSeg1Un) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_L2FibSeg1Un.Unmarshal(m, b)
}
func (m *L2FibSeg1Un) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_L2FibSeg1Un.Marshal(b, m, deterministic)
}
func (m *L2FibSeg1Un) XXX_Merge(src proto.Message) {
	xxx_messageInfo_L2FibSeg1Un.Merge(m, src)
}
func (m *L2FibSeg1Un) XXX_Size() int {
	return xxx_messageInfo_L2FibSeg1Un.Size(m)
}
func (m *L2FibSeg1Un) XXX_DiscardUnknown() {
	xxx_messageInfo_L2FibSeg1Un.DiscardUnknown(m)
}

var xxx_messageInfo_L2FibSeg1Un proto.InternalMessageInfo

func (m *L2FibSeg1Un) GetDataType() string {
	if m != nil {
		return m.DataType
	}
	return ""
}

func (m *L2FibSeg1Un) GetAc() *L2FibAcInfo {
	if m != nil {
		return m.Ac
	}
	return nil
}

func (m *L2FibSeg1Un) GetPbb() *L2FibPbbInfo {
	if m != nil {
		return m.Pbb
	}
	return nil
}

func (m *L2FibSeg1Un) GetVni() *L2FibVniInfo {
	if m != nil {
		return m.Vni
	}
	return nil
}

func (m *L2FibSeg1Un) GetEvpn() *L2FibEvpnInfo {
	if m != nil {
		return m.Evpn
	}
	return nil
}

func (m *L2FibSeg1Un) GetMonitorSession() *L2FibMonitorSessionInfo {
	if m != nil {
		return m.MonitorSession
	}
	return nil
}

func (m *L2FibSeg1Un) GetPw() *L2FibPwInfo {
	if m != nil {
		return m.Pw
	}
	return nil
}

type L2FibProfileInfo struct {
	ProfileName          string   `protobuf:"bytes,1,opt,name=profile_name,json=profileName,proto3" json:"profile_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *L2FibProfileInfo) Reset()         { *m = L2FibProfileInfo{} }
func (m *L2FibProfileInfo) String() string { return proto.CompactTextString(m) }
func (*L2FibProfileInfo) ProtoMessage()    {}
func (*L2FibProfileInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_246c0372d5d8a0c8, []int{22}
}

func (m *L2FibProfileInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_L2FibProfileInfo.Unmarshal(m, b)
}
func (m *L2FibProfileInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_L2FibProfileInfo.Marshal(b, m, deterministic)
}
func (m *L2FibProfileInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_L2FibProfileInfo.Merge(m, src)
}
func (m *L2FibProfileInfo) XXX_Size() int {
	return xxx_messageInfo_L2FibProfileInfo.Size(m)
}
func (m *L2FibProfileInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_L2FibProfileInfo.DiscardUnknown(m)
}

var xxx_messageInfo_L2FibProfileInfo proto.InternalMessageInfo

func (m *L2FibProfileInfo) GetProfileName() string {
	if m != nil {
		return m.ProfileName
	}
	return ""
}

type L2FibFeatureUn struct {
	FeatureType          string            `protobuf:"bytes,1,opt,name=feature_type,json=featureType,proto3" json:"feature_type,omitempty"`
	Dhcp                 *L2FibProfileInfo `protobuf:"bytes,2,opt,name=dhcp,proto3" json:"dhcp,omitempty"`
	Igmp                 *L2FibProfileInfo `protobuf:"bytes,3,opt,name=igmp,proto3" json:"igmp,omitempty"`
	Mld                  *L2FibProfileInfo `protobuf:"bytes,4,opt,name=mld,proto3" json:"mld,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *L2FibFeatureUn) Reset()         { *m = L2FibFeatureUn{} }
func (m *L2FibFeatureUn) String() string { return proto.CompactTextString(m) }
func (*L2FibFeatureUn) ProtoMessage()    {}
func (*L2FibFeatureUn) Descriptor() ([]byte, []int) {
	return fileDescriptor_246c0372d5d8a0c8, []int{23}
}

func (m *L2FibFeatureUn) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_L2FibFeatureUn.Unmarshal(m, b)
}
func (m *L2FibFeatureUn) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_L2FibFeatureUn.Marshal(b, m, deterministic)
}
func (m *L2FibFeatureUn) XXX_Merge(src proto.Message) {
	xxx_messageInfo_L2FibFeatureUn.Merge(m, src)
}
func (m *L2FibFeatureUn) XXX_Size() int {
	return xxx_messageInfo_L2FibFeatureUn.Size(m)
}
func (m *L2FibFeatureUn) XXX_DiscardUnknown() {
	xxx_messageInfo_L2FibFeatureUn.DiscardUnknown(m)
}

var xxx_messageInfo_L2FibFeatureUn proto.InternalMessageInfo

func (m *L2FibFeatureUn) GetFeatureType() string {
	if m != nil {
		return m.FeatureType
	}
	return ""
}

func (m *L2FibFeatureUn) GetDhcp() *L2FibProfileInfo {
	if m != nil {
		return m.Dhcp
	}
	return nil
}

func (m *L2FibFeatureUn) GetIgmp() *L2FibProfileInfo {
	if m != nil {
		return m.Igmp
	}
	return nil
}

func (m *L2FibFeatureUn) GetMld() *L2FibProfileInfo {
	if m != nil {
		return m.Mld
	}
	return nil
}

type L2FibOperInfo struct {
	Mtu                                      uint32            `protobuf:"varint,1,opt,name=mtu,proto3" json:"mtu,omitempty"`
	MacAgingTime                             uint32            `protobuf:"varint,2,opt,name=mac_aging_time,json=macAgingTime,proto3" json:"mac_aging_time,omitempty"`
	MacLimit                                 uint32            `protobuf:"varint,3,opt,name=mac_limit,json=macLimit,proto3" json:"mac_limit,omitempty"`
	NumberOfMacs                             uint32            `protobuf:"varint,4,opt,name=number_of_macs,json=numberOfMacs,proto3" json:"number_of_macs,omitempty"`
	AdminDisabled                            bool              `protobuf:"varint,5,opt,name=admin_disabled,json=adminDisabled,proto3" json:"admin_disabled,omitempty"`
	FloodingDisabled                         bool              `protobuf:"varint,6,opt,name=flooding_disabled,json=floodingDisabled,proto3" json:"flooding_disabled,omitempty"`
	FloodUnknownUnicastEnabled               bool              `protobuf:"varint,7,opt,name=flood_unknown_unicast_enabled,json=floodUnknownUnicastEnabled,proto3" json:"flood_unknown_unicast_enabled,omitempty"`
	MacLimitAction                           string            `protobuf:"bytes,8,opt,name=mac_limit_action,json=macLimitAction,proto3" json:"mac_limit_action,omitempty"`
	MacLearningDisabled                      bool              `protobuf:"varint,9,opt,name=mac_learning_disabled,json=macLearningDisabled,proto3" json:"mac_learning_disabled,omitempty"`
	MacPortDownFlushDisabled                 bool              `protobuf:"varint,10,opt,name=mac_port_down_flush_disabled,json=macPortDownFlushDisabled,proto3" json:"mac_port_down_flush_disabled,omitempty"`
	MacLimitNotificationType                 string            `protobuf:"bytes,11,opt,name=mac_limit_notification_type,json=macLimitNotificationType,proto3" json:"mac_limit_notification_type,omitempty"`
	IsMacSecureEnabled                       bool              `protobuf:"varint,12,opt,name=is_mac_secure_enabled,json=isMacSecureEnabled,proto3" json:"is_mac_secure_enabled,omitempty"`
	IsMacSecureLoggingEnabled                bool              `protobuf:"varint,13,opt,name=is_mac_secure_logging_enabled,json=isMacSecureLoggingEnabled,proto3" json:"is_mac_secure_logging_enabled,omitempty"`
	MacSecureAction                          string            `protobuf:"bytes,14,opt,name=mac_secure_action,json=macSecureAction,proto3" json:"mac_secure_action,omitempty"`
	IsMacSecureAcceptShutdown                bool              `protobuf:"varint,15,opt,name=is_mac_secure_accept_shutdown,json=isMacSecureAcceptShutdown,proto3" json:"is_mac_secure_accept_shutdown,omitempty"`
	MacAgingType                             bool              `protobuf:"varint,16,opt,name=mac_aging_type,json=macAgingType,proto3" json:"mac_aging_type,omitempty"`
	StormControlUnicastEnabled               bool              `protobuf:"varint,17,opt,name=storm_control_unicast_enabled,json=stormControlUnicastEnabled,proto3" json:"storm_control_unicast_enabled,omitempty"`
	StormControlBroadcastEnabled             bool              `protobuf:"varint,18,opt,name=storm_control_broadcast_enabled,json=stormControlBroadcastEnabled,proto3" json:"storm_control_broadcast_enabled,omitempty"`
	StormControlMulticastEnabled             bool              `protobuf:"varint,19,opt,name=storm_control_multicast_enabled,json=stormControlMulticastEnabled,proto3" json:"storm_control_multicast_enabled,omitempty"`
	StormControlUnicastRateUnit              string            `protobuf:"bytes,20,opt,name=storm_control_unicast_rate_unit,json=stormControlUnicastRateUnit,proto3" json:"storm_control_unicast_rate_unit,omitempty"`
	StormControlBroadcastRateUnit            string            `protobuf:"bytes,21,opt,name=storm_control_broadcast_rate_unit,json=stormControlBroadcastRateUnit,proto3" json:"storm_control_broadcast_rate_unit,omitempty"`
	StormControlMulticastRateUnit            string            `protobuf:"bytes,22,opt,name=storm_control_multicast_rate_unit,json=stormControlMulticastRateUnit,proto3" json:"storm_control_multicast_rate_unit,omitempty"`
	DhcpEnabled                              bool              `protobuf:"varint,23,opt,name=dhcp_enabled,json=dhcpEnabled,proto3" json:"dhcp_enabled,omitempty"`
	DhcpTrusted                              bool              `protobuf:"varint,24,opt,name=dhcp_trusted,json=dhcpTrusted,proto3" json:"dhcp_trusted,omitempty"`
	IsDaiEnabled                             bool              `protobuf:"varint,25,opt,name=is_dai_enabled,json=isDaiEnabled,proto3" json:"is_dai_enabled,omitempty"`
	IsDaiAddrValidationIpv4Enabled           bool              `protobuf:"varint,26,opt,name=is_dai_addr_validation_ipv4_enabled,json=isDaiAddrValidationIpv4Enabled,proto3" json:"is_dai_addr_validation_ipv4_enabled,omitempty"`
	IsDaiAddrValidationSourceMacEnabled      bool              `protobuf:"varint,27,opt,name=is_dai_addr_validation_source_mac_enabled,json=isDaiAddrValidationSourceMacEnabled,proto3" json:"is_dai_addr_validation_source_mac_enabled,omitempty"`
	IsDaiAddrValidationDestinationMacEnabled bool              `protobuf:"varint,28,opt,name=is_dai_addr_validation_destination_mac_enabled,json=isDaiAddrValidationDestinationMacEnabled,proto3" json:"is_dai_addr_validation_destination_mac_enabled,omitempty"`
	IsDaiLoggingEnabled                      bool              `protobuf:"varint,29,opt,name=is_dai_logging_enabled,json=isDaiLoggingEnabled,proto3" json:"is_dai_logging_enabled,omitempty"`
	IsIpsgEnabled                            bool              `protobuf:"varint,30,opt,name=is_ipsg_enabled,json=isIpsgEnabled,proto3" json:"is_ipsg_enabled,omitempty"`
	IsIpsgLoggingEnabled                     bool              `protobuf:"varint,31,opt,name=is_ipsg_logging_enabled,json=isIpsgLoggingEnabled,proto3" json:"is_ipsg_logging_enabled,omitempty"`
	IsVplsFloodOptimizationEnabled           bool              `protobuf:"varint,32,opt,name=is_vpls_flood_optimization_enabled,json=isVplsFloodOptimizationEnabled,proto3" json:"is_vpls_flood_optimization_enabled,omitempty"`
	IgmpSnoopEnabled                         bool              `protobuf:"varint,33,opt,name=igmp_snoop_enabled,json=igmpSnoopEnabled,proto3" json:"igmp_snoop_enabled,omitempty"`
	IgmpSnoopProfileEnabled                  bool              `protobuf:"varint,34,opt,name=igmp_snoop_profile_enabled,json=igmpSnoopProfileEnabled,proto3" json:"igmp_snoop_profile_enabled,omitempty"`
	IgmpFloodForwardEnabled                  bool              `protobuf:"varint,35,opt,name=igmp_flood_forward_enabled,json=igmpFloodForwardEnabled,proto3" json:"igmp_flood_forward_enabled,omitempty"`
	IgmpMroutePortEnabled                    bool              `protobuf:"varint,36,opt,name=igmp_mroute_port_enabled,json=igmpMroutePortEnabled,proto3" json:"igmp_mroute_port_enabled,omitempty"`
	IgmpRouteGuardEnabled                    bool              `protobuf:"varint,37,opt,name=igmp_route_guard_enabled,json=igmpRouteGuardEnabled,proto3" json:"igmp_route_guard_enabled,omitempty"`
	MldSnoopEnabled                          bool              `protobuf:"varint,38,opt,name=mld_snoop_enabled,json=mldSnoopEnabled,proto3" json:"mld_snoop_enabled,omitempty"`
	MldSnoopProfileEnabled                   bool              `protobuf:"varint,39,opt,name=mld_snoop_profile_enabled,json=mldSnoopProfileEnabled,proto3" json:"mld_snoop_profile_enabled,omitempty"`
	MldFloodForwardEnabled                   bool              `protobuf:"varint,40,opt,name=mld_flood_forward_enabled,json=mldFloodForwardEnabled,proto3" json:"mld_flood_forward_enabled,omitempty"`
	MldMroutePortEnabled                     bool              `protobuf:"varint,41,opt,name=mld_mroute_port_enabled,json=mldMroutePortEnabled,proto3" json:"mld_mroute_port_enabled,omitempty"`
	MldRouteGuardEnabled                     bool              `protobuf:"varint,42,opt,name=mld_route_guard_enabled,json=mldRouteGuardEnabled,proto3" json:"mld_route_guard_enabled,omitempty"`
	StpParticipating                         bool              `protobuf:"varint,43,opt,name=stp_participating,json=stpParticipating,proto3" json:"stp_participating,omitempty"`
	BviConfigured                            bool              `protobuf:"varint,44,opt,name=bvi_configured,json=bviConfigured,proto3" json:"bvi_configured,omitempty"`
	IsBviUp                                  bool              `protobuf:"varint,45,opt,name=is_bvi_up,json=isBviUp,proto3" json:"is_bvi_up,omitempty"`
	IsVniEnabled                             bool              `protobuf:"varint,46,opt,name=is_vni_enabled,json=isVniEnabled,proto3" json:"is_vni_enabled,omitempty"`
	IsEvpnEnabled                            bool              `protobuf:"varint,47,opt,name=is_evpn_enabled,json=isEvpnEnabled,proto3" json:"is_evpn_enabled,omitempty"`
	UnknownUnicastFloodingDisabled           bool              `protobuf:"varint,48,opt,name=unknown_unicast_flooding_disabled,json=unknownUnicastFloodingDisabled,proto3" json:"unknown_unicast_flooding_disabled,omitempty"`
	HostRoutingEnabled                       bool              `protobuf:"varint,49,opt,name=host_routing_enabled,json=hostRoutingEnabled,proto3" json:"host_routing_enabled,omitempty"`
	IsPbbevpnEnabled                         bool              `protobuf:"varint,50,opt,name=is_pbbevpn_enabled,json=isPbbevpnEnabled,proto3" json:"is_pbbevpn_enabled,omitempty"`
	IsSwmacLearning                          bool              `protobuf:"varint,51,opt,name=is_swmac_learning,json=isSwmacLearning,proto3" json:"is_swmac_learning,omitempty"`
	IsEvpnFlowLabel                          bool              `protobuf:"varint,52,opt,name=is_evpn_flow_label,json=isEvpnFlowLabel,proto3" json:"is_evpn_flow_label,omitempty"`
	IsEvpnCwDisable                          bool              `protobuf:"varint,53,opt,name=is_evpn_cw_disable,json=isEvpnCwDisable,proto3" json:"is_evpn_cw_disable,omitempty"`
	Msti                                     uint32            `protobuf:"varint,54,opt,name=msti,proto3" json:"msti,omitempty"`
	IsP2MpPwEnabled                          bool              `protobuf:"varint,55,opt,name=is_p2mp_pw_enabled,json=isP2mpPwEnabled,proto3" json:"is_p2mp_pw_enabled,omitempty"`
	IsIgmpSnoopEnabled                       bool              `protobuf:"varint,56,opt,name=is_igmp_snoop_enabled,json=isIgmpSnoopEnabled,proto3" json:"is_igmp_snoop_enabled,omitempty"`
	NvSatelliteOffloadIpv4MulticastDisabled  bool              `protobuf:"varint,57,opt,name=nv_satellite_offload_ipv4_multicast_disabled,json=nvSatelliteOffloadIpv4MulticastDisabled,proto3" json:"nv_satellite_offload_ipv4_multicast_disabled,omitempty"`
	Feature                                  []*L2FibFeatureUn `protobuf:"bytes,58,rep,name=feature,proto3" json:"feature,omitempty"`
	XXX_NoUnkeyedLiteral                     struct{}          `json:"-"`
	XXX_unrecognized                         []byte            `json:"-"`
	XXX_sizecache                            int32             `json:"-"`
}

func (m *L2FibOperInfo) Reset()         { *m = L2FibOperInfo{} }
func (m *L2FibOperInfo) String() string { return proto.CompactTextString(m) }
func (*L2FibOperInfo) ProtoMessage()    {}
func (*L2FibOperInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_246c0372d5d8a0c8, []int{24}
}

func (m *L2FibOperInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_L2FibOperInfo.Unmarshal(m, b)
}
func (m *L2FibOperInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_L2FibOperInfo.Marshal(b, m, deterministic)
}
func (m *L2FibOperInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_L2FibOperInfo.Merge(m, src)
}
func (m *L2FibOperInfo) XXX_Size() int {
	return xxx_messageInfo_L2FibOperInfo.Size(m)
}
func (m *L2FibOperInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_L2FibOperInfo.DiscardUnknown(m)
}

var xxx_messageInfo_L2FibOperInfo proto.InternalMessageInfo

func (m *L2FibOperInfo) GetMtu() uint32 {
	if m != nil {
		return m.Mtu
	}
	return 0
}

func (m *L2FibOperInfo) GetMacAgingTime() uint32 {
	if m != nil {
		return m.MacAgingTime
	}
	return 0
}

func (m *L2FibOperInfo) GetMacLimit() uint32 {
	if m != nil {
		return m.MacLimit
	}
	return 0
}

func (m *L2FibOperInfo) GetNumberOfMacs() uint32 {
	if m != nil {
		return m.NumberOfMacs
	}
	return 0
}

func (m *L2FibOperInfo) GetAdminDisabled() bool {
	if m != nil {
		return m.AdminDisabled
	}
	return false
}

func (m *L2FibOperInfo) GetFloodingDisabled() bool {
	if m != nil {
		return m.FloodingDisabled
	}
	return false
}

func (m *L2FibOperInfo) GetFloodUnknownUnicastEnabled() bool {
	if m != nil {
		return m.FloodUnknownUnicastEnabled
	}
	return false
}

func (m *L2FibOperInfo) GetMacLimitAction() string {
	if m != nil {
		return m.MacLimitAction
	}
	return ""
}

func (m *L2FibOperInfo) GetMacLearningDisabled() bool {
	if m != nil {
		return m.MacLearningDisabled
	}
	return false
}

func (m *L2FibOperInfo) GetMacPortDownFlushDisabled() bool {
	if m != nil {
		return m.MacPortDownFlushDisabled
	}
	return false
}

func (m *L2FibOperInfo) GetMacLimitNotificationType() string {
	if m != nil {
		return m.MacLimitNotificationType
	}
	return ""
}

func (m *L2FibOperInfo) GetIsMacSecureEnabled() bool {
	if m != nil {
		return m.IsMacSecureEnabled
	}
	return false
}

func (m *L2FibOperInfo) GetIsMacSecureLoggingEnabled() bool {
	if m != nil {
		return m.IsMacSecureLoggingEnabled
	}
	return false
}

func (m *L2FibOperInfo) GetMacSecureAction() string {
	if m != nil {
		return m.MacSecureAction
	}
	return ""
}

func (m *L2FibOperInfo) GetIsMacSecureAcceptShutdown() bool {
	if m != nil {
		return m.IsMacSecureAcceptShutdown
	}
	return false
}

func (m *L2FibOperInfo) GetMacAgingType() bool {
	if m != nil {
		return m.MacAgingType
	}
	return false
}

func (m *L2FibOperInfo) GetStormControlUnicastEnabled() bool {
	if m != nil {
		return m.StormControlUnicastEnabled
	}
	return false
}

func (m *L2FibOperInfo) GetStormControlBroadcastEnabled() bool {
	if m != nil {
		return m.StormControlBroadcastEnabled
	}
	return false
}

func (m *L2FibOperInfo) GetStormControlMulticastEnabled() bool {
	if m != nil {
		return m.StormControlMulticastEnabled
	}
	return false
}

func (m *L2FibOperInfo) GetStormControlUnicastRateUnit() string {
	if m != nil {
		return m.StormControlUnicastRateUnit
	}
	return ""
}

func (m *L2FibOperInfo) GetStormControlBroadcastRateUnit() string {
	if m != nil {
		return m.StormControlBroadcastRateUnit
	}
	return ""
}

func (m *L2FibOperInfo) GetStormControlMulticastRateUnit() string {
	if m != nil {
		return m.StormControlMulticastRateUnit
	}
	return ""
}

func (m *L2FibOperInfo) GetDhcpEnabled() bool {
	if m != nil {
		return m.DhcpEnabled
	}
	return false
}

func (m *L2FibOperInfo) GetDhcpTrusted() bool {
	if m != nil {
		return m.DhcpTrusted
	}
	return false
}

func (m *L2FibOperInfo) GetIsDaiEnabled() bool {
	if m != nil {
		return m.IsDaiEnabled
	}
	return false
}

func (m *L2FibOperInfo) GetIsDaiAddrValidationIpv4Enabled() bool {
	if m != nil {
		return m.IsDaiAddrValidationIpv4Enabled
	}
	return false
}

func (m *L2FibOperInfo) GetIsDaiAddrValidationSourceMacEnabled() bool {
	if m != nil {
		return m.IsDaiAddrValidationSourceMacEnabled
	}
	return false
}

func (m *L2FibOperInfo) GetIsDaiAddrValidationDestinationMacEnabled() bool {
	if m != nil {
		return m.IsDaiAddrValidationDestinationMacEnabled
	}
	return false
}

func (m *L2FibOperInfo) GetIsDaiLoggingEnabled() bool {
	if m != nil {
		return m.IsDaiLoggingEnabled
	}
	return false
}

func (m *L2FibOperInfo) GetIsIpsgEnabled() bool {
	if m != nil {
		return m.IsIpsgEnabled
	}
	return false
}

func (m *L2FibOperInfo) GetIsIpsgLoggingEnabled() bool {
	if m != nil {
		return m.IsIpsgLoggingEnabled
	}
	return false
}

func (m *L2FibOperInfo) GetIsVplsFloodOptimizationEnabled() bool {
	if m != nil {
		return m.IsVplsFloodOptimizationEnabled
	}
	return false
}

func (m *L2FibOperInfo) GetIgmpSnoopEnabled() bool {
	if m != nil {
		return m.IgmpSnoopEnabled
	}
	return false
}

func (m *L2FibOperInfo) GetIgmpSnoopProfileEnabled() bool {
	if m != nil {
		return m.IgmpSnoopProfileEnabled
	}
	return false
}

func (m *L2FibOperInfo) GetIgmpFloodForwardEnabled() bool {
	if m != nil {
		return m.IgmpFloodForwardEnabled
	}
	return false
}

func (m *L2FibOperInfo) GetIgmpMroutePortEnabled() bool {
	if m != nil {
		return m.IgmpMroutePortEnabled
	}
	return false
}

func (m *L2FibOperInfo) GetIgmpRouteGuardEnabled() bool {
	if m != nil {
		return m.IgmpRouteGuardEnabled
	}
	return false
}

func (m *L2FibOperInfo) GetMldSnoopEnabled() bool {
	if m != nil {
		return m.MldSnoopEnabled
	}
	return false
}

func (m *L2FibOperInfo) GetMldSnoopProfileEnabled() bool {
	if m != nil {
		return m.MldSnoopProfileEnabled
	}
	return false
}

func (m *L2FibOperInfo) GetMldFloodForwardEnabled() bool {
	if m != nil {
		return m.MldFloodForwardEnabled
	}
	return false
}

func (m *L2FibOperInfo) GetMldMroutePortEnabled() bool {
	if m != nil {
		return m.MldMroutePortEnabled
	}
	return false
}

func (m *L2FibOperInfo) GetMldRouteGuardEnabled() bool {
	if m != nil {
		return m.MldRouteGuardEnabled
	}
	return false
}

func (m *L2FibOperInfo) GetStpParticipating() bool {
	if m != nil {
		return m.StpParticipating
	}
	return false
}

func (m *L2FibOperInfo) GetBviConfigured() bool {
	if m != nil {
		return m.BviConfigured
	}
	return false
}

func (m *L2FibOperInfo) GetIsBviUp() bool {
	if m != nil {
		return m.IsBviUp
	}
	return false
}

func (m *L2FibOperInfo) GetIsVniEnabled() bool {
	if m != nil {
		return m.IsVniEnabled
	}
	return false
}

func (m *L2FibOperInfo) GetIsEvpnEnabled() bool {
	if m != nil {
		return m.IsEvpnEnabled
	}
	return false
}

func (m *L2FibOperInfo) GetUnknownUnicastFloodingDisabled() bool {
	if m != nil {
		return m.UnknownUnicastFloodingDisabled
	}
	return false
}

func (m *L2FibOperInfo) GetHostRoutingEnabled() bool {
	if m != nil {
		return m.HostRoutingEnabled
	}
	return false
}

func (m *L2FibOperInfo) GetIsPbbevpnEnabled() bool {
	if m != nil {
		return m.IsPbbevpnEnabled
	}
	return false
}

func (m *L2FibOperInfo) GetIsSwmacLearning() bool {
	if m != nil {
		return m.IsSwmacLearning
	}
	return false
}

func (m *L2FibOperInfo) GetIsEvpnFlowLabel() bool {
	if m != nil {
		return m.IsEvpnFlowLabel
	}
	return false
}

func (m *L2FibOperInfo) GetIsEvpnCwDisable() bool {
	if m != nil {
		return m.IsEvpnCwDisable
	}
	return false
}

func (m *L2FibOperInfo) GetMsti() uint32 {
	if m != nil {
		return m.Msti
	}
	return 0
}

func (m *L2FibOperInfo) GetIsP2MpPwEnabled() bool {
	if m != nil {
		return m.IsP2MpPwEnabled
	}
	return false
}

func (m *L2FibOperInfo) GetIsIgmpSnoopEnabled() bool {
	if m != nil {
		return m.IsIgmpSnoopEnabled
	}
	return false
}

func (m *L2FibOperInfo) GetNvSatelliteOffloadIpv4MulticastDisabled() bool {
	if m != nil {
		return m.NvSatelliteOffloadIpv4MulticastDisabled
	}
	return false
}

func (m *L2FibOperInfo) GetFeature() []*L2FibFeatureUn {
	if m != nil {
		return m.Feature
	}
	return nil
}

type L2FibOperBridgePortInfo struct {
	OperationalInformation    *L2FibOperInfo `protobuf:"bytes,1,opt,name=operational_information,json=operationalInformation,proto3" json:"operational_information,omitempty"`
	UnicastStormControlPps    uint64         `protobuf:"varint,2,opt,name=unicast_storm_control_pps,json=unicastStormControlPps,proto3" json:"unicast_storm_control_pps,omitempty"`
	UnicastStormControlKbPs   uint64         `protobuf:"varint,3,opt,name=unicast_storm_control_kb_ps,json=unicastStormControlKbPs,proto3" json:"unicast_storm_control_kb_ps,omitempty"`
	BroadcastStormControlPps  uint64         `protobuf:"varint,4,opt,name=broadcast_storm_control_pps,json=broadcastStormControlPps,proto3" json:"broadcast_storm_control_pps,omitempty"`
	BroadcastStormControlKbPs uint64         `protobuf:"varint,5,opt,name=broadcast_storm_control_kb_ps,json=broadcastStormControlKbPs,proto3" json:"broadcast_storm_control_kb_ps,omitempty"`
	MulticastStormControlPps  uint64         `protobuf:"varint,6,opt,name=multicast_storm_control_pps,json=multicastStormControlPps,proto3" json:"multicast_storm_control_pps,omitempty"`
	MulticastStormControlKbPs uint64         `protobuf:"varint,7,opt,name=multicast_storm_control_kb_ps,json=multicastStormControlKbPs,proto3" json:"multicast_storm_control_kb_ps,omitempty"`
	XXX_NoUnkeyedLiteral      struct{}       `json:"-"`
	XXX_unrecognized          []byte         `json:"-"`
	XXX_sizecache             int32          `json:"-"`
}

func (m *L2FibOperBridgePortInfo) Reset()         { *m = L2FibOperBridgePortInfo{} }
func (m *L2FibOperBridgePortInfo) String() string { return proto.CompactTextString(m) }
func (*L2FibOperBridgePortInfo) ProtoMessage()    {}
func (*L2FibOperBridgePortInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_246c0372d5d8a0c8, []int{25}
}

func (m *L2FibOperBridgePortInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_L2FibOperBridgePortInfo.Unmarshal(m, b)
}
func (m *L2FibOperBridgePortInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_L2FibOperBridgePortInfo.Marshal(b, m, deterministic)
}
func (m *L2FibOperBridgePortInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_L2FibOperBridgePortInfo.Merge(m, src)
}
func (m *L2FibOperBridgePortInfo) XXX_Size() int {
	return xxx_messageInfo_L2FibOperBridgePortInfo.Size(m)
}
func (m *L2FibOperBridgePortInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_L2FibOperBridgePortInfo.DiscardUnknown(m)
}

var xxx_messageInfo_L2FibOperBridgePortInfo proto.InternalMessageInfo

func (m *L2FibOperBridgePortInfo) GetOperationalInformation() *L2FibOperInfo {
	if m != nil {
		return m.OperationalInformation
	}
	return nil
}

func (m *L2FibOperBridgePortInfo) GetUnicastStormControlPps() uint64 {
	if m != nil {
		return m.UnicastStormControlPps
	}
	return 0
}

func (m *L2FibOperBridgePortInfo) GetUnicastStormControlKbPs() uint64 {
	if m != nil {
		return m.UnicastStormControlKbPs
	}
	return 0
}

func (m *L2FibOperBridgePortInfo) GetBroadcastStormControlPps() uint64 {
	if m != nil {
		return m.BroadcastStormControlPps
	}
	return 0
}

func (m *L2FibOperBridgePortInfo) GetBroadcastStormControlKbPs() uint64 {
	if m != nil {
		return m.BroadcastStormControlKbPs
	}
	return 0
}

func (m *L2FibOperBridgePortInfo) GetMulticastStormControlPps() uint64 {
	if m != nil {
		return m.MulticastStormControlPps
	}
	return 0
}

func (m *L2FibOperBridgePortInfo) GetMulticastStormControlKbPs() uint64 {
	if m != nil {
		return m.MulticastStormControlKbPs
	}
	return 0
}

type L2FibBridgePortP2MpInfo struct {
	PtreeType            string   `protobuf:"bytes,1,opt,name=ptree_type,json=ptreeType,proto3" json:"ptree_type,omitempty"`
	LsmId                uint32   `protobuf:"varint,2,opt,name=lsm_id,json=lsmId,proto3" json:"lsm_id,omitempty"`
	TunnelId             uint32   `protobuf:"varint,3,opt,name=tunnel_id,json=tunnelId,proto3" json:"tunnel_id,omitempty"`
	P2MpId               uint32   `protobuf:"varint,4,opt,name=p2mp_id,json=p2mpId,proto3" json:"p2mp_id,omitempty"`
	ExtendedTunnelId     string   `protobuf:"bytes,5,opt,name=extended_tunnel_id,json=extendedTunnelId,proto3" json:"extended_tunnel_id,omitempty"`
	PtreeOwnerLmrib      bool     `protobuf:"varint,6,opt,name=ptree_owner_lmrib,json=ptreeOwnerLmrib,proto3" json:"ptree_owner_lmrib,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *L2FibBridgePortP2MpInfo) Reset()         { *m = L2FibBridgePortP2MpInfo{} }
func (m *L2FibBridgePortP2MpInfo) String() string { return proto.CompactTextString(m) }
func (*L2FibBridgePortP2MpInfo) ProtoMessage()    {}
func (*L2FibBridgePortP2MpInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_246c0372d5d8a0c8, []int{26}
}

func (m *L2FibBridgePortP2MpInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_L2FibBridgePortP2MpInfo.Unmarshal(m, b)
}
func (m *L2FibBridgePortP2MpInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_L2FibBridgePortP2MpInfo.Marshal(b, m, deterministic)
}
func (m *L2FibBridgePortP2MpInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_L2FibBridgePortP2MpInfo.Merge(m, src)
}
func (m *L2FibBridgePortP2MpInfo) XXX_Size() int {
	return xxx_messageInfo_L2FibBridgePortP2MpInfo.Size(m)
}
func (m *L2FibBridgePortP2MpInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_L2FibBridgePortP2MpInfo.DiscardUnknown(m)
}

var xxx_messageInfo_L2FibBridgePortP2MpInfo proto.InternalMessageInfo

func (m *L2FibBridgePortP2MpInfo) GetPtreeType() string {
	if m != nil {
		return m.PtreeType
	}
	return ""
}

func (m *L2FibBridgePortP2MpInfo) GetLsmId() uint32 {
	if m != nil {
		return m.LsmId
	}
	return 0
}

func (m *L2FibBridgePortP2MpInfo) GetTunnelId() uint32 {
	if m != nil {
		return m.TunnelId
	}
	return 0
}

func (m *L2FibBridgePortP2MpInfo) GetP2MpId() uint32 {
	if m != nil {
		return m.P2MpId
	}
	return 0
}

func (m *L2FibBridgePortP2MpInfo) GetExtendedTunnelId() string {
	if m != nil {
		return m.ExtendedTunnelId
	}
	return ""
}

func (m *L2FibBridgePortP2MpInfo) GetPtreeOwnerLmrib() bool {
	if m != nil {
		return m.PtreeOwnerLmrib
	}
	return false
}

type L2FibBridgePortInfo struct {
	Base                 *L2FibBaseInfo           `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	BridgeId             uint32                   `protobuf:"varint,2,opt,name=bridge_id,json=bridgeId,proto3" json:"bridge_id,omitempty"`
	ShgId                uint32                   `protobuf:"varint,3,opt,name=shg_id,json=shgId,proto3" json:"shg_id,omitempty"`
	MstiPointer          uint32                   `protobuf:"varint,4,opt,name=msti_pointer,json=mstiPointer,proto3" json:"msti_pointer,omitempty"`
	SegmentType          uint32                   `protobuf:"varint,5,opt,name=segment_type,json=segmentType,proto3" json:"segment_type,omitempty"`
	MvrpSequenceNumber   uint32                   `protobuf:"varint,6,opt,name=mvrp_sequence_number,json=mvrpSequenceNumber,proto3" json:"mvrp_sequence_number,omitempty"`
	Oper                 *L2FibOperBridgePortInfo `protobuf:"bytes,7,opt,name=oper,proto3" json:"oper,omitempty"`
	P2Mp                 *L2FibBridgePortP2MpInfo `protobuf:"bytes,8,opt,name=p2mp,proto3" json:"p2mp,omitempty"`
	LearnKey             uint32                   `protobuf:"varint,9,opt,name=learn_key,json=learnKey,proto3" json:"learn_key,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *L2FibBridgePortInfo) Reset()         { *m = L2FibBridgePortInfo{} }
func (m *L2FibBridgePortInfo) String() string { return proto.CompactTextString(m) }
func (*L2FibBridgePortInfo) ProtoMessage()    {}
func (*L2FibBridgePortInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_246c0372d5d8a0c8, []int{27}
}

func (m *L2FibBridgePortInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_L2FibBridgePortInfo.Unmarshal(m, b)
}
func (m *L2FibBridgePortInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_L2FibBridgePortInfo.Marshal(b, m, deterministic)
}
func (m *L2FibBridgePortInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_L2FibBridgePortInfo.Merge(m, src)
}
func (m *L2FibBridgePortInfo) XXX_Size() int {
	return xxx_messageInfo_L2FibBridgePortInfo.Size(m)
}
func (m *L2FibBridgePortInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_L2FibBridgePortInfo.DiscardUnknown(m)
}

var xxx_messageInfo_L2FibBridgePortInfo proto.InternalMessageInfo

func (m *L2FibBridgePortInfo) GetBase() *L2FibBaseInfo {
	if m != nil {
		return m.Base
	}
	return nil
}

func (m *L2FibBridgePortInfo) GetBridgeId() uint32 {
	if m != nil {
		return m.BridgeId
	}
	return 0
}

func (m *L2FibBridgePortInfo) GetShgId() uint32 {
	if m != nil {
		return m.ShgId
	}
	return 0
}

func (m *L2FibBridgePortInfo) GetMstiPointer() uint32 {
	if m != nil {
		return m.MstiPointer
	}
	return 0
}

func (m *L2FibBridgePortInfo) GetSegmentType() uint32 {
	if m != nil {
		return m.SegmentType
	}
	return 0
}

func (m *L2FibBridgePortInfo) GetMvrpSequenceNumber() uint32 {
	if m != nil {
		return m.MvrpSequenceNumber
	}
	return 0
}

func (m *L2FibBridgePortInfo) GetOper() *L2FibOperBridgePortInfo {
	if m != nil {
		return m.Oper
	}
	return nil
}

func (m *L2FibBridgePortInfo) GetP2Mp() *L2FibBridgePortP2MpInfo {
	if m != nil {
		return m.P2Mp
	}
	return nil
}

func (m *L2FibBridgePortInfo) GetLearnKey() uint32 {
	if m != nil {
		return m.LearnKey
	}
	return 0
}

type L2FibFxsInfo struct {
	Base                 *L2FibBaseInfo `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	FxsId                uint32         `protobuf:"varint,2,opt,name=fxs_id,json=fxsId,proto3" json:"fxs_id,omitempty"`
	SegmentType          uint32         `protobuf:"varint,3,opt,name=segment_type,json=segmentType,proto3" json:"segment_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *L2FibFxsInfo) Reset()         { *m = L2FibFxsInfo{} }
func (m *L2FibFxsInfo) String() string { return proto.CompactTextString(m) }
func (*L2FibFxsInfo) ProtoMessage()    {}
func (*L2FibFxsInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_246c0372d5d8a0c8, []int{28}
}

func (m *L2FibFxsInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_L2FibFxsInfo.Unmarshal(m, b)
}
func (m *L2FibFxsInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_L2FibFxsInfo.Marshal(b, m, deterministic)
}
func (m *L2FibFxsInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_L2FibFxsInfo.Merge(m, src)
}
func (m *L2FibFxsInfo) XXX_Size() int {
	return xxx_messageInfo_L2FibFxsInfo.Size(m)
}
func (m *L2FibFxsInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_L2FibFxsInfo.DiscardUnknown(m)
}

var xxx_messageInfo_L2FibFxsInfo proto.InternalMessageInfo

func (m *L2FibFxsInfo) GetBase() *L2FibBaseInfo {
	if m != nil {
		return m.Base
	}
	return nil
}

func (m *L2FibFxsInfo) GetFxsId() uint32 {
	if m != nil {
		return m.FxsId
	}
	return 0
}

func (m *L2FibFxsInfo) GetSegmentType() uint32 {
	if m != nil {
		return m.SegmentType
	}
	return 0
}

type L2FibSeg2Un struct {
	DataType             string               `protobuf:"bytes,1,opt,name=data_type,json=dataType,proto3" json:"data_type,omitempty"`
	Ac                   *L2FibAcInfo         `protobuf:"bytes,2,opt,name=ac,proto3" json:"ac,omitempty"`
	Bp                   *L2FibBridgePortInfo `protobuf:"bytes,3,opt,name=bp,proto3" json:"bp,omitempty"`
	Fxs                  *L2FibFxsInfo        `protobuf:"bytes,4,opt,name=fxs,proto3" json:"fxs,omitempty"`
	Pw                   *L2FibPwInfo         `protobuf:"bytes,5,opt,name=pw,proto3" json:"pw,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *L2FibSeg2Un) Reset()         { *m = L2FibSeg2Un{} }
func (m *L2FibSeg2Un) String() string { return proto.CompactTextString(m) }
func (*L2FibSeg2Un) ProtoMessage()    {}
func (*L2FibSeg2Un) Descriptor() ([]byte, []int) {
	return fileDescriptor_246c0372d5d8a0c8, []int{29}
}

func (m *L2FibSeg2Un) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_L2FibSeg2Un.Unmarshal(m, b)
}
func (m *L2FibSeg2Un) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_L2FibSeg2Un.Marshal(b, m, deterministic)
}
func (m *L2FibSeg2Un) XXX_Merge(src proto.Message) {
	xxx_messageInfo_L2FibSeg2Un.Merge(m, src)
}
func (m *L2FibSeg2Un) XXX_Size() int {
	return xxx_messageInfo_L2FibSeg2Un.Size(m)
}
func (m *L2FibSeg2Un) XXX_DiscardUnknown() {
	xxx_messageInfo_L2FibSeg2Un.DiscardUnknown(m)
}

var xxx_messageInfo_L2FibSeg2Un proto.InternalMessageInfo

func (m *L2FibSeg2Un) GetDataType() string {
	if m != nil {
		return m.DataType
	}
	return ""
}

func (m *L2FibSeg2Un) GetAc() *L2FibAcInfo {
	if m != nil {
		return m.Ac
	}
	return nil
}

func (m *L2FibSeg2Un) GetBp() *L2FibBridgePortInfo {
	if m != nil {
		return m.Bp
	}
	return nil
}

func (m *L2FibSeg2Un) GetFxs() *L2FibFxsInfo {
	if m != nil {
		return m.Fxs
	}
	return nil
}

func (m *L2FibSeg2Un) GetPw() *L2FibPwInfo {
	if m != nil {
		return m.Pw
	}
	return nil
}

type L2FibXconInfo struct {
	Base                 *L2FibBaseInfo `protobuf:"bytes,50,opt,name=base,proto3" json:"base,omitempty"`
	XconName             string         `protobuf:"bytes,51,opt,name=xcon_name,json=xconName,proto3" json:"xcon_name,omitempty"`
	Bound                bool           `protobuf:"varint,52,opt,name=bound,proto3" json:"bound,omitempty"`
	SwitchingType        string         `protobuf:"bytes,53,opt,name=switching_type,json=switchingType,proto3" json:"switching_type,omitempty"`
	Segment1             *L2FibSeg1Un   `protobuf:"bytes,54,opt,name=segment1,proto3" json:"segment1,omitempty"`
	Segment2             *L2FibSeg2Un   `protobuf:"bytes,55,opt,name=segment2,proto3" json:"segment2,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *L2FibXconInfo) Reset()         { *m = L2FibXconInfo{} }
func (m *L2FibXconInfo) String() string { return proto.CompactTextString(m) }
func (*L2FibXconInfo) ProtoMessage()    {}
func (*L2FibXconInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_246c0372d5d8a0c8, []int{30}
}

func (m *L2FibXconInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_L2FibXconInfo.Unmarshal(m, b)
}
func (m *L2FibXconInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_L2FibXconInfo.Marshal(b, m, deterministic)
}
func (m *L2FibXconInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_L2FibXconInfo.Merge(m, src)
}
func (m *L2FibXconInfo) XXX_Size() int {
	return xxx_messageInfo_L2FibXconInfo.Size(m)
}
func (m *L2FibXconInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_L2FibXconInfo.DiscardUnknown(m)
}

var xxx_messageInfo_L2FibXconInfo proto.InternalMessageInfo

func (m *L2FibXconInfo) GetBase() *L2FibBaseInfo {
	if m != nil {
		return m.Base
	}
	return nil
}

func (m *L2FibXconInfo) GetXconName() string {
	if m != nil {
		return m.XconName
	}
	return ""
}

func (m *L2FibXconInfo) GetBound() bool {
	if m != nil {
		return m.Bound
	}
	return false
}

func (m *L2FibXconInfo) GetSwitchingType() string {
	if m != nil {
		return m.SwitchingType
	}
	return ""
}

func (m *L2FibXconInfo) GetSegment1() *L2FibSeg1Un {
	if m != nil {
		return m.Segment1
	}
	return nil
}

func (m *L2FibXconInfo) GetSegment2() *L2FibSeg2Un {
	if m != nil {
		return m.Segment2
	}
	return nil
}

func init() {
	proto.RegisterType((*L2FibXconInfo_KEYS)(nil), "cisco_ios_xr_l2vpn_oper.l2vpn_forwarding.nodes.node.l2fibx_con_l2tpv2s.l2fibx_con_l2tpv2.l2fib_xcon_info_KEYS")
	proto.RegisterType((*L2FibBaseInfo)(nil), "cisco_ios_xr_l2vpn_oper.l2vpn_forwarding.nodes.node.l2fibx_con_l2tpv2s.l2fibx_con_l2tpv2.l2fib_base_info")
	proto.RegisterType((*L2FibNhopInfo)(nil), "cisco_ios_xr_l2vpn_oper.l2vpn_forwarding.nodes.node.l2fibx_con_l2tpv2s.l2fibx_con_l2tpv2.l2fib_nhop_info")
	proto.RegisterType((*L2FibAcInfo)(nil), "cisco_ios_xr_l2vpn_oper.l2vpn_forwarding.nodes.node.l2fibx_con_l2tpv2s.l2fibx_con_l2tpv2.l2fib_ac_info")
	proto.RegisterType((*L2FibPbbEdgeInfo)(nil), "cisco_ios_xr_l2vpn_oper.l2vpn_forwarding.nodes.node.l2fibx_con_l2tpv2s.l2fibx_con_l2tpv2.l2fib_pbb_edge_info")
	proto.RegisterType((*L2FibPbbCoreInfo)(nil), "cisco_ios_xr_l2vpn_oper.l2vpn_forwarding.nodes.node.l2fibx_con_l2tpv2s.l2fibx_con_l2tpv2.l2fib_pbb_core_info")
	proto.RegisterType((*L2FibPbbUn)(nil), "cisco_ios_xr_l2vpn_oper.l2vpn_forwarding.nodes.node.l2fibx_con_l2tpv2s.l2fibx_con_l2tpv2.l2fib_pbb_un")
	proto.RegisterType((*L2FibPbbInfo)(nil), "cisco_ios_xr_l2vpn_oper.l2vpn_forwarding.nodes.node.l2fibx_con_l2tpv2s.l2fibx_con_l2tpv2.l2fib_pbb_info")
	proto.RegisterType((*L2FibVniInfo)(nil), "cisco_ios_xr_l2vpn_oper.l2vpn_forwarding.nodes.node.l2fibx_con_l2tpv2s.l2fibx_con_l2tpv2.l2fib_vni_info")
	proto.RegisterType((*L2FibEvpnInfo)(nil), "cisco_ios_xr_l2vpn_oper.l2vpn_forwarding.nodes.node.l2fibx_con_l2tpv2s.l2fibx_con_l2tpv2.l2fib_evpn_info")
	proto.RegisterType((*L2FibMonitorSessionInfo)(nil), "cisco_ios_xr_l2vpn_oper.l2vpn_forwarding.nodes.node.l2fibx_con_l2tpv2s.l2fibx_con_l2tpv2.l2fib_monitor_session_info")
	proto.RegisterType((*L2FibPwMplsInfo)(nil), "cisco_ios_xr_l2vpn_oper.l2vpn_forwarding.nodes.node.l2fibx_con_l2tpv2s.l2fibx_con_l2tpv2.l2fib_pw_mpls_info")
	proto.RegisterType((*L2FibPwL2TpSessInfo)(nil), "cisco_ios_xr_l2vpn_oper.l2vpn_forwarding.nodes.node.l2fibx_con_l2tpv2s.l2fibx_con_l2tpv2.l2fib_pw_l2tp_sess_info")
	proto.RegisterType((*L2FibPwL2TpInfo)(nil), "cisco_ios_xr_l2vpn_oper.l2vpn_forwarding.nodes.node.l2fibx_con_l2tpv2s.l2fibx_con_l2tpv2.l2fib_pw_l2tp_info")
	proto.RegisterType((*L2FibPwL2Tpv2SessInfo)(nil), "cisco_ios_xr_l2vpn_oper.l2vpn_forwarding.nodes.node.l2fibx_con_l2tpv2s.l2fibx_con_l2tpv2.l2fib_pw_l2tpv2_sess_info")
	proto.RegisterType((*L2FibPwL2Tpv2Info)(nil), "cisco_ios_xr_l2vpn_oper.l2vpn_forwarding.nodes.node.l2fibx_con_l2tpv2s.l2fibx_con_l2tpv2.l2fib_pw_l2tpv2_info")
	proto.RegisterType((*L2FibPwL2TpIpv6TsSessInfo)(nil), "cisco_ios_xr_l2vpn_oper.l2vpn_forwarding.nodes.node.l2fibx_con_l2tpv2s.l2fibx_con_l2tpv2.l2fib_pw_l2tp_ipv6_ts_sess_info")
	proto.RegisterType((*L2FibPwL2TpIpv6TsInfo)(nil), "cisco_ios_xr_l2vpn_oper.l2vpn_forwarding.nodes.node.l2fibx_con_l2tpv2s.l2fibx_con_l2tpv2.l2fib_pw_l2tp_ipv6_ts_info")
	proto.RegisterType((*L2FibPwUn)(nil), "cisco_ios_xr_l2vpn_oper.l2vpn_forwarding.nodes.node.l2fibx_con_l2tpv2s.l2fibx_con_l2tpv2.l2fib_pw_un")
	proto.RegisterType((*L2FibBackupPwInfo)(nil), "cisco_ios_xr_l2vpn_oper.l2vpn_forwarding.nodes.node.l2fibx_con_l2tpv2s.l2fibx_con_l2tpv2.l2fib_backup_pw_info")
	proto.RegisterType((*L2FibPwInfo)(nil), "cisco_ios_xr_l2vpn_oper.l2vpn_forwarding.nodes.node.l2fibx_con_l2tpv2s.l2fibx_con_l2tpv2.l2fib_pw_info")
	proto.RegisterType((*L2FibSeg1Un)(nil), "cisco_ios_xr_l2vpn_oper.l2vpn_forwarding.nodes.node.l2fibx_con_l2tpv2s.l2fibx_con_l2tpv2.l2fib_seg1_un")
	proto.RegisterType((*L2FibProfileInfo)(nil), "cisco_ios_xr_l2vpn_oper.l2vpn_forwarding.nodes.node.l2fibx_con_l2tpv2s.l2fibx_con_l2tpv2.l2fib_profile_info")
	proto.RegisterType((*L2FibFeatureUn)(nil), "cisco_ios_xr_l2vpn_oper.l2vpn_forwarding.nodes.node.l2fibx_con_l2tpv2s.l2fibx_con_l2tpv2.l2fib_feature_un")
	proto.RegisterType((*L2FibOperInfo)(nil), "cisco_ios_xr_l2vpn_oper.l2vpn_forwarding.nodes.node.l2fibx_con_l2tpv2s.l2fibx_con_l2tpv2.l2fib_oper_info")
	proto.RegisterType((*L2FibOperBridgePortInfo)(nil), "cisco_ios_xr_l2vpn_oper.l2vpn_forwarding.nodes.node.l2fibx_con_l2tpv2s.l2fibx_con_l2tpv2.l2fib_oper_bridge_port_info")
	proto.RegisterType((*L2FibBridgePortP2MpInfo)(nil), "cisco_ios_xr_l2vpn_oper.l2vpn_forwarding.nodes.node.l2fibx_con_l2tpv2s.l2fibx_con_l2tpv2.l2fib_bridge_port_p2mp_info")
	proto.RegisterType((*L2FibBridgePortInfo)(nil), "cisco_ios_xr_l2vpn_oper.l2vpn_forwarding.nodes.node.l2fibx_con_l2tpv2s.l2fibx_con_l2tpv2.l2fib_bridge_port_info")
	proto.RegisterType((*L2FibFxsInfo)(nil), "cisco_ios_xr_l2vpn_oper.l2vpn_forwarding.nodes.node.l2fibx_con_l2tpv2s.l2fibx_con_l2tpv2.l2fib_fxs_info")
	proto.RegisterType((*L2FibSeg2Un)(nil), "cisco_ios_xr_l2vpn_oper.l2vpn_forwarding.nodes.node.l2fibx_con_l2tpv2s.l2fibx_con_l2tpv2.l2fib_seg2_un")
	proto.RegisterType((*L2FibXconInfo)(nil), "cisco_ios_xr_l2vpn_oper.l2vpn_forwarding.nodes.node.l2fibx_con_l2tpv2s.l2fibx_con_l2tpv2.l2fib_xcon_info")
}

func init() { proto.RegisterFile("l2fib_xcon_info.proto", fileDescriptor_246c0372d5d8a0c8) }

var fileDescriptor_246c0372d5d8a0c8 = []byte{
	// 4039 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xec, 0x3b, 0xcb, 0x8e, 0x1c, 0x47,
	0x72, 0xe8, 0x99, 0x9e, 0x57, 0xf6, 0x3c, 0x8b, 0xf3, 0x68, 0x92, 0xa2, 0x48, 0xb6, 0x1e, 0xa4,
	0x44, 0x69, 0x24, 0xb6, 0x48, 0x69, 0xa5, 0xf5, 0x1a, 0x4b, 0xf1, 0xb1, 0x6a, 0x8b, 0x8f, 0x41,
	0x0d, 0x39, 0x5a, 0x1f, 0x8c, 0x72, 0x76, 0x55, 0x75, 0x77, 0x8a, 0xf5, 0xda, 0xca, 0xac, 0xee,
	0x1e, 0x02, 0x36, 0xd6, 0xd0, 0xda, 0x86, 0xb0, 0x07, 0xc3, 0x17, 0x5f, 0xd6, 0xeb, 0x83, 0x7f,
	0xc0, 0x30, 0x0c, 0x03, 0x06, 0x0c, 0x1f, 0x7c, 0xf4, 0xd5, 0x67, 0x1b, 0x30, 0xe0, 0x83, 0xff,
	0xc0, 0x30, 0xf6, 0x64, 0x44, 0x44, 0x66, 0x55, 0x75, 0x75, 0xd3, 0xcb, 0x83, 0xd9, 0xe2, 0x61,
	0x2f, 0x83, 0xae, 0x78, 0x65, 0x64, 0x64, 0x44, 0x64, 0x64, 0x64, 0x0e, 0xdb, 0x0b, 0xda, 0x3d,
	0xd1, 0x75, 0xc6, 0x6e, 0x1c, 0x39, 0x22, 0xea, 0xc5, 0x87, 0x49, 0x1a, 0xab, 0xd8, 0xfa, 0xb1,
	0x2b, 0xa4, 0x1b, 0x3b, 0x22, 0x96, 0xce, 0x38, 0x75, 0x82, 0xf6, 0x30, 0x89, 0x9c, 0x38, 0xf1,
	0xd3, 0x43, 0xfa, 0xd9, 0x8b, 0xd3, 0x11, 0x4f, 0x3d, 0x11, 0xf5, 0x0f, 0xa3, 0xd8, 0xf3, 0x25,
	0xfe, 0x3d, 0x44, 0x51, 0x63, 0x07, 0x44, 0x05, 0x6d, 0x95, 0x0c, 0xdb, 0x72, 0x1a, 0xd4, 0x3a,
	0x61, 0xbb, 0x95, 0x21, 0x9d, 0x2f, 0xef, 0xfe, 0xee, 0xb1, 0x75, 0xc0, 0x56, 0x40, 0x88, 0x23,
	0xbc, 0x66, 0xed, 0x52, 0xed, 0xea, 0x9a, 0xbd, 0x0c, 0x9f, 0x1d, 0xcf, 0x7a, 0x8b, 0x6d, 0x8a,
	0x48, 0xf9, 0x69, 0x8f, 0xbb, 0xbe, 0x13, 0xf1, 0xd0, 0x6f, 0x2e, 0x20, 0x7e, 0x23, 0x87, 0x3e,
	0xe4, 0xa1, 0xdf, 0xda, 0x61, 0x5b, 0x24, 0xb7, 0xcb, 0xa5, 0x8f, 0x72, 0x5b, 0xbf, 0x5a, 0x30,
	0xb0, 0x68, 0x10, 0x27, 0x08, 0xb3, 0xfe, 0x80, 0xd5, 0x81, 0x00, 0xc7, 0x68, 0xb4, 0xc5, 0xe1,
	0xcb, 0x9a, 0xe7, 0x61, 0x45, 0x19, 0x1b, 0x87, 0xb5, 0xae, 0xb2, 0xed, 0xc8, 0x1f, 0x2b, 0x07,
	0xf4, 0xe1, 0x9e, 0x97, 0xfa, 0x52, 0xea, 0xe9, 0x6c, 0x02, 0xfc, 0x8b, 0x38, 0xb9, 0x45, 0x50,
	0xeb, 0x26, 0x3b, 0xc8, 0x29, 0x71, 0xa6, 0x11, 0x0f, 0x9c, 0x80, 0x77, 0xfd, 0xa0, 0xb9, 0x78,
	0xa9, 0x76, 0x75, 0xc3, 0xde, 0xd5, 0x0c, 0x1d, 0x8d, 0xbc, 0x0f, 0x38, 0xeb, 0x90, 0x9d, 0x49,
	0x02, 0xde, 0x8b, 0xd3, 0x50, 0x39, 0x1e, 0x57, 0xdc, 0x19, 0xf2, 0x40, 0x78, 0xcd, 0xfa, 0xa5,
	0xda, 0xd5, 0x55, 0x7b, 0xc7, 0xa0, 0xee, 0x70, 0xc5, 0x4f, 0x00, 0x61, 0x7d, 0xc8, 0x76, 0x93,
	0x80, 0x2b, 0x80, 0x12, 0x7d, 0xe0, 0x47, 0x7d, 0x35, 0x68, 0x2e, 0xe1, 0x18, 0x96, 0xc1, 0x01,
	0xc3, 0x7d, 0xc4, 0xc0, 0x7a, 0xb8, 0x03, 0x11, 0x78, 0xa9, 0x1f, 0x39, 0x6e, 0x9c, 0x45, 0xaa,
	0xb9, 0x8c, 0xb4, 0x1b, 0x06, 0x7a, 0x1b, 0x80, 0xad, 0x3f, 0x5e, 0x61, 0x1b, 0x64, 0x03, 0xee,
	0xbe, 0x12, 0xa6, 0x7f, 0x87, 0x6d, 0x17, 0x7e, 0x34, 0xe0, 0x91, 0x17, 0x18, 0x4f, 0xda, 0xca,
	0xe1, 0x5f, 0x20, 0x18, 0x8c, 0x22, 0xb3, 0xae, 0x33, 0x45, 0xbe, 0x88, 0xe4, 0x96, 0xcc, 0xba,
	0x9d, 0x0a, 0x47, 0x9b, 0xed, 0x71, 0xa5, 0xb8, 0x3b, 0x08, 0xfd, 0x48, 0x39, 0xae, 0x48, 0xdd,
	0x4c, 0x28, 0x47, 0x1b, 0x7e, 0xc3, 0x3e, 0x53, 0x20, 0x6f, 0x13, 0xae, 0xe3, 0x59, 0x37, 0xd8,
	0xfe, 0x0c, 0x9e, 0x50, 0x65, 0xda, 0xf8, 0xbb, 0x53, 0x4c, 0x0f, 0x54, 0x66, 0xed, 0xb3, 0x65,
	0xee, 0xaa, 0xd3, 0xc4, 0xd7, 0x66, 0xd7, 0x5f, 0xd6, 0x7b, 0xcc, 0x42, 0x7d, 0x9d, 0x51, 0x9c,
	0x3e, 0x15, 0x51, 0xdf, 0x09, 0x63, 0xcf, 0x6f, 0xae, 0x20, 0x0d, 0x4d, 0xfc, 0x2b, 0x42, 0x3c,
	0x88, 0x3d, 0xdf, 0xba, 0xc2, 0xb6, 0xb8, 0xf7, 0x35, 0x77, 0xfd, 0xc8, 0x3d, 0xd5, 0x2e, 0xb2,
	0x8a, 0x2e, 0xb2, 0x99, 0x83, 0xc9, 0x3f, 0xae, 0xb1, 0x9d, 0x82, 0xd0, 0x78, 0xec, 0x1a, 0xda,
	0x61, 0x3b, 0x47, 0x18, 0x9f, 0xdd, 0x65, 0x4b, 0xdd, 0x38, 0x8b, 0xbc, 0x26, 0x43, 0x59, 0xf4,
	0x61, 0x7d, 0xc0, 0x76, 0x85, 0xf6, 0xe1, 0x42, 0x39, 0xee, 0x36, 0x1b, 0x28, 0x65, 0x47, 0x90,
	0x07, 0x1b, 0xed, 0xb8, 0x0b, 0x3e, 0x9c, 0xfa, 0x5e, 0x16, 0x79, 0x1c, 0x06, 0xed, 0xa7, 0x71,
	0x96, 0x80, 0x29, 0xd7, 0x71, 0x2e, 0x3b, 0x05, 0xea, 0x47, 0x80, 0xe9, 0xa0, 0x0f, 0x97, 0xe8,
	0xe3, 0xee, 0xd7, 0xbe, 0x8b, 0xb6, 0xdf, 0xb8, 0x54, 0xbb, 0x5a, 0xb7, 0xad, 0x02, 0xf7, 0x08,
	0x51, 0x1d, 0x0f, 0x46, 0xf0, 0xc1, 0xc9, 0x2a, 0x81, 0xb5, 0x49, 0x23, 0x00, 0x6a, 0x32, 0xaa,
	0xae, 0x31, 0xab, 0x37, 0x76, 0x9d, 0x3c, 0x20, 0xc9, 0x62, 0x5b, 0x38, 0xcb, 0xad, 0xde, 0xd8,
	0x7d, 0x48, 0xa1, 0x48, 0x26, 0xfb, 0x79, 0x8d, 0xad, 0x97, 0xa9, 0x9b, 0xdb, 0xf3, 0x71, 0xf8,
	0x3c, 0xc9, 0xd9, 0xac, 0x50, 0xa9, 0xf5, 0x90, 0x9d, 0x21, 0x74, 0xd2, 0xed, 0x3a, 0xbe, 0xd7,
	0xa7, 0x98, 0x80, 0x28, 0x0e, 0xb9, 0x0b, 0x42, 0x7a, 0xa2, 0x9f, 0xa5, 0x3e, 0x65, 0xdd, 0x55,
	0x7b, 0x23, 0xe4, 0xee, 0xed, 0x1c, 0x68, 0x6d, 0xb3, 0x45, 0x58, 0x2a, 0x8a, 0x13, 0xf8, 0xd9,
	0x3a, 0x2c, 0xcb, 0x73, 0xe3, 0x54, 0xcb, 0x3b, 0x60, 0x2b, 0xc3, 0x80, 0x47, 0x26, 0x7d, 0x6f,
	0xd8, 0xcb, 0xf0, 0xd9, 0xf1, 0x5a, 0x7f, 0xbb, 0xc0, 0xd6, 0x0b, 0x86, 0x2c, 0xb2, 0xce, 0xb2,
	0x55, 0xf8, 0x85, 0x2e, 0x4c, 0x99, 0x7e, 0x25, 0xe9, 0x76, 0x1f, 0x83, 0x0f, 0xff, 0x51, 0x8d,
	0xd5, 0x41, 0x45, 0x1c, 0xaf, 0xd1, 0x0e, 0x5f, 0xb6, 0xc5, 0x26, 0x4c, 0x62, 0xe3, 0xd0, 0xa8,
	0x03, 0x4c, 0x0b, 0x83, 0x7d, 0x4e, 0x3a, 0xe4, 0x66, 0xb4, 0x71, 0xe8, 0xd6, 0x37, 0x8b, 0x6c,
	0xb3, 0xc0, 0xbe, 0x0a, 0xc9, 0x33, 0x8f, 0xec, 0x85, 0x72, 0x64, 0x7f, 0x53, 0x63, 0x6b, 0xb4,
	0xaa, 0x22, 0x8e, 0xb4, 0xc1, 0x7a, 0xf3, 0x30, 0x58, 0x16, 0xd9, 0xe0, 0x44, 0x4f, 0x60, 0x5c,
	0xeb, 0x0d, 0xb6, 0xa1, 0x85, 0x3a, 0x6e, 0xc0, 0xa5, 0xd4, 0x39, 0x77, 0x5d, 0x03, 0x6f, 0x03,
	0xcc, 0xba, 0xce, 0xf6, 0xd0, 0xca, 0xb8, 0xe4, 0xa0, 0x87, 0x1f, 0xf1, 0x6e, 0xe0, 0x7b, 0x98,
	0x6b, 0x57, 0x6d, 0x0b, 0x90, 0x47, 0xdd, 0xee, 0xdd, 0x61, 0x12, 0xdd, 0x25, 0x4c, 0xeb, 0xef,
	0xf2, 0x55, 0x18, 0x46, 0xe2, 0x55, 0x59, 0x05, 0x99, 0xba, 0x22, 0xd1, 0xf1, 0x48, 0x1f, 0x56,
	0x93, 0xad, 0x84, 0x2e, 0x97, 0x4a, 0x24, 0x7a, 0x83, 0x32, 0x9f, 0xc5, 0xaa, 0xd5, 0xcb, 0xab,
	0x76, 0x9e, 0xad, 0x25, 0x3c, 0x85, 0x3d, 0x47, 0xf4, 0x70, 0xfa, 0x6b, 0xf6, 0x2a, 0x01, 0x3a,
	0x3d, 0x60, 0xf1, 0x23, 0x97, 0x27, 0x7a, 0x77, 0xa1, 0x0f, 0x88, 0xd9, 0xcc, 0x4b, 0x9c, 0x24,
	0x4e, 0x95, 0xde, 0x52, 0x56, 0x32, 0x2f, 0x39, 0x8a, 0x53, 0x65, 0xbd, 0xc9, 0x36, 0x65, 0x9c,
	0xa5, 0xae, 0xef, 0x0c, 0x95, 0x9f, 0x80, 0xc8, 0x55, 0x14, 0xb9, 0x4e, 0xd0, 0x13, 0xe5, 0x27,
	0x9d, 0x9e, 0xf5, 0x3a, 0x6b, 0xf0, 0xe8, 0xd4, 0x01, 0xbd, 0x1c, 0x91, 0xe8, 0x0d, 0x64, 0x8d,
	0x47, 0xa7, 0xb7, 0xb9, 0x54, 0x9d, 0x04, 0xea, 0x22, 0x1e, 0x9d, 0x22, 0x3a, 0x34, 0x44, 0x8c,
	0xea, 0x22, 0x0d, 0x7f, 0xe0, 0x12, 0xe5, 0xeb, 0xac, 0x31, 0x1c, 0x3b, 0x90, 0x6a, 0x70, 0x83,
	0x6b, 0xa0, 0x36, 0x6b, 0xc3, 0xf1, 0x7d, 0x1e, 0xc1, 0xce, 0xd6, 0xfa, 0xf7, 0x9a, 0x29, 0xfa,
	0x74, 0x86, 0x7f, 0x55, 0x83, 0x67, 0x9b, 0x2d, 0xfa, 0x43, 0xa1, 0x8b, 0x39, 0xf8, 0xf9, 0x42,
	0x8e, 0xdc, 0xfa, 0xc5, 0x02, 0x3b, 0x47, 0xc3, 0x84, 0x71, 0x24, 0x54, 0x9c, 0x3a, 0xd2, 0x97,
	0x52, 0xc4, 0xaf, 0xc6, 0x54, 0x2d, 0x56, 0x1f, 0xbb, 0x82, 0x66, 0xba, 0x61, 0xe3, 0x6f, 0xeb,
	0x32, 0x5b, 0x37, 0x2a, 0x62, 0xf9, 0x4e, 0x4e, 0xda, 0xd0, 0x30, 0x28, 0xde, 0xad, 0xeb, 0x6c,
	0x77, 0xc0, 0x53, 0x6f, 0xc4, 0x75, 0x1e, 0x4c, 0x43, 0xae, 0x20, 0xa5, 0x80, 0x01, 0xd6, 0xed,
	0x33, 0x06, 0xd7, 0x29, 0x50, 0x85, 0x51, 0x97, 0x4a, 0x46, 0x6d, 0xfd, 0x55, 0x8d, 0x59, 0x3a,
	0x4d, 0x8c, 0x9c, 0x30, 0x09, 0x24, 0x59, 0x05, 0xf6, 0x9c, 0x91, 0xde, 0xe4, 0x69, 0x7b, 0x5a,
	0x49, 0x46, 0xb4, 0xb5, 0xbf, 0xc9, 0x36, 0x01, 0x15, 0xbb, 0x79, 0x15, 0x40, 0xba, 0xaf, 0x27,
	0xa3, 0xfb, 0x00, 0x2c, 0xca, 0xea, 0x91, 0xa3, 0xb2, 0x28, 0xf2, 0x83, 0xa2, 0x2e, 0xd4, 0x8b,
	0xb7, 0x93, 0x8c, 0x1e, 0x23, 0x26, 0xaf, 0x0a, 0x61, 0x3b, 0x4c, 0x46, 0x0e, 0x9a, 0x82, 0x16,
	0x71, 0x39, 0x19, 0xfd, 0xd8, 0x15, 0x5e, 0xeb, 0x6f, 0x6a, 0xec, 0x20, 0x57, 0x10, 0x4c, 0x89,
	0xcb, 0x47, 0x5a, 0x5e, 0x60, 0x2c, 0x5f, 0x4b, 0xb3, 0x8d, 0xae, 0x69, 0x48, 0xc7, 0xb3, 0x2e,
	0xb2, 0x86, 0x1b, 0xc7, 0x4f, 0x85, 0xef, 0x48, 0xf1, 0xcc, 0xd7, 0x6a, 0x32, 0x02, 0x1d, 0x8b,
	0x67, 0x78, 0xb8, 0xd0, 0x04, 0x41, 0x3c, 0x82, 0x1a, 0x25, 0x33, 0x1a, 0x6e, 0x12, 0xfc, 0x7e,
	0x3c, 0x3a, 0x01, 0xa8, 0xf5, 0x2e, 0xdb, 0xd1, 0x94, 0x03, 0xd1, 0x1f, 0x68, 0x52, 0x52, 0x74,
	0x8b, 0x10, 0x5f, 0x88, 0xfe, 0x00, 0x69, 0x5b, 0xff, 0xb6, 0x58, 0x32, 0x29, 0x6a, 0x8c, 0xca,
	0xfe, 0x69, 0x8d, 0x2d, 0xa1, 0xd5, 0xb4, 0xab, 0xfd, 0xe4, 0xa5, 0xe7, 0xfd, 0xaa, 0xbd, 0x6c,
	0x1a, 0xdf, 0xfa, 0xb6, 0xc6, 0x96, 0x53, 0x3f, 0x8c, 0x95, 0xa9, 0x1b, 0xbe, 0x03, 0x55, 0xb4,
	0x02, 0xb0, 0xee, 0x2a, 0x96, 0x60, 0x50, 0x6d, 0xf9, 0x65, 0x15, 0xcb, 0x13, 0x1e, 0x40, 0xb4,
	0x2b, 0x15, 0x68, 0x1b, 0xc3, 0x4f, 0xf4, 0x49, 0xae, 0x06, 0xa5, 0x82, 0x7f, 0x05, 0xbe, 0xa1,
	0xc6, 0x87, 0xf3, 0x87, 0xff, 0x93, 0xcc, 0x8f, 0xe0, 0xc4, 0x9b, 0x85, 0x5d, 0x1f, 0x82, 0x3c,
	0x3f, 0x68, 0x59, 0x06, 0xf7, 0x10, 0x51, 0xc7, 0x7e, 0xa4, 0xac, 0xef, 0xb1, 0x66, 0x95, 0xc3,
	0x1f, 0x27, 0xbe, 0xab, 0x7c, 0x4f, 0x27, 0xec, 0xfd, 0x49, 0xae, 0xbb, 0x1a, 0xdb, 0xfa, 0x8a,
	0x9d, 0x9d, 0x98, 0xd4, 0xb0, 0xfd, 0xe2, 0x1e, 0x79, 0x9e, 0xad, 0x99, 0x90, 0x30, 0x21, 0xbf,
	0x4a, 0x80, 0x8e, 0xd7, 0xfa, 0xe7, 0xba, 0x39, 0xe9, 0x17, 0x92, 0x51, 0xe8, 0xb7, 0x15, 0xcf,
	0x91, 0x73, 0x5a, 0xae, 0xf2, 0xcc, 0x8c, 0xef, 0xfc, 0xbc, 0xea, 0x3b, 0xdf, 0x89, 0x32, 0xc6,
	0x7b, 0x28, 0x4d, 0xf5, 0x02, 0xde, 0x97, 0xda, 0x7d, 0x56, 0x92, 0xd1, 0x3d, 0xf8, 0x2c, 0x3b,
	0x56, 0x7d, 0x96, 0x63, 0x2d, 0xcd, 0x76, 0xac, 0xe5, 0x49, 0xc7, 0x3a, 0xc7, 0x56, 0xb1, 0xbf,
	0xe3, 0xc6, 0x81, 0x76, 0x8b, 0xfc, 0xdb, 0xba, 0xc4, 0xd6, 0x53, 0x3f, 0x74, 0xf2, 0x7d, 0x7e,
	0x95, 0xf2, 0x4b, 0xea, 0x87, 0x4f, 0xf4, 0x56, 0x7f, 0x91, 0x35, 0xc6, 0x6e, 0x1c, 0x45, 0xfa,
	0x78, 0xb5, 0x46, 0x04, 0x06, 0xd4, 0xf1, 0x66, 0x76, 0x37, 0xd8, 0xcc, 0xee, 0xc6, 0x5b, 0x79,
	0xd5, 0x60, 0xe8, 0xe8, 0x34, 0xb8, 0x41, 0x50, 0x4d, 0xd6, 0xfa, 0xaf, 0x05, 0x76, 0xb1, 0x92,
	0x7b, 0x92, 0xe1, 0xc7, 0x8e, 0x92, 0x25, 0x1f, 0xad, 0xa4, 0xc5, 0xda, 0x0b, 0xa5, 0xc5, 0x85,
	0x17, 0x4f, 0x8b, 0x8b, 0x33, 0xd3, 0x22, 0x9c, 0xf8, 0xa5, 0xef, 0xc6, 0x91, 0xc7, 0xd3, 0x53,
	0xa7, 0xac, 0x80, 0x3e, 0xf1, 0xe7, 0xc8, 0xdb, 0x85, 0x26, 0xdf, 0x67, 0xe7, 0xa6, 0x78, 0x0a,
	0x9d, 0x68, 0x09, 0x0f, 0x2a, 0x8c, 0xb9, 0x72, 0x3f, 0x60, 0xe7, 0xa7, 0x98, 0x4b, 0x6a, 0xd2,
	0x4a, 0x37, 0x2b, 0xdc, 0x85, 0xbe, 0x93, 0xa1, 0xbc, 0x52, 0x09, 0xe5, 0xd6, 0x3f, 0xd4, 0x4d,
	0x59, 0x51, 0xb5, 0x34, 0x1a, 0xf9, 0xcf, 0x2a, 0x31, 0x7b, 0x3a, 0xaf, 0x14, 0x3b, 0xb5, 0xde,
	0xbf, 0xc9, 0xfa, 0xff, 0x0f, 0x59, 0x1f, 0x4a, 0x4d, 0x2a, 0x79, 0x4c, 0xf8, 0xe9, 0xa2, 0x1d,
	0x81, 0xa5, 0x20, 0xa5, 0x09, 0x56, 0x1a, 0x3f, 0x1b, 0x04, 0x35, 0x41, 0xfa, 0xaf, 0x75, 0xd6,
	0xc8, 0x2d, 0x94, 0x45, 0xb0, 0x2b, 0x60, 0x27, 0xb1, 0x74, 0xc2, 0x5f, 0x05, 0x00, 0x1e, 0xf1,
	0x7f, 0x5a, 0x63, 0x75, 0xa8, 0xcb, 0xf4, 0xa2, 0x05, 0x73, 0x58, 0xb4, 0xbc, 0x0c, 0xb4, 0x71,
	0x64, 0x54, 0x01, 0x68, 0xf4, 0x81, 0x35, 0x98, 0x9b, 0x2b, 0xa3, 0x0a, 0xf0, 0xd3, 0xfa, 0x93,
	0x1a, 0x5b, 0x26, 0x1a, 0xf4, 0x8d, 0x46, 0x3b, 0x9a, 0xdf, 0xb6, 0x43, 0x9e, 0x4b, 0x1f, 0xd6,
	0x5f, 0xd4, 0xd8, 0x7a, 0x39, 0xce, 0xd0, 0x27, 0x1b, 0x6d, 0x35, 0xef, 0xf0, 0xa6, 0xb6, 0x15,
	0x80, 0x3a, 0xc9, 0xf0, 0xe3, 0xc7, 0xb2, 0xf5, 0x8b, 0xbc, 0x7a, 0xe8, 0x72, 0xf7, 0x69, 0x96,
	0x00, 0x07, 0x66, 0xa2, 0xb7, 0xd9, 0x96, 0x86, 0xe4, 0xfd, 0x35, 0xf2, 0xb1, 0x0d, 0x02, 0xeb,
	0xbe, 0x97, 0xf5, 0x19, 0x3b, 0x67, 0x38, 0xa5, 0x9f, 0x79, 0xb1, 0x33, 0x12, 0x70, 0xb8, 0xf0,
	0xc8, 0x2d, 0xe9, 0x00, 0xbd, 0x4f, 0x14, 0x47, 0x48, 0xf0, 0x95, 0x48, 0xfd, 0x8e, 0x87, 0x4e,
	0x7a, 0x9d, 0xed, 0xcd, 0xe4, 0xd5, 0xd1, 0x6d, 0x4d, 0xb3, 0xa1, 0x53, 0x71, 0x15, 0x87, 0x7a,
	0x3d, 0xe7, 0xec, 0xd7, 0x30, 0xb2, 0x75, 0x85, 0x6d, 0x95, 0xda, 0xa0, 0x69, 0x1c, 0xf8, 0xfa,
	0x74, 0xbf, 0x59, 0x80, 0xed, 0x38, 0xf0, 0x75, 0x0b, 0x59, 0x0c, 0x69, 0xd3, 0x58, 0xb5, 0xf5,
	0x57, 0x71, 0xa4, 0x5a, 0x29, 0x9f, 0x53, 0xaf, 0xb0, 0x6d, 0x2c, 0x4a, 0x62, 0x7d, 0x80, 0x72,
	0xd4, 0x58, 0xf7, 0x8a, 0x37, 0xa0, 0x38, 0x89, 0xe9, 0x1c, 0xf5, 0x78, 0x6c, 0xbd, 0xcf, 0x2c,
	0xec, 0xd5, 0x8a, 0xa8, 0xef, 0xc8, 0x2c, 0x81, 0x22, 0xc2, 0xa7, 0x2a, 0x61, 0xd5, 0xde, 0x31,
	0x98, 0x63, 0x83, 0x80, 0x4c, 0x98, 0xb7, 0x76, 0x19, 0x65, 0xc2, 0xbe, 0x6e, 0xe8, 0x5e, 0x64,
	0x0d, 0x42, 0x49, 0xc5, 0x95, 0xaf, 0x4b, 0x03, 0x86, 0xa0, 0x63, 0x80, 0xb4, 0xfe, 0x63, 0xcd,
	0x5c, 0x2e, 0x18, 0xb7, 0xf8, 0x8e, 0xcf, 0xbd, 0x67, 0xd8, 0x12, 0x68, 0x42, 0x55, 0x70, 0xdd,
	0xae, 0x27, 0xa3, 0x8e, 0x67, 0x7d, 0xcc, 0x0e, 0xa4, 0xe8, 0x47, 0x3c, 0x70, 0x5c, 0x9e, 0xf0,
	0xae, 0x08, 0x84, 0x3a, 0x9d, 0xa8, 0xee, 0xf6, 0x08, 0x7d, 0x3b, 0xc7, 0x52, 0xad, 0xd7, 0x64,
	0x2b, 0x6e, 0x1c, 0x29, 0x7f, 0xac, 0xf4, 0xce, 0x61, 0x3e, 0xad, 0xcf, 0xd8, 0xd9, 0x3c, 0xe1,
	0xa7, 0xbe, 0x3c, 0x8d, 0x5c, 0x47, 0x0d, 0x52, 0x5f, 0x0e, 0xe2, 0xc0, 0x2b, 0xea, 0x07, 0x22,
	0xb0, 0x11, 0xff, 0xd8, 0xa0, 0x8b, 0xd5, 0x5d, 0x2e, 0xaf, 0xee, 0x9b, 0x6c, 0xb3, 0xd2, 0xd5,
	0xa6, 0xc5, 0x5f, 0x8f, 0xca, 0x2d, 0xed, 0x9f, 0xd5, 0xd8, 0x6a, 0x1e, 0x6e, 0xab, 0xf3, 0x6e,
	0x67, 0xaf, 0x68, 0x5d, 0xac, 0x3f, 0xaf, 0xb1, 0x9d, 0x72, 0x44, 0x52, 0xdf, 0x71, 0x0d, 0xf5,
	0xf1, 0xe7, 0x10, 0x71, 0x59, 0x64, 0x6f, 0x25, 0x79, 0xd4, 0x53, 0xf7, 0xf1, 0x1a, 0xdb, 0xd1,
	0xb9, 0xa2, 0xd4, 0x4b, 0xa7, 0xfb, 0x8f, 0x6d, 0x42, 0x94, 0xda, 0xe9, 0x7f, 0x59, 0x63, 0xd6,
	0x74, 0x66, 0x41, 0x07, 0x9f, 0xc3, 0x1e, 0x30, 0x99, 0x49, 0x8d, 0x7a, 0x45, 0x1a, 0x9b, 0x95,
	0x41, 0xd6, 0x7f, 0x4d, 0x06, 0xd9, 0x98, 0xc8, 0x20, 0xef, 0xb3, 0x33, 0xb3, 0xb2, 0xed, 0x26,
	0xdd, 0x17, 0x25, 0xd5, 0x3c, 0xfb, 0x01, 0xdb, 0xc5, 0xde, 0x0b, 0xf7, 0x9c, 0x2e, 0x0f, 0x38,
	0x78, 0x35, 0xd2, 0x6f, 0xd1, 0xcd, 0x50, 0x32, 0xba, 0x1f, 0x73, 0xef, 0x73, 0xc2, 0x20, 0xc3,
	0xac, 0x5c, 0xb4, 0xfd, 0xe2, 0xb9, 0x68, 0xe7, 0x45, 0x72, 0x91, 0xf5, 0x7f, 0xe6, 0xa2, 0x33,
	0xd5, 0x5c, 0x04, 0xe5, 0x4e, 0x3f, 0x88, 0xbb, 0x1c, 0x0f, 0xc1, 0xbb, 0x74, 0xa8, 0x22, 0x40,
	0xc7, 0x83, 0xbc, 0xc0, 0x5d, 0x40, 0xec, 0x51, 0x43, 0x8c, 0xbb, 0x1d, 0x6f, 0xba, 0xcf, 0xb7,
	0x3f, 0xa3, 0xcf, 0xf7, 0xf7, 0xcb, 0x26, 0xc5, 0x49, 0xbf, 0x7f, 0xfd, 0xd7, 0xd6, 0x55, 0x23,
	0xb6, 0xa0, 0xef, 0x69, 0x1a, 0xed, 0xfe, 0xcb, 0x76, 0x24, 0x7d, 0xa3, 0x6b, 0x2f, 0x70, 0xd7,
	0x7a, 0xc6, 0x16, 0x93, 0x6e, 0x57, 0xd7, 0x52, 0x83, 0x79, 0x34, 0xff, 0x71, 0x68, 0x18, 0x14,
	0xc6, 0x1e, 0x46, 0x42, 0x6f, 0xb9, 0x2f, 0x7d, 0x6c, 0x73, 0x0b, 0x60, 0xc3, 0xa0, 0xb0, 0xe1,
	0xf8, 0xc3, 0x24, 0xd2, 0x05, 0xd3, 0x4b, 0xcf, 0x86, 0x79, 0x33, 0xdb, 0xc6, 0x61, 0xad, 0x5f,
	0xd6, 0xd8, 0x56, 0xa5, 0x01, 0x8c, 0x89, 0x7d, 0x0e, 0xb5, 0xdb, 0xac, 0xbe, 0xb3, 0xbd, 0xa9,
	0xa1, 0xc7, 0x04, 0x04, 0x7f, 0x4c, 0x46, 0xb8, 0x97, 0xcc, 0xc1, 0x1f, 0x4d, 0x46, 0x5b, 0x48,
	0x46, 0xad, 0x4f, 0xf2, 0x6e, 0x65, 0x1a, 0xf7, 0x44, 0xa0, 0xaf, 0x27, 0x2f, 0xb3, 0x75, 0xf3,
	0x8d, 0x3d, 0x68, 0x0a, 0x9f, 0x86, 0x86, 0xe1, 0x03, 0x92, 0x7f, 0x5c, 0x64, 0xdb, 0xc4, 0xd9,
	0xf3, 0xb9, 0xca, 0x70, 0x7b, 0x01, 0x3e, 0xf3, 0x55, 0x0a, 0xbb, 0x86, 0x86, 0xe5, 0x27, 0x1a,
	0x6f, 0xe0, 0x26, 0x73, 0x3b, 0xd1, 0x94, 0xe6, 0x65, 0xe3, 0xc8, 0xa8, 0x82, 0xe8, 0x87, 0xf3,
	0x3b, 0xd1, 0x4c, 0xa8, 0x00, 0x23, 0x5b, 0x7f, 0xc8, 0x16, 0xc3, 0xc0, 0x9b, 0x5b, 0xf5, 0x5b,
	0x56, 0x00, 0x06, 0x6e, 0xfd, 0xaa, 0x69, 0xae, 0x7d, 0x60, 0x1c, 0x5a, 0xf4, 0x6d, 0xb6, 0x08,
	0xc7, 0x6c, 0xea, 0x08, 0xc1, 0x4f, 0xa8, 0x76, 0x42, 0xee, 0x3a, 0xbc, 0x0f, 0xfb, 0x82, 0x12,
	0xa1, 0x69, 0x04, 0xad, 0x87, 0xdc, 0xbd, 0x05, 0xc0, 0xc7, 0x22, 0xc4, 0x8c, 0x0e, 0x54, 0x81,
	0x08, 0x85, 0xd2, 0x95, 0xda, 0x6a, 0xc8, 0xdd, 0xfb, 0xf0, 0x8d, 0x05, 0x13, 0x1d, 0xb5, 0xe3,
	0x9e, 0x13, 0x72, 0x37, 0xbf, 0xa5, 0x21, 0xe8, 0xa3, 0xde, 0x03, 0xee, 0xe2, 0xd1, 0x99, 0x7b,
	0xa1, 0x88, 0x1c, 0x4f, 0xc8, 0xf2, 0x3d, 0xe3, 0x06, 0x42, 0xef, 0x68, 0x20, 0x14, 0x0f, 0xbd,
	0x20, 0x8e, 0xc1, 0x12, 0x05, 0x25, 0xd5, 0x67, 0xdb, 0x06, 0x91, 0x13, 0xdf, 0x62, 0x17, 0x10,
	0xe6, 0x64, 0xd1, 0xd3, 0x28, 0x1e, 0x45, 0x50, 0xfe, 0xe0, 0x5d, 0x99, 0xb9, 0xca, 0xa4, 0xca,
	0xed, 0x1c, 0x12, 0x3d, 0x21, 0x9a, 0x27, 0x44, 0xa2, 0xaf, 0x34, 0xad, 0xab, 0x6c, 0x3b, 0x9f,
	0x99, 0x03, 0x7b, 0x76, 0x1c, 0xe9, 0x93, 0xff, 0xa6, 0x99, 0xe0, 0x2d, 0x84, 0x5a, 0x6d, 0xb6,
	0x87, 0x94, 0x3e, 0x4f, 0xa3, 0x09, 0xed, 0xa8, 0x9e, 0x3f, 0x03, 0xe4, 0x1a, 0x97, 0x2b, 0xf8,
	0xdb, 0xec, 0x35, 0xe0, 0x81, 0x3d, 0xd5, 0xf1, 0x40, 0xc1, 0x5e, 0x90, 0xc9, 0x41, 0xc1, 0x4a,
	0x55, 0x51, 0x33, 0xe4, 0xee, 0x51, 0x9c, 0xaa, 0x3b, 0xf1, 0x28, 0xba, 0x07, 0x04, 0x39, 0xff,
	0x0f, 0xd8, 0xf9, 0x42, 0xbb, 0x28, 0x56, 0xa2, 0x27, 0x5c, 0xbc, 0xec, 0xa1, 0xd8, 0xa3, 0x63,
	0x40, 0xd3, 0x28, 0xfa, 0xb0, 0x44, 0x60, 0x4e, 0x6d, 0x42, 0xc2, 0x92, 0x38, 0xd2, 0x77, 0x21,
	0x62, 0x8d, 0x5d, 0xd6, 0xe9, 0x8a, 0x57, 0xc8, 0x07, 0xdc, 0x3d, 0x46, 0x94, 0xb1, 0xc7, 0x0f,
	0xd9, 0x85, 0x49, 0x96, 0x20, 0xee, 0xa3, 0x6f, 0x18, 0x56, 0x2a, 0x6f, 0xce, 0x96, 0x58, 0xef,
	0x13, 0x85, 0x91, 0xf0, 0x2e, 0xdb, 0x29, 0xb1, 0x6b, 0x93, 0x52, 0xbd, 0xb3, 0x15, 0x1a, 0x1e,
	0x6d, 0xd3, 0xa9, 0xd1, 0xb8, 0xeb, 0xfa, 0x89, 0x72, 0xe4, 0x20, 0x53, 0x60, 0x2f, 0xfd, 0xa0,
	0xa4, 0x3c, 0xda, 0x2d, 0xa4, 0x38, 0xd6, 0x04, 0x15, 0xff, 0x05, 0xa3, 0x50, 0xf5, 0x53, 0xf8,
	0x2f, 0x18, 0xe2, 0x16, 0xbb, 0x20, 0x55, 0x9c, 0x86, 0x10, 0x37, 0x2a, 0x8d, 0x83, 0x29, 0x47,
	0xa1, 0x3a, 0xe8, 0x1c, 0x12, 0xdd, 0x26, 0x9a, 0x8a, 0xa3, 0xdc, 0x65, 0x17, 0x27, 0x45, 0x74,
	0xd3, 0x98, 0x7b, 0x13, 0x42, 0x2c, 0x14, 0xf2, 0x5a, 0x59, 0xc8, 0xe7, 0x86, 0xe8, 0xb9, 0x62,
	0xc2, 0x2c, 0x50, 0x93, 0xba, 0x9c, 0x99, 0x16, 0xf3, 0xc0, 0x10, 0x19, 0x31, 0x77, 0xaa, 0x62,
	0xcc, 0x84, 0x52, 0xae, 0xf0, 0x14, 0xa0, 0xb0, 0xf0, 0x5a, 0xb3, 0xcf, 0xcf, 0x98, 0x92, 0xcd,
	0x15, 0x94, 0xea, 0xca, 0xfa, 0x82, 0x5d, 0x7e, 0xde, 0x9c, 0x0a, 0x39, 0x7b, 0x28, 0xe7, 0xc2,
	0xcc, 0x59, 0x3d, 0x5f, 0x52, 0x31, 0xad, 0x42, 0xd2, 0xfe, 0xb4, 0xa4, 0x7c, 0x62, 0xb9, 0xa4,
	0xcb, 0x6c, 0x1d, 0x32, 0x78, 0x6e, 0x8d, 0x03, 0xb4, 0x46, 0x03, 0x60, 0x66, 0xf2, 0x86, 0x44,
	0xa5, 0x99, 0x84, 0x22, 0xb6, 0x59, 0x90, 0x3c, 0x26, 0x10, 0xb8, 0x85, 0x90, 0x8e, 0xc7, 0x45,
	0x2e, 0xe7, 0x2c, 0xb9, 0x85, 0x90, 0x77, 0xb8, 0x30, 0x82, 0xbe, 0x64, 0x6f, 0x68, 0x2a, 0xee,
	0x79, 0x29, 0x9d, 0xf6, 0x28, 0xbc, 0x44, 0x32, 0xbc, 0x91, 0xb3, 0x9e, 0x43, 0xd6, 0xd7, 0x91,
	0xf5, 0x96, 0xe7, 0xa5, 0x27, 0x39, 0x5d, 0x27, 0x19, 0xde, 0x30, 0xc2, 0x4e, 0xd8, 0x3b, 0xcf,
	0x11, 0xa6, 0xfb, 0xfa, 0xe0, 0xa7, 0x46, 0xe4, 0x79, 0x14, 0xf9, 0xc6, 0x0c, 0x91, 0xc7, 0x48,
	0xfc, 0x80, 0xbb, 0x46, 0xee, 0xef, 0xb3, 0xc3, 0xe7, 0xc8, 0xf5, 0x7c, 0xa9, 0x44, 0x44, 0xbf,
	0xcb, 0xc2, 0x5f, 0x43, 0xe1, 0x57, 0x67, 0x08, 0xbf, 0x53, 0x70, 0x94, 0x46, 0xf8, 0x88, 0xed,
	0xeb, 0x11, 0xaa, 0xc1, 0x7e, 0x81, 0x52, 0x1b, 0x4a, 0xaa, 0x84, 0xf9, 0xdb, 0x6c, 0x4b, 0x48,
	0x47, 0x24, 0xb2, 0xa0, 0x7e, 0x9d, 0x12, 0xba, 0x90, 0x9d, 0x44, 0xe6, 0x74, 0x37, 0xd9, 0x81,
	0xa1, 0xab, 0x4a, 0xbf, 0x88, 0xf4, 0xbb, 0x44, 0x5f, 0x11, 0xff, 0x3b, 0xac, 0x25, 0xa4, 0x33,
	0x4c, 0x02, 0xe9, 0x50, 0x8a, 0x8f, 0x13, 0x25, 0x42, 0xf1, 0x8c, 0x66, 0x6b, 0x24, 0x5c, 0x32,
	0x2b, 0x73, 0x92, 0x04, 0xf2, 0x1e, 0xd0, 0x3d, 0x2a, 0x91, 0x19, 0x59, 0xef, 0x31, 0x0b, 0x76,
	0x64, 0x47, 0x46, 0x71, 0x5c, 0x38, 0xd6, 0x65, 0xda, 0x54, 0x00, 0x73, 0x0c, 0x08, 0x43, 0xfd,
	0x7d, 0x76, 0xae, 0x44, 0x6d, 0xf6, 0x55, 0xc3, 0xd5, 0x42, 0xae, 0x83, 0x9c, 0xeb, 0x88, 0xf0,
	0x55, 0x66, 0xd2, 0xd9, 0x9c, 0x69, 0x0c, 0xf3, 0x1b, 0x05, 0x33, 0x2a, 0x7b, 0x8f, 0xf0, 0x86,
	0xf9, 0x13, 0xd6, 0x44, 0xe6, 0x30, 0x8d, 0x33, 0xe5, 0xd3, 0xae, 0x61, 0x58, 0xdf, 0x44, 0xd6,
	0x3d, 0xc0, 0x3f, 0x40, 0x34, 0x6c, 0x18, 0x55, 0x46, 0xe2, 0xeb, 0x67, 0xe5, 0x31, 0xdf, 0x2a,
	0x18, 0x6d, 0x40, 0xff, 0x28, 0x2b, 0x8d, 0x08, 0xb9, 0x3a, 0xf0, 0x2a, 0x86, 0x79, 0x9b, 0x1e,
	0xf1, 0x85, 0x81, 0x37, 0x61, 0x97, 0x4f, 0xd9, 0xd9, 0x82, 0xb6, 0x6a, 0x96, 0x2b, 0xc8, 0xb3,
	0x6f, 0x78, 0x2a, 0x56, 0xd1, 0xac, 0xb3, 0x8d, 0x72, 0x35, 0x67, 0x9d, 0x65, 0x93, 0x9b, 0xec,
	0x00, 0x58, 0x67, 0x99, 0xe4, 0x1d, 0x72, 0x9f, 0x30, 0xf0, 0xa6, 0x2d, 0xa2, 0xd9, 0x66, 0x19,
	0xe4, 0xdd, 0x9c, 0x6d, 0xda, 0x1e, 0xd7, 0xd8, 0x8e, 0x54, 0x89, 0x93, 0xf0, 0x54, 0x09, 0x57,
	0x24, 0x5c, 0x89, 0xa8, 0xdf, 0xbc, 0x46, 0x8e, 0x22, 0x55, 0x72, 0x54, 0x86, 0x43, 0x45, 0xd3,
	0x1d, 0x8a, 0x72, 0x93, 0xe3, 0x3d, 0x0a, 0x80, 0xee, 0x50, 0x94, 0x3a, 0x1c, 0xe7, 0xd8, 0x9a,
	0x90, 0x0e, 0x50, 0x66, 0x49, 0xf3, 0x7d, 0xa4, 0x58, 0x11, 0xf2, 0xf3, 0xa1, 0x78, 0x92, 0xe8,
	0x34, 0x05, 0xc7, 0x28, 0xa3, 0xdd, 0xa1, 0x49, 0x53, 0x27, 0x91, 0x98, 0x0c, 0xb5, 0x89, 0x37,
	0x5a, 0x1f, 0x98, 0x50, 0x2b, 0x3d, 0xcf, 0xb2, 0x3a, 0xec, 0x72, 0xb5, 0x10, 0x9a, 0xae, 0xa5,
	0x3e, 0xa4, 0x90, 0xc9, 0x26, 0xaa, 0xa1, 0x7b, 0xd5, 0xca, 0xea, 0x43, 0xb6, 0x3b, 0x88, 0x21,
	0x79, 0xc7, 0x99, 0x2a, 0x87, 0xec, 0x75, 0x2a, 0x1c, 0x00, 0x67, 0x13, 0xaa, 0x1c, 0x64, 0x12,
	0x4e, 0xa3, 0x13, 0x7a, 0xb6, 0x75, 0x90, 0xc9, 0x23, 0x42, 0x94, 0x1c, 0x4f, 0x48, 0x47, 0x8e,
	0xca, 0x15, 0x55, 0xf3, 0x23, 0x72, 0x3c, 0x21, 0x8f, 0x47, 0xa5, 0x62, 0xca, 0xba, 0x86, 0x92,
	0x51, 0x6c, 0xd1, 0xe7, 0x68, 0xde, 0x30, 0xc4, 0x60, 0x81, 0xbc, 0xd1, 0x51, 0x26, 0x76, 0x47,
	0x66, 0xd6, 0xcd, 0x9b, 0x65, 0xe2, 0xdb, 0x23, 0x3d, 0x4d, 0xcb, 0x62, 0xf5, 0x50, 0x2a, 0xd1,
	0xfc, 0x98, 0x5a, 0x11, 0xf0, 0x5b, 0x0b, 0x48, 0xda, 0x21, 0xb6, 0x85, 0xcc, 0x3c, 0x3e, 0x31,
	0x02, 0x8e, 0xda, 0x61, 0x72, 0x34, 0x32, 0xd3, 0xa0, 0x02, 0x6b, 0x46, 0x72, 0xf9, 0x9e, 0x29,
	0xb0, 0x3a, 0xd5, 0xf4, 0xf2, 0x7b, 0xec, 0xbd, 0x68, 0xe8, 0x48, 0xae, 0xfc, 0x20, 0x10, 0xca,
	0x77, 0xe2, 0x5e, 0x0f, 0xdb, 0x3d, 0xb8, 0xe3, 0x14, 0xbb, 0x66, 0xbe, 0x5e, 0x9f, 0xa2, 0xa4,
	0x2b, 0xd1, 0xf0, 0xd8, 0xb0, 0x3c, 0x22, 0x0e, 0xd8, 0x7b, 0xf2, 0xed, 0x33, 0x5f, 0xb8, 0x9f,
	0xd5, 0xd8, 0x8a, 0x3e, 0x8b, 0x35, 0x3f, 0xbb, 0xb4, 0x78, 0xb5, 0xd1, 0xfe, 0xfa, 0x65, 0x1f,
	0x3d, 0x8a, 0xc3, 0xa1, 0x6d, 0x86, 0x6e, 0xfd, 0x53, 0x9d, 0x9d, 0x2f, 0x1d, 0x3e, 0xba, 0xa9,
	0xf0, 0xfa, 0x3a, 0x7c, 0xf1, 0x20, 0xf2, 0xd7, 0x35, 0x76, 0x00, 0x18, 0xcc, 0xd3, 0x3c, 0x98,
	0x78, 0xe2, 0x34, 0xa7, 0x86, 0x75, 0x7e, 0x2a, 0xb2, 0xf7, 0x4b, 0x9a, 0x94, 0x1f, 0x54, 0x7d,
	0xca, 0xce, 0x9a, 0x38, 0x9a, 0x2c, 0x6e, 0x92, 0x44, 0xea, 0xb6, 0xf6, 0xbe, 0x26, 0x38, 0x2e,
	0xd5, 0x34, 0x47, 0x89, 0xb4, 0x7e, 0x8b, 0x9d, 0x9f, 0xcd, 0xfa, 0xb4, 0xeb, 0x24, 0xd4, 0xec,
	0xae, 0xdb, 0x07, 0x33, 0x98, 0xbf, 0xec, 0x1e, 0x49, 0x28, 0xfb, 0x8b, 0x4a, 0x6c, 0x7a, 0xe8,
	0x3a, 0x72, 0x37, 0x73, 0x92, 0xea, 0xe0, 0x3f, 0x64, 0x17, 0x9e, 0xc7, 0x4e, 0xc3, 0x2f, 0xa1,
	0x80, 0xb3, 0x33, 0x05, 0x18, 0x05, 0x0a, 0x57, 0x9c, 0x56, 0x60, 0x99, 0x14, 0xc8, 0x49, 0x66,
	0x28, 0xf0, 0x3c, 0x76, 0x52, 0x60, 0x85, 0x14, 0x98, 0x29, 0x00, 0x14, 0x68, 0xfd, 0x67, 0xcd,
	0xf8, 0x4f, 0xd9, 0x75, 0x30, 0x2a, 0xcd, 0x33, 0x9c, 0x44, 0xa5, 0xfe, 0x44, 0x0f, 0x62, 0x0d,
	0x21, 0x58, 0xef, 0xef, 0xb1, 0xe5, 0x40, 0x86, 0xc5, 0x1b, 0x9c, 0xa5, 0x40, 0x86, 0xd5, 0xd7,
	0x39, 0x8b, 0x93, 0xaf, 0x73, 0xf0, 0x81, 0x1a, 0xca, 0x2f, 0x1e, 0xa8, 0xb5, 0xc3, 0xa4, 0x83,
	0x99, 0xcd, 0x1f, 0x2b, 0x3f, 0xf2, 0x7c, 0xcf, 0x29, 0xd8, 0xe9, 0x22, 0x69, 0xdb, 0x60, 0x1e,
	0x1b, 0x31, 0xef, 0xb2, 0x1d, 0xd2, 0x2c, 0x1e, 0x45, 0x7e, 0xea, 0x04, 0x61, 0x2a, 0xba, 0xfa,
	0x00, 0xbb, 0x85, 0x88, 0x47, 0x00, 0xbf, 0x0f, 0xe0, 0xd6, 0xff, 0xd4, 0xd9, 0xfe, 0xf4, 0x2c,
	0x5f, 0x85, 0xdb, 0x9b, 0xf3, 0x6c, 0x4d, 0xab, 0x54, 0xbc, 0x63, 0x22, 0x40, 0xc7, 0x03, 0xeb,
	0xca, 0x41, 0xbf, 0xb0, 0xe1, 0x92, 0x1c, 0xf4, 0x3b, 0x58, 0x96, 0x43, 0x06, 0x75, 0x92, 0x18,
	0x9f, 0x03, 0x6a, 0x2b, 0x36, 0x00, 0x76, 0x44, 0x20, 0x7a, 0xf8, 0xd8, 0xc7, 0xff, 0xee, 0xc0,
	0x85, 0xa3, 0x0b, 0x9a, 0x86, 0x86, 0xe1, 0xd2, 0x7d, 0xc8, 0x76, 0xc3, 0x61, 0x9a, 0x38, 0x95,
	0x6b, 0x7c, 0x73, 0xe7, 0x0f, 0xb8, 0xe3, 0x89, 0x1b, 0x7c, 0xeb, 0xdb, 0x1a, 0xab, 0x83, 0x2d,
	0x74, 0x6f, 0x2d, 0x9b, 0x4b, 0xe2, 0xa8, 0x2e, 0x98, 0x8d, 0x2a, 0xa0, 0x2e, 0xe0, 0x36, 0xfa,
	0x4a, 0xe8, 0xa5, 0xeb, 0x32, 0x33, 0x3a, 0x6c, 0x54, 0x01, 0xd6, 0x10, 0xb7, 0x56, 0xe7, 0xa9,
	0x7f, 0xaa, 0x9f, 0x26, 0xad, 0x22, 0xe0, 0x4b, 0xff, 0xb4, 0xf5, 0x2f, 0x35, 0xf3, 0x94, 0xbb,
	0x37, 0x96, 0xaf, 0x84, 0xcb, 0xed, 0xb1, 0x65, 0x54, 0x25, 0x8f, 0xd9, 0xde, 0x58, 0x76, 0xbc,
	0x29, 0x97, 0x59, 0x9c, 0x72, 0x99, 0xd6, 0x2f, 0xeb, 0xa5, 0x8b, 0x81, 0xf6, 0xab, 0x7b, 0x31,
	0xf0, 0xd3, 0x1a, 0x5b, 0xe8, 0x9a, 0x96, 0x64, 0x32, 0x4f, 0xd7, 0x20, 0x15, 0xba, 0x89, 0xf5,
	0x8c, 0x2d, 0xf6, 0xc6, 0x72, 0x5e, 0xf7, 0x03, 0xc6, 0xb5, 0x6c, 0x18, 0x54, 0x37, 0xc0, 0x97,
	0xe6, 0xdf, 0x00, 0xff, 0xef, 0x45, 0xd3, 0x09, 0xcd, 0xff, 0xc3, 0x32, 0x77, 0xf6, 0xf6, 0x77,
	0x96, 0x5f, 0x51, 0x17, 0x6c, 0xbd, 0x7f, 0x44, 0x0e, 0x0a, 0x00, 0x7c, 0xfb, 0x9d, 0xdf, 0x4b,
	0xdf, 0x28, 0xdf, 0x4b, 0xbf, 0xc5, 0x36, 0xe5, 0x48, 0x28, 0x77, 0x90, 0x77, 0xba, 0x6e, 0xea,
	0x07, 0x82, 0x06, 0x8a, 0xde, 0xfd, 0x4d, 0x8d, 0xad, 0xea, 0xe0, 0xb8, 0x8e, 0x85, 0xed, 0x1c,
	0x8c, 0xad, 0xef, 0xe3, 0xec, 0x7c, 0xe0, 0xb2, 0x16, 0x6d, 0x2c, 0x9e, 0xe7, 0xa3, 0x45, 0xbb,
	0xac, 0x45, 0xbb, 0xbb, 0x8c, 0x4f, 0x39, 0x3f, 0xfa, 0xdf, 0x00, 0x00, 0x00, 0xff, 0xff, 0x32,
	0x47, 0x3c, 0xbe, 0xd3, 0x3b, 0x00, 0x00,
}
