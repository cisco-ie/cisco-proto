/*
Copyright 2019 Cisco Systems

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: l2fib_summary_info.proto

package cisco_ios_xr_l2vpn_oper_l2vpn_forwarding_nodes_node_l2fib_summary

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type L2FibSummaryInfo_KEYS struct {
	NodeId               string   `protobuf:"bytes,1,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *L2FibSummaryInfo_KEYS) Reset()         { *m = L2FibSummaryInfo_KEYS{} }
func (m *L2FibSummaryInfo_KEYS) String() string { return proto.CompactTextString(m) }
func (*L2FibSummaryInfo_KEYS) ProtoMessage()    {}
func (*L2FibSummaryInfo_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_eefd3acbef13d045, []int{0}
}

func (m *L2FibSummaryInfo_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_L2FibSummaryInfo_KEYS.Unmarshal(m, b)
}
func (m *L2FibSummaryInfo_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_L2FibSummaryInfo_KEYS.Marshal(b, m, deterministic)
}
func (m *L2FibSummaryInfo_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_L2FibSummaryInfo_KEYS.Merge(m, src)
}
func (m *L2FibSummaryInfo_KEYS) XXX_Size() int {
	return xxx_messageInfo_L2FibSummaryInfo_KEYS.Size(m)
}
func (m *L2FibSummaryInfo_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_L2FibSummaryInfo_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_L2FibSummaryInfo_KEYS proto.InternalMessageInfo

func (m *L2FibSummaryInfo_KEYS) GetNodeId() string {
	if m != nil {
		return m.NodeId
	}
	return ""
}

type L2FibXcSummaryInfo struct {
	XconnectCount                uint32   `protobuf:"varint,1,opt,name=xconnect_count,json=xconnectCount,proto3" json:"xconnect_count,omitempty"`
	XconnectUpCount              uint32   `protobuf:"varint,2,opt,name=xconnect_up_count,json=xconnectUpCount,proto3" json:"xconnect_up_count,omitempty"`
	XconnectDownCount            uint32   `protobuf:"varint,3,opt,name=xconnect_down_count,json=xconnectDownCount,proto3" json:"xconnect_down_count,omitempty"`
	AcToPwCountMpls              uint32   `protobuf:"varint,4,opt,name=ac_to_pw_count_mpls,json=acToPwCountMpls,proto3" json:"ac_to_pw_count_mpls,omitempty"`
	AcToPwCountL2Tp              uint32   `protobuf:"varint,5,opt,name=ac_to_pw_count_l2tp,json=acToPwCountL2tp,proto3" json:"ac_to_pw_count_l2tp,omitempty"`
	AcToPwCountL2TpIpV6          uint32   `protobuf:"varint,6,opt,name=ac_to_pw_count_l2tp_ip_v6,json=acToPwCountL2tpIpV6,proto3" json:"ac_to_pw_count_l2tp_ip_v6,omitempty"`
	AcToPwCountL2Tpv2            uint32   `protobuf:"varint,7,opt,name=ac_to_pw_count_l2tpv2,json=acToPwCountL2tpv2,proto3" json:"ac_to_pw_count_l2tpv2,omitempty"`
	AcToAcCount                  uint32   `protobuf:"varint,8,opt,name=ac_to_ac_count,json=acToAcCount,proto3" json:"ac_to_ac_count,omitempty"`
	AcToUnknownCount             uint32   `protobuf:"varint,9,opt,name=ac_to_unknown_count,json=acToUnknownCount,proto3" json:"ac_to_unknown_count,omitempty"`
	MonSessToPwCount             uint32   `protobuf:"varint,10,opt,name=mon_sess_to_pw_count,json=monSessToPwCount,proto3" json:"mon_sess_to_pw_count,omitempty"`
	MonSessToUnknownCount        uint32   `protobuf:"varint,11,opt,name=mon_sess_to_unknown_count,json=monSessToUnknownCount,proto3" json:"mon_sess_to_unknown_count,omitempty"`
	AcToBpCount                  uint32   `protobuf:"varint,12,opt,name=ac_to_bp_count,json=acToBpCount,proto3" json:"ac_to_bp_count,omitempty"`
	PwToBpCount                  uint32   `protobuf:"varint,13,opt,name=pw_to_bp_count,json=pwToBpCount,proto3" json:"pw_to_bp_count,omitempty"`
	PwToUnknownCount             uint32   `protobuf:"varint,14,opt,name=pw_to_unknown_count,json=pwToUnknownCount,proto3" json:"pw_to_unknown_count,omitempty"`
	PbbToBpCount                 uint32   `protobuf:"varint,15,opt,name=pbb_to_bp_count,json=pbbToBpCount,proto3" json:"pbb_to_bp_count,omitempty"`
	PbbToUnknownCount            uint32   `protobuf:"varint,16,opt,name=pbb_to_unknown_count,json=pbbToUnknownCount,proto3" json:"pbb_to_unknown_count,omitempty"`
	VniToBpCount                 uint32   `protobuf:"varint,17,opt,name=vni_to_bp_count,json=vniToBpCount,proto3" json:"vni_to_bp_count,omitempty"`
	VniToUnknownCount            uint32   `protobuf:"varint,18,opt,name=vni_to_unknown_count,json=vniToUnknownCount,proto3" json:"vni_to_unknown_count,omitempty"`
	EvpnToBpCount                uint32   `protobuf:"varint,19,opt,name=evpn_to_bp_count,json=evpnToBpCount,proto3" json:"evpn_to_bp_count,omitempty"`
	EvpnToUnknownCount           uint32   `protobuf:"varint,20,opt,name=evpn_to_unknown_count,json=evpnToUnknownCount,proto3" json:"evpn_to_unknown_count,omitempty"`
	AcDownCountAib               uint32   `protobuf:"varint,21,opt,name=ac_down_count_aib,json=acDownCountAib,proto3" json:"ac_down_count_aib,omitempty"`
	AcDownCountL2Vpn             uint32   `protobuf:"varint,22,opt,name=ac_down_count_l2vpn,json=acDownCountL2vpn,proto3" json:"ac_down_count_l2vpn,omitempty"`
	AcDownCountL3Fib             uint32   `protobuf:"varint,23,opt,name=ac_down_count_l3fib,json=acDownCountL3fib,proto3" json:"ac_down_count_l3fib,omitempty"`
	AcDownCountVpdn              uint32   `protobuf:"varint,24,opt,name=ac_down_count_vpdn,json=acDownCountVpdn,proto3" json:"ac_down_count_vpdn,omitempty"`
	VpwsPwInvalidXidDropCount    uint32   `protobuf:"varint,25,opt,name=vpws_pw_invalid_xid_drop_count,json=vpwsPwInvalidXidDropCount,proto3" json:"vpws_pw_invalid_xid_drop_count,omitempty"`
	VplsPwInvalidXidDropCount    uint32   `protobuf:"varint,26,opt,name=vpls_pw_invalid_xid_drop_count,json=vplsPwInvalidXidDropCount,proto3" json:"vpls_pw_invalid_xid_drop_count,omitempty"`
	VirtualAcInvalidXidDropCount uint32   `protobuf:"varint,27,opt,name=virtual_ac_invalid_xid_drop_count,json=virtualAcInvalidXidDropCount,proto3" json:"virtual_ac_invalid_xid_drop_count,omitempty"`
	PbbInvalidXidDropCount       uint32   `protobuf:"varint,28,opt,name=pbb_invalid_xid_drop_count,json=pbbInvalidXidDropCount,proto3" json:"pbb_invalid_xid_drop_count,omitempty"`
	VniInvalidXidDropCount       uint32   `protobuf:"varint,29,opt,name=vni_invalid_xid_drop_count,json=vniInvalidXidDropCount,proto3" json:"vni_invalid_xid_drop_count,omitempty"`
	EvpnInvalidXidDropCount      uint32   `protobuf:"varint,30,opt,name=evpn_invalid_xid_drop_count,json=evpnInvalidXidDropCount,proto3" json:"evpn_invalid_xid_drop_count,omitempty"`
	VplsPwMaxExceededDropCnt     uint32   `protobuf:"varint,31,opt,name=vpls_pw_max_exceeded_drop_cnt,json=vplsPwMaxExceededDropCnt,proto3" json:"vpls_pw_max_exceeded_drop_cnt,omitempty"`
	BundleAcMaxExceededDropCnt   uint32   `protobuf:"varint,32,opt,name=bundle_ac_max_exceeded_drop_cnt,json=bundleAcMaxExceededDropCnt,proto3" json:"bundle_ac_max_exceeded_drop_cnt,omitempty"`
	P2PCount                     uint32   `protobuf:"varint,33,opt,name=p2p_count,json=p2pCount,proto3" json:"p2p_count,omitempty"`
	BpCount                      uint32   `protobuf:"varint,34,opt,name=bp_count,json=bpCount,proto3" json:"bp_count,omitempty"`
	PwheL2IfCount                uint32   `protobuf:"varint,35,opt,name=pwhe_l2_if_count,json=pwheL2IfCount,proto3" json:"pwhe_l2_if_count,omitempty"`
	XXX_NoUnkeyedLiteral         struct{} `json:"-"`
	XXX_unrecognized             []byte   `json:"-"`
	XXX_sizecache                int32    `json:"-"`
}

func (m *L2FibXcSummaryInfo) Reset()         { *m = L2FibXcSummaryInfo{} }
func (m *L2FibXcSummaryInfo) String() string { return proto.CompactTextString(m) }
func (*L2FibXcSummaryInfo) ProtoMessage()    {}
func (*L2FibXcSummaryInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_eefd3acbef13d045, []int{1}
}

func (m *L2FibXcSummaryInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_L2FibXcSummaryInfo.Unmarshal(m, b)
}
func (m *L2FibXcSummaryInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_L2FibXcSummaryInfo.Marshal(b, m, deterministic)
}
func (m *L2FibXcSummaryInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_L2FibXcSummaryInfo.Merge(m, src)
}
func (m *L2FibXcSummaryInfo) XXX_Size() int {
	return xxx_messageInfo_L2FibXcSummaryInfo.Size(m)
}
func (m *L2FibXcSummaryInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_L2FibXcSummaryInfo.DiscardUnknown(m)
}

var xxx_messageInfo_L2FibXcSummaryInfo proto.InternalMessageInfo

func (m *L2FibXcSummaryInfo) GetXconnectCount() uint32 {
	if m != nil {
		return m.XconnectCount
	}
	return 0
}

func (m *L2FibXcSummaryInfo) GetXconnectUpCount() uint32 {
	if m != nil {
		return m.XconnectUpCount
	}
	return 0
}

func (m *L2FibXcSummaryInfo) GetXconnectDownCount() uint32 {
	if m != nil {
		return m.XconnectDownCount
	}
	return 0
}

func (m *L2FibXcSummaryInfo) GetAcToPwCountMpls() uint32 {
	if m != nil {
		return m.AcToPwCountMpls
	}
	return 0
}

func (m *L2FibXcSummaryInfo) GetAcToPwCountL2Tp() uint32 {
	if m != nil {
		return m.AcToPwCountL2Tp
	}
	return 0
}

func (m *L2FibXcSummaryInfo) GetAcToPwCountL2TpIpV6() uint32 {
	if m != nil {
		return m.AcToPwCountL2TpIpV6
	}
	return 0
}

func (m *L2FibXcSummaryInfo) GetAcToPwCountL2Tpv2() uint32 {
	if m != nil {
		return m.AcToPwCountL2Tpv2
	}
	return 0
}

func (m *L2FibXcSummaryInfo) GetAcToAcCount() uint32 {
	if m != nil {
		return m.AcToAcCount
	}
	return 0
}

func (m *L2FibXcSummaryInfo) GetAcToUnknownCount() uint32 {
	if m != nil {
		return m.AcToUnknownCount
	}
	return 0
}

func (m *L2FibXcSummaryInfo) GetMonSessToPwCount() uint32 {
	if m != nil {
		return m.MonSessToPwCount
	}
	return 0
}

func (m *L2FibXcSummaryInfo) GetMonSessToUnknownCount() uint32 {
	if m != nil {
		return m.MonSessToUnknownCount
	}
	return 0
}

func (m *L2FibXcSummaryInfo) GetAcToBpCount() uint32 {
	if m != nil {
		return m.AcToBpCount
	}
	return 0
}

func (m *L2FibXcSummaryInfo) GetPwToBpCount() uint32 {
	if m != nil {
		return m.PwToBpCount
	}
	return 0
}

func (m *L2FibXcSummaryInfo) GetPwToUnknownCount() uint32 {
	if m != nil {
		return m.PwToUnknownCount
	}
	return 0
}

func (m *L2FibXcSummaryInfo) GetPbbToBpCount() uint32 {
	if m != nil {
		return m.PbbToBpCount
	}
	return 0
}

func (m *L2FibXcSummaryInfo) GetPbbToUnknownCount() uint32 {
	if m != nil {
		return m.PbbToUnknownCount
	}
	return 0
}

func (m *L2FibXcSummaryInfo) GetVniToBpCount() uint32 {
	if m != nil {
		return m.VniToBpCount
	}
	return 0
}

func (m *L2FibXcSummaryInfo) GetVniToUnknownCount() uint32 {
	if m != nil {
		return m.VniToUnknownCount
	}
	return 0
}

func (m *L2FibXcSummaryInfo) GetEvpnToBpCount() uint32 {
	if m != nil {
		return m.EvpnToBpCount
	}
	return 0
}

func (m *L2FibXcSummaryInfo) GetEvpnToUnknownCount() uint32 {
	if m != nil {
		return m.EvpnToUnknownCount
	}
	return 0
}

func (m *L2FibXcSummaryInfo) GetAcDownCountAib() uint32 {
	if m != nil {
		return m.AcDownCountAib
	}
	return 0
}

func (m *L2FibXcSummaryInfo) GetAcDownCountL2Vpn() uint32 {
	if m != nil {
		return m.AcDownCountL2Vpn
	}
	return 0
}

func (m *L2FibXcSummaryInfo) GetAcDownCountL3Fib() uint32 {
	if m != nil {
		return m.AcDownCountL3Fib
	}
	return 0
}

func (m *L2FibXcSummaryInfo) GetAcDownCountVpdn() uint32 {
	if m != nil {
		return m.AcDownCountVpdn
	}
	return 0
}

func (m *L2FibXcSummaryInfo) GetVpwsPwInvalidXidDropCount() uint32 {
	if m != nil {
		return m.VpwsPwInvalidXidDropCount
	}
	return 0
}

func (m *L2FibXcSummaryInfo) GetVplsPwInvalidXidDropCount() uint32 {
	if m != nil {
		return m.VplsPwInvalidXidDropCount
	}
	return 0
}

func (m *L2FibXcSummaryInfo) GetVirtualAcInvalidXidDropCount() uint32 {
	if m != nil {
		return m.VirtualAcInvalidXidDropCount
	}
	return 0
}

func (m *L2FibXcSummaryInfo) GetPbbInvalidXidDropCount() uint32 {
	if m != nil {
		return m.PbbInvalidXidDropCount
	}
	return 0
}

func (m *L2FibXcSummaryInfo) GetVniInvalidXidDropCount() uint32 {
	if m != nil {
		return m.VniInvalidXidDropCount
	}
	return 0
}

func (m *L2FibXcSummaryInfo) GetEvpnInvalidXidDropCount() uint32 {
	if m != nil {
		return m.EvpnInvalidXidDropCount
	}
	return 0
}

func (m *L2FibXcSummaryInfo) GetVplsPwMaxExceededDropCnt() uint32 {
	if m != nil {
		return m.VplsPwMaxExceededDropCnt
	}
	return 0
}

func (m *L2FibXcSummaryInfo) GetBundleAcMaxExceededDropCnt() uint32 {
	if m != nil {
		return m.BundleAcMaxExceededDropCnt
	}
	return 0
}

func (m *L2FibXcSummaryInfo) GetP2PCount() uint32 {
	if m != nil {
		return m.P2PCount
	}
	return 0
}

func (m *L2FibXcSummaryInfo) GetBpCount() uint32 {
	if m != nil {
		return m.BpCount
	}
	return 0
}

func (m *L2FibXcSummaryInfo) GetPwheL2IfCount() uint32 {
	if m != nil {
		return m.PwheL2IfCount
	}
	return 0
}

type L2FibNhSummaryInfo2 struct {
	NextHopCount                    uint32   `protobuf:"varint,1,opt,name=next_hop_count,json=nextHopCount,proto3" json:"next_hop_count,omitempty"`
	BoundNextHopCount               uint32   `protobuf:"varint,2,opt,name=bound_next_hop_count,json=boundNextHopCount,proto3" json:"bound_next_hop_count,omitempty"`
	UnboundNextHopCount             uint32   `protobuf:"varint,3,opt,name=unbound_next_hop_count,json=unboundNextHopCount,proto3" json:"unbound_next_hop_count,omitempty"`
	NextHopPendingRegistrationCount uint32   `protobuf:"varint,4,opt,name=next_hop_pending_registration_count,json=nextHopPendingRegistrationCount,proto3" json:"next_hop_pending_registration_count,omitempty"`
	XXX_NoUnkeyedLiteral            struct{} `json:"-"`
	XXX_unrecognized                []byte   `json:"-"`
	XXX_sizecache                   int32    `json:"-"`
}

func (m *L2FibNhSummaryInfo2) Reset()         { *m = L2FibNhSummaryInfo2{} }
func (m *L2FibNhSummaryInfo2) String() string { return proto.CompactTextString(m) }
func (*L2FibNhSummaryInfo2) ProtoMessage()    {}
func (*L2FibNhSummaryInfo2) Descriptor() ([]byte, []int) {
	return fileDescriptor_eefd3acbef13d045, []int{2}
}

func (m *L2FibNhSummaryInfo2) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_L2FibNhSummaryInfo2.Unmarshal(m, b)
}
func (m *L2FibNhSummaryInfo2) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_L2FibNhSummaryInfo2.Marshal(b, m, deterministic)
}
func (m *L2FibNhSummaryInfo2) XXX_Merge(src proto.Message) {
	xxx_messageInfo_L2FibNhSummaryInfo2.Merge(m, src)
}
func (m *L2FibNhSummaryInfo2) XXX_Size() int {
	return xxx_messageInfo_L2FibNhSummaryInfo2.Size(m)
}
func (m *L2FibNhSummaryInfo2) XXX_DiscardUnknown() {
	xxx_messageInfo_L2FibNhSummaryInfo2.DiscardUnknown(m)
}

var xxx_messageInfo_L2FibNhSummaryInfo2 proto.InternalMessageInfo

func (m *L2FibNhSummaryInfo2) GetNextHopCount() uint32 {
	if m != nil {
		return m.NextHopCount
	}
	return 0
}

func (m *L2FibNhSummaryInfo2) GetBoundNextHopCount() uint32 {
	if m != nil {
		return m.BoundNextHopCount
	}
	return 0
}

func (m *L2FibNhSummaryInfo2) GetUnboundNextHopCount() uint32 {
	if m != nil {
		return m.UnboundNextHopCount
	}
	return 0
}

func (m *L2FibNhSummaryInfo2) GetNextHopPendingRegistrationCount() uint32 {
	if m != nil {
		return m.NextHopPendingRegistrationCount
	}
	return 0
}

type L2FibNhSummaryInfo struct {
	MplsIl               *L2FibNhSummaryInfo2 `protobuf:"bytes,1,opt,name=mpls_il,json=mplsIl,proto3" json:"mpls_il,omitempty"`
	Mpls                 *L2FibNhSummaryInfo2 `protobuf:"bytes,2,opt,name=mpls,proto3" json:"mpls,omitempty"`
	L2Tp                 *L2FibNhSummaryInfo2 `protobuf:"bytes,3,opt,name=l2tp,proto3" json:"l2tp,omitempty"`
	Lsm                  *L2FibNhSummaryInfo2 `protobuf:"bytes,4,opt,name=lsm,proto3" json:"lsm,omitempty"`
	P2MpTunnels          *L2FibNhSummaryInfo2 `protobuf:"bytes,5,opt,name=p2mp_tunnels,json=p2mpTunnels,proto3" json:"p2mp_tunnels,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *L2FibNhSummaryInfo) Reset()         { *m = L2FibNhSummaryInfo{} }
func (m *L2FibNhSummaryInfo) String() string { return proto.CompactTextString(m) }
func (*L2FibNhSummaryInfo) ProtoMessage()    {}
func (*L2FibNhSummaryInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_eefd3acbef13d045, []int{3}
}

func (m *L2FibNhSummaryInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_L2FibNhSummaryInfo.Unmarshal(m, b)
}
func (m *L2FibNhSummaryInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_L2FibNhSummaryInfo.Marshal(b, m, deterministic)
}
func (m *L2FibNhSummaryInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_L2FibNhSummaryInfo.Merge(m, src)
}
func (m *L2FibNhSummaryInfo) XXX_Size() int {
	return xxx_messageInfo_L2FibNhSummaryInfo.Size(m)
}
func (m *L2FibNhSummaryInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_L2FibNhSummaryInfo.DiscardUnknown(m)
}

var xxx_messageInfo_L2FibNhSummaryInfo proto.InternalMessageInfo

func (m *L2FibNhSummaryInfo) GetMplsIl() *L2FibNhSummaryInfo2 {
	if m != nil {
		return m.MplsIl
	}
	return nil
}

func (m *L2FibNhSummaryInfo) GetMpls() *L2FibNhSummaryInfo2 {
	if m != nil {
		return m.Mpls
	}
	return nil
}

func (m *L2FibNhSummaryInfo) GetL2Tp() *L2FibNhSummaryInfo2 {
	if m != nil {
		return m.L2Tp
	}
	return nil
}

func (m *L2FibNhSummaryInfo) GetLsm() *L2FibNhSummaryInfo2 {
	if m != nil {
		return m.Lsm
	}
	return nil
}

func (m *L2FibNhSummaryInfo) GetP2MpTunnels() *L2FibNhSummaryInfo2 {
	if m != nil {
		return m.P2MpTunnels
	}
	return nil
}

type L2FibL2TpDispSummaryInfo struct {
	L2TpDispositionSessionCount        uint32   `protobuf:"varint,1,opt,name=l2tp_disposition_session_count,json=l2tpDispositionSessionCount,proto3" json:"l2tp_disposition_session_count,omitempty"`
	BoundL2TpDispositionSessionCount   uint32   `protobuf:"varint,2,opt,name=bound_l2tp_disposition_session_count,json=boundL2tpDispositionSessionCount,proto3" json:"bound_l2tp_disposition_session_count,omitempty"`
	UnboundL2TpDispositionSessionCount uint32   `protobuf:"varint,3,opt,name=unbound_l2tp_disposition_session_count,json=unboundL2tpDispositionSessionCount,proto3" json:"unbound_l2tp_disposition_session_count,omitempty"`
	XXX_NoUnkeyedLiteral               struct{} `json:"-"`
	XXX_unrecognized                   []byte   `json:"-"`
	XXX_sizecache                      int32    `json:"-"`
}

func (m *L2FibL2TpDispSummaryInfo) Reset()         { *m = L2FibL2TpDispSummaryInfo{} }
func (m *L2FibL2TpDispSummaryInfo) String() string { return proto.CompactTextString(m) }
func (*L2FibL2TpDispSummaryInfo) ProtoMessage()    {}
func (*L2FibL2TpDispSummaryInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_eefd3acbef13d045, []int{4}
}

func (m *L2FibL2TpDispSummaryInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_L2FibL2TpDispSummaryInfo.Unmarshal(m, b)
}
func (m *L2FibL2TpDispSummaryInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_L2FibL2TpDispSummaryInfo.Marshal(b, m, deterministic)
}
func (m *L2FibL2TpDispSummaryInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_L2FibL2TpDispSummaryInfo.Merge(m, src)
}
func (m *L2FibL2TpDispSummaryInfo) XXX_Size() int {
	return xxx_messageInfo_L2FibL2TpDispSummaryInfo.Size(m)
}
func (m *L2FibL2TpDispSummaryInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_L2FibL2TpDispSummaryInfo.DiscardUnknown(m)
}

var xxx_messageInfo_L2FibL2TpDispSummaryInfo proto.InternalMessageInfo

func (m *L2FibL2TpDispSummaryInfo) GetL2TpDispositionSessionCount() uint32 {
	if m != nil {
		return m.L2TpDispositionSessionCount
	}
	return 0
}

func (m *L2FibL2TpDispSummaryInfo) GetBoundL2TpDispositionSessionCount() uint32 {
	if m != nil {
		return m.BoundL2TpDispositionSessionCount
	}
	return 0
}

func (m *L2FibL2TpDispSummaryInfo) GetUnboundL2TpDispositionSessionCount() uint32 {
	if m != nil {
		return m.UnboundL2TpDispositionSessionCount
	}
	return 0
}

type L2FibBdSummaryInfo struct {
	BridgeDomainCount              uint32   `protobuf:"varint,1,opt,name=bridge_domain_count,json=bridgeDomainCount,proto3" json:"bridge_domain_count,omitempty"`
	BridgeDomainDropCount          uint32   `protobuf:"varint,2,opt,name=bridge_domain_drop_count,json=bridgeDomainDropCount,proto3" json:"bridge_domain_drop_count,omitempty"`
	BridgeDomainWithBviCount       uint32   `protobuf:"varint,3,opt,name=bridge_domain_with_bvi_count,json=bridgeDomainWithBviCount,proto3" json:"bridge_domain_with_bvi_count,omitempty"`
	BridgeDomainWithP2MpEnabled    uint32   `protobuf:"varint,4,opt,name=bridge_domain_with_p2mp_enabled,json=bridgeDomainWithP2mpEnabled,proto3" json:"bridge_domain_with_p2mp_enabled,omitempty"`
	BridgeDomainWithPbbevpnEnabled uint32   `protobuf:"varint,5,opt,name=bridge_domain_with_pbbevpn_enabled,json=bridgeDomainWithPbbevpnEnabled,proto3" json:"bridge_domain_with_pbbevpn_enabled,omitempty"`
	BridgeDomainWithEvpnEnabled    uint32   `protobuf:"varint,6,opt,name=bridge_domain_with_evpn_enabled,json=bridgeDomainWithEvpnEnabled,proto3" json:"bridge_domain_with_evpn_enabled,omitempty"`
	XXX_NoUnkeyedLiteral           struct{} `json:"-"`
	XXX_unrecognized               []byte   `json:"-"`
	XXX_sizecache                  int32    `json:"-"`
}

func (m *L2FibBdSummaryInfo) Reset()         { *m = L2FibBdSummaryInfo{} }
func (m *L2FibBdSummaryInfo) String() string { return proto.CompactTextString(m) }
func (*L2FibBdSummaryInfo) ProtoMessage()    {}
func (*L2FibBdSummaryInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_eefd3acbef13d045, []int{5}
}

func (m *L2FibBdSummaryInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_L2FibBdSummaryInfo.Unmarshal(m, b)
}
func (m *L2FibBdSummaryInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_L2FibBdSummaryInfo.Marshal(b, m, deterministic)
}
func (m *L2FibBdSummaryInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_L2FibBdSummaryInfo.Merge(m, src)
}
func (m *L2FibBdSummaryInfo) XXX_Size() int {
	return xxx_messageInfo_L2FibBdSummaryInfo.Size(m)
}
func (m *L2FibBdSummaryInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_L2FibBdSummaryInfo.DiscardUnknown(m)
}

var xxx_messageInfo_L2FibBdSummaryInfo proto.InternalMessageInfo

func (m *L2FibBdSummaryInfo) GetBridgeDomainCount() uint32 {
	if m != nil {
		return m.BridgeDomainCount
	}
	return 0
}

func (m *L2FibBdSummaryInfo) GetBridgeDomainDropCount() uint32 {
	if m != nil {
		return m.BridgeDomainDropCount
	}
	return 0
}

func (m *L2FibBdSummaryInfo) GetBridgeDomainWithBviCount() uint32 {
	if m != nil {
		return m.BridgeDomainWithBviCount
	}
	return 0
}

func (m *L2FibBdSummaryInfo) GetBridgeDomainWithP2MpEnabled() uint32 {
	if m != nil {
		return m.BridgeDomainWithP2MpEnabled
	}
	return 0
}

func (m *L2FibBdSummaryInfo) GetBridgeDomainWithPbbevpnEnabled() uint32 {
	if m != nil {
		return m.BridgeDomainWithPbbevpnEnabled
	}
	return 0
}

func (m *L2FibBdSummaryInfo) GetBridgeDomainWithEvpnEnabled() uint32 {
	if m != nil {
		return m.BridgeDomainWithEvpnEnabled
	}
	return 0
}

type L2FibMacSummaryInfo struct {
	LocalMacCount        uint32   `protobuf:"varint,1,opt,name=local_mac_count,json=localMacCount,proto3" json:"local_mac_count,omitempty"`
	RemoteMacCount       uint32   `protobuf:"varint,2,opt,name=remote_mac_count,json=remoteMacCount,proto3" json:"remote_mac_count,omitempty"`
	StaticMacCount       uint32   `protobuf:"varint,3,opt,name=static_mac_count,json=staticMacCount,proto3" json:"static_mac_count,omitempty"`
	RoutedMacCount       uint32   `protobuf:"varint,4,opt,name=routed_mac_count,json=routedMacCount,proto3" json:"routed_mac_count,omitempty"`
	MacCount             uint32   `protobuf:"varint,5,opt,name=mac_count,json=macCount,proto3" json:"mac_count,omitempty"`
	SbmacCount           uint32   `protobuf:"varint,6,opt,name=sbmac_count,json=sbmacCount,proto3" json:"sbmac_count,omitempty"`
	BmacCount            uint32   `protobuf:"varint,7,opt,name=bmac_count,json=bmacCount,proto3" json:"bmac_count,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *L2FibMacSummaryInfo) Reset()         { *m = L2FibMacSummaryInfo{} }
func (m *L2FibMacSummaryInfo) String() string { return proto.CompactTextString(m) }
func (*L2FibMacSummaryInfo) ProtoMessage()    {}
func (*L2FibMacSummaryInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_eefd3acbef13d045, []int{6}
}

func (m *L2FibMacSummaryInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_L2FibMacSummaryInfo.Unmarshal(m, b)
}
func (m *L2FibMacSummaryInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_L2FibMacSummaryInfo.Marshal(b, m, deterministic)
}
func (m *L2FibMacSummaryInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_L2FibMacSummaryInfo.Merge(m, src)
}
func (m *L2FibMacSummaryInfo) XXX_Size() int {
	return xxx_messageInfo_L2FibMacSummaryInfo.Size(m)
}
func (m *L2FibMacSummaryInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_L2FibMacSummaryInfo.DiscardUnknown(m)
}

var xxx_messageInfo_L2FibMacSummaryInfo proto.InternalMessageInfo

func (m *L2FibMacSummaryInfo) GetLocalMacCount() uint32 {
	if m != nil {
		return m.LocalMacCount
	}
	return 0
}

func (m *L2FibMacSummaryInfo) GetRemoteMacCount() uint32 {
	if m != nil {
		return m.RemoteMacCount
	}
	return 0
}

func (m *L2FibMacSummaryInfo) GetStaticMacCount() uint32 {
	if m != nil {
		return m.StaticMacCount
	}
	return 0
}

func (m *L2FibMacSummaryInfo) GetRoutedMacCount() uint32 {
	if m != nil {
		return m.RoutedMacCount
	}
	return 0
}

func (m *L2FibMacSummaryInfo) GetMacCount() uint32 {
	if m != nil {
		return m.MacCount
	}
	return 0
}

func (m *L2FibMacSummaryInfo) GetSbmacCount() uint32 {
	if m != nil {
		return m.SbmacCount
	}
	return 0
}

func (m *L2FibMacSummaryInfo) GetBmacCount() uint32 {
	if m != nil {
		return m.BmacCount
	}
	return 0
}

type L2FibObjQueuesSummary struct {
	InlineCnt            uint32   `protobuf:"varint,1,opt,name=inline_cnt,json=inlineCnt,proto3" json:"inline_cnt,omitempty"`
	RetryCnt             uint32   `protobuf:"varint,2,opt,name=retry_cnt,json=retryCnt,proto3" json:"retry_cnt,omitempty"`
	UpdateCnt            uint32   `protobuf:"varint,3,opt,name=update_cnt,json=updateCnt,proto3" json:"update_cnt,omitempty"`
	DelCnt               uint32   `protobuf:"varint,4,opt,name=del_cnt,json=delCnt,proto3" json:"del_cnt,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *L2FibObjQueuesSummary) Reset()         { *m = L2FibObjQueuesSummary{} }
func (m *L2FibObjQueuesSummary) String() string { return proto.CompactTextString(m) }
func (*L2FibObjQueuesSummary) ProtoMessage()    {}
func (*L2FibObjQueuesSummary) Descriptor() ([]byte, []int) {
	return fileDescriptor_eefd3acbef13d045, []int{7}
}

func (m *L2FibObjQueuesSummary) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_L2FibObjQueuesSummary.Unmarshal(m, b)
}
func (m *L2FibObjQueuesSummary) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_L2FibObjQueuesSummary.Marshal(b, m, deterministic)
}
func (m *L2FibObjQueuesSummary) XXX_Merge(src proto.Message) {
	xxx_messageInfo_L2FibObjQueuesSummary.Merge(m, src)
}
func (m *L2FibObjQueuesSummary) XXX_Size() int {
	return xxx_messageInfo_L2FibObjQueuesSummary.Size(m)
}
func (m *L2FibObjQueuesSummary) XXX_DiscardUnknown() {
	xxx_messageInfo_L2FibObjQueuesSummary.DiscardUnknown(m)
}

var xxx_messageInfo_L2FibObjQueuesSummary proto.InternalMessageInfo

func (m *L2FibObjQueuesSummary) GetInlineCnt() uint32 {
	if m != nil {
		return m.InlineCnt
	}
	return 0
}

func (m *L2FibObjQueuesSummary) GetRetryCnt() uint32 {
	if m != nil {
		return m.RetryCnt
	}
	return 0
}

func (m *L2FibObjQueuesSummary) GetUpdateCnt() uint32 {
	if m != nil {
		return m.UpdateCnt
	}
	return 0
}

func (m *L2FibObjQueuesSummary) GetDelCnt() uint32 {
	if m != nil {
		return m.DelCnt
	}
	return 0
}

type L2FibEvpnSummaryInfo struct {
	TotalCount           uint32   `protobuf:"varint,1,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	IsidCount            uint32   `protobuf:"varint,2,opt,name=isid_count,json=isidCount,proto3" json:"isid_count,omitempty"`
	DefaultCount         uint32   `protobuf:"varint,3,opt,name=default_count,json=defaultCount,proto3" json:"default_count,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *L2FibEvpnSummaryInfo) Reset()         { *m = L2FibEvpnSummaryInfo{} }
func (m *L2FibEvpnSummaryInfo) String() string { return proto.CompactTextString(m) }
func (*L2FibEvpnSummaryInfo) ProtoMessage()    {}
func (*L2FibEvpnSummaryInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_eefd3acbef13d045, []int{8}
}

func (m *L2FibEvpnSummaryInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_L2FibEvpnSummaryInfo.Unmarshal(m, b)
}
func (m *L2FibEvpnSummaryInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_L2FibEvpnSummaryInfo.Marshal(b, m, deterministic)
}
func (m *L2FibEvpnSummaryInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_L2FibEvpnSummaryInfo.Merge(m, src)
}
func (m *L2FibEvpnSummaryInfo) XXX_Size() int {
	return xxx_messageInfo_L2FibEvpnSummaryInfo.Size(m)
}
func (m *L2FibEvpnSummaryInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_L2FibEvpnSummaryInfo.DiscardUnknown(m)
}

var xxx_messageInfo_L2FibEvpnSummaryInfo proto.InternalMessageInfo

func (m *L2FibEvpnSummaryInfo) GetTotalCount() uint32 {
	if m != nil {
		return m.TotalCount
	}
	return 0
}

func (m *L2FibEvpnSummaryInfo) GetIsidCount() uint32 {
	if m != nil {
		return m.IsidCount
	}
	return 0
}

func (m *L2FibEvpnSummaryInfo) GetDefaultCount() uint32 {
	if m != nil {
		return m.DefaultCount
	}
	return 0
}

type L2FibBaseInfo struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *L2FibBaseInfo) Reset()         { *m = L2FibBaseInfo{} }
func (m *L2FibBaseInfo) String() string { return proto.CompactTextString(m) }
func (*L2FibBaseInfo) ProtoMessage()    {}
func (*L2FibBaseInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_eefd3acbef13d045, []int{9}
}

func (m *L2FibBaseInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_L2FibBaseInfo.Unmarshal(m, b)
}
func (m *L2FibBaseInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_L2FibBaseInfo.Marshal(b, m, deterministic)
}
func (m *L2FibBaseInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_L2FibBaseInfo.Merge(m, src)
}
func (m *L2FibBaseInfo) XXX_Size() int {
	return xxx_messageInfo_L2FibBaseInfo.Size(m)
}
func (m *L2FibBaseInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_L2FibBaseInfo.DiscardUnknown(m)
}

var xxx_messageInfo_L2FibBaseInfo proto.InternalMessageInfo

type L2FibGlobalCfgInfo struct {
	Base                  *L2FibBaseInfo `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	LoadBalanceType       string         `protobuf:"bytes,2,opt,name=load_balance_type,json=loadBalanceType,proto3" json:"load_balance_type,omitempty"`
	EvpnImcLabelBlockBase uint32         `protobuf:"varint,3,opt,name=evpn_imc_label_block_base,json=evpnImcLabelBlockBase,proto3" json:"evpn_imc_label_block_base,omitempty"`
	EvpnImcLabelBlockSize uint32         `protobuf:"varint,4,opt,name=evpn_imc_label_block_size,json=evpnImcLabelBlockSize,proto3" json:"evpn_imc_label_block_size,omitempty"`
	XXX_NoUnkeyedLiteral  struct{}       `json:"-"`
	XXX_unrecognized      []byte         `json:"-"`
	XXX_sizecache         int32          `json:"-"`
}

func (m *L2FibGlobalCfgInfo) Reset()         { *m = L2FibGlobalCfgInfo{} }
func (m *L2FibGlobalCfgInfo) String() string { return proto.CompactTextString(m) }
func (*L2FibGlobalCfgInfo) ProtoMessage()    {}
func (*L2FibGlobalCfgInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_eefd3acbef13d045, []int{10}
}

func (m *L2FibGlobalCfgInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_L2FibGlobalCfgInfo.Unmarshal(m, b)
}
func (m *L2FibGlobalCfgInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_L2FibGlobalCfgInfo.Marshal(b, m, deterministic)
}
func (m *L2FibGlobalCfgInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_L2FibGlobalCfgInfo.Merge(m, src)
}
func (m *L2FibGlobalCfgInfo) XXX_Size() int {
	return xxx_messageInfo_L2FibGlobalCfgInfo.Size(m)
}
func (m *L2FibGlobalCfgInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_L2FibGlobalCfgInfo.DiscardUnknown(m)
}

var xxx_messageInfo_L2FibGlobalCfgInfo proto.InternalMessageInfo

func (m *L2FibGlobalCfgInfo) GetBase() *L2FibBaseInfo {
	if m != nil {
		return m.Base
	}
	return nil
}

func (m *L2FibGlobalCfgInfo) GetLoadBalanceType() string {
	if m != nil {
		return m.LoadBalanceType
	}
	return ""
}

func (m *L2FibGlobalCfgInfo) GetEvpnImcLabelBlockBase() uint32 {
	if m != nil {
		return m.EvpnImcLabelBlockBase
	}
	return 0
}

func (m *L2FibGlobalCfgInfo) GetEvpnImcLabelBlockSize() uint32 {
	if m != nil {
		return m.EvpnImcLabelBlockSize
	}
	return 0
}

type L2FibPtreeSummaryInfo struct {
	TotalPtreeCount         uint32   `protobuf:"varint,1,opt,name=total_ptree_count,json=totalPtreeCount,proto3" json:"total_ptree_count,omitempty"`
	MldpEnabledPtreeCount   uint32   `protobuf:"varint,2,opt,name=mldp_enabled_ptree_count,json=mldpEnabledPtreeCount,proto3" json:"mldp_enabled_ptree_count,omitempty"`
	LmribMldpPtreeCount     uint32   `protobuf:"varint,3,opt,name=lmrib_mldp_ptree_count,json=lmribMldpPtreeCount,proto3" json:"lmrib_mldp_ptree_count,omitempty"`
	RsvpTeEnabledPtreeCount uint32   `protobuf:"varint,4,opt,name=rsvp_te_enabled_ptree_count,json=rsvpTeEnabledPtreeCount,proto3" json:"rsvp_te_enabled_ptree_count,omitempty"`
	LmribRsvpTePtreeCount   uint32   `protobuf:"varint,5,opt,name=lmrib_rsvp_te_ptree_count,json=lmribRsvpTePtreeCount,proto3" json:"lmrib_rsvp_te_ptree_count,omitempty"`
	XXX_NoUnkeyedLiteral    struct{} `json:"-"`
	XXX_unrecognized        []byte   `json:"-"`
	XXX_sizecache           int32    `json:"-"`
}

func (m *L2FibPtreeSummaryInfo) Reset()         { *m = L2FibPtreeSummaryInfo{} }
func (m *L2FibPtreeSummaryInfo) String() string { return proto.CompactTextString(m) }
func (*L2FibPtreeSummaryInfo) ProtoMessage()    {}
func (*L2FibPtreeSummaryInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_eefd3acbef13d045, []int{11}
}

func (m *L2FibPtreeSummaryInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_L2FibPtreeSummaryInfo.Unmarshal(m, b)
}
func (m *L2FibPtreeSummaryInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_L2FibPtreeSummaryInfo.Marshal(b, m, deterministic)
}
func (m *L2FibPtreeSummaryInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_L2FibPtreeSummaryInfo.Merge(m, src)
}
func (m *L2FibPtreeSummaryInfo) XXX_Size() int {
	return xxx_messageInfo_L2FibPtreeSummaryInfo.Size(m)
}
func (m *L2FibPtreeSummaryInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_L2FibPtreeSummaryInfo.DiscardUnknown(m)
}

var xxx_messageInfo_L2FibPtreeSummaryInfo proto.InternalMessageInfo

func (m *L2FibPtreeSummaryInfo) GetTotalPtreeCount() uint32 {
	if m != nil {
		return m.TotalPtreeCount
	}
	return 0
}

func (m *L2FibPtreeSummaryInfo) GetMldpEnabledPtreeCount() uint32 {
	if m != nil {
		return m.MldpEnabledPtreeCount
	}
	return 0
}

func (m *L2FibPtreeSummaryInfo) GetLmribMldpPtreeCount() uint32 {
	if m != nil {
		return m.LmribMldpPtreeCount
	}
	return 0
}

func (m *L2FibPtreeSummaryInfo) GetRsvpTeEnabledPtreeCount() uint32 {
	if m != nil {
		return m.RsvpTeEnabledPtreeCount
	}
	return 0
}

func (m *L2FibPtreeSummaryInfo) GetLmribRsvpTePtreeCount() uint32 {
	if m != nil {
		return m.LmribRsvpTePtreeCount
	}
	return 0
}

type L2FibPwgroupSummaryInfo struct {
	PlatGroupingSupported bool     `protobuf:"varint,1,opt,name=plat_grouping_supported,json=platGroupingSupported,proto3" json:"plat_grouping_supported,omitempty"`
	TotalPwGroups         uint32   `protobuf:"varint,2,opt,name=total_pw_groups,json=totalPwGroups,proto3" json:"total_pw_groups,omitempty"`
	PwGroupsDown          uint32   `protobuf:"varint,3,opt,name=pw_groups_down,json=pwGroupsDown,proto3" json:"pw_groups_down,omitempty"`
	XXX_NoUnkeyedLiteral  struct{} `json:"-"`
	XXX_unrecognized      []byte   `json:"-"`
	XXX_sizecache         int32    `json:"-"`
}

func (m *L2FibPwgroupSummaryInfo) Reset()         { *m = L2FibPwgroupSummaryInfo{} }
func (m *L2FibPwgroupSummaryInfo) String() string { return proto.CompactTextString(m) }
func (*L2FibPwgroupSummaryInfo) ProtoMessage()    {}
func (*L2FibPwgroupSummaryInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_eefd3acbef13d045, []int{12}
}

func (m *L2FibPwgroupSummaryInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_L2FibPwgroupSummaryInfo.Unmarshal(m, b)
}
func (m *L2FibPwgroupSummaryInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_L2FibPwgroupSummaryInfo.Marshal(b, m, deterministic)
}
func (m *L2FibPwgroupSummaryInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_L2FibPwgroupSummaryInfo.Merge(m, src)
}
func (m *L2FibPwgroupSummaryInfo) XXX_Size() int {
	return xxx_messageInfo_L2FibPwgroupSummaryInfo.Size(m)
}
func (m *L2FibPwgroupSummaryInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_L2FibPwgroupSummaryInfo.DiscardUnknown(m)
}

var xxx_messageInfo_L2FibPwgroupSummaryInfo proto.InternalMessageInfo

func (m *L2FibPwgroupSummaryInfo) GetPlatGroupingSupported() bool {
	if m != nil {
		return m.PlatGroupingSupported
	}
	return false
}

func (m *L2FibPwgroupSummaryInfo) GetTotalPwGroups() uint32 {
	if m != nil {
		return m.TotalPwGroups
	}
	return 0
}

func (m *L2FibPwgroupSummaryInfo) GetPwGroupsDown() uint32 {
	if m != nil {
		return m.PwGroupsDown
	}
	return 0
}

type L2FibPwheMpSummaryInfo struct {
	TotalCount           uint32   `protobuf:"varint,1,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *L2FibPwheMpSummaryInfo) Reset()         { *m = L2FibPwheMpSummaryInfo{} }
func (m *L2FibPwheMpSummaryInfo) String() string { return proto.CompactTextString(m) }
func (*L2FibPwheMpSummaryInfo) ProtoMessage()    {}
func (*L2FibPwheMpSummaryInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_eefd3acbef13d045, []int{13}
}

func (m *L2FibPwheMpSummaryInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_L2FibPwheMpSummaryInfo.Unmarshal(m, b)
}
func (m *L2FibPwheMpSummaryInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_L2FibPwheMpSummaryInfo.Marshal(b, m, deterministic)
}
func (m *L2FibPwheMpSummaryInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_L2FibPwheMpSummaryInfo.Merge(m, src)
}
func (m *L2FibPwheMpSummaryInfo) XXX_Size() int {
	return xxx_messageInfo_L2FibPwheMpSummaryInfo.Size(m)
}
func (m *L2FibPwheMpSummaryInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_L2FibPwheMpSummaryInfo.DiscardUnknown(m)
}

var xxx_messageInfo_L2FibPwheMpSummaryInfo proto.InternalMessageInfo

func (m *L2FibPwheMpSummaryInfo) GetTotalCount() uint32 {
	if m != nil {
		return m.TotalCount
	}
	return 0
}

type L2FibSummaryInfo struct {
	XconnectSummary        *L2FibXcSummaryInfo       `protobuf:"bytes,50,opt,name=xconnect_summary,json=xconnectSummary,proto3" json:"xconnect_summary,omitempty"`
	NextHopSummary         *L2FibNhSummaryInfo       `protobuf:"bytes,51,opt,name=next_hop_summary,json=nextHopSummary,proto3" json:"next_hop_summary,omitempty"`
	L2TpDispositionSummary *L2FibL2TpDispSummaryInfo `protobuf:"bytes,52,opt,name=l2tp_disposition_summary,json=l2tpDispositionSummary,proto3" json:"l2tp_disposition_summary,omitempty"`
	BridgeDomainSummary    *L2FibBdSummaryInfo       `protobuf:"bytes,53,opt,name=bridge_domain_summary,json=bridgeDomainSummary,proto3" json:"bridge_domain_summary,omitempty"`
	MacSummary             *L2FibMacSummaryInfo      `protobuf:"bytes,54,opt,name=mac_summary,json=macSummary,proto3" json:"mac_summary,omitempty"`
	QueueSummary           *L2FibObjQueuesSummary    `protobuf:"bytes,55,opt,name=queue_summary,json=queueSummary,proto3" json:"queue_summary,omitempty"`
	EvpnSummary            *L2FibEvpnSummaryInfo     `protobuf:"bytes,56,opt,name=evpn_summary,json=evpnSummary,proto3" json:"evpn_summary,omitempty"`
	GlobalCfg              *L2FibGlobalCfgInfo       `protobuf:"bytes,57,opt,name=global_cfg,json=globalCfg,proto3" json:"global_cfg,omitempty"`
	PtreeSummary           *L2FibPtreeSummaryInfo    `protobuf:"bytes,58,opt,name=ptree_summary,json=ptreeSummary,proto3" json:"ptree_summary,omitempty"`
	PwGroupSummary         *L2FibPwgroupSummaryInfo  `protobuf:"bytes,59,opt,name=pw_group_summary,json=pwGroupSummary,proto3" json:"pw_group_summary,omitempty"`
	PwheMpSummary          *L2FibPwheMpSummaryInfo   `protobuf:"bytes,60,opt,name=pwhe_mp_summary,json=pwheMpSummary,proto3" json:"pwhe_mp_summary,omitempty"`
	XXX_NoUnkeyedLiteral   struct{}                  `json:"-"`
	XXX_unrecognized       []byte                    `json:"-"`
	XXX_sizecache          int32                     `json:"-"`
}

func (m *L2FibSummaryInfo) Reset()         { *m = L2FibSummaryInfo{} }
func (m *L2FibSummaryInfo) String() string { return proto.CompactTextString(m) }
func (*L2FibSummaryInfo) ProtoMessage()    {}
func (*L2FibSummaryInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_eefd3acbef13d045, []int{14}
}

func (m *L2FibSummaryInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_L2FibSummaryInfo.Unmarshal(m, b)
}
func (m *L2FibSummaryInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_L2FibSummaryInfo.Marshal(b, m, deterministic)
}
func (m *L2FibSummaryInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_L2FibSummaryInfo.Merge(m, src)
}
func (m *L2FibSummaryInfo) XXX_Size() int {
	return xxx_messageInfo_L2FibSummaryInfo.Size(m)
}
func (m *L2FibSummaryInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_L2FibSummaryInfo.DiscardUnknown(m)
}

var xxx_messageInfo_L2FibSummaryInfo proto.InternalMessageInfo

func (m *L2FibSummaryInfo) GetXconnectSummary() *L2FibXcSummaryInfo {
	if m != nil {
		return m.XconnectSummary
	}
	return nil
}

func (m *L2FibSummaryInfo) GetNextHopSummary() *L2FibNhSummaryInfo {
	if m != nil {
		return m.NextHopSummary
	}
	return nil
}

func (m *L2FibSummaryInfo) GetL2TpDispositionSummary() *L2FibL2TpDispSummaryInfo {
	if m != nil {
		return m.L2TpDispositionSummary
	}
	return nil
}

func (m *L2FibSummaryInfo) GetBridgeDomainSummary() *L2FibBdSummaryInfo {
	if m != nil {
		return m.BridgeDomainSummary
	}
	return nil
}

func (m *L2FibSummaryInfo) GetMacSummary() *L2FibMacSummaryInfo {
	if m != nil {
		return m.MacSummary
	}
	return nil
}

func (m *L2FibSummaryInfo) GetQueueSummary() *L2FibObjQueuesSummary {
	if m != nil {
		return m.QueueSummary
	}
	return nil
}

func (m *L2FibSummaryInfo) GetEvpnSummary() *L2FibEvpnSummaryInfo {
	if m != nil {
		return m.EvpnSummary
	}
	return nil
}

func (m *L2FibSummaryInfo) GetGlobalCfg() *L2FibGlobalCfgInfo {
	if m != nil {
		return m.GlobalCfg
	}
	return nil
}

func (m *L2FibSummaryInfo) GetPtreeSummary() *L2FibPtreeSummaryInfo {
	if m != nil {
		return m.PtreeSummary
	}
	return nil
}

func (m *L2FibSummaryInfo) GetPwGroupSummary() *L2FibPwgroupSummaryInfo {
	if m != nil {
		return m.PwGroupSummary
	}
	return nil
}

func (m *L2FibSummaryInfo) GetPwheMpSummary() *L2FibPwheMpSummaryInfo {
	if m != nil {
		return m.PwheMpSummary
	}
	return nil
}

func init() {
	proto.RegisterType((*L2FibSummaryInfo_KEYS)(nil), "cisco_ios_xr_l2vpn_oper.l2vpn_forwarding.nodes.node.l2fib_summary.l2fib_summary_info_KEYS")
	proto.RegisterType((*L2FibXcSummaryInfo)(nil), "cisco_ios_xr_l2vpn_oper.l2vpn_forwarding.nodes.node.l2fib_summary.l2fib_xc_summary_info")
	proto.RegisterType((*L2FibNhSummaryInfo2)(nil), "cisco_ios_xr_l2vpn_oper.l2vpn_forwarding.nodes.node.l2fib_summary.l2fib_nh_summary_info2")
	proto.RegisterType((*L2FibNhSummaryInfo)(nil), "cisco_ios_xr_l2vpn_oper.l2vpn_forwarding.nodes.node.l2fib_summary.l2fib_nh_summary_info")
	proto.RegisterType((*L2FibL2TpDispSummaryInfo)(nil), "cisco_ios_xr_l2vpn_oper.l2vpn_forwarding.nodes.node.l2fib_summary.l2fib_l2tp_disp_summary_info")
	proto.RegisterType((*L2FibBdSummaryInfo)(nil), "cisco_ios_xr_l2vpn_oper.l2vpn_forwarding.nodes.node.l2fib_summary.l2fib_bd_summary_info")
	proto.RegisterType((*L2FibMacSummaryInfo)(nil), "cisco_ios_xr_l2vpn_oper.l2vpn_forwarding.nodes.node.l2fib_summary.l2fib_mac_summary_info")
	proto.RegisterType((*L2FibObjQueuesSummary)(nil), "cisco_ios_xr_l2vpn_oper.l2vpn_forwarding.nodes.node.l2fib_summary.l2fib_obj_queues_summary")
	proto.RegisterType((*L2FibEvpnSummaryInfo)(nil), "cisco_ios_xr_l2vpn_oper.l2vpn_forwarding.nodes.node.l2fib_summary.l2fib_evpn_summary_info")
	proto.RegisterType((*L2FibBaseInfo)(nil), "cisco_ios_xr_l2vpn_oper.l2vpn_forwarding.nodes.node.l2fib_summary.l2fib_base_info")
	proto.RegisterType((*L2FibGlobalCfgInfo)(nil), "cisco_ios_xr_l2vpn_oper.l2vpn_forwarding.nodes.node.l2fib_summary.l2fib_global_cfg_info")
	proto.RegisterType((*L2FibPtreeSummaryInfo)(nil), "cisco_ios_xr_l2vpn_oper.l2vpn_forwarding.nodes.node.l2fib_summary.l2fib_ptree_summary_info")
	proto.RegisterType((*L2FibPwgroupSummaryInfo)(nil), "cisco_ios_xr_l2vpn_oper.l2vpn_forwarding.nodes.node.l2fib_summary.l2fib_pwgroup_summary_info")
	proto.RegisterType((*L2FibPwheMpSummaryInfo)(nil), "cisco_ios_xr_l2vpn_oper.l2vpn_forwarding.nodes.node.l2fib_summary.l2fib_pwhe_mp_summary_info")
	proto.RegisterType((*L2FibSummaryInfo)(nil), "cisco_ios_xr_l2vpn_oper.l2vpn_forwarding.nodes.node.l2fib_summary.l2fib_summary_info")
}

func init() { proto.RegisterFile("l2fib_summary_info.proto", fileDescriptor_eefd3acbef13d045) }

var fileDescriptor_eefd3acbef13d045 = []byte{
	// 1882 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x59, 0x6d, 0x6f, 0x24, 0x47,
	0x11, 0xd6, 0xfa, 0x0e, 0xdb, 0x5b, 0x6b, 0xaf, 0xed, 0xf1, 0xad, 0x3d, 0x3e, 0xdf, 0x9d, 0x2f,
	0x7b, 0x49, 0x08, 0x81, 0x18, 0x58, 0x83, 0x73, 0x84, 0x03, 0xe4, 0x97, 0x53, 0x30, 0xd8, 0x91,
	0x35, 0xbe, 0x84, 0x04, 0x84, 0x5a, 0xf3, 0xd2, 0x6b, 0x37, 0x37, 0x2f, 0xcd, 0xcc, 0xec, 0xae,
	0xef, 0x04, 0x08, 0x81, 0x50, 0xbe, 0x20, 0x3e, 0x83, 0xf8, 0x80, 0xc4, 0x67, 0xfe, 0x06, 0xff,
	0x00, 0xf1, 0x43, 0xf8, 0x05, 0xa8, 0xab, 0xba, 0x67, 0x67, 0x76, 0xc7, 0x17, 0x21, 0xf6, 0xbe,
	0x44, 0x71, 0xd5, 0xf3, 0x3c, 0x55, 0x5d, 0xdd, 0xd5, 0xd5, 0xb3, 0x07, 0x76, 0xd8, 0xeb, 0x0b,
	0x8f, 0x65, 0x83, 0x28, 0x72, 0xd3, 0x17, 0x4c, 0xc4, 0xfd, 0x64, 0x57, 0xa6, 0x49, 0x9e, 0x58,
	0x07, 0xbe, 0xc8, 0xfc, 0x84, 0x89, 0x24, 0x63, 0xd7, 0x29, 0x0b, 0x7b, 0x43, 0x19, 0xb3, 0x44,
	0xf2, 0x74, 0x97, 0xfe, 0xb7, 0x9f, 0xa4, 0x23, 0x37, 0x0d, 0x44, 0x7c, 0xb9, 0x1b, 0x27, 0x01,
	0xcf, 0xf0, 0xbf, 0xbb, 0x15, 0xb5, 0x6e, 0x0f, 0x36, 0xa7, 0xe5, 0xd9, 0x8f, 0x9f, 0x7e, 0x76,
	0x61, 0x6d, 0xc2, 0x82, 0x22, 0x30, 0x11, 0xd8, 0x8d, 0x87, 0x8d, 0x77, 0x9a, 0xce, 0xbc, 0xfa,
	0xf3, 0x24, 0xe8, 0xfe, 0x73, 0x19, 0x3a, 0x44, 0xba, 0xf6, 0x2b, 0x3c, 0xeb, 0x2d, 0x68, 0x5f,
	0xfb, 0x49, 0x1c, 0x73, 0x3f, 0x67, 0x7e, 0x32, 0x88, 0x73, 0x64, 0x2e, 0x3b, 0xcb, 0xc6, 0x7a,
	0xa4, 0x8c, 0xd6, 0xbb, 0xb0, 0x56, 0xc0, 0x06, 0x52, 0x23, 0xe7, 0x10, 0xb9, 0x62, 0x1c, 0x1f,
	0x4b, 0xc2, 0xee, 0xc2, 0x7a, 0x81, 0x0d, 0x92, 0x51, 0xac, 0xd1, 0xb7, 0x10, 0x5d, 0xc8, 0x1c,
	0x27, 0xa3, 0x98, 0xf0, 0x5f, 0x83, 0x75, 0xd7, 0x67, 0x79, 0xc2, 0xe4, 0x88, 0xa0, 0x2c, 0x92,
	0x61, 0x66, 0xdf, 0x26, 0x75, 0xd7, 0x7f, 0x96, 0x9c, 0x8f, 0x10, 0x79, 0x26, 0xc3, 0xac, 0x06,
	0x1d, 0xf6, 0x72, 0x69, 0x7f, 0x69, 0x0a, 0x7d, 0xda, 0xcb, 0xa5, 0xb5, 0x0f, 0x5b, 0x35, 0x68,
	0x26, 0x24, 0x1b, 0xee, 0xdb, 0xf3, 0xc8, 0x59, 0x9f, 0xe0, 0x9c, 0xc8, 0x4f, 0xf6, 0xad, 0x6f,
	0x40, 0xa7, 0x86, 0x37, 0xec, 0xd9, 0x0b, 0xb4, 0x8a, 0x09, 0xce, 0xb0, 0x67, 0x3d, 0x82, 0x36,
	0x31, 0x5c, 0x5f, 0x2f, 0x78, 0x11, 0xa1, 0x2d, 0x05, 0x3d, 0xf0, 0x69, 0xa9, 0xef, 0x99, 0xe4,
	0x07, 0xf1, 0xf3, 0x78, 0x5c, 0x9a, 0x26, 0x22, 0x57, 0x15, 0xf2, 0x63, 0x72, 0x98, 0x4a, 0xde,
	0x89, 0x92, 0x98, 0x65, 0x3c, 0xcb, 0xca, 0xb9, 0xd8, 0x40, 0xf8, 0x28, 0x89, 0x2f, 0x78, 0x96,
	0x15, 0x99, 0x58, 0x8f, 0x61, 0xab, 0x8c, 0xaf, 0x06, 0x69, 0x21, 0xa9, 0x53, 0x90, 0x2a, 0x91,
	0x8a, 0xec, 0x3d, 0xb3, 0xb9, 0x4b, 0xe3, 0xec, 0x0f, 0x65, 0x01, 0x92, 0xa3, 0x0a, 0x68, 0x99,
	0x40, 0x72, 0x34, 0x06, 0xbd, 0x07, 0xeb, 0x04, 0xaa, 0x46, 0x6f, 0x53, 0xca, 0x0a, 0x59, 0x09,
	0xfc, 0x16, 0xac, 0x48, 0xcf, 0xab, 0x88, 0xae, 0x20, 0x74, 0x49, 0x7a, 0xde, 0x58, 0xf5, 0xeb,
	0x70, 0x47, 0xc3, 0xaa, 0xb2, 0xab, 0xb4, 0x1d, 0x88, 0x9d, 0xd4, 0x1d, 0xc6, 0xa2, 0xa2, 0xbb,
	0x46, 0xba, 0xc3, 0x58, 0x54, 0x74, 0x35, 0xac, 0xaa, 0x6b, 0x91, 0x2e, 0x62, 0x2b, 0xba, 0x5f,
	0x86, 0x55, 0xae, 0x3a, 0xb5, 0x2c, 0xbc, 0x4e, 0x1d, 0xa3, 0xec, 0x63, 0xe5, 0x6f, 0x42, 0xc7,
	0x00, 0xab, 0xd2, 0x77, 0x10, 0x6d, 0x11, 0xba, 0xa2, 0xfd, 0x15, 0x58, 0x73, 0xfd, 0x52, 0xcb,
	0x30, 0x57, 0x78, 0x76, 0x07, 0xe1, 0x6d, 0xd7, 0x2f, 0x1a, 0xe6, 0x40, 0x78, 0xfa, 0x20, 0x95,
	0xa0, 0x78, 0x7f, 0xd8, 0x1b, 0xe6, 0x20, 0x15, 0xe0, 0x53, 0x65, 0xaf, 0x81, 0xef, 0xf5, 0x85,
	0x67, 0x6f, 0x4e, 0xc3, 0x95, 0xdd, 0xfa, 0x2a, 0x58, 0x55, 0xf8, 0x50, 0x06, 0xb1, 0x6d, 0x9b,
	0x16, 0x2b, 0xd0, 0x9f, 0xc8, 0x20, 0xb6, 0x0e, 0xe0, 0xc1, 0x50, 0x8e, 0x32, 0x75, 0x3a, 0x45,
	0x3c, 0x74, 0x43, 0x11, 0xb0, 0x6b, 0x11, 0xb0, 0x20, 0x4d, 0x4c, 0x7d, 0xb6, 0x90, 0xb8, 0xa5,
	0x50, 0xe7, 0xa3, 0x13, 0xc2, 0x7c, 0x2a, 0x82, 0xe3, 0x34, 0xd1, 0xb5, 0x42, 0x89, 0xf0, 0x55,
	0x12, 0x77, 0x8d, 0x44, 0x78, 0x83, 0xc4, 0x87, 0xf0, 0xc6, 0x50, 0xa4, 0xf9, 0xc0, 0x0d, 0x55,
	0x03, 0xde, 0xa0, 0xb2, 0x8d, 0x2a, 0xf7, 0x34, 0xf0, 0xc0, 0xaf, 0x13, 0xfa, 0x00, 0xee, 0xaa,
	0x93, 0x76, 0x83, 0xc2, 0x3d, 0x54, 0xd8, 0x90, 0x9e, 0x77, 0x03, 0x57, 0x9d, 0xa6, 0x1b, 0xb8,
	0xf7, 0x89, 0x3b, 0x8c, 0x45, 0x1d, 0xf7, 0x09, 0x6c, 0xe3, 0x79, 0xb9, 0x81, 0xfc, 0x00, 0xc9,
	0x9b, 0x0a, 0x52, 0xc7, 0xfe, 0x01, 0xdc, 0x37, 0x15, 0x8c, 0xdc, 0x6b, 0xc6, 0xaf, 0x7d, 0xce,
	0x03, 0x6e, 0x14, 0xe2, 0xdc, 0xde, 0x41, 0xbe, 0x4d, 0x05, 0x3c, 0x73, 0xaf, 0x9f, 0x6a, 0x04,
	0x4a, 0xc4, 0xb9, 0x75, 0x04, 0x3b, 0xde, 0x20, 0x0e, 0x42, 0xae, 0xca, 0x57, 0x2f, 0xf1, 0x10,
	0x25, 0xee, 0x12, 0xec, 0xc0, 0xaf, 0x11, 0xd9, 0x86, 0xa6, 0xec, 0x99, 0x8c, 0xdf, 0x40, 0xf8,
	0xa2, 0xec, 0xe9, 0x14, 0xb7, 0x60, 0xb1, 0xe8, 0x98, 0x2e, 0xfa, 0x16, 0x3c, 0x59, 0x34, 0x95,
	0x1c, 0x5d, 0x71, 0x16, 0xf6, 0x98, 0xe8, 0x6b, 0xc8, 0x23, 0x6a, 0x2a, 0x65, 0x3f, 0xed, 0x9d,
	0xf4, 0x11, 0xd8, 0xfd, 0x4f, 0x03, 0x36, 0x68, 0x8e, 0xc5, 0x57, 0x95, 0x39, 0xd6, 0xb3, 0xde,
	0x84, 0x76, 0xcc, 0xaf, 0x73, 0x76, 0x55, 0x94, 0x8c, 0x06, 0xd9, 0x92, 0xb2, 0xfe, 0x30, 0x19,
	0xf7, 0xbb, 0x97, 0x0c, 0xe2, 0x80, 0x4d, 0x60, 0x69, 0x94, 0xad, 0xa1, 0xef, 0xa3, 0x32, 0x61,
	0x0f, 0x36, 0x06, 0x71, 0x2d, 0x85, 0xe6, 0xd9, 0xba, 0xf6, 0x56, 0x48, 0xa7, 0xf0, 0xa8, 0x00,
	0x4b, 0x1e, 0xab, 0x79, 0xce, 0x52, 0x7e, 0x29, 0xb2, 0x3c, 0x75, 0x73, 0x91, 0x98, 0x9b, 0x80,
	0x26, 0xdc, 0x8e, 0x4e, 0xf0, 0x9c, 0x80, 0x4e, 0x09, 0x47, 0x8b, 0xfe, 0xd7, 0x6d, 0x33, 0xbc,
	0x27, 0x16, 0x6d, 0xa5, 0xb0, 0xa0, 0x46, 0x25, 0x13, 0x21, 0x2e, 0xb6, 0xd5, 0xfb, 0x6c, 0xf7,
	0xff, 0x7e, 0x5f, 0xec, 0xd6, 0xd7, 0xd7, 0x99, 0x57, 0x91, 0x4e, 0x42, 0x2b, 0x82, 0xdb, 0x38,
	0x9e, 0xe7, 0x5e, 0x77, 0x40, 0x0c, 0xa3, 0xc2, 0xe1, 0x7c, 0xbf, 0xf5, 0xda, 0xc3, 0xa9, 0x30,
	0xd6, 0x73, 0xb8, 0x15, 0x66, 0x11, 0xee, 0xcc, 0x6b, 0x8d, 0xa6, 0xa2, 0x58, 0xbf, 0x82, 0x25,
	0xd9, 0x8b, 0x24, 0xcb, 0x07, 0x71, 0xcc, 0xc3, 0x0c, 0xdf, 0x30, 0xaf, 0x35, 0x6a, 0x4b, 0x85,
	0x7b, 0x46, 0xd1, 0xba, 0x9f, 0xcf, 0xc1, 0x3d, 0xc2, 0xe1, 0x93, 0x28, 0x10, 0x99, 0xac, 0x9e,
	0xae, 0x23, 0x78, 0x50, 0x78, 0x92, 0x4c, 0xe0, 0xc1, 0x55, 0x4f, 0x8b, 0xf1, 0x01, 0xa6, 0x0e,
	0xdb, 0x56, 0xa8, 0xe3, 0x31, 0xe8, 0x82, 0x30, 0xd4, 0x0a, 0x1f, 0xc1, 0x9b, 0xd4, 0x3d, 0x5f,
	0x20, 0x45, 0x0d, 0xf8, 0x10, 0xb1, 0xa7, 0xaf, 0xd0, 0x73, 0xe0, 0x6d, 0xd3, 0x8f, 0x5f, 0xa0,
	0x48, 0xfd, 0xd9, 0xd5, 0xe8, 0x57, 0x68, 0x76, 0xff, 0x7c, 0xcb, 0x34, 0x98, 0x17, 0x54, 0x4b,
	0xb0, 0x0b, 0xeb, 0x5e, 0x2a, 0x82, 0x4b, 0xce, 0x82, 0x24, 0x72, 0x45, 0x75, 0xdd, 0x6b, 0xe4,
	0x3a, 0x46, 0x0f, 0x65, 0xf7, 0x3e, 0xd8, 0x55, 0x7c, 0xe9, 0x06, 0xa7, 0x15, 0x76, 0xca, 0xa4,
	0xf1, 0xfd, 0xfd, 0x7d, 0xb8, 0x57, 0x25, 0x8e, 0x44, 0x7e, 0xc5, 0xbc, 0xa1, 0xa8, 0x2c, 0xc6,
	0x2e, 0x93, 0x7f, 0x22, 0xf2, 0xab, 0xc3, 0xa1, 0x20, 0xfe, 0x31, 0xec, 0xd4, 0xf0, 0xf1, 0x74,
	0xf1, 0xd8, 0xf5, 0x42, 0x1e, 0xe8, 0xdb, 0x66, 0x7b, 0x52, 0xe2, 0xbc, 0x17, 0xc9, 0xa7, 0x04,
	0xb1, 0x7e, 0x04, 0xdd, 0x3a, 0x15, 0xcf, 0xc3, 0xc9, 0x64, 0x84, 0xe8, 0xa9, 0xfd, 0x60, 0x4a,
	0x88, 0x60, 0x46, 0xab, 0x3e, 0xa3, 0x8a, 0xd0, 0x7c, 0x7d, 0x46, 0x4f, 0xc7, 0x2a, 0xdd, 0xbf,
	0xce, 0x99, 0x0b, 0x3f, 0x72, 0x27, 0xbe, 0x5c, 0xde, 0x86, 0x95, 0x30, 0xf1, 0xdd, 0x10, 0x3d,
	0x95, 0x4f, 0x17, 0x34, 0x9f, 0xb9, 0xfa, 0xcd, 0xfd, 0x0e, 0xac, 0xa6, 0x3c, 0x4a, 0x72, 0x5e,
	0x02, 0xd2, 0x5e, 0xb4, 0xc9, 0x5e, 0x46, 0x66, 0xb9, 0x9b, 0x0b, 0xbf, 0x84, 0xa4, 0xc2, 0xb7,
	0xc9, 0x5e, 0xd1, 0x4c, 0x06, 0x39, 0x0f, 0x4a, 0xc8, 0xdb, 0x5a, 0x13, 0xed, 0x05, 0x72, 0x1b,
	0x9a, 0x63, 0x08, 0x55, 0x6e, 0x31, 0x32, 0xce, 0x1d, 0x68, 0x65, 0xde, 0xd8, 0x4d, 0xf5, 0x00,
	0x34, 0x11, 0xe0, 0x3e, 0x40, 0xc9, 0x4f, 0xdf, 0x1e, 0xcd, 0xc2, 0xdd, 0xfd, 0x53, 0xc3, 0x7c,
	0x6a, 0x26, 0xde, 0x2f, 0xd8, 0x2f, 0x07, 0x7c, 0xc0, 0x33, 0x53, 0x24, 0xc5, 0x15, 0x71, 0x28,
	0x62, 0x8e, 0xc3, 0x9b, 0x4a, 0xd3, 0x24, 0x8b, 0x9e, 0xd5, 0x29, 0xcf, 0xd3, 0x17, 0xe8, 0xa5,
	0x7a, 0x2c, 0xa2, 0xe1, 0x88, 0xe2, 0x0e, 0x64, 0xe0, 0xe6, 0xc4, 0xa5, 0x1a, 0x34, 0xc9, 0xa2,
	0xdc, 0x9b, 0xb0, 0x10, 0xf0, 0x10, 0x7d, 0xb4, 0xea, 0xf9, 0x80, 0x87, 0x47, 0x71, 0xde, 0xfd,
	0x8d, 0xf9, 0x36, 0xc5, 0x7d, 0xae, 0x6c, 0xd7, 0x0e, 0xb4, 0xf2, 0x24, 0x77, 0xc3, 0xca, 0x56,
	0x01, 0x9a, 0x8a, 0xb5, 0x8a, 0x4c, 0x04, 0x95, 0x1d, 0x6a, 0x2a, 0x8b, 0xf9, 0xf8, 0x58, 0x0e,
	0x78, 0xdf, 0x1d, 0x84, 0x79, 0x65, 0x67, 0x96, 0xb4, 0x91, 0x0a, 0xb2, 0x06, 0x2b, 0xba, 0x91,
	0xdd, 0x8c, 0x63, 0xdc, 0xee, 0xdf, 0xe6, 0x4c, 0x73, 0x5f, 0x86, 0x89, 0xa7, 0xe2, 0xf7, 0x2f,
	0x29, 0xa3, 0x3e, 0xdc, 0x56, 0x30, 0x3d, 0x3a, 0x9d, 0x99, 0x5d, 0xbb, 0x45, 0x6c, 0x07, 0xf5,
	0xd5, 0xb7, 0x73, 0x98, 0xb8, 0x01, 0xf3, 0xdc, 0xd0, 0x8d, 0x7d, 0xce, 0xf2, 0x17, 0x92, 0xe3,
	0xfa, 0x9a, 0xce, 0x8a, 0x72, 0x1c, 0x92, 0xfd, 0xd9, 0x0b, 0xc9, 0xd5, 0x17, 0x1c, 0xbd, 0x02,
	0x23, 0x9f, 0x85, 0xae, 0xc7, 0x43, 0xe6, 0x85, 0x89, 0xff, 0x1c, 0x35, 0xf5, 0x8a, 0xf1, 0xb3,
	0xe2, 0x24, 0xf2, 0x4f, 0x95, 0xfb, 0x50, 0x79, 0x0f, 0x55, 0x94, 0x9b, 0x98, 0x99, 0x78, 0xc9,
	0xf5, 0x2e, 0x4d, 0x33, 0x2f, 0xc4, 0x4b, 0xde, 0xfd, 0xc7, 0x9c, 0x39, 0x45, 0x32, 0x4f, 0x39,
	0xaf, 0x6e, 0xdb, 0xbb, 0xb0, 0x46, 0xdb, 0x46, 0xbe, 0xf2, 0xe6, 0xad, 0xa0, 0xe3, 0x5c, 0xd9,
	0x8b, 0xdb, 0x2f, 0x0a, 0x83, 0xe2, 0xc6, 0xa9, 0x50, 0xf4, 0xed, 0xa7, 0xfc, 0xba, 0xb7, 0x4b,
	0xc4, 0x3d, 0xd8, 0x08, 0xa3, 0x54, 0x35, 0xb9, 0xa2, 0x97, 0x69, 0xfa, 0x91, 0x85, 0xde, 0xb3,
	0x30, 0x90, 0x25, 0xd2, 0x13, 0xd8, 0x4e, 0xb3, 0xa1, 0x64, 0x39, 0xaf, 0x0d, 0x48, 0x4b, 0xde,
	0x54, 0x90, 0x67, 0x7c, 0x3a, 0xe4, 0x63, 0xd8, 0xa2, 0x90, 0x46, 0xa3, 0xcc, 0xa5, 0x3e, 0xed,
	0x20, 0xc0, 0x41, 0x81, 0x31, 0xb3, 0xfb, 0xf7, 0x06, 0xdc, 0xd5, 0xe5, 0x1a, 0x5d, 0xa6, 0xc9,
	0x60, 0x62, 0x6a, 0xee, 0xc3, 0xa6, 0x0c, 0xdd, 0x9c, 0xa1, 0x4b, 0x3d, 0xfc, 0xb2, 0x81, 0x94,
	0x49, 0x9a, 0x73, 0xfa, 0x4d, 0x66, 0xd1, 0xe9, 0x28, 0xf7, 0x87, 0xda, 0x7b, 0x61, 0x9c, 0xea,
	0x3a, 0xd3, 0x85, 0x1e, 0x11, 0x37, 0xd3, 0x35, 0x5b, 0xa6, 0x32, 0x8f, 0x90, 0x92, 0xa9, 0x77,
	0x6e, 0x81, 0xc0, 0x4f, 0x34, 0xd3, 0x08, 0x52, 0x23, 0xd4, 0xd7, 0x59, 0xf7, 0x7b, 0xe3, 0x1c,
	0xaf, 0x38, 0x8b, 0xe4, 0xff, 0xd6, 0x8b, 0xdd, 0x7f, 0xb7, 0xc0, 0x9a, 0xfe, 0x91, 0xc9, 0xfa,
	0x7d, 0x03, 0x56, 0x8b, 0x9f, 0x76, 0xb4, 0xc7, 0xee, 0x61, 0xfb, 0x7c, 0x3a, 0xb3, 0xf6, 0x99,
	0xf8, 0x85, 0x6a, 0xfc, 0xfb, 0xd2, 0x85, 0xbe, 0xd8, 0x7e, 0xd7, 0x80, 0xd5, 0xe2, 0x79, 0x6d,
	0xb2, 0xd8, 0x9b, 0x71, 0x16, 0x13, 0x6f, 0x27, 0xa7, 0xad, 0x5f, 0xe9, 0x26, 0x89, 0xbf, 0xe0,
	0xd5, 0x3b, 0xf9, 0x00, 0xd1, 0xc9, 0x7c, 0x0b, 0x93, 0x61, 0x33, 0x4b, 0xa6, 0xfe, 0x81, 0xe6,
	0x6c, 0x4c, 0x3e, 0xbc, 0x74, 0x6e, 0x7f, 0x6c, 0x40, 0xa7, 0x3a, 0x7b, 0x4d, 0x62, 0xdf, 0x9e,
	0x71, 0x95, 0x26, 0xde, 0x4b, 0xce, 0x7a, 0x79, 0x96, 0x9b, 0x74, 0x5e, 0x42, 0xab, 0x34, 0xbc,
	0xed, 0xfd, 0x19, 0xbf, 0x72, 0x27, 0x1f, 0x06, 0x0e, 0x44, 0xae, 0x6f, 0x62, 0xff, 0xb6, 0x01,
	0xcb, 0x38, 0x17, 0x8b, 0xf0, 0xef, 0x63, 0xf8, 0x9f, 0xcd, 0x2c, 0xfc, 0xf4, 0xe4, 0x75, 0x96,
	0xf0, 0x6f, 0x93, 0xc2, 0xaf, 0x61, 0xa9, 0x3c, 0x0d, 0xed, 0xc7, 0x98, 0xc0, 0x4f, 0x67, 0x96,
	0xc0, 0xd4, 0xa8, 0x75, 0x5a, 0xca, 0x64, 0xc2, 0x8f, 0x00, 0xc6, 0x83, 0xcf, 0xfe, 0xce, 0x8c,
	0x0f, 0xc0, 0xc4, 0x4c, 0x75, 0x9a, 0x64, 0x38, 0xea, 0x5f, 0x62, 0xe9, 0x2b, 0x03, 0xc5, 0xfe,
	0x60, 0xc6, 0xa5, 0x9f, 0x1e, 0x57, 0xce, 0x12, 0xda, 0xcc, 0xda, 0x3f, 0x6f, 0xc0, 0xaa, 0xb9,
	0x2c, 0x8b, 0x2c, 0xbe, 0x8b, 0x59, 0xfc, 0x7c, 0x76, 0x59, 0xd4, 0x4c, 0x01, 0xa7, 0xad, 0x6f,
	0x63, 0x93, 0xc9, 0x1f, 0x1a, 0xb0, 0x32, 0x71, 0x15, 0xdb, 0x4f, 0x66, 0x9e, 0xc8, 0xf4, 0x55,
	0x4f, 0x3f, 0xa0, 0x9c, 0x99, 0x3c, 0xbc, 0x79, 0xfc, 0x67, 0x88, 0xbd, 0xff, 0x06, 0x00, 0x00,
	0xff, 0xff, 0xea, 0x3e, 0x82, 0xd7, 0xa2, 0x18, 0x00, 0x00,
}
