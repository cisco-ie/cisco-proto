/*
Copyright 2019 Cisco Systems

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: l2vpn_globals.proto

package cisco_ios_xr_l2vpn_oper_l2vpnv2_nodes_node_global_settings

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type L2VpnGlobals_KEYS struct {
	NodeId               string   `protobuf:"bytes,1,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *L2VpnGlobals_KEYS) Reset()         { *m = L2VpnGlobals_KEYS{} }
func (m *L2VpnGlobals_KEYS) String() string { return proto.CompactTextString(m) }
func (*L2VpnGlobals_KEYS) ProtoMessage()    {}
func (*L2VpnGlobals_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_74028bda9454b4c7, []int{0}
}

func (m *L2VpnGlobals_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_L2VpnGlobals_KEYS.Unmarshal(m, b)
}
func (m *L2VpnGlobals_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_L2VpnGlobals_KEYS.Marshal(b, m, deterministic)
}
func (m *L2VpnGlobals_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_L2VpnGlobals_KEYS.Merge(m, src)
}
func (m *L2VpnGlobals_KEYS) XXX_Size() int {
	return xxx_messageInfo_L2VpnGlobals_KEYS.Size(m)
}
func (m *L2VpnGlobals_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_L2VpnGlobals_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_L2VpnGlobals_KEYS proto.InternalMessageInfo

func (m *L2VpnGlobals_KEYS) GetNodeId() string {
	if m != nil {
		return m.NodeId
	}
	return ""
}

type L2VpnGlobals struct {
	PwGroupingEnabled        bool     `protobuf:"varint,50,opt,name=pw_grouping_enabled,json=pwGroupingEnabled,proto3" json:"pw_grouping_enabled,omitempty"`
	PwStatusEnabled          bool     `protobuf:"varint,51,opt,name=pw_status_enabled,json=pwStatusEnabled,proto3" json:"pw_status_enabled,omitempty"`
	LoggingPwEnabled         bool     `protobuf:"varint,52,opt,name=logging_pw_enabled,json=loggingPwEnabled,proto3" json:"logging_pw_enabled,omitempty"`
	LoggingBdEnabled         bool     `protobuf:"varint,53,opt,name=logging_bd_enabled,json=loggingBdEnabled,proto3" json:"logging_bd_enabled,omitempty"`
	LoggingVfiEnabled        bool     `protobuf:"varint,54,opt,name=logging_vfi_enabled,json=loggingVfiEnabled,proto3" json:"logging_vfi_enabled,omitempty"`
	LoggingNsrEnabled        bool     `protobuf:"varint,55,opt,name=logging_nsr_enabled,json=loggingNsrEnabled,proto3" json:"logging_nsr_enabled,omitempty"`
	LoggingDfElectionEnabled bool     `protobuf:"varint,56,opt,name=logging_df_election_enabled,json=loggingDfElectionEnabled,proto3" json:"logging_df_election_enabled,omitempty"`
	TcnPropagationEnabled    bool     `protobuf:"varint,57,opt,name=tcn_propagation_enabled,json=tcnPropagationEnabled,proto3" json:"tcn_propagation_enabled,omitempty"`
	PwOamRefreshTransmitTime uint32   `protobuf:"varint,58,opt,name=pw_oam_refresh_transmit_time,json=pwOamRefreshTransmitTime,proto3" json:"pw_oam_refresh_transmit_time,omitempty"`
	HaRole                   string   `protobuf:"bytes,59,opt,name=ha_role,json=haRole,proto3" json:"ha_role,omitempty"`
	IssuRole                 string   `protobuf:"bytes,60,opt,name=issu_role,json=issuRole,proto3" json:"issu_role,omitempty"`
	ProcessFsm               string   `protobuf:"bytes,61,opt,name=process_fsm,json=processFsm,proto3" json:"process_fsm,omitempty"`
	GoingActive              bool     `protobuf:"varint,62,opt,name=going_active,json=goingActive,proto3" json:"going_active,omitempty"`
	XXX_NoUnkeyedLiteral     struct{} `json:"-"`
	XXX_unrecognized         []byte   `json:"-"`
	XXX_sizecache            int32    `json:"-"`
}

func (m *L2VpnGlobals) Reset()         { *m = L2VpnGlobals{} }
func (m *L2VpnGlobals) String() string { return proto.CompactTextString(m) }
func (*L2VpnGlobals) ProtoMessage()    {}
func (*L2VpnGlobals) Descriptor() ([]byte, []int) {
	return fileDescriptor_74028bda9454b4c7, []int{1}
}

func (m *L2VpnGlobals) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_L2VpnGlobals.Unmarshal(m, b)
}
func (m *L2VpnGlobals) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_L2VpnGlobals.Marshal(b, m, deterministic)
}
func (m *L2VpnGlobals) XXX_Merge(src proto.Message) {
	xxx_messageInfo_L2VpnGlobals.Merge(m, src)
}
func (m *L2VpnGlobals) XXX_Size() int {
	return xxx_messageInfo_L2VpnGlobals.Size(m)
}
func (m *L2VpnGlobals) XXX_DiscardUnknown() {
	xxx_messageInfo_L2VpnGlobals.DiscardUnknown(m)
}

var xxx_messageInfo_L2VpnGlobals proto.InternalMessageInfo

func (m *L2VpnGlobals) GetPwGroupingEnabled() bool {
	if m != nil {
		return m.PwGroupingEnabled
	}
	return false
}

func (m *L2VpnGlobals) GetPwStatusEnabled() bool {
	if m != nil {
		return m.PwStatusEnabled
	}
	return false
}

func (m *L2VpnGlobals) GetLoggingPwEnabled() bool {
	if m != nil {
		return m.LoggingPwEnabled
	}
	return false
}

func (m *L2VpnGlobals) GetLoggingBdEnabled() bool {
	if m != nil {
		return m.LoggingBdEnabled
	}
	return false
}

func (m *L2VpnGlobals) GetLoggingVfiEnabled() bool {
	if m != nil {
		return m.LoggingVfiEnabled
	}
	return false
}

func (m *L2VpnGlobals) GetLoggingNsrEnabled() bool {
	if m != nil {
		return m.LoggingNsrEnabled
	}
	return false
}

func (m *L2VpnGlobals) GetLoggingDfElectionEnabled() bool {
	if m != nil {
		return m.LoggingDfElectionEnabled
	}
	return false
}

func (m *L2VpnGlobals) GetTcnPropagationEnabled() bool {
	if m != nil {
		return m.TcnPropagationEnabled
	}
	return false
}

func (m *L2VpnGlobals) GetPwOamRefreshTransmitTime() uint32 {
	if m != nil {
		return m.PwOamRefreshTransmitTime
	}
	return 0
}

func (m *L2VpnGlobals) GetHaRole() string {
	if m != nil {
		return m.HaRole
	}
	return ""
}

func (m *L2VpnGlobals) GetIssuRole() string {
	if m != nil {
		return m.IssuRole
	}
	return ""
}

func (m *L2VpnGlobals) GetProcessFsm() string {
	if m != nil {
		return m.ProcessFsm
	}
	return ""
}

func (m *L2VpnGlobals) GetGoingActive() bool {
	if m != nil {
		return m.GoingActive
	}
	return false
}

func init() {
	proto.RegisterType((*L2VpnGlobals_KEYS)(nil), "cisco_ios_xr_l2vpn_oper.l2vpnv2.nodes.node.global_settings.l2vpn_globals_KEYS")
	proto.RegisterType((*L2VpnGlobals)(nil), "cisco_ios_xr_l2vpn_oper.l2vpnv2.nodes.node.global_settings.l2vpn_globals")
}

func init() { proto.RegisterFile("l2vpn_globals.proto", fileDescriptor_74028bda9454b4c7) }

var fileDescriptor_74028bda9454b4c7 = []byte{
	// 420 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0xd2, 0xef, 0x6b, 0xd4, 0x30,
	0x18, 0x07, 0x70, 0x0e, 0x64, 0x6e, 0x99, 0x43, 0xd7, 0x43, 0x56, 0x98, 0xe0, 0xb9, 0x57, 0x87,
	0x68, 0x5f, 0xdc, 0x74, 0xea, 0x74, 0x03, 0xc5, 0x53, 0x44, 0xd0, 0xd1, 0x0d, 0xc1, 0x57, 0x0f,
	0xb9, 0x36, 0xcd, 0x05, 0xd2, 0x3c, 0x21, 0x4f, 0xee, 0xe2, 0x9f, 0xea, 0x9f, 0x23, 0x4d, 0x7f,
	0x48, 0xe1, 0xde, 0x94, 0xf6, 0xf9, 0x7e, 0xbe, 0xa1, 0x6d, 0xc2, 0xa6, 0x7a, 0xb1, 0xb5, 0x06,
	0xa4, 0xc6, 0x15, 0xd7, 0x94, 0x59, 0x87, 0x1e, 0x93, 0xcb, 0x42, 0x51, 0x81, 0xa0, 0x90, 0xe0,
	0x8f, 0x83, 0x56, 0xa0, 0x15, 0x2e, 0x8b, 0xb7, 0xdb, 0x45, 0x66, 0xb0, 0x14, 0x14, 0xaf, 0x59,
	0xdb, 0x04, 0x12, 0xde, 0x2b, 0x23, 0xe9, 0xec, 0x25, 0x4b, 0x46, 0x4b, 0xc2, 0xf7, 0xe5, 0xef,
	0xdb, 0xe4, 0x84, 0xdd, 0x6f, 0x34, 0xa8, 0x32, 0x9d, 0xcc, 0x26, 0xf3, 0x83, 0x7c, 0xaf, 0x79,
	0xfc, 0x56, 0x9e, 0xfd, 0xbd, 0xc7, 0x8e, 0x46, 0x3e, 0xc9, 0xd8, 0xd4, 0x06, 0x90, 0x0e, 0x37,
	0x56, 0x19, 0x09, 0xc2, 0xf0, 0x95, 0x16, 0x65, 0xba, 0x98, 0x4d, 0xe6, 0xfb, 0xf9, 0xb1, 0x0d,
	0x5f, 0xbb, 0x64, 0xd9, 0x06, 0xc9, 0x73, 0x76, 0x6c, 0x03, 0x90, 0xe7, 0x7e, 0x43, 0x83, 0x3e,
	0x8f, 0xfa, 0xa1, 0x0d, 0xb7, 0x71, 0xde, 0xdb, 0x17, 0x2c, 0xd1, 0x28, 0x65, 0xb3, 0xae, 0x0d,
	0x03, 0x7e, 0x15, 0xf1, 0xa3, 0x2e, 0xb9, 0x09, 0x3b, 0xf4, 0xaa, 0x1c, 0xf4, 0xeb, 0x91, 0xfe,
	0x54, 0xf6, 0x3a, 0x63, 0xd3, 0x5e, 0x6f, 0x2b, 0x35, 0xf0, 0x8b, 0xf6, 0xbd, 0xbb, 0xe8, 0x57,
	0xa5, 0x76, 0x78, 0x43, 0x6e, 0xf0, 0x6f, 0x46, 0xfe, 0x07, 0xb9, 0xde, 0x5f, 0xb1, 0xd3, 0xde,
	0x97, 0x15, 0x08, 0x2d, 0x0a, 0xaf, 0xd0, 0x0c, 0xbd, 0xb7, 0xb1, 0x97, 0x76, 0xe4, 0x73, 0xb5,
	0xec, 0x40, 0x5f, 0xbf, 0x60, 0x27, 0xbe, 0x30, 0x60, 0x1d, 0x5a, 0x2e, 0xf9, 0xa8, 0xfa, 0x2e,
	0x56, 0x1f, 0xfb, 0xc2, 0xdc, 0xfc, 0x4f, 0xfb, 0xde, 0x35, 0x7b, 0x62, 0x03, 0x20, 0xaf, 0xc1,
	0x89, 0xca, 0x09, 0x5a, 0x83, 0x77, 0xdc, 0x50, 0xad, 0x3c, 0x78, 0x55, 0x8b, 0xf4, 0x72, 0x36,
	0x99, 0x1f, 0xe5, 0xa9, 0x0d, 0x3f, 0x79, 0x9d, 0xb7, 0xe2, 0xae, 0x03, 0x77, 0xaa, 0x16, 0xcd,
	0xce, 0xaf, 0x39, 0x38, 0xd4, 0x22, 0x7d, 0xdf, 0xee, 0xfc, 0x9a, 0xe7, 0xa8, 0x45, 0x72, 0xca,
	0x0e, 0x14, 0xd1, 0xa6, 0x8d, 0x3e, 0xc4, 0x68, 0xbf, 0x19, 0xc4, 0xf0, 0x29, 0x3b, 0xb4, 0x0e,
	0x0b, 0x41, 0x04, 0x15, 0xd5, 0xe9, 0x55, 0x8c, 0x59, 0x37, 0xfa, 0x42, 0x75, 0xf2, 0x8c, 0x3d,
	0x90, 0xd8, 0xfc, 0x0b, 0x5e, 0x78, 0xb5, 0x15, 0xe9, 0x75, 0xfc, 0x86, 0xc3, 0x38, 0xfb, 0x18,
	0x47, 0xab, 0xbd, 0x78, 0x98, 0xcf, 0xff, 0x05, 0x00, 0x00, 0xff, 0xff, 0xc9, 0x8b, 0x77, 0xa2,
	0xe3, 0x02, 0x00, 0x00,
}
