/*
Copyright 2019 Cisco Systems

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: pmipv6_show_lma_peer_stats_bd.proto

package cisco_ios_xr_ip_mobileip_oper_pmipv6_lma_statistics_mag_statistics_mag_statistic

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Pmipv6ShowLmaPeerStatsBd_KEYS struct {
	MagName              string   `protobuf:"bytes,1,opt,name=mag_name,json=magName,proto3" json:"mag_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Pmipv6ShowLmaPeerStatsBd_KEYS) Reset()         { *m = Pmipv6ShowLmaPeerStatsBd_KEYS{} }
func (m *Pmipv6ShowLmaPeerStatsBd_KEYS) String() string { return proto.CompactTextString(m) }
func (*Pmipv6ShowLmaPeerStatsBd_KEYS) ProtoMessage()    {}
func (*Pmipv6ShowLmaPeerStatsBd_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_50ad205fe748a0f6, []int{0}
}

func (m *Pmipv6ShowLmaPeerStatsBd_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Pmipv6ShowLmaPeerStatsBd_KEYS.Unmarshal(m, b)
}
func (m *Pmipv6ShowLmaPeerStatsBd_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Pmipv6ShowLmaPeerStatsBd_KEYS.Marshal(b, m, deterministic)
}
func (m *Pmipv6ShowLmaPeerStatsBd_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Pmipv6ShowLmaPeerStatsBd_KEYS.Merge(m, src)
}
func (m *Pmipv6ShowLmaPeerStatsBd_KEYS) XXX_Size() int {
	return xxx_messageInfo_Pmipv6ShowLmaPeerStatsBd_KEYS.Size(m)
}
func (m *Pmipv6ShowLmaPeerStatsBd_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_Pmipv6ShowLmaPeerStatsBd_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_Pmipv6ShowLmaPeerStatsBd_KEYS proto.InternalMessageInfo

func (m *Pmipv6ShowLmaPeerStatsBd_KEYS) GetMagName() string {
	if m != nil {
		return m.MagName
	}
	return ""
}

type Pmipv6PbuStatsBd struct {
	PbuCount             uint64   `protobuf:"varint,1,opt,name=pbu_count,json=pbuCount,proto3" json:"pbu_count,omitempty"`
	PbuDropCount         uint32   `protobuf:"varint,2,opt,name=pbu_drop_count,json=pbuDropCount,proto3" json:"pbu_drop_count,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Pmipv6PbuStatsBd) Reset()         { *m = Pmipv6PbuStatsBd{} }
func (m *Pmipv6PbuStatsBd) String() string { return proto.CompactTextString(m) }
func (*Pmipv6PbuStatsBd) ProtoMessage()    {}
func (*Pmipv6PbuStatsBd) Descriptor() ([]byte, []int) {
	return fileDescriptor_50ad205fe748a0f6, []int{1}
}

func (m *Pmipv6PbuStatsBd) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Pmipv6PbuStatsBd.Unmarshal(m, b)
}
func (m *Pmipv6PbuStatsBd) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Pmipv6PbuStatsBd.Marshal(b, m, deterministic)
}
func (m *Pmipv6PbuStatsBd) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Pmipv6PbuStatsBd.Merge(m, src)
}
func (m *Pmipv6PbuStatsBd) XXX_Size() int {
	return xxx_messageInfo_Pmipv6PbuStatsBd.Size(m)
}
func (m *Pmipv6PbuStatsBd) XXX_DiscardUnknown() {
	xxx_messageInfo_Pmipv6PbuStatsBd.DiscardUnknown(m)
}

var xxx_messageInfo_Pmipv6PbuStatsBd proto.InternalMessageInfo

func (m *Pmipv6PbuStatsBd) GetPbuCount() uint64 {
	if m != nil {
		return m.PbuCount
	}
	return 0
}

func (m *Pmipv6PbuStatsBd) GetPbuDropCount() uint32 {
	if m != nil {
		return m.PbuDropCount
	}
	return 0
}

type Pmipv6PbaStatsBd struct {
	PbaCount                                uint64   `protobuf:"varint,1,opt,name=pba_count,json=pbaCount,proto3" json:"pba_count,omitempty"`
	PbaDropCount                            uint32   `protobuf:"varint,2,opt,name=pba_drop_count,json=pbaDropCount,proto3" json:"pba_drop_count,omitempty"`
	AcceptedCount                           uint32   `protobuf:"varint,3,opt,name=accepted_count,json=acceptedCount,proto3" json:"accepted_count,omitempty"`
	UnknownCount                            uint32   `protobuf:"varint,4,opt,name=unknown_count,json=unknownCount,proto3" json:"unknown_count,omitempty"`
	UnspecifiedFailureCount                 uint32   `protobuf:"varint,5,opt,name=unspecified_failure_count,json=unspecifiedFailureCount,proto3" json:"unspecified_failure_count,omitempty"`
	AdminFailureCount                       uint32   `protobuf:"varint,6,opt,name=admin_failure_count,json=adminFailureCount,proto3" json:"admin_failure_count,omitempty"`
	ResourceFailureCount                    uint32   `protobuf:"varint,7,opt,name=resource_failure_count,json=resourceFailureCount,proto3" json:"resource_failure_count,omitempty"`
	HomeRegFailureCount                     uint32   `protobuf:"varint,8,opt,name=home_reg_failure_count,json=homeRegFailureCount,proto3" json:"home_reg_failure_count,omitempty"`
	HomeSubnetFailureCount                  uint32   `protobuf:"varint,9,opt,name=home_subnet_failure_count,json=homeSubnetFailureCount,proto3" json:"home_subnet_failure_count,omitempty"`
	BadSequenceFailureCount                 uint32   `protobuf:"varint,10,opt,name=bad_sequence_failure_count,json=badSequenceFailureCount,proto3" json:"bad_sequence_failure_count,omitempty"`
	RegTypeFailureCount                     uint32   `protobuf:"varint,11,opt,name=reg_type_failure_count,json=regTypeFailureCount,proto3" json:"reg_type_failure_count,omitempty"`
	AuthenFailureCount                      uint32   `protobuf:"varint,12,opt,name=authen_failure_count,json=authenFailureCount,proto3" json:"authen_failure_count,omitempty"`
	ProxyRegNotEnabledCount                 uint32   `protobuf:"varint,13,opt,name=proxy_reg_not_enabled_count,json=proxyRegNotEnabledCount,proto3" json:"proxy_reg_not_enabled_count,omitempty"`
	NotLmaForThisMnCount                    uint32   `protobuf:"varint,14,opt,name=not_lma_for_this_mn_count,json=notLmaForThisMnCount,proto3" json:"not_lma_for_this_mn_count,omitempty"`
	NoAuthorForProxyRegCount                uint32   `protobuf:"varint,15,opt,name=no_author_for_proxy_reg_count,json=noAuthorForProxyRegCount,proto3" json:"no_author_for_proxy_reg_count,omitempty"`
	NoAuthorForHnpCount                     uint32   `protobuf:"varint,16,opt,name=no_author_for_hnp_count,json=noAuthorForHnpCount,proto3" json:"no_author_for_hnp_count,omitempty"`
	TimestampMismatchCount                  uint32   `protobuf:"varint,17,opt,name=timestamp_mismatch_count,json=timestampMismatchCount,proto3" json:"timestamp_mismatch_count,omitempty"`
	TimestampLowerThanPreviousAcceptedCount uint32   `protobuf:"varint,18,opt,name=timestamp_lower_than_previous_accepted_count,json=timestampLowerThanPreviousAcceptedCount,proto3" json:"timestamp_lower_than_previous_accepted_count,omitempty"`
	MissingHnpOptCount                      uint32   `protobuf:"varint,19,opt,name=missing_hnp_opt_count,json=missingHnpOptCount,proto3" json:"missing_hnp_opt_count,omitempty"`
	ReceivedHnpsDoNotMatchBceHnpsCount      uint32   `protobuf:"varint,20,opt,name=received_hnps_do_not_match_bce_hnps_count,json=receivedHnpsDoNotMatchBceHnpsCount,proto3" json:"received_hnps_do_not_match_bce_hnps_count,omitempty"`
	MissingMnIdOptCount                     uint32   `protobuf:"varint,21,opt,name=missing_mn_id_opt_count,json=missingMnIdOptCount,proto3" json:"missing_mn_id_opt_count,omitempty"`
	MissingHiOptCount                       uint32   `protobuf:"varint,22,opt,name=missing_hi_opt_count,json=missingHiOptCount,proto3" json:"missing_hi_opt_count,omitempty"`
	MissingAccessTechTypeOptCount           uint32   `protobuf:"varint,23,opt,name=missing_access_tech_type_opt_count,json=missingAccessTechTypeOptCount,proto3" json:"missing_access_tech_type_opt_count,omitempty"`
	NoAuthorForIpv4MobilityCount            uint32   `protobuf:"varint,24,opt,name=no_author_for_ipv4_mobility_count,json=noAuthorForIpv4MobilityCount,proto3" json:"no_author_for_ipv4_mobility_count,omitempty"`
	NoAuthorForIpv4HoaCount                 uint32   `protobuf:"varint,25,opt,name=no_author_for_ipv4_hoa_count,json=noAuthorForIpv4HoaCount,proto3" json:"no_author_for_ipv4_hoa_count,omitempty"`
	NoAuthorForIpv6MobilityCount            uint32   `protobuf:"varint,26,opt,name=no_author_for_ipv6_mobility_count,json=noAuthorForIpv6MobilityCount,proto3" json:"no_author_for_ipv6_mobility_count,omitempty"`
	MultipleIpv4HoANotSupportedCount        uint32   `protobuf:"varint,27,opt,name=multiple_ipv4_ho_a_not_supported_count,json=multipleIpv4HoANotSupportedCount,proto3" json:"multiple_ipv4_ho_a_not_supported_count,omitempty"`
	GreKeyOptRequiredCount                  uint32   `protobuf:"varint,28,opt,name=gre_key_opt_required_count,json=greKeyOptRequiredCount,proto3" json:"gre_key_opt_required_count,omitempty"`
	XXX_NoUnkeyedLiteral                    struct{} `json:"-"`
	XXX_unrecognized                        []byte   `json:"-"`
	XXX_sizecache                           int32    `json:"-"`
}

func (m *Pmipv6PbaStatsBd) Reset()         { *m = Pmipv6PbaStatsBd{} }
func (m *Pmipv6PbaStatsBd) String() string { return proto.CompactTextString(m) }
func (*Pmipv6PbaStatsBd) ProtoMessage()    {}
func (*Pmipv6PbaStatsBd) Descriptor() ([]byte, []int) {
	return fileDescriptor_50ad205fe748a0f6, []int{2}
}

func (m *Pmipv6PbaStatsBd) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Pmipv6PbaStatsBd.Unmarshal(m, b)
}
func (m *Pmipv6PbaStatsBd) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Pmipv6PbaStatsBd.Marshal(b, m, deterministic)
}
func (m *Pmipv6PbaStatsBd) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Pmipv6PbaStatsBd.Merge(m, src)
}
func (m *Pmipv6PbaStatsBd) XXX_Size() int {
	return xxx_messageInfo_Pmipv6PbaStatsBd.Size(m)
}
func (m *Pmipv6PbaStatsBd) XXX_DiscardUnknown() {
	xxx_messageInfo_Pmipv6PbaStatsBd.DiscardUnknown(m)
}

var xxx_messageInfo_Pmipv6PbaStatsBd proto.InternalMessageInfo

func (m *Pmipv6PbaStatsBd) GetPbaCount() uint64 {
	if m != nil {
		return m.PbaCount
	}
	return 0
}

func (m *Pmipv6PbaStatsBd) GetPbaDropCount() uint32 {
	if m != nil {
		return m.PbaDropCount
	}
	return 0
}

func (m *Pmipv6PbaStatsBd) GetAcceptedCount() uint32 {
	if m != nil {
		return m.AcceptedCount
	}
	return 0
}

func (m *Pmipv6PbaStatsBd) GetUnknownCount() uint32 {
	if m != nil {
		return m.UnknownCount
	}
	return 0
}

func (m *Pmipv6PbaStatsBd) GetUnspecifiedFailureCount() uint32 {
	if m != nil {
		return m.UnspecifiedFailureCount
	}
	return 0
}

func (m *Pmipv6PbaStatsBd) GetAdminFailureCount() uint32 {
	if m != nil {
		return m.AdminFailureCount
	}
	return 0
}

func (m *Pmipv6PbaStatsBd) GetResourceFailureCount() uint32 {
	if m != nil {
		return m.ResourceFailureCount
	}
	return 0
}

func (m *Pmipv6PbaStatsBd) GetHomeRegFailureCount() uint32 {
	if m != nil {
		return m.HomeRegFailureCount
	}
	return 0
}

func (m *Pmipv6PbaStatsBd) GetHomeSubnetFailureCount() uint32 {
	if m != nil {
		return m.HomeSubnetFailureCount
	}
	return 0
}

func (m *Pmipv6PbaStatsBd) GetBadSequenceFailureCount() uint32 {
	if m != nil {
		return m.BadSequenceFailureCount
	}
	return 0
}

func (m *Pmipv6PbaStatsBd) GetRegTypeFailureCount() uint32 {
	if m != nil {
		return m.RegTypeFailureCount
	}
	return 0
}

func (m *Pmipv6PbaStatsBd) GetAuthenFailureCount() uint32 {
	if m != nil {
		return m.AuthenFailureCount
	}
	return 0
}

func (m *Pmipv6PbaStatsBd) GetProxyRegNotEnabledCount() uint32 {
	if m != nil {
		return m.ProxyRegNotEnabledCount
	}
	return 0
}

func (m *Pmipv6PbaStatsBd) GetNotLmaForThisMnCount() uint32 {
	if m != nil {
		return m.NotLmaForThisMnCount
	}
	return 0
}

func (m *Pmipv6PbaStatsBd) GetNoAuthorForProxyRegCount() uint32 {
	if m != nil {
		return m.NoAuthorForProxyRegCount
	}
	return 0
}

func (m *Pmipv6PbaStatsBd) GetNoAuthorForHnpCount() uint32 {
	if m != nil {
		return m.NoAuthorForHnpCount
	}
	return 0
}

func (m *Pmipv6PbaStatsBd) GetTimestampMismatchCount() uint32 {
	if m != nil {
		return m.TimestampMismatchCount
	}
	return 0
}

func (m *Pmipv6PbaStatsBd) GetTimestampLowerThanPreviousAcceptedCount() uint32 {
	if m != nil {
		return m.TimestampLowerThanPreviousAcceptedCount
	}
	return 0
}

func (m *Pmipv6PbaStatsBd) GetMissingHnpOptCount() uint32 {
	if m != nil {
		return m.MissingHnpOptCount
	}
	return 0
}

func (m *Pmipv6PbaStatsBd) GetReceivedHnpsDoNotMatchBceHnpsCount() uint32 {
	if m != nil {
		return m.ReceivedHnpsDoNotMatchBceHnpsCount
	}
	return 0
}

func (m *Pmipv6PbaStatsBd) GetMissingMnIdOptCount() uint32 {
	if m != nil {
		return m.MissingMnIdOptCount
	}
	return 0
}

func (m *Pmipv6PbaStatsBd) GetMissingHiOptCount() uint32 {
	if m != nil {
		return m.MissingHiOptCount
	}
	return 0
}

func (m *Pmipv6PbaStatsBd) GetMissingAccessTechTypeOptCount() uint32 {
	if m != nil {
		return m.MissingAccessTechTypeOptCount
	}
	return 0
}

func (m *Pmipv6PbaStatsBd) GetNoAuthorForIpv4MobilityCount() uint32 {
	if m != nil {
		return m.NoAuthorForIpv4MobilityCount
	}
	return 0
}

func (m *Pmipv6PbaStatsBd) GetNoAuthorForIpv4HoaCount() uint32 {
	if m != nil {
		return m.NoAuthorForIpv4HoaCount
	}
	return 0
}

func (m *Pmipv6PbaStatsBd) GetNoAuthorForIpv6MobilityCount() uint32 {
	if m != nil {
		return m.NoAuthorForIpv6MobilityCount
	}
	return 0
}

func (m *Pmipv6PbaStatsBd) GetMultipleIpv4HoANotSupportedCount() uint32 {
	if m != nil {
		return m.MultipleIpv4HoANotSupportedCount
	}
	return 0
}

func (m *Pmipv6PbaStatsBd) GetGreKeyOptRequiredCount() uint32 {
	if m != nil {
		return m.GreKeyOptRequiredCount
	}
	return 0
}

type Pmipv6PbriStatsBd struct {
	PbriCount                      uint64   `protobuf:"varint,1,opt,name=pbri_count,json=pbriCount,proto3" json:"pbri_count,omitempty"`
	PbriDropCount                  uint32   `protobuf:"varint,2,opt,name=pbri_drop_count,json=pbriDropCount,proto3" json:"pbri_drop_count,omitempty"`
	UnspecifiedCount               uint32   `protobuf:"varint,3,opt,name=unspecified_count,json=unspecifiedCount,proto3" json:"unspecified_count,omitempty"`
	AdminReasonCount               uint32   `protobuf:"varint,4,opt,name=admin_reason_count,json=adminReasonCount,proto3" json:"admin_reason_count,omitempty"`
	MagHandoverSameAttCount        uint32   `protobuf:"varint,5,opt,name=mag_handover_same_att_count,json=magHandoverSameAttCount,proto3" json:"mag_handover_same_att_count,omitempty"`
	MagHandoverDifferentAttCount   uint32   `protobuf:"varint,6,opt,name=mag_handover_different_att_count,json=magHandoverDifferentAttCount,proto3" json:"mag_handover_different_att_count,omitempty"`
	MagHandoverUnknownCount        uint32   `protobuf:"varint,7,opt,name=mag_handover_unknown_count,json=magHandoverUnknownCount,proto3" json:"mag_handover_unknown_count,omitempty"`
	UserSessionTerminationCount    uint32   `protobuf:"varint,8,opt,name=user_session_termination_count,json=userSessionTerminationCount,proto3" json:"user_session_termination_count,omitempty"`
	NetworkSessionTerminationCount uint32   `protobuf:"varint,9,opt,name=network_session_termination_count,json=networkSessionTerminationCount,proto3" json:"network_session_termination_count,omitempty"`
	OutOfSyncBceStateCount         uint32   `protobuf:"varint,10,opt,name=out_of_sync_bce_state_count,json=outOfSyncBceStateCount,proto3" json:"out_of_sync_bce_state_count,omitempty"`
	PerPeerPolicyCount             uint32   `protobuf:"varint,11,opt,name=per_peer_policy_count,json=perPeerPolicyCount,proto3" json:"per_peer_policy_count,omitempty"`
	RevokingMnLocalPolicyCount     uint32   `protobuf:"varint,12,opt,name=revoking_mn_local_policy_count,json=revokingMnLocalPolicyCount,proto3" json:"revoking_mn_local_policy_count,omitempty"`
	XXX_NoUnkeyedLiteral           struct{} `json:"-"`
	XXX_unrecognized               []byte   `json:"-"`
	XXX_sizecache                  int32    `json:"-"`
}

func (m *Pmipv6PbriStatsBd) Reset()         { *m = Pmipv6PbriStatsBd{} }
func (m *Pmipv6PbriStatsBd) String() string { return proto.CompactTextString(m) }
func (*Pmipv6PbriStatsBd) ProtoMessage()    {}
func (*Pmipv6PbriStatsBd) Descriptor() ([]byte, []int) {
	return fileDescriptor_50ad205fe748a0f6, []int{3}
}

func (m *Pmipv6PbriStatsBd) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Pmipv6PbriStatsBd.Unmarshal(m, b)
}
func (m *Pmipv6PbriStatsBd) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Pmipv6PbriStatsBd.Marshal(b, m, deterministic)
}
func (m *Pmipv6PbriStatsBd) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Pmipv6PbriStatsBd.Merge(m, src)
}
func (m *Pmipv6PbriStatsBd) XXX_Size() int {
	return xxx_messageInfo_Pmipv6PbriStatsBd.Size(m)
}
func (m *Pmipv6PbriStatsBd) XXX_DiscardUnknown() {
	xxx_messageInfo_Pmipv6PbriStatsBd.DiscardUnknown(m)
}

var xxx_messageInfo_Pmipv6PbriStatsBd proto.InternalMessageInfo

func (m *Pmipv6PbriStatsBd) GetPbriCount() uint64 {
	if m != nil {
		return m.PbriCount
	}
	return 0
}

func (m *Pmipv6PbriStatsBd) GetPbriDropCount() uint32 {
	if m != nil {
		return m.PbriDropCount
	}
	return 0
}

func (m *Pmipv6PbriStatsBd) GetUnspecifiedCount() uint32 {
	if m != nil {
		return m.UnspecifiedCount
	}
	return 0
}

func (m *Pmipv6PbriStatsBd) GetAdminReasonCount() uint32 {
	if m != nil {
		return m.AdminReasonCount
	}
	return 0
}

func (m *Pmipv6PbriStatsBd) GetMagHandoverSameAttCount() uint32 {
	if m != nil {
		return m.MagHandoverSameAttCount
	}
	return 0
}

func (m *Pmipv6PbriStatsBd) GetMagHandoverDifferentAttCount() uint32 {
	if m != nil {
		return m.MagHandoverDifferentAttCount
	}
	return 0
}

func (m *Pmipv6PbriStatsBd) GetMagHandoverUnknownCount() uint32 {
	if m != nil {
		return m.MagHandoverUnknownCount
	}
	return 0
}

func (m *Pmipv6PbriStatsBd) GetUserSessionTerminationCount() uint32 {
	if m != nil {
		return m.UserSessionTerminationCount
	}
	return 0
}

func (m *Pmipv6PbriStatsBd) GetNetworkSessionTerminationCount() uint32 {
	if m != nil {
		return m.NetworkSessionTerminationCount
	}
	return 0
}

func (m *Pmipv6PbriStatsBd) GetOutOfSyncBceStateCount() uint32 {
	if m != nil {
		return m.OutOfSyncBceStateCount
	}
	return 0
}

func (m *Pmipv6PbriStatsBd) GetPerPeerPolicyCount() uint32 {
	if m != nil {
		return m.PerPeerPolicyCount
	}
	return 0
}

func (m *Pmipv6PbriStatsBd) GetRevokingMnLocalPolicyCount() uint32 {
	if m != nil {
		return m.RevokingMnLocalPolicyCount
	}
	return 0
}

type Pmipv6PbraStatsBd struct {
	PbraCount                      uint64   `protobuf:"varint,1,opt,name=pbra_count,json=pbraCount,proto3" json:"pbra_count,omitempty"`
	PbraDropCount                  uint32   `protobuf:"varint,2,opt,name=pbra_drop_count,json=pbraDropCount,proto3" json:"pbra_drop_count,omitempty"`
	SuccessCount                   uint32   `protobuf:"varint,3,opt,name=success_count,json=successCount,proto3" json:"success_count,omitempty"`
	PartialSuccessCount            uint32   `protobuf:"varint,4,opt,name=partial_success_count,json=partialSuccessCount,proto3" json:"partial_success_count,omitempty"`
	NoBindingCount                 uint32   `protobuf:"varint,5,opt,name=no_binding_count,json=noBindingCount,proto3" json:"no_binding_count,omitempty"`
	HoaRequiredCount               uint32   `protobuf:"varint,6,opt,name=hoa_required_count,json=hoaRequiredCount,proto3" json:"hoa_required_count,omitempty"`
	NoAuthorForGlobalRevocCount    uint32   `protobuf:"varint,7,opt,name=no_author_for_global_revoc_count,json=noAuthorForGlobalRevocCount,proto3" json:"no_author_for_global_revoc_count,omitempty"`
	MnIdentityRequiredCount        uint32   `protobuf:"varint,8,opt,name=mn_identity_required_count,json=mnIdentityRequiredCount,proto3" json:"mn_identity_required_count,omitempty"`
	MnAttachedCount                uint32   `protobuf:"varint,9,opt,name=mn_attached_count,json=mnAttachedCount,proto3" json:"mn_attached_count,omitempty"`
	UnknownRevocTriggerCount       uint32   `protobuf:"varint,10,opt,name=unknown_revoc_trigger_count,json=unknownRevocTriggerCount,proto3" json:"unknown_revoc_trigger_count,omitempty"`
	RevocFunctionNotSupportedCount uint32   `protobuf:"varint,11,opt,name=revoc_function_not_supported_count,json=revocFunctionNotSupportedCount,proto3" json:"revoc_function_not_supported_count,omitempty"`
	PbrNotSupportedCount           uint32   `protobuf:"varint,12,opt,name=pbr_not_supported_count,json=pbrNotSupportedCount,proto3" json:"pbr_not_supported_count,omitempty"`
	XXX_NoUnkeyedLiteral           struct{} `json:"-"`
	XXX_unrecognized               []byte   `json:"-"`
	XXX_sizecache                  int32    `json:"-"`
}

func (m *Pmipv6PbraStatsBd) Reset()         { *m = Pmipv6PbraStatsBd{} }
func (m *Pmipv6PbraStatsBd) String() string { return proto.CompactTextString(m) }
func (*Pmipv6PbraStatsBd) ProtoMessage()    {}
func (*Pmipv6PbraStatsBd) Descriptor() ([]byte, []int) {
	return fileDescriptor_50ad205fe748a0f6, []int{4}
}

func (m *Pmipv6PbraStatsBd) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Pmipv6PbraStatsBd.Unmarshal(m, b)
}
func (m *Pmipv6PbraStatsBd) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Pmipv6PbraStatsBd.Marshal(b, m, deterministic)
}
func (m *Pmipv6PbraStatsBd) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Pmipv6PbraStatsBd.Merge(m, src)
}
func (m *Pmipv6PbraStatsBd) XXX_Size() int {
	return xxx_messageInfo_Pmipv6PbraStatsBd.Size(m)
}
func (m *Pmipv6PbraStatsBd) XXX_DiscardUnknown() {
	xxx_messageInfo_Pmipv6PbraStatsBd.DiscardUnknown(m)
}

var xxx_messageInfo_Pmipv6PbraStatsBd proto.InternalMessageInfo

func (m *Pmipv6PbraStatsBd) GetPbraCount() uint64 {
	if m != nil {
		return m.PbraCount
	}
	return 0
}

func (m *Pmipv6PbraStatsBd) GetPbraDropCount() uint32 {
	if m != nil {
		return m.PbraDropCount
	}
	return 0
}

func (m *Pmipv6PbraStatsBd) GetSuccessCount() uint32 {
	if m != nil {
		return m.SuccessCount
	}
	return 0
}

func (m *Pmipv6PbraStatsBd) GetPartialSuccessCount() uint32 {
	if m != nil {
		return m.PartialSuccessCount
	}
	return 0
}

func (m *Pmipv6PbraStatsBd) GetNoBindingCount() uint32 {
	if m != nil {
		return m.NoBindingCount
	}
	return 0
}

func (m *Pmipv6PbraStatsBd) GetHoaRequiredCount() uint32 {
	if m != nil {
		return m.HoaRequiredCount
	}
	return 0
}

func (m *Pmipv6PbraStatsBd) GetNoAuthorForGlobalRevocCount() uint32 {
	if m != nil {
		return m.NoAuthorForGlobalRevocCount
	}
	return 0
}

func (m *Pmipv6PbraStatsBd) GetMnIdentityRequiredCount() uint32 {
	if m != nil {
		return m.MnIdentityRequiredCount
	}
	return 0
}

func (m *Pmipv6PbraStatsBd) GetMnAttachedCount() uint32 {
	if m != nil {
		return m.MnAttachedCount
	}
	return 0
}

func (m *Pmipv6PbraStatsBd) GetUnknownRevocTriggerCount() uint32 {
	if m != nil {
		return m.UnknownRevocTriggerCount
	}
	return 0
}

func (m *Pmipv6PbraStatsBd) GetRevocFunctionNotSupportedCount() uint32 {
	if m != nil {
		return m.RevocFunctionNotSupportedCount
	}
	return 0
}

func (m *Pmipv6PbraStatsBd) GetPbrNotSupportedCount() uint32 {
	if m != nil {
		return m.PbrNotSupportedCount
	}
	return 0
}

type Pmipv6LmaProtoStatsBd struct {
	PbuReceiveStatistics  *Pmipv6PbuStatsBd  `protobuf:"bytes,1,opt,name=pbu_receive_statistics,json=pbuReceiveStatistics,proto3" json:"pbu_receive_statistics,omitempty"`
	PbaSendStatistics     *Pmipv6PbaStatsBd  `protobuf:"bytes,2,opt,name=pba_send_statistics,json=pbaSendStatistics,proto3" json:"pba_send_statistics,omitempty"`
	PbriSendStatistics    *Pmipv6PbriStatsBd `protobuf:"bytes,3,opt,name=pbri_send_statistics,json=pbriSendStatistics,proto3" json:"pbri_send_statistics,omitempty"`
	PbriReceiveStatistics *Pmipv6PbriStatsBd `protobuf:"bytes,4,opt,name=pbri_receive_statistics,json=pbriReceiveStatistics,proto3" json:"pbri_receive_statistics,omitempty"`
	PbraSendStatistics    *Pmipv6PbraStatsBd `protobuf:"bytes,5,opt,name=pbra_send_statistics,json=pbraSendStatistics,proto3" json:"pbra_send_statistics,omitempty"`
	PbraReceiveStatistics *Pmipv6PbraStatsBd `protobuf:"bytes,6,opt,name=pbra_receive_statistics,json=pbraReceiveStatistics,proto3" json:"pbra_receive_statistics,omitempty"`
	XXX_NoUnkeyedLiteral  struct{}           `json:"-"`
	XXX_unrecognized      []byte             `json:"-"`
	XXX_sizecache         int32              `json:"-"`
}

func (m *Pmipv6LmaProtoStatsBd) Reset()         { *m = Pmipv6LmaProtoStatsBd{} }
func (m *Pmipv6LmaProtoStatsBd) String() string { return proto.CompactTextString(m) }
func (*Pmipv6LmaProtoStatsBd) ProtoMessage()    {}
func (*Pmipv6LmaProtoStatsBd) Descriptor() ([]byte, []int) {
	return fileDescriptor_50ad205fe748a0f6, []int{5}
}

func (m *Pmipv6LmaProtoStatsBd) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Pmipv6LmaProtoStatsBd.Unmarshal(m, b)
}
func (m *Pmipv6LmaProtoStatsBd) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Pmipv6LmaProtoStatsBd.Marshal(b, m, deterministic)
}
func (m *Pmipv6LmaProtoStatsBd) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Pmipv6LmaProtoStatsBd.Merge(m, src)
}
func (m *Pmipv6LmaProtoStatsBd) XXX_Size() int {
	return xxx_messageInfo_Pmipv6LmaProtoStatsBd.Size(m)
}
func (m *Pmipv6LmaProtoStatsBd) XXX_DiscardUnknown() {
	xxx_messageInfo_Pmipv6LmaProtoStatsBd.DiscardUnknown(m)
}

var xxx_messageInfo_Pmipv6LmaProtoStatsBd proto.InternalMessageInfo

func (m *Pmipv6LmaProtoStatsBd) GetPbuReceiveStatistics() *Pmipv6PbuStatsBd {
	if m != nil {
		return m.PbuReceiveStatistics
	}
	return nil
}

func (m *Pmipv6LmaProtoStatsBd) GetPbaSendStatistics() *Pmipv6PbaStatsBd {
	if m != nil {
		return m.PbaSendStatistics
	}
	return nil
}

func (m *Pmipv6LmaProtoStatsBd) GetPbriSendStatistics() *Pmipv6PbriStatsBd {
	if m != nil {
		return m.PbriSendStatistics
	}
	return nil
}

func (m *Pmipv6LmaProtoStatsBd) GetPbriReceiveStatistics() *Pmipv6PbriStatsBd {
	if m != nil {
		return m.PbriReceiveStatistics
	}
	return nil
}

func (m *Pmipv6LmaProtoStatsBd) GetPbraSendStatistics() *Pmipv6PbraStatsBd {
	if m != nil {
		return m.PbraSendStatistics
	}
	return nil
}

func (m *Pmipv6LmaProtoStatsBd) GetPbraReceiveStatistics() *Pmipv6PbraStatsBd {
	if m != nil {
		return m.PbraReceiveStatistics
	}
	return nil
}

type Pmipv6ShowLmaPeerStatsBd struct {
	LmaIdentifier        string                 `protobuf:"bytes,50,opt,name=lma_identifier,json=lmaIdentifier,proto3" json:"lma_identifier,omitempty"`
	ProtocolStatistics   *Pmipv6LmaProtoStatsBd `protobuf:"bytes,51,opt,name=protocol_statistics,json=protocolStatistics,proto3" json:"protocol_statistics,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *Pmipv6ShowLmaPeerStatsBd) Reset()         { *m = Pmipv6ShowLmaPeerStatsBd{} }
func (m *Pmipv6ShowLmaPeerStatsBd) String() string { return proto.CompactTextString(m) }
func (*Pmipv6ShowLmaPeerStatsBd) ProtoMessage()    {}
func (*Pmipv6ShowLmaPeerStatsBd) Descriptor() ([]byte, []int) {
	return fileDescriptor_50ad205fe748a0f6, []int{6}
}

func (m *Pmipv6ShowLmaPeerStatsBd) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Pmipv6ShowLmaPeerStatsBd.Unmarshal(m, b)
}
func (m *Pmipv6ShowLmaPeerStatsBd) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Pmipv6ShowLmaPeerStatsBd.Marshal(b, m, deterministic)
}
func (m *Pmipv6ShowLmaPeerStatsBd) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Pmipv6ShowLmaPeerStatsBd.Merge(m, src)
}
func (m *Pmipv6ShowLmaPeerStatsBd) XXX_Size() int {
	return xxx_messageInfo_Pmipv6ShowLmaPeerStatsBd.Size(m)
}
func (m *Pmipv6ShowLmaPeerStatsBd) XXX_DiscardUnknown() {
	xxx_messageInfo_Pmipv6ShowLmaPeerStatsBd.DiscardUnknown(m)
}

var xxx_messageInfo_Pmipv6ShowLmaPeerStatsBd proto.InternalMessageInfo

func (m *Pmipv6ShowLmaPeerStatsBd) GetLmaIdentifier() string {
	if m != nil {
		return m.LmaIdentifier
	}
	return ""
}

func (m *Pmipv6ShowLmaPeerStatsBd) GetProtocolStatistics() *Pmipv6LmaProtoStatsBd {
	if m != nil {
		return m.ProtocolStatistics
	}
	return nil
}

func init() {
	proto.RegisterType((*Pmipv6ShowLmaPeerStatsBd_KEYS)(nil), "cisco_ios_xr_ip_mobileip_oper.pmipv6.lma.statistics.mag_statistics.mag_statistic.pmipv6_show_lma_peer_stats_bd_KEYS")
	proto.RegisterType((*Pmipv6PbuStatsBd)(nil), "cisco_ios_xr_ip_mobileip_oper.pmipv6.lma.statistics.mag_statistics.mag_statistic.pmipv6_pbu_stats_bd")
	proto.RegisterType((*Pmipv6PbaStatsBd)(nil), "cisco_ios_xr_ip_mobileip_oper.pmipv6.lma.statistics.mag_statistics.mag_statistic.pmipv6_pba_stats_bd")
	proto.RegisterType((*Pmipv6PbriStatsBd)(nil), "cisco_ios_xr_ip_mobileip_oper.pmipv6.lma.statistics.mag_statistics.mag_statistic.pmipv6_pbri_stats_bd")
	proto.RegisterType((*Pmipv6PbraStatsBd)(nil), "cisco_ios_xr_ip_mobileip_oper.pmipv6.lma.statistics.mag_statistics.mag_statistic.pmipv6_pbra_stats_bd")
	proto.RegisterType((*Pmipv6LmaProtoStatsBd)(nil), "cisco_ios_xr_ip_mobileip_oper.pmipv6.lma.statistics.mag_statistics.mag_statistic.pmipv6_lma_proto_stats_bd")
	proto.RegisterType((*Pmipv6ShowLmaPeerStatsBd)(nil), "cisco_ios_xr_ip_mobileip_oper.pmipv6.lma.statistics.mag_statistics.mag_statistic.pmipv6_show_lma_peer_stats_bd")
}

func init() {
	proto.RegisterFile("pmipv6_show_lma_peer_stats_bd.proto", fileDescriptor_50ad205fe748a0f6)
}

var fileDescriptor_50ad205fe748a0f6 = []byte{
	// 1509 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x58, 0x5b, 0x6f, 0x1b, 0x45,
	0x18, 0x95, 0x7b, 0x4b, 0x32, 0x4d, 0xd2, 0xc4, 0xb9, 0xdf, 0xaa, 0xd4, 0x85, 0x52, 0xa0, 0x32,
	0xd0, 0x96, 0x72, 0x29, 0xa8, 0x4a, 0xda, 0xa6, 0x09, 0x6d, 0xd2, 0xc8, 0x4e, 0x25, 0x78, 0x40,
	0xa3, 0xd9, 0xdd, 0xcf, 0xf6, 0x28, 0xbb, 0x33, 0xd3, 0x99, 0x59, 0xa7, 0x7e, 0xe3, 0x4f, 0x20,
	0x21, 0x81, 0xf8, 0x2b, 0x3c, 0xf3, 0x43, 0xf8, 0x17, 0x3c, 0xa0, 0xb9, 0xec, 0x7a, 0x77, 0xed,
	0xf6, 0x89, 0xf4, 0x71, 0xe7, 0x3b, 0xe7, 0xf8, 0xcc, 0xec, 0x99, 0xef, 0xcb, 0x06, 0xdd, 0x14,
	0x09, 0x15, 0xfd, 0x07, 0x58, 0xf5, 0xf8, 0x19, 0x8e, 0x13, 0x82, 0x05, 0x80, 0xc4, 0x4a, 0x13,
	0xad, 0x70, 0x10, 0x35, 0x85, 0xe4, 0x9a, 0xd7, 0x8f, 0x43, 0xaa, 0x42, 0x8e, 0x29, 0x57, 0xf8,
	0x8d, 0xc4, 0x54, 0xe0, 0x84, 0x07, 0x34, 0x06, 0x2a, 0x30, 0x17, 0x20, 0x9b, 0x4e, 0xa2, 0x19,
	0x27, 0xa4, 0x69, 0x88, 0x54, 0x69, 0x1a, 0xaa, 0x66, 0x42, 0xba, 0xf8, 0x6d, 0x8f, 0x8d, 0x47,
	0xa8, 0xf1, 0xce, 0x1f, 0xc6, 0xcf, 0x9f, 0xfe, 0xd4, 0xae, 0xaf, 0xa1, 0x49, 0x43, 0x63, 0x24,
	0x81, 0xd5, 0xda, 0x76, 0xed, 0xf6, 0x54, 0x6b, 0x22, 0x21, 0xdd, 0x23, 0x92, 0x40, 0xe3, 0x47,
	0xb4, 0xe0, 0x05, 0x44, 0x90, 0xe6, 0xb4, 0xfa, 0x06, 0x9a, 0x32, 0xcf, 0x21, 0x4f, 0x99, 0xb6,
	0x94, 0x4b, 0xad, 0x49, 0x11, 0xa4, 0x8f, 0xcd, 0x73, 0xfd, 0x03, 0x34, 0x6b, 0x8a, 0x91, 0xe4,
	0xc2, 0x23, 0x2e, 0x6c, 0xd7, 0x6e, 0xcf, 0xb4, 0xa6, 0x45, 0x90, 0x3e, 0x91, 0x5c, 0x58, 0x54,
	0xe3, 0xdf, 0xe9, 0x82, 0x34, 0xa9, 0x48, 0x93, 0xaa, 0x34, 0x29, 0x48, 0x93, 0xb1, 0xd2, 0x24,
	0x97, 0xae, 0x7f, 0x88, 0x66, 0x49, 0x18, 0x82, 0xd0, 0x10, 0x79, 0xd4, 0x45, 0x8b, 0x9a, 0xc9,
	0x56, 0x1d, 0xec, 0x26, 0x9a, 0x49, 0xd9, 0x29, 0xe3, 0x67, 0xcc, 0xa3, 0x2e, 0x39, 0x2d, 0xbf,
	0xe8, 0x40, 0xdf, 0xa2, 0xb5, 0x94, 0x29, 0x01, 0x21, 0xed, 0x50, 0x88, 0x70, 0x87, 0xd0, 0x38,
	0x95, 0xe0, 0x09, 0x97, 0x2d, 0x61, 0xa5, 0x00, 0xd8, 0x73, 0x75, 0xc7, 0x6d, 0xa2, 0x05, 0x12,
	0x25, 0x94, 0x55, 0x58, 0x57, 0x2c, 0x6b, 0xde, 0x96, 0x4a, 0xf8, 0xfb, 0x68, 0x59, 0x82, 0xe2,
	0xa9, 0x0c, 0xa1, 0x42, 0x99, 0xb0, 0x94, 0xc5, 0xac, 0x5a, 0x62, 0xdd, 0x43, 0xcb, 0x3d, 0x9e,
	0x00, 0x96, 0xd0, 0xad, 0xb0, 0x26, 0x2d, 0x6b, 0xc1, 0x54, 0x5b, 0xd0, 0x2d, 0x91, 0xbe, 0x41,
	0x6b, 0x96, 0xa4, 0xd2, 0x80, 0x81, 0xae, 0xf0, 0xa6, 0x2c, 0xcf, 0xaa, 0xb6, 0x6d, 0xbd, 0x44,
	0x7d, 0x88, 0xd6, 0x03, 0x12, 0x61, 0x05, 0xaf, 0x53, 0x60, 0x23, 0x4e, 0x91, 0x3b, 0x92, 0x80,
	0x44, 0x6d, 0x0f, 0xa8, 0x9a, 0x35, 0x3e, 0xf5, 0x40, 0x54, 0x89, 0x57, 0x9d, 0x59, 0x09, 0xdd,
	0x93, 0x81, 0x28, 0x93, 0x3e, 0x47, 0x8b, 0x24, 0xd5, 0x3d, 0xa8, 0x1e, 0xe4, 0xb4, 0xa5, 0xd4,
	0x5d, 0xad, 0xc4, 0xf8, 0x0e, 0x6d, 0x08, 0xc9, 0xdf, 0x0c, 0xec, 0xa1, 0x30, 0xae, 0x31, 0x30,
	0x12, 0xc4, 0x79, 0x1c, 0x66, 0x9c, 0x49, 0x0b, 0x69, 0x41, 0xf7, 0x88, 0xeb, 0xa7, 0xae, 0xee,
	0xd8, 0x5f, 0xa1, 0x35, 0xc3, 0x31, 0xb7, 0xa5, 0xc3, 0x25, 0xd6, 0x3d, 0xaa, 0x70, 0x92, 0x85,
	0x64, 0xd6, 0xbd, 0x0a, 0xc6, 0xf5, 0x8b, 0x84, 0xec, 0x71, 0x79, 0xd2, 0xa3, 0xea, 0xd0, 0x87,
	0xe5, 0x11, 0xda, 0x62, 0x1c, 0x1b, 0x3f, 0x5c, 0x5a, 0xea, 0xd0, 0x84, 0x23, 0x5f, 0xb3, 0xe4,
	0x55, 0xc6, 0x77, 0x2c, 0x66, 0x8f, 0xcb, 0x63, 0xef, 0x21, 0x4b, 0xc0, 0x4a, 0x59, 0xa0, 0xc7,
	0xb2, 0xa0, 0xcf, 0xb9, 0xf3, 0x29, 0x50, 0xf7, 0x99, 0xcf, 0xfb, 0xd7, 0x68, 0x55, 0xd3, 0x04,
	0x94, 0x26, 0x89, 0xc0, 0x09, 0x55, 0x09, 0xd1, 0x61, 0xcf, 0xd3, 0xe6, 0xdd, 0xbb, 0xcc, 0xeb,
	0x87, 0xbe, 0xec, 0x98, 0x3f, 0xa3, 0x3b, 0x43, 0x66, 0xcc, 0xcf, 0xc0, 0xec, 0x96, 0x30, 0x2c,
	0x24, 0xf4, 0x29, 0x4f, 0x15, 0xae, 0xdc, 0xa3, 0xba, 0x55, 0xfb, 0x28, 0xe7, 0xbc, 0x30, 0x94,
	0x93, 0x1e, 0x61, 0xc7, 0x9e, 0xb0, 0x53, 0xba, 0x61, 0x5f, 0xa0, 0xa5, 0x84, 0x2a, 0x45, 0x59,
	0xd7, 0x6e, 0x84, 0x0b, 0xed, 0x75, 0x16, 0xdc, 0x9b, 0xf3, 0xc5, 0x7d, 0x26, 0x5e, 0x0a, 0xed,
	0x28, 0xaf, 0xd0, 0xc7, 0x12, 0x42, 0xa0, 0x7d, 0x88, 0x0c, 0x47, 0xe1, 0x88, 0xdb, 0x17, 0xe8,
	0xf6, 0x14, 0x84, 0xe0, 0x56, 0x9d, 0xcc, 0xa2, 0x95, 0x69, 0x64, 0x84, 0x7d, 0x26, 0xd4, 0x13,
	0x7e, 0xc4, 0xf5, 0xa1, 0x01, 0xef, 0x86, 0x60, 0x16, 0xf2, 0x83, 0xcd, 0x9c, 0x24, 0x0c, 0xd3,
	0xa8, 0xe0, 0x65, 0xc9, 0x1d, 0xac, 0x2f, 0x1f, 0xb2, 0x83, 0x28, 0x37, 0xf3, 0x19, 0x5a, 0xcc,
	0xfd, 0xd3, 0x02, 0x65, 0xd9, 0xdd, 0xe0, 0xcc, 0x3e, 0xcd, 0x09, 0x07, 0xa8, 0x91, 0x11, 0xcc,
	0xc9, 0x29, 0x85, 0x35, 0x84, 0x3d, 0x17, 0xf7, 0x21, 0x7d, 0xc5, 0xd2, 0xb7, 0x3c, 0x72, 0xc7,
	0x02, 0x4f, 0x20, 0xec, 0x99, 0xe0, 0xe7, 0x52, 0xcf, 0xd0, 0x8d, 0x72, 0x14, 0xa8, 0xe8, 0xdf,
	0x77, 0x13, 0x81, 0xea, 0x81, 0x57, 0x5a, 0xb5, 0x4a, 0x9b, 0x85, 0x50, 0x1c, 0x88, 0xfe, 0xfd,
	0x43, 0x0f, 0x72, 0x42, 0xdf, 0xa3, 0xcd, 0x31, 0x42, 0x3d, 0x9e, 0xf5, 0xd8, 0x35, 0x77, 0x19,
	0x2a, 0x1a, 0xfb, 0x9c, 0xbc, 0xdd, 0xc7, 0x83, 0xaa, 0x8f, 0xf5, 0x71, 0x3e, 0x1e, 0x94, 0x7d,
	0x1c, 0xa3, 0x5b, 0x49, 0x1a, 0x6b, 0x2a, 0x62, 0xc8, 0x2c, 0x60, 0x62, 0xdf, 0xad, 0x4a, 0x85,
	0xe0, 0x72, 0x98, 0xb2, 0x0d, 0xab, 0xb6, 0x9d, 0xa1, 0x9d, 0x9d, 0x9d, 0x23, 0xae, 0xdb, 0x19,
	0x30, 0xeb, 0xcd, 0xeb, 0x5d, 0x09, 0xf8, 0x14, 0x06, 0xf6, 0x70, 0x25, 0xbc, 0x4e, 0xa9, 0xcc,
	0x55, 0x36, 0x5d, 0xf2, 0xbb, 0x12, 0x9e, 0xc3, 0xe0, 0xa5, 0xd0, 0x2d, 0x5f, 0x76, 0xe3, 0xe7,
	0xaf, 0xcb, 0x68, 0x31, 0x1f, 0x3f, 0x92, 0x0e, 0xe7, 0xcf, 0x16, 0x42, 0x76, 0xa1, 0x38, 0x80,
	0xa6, 0xcc, 0x8a, 0xfb, 0xcd, 0x5b, 0xe8, 0x9a, 0x2d, 0x8f, 0x8c, 0xa0, 0x19, 0xb3, 0x3c, 0x9c,
	0x41, 0x9f, 0xa2, 0xf9, 0xe2, 0xdc, 0x28, 0x8e, 0xa1, 0xb9, 0x42, 0xc1, 0x81, 0xef, 0xa0, 0xba,
	0x1b, 0x14, 0x12, 0x88, 0xe2, 0xe5, 0x71, 0x34, 0x67, 0x2b, 0x2d, 0x5b, 0xc8, 0x9b, 0x9b, 0x19,
	0xd7, 0x3d, 0xc2, 0x22, 0xde, 0x37, 0xc3, 0x9c, 0x24, 0x80, 0x89, 0xd6, 0xe5, 0xa1, 0x94, 0x90,
	0xee, 0xbe, 0x47, 0xb4, 0x49, 0x02, 0x3b, 0xda, 0xe7, 0x6a, 0x0f, 0x6d, 0x97, 0xd8, 0x11, 0xed,
	0x74, 0x40, 0x02, 0xd3, 0x05, 0x09, 0x37, 0xa1, 0x36, 0x0b, 0x12, 0x4f, 0x32, 0x54, 0xae, 0xf3,
	0x10, 0xad, 0x97, 0x74, 0xca, 0xa3, 0x74, 0x62, 0xc4, 0xc4, 0xab, 0xe2, 0x54, 0x7d, 0x8c, 0xae,
	0xa7, 0xca, 0x58, 0x07, 0xa5, 0x28, 0x67, 0x58, 0x83, 0x4c, 0x28, 0x23, 0x9a, 0xe6, 0x9b, 0x77,
	0xb3, 0x6b, 0xc3, 0xa0, 0xda, 0x0e, 0x74, 0x32, 0xc4, 0x64, 0x97, 0xed, 0x06, 0x03, 0x7d, 0xc6,
	0xe5, 0xe9, 0x3b, 0x74, 0xdc, 0x2c, 0xbb, 0xee, 0x81, 0x6f, 0x93, 0x7a, 0x88, 0x36, 0x78, 0xaa,
	0x31, 0xef, 0x60, 0x35, 0x60, 0xa1, 0x6d, 0x33, 0x26, 0x10, 0xe5, 0xa1, 0xb6, 0xcc, 0x53, 0xfd,
	0xb2, 0xd3, 0x1e, 0xb0, 0x70, 0x37, 0x84, 0xb6, 0x29, 0xe7, 0x5d, 0x4e, 0x80, 0x74, 0x7f, 0x58,
	0x09, 0x1e, 0xd3, 0x70, 0x50, 0x1a, 0x69, 0x75, 0x01, 0xf2, 0x18, 0x40, 0x1e, 0xdb, 0x92, 0xa3,
	0xec, 0xa2, 0xeb, 0x12, 0xfa, 0xfc, 0xd4, 0xf7, 0xa3, 0x98, 0x87, 0x24, 0x2e, 0x73, 0xdd, 0x6c,
	0x5b, 0xcf, 0x50, 0x87, 0xec, 0x85, 0xc1, 0x14, 0x34, 0x1a, 0xbf, 0x94, 0x12, 0x4c, 0xaa, 0x09,
	0x26, 0x23, 0x09, 0x26, 0xc5, 0x04, 0x93, 0xf1, 0x09, 0x2e, 0xfc, 0x15, 0x75, 0x13, 0xcd, 0xa8,
	0xd4, 0x35, 0xb1, 0x62, 0x7a, 0xa7, 0xfd, 0xa2, 0x03, 0xdd, 0x45, 0x4b, 0x82, 0x48, 0x4d, 0x49,
	0x8c, 0xcb, 0x60, 0x17, 0xde, 0x05, 0x5f, 0x6c, 0x17, 0x39, 0xb7, 0xd1, 0x1c, 0xe3, 0x38, 0xa0,
	0x2c, 0x32, 0xdb, 0x2f, 0x86, 0x76, 0x96, 0xf1, 0x5d, 0xb7, 0x9c, 0xdf, 0x0b, 0xd3, 0xa7, 0x2a,
	0x17, 0xdb, 0xa5, 0x73, 0xae, 0xc7, 0x49, 0xe9, 0x4a, 0xd7, 0x9f, 0xa2, 0xed, 0x72, 0xa7, 0xea,
	0xc6, 0x3c, 0x20, 0x31, 0x36, 0x67, 0x18, 0x96, 0x72, 0xb9, 0x51, 0x68, 0x54, 0xcf, 0x2c, 0xa8,
	0x65, 0x30, 0xc3, 0x60, 0x9b, 0x11, 0x01, 0x4c, 0x9b, 0x06, 0x57, 0xf9, 0xf1, 0x49, 0x1f, 0x6c,
	0x76, 0xe0, 0x01, 0x65, 0x0f, 0x9f, 0xa0, 0xf9, 0x84, 0x99, 0x9b, 0x44, 0xc2, 0x5e, 0xce, 0x71,
	0x19, 0xbc, 0x96, 0xb0, 0x1d, 0xbf, 0x9e, 0x35, 0xe6, 0x8d, 0xec, 0xd2, 0x38, 0x8b, 0x5a, 0xd2,
	0x6e, 0x17, 0x64, 0x29, 0x74, 0xab, 0x1e, 0x62, 0x0d, 0x9e, 0x38, 0x80, 0xa3, 0xff, 0x80, 0x1a,
	0x8e, 0xd6, 0x49, 0x59, 0x68, 0x13, 0x3f, 0xae, 0x97, 0xba, 0x0c, 0xda, 0xb4, 0x85, 0x7b, 0x1e,
	0x38, 0xda, 0x49, 0xbf, 0x44, 0x2b, 0x22, 0x90, 0x63, 0x05, 0x5c, 0x10, 0x17, 0x45, 0x20, 0x47,
	0x68, 0x8d, 0xbf, 0x27, 0xd0, 0x9a, 0x8f, 0xa0, 0xfd, 0xb4, 0x30, 0x5f, 0x31, 0xc3, 0x1c, 0xfe,
	0x5e, 0x43, 0xcb, 0xe6, 0x43, 0xc0, 0x8f, 0xe7, 0xc2, 0x57, 0x8a, 0x0d, 0xe5, 0xd5, 0xbb, 0xd0,
	0xfc, 0xbf, 0x3f, 0x78, 0x9a, 0x63, 0x3e, 0x56, 0x8c, 0xf7, 0xb4, 0xe5, 0x3c, 0xb4, 0x73, 0x5e,
	0xfd, 0xd7, 0x1a, 0x5a, 0xb0, 0x1f, 0x1e, 0xc0, 0xa2, 0xa2, 0xb5, 0x0b, 0xe7, 0x6e, 0x6d, 0x78,
	0x55, 0x5b, 0xf3, 0x22, 0x20, 0x6d, 0x60, 0x51, 0xc1, 0xd7, 0x6f, 0x35, 0xb4, 0xe8, 0x26, 0x52,
	0xc5, 0xd8, 0x45, 0x6b, 0xac, 0x73, 0x8e, 0xc6, 0x0a, 0x63, 0xb0, 0x55, 0x37, 0x8f, 0x15, 0x6b,
	0x7f, 0xd6, 0x6c, 0x4c, 0xe8, 0xb8, 0x37, 0x7a, 0xe9, 0xbd, 0xba, 0x5b, 0x32, 0x8f, 0xa3, 0xef,
	0xd4, 0x9f, 0xdd, 0xe8, 0x4b, 0xbd, 0x7c, 0xfe, 0xee, 0x48, 0xf9, 0xec, 0xc8, 0xf8, 0xb3, 0x23,
	0xe3, 0xce, 0xee, 0xca, 0x7b, 0x75, 0x67, 0xce, 0x8e, 0x8c, 0x9c, 0x5d, 0xe3, 0x9f, 0x1a, 0xda,
	0x7a, 0xe7, 0xff, 0x0a, 0xcc, 0x67, 0xb5, 0x59, 0x74, 0x9d, 0xb1, 0x43, 0x41, 0xae, 0xde, 0xb5,
	0xff, 0x2c, 0x98, 0x89, 0x13, 0x72, 0x90, 0x2f, 0xd6, 0xff, 0x30, 0x17, 0xcb, 0x74, 0x82, 0x90,
	0xc7, 0xc5, 0x5d, 0xde, 0xb3, 0xbb, 0x3c, 0x3d, 0xb7, 0x5d, 0x8e, 0x76, 0xa0, 0x56, 0x3d, 0xf3,
	0x31, 0xdc, 0x67, 0x70, 0xc5, 0xae, 0xdd, 0xfb, 0x2f, 0x00, 0x00, 0xff, 0xff, 0xb0, 0xc9, 0x00,
	0x49, 0x92, 0x11, 0x00, 0x00,
}
