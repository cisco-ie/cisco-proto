/*
Copyright 2019 Cisco Systems

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: bgp_instances_info_bag.proto

package cisco_ios_xr_ipv4_bgp_oper_bgp_bpm_instances_table_bpm_instances

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type BgpInstancesInfoBag_KEYS struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BgpInstancesInfoBag_KEYS) Reset()         { *m = BgpInstancesInfoBag_KEYS{} }
func (m *BgpInstancesInfoBag_KEYS) String() string { return proto.CompactTextString(m) }
func (*BgpInstancesInfoBag_KEYS) ProtoMessage()    {}
func (*BgpInstancesInfoBag_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_2e212d995e1f8037, []int{0}
}

func (m *BgpInstancesInfoBag_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BgpInstancesInfoBag_KEYS.Unmarshal(m, b)
}
func (m *BgpInstancesInfoBag_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BgpInstancesInfoBag_KEYS.Marshal(b, m, deterministic)
}
func (m *BgpInstancesInfoBag_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BgpInstancesInfoBag_KEYS.Merge(m, src)
}
func (m *BgpInstancesInfoBag_KEYS) XXX_Size() int {
	return xxx_messageInfo_BgpInstancesInfoBag_KEYS.Size(m)
}
func (m *BgpInstancesInfoBag_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_BgpInstancesInfoBag_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_BgpInstancesInfoBag_KEYS proto.InternalMessageInfo

type BgpInstanceInfo_ struct {
	InstanceIdentifier      uint32   `protobuf:"varint,1,opt,name=instance_identifier,json=instanceIdentifier,proto3" json:"instance_identifier,omitempty"`
	PlacedGroupId           uint32   `protobuf:"varint,2,opt,name=placed_group_id,json=placedGroupId,proto3" json:"placed_group_id,omitempty"`
	InstanceNameStr         string   `protobuf:"bytes,3,opt,name=instance_name_str,json=instanceNameStr,proto3" json:"instance_name_str,omitempty"`
	AsNumber                uint32   `protobuf:"varint,4,opt,name=as_number,json=asNumber,proto3" json:"as_number,omitempty"`
	NumberOfVrfs            uint32   `protobuf:"varint,5,opt,name=number_of_vrfs,json=numberOfVrfs,proto3" json:"number_of_vrfs,omitempty"`
	AfArray                 []bool   `protobuf:"varint,6,rep,packed,name=af_array,json=afArray,proto3" json:"af_array,omitempty"`
	ReadOnlyEnabled         bool     `protobuf:"varint,7,opt,name=read_only_enabled,json=readOnlyEnabled,proto3" json:"read_only_enabled,omitempty"`
	InstallDiversionEnabled bool     `protobuf:"varint,8,opt,name=install_diversion_enabled,json=installDiversionEnabled,proto3" json:"install_diversion_enabled,omitempty"`
	SrgbStartConfigured     uint32   `protobuf:"varint,9,opt,name=srgb_start_configured,json=srgbStartConfigured,proto3" json:"srgb_start_configured,omitempty"`
	SrgbEndConfigured       uint32   `protobuf:"varint,10,opt,name=srgb_end_configured,json=srgbEndConfigured,proto3" json:"srgb_end_configured,omitempty"`
	XXX_NoUnkeyedLiteral    struct{} `json:"-"`
	XXX_unrecognized        []byte   `json:"-"`
	XXX_sizecache           int32    `json:"-"`
}

func (m *BgpInstanceInfo_) Reset()         { *m = BgpInstanceInfo_{} }
func (m *BgpInstanceInfo_) String() string { return proto.CompactTextString(m) }
func (*BgpInstanceInfo_) ProtoMessage()    {}
func (*BgpInstanceInfo_) Descriptor() ([]byte, []int) {
	return fileDescriptor_2e212d995e1f8037, []int{1}
}

func (m *BgpInstanceInfo_) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BgpInstanceInfo_.Unmarshal(m, b)
}
func (m *BgpInstanceInfo_) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BgpInstanceInfo_.Marshal(b, m, deterministic)
}
func (m *BgpInstanceInfo_) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BgpInstanceInfo_.Merge(m, src)
}
func (m *BgpInstanceInfo_) XXX_Size() int {
	return xxx_messageInfo_BgpInstanceInfo_.Size(m)
}
func (m *BgpInstanceInfo_) XXX_DiscardUnknown() {
	xxx_messageInfo_BgpInstanceInfo_.DiscardUnknown(m)
}

var xxx_messageInfo_BgpInstanceInfo_ proto.InternalMessageInfo

func (m *BgpInstanceInfo_) GetInstanceIdentifier() uint32 {
	if m != nil {
		return m.InstanceIdentifier
	}
	return 0
}

func (m *BgpInstanceInfo_) GetPlacedGroupId() uint32 {
	if m != nil {
		return m.PlacedGroupId
	}
	return 0
}

func (m *BgpInstanceInfo_) GetInstanceNameStr() string {
	if m != nil {
		return m.InstanceNameStr
	}
	return ""
}

func (m *BgpInstanceInfo_) GetAsNumber() uint32 {
	if m != nil {
		return m.AsNumber
	}
	return 0
}

func (m *BgpInstanceInfo_) GetNumberOfVrfs() uint32 {
	if m != nil {
		return m.NumberOfVrfs
	}
	return 0
}

func (m *BgpInstanceInfo_) GetAfArray() []bool {
	if m != nil {
		return m.AfArray
	}
	return nil
}

func (m *BgpInstanceInfo_) GetReadOnlyEnabled() bool {
	if m != nil {
		return m.ReadOnlyEnabled
	}
	return false
}

func (m *BgpInstanceInfo_) GetInstallDiversionEnabled() bool {
	if m != nil {
		return m.InstallDiversionEnabled
	}
	return false
}

func (m *BgpInstanceInfo_) GetSrgbStartConfigured() uint32 {
	if m != nil {
		return m.SrgbStartConfigured
	}
	return 0
}

func (m *BgpInstanceInfo_) GetSrgbEndConfigured() uint32 {
	if m != nil {
		return m.SrgbEndConfigured
	}
	return 0
}

type BgpInstancesInfoBag struct {
	Instance             []*BgpInstanceInfo_ `protobuf:"bytes,50,rep,name=instance,proto3" json:"instance,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *BgpInstancesInfoBag) Reset()         { *m = BgpInstancesInfoBag{} }
func (m *BgpInstancesInfoBag) String() string { return proto.CompactTextString(m) }
func (*BgpInstancesInfoBag) ProtoMessage()    {}
func (*BgpInstancesInfoBag) Descriptor() ([]byte, []int) {
	return fileDescriptor_2e212d995e1f8037, []int{2}
}

func (m *BgpInstancesInfoBag) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BgpInstancesInfoBag.Unmarshal(m, b)
}
func (m *BgpInstancesInfoBag) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BgpInstancesInfoBag.Marshal(b, m, deterministic)
}
func (m *BgpInstancesInfoBag) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BgpInstancesInfoBag.Merge(m, src)
}
func (m *BgpInstancesInfoBag) XXX_Size() int {
	return xxx_messageInfo_BgpInstancesInfoBag.Size(m)
}
func (m *BgpInstancesInfoBag) XXX_DiscardUnknown() {
	xxx_messageInfo_BgpInstancesInfoBag.DiscardUnknown(m)
}

var xxx_messageInfo_BgpInstancesInfoBag proto.InternalMessageInfo

func (m *BgpInstancesInfoBag) GetInstance() []*BgpInstanceInfo_ {
	if m != nil {
		return m.Instance
	}
	return nil
}

func init() {
	proto.RegisterType((*BgpInstancesInfoBag_KEYS)(nil), "cisco_ios_xr_ipv4_bgp_oper.bgp.bpm_instances_table.bpm_instances.bgp_instances_info_bag_KEYS")
	proto.RegisterType((*BgpInstanceInfo_)(nil), "cisco_ios_xr_ipv4_bgp_oper.bgp.bpm_instances_table.bpm_instances.bgp_instance_info_")
	proto.RegisterType((*BgpInstancesInfoBag)(nil), "cisco_ios_xr_ipv4_bgp_oper.bgp.bpm_instances_table.bpm_instances.bgp_instances_info_bag")
}

func init() { proto.RegisterFile("bgp_instances_info_bag.proto", fileDescriptor_2e212d995e1f8037) }

var fileDescriptor_2e212d995e1f8037 = []byte{
	// 404 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x92, 0xd1, 0x8a, 0xd4, 0x30,
	0x14, 0x86, 0xa9, 0xa3, 0xbb, 0x9d, 0xe8, 0x3a, 0x6c, 0x16, 0x35, 0xcb, 0x2a, 0x94, 0x41, 0xa4,
	0x78, 0x51, 0x61, 0xf4, 0xca, 0x2b, 0x45, 0x07, 0x59, 0x84, 0x5d, 0xe8, 0x88, 0xe0, 0xd5, 0x21,
	0x6d, 0x92, 0x12, 0x68, 0x93, 0x70, 0xd2, 0x19, 0x9c, 0x57, 0xf0, 0xb5, 0x7c, 0x31, 0x49, 0x6a,
	0xbb, 0x23, 0xee, 0xdd, 0x5e, 0xe6, 0xfb, 0xfe, 0x3f, 0x39, 0xb4, 0x87, 0x3c, 0xaf, 0x1a, 0x07,
	0xda, 0xf8, 0x9e, 0x9b, 0x5a, 0x7a, 0xd0, 0x46, 0x59, 0xa8, 0x78, 0x53, 0x38, 0xb4, 0xbd, 0xa5,
	0x1f, 0x6a, 0xed, 0x6b, 0x0b, 0xda, 0x7a, 0xf8, 0x89, 0xa0, 0xdd, 0xee, 0x1d, 0x84, 0xbc, 0x75,
	0x12, 0x8b, 0xaa, 0x71, 0x45, 0xe5, 0xba, 0x83, 0x72, 0xcf, 0xab, 0x56, 0xfe, 0xcb, 0x96, 0x2f,
	0xc8, 0xc5, 0xed, 0x2f, 0xc0, 0xd7, 0xf5, 0x8f, 0xcd, 0xf2, 0xf7, 0x8c, 0xd0, 0x43, 0x3f, 0x68,
	0xfa, 0x86, 0x9c, 0xdd, 0x10, 0x21, 0x4d, 0xaf, 0x95, 0x96, 0xc8, 0x92, 0x2c, 0xc9, 0x4f, 0x4a,
	0x3a, 0xaa, 0xcb, 0xc9, 0xd0, 0x57, 0x64, 0xe1, 0x5a, 0x5e, 0x4b, 0x01, 0x0d, 0xda, 0xad, 0x03,
	0x2d, 0xd8, 0xbd, 0x18, 0x3e, 0x19, 0xf0, 0x97, 0x40, 0x2f, 0x05, 0x7d, 0x4d, 0x4e, 0xa7, 0x8b,
	0x0d, 0xef, 0x24, 0xf8, 0x1e, 0xd9, 0x2c, 0x4b, 0xf2, 0x79, 0xb9, 0x18, 0xc5, 0x15, 0xef, 0xe4,
	0xa6, 0x47, 0x7a, 0x41, 0xe6, 0xdc, 0x83, 0xd9, 0x76, 0x95, 0x44, 0x76, 0x3f, 0xde, 0x96, 0x72,
	0x7f, 0x15, 0xcf, 0xf4, 0x25, 0x79, 0x3c, 0x18, 0xb0, 0x0a, 0x76, 0xa8, 0x3c, 0x7b, 0x10, 0x13,
	0x8f, 0x06, 0x7a, 0xad, 0xbe, 0xa3, 0xf2, 0xf4, 0x9c, 0xa4, 0x5c, 0x01, 0x47, 0xe4, 0x7b, 0x76,
	0x94, 0xcd, 0xf2, 0xb4, 0x3c, 0xe6, 0xea, 0x63, 0x38, 0x86, 0x49, 0x50, 0x72, 0x01, 0xd6, 0xb4,
	0x7b, 0x90, 0x26, 0x7c, 0x3a, 0xc1, 0x8e, 0xb3, 0x24, 0x4f, 0xcb, 0x45, 0x10, 0xd7, 0xa6, 0xdd,
	0xaf, 0x07, 0x4c, 0xdf, 0x93, 0xf3, 0x38, 0x5c, 0xdb, 0x82, 0xd0, 0x3b, 0x89, 0x5e, 0x5b, 0x33,
	0x75, 0xd2, 0xd8, 0x79, 0xf6, 0x37, 0xf0, 0x79, 0xf4, 0x63, 0x77, 0x45, 0x9e, 0x78, 0x6c, 0x2a,
	0xf0, 0x3d, 0xc7, 0x1e, 0x6a, 0x6b, 0x94, 0x6e, 0xb6, 0x28, 0x05, 0x9b, 0xc7, 0x79, 0xcf, 0x82,
	0xdc, 0x04, 0xf7, 0x69, 0x52, 0xb4, 0x20, 0x11, 0x83, 0x34, 0xe2, 0xb0, 0x41, 0x62, 0xe3, 0x34,
	0xa8, 0xb5, 0x11, 0x37, 0xf9, 0xe5, 0xaf, 0x84, 0x3c, 0xbd, 0xfd, 0x2f, 0x53, 0x47, 0xd2, 0x91,
	0xb2, 0x55, 0x36, 0xcb, 0x1f, 0xae, 0xbe, 0x15, 0x77, 0x5d, 0xaa, 0xe2, 0xff, 0x8d, 0x29, 0xa7,
	0x57, 0xaa, 0xa3, 0xb8, 0xba, 0x6f, 0xff, 0x04, 0x00, 0x00, 0xff, 0xff, 0x48, 0x36, 0xfb, 0x2c,
	0xda, 0x02, 0x00, 0x00,
}
