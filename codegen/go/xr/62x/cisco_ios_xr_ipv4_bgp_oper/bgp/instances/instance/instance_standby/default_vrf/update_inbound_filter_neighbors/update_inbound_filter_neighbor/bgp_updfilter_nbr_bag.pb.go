/*
Copyright 2019 Cisco Systems

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: bgp_updfilter_nbr_bag.proto

package cisco_ios_xr_ipv4_bgp_oper_bgp_instances_instance_instance_standby_default_vrf_update_inbound_filter_neighbors_update_inbound_filter_neighbor

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type BgpUpdfilterNbrBag_KEYS struct {
	InstanceName         string   `protobuf:"bytes,1,opt,name=instance_name,json=instanceName,proto3" json:"instance_name,omitempty"`
	NeighborAddress      string   `protobuf:"bytes,2,opt,name=neighbor_address,json=neighborAddress,proto3" json:"neighbor_address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BgpUpdfilterNbrBag_KEYS) Reset()         { *m = BgpUpdfilterNbrBag_KEYS{} }
func (m *BgpUpdfilterNbrBag_KEYS) String() string { return proto.CompactTextString(m) }
func (*BgpUpdfilterNbrBag_KEYS) ProtoMessage()    {}
func (*BgpUpdfilterNbrBag_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_7d630cf5ec3d4128, []int{0}
}

func (m *BgpUpdfilterNbrBag_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BgpUpdfilterNbrBag_KEYS.Unmarshal(m, b)
}
func (m *BgpUpdfilterNbrBag_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BgpUpdfilterNbrBag_KEYS.Marshal(b, m, deterministic)
}
func (m *BgpUpdfilterNbrBag_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BgpUpdfilterNbrBag_KEYS.Merge(m, src)
}
func (m *BgpUpdfilterNbrBag_KEYS) XXX_Size() int {
	return xxx_messageInfo_BgpUpdfilterNbrBag_KEYS.Size(m)
}
func (m *BgpUpdfilterNbrBag_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_BgpUpdfilterNbrBag_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_BgpUpdfilterNbrBag_KEYS proto.InternalMessageInfo

func (m *BgpUpdfilterNbrBag_KEYS) GetInstanceName() string {
	if m != nil {
		return m.InstanceName
	}
	return ""
}

func (m *BgpUpdfilterNbrBag_KEYS) GetNeighborAddress() string {
	if m != nil {
		return m.NeighborAddress
	}
	return ""
}

type BgpL2VpnAddrT struct {
	L2VpnAddress         []uint32 `protobuf:"varint,1,rep,packed,name=l2vpn_address,json=l2vpnAddress,proto3" json:"l2vpn_address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BgpL2VpnAddrT) Reset()         { *m = BgpL2VpnAddrT{} }
func (m *BgpL2VpnAddrT) String() string { return proto.CompactTextString(m) }
func (*BgpL2VpnAddrT) ProtoMessage()    {}
func (*BgpL2VpnAddrT) Descriptor() ([]byte, []int) {
	return fileDescriptor_7d630cf5ec3d4128, []int{1}
}

func (m *BgpL2VpnAddrT) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BgpL2VpnAddrT.Unmarshal(m, b)
}
func (m *BgpL2VpnAddrT) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BgpL2VpnAddrT.Marshal(b, m, deterministic)
}
func (m *BgpL2VpnAddrT) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BgpL2VpnAddrT.Merge(m, src)
}
func (m *BgpL2VpnAddrT) XXX_Size() int {
	return xxx_messageInfo_BgpL2VpnAddrT.Size(m)
}
func (m *BgpL2VpnAddrT) XXX_DiscardUnknown() {
	xxx_messageInfo_BgpL2VpnAddrT.DiscardUnknown(m)
}

var xxx_messageInfo_BgpL2VpnAddrT proto.InternalMessageInfo

func (m *BgpL2VpnAddrT) GetL2VpnAddress() []uint32 {
	if m != nil {
		return m.L2VpnAddress
	}
	return nil
}

type BgpL2VpnMspwAddrT struct {
	L2VpnAddress         []uint32 `protobuf:"varint,1,rep,packed,name=l2vpn_address,json=l2vpnAddress,proto3" json:"l2vpn_address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BgpL2VpnMspwAddrT) Reset()         { *m = BgpL2VpnMspwAddrT{} }
func (m *BgpL2VpnMspwAddrT) String() string { return proto.CompactTextString(m) }
func (*BgpL2VpnMspwAddrT) ProtoMessage()    {}
func (*BgpL2VpnMspwAddrT) Descriptor() ([]byte, []int) {
	return fileDescriptor_7d630cf5ec3d4128, []int{2}
}

func (m *BgpL2VpnMspwAddrT) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BgpL2VpnMspwAddrT.Unmarshal(m, b)
}
func (m *BgpL2VpnMspwAddrT) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BgpL2VpnMspwAddrT.Marshal(b, m, deterministic)
}
func (m *BgpL2VpnMspwAddrT) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BgpL2VpnMspwAddrT.Merge(m, src)
}
func (m *BgpL2VpnMspwAddrT) XXX_Size() int {
	return xxx_messageInfo_BgpL2VpnMspwAddrT.Size(m)
}
func (m *BgpL2VpnMspwAddrT) XXX_DiscardUnknown() {
	xxx_messageInfo_BgpL2VpnMspwAddrT.DiscardUnknown(m)
}

var xxx_messageInfo_BgpL2VpnMspwAddrT proto.InternalMessageInfo

func (m *BgpL2VpnMspwAddrT) GetL2VpnAddress() []uint32 {
	if m != nil {
		return m.L2VpnAddress
	}
	return nil
}

type BgpIpv4SrpolicyAddrT struct {
	Ipv4SrpolicyAddress  []uint32 `protobuf:"varint,1,rep,packed,name=ipv4_srpolicy_address,json=ipv4SrpolicyAddress,proto3" json:"ipv4_srpolicy_address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BgpIpv4SrpolicyAddrT) Reset()         { *m = BgpIpv4SrpolicyAddrT{} }
func (m *BgpIpv4SrpolicyAddrT) String() string { return proto.CompactTextString(m) }
func (*BgpIpv4SrpolicyAddrT) ProtoMessage()    {}
func (*BgpIpv4SrpolicyAddrT) Descriptor() ([]byte, []int) {
	return fileDescriptor_7d630cf5ec3d4128, []int{3}
}

func (m *BgpIpv4SrpolicyAddrT) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BgpIpv4SrpolicyAddrT.Unmarshal(m, b)
}
func (m *BgpIpv4SrpolicyAddrT) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BgpIpv4SrpolicyAddrT.Marshal(b, m, deterministic)
}
func (m *BgpIpv4SrpolicyAddrT) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BgpIpv4SrpolicyAddrT.Merge(m, src)
}
func (m *BgpIpv4SrpolicyAddrT) XXX_Size() int {
	return xxx_messageInfo_BgpIpv4SrpolicyAddrT.Size(m)
}
func (m *BgpIpv4SrpolicyAddrT) XXX_DiscardUnknown() {
	xxx_messageInfo_BgpIpv4SrpolicyAddrT.DiscardUnknown(m)
}

var xxx_messageInfo_BgpIpv4SrpolicyAddrT proto.InternalMessageInfo

func (m *BgpIpv4SrpolicyAddrT) GetIpv4SrpolicyAddress() []uint32 {
	if m != nil {
		return m.Ipv4SrpolicyAddress
	}
	return nil
}

type BgpIpv6SrpolicyAddrT struct {
	Ipv6SrpolicyAddress  []uint32 `protobuf:"varint,1,rep,packed,name=ipv6_srpolicy_address,json=ipv6SrpolicyAddress,proto3" json:"ipv6_srpolicy_address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BgpIpv6SrpolicyAddrT) Reset()         { *m = BgpIpv6SrpolicyAddrT{} }
func (m *BgpIpv6SrpolicyAddrT) String() string { return proto.CompactTextString(m) }
func (*BgpIpv6SrpolicyAddrT) ProtoMessage()    {}
func (*BgpIpv6SrpolicyAddrT) Descriptor() ([]byte, []int) {
	return fileDescriptor_7d630cf5ec3d4128, []int{4}
}

func (m *BgpIpv6SrpolicyAddrT) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BgpIpv6SrpolicyAddrT.Unmarshal(m, b)
}
func (m *BgpIpv6SrpolicyAddrT) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BgpIpv6SrpolicyAddrT.Marshal(b, m, deterministic)
}
func (m *BgpIpv6SrpolicyAddrT) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BgpIpv6SrpolicyAddrT.Merge(m, src)
}
func (m *BgpIpv6SrpolicyAddrT) XXX_Size() int {
	return xxx_messageInfo_BgpIpv6SrpolicyAddrT.Size(m)
}
func (m *BgpIpv6SrpolicyAddrT) XXX_DiscardUnknown() {
	xxx_messageInfo_BgpIpv6SrpolicyAddrT.DiscardUnknown(m)
}

var xxx_messageInfo_BgpIpv6SrpolicyAddrT proto.InternalMessageInfo

func (m *BgpIpv6SrpolicyAddrT) GetIpv6SrpolicyAddress() []uint32 {
	if m != nil {
		return m.Ipv6SrpolicyAddress
	}
	return nil
}

type BgpAddrtype struct {
	Afi                    string                `protobuf:"bytes,1,opt,name=afi,proto3" json:"afi,omitempty"`
	Ipv4Address            string                `protobuf:"bytes,2,opt,name=ipv4_address,json=ipv4Address,proto3" json:"ipv4_address,omitempty"`
	Ipv4McastAddress       string                `protobuf:"bytes,3,opt,name=ipv4_mcast_address,json=ipv4McastAddress,proto3" json:"ipv4_mcast_address,omitempty"`
	Ipv4LabelAddress       string                `protobuf:"bytes,4,opt,name=ipv4_label_address,json=ipv4LabelAddress,proto3" json:"ipv4_label_address,omitempty"`
	Ipv4TunnelAddress      string                `protobuf:"bytes,5,opt,name=ipv4_tunnel_address,json=ipv4TunnelAddress,proto3" json:"ipv4_tunnel_address,omitempty"`
	Ipv4MdtAddress         string                `protobuf:"bytes,6,opt,name=ipv4mdt_address,json=ipv4mdtAddress,proto3" json:"ipv4mdt_address,omitempty"`
	Ipv4VpnAddress         string                `protobuf:"bytes,7,opt,name=ipv4vpn_address,json=ipv4vpnAddress,proto3" json:"ipv4vpn_address,omitempty"`
	Ipv4VpnaMcastddress    string                `protobuf:"bytes,8,opt,name=ipv4vpna_mcastddress,json=ipv4vpnaMcastddress,proto3" json:"ipv4vpna_mcastddress,omitempty"`
	Ipv6Address            string                `protobuf:"bytes,9,opt,name=ipv6_address,json=ipv6Address,proto3" json:"ipv6_address,omitempty"`
	Ipv6McastAddress       string                `protobuf:"bytes,10,opt,name=ipv6_mcast_address,json=ipv6McastAddress,proto3" json:"ipv6_mcast_address,omitempty"`
	Ipv6LabelAddress       string                `protobuf:"bytes,11,opt,name=ipv6_label_address,json=ipv6LabelAddress,proto3" json:"ipv6_label_address,omitempty"`
	Ipv6VpnAddress         string                `protobuf:"bytes,12,opt,name=ipv6vpn_address,json=ipv6vpnAddress,proto3" json:"ipv6vpn_address,omitempty"`
	Ipv6VpnMcastAddress    string                `protobuf:"bytes,13,opt,name=ipv6vpn_mcast_address,json=ipv6vpnMcastAddress,proto3" json:"ipv6vpn_mcast_address,omitempty"`
	L2VpnvplsAddress       *BgpL2VpnAddrT        `protobuf:"bytes,14,opt,name=l2vpnvpls_address,json=l2vpnvplsAddress,proto3" json:"l2vpnvpls_address,omitempty"`
	RtConstraintAddress    string                `protobuf:"bytes,15,opt,name=rt_constraint_address,json=rtConstraintAddress,proto3" json:"rt_constraint_address,omitempty"`
	Ipv6MvpnAddress        string                `protobuf:"bytes,16,opt,name=ipv6mvpn_address,json=ipv6mvpnAddress,proto3" json:"ipv6mvpn_address,omitempty"`
	Ipv4MvpnAddress        string                `protobuf:"bytes,17,opt,name=ipv4mvpn_address,json=ipv4mvpnAddress,proto3" json:"ipv4mvpn_address,omitempty"`
	L2VpnEvpnAddress       string                `protobuf:"bytes,18,opt,name=l2vpn_evpn_address,json=l2vpnEvpnAddress,proto3" json:"l2vpn_evpn_address,omitempty"`
	LsLsAddress            string                `protobuf:"bytes,19,opt,name=ls_ls_address,json=lsLsAddress,proto3" json:"ls_ls_address,omitempty"`
	L2VpnMspwAddress       *BgpL2VpnMspwAddrT    `protobuf:"bytes,20,opt,name=l2vpn_mspw_address,json=l2vpnMspwAddress,proto3" json:"l2vpn_mspw_address,omitempty"`
	Ipv4FlowspecAddress    string                `protobuf:"bytes,21,opt,name=ipv4_flowspec_address,json=ipv4FlowspecAddress,proto3" json:"ipv4_flowspec_address,omitempty"`
	Ipv6FlowspecAddress    string                `protobuf:"bytes,22,opt,name=ipv6_flowspec_address,json=ipv6FlowspecAddress,proto3" json:"ipv6_flowspec_address,omitempty"`
	Ipv4VpnFlowspecAddress string                `protobuf:"bytes,23,opt,name=ipv4vpn_flowspec_address,json=ipv4vpnFlowspecAddress,proto3" json:"ipv4vpn_flowspec_address,omitempty"`
	Ipv6VpnFlowspecAddress string                `protobuf:"bytes,24,opt,name=ipv6vpn_flowspec_address,json=ipv6vpnFlowspecAddress,proto3" json:"ipv6vpn_flowspec_address,omitempty"`
	Ipv4SrPolicyAddress    *BgpIpv4SrpolicyAddrT `protobuf:"bytes,25,opt,name=ipv4sr_policy_address,json=ipv4srPolicyAddress,proto3" json:"ipv4sr_policy_address,omitempty"`
	Ipv6SrPolicyAddress    *BgpIpv6SrpolicyAddrT `protobuf:"bytes,26,opt,name=ipv6sr_policy_address,json=ipv6srPolicyAddress,proto3" json:"ipv6sr_policy_address,omitempty"`
	XXX_NoUnkeyedLiteral   struct{}              `json:"-"`
	XXX_unrecognized       []byte                `json:"-"`
	XXX_sizecache          int32                 `json:"-"`
}

func (m *BgpAddrtype) Reset()         { *m = BgpAddrtype{} }
func (m *BgpAddrtype) String() string { return proto.CompactTextString(m) }
func (*BgpAddrtype) ProtoMessage()    {}
func (*BgpAddrtype) Descriptor() ([]byte, []int) {
	return fileDescriptor_7d630cf5ec3d4128, []int{5}
}

func (m *BgpAddrtype) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BgpAddrtype.Unmarshal(m, b)
}
func (m *BgpAddrtype) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BgpAddrtype.Marshal(b, m, deterministic)
}
func (m *BgpAddrtype) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BgpAddrtype.Merge(m, src)
}
func (m *BgpAddrtype) XXX_Size() int {
	return xxx_messageInfo_BgpAddrtype.Size(m)
}
func (m *BgpAddrtype) XXX_DiscardUnknown() {
	xxx_messageInfo_BgpAddrtype.DiscardUnknown(m)
}

var xxx_messageInfo_BgpAddrtype proto.InternalMessageInfo

func (m *BgpAddrtype) GetAfi() string {
	if m != nil {
		return m.Afi
	}
	return ""
}

func (m *BgpAddrtype) GetIpv4Address() string {
	if m != nil {
		return m.Ipv4Address
	}
	return ""
}

func (m *BgpAddrtype) GetIpv4McastAddress() string {
	if m != nil {
		return m.Ipv4McastAddress
	}
	return ""
}

func (m *BgpAddrtype) GetIpv4LabelAddress() string {
	if m != nil {
		return m.Ipv4LabelAddress
	}
	return ""
}

func (m *BgpAddrtype) GetIpv4TunnelAddress() string {
	if m != nil {
		return m.Ipv4TunnelAddress
	}
	return ""
}

func (m *BgpAddrtype) GetIpv4MdtAddress() string {
	if m != nil {
		return m.Ipv4MdtAddress
	}
	return ""
}

func (m *BgpAddrtype) GetIpv4VpnAddress() string {
	if m != nil {
		return m.Ipv4VpnAddress
	}
	return ""
}

func (m *BgpAddrtype) GetIpv4VpnaMcastddress() string {
	if m != nil {
		return m.Ipv4VpnaMcastddress
	}
	return ""
}

func (m *BgpAddrtype) GetIpv6Address() string {
	if m != nil {
		return m.Ipv6Address
	}
	return ""
}

func (m *BgpAddrtype) GetIpv6McastAddress() string {
	if m != nil {
		return m.Ipv6McastAddress
	}
	return ""
}

func (m *BgpAddrtype) GetIpv6LabelAddress() string {
	if m != nil {
		return m.Ipv6LabelAddress
	}
	return ""
}

func (m *BgpAddrtype) GetIpv6VpnAddress() string {
	if m != nil {
		return m.Ipv6VpnAddress
	}
	return ""
}

func (m *BgpAddrtype) GetIpv6VpnMcastAddress() string {
	if m != nil {
		return m.Ipv6VpnMcastAddress
	}
	return ""
}

func (m *BgpAddrtype) GetL2VpnvplsAddress() *BgpL2VpnAddrT {
	if m != nil {
		return m.L2VpnvplsAddress
	}
	return nil
}

func (m *BgpAddrtype) GetRtConstraintAddress() string {
	if m != nil {
		return m.RtConstraintAddress
	}
	return ""
}

func (m *BgpAddrtype) GetIpv6MvpnAddress() string {
	if m != nil {
		return m.Ipv6MvpnAddress
	}
	return ""
}

func (m *BgpAddrtype) GetIpv4MvpnAddress() string {
	if m != nil {
		return m.Ipv4MvpnAddress
	}
	return ""
}

func (m *BgpAddrtype) GetL2VpnEvpnAddress() string {
	if m != nil {
		return m.L2VpnEvpnAddress
	}
	return ""
}

func (m *BgpAddrtype) GetLsLsAddress() string {
	if m != nil {
		return m.LsLsAddress
	}
	return ""
}

func (m *BgpAddrtype) GetL2VpnMspwAddress() *BgpL2VpnMspwAddrT {
	if m != nil {
		return m.L2VpnMspwAddress
	}
	return nil
}

func (m *BgpAddrtype) GetIpv4FlowspecAddress() string {
	if m != nil {
		return m.Ipv4FlowspecAddress
	}
	return ""
}

func (m *BgpAddrtype) GetIpv6FlowspecAddress() string {
	if m != nil {
		return m.Ipv6FlowspecAddress
	}
	return ""
}

func (m *BgpAddrtype) GetIpv4VpnFlowspecAddress() string {
	if m != nil {
		return m.Ipv4VpnFlowspecAddress
	}
	return ""
}

func (m *BgpAddrtype) GetIpv6VpnFlowspecAddress() string {
	if m != nil {
		return m.Ipv6VpnFlowspecAddress
	}
	return ""
}

func (m *BgpAddrtype) GetIpv4SrPolicyAddress() *BgpIpv4SrpolicyAddrT {
	if m != nil {
		return m.Ipv4SrPolicyAddress
	}
	return nil
}

func (m *BgpAddrtype) GetIpv6SrPolicyAddress() *BgpIpv6SrpolicyAddrT {
	if m != nil {
		return m.Ipv6SrPolicyAddress
	}
	return nil
}

type BgpTimespec struct {
	Seconds              uint32   `protobuf:"varint,1,opt,name=seconds,proto3" json:"seconds,omitempty"`
	Nanoseconds          uint32   `protobuf:"varint,2,opt,name=nanoseconds,proto3" json:"nanoseconds,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BgpTimespec) Reset()         { *m = BgpTimespec{} }
func (m *BgpTimespec) String() string { return proto.CompactTextString(m) }
func (*BgpTimespec) ProtoMessage()    {}
func (*BgpTimespec) Descriptor() ([]byte, []int) {
	return fileDescriptor_7d630cf5ec3d4128, []int{6}
}

func (m *BgpTimespec) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BgpTimespec.Unmarshal(m, b)
}
func (m *BgpTimespec) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BgpTimespec.Marshal(b, m, deterministic)
}
func (m *BgpTimespec) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BgpTimespec.Merge(m, src)
}
func (m *BgpTimespec) XXX_Size() int {
	return xxx_messageInfo_BgpTimespec.Size(m)
}
func (m *BgpTimespec) XXX_DiscardUnknown() {
	xxx_messageInfo_BgpTimespec.DiscardUnknown(m)
}

var xxx_messageInfo_BgpTimespec proto.InternalMessageInfo

func (m *BgpTimespec) GetSeconds() uint32 {
	if m != nil {
		return m.Seconds
	}
	return 0
}

func (m *BgpTimespec) GetNanoseconds() uint32 {
	if m != nil {
		return m.Nanoseconds
	}
	return 0
}

type BgpUpdfilterAttrfAttrBag struct {
	UpdateInternalAttributeCode         uint32       `protobuf:"varint,1,opt,name=update_internal_attribute_code,json=updateInternalAttributeCode,proto3" json:"update_internal_attribute_code,omitempty"`
	UpdateFilterAction                  string       `protobuf:"bytes,2,opt,name=update_filter_action,json=updateFilterAction,proto3" json:"update_filter_action,omitempty"`
	UpdateFilterMatchCount              uint32       `protobuf:"varint,3,opt,name=update_filter_match_count,json=updateFilterMatchCount,proto3" json:"update_filter_match_count,omitempty"`
	EstablishmentUpdateFilterMatchCount uint32       `protobuf:"varint,4,opt,name=establishment_update_filter_match_count,json=establishmentUpdateFilterMatchCount,proto3" json:"establishment_update_filter_match_count,omitempty"`
	LastUpdateFilterMatchTimestamp      *BgpTimespec `protobuf:"bytes,5,opt,name=last_update_filter_match_timestamp,json=lastUpdateFilterMatchTimestamp,proto3" json:"last_update_filter_match_timestamp,omitempty"`
	LastUpdateFilterMatchAge            uint32       `protobuf:"varint,6,opt,name=last_update_filter_match_age,json=lastUpdateFilterMatchAge,proto3" json:"last_update_filter_match_age,omitempty"`
	XXX_NoUnkeyedLiteral                struct{}     `json:"-"`
	XXX_unrecognized                    []byte       `json:"-"`
	XXX_sizecache                       int32        `json:"-"`
}

func (m *BgpUpdfilterAttrfAttrBag) Reset()         { *m = BgpUpdfilterAttrfAttrBag{} }
func (m *BgpUpdfilterAttrfAttrBag) String() string { return proto.CompactTextString(m) }
func (*BgpUpdfilterAttrfAttrBag) ProtoMessage()    {}
func (*BgpUpdfilterAttrfAttrBag) Descriptor() ([]byte, []int) {
	return fileDescriptor_7d630cf5ec3d4128, []int{7}
}

func (m *BgpUpdfilterAttrfAttrBag) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BgpUpdfilterAttrfAttrBag.Unmarshal(m, b)
}
func (m *BgpUpdfilterAttrfAttrBag) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BgpUpdfilterAttrfAttrBag.Marshal(b, m, deterministic)
}
func (m *BgpUpdfilterAttrfAttrBag) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BgpUpdfilterAttrfAttrBag.Merge(m, src)
}
func (m *BgpUpdfilterAttrfAttrBag) XXX_Size() int {
	return xxx_messageInfo_BgpUpdfilterAttrfAttrBag.Size(m)
}
func (m *BgpUpdfilterAttrfAttrBag) XXX_DiscardUnknown() {
	xxx_messageInfo_BgpUpdfilterAttrfAttrBag.DiscardUnknown(m)
}

var xxx_messageInfo_BgpUpdfilterAttrfAttrBag proto.InternalMessageInfo

func (m *BgpUpdfilterAttrfAttrBag) GetUpdateInternalAttributeCode() uint32 {
	if m != nil {
		return m.UpdateInternalAttributeCode
	}
	return 0
}

func (m *BgpUpdfilterAttrfAttrBag) GetUpdateFilterAction() string {
	if m != nil {
		return m.UpdateFilterAction
	}
	return ""
}

func (m *BgpUpdfilterAttrfAttrBag) GetUpdateFilterMatchCount() uint32 {
	if m != nil {
		return m.UpdateFilterMatchCount
	}
	return 0
}

func (m *BgpUpdfilterAttrfAttrBag) GetEstablishmentUpdateFilterMatchCount() uint32 {
	if m != nil {
		return m.EstablishmentUpdateFilterMatchCount
	}
	return 0
}

func (m *BgpUpdfilterAttrfAttrBag) GetLastUpdateFilterMatchTimestamp() *BgpTimespec {
	if m != nil {
		return m.LastUpdateFilterMatchTimestamp
	}
	return nil
}

func (m *BgpUpdfilterAttrfAttrBag) GetLastUpdateFilterMatchAge() uint32 {
	if m != nil {
		return m.LastUpdateFilterMatchAge
	}
	return 0
}

type BgpUpdfilterElemBag struct {
	UpdateAttributeFlags uint32   `protobuf:"varint,1,opt,name=update_attribute_flags,json=updateAttributeFlags,proto3" json:"update_attribute_flags,omitempty"`
	UpdateAttributeCode  uint32   `protobuf:"varint,2,opt,name=update_attribute_code,json=updateAttributeCode,proto3" json:"update_attribute_code,omitempty"`
	UpdateFilterAction   string   `protobuf:"bytes,3,opt,name=update_filter_action,json=updateFilterAction,proto3" json:"update_filter_action,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BgpUpdfilterElemBag) Reset()         { *m = BgpUpdfilterElemBag{} }
func (m *BgpUpdfilterElemBag) String() string { return proto.CompactTextString(m) }
func (*BgpUpdfilterElemBag) ProtoMessage()    {}
func (*BgpUpdfilterElemBag) Descriptor() ([]byte, []int) {
	return fileDescriptor_7d630cf5ec3d4128, []int{8}
}

func (m *BgpUpdfilterElemBag) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BgpUpdfilterElemBag.Unmarshal(m, b)
}
func (m *BgpUpdfilterElemBag) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BgpUpdfilterElemBag.Marshal(b, m, deterministic)
}
func (m *BgpUpdfilterElemBag) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BgpUpdfilterElemBag.Merge(m, src)
}
func (m *BgpUpdfilterElemBag) XXX_Size() int {
	return xxx_messageInfo_BgpUpdfilterElemBag.Size(m)
}
func (m *BgpUpdfilterElemBag) XXX_DiscardUnknown() {
	xxx_messageInfo_BgpUpdfilterElemBag.DiscardUnknown(m)
}

var xxx_messageInfo_BgpUpdfilterElemBag proto.InternalMessageInfo

func (m *BgpUpdfilterElemBag) GetUpdateAttributeFlags() uint32 {
	if m != nil {
		return m.UpdateAttributeFlags
	}
	return 0
}

func (m *BgpUpdfilterElemBag) GetUpdateAttributeCode() uint32 {
	if m != nil {
		return m.UpdateAttributeCode
	}
	return 0
}

func (m *BgpUpdfilterElemBag) GetUpdateFilterAction() string {
	if m != nil {
		return m.UpdateFilterAction
	}
	return ""
}

type BgpUpdfilterMsgBag struct {
	UpdateFilteredAttributeCount    uint32                 `protobuf:"varint,1,opt,name=update_filtered_attribute_count,json=updateFilteredAttributeCount,proto3" json:"update_filtered_attribute_count,omitempty"`
	UpdateFilterFinalAction         string                 `protobuf:"bytes,2,opt,name=update_filter_final_action,json=updateFilterFinalAction,proto3" json:"update_filter_final_action,omitempty"`
	UpdateFilterMessageTimestamp    *BgpTimespec           `protobuf:"bytes,3,opt,name=update_filter_message_timestamp,json=updateFilterMessageTimestamp,proto3" json:"update_filter_message_timestamp,omitempty"`
	UpdateFilterElement             []*BgpUpdfilterElemBag `protobuf:"bytes,4,rep,name=update_filter_element,json=updateFilterElement,proto3" json:"update_filter_element,omitempty"`
	UpdateFilterNlriAddressFamily   string                 `protobuf:"bytes,5,opt,name=update_filter_nlri_address_family,json=updateFilterNlriAddressFamily,proto3" json:"update_filter_nlri_address_family,omitempty"`
	UpdateFilterNlriString          string                 `protobuf:"bytes,6,opt,name=update_filter_nlri_string,json=updateFilterNlriString,proto3" json:"update_filter_nlri_string,omitempty"`
	UpdateFilterNlriStringTruncated bool                   `protobuf:"varint,7,opt,name=update_filter_nlri_string_truncated,json=updateFilterNlriStringTruncated,proto3" json:"update_filter_nlri_string_truncated,omitempty"`
	UpdateFilterMessageData         []uint32               `protobuf:"varint,8,rep,packed,name=update_filter_message_data,json=updateFilterMessageData,proto3" json:"update_filter_message_data,omitempty"`
	XXX_NoUnkeyedLiteral            struct{}               `json:"-"`
	XXX_unrecognized                []byte                 `json:"-"`
	XXX_sizecache                   int32                  `json:"-"`
}

func (m *BgpUpdfilterMsgBag) Reset()         { *m = BgpUpdfilterMsgBag{} }
func (m *BgpUpdfilterMsgBag) String() string { return proto.CompactTextString(m) }
func (*BgpUpdfilterMsgBag) ProtoMessage()    {}
func (*BgpUpdfilterMsgBag) Descriptor() ([]byte, []int) {
	return fileDescriptor_7d630cf5ec3d4128, []int{9}
}

func (m *BgpUpdfilterMsgBag) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BgpUpdfilterMsgBag.Unmarshal(m, b)
}
func (m *BgpUpdfilterMsgBag) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BgpUpdfilterMsgBag.Marshal(b, m, deterministic)
}
func (m *BgpUpdfilterMsgBag) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BgpUpdfilterMsgBag.Merge(m, src)
}
func (m *BgpUpdfilterMsgBag) XXX_Size() int {
	return xxx_messageInfo_BgpUpdfilterMsgBag.Size(m)
}
func (m *BgpUpdfilterMsgBag) XXX_DiscardUnknown() {
	xxx_messageInfo_BgpUpdfilterMsgBag.DiscardUnknown(m)
}

var xxx_messageInfo_BgpUpdfilterMsgBag proto.InternalMessageInfo

func (m *BgpUpdfilterMsgBag) GetUpdateFilteredAttributeCount() uint32 {
	if m != nil {
		return m.UpdateFilteredAttributeCount
	}
	return 0
}

func (m *BgpUpdfilterMsgBag) GetUpdateFilterFinalAction() string {
	if m != nil {
		return m.UpdateFilterFinalAction
	}
	return ""
}

func (m *BgpUpdfilterMsgBag) GetUpdateFilterMessageTimestamp() *BgpTimespec {
	if m != nil {
		return m.UpdateFilterMessageTimestamp
	}
	return nil
}

func (m *BgpUpdfilterMsgBag) GetUpdateFilterElement() []*BgpUpdfilterElemBag {
	if m != nil {
		return m.UpdateFilterElement
	}
	return nil
}

func (m *BgpUpdfilterMsgBag) GetUpdateFilterNlriAddressFamily() string {
	if m != nil {
		return m.UpdateFilterNlriAddressFamily
	}
	return ""
}

func (m *BgpUpdfilterMsgBag) GetUpdateFilterNlriString() string {
	if m != nil {
		return m.UpdateFilterNlriString
	}
	return ""
}

func (m *BgpUpdfilterMsgBag) GetUpdateFilterNlriStringTruncated() bool {
	if m != nil {
		return m.UpdateFilterNlriStringTruncated
	}
	return false
}

func (m *BgpUpdfilterMsgBag) GetUpdateFilterMessageData() []uint32 {
	if m != nil {
		return m.UpdateFilterMessageData
	}
	return nil
}

type BgpUpdfilterNbrBag struct {
	UpdateVrfName                              string                      `protobuf:"bytes,50,opt,name=update_vrf_name,json=updateVrfName,proto3" json:"update_vrf_name,omitempty"`
	UpdateNeighborAddress                      *BgpAddrtype                `protobuf:"bytes,51,opt,name=update_neighbor_address,json=updateNeighborAddress,proto3" json:"update_neighbor_address,omitempty"`
	UpdateFilterLoggingEnabled                 bool                        `protobuf:"varint,52,opt,name=update_filter_logging_enabled,json=updateFilterLoggingEnabled,proto3" json:"update_filter_logging_enabled,omitempty"`
	ConfiguredUpdateFilterMessageBufferCount   uint32                      `protobuf:"varint,53,opt,name=configured_update_filter_message_buffer_count,json=configuredUpdateFilterMessageBufferCount,proto3" json:"configured_update_filter_message_buffer_count,omitempty"`
	OperationalUpdateFilterMessageBufferCount  uint32                      `protobuf:"varint,54,opt,name=operational_update_filter_message_buffer_count,json=operationalUpdateFilterMessageBufferCount,proto3" json:"operational_update_filter_message_buffer_count,omitempty"`
	UpdateFilterMessageBufferCircular          bool                        `protobuf:"varint,55,opt,name=update_filter_message_buffer_circular,json=updateFilterMessageBufferCircular,proto3" json:"update_filter_message_buffer_circular,omitempty"`
	UpdateAttributeFilterGroupName             string                      `protobuf:"bytes,56,opt,name=update_attribute_filter_group_name,json=updateAttributeFilterGroupName,proto3" json:"update_attribute_filter_group_name,omitempty"`
	OperationalUpdateAttributeFilteringEnabled bool                        `protobuf:"varint,57,opt,name=operational_update_attribute_filtering_enabled,json=operationalUpdateAttributeFilteringEnabled,proto3" json:"operational_update_attribute_filtering_enabled,omitempty"`
	MessageUpdateAttributeFilteringEnabled     bool                        `protobuf:"varint,58,opt,name=message_update_attribute_filtering_enabled,json=messageUpdateAttributeFilteringEnabled,proto3" json:"message_update_attribute_filtering_enabled,omitempty"`
	TotalFilterUpdateMessageCount              uint32                      `protobuf:"varint,59,opt,name=total_filter_update_message_count,json=totalFilterUpdateMessageCount,proto3" json:"total_filter_update_message_count,omitempty"`
	EstablishmentTotalFilterUpdateMessageCount uint32                      `protobuf:"varint,60,opt,name=establishment_total_filter_update_message_count,json=establishmentTotalFilterUpdateMessageCount,proto3" json:"establishment_total_filter_update_message_count,omitempty"`
	UpdateFilteredMessageCount                 uint32                      `protobuf:"varint,61,opt,name=update_filtered_message_count,json=updateFilteredMessageCount,proto3" json:"update_filtered_message_count,omitempty"`
	EstablishmentUpdateFilteredMessageCount    uint32                      `protobuf:"varint,62,opt,name=establishment_update_filtered_message_count,json=establishmentUpdateFilteredMessageCount,proto3" json:"establishment_update_filtered_message_count,omitempty"`
	FirstUpdateFilteredTimestamp               *BgpTimespec                `protobuf:"bytes,63,opt,name=first_update_filtered_timestamp,json=firstUpdateFilteredTimestamp,proto3" json:"first_update_filtered_timestamp,omitempty"`
	LastUpdateFilteredTimestamp                *BgpTimespec                `protobuf:"bytes,64,opt,name=last_update_filtered_timestamp,json=lastUpdateFilteredTimestamp,proto3" json:"last_update_filtered_timestamp,omitempty"`
	LastUpdateFilteredAge                      uint32                      `protobuf:"varint,65,opt,name=last_update_filtered_age,json=lastUpdateFilteredAge,proto3" json:"last_update_filtered_age,omitempty"`
	UpdateAttributeFilterAttributes            []*BgpUpdfilterAttrfAttrBag `protobuf:"bytes,66,rep,name=update_attribute_filter_attributes,json=updateAttributeFilterAttributes,proto3" json:"update_attribute_filter_attributes,omitempty"`
	UpdateFilterMessage                        []*BgpUpdfilterMsgBag       `protobuf:"bytes,67,rep,name=update_filter_message,json=updateFilterMessage,proto3" json:"update_filter_message,omitempty"`
	UpdateFilterMessageListCount               uint32                      `protobuf:"varint,68,opt,name=update_filter_message_list_count,json=updateFilterMessageListCount,proto3" json:"update_filter_message_list_count,omitempty"`
	XXX_NoUnkeyedLiteral                       struct{}                    `json:"-"`
	XXX_unrecognized                           []byte                      `json:"-"`
	XXX_sizecache                              int32                       `json:"-"`
}

func (m *BgpUpdfilterNbrBag) Reset()         { *m = BgpUpdfilterNbrBag{} }
func (m *BgpUpdfilterNbrBag) String() string { return proto.CompactTextString(m) }
func (*BgpUpdfilterNbrBag) ProtoMessage()    {}
func (*BgpUpdfilterNbrBag) Descriptor() ([]byte, []int) {
	return fileDescriptor_7d630cf5ec3d4128, []int{10}
}

func (m *BgpUpdfilterNbrBag) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BgpUpdfilterNbrBag.Unmarshal(m, b)
}
func (m *BgpUpdfilterNbrBag) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BgpUpdfilterNbrBag.Marshal(b, m, deterministic)
}
func (m *BgpUpdfilterNbrBag) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BgpUpdfilterNbrBag.Merge(m, src)
}
func (m *BgpUpdfilterNbrBag) XXX_Size() int {
	return xxx_messageInfo_BgpUpdfilterNbrBag.Size(m)
}
func (m *BgpUpdfilterNbrBag) XXX_DiscardUnknown() {
	xxx_messageInfo_BgpUpdfilterNbrBag.DiscardUnknown(m)
}

var xxx_messageInfo_BgpUpdfilterNbrBag proto.InternalMessageInfo

func (m *BgpUpdfilterNbrBag) GetUpdateVrfName() string {
	if m != nil {
		return m.UpdateVrfName
	}
	return ""
}

func (m *BgpUpdfilterNbrBag) GetUpdateNeighborAddress() *BgpAddrtype {
	if m != nil {
		return m.UpdateNeighborAddress
	}
	return nil
}

func (m *BgpUpdfilterNbrBag) GetUpdateFilterLoggingEnabled() bool {
	if m != nil {
		return m.UpdateFilterLoggingEnabled
	}
	return false
}

func (m *BgpUpdfilterNbrBag) GetConfiguredUpdateFilterMessageBufferCount() uint32 {
	if m != nil {
		return m.ConfiguredUpdateFilterMessageBufferCount
	}
	return 0
}

func (m *BgpUpdfilterNbrBag) GetOperationalUpdateFilterMessageBufferCount() uint32 {
	if m != nil {
		return m.OperationalUpdateFilterMessageBufferCount
	}
	return 0
}

func (m *BgpUpdfilterNbrBag) GetUpdateFilterMessageBufferCircular() bool {
	if m != nil {
		return m.UpdateFilterMessageBufferCircular
	}
	return false
}

func (m *BgpUpdfilterNbrBag) GetUpdateAttributeFilterGroupName() string {
	if m != nil {
		return m.UpdateAttributeFilterGroupName
	}
	return ""
}

func (m *BgpUpdfilterNbrBag) GetOperationalUpdateAttributeFilteringEnabled() bool {
	if m != nil {
		return m.OperationalUpdateAttributeFilteringEnabled
	}
	return false
}

func (m *BgpUpdfilterNbrBag) GetMessageUpdateAttributeFilteringEnabled() bool {
	if m != nil {
		return m.MessageUpdateAttributeFilteringEnabled
	}
	return false
}

func (m *BgpUpdfilterNbrBag) GetTotalFilterUpdateMessageCount() uint32 {
	if m != nil {
		return m.TotalFilterUpdateMessageCount
	}
	return 0
}

func (m *BgpUpdfilterNbrBag) GetEstablishmentTotalFilterUpdateMessageCount() uint32 {
	if m != nil {
		return m.EstablishmentTotalFilterUpdateMessageCount
	}
	return 0
}

func (m *BgpUpdfilterNbrBag) GetUpdateFilteredMessageCount() uint32 {
	if m != nil {
		return m.UpdateFilteredMessageCount
	}
	return 0
}

func (m *BgpUpdfilterNbrBag) GetEstablishmentUpdateFilteredMessageCount() uint32 {
	if m != nil {
		return m.EstablishmentUpdateFilteredMessageCount
	}
	return 0
}

func (m *BgpUpdfilterNbrBag) GetFirstUpdateFilteredTimestamp() *BgpTimespec {
	if m != nil {
		return m.FirstUpdateFilteredTimestamp
	}
	return nil
}

func (m *BgpUpdfilterNbrBag) GetLastUpdateFilteredTimestamp() *BgpTimespec {
	if m != nil {
		return m.LastUpdateFilteredTimestamp
	}
	return nil
}

func (m *BgpUpdfilterNbrBag) GetLastUpdateFilteredAge() uint32 {
	if m != nil {
		return m.LastUpdateFilteredAge
	}
	return 0
}

func (m *BgpUpdfilterNbrBag) GetUpdateAttributeFilterAttributes() []*BgpUpdfilterAttrfAttrBag {
	if m != nil {
		return m.UpdateAttributeFilterAttributes
	}
	return nil
}

func (m *BgpUpdfilterNbrBag) GetUpdateFilterMessage() []*BgpUpdfilterMsgBag {
	if m != nil {
		return m.UpdateFilterMessage
	}
	return nil
}

func (m *BgpUpdfilterNbrBag) GetUpdateFilterMessageListCount() uint32 {
	if m != nil {
		return m.UpdateFilterMessageListCount
	}
	return 0
}

func init() {
	proto.RegisterType((*BgpUpdfilterNbrBag_KEYS)(nil), "cisco_ios_xr_ipv4_bgp_oper.bgp.instances.instance.instance_standby.default_vrf.update_inbound_filter_neighbors.update_inbound_filter_neighbor.bgp_updfilter_nbr_bag_KEYS")
	proto.RegisterType((*BgpL2VpnAddrT)(nil), "cisco_ios_xr_ipv4_bgp_oper.bgp.instances.instance.instance_standby.default_vrf.update_inbound_filter_neighbors.update_inbound_filter_neighbor.bgp_l2vpn_addr_t")
	proto.RegisterType((*BgpL2VpnMspwAddrT)(nil), "cisco_ios_xr_ipv4_bgp_oper.bgp.instances.instance.instance_standby.default_vrf.update_inbound_filter_neighbors.update_inbound_filter_neighbor.bgp_l2vpn_mspw_addr_t")
	proto.RegisterType((*BgpIpv4SrpolicyAddrT)(nil), "cisco_ios_xr_ipv4_bgp_oper.bgp.instances.instance.instance_standby.default_vrf.update_inbound_filter_neighbors.update_inbound_filter_neighbor.bgp_ipv4_srpolicy_addr_t")
	proto.RegisterType((*BgpIpv6SrpolicyAddrT)(nil), "cisco_ios_xr_ipv4_bgp_oper.bgp.instances.instance.instance_standby.default_vrf.update_inbound_filter_neighbors.update_inbound_filter_neighbor.bgp_ipv6_srpolicy_addr_t")
	proto.RegisterType((*BgpAddrtype)(nil), "cisco_ios_xr_ipv4_bgp_oper.bgp.instances.instance.instance_standby.default_vrf.update_inbound_filter_neighbors.update_inbound_filter_neighbor.bgp_addrtype")
	proto.RegisterType((*BgpTimespec)(nil), "cisco_ios_xr_ipv4_bgp_oper.bgp.instances.instance.instance_standby.default_vrf.update_inbound_filter_neighbors.update_inbound_filter_neighbor.bgp_timespec")
	proto.RegisterType((*BgpUpdfilterAttrfAttrBag)(nil), "cisco_ios_xr_ipv4_bgp_oper.bgp.instances.instance.instance_standby.default_vrf.update_inbound_filter_neighbors.update_inbound_filter_neighbor.bgp_updfilter_attrf_attr_bag")
	proto.RegisterType((*BgpUpdfilterElemBag)(nil), "cisco_ios_xr_ipv4_bgp_oper.bgp.instances.instance.instance_standby.default_vrf.update_inbound_filter_neighbors.update_inbound_filter_neighbor.bgp_updfilter_elem_bag")
	proto.RegisterType((*BgpUpdfilterMsgBag)(nil), "cisco_ios_xr_ipv4_bgp_oper.bgp.instances.instance.instance_standby.default_vrf.update_inbound_filter_neighbors.update_inbound_filter_neighbor.bgp_updfilter_msg_bag")
	proto.RegisterType((*BgpUpdfilterNbrBag)(nil), "cisco_ios_xr_ipv4_bgp_oper.bgp.instances.instance.instance_standby.default_vrf.update_inbound_filter_neighbors.update_inbound_filter_neighbor.bgp_updfilter_nbr_bag")
}

func init() { proto.RegisterFile("bgp_updfilter_nbr_bag.proto", fileDescriptor_7d630cf5ec3d4128) }

var fileDescriptor_7d630cf5ec3d4128 = []byte{
	// 1570 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xd4, 0x59, 0xcf, 0x73, 0x14, 0xc5,
	0x17, 0xaf, 0x21, 0x7c, 0xf9, 0xd1, 0xc9, 0x92, 0x64, 0x42, 0xc2, 0x12, 0x20, 0x24, 0x4b, 0x7d,
	0x21, 0x20, 0xae, 0x1a, 0xe2, 0x00, 0x82, 0x68, 0x08, 0x89, 0x88, 0x49, 0x8a, 0x5a, 0x82, 0x55,
	0x5a, 0x56, 0x4d, 0xf5, 0xce, 0xf4, 0x0c, 0x53, 0x35, 0xbf, 0x6a, 0xba, 0x37, 0x98, 0x3f, 0xc2,
	0xbf, 0xc0, 0x83, 0x17, 0x2c, 0x0f, 0x5e, 0xfd, 0x33, 0xf4, 0x60, 0xe9, 0x45, 0xcb, 0x8b, 0xe5,
	0xc5, 0x13, 0x77, 0x6f, 0x56, 0xbf, 0xee, 0x9e, 0x99, 0x9e, 0x99, 0x4d, 0xf0, 0xb6, 0x5c, 0x92,
	0xdd, 0x7e, 0x9f, 0xf7, 0xe9, 0x7e, 0xef, 0x7d, 0xfa, 0x75, 0x77, 0x82, 0xce, 0xf5, 0xfd, 0xd4,
	0x1e, 0xa4, 0xae, 0x17, 0x84, 0x8c, 0x64, 0x76, 0xdc, 0xcf, 0xec, 0x3e, 0xf6, 0xbb, 0x69, 0x96,
	0xb0, 0xc4, 0xfc, 0xca, 0x70, 0x02, 0xea, 0x24, 0x76, 0x90, 0x50, 0xfb, 0xcb, 0xcc, 0x0e, 0xd2,
	0xbd, 0x55, 0x9b, 0xe3, 0x93, 0x94, 0x64, 0xdd, 0xbe, 0x9f, 0x76, 0x83, 0x98, 0x32, 0x1c, 0x3b,
	0x84, 0xe6, 0x9f, 0xf2, 0x0f, 0x36, 0xff, 0xe5, 0xf6, 0xf7, 0xbb, 0x2e, 0xf1, 0xf0, 0x20, 0x64,
	0xf6, 0x5e, 0xe6, 0x75, 0x07, 0xa9, 0x8b, 0x19, 0xb1, 0x83, 0xb8, 0x9f, 0x0c, 0x62, 0xd7, 0x56,
	0x93, 0x92, 0xc0, 0x7f, 0xd6, 0x4f, 0x32, 0x7a, 0x88, 0xbd, 0x13, 0xa2, 0xf9, 0xc6, 0xe5, 0xda,
	0x9f, 0x6c, 0x7c, 0xf6, 0xc4, 0xbc, 0x84, 0x5a, 0xf9, 0xe4, 0x31, 0x8e, 0x48, 0xdb, 0x58, 0x34,
	0x96, 0x4f, 0xf6, 0x26, 0xd4, 0xe0, 0x0e, 0x8e, 0x88, 0x79, 0x15, 0x4d, 0x29, 0x3a, 0x1b, 0xbb,
	0x6e, 0x46, 0x28, 0x6d, 0x1f, 0x01, 0xdc, 0xa4, 0x1a, 0x5f, 0x13, 0xc3, 0x9d, 0x9b, 0x68, 0x8a,
	0xcf, 0x16, 0xae, 0xec, 0xa5, 0x31, 0x60, 0x6d, 0xc6, 0xe7, 0x28, 0xbe, 0x73, 0x5f, 0x63, 0x71,
	0x6c, 0xb9, 0xd5, 0x9b, 0x80, 0x41, 0xe5, 0x78, 0x17, 0xcd, 0x16, 0x8e, 0x11, 0x4d, 0x9f, 0xff,
	0x27, 0xef, 0x1d, 0xd4, 0xe6, 0xde, 0x90, 0x6c, 0x9a, 0xa5, 0x49, 0x18, 0x38, 0xfb, 0x8a, 0x60,
	0x05, 0xcd, 0xd6, 0xc7, 0x0b, 0xa2, 0x19, 0x6e, 0x7c, 0x22, 0x6d, 0x75, 0x3e, 0x6b, 0x08, 0x9f,
	0x75, 0x10, 0x9f, 0x55, 0xe5, 0xfb, 0xf1, 0x14, 0x9a, 0xe0, 0x84, 0x1c, 0xca, 0xf6, 0x53, 0x62,
	0x4e, 0xa1, 0x31, 0xec, 0x05, 0x32, 0xdb, 0xfc, 0xa3, 0xb9, 0x84, 0x26, 0x60, 0x99, 0x7a, 0x82,
	0xc7, 0xf9, 0x98, 0x64, 0x31, 0xaf, 0x23, 0x13, 0x20, 0x91, 0x83, 0x29, 0xcb, 0x81, 0x63, 0x00,
	0x9c, 0xe2, 0x96, 0x6d, 0x6e, 0xa8, 0xa2, 0x43, 0xdc, 0x27, 0x61, 0x8e, 0x3e, 0x5a, 0xa0, 0xb7,
	0xb8, 0x41, 0xa1, 0xbb, 0x08, 0x12, 0x61, 0xb3, 0x41, 0x1c, 0x97, 0xe0, 0xff, 0x03, 0xf8, 0x34,
	0x37, 0xed, 0x82, 0x45, 0xe1, 0xaf, 0xa0, 0x49, 0x3e, 0x18, 0xb9, 0xc5, 0x42, 0x8e, 0x01, 0xf6,
	0x94, 0x1c, 0xae, 0x00, 0xcb, 0x15, 0x3c, 0x5e, 0x00, 0x8b, 0x1a, 0x9a, 0xef, 0xa0, 0xd3, 0x72,
	0x04, 0x8b, 0x08, 0x25, 0xfa, 0x04, 0xa0, 0x67, 0x94, 0x6d, 0xbb, 0x30, 0xc9, 0x9c, 0x59, 0x39,
	0xf1, 0xc9, 0x3c, 0x67, 0x96, 0x9e, 0x05, 0xab, 0x92, 0x33, 0x94, 0x67, 0xc1, 0x6a, 0xc8, 0x99,
	0x55, 0xc9, 0xd9, 0x78, 0x81, 0xd6, 0x72, 0x26, 0x42, 0xb3, 0xca, 0xa1, 0x4d, 0xe4, 0xa1, 0x59,
	0xa5, 0xd0, 0xa4, 0x64, 0x40, 0xda, 0xda, 0x3a, 0x5a, 0x79, 0x6c, 0xdc, 0xa8, 0x2d, 0xe5, 0x27,
	0x03, 0x4d, 0x83, 0xc6, 0xf7, 0xd2, 0x90, 0xe6, 0x0e, 0xa7, 0x16, 0x8d, 0xe5, 0xf1, 0x95, 0x6f,
	0x8c, 0xee, 0x48, 0x35, 0x99, 0x6e, 0x75, 0xcf, 0xf7, 0xa6, 0xf2, 0xa5, 0x97, 0x72, 0x90, 0x31,
	0xdb, 0x49, 0x62, 0xca, 0x32, 0x1c, 0xc4, 0x45, 0x0e, 0x26, 0x45, 0x0e, 0x32, 0xb6, 0x9e, 0xdb,
	0x94, 0xcf, 0x55, 0x04, 0x49, 0x8f, 0xca, 0x19, 0x9e, 0x12, 0x8d, 0x47, 0x8d, 0xeb, 0xd0, 0x55,
	0x0d, 0x3a, 0x9d, 0x43, 0x57, 0xcb, 0xd0, 0xeb, 0xc8, 0x14, 0x6b, 0x25, 0x65, 0xb0, 0x29, 0x8a,
	0x0c, 0x96, 0x8d, 0x12, 0xba, 0x83, 0x5a, 0x21, 0xb5, 0x4b, 0x25, 0x98, 0x11, 0x22, 0x0b, 0xe9,
	0x56, 0x1e, 0xdb, 0x2f, 0x86, 0xa2, 0xcc, 0x3b, 0x17, 0x47, 0x9e, 0x86, 0x62, 0xbd, 0x18, 0xdd,
	0x62, 0x95, 0xfa, 0xac, 0x8c, 0x7c, 0x9b, 0xa6, 0xcf, 0x75, 0xd5, 0xae, 0xda, 0x5e, 0x98, 0x3c,
	0xa7, 0x29, 0x71, 0xf2, 0xb8, 0x66, 0x8b, 0x1d, 0xb9, 0x29, 0x6d, 0x15, 0xa5, 0xd7, 0x7d, 0xe6,
	0x0a, 0xa5, 0x57, 0x7d, 0x6e, 0xa1, 0xb6, 0xea, 0x10, 0x35, 0xb7, 0x33, 0xe0, 0x36, 0x27, 0xed,
	0xcd, 0x9e, 0x56, 0xa3, 0x67, 0x3b, 0xf7, 0xb4, 0x1a, 0x3c, 0xff, 0x30, 0x44, 0x70, 0x34, 0xb3,
	0x2b, 0x5d, 0xfc, 0x2c, 0x14, 0xed, 0xbb, 0x51, 0x2c, 0x5a, 0xd3, 0xf1, 0x26, 0xca, 0x40, 0xb3,
	0xc7, 0xe5, 0xf3, 0x46, 0x85, 0x67, 0xd5, 0xc3, 0x9b, 0x1f, 0xe9, 0xf0, 0xac, 0xc6, 0xf0, 0xac,
	0x4a, 0x78, 0x9d, 0x47, 0xe2, 0x34, 0x65, 0x41, 0x44, 0x78, 0x51, 0xcd, 0x36, 0x3a, 0x4e, 0x89,
	0x93, 0xc4, 0x2e, 0x85, 0x13, 0xb5, 0xd5, 0x53, 0x5f, 0xcd, 0x45, 0x34, 0x1e, 0xe3, 0x38, 0x51,
	0xd6, 0x23, 0x60, 0x2d, 0x0f, 0x75, 0x7e, 0x3e, 0x8a, 0xce, 0xeb, 0x17, 0x24, 0xcc, 0x58, 0xe6,
	0xc1, 0x4f, 0x7e, 0x4f, 0x32, 0xd7, 0xd1, 0x42, 0xbe, 0x78, 0x46, 0xb2, 0x18, 0x87, 0x60, 0x0b,
	0xfa, 0x03, 0x46, 0x6c, 0x27, 0x71, 0x89, 0x9c, 0xf3, 0x9c, 0x40, 0x7d, 0x2c, 0x41, 0x6b, 0x0a,
	0xb3, 0x9e, 0xb8, 0xc4, 0x7c, 0x1b, 0x9d, 0x96, 0x24, 0x6a, 0x12, 0x87, 0x05, 0x49, 0x2c, 0x4f,
	0x79, 0x53, 0xd8, 0x36, 0xc1, 0xb4, 0x06, 0x16, 0xf3, 0x36, 0x3a, 0xab, 0x7b, 0x44, 0x98, 0x39,
	0xcf, 0x6c, 0x27, 0x19, 0xc4, 0x0c, 0xce, 0xfc, 0x56, 0x6f, 0xae, 0xec, 0xb6, 0xcd, 0xcd, 0xeb,
	0xdc, 0x6a, 0xee, 0xa2, 0x2b, 0x84, 0x32, 0xdc, 0x0f, 0x03, 0xfa, 0x2c, 0x22, 0x31, 0xb3, 0x87,
	0x13, 0x1d, 0x05, 0xa2, 0x4b, 0x1a, 0xfc, 0x69, 0x33, 0xeb, 0xdf, 0x06, 0xea, 0x84, 0xfc, 0xf0,
	0x6a, 0x62, 0x83, 0x52, 0x30, 0x1c, 0xa5, 0x70, 0x63, 0x18, 0x5f, 0xf9, 0x7a, 0x14, 0x05, 0xa6,
	0xf4, 0xd2, 0x5b, 0xe0, 0x71, 0xd4, 0xc2, 0xdc, 0x55, 0x31, 0x98, 0xf7, 0xd0, 0xf9, 0xa1, 0x91,
	0x62, 0x9f, 0xc0, 0x4d, 0xa7, 0xd5, 0x6b, 0x37, 0xb2, 0xac, 0xf9, 0xa4, 0xf3, 0x83, 0x81, 0xe6,
	0x74, 0x4d, 0x91, 0x90, 0x44, 0xa0, 0xa6, 0x55, 0x24, 0xab, 0x56, 0x12, 0x91, 0x17, 0x62, 0x5f,
	0x29, 0x57, 0xca, 0x24, 0x57, 0xcf, 0x26, 0xb7, 0xf1, 0xb6, 0x5a, 0xf3, 0x02, 0xe9, 0x09, 0x41,
	0xcf, 0x54, 0x9c, 0x0e, 0x94, 0xdc, 0xd8, 0x30, 0xc9, 0x75, 0x5e, 0x1e, 0x13, 0x97, 0xf0, 0x62,
	0xd9, 0x11, 0xf5, 0x61, 0xd5, 0x1b, 0xe8, 0xa2, 0xc6, 0x45, 0x5c, 0x6d, 0x21, 0x5c, 0x49, 0x62,
	0xf9, 0xe7, 0xcb, 0xb4, 0xc4, 0x2d, 0xad, 0x88, 0x4b, 0xe8, 0x0e, 0x9a, 0xd7, 0x97, 0xe4, 0x05,
	0xb0, 0x9d, 0xca, 0x7b, 0xe1, 0x4c, 0x99, 0x61, 0x93, 0xdb, 0xe5, 0x86, 0xf8, 0xcb, 0xa8, 0x2c,
	0xc2, 0x8e, 0x08, 0xa5, 0xd8, 0x27, 0x25, 0xf1, 0x8d, 0xbd, 0x06, 0xe2, 0xd3, 0x52, 0xb4, 0x2d,
	0x42, 0x28, 0xa4, 0xf7, 0xbb, 0x91, 0x97, 0xba, 0x24, 0x1d, 0x02, 0x5b, 0x75, 0x6c, 0x79, 0x7c,
	0xe5, 0xdb, 0x51, 0x8c, 0xad, 0xae, 0x73, 0x25, 0x49, 0x11, 0xe5, 0x86, 0x08, 0xc1, 0x7c, 0x88,
	0x96, 0xf4, 0xd8, 0xe2, 0x30, 0x0b, 0xd4, 0xd1, 0x64, 0x7b, 0x38, 0x0a, 0xc2, 0x7d, 0xf9, 0xe4,
	0xb8, 0x50, 0xf6, 0xdf, 0x09, 0xb3, 0x40, 0xf6, 0xfe, 0x4d, 0x00, 0xd5, 0xbb, 0x23, 0x30, 0x51,
	0x96, 0x05, 0xb1, 0x2f, 0x1f, 0x22, 0x73, 0x55, 0x86, 0x27, 0x60, 0x35, 0xb7, 0xd0, 0xa5, 0xa1,
	0xae, 0x36, 0xcb, 0x06, 0xb1, 0x83, 0x19, 0x71, 0xe1, 0x91, 0x72, 0xa2, 0x77, 0xb1, 0x99, 0x64,
	0x57, 0xc1, 0xea, 0x92, 0x56, 0xa2, 0x74, 0x31, 0xc3, 0xed, 0x13, 0xf0, 0x24, 0x3c, 0xd3, 0x50,
	0xf1, 0x07, 0x98, 0xe1, 0xce, 0xcb, 0xe9, 0xea, 0x86, 0x93, 0x8f, 0x73, 0xf3, 0x32, 0x9a, 0x94,
	0xb4, 0x7b, 0x99, 0x27, 0x5e, 0xe6, 0x2b, 0x10, 0x55, 0x4b, 0x0c, 0x7f, 0x9a, 0x79, 0xf0, 0x34,
	0xff, 0xd5, 0x40, 0x92, 0xdd, 0xae, 0x3d, 0xd1, 0x6f, 0x8c, 0xee, 0x66, 0x50, 0xef, 0xe0, 0x9e,
	0xd4, 0xfa, 0x8e, 0xfe, 0x67, 0x04, 0x73, 0x0d, 0x5d, 0xd0, 0xb3, 0x1a, 0x26, 0xbe, 0xcf, 0xeb,
	0x43, 0x62, 0xdc, 0x0f, 0x89, 0xdb, 0x5e, 0x85, 0xea, 0xcc, 0x97, 0x13, 0xbb, 0x25, 0x20, 0x1b,
	0x02, 0x61, 0xda, 0xe8, 0x4d, 0x27, 0x89, 0xbd, 0xc0, 0x1f, 0xf0, 0x6e, 0xd5, 0x5c, 0xa3, 0xfe,
	0xc0, 0xf3, 0x48, 0x26, 0x1b, 0xd8, 0xbb, 0xd0, 0xc0, 0x96, 0x0b, 0xa7, 0xa7, 0xf5, 0xaa, 0xdd,
	0x07, 0x07, 0xd1, 0xcc, 0x30, 0xea, 0xf2, 0x14, 0x62, 0xde, 0x9c, 0x70, 0xf8, 0x2a, 0x33, 0x58,
	0x30, 0xc3, 0xd5, 0x92, 0xd7, 0x21, 0x53, 0x3c, 0x46, 0xff, 0x3f, 0x98, 0x36, 0xc8, 0x9c, 0x41,
	0x88, 0xb3, 0xf6, 0x4d, 0x48, 0xc7, 0xd2, 0x60, 0x28, 0x9d, 0x04, 0x9a, 0x8f, 0x50, 0xa7, 0x7e,
	0xfc, 0x08, 0x6e, 0x3f, 0x4b, 0x06, 0xa9, 0x90, 0xda, 0x2d, 0x90, 0xda, 0x42, 0xf5, 0x28, 0x02,
	0xdc, 0x47, 0x1c, 0x06, 0xda, 0xeb, 0x37, 0x26, 0xa0, 0xca, 0x5b, 0xae, 0xda, 0x6d, 0x58, 0xe6,
	0xb5, 0x5a, 0x02, 0x2a, 0x53, 0x94, 0xaa, 0xf8, 0x39, 0xba, 0xa6, 0x62, 0x7e, 0x05, 0xfe, 0xf7,
	0x80, 0xff, 0xb2, 0xf4, 0x38, 0x8c, 0xfb, 0x21, 0x5a, 0x62, 0x09, 0xc3, 0xa1, 0x4a, 0x80, 0x9c,
	0x40, 0xcd, 0x27, 0x6a, 0x76, 0x07, 0x6a, 0x76, 0x01, 0x80, 0x82, 0x41, 0xd0, 0xca, 0xf4, 0x8a,
	0x3a, 0x39, 0xe8, 0x2d, 0xfd, 0xc2, 0x75, 0x38, 0xef, 0x5d, 0xe0, 0xbd, 0xa6, 0xb9, 0xed, 0x1e,
	0x38, 0x49, 0x75, 0x4f, 0x10, 0xb7, 0x42, 0xf9, 0x3e, 0x50, 0xce, 0xeb, 0x27, 0xb0, 0x46, 0xf1,
	0x05, 0x7a, 0xe3, 0x80, 0x8b, 0x61, 0x8d, 0xf0, 0x1e, 0x10, 0x5e, 0x19, 0x7a, 0x39, 0xac, 0xb0,
	0xf3, 0x03, 0xda, 0x0b, 0x32, 0x5a, 0xa7, 0x2d, 0x0e, 0xe8, 0x0f, 0x5e, 0x87, 0x03, 0x1a, 0x82,
	0xd0, 0x03, 0x2d, 0x0e, 0xe8, 0x3f, 0x0d, 0xb4, 0x50, 0xbf, 0x1c, 0x6a, 0x41, 0x7e, 0xf8, 0x1a,
	0x04, 0x79, 0xae, 0x7a, 0x79, 0x2d, 0xc7, 0x78, 0x13, 0xb5, 0x1b, 0x43, 0xe4, 0x77, 0xdf, 0x35,
	0x10, 0xc5, 0x6c, 0xdd, 0x7d, 0xcd, 0x27, 0xe6, 0x3f, 0xc6, 0xf0, 0xfe, 0x92, 0x0f, 0xd0, 0xf6,
	0x7d, 0xb8, 0xca, 0x7c, 0x3f, 0xda, 0x57, 0x19, 0xfd, 0x19, 0xa8, 0x6e, 0x02, 0x95, 0x76, 0x92,
	0x7f, 0xa5, 0xe6, 0x6f, 0xb5, 0x9b, 0x9b, 0xdc, 0x4d, 0xed, 0x75, 0x08, 0xf7, 0xc5, 0x68, 0x87,
	0x2b, 0xaf, 0xfa, 0xfa, 0xc5, 0x4d, 0xee, 0x6f, 0x73, 0x13, 0x2d, 0x36, 0x1f, 0x44, 0x61, 0x40,
	0x99, 0xec, 0x16, 0x0f, 0xea, 0x0f, 0x00, 0xe9, 0xbe, 0x15, 0x50, 0x06, 0x2d, 0xa2, 0x7f, 0x0c,
	0xfe, 0x47, 0x72, 0xe3, 0xdf, 0x00, 0x00, 0x00, 0xff, 0xff, 0xe5, 0xeb, 0x1a, 0xe4, 0x42, 0x19,
	0x00, 0x00,
}
