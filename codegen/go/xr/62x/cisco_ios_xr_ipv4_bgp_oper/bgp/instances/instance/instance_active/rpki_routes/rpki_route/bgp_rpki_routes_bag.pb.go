/*
Copyright 2019 Cisco Systems

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: bgp_rpki_routes_bag.proto

package cisco_ios_xr_ipv4_bgp_oper_bgp_instances_instance_instance_active_rpki_routes_rpki_route

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type BgpRpkiRoutesBag_KEYS struct {
	InstanceName         string   `protobuf:"bytes,1,opt,name=instance_name,json=instanceName,proto3" json:"instance_name,omitempty"`
	AfName               string   `protobuf:"bytes,2,opt,name=af_name,json=afName,proto3" json:"af_name,omitempty"`
	Address              string   `protobuf:"bytes,3,opt,name=address,proto3" json:"address,omitempty"`
	Minimum              uint32   `protobuf:"varint,4,opt,name=minimum,proto3" json:"minimum,omitempty"`
	Maximum              uint32   `protobuf:"varint,5,opt,name=maximum,proto3" json:"maximum,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BgpRpkiRoutesBag_KEYS) Reset()         { *m = BgpRpkiRoutesBag_KEYS{} }
func (m *BgpRpkiRoutesBag_KEYS) String() string { return proto.CompactTextString(m) }
func (*BgpRpkiRoutesBag_KEYS) ProtoMessage()    {}
func (*BgpRpkiRoutesBag_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_e8451228d8ff3939, []int{0}
}

func (m *BgpRpkiRoutesBag_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BgpRpkiRoutesBag_KEYS.Unmarshal(m, b)
}
func (m *BgpRpkiRoutesBag_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BgpRpkiRoutesBag_KEYS.Marshal(b, m, deterministic)
}
func (m *BgpRpkiRoutesBag_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BgpRpkiRoutesBag_KEYS.Merge(m, src)
}
func (m *BgpRpkiRoutesBag_KEYS) XXX_Size() int {
	return xxx_messageInfo_BgpRpkiRoutesBag_KEYS.Size(m)
}
func (m *BgpRpkiRoutesBag_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_BgpRpkiRoutesBag_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_BgpRpkiRoutesBag_KEYS proto.InternalMessageInfo

func (m *BgpRpkiRoutesBag_KEYS) GetInstanceName() string {
	if m != nil {
		return m.InstanceName
	}
	return ""
}

func (m *BgpRpkiRoutesBag_KEYS) GetAfName() string {
	if m != nil {
		return m.AfName
	}
	return ""
}

func (m *BgpRpkiRoutesBag_KEYS) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *BgpRpkiRoutesBag_KEYS) GetMinimum() uint32 {
	if m != nil {
		return m.Minimum
	}
	return 0
}

func (m *BgpRpkiRoutesBag_KEYS) GetMaximum() uint32 {
	if m != nil {
		return m.Maximum
	}
	return 0
}

type BgpEdmRpkiRouteType_ struct {
	AfName               string   `protobuf:"bytes,1,opt,name=af_name,json=afName,proto3" json:"af_name,omitempty"`
	Address              string   `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
	MinPrefixLen         uint32   `protobuf:"varint,3,opt,name=min_prefix_len,json=minPrefixLen,proto3" json:"min_prefix_len,omitempty"`
	MaxPrefixLen         uint32   `protobuf:"varint,4,opt,name=max_prefix_len,json=maxPrefixLen,proto3" json:"max_prefix_len,omitempty"`
	As                   uint32   `protobuf:"varint,5,opt,name=as,proto3" json:"as,omitempty"`
	Refcount             uint32   `protobuf:"varint,6,opt,name=refcount,proto3" json:"refcount,omitempty"`
	Server               string   `protobuf:"bytes,7,opt,name=server,proto3" json:"server,omitempty"`
	Stale                bool     `protobuf:"varint,8,opt,name=stale,proto3" json:"stale,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BgpEdmRpkiRouteType_) Reset()         { *m = BgpEdmRpkiRouteType_{} }
func (m *BgpEdmRpkiRouteType_) String() string { return proto.CompactTextString(m) }
func (*BgpEdmRpkiRouteType_) ProtoMessage()    {}
func (*BgpEdmRpkiRouteType_) Descriptor() ([]byte, []int) {
	return fileDescriptor_e8451228d8ff3939, []int{1}
}

func (m *BgpEdmRpkiRouteType_) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BgpEdmRpkiRouteType_.Unmarshal(m, b)
}
func (m *BgpEdmRpkiRouteType_) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BgpEdmRpkiRouteType_.Marshal(b, m, deterministic)
}
func (m *BgpEdmRpkiRouteType_) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BgpEdmRpkiRouteType_.Merge(m, src)
}
func (m *BgpEdmRpkiRouteType_) XXX_Size() int {
	return xxx_messageInfo_BgpEdmRpkiRouteType_.Size(m)
}
func (m *BgpEdmRpkiRouteType_) XXX_DiscardUnknown() {
	xxx_messageInfo_BgpEdmRpkiRouteType_.DiscardUnknown(m)
}

var xxx_messageInfo_BgpEdmRpkiRouteType_ proto.InternalMessageInfo

func (m *BgpEdmRpkiRouteType_) GetAfName() string {
	if m != nil {
		return m.AfName
	}
	return ""
}

func (m *BgpEdmRpkiRouteType_) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *BgpEdmRpkiRouteType_) GetMinPrefixLen() uint32 {
	if m != nil {
		return m.MinPrefixLen
	}
	return 0
}

func (m *BgpEdmRpkiRouteType_) GetMaxPrefixLen() uint32 {
	if m != nil {
		return m.MaxPrefixLen
	}
	return 0
}

func (m *BgpEdmRpkiRouteType_) GetAs() uint32 {
	if m != nil {
		return m.As
	}
	return 0
}

func (m *BgpEdmRpkiRouteType_) GetRefcount() uint32 {
	if m != nil {
		return m.Refcount
	}
	return 0
}

func (m *BgpEdmRpkiRouteType_) GetServer() string {
	if m != nil {
		return m.Server
	}
	return ""
}

func (m *BgpEdmRpkiRouteType_) GetStale() bool {
	if m != nil {
		return m.Stale
	}
	return false
}

type BgpRpkiRoutesBag struct {
	RpkiRoute            []*BgpEdmRpkiRouteType_ `protobuf:"bytes,50,rep,name=rpki_route,json=rpkiRoute,proto3" json:"rpki_route,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *BgpRpkiRoutesBag) Reset()         { *m = BgpRpkiRoutesBag{} }
func (m *BgpRpkiRoutesBag) String() string { return proto.CompactTextString(m) }
func (*BgpRpkiRoutesBag) ProtoMessage()    {}
func (*BgpRpkiRoutesBag) Descriptor() ([]byte, []int) {
	return fileDescriptor_e8451228d8ff3939, []int{2}
}

func (m *BgpRpkiRoutesBag) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BgpRpkiRoutesBag.Unmarshal(m, b)
}
func (m *BgpRpkiRoutesBag) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BgpRpkiRoutesBag.Marshal(b, m, deterministic)
}
func (m *BgpRpkiRoutesBag) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BgpRpkiRoutesBag.Merge(m, src)
}
func (m *BgpRpkiRoutesBag) XXX_Size() int {
	return xxx_messageInfo_BgpRpkiRoutesBag.Size(m)
}
func (m *BgpRpkiRoutesBag) XXX_DiscardUnknown() {
	xxx_messageInfo_BgpRpkiRoutesBag.DiscardUnknown(m)
}

var xxx_messageInfo_BgpRpkiRoutesBag proto.InternalMessageInfo

func (m *BgpRpkiRoutesBag) GetRpkiRoute() []*BgpEdmRpkiRouteType_ {
	if m != nil {
		return m.RpkiRoute
	}
	return nil
}

func init() {
	proto.RegisterType((*BgpRpkiRoutesBag_KEYS)(nil), "cisco_ios_xr_ipv4_bgp_oper.bgp.instances.instance.instance_active.rpki_routes.rpki_route.bgp_rpki_routes_bag_KEYS")
	proto.RegisterType((*BgpEdmRpkiRouteType_)(nil), "cisco_ios_xr_ipv4_bgp_oper.bgp.instances.instance.instance_active.rpki_routes.rpki_route.bgp_edm_rpki_route_type_")
	proto.RegisterType((*BgpRpkiRoutesBag)(nil), "cisco_ios_xr_ipv4_bgp_oper.bgp.instances.instance.instance_active.rpki_routes.rpki_route.bgp_rpki_routes_bag")
}

func init() { proto.RegisterFile("bgp_rpki_routes_bag.proto", fileDescriptor_e8451228d8ff3939) }

var fileDescriptor_e8451228d8ff3939 = []byte{
	// 348 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x92, 0x3d, 0x4e, 0xc3, 0x30,
	0x14, 0xc7, 0xe5, 0xb4, 0x4d, 0x5b, 0xd3, 0x76, 0x08, 0x08, 0x0c, 0x53, 0x54, 0x18, 0x32, 0x65,
	0x28, 0x5c, 0x81, 0x09, 0x84, 0x50, 0x58, 0x60, 0xb2, 0x9c, 0xf4, 0xa5, 0xb2, 0xa8, 0x1d, 0xcb,
	0x76, 0xab, 0x70, 0x0c, 0x2e, 0x81, 0xc4, 0xf9, 0xb8, 0x00, 0x8a, 0x93, 0xa6, 0x41, 0x6a, 0x47,
	0xb6, 0xf7, 0xff, 0xd0, 0xcb, 0x4f, 0xf1, 0xc3, 0x97, 0xe9, 0x4a, 0x51, 0xad, 0xde, 0x39, 0xd5,
	0xc5, 0xc6, 0x82, 0xa1, 0x29, 0x5b, 0xc5, 0x4a, 0x17, 0xb6, 0x08, 0x5e, 0x33, 0x6e, 0xb2, 0x82,
	0xf2, 0xc2, 0xd0, 0x52, 0x53, 0xae, 0xb6, 0x77, 0xb4, 0x2a, 0x17, 0x0a, 0x74, 0x9c, 0xae, 0x54,
	0xcc, 0xa5, 0xb1, 0x4c, 0x66, 0x60, 0xda, 0xa9, 0x1d, 0x28, 0xcb, 0x2c, 0xdf, 0x42, 0xdc, 0x59,
	0xdc, 0x99, 0xe7, 0x5f, 0x08, 0x93, 0x03, 0xdf, 0xa5, 0x0f, 0xf7, 0x6f, 0x2f, 0xc1, 0x35, 0x9e,
	0xb6, 0x6b, 0x24, 0x13, 0x40, 0x50, 0x88, 0xa2, 0x71, 0x32, 0xd9, 0x99, 0x4f, 0x4c, 0x40, 0x70,
	0x81, 0x87, 0x2c, 0xaf, 0x63, 0xcf, 0xc5, 0x3e, 0xcb, 0x5d, 0x40, 0xf0, 0x90, 0x2d, 0x97, 0x1a,
	0x8c, 0x21, 0x3d, 0x17, 0xec, 0x64, 0x95, 0x08, 0x2e, 0xb9, 0xd8, 0x08, 0xd2, 0x0f, 0x51, 0x34,
	0x4d, 0x76, 0xd2, 0x25, 0xac, 0x74, 0xc9, 0xa0, 0x49, 0x6a, 0x39, 0xff, 0x69, 0x40, 0x61, 0x29,
	0x3a, 0xb0, 0xd4, 0x7e, 0x28, 0xa0, 0x5d, 0x06, 0x74, 0x8c, 0xc1, 0xfb, 0xcb, 0x70, 0x83, 0x67,
	0x82, 0x4b, 0xaa, 0x34, 0xe4, 0xbc, 0xa4, 0x6b, 0x90, 0x0e, 0x72, 0x9a, 0x4c, 0x04, 0x97, 0xcf,
	0xce, 0x7c, 0x04, 0xe9, 0x5a, 0xac, 0xec, 0xb6, 0xfa, 0x4d, 0x8b, 0x95, 0xfb, 0xd6, 0x0c, 0x7b,
	0xcc, 0x34, 0xc0, 0x1e, 0x33, 0xc1, 0x15, 0x1e, 0x69, 0xc8, 0xb3, 0x62, 0x23, 0x2d, 0xf1, 0x9d,
	0xdb, 0xea, 0xe0, 0x1c, 0xfb, 0x06, 0xf4, 0x16, 0x34, 0x19, 0xd6, 0xa4, 0xb5, 0x0a, 0xce, 0xf0,
	0xc0, 0x58, 0xb6, 0x06, 0x32, 0x0a, 0x51, 0x34, 0x4a, 0x6a, 0x31, 0xff, 0x46, 0xf8, 0xf4, 0xc0,
	0xf3, 0x04, 0x9f, 0x08, 0xe3, 0xbd, 0x47, 0x16, 0x61, 0x2f, 0x3a, 0x59, 0xe8, 0xf8, 0xbf, 0xce,
	0x24, 0x3e, 0xf6, 0xe7, 0x93, 0x71, 0xe5, 0x24, 0x95, 0x91, 0xfa, 0xee, 0x56, 0x6f, 0x7f, 0x03,
	0x00, 0x00, 0xff, 0xff, 0x72, 0xaf, 0x79, 0x4f, 0xc8, 0x02, 0x00, 0x00,
}
