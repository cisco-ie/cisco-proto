/*
Copyright 2019 Cisco Systems

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: bgp_attrfilter_group_bag.proto

package cisco_ios_xr_ipv4_bgp_oper_bgp_instances_instance_instance_standby_attribute_filter_groups_attribute_filter_group

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type BgpAttrfilterGroupBag_KEYS struct {
	InstanceName         string   `protobuf:"bytes,1,opt,name=instance_name,json=instanceName,proto3" json:"instance_name,omitempty"`
	GroupName            string   `protobuf:"bytes,2,opt,name=group_name,json=groupName,proto3" json:"group_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BgpAttrfilterGroupBag_KEYS) Reset()         { *m = BgpAttrfilterGroupBag_KEYS{} }
func (m *BgpAttrfilterGroupBag_KEYS) String() string { return proto.CompactTextString(m) }
func (*BgpAttrfilterGroupBag_KEYS) ProtoMessage()    {}
func (*BgpAttrfilterGroupBag_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_e788e2cc752bf0dc, []int{0}
}

func (m *BgpAttrfilterGroupBag_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BgpAttrfilterGroupBag_KEYS.Unmarshal(m, b)
}
func (m *BgpAttrfilterGroupBag_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BgpAttrfilterGroupBag_KEYS.Marshal(b, m, deterministic)
}
func (m *BgpAttrfilterGroupBag_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BgpAttrfilterGroupBag_KEYS.Merge(m, src)
}
func (m *BgpAttrfilterGroupBag_KEYS) XXX_Size() int {
	return xxx_messageInfo_BgpAttrfilterGroupBag_KEYS.Size(m)
}
func (m *BgpAttrfilterGroupBag_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_BgpAttrfilterGroupBag_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_BgpAttrfilterGroupBag_KEYS proto.InternalMessageInfo

func (m *BgpAttrfilterGroupBag_KEYS) GetInstanceName() string {
	if m != nil {
		return m.InstanceName
	}
	return ""
}

func (m *BgpAttrfilterGroupBag_KEYS) GetGroupName() string {
	if m != nil {
		return m.GroupName
	}
	return ""
}

type BgpAttrfilterEntryBag struct {
	AttributeFilterEntryRequestedAction string   `protobuf:"bytes,1,opt,name=attribute_filter_entry_requested_action,json=attributeFilterEntryRequestedAction,proto3" json:"attribute_filter_entry_requested_action,omitempty"`
	AttributeFilterEntryRangeStart      uint32   `protobuf:"varint,2,opt,name=attribute_filter_entry_range_start,json=attributeFilterEntryRangeStart,proto3" json:"attribute_filter_entry_range_start,omitempty"`
	AttributeFilterEntryRangeEnd        uint32   `protobuf:"varint,3,opt,name=attribute_filter_entry_range_end,json=attributeFilterEntryRangeEnd,proto3" json:"attribute_filter_entry_range_end,omitempty"`
	XXX_NoUnkeyedLiteral                struct{} `json:"-"`
	XXX_unrecognized                    []byte   `json:"-"`
	XXX_sizecache                       int32    `json:"-"`
}

func (m *BgpAttrfilterEntryBag) Reset()         { *m = BgpAttrfilterEntryBag{} }
func (m *BgpAttrfilterEntryBag) String() string { return proto.CompactTextString(m) }
func (*BgpAttrfilterEntryBag) ProtoMessage()    {}
func (*BgpAttrfilterEntryBag) Descriptor() ([]byte, []int) {
	return fileDescriptor_e788e2cc752bf0dc, []int{1}
}

func (m *BgpAttrfilterEntryBag) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BgpAttrfilterEntryBag.Unmarshal(m, b)
}
func (m *BgpAttrfilterEntryBag) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BgpAttrfilterEntryBag.Marshal(b, m, deterministic)
}
func (m *BgpAttrfilterEntryBag) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BgpAttrfilterEntryBag.Merge(m, src)
}
func (m *BgpAttrfilterEntryBag) XXX_Size() int {
	return xxx_messageInfo_BgpAttrfilterEntryBag.Size(m)
}
func (m *BgpAttrfilterEntryBag) XXX_DiscardUnknown() {
	xxx_messageInfo_BgpAttrfilterEntryBag.DiscardUnknown(m)
}

var xxx_messageInfo_BgpAttrfilterEntryBag proto.InternalMessageInfo

func (m *BgpAttrfilterEntryBag) GetAttributeFilterEntryRequestedAction() string {
	if m != nil {
		return m.AttributeFilterEntryRequestedAction
	}
	return ""
}

func (m *BgpAttrfilterEntryBag) GetAttributeFilterEntryRangeStart() uint32 {
	if m != nil {
		return m.AttributeFilterEntryRangeStart
	}
	return 0
}

func (m *BgpAttrfilterEntryBag) GetAttributeFilterEntryRangeEnd() uint32 {
	if m != nil {
		return m.AttributeFilterEntryRangeEnd
	}
	return 0
}

type BgpAttrfilterGroupBag struct {
	AttributeFilterGroupName       string                   `protobuf:"bytes,50,opt,name=attribute_filter_group_name,json=attributeFilterGroupName,proto3" json:"attribute_filter_group_name,omitempty"`
	AttributeFilterEntry           []*BgpAttrfilterEntryBag `protobuf:"bytes,51,rep,name=attribute_filter_entry,json=attributeFilterEntry,proto3" json:"attribute_filter_entry,omitempty"`
	AttributeFilterTotalGroupCount uint32                   `protobuf:"varint,52,opt,name=attribute_filter_total_group_count,json=attributeFilterTotalGroupCount,proto3" json:"attribute_filter_total_group_count,omitempty"`
	XXX_NoUnkeyedLiteral           struct{}                 `json:"-"`
	XXX_unrecognized               []byte                   `json:"-"`
	XXX_sizecache                  int32                    `json:"-"`
}

func (m *BgpAttrfilterGroupBag) Reset()         { *m = BgpAttrfilterGroupBag{} }
func (m *BgpAttrfilterGroupBag) String() string { return proto.CompactTextString(m) }
func (*BgpAttrfilterGroupBag) ProtoMessage()    {}
func (*BgpAttrfilterGroupBag) Descriptor() ([]byte, []int) {
	return fileDescriptor_e788e2cc752bf0dc, []int{2}
}

func (m *BgpAttrfilterGroupBag) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BgpAttrfilterGroupBag.Unmarshal(m, b)
}
func (m *BgpAttrfilterGroupBag) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BgpAttrfilterGroupBag.Marshal(b, m, deterministic)
}
func (m *BgpAttrfilterGroupBag) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BgpAttrfilterGroupBag.Merge(m, src)
}
func (m *BgpAttrfilterGroupBag) XXX_Size() int {
	return xxx_messageInfo_BgpAttrfilterGroupBag.Size(m)
}
func (m *BgpAttrfilterGroupBag) XXX_DiscardUnknown() {
	xxx_messageInfo_BgpAttrfilterGroupBag.DiscardUnknown(m)
}

var xxx_messageInfo_BgpAttrfilterGroupBag proto.InternalMessageInfo

func (m *BgpAttrfilterGroupBag) GetAttributeFilterGroupName() string {
	if m != nil {
		return m.AttributeFilterGroupName
	}
	return ""
}

func (m *BgpAttrfilterGroupBag) GetAttributeFilterEntry() []*BgpAttrfilterEntryBag {
	if m != nil {
		return m.AttributeFilterEntry
	}
	return nil
}

func (m *BgpAttrfilterGroupBag) GetAttributeFilterTotalGroupCount() uint32 {
	if m != nil {
		return m.AttributeFilterTotalGroupCount
	}
	return 0
}

func init() {
	proto.RegisterType((*BgpAttrfilterGroupBag_KEYS)(nil), "cisco_ios_xr_ipv4_bgp_oper.bgp.instances.instance.instance_standby.attribute_filter_groups.attribute_filter_group.bgp_attrfilter_group_bag_KEYS")
	proto.RegisterType((*BgpAttrfilterEntryBag)(nil), "cisco_ios_xr_ipv4_bgp_oper.bgp.instances.instance.instance_standby.attribute_filter_groups.attribute_filter_group.bgp_attrfilter_entry_bag")
	proto.RegisterType((*BgpAttrfilterGroupBag)(nil), "cisco_ios_xr_ipv4_bgp_oper.bgp.instances.instance.instance_standby.attribute_filter_groups.attribute_filter_group.bgp_attrfilter_group_bag")
}

func init() { proto.RegisterFile("bgp_attrfilter_group_bag.proto", fileDescriptor_e788e2cc752bf0dc) }

var fileDescriptor_e788e2cc752bf0dc = []byte{
	// 350 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x93, 0xb1, 0x6a, 0xf3, 0x30,
	0x14, 0x85, 0x71, 0x02, 0x3f, 0x44, 0x7f, 0xb3, 0x88, 0x52, 0x0c, 0x6d, 0x42, 0x70, 0x86, 0x66,
	0xf2, 0x90, 0x64, 0xed, 0x50, 0x4a, 0x52, 0x68, 0xa1, 0x83, 0x93, 0xa5, 0x93, 0x90, 0x65, 0xd5,
	0x08, 0x12, 0x49, 0x91, 0xae, 0x4b, 0xb3, 0x77, 0xeb, 0x5b, 0xf5, 0x71, 0xfa, 0x14, 0x45, 0x4a,
	0x62, 0x4a, 0x22, 0x77, 0xec, 0x64, 0x71, 0xf5, 0xdd, 0x73, 0xae, 0xcf, 0xb5, 0x51, 0x3f, 0x2f,
	0x35, 0xa1, 0x00, 0xe6, 0x45, 0xac, 0x80, 0x1b, 0x52, 0x1a, 0x55, 0x69, 0x92, 0xd3, 0x32, 0xd5,
	0x46, 0x81, 0xc2, 0x1b, 0x26, 0x2c, 0x53, 0x44, 0x28, 0x4b, 0xde, 0x0c, 0x11, 0xfa, 0x75, 0x4a,
	0x5c, 0x87, 0xd2, 0xdc, 0xa4, 0x79, 0xa9, 0x53, 0x21, 0x2d, 0x50, 0xc9, 0xb8, 0xad, 0x4f, 0xf5,
	0x81, 0xb8, 0x47, 0x91, 0x6f, 0x53, 0x27, 0x2f, 0xf2, 0x0a, 0x38, 0xf9, 0x69, 0x62, 0x1b, 0xea,
	0x09, 0x43, 0xbd, 0xa6, 0xa1, 0xc8, 0xe3, 0xec, 0x79, 0x81, 0x87, 0xa8, 0x5b, 0x7b, 0x48, 0xba,
	0xe6, 0x71, 0x34, 0x88, 0x46, 0x9d, 0xec, 0xec, 0x50, 0x7c, 0xa2, 0x6b, 0x8e, 0x7b, 0x08, 0xed,
	0xda, 0x3c, 0xd1, 0xf2, 0x44, 0xc7, 0x57, 0xdc, 0x75, 0xf2, 0xde, 0x42, 0xf1, 0x91, 0x0b, 0x97,
	0x60, 0xb6, 0xce, 0x05, 0x2f, 0xd1, 0xf5, 0xc9, 0x6c, 0xbb, 0x5b, 0xc3, 0x37, 0x15, 0xb7, 0xc0,
	0x0b, 0x42, 0x19, 0x08, 0x25, 0xf7, 0xd6, 0xc3, 0x1a, 0x9f, 0x7b, 0x7a, 0xe6, 0xe0, 0xec, 0xc0,
	0xde, 0x7a, 0x14, 0x3f, 0xa0, 0xa4, 0x49, 0x95, 0xca, 0xd2, 0xc7, 0x65, 0xc0, 0x4f, 0xda, 0xcd,
	0xfa, 0x41, 0x41, 0x87, 0x2d, 0x1c, 0x85, 0xe7, 0x68, 0xf0, 0xab, 0x16, 0x97, 0x45, 0xdc, 0xf6,
	0x4a, 0x57, 0x8d, 0x4a, 0x33, 0x59, 0x24, 0x5f, 0xa7, 0x31, 0xd4, 0x61, 0xe3, 0x1b, 0x74, 0x19,
	0x5e, 0xd1, 0x2e, 0xd3, 0xb1, 0x7f, 0xf5, 0xf8, 0x48, 0xff, 0xfe, 0x10, 0x31, 0xfe, 0x8c, 0xd0,
	0x45, 0x78, 0xc8, 0x78, 0x32, 0x68, 0x8f, 0xfe, 0x8f, 0x3f, 0xa2, 0xf4, 0xcf, 0xbf, 0xae, 0xb4,
	0x69, 0xe9, 0xd9, 0x79, 0x28, 0xa8, 0xe0, 0xd2, 0x40, 0x01, 0x5d, 0xed, 0x93, 0x60, 0xaa, 0x92,
	0x10, 0x4f, 0x83, 0x4b, 0x5b, 0x3a, 0xce, 0xe7, 0x71, 0xe7, 0xa8, 0xfc, 0x9f, 0xff, 0xa5, 0x26,
	0xdf, 0x01, 0x00, 0x00, 0xff, 0xff, 0x2d, 0x2c, 0xa9, 0x14, 0x74, 0x03, 0x00, 0x00,
}
