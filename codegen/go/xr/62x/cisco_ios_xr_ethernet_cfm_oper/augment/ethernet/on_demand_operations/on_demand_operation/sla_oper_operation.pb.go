/*
Copyright 2019 Cisco Systems

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: sla_oper_operation.proto

package cisco_ios_xr_ethernet_cfm_oper_augment_ethernet_on_demand_operations_on_demand_operation

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type SlaOperOperation_KEYS struct {
	OperationId          uint32   `protobuf:"varint,1,opt,name=operation_id,json=operationId,proto3" json:"operation_id,omitempty"`
	DomainName           string   `protobuf:"bytes,2,opt,name=domain_name,json=domainName,proto3" json:"domain_name,omitempty"`
	InterfaceName        string   `protobuf:"bytes,3,opt,name=interface_name,json=interfaceName,proto3" json:"interface_name,omitempty"`
	MepId                uint32   `protobuf:"varint,4,opt,name=mep_id,json=mepId,proto3" json:"mep_id,omitempty"`
	MacAddress           string   `protobuf:"bytes,5,opt,name=mac_address,json=macAddress,proto3" json:"mac_address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SlaOperOperation_KEYS) Reset()         { *m = SlaOperOperation_KEYS{} }
func (m *SlaOperOperation_KEYS) String() string { return proto.CompactTextString(m) }
func (*SlaOperOperation_KEYS) ProtoMessage()    {}
func (*SlaOperOperation_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_16b32658a795c339, []int{0}
}

func (m *SlaOperOperation_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SlaOperOperation_KEYS.Unmarshal(m, b)
}
func (m *SlaOperOperation_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SlaOperOperation_KEYS.Marshal(b, m, deterministic)
}
func (m *SlaOperOperation_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SlaOperOperation_KEYS.Merge(m, src)
}
func (m *SlaOperOperation_KEYS) XXX_Size() int {
	return xxx_messageInfo_SlaOperOperation_KEYS.Size(m)
}
func (m *SlaOperOperation_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_SlaOperOperation_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_SlaOperOperation_KEYS proto.InternalMessageInfo

func (m *SlaOperOperation_KEYS) GetOperationId() uint32 {
	if m != nil {
		return m.OperationId
	}
	return 0
}

func (m *SlaOperOperation_KEYS) GetDomainName() string {
	if m != nil {
		return m.DomainName
	}
	return ""
}

func (m *SlaOperOperation_KEYS) GetInterfaceName() string {
	if m != nil {
		return m.InterfaceName
	}
	return ""
}

func (m *SlaOperOperation_KEYS) GetMepId() uint32 {
	if m != nil {
		return m.MepId
	}
	return 0
}

func (m *SlaOperOperation_KEYS) GetMacAddress() string {
	if m != nil {
		return m.MacAddress
	}
	return ""
}

type SlaOperPacketPadding struct {
	PacketPadSize           uint32   `protobuf:"varint,1,opt,name=packet_pad_size,json=packetPadSize,proto3" json:"packet_pad_size,omitempty"`
	TestPatternPadScheme    string   `protobuf:"bytes,2,opt,name=test_pattern_pad_scheme,json=testPatternPadScheme,proto3" json:"test_pattern_pad_scheme,omitempty"`
	TestPatternPadHexString uint32   `protobuf:"varint,3,opt,name=test_pattern_pad_hex_string,json=testPatternPadHexString,proto3" json:"test_pattern_pad_hex_string,omitempty"`
	XXX_NoUnkeyedLiteral    struct{} `json:"-"`
	XXX_unrecognized        []byte   `json:"-"`
	XXX_sizecache           int32    `json:"-"`
}

func (m *SlaOperPacketPadding) Reset()         { *m = SlaOperPacketPadding{} }
func (m *SlaOperPacketPadding) String() string { return proto.CompactTextString(m) }
func (*SlaOperPacketPadding) ProtoMessage()    {}
func (*SlaOperPacketPadding) Descriptor() ([]byte, []int) {
	return fileDescriptor_16b32658a795c339, []int{1}
}

func (m *SlaOperPacketPadding) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SlaOperPacketPadding.Unmarshal(m, b)
}
func (m *SlaOperPacketPadding) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SlaOperPacketPadding.Marshal(b, m, deterministic)
}
func (m *SlaOperPacketPadding) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SlaOperPacketPadding.Merge(m, src)
}
func (m *SlaOperPacketPadding) XXX_Size() int {
	return xxx_messageInfo_SlaOperPacketPadding.Size(m)
}
func (m *SlaOperPacketPadding) XXX_DiscardUnknown() {
	xxx_messageInfo_SlaOperPacketPadding.DiscardUnknown(m)
}

var xxx_messageInfo_SlaOperPacketPadding proto.InternalMessageInfo

func (m *SlaOperPacketPadding) GetPacketPadSize() uint32 {
	if m != nil {
		return m.PacketPadSize
	}
	return 0
}

func (m *SlaOperPacketPadding) GetTestPatternPadScheme() string {
	if m != nil {
		return m.TestPatternPadScheme
	}
	return ""
}

func (m *SlaOperPacketPadding) GetTestPatternPadHexString() uint32 {
	if m != nil {
		return m.TestPatternPadHexString
	}
	return 0
}

type SlaOperPacketPriority struct {
	PriorityType         string   `protobuf:"bytes,1,opt,name=priority_type,json=priorityType,proto3" json:"priority_type,omitempty"`
	Cos                  uint32   `protobuf:"varint,2,opt,name=cos,proto3" json:"cos,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SlaOperPacketPriority) Reset()         { *m = SlaOperPacketPriority{} }
func (m *SlaOperPacketPriority) String() string { return proto.CompactTextString(m) }
func (*SlaOperPacketPriority) ProtoMessage()    {}
func (*SlaOperPacketPriority) Descriptor() ([]byte, []int) {
	return fileDescriptor_16b32658a795c339, []int{2}
}

func (m *SlaOperPacketPriority) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SlaOperPacketPriority.Unmarshal(m, b)
}
func (m *SlaOperPacketPriority) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SlaOperPacketPriority.Marshal(b, m, deterministic)
}
func (m *SlaOperPacketPriority) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SlaOperPacketPriority.Merge(m, src)
}
func (m *SlaOperPacketPriority) XXX_Size() int {
	return xxx_messageInfo_SlaOperPacketPriority.Size(m)
}
func (m *SlaOperPacketPriority) XXX_DiscardUnknown() {
	xxx_messageInfo_SlaOperPacketPriority.DiscardUnknown(m)
}

var xxx_messageInfo_SlaOperPacketPriority proto.InternalMessageInfo

func (m *SlaOperPacketPriority) GetPriorityType() string {
	if m != nil {
		return m.PriorityType
	}
	return ""
}

func (m *SlaOperPacketPriority) GetCos() uint32 {
	if m != nil {
		return m.Cos
	}
	return 0
}

type SlaCfgMetricType struct {
	MetricType           string   `protobuf:"bytes,1,opt,name=metric_type,json=metricType,proto3" json:"metric_type,omitempty"`
	BinsCount            uint32   `protobuf:"varint,2,opt,name=bins_count,json=binsCount,proto3" json:"bins_count,omitempty"`
	BinsWidth            uint32   `protobuf:"varint,3,opt,name=bins_width,json=binsWidth,proto3" json:"bins_width,omitempty"`
	BucketSize           uint32   `protobuf:"varint,4,opt,name=bucket_size,json=bucketSize,proto3" json:"bucket_size,omitempty"`
	BucketSizeUnit       string   `protobuf:"bytes,5,opt,name=bucket_size_unit,json=bucketSizeUnit,proto3" json:"bucket_size_unit,omitempty"`
	BucketsArchive       uint32   `protobuf:"varint,6,opt,name=buckets_archive,json=bucketsArchive,proto3" json:"buckets_archive,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SlaCfgMetricType) Reset()         { *m = SlaCfgMetricType{} }
func (m *SlaCfgMetricType) String() string { return proto.CompactTextString(m) }
func (*SlaCfgMetricType) ProtoMessage()    {}
func (*SlaCfgMetricType) Descriptor() ([]byte, []int) {
	return fileDescriptor_16b32658a795c339, []int{3}
}

func (m *SlaCfgMetricType) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SlaCfgMetricType.Unmarshal(m, b)
}
func (m *SlaCfgMetricType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SlaCfgMetricType.Marshal(b, m, deterministic)
}
func (m *SlaCfgMetricType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SlaCfgMetricType.Merge(m, src)
}
func (m *SlaCfgMetricType) XXX_Size() int {
	return xxx_messageInfo_SlaCfgMetricType.Size(m)
}
func (m *SlaCfgMetricType) XXX_DiscardUnknown() {
	xxx_messageInfo_SlaCfgMetricType.DiscardUnknown(m)
}

var xxx_messageInfo_SlaCfgMetricType proto.InternalMessageInfo

func (m *SlaCfgMetricType) GetMetricType() string {
	if m != nil {
		return m.MetricType
	}
	return ""
}

func (m *SlaCfgMetricType) GetBinsCount() uint32 {
	if m != nil {
		return m.BinsCount
	}
	return 0
}

func (m *SlaCfgMetricType) GetBinsWidth() uint32 {
	if m != nil {
		return m.BinsWidth
	}
	return 0
}

func (m *SlaCfgMetricType) GetBucketSize() uint32 {
	if m != nil {
		return m.BucketSize
	}
	return 0
}

func (m *SlaCfgMetricType) GetBucketSizeUnit() string {
	if m != nil {
		return m.BucketSizeUnit
	}
	return ""
}

func (m *SlaCfgMetricType) GetBucketsArchive() uint32 {
	if m != nil {
		return m.BucketsArchive
	}
	return 0
}

type SlaOperOperationMetric struct {
	MetricConfig          *SlaCfgMetricType `protobuf:"bytes,1,opt,name=metric_config,json=metricConfig,proto3" json:"metric_config,omitempty"`
	CurrentBucketsArchive uint32            `protobuf:"varint,2,opt,name=current_buckets_archive,json=currentBucketsArchive,proto3" json:"current_buckets_archive,omitempty"`
	XXX_NoUnkeyedLiteral  struct{}          `json:"-"`
	XXX_unrecognized      []byte            `json:"-"`
	XXX_sizecache         int32             `json:"-"`
}

func (m *SlaOperOperationMetric) Reset()         { *m = SlaOperOperationMetric{} }
func (m *SlaOperOperationMetric) String() string { return proto.CompactTextString(m) }
func (*SlaOperOperationMetric) ProtoMessage()    {}
func (*SlaOperOperationMetric) Descriptor() ([]byte, []int) {
	return fileDescriptor_16b32658a795c339, []int{4}
}

func (m *SlaOperOperationMetric) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SlaOperOperationMetric.Unmarshal(m, b)
}
func (m *SlaOperOperationMetric) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SlaOperOperationMetric.Marshal(b, m, deterministic)
}
func (m *SlaOperOperationMetric) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SlaOperOperationMetric.Merge(m, src)
}
func (m *SlaOperOperationMetric) XXX_Size() int {
	return xxx_messageInfo_SlaOperOperationMetric.Size(m)
}
func (m *SlaOperOperationMetric) XXX_DiscardUnknown() {
	xxx_messageInfo_SlaOperOperationMetric.DiscardUnknown(m)
}

var xxx_messageInfo_SlaOperOperationMetric proto.InternalMessageInfo

func (m *SlaOperOperationMetric) GetMetricConfig() *SlaCfgMetricType {
	if m != nil {
		return m.MetricConfig
	}
	return nil
}

func (m *SlaOperOperationMetric) GetCurrentBucketsArchive() uint32 {
	if m != nil {
		return m.CurrentBucketsArchive
	}
	return 0
}

type SlaOperOperationSchedule struct {
	StartTime            uint32   `protobuf:"varint,1,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	StartTimeConfigured  bool     `protobuf:"varint,2,opt,name=start_time_configured,json=startTimeConfigured,proto3" json:"start_time_configured,omitempty"`
	ScheduleDuration     uint32   `protobuf:"varint,3,opt,name=schedule_duration,json=scheduleDuration,proto3" json:"schedule_duration,omitempty"`
	ScheduleInterval     uint32   `protobuf:"varint,4,opt,name=schedule_interval,json=scheduleInterval,proto3" json:"schedule_interval,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SlaOperOperationSchedule) Reset()         { *m = SlaOperOperationSchedule{} }
func (m *SlaOperOperationSchedule) String() string { return proto.CompactTextString(m) }
func (*SlaOperOperationSchedule) ProtoMessage()    {}
func (*SlaOperOperationSchedule) Descriptor() ([]byte, []int) {
	return fileDescriptor_16b32658a795c339, []int{5}
}

func (m *SlaOperOperationSchedule) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SlaOperOperationSchedule.Unmarshal(m, b)
}
func (m *SlaOperOperationSchedule) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SlaOperOperationSchedule.Marshal(b, m, deterministic)
}
func (m *SlaOperOperationSchedule) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SlaOperOperationSchedule.Merge(m, src)
}
func (m *SlaOperOperationSchedule) XXX_Size() int {
	return xxx_messageInfo_SlaOperOperationSchedule.Size(m)
}
func (m *SlaOperOperationSchedule) XXX_DiscardUnknown() {
	xxx_messageInfo_SlaOperOperationSchedule.DiscardUnknown(m)
}

var xxx_messageInfo_SlaOperOperationSchedule proto.InternalMessageInfo

func (m *SlaOperOperationSchedule) GetStartTime() uint32 {
	if m != nil {
		return m.StartTime
	}
	return 0
}

func (m *SlaOperOperationSchedule) GetStartTimeConfigured() bool {
	if m != nil {
		return m.StartTimeConfigured
	}
	return false
}

func (m *SlaOperOperationSchedule) GetScheduleDuration() uint32 {
	if m != nil {
		return m.ScheduleDuration
	}
	return 0
}

func (m *SlaOperOperationSchedule) GetScheduleInterval() uint32 {
	if m != nil {
		return m.ScheduleInterval
	}
	return 0
}

type SlaOperOperationProfile struct {
	ProbeType              string                    `protobuf:"bytes,1,opt,name=probe_type,json=probeType,proto3" json:"probe_type,omitempty"`
	PacketsPerBurst        uint32                    `protobuf:"varint,2,opt,name=packets_per_burst,json=packetsPerBurst,proto3" json:"packets_per_burst,omitempty"`
	InterPacketInterval    uint32                    `protobuf:"varint,3,opt,name=inter_packet_interval,json=interPacketInterval,proto3" json:"inter_packet_interval,omitempty"`
	BurstsPerProbe         uint32                    `protobuf:"varint,4,opt,name=bursts_per_probe,json=burstsPerProbe,proto3" json:"bursts_per_probe,omitempty"`
	InterBurstInterval     uint32                    `protobuf:"varint,5,opt,name=inter_burst_interval,json=interBurstInterval,proto3" json:"inter_burst_interval,omitempty"`
	PacketPadding          *SlaOperPacketPadding     `protobuf:"bytes,6,opt,name=packet_padding,json=packetPadding,proto3" json:"packet_padding,omitempty"`
	Priority               *SlaOperPacketPriority    `protobuf:"bytes,7,opt,name=priority,proto3" json:"priority,omitempty"`
	OperationMetric        []*SlaOperOperationMetric `protobuf:"bytes,8,rep,name=operation_metric,json=operationMetric,proto3" json:"operation_metric,omitempty"`
	OperationSchedule      *SlaOperOperationSchedule `protobuf:"bytes,9,opt,name=operation_schedule,json=operationSchedule,proto3" json:"operation_schedule,omitempty"`
	FlrCalculationInterval uint32                    `protobuf:"varint,10,opt,name=flr_calculation_interval,json=flrCalculationInterval,proto3" json:"flr_calculation_interval,omitempty"`
	XXX_NoUnkeyedLiteral   struct{}                  `json:"-"`
	XXX_unrecognized       []byte                    `json:"-"`
	XXX_sizecache          int32                     `json:"-"`
}

func (m *SlaOperOperationProfile) Reset()         { *m = SlaOperOperationProfile{} }
func (m *SlaOperOperationProfile) String() string { return proto.CompactTextString(m) }
func (*SlaOperOperationProfile) ProtoMessage()    {}
func (*SlaOperOperationProfile) Descriptor() ([]byte, []int) {
	return fileDescriptor_16b32658a795c339, []int{6}
}

func (m *SlaOperOperationProfile) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SlaOperOperationProfile.Unmarshal(m, b)
}
func (m *SlaOperOperationProfile) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SlaOperOperationProfile.Marshal(b, m, deterministic)
}
func (m *SlaOperOperationProfile) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SlaOperOperationProfile.Merge(m, src)
}
func (m *SlaOperOperationProfile) XXX_Size() int {
	return xxx_messageInfo_SlaOperOperationProfile.Size(m)
}
func (m *SlaOperOperationProfile) XXX_DiscardUnknown() {
	xxx_messageInfo_SlaOperOperationProfile.DiscardUnknown(m)
}

var xxx_messageInfo_SlaOperOperationProfile proto.InternalMessageInfo

func (m *SlaOperOperationProfile) GetProbeType() string {
	if m != nil {
		return m.ProbeType
	}
	return ""
}

func (m *SlaOperOperationProfile) GetPacketsPerBurst() uint32 {
	if m != nil {
		return m.PacketsPerBurst
	}
	return 0
}

func (m *SlaOperOperationProfile) GetInterPacketInterval() uint32 {
	if m != nil {
		return m.InterPacketInterval
	}
	return 0
}

func (m *SlaOperOperationProfile) GetBurstsPerProbe() uint32 {
	if m != nil {
		return m.BurstsPerProbe
	}
	return 0
}

func (m *SlaOperOperationProfile) GetInterBurstInterval() uint32 {
	if m != nil {
		return m.InterBurstInterval
	}
	return 0
}

func (m *SlaOperOperationProfile) GetPacketPadding() *SlaOperPacketPadding {
	if m != nil {
		return m.PacketPadding
	}
	return nil
}

func (m *SlaOperOperationProfile) GetPriority() *SlaOperPacketPriority {
	if m != nil {
		return m.Priority
	}
	return nil
}

func (m *SlaOperOperationProfile) GetOperationMetric() []*SlaOperOperationMetric {
	if m != nil {
		return m.OperationMetric
	}
	return nil
}

func (m *SlaOperOperationProfile) GetOperationSchedule() *SlaOperOperationSchedule {
	if m != nil {
		return m.OperationSchedule
	}
	return nil
}

func (m *SlaOperOperationProfile) GetFlrCalculationInterval() uint32 {
	if m != nil {
		return m.FlrCalculationInterval
	}
	return 0
}

type SlaOperCfgOperationSpecific struct {
	ProfileName          string   `protobuf:"bytes,1,opt,name=profile_name,json=profileName,proto3" json:"profile_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SlaOperCfgOperationSpecific) Reset()         { *m = SlaOperCfgOperationSpecific{} }
func (m *SlaOperCfgOperationSpecific) String() string { return proto.CompactTextString(m) }
func (*SlaOperCfgOperationSpecific) ProtoMessage()    {}
func (*SlaOperCfgOperationSpecific) Descriptor() ([]byte, []int) {
	return fileDescriptor_16b32658a795c339, []int{7}
}

func (m *SlaOperCfgOperationSpecific) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SlaOperCfgOperationSpecific.Unmarshal(m, b)
}
func (m *SlaOperCfgOperationSpecific) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SlaOperCfgOperationSpecific.Marshal(b, m, deterministic)
}
func (m *SlaOperCfgOperationSpecific) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SlaOperCfgOperationSpecific.Merge(m, src)
}
func (m *SlaOperCfgOperationSpecific) XXX_Size() int {
	return xxx_messageInfo_SlaOperCfgOperationSpecific.Size(m)
}
func (m *SlaOperCfgOperationSpecific) XXX_DiscardUnknown() {
	xxx_messageInfo_SlaOperCfgOperationSpecific.DiscardUnknown(m)
}

var xxx_messageInfo_SlaOperCfgOperationSpecific proto.InternalMessageInfo

func (m *SlaOperCfgOperationSpecific) GetProfileName() string {
	if m != nil {
		return m.ProfileName
	}
	return ""
}

type SlaOperOdOperationSpecific struct {
	OndemandOperationId  uint32   `protobuf:"varint,1,opt,name=ondemand_operation_id,json=ondemandOperationId,proto3" json:"ondemand_operation_id,omitempty"`
	ProbeCount           uint32   `protobuf:"varint,2,opt,name=probe_count,json=probeCount,proto3" json:"probe_count,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SlaOperOdOperationSpecific) Reset()         { *m = SlaOperOdOperationSpecific{} }
func (m *SlaOperOdOperationSpecific) String() string { return proto.CompactTextString(m) }
func (*SlaOperOdOperationSpecific) ProtoMessage()    {}
func (*SlaOperOdOperationSpecific) Descriptor() ([]byte, []int) {
	return fileDescriptor_16b32658a795c339, []int{8}
}

func (m *SlaOperOdOperationSpecific) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SlaOperOdOperationSpecific.Unmarshal(m, b)
}
func (m *SlaOperOdOperationSpecific) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SlaOperOdOperationSpecific.Marshal(b, m, deterministic)
}
func (m *SlaOperOdOperationSpecific) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SlaOperOdOperationSpecific.Merge(m, src)
}
func (m *SlaOperOdOperationSpecific) XXX_Size() int {
	return xxx_messageInfo_SlaOperOdOperationSpecific.Size(m)
}
func (m *SlaOperOdOperationSpecific) XXX_DiscardUnknown() {
	xxx_messageInfo_SlaOperOdOperationSpecific.DiscardUnknown(m)
}

var xxx_messageInfo_SlaOperOdOperationSpecific proto.InternalMessageInfo

func (m *SlaOperOdOperationSpecific) GetOndemandOperationId() uint32 {
	if m != nil {
		return m.OndemandOperationId
	}
	return 0
}

func (m *SlaOperOdOperationSpecific) GetProbeCount() uint32 {
	if m != nil {
		return m.ProbeCount
	}
	return 0
}

type SlaOperOperationSpecificOpts struct {
	OperType                   string                       `protobuf:"bytes,1,opt,name=oper_type,json=operType,proto3" json:"oper_type,omitempty"`
	ConfiguredOperationOptions *SlaOperCfgOperationSpecific `protobuf:"bytes,2,opt,name=configured_operation_options,json=configuredOperationOptions,proto3" json:"configured_operation_options,omitempty"`
	OndemandOperationOptions   *SlaOperOdOperationSpecific  `protobuf:"bytes,3,opt,name=ondemand_operation_options,json=ondemandOperationOptions,proto3" json:"ondemand_operation_options,omitempty"`
	XXX_NoUnkeyedLiteral       struct{}                     `json:"-"`
	XXX_unrecognized           []byte                       `json:"-"`
	XXX_sizecache              int32                        `json:"-"`
}

func (m *SlaOperOperationSpecificOpts) Reset()         { *m = SlaOperOperationSpecificOpts{} }
func (m *SlaOperOperationSpecificOpts) String() string { return proto.CompactTextString(m) }
func (*SlaOperOperationSpecificOpts) ProtoMessage()    {}
func (*SlaOperOperationSpecificOpts) Descriptor() ([]byte, []int) {
	return fileDescriptor_16b32658a795c339, []int{9}
}

func (m *SlaOperOperationSpecificOpts) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SlaOperOperationSpecificOpts.Unmarshal(m, b)
}
func (m *SlaOperOperationSpecificOpts) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SlaOperOperationSpecificOpts.Marshal(b, m, deterministic)
}
func (m *SlaOperOperationSpecificOpts) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SlaOperOperationSpecificOpts.Merge(m, src)
}
func (m *SlaOperOperationSpecificOpts) XXX_Size() int {
	return xxx_messageInfo_SlaOperOperationSpecificOpts.Size(m)
}
func (m *SlaOperOperationSpecificOpts) XXX_DiscardUnknown() {
	xxx_messageInfo_SlaOperOperationSpecificOpts.DiscardUnknown(m)
}

var xxx_messageInfo_SlaOperOperationSpecificOpts proto.InternalMessageInfo

func (m *SlaOperOperationSpecificOpts) GetOperType() string {
	if m != nil {
		return m.OperType
	}
	return ""
}

func (m *SlaOperOperationSpecificOpts) GetConfiguredOperationOptions() *SlaOperCfgOperationSpecific {
	if m != nil {
		return m.ConfiguredOperationOptions
	}
	return nil
}

func (m *SlaOperOperationSpecificOpts) GetOndemandOperationOptions() *SlaOperOdOperationSpecific {
	if m != nil {
		return m.OndemandOperationOptions
	}
	return nil
}

type SlaOperOperation struct {
	DisplayShort         string                        `protobuf:"bytes,50,opt,name=display_short,json=displayShort,proto3" json:"display_short,omitempty"`
	DisplayLong          string                        `protobuf:"bytes,51,opt,name=display_long,json=displayLong,proto3" json:"display_long,omitempty"`
	ProfileOptions       *SlaOperOperationProfile      `protobuf:"bytes,52,opt,name=profile_options,json=profileOptions,proto3" json:"profile_options,omitempty"`
	LastRun              uint32                        `protobuf:"varint,53,opt,name=last_run,json=lastRun,proto3" json:"last_run,omitempty"`
	SpecificOptions      *SlaOperOperationSpecificOpts `protobuf:"bytes,54,opt,name=specific_options,json=specificOptions,proto3" json:"specific_options,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                      `json:"-"`
	XXX_unrecognized     []byte                        `json:"-"`
	XXX_sizecache        int32                         `json:"-"`
}

func (m *SlaOperOperation) Reset()         { *m = SlaOperOperation{} }
func (m *SlaOperOperation) String() string { return proto.CompactTextString(m) }
func (*SlaOperOperation) ProtoMessage()    {}
func (*SlaOperOperation) Descriptor() ([]byte, []int) {
	return fileDescriptor_16b32658a795c339, []int{10}
}

func (m *SlaOperOperation) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SlaOperOperation.Unmarshal(m, b)
}
func (m *SlaOperOperation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SlaOperOperation.Marshal(b, m, deterministic)
}
func (m *SlaOperOperation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SlaOperOperation.Merge(m, src)
}
func (m *SlaOperOperation) XXX_Size() int {
	return xxx_messageInfo_SlaOperOperation.Size(m)
}
func (m *SlaOperOperation) XXX_DiscardUnknown() {
	xxx_messageInfo_SlaOperOperation.DiscardUnknown(m)
}

var xxx_messageInfo_SlaOperOperation proto.InternalMessageInfo

func (m *SlaOperOperation) GetDisplayShort() string {
	if m != nil {
		return m.DisplayShort
	}
	return ""
}

func (m *SlaOperOperation) GetDisplayLong() string {
	if m != nil {
		return m.DisplayLong
	}
	return ""
}

func (m *SlaOperOperation) GetProfileOptions() *SlaOperOperationProfile {
	if m != nil {
		return m.ProfileOptions
	}
	return nil
}

func (m *SlaOperOperation) GetLastRun() uint32 {
	if m != nil {
		return m.LastRun
	}
	return 0
}

func (m *SlaOperOperation) GetSpecificOptions() *SlaOperOperationSpecificOpts {
	if m != nil {
		return m.SpecificOptions
	}
	return nil
}

func init() {
	proto.RegisterType((*SlaOperOperation_KEYS)(nil), "cisco_ios_xr_ethernet_cfm_oper.augment.ethernet.on_demand_operations.on_demand_operation.sla_oper_operation_KEYS")
	proto.RegisterType((*SlaOperPacketPadding)(nil), "cisco_ios_xr_ethernet_cfm_oper.augment.ethernet.on_demand_operations.on_demand_operation.sla_oper_packet_padding")
	proto.RegisterType((*SlaOperPacketPriority)(nil), "cisco_ios_xr_ethernet_cfm_oper.augment.ethernet.on_demand_operations.on_demand_operation.sla_oper_packet_priority")
	proto.RegisterType((*SlaCfgMetricType)(nil), "cisco_ios_xr_ethernet_cfm_oper.augment.ethernet.on_demand_operations.on_demand_operation.sla_cfg_metric_type")
	proto.RegisterType((*SlaOperOperationMetric)(nil), "cisco_ios_xr_ethernet_cfm_oper.augment.ethernet.on_demand_operations.on_demand_operation.sla_oper_operation_metric")
	proto.RegisterType((*SlaOperOperationSchedule)(nil), "cisco_ios_xr_ethernet_cfm_oper.augment.ethernet.on_demand_operations.on_demand_operation.sla_oper_operation_schedule")
	proto.RegisterType((*SlaOperOperationProfile)(nil), "cisco_ios_xr_ethernet_cfm_oper.augment.ethernet.on_demand_operations.on_demand_operation.sla_oper_operation_profile")
	proto.RegisterType((*SlaOperCfgOperationSpecific)(nil), "cisco_ios_xr_ethernet_cfm_oper.augment.ethernet.on_demand_operations.on_demand_operation.sla_oper_cfg_operation_specific")
	proto.RegisterType((*SlaOperOdOperationSpecific)(nil), "cisco_ios_xr_ethernet_cfm_oper.augment.ethernet.on_demand_operations.on_demand_operation.sla_oper_od_operation_specific")
	proto.RegisterType((*SlaOperOperationSpecificOpts)(nil), "cisco_ios_xr_ethernet_cfm_oper.augment.ethernet.on_demand_operations.on_demand_operation.sla_oper_operation_specific_opts")
	proto.RegisterType((*SlaOperOperation)(nil), "cisco_ios_xr_ethernet_cfm_oper.augment.ethernet.on_demand_operations.on_demand_operation.sla_oper_operation")
}

func init() { proto.RegisterFile("sla_oper_operation.proto", fileDescriptor_16b32658a795c339) }

var fileDescriptor_16b32658a795c339 = []byte{
	// 1054 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x57, 0xcb, 0x6e, 0xe4, 0x44,
	0x17, 0x96, 0xff, 0xfe, 0x73, 0xe9, 0xd3, 0xe9, 0x5c, 0x2a, 0x13, 0xe2, 0x49, 0x80, 0x09, 0x8d,
	0x80, 0x08, 0xa4, 0x16, 0xea, 0x61, 0x46, 0x2c, 0xd8, 0xcc, 0x64, 0x90, 0x18, 0x71, 0x99, 0xc6,
	0x19, 0x04, 0xac, 0x4a, 0x8e, 0x5d, 0xdd, 0x5d, 0xc2, 0x2e, 0x9b, 0xaa, 0xf2, 0x90, 0xe4, 0x21,
	0x58, 0xb0, 0x62, 0x03, 0x2b, 0xe6, 0x15, 0xb2, 0x01, 0x89, 0x3d, 0x4f, 0xc2, 0x63, 0xa0, 0x3a,
	0x55, 0x65, 0x3b, 0x89, 0xb7, 0xd3, 0x9b, 0xa8, 0xeb, 0x3b, 0xc7, 0xe7, 0x7c, 0xe7, 0x5a, 0x15,
	0x08, 0x55, 0x16, 0xd3, 0xa2, 0x64, 0x12, 0xff, 0xc4, 0x9a, 0x17, 0x62, 0x5c, 0xca, 0x42, 0x17,
	0xe4, 0xbb, 0x84, 0xab, 0xa4, 0xa0, 0xbc, 0x50, 0xf4, 0x5c, 0x52, 0xa6, 0x17, 0x4c, 0x0a, 0xa6,
	0x69, 0x32, 0xcb, 0x51, 0x75, 0x1c, 0x57, 0xf3, 0x9c, 0x09, 0x3d, 0xf6, 0x92, 0x71, 0x21, 0x68,
	0xca, 0xf2, 0x58, 0xa4, 0x8d, 0x29, 0xd5, 0x05, 0x8e, 0xfe, 0x0a, 0x60, 0xff, 0xb6, 0x5b, 0xfa,
	0xf9, 0xa7, 0xdf, 0x9f, 0x92, 0xb7, 0x60, 0xa3, 0x41, 0x78, 0x1a, 0x06, 0x47, 0xc1, 0xf1, 0x30,
	0x1a, 0xd4, 0xd8, 0xd3, 0x94, 0xdc, 0x83, 0x41, 0x5a, 0xe4, 0x31, 0x17, 0x54, 0xc4, 0x39, 0x0b,
	0xff, 0x77, 0x14, 0x1c, 0xf7, 0x23, 0xb0, 0xd0, 0x57, 0x71, 0xce, 0xc8, 0x3b, 0xb0, 0xc9, 0x85,
	0x66, 0x72, 0x16, 0x27, 0xcc, 0xea, 0xf4, 0x50, 0x67, 0x58, 0xa3, 0xa8, 0xb6, 0x07, 0xab, 0x39,
	0x2b, 0x8d, 0x93, 0xff, 0xa3, 0x93, 0x95, 0x9c, 0x95, 0xd6, 0x7c, 0x1e, 0x27, 0x34, 0x4e, 0x53,
	0xc9, 0x94, 0x0a, 0x57, 0xac, 0xf9, 0x3c, 0x4e, 0x1e, 0x59, 0x64, 0x74, 0xd5, 0xa6, 0x5f, 0xc6,
	0xc9, 0x0f, 0x4c, 0xd3, 0x32, 0x4e, 0x53, 0x2e, 0xe6, 0xe4, 0x5d, 0xd8, 0x6a, 0x10, 0xaa, 0xf8,
	0x25, 0x73, 0x11, 0x0c, 0x2d, 0x3c, 0x8d, 0xd3, 0x53, 0x7e, 0xc9, 0xc8, 0x03, 0xd8, 0xd7, 0x4c,
	0x19, 0x2d, 0xad, 0x99, 0x14, 0x56, 0x3b, 0x59, 0xb0, 0x3a, 0x9e, 0x3b, 0x46, 0x3c, 0xb5, 0x52,
	0xf3, 0x11, 0xca, 0xc8, 0x27, 0x70, 0x78, 0xeb, 0xb3, 0x05, 0x3b, 0xa7, 0x4a, 0x4b, 0x2e, 0xe6,
	0x18, 0xe6, 0x30, 0xda, 0xbf, 0xfe, 0xe9, 0x67, 0xec, 0xfc, 0x14, 0xc5, 0xa3, 0xaf, 0x5b, 0xd5,
	0xf6, 0x2c, 0x25, 0x2f, 0x24, 0xd7, 0x17, 0xe4, 0x6d, 0x18, 0xfa, 0xdf, 0x54, 0x5f, 0x94, 0x96,
	0x76, 0x3f, 0xda, 0xf0, 0xe0, 0xf3, 0x8b, 0x92, 0x91, 0x6d, 0xe8, 0x25, 0x85, 0x42, 0x86, 0xc3,
	0xc8, 0xfc, 0x1c, 0xfd, 0x1b, 0xc0, 0xae, 0xb1, 0x99, 0xcc, 0xe6, 0x34, 0x67, 0x5a, 0xf2, 0x04,
	0xbf, 0xc6, 0x24, 0x36, 0x47, 0x67, 0x0c, 0x2c, 0x84, 0xa6, 0xde, 0x00, 0x38, 0xe3, 0x42, 0xd1,
	0xa4, 0xa8, 0x84, 0x76, 0x16, 0xfb, 0x06, 0x39, 0x31, 0x40, 0x2d, 0xfe, 0x89, 0xa7, 0x7a, 0xe1,
	0xe2, 0x42, 0xf1, 0xb7, 0x06, 0x30, 0xe6, 0xcf, 0x2a, 0x0c, 0x00, 0x53, 0x6c, 0xeb, 0x07, 0x16,
	0xc2, 0xfc, 0x1e, 0xc3, 0x76, 0x4b, 0x81, 0x56, 0x82, 0x6b, 0x57, 0xc9, 0xcd, 0x46, 0xeb, 0x1b,
	0xc1, 0x35, 0x79, 0x0f, 0xb6, 0x2c, 0xa2, 0x68, 0x2c, 0x93, 0x05, 0x7f, 0xc1, 0xc2, 0x55, 0x34,
	0xe7, 0x14, 0xd5, 0x23, 0x8b, 0x9a, 0x50, 0xef, 0x76, 0x74, 0xad, 0x8d, 0x89, 0xfc, 0x12, 0xc0,
	0xd0, 0x45, 0x9c, 0x14, 0x62, 0xc6, 0xe7, 0x18, 0xf3, 0x60, 0x92, 0x8f, 0x5f, 0xd5, 0x18, 0x8d,
	0x3b, 0xf2, 0x1e, 0x6d, 0xd8, 0xc3, 0x09, 0x52, 0x20, 0x0f, 0x61, 0x3f, 0xa9, 0xa4, 0x64, 0x42,
	0xd3, 0x9b, 0x31, 0xda, 0x8c, 0xef, 0x39, 0xf1, 0xe3, 0xeb, 0xa1, 0xfe, 0x13, 0xc0, 0x61, 0x47,
	0xa8, 0xa6, 0x41, 0xd3, 0x2a, 0xc3, 0xe2, 0x29, 0x1d, 0x4b, 0x4d, 0x35, 0xcf, 0x7d, 0x83, 0xf7,
	0x11, 0x79, 0xce, 0x73, 0x46, 0x26, 0xb0, 0xd7, 0x88, 0x5d, 0x3a, 0x2a, 0xc9, 0x52, 0x74, 0xba,
	0x1e, 0xed, 0xd6, 0x9a, 0x27, 0xb5, 0x88, 0x7c, 0x00, 0x3b, 0xde, 0x3c, 0x4d, 0x2b, 0xeb, 0xd0,
	0xd5, 0x7d, 0xdb, 0x0b, 0x9e, 0x38, 0xfc, 0x9a, 0x32, 0xce, 0xf4, 0x8b, 0x38, 0x73, 0x4d, 0x50,
	0x2b, 0x3f, 0x75, 0xf8, 0xe8, 0xe5, 0x1a, 0x1c, 0x74, 0x04, 0x53, 0xca, 0x62, 0xc6, 0x6d, 0x2c,
	0xa5, 0x2c, 0xce, 0x58, 0xbb, 0x51, 0xfb, 0x88, 0x60, 0x9f, 0xbe, 0x0f, 0x3b, 0x76, 0x54, 0x14,
	0x35, 0xdf, 0x9f, 0x55, 0x52, 0xf9, 0x76, 0x75, 0x93, 0xae, 0xa6, 0x4c, 0x3e, 0x36, 0xb0, 0x89,
	0x1b, 0xd9, 0xf8, 0xe1, 0xaa, 0xa9, 0xd9, 0x38, 0x76, 0xf1, 0x3c, 0x45, 0x99, 0x67, 0x67, 0x1b,
	0x55, 0x2a, 0x67, 0x1e, 0xfd, 0xba, 0x48, 0x36, 0x2d, 0x3e, 0x65, 0x72, 0x6a, 0x50, 0xf2, 0x21,
	0xdc, 0xb1, 0xd6, 0x11, 0x6f, 0x8c, 0xaf, 0xa0, 0x36, 0xc1, 0x33, 0xf2, 0xa8, 0x6d, 0xff, 0x1a,
	0xc0, 0xe6, 0xf5, 0xfd, 0x84, 0xad, 0x3d, 0x98, 0xfc, 0xf8, 0x6a, 0x9b, 0xb2, 0x63, 0x31, 0xb6,
	0xf6, 0x1f, 0xee, 0xc9, 0x9f, 0x03, 0x58, 0xf7, 0xab, 0x25, 0x5c, 0x43, 0x52, 0x72, 0x89, 0xa4,
	0x9c, 0xe7, 0xa8, 0xe6, 0x40, 0x7e, 0x0f, 0x60, 0xfb, 0xe6, 0x50, 0x87, 0xeb, 0x47, 0xbd, 0xe3,
	0xc1, 0x44, 0x2d, 0x81, 0xd8, 0x4d, 0xd7, 0xd1, 0x56, 0x8d, 0x7c, 0x69, 0x17, 0xcc, 0x1f, 0x01,
	0x90, 0xdb, 0xa3, 0x18, 0xf6, 0x31, 0x77, 0xd5, 0x52, 0x29, 0x7a, 0xe7, 0xd1, 0x4e, 0x8d, 0x9d,
	0xfa, 0xd5, 0xf0, 0x31, 0x84, 0xb3, 0x4c, 0xd2, 0x24, 0xce, 0x92, 0x2a, 0x73, 0xb7, 0xb8, 0xef,
	0x54, 0xc0, 0x4e, 0x7d, 0x6d, 0x96, 0xc9, 0x93, 0x46, 0x5c, 0xcf, 0xe9, 0x13, 0xb8, 0x57, 0xfb,
	0x32, 0x6b, 0xad, 0xe5, 0xaf, 0x64, 0x09, 0x9f, 0xf1, 0xc4, 0x3c, 0x0e, 0xdc, 0xd8, 0xda, 0x6b,
	0xdd, 0x4e, 0xeb, 0xc0, 0x61, 0xe6, 0x52, 0x1f, 0x55, 0xf0, 0x66, 0xc3, 0x38, 0xed, 0x32, 0x32,
	0x81, 0xbd, 0x42, 0xdc, 0x0c, 0xb3, 0x79, 0x6a, 0xec, 0x7a, 0xe1, 0xb3, 0xeb, 0x4f, 0x0e, 0xbb,
	0x24, 0xda, 0xd7, 0x95, 0xdd, 0x1b, 0x78, 0x5f, 0x8d, 0xae, 0x7a, 0x70, 0xd4, 0x95, 0x29, 0xe7,
	0x94, 0x16, 0xa5, 0x56, 0xe4, 0x10, 0xfa, 0x28, 0x6f, 0x6d, 0x9a, 0x75, 0x03, 0xe0, 0xa2, 0xf9,
	0x33, 0x80, 0xd7, 0x9b, 0x55, 0xd9, 0xb2, 0x51, 0x94, 0x58, 0x1c, 0x74, 0x3a, 0x98, 0x5c, 0x2c,
	0xa1, 0xd2, 0xdd, 0xd9, 0x8f, 0x0e, 0x1a, 0x7a, 0x75, 0x6e, 0x9e, 0x59, 0x72, 0xe4, 0x2a, 0x80,
	0x83, 0x8e, 0xac, 0x7a, 0xee, 0x3d, 0xe4, 0x7e, 0xbe, 0x8c, 0x2e, 0xed, 0xaa, 0x79, 0x14, 0xde,
	0x2a, 0xaa, 0x23, 0x3e, 0xfa, 0xbb, 0x07, 0xe4, 0x76, 0xe1, 0xcc, 0x73, 0x28, 0xe5, 0xaa, 0xcc,
	0xe2, 0x0b, 0xaa, 0x16, 0x85, 0xd4, 0xe1, 0xc4, 0x3e, 0x87, 0x1c, 0x78, 0x6a, 0x30, 0xd3, 0x8e,
	0x5e, 0x29, 0x2b, 0xc4, 0x3c, 0xbc, 0x6f, 0xdb, 0xd1, 0x61, 0x5f, 0x14, 0x62, 0x4e, 0x7e, 0x0b,
	0x60, 0xcb, 0xb7, 0xac, 0x4f, 0xc6, 0x47, 0x98, 0x0c, 0xbd, 0xd4, 0x91, 0x75, 0x1c, 0xa2, 0x4d,
	0xf7, 0xc3, 0xd7, 0xed, 0x2e, 0xac, 0x67, 0xb1, 0xd2, 0x54, 0x56, 0x22, 0x7c, 0x80, 0x5d, 0xbd,
	0x66, 0xce, 0x51, 0x25, 0xc8, 0xcb, 0x00, 0xb6, 0xdb, 0xfd, 0x8b, 0xdc, 0x1f, 0x22, 0xf7, 0xcb,
	0xe5, 0xae, 0x9b, 0xf6, 0x10, 0x45, 0x5b, 0xfe, 0xe8, 0x42, 0x38, 0x5b, 0xc5, 0x7f, 0x57, 0xee,
	0xff, 0x17, 0x00, 0x00, 0xff, 0xff, 0xe7, 0x4d, 0xae, 0xb1, 0xca, 0x0c, 0x00, 0x00,
}
