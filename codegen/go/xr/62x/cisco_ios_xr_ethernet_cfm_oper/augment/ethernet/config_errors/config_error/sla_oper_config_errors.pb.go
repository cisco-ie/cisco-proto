/*
Copyright 2019 Cisco Systems

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: sla_oper_config_errors.proto

package cisco_ios_xr_ethernet_cfm_oper_augment_ethernet_config_errors_config_error

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type SlaOperConfigErrors_KEYS struct {
	ProfileName          string   `protobuf:"bytes,1,opt,name=profile_name,json=profileName,proto3" json:"profile_name,omitempty"`
	DomainName           string   `protobuf:"bytes,2,opt,name=domain_name,json=domainName,proto3" json:"domain_name,omitempty"`
	InterfaceName        string   `protobuf:"bytes,3,opt,name=interface_name,json=interfaceName,proto3" json:"interface_name,omitempty"`
	MepId                uint32   `protobuf:"varint,4,opt,name=mep_id,json=mepId,proto3" json:"mep_id,omitempty"`
	MacAddress           string   `protobuf:"bytes,5,opt,name=mac_address,json=macAddress,proto3" json:"mac_address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SlaOperConfigErrors_KEYS) Reset()         { *m = SlaOperConfigErrors_KEYS{} }
func (m *SlaOperConfigErrors_KEYS) String() string { return proto.CompactTextString(m) }
func (*SlaOperConfigErrors_KEYS) ProtoMessage()    {}
func (*SlaOperConfigErrors_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_492115eac75ea94c, []int{0}
}

func (m *SlaOperConfigErrors_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SlaOperConfigErrors_KEYS.Unmarshal(m, b)
}
func (m *SlaOperConfigErrors_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SlaOperConfigErrors_KEYS.Marshal(b, m, deterministic)
}
func (m *SlaOperConfigErrors_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SlaOperConfigErrors_KEYS.Merge(m, src)
}
func (m *SlaOperConfigErrors_KEYS) XXX_Size() int {
	return xxx_messageInfo_SlaOperConfigErrors_KEYS.Size(m)
}
func (m *SlaOperConfigErrors_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_SlaOperConfigErrors_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_SlaOperConfigErrors_KEYS proto.InternalMessageInfo

func (m *SlaOperConfigErrors_KEYS) GetProfileName() string {
	if m != nil {
		return m.ProfileName
	}
	return ""
}

func (m *SlaOperConfigErrors_KEYS) GetDomainName() string {
	if m != nil {
		return m.DomainName
	}
	return ""
}

func (m *SlaOperConfigErrors_KEYS) GetInterfaceName() string {
	if m != nil {
		return m.InterfaceName
	}
	return ""
}

func (m *SlaOperConfigErrors_KEYS) GetMepId() uint32 {
	if m != nil {
		return m.MepId
	}
	return 0
}

func (m *SlaOperConfigErrors_KEYS) GetMacAddress() string {
	if m != nil {
		return m.MacAddress
	}
	return ""
}

type SlaOperConfigErrors struct {
	ProfileNameXr                 string   `protobuf:"bytes,50,opt,name=profile_name_xr,json=profileNameXr,proto3" json:"profile_name_xr,omitempty"`
	DisplayShort                  string   `protobuf:"bytes,51,opt,name=display_short,json=displayShort,proto3" json:"display_short,omitempty"`
	RtDelayInconsistent           bool     `protobuf:"varint,52,opt,name=rt_delay_inconsistent,json=rtDelayInconsistent,proto3" json:"rt_delay_inconsistent,omitempty"`
	OwDelaySdInconsistent         bool     `protobuf:"varint,53,opt,name=ow_delay_sd_inconsistent,json=owDelaySdInconsistent,proto3" json:"ow_delay_sd_inconsistent,omitempty"`
	OwDelayDsInconsistent         bool     `protobuf:"varint,54,opt,name=ow_delay_ds_inconsistent,json=owDelayDsInconsistent,proto3" json:"ow_delay_ds_inconsistent,omitempty"`
	RtJitterInconsistent          bool     `protobuf:"varint,55,opt,name=rt_jitter_inconsistent,json=rtJitterInconsistent,proto3" json:"rt_jitter_inconsistent,omitempty"`
	OwJitterSdInconsistent        bool     `protobuf:"varint,56,opt,name=ow_jitter_sd_inconsistent,json=owJitterSdInconsistent,proto3" json:"ow_jitter_sd_inconsistent,omitempty"`
	OwJitterDsInconsistent        bool     `protobuf:"varint,57,opt,name=ow_jitter_ds_inconsistent,json=owJitterDsInconsistent,proto3" json:"ow_jitter_ds_inconsistent,omitempty"`
	OwLossSdInconsistent          bool     `protobuf:"varint,58,opt,name=ow_loss_sd_inconsistent,json=owLossSdInconsistent,proto3" json:"ow_loss_sd_inconsistent,omitempty"`
	OwLossDsInconsistent          bool     `protobuf:"varint,59,opt,name=ow_loss_ds_inconsistent,json=owLossDsInconsistent,proto3" json:"ow_loss_ds_inconsistent,omitempty"`
	PacketPadInconsistent         bool     `protobuf:"varint,60,opt,name=packet_pad_inconsistent,json=packetPadInconsistent,proto3" json:"packet_pad_inconsistent,omitempty"`
	PacketRandPadInconsistent     bool     `protobuf:"varint,61,opt,name=packet_rand_pad_inconsistent,json=packetRandPadInconsistent,proto3" json:"packet_rand_pad_inconsistent,omitempty"`
	MinPacketIntervalInconsistent bool     `protobuf:"varint,62,opt,name=min_packet_interval_inconsistent,json=minPacketIntervalInconsistent,proto3" json:"min_packet_interval_inconsistent,omitempty"`
	PriorityInconsistent          bool     `protobuf:"varint,63,opt,name=priority_inconsistent,json=priorityInconsistent,proto3" json:"priority_inconsistent,omitempty"`
	PacketTypeInconsistent        bool     `protobuf:"varint,64,opt,name=packet_type_inconsistent,json=packetTypeInconsistent,proto3" json:"packet_type_inconsistent,omitempty"`
	ProfileDoesntExist            bool     `protobuf:"varint,65,opt,name=profile_doesnt_exist,json=profileDoesntExist,proto3" json:"profile_doesnt_exist,omitempty"`
	SyntheticLossNotSupported     bool     `protobuf:"varint,66,opt,name=synthetic_loss_not_supported,json=syntheticLossNotSupported,proto3" json:"synthetic_loss_not_supported,omitempty"`
	ProbeTooBig                   bool     `protobuf:"varint,67,opt,name=probe_too_big,json=probeTooBig,proto3" json:"probe_too_big,omitempty"`
	ErrorString                   []string `protobuf:"bytes,68,rep,name=error_string,json=errorString,proto3" json:"error_string,omitempty"`
	XXX_NoUnkeyedLiteral          struct{} `json:"-"`
	XXX_unrecognized              []byte   `json:"-"`
	XXX_sizecache                 int32    `json:"-"`
}

func (m *SlaOperConfigErrors) Reset()         { *m = SlaOperConfigErrors{} }
func (m *SlaOperConfigErrors) String() string { return proto.CompactTextString(m) }
func (*SlaOperConfigErrors) ProtoMessage()    {}
func (*SlaOperConfigErrors) Descriptor() ([]byte, []int) {
	return fileDescriptor_492115eac75ea94c, []int{1}
}

func (m *SlaOperConfigErrors) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SlaOperConfigErrors.Unmarshal(m, b)
}
func (m *SlaOperConfigErrors) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SlaOperConfigErrors.Marshal(b, m, deterministic)
}
func (m *SlaOperConfigErrors) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SlaOperConfigErrors.Merge(m, src)
}
func (m *SlaOperConfigErrors) XXX_Size() int {
	return xxx_messageInfo_SlaOperConfigErrors.Size(m)
}
func (m *SlaOperConfigErrors) XXX_DiscardUnknown() {
	xxx_messageInfo_SlaOperConfigErrors.DiscardUnknown(m)
}

var xxx_messageInfo_SlaOperConfigErrors proto.InternalMessageInfo

func (m *SlaOperConfigErrors) GetProfileNameXr() string {
	if m != nil {
		return m.ProfileNameXr
	}
	return ""
}

func (m *SlaOperConfigErrors) GetDisplayShort() string {
	if m != nil {
		return m.DisplayShort
	}
	return ""
}

func (m *SlaOperConfigErrors) GetRtDelayInconsistent() bool {
	if m != nil {
		return m.RtDelayInconsistent
	}
	return false
}

func (m *SlaOperConfigErrors) GetOwDelaySdInconsistent() bool {
	if m != nil {
		return m.OwDelaySdInconsistent
	}
	return false
}

func (m *SlaOperConfigErrors) GetOwDelayDsInconsistent() bool {
	if m != nil {
		return m.OwDelayDsInconsistent
	}
	return false
}

func (m *SlaOperConfigErrors) GetRtJitterInconsistent() bool {
	if m != nil {
		return m.RtJitterInconsistent
	}
	return false
}

func (m *SlaOperConfigErrors) GetOwJitterSdInconsistent() bool {
	if m != nil {
		return m.OwJitterSdInconsistent
	}
	return false
}

func (m *SlaOperConfigErrors) GetOwJitterDsInconsistent() bool {
	if m != nil {
		return m.OwJitterDsInconsistent
	}
	return false
}

func (m *SlaOperConfigErrors) GetOwLossSdInconsistent() bool {
	if m != nil {
		return m.OwLossSdInconsistent
	}
	return false
}

func (m *SlaOperConfigErrors) GetOwLossDsInconsistent() bool {
	if m != nil {
		return m.OwLossDsInconsistent
	}
	return false
}

func (m *SlaOperConfigErrors) GetPacketPadInconsistent() bool {
	if m != nil {
		return m.PacketPadInconsistent
	}
	return false
}

func (m *SlaOperConfigErrors) GetPacketRandPadInconsistent() bool {
	if m != nil {
		return m.PacketRandPadInconsistent
	}
	return false
}

func (m *SlaOperConfigErrors) GetMinPacketIntervalInconsistent() bool {
	if m != nil {
		return m.MinPacketIntervalInconsistent
	}
	return false
}

func (m *SlaOperConfigErrors) GetPriorityInconsistent() bool {
	if m != nil {
		return m.PriorityInconsistent
	}
	return false
}

func (m *SlaOperConfigErrors) GetPacketTypeInconsistent() bool {
	if m != nil {
		return m.PacketTypeInconsistent
	}
	return false
}

func (m *SlaOperConfigErrors) GetProfileDoesntExist() bool {
	if m != nil {
		return m.ProfileDoesntExist
	}
	return false
}

func (m *SlaOperConfigErrors) GetSyntheticLossNotSupported() bool {
	if m != nil {
		return m.SyntheticLossNotSupported
	}
	return false
}

func (m *SlaOperConfigErrors) GetProbeTooBig() bool {
	if m != nil {
		return m.ProbeTooBig
	}
	return false
}

func (m *SlaOperConfigErrors) GetErrorString() []string {
	if m != nil {
		return m.ErrorString
	}
	return nil
}

func init() {
	proto.RegisterType((*SlaOperConfigErrors_KEYS)(nil), "cisco_ios_xr_ethernet_cfm_oper.augment.ethernet.config_errors.config_error.sla_oper_config_errors_KEYS")
	proto.RegisterType((*SlaOperConfigErrors)(nil), "cisco_ios_xr_ethernet_cfm_oper.augment.ethernet.config_errors.config_error.sla_oper_config_errors")
}

func init() { proto.RegisterFile("sla_oper_config_errors.proto", fileDescriptor_492115eac75ea94c) }

var fileDescriptor_492115eac75ea94c = []byte{
	// 608 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x94, 0x5d, 0x4f, 0x14, 0x3f,
	0x14, 0xc6, 0xb3, 0x7f, 0xfe, 0x10, 0x2c, 0xa0, 0xc9, 0xc8, 0xc2, 0x10, 0x31, 0xae, 0x18, 0x0d,
	0x57, 0x1b, 0xc3, 0x3b, 0xbe, 0x21, 0xb8, 0xc4, 0x80, 0x86, 0x90, 0x5d, 0x2e, 0xf4, 0xaa, 0x29,
	0xd3, 0xb3, 0x4b, 0x75, 0xa7, 0xa7, 0x69, 0x0f, 0x2e, 0xfb, 0x2d, 0xfc, 0x48, 0x7e, 0x34, 0x33,
	0xed, 0x2c, 0x99, 0x0e, 0x78, 0x39, 0xe7, 0x79, 0x7e, 0xe7, 0x39, 0x6d, 0xa7, 0x65, 0xab, 0x6e,
	0x28, 0x38, 0x1a, 0xb0, 0x3c, 0x43, 0xdd, 0x57, 0x03, 0x0e, 0xd6, 0xa2, 0x75, 0x6d, 0x63, 0x91,
	0x30, 0x39, 0xcd, 0x94, 0xcb, 0x90, 0x2b, 0x74, 0xfc, 0xc6, 0x72, 0xa0, 0x2b, 0xb0, 0x1a, 0x88,
	0x67, 0xfd, 0xdc, 0x33, 0x6d, 0x71, 0x3d, 0xc8, 0x41, 0x53, 0x7b, 0xa2, 0xb4, 0xe3, 0x26, 0xd5,
	0xaf, 0xb5, 0x3f, 0x0d, 0xf6, 0xe4, 0xfe, 0x30, 0xfe, 0xe5, 0xf8, 0x7b, 0x2f, 0x79, 0xce, 0xe6,
	0x8d, 0xc5, 0xbe, 0x1a, 0x02, 0xd7, 0x22, 0x87, 0xb4, 0xd1, 0x6a, 0xac, 0x3f, 0xe8, 0xce, 0x95,
	0xb5, 0x33, 0x91, 0x43, 0xf2, 0x8c, 0xcd, 0x49, 0xcc, 0x85, 0xd2, 0xc1, 0xf1, 0x9f, 0x77, 0xb0,
	0x50, 0xf2, 0x86, 0x97, 0xec, 0xa1, 0xd2, 0x04, 0xb6, 0x2f, 0xb2, 0xb2, 0xcb, 0x94, 0xf7, 0x2c,
	0xdc, 0x56, 0xbd, 0xad, 0xc9, 0x66, 0x72, 0x30, 0x5c, 0xc9, 0xf4, 0xff, 0x56, 0x63, 0x7d, 0xa1,
	0x3b, 0x9d, 0x83, 0x39, 0x91, 0x45, 0xfb, 0x5c, 0x64, 0x5c, 0x48, 0x69, 0xc1, 0xb9, 0x74, 0x3a,
	0xb4, 0xcf, 0x45, 0x76, 0x18, 0x2a, 0x6b, 0xbf, 0x67, 0xd9, 0xd2, 0xfd, 0x4b, 0x48, 0x5e, 0xb1,
	0x47, 0xd5, 0xe9, 0xf9, 0x8d, 0x4d, 0x37, 0x42, 0x74, 0x65, 0x01, 0xdf, 0x6c, 0xf2, 0x82, 0x2d,
	0x48, 0xe5, 0xcc, 0x50, 0x8c, 0xb9, 0xbb, 0x42, 0x4b, 0xe9, 0xa6, 0x77, 0xcd, 0x97, 0xc5, 0x5e,
	0x51, 0x4b, 0x36, 0x58, 0xd3, 0x12, 0x97, 0x50, 0xb8, 0x94, 0xce, 0x50, 0x3b, 0xe5, 0x08, 0x34,
	0xa5, 0x5b, 0xad, 0xc6, 0xfa, 0x6c, 0xf7, 0xb1, 0xa5, 0x4e, 0xa1, 0x9d, 0x54, 0xa4, 0x64, 0x97,
	0xa5, 0x38, 0x2a, 0x19, 0x27, 0x63, 0x6c, 0xdb, 0x63, 0x4d, 0x1c, 0x79, 0xac, 0x27, 0xff, 0x09,
	0x4a, 0x17, 0x83, 0x3b, 0x11, 0xd8, 0x71, 0x11, 0xb8, 0xc5, 0x96, 0x2c, 0xf1, 0x1f, 0x8a, 0x08,
	0x6c, 0x8c, 0xed, 0x7a, 0x6c, 0xd1, 0xd2, 0xa9, 0x17, 0x23, 0x6a, 0x9f, 0xad, 0xe0, 0x68, 0x42,
	0xd5, 0x07, 0xdd, 0xf3, 0xe0, 0x12, 0x8e, 0x02, 0x58, 0x9b, 0x34, 0x42, 0xeb, 0xa3, 0xee, 0xc7,
	0x68, 0x6d, 0xd6, 0x6d, 0xb6, 0x8c, 0x23, 0x3e, 0x44, 0xe7, 0xee, 0x64, 0xbe, 0x09, 0xc3, 0xe2,
	0xe8, 0x2b, 0x3a, 0x57, 0x4b, 0xac, 0x60, 0xf5, 0xbc, 0xb7, 0x55, 0xac, 0x96, 0xb6, 0xc3, 0x96,
	0x8d, 0xc8, 0x7e, 0x02, 0x71, 0x23, 0x6a, 0x69, 0xef, 0xc2, 0x8e, 0x06, 0xf9, 0x5c, 0xc4, 0x71,
	0x07, 0x6c, 0xb5, 0xe4, 0xac, 0xd0, 0xf2, 0x2e, 0xfc, 0xde, 0xc3, 0x2b, 0xc1, 0xd3, 0x15, 0x5a,
	0xd6, 0x1b, 0x7c, 0x66, 0xad, 0x5c, 0x69, 0x5e, 0x36, 0xf1, 0x3f, 0xfd, 0x2f, 0x31, 0x8c, 0x9b,
	0x7c, 0xf0, 0x4d, 0x9e, 0xe6, 0x4a, 0x9f, 0x7b, 0xdb, 0x49, 0xe9, 0x8a, 0x1a, 0x6d, 0xb2, 0xa6,
	0xb1, 0x0a, 0xad, 0xa2, 0xda, 0x1f, 0x78, 0x10, 0x96, 0x3d, 0x11, 0x23, 0x68, 0x8f, 0xa5, 0x65,
	0x32, 0x8d, 0x0d, 0xc4, 0xdc, 0xc7, 0x70, 0x3c, 0x41, 0xbf, 0x18, 0x1b, 0x88, 0xc8, 0xd7, 0x6c,
	0x71, 0x72, 0x7b, 0x24, 0x82, 0xd3, 0xc4, 0xe1, 0x46, 0x39, 0x4a, 0x0f, 0x3d, 0x95, 0x94, 0x5a,
	0xc7, 0x4b, 0xc7, 0x85, 0x52, 0x6c, 0x95, 0x1b, 0x6b, 0xba, 0x02, 0x52, 0x59, 0x38, 0x20, 0x8d,
	0xc4, 0xdd, 0xb5, 0x31, 0x68, 0x09, 0x64, 0x7a, 0x14, 0xb6, 0xea, 0xd6, 0x53, 0x9c, 0xd2, 0x19,
	0x52, 0x6f, 0x62, 0x48, 0xd6, 0x58, 0x71, 0x33, 0x2f, 0x81, 0x13, 0x22, 0xbf, 0x54, 0x83, 0xf4,
	0x93, 0x27, 0xe6, 0x7c, 0xf1, 0x02, 0xf1, 0x48, 0x0d, 0x8a, 0x27, 0xc9, 0x5f, 0x6f, 0xee, 0xc8,
	0x2a, 0x3d, 0x48, 0x3b, 0xad, 0xa9, 0xe2, 0x49, 0xf2, 0xb5, 0x9e, 0x2f, 0x5d, 0xce, 0xf8, 0x87,
	0x72, 0xf3, 0x6f, 0x00, 0x00, 0x00, 0xff, 0xff, 0xd2, 0x3b, 0x4f, 0x0c, 0x48, 0x05, 0x00, 0x00,
}
