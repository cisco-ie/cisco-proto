/*
Copyright 2019 Cisco Systems

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: cfm_pm_cldb_bag.proto

package cisco_ios_xr_ethernet_cfm_oper_cfm_nodes_node_ccm_learning_databases_ccm_learning_database

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type CfmPmCldbBag_KEYS struct {
	Node                 string   `protobuf:"bytes,1,opt,name=node,proto3" json:"node,omitempty"`
	Domain               string   `protobuf:"bytes,2,opt,name=domain,proto3" json:"domain,omitempty"`
	Service              string   `protobuf:"bytes,3,opt,name=service,proto3" json:"service,omitempty"`
	MacAddress           string   `protobuf:"bytes,4,opt,name=mac_address,json=macAddress,proto3" json:"mac_address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CfmPmCldbBag_KEYS) Reset()         { *m = CfmPmCldbBag_KEYS{} }
func (m *CfmPmCldbBag_KEYS) String() string { return proto.CompactTextString(m) }
func (*CfmPmCldbBag_KEYS) ProtoMessage()    {}
func (*CfmPmCldbBag_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_7c2f54c4b58f996e, []int{0}
}

func (m *CfmPmCldbBag_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CfmPmCldbBag_KEYS.Unmarshal(m, b)
}
func (m *CfmPmCldbBag_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CfmPmCldbBag_KEYS.Marshal(b, m, deterministic)
}
func (m *CfmPmCldbBag_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CfmPmCldbBag_KEYS.Merge(m, src)
}
func (m *CfmPmCldbBag_KEYS) XXX_Size() int {
	return xxx_messageInfo_CfmPmCldbBag_KEYS.Size(m)
}
func (m *CfmPmCldbBag_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_CfmPmCldbBag_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_CfmPmCldbBag_KEYS proto.InternalMessageInfo

func (m *CfmPmCldbBag_KEYS) GetNode() string {
	if m != nil {
		return m.Node
	}
	return ""
}

func (m *CfmPmCldbBag_KEYS) GetDomain() string {
	if m != nil {
		return m.Domain
	}
	return ""
}

func (m *CfmPmCldbBag_KEYS) GetService() string {
	if m != nil {
		return m.Service
	}
	return ""
}

func (m *CfmPmCldbBag_KEYS) GetMacAddress() string {
	if m != nil {
		return m.MacAddress
	}
	return ""
}

type CfmPmCldbBag struct {
	DomainXr               string   `protobuf:"bytes,50,opt,name=domain_xr,json=domainXr,proto3" json:"domain_xr,omitempty"`
	Level                  string   `protobuf:"bytes,51,opt,name=level,proto3" json:"level,omitempty"`
	ServiceXr              string   `protobuf:"bytes,52,opt,name=service_xr,json=serviceXr,proto3" json:"service_xr,omitempty"`
	SourceMacAddress       string   `protobuf:"bytes,53,opt,name=source_mac_address,json=sourceMacAddress,proto3" json:"source_mac_address,omitempty"`
	IngressInterface       uint32   `protobuf:"varint,54,opt,name=ingress_interface,json=ingressInterface,proto3" json:"ingress_interface,omitempty"`
	Stale                  bool     `protobuf:"varint,55,opt,name=stale,proto3" json:"stale,omitempty"`
	IngressInterfaceString string   `protobuf:"bytes,56,opt,name=ingress_interface_string,json=ingressInterfaceString,proto3" json:"ingress_interface_string,omitempty"`
	XXX_NoUnkeyedLiteral   struct{} `json:"-"`
	XXX_unrecognized       []byte   `json:"-"`
	XXX_sizecache          int32    `json:"-"`
}

func (m *CfmPmCldbBag) Reset()         { *m = CfmPmCldbBag{} }
func (m *CfmPmCldbBag) String() string { return proto.CompactTextString(m) }
func (*CfmPmCldbBag) ProtoMessage()    {}
func (*CfmPmCldbBag) Descriptor() ([]byte, []int) {
	return fileDescriptor_7c2f54c4b58f996e, []int{1}
}

func (m *CfmPmCldbBag) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CfmPmCldbBag.Unmarshal(m, b)
}
func (m *CfmPmCldbBag) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CfmPmCldbBag.Marshal(b, m, deterministic)
}
func (m *CfmPmCldbBag) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CfmPmCldbBag.Merge(m, src)
}
func (m *CfmPmCldbBag) XXX_Size() int {
	return xxx_messageInfo_CfmPmCldbBag.Size(m)
}
func (m *CfmPmCldbBag) XXX_DiscardUnknown() {
	xxx_messageInfo_CfmPmCldbBag.DiscardUnknown(m)
}

var xxx_messageInfo_CfmPmCldbBag proto.InternalMessageInfo

func (m *CfmPmCldbBag) GetDomainXr() string {
	if m != nil {
		return m.DomainXr
	}
	return ""
}

func (m *CfmPmCldbBag) GetLevel() string {
	if m != nil {
		return m.Level
	}
	return ""
}

func (m *CfmPmCldbBag) GetServiceXr() string {
	if m != nil {
		return m.ServiceXr
	}
	return ""
}

func (m *CfmPmCldbBag) GetSourceMacAddress() string {
	if m != nil {
		return m.SourceMacAddress
	}
	return ""
}

func (m *CfmPmCldbBag) GetIngressInterface() uint32 {
	if m != nil {
		return m.IngressInterface
	}
	return 0
}

func (m *CfmPmCldbBag) GetStale() bool {
	if m != nil {
		return m.Stale
	}
	return false
}

func (m *CfmPmCldbBag) GetIngressInterfaceString() string {
	if m != nil {
		return m.IngressInterfaceString
	}
	return ""
}

func init() {
	proto.RegisterType((*CfmPmCldbBag_KEYS)(nil), "cisco_ios_xr_ethernet_cfm_oper.cfm.nodes.node.ccm_learning_databases.ccm_learning_database.cfm_pm_cldb_bag_KEYS")
	proto.RegisterType((*CfmPmCldbBag)(nil), "cisco_ios_xr_ethernet_cfm_oper.cfm.nodes.node.ccm_learning_databases.ccm_learning_database.cfm_pm_cldb_bag")
}

func init() { proto.RegisterFile("cfm_pm_cldb_bag.proto", fileDescriptor_7c2f54c4b58f996e) }

var fileDescriptor_7c2f54c4b58f996e = []byte{
	// 327 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x91, 0x4f, 0x4b, 0x2b, 0x31,
	0x14, 0xc5, 0x99, 0xbe, 0xbe, 0xbe, 0xf6, 0x3e, 0xc4, 0x1a, 0x6a, 0x09, 0x88, 0x58, 0xba, 0x2a,
	0x28, 0xb3, 0xb0, 0xfe, 0xe9, 0xd6, 0x85, 0x0b, 0x11, 0x37, 0xed, 0xa6, 0xba, 0xb9, 0x64, 0x32,
	0xb7, 0x63, 0x60, 0x92, 0x94, 0x24, 0x96, 0x6e, 0xfc, 0x0a, 0x7e, 0x66, 0x99, 0xcc, 0x54, 0xa4,
	0xba, 0x19, 0x72, 0xce, 0xef, 0xde, 0x73, 0x2e, 0x0c, 0x1c, 0xcb, 0x95, 0xc6, 0xb5, 0x46, 0x59,
	0xe6, 0x19, 0x66, 0xa2, 0x48, 0xd7, 0xce, 0x06, 0xcb, 0x5e, 0xa4, 0xf2, 0xd2, 0xa2, 0xb2, 0x1e,
	0xb7, 0x0e, 0x29, 0xbc, 0x92, 0x33, 0x14, 0xb0, 0x1a, 0xb6, 0x6b, 0x72, 0xa9, 0x5c, 0xe9, 0xd4,
	0xd8, 0x9c, 0x7c, 0xfc, 0xa6, 0x52, 0x6a, 0x2c, 0x49, 0x38, 0xa3, 0x4c, 0x81, 0xb9, 0x08, 0x22,
	0x13, 0x9e, 0xfc, 0xef, 0xf6, 0xf8, 0x1d, 0x06, 0x7b, 0xa5, 0xf8, 0x78, 0xff, 0xbc, 0x60, 0x0c,
	0xda, 0x55, 0x18, 0x4f, 0x46, 0xc9, 0xa4, 0x37, 0x8f, 0x6f, 0x36, 0x84, 0x4e, 0x6e, 0xb5, 0x50,
	0x86, 0xb7, 0xa2, 0xdb, 0x28, 0xc6, 0xe1, 0x9f, 0x27, 0xb7, 0x51, 0x92, 0xf8, 0x9f, 0x08, 0x76,
	0x92, 0x9d, 0xc1, 0x7f, 0x2d, 0x24, 0x8a, 0x3c, 0x77, 0xe4, 0x3d, 0x6f, 0x47, 0x0a, 0x5a, 0xc8,
	0xbb, 0xda, 0x19, 0x7f, 0xb4, 0xe0, 0x70, 0xaf, 0x9f, 0x9d, 0x40, 0xaf, 0x0e, 0xc6, 0xad, 0xe3,
	0x97, 0x71, 0xa5, 0x5b, 0x1b, 0x4b, 0xc7, 0x06, 0xf0, 0xb7, 0xa4, 0x0d, 0x95, 0x7c, 0x1a, 0x41,
	0x2d, 0xd8, 0x29, 0x40, 0x53, 0x59, 0xed, 0x5c, 0x45, 0xd4, 0x6b, 0x9c, 0xa5, 0x63, 0x17, 0xc0,
	0xbc, 0x7d, 0x73, 0x92, 0xf0, 0xfb, 0x35, 0xd7, 0x71, 0xac, 0x5f, 0x93, 0xa7, 0xaf, 0x9b, 0xd8,
	0x39, 0x1c, 0x29, 0x53, 0x54, 0x4f, 0x54, 0x26, 0x90, 0x5b, 0x09, 0x49, 0xfc, 0x66, 0x94, 0x4c,
	0x0e, 0xe6, 0xfd, 0x06, 0x3c, 0xec, 0xfc, 0xea, 0x1e, 0x1f, 0x44, 0x49, 0xfc, 0x76, 0x94, 0x4c,
	0xba, 0xf3, 0x5a, 0xb0, 0x19, 0xf0, 0x1f, 0x11, 0xe8, 0x83, 0x53, 0xa6, 0xe0, 0xb3, 0x58, 0x3b,
	0xdc, 0x4f, 0x5a, 0x44, 0x9a, 0x75, 0xe2, 0x2f, 0x9f, 0x7e, 0x06, 0x00, 0x00, 0xff, 0xff, 0x3f,
	0xe8, 0x89, 0x35, 0x0b, 0x02, 0x00, 0x00,
}
