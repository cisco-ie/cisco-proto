/*
Copyright 2019 Cisco Systems

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: cfm_ma_summary.proto

package cisco_ios_xr_ethernet_cfm_oper_cfm_nodes_node_summary

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type CfmMaSummary_KEYS struct {
	Node                 string   `protobuf:"bytes,1,opt,name=node,proto3" json:"node,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CfmMaSummary_KEYS) Reset()         { *m = CfmMaSummary_KEYS{} }
func (m *CfmMaSummary_KEYS) String() string { return proto.CompactTextString(m) }
func (*CfmMaSummary_KEYS) ProtoMessage()    {}
func (*CfmMaSummary_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_0f284784cf2d0565, []int{0}
}

func (m *CfmMaSummary_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CfmMaSummary_KEYS.Unmarshal(m, b)
}
func (m *CfmMaSummary_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CfmMaSummary_KEYS.Marshal(b, m, deterministic)
}
func (m *CfmMaSummary_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CfmMaSummary_KEYS.Merge(m, src)
}
func (m *CfmMaSummary_KEYS) XXX_Size() int {
	return xxx_messageInfo_CfmMaSummary_KEYS.Size(m)
}
func (m *CfmMaSummary_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_CfmMaSummary_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_CfmMaSummary_KEYS proto.InternalMessageInfo

func (m *CfmMaSummary_KEYS) GetNode() string {
	if m != nil {
		return m.Node
	}
	return ""
}

type CfmMaSummary struct {
	Domains                   uint32   `protobuf:"varint,50,opt,name=domains,proto3" json:"domains,omitempty"`
	Services                  uint32   `protobuf:"varint,51,opt,name=services,proto3" json:"services,omitempty"`
	CcmRate                   uint32   `protobuf:"varint,52,opt,name=ccm_rate,json=ccmRate,proto3" json:"ccm_rate,omitempty"`
	LocalMeps                 uint32   `protobuf:"varint,53,opt,name=local_meps,json=localMeps,proto3" json:"local_meps,omitempty"`
	OperationalLocalMeps      uint32   `protobuf:"varint,54,opt,name=operational_local_meps,json=operationalLocalMeps,proto3" json:"operational_local_meps,omitempty"`
	DownMeps                  uint32   `protobuf:"varint,55,opt,name=down_meps,json=downMeps,proto3" json:"down_meps,omitempty"`
	UpMeps                    uint32   `protobuf:"varint,56,opt,name=up_meps,json=upMeps,proto3" json:"up_meps,omitempty"`
	Offloaded                 uint32   `protobuf:"varint,57,opt,name=offloaded,proto3" json:"offloaded,omitempty"`
	OffloadedAt3_3Ms          uint32   `protobuf:"varint,58,opt,name=offloaded_at3_3ms,json=offloadedAt33ms,proto3" json:"offloaded_at3_3ms,omitempty"`
	OffloadedAt10Ms           uint32   `protobuf:"varint,59,opt,name=offloaded_at10ms,json=offloadedAt10ms,proto3" json:"offloaded_at10ms,omitempty"`
	DisabledMisconfigured     uint32   `protobuf:"varint,60,opt,name=disabled_misconfigured,json=disabledMisconfigured,proto3" json:"disabled_misconfigured,omitempty"`
	DisabledOutOfResources    uint32   `protobuf:"varint,61,opt,name=disabled_out_of_resources,json=disabledOutOfResources,proto3" json:"disabled_out_of_resources,omitempty"`
	DisabledOperationalError  uint32   `protobuf:"varint,62,opt,name=disabled_operational_error,json=disabledOperationalError,proto3" json:"disabled_operational_error,omitempty"`
	PeerMeps                  uint32   `protobuf:"varint,63,opt,name=peer_meps,json=peerMeps,proto3" json:"peer_meps,omitempty"`
	OperationalPeerMeps       uint32   `protobuf:"varint,64,opt,name=operational_peer_meps,json=operationalPeerMeps,proto3" json:"operational_peer_meps,omitempty"`
	PeerMepsWithDefects       uint32   `protobuf:"varint,65,opt,name=peer_meps_with_defects,json=peerMepsWithDefects,proto3" json:"peer_meps_with_defects,omitempty"`
	PeerMepsWithoutDefects    uint32   `protobuf:"varint,66,opt,name=peer_meps_without_defects,json=peerMepsWithoutDefects,proto3" json:"peer_meps_without_defects,omitempty"`
	PeerMepsTimedOut          uint32   `protobuf:"varint,67,opt,name=peer_meps_timed_out,json=peerMepsTimedOut,proto3" json:"peer_meps_timed_out,omitempty"`
	Mips                      uint32   `protobuf:"varint,68,opt,name=mips,proto3" json:"mips,omitempty"`
	Interfaces                uint32   `protobuf:"varint,69,opt,name=interfaces,proto3" json:"interfaces,omitempty"`
	BridgeDomainsAndXconnects uint32   `protobuf:"varint,70,opt,name=bridge_domains_and_xconnects,json=bridgeDomainsAndXconnects,proto3" json:"bridge_domains_and_xconnects,omitempty"`
	TracerouteCacheEntries    uint32   `protobuf:"varint,71,opt,name=traceroute_cache_entries,json=tracerouteCacheEntries,proto3" json:"traceroute_cache_entries,omitempty"`
	TracerouteCacheReplies    uint32   `protobuf:"varint,72,opt,name=traceroute_cache_replies,json=tracerouteCacheReplies,proto3" json:"traceroute_cache_replies,omitempty"`
	CcmLearningDbEntries      uint32   `protobuf:"varint,73,opt,name=ccm_learning_db_entries,json=ccmLearningDbEntries,proto3" json:"ccm_learning_db_entries,omitempty"`
	IssuRole                  string   `protobuf:"bytes,74,opt,name=issu_role,json=issuRole,proto3" json:"issu_role,omitempty"`
	BnmEnabledLinks           uint32   `protobuf:"varint,75,opt,name=bnm_enabled_links,json=bnmEnabledLinks,proto3" json:"bnm_enabled_links,omitempty"`
	XXX_NoUnkeyedLiteral      struct{} `json:"-"`
	XXX_unrecognized          []byte   `json:"-"`
	XXX_sizecache             int32    `json:"-"`
}

func (m *CfmMaSummary) Reset()         { *m = CfmMaSummary{} }
func (m *CfmMaSummary) String() string { return proto.CompactTextString(m) }
func (*CfmMaSummary) ProtoMessage()    {}
func (*CfmMaSummary) Descriptor() ([]byte, []int) {
	return fileDescriptor_0f284784cf2d0565, []int{1}
}

func (m *CfmMaSummary) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CfmMaSummary.Unmarshal(m, b)
}
func (m *CfmMaSummary) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CfmMaSummary.Marshal(b, m, deterministic)
}
func (m *CfmMaSummary) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CfmMaSummary.Merge(m, src)
}
func (m *CfmMaSummary) XXX_Size() int {
	return xxx_messageInfo_CfmMaSummary.Size(m)
}
func (m *CfmMaSummary) XXX_DiscardUnknown() {
	xxx_messageInfo_CfmMaSummary.DiscardUnknown(m)
}

var xxx_messageInfo_CfmMaSummary proto.InternalMessageInfo

func (m *CfmMaSummary) GetDomains() uint32 {
	if m != nil {
		return m.Domains
	}
	return 0
}

func (m *CfmMaSummary) GetServices() uint32 {
	if m != nil {
		return m.Services
	}
	return 0
}

func (m *CfmMaSummary) GetCcmRate() uint32 {
	if m != nil {
		return m.CcmRate
	}
	return 0
}

func (m *CfmMaSummary) GetLocalMeps() uint32 {
	if m != nil {
		return m.LocalMeps
	}
	return 0
}

func (m *CfmMaSummary) GetOperationalLocalMeps() uint32 {
	if m != nil {
		return m.OperationalLocalMeps
	}
	return 0
}

func (m *CfmMaSummary) GetDownMeps() uint32 {
	if m != nil {
		return m.DownMeps
	}
	return 0
}

func (m *CfmMaSummary) GetUpMeps() uint32 {
	if m != nil {
		return m.UpMeps
	}
	return 0
}

func (m *CfmMaSummary) GetOffloaded() uint32 {
	if m != nil {
		return m.Offloaded
	}
	return 0
}

func (m *CfmMaSummary) GetOffloadedAt3_3Ms() uint32 {
	if m != nil {
		return m.OffloadedAt3_3Ms
	}
	return 0
}

func (m *CfmMaSummary) GetOffloadedAt10Ms() uint32 {
	if m != nil {
		return m.OffloadedAt10Ms
	}
	return 0
}

func (m *CfmMaSummary) GetDisabledMisconfigured() uint32 {
	if m != nil {
		return m.DisabledMisconfigured
	}
	return 0
}

func (m *CfmMaSummary) GetDisabledOutOfResources() uint32 {
	if m != nil {
		return m.DisabledOutOfResources
	}
	return 0
}

func (m *CfmMaSummary) GetDisabledOperationalError() uint32 {
	if m != nil {
		return m.DisabledOperationalError
	}
	return 0
}

func (m *CfmMaSummary) GetPeerMeps() uint32 {
	if m != nil {
		return m.PeerMeps
	}
	return 0
}

func (m *CfmMaSummary) GetOperationalPeerMeps() uint32 {
	if m != nil {
		return m.OperationalPeerMeps
	}
	return 0
}

func (m *CfmMaSummary) GetPeerMepsWithDefects() uint32 {
	if m != nil {
		return m.PeerMepsWithDefects
	}
	return 0
}

func (m *CfmMaSummary) GetPeerMepsWithoutDefects() uint32 {
	if m != nil {
		return m.PeerMepsWithoutDefects
	}
	return 0
}

func (m *CfmMaSummary) GetPeerMepsTimedOut() uint32 {
	if m != nil {
		return m.PeerMepsTimedOut
	}
	return 0
}

func (m *CfmMaSummary) GetMips() uint32 {
	if m != nil {
		return m.Mips
	}
	return 0
}

func (m *CfmMaSummary) GetInterfaces() uint32 {
	if m != nil {
		return m.Interfaces
	}
	return 0
}

func (m *CfmMaSummary) GetBridgeDomainsAndXconnects() uint32 {
	if m != nil {
		return m.BridgeDomainsAndXconnects
	}
	return 0
}

func (m *CfmMaSummary) GetTracerouteCacheEntries() uint32 {
	if m != nil {
		return m.TracerouteCacheEntries
	}
	return 0
}

func (m *CfmMaSummary) GetTracerouteCacheReplies() uint32 {
	if m != nil {
		return m.TracerouteCacheReplies
	}
	return 0
}

func (m *CfmMaSummary) GetCcmLearningDbEntries() uint32 {
	if m != nil {
		return m.CcmLearningDbEntries
	}
	return 0
}

func (m *CfmMaSummary) GetIssuRole() string {
	if m != nil {
		return m.IssuRole
	}
	return ""
}

func (m *CfmMaSummary) GetBnmEnabledLinks() uint32 {
	if m != nil {
		return m.BnmEnabledLinks
	}
	return 0
}

func init() {
	proto.RegisterType((*CfmMaSummary_KEYS)(nil), "cisco_ios_xr_ethernet_cfm_oper.cfm.nodes.node.summary.cfm_ma_summary_KEYS")
	proto.RegisterType((*CfmMaSummary)(nil), "cisco_ios_xr_ethernet_cfm_oper.cfm.nodes.node.summary.cfm_ma_summary")
}

func init() { proto.RegisterFile("cfm_ma_summary.proto", fileDescriptor_0f284784cf2d0565) }

var fileDescriptor_0f284784cf2d0565 = []byte{
	// 638 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x94, 0x5b, 0x4f, 0x14, 0x31,
	0x14, 0xc7, 0x43, 0x62, 0x60, 0xb7, 0x89, 0x8a, 0xe5, 0x56, 0x2e, 0x1a, 0xc2, 0x13, 0x98, 0xb8,
	0x51, 0x86, 0x55, 0x50, 0x14, 0x91, 0x5d, 0x6f, 0x40, 0x30, 0xab, 0x89, 0xfa, 0xd4, 0x74, 0x3a,
	0x67, 0xd8, 0xc6, 0x69, 0x3b, 0x69, 0x3b, 0x82, 0x5f, 0xd9, 0x4f, 0x61, 0xda, 0x32, 0xb3, 0xb3,
	0x91, 0x17, 0x32, 0x3d, 0xbf, 0xff, 0xaf, 0xd3, 0x1e, 0xf6, 0x0c, 0x5a, 0xe4, 0xb9, 0xa4, 0x92,
	0x51, 0x5b, 0x49, 0xc9, 0xcc, 0x9f, 0x5e, 0x69, 0xb4, 0xd3, 0xb8, 0xcf, 0x85, 0xe5, 0x9a, 0x0a,
	0x6d, 0xe9, 0xb5, 0xa1, 0xe0, 0xc6, 0x60, 0x14, 0x38, 0xea, 0xb3, 0xba, 0x04, 0xd3, 0xe3, 0xb9,
	0xec, 0x29, 0x9d, 0x81, 0x0d, 0x7f, 0x7b, 0x37, 0xf2, 0xd6, 0x0e, 0x5a, 0x98, 0xde, 0x8e, 0x9e,
	0x0e, 0x7f, 0x7e, 0xc5, 0x18, 0xdd, 0xf1, 0x31, 0x32, 0xb3, 0x39, 0xb3, 0xdd, 0x1d, 0x85, 0xe7,
	0xad, 0xbf, 0x1d, 0x74, 0x6f, 0x3a, 0x8b, 0x09, 0x9a, 0xcb, 0xb4, 0x64, 0x42, 0x59, 0xb2, 0xbb,
	0x39, 0xb3, 0x7d, 0x77, 0x54, 0x2f, 0xf1, 0x1a, 0xea, 0x58, 0x30, 0xbf, 0x05, 0x07, 0x4b, 0x92,
	0x80, 0x9a, 0x35, 0x5e, 0x45, 0x1d, 0xce, 0x25, 0x35, 0xcc, 0x01, 0xd9, 0x8b, 0x1a, 0xe7, 0x72,
	0xc4, 0x1c, 0xe0, 0x87, 0x08, 0x15, 0x9a, 0xb3, 0x82, 0x4a, 0x28, 0x2d, 0xe9, 0x07, 0xd8, 0x0d,
	0x95, 0x73, 0x28, 0x2d, 0xde, 0x43, 0xcb, 0xfe, 0x32, 0xcc, 0x09, 0xad, 0x58, 0x41, 0x5b, 0xd1,
	0xe7, 0x21, 0xba, 0xd8, 0xa2, 0x67, 0x8d, 0xb5, 0x8e, 0xba, 0x99, 0xbe, 0x52, 0x31, 0xf8, 0x22,
	0x1e, 0xc6, 0x17, 0x02, 0x5c, 0x41, 0x73, 0x55, 0x19, 0xd1, 0x7e, 0x40, 0xb3, 0x55, 0x19, 0xc0,
	0x06, 0xea, 0xea, 0x3c, 0x2f, 0x34, 0xcb, 0x20, 0x23, 0x07, 0xf1, 0x24, 0x4d, 0x01, 0x3f, 0x46,
	0x0f, 0x9a, 0x05, 0x65, 0x2e, 0xa1, 0x89, 0xb4, 0xe4, 0x65, 0x48, 0xdd, 0x6f, 0xc0, 0xb1, 0x4b,
	0x12, 0x69, 0xf1, 0x0e, 0x9a, 0x6f, 0x67, 0x9f, 0x3d, 0x95, 0x96, 0xbc, 0xfa, 0x2f, 0xea, 0xcb,
	0xb8, 0x8f, 0x96, 0x33, 0x61, 0x59, 0x5a, 0x40, 0x46, 0xa5, 0xff, 0x87, 0xaa, 0x5c, 0x5c, 0x56,
	0x06, 0x32, 0x72, 0x18, 0x84, 0xa5, 0x9a, 0x9e, 0xb7, 0x21, 0x3e, 0x40, 0xab, 0x8d, 0xa6, 0x2b,
	0x47, 0x75, 0x4e, 0x0d, 0x58, 0x5d, 0x19, 0xdf, 0xfe, 0xd7, 0xc1, 0x6c, 0xf6, 0xbd, 0xa8, 0xdc,
	0x45, 0x3e, 0xaa, 0x29, 0x3e, 0x44, 0x6b, 0x13, 0xb5, 0xd5, 0x5b, 0x30, 0x46, 0x1b, 0xf2, 0x26,
	0xb8, 0xa4, 0x71, 0x27, 0x81, 0xa1, 0xe7, 0xbe, 0xb5, 0x25, 0x80, 0x89, 0xfd, 0x3b, 0x8a, 0xad,
	0xf5, 0x85, 0xd0, 0xc1, 0x5d, 0xb4, 0xd4, 0xde, 0x71, 0x12, 0x7c, 0x1b, 0x82, 0x0b, 0x2d, 0xf8,
	0xa5, 0x76, 0x12, 0xb4, 0xdc, 0xe4, 0xe8, 0x95, 0x70, 0x63, 0x9a, 0x41, 0x0e, 0xdc, 0x59, 0x72,
	0x1c, 0xa5, 0x7a, 0xf7, 0xef, 0xc2, 0x8d, 0x07, 0x11, 0xf9, 0xeb, 0x4f, 0x4b, 0xbe, 0x07, 0xb5,
	0xf7, 0x2e, 0x5e, 0xbf, 0xed, 0xe9, 0xca, 0xd5, 0xea, 0x13, 0xb4, 0x30, 0x51, 0x9d, 0x90, 0xb1,
	0x81, 0xe4, 0x24, 0x48, 0xf3, 0xb5, 0xf4, 0xcd, 0x83, 0x8b, 0xca, 0xf9, 0xb9, 0x90, 0xa2, 0xb4,
	0x64, 0x10, 0x78, 0x78, 0xc6, 0x8f, 0x10, 0x12, 0xca, 0x81, 0xc9, 0x99, 0xef, 0xf6, 0x30, 0x90,
	0x56, 0x05, 0x1f, 0xa1, 0x8d, 0xd4, 0x88, 0xec, 0x12, 0xe8, 0xcd, 0x70, 0x50, 0xa6, 0x32, 0x7a,
	0xcd, 0xb5, 0x52, 0xe1, 0x80, 0xef, 0x83, 0xb1, 0x1a, 0x33, 0x83, 0x18, 0x39, 0x56, 0xd9, 0x8f,
	0x3a, 0x80, 0xf7, 0x11, 0x71, 0x86, 0x71, 0x30, 0xba, 0x72, 0x40, 0x39, 0xe3, 0x63, 0xa0, 0xa0,
	0x9c, 0x11, 0x60, 0xc9, 0x87, 0x78, 0xbb, 0x09, 0x3f, 0xf1, 0x78, 0x18, 0xe9, 0xad, 0xa6, 0x81,
	0xb2, 0xf0, 0xe6, 0xc7, 0x5b, 0xcd, 0x51, 0xa4, 0xb8, 0x8f, 0x56, 0xfc, 0x8c, 0x16, 0xc0, 0x8c,
	0x12, 0xea, 0x92, 0x66, 0x69, 0xf3, 0xca, 0x4f, 0x71, 0xd4, 0x38, 0x97, 0x67, 0x37, 0x74, 0x90,
	0xd6, 0x2f, 0x5c, 0x47, 0x5d, 0x61, 0x6d, 0x45, 0x8d, 0x2e, 0x80, 0x7c, 0x0e, 0x1f, 0x8f, 0x8e,
	0x2f, 0x8c, 0x74, 0x01, 0x7e, 0x66, 0x52, 0x25, 0x29, 0xa8, 0xf8, 0x6b, 0x2b, 0x84, 0xfa, 0x65,
	0xc9, 0x69, 0x1c, 0x84, 0x54, 0xc9, 0x61, 0xac, 0x9f, 0xf9, 0x72, 0x3a, 0x1b, 0xbe, 0x6a, 0xc9,
	0xbf, 0x00, 0x00, 0x00, 0xff, 0xff, 0xa0, 0xa7, 0x58, 0x5e, 0xed, 0x04, 0x00, 0x00,
}
