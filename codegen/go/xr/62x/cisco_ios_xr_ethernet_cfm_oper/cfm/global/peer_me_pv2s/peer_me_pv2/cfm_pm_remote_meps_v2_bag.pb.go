/*
Copyright 2019 Cisco Systems

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: cfm_pm_remote_meps_v2_bag.proto

package cisco_ios_xr_ethernet_cfm_oper_cfm_global_peer_me_pv2s_peer_me_pv2

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type CfmPmRemoteMepsV2Bag_KEYS struct {
	Domain               string   `protobuf:"bytes,1,opt,name=domain,proto3" json:"domain,omitempty"`
	Service              string   `protobuf:"bytes,2,opt,name=service,proto3" json:"service,omitempty"`
	LocalMepId           uint32   `protobuf:"varint,3,opt,name=local_mep_id,json=localMepId,proto3" json:"local_mep_id,omitempty"`
	Interface            string   `protobuf:"bytes,4,opt,name=interface,proto3" json:"interface,omitempty"`
	PeerMepId            uint32   `protobuf:"varint,5,opt,name=peer_mep_id,json=peerMepId,proto3" json:"peer_mep_id,omitempty"`
	PeerMacAddress       string   `protobuf:"bytes,6,opt,name=peer_mac_address,json=peerMacAddress,proto3" json:"peer_mac_address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CfmPmRemoteMepsV2Bag_KEYS) Reset()         { *m = CfmPmRemoteMepsV2Bag_KEYS{} }
func (m *CfmPmRemoteMepsV2Bag_KEYS) String() string { return proto.CompactTextString(m) }
func (*CfmPmRemoteMepsV2Bag_KEYS) ProtoMessage()    {}
func (*CfmPmRemoteMepsV2Bag_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_c11005c776f1e5d5, []int{0}
}

func (m *CfmPmRemoteMepsV2Bag_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CfmPmRemoteMepsV2Bag_KEYS.Unmarshal(m, b)
}
func (m *CfmPmRemoteMepsV2Bag_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CfmPmRemoteMepsV2Bag_KEYS.Marshal(b, m, deterministic)
}
func (m *CfmPmRemoteMepsV2Bag_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CfmPmRemoteMepsV2Bag_KEYS.Merge(m, src)
}
func (m *CfmPmRemoteMepsV2Bag_KEYS) XXX_Size() int {
	return xxx_messageInfo_CfmPmRemoteMepsV2Bag_KEYS.Size(m)
}
func (m *CfmPmRemoteMepsV2Bag_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_CfmPmRemoteMepsV2Bag_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_CfmPmRemoteMepsV2Bag_KEYS proto.InternalMessageInfo

func (m *CfmPmRemoteMepsV2Bag_KEYS) GetDomain() string {
	if m != nil {
		return m.Domain
	}
	return ""
}

func (m *CfmPmRemoteMepsV2Bag_KEYS) GetService() string {
	if m != nil {
		return m.Service
	}
	return ""
}

func (m *CfmPmRemoteMepsV2Bag_KEYS) GetLocalMepId() uint32 {
	if m != nil {
		return m.LocalMepId
	}
	return 0
}

func (m *CfmPmRemoteMepsV2Bag_KEYS) GetInterface() string {
	if m != nil {
		return m.Interface
	}
	return ""
}

func (m *CfmPmRemoteMepsV2Bag_KEYS) GetPeerMepId() uint32 {
	if m != nil {
		return m.PeerMepId
	}
	return 0
}

func (m *CfmPmRemoteMepsV2Bag_KEYS) GetPeerMacAddress() string {
	if m != nil {
		return m.PeerMacAddress
	}
	return ""
}

type CfmPmRmepErrState struct {
	LossThresholdExceeded bool     `protobuf:"varint,1,opt,name=loss_threshold_exceeded,json=lossThresholdExceeded,proto3" json:"loss_threshold_exceeded,omitempty"`
	InvalidLevel          bool     `protobuf:"varint,2,opt,name=invalid_level,json=invalidLevel,proto3" json:"invalid_level,omitempty"`
	InvalidMaid           bool     `protobuf:"varint,3,opt,name=invalid_maid,json=invalidMaid,proto3" json:"invalid_maid,omitempty"`
	InvalidCcmInterval    bool     `protobuf:"varint,4,opt,name=invalid_ccm_interval,json=invalidCcmInterval,proto3" json:"invalid_ccm_interval,omitempty"`
	ReceivedOurMac        bool     `protobuf:"varint,5,opt,name=received_our_mac,json=receivedOurMac,proto3" json:"received_our_mac,omitempty"`
	ReceivedOurMepId      bool     `protobuf:"varint,6,opt,name=received_our_mep_id,json=receivedOurMepId,proto3" json:"received_our_mep_id,omitempty"`
	ReceivedRdi           bool     `protobuf:"varint,7,opt,name=received_rdi,json=receivedRdi,proto3" json:"received_rdi,omitempty"`
	XXX_NoUnkeyedLiteral  struct{} `json:"-"`
	XXX_unrecognized      []byte   `json:"-"`
	XXX_sizecache         int32    `json:"-"`
}

func (m *CfmPmRmepErrState) Reset()         { *m = CfmPmRmepErrState{} }
func (m *CfmPmRmepErrState) String() string { return proto.CompactTextString(m) }
func (*CfmPmRmepErrState) ProtoMessage()    {}
func (*CfmPmRmepErrState) Descriptor() ([]byte, []int) {
	return fileDescriptor_c11005c776f1e5d5, []int{1}
}

func (m *CfmPmRmepErrState) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CfmPmRmepErrState.Unmarshal(m, b)
}
func (m *CfmPmRmepErrState) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CfmPmRmepErrState.Marshal(b, m, deterministic)
}
func (m *CfmPmRmepErrState) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CfmPmRmepErrState.Merge(m, src)
}
func (m *CfmPmRmepErrState) XXX_Size() int {
	return xxx_messageInfo_CfmPmRmepErrState.Size(m)
}
func (m *CfmPmRmepErrState) XXX_DiscardUnknown() {
	xxx_messageInfo_CfmPmRmepErrState.DiscardUnknown(m)
}

var xxx_messageInfo_CfmPmRmepErrState proto.InternalMessageInfo

func (m *CfmPmRmepErrState) GetLossThresholdExceeded() bool {
	if m != nil {
		return m.LossThresholdExceeded
	}
	return false
}

func (m *CfmPmRmepErrState) GetInvalidLevel() bool {
	if m != nil {
		return m.InvalidLevel
	}
	return false
}

func (m *CfmPmRmepErrState) GetInvalidMaid() bool {
	if m != nil {
		return m.InvalidMaid
	}
	return false
}

func (m *CfmPmRmepErrState) GetInvalidCcmInterval() bool {
	if m != nil {
		return m.InvalidCcmInterval
	}
	return false
}

func (m *CfmPmRmepErrState) GetReceivedOurMac() bool {
	if m != nil {
		return m.ReceivedOurMac
	}
	return false
}

func (m *CfmPmRmepErrState) GetReceivedOurMepId() bool {
	if m != nil {
		return m.ReceivedOurMepId
	}
	return false
}

func (m *CfmPmRmepErrState) GetReceivedRdi() bool {
	if m != nil {
		return m.ReceivedRdi
	}
	return false
}

type CfmPmTimestamp struct {
	Seconds              uint32   `protobuf:"varint,1,opt,name=seconds,proto3" json:"seconds,omitempty"`
	Nanoseconds          uint32   `protobuf:"varint,2,opt,name=nanoseconds,proto3" json:"nanoseconds,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CfmPmTimestamp) Reset()         { *m = CfmPmTimestamp{} }
func (m *CfmPmTimestamp) String() string { return proto.CompactTextString(m) }
func (*CfmPmTimestamp) ProtoMessage()    {}
func (*CfmPmTimestamp) Descriptor() ([]byte, []int) {
	return fileDescriptor_c11005c776f1e5d5, []int{2}
}

func (m *CfmPmTimestamp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CfmPmTimestamp.Unmarshal(m, b)
}
func (m *CfmPmTimestamp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CfmPmTimestamp.Marshal(b, m, deterministic)
}
func (m *CfmPmTimestamp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CfmPmTimestamp.Merge(m, src)
}
func (m *CfmPmTimestamp) XXX_Size() int {
	return xxx_messageInfo_CfmPmTimestamp.Size(m)
}
func (m *CfmPmTimestamp) XXX_DiscardUnknown() {
	xxx_messageInfo_CfmPmTimestamp.DiscardUnknown(m)
}

var xxx_messageInfo_CfmPmTimestamp proto.InternalMessageInfo

func (m *CfmPmTimestamp) GetSeconds() uint32 {
	if m != nil {
		return m.Seconds
	}
	return 0
}

func (m *CfmPmTimestamp) GetNanoseconds() uint32 {
	if m != nil {
		return m.Nanoseconds
	}
	return 0
}

type CfmBagMdidMacName struct {
	MacAddress           string   `protobuf:"bytes,1,opt,name=mac_address,json=macAddress,proto3" json:"mac_address,omitempty"`
	Integer              uint32   `protobuf:"varint,2,opt,name=integer,proto3" json:"integer,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CfmBagMdidMacName) Reset()         { *m = CfmBagMdidMacName{} }
func (m *CfmBagMdidMacName) String() string { return proto.CompactTextString(m) }
func (*CfmBagMdidMacName) ProtoMessage()    {}
func (*CfmBagMdidMacName) Descriptor() ([]byte, []int) {
	return fileDescriptor_c11005c776f1e5d5, []int{3}
}

func (m *CfmBagMdidMacName) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CfmBagMdidMacName.Unmarshal(m, b)
}
func (m *CfmBagMdidMacName) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CfmBagMdidMacName.Marshal(b, m, deterministic)
}
func (m *CfmBagMdidMacName) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CfmBagMdidMacName.Merge(m, src)
}
func (m *CfmBagMdidMacName) XXX_Size() int {
	return xxx_messageInfo_CfmBagMdidMacName.Size(m)
}
func (m *CfmBagMdidMacName) XXX_DiscardUnknown() {
	xxx_messageInfo_CfmBagMdidMacName.DiscardUnknown(m)
}

var xxx_messageInfo_CfmBagMdidMacName proto.InternalMessageInfo

func (m *CfmBagMdidMacName) GetMacAddress() string {
	if m != nil {
		return m.MacAddress
	}
	return ""
}

func (m *CfmBagMdidMacName) GetInteger() uint32 {
	if m != nil {
		return m.Integer
	}
	return 0
}

type CfmBagMdidV2 struct {
	MdidFormatValue      string             `protobuf:"bytes,1,opt,name=mdid_format_value,json=mdidFormatValue,proto3" json:"mdid_format_value,omitempty"`
	DnsLikeName          string             `protobuf:"bytes,2,opt,name=dns_like_name,json=dnsLikeName,proto3" json:"dns_like_name,omitempty"`
	MacName              *CfmBagMdidMacName `protobuf:"bytes,3,opt,name=mac_name,json=macName,proto3" json:"mac_name,omitempty"`
	StringName           string             `protobuf:"bytes,4,opt,name=string_name,json=stringName,proto3" json:"string_name,omitempty"`
	MdidData             []byte             `protobuf:"bytes,5,opt,name=mdid_data,json=mdidData,proto3" json:"mdid_data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *CfmBagMdidV2) Reset()         { *m = CfmBagMdidV2{} }
func (m *CfmBagMdidV2) String() string { return proto.CompactTextString(m) }
func (*CfmBagMdidV2) ProtoMessage()    {}
func (*CfmBagMdidV2) Descriptor() ([]byte, []int) {
	return fileDescriptor_c11005c776f1e5d5, []int{4}
}

func (m *CfmBagMdidV2) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CfmBagMdidV2.Unmarshal(m, b)
}
func (m *CfmBagMdidV2) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CfmBagMdidV2.Marshal(b, m, deterministic)
}
func (m *CfmBagMdidV2) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CfmBagMdidV2.Merge(m, src)
}
func (m *CfmBagMdidV2) XXX_Size() int {
	return xxx_messageInfo_CfmBagMdidV2.Size(m)
}
func (m *CfmBagMdidV2) XXX_DiscardUnknown() {
	xxx_messageInfo_CfmBagMdidV2.DiscardUnknown(m)
}

var xxx_messageInfo_CfmBagMdidV2 proto.InternalMessageInfo

func (m *CfmBagMdidV2) GetMdidFormatValue() string {
	if m != nil {
		return m.MdidFormatValue
	}
	return ""
}

func (m *CfmBagMdidV2) GetDnsLikeName() string {
	if m != nil {
		return m.DnsLikeName
	}
	return ""
}

func (m *CfmBagMdidV2) GetMacName() *CfmBagMdidMacName {
	if m != nil {
		return m.MacName
	}
	return nil
}

func (m *CfmBagMdidV2) GetStringName() string {
	if m != nil {
		return m.StringName
	}
	return ""
}

func (m *CfmBagMdidV2) GetMdidData() []byte {
	if m != nil {
		return m.MdidData
	}
	return nil
}

type CfmBagSmanVpnidName struct {
	Oui                  uint32   `protobuf:"varint,1,opt,name=oui,proto3" json:"oui,omitempty"`
	Index                uint32   `protobuf:"varint,2,opt,name=index,proto3" json:"index,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CfmBagSmanVpnidName) Reset()         { *m = CfmBagSmanVpnidName{} }
func (m *CfmBagSmanVpnidName) String() string { return proto.CompactTextString(m) }
func (*CfmBagSmanVpnidName) ProtoMessage()    {}
func (*CfmBagSmanVpnidName) Descriptor() ([]byte, []int) {
	return fileDescriptor_c11005c776f1e5d5, []int{5}
}

func (m *CfmBagSmanVpnidName) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CfmBagSmanVpnidName.Unmarshal(m, b)
}
func (m *CfmBagSmanVpnidName) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CfmBagSmanVpnidName.Marshal(b, m, deterministic)
}
func (m *CfmBagSmanVpnidName) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CfmBagSmanVpnidName.Merge(m, src)
}
func (m *CfmBagSmanVpnidName) XXX_Size() int {
	return xxx_messageInfo_CfmBagSmanVpnidName.Size(m)
}
func (m *CfmBagSmanVpnidName) XXX_DiscardUnknown() {
	xxx_messageInfo_CfmBagSmanVpnidName.DiscardUnknown(m)
}

var xxx_messageInfo_CfmBagSmanVpnidName proto.InternalMessageInfo

func (m *CfmBagSmanVpnidName) GetOui() uint32 {
	if m != nil {
		return m.Oui
	}
	return 0
}

func (m *CfmBagSmanVpnidName) GetIndex() uint32 {
	if m != nil {
		return m.Index
	}
	return 0
}

type CfmBagSmanV2 struct {
	ShortMaNameFormatValue string               `protobuf:"bytes,1,opt,name=short_ma_name_format_value,json=shortMaNameFormatValue,proto3" json:"short_ma_name_format_value,omitempty"`
	VlanIdName             uint32               `protobuf:"varint,2,opt,name=vlan_id_name,json=vlanIdName,proto3" json:"vlan_id_name,omitempty"`
	StringName             string               `protobuf:"bytes,3,opt,name=string_name,json=stringName,proto3" json:"string_name,omitempty"`
	IntegerName            uint32               `protobuf:"varint,4,opt,name=integer_name,json=integerName,proto3" json:"integer_name,omitempty"`
	VpnIdName              *CfmBagSmanVpnidName `protobuf:"bytes,5,opt,name=vpn_id_name,json=vpnIdName,proto3" json:"vpn_id_name,omitempty"`
	IccBased               string               `protobuf:"bytes,6,opt,name=icc_based,json=iccBased,proto3" json:"icc_based,omitempty"`
	ShortMaNameData        []byte               `protobuf:"bytes,7,opt,name=short_ma_name_data,json=shortMaNameData,proto3" json:"short_ma_name_data,omitempty"`
	XXX_NoUnkeyedLiteral   struct{}             `json:"-"`
	XXX_unrecognized       []byte               `json:"-"`
	XXX_sizecache          int32                `json:"-"`
}

func (m *CfmBagSmanV2) Reset()         { *m = CfmBagSmanV2{} }
func (m *CfmBagSmanV2) String() string { return proto.CompactTextString(m) }
func (*CfmBagSmanV2) ProtoMessage()    {}
func (*CfmBagSmanV2) Descriptor() ([]byte, []int) {
	return fileDescriptor_c11005c776f1e5d5, []int{6}
}

func (m *CfmBagSmanV2) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CfmBagSmanV2.Unmarshal(m, b)
}
func (m *CfmBagSmanV2) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CfmBagSmanV2.Marshal(b, m, deterministic)
}
func (m *CfmBagSmanV2) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CfmBagSmanV2.Merge(m, src)
}
func (m *CfmBagSmanV2) XXX_Size() int {
	return xxx_messageInfo_CfmBagSmanV2.Size(m)
}
func (m *CfmBagSmanV2) XXX_DiscardUnknown() {
	xxx_messageInfo_CfmBagSmanV2.DiscardUnknown(m)
}

var xxx_messageInfo_CfmBagSmanV2 proto.InternalMessageInfo

func (m *CfmBagSmanV2) GetShortMaNameFormatValue() string {
	if m != nil {
		return m.ShortMaNameFormatValue
	}
	return ""
}

func (m *CfmBagSmanV2) GetVlanIdName() uint32 {
	if m != nil {
		return m.VlanIdName
	}
	return 0
}

func (m *CfmBagSmanV2) GetStringName() string {
	if m != nil {
		return m.StringName
	}
	return ""
}

func (m *CfmBagSmanV2) GetIntegerName() uint32 {
	if m != nil {
		return m.IntegerName
	}
	return 0
}

func (m *CfmBagSmanV2) GetVpnIdName() *CfmBagSmanVpnidName {
	if m != nil {
		return m.VpnIdName
	}
	return nil
}

func (m *CfmBagSmanV2) GetIccBased() string {
	if m != nil {
		return m.IccBased
	}
	return ""
}

func (m *CfmBagSmanV2) GetShortMaNameData() []byte {
	if m != nil {
		return m.ShortMaNameData
	}
	return nil
}

type CfmPmCcmHdrV2 struct {
	Level                string        `protobuf:"bytes,1,opt,name=level,proto3" json:"level,omitempty"`
	Version              uint32        `protobuf:"varint,2,opt,name=version,proto3" json:"version,omitempty"`
	Interval             string        `protobuf:"bytes,3,opt,name=interval,proto3" json:"interval,omitempty"`
	Rdi                  bool          `protobuf:"varint,4,opt,name=rdi,proto3" json:"rdi,omitempty"`
	SequenceNumber       uint32        `protobuf:"varint,5,opt,name=sequence_number,json=sequenceNumber,proto3" json:"sequence_number,omitempty"`
	MepId                uint32        `protobuf:"varint,6,opt,name=mep_id,json=mepId,proto3" json:"mep_id,omitempty"`
	MdidFormat           uint32        `protobuf:"varint,7,opt,name=mdid_format,json=mdidFormat,proto3" json:"mdid_format,omitempty"`
	Mdid                 *CfmBagMdidV2 `protobuf:"bytes,8,opt,name=mdid,proto3" json:"mdid,omitempty"`
	ShortMaNameFormat    uint32        `protobuf:"varint,9,opt,name=short_ma_name_format,json=shortMaNameFormat,proto3" json:"short_ma_name_format,omitempty"`
	ShortMaName          *CfmBagSmanV2 `protobuf:"bytes,10,opt,name=short_ma_name,json=shortMaName,proto3" json:"short_ma_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *CfmPmCcmHdrV2) Reset()         { *m = CfmPmCcmHdrV2{} }
func (m *CfmPmCcmHdrV2) String() string { return proto.CompactTextString(m) }
func (*CfmPmCcmHdrV2) ProtoMessage()    {}
func (*CfmPmCcmHdrV2) Descriptor() ([]byte, []int) {
	return fileDescriptor_c11005c776f1e5d5, []int{7}
}

func (m *CfmPmCcmHdrV2) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CfmPmCcmHdrV2.Unmarshal(m, b)
}
func (m *CfmPmCcmHdrV2) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CfmPmCcmHdrV2.Marshal(b, m, deterministic)
}
func (m *CfmPmCcmHdrV2) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CfmPmCcmHdrV2.Merge(m, src)
}
func (m *CfmPmCcmHdrV2) XXX_Size() int {
	return xxx_messageInfo_CfmPmCcmHdrV2.Size(m)
}
func (m *CfmPmCcmHdrV2) XXX_DiscardUnknown() {
	xxx_messageInfo_CfmPmCcmHdrV2.DiscardUnknown(m)
}

var xxx_messageInfo_CfmPmCcmHdrV2 proto.InternalMessageInfo

func (m *CfmPmCcmHdrV2) GetLevel() string {
	if m != nil {
		return m.Level
	}
	return ""
}

func (m *CfmPmCcmHdrV2) GetVersion() uint32 {
	if m != nil {
		return m.Version
	}
	return 0
}

func (m *CfmPmCcmHdrV2) GetInterval() string {
	if m != nil {
		return m.Interval
	}
	return ""
}

func (m *CfmPmCcmHdrV2) GetRdi() bool {
	if m != nil {
		return m.Rdi
	}
	return false
}

func (m *CfmPmCcmHdrV2) GetSequenceNumber() uint32 {
	if m != nil {
		return m.SequenceNumber
	}
	return 0
}

func (m *CfmPmCcmHdrV2) GetMepId() uint32 {
	if m != nil {
		return m.MepId
	}
	return 0
}

func (m *CfmPmCcmHdrV2) GetMdidFormat() uint32 {
	if m != nil {
		return m.MdidFormat
	}
	return 0
}

func (m *CfmPmCcmHdrV2) GetMdid() *CfmBagMdidV2 {
	if m != nil {
		return m.Mdid
	}
	return nil
}

func (m *CfmPmCcmHdrV2) GetShortMaNameFormat() uint32 {
	if m != nil {
		return m.ShortMaNameFormat
	}
	return 0
}

func (m *CfmPmCcmHdrV2) GetShortMaName() *CfmBagSmanV2 {
	if m != nil {
		return m.ShortMaName
	}
	return nil
}

type CfmPmChassisIdVal struct {
	ChassisIdFormat      string   `protobuf:"bytes,1,opt,name=chassis_id_format,json=chassisIdFormat,proto3" json:"chassis_id_format,omitempty"`
	ChassisIdString      string   `protobuf:"bytes,2,opt,name=chassis_id_string,json=chassisIdString,proto3" json:"chassis_id_string,omitempty"`
	ChassisIdMac         string   `protobuf:"bytes,3,opt,name=chassis_id_mac,json=chassisIdMac,proto3" json:"chassis_id_mac,omitempty"`
	ChassisIdRaw         []byte   `protobuf:"bytes,4,opt,name=chassis_id_raw,json=chassisIdRaw,proto3" json:"chassis_id_raw,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CfmPmChassisIdVal) Reset()         { *m = CfmPmChassisIdVal{} }
func (m *CfmPmChassisIdVal) String() string { return proto.CompactTextString(m) }
func (*CfmPmChassisIdVal) ProtoMessage()    {}
func (*CfmPmChassisIdVal) Descriptor() ([]byte, []int) {
	return fileDescriptor_c11005c776f1e5d5, []int{8}
}

func (m *CfmPmChassisIdVal) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CfmPmChassisIdVal.Unmarshal(m, b)
}
func (m *CfmPmChassisIdVal) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CfmPmChassisIdVal.Marshal(b, m, deterministic)
}
func (m *CfmPmChassisIdVal) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CfmPmChassisIdVal.Merge(m, src)
}
func (m *CfmPmChassisIdVal) XXX_Size() int {
	return xxx_messageInfo_CfmPmChassisIdVal.Size(m)
}
func (m *CfmPmChassisIdVal) XXX_DiscardUnknown() {
	xxx_messageInfo_CfmPmChassisIdVal.DiscardUnknown(m)
}

var xxx_messageInfo_CfmPmChassisIdVal proto.InternalMessageInfo

func (m *CfmPmChassisIdVal) GetChassisIdFormat() string {
	if m != nil {
		return m.ChassisIdFormat
	}
	return ""
}

func (m *CfmPmChassisIdVal) GetChassisIdString() string {
	if m != nil {
		return m.ChassisIdString
	}
	return ""
}

func (m *CfmPmChassisIdVal) GetChassisIdMac() string {
	if m != nil {
		return m.ChassisIdMac
	}
	return ""
}

func (m *CfmPmChassisIdVal) GetChassisIdRaw() []byte {
	if m != nil {
		return m.ChassisIdRaw
	}
	return nil
}

type CfmPmChassisId struct {
	ChassisIdType        string             `protobuf:"bytes,1,opt,name=chassis_id_type,json=chassisIdType,proto3" json:"chassis_id_type,omitempty"`
	ChassisIdTypeValue   uint32             `protobuf:"varint,2,opt,name=chassis_id_type_value,json=chassisIdTypeValue,proto3" json:"chassis_id_type_value,omitempty"`
	ChassisIdValue       *CfmPmChassisIdVal `protobuf:"bytes,3,opt,name=chassis_id_value,json=chassisIdValue,proto3" json:"chassis_id_value,omitempty"`
	ChassisId            []byte             `protobuf:"bytes,4,opt,name=chassis_id,json=chassisId,proto3" json:"chassis_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *CfmPmChassisId) Reset()         { *m = CfmPmChassisId{} }
func (m *CfmPmChassisId) String() string { return proto.CompactTextString(m) }
func (*CfmPmChassisId) ProtoMessage()    {}
func (*CfmPmChassisId) Descriptor() ([]byte, []int) {
	return fileDescriptor_c11005c776f1e5d5, []int{9}
}

func (m *CfmPmChassisId) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CfmPmChassisId.Unmarshal(m, b)
}
func (m *CfmPmChassisId) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CfmPmChassisId.Marshal(b, m, deterministic)
}
func (m *CfmPmChassisId) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CfmPmChassisId.Merge(m, src)
}
func (m *CfmPmChassisId) XXX_Size() int {
	return xxx_messageInfo_CfmPmChassisId.Size(m)
}
func (m *CfmPmChassisId) XXX_DiscardUnknown() {
	xxx_messageInfo_CfmPmChassisId.DiscardUnknown(m)
}

var xxx_messageInfo_CfmPmChassisId proto.InternalMessageInfo

func (m *CfmPmChassisId) GetChassisIdType() string {
	if m != nil {
		return m.ChassisIdType
	}
	return ""
}

func (m *CfmPmChassisId) GetChassisIdTypeValue() uint32 {
	if m != nil {
		return m.ChassisIdTypeValue
	}
	return 0
}

func (m *CfmPmChassisId) GetChassisIdValue() *CfmPmChassisIdVal {
	if m != nil {
		return m.ChassisIdValue
	}
	return nil
}

func (m *CfmPmChassisId) GetChassisId() []byte {
	if m != nil {
		return m.ChassisId
	}
	return nil
}

type CfmPmSenderId struct {
	ChassisId               *CfmPmChassisId `protobuf:"bytes,1,opt,name=chassis_id,json=chassisId,proto3" json:"chassis_id,omitempty"`
	ManagementAddressDomain []byte          `protobuf:"bytes,2,opt,name=management_address_domain,json=managementAddressDomain,proto3" json:"management_address_domain,omitempty"`
	ManagementAddress       []byte          `protobuf:"bytes,3,opt,name=management_address,json=managementAddress,proto3" json:"management_address,omitempty"`
	XXX_NoUnkeyedLiteral    struct{}        `json:"-"`
	XXX_unrecognized        []byte          `json:"-"`
	XXX_sizecache           int32           `json:"-"`
}

func (m *CfmPmSenderId) Reset()         { *m = CfmPmSenderId{} }
func (m *CfmPmSenderId) String() string { return proto.CompactTextString(m) }
func (*CfmPmSenderId) ProtoMessage()    {}
func (*CfmPmSenderId) Descriptor() ([]byte, []int) {
	return fileDescriptor_c11005c776f1e5d5, []int{10}
}

func (m *CfmPmSenderId) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CfmPmSenderId.Unmarshal(m, b)
}
func (m *CfmPmSenderId) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CfmPmSenderId.Marshal(b, m, deterministic)
}
func (m *CfmPmSenderId) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CfmPmSenderId.Merge(m, src)
}
func (m *CfmPmSenderId) XXX_Size() int {
	return xxx_messageInfo_CfmPmSenderId.Size(m)
}
func (m *CfmPmSenderId) XXX_DiscardUnknown() {
	xxx_messageInfo_CfmPmSenderId.DiscardUnknown(m)
}

var xxx_messageInfo_CfmPmSenderId proto.InternalMessageInfo

func (m *CfmPmSenderId) GetChassisId() *CfmPmChassisId {
	if m != nil {
		return m.ChassisId
	}
	return nil
}

func (m *CfmPmSenderId) GetManagementAddressDomain() []byte {
	if m != nil {
		return m.ManagementAddressDomain
	}
	return nil
}

func (m *CfmPmSenderId) GetManagementAddress() []byte {
	if m != nil {
		return m.ManagementAddress
	}
	return nil
}

type CfmPmMepName struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CfmPmMepName) Reset()         { *m = CfmPmMepName{} }
func (m *CfmPmMepName) String() string { return proto.CompactTextString(m) }
func (*CfmPmMepName) ProtoMessage()    {}
func (*CfmPmMepName) Descriptor() ([]byte, []int) {
	return fileDescriptor_c11005c776f1e5d5, []int{11}
}

func (m *CfmPmMepName) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CfmPmMepName.Unmarshal(m, b)
}
func (m *CfmPmMepName) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CfmPmMepName.Marshal(b, m, deterministic)
}
func (m *CfmPmMepName) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CfmPmMepName.Merge(m, src)
}
func (m *CfmPmMepName) XXX_Size() int {
	return xxx_messageInfo_CfmPmMepName.Size(m)
}
func (m *CfmPmMepName) XXX_DiscardUnknown() {
	xxx_messageInfo_CfmPmMepName.DiscardUnknown(m)
}

var xxx_messageInfo_CfmPmMepName proto.InternalMessageInfo

func (m *CfmPmMepName) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type CfmPmOrgSpecTlv struct {
	Oui                  []byte   `protobuf:"bytes,1,opt,name=oui,proto3" json:"oui,omitempty"`
	Subtype              uint32   `protobuf:"varint,2,opt,name=subtype,proto3" json:"subtype,omitempty"`
	Value                []byte   `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CfmPmOrgSpecTlv) Reset()         { *m = CfmPmOrgSpecTlv{} }
func (m *CfmPmOrgSpecTlv) String() string { return proto.CompactTextString(m) }
func (*CfmPmOrgSpecTlv) ProtoMessage()    {}
func (*CfmPmOrgSpecTlv) Descriptor() ([]byte, []int) {
	return fileDescriptor_c11005c776f1e5d5, []int{12}
}

func (m *CfmPmOrgSpecTlv) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CfmPmOrgSpecTlv.Unmarshal(m, b)
}
func (m *CfmPmOrgSpecTlv) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CfmPmOrgSpecTlv.Marshal(b, m, deterministic)
}
func (m *CfmPmOrgSpecTlv) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CfmPmOrgSpecTlv.Merge(m, src)
}
func (m *CfmPmOrgSpecTlv) XXX_Size() int {
	return xxx_messageInfo_CfmPmOrgSpecTlv.Size(m)
}
func (m *CfmPmOrgSpecTlv) XXX_DiscardUnknown() {
	xxx_messageInfo_CfmPmOrgSpecTlv.DiscardUnknown(m)
}

var xxx_messageInfo_CfmPmOrgSpecTlv proto.InternalMessageInfo

func (m *CfmPmOrgSpecTlv) GetOui() []byte {
	if m != nil {
		return m.Oui
	}
	return nil
}

func (m *CfmPmOrgSpecTlv) GetSubtype() uint32 {
	if m != nil {
		return m.Subtype
	}
	return 0
}

func (m *CfmPmOrgSpecTlv) GetValue() []byte {
	if m != nil {
		return m.Value
	}
	return nil
}

type CfmPmUnknownTlv struct {
	Typecode             uint32   `protobuf:"varint,1,opt,name=typecode,proto3" json:"typecode,omitempty"`
	Value                []byte   `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CfmPmUnknownTlv) Reset()         { *m = CfmPmUnknownTlv{} }
func (m *CfmPmUnknownTlv) String() string { return proto.CompactTextString(m) }
func (*CfmPmUnknownTlv) ProtoMessage()    {}
func (*CfmPmUnknownTlv) Descriptor() ([]byte, []int) {
	return fileDescriptor_c11005c776f1e5d5, []int{13}
}

func (m *CfmPmUnknownTlv) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CfmPmUnknownTlv.Unmarshal(m, b)
}
func (m *CfmPmUnknownTlv) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CfmPmUnknownTlv.Marshal(b, m, deterministic)
}
func (m *CfmPmUnknownTlv) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CfmPmUnknownTlv.Merge(m, src)
}
func (m *CfmPmUnknownTlv) XXX_Size() int {
	return xxx_messageInfo_CfmPmUnknownTlv.Size(m)
}
func (m *CfmPmUnknownTlv) XXX_DiscardUnknown() {
	xxx_messageInfo_CfmPmUnknownTlv.DiscardUnknown(m)
}

var xxx_messageInfo_CfmPmUnknownTlv proto.InternalMessageInfo

func (m *CfmPmUnknownTlv) GetTypecode() uint32 {
	if m != nil {
		return m.Typecode
	}
	return 0
}

func (m *CfmPmUnknownTlv) GetValue() []byte {
	if m != nil {
		return m.Value
	}
	return nil
}

type CfmPmCcmV2 struct {
	Header                    *CfmPmCcmHdrV2     `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	SenderId                  *CfmPmSenderId     `protobuf:"bytes,2,opt,name=sender_id,json=senderId,proto3" json:"sender_id,omitempty"`
	PortStatus                string             `protobuf:"bytes,3,opt,name=port_status,json=portStatus,proto3" json:"port_status,omitempty"`
	InterfaceStatus           string             `protobuf:"bytes,4,opt,name=interface_status,json=interfaceStatus,proto3" json:"interface_status,omitempty"`
	MepName                   *CfmPmMepName      `protobuf:"bytes,5,opt,name=mep_name,json=mepName,proto3" json:"mep_name,omitempty"`
	AdditionalInterfaceStatus string             `protobuf:"bytes,6,opt,name=additional_interface_status,json=additionalInterfaceStatus,proto3" json:"additional_interface_status,omitempty"`
	OrganizationSpecificTlv   []*CfmPmOrgSpecTlv `protobuf:"bytes,7,rep,name=organization_specific_tlv,json=organizationSpecificTlv,proto3" json:"organization_specific_tlv,omitempty"`
	UnknownTlv                []*CfmPmUnknownTlv `protobuf:"bytes,8,rep,name=unknown_tlv,json=unknownTlv,proto3" json:"unknown_tlv,omitempty"`
	RawData                   []byte             `protobuf:"bytes,9,opt,name=raw_data,json=rawData,proto3" json:"raw_data,omitempty"`
	XXX_NoUnkeyedLiteral      struct{}           `json:"-"`
	XXX_unrecognized          []byte             `json:"-"`
	XXX_sizecache             int32              `json:"-"`
}

func (m *CfmPmCcmV2) Reset()         { *m = CfmPmCcmV2{} }
func (m *CfmPmCcmV2) String() string { return proto.CompactTextString(m) }
func (*CfmPmCcmV2) ProtoMessage()    {}
func (*CfmPmCcmV2) Descriptor() ([]byte, []int) {
	return fileDescriptor_c11005c776f1e5d5, []int{14}
}

func (m *CfmPmCcmV2) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CfmPmCcmV2.Unmarshal(m, b)
}
func (m *CfmPmCcmV2) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CfmPmCcmV2.Marshal(b, m, deterministic)
}
func (m *CfmPmCcmV2) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CfmPmCcmV2.Merge(m, src)
}
func (m *CfmPmCcmV2) XXX_Size() int {
	return xxx_messageInfo_CfmPmCcmV2.Size(m)
}
func (m *CfmPmCcmV2) XXX_DiscardUnknown() {
	xxx_messageInfo_CfmPmCcmV2.DiscardUnknown(m)
}

var xxx_messageInfo_CfmPmCcmV2 proto.InternalMessageInfo

func (m *CfmPmCcmV2) GetHeader() *CfmPmCcmHdrV2 {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *CfmPmCcmV2) GetSenderId() *CfmPmSenderId {
	if m != nil {
		return m.SenderId
	}
	return nil
}

func (m *CfmPmCcmV2) GetPortStatus() string {
	if m != nil {
		return m.PortStatus
	}
	return ""
}

func (m *CfmPmCcmV2) GetInterfaceStatus() string {
	if m != nil {
		return m.InterfaceStatus
	}
	return ""
}

func (m *CfmPmCcmV2) GetMepName() *CfmPmMepName {
	if m != nil {
		return m.MepName
	}
	return nil
}

func (m *CfmPmCcmV2) GetAdditionalInterfaceStatus() string {
	if m != nil {
		return m.AdditionalInterfaceStatus
	}
	return ""
}

func (m *CfmPmCcmV2) GetOrganizationSpecificTlv() []*CfmPmOrgSpecTlv {
	if m != nil {
		return m.OrganizationSpecificTlv
	}
	return nil
}

func (m *CfmPmCcmV2) GetUnknownTlv() []*CfmPmUnknownTlv {
	if m != nil {
		return m.UnknownTlv
	}
	return nil
}

func (m *CfmPmCcmV2) GetRawData() []byte {
	if m != nil {
		return m.RawData
	}
	return nil
}

type CfmPmRemoteMepStats struct {
	CcmsReceived                uint64          `protobuf:"varint,1,opt,name=ccms_received,json=ccmsReceived,proto3" json:"ccms_received,omitempty"`
	CcmsWrongLevel              uint64          `protobuf:"varint,2,opt,name=ccms_wrong_level,json=ccmsWrongLevel,proto3" json:"ccms_wrong_level,omitempty"`
	CcmsInvalidMaid             uint64          `protobuf:"varint,3,opt,name=ccms_invalid_maid,json=ccmsInvalidMaid,proto3" json:"ccms_invalid_maid,omitempty"`
	CcmsInvalidInterval         uint64          `protobuf:"varint,4,opt,name=ccms_invalid_interval,json=ccmsInvalidInterval,proto3" json:"ccms_invalid_interval,omitempty"`
	CcmsInvalidSourceMacAddress uint64          `protobuf:"varint,5,opt,name=ccms_invalid_source_mac_address,json=ccmsInvalidSourceMacAddress,proto3" json:"ccms_invalid_source_mac_address,omitempty"`
	CcmsOurMepId                uint64          `protobuf:"varint,6,opt,name=ccms_our_mep_id,json=ccmsOurMepId,proto3" json:"ccms_our_mep_id,omitempty"`
	CcmsRdi                     uint64          `protobuf:"varint,7,opt,name=ccms_rdi,json=ccmsRdi,proto3" json:"ccms_rdi,omitempty"`
	CcmsOutOfSequence           uint64          `protobuf:"varint,8,opt,name=ccms_out_of_sequence,json=ccmsOutOfSequence,proto3" json:"ccms_out_of_sequence,omitempty"`
	LastCcmReceivedTime         *CfmPmTimestamp `protobuf:"bytes,9,opt,name=last_ccm_received_time,json=lastCcmReceivedTime,proto3" json:"last_ccm_received_time,omitempty"`
	LastCcmSequenceNumber       uint32          `protobuf:"varint,10,opt,name=last_ccm_sequence_number,json=lastCcmSequenceNumber,proto3" json:"last_ccm_sequence_number,omitempty"`
	XXX_NoUnkeyedLiteral        struct{}        `json:"-"`
	XXX_unrecognized            []byte          `json:"-"`
	XXX_sizecache               int32           `json:"-"`
}

func (m *CfmPmRemoteMepStats) Reset()         { *m = CfmPmRemoteMepStats{} }
func (m *CfmPmRemoteMepStats) String() string { return proto.CompactTextString(m) }
func (*CfmPmRemoteMepStats) ProtoMessage()    {}
func (*CfmPmRemoteMepStats) Descriptor() ([]byte, []int) {
	return fileDescriptor_c11005c776f1e5d5, []int{15}
}

func (m *CfmPmRemoteMepStats) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CfmPmRemoteMepStats.Unmarshal(m, b)
}
func (m *CfmPmRemoteMepStats) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CfmPmRemoteMepStats.Marshal(b, m, deterministic)
}
func (m *CfmPmRemoteMepStats) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CfmPmRemoteMepStats.Merge(m, src)
}
func (m *CfmPmRemoteMepStats) XXX_Size() int {
	return xxx_messageInfo_CfmPmRemoteMepStats.Size(m)
}
func (m *CfmPmRemoteMepStats) XXX_DiscardUnknown() {
	xxx_messageInfo_CfmPmRemoteMepStats.DiscardUnknown(m)
}

var xxx_messageInfo_CfmPmRemoteMepStats proto.InternalMessageInfo

func (m *CfmPmRemoteMepStats) GetCcmsReceived() uint64 {
	if m != nil {
		return m.CcmsReceived
	}
	return 0
}

func (m *CfmPmRemoteMepStats) GetCcmsWrongLevel() uint64 {
	if m != nil {
		return m.CcmsWrongLevel
	}
	return 0
}

func (m *CfmPmRemoteMepStats) GetCcmsInvalidMaid() uint64 {
	if m != nil {
		return m.CcmsInvalidMaid
	}
	return 0
}

func (m *CfmPmRemoteMepStats) GetCcmsInvalidInterval() uint64 {
	if m != nil {
		return m.CcmsInvalidInterval
	}
	return 0
}

func (m *CfmPmRemoteMepStats) GetCcmsInvalidSourceMacAddress() uint64 {
	if m != nil {
		return m.CcmsInvalidSourceMacAddress
	}
	return 0
}

func (m *CfmPmRemoteMepStats) GetCcmsOurMepId() uint64 {
	if m != nil {
		return m.CcmsOurMepId
	}
	return 0
}

func (m *CfmPmRemoteMepStats) GetCcmsRdi() uint64 {
	if m != nil {
		return m.CcmsRdi
	}
	return 0
}

func (m *CfmPmRemoteMepStats) GetCcmsOutOfSequence() uint64 {
	if m != nil {
		return m.CcmsOutOfSequence
	}
	return 0
}

func (m *CfmPmRemoteMepStats) GetLastCcmReceivedTime() *CfmPmTimestamp {
	if m != nil {
		return m.LastCcmReceivedTime
	}
	return nil
}

func (m *CfmPmRemoteMepStats) GetLastCcmSequenceNumber() uint32 {
	if m != nil {
		return m.LastCcmSequenceNumber
	}
	return 0
}

type CfmPmRemoteMepV2 struct {
	MepId                uint32               `protobuf:"varint,1,opt,name=mep_id,json=mepId,proto3" json:"mep_id,omitempty"`
	MacAddress           string               `protobuf:"bytes,2,opt,name=mac_address,json=macAddress,proto3" json:"mac_address,omitempty"`
	ErrorState           *CfmPmRmepErrState   `protobuf:"bytes,3,opt,name=error_state,json=errorState,proto3" json:"error_state,omitempty"`
	CrossCheckState      string               `protobuf:"bytes,4,opt,name=cross_check_state,json=crossCheckState,proto3" json:"cross_check_state,omitempty"`
	PeerMepState         string               `protobuf:"bytes,5,opt,name=peer_mep_state,json=peerMepState,proto3" json:"peer_mep_state,omitempty"`
	LastUpDownTime       *CfmPmTimestamp      `protobuf:"bytes,6,opt,name=last_up_down_time,json=lastUpDownTime,proto3" json:"last_up_down_time,omitempty"`
	LastCcmReceived      *CfmPmCcmV2          `protobuf:"bytes,7,opt,name=last_ccm_received,json=lastCcmReceived,proto3" json:"last_ccm_received,omitempty"`
	Statistics           *CfmPmRemoteMepStats `protobuf:"bytes,8,opt,name=statistics,proto3" json:"statistics,omitempty"`
	CcmOffload           string               `protobuf:"bytes,9,opt,name=ccm_offload,json=ccmOffload,proto3" json:"ccm_offload,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *CfmPmRemoteMepV2) Reset()         { *m = CfmPmRemoteMepV2{} }
func (m *CfmPmRemoteMepV2) String() string { return proto.CompactTextString(m) }
func (*CfmPmRemoteMepV2) ProtoMessage()    {}
func (*CfmPmRemoteMepV2) Descriptor() ([]byte, []int) {
	return fileDescriptor_c11005c776f1e5d5, []int{16}
}

func (m *CfmPmRemoteMepV2) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CfmPmRemoteMepV2.Unmarshal(m, b)
}
func (m *CfmPmRemoteMepV2) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CfmPmRemoteMepV2.Marshal(b, m, deterministic)
}
func (m *CfmPmRemoteMepV2) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CfmPmRemoteMepV2.Merge(m, src)
}
func (m *CfmPmRemoteMepV2) XXX_Size() int {
	return xxx_messageInfo_CfmPmRemoteMepV2.Size(m)
}
func (m *CfmPmRemoteMepV2) XXX_DiscardUnknown() {
	xxx_messageInfo_CfmPmRemoteMepV2.DiscardUnknown(m)
}

var xxx_messageInfo_CfmPmRemoteMepV2 proto.InternalMessageInfo

func (m *CfmPmRemoteMepV2) GetMepId() uint32 {
	if m != nil {
		return m.MepId
	}
	return 0
}

func (m *CfmPmRemoteMepV2) GetMacAddress() string {
	if m != nil {
		return m.MacAddress
	}
	return ""
}

func (m *CfmPmRemoteMepV2) GetErrorState() *CfmPmRmepErrState {
	if m != nil {
		return m.ErrorState
	}
	return nil
}

func (m *CfmPmRemoteMepV2) GetCrossCheckState() string {
	if m != nil {
		return m.CrossCheckState
	}
	return ""
}

func (m *CfmPmRemoteMepV2) GetPeerMepState() string {
	if m != nil {
		return m.PeerMepState
	}
	return ""
}

func (m *CfmPmRemoteMepV2) GetLastUpDownTime() *CfmPmTimestamp {
	if m != nil {
		return m.LastUpDownTime
	}
	return nil
}

func (m *CfmPmRemoteMepV2) GetLastCcmReceived() *CfmPmCcmV2 {
	if m != nil {
		return m.LastCcmReceived
	}
	return nil
}

func (m *CfmPmRemoteMepV2) GetStatistics() *CfmPmRemoteMepStats {
	if m != nil {
		return m.Statistics
	}
	return nil
}

func (m *CfmPmRemoteMepV2) GetCcmOffload() string {
	if m != nil {
		return m.CcmOffload
	}
	return ""
}

type CfmPmRemoteMepsV2Bag struct {
	DomainXr             string            `protobuf:"bytes,50,opt,name=domain_xr,json=domainXr,proto3" json:"domain_xr,omitempty"`
	ServiceXr            string            `protobuf:"bytes,51,opt,name=service_xr,json=serviceXr,proto3" json:"service_xr,omitempty"`
	Level                string            `protobuf:"bytes,52,opt,name=level,proto3" json:"level,omitempty"`
	MepId                uint32            `protobuf:"varint,53,opt,name=mep_id,json=mepId,proto3" json:"mep_id,omitempty"`
	InterfaceXr          string            `protobuf:"bytes,54,opt,name=interface_xr,json=interfaceXr,proto3" json:"interface_xr,omitempty"`
	MepDirection         string            `protobuf:"bytes,55,opt,name=mep_direction,json=mepDirection,proto3" json:"mep_direction,omitempty"`
	PeerMep              *CfmPmRemoteMepV2 `protobuf:"bytes,56,opt,name=peer_mep,json=peerMep,proto3" json:"peer_mep,omitempty"`
	Standby              bool              `protobuf:"varint,57,opt,name=standby,proto3" json:"standby,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *CfmPmRemoteMepsV2Bag) Reset()         { *m = CfmPmRemoteMepsV2Bag{} }
func (m *CfmPmRemoteMepsV2Bag) String() string { return proto.CompactTextString(m) }
func (*CfmPmRemoteMepsV2Bag) ProtoMessage()    {}
func (*CfmPmRemoteMepsV2Bag) Descriptor() ([]byte, []int) {
	return fileDescriptor_c11005c776f1e5d5, []int{17}
}

func (m *CfmPmRemoteMepsV2Bag) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CfmPmRemoteMepsV2Bag.Unmarshal(m, b)
}
func (m *CfmPmRemoteMepsV2Bag) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CfmPmRemoteMepsV2Bag.Marshal(b, m, deterministic)
}
func (m *CfmPmRemoteMepsV2Bag) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CfmPmRemoteMepsV2Bag.Merge(m, src)
}
func (m *CfmPmRemoteMepsV2Bag) XXX_Size() int {
	return xxx_messageInfo_CfmPmRemoteMepsV2Bag.Size(m)
}
func (m *CfmPmRemoteMepsV2Bag) XXX_DiscardUnknown() {
	xxx_messageInfo_CfmPmRemoteMepsV2Bag.DiscardUnknown(m)
}

var xxx_messageInfo_CfmPmRemoteMepsV2Bag proto.InternalMessageInfo

func (m *CfmPmRemoteMepsV2Bag) GetDomainXr() string {
	if m != nil {
		return m.DomainXr
	}
	return ""
}

func (m *CfmPmRemoteMepsV2Bag) GetServiceXr() string {
	if m != nil {
		return m.ServiceXr
	}
	return ""
}

func (m *CfmPmRemoteMepsV2Bag) GetLevel() string {
	if m != nil {
		return m.Level
	}
	return ""
}

func (m *CfmPmRemoteMepsV2Bag) GetMepId() uint32 {
	if m != nil {
		return m.MepId
	}
	return 0
}

func (m *CfmPmRemoteMepsV2Bag) GetInterfaceXr() string {
	if m != nil {
		return m.InterfaceXr
	}
	return ""
}

func (m *CfmPmRemoteMepsV2Bag) GetMepDirection() string {
	if m != nil {
		return m.MepDirection
	}
	return ""
}

func (m *CfmPmRemoteMepsV2Bag) GetPeerMep() *CfmPmRemoteMepV2 {
	if m != nil {
		return m.PeerMep
	}
	return nil
}

func (m *CfmPmRemoteMepsV2Bag) GetStandby() bool {
	if m != nil {
		return m.Standby
	}
	return false
}

func init() {
	proto.RegisterType((*CfmPmRemoteMepsV2Bag_KEYS)(nil), "cisco_ios_xr_ethernet_cfm_oper.cfm.global.peer_me_pv2s.peer_me_pv2.cfm_pm_remote_meps_v2_bag_KEYS")
	proto.RegisterType((*CfmPmRmepErrState)(nil), "cisco_ios_xr_ethernet_cfm_oper.cfm.global.peer_me_pv2s.peer_me_pv2.cfm_pm_rmep_err_state")
	proto.RegisterType((*CfmPmTimestamp)(nil), "cisco_ios_xr_ethernet_cfm_oper.cfm.global.peer_me_pv2s.peer_me_pv2.cfm_pm_timestamp")
	proto.RegisterType((*CfmBagMdidMacName)(nil), "cisco_ios_xr_ethernet_cfm_oper.cfm.global.peer_me_pv2s.peer_me_pv2.cfm_bag_mdid_mac_name")
	proto.RegisterType((*CfmBagMdidV2)(nil), "cisco_ios_xr_ethernet_cfm_oper.cfm.global.peer_me_pv2s.peer_me_pv2.cfm_bag_mdid_v2")
	proto.RegisterType((*CfmBagSmanVpnidName)(nil), "cisco_ios_xr_ethernet_cfm_oper.cfm.global.peer_me_pv2s.peer_me_pv2.cfm_bag_sman_vpnid_name")
	proto.RegisterType((*CfmBagSmanV2)(nil), "cisco_ios_xr_ethernet_cfm_oper.cfm.global.peer_me_pv2s.peer_me_pv2.cfm_bag_sman_v2")
	proto.RegisterType((*CfmPmCcmHdrV2)(nil), "cisco_ios_xr_ethernet_cfm_oper.cfm.global.peer_me_pv2s.peer_me_pv2.cfm_pm_ccm_hdr_v2")
	proto.RegisterType((*CfmPmChassisIdVal)(nil), "cisco_ios_xr_ethernet_cfm_oper.cfm.global.peer_me_pv2s.peer_me_pv2.cfm_pm_chassis_id_val")
	proto.RegisterType((*CfmPmChassisId)(nil), "cisco_ios_xr_ethernet_cfm_oper.cfm.global.peer_me_pv2s.peer_me_pv2.cfm_pm_chassis_id")
	proto.RegisterType((*CfmPmSenderId)(nil), "cisco_ios_xr_ethernet_cfm_oper.cfm.global.peer_me_pv2s.peer_me_pv2.cfm_pm_sender_id")
	proto.RegisterType((*CfmPmMepName)(nil), "cisco_ios_xr_ethernet_cfm_oper.cfm.global.peer_me_pv2s.peer_me_pv2.cfm_pm_mep_name")
	proto.RegisterType((*CfmPmOrgSpecTlv)(nil), "cisco_ios_xr_ethernet_cfm_oper.cfm.global.peer_me_pv2s.peer_me_pv2.cfm_pm_org_spec_tlv")
	proto.RegisterType((*CfmPmUnknownTlv)(nil), "cisco_ios_xr_ethernet_cfm_oper.cfm.global.peer_me_pv2s.peer_me_pv2.cfm_pm_unknown_tlv")
	proto.RegisterType((*CfmPmCcmV2)(nil), "cisco_ios_xr_ethernet_cfm_oper.cfm.global.peer_me_pv2s.peer_me_pv2.cfm_pm_ccm_v2")
	proto.RegisterType((*CfmPmRemoteMepStats)(nil), "cisco_ios_xr_ethernet_cfm_oper.cfm.global.peer_me_pv2s.peer_me_pv2.cfm_pm_remote_mep_stats")
	proto.RegisterType((*CfmPmRemoteMepV2)(nil), "cisco_ios_xr_ethernet_cfm_oper.cfm.global.peer_me_pv2s.peer_me_pv2.cfm_pm_remote_mep_v2")
	proto.RegisterType((*CfmPmRemoteMepsV2Bag)(nil), "cisco_ios_xr_ethernet_cfm_oper.cfm.global.peer_me_pv2s.peer_me_pv2.cfm_pm_remote_meps_v2_bag")
}

func init() { proto.RegisterFile("cfm_pm_remote_meps_v2_bag.proto", fileDescriptor_c11005c776f1e5d5) }

var fileDescriptor_c11005c776f1e5d5 = []byte{
	// 1826 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x58, 0xcf, 0x73, 0x23, 0x47,
	0xf5, 0x2f, 0xd9, 0xb2, 0x25, 0x3d, 0x49, 0xfe, 0xd1, 0x6b, 0xef, 0x8e, 0x77, 0xbf, 0xdf, 0xac,
	0x23, 0x02, 0x2c, 0xa1, 0x62, 0x40, 0x81, 0x04, 0x72, 0xa0, 0x2a, 0x59, 0x27, 0x55, 0x2e, 0xb2,
	0xbb, 0x45, 0xcb, 0xc9, 0x6e, 0x2a, 0x87, 0xae, 0x76, 0x4f, 0x4b, 0x9e, 0xda, 0xf9, 0x95, 0xee,
	0xd1, 0xd8, 0x9b, 0x14, 0xc5, 0x81, 0x13, 0xe7, 0x14, 0xc5, 0xff, 0x02, 0x67, 0xf8, 0x27, 0xe0,
	0xca, 0x5f, 0xc0, 0x8d, 0x13, 0xf5, 0x5e, 0xf7, 0x8c, 0x46, 0xd6, 0xe6, 0x84, 0x7c, 0x9b, 0x7e,
	0xfd, 0xfa, 0xf5, 0xeb, 0xcf, 0xfb, 0x3d, 0xf0, 0x50, 0x4d, 0x13, 0x91, 0x27, 0xc2, 0xe8, 0x24,
	0x2b, 0xb4, 0x48, 0x74, 0x6e, 0x45, 0x39, 0x16, 0x17, 0x72, 0x76, 0x92, 0x9b, 0xac, 0xc8, 0xd8,
	0x47, 0x2a, 0xb2, 0x2a, 0x13, 0x51, 0x66, 0xc5, 0xb5, 0x11, 0xba, 0xb8, 0xd4, 0x26, 0xd5, 0x85,
	0xc0, 0x63, 0x59, 0xae, 0xcd, 0x89, 0x9a, 0x26, 0x27, 0xb3, 0x38, 0xbb, 0x90, 0xf1, 0x49, 0xae,
	0xb5, 0x11, 0x89, 0x16, 0x79, 0x39, 0xb6, 0xcd, 0xc5, 0xe8, 0x9f, 0x2d, 0x78, 0xe3, 0x3b, 0xef,
	0x11, 0xbf, 0xf9, 0xf8, 0x8b, 0x09, 0xbb, 0x0b, 0xdb, 0x61, 0x96, 0xc8, 0x28, 0x0d, 0x5a, 0xc7,
	0xad, 0x47, 0x3d, 0xee, 0x57, 0x2c, 0x80, 0x8e, 0xd5, 0xa6, 0x8c, 0x94, 0x0e, 0x36, 0x68, 0xa3,
	0x5a, 0xb2, 0x63, 0x18, 0xc4, 0x99, 0x92, 0x31, 0xca, 0x12, 0x51, 0x18, 0x6c, 0x1e, 0xb7, 0x1e,
	0x0d, 0x39, 0x10, 0xed, 0x89, 0xce, 0xcf, 0x42, 0xf6, 0x7f, 0xd0, 0x8b, 0xd2, 0x42, 0x9b, 0xa9,
	0x54, 0x3a, 0x68, 0xd3, 0xe9, 0x05, 0x81, 0xbd, 0x01, 0x7d, 0xaf, 0x23, 0x1d, 0xdf, 0xa2, 0xe3,
	0x3d, 0x24, 0xb9, 0xd3, 0x8f, 0x60, 0xcf, 0xed, 0x4b, 0x25, 0x64, 0x18, 0x1a, 0x6d, 0x6d, 0xb0,
	0x4d, 0x42, 0x76, 0x88, 0x49, 0xaa, 0x0f, 0x1d, 0x75, 0xf4, 0xb7, 0x0d, 0x38, 0xac, 0x9e, 0x87,
	0xd2, 0xb4, 0x31, 0xc2, 0x16, 0xb2, 0xd0, 0xec, 0x3d, 0xb8, 0x17, 0x67, 0xd6, 0x8a, 0xe2, 0xd2,
	0x68, 0x7b, 0x99, 0xc5, 0xa1, 0xd0, 0xd7, 0x4a, 0xeb, 0x50, 0x87, 0xf4, 0xcc, 0x2e, 0x3f, 0xc4,
	0xed, 0xf3, 0x6a, 0xf7, 0x63, 0xbf, 0xc9, 0xbe, 0x07, 0xc3, 0x28, 0x2d, 0x65, 0x1c, 0x85, 0x22,
	0xd6, 0xa5, 0x8e, 0xe9, 0xed, 0x5d, 0x3e, 0xf0, 0xc4, 0x4f, 0x91, 0xc6, 0xde, 0x84, 0x6a, 0x2d,
	0x12, 0xe9, 0x01, 0xe8, 0xf2, 0xbe, 0xa7, 0x3d, 0x91, 0x51, 0xc8, 0x7e, 0x0a, 0x07, 0x15, 0x8b,
	0x52, 0x89, 0xa0, 0xc7, 0x97, 0x32, 0x26, 0x30, 0xba, 0x9c, 0xf9, 0xbd, 0xc7, 0x2a, 0x39, 0xf3,
	0x3b, 0xf8, 0x6a, 0xa3, 0x95, 0x8e, 0x4a, 0x1d, 0x8a, 0x6c, 0x4e, 0xaf, 0x27, 0x68, 0xba, 0x7c,
	0xa7, 0xa2, 0x3f, 0x9b, 0xe3, 0xe3, 0xd9, 0x3b, 0x70, 0x67, 0x99, 0xd3, 0xe1, 0xb8, 0x4d, 0xcc,
	0x7b, 0x4d, 0x66, 0x82, 0xf3, 0x4d, 0x18, 0xd4, 0xec, 0x26, 0x8c, 0x82, 0x8e, 0xd3, 0xb6, 0xa2,
	0xf1, 0x30, 0x1a, 0x3d, 0x85, 0x3d, 0x0f, 0x63, 0x11, 0x25, 0xda, 0x16, 0x32, 0xc9, 0x9d, 0xfd,
	0x55, 0x96, 0x86, 0x96, 0x10, 0x1b, 0xf2, 0x6a, 0xc9, 0x8e, 0xa1, 0x9f, 0xca, 0x34, 0xab, 0x76,
	0x37, 0x68, 0xb7, 0x49, 0x1a, 0x71, 0x67, 0x16, 0xf4, 0xb1, 0x24, 0x24, 0x94, 0x94, 0x48, 0x65,
	0xa2, 0xd9, 0x43, 0xe8, 0x37, 0xad, 0xea, 0x3c, 0x0e, 0x92, 0xda, 0xa2, 0x78, 0x2b, 0x62, 0x35,
	0xd3, 0xc6, 0xcb, 0xad, 0x96, 0xa3, 0x3f, 0x6d, 0xc0, 0xee, 0x92, 0xd0, 0x72, 0xcc, 0xde, 0x86,
	0x7d, 0xfa, 0x9c, 0x66, 0x26, 0x91, 0x85, 0x28, 0x65, 0x3c, 0xd7, 0x5e, 0xe8, 0x2e, 0x6e, 0x7c,
	0x42, 0xf4, 0xcf, 0x91, 0xcc, 0x46, 0x30, 0x0c, 0x53, 0x2b, 0xe2, 0xe8, 0xa5, 0x26, 0x5d, 0xbc,
	0x57, 0xf7, 0xc3, 0xd4, 0x7e, 0x1a, 0xbd, 0xd4, 0x4f, 0x51, 0xbd, 0x02, 0xba, 0x95, 0xaa, 0x64,
	0xd4, 0xfe, 0xf8, 0x8b, 0x93, 0xff, 0x3d, 0x0a, 0x4f, 0x5e, 0x8b, 0x05, 0xef, 0x24, 0x52, 0x3d,
	0xf5, 0xa0, 0xd8, 0xc2, 0x44, 0xe9, 0xcc, 0x5d, 0xec, 0xe2, 0x05, 0x1c, 0x89, 0x18, 0x1e, 0x40,
	0x8f, 0x8e, 0x86, 0xb2, 0x90, 0xe4, 0x13, 0x03, 0xde, 0x45, 0xc2, 0xa9, 0x2c, 0xe4, 0xe8, 0x43,
	0xb8, 0x57, 0xc9, 0xb7, 0x89, 0x4c, 0x45, 0x99, 0xa7, 0x51, 0xe8, 0xd0, 0xde, 0x83, 0xcd, 0x6c,
	0x1e, 0x79, 0xf3, 0xe1, 0x27, 0x3b, 0x80, 0xad, 0x28, 0x0d, 0xf5, 0xb5, 0x07, 0xd7, 0x2d, 0x46,
	0xff, 0x69, 0x40, 0xeb, 0x64, 0x8c, 0xd9, 0x07, 0x70, 0xdf, 0x5e, 0x66, 0xa6, 0x10, 0x89, 0x24,
	0x61, 0xaf, 0xc3, 0xf8, 0x2e, 0x71, 0x3c, 0x91, 0xa8, 0x64, 0x13, 0xea, 0x63, 0x18, 0x94, 0xb1,
	0x4c, 0x85, 0xd7, 0xc3, 0x5f, 0x06, 0x48, 0x3b, 0x0b, 0x5f, 0xf7, 0xe4, 0xcd, 0x95, 0x27, 0x53,
	0x88, 0x91, 0xe1, 0x17, 0xa0, 0x0c, 0x31, 0xc4, 0x88, 0x46, 0x2c, 0xdf, 0x40, 0xbf, 0xcc, 0x17,
	0x97, 0x6c, 0x91, 0xbd, 0xbe, 0x5c, 0xa7, 0xbd, 0x6e, 0xe0, 0xc9, 0x7b, 0x65, 0x5e, 0x3d, 0xe0,
	0x01, 0xf4, 0x22, 0xa5, 0xc4, 0x85, 0xb4, 0x3a, 0xf4, 0xc9, 0xa9, 0x1b, 0x29, 0xf5, 0x11, 0xae,
	0xd9, 0x8f, 0x81, 0x2d, 0x63, 0x47, 0x86, 0xeb, 0x90, 0xe1, 0x76, 0x1b, 0x98, 0x91, 0xfd, 0xfe,
	0xb5, 0x09, 0xfb, 0x3e, 0xf8, 0x30, 0x53, 0x5c, 0x86, 0x06, 0xe1, 0x3f, 0x80, 0x2d, 0x97, 0x7f,
	0x1c, 0xd2, 0x6e, 0x81, 0xd1, 0x51, 0x6a, 0x63, 0xa3, 0x2c, 0xad, 0xa2, 0xc3, 0x2f, 0xd9, 0x7d,
	0xe8, 0xd6, 0x39, 0x66, 0xd3, 0xab, 0x53, 0x65, 0x96, 0x3d, 0xd8, 0xc4, 0xb8, 0x77, 0xa9, 0x07,
	0x3f, 0xd9, 0x0f, 0x61, 0xd7, 0xea, 0xaf, 0xe6, 0x3a, 0x55, 0x5a, 0xa4, 0xf3, 0xe4, 0x42, 0x1b,
	0x9f, 0x85, 0x77, 0x2a, 0xf2, 0x53, 0xa2, 0xb2, 0x43, 0xd8, 0x6e, 0x64, 0x97, 0x21, 0xdf, 0x4a,
	0x28, 0xa5, 0x60, 0x18, 0x2f, 0xe2, 0x8e, 0x5e, 0x36, 0xe4, 0xb0, 0x88, 0x38, 0x36, 0x83, 0x36,
	0xae, 0x82, 0x2e, 0x19, 0x65, 0xb2, 0xf6, 0x20, 0x2a, 0xc7, 0x9c, 0x2e, 0x60, 0x3f, 0x81, 0x83,
	0xd7, 0xb9, 0x69, 0xd0, 0x23, 0x95, 0xf6, 0x57, 0x1c, 0x94, 0x5d, 0xc1, 0x70, 0xe9, 0x40, 0x00,
	0xeb, 0x57, 0xd1, 0xc7, 0x10, 0xef, 0x37, 0xae, 0x1f, 0xfd, 0xb5, 0x55, 0xd7, 0x2a, 0x75, 0x29,
	0xad, 0x8d, 0x2c, 0xba, 0x2e, 0xda, 0xe7, 0x6d, 0xd8, 0x6f, 0x50, 0xfc, 0x03, 0x7c, 0x16, 0xf3,
	0x1b, 0x67, 0x15, 0xb0, 0xcb, 0xbc, 0x2e, 0x60, 0x7c, 0x26, 0x5b, 0xf0, 0x4e, 0x88, 0xcc, 0xde,
	0x82, 0x9d, 0x06, 0x2f, 0xd6, 0x13, 0xe7, 0x19, 0x83, 0x9a, 0x11, 0xab, 0xc9, 0x32, 0x97, 0x91,
	0x57, 0xe4, 0x28, 0x83, 0x06, 0x17, 0x97, 0x57, 0xa3, 0x6f, 0x37, 0x16, 0x5e, 0x5a, 0x73, 0xb3,
	0x1f, 0xc0, 0x6e, 0xe3, 0x6c, 0xf1, 0x2a, 0xaf, 0x32, 0xc3, 0xb0, 0x3e, 0x7c, 0xfe, 0x2a, 0xd7,
	0xec, 0x67, 0x70, 0x78, 0x83, 0xcf, 0xe7, 0x11, 0xe7, 0xc5, 0x6c, 0x89, 0xdb, 0xe5, 0x90, 0x3f,
	0xb4, 0x60, 0x6f, 0x19, 0xa7, 0xf9, 0xda, 0x73, 0xf2, 0x8a, 0x29, 0xf8, 0x4e, 0xad, 0x89, 0xd3,
	0xe2, 0xff, 0x01, 0x16, 0x1c, 0x1e, 0x98, 0x5e, 0xcd, 0x33, 0xfa, 0x77, 0xab, 0x2e, 0x9c, 0x56,
	0xa7, 0xa1, 0x36, 0x08, 0x4a, 0xb1, 0x74, 0xa6, 0x45, 0x2a, 0x7f, 0x76, 0x2b, 0x2a, 0x37, 0x54,
	0x61, 0x1f, 0xc0, 0x51, 0x22, 0x53, 0x39, 0xd3, 0x89, 0x4e, 0x8b, 0xaa, 0xc0, 0x0a, 0xdf, 0xd9,
	0x6d, 0x90, 0xe2, 0xf7, 0x16, 0x0c, 0xbe, 0xdc, 0x9e, 0xba, 0x56, 0xef, 0x1d, 0x60, 0xab, 0x67,
	0x09, 0xec, 0x01, 0xdf, 0x5f, 0x39, 0x34, 0xfa, 0xbe, 0xab, 0x16, 0x79, 0x42, 0x9d, 0x07, 0x55,
	0x1a, 0x06, 0x6d, 0x0a, 0x26, 0x67, 0x7d, 0xfa, 0x1e, 0x3d, 0x87, 0x3b, 0x9e, 0x2d, 0x33, 0x33,
	0x61, 0x73, 0xad, 0x44, 0x11, 0x97, 0xcd, 0xa2, 0x34, 0x70, 0x45, 0x09, 0x3b, 0x8d, 0xf9, 0x05,
	0x79, 0x8f, 0xcf, 0x6a, 0x7e, 0x89, 0x59, 0x70, 0x61, 0xf8, 0x01, 0x77, 0x8b, 0xd1, 0x27, 0xc0,
	0xbc, 0xe0, 0x79, 0xfa, 0x32, 0xcd, 0xae, 0x52, 0x92, 0x7b, 0x1f, 0xba, 0x78, 0x46, 0x65, 0xa1,
	0xf6, 0x15, 0xaf, 0x5e, 0x2f, 0xe4, 0x6c, 0x34, 0xe5, 0xfc, 0x79, 0x1b, 0x86, 0x8d, 0xcc, 0x5b,
	0x8e, 0x59, 0x02, 0xdb, 0x97, 0x5a, 0x86, 0xda, 0xdc, 0x86, 0xd9, 0xea, 0xe4, 0xce, 0xfd, 0x25,
	0xec, 0x2b, 0xe8, 0xd5, 0x6e, 0x43, 0xaa, 0xf5, 0xc7, 0xe7, 0x6b, 0xbc, 0xb1, 0x96, 0xcd, 0xbb,
	0xee, 0xd3, 0x65, 0xee, 0x1c, 0xb3, 0x1f, 0x76, 0xc9, 0x73, 0x5b, 0x15, 0x5e, 0x24, 0x4d, 0x88,
	0xc2, 0x7e, 0x04, 0x7b, 0x75, 0xa7, 0x5e, 0x71, 0xb9, 0x8e, 0x64, 0xb7, 0xa6, 0x7b, 0xd6, 0x14,
	0xba, 0x95, 0x03, 0xf8, 0xea, 0x3b, 0x59, 0xa3, 0xf6, 0x95, 0x68, 0xde, 0x49, 0x74, 0x4e, 0x35,
	0xf7, 0xd7, 0xf0, 0x40, 0x86, 0x61, 0x54, 0x44, 0x59, 0x2a, 0x63, 0xb1, 0xa2, 0xa5, 0xab, 0xc2,
	0x47, 0x0b, 0x96, 0xb3, 0x1b, 0xfa, 0x7e, 0xdb, 0x82, 0xa3, 0xcc, 0xcc, 0x64, 0x1a, 0x7d, 0x2d,
	0x91, 0x83, 0x7c, 0x32, 0x9a, 0x46, 0xe4, 0x97, 0x41, 0xe7, 0x78, 0xf3, 0x51, 0x7f, 0xfc, 0x7c,
	0x8d, 0x2f, 0x68, 0xba, 0x3d, 0xbf, 0xd7, 0xbc, 0x79, 0xe2, 0x2f, 0x3e, 0x8f, 0x4b, 0x76, 0x05,
	0xfd, 0x86, 0x1b, 0x07, 0x5d, 0x52, 0xe3, 0xf3, 0x35, 0xaa, 0xd1, 0x90, 0xce, 0xc1, 0x2f, 0xf0,
	0xe2, 0x23, 0xe8, 0x1a, 0x79, 0xe5, 0x7a, 0x93, 0x1e, 0xc5, 0x45, 0xc7, 0xc8, 0x2b, 0xea, 0x49,
	0xfe, 0xde, 0x76, 0x4d, 0xe5, 0xd2, 0xd8, 0x48, 0x38, 0x5b, 0x9c, 0x90, 0x94, 0x4a, 0xac, 0xa8,
	0xe6, 0x07, 0x0a, 0x95, 0x36, 0x1f, 0x20, 0x91, 0x7b, 0x1a, 0x0e, 0x33, 0xc4, 0x74, 0x65, 0xb2,
	0x74, 0xd6, 0x98, 0xa4, 0xda, 0x7c, 0x07, 0xe9, 0xcf, 0x91, 0xec, 0x66, 0x29, 0x2c, 0x68, 0xc8,
	0xb9, 0x32, 0x50, 0xb5, 0xf9, 0x2e, 0x6e, 0x9c, 0x35, 0x86, 0xaa, 0x31, 0x1c, 0x2e, 0xf1, 0x2e,
	0x4d, 0x55, 0x6d, 0x7e, 0xa7, 0xc1, 0x5f, 0x8f, 0x55, 0xa7, 0xf0, 0x70, 0xe9, 0x8c, 0xcd, 0xe6,
	0x46, 0xe9, 0xa5, 0xd9, 0x72, 0x8b, 0x4e, 0x3f, 0x68, 0x9c, 0x9e, 0x10, 0xd3, 0x62, 0xd0, 0x64,
	0x98, 0xf2, 0x50, 0xca, 0x8d, 0x71, 0xcb, 0x3f, 0xbb, 0x1e, 0xb5, 0x8e, 0xa0, 0xeb, 0xb0, 0xf1,
	0x63, 0x56, 0x9b, 0x77, 0x08, 0x96, 0x30, 0xc2, 0x46, 0xc5, 0x4b, 0x28, 0x44, 0x36, 0x15, 0x55,
	0x9f, 0x45, 0x1d, 0x52, 0x9b, 0xef, 0x3b, 0x31, 0xc5, 0xb3, 0xe9, 0xc4, 0x6f, 0xb0, 0x3f, 0xb6,
	0xe0, 0x6e, 0x2c, 0x6d, 0x41, 0x89, 0xa3, 0x1e, 0xe0, 0x70, 0x3e, 0x23, 0x6b, 0xad, 0x37, 0x55,
	0xd4, 0x63, 0x1f, 0xbf, 0x83, 0x77, 0x3e, 0x56, 0x49, 0x65, 0xca, 0xf3, 0x28, 0xd1, 0xec, 0x7d,
	0x08, 0x6a, 0x55, 0x6e, 0x36, 0x8e, 0x40, 0xb9, 0xf6, 0xd0, 0x1f, 0x9b, 0x2c, 0xf5, 0x8f, 0xa3,
	0xbf, 0x6c, 0xc1, 0xc1, 0xaa, 0x23, 0x95, 0xe3, 0x46, 0x63, 0xd9, 0xba, 0xd9, 0x58, 0x36, 0x2c,
	0xb3, 0xb1, 0x32, 0x1f, 0x7e, 0x0d, 0x7d, 0x6d, 0x4c, 0xe6, 0xc7, 0xfc, 0x5b, 0x68, 0x08, 0x96,
	0xff, 0x23, 0x70, 0xa0, 0xdb, 0x26, 0xf4, 0x4f, 0x01, 0x5d, 0xd5, 0x64, 0xd6, 0x0a, 0x75, 0xa9,
	0xd5, 0x4b, 0xaf, 0x81, 0xcf, 0x8d, 0xb4, 0xf1, 0x18, 0xe9, 0x8e, 0xf7, 0x2d, 0xd8, 0xa9, 0xff,
	0x71, 0x38, 0xc6, 0x2d, 0xd7, 0x7b, 0xf9, 0xdf, 0x1c, 0x8e, 0xeb, 0xf7, 0xb0, 0x4f, 0xb8, 0xce,
	0x73, 0x11, 0x52, 0x88, 0xa2, 0x75, 0xb7, 0x6f, 0xd1, 0xba, 0x3b, 0x78, 0xdd, 0x67, 0xf9, 0x29,
	0xa6, 0x00, 0x34, 0xec, 0xef, 0xbc, 0x02, 0x4d, 0x1f, 0x23, 0xcf, 0xed, 0x8f, 0x7f, 0xbb, 0xe6,
	0xda, 0x57, 0x8e, 0xf9, 0xee, 0x0d, 0xdf, 0x62, 0xdf, 0x00, 0x20, 0x38, 0x91, 0x2d, 0x22, 0x65,
	0xfd, 0xb0, 0xf0, 0xe5, 0x3a, 0x8d, 0x79, 0x23, 0x79, 0xf1, 0xc6, 0x75, 0xe8, 0x6b, 0xa8, 0x57,
	0x36, 0x9d, 0xc6, 0x99, 0x0c, 0x29, 0xa8, 0x7a, 0x1c, 0x94, 0x4a, 0x9e, 0x39, 0xca, 0xe8, 0x1f,
	0x1b, 0x70, 0xf4, 0x9d, 0x3f, 0xcf, 0x70, 0x02, 0x74, 0xdd, 0x95, 0xb8, 0x36, 0xc1, 0xd8, 0x8d,
	0x5c, 0x8e, 0xf0, 0xc2, 0x60, 0xdf, 0xe8, 0xff, 0x96, 0xe1, 0xee, 0xbb, 0xee, 0x0f, 0x98, 0xa7,
	0xbc, 0x30, 0x8b, 0xe9, 0xee, 0xe7, 0xcd, 0xe9, 0x6e, 0x11, 0x13, 0xbf, 0x68, 0xc6, 0x84, 0x1f,
	0x85, 0x5d, 0xad, 0xbb, 0x36, 0xc1, 0x7b, 0xee, 0xbf, 0x45, 0x4d, 0x7b, 0x61, 0x30, 0x27, 0xe3,
	0xc9, 0x30, 0x32, 0x5a, 0x61, 0x7d, 0x09, 0xde, 0x77, 0xce, 0x96, 0xe8, 0xfc, 0xb4, 0xa2, 0x31,
	0x0b, 0xdd, 0xca, 0x25, 0x83, 0x5f, 0x12, 0xd4, 0x2f, 0x6e, 0x07, 0xea, 0x72, 0xcc, 0x3b, 0xde,
	0xcd, 0xa9, 0xb7, 0x2b, 0x64, 0x1a, 0x5e, 0xbc, 0x0a, 0x7e, 0x45, 0xf3, 0x67, 0xb5, 0xbc, 0xd8,
	0xa6, 0xbf, 0x9c, 0xef, 0xfe, 0x37, 0x00, 0x00, 0xff, 0xff, 0x47, 0x7a, 0xa3, 0x73, 0x08, 0x15,
	0x00, 0x00,
}
