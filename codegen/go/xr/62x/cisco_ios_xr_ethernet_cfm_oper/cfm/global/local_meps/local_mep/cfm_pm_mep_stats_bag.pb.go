/*
Copyright 2019 Cisco Systems

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: cfm_pm_mep_stats_bag.proto

package cisco_ios_xr_ethernet_cfm_oper_cfm_global_local_meps_local_mep

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type CfmPmMepStatsBag_KEYS struct {
	Domain               string   `protobuf:"bytes,1,opt,name=domain,proto3" json:"domain,omitempty"`
	Service              string   `protobuf:"bytes,2,opt,name=service,proto3" json:"service,omitempty"`
	MepId                uint32   `protobuf:"varint,3,opt,name=mep_id,json=mepId,proto3" json:"mep_id,omitempty"`
	Interface            string   `protobuf:"bytes,4,opt,name=interface,proto3" json:"interface,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CfmPmMepStatsBag_KEYS) Reset()         { *m = CfmPmMepStatsBag_KEYS{} }
func (m *CfmPmMepStatsBag_KEYS) String() string { return proto.CompactTextString(m) }
func (*CfmPmMepStatsBag_KEYS) ProtoMessage()    {}
func (*CfmPmMepStatsBag_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_9737cebd38e93d90, []int{0}
}

func (m *CfmPmMepStatsBag_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CfmPmMepStatsBag_KEYS.Unmarshal(m, b)
}
func (m *CfmPmMepStatsBag_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CfmPmMepStatsBag_KEYS.Marshal(b, m, deterministic)
}
func (m *CfmPmMepStatsBag_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CfmPmMepStatsBag_KEYS.Merge(m, src)
}
func (m *CfmPmMepStatsBag_KEYS) XXX_Size() int {
	return xxx_messageInfo_CfmPmMepStatsBag_KEYS.Size(m)
}
func (m *CfmPmMepStatsBag_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_CfmPmMepStatsBag_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_CfmPmMepStatsBag_KEYS proto.InternalMessageInfo

func (m *CfmPmMepStatsBag_KEYS) GetDomain() string {
	if m != nil {
		return m.Domain
	}
	return ""
}

func (m *CfmPmMepStatsBag_KEYS) GetService() string {
	if m != nil {
		return m.Service
	}
	return ""
}

func (m *CfmPmMepStatsBag_KEYS) GetMepId() uint32 {
	if m != nil {
		return m.MepId
	}
	return 0
}

func (m *CfmPmMepStatsBag_KEYS) GetInterface() string {
	if m != nil {
		return m.Interface
	}
	return ""
}

type CfmPmMepStats struct {
	CcmsSent               uint64   `protobuf:"varint,1,opt,name=ccms_sent,json=ccmsSent,proto3" json:"ccms_sent,omitempty"`
	CcmsReceived           uint64   `protobuf:"varint,2,opt,name=ccms_received,json=ccmsReceived,proto3" json:"ccms_received,omitempty"`
	CcmsOutOfSequence      uint64   `protobuf:"varint,3,opt,name=ccms_out_of_sequence,json=ccmsOutOfSequence,proto3" json:"ccms_out_of_sequence,omitempty"`
	CcmsDiscarded          uint64   `protobuf:"varint,4,opt,name=ccms_discarded,json=ccmsDiscarded,proto3" json:"ccms_discarded,omitempty"`
	LbMsSent               uint64   `protobuf:"varint,5,opt,name=lb_ms_sent,json=lbMsSent,proto3" json:"lb_ms_sent,omitempty"`
	LbRsSent               uint64   `protobuf:"varint,6,opt,name=lb_rs_sent,json=lbRsSent,proto3" json:"lb_rs_sent,omitempty"`
	LbRsReceived           uint64   `protobuf:"varint,7,opt,name=lb_rs_received,json=lbRsReceived,proto3" json:"lb_rs_received,omitempty"`
	LbRsOutOfSequence      uint64   `protobuf:"varint,8,opt,name=lb_rs_out_of_sequence,json=lbRsOutOfSequence,proto3" json:"lb_rs_out_of_sequence,omitempty"`
	LbRsBadData            uint64   `protobuf:"varint,9,opt,name=lb_rs_bad_data,json=lbRsBadData,proto3" json:"lb_rs_bad_data,omitempty"`
	LbMsReceived           uint64   `protobuf:"varint,10,opt,name=lb_ms_received,json=lbMsReceived,proto3" json:"lb_ms_received,omitempty"`
	LtRsReceivedUnexpected uint64   `protobuf:"varint,11,opt,name=lt_rs_received_unexpected,json=ltRsReceivedUnexpected,proto3" json:"lt_rs_received_unexpected,omitempty"`
	AiSsSent               uint64   `protobuf:"varint,12,opt,name=ai_ss_sent,json=aiSsSent,proto3" json:"ai_ss_sent,omitempty"`
	AiSsReceived           uint64   `protobuf:"varint,13,opt,name=ai_ss_received,json=aiSsReceived,proto3" json:"ai_ss_received,omitempty"`
	LcKsReceived           uint64   `protobuf:"varint,14,opt,name=lc_ks_received,json=lcKsReceived,proto3" json:"lc_ks_received,omitempty"`
	DmMsSent               uint64   `protobuf:"varint,15,opt,name=dm_ms_sent,json=dmMsSent,proto3" json:"dm_ms_sent,omitempty"`
	DmMsReceived           uint64   `protobuf:"varint,16,opt,name=dm_ms_received,json=dmMsReceived,proto3" json:"dm_ms_received,omitempty"`
	DmRsSent               uint64   `protobuf:"varint,17,opt,name=dm_rs_sent,json=dmRsSent,proto3" json:"dm_rs_sent,omitempty"`
	DmRsReceived           uint64   `protobuf:"varint,18,opt,name=dm_rs_received,json=dmRsReceived,proto3" json:"dm_rs_received,omitempty"`
	SlMsSent               uint64   `protobuf:"varint,19,opt,name=sl_ms_sent,json=slMsSent,proto3" json:"sl_ms_sent,omitempty"`
	SlMsReceived           uint64   `protobuf:"varint,20,opt,name=sl_ms_received,json=slMsReceived,proto3" json:"sl_ms_received,omitempty"`
	SlRsSent               uint64   `protobuf:"varint,21,opt,name=sl_rs_sent,json=slRsSent,proto3" json:"sl_rs_sent,omitempty"`
	SlRsReceived           uint64   `protobuf:"varint,22,opt,name=sl_rs_received,json=slRsReceived,proto3" json:"sl_rs_received,omitempty"`
	LmMsSent               uint64   `protobuf:"varint,23,opt,name=lm_ms_sent,json=lmMsSent,proto3" json:"lm_ms_sent,omitempty"`
	LmMsReceived           uint64   `protobuf:"varint,24,opt,name=lm_ms_received,json=lmMsReceived,proto3" json:"lm_ms_received,omitempty"`
	LmRsSent               uint64   `protobuf:"varint,25,opt,name=lm_rs_sent,json=lmRsSent,proto3" json:"lm_rs_sent,omitempty"`
	LmRsReceived           uint64   `protobuf:"varint,26,opt,name=lm_rs_received,json=lmRsReceived,proto3" json:"lm_rs_received,omitempty"`
	BnMsReceived           uint64   `protobuf:"varint,27,opt,name=bn_ms_received,json=bnMsReceived,proto3" json:"bn_ms_received,omitempty"`
	BnMsDiscarded          uint64   `protobuf:"varint,28,opt,name=bn_ms_discarded,json=bnMsDiscarded,proto3" json:"bn_ms_discarded,omitempty"`
	XXX_NoUnkeyedLiteral   struct{} `json:"-"`
	XXX_unrecognized       []byte   `json:"-"`
	XXX_sizecache          int32    `json:"-"`
}

func (m *CfmPmMepStats) Reset()         { *m = CfmPmMepStats{} }
func (m *CfmPmMepStats) String() string { return proto.CompactTextString(m) }
func (*CfmPmMepStats) ProtoMessage()    {}
func (*CfmPmMepStats) Descriptor() ([]byte, []int) {
	return fileDescriptor_9737cebd38e93d90, []int{1}
}

func (m *CfmPmMepStats) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CfmPmMepStats.Unmarshal(m, b)
}
func (m *CfmPmMepStats) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CfmPmMepStats.Marshal(b, m, deterministic)
}
func (m *CfmPmMepStats) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CfmPmMepStats.Merge(m, src)
}
func (m *CfmPmMepStats) XXX_Size() int {
	return xxx_messageInfo_CfmPmMepStats.Size(m)
}
func (m *CfmPmMepStats) XXX_DiscardUnknown() {
	xxx_messageInfo_CfmPmMepStats.DiscardUnknown(m)
}

var xxx_messageInfo_CfmPmMepStats proto.InternalMessageInfo

func (m *CfmPmMepStats) GetCcmsSent() uint64 {
	if m != nil {
		return m.CcmsSent
	}
	return 0
}

func (m *CfmPmMepStats) GetCcmsReceived() uint64 {
	if m != nil {
		return m.CcmsReceived
	}
	return 0
}

func (m *CfmPmMepStats) GetCcmsOutOfSequence() uint64 {
	if m != nil {
		return m.CcmsOutOfSequence
	}
	return 0
}

func (m *CfmPmMepStats) GetCcmsDiscarded() uint64 {
	if m != nil {
		return m.CcmsDiscarded
	}
	return 0
}

func (m *CfmPmMepStats) GetLbMsSent() uint64 {
	if m != nil {
		return m.LbMsSent
	}
	return 0
}

func (m *CfmPmMepStats) GetLbRsSent() uint64 {
	if m != nil {
		return m.LbRsSent
	}
	return 0
}

func (m *CfmPmMepStats) GetLbRsReceived() uint64 {
	if m != nil {
		return m.LbRsReceived
	}
	return 0
}

func (m *CfmPmMepStats) GetLbRsOutOfSequence() uint64 {
	if m != nil {
		return m.LbRsOutOfSequence
	}
	return 0
}

func (m *CfmPmMepStats) GetLbRsBadData() uint64 {
	if m != nil {
		return m.LbRsBadData
	}
	return 0
}

func (m *CfmPmMepStats) GetLbMsReceived() uint64 {
	if m != nil {
		return m.LbMsReceived
	}
	return 0
}

func (m *CfmPmMepStats) GetLtRsReceivedUnexpected() uint64 {
	if m != nil {
		return m.LtRsReceivedUnexpected
	}
	return 0
}

func (m *CfmPmMepStats) GetAiSsSent() uint64 {
	if m != nil {
		return m.AiSsSent
	}
	return 0
}

func (m *CfmPmMepStats) GetAiSsReceived() uint64 {
	if m != nil {
		return m.AiSsReceived
	}
	return 0
}

func (m *CfmPmMepStats) GetLcKsReceived() uint64 {
	if m != nil {
		return m.LcKsReceived
	}
	return 0
}

func (m *CfmPmMepStats) GetDmMsSent() uint64 {
	if m != nil {
		return m.DmMsSent
	}
	return 0
}

func (m *CfmPmMepStats) GetDmMsReceived() uint64 {
	if m != nil {
		return m.DmMsReceived
	}
	return 0
}

func (m *CfmPmMepStats) GetDmRsSent() uint64 {
	if m != nil {
		return m.DmRsSent
	}
	return 0
}

func (m *CfmPmMepStats) GetDmRsReceived() uint64 {
	if m != nil {
		return m.DmRsReceived
	}
	return 0
}

func (m *CfmPmMepStats) GetSlMsSent() uint64 {
	if m != nil {
		return m.SlMsSent
	}
	return 0
}

func (m *CfmPmMepStats) GetSlMsReceived() uint64 {
	if m != nil {
		return m.SlMsReceived
	}
	return 0
}

func (m *CfmPmMepStats) GetSlRsSent() uint64 {
	if m != nil {
		return m.SlRsSent
	}
	return 0
}

func (m *CfmPmMepStats) GetSlRsReceived() uint64 {
	if m != nil {
		return m.SlRsReceived
	}
	return 0
}

func (m *CfmPmMepStats) GetLmMsSent() uint64 {
	if m != nil {
		return m.LmMsSent
	}
	return 0
}

func (m *CfmPmMepStats) GetLmMsReceived() uint64 {
	if m != nil {
		return m.LmMsReceived
	}
	return 0
}

func (m *CfmPmMepStats) GetLmRsSent() uint64 {
	if m != nil {
		return m.LmRsSent
	}
	return 0
}

func (m *CfmPmMepStats) GetLmRsReceived() uint64 {
	if m != nil {
		return m.LmRsReceived
	}
	return 0
}

func (m *CfmPmMepStats) GetBnMsReceived() uint64 {
	if m != nil {
		return m.BnMsReceived
	}
	return 0
}

func (m *CfmPmMepStats) GetBnMsDiscarded() uint64 {
	if m != nil {
		return m.BnMsDiscarded
	}
	return 0
}

type CfmPmTimestamp struct {
	Seconds              uint32   `protobuf:"varint,1,opt,name=seconds,proto3" json:"seconds,omitempty"`
	Nanoseconds          uint32   `protobuf:"varint,2,opt,name=nanoseconds,proto3" json:"nanoseconds,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CfmPmTimestamp) Reset()         { *m = CfmPmTimestamp{} }
func (m *CfmPmTimestamp) String() string { return proto.CompactTextString(m) }
func (*CfmPmTimestamp) ProtoMessage()    {}
func (*CfmPmTimestamp) Descriptor() ([]byte, []int) {
	return fileDescriptor_9737cebd38e93d90, []int{2}
}

func (m *CfmPmTimestamp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CfmPmTimestamp.Unmarshal(m, b)
}
func (m *CfmPmTimestamp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CfmPmTimestamp.Marshal(b, m, deterministic)
}
func (m *CfmPmTimestamp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CfmPmTimestamp.Merge(m, src)
}
func (m *CfmPmTimestamp) XXX_Size() int {
	return xxx_messageInfo_CfmPmTimestamp.Size(m)
}
func (m *CfmPmTimestamp) XXX_DiscardUnknown() {
	xxx_messageInfo_CfmPmTimestamp.DiscardUnknown(m)
}

var xxx_messageInfo_CfmPmTimestamp proto.InternalMessageInfo

func (m *CfmPmTimestamp) GetSeconds() uint32 {
	if m != nil {
		return m.Seconds
	}
	return 0
}

func (m *CfmPmTimestamp) GetNanoseconds() uint32 {
	if m != nil {
		return m.Nanoseconds
	}
	return 0
}

type CfmPmMepAisStats struct {
	Level                string          `protobuf:"bytes,1,opt,name=level,proto3" json:"level,omitempty"`
	Interval             string          `protobuf:"bytes,2,opt,name=interval,proto3" json:"interval,omitempty"`
	SendingAis           string          `protobuf:"bytes,3,opt,name=sending_ais,json=sendingAis,proto3" json:"sending_ais,omitempty"`
	SendingStart         *CfmPmTimestamp `protobuf:"bytes,4,opt,name=sending_start,json=sendingStart,proto3" json:"sending_start,omitempty"`
	ReceivingAis         string          `protobuf:"bytes,5,opt,name=receiving_ais,json=receivingAis,proto3" json:"receiving_ais,omitempty"`
	ReceivingStart       *CfmPmTimestamp `protobuf:"bytes,6,opt,name=receiving_start,json=receivingStart,proto3" json:"receiving_start,omitempty"`
	LastInterval         string          `protobuf:"bytes,7,opt,name=last_interval,json=lastInterval,proto3" json:"last_interval,omitempty"`
	LastMacAddress       string          `protobuf:"bytes,8,opt,name=last_mac_address,json=lastMacAddress,proto3" json:"last_mac_address,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *CfmPmMepAisStats) Reset()         { *m = CfmPmMepAisStats{} }
func (m *CfmPmMepAisStats) String() string { return proto.CompactTextString(m) }
func (*CfmPmMepAisStats) ProtoMessage()    {}
func (*CfmPmMepAisStats) Descriptor() ([]byte, []int) {
	return fileDescriptor_9737cebd38e93d90, []int{3}
}

func (m *CfmPmMepAisStats) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CfmPmMepAisStats.Unmarshal(m, b)
}
func (m *CfmPmMepAisStats) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CfmPmMepAisStats.Marshal(b, m, deterministic)
}
func (m *CfmPmMepAisStats) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CfmPmMepAisStats.Merge(m, src)
}
func (m *CfmPmMepAisStats) XXX_Size() int {
	return xxx_messageInfo_CfmPmMepAisStats.Size(m)
}
func (m *CfmPmMepAisStats) XXX_DiscardUnknown() {
	xxx_messageInfo_CfmPmMepAisStats.DiscardUnknown(m)
}

var xxx_messageInfo_CfmPmMepAisStats proto.InternalMessageInfo

func (m *CfmPmMepAisStats) GetLevel() string {
	if m != nil {
		return m.Level
	}
	return ""
}

func (m *CfmPmMepAisStats) GetInterval() string {
	if m != nil {
		return m.Interval
	}
	return ""
}

func (m *CfmPmMepAisStats) GetSendingAis() string {
	if m != nil {
		return m.SendingAis
	}
	return ""
}

func (m *CfmPmMepAisStats) GetSendingStart() *CfmPmTimestamp {
	if m != nil {
		return m.SendingStart
	}
	return nil
}

func (m *CfmPmMepAisStats) GetReceivingAis() string {
	if m != nil {
		return m.ReceivingAis
	}
	return ""
}

func (m *CfmPmMepAisStats) GetReceivingStart() *CfmPmTimestamp {
	if m != nil {
		return m.ReceivingStart
	}
	return nil
}

func (m *CfmPmMepAisStats) GetLastInterval() string {
	if m != nil {
		return m.LastInterval
	}
	return ""
}

func (m *CfmPmMepAisStats) GetLastMacAddress() string {
	if m != nil {
		return m.LastMacAddress
	}
	return ""
}

type CfmPmRmepErrState struct {
	LossThresholdExceeded bool     `protobuf:"varint,1,opt,name=loss_threshold_exceeded,json=lossThresholdExceeded,proto3" json:"loss_threshold_exceeded,omitempty"`
	InvalidLevel          bool     `protobuf:"varint,2,opt,name=invalid_level,json=invalidLevel,proto3" json:"invalid_level,omitempty"`
	InvalidMaid           bool     `protobuf:"varint,3,opt,name=invalid_maid,json=invalidMaid,proto3" json:"invalid_maid,omitempty"`
	InvalidCcmInterval    bool     `protobuf:"varint,4,opt,name=invalid_ccm_interval,json=invalidCcmInterval,proto3" json:"invalid_ccm_interval,omitempty"`
	ReceivedOurMac        bool     `protobuf:"varint,5,opt,name=received_our_mac,json=receivedOurMac,proto3" json:"received_our_mac,omitempty"`
	ReceivedOurMepId      bool     `protobuf:"varint,6,opt,name=received_our_mep_id,json=receivedOurMepId,proto3" json:"received_our_mep_id,omitempty"`
	ReceivedRdi           bool     `protobuf:"varint,7,opt,name=received_rdi,json=receivedRdi,proto3" json:"received_rdi,omitempty"`
	XXX_NoUnkeyedLiteral  struct{} `json:"-"`
	XXX_unrecognized      []byte   `json:"-"`
	XXX_sizecache         int32    `json:"-"`
}

func (m *CfmPmRmepErrState) Reset()         { *m = CfmPmRmepErrState{} }
func (m *CfmPmRmepErrState) String() string { return proto.CompactTextString(m) }
func (*CfmPmRmepErrState) ProtoMessage()    {}
func (*CfmPmRmepErrState) Descriptor() ([]byte, []int) {
	return fileDescriptor_9737cebd38e93d90, []int{4}
}

func (m *CfmPmRmepErrState) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CfmPmRmepErrState.Unmarshal(m, b)
}
func (m *CfmPmRmepErrState) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CfmPmRmepErrState.Marshal(b, m, deterministic)
}
func (m *CfmPmRmepErrState) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CfmPmRmepErrState.Merge(m, src)
}
func (m *CfmPmRmepErrState) XXX_Size() int {
	return xxx_messageInfo_CfmPmRmepErrState.Size(m)
}
func (m *CfmPmRmepErrState) XXX_DiscardUnknown() {
	xxx_messageInfo_CfmPmRmepErrState.DiscardUnknown(m)
}

var xxx_messageInfo_CfmPmRmepErrState proto.InternalMessageInfo

func (m *CfmPmRmepErrState) GetLossThresholdExceeded() bool {
	if m != nil {
		return m.LossThresholdExceeded
	}
	return false
}

func (m *CfmPmRmepErrState) GetInvalidLevel() bool {
	if m != nil {
		return m.InvalidLevel
	}
	return false
}

func (m *CfmPmRmepErrState) GetInvalidMaid() bool {
	if m != nil {
		return m.InvalidMaid
	}
	return false
}

func (m *CfmPmRmepErrState) GetInvalidCcmInterval() bool {
	if m != nil {
		return m.InvalidCcmInterval
	}
	return false
}

func (m *CfmPmRmepErrState) GetReceivedOurMac() bool {
	if m != nil {
		return m.ReceivedOurMac
	}
	return false
}

func (m *CfmPmRmepErrState) GetReceivedOurMepId() bool {
	if m != nil {
		return m.ReceivedOurMepId
	}
	return false
}

func (m *CfmPmRmepErrState) GetReceivedRdi() bool {
	if m != nil {
		return m.ReceivedRdi
	}
	return false
}

type CfmPmDefects struct {
	AisReceived          bool               `protobuf:"varint,1,opt,name=ais_received,json=aisReceived,proto3" json:"ais_received,omitempty"`
	PeerMepsThatTimedOut uint32             `protobuf:"varint,2,opt,name=peer_meps_that_timed_out,json=peerMepsThatTimedOut,proto3" json:"peer_meps_that_timed_out,omitempty"`
	Missing              uint32             `protobuf:"varint,3,opt,name=missing,proto3" json:"missing,omitempty"`
	AutoMissing          uint32             `protobuf:"varint,4,opt,name=auto_missing,json=autoMissing,proto3" json:"auto_missing,omitempty"`
	Unexpected           uint32             `protobuf:"varint,5,opt,name=unexpected,proto3" json:"unexpected,omitempty"`
	LocalPortStatus      bool               `protobuf:"varint,6,opt,name=local_port_status,json=localPortStatus,proto3" json:"local_port_status,omitempty"`
	PeerPortStatus       bool               `protobuf:"varint,7,opt,name=peer_port_status,json=peerPortStatus,proto3" json:"peer_port_status,omitempty"`
	RemoteMepsDefects    *CfmPmRmepErrState `protobuf:"bytes,8,opt,name=remote_meps_defects,json=remoteMepsDefects,proto3" json:"remote_meps_defects,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *CfmPmDefects) Reset()         { *m = CfmPmDefects{} }
func (m *CfmPmDefects) String() string { return proto.CompactTextString(m) }
func (*CfmPmDefects) ProtoMessage()    {}
func (*CfmPmDefects) Descriptor() ([]byte, []int) {
	return fileDescriptor_9737cebd38e93d90, []int{5}
}

func (m *CfmPmDefects) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CfmPmDefects.Unmarshal(m, b)
}
func (m *CfmPmDefects) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CfmPmDefects.Marshal(b, m, deterministic)
}
func (m *CfmPmDefects) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CfmPmDefects.Merge(m, src)
}
func (m *CfmPmDefects) XXX_Size() int {
	return xxx_messageInfo_CfmPmDefects.Size(m)
}
func (m *CfmPmDefects) XXX_DiscardUnknown() {
	xxx_messageInfo_CfmPmDefects.DiscardUnknown(m)
}

var xxx_messageInfo_CfmPmDefects proto.InternalMessageInfo

func (m *CfmPmDefects) GetAisReceived() bool {
	if m != nil {
		return m.AisReceived
	}
	return false
}

func (m *CfmPmDefects) GetPeerMepsThatTimedOut() uint32 {
	if m != nil {
		return m.PeerMepsThatTimedOut
	}
	return 0
}

func (m *CfmPmDefects) GetMissing() uint32 {
	if m != nil {
		return m.Missing
	}
	return 0
}

func (m *CfmPmDefects) GetAutoMissing() uint32 {
	if m != nil {
		return m.AutoMissing
	}
	return 0
}

func (m *CfmPmDefects) GetUnexpected() uint32 {
	if m != nil {
		return m.Unexpected
	}
	return 0
}

func (m *CfmPmDefects) GetLocalPortStatus() bool {
	if m != nil {
		return m.LocalPortStatus
	}
	return false
}

func (m *CfmPmDefects) GetPeerPortStatus() bool {
	if m != nil {
		return m.PeerPortStatus
	}
	return false
}

func (m *CfmPmDefects) GetRemoteMepsDefects() *CfmPmRmepErrState {
	if m != nil {
		return m.RemoteMepsDefects
	}
	return nil
}

type CfmPmMepStatsBag struct {
	DomainXr                   string            `protobuf:"bytes,50,opt,name=domain_xr,json=domainXr,proto3" json:"domain_xr,omitempty"`
	ServiceXr                  string            `protobuf:"bytes,51,opt,name=service_xr,json=serviceXr,proto3" json:"service_xr,omitempty"`
	Level                      string            `protobuf:"bytes,52,opt,name=level,proto3" json:"level,omitempty"`
	MepIdXr                    uint32            `protobuf:"varint,53,opt,name=mep_id_xr,json=mepIdXr,proto3" json:"mep_id_xr,omitempty"`
	InterfaceXr                string            `protobuf:"bytes,54,opt,name=interface_xr,json=interfaceXr,proto3" json:"interface_xr,omitempty"`
	InterfaceState             string            `protobuf:"bytes,55,opt,name=interface_state,json=interfaceState,proto3" json:"interface_state,omitempty"`
	InterworkingState          string            `protobuf:"bytes,56,opt,name=interworking_state,json=interworkingState,proto3" json:"interworking_state,omitempty"`
	StpState                   string            `protobuf:"bytes,57,opt,name=stp_state,json=stpState,proto3" json:"stp_state,omitempty"`
	MepDirection               string            `protobuf:"bytes,58,opt,name=mep_direction,json=mepDirection,proto3" json:"mep_direction,omitempty"`
	MacAddress                 string            `protobuf:"bytes,59,opt,name=mac_address,json=macAddress,proto3" json:"mac_address,omitempty"`
	PeerMepsDetected           uint32            `protobuf:"varint,60,opt,name=peer_meps_detected,json=peerMepsDetected,proto3" json:"peer_meps_detected,omitempty"`
	PeerMepsWithErrorsDetected uint32            `protobuf:"varint,61,opt,name=peer_meps_with_errors_detected,json=peerMepsWithErrorsDetected,proto3" json:"peer_meps_with_errors_detected,omitempty"`
	RemoteDefect               bool              `protobuf:"varint,62,opt,name=remote_defect,json=remoteDefect,proto3" json:"remote_defect,omitempty"`
	FaultNotificationState     string            `protobuf:"bytes,63,opt,name=fault_notification_state,json=faultNotificationState,proto3" json:"fault_notification_state,omitempty"`
	CcmGenerationEnabled       bool              `protobuf:"varint,64,opt,name=ccm_generation_enabled,json=ccmGenerationEnabled,proto3" json:"ccm_generation_enabled,omitempty"`
	CcmInterval                string            `protobuf:"bytes,65,opt,name=ccm_interval,json=ccmInterval,proto3" json:"ccm_interval,omitempty"`
	CcmOffload                 string            `protobuf:"bytes,66,opt,name=ccm_offload,json=ccmOffload,proto3" json:"ccm_offload,omitempty"`
	HighestDefect              string            `protobuf:"bytes,67,opt,name=highest_defect,json=highestDefect,proto3" json:"highest_defect,omitempty"`
	RdiDefect                  bool              `protobuf:"varint,68,opt,name=rdi_defect,json=rdiDefect,proto3" json:"rdi_defect,omitempty"`
	MacStatusDefect            bool              `protobuf:"varint,69,opt,name=mac_status_defect,json=macStatusDefect,proto3" json:"mac_status_defect,omitempty"`
	PeerMepCcmDefect           bool              `protobuf:"varint,70,opt,name=peer_mep_ccm_defect,json=peerMepCcmDefect,proto3" json:"peer_mep_ccm_defect,omitempty"`
	ErrorCcmDefect             bool              `protobuf:"varint,71,opt,name=error_ccm_defect,json=errorCcmDefect,proto3" json:"error_ccm_defect,omitempty"`
	CrossConnectCcmDefect      bool              `protobuf:"varint,72,opt,name=cross_connect_ccm_defect,json=crossConnectCcmDefect,proto3" json:"cross_connect_ccm_defect,omitempty"`
	NextLbmId                  uint32            `protobuf:"varint,73,opt,name=next_lbm_id,json=nextLbmId,proto3" json:"next_lbm_id,omitempty"`
	NextLtmId                  uint32            `protobuf:"varint,74,opt,name=next_ltm_id,json=nextLtmId,proto3" json:"next_ltm_id,omitempty"`
	Cos                        uint32            `protobuf:"varint,75,opt,name=cos,proto3" json:"cos,omitempty"`
	Statistics                 *CfmPmMepStats    `protobuf:"bytes,76,opt,name=statistics,proto3" json:"statistics,omitempty"`
	AisStatistics              *CfmPmMepAisStats `protobuf:"bytes,77,opt,name=ais_statistics,json=aisStatistics,proto3" json:"ais_statistics,omitempty"`
	Defects                    *CfmPmDefects     `protobuf:"bytes,78,opt,name=defects,proto3" json:"defects,omitempty"`
	EfdTriggered               bool              `protobuf:"varint,79,opt,name=efd_triggered,json=efdTriggered,proto3" json:"efd_triggered,omitempty"`
	Standby                    bool              `protobuf:"varint,80,opt,name=standby,proto3" json:"standby,omitempty"`
	Hairpin                    bool              `protobuf:"varint,81,opt,name=hairpin,proto3" json:"hairpin,omitempty"`
	DefectsIgnored             bool              `protobuf:"varint,82,opt,name=defects_ignored,json=defectsIgnored,proto3" json:"defects_ignored,omitempty"`
	XXX_NoUnkeyedLiteral       struct{}          `json:"-"`
	XXX_unrecognized           []byte            `json:"-"`
	XXX_sizecache              int32             `json:"-"`
}

func (m *CfmPmMepStatsBag) Reset()         { *m = CfmPmMepStatsBag{} }
func (m *CfmPmMepStatsBag) String() string { return proto.CompactTextString(m) }
func (*CfmPmMepStatsBag) ProtoMessage()    {}
func (*CfmPmMepStatsBag) Descriptor() ([]byte, []int) {
	return fileDescriptor_9737cebd38e93d90, []int{6}
}

func (m *CfmPmMepStatsBag) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CfmPmMepStatsBag.Unmarshal(m, b)
}
func (m *CfmPmMepStatsBag) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CfmPmMepStatsBag.Marshal(b, m, deterministic)
}
func (m *CfmPmMepStatsBag) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CfmPmMepStatsBag.Merge(m, src)
}
func (m *CfmPmMepStatsBag) XXX_Size() int {
	return xxx_messageInfo_CfmPmMepStatsBag.Size(m)
}
func (m *CfmPmMepStatsBag) XXX_DiscardUnknown() {
	xxx_messageInfo_CfmPmMepStatsBag.DiscardUnknown(m)
}

var xxx_messageInfo_CfmPmMepStatsBag proto.InternalMessageInfo

func (m *CfmPmMepStatsBag) GetDomainXr() string {
	if m != nil {
		return m.DomainXr
	}
	return ""
}

func (m *CfmPmMepStatsBag) GetServiceXr() string {
	if m != nil {
		return m.ServiceXr
	}
	return ""
}

func (m *CfmPmMepStatsBag) GetLevel() string {
	if m != nil {
		return m.Level
	}
	return ""
}

func (m *CfmPmMepStatsBag) GetMepIdXr() uint32 {
	if m != nil {
		return m.MepIdXr
	}
	return 0
}

func (m *CfmPmMepStatsBag) GetInterfaceXr() string {
	if m != nil {
		return m.InterfaceXr
	}
	return ""
}

func (m *CfmPmMepStatsBag) GetInterfaceState() string {
	if m != nil {
		return m.InterfaceState
	}
	return ""
}

func (m *CfmPmMepStatsBag) GetInterworkingState() string {
	if m != nil {
		return m.InterworkingState
	}
	return ""
}

func (m *CfmPmMepStatsBag) GetStpState() string {
	if m != nil {
		return m.StpState
	}
	return ""
}

func (m *CfmPmMepStatsBag) GetMepDirection() string {
	if m != nil {
		return m.MepDirection
	}
	return ""
}

func (m *CfmPmMepStatsBag) GetMacAddress() string {
	if m != nil {
		return m.MacAddress
	}
	return ""
}

func (m *CfmPmMepStatsBag) GetPeerMepsDetected() uint32 {
	if m != nil {
		return m.PeerMepsDetected
	}
	return 0
}

func (m *CfmPmMepStatsBag) GetPeerMepsWithErrorsDetected() uint32 {
	if m != nil {
		return m.PeerMepsWithErrorsDetected
	}
	return 0
}

func (m *CfmPmMepStatsBag) GetRemoteDefect() bool {
	if m != nil {
		return m.RemoteDefect
	}
	return false
}

func (m *CfmPmMepStatsBag) GetFaultNotificationState() string {
	if m != nil {
		return m.FaultNotificationState
	}
	return ""
}

func (m *CfmPmMepStatsBag) GetCcmGenerationEnabled() bool {
	if m != nil {
		return m.CcmGenerationEnabled
	}
	return false
}

func (m *CfmPmMepStatsBag) GetCcmInterval() string {
	if m != nil {
		return m.CcmInterval
	}
	return ""
}

func (m *CfmPmMepStatsBag) GetCcmOffload() string {
	if m != nil {
		return m.CcmOffload
	}
	return ""
}

func (m *CfmPmMepStatsBag) GetHighestDefect() string {
	if m != nil {
		return m.HighestDefect
	}
	return ""
}

func (m *CfmPmMepStatsBag) GetRdiDefect() bool {
	if m != nil {
		return m.RdiDefect
	}
	return false
}

func (m *CfmPmMepStatsBag) GetMacStatusDefect() bool {
	if m != nil {
		return m.MacStatusDefect
	}
	return false
}

func (m *CfmPmMepStatsBag) GetPeerMepCcmDefect() bool {
	if m != nil {
		return m.PeerMepCcmDefect
	}
	return false
}

func (m *CfmPmMepStatsBag) GetErrorCcmDefect() bool {
	if m != nil {
		return m.ErrorCcmDefect
	}
	return false
}

func (m *CfmPmMepStatsBag) GetCrossConnectCcmDefect() bool {
	if m != nil {
		return m.CrossConnectCcmDefect
	}
	return false
}

func (m *CfmPmMepStatsBag) GetNextLbmId() uint32 {
	if m != nil {
		return m.NextLbmId
	}
	return 0
}

func (m *CfmPmMepStatsBag) GetNextLtmId() uint32 {
	if m != nil {
		return m.NextLtmId
	}
	return 0
}

func (m *CfmPmMepStatsBag) GetCos() uint32 {
	if m != nil {
		return m.Cos
	}
	return 0
}

func (m *CfmPmMepStatsBag) GetStatistics() *CfmPmMepStats {
	if m != nil {
		return m.Statistics
	}
	return nil
}

func (m *CfmPmMepStatsBag) GetAisStatistics() *CfmPmMepAisStats {
	if m != nil {
		return m.AisStatistics
	}
	return nil
}

func (m *CfmPmMepStatsBag) GetDefects() *CfmPmDefects {
	if m != nil {
		return m.Defects
	}
	return nil
}

func (m *CfmPmMepStatsBag) GetEfdTriggered() bool {
	if m != nil {
		return m.EfdTriggered
	}
	return false
}

func (m *CfmPmMepStatsBag) GetStandby() bool {
	if m != nil {
		return m.Standby
	}
	return false
}

func (m *CfmPmMepStatsBag) GetHairpin() bool {
	if m != nil {
		return m.Hairpin
	}
	return false
}

func (m *CfmPmMepStatsBag) GetDefectsIgnored() bool {
	if m != nil {
		return m.DefectsIgnored
	}
	return false
}

func init() {
	proto.RegisterType((*CfmPmMepStatsBag_KEYS)(nil), "cisco_ios_xr_ethernet_cfm_oper.cfm.global.local_meps.local_mep.cfm_pm_mep_stats_bag_KEYS")
	proto.RegisterType((*CfmPmMepStats)(nil), "cisco_ios_xr_ethernet_cfm_oper.cfm.global.local_meps.local_mep.cfm_pm_mep_stats")
	proto.RegisterType((*CfmPmTimestamp)(nil), "cisco_ios_xr_ethernet_cfm_oper.cfm.global.local_meps.local_mep.cfm_pm_timestamp")
	proto.RegisterType((*CfmPmMepAisStats)(nil), "cisco_ios_xr_ethernet_cfm_oper.cfm.global.local_meps.local_mep.cfm_pm_mep_ais_stats")
	proto.RegisterType((*CfmPmRmepErrState)(nil), "cisco_ios_xr_ethernet_cfm_oper.cfm.global.local_meps.local_mep.cfm_pm_rmep_err_state")
	proto.RegisterType((*CfmPmDefects)(nil), "cisco_ios_xr_ethernet_cfm_oper.cfm.global.local_meps.local_mep.cfm_pm_defects")
	proto.RegisterType((*CfmPmMepStatsBag)(nil), "cisco_ios_xr_ethernet_cfm_oper.cfm.global.local_meps.local_mep.cfm_pm_mep_stats_bag")
}

func init() { proto.RegisterFile("cfm_pm_mep_stats_bag.proto", fileDescriptor_9737cebd38e93d90) }

var fileDescriptor_9737cebd38e93d90 = []byte{
	// 1594 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x57, 0xd9, 0x72, 0x1b, 0xbb,
	0x11, 0x2d, 0xed, 0x24, 0x28, 0x6a, 0x19, 0x4b, 0xba, 0x63, 0x59, 0xd7, 0xd7, 0x57, 0xce, 0xa2,
	0xba, 0x15, 0x2b, 0x29, 0xdb, 0xf1, 0x92, 0xc5, 0x89, 0x2d, 0x29, 0x8e, 0x62, 0x53, 0x72, 0x86,
	0x72, 0x45, 0x79, 0x9a, 0x02, 0x01, 0x90, 0x44, 0x79, 0x16, 0x06, 0x00, 0x65, 0xb9, 0xf2, 0x96,
	0xaa, 0xfc, 0x42, 0x3e, 0x21, 0x7f, 0x92, 0xe7, 0xfc, 0x41, 0xbe, 0x25, 0xd5, 0xdd, 0xc0, 0xcc,
	0x50, 0x95, 0xb7, 0xe8, 0xbe, 0x11, 0x7d, 0x0e, 0xba, 0x1b, 0xdd, 0xe8, 0x33, 0x20, 0xdb, 0x15,
	0xc3, 0x3c, 0x9d, 0xe4, 0x69, 0xae, 0x26, 0xa9, 0x75, 0xdc, 0xd9, 0x74, 0xc0, 0x47, 0x87, 0x13,
	0x53, 0xba, 0x32, 0x7a, 0x25, 0xb4, 0x15, 0x65, 0xaa, 0x4b, 0x9b, 0x5e, 0x9b, 0x54, 0xb9, 0xb1,
	0x32, 0x85, 0x72, 0x29, 0xec, 0x28, 0x27, 0xca, 0x1c, 0x8a, 0x61, 0x7e, 0x38, 0xca, 0xca, 0x01,
	0xcf, 0x0e, 0xb3, 0x52, 0xf0, 0x0c, 0x9c, 0xd8, 0xfa, 0xe7, 0xfe, 0xdf, 0xe6, 0xd8, 0xdd, 0xff,
	0xe5, 0x3e, 0x7d, 0x77, 0xf2, 0xe7, 0x7e, 0xb4, 0xc3, 0x96, 0x65, 0x99, 0x73, 0x5d, 0xc4, 0x73,
	0x0f, 0xe6, 0x0e, 0xda, 0x89, 0x5f, 0x45, 0x31, 0x5b, 0xb1, 0xca, 0x5c, 0x69, 0xa1, 0xe2, 0x79,
	0x04, 0xc2, 0x32, 0xda, 0x66, 0xcb, 0xe0, 0x47, 0xcb, 0x78, 0xe1, 0xc1, 0xdc, 0x41, 0x37, 0x59,
	0xca, 0xd5, 0xe4, 0x54, 0x46, 0x7b, 0xac, 0xad, 0x0b, 0xa7, 0xcc, 0x90, 0x0b, 0x15, 0x2f, 0xe2,
	0x96, 0xda, 0xb0, 0xff, 0x8f, 0x16, 0xdb, 0xb8, 0x99, 0x44, 0x74, 0x8f, 0xb5, 0x85, 0xc8, 0x6d,
	0x6a, 0x55, 0xe1, 0x30, 0xfc, 0x62, 0xd2, 0x02, 0x43, 0x5f, 0x15, 0x2e, 0x7a, 0xc8, 0xba, 0x08,
	0x1a, 0x25, 0x94, 0xbe, 0x52, 0x12, 0xd3, 0x58, 0x4c, 0x56, 0xc1, 0x98, 0x78, 0x5b, 0xf4, 0x53,
	0xb6, 0x85, 0xa4, 0x72, 0xea, 0xd2, 0x72, 0x98, 0x5a, 0xf5, 0x97, 0xa9, 0x2a, 0x84, 0xc2, 0xcc,
	0x16, 0x93, 0x4d, 0xc0, 0xce, 0xa7, 0xee, 0x7c, 0xd8, 0xf7, 0x40, 0xf4, 0x43, 0xb6, 0x86, 0x1b,
	0xa4, 0xb6, 0x82, 0x1b, 0xa9, 0x24, 0xa6, 0xba, 0x98, 0x60, 0xac, 0xe3, 0x60, 0x8c, 0xf6, 0x18,
	0xcb, 0x06, 0x69, 0x48, 0x6d, 0x89, 0x52, 0xcb, 0x06, 0x3d, 0x4a, 0x8d, 0x50, 0xe3, 0xd1, 0xe5,
	0x80, 0x26, 0x84, 0xfe, 0x80, 0xad, 0x11, 0x5a, 0x65, 0xbe, 0x42, 0x99, 0x03, 0xa3, 0xca, 0xfc,
	0x67, 0x6c, 0x9b, 0x58, 0x37, 0x53, 0x6f, 0x51, 0xea, 0x40, 0x9e, 0x4d, 0xfd, 0x61, 0xf0, 0x3b,
	0xe0, 0x32, 0x95, 0xdc, 0xf1, 0xb8, 0x8d, 0xd4, 0x0e, 0x50, 0xdf, 0x70, 0x79, 0xcc, 0x1d, 0xf7,
	0xc1, 0x9b, 0x65, 0x63, 0x21, 0x78, 0xaf, 0x0e, 0xfe, 0x92, 0xdd, 0xcd, 0x5c, 0x33, 0xc5, 0x74,
	0x5a, 0xa8, 0xeb, 0x89, 0x12, 0x4e, 0xc9, 0xb8, 0x83, 0x1b, 0x76, 0x32, 0x57, 0x67, 0xfb, 0xb1,
	0x42, 0xe1, 0xec, 0x5c, 0xa7, 0xd6, 0x9f, 0x7d, 0x95, 0xce, 0xce, 0x75, 0xbf, 0x3a, 0x3b, 0xa1,
	0x55, 0xf8, 0x2e, 0x85, 0x07, 0x46, 0x15, 0x1e, 0x92, 0x14, 0xe9, 0xa7, 0x06, 0x6b, 0xcd, 0x27,
	0x29, 0xde, 0xd5, 0xac, 0x3d, 0xc6, 0x64, 0x5e, 0xf5, 0x60, 0x9d, 0x22, 0xc9, 0xbc, 0x57, 0x45,
	0x22, 0xb4, 0xf2, 0xb1, 0x41, 0x3e, 0x80, 0x71, 0xc3, 0x47, 0xe8, 0xd4, 0x66, 0xf0, 0x91, 0x34,
	0x7d, 0x34, 0x3b, 0x15, 0x05, 0x1f, 0xc9, 0x8c, 0x0f, 0x9b, 0x55, 0x79, 0xdc, 0x21, 0x1f, 0x36,
	0xab, 0xf3, 0x20, 0xb4, 0xf2, 0xb1, 0x45, 0x3e, 0x80, 0x71, 0xc3, 0x47, 0xc8, 0x63, 0x3b, 0xf8,
	0x48, 0x9a, 0x3e, 0x9a, 0x79, 0xec, 0x04, 0x1f, 0xb3, 0x79, 0x64, 0x75, 0x3d, 0xbe, 0xf2, 0xb7,
	0xae, 0x51, 0x8f, 0x6c, 0xb6, 0x1e, 0xb1, 0xaf, 0xe9, 0x8d, 0x7a, 0x64, 0x75, 0x3d, 0xee, 0x06,
	0x1f, 0x49, 0xd3, 0x47, 0x33, 0x8f, 0xdd, 0xe0, 0x23, 0x99, 0xe9, 0xde, 0xa0, 0x98, 0x89, 0x74,
	0x8f, 0x58, 0x83, 0xa2, 0x11, 0xe9, 0x47, 0x6c, 0x9d, 0x58, 0xf5, 0xa4, 0xed, 0xd1, 0xa4, 0x01,
	0xad, 0x9a, 0xb4, 0xfd, 0xb3, 0x4a, 0x17, 0x9c, 0xce, 0x95, 0x75, 0x3c, 0x9f, 0x90, 0xf6, 0x88,
	0xb2, 0x90, 0x16, 0x55, 0xa1, 0x9b, 0x84, 0x65, 0xf4, 0x80, 0x75, 0x0a, 0x5e, 0x94, 0x01, 0x9d,
	0x47, 0xb4, 0x69, 0xda, 0xff, 0xf7, 0x02, 0xdb, 0x6a, 0x08, 0x0d, 0xd7, 0xd6, 0x8b, 0xcd, 0x16,
	0x5b, 0xca, 0xd4, 0x95, 0xca, 0xbc, 0xce, 0xd1, 0x22, 0xda, 0x65, 0x2d, 0x14, 0xa9, 0x2b, 0x9e,
	0x79, 0x9d, 0xab, 0xd6, 0xd1, 0x37, 0xac, 0x63, 0x55, 0x21, 0x75, 0x31, 0x02, 0x37, 0xa8, 0x29,
	0xed, 0x84, 0x79, 0xd3, 0x6b, 0x6d, 0xa3, 0x29, 0xeb, 0x06, 0x82, 0x75, 0xdc, 0x38, 0xd4, 0x92,
	0xce, 0xe3, 0x0f, 0x87, 0xff, 0x9f, 0x62, 0x1f, 0xde, 0x2c, 0x48, 0xb2, 0xea, 0xc3, 0xf4, 0x21,
	0x0a, 0x28, 0x23, 0x95, 0x3e, 0x64, 0xb6, 0x84, 0x99, 0xad, 0x56, 0x46, 0xc8, 0xed, 0x0b, 0x5b,
	0xaf, 0x49, 0x94, 0xdd, 0xf2, 0xf7, 0x94, 0xdd, 0x5a, 0x15, 0xa8, 0xca, 0x2f, 0xe3, 0xd6, 0xa5,
	0x55, 0x61, 0x57, 0x28, 0x3f, 0x30, 0x9e, 0x86, 0xe2, 0x1e, 0xb0, 0x0d, 0x24, 0xe5, 0x5c, 0xa4,
	0x5c, 0x4a, 0xa3, 0xac, 0x45, 0xe9, 0x6b, 0x27, 0x6b, 0x60, 0xef, 0x71, 0xf1, 0x9a, 0xac, 0xfb,
	0xff, 0x9a, 0x67, 0xdb, 0x3e, 0xa6, 0x81, 0x96, 0x2a, 0x63, 0xb0, 0xa5, 0x2a, 0x7a, 0xc6, 0xbe,
	0xca, 0x4a, 0x6b, 0x53, 0x37, 0x36, 0xca, 0x8e, 0xcb, 0x4c, 0xa6, 0xea, 0x5a, 0x28, 0x05, 0x77,
	0x0d, 0x9a, 0xdc, 0x4a, 0xb6, 0x01, 0xbe, 0x08, 0xe8, 0x89, 0x07, 0x21, 0x41, 0x5d, 0x5c, 0xf1,
	0x4c, 0xcb, 0x94, 0xae, 0xc4, 0x3c, 0xb2, 0x57, 0xbd, 0xf1, 0x3d, 0xde, 0x8c, 0x6f, 0x59, 0x58,
	0xa7, 0x39, 0xf7, 0x1f, 0xbb, 0x56, 0xd2, 0xf1, 0xb6, 0x1e, 0xd7, 0xa0, 0xe1, 0x5b, 0x81, 0x22,
	0x44, 0x5e, 0x9f, 0x77, 0x11, 0xa9, 0x91, 0xc7, 0x8e, 0x44, 0xde, 0x3c, 0x75, 0x25, 0xb9, 0xe5,
	0xd4, 0xc0, 0xe9, 0xb1, 0x7b, 0xad, 0x50, 0x44, 0x25, 0xcf, 0xa7, 0xa6, 0xc7, 0x45, 0xf4, 0x88,
	0xdd, 0x99, 0x65, 0xd2, 0x27, 0x77, 0x19, 0xc9, 0x1b, 0x4d, 0x32, 0x7e, 0x7d, 0xbf, 0x65, 0xab,
	0x15, 0xdd, 0x48, 0x8d, 0x25, 0x6f, 0x25, 0x9d, 0x60, 0x4b, 0xa4, 0xde, 0xff, 0xe7, 0x02, 0x5b,
	0xf3, 0x75, 0x94, 0x6a, 0xa8, 0x84, 0xb3, 0xb0, 0x0b, 0x06, 0xa4, 0x1a, 0x64, 0xaa, 0x5a, 0x87,
	0xeb, 0x7a, 0x8e, 0x9f, 0xb1, 0x78, 0xa2, 0x14, 0xc6, 0x87, 0x42, 0x73, 0x87, 0x8d, 0x87, 0x9c,
	0x9c, 0x1f, 0xbf, 0x2d, 0xc0, 0x7b, 0x6a, 0x62, 0x2f, 0xc6, 0xdc, 0x5d, 0x00, 0x78, 0x3e, 0x75,
	0x30, 0xc3, 0xb9, 0xb6, 0x56, 0x17, 0x23, 0xff, 0x4c, 0x08, 0x4b, 0x0c, 0x3a, 0x75, 0x65, 0x1a,
	0xe0, 0x45, 0x1a, 0x62, 0xb0, 0xf5, 0x3c, 0xe5, 0x3e, 0x63, 0x8d, 0x0f, 0xd2, 0x12, 0x12, 0x1a,
	0x96, 0xe8, 0x3b, 0xb6, 0x49, 0xf7, 0x71, 0x52, 0x1a, 0x87, 0x97, 0x61, 0x6a, 0x7d, 0x69, 0xd6,
	0x11, 0xf8, 0x50, 0x1a, 0xd7, 0x47, 0x33, 0x94, 0x1c, 0x0f, 0xd0, 0xa4, 0x52, 0x75, 0xd6, 0xc0,
	0xde, 0x60, 0xfe, 0x7d, 0x0e, 0x6a, 0x9e, 0x97, 0x4e, 0xd1, 0x69, 0x7d, 0x95, 0xf0, 0x5a, 0x76,
	0x1e, 0x7f, 0xbc, 0xa5, 0xb9, 0x99, 0xbd, 0xc3, 0xc9, 0x26, 0x45, 0x84, 0xfa, 0x1d, 0x53, 0xbc,
	0xfd, 0xff, 0x74, 0x66, 0x24, 0xac, 0x7a, 0xb0, 0xc1, 0x7b, 0x89, 0x5e, 0x67, 0xe9, 0xb5, 0x89,
	0x1f, 0x93, 0x5a, 0x91, 0xe1, 0xd2, 0x44, 0x5f, 0x33, 0xe6, 0x5f, 0x68, 0x80, 0x3e, 0xa1, 0x07,
	0x98, 0xb7, 0x5c, 0x9a, 0x5a, 0xfe, 0x9e, 0xce, 0xca, 0x5f, 0x9b, 0x2e, 0x16, 0xec, 0xf9, 0xb9,
	0xef, 0x13, 0x5c, 0xa8, 0x4b, 0x43, 0x03, 0xe0, 0xdf, 0x6f, 0x00, 0x3f, 0xc3, 0x8d, 0x9d, 0xca,
	0x76, 0x69, 0xa2, 0x1f, 0xb3, 0xf5, 0x9a, 0x82, 0xe7, 0x89, 0x9f, 0xd3, 0x0c, 0x57, 0xe6, 0x3e,
	0x4e, 0xea, 0x23, 0x16, 0xa1, 0xe5, 0x73, 0x69, 0x3e, 0x79, 0x41, 0x72, 0x2a, 0x7e, 0x81, 0xdc,
	0xcd, 0x26, 0x42, 0xf4, 0x7b, 0xac, 0x6d, 0xdd, 0xc4, 0xb3, 0x5e, 0xd2, 0x41, 0xad, 0x9b, 0x10,
	0xf8, 0x90, 0x75, 0x21, 0x67, 0xa9, 0x8d, 0x12, 0x4e, 0x97, 0x45, 0xfc, 0x0b, 0x92, 0x97, 0x5c,
	0x4d, 0x8e, 0x83, 0x0d, 0xb4, 0xbb, 0xa9, 0x2c, 0xbf, 0x24, 0xed, 0xce, 0x2b, 0x55, 0x89, 0x7e,
	0xc2, 0xa2, 0xfa, 0x5e, 0x4b, 0xe5, 0xe8, 0xaa, 0xfd, 0x0a, 0x4b, 0xb0, 0x11, 0x6e, 0xf4, 0xb1,
	0xb7, 0x47, 0x6f, 0xd8, 0xfd, 0x9a, 0xfd, 0x59, 0xbb, 0x31, 0x74, 0xb0, 0x34, 0x8d, 0x9d, 0xbf,
	0xc6, 0x9d, 0xbb, 0x61, 0xe7, 0x9f, 0xb4, 0x1b, 0x9f, 0x20, 0xa5, 0xf2, 0x81, 0xb2, 0x8d, 0xb7,
	0x8b, 0x2e, 0x56, 0xfc, 0x8a, 0x54, 0x87, 0x8c, 0xd4, 0xfc, 0xe8, 0x05, 0x8b, 0x87, 0x7c, 0x9a,
	0xb9, 0xb4, 0x28, 0x9d, 0x1e, 0x6a, 0xc1, 0xe1, 0x34, 0xbe, 0x10, 0xbf, 0xc1, 0x43, 0xec, 0x20,
	0x7e, 0xd6, 0x80, 0xa9, 0x2c, 0x4f, 0xd9, 0x0e, 0x88, 0xd0, 0x48, 0x15, 0xca, 0xd0, 0x2e, 0x55,
	0xf0, 0x41, 0xa6, 0x64, 0xfc, 0x5b, 0x8c, 0x03, 0x0f, 0xe5, 0xb7, 0x15, 0x78, 0x42, 0x18, 0x34,
	0x79, 0x46, 0xba, 0x5e, 0x53, 0x93, 0x45, 0x43, 0xb3, 0xbe, 0x61, 0xb0, 0x4c, 0xcb, 0xe1, 0x30,
	0x2b, 0xb9, 0x8c, 0xdf, 0x50, 0x29, 0x85, 0xc8, 0xcf, 0xc9, 0x02, 0x6f, 0xea, 0xb1, 0x1e, 0x8d,
	0x95, 0x75, 0xe1, 0x64, 0x47, 0xc8, 0xe9, 0x7a, 0xab, 0x3f, 0xda, 0xd7, 0x8c, 0x19, 0xa9, 0x03,
	0xe5, 0x18, 0x93, 0x6a, 0x1b, 0xa9, 0x3d, 0xfc, 0x1d, 0xdb, 0x84, 0x8e, 0xd1, 0x84, 0x06, 0xd6,
	0x09, 0xcd, 0x74, 0xce, 0x05, 0xcd, 0xa8, 0xe7, 0x3e, 0x62, 0x77, 0x42, 0x3b, 0x50, 0x79, 0x3d,
	0xfb, 0x77, 0x24, 0x8e, 0xbe, 0x07, 0x47, 0x22, 0xf7, 0xf4, 0x03, 0xb6, 0x81, 0xed, 0x6a, 0x72,
	0xdf, 0x92, 0x04, 0xa0, 0xbd, 0x66, 0x3e, 0x67, 0xb1, 0x30, 0xf0, 0x49, 0x11, 0x65, 0x51, 0x28,
	0xe1, 0x9a, 0x3b, 0x7e, 0x4f, 0x9f, 0x14, 0xc4, 0x8f, 0x08, 0xae, 0x37, 0xde, 0x67, 0x9d, 0x42,
	0x5d, 0xbb, 0x34, 0x1b, 0xe4, 0x20, 0xd3, 0xa7, 0x78, 0x1b, 0xda, 0x60, 0x7a, 0x3f, 0xc8, 0x4f,
	0x65, 0x8d, 0x3b, 0xc4, 0xff, 0xd0, 0xc0, 0x1d, 0xe0, 0x1b, 0x6c, 0x41, 0x94, 0x36, 0x7e, 0x87,
	0x76, 0xf8, 0x19, 0x4d, 0x18, 0x83, 0x5a, 0x68, 0xeb, 0xb4, 0xb0, 0xf1, 0xfb, 0x5b, 0xfd, 0x76,
	0x57, 0xb2, 0x92, 0x34, 0x62, 0x44, 0x7f, 0x85, 0xc7, 0x3b, 0x3d, 0x97, 0x7c, 0xd4, 0x1e, 0x46,
	0xbd, 0xb8, 0xc5, 0xa8, 0xd5, 0x7b, 0x2c, 0xe9, 0x72, 0x6d, 0xfb, 0x75, 0xf0, 0x31, 0x5b, 0x09,
	0x7a, 0x7b, 0x86, 0x51, 0xcf, 0x6e, 0x29, 0xaa, 0xf7, 0x9a, 0x04, 0xf7, 0x30, 0x87, 0x6a, 0x28,
	0x53, 0x67, 0xf4, 0x68, 0xa4, 0x8c, 0x92, 0xf1, 0x39, 0xcd, 0xa1, 0x1a, 0xca, 0x8b, 0x60, 0xc3,
	0x27, 0xa8, 0xe3, 0x85, 0x1c, 0x7c, 0x89, 0x3f, 0x20, 0x1c, 0x96, 0x80, 0x8c, 0xb9, 0x36, 0x13,
	0x5d, 0xc4, 0x7f, 0x24, 0xc4, 0x2f, 0x41, 0x0d, 0x7d, 0x8c, 0x54, 0x8f, 0x8a, 0x12, 0x5c, 0x27,
	0x74, 0xcb, 0xbc, 0xf9, 0x94, 0xac, 0x83, 0x65, 0xfc, 0x63, 0xff, 0xe4, 0xbf, 0x01, 0x00, 0x00,
	0xff, 0xff, 0xb0, 0xc8, 0x51, 0xa1, 0xf6, 0x0f, 0x00, 0x00,
}
