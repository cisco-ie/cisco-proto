/*
Copyright 2019 Cisco Systems

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: cfm_ma_mep_errors.proto

package cisco_ios_xr_ethernet_cfm_oper_cfm_global_mep_configuration_errors_mep_configuration_error

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type CfmMaMepErrors_KEYS struct {
	Domain               string   `protobuf:"bytes,1,opt,name=domain,proto3" json:"domain,omitempty"`
	Service              string   `protobuf:"bytes,2,opt,name=service,proto3" json:"service,omitempty"`
	Interface            string   `protobuf:"bytes,3,opt,name=interface,proto3" json:"interface,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CfmMaMepErrors_KEYS) Reset()         { *m = CfmMaMepErrors_KEYS{} }
func (m *CfmMaMepErrors_KEYS) String() string { return proto.CompactTextString(m) }
func (*CfmMaMepErrors_KEYS) ProtoMessage()    {}
func (*CfmMaMepErrors_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_9b8ea09b5d77b4ff, []int{0}
}

func (m *CfmMaMepErrors_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CfmMaMepErrors_KEYS.Unmarshal(m, b)
}
func (m *CfmMaMepErrors_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CfmMaMepErrors_KEYS.Marshal(b, m, deterministic)
}
func (m *CfmMaMepErrors_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CfmMaMepErrors_KEYS.Merge(m, src)
}
func (m *CfmMaMepErrors_KEYS) XXX_Size() int {
	return xxx_messageInfo_CfmMaMepErrors_KEYS.Size(m)
}
func (m *CfmMaMepErrors_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_CfmMaMepErrors_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_CfmMaMepErrors_KEYS proto.InternalMessageInfo

func (m *CfmMaMepErrors_KEYS) GetDomain() string {
	if m != nil {
		return m.Domain
	}
	return ""
}

func (m *CfmMaMepErrors_KEYS) GetService() string {
	if m != nil {
		return m.Service
	}
	return ""
}

func (m *CfmMaMepErrors_KEYS) GetInterface() string {
	if m != nil {
		return m.Interface
	}
	return ""
}

type CfmMaMp struct {
	DomainName           string   `protobuf:"bytes,1,opt,name=domain_name,json=domainName,proto3" json:"domain_name,omitempty"`
	Level                string   `protobuf:"bytes,2,opt,name=level,proto3" json:"level,omitempty"`
	ServiceName          string   `protobuf:"bytes,3,opt,name=service_name,json=serviceName,proto3" json:"service_name,omitempty"`
	Interface            string   `protobuf:"bytes,4,opt,name=interface,proto3" json:"interface,omitempty"`
	MaintenancePointType string   `protobuf:"bytes,5,opt,name=maintenance_point_type,json=maintenancePointType,proto3" json:"maintenance_point_type,omitempty"`
	MepId                uint32   `protobuf:"varint,6,opt,name=mep_id,json=mepId,proto3" json:"mep_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CfmMaMp) Reset()         { *m = CfmMaMp{} }
func (m *CfmMaMp) String() string { return proto.CompactTextString(m) }
func (*CfmMaMp) ProtoMessage()    {}
func (*CfmMaMp) Descriptor() ([]byte, []int) {
	return fileDescriptor_9b8ea09b5d77b4ff, []int{1}
}

func (m *CfmMaMp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CfmMaMp.Unmarshal(m, b)
}
func (m *CfmMaMp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CfmMaMp.Marshal(b, m, deterministic)
}
func (m *CfmMaMp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CfmMaMp.Merge(m, src)
}
func (m *CfmMaMp) XXX_Size() int {
	return xxx_messageInfo_CfmMaMp.Size(m)
}
func (m *CfmMaMp) XXX_DiscardUnknown() {
	xxx_messageInfo_CfmMaMp.DiscardUnknown(m)
}

var xxx_messageInfo_CfmMaMp proto.InternalMessageInfo

func (m *CfmMaMp) GetDomainName() string {
	if m != nil {
		return m.DomainName
	}
	return ""
}

func (m *CfmMaMp) GetLevel() string {
	if m != nil {
		return m.Level
	}
	return ""
}

func (m *CfmMaMp) GetServiceName() string {
	if m != nil {
		return m.ServiceName
	}
	return ""
}

func (m *CfmMaMp) GetInterface() string {
	if m != nil {
		return m.Interface
	}
	return ""
}

func (m *CfmMaMp) GetMaintenancePointType() string {
	if m != nil {
		return m.MaintenancePointType
	}
	return ""
}

func (m *CfmMaMp) GetMepId() uint32 {
	if m != nil {
		return m.MepId
	}
	return 0
}

type CfmBagBdid struct {
	BridgeDomainIdFormat string   `protobuf:"bytes,1,opt,name=bridge_domain_id_format,json=bridgeDomainIdFormat,proto3" json:"bridge_domain_id_format,omitempty"`
	Group                string   `protobuf:"bytes,2,opt,name=group,proto3" json:"group,omitempty"`
	Name                 string   `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	CeId                 uint32   `protobuf:"varint,4,opt,name=ce_id,json=ceId,proto3" json:"ce_id,omitempty"`
	RemoteCeId           uint32   `protobuf:"varint,5,opt,name=remote_ce_id,json=remoteCeId,proto3" json:"remote_ce_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CfmBagBdid) Reset()         { *m = CfmBagBdid{} }
func (m *CfmBagBdid) String() string { return proto.CompactTextString(m) }
func (*CfmBagBdid) ProtoMessage()    {}
func (*CfmBagBdid) Descriptor() ([]byte, []int) {
	return fileDescriptor_9b8ea09b5d77b4ff, []int{2}
}

func (m *CfmBagBdid) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CfmBagBdid.Unmarshal(m, b)
}
func (m *CfmBagBdid) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CfmBagBdid.Marshal(b, m, deterministic)
}
func (m *CfmBagBdid) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CfmBagBdid.Merge(m, src)
}
func (m *CfmBagBdid) XXX_Size() int {
	return xxx_messageInfo_CfmBagBdid.Size(m)
}
func (m *CfmBagBdid) XXX_DiscardUnknown() {
	xxx_messageInfo_CfmBagBdid.DiscardUnknown(m)
}

var xxx_messageInfo_CfmBagBdid proto.InternalMessageInfo

func (m *CfmBagBdid) GetBridgeDomainIdFormat() string {
	if m != nil {
		return m.BridgeDomainIdFormat
	}
	return ""
}

func (m *CfmBagBdid) GetGroup() string {
	if m != nil {
		return m.Group
	}
	return ""
}

func (m *CfmBagBdid) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CfmBagBdid) GetCeId() uint32 {
	if m != nil {
		return m.CeId
	}
	return 0
}

func (m *CfmBagBdid) GetRemoteCeId() uint32 {
	if m != nil {
		return m.RemoteCeId
	}
	return 0
}

type CfmBagSatPduCaps struct {
	Responder            bool     `protobuf:"varint,1,opt,name=responder,proto3" json:"responder,omitempty"`
	Controller           bool     `protobuf:"varint,2,opt,name=controller,proto3" json:"controller,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CfmBagSatPduCaps) Reset()         { *m = CfmBagSatPduCaps{} }
func (m *CfmBagSatPduCaps) String() string { return proto.CompactTextString(m) }
func (*CfmBagSatPduCaps) ProtoMessage()    {}
func (*CfmBagSatPduCaps) Descriptor() ([]byte, []int) {
	return fileDescriptor_9b8ea09b5d77b4ff, []int{3}
}

func (m *CfmBagSatPduCaps) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CfmBagSatPduCaps.Unmarshal(m, b)
}
func (m *CfmBagSatPduCaps) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CfmBagSatPduCaps.Marshal(b, m, deterministic)
}
func (m *CfmBagSatPduCaps) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CfmBagSatPduCaps.Merge(m, src)
}
func (m *CfmBagSatPduCaps) XXX_Size() int {
	return xxx_messageInfo_CfmBagSatPduCaps.Size(m)
}
func (m *CfmBagSatPduCaps) XXX_DiscardUnknown() {
	xxx_messageInfo_CfmBagSatPduCaps.DiscardUnknown(m)
}

var xxx_messageInfo_CfmBagSatPduCaps proto.InternalMessageInfo

func (m *CfmBagSatPduCaps) GetResponder() bool {
	if m != nil {
		return m.Responder
	}
	return false
}

func (m *CfmBagSatPduCaps) GetController() bool {
	if m != nil {
		return m.Controller
	}
	return false
}

type CfmBagSatAccessPortCaps struct {
	Loopback                 *CfmBagSatPduCaps `protobuf:"bytes,1,opt,name=loopback,proto3" json:"loopback,omitempty"`
	DelayMeasurement         *CfmBagSatPduCaps `protobuf:"bytes,2,opt,name=delay_measurement,json=delayMeasurement,proto3" json:"delay_measurement,omitempty"`
	SyntheticLossMeasurement *CfmBagSatPduCaps `protobuf:"bytes,3,opt,name=synthetic_loss_measurement,json=syntheticLossMeasurement,proto3" json:"synthetic_loss_measurement,omitempty"`
	XXX_NoUnkeyedLiteral     struct{}          `json:"-"`
	XXX_unrecognized         []byte            `json:"-"`
	XXX_sizecache            int32             `json:"-"`
}

func (m *CfmBagSatAccessPortCaps) Reset()         { *m = CfmBagSatAccessPortCaps{} }
func (m *CfmBagSatAccessPortCaps) String() string { return proto.CompactTextString(m) }
func (*CfmBagSatAccessPortCaps) ProtoMessage()    {}
func (*CfmBagSatAccessPortCaps) Descriptor() ([]byte, []int) {
	return fileDescriptor_9b8ea09b5d77b4ff, []int{4}
}

func (m *CfmBagSatAccessPortCaps) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CfmBagSatAccessPortCaps.Unmarshal(m, b)
}
func (m *CfmBagSatAccessPortCaps) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CfmBagSatAccessPortCaps.Marshal(b, m, deterministic)
}
func (m *CfmBagSatAccessPortCaps) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CfmBagSatAccessPortCaps.Merge(m, src)
}
func (m *CfmBagSatAccessPortCaps) XXX_Size() int {
	return xxx_messageInfo_CfmBagSatAccessPortCaps.Size(m)
}
func (m *CfmBagSatAccessPortCaps) XXX_DiscardUnknown() {
	xxx_messageInfo_CfmBagSatAccessPortCaps.DiscardUnknown(m)
}

var xxx_messageInfo_CfmBagSatAccessPortCaps proto.InternalMessageInfo

func (m *CfmBagSatAccessPortCaps) GetLoopback() *CfmBagSatPduCaps {
	if m != nil {
		return m.Loopback
	}
	return nil
}

func (m *CfmBagSatAccessPortCaps) GetDelayMeasurement() *CfmBagSatPduCaps {
	if m != nil {
		return m.DelayMeasurement
	}
	return nil
}

func (m *CfmBagSatAccessPortCaps) GetSyntheticLossMeasurement() *CfmBagSatPduCaps {
	if m != nil {
		return m.SyntheticLossMeasurement
	}
	return nil
}

type CfmMaMepErrors struct {
	Mep                                   *CfmMaMp                 `protobuf:"bytes,50,opt,name=mep,proto3" json:"mep,omitempty"`
	CcmInterval                           string                   `protobuf:"bytes,51,opt,name=ccm_interval,json=ccmInterval,proto3" json:"ccm_interval,omitempty"`
	NoDomain                              bool                     `protobuf:"varint,52,opt,name=no_domain,json=noDomain,proto3" json:"no_domain,omitempty"`
	NoService                             bool                     `protobuf:"varint,53,opt,name=no_service,json=noService,proto3" json:"no_service,omitempty"`
	BridgeDomainMismatch                  bool                     `protobuf:"varint,54,opt,name=bridge_domain_mismatch,json=bridgeDomainMismatch,proto3" json:"bridge_domain_mismatch,omitempty"`
	LevelConflict                         bool                     `protobuf:"varint,55,opt,name=level_conflict,json=levelConflict,proto3" json:"level_conflict,omitempty"`
	CcmIntervalNotSupported               bool                     `protobuf:"varint,56,opt,name=ccm_interval_not_supported,json=ccmIntervalNotSupported,proto3" json:"ccm_interval_not_supported,omitempty"`
	OffloadOutOfResources                 bool                     `protobuf:"varint,57,opt,name=offload_out_of_resources,json=offloadOutOfResources,proto3" json:"offload_out_of_resources,omitempty"`
	OffloadMultipleLocalMep               bool                     `protobuf:"varint,58,opt,name=offload_multiple_local_mep,json=offloadMultipleLocalMep,proto3" json:"offload_multiple_local_mep,omitempty"`
	OffloadNoCrossCheck                   bool                     `protobuf:"varint,59,opt,name=offload_no_cross_check,json=offloadNoCrossCheck,proto3" json:"offload_no_cross_check,omitempty"`
	OffloadMultiplePeerMeps               bool                     `protobuf:"varint,60,opt,name=offload_multiple_peer_meps,json=offloadMultiplePeerMeps,proto3" json:"offload_multiple_peer_meps,omitempty"`
	OffloadMepDirectionNotSupported       bool                     `protobuf:"varint,61,opt,name=offload_mep_direction_not_supported,json=offloadMepDirectionNotSupported,proto3" json:"offload_mep_direction_not_supported,omitempty"`
	AisConfigured                         bool                     `protobuf:"varint,62,opt,name=ais_configured,json=aisConfigured,proto3" json:"ais_configured,omitempty"`
	BundleLevel0                          bool                     `protobuf:"varint,63,opt,name=bundle_level0,json=bundleLevel0,proto3" json:"bundle_level0,omitempty"`
	BridgeDomainNotInBdInfra              bool                     `protobuf:"varint,64,opt,name=bridge_domain_not_in_bd_infra,json=bridgeDomainNotInBdInfra,proto3" json:"bridge_domain_not_in_bd_infra,omitempty"`
	MaidFormatNotSupported                bool                     `protobuf:"varint,65,opt,name=maid_format_not_supported,json=maidFormatNotSupported,proto3" json:"maid_format_not_supported,omitempty"`
	FatalOffloadError                     bool                     `protobuf:"varint,66,opt,name=fatal_offload_error,json=fatalOffloadError,proto3" json:"fatal_offload_error,omitempty"`
	SatelliteLimitation                   bool                     `protobuf:"varint,67,opt,name=satellite_limitation,json=satelliteLimitation,proto3" json:"satellite_limitation,omitempty"`
	SlaLoopbackOperationsDisabled         bool                     `protobuf:"varint,68,opt,name=sla_loopback_operations_disabled,json=slaLoopbackOperationsDisabled,proto3" json:"sla_loopback_operations_disabled,omitempty"`
	SlaSyntheticLossOperationsDisabled    bool                     `protobuf:"varint,69,opt,name=sla_synthetic_loss_operations_disabled,json=slaSyntheticLossOperationsDisabled,proto3" json:"sla_synthetic_loss_operations_disabled,omitempty"`
	SlaDelayMeasurementOperationsDisabled bool                     `protobuf:"varint,70,opt,name=sla_delay_measurement_operations_disabled,json=slaDelayMeasurementOperationsDisabled,proto3" json:"sla_delay_measurement_operations_disabled,omitempty"`
	NoValidMacAddress                     bool                     `protobuf:"varint,71,opt,name=no_valid_mac_address,json=noValidMacAddress,proto3" json:"no_valid_mac_address,omitempty"`
	NoInterfaceType                       bool                     `protobuf:"varint,72,opt,name=no_interface_type,json=noInterfaceType,proto3" json:"no_interface_type,omitempty"`
	NotInIm                               bool                     `protobuf:"varint,73,opt,name=not_in_im,json=notInIm,proto3" json:"not_in_im,omitempty"`
	NoMlacp                               bool                     `protobuf:"varint,74,opt,name=no_mlacp,json=noMlacp,proto3" json:"no_mlacp,omitempty"`
	ServiceBridgeDomain                   *CfmBagBdid              `protobuf:"bytes,75,opt,name=service_bridge_domain,json=serviceBridgeDomain,proto3" json:"service_bridge_domain,omitempty"`
	InterfaceBridgeDomain                 *CfmBagBdid              `protobuf:"bytes,76,opt,name=interface_bridge_domain,json=interfaceBridgeDomain,proto3" json:"interface_bridge_domain,omitempty"`
	SatelliteErrorString                  string                   `protobuf:"bytes,77,opt,name=satellite_error_string,json=satelliteErrorString,proto3" json:"satellite_error_string,omitempty"`
	SatelliteId                           uint32                   `protobuf:"varint,78,opt,name=satellite_id,json=satelliteId,proto3" json:"satellite_id,omitempty"`
	SatelliteCapabilities                 *CfmBagSatAccessPortCaps `protobuf:"bytes,79,opt,name=satellite_capabilities,json=satelliteCapabilities,proto3" json:"satellite_capabilities,omitempty"`
	XXX_NoUnkeyedLiteral                  struct{}                 `json:"-"`
	XXX_unrecognized                      []byte                   `json:"-"`
	XXX_sizecache                         int32                    `json:"-"`
}

func (m *CfmMaMepErrors) Reset()         { *m = CfmMaMepErrors{} }
func (m *CfmMaMepErrors) String() string { return proto.CompactTextString(m) }
func (*CfmMaMepErrors) ProtoMessage()    {}
func (*CfmMaMepErrors) Descriptor() ([]byte, []int) {
	return fileDescriptor_9b8ea09b5d77b4ff, []int{5}
}

func (m *CfmMaMepErrors) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CfmMaMepErrors.Unmarshal(m, b)
}
func (m *CfmMaMepErrors) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CfmMaMepErrors.Marshal(b, m, deterministic)
}
func (m *CfmMaMepErrors) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CfmMaMepErrors.Merge(m, src)
}
func (m *CfmMaMepErrors) XXX_Size() int {
	return xxx_messageInfo_CfmMaMepErrors.Size(m)
}
func (m *CfmMaMepErrors) XXX_DiscardUnknown() {
	xxx_messageInfo_CfmMaMepErrors.DiscardUnknown(m)
}

var xxx_messageInfo_CfmMaMepErrors proto.InternalMessageInfo

func (m *CfmMaMepErrors) GetMep() *CfmMaMp {
	if m != nil {
		return m.Mep
	}
	return nil
}

func (m *CfmMaMepErrors) GetCcmInterval() string {
	if m != nil {
		return m.CcmInterval
	}
	return ""
}

func (m *CfmMaMepErrors) GetNoDomain() bool {
	if m != nil {
		return m.NoDomain
	}
	return false
}

func (m *CfmMaMepErrors) GetNoService() bool {
	if m != nil {
		return m.NoService
	}
	return false
}

func (m *CfmMaMepErrors) GetBridgeDomainMismatch() bool {
	if m != nil {
		return m.BridgeDomainMismatch
	}
	return false
}

func (m *CfmMaMepErrors) GetLevelConflict() bool {
	if m != nil {
		return m.LevelConflict
	}
	return false
}

func (m *CfmMaMepErrors) GetCcmIntervalNotSupported() bool {
	if m != nil {
		return m.CcmIntervalNotSupported
	}
	return false
}

func (m *CfmMaMepErrors) GetOffloadOutOfResources() bool {
	if m != nil {
		return m.OffloadOutOfResources
	}
	return false
}

func (m *CfmMaMepErrors) GetOffloadMultipleLocalMep() bool {
	if m != nil {
		return m.OffloadMultipleLocalMep
	}
	return false
}

func (m *CfmMaMepErrors) GetOffloadNoCrossCheck() bool {
	if m != nil {
		return m.OffloadNoCrossCheck
	}
	return false
}

func (m *CfmMaMepErrors) GetOffloadMultiplePeerMeps() bool {
	if m != nil {
		return m.OffloadMultiplePeerMeps
	}
	return false
}

func (m *CfmMaMepErrors) GetOffloadMepDirectionNotSupported() bool {
	if m != nil {
		return m.OffloadMepDirectionNotSupported
	}
	return false
}

func (m *CfmMaMepErrors) GetAisConfigured() bool {
	if m != nil {
		return m.AisConfigured
	}
	return false
}

func (m *CfmMaMepErrors) GetBundleLevel0() bool {
	if m != nil {
		return m.BundleLevel0
	}
	return false
}

func (m *CfmMaMepErrors) GetBridgeDomainNotInBdInfra() bool {
	if m != nil {
		return m.BridgeDomainNotInBdInfra
	}
	return false
}

func (m *CfmMaMepErrors) GetMaidFormatNotSupported() bool {
	if m != nil {
		return m.MaidFormatNotSupported
	}
	return false
}

func (m *CfmMaMepErrors) GetFatalOffloadError() bool {
	if m != nil {
		return m.FatalOffloadError
	}
	return false
}

func (m *CfmMaMepErrors) GetSatelliteLimitation() bool {
	if m != nil {
		return m.SatelliteLimitation
	}
	return false
}

func (m *CfmMaMepErrors) GetSlaLoopbackOperationsDisabled() bool {
	if m != nil {
		return m.SlaLoopbackOperationsDisabled
	}
	return false
}

func (m *CfmMaMepErrors) GetSlaSyntheticLossOperationsDisabled() bool {
	if m != nil {
		return m.SlaSyntheticLossOperationsDisabled
	}
	return false
}

func (m *CfmMaMepErrors) GetSlaDelayMeasurementOperationsDisabled() bool {
	if m != nil {
		return m.SlaDelayMeasurementOperationsDisabled
	}
	return false
}

func (m *CfmMaMepErrors) GetNoValidMacAddress() bool {
	if m != nil {
		return m.NoValidMacAddress
	}
	return false
}

func (m *CfmMaMepErrors) GetNoInterfaceType() bool {
	if m != nil {
		return m.NoInterfaceType
	}
	return false
}

func (m *CfmMaMepErrors) GetNotInIm() bool {
	if m != nil {
		return m.NotInIm
	}
	return false
}

func (m *CfmMaMepErrors) GetNoMlacp() bool {
	if m != nil {
		return m.NoMlacp
	}
	return false
}

func (m *CfmMaMepErrors) GetServiceBridgeDomain() *CfmBagBdid {
	if m != nil {
		return m.ServiceBridgeDomain
	}
	return nil
}

func (m *CfmMaMepErrors) GetInterfaceBridgeDomain() *CfmBagBdid {
	if m != nil {
		return m.InterfaceBridgeDomain
	}
	return nil
}

func (m *CfmMaMepErrors) GetSatelliteErrorString() string {
	if m != nil {
		return m.SatelliteErrorString
	}
	return ""
}

func (m *CfmMaMepErrors) GetSatelliteId() uint32 {
	if m != nil {
		return m.SatelliteId
	}
	return 0
}

func (m *CfmMaMepErrors) GetSatelliteCapabilities() *CfmBagSatAccessPortCaps {
	if m != nil {
		return m.SatelliteCapabilities
	}
	return nil
}

func init() {
	proto.RegisterType((*CfmMaMepErrors_KEYS)(nil), "cisco_ios_xr_ethernet_cfm_oper.cfm.global.mep_configuration_errors.mep_configuration_error.cfm_ma_mep_errors_KEYS")
	proto.RegisterType((*CfmMaMp)(nil), "cisco_ios_xr_ethernet_cfm_oper.cfm.global.mep_configuration_errors.mep_configuration_error.cfm_ma_mp")
	proto.RegisterType((*CfmBagBdid)(nil), "cisco_ios_xr_ethernet_cfm_oper.cfm.global.mep_configuration_errors.mep_configuration_error.cfm_bag_bdid")
	proto.RegisterType((*CfmBagSatPduCaps)(nil), "cisco_ios_xr_ethernet_cfm_oper.cfm.global.mep_configuration_errors.mep_configuration_error.cfm_bag_sat_pdu_caps")
	proto.RegisterType((*CfmBagSatAccessPortCaps)(nil), "cisco_ios_xr_ethernet_cfm_oper.cfm.global.mep_configuration_errors.mep_configuration_error.cfm_bag_sat_access_port_caps")
	proto.RegisterType((*CfmMaMepErrors)(nil), "cisco_ios_xr_ethernet_cfm_oper.cfm.global.mep_configuration_errors.mep_configuration_error.cfm_ma_mep_errors")
}

func init() { proto.RegisterFile("cfm_ma_mep_errors.proto", fileDescriptor_9b8ea09b5d77b4ff) }

var fileDescriptor_9b8ea09b5d77b4ff = []byte{
	// 1197 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xc4, 0x57, 0xdb, 0x72, 0x9b, 0xb5,
	0x13, 0x1f, 0xff, 0x73, 0x68, 0xa2, 0xa4, 0xed, 0x3f, 0xca, 0x49, 0x2d, 0x2d, 0x0d, 0xee, 0x94,
	0x29, 0x5c, 0x18, 0x68, 0x53, 0x4a, 0x29, 0x50, 0x5a, 0xa7, 0x2d, 0xa6, 0x76, 0xd2, 0x71, 0x3a,
	0x0c, 0x70, 0xa3, 0x91, 0xa5, 0x75, 0xa2, 0xa9, 0x3e, 0xe9, 0x1b, 0x49, 0x0e, 0xcd, 0x3b, 0xf0,
	0x08, 0x30, 0xc3, 0x15, 0x97, 0xf0, 0x06, 0x3c, 0x03, 0x4f, 0xc4, 0x30, 0xda, 0xef, 0x10, 0x3b,
	0x35, 0x97, 0x4d, 0xef, 0xac, 0xfd, 0xed, 0xe1, 0xb7, 0xfa, 0x76, 0x57, 0x6b, 0xb2, 0x29, 0x87,
	0x19, 0xcf, 0x04, 0xcf, 0x20, 0xe7, 0xe0, 0xbd, 0xf3, 0xa1, 0x95, 0x7b, 0x17, 0x1d, 0xfd, 0x51,
	0xea, 0x20, 0x1d, 0xd7, 0x2e, 0xf0, 0x57, 0x9e, 0x43, 0x3c, 0x04, 0x6f, 0x21, 0xf2, 0xa4, 0xee,
	0x72, 0xf0, 0x2d, 0x39, 0xcc, 0x5a, 0x07, 0xc6, 0x0d, 0x84, 0x69, 0x25, 0x5b, 0xe9, 0xec, 0x50,
	0x1f, 0x8c, 0xbc, 0x88, 0xda, 0xd9, 0xca, 0xd3, 0x7f, 0x00, 0xcd, 0x43, 0xb2, 0xf1, 0x5a, 0x58,
	0xfe, 0xec, 0xf1, 0x0f, 0xfb, 0x74, 0x83, 0xcc, 0x2b, 0x97, 0x09, 0x6d, 0x59, 0x63, 0xab, 0x71,
	0x73, 0xb1, 0x5f, 0x9e, 0x28, 0x23, 0xe7, 0x02, 0xf8, 0x23, 0x2d, 0x81, 0xfd, 0x0f, 0x81, 0xea,
	0x48, 0xaf, 0x90, 0x45, 0x6d, 0x23, 0xf8, 0xa1, 0x90, 0xc0, 0x66, 0x10, 0x3b, 0x11, 0x34, 0xff,
	0x6e, 0x90, 0xc5, 0x2a, 0x54, 0x4e, 0xaf, 0x91, 0xa5, 0xc2, 0x1f, 0xb7, 0x22, 0x83, 0x32, 0x04,
	0x29, 0x44, 0xbb, 0x22, 0x03, 0xba, 0x46, 0xe6, 0x0c, 0x1c, 0x81, 0x29, 0x83, 0x14, 0x07, 0xfa,
	0x1e, 0x59, 0x2e, 0xa3, 0x15, 0x76, 0x45, 0x94, 0xa5, 0x52, 0x86, 0x86, 0x13, 0x2c, 0x66, 0x4f,
	0xb1, 0xa0, 0xdb, 0x64, 0x23, 0x85, 0x88, 0x60, 0x85, 0x95, 0xc0, 0x73, 0xa7, 0x6d, 0xe4, 0xf1,
	0x38, 0x07, 0x36, 0x87, 0xaa, 0x6b, 0x63, 0xe8, 0xf3, 0x04, 0xbe, 0x38, 0xce, 0x81, 0xae, 0x93,
	0xf9, 0x74, 0x3d, 0x5a, 0xb1, 0xf9, 0xad, 0xc6, 0xcd, 0xf3, 0xfd, 0xb9, 0x0c, 0xf2, 0x8e, 0x6a,
	0xfe, 0xde, 0x20, 0xcb, 0x29, 0xa5, 0x81, 0x38, 0xe0, 0x03, 0xa5, 0x15, 0xbd, 0x43, 0x36, 0x07,
	0x5e, 0xab, 0x03, 0xe0, 0x65, 0x72, 0x5a, 0xf1, 0xa1, 0xf3, 0x99, 0x88, 0x65, 0x86, 0x6b, 0x05,
	0xbc, 0x83, 0x68, 0x47, 0x3d, 0x41, 0x2c, 0xe5, 0x7a, 0xe0, 0xdd, 0x28, 0xaf, 0x72, 0xc5, 0x03,
	0xa5, 0x64, 0x76, 0x2c, 0x47, 0xfc, 0x4d, 0x57, 0xc9, 0x9c, 0x84, 0xc4, 0x63, 0x16, 0x79, 0xcc,
	0x4a, 0xe8, 0x28, 0xba, 0x45, 0x96, 0x3d, 0x64, 0x2e, 0x02, 0x2f, 0xb0, 0x39, 0xc4, 0x48, 0x21,
	0x6b, 0x43, 0x47, 0x35, 0x5f, 0x90, 0xb5, 0x8a, 0x67, 0x10, 0x91, 0xe7, 0x6a, 0xc4, 0xa5, 0xc8,
	0x43, 0xba, 0x2b, 0x0f, 0x21, 0x77, 0x56, 0x81, 0x47, 0x86, 0x0b, 0xfd, 0x13, 0x01, 0x7d, 0x97,
	0x10, 0xe9, 0x6c, 0xf4, 0xce, 0x18, 0xf0, 0xc8, 0x6d, 0xa1, 0x3f, 0x26, 0x69, 0xfe, 0x33, 0x43,
	0xae, 0x8c, 0xbb, 0x15, 0x52, 0x42, 0x08, 0x3c, 0x77, 0x3e, 0x16, 0xee, 0x7f, 0x6e, 0x90, 0x05,
	0xe3, 0x5c, 0x3e, 0x10, 0xf2, 0x25, 0xba, 0x5f, 0xba, 0x95, 0xb7, 0xde, 0x5c, 0x31, 0xb7, 0xa6,
	0xe5, 0xd8, 0xaf, 0x19, 0xd0, 0x5f, 0x1b, 0x64, 0x45, 0x81, 0x11, 0xc7, 0x3c, 0x03, 0x11, 0x46,
	0x1e, 0x32, 0xb0, 0x11, 0xf3, 0x7a, 0x1b, 0xbc, 0xfe, 0x8f, 0x54, 0x7a, 0x27, 0x4c, 0xe8, 0x1f,
	0x0d, 0x72, 0x39, 0x1c, 0xdb, 0x78, 0x08, 0x51, 0x4b, 0x6e, 0x5c, 0x08, 0x13, 0x44, 0x67, 0xde,
	0x12, 0x51, 0x56, 0x73, 0xea, 0xba, 0x10, 0xc6, 0x08, 0x37, 0xff, 0xba, 0x48, 0x56, 0x5e, 0x9b,
	0x1e, 0xf4, 0x27, 0x32, 0x93, 0x41, 0xce, 0x6e, 0x21, 0x5d, 0x78, 0xd3, 0x74, 0x71, 0x9c, 0xf4,
	0x53, 0xc4, 0x34, 0x1c, 0xa4, 0xcc, 0x38, 0x36, 0xfb, 0x91, 0x30, 0xec, 0x76, 0x31, 0x1c, 0xa4,
	0xcc, 0x3a, 0xa5, 0x88, 0xbe, 0x43, 0x16, 0xad, 0x2b, 0x9b, 0x93, 0x6d, 0x63, 0x45, 0x2f, 0x58,
	0x57, 0xb4, 0x23, 0xbd, 0x4a, 0x88, 0x75, 0xbc, 0x1a, 0x6e, 0x77, 0x8a, 0x76, 0xb0, 0x6e, 0xbf,
	0x1c, 0x6f, 0xdb, 0x64, 0x63, 0xb2, 0xb9, 0x33, 0x1d, 0x32, 0x11, 0xe5, 0x21, 0xfb, 0x14, 0x55,
	0x27, 0x7a, 0xbb, 0x57, 0x62, 0xf4, 0x06, 0xb9, 0x80, 0xa3, 0x0b, 0x13, 0x30, 0x5a, 0x46, 0x76,
	0x17, 0xb5, 0xcf, 0xa3, 0xb4, 0x5d, 0x0a, 0xe9, 0x7d, 0x72, 0x79, 0x9c, 0x3b, 0xb7, 0x2e, 0xf2,
	0x30, 0xca, 0x53, 0x2f, 0x81, 0x62, 0x9f, 0xa1, 0xc9, 0xe6, 0x58, 0x26, 0xbb, 0x2e, 0xee, 0x57,
	0x30, 0xbd, 0x4b, 0x98, 0x1b, 0x0e, 0x8d, 0x13, 0x8a, 0xbb, 0x51, 0xe4, 0x6e, 0xc8, 0x3d, 0x04,
	0x37, 0xf2, 0x12, 0x02, 0xbb, 0x87, 0xa6, 0xeb, 0x25, 0xbe, 0x37, 0x8a, 0x7b, 0xc3, 0x7e, 0x05,
	0xa6, 0xa8, 0x95, 0x61, 0x36, 0x32, 0x51, 0xe7, 0x06, 0xb8, 0x71, 0x52, 0x98, 0xf4, 0x3d, 0xd9,
	0xe7, 0x45, 0xd4, 0x52, 0xa3, 0x57, 0x2a, 0x74, 0x13, 0xde, 0x83, 0x9c, 0xde, 0x26, 0x1b, 0x95,
	0xb1, 0x75, 0x5c, 0xfa, 0x54, 0xaf, 0xf2, 0x10, 0xe4, 0x4b, 0x76, 0x1f, 0x0d, 0x57, 0x4b, 0x74,
	0xd7, 0xb5, 0x13, 0xd6, 0x4e, 0xd0, 0xd4, 0x88, 0x39, 0x80, 0x4f, 0x01, 0x03, 0xfb, 0x62, 0x6a,
	0xc4, 0xe7, 0x00, 0xbe, 0x07, 0x79, 0xa0, 0x5d, 0x72, 0xbd, 0x36, 0x86, 0x9c, 0x2b, 0xed, 0x41,
	0x62, 0x39, 0x4c, 0xde, 0xd6, 0x97, 0xe8, 0xe5, 0x5a, 0xe5, 0x05, 0xf2, 0x9d, 0x4a, 0x71, 0xe2,
	0xd6, 0x6e, 0x90, 0x0b, 0x42, 0x87, 0xba, 0xb0, 0x40, 0xb1, 0xaf, 0x8a, 0x2f, 0x23, 0x74, 0x68,
	0xd7, 0x42, 0x7a, 0x9d, 0x9c, 0x1f, 0x8c, 0xac, 0x4a, 0x37, 0x93, 0xbe, 0xd8, 0xc7, 0xec, 0x01,
	0x6a, 0x2d, 0x17, 0xc2, 0x2e, 0xca, 0xe8, 0x03, 0x72, 0x75, 0xb2, 0x36, 0x12, 0x23, 0x6d, 0xf9,
	0x40, 0x71, 0x6d, 0x87, 0x5e, 0xb0, 0xaf, 0xd1, 0x88, 0x8d, 0x97, 0xc8, 0xae, 0x8b, 0x1d, 0xfb,
	0x48, 0x75, 0x12, 0x4e, 0xef, 0x91, 0x4b, 0x99, 0xa8, 0x5f, 0x8b, 0x53, 0x09, 0x3d, 0x44, 0xe3,
	0xf4, 0x70, 0x95, 0x2f, 0xc6, 0x44, 0x1e, 0x2d, 0xb2, 0x3a, 0x14, 0x51, 0x18, 0x5e, 0xdd, 0x0d,
	0x36, 0x07, 0x7b, 0x84, 0x46, 0x2b, 0x08, 0xed, 0x15, 0xc8, 0xe3, 0x04, 0xd0, 0x4f, 0xc8, 0x5a,
	0x10, 0x11, 0x8c, 0xd1, 0x11, 0xb8, 0xd1, 0x99, 0x8e, 0xd8, 0x53, 0xac, 0x5d, 0x7c, 0xb5, 0x1a,
	0xeb, 0xd6, 0x10, 0x7d, 0x4a, 0xb6, 0x82, 0x11, 0xbc, 0x9a, 0xa4, 0xd8, 0xb9, 0x88, 0x04, 0xae,
	0x74, 0x10, 0x03, 0x03, 0x8a, 0xed, 0xa0, 0xf9, 0xd5, 0x60, 0x44, 0xb7, 0x54, 0xdb, 0xab, 0xb5,
	0x76, 0x4a, 0x25, 0xda, 0x27, 0xef, 0x27, 0x47, 0xa7, 0xa6, 0xdc, 0x34, 0x77, 0x8f, 0xd1, 0x5d,
	0x33, 0x18, 0xb1, 0x3f, 0x3e, 0x7e, 0xa6, 0xf8, 0xfc, 0x9e, 0x7c, 0x90, 0x7c, 0xbe, 0x36, 0xd9,
	0xa7, 0xba, 0x7d, 0x82, 0x6e, 0x6f, 0x04, 0x23, 0x76, 0x4e, 0x8d, 0xdf, 0x29, 0x9e, 0x3f, 0x22,
	0x6b, 0xd6, 0xf1, 0x23, 0x61, 0xb4, 0xe2, 0x99, 0x90, 0x5c, 0x28, 0xe5, 0x21, 0x04, 0xf6, 0xb4,
	0xb8, 0x5a, 0xeb, 0xbe, 0x4b, 0x50, 0x4f, 0xc8, 0x87, 0x05, 0x40, 0x3f, 0x24, 0x2b, 0xd6, 0xf1,
	0x7a, 0xdb, 0x28, 0x16, 0x8b, 0x6f, 0x50, 0xfb, 0xa2, 0x75, 0x9d, 0x4a, 0x8e, 0x3b, 0xc5, 0xe5,
	0x34, 0x8a, 0xb0, 0x48, 0x74, 0xc6, 0x3a, 0xa8, 0x73, 0xce, 0xa6, 0x92, 0xe8, 0x64, 0xf4, 0x12,
	0x59, 0xb0, 0x8e, 0x67, 0x46, 0xc8, 0x9c, 0x7d, 0x5b, 0x41, 0xbd, 0x74, 0xa4, 0xbf, 0x34, 0xc8,
	0x7a, 0xb5, 0x02, 0x4d, 0x94, 0x1c, 0x7b, 0x86, 0x03, 0xf7, 0xf0, 0x2c, 0xde, 0x87, 0xb4, 0xec,
	0xf4, 0x57, 0x4b, 0x1a, 0x8f, 0xc6, 0x6a, 0x9a, 0xfe, 0xd6, 0x20, 0x9b, 0x27, 0xf9, 0x4f, 0x12,
	0xec, 0x9e, 0x31, 0xc1, 0xf5, 0x9a, 0xc8, 0x04, 0xc5, 0x6d, 0xb2, 0x71, 0x52, 0xff, 0x68, 0xc6,
	0x43, 0xf4, 0xda, 0x1e, 0xb0, 0x5e, 0xb1, 0xa3, 0xd5, 0x28, 0xf6, 0xcb, 0x3e, 0x62, 0xb8, 0x79,
	0xd6, 0x56, 0x5a, 0xb1, 0x5d, 0x5c, 0xb2, 0x96, 0x6a, 0x59, 0x47, 0xd1, 0x3f, 0x1b, 0xe3, 0x9e,
	0xa5, 0xc8, 0xc5, 0x40, 0x1b, 0x1d, 0x35, 0x04, 0xb6, 0x87, 0xa9, 0xbf, 0x3a, 0xab, 0xb7, 0xfb,
	0xf4, 0x26, 0xd6, 0x5f, 0xaf, 0x79, 0xb5, 0xc7, 0x68, 0x0d, 0xe6, 0xf1, 0x0f, 0xc6, 0xed, 0x7f,
	0x03, 0x00, 0x00, 0xff, 0xff, 0xad, 0x76, 0x8c, 0x0d, 0x7b, 0x0c, 0x00, 0x00,
}
