/*
Copyright 2019 Cisco Systems

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: mpls_lm_bw_alloc_link_info.proto

package cisco_ios_xr_mpls_te_oper_mpls_lcac_bandwidth_allocation_bandwidth_allocation_links_bandwidth_allocation_link

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type MplsLmBwAllocLinkInfo_KEYS struct {
	InterfaceName        string   `protobuf:"bytes,1,opt,name=interface_name,json=interfaceName,proto3" json:"interface_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MplsLmBwAllocLinkInfo_KEYS) Reset()         { *m = MplsLmBwAllocLinkInfo_KEYS{} }
func (m *MplsLmBwAllocLinkInfo_KEYS) String() string { return proto.CompactTextString(m) }
func (*MplsLmBwAllocLinkInfo_KEYS) ProtoMessage()    {}
func (*MplsLmBwAllocLinkInfo_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e232c3629062d80, []int{0}
}

func (m *MplsLmBwAllocLinkInfo_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsLmBwAllocLinkInfo_KEYS.Unmarshal(m, b)
}
func (m *MplsLmBwAllocLinkInfo_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsLmBwAllocLinkInfo_KEYS.Marshal(b, m, deterministic)
}
func (m *MplsLmBwAllocLinkInfo_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsLmBwAllocLinkInfo_KEYS.Merge(m, src)
}
func (m *MplsLmBwAllocLinkInfo_KEYS) XXX_Size() int {
	return xxx_messageInfo_MplsLmBwAllocLinkInfo_KEYS.Size(m)
}
func (m *MplsLmBwAllocLinkInfo_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsLmBwAllocLinkInfo_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_MplsLmBwAllocLinkInfo_KEYS proto.InternalMessageInfo

func (m *MplsLmBwAllocLinkInfo_KEYS) GetInterfaceName() string {
	if m != nil {
		return m.InterfaceName
	}
	return ""
}

type MplsSrlgInfo struct {
	SharedRiskGroup      uint32   `protobuf:"varint,1,opt,name=shared_risk_group,json=sharedRiskGroup,proto3" json:"shared_risk_group,omitempty"`
	SrlgName             string   `protobuf:"bytes,2,opt,name=srlg_name,json=srlgName,proto3" json:"srlg_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MplsSrlgInfo) Reset()         { *m = MplsSrlgInfo{} }
func (m *MplsSrlgInfo) String() string { return proto.CompactTextString(m) }
func (*MplsSrlgInfo) ProtoMessage()    {}
func (*MplsSrlgInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e232c3629062d80, []int{1}
}

func (m *MplsSrlgInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsSrlgInfo.Unmarshal(m, b)
}
func (m *MplsSrlgInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsSrlgInfo.Marshal(b, m, deterministic)
}
func (m *MplsSrlgInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsSrlgInfo.Merge(m, src)
}
func (m *MplsSrlgInfo) XXX_Size() int {
	return xxx_messageInfo_MplsSrlgInfo.Size(m)
}
func (m *MplsSrlgInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsSrlgInfo.DiscardUnknown(m)
}

var xxx_messageInfo_MplsSrlgInfo proto.InternalMessageInfo

func (m *MplsSrlgInfo) GetSharedRiskGroup() uint32 {
	if m != nil {
		return m.SharedRiskGroup
	}
	return 0
}

func (m *MplsSrlgInfo) GetSrlgName() string {
	if m != nil {
		return m.SrlgName
	}
	return ""
}

type MplsLmIntfSwitchingCapInfo struct {
	Key                  uint32   `protobuf:"varint,1,opt,name=key,proto3" json:"key,omitempty"`
	SwitchingCapability  uint32   `protobuf:"varint,2,opt,name=switching_capability,json=switchingCapability,proto3" json:"switching_capability,omitempty"`
	Encoding             uint32   `protobuf:"varint,3,opt,name=encoding,proto3" json:"encoding,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MplsLmIntfSwitchingCapInfo) Reset()         { *m = MplsLmIntfSwitchingCapInfo{} }
func (m *MplsLmIntfSwitchingCapInfo) String() string { return proto.CompactTextString(m) }
func (*MplsLmIntfSwitchingCapInfo) ProtoMessage()    {}
func (*MplsLmIntfSwitchingCapInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e232c3629062d80, []int{2}
}

func (m *MplsLmIntfSwitchingCapInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsLmIntfSwitchingCapInfo.Unmarshal(m, b)
}
func (m *MplsLmIntfSwitchingCapInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsLmIntfSwitchingCapInfo.Marshal(b, m, deterministic)
}
func (m *MplsLmIntfSwitchingCapInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsLmIntfSwitchingCapInfo.Merge(m, src)
}
func (m *MplsLmIntfSwitchingCapInfo) XXX_Size() int {
	return xxx_messageInfo_MplsLmIntfSwitchingCapInfo.Size(m)
}
func (m *MplsLmIntfSwitchingCapInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsLmIntfSwitchingCapInfo.DiscardUnknown(m)
}

var xxx_messageInfo_MplsLmIntfSwitchingCapInfo proto.InternalMessageInfo

func (m *MplsLmIntfSwitchingCapInfo) GetKey() uint32 {
	if m != nil {
		return m.Key
	}
	return 0
}

func (m *MplsLmIntfSwitchingCapInfo) GetSwitchingCapability() uint32 {
	if m != nil {
		return m.SwitchingCapability
	}
	return 0
}

func (m *MplsLmIntfSwitchingCapInfo) GetEncoding() uint32 {
	if m != nil {
		return m.Encoding
	}
	return 0
}

type MplsLmLinkFlags struct {
	IsMplsTeOn           bool     `protobuf:"varint,1,opt,name=is_mpls_te_on,json=isMplsTeOn,proto3" json:"is_mpls_te_on,omitempty"`
	SignalingAgent       string   `protobuf:"bytes,2,opt,name=signaling_agent,json=signalingAgent,proto3" json:"signaling_agent,omitempty"`
	IsAdminUp            bool     `protobuf:"varint,3,opt,name=is_admin_up,json=isAdminUp,proto3" json:"is_admin_up,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MplsLmLinkFlags) Reset()         { *m = MplsLmLinkFlags{} }
func (m *MplsLmLinkFlags) String() string { return proto.CompactTextString(m) }
func (*MplsLmLinkFlags) ProtoMessage()    {}
func (*MplsLmLinkFlags) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e232c3629062d80, []int{3}
}

func (m *MplsLmLinkFlags) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsLmLinkFlags.Unmarshal(m, b)
}
func (m *MplsLmLinkFlags) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsLmLinkFlags.Marshal(b, m, deterministic)
}
func (m *MplsLmLinkFlags) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsLmLinkFlags.Merge(m, src)
}
func (m *MplsLmLinkFlags) XXX_Size() int {
	return xxx_messageInfo_MplsLmLinkFlags.Size(m)
}
func (m *MplsLmLinkFlags) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsLmLinkFlags.DiscardUnknown(m)
}

var xxx_messageInfo_MplsLmLinkFlags proto.InternalMessageInfo

func (m *MplsLmLinkFlags) GetIsMplsTeOn() bool {
	if m != nil {
		return m.IsMplsTeOn
	}
	return false
}

func (m *MplsLmLinkFlags) GetSignalingAgent() string {
	if m != nil {
		return m.SignalingAgent
	}
	return ""
}

func (m *MplsLmLinkFlags) GetIsAdminUp() bool {
	if m != nil {
		return m.IsAdminUp
	}
	return false
}

type MplsLmFloodedArea struct {
	FloodedArea          string   `protobuf:"bytes,1,opt,name=flooded_area,json=floodedArea,proto3" json:"flooded_area,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MplsLmFloodedArea) Reset()         { *m = MplsLmFloodedArea{} }
func (m *MplsLmFloodedArea) String() string { return proto.CompactTextString(m) }
func (*MplsLmFloodedArea) ProtoMessage()    {}
func (*MplsLmFloodedArea) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e232c3629062d80, []int{4}
}

func (m *MplsLmFloodedArea) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsLmFloodedArea.Unmarshal(m, b)
}
func (m *MplsLmFloodedArea) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsLmFloodedArea.Marshal(b, m, deterministic)
}
func (m *MplsLmFloodedArea) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsLmFloodedArea.Merge(m, src)
}
func (m *MplsLmFloodedArea) XXX_Size() int {
	return xxx_messageInfo_MplsLmFloodedArea.Size(m)
}
func (m *MplsLmFloodedArea) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsLmFloodedArea.DiscardUnknown(m)
}

var xxx_messageInfo_MplsLmFloodedArea proto.InternalMessageInfo

func (m *MplsLmFloodedArea) GetFloodedArea() string {
	if m != nil {
		return m.FloodedArea
	}
	return ""
}

type MplsLmCommonLinkInfo struct {
	LinkId                                         string                        `protobuf:"bytes,1,opt,name=link_id,json=linkId,proto3" json:"link_id,omitempty"`
	LinkAddress                                    string                        `protobuf:"bytes,2,opt,name=link_address,json=linkAddress,proto3" json:"link_address,omitempty"`
	IsUnnumbered                                   bool                          `protobuf:"varint,3,opt,name=is_unnumbered,json=isUnnumbered,proto3" json:"is_unnumbered,omitempty"`
	HasProtection                                  bool                          `protobuf:"varint,4,opt,name=has_protection,json=hasProtection,proto3" json:"has_protection,omitempty"`
	Capability                                     uint32                        `protobuf:"varint,5,opt,name=capability,proto3" json:"capability,omitempty"`
	WorkingPriority                                uint32                        `protobuf:"varint,6,opt,name=working_priority,json=workingPriority,proto3" json:"working_priority,omitempty"`
	SharedRiskLinkGroup                            []*MplsSrlgInfo               `protobuf:"bytes,7,rep,name=shared_risk_link_group,json=sharedRiskLinkGroup,proto3" json:"shared_risk_link_group,omitempty"`
	InterfaceSwitchingCapabilityDescriptor         []*MplsLmIntfSwitchingCapInfo `protobuf:"bytes,8,rep,name=interface_switching_capability_descriptor,json=interfaceSwitchingCapabilityDescriptor,proto3" json:"interface_switching_capability_descriptor,omitempty"`
	ResourceProvider                               string                        `protobuf:"bytes,9,opt,name=resource_provider,json=resourceProvider,proto3" json:"resource_provider,omitempty"`
	IsResourceProviderInstalled                    bool                          `protobuf:"varint,10,opt,name=is_resource_provider_installed,json=isResourceProviderInstalled,proto3" json:"is_resource_provider_installed,omitempty"`
	BandwidthUnits                                 string                        `protobuf:"bytes,11,opt,name=bandwidth_units,json=bandwidthUnits,proto3" json:"bandwidth_units,omitempty"`
	PhysicalBandwidth                              uint64                        `protobuf:"varint,12,opt,name=physical_bandwidth,json=physicalBandwidth,proto3" json:"physical_bandwidth,omitempty"`
	BcmId                                          uint32                        `protobuf:"varint,13,opt,name=bcm_id,json=bcmId,proto3" json:"bcm_id,omitempty"`
	MaximumReservableBandwidth                     uint64                        `protobuf:"varint,14,opt,name=maximum_reservable_bandwidth,json=maximumReservableBandwidth,proto3" json:"maximum_reservable_bandwidth,omitempty"`
	LastFloodedEffectiveMaximumReservableBandwidth uint64                        `protobuf:"varint,15,opt,name=last_flooded_effective_maximum_reservable_bandwidth,json=lastFloodedEffectiveMaximumReservableBandwidth,proto3" json:"last_flooded_effective_maximum_reservable_bandwidth,omitempty"`
	IncomingReservableBandwidthPercentage          uint32                        `protobuf:"varint,16,opt,name=incoming_reservable_bandwidth_percentage,json=incomingReservableBandwidthPercentage,proto3" json:"incoming_reservable_bandwidth_percentage,omitempty"`
	OutgoingReservableBandwidthPercentage          uint32                        `protobuf:"varint,17,opt,name=outgoing_reservable_bandwidth_percentage,json=outgoingReservableBandwidthPercentage,proto3" json:"outgoing_reservable_bandwidth_percentage,omitempty"`
	MaximumReservablePool0Bandwidth                uint64                        `protobuf:"varint,18,opt,name=maximum_reservable_pool0_bandwidth,json=maximumReservablePool0Bandwidth,proto3" json:"maximum_reservable_pool0_bandwidth,omitempty"`
	IncomingReservablePool0BandwidthPercentage     uint32                        `protobuf:"varint,19,opt,name=incoming_reservable_pool0_bandwidth_percentage,json=incomingReservablePool0BandwidthPercentage,proto3" json:"incoming_reservable_pool0_bandwidth_percentage,omitempty"`
	OutgoingReservablePool0BandwidthPercentage     uint32                        `protobuf:"varint,20,opt,name=outgoing_reservable_pool0_bandwidth_percentage,json=outgoingReservablePool0BandwidthPercentage,proto3" json:"outgoing_reservable_pool0_bandwidth_percentage,omitempty"`
	MaximumReservablePool1Bandwidth                uint64                        `protobuf:"varint,21,opt,name=maximum_reservable_pool1_bandwidth,json=maximumReservablePool1Bandwidth,proto3" json:"maximum_reservable_pool1_bandwidth,omitempty"`
	IncomingReservablePool1BandwidthPercentage     uint32                        `protobuf:"varint,22,opt,name=incoming_reservable_pool1_bandwidth_percentage,json=incomingReservablePool1BandwidthPercentage,proto3" json:"incoming_reservable_pool1_bandwidth_percentage,omitempty"`
	OutgoingReservablePool1BandwidthPercentage     uint32                        `protobuf:"varint,23,opt,name=outgoing_reservable_pool1_bandwidth_percentage,json=outgoingReservablePool1BandwidthPercentage,proto3" json:"outgoing_reservable_pool1_bandwidth_percentage,omitempty"`
	LinkFlags                                      *MplsLmLinkFlags              `protobuf:"bytes,24,opt,name=link_flags,json=linkFlags,proto3" json:"link_flags,omitempty"`
	InboundAdmissionMethod                         string                        `protobuf:"bytes,25,opt,name=inbound_admission_method,json=inboundAdmissionMethod,proto3" json:"inbound_admission_method,omitempty"`
	OutboundAdmissionMethod                        string                        `protobuf:"bytes,26,opt,name=outbound_admission_method,json=outboundAdmissionMethod,proto3" json:"outbound_admission_method,omitempty"`
	IgpNeighbors                                   uint32                        `protobuf:"varint,27,opt,name=igp_neighbors,json=igpNeighbors,proto3" json:"igp_neighbors,omitempty"`
	FloodedAreas                                   []*MplsLmFloodedArea          `protobuf:"bytes,28,rep,name=flooded_areas,json=floodedAreas,proto3" json:"flooded_areas,omitempty"`
	XXX_NoUnkeyedLiteral                           struct{}                      `json:"-"`
	XXX_unrecognized                               []byte                        `json:"-"`
	XXX_sizecache                                  int32                         `json:"-"`
}

func (m *MplsLmCommonLinkInfo) Reset()         { *m = MplsLmCommonLinkInfo{} }
func (m *MplsLmCommonLinkInfo) String() string { return proto.CompactTextString(m) }
func (*MplsLmCommonLinkInfo) ProtoMessage()    {}
func (*MplsLmCommonLinkInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e232c3629062d80, []int{5}
}

func (m *MplsLmCommonLinkInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsLmCommonLinkInfo.Unmarshal(m, b)
}
func (m *MplsLmCommonLinkInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsLmCommonLinkInfo.Marshal(b, m, deterministic)
}
func (m *MplsLmCommonLinkInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsLmCommonLinkInfo.Merge(m, src)
}
func (m *MplsLmCommonLinkInfo) XXX_Size() int {
	return xxx_messageInfo_MplsLmCommonLinkInfo.Size(m)
}
func (m *MplsLmCommonLinkInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsLmCommonLinkInfo.DiscardUnknown(m)
}

var xxx_messageInfo_MplsLmCommonLinkInfo proto.InternalMessageInfo

func (m *MplsLmCommonLinkInfo) GetLinkId() string {
	if m != nil {
		return m.LinkId
	}
	return ""
}

func (m *MplsLmCommonLinkInfo) GetLinkAddress() string {
	if m != nil {
		return m.LinkAddress
	}
	return ""
}

func (m *MplsLmCommonLinkInfo) GetIsUnnumbered() bool {
	if m != nil {
		return m.IsUnnumbered
	}
	return false
}

func (m *MplsLmCommonLinkInfo) GetHasProtection() bool {
	if m != nil {
		return m.HasProtection
	}
	return false
}

func (m *MplsLmCommonLinkInfo) GetCapability() uint32 {
	if m != nil {
		return m.Capability
	}
	return 0
}

func (m *MplsLmCommonLinkInfo) GetWorkingPriority() uint32 {
	if m != nil {
		return m.WorkingPriority
	}
	return 0
}

func (m *MplsLmCommonLinkInfo) GetSharedRiskLinkGroup() []*MplsSrlgInfo {
	if m != nil {
		return m.SharedRiskLinkGroup
	}
	return nil
}

func (m *MplsLmCommonLinkInfo) GetInterfaceSwitchingCapabilityDescriptor() []*MplsLmIntfSwitchingCapInfo {
	if m != nil {
		return m.InterfaceSwitchingCapabilityDescriptor
	}
	return nil
}

func (m *MplsLmCommonLinkInfo) GetResourceProvider() string {
	if m != nil {
		return m.ResourceProvider
	}
	return ""
}

func (m *MplsLmCommonLinkInfo) GetIsResourceProviderInstalled() bool {
	if m != nil {
		return m.IsResourceProviderInstalled
	}
	return false
}

func (m *MplsLmCommonLinkInfo) GetBandwidthUnits() string {
	if m != nil {
		return m.BandwidthUnits
	}
	return ""
}

func (m *MplsLmCommonLinkInfo) GetPhysicalBandwidth() uint64 {
	if m != nil {
		return m.PhysicalBandwidth
	}
	return 0
}

func (m *MplsLmCommonLinkInfo) GetBcmId() uint32 {
	if m != nil {
		return m.BcmId
	}
	return 0
}

func (m *MplsLmCommonLinkInfo) GetMaximumReservableBandwidth() uint64 {
	if m != nil {
		return m.MaximumReservableBandwidth
	}
	return 0
}

func (m *MplsLmCommonLinkInfo) GetLastFloodedEffectiveMaximumReservableBandwidth() uint64 {
	if m != nil {
		return m.LastFloodedEffectiveMaximumReservableBandwidth
	}
	return 0
}

func (m *MplsLmCommonLinkInfo) GetIncomingReservableBandwidthPercentage() uint32 {
	if m != nil {
		return m.IncomingReservableBandwidthPercentage
	}
	return 0
}

func (m *MplsLmCommonLinkInfo) GetOutgoingReservableBandwidthPercentage() uint32 {
	if m != nil {
		return m.OutgoingReservableBandwidthPercentage
	}
	return 0
}

func (m *MplsLmCommonLinkInfo) GetMaximumReservablePool0Bandwidth() uint64 {
	if m != nil {
		return m.MaximumReservablePool0Bandwidth
	}
	return 0
}

func (m *MplsLmCommonLinkInfo) GetIncomingReservablePool0BandwidthPercentage() uint32 {
	if m != nil {
		return m.IncomingReservablePool0BandwidthPercentage
	}
	return 0
}

func (m *MplsLmCommonLinkInfo) GetOutgoingReservablePool0BandwidthPercentage() uint32 {
	if m != nil {
		return m.OutgoingReservablePool0BandwidthPercentage
	}
	return 0
}

func (m *MplsLmCommonLinkInfo) GetMaximumReservablePool1Bandwidth() uint64 {
	if m != nil {
		return m.MaximumReservablePool1Bandwidth
	}
	return 0
}

func (m *MplsLmCommonLinkInfo) GetIncomingReservablePool1BandwidthPercentage() uint32 {
	if m != nil {
		return m.IncomingReservablePool1BandwidthPercentage
	}
	return 0
}

func (m *MplsLmCommonLinkInfo) GetOutgoingReservablePool1BandwidthPercentage() uint32 {
	if m != nil {
		return m.OutgoingReservablePool1BandwidthPercentage
	}
	return 0
}

func (m *MplsLmCommonLinkInfo) GetLinkFlags() *MplsLmLinkFlags {
	if m != nil {
		return m.LinkFlags
	}
	return nil
}

func (m *MplsLmCommonLinkInfo) GetInboundAdmissionMethod() string {
	if m != nil {
		return m.InboundAdmissionMethod
	}
	return ""
}

func (m *MplsLmCommonLinkInfo) GetOutboundAdmissionMethod() string {
	if m != nil {
		return m.OutboundAdmissionMethod
	}
	return ""
}

func (m *MplsLmCommonLinkInfo) GetIgpNeighbors() uint32 {
	if m != nil {
		return m.IgpNeighbors
	}
	return 0
}

func (m *MplsLmCommonLinkInfo) GetFloodedAreas() []*MplsLmFloodedArea {
	if m != nil {
		return m.FloodedAreas
	}
	return nil
}

type MplsLmBwLinkBwPoolInfo struct {
	HoldPriority         uint32   `protobuf:"varint,1,opt,name=hold_priority,json=holdPriority,proto3" json:"hold_priority,omitempty"`
	HeldAmount           uint32   `protobuf:"varint,2,opt,name=held_amount,json=heldAmount,proto3" json:"held_amount,omitempty"`
	TotalHeldAmount      uint32   `protobuf:"varint,3,opt,name=total_held_amount,json=totalHeldAmount,proto3" json:"total_held_amount,omitempty"`
	LockedAmount         uint32   `protobuf:"varint,4,opt,name=locked_amount,json=lockedAmount,proto3" json:"locked_amount,omitempty"`
	TotalLockedAmount    uint32   `protobuf:"varint,5,opt,name=total_locked_amount,json=totalLockedAmount,proto3" json:"total_locked_amount,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MplsLmBwLinkBwPoolInfo) Reset()         { *m = MplsLmBwLinkBwPoolInfo{} }
func (m *MplsLmBwLinkBwPoolInfo) String() string { return proto.CompactTextString(m) }
func (*MplsLmBwLinkBwPoolInfo) ProtoMessage()    {}
func (*MplsLmBwLinkBwPoolInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e232c3629062d80, []int{6}
}

func (m *MplsLmBwLinkBwPoolInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsLmBwLinkBwPoolInfo.Unmarshal(m, b)
}
func (m *MplsLmBwLinkBwPoolInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsLmBwLinkBwPoolInfo.Marshal(b, m, deterministic)
}
func (m *MplsLmBwLinkBwPoolInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsLmBwLinkBwPoolInfo.Merge(m, src)
}
func (m *MplsLmBwLinkBwPoolInfo) XXX_Size() int {
	return xxx_messageInfo_MplsLmBwLinkBwPoolInfo.Size(m)
}
func (m *MplsLmBwLinkBwPoolInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsLmBwLinkBwPoolInfo.DiscardUnknown(m)
}

var xxx_messageInfo_MplsLmBwLinkBwPoolInfo proto.InternalMessageInfo

func (m *MplsLmBwLinkBwPoolInfo) GetHoldPriority() uint32 {
	if m != nil {
		return m.HoldPriority
	}
	return 0
}

func (m *MplsLmBwLinkBwPoolInfo) GetHeldAmount() uint32 {
	if m != nil {
		return m.HeldAmount
	}
	return 0
}

func (m *MplsLmBwLinkBwPoolInfo) GetTotalHeldAmount() uint32 {
	if m != nil {
		return m.TotalHeldAmount
	}
	return 0
}

func (m *MplsLmBwLinkBwPoolInfo) GetLockedAmount() uint32 {
	if m != nil {
		return m.LockedAmount
	}
	return 0
}

func (m *MplsLmBwLinkBwPoolInfo) GetTotalLockedAmount() uint32 {
	if m != nil {
		return m.TotalLockedAmount
	}
	return 0
}

type MplsLmBwLinkDirBwInfo struct {
	BandwidthDirection                  string                    `protobuf:"bytes,1,opt,name=bandwidth_direction,json=bandwidthDirection,proto3" json:"bandwidth_direction,omitempty"`
	IsAdmissionMethodAllocatedBandwidth bool                      `protobuf:"varint,2,opt,name=is_admission_method_allocated_bandwidth,json=isAdmissionMethodAllocatedBandwidth,proto3" json:"is_admission_method_allocated_bandwidth,omitempty"`
	BandwidthUnits                      string                    `protobuf:"bytes,3,opt,name=bandwidth_units,json=bandwidthUnits,proto3" json:"bandwidth_units,omitempty"`
	BandwidthPool0                      []*MplsLmBwLinkBwPoolInfo `protobuf:"bytes,4,rep,name=bandwidth_pool0,json=bandwidthPool0,proto3" json:"bandwidth_pool0,omitempty"`
	BandwidthPool1                      []*MplsLmBwLinkBwPoolInfo `protobuf:"bytes,5,rep,name=bandwidth_pool1,json=bandwidthPool1,proto3" json:"bandwidth_pool1,omitempty"`
	XXX_NoUnkeyedLiteral                struct{}                  `json:"-"`
	XXX_unrecognized                    []byte                    `json:"-"`
	XXX_sizecache                       int32                     `json:"-"`
}

func (m *MplsLmBwLinkDirBwInfo) Reset()         { *m = MplsLmBwLinkDirBwInfo{} }
func (m *MplsLmBwLinkDirBwInfo) String() string { return proto.CompactTextString(m) }
func (*MplsLmBwLinkDirBwInfo) ProtoMessage()    {}
func (*MplsLmBwLinkDirBwInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e232c3629062d80, []int{7}
}

func (m *MplsLmBwLinkDirBwInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsLmBwLinkDirBwInfo.Unmarshal(m, b)
}
func (m *MplsLmBwLinkDirBwInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsLmBwLinkDirBwInfo.Marshal(b, m, deterministic)
}
func (m *MplsLmBwLinkDirBwInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsLmBwLinkDirBwInfo.Merge(m, src)
}
func (m *MplsLmBwLinkDirBwInfo) XXX_Size() int {
	return xxx_messageInfo_MplsLmBwLinkDirBwInfo.Size(m)
}
func (m *MplsLmBwLinkDirBwInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsLmBwLinkDirBwInfo.DiscardUnknown(m)
}

var xxx_messageInfo_MplsLmBwLinkDirBwInfo proto.InternalMessageInfo

func (m *MplsLmBwLinkDirBwInfo) GetBandwidthDirection() string {
	if m != nil {
		return m.BandwidthDirection
	}
	return ""
}

func (m *MplsLmBwLinkDirBwInfo) GetIsAdmissionMethodAllocatedBandwidth() bool {
	if m != nil {
		return m.IsAdmissionMethodAllocatedBandwidth
	}
	return false
}

func (m *MplsLmBwLinkDirBwInfo) GetBandwidthUnits() string {
	if m != nil {
		return m.BandwidthUnits
	}
	return ""
}

func (m *MplsLmBwLinkDirBwInfo) GetBandwidthPool0() []*MplsLmBwLinkBwPoolInfo {
	if m != nil {
		return m.BandwidthPool0
	}
	return nil
}

func (m *MplsLmBwLinkDirBwInfo) GetBandwidthPool1() []*MplsLmBwLinkBwPoolInfo {
	if m != nil {
		return m.BandwidthPool1
	}
	return nil
}

type MplsLmBwAllocLinkInfo struct {
	LinkCommon                       *MplsLmCommonLinkInfo  `protobuf:"bytes,50,opt,name=link_common,json=linkCommon,proto3" json:"link_common,omitempty"`
	TotalBandwidthDescriptors        uint32                 `protobuf:"varint,51,opt,name=total_bandwidth_descriptors,json=totalBandwidthDescriptors,proto3" json:"total_bandwidth_descriptors,omitempty"`
	BandwidthDescriptors             uint32                 `protobuf:"varint,52,opt,name=bandwidth_descriptors,json=bandwidthDescriptors,proto3" json:"bandwidth_descriptors,omitempty"`
	BandwidthPool                    string                 `protobuf:"bytes,53,opt,name=bandwidth_pool,json=bandwidthPool,proto3" json:"bandwidth_pool,omitempty"`
	UpstreamBandwidth                *MplsLmBwLinkDirBwInfo `protobuf:"bytes,54,opt,name=upstream_bandwidth,json=upstreamBandwidth,proto3" json:"upstream_bandwidth,omitempty"`
	DownstreamBandwidth              *MplsLmBwLinkDirBwInfo `protobuf:"bytes,55,opt,name=downstream_bandwidth,json=downstreamBandwidth,proto3" json:"downstream_bandwidth,omitempty"`
	FloodingUpThreshold              []uint32               `protobuf:"varint,56,rep,packed,name=flooding_up_threshold,json=floodingUpThreshold,proto3" json:"flooding_up_threshold,omitempty"`
	FloodingUpThresholdsAreDefault   bool                   `protobuf:"varint,57,opt,name=flooding_up_thresholds_are_default,json=floodingUpThresholdsAreDefault,proto3" json:"flooding_up_thresholds_are_default,omitempty"`
	FloodingDownThreshold            []uint32               `protobuf:"varint,58,rep,packed,name=flooding_down_threshold,json=floodingDownThreshold,proto3" json:"flooding_down_threshold,omitempty"`
	FloodingDownThresholdsAreDefault bool                   `protobuf:"varint,59,opt,name=flooding_down_thresholds_are_default,json=floodingDownThresholdsAreDefault,proto3" json:"flooding_down_thresholds_are_default,omitempty"`
	FloodingUpThresholdsAreGlobal    bool                   `protobuf:"varint,60,opt,name=flooding_up_thresholds_are_global,json=floodingUpThresholdsAreGlobal,proto3" json:"flooding_up_thresholds_are_global,omitempty"`
	FloodingDownThresholdsAreGlobal  bool                   `protobuf:"varint,61,opt,name=flooding_down_thresholds_are_global,json=floodingDownThresholdsAreGlobal,proto3" json:"flooding_down_thresholds_are_global,omitempty"`
	XXX_NoUnkeyedLiteral             struct{}               `json:"-"`
	XXX_unrecognized                 []byte                 `json:"-"`
	XXX_sizecache                    int32                  `json:"-"`
}

func (m *MplsLmBwAllocLinkInfo) Reset()         { *m = MplsLmBwAllocLinkInfo{} }
func (m *MplsLmBwAllocLinkInfo) String() string { return proto.CompactTextString(m) }
func (*MplsLmBwAllocLinkInfo) ProtoMessage()    {}
func (*MplsLmBwAllocLinkInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e232c3629062d80, []int{8}
}

func (m *MplsLmBwAllocLinkInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsLmBwAllocLinkInfo.Unmarshal(m, b)
}
func (m *MplsLmBwAllocLinkInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsLmBwAllocLinkInfo.Marshal(b, m, deterministic)
}
func (m *MplsLmBwAllocLinkInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsLmBwAllocLinkInfo.Merge(m, src)
}
func (m *MplsLmBwAllocLinkInfo) XXX_Size() int {
	return xxx_messageInfo_MplsLmBwAllocLinkInfo.Size(m)
}
func (m *MplsLmBwAllocLinkInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsLmBwAllocLinkInfo.DiscardUnknown(m)
}

var xxx_messageInfo_MplsLmBwAllocLinkInfo proto.InternalMessageInfo

func (m *MplsLmBwAllocLinkInfo) GetLinkCommon() *MplsLmCommonLinkInfo {
	if m != nil {
		return m.LinkCommon
	}
	return nil
}

func (m *MplsLmBwAllocLinkInfo) GetTotalBandwidthDescriptors() uint32 {
	if m != nil {
		return m.TotalBandwidthDescriptors
	}
	return 0
}

func (m *MplsLmBwAllocLinkInfo) GetBandwidthDescriptors() uint32 {
	if m != nil {
		return m.BandwidthDescriptors
	}
	return 0
}

func (m *MplsLmBwAllocLinkInfo) GetBandwidthPool() string {
	if m != nil {
		return m.BandwidthPool
	}
	return ""
}

func (m *MplsLmBwAllocLinkInfo) GetUpstreamBandwidth() *MplsLmBwLinkDirBwInfo {
	if m != nil {
		return m.UpstreamBandwidth
	}
	return nil
}

func (m *MplsLmBwAllocLinkInfo) GetDownstreamBandwidth() *MplsLmBwLinkDirBwInfo {
	if m != nil {
		return m.DownstreamBandwidth
	}
	return nil
}

func (m *MplsLmBwAllocLinkInfo) GetFloodingUpThreshold() []uint32 {
	if m != nil {
		return m.FloodingUpThreshold
	}
	return nil
}

func (m *MplsLmBwAllocLinkInfo) GetFloodingUpThresholdsAreDefault() bool {
	if m != nil {
		return m.FloodingUpThresholdsAreDefault
	}
	return false
}

func (m *MplsLmBwAllocLinkInfo) GetFloodingDownThreshold() []uint32 {
	if m != nil {
		return m.FloodingDownThreshold
	}
	return nil
}

func (m *MplsLmBwAllocLinkInfo) GetFloodingDownThresholdsAreDefault() bool {
	if m != nil {
		return m.FloodingDownThresholdsAreDefault
	}
	return false
}

func (m *MplsLmBwAllocLinkInfo) GetFloodingUpThresholdsAreGlobal() bool {
	if m != nil {
		return m.FloodingUpThresholdsAreGlobal
	}
	return false
}

func (m *MplsLmBwAllocLinkInfo) GetFloodingDownThresholdsAreGlobal() bool {
	if m != nil {
		return m.FloodingDownThresholdsAreGlobal
	}
	return false
}

func init() {
	proto.RegisterType((*MplsLmBwAllocLinkInfo_KEYS)(nil), "cisco_ios_xr_mpls_te_oper.mpls_lcac.bandwidth_allocation.bandwidth_allocation_links.bandwidth_allocation_link.mpls_lm_bw_alloc_link_info_KEYS")
	proto.RegisterType((*MplsSrlgInfo)(nil), "cisco_ios_xr_mpls_te_oper.mpls_lcac.bandwidth_allocation.bandwidth_allocation_links.bandwidth_allocation_link.mpls_srlg_info")
	proto.RegisterType((*MplsLmIntfSwitchingCapInfo)(nil), "cisco_ios_xr_mpls_te_oper.mpls_lcac.bandwidth_allocation.bandwidth_allocation_links.bandwidth_allocation_link.mpls_lm_intf_switching_cap_info")
	proto.RegisterType((*MplsLmLinkFlags)(nil), "cisco_ios_xr_mpls_te_oper.mpls_lcac.bandwidth_allocation.bandwidth_allocation_links.bandwidth_allocation_link.mpls_lm_link_flags")
	proto.RegisterType((*MplsLmFloodedArea)(nil), "cisco_ios_xr_mpls_te_oper.mpls_lcac.bandwidth_allocation.bandwidth_allocation_links.bandwidth_allocation_link.mpls_lm_flooded_area")
	proto.RegisterType((*MplsLmCommonLinkInfo)(nil), "cisco_ios_xr_mpls_te_oper.mpls_lcac.bandwidth_allocation.bandwidth_allocation_links.bandwidth_allocation_link.mpls_lm_common_link_info")
	proto.RegisterType((*MplsLmBwLinkBwPoolInfo)(nil), "cisco_ios_xr_mpls_te_oper.mpls_lcac.bandwidth_allocation.bandwidth_allocation_links.bandwidth_allocation_link.mpls_lm_bw_link_bw_pool_info")
	proto.RegisterType((*MplsLmBwLinkDirBwInfo)(nil), "cisco_ios_xr_mpls_te_oper.mpls_lcac.bandwidth_allocation.bandwidth_allocation_links.bandwidth_allocation_link.mpls_lm_bw_link_dir_bw_info")
	proto.RegisterType((*MplsLmBwAllocLinkInfo)(nil), "cisco_ios_xr_mpls_te_oper.mpls_lcac.bandwidth_allocation.bandwidth_allocation_links.bandwidth_allocation_link.mpls_lm_bw_alloc_link_info")
}

func init() { proto.RegisterFile("mpls_lm_bw_alloc_link_info.proto", fileDescriptor_8e232c3629062d80) }

var fileDescriptor_8e232c3629062d80 = []byte{
	// 1444 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xcc, 0x58, 0x4b, 0x6f, 0x1c, 0x45,
	0x10, 0xd6, 0xc4, 0x8e, 0x63, 0x97, 0xbd, 0x7e, 0xb4, 0xed, 0x78, 0x62, 0x07, 0xdb, 0x59, 0x13,
	0xe2, 0x04, 0xb1, 0x60, 0x1b, 0x42, 0x12, 0x1e, 0x62, 0x89, 0xf3, 0x22, 0x0f, 0xac, 0x49, 0x2c,
	0x94, 0x53, 0xab, 0x67, 0xa6, 0x77, 0xb7, 0xe5, 0x99, 0xe9, 0xd1, 0xf4, 0x4c, 0x9c, 0x1c, 0x90,
	0x20, 0x1c, 0x90, 0x40, 0xe2, 0x3f, 0x70, 0xe4, 0x8a, 0xc4, 0x05, 0x09, 0xfe, 0x0d, 0x1c, 0xf8,
	0x15, 0xa8, 0x6b, 0x9e, 0x6b, 0xcf, 0xae, 0xc2, 0x05, 0xe7, 0xb6, 0x53, 0x8f, 0xaf, 0xbf, 0xaa,
	0xae, 0xea, 0xae, 0x5e, 0x58, 0xf7, 0x43, 0x4f, 0x51, 0xcf, 0xa7, 0xf6, 0x21, 0x65, 0x9e, 0x27,
	0x1d, 0xea, 0x89, 0xe0, 0x80, 0x8a, 0xa0, 0x23, 0x5b, 0x61, 0x24, 0x63, 0x49, 0x7c, 0x47, 0x28,
	0x47, 0x52, 0x21, 0x15, 0x7d, 0x1e, 0x51, 0x34, 0x8f, 0x39, 0x95, 0x21, 0x8f, 0x5a, 0xa9, 0xaf,
	0xc3, 0x9c, 0x96, 0xcd, 0x02, 0xf7, 0x50, 0xb8, 0x71, 0x2f, 0x05, 0x61, 0xb1, 0x90, 0x41, 0xad,
	0x10, 0xe1, 0xd5, 0x60, 0x55, 0xf3, 0x2e, 0xac, 0x0d, 0xa6, 0x44, 0xef, 0xdf, 0x7a, 0xfa, 0x98,
	0x5c, 0x84, 0x69, 0x11, 0xc4, 0x3c, 0xea, 0x30, 0x87, 0xd3, 0x80, 0xf9, 0xdc, 0x34, 0xd6, 0x8d,
	0xcd, 0x09, 0xab, 0x51, 0x48, 0x1f, 0x31, 0x9f, 0x37, 0x9f, 0xc2, 0x34, 0x22, 0xa9, 0xc8, 0xeb,
	0xa2, 0x37, 0xb9, 0x02, 0x73, 0xaa, 0xc7, 0x22, 0xee, 0xd2, 0x48, 0xa8, 0x03, 0xda, 0x8d, 0x64,
	0x12, 0xa2, 0x6f, 0xc3, 0x9a, 0x49, 0x15, 0x96, 0x50, 0x07, 0x77, 0xb4, 0x98, 0xac, 0xc0, 0x04,
	0x3a, 0x22, 0xfe, 0x29, 0xc4, 0x1f, 0xd7, 0x02, 0x84, 0x7e, 0x69, 0x94, 0x2c, 0x45, 0x10, 0x77,
	0xa8, 0x3a, 0x14, 0xb1, 0xd3, 0x13, 0x41, 0x97, 0x3a, 0x2c, 0x4c, 0x17, 0x9b, 0x85, 0x91, 0x03,
	0xfe, 0x22, 0x83, 0xd7, 0x3f, 0xc9, 0x16, 0x2c, 0xf4, 0xd9, 0x31, 0x5b, 0x78, 0x22, 0x7e, 0x81,
	0xe8, 0x0d, 0x6b, 0xbe, 0xd0, 0xdd, 0x2c, 0x54, 0x64, 0x19, 0xc6, 0x79, 0xe0, 0x48, 0x57, 0x04,
	0x5d, 0x73, 0x04, 0xcd, 0x8a, 0xef, 0xe6, 0x37, 0x06, 0x90, 0x9c, 0x04, 0x66, 0xa8, 0xe3, 0xb1,
	0xae, 0x22, 0x17, 0xa0, 0x21, 0x54, 0xb9, 0x4f, 0x01, 0x32, 0x18, 0xb7, 0x40, 0xa8, 0x87, 0xa1,
	0xa7, 0x9e, 0xf0, 0x2f, 0x03, 0x72, 0x09, 0x66, 0x94, 0xe8, 0x06, 0xcc, 0xd3, 0x44, 0x58, 0x97,
	0x07, 0x71, 0x16, 0xe1, 0x74, 0x21, 0x6e, 0x6b, 0x29, 0x59, 0x85, 0x49, 0xa1, 0x28, 0x73, 0x7d,
	0x11, 0xd0, 0x24, 0x44, 0x06, 0xe3, 0xd6, 0x84, 0x50, 0x6d, 0x2d, 0xd9, 0x0f, 0x9b, 0xd7, 0x61,
	0x21, 0x67, 0xd0, 0xf1, 0xa4, 0x74, 0xb9, 0x4b, 0x59, 0xc4, 0x19, 0xb9, 0x00, 0x53, 0xd5, 0xef,
	0x6c, 0x7f, 0x26, 0x33, 0x59, 0x3b, 0xe2, 0xac, 0xf9, 0xf7, 0x1c, 0x98, 0xb9, 0xaf, 0x23, 0x7d,
	0x3f, 0xdb, 0xff, 0x34, 0x77, 0x4b, 0x70, 0x26, 0xfd, 0x70, 0x33, 0xd7, 0x31, 0xfd, 0x79, 0xcf,
	0xd5, 0xc0, 0xa8, 0x60, 0xae, 0x1b, 0x71, 0xa5, 0x32, 0xda, 0x93, 0x5a, 0xd6, 0x4e, 0x45, 0x64,
	0x03, 0xe3, 0x4f, 0x82, 0x20, 0xf1, 0x6d, 0x1e, 0x71, 0x37, 0x63, 0x3d, 0x25, 0xd4, 0x7e, 0x21,
	0xd3, 0x25, 0xd4, 0x63, 0x8a, 0xea, 0x0a, 0xe7, 0x8e, 0x2e, 0x3e, 0x73, 0x14, 0xad, 0x1a, 0x3d,
	0xa6, 0xf6, 0x0a, 0x21, 0x59, 0x05, 0xa8, 0xec, 0xd3, 0x69, 0xdc, 0x80, 0x8a, 0x84, 0x5c, 0x86,
	0xd9, 0x43, 0x19, 0x1d, 0xe8, 0x34, 0x86, 0x91, 0x90, 0x91, 0xb6, 0x1a, 0x4b, 0xeb, 0x29, 0x93,
	0xef, 0x65, 0x62, 0xf2, 0xab, 0x01, 0x67, 0xab, 0xc5, 0x87, 0x61, 0xa4, 0x15, 0x78, 0x66, 0x7d,
	0x64, 0x73, 0x72, 0xfb, 0xeb, 0xd6, 0xff, 0xda, 0x68, 0xad, 0xfe, 0xde, 0xb0, 0xe6, 0xcb, 0x06,
	0x78, 0x20, 0x82, 0xac, 0x09, 0xfe, 0x31, 0xe0, 0x72, 0xd9, 0x6a, 0x75, 0xc5, 0x4b, 0x5d, 0xae,
	0x9c, 0x48, 0x84, 0xb1, 0x8c, 0xcc, 0x71, 0x8c, 0xe3, 0x27, 0xe3, 0x24, 0x02, 0x19, 0xdc, 0x88,
	0xd6, 0x5b, 0x45, 0x04, 0x8f, 0x8f, 0x77, 0xd8, 0x6e, 0x41, 0x9f, 0xbc, 0x0d, 0x73, 0x11, 0x57,
	0x32, 0x89, 0x1c, 0xae, 0x0b, 0xe3, 0x99, 0x70, 0x79, 0x64, 0x4e, 0x60, 0x81, 0xcd, 0xe6, 0x8a,
	0xbd, 0x4c, 0x4e, 0x6e, 0xc2, 0xaa, 0x50, 0xf4, 0x98, 0x3d, 0x15, 0x81, 0x8a, 0x99, 0xe7, 0x71,
	0xd7, 0x04, 0x2c, 0xa8, 0x15, 0xa1, 0xac, 0x23, 0xbe, 0xf7, 0x72, 0x13, 0xdd, 0x87, 0x65, 0x58,
	0x49, 0x20, 0x62, 0x65, 0x4e, 0xa6, 0x7d, 0x58, 0x88, 0xf7, 0xb5, 0x94, 0xbc, 0x03, 0x24, 0xec,
	0xbd, 0x50, 0xc2, 0x61, 0x1e, 0x2d, 0x54, 0xe6, 0xd4, 0xba, 0xb1, 0x39, 0x6a, 0xcd, 0xe5, 0x9a,
	0xcf, 0x73, 0x05, 0x59, 0x84, 0x31, 0xdb, 0xf1, 0x75, 0xf7, 0x34, 0xb0, 0x18, 0x4f, 0xdb, 0x8e,
	0x7f, 0xcf, 0x25, 0x9f, 0xc1, 0x79, 0x9f, 0x3d, 0x17, 0x7e, 0xe2, 0x6b, 0xe2, 0x3c, 0x7a, 0xc6,
	0x6c, 0x8f, 0x57, 0xf0, 0xa6, 0x11, 0x6f, 0x39, 0xb3, 0xb1, 0x0a, 0x93, 0x12, 0xf8, 0x00, 0x76,
	0x3c, 0xa6, 0xe2, 0xa2, 0xd9, 0x79, 0xa7, 0xa3, 0x3b, 0xe5, 0x19, 0xa7, 0x43, 0x81, 0x67, 0x10,
	0xb8, 0xa5, 0x5d, 0x6f, 0xa7, 0x9e, 0xb7, 0x72, 0xc7, 0x87, 0x83, 0x17, 0xfb, 0x0a, 0x36, 0x45,
	0xe0, 0x48, 0x5f, 0x6f, 0x66, 0x1d, 0x2c, 0x0d, 0x79, 0xe4, 0xf0, 0x20, 0x66, 0x5d, 0x6e, 0xce,
	0x62, 0x9c, 0x17, 0x73, 0xfb, 0x1a, 0xb8, 0xbd, 0xc2, 0x58, 0x03, 0xcb, 0x24, 0xee, 0xca, 0x57,
	0x01, 0x9e, 0x4b, 0x81, 0x73, 0xfb, 0xe1, 0xc0, 0xf7, 0xa1, 0x59, 0x93, 0x87, 0x50, 0x4a, 0xef,
	0xbd, 0x4a, 0x36, 0x08, 0x66, 0x63, 0xed, 0x58, 0x9a, 0xf7, 0xb4, 0x5d, 0x19, 0xbe, 0x0d, 0xad,
	0xba, 0xf0, 0x8f, 0xa0, 0x55, 0xb9, 0xce, 0x23, 0xd7, 0x2b, 0xc7, 0x93, 0xd0, 0x8f, 0x5c, 0x21,
	0x6c, 0x43, 0xab, 0x2e, 0x13, 0x43, 0xd6, 0x58, 0x48, 0xd7, 0x38, 0x9e, 0x8f, 0x81, 0x6b, 0x0c,
	0x4e, 0xca, 0x56, 0x25, 0x29, 0x8b, 0x43, 0x92, 0xb2, 0xf5, 0x4a, 0x49, 0xd9, 0xaa, 0x27, 0x7c,
	0x76, 0x58, 0x52, 0xb6, 0xfe, 0x63, 0x52, 0x06, 0xac, 0xb1, 0x34, 0x2c, 0x29, 0xb5, 0x6b, 0xfc,
	0x6c, 0x00, 0x94, 0x77, 0xb6, 0x69, 0xae, 0x1b, 0x9b, 0x93, 0xdb, 0xdf, 0x9e, 0xd4, 0xc9, 0x59,
	0x32, 0xb1, 0x26, 0xf4, 0xef, 0xdb, 0x38, 0x48, 0x5c, 0x03, 0x53, 0x04, 0xb6, 0x4c, 0x02, 0x17,
	0x27, 0x00, 0xa5, 0xb4, 0x9f, 0xcf, 0xe3, 0x9e, 0x74, 0xcd, 0x73, 0x78, 0x4c, 0x9d, 0xcd, 0xf4,
	0xed, 0x5c, 0xfd, 0x10, 0xb5, 0xe4, 0x06, 0x9c, 0x93, 0x49, 0x3c, 0xc0, 0x75, 0x19, 0x5d, 0x97,
	0x72, 0x83, 0xa3, 0xbe, 0xfa, 0xfa, 0xee, 0x86, 0x34, 0xe0, 0xa2, 0xdb, 0xb3, 0x65, 0xa4, 0xcc,
	0x15, 0x4c, 0xee, 0x94, 0xe8, 0x86, 0x8f, 0x72, 0x19, 0xf9, 0xc5, 0x80, 0x46, 0x75, 0xc0, 0x50,
	0xe6, 0x79, 0xbc, 0x7b, 0xbe, 0x3b, 0xa9, 0x0c, 0x56, 0xc9, 0x58, 0x53, 0x95, 0x39, 0x47, 0x35,
	0xff, 0x32, 0xe0, 0x7c, 0x65, 0xa2, 0xc5, 0x5c, 0xdb, 0x87, 0x58, 0x4e, 0xe9, 0xb0, 0xb3, 0x01,
	0x8d, 0x9e, 0xf4, 0xdc, 0x72, 0x82, 0x48, 0x47, 0xc6, 0x29, 0x2d, 0x2c, 0xc6, 0x87, 0x35, 0x98,
	0xec, 0x71, 0xcf, 0xa5, 0xcc, 0x97, 0x49, 0x36, 0xae, 0x35, 0x2c, 0xd0, 0xa2, 0x36, 0x4a, 0xf4,
	0x6c, 0x1b, 0xcb, 0x98, 0x79, 0xb4, 0x6a, 0x96, 0x8e, 0x8c, 0x33, 0xa8, 0xb8, 0x5b, 0xda, 0x6e,
	0x40, 0xc3, 0x93, 0xce, 0x01, 0x2f, 0xec, 0x46, 0xd3, 0x15, 0x53, 0x61, 0x66, 0xd4, 0x82, 0xf9,
	0x14, 0xb0, 0xdf, 0x34, 0x1d, 0x82, 0xd2, 0xb5, 0x1e, 0x54, 0xec, 0x9b, 0x7f, 0x8c, 0xc2, 0xca,
	0xd1, 0x38, 0x5d, 0x11, 0xe9, 0xdf, 0x18, 0xe6, 0xbb, 0x30, 0x5f, 0xe6, 0xd1, 0x15, 0x51, 0x36,
	0x77, 0xa5, 0xf3, 0x1d, 0x29, 0x54, 0xbb, 0xb9, 0x86, 0x3c, 0x81, 0x4b, 0xd9, 0xf0, 0x59, 0xad,
	0x9f, 0x7c, 0x0b, 0xb8, 0x5b, 0x39, 0x3d, 0x4e, 0xe1, 0x5d, 0xbb, 0x91, 0x0e, 0xa6, 0x95, 0x6a,
	0x6a, 0xe7, 0xb6, 0xe5, 0x09, 0x52, 0x73, 0xe7, 0x8e, 0xd4, 0xde, 0xb9, 0xbf, 0x19, 0x55, 0x4b,
	0x3c, 0x12, 0xcd, 0x51, 0xac, 0xb2, 0x1f, 0x4f, 0xaa, 0xca, 0xea, 0xca, 0xa7, 0xc2, 0x1b, 0x8f,
	0xe0, 0x1a, 0xde, 0x5b, 0xe6, 0xe9, 0xd7, 0x9e, 0xf7, 0x56, 0xf3, 0xe5, 0x04, 0x2c, 0x0f, 0x7e,
	0xf9, 0xe9, 0x96, 0xc7, 0x31, 0x3f, 0x7b, 0x2c, 0x98, 0xdb, 0x78, 0x64, 0x7e, 0x7f, 0x52, 0x21,
	0x1d, 0x7d, 0xb2, 0x58, 0x78, 0x9c, 0xdf, 0x44, 0x29, 0xf9, 0x14, 0x56, 0xd2, 0xd6, 0xa9, 0x14,
	0x7c, 0x31, 0x67, 0x2a, 0x73, 0x07, 0x5b, 0xe8, 0x1c, 0x9a, 0x14, 0x85, 0x59, 0x0e, 0xa2, 0x8a,
	0xec, 0xc0, 0x62, 0xbd, 0xe7, 0xfb, 0xe8, 0xb9, 0x60, 0xd7, 0x39, 0x5d, 0x84, 0xe9, 0xfe, 0x6d,
	0x37, 0x3f, 0x48, 0x5f, 0xc5, 0x7d, 0x79, 0x26, 0xbf, 0x1b, 0x40, 0x92, 0x50, 0xc5, 0x11, 0x67,
	0x7e, 0xa5, 0x83, 0xae, 0x62, 0x3a, 0x7f, 0x38, 0xe9, 0x0a, 0xa9, 0x1c, 0x18, 0xd6, 0x5c, 0x4e,
	0xb3, 0x6c, 0xde, 0x3f, 0x0d, 0x58, 0x70, 0xe5, 0x61, 0x70, 0x8c, 0xfe, 0x87, 0xaf, 0x1f, 0xfd,
	0xf9, 0x92, 0x68, 0x19, 0xc0, 0x36, 0x2c, 0xe2, 0xe5, 0xa0, 0x67, 0x8b, 0x24, 0xa4, 0x71, 0x2f,
	0xe2, 0x4a, 0x9f, 0xf3, 0xe6, 0xb5, 0xf5, 0x91, 0xcd, 0x86, 0x35, 0x9f, 0x2b, 0xf7, 0xc3, 0x27,
	0xb9, 0x8a, 0x7c, 0x01, 0xcd, 0x5a, 0x1f, 0xa5, 0x6f, 0x1b, 0xea, 0xf2, 0x0e, 0x4b, 0xbc, 0xd8,
	0xbc, 0x8e, 0x47, 0xe0, 0x6a, 0x0d, 0x80, 0x6a, 0x47, 0x7c, 0x37, 0xb5, 0x22, 0x57, 0x61, 0xa9,
	0xc0, 0xd2, 0xfc, 0x2a, 0x0c, 0x6e, 0x20, 0x83, 0x82, 0xde, 0xae, 0x3c, 0x0c, 0x4a, 0x0e, 0x8f,
	0xe0, 0xcd, 0x01, 0x7e, 0xfd, 0x2c, 0x3e, 0x42, 0x16, 0xeb, 0xb5, 0x20, 0x55, 0x1e, 0x77, 0xe1,
	0xc2, 0x90, 0x98, 0xba, 0x9e, 0xb4, 0x99, 0x67, 0x7e, 0x8c, 0x60, 0x6f, 0x0c, 0x08, 0xe9, 0x0e,
	0x1a, 0x91, 0x07, 0xb0, 0x31, 0x94, 0x59, 0x86, 0xf5, 0x09, 0x62, 0xad, 0x0d, 0x24, 0x96, 0xa2,
	0xd9, 0x63, 0xf8, 0x9f, 0xd7, 0xce, 0xbf, 0x01, 0x00, 0x00, 0xff, 0xff, 0x97, 0x1f, 0xcd, 0x58,
	0x17, 0x13, 0x00, 0x00,
}
