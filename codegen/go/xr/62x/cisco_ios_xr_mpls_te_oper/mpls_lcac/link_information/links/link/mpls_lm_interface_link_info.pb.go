/*
Copyright 2019 Cisco Systems

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: mpls_lm_interface_link_info.proto

package cisco_ios_xr_mpls_te_oper_mpls_lcac_link_information_links_link

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type MplsLmInterfaceLinkInfo_KEYS struct {
	InterfaceName        string   `protobuf:"bytes,1,opt,name=interface_name,json=interfaceName,proto3" json:"interface_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MplsLmInterfaceLinkInfo_KEYS) Reset()         { *m = MplsLmInterfaceLinkInfo_KEYS{} }
func (m *MplsLmInterfaceLinkInfo_KEYS) String() string { return proto.CompactTextString(m) }
func (*MplsLmInterfaceLinkInfo_KEYS) ProtoMessage()    {}
func (*MplsLmInterfaceLinkInfo_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_02391c5e24e6c41f, []int{0}
}

func (m *MplsLmInterfaceLinkInfo_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsLmInterfaceLinkInfo_KEYS.Unmarshal(m, b)
}
func (m *MplsLmInterfaceLinkInfo_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsLmInterfaceLinkInfo_KEYS.Marshal(b, m, deterministic)
}
func (m *MplsLmInterfaceLinkInfo_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsLmInterfaceLinkInfo_KEYS.Merge(m, src)
}
func (m *MplsLmInterfaceLinkInfo_KEYS) XXX_Size() int {
	return xxx_messageInfo_MplsLmInterfaceLinkInfo_KEYS.Size(m)
}
func (m *MplsLmInterfaceLinkInfo_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsLmInterfaceLinkInfo_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_MplsLmInterfaceLinkInfo_KEYS proto.InternalMessageInfo

func (m *MplsLmInterfaceLinkInfo_KEYS) GetInterfaceName() string {
	if m != nil {
		return m.InterfaceName
	}
	return ""
}

type MplsSrlgInfo struct {
	SharedRiskGroup      uint32   `protobuf:"varint,1,opt,name=shared_risk_group,json=sharedRiskGroup,proto3" json:"shared_risk_group,omitempty"`
	SrlgName             string   `protobuf:"bytes,2,opt,name=srlg_name,json=srlgName,proto3" json:"srlg_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MplsSrlgInfo) Reset()         { *m = MplsSrlgInfo{} }
func (m *MplsSrlgInfo) String() string { return proto.CompactTextString(m) }
func (*MplsSrlgInfo) ProtoMessage()    {}
func (*MplsSrlgInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_02391c5e24e6c41f, []int{1}
}

func (m *MplsSrlgInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsSrlgInfo.Unmarshal(m, b)
}
func (m *MplsSrlgInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsSrlgInfo.Marshal(b, m, deterministic)
}
func (m *MplsSrlgInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsSrlgInfo.Merge(m, src)
}
func (m *MplsSrlgInfo) XXX_Size() int {
	return xxx_messageInfo_MplsSrlgInfo.Size(m)
}
func (m *MplsSrlgInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsSrlgInfo.DiscardUnknown(m)
}

var xxx_messageInfo_MplsSrlgInfo proto.InternalMessageInfo

func (m *MplsSrlgInfo) GetSharedRiskGroup() uint32 {
	if m != nil {
		return m.SharedRiskGroup
	}
	return 0
}

func (m *MplsSrlgInfo) GetSrlgName() string {
	if m != nil {
		return m.SrlgName
	}
	return ""
}

type MplsLmIntfSwitchingCapInfo struct {
	Key                  uint32   `protobuf:"varint,1,opt,name=key,proto3" json:"key,omitempty"`
	SwitchingCapability  uint32   `protobuf:"varint,2,opt,name=switching_capability,json=switchingCapability,proto3" json:"switching_capability,omitempty"`
	Encoding             uint32   `protobuf:"varint,3,opt,name=encoding,proto3" json:"encoding,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MplsLmIntfSwitchingCapInfo) Reset()         { *m = MplsLmIntfSwitchingCapInfo{} }
func (m *MplsLmIntfSwitchingCapInfo) String() string { return proto.CompactTextString(m) }
func (*MplsLmIntfSwitchingCapInfo) ProtoMessage()    {}
func (*MplsLmIntfSwitchingCapInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_02391c5e24e6c41f, []int{2}
}

func (m *MplsLmIntfSwitchingCapInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsLmIntfSwitchingCapInfo.Unmarshal(m, b)
}
func (m *MplsLmIntfSwitchingCapInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsLmIntfSwitchingCapInfo.Marshal(b, m, deterministic)
}
func (m *MplsLmIntfSwitchingCapInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsLmIntfSwitchingCapInfo.Merge(m, src)
}
func (m *MplsLmIntfSwitchingCapInfo) XXX_Size() int {
	return xxx_messageInfo_MplsLmIntfSwitchingCapInfo.Size(m)
}
func (m *MplsLmIntfSwitchingCapInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsLmIntfSwitchingCapInfo.DiscardUnknown(m)
}

var xxx_messageInfo_MplsLmIntfSwitchingCapInfo proto.InternalMessageInfo

func (m *MplsLmIntfSwitchingCapInfo) GetKey() uint32 {
	if m != nil {
		return m.Key
	}
	return 0
}

func (m *MplsLmIntfSwitchingCapInfo) GetSwitchingCapability() uint32 {
	if m != nil {
		return m.SwitchingCapability
	}
	return 0
}

func (m *MplsLmIntfSwitchingCapInfo) GetEncoding() uint32 {
	if m != nil {
		return m.Encoding
	}
	return 0
}

type MplsLmLinkFlags struct {
	IsMplsTeOn           bool     `protobuf:"varint,1,opt,name=is_mpls_te_on,json=isMplsTeOn,proto3" json:"is_mpls_te_on,omitempty"`
	SignalingAgent       string   `protobuf:"bytes,2,opt,name=signaling_agent,json=signalingAgent,proto3" json:"signaling_agent,omitempty"`
	IsAdminUp            bool     `protobuf:"varint,3,opt,name=is_admin_up,json=isAdminUp,proto3" json:"is_admin_up,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MplsLmLinkFlags) Reset()         { *m = MplsLmLinkFlags{} }
func (m *MplsLmLinkFlags) String() string { return proto.CompactTextString(m) }
func (*MplsLmLinkFlags) ProtoMessage()    {}
func (*MplsLmLinkFlags) Descriptor() ([]byte, []int) {
	return fileDescriptor_02391c5e24e6c41f, []int{3}
}

func (m *MplsLmLinkFlags) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsLmLinkFlags.Unmarshal(m, b)
}
func (m *MplsLmLinkFlags) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsLmLinkFlags.Marshal(b, m, deterministic)
}
func (m *MplsLmLinkFlags) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsLmLinkFlags.Merge(m, src)
}
func (m *MplsLmLinkFlags) XXX_Size() int {
	return xxx_messageInfo_MplsLmLinkFlags.Size(m)
}
func (m *MplsLmLinkFlags) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsLmLinkFlags.DiscardUnknown(m)
}

var xxx_messageInfo_MplsLmLinkFlags proto.InternalMessageInfo

func (m *MplsLmLinkFlags) GetIsMplsTeOn() bool {
	if m != nil {
		return m.IsMplsTeOn
	}
	return false
}

func (m *MplsLmLinkFlags) GetSignalingAgent() string {
	if m != nil {
		return m.SignalingAgent
	}
	return ""
}

func (m *MplsLmLinkFlags) GetIsAdminUp() bool {
	if m != nil {
		return m.IsAdminUp
	}
	return false
}

type MplsLmFloodedArea struct {
	FloodedArea          string   `protobuf:"bytes,1,opt,name=flooded_area,json=floodedArea,proto3" json:"flooded_area,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MplsLmFloodedArea) Reset()         { *m = MplsLmFloodedArea{} }
func (m *MplsLmFloodedArea) String() string { return proto.CompactTextString(m) }
func (*MplsLmFloodedArea) ProtoMessage()    {}
func (*MplsLmFloodedArea) Descriptor() ([]byte, []int) {
	return fileDescriptor_02391c5e24e6c41f, []int{4}
}

func (m *MplsLmFloodedArea) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsLmFloodedArea.Unmarshal(m, b)
}
func (m *MplsLmFloodedArea) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsLmFloodedArea.Marshal(b, m, deterministic)
}
func (m *MplsLmFloodedArea) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsLmFloodedArea.Merge(m, src)
}
func (m *MplsLmFloodedArea) XXX_Size() int {
	return xxx_messageInfo_MplsLmFloodedArea.Size(m)
}
func (m *MplsLmFloodedArea) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsLmFloodedArea.DiscardUnknown(m)
}

var xxx_messageInfo_MplsLmFloodedArea proto.InternalMessageInfo

func (m *MplsLmFloodedArea) GetFloodedArea() string {
	if m != nil {
		return m.FloodedArea
	}
	return ""
}

type MplsLmCommonLinkInfo struct {
	LinkId                                         string                        `protobuf:"bytes,1,opt,name=link_id,json=linkId,proto3" json:"link_id,omitempty"`
	LinkAddress                                    string                        `protobuf:"bytes,2,opt,name=link_address,json=linkAddress,proto3" json:"link_address,omitempty"`
	IsUnnumbered                                   bool                          `protobuf:"varint,3,opt,name=is_unnumbered,json=isUnnumbered,proto3" json:"is_unnumbered,omitempty"`
	HasProtection                                  bool                          `protobuf:"varint,4,opt,name=has_protection,json=hasProtection,proto3" json:"has_protection,omitempty"`
	Capability                                     uint32                        `protobuf:"varint,5,opt,name=capability,proto3" json:"capability,omitempty"`
	WorkingPriority                                uint32                        `protobuf:"varint,6,opt,name=working_priority,json=workingPriority,proto3" json:"working_priority,omitempty"`
	SharedRiskLinkGroup                            []*MplsSrlgInfo               `protobuf:"bytes,7,rep,name=shared_risk_link_group,json=sharedRiskLinkGroup,proto3" json:"shared_risk_link_group,omitempty"`
	InterfaceSwitchingCapabilityDescriptor         []*MplsLmIntfSwitchingCapInfo `protobuf:"bytes,8,rep,name=interface_switching_capability_descriptor,json=interfaceSwitchingCapabilityDescriptor,proto3" json:"interface_switching_capability_descriptor,omitempty"`
	ResourceProvider                               string                        `protobuf:"bytes,9,opt,name=resource_provider,json=resourceProvider,proto3" json:"resource_provider,omitempty"`
	IsResourceProviderInstalled                    bool                          `protobuf:"varint,10,opt,name=is_resource_provider_installed,json=isResourceProviderInstalled,proto3" json:"is_resource_provider_installed,omitempty"`
	BandwidthUnits                                 string                        `protobuf:"bytes,11,opt,name=bandwidth_units,json=bandwidthUnits,proto3" json:"bandwidth_units,omitempty"`
	PhysicalBandwidth                              uint64                        `protobuf:"varint,12,opt,name=physical_bandwidth,json=physicalBandwidth,proto3" json:"physical_bandwidth,omitempty"`
	BcmId                                          uint32                        `protobuf:"varint,13,opt,name=bcm_id,json=bcmId,proto3" json:"bcm_id,omitempty"`
	MaximumReservableBandwidth                     uint64                        `protobuf:"varint,14,opt,name=maximum_reservable_bandwidth,json=maximumReservableBandwidth,proto3" json:"maximum_reservable_bandwidth,omitempty"`
	LastFloodedEffectiveMaximumReservableBandwidth uint64                        `protobuf:"varint,15,opt,name=last_flooded_effective_maximum_reservable_bandwidth,json=lastFloodedEffectiveMaximumReservableBandwidth,proto3" json:"last_flooded_effective_maximum_reservable_bandwidth,omitempty"`
	IncomingReservableBandwidthPercentage          uint32                        `protobuf:"varint,16,opt,name=incoming_reservable_bandwidth_percentage,json=incomingReservableBandwidthPercentage,proto3" json:"incoming_reservable_bandwidth_percentage,omitempty"`
	OutgoingReservableBandwidthPercentage          uint32                        `protobuf:"varint,17,opt,name=outgoing_reservable_bandwidth_percentage,json=outgoingReservableBandwidthPercentage,proto3" json:"outgoing_reservable_bandwidth_percentage,omitempty"`
	MaximumReservablePool0Bandwidth                uint64                        `protobuf:"varint,18,opt,name=maximum_reservable_pool0_bandwidth,json=maximumReservablePool0Bandwidth,proto3" json:"maximum_reservable_pool0_bandwidth,omitempty"`
	IncomingReservablePool0BandwidthPercentage     uint32                        `protobuf:"varint,19,opt,name=incoming_reservable_pool0_bandwidth_percentage,json=incomingReservablePool0BandwidthPercentage,proto3" json:"incoming_reservable_pool0_bandwidth_percentage,omitempty"`
	OutgoingReservablePool0BandwidthPercentage     uint32                        `protobuf:"varint,20,opt,name=outgoing_reservable_pool0_bandwidth_percentage,json=outgoingReservablePool0BandwidthPercentage,proto3" json:"outgoing_reservable_pool0_bandwidth_percentage,omitempty"`
	MaximumReservablePool1Bandwidth                uint64                        `protobuf:"varint,21,opt,name=maximum_reservable_pool1_bandwidth,json=maximumReservablePool1Bandwidth,proto3" json:"maximum_reservable_pool1_bandwidth,omitempty"`
	IncomingReservablePool1BandwidthPercentage     uint32                        `protobuf:"varint,22,opt,name=incoming_reservable_pool1_bandwidth_percentage,json=incomingReservablePool1BandwidthPercentage,proto3" json:"incoming_reservable_pool1_bandwidth_percentage,omitempty"`
	OutgoingReservablePool1BandwidthPercentage     uint32                        `protobuf:"varint,23,opt,name=outgoing_reservable_pool1_bandwidth_percentage,json=outgoingReservablePool1BandwidthPercentage,proto3" json:"outgoing_reservable_pool1_bandwidth_percentage,omitempty"`
	LinkFlags                                      *MplsLmLinkFlags              `protobuf:"bytes,24,opt,name=link_flags,json=linkFlags,proto3" json:"link_flags,omitempty"`
	InboundAdmissionMethod                         string                        `protobuf:"bytes,25,opt,name=inbound_admission_method,json=inboundAdmissionMethod,proto3" json:"inbound_admission_method,omitempty"`
	OutboundAdmissionMethod                        string                        `protobuf:"bytes,26,opt,name=outbound_admission_method,json=outboundAdmissionMethod,proto3" json:"outbound_admission_method,omitempty"`
	IgpNeighbors                                   uint32                        `protobuf:"varint,27,opt,name=igp_neighbors,json=igpNeighbors,proto3" json:"igp_neighbors,omitempty"`
	FloodedAreas                                   []*MplsLmFloodedArea          `protobuf:"bytes,28,rep,name=flooded_areas,json=floodedAreas,proto3" json:"flooded_areas,omitempty"`
	XXX_NoUnkeyedLiteral                           struct{}                      `json:"-"`
	XXX_unrecognized                               []byte                        `json:"-"`
	XXX_sizecache                                  int32                         `json:"-"`
}

func (m *MplsLmCommonLinkInfo) Reset()         { *m = MplsLmCommonLinkInfo{} }
func (m *MplsLmCommonLinkInfo) String() string { return proto.CompactTextString(m) }
func (*MplsLmCommonLinkInfo) ProtoMessage()    {}
func (*MplsLmCommonLinkInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_02391c5e24e6c41f, []int{5}
}

func (m *MplsLmCommonLinkInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsLmCommonLinkInfo.Unmarshal(m, b)
}
func (m *MplsLmCommonLinkInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsLmCommonLinkInfo.Marshal(b, m, deterministic)
}
func (m *MplsLmCommonLinkInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsLmCommonLinkInfo.Merge(m, src)
}
func (m *MplsLmCommonLinkInfo) XXX_Size() int {
	return xxx_messageInfo_MplsLmCommonLinkInfo.Size(m)
}
func (m *MplsLmCommonLinkInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsLmCommonLinkInfo.DiscardUnknown(m)
}

var xxx_messageInfo_MplsLmCommonLinkInfo proto.InternalMessageInfo

func (m *MplsLmCommonLinkInfo) GetLinkId() string {
	if m != nil {
		return m.LinkId
	}
	return ""
}

func (m *MplsLmCommonLinkInfo) GetLinkAddress() string {
	if m != nil {
		return m.LinkAddress
	}
	return ""
}

func (m *MplsLmCommonLinkInfo) GetIsUnnumbered() bool {
	if m != nil {
		return m.IsUnnumbered
	}
	return false
}

func (m *MplsLmCommonLinkInfo) GetHasProtection() bool {
	if m != nil {
		return m.HasProtection
	}
	return false
}

func (m *MplsLmCommonLinkInfo) GetCapability() uint32 {
	if m != nil {
		return m.Capability
	}
	return 0
}

func (m *MplsLmCommonLinkInfo) GetWorkingPriority() uint32 {
	if m != nil {
		return m.WorkingPriority
	}
	return 0
}

func (m *MplsLmCommonLinkInfo) GetSharedRiskLinkGroup() []*MplsSrlgInfo {
	if m != nil {
		return m.SharedRiskLinkGroup
	}
	return nil
}

func (m *MplsLmCommonLinkInfo) GetInterfaceSwitchingCapabilityDescriptor() []*MplsLmIntfSwitchingCapInfo {
	if m != nil {
		return m.InterfaceSwitchingCapabilityDescriptor
	}
	return nil
}

func (m *MplsLmCommonLinkInfo) GetResourceProvider() string {
	if m != nil {
		return m.ResourceProvider
	}
	return ""
}

func (m *MplsLmCommonLinkInfo) GetIsResourceProviderInstalled() bool {
	if m != nil {
		return m.IsResourceProviderInstalled
	}
	return false
}

func (m *MplsLmCommonLinkInfo) GetBandwidthUnits() string {
	if m != nil {
		return m.BandwidthUnits
	}
	return ""
}

func (m *MplsLmCommonLinkInfo) GetPhysicalBandwidth() uint64 {
	if m != nil {
		return m.PhysicalBandwidth
	}
	return 0
}

func (m *MplsLmCommonLinkInfo) GetBcmId() uint32 {
	if m != nil {
		return m.BcmId
	}
	return 0
}

func (m *MplsLmCommonLinkInfo) GetMaximumReservableBandwidth() uint64 {
	if m != nil {
		return m.MaximumReservableBandwidth
	}
	return 0
}

func (m *MplsLmCommonLinkInfo) GetLastFloodedEffectiveMaximumReservableBandwidth() uint64 {
	if m != nil {
		return m.LastFloodedEffectiveMaximumReservableBandwidth
	}
	return 0
}

func (m *MplsLmCommonLinkInfo) GetIncomingReservableBandwidthPercentage() uint32 {
	if m != nil {
		return m.IncomingReservableBandwidthPercentage
	}
	return 0
}

func (m *MplsLmCommonLinkInfo) GetOutgoingReservableBandwidthPercentage() uint32 {
	if m != nil {
		return m.OutgoingReservableBandwidthPercentage
	}
	return 0
}

func (m *MplsLmCommonLinkInfo) GetMaximumReservablePool0Bandwidth() uint64 {
	if m != nil {
		return m.MaximumReservablePool0Bandwidth
	}
	return 0
}

func (m *MplsLmCommonLinkInfo) GetIncomingReservablePool0BandwidthPercentage() uint32 {
	if m != nil {
		return m.IncomingReservablePool0BandwidthPercentage
	}
	return 0
}

func (m *MplsLmCommonLinkInfo) GetOutgoingReservablePool0BandwidthPercentage() uint32 {
	if m != nil {
		return m.OutgoingReservablePool0BandwidthPercentage
	}
	return 0
}

func (m *MplsLmCommonLinkInfo) GetMaximumReservablePool1Bandwidth() uint64 {
	if m != nil {
		return m.MaximumReservablePool1Bandwidth
	}
	return 0
}

func (m *MplsLmCommonLinkInfo) GetIncomingReservablePool1BandwidthPercentage() uint32 {
	if m != nil {
		return m.IncomingReservablePool1BandwidthPercentage
	}
	return 0
}

func (m *MplsLmCommonLinkInfo) GetOutgoingReservablePool1BandwidthPercentage() uint32 {
	if m != nil {
		return m.OutgoingReservablePool1BandwidthPercentage
	}
	return 0
}

func (m *MplsLmCommonLinkInfo) GetLinkFlags() *MplsLmLinkFlags {
	if m != nil {
		return m.LinkFlags
	}
	return nil
}

func (m *MplsLmCommonLinkInfo) GetInboundAdmissionMethod() string {
	if m != nil {
		return m.InboundAdmissionMethod
	}
	return ""
}

func (m *MplsLmCommonLinkInfo) GetOutboundAdmissionMethod() string {
	if m != nil {
		return m.OutboundAdmissionMethod
	}
	return ""
}

func (m *MplsLmCommonLinkInfo) GetIgpNeighbors() uint32 {
	if m != nil {
		return m.IgpNeighbors
	}
	return 0
}

func (m *MplsLmCommonLinkInfo) GetFloodedAreas() []*MplsLmFloodedArea {
	if m != nil {
		return m.FloodedAreas
	}
	return nil
}

type MplsTeDarkbwBwUtilRsvp struct {
	TotalLinkBandwidthUtilization      uint64   `protobuf:"varint,1,opt,name=total_link_bandwidth_utilization,json=totalLinkBandwidthUtilization,proto3" json:"total_link_bandwidth_utilization,omitempty"`
	RsvpTeBandwidthUtilization         uint64   `protobuf:"varint,2,opt,name=rsvp_te_bandwidth_utilization,json=rsvpTeBandwidthUtilization,proto3" json:"rsvp_te_bandwidth_utilization,omitempty"`
	NonRsvpTeBandwidthUtilization      uint64   `protobuf:"varint,3,opt,name=non_rsvp_te_bandwidth_utilization,json=nonRsvpTeBandwidthUtilization,proto3" json:"non_rsvp_te_bandwidth_utilization,omitempty"`
	RsvpTeAdjustedBandwidthUtilization uint64   `protobuf:"varint,4,opt,name=rsvp_te_adjusted_bandwidth_utilization,json=rsvpTeAdjustedBandwidthUtilization,proto3" json:"rsvp_te_adjusted_bandwidth_utilization,omitempty"`
	RsvpTeEnforcedBandwidthUtilization uint64   `protobuf:"varint,5,opt,name=rsvp_te_enforced_bandwidth_utilization,json=rsvpTeEnforcedBandwidthUtilization,proto3" json:"rsvp_te_enforced_bandwidth_utilization,omitempty"`
	XXX_NoUnkeyedLiteral               struct{} `json:"-"`
	XXX_unrecognized                   []byte   `json:"-"`
	XXX_sizecache                      int32    `json:"-"`
}

func (m *MplsTeDarkbwBwUtilRsvp) Reset()         { *m = MplsTeDarkbwBwUtilRsvp{} }
func (m *MplsTeDarkbwBwUtilRsvp) String() string { return proto.CompactTextString(m) }
func (*MplsTeDarkbwBwUtilRsvp) ProtoMessage()    {}
func (*MplsTeDarkbwBwUtilRsvp) Descriptor() ([]byte, []int) {
	return fileDescriptor_02391c5e24e6c41f, []int{6}
}

func (m *MplsTeDarkbwBwUtilRsvp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsTeDarkbwBwUtilRsvp.Unmarshal(m, b)
}
func (m *MplsTeDarkbwBwUtilRsvp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsTeDarkbwBwUtilRsvp.Marshal(b, m, deterministic)
}
func (m *MplsTeDarkbwBwUtilRsvp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsTeDarkbwBwUtilRsvp.Merge(m, src)
}
func (m *MplsTeDarkbwBwUtilRsvp) XXX_Size() int {
	return xxx_messageInfo_MplsTeDarkbwBwUtilRsvp.Size(m)
}
func (m *MplsTeDarkbwBwUtilRsvp) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsTeDarkbwBwUtilRsvp.DiscardUnknown(m)
}

var xxx_messageInfo_MplsTeDarkbwBwUtilRsvp proto.InternalMessageInfo

func (m *MplsTeDarkbwBwUtilRsvp) GetTotalLinkBandwidthUtilization() uint64 {
	if m != nil {
		return m.TotalLinkBandwidthUtilization
	}
	return 0
}

func (m *MplsTeDarkbwBwUtilRsvp) GetRsvpTeBandwidthUtilization() uint64 {
	if m != nil {
		return m.RsvpTeBandwidthUtilization
	}
	return 0
}

func (m *MplsTeDarkbwBwUtilRsvp) GetNonRsvpTeBandwidthUtilization() uint64 {
	if m != nil {
		return m.NonRsvpTeBandwidthUtilization
	}
	return 0
}

func (m *MplsTeDarkbwBwUtilRsvp) GetRsvpTeAdjustedBandwidthUtilization() uint64 {
	if m != nil {
		return m.RsvpTeAdjustedBandwidthUtilization
	}
	return 0
}

func (m *MplsTeDarkbwBwUtilRsvp) GetRsvpTeEnforcedBandwidthUtilization() uint64 {
	if m != nil {
		return m.RsvpTeEnforcedBandwidthUtilization
	}
	return 0
}

type MplsTeDarkbwBwUtilSr struct {
	SrBandwidthUtilization         uint64   `protobuf:"varint,1,opt,name=sr_bandwidth_utilization,json=srBandwidthUtilization,proto3" json:"sr_bandwidth_utilization,omitempty"`
	SrAdjustedBandwidthUtilization uint64   `protobuf:"varint,2,opt,name=sr_adjusted_bandwidth_utilization,json=srAdjustedBandwidthUtilization,proto3" json:"sr_adjusted_bandwidth_utilization,omitempty"`
	SrEnforcedBandwidthUtilization uint64   `protobuf:"varint,3,opt,name=sr_enforced_bandwidth_utilization,json=srEnforcedBandwidthUtilization,proto3" json:"sr_enforced_bandwidth_utilization,omitempty"`
	XXX_NoUnkeyedLiteral           struct{} `json:"-"`
	XXX_unrecognized               []byte   `json:"-"`
	XXX_sizecache                  int32    `json:"-"`
}

func (m *MplsTeDarkbwBwUtilSr) Reset()         { *m = MplsTeDarkbwBwUtilSr{} }
func (m *MplsTeDarkbwBwUtilSr) String() string { return proto.CompactTextString(m) }
func (*MplsTeDarkbwBwUtilSr) ProtoMessage()    {}
func (*MplsTeDarkbwBwUtilSr) Descriptor() ([]byte, []int) {
	return fileDescriptor_02391c5e24e6c41f, []int{7}
}

func (m *MplsTeDarkbwBwUtilSr) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsTeDarkbwBwUtilSr.Unmarshal(m, b)
}
func (m *MplsTeDarkbwBwUtilSr) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsTeDarkbwBwUtilSr.Marshal(b, m, deterministic)
}
func (m *MplsTeDarkbwBwUtilSr) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsTeDarkbwBwUtilSr.Merge(m, src)
}
func (m *MplsTeDarkbwBwUtilSr) XXX_Size() int {
	return xxx_messageInfo_MplsTeDarkbwBwUtilSr.Size(m)
}
func (m *MplsTeDarkbwBwUtilSr) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsTeDarkbwBwUtilSr.DiscardUnknown(m)
}

var xxx_messageInfo_MplsTeDarkbwBwUtilSr proto.InternalMessageInfo

func (m *MplsTeDarkbwBwUtilSr) GetSrBandwidthUtilization() uint64 {
	if m != nil {
		return m.SrBandwidthUtilization
	}
	return 0
}

func (m *MplsTeDarkbwBwUtilSr) GetSrAdjustedBandwidthUtilization() uint64 {
	if m != nil {
		return m.SrAdjustedBandwidthUtilization
	}
	return 0
}

func (m *MplsTeDarkbwBwUtilSr) GetSrEnforcedBandwidthUtilization() uint64 {
	if m != nil {
		return m.SrEnforcedBandwidthUtilization
	}
	return 0
}

type MplsLmDarkbwLinkCommonInfo struct {
	IsBandwidthAccountEnabled                 bool                    `protobuf:"varint,1,opt,name=is_bandwidth_account_enabled,json=isBandwidthAccountEnabled,proto3" json:"is_bandwidth_account_enabled,omitempty"`
	ApplicationEnforced                       bool                    `protobuf:"varint,2,opt,name=application_enforced,json=applicationEnforced,proto3" json:"application_enforced,omitempty"`
	CollectionType                            string                  `protobuf:"bytes,3,opt,name=collection_type,json=collectionType,proto3" json:"collection_type,omitempty"`
	SampleInterval                            uint32                  `protobuf:"varint,4,opt,name=sample_interval,json=sampleInterval,proto3" json:"sample_interval,omitempty"`
	SampleTimeRemaining                       uint32                  `protobuf:"varint,5,opt,name=sample_time_remaining,json=sampleTimeRemaining,proto3" json:"sample_time_remaining,omitempty"`
	LastSampleCollectionTimestamp             uint32                  `protobuf:"varint,6,opt,name=last_sample_collection_timestamp,json=lastSampleCollectionTimestamp,proto3" json:"last_sample_collection_timestamp,omitempty"`
	NextSampleCollection                      uint32                  `protobuf:"varint,7,opt,name=next_sample_collection,json=nextSampleCollection,proto3" json:"next_sample_collection,omitempty"`
	ApplicationInterval                       uint32                  `protobuf:"varint,8,opt,name=application_interval,json=applicationInterval,proto3" json:"application_interval,omitempty"`
	ApplicationTimeRemaining                  uint32                  `protobuf:"varint,9,opt,name=application_time_remaining,json=applicationTimeRemaining,proto3" json:"application_time_remaining,omitempty"`
	LastApplicationTimestamp                  uint32                  `protobuf:"varint,10,opt,name=last_application_timestamp,json=lastApplicationTimestamp,proto3" json:"last_application_timestamp,omitempty"`
	RsvpTeBandwidthUtilization                *MplsTeDarkbwBwUtilRsvp `protobuf:"bytes,11,opt,name=rsvp_te_bandwidth_utilization,json=rsvpTeBandwidthUtilization,proto3" json:"rsvp_te_bandwidth_utilization,omitempty"`
	SrBandwidthUtilization                    *MplsTeDarkbwBwUtilSr   `protobuf:"bytes,12,opt,name=sr_bandwidth_utilization,json=srBandwidthUtilization,proto3" json:"sr_bandwidth_utilization,omitempty"`
	NextApplication                           uint32                  `protobuf:"varint,13,opt,name=next_application,json=nextApplication,proto3" json:"next_application,omitempty"`
	AdjustmentFactor                          uint32                  `protobuf:"varint,14,opt,name=adjustment_factor,json=adjustmentFactor,proto3" json:"adjustment_factor,omitempty"`
	MaxReservableBandwidthThresholdAreDefault bool                    `protobuf:"varint,15,opt,name=max_reservable_bandwidth_threshold_are_default,json=maxReservableBandwidthThresholdAreDefault,proto3" json:"max_reservable_bandwidth_threshold_are_default,omitempty"`
	UpThresholdMaxReservableBandwidth         uint32                  `protobuf:"varint,16,opt,name=up_threshold_max_reservable_bandwidth,json=upThresholdMaxReservableBandwidth,proto3" json:"up_threshold_max_reservable_bandwidth,omitempty"`
	DownThresholdMaxReservableBandwidth       uint32                  `protobuf:"varint,17,opt,name=down_threshold_max_reservable_bandwidth,json=downThresholdMaxReservableBandwidth,proto3" json:"down_threshold_max_reservable_bandwidth,omitempty"`
	XXX_NoUnkeyedLiteral                      struct{}                `json:"-"`
	XXX_unrecognized                          []byte                  `json:"-"`
	XXX_sizecache                             int32                   `json:"-"`
}

func (m *MplsLmDarkbwLinkCommonInfo) Reset()         { *m = MplsLmDarkbwLinkCommonInfo{} }
func (m *MplsLmDarkbwLinkCommonInfo) String() string { return proto.CompactTextString(m) }
func (*MplsLmDarkbwLinkCommonInfo) ProtoMessage()    {}
func (*MplsLmDarkbwLinkCommonInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_02391c5e24e6c41f, []int{8}
}

func (m *MplsLmDarkbwLinkCommonInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsLmDarkbwLinkCommonInfo.Unmarshal(m, b)
}
func (m *MplsLmDarkbwLinkCommonInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsLmDarkbwLinkCommonInfo.Marshal(b, m, deterministic)
}
func (m *MplsLmDarkbwLinkCommonInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsLmDarkbwLinkCommonInfo.Merge(m, src)
}
func (m *MplsLmDarkbwLinkCommonInfo) XXX_Size() int {
	return xxx_messageInfo_MplsLmDarkbwLinkCommonInfo.Size(m)
}
func (m *MplsLmDarkbwLinkCommonInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsLmDarkbwLinkCommonInfo.DiscardUnknown(m)
}

var xxx_messageInfo_MplsLmDarkbwLinkCommonInfo proto.InternalMessageInfo

func (m *MplsLmDarkbwLinkCommonInfo) GetIsBandwidthAccountEnabled() bool {
	if m != nil {
		return m.IsBandwidthAccountEnabled
	}
	return false
}

func (m *MplsLmDarkbwLinkCommonInfo) GetApplicationEnforced() bool {
	if m != nil {
		return m.ApplicationEnforced
	}
	return false
}

func (m *MplsLmDarkbwLinkCommonInfo) GetCollectionType() string {
	if m != nil {
		return m.CollectionType
	}
	return ""
}

func (m *MplsLmDarkbwLinkCommonInfo) GetSampleInterval() uint32 {
	if m != nil {
		return m.SampleInterval
	}
	return 0
}

func (m *MplsLmDarkbwLinkCommonInfo) GetSampleTimeRemaining() uint32 {
	if m != nil {
		return m.SampleTimeRemaining
	}
	return 0
}

func (m *MplsLmDarkbwLinkCommonInfo) GetLastSampleCollectionTimestamp() uint32 {
	if m != nil {
		return m.LastSampleCollectionTimestamp
	}
	return 0
}

func (m *MplsLmDarkbwLinkCommonInfo) GetNextSampleCollection() uint32 {
	if m != nil {
		return m.NextSampleCollection
	}
	return 0
}

func (m *MplsLmDarkbwLinkCommonInfo) GetApplicationInterval() uint32 {
	if m != nil {
		return m.ApplicationInterval
	}
	return 0
}

func (m *MplsLmDarkbwLinkCommonInfo) GetApplicationTimeRemaining() uint32 {
	if m != nil {
		return m.ApplicationTimeRemaining
	}
	return 0
}

func (m *MplsLmDarkbwLinkCommonInfo) GetLastApplicationTimestamp() uint32 {
	if m != nil {
		return m.LastApplicationTimestamp
	}
	return 0
}

func (m *MplsLmDarkbwLinkCommonInfo) GetRsvpTeBandwidthUtilization() *MplsTeDarkbwBwUtilRsvp {
	if m != nil {
		return m.RsvpTeBandwidthUtilization
	}
	return nil
}

func (m *MplsLmDarkbwLinkCommonInfo) GetSrBandwidthUtilization() *MplsTeDarkbwBwUtilSr {
	if m != nil {
		return m.SrBandwidthUtilization
	}
	return nil
}

func (m *MplsLmDarkbwLinkCommonInfo) GetNextApplication() uint32 {
	if m != nil {
		return m.NextApplication
	}
	return 0
}

func (m *MplsLmDarkbwLinkCommonInfo) GetAdjustmentFactor() uint32 {
	if m != nil {
		return m.AdjustmentFactor
	}
	return 0
}

func (m *MplsLmDarkbwLinkCommonInfo) GetMaxReservableBandwidthThresholdAreDefault() bool {
	if m != nil {
		return m.MaxReservableBandwidthThresholdAreDefault
	}
	return false
}

func (m *MplsLmDarkbwLinkCommonInfo) GetUpThresholdMaxReservableBandwidth() uint32 {
	if m != nil {
		return m.UpThresholdMaxReservableBandwidth
	}
	return 0
}

func (m *MplsLmDarkbwLinkCommonInfo) GetDownThresholdMaxReservableBandwidth() uint32 {
	if m != nil {
		return m.DownThresholdMaxReservableBandwidth
	}
	return 0
}

type MplsTeDarkbwSampleRsvp struct {
	Timestamp            uint32   `protobuf:"varint,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	TotalRate            uint64   `protobuf:"varint,2,opt,name=total_rate,json=totalRate,proto3" json:"total_rate,omitempty"`
	RsvpTeRate           uint64   `protobuf:"varint,3,opt,name=rsvp_te_rate,json=rsvpTeRate,proto3" json:"rsvp_te_rate,omitempty"`
	NonRsvpTeRate        uint64   `protobuf:"varint,4,opt,name=non_rsvp_te_rate,json=nonRsvpTeRate,proto3" json:"non_rsvp_te_rate,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MplsTeDarkbwSampleRsvp) Reset()         { *m = MplsTeDarkbwSampleRsvp{} }
func (m *MplsTeDarkbwSampleRsvp) String() string { return proto.CompactTextString(m) }
func (*MplsTeDarkbwSampleRsvp) ProtoMessage()    {}
func (*MplsTeDarkbwSampleRsvp) Descriptor() ([]byte, []int) {
	return fileDescriptor_02391c5e24e6c41f, []int{9}
}

func (m *MplsTeDarkbwSampleRsvp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsTeDarkbwSampleRsvp.Unmarshal(m, b)
}
func (m *MplsTeDarkbwSampleRsvp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsTeDarkbwSampleRsvp.Marshal(b, m, deterministic)
}
func (m *MplsTeDarkbwSampleRsvp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsTeDarkbwSampleRsvp.Merge(m, src)
}
func (m *MplsTeDarkbwSampleRsvp) XXX_Size() int {
	return xxx_messageInfo_MplsTeDarkbwSampleRsvp.Size(m)
}
func (m *MplsTeDarkbwSampleRsvp) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsTeDarkbwSampleRsvp.DiscardUnknown(m)
}

var xxx_messageInfo_MplsTeDarkbwSampleRsvp proto.InternalMessageInfo

func (m *MplsTeDarkbwSampleRsvp) GetTimestamp() uint32 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *MplsTeDarkbwSampleRsvp) GetTotalRate() uint64 {
	if m != nil {
		return m.TotalRate
	}
	return 0
}

func (m *MplsTeDarkbwSampleRsvp) GetRsvpTeRate() uint64 {
	if m != nil {
		return m.RsvpTeRate
	}
	return 0
}

func (m *MplsTeDarkbwSampleRsvp) GetNonRsvpTeRate() uint64 {
	if m != nil {
		return m.NonRsvpTeRate
	}
	return 0
}

type MplsTeDarkbwHistoryRsvp struct {
	RsvpTeActiveIntervalSample   []*MplsTeDarkbwSampleRsvp `protobuf:"bytes,1,rep,name=rsvp_te_active_interval_sample,json=rsvpTeActiveIntervalSample,proto3" json:"rsvp_te_active_interval_sample,omitempty"`
	RsvpTePreviousIntervalSample []*MplsTeDarkbwSampleRsvp `protobuf:"bytes,2,rep,name=rsvp_te_previous_interval_sample,json=rsvpTePreviousIntervalSample,proto3" json:"rsvp_te_previous_interval_sample,omitempty"`
	XXX_NoUnkeyedLiteral         struct{}                  `json:"-"`
	XXX_unrecognized             []byte                    `json:"-"`
	XXX_sizecache                int32                     `json:"-"`
}

func (m *MplsTeDarkbwHistoryRsvp) Reset()         { *m = MplsTeDarkbwHistoryRsvp{} }
func (m *MplsTeDarkbwHistoryRsvp) String() string { return proto.CompactTextString(m) }
func (*MplsTeDarkbwHistoryRsvp) ProtoMessage()    {}
func (*MplsTeDarkbwHistoryRsvp) Descriptor() ([]byte, []int) {
	return fileDescriptor_02391c5e24e6c41f, []int{10}
}

func (m *MplsTeDarkbwHistoryRsvp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsTeDarkbwHistoryRsvp.Unmarshal(m, b)
}
func (m *MplsTeDarkbwHistoryRsvp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsTeDarkbwHistoryRsvp.Marshal(b, m, deterministic)
}
func (m *MplsTeDarkbwHistoryRsvp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsTeDarkbwHistoryRsvp.Merge(m, src)
}
func (m *MplsTeDarkbwHistoryRsvp) XXX_Size() int {
	return xxx_messageInfo_MplsTeDarkbwHistoryRsvp.Size(m)
}
func (m *MplsTeDarkbwHistoryRsvp) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsTeDarkbwHistoryRsvp.DiscardUnknown(m)
}

var xxx_messageInfo_MplsTeDarkbwHistoryRsvp proto.InternalMessageInfo

func (m *MplsTeDarkbwHistoryRsvp) GetRsvpTeActiveIntervalSample() []*MplsTeDarkbwSampleRsvp {
	if m != nil {
		return m.RsvpTeActiveIntervalSample
	}
	return nil
}

func (m *MplsTeDarkbwHistoryRsvp) GetRsvpTePreviousIntervalSample() []*MplsTeDarkbwSampleRsvp {
	if m != nil {
		return m.RsvpTePreviousIntervalSample
	}
	return nil
}

type MplsTeDarkbwSampleSr struct {
	Timestamp            uint32   `protobuf:"varint,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	SrRate               uint64   `protobuf:"varint,2,opt,name=sr_rate,json=srRate,proto3" json:"sr_rate,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MplsTeDarkbwSampleSr) Reset()         { *m = MplsTeDarkbwSampleSr{} }
func (m *MplsTeDarkbwSampleSr) String() string { return proto.CompactTextString(m) }
func (*MplsTeDarkbwSampleSr) ProtoMessage()    {}
func (*MplsTeDarkbwSampleSr) Descriptor() ([]byte, []int) {
	return fileDescriptor_02391c5e24e6c41f, []int{11}
}

func (m *MplsTeDarkbwSampleSr) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsTeDarkbwSampleSr.Unmarshal(m, b)
}
func (m *MplsTeDarkbwSampleSr) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsTeDarkbwSampleSr.Marshal(b, m, deterministic)
}
func (m *MplsTeDarkbwSampleSr) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsTeDarkbwSampleSr.Merge(m, src)
}
func (m *MplsTeDarkbwSampleSr) XXX_Size() int {
	return xxx_messageInfo_MplsTeDarkbwSampleSr.Size(m)
}
func (m *MplsTeDarkbwSampleSr) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsTeDarkbwSampleSr.DiscardUnknown(m)
}

var xxx_messageInfo_MplsTeDarkbwSampleSr proto.InternalMessageInfo

func (m *MplsTeDarkbwSampleSr) GetTimestamp() uint32 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *MplsTeDarkbwSampleSr) GetSrRate() uint64 {
	if m != nil {
		return m.SrRate
	}
	return 0
}

type MplsTeDarkbwHistorySr struct {
	SrActiveIntervalSample   []*MplsTeDarkbwSampleSr `protobuf:"bytes,1,rep,name=sr_active_interval_sample,json=srActiveIntervalSample,proto3" json:"sr_active_interval_sample,omitempty"`
	SrPreviousIntervalSample []*MplsTeDarkbwSampleSr `protobuf:"bytes,2,rep,name=sr_previous_interval_sample,json=srPreviousIntervalSample,proto3" json:"sr_previous_interval_sample,omitempty"`
	XXX_NoUnkeyedLiteral     struct{}                `json:"-"`
	XXX_unrecognized         []byte                  `json:"-"`
	XXX_sizecache            int32                   `json:"-"`
}

func (m *MplsTeDarkbwHistorySr) Reset()         { *m = MplsTeDarkbwHistorySr{} }
func (m *MplsTeDarkbwHistorySr) String() string { return proto.CompactTextString(m) }
func (*MplsTeDarkbwHistorySr) ProtoMessage()    {}
func (*MplsTeDarkbwHistorySr) Descriptor() ([]byte, []int) {
	return fileDescriptor_02391c5e24e6c41f, []int{12}
}

func (m *MplsTeDarkbwHistorySr) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsTeDarkbwHistorySr.Unmarshal(m, b)
}
func (m *MplsTeDarkbwHistorySr) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsTeDarkbwHistorySr.Marshal(b, m, deterministic)
}
func (m *MplsTeDarkbwHistorySr) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsTeDarkbwHistorySr.Merge(m, src)
}
func (m *MplsTeDarkbwHistorySr) XXX_Size() int {
	return xxx_messageInfo_MplsTeDarkbwHistorySr.Size(m)
}
func (m *MplsTeDarkbwHistorySr) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsTeDarkbwHistorySr.DiscardUnknown(m)
}

var xxx_messageInfo_MplsTeDarkbwHistorySr proto.InternalMessageInfo

func (m *MplsTeDarkbwHistorySr) GetSrActiveIntervalSample() []*MplsTeDarkbwSampleSr {
	if m != nil {
		return m.SrActiveIntervalSample
	}
	return nil
}

func (m *MplsTeDarkbwHistorySr) GetSrPreviousIntervalSample() []*MplsTeDarkbwSampleSr {
	if m != nil {
		return m.SrPreviousIntervalSample
	}
	return nil
}

type MplsLmDarkbwLinkInfo struct {
	BandwidthAccountCommonInfo   *MplsLmDarkbwLinkCommonInfo `protobuf:"bytes,1,opt,name=bandwidth_account_common_info,json=bandwidthAccountCommonInfo,proto3" json:"bandwidth_account_common_info,omitempty"`
	RsvpTeBandwidthSampleHistory *MplsTeDarkbwHistoryRsvp    `protobuf:"bytes,2,opt,name=rsvp_te_bandwidth_sample_history,json=rsvpTeBandwidthSampleHistory,proto3" json:"rsvp_te_bandwidth_sample_history,omitempty"`
	SrBandwidthSampleHistory     *MplsTeDarkbwHistorySr      `protobuf:"bytes,3,opt,name=sr_bandwidth_sample_history,json=srBandwidthSampleHistory,proto3" json:"sr_bandwidth_sample_history,omitempty"`
	XXX_NoUnkeyedLiteral         struct{}                    `json:"-"`
	XXX_unrecognized             []byte                      `json:"-"`
	XXX_sizecache                int32                       `json:"-"`
}

func (m *MplsLmDarkbwLinkInfo) Reset()         { *m = MplsLmDarkbwLinkInfo{} }
func (m *MplsLmDarkbwLinkInfo) String() string { return proto.CompactTextString(m) }
func (*MplsLmDarkbwLinkInfo) ProtoMessage()    {}
func (*MplsLmDarkbwLinkInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_02391c5e24e6c41f, []int{13}
}

func (m *MplsLmDarkbwLinkInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsLmDarkbwLinkInfo.Unmarshal(m, b)
}
func (m *MplsLmDarkbwLinkInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsLmDarkbwLinkInfo.Marshal(b, m, deterministic)
}
func (m *MplsLmDarkbwLinkInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsLmDarkbwLinkInfo.Merge(m, src)
}
func (m *MplsLmDarkbwLinkInfo) XXX_Size() int {
	return xxx_messageInfo_MplsLmDarkbwLinkInfo.Size(m)
}
func (m *MplsLmDarkbwLinkInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsLmDarkbwLinkInfo.DiscardUnknown(m)
}

var xxx_messageInfo_MplsLmDarkbwLinkInfo proto.InternalMessageInfo

func (m *MplsLmDarkbwLinkInfo) GetBandwidthAccountCommonInfo() *MplsLmDarkbwLinkCommonInfo {
	if m != nil {
		return m.BandwidthAccountCommonInfo
	}
	return nil
}

func (m *MplsLmDarkbwLinkInfo) GetRsvpTeBandwidthSampleHistory() *MplsTeDarkbwHistoryRsvp {
	if m != nil {
		return m.RsvpTeBandwidthSampleHistory
	}
	return nil
}

func (m *MplsLmDarkbwLinkInfo) GetSrBandwidthSampleHistory() *MplsTeDarkbwHistorySr {
	if m != nil {
		return m.SrBandwidthSampleHistory
	}
	return nil
}

type MplsTeAffinityMapInfo struct {
	AffinityName          string   `protobuf:"bytes,1,opt,name=affinity_name,json=affinityName,proto3" json:"affinity_name,omitempty"`
	AffinityValue         uint32   `protobuf:"varint,2,opt,name=affinity_value,json=affinityValue,proto3" json:"affinity_value,omitempty"`
	AffinityExtendedValue []uint32 `protobuf:"varint,3,rep,packed,name=affinity_extended_value,json=affinityExtendedValue,proto3" json:"affinity_extended_value,omitempty"`
	AffinityBitPosition   uint32   `protobuf:"varint,4,opt,name=affinity_bit_position,json=affinityBitPosition,proto3" json:"affinity_bit_position,omitempty"`
	AffinityTableId       string   `protobuf:"bytes,5,opt,name=affinity_table_id,json=affinityTableId,proto3" json:"affinity_table_id,omitempty"`
	XXX_NoUnkeyedLiteral  struct{} `json:"-"`
	XXX_unrecognized      []byte   `json:"-"`
	XXX_sizecache         int32    `json:"-"`
}

func (m *MplsTeAffinityMapInfo) Reset()         { *m = MplsTeAffinityMapInfo{} }
func (m *MplsTeAffinityMapInfo) String() string { return proto.CompactTextString(m) }
func (*MplsTeAffinityMapInfo) ProtoMessage()    {}
func (*MplsTeAffinityMapInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_02391c5e24e6c41f, []int{14}
}

func (m *MplsTeAffinityMapInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsTeAffinityMapInfo.Unmarshal(m, b)
}
func (m *MplsTeAffinityMapInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsTeAffinityMapInfo.Marshal(b, m, deterministic)
}
func (m *MplsTeAffinityMapInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsTeAffinityMapInfo.Merge(m, src)
}
func (m *MplsTeAffinityMapInfo) XXX_Size() int {
	return xxx_messageInfo_MplsTeAffinityMapInfo.Size(m)
}
func (m *MplsTeAffinityMapInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsTeAffinityMapInfo.DiscardUnknown(m)
}

var xxx_messageInfo_MplsTeAffinityMapInfo proto.InternalMessageInfo

func (m *MplsTeAffinityMapInfo) GetAffinityName() string {
	if m != nil {
		return m.AffinityName
	}
	return ""
}

func (m *MplsTeAffinityMapInfo) GetAffinityValue() uint32 {
	if m != nil {
		return m.AffinityValue
	}
	return 0
}

func (m *MplsTeAffinityMapInfo) GetAffinityExtendedValue() []uint32 {
	if m != nil {
		return m.AffinityExtendedValue
	}
	return nil
}

func (m *MplsTeAffinityMapInfo) GetAffinityBitPosition() uint32 {
	if m != nil {
		return m.AffinityBitPosition
	}
	return 0
}

func (m *MplsTeAffinityMapInfo) GetAffinityTableId() string {
	if m != nil {
		return m.AffinityTableId
	}
	return ""
}

type MplsLmInterfaceLinkAreaInfo struct {
	AreaId               string   `protobuf:"bytes,1,opt,name=area_id,json=areaId,proto3" json:"area_id,omitempty"`
	NeighborId           string   `protobuf:"bytes,2,opt,name=neighbor_id,json=neighborId,proto3" json:"neighbor_id,omitempty"`
	NeighborAddress      string   `protobuf:"bytes,3,opt,name=neighbor_address,json=neighborAddress,proto3" json:"neighbor_address,omitempty"`
	IsNeighborUp         bool     `protobuf:"varint,4,opt,name=is_neighbor_up,json=isNeighborUp,proto3" json:"is_neighbor_up,omitempty"`
	IgpMetric            uint32   `protobuf:"varint,5,opt,name=igp_metric,json=igpMetric,proto3" json:"igp_metric,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MplsLmInterfaceLinkAreaInfo) Reset()         { *m = MplsLmInterfaceLinkAreaInfo{} }
func (m *MplsLmInterfaceLinkAreaInfo) String() string { return proto.CompactTextString(m) }
func (*MplsLmInterfaceLinkAreaInfo) ProtoMessage()    {}
func (*MplsLmInterfaceLinkAreaInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_02391c5e24e6c41f, []int{15}
}

func (m *MplsLmInterfaceLinkAreaInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsLmInterfaceLinkAreaInfo.Unmarshal(m, b)
}
func (m *MplsLmInterfaceLinkAreaInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsLmInterfaceLinkAreaInfo.Marshal(b, m, deterministic)
}
func (m *MplsLmInterfaceLinkAreaInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsLmInterfaceLinkAreaInfo.Merge(m, src)
}
func (m *MplsLmInterfaceLinkAreaInfo) XXX_Size() int {
	return xxx_messageInfo_MplsLmInterfaceLinkAreaInfo.Size(m)
}
func (m *MplsLmInterfaceLinkAreaInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsLmInterfaceLinkAreaInfo.DiscardUnknown(m)
}

var xxx_messageInfo_MplsLmInterfaceLinkAreaInfo proto.InternalMessageInfo

func (m *MplsLmInterfaceLinkAreaInfo) GetAreaId() string {
	if m != nil {
		return m.AreaId
	}
	return ""
}

func (m *MplsLmInterfaceLinkAreaInfo) GetNeighborId() string {
	if m != nil {
		return m.NeighborId
	}
	return ""
}

func (m *MplsLmInterfaceLinkAreaInfo) GetNeighborAddress() string {
	if m != nil {
		return m.NeighborAddress
	}
	return ""
}

func (m *MplsLmInterfaceLinkAreaInfo) GetIsNeighborUp() bool {
	if m != nil {
		return m.IsNeighborUp
	}
	return false
}

func (m *MplsLmInterfaceLinkAreaInfo) GetIgpMetric() uint32 {
	if m != nil {
		return m.IgpMetric
	}
	return 0
}

type MplsLmInterfaceLockoutInfo struct {
	IsLockout            bool     `protobuf:"varint,1,opt,name=is_lockout,json=isLockout,proto3" json:"is_lockout,omitempty"`
	LockoutOnTimestamp   uint32   `protobuf:"varint,2,opt,name=lockout_on_timestamp,json=lockoutOnTimestamp,proto3" json:"lockout_on_timestamp,omitempty"`
	LockoutOffTimestamp  uint32   `protobuf:"varint,3,opt,name=lockout_off_timestamp,json=lockoutOffTimestamp,proto3" json:"lockout_off_timestamp,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MplsLmInterfaceLockoutInfo) Reset()         { *m = MplsLmInterfaceLockoutInfo{} }
func (m *MplsLmInterfaceLockoutInfo) String() string { return proto.CompactTextString(m) }
func (*MplsLmInterfaceLockoutInfo) ProtoMessage()    {}
func (*MplsLmInterfaceLockoutInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_02391c5e24e6c41f, []int{16}
}

func (m *MplsLmInterfaceLockoutInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsLmInterfaceLockoutInfo.Unmarshal(m, b)
}
func (m *MplsLmInterfaceLockoutInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsLmInterfaceLockoutInfo.Marshal(b, m, deterministic)
}
func (m *MplsLmInterfaceLockoutInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsLmInterfaceLockoutInfo.Merge(m, src)
}
func (m *MplsLmInterfaceLockoutInfo) XXX_Size() int {
	return xxx_messageInfo_MplsLmInterfaceLockoutInfo.Size(m)
}
func (m *MplsLmInterfaceLockoutInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsLmInterfaceLockoutInfo.DiscardUnknown(m)
}

var xxx_messageInfo_MplsLmInterfaceLockoutInfo proto.InternalMessageInfo

func (m *MplsLmInterfaceLockoutInfo) GetIsLockout() bool {
	if m != nil {
		return m.IsLockout
	}
	return false
}

func (m *MplsLmInterfaceLockoutInfo) GetLockoutOnTimestamp() uint32 {
	if m != nil {
		return m.LockoutOnTimestamp
	}
	return 0
}

func (m *MplsLmInterfaceLockoutInfo) GetLockoutOffTimestamp() uint32 {
	if m != nil {
		return m.LockoutOffTimestamp
	}
	return 0
}

type TeHwOorStats struct {
	HwOorState                  string   `protobuf:"bytes,1,opt,name=hw_oor_state,json=hwOorState,proto3" json:"hw_oor_state,omitempty"`
	Transitions                 uint32   `protobuf:"varint,2,opt,name=transitions,proto3" json:"transitions,omitempty"`
	NodeProtectionDisableNumber uint32   `protobuf:"varint,3,opt,name=node_protection_disable_number,json=nodeProtectionDisableNumber,proto3" json:"node_protection_disable_number,omitempty"`
	RejectedLsPsNumber          uint32   `protobuf:"varint,4,opt,name=rejected_ls_ps_number,json=rejectedLsPsNumber,proto3" json:"rejected_ls_ps_number,omitempty"`
	AcceptedLsPsNumber          uint32   `protobuf:"varint,5,opt,name=accepted_ls_ps_number,json=acceptedLsPsNumber,proto3" json:"accepted_ls_ps_number,omitempty"`
	AcceptedReoptLsPsNumber     uint32   `protobuf:"varint,6,opt,name=accepted_reopt_ls_ps_number,json=acceptedReoptLsPsNumber,proto3" json:"accepted_reopt_ls_ps_number,omitempty"`
	RejectedReoptLsPsNumber     uint32   `protobuf:"varint,7,opt,name=rejected_reopt_ls_ps_number,json=rejectedReoptLsPsNumber,proto3" json:"rejected_reopt_ls_ps_number,omitempty"`
	XXX_NoUnkeyedLiteral        struct{} `json:"-"`
	XXX_unrecognized            []byte   `json:"-"`
	XXX_sizecache               int32    `json:"-"`
}

func (m *TeHwOorStats) Reset()         { *m = TeHwOorStats{} }
func (m *TeHwOorStats) String() string { return proto.CompactTextString(m) }
func (*TeHwOorStats) ProtoMessage()    {}
func (*TeHwOorStats) Descriptor() ([]byte, []int) {
	return fileDescriptor_02391c5e24e6c41f, []int{17}
}

func (m *TeHwOorStats) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TeHwOorStats.Unmarshal(m, b)
}
func (m *TeHwOorStats) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TeHwOorStats.Marshal(b, m, deterministic)
}
func (m *TeHwOorStats) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TeHwOorStats.Merge(m, src)
}
func (m *TeHwOorStats) XXX_Size() int {
	return xxx_messageInfo_TeHwOorStats.Size(m)
}
func (m *TeHwOorStats) XXX_DiscardUnknown() {
	xxx_messageInfo_TeHwOorStats.DiscardUnknown(m)
}

var xxx_messageInfo_TeHwOorStats proto.InternalMessageInfo

func (m *TeHwOorStats) GetHwOorState() string {
	if m != nil {
		return m.HwOorState
	}
	return ""
}

func (m *TeHwOorStats) GetTransitions() uint32 {
	if m != nil {
		return m.Transitions
	}
	return 0
}

func (m *TeHwOorStats) GetNodeProtectionDisableNumber() uint32 {
	if m != nil {
		return m.NodeProtectionDisableNumber
	}
	return 0
}

func (m *TeHwOorStats) GetRejectedLsPsNumber() uint32 {
	if m != nil {
		return m.RejectedLsPsNumber
	}
	return 0
}

func (m *TeHwOorStats) GetAcceptedLsPsNumber() uint32 {
	if m != nil {
		return m.AcceptedLsPsNumber
	}
	return 0
}

func (m *TeHwOorStats) GetAcceptedReoptLsPsNumber() uint32 {
	if m != nil {
		return m.AcceptedReoptLsPsNumber
	}
	return 0
}

func (m *TeHwOorStats) GetRejectedReoptLsPsNumber() uint32 {
	if m != nil {
		return m.RejectedReoptLsPsNumber
	}
	return 0
}

type MplsLmInterfaceHwOorInfo struct {
	HwOorState             string          `protobuf:"bytes,1,opt,name=hw_oor_state,json=hwOorState,proto3" json:"hw_oor_state,omitempty"`
	HwOorTimestamp         uint32          `protobuf:"varint,2,opt,name=hw_oor_timestamp,json=hwOorTimestamp,proto3" json:"hw_oor_timestamp,omitempty"`
	HwOOrGreenRecoveryTime uint32          `protobuf:"varint,3,opt,name=hw_o_or_green_recovery_time,json=hwOOrGreenRecoveryTime,proto3" json:"hw_o_or_green_recovery_time,omitempty"`
	HwOOrLinkStatistic     []*TeHwOorStats `protobuf:"bytes,4,rep,name=hw_o_or_link_statistic,json=hwOOrLinkStatistic,proto3" json:"hw_o_or_link_statistic,omitempty"`
	XXX_NoUnkeyedLiteral   struct{}        `json:"-"`
	XXX_unrecognized       []byte          `json:"-"`
	XXX_sizecache          int32           `json:"-"`
}

func (m *MplsLmInterfaceHwOorInfo) Reset()         { *m = MplsLmInterfaceHwOorInfo{} }
func (m *MplsLmInterfaceHwOorInfo) String() string { return proto.CompactTextString(m) }
func (*MplsLmInterfaceHwOorInfo) ProtoMessage()    {}
func (*MplsLmInterfaceHwOorInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_02391c5e24e6c41f, []int{18}
}

func (m *MplsLmInterfaceHwOorInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsLmInterfaceHwOorInfo.Unmarshal(m, b)
}
func (m *MplsLmInterfaceHwOorInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsLmInterfaceHwOorInfo.Marshal(b, m, deterministic)
}
func (m *MplsLmInterfaceHwOorInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsLmInterfaceHwOorInfo.Merge(m, src)
}
func (m *MplsLmInterfaceHwOorInfo) XXX_Size() int {
	return xxx_messageInfo_MplsLmInterfaceHwOorInfo.Size(m)
}
func (m *MplsLmInterfaceHwOorInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsLmInterfaceHwOorInfo.DiscardUnknown(m)
}

var xxx_messageInfo_MplsLmInterfaceHwOorInfo proto.InternalMessageInfo

func (m *MplsLmInterfaceHwOorInfo) GetHwOorState() string {
	if m != nil {
		return m.HwOorState
	}
	return ""
}

func (m *MplsLmInterfaceHwOorInfo) GetHwOorTimestamp() uint32 {
	if m != nil {
		return m.HwOorTimestamp
	}
	return 0
}

func (m *MplsLmInterfaceHwOorInfo) GetHwOOrGreenRecoveryTime() uint32 {
	if m != nil {
		return m.HwOOrGreenRecoveryTime
	}
	return 0
}

func (m *MplsLmInterfaceHwOorInfo) GetHwOOrLinkStatistic() []*TeHwOorStats {
	if m != nil {
		return m.HwOOrLinkStatistic
	}
	return nil
}

type MplsLmInterfaceLinkInfo struct {
	LinkCommon                     *MplsLmCommonLinkInfo          `protobuf:"bytes,50,opt,name=link_common,json=linkCommon,proto3" json:"link_common,omitempty"`
	ReasonNotFlooded               string                         `protobuf:"bytes,51,opt,name=reason_not_flooded,json=reasonNotFlooded,proto3" json:"reason_not_flooded,omitempty"`
	MaximumReservationBandwidthRdm uint64                         `protobuf:"varint,52,opt,name=maximum_reservation_bandwidth_rdm,json=maximumReservationBandwidthRdm,proto3" json:"maximum_reservation_bandwidth_rdm,omitempty"`
	ReservablePool0BandwidthRdm    uint64                         `protobuf:"varint,53,opt,name=reservable_pool0_bandwidth_rdm,json=reservablePool0BandwidthRdm,proto3" json:"reservable_pool0_bandwidth_rdm,omitempty"`
	ReservablePool1BandwidthRdm    uint64                         `protobuf:"varint,54,opt,name=reservable_pool1_bandwidth_rdm,json=reservablePool1BandwidthRdm,proto3" json:"reservable_pool1_bandwidth_rdm,omitempty"`
	MaximumReservationBandwidthMam uint64                         `protobuf:"varint,55,opt,name=maximum_reservation_bandwidth_mam,json=maximumReservationBandwidthMam,proto3" json:"maximum_reservation_bandwidth_mam,omitempty"`
	ReservablePool0BandwidthMam    uint64                         `protobuf:"varint,56,opt,name=reservable_pool0_bandwidth_mam,json=reservablePool0BandwidthMam,proto3" json:"reservable_pool0_bandwidth_mam,omitempty"`
	ReservablePool1BandwidthMam    uint64                         `protobuf:"varint,57,opt,name=reservable_pool1_bandwidth_mam,json=reservablePool1BandwidthMam,proto3" json:"reservable_pool1_bandwidth_mam,omitempty"`
	BandwidthAccount               *MplsLmDarkbwLinkInfo          `protobuf:"bytes,58,opt,name=bandwidth_account,json=bandwidthAccount,proto3" json:"bandwidth_account,omitempty"`
	LinkAttributes                 uint32                         `protobuf:"varint,59,opt,name=link_attributes,json=linkAttributes,proto3" json:"link_attributes,omitempty"`
	LinkExtendedAttribute          []uint32                       `protobuf:"varint,60,rep,packed,name=link_extended_attribute,json=linkExtendedAttribute,proto3" json:"link_extended_attribute,omitempty"`
	LinkForwadRefValue             []uint32                       `protobuf:"varint,61,rep,packed,name=link_forwad_ref_value,json=linkForwadRefValue,proto3" json:"link_forwad_ref_value,omitempty"`
	AffinityMap                    []*MplsTeAffinityMapInfo       `protobuf:"bytes,62,rep,name=affinity_map,json=affinityMap,proto3" json:"affinity_map,omitempty"`
	IsAttributeIncomplete          bool                           `protobuf:"varint,63,opt,name=is_attribute_incomplete,json=isAttributeIncomplete,proto3" json:"is_attribute_incomplete,omitempty"`
	IsNameBasedAttribute           bool                           `protobuf:"varint,64,opt,name=is_name_based_attribute,json=isNameBasedAttribute,proto3" json:"is_name_based_attribute,omitempty"`
	TeMetric                       uint32                         `protobuf:"varint,65,opt,name=te_metric,json=teMetric,proto3" json:"te_metric,omitempty"`
	IsTeMetricValid                bool                           `protobuf:"varint,66,opt,name=is_te_metric_valid,json=isTeMetricValid,proto3" json:"is_te_metric_valid,omitempty"`
	Areas                          []*MplsLmInterfaceLinkAreaInfo `protobuf:"bytes,67,rep,name=areas,proto3" json:"areas,omitempty"`
	Lockout                        []*MplsLmInterfaceLockoutInfo  `protobuf:"bytes,68,rep,name=lockout,proto3" json:"lockout,omitempty"`
	HwOor                          *MplsLmInterfaceHwOorInfo      `protobuf:"bytes,69,opt,name=hw_oor,json=hwOor,proto3" json:"hw_oor,omitempty"`
	XXX_NoUnkeyedLiteral           struct{}                       `json:"-"`
	XXX_unrecognized               []byte                         `json:"-"`
	XXX_sizecache                  int32                          `json:"-"`
}

func (m *MplsLmInterfaceLinkInfo) Reset()         { *m = MplsLmInterfaceLinkInfo{} }
func (m *MplsLmInterfaceLinkInfo) String() string { return proto.CompactTextString(m) }
func (*MplsLmInterfaceLinkInfo) ProtoMessage()    {}
func (*MplsLmInterfaceLinkInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_02391c5e24e6c41f, []int{19}
}

func (m *MplsLmInterfaceLinkInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsLmInterfaceLinkInfo.Unmarshal(m, b)
}
func (m *MplsLmInterfaceLinkInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsLmInterfaceLinkInfo.Marshal(b, m, deterministic)
}
func (m *MplsLmInterfaceLinkInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsLmInterfaceLinkInfo.Merge(m, src)
}
func (m *MplsLmInterfaceLinkInfo) XXX_Size() int {
	return xxx_messageInfo_MplsLmInterfaceLinkInfo.Size(m)
}
func (m *MplsLmInterfaceLinkInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsLmInterfaceLinkInfo.DiscardUnknown(m)
}

var xxx_messageInfo_MplsLmInterfaceLinkInfo proto.InternalMessageInfo

func (m *MplsLmInterfaceLinkInfo) GetLinkCommon() *MplsLmCommonLinkInfo {
	if m != nil {
		return m.LinkCommon
	}
	return nil
}

func (m *MplsLmInterfaceLinkInfo) GetReasonNotFlooded() string {
	if m != nil {
		return m.ReasonNotFlooded
	}
	return ""
}

func (m *MplsLmInterfaceLinkInfo) GetMaximumReservationBandwidthRdm() uint64 {
	if m != nil {
		return m.MaximumReservationBandwidthRdm
	}
	return 0
}

func (m *MplsLmInterfaceLinkInfo) GetReservablePool0BandwidthRdm() uint64 {
	if m != nil {
		return m.ReservablePool0BandwidthRdm
	}
	return 0
}

func (m *MplsLmInterfaceLinkInfo) GetReservablePool1BandwidthRdm() uint64 {
	if m != nil {
		return m.ReservablePool1BandwidthRdm
	}
	return 0
}

func (m *MplsLmInterfaceLinkInfo) GetMaximumReservationBandwidthMam() uint64 {
	if m != nil {
		return m.MaximumReservationBandwidthMam
	}
	return 0
}

func (m *MplsLmInterfaceLinkInfo) GetReservablePool0BandwidthMam() uint64 {
	if m != nil {
		return m.ReservablePool0BandwidthMam
	}
	return 0
}

func (m *MplsLmInterfaceLinkInfo) GetReservablePool1BandwidthMam() uint64 {
	if m != nil {
		return m.ReservablePool1BandwidthMam
	}
	return 0
}

func (m *MplsLmInterfaceLinkInfo) GetBandwidthAccount() *MplsLmDarkbwLinkInfo {
	if m != nil {
		return m.BandwidthAccount
	}
	return nil
}

func (m *MplsLmInterfaceLinkInfo) GetLinkAttributes() uint32 {
	if m != nil {
		return m.LinkAttributes
	}
	return 0
}

func (m *MplsLmInterfaceLinkInfo) GetLinkExtendedAttribute() []uint32 {
	if m != nil {
		return m.LinkExtendedAttribute
	}
	return nil
}

func (m *MplsLmInterfaceLinkInfo) GetLinkForwadRefValue() []uint32 {
	if m != nil {
		return m.LinkForwadRefValue
	}
	return nil
}

func (m *MplsLmInterfaceLinkInfo) GetAffinityMap() []*MplsTeAffinityMapInfo {
	if m != nil {
		return m.AffinityMap
	}
	return nil
}

func (m *MplsLmInterfaceLinkInfo) GetIsAttributeIncomplete() bool {
	if m != nil {
		return m.IsAttributeIncomplete
	}
	return false
}

func (m *MplsLmInterfaceLinkInfo) GetIsNameBasedAttribute() bool {
	if m != nil {
		return m.IsNameBasedAttribute
	}
	return false
}

func (m *MplsLmInterfaceLinkInfo) GetTeMetric() uint32 {
	if m != nil {
		return m.TeMetric
	}
	return 0
}

func (m *MplsLmInterfaceLinkInfo) GetIsTeMetricValid() bool {
	if m != nil {
		return m.IsTeMetricValid
	}
	return false
}

func (m *MplsLmInterfaceLinkInfo) GetAreas() []*MplsLmInterfaceLinkAreaInfo {
	if m != nil {
		return m.Areas
	}
	return nil
}

func (m *MplsLmInterfaceLinkInfo) GetLockout() []*MplsLmInterfaceLockoutInfo {
	if m != nil {
		return m.Lockout
	}
	return nil
}

func (m *MplsLmInterfaceLinkInfo) GetHwOor() *MplsLmInterfaceHwOorInfo {
	if m != nil {
		return m.HwOor
	}
	return nil
}

func init() {
	proto.RegisterType((*MplsLmInterfaceLinkInfo_KEYS)(nil), "cisco_ios_xr_mpls_te_oper.mpls_lcac.link_information.links.link.mpls_lm_interface_link_info_KEYS")
	proto.RegisterType((*MplsSrlgInfo)(nil), "cisco_ios_xr_mpls_te_oper.mpls_lcac.link_information.links.link.mpls_srlg_info")
	proto.RegisterType((*MplsLmIntfSwitchingCapInfo)(nil), "cisco_ios_xr_mpls_te_oper.mpls_lcac.link_information.links.link.mpls_lm_intf_switching_cap_info")
	proto.RegisterType((*MplsLmLinkFlags)(nil), "cisco_ios_xr_mpls_te_oper.mpls_lcac.link_information.links.link.mpls_lm_link_flags")
	proto.RegisterType((*MplsLmFloodedArea)(nil), "cisco_ios_xr_mpls_te_oper.mpls_lcac.link_information.links.link.mpls_lm_flooded_area")
	proto.RegisterType((*MplsLmCommonLinkInfo)(nil), "cisco_ios_xr_mpls_te_oper.mpls_lcac.link_information.links.link.mpls_lm_common_link_info")
	proto.RegisterType((*MplsTeDarkbwBwUtilRsvp)(nil), "cisco_ios_xr_mpls_te_oper.mpls_lcac.link_information.links.link.mpls_te_darkbw_bw_util_rsvp")
	proto.RegisterType((*MplsTeDarkbwBwUtilSr)(nil), "cisco_ios_xr_mpls_te_oper.mpls_lcac.link_information.links.link.mpls_te_darkbw_bw_util_sr")
	proto.RegisterType((*MplsLmDarkbwLinkCommonInfo)(nil), "cisco_ios_xr_mpls_te_oper.mpls_lcac.link_information.links.link.mpls_lm_darkbw_link_common_info")
	proto.RegisterType((*MplsTeDarkbwSampleRsvp)(nil), "cisco_ios_xr_mpls_te_oper.mpls_lcac.link_information.links.link.mpls_te_darkbw_sample_rsvp")
	proto.RegisterType((*MplsTeDarkbwHistoryRsvp)(nil), "cisco_ios_xr_mpls_te_oper.mpls_lcac.link_information.links.link.mpls_te_darkbw_history_rsvp")
	proto.RegisterType((*MplsTeDarkbwSampleSr)(nil), "cisco_ios_xr_mpls_te_oper.mpls_lcac.link_information.links.link.mpls_te_darkbw_sample_sr")
	proto.RegisterType((*MplsTeDarkbwHistorySr)(nil), "cisco_ios_xr_mpls_te_oper.mpls_lcac.link_information.links.link.mpls_te_darkbw_history_sr")
	proto.RegisterType((*MplsLmDarkbwLinkInfo)(nil), "cisco_ios_xr_mpls_te_oper.mpls_lcac.link_information.links.link.mpls_lm_darkbw_link_info")
	proto.RegisterType((*MplsTeAffinityMapInfo)(nil), "cisco_ios_xr_mpls_te_oper.mpls_lcac.link_information.links.link.mpls_te_affinity_map_info")
	proto.RegisterType((*MplsLmInterfaceLinkAreaInfo)(nil), "cisco_ios_xr_mpls_te_oper.mpls_lcac.link_information.links.link.mpls_lm_interface_link_area_info")
	proto.RegisterType((*MplsLmInterfaceLockoutInfo)(nil), "cisco_ios_xr_mpls_te_oper.mpls_lcac.link_information.links.link.mpls_lm_interface_lockout_info")
	proto.RegisterType((*TeHwOorStats)(nil), "cisco_ios_xr_mpls_te_oper.mpls_lcac.link_information.links.link.te_hw_oor_stats")
	proto.RegisterType((*MplsLmInterfaceHwOorInfo)(nil), "cisco_ios_xr_mpls_te_oper.mpls_lcac.link_information.links.link.mpls_lm_interface_hw_oor_info")
	proto.RegisterType((*MplsLmInterfaceLinkInfo)(nil), "cisco_ios_xr_mpls_te_oper.mpls_lcac.link_information.links.link.mpls_lm_interface_link_info")
}

func init() { proto.RegisterFile("mpls_lm_interface_link_info.proto", fileDescriptor_02391c5e24e6c41f) }

var fileDescriptor_02391c5e24e6c41f = []byte{
	// 2672 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x5a, 0x5b, 0x6f, 0x1c, 0xb7,
	0xf5, 0xc7, 0x4a, 0xbe, 0x68, 0xa9, 0xab, 0x69, 0xcb, 0x1a, 0x4b, 0xb6, 0x22, 0x6d, 0xfe, 0x8e,
	0xe5, 0xe4, 0x5f, 0x21, 0x72, 0x2e, 0xcd, 0xc5, 0x6d, 0x22, 0x5f, 0x92, 0x08, 0xb1, 0x6c, 0x75,
	0x2c, 0xa7, 0x70, 0x5b, 0x94, 0xe5, 0xce, 0x70, 0x77, 0x19, 0xcd, 0x0c, 0x07, 0x24, 0x57, 0xb2,
	0x02, 0x14, 0x28, 0xda, 0xa2, 0x9f, 0xa0, 0x0f, 0x2d, 0xfa, 0x90, 0x87, 0xa4, 0x0f, 0x7d, 0x2a,
	0xfa, 0xdc, 0xaf, 0xd0, 0x7e, 0x8c, 0x3c, 0xf5, 0x2b, 0x14, 0x68, 0xc1, 0x43, 0x72, 0x76, 0x76,
	0x77, 0x76, 0x95, 0x22, 0xd2, 0x8b, 0xa1, 0x3d, 0x97, 0x1f, 0xcf, 0x39, 0x3c, 0xe4, 0x39, 0x3c,
	0x63, 0xb4, 0x9e, 0xe6, 0x89, 0x22, 0x49, 0x4a, 0x78, 0xa6, 0x99, 0x6c, 0xd1, 0x88, 0x91, 0x84,
	0x67, 0x07, 0x84, 0x67, 0x2d, 0xb1, 0x99, 0x4b, 0xa1, 0x05, 0xfe, 0x20, 0xe2, 0x2a, 0x12, 0x84,
	0x0b, 0x45, 0x5e, 0x48, 0x02, 0xf2, 0x9a, 0x11, 0x91, 0x33, 0xb9, 0x69, 0x95, 0x23, 0x1a, 0x6d,
	0x16, 0x4a, 0x32, 0xa5, 0x9a, 0x8b, 0x0c, 0x08, 0x0a, 0xfe, 0x6d, 0xec, 0xa0, 0xb5, 0x31, 0xab,
	0x90, 0x4f, 0x1f, 0x3e, 0x7f, 0x8a, 0x6f, 0xa2, 0xb9, 0x1e, 0x2f, 0xa3, 0x29, 0x0b, 0x6a, 0x6b,
	0xb5, 0x8d, 0x7a, 0x38, 0x5b, 0x50, 0x1f, 0xd3, 0x94, 0x35, 0x9e, 0xa3, 0x39, 0x80, 0x52, 0x32,
	0x69, 0x83, 0x36, 0x7e, 0x15, 0x5d, 0x52, 0x1d, 0x2a, 0x59, 0x4c, 0x24, 0x57, 0x07, 0xa4, 0x2d,
	0x45, 0x37, 0x07, 0xdd, 0xd9, 0x70, 0xde, 0x32, 0x42, 0xae, 0x0e, 0x3e, 0x36, 0x64, 0xbc, 0x82,
	0xea, 0xa0, 0x08, 0xf8, 0x13, 0x80, 0x3f, 0x65, 0x08, 0x00, 0xfd, 0xeb, 0x1a, 0x7a, 0xa9, 0x64,
	0x66, 0x8b, 0xa8, 0x23, 0xae, 0xa3, 0x0e, 0xcf, 0xda, 0x24, 0xa2, 0xb9, 0x5d, 0x6c, 0x01, 0x4d,
	0x1e, 0xb0, 0x63, 0x07, 0x6f, 0xfe, 0xc4, 0x5b, 0xe8, 0x4a, 0x9f, 0x1c, 0x6d, 0xf2, 0x84, 0xeb,
	0x63, 0x40, 0x9f, 0x0d, 0x2f, 0x17, 0xbc, 0xfb, 0x05, 0x0b, 0x2f, 0xa3, 0x29, 0x96, 0x45, 0x22,
	0xe6, 0x59, 0x3b, 0x98, 0x04, 0xb1, 0xe2, 0x77, 0xe3, 0x57, 0x35, 0x84, 0xbd, 0x11, 0x10, 0xa1,
	0x56, 0x42, 0xdb, 0x0a, 0xaf, 0xa3, 0x59, 0xae, 0x7a, 0xa1, 0xcf, 0xc0, 0x82, 0xa9, 0x10, 0x71,
	0xb5, 0x9b, 0x27, 0x6a, 0x9f, 0x3d, 0xc9, 0xf0, 0x2d, 0x34, 0xaf, 0x78, 0x3b, 0xa3, 0x89, 0x31,
	0x84, 0xb6, 0x59, 0xa6, 0x9d, 0x87, 0x73, 0x05, 0x79, 0xdb, 0x50, 0xf1, 0x2a, 0x9a, 0xe6, 0x8a,
	0xd0, 0x38, 0xe5, 0x19, 0xe9, 0xe6, 0x60, 0xc1, 0x54, 0x58, 0xe7, 0x6a, 0xdb, 0x50, 0x9e, 0xe5,
	0x8d, 0x77, 0xd1, 0x15, 0x6f, 0x41, 0x2b, 0x11, 0x22, 0x66, 0x31, 0xa1, 0x92, 0x51, 0xbc, 0x8e,
	0x66, 0xca, 0xbf, 0xdd, 0xfe, 0x4c, 0x3b, 0xda, 0xb6, 0x64, 0xb4, 0xf1, 0x97, 0x05, 0x14, 0x78,
	0xdd, 0x48, 0xa4, 0xa9, 0xc8, 0x7a, 0xdb, 0x8c, 0x97, 0xd0, 0x45, 0xfb, 0x23, 0x76, 0xaa, 0x17,
	0xcc, 0xcf, 0x9d, 0xd8, 0x00, 0x03, 0x83, 0xc6, 0xb1, 0x64, 0x4a, 0x39, 0xb3, 0xa7, 0x0d, 0x6d,
	0xdb, 0x92, 0xf0, 0xcb, 0xe0, 0x7f, 0x37, 0xcb, 0xba, 0x69, 0x93, 0x49, 0x16, 0x3b, 0xab, 0x67,
	0xb8, 0x7a, 0x56, 0xd0, 0x4c, 0x0a, 0x75, 0xa8, 0x22, 0x26, 0x69, 0x59, 0x64, 0x72, 0x30, 0x38,
	0x07, 0x52, 0xb3, 0x1d, 0xaa, 0xf6, 0x0a, 0x22, 0x5e, 0x45, 0xa8, 0xb4, 0x4f, 0xe7, 0x61, 0x03,
	0x4a, 0x14, 0x7c, 0x1b, 0x2d, 0x1c, 0x09, 0x79, 0x60, 0xc2, 0x98, 0x4b, 0x2e, 0xa4, 0x91, 0xba,
	0x60, 0xf3, 0xc9, 0xd1, 0xf7, 0x1c, 0x19, 0xff, 0xb6, 0x86, 0xae, 0x96, 0x93, 0x0f, 0xdc, 0xb0,
	0x19, 0x78, 0x71, 0x6d, 0x72, 0x63, 0xfa, 0xce, 0x93, 0xcd, 0xef, 0x78, 0x76, 0x36, 0xfb, 0xb3,
	0x3d, 0xbc, 0xdc, 0x4b, 0xe9, 0x47, 0x3c, 0x73, 0x69, 0xfd, 0xf7, 0x1a, 0xba, 0xdd, 0x3b, 0x3c,
	0x55, 0xe9, 0x48, 0x62, 0xa6, 0x22, 0xc9, 0x73, 0x2d, 0x64, 0x30, 0x05, 0x96, 0xfd, 0xe2, 0x74,
	0x2c, 0x1b, 0x7d, 0x56, 0xc2, 0x57, 0x0a, 0x93, 0x9e, 0x0e, 0x1f, 0x82, 0x07, 0x85, 0x3d, 0xf8,
	0x35, 0x74, 0x49, 0x32, 0x25, 0xba, 0x32, 0x62, 0x66, 0xef, 0x0e, 0x79, 0xcc, 0x64, 0x50, 0x87,
	0x1c, 0x58, 0xf0, 0x8c, 0x3d, 0x47, 0xc7, 0xf7, 0xd1, 0x2a, 0x57, 0x64, 0x48, 0x9e, 0xf0, 0x4c,
	0x69, 0x9a, 0x24, 0x2c, 0x0e, 0x10, 0xec, 0xf9, 0x0a, 0x57, 0xe1, 0x80, 0xee, 0x8e, 0x17, 0x31,
	0x47, 0xa5, 0x49, 0xb3, 0xf8, 0x88, 0xc7, 0xba, 0x43, 0xba, 0x19, 0xd7, 0x2a, 0x98, 0xb6, 0x47,
	0xa5, 0x20, 0x3f, 0x33, 0x54, 0xfc, 0x3d, 0x84, 0xf3, 0xce, 0xb1, 0xe2, 0x11, 0x4d, 0x48, 0xc1,
	0x0a, 0x66, 0xd6, 0x6a, 0x1b, 0xe7, 0xc2, 0x4b, 0x9e, 0x73, 0xcf, 0x33, 0xf0, 0x22, 0xba, 0xd0,
	0x8c, 0x52, 0x93, 0xe0, 0xb3, 0x90, 0x2f, 0xe7, 0x9b, 0x51, 0xba, 0x13, 0xe3, 0x0f, 0xd1, 0xf5,
	0x94, 0xbe, 0xe0, 0x69, 0x37, 0x35, 0x86, 0x33, 0x79, 0x48, 0x9b, 0x09, 0x2b, 0xe1, 0xcd, 0x01,
	0xde, 0xb2, 0x93, 0x09, 0x0b, 0x91, 0x1e, 0xf0, 0x01, 0x7a, 0x23, 0xa1, 0x4a, 0x17, 0xe7, 0x91,
	0xb5, 0x5a, 0x26, 0x99, 0x0f, 0x19, 0x19, 0x0b, 0x3c, 0x0f, 0xc0, 0x9b, 0x46, 0xf5, 0x23, 0xab,
	0xf9, 0xd0, 0x2b, 0xee, 0x8e, 0x5e, 0xec, 0xc7, 0x68, 0x83, 0x67, 0x91, 0x48, 0xcd, 0x66, 0x56,
	0xc1, 0x92, 0x9c, 0xc9, 0x88, 0x65, 0x9a, 0xb6, 0x59, 0xb0, 0x00, 0x7e, 0xde, 0xf4, 0xf2, 0x15,
	0x70, 0x7b, 0x85, 0xb0, 0x01, 0x16, 0x5d, 0xdd, 0x16, 0xdf, 0x06, 0xf8, 0x92, 0x05, 0xf6, 0xf2,
	0xe3, 0x81, 0x3f, 0x45, 0x8d, 0x8a, 0x38, 0xe4, 0x42, 0x24, 0xaf, 0x97, 0xa2, 0x81, 0x21, 0x1a,
	0x2f, 0x0d, 0x85, 0x79, 0xcf, 0xc8, 0xf5, 0xdc, 0x6f, 0xa2, 0xcd, 0x2a, 0xf7, 0x07, 0xd0, 0xca,
	0xb6, 0x5e, 0x06, 0x5b, 0x5f, 0x1d, 0x0e, 0x42, 0x3f, 0x72, 0xc9, 0xe0, 0x26, 0xda, 0xac, 0x8a,
	0xc4, 0x98, 0x35, 0xae, 0xd8, 0x35, 0x86, 0xe3, 0x31, 0x72, 0x8d, 0xd1, 0x41, 0xd9, 0x2a, 0x05,
	0x65, 0x71, 0x4c, 0x50, 0xb6, 0xbe, 0x55, 0x50, 0xb6, 0xaa, 0x0d, 0xbe, 0x3a, 0x2e, 0x28, 0x5b,
	0xff, 0x63, 0x50, 0x46, 0xac, 0xb1, 0x34, 0x2e, 0x28, 0x95, 0x6b, 0x48, 0x84, 0x7a, 0x55, 0x35,
	0x08, 0xd6, 0x6a, 0x1b, 0xd3, 0x77, 0x9e, 0x9e, 0xda, 0x4d, 0xd8, 0x83, 0x0e, 0xeb, 0xe6, 0xef,
	0x8f, 0xa0, 0x76, 0xbf, 0x83, 0x02, 0x9e, 0x35, 0x45, 0x37, 0x8b, 0xa1, 0xe8, 0x2a, 0xc5, 0x45,
	0x46, 0x52, 0xa6, 0x3b, 0x22, 0x0e, 0xae, 0xc1, 0xb5, 0x73, 0xd5, 0xf1, 0xb7, 0x3d, 0x7b, 0x17,
	0xb8, 0xf8, 0x3d, 0x74, 0x4d, 0x74, 0xf5, 0x08, 0xd5, 0x65, 0x50, 0x5d, 0xf2, 0x02, 0x83, 0xba,
	0xa6, 0x62, 0xb6, 0x73, 0x92, 0x31, 0xde, 0xee, 0x34, 0x85, 0x54, 0xc1, 0x0a, 0x04, 0x6b, 0x86,
	0xb7, 0xf3, 0xc7, 0x9e, 0x86, 0xbf, 0x40, 0xb3, 0xe5, 0x92, 0xae, 0x82, 0xeb, 0x50, 0x1b, 0x9e,
	0x9d, 0x5a, 0x44, 0xca, 0xe8, 0xe1, 0x4c, 0xa9, 0x55, 0x50, 0x8d, 0x3f, 0x4d, 0xa2, 0x15, 0x8f,
	0x1c, 0x53, 0x79, 0xd0, 0x3c, 0x22, 0xcd, 0x23, 0xd2, 0xd5, 0x3c, 0x21, 0x52, 0x1d, 0xe6, 0xf8,
	0x63, 0xb4, 0xa6, 0x85, 0xa6, 0x89, 0x8d, 0x6a, 0xe9, 0xbe, 0xd6, 0x3c, 0xe1, 0x5f, 0xc0, 0x8a,
	0xd0, 0x47, 0x9c, 0x0b, 0x6f, 0x80, 0x9c, 0x29, 0x87, 0xc5, 0x96, 0x3f, 0xeb, 0x09, 0xe1, 0x6d,
	0x74, 0xc3, 0x00, 0x9a, 0x75, 0xaa, 0x51, 0x26, 0xec, 0xfd, 0x6b, 0x84, 0xf6, 0x59, 0x25, 0xc4,
	0x27, 0x68, 0x3d, 0x13, 0x19, 0x19, 0x0f, 0x33, 0x69, 0x8d, 0xc9, 0x44, 0x16, 0x8e, 0x46, 0x0a,
	0xd1, 0x2b, 0x1e, 0x85, 0xc6, 0x9f, 0x77, 0x95, 0x66, 0xf1, 0x08, 0xb8, 0x73, 0x00, 0xd7, 0xb0,
	0x56, 0x6d, 0x3b, 0xd9, 0x93, 0x30, 0x99, 0xd9, 0x8e, 0x68, 0x24, 0xe6, 0xf9, 0x32, 0xe6, 0x43,
	0x27, 0x5b, 0x85, 0xd9, 0xf8, 0x57, 0x0d, 0x5d, 0x1b, 0xb1, 0x3b, 0x4a, 0x9a, 0x94, 0x56, 0x72,
	0xec, 0x9e, 0x5c, 0x55, 0xb2, 0xd2, 0xd6, 0x1d, 0xb4, 0xae, 0xe4, 0x49, 0xae, 0xdb, 0x0d, 0x59,
	0x55, 0x72, 0xac, 0xdb, 0x16, 0xea, 0x04, 0x8f, 0x27, 0x3d, 0xd4, 0x58, 0x6f, 0xbf, 0xa9, 0xf7,
	0x5a, 0x7f, 0xe7, 0x2d, 0x64, 0x9d, 0xeb, 0x61, 0xa1, 0x7d, 0xfd, 0x00, 0x5d, 0xe7, 0xaa, 0xb4,
	0x0a, 0x8d, 0x22, 0xd1, 0xcd, 0x34, 0x61, 0x99, 0xb9, 0x71, 0x62, 0xd7, 0x91, 0x5f, 0xe3, 0xaa,
	0x58, 0x61, 0xdb, 0x4a, 0x3c, 0xb4, 0x02, 0xe6, 0xa5, 0x40, 0xf3, 0x3c, 0xe1, 0x11, 0xac, 0x59,
	0x18, 0x0e, 0xde, 0x4e, 0x85, 0x97, 0x4b, 0x3c, 0x6f, 0xab, 0x69, 0x54, 0x22, 0x91, 0x24, 0xb6,
	0x71, 0x25, 0xfa, 0x38, 0x67, 0xe0, 0x50, 0x3d, 0x9c, 0xeb, 0x91, 0xf7, 0x8f, 0x73, 0x06, 0xcd,
	0x3f, 0x4d, 0xf3, 0x84, 0xd9, 0x07, 0xd6, 0x21, 0x4d, 0x20, 0x7f, 0x66, 0xc3, 0x39, 0x4b, 0xde,
	0x71, 0x54, 0x7c, 0x07, 0x2d, 0x3a, 0x41, 0xcd, 0x53, 0x46, 0x24, 0x4b, 0x29, 0xcf, 0xcc, 0x43,
	0xe4, 0xbc, 0x7b, 0xaf, 0x00, 0x73, 0x9f, 0xa7, 0x2c, 0xf4, 0x2c, 0x73, 0x12, 0xa1, 0xfb, 0x70,
	0x8a, 0x65, 0x8b, 0x78, 0xca, 0x94, 0xa6, 0x69, 0xee, 0x1a, 0xe4, 0x1b, 0x46, 0xee, 0x29, 0x88,
	0xdd, 0xef, 0x19, 0xe8, 0x85, 0xf0, 0x9b, 0xe8, 0x6a, 0xc6, 0x5e, 0x54, 0x00, 0x05, 0x17, 0x41,
	0xfd, 0x8a, 0xe1, 0x0e, 0xaa, 0x0f, 0xc6, 0xad, 0x70, 0x70, 0xca, 0x5a, 0x5c, 0xe2, 0x15, 0x5e,
	0xde, 0x45, 0xcb, 0x65, 0x95, 0x01, 0x57, 0xeb, 0xa0, 0x18, 0x94, 0x24, 0xfa, 0xfd, 0xbd, 0x8b,
	0x96, 0xc1, 0xdf, 0x41, 0x08, 0xeb, 0x29, 0xb2, 0xda, 0x46, 0x62, 0xbb, 0x1f, 0xc1, 0x3a, 0xf9,
	0x65, 0xed, 0xa4, 0xfb, 0x66, 0x1a, 0xca, 0xce, 0xcf, 0x4e, 0xe7, 0x92, 0xad, 0xbe, 0x3d, 0xc7,
	0xde, 0x66, 0xbf, 0xaf, 0x8d, 0x39, 0xbe, 0x33, 0x60, 0xdc, 0x4f, 0xce, 0xca, 0x38, 0x25, 0x47,
	0x5e, 0x0d, 0xb7, 0xd1, 0x02, 0x64, 0x47, 0x29, 0xec, 0xae, 0x8f, 0x9e, 0x37, 0xf4, 0x52, 0xb0,
	0xcd, 0x93, 0xc1, 0x5e, 0x21, 0x29, 0xcb, 0x34, 0x69, 0xd1, 0xc8, 0xbc, 0x6b, 0xe6, 0x40, 0x76,
	0xa1, 0xc7, 0xf8, 0x08, 0xe8, 0x98, 0xa2, 0xcd, 0x94, 0xbe, 0xa8, 0xee, 0x38, 0x75, 0x47, 0x32,
	0xd5, 0x11, 0x09, 0x54, 0x28, 0x12, 0xb3, 0x16, 0xed, 0x26, 0x1a, 0xfa, 0xe6, 0xa9, 0xf0, 0x76,
	0x4a, 0x5f, 0x54, 0xf4, 0x9d, 0xfb, 0x5e, 0x65, 0x5b, 0xb2, 0x07, 0x56, 0x01, 0xef, 0xa1, 0x9b,
	0xdd, 0xbc, 0x04, 0x36, 0x6a, 0x3d, 0xd7, 0x2f, 0xaf, 0x77, 0xf3, 0x02, 0x65, 0xb7, 0x72, 0x11,
	0xbc, 0x8f, 0x6e, 0xc5, 0xe2, 0x28, 0xfb, 0x36, 0x98, 0xb6, 0x55, 0x7e, 0xd9, 0x88, 0x9f, 0x80,
	0xda, 0xf8, 0xba, 0x86, 0x96, 0x07, 0x36, 0xc6, 0x9d, 0x45, 0x28, 0xb9, 0xd7, 0x51, 0xbd, 0x97,
	0xe7, 0x76, 0xc6, 0xd1, 0x23, 0xe0, 0x1b, 0x08, 0xd9, 0x82, 0x2c, 0xa9, 0x66, 0xee, 0x8e, 0xae,
	0x03, 0x25, 0xa4, 0x9a, 0xe1, 0x35, 0x34, 0xe3, 0xd3, 0x1e, 0x04, 0xec, 0xcd, 0x8b, 0x6c, 0x1e,
	0x82, 0xc4, 0x2d, 0xb4, 0x50, 0xae, 0xa2, 0x20, 0x65, 0xab, 0xdc, 0x6c, 0x51, 0x34, 0x8d, 0x60,
	0xe3, 0x9b, 0x89, 0xa1, 0xd6, 0xa0, 0xc3, 0x95, 0x16, 0xf2, 0xd8, 0xda, 0xf9, 0x65, 0x0d, 0xad,
	0x16, 0x55, 0xd4, 0xbe, 0x83, 0xfc, 0xad, 0xe0, 0xfc, 0x09, 0x6a, 0xd0, 0xc8, 0xfc, 0xf4, 0xb4,
	0xd3, 0xb8, 0x14, 0x2d, 0x7f, 0xc4, 0xb6, 0xc1, 0x00, 0x7f, 0xf5, 0xd8, 0xdb, 0x0b, 0x7f, 0x55,
	0x43, 0x6b, 0xde, 0xc2, 0x5c, 0xb2, 0x43, 0x2e, 0xba, 0x6a, 0xc8, 0xc6, 0x89, 0xb3, 0xb7, 0xf1,
	0xba, 0xb5, 0x71, 0xcf, 0x99, 0xd0, 0x6f, 0x65, 0xe3, 0x47, 0x6e, 0x5a, 0x33, 0xa4, 0xab, 0xe4,
	0x09, 0xb9, 0xb0, 0x84, 0x2e, 0x2a, 0x59, 0x4e, 0x84, 0x0b, 0x4a, 0xc2, 0xd6, 0xfd, 0x73, 0x62,
	0xa8, 0x6f, 0xf0, 0x5b, 0xa7, 0xa4, 0xb9, 0x79, 0xae, 0x99, 0xf2, 0x3f, 0x6e, 0xcf, 0x9e, 0x9f,
	0x51, 0x3c, 0xec, 0xcd, 0x53, 0xb9, 0x5b, 0x7f, 0xa8, 0xa1, 0x15, 0x25, 0x4f, 0xda, 0xa8, 0x33,
	0x34, 0x2c, 0x50, 0x72, 0xc4, 0x16, 0xfd, 0xe6, 0x5c, 0x6f, 0xa2, 0x56, 0xee, 0x4c, 0xa0, 0x25,
	0xf9, 0xaa, 0x86, 0x6e, 0x0c, 0x37, 0x24, 0xa5, 0xa6, 0x05, 0x36, 0xee, 0x34, 0x67, 0x3d, 0x23,
	0x9a, 0xa3, 0x70, 0xb9, 0x39, 0xd0, 0xf4, 0xdc, 0x07, 0xe6, 0x8e, 0xb1, 0xf2, 0xeb, 0xd2, 0x59,
	0xe8, 0x59, 0xeb, 0x9c, 0x77, 0xc9, 0x01, 0x59, 0x74, 0x06, 0x35, 0xb1, 0x7c, 0x6d, 0xf8, 0xc3,
	0x50, 0x5c, 0x87, 0x36, 0xc4, 0x9f, 0x58, 0x11, 0xfc, 0x47, 0x9b, 0x04, 0x23, 0x2d, 0x9c, 0x3c,
	0x9b, 0xc2, 0xd8, 0x3b, 0x1d, 0x26, 0x0b, 0xaa, 0x6d, 0x6b, 0xfc, 0xa7, 0xd4, 0x8d, 0xd3, 0x56,
	0x8b, 0x67, 0x5c, 0x1f, 0x93, 0xd4, 0x0f, 0xa5, 0x5f, 0x46, 0xb3, 0x05, 0xb1, 0x34, 0x39, 0x9f,
	0xf1, 0xc4, 0xc7, 0x34, 0x65, 0xf8, 0x26, 0x9a, 0x2b, 0x84, 0x0e, 0x69, 0xd2, 0x65, 0x6e, 0x42,
	0x5d, 0xa8, 0x7e, 0x66, 0x88, 0xf8, 0x6d, 0xb4, 0x54, 0x88, 0xb1, 0x17, 0x9a, 0x65, 0xe6, 0xf5,
	0x66, 0xe5, 0x27, 0xd7, 0x26, 0x37, 0x66, 0xc3, 0x45, 0xcf, 0x7e, 0xe8, 0xb8, 0x56, 0xef, 0x0e,
	0x2a, 0x18, 0xa4, 0xc9, 0x35, 0xc9, 0x85, 0xe2, 0xc5, 0x33, 0xc6, 0x74, 0x69, 0x8e, 0x79, 0x8f,
	0xeb, 0x3d, 0xc7, 0xc2, 0xaf, 0xa2, 0x4b, 0x85, 0x8e, 0x86, 0xa2, 0xc6, 0x63, 0xe8, 0x43, 0xeb,
	0xe1, 0xbc, 0x67, 0xec, 0x1b, 0xfa, 0x4e, 0xdc, 0xf8, 0x47, 0x6d, 0xe4, 0x37, 0x04, 0xf3, 0xb6,
	0x2c, 0x26, 0xcc, 0xf6, 0x47, 0x31, 0x61, 0x36, 0x3f, 0x77, 0x62, 0xfc, 0x12, 0x9a, 0xf6, 0x0f,
	0x61, 0xc3, 0xb4, 0x03, 0x66, 0xe4, 0x49, 0x3b, 0xb1, 0xed, 0x3d, 0x9c, 0x80, 0x1f, 0x43, 0xdb,
	0x4e, 0x7b, 0xde, 0xd3, 0xfd, 0x28, 0xfa, 0xff, 0xd0, 0x1c, 0x57, 0xc5, 0xbb, 0x9a, 0x74, 0x73,
	0x37, 0x65, 0x9e, 0xe1, 0xca, 0x3f, 0xac, 0x9f, 0x41, 0xb1, 0x34, 0xcf, 0xef, 0x94, 0x69, 0xc9,
	0x23, 0xd7, 0x5c, 0xd7, 0x79, 0x3b, 0xdf, 0x05, 0x42, 0xe3, 0xcf, 0x35, 0xb4, 0x5a, 0xe1, 0x8e,
	0x88, 0x0e, 0x44, 0x57, 0x5b, 0x67, 0x0c, 0x82, 0xf2, 0x24, 0xf7, 0xba, 0xa8, 0x73, 0xf5, 0xc8,
	0x12, 0xf0, 0xeb, 0xe8, 0x8a, 0x17, 0xef, 0x6b, 0x4f, 0xed, 0xae, 0x62, 0xc7, 0x7b, 0x52, 0x6a,
	0x4c, 0xef, 0xa0, 0xc5, 0x42, 0xa3, 0xd5, 0x2a, 0xa9, 0xd8, 0x6f, 0x10, 0x97, 0xbd, 0x4a, 0xab,
	0x55, 0xe8, 0x34, 0xfe, 0x3d, 0x81, 0xe6, 0x35, 0x23, 0x9d, 0x23, 0x22, 0x84, 0x24, 0x4a, 0x53,
	0xad, 0x4c, 0xa1, 0x2f, 0xfd, 0xf6, 0xd9, 0x86, 0x3a, 0x47, 0x4f, 0x84, 0x7c, 0xaa, 0x6d, 0x2b,
	0x30, 0xad, 0x25, 0xcd, 0xec, 0x36, 0x2b, 0x67, 0x52, 0x99, 0x84, 0xef, 0xa3, 0xd5, 0x4c, 0xc4,
	0xac, 0x34, 0xab, 0x27, 0x31, 0x57, 0x90, 0x03, 0x76, 0x9c, 0xef, 0x8c, 0x5a, 0x31, 0x52, 0xbd,
	0xd9, 0xfd, 0x03, 0x2b, 0xf3, 0x18, 0x44, 0xf0, 0x16, 0x5a, 0x94, 0xec, 0x73, 0x16, 0x99, 0x87,
	0x64, 0xa2, 0x48, 0xae, 0xbc, 0xae, 0xcd, 0x39, 0xec, 0x99, 0x8f, 0xd4, 0x9e, 0xea, 0xa9, 0xd0,
	0x28, 0x62, 0xf9, 0x90, 0x8a, 0xdd, 0x21, 0xec, 0x99, 0x25, 0x95, 0xbb, 0x68, 0xa5, 0x50, 0x91,
	0x4c, 0xe4, 0xba, 0x5f, 0xd1, 0x3e, 0x7c, 0x96, 0xbc, 0x48, 0x68, 0x24, 0xfa, 0xb5, 0x0b, 0x1b,
	0x2b, 0xb4, 0xed, 0xbb, 0x67, 0xc9, 0x8b, 0x0c, 0x68, 0x37, 0xfe, 0x3a, 0x81, 0x6e, 0x0c, 0xa7,
	0x89, 0x8b, 0x3e, 0x64, 0xc9, 0xc9, 0x9b, 0xb1, 0x81, 0x16, 0x9c, 0xc4, 0x60, 0x92, 0xcc, 0x81,
	0x54, 0x2f, 0x41, 0xde, 0x47, 0x2b, 0x46, 0x92, 0x08, 0x49, 0xda, 0x92, 0xb1, 0x8c, 0x48, 0x16,
	0x89, 0x43, 0x26, 0x8f, 0x41, 0xd3, 0xed, 0xc8, 0xd5, 0xce, 0xd1, 0x93, 0x27, 0xf2, 0x63, 0xc3,
	0x0f, 0x1d, 0xdb, 0x20, 0xc0, 0xa7, 0x10, 0xaf, 0x0d, 0xc7, 0xd2, 0xd8, 0xc3, 0x95, 0xe6, 0x51,
	0x70, 0x0e, 0xca, 0xe7, 0xde, 0x77, 0xbe, 0x39, 0x07, 0x12, 0x31, 0xc4, 0x60, 0xca, 0x23, 0x9e,
	0x1d, 0x3c, 0xf5, 0x6b, 0x35, 0xfe, 0x36, 0xe3, 0x5a, 0xc7, 0xea, 0x6f, 0x8d, 0xf8, 0x0b, 0x34,
	0x5d, 0x2a, 0x5e, 0xc1, 0x1d, 0xb8, 0xd4, 0x9f, 0x9f, 0x5a, 0x7d, 0x1c, 0xfc, 0xe8, 0x15, 0xc2,
	0xb8, 0xd1, 0x16, 0x43, 0xfc, 0xff, 0x08, 0x4b, 0x46, 0x95, 0xc8, 0x48, 0x26, 0x8a, 0x59, 0x7e,
	0xf0, 0x86, 0xff, 0xd2, 0x61, 0x38, 0x8f, 0x85, 0x9f, 0xd4, 0xe3, 0x1d, 0xb4, 0x3e, 0x30, 0xbf,
	0x85, 0x63, 0xd2, 0xab, 0x4f, 0x32, 0x4e, 0x83, 0x37, 0xed, 0x78, 0xa3, 0x7f, 0x7c, 0x6b, 0xe4,
	0x8a, 0x42, 0x12, 0xc6, 0xa9, 0x39, 0x6d, 0x63, 0xa6, 0xcc, 0x06, 0xe7, 0x2d, 0xc0, 0x59, 0x91,
	0x23, 0xc6, 0xca, 0xd5, 0x20, 0x5b, 0x03, 0x20, 0x6f, 0x57, 0x81, 0x6c, 0xf5, 0x81, 0x9c, 0xe8,
	0x54, 0x4a, 0xd3, 0xe0, 0xfb, 0x27, 0x3a, 0xb5, 0x4b, 0x4f, 0x72, 0xca, 0xe0, 0xbc, 0x33, 0xde,
	0xa9, 0x6a, 0x90, 0xad, 0x01, 0x90, 0x77, 0xc7, 0x3b, 0x65, 0x40, 0x7e, 0x57, 0x43, 0x97, 0x86,
	0xda, 0xb0, 0xe0, 0xbd, 0x53, 0x4e, 0xad, 0xc1, 0xee, 0x2f, 0x5c, 0x18, 0xec, 0xb9, 0xf0, 0x2d,
	0x34, 0x6f, 0x2b, 0xa2, 0xd6, 0x92, 0x37, 0xbb, 0x9a, 0xa9, 0xe0, 0x7d, 0x7b, 0xd2, 0xe1, 0x5b,
	0x6a, 0x41, 0x35, 0x55, 0x1e, 0x04, 0x8b, 0x0a, 0x5f, 0x68, 0x04, 0x77, 0x6d, 0x95, 0x37, 0x6c,
	0x5f, 0xe1, 0x0b, 0x45, 0x73, 0x7d, 0xda, 0x19, 0xb7, 0x90, 0x47, 0xd4, 0x5c, 0x68, 0x2d, 0xd7,
	0x1b, 0xfc, 0x00, 0xb4, 0x30, 0x0c, 0xbd, 0x81, 0x17, 0xb2, 0x96, 0x6d, 0x0c, 0x7e, 0x89, 0x66,
	0xca, 0x1d, 0x4b, 0xf0, 0x43, 0xb8, 0x0c, 0x4e, 0xaf, 0x8d, 0x1a, 0x6a, 0x87, 0xc2, 0x69, 0x4f,
	0xda, 0xa5, 0xb9, 0xf1, 0x94, 0xab, 0x9e, 0x7b, 0x04, 0xbe, 0x47, 0xe4, 0x09, 0xd3, 0x2c, 0xf8,
	0x00, 0x4a, 0xea, 0x22, 0x57, 0x85, 0x7f, 0x3b, 0x05, 0x13, 0xbf, 0x05, 0x7a, 0xa6, 0x9b, 0x22,
	0x4d, 0xaa, 0xfa, 0x22, 0xf4, 0x21, 0xe8, 0x5d, 0xe1, 0xca, 0xf4, 0x55, 0xf7, 0x0c, 0xb3, 0x17,
	0xa0, 0x15, 0x54, 0xd7, 0xcc, 0x57, 0xfd, 0x6d, 0xfb, 0x6d, 0x5f, 0x33, 0x5b, 0xf4, 0xf1, 0x6b,
	0x08, 0x73, 0xb0, 0xd9, 0xf2, 0x4d, 0xe8, 0x78, 0x1c, 0xdc, 0x03, 0xb8, 0x79, 0xae, 0xf6, 0x9d,
	0xdc, 0x67, 0x86, 0x8c, 0x8f, 0xd0, 0x79, 0x3b, 0x92, 0xbf, 0x0f, 0x01, 0xa3, 0xa7, 0xf9, 0xb9,
	0xb6, 0xb2, 0x7b, 0x0a, 0xed, 0x7a, 0xf8, 0x18, 0x5d, 0xf4, 0x4d, 0xc7, 0x03, 0x58, 0x9a, 0x9c,
	0xc5, 0xd2, 0xa5, 0x4e, 0x27, 0xf4, 0xeb, 0xe1, 0x2e, 0xba, 0x60, 0x2f, 0xf8, 0xe0, 0x21, 0x1c,
	0x9e, 0x9f, 0x9f, 0xc1, 0xca, 0xa5, 0xe2, 0x19, 0x9e, 0x87, 0x02, 0xd8, 0xbc, 0x00, 0xff, 0xcd,
	0xe5, 0x8d, 0xff, 0x06, 0x00, 0x00, 0xff, 0xff, 0x64, 0x15, 0x23, 0x53, 0x0b, 0x23, 0x00, 0x00,
}
