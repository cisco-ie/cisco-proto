/*
Copyright 2019 Cisco Systems

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: mpls_te_s2l_forwarding_bag.proto

package cisco_ios_xr_mpls_te_oper_mpls_te_p2mp_forwarding_output_label_rewrites_forwarding_output_label_rewrite

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type MplsTeS2LForwardingBag_KEYS struct {
	TunnelId             uint32   `protobuf:"varint,1,opt,name=tunnel_id,json=tunnelId,proto3" json:"tunnel_id,omitempty"`
	LspId                uint32   `protobuf:"varint,2,opt,name=lsp_id,json=lspId,proto3" json:"lsp_id,omitempty"`
	ExtendedTunnelId     string   `protobuf:"bytes,3,opt,name=extended_tunnel_id,json=extendedTunnelId,proto3" json:"extended_tunnel_id,omitempty"`
	SourceAddress        string   `protobuf:"bytes,4,opt,name=source_address,json=sourceAddress,proto3" json:"source_address,omitempty"`
	P2MpId               uint32   `protobuf:"varint,5,opt,name=p2mp_id,json=p2mpId,proto3" json:"p2mp_id,omitempty"`
	DestinationAddress   string   `protobuf:"bytes,6,opt,name=destination_address,json=destinationAddress,proto3" json:"destination_address,omitempty"`
	NextHopAddress       string   `protobuf:"bytes,7,opt,name=next_hop_address,json=nextHopAddress,proto3" json:"next_hop_address,omitempty"`
	PreviousHopAddress   string   `protobuf:"bytes,8,opt,name=previous_hop_address,json=previousHopAddress,proto3" json:"previous_hop_address,omitempty"`
	Ctype                string   `protobuf:"bytes,9,opt,name=ctype,proto3" json:"ctype,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MplsTeS2LForwardingBag_KEYS) Reset()         { *m = MplsTeS2LForwardingBag_KEYS{} }
func (m *MplsTeS2LForwardingBag_KEYS) String() string { return proto.CompactTextString(m) }
func (*MplsTeS2LForwardingBag_KEYS) ProtoMessage()    {}
func (*MplsTeS2LForwardingBag_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_dfc9bc55733de5f4, []int{0}
}

func (m *MplsTeS2LForwardingBag_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsTeS2LForwardingBag_KEYS.Unmarshal(m, b)
}
func (m *MplsTeS2LForwardingBag_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsTeS2LForwardingBag_KEYS.Marshal(b, m, deterministic)
}
func (m *MplsTeS2LForwardingBag_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsTeS2LForwardingBag_KEYS.Merge(m, src)
}
func (m *MplsTeS2LForwardingBag_KEYS) XXX_Size() int {
	return xxx_messageInfo_MplsTeS2LForwardingBag_KEYS.Size(m)
}
func (m *MplsTeS2LForwardingBag_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsTeS2LForwardingBag_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_MplsTeS2LForwardingBag_KEYS proto.InternalMessageInfo

func (m *MplsTeS2LForwardingBag_KEYS) GetTunnelId() uint32 {
	if m != nil {
		return m.TunnelId
	}
	return 0
}

func (m *MplsTeS2LForwardingBag_KEYS) GetLspId() uint32 {
	if m != nil {
		return m.LspId
	}
	return 0
}

func (m *MplsTeS2LForwardingBag_KEYS) GetExtendedTunnelId() string {
	if m != nil {
		return m.ExtendedTunnelId
	}
	return ""
}

func (m *MplsTeS2LForwardingBag_KEYS) GetSourceAddress() string {
	if m != nil {
		return m.SourceAddress
	}
	return ""
}

func (m *MplsTeS2LForwardingBag_KEYS) GetP2MpId() uint32 {
	if m != nil {
		return m.P2MpId
	}
	return 0
}

func (m *MplsTeS2LForwardingBag_KEYS) GetDestinationAddress() string {
	if m != nil {
		return m.DestinationAddress
	}
	return ""
}

func (m *MplsTeS2LForwardingBag_KEYS) GetNextHopAddress() string {
	if m != nil {
		return m.NextHopAddress
	}
	return ""
}

func (m *MplsTeS2LForwardingBag_KEYS) GetPreviousHopAddress() string {
	if m != nil {
		return m.PreviousHopAddress
	}
	return ""
}

func (m *MplsTeS2LForwardingBag_KEYS) GetCtype() string {
	if m != nil {
		return m.Ctype
	}
	return ""
}

type TeLspFecCtypeDataT struct {
	FecCtype             string   `protobuf:"bytes,1,opt,name=fec_ctype,json=fecCtype,proto3" json:"fec_ctype,omitempty"`
	P2PLspDestination    string   `protobuf:"bytes,2,opt,name=p2p_lsp_destination,json=p2pLspDestination,proto3" json:"p2p_lsp_destination,omitempty"`
	FecDestinationP2MpId uint32   `protobuf:"varint,3,opt,name=fec_destination_p2mp_id,json=fecDestinationP2mpId,proto3" json:"fec_destination_p2mp_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TeLspFecCtypeDataT) Reset()         { *m = TeLspFecCtypeDataT{} }
func (m *TeLspFecCtypeDataT) String() string { return proto.CompactTextString(m) }
func (*TeLspFecCtypeDataT) ProtoMessage()    {}
func (*TeLspFecCtypeDataT) Descriptor() ([]byte, []int) {
	return fileDescriptor_dfc9bc55733de5f4, []int{1}
}

func (m *TeLspFecCtypeDataT) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TeLspFecCtypeDataT.Unmarshal(m, b)
}
func (m *TeLspFecCtypeDataT) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TeLspFecCtypeDataT.Marshal(b, m, deterministic)
}
func (m *TeLspFecCtypeDataT) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TeLspFecCtypeDataT.Merge(m, src)
}
func (m *TeLspFecCtypeDataT) XXX_Size() int {
	return xxx_messageInfo_TeLspFecCtypeDataT.Size(m)
}
func (m *TeLspFecCtypeDataT) XXX_DiscardUnknown() {
	xxx_messageInfo_TeLspFecCtypeDataT.DiscardUnknown(m)
}

var xxx_messageInfo_TeLspFecCtypeDataT proto.InternalMessageInfo

func (m *TeLspFecCtypeDataT) GetFecCtype() string {
	if m != nil {
		return m.FecCtype
	}
	return ""
}

func (m *TeLspFecCtypeDataT) GetP2PLspDestination() string {
	if m != nil {
		return m.P2PLspDestination
	}
	return ""
}

func (m *TeLspFecCtypeDataT) GetFecDestinationP2MpId() uint32 {
	if m != nil {
		return m.FecDestinationP2MpId
	}
	return 0
}

type TeLspFecT struct {
	FecLspId             uint32              `protobuf:"varint,1,opt,name=fec_lsp_id,json=fecLspId,proto3" json:"fec_lsp_id,omitempty"`
	FecTunnelId          uint32              `protobuf:"varint,2,opt,name=fec_tunnel_id,json=fecTunnelId,proto3" json:"fec_tunnel_id,omitempty"`
	FecExtendedTunnelId  string              `protobuf:"bytes,3,opt,name=fec_extended_tunnel_id,json=fecExtendedTunnelId,proto3" json:"fec_extended_tunnel_id,omitempty"`
	FecSource            string              `protobuf:"bytes,4,opt,name=fec_source,json=fecSource,proto3" json:"fec_source,omitempty"`
	FecDestinationInfo   *TeLspFecCtypeDataT `protobuf:"bytes,5,opt,name=fec_destination_info,json=fecDestinationInfo,proto3" json:"fec_destination_info,omitempty"`
	FecVrf               string              `protobuf:"bytes,6,opt,name=fec_vrf,json=fecVrf,proto3" json:"fec_vrf,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *TeLspFecT) Reset()         { *m = TeLspFecT{} }
func (m *TeLspFecT) String() string { return proto.CompactTextString(m) }
func (*TeLspFecT) ProtoMessage()    {}
func (*TeLspFecT) Descriptor() ([]byte, []int) {
	return fileDescriptor_dfc9bc55733de5f4, []int{2}
}

func (m *TeLspFecT) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TeLspFecT.Unmarshal(m, b)
}
func (m *TeLspFecT) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TeLspFecT.Marshal(b, m, deterministic)
}
func (m *TeLspFecT) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TeLspFecT.Merge(m, src)
}
func (m *TeLspFecT) XXX_Size() int {
	return xxx_messageInfo_TeLspFecT.Size(m)
}
func (m *TeLspFecT) XXX_DiscardUnknown() {
	xxx_messageInfo_TeLspFecT.DiscardUnknown(m)
}

var xxx_messageInfo_TeLspFecT proto.InternalMessageInfo

func (m *TeLspFecT) GetFecLspId() uint32 {
	if m != nil {
		return m.FecLspId
	}
	return 0
}

func (m *TeLspFecT) GetFecTunnelId() uint32 {
	if m != nil {
		return m.FecTunnelId
	}
	return 0
}

func (m *TeLspFecT) GetFecExtendedTunnelId() string {
	if m != nil {
		return m.FecExtendedTunnelId
	}
	return ""
}

func (m *TeLspFecT) GetFecSource() string {
	if m != nil {
		return m.FecSource
	}
	return ""
}

func (m *TeLspFecT) GetFecDestinationInfo() *TeLspFecCtypeDataT {
	if m != nil {
		return m.FecDestinationInfo
	}
	return nil
}

func (m *TeLspFecT) GetFecVrf() string {
	if m != nil {
		return m.FecVrf
	}
	return ""
}

type TeS2LOutputRwFecSubfamilyBag struct {
	LspFec               *TeLspFecT `protobuf:"bytes,1,opt,name=lsp_fec,json=lspFec,proto3" json:"lsp_fec,omitempty"`
	NextHopAddress       string     `protobuf:"bytes,2,opt,name=next_hop_address,json=nextHopAddress,proto3" json:"next_hop_address,omitempty"`
	PreviousHopAddress   string     `protobuf:"bytes,3,opt,name=previous_hop_address,json=previousHopAddress,proto3" json:"previous_hop_address,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *TeS2LOutputRwFecSubfamilyBag) Reset()         { *m = TeS2LOutputRwFecSubfamilyBag{} }
func (m *TeS2LOutputRwFecSubfamilyBag) String() string { return proto.CompactTextString(m) }
func (*TeS2LOutputRwFecSubfamilyBag) ProtoMessage()    {}
func (*TeS2LOutputRwFecSubfamilyBag) Descriptor() ([]byte, []int) {
	return fileDescriptor_dfc9bc55733de5f4, []int{3}
}

func (m *TeS2LOutputRwFecSubfamilyBag) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TeS2LOutputRwFecSubfamilyBag.Unmarshal(m, b)
}
func (m *TeS2LOutputRwFecSubfamilyBag) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TeS2LOutputRwFecSubfamilyBag.Marshal(b, m, deterministic)
}
func (m *TeS2LOutputRwFecSubfamilyBag) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TeS2LOutputRwFecSubfamilyBag.Merge(m, src)
}
func (m *TeS2LOutputRwFecSubfamilyBag) XXX_Size() int {
	return xxx_messageInfo_TeS2LOutputRwFecSubfamilyBag.Size(m)
}
func (m *TeS2LOutputRwFecSubfamilyBag) XXX_DiscardUnknown() {
	xxx_messageInfo_TeS2LOutputRwFecSubfamilyBag.DiscardUnknown(m)
}

var xxx_messageInfo_TeS2LOutputRwFecSubfamilyBag proto.InternalMessageInfo

func (m *TeS2LOutputRwFecSubfamilyBag) GetLspFec() *TeLspFecT {
	if m != nil {
		return m.LspFec
	}
	return nil
}

func (m *TeS2LOutputRwFecSubfamilyBag) GetNextHopAddress() string {
	if m != nil {
		return m.NextHopAddress
	}
	return ""
}

func (m *TeS2LOutputRwFecSubfamilyBag) GetPreviousHopAddress() string {
	if m != nil {
		return m.PreviousHopAddress
	}
	return ""
}

type TeS2LOutputRwOutputInfoBag struct {
	PhysicaInterfaceName string   `protobuf:"bytes,1,opt,name=physica_interface_name,json=physicaInterfaceName,proto3" json:"physica_interface_name,omitempty"`
	TunnelInterfaceName  string   `protobuf:"bytes,2,opt,name=tunnel_interface_name,json=tunnelInterfaceName,proto3" json:"tunnel_interface_name,omitempty"`
	ParentInterfaceName  string   `protobuf:"bytes,3,opt,name=parent_interface_name,json=parentInterfaceName,proto3" json:"parent_interface_name,omitempty"`
	NextHopAddress       string   `protobuf:"bytes,4,opt,name=next_hop_address,json=nextHopAddress,proto3" json:"next_hop_address,omitempty"`
	OutLabel             uint32   `protobuf:"varint,5,opt,name=out_label,json=outLabel,proto3" json:"out_label,omitempty"`
	SrLabelStack         []uint32 `protobuf:"varint,6,rep,packed,name=sr_label_stack,json=srLabelStack,proto3" json:"sr_label_stack,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TeS2LOutputRwOutputInfoBag) Reset()         { *m = TeS2LOutputRwOutputInfoBag{} }
func (m *TeS2LOutputRwOutputInfoBag) String() string { return proto.CompactTextString(m) }
func (*TeS2LOutputRwOutputInfoBag) ProtoMessage()    {}
func (*TeS2LOutputRwOutputInfoBag) Descriptor() ([]byte, []int) {
	return fileDescriptor_dfc9bc55733de5f4, []int{4}
}

func (m *TeS2LOutputRwOutputInfoBag) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TeS2LOutputRwOutputInfoBag.Unmarshal(m, b)
}
func (m *TeS2LOutputRwOutputInfoBag) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TeS2LOutputRwOutputInfoBag.Marshal(b, m, deterministic)
}
func (m *TeS2LOutputRwOutputInfoBag) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TeS2LOutputRwOutputInfoBag.Merge(m, src)
}
func (m *TeS2LOutputRwOutputInfoBag) XXX_Size() int {
	return xxx_messageInfo_TeS2LOutputRwOutputInfoBag.Size(m)
}
func (m *TeS2LOutputRwOutputInfoBag) XXX_DiscardUnknown() {
	xxx_messageInfo_TeS2LOutputRwOutputInfoBag.DiscardUnknown(m)
}

var xxx_messageInfo_TeS2LOutputRwOutputInfoBag proto.InternalMessageInfo

func (m *TeS2LOutputRwOutputInfoBag) GetPhysicaInterfaceName() string {
	if m != nil {
		return m.PhysicaInterfaceName
	}
	return ""
}

func (m *TeS2LOutputRwOutputInfoBag) GetTunnelInterfaceName() string {
	if m != nil {
		return m.TunnelInterfaceName
	}
	return ""
}

func (m *TeS2LOutputRwOutputInfoBag) GetParentInterfaceName() string {
	if m != nil {
		return m.ParentInterfaceName
	}
	return ""
}

func (m *TeS2LOutputRwOutputInfoBag) GetNextHopAddress() string {
	if m != nil {
		return m.NextHopAddress
	}
	return ""
}

func (m *TeS2LOutputRwOutputInfoBag) GetOutLabel() uint32 {
	if m != nil {
		return m.OutLabel
	}
	return 0
}

func (m *TeS2LOutputRwOutputInfoBag) GetSrLabelStack() []uint32 {
	if m != nil {
		return m.SrLabelStack
	}
	return nil
}

type TeS2LOutputRwFieldsBag struct {
	Timestamp            uint32                      `protobuf:"varint,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	OutRewriteRole       string                      `protobuf:"bytes,2,opt,name=out_rewrite_role,json=outRewriteRole,proto3" json:"out_rewrite_role,omitempty"`
	Label                uint32                      `protobuf:"varint,3,opt,name=label,proto3" json:"label,omitempty"`
	PrimaryS2L           *TeS2LOutputRwOutputInfoBag `protobuf:"bytes,4,opt,name=primary_s2l,json=primaryS2l,proto3" json:"primary_s2l,omitempty"`
	BackupTunnelRewrite  *TeS2LOutputRwOutputInfoBag `protobuf:"bytes,5,opt,name=backup_tunnel_rewrite,json=backupTunnelRewrite,proto3" json:"backup_tunnel_rewrite,omitempty"`
	BackupActive         bool                        `protobuf:"varint,6,opt,name=backup_active,json=backupActive,proto3" json:"backup_active,omitempty"`
	S2LSource            string                      `protobuf:"bytes,7,opt,name=s2l_source,json=s2lSource,proto3" json:"s2l_source,omitempty"`
	ExplicitNull         string                      `protobuf:"bytes,8,opt,name=explicit_null,json=explicitNull,proto3" json:"explicit_null,omitempty"`
	ProtocolTransported  uint32                      `protobuf:"varint,9,opt,name=protocol_transported,json=protocolTransported,proto3" json:"protocol_transported,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *TeS2LOutputRwFieldsBag) Reset()         { *m = TeS2LOutputRwFieldsBag{} }
func (m *TeS2LOutputRwFieldsBag) String() string { return proto.CompactTextString(m) }
func (*TeS2LOutputRwFieldsBag) ProtoMessage()    {}
func (*TeS2LOutputRwFieldsBag) Descriptor() ([]byte, []int) {
	return fileDescriptor_dfc9bc55733de5f4, []int{5}
}

func (m *TeS2LOutputRwFieldsBag) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TeS2LOutputRwFieldsBag.Unmarshal(m, b)
}
func (m *TeS2LOutputRwFieldsBag) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TeS2LOutputRwFieldsBag.Marshal(b, m, deterministic)
}
func (m *TeS2LOutputRwFieldsBag) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TeS2LOutputRwFieldsBag.Merge(m, src)
}
func (m *TeS2LOutputRwFieldsBag) XXX_Size() int {
	return xxx_messageInfo_TeS2LOutputRwFieldsBag.Size(m)
}
func (m *TeS2LOutputRwFieldsBag) XXX_DiscardUnknown() {
	xxx_messageInfo_TeS2LOutputRwFieldsBag.DiscardUnknown(m)
}

var xxx_messageInfo_TeS2LOutputRwFieldsBag proto.InternalMessageInfo

func (m *TeS2LOutputRwFieldsBag) GetTimestamp() uint32 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *TeS2LOutputRwFieldsBag) GetOutRewriteRole() string {
	if m != nil {
		return m.OutRewriteRole
	}
	return ""
}

func (m *TeS2LOutputRwFieldsBag) GetLabel() uint32 {
	if m != nil {
		return m.Label
	}
	return 0
}

func (m *TeS2LOutputRwFieldsBag) GetPrimaryS2L() *TeS2LOutputRwOutputInfoBag {
	if m != nil {
		return m.PrimaryS2L
	}
	return nil
}

func (m *TeS2LOutputRwFieldsBag) GetBackupTunnelRewrite() *TeS2LOutputRwOutputInfoBag {
	if m != nil {
		return m.BackupTunnelRewrite
	}
	return nil
}

func (m *TeS2LOutputRwFieldsBag) GetBackupActive() bool {
	if m != nil {
		return m.BackupActive
	}
	return false
}

func (m *TeS2LOutputRwFieldsBag) GetS2LSource() string {
	if m != nil {
		return m.S2LSource
	}
	return ""
}

func (m *TeS2LOutputRwFieldsBag) GetExplicitNull() string {
	if m != nil {
		return m.ExplicitNull
	}
	return ""
}

func (m *TeS2LOutputRwFieldsBag) GetProtocolTransported() uint32 {
	if m != nil {
		return m.ProtocolTransported
	}
	return 0
}

type MplsTeS2LOutputRwBag struct {
	Subfamily            *TeS2LOutputRwFecSubfamilyBag `protobuf:"bytes,1,opt,name=subfamily,proto3" json:"subfamily,omitempty"`
	SuccessfulRewrite    *TeS2LOutputRwFieldsBag       `protobuf:"bytes,2,opt,name=successful_rewrite,json=successfulRewrite,proto3" json:"successful_rewrite,omitempty"`
	FailedRewrite        *TeS2LOutputRwFieldsBag       `protobuf:"bytes,3,opt,name=failed_rewrite,json=failedRewrite,proto3" json:"failed_rewrite,omitempty"`
	PendingRewrite       *TeS2LOutputRwFieldsBag       `protobuf:"bytes,4,opt,name=pending_rewrite,json=pendingRewrite,proto3" json:"pending_rewrite,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                      `json:"-"`
	XXX_unrecognized     []byte                        `json:"-"`
	XXX_sizecache        int32                         `json:"-"`
}

func (m *MplsTeS2LOutputRwBag) Reset()         { *m = MplsTeS2LOutputRwBag{} }
func (m *MplsTeS2LOutputRwBag) String() string { return proto.CompactTextString(m) }
func (*MplsTeS2LOutputRwBag) ProtoMessage()    {}
func (*MplsTeS2LOutputRwBag) Descriptor() ([]byte, []int) {
	return fileDescriptor_dfc9bc55733de5f4, []int{6}
}

func (m *MplsTeS2LOutputRwBag) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsTeS2LOutputRwBag.Unmarshal(m, b)
}
func (m *MplsTeS2LOutputRwBag) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsTeS2LOutputRwBag.Marshal(b, m, deterministic)
}
func (m *MplsTeS2LOutputRwBag) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsTeS2LOutputRwBag.Merge(m, src)
}
func (m *MplsTeS2LOutputRwBag) XXX_Size() int {
	return xxx_messageInfo_MplsTeS2LOutputRwBag.Size(m)
}
func (m *MplsTeS2LOutputRwBag) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsTeS2LOutputRwBag.DiscardUnknown(m)
}

var xxx_messageInfo_MplsTeS2LOutputRwBag proto.InternalMessageInfo

func (m *MplsTeS2LOutputRwBag) GetSubfamily() *TeS2LOutputRwFecSubfamilyBag {
	if m != nil {
		return m.Subfamily
	}
	return nil
}

func (m *MplsTeS2LOutputRwBag) GetSuccessfulRewrite() *TeS2LOutputRwFieldsBag {
	if m != nil {
		return m.SuccessfulRewrite
	}
	return nil
}

func (m *MplsTeS2LOutputRwBag) GetFailedRewrite() *TeS2LOutputRwFieldsBag {
	if m != nil {
		return m.FailedRewrite
	}
	return nil
}

func (m *MplsTeS2LOutputRwBag) GetPendingRewrite() *TeS2LOutputRwFieldsBag {
	if m != nil {
		return m.PendingRewrite
	}
	return nil
}

type MplsTeS2LForwardingS2LIdBag struct {
	DestinationAddress   string   `protobuf:"bytes,1,opt,name=destination_address,json=destinationAddress,proto3" json:"destination_address,omitempty"`
	SubGroupId           uint32   `protobuf:"varint,2,opt,name=sub_group_id,json=subGroupId,proto3" json:"sub_group_id,omitempty"`
	SubGroupOriginalId   string   `protobuf:"bytes,3,opt,name=sub_group_original_id,json=subGroupOriginalId,proto3" json:"sub_group_original_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MplsTeS2LForwardingS2LIdBag) Reset()         { *m = MplsTeS2LForwardingS2LIdBag{} }
func (m *MplsTeS2LForwardingS2LIdBag) String() string { return proto.CompactTextString(m) }
func (*MplsTeS2LForwardingS2LIdBag) ProtoMessage()    {}
func (*MplsTeS2LForwardingS2LIdBag) Descriptor() ([]byte, []int) {
	return fileDescriptor_dfc9bc55733de5f4, []int{7}
}

func (m *MplsTeS2LForwardingS2LIdBag) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsTeS2LForwardingS2LIdBag.Unmarshal(m, b)
}
func (m *MplsTeS2LForwardingS2LIdBag) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsTeS2LForwardingS2LIdBag.Marshal(b, m, deterministic)
}
func (m *MplsTeS2LForwardingS2LIdBag) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsTeS2LForwardingS2LIdBag.Merge(m, src)
}
func (m *MplsTeS2LForwardingS2LIdBag) XXX_Size() int {
	return xxx_messageInfo_MplsTeS2LForwardingS2LIdBag.Size(m)
}
func (m *MplsTeS2LForwardingS2LIdBag) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsTeS2LForwardingS2LIdBag.DiscardUnknown(m)
}

var xxx_messageInfo_MplsTeS2LForwardingS2LIdBag proto.InternalMessageInfo

func (m *MplsTeS2LForwardingS2LIdBag) GetDestinationAddress() string {
	if m != nil {
		return m.DestinationAddress
	}
	return ""
}

func (m *MplsTeS2LForwardingS2LIdBag) GetSubGroupId() uint32 {
	if m != nil {
		return m.SubGroupId
	}
	return 0
}

func (m *MplsTeS2LForwardingS2LIdBag) GetSubGroupOriginalId() string {
	if m != nil {
		return m.SubGroupOriginalId
	}
	return ""
}

type MplsTeSrS2LPathBag struct {
	IsPrimary            bool     `protobuf:"varint,1,opt,name=is_primary,json=isPrimary,proto3" json:"is_primary,omitempty"`
	IsBackup             bool     `protobuf:"varint,2,opt,name=is_backup,json=isBackup,proto3" json:"is_backup,omitempty"`
	OutgoingInterface    string   `protobuf:"bytes,3,opt,name=outgoing_interface,json=outgoingInterface,proto3" json:"outgoing_interface,omitempty"`
	PathId               uint32   `protobuf:"varint,4,opt,name=path_id,json=pathId,proto3" json:"path_id,omitempty"`
	BackupPathId         uint32   `protobuf:"varint,5,opt,name=backup_path_id,json=backupPathId,proto3" json:"backup_path_id,omitempty"`
	OutgoingLabelsStack  []uint32 `protobuf:"varint,6,rep,packed,name=outgoing_labels_stack,json=outgoingLabelsStack,proto3" json:"outgoing_labels_stack,omitempty"`
	NextHop              string   `protobuf:"bytes,7,opt,name=next_hop,json=nextHop,proto3" json:"next_hop,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MplsTeSrS2LPathBag) Reset()         { *m = MplsTeSrS2LPathBag{} }
func (m *MplsTeSrS2LPathBag) String() string { return proto.CompactTextString(m) }
func (*MplsTeSrS2LPathBag) ProtoMessage()    {}
func (*MplsTeSrS2LPathBag) Descriptor() ([]byte, []int) {
	return fileDescriptor_dfc9bc55733de5f4, []int{8}
}

func (m *MplsTeSrS2LPathBag) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsTeSrS2LPathBag.Unmarshal(m, b)
}
func (m *MplsTeSrS2LPathBag) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsTeSrS2LPathBag.Marshal(b, m, deterministic)
}
func (m *MplsTeSrS2LPathBag) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsTeSrS2LPathBag.Merge(m, src)
}
func (m *MplsTeSrS2LPathBag) XXX_Size() int {
	return xxx_messageInfo_MplsTeSrS2LPathBag.Size(m)
}
func (m *MplsTeSrS2LPathBag) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsTeSrS2LPathBag.DiscardUnknown(m)
}

var xxx_messageInfo_MplsTeSrS2LPathBag proto.InternalMessageInfo

func (m *MplsTeSrS2LPathBag) GetIsPrimary() bool {
	if m != nil {
		return m.IsPrimary
	}
	return false
}

func (m *MplsTeSrS2LPathBag) GetIsBackup() bool {
	if m != nil {
		return m.IsBackup
	}
	return false
}

func (m *MplsTeSrS2LPathBag) GetOutgoingInterface() string {
	if m != nil {
		return m.OutgoingInterface
	}
	return ""
}

func (m *MplsTeSrS2LPathBag) GetPathId() uint32 {
	if m != nil {
		return m.PathId
	}
	return 0
}

func (m *MplsTeSrS2LPathBag) GetBackupPathId() uint32 {
	if m != nil {
		return m.BackupPathId
	}
	return 0
}

func (m *MplsTeSrS2LPathBag) GetOutgoingLabelsStack() []uint32 {
	if m != nil {
		return m.OutgoingLabelsStack
	}
	return nil
}

func (m *MplsTeSrS2LPathBag) GetNextHop() string {
	if m != nil {
		return m.NextHop
	}
	return ""
}

type MplsTeS2LForwardingBag struct {
	S2LOutputRewrite       *MplsTeS2LOutputRwBag          `protobuf:"bytes,50,opt,name=s2l_output_rewrite,json=s2lOutputRewrite,proto3" json:"s2l_output_rewrite,omitempty"`
	OriginalInputInterface string                         `protobuf:"bytes,51,opt,name=original_input_interface,json=originalInputInterface,proto3" json:"original_input_interface,omitempty"`
	OutputInterfaceName    string                         `protobuf:"bytes,52,opt,name=output_interface_name,json=outputInterfaceName,proto3" json:"output_interface_name,omitempty"`
	BackupTunnelName       string                         `protobuf:"bytes,53,opt,name=backup_tunnel_name,json=backupTunnelName,proto3" json:"backup_tunnel_name,omitempty"`
	S2L                    []*MplsTeS2LForwardingS2LIdBag `protobuf:"bytes,54,rep,name=s2l,proto3" json:"s2l,omitempty"`
	IsSegmentRouting       bool                           `protobuf:"varint,55,opt,name=is_segment_routing,json=isSegmentRouting,proto3" json:"is_segment_routing,omitempty"`
	S2LsrPath              []*MplsTeSrS2LPathBag          `protobuf:"bytes,56,rep,name=s2lsr_path,json=s2lsrPath,proto3" json:"s2lsr_path,omitempty"`
	XXX_NoUnkeyedLiteral   struct{}                       `json:"-"`
	XXX_unrecognized       []byte                         `json:"-"`
	XXX_sizecache          int32                          `json:"-"`
}

func (m *MplsTeS2LForwardingBag) Reset()         { *m = MplsTeS2LForwardingBag{} }
func (m *MplsTeS2LForwardingBag) String() string { return proto.CompactTextString(m) }
func (*MplsTeS2LForwardingBag) ProtoMessage()    {}
func (*MplsTeS2LForwardingBag) Descriptor() ([]byte, []int) {
	return fileDescriptor_dfc9bc55733de5f4, []int{9}
}

func (m *MplsTeS2LForwardingBag) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsTeS2LForwardingBag.Unmarshal(m, b)
}
func (m *MplsTeS2LForwardingBag) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsTeS2LForwardingBag.Marshal(b, m, deterministic)
}
func (m *MplsTeS2LForwardingBag) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsTeS2LForwardingBag.Merge(m, src)
}
func (m *MplsTeS2LForwardingBag) XXX_Size() int {
	return xxx_messageInfo_MplsTeS2LForwardingBag.Size(m)
}
func (m *MplsTeS2LForwardingBag) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsTeS2LForwardingBag.DiscardUnknown(m)
}

var xxx_messageInfo_MplsTeS2LForwardingBag proto.InternalMessageInfo

func (m *MplsTeS2LForwardingBag) GetS2LOutputRewrite() *MplsTeS2LOutputRwBag {
	if m != nil {
		return m.S2LOutputRewrite
	}
	return nil
}

func (m *MplsTeS2LForwardingBag) GetOriginalInputInterface() string {
	if m != nil {
		return m.OriginalInputInterface
	}
	return ""
}

func (m *MplsTeS2LForwardingBag) GetOutputInterfaceName() string {
	if m != nil {
		return m.OutputInterfaceName
	}
	return ""
}

func (m *MplsTeS2LForwardingBag) GetBackupTunnelName() string {
	if m != nil {
		return m.BackupTunnelName
	}
	return ""
}

func (m *MplsTeS2LForwardingBag) GetS2L() []*MplsTeS2LForwardingS2LIdBag {
	if m != nil {
		return m.S2L
	}
	return nil
}

func (m *MplsTeS2LForwardingBag) GetIsSegmentRouting() bool {
	if m != nil {
		return m.IsSegmentRouting
	}
	return false
}

func (m *MplsTeS2LForwardingBag) GetS2LsrPath() []*MplsTeSrS2LPathBag {
	if m != nil {
		return m.S2LsrPath
	}
	return nil
}

func init() {
	proto.RegisterType((*MplsTeS2LForwardingBag_KEYS)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.p2mp.forwarding_output_label_rewrites.forwarding_output_label_rewrite.mpls_te_s2l_forwarding_bag_KEYS")
	proto.RegisterType((*TeLspFecCtypeDataT)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.p2mp.forwarding_output_label_rewrites.forwarding_output_label_rewrite.te_lsp_fec_ctype_data_t")
	proto.RegisterType((*TeLspFecT)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.p2mp.forwarding_output_label_rewrites.forwarding_output_label_rewrite.te_lsp_fec_t")
	proto.RegisterType((*TeS2LOutputRwFecSubfamilyBag)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.p2mp.forwarding_output_label_rewrites.forwarding_output_label_rewrite.te_s2l_output_rw_fec_subfamily_bag")
	proto.RegisterType((*TeS2LOutputRwOutputInfoBag)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.p2mp.forwarding_output_label_rewrites.forwarding_output_label_rewrite.te_s2l_output_rw_output_info_bag")
	proto.RegisterType((*TeS2LOutputRwFieldsBag)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.p2mp.forwarding_output_label_rewrites.forwarding_output_label_rewrite.te_s2l_output_rw_fields_bag")
	proto.RegisterType((*MplsTeS2LOutputRwBag)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.p2mp.forwarding_output_label_rewrites.forwarding_output_label_rewrite.mpls_te_s2l_output_rw_bag")
	proto.RegisterType((*MplsTeS2LForwardingS2LIdBag)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.p2mp.forwarding_output_label_rewrites.forwarding_output_label_rewrite.mpls_te_s2l_forwarding_s2l_id_bag")
	proto.RegisterType((*MplsTeSrS2LPathBag)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.p2mp.forwarding_output_label_rewrites.forwarding_output_label_rewrite.mpls_te_sr_s2l_path_bag")
	proto.RegisterType((*MplsTeS2LForwardingBag)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.p2mp.forwarding_output_label_rewrites.forwarding_output_label_rewrite.mpls_te_s2l_forwarding_bag")
}

func init() { proto.RegisterFile("mpls_te_s2l_forwarding_bag.proto", fileDescriptor_dfc9bc55733de5f4) }

var fileDescriptor_dfc9bc55733de5f4 = []byte{
	// 1282 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xcc, 0x57, 0xcd, 0x6f, 0x1b, 0x45,
	0x14, 0xd7, 0xda, 0x4d, 0x62, 0xbf, 0xc4, 0x26, 0x1d, 0x27, 0x8d, 0x4b, 0x5b, 0x61, 0x5c, 0x90,
	0x72, 0x28, 0x86, 0x6e, 0x5b, 0xe8, 0xb5, 0x40, 0x01, 0x8b, 0xaa, 0xad, 0x36, 0x15, 0x12, 0xa7,
	0xd5, 0x7a, 0x77, 0xd6, 0x19, 0x75, 0xbd, 0x33, 0x9a, 0x99, 0x6d, 0x93, 0x5b, 0x85, 0x10, 0x12,
	0x20, 0x21, 0xc1, 0xbd, 0x12, 0x57, 0x3e, 0x25, 0x04, 0x67, 0xfe, 0x13, 0xc4, 0x8d, 0x7f, 0x80,
	0x7f, 0x00, 0xcd, 0x9b, 0x19, 0x7f, 0xa4, 0x31, 0x88, 0x4b, 0x93, 0x9b, 0xe7, 0x7d, 0xed, 0xef,
	0x7d, 0x3f, 0x43, 0x6f, 0x22, 0x0a, 0x15, 0x6b, 0x1a, 0xab, 0xb0, 0x88, 0x73, 0x2e, 0x1f, 0x27,
	0x32, 0x63, 0xe5, 0x38, 0x1e, 0x25, 0xe3, 0x81, 0x90, 0x5c, 0x73, 0x32, 0x4e, 0x99, 0x4a, 0x79,
	0xcc, 0xb8, 0x8a, 0x0f, 0x64, 0xec, 0xc5, 0xb9, 0xa0, 0x72, 0xe0, 0x1e, 0x03, 0x11, 0x4e, 0xc4,
	0x60, 0x4e, 0x99, 0x57, 0x5a, 0x54, 0x3a, 0x2e, 0x92, 0x11, 0x2d, 0x62, 0x49, 0x1f, 0x4b, 0xa6,
	0xa9, 0xfa, 0x2f, 0x81, 0xfe, 0x5f, 0x35, 0x78, 0x69, 0x39, 0x9a, 0xf8, 0xc3, 0xdb, 0x1f, 0xef,
	0x91, 0x0b, 0xd0, 0xd4, 0x55, 0x59, 0xd2, 0x22, 0x66, 0x59, 0x37, 0xe8, 0x05, 0xbb, 0xad, 0xa8,
	0x61, 0x09, 0xc3, 0x8c, 0x6c, 0xc3, 0x6a, 0xa1, 0x84, 0xe1, 0xd4, 0x90, 0xb3, 0x52, 0x28, 0x31,
	0xcc, 0xc8, 0x15, 0x20, 0xf4, 0x40, 0xd3, 0x32, 0xa3, 0x59, 0x3c, 0x53, 0xae, 0xf7, 0x82, 0xdd,
	0x66, 0xb4, 0xe9, 0x39, 0x0f, 0xbc, 0x91, 0x57, 0xa1, 0xad, 0x78, 0x25, 0x53, 0x1a, 0x27, 0x59,
	0x26, 0xa9, 0x52, 0xdd, 0x33, 0x28, 0xd9, 0xb2, 0xd4, 0x5b, 0x96, 0x48, 0x76, 0x60, 0xcd, 0x78,
	0x6d, 0x2c, 0xad, 0xe0, 0xc7, 0x56, 0xcd, 0x73, 0x98, 0x91, 0xd7, 0xa1, 0x93, 0x51, 0xa5, 0x59,
	0x99, 0x68, 0xc6, 0xcb, 0xa9, 0x91, 0x55, 0x34, 0x42, 0xe6, 0x58, 0xde, 0xd2, 0x2e, 0x6c, 0x96,
	0xf4, 0x40, 0xc7, 0xfb, 0x5c, 0x4c, 0xa5, 0xd7, 0x50, 0xba, 0x6d, 0xe8, 0x1f, 0x70, 0xe1, 0x25,
	0xdf, 0x80, 0x2d, 0x21, 0xe9, 0x23, 0xc6, 0x2b, 0xb5, 0x20, 0xdd, 0xb0, 0xb6, 0x3d, 0x6f, 0x4e,
	0x63, 0x0b, 0x56, 0x52, 0x7d, 0x28, 0x68, 0xb7, 0x89, 0x22, 0xf6, 0xd1, 0x7f, 0x1a, 0xc0, 0x8e,
	0xa6, 0xb1, 0x89, 0x55, 0x4e, 0xd3, 0x18, 0x89, 0x71, 0x96, 0xe8, 0x24, 0xd6, 0x26, 0xc0, 0x53,
	0x1a, 0x06, 0xb8, 0x19, 0x35, 0x72, 0x9a, 0xbe, 0x63, 0xde, 0x64, 0x00, 0x1d, 0x11, 0x0a, 0x54,
	0x9c, 0x73, 0x04, 0xa3, 0xdd, 0x8c, 0xce, 0x8a, 0x50, 0xdc, 0x51, 0xe2, 0xdd, 0x19, 0x83, 0xdc,
	0x80, 0x1d, 0x63, 0x6c, 0x3e, 0x1e, 0x3e, 0x68, 0x75, 0x0c, 0xda, 0x56, 0x4e, 0xd3, 0x39, 0x85,
	0xfb, 0x18, 0xc2, 0xfe, 0xdf, 0x35, 0xd8, 0x98, 0xc3, 0xa7, 0xc9, 0x45, 0x00, 0xf3, 0xc3, 0x25,
	0xd7, 0xa5, 0x3d, 0xa7, 0xe9, 0x1d, 0xcc, 0x6f, 0x1f, 0x5a, 0x28, 0x36, 0x4d, 0xad, 0xcd, 0xfe,
	0x7a, 0x4e, 0xd3, 0x69, 0x56, 0xaf, 0xc1, 0x39, 0x23, 0xb3, 0xb4, 0x0e, 0x3a, 0x39, 0x4d, 0x6f,
	0x1f, 0x2d, 0x85, 0x4b, 0xf6, 0xb3, 0x36, 0xf1, 0xae, 0x0c, 0x4c, 0x74, 0xf6, 0x90, 0x40, 0x7e,
	0x0d, 0x60, 0xeb, 0xa8, 0x7b, 0xac, 0xcc, 0x39, 0x16, 0xc4, 0x7a, 0xf8, 0x24, 0x18, 0x3c, 0xa7,
	0xce, 0x19, 0x2c, 0x49, 0x66, 0x44, 0x16, 0xc3, 0x3b, 0x2c, 0x73, 0x6e, 0x0a, 0xd7, 0xc8, 0x3d,
	0x92, 0xb9, 0xab, 0xc9, 0xd5, 0x9c, 0xa6, 0x1f, 0xc9, 0xbc, 0xff, 0x75, 0x0d, 0xfa, 0xae, 0xf3,
	0xdc, 0x47, 0xe4, 0x63, 0x34, 0xa9, 0xaa, 0x51, 0x9e, 0x4c, 0x58, 0x71, 0x68, 0xda, 0x90, 0x7c,
	0x15, 0xc0, 0x9a, 0xfb, 0x18, 0x66, 0x62, 0x3d, 0xac, 0x4e, 0xc2, 0x4f, 0x1d, 0x99, 0x5e, 0x7f,
	0x8f, 0xa6, 0xc7, 0xf6, 0x4f, 0xed, 0x7f, 0xf5, 0x4f, 0x7d, 0x59, 0xff, 0xf4, 0x7f, 0xaa, 0x41,
	0xef, 0x99, 0x98, 0xb8, 0x5f, 0x26, 0xd5, 0x18, 0x91, 0xeb, 0x70, 0x4e, 0xec, 0x1f, 0x2a, 0x96,
	0x26, 0x31, 0x2b, 0x35, 0x95, 0x79, 0x92, 0xd2, 0xb8, 0x4c, 0x26, 0xbe, 0x7f, 0xb6, 0x1c, 0x77,
	0xe8, 0x99, 0x77, 0x93, 0x09, 0x25, 0x21, 0x6c, 0xfb, 0x22, 0x5c, 0x54, 0xb2, 0xd8, 0x3b, 0x6e,
	0xaa, 0x1d, 0xd5, 0x11, 0x89, 0xa4, 0xa5, 0x3e, 0xaa, 0xe3, 0x8a, 0xd8, 0x32, 0x17, 0x75, 0x8e,
	0x0b, 0xcf, 0x99, 0x63, 0xc3, 0x73, 0x01, 0x9a, 0xdc, 0x87, 0xdc, 0x0d, 0xb5, 0x06, 0xaf, 0xf4,
	0x1d, 0xf3, 0x26, 0xaf, 0x40, 0x5b, 0x49, 0x97, 0x0e, 0xa5, 0x93, 0xf4, 0x61, 0x77, 0xb5, 0x57,
	0xdf, 0x6d, 0x45, 0x1b, 0x4a, 0xa2, 0xc0, 0x9e, 0xa1, 0xf5, 0x3f, 0x5b, 0x81, 0x0b, 0xcf, 0xd6,
	0x10, 0xa3, 0x45, 0xa6, 0x30, 0x54, 0x17, 0xa1, 0xa9, 0xd9, 0x84, 0x2a, 0x9d, 0x4c, 0x84, 0xeb,
	0xe3, 0x19, 0xc1, 0x40, 0x35, 0x00, 0x5c, 0xb6, 0x63, 0xc9, 0x0b, 0x1f, 0x8d, 0x36, 0xaf, 0x74,
	0x64, 0xc9, 0x11, 0x2f, 0xa8, 0x99, 0x6b, 0x16, 0x66, 0xdd, 0x0d, 0x7a, 0xc4, 0xf8, 0x43, 0x00,
	0xeb, 0x42, 0xb2, 0x49, 0x22, 0x0f, 0x0d, 0x04, 0x74, 0x73, 0x3d, 0xfc, 0xfc, 0xb9, 0xf6, 0xe1,
	0xbf, 0x96, 0x4a, 0x04, 0x0e, 0xde, 0x5e, 0x58, 0x90, 0xdf, 0x03, 0xd8, 0x1e, 0x25, 0xe9, 0xc3,
	0x4a, 0xf8, 0x69, 0xe4, 0xcc, 0xb8, 0xf9, 0x71, 0x9a, 0x70, 0x77, 0x2c, 0x50, 0x3b, 0x19, 0x5d,
	0x22, 0xc8, 0x65, 0x68, 0x39, 0xfc, 0x49, 0xaa, 0xd9, 0x23, 0x8a, 0xf3, 0xa4, 0x11, 0x6d, 0x58,
	0xe2, 0x2d, 0xa4, 0x99, 0x19, 0x6a, 0x4c, 0xbb, 0x19, 0x6a, 0xf7, 0x5a, 0x53, 0x85, 0x85, 0x9b,
	0xa1, 0x97, 0xa1, 0x45, 0x0f, 0x44, 0xc1, 0x52, 0xa6, 0xe3, 0xb2, 0x2a, 0x0a, 0xb7, 0xcb, 0x36,
	0x3c, 0xf1, 0x6e, 0x55, 0x14, 0xe4, 0xaa, 0xe9, 0x5b, 0xae, 0x79, 0xca, 0x8b, 0x58, 0xcb, 0xa4,
	0x54, 0x82, 0x4b, 0x4d, 0x33, 0x5c, 0x6a, 0xad, 0xa8, 0xe3, 0x79, 0x0f, 0x66, 0xac, 0xfe, 0x9f,
	0x2b, 0x70, 0x7e, 0xfe, 0x96, 0x98, 0xb9, 0x66, 0xca, 0xf0, 0xfb, 0x00, 0x9a, 0xd3, 0xa9, 0xe6,
	0xa6, 0xd8, 0x97, 0x27, 0x18, 0xee, 0x67, 0xa6, 0x6c, 0x34, 0x83, 0x47, 0x7e, 0x0b, 0x80, 0xa8,
	0x2a, 0x4d, 0xa9, 0x52, 0x79, 0x35, 0x2b, 0x92, 0x1a, 0xa2, 0xfe, 0xf4, 0x24, 0x51, 0x4f, 0xfb,
	0x3a, 0x3a, 0x3b, 0x03, 0xe8, 0xab, 0xe3, 0xc7, 0x00, 0xda, 0x79, 0xc2, 0x0a, 0x9a, 0x4d, 0x21,
	0xd7, 0x4f, 0x13, 0xe4, 0x96, 0x05, 0xe7, 0xe1, 0xfe, 0x1c, 0xc0, 0x0b, 0x82, 0x96, 0x68, 0xcb,
	0xe3, 0x3d, 0x73, 0x9a, 0xf0, 0xb6, 0x1d, 0x3a, 0x07, 0xb8, 0xff, 0x5d, 0x00, 0x2f, 0x2f, 0xb9,
	0x96, 0xcd, 0x93, 0x65, 0x58, 0xe9, 0x4b, 0xae, 0xd1, 0x60, 0xe9, 0x35, 0xda, 0x83, 0x0d, 0x55,
	0x8d, 0xe2, 0xb1, 0xe4, 0xd5, 0xdc, 0x25, 0x0d, 0xaa, 0x1a, 0xbd, 0x6f, 0x48, 0xc3, 0x8c, 0x5c,
	0x85, 0xed, 0x99, 0x04, 0x97, 0x6c, 0xcc, 0xca, 0x64, 0xee, 0x92, 0x22, 0x5e, 0xf4, 0x9e, 0x63,
	0x0d, 0xb3, 0xfe, 0x37, 0x35, 0xd8, 0x99, 0x62, 0x95, 0x88, 0x4f, 0x24, 0x7a, 0x1f, 0x11, 0x5e,
	0x02, 0x60, 0x2a, 0x76, 0x73, 0x11, 0x81, 0x35, 0xa2, 0x26, 0x53, 0xf7, 0x2d, 0xc1, 0x2c, 0x25,
	0x66, 0x02, 0x60, 0x46, 0x0a, 0x82, 0x69, 0x44, 0x0d, 0xa6, 0xde, 0xc6, 0x37, 0x79, 0x0d, 0x08,
	0xaf, 0xf4, 0x98, 0x1b, 0xa7, 0xa7, 0x1b, 0xd1, 0xe1, 0x38, 0xeb, 0x39, 0xd3, 0x75, 0x88, 0x37,
	0xbb, 0xf9, 0x2c, 0xcb, 0x30, 0xb5, 0xe6, 0x66, 0x4f, 0xf4, 0xfe, 0x30, 0x33, 0xcb, 0xcd, 0x4d,
	0x32, 0xcf, 0xb7, 0xeb, 0xcf, 0x8d, 0xb2, 0xfb, 0x56, 0x2a, 0x84, 0xed, 0xe9, 0xd7, 0x30, 0x6f,
	0x6a, 0x61, 0x13, 0x76, 0x3c, 0x13, 0xf7, 0xa1, 0xc2, 0x85, 0x48, 0xce, 0x43, 0xc3, 0x6f, 0x5f,
	0x37, 0xfc, 0xd6, 0xdc, 0xd6, 0xed, 0xff, 0xb1, 0x02, 0x2f, 0x2e, 0xff, 0xbb, 0x43, 0x7e, 0x31,
	0x6d, 0x3f, 0x57, 0x0c, 0xae, 0x26, 0x43, 0xac, 0xc9, 0x4f, 0x9e, 0x5f, 0x4d, 0x2e, 0x9d, 0xa2,
	0xd1, 0xa6, 0x0a, 0x8b, 0x7b, 0x48, 0xf1, 0x4d, 0x74, 0x13, 0xba, 0xb3, 0x82, 0x28, 0xed, 0x06,
	0xf1, 0x59, 0xb9, 0x86, 0xde, 0x9f, 0xf3, 0xfc, 0xa1, 0x61, 0xcf, 0x52, 0x63, 0x63, 0xbb, 0xa0,
	0x61, 0x2f, 0x9b, 0xeb, 0xf6, 0xb2, 0xb1, 0xcc, 0xc5, 0xcb, 0xe6, 0x0a, 0x90, 0xc5, 0xfd, 0x89,
	0x0a, 0x37, 0xec, 0xff, 0xba, 0xf9, 0x85, 0x85, 0xd2, 0x4f, 0x03, 0xa8, 0x9b, 0xa3, 0xe0, 0xcd,
	0x5e, 0x7d, 0x77, 0x3d, 0xfc, 0xe2, 0x64, 0x02, 0x78, 0x6c, 0x93, 0x46, 0x06, 0x97, 0xf1, 0x86,
	0xa9, 0x58, 0xd1, 0xf1, 0xc4, 0xdc, 0x77, 0x92, 0x57, 0x9a, 0x95, 0xe3, 0xee, 0x5b, 0x58, 0xf1,
	0x9b, 0x4c, 0xed, 0x59, 0x46, 0x64, 0xe9, 0xe4, 0xdb, 0x00, 0xf7, 0xaa, 0x92, 0x58, 0xb1, 0xdd,
	0x9b, 0xe8, 0xd4, 0x93, 0x13, 0x70, 0x6a, 0xb1, 0x9b, 0x71, 0xb5, 0x2b, 0x69, 0x1a, 0x66, 0xb4,
	0x8a, 0x7b, 0xf9, 0xda, 0x3f, 0x01, 0x00, 0x00, 0xff, 0xff, 0x2a, 0x2b, 0x65, 0x3b, 0x62, 0x10,
	0x00, 0x00,
}
