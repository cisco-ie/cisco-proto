/*
Copyright 2019 Cisco Systems

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: pce_stats_bag.proto

package cisco_ios_xr_mpls_te_oper_mpls_pce_statistics

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type PceStatsBag_KEYS struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PceStatsBag_KEYS) Reset()         { *m = PceStatsBag_KEYS{} }
func (m *PceStatsBag_KEYS) String() string { return proto.CompactTextString(m) }
func (*PceStatsBag_KEYS) ProtoMessage()    {}
func (*PceStatsBag_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_24bb34674500fba4, []int{0}
}

func (m *PceStatsBag_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PceStatsBag_KEYS.Unmarshal(m, b)
}
func (m *PceStatsBag_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PceStatsBag_KEYS.Marshal(b, m, deterministic)
}
func (m *PceStatsBag_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PceStatsBag_KEYS.Merge(m, src)
}
func (m *PceStatsBag_KEYS) XXX_Size() int {
	return xxx_messageInfo_PceStatsBag_KEYS.Size(m)
}
func (m *PceStatsBag_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_PceStatsBag_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_PceStatsBag_KEYS proto.InternalMessageInfo

type PceIgpStatsBag struct {
	AbrLookupMin         uint64   `protobuf:"varint,1,opt,name=abr_lookup_min,json=abrLookupMin,proto3" json:"abr_lookup_min,omitempty"`
	AbrLookupMax         uint64   `protobuf:"varint,2,opt,name=abr_lookup_max,json=abrLookupMax,proto3" json:"abr_lookup_max,omitempty"`
	AbrLookupAvg         uint64   `protobuf:"varint,3,opt,name=abr_lookup_avg,json=abrLookupAvg,proto3" json:"abr_lookup_avg,omitempty"`
	AbrLookupTimeout     uint64   `protobuf:"varint,4,opt,name=abr_lookup_timeout,json=abrLookupTimeout,proto3" json:"abr_lookup_timeout,omitempty"`
	AbrLookupComplete    uint64   `protobuf:"varint,5,opt,name=abr_lookup_complete,json=abrLookupComplete,proto3" json:"abr_lookup_complete,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PceIgpStatsBag) Reset()         { *m = PceIgpStatsBag{} }
func (m *PceIgpStatsBag) String() string { return proto.CompactTextString(m) }
func (*PceIgpStatsBag) ProtoMessage()    {}
func (*PceIgpStatsBag) Descriptor() ([]byte, []int) {
	return fileDescriptor_24bb34674500fba4, []int{1}
}

func (m *PceIgpStatsBag) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PceIgpStatsBag.Unmarshal(m, b)
}
func (m *PceIgpStatsBag) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PceIgpStatsBag.Marshal(b, m, deterministic)
}
func (m *PceIgpStatsBag) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PceIgpStatsBag.Merge(m, src)
}
func (m *PceIgpStatsBag) XXX_Size() int {
	return xxx_messageInfo_PceIgpStatsBag.Size(m)
}
func (m *PceIgpStatsBag) XXX_DiscardUnknown() {
	xxx_messageInfo_PceIgpStatsBag.DiscardUnknown(m)
}

var xxx_messageInfo_PceIgpStatsBag proto.InternalMessageInfo

func (m *PceIgpStatsBag) GetAbrLookupMin() uint64 {
	if m != nil {
		return m.AbrLookupMin
	}
	return 0
}

func (m *PceIgpStatsBag) GetAbrLookupMax() uint64 {
	if m != nil {
		return m.AbrLookupMax
	}
	return 0
}

func (m *PceIgpStatsBag) GetAbrLookupAvg() uint64 {
	if m != nil {
		return m.AbrLookupAvg
	}
	return 0
}

func (m *PceIgpStatsBag) GetAbrLookupTimeout() uint64 {
	if m != nil {
		return m.AbrLookupTimeout
	}
	return 0
}

func (m *PceIgpStatsBag) GetAbrLookupComplete() uint64 {
	if m != nil {
		return m.AbrLookupComplete
	}
	return 0
}

type PceStatsBag struct {
	Neighbors              uint32          `protobuf:"varint,50,opt,name=neighbors,proto3" json:"neighbors,omitempty"`
	Tunnels                uint32          `protobuf:"varint,51,opt,name=tunnels,proto3" json:"tunnels,omitempty"`
	PceReqTotal            uint32          `protobuf:"varint,52,opt,name=pce_req_total,json=pceReqTotal,proto3" json:"pce_req_total,omitempty"`
	PceReqPending          uint32          `protobuf:"varint,53,opt,name=pce_req_pending,json=pceReqPending,proto3" json:"pce_req_pending,omitempty"`
	PceReqTimedOut         uint32          `protobuf:"varint,54,opt,name=pce_req_timed_out,json=pceReqTimedOut,proto3" json:"pce_req_timed_out,omitempty"`
	MaxFileDescriptors     uint32          `protobuf:"varint,55,opt,name=max_file_descriptors,json=maxFileDescriptors,proto3" json:"max_file_descriptors,omitempty"`
	CurrentFileDescriptors uint32          `protobuf:"varint,56,opt,name=current_file_descriptors,json=currentFileDescriptors,proto3" json:"current_file_descriptors,omitempty"`
	MaximumInQueueDepth    []uint32        `protobuf:"varint,57,rep,packed,name=maximum_in_queue_depth,json=maximumInQueueDepth,proto3" json:"maximum_in_queue_depth,omitempty"`
	AverageInQueueDepth    []uint32        `protobuf:"varint,58,rep,packed,name=average_in_queue_depth,json=averageInQueueDepth,proto3" json:"average_in_queue_depth,omitempty"`
	CurrentPceqLength      uint32          `protobuf:"varint,59,opt,name=current_pceq_length,json=currentPceqLength,proto3" json:"current_pceq_length,omitempty"`
	CurrentTeqLength       uint32          `protobuf:"varint,60,opt,name=current_teq_length,json=currentTeqLength,proto3" json:"current_teq_length,omitempty"`
	MaxPceqLength          uint32          `protobuf:"varint,61,opt,name=max_pceq_length,json=maxPceqLength,proto3" json:"max_pceq_length,omitempty"`
	MaxTeqLength           uint32          `protobuf:"varint,62,opt,name=max_teq_length,json=maxTeqLength,proto3" json:"max_teq_length,omitempty"`
	IgpStatistics          *PceIgpStatsBag `protobuf:"bytes,63,opt,name=igp_statistics,json=igpStatistics,proto3" json:"igp_statistics,omitempty"`
	XXX_NoUnkeyedLiteral   struct{}        `json:"-"`
	XXX_unrecognized       []byte          `json:"-"`
	XXX_sizecache          int32           `json:"-"`
}

func (m *PceStatsBag) Reset()         { *m = PceStatsBag{} }
func (m *PceStatsBag) String() string { return proto.CompactTextString(m) }
func (*PceStatsBag) ProtoMessage()    {}
func (*PceStatsBag) Descriptor() ([]byte, []int) {
	return fileDescriptor_24bb34674500fba4, []int{2}
}

func (m *PceStatsBag) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PceStatsBag.Unmarshal(m, b)
}
func (m *PceStatsBag) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PceStatsBag.Marshal(b, m, deterministic)
}
func (m *PceStatsBag) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PceStatsBag.Merge(m, src)
}
func (m *PceStatsBag) XXX_Size() int {
	return xxx_messageInfo_PceStatsBag.Size(m)
}
func (m *PceStatsBag) XXX_DiscardUnknown() {
	xxx_messageInfo_PceStatsBag.DiscardUnknown(m)
}

var xxx_messageInfo_PceStatsBag proto.InternalMessageInfo

func (m *PceStatsBag) GetNeighbors() uint32 {
	if m != nil {
		return m.Neighbors
	}
	return 0
}

func (m *PceStatsBag) GetTunnels() uint32 {
	if m != nil {
		return m.Tunnels
	}
	return 0
}

func (m *PceStatsBag) GetPceReqTotal() uint32 {
	if m != nil {
		return m.PceReqTotal
	}
	return 0
}

func (m *PceStatsBag) GetPceReqPending() uint32 {
	if m != nil {
		return m.PceReqPending
	}
	return 0
}

func (m *PceStatsBag) GetPceReqTimedOut() uint32 {
	if m != nil {
		return m.PceReqTimedOut
	}
	return 0
}

func (m *PceStatsBag) GetMaxFileDescriptors() uint32 {
	if m != nil {
		return m.MaxFileDescriptors
	}
	return 0
}

func (m *PceStatsBag) GetCurrentFileDescriptors() uint32 {
	if m != nil {
		return m.CurrentFileDescriptors
	}
	return 0
}

func (m *PceStatsBag) GetMaximumInQueueDepth() []uint32 {
	if m != nil {
		return m.MaximumInQueueDepth
	}
	return nil
}

func (m *PceStatsBag) GetAverageInQueueDepth() []uint32 {
	if m != nil {
		return m.AverageInQueueDepth
	}
	return nil
}

func (m *PceStatsBag) GetCurrentPceqLength() uint32 {
	if m != nil {
		return m.CurrentPceqLength
	}
	return 0
}

func (m *PceStatsBag) GetCurrentTeqLength() uint32 {
	if m != nil {
		return m.CurrentTeqLength
	}
	return 0
}

func (m *PceStatsBag) GetMaxPceqLength() uint32 {
	if m != nil {
		return m.MaxPceqLength
	}
	return 0
}

func (m *PceStatsBag) GetMaxTeqLength() uint32 {
	if m != nil {
		return m.MaxTeqLength
	}
	return 0
}

func (m *PceStatsBag) GetIgpStatistics() *PceIgpStatsBag {
	if m != nil {
		return m.IgpStatistics
	}
	return nil
}

func init() {
	proto.RegisterType((*PceStatsBag_KEYS)(nil), "cisco_ios_xr_mpls_te_oper.mpls_pce.statistics.pce_stats_bag_KEYS")
	proto.RegisterType((*PceIgpStatsBag)(nil), "cisco_ios_xr_mpls_te_oper.mpls_pce.statistics.pce_igp_stats_bag")
	proto.RegisterType((*PceStatsBag)(nil), "cisco_ios_xr_mpls_te_oper.mpls_pce.statistics.pce_stats_bag")
}

func init() { proto.RegisterFile("pce_stats_bag.proto", fileDescriptor_24bb34674500fba4) }

var fileDescriptor_24bb34674500fba4 = []byte{
	// 511 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x93, 0xcb, 0x6e, 0x13, 0x3f,
	0x18, 0xc5, 0x95, 0x7f, 0xdb, 0x3f, 0xc2, 0x6d, 0xd2, 0xc6, 0xa9, 0x2a, 0x2f, 0x58, 0x44, 0x51,
	0x55, 0x05, 0x09, 0x46, 0xa8, 0xe1, 0x52, 0xee, 0x20, 0x0a, 0x12, 0xa2, 0x88, 0x92, 0x66, 0xc3,
	0xca, 0x72, 0x9c, 0x8f, 0x89, 0xc5, 0xf8, 0x12, 0xdb, 0x13, 0xcd, 0x2b, 0xf1, 0x5c, 0xbc, 0x08,
	0xb2, 0x67, 0x92, 0x4c, 0xa6, 0x2b, 0x96, 0x3e, 0xe7, 0x77, 0x8e, 0x3e, 0x7b, 0xe6, 0x43, 0x3d,
	0xc3, 0x81, 0x3a, 0xcf, 0xbc, 0xa3, 0x53, 0x96, 0x26, 0xc6, 0x6a, 0xaf, 0xf1, 0x43, 0x2e, 0x1c,
	0xd7, 0x54, 0x68, 0x47, 0x0b, 0x4b, 0xa5, 0xc9, 0x1c, 0xf5, 0x40, 0xb5, 0x01, 0x9b, 0xc4, 0x83,
	0xe1, 0x90, 0x84, 0x8c, 0x70, 0x5e, 0x70, 0x37, 0x38, 0x46, 0x78, 0xab, 0x85, 0x7e, 0xf9, 0xf8,
	0xe3, 0x66, 0xf0, 0xa7, 0x85, 0xba, 0x41, 0x16, 0xa9, 0xd9, 0x58, 0xf8, 0x14, 0x75, 0xd8, 0xd4,
	0xd2, 0x4c, 0xeb, 0x5f, 0xb9, 0xa1, 0x52, 0x28, 0xd2, 0xea, 0xb7, 0x86, 0xbb, 0xe3, 0x03, 0x36,
	0xb5, 0x57, 0x51, 0xfc, 0x2a, 0x54, 0x93, 0x62, 0x05, 0xf9, 0xaf, 0x49, 0xb1, 0xa2, 0x41, 0xb1,
	0x65, 0x4a, 0x76, 0x1a, 0xd4, 0xfb, 0x65, 0x8a, 0x1f, 0x20, 0x5c, 0xa3, 0xbc, 0x90, 0xa0, 0x73,
	0x4f, 0x76, 0x23, 0x79, 0xb4, 0x26, 0x27, 0xa5, 0x8e, 0x13, 0xd4, 0xab, 0xd1, 0x5c, 0x4b, 0x93,
	0x81, 0x07, 0xb2, 0x17, 0xf1, 0xee, 0x1a, 0xff, 0x50, 0x19, 0x83, 0xdf, 0x7b, 0xa8, 0xbd, 0x75,
	0x79, 0x7c, 0x0f, 0xdd, 0x55, 0x20, 0xd2, 0xf9, 0x54, 0x5b, 0x47, 0xce, 0xfb, 0xad, 0x61, 0x7b,
	0xbc, 0x11, 0x30, 0x41, 0x77, 0x7c, 0xae, 0x14, 0x64, 0x8e, 0x8c, 0xa2, 0xb7, 0x3a, 0xe2, 0x41,
	0x59, 0x64, 0x61, 0x41, 0xbd, 0xf6, 0x2c, 0x23, 0x8f, 0xa3, 0xbf, 0x6f, 0x38, 0x8c, 0x61, 0x31,
	0x09, 0x12, 0x3e, 0x43, 0x87, 0x2b, 0xc6, 0x80, 0x9a, 0x09, 0x95, 0x92, 0x27, 0x91, 0x6a, 0x97,
	0xd4, 0x75, 0x29, 0xe2, 0xfb, 0xe5, 0xd3, 0xc7, 0x2e, 0x21, 0x61, 0x46, 0xc3, 0x95, 0x9f, 0x46,
	0xb2, 0x53, 0xf5, 0x05, 0xf9, 0x5b, 0xee, 0xf1, 0x23, 0x74, 0x2c, 0x59, 0x41, 0x7f, 0x8a, 0x0c,
	0xe8, 0x0c, 0x1c, 0xb7, 0xc2, 0xf8, 0x30, 0xf9, 0xb3, 0x48, 0x63, 0xc9, 0x8a, 0x4f, 0x22, 0x83,
	0xcb, 0x8d, 0x83, 0x2f, 0x10, 0xe1, 0xb9, 0xb5, 0xa0, 0xfc, 0xed, 0xd4, 0x45, 0x4c, 0x9d, 0x54,
	0x7e, 0x33, 0x39, 0x42, 0x27, 0x92, 0x15, 0x42, 0xe6, 0x92, 0x0a, 0x45, 0x17, 0x39, 0xe4, 0x21,
	0x6d, 0xfc, 0x9c, 0x3c, 0xef, 0xef, 0x0c, 0xdb, 0xe3, 0x5e, 0xe5, 0x7e, 0x56, 0xdf, 0x83, 0x77,
	0x19, 0xac, 0x10, 0x62, 0x4b, 0xb0, 0x2c, 0x85, 0x66, 0xe8, 0x45, 0x19, 0xaa, 0xdc, 0xad, 0x50,
	0x82, 0x7a, 0xab, 0x19, 0x0d, 0x87, 0x05, 0xcd, 0x40, 0xa5, 0x7e, 0x4e, 0x5e, 0xc6, 0xf1, 0xba,
	0x95, 0x75, 0xcd, 0x61, 0x71, 0x15, 0x8d, 0xf0, 0x93, 0xac, 0x78, 0xbf, 0xc1, 0x5f, 0x45, 0xfc,
	0xa8, 0x72, 0x26, 0x6b, 0xfa, 0x0c, 0x1d, 0x86, 0x37, 0xab, 0x37, 0xbf, 0x2e, 0x3f, 0x83, 0x64,
	0x45, 0xad, 0xf5, 0x14, 0x75, 0x02, 0x57, 0x6b, 0x7c, 0x13, 0xb1, 0x03, 0xc9, 0x8a, 0x4d, 0x5b,
	0x8a, 0x3a, 0xab, 0x1d, 0x29, 0x17, 0x8a, 0xbc, 0xed, 0xb7, 0x86, 0xfb, 0xe7, 0xef, 0x92, 0x7f,
	0x5a, 0xc3, 0xe4, 0xd6, 0xb2, 0x8d, 0xdb, 0x22, 0x35, 0x37, 0x6b, 0x60, 0xfa, 0x7f, 0xdc, 0xee,
	0xd1, 0xdf, 0x00, 0x00, 0x00, 0xff, 0xff, 0xf7, 0x53, 0x30, 0x02, 0xf4, 0x03, 0x00, 0x00,
}
