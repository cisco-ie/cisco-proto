/*
Copyright 2019 Cisco Systems

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: pce_neighbor_bag.proto

package cisco_ios_xr_mpls_te_oper_mpls_pce_peers_peer

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type PceNeighborBag_KEYS struct {
	PeerAddress          string   `protobuf:"bytes,1,opt,name=peer_address,json=peerAddress,proto3" json:"peer_address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PceNeighborBag_KEYS) Reset()         { *m = PceNeighborBag_KEYS{} }
func (m *PceNeighborBag_KEYS) String() string { return proto.CompactTextString(m) }
func (*PceNeighborBag_KEYS) ProtoMessage()    {}
func (*PceNeighborBag_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_f8f57b2c295d6328, []int{0}
}

func (m *PceNeighborBag_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PceNeighborBag_KEYS.Unmarshal(m, b)
}
func (m *PceNeighborBag_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PceNeighborBag_KEYS.Marshal(b, m, deterministic)
}
func (m *PceNeighborBag_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PceNeighborBag_KEYS.Merge(m, src)
}
func (m *PceNeighborBag_KEYS) XXX_Size() int {
	return xxx_messageInfo_PceNeighborBag_KEYS.Size(m)
}
func (m *PceNeighborBag_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_PceNeighborBag_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_PceNeighborBag_KEYS proto.InternalMessageInfo

func (m *PceNeighborBag_KEYS) GetPeerAddress() string {
	if m != nil {
		return m.PeerAddress
	}
	return ""
}

type PcePeerIgpBag struct {
	IgpType              string   `protobuf:"bytes,1,opt,name=igp_type,json=igpType,proto3" json:"igp_type,omitempty"`
	IgpInstanceId        string   `protobuf:"bytes,2,opt,name=igp_instance_id,json=igpInstanceId,proto3" json:"igp_instance_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PcePeerIgpBag) Reset()         { *m = PcePeerIgpBag{} }
func (m *PcePeerIgpBag) String() string { return proto.CompactTextString(m) }
func (*PcePeerIgpBag) ProtoMessage()    {}
func (*PcePeerIgpBag) Descriptor() ([]byte, []int) {
	return fileDescriptor_f8f57b2c295d6328, []int{1}
}

func (m *PcePeerIgpBag) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PcePeerIgpBag.Unmarshal(m, b)
}
func (m *PcePeerIgpBag) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PcePeerIgpBag.Marshal(b, m, deterministic)
}
func (m *PcePeerIgpBag) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PcePeerIgpBag.Merge(m, src)
}
func (m *PcePeerIgpBag) XXX_Size() int {
	return xxx_messageInfo_PcePeerIgpBag.Size(m)
}
func (m *PcePeerIgpBag) XXX_DiscardUnknown() {
	xxx_messageInfo_PcePeerIgpBag.DiscardUnknown(m)
}

var xxx_messageInfo_PcePeerIgpBag proto.InternalMessageInfo

func (m *PcePeerIgpBag) GetIgpType() string {
	if m != nil {
		return m.IgpType
	}
	return ""
}

func (m *PcePeerIgpBag) GetIgpInstanceId() string {
	if m != nil {
		return m.IgpInstanceId
	}
	return ""
}

type PceerrBag struct {
	PceErrType           uint32   `protobuf:"varint,1,opt,name=pce_err_type,json=pceErrType,proto3" json:"pce_err_type,omitempty"`
	PceErrValue          uint32   `protobuf:"varint,2,opt,name=pce_err_value,json=pceErrValue,proto3" json:"pce_err_value,omitempty"`
	HasOpenObject        bool     `protobuf:"varint,3,opt,name=has_open_object,json=hasOpenObject,proto3" json:"has_open_object,omitempty"`
	Openversion          uint32   `protobuf:"varint,4,opt,name=openversion,proto3" json:"openversion,omitempty"`
	OpenKeepalive        uint32   `protobuf:"varint,5,opt,name=open_keepalive,json=openKeepalive,proto3" json:"open_keepalive,omitempty"`
	OpenDeadTime         uint32   `protobuf:"varint,6,opt,name=open_dead_time,json=openDeadTime,proto3" json:"open_dead_time,omitempty"`
	HasRpObject          bool     `protobuf:"varint,7,opt,name=has_rp_object,json=hasRpObject,proto3" json:"has_rp_object,omitempty"`
	RpRequestId          uint32   `protobuf:"varint,8,opt,name=rp_request_id,json=rpRequestId,proto3" json:"rp_request_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PceerrBag) Reset()         { *m = PceerrBag{} }
func (m *PceerrBag) String() string { return proto.CompactTextString(m) }
func (*PceerrBag) ProtoMessage()    {}
func (*PceerrBag) Descriptor() ([]byte, []int) {
	return fileDescriptor_f8f57b2c295d6328, []int{2}
}

func (m *PceerrBag) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PceerrBag.Unmarshal(m, b)
}
func (m *PceerrBag) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PceerrBag.Marshal(b, m, deterministic)
}
func (m *PceerrBag) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PceerrBag.Merge(m, src)
}
func (m *PceerrBag) XXX_Size() int {
	return xxx_messageInfo_PceerrBag.Size(m)
}
func (m *PceerrBag) XXX_DiscardUnknown() {
	xxx_messageInfo_PceerrBag.DiscardUnknown(m)
}

var xxx_messageInfo_PceerrBag proto.InternalMessageInfo

func (m *PceerrBag) GetPceErrType() uint32 {
	if m != nil {
		return m.PceErrType
	}
	return 0
}

func (m *PceerrBag) GetPceErrValue() uint32 {
	if m != nil {
		return m.PceErrValue
	}
	return 0
}

func (m *PceerrBag) GetHasOpenObject() bool {
	if m != nil {
		return m.HasOpenObject
	}
	return false
}

func (m *PceerrBag) GetOpenversion() uint32 {
	if m != nil {
		return m.Openversion
	}
	return 0
}

func (m *PceerrBag) GetOpenKeepalive() uint32 {
	if m != nil {
		return m.OpenKeepalive
	}
	return 0
}

func (m *PceerrBag) GetOpenDeadTime() uint32 {
	if m != nil {
		return m.OpenDeadTime
	}
	return 0
}

func (m *PceerrBag) GetHasRpObject() bool {
	if m != nil {
		return m.HasRpObject
	}
	return false
}

func (m *PceerrBag) GetRpRequestId() uint32 {
	if m != nil {
		return m.RpRequestId
	}
	return 0
}

type PceNeighborBag struct {
	Error                    string           `protobuf:"bytes,50,opt,name=error,proto3" json:"error,omitempty"`
	PceState                 string           `protobuf:"bytes,51,opt,name=pce_state,json=pceState,proto3" json:"pce_state,omitempty"`
	Precedence               uint32           `protobuf:"varint,52,opt,name=precedence,proto3" json:"precedence,omitempty"`
	Stateful                 bool             `protobuf:"varint,53,opt,name=stateful,proto3" json:"stateful,omitempty"`
	CapabilityUpdate         bool             `protobuf:"varint,54,opt,name=capability_update,json=capabilityUpdate,proto3" json:"capability_update,omitempty"`
	CapabilityInstantiate    bool             `protobuf:"varint,55,opt,name=capability_instantiate,json=capabilityInstantiate,proto3" json:"capability_instantiate,omitempty"`
	CapabilitySegmentRouting bool             `protobuf:"varint,56,opt,name=capability_segment_routing,json=capabilitySegmentRouting,proto3" json:"capability_segment_routing,omitempty"`
	TriggeredSyncCapability  bool             `protobuf:"varint,57,opt,name=triggered_sync_capability,json=triggeredSyncCapability,proto3" json:"triggered_sync_capability,omitempty"`
	CapabilityDbVersion      bool             `protobuf:"varint,58,opt,name=capability_db_version,json=capabilityDbVersion,proto3" json:"capability_db_version,omitempty"`
	DeltaSyncCapability      bool             `protobuf:"varint,59,opt,name=delta_sync_capability,json=deltaSyncCapability,proto3" json:"delta_sync_capability,omitempty"`
	PcepUpTime               uint32           `protobuf:"varint,60,opt,name=pcep_up_time,json=pcepUpTime,proto3" json:"pcep_up_time,omitempty"`
	Keepalives               uint32           `protobuf:"varint,61,opt,name=keepalives,proto3" json:"keepalives,omitempty"`
	Candidate                bool             `protobuf:"varint,62,opt,name=candidate,proto3" json:"candidate,omitempty"`
	StaticallyConfigured     bool             `protobuf:"varint,63,opt,name=statically_configured,json=staticallyConfigured,proto3" json:"statically_configured,omitempty"`
	Md5Enabled               bool             `protobuf:"varint,64,opt,name=md5_enabled,json=md5Enabled,proto3" json:"md5_enabled,omitempty"`
	KeychainEnabled          bool             `protobuf:"varint,65,opt,name=keychain_enabled,json=keychainEnabled,proto3" json:"keychain_enabled,omitempty"`
	IgPs                     []*PcePeerIgpBag `protobuf:"bytes,66,rep,name=ig_ps,json=igPs,proto3" json:"ig_ps,omitempty"`
	NegotiatedKeepalive      uint32           `protobuf:"varint,67,opt,name=negotiated_keepalive,json=negotiatedKeepalive,proto3" json:"negotiated_keepalive,omitempty"`
	NegotatedDeadTime        uint32           `protobuf:"varint,68,opt,name=negotated_dead_time,json=negotatedDeadTime,proto3" json:"negotated_dead_time,omitempty"`
	PceReqRx                 uint32           `protobuf:"varint,69,opt,name=pce_req_rx,json=pceReqRx,proto3" json:"pce_req_rx,omitempty"`
	PceReqTx                 uint32           `protobuf:"varint,70,opt,name=pce_req_tx,json=pceReqTx,proto3" json:"pce_req_tx,omitempty"`
	PceRepRx                 uint32           `protobuf:"varint,71,opt,name=pce_rep_rx,json=pceRepRx,proto3" json:"pce_rep_rx,omitempty"`
	PceRepTx                 uint32           `protobuf:"varint,72,opt,name=pce_rep_tx,json=pceRepTx,proto3" json:"pce_rep_tx,omitempty"`
	PceErrRx                 uint32           `protobuf:"varint,73,opt,name=pce_err_rx,json=pceErrRx,proto3" json:"pce_err_rx,omitempty"`
	PceErrTx                 uint32           `protobuf:"varint,74,opt,name=pce_err_tx,json=pceErrTx,proto3" json:"pce_err_tx,omitempty"`
	PceOpenTx                uint32           `protobuf:"varint,75,opt,name=pce_open_tx,json=pceOpenTx,proto3" json:"pce_open_tx,omitempty"`
	PceOpenRx                uint32           `protobuf:"varint,76,opt,name=pce_open_rx,json=pceOpenRx,proto3" json:"pce_open_rx,omitempty"`
	PceRptRx                 uint32           `protobuf:"varint,77,opt,name=pce_rpt_rx,json=pceRptRx,proto3" json:"pce_rpt_rx,omitempty"`
	PceRptTx                 uint32           `protobuf:"varint,78,opt,name=pce_rpt_tx,json=pceRptTx,proto3" json:"pce_rpt_tx,omitempty"`
	PceUpdRx                 uint32           `protobuf:"varint,79,opt,name=pce_upd_rx,json=pceUpdRx,proto3" json:"pce_upd_rx,omitempty"`
	PceUpdTx                 uint32           `protobuf:"varint,80,opt,name=pce_upd_tx,json=pceUpdTx,proto3" json:"pce_upd_tx,omitempty"`
	PceInitRx                uint32           `protobuf:"varint,81,opt,name=pce_init_rx,json=pceInitRx,proto3" json:"pce_init_rx,omitempty"`
	PceInitTx                uint32           `protobuf:"varint,82,opt,name=pce_init_tx,json=pceInitTx,proto3" json:"pce_init_tx,omitempty"`
	PceKeepaliveTx           uint64           `protobuf:"varint,83,opt,name=pce_keepalive_tx,json=pceKeepaliveTx,proto3" json:"pce_keepalive_tx,omitempty"`
	PceKeepaliveRx           uint64           `protobuf:"varint,84,opt,name=pce_keepalive_rx,json=pceKeepaliveRx,proto3" json:"pce_keepalive_rx,omitempty"`
	ReqReplyMin              uint64           `protobuf:"varint,85,opt,name=req_reply_min,json=reqReplyMin,proto3" json:"req_reply_min,omitempty"`
	ReqReplyMax              uint64           `protobuf:"varint,86,opt,name=req_reply_max,json=reqReplyMax,proto3" json:"req_reply_max,omitempty"`
	ReqReplyAvg              uint64           `protobuf:"varint,87,opt,name=req_reply_avg,json=reqReplyAvg,proto3" json:"req_reply_avg,omitempty"`
	RequestTimeouts          uint64           `protobuf:"varint,88,opt,name=request_timeouts,json=requestTimeouts,proto3" json:"request_timeouts,omitempty"`
	LastTxPceErr             *PceerrBag       `protobuf:"bytes,89,opt,name=last_tx_pce_err,json=lastTxPceErr,proto3" json:"last_tx_pce_err,omitempty"`
	LastRxPceErr             *PceerrBag       `protobuf:"bytes,90,opt,name=last_rx_pce_err,json=lastRxPceErr,proto3" json:"last_rx_pce_err,omitempty"`
	LocalSid                 uint32           `protobuf:"varint,91,opt,name=local_sid,json=localSid,proto3" json:"local_sid,omitempty"`
	RemoteSid                uint32           `protobuf:"varint,92,opt,name=remote_sid,json=remoteSid,proto3" json:"remote_sid,omitempty"`
	MinKeepaliveInterval     uint32           `protobuf:"varint,93,opt,name=min_keepalive_interval,json=minKeepaliveInterval,proto3" json:"min_keepalive_interval,omitempty"`
	MaxDeadInterval          uint32           `protobuf:"varint,94,opt,name=max_dead_interval,json=maxDeadInterval,proto3" json:"max_dead_interval,omitempty"`
	XXX_NoUnkeyedLiteral     struct{}         `json:"-"`
	XXX_unrecognized         []byte           `json:"-"`
	XXX_sizecache            int32            `json:"-"`
}

func (m *PceNeighborBag) Reset()         { *m = PceNeighborBag{} }
func (m *PceNeighborBag) String() string { return proto.CompactTextString(m) }
func (*PceNeighborBag) ProtoMessage()    {}
func (*PceNeighborBag) Descriptor() ([]byte, []int) {
	return fileDescriptor_f8f57b2c295d6328, []int{3}
}

func (m *PceNeighborBag) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PceNeighborBag.Unmarshal(m, b)
}
func (m *PceNeighborBag) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PceNeighborBag.Marshal(b, m, deterministic)
}
func (m *PceNeighborBag) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PceNeighborBag.Merge(m, src)
}
func (m *PceNeighborBag) XXX_Size() int {
	return xxx_messageInfo_PceNeighborBag.Size(m)
}
func (m *PceNeighborBag) XXX_DiscardUnknown() {
	xxx_messageInfo_PceNeighborBag.DiscardUnknown(m)
}

var xxx_messageInfo_PceNeighborBag proto.InternalMessageInfo

func (m *PceNeighborBag) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

func (m *PceNeighborBag) GetPceState() string {
	if m != nil {
		return m.PceState
	}
	return ""
}

func (m *PceNeighborBag) GetPrecedence() uint32 {
	if m != nil {
		return m.Precedence
	}
	return 0
}

func (m *PceNeighborBag) GetStateful() bool {
	if m != nil {
		return m.Stateful
	}
	return false
}

func (m *PceNeighborBag) GetCapabilityUpdate() bool {
	if m != nil {
		return m.CapabilityUpdate
	}
	return false
}

func (m *PceNeighborBag) GetCapabilityInstantiate() bool {
	if m != nil {
		return m.CapabilityInstantiate
	}
	return false
}

func (m *PceNeighborBag) GetCapabilitySegmentRouting() bool {
	if m != nil {
		return m.CapabilitySegmentRouting
	}
	return false
}

func (m *PceNeighborBag) GetTriggeredSyncCapability() bool {
	if m != nil {
		return m.TriggeredSyncCapability
	}
	return false
}

func (m *PceNeighborBag) GetCapabilityDbVersion() bool {
	if m != nil {
		return m.CapabilityDbVersion
	}
	return false
}

func (m *PceNeighborBag) GetDeltaSyncCapability() bool {
	if m != nil {
		return m.DeltaSyncCapability
	}
	return false
}

func (m *PceNeighborBag) GetPcepUpTime() uint32 {
	if m != nil {
		return m.PcepUpTime
	}
	return 0
}

func (m *PceNeighborBag) GetKeepalives() uint32 {
	if m != nil {
		return m.Keepalives
	}
	return 0
}

func (m *PceNeighborBag) GetCandidate() bool {
	if m != nil {
		return m.Candidate
	}
	return false
}

func (m *PceNeighborBag) GetStaticallyConfigured() bool {
	if m != nil {
		return m.StaticallyConfigured
	}
	return false
}

func (m *PceNeighborBag) GetMd5Enabled() bool {
	if m != nil {
		return m.Md5Enabled
	}
	return false
}

func (m *PceNeighborBag) GetKeychainEnabled() bool {
	if m != nil {
		return m.KeychainEnabled
	}
	return false
}

func (m *PceNeighborBag) GetIgPs() []*PcePeerIgpBag {
	if m != nil {
		return m.IgPs
	}
	return nil
}

func (m *PceNeighborBag) GetNegotiatedKeepalive() uint32 {
	if m != nil {
		return m.NegotiatedKeepalive
	}
	return 0
}

func (m *PceNeighborBag) GetNegotatedDeadTime() uint32 {
	if m != nil {
		return m.NegotatedDeadTime
	}
	return 0
}

func (m *PceNeighborBag) GetPceReqRx() uint32 {
	if m != nil {
		return m.PceReqRx
	}
	return 0
}

func (m *PceNeighborBag) GetPceReqTx() uint32 {
	if m != nil {
		return m.PceReqTx
	}
	return 0
}

func (m *PceNeighborBag) GetPceRepRx() uint32 {
	if m != nil {
		return m.PceRepRx
	}
	return 0
}

func (m *PceNeighborBag) GetPceRepTx() uint32 {
	if m != nil {
		return m.PceRepTx
	}
	return 0
}

func (m *PceNeighborBag) GetPceErrRx() uint32 {
	if m != nil {
		return m.PceErrRx
	}
	return 0
}

func (m *PceNeighborBag) GetPceErrTx() uint32 {
	if m != nil {
		return m.PceErrTx
	}
	return 0
}

func (m *PceNeighborBag) GetPceOpenTx() uint32 {
	if m != nil {
		return m.PceOpenTx
	}
	return 0
}

func (m *PceNeighborBag) GetPceOpenRx() uint32 {
	if m != nil {
		return m.PceOpenRx
	}
	return 0
}

func (m *PceNeighborBag) GetPceRptRx() uint32 {
	if m != nil {
		return m.PceRptRx
	}
	return 0
}

func (m *PceNeighborBag) GetPceRptTx() uint32 {
	if m != nil {
		return m.PceRptTx
	}
	return 0
}

func (m *PceNeighborBag) GetPceUpdRx() uint32 {
	if m != nil {
		return m.PceUpdRx
	}
	return 0
}

func (m *PceNeighborBag) GetPceUpdTx() uint32 {
	if m != nil {
		return m.PceUpdTx
	}
	return 0
}

func (m *PceNeighborBag) GetPceInitRx() uint32 {
	if m != nil {
		return m.PceInitRx
	}
	return 0
}

func (m *PceNeighborBag) GetPceInitTx() uint32 {
	if m != nil {
		return m.PceInitTx
	}
	return 0
}

func (m *PceNeighborBag) GetPceKeepaliveTx() uint64 {
	if m != nil {
		return m.PceKeepaliveTx
	}
	return 0
}

func (m *PceNeighborBag) GetPceKeepaliveRx() uint64 {
	if m != nil {
		return m.PceKeepaliveRx
	}
	return 0
}

func (m *PceNeighborBag) GetReqReplyMin() uint64 {
	if m != nil {
		return m.ReqReplyMin
	}
	return 0
}

func (m *PceNeighborBag) GetReqReplyMax() uint64 {
	if m != nil {
		return m.ReqReplyMax
	}
	return 0
}

func (m *PceNeighborBag) GetReqReplyAvg() uint64 {
	if m != nil {
		return m.ReqReplyAvg
	}
	return 0
}

func (m *PceNeighborBag) GetRequestTimeouts() uint64 {
	if m != nil {
		return m.RequestTimeouts
	}
	return 0
}

func (m *PceNeighborBag) GetLastTxPceErr() *PceerrBag {
	if m != nil {
		return m.LastTxPceErr
	}
	return nil
}

func (m *PceNeighborBag) GetLastRxPceErr() *PceerrBag {
	if m != nil {
		return m.LastRxPceErr
	}
	return nil
}

func (m *PceNeighborBag) GetLocalSid() uint32 {
	if m != nil {
		return m.LocalSid
	}
	return 0
}

func (m *PceNeighborBag) GetRemoteSid() uint32 {
	if m != nil {
		return m.RemoteSid
	}
	return 0
}

func (m *PceNeighborBag) GetMinKeepaliveInterval() uint32 {
	if m != nil {
		return m.MinKeepaliveInterval
	}
	return 0
}

func (m *PceNeighborBag) GetMaxDeadInterval() uint32 {
	if m != nil {
		return m.MaxDeadInterval
	}
	return 0
}

func init() {
	proto.RegisterType((*PceNeighborBag_KEYS)(nil), "cisco_ios_xr_mpls_te_oper.mpls_pce.peers.peer.pce_neighbor_bag_KEYS")
	proto.RegisterType((*PcePeerIgpBag)(nil), "cisco_ios_xr_mpls_te_oper.mpls_pce.peers.peer.pce_peer_igp_bag")
	proto.RegisterType((*PceerrBag)(nil), "cisco_ios_xr_mpls_te_oper.mpls_pce.peers.peer.pceerr_bag")
	proto.RegisterType((*PceNeighborBag)(nil), "cisco_ios_xr_mpls_te_oper.mpls_pce.peers.peer.pce_neighbor_bag")
}

func init() { proto.RegisterFile("pce_neighbor_bag.proto", fileDescriptor_f8f57b2c295d6328) }

var fileDescriptor_f8f57b2c295d6328 = []byte{
	// 1071 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x96, 0x7d, 0x73, 0xdb, 0xc4,
	0x13, 0xc7, 0x27, 0x6d, 0xd3, 0x26, 0xe7, 0x38, 0x0f, 0xd7, 0x24, 0xbf, 0xeb, 0xc3, 0x2f, 0x18,
	0x0f, 0x30, 0x06, 0x06, 0xcf, 0x90, 0x34, 0x40, 0x43, 0xa1, 0x84, 0x24, 0x80, 0x09, 0x25, 0x41,
	0x76, 0x02, 0xe5, 0xe9, 0x38, 0xeb, 0xb6, 0xca, 0x51, 0x3d, 0x5c, 0x4e, 0x67, 0x8f, 0xfc, 0xb2,
	0x78, 0x3b, 0xbc, 0x1a, 0xe6, 0x56, 0xb2, 0x24, 0xbb, 0xfc, 0xd3, 0x19, 0xfe, 0xc9, 0x44, 0xdf,
	0xcf, 0x77, 0x6f, 0x77, 0x4e, 0xbb, 0x2b, 0x93, 0x6d, 0xed, 0x03, 0x8f, 0x41, 0x05, 0x57, 0xc3,
	0xc4, 0xf0, 0xa1, 0x08, 0xba, 0xda, 0x24, 0x36, 0xa1, 0x1f, 0xf8, 0x2a, 0xf5, 0x13, 0xae, 0x92,
	0x94, 0x67, 0x86, 0x47, 0x3a, 0x4c, 0xb9, 0x05, 0x9e, 0x68, 0x30, 0x5d, 0x7c, 0xd0, 0x3e, 0x74,
	0x35, 0x80, 0x49, 0xf1, 0x6f, 0xfb, 0x80, 0x6c, 0xcd, 0x1f, 0xc4, 0x4f, 0x4f, 0x9e, 0xf7, 0xe9,
	0x9b, 0x64, 0xc5, 0x19, 0xb8, 0x90, 0xd2, 0x40, 0x9a, 0xb2, 0x85, 0xd6, 0x42, 0x67, 0xd9, 0x6b,
	0x38, 0xed, 0x30, 0x97, 0xda, 0x17, 0x64, 0xdd, 0xc5, 0xa2, 0x4d, 0x05, 0xda, 0xc5, 0xd2, 0x7b,
	0x64, 0xc9, 0xfd, 0x6b, 0x27, 0x1a, 0x8a, 0x90, 0x3b, 0x2a, 0xd0, 0x83, 0x89, 0x06, 0xfa, 0x0e,
	0x59, 0x73, 0x48, 0xc5, 0xa9, 0x15, 0xb1, 0x0f, 0x5c, 0x49, 0x76, 0x03, 0x1d, 0x4d, 0x15, 0xe8,
	0x5e, 0xa1, 0xf6, 0x64, 0xfb, 0xaf, 0x1b, 0x84, 0x68, 0x1f, 0xc0, 0x60, 0x35, 0xb4, 0x45, 0x56,
	0x5c, 0x16, 0xf7, 0x58, 0x9e, 0xda, 0xf4, 0x9c, 0xe3, 0xc4, 0x18, 0x3c, 0xb8, 0x4d, 0x9a, 0x53,
	0xc7, 0x58, 0x84, 0x23, 0xc0, 0x63, 0x9b, 0x5e, 0x23, 0xb7, 0x5c, 0x3a, 0xc9, 0x25, 0xbf, 0x12,
	0xa9, 0xbb, 0x87, 0x98, 0x27, 0xc3, 0x3f, 0xc1, 0xb7, 0xec, 0x66, 0x6b, 0xa1, 0xb3, 0xe4, 0x35,
	0xaf, 0x44, 0x7a, 0xa6, 0x21, 0x3e, 0x43, 0x91, 0xb6, 0x48, 0xc3, 0x79, 0xc6, 0x60, 0x52, 0x95,
	0xc4, 0xec, 0x56, 0x7e, 0x52, 0x4d, 0xa2, 0x6f, 0x93, 0x55, 0x3c, 0xe5, 0x25, 0x80, 0x16, 0xa1,
	0x1a, 0x03, 0x5b, 0x44, 0x53, 0xd3, 0xa9, 0xa7, 0x53, 0x91, 0xbe, 0x55, 0xd8, 0x24, 0x08, 0xc9,
	0xad, 0x8a, 0x80, 0xdd, 0x46, 0xdb, 0x8a, 0x53, 0x8f, 0x41, 0xc8, 0x81, 0x8a, 0xb0, 0x74, 0x57,
	0x96, 0xd1, 0xd3, 0xa2, 0xee, 0x60, 0x51, 0x8d, 0x2b, 0x91, 0x7a, 0xba, 0x28, 0xa9, 0x4d, 0x9a,
	0x46, 0x73, 0x03, 0xd7, 0x23, 0x48, 0xad, 0xbb, 0xb5, 0xa5, 0xbc, 0x28, 0xa3, 0xbd, 0x5c, 0xeb,
	0xc9, 0xf6, 0xdf, 0xab, 0xf9, 0xbb, 0xa8, 0xbf, 0x47, 0xba, 0x49, 0x16, 0xc1, 0x98, 0xc4, 0xb0,
	0x5d, 0xbc, 0xe6, 0xfc, 0x81, 0x3e, 0x20, 0xcb, 0xce, 0x99, 0x5a, 0x61, 0x81, 0xed, 0x21, 0x59,
	0xd2, 0x3e, 0xf4, 0xdd, 0x33, 0xdd, 0x21, 0x44, 0x1b, 0xf0, 0x41, 0x42, 0xec, 0x03, 0x7b, 0x54,
	0x5c, 0x75, 0xa9, 0xd0, 0xfb, 0x64, 0x09, 0x03, 0x5f, 0x8c, 0x42, 0xb6, 0x8f, 0xa5, 0x96, 0xcf,
	0xf4, 0x7d, 0xb2, 0xe1, 0x0b, 0x2d, 0x86, 0x2a, 0x54, 0x76, 0xc2, 0x47, 0x5a, 0xba, 0x04, 0x1f,
	0xa1, 0x69, 0xbd, 0x02, 0x17, 0xa8, 0xd3, 0x7d, 0xb2, 0x5d, 0x33, 0xe7, 0x3d, 0x61, 0x95, 0x8b,
	0xf8, 0x18, 0x23, 0xb6, 0x2a, 0xda, 0xab, 0x20, 0x7d, 0x42, 0xee, 0xd7, 0xc2, 0x52, 0x08, 0x22,
	0x88, 0x2d, 0x37, 0xc9, 0xc8, 0xaa, 0x38, 0x60, 0x9f, 0x60, 0x28, 0xab, 0x1c, 0xfd, 0xdc, 0xe0,
	0xe5, 0x9c, 0x1e, 0x90, 0x7b, 0xd6, 0xa8, 0x20, 0x00, 0x03, 0x92, 0xa7, 0x93, 0xd8, 0xe7, 0x95,
	0x95, 0x3d, 0xc6, 0xe0, 0xff, 0x95, 0x86, 0xfe, 0x24, 0xf6, 0x8f, 0x4a, 0x4c, 0x77, 0x49, 0xad,
	0x24, 0x2e, 0x87, 0x7c, 0xda, 0x22, 0x07, 0x18, 0x77, 0xb7, 0x82, 0xc7, 0xc3, 0xcb, 0xa2, 0x55,
	0x76, 0xc9, 0x96, 0x84, 0xd0, 0x8a, 0x57, 0x72, 0x7d, 0x9a, 0xc7, 0x20, 0x9c, 0xcb, 0x93, 0xb7,
	0xbb, 0xe6, 0x23, 0x9d, 0x77, 0xcd, 0x93, 0xb2, 0xdd, 0xf5, 0x85, 0xc6, 0x9e, 0xd9, 0x21, 0xa4,
	0xec, 0xbd, 0x94, 0x7d, 0x96, 0xf3, 0x4a, 0xa1, 0x0f, 0xc9, 0xb2, 0x2f, 0x62, 0xa9, 0xf0, 0xfe,
	0x3f, 0xc7, 0x4c, 0x95, 0x40, 0xf7, 0xc8, 0x96, 0x7b, 0x63, 0xca, 0x17, 0x61, 0x38, 0xe1, 0x7e,
	0x12, 0xbf, 0x50, 0xc1, 0xc8, 0x80, 0x64, 0x4f, 0xd1, 0xb9, 0x59, 0xc1, 0xa3, 0x92, 0xd1, 0x37,
	0x48, 0x23, 0x92, 0xfb, 0x1c, 0x62, 0x31, 0x0c, 0x41, 0xb2, 0x2f, 0xd0, 0x4a, 0x22, 0xb9, 0x7f,
	0x92, 0x2b, 0xf4, 0x5d, 0xb2, 0xfe, 0x12, 0x26, 0xfe, 0x95, 0x50, 0x71, 0xe9, 0x3a, 0x44, 0xd7,
	0xda, 0x54, 0x9f, 0x5a, 0x07, 0x64, 0x51, 0x05, 0x5c, 0xa7, 0xec, 0xcb, 0xd6, 0xcd, 0x4e, 0x63,
	0xf7, 0x69, 0xf7, 0xb5, 0x16, 0x56, 0x77, 0x7e, 0xe3, 0x78, 0xb7, 0x54, 0x70, 0x9e, 0xd2, 0x0f,
	0xc9, 0x66, 0x0c, 0x41, 0x82, 0x5d, 0x22, 0x6b, 0xb3, 0x79, 0x84, 0xd7, 0x73, 0xb7, 0x62, 0xd5,
	0x84, 0x76, 0x49, 0x2e, 0x63, 0x44, 0x35, 0xa6, 0xc7, 0x18, 0xb1, 0x51, 0xa2, 0x72, 0x56, 0x1f,
	0xe2, 0x5a, 0x72, 0x83, 0xc8, 0x4d, 0xc6, 0x4e, 0xd0, 0xe6, 0x26, 0xc7, 0x83, 0x6b, 0x2f, 0xab,
	0x53, 0x9b, 0xb1, 0xaf, 0xea, 0x74, 0x50, 0xa3, 0xda, 0xc5, 0x7e, 0x5d, 0xa3, 0xda, 0x9b, 0xa1,
	0x36, 0x63, 0xdf, 0xd4, 0x69, 0x15, 0xeb, 0xd6, 0x9b, 0xc9, 0x58, 0xaf, 0xa4, 0x27, 0xc6, 0x78,
	0x33, 0xd4, 0x66, 0xec, 0xdb, 0x3a, 0x1d, 0x64, 0x74, 0x87, 0xb8, 0x2d, 0x98, 0xaf, 0x3d, 0x9b,
	0xb1, 0x53, 0xc4, 0x6e, 0xfe, 0xdd, 0xca, 0x9b, 0xe3, 0x26, 0x63, 0xdf, 0xcd, 0xf0, 0x5a, 0x65,
	0xda, 0x3a, 0xfc, 0xac, 0xaa, 0x4c, 0xdb, 0x59, 0x6a, 0x33, 0xf6, 0x7d, 0x9d, 0x56, 0x75, 0x8f,
	0xb4, 0x74, 0xb1, 0x67, 0x25, 0xbd, 0xd0, 0xd2, 0x9b, 0xa1, 0x36, 0x63, 0xe7, 0x75, 0x5a, 0xd5,
	0xa5, 0x62, 0x85, 0x89, 0x7f, 0x28, 0xeb, 0xea, 0xc5, 0xca, 0x65, 0xae, 0x73, 0x9b, 0x31, 0x6f,
	0x86, 0x0f, 0x32, 0xda, 0xc9, 0xd7, 0x61, 0xd9, 0x07, 0xce, 0xd4, 0x6f, 0x2d, 0x74, 0x6e, 0x79,
	0xab, 0xda, 0x87, 0xb2, 0x07, 0xfe, 0xcd, 0x69, 0x32, 0x36, 0x78, 0xd5, 0xe9, 0x65, 0xb8, 0x87,
	0xdd, 0xbb, 0x07, 0x1d, 0x4e, 0x78, 0xa4, 0x62, 0x76, 0x81, 0xb6, 0x86, 0x81, 0x6b, 0xcf, 0x69,
	0xcf, 0x54, 0x3c, 0xe7, 0x11, 0x19, 0xbb, 0x9c, 0xf3, 0x88, 0xb9, 0x73, 0xc4, 0x38, 0x60, 0x3f,
	0xce, 0x7a, 0x0e, 0xc7, 0x81, 0x9b, 0xa7, 0xe9, 0xc2, 0x77, 0x4d, 0x99, 0x8c, 0x6c, 0xca, 0x7e,
	0x42, 0xdb, 0x5a, 0xa1, 0x0f, 0x0a, 0x99, 0xfe, 0x41, 0xd6, 0x42, 0xe1, 0x7c, 0x19, 0x2f, 0x1a,
	0x81, 0x3d, 0x6f, 0x2d, 0x74, 0x1a, 0xbb, 0x8f, 0x5f, 0x7f, 0xb2, 0x8a, 0x6f, 0xae, 0xb7, 0xe2,
	0x4e, 0x1c, 0x64, 0xe7, 0xd8, 0x46, 0x65, 0x06, 0x53, 0x65, 0xf8, 0xf9, 0x3f, 0xc9, 0xe0, 0x4d,
	0x33, 0x3c, 0x20, 0xcb, 0x61, 0xe2, 0x8b, 0x90, 0xa7, 0x4a, 0xb2, 0x5f, 0xf2, 0x5e, 0x40, 0xa1,
	0xaf, 0x24, 0xfd, 0x3f, 0x21, 0x06, 0xa2, 0xc4, 0x02, 0xd2, 0x5f, 0xf3, 0x57, 0x9d, 0x2b, 0x0e,
	0x3f, 0x22, 0xdb, 0x91, 0xaa, 0x7d, 0x8e, 0xb9, 0x8a, 0x2d, 0x98, 0xb1, 0x08, 0xd9, 0x6f, 0x68,
	0xdd, 0x8c, 0x54, 0xf5, 0x59, 0xee, 0x15, 0x8c, 0xbe, 0x47, 0x36, 0x22, 0x91, 0xe5, 0x63, 0x5f,
	0x06, 0xfc, 0x8e, 0x01, 0x6b, 0x91, 0xc8, 0xdc, 0xd0, 0x4f, 0xbd, 0xc3, 0xdb, 0xf8, 0xcb, 0x6a,
	0xef, 0x9f, 0x00, 0x00, 0x00, 0xff, 0xff, 0xf2, 0x06, 0x20, 0x13, 0x73, 0x09, 0x00, 0x00,
}
