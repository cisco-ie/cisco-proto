/*
Copyright 2019 Cisco Systems

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: mpls_te_attribute_set.proto

package cisco_ios_xr_mpls_te_oper_mpls_te_standby_attribute_sets_attribute_set

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type MplsTeAttributeSet_KEYS struct {
	AttributeSetType     string   `protobuf:"bytes,1,opt,name=attribute_set_type,json=attributeSetType,proto3" json:"attribute_set_type,omitempty"`
	AttributeSetName     string   `protobuf:"bytes,2,opt,name=attribute_set_name,json=attributeSetName,proto3" json:"attribute_set_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MplsTeAttributeSet_KEYS) Reset()         { *m = MplsTeAttributeSet_KEYS{} }
func (m *MplsTeAttributeSet_KEYS) String() string { return proto.CompactTextString(m) }
func (*MplsTeAttributeSet_KEYS) ProtoMessage()    {}
func (*MplsTeAttributeSet_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_afe0d13f6d8225f2, []int{0}
}

func (m *MplsTeAttributeSet_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsTeAttributeSet_KEYS.Unmarshal(m, b)
}
func (m *MplsTeAttributeSet_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsTeAttributeSet_KEYS.Marshal(b, m, deterministic)
}
func (m *MplsTeAttributeSet_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsTeAttributeSet_KEYS.Merge(m, src)
}
func (m *MplsTeAttributeSet_KEYS) XXX_Size() int {
	return xxx_messageInfo_MplsTeAttributeSet_KEYS.Size(m)
}
func (m *MplsTeAttributeSet_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsTeAttributeSet_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_MplsTeAttributeSet_KEYS proto.InternalMessageInfo

func (m *MplsTeAttributeSet_KEYS) GetAttributeSetType() string {
	if m != nil {
		return m.AttributeSetType
	}
	return ""
}

func (m *MplsTeAttributeSet_KEYS) GetAttributeSetName() string {
	if m != nil {
		return m.AttributeSetName
	}
	return ""
}

type AffinityNameBag struct {
	ConstraintType          uint32   `protobuf:"varint,1,opt,name=constraint_type,json=constraintType,proto3" json:"constraint_type,omitempty"`
	ConstraintValue         uint32   `protobuf:"varint,2,opt,name=constraint_value,json=constraintValue,proto3" json:"constraint_value,omitempty"`
	ForwardRefValue         uint32   `protobuf:"varint,3,opt,name=forward_ref_value,json=forwardRefValue,proto3" json:"forward_ref_value,omitempty"`
	ConstraintExtendedValue []uint32 `protobuf:"varint,4,rep,packed,name=constraint_extended_value,json=constraintExtendedValue,proto3" json:"constraint_extended_value,omitempty"`
	ExtendedForwardRefValue []uint32 `protobuf:"varint,5,rep,packed,name=extended_forward_ref_value,json=extendedForwardRefValue,proto3" json:"extended_forward_ref_value,omitempty"`
	XXX_NoUnkeyedLiteral    struct{} `json:"-"`
	XXX_unrecognized        []byte   `json:"-"`
	XXX_sizecache           int32    `json:"-"`
}

func (m *AffinityNameBag) Reset()         { *m = AffinityNameBag{} }
func (m *AffinityNameBag) String() string { return proto.CompactTextString(m) }
func (*AffinityNameBag) ProtoMessage()    {}
func (*AffinityNameBag) Descriptor() ([]byte, []int) {
	return fileDescriptor_afe0d13f6d8225f2, []int{1}
}

func (m *AffinityNameBag) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AffinityNameBag.Unmarshal(m, b)
}
func (m *AffinityNameBag) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AffinityNameBag.Marshal(b, m, deterministic)
}
func (m *AffinityNameBag) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AffinityNameBag.Merge(m, src)
}
func (m *AffinityNameBag) XXX_Size() int {
	return xxx_messageInfo_AffinityNameBag.Size(m)
}
func (m *AffinityNameBag) XXX_DiscardUnknown() {
	xxx_messageInfo_AffinityNameBag.DiscardUnknown(m)
}

var xxx_messageInfo_AffinityNameBag proto.InternalMessageInfo

func (m *AffinityNameBag) GetConstraintType() uint32 {
	if m != nil {
		return m.ConstraintType
	}
	return 0
}

func (m *AffinityNameBag) GetConstraintValue() uint32 {
	if m != nil {
		return m.ConstraintValue
	}
	return 0
}

func (m *AffinityNameBag) GetForwardRefValue() uint32 {
	if m != nil {
		return m.ForwardRefValue
	}
	return 0
}

func (m *AffinityNameBag) GetConstraintExtendedValue() []uint32 {
	if m != nil {
		return m.ConstraintExtendedValue
	}
	return nil
}

func (m *AffinityNameBag) GetExtendedForwardRefValue() []uint32 {
	if m != nil {
		return m.ExtendedForwardRefValue
	}
	return nil
}

type MplsTeTunnelsAffinityInfo struct {
	AffinityBits         uint32             `protobuf:"varint,1,opt,name=affinity_bits,json=affinityBits,proto3" json:"affinity_bits,omitempty"`
	AffinityMask         uint32             `protobuf:"varint,2,opt,name=affinity_mask,json=affinityMask,proto3" json:"affinity_mask,omitempty"`
	NamedAffinity        []*AffinityNameBag `protobuf:"bytes,3,rep,name=named_affinity,json=namedAffinity,proto3" json:"named_affinity,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *MplsTeTunnelsAffinityInfo) Reset()         { *m = MplsTeTunnelsAffinityInfo{} }
func (m *MplsTeTunnelsAffinityInfo) String() string { return proto.CompactTextString(m) }
func (*MplsTeTunnelsAffinityInfo) ProtoMessage()    {}
func (*MplsTeTunnelsAffinityInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_afe0d13f6d8225f2, []int{2}
}

func (m *MplsTeTunnelsAffinityInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsTeTunnelsAffinityInfo.Unmarshal(m, b)
}
func (m *MplsTeTunnelsAffinityInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsTeTunnelsAffinityInfo.Marshal(b, m, deterministic)
}
func (m *MplsTeTunnelsAffinityInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsTeTunnelsAffinityInfo.Merge(m, src)
}
func (m *MplsTeTunnelsAffinityInfo) XXX_Size() int {
	return xxx_messageInfo_MplsTeTunnelsAffinityInfo.Size(m)
}
func (m *MplsTeTunnelsAffinityInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsTeTunnelsAffinityInfo.DiscardUnknown(m)
}

var xxx_messageInfo_MplsTeTunnelsAffinityInfo proto.InternalMessageInfo

func (m *MplsTeTunnelsAffinityInfo) GetAffinityBits() uint32 {
	if m != nil {
		return m.AffinityBits
	}
	return 0
}

func (m *MplsTeTunnelsAffinityInfo) GetAffinityMask() uint32 {
	if m != nil {
		return m.AffinityMask
	}
	return 0
}

func (m *MplsTeTunnelsAffinityInfo) GetNamedAffinity() []*AffinityNameBag {
	if m != nil {
		return m.NamedAffinity
	}
	return nil
}

type MplsTeAttributeSetVersion struct {
	AttributeType        string   `protobuf:"bytes,1,opt,name=attribute_type,json=attributeType,proto3" json:"attribute_type,omitempty"`
	Generation           uint32   `protobuf:"varint,2,opt,name=generation,proto3" json:"generation,omitempty"`
	IsDefault            bool     `protobuf:"varint,3,opt,name=is_default,json=isDefault,proto3" json:"is_default,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MplsTeAttributeSetVersion) Reset()         { *m = MplsTeAttributeSetVersion{} }
func (m *MplsTeAttributeSetVersion) String() string { return proto.CompactTextString(m) }
func (*MplsTeAttributeSetVersion) ProtoMessage()    {}
func (*MplsTeAttributeSetVersion) Descriptor() ([]byte, []int) {
	return fileDescriptor_afe0d13f6d8225f2, []int{3}
}

func (m *MplsTeAttributeSetVersion) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsTeAttributeSetVersion.Unmarshal(m, b)
}
func (m *MplsTeAttributeSetVersion) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsTeAttributeSetVersion.Marshal(b, m, deterministic)
}
func (m *MplsTeAttributeSetVersion) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsTeAttributeSetVersion.Merge(m, src)
}
func (m *MplsTeAttributeSetVersion) XXX_Size() int {
	return xxx_messageInfo_MplsTeAttributeSetVersion.Size(m)
}
func (m *MplsTeAttributeSetVersion) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsTeAttributeSetVersion.DiscardUnknown(m)
}

var xxx_messageInfo_MplsTeAttributeSetVersion proto.InternalMessageInfo

func (m *MplsTeAttributeSetVersion) GetAttributeType() string {
	if m != nil {
		return m.AttributeType
	}
	return ""
}

func (m *MplsTeAttributeSetVersion) GetGeneration() uint32 {
	if m != nil {
		return m.Generation
	}
	return 0
}

func (m *MplsTeAttributeSetVersion) GetIsDefault() bool {
	if m != nil {
		return m.IsDefault
	}
	return false
}

type MplsTeAttributeSetBfdRevPath struct {
	PathType             string   `protobuf:"bytes,1,opt,name=path_type,json=pathType,proto3" json:"path_type,omitempty"`
	BindingLabel         uint32   `protobuf:"varint,2,opt,name=binding_label,json=bindingLabel,proto3" json:"binding_label,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MplsTeAttributeSetBfdRevPath) Reset()         { *m = MplsTeAttributeSetBfdRevPath{} }
func (m *MplsTeAttributeSetBfdRevPath) String() string { return proto.CompactTextString(m) }
func (*MplsTeAttributeSetBfdRevPath) ProtoMessage()    {}
func (*MplsTeAttributeSetBfdRevPath) Descriptor() ([]byte, []int) {
	return fileDescriptor_afe0d13f6d8225f2, []int{4}
}

func (m *MplsTeAttributeSetBfdRevPath) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsTeAttributeSetBfdRevPath.Unmarshal(m, b)
}
func (m *MplsTeAttributeSetBfdRevPath) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsTeAttributeSetBfdRevPath.Marshal(b, m, deterministic)
}
func (m *MplsTeAttributeSetBfdRevPath) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsTeAttributeSetBfdRevPath.Merge(m, src)
}
func (m *MplsTeAttributeSetBfdRevPath) XXX_Size() int {
	return xxx_messageInfo_MplsTeAttributeSetBfdRevPath.Size(m)
}
func (m *MplsTeAttributeSetBfdRevPath) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsTeAttributeSetBfdRevPath.DiscardUnknown(m)
}

var xxx_messageInfo_MplsTeAttributeSetBfdRevPath proto.InternalMessageInfo

func (m *MplsTeAttributeSetBfdRevPath) GetPathType() string {
	if m != nil {
		return m.PathType
	}
	return ""
}

func (m *MplsTeAttributeSetBfdRevPath) GetBindingLabel() uint32 {
	if m != nil {
		return m.BindingLabel
	}
	return 0
}

type MplsTeAttributeSetPathOption struct {
	ConfiguredBandwidth                 uint32                        `protobuf:"varint,1,opt,name=configured_bandwidth,json=configuredBandwidth,proto3" json:"configured_bandwidth,omitempty"`
	CostLimit                           uint32                        `protobuf:"varint,2,opt,name=cost_limit,json=costLimit,proto3" json:"cost_limit,omitempty"`
	DsteClassType                       uint32                        `protobuf:"varint,3,opt,name=dste_class_type,json=dsteClassType,proto3" json:"dste_class_type,omitempty"`
	BandwidthType                       string                        `protobuf:"bytes,4,opt,name=bandwidth_type,json=bandwidthType,proto3" json:"bandwidth_type,omitempty"`
	IsBandwidthConfigured               bool                          `protobuf:"varint,5,opt,name=is_bandwidth_configured,json=isBandwidthConfigured,proto3" json:"is_bandwidth_configured,omitempty"`
	IsCostLimitConfigured               bool                          `protobuf:"varint,6,opt,name=is_cost_limit_configured,json=isCostLimitConfigured,proto3" json:"is_cost_limit_configured,omitempty"`
	Affinity                            *MplsTeTunnelsAffinityInfo    `protobuf:"bytes,7,opt,name=affinity,proto3" json:"affinity,omitempty"`
	IsAffinityConfigured                bool                          `protobuf:"varint,8,opt,name=is_affinity_configured,json=isAffinityConfigured,proto3" json:"is_affinity_configured,omitempty"`
	TunnelId                            []uint32                      `protobuf:"varint,9,rep,packed,name=tunnel_id,json=tunnelId,proto3" json:"tunnel_id,omitempty"`
	Generation                          uint32                        `protobuf:"varint,10,opt,name=generation,proto3" json:"generation,omitempty"`
	VersionInfo                         []*MplsTeAttributeSetVersion  `protobuf:"bytes,11,rep,name=version_info,json=versionInfo,proto3" json:"version_info,omitempty"`
	PathInvalidationTimeout             uint32                        `protobuf:"varint,12,opt,name=path_invalidation_timeout,json=pathInvalidationTimeout,proto3" json:"path_invalidation_timeout,omitempty"`
	PathInvalidationAction              uint32                        `protobuf:"varint,13,opt,name=path_invalidation_action,json=pathInvalidationAction,proto3" json:"path_invalidation_action,omitempty"`
	IsPathInvalidationTimeoutConfigured bool                          `protobuf:"varint,14,opt,name=is_path_invalidation_timeout_configured,json=isPathInvalidationTimeoutConfigured,proto3" json:"is_path_invalidation_timeout_configured,omitempty"`
	IsPathInvalidationActionConfigured  bool                          `protobuf:"varint,15,opt,name=is_path_invalidation_action_configured,json=isPathInvalidationActionConfigured,proto3" json:"is_path_invalidation_action_configured,omitempty"`
	ExcludeListName                     string                        `protobuf:"bytes,16,opt,name=exclude_list_name,json=excludeListName,proto3" json:"exclude_list_name,omitempty"`
	IsExcludeListNameConfigured         bool                          `protobuf:"varint,17,opt,name=is_exclude_list_name_configured,json=isExcludeListNameConfigured,proto3" json:"is_exclude_list_name_configured,omitempty"`
	IsPceConfigured                     bool                          `protobuf:"varint,18,opt,name=is_pce_configured,json=isPceConfigured,proto3" json:"is_pce_configured,omitempty"`
	IsPceDisjSourceConfigured           bool                          `protobuf:"varint,19,opt,name=is_pce_disj_source_configured,json=isPceDisjSourceConfigured,proto3" json:"is_pce_disj_source_configured,omitempty"`
	IsPceDisjTypeConfigured             bool                          `protobuf:"varint,20,opt,name=is_pce_disj_type_configured,json=isPceDisjTypeConfigured,proto3" json:"is_pce_disj_type_configured,omitempty"`
	IsPceDisjGroupIdConfigured          bool                          `protobuf:"varint,21,opt,name=is_pce_disj_group_id_configured,json=isPceDisjGroupIdConfigured,proto3" json:"is_pce_disj_group_id_configured,omitempty"`
	PcedpSourceAddress                  uint32                        `protobuf:"varint,22,opt,name=pcedp_source_address,json=pcedpSourceAddress,proto3" json:"pcedp_source_address,omitempty"`
	PcedpType                           string                        `protobuf:"bytes,23,opt,name=pcedp_type,json=pcedpType,proto3" json:"pcedp_type,omitempty"`
	PcedpGroupId                        uint32                        `protobuf:"varint,24,opt,name=pcedp_group_id,json=pcedpGroupId,proto3" json:"pcedp_group_id,omitempty"`
	IsPcebDjSourceConfigured            bool                          `protobuf:"varint,25,opt,name=is_pceb_dj_source_configured,json=isPcebDjSourceConfigured,proto3" json:"is_pceb_dj_source_configured,omitempty"`
	IsPcebdGroupIdConfigured            bool                          `protobuf:"varint,26,opt,name=is_pcebd_group_id_configured,json=isPcebdGroupIdConfigured,proto3" json:"is_pcebd_group_id_configured,omitempty"`
	PcebdSourceAddress                  uint32                        `protobuf:"varint,27,opt,name=pcebd_source_address,json=pcebdSourceAddress,proto3" json:"pcebd_source_address,omitempty"`
	PcebdGroupId                        uint32                        `protobuf:"varint,28,opt,name=pcebd_group_id,json=pcebdGroupId,proto3" json:"pcebd_group_id,omitempty"`
	BfdReversePath                      *MplsTeAttributeSetBfdRevPath `protobuf:"bytes,29,opt,name=bfd_reverse_path,json=bfdReversePath,proto3" json:"bfd_reverse_path,omitempty"`
	IsBfdReversePatConfigured           bool                          `protobuf:"varint,30,opt,name=is_bfd_reverse_pat_configured,json=isBfdReversePatConfigured,proto3" json:"is_bfd_reverse_pat_configured,omitempty"`
	XXX_NoUnkeyedLiteral                struct{}                      `json:"-"`
	XXX_unrecognized                    []byte                        `json:"-"`
	XXX_sizecache                       int32                         `json:"-"`
}

func (m *MplsTeAttributeSetPathOption) Reset()         { *m = MplsTeAttributeSetPathOption{} }
func (m *MplsTeAttributeSetPathOption) String() string { return proto.CompactTextString(m) }
func (*MplsTeAttributeSetPathOption) ProtoMessage()    {}
func (*MplsTeAttributeSetPathOption) Descriptor() ([]byte, []int) {
	return fileDescriptor_afe0d13f6d8225f2, []int{5}
}

func (m *MplsTeAttributeSetPathOption) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsTeAttributeSetPathOption.Unmarshal(m, b)
}
func (m *MplsTeAttributeSetPathOption) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsTeAttributeSetPathOption.Marshal(b, m, deterministic)
}
func (m *MplsTeAttributeSetPathOption) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsTeAttributeSetPathOption.Merge(m, src)
}
func (m *MplsTeAttributeSetPathOption) XXX_Size() int {
	return xxx_messageInfo_MplsTeAttributeSetPathOption.Size(m)
}
func (m *MplsTeAttributeSetPathOption) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsTeAttributeSetPathOption.DiscardUnknown(m)
}

var xxx_messageInfo_MplsTeAttributeSetPathOption proto.InternalMessageInfo

func (m *MplsTeAttributeSetPathOption) GetConfiguredBandwidth() uint32 {
	if m != nil {
		return m.ConfiguredBandwidth
	}
	return 0
}

func (m *MplsTeAttributeSetPathOption) GetCostLimit() uint32 {
	if m != nil {
		return m.CostLimit
	}
	return 0
}

func (m *MplsTeAttributeSetPathOption) GetDsteClassType() uint32 {
	if m != nil {
		return m.DsteClassType
	}
	return 0
}

func (m *MplsTeAttributeSetPathOption) GetBandwidthType() string {
	if m != nil {
		return m.BandwidthType
	}
	return ""
}

func (m *MplsTeAttributeSetPathOption) GetIsBandwidthConfigured() bool {
	if m != nil {
		return m.IsBandwidthConfigured
	}
	return false
}

func (m *MplsTeAttributeSetPathOption) GetIsCostLimitConfigured() bool {
	if m != nil {
		return m.IsCostLimitConfigured
	}
	return false
}

func (m *MplsTeAttributeSetPathOption) GetAffinity() *MplsTeTunnelsAffinityInfo {
	if m != nil {
		return m.Affinity
	}
	return nil
}

func (m *MplsTeAttributeSetPathOption) GetIsAffinityConfigured() bool {
	if m != nil {
		return m.IsAffinityConfigured
	}
	return false
}

func (m *MplsTeAttributeSetPathOption) GetTunnelId() []uint32 {
	if m != nil {
		return m.TunnelId
	}
	return nil
}

func (m *MplsTeAttributeSetPathOption) GetGeneration() uint32 {
	if m != nil {
		return m.Generation
	}
	return 0
}

func (m *MplsTeAttributeSetPathOption) GetVersionInfo() []*MplsTeAttributeSetVersion {
	if m != nil {
		return m.VersionInfo
	}
	return nil
}

func (m *MplsTeAttributeSetPathOption) GetPathInvalidationTimeout() uint32 {
	if m != nil {
		return m.PathInvalidationTimeout
	}
	return 0
}

func (m *MplsTeAttributeSetPathOption) GetPathInvalidationAction() uint32 {
	if m != nil {
		return m.PathInvalidationAction
	}
	return 0
}

func (m *MplsTeAttributeSetPathOption) GetIsPathInvalidationTimeoutConfigured() bool {
	if m != nil {
		return m.IsPathInvalidationTimeoutConfigured
	}
	return false
}

func (m *MplsTeAttributeSetPathOption) GetIsPathInvalidationActionConfigured() bool {
	if m != nil {
		return m.IsPathInvalidationActionConfigured
	}
	return false
}

func (m *MplsTeAttributeSetPathOption) GetExcludeListName() string {
	if m != nil {
		return m.ExcludeListName
	}
	return ""
}

func (m *MplsTeAttributeSetPathOption) GetIsExcludeListNameConfigured() bool {
	if m != nil {
		return m.IsExcludeListNameConfigured
	}
	return false
}

func (m *MplsTeAttributeSetPathOption) GetIsPceConfigured() bool {
	if m != nil {
		return m.IsPceConfigured
	}
	return false
}

func (m *MplsTeAttributeSetPathOption) GetIsPceDisjSourceConfigured() bool {
	if m != nil {
		return m.IsPceDisjSourceConfigured
	}
	return false
}

func (m *MplsTeAttributeSetPathOption) GetIsPceDisjTypeConfigured() bool {
	if m != nil {
		return m.IsPceDisjTypeConfigured
	}
	return false
}

func (m *MplsTeAttributeSetPathOption) GetIsPceDisjGroupIdConfigured() bool {
	if m != nil {
		return m.IsPceDisjGroupIdConfigured
	}
	return false
}

func (m *MplsTeAttributeSetPathOption) GetPcedpSourceAddress() uint32 {
	if m != nil {
		return m.PcedpSourceAddress
	}
	return 0
}

func (m *MplsTeAttributeSetPathOption) GetPcedpType() string {
	if m != nil {
		return m.PcedpType
	}
	return ""
}

func (m *MplsTeAttributeSetPathOption) GetPcedpGroupId() uint32 {
	if m != nil {
		return m.PcedpGroupId
	}
	return 0
}

func (m *MplsTeAttributeSetPathOption) GetIsPcebDjSourceConfigured() bool {
	if m != nil {
		return m.IsPcebDjSourceConfigured
	}
	return false
}

func (m *MplsTeAttributeSetPathOption) GetIsPcebdGroupIdConfigured() bool {
	if m != nil {
		return m.IsPcebdGroupIdConfigured
	}
	return false
}

func (m *MplsTeAttributeSetPathOption) GetPcebdSourceAddress() uint32 {
	if m != nil {
		return m.PcebdSourceAddress
	}
	return 0
}

func (m *MplsTeAttributeSetPathOption) GetPcebdGroupId() uint32 {
	if m != nil {
		return m.PcebdGroupId
	}
	return 0
}

func (m *MplsTeAttributeSetPathOption) GetBfdReversePath() *MplsTeAttributeSetBfdRevPath {
	if m != nil {
		return m.BfdReversePath
	}
	return nil
}

func (m *MplsTeAttributeSetPathOption) GetIsBfdReversePatConfigured() bool {
	if m != nil {
		return m.IsBfdReversePatConfigured
	}
	return false
}

type MplsTeAttributeSetSigName struct {
	Name                   string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	SourceType             string   `protobuf:"bytes,2,opt,name=source_type,json=sourceType,proto3" json:"source_type,omitempty"`
	ProtectedInterfaceType string   `protobuf:"bytes,3,opt,name=protected_interface_type,json=protectedInterfaceType,proto3" json:"protected_interface_type,omitempty"`
	IsMpAddresses          bool     `protobuf:"varint,4,opt,name=is_mp_addresses,json=isMpAddresses,proto3" json:"is_mp_addresses,omitempty"`
	XXX_NoUnkeyedLiteral   struct{} `json:"-"`
	XXX_unrecognized       []byte   `json:"-"`
	XXX_sizecache          int32    `json:"-"`
}

func (m *MplsTeAttributeSetSigName) Reset()         { *m = MplsTeAttributeSetSigName{} }
func (m *MplsTeAttributeSetSigName) String() string { return proto.CompactTextString(m) }
func (*MplsTeAttributeSetSigName) ProtoMessage()    {}
func (*MplsTeAttributeSetSigName) Descriptor() ([]byte, []int) {
	return fileDescriptor_afe0d13f6d8225f2, []int{6}
}

func (m *MplsTeAttributeSetSigName) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsTeAttributeSetSigName.Unmarshal(m, b)
}
func (m *MplsTeAttributeSetSigName) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsTeAttributeSetSigName.Marshal(b, m, deterministic)
}
func (m *MplsTeAttributeSetSigName) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsTeAttributeSetSigName.Merge(m, src)
}
func (m *MplsTeAttributeSetSigName) XXX_Size() int {
	return xxx_messageInfo_MplsTeAttributeSetSigName.Size(m)
}
func (m *MplsTeAttributeSetSigName) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsTeAttributeSetSigName.DiscardUnknown(m)
}

var xxx_messageInfo_MplsTeAttributeSetSigName proto.InternalMessageInfo

func (m *MplsTeAttributeSetSigName) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *MplsTeAttributeSetSigName) GetSourceType() string {
	if m != nil {
		return m.SourceType
	}
	return ""
}

func (m *MplsTeAttributeSetSigName) GetProtectedInterfaceType() string {
	if m != nil {
		return m.ProtectedInterfaceType
	}
	return ""
}

func (m *MplsTeAttributeSetSigName) GetIsMpAddresses() bool {
	if m != nil {
		return m.IsMpAddresses
	}
	return false
}

type MplsTeLoggingAttributes struct {
	LspState                      bool     `protobuf:"varint,1,opt,name=lsp_state,json=lspState,proto3" json:"lsp_state,omitempty"`
	S2LState                      bool     `protobuf:"varint,2,opt,name=s2l_state,json=s2lState,proto3" json:"s2l_state,omitempty"`
	LspReRoute                    bool     `protobuf:"varint,3,opt,name=lsp_re_route,json=lspReRoute,proto3" json:"lsp_re_route,omitempty"`
	LspReOpt                      bool     `protobuf:"varint,4,opt,name=lsp_re_opt,json=lspReOpt,proto3" json:"lsp_re_opt,omitempty"`
	LspInsufficientBw             bool     `protobuf:"varint,5,opt,name=lsp_insufficient_bw,json=lspInsufficientBw,proto3" json:"lsp_insufficient_bw,omitempty"`
	LspBandwidthChange            bool     `protobuf:"varint,6,opt,name=lsp_bandwidth_change,json=lspBandwidthChange,proto3" json:"lsp_bandwidth_change,omitempty"`
	LspPcalcFailureLoggingEnabled bool     `protobuf:"varint,7,opt,name=lsp_pcalc_failure_logging_enabled,json=lspPcalcFailureLoggingEnabled,proto3" json:"lsp_pcalc_failure_logging_enabled,omitempty"`
	AllLoggingEnabled             bool     `protobuf:"varint,8,opt,name=all_logging_enabled,json=allLoggingEnabled,proto3" json:"all_logging_enabled,omitempty"`
	XXX_NoUnkeyedLiteral          struct{} `json:"-"`
	XXX_unrecognized              []byte   `json:"-"`
	XXX_sizecache                 int32    `json:"-"`
}

func (m *MplsTeLoggingAttributes) Reset()         { *m = MplsTeLoggingAttributes{} }
func (m *MplsTeLoggingAttributes) String() string { return proto.CompactTextString(m) }
func (*MplsTeLoggingAttributes) ProtoMessage()    {}
func (*MplsTeLoggingAttributes) Descriptor() ([]byte, []int) {
	return fileDescriptor_afe0d13f6d8225f2, []int{7}
}

func (m *MplsTeLoggingAttributes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsTeLoggingAttributes.Unmarshal(m, b)
}
func (m *MplsTeLoggingAttributes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsTeLoggingAttributes.Marshal(b, m, deterministic)
}
func (m *MplsTeLoggingAttributes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsTeLoggingAttributes.Merge(m, src)
}
func (m *MplsTeLoggingAttributes) XXX_Size() int {
	return xxx_messageInfo_MplsTeLoggingAttributes.Size(m)
}
func (m *MplsTeLoggingAttributes) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsTeLoggingAttributes.DiscardUnknown(m)
}

var xxx_messageInfo_MplsTeLoggingAttributes proto.InternalMessageInfo

func (m *MplsTeLoggingAttributes) GetLspState() bool {
	if m != nil {
		return m.LspState
	}
	return false
}

func (m *MplsTeLoggingAttributes) GetS2LState() bool {
	if m != nil {
		return m.S2LState
	}
	return false
}

func (m *MplsTeLoggingAttributes) GetLspReRoute() bool {
	if m != nil {
		return m.LspReRoute
	}
	return false
}

func (m *MplsTeLoggingAttributes) GetLspReOpt() bool {
	if m != nil {
		return m.LspReOpt
	}
	return false
}

func (m *MplsTeLoggingAttributes) GetLspInsufficientBw() bool {
	if m != nil {
		return m.LspInsufficientBw
	}
	return false
}

func (m *MplsTeLoggingAttributes) GetLspBandwidthChange() bool {
	if m != nil {
		return m.LspBandwidthChange
	}
	return false
}

func (m *MplsTeLoggingAttributes) GetLspPcalcFailureLoggingEnabled() bool {
	if m != nil {
		return m.LspPcalcFailureLoggingEnabled
	}
	return false
}

func (m *MplsTeLoggingAttributes) GetAllLoggingEnabled() bool {
	if m != nil {
		return m.AllLoggingEnabled
	}
	return false
}

type MplsTeProtectedIfNameStr struct {
	ProtectedInterface   string   `protobuf:"bytes,1,opt,name=protected_interface,json=protectedInterface,proto3" json:"protected_interface,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MplsTeProtectedIfNameStr) Reset()         { *m = MplsTeProtectedIfNameStr{} }
func (m *MplsTeProtectedIfNameStr) String() string { return proto.CompactTextString(m) }
func (*MplsTeProtectedIfNameStr) ProtoMessage()    {}
func (*MplsTeProtectedIfNameStr) Descriptor() ([]byte, []int) {
	return fileDescriptor_afe0d13f6d8225f2, []int{8}
}

func (m *MplsTeProtectedIfNameStr) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsTeProtectedIfNameStr.Unmarshal(m, b)
}
func (m *MplsTeProtectedIfNameStr) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsTeProtectedIfNameStr.Marshal(b, m, deterministic)
}
func (m *MplsTeProtectedIfNameStr) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsTeProtectedIfNameStr.Merge(m, src)
}
func (m *MplsTeProtectedIfNameStr) XXX_Size() int {
	return xxx_messageInfo_MplsTeProtectedIfNameStr.Size(m)
}
func (m *MplsTeProtectedIfNameStr) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsTeProtectedIfNameStr.DiscardUnknown(m)
}

var xxx_messageInfo_MplsTeProtectedIfNameStr proto.InternalMessageInfo

func (m *MplsTeProtectedIfNameStr) GetProtectedInterface() string {
	if m != nil {
		return m.ProtectedInterface
	}
	return ""
}

type MplsTeAttributeSetAutoBackup struct {
	IsSignalledNameConfigured bool                        `protobuf:"varint,1,opt,name=is_signalled_name_configured,json=isSignalledNameConfigured,proto3" json:"is_signalled_name_configured,omitempty"`
	SignalledName             *MplsTeAttributeSetSigName  `protobuf:"bytes,2,opt,name=signalled_name,json=signalledName,proto3" json:"signalled_name,omitempty"`
	SetupPriority             uint32                      `protobuf:"varint,3,opt,name=setup_priority,json=setupPriority,proto3" json:"setup_priority,omitempty"`
	HoldPriority              uint32                      `protobuf:"varint,4,opt,name=hold_priority,json=holdPriority,proto3" json:"hold_priority,omitempty"`
	IsPriorityConfigured      bool                        `protobuf:"varint,5,opt,name=is_priority_configured,json=isPriorityConfigured,proto3" json:"is_priority_configured,omitempty"`
	PolicyClass               uint32                      `protobuf:"varint,6,opt,name=policy_class,json=policyClass,proto3" json:"policy_class,omitempty"`
	PolicyClassEntry          []uint32                    `protobuf:"varint,7,rep,packed,name=policy_class_entry,json=policyClassEntry,proto3" json:"policy_class_entry,omitempty"`
	IsPolicyclassConfigured   bool                        `protobuf:"varint,8,opt,name=is_policyclass_configured,json=isPolicyclassConfigured,proto3" json:"is_policyclass_configured,omitempty"`
	Affinity                  *MplsTeTunnelsAffinityInfo  `protobuf:"bytes,9,opt,name=affinity,proto3" json:"affinity,omitempty"`
	IsAffinityConfigured      bool                        `protobuf:"varint,10,opt,name=is_affinity_configured,json=isAffinityConfigured,proto3" json:"is_affinity_configured,omitempty"`
	RecordRoute               bool                        `protobuf:"varint,11,opt,name=record_route,json=recordRoute,proto3" json:"record_route,omitempty"`
	Logging                   *MplsTeLoggingAttributes    `protobuf:"bytes,12,opt,name=logging,proto3" json:"logging,omitempty"`
	ProtectedInterface        []*MplsTeProtectedIfNameStr `protobuf:"bytes,13,rep,name=protected_interface,json=protectedInterface,proto3" json:"protected_interface,omitempty"`
	TunnelId                  []uint32                    `protobuf:"varint,14,rep,packed,name=tunnel_id,json=tunnelId,proto3" json:"tunnel_id,omitempty"`
	XXX_NoUnkeyedLiteral      struct{}                    `json:"-"`
	XXX_unrecognized          []byte                      `json:"-"`
	XXX_sizecache             int32                       `json:"-"`
}

func (m *MplsTeAttributeSetAutoBackup) Reset()         { *m = MplsTeAttributeSetAutoBackup{} }
func (m *MplsTeAttributeSetAutoBackup) String() string { return proto.CompactTextString(m) }
func (*MplsTeAttributeSetAutoBackup) ProtoMessage()    {}
func (*MplsTeAttributeSetAutoBackup) Descriptor() ([]byte, []int) {
	return fileDescriptor_afe0d13f6d8225f2, []int{9}
}

func (m *MplsTeAttributeSetAutoBackup) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsTeAttributeSetAutoBackup.Unmarshal(m, b)
}
func (m *MplsTeAttributeSetAutoBackup) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsTeAttributeSetAutoBackup.Marshal(b, m, deterministic)
}
func (m *MplsTeAttributeSetAutoBackup) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsTeAttributeSetAutoBackup.Merge(m, src)
}
func (m *MplsTeAttributeSetAutoBackup) XXX_Size() int {
	return xxx_messageInfo_MplsTeAttributeSetAutoBackup.Size(m)
}
func (m *MplsTeAttributeSetAutoBackup) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsTeAttributeSetAutoBackup.DiscardUnknown(m)
}

var xxx_messageInfo_MplsTeAttributeSetAutoBackup proto.InternalMessageInfo

func (m *MplsTeAttributeSetAutoBackup) GetIsSignalledNameConfigured() bool {
	if m != nil {
		return m.IsSignalledNameConfigured
	}
	return false
}

func (m *MplsTeAttributeSetAutoBackup) GetSignalledName() *MplsTeAttributeSetSigName {
	if m != nil {
		return m.SignalledName
	}
	return nil
}

func (m *MplsTeAttributeSetAutoBackup) GetSetupPriority() uint32 {
	if m != nil {
		return m.SetupPriority
	}
	return 0
}

func (m *MplsTeAttributeSetAutoBackup) GetHoldPriority() uint32 {
	if m != nil {
		return m.HoldPriority
	}
	return 0
}

func (m *MplsTeAttributeSetAutoBackup) GetIsPriorityConfigured() bool {
	if m != nil {
		return m.IsPriorityConfigured
	}
	return false
}

func (m *MplsTeAttributeSetAutoBackup) GetPolicyClass() uint32 {
	if m != nil {
		return m.PolicyClass
	}
	return 0
}

func (m *MplsTeAttributeSetAutoBackup) GetPolicyClassEntry() []uint32 {
	if m != nil {
		return m.PolicyClassEntry
	}
	return nil
}

func (m *MplsTeAttributeSetAutoBackup) GetIsPolicyclassConfigured() bool {
	if m != nil {
		return m.IsPolicyclassConfigured
	}
	return false
}

func (m *MplsTeAttributeSetAutoBackup) GetAffinity() *MplsTeTunnelsAffinityInfo {
	if m != nil {
		return m.Affinity
	}
	return nil
}

func (m *MplsTeAttributeSetAutoBackup) GetIsAffinityConfigured() bool {
	if m != nil {
		return m.IsAffinityConfigured
	}
	return false
}

func (m *MplsTeAttributeSetAutoBackup) GetRecordRoute() bool {
	if m != nil {
		return m.RecordRoute
	}
	return false
}

func (m *MplsTeAttributeSetAutoBackup) GetLogging() *MplsTeLoggingAttributes {
	if m != nil {
		return m.Logging
	}
	return nil
}

func (m *MplsTeAttributeSetAutoBackup) GetProtectedInterface() []*MplsTeProtectedIfNameStr {
	if m != nil {
		return m.ProtectedInterface
	}
	return nil
}

func (m *MplsTeAttributeSetAutoBackup) GetTunnelId() []uint32 {
	if m != nil {
		return m.TunnelId
	}
	return nil
}

type MplsTeAttributeSetAutoMesh struct {
	ConfiguredBandwidth      uint32                     `protobuf:"varint,1,opt,name=configured_bandwidth,json=configuredBandwidth,proto3" json:"configured_bandwidth,omitempty"`
	DsteClassType            uint32                     `protobuf:"varint,2,opt,name=dste_class_type,json=dsteClassType,proto3" json:"dste_class_type,omitempty"`
	IsBandwidthConfigured    bool                       `protobuf:"varint,3,opt,name=is_bandwidth_configured,json=isBandwidthConfigured,proto3" json:"is_bandwidth_configured,omitempty"`
	SetupPriority            uint32                     `protobuf:"varint,4,opt,name=setup_priority,json=setupPriority,proto3" json:"setup_priority,omitempty"`
	HoldPriority             uint32                     `protobuf:"varint,5,opt,name=hold_priority,json=holdPriority,proto3" json:"hold_priority,omitempty"`
	IsPriorityConfigured     bool                       `protobuf:"varint,6,opt,name=is_priority_configured,json=isPriorityConfigured,proto3" json:"is_priority_configured,omitempty"`
	PolicyClass              uint32                     `protobuf:"varint,7,opt,name=policy_class,json=policyClass,proto3" json:"policy_class,omitempty"`
	PolicyClassEntry         []uint32                   `protobuf:"varint,8,rep,packed,name=policy_class_entry,json=policyClassEntry,proto3" json:"policy_class_entry,omitempty"`
	IsPolicyclassConfigured  bool                       `protobuf:"varint,9,opt,name=is_policyclass_configured,json=isPolicyclassConfigured,proto3" json:"is_policyclass_configured,omitempty"`
	ForwardClass             uint32                     `protobuf:"varint,10,opt,name=forward_class,json=forwardClass,proto3" json:"forward_class,omitempty"`
	Affinity                 *MplsTeTunnelsAffinityInfo `protobuf:"bytes,11,opt,name=affinity,proto3" json:"affinity,omitempty"`
	IsAffinityConfigured     bool                       `protobuf:"varint,12,opt,name=is_affinity_configured,json=isAffinityConfigured,proto3" json:"is_affinity_configured,omitempty"`
	FastReroute              bool                       `protobuf:"varint,13,opt,name=fast_reroute,json=fastReroute,proto3" json:"fast_reroute,omitempty"`
	FrrNodeProtection        bool                       `protobuf:"varint,14,opt,name=frr_node_protection,json=frrNodeProtection,proto3" json:"frr_node_protection,omitempty"`
	FrrBandwidthProtection   bool                       `protobuf:"varint,15,opt,name=frr_bandwidth_protection,json=frrBandwidthProtection,proto3" json:"frr_bandwidth_protection,omitempty"`
	RecordRoute              bool                       `protobuf:"varint,16,opt,name=record_route,json=recordRoute,proto3" json:"record_route,omitempty"`
	AutoBandwidthCollect     bool                       `protobuf:"varint,17,opt,name=auto_bandwidth_collect,json=autoBandwidthCollect,proto3" json:"auto_bandwidth_collect,omitempty"`
	AutoRouteAnnounce        bool                       `protobuf:"varint,18,opt,name=auto_route_announce,json=autoRouteAnnounce,proto3" json:"auto_route_announce,omitempty"`
	SoftPreemptionConfigured bool                       `protobuf:"varint,19,opt,name=soft_preemption_configured,json=softPreemptionConfigured,proto3" json:"soft_preemption_configured,omitempty"`
	Logging                  *MplsTeLoggingAttributes   `protobuf:"bytes,20,opt,name=logging,proto3" json:"logging,omitempty"`
	Bandwidth                uint32                     `protobuf:"varint,21,opt,name=bandwidth,proto3" json:"bandwidth,omitempty"`
	LoadShare                uint32                     `protobuf:"varint,22,opt,name=load_share,json=loadShare,proto3" json:"load_share,omitempty"`
	IsInterfaceBwConfigured  bool                       `protobuf:"varint,23,opt,name=is_interface_bw_configured,json=isInterfaceBwConfigured,proto3" json:"is_interface_bw_configured,omitempty"`
	MeshGroupId              []uint32                   `protobuf:"varint,24,rep,packed,name=mesh_group_id,json=meshGroupId,proto3" json:"mesh_group_id,omitempty"`
	TunnelId                 []uint32                   `protobuf:"varint,25,rep,packed,name=tunnel_id,json=tunnelId,proto3" json:"tunnel_id,omitempty"`
	XXX_NoUnkeyedLiteral     struct{}                   `json:"-"`
	XXX_unrecognized         []byte                     `json:"-"`
	XXX_sizecache            int32                      `json:"-"`
}

func (m *MplsTeAttributeSetAutoMesh) Reset()         { *m = MplsTeAttributeSetAutoMesh{} }
func (m *MplsTeAttributeSetAutoMesh) String() string { return proto.CompactTextString(m) }
func (*MplsTeAttributeSetAutoMesh) ProtoMessage()    {}
func (*MplsTeAttributeSetAutoMesh) Descriptor() ([]byte, []int) {
	return fileDescriptor_afe0d13f6d8225f2, []int{10}
}

func (m *MplsTeAttributeSetAutoMesh) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsTeAttributeSetAutoMesh.Unmarshal(m, b)
}
func (m *MplsTeAttributeSetAutoMesh) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsTeAttributeSetAutoMesh.Marshal(b, m, deterministic)
}
func (m *MplsTeAttributeSetAutoMesh) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsTeAttributeSetAutoMesh.Merge(m, src)
}
func (m *MplsTeAttributeSetAutoMesh) XXX_Size() int {
	return xxx_messageInfo_MplsTeAttributeSetAutoMesh.Size(m)
}
func (m *MplsTeAttributeSetAutoMesh) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsTeAttributeSetAutoMesh.DiscardUnknown(m)
}

var xxx_messageInfo_MplsTeAttributeSetAutoMesh proto.InternalMessageInfo

func (m *MplsTeAttributeSetAutoMesh) GetConfiguredBandwidth() uint32 {
	if m != nil {
		return m.ConfiguredBandwidth
	}
	return 0
}

func (m *MplsTeAttributeSetAutoMesh) GetDsteClassType() uint32 {
	if m != nil {
		return m.DsteClassType
	}
	return 0
}

func (m *MplsTeAttributeSetAutoMesh) GetIsBandwidthConfigured() bool {
	if m != nil {
		return m.IsBandwidthConfigured
	}
	return false
}

func (m *MplsTeAttributeSetAutoMesh) GetSetupPriority() uint32 {
	if m != nil {
		return m.SetupPriority
	}
	return 0
}

func (m *MplsTeAttributeSetAutoMesh) GetHoldPriority() uint32 {
	if m != nil {
		return m.HoldPriority
	}
	return 0
}

func (m *MplsTeAttributeSetAutoMesh) GetIsPriorityConfigured() bool {
	if m != nil {
		return m.IsPriorityConfigured
	}
	return false
}

func (m *MplsTeAttributeSetAutoMesh) GetPolicyClass() uint32 {
	if m != nil {
		return m.PolicyClass
	}
	return 0
}

func (m *MplsTeAttributeSetAutoMesh) GetPolicyClassEntry() []uint32 {
	if m != nil {
		return m.PolicyClassEntry
	}
	return nil
}

func (m *MplsTeAttributeSetAutoMesh) GetIsPolicyclassConfigured() bool {
	if m != nil {
		return m.IsPolicyclassConfigured
	}
	return false
}

func (m *MplsTeAttributeSetAutoMesh) GetForwardClass() uint32 {
	if m != nil {
		return m.ForwardClass
	}
	return 0
}

func (m *MplsTeAttributeSetAutoMesh) GetAffinity() *MplsTeTunnelsAffinityInfo {
	if m != nil {
		return m.Affinity
	}
	return nil
}

func (m *MplsTeAttributeSetAutoMesh) GetIsAffinityConfigured() bool {
	if m != nil {
		return m.IsAffinityConfigured
	}
	return false
}

func (m *MplsTeAttributeSetAutoMesh) GetFastReroute() bool {
	if m != nil {
		return m.FastReroute
	}
	return false
}

func (m *MplsTeAttributeSetAutoMesh) GetFrrNodeProtection() bool {
	if m != nil {
		return m.FrrNodeProtection
	}
	return false
}

func (m *MplsTeAttributeSetAutoMesh) GetFrrBandwidthProtection() bool {
	if m != nil {
		return m.FrrBandwidthProtection
	}
	return false
}

func (m *MplsTeAttributeSetAutoMesh) GetRecordRoute() bool {
	if m != nil {
		return m.RecordRoute
	}
	return false
}

func (m *MplsTeAttributeSetAutoMesh) GetAutoBandwidthCollect() bool {
	if m != nil {
		return m.AutoBandwidthCollect
	}
	return false
}

func (m *MplsTeAttributeSetAutoMesh) GetAutoRouteAnnounce() bool {
	if m != nil {
		return m.AutoRouteAnnounce
	}
	return false
}

func (m *MplsTeAttributeSetAutoMesh) GetSoftPreemptionConfigured() bool {
	if m != nil {
		return m.SoftPreemptionConfigured
	}
	return false
}

func (m *MplsTeAttributeSetAutoMesh) GetLogging() *MplsTeLoggingAttributes {
	if m != nil {
		return m.Logging
	}
	return nil
}

func (m *MplsTeAttributeSetAutoMesh) GetBandwidth() uint32 {
	if m != nil {
		return m.Bandwidth
	}
	return 0
}

func (m *MplsTeAttributeSetAutoMesh) GetLoadShare() uint32 {
	if m != nil {
		return m.LoadShare
	}
	return 0
}

func (m *MplsTeAttributeSetAutoMesh) GetIsInterfaceBwConfigured() bool {
	if m != nil {
		return m.IsInterfaceBwConfigured
	}
	return false
}

func (m *MplsTeAttributeSetAutoMesh) GetMeshGroupId() []uint32 {
	if m != nil {
		return m.MeshGroupId
	}
	return nil
}

func (m *MplsTeAttributeSetAutoMesh) GetTunnelId() []uint32 {
	if m != nil {
		return m.TunnelId
	}
	return nil
}

type TeXroSubobjIpv4 struct {
	Address              string   `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	PrefixLen            uint32   `protobuf:"varint,2,opt,name=prefix_len,json=prefixLen,proto3" json:"prefix_len,omitempty"`
	Attribute            string   `protobuf:"bytes,3,opt,name=attribute,proto3" json:"attribute,omitempty"`
	ExclusionType        string   `protobuf:"bytes,4,opt,name=exclusion_type,json=exclusionType,proto3" json:"exclusion_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TeXroSubobjIpv4) Reset()         { *m = TeXroSubobjIpv4{} }
func (m *TeXroSubobjIpv4) String() string { return proto.CompactTextString(m) }
func (*TeXroSubobjIpv4) ProtoMessage()    {}
func (*TeXroSubobjIpv4) Descriptor() ([]byte, []int) {
	return fileDescriptor_afe0d13f6d8225f2, []int{11}
}

func (m *TeXroSubobjIpv4) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TeXroSubobjIpv4.Unmarshal(m, b)
}
func (m *TeXroSubobjIpv4) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TeXroSubobjIpv4.Marshal(b, m, deterministic)
}
func (m *TeXroSubobjIpv4) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TeXroSubobjIpv4.Merge(m, src)
}
func (m *TeXroSubobjIpv4) XXX_Size() int {
	return xxx_messageInfo_TeXroSubobjIpv4.Size(m)
}
func (m *TeXroSubobjIpv4) XXX_DiscardUnknown() {
	xxx_messageInfo_TeXroSubobjIpv4.DiscardUnknown(m)
}

var xxx_messageInfo_TeXroSubobjIpv4 proto.InternalMessageInfo

func (m *TeXroSubobjIpv4) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *TeXroSubobjIpv4) GetPrefixLen() uint32 {
	if m != nil {
		return m.PrefixLen
	}
	return 0
}

func (m *TeXroSubobjIpv4) GetAttribute() string {
	if m != nil {
		return m.Attribute
	}
	return ""
}

func (m *TeXroSubobjIpv4) GetExclusionType() string {
	if m != nil {
		return m.ExclusionType
	}
	return ""
}

type TeXroSubobjIpv6 struct {
	Address              string   `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	PrefixLen            uint32   `protobuf:"varint,2,opt,name=prefix_len,json=prefixLen,proto3" json:"prefix_len,omitempty"`
	Attribute            string   `protobuf:"bytes,3,opt,name=attribute,proto3" json:"attribute,omitempty"`
	ExclusionType        string   `protobuf:"bytes,4,opt,name=exclusion_type,json=exclusionType,proto3" json:"exclusion_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TeXroSubobjIpv6) Reset()         { *m = TeXroSubobjIpv6{} }
func (m *TeXroSubobjIpv6) String() string { return proto.CompactTextString(m) }
func (*TeXroSubobjIpv6) ProtoMessage()    {}
func (*TeXroSubobjIpv6) Descriptor() ([]byte, []int) {
	return fileDescriptor_afe0d13f6d8225f2, []int{12}
}

func (m *TeXroSubobjIpv6) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TeXroSubobjIpv6.Unmarshal(m, b)
}
func (m *TeXroSubobjIpv6) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TeXroSubobjIpv6.Marshal(b, m, deterministic)
}
func (m *TeXroSubobjIpv6) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TeXroSubobjIpv6.Merge(m, src)
}
func (m *TeXroSubobjIpv6) XXX_Size() int {
	return xxx_messageInfo_TeXroSubobjIpv6.Size(m)
}
func (m *TeXroSubobjIpv6) XXX_DiscardUnknown() {
	xxx_messageInfo_TeXroSubobjIpv6.DiscardUnknown(m)
}

var xxx_messageInfo_TeXroSubobjIpv6 proto.InternalMessageInfo

func (m *TeXroSubobjIpv6) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *TeXroSubobjIpv6) GetPrefixLen() uint32 {
	if m != nil {
		return m.PrefixLen
	}
	return 0
}

func (m *TeXroSubobjIpv6) GetAttribute() string {
	if m != nil {
		return m.Attribute
	}
	return ""
}

func (m *TeXroSubobjIpv6) GetExclusionType() string {
	if m != nil {
		return m.ExclusionType
	}
	return ""
}

type TeXroSubobjUnnum struct {
	TeRouterId           string   `protobuf:"bytes,1,opt,name=te_router_id,json=teRouterId,proto3" json:"te_router_id,omitempty"`
	InterfaceId          uint32   `protobuf:"varint,2,opt,name=interface_id,json=interfaceId,proto3" json:"interface_id,omitempty"`
	Attribute            string   `protobuf:"bytes,3,opt,name=attribute,proto3" json:"attribute,omitempty"`
	ExclusionType        string   `protobuf:"bytes,4,opt,name=exclusion_type,json=exclusionType,proto3" json:"exclusion_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TeXroSubobjUnnum) Reset()         { *m = TeXroSubobjUnnum{} }
func (m *TeXroSubobjUnnum) String() string { return proto.CompactTextString(m) }
func (*TeXroSubobjUnnum) ProtoMessage()    {}
func (*TeXroSubobjUnnum) Descriptor() ([]byte, []int) {
	return fileDescriptor_afe0d13f6d8225f2, []int{13}
}

func (m *TeXroSubobjUnnum) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TeXroSubobjUnnum.Unmarshal(m, b)
}
func (m *TeXroSubobjUnnum) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TeXroSubobjUnnum.Marshal(b, m, deterministic)
}
func (m *TeXroSubobjUnnum) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TeXroSubobjUnnum.Merge(m, src)
}
func (m *TeXroSubobjUnnum) XXX_Size() int {
	return xxx_messageInfo_TeXroSubobjUnnum.Size(m)
}
func (m *TeXroSubobjUnnum) XXX_DiscardUnknown() {
	xxx_messageInfo_TeXroSubobjUnnum.DiscardUnknown(m)
}

var xxx_messageInfo_TeXroSubobjUnnum proto.InternalMessageInfo

func (m *TeXroSubobjUnnum) GetTeRouterId() string {
	if m != nil {
		return m.TeRouterId
	}
	return ""
}

func (m *TeXroSubobjUnnum) GetInterfaceId() uint32 {
	if m != nil {
		return m.InterfaceId
	}
	return 0
}

func (m *TeXroSubobjUnnum) GetAttribute() string {
	if m != nil {
		return m.Attribute
	}
	return ""
}

func (m *TeXroSubobjUnnum) GetExclusionType() string {
	if m != nil {
		return m.ExclusionType
	}
	return ""
}

type TeXroSubobjAs struct {
	AsNumber             uint32   `protobuf:"varint,1,opt,name=as_number,json=asNumber,proto3" json:"as_number,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TeXroSubobjAs) Reset()         { *m = TeXroSubobjAs{} }
func (m *TeXroSubobjAs) String() string { return proto.CompactTextString(m) }
func (*TeXroSubobjAs) ProtoMessage()    {}
func (*TeXroSubobjAs) Descriptor() ([]byte, []int) {
	return fileDescriptor_afe0d13f6d8225f2, []int{14}
}

func (m *TeXroSubobjAs) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TeXroSubobjAs.Unmarshal(m, b)
}
func (m *TeXroSubobjAs) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TeXroSubobjAs.Marshal(b, m, deterministic)
}
func (m *TeXroSubobjAs) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TeXroSubobjAs.Merge(m, src)
}
func (m *TeXroSubobjAs) XXX_Size() int {
	return xxx_messageInfo_TeXroSubobjAs.Size(m)
}
func (m *TeXroSubobjAs) XXX_DiscardUnknown() {
	xxx_messageInfo_TeXroSubobjAs.DiscardUnknown(m)
}

var xxx_messageInfo_TeXroSubobjAs proto.InternalMessageInfo

func (m *TeXroSubobjAs) GetAsNumber() uint32 {
	if m != nil {
		return m.AsNumber
	}
	return 0
}

type TeXroSubobjSrlg struct {
	SrlgId               uint32   `protobuf:"varint,1,opt,name=srlg_id,json=srlgId,proto3" json:"srlg_id,omitempty"`
	ExclusionType        string   `protobuf:"bytes,2,opt,name=exclusion_type,json=exclusionType,proto3" json:"exclusion_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TeXroSubobjSrlg) Reset()         { *m = TeXroSubobjSrlg{} }
func (m *TeXroSubobjSrlg) String() string { return proto.CompactTextString(m) }
func (*TeXroSubobjSrlg) ProtoMessage()    {}
func (*TeXroSubobjSrlg) Descriptor() ([]byte, []int) {
	return fileDescriptor_afe0d13f6d8225f2, []int{15}
}

func (m *TeXroSubobjSrlg) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TeXroSubobjSrlg.Unmarshal(m, b)
}
func (m *TeXroSubobjSrlg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TeXroSubobjSrlg.Marshal(b, m, deterministic)
}
func (m *TeXroSubobjSrlg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TeXroSubobjSrlg.Merge(m, src)
}
func (m *TeXroSubobjSrlg) XXX_Size() int {
	return xxx_messageInfo_TeXroSubobjSrlg.Size(m)
}
func (m *TeXroSubobjSrlg) XXX_DiscardUnknown() {
	xxx_messageInfo_TeXroSubobjSrlg.DiscardUnknown(m)
}

var xxx_messageInfo_TeXroSubobjSrlg proto.InternalMessageInfo

func (m *TeXroSubobjSrlg) GetSrlgId() uint32 {
	if m != nil {
		return m.SrlgId
	}
	return 0
}

func (m *TeXroSubobjSrlg) GetExclusionType() string {
	if m != nil {
		return m.ExclusionType
	}
	return ""
}

type TeLspFecCtypeDataT struct {
	FecCtype             string   `protobuf:"bytes,1,opt,name=fec_ctype,json=fecCtype,proto3" json:"fec_ctype,omitempty"`
	P2PLspDestination    string   `protobuf:"bytes,2,opt,name=p2p_lsp_destination,json=p2pLspDestination,proto3" json:"p2p_lsp_destination,omitempty"`
	FecDestinationP2MpId uint32   `protobuf:"varint,3,opt,name=fec_destination_p2mp_id,json=fecDestinationP2mpId,proto3" json:"fec_destination_p2mp_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TeLspFecCtypeDataT) Reset()         { *m = TeLspFecCtypeDataT{} }
func (m *TeLspFecCtypeDataT) String() string { return proto.CompactTextString(m) }
func (*TeLspFecCtypeDataT) ProtoMessage()    {}
func (*TeLspFecCtypeDataT) Descriptor() ([]byte, []int) {
	return fileDescriptor_afe0d13f6d8225f2, []int{16}
}

func (m *TeLspFecCtypeDataT) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TeLspFecCtypeDataT.Unmarshal(m, b)
}
func (m *TeLspFecCtypeDataT) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TeLspFecCtypeDataT.Marshal(b, m, deterministic)
}
func (m *TeLspFecCtypeDataT) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TeLspFecCtypeDataT.Merge(m, src)
}
func (m *TeLspFecCtypeDataT) XXX_Size() int {
	return xxx_messageInfo_TeLspFecCtypeDataT.Size(m)
}
func (m *TeLspFecCtypeDataT) XXX_DiscardUnknown() {
	xxx_messageInfo_TeLspFecCtypeDataT.DiscardUnknown(m)
}

var xxx_messageInfo_TeLspFecCtypeDataT proto.InternalMessageInfo

func (m *TeLspFecCtypeDataT) GetFecCtype() string {
	if m != nil {
		return m.FecCtype
	}
	return ""
}

func (m *TeLspFecCtypeDataT) GetP2PLspDestination() string {
	if m != nil {
		return m.P2PLspDestination
	}
	return ""
}

func (m *TeLspFecCtypeDataT) GetFecDestinationP2MpId() uint32 {
	if m != nil {
		return m.FecDestinationP2MpId
	}
	return 0
}

type TeLspFecT struct {
	FecLspId             uint32              `protobuf:"varint,1,opt,name=fec_lsp_id,json=fecLspId,proto3" json:"fec_lsp_id,omitempty"`
	FecTunnelId          uint32              `protobuf:"varint,2,opt,name=fec_tunnel_id,json=fecTunnelId,proto3" json:"fec_tunnel_id,omitempty"`
	FecExtendedTunnelId  string              `protobuf:"bytes,3,opt,name=fec_extended_tunnel_id,json=fecExtendedTunnelId,proto3" json:"fec_extended_tunnel_id,omitempty"`
	FecSource            string              `protobuf:"bytes,4,opt,name=fec_source,json=fecSource,proto3" json:"fec_source,omitempty"`
	FecDestinationInfo   *TeLspFecCtypeDataT `protobuf:"bytes,5,opt,name=fec_destination_info,json=fecDestinationInfo,proto3" json:"fec_destination_info,omitempty"`
	FecVrf               string              `protobuf:"bytes,6,opt,name=fec_vrf,json=fecVrf,proto3" json:"fec_vrf,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *TeLspFecT) Reset()         { *m = TeLspFecT{} }
func (m *TeLspFecT) String() string { return proto.CompactTextString(m) }
func (*TeLspFecT) ProtoMessage()    {}
func (*TeLspFecT) Descriptor() ([]byte, []int) {
	return fileDescriptor_afe0d13f6d8225f2, []int{17}
}

func (m *TeLspFecT) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TeLspFecT.Unmarshal(m, b)
}
func (m *TeLspFecT) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TeLspFecT.Marshal(b, m, deterministic)
}
func (m *TeLspFecT) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TeLspFecT.Merge(m, src)
}
func (m *TeLspFecT) XXX_Size() int {
	return xxx_messageInfo_TeLspFecT.Size(m)
}
func (m *TeLspFecT) XXX_DiscardUnknown() {
	xxx_messageInfo_TeLspFecT.DiscardUnknown(m)
}

var xxx_messageInfo_TeLspFecT proto.InternalMessageInfo

func (m *TeLspFecT) GetFecLspId() uint32 {
	if m != nil {
		return m.FecLspId
	}
	return 0
}

func (m *TeLspFecT) GetFecTunnelId() uint32 {
	if m != nil {
		return m.FecTunnelId
	}
	return 0
}

func (m *TeLspFecT) GetFecExtendedTunnelId() string {
	if m != nil {
		return m.FecExtendedTunnelId
	}
	return ""
}

func (m *TeLspFecT) GetFecSource() string {
	if m != nil {
		return m.FecSource
	}
	return ""
}

func (m *TeLspFecT) GetFecDestinationInfo() *TeLspFecCtypeDataT {
	if m != nil {
		return m.FecDestinationInfo
	}
	return nil
}

func (m *TeLspFecT) GetFecVrf() string {
	if m != nil {
		return m.FecVrf
	}
	return ""
}

type TeXroSubobjP2PLsp struct {
	Fec                      *TeLspFecT `protobuf:"bytes,1,opt,name=fec,proto3" json:"fec,omitempty"`
	IgnoreLspId              bool       `protobuf:"varint,2,opt,name=ignore_lsp_id,json=ignoreLspId,proto3" json:"ignore_lsp_id,omitempty"`
	ProcessingNodeException  bool       `protobuf:"varint,3,opt,name=processing_node_exception,json=processingNodeException,proto3" json:"processing_node_exception,omitempty"`
	PenultimateNodeException bool       `protobuf:"varint,4,opt,name=penultimate_node_exception,json=penultimateNodeException,proto3" json:"penultimate_node_exception,omitempty"`
	DestinationNodeException bool       `protobuf:"varint,5,opt,name=destination_node_exception,json=destinationNodeException,proto3" json:"destination_node_exception,omitempty"`
	ExclusionType            string     `protobuf:"bytes,6,opt,name=exclusion_type,json=exclusionType,proto3" json:"exclusion_type,omitempty"`
	XXX_NoUnkeyedLiteral     struct{}   `json:"-"`
	XXX_unrecognized         []byte     `json:"-"`
	XXX_sizecache            int32      `json:"-"`
}

func (m *TeXroSubobjP2PLsp) Reset()         { *m = TeXroSubobjP2PLsp{} }
func (m *TeXroSubobjP2PLsp) String() string { return proto.CompactTextString(m) }
func (*TeXroSubobjP2PLsp) ProtoMessage()    {}
func (*TeXroSubobjP2PLsp) Descriptor() ([]byte, []int) {
	return fileDescriptor_afe0d13f6d8225f2, []int{18}
}

func (m *TeXroSubobjP2PLsp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TeXroSubobjP2PLsp.Unmarshal(m, b)
}
func (m *TeXroSubobjP2PLsp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TeXroSubobjP2PLsp.Marshal(b, m, deterministic)
}
func (m *TeXroSubobjP2PLsp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TeXroSubobjP2PLsp.Merge(m, src)
}
func (m *TeXroSubobjP2PLsp) XXX_Size() int {
	return xxx_messageInfo_TeXroSubobjP2PLsp.Size(m)
}
func (m *TeXroSubobjP2PLsp) XXX_DiscardUnknown() {
	xxx_messageInfo_TeXroSubobjP2PLsp.DiscardUnknown(m)
}

var xxx_messageInfo_TeXroSubobjP2PLsp proto.InternalMessageInfo

func (m *TeXroSubobjP2PLsp) GetFec() *TeLspFecT {
	if m != nil {
		return m.Fec
	}
	return nil
}

func (m *TeXroSubobjP2PLsp) GetIgnoreLspId() bool {
	if m != nil {
		return m.IgnoreLspId
	}
	return false
}

func (m *TeXroSubobjP2PLsp) GetProcessingNodeException() bool {
	if m != nil {
		return m.ProcessingNodeException
	}
	return false
}

func (m *TeXroSubobjP2PLsp) GetPenultimateNodeException() bool {
	if m != nil {
		return m.PenultimateNodeException
	}
	return false
}

func (m *TeXroSubobjP2PLsp) GetDestinationNodeException() bool {
	if m != nil {
		return m.DestinationNodeException
	}
	return false
}

func (m *TeXroSubobjP2PLsp) GetExclusionType() string {
	if m != nil {
		return m.ExclusionType
	}
	return ""
}

type TeXroSubobj struct {
	Type                 string             `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Ipv4Subobject        *TeXroSubobjIpv4   `protobuf:"bytes,2,opt,name=ipv4_subobject,json=ipv4Subobject,proto3" json:"ipv4_subobject,omitempty"`
	Ipv6Subobject        *TeXroSubobjIpv6   `protobuf:"bytes,3,opt,name=ipv6_subobject,json=ipv6Subobject,proto3" json:"ipv6_subobject,omitempty"`
	UnnumberedSubobject  *TeXroSubobjUnnum  `protobuf:"bytes,4,opt,name=unnumbered_subobject,json=unnumberedSubobject,proto3" json:"unnumbered_subobject,omitempty"`
	AsSubobject          *TeXroSubobjAs     `protobuf:"bytes,5,opt,name=as_subobject,json=asSubobject,proto3" json:"as_subobject,omitempty"`
	SrlgSubobject        *TeXroSubobjSrlg   `protobuf:"bytes,6,opt,name=srlg_subobject,json=srlgSubobject,proto3" json:"srlg_subobject,omitempty"`
	LspSubobject         *TeXroSubobjP2PLsp `protobuf:"bytes,7,opt,name=lsp_subobject,json=lspSubobject,proto3" json:"lsp_subobject,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *TeXroSubobj) Reset()         { *m = TeXroSubobj{} }
func (m *TeXroSubobj) String() string { return proto.CompactTextString(m) }
func (*TeXroSubobj) ProtoMessage()    {}
func (*TeXroSubobj) Descriptor() ([]byte, []int) {
	return fileDescriptor_afe0d13f6d8225f2, []int{19}
}

func (m *TeXroSubobj) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TeXroSubobj.Unmarshal(m, b)
}
func (m *TeXroSubobj) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TeXroSubobj.Marshal(b, m, deterministic)
}
func (m *TeXroSubobj) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TeXroSubobj.Merge(m, src)
}
func (m *TeXroSubobj) XXX_Size() int {
	return xxx_messageInfo_TeXroSubobj.Size(m)
}
func (m *TeXroSubobj) XXX_DiscardUnknown() {
	xxx_messageInfo_TeXroSubobj.DiscardUnknown(m)
}

var xxx_messageInfo_TeXroSubobj proto.InternalMessageInfo

func (m *TeXroSubobj) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *TeXroSubobj) GetIpv4Subobject() *TeXroSubobjIpv4 {
	if m != nil {
		return m.Ipv4Subobject
	}
	return nil
}

func (m *TeXroSubobj) GetIpv6Subobject() *TeXroSubobjIpv6 {
	if m != nil {
		return m.Ipv6Subobject
	}
	return nil
}

func (m *TeXroSubobj) GetUnnumberedSubobject() *TeXroSubobjUnnum {
	if m != nil {
		return m.UnnumberedSubobject
	}
	return nil
}

func (m *TeXroSubobj) GetAsSubobject() *TeXroSubobjAs {
	if m != nil {
		return m.AsSubobject
	}
	return nil
}

func (m *TeXroSubobj) GetSrlgSubobject() *TeXroSubobjSrlg {
	if m != nil {
		return m.SrlgSubobject
	}
	return nil
}

func (m *TeXroSubobj) GetLspSubobject() *TeXroSubobjP2PLsp {
	if m != nil {
		return m.LspSubobject
	}
	return nil
}

type TeXro struct {
	XroSubobject         []*TeXroSubobj `protobuf:"bytes,1,rep,name=xro_subobject,json=xroSubobject,proto3" json:"xro_subobject,omitempty"`
	MutualDiversityFlag  bool           `protobuf:"varint,2,opt,name=mutual_diversity_flag,json=mutualDiversityFlag,proto3" json:"mutual_diversity_flag,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *TeXro) Reset()         { *m = TeXro{} }
func (m *TeXro) String() string { return proto.CompactTextString(m) }
func (*TeXro) ProtoMessage()    {}
func (*TeXro) Descriptor() ([]byte, []int) {
	return fileDescriptor_afe0d13f6d8225f2, []int{20}
}

func (m *TeXro) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TeXro.Unmarshal(m, b)
}
func (m *TeXro) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TeXro.Marshal(b, m, deterministic)
}
func (m *TeXro) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TeXro.Merge(m, src)
}
func (m *TeXro) XXX_Size() int {
	return xxx_messageInfo_TeXro.Size(m)
}
func (m *TeXro) XXX_DiscardUnknown() {
	xxx_messageInfo_TeXro.DiscardUnknown(m)
}

var xxx_messageInfo_TeXro proto.InternalMessageInfo

func (m *TeXro) GetXroSubobject() []*TeXroSubobj {
	if m != nil {
		return m.XroSubobject
	}
	return nil
}

func (m *TeXro) GetMutualDiversityFlag() bool {
	if m != nil {
		return m.MutualDiversityFlag
	}
	return false
}

type MplsTeAttributeSetXro struct {
	Xro                  *TeXro   `protobuf:"bytes,1,opt,name=xro,proto3" json:"xro,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MplsTeAttributeSetXro) Reset()         { *m = MplsTeAttributeSetXro{} }
func (m *MplsTeAttributeSetXro) String() string { return proto.CompactTextString(m) }
func (*MplsTeAttributeSetXro) ProtoMessage()    {}
func (*MplsTeAttributeSetXro) Descriptor() ([]byte, []int) {
	return fileDescriptor_afe0d13f6d8225f2, []int{21}
}

func (m *MplsTeAttributeSetXro) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsTeAttributeSetXro.Unmarshal(m, b)
}
func (m *MplsTeAttributeSetXro) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsTeAttributeSetXro.Marshal(b, m, deterministic)
}
func (m *MplsTeAttributeSetXro) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsTeAttributeSetXro.Merge(m, src)
}
func (m *MplsTeAttributeSetXro) XXX_Size() int {
	return xxx_messageInfo_MplsTeAttributeSetXro.Size(m)
}
func (m *MplsTeAttributeSetXro) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsTeAttributeSetXro.DiscardUnknown(m)
}

var xxx_messageInfo_MplsTeAttributeSetXro proto.InternalMessageInfo

func (m *MplsTeAttributeSetXro) GetXro() *TeXro {
	if m != nil {
		return m.Xro
	}
	return nil
}

type MplsTeAttributeSetP2MpTe struct {
	FastReroute            bool                       `protobuf:"varint,1,opt,name=fast_reroute,json=fastReroute,proto3" json:"fast_reroute,omitempty"`
	FrrBandwidthProtection bool                       `protobuf:"varint,2,opt,name=frr_bandwidth_protection,json=frrBandwidthProtection,proto3" json:"frr_bandwidth_protection,omitempty"`
	SetupPriority          uint32                     `protobuf:"varint,3,opt,name=setup_priority,json=setupPriority,proto3" json:"setup_priority,omitempty"`
	HoldPriority           uint32                     `protobuf:"varint,4,opt,name=hold_priority,json=holdPriority,proto3" json:"hold_priority,omitempty"`
	IsPriorityConfigured   bool                       `protobuf:"varint,5,opt,name=is_priority_configured,json=isPriorityConfigured,proto3" json:"is_priority_configured,omitempty"`
	ConfiguredBandwidth    uint32                     `protobuf:"varint,6,opt,name=configured_bandwidth,json=configuredBandwidth,proto3" json:"configured_bandwidth,omitempty"`
	DsteClassType          uint32                     `protobuf:"varint,7,opt,name=dste_class_type,json=dsteClassType,proto3" json:"dste_class_type,omitempty"`
	IsBandwidthConfigured  bool                       `protobuf:"varint,8,opt,name=is_bandwidth_configured,json=isBandwidthConfigured,proto3" json:"is_bandwidth_configured,omitempty"`
	TunnelId               []uint32                   `protobuf:"varint,9,rep,packed,name=tunnel_id,json=tunnelId,proto3" json:"tunnel_id,omitempty"`
	Affinity               *MplsTeTunnelsAffinityInfo `protobuf:"bytes,10,opt,name=affinity,proto3" json:"affinity,omitempty"`
	IsAffinityConfigured   bool                       `protobuf:"varint,11,opt,name=is_affinity_configured,json=isAffinityConfigured,proto3" json:"is_affinity_configured,omitempty"`
	XXX_NoUnkeyedLiteral   struct{}                   `json:"-"`
	XXX_unrecognized       []byte                     `json:"-"`
	XXX_sizecache          int32                      `json:"-"`
}

func (m *MplsTeAttributeSetP2MpTe) Reset()         { *m = MplsTeAttributeSetP2MpTe{} }
func (m *MplsTeAttributeSetP2MpTe) String() string { return proto.CompactTextString(m) }
func (*MplsTeAttributeSetP2MpTe) ProtoMessage()    {}
func (*MplsTeAttributeSetP2MpTe) Descriptor() ([]byte, []int) {
	return fileDescriptor_afe0d13f6d8225f2, []int{22}
}

func (m *MplsTeAttributeSetP2MpTe) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsTeAttributeSetP2MpTe.Unmarshal(m, b)
}
func (m *MplsTeAttributeSetP2MpTe) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsTeAttributeSetP2MpTe.Marshal(b, m, deterministic)
}
func (m *MplsTeAttributeSetP2MpTe) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsTeAttributeSetP2MpTe.Merge(m, src)
}
func (m *MplsTeAttributeSetP2MpTe) XXX_Size() int {
	return xxx_messageInfo_MplsTeAttributeSetP2MpTe.Size(m)
}
func (m *MplsTeAttributeSetP2MpTe) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsTeAttributeSetP2MpTe.DiscardUnknown(m)
}

var xxx_messageInfo_MplsTeAttributeSetP2MpTe proto.InternalMessageInfo

func (m *MplsTeAttributeSetP2MpTe) GetFastReroute() bool {
	if m != nil {
		return m.FastReroute
	}
	return false
}

func (m *MplsTeAttributeSetP2MpTe) GetFrrBandwidthProtection() bool {
	if m != nil {
		return m.FrrBandwidthProtection
	}
	return false
}

func (m *MplsTeAttributeSetP2MpTe) GetSetupPriority() uint32 {
	if m != nil {
		return m.SetupPriority
	}
	return 0
}

func (m *MplsTeAttributeSetP2MpTe) GetHoldPriority() uint32 {
	if m != nil {
		return m.HoldPriority
	}
	return 0
}

func (m *MplsTeAttributeSetP2MpTe) GetIsPriorityConfigured() bool {
	if m != nil {
		return m.IsPriorityConfigured
	}
	return false
}

func (m *MplsTeAttributeSetP2MpTe) GetConfiguredBandwidth() uint32 {
	if m != nil {
		return m.ConfiguredBandwidth
	}
	return 0
}

func (m *MplsTeAttributeSetP2MpTe) GetDsteClassType() uint32 {
	if m != nil {
		return m.DsteClassType
	}
	return 0
}

func (m *MplsTeAttributeSetP2MpTe) GetIsBandwidthConfigured() bool {
	if m != nil {
		return m.IsBandwidthConfigured
	}
	return false
}

func (m *MplsTeAttributeSetP2MpTe) GetTunnelId() []uint32 {
	if m != nil {
		return m.TunnelId
	}
	return nil
}

func (m *MplsTeAttributeSetP2MpTe) GetAffinity() *MplsTeTunnelsAffinityInfo {
	if m != nil {
		return m.Affinity
	}
	return nil
}

func (m *MplsTeAttributeSetP2MpTe) GetIsAffinityConfigured() bool {
	if m != nil {
		return m.IsAffinityConfigured
	}
	return false
}

type TeRevertSchT struct {
	Schedulename         []string `protobuf:"bytes,1,rep,name=schedulename,proto3" json:"schedulename,omitempty"`
	ScheduleDate         uint32   `protobuf:"varint,2,opt,name=schedule_date,json=scheduleDate,proto3" json:"schedule_date,omitempty"`
	ScheduleFrequency    string   `protobuf:"bytes,3,opt,name=schedule_frequency,json=scheduleFrequency,proto3" json:"schedule_frequency,omitempty"`
	Duration             uint32   `protobuf:"varint,4,opt,name=duration,proto3" json:"duration,omitempty"`
	MaxTries             uint32   `protobuf:"varint,5,opt,name=max_tries,json=maxTries,proto3" json:"max_tries,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TeRevertSchT) Reset()         { *m = TeRevertSchT{} }
func (m *TeRevertSchT) String() string { return proto.CompactTextString(m) }
func (*TeRevertSchT) ProtoMessage()    {}
func (*TeRevertSchT) Descriptor() ([]byte, []int) {
	return fileDescriptor_afe0d13f6d8225f2, []int{23}
}

func (m *TeRevertSchT) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TeRevertSchT.Unmarshal(m, b)
}
func (m *TeRevertSchT) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TeRevertSchT.Marshal(b, m, deterministic)
}
func (m *TeRevertSchT) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TeRevertSchT.Merge(m, src)
}
func (m *TeRevertSchT) XXX_Size() int {
	return xxx_messageInfo_TeRevertSchT.Size(m)
}
func (m *TeRevertSchT) XXX_DiscardUnknown() {
	xxx_messageInfo_TeRevertSchT.DiscardUnknown(m)
}

var xxx_messageInfo_TeRevertSchT proto.InternalMessageInfo

func (m *TeRevertSchT) GetSchedulename() []string {
	if m != nil {
		return m.Schedulename
	}
	return nil
}

func (m *TeRevertSchT) GetScheduleDate() uint32 {
	if m != nil {
		return m.ScheduleDate
	}
	return 0
}

func (m *TeRevertSchT) GetScheduleFrequency() string {
	if m != nil {
		return m.ScheduleFrequency
	}
	return ""
}

func (m *TeRevertSchT) GetDuration() uint32 {
	if m != nil {
		return m.Duration
	}
	return 0
}

func (m *TeRevertSchT) GetMaxTries() uint32 {
	if m != nil {
		return m.MaxTries
	}
	return 0
}

type MplsTeAttributeSetApsPp struct {
	SncMode              string        `protobuf:"bytes,1,opt,name=snc_mode,json=sncMode,proto3" json:"snc_mode,omitempty"`
	TcmId                uint32        `protobuf:"varint,2,opt,name=tcm_id,json=tcmId,proto3" json:"tcm_id,omitempty"`
	ProtectionType       string        `protobuf:"bytes,3,opt,name=protection_type,json=protectionType,proto3" json:"protection_type,omitempty"`
	ProtectionMode       string        `protobuf:"bytes,4,opt,name=protection_mode,json=protectionMode,proto3" json:"protection_mode,omitempty"`
	WaitToRestoreTime    uint32        `protobuf:"varint,5,opt,name=wait_to_restore_time,json=waitToRestoreTime,proto3" json:"wait_to_restore_time,omitempty"`
	HoldOffTime          uint32        `protobuf:"varint,6,opt,name=hold_off_time,json=holdOffTime,proto3" json:"hold_off_time,omitempty"`
	RevertSchedule       *TeRevertSchT `protobuf:"bytes,7,opt,name=revert_schedule,json=revertSchedule,proto3" json:"revert_schedule,omitempty"`
	PathProtProfileType  string        `protobuf:"bytes,8,opt,name=path_prot_profile_type,json=pathProtProfileType,proto3" json:"path_prot_profile_type,omitempty"`
	RestorationStyle     string        `protobuf:"bytes,9,opt,name=restoration_style,json=restorationStyle,proto3" json:"restoration_style,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *MplsTeAttributeSetApsPp) Reset()         { *m = MplsTeAttributeSetApsPp{} }
func (m *MplsTeAttributeSetApsPp) String() string { return proto.CompactTextString(m) }
func (*MplsTeAttributeSetApsPp) ProtoMessage()    {}
func (*MplsTeAttributeSetApsPp) Descriptor() ([]byte, []int) {
	return fileDescriptor_afe0d13f6d8225f2, []int{24}
}

func (m *MplsTeAttributeSetApsPp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsTeAttributeSetApsPp.Unmarshal(m, b)
}
func (m *MplsTeAttributeSetApsPp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsTeAttributeSetApsPp.Marshal(b, m, deterministic)
}
func (m *MplsTeAttributeSetApsPp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsTeAttributeSetApsPp.Merge(m, src)
}
func (m *MplsTeAttributeSetApsPp) XXX_Size() int {
	return xxx_messageInfo_MplsTeAttributeSetApsPp.Size(m)
}
func (m *MplsTeAttributeSetApsPp) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsTeAttributeSetApsPp.DiscardUnknown(m)
}

var xxx_messageInfo_MplsTeAttributeSetApsPp proto.InternalMessageInfo

func (m *MplsTeAttributeSetApsPp) GetSncMode() string {
	if m != nil {
		return m.SncMode
	}
	return ""
}

func (m *MplsTeAttributeSetApsPp) GetTcmId() uint32 {
	if m != nil {
		return m.TcmId
	}
	return 0
}

func (m *MplsTeAttributeSetApsPp) GetProtectionType() string {
	if m != nil {
		return m.ProtectionType
	}
	return ""
}

func (m *MplsTeAttributeSetApsPp) GetProtectionMode() string {
	if m != nil {
		return m.ProtectionMode
	}
	return ""
}

func (m *MplsTeAttributeSetApsPp) GetWaitToRestoreTime() uint32 {
	if m != nil {
		return m.WaitToRestoreTime
	}
	return 0
}

func (m *MplsTeAttributeSetApsPp) GetHoldOffTime() uint32 {
	if m != nil {
		return m.HoldOffTime
	}
	return 0
}

func (m *MplsTeAttributeSetApsPp) GetRevertSchedule() *TeRevertSchT {
	if m != nil {
		return m.RevertSchedule
	}
	return nil
}

func (m *MplsTeAttributeSetApsPp) GetPathProtProfileType() string {
	if m != nil {
		return m.PathProtProfileType
	}
	return ""
}

func (m *MplsTeAttributeSetApsPp) GetRestorationStyle() string {
	if m != nil {
		return m.RestorationStyle
	}
	return ""
}

type MplsTeAttributeSetSrPrependEntry struct {
	Type                 string   `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Index                uint32   `protobuf:"varint,2,opt,name=index,proto3" json:"index,omitempty"`
	NextLabel            uint32   `protobuf:"varint,3,opt,name=next_label,json=nextLabel,proto3" json:"next_label,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MplsTeAttributeSetSrPrependEntry) Reset()         { *m = MplsTeAttributeSetSrPrependEntry{} }
func (m *MplsTeAttributeSetSrPrependEntry) String() string { return proto.CompactTextString(m) }
func (*MplsTeAttributeSetSrPrependEntry) ProtoMessage()    {}
func (*MplsTeAttributeSetSrPrependEntry) Descriptor() ([]byte, []int) {
	return fileDescriptor_afe0d13f6d8225f2, []int{25}
}

func (m *MplsTeAttributeSetSrPrependEntry) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsTeAttributeSetSrPrependEntry.Unmarshal(m, b)
}
func (m *MplsTeAttributeSetSrPrependEntry) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsTeAttributeSetSrPrependEntry.Marshal(b, m, deterministic)
}
func (m *MplsTeAttributeSetSrPrependEntry) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsTeAttributeSetSrPrependEntry.Merge(m, src)
}
func (m *MplsTeAttributeSetSrPrependEntry) XXX_Size() int {
	return xxx_messageInfo_MplsTeAttributeSetSrPrependEntry.Size(m)
}
func (m *MplsTeAttributeSetSrPrependEntry) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsTeAttributeSetSrPrependEntry.DiscardUnknown(m)
}

var xxx_messageInfo_MplsTeAttributeSetSrPrependEntry proto.InternalMessageInfo

func (m *MplsTeAttributeSetSrPrependEntry) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *MplsTeAttributeSetSrPrependEntry) GetIndex() uint32 {
	if m != nil {
		return m.Index
	}
	return 0
}

func (m *MplsTeAttributeSetSrPrependEntry) GetNextLabel() uint32 {
	if m != nil {
		return m.NextLabel
	}
	return 0
}

type MplsTeAttributeSetSrPrependList struct {
	PrependEntry         []*MplsTeAttributeSetSrPrependEntry `protobuf:"bytes,1,rep,name=prepend_entry,json=prependEntry,proto3" json:"prepend_entry,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                            `json:"-"`
	XXX_unrecognized     []byte                              `json:"-"`
	XXX_sizecache        int32                               `json:"-"`
}

func (m *MplsTeAttributeSetSrPrependList) Reset()         { *m = MplsTeAttributeSetSrPrependList{} }
func (m *MplsTeAttributeSetSrPrependList) String() string { return proto.CompactTextString(m) }
func (*MplsTeAttributeSetSrPrependList) ProtoMessage()    {}
func (*MplsTeAttributeSetSrPrependList) Descriptor() ([]byte, []int) {
	return fileDescriptor_afe0d13f6d8225f2, []int{26}
}

func (m *MplsTeAttributeSetSrPrependList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsTeAttributeSetSrPrependList.Unmarshal(m, b)
}
func (m *MplsTeAttributeSetSrPrependList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsTeAttributeSetSrPrependList.Marshal(b, m, deterministic)
}
func (m *MplsTeAttributeSetSrPrependList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsTeAttributeSetSrPrependList.Merge(m, src)
}
func (m *MplsTeAttributeSetSrPrependList) XXX_Size() int {
	return xxx_messageInfo_MplsTeAttributeSetSrPrependList.Size(m)
}
func (m *MplsTeAttributeSetSrPrependList) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsTeAttributeSetSrPrependList.DiscardUnknown(m)
}

var xxx_messageInfo_MplsTeAttributeSetSrPrependList proto.InternalMessageInfo

func (m *MplsTeAttributeSetSrPrependList) GetPrependEntry() []*MplsTeAttributeSetSrPrependEntry {
	if m != nil {
		return m.PrependEntry
	}
	return nil
}

type MplsTeAttributeSetP2PTe struct {
	TunnelId                                                   []uint32                         `protobuf:"varint,1,rep,packed,name=tunnel_id,json=tunnelId,proto3" json:"tunnel_id,omitempty"`
	Affinity                                                   *MplsTeTunnelsAffinityInfo       `protobuf:"bytes,2,opt,name=affinity,proto3" json:"affinity,omitempty"`
	IsAffinityConfigured                                       bool                             `protobuf:"varint,3,opt,name=is_affinity_configured,json=isAffinityConfigured,proto3" json:"is_affinity_configured,omitempty"`
	PathSelectionSegmentRoutingAdjacencyProtection             string                           `protobuf:"bytes,4,opt,name=path_selection_segment_routing_adjacency_protection,json=pathSelectionSegmentRoutingAdjacencyProtection,proto3" json:"path_selection_segment_routing_adjacency_protection,omitempty"`
	IsPathSelectionSegmentRoutingAdjacencyProtectionConfigured bool                             `protobuf:"varint,5,opt,name=is_path_selection_segment_routing_adjacency_protection_configured,json=isPathSelectionSegmentRoutingAdjacencyProtectionConfigured,proto3" json:"is_path_selection_segment_routing_adjacency_protection_configured,omitempty"`
	PathInvalidationTimeout                                    uint32                           `protobuf:"varint,6,opt,name=path_invalidation_timeout,json=pathInvalidationTimeout,proto3" json:"path_invalidation_timeout,omitempty"`
	PathSelectionInvalidationAction                            string                           `protobuf:"bytes,7,opt,name=path_selection_invalidation_action,json=pathSelectionInvalidationAction,proto3" json:"path_selection_invalidation_action,omitempty"`
	IsPathInvalidationTimeoutConfigured                        bool                             `protobuf:"varint,8,opt,name=is_path_invalidation_timeout_configured,json=isPathInvalidationTimeoutConfigured,proto3" json:"is_path_invalidation_timeout_configured,omitempty"`
	IsPathInvalidationActionConfigured                         bool                             `protobuf:"varint,9,opt,name=is_path_invalidation_action_configured,json=isPathInvalidationActionConfigured,proto3" json:"is_path_invalidation_action_configured,omitempty"`
	PathSelectionMetric                                        string                           `protobuf:"bytes,10,opt,name=path_selection_metric,json=pathSelectionMetric,proto3" json:"path_selection_metric,omitempty"`
	IsPathSelectionMetricConfigured                            bool                             `protobuf:"varint,11,opt,name=is_path_selection_metric_configured,json=isPathSelectionMetricConfigured,proto3" json:"is_path_selection_metric_configured,omitempty"`
	PathSelectionSegmentRoutingMargin                          uint32                           `protobuf:"varint,12,opt,name=path_selection_segment_routing_margin,json=pathSelectionSegmentRoutingMargin,proto3" json:"path_selection_segment_routing_margin,omitempty"`
	IsPathSelectionSegmentRoutingMarginRelative                bool                             `protobuf:"varint,13,opt,name=is_path_selection_segment_routing_margin_relative,json=isPathSelectionSegmentRoutingMarginRelative,proto3" json:"is_path_selection_segment_routing_margin_relative,omitempty"`
	IsPathSelectionSegmentRoutingMarginConfigured              bool                             `protobuf:"varint,14,opt,name=is_path_selection_segment_routing_margin_configured,json=isPathSelectionSegmentRoutingMarginConfigured,proto3" json:"is_path_selection_segment_routing_margin_configured,omitempty"`
	PathSelectionSegmentRoutingSegmentLimit                    uint32                           `protobuf:"varint,15,opt,name=path_selection_segment_routing_segment_limit,json=pathSelectionSegmentRoutingSegmentLimit,proto3" json:"path_selection_segment_routing_segment_limit,omitempty"`
	IsPathSelectionSegmentRoutingSegmentLimitConfigured        bool                             `protobuf:"varint,16,opt,name=is_path_selection_segment_routing_segment_limit_configured,json=isPathSelectionSegmentRoutingSegmentLimitConfigured,proto3" json:"is_path_selection_segment_routing_segment_limit_configured,omitempty"`
	IsPathSelectConfigured                                     bool                             `protobuf:"varint,17,opt,name=is_path_select_configured,json=isPathSelectConfigured,proto3" json:"is_path_select_configured,omitempty"`
	Logging                                                    *MplsTeLoggingAttributes         `protobuf:"bytes,18,opt,name=logging,proto3" json:"logging,omitempty"`
	PrependList                                                *MplsTeAttributeSetSrPrependList `protobuf:"bytes,19,opt,name=prepend_list,json=prependList,proto3" json:"prepend_list,omitempty"`
	IsPrependListConfigured                                    bool                             `protobuf:"varint,20,opt,name=is_prepend_list_configured,json=isPrependListConfigured,proto3" json:"is_prepend_list_configured,omitempty"`
	IsPceConfigured                                            bool                             `protobuf:"varint,21,opt,name=is_pce_configured,json=isPceConfigured,proto3" json:"is_pce_configured,omitempty"`
	IsPceDisjSourceConfigured                                  bool                             `protobuf:"varint,22,opt,name=is_pce_disj_source_configured,json=isPceDisjSourceConfigured,proto3" json:"is_pce_disj_source_configured,omitempty"`
	IsPceDisjTypeConfigured                                    bool                             `protobuf:"varint,23,opt,name=is_pce_disj_type_configured,json=isPceDisjTypeConfigured,proto3" json:"is_pce_disj_type_configured,omitempty"`
	IsPceDisjGroupIdConfigured                                 bool                             `protobuf:"varint,24,opt,name=is_pce_disj_group_id_configured,json=isPceDisjGroupIdConfigured,proto3" json:"is_pce_disj_group_id_configured,omitempty"`
	PcedpSourceAddress                                         uint32                           `protobuf:"varint,25,opt,name=pcedp_source_address,json=pcedpSourceAddress,proto3" json:"pcedp_source_address,omitempty"`
	PcedpType                                                  string                           `protobuf:"bytes,26,opt,name=pcedp_type,json=pcedpType,proto3" json:"pcedp_type,omitempty"`
	PcedpGroupId                                               uint32                           `protobuf:"varint,27,opt,name=pcedp_group_id,json=pcedpGroupId,proto3" json:"pcedp_group_id,omitempty"`
	IsPcebDjSourceConfigured                                   bool                             `protobuf:"varint,28,opt,name=is_pceb_dj_source_configured,json=isPcebDjSourceConfigured,proto3" json:"is_pceb_dj_source_configured,omitempty"`
	IsPcebdGroupIdConfigured                                   bool                             `protobuf:"varint,29,opt,name=is_pcebd_group_id_configured,json=isPcebdGroupIdConfigured,proto3" json:"is_pcebd_group_id_configured,omitempty"`
	PcebdSourceAddress                                         uint32                           `protobuf:"varint,30,opt,name=pcebd_source_address,json=pcebdSourceAddress,proto3" json:"pcebd_source_address,omitempty"`
	PcebdGroupId                                               uint32                           `protobuf:"varint,31,opt,name=pcebd_group_id,json=pcebdGroupId,proto3" json:"pcebd_group_id,omitempty"`
	XXX_NoUnkeyedLiteral                                       struct{}                         `json:"-"`
	XXX_unrecognized                                           []byte                           `json:"-"`
	XXX_sizecache                                              int32                            `json:"-"`
}

func (m *MplsTeAttributeSetP2PTe) Reset()         { *m = MplsTeAttributeSetP2PTe{} }
func (m *MplsTeAttributeSetP2PTe) String() string { return proto.CompactTextString(m) }
func (*MplsTeAttributeSetP2PTe) ProtoMessage()    {}
func (*MplsTeAttributeSetP2PTe) Descriptor() ([]byte, []int) {
	return fileDescriptor_afe0d13f6d8225f2, []int{27}
}

func (m *MplsTeAttributeSetP2PTe) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsTeAttributeSetP2PTe.Unmarshal(m, b)
}
func (m *MplsTeAttributeSetP2PTe) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsTeAttributeSetP2PTe.Marshal(b, m, deterministic)
}
func (m *MplsTeAttributeSetP2PTe) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsTeAttributeSetP2PTe.Merge(m, src)
}
func (m *MplsTeAttributeSetP2PTe) XXX_Size() int {
	return xxx_messageInfo_MplsTeAttributeSetP2PTe.Size(m)
}
func (m *MplsTeAttributeSetP2PTe) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsTeAttributeSetP2PTe.DiscardUnknown(m)
}

var xxx_messageInfo_MplsTeAttributeSetP2PTe proto.InternalMessageInfo

func (m *MplsTeAttributeSetP2PTe) GetTunnelId() []uint32 {
	if m != nil {
		return m.TunnelId
	}
	return nil
}

func (m *MplsTeAttributeSetP2PTe) GetAffinity() *MplsTeTunnelsAffinityInfo {
	if m != nil {
		return m.Affinity
	}
	return nil
}

func (m *MplsTeAttributeSetP2PTe) GetIsAffinityConfigured() bool {
	if m != nil {
		return m.IsAffinityConfigured
	}
	return false
}

func (m *MplsTeAttributeSetP2PTe) GetPathSelectionSegmentRoutingAdjacencyProtection() string {
	if m != nil {
		return m.PathSelectionSegmentRoutingAdjacencyProtection
	}
	return ""
}

func (m *MplsTeAttributeSetP2PTe) GetIsPathSelectionSegmentRoutingAdjacencyProtectionConfigured() bool {
	if m != nil {
		return m.IsPathSelectionSegmentRoutingAdjacencyProtectionConfigured
	}
	return false
}

func (m *MplsTeAttributeSetP2PTe) GetPathInvalidationTimeout() uint32 {
	if m != nil {
		return m.PathInvalidationTimeout
	}
	return 0
}

func (m *MplsTeAttributeSetP2PTe) GetPathSelectionInvalidationAction() string {
	if m != nil {
		return m.PathSelectionInvalidationAction
	}
	return ""
}

func (m *MplsTeAttributeSetP2PTe) GetIsPathInvalidationTimeoutConfigured() bool {
	if m != nil {
		return m.IsPathInvalidationTimeoutConfigured
	}
	return false
}

func (m *MplsTeAttributeSetP2PTe) GetIsPathInvalidationActionConfigured() bool {
	if m != nil {
		return m.IsPathInvalidationActionConfigured
	}
	return false
}

func (m *MplsTeAttributeSetP2PTe) GetPathSelectionMetric() string {
	if m != nil {
		return m.PathSelectionMetric
	}
	return ""
}

func (m *MplsTeAttributeSetP2PTe) GetIsPathSelectionMetricConfigured() bool {
	if m != nil {
		return m.IsPathSelectionMetricConfigured
	}
	return false
}

func (m *MplsTeAttributeSetP2PTe) GetPathSelectionSegmentRoutingMargin() uint32 {
	if m != nil {
		return m.PathSelectionSegmentRoutingMargin
	}
	return 0
}

func (m *MplsTeAttributeSetP2PTe) GetIsPathSelectionSegmentRoutingMarginRelative() bool {
	if m != nil {
		return m.IsPathSelectionSegmentRoutingMarginRelative
	}
	return false
}

func (m *MplsTeAttributeSetP2PTe) GetIsPathSelectionSegmentRoutingMarginConfigured() bool {
	if m != nil {
		return m.IsPathSelectionSegmentRoutingMarginConfigured
	}
	return false
}

func (m *MplsTeAttributeSetP2PTe) GetPathSelectionSegmentRoutingSegmentLimit() uint32 {
	if m != nil {
		return m.PathSelectionSegmentRoutingSegmentLimit
	}
	return 0
}

func (m *MplsTeAttributeSetP2PTe) GetIsPathSelectionSegmentRoutingSegmentLimitConfigured() bool {
	if m != nil {
		return m.IsPathSelectionSegmentRoutingSegmentLimitConfigured
	}
	return false
}

func (m *MplsTeAttributeSetP2PTe) GetIsPathSelectConfigured() bool {
	if m != nil {
		return m.IsPathSelectConfigured
	}
	return false
}

func (m *MplsTeAttributeSetP2PTe) GetLogging() *MplsTeLoggingAttributes {
	if m != nil {
		return m.Logging
	}
	return nil
}

func (m *MplsTeAttributeSetP2PTe) GetPrependList() *MplsTeAttributeSetSrPrependList {
	if m != nil {
		return m.PrependList
	}
	return nil
}

func (m *MplsTeAttributeSetP2PTe) GetIsPrependListConfigured() bool {
	if m != nil {
		return m.IsPrependListConfigured
	}
	return false
}

func (m *MplsTeAttributeSetP2PTe) GetIsPceConfigured() bool {
	if m != nil {
		return m.IsPceConfigured
	}
	return false
}

func (m *MplsTeAttributeSetP2PTe) GetIsPceDisjSourceConfigured() bool {
	if m != nil {
		return m.IsPceDisjSourceConfigured
	}
	return false
}

func (m *MplsTeAttributeSetP2PTe) GetIsPceDisjTypeConfigured() bool {
	if m != nil {
		return m.IsPceDisjTypeConfigured
	}
	return false
}

func (m *MplsTeAttributeSetP2PTe) GetIsPceDisjGroupIdConfigured() bool {
	if m != nil {
		return m.IsPceDisjGroupIdConfigured
	}
	return false
}

func (m *MplsTeAttributeSetP2PTe) GetPcedpSourceAddress() uint32 {
	if m != nil {
		return m.PcedpSourceAddress
	}
	return 0
}

func (m *MplsTeAttributeSetP2PTe) GetPcedpType() string {
	if m != nil {
		return m.PcedpType
	}
	return ""
}

func (m *MplsTeAttributeSetP2PTe) GetPcedpGroupId() uint32 {
	if m != nil {
		return m.PcedpGroupId
	}
	return 0
}

func (m *MplsTeAttributeSetP2PTe) GetIsPcebDjSourceConfigured() bool {
	if m != nil {
		return m.IsPcebDjSourceConfigured
	}
	return false
}

func (m *MplsTeAttributeSetP2PTe) GetIsPcebdGroupIdConfigured() bool {
	if m != nil {
		return m.IsPcebdGroupIdConfigured
	}
	return false
}

func (m *MplsTeAttributeSetP2PTe) GetPcebdSourceAddress() uint32 {
	if m != nil {
		return m.PcebdSourceAddress
	}
	return 0
}

func (m *MplsTeAttributeSetP2PTe) GetPcebdGroupId() uint32 {
	if m != nil {
		return m.PcebdGroupId
	}
	return 0
}

type MplsTeAttributeSetUnion struct {
	TunnelAttributeSetType string                        `protobuf:"bytes,1,opt,name=tunnel_attribute_set_type,json=tunnelAttributeSetType,proto3" json:"tunnel_attribute_set_type,omitempty"`
	AttributeSetPathOption *MplsTeAttributeSetPathOption `protobuf:"bytes,2,opt,name=attribute_set_path_option,json=attributeSetPathOption,proto3" json:"attribute_set_path_option,omitempty"`
	AttributeSetAutobackup *MplsTeAttributeSetAutoBackup `protobuf:"bytes,3,opt,name=attribute_set_autobackup,json=attributeSetAutobackup,proto3" json:"attribute_set_autobackup,omitempty"`
	AttributeSetAutomesh   *MplsTeAttributeSetAutoMesh   `protobuf:"bytes,4,opt,name=attribute_set_automesh,json=attributeSetAutomesh,proto3" json:"attribute_set_automesh,omitempty"`
	AttributeSetXro        *MplsTeAttributeSetXro        `protobuf:"bytes,5,opt,name=attribute_set_xro,json=attributeSetXro,proto3" json:"attribute_set_xro,omitempty"`
	AttributeSetP2Mpte     *MplsTeAttributeSetP2MpTe     `protobuf:"bytes,6,opt,name=attribute_set_p2mpte,json=attributeSetP2mpte,proto3" json:"attribute_set_p2mpte,omitempty"`
	AttributeSetApsPp      *MplsTeAttributeSetApsPp      `protobuf:"bytes,7,opt,name=attribute_set_aps_pp,json=attributeSetApsPp,proto3" json:"attribute_set_aps_pp,omitempty"`
	AttributeSetP2PTe      *MplsTeAttributeSetP2PTe      `protobuf:"bytes,8,opt,name=attribute_set_p2p_te,json=attributeSetP2pTe,proto3" json:"attribute_set_p2p_te,omitempty"`
	XXX_NoUnkeyedLiteral   struct{}                      `json:"-"`
	XXX_unrecognized       []byte                        `json:"-"`
	XXX_sizecache          int32                         `json:"-"`
}

func (m *MplsTeAttributeSetUnion) Reset()         { *m = MplsTeAttributeSetUnion{} }
func (m *MplsTeAttributeSetUnion) String() string { return proto.CompactTextString(m) }
func (*MplsTeAttributeSetUnion) ProtoMessage()    {}
func (*MplsTeAttributeSetUnion) Descriptor() ([]byte, []int) {
	return fileDescriptor_afe0d13f6d8225f2, []int{28}
}

func (m *MplsTeAttributeSetUnion) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsTeAttributeSetUnion.Unmarshal(m, b)
}
func (m *MplsTeAttributeSetUnion) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsTeAttributeSetUnion.Marshal(b, m, deterministic)
}
func (m *MplsTeAttributeSetUnion) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsTeAttributeSetUnion.Merge(m, src)
}
func (m *MplsTeAttributeSetUnion) XXX_Size() int {
	return xxx_messageInfo_MplsTeAttributeSetUnion.Size(m)
}
func (m *MplsTeAttributeSetUnion) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsTeAttributeSetUnion.DiscardUnknown(m)
}

var xxx_messageInfo_MplsTeAttributeSetUnion proto.InternalMessageInfo

func (m *MplsTeAttributeSetUnion) GetTunnelAttributeSetType() string {
	if m != nil {
		return m.TunnelAttributeSetType
	}
	return ""
}

func (m *MplsTeAttributeSetUnion) GetAttributeSetPathOption() *MplsTeAttributeSetPathOption {
	if m != nil {
		return m.AttributeSetPathOption
	}
	return nil
}

func (m *MplsTeAttributeSetUnion) GetAttributeSetAutobackup() *MplsTeAttributeSetAutoBackup {
	if m != nil {
		return m.AttributeSetAutobackup
	}
	return nil
}

func (m *MplsTeAttributeSetUnion) GetAttributeSetAutomesh() *MplsTeAttributeSetAutoMesh {
	if m != nil {
		return m.AttributeSetAutomesh
	}
	return nil
}

func (m *MplsTeAttributeSetUnion) GetAttributeSetXro() *MplsTeAttributeSetXro {
	if m != nil {
		return m.AttributeSetXro
	}
	return nil
}

func (m *MplsTeAttributeSetUnion) GetAttributeSetP2Mpte() *MplsTeAttributeSetP2MpTe {
	if m != nil {
		return m.AttributeSetP2Mpte
	}
	return nil
}

func (m *MplsTeAttributeSetUnion) GetAttributeSetApsPp() *MplsTeAttributeSetApsPp {
	if m != nil {
		return m.AttributeSetApsPp
	}
	return nil
}

func (m *MplsTeAttributeSetUnion) GetAttributeSetP2PTe() *MplsTeAttributeSetP2PTe {
	if m != nil {
		return m.AttributeSetP2PTe
	}
	return nil
}

type MplsTeAttributeSet struct {
	TunnelAttributeSetName      string                   `protobuf:"bytes,50,opt,name=tunnel_attribute_set_name,json=tunnelAttributeSetName,proto3" json:"tunnel_attribute_set_name,omitempty"`
	TunnelAttributeSetNameCrc32 uint32                   `protobuf:"varint,51,opt,name=tunnel_attribute_set_name_crc32,json=tunnelAttributeSetNameCrc32,proto3" json:"tunnel_attribute_set_name_crc32,omitempty"`
	AttributeSetUnion           *MplsTeAttributeSetUnion `protobuf:"bytes,52,opt,name=attribute_set_union,json=attributeSetUnion,proto3" json:"attribute_set_union,omitempty"`
	XXX_NoUnkeyedLiteral        struct{}                 `json:"-"`
	XXX_unrecognized            []byte                   `json:"-"`
	XXX_sizecache               int32                    `json:"-"`
}

func (m *MplsTeAttributeSet) Reset()         { *m = MplsTeAttributeSet{} }
func (m *MplsTeAttributeSet) String() string { return proto.CompactTextString(m) }
func (*MplsTeAttributeSet) ProtoMessage()    {}
func (*MplsTeAttributeSet) Descriptor() ([]byte, []int) {
	return fileDescriptor_afe0d13f6d8225f2, []int{29}
}

func (m *MplsTeAttributeSet) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsTeAttributeSet.Unmarshal(m, b)
}
func (m *MplsTeAttributeSet) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsTeAttributeSet.Marshal(b, m, deterministic)
}
func (m *MplsTeAttributeSet) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsTeAttributeSet.Merge(m, src)
}
func (m *MplsTeAttributeSet) XXX_Size() int {
	return xxx_messageInfo_MplsTeAttributeSet.Size(m)
}
func (m *MplsTeAttributeSet) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsTeAttributeSet.DiscardUnknown(m)
}

var xxx_messageInfo_MplsTeAttributeSet proto.InternalMessageInfo

func (m *MplsTeAttributeSet) GetTunnelAttributeSetName() string {
	if m != nil {
		return m.TunnelAttributeSetName
	}
	return ""
}

func (m *MplsTeAttributeSet) GetTunnelAttributeSetNameCrc32() uint32 {
	if m != nil {
		return m.TunnelAttributeSetNameCrc32
	}
	return 0
}

func (m *MplsTeAttributeSet) GetAttributeSetUnion() *MplsTeAttributeSetUnion {
	if m != nil {
		return m.AttributeSetUnion
	}
	return nil
}

func init() {
	proto.RegisterType((*MplsTeAttributeSet_KEYS)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te_standby.attribute_sets.attribute_set.mpls_te_attribute_set_KEYS")
	proto.RegisterType((*AffinityNameBag)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te_standby.attribute_sets.attribute_set.affinity_name_bag")
	proto.RegisterType((*MplsTeTunnelsAffinityInfo)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te_standby.attribute_sets.attribute_set.mpls_te_tunnels_affinity_info")
	proto.RegisterType((*MplsTeAttributeSetVersion)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te_standby.attribute_sets.attribute_set.mpls_te_attribute_set_version")
	proto.RegisterType((*MplsTeAttributeSetBfdRevPath)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te_standby.attribute_sets.attribute_set.mpls_te_attribute_set_bfd_rev_path")
	proto.RegisterType((*MplsTeAttributeSetPathOption)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te_standby.attribute_sets.attribute_set.mpls_te_attribute_set_path_option")
	proto.RegisterType((*MplsTeAttributeSetSigName)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te_standby.attribute_sets.attribute_set.mpls_te_attribute_set_sig_name")
	proto.RegisterType((*MplsTeLoggingAttributes)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te_standby.attribute_sets.attribute_set.mpls_te_logging_attributes")
	proto.RegisterType((*MplsTeProtectedIfNameStr)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te_standby.attribute_sets.attribute_set.mpls_te_protected_if_name_str")
	proto.RegisterType((*MplsTeAttributeSetAutoBackup)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te_standby.attribute_sets.attribute_set.mpls_te_attribute_set_auto_backup")
	proto.RegisterType((*MplsTeAttributeSetAutoMesh)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te_standby.attribute_sets.attribute_set.mpls_te_attribute_set_auto_mesh")
	proto.RegisterType((*TeXroSubobjIpv4)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te_standby.attribute_sets.attribute_set.te_xro_subobj_ipv4")
	proto.RegisterType((*TeXroSubobjIpv6)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te_standby.attribute_sets.attribute_set.te_xro_subobj_ipv6")
	proto.RegisterType((*TeXroSubobjUnnum)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te_standby.attribute_sets.attribute_set.te_xro_subobj_unnum")
	proto.RegisterType((*TeXroSubobjAs)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te_standby.attribute_sets.attribute_set.te_xro_subobj_as")
	proto.RegisterType((*TeXroSubobjSrlg)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te_standby.attribute_sets.attribute_set.te_xro_subobj_srlg")
	proto.RegisterType((*TeLspFecCtypeDataT)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te_standby.attribute_sets.attribute_set.te_lsp_fec_ctype_data_t")
	proto.RegisterType((*TeLspFecT)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te_standby.attribute_sets.attribute_set.te_lsp_fec_t")
	proto.RegisterType((*TeXroSubobjP2PLsp)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te_standby.attribute_sets.attribute_set.te_xro_subobj_p2p_lsp")
	proto.RegisterType((*TeXroSubobj)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te_standby.attribute_sets.attribute_set.te_xro_subobj")
	proto.RegisterType((*TeXro)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te_standby.attribute_sets.attribute_set.te_xro")
	proto.RegisterType((*MplsTeAttributeSetXro)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te_standby.attribute_sets.attribute_set.mpls_te_attribute_set_xro")
	proto.RegisterType((*MplsTeAttributeSetP2MpTe)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te_standby.attribute_sets.attribute_set.mpls_te_attribute_set_p2mp_te")
	proto.RegisterType((*TeRevertSchT)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te_standby.attribute_sets.attribute_set.te_revert_sch_t")
	proto.RegisterType((*MplsTeAttributeSetApsPp)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te_standby.attribute_sets.attribute_set.mpls_te_attribute_set_aps_pp")
	proto.RegisterType((*MplsTeAttributeSetSrPrependEntry)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te_standby.attribute_sets.attribute_set.mpls_te_attribute_set_sr_prepend_entry")
	proto.RegisterType((*MplsTeAttributeSetSrPrependList)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te_standby.attribute_sets.attribute_set.mpls_te_attribute_set_sr_prepend_list")
	proto.RegisterType((*MplsTeAttributeSetP2PTe)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te_standby.attribute_sets.attribute_set.mpls_te_attribute_set_p2p_te")
	proto.RegisterType((*MplsTeAttributeSetUnion)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te_standby.attribute_sets.attribute_set.mpls_te_attribute_set_union")
	proto.RegisterType((*MplsTeAttributeSet)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te_standby.attribute_sets.attribute_set.mpls_te_attribute_set")
}

func init() { proto.RegisterFile("mpls_te_attribute_set.proto", fileDescriptor_afe0d13f6d8225f2) }

var fileDescriptor_afe0d13f6d8225f2 = []byte{
	// 3514 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xcc, 0x5b, 0xc9, 0x73, 0xdc, 0x46,
	0x77, 0x2f, 0x90, 0x14, 0x39, 0xf3, 0x86, 0xc3, 0x05, 0xdc, 0x86, 0xa4, 0xd6, 0x51, 0xb4, 0xc4,
	0x8b, 0x1c, 0x8f, 0x14, 0x25, 0x96, 0x5d, 0x49, 0xa8, 0x2d, 0x61, 0x99, 0x92, 0x59, 0x20, 0xed,
	0xd8, 0x49, 0xb9, 0x10, 0x0c, 0xd0, 0x18, 0xb6, 0x84, 0x01, 0x60, 0x74, 0x0f, 0x97, 0x2c, 0x55,
	0x8e, 0xab, 0x5c, 0x95, 0x43, 0x9c, 0xca, 0xe2, 0x24, 0x27, 0x97, 0x0f, 0xc9, 0x39, 0x39, 0x26,
	0x97, 0x5c, 0xfc, 0x1f, 0xe4, 0x9e, 0x53, 0x0e, 0xa9, 0x1c, 0xbe, 0xd3, 0xf7, 0x17, 0x7c, 0xd5,
	0xaf, 0x1b, 0x40, 0x63, 0x30, 0x33, 0xda, 0x38, 0xb2, 0x2e, 0x12, 0xf1, 0x16, 0xbc, 0x5f, 0x2f,
	0xef, 0xf5, 0x7b, 0x0f, 0x3d, 0xb0, 0xd9, 0x8d, 0x03, 0x66, 0x73, 0x62, 0x3b, 0x9c, 0x27, 0xb4,
	0xdd, 0xe3, 0xc4, 0x66, 0x84, 0xdf, 0x88, 0x93, 0x88, 0x47, 0xe6, 0x43, 0x97, 0x32, 0x37, 0xb2,
	0x69, 0xc4, 0xec, 0xe3, 0xc4, 0x4e, 0x25, 0xa3, 0x98, 0x24, 0x37, 0xd2, 0x07, 0xc6, 0x9d, 0xd0,
	0x6b, 0x9f, 0xdc, 0x28, 0xa8, 0xb3, 0xe2, 0x63, 0xf3, 0x18, 0x36, 0x06, 0x9a, 0xb1, 0x3f, 0x7e,
	0xf0, 0xc5, 0x9e, 0xf9, 0x0e, 0x98, 0x45, 0x2a, 0x3f, 0x89, 0x49, 0xc3, 0xb8, 0x68, 0x5c, 0xaf,
	0x5a, 0x0b, 0x19, 0x67, 0x8f, 0xf0, 0xfd, 0x93, 0x98, 0x94, 0xa5, 0x43, 0xa7, 0x4b, 0x1a, 0x13,
	0x65, 0xe9, 0xc7, 0x4e, 0x97, 0x34, 0xff, 0x7a, 0x02, 0x16, 0x1d, 0xdf, 0xa7, 0x21, 0xe5, 0x27,
	0x28, 0x69, 0xb7, 0x9d, 0x8e, 0x79, 0x0d, 0xe6, 0xdd, 0x28, 0x64, 0x3c, 0x71, 0x68, 0xa8, 0x99,
	0xab, 0x5b, 0x73, 0x39, 0x19, 0x8d, 0xfd, 0x3a, 0x2c, 0x68, 0x82, 0x87, 0x4e, 0xd0, 0x93, 0xa6,
	0xea, 0x96, 0xf6, 0x82, 0xcf, 0x04, 0xd9, 0x7c, 0x0b, 0x16, 0xfd, 0x28, 0x39, 0x72, 0x12, 0xcf,
	0x4e, 0x88, 0xaf, 0x64, 0x27, 0xa5, 0xac, 0x62, 0x58, 0xc4, 0x97, 0xb2, 0x77, 0x60, 0x5d, 0x7b,
	0x2d, 0x39, 0xe6, 0x24, 0xf4, 0x88, 0xa7, 0x74, 0xa6, 0x2e, 0x4e, 0x5e, 0xaf, 0x5b, 0x6b, 0xb9,
	0xc0, 0x03, 0xc5, 0x97, 0xba, 0x1f, 0xc2, 0x46, 0xa6, 0x50, 0x36, 0x78, 0x46, 0x2a, 0xa7, 0x12,
	0x0f, 0x8b, 0x86, 0x9b, 0xbf, 0x30, 0xe0, 0x5c, 0xba, 0x12, 0xbc, 0x17, 0x86, 0x24, 0x60, 0x76,
	0x36, 0x3d, 0x34, 0xf4, 0x23, 0xf3, 0x32, 0xd4, 0x33, 0x42, 0x9b, 0x72, 0xa6, 0x26, 0x66, 0x36,
	0x25, 0xde, 0xa5, 0x9c, 0x15, 0x84, 0xba, 0x0e, 0x7b, 0xaa, 0xe6, 0x24, 0x13, 0x7a, 0xe4, 0xb0,
	0xa7, 0xe6, 0xd7, 0x06, 0xcc, 0x89, 0x19, 0xf7, 0x32, 0x0b, 0x8d, 0xc9, 0x8b, 0x93, 0xd7, 0x6b,
	0xad, 0x2f, 0x6e, 0x9c, 0xce, 0xb6, 0xba, 0x51, 0x5a, 0x58, 0xab, 0x8e, 0x06, 0xb7, 0x14, 0xbd,
	0xf9, 0xad, 0x36, 0xdc, 0xe2, 0xa6, 0x39, 0x24, 0x09, 0xa3, 0x51, 0x68, 0x5e, 0x81, 0xb9, 0x9c,
	0xa1, 0xed, 0xbb, 0x7a, 0x46, 0xc5, 0x7d, 0x70, 0x1e, 0xa0, 0x43, 0x42, 0x92, 0x38, 0x9c, 0x46,
	0xa1, 0x1a, 0xad, 0x46, 0x31, 0xcf, 0x01, 0x50, 0x66, 0x7b, 0xc4, 0x77, 0x7a, 0x01, 0xc7, 0x55,
	0xaf, 0x58, 0x55, 0xca, 0xee, 0x4b, 0x42, 0xd3, 0x87, 0xe6, 0x60, 0x18, 0x6d, 0x5f, 0x2c, 0xde,
	0xa1, 0x1d, 0x3b, 0xfc, 0xc0, 0xdc, 0x84, 0xaa, 0xf8, 0x5f, 0x87, 0x51, 0x11, 0x04, 0x44, 0x70,
	0x19, 0xea, 0x6d, 0x1a, 0x7a, 0x34, 0xec, 0xd8, 0x81, 0xd3, 0x26, 0x41, 0x3a, 0xe5, 0x8a, 0xb8,
	0x23, 0x68, 0xcd, 0xff, 0x9d, 0x83, 0x4b, 0x83, 0x0d, 0xe1, 0x8b, 0xa3, 0x18, 0xc1, 0xbe, 0x0f,
	0xcb, 0x6e, 0x14, 0xfa, 0xb4, 0xd3, 0x4b, 0x88, 0x67, 0xb7, 0x9d, 0xd0, 0x3b, 0xa2, 0x1e, 0x3f,
	0x50, 0x2b, 0xbd, 0x94, 0xf3, 0xee, 0xa6, 0x2c, 0x31, 0x3e, 0x37, 0x62, 0xdc, 0x0e, 0x68, 0x97,
	0x72, 0x65, 0xba, 0x2a, 0x28, 0x3b, 0x82, 0x60, 0x5e, 0x85, 0x79, 0x8f, 0x71, 0x62, 0xbb, 0x81,
	0xc3, 0x98, 0xc4, 0x2f, 0x77, 0x7e, 0x5d, 0x90, 0xef, 0x09, 0x2a, 0x0e, 0xe2, 0x0a, 0xcc, 0x65,
	0xe6, 0xa4, 0xd8, 0x94, 0x9c, 0xed, 0x8c, 0x8a, 0x62, 0xb7, 0x61, 0x8d, 0xb2, 0x1c, 0x98, 0x9d,
	0x23, 0x6a, 0x9c, 0xc1, 0xa9, 0x5d, 0xa1, 0x2c, 0xc3, 0x76, 0x2f, 0x63, 0x9a, 0xbf, 0x05, 0x0d,
	0xca, 0xec, 0x1c, 0xa8, 0xae, 0x38, 0x9d, 0x2a, 0xde, 0x4b, 0x51, 0x6b, 0x8a, 0x7f, 0x69, 0x40,
	0x25, 0xdb, 0xa4, 0x33, 0x17, 0x8d, 0xeb, 0xb5, 0x16, 0x39, 0xad, 0x4d, 0x3a, 0xd2, 0xdd, 0xac,
	0xcc, 0xac, 0x79, 0x0b, 0x56, 0xa9, 0xc6, 0xd5, 0xa0, 0x57, 0x10, 0xfa, 0x32, 0x65, 0xe9, 0xbe,
	0xd6, 0x90, 0x6f, 0x42, 0x55, 0xbe, 0xd8, 0xa6, 0x5e, 0xa3, 0x8a, 0xce, 0x5f, 0x91, 0x84, 0x6d,
	0xaf, 0x6f, 0xd7, 0x42, 0x69, 0xd7, 0xfe, 0x95, 0x01, 0xb3, 0xca, 0x11, 0x10, 0x4d, 0xa3, 0x86,
	0xfe, 0x79, 0xea, 0x43, 0x1f, 0xe8, 0x7a, 0x56, 0x4d, 0xfd, 0xb1, 0x2d, 0xc2, 0xce, 0x1d, 0x58,
	0xc7, 0x2d, 0x4a, 0xc3, 0x43, 0x27, 0xa0, 0x1e, 0xe2, 0xb3, 0x39, 0xed, 0x92, 0xa8, 0xc7, 0x1b,
	0xb3, 0x88, 0x7c, 0x4d, 0x08, 0x6c, 0x6b, 0xfc, 0x7d, 0xc9, 0x36, 0x7f, 0x1b, 0x1a, 0x65, 0x5d,
	0xc7, 0xc5, 0x41, 0xd7, 0x51, 0x75, 0xb5, 0x5f, 0x75, 0x0b, 0xb9, 0xe6, 0x3e, 0x5c, 0xa3, 0xcc,
	0x1e, 0x6a, 0x58, 0x5f, 0x84, 0x39, 0x5c, 0x84, 0xcb, 0x94, 0xed, 0x0e, 0x46, 0xa1, 0xad, 0x89,
	0x05, 0x57, 0x07, 0xbe, 0x55, 0x42, 0xd2, 0x5f, 0x3a, 0x8f, 0x2f, 0x6d, 0x96, 0x5f, 0x2a, 0xf1,
	0x69, 0xef, 0x7c, 0x0b, 0x16, 0xc9, 0xb1, 0x1b, 0xf4, 0x3c, 0x62, 0x07, 0x94, 0xa9, 0x43, 0x6f,
	0x01, 0x9d, 0x67, 0x5e, 0x31, 0x76, 0x28, 0xc3, 0x33, 0xcf, 0xbc, 0x0f, 0x17, 0x28, 0xb3, 0x4b,
	0xe2, 0xba, 0xe1, 0x45, 0x34, 0xbc, 0x49, 0xd9, 0x83, 0xa2, 0x6e, 0xd1, 0xa2, 0x18, 0x85, 0x5b,
	0xd0, 0x33, 0x51, 0x6f, 0x9e, 0xb2, 0x5d, 0x57, 0x97, 0xfd, 0x3d, 0x38, 0xa7, 0x64, 0x3d, 0xca,
	0x9e, 0xd8, 0x2c, 0xea, 0x25, 0x45, 0xbd, 0x25, 0xd4, 0x5b, 0x47, 0xbd, 0xfb, 0x94, 0x3d, 0xd9,
	0x43, 0x09, 0xed, 0x0d, 0x1f, 0xc1, 0xa6, 0xfe, 0x06, 0x11, 0x1b, 0x74, 0xfd, 0x65, 0xd4, 0x5f,
	0xcb, 0xf4, 0x45, 0x98, 0xd0, 0xb4, 0xef, 0xe1, 0x88, 0x33, 0xed, 0x4e, 0x12, 0xf5, 0x62, 0x9b,
	0x7a, 0xfa, 0x1b, 0x56, 0xf0, 0x0d, 0x1b, 0xd9, 0x1b, 0x7e, 0x5f, 0xc8, 0x6c, 0x7b, 0xda, 0x4b,
	0x7e, 0x03, 0x96, 0x63, 0x97, 0x78, 0x71, 0x0a, 0xdf, 0xf1, 0xbc, 0x84, 0x30, 0xd6, 0x58, 0xc5,
	0x2d, 0x64, 0x22, 0x4f, 0xe2, 0xde, 0x92, 0x1c, 0x11, 0x15, 0xa5, 0x06, 0x86, 0xb2, 0x35, 0x5c,
	0x8d, 0x2a, 0x52, 0x30, 0x8c, 0xfd, 0x1a, 0xcc, 0x49, 0x76, 0x8a, 0xa7, 0xd1, 0x90, 0x31, 0x1b,
	0xa9, 0x0a, 0x80, 0xf9, 0x3b, 0x70, 0x56, 0x62, 0x6f, 0xdb, 0xde, 0xa0, 0xa9, 0x5b, 0x47, 0xe0,
	0x0d, 0x04, 0xde, 0xbe, 0x5f, 0x9e, 0xb9, 0x5c, 0xdf, 0x1b, 0x38, 0xf0, 0x0d, 0x5d, 0xdf, 0x1b,
	0x36, 0xec, 0xb6, 0xd7, 0x3f, 0xec, 0xcd, 0x6c, 0xd8, 0x6d, 0xaf, 0x38, 0x6c, 0x39, 0x2e, 0xcd,
	0x5c, 0xe3, 0x6c, 0x36, 0xae, 0xcc, 0x82, 0xf9, 0xbd, 0x01, 0x0b, 0xea, 0x78, 0x23, 0x09, 0x23,
	0xe8, 0x0f, 0x8d, 0x73, 0x18, 0x5b, 0x9f, 0x8c, 0x37, 0xc0, 0xe8, 0x87, 0xaa, 0x35, 0xd7, 0xf6,
	0x3d, 0x4b, 0x42, 0x10, 0x4e, 0xa6, 0xb6, 0x6a, 0x1f, 0x30, 0x7d, 0xbe, 0xce, 0xa7, 0x5b, 0xf5,
	0xae, 0xae, 0x98, 0x4f, 0x58, 0xf3, 0x3f, 0x0c, 0x38, 0x3f, 0xd8, 0x30, 0xa3, 0x1d, 0xf4, 0x34,
	0xd3, 0x84, 0x29, 0x74, 0x50, 0x79, 0x88, 0xe3, 0xdf, 0xe6, 0x05, 0xa8, 0xa9, 0x19, 0xc6, 0xdd,
	0x22, 0x13, 0x56, 0x90, 0x24, 0xdc, 0x2e, 0x22, 0x8c, 0x25, 0x11, 0x27, 0x2e, 0x27, 0x9e, 0x4d,
	0x43, 0x4e, 0x12, 0xdf, 0x49, 0xa5, 0x27, 0x51, 0x7a, 0x35, 0xe3, 0x6f, 0xa7, 0x6c, 0xd4, 0xbc,
	0x0a, 0xf3, 0x94, 0xd9, 0xdd, 0x38, 0x5d, 0x3b, 0xc2, 0xf0, 0x5c, 0xad, 0x58, 0x75, 0xca, 0x1e,
	0xc5, 0x5b, 0x29, 0xb1, 0xf9, 0xcb, 0x89, 0x3c, 0x0f, 0x0f, 0xa2, 0x4e, 0x47, 0x24, 0x13, 0xd9,
	0x08, 0x98, 0x38, 0x4b, 0x02, 0x16, 0x8b, 0x99, 0xe7, 0x12, 0x7a, 0xc5, 0xaa, 0x04, 0x2c, 0xde,
	0x13, 0xcf, 0x82, 0xc9, 0x5a, 0x81, 0x62, 0x4e, 0x48, 0x26, 0x6b, 0x05, 0x92, 0x79, 0x11, 0x66,
	0x85, 0x66, 0x42, 0xec, 0x24, 0xea, 0x71, 0xa2, 0x12, 0x20, 0x08, 0x58, 0x6c, 0x11, 0x4b, 0x50,
	0xcc, 0xb3, 0x00, 0x4a, 0x22, 0x8a, 0xb9, 0x42, 0x57, 0x41, 0xfe, 0x27, 0x31, 0x37, 0x6f, 0xc0,
	0x92, 0xe0, 0xd2, 0x90, 0xf5, 0x7c, 0x9f, 0xba, 0x94, 0x84, 0xdc, 0x6e, 0x1f, 0xa9, 0xc3, 0x7e,
	0x31, 0x60, 0xf1, 0xb6, 0xc6, 0xb9, 0x7b, 0x24, 0xf6, 0xac, 0x90, 0xd7, 0x32, 0x84, 0x03, 0x27,
	0xec, 0x10, 0x75, 0xc8, 0x9b, 0x01, 0x8b, 0xf3, 0xf4, 0x00, 0x39, 0xe6, 0x1f, 0xc0, 0x25, 0xa1,
	0x11, 0xbb, 0x4e, 0xe0, 0xda, 0xbe, 0x43, 0x83, 0x5e, 0x92, 0xcf, 0x01, 0x09, 0x9d, 0x76, 0x40,
	0x3c, 0x3c, 0xf9, 0x2b, 0xd6, 0xb9, 0x80, 0xc5, 0xbb, 0x42, 0xee, 0xa1, 0x14, 0xdb, 0x91, 0x52,
	0x0f, 0xa4, 0x90, 0xc0, 0xea, 0x04, 0x41, 0x49, 0x57, 0x1e, 0xd2, 0x8b, 0x4e, 0x10, 0x14, 0xe5,
	0x9b, 0xbb, 0x79, 0x0a, 0xaa, 0x2d, 0xaf, 0x2f, 0x43, 0x32, 0xe3, 0x89, 0xf9, 0x1e, 0x2c, 0x0d,
	0x58, 0x77, 0xb5, 0x77, 0xcc, 0xf2, 0x92, 0x37, 0xbf, 0xaf, 0x0c, 0xcb, 0xf2, 0x9c, 0x1e, 0x8f,
	0xec, 0xb6, 0xe3, 0x3e, 0xed, 0xc5, 0xe6, 0xef, 0x62, 0x5c, 0x60, 0xb4, 0x13, 0x3a, 0x41, 0x40,
	0xbc, 0xd2, 0x11, 0x60, 0xa4, 0xfb, 0x7c, 0x2f, 0x15, 0xe9, 0x3b, 0x00, 0xbe, 0x33, 0x60, 0xae,
	0xa8, 0x8e, 0xeb, 0x5e, 0x6b, 0xf9, 0xe3, 0x75, 0xdf, 0xd4, 0x8b, 0xac, 0x3a, 0xd3, 0x91, 0x89,
	0xe4, 0x91, 0x11, 0xde, 0x8b, 0xed, 0x38, 0xa1, 0x51, 0x22, 0xcb, 0x09, 0xcc, 0x31, 0x91, 0xba,
	0xab, 0x88, 0x22, 0x51, 0x3e, 0x88, 0x02, 0x2f, 0x97, 0x9a, 0x92, 0xc1, 0x49, 0x10, 0x33, 0x21,
	0x99, 0x6c, 0xa5, 0x22, 0xe5, 0x04, 0x73, 0x99, 0xb2, 0x54, 0x56, 0x9b, 0x91, 0x4b, 0x30, 0x1b,
	0x47, 0x01, 0x75, 0x4f, 0x64, 0xa2, 0x8b, 0xdb, 0xad, 0x6e, 0xd5, 0x24, 0x0d, 0xb3, 0x5c, 0x51,
	0x9d, 0xea, 0x22, 0x36, 0x09, 0x79, 0x22, 0x52, 0x4a, 0x91, 0x98, 0x2d, 0x68, 0x82, 0x0f, 0x04,
	0x5d, 0x64, 0x3d, 0x02, 0x06, 0x92, 0xa5, 0x7c, 0x29, 0xed, 0x13, 0x67, 0x5e, 0xce, 0x1f, 0x96,
	0xb3, 0x56, 0xdf, 0xb4, 0x9c, 0x15, 0x46, 0xe4, 0xac, 0x97, 0x60, 0x36, 0x21, 0x6e, 0x24, 0xea,
	0x56, 0x8c, 0x16, 0x35, 0x94, 0xad, 0x49, 0x9a, 0x0c, 0x17, 0x7f, 0x0e, 0x33, 0xca, 0xc1, 0x30,
	0xf9, 0xab, 0xb5, 0xda, 0xa7, 0x3d, 0xb4, 0x72, 0xfc, 0xb3, 0x52, 0x93, 0xe6, 0x3f, 0x19, 0x83,
	0x5d, 0xb2, 0x3e, 0x9e, 0xf4, 0x78, 0x60, 0x58, 0x18, 0xe4, 0xf9, 0xc5, 0x6c, 0x7f, 0xae, 0x98,
	0xed, 0x37, 0xff, 0x1d, 0xe0, 0xc2, 0x88, 0xb0, 0xd0, 0x25, 0xec, 0xe0, 0x65, 0x4a, 0xbf, 0x01,
	0xb5, 0xdd, 0xc4, 0xa0, 0xda, 0x6e, 0x44, 0xd1, 0x36, 0x39, 0xaa, 0x68, 0x2b, 0xbb, 0xf5, 0xd4,
	0x73, 0xb9, 0xf5, 0x99, 0x17, 0x72, 0xeb, 0xe9, 0x17, 0x70, 0xeb, 0x99, 0xe7, 0x75, 0xeb, 0xca,
	0xcb, 0xb8, 0x75, 0x75, 0xb4, 0x5b, 0x5f, 0x86, 0x7a, 0xda, 0xd5, 0x91, 0x68, 0x64, 0xd9, 0x36,
	0xab, 0x88, 0x12, 0x4e, 0xc1, 0xf7, 0x6b, 0x6f, 0x9a, 0xef, 0xcf, 0x8e, 0xf6, 0x7d, 0xdf, 0x61,
	0xdc, 0x4e, 0x88, 0xf4, 0xfd, 0xba, 0xf4, 0x7d, 0x41, 0xb3, 0x24, 0x49, 0x1c, 0xb0, 0x7e, 0x92,
	0xd8, 0x61, 0xe4, 0x65, 0xae, 0x21, 0x2a, 0x39, 0x59, 0x80, 0x2d, 0xfa, 0x49, 0xf2, 0x38, 0xf2,
	0xc8, 0x6e, 0xc6, 0x10, 0x79, 0x93, 0x90, 0xcf, 0x77, 0x9e, 0xa6, 0x24, 0x0b, 0xac, 0x55, 0x3f,
	0x49, 0xb2, 0xad, 0xa7, 0x69, 0xf6, 0x07, 0xa2, 0x85, 0x72, 0x20, 0xba, 0x05, 0xab, 0xea, 0x50,
	0xcd, 0xf7, 0x75, 0x10, 0x10, 0x97, 0xab, 0x12, 0x6a, 0x59, 0x70, 0xb5, 0x6d, 0x8d, 0x3c, 0xcc,
	0x11, 0x84, 0x16, 0xbe, 0xd6, 0x76, 0xc2, 0x30, 0xea, 0x85, 0x2e, 0x51, 0xd5, 0xd3, 0xa2, 0x60,
	0xe1, 0xdb, 0xb7, 0x14, 0xc3, 0xfc, 0x08, 0x36, 0x58, 0xe4, 0x73, 0x3b, 0x4e, 0x08, 0xe9, 0xc6,
	0xfd, 0x55, 0xa2, 0x2c, 0x9e, 0x1a, 0x42, 0x62, 0x37, 0x13, 0xd0, 0xe6, 0x54, 0x0b, 0x96, 0xcb,
	0xaf, 0x3f, 0x58, 0x9e, 0x85, 0x6a, 0x1e, 0x47, 0x56, 0x64, 0x67, 0xa8, 0xad, 0x37, 0x8e, 0x82,
	0xc8, 0xf1, 0x6c, 0x76, 0xe0, 0x24, 0x44, 0x95, 0x52, 0x55, 0x41, 0xd9, 0x13, 0x04, 0xf3, 0x43,
	0xd8, 0xa0, 0x4c, 0x4b, 0x76, 0xdb, 0x47, 0xfa, 0xc0, 0xd7, 0x52, 0x57, 0xc9, 0x22, 0xe0, 0xdd,
	0x23, 0x6d, 0xdc, 0x4d, 0xa8, 0x8b, 0xa0, 0xa6, 0x97, 0x57, 0xc2, 0x1f, 0x6b, 0x82, 0x98, 0x56,
	0x21, 0x85, 0x88, 0xb9, 0xde, 0x17, 0x31, 0xff, 0xde, 0x00, 0x93, 0x13, 0xfb, 0x38, 0x89, 0x6c,
	0xd6, 0x6b, 0x47, 0xed, 0x27, 0x36, 0x8d, 0x0f, 0x6f, 0x99, 0x0d, 0x98, 0x49, 0x8b, 0x20, 0x99,
	0x84, 0xa5, 0x8f, 0x58, 0xf0, 0x25, 0xc4, 0xa7, 0xc7, 0x76, 0x40, 0xd2, 0x36, 0x60, 0x55, 0x52,
	0x76, 0x48, 0x28, 0xa6, 0x22, 0x9b, 0x21, 0x95, 0xb2, 0xe7, 0x04, 0x11, 0xe8, 0xb0, 0x26, 0xc7,
	0x76, 0x8b, 0xde, 0xfc, 0xca, 0xa8, 0x22, 0x8e, 0x0e, 0x06, 0x75, 0xfb, 0x67, 0x06, 0xf5, 0xa3,
	0x01, 0x4b, 0x45, 0x50, 0xbd, 0x30, 0xec, 0x75, 0x45, 0xe2, 0xcf, 0x55, 0xd2, 0x9f, 0x88, 0x19,
	0x96, 0xd0, 0x80, 0xcb, 0xac, 0x3f, 0xd9, 0x46, 0x87, 0xcf, 0x97, 0x97, 0x7a, 0x0a, 0x5f, 0x2d,
	0xa3, 0x6d, 0x7b, 0xa7, 0x83, 0xf0, 0x3d, 0x58, 0x28, 0x02, 0x74, 0xb0, 0xa0, 0x71, 0x98, 0x1d,
	0xf6, 0xba, 0x6d, 0x92, 0xa8, 0x23, 0xae, 0xe2, 0xb0, 0xc7, 0xf8, 0xdc, 0xdc, 0xef, 0x9f, 0x66,
	0x96, 0x04, 0x1d, 0x73, 0x0d, 0x66, 0xc4, 0xff, 0xe9, 0x58, 0xea, 0xd6, 0xb4, 0x78, 0xdc, 0xf6,
	0x06, 0xc0, 0x98, 0x18, 0x04, 0xe3, 0x07, 0x03, 0xd6, 0x84, 0xc3, 0xb0, 0xd8, 0xf6, 0x89, 0x6b,
	0xbb, 0xd8, 0xc8, 0xf0, 0x1c, 0xee, 0xd8, 0x5c, 0xc0, 0xc9, 0x68, 0x69, 0x7f, 0xd7, 0x27, 0xee,
	0x3d, 0xf1, 0x2c, 0x42, 0x46, 0xdc, 0x8a, 0x51, 0xd1, 0x23, 0x8c, 0xd3, 0x30, 0x6f, 0x35, 0x57,
	0xad, 0xc5, 0xb8, 0x15, 0xef, 0xb0, 0xf8, 0x7e, 0xce, 0x30, 0x7f, 0x13, 0xd6, 0xc4, 0xcb, 0x34,
	0x59, 0x3b, 0x6e, 0x75, 0xd1, 0x0d, 0x64, 0x5a, 0xbc, 0xec, 0x13, 0x57, 0x53, 0xd8, 0x6d, 0x75,
	0xe3, 0x6d, 0xaf, 0xf9, 0xdf, 0x13, 0xb8, 0x62, 0x29, 0x3e, 0x2e, 0x0a, 0x33, 0xf1, 0x07, 0x96,
	0x5f, 0xe9, 0x98, 0x05, 0xaa, 0x1d, 0x26, 0xdc, 0xa7, 0x09, 0x75, 0x14, 0xcb, 0x5c, 0x48, 0x2d,
	0x9f, 0x4f, 0xdc, 0xfd, 0xb4, 0xcb, 0x78, 0x13, 0x56, 0x85, 0x4c, 0xf6, 0x51, 0x22, 0x17, 0x96,
	0x6b, 0xb9, 0xe4, 0x13, 0x37, 0xfd, 0x84, 0x91, 0x29, 0x9d, 0x93, 0x66, 0x65, 0xf9, 0xab, 0x56,
	0x54, 0xcc, 0x8e, 0xec, 0x34, 0x98, 0x7f, 0x67, 0xc0, 0x72, 0xff, 0xf0, 0xb0, 0x43, 0x79, 0x06,
	0x03, 0x9c, 0x7d, 0x5a, 0x01, 0x6e, 0xc8, 0x52, 0x59, 0x66, 0x71, 0xf2, 0xb0, 0x45, 0xb9, 0x06,
	0x33, 0x42, 0xee, 0x30, 0xf1, 0x31, 0x9b, 0xa8, 0x5a, 0xd3, 0x3e, 0x71, 0x3f, 0x4b, 0xfc, 0xe6,
	0x37, 0x93, 0xb0, 0x52, 0xdc, 0x4a, 0x6a, 0x25, 0x4d, 0x1f, 0x26, 0x7d, 0xe2, 0xe2, 0xac, 0xd6,
	0x5a, 0xfb, 0x63, 0x00, 0xcd, 0x2d, 0x61, 0x40, 0x2c, 0x13, 0xed, 0x84, 0x51, 0x42, 0xd2, 0x75,
	0x94, 0x05, 0x7a, 0x4d, 0x12, 0xe5, 0x52, 0xde, 0x81, 0xf5, 0x38, 0x89, 0x5c, 0xc2, 0x98, 0x88,
	0xe4, 0x78, 0xba, 0x92, 0x63, 0x97, 0xe0, 0x61, 0xa2, 0x32, 0xb4, 0xb5, 0x5c, 0x40, 0x9c, 0xb1,
	0x0f, 0x52, 0xb6, 0x38, 0x9f, 0x62, 0x12, 0xf6, 0x02, 0x4e, 0xbb, 0x0e, 0x27, 0xfd, 0xca, 0xb2,
	0x9a, 0x6f, 0x68, 0x12, 0x25, 0x6d, 0x7d, 0x1d, 0xfb, 0xb4, 0x65, 0xc1, 0xd5, 0xd0, 0x24, 0x8a,
	0xda, 0x65, 0xc7, 0x9b, 0x1e, 0xe4, 0x78, 0x3f, 0x4d, 0x43, 0xbd, 0xb0, 0x08, 0xa6, 0x09, 0x53,
	0x9a, 0xa7, 0xe1, 0xdf, 0x22, 0x71, 0x9a, 0x13, 0x31, 0x5e, 0xc9, 0x88, 0x73, 0x5c, 0xd6, 0xb4,
	0x7f, 0x74, 0x8a, 0x8b, 0xd3, 0x77, 0x9e, 0x58, 0x75, 0xf1, 0xef, 0x5e, 0x6a, 0x30, 0xc5, 0x70,
	0x5b, 0xc3, 0x30, 0x39, 0x66, 0x0c, 0xb7, 0x11, 0xc3, 0xed, 0x1c, 0xc3, 0xdf, 0x18, 0xb0, 0x8c,
	0x11, 0xbc, 0x4d, 0x44, 0x21, 0x90, 0x23, 0x99, 0x42, 0x24, 0x7f, 0x3c, 0x1e, 0x24, 0x68, 0xd1,
	0x5a, 0xca, 0x0d, 0xe7, 0x80, 0xfe, 0x0c, 0x66, 0x1d, 0xa6, 0xe1, 0x90, 0x7e, 0xfe, 0xf9, 0x78,
	0x70, 0x38, 0xcc, 0xaa, 0x39, 0xac, 0xb8, 0x22, 0x18, 0xf5, 0x73, 0xfb, 0xd3, 0xe3, 0x5c, 0x11,
	0x61, 0xcb, 0xaa, 0x8b, 0x7f, 0x73, 0x0c, 0xdf, 0x18, 0x50, 0xc7, 0xee, 0x5b, 0x06, 0x41, 0x7e,
	0x87, 0xfa, 0x72, 0x3c, 0x10, 0x54, 0x84, 0xb2, 0x66, 0x03, 0x16, 0x67, 0x20, 0x9a, 0xff, 0x69,
	0xc0, 0xb4, 0x94, 0x33, 0xff, 0x14, 0xea, 0xb9, 0xb8, 0x80, 0x63, 0x60, 0xf1, 0xfb, 0xe9, 0x58,
	0xe0, 0x58, 0xb3, 0xc7, 0x49, 0x94, 0xcf, 0x45, 0x0b, 0x56, 0xba, 0x3d, 0xde, 0x73, 0x02, 0xdb,
	0xa3, 0xf8, 0x91, 0x88, 0x9f, 0xd8, 0x7e, 0xe0, 0x74, 0x54, 0x58, 0x5b, 0x92, 0xcc, 0xfb, 0x29,
	0xef, 0x61, 0xe0, 0x74, 0x9a, 0x7f, 0x01, 0xeb, 0x83, 0x8b, 0x5f, 0x31, 0x98, 0x3f, 0x81, 0xc9,
	0xe3, 0x24, 0x52, 0x71, 0xf8, 0xf1, 0xe9, 0x0e, 0xc1, 0x12, 0xaf, 0x6e, 0xfe, 0xff, 0xd4, 0xb0,
	0x2f, 0xcd, 0x78, 0x2a, 0x73, 0x52, 0xaa, 0x7c, 0x8c, 0x72, 0xe5, 0x33, 0xaa, 0x92, 0x99, 0x18,
	0x59, 0xc9, 0xfc, 0xfc, 0xbd, 0xb1, 0x61, 0x9d, 0x85, 0xe9, 0x17, 0xea, 0x2c, 0xcc, 0xbc, 0x60,
	0x67, 0xa1, 0x32, 0xaa, 0xb3, 0x30, 0xf2, 0xdb, 0x68, 0xa1, 0x84, 0x86, 0x37, 0xad, 0x84, 0xae,
	0x0d, 0x2f, 0xa1, 0x9b, 0x3f, 0x19, 0x30, 0x2f, 0x92, 0x6e, 0x72, 0x48, 0x12, 0x6e, 0x33, 0xf7,
	0xc0, 0xe6, 0x66, 0x13, 0x66, 0x99, 0x7b, 0x40, 0xbc, 0x5e, 0x40, 0xd4, 0x87, 0x87, 0xc9, 0xeb,
	0x55, 0xab, 0x40, 0x13, 0x8b, 0x9f, 0x3e, 0x8b, 0x34, 0x27, 0x6d, 0xe3, 0x64, 0x42, 0xf7, 0x1d,
	0x4e, 0xcc, 0x77, 0xc1, 0xcc, 0x84, 0xfc, 0x84, 0x7c, 0xd5, 0x23, 0xa1, 0x7b, 0xa2, 0x12, 0xb9,
	0xc5, 0x94, 0xf3, 0x30, 0x65, 0x98, 0x1b, 0x50, 0xf1, 0x7a, 0xea, 0xfb, 0xb2, 0xdc, 0x4b, 0xd9,
	0xb3, 0x98, 0xfe, 0xae, 0x73, 0x6c, 0xf3, 0x84, 0x12, 0xa6, 0xba, 0x35, 0x95, 0xae, 0x73, 0xbc,
	0x2f, 0x9e, 0x9b, 0xff, 0x33, 0x09, 0x67, 0x87, 0x34, 0xab, 0x62, 0x66, 0xc7, 0xb1, 0xb9, 0x0e,
	0x15, 0x16, 0xba, 0x76, 0x37, 0xf2, 0xd2, 0x13, 0x7c, 0x86, 0x85, 0xee, 0xa3, 0xc8, 0x23, 0xe6,
	0x0a, 0x4c, 0x73, 0xb7, 0x9b, 0x67, 0xa3, 0x67, 0xb8, 0xdb, 0xdd, 0xf6, 0xcc, 0x6b, 0x30, 0x9f,
	0xfb, 0x8b, 0xfe, 0xd9, 0x64, 0x2e, 0x27, 0xe3, 0x7e, 0x2a, 0x0a, 0xa2, 0x85, 0xa9, 0x7e, 0x41,
	0x34, 0xf4, 0x1e, 0x2c, 0x1f, 0x39, 0x94, 0xdb, 0xa2, 0x92, 0x27, 0x8c, 0x8b, 0xfc, 0x8a, 0xd3,
	0x2e, 0x51, 0x83, 0x59, 0x14, 0xbc, 0xfd, 0xc8, 0x92, 0x9c, 0x7d, 0xda, 0x25, 0x22, 0x0f, 0x43,
	0xff, 0x8a, 0x7c, 0x5f, 0x4a, 0xaa, 0x0e, 0xb1, 0x20, 0x7e, 0xe2, 0xfb, 0x28, 0xf3, 0xb5, 0x01,
	0xf3, 0xf9, 0xda, 0xe1, 0x7c, 0xaa, 0x50, 0xff, 0x87, 0xa7, 0x18, 0x98, 0xf4, 0xdd, 0x61, 0xcd,
	0xc9, 0xa7, 0x3d, 0x65, 0x4e, 0x64, 0xec, 0xf8, 0x75, 0x5a, 0x0c, 0x57, 0xfc, 0xe3, 0xd3, 0x40,
	0x7d, 0x67, 0xaa, 0xc8, 0x8c, 0x5d, 0x70, 0x45, 0x74, 0xd9, 0x95, 0x3c, 0x9c, 0xb5, 0xb7, 0x61,
	0x51, 0x4e, 0x82, 0xcc, 0xe2, 0x18, 0x3f, 0x09, 0x08, 0x36, 0xb3, 0xaa, 0xd6, 0x82, 0xc6, 0xd8,
	0x13, 0xf4, 0xe6, 0x57, 0x70, 0x75, 0x48, 0x73, 0x3f, 0xb1, 0xe3, 0x84, 0xc4, 0x24, 0xf4, 0x64,
	0x0f, 0x6d, 0x60, 0x96, 0xb6, 0x0c, 0x67, 0x68, 0xe8, 0x91, 0xe3, 0x74, 0x7d, 0xf1, 0x41, 0x94,
	0x0c, 0x21, 0x39, 0xe6, 0xea, 0xfa, 0x8b, 0x8c, 0x6f, 0x55, 0x41, 0x91, 0x77, 0x5f, 0xfe, 0xcb,
	0x80, 0x2b, 0xcf, 0xb4, 0x19, 0x50, 0xc6, 0xcd, 0x7f, 0x30, 0xa0, 0x5e, 0x00, 0xa1, 0xce, 0xb6,
	0x70, 0xcc, 0xdf, 0x35, 0xfa, 0x86, 0x6e, 0xcd, 0xaa, 0x47, 0x6c, 0x1a, 0x36, 0xff, 0xcf, 0x1c,
	0xe6, 0x11, 0xe2, 0xac, 0xe6, 0x7d, 0xcd, 0x5f, 0x63, 0x54, 0x38, 0x9b, 0x78, 0xd3, 0xc2, 0xd9,
	0xe4, 0x88, 0x8e, 0xe0, 0x53, 0xb8, 0x89, 0x9b, 0x91, 0x91, 0x40, 0x79, 0x24, 0x23, 0x9d, 0x2e,
	0x09, 0x39, 0xb6, 0x15, 0xb0, 0xeb, 0xe4, 0x3d, 0x71, 0x5c, 0x11, 0x6e, 0xf4, 0xf3, 0x50, 0x7a,
	0xec, 0x0d, 0xa1, 0xba, 0x97, 0x6a, 0xee, 0x49, 0x45, 0x4b, 0xea, 0x6d, 0xa5, 0x6a, 0xda, 0x39,
	0xf9, 0xad, 0x01, 0x5b, 0xe9, 0xdd, 0x8c, 0x17, 0x33, 0x58, 0x3e, 0x07, 0xef, 0xc8, 0x6b, 0x1b,
	0xcf, 0x6f, 0x5d, 0x1b, 0xf4, 0xc8, 0xeb, 0x2e, 0xd3, 0xa3, 0xaf, 0xbb, 0x7c, 0x0c, 0xcd, 0x3e,
	0xfc, 0x83, 0x2e, 0xbe, 0xcc, 0xe0, 0xfc, 0x5c, 0x28, 0xcc, 0xcf, 0xab, 0xdd, 0x80, 0xa9, 0x8c,
	0xe3, 0x06, 0x4c, 0xf5, 0xb9, 0x6f, 0xc0, 0xb4, 0x60, 0xa5, 0x6f, 0xd8, 0x5d, 0xc2, 0x13, 0xea,
	0xe2, 0xe1, 0xad, 0x62, 0x56, 0x36, 0xd2, 0x47, 0xc8, 0x32, 0x77, 0xe0, 0x72, 0x79, 0xb5, 0xa5,
	0x5a, 0xf9, 0xb4, 0xbd, 0xd0, 0xb7, 0x9e, 0xf2, 0x1d, 0x1a, 0x82, 0x5d, 0xb8, 0xf2, 0x8c, 0x8d,
	0xd3, 0x75, 0x92, 0x0e, 0x0d, 0xd5, 0x7d, 0xa5, 0x4b, 0x23, 0xf6, 0xe6, 0x23, 0x14, 0x34, 0x7d,
	0x78, 0xff, 0xd9, 0xbb, 0x51, 0xbe, 0xd4, 0x4e, 0x48, 0xe0, 0x70, 0x7a, 0x98, 0xb6, 0xcc, 0xdf,
	0x1e, 0xb9, 0xfb, 0xe4, 0xfb, 0x2d, 0xa5, 0x62, 0x3e, 0x81, 0x9b, 0xcf, 0x6d, 0xa7, 0x74, 0xe7,
	0xe9, 0xdd, 0xe7, 0xb0, 0xa4, 0xcd, 0xd2, 0x97, 0xf0, 0xce, 0x33, 0x0c, 0xa5, 0xcf, 0xf2, 0x32,
	0xe1, 0x3c, 0x4e, 0xd6, 0xb5, 0x11, 0x93, 0xa5, 0x9e, 0xe4, 0x55, 0xc3, 0x23, 0xb8, 0xf3, 0xec,
	0xa1, 0x14, 0x2c, 0xe8, 0x23, 0x92, 0x1d, 0xfe, 0x9b, 0x23, 0x47, 0xa4, 0x9b, 0xd3, 0xc6, 0xf5,
	0x81, 0xfc, 0xa8, 0x93, 0x1b, 0x2e, 0xdf, 0xa7, 0x5a, 0xd5, 0xdf, 0x3b, 0xb8, 0x41, 0x6f, 0xbe,
	0xfe, 0x06, 0xfd, 0xdf, 0x1a, 0x30, 0xab, 0x9f, 0x7f, 0xf8, 0x3d, 0xa1, 0xd6, 0xea, 0xbe, 0xb6,
	0xd3, 0x4e, 0x18, 0xb5, 0x6a, 0xea, 0x69, 0x47, 0x9c, 0xc0, 0xb2, 0xed, 0xaf, 0xf3, 0x07, 0x5f,
	0xf6, 0xca, 0x55, 0x9e, 0x75, 0x31, 0x6d, 0xe5, 0x25, 0x2f, 0xa6, 0xad, 0xbe, 0xe2, 0xc5, 0xb4,
	0xb5, 0x57, 0xbe, 0x98, 0xd6, 0x78, 0xe9, 0x8b, 0x69, 0xeb, 0xcf, 0x79, 0x31, 0x6d, 0xe3, 0xd9,
	0x17, 0xd3, 0x36, 0x5f, 0xe2, 0x62, 0xda, 0xd9, 0x57, 0xbc, 0x98, 0x76, 0xee, 0x25, 0x2f, 0xa6,
	0x9d, 0x7f, 0x81, 0x8b, 0x69, 0x17, 0xca, 0x17, 0xd3, 0x9a, 0x3f, 0x56, 0x87, 0xfc, 0xe8, 0xc1,
	0xee, 0x85, 0xe2, 0x48, 0xfc, 0x00, 0xd6, 0x55, 0x9e, 0x35, 0xf4, 0x57, 0x09, 0xab, 0x52, 0x60,
	0xab, 0xff, 0xb7, 0x09, 0xff, 0x6a, 0xc0, 0xfa, 0xd0, 0x7b, 0xd7, 0x2a, 0x2d, 0xa3, 0xe3, 0xf5,
	0x3b, 0xcd, 0xa0, 0xb5, 0xaa, 0xff, 0x1c, 0x42, 0x44, 0xa6, 0x4f, 0x64, 0x4b, 0xf5, 0x5f, 0x0c,
	0x68, 0x94, 0x6f, 0x08, 0xc8, 0x7b, 0x43, 0xaa, 0x17, 0x39, 0x66, 0x94, 0xda, 0x45, 0xa5, 0x22,
	0xca, 0xad, 0x0c, 0x88, 0xf9, 0x83, 0x01, 0xab, 0x65, 0xad, 0x2e, 0x61, 0x07, 0xaa, 0x4b, 0xd9,
	0x79, 0x0d, 0x18, 0x85, 0x39, 0x6b, 0xb9, 0x1f, 0x21, 0xde, 0xa5, 0xf8, 0xce, 0x80, 0xc5, 0x52,
	0xab, 0x49, 0x35, 0x2e, 0x9d, 0xf1, 0x42, 0x3b, 0x4e, 0x22, 0x6b, 0x5e, 0x07, 0xf5, 0x79, 0x12,
	0x99, 0xff, 0x6c, 0xc0, 0x72, 0xb9, 0xf5, 0xc4, 0x89, 0xea, 0x65, 0x8e, 0xf9, 0x56, 0xb7, 0x6a,
	0x73, 0x59, 0x66, 0x61, 0xcf, 0x21, 0x00, 0xf3, 0x1f, 0x4b, 0xc8, 0x64, 0x91, 0xaf, 0xea, 0x5e,
	0x6f, 0xcc, 0xeb, 0x88, 0xb6, 0xac, 0xc5, 0xc2, 0x22, 0xc6, 0x6c, 0x37, 0x1e, 0x80, 0x4b, 0x96,
	0x5a, 0x98, 0xea, 0x8e, 0x1d, 0x97, 0xb4, 0x55, 0xc4, 0xb5, 0xdb, 0x8a, 0xf7, 0x49, 0xf3, 0xdf,
	0x26, 0x60, 0x65, 0xa0, 0xce, 0xd0, 0xd8, 0x84, 0x4d, 0x9f, 0xd6, 0xb0, 0xd8, 0x94, 0xde, 0x0a,
	0x1f, 0xaa, 0x6a, 0xbb, 0x89, 0x7b, 0xb3, 0xd5, 0xb8, 0x89, 0xd1, 0x72, 0x73, 0xf0, 0x0b, 0xee,
	0x09, 0x11, 0x51, 0x3b, 0x2f, 0x0d, 0x08, 0x9a, 0x8d, 0x5b, 0x38, 0x63, 0xee, 0x78, 0x67, 0x0c,
	0x4d, 0x15, 0x27, 0xec, 0x53, 0x41, 0x6a, 0x4f, 0xe3, 0xcf, 0xd5, 0x6e, 0xfe, 0x2a, 0x00, 0x00,
	0xff, 0xff, 0x0b, 0xbc, 0xb8, 0x59, 0xcd, 0x36, 0x00, 0x00,
}
