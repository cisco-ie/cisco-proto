/*
Copyright 2019 Cisco Systems

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: mpls_te_topology_global_info_bag.proto

package cisco_ios_xr_mpls_te_oper_mpls_te_standby_topology_global

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type MplsTeTopologyGlobalInfoBag_KEYS struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MplsTeTopologyGlobalInfoBag_KEYS) Reset()         { *m = MplsTeTopologyGlobalInfoBag_KEYS{} }
func (m *MplsTeTopologyGlobalInfoBag_KEYS) String() string { return proto.CompactTextString(m) }
func (*MplsTeTopologyGlobalInfoBag_KEYS) ProtoMessage()    {}
func (*MplsTeTopologyGlobalInfoBag_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_d337d6ced95c46c2, []int{0}
}

func (m *MplsTeTopologyGlobalInfoBag_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsTeTopologyGlobalInfoBag_KEYS.Unmarshal(m, b)
}
func (m *MplsTeTopologyGlobalInfoBag_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsTeTopologyGlobalInfoBag_KEYS.Marshal(b, m, deterministic)
}
func (m *MplsTeTopologyGlobalInfoBag_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsTeTopologyGlobalInfoBag_KEYS.Merge(m, src)
}
func (m *MplsTeTopologyGlobalInfoBag_KEYS) XXX_Size() int {
	return xxx_messageInfo_MplsTeTopologyGlobalInfoBag_KEYS.Size(m)
}
func (m *MplsTeTopologyGlobalInfoBag_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsTeTopologyGlobalInfoBag_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_MplsTeTopologyGlobalInfoBag_KEYS proto.InternalMessageInfo

type TeSrNodeInfo struct {
	SegmentId                   uint32   `protobuf:"varint,1,opt,name=segment_id,json=segmentId,proto3" json:"segment_id,omitempty"`
	SegmentIdLocalAbsoluteValue uint32   `protobuf:"varint,2,opt,name=segment_id_local_absolute_value,json=segmentIdLocalAbsoluteValue,proto3" json:"segment_id_local_absolute_value,omitempty"`
	SrgbStart                   uint32   `protobuf:"varint,3,opt,name=srgb_start,json=srgbStart,proto3" json:"srgb_start,omitempty"`
	SrgbSize                    uint32   `protobuf:"varint,4,opt,name=srgb_size,json=srgbSize,proto3" json:"srgb_size,omitempty"`
	XXX_NoUnkeyedLiteral        struct{} `json:"-"`
	XXX_unrecognized            []byte   `json:"-"`
	XXX_sizecache               int32    `json:"-"`
}

func (m *TeSrNodeInfo) Reset()         { *m = TeSrNodeInfo{} }
func (m *TeSrNodeInfo) String() string { return proto.CompactTextString(m) }
func (*TeSrNodeInfo) ProtoMessage()    {}
func (*TeSrNodeInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_d337d6ced95c46c2, []int{1}
}

func (m *TeSrNodeInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TeSrNodeInfo.Unmarshal(m, b)
}
func (m *TeSrNodeInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TeSrNodeInfo.Marshal(b, m, deterministic)
}
func (m *TeSrNodeInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TeSrNodeInfo.Merge(m, src)
}
func (m *TeSrNodeInfo) XXX_Size() int {
	return xxx_messageInfo_TeSrNodeInfo.Size(m)
}
func (m *TeSrNodeInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_TeSrNodeInfo.DiscardUnknown(m)
}

var xxx_messageInfo_TeSrNodeInfo proto.InternalMessageInfo

func (m *TeSrNodeInfo) GetSegmentId() uint32 {
	if m != nil {
		return m.SegmentId
	}
	return 0
}

func (m *TeSrNodeInfo) GetSegmentIdLocalAbsoluteValue() uint32 {
	if m != nil {
		return m.SegmentIdLocalAbsoluteValue
	}
	return 0
}

func (m *TeSrNodeInfo) GetSrgbStart() uint32 {
	if m != nil {
		return m.SrgbStart
	}
	return 0
}

func (m *TeSrNodeInfo) GetSrgbSize() uint32 {
	if m != nil {
		return m.SrgbSize
	}
	return 0
}

type MplsTeAreaInfo struct {
	Protocol             string        `protobuf:"bytes,1,opt,name=protocol,proto3" json:"protocol,omitempty"`
	NodeId               string        `protobuf:"bytes,2,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	AreaId               string        `protobuf:"bytes,3,opt,name=area_id,json=areaId,proto3" json:"area_id,omitempty"`
	LocalSidAndSrbg      *TeSrNodeInfo `protobuf:"bytes,4,opt,name=local_sid_and_srbg,json=localSidAndSrbg,proto3" json:"local_sid_and_srbg,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *MplsTeAreaInfo) Reset()         { *m = MplsTeAreaInfo{} }
func (m *MplsTeAreaInfo) String() string { return proto.CompactTextString(m) }
func (*MplsTeAreaInfo) ProtoMessage()    {}
func (*MplsTeAreaInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_d337d6ced95c46c2, []int{2}
}

func (m *MplsTeAreaInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsTeAreaInfo.Unmarshal(m, b)
}
func (m *MplsTeAreaInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsTeAreaInfo.Marshal(b, m, deterministic)
}
func (m *MplsTeAreaInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsTeAreaInfo.Merge(m, src)
}
func (m *MplsTeAreaInfo) XXX_Size() int {
	return xxx_messageInfo_MplsTeAreaInfo.Size(m)
}
func (m *MplsTeAreaInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsTeAreaInfo.DiscardUnknown(m)
}

var xxx_messageInfo_MplsTeAreaInfo proto.InternalMessageInfo

func (m *MplsTeAreaInfo) GetProtocol() string {
	if m != nil {
		return m.Protocol
	}
	return ""
}

func (m *MplsTeAreaInfo) GetNodeId() string {
	if m != nil {
		return m.NodeId
	}
	return ""
}

func (m *MplsTeAreaInfo) GetAreaId() string {
	if m != nil {
		return m.AreaId
	}
	return ""
}

func (m *MplsTeAreaInfo) GetLocalSidAndSrbg() *TeSrNodeInfo {
	if m != nil {
		return m.LocalSidAndSrbg
	}
	return nil
}

type MplsTeTopologyGlobalInfoBag struct {
	Areas                []*MplsTeAreaInfo `protobuf:"bytes,50,rep,name=areas,proto3" json:"areas,omitempty"`
	HoldDownInterval     uint32            `protobuf:"varint,51,opt,name=hold_down_interval,json=holdDownInterval,proto3" json:"hold_down_interval,omitempty"`
	LinkAddRemoveCount   uint32            `protobuf:"varint,52,opt,name=link_add_remove_count,json=linkAddRemoveCount,proto3" json:"link_add_remove_count,omitempty"`
	LocalModelId         uint32            `protobuf:"varint,53,opt,name=local_model_id,json=localModelId,proto3" json:"local_model_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *MplsTeTopologyGlobalInfoBag) Reset()         { *m = MplsTeTopologyGlobalInfoBag{} }
func (m *MplsTeTopologyGlobalInfoBag) String() string { return proto.CompactTextString(m) }
func (*MplsTeTopologyGlobalInfoBag) ProtoMessage()    {}
func (*MplsTeTopologyGlobalInfoBag) Descriptor() ([]byte, []int) {
	return fileDescriptor_d337d6ced95c46c2, []int{3}
}

func (m *MplsTeTopologyGlobalInfoBag) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsTeTopologyGlobalInfoBag.Unmarshal(m, b)
}
func (m *MplsTeTopologyGlobalInfoBag) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsTeTopologyGlobalInfoBag.Marshal(b, m, deterministic)
}
func (m *MplsTeTopologyGlobalInfoBag) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsTeTopologyGlobalInfoBag.Merge(m, src)
}
func (m *MplsTeTopologyGlobalInfoBag) XXX_Size() int {
	return xxx_messageInfo_MplsTeTopologyGlobalInfoBag.Size(m)
}
func (m *MplsTeTopologyGlobalInfoBag) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsTeTopologyGlobalInfoBag.DiscardUnknown(m)
}

var xxx_messageInfo_MplsTeTopologyGlobalInfoBag proto.InternalMessageInfo

func (m *MplsTeTopologyGlobalInfoBag) GetAreas() []*MplsTeAreaInfo {
	if m != nil {
		return m.Areas
	}
	return nil
}

func (m *MplsTeTopologyGlobalInfoBag) GetHoldDownInterval() uint32 {
	if m != nil {
		return m.HoldDownInterval
	}
	return 0
}

func (m *MplsTeTopologyGlobalInfoBag) GetLinkAddRemoveCount() uint32 {
	if m != nil {
		return m.LinkAddRemoveCount
	}
	return 0
}

func (m *MplsTeTopologyGlobalInfoBag) GetLocalModelId() uint32 {
	if m != nil {
		return m.LocalModelId
	}
	return 0
}

func init() {
	proto.RegisterType((*MplsTeTopologyGlobalInfoBag_KEYS)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te_standby.topology.global.mpls_te_topology_global_info_bag_KEYS")
	proto.RegisterType((*TeSrNodeInfo)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te_standby.topology.global.te_sr_node_info")
	proto.RegisterType((*MplsTeAreaInfo)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te_standby.topology.global.mpls_te_area_info")
	proto.RegisterType((*MplsTeTopologyGlobalInfoBag)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te_standby.topology.global.mpls_te_topology_global_info_bag")
}

func init() {
	proto.RegisterFile("mpls_te_topology_global_info_bag.proto", fileDescriptor_d337d6ced95c46c2)
}

var fileDescriptor_d337d6ced95c46c2 = []byte{
	// 433 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x91, 0xcd, 0x8a, 0x13, 0x41,
	0x10, 0xc7, 0xc9, 0xae, 0xc6, 0x9d, 0x5e, 0x75, 0xb5, 0x41, 0x1c, 0x5c, 0xc4, 0x10, 0xfc, 0xd8,
	0x83, 0x0c, 0x98, 0xd5, 0x83, 0xc7, 0xe0, 0x7a, 0x18, 0x5d, 0x2f, 0x13, 0x10, 0x3c, 0x15, 0xdd,
	0x53, 0xed, 0xd8, 0xd8, 0xe9, 0x0a, 0xdd, 0x9d, 0xc4, 0xdd, 0x77, 0xf0, 0x65, 0x7c, 0x1c, 0x9f,
	0x46, 0xba, 0x26, 0x59, 0x41, 0x0f, 0x01, 0x3d, 0x56, 0xfd, 0xea, 0xe3, 0x5f, 0xf5, 0x17, 0x4f,
	0xe7, 0x0b, 0x17, 0x21, 0x19, 0x48, 0xb4, 0x20, 0x47, 0xdd, 0x05, 0x74, 0x8e, 0xb4, 0x72, 0x60,
	0xfd, 0x67, 0x02, 0xad, 0xba, 0x6a, 0x11, 0x28, 0x91, 0x7c, 0xdd, 0xda, 0xd8, 0x12, 0x58, 0x8a,
	0xf0, 0x2d, 0xc0, 0xb6, 0x89, 0x16, 0x26, 0x54, 0xdb, 0x20, 0x26, 0xe5, 0x51, 0x5f, 0x54, 0xdb,
	0x49, 0x55, 0x3f, 0x69, 0xfc, 0x4c, 0x3c, 0xd9, 0xb5, 0x04, 0xde, 0xbf, 0xfd, 0x34, 0x1b, 0xff,
	0x18, 0x88, 0xa3, 0x3c, 0x27, 0x80, 0x27, 0x34, 0x0c, 0xe5, 0x43, 0x21, 0xa2, 0xe9, 0xe6, 0xc6,
	0x27, 0xb0, 0x58, 0x0e, 0x46, 0x83, 0x93, 0x5b, 0x4d, 0xb1, 0xc9, 0xd4, 0x28, 0xcf, 0xc4, 0xa3,
	0xdf, 0x18, 0x1c, 0xb5, 0xca, 0x81, 0xd2, 0x91, 0xdc, 0x32, 0x19, 0x58, 0x29, 0xb7, 0x34, 0xe5,
	0x1e, 0xf7, 0x1c, 0x5f, 0xf5, 0x9c, 0xe7, 0xa2, 0xe9, 0xa6, 0xe6, 0x63, 0x2e, 0xe1, 0x25, 0xa1,
	0xd3, 0xf9, 0x82, 0x90, 0xca, 0xfd, 0xcd, 0x92, 0xd0, 0xe9, 0x59, 0x4e, 0xc8, 0x63, 0x51, 0xf4,
	0xd8, 0x5e, 0x9a, 0xf2, 0x1a, 0xd3, 0x03, 0xa6, 0xf6, 0xd2, 0x8c, 0x7f, 0x0e, 0xc4, 0xdd, 0xed,
	0x79, 0x2a, 0x18, 0xd5, 0xcb, 0x7e, 0x20, 0x0e, 0xf8, 0x6f, 0x2d, 0x39, 0x16, 0x5d, 0x34, 0x57,
	0xb1, 0xbc, 0x2f, 0x6e, 0xf4, 0xf7, 0x21, 0x6b, 0x2b, 0x9a, 0x61, 0x0e, 0x6b, 0xcc, 0xa0, 0x9f,
	0x80, 0xac, 0xa1, 0x68, 0x86, 0x39, 0xac, 0x51, 0xae, 0x85, 0xec, 0x4f, 0x8b, 0x16, 0x41, 0x79,
	0x84, 0x18, 0x74, 0xc7, 0x4a, 0x0e, 0x27, 0xef, 0xaa, 0x7f, 0x76, 0xa6, 0xfa, 0xe3, 0xd9, 0xcd,
	0x11, 0x6f, 0x99, 0x59, 0x9c, 0x7a, 0x9c, 0x05, 0xdd, 0x8d, 0xbf, 0xef, 0x89, 0xd1, 0x2e, 0xef,
	0xa4, 0x16, 0xd7, 0xb3, 0xce, 0x58, 0x4e, 0x46, 0xfb, 0x27, 0x87, 0x93, 0xf3, 0xff, 0x10, 0xf4,
	0xd7, 0x23, 0x9b, 0x7e, 0xb4, 0x7c, 0x2e, 0xe4, 0x17, 0x72, 0x08, 0x48, 0x6b, 0x0f, 0xd6, 0x27,
	0x13, 0x56, 0xca, 0x95, 0xa7, 0xec, 0xc5, 0x9d, 0x4c, 0xce, 0x68, 0xed, 0xeb, 0x4d, 0x5e, 0xbe,
	0x10, 0xf7, 0x9c, 0xf5, 0x5f, 0x41, 0x21, 0x42, 0x30, 0x73, 0x5a, 0x19, 0x68, 0x69, 0xe9, 0x53,
	0xf9, 0x92, 0x1b, 0x64, 0x86, 0x53, 0xc4, 0x86, 0xd1, 0x9b, 0x4c, 0xe4, 0x63, 0x71, 0xbb, 0x7f,
	0xf1, 0x9c, 0xd0, 0xb8, 0x6c, 0xc1, 0x2b, 0xae, 0xbd, 0xc9, 0xd9, 0x0f, 0x39, 0x59, 0xa3, 0x1e,
	0xb2, 0x89, 0xa7, 0xbf, 0x02, 0x00, 0x00, 0xff, 0xff, 0xfe, 0xb3, 0xe4, 0x83, 0x36, 0x03, 0x00,
	0x00,
}
