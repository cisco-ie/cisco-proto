/*
Copyright 2019 Cisco Systems

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: coh_dev_map_data.proto

package cisco_ios_xr_ncs5500_coherent_node_oper_coherent_nodes_node_devicemapping

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type CohDevMapData_KEYS struct {
	NodeName             string   `protobuf:"bytes,1,opt,name=node_name,json=nodeName,proto3" json:"node_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CohDevMapData_KEYS) Reset()         { *m = CohDevMapData_KEYS{} }
func (m *CohDevMapData_KEYS) String() string { return proto.CompactTextString(m) }
func (*CohDevMapData_KEYS) ProtoMessage()    {}
func (*CohDevMapData_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_6868c02727b6dc38, []int{0}
}

func (m *CohDevMapData_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CohDevMapData_KEYS.Unmarshal(m, b)
}
func (m *CohDevMapData_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CohDevMapData_KEYS.Marshal(b, m, deterministic)
}
func (m *CohDevMapData_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CohDevMapData_KEYS.Merge(m, src)
}
func (m *CohDevMapData_KEYS) XXX_Size() int {
	return xxx_messageInfo_CohDevMapData_KEYS.Size(m)
}
func (m *CohDevMapData_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_CohDevMapData_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_CohDevMapData_KEYS proto.InternalMessageInfo

func (m *CohDevMapData_KEYS) GetNodeName() string {
	if m != nil {
		return m.NodeName
	}
	return ""
}

type CohDevMapEntry struct {
	DeviceAddress        uint32   `protobuf:"varint,1,opt,name=device_address,json=deviceAddress,proto3" json:"device_address,omitempty"`
	Ifhandle             uint32   `protobuf:"varint,2,opt,name=ifhandle,proto3" json:"ifhandle,omitempty"`
	IntfName             []string `protobuf:"bytes,3,rep,name=intf_name,json=intfName,proto3" json:"intf_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CohDevMapEntry) Reset()         { *m = CohDevMapEntry{} }
func (m *CohDevMapEntry) String() string { return proto.CompactTextString(m) }
func (*CohDevMapEntry) ProtoMessage()    {}
func (*CohDevMapEntry) Descriptor() ([]byte, []int) {
	return fileDescriptor_6868c02727b6dc38, []int{1}
}

func (m *CohDevMapEntry) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CohDevMapEntry.Unmarshal(m, b)
}
func (m *CohDevMapEntry) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CohDevMapEntry.Marshal(b, m, deterministic)
}
func (m *CohDevMapEntry) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CohDevMapEntry.Merge(m, src)
}
func (m *CohDevMapEntry) XXX_Size() int {
	return xxx_messageInfo_CohDevMapEntry.Size(m)
}
func (m *CohDevMapEntry) XXX_DiscardUnknown() {
	xxx_messageInfo_CohDevMapEntry.DiscardUnknown(m)
}

var xxx_messageInfo_CohDevMapEntry proto.InternalMessageInfo

func (m *CohDevMapEntry) GetDeviceAddress() uint32 {
	if m != nil {
		return m.DeviceAddress
	}
	return 0
}

func (m *CohDevMapEntry) GetIfhandle() uint32 {
	if m != nil {
		return m.Ifhandle
	}
	return 0
}

func (m *CohDevMapEntry) GetIntfName() []string {
	if m != nil {
		return m.IntfName
	}
	return nil
}

type CohDevMapData struct {
	NumEntries           uint32            `protobuf:"varint,50,opt,name=num_entries,json=numEntries,proto3" json:"num_entries,omitempty"`
	DevMap               []*CohDevMapEntry `protobuf:"bytes,51,rep,name=dev_map,json=devMap,proto3" json:"dev_map,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *CohDevMapData) Reset()         { *m = CohDevMapData{} }
func (m *CohDevMapData) String() string { return proto.CompactTextString(m) }
func (*CohDevMapData) ProtoMessage()    {}
func (*CohDevMapData) Descriptor() ([]byte, []int) {
	return fileDescriptor_6868c02727b6dc38, []int{2}
}

func (m *CohDevMapData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CohDevMapData.Unmarshal(m, b)
}
func (m *CohDevMapData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CohDevMapData.Marshal(b, m, deterministic)
}
func (m *CohDevMapData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CohDevMapData.Merge(m, src)
}
func (m *CohDevMapData) XXX_Size() int {
	return xxx_messageInfo_CohDevMapData.Size(m)
}
func (m *CohDevMapData) XXX_DiscardUnknown() {
	xxx_messageInfo_CohDevMapData.DiscardUnknown(m)
}

var xxx_messageInfo_CohDevMapData proto.InternalMessageInfo

func (m *CohDevMapData) GetNumEntries() uint32 {
	if m != nil {
		return m.NumEntries
	}
	return 0
}

func (m *CohDevMapData) GetDevMap() []*CohDevMapEntry {
	if m != nil {
		return m.DevMap
	}
	return nil
}

func init() {
	proto.RegisterType((*CohDevMapData_KEYS)(nil), "cisco_ios_xr_ncs5500_coherent_node_oper.coherent.nodes.node.devicemapping.coh_dev_map_data_KEYS")
	proto.RegisterType((*CohDevMapEntry)(nil), "cisco_ios_xr_ncs5500_coherent_node_oper.coherent.nodes.node.devicemapping.coh_dev_map_entry")
	proto.RegisterType((*CohDevMapData)(nil), "cisco_ios_xr_ncs5500_coherent_node_oper.coherent.nodes.node.devicemapping.coh_dev_map_data")
}

func init() { proto.RegisterFile("coh_dev_map_data.proto", fileDescriptor_6868c02727b6dc38) }

var fileDescriptor_6868c02727b6dc38 = []byte{
	// 272 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x91, 0x41, 0x4b, 0x33, 0x31,
	0x10, 0x86, 0xd9, 0x6f, 0xa1, 0x5f, 0x9b, 0x52, 0xd1, 0x80, 0xb2, 0xe8, 0xc1, 0xa5, 0x20, 0xf4,
	0x14, 0x4a, 0x6b, 0x7f, 0x80, 0x87, 0x1e, 0x44, 0xf4, 0xb0, 0x9e, 0x04, 0x61, 0x88, 0xc9, 0xd4,
	0x0d, 0x98, 0x49, 0x48, 0x76, 0x17, 0xfd, 0x4b, 0xfe, 0x4a, 0xd9, 0xac, 0x8a, 0xd4, 0xab, 0x97,
	0x40, 0x1e, 0xf2, 0xbe, 0xcf, 0x30, 0x61, 0x27, 0xca, 0xd5, 0xa0, 0xb1, 0x03, 0x2b, 0x3d, 0x68,
	0xd9, 0x48, 0xe1, 0x83, 0x6b, 0x1c, 0xbf, 0x56, 0x26, 0x2a, 0x07, 0xc6, 0x45, 0x78, 0x0d, 0x40,
	0x2a, 0x6e, 0x36, 0xcb, 0x25, 0x28, 0x57, 0x63, 0x40, 0x6a, 0x80, 0x9c, 0x46, 0x70, 0x1e, 0x83,
	0xf8, 0x42, 0xa2, 0x47, 0x31, 0x9d, 0x42, 0x63, 0x67, 0x14, 0x5a, 0xe9, 0xbd, 0xa1, 0xe7, 0xf9,
	0x25, 0x3b, 0xde, 0x97, 0xc0, 0xcd, 0xf6, 0xe1, 0x9e, 0x9f, 0xb1, 0x49, 0xea, 0x21, 0x69, 0xb1,
	0xc8, 0xca, 0x6c, 0x31, 0xa9, 0xc6, 0x3d, 0xb8, 0x93, 0x16, 0xe7, 0x91, 0x1d, 0xfd, 0x4c, 0x21,
	0x35, 0xe1, 0x8d, 0x5f, 0xb0, 0x83, 0xa1, 0x1b, 0xa4, 0xd6, 0x01, 0x63, 0x4c, 0xb1, 0x59, 0x35,
	0x1b, 0xe8, 0xd5, 0x00, 0xf9, 0x29, 0x1b, 0x9b, 0x5d, 0x2d, 0x49, 0xbf, 0x60, 0xf1, 0x2f, 0x3d,
	0xf8, 0xbe, 0xf7, 0x52, 0x43, 0xcd, 0x6e, 0x90, 0xe6, 0x65, 0xde, 0x4b, 0x7b, 0x90, 0xa4, 0xef,
	0x19, 0x3b, 0xdc, 0x9f, 0x95, 0x9f, 0xb3, 0x29, 0xb5, 0x36, 0x4d, 0x60, 0x30, 0x16, 0xab, 0x54,
	0xc8, 0xa8, 0xb5, 0xdb, 0x81, 0xf0, 0x96, 0xfd, 0xff, 0x0c, 0x14, 0xeb, 0x32, 0x5f, 0x4c, 0x57,
	0x8f, 0xe2, 0xcf, 0xb6, 0x27, 0x7e, 0x2d, 0xa1, 0x1a, 0x69, 0xec, 0x6e, 0xa5, 0x7f, 0x1a, 0xa5,
	0x9f, 0x5a, 0x7f, 0x04, 0x00, 0x00, 0xff, 0xff, 0x47, 0x76, 0x9d, 0xf1, 0xc3, 0x01, 0x00, 0x00,
}
