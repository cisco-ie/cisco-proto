/*
Copyright 2019 Cisco Systems

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: ppp_oper_stats_global.proto

package cisco_ios_xr_ppp_ma_oper_ppp_nodes_node_statistics

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type PppOperStatsGlobal_KEYS struct {
	NodeName             string   `protobuf:"bytes,1,opt,name=node_name,json=nodeName,proto3" json:"node_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PppOperStatsGlobal_KEYS) Reset()         { *m = PppOperStatsGlobal_KEYS{} }
func (m *PppOperStatsGlobal_KEYS) String() string { return proto.CompactTextString(m) }
func (*PppOperStatsGlobal_KEYS) ProtoMessage()    {}
func (*PppOperStatsGlobal_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_fc3555833d44c33c, []int{0}
}

func (m *PppOperStatsGlobal_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PppOperStatsGlobal_KEYS.Unmarshal(m, b)
}
func (m *PppOperStatsGlobal_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PppOperStatsGlobal_KEYS.Marshal(b, m, deterministic)
}
func (m *PppOperStatsGlobal_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PppOperStatsGlobal_KEYS.Merge(m, src)
}
func (m *PppOperStatsGlobal_KEYS) XXX_Size() int {
	return xxx_messageInfo_PppOperStatsGlobal_KEYS.Size(m)
}
func (m *PppOperStatsGlobal_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_PppOperStatsGlobal_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_PppOperStatsGlobal_KEYS proto.InternalMessageInfo

func (m *PppOperStatsGlobal_KEYS) GetNodeName() string {
	if m != nil {
		return m.NodeName
	}
	return ""
}

type PppOperLcpStatsGlobal struct {
	ConfReqSent          uint64   `protobuf:"varint,1,opt,name=conf_req_sent,json=confReqSent,proto3" json:"conf_req_sent,omitempty"`
	ConfReqRcvd          uint64   `protobuf:"varint,2,opt,name=conf_req_rcvd,json=confReqRcvd,proto3" json:"conf_req_rcvd,omitempty"`
	ConfAckSent          uint64   `protobuf:"varint,3,opt,name=conf_ack_sent,json=confAckSent,proto3" json:"conf_ack_sent,omitempty"`
	ConfAckRcvd          uint64   `protobuf:"varint,4,opt,name=conf_ack_rcvd,json=confAckRcvd,proto3" json:"conf_ack_rcvd,omitempty"`
	ConfNakSent          uint64   `protobuf:"varint,5,opt,name=conf_nak_sent,json=confNakSent,proto3" json:"conf_nak_sent,omitempty"`
	ConfNakRcvd          uint64   `protobuf:"varint,6,opt,name=conf_nak_rcvd,json=confNakRcvd,proto3" json:"conf_nak_rcvd,omitempty"`
	ConfRejSent          uint64   `protobuf:"varint,7,opt,name=conf_rej_sent,json=confRejSent,proto3" json:"conf_rej_sent,omitempty"`
	ConfRejRcvd          uint64   `protobuf:"varint,8,opt,name=conf_rej_rcvd,json=confRejRcvd,proto3" json:"conf_rej_rcvd,omitempty"`
	TermReqSent          uint64   `protobuf:"varint,9,opt,name=term_req_sent,json=termReqSent,proto3" json:"term_req_sent,omitempty"`
	TermReqRcvd          uint64   `protobuf:"varint,10,opt,name=term_req_rcvd,json=termReqRcvd,proto3" json:"term_req_rcvd,omitempty"`
	TermAckSent          uint64   `protobuf:"varint,11,opt,name=term_ack_sent,json=termAckSent,proto3" json:"term_ack_sent,omitempty"`
	TermAckRcvd          uint64   `protobuf:"varint,12,opt,name=term_ack_rcvd,json=termAckRcvd,proto3" json:"term_ack_rcvd,omitempty"`
	CodeRejSent          uint64   `protobuf:"varint,13,opt,name=code_rej_sent,json=codeRejSent,proto3" json:"code_rej_sent,omitempty"`
	CodeRejRcvd          uint64   `protobuf:"varint,14,opt,name=code_rej_rcvd,json=codeRejRcvd,proto3" json:"code_rej_rcvd,omitempty"`
	ProtoRejSent         uint64   `protobuf:"varint,15,opt,name=proto_rej_sent,json=protoRejSent,proto3" json:"proto_rej_sent,omitempty"`
	ProtoRejRcvd         uint64   `protobuf:"varint,16,opt,name=proto_rej_rcvd,json=protoRejRcvd,proto3" json:"proto_rej_rcvd,omitempty"`
	EchoReqSent          uint64   `protobuf:"varint,17,opt,name=echo_req_sent,json=echoReqSent,proto3" json:"echo_req_sent,omitempty"`
	EchoReqRcvd          uint64   `protobuf:"varint,18,opt,name=echo_req_rcvd,json=echoReqRcvd,proto3" json:"echo_req_rcvd,omitempty"`
	EchoRepSent          uint64   `protobuf:"varint,19,opt,name=echo_rep_sent,json=echoRepSent,proto3" json:"echo_rep_sent,omitempty"`
	EchoRepRcvd          uint64   `protobuf:"varint,20,opt,name=echo_rep_rcvd,json=echoRepRcvd,proto3" json:"echo_rep_rcvd,omitempty"`
	DiscReqSent          uint64   `protobuf:"varint,21,opt,name=disc_req_sent,json=discReqSent,proto3" json:"disc_req_sent,omitempty"`
	DiscReqRcvd          uint64   `protobuf:"varint,22,opt,name=disc_req_rcvd,json=discReqRcvd,proto3" json:"disc_req_rcvd,omitempty"`
	LinkUp               uint64   `protobuf:"varint,23,opt,name=link_up,json=linkUp,proto3" json:"link_up,omitempty"`
	LinkError            uint64   `protobuf:"varint,24,opt,name=link_error,json=linkError,proto3" json:"link_error,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PppOperLcpStatsGlobal) Reset()         { *m = PppOperLcpStatsGlobal{} }
func (m *PppOperLcpStatsGlobal) String() string { return proto.CompactTextString(m) }
func (*PppOperLcpStatsGlobal) ProtoMessage()    {}
func (*PppOperLcpStatsGlobal) Descriptor() ([]byte, []int) {
	return fileDescriptor_fc3555833d44c33c, []int{1}
}

func (m *PppOperLcpStatsGlobal) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PppOperLcpStatsGlobal.Unmarshal(m, b)
}
func (m *PppOperLcpStatsGlobal) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PppOperLcpStatsGlobal.Marshal(b, m, deterministic)
}
func (m *PppOperLcpStatsGlobal) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PppOperLcpStatsGlobal.Merge(m, src)
}
func (m *PppOperLcpStatsGlobal) XXX_Size() int {
	return xxx_messageInfo_PppOperLcpStatsGlobal.Size(m)
}
func (m *PppOperLcpStatsGlobal) XXX_DiscardUnknown() {
	xxx_messageInfo_PppOperLcpStatsGlobal.DiscardUnknown(m)
}

var xxx_messageInfo_PppOperLcpStatsGlobal proto.InternalMessageInfo

func (m *PppOperLcpStatsGlobal) GetConfReqSent() uint64 {
	if m != nil {
		return m.ConfReqSent
	}
	return 0
}

func (m *PppOperLcpStatsGlobal) GetConfReqRcvd() uint64 {
	if m != nil {
		return m.ConfReqRcvd
	}
	return 0
}

func (m *PppOperLcpStatsGlobal) GetConfAckSent() uint64 {
	if m != nil {
		return m.ConfAckSent
	}
	return 0
}

func (m *PppOperLcpStatsGlobal) GetConfAckRcvd() uint64 {
	if m != nil {
		return m.ConfAckRcvd
	}
	return 0
}

func (m *PppOperLcpStatsGlobal) GetConfNakSent() uint64 {
	if m != nil {
		return m.ConfNakSent
	}
	return 0
}

func (m *PppOperLcpStatsGlobal) GetConfNakRcvd() uint64 {
	if m != nil {
		return m.ConfNakRcvd
	}
	return 0
}

func (m *PppOperLcpStatsGlobal) GetConfRejSent() uint64 {
	if m != nil {
		return m.ConfRejSent
	}
	return 0
}

func (m *PppOperLcpStatsGlobal) GetConfRejRcvd() uint64 {
	if m != nil {
		return m.ConfRejRcvd
	}
	return 0
}

func (m *PppOperLcpStatsGlobal) GetTermReqSent() uint64 {
	if m != nil {
		return m.TermReqSent
	}
	return 0
}

func (m *PppOperLcpStatsGlobal) GetTermReqRcvd() uint64 {
	if m != nil {
		return m.TermReqRcvd
	}
	return 0
}

func (m *PppOperLcpStatsGlobal) GetTermAckSent() uint64 {
	if m != nil {
		return m.TermAckSent
	}
	return 0
}

func (m *PppOperLcpStatsGlobal) GetTermAckRcvd() uint64 {
	if m != nil {
		return m.TermAckRcvd
	}
	return 0
}

func (m *PppOperLcpStatsGlobal) GetCodeRejSent() uint64 {
	if m != nil {
		return m.CodeRejSent
	}
	return 0
}

func (m *PppOperLcpStatsGlobal) GetCodeRejRcvd() uint64 {
	if m != nil {
		return m.CodeRejRcvd
	}
	return 0
}

func (m *PppOperLcpStatsGlobal) GetProtoRejSent() uint64 {
	if m != nil {
		return m.ProtoRejSent
	}
	return 0
}

func (m *PppOperLcpStatsGlobal) GetProtoRejRcvd() uint64 {
	if m != nil {
		return m.ProtoRejRcvd
	}
	return 0
}

func (m *PppOperLcpStatsGlobal) GetEchoReqSent() uint64 {
	if m != nil {
		return m.EchoReqSent
	}
	return 0
}

func (m *PppOperLcpStatsGlobal) GetEchoReqRcvd() uint64 {
	if m != nil {
		return m.EchoReqRcvd
	}
	return 0
}

func (m *PppOperLcpStatsGlobal) GetEchoRepSent() uint64 {
	if m != nil {
		return m.EchoRepSent
	}
	return 0
}

func (m *PppOperLcpStatsGlobal) GetEchoRepRcvd() uint64 {
	if m != nil {
		return m.EchoRepRcvd
	}
	return 0
}

func (m *PppOperLcpStatsGlobal) GetDiscReqSent() uint64 {
	if m != nil {
		return m.DiscReqSent
	}
	return 0
}

func (m *PppOperLcpStatsGlobal) GetDiscReqRcvd() uint64 {
	if m != nil {
		return m.DiscReqRcvd
	}
	return 0
}

func (m *PppOperLcpStatsGlobal) GetLinkUp() uint64 {
	if m != nil {
		return m.LinkUp
	}
	return 0
}

func (m *PppOperLcpStatsGlobal) GetLinkError() uint64 {
	if m != nil {
		return m.LinkError
	}
	return 0
}

type PppOperAuthStatsGlobal struct {
	PapReqSent           uint64   `protobuf:"varint,1,opt,name=pap_req_sent,json=papReqSent,proto3" json:"pap_req_sent,omitempty"`
	PapReqRcvd           uint64   `protobuf:"varint,2,opt,name=pap_req_rcvd,json=papReqRcvd,proto3" json:"pap_req_rcvd,omitempty"`
	PapAckSent           uint64   `protobuf:"varint,3,opt,name=pap_ack_sent,json=papAckSent,proto3" json:"pap_ack_sent,omitempty"`
	PapAckRcvd           uint64   `protobuf:"varint,4,opt,name=pap_ack_rcvd,json=papAckRcvd,proto3" json:"pap_ack_rcvd,omitempty"`
	PapNakSent           uint64   `protobuf:"varint,5,opt,name=pap_nak_sent,json=papNakSent,proto3" json:"pap_nak_sent,omitempty"`
	PapNakRcvd           uint64   `protobuf:"varint,6,opt,name=pap_nak_rcvd,json=papNakRcvd,proto3" json:"pap_nak_rcvd,omitempty"`
	ChapChallSent        uint64   `protobuf:"varint,7,opt,name=chap_chall_sent,json=chapChallSent,proto3" json:"chap_chall_sent,omitempty"`
	ChapChallRcvd        uint64   `protobuf:"varint,8,opt,name=chap_chall_rcvd,json=chapChallRcvd,proto3" json:"chap_chall_rcvd,omitempty"`
	ChapRespSent         uint64   `protobuf:"varint,9,opt,name=chap_resp_sent,json=chapRespSent,proto3" json:"chap_resp_sent,omitempty"`
	ChapRespRcvd         uint64   `protobuf:"varint,10,opt,name=chap_resp_rcvd,json=chapRespRcvd,proto3" json:"chap_resp_rcvd,omitempty"`
	ChapRepSuccSent      uint64   `protobuf:"varint,11,opt,name=chap_rep_succ_sent,json=chapRepSuccSent,proto3" json:"chap_rep_succ_sent,omitempty"`
	ChapRepSuccRcvd      uint64   `protobuf:"varint,12,opt,name=chap_rep_succ_rcvd,json=chapRepSuccRcvd,proto3" json:"chap_rep_succ_rcvd,omitempty"`
	ChapRepFailSent      uint64   `protobuf:"varint,13,opt,name=chap_rep_fail_sent,json=chapRepFailSent,proto3" json:"chap_rep_fail_sent,omitempty"`
	ChapRepFailRcvd      uint64   `protobuf:"varint,14,opt,name=chap_rep_fail_rcvd,json=chapRepFailRcvd,proto3" json:"chap_rep_fail_rcvd,omitempty"`
	AuthTimeoutCount     uint64   `protobuf:"varint,15,opt,name=auth_timeout_count,json=authTimeoutCount,proto3" json:"auth_timeout_count,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PppOperAuthStatsGlobal) Reset()         { *m = PppOperAuthStatsGlobal{} }
func (m *PppOperAuthStatsGlobal) String() string { return proto.CompactTextString(m) }
func (*PppOperAuthStatsGlobal) ProtoMessage()    {}
func (*PppOperAuthStatsGlobal) Descriptor() ([]byte, []int) {
	return fileDescriptor_fc3555833d44c33c, []int{2}
}

func (m *PppOperAuthStatsGlobal) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PppOperAuthStatsGlobal.Unmarshal(m, b)
}
func (m *PppOperAuthStatsGlobal) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PppOperAuthStatsGlobal.Marshal(b, m, deterministic)
}
func (m *PppOperAuthStatsGlobal) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PppOperAuthStatsGlobal.Merge(m, src)
}
func (m *PppOperAuthStatsGlobal) XXX_Size() int {
	return xxx_messageInfo_PppOperAuthStatsGlobal.Size(m)
}
func (m *PppOperAuthStatsGlobal) XXX_DiscardUnknown() {
	xxx_messageInfo_PppOperAuthStatsGlobal.DiscardUnknown(m)
}

var xxx_messageInfo_PppOperAuthStatsGlobal proto.InternalMessageInfo

func (m *PppOperAuthStatsGlobal) GetPapReqSent() uint64 {
	if m != nil {
		return m.PapReqSent
	}
	return 0
}

func (m *PppOperAuthStatsGlobal) GetPapReqRcvd() uint64 {
	if m != nil {
		return m.PapReqRcvd
	}
	return 0
}

func (m *PppOperAuthStatsGlobal) GetPapAckSent() uint64 {
	if m != nil {
		return m.PapAckSent
	}
	return 0
}

func (m *PppOperAuthStatsGlobal) GetPapAckRcvd() uint64 {
	if m != nil {
		return m.PapAckRcvd
	}
	return 0
}

func (m *PppOperAuthStatsGlobal) GetPapNakSent() uint64 {
	if m != nil {
		return m.PapNakSent
	}
	return 0
}

func (m *PppOperAuthStatsGlobal) GetPapNakRcvd() uint64 {
	if m != nil {
		return m.PapNakRcvd
	}
	return 0
}

func (m *PppOperAuthStatsGlobal) GetChapChallSent() uint64 {
	if m != nil {
		return m.ChapChallSent
	}
	return 0
}

func (m *PppOperAuthStatsGlobal) GetChapChallRcvd() uint64 {
	if m != nil {
		return m.ChapChallRcvd
	}
	return 0
}

func (m *PppOperAuthStatsGlobal) GetChapRespSent() uint64 {
	if m != nil {
		return m.ChapRespSent
	}
	return 0
}

func (m *PppOperAuthStatsGlobal) GetChapRespRcvd() uint64 {
	if m != nil {
		return m.ChapRespRcvd
	}
	return 0
}

func (m *PppOperAuthStatsGlobal) GetChapRepSuccSent() uint64 {
	if m != nil {
		return m.ChapRepSuccSent
	}
	return 0
}

func (m *PppOperAuthStatsGlobal) GetChapRepSuccRcvd() uint64 {
	if m != nil {
		return m.ChapRepSuccRcvd
	}
	return 0
}

func (m *PppOperAuthStatsGlobal) GetChapRepFailSent() uint64 {
	if m != nil {
		return m.ChapRepFailSent
	}
	return 0
}

func (m *PppOperAuthStatsGlobal) GetChapRepFailRcvd() uint64 {
	if m != nil {
		return m.ChapRepFailRcvd
	}
	return 0
}

func (m *PppOperAuthStatsGlobal) GetAuthTimeoutCount() uint64 {
	if m != nil {
		return m.AuthTimeoutCount
	}
	return 0
}

type PppOperNcpStatsGlobal struct {
	NcpIdentifier        string   `protobuf:"bytes,1,opt,name=ncp_identifier,json=ncpIdentifier,proto3" json:"ncp_identifier,omitempty"`
	ConfReqSent          uint64   `protobuf:"varint,2,opt,name=conf_req_sent,json=confReqSent,proto3" json:"conf_req_sent,omitempty"`
	ConfReqRcvd          uint64   `protobuf:"varint,3,opt,name=conf_req_rcvd,json=confReqRcvd,proto3" json:"conf_req_rcvd,omitempty"`
	ConfAckSent          uint64   `protobuf:"varint,4,opt,name=conf_ack_sent,json=confAckSent,proto3" json:"conf_ack_sent,omitempty"`
	ConfAckRcvd          uint64   `protobuf:"varint,5,opt,name=conf_ack_rcvd,json=confAckRcvd,proto3" json:"conf_ack_rcvd,omitempty"`
	ConfNakSent          uint64   `protobuf:"varint,6,opt,name=conf_nak_sent,json=confNakSent,proto3" json:"conf_nak_sent,omitempty"`
	ConfNakRcvd          uint64   `protobuf:"varint,7,opt,name=conf_nak_rcvd,json=confNakRcvd,proto3" json:"conf_nak_rcvd,omitempty"`
	ConfRejSent          uint64   `protobuf:"varint,8,opt,name=conf_rej_sent,json=confRejSent,proto3" json:"conf_rej_sent,omitempty"`
	ConfRejRcvd          uint64   `protobuf:"varint,9,opt,name=conf_rej_rcvd,json=confRejRcvd,proto3" json:"conf_rej_rcvd,omitempty"`
	TermReqSent          uint64   `protobuf:"varint,10,opt,name=term_req_sent,json=termReqSent,proto3" json:"term_req_sent,omitempty"`
	TermReqRcvd          uint64   `protobuf:"varint,11,opt,name=term_req_rcvd,json=termReqRcvd,proto3" json:"term_req_rcvd,omitempty"`
	TermAckSent          uint64   `protobuf:"varint,12,opt,name=term_ack_sent,json=termAckSent,proto3" json:"term_ack_sent,omitempty"`
	TermAckRcvd          uint64   `protobuf:"varint,13,opt,name=term_ack_rcvd,json=termAckRcvd,proto3" json:"term_ack_rcvd,omitempty"`
	ProtoRejSent         uint64   `protobuf:"varint,14,opt,name=proto_rej_sent,json=protoRejSent,proto3" json:"proto_rej_sent,omitempty"`
	ProtoRejRcvd         uint64   `protobuf:"varint,15,opt,name=proto_rej_rcvd,json=protoRejRcvd,proto3" json:"proto_rej_rcvd,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PppOperNcpStatsGlobal) Reset()         { *m = PppOperNcpStatsGlobal{} }
func (m *PppOperNcpStatsGlobal) String() string { return proto.CompactTextString(m) }
func (*PppOperNcpStatsGlobal) ProtoMessage()    {}
func (*PppOperNcpStatsGlobal) Descriptor() ([]byte, []int) {
	return fileDescriptor_fc3555833d44c33c, []int{3}
}

func (m *PppOperNcpStatsGlobal) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PppOperNcpStatsGlobal.Unmarshal(m, b)
}
func (m *PppOperNcpStatsGlobal) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PppOperNcpStatsGlobal.Marshal(b, m, deterministic)
}
func (m *PppOperNcpStatsGlobal) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PppOperNcpStatsGlobal.Merge(m, src)
}
func (m *PppOperNcpStatsGlobal) XXX_Size() int {
	return xxx_messageInfo_PppOperNcpStatsGlobal.Size(m)
}
func (m *PppOperNcpStatsGlobal) XXX_DiscardUnknown() {
	xxx_messageInfo_PppOperNcpStatsGlobal.DiscardUnknown(m)
}

var xxx_messageInfo_PppOperNcpStatsGlobal proto.InternalMessageInfo

func (m *PppOperNcpStatsGlobal) GetNcpIdentifier() string {
	if m != nil {
		return m.NcpIdentifier
	}
	return ""
}

func (m *PppOperNcpStatsGlobal) GetConfReqSent() uint64 {
	if m != nil {
		return m.ConfReqSent
	}
	return 0
}

func (m *PppOperNcpStatsGlobal) GetConfReqRcvd() uint64 {
	if m != nil {
		return m.ConfReqRcvd
	}
	return 0
}

func (m *PppOperNcpStatsGlobal) GetConfAckSent() uint64 {
	if m != nil {
		return m.ConfAckSent
	}
	return 0
}

func (m *PppOperNcpStatsGlobal) GetConfAckRcvd() uint64 {
	if m != nil {
		return m.ConfAckRcvd
	}
	return 0
}

func (m *PppOperNcpStatsGlobal) GetConfNakSent() uint64 {
	if m != nil {
		return m.ConfNakSent
	}
	return 0
}

func (m *PppOperNcpStatsGlobal) GetConfNakRcvd() uint64 {
	if m != nil {
		return m.ConfNakRcvd
	}
	return 0
}

func (m *PppOperNcpStatsGlobal) GetConfRejSent() uint64 {
	if m != nil {
		return m.ConfRejSent
	}
	return 0
}

func (m *PppOperNcpStatsGlobal) GetConfRejRcvd() uint64 {
	if m != nil {
		return m.ConfRejRcvd
	}
	return 0
}

func (m *PppOperNcpStatsGlobal) GetTermReqSent() uint64 {
	if m != nil {
		return m.TermReqSent
	}
	return 0
}

func (m *PppOperNcpStatsGlobal) GetTermReqRcvd() uint64 {
	if m != nil {
		return m.TermReqRcvd
	}
	return 0
}

func (m *PppOperNcpStatsGlobal) GetTermAckSent() uint64 {
	if m != nil {
		return m.TermAckSent
	}
	return 0
}

func (m *PppOperNcpStatsGlobal) GetTermAckRcvd() uint64 {
	if m != nil {
		return m.TermAckRcvd
	}
	return 0
}

func (m *PppOperNcpStatsGlobal) GetProtoRejSent() uint64 {
	if m != nil {
		return m.ProtoRejSent
	}
	return 0
}

func (m *PppOperNcpStatsGlobal) GetProtoRejRcvd() uint64 {
	if m != nil {
		return m.ProtoRejRcvd
	}
	return 0
}

type PppOperStatsGlobal struct {
	LcpStatistics            *PppOperLcpStatsGlobal   `protobuf:"bytes,50,opt,name=lcp_statistics,json=lcpStatistics,proto3" json:"lcp_statistics,omitempty"`
	AuthenticationStatistics *PppOperAuthStatsGlobal  `protobuf:"bytes,51,opt,name=authentication_statistics,json=authenticationStatistics,proto3" json:"authentication_statistics,omitempty"`
	NcpStatisticsArray       []*PppOperNcpStatsGlobal `protobuf:"bytes,52,rep,name=ncp_statistics_array,json=ncpStatisticsArray,proto3" json:"ncp_statistics_array,omitempty"`
	XXX_NoUnkeyedLiteral     struct{}                 `json:"-"`
	XXX_unrecognized         []byte                   `json:"-"`
	XXX_sizecache            int32                    `json:"-"`
}

func (m *PppOperStatsGlobal) Reset()         { *m = PppOperStatsGlobal{} }
func (m *PppOperStatsGlobal) String() string { return proto.CompactTextString(m) }
func (*PppOperStatsGlobal) ProtoMessage()    {}
func (*PppOperStatsGlobal) Descriptor() ([]byte, []int) {
	return fileDescriptor_fc3555833d44c33c, []int{4}
}

func (m *PppOperStatsGlobal) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PppOperStatsGlobal.Unmarshal(m, b)
}
func (m *PppOperStatsGlobal) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PppOperStatsGlobal.Marshal(b, m, deterministic)
}
func (m *PppOperStatsGlobal) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PppOperStatsGlobal.Merge(m, src)
}
func (m *PppOperStatsGlobal) XXX_Size() int {
	return xxx_messageInfo_PppOperStatsGlobal.Size(m)
}
func (m *PppOperStatsGlobal) XXX_DiscardUnknown() {
	xxx_messageInfo_PppOperStatsGlobal.DiscardUnknown(m)
}

var xxx_messageInfo_PppOperStatsGlobal proto.InternalMessageInfo

func (m *PppOperStatsGlobal) GetLcpStatistics() *PppOperLcpStatsGlobal {
	if m != nil {
		return m.LcpStatistics
	}
	return nil
}

func (m *PppOperStatsGlobal) GetAuthenticationStatistics() *PppOperAuthStatsGlobal {
	if m != nil {
		return m.AuthenticationStatistics
	}
	return nil
}

func (m *PppOperStatsGlobal) GetNcpStatisticsArray() []*PppOperNcpStatsGlobal {
	if m != nil {
		return m.NcpStatisticsArray
	}
	return nil
}

func init() {
	proto.RegisterType((*PppOperStatsGlobal_KEYS)(nil), "cisco_ios_xr_ppp_ma_oper.ppp.nodes.node.statistics.ppp_oper_stats_global_KEYS")
	proto.RegisterType((*PppOperLcpStatsGlobal)(nil), "cisco_ios_xr_ppp_ma_oper.ppp.nodes.node.statistics.ppp_oper_lcp_stats_global")
	proto.RegisterType((*PppOperAuthStatsGlobal)(nil), "cisco_ios_xr_ppp_ma_oper.ppp.nodes.node.statistics.ppp_oper_auth_stats_global")
	proto.RegisterType((*PppOperNcpStatsGlobal)(nil), "cisco_ios_xr_ppp_ma_oper.ppp.nodes.node.statistics.ppp_oper_ncp_stats_global")
	proto.RegisterType((*PppOperStatsGlobal)(nil), "cisco_ios_xr_ppp_ma_oper.ppp.nodes.node.statistics.ppp_oper_stats_global")
}

func init() { proto.RegisterFile("ppp_oper_stats_global.proto", fileDescriptor_fc3555833d44c33c) }

var fileDescriptor_fc3555833d44c33c = []byte{
	// 776 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x96, 0xcd, 0x6e, 0xd3, 0x4c,
	0x14, 0x86, 0x95, 0x26, 0x4d, 0x9b, 0xc9, 0x5f, 0x3f, 0x7f, 0x2d, 0x75, 0xa9, 0x90, 0xa2, 0x08,
	0x50, 0x25, 0x50, 0x16, 0x2d, 0x1b, 0x96, 0x55, 0x55, 0x24, 0x84, 0xe8, 0xc2, 0x81, 0x05, 0xab,
	0xd1, 0x74, 0x32, 0x25, 0x6e, 0x1d, 0xcf, 0x74, 0x3c, 0xa9, 0x60, 0xc5, 0x05, 0x70, 0x0b, 0x5c,
	0x0b, 0x97, 0xc3, 0x96, 0x5b, 0x40, 0x73, 0xfc, 0x77, 0xc6, 0x2e, 0x92, 0x51, 0x37, 0x95, 0x7a,
	0xfc, 0xf8, 0xf1, 0xf1, 0x64, 0xde, 0x39, 0x26, 0x87, 0x4a, 0x29, 0x2a, 0x95, 0xd0, 0x34, 0x31,
	0xcc, 0x24, 0xf4, 0x73, 0x24, 0x2f, 0x59, 0x34, 0x53, 0x5a, 0x1a, 0xe9, 0x1d, 0xf3, 0x30, 0xe1,
	0x92, 0x86, 0x32, 0xa1, 0x5f, 0x34, 0xb5, 0xe4, 0x8a, 0x01, 0x3c, 0x53, 0x4a, 0xcd, 0x62, 0xb9,
	0x10, 0x09, 0xfc, 0x9d, 0xd9, 0x7b, 0xc3, 0xc4, 0x84, 0x3c, 0x99, 0xbe, 0x26, 0x8f, 0xef, 0x55,
	0xd2, 0x77, 0xe7, 0x9f, 0xe6, 0xde, 0x21, 0xe9, 0xd9, 0x1b, 0x68, 0xcc, 0x56, 0xc2, 0x6f, 0x4d,
	0x5a, 0x47, 0xbd, 0x60, 0xdb, 0x16, 0x2e, 0xd8, 0x4a, 0x4c, 0x7f, 0x77, 0xc9, 0x41, 0x71, 0x6f,
	0xc4, 0x95, 0x73, 0xbf, 0x37, 0x25, 0x43, 0x2e, 0xe3, 0x2b, 0xaa, 0xc5, 0x2d, 0x4d, 0x44, 0x6c,
	0xe0, 0xf6, 0x4e, 0xd0, 0xb7, 0xc5, 0x40, 0xdc, 0xce, 0x45, 0x6c, 0x1c, 0x46, 0xf3, 0xbb, 0x85,
	0xbf, 0xe1, 0x30, 0x01, 0xbf, 0x5b, 0x14, 0x0c, 0xe3, 0x37, 0xa9, 0xa7, 0x5d, 0x32, 0xa7, 0xfc,
	0xc6, 0xf1, 0x58, 0x06, 0x3c, 0x1d, 0x87, 0x71, 0x3c, 0x31, 0xcb, 0x3c, 0x9b, 0x25, 0x73, 0xc1,
	0x5c, 0x8f, 0x65, 0xc0, 0xd3, 0x75, 0x18, 0xc7, 0xa3, 0xc5, 0x75, 0xea, 0xd9, 0xc2, 0x3d, 0x5f,
	0x57, 0xde, 0xeb, 0x3a, 0xf5, 0x6c, 0x3b, 0x4c, 0xee, 0x31, 0x42, 0xaf, 0xca, 0xf5, 0xe9, 0xa5,
	0x8c, 0x2d, 0xa2, 0xf5, 0x29, 0x18, 0xf0, 0x10, 0x87, 0x71, 0x3c, 0xc5, 0xfa, 0xf4, 0x4b, 0x06,
	0xad, 0x4f, 0xc1, 0x80, 0x67, 0xe0, 0x30, 0xe5, 0x7b, 0x2d, 0x44, 0xf9, 0x5e, 0xc3, 0xbc, 0xe7,
	0x85, 0x70, 0xde, 0x2b, 0x63, 0xc0, 0x33, 0x72, 0x18, 0xf0, 0x3c, 0x25, 0x23, 0xd8, 0x8d, 0xa5,
	0x68, 0x0c, 0xd0, 0x00, 0xaa, 0xb9, 0xc9, 0xa1, 0x40, 0xb5, 0xe3, 0x52, 0x79, 0x4f, 0x82, 0x2f,
	0x65, 0xb9, 0x46, 0xff, 0xa5, 0xcf, 0xb3, 0x45, 0xb4, 0x46, 0x05, 0x03, 0x22, 0xcf, 0x61, 0x2a,
	0x1e, 0x95, 0x7a, 0xfe, 0xc7, 0x8c, 0xaa, 0x78, 0x54, 0xea, 0xd9, 0x75, 0x98, 0xdc, 0xb3, 0x08,
	0x13, 0x5e, 0xf6, 0xb3, 0x97, 0x32, 0xb6, 0x88, 0xfa, 0x29, 0x18, 0xf0, 0x3c, 0x72, 0x18, 0xf0,
	0xec, 0x93, 0xad, 0x28, 0x8c, 0x6f, 0xe8, 0x5a, 0xf9, 0xfb, 0x70, 0xb5, 0x6b, 0xff, 0xfd, 0xa8,
	0xbc, 0x27, 0x84, 0xc0, 0x05, 0xa1, 0xb5, 0xd4, 0xbe, 0x0f, 0xd7, 0x7a, 0xb6, 0x72, 0x6e, 0x0b,
	0xd3, 0x5f, 0x1d, 0x94, 0x56, 0xb6, 0x36, 0x4b, 0x37, 0x72, 0x13, 0x32, 0x50, 0x4c, 0x55, 0x13,
	0x47, 0x14, 0x53, 0x79, 0x73, 0x88, 0x40, 0x79, 0xcb, 0x08, 0x68, 0x2d, 0x23, 0x2a, 0x69, 0xb3,
	0x44, 0xbe, 0x99, 0x10, 0x81, 0xb2, 0x96, 0x11, 0xd8, 0x51, 0x49, 0x9a, 0x25, 0xf2, 0xa0, 0x21,
	0x02, 0xe5, 0x2c, 0x23, 0xc0, 0xf1, 0x9c, 0x8c, 0xf9, 0x92, 0x29, 0xca, 0x97, 0x2c, 0x8a, 0x70,
	0xd0, 0x86, 0xb6, 0x7c, 0x66, 0xab, 0x60, 0x72, 0x39, 0x14, 0xb6, 0x92, 0xcb, 0xb7, 0x25, 0x70,
	0x5a, 0x24, 0x0a, 0xe7, 0x6d, 0x60, 0xab, 0x81, 0x48, 0x54, 0xbe, 0x2d, 0x4b, 0x0a, 0x25, 0xae,
	0xa0, 0xc0, 0xf5, 0x82, 0x78, 0x19, 0xa5, 0x68, 0xb2, 0xe6, 0x1c, 0xe7, 0x6e, 0x9c, 0x92, 0x6a,
	0xbe, 0xe6, 0x1c, 0x94, 0x35, 0x18, 0x05, 0x10, 0xc3, 0x35, 0xf3, 0x15, 0x0b, 0x23, 0x9c, 0xc4,
	0x1c, 0x7e, 0xc3, 0xc2, 0xa8, 0x66, 0x06, 0x18, 0x45, 0x12, 0xc3, 0x60, 0x7e, 0x49, 0x3c, 0xd8,
	0x30, 0x26, 0x5c, 0x09, 0xb9, 0x36, 0x94, 0xcb, 0x75, 0x11, 0xcd, 0x1d, 0x7b, 0xe5, 0x43, 0x7a,
	0xe1, 0xcc, 0xd6, 0xa7, 0x3f, 0x3b, 0xe8, 0x68, 0x8f, 0xab, 0x47, 0xfb, 0x33, 0x32, 0xb2, 0xb5,
	0x70, 0x21, 0x62, 0x13, 0x5e, 0x85, 0x42, 0x67, 0xa3, 0x61, 0x18, 0x73, 0xf5, 0xb6, 0x28, 0xd6,
	0x27, 0xc0, 0x46, 0x83, 0x09, 0xd0, 0x6e, 0x30, 0x01, 0x3a, 0x0d, 0x26, 0xc0, 0x66, 0x83, 0x09,
	0xd0, 0x6d, 0x30, 0x01, 0xb6, 0x1a, 0x4c, 0x80, 0xed, 0x06, 0x13, 0xa0, 0xd7, 0x60, 0x02, 0x90,
	0x06, 0x13, 0xa0, 0xdf, 0x60, 0x02, 0x0c, 0x1a, 0x4c, 0x80, 0x61, 0x7d, 0x02, 0xd4, 0x4f, 0xee,
	0x51, 0xa3, 0x93, 0x7b, 0x5c, 0x3f, 0xb9, 0xa7, 0x3f, 0xda, 0x64, 0xef, 0xde, 0xef, 0x0a, 0xcf,
	0x90, 0x51, 0xfe, 0xad, 0x90, 0x7e, 0x82, 0xf8, 0xc7, 0x93, 0xd6, 0x51, 0xff, 0xf8, 0xfd, 0xec,
	0xdf, 0xbf, 0x5e, 0x66, 0x7f, 0xfd, 0xfc, 0x08, 0x86, 0x11, 0x57, 0xf3, 0x02, 0xf4, 0xbe, 0xb7,
	0xc8, 0x81, 0xdd, 0xe5, 0x76, 0x73, 0x72, 0x66, 0x42, 0x19, 0xe3, 0x0e, 0x4e, 0xa0, 0x83, 0x8b,
	0x07, 0x75, 0x50, 0x3b, 0x8e, 0x03, 0xdf, 0x7d, 0x20, 0xea, 0xe6, 0x1b, 0xd9, 0x8d, 0x9d, 0x35,
	0xa0, 0x4c, 0x6b, 0xf6, 0xd5, 0x7f, 0x35, 0x69, 0x3f, 0x78, 0x25, 0xaa, 0x69, 0x0d, 0xbc, 0x18,
	0xaf, 0xc4, 0xa9, 0x7d, 0xd0, 0x65, 0x17, 0x7e, 0xac, 0x93, 0x3f, 0x01, 0x00, 0x00, 0xff, 0xff,
	0x81, 0x6a, 0xf8, 0x8e, 0x4f, 0x0a, 0x00, 0x00,
}
