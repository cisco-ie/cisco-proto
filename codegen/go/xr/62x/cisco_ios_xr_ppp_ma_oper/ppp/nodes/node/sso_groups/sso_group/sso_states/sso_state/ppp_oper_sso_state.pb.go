/*
Copyright 2019 Cisco Systems

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: ppp_oper_sso_state.proto

package cisco_ios_xr_ppp_ma_oper_ppp_nodes_node_sso_groups_sso_group_sso_states_sso_state

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type PppOperSsoState_KEYS struct {
	NodeName             string   `protobuf:"bytes,1,opt,name=node_name,json=nodeName,proto3" json:"node_name,omitempty"`
	GroupId              uint32   `protobuf:"varint,2,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	SessionId            uint32   `protobuf:"varint,3,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PppOperSsoState_KEYS) Reset()         { *m = PppOperSsoState_KEYS{} }
func (m *PppOperSsoState_KEYS) String() string { return proto.CompactTextString(m) }
func (*PppOperSsoState_KEYS) ProtoMessage()    {}
func (*PppOperSsoState_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_3945cb40bbf30feb, []int{0}
}

func (m *PppOperSsoState_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PppOperSsoState_KEYS.Unmarshal(m, b)
}
func (m *PppOperSsoState_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PppOperSsoState_KEYS.Marshal(b, m, deterministic)
}
func (m *PppOperSsoState_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PppOperSsoState_KEYS.Merge(m, src)
}
func (m *PppOperSsoState_KEYS) XXX_Size() int {
	return xxx_messageInfo_PppOperSsoState_KEYS.Size(m)
}
func (m *PppOperSsoState_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_PppOperSsoState_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_PppOperSsoState_KEYS proto.InternalMessageInfo

func (m *PppOperSsoState_KEYS) GetNodeName() string {
	if m != nil {
		return m.NodeName
	}
	return ""
}

func (m *PppOperSsoState_KEYS) GetGroupId() uint32 {
	if m != nil {
		return m.GroupId
	}
	return 0
}

func (m *PppOperSsoState_KEYS) GetSessionId() uint32 {
	if m != nil {
		return m.SessionId
	}
	return 0
}

type PppOperSsoFsmState struct {
	IsRunning            bool     `protobuf:"varint,1,opt,name=is_running,json=isRunning,proto3" json:"is_running,omitempty"`
	State                string   `protobuf:"bytes,2,opt,name=state,proto3" json:"state,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PppOperSsoFsmState) Reset()         { *m = PppOperSsoFsmState{} }
func (m *PppOperSsoFsmState) String() string { return proto.CompactTextString(m) }
func (*PppOperSsoFsmState) ProtoMessage()    {}
func (*PppOperSsoFsmState) Descriptor() ([]byte, []int) {
	return fileDescriptor_3945cb40bbf30feb, []int{1}
}

func (m *PppOperSsoFsmState) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PppOperSsoFsmState.Unmarshal(m, b)
}
func (m *PppOperSsoFsmState) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PppOperSsoFsmState.Marshal(b, m, deterministic)
}
func (m *PppOperSsoFsmState) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PppOperSsoFsmState.Merge(m, src)
}
func (m *PppOperSsoFsmState) XXX_Size() int {
	return xxx_messageInfo_PppOperSsoFsmState.Size(m)
}
func (m *PppOperSsoFsmState) XXX_DiscardUnknown() {
	xxx_messageInfo_PppOperSsoFsmState.DiscardUnknown(m)
}

var xxx_messageInfo_PppOperSsoFsmState proto.InternalMessageInfo

func (m *PppOperSsoFsmState) GetIsRunning() bool {
	if m != nil {
		return m.IsRunning
	}
	return false
}

func (m *PppOperSsoFsmState) GetState() string {
	if m != nil {
		return m.State
	}
	return ""
}

type PppOperSsoState struct {
	SessionIdXr          uint32              `protobuf:"varint,50,opt,name=session_id_xr,json=sessionIdXr,proto3" json:"session_id_xr,omitempty"`
	Interface            string              `protobuf:"bytes,51,opt,name=interface,proto3" json:"interface,omitempty"`
	LcpState             *PppOperSsoFsmState `protobuf:"bytes,52,opt,name=lcp_state,json=lcpState,proto3" json:"lcp_state,omitempty"`
	OfUsAuthState        *PppOperSsoFsmState `protobuf:"bytes,53,opt,name=of_us_auth_state,json=ofUsAuthState,proto3" json:"of_us_auth_state,omitempty"`
	OfPeerAuthState      *PppOperSsoFsmState `protobuf:"bytes,54,opt,name=of_peer_auth_state,json=ofPeerAuthState,proto3" json:"of_peer_auth_state,omitempty"`
	IpcpState            *PppOperSsoFsmState `protobuf:"bytes,55,opt,name=ipcp_state,json=ipcpState,proto3" json:"ipcp_state,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *PppOperSsoState) Reset()         { *m = PppOperSsoState{} }
func (m *PppOperSsoState) String() string { return proto.CompactTextString(m) }
func (*PppOperSsoState) ProtoMessage()    {}
func (*PppOperSsoState) Descriptor() ([]byte, []int) {
	return fileDescriptor_3945cb40bbf30feb, []int{2}
}

func (m *PppOperSsoState) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PppOperSsoState.Unmarshal(m, b)
}
func (m *PppOperSsoState) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PppOperSsoState.Marshal(b, m, deterministic)
}
func (m *PppOperSsoState) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PppOperSsoState.Merge(m, src)
}
func (m *PppOperSsoState) XXX_Size() int {
	return xxx_messageInfo_PppOperSsoState.Size(m)
}
func (m *PppOperSsoState) XXX_DiscardUnknown() {
	xxx_messageInfo_PppOperSsoState.DiscardUnknown(m)
}

var xxx_messageInfo_PppOperSsoState proto.InternalMessageInfo

func (m *PppOperSsoState) GetSessionIdXr() uint32 {
	if m != nil {
		return m.SessionIdXr
	}
	return 0
}

func (m *PppOperSsoState) GetInterface() string {
	if m != nil {
		return m.Interface
	}
	return ""
}

func (m *PppOperSsoState) GetLcpState() *PppOperSsoFsmState {
	if m != nil {
		return m.LcpState
	}
	return nil
}

func (m *PppOperSsoState) GetOfUsAuthState() *PppOperSsoFsmState {
	if m != nil {
		return m.OfUsAuthState
	}
	return nil
}

func (m *PppOperSsoState) GetOfPeerAuthState() *PppOperSsoFsmState {
	if m != nil {
		return m.OfPeerAuthState
	}
	return nil
}

func (m *PppOperSsoState) GetIpcpState() *PppOperSsoFsmState {
	if m != nil {
		return m.IpcpState
	}
	return nil
}

func init() {
	proto.RegisterType((*PppOperSsoState_KEYS)(nil), "cisco_ios_xr_ppp_ma_oper.ppp.nodes.node.sso_groups.sso_group.sso_states.sso_state.ppp_oper_sso_state_KEYS")
	proto.RegisterType((*PppOperSsoFsmState)(nil), "cisco_ios_xr_ppp_ma_oper.ppp.nodes.node.sso_groups.sso_group.sso_states.sso_state.ppp_oper_sso_fsm_state")
	proto.RegisterType((*PppOperSsoState)(nil), "cisco_ios_xr_ppp_ma_oper.ppp.nodes.node.sso_groups.sso_group.sso_states.sso_state.ppp_oper_sso_state")
}

func init() { proto.RegisterFile("ppp_oper_sso_state.proto", fileDescriptor_3945cb40bbf30feb) }

var fileDescriptor_3945cb40bbf30feb = []byte{
	// 357 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x93, 0xcf, 0x4b, 0xc3, 0x30,
	0x14, 0xc7, 0x89, 0x32, 0x6d, 0xde, 0x18, 0x4a, 0x10, 0xad, 0xa8, 0x30, 0x7a, 0xda, 0xa9, 0x87,
	0xcd, 0x1f, 0x67, 0x0f, 0x1e, 0x86, 0x28, 0xda, 0x21, 0xe8, 0x29, 0xd4, 0x36, 0xdd, 0x02, 0x6b,
	0xf3, 0xc8, 0x6b, 0x61, 0x7f, 0x81, 0x78, 0xf6, 0x20, 0xfe, 0xb9, 0xd2, 0x74, 0xac, 0xca, 0x3c,
	0xca, 0x2e, 0x25, 0xf9, 0xe6, 0xe5, 0xfb, 0xfd, 0xbc, 0x3e, 0x02, 0x3e, 0x22, 0x4a, 0x83, 0xca,
	0x4a, 0x22, 0x23, 0xa9, 0x8c, 0x4b, 0x15, 0xa2, 0x35, 0xa5, 0x11, 0x8f, 0x89, 0xa6, 0xc4, 0x48,
	0x6d, 0x48, 0x2e, 0xac, 0xac, 0xcb, 0xf2, 0xd8, 0x55, 0x86, 0x88, 0x18, 0x16, 0x26, 0x55, 0xe4,
	0xbe, 0x61, 0x7d, 0x71, 0x6a, 0x4d, 0x85, 0xd4, 0x2e, 0xc3, 0x95, 0x1b, 0xb5, 0xcb, 0x00, 0xe1,
	0x68, 0x3d, 0x4e, 0xde, 0xde, 0xbc, 0x4c, 0xc4, 0x09, 0xf0, 0xda, 0x4c, 0x16, 0x71, 0xae, 0x7c,
	0xd6, 0x67, 0x03, 0x1e, 0x79, 0xb5, 0x70, 0x1f, 0xe7, 0x4a, 0x1c, 0x83, 0xe7, 0x5c, 0xa5, 0x4e,
	0xfd, 0xad, 0x3e, 0x1b, 0xf4, 0xa2, 0x5d, 0xb7, 0x1f, 0xa7, 0xe2, 0x0c, 0x80, 0x14, 0x91, 0x36,
	0x45, 0x7d, 0xb8, 0xed, 0x0e, 0xf9, 0x52, 0x19, 0xa7, 0xc1, 0x1d, 0x1c, 0xfe, 0x4a, 0xcc, 0x28,
	0x6f, 0x52, 0xeb, 0x8b, 0x9a, 0xa4, 0xad, 0x8a, 0x42, 0x17, 0x53, 0x97, 0xe8, 0x45, 0x5c, 0x53,
	0xd4, 0x08, 0xe2, 0x00, 0x3a, 0xae, 0xce, 0xe5, 0xf1, 0xa8, 0xd9, 0x04, 0x5f, 0x1d, 0x10, 0xeb,
	0x1d, 0x88, 0x00, 0x7a, 0x2d, 0x84, 0x5c, 0x58, 0x7f, 0xe8, 0x38, 0xba, 0x2b, 0x8e, 0x67, 0x2b,
	0x4e, 0x81, 0xeb, 0xa2, 0x54, 0x36, 0x8b, 0x13, 0xe5, 0x8f, 0x9c, 0x69, 0x2b, 0x88, 0x37, 0x06,
	0x7c, 0x9e, 0x60, 0xe3, 0xe7, 0x9f, 0xf7, 0xd9, 0xa0, 0x3b, 0xd4, 0xe1, 0xbf, 0x4f, 0x20, 0xfc,
	0xfb, 0x67, 0x44, 0xde, 0x3c, 0xc1, 0x89, 0x6b, 0xe5, 0x83, 0xc1, 0xbe, 0xc9, 0x64, 0x45, 0x32,
	0xae, 0xca, 0xd9, 0x92, 0xe7, 0x62, 0xd3, 0x3c, 0x3d, 0x93, 0x3d, 0xd1, 0x75, 0x55, 0xce, 0x1a,
	0xa8, 0x4f, 0x06, 0xc2, 0x64, 0x12, 0x95, 0xb2, 0x3f, 0xb1, 0x2e, 0x37, 0x8d, 0xb5, 0x67, 0xb2,
	0x07, 0xa5, 0x6c, 0x0b, 0xf6, 0xce, 0x00, 0x34, 0xae, 0xe6, 0x76, 0xb5, 0x69, 0x20, 0x5e, 0x87,
	0x3b, 0x94, 0xd7, 0x1d, 0xf7, 0x6a, 0x47, 0xdf, 0x01, 0x00, 0x00, 0xff, 0xff, 0x52, 0x29, 0x88,
	0x51, 0xd1, 0x03, 0x00, 0x00,
}
