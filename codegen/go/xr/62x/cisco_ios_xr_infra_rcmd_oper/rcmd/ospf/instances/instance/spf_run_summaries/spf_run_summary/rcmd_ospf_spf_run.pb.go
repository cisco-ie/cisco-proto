/*
Copyright 2019 Cisco Systems

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: rcmd_ospf_spf_run.proto

package cisco_ios_xr_infra_rcmd_oper_rcmd_ospf_instances_instance_spf_run_summaries_spf_run_summary

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type RcmdOspfSpfRun_KEYS struct {
	InstanceName         string   `protobuf:"bytes,1,opt,name=instance_name,json=instanceName,proto3" json:"instance_name,omitempty"`
	SpfRunNumber         uint32   `protobuf:"varint,2,opt,name=spf_run_number,json=spfRunNumber,proto3" json:"spf_run_number,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RcmdOspfSpfRun_KEYS) Reset()         { *m = RcmdOspfSpfRun_KEYS{} }
func (m *RcmdOspfSpfRun_KEYS) String() string { return proto.CompactTextString(m) }
func (*RcmdOspfSpfRun_KEYS) ProtoMessage()    {}
func (*RcmdOspfSpfRun_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_c1cdfcb2cd5dc612, []int{0}
}

func (m *RcmdOspfSpfRun_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RcmdOspfSpfRun_KEYS.Unmarshal(m, b)
}
func (m *RcmdOspfSpfRun_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RcmdOspfSpfRun_KEYS.Marshal(b, m, deterministic)
}
func (m *RcmdOspfSpfRun_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RcmdOspfSpfRun_KEYS.Merge(m, src)
}
func (m *RcmdOspfSpfRun_KEYS) XXX_Size() int {
	return xxx_messageInfo_RcmdOspfSpfRun_KEYS.Size(m)
}
func (m *RcmdOspfSpfRun_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_RcmdOspfSpfRun_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_RcmdOspfSpfRun_KEYS proto.InternalMessageInfo

func (m *RcmdOspfSpfRun_KEYS) GetInstanceName() string {
	if m != nil {
		return m.InstanceName
	}
	return ""
}

func (m *RcmdOspfSpfRun_KEYS) GetSpfRunNumber() uint32 {
	if m != nil {
		return m.SpfRunNumber
	}
	return 0
}

type RcmdStat struct {
	Adds                 uint32   `protobuf:"varint,1,opt,name=adds,proto3" json:"adds,omitempty"`
	Deletes              uint32   `protobuf:"varint,2,opt,name=deletes,proto3" json:"deletes,omitempty"`
	Modifies             uint32   `protobuf:"varint,3,opt,name=modifies,proto3" json:"modifies,omitempty"`
	Reachables           uint32   `protobuf:"varint,4,opt,name=reachables,proto3" json:"reachables,omitempty"`
	Unreachables         uint32   `protobuf:"varint,5,opt,name=unreachables,proto3" json:"unreachables,omitempty"`
	Touches              uint32   `protobuf:"varint,6,opt,name=touches,proto3" json:"touches,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RcmdStat) Reset()         { *m = RcmdStat{} }
func (m *RcmdStat) String() string { return proto.CompactTextString(m) }
func (*RcmdStat) ProtoMessage()    {}
func (*RcmdStat) Descriptor() ([]byte, []int) {
	return fileDescriptor_c1cdfcb2cd5dc612, []int{1}
}

func (m *RcmdStat) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RcmdStat.Unmarshal(m, b)
}
func (m *RcmdStat) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RcmdStat.Marshal(b, m, deterministic)
}
func (m *RcmdStat) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RcmdStat.Merge(m, src)
}
func (m *RcmdStat) XXX_Size() int {
	return xxx_messageInfo_RcmdStat.Size(m)
}
func (m *RcmdStat) XXX_DiscardUnknown() {
	xxx_messageInfo_RcmdStat.DiscardUnknown(m)
}

var xxx_messageInfo_RcmdStat proto.InternalMessageInfo

func (m *RcmdStat) GetAdds() uint32 {
	if m != nil {
		return m.Adds
	}
	return 0
}

func (m *RcmdStat) GetDeletes() uint32 {
	if m != nil {
		return m.Deletes
	}
	return 0
}

func (m *RcmdStat) GetModifies() uint32 {
	if m != nil {
		return m.Modifies
	}
	return 0
}

func (m *RcmdStat) GetReachables() uint32 {
	if m != nil {
		return m.Reachables
	}
	return 0
}

func (m *RcmdStat) GetUnreachables() uint32 {
	if m != nil {
		return m.Unreachables
	}
	return 0
}

func (m *RcmdStat) GetTouches() uint32 {
	if m != nil {
		return m.Touches
	}
	return 0
}

type RcmdShowFrrStat struct {
	TotalRoutes              uint32   `protobuf:"varint,1,opt,name=total_routes,json=totalRoutes,proto3" json:"total_routes,omitempty"`
	FullyProtectedRoutes     uint32   `protobuf:"varint,2,opt,name=fully_protected_routes,json=fullyProtectedRoutes,proto3" json:"fully_protected_routes,omitempty"`
	PartiallyProtectedRoutes uint32   `protobuf:"varint,3,opt,name=partially_protected_routes,json=partiallyProtectedRoutes,proto3" json:"partially_protected_routes,omitempty"`
	Coverage                 string   `protobuf:"bytes,4,opt,name=coverage,proto3" json:"coverage,omitempty"`
	XXX_NoUnkeyedLiteral     struct{} `json:"-"`
	XXX_unrecognized         []byte   `json:"-"`
	XXX_sizecache            int32    `json:"-"`
}

func (m *RcmdShowFrrStat) Reset()         { *m = RcmdShowFrrStat{} }
func (m *RcmdShowFrrStat) String() string { return proto.CompactTextString(m) }
func (*RcmdShowFrrStat) ProtoMessage()    {}
func (*RcmdShowFrrStat) Descriptor() ([]byte, []int) {
	return fileDescriptor_c1cdfcb2cd5dc612, []int{2}
}

func (m *RcmdShowFrrStat) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RcmdShowFrrStat.Unmarshal(m, b)
}
func (m *RcmdShowFrrStat) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RcmdShowFrrStat.Marshal(b, m, deterministic)
}
func (m *RcmdShowFrrStat) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RcmdShowFrrStat.Merge(m, src)
}
func (m *RcmdShowFrrStat) XXX_Size() int {
	return xxx_messageInfo_RcmdShowFrrStat.Size(m)
}
func (m *RcmdShowFrrStat) XXX_DiscardUnknown() {
	xxx_messageInfo_RcmdShowFrrStat.DiscardUnknown(m)
}

var xxx_messageInfo_RcmdShowFrrStat proto.InternalMessageInfo

func (m *RcmdShowFrrStat) GetTotalRoutes() uint32 {
	if m != nil {
		return m.TotalRoutes
	}
	return 0
}

func (m *RcmdShowFrrStat) GetFullyProtectedRoutes() uint32 {
	if m != nil {
		return m.FullyProtectedRoutes
	}
	return 0
}

func (m *RcmdShowFrrStat) GetPartiallyProtectedRoutes() uint32 {
	if m != nil {
		return m.PartiallyProtectedRoutes
	}
	return 0
}

func (m *RcmdShowFrrStat) GetCoverage() string {
	if m != nil {
		return m.Coverage
	}
	return ""
}

type RcmdTimestamp struct {
	MinimumTime          string   `protobuf:"bytes,1,opt,name=minimum_time,json=minimumTime,proto3" json:"minimum_time,omitempty"`
	MaximumTime          string   `protobuf:"bytes,2,opt,name=maximum_time,json=maximumTime,proto3" json:"maximum_time,omitempty"`
	SlowestNodeName      string   `protobuf:"bytes,3,opt,name=slowest_node_name,json=slowestNodeName,proto3" json:"slowest_node_name,omitempty"`
	FastestNodeName      string   `protobuf:"bytes,4,opt,name=fastest_node_name,json=fastestNodeName,proto3" json:"fastest_node_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RcmdTimestamp) Reset()         { *m = RcmdTimestamp{} }
func (m *RcmdTimestamp) String() string { return proto.CompactTextString(m) }
func (*RcmdTimestamp) ProtoMessage()    {}
func (*RcmdTimestamp) Descriptor() ([]byte, []int) {
	return fileDescriptor_c1cdfcb2cd5dc612, []int{3}
}

func (m *RcmdTimestamp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RcmdTimestamp.Unmarshal(m, b)
}
func (m *RcmdTimestamp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RcmdTimestamp.Marshal(b, m, deterministic)
}
func (m *RcmdTimestamp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RcmdTimestamp.Merge(m, src)
}
func (m *RcmdTimestamp) XXX_Size() int {
	return xxx_messageInfo_RcmdTimestamp.Size(m)
}
func (m *RcmdTimestamp) XXX_DiscardUnknown() {
	xxx_messageInfo_RcmdTimestamp.DiscardUnknown(m)
}

var xxx_messageInfo_RcmdTimestamp proto.InternalMessageInfo

func (m *RcmdTimestamp) GetMinimumTime() string {
	if m != nil {
		return m.MinimumTime
	}
	return ""
}

func (m *RcmdTimestamp) GetMaximumTime() string {
	if m != nil {
		return m.MaximumTime
	}
	return ""
}

func (m *RcmdTimestamp) GetSlowestNodeName() string {
	if m != nil {
		return m.SlowestNodeName
	}
	return ""
}

func (m *RcmdTimestamp) GetFastestNodeName() string {
	if m != nil {
		return m.FastestNodeName
	}
	return ""
}

type RcmdPrioritySummary struct {
	Level                string             `protobuf:"bytes,1,opt,name=level,proto3" json:"level,omitempty"`
	ThresholdExceeded    bool               `protobuf:"varint,2,opt,name=threshold_exceeded,json=thresholdExceeded,proto3" json:"threshold_exceeded,omitempty"`
	RouteStatistics      *RcmdStat          `protobuf:"bytes,3,opt,name=route_statistics,json=routeStatistics,proto3" json:"route_statistics,omitempty"`
	FrrStatistic         []*RcmdShowFrrStat `protobuf:"bytes,4,rep,name=frr_statistic,json=frrStatistic,proto3" json:"frr_statistic,omitempty"`
	IpConvergenceTime    *RcmdTimestamp     `protobuf:"bytes,5,opt,name=ip_convergence_time,json=ipConvergenceTime,proto3" json:"ip_convergence_time,omitempty"`
	MplsConvergenceTime  *RcmdTimestamp     `protobuf:"bytes,6,opt,name=mpls_convergence_time,json=mplsConvergenceTime,proto3" json:"mpls_convergence_time,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *RcmdPrioritySummary) Reset()         { *m = RcmdPrioritySummary{} }
func (m *RcmdPrioritySummary) String() string { return proto.CompactTextString(m) }
func (*RcmdPrioritySummary) ProtoMessage()    {}
func (*RcmdPrioritySummary) Descriptor() ([]byte, []int) {
	return fileDescriptor_c1cdfcb2cd5dc612, []int{4}
}

func (m *RcmdPrioritySummary) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RcmdPrioritySummary.Unmarshal(m, b)
}
func (m *RcmdPrioritySummary) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RcmdPrioritySummary.Marshal(b, m, deterministic)
}
func (m *RcmdPrioritySummary) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RcmdPrioritySummary.Merge(m, src)
}
func (m *RcmdPrioritySummary) XXX_Size() int {
	return xxx_messageInfo_RcmdPrioritySummary.Size(m)
}
func (m *RcmdPrioritySummary) XXX_DiscardUnknown() {
	xxx_messageInfo_RcmdPrioritySummary.DiscardUnknown(m)
}

var xxx_messageInfo_RcmdPrioritySummary proto.InternalMessageInfo

func (m *RcmdPrioritySummary) GetLevel() string {
	if m != nil {
		return m.Level
	}
	return ""
}

func (m *RcmdPrioritySummary) GetThresholdExceeded() bool {
	if m != nil {
		return m.ThresholdExceeded
	}
	return false
}

func (m *RcmdPrioritySummary) GetRouteStatistics() *RcmdStat {
	if m != nil {
		return m.RouteStatistics
	}
	return nil
}

func (m *RcmdPrioritySummary) GetFrrStatistic() []*RcmdShowFrrStat {
	if m != nil {
		return m.FrrStatistic
	}
	return nil
}

func (m *RcmdPrioritySummary) GetIpConvergenceTime() *RcmdTimestamp {
	if m != nil {
		return m.IpConvergenceTime
	}
	return nil
}

func (m *RcmdPrioritySummary) GetMplsConvergenceTime() *RcmdTimestamp {
	if m != nil {
		return m.MplsConvergenceTime
	}
	return nil
}

type RcmdOspfSpfRunSummary struct {
	State                            string                 `protobuf:"bytes,1,opt,name=state,proto3" json:"state,omitempty"`
	IsDataComplete                   bool                   `protobuf:"varint,2,opt,name=is_data_complete,json=isDataComplete,proto3" json:"is_data_complete,omitempty"`
	ThresholdExceeded                bool                   `protobuf:"varint,3,opt,name=threshold_exceeded,json=thresholdExceeded,proto3" json:"threshold_exceeded,omitempty"`
	TriggerTime                      string                 `protobuf:"bytes,4,opt,name=trigger_time,json=triggerTime,proto3" json:"trigger_time,omitempty"`
	StartTime                        string                 `protobuf:"bytes,5,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	Duration                         string                 `protobuf:"bytes,6,opt,name=duration,proto3" json:"duration,omitempty"`
	TotalDijkstraRuns                uint32                 `protobuf:"varint,7,opt,name=total_dijkstra_runs,json=totalDijkstraRuns,proto3" json:"total_dijkstra_runs,omitempty"`
	TotalInterAreaAndExternalBatches uint32                 `protobuf:"varint,8,opt,name=total_inter_area_and_external_batches,json=totalInterAreaAndExternalBatches,proto3" json:"total_inter_area_and_external_batches,omitempty"`
	TotalType12LsaChanges            uint32                 `protobuf:"varint,9,opt,name=total_type12lsa_changes,json=totalType12lsaChanges,proto3" json:"total_type12lsa_changes,omitempty"`
	TotalType357LsaChanges           uint32                 `protobuf:"varint,10,opt,name=total_type357lsa_changes,json=totalType357lsaChanges,proto3" json:"total_type357lsa_changes,omitempty"`
	PrioritySummary                  []*RcmdPrioritySummary `protobuf:"bytes,11,rep,name=priority_summary,json=prioritySummary,proto3" json:"priority_summary,omitempty"`
	XXX_NoUnkeyedLiteral             struct{}               `json:"-"`
	XXX_unrecognized                 []byte                 `json:"-"`
	XXX_sizecache                    int32                  `json:"-"`
}

func (m *RcmdOspfSpfRunSummary) Reset()         { *m = RcmdOspfSpfRunSummary{} }
func (m *RcmdOspfSpfRunSummary) String() string { return proto.CompactTextString(m) }
func (*RcmdOspfSpfRunSummary) ProtoMessage()    {}
func (*RcmdOspfSpfRunSummary) Descriptor() ([]byte, []int) {
	return fileDescriptor_c1cdfcb2cd5dc612, []int{5}
}

func (m *RcmdOspfSpfRunSummary) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RcmdOspfSpfRunSummary.Unmarshal(m, b)
}
func (m *RcmdOspfSpfRunSummary) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RcmdOspfSpfRunSummary.Marshal(b, m, deterministic)
}
func (m *RcmdOspfSpfRunSummary) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RcmdOspfSpfRunSummary.Merge(m, src)
}
func (m *RcmdOspfSpfRunSummary) XXX_Size() int {
	return xxx_messageInfo_RcmdOspfSpfRunSummary.Size(m)
}
func (m *RcmdOspfSpfRunSummary) XXX_DiscardUnknown() {
	xxx_messageInfo_RcmdOspfSpfRunSummary.DiscardUnknown(m)
}

var xxx_messageInfo_RcmdOspfSpfRunSummary proto.InternalMessageInfo

func (m *RcmdOspfSpfRunSummary) GetState() string {
	if m != nil {
		return m.State
	}
	return ""
}

func (m *RcmdOspfSpfRunSummary) GetIsDataComplete() bool {
	if m != nil {
		return m.IsDataComplete
	}
	return false
}

func (m *RcmdOspfSpfRunSummary) GetThresholdExceeded() bool {
	if m != nil {
		return m.ThresholdExceeded
	}
	return false
}

func (m *RcmdOspfSpfRunSummary) GetTriggerTime() string {
	if m != nil {
		return m.TriggerTime
	}
	return ""
}

func (m *RcmdOspfSpfRunSummary) GetStartTime() string {
	if m != nil {
		return m.StartTime
	}
	return ""
}

func (m *RcmdOspfSpfRunSummary) GetDuration() string {
	if m != nil {
		return m.Duration
	}
	return ""
}

func (m *RcmdOspfSpfRunSummary) GetTotalDijkstraRuns() uint32 {
	if m != nil {
		return m.TotalDijkstraRuns
	}
	return 0
}

func (m *RcmdOspfSpfRunSummary) GetTotalInterAreaAndExternalBatches() uint32 {
	if m != nil {
		return m.TotalInterAreaAndExternalBatches
	}
	return 0
}

func (m *RcmdOspfSpfRunSummary) GetTotalType12LsaChanges() uint32 {
	if m != nil {
		return m.TotalType12LsaChanges
	}
	return 0
}

func (m *RcmdOspfSpfRunSummary) GetTotalType357LsaChanges() uint32 {
	if m != nil {
		return m.TotalType357LsaChanges
	}
	return 0
}

func (m *RcmdOspfSpfRunSummary) GetPrioritySummary() []*RcmdPrioritySummary {
	if m != nil {
		return m.PrioritySummary
	}
	return nil
}

type RcmdLsaInfo struct {
	LsaId                string   `protobuf:"bytes,1,opt,name=lsa_id,json=lsaId,proto3" json:"lsa_id,omitempty"`
	SequenceNumber       string   `protobuf:"bytes,2,opt,name=sequence_number,json=sequenceNumber,proto3" json:"sequence_number,omitempty"`
	LsaType              string   `protobuf:"bytes,3,opt,name=lsa_type,json=lsaType,proto3" json:"lsa_type,omitempty"`
	OriginRouterId       string   `protobuf:"bytes,4,opt,name=origin_router_id,json=originRouterId,proto3" json:"origin_router_id,omitempty"`
	ChangeType           string   `protobuf:"bytes,5,opt,name=change_type,json=changeType,proto3" json:"change_type,omitempty"`
	ReceptionTime        string   `protobuf:"bytes,6,opt,name=reception_time,json=receptionTime,proto3" json:"reception_time,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RcmdLsaInfo) Reset()         { *m = RcmdLsaInfo{} }
func (m *RcmdLsaInfo) String() string { return proto.CompactTextString(m) }
func (*RcmdLsaInfo) ProtoMessage()    {}
func (*RcmdLsaInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_c1cdfcb2cd5dc612, []int{6}
}

func (m *RcmdLsaInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RcmdLsaInfo.Unmarshal(m, b)
}
func (m *RcmdLsaInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RcmdLsaInfo.Marshal(b, m, deterministic)
}
func (m *RcmdLsaInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RcmdLsaInfo.Merge(m, src)
}
func (m *RcmdLsaInfo) XXX_Size() int {
	return xxx_messageInfo_RcmdLsaInfo.Size(m)
}
func (m *RcmdLsaInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_RcmdLsaInfo.DiscardUnknown(m)
}

var xxx_messageInfo_RcmdLsaInfo proto.InternalMessageInfo

func (m *RcmdLsaInfo) GetLsaId() string {
	if m != nil {
		return m.LsaId
	}
	return ""
}

func (m *RcmdLsaInfo) GetSequenceNumber() string {
	if m != nil {
		return m.SequenceNumber
	}
	return ""
}

func (m *RcmdLsaInfo) GetLsaType() string {
	if m != nil {
		return m.LsaType
	}
	return ""
}

func (m *RcmdLsaInfo) GetOriginRouterId() string {
	if m != nil {
		return m.OriginRouterId
	}
	return ""
}

func (m *RcmdLsaInfo) GetChangeType() string {
	if m != nil {
		return m.ChangeType
	}
	return ""
}

func (m *RcmdLsaInfo) GetReceptionTime() string {
	if m != nil {
		return m.ReceptionTime
	}
	return ""
}

type RcmdTime struct {
	StartTime            string   `protobuf:"bytes,1,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime              string   `protobuf:"bytes,2,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	Duration             string   `protobuf:"bytes,3,opt,name=duration,proto3" json:"duration,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RcmdTime) Reset()         { *m = RcmdTime{} }
func (m *RcmdTime) String() string { return proto.CompactTextString(m) }
func (*RcmdTime) ProtoMessage()    {}
func (*RcmdTime) Descriptor() ([]byte, []int) {
	return fileDescriptor_c1cdfcb2cd5dc612, []int{7}
}

func (m *RcmdTime) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RcmdTime.Unmarshal(m, b)
}
func (m *RcmdTime) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RcmdTime.Marshal(b, m, deterministic)
}
func (m *RcmdTime) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RcmdTime.Merge(m, src)
}
func (m *RcmdTime) XXX_Size() int {
	return xxx_messageInfo_RcmdTime.Size(m)
}
func (m *RcmdTime) XXX_DiscardUnknown() {
	xxx_messageInfo_RcmdTime.DiscardUnknown(m)
}

var xxx_messageInfo_RcmdTime proto.InternalMessageInfo

func (m *RcmdTime) GetStartTime() string {
	if m != nil {
		return m.StartTime
	}
	return ""
}

func (m *RcmdTime) GetEndTime() string {
	if m != nil {
		return m.EndTime
	}
	return ""
}

func (m *RcmdTime) GetDuration() string {
	if m != nil {
		return m.Duration
	}
	return ""
}

type RcmdLcInfo struct {
	NodeName             string    `protobuf:"bytes,1,opt,name=node_name,json=nodeName,proto3" json:"node_name,omitempty"`
	Speed                string    `protobuf:"bytes,2,opt,name=speed,proto3" json:"speed,omitempty"`
	FibComplete          *RcmdTime `protobuf:"bytes,3,opt,name=fib_complete,json=fibComplete,proto3" json:"fib_complete,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *RcmdLcInfo) Reset()         { *m = RcmdLcInfo{} }
func (m *RcmdLcInfo) String() string { return proto.CompactTextString(m) }
func (*RcmdLcInfo) ProtoMessage()    {}
func (*RcmdLcInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_c1cdfcb2cd5dc612, []int{8}
}

func (m *RcmdLcInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RcmdLcInfo.Unmarshal(m, b)
}
func (m *RcmdLcInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RcmdLcInfo.Marshal(b, m, deterministic)
}
func (m *RcmdLcInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RcmdLcInfo.Merge(m, src)
}
func (m *RcmdLcInfo) XXX_Size() int {
	return xxx_messageInfo_RcmdLcInfo.Size(m)
}
func (m *RcmdLcInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_RcmdLcInfo.DiscardUnknown(m)
}

var xxx_messageInfo_RcmdLcInfo proto.InternalMessageInfo

func (m *RcmdLcInfo) GetNodeName() string {
	if m != nil {
		return m.NodeName
	}
	return ""
}

func (m *RcmdLcInfo) GetSpeed() string {
	if m != nil {
		return m.Speed
	}
	return ""
}

func (m *RcmdLcInfo) GetFibComplete() *RcmdTime {
	if m != nil {
		return m.FibComplete
	}
	return nil
}

type RcmdTimeline struct {
	RouteOrigin          *RcmdTime     `protobuf:"bytes,1,opt,name=route_origin,json=routeOrigin,proto3" json:"route_origin,omitempty"`
	RiBv4Enter           *RcmdTime     `protobuf:"bytes,2,opt,name=ri_bv4_enter,json=riBv4Enter,proto3" json:"ri_bv4_enter,omitempty"`
	RiBv4Exit            *RcmdTime     `protobuf:"bytes,3,opt,name=ri_bv4_exit,json=riBv4Exit,proto3" json:"ri_bv4_exit,omitempty"`
	RiBv4Redistribute    *RcmdTime     `protobuf:"bytes,4,opt,name=ri_bv4_redistribute,json=riBv4Redistribute,proto3" json:"ri_bv4_redistribute,omitempty"`
	LdpEnter             *RcmdTime     `protobuf:"bytes,5,opt,name=ldp_enter,json=ldpEnter,proto3" json:"ldp_enter,omitempty"`
	LdpExit              *RcmdTime     `protobuf:"bytes,6,opt,name=ldp_exit,json=ldpExit,proto3" json:"ldp_exit,omitempty"`
	LsdEnter             *RcmdTime     `protobuf:"bytes,7,opt,name=lsd_enter,json=lsdEnter,proto3" json:"lsd_enter,omitempty"`
	LsdExit              *RcmdTime     `protobuf:"bytes,8,opt,name=lsd_exit,json=lsdExit,proto3" json:"lsd_exit,omitempty"`
	LcIp                 []*RcmdLcInfo `protobuf:"bytes,9,rep,name=lc_ip,json=lcIp,proto3" json:"lc_ip,omitempty"`
	LcMpls               []*RcmdLcInfo `protobuf:"bytes,10,rep,name=lc_mpls,json=lcMpls,proto3" json:"lc_mpls,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *RcmdTimeline) Reset()         { *m = RcmdTimeline{} }
func (m *RcmdTimeline) String() string { return proto.CompactTextString(m) }
func (*RcmdTimeline) ProtoMessage()    {}
func (*RcmdTimeline) Descriptor() ([]byte, []int) {
	return fileDescriptor_c1cdfcb2cd5dc612, []int{9}
}

func (m *RcmdTimeline) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RcmdTimeline.Unmarshal(m, b)
}
func (m *RcmdTimeline) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RcmdTimeline.Marshal(b, m, deterministic)
}
func (m *RcmdTimeline) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RcmdTimeline.Merge(m, src)
}
func (m *RcmdTimeline) XXX_Size() int {
	return xxx_messageInfo_RcmdTimeline.Size(m)
}
func (m *RcmdTimeline) XXX_DiscardUnknown() {
	xxx_messageInfo_RcmdTimeline.DiscardUnknown(m)
}

var xxx_messageInfo_RcmdTimeline proto.InternalMessageInfo

func (m *RcmdTimeline) GetRouteOrigin() *RcmdTime {
	if m != nil {
		return m.RouteOrigin
	}
	return nil
}

func (m *RcmdTimeline) GetRiBv4Enter() *RcmdTime {
	if m != nil {
		return m.RiBv4Enter
	}
	return nil
}

func (m *RcmdTimeline) GetRiBv4Exit() *RcmdTime {
	if m != nil {
		return m.RiBv4Exit
	}
	return nil
}

func (m *RcmdTimeline) GetRiBv4Redistribute() *RcmdTime {
	if m != nil {
		return m.RiBv4Redistribute
	}
	return nil
}

func (m *RcmdTimeline) GetLdpEnter() *RcmdTime {
	if m != nil {
		return m.LdpEnter
	}
	return nil
}

func (m *RcmdTimeline) GetLdpExit() *RcmdTime {
	if m != nil {
		return m.LdpExit
	}
	return nil
}

func (m *RcmdTimeline) GetLsdEnter() *RcmdTime {
	if m != nil {
		return m.LsdEnter
	}
	return nil
}

func (m *RcmdTimeline) GetLsdExit() *RcmdTime {
	if m != nil {
		return m.LsdExit
	}
	return nil
}

func (m *RcmdTimeline) GetLcIp() []*RcmdLcInfo {
	if m != nil {
		return m.LcIp
	}
	return nil
}

func (m *RcmdTimeline) GetLcMpls() []*RcmdLcInfo {
	if m != nil {
		return m.LcMpls
	}
	return nil
}

type RcmdNetwork struct {
	Address              string   `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	NetMask              uint32   `protobuf:"varint,2,opt,name=net_mask,json=netMask,proto3" json:"net_mask,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RcmdNetwork) Reset()         { *m = RcmdNetwork{} }
func (m *RcmdNetwork) String() string { return proto.CompactTextString(m) }
func (*RcmdNetwork) ProtoMessage()    {}
func (*RcmdNetwork) Descriptor() ([]byte, []int) {
	return fileDescriptor_c1cdfcb2cd5dc612, []int{10}
}

func (m *RcmdNetwork) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RcmdNetwork.Unmarshal(m, b)
}
func (m *RcmdNetwork) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RcmdNetwork.Marshal(b, m, deterministic)
}
func (m *RcmdNetwork) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RcmdNetwork.Merge(m, src)
}
func (m *RcmdNetwork) XXX_Size() int {
	return xxx_messageInfo_RcmdNetwork.Size(m)
}
func (m *RcmdNetwork) XXX_DiscardUnknown() {
	xxx_messageInfo_RcmdNetwork.DiscardUnknown(m)
}

var xxx_messageInfo_RcmdNetwork proto.InternalMessageInfo

func (m *RcmdNetwork) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *RcmdNetwork) GetNetMask() uint32 {
	if m != nil {
		return m.NetMask
	}
	return 0
}

type RcmdPriority struct {
	PrioritySummary      *RcmdPrioritySummary `protobuf:"bytes,1,opt,name=priority_summary,json=prioritySummary,proto3" json:"priority_summary,omitempty"`
	ConvergenceTimeline  []*RcmdTimeline      `protobuf:"bytes,2,rep,name=convergence_timeline,json=convergenceTimeline,proto3" json:"convergence_timeline,omitempty"`
	LeafNetworksAdded    []*RcmdNetwork       `protobuf:"bytes,3,rep,name=leaf_networks_added,json=leafNetworksAdded,proto3" json:"leaf_networks_added,omitempty"`
	LeafNetworksDeleted  []*RcmdNetwork       `protobuf:"bytes,4,rep,name=leaf_networks_deleted,json=leafNetworksDeleted,proto3" json:"leaf_networks_deleted,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *RcmdPriority) Reset()         { *m = RcmdPriority{} }
func (m *RcmdPriority) String() string { return proto.CompactTextString(m) }
func (*RcmdPriority) ProtoMessage()    {}
func (*RcmdPriority) Descriptor() ([]byte, []int) {
	return fileDescriptor_c1cdfcb2cd5dc612, []int{11}
}

func (m *RcmdPriority) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RcmdPriority.Unmarshal(m, b)
}
func (m *RcmdPriority) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RcmdPriority.Marshal(b, m, deterministic)
}
func (m *RcmdPriority) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RcmdPriority.Merge(m, src)
}
func (m *RcmdPriority) XXX_Size() int {
	return xxx_messageInfo_RcmdPriority.Size(m)
}
func (m *RcmdPriority) XXX_DiscardUnknown() {
	xxx_messageInfo_RcmdPriority.DiscardUnknown(m)
}

var xxx_messageInfo_RcmdPriority proto.InternalMessageInfo

func (m *RcmdPriority) GetPrioritySummary() *RcmdPrioritySummary {
	if m != nil {
		return m.PrioritySummary
	}
	return nil
}

func (m *RcmdPriority) GetConvergenceTimeline() []*RcmdTimeline {
	if m != nil {
		return m.ConvergenceTimeline
	}
	return nil
}

func (m *RcmdPriority) GetLeafNetworksAdded() []*RcmdNetwork {
	if m != nil {
		return m.LeafNetworksAdded
	}
	return nil
}

func (m *RcmdPriority) GetLeafNetworksDeleted() []*RcmdNetwork {
	if m != nil {
		return m.LeafNetworksDeleted
	}
	return nil
}

type RcmdOspfSptInfo struct {
	DijkstraRunNumber    uint32          `protobuf:"varint,1,opt,name=dijkstra_run_number,json=dijkstraRunNumber,proto3" json:"dijkstra_run_number,omitempty"`
	AreaId               string          `protobuf:"bytes,2,opt,name=area_id,json=areaId,proto3" json:"area_id,omitempty"`
	ThresholdExceeded    bool            `protobuf:"varint,3,opt,name=threshold_exceeded,json=thresholdExceeded,proto3" json:"threshold_exceeded,omitempty"`
	TriggerTime          string          `protobuf:"bytes,4,opt,name=trigger_time,json=triggerTime,proto3" json:"trigger_time,omitempty"`
	StartTime            string          `protobuf:"bytes,5,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	WaitTime             uint32          `protobuf:"varint,6,opt,name=wait_time,json=waitTime,proto3" json:"wait_time,omitempty"`
	Duration             string          `protobuf:"bytes,7,opt,name=duration,proto3" json:"duration,omitempty"`
	TriggerLsa           []*RcmdLsaInfo  `protobuf:"bytes,8,rep,name=trigger_lsa,json=triggerLsa,proto3" json:"trigger_lsa,omitempty"`
	Priority             []*RcmdPriority `protobuf:"bytes,9,rep,name=priority,proto3" json:"priority,omitempty"`
	LsaProcessed         []*RcmdLsaInfo  `protobuf:"bytes,10,rep,name=lsa_processed,json=lsaProcessed,proto3" json:"lsa_processed,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *RcmdOspfSptInfo) Reset()         { *m = RcmdOspfSptInfo{} }
func (m *RcmdOspfSptInfo) String() string { return proto.CompactTextString(m) }
func (*RcmdOspfSptInfo) ProtoMessage()    {}
func (*RcmdOspfSptInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_c1cdfcb2cd5dc612, []int{12}
}

func (m *RcmdOspfSptInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RcmdOspfSptInfo.Unmarshal(m, b)
}
func (m *RcmdOspfSptInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RcmdOspfSptInfo.Marshal(b, m, deterministic)
}
func (m *RcmdOspfSptInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RcmdOspfSptInfo.Merge(m, src)
}
func (m *RcmdOspfSptInfo) XXX_Size() int {
	return xxx_messageInfo_RcmdOspfSptInfo.Size(m)
}
func (m *RcmdOspfSptInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_RcmdOspfSptInfo.DiscardUnknown(m)
}

var xxx_messageInfo_RcmdOspfSptInfo proto.InternalMessageInfo

func (m *RcmdOspfSptInfo) GetDijkstraRunNumber() uint32 {
	if m != nil {
		return m.DijkstraRunNumber
	}
	return 0
}

func (m *RcmdOspfSptInfo) GetAreaId() string {
	if m != nil {
		return m.AreaId
	}
	return ""
}

func (m *RcmdOspfSptInfo) GetThresholdExceeded() bool {
	if m != nil {
		return m.ThresholdExceeded
	}
	return false
}

func (m *RcmdOspfSptInfo) GetTriggerTime() string {
	if m != nil {
		return m.TriggerTime
	}
	return ""
}

func (m *RcmdOspfSptInfo) GetStartTime() string {
	if m != nil {
		return m.StartTime
	}
	return ""
}

func (m *RcmdOspfSptInfo) GetWaitTime() uint32 {
	if m != nil {
		return m.WaitTime
	}
	return 0
}

func (m *RcmdOspfSptInfo) GetDuration() string {
	if m != nil {
		return m.Duration
	}
	return ""
}

func (m *RcmdOspfSptInfo) GetTriggerLsa() []*RcmdLsaInfo {
	if m != nil {
		return m.TriggerLsa
	}
	return nil
}

func (m *RcmdOspfSptInfo) GetPriority() []*RcmdPriority {
	if m != nil {
		return m.Priority
	}
	return nil
}

func (m *RcmdOspfSptInfo) GetLsaProcessed() []*RcmdLsaInfo {
	if m != nil {
		return m.LsaProcessed
	}
	return nil
}

type RcmdIaextPrioritySummary struct {
	Level                string         `protobuf:"bytes,1,opt,name=level,proto3" json:"level,omitempty"`
	ThresholdExceeded    bool           `protobuf:"varint,2,opt,name=threshold_exceeded,json=thresholdExceeded,proto3" json:"threshold_exceeded,omitempty"`
	RouteStatistics      *RcmdStat      `protobuf:"bytes,3,opt,name=route_statistics,json=routeStatistics,proto3" json:"route_statistics,omitempty"`
	Type3LsAs            uint32         `protobuf:"varint,4,opt,name=type3ls_as,json=type3lsAs,proto3" json:"type3ls_as,omitempty"`
	Type4LsAs            uint32         `protobuf:"varint,5,opt,name=type4ls_as,json=type4lsAs,proto3" json:"type4ls_as,omitempty"`
	Type57LsAs           uint32         `protobuf:"varint,6,opt,name=type57ls_as,json=type57lsAs,proto3" json:"type57ls_as,omitempty"`
	IpConvergenceTime    *RcmdTimestamp `protobuf:"bytes,7,opt,name=ip_convergence_time,json=ipConvergenceTime,proto3" json:"ip_convergence_time,omitempty"`
	MplsConvergenceTime  *RcmdTimestamp `protobuf:"bytes,8,opt,name=mpls_convergence_time,json=mplsConvergenceTime,proto3" json:"mpls_convergence_time,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *RcmdIaextPrioritySummary) Reset()         { *m = RcmdIaextPrioritySummary{} }
func (m *RcmdIaextPrioritySummary) String() string { return proto.CompactTextString(m) }
func (*RcmdIaextPrioritySummary) ProtoMessage()    {}
func (*RcmdIaextPrioritySummary) Descriptor() ([]byte, []int) {
	return fileDescriptor_c1cdfcb2cd5dc612, []int{13}
}

func (m *RcmdIaextPrioritySummary) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RcmdIaextPrioritySummary.Unmarshal(m, b)
}
func (m *RcmdIaextPrioritySummary) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RcmdIaextPrioritySummary.Marshal(b, m, deterministic)
}
func (m *RcmdIaextPrioritySummary) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RcmdIaextPrioritySummary.Merge(m, src)
}
func (m *RcmdIaextPrioritySummary) XXX_Size() int {
	return xxx_messageInfo_RcmdIaextPrioritySummary.Size(m)
}
func (m *RcmdIaextPrioritySummary) XXX_DiscardUnknown() {
	xxx_messageInfo_RcmdIaextPrioritySummary.DiscardUnknown(m)
}

var xxx_messageInfo_RcmdIaextPrioritySummary proto.InternalMessageInfo

func (m *RcmdIaextPrioritySummary) GetLevel() string {
	if m != nil {
		return m.Level
	}
	return ""
}

func (m *RcmdIaextPrioritySummary) GetThresholdExceeded() bool {
	if m != nil {
		return m.ThresholdExceeded
	}
	return false
}

func (m *RcmdIaextPrioritySummary) GetRouteStatistics() *RcmdStat {
	if m != nil {
		return m.RouteStatistics
	}
	return nil
}

func (m *RcmdIaextPrioritySummary) GetType3LsAs() uint32 {
	if m != nil {
		return m.Type3LsAs
	}
	return 0
}

func (m *RcmdIaextPrioritySummary) GetType4LsAs() uint32 {
	if m != nil {
		return m.Type4LsAs
	}
	return 0
}

func (m *RcmdIaextPrioritySummary) GetType57LsAs() uint32 {
	if m != nil {
		return m.Type57LsAs
	}
	return 0
}

func (m *RcmdIaextPrioritySummary) GetIpConvergenceTime() *RcmdTimestamp {
	if m != nil {
		return m.IpConvergenceTime
	}
	return nil
}

func (m *RcmdIaextPrioritySummary) GetMplsConvergenceTime() *RcmdTimestamp {
	if m != nil {
		return m.MplsConvergenceTime
	}
	return nil
}

type RcmdIaextPriority struct {
	PrioritySummary      *RcmdIaextPrioritySummary `protobuf:"bytes,1,opt,name=priority_summary,json=prioritySummary,proto3" json:"priority_summary,omitempty"`
	ConvergenceTimeline  []*RcmdTimeline           `protobuf:"bytes,2,rep,name=convergence_timeline,json=convergenceTimeline,proto3" json:"convergence_timeline,omitempty"`
	LeafNetworksAdded    []*RcmdNetwork            `protobuf:"bytes,3,rep,name=leaf_networks_added,json=leafNetworksAdded,proto3" json:"leaf_networks_added,omitempty"`
	LeafNetworksDeleted  []*RcmdNetwork            `protobuf:"bytes,4,rep,name=leaf_networks_deleted,json=leafNetworksDeleted,proto3" json:"leaf_networks_deleted,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *RcmdIaextPriority) Reset()         { *m = RcmdIaextPriority{} }
func (m *RcmdIaextPriority) String() string { return proto.CompactTextString(m) }
func (*RcmdIaextPriority) ProtoMessage()    {}
func (*RcmdIaextPriority) Descriptor() ([]byte, []int) {
	return fileDescriptor_c1cdfcb2cd5dc612, []int{14}
}

func (m *RcmdIaextPriority) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RcmdIaextPriority.Unmarshal(m, b)
}
func (m *RcmdIaextPriority) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RcmdIaextPriority.Marshal(b, m, deterministic)
}
func (m *RcmdIaextPriority) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RcmdIaextPriority.Merge(m, src)
}
func (m *RcmdIaextPriority) XXX_Size() int {
	return xxx_messageInfo_RcmdIaextPriority.Size(m)
}
func (m *RcmdIaextPriority) XXX_DiscardUnknown() {
	xxx_messageInfo_RcmdIaextPriority.DiscardUnknown(m)
}

var xxx_messageInfo_RcmdIaextPriority proto.InternalMessageInfo

func (m *RcmdIaextPriority) GetPrioritySummary() *RcmdIaextPrioritySummary {
	if m != nil {
		return m.PrioritySummary
	}
	return nil
}

func (m *RcmdIaextPriority) GetConvergenceTimeline() []*RcmdTimeline {
	if m != nil {
		return m.ConvergenceTimeline
	}
	return nil
}

func (m *RcmdIaextPriority) GetLeafNetworksAdded() []*RcmdNetwork {
	if m != nil {
		return m.LeafNetworksAdded
	}
	return nil
}

func (m *RcmdIaextPriority) GetLeafNetworksDeleted() []*RcmdNetwork {
	if m != nil {
		return m.LeafNetworksDeleted
	}
	return nil
}

type RcmdOspfIaextInfo struct {
	Priority             []*RcmdIaextPriority `protobuf:"bytes,1,rep,name=priority,proto3" json:"priority,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *RcmdOspfIaextInfo) Reset()         { *m = RcmdOspfIaextInfo{} }
func (m *RcmdOspfIaextInfo) String() string { return proto.CompactTextString(m) }
func (*RcmdOspfIaextInfo) ProtoMessage()    {}
func (*RcmdOspfIaextInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_c1cdfcb2cd5dc612, []int{15}
}

func (m *RcmdOspfIaextInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RcmdOspfIaextInfo.Unmarshal(m, b)
}
func (m *RcmdOspfIaextInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RcmdOspfIaextInfo.Marshal(b, m, deterministic)
}
func (m *RcmdOspfIaextInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RcmdOspfIaextInfo.Merge(m, src)
}
func (m *RcmdOspfIaextInfo) XXX_Size() int {
	return xxx_messageInfo_RcmdOspfIaextInfo.Size(m)
}
func (m *RcmdOspfIaextInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_RcmdOspfIaextInfo.DiscardUnknown(m)
}

var xxx_messageInfo_RcmdOspfIaextInfo proto.InternalMessageInfo

func (m *RcmdOspfIaextInfo) GetPriority() []*RcmdIaextPriority {
	if m != nil {
		return m.Priority
	}
	return nil
}

type RcmdOspfSpfRun struct {
	SpfSummary           *RcmdOspfSpfRunSummary `protobuf:"bytes,50,opt,name=spf_summary,json=spfSummary,proto3" json:"spf_summary,omitempty"`
	DijkstraRun          []*RcmdOspfSptInfo     `protobuf:"bytes,51,rep,name=dijkstra_run,json=dijkstraRun,proto3" json:"dijkstra_run,omitempty"`
	InterAreaAndExternal []*RcmdOspfIaextInfo   `protobuf:"bytes,52,rep,name=inter_area_and_external,json=interAreaAndExternal,proto3" json:"inter_area_and_external,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *RcmdOspfSpfRun) Reset()         { *m = RcmdOspfSpfRun{} }
func (m *RcmdOspfSpfRun) String() string { return proto.CompactTextString(m) }
func (*RcmdOspfSpfRun) ProtoMessage()    {}
func (*RcmdOspfSpfRun) Descriptor() ([]byte, []int) {
	return fileDescriptor_c1cdfcb2cd5dc612, []int{16}
}

func (m *RcmdOspfSpfRun) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RcmdOspfSpfRun.Unmarshal(m, b)
}
func (m *RcmdOspfSpfRun) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RcmdOspfSpfRun.Marshal(b, m, deterministic)
}
func (m *RcmdOspfSpfRun) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RcmdOspfSpfRun.Merge(m, src)
}
func (m *RcmdOspfSpfRun) XXX_Size() int {
	return xxx_messageInfo_RcmdOspfSpfRun.Size(m)
}
func (m *RcmdOspfSpfRun) XXX_DiscardUnknown() {
	xxx_messageInfo_RcmdOspfSpfRun.DiscardUnknown(m)
}

var xxx_messageInfo_RcmdOspfSpfRun proto.InternalMessageInfo

func (m *RcmdOspfSpfRun) GetSpfSummary() *RcmdOspfSpfRunSummary {
	if m != nil {
		return m.SpfSummary
	}
	return nil
}

func (m *RcmdOspfSpfRun) GetDijkstraRun() []*RcmdOspfSptInfo {
	if m != nil {
		return m.DijkstraRun
	}
	return nil
}

func (m *RcmdOspfSpfRun) GetInterAreaAndExternal() []*RcmdOspfIaextInfo {
	if m != nil {
		return m.InterAreaAndExternal
	}
	return nil
}

func init() {
	proto.RegisterType((*RcmdOspfSpfRun_KEYS)(nil), "cisco_ios_xr_infra_rcmd_oper.rcmd.ospf.instances.instance.spf_run_summaries.spf_run_summary.rcmd_ospf_spf_run_KEYS")
	proto.RegisterType((*RcmdStat)(nil), "cisco_ios_xr_infra_rcmd_oper.rcmd.ospf.instances.instance.spf_run_summaries.spf_run_summary.rcmd_stat")
	proto.RegisterType((*RcmdShowFrrStat)(nil), "cisco_ios_xr_infra_rcmd_oper.rcmd.ospf.instances.instance.spf_run_summaries.spf_run_summary.rcmd_show_frr_stat")
	proto.RegisterType((*RcmdTimestamp)(nil), "cisco_ios_xr_infra_rcmd_oper.rcmd.ospf.instances.instance.spf_run_summaries.spf_run_summary.rcmd_timestamp")
	proto.RegisterType((*RcmdPrioritySummary)(nil), "cisco_ios_xr_infra_rcmd_oper.rcmd.ospf.instances.instance.spf_run_summaries.spf_run_summary.rcmd_priority_summary")
	proto.RegisterType((*RcmdOspfSpfRunSummary)(nil), "cisco_ios_xr_infra_rcmd_oper.rcmd.ospf.instances.instance.spf_run_summaries.spf_run_summary.rcmd_ospf_spf_run_summary")
	proto.RegisterType((*RcmdLsaInfo)(nil), "cisco_ios_xr_infra_rcmd_oper.rcmd.ospf.instances.instance.spf_run_summaries.spf_run_summary.rcmd_lsa_info")
	proto.RegisterType((*RcmdTime)(nil), "cisco_ios_xr_infra_rcmd_oper.rcmd.ospf.instances.instance.spf_run_summaries.spf_run_summary.rcmd_time")
	proto.RegisterType((*RcmdLcInfo)(nil), "cisco_ios_xr_infra_rcmd_oper.rcmd.ospf.instances.instance.spf_run_summaries.spf_run_summary.rcmd_lc_info")
	proto.RegisterType((*RcmdTimeline)(nil), "cisco_ios_xr_infra_rcmd_oper.rcmd.ospf.instances.instance.spf_run_summaries.spf_run_summary.rcmd_timeline")
	proto.RegisterType((*RcmdNetwork)(nil), "cisco_ios_xr_infra_rcmd_oper.rcmd.ospf.instances.instance.spf_run_summaries.spf_run_summary.rcmd_network")
	proto.RegisterType((*RcmdPriority)(nil), "cisco_ios_xr_infra_rcmd_oper.rcmd.ospf.instances.instance.spf_run_summaries.spf_run_summary.rcmd_priority")
	proto.RegisterType((*RcmdOspfSptInfo)(nil), "cisco_ios_xr_infra_rcmd_oper.rcmd.ospf.instances.instance.spf_run_summaries.spf_run_summary.rcmd_ospf_spt_info")
	proto.RegisterType((*RcmdIaextPrioritySummary)(nil), "cisco_ios_xr_infra_rcmd_oper.rcmd.ospf.instances.instance.spf_run_summaries.spf_run_summary.rcmd_iaext_priority_summary")
	proto.RegisterType((*RcmdIaextPriority)(nil), "cisco_ios_xr_infra_rcmd_oper.rcmd.ospf.instances.instance.spf_run_summaries.spf_run_summary.rcmd_iaext_priority")
	proto.RegisterType((*RcmdOspfIaextInfo)(nil), "cisco_ios_xr_infra_rcmd_oper.rcmd.ospf.instances.instance.spf_run_summaries.spf_run_summary.rcmd_ospf_iaext_info")
	proto.RegisterType((*RcmdOspfSpfRun)(nil), "cisco_ios_xr_infra_rcmd_oper.rcmd.ospf.instances.instance.spf_run_summaries.spf_run_summary.rcmd_ospf_spf_run")
}

func init() { proto.RegisterFile("rcmd_ospf_spf_run.proto", fileDescriptor_c1cdfcb2cd5dc612) }

var fileDescriptor_c1cdfcb2cd5dc612 = []byte{
	// 1649 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xec, 0x59, 0x4f, 0x6b, 0x5b, 0xc7,
	0x16, 0xe7, 0xc6, 0x96, 0x25, 0x1d, 0x49, 0x76, 0x34, 0xb2, 0xe3, 0x1b, 0x87, 0xbc, 0xf8, 0xe9,
	0xbd, 0xf0, 0x4c, 0xe0, 0x09, 0x9e, 0xe3, 0xf7, 0x67, 0xf1, 0x36, 0x8e, 0xe3, 0x85, 0x79, 0x2f,
	0x4e, 0xb8, 0xc9, 0xa6, 0x74, 0x71, 0x19, 0xdd, 0x19, 0xd9, 0x13, 0xdf, 0x7f, 0x99, 0x19, 0xf9,
	0xcf, 0xa6, 0xd0, 0x16, 0x4a, 0x4b, 0x0a, 0xa5, 0xa5, 0x6d, 0x28, 0xa5, 0x74, 0x51, 0x0a, 0x5d,
	0x95, 0x42, 0x3f, 0x44, 0x56, 0xfd, 0x06, 0xdd, 0xf4, 0x03, 0xf4, 0x13, 0x74, 0x53, 0xe6, 0xcc,
	0x5c, 0x49, 0x96, 0xed, 0xa5, 0x2f, 0x81, 0x74, 0x21, 0xb8, 0x73, 0xce, 0x99, 0x39, 0xbf, 0x39,
	0x73, 0xfe, 0xcd, 0x08, 0x96, 0x65, 0x94, 0xb0, 0x30, 0x53, 0xf9, 0x20, 0x34, 0x3f, 0x39, 0x4c,
	0x7b, 0xb9, 0xcc, 0x74, 0x46, 0xde, 0x8c, 0x84, 0x8a, 0xb2, 0x50, 0x64, 0x2a, 0x3c, 0x96, 0xa1,
	0x48, 0x07, 0x92, 0x86, 0x56, 0x36, 0xe7, 0xb2, 0x67, 0xbe, 0x7a, 0x66, 0x56, 0x4f, 0xa4, 0x4a,
	0xd3, 0x34, 0xe2, 0x6a, 0xf4, 0xd5, 0x73, 0x0b, 0x85, 0x6a, 0x98, 0x24, 0x54, 0x0a, 0xae, 0xa6,
	0x28, 0x27, 0xdd, 0x08, 0xae, 0x9d, 0xd1, 0x1b, 0xfe, 0x6f, 0xfb, 0x8d, 0xc7, 0xe4, 0x2f, 0xd0,
	0x2a, 0xd6, 0x09, 0x53, 0x9a, 0x70, 0xdf, 0x5b, 0xf5, 0xd6, 0xea, 0x41, 0xb3, 0x20, 0xee, 0xd2,
	0x84, 0x93, 0xbf, 0xc2, 0x7c, 0x31, 0x29, 0x1d, 0x26, 0x7d, 0x2e, 0xfd, 0x2b, 0xab, 0xde, 0x5a,
	0x2b, 0x68, 0xaa, 0x7c, 0x10, 0x0c, 0xd3, 0x5d, 0xa4, 0x75, 0x7f, 0xf4, 0xa0, 0x8e, 0x5a, 0x94,
	0xa6, 0x9a, 0x10, 0x98, 0xa5, 0x8c, 0x29, 0x5c, 0xaf, 0x15, 0xe0, 0x37, 0xf1, 0xa1, 0xca, 0x78,
	0xcc, 0x35, 0x57, 0x6e, 0x81, 0x62, 0x48, 0x56, 0xa0, 0x96, 0x64, 0x4c, 0x0c, 0x04, 0x57, 0xfe,
	0x0c, 0xb2, 0x46, 0x63, 0xf2, 0x27, 0x00, 0xc9, 0x69, 0xb4, 0x4f, 0xfb, 0x31, 0x57, 0xfe, 0x2c,
	0x72, 0x27, 0x28, 0xa4, 0x0b, 0xcd, 0x61, 0x3a, 0x21, 0x51, 0xb1, 0xd8, 0x26, 0x69, 0x46, 0xb3,
	0xce, 0x86, 0xd1, 0x3e, 0x57, 0xfe, 0x9c, 0xd5, 0xec, 0x86, 0xdd, 0x97, 0x1e, 0x10, 0x8b, 0x7a,
	0x3f, 0x3b, 0x0a, 0x07, 0x52, 0x5a, 0xf8, 0x7f, 0x86, 0xa6, 0xce, 0x34, 0x8d, 0x43, 0x99, 0x0d,
	0x0d, 0x5e, 0xbb, 0x8d, 0x06, 0xd2, 0x02, 0x24, 0x91, 0x0d, 0xb8, 0x36, 0x18, 0xc6, 0xf1, 0x49,
	0x68, 0x0e, 0x90, 0x47, 0x9a, 0xb3, 0x42, 0xd8, 0x6e, 0x6e, 0x11, 0xb9, 0x8f, 0x0a, 0xa6, 0x9b,
	0xf5, 0x5f, 0x58, 0xc9, 0xa9, 0xd4, 0x82, 0x9e, 0x3b, 0xd3, 0xee, 0xdd, 0x1f, 0x49, 0x4c, 0xcf,
	0x5e, 0x81, 0x5a, 0x94, 0x1d, 0x72, 0x49, 0xf7, 0x38, 0x5a, 0xa2, 0x1e, 0x8c, 0xc6, 0xdd, 0xef,
	0x3d, 0x98, 0xc7, 0x9d, 0x68, 0x91, 0x70, 0xa5, 0x69, 0x92, 0x9b, 0x5d, 0x24, 0x22, 0x15, 0xc9,
	0x30, 0x41, 0xa2, 0x3b, 0xdc, 0x86, 0xa3, 0x3d, 0x11, 0x09, 0x47, 0x11, 0x7a, 0x3c, 0x16, 0xb9,
	0xe2, 0x44, 0x2c, 0x0d, 0x45, 0xee, 0x40, 0x5b, 0xc5, 0xd9, 0x11, 0x57, 0x3a, 0x4c, 0x33, 0xe6,
	0xfc, 0x64, 0x06, 0xe5, 0x16, 0x1c, 0x63, 0x37, 0x63, 0xd6, 0x55, 0xee, 0x40, 0x7b, 0x40, 0x95,
	0x3e, 0x2d, 0x6b, 0x91, 0x2e, 0x38, 0x46, 0x21, 0xdb, 0x7d, 0x59, 0x81, 0x25, 0x04, 0x9c, 0x4b,
	0x91, 0x49, 0xa1, 0x4f, 0x0a, 0x7f, 0x25, 0x8b, 0x50, 0x89, 0xf9, 0x21, 0x8f, 0x1d, 0x60, 0x3b,
	0x20, 0x7f, 0x07, 0xa2, 0xf7, 0x25, 0x57, 0xfb, 0x59, 0xcc, 0x42, 0x7e, 0x1c, 0x71, 0xce, 0x38,
	0x43, 0xc0, 0xb5, 0xa0, 0x3d, 0xe2, 0x6c, 0x3b, 0x06, 0xf9, 0xd8, 0x83, 0xab, 0x68, 0x56, 0x3c,
	0x51, 0xa1, 0xb4, 0x88, 0xac, 0x81, 0x1b, 0xeb, 0x83, 0xde, 0x25, 0x46, 0x5b, 0x6f, 0x14, 0x04,
	0xc1, 0x02, 0xea, 0x7f, 0x3c, 0x52, 0x4f, 0x3e, 0xf5, 0xa0, 0x55, 0xf8, 0x18, 0x92, 0xfc, 0xd9,
	0xd5, 0x99, 0xb5, 0xc6, 0x7a, 0x56, 0x02, 0xa0, 0x49, 0xff, 0x0e, 0x9a, 0x03, 0x29, 0x47, 0xb8,
	0xc8, 0x97, 0x1e, 0x74, 0x44, 0x1e, 0x46, 0x59, 0x7a, 0xc8, 0xe5, 0x1e, 0x37, 0xc9, 0x00, 0x9d,
	0xa1, 0x82, 0xd6, 0x3a, 0xb8, 0x7c, 0x70, 0x23, 0x97, 0x0d, 0xda, 0x22, 0xdf, 0x1a, 0xc3, 0x40,
	0xff, 0xfb, 0xda, 0x83, 0xa5, 0x24, 0x8f, 0xd5, 0x59, 0x7c, 0x73, 0xe5, 0xe3, 0xeb, 0x18, 0x24,
	0x53, 0x08, 0xbb, 0xbf, 0xcd, 0xc2, 0xf5, 0xb3, 0x09, 0x76, 0xc2, 0x9b, 0x8d, 0xcd, 0x8b, 0xf0,
	0xb3, 0x03, 0xb2, 0x06, 0x57, 0x85, 0x0a, 0x19, 0xd5, 0x34, 0x8c, 0xb2, 0x24, 0x37, 0x79, 0xd0,
	0xf9, 0xf2, 0xbc, 0x50, 0xf7, 0xa9, 0xa6, 0x5b, 0x8e, 0x7a, 0x81, 0xdf, 0xcf, 0x5c, 0xe4, 0xf7,
	0x26, 0x75, 0x49, 0xb1, 0xb7, 0xc7, 0xa5, 0x35, 0x92, 0x8d, 0xbe, 0x86, 0xa3, 0xa1, 0x45, 0x6f,
	0x02, 0x28, 0x4d, 0xa5, 0x1e, 0x9f, 0x72, 0x3d, 0xa8, 0x23, 0x05, 0xd9, 0x2b, 0x50, 0x63, 0x43,
	0x49, 0xb5, 0xc8, 0x52, 0x34, 0x71, 0x3d, 0x18, 0x8d, 0x49, 0x0f, 0x3a, 0x36, 0x31, 0x32, 0xf1,
	0xf4, 0x40, 0x69, 0x63, 0xe9, 0x61, 0xaa, 0xfc, 0x2a, 0x26, 0xae, 0x36, 0xb2, 0xee, 0x3b, 0x4e,
	0x30, 0x4c, 0x15, 0x79, 0x08, 0xb7, 0xad, 0xbc, 0x48, 0x35, 0x97, 0x21, 0x95, 0x9c, 0x86, 0x34,
	0x35, 0xfb, 0xd0, 0x5c, 0xa6, 0x34, 0x0e, 0xfb, 0x54, 0x63, 0x5e, 0xae, 0xe1, 0x0a, 0xab, 0x28,
	0xbc, 0x63, 0x64, 0x37, 0x25, 0xa7, 0x9b, 0x29, 0xdb, 0x76, 0x82, 0xf7, 0xac, 0x1c, 0xf9, 0x17,
	0x2c, 0xdb, 0x05, 0xf5, 0x49, 0xce, 0xff, 0xb1, 0x1e, 0x2b, 0x1a, 0x46, 0xfb, 0x34, 0xdd, 0xe3,
	0xca, 0xaf, 0xe3, 0x12, 0x4b, 0xc8, 0x7e, 0x52, 0x70, 0xb7, 0x2c, 0x93, 0xfc, 0x07, 0xfc, 0xf1,
	0xbc, 0xbb, 0xff, 0xfc, 0xf7, 0xe4, 0x44, 0xc0, 0x89, 0xd7, 0x46, 0x13, 0x2d, 0xbb, 0x98, 0xf9,
	0x95, 0x07, 0x57, 0xa7, 0x53, 0x94, 0xdf, 0xc0, 0xb8, 0x95, 0x97, 0xef, 0x7a, 0xd3, 0x9a, 0x83,
	0x85, 0x82, 0xf2, 0xd8, 0x55, 0xf7, 0x9f, 0x3d, 0x68, 0xa1, 0xa8, 0xd9, 0x92, 0x48, 0x07, 0x19,
	0x59, 0x82, 0x39, 0xfc, 0x66, 0xa3, 0x04, 0xaa, 0xe8, 0x0e, 0x23, 0x7f, 0x83, 0x05, 0xc5, 0x9f,
	0x0d, 0x31, 0x7e, 0x26, 0x0a, 0x79, 0x3d, 0x98, 0x2f, 0xc8, 0xb6, 0x94, 0x93, 0xeb, 0x50, 0x33,
	0xf3, 0x8d, 0xa5, 0x5c, 0xa2, 0xaf, 0xc6, 0x8a, 0x1a, 0xcb, 0x18, 0xb7, 0xcd, 0xa4, 0xd8, 0x13,
	0xa9, 0x2d, 0x59, 0xd2, 0x28, 0xb1, 0x1e, 0x36, 0x6f, 0xe9, 0x58, 0xa9, 0xe4, 0x0e, 0x23, 0xb7,
	0xa0, 0x61, 0xed, 0x6b, 0xd7, 0xb1, 0x5e, 0x06, 0x96, 0x84, 0x4b, 0xdd, 0x86, 0x79, 0xc9, 0x23,
	0x9e, 0x1b, 0xbf, 0x1a, 0xc7, 0x73, 0x3d, 0x68, 0x8d, 0xa8, 0x18, 0x5c, 0xd4, 0xb5, 0x15, 0xfa,
	0xac, 0xe7, 0x7a, 0xd3, 0x9e, 0x7b, 0x1d, 0x6a, 0x3c, 0x65, 0x93, 0x95, 0xac, 0xca, 0x53, 0x76,
	0xc6, 0xa9, 0x67, 0x4e, 0x3b, 0x75, 0xf7, 0x27, 0x0f, 0x9a, 0xd6, 0x82, 0x91, 0x35, 0xe0, 0x0d,
	0xa8, 0x8f, 0xcb, 0x97, 0xd5, 0x52, 0x4b, 0x8b, 0x1a, 0x67, 0xe2, 0x39, 0xe7, 0xae, 0xf4, 0x98,
	0x78, 0x36, 0x03, 0xf2, 0x81, 0x07, 0xcd, 0x81, 0xe8, 0x8f, 0x83, 0xb9, 0xb4, 0x52, 0x63, 0x76,
	0x1b, 0x34, 0x06, 0xa2, 0x5f, 0x64, 0x8c, 0xee, 0x2f, 0xe0, 0x3c, 0xc2, 0xb0, 0x62, 0x91, 0x72,
	0x44, 0x67, 0x8b, 0xa1, 0x3d, 0x25, 0xdc, 0x54, 0x89, 0xe8, 0x50, 0xf7, 0x43, 0x54, 0x4d, 0xde,
	0x37, 0x58, 0x44, 0xd8, 0x3f, 0xdc, 0x08, 0xb9, 0x09, 0x74, 0xb4, 0x63, 0x79, 0x58, 0x40, 0x8a,
	0x7b, 0x87, 0x1b, 0xdb, 0x46, 0x33, 0x79, 0xcf, 0x83, 0x46, 0x01, 0xe5, 0x58, 0xe8, 0x92, 0xcf,
	0xac, 0x6e, 0x91, 0x1c, 0x0b, 0x4d, 0x3e, 0xf7, 0xa0, 0xe3, 0x80, 0x48, 0xce, 0x84, 0xd2, 0x52,
	0xf4, 0x87, 0xda, 0x26, 0xef, 0xf2, 0x00, 0xb5, 0x11, 0x50, 0x30, 0x01, 0x80, 0xbc, 0xeb, 0x41,
	0x3d, 0x66, 0xb9, 0x3b, 0xa9, 0x4a, 0xa9, 0x70, 0x6a, 0x31, 0xcb, 0xed, 0x39, 0xbd, 0xed, 0x41,
	0x0d, 0x51, 0x98, 0x43, 0x9a, 0x2b, 0x15, 0x44, 0xd5, 0x80, 0x30, 0x47, 0x84, 0x96, 0x50, 0xcc,
	0x59, 0xa2, 0x5a, 0xb2, 0x25, 0x14, 0x9b, 0xb0, 0x84, 0x41, 0x61, 0x2c, 0x51, 0x2b, 0xd9, 0x12,
	0x8a, 0xa1, 0x25, 0xde, 0x82, 0x8a, 0x49, 0x94, 0xb9, 0x5f, 0xc7, 0x22, 0x28, 0x2e, 0x5f, 0xbf,
	0xcb, 0xcb, 0xc1, 0x6c, 0x1c, 0xed, 0xe4, 0xe4, 0x1d, 0x0f, 0xaa, 0x71, 0x14, 0x9a, 0x4e, 0xcc,
	0x87, 0xb2, 0x21, 0xcc, 0xc5, 0xd1, 0x83, 0x3c, 0x56, 0xdd, 0x2d, 0x57, 0x32, 0x52, 0xae, 0x8f,
	0x32, 0x79, 0x60, 0xae, 0x98, 0x94, 0x31, 0xc9, 0x95, 0x72, 0x05, 0xa3, 0x18, 0x9a, 0xa2, 0x94,
	0x72, 0x1d, 0x26, 0x54, 0x1d, 0x14, 0xf7, 0xde, 0x94, 0xeb, 0x07, 0x54, 0x1d, 0x74, 0x9f, 0x57,
	0x5c, 0xa2, 0x2e, 0x6a, 0xfa, 0xf9, 0xcd, 0x86, 0x4d, 0xd6, 0xaf, 0x42, 0xb3, 0x61, 0xf0, 0x2d,
	0x4e, 0xf7, 0xe1, 0xa6, 0xc2, 0xf8, 0x57, 0xf0, 0x20, 0x9e, 0x96, 0xe3, 0x8b, 0x46, 0x63, 0xd0,
	0x89, 0x4e, 0xb7, 0xe1, 0x58, 0xe8, 0xbe, 0xf0, 0xa0, 0x13, 0x73, 0x3a, 0x28, 0xce, 0x45, 0x85,
	0x94, 0xd9, 0x76, 0xb9, 0x24, 0x3f, 0x71, 0x7a, 0x83, 0xb6, 0x41, 0xb1, 0xeb, 0x40, 0x6c, 0x1a,
	0x0c, 0xc6, 0x76, 0x4b, 0xa7, 0xb1, 0xd9, 0xf7, 0x0f, 0xe6, 0x6e, 0x81, 0x25, 0xa2, 0xeb, 0x4c,
	0xa2, 0xbb, 0x6f, 0x51, 0x74, 0x7f, 0xa8, 0xb8, 0xb7, 0x10, 0x77, 0x8d, 0xd1, 0xb6, 0x19, 0xea,
	0x41, 0x67, 0xb2, 0xd9, 0x2f, 0x5a, 0x47, 0xfb, 0x24, 0xd2, 0x66, 0xe3, 0x6e, 0xdf, 0x75, 0x8f,
	0xcb, 0x50, 0xc5, 0x36, 0x5f, 0x14, 0x1d, 0xd2, 0x9c, 0x19, 0xee, 0xb0, 0xf2, 0x2f, 0x32, 0x37,
	0xa0, 0x7e, 0x44, 0x85, 0x1e, 0x37, 0x97, 0xad, 0xa0, 0x66, 0x08, 0x67, 0x1a, 0xc2, 0xea, 0xd4,
	0x2d, 0xe7, 0xb9, 0x07, 0x85, 0x1e, 0xd3, 0x55, 0xfb, 0xb5, 0xb2, 0x9c, 0xbb, 0x68, 0xe1, 0x03,
	0x70, 0xea, 0xff, 0xaf, 0xa8, 0xe9, 0x52, 0x6a, 0x45, 0x1c, 0xba, 0x9c, 0xfb, 0xb4, 0xbc, 0x5c,
	0x10, 0x8c, 0x74, 0x93, 0x8f, 0x3c, 0x68, 0x19, 0x84, 0xb9, 0xcc, 0x22, 0xae, 0x14, 0x67, 0x2e,
	0xfd, 0x96, 0x69, 0x98, 0x66, 0xac, 0xe8, 0xa3, 0x42, 0x7f, 0xf7, 0xb3, 0x0a, 0xdc, 0x40, 0xbe,
	0xa0, 0xfc, 0x58, 0xbf, 0x46, 0x2f, 0x49, 0x37, 0x01, 0xf0, 0x22, 0x1b, 0xab, 0x90, 0x16, 0xaf,
	0xa2, 0x75, 0x47, 0xd9, 0x1c, 0xb1, 0x37, 0x2c, 0xbb, 0x32, 0x66, 0x6f, 0x20, 0xfb, 0x16, 0x34,
	0xcc, 0xc0, 0x5c, 0x73, 0x0d, 0xdf, 0x86, 0x06, 0x14, 0xa4, 0x4d, 0x75, 0xe1, 0x8b, 0x50, 0xf5,
	0x15, 0x7f, 0x11, 0xaa, 0xbd, 0x22, 0x2f, 0x42, 0x2f, 0x2a, 0xd0, 0x39, 0xc7, 0x2f, 0xc9, 0x37,
	0x17, 0x97, 0xf7, 0xe3, 0xcb, 0x07, 0x7d, 0x7e, 0x90, 0xfc, 0x51, 0xe4, 0x5f, 0xa7, 0x22, 0xff,
	0xad, 0x07, 0x8b, 0xe3, 0x22, 0x6f, 0x3d, 0x02, 0xcb, 0xfc, 0x87, 0x93, 0x55, 0xc6, 0x43, 0xac,
	0x79, 0xd9, 0x2e, 0x39, 0xae, 0x35, 0xdd, 0x5f, 0x67, 0xa0, 0x7d, 0xe6, 0x4d, 0x95, 0xbc, 0xf0,
	0xa0, 0x81, 0x63, 0x17, 0x3a, 0xeb, 0x18, 0x3a, 0x87, 0x97, 0x8f, 0xf3, 0xbc, 0x97, 0xdd, 0x00,
	0x54, 0x3e, 0x28, 0x62, 0xe6, 0x13, 0x0f, 0x9a, 0x93, 0x6d, 0x92, 0x7f, 0xb7, 0xac, 0x97, 0xfd,
	0x53, 0xdd, 0x5a, 0xd0, 0x98, 0x68, 0xc8, 0xc8, 0x77, 0x1e, 0x2c, 0x5f, 0xf0, 0xf0, 0xea, 0x6f,
	0x20, 0xbe, 0x67, 0x25, 0xe1, 0x1b, 0x3b, 0x5a, 0xb0, 0x28, 0xce, 0x79, 0xde, 0xed, 0xcf, 0xe1,
	0xff, 0xa0, 0x77, 0x7f, 0x0f, 0x00, 0x00, 0xff, 0xff, 0xd9, 0xfc, 0x0b, 0x49, 0x22, 0x1d, 0x00,
	0x00,
}
