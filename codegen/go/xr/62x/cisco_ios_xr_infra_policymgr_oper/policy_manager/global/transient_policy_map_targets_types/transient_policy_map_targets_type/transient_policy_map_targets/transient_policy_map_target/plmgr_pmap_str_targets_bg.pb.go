/*
Copyright 2019 Cisco Systems

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: plmgr_pmap_str_targets_bg.proto

package cisco_ios_xr_infra_policymgr_oper_policy_manager_global_transient_policy_map_targets_types_transient_policy_map_targets_type_transient_policy_map_targets_transient_policy_map_target

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type PlmgrPmapStrTargetsBg_KEYS struct {
	Type                 string   `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	PolicyMapName        string   `protobuf:"bytes,2,opt,name=policy_map_name,json=policyMapName,proto3" json:"policy_map_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PlmgrPmapStrTargetsBg_KEYS) Reset()         { *m = PlmgrPmapStrTargetsBg_KEYS{} }
func (m *PlmgrPmapStrTargetsBg_KEYS) String() string { return proto.CompactTextString(m) }
func (*PlmgrPmapStrTargetsBg_KEYS) ProtoMessage()    {}
func (*PlmgrPmapStrTargetsBg_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_f1b4b8a59f0baafb, []int{0}
}

func (m *PlmgrPmapStrTargetsBg_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PlmgrPmapStrTargetsBg_KEYS.Unmarshal(m, b)
}
func (m *PlmgrPmapStrTargetsBg_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PlmgrPmapStrTargetsBg_KEYS.Marshal(b, m, deterministic)
}
func (m *PlmgrPmapStrTargetsBg_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PlmgrPmapStrTargetsBg_KEYS.Merge(m, src)
}
func (m *PlmgrPmapStrTargetsBg_KEYS) XXX_Size() int {
	return xxx_messageInfo_PlmgrPmapStrTargetsBg_KEYS.Size(m)
}
func (m *PlmgrPmapStrTargetsBg_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_PlmgrPmapStrTargetsBg_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_PlmgrPmapStrTargetsBg_KEYS proto.InternalMessageInfo

func (m *PlmgrPmapStrTargetsBg_KEYS) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *PlmgrPmapStrTargetsBg_KEYS) GetPolicyMapName() string {
	if m != nil {
		return m.PolicyMapName
	}
	return ""
}

type PlmgrPmapStrTargetsBg struct {
	Target               []string `protobuf:"bytes,50,rep,name=target,proto3" json:"target,omitempty"`
	ParentTarget         []string `protobuf:"bytes,51,rep,name=parent_target,json=parentTarget,proto3" json:"parent_target,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PlmgrPmapStrTargetsBg) Reset()         { *m = PlmgrPmapStrTargetsBg{} }
func (m *PlmgrPmapStrTargetsBg) String() string { return proto.CompactTextString(m) }
func (*PlmgrPmapStrTargetsBg) ProtoMessage()    {}
func (*PlmgrPmapStrTargetsBg) Descriptor() ([]byte, []int) {
	return fileDescriptor_f1b4b8a59f0baafb, []int{1}
}

func (m *PlmgrPmapStrTargetsBg) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PlmgrPmapStrTargetsBg.Unmarshal(m, b)
}
func (m *PlmgrPmapStrTargetsBg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PlmgrPmapStrTargetsBg.Marshal(b, m, deterministic)
}
func (m *PlmgrPmapStrTargetsBg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PlmgrPmapStrTargetsBg.Merge(m, src)
}
func (m *PlmgrPmapStrTargetsBg) XXX_Size() int {
	return xxx_messageInfo_PlmgrPmapStrTargetsBg.Size(m)
}
func (m *PlmgrPmapStrTargetsBg) XXX_DiscardUnknown() {
	xxx_messageInfo_PlmgrPmapStrTargetsBg.DiscardUnknown(m)
}

var xxx_messageInfo_PlmgrPmapStrTargetsBg proto.InternalMessageInfo

func (m *PlmgrPmapStrTargetsBg) GetTarget() []string {
	if m != nil {
		return m.Target
	}
	return nil
}

func (m *PlmgrPmapStrTargetsBg) GetParentTarget() []string {
	if m != nil {
		return m.ParentTarget
	}
	return nil
}

func init() {
	proto.RegisterType((*PlmgrPmapStrTargetsBg_KEYS)(nil), "cisco_ios_xr_infra_policymgr_oper.policy_manager.global.transient_policy_map_targets_types.transient_policy_map_targets_type.transient_policy_map_targets.transient_policy_map_target.plmgr_pmap_str_targets_bg_KEYS")
	proto.RegisterType((*PlmgrPmapStrTargetsBg)(nil), "cisco_ios_xr_infra_policymgr_oper.policy_manager.global.transient_policy_map_targets_types.transient_policy_map_targets_type.transient_policy_map_targets.transient_policy_map_target.plmgr_pmap_str_targets_bg")
}

func init() { proto.RegisterFile("plmgr_pmap_str_targets_bg.proto", fileDescriptor_f1b4b8a59f0baafb) }

var fileDescriptor_f1b4b8a59f0baafb = []byte{
	// 229 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x90, 0x4f, 0x4b, 0x03, 0x31,
	0x10, 0xc5, 0x59, 0x95, 0x42, 0x83, 0x45, 0xc8, 0x41, 0xd6, 0x8b, 0x96, 0x0a, 0xd2, 0x53, 0x0e,
	0xf6, 0x33, 0x78, 0x12, 0x3d, 0x54, 0x0f, 0x0a, 0xc2, 0x30, 0xbb, 0xc4, 0x10, 0xc8, 0x9f, 0x61,
	0x92, 0x83, 0xfd, 0x60, 0x7e, 0x3f, 0xd9, 0xa4, 0x2c, 0x5e, 0x76, 0x7b, 0xcb, 0x7b, 0xbf, 0x97,
	0x97, 0xcc, 0x88, 0x3b, 0x72, 0xde, 0x30, 0x90, 0x47, 0x82, 0x94, 0x19, 0x32, 0xb2, 0xd1, 0x39,
	0x41, 0x67, 0x14, 0x71, 0xcc, 0x51, 0xfe, 0x36, 0xbd, 0x4d, 0x7d, 0x04, 0x1b, 0x13, 0xfc, 0x30,
	0xd8, 0xf0, 0xcd, 0x08, 0x14, 0x9d, 0xed, 0x0f, 0xc3, 0xc5, 0x48, 0x9a, 0x55, 0x95, 0xe0, 0x31,
	0xa0, 0xd1, 0xac, 0x8c, 0x8b, 0x1d, 0x3a, 0x95, 0x19, 0x43, 0xb2, 0x3a, 0x64, 0x18, 0x39, 0x8d,
	0xfd, 0xf9, 0x40, 0x3a, 0x9d, 0x8e, 0xcc, 0x26, 0xe6, 0xe0, 0xe6, 0x4b, 0xdc, 0x4e, 0x8e, 0x06,
	0xcf, 0x4f, 0x9f, 0x6f, 0x52, 0x8a, 0x8b, 0xe1, 0x89, 0xb6, 0x59, 0x37, 0xdb, 0xe5, 0xbe, 0x9c,
	0xe5, 0x83, 0xb8, 0xfa, 0x57, 0x15, 0xd0, 0xeb, 0xf6, 0xac, 0xe0, 0x55, 0xb5, 0x5f, 0x90, 0x5e,
	0xd1, 0xeb, 0xcd, 0x87, 0xb8, 0x99, 0x6c, 0x97, 0xd7, 0x62, 0x51, 0x55, 0xfb, 0xb8, 0x3e, 0xdf,
	0x2e, 0xf7, 0x47, 0x25, 0xef, 0xc5, 0x8a, 0x90, 0x87, 0xef, 0x1e, 0xf1, 0xae, 0xe0, 0xcb, 0x6a,
	0xbe, 0x17, 0xaf, 0x5b, 0x94, 0xb5, 0xef, 0xfe, 0x02, 0x00, 0x00, 0xff, 0xff, 0x2c, 0xcf, 0x2c,
	0xbc, 0x99, 0x01, 0x00, 0x00,
}
