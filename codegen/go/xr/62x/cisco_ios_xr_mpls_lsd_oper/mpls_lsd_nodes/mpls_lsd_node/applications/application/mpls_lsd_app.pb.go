/*
Copyright 2019 Cisco Systems

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: mpls_lsd_app.proto

package cisco_ios_xr_mpls_lsd_oper_mpls_lsd_nodes_mpls_lsd_node_applications_application

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type MplsLsdApp_KEYS struct {
	NodeName             string   `protobuf:"bytes,1,opt,name=node_name,json=nodeName,proto3" json:"node_name,omitempty"`
	ApplicationName      string   `protobuf:"bytes,2,opt,name=application_name,json=applicationName,proto3" json:"application_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MplsLsdApp_KEYS) Reset()         { *m = MplsLsdApp_KEYS{} }
func (m *MplsLsdApp_KEYS) String() string { return proto.CompactTextString(m) }
func (*MplsLsdApp_KEYS) ProtoMessage()    {}
func (*MplsLsdApp_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_68097e1c61bd913b, []int{0}
}

func (m *MplsLsdApp_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsLsdApp_KEYS.Unmarshal(m, b)
}
func (m *MplsLsdApp_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsLsdApp_KEYS.Marshal(b, m, deterministic)
}
func (m *MplsLsdApp_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsLsdApp_KEYS.Merge(m, src)
}
func (m *MplsLsdApp_KEYS) XXX_Size() int {
	return xxx_messageInfo_MplsLsdApp_KEYS.Size(m)
}
func (m *MplsLsdApp_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsLsdApp_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_MplsLsdApp_KEYS proto.InternalMessageInfo

func (m *MplsLsdApp_KEYS) GetNodeName() string {
	if m != nil {
		return m.NodeName
	}
	return ""
}

func (m *MplsLsdApp_KEYS) GetApplicationName() string {
	if m != nil {
		return m.ApplicationName
	}
	return ""
}

type MplsLsdAppConnectedStats struct {
	RtSetMsgCount        uint32   `protobuf:"varint,1,opt,name=rt_set_msg_count,json=rtSetMsgCount,proto3" json:"rt_set_msg_count,omitempty"`
	OperationMsgCount    uint32   `protobuf:"varint,2,opt,name=operation_msg_count,json=operationMsgCount,proto3" json:"operation_msg_count,omitempty"`
	OorLabelCount        uint32   `protobuf:"varint,3,opt,name=oor_label_count,json=oorLabelCount,proto3" json:"oor_label_count,omitempty"`
	ErrorMsgCount        uint32   `protobuf:"varint,4,opt,name=error_msg_count,json=errorMsgCount,proto3" json:"error_msg_count,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MplsLsdAppConnectedStats) Reset()         { *m = MplsLsdAppConnectedStats{} }
func (m *MplsLsdAppConnectedStats) String() string { return proto.CompactTextString(m) }
func (*MplsLsdAppConnectedStats) ProtoMessage()    {}
func (*MplsLsdAppConnectedStats) Descriptor() ([]byte, []int) {
	return fileDescriptor_68097e1c61bd913b, []int{1}
}

func (m *MplsLsdAppConnectedStats) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsLsdAppConnectedStats.Unmarshal(m, b)
}
func (m *MplsLsdAppConnectedStats) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsLsdAppConnectedStats.Marshal(b, m, deterministic)
}
func (m *MplsLsdAppConnectedStats) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsLsdAppConnectedStats.Merge(m, src)
}
func (m *MplsLsdAppConnectedStats) XXX_Size() int {
	return xxx_messageInfo_MplsLsdAppConnectedStats.Size(m)
}
func (m *MplsLsdAppConnectedStats) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsLsdAppConnectedStats.DiscardUnknown(m)
}

var xxx_messageInfo_MplsLsdAppConnectedStats proto.InternalMessageInfo

func (m *MplsLsdAppConnectedStats) GetRtSetMsgCount() uint32 {
	if m != nil {
		return m.RtSetMsgCount
	}
	return 0
}

func (m *MplsLsdAppConnectedStats) GetOperationMsgCount() uint32 {
	if m != nil {
		return m.OperationMsgCount
	}
	return 0
}

func (m *MplsLsdAppConnectedStats) GetOorLabelCount() uint32 {
	if m != nil {
		return m.OorLabelCount
	}
	return 0
}

func (m *MplsLsdAppConnectedStats) GetErrorMsgCount() uint32 {
	if m != nil {
		return m.ErrorMsgCount
	}
	return 0
}

type MplsLsdAppStats struct {
	Connected                *MplsLsdAppConnectedStats `protobuf:"bytes,1,opt,name=connected,proto3" json:"connected,omitempty"`
	InterfaceEnable          uint32                    `protobuf:"varint,2,opt,name=interface_enable,json=interfaceEnable,proto3" json:"interface_enable,omitempty"`
	InterfaceEnablePending   uint32                    `protobuf:"varint,3,opt,name=interface_enable_pending,json=interfaceEnablePending,proto3" json:"interface_enable_pending,omitempty"`
	LabelContextCount        []uint32                  `protobuf:"varint,4,rep,packed,name=label_context_count,json=labelContextCount,proto3" json:"label_context_count,omitempty"`
	LabelContextPendingCount []uint32                  `protobuf:"varint,5,rep,packed,name=label_context_pending_count,json=labelContextPendingCount,proto3" json:"label_context_pending_count,omitempty"`
	ConnectCount             uint32                    `protobuf:"varint,6,opt,name=connect_count,json=connectCount,proto3" json:"connect_count,omitempty"`
	XXX_NoUnkeyedLiteral     struct{}                  `json:"-"`
	XXX_unrecognized         []byte                    `json:"-"`
	XXX_sizecache            int32                     `json:"-"`
}

func (m *MplsLsdAppStats) Reset()         { *m = MplsLsdAppStats{} }
func (m *MplsLsdAppStats) String() string { return proto.CompactTextString(m) }
func (*MplsLsdAppStats) ProtoMessage()    {}
func (*MplsLsdAppStats) Descriptor() ([]byte, []int) {
	return fileDescriptor_68097e1c61bd913b, []int{2}
}

func (m *MplsLsdAppStats) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsLsdAppStats.Unmarshal(m, b)
}
func (m *MplsLsdAppStats) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsLsdAppStats.Marshal(b, m, deterministic)
}
func (m *MplsLsdAppStats) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsLsdAppStats.Merge(m, src)
}
func (m *MplsLsdAppStats) XXX_Size() int {
	return xxx_messageInfo_MplsLsdAppStats.Size(m)
}
func (m *MplsLsdAppStats) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsLsdAppStats.DiscardUnknown(m)
}

var xxx_messageInfo_MplsLsdAppStats proto.InternalMessageInfo

func (m *MplsLsdAppStats) GetConnected() *MplsLsdAppConnectedStats {
	if m != nil {
		return m.Connected
	}
	return nil
}

func (m *MplsLsdAppStats) GetInterfaceEnable() uint32 {
	if m != nil {
		return m.InterfaceEnable
	}
	return 0
}

func (m *MplsLsdAppStats) GetInterfaceEnablePending() uint32 {
	if m != nil {
		return m.InterfaceEnablePending
	}
	return 0
}

func (m *MplsLsdAppStats) GetLabelContextCount() []uint32 {
	if m != nil {
		return m.LabelContextCount
	}
	return nil
}

func (m *MplsLsdAppStats) GetLabelContextPendingCount() []uint32 {
	if m != nil {
		return m.LabelContextPendingCount
	}
	return nil
}

func (m *MplsLsdAppStats) GetConnectCount() uint32 {
	if m != nil {
		return m.ConnectCount
	}
	return 0
}

type MplsLsdApp struct {
	ApplicationNameXr            string           `protobuf:"bytes,50,opt,name=application_name_xr,json=applicationNameXr,proto3" json:"application_name_xr,omitempty"`
	ApplicationType              string           `protobuf:"bytes,51,opt,name=application_type,json=applicationType,proto3" json:"application_type,omitempty"`
	ApplicationRolePrimary       int32            `protobuf:"zigzag32,52,opt,name=application_role_primary,json=applicationRolePrimary,proto3" json:"application_role_primary,omitempty"`
	ApplicationInstance          string           `protobuf:"bytes,53,opt,name=application_instance,json=applicationInstance,proto3" json:"application_instance,omitempty"`
	AppRegTime                   uint64           `protobuf:"varint,54,opt,name=app_reg_time,json=appRegTime,proto3" json:"app_reg_time,omitempty"`
	AppDisconnectTime            uint64           `protobuf:"varint,55,opt,name=app_disconnect_time,json=appDisconnectTime,proto3" json:"app_disconnect_time,omitempty"`
	AppFlowControlled            int32            `protobuf:"zigzag32,56,opt,name=app_flow_controlled,json=appFlowControlled,proto3" json:"app_flow_controlled,omitempty"`
	FlowCtrlTime                 uint64           `protobuf:"varint,57,opt,name=flow_ctrl_time,json=flowCtrlTime,proto3" json:"flow_ctrl_time,omitempty"`
	FlowCtrlClrTime              uint64           `protobuf:"varint,58,opt,name=flow_ctrl_clr_time,json=flowCtrlClrTime,proto3" json:"flow_ctrl_clr_time,omitempty"`
	GoActTs                      uint64           `protobuf:"varint,59,opt,name=go_act_ts,json=goActTs,proto3" json:"go_act_ts,omitempty"`
	ApplicationState             string           `protobuf:"bytes,60,opt,name=application_state,json=applicationState,proto3" json:"application_state,omitempty"`
	RecoveryTimeRemainingSeconds uint32           `protobuf:"varint,61,opt,name=recovery_time_remaining_seconds,json=recoveryTimeRemainingSeconds,proto3" json:"recovery_time_remaining_seconds,omitempty"`
	RecoveryTimeElapsedSeconds   uint32           `protobuf:"varint,62,opt,name=recovery_time_elapsed_seconds,json=recoveryTimeElapsedSeconds,proto3" json:"recovery_time_elapsed_seconds,omitempty"`
	RecoveryTimeRegisterSeconds  uint32           `protobuf:"varint,63,opt,name=recovery_time_register_seconds,json=recoveryTimeRegisterSeconds,proto3" json:"recovery_time_register_seconds,omitempty"`
	NodeId                       string           `protobuf:"bytes,64,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	ApplicationStatistics        *MplsLsdAppStats `protobuf:"bytes,65,opt,name=application_statistics,json=applicationStatistics,proto3" json:"application_statistics,omitempty"`
	XXX_NoUnkeyedLiteral         struct{}         `json:"-"`
	XXX_unrecognized             []byte           `json:"-"`
	XXX_sizecache                int32            `json:"-"`
}

func (m *MplsLsdApp) Reset()         { *m = MplsLsdApp{} }
func (m *MplsLsdApp) String() string { return proto.CompactTextString(m) }
func (*MplsLsdApp) ProtoMessage()    {}
func (*MplsLsdApp) Descriptor() ([]byte, []int) {
	return fileDescriptor_68097e1c61bd913b, []int{3}
}

func (m *MplsLsdApp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsLsdApp.Unmarshal(m, b)
}
func (m *MplsLsdApp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsLsdApp.Marshal(b, m, deterministic)
}
func (m *MplsLsdApp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsLsdApp.Merge(m, src)
}
func (m *MplsLsdApp) XXX_Size() int {
	return xxx_messageInfo_MplsLsdApp.Size(m)
}
func (m *MplsLsdApp) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsLsdApp.DiscardUnknown(m)
}

var xxx_messageInfo_MplsLsdApp proto.InternalMessageInfo

func (m *MplsLsdApp) GetApplicationNameXr() string {
	if m != nil {
		return m.ApplicationNameXr
	}
	return ""
}

func (m *MplsLsdApp) GetApplicationType() string {
	if m != nil {
		return m.ApplicationType
	}
	return ""
}

func (m *MplsLsdApp) GetApplicationRolePrimary() int32 {
	if m != nil {
		return m.ApplicationRolePrimary
	}
	return 0
}

func (m *MplsLsdApp) GetApplicationInstance() string {
	if m != nil {
		return m.ApplicationInstance
	}
	return ""
}

func (m *MplsLsdApp) GetAppRegTime() uint64 {
	if m != nil {
		return m.AppRegTime
	}
	return 0
}

func (m *MplsLsdApp) GetAppDisconnectTime() uint64 {
	if m != nil {
		return m.AppDisconnectTime
	}
	return 0
}

func (m *MplsLsdApp) GetAppFlowControlled() int32 {
	if m != nil {
		return m.AppFlowControlled
	}
	return 0
}

func (m *MplsLsdApp) GetFlowCtrlTime() uint64 {
	if m != nil {
		return m.FlowCtrlTime
	}
	return 0
}

func (m *MplsLsdApp) GetFlowCtrlClrTime() uint64 {
	if m != nil {
		return m.FlowCtrlClrTime
	}
	return 0
}

func (m *MplsLsdApp) GetGoActTs() uint64 {
	if m != nil {
		return m.GoActTs
	}
	return 0
}

func (m *MplsLsdApp) GetApplicationState() string {
	if m != nil {
		return m.ApplicationState
	}
	return ""
}

func (m *MplsLsdApp) GetRecoveryTimeRemainingSeconds() uint32 {
	if m != nil {
		return m.RecoveryTimeRemainingSeconds
	}
	return 0
}

func (m *MplsLsdApp) GetRecoveryTimeElapsedSeconds() uint32 {
	if m != nil {
		return m.RecoveryTimeElapsedSeconds
	}
	return 0
}

func (m *MplsLsdApp) GetRecoveryTimeRegisterSeconds() uint32 {
	if m != nil {
		return m.RecoveryTimeRegisterSeconds
	}
	return 0
}

func (m *MplsLsdApp) GetNodeId() string {
	if m != nil {
		return m.NodeId
	}
	return ""
}

func (m *MplsLsdApp) GetApplicationStatistics() *MplsLsdAppStats {
	if m != nil {
		return m.ApplicationStatistics
	}
	return nil
}

func init() {
	proto.RegisterType((*MplsLsdApp_KEYS)(nil), "cisco_ios_xr_mpls_lsd_oper.mpls_lsd_nodes.mpls_lsd_node.applications.application.mpls_lsd_app_KEYS")
	proto.RegisterType((*MplsLsdAppConnectedStats)(nil), "cisco_ios_xr_mpls_lsd_oper.mpls_lsd_nodes.mpls_lsd_node.applications.application.mpls_lsd_app_connected_stats")
	proto.RegisterType((*MplsLsdAppStats)(nil), "cisco_ios_xr_mpls_lsd_oper.mpls_lsd_nodes.mpls_lsd_node.applications.application.mpls_lsd_app_stats")
	proto.RegisterType((*MplsLsdApp)(nil), "cisco_ios_xr_mpls_lsd_oper.mpls_lsd_nodes.mpls_lsd_node.applications.application.mpls_lsd_app")
}

func init() { proto.RegisterFile("mpls_lsd_app.proto", fileDescriptor_68097e1c61bd913b) }

var fileDescriptor_68097e1c61bd913b = []byte{
	// 717 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x95, 0xdd, 0x6e, 0x13, 0x39,
	0x14, 0xc7, 0x95, 0xb6, 0x9b, 0x6e, 0xbc, 0xe9, 0xa6, 0x99, 0xdd, 0xed, 0x8e, 0xda, 0xee, 0x12,
	0x15, 0x04, 0x45, 0x95, 0x22, 0xd1, 0xf2, 0x51, 0x3e, 0x0a, 0x54, 0x21, 0x48, 0x15, 0x1f, 0xaa,
	0x26, 0xbd, 0x00, 0x71, 0x61, 0xb9, 0x33, 0xa7, 0x23, 0x4b, 0x1e, 0x7b, 0x64, 0x1b, 0xda, 0xbc,
	0x03, 0x6f, 0x00, 0xef, 0xc3, 0x3b, 0x71, 0x85, 0x7c, 0x3c, 0x99, 0x3a, 0x83, 0xc4, 0x15, 0x5c,
	0xce, 0x39, 0xbf, 0xf3, 0x3f, 0x9f, 0x71, 0x48, 0x54, 0x94, 0xc2, 0x50, 0x61, 0x32, 0xca, 0xca,
	0x72, 0x58, 0x6a, 0x65, 0x55, 0x74, 0x9c, 0x72, 0x93, 0x2a, 0xca, 0x95, 0xa1, 0x17, 0x9a, 0xd6,
	0x80, 0x2a, 0x41, 0x0f, 0xeb, 0x2f, 0xa9, 0x32, 0x30, 0xf3, 0x9f, 0x43, 0x56, 0x96, 0x82, 0xa7,
	0xcc, 0x72, 0x25, 0x4d, 0xf8, 0xb1, 0xf5, 0x8e, 0xf4, 0xc3, 0x3c, 0xf4, 0xc5, 0xf8, 0xed, 0x24,
	0xda, 0x20, 0x1d, 0x17, 0x45, 0x25, 0x2b, 0x20, 0x6e, 0x0d, 0x5a, 0xdb, 0x9d, 0xe4, 0x77, 0x67,
	0x78, 0xcd, 0x0a, 0x88, 0x6e, 0x92, 0xd5, 0x40, 0xc0, 0x33, 0x0b, 0xc8, 0xf4, 0x02, 0xbb, 0x43,
	0xb7, 0xbe, 0xb4, 0xc8, 0xe6, 0x9c, 0x7a, 0xaa, 0xa4, 0x84, 0xd4, 0x42, 0x46, 0x8d, 0x65, 0xd6,
	0x44, 0x37, 0xc8, 0xaa, 0xb6, 0xd4, 0x80, 0xa5, 0x85, 0xc9, 0x69, 0xaa, 0xde, 0x4b, 0x8b, 0xf9,
	0x56, 0x92, 0x15, 0x6d, 0x27, 0x60, 0x5f, 0x99, 0x7c, 0xe4, 0x8c, 0xd1, 0x90, 0xfc, 0xe5, 0x9a,
	0xf4, 0x29, 0x2f, 0xd9, 0x05, 0x64, 0xfb, 0xb5, 0xab, 0xe6, 0xaf, 0x93, 0x9e, 0x52, 0x9a, 0x0a,
	0x76, 0x0a, 0xa2, 0x62, 0x17, 0xbd, 0xae, 0x52, 0xfa, 0xa5, 0xb3, 0xd6, 0x1c, 0x68, 0xad, 0x74,
	0xa0, 0xb9, 0xe4, 0x39, 0x34, 0xcf, 0xf4, 0xb6, 0x3e, 0x2f, 0xce, 0xef, 0xa3, 0xaa, 0xff, 0x63,
	0x8b, 0x74, 0xea, 0x9e, 0xb0, 0xf2, 0x3f, 0x76, 0xe5, 0xf0, 0x67, 0x2f, 0x69, 0xf8, 0xa3, 0x19,
	0x26, 0x97, 0x05, 0xb8, 0xd5, 0x70, 0x69, 0x41, 0x9f, 0xb1, 0x14, 0x28, 0x48, 0x76, 0x2a, 0xa0,
	0x1a, 0x51, 0xaf, 0xb6, 0x8f, 0xd1, 0x1c, 0xed, 0x93, 0xb8, 0x89, 0xd2, 0x12, 0x64, 0xc6, 0x65,
	0x5e, 0x4d, 0x6a, 0xad, 0x11, 0x72, 0xec, 0xbd, 0x6e, 0x15, 0xb3, 0xb1, 0x4a, 0x0b, 0x17, 0xb6,
	0x1e, 0xdb, 0xa2, 0x5b, 0x85, 0xf0, 0xb3, 0x45, 0x8f, 0x1f, 0xf1, 0x01, 0xd9, 0x98, 0xe7, 0xab,
	0x34, 0x55, 0xdc, 0x6f, 0x18, 0x17, 0x87, 0x71, 0x55, 0x26, 0x1f, 0x7e, 0x95, 0xac, 0x54, 0x0d,
	0x56, 0x01, 0x6d, 0xac, 0xae, 0x5b, 0x19, 0xfd, 0x7a, 0xbe, 0xb6, 0x49, 0x37, 0x1c, 0x92, 0x2b,
	0xb2, 0x79, 0xa4, 0xf4, 0x42, 0xc7, 0xbb, 0x78, 0xa7, 0xfd, 0xc6, 0x9d, 0xbe, 0xd1, 0xcd, 0xa3,
	0xb6, 0xd3, 0x12, 0xe2, 0xbd, 0xef, 0x8e, 0xfa, 0x64, 0x5a, 0xe2, 0xe4, 0x42, 0x54, 0x2b, 0x37,
	0x39, 0xcd, 0x0b, 0xa6, 0xa7, 0xf1, 0xed, 0x41, 0x6b, 0xbb, 0x9f, 0xac, 0x05, 0xfe, 0x44, 0x09,
	0x38, 0xf6, 0xde, 0xe8, 0x16, 0xf9, 0x3b, 0x8c, 0xe4, 0xd2, 0x58, 0x26, 0x53, 0x88, 0xef, 0x60,
	0xa2, 0xb0, 0xe0, 0xa3, 0xca, 0x15, 0x0d, 0x48, 0xd7, 0xed, 0x5c, 0x43, 0x4e, 0x2d, 0x2f, 0x20,
	0xbe, 0x3b, 0x68, 0x6d, 0x2f, 0x25, 0x84, 0x95, 0x65, 0x02, 0xf9, 0x09, 0x2f, 0xa0, 0xea, 0x94,
	0x66, 0xee, 0xe6, 0xfc, 0x98, 0x10, 0xbc, 0x87, 0xa0, 0xeb, 0xf4, 0x59, 0xed, 0x09, 0xf9, 0x33,
	0xa1, 0xce, 0x71, 0x23, 0x5a, 0x09, 0x01, 0x59, 0xbc, 0x8f, 0x95, 0x3b, 0xfe, 0xb9, 0x50, 0xe7,
	0xa3, 0xda, 0x11, 0x5d, 0x23, 0x7f, 0x7a, 0xd6, 0x6a, 0xe1, 0xa5, 0xef, 0xa3, 0x74, 0xd7, 0x59,
	0x47, 0x56, 0x0b, 0x54, 0xdd, 0x21, 0xd1, 0x25, 0x95, 0x0a, 0xed, 0xc9, 0x07, 0x48, 0xf6, 0x66,
	0xe4, 0x48, 0x68, 0x84, 0xd7, 0x49, 0x27, 0x57, 0x94, 0xb9, 0x52, 0x4d, 0xfc, 0x10, 0x99, 0xe5,
	0x5c, 0x1d, 0xa6, 0xf6, 0xc4, 0x44, 0x3b, 0x24, 0xdc, 0x0e, 0x9e, 0x38, 0xc4, 0x8f, 0x70, 0x40,
	0xe1, 0x86, 0x26, 0xce, 0x1e, 0x8d, 0xc9, 0x15, 0x0d, 0xa9, 0xfa, 0x00, 0x7a, 0x8a, 0x09, 0xa9,
	0x86, 0x82, 0x71, 0xe9, 0x8e, 0xcb, 0x40, 0xaa, 0x64, 0x66, 0xe2, 0x03, 0xbc, 0x96, 0xcd, 0x19,
	0xe6, 0xf2, 0x27, 0x33, 0x68, 0xe2, 0x99, 0xe8, 0x90, 0xfc, 0x37, 0x2f, 0x03, 0x82, 0x95, 0xc6,
	0xfd, 0xc0, 0x2a, 0x91, 0xc7, 0x28, 0xb2, 0x1e, 0x8a, 0x8c, 0x3d, 0x32, 0x93, 0x18, 0x91, 0xff,
	0x9b, 0x95, 0xe4, 0xdc, 0x58, 0xd0, 0xb5, 0xc6, 0x13, 0xd4, 0xd8, 0x98, 0x2f, 0xc4, 0x33, 0x33,
	0x91, 0x7f, 0xc9, 0x32, 0x3e, 0xbb, 0x3c, 0x8b, 0x9f, 0x62, 0xc7, 0x6d, 0xf7, 0x79, 0x94, 0x45,
	0x9f, 0x5a, 0x64, 0xad, 0x39, 0x15, 0x6e, 0x2c, 0x4f, 0x4d, 0x7c, 0x88, 0x6f, 0x4e, 0xf6, 0x8b,
	0xdf, 0x1c, 0xff, 0xd2, 0xfc, 0xd3, 0x58, 0x80, 0x2f, 0xe1, 0xb4, 0x8d, 0xff, 0x4d, 0x7b, 0xdf,
	0x02, 0x00, 0x00, 0xff, 0xff, 0xc5, 0xe4, 0x75, 0x68, 0xb1, 0x06, 0x00, 0x00,
}
