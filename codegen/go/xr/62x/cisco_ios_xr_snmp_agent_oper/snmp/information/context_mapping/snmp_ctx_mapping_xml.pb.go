/*
Copyright 2019 Cisco Systems

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: snmp_ctx_mapping_xml.proto

package cisco_ios_xr_snmp_agent_oper_snmp_information_context_mapping

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type SnmpCtxMappingXml_KEYS struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SnmpCtxMappingXml_KEYS) Reset()         { *m = SnmpCtxMappingXml_KEYS{} }
func (m *SnmpCtxMappingXml_KEYS) String() string { return proto.CompactTextString(m) }
func (*SnmpCtxMappingXml_KEYS) ProtoMessage()    {}
func (*SnmpCtxMappingXml_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed63b3af1ed68519, []int{0}
}

func (m *SnmpCtxMappingXml_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SnmpCtxMappingXml_KEYS.Unmarshal(m, b)
}
func (m *SnmpCtxMappingXml_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SnmpCtxMappingXml_KEYS.Marshal(b, m, deterministic)
}
func (m *SnmpCtxMappingXml_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SnmpCtxMappingXml_KEYS.Merge(m, src)
}
func (m *SnmpCtxMappingXml_KEYS) XXX_Size() int {
	return xxx_messageInfo_SnmpCtxMappingXml_KEYS.Size(m)
}
func (m *SnmpCtxMappingXml_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_SnmpCtxMappingXml_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_SnmpCtxMappingXml_KEYS proto.InternalMessageInfo

type SnmpCtxMappingEntryXml struct {
	Context              string   `protobuf:"bytes,1,opt,name=context,proto3" json:"context,omitempty"`
	FeatureName          string   `protobuf:"bytes,2,opt,name=feature_name,json=featureName,proto3" json:"feature_name,omitempty"`
	Instance             string   `protobuf:"bytes,3,opt,name=instance,proto3" json:"instance,omitempty"`
	Topology             string   `protobuf:"bytes,4,opt,name=topology,proto3" json:"topology,omitempty"`
	Feature              string   `protobuf:"bytes,5,opt,name=feature,proto3" json:"feature,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SnmpCtxMappingEntryXml) Reset()         { *m = SnmpCtxMappingEntryXml{} }
func (m *SnmpCtxMappingEntryXml) String() string { return proto.CompactTextString(m) }
func (*SnmpCtxMappingEntryXml) ProtoMessage()    {}
func (*SnmpCtxMappingEntryXml) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed63b3af1ed68519, []int{1}
}

func (m *SnmpCtxMappingEntryXml) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SnmpCtxMappingEntryXml.Unmarshal(m, b)
}
func (m *SnmpCtxMappingEntryXml) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SnmpCtxMappingEntryXml.Marshal(b, m, deterministic)
}
func (m *SnmpCtxMappingEntryXml) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SnmpCtxMappingEntryXml.Merge(m, src)
}
func (m *SnmpCtxMappingEntryXml) XXX_Size() int {
	return xxx_messageInfo_SnmpCtxMappingEntryXml.Size(m)
}
func (m *SnmpCtxMappingEntryXml) XXX_DiscardUnknown() {
	xxx_messageInfo_SnmpCtxMappingEntryXml.DiscardUnknown(m)
}

var xxx_messageInfo_SnmpCtxMappingEntryXml proto.InternalMessageInfo

func (m *SnmpCtxMappingEntryXml) GetContext() string {
	if m != nil {
		return m.Context
	}
	return ""
}

func (m *SnmpCtxMappingEntryXml) GetFeatureName() string {
	if m != nil {
		return m.FeatureName
	}
	return ""
}

func (m *SnmpCtxMappingEntryXml) GetInstance() string {
	if m != nil {
		return m.Instance
	}
	return ""
}

func (m *SnmpCtxMappingEntryXml) GetTopology() string {
	if m != nil {
		return m.Topology
	}
	return ""
}

func (m *SnmpCtxMappingEntryXml) GetFeature() string {
	if m != nil {
		return m.Feature
	}
	return ""
}

type SnmpCtxMappingXml struct {
	ContexMapping        []*SnmpCtxMappingEntryXml `protobuf:"bytes,50,rep,name=contex_mapping,json=contexMapping,proto3" json:"contex_mapping,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *SnmpCtxMappingXml) Reset()         { *m = SnmpCtxMappingXml{} }
func (m *SnmpCtxMappingXml) String() string { return proto.CompactTextString(m) }
func (*SnmpCtxMappingXml) ProtoMessage()    {}
func (*SnmpCtxMappingXml) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed63b3af1ed68519, []int{2}
}

func (m *SnmpCtxMappingXml) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SnmpCtxMappingXml.Unmarshal(m, b)
}
func (m *SnmpCtxMappingXml) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SnmpCtxMappingXml.Marshal(b, m, deterministic)
}
func (m *SnmpCtxMappingXml) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SnmpCtxMappingXml.Merge(m, src)
}
func (m *SnmpCtxMappingXml) XXX_Size() int {
	return xxx_messageInfo_SnmpCtxMappingXml.Size(m)
}
func (m *SnmpCtxMappingXml) XXX_DiscardUnknown() {
	xxx_messageInfo_SnmpCtxMappingXml.DiscardUnknown(m)
}

var xxx_messageInfo_SnmpCtxMappingXml proto.InternalMessageInfo

func (m *SnmpCtxMappingXml) GetContexMapping() []*SnmpCtxMappingEntryXml {
	if m != nil {
		return m.ContexMapping
	}
	return nil
}

func init() {
	proto.RegisterType((*SnmpCtxMappingXml_KEYS)(nil), "cisco_ios_xr_snmp_agent_oper.snmp.information.context_mapping.snmp_ctx_mapping_xml_KEYS")
	proto.RegisterType((*SnmpCtxMappingEntryXml)(nil), "cisco_ios_xr_snmp_agent_oper.snmp.information.context_mapping.snmp_ctx_mapping_entry_xml")
	proto.RegisterType((*SnmpCtxMappingXml)(nil), "cisco_ios_xr_snmp_agent_oper.snmp.information.context_mapping.snmp_ctx_mapping_xml")
}

func init() { proto.RegisterFile("snmp_ctx_mapping_xml.proto", fileDescriptor_ed63b3af1ed68519) }

var fileDescriptor_ed63b3af1ed68519 = []byte{
	// 250 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x91, 0x3f, 0x4f, 0xc3, 0x30,
	0x10, 0xc5, 0x65, 0xca, 0x5f, 0x17, 0x18, 0x2c, 0x06, 0x53, 0x96, 0x92, 0xa9, 0x93, 0x87, 0x32,
	0x33, 0x32, 0x21, 0x18, 0xca, 0xd4, 0xc9, 0x32, 0xd6, 0x35, 0xb2, 0x54, 0xdf, 0x59, 0xce, 0x21,
	0xa5, 0x1b, 0x5f, 0x83, 0xcf, 0xc0, 0x97, 0x44, 0x89, 0x13, 0xa6, 0x30, 0x31, 0xbe, 0xfb, 0x3d,
	0xbd, 0x67, 0xdf, 0xc9, 0x45, 0x83, 0x31, 0x59, 0xcf, 0xad, 0x8d, 0x2e, 0xa5, 0x80, 0xb5, 0x6d,
	0xe3, 0xde, 0xa4, 0x4c, 0x4c, 0xea, 0xd1, 0x87, 0xc6, 0x93, 0x0d, 0xd4, 0xd8, 0x36, 0xdb, 0xde,
	0xe8, 0x6a, 0x40, 0xb6, 0x94, 0x20, 0x9b, 0x4e, 0x9b, 0x80, 0x3b, 0xca, 0xd1, 0x71, 0x20, 0x34,
	0x9e, 0x90, 0xa1, 0xe5, 0x31, 0xa8, 0xba, 0x93, 0xb7, 0x53, 0xe1, 0xf6, 0xf9, 0x69, 0xfb, 0x56,
	0x7d, 0x8b, 0x89, 0x6a, 0x40, 0xce, 0x87, 0xce, 0xa3, 0xb4, 0x3c, 0x1b, 0xe2, 0xb4, 0x58, 0x8a,
	0xd5, 0xc5, 0x66, 0x94, 0xea, 0x5e, 0x5e, 0xee, 0xc0, 0xf1, 0x47, 0x06, 0x8b, 0x2e, 0x82, 0x3e,
	0xea, 0xf1, 0x7c, 0x98, 0xbd, 0xba, 0x08, 0x6a, 0x21, 0xcf, 0x03, 0x36, 0xec, 0xd0, 0x83, 0x9e,
	0xf5, 0xf8, 0x57, 0x77, 0x8c, 0x29, 0xd1, 0x9e, 0xea, 0x83, 0x3e, 0x2e, 0x6c, 0xd4, 0x5d, 0xe9,
	0x10, 0xa3, 0x4f, 0x4a, 0xe9, 0x20, 0xab, 0x2f, 0x21, 0x6f, 0xa6, 0xfe, 0xa2, 0x3e, 0x85, 0xbc,
	0x2e, 0x2f, 0x1b, 0xc7, 0x7a, 0xbd, 0x9c, 0xad, 0xe6, 0xeb, 0xad, 0xf9, 0xd7, 0xf2, 0xcc, 0xdf,
	0xbb, 0xd9, 0x5c, 0x15, 0xef, 0x4b, 0x01, 0xef, 0xa7, 0xfd, 0xb1, 0x1e, 0x7e, 0x02, 0x00, 0x00,
	0xff, 0xff, 0x2d, 0x95, 0x50, 0xee, 0xca, 0x01, 0x00, 0x00,
}
