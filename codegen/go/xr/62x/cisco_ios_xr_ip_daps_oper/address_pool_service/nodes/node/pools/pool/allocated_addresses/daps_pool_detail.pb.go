/*
Copyright 2019 Cisco Systems

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: daps_pool_detail.proto

package cisco_ios_xr_ip_daps_oper_address_pool_service_nodes_node_pools_pool_allocated_addresses

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type DapsPoolDetail_KEYS struct {
	NodeName             string   `protobuf:"bytes,1,opt,name=node_name,json=nodeName,proto3" json:"node_name,omitempty"`
	PoolName             string   `protobuf:"bytes,2,opt,name=pool_name,json=poolName,proto3" json:"pool_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DapsPoolDetail_KEYS) Reset()         { *m = DapsPoolDetail_KEYS{} }
func (m *DapsPoolDetail_KEYS) String() string { return proto.CompactTextString(m) }
func (*DapsPoolDetail_KEYS) ProtoMessage()    {}
func (*DapsPoolDetail_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_3752abc290585142, []int{0}
}

func (m *DapsPoolDetail_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DapsPoolDetail_KEYS.Unmarshal(m, b)
}
func (m *DapsPoolDetail_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DapsPoolDetail_KEYS.Marshal(b, m, deterministic)
}
func (m *DapsPoolDetail_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DapsPoolDetail_KEYS.Merge(m, src)
}
func (m *DapsPoolDetail_KEYS) XXX_Size() int {
	return xxx_messageInfo_DapsPoolDetail_KEYS.Size(m)
}
func (m *DapsPoolDetail_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_DapsPoolDetail_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_DapsPoolDetail_KEYS proto.InternalMessageInfo

func (m *DapsPoolDetail_KEYS) GetNodeName() string {
	if m != nil {
		return m.NodeName
	}
	return ""
}

func (m *DapsPoolDetail_KEYS) GetPoolName() string {
	if m != nil {
		return m.PoolName
	}
	return ""
}

type DapsPoolThreshold struct {
	Threshold            uint32   `protobuf:"varint,1,opt,name=threshold,proto3" json:"threshold,omitempty"`
	Triggers             uint32   `protobuf:"varint,2,opt,name=triggers,proto3" json:"triggers,omitempty"`
	TimeLastCrossed      string   `protobuf:"bytes,3,opt,name=time_last_crossed,json=timeLastCrossed,proto3" json:"time_last_crossed,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DapsPoolThreshold) Reset()         { *m = DapsPoolThreshold{} }
func (m *DapsPoolThreshold) String() string { return proto.CompactTextString(m) }
func (*DapsPoolThreshold) ProtoMessage()    {}
func (*DapsPoolThreshold) Descriptor() ([]byte, []int) {
	return fileDescriptor_3752abc290585142, []int{1}
}

func (m *DapsPoolThreshold) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DapsPoolThreshold.Unmarshal(m, b)
}
func (m *DapsPoolThreshold) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DapsPoolThreshold.Marshal(b, m, deterministic)
}
func (m *DapsPoolThreshold) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DapsPoolThreshold.Merge(m, src)
}
func (m *DapsPoolThreshold) XXX_Size() int {
	return xxx_messageInfo_DapsPoolThreshold.Size(m)
}
func (m *DapsPoolThreshold) XXX_DiscardUnknown() {
	xxx_messageInfo_DapsPoolThreshold.DiscardUnknown(m)
}

var xxx_messageInfo_DapsPoolThreshold proto.InternalMessageInfo

func (m *DapsPoolThreshold) GetThreshold() uint32 {
	if m != nil {
		return m.Threshold
	}
	return 0
}

func (m *DapsPoolThreshold) GetTriggers() uint32 {
	if m != nil {
		return m.Triggers
	}
	return 0
}

func (m *DapsPoolThreshold) GetTimeLastCrossed() string {
	if m != nil {
		return m.TimeLastCrossed
	}
	return ""
}

type DapsPoolAllocations struct {
	VrfName              string             `protobuf:"bytes,1,opt,name=vrf_name,json=vrfName,proto3" json:"vrf_name,omitempty"`
	Used                 uint32             `protobuf:"varint,2,opt,name=used,proto3" json:"used,omitempty"`
	Excluded             uint32             `protobuf:"varint,3,opt,name=excluded,proto3" json:"excluded,omitempty"`
	Free                 uint32             `protobuf:"varint,4,opt,name=free,proto3" json:"free,omitempty"`
	Total                uint32             `protobuf:"varint,5,opt,name=total,proto3" json:"total,omitempty"`
	Utilization          uint32             `protobuf:"varint,6,opt,name=utilization,proto3" json:"utilization,omitempty"`
	HighThreshold        *DapsPoolThreshold `protobuf:"bytes,7,opt,name=high_threshold,json=highThreshold,proto3" json:"high_threshold,omitempty"`
	LowThreshold         *DapsPoolThreshold `protobuf:"bytes,8,opt,name=low_threshold,json=lowThreshold,proto3" json:"low_threshold,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *DapsPoolAllocations) Reset()         { *m = DapsPoolAllocations{} }
func (m *DapsPoolAllocations) String() string { return proto.CompactTextString(m) }
func (*DapsPoolAllocations) ProtoMessage()    {}
func (*DapsPoolAllocations) Descriptor() ([]byte, []int) {
	return fileDescriptor_3752abc290585142, []int{2}
}

func (m *DapsPoolAllocations) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DapsPoolAllocations.Unmarshal(m, b)
}
func (m *DapsPoolAllocations) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DapsPoolAllocations.Marshal(b, m, deterministic)
}
func (m *DapsPoolAllocations) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DapsPoolAllocations.Merge(m, src)
}
func (m *DapsPoolAllocations) XXX_Size() int {
	return xxx_messageInfo_DapsPoolAllocations.Size(m)
}
func (m *DapsPoolAllocations) XXX_DiscardUnknown() {
	xxx_messageInfo_DapsPoolAllocations.DiscardUnknown(m)
}

var xxx_messageInfo_DapsPoolAllocations proto.InternalMessageInfo

func (m *DapsPoolAllocations) GetVrfName() string {
	if m != nil {
		return m.VrfName
	}
	return ""
}

func (m *DapsPoolAllocations) GetUsed() uint32 {
	if m != nil {
		return m.Used
	}
	return 0
}

func (m *DapsPoolAllocations) GetExcluded() uint32 {
	if m != nil {
		return m.Excluded
	}
	return 0
}

func (m *DapsPoolAllocations) GetFree() uint32 {
	if m != nil {
		return m.Free
	}
	return 0
}

func (m *DapsPoolAllocations) GetTotal() uint32 {
	if m != nil {
		return m.Total
	}
	return 0
}

func (m *DapsPoolAllocations) GetUtilization() uint32 {
	if m != nil {
		return m.Utilization
	}
	return 0
}

func (m *DapsPoolAllocations) GetHighThreshold() *DapsPoolThreshold {
	if m != nil {
		return m.HighThreshold
	}
	return nil
}

func (m *DapsPoolAllocations) GetLowThreshold() *DapsPoolThreshold {
	if m != nil {
		return m.LowThreshold
	}
	return nil
}

type IpAddrUn struct {
	AddressFamily        string   `protobuf:"bytes,1,opt,name=address_family,json=addressFamily,proto3" json:"address_family,omitempty"`
	Ipv4Address          string   `protobuf:"bytes,2,opt,name=ipv4_address,json=ipv4Address,proto3" json:"ipv4_address,omitempty"`
	Ipv6Address          string   `protobuf:"bytes,3,opt,name=ipv6_address,json=ipv6Address,proto3" json:"ipv6_address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IpAddrUn) Reset()         { *m = IpAddrUn{} }
func (m *IpAddrUn) String() string { return proto.CompactTextString(m) }
func (*IpAddrUn) ProtoMessage()    {}
func (*IpAddrUn) Descriptor() ([]byte, []int) {
	return fileDescriptor_3752abc290585142, []int{3}
}

func (m *IpAddrUn) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IpAddrUn.Unmarshal(m, b)
}
func (m *IpAddrUn) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IpAddrUn.Marshal(b, m, deterministic)
}
func (m *IpAddrUn) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IpAddrUn.Merge(m, src)
}
func (m *IpAddrUn) XXX_Size() int {
	return xxx_messageInfo_IpAddrUn.Size(m)
}
func (m *IpAddrUn) XXX_DiscardUnknown() {
	xxx_messageInfo_IpAddrUn.DiscardUnknown(m)
}

var xxx_messageInfo_IpAddrUn proto.InternalMessageInfo

func (m *IpAddrUn) GetAddressFamily() string {
	if m != nil {
		return m.AddressFamily
	}
	return ""
}

func (m *IpAddrUn) GetIpv4Address() string {
	if m != nil {
		return m.Ipv4Address
	}
	return ""
}

func (m *IpAddrUn) GetIpv6Address() string {
	if m != nil {
		return m.Ipv6Address
	}
	return ""
}

type IpAddrSt struct {
	Address              *IpAddrUn `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *IpAddrSt) Reset()         { *m = IpAddrSt{} }
func (m *IpAddrSt) String() string { return proto.CompactTextString(m) }
func (*IpAddrSt) ProtoMessage()    {}
func (*IpAddrSt) Descriptor() ([]byte, []int) {
	return fileDescriptor_3752abc290585142, []int{4}
}

func (m *IpAddrSt) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IpAddrSt.Unmarshal(m, b)
}
func (m *IpAddrSt) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IpAddrSt.Marshal(b, m, deterministic)
}
func (m *IpAddrSt) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IpAddrSt.Merge(m, src)
}
func (m *IpAddrSt) XXX_Size() int {
	return xxx_messageInfo_IpAddrSt.Size(m)
}
func (m *IpAddrSt) XXX_DiscardUnknown() {
	xxx_messageInfo_IpAddrSt.DiscardUnknown(m)
}

var xxx_messageInfo_IpAddrSt proto.InternalMessageInfo

func (m *IpAddrSt) GetAddress() *IpAddrUn {
	if m != nil {
		return m.Address
	}
	return nil
}

type DapsPoolRange struct {
	StartAddress         *IpAddrSt `protobuf:"bytes,1,opt,name=start_address,json=startAddress,proto3" json:"start_address,omitempty"`
	EndAddress           *IpAddrSt `protobuf:"bytes,2,opt,name=end_address,json=endAddress,proto3" json:"end_address,omitempty"`
	Used                 uint32    `protobuf:"varint,3,opt,name=used,proto3" json:"used,omitempty"`
	Excluded             uint32    `protobuf:"varint,4,opt,name=excluded,proto3" json:"excluded,omitempty"`
	Free                 uint32    `protobuf:"varint,5,opt,name=free,proto3" json:"free,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *DapsPoolRange) Reset()         { *m = DapsPoolRange{} }
func (m *DapsPoolRange) String() string { return proto.CompactTextString(m) }
func (*DapsPoolRange) ProtoMessage()    {}
func (*DapsPoolRange) Descriptor() ([]byte, []int) {
	return fileDescriptor_3752abc290585142, []int{5}
}

func (m *DapsPoolRange) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DapsPoolRange.Unmarshal(m, b)
}
func (m *DapsPoolRange) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DapsPoolRange.Marshal(b, m, deterministic)
}
func (m *DapsPoolRange) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DapsPoolRange.Merge(m, src)
}
func (m *DapsPoolRange) XXX_Size() int {
	return xxx_messageInfo_DapsPoolRange.Size(m)
}
func (m *DapsPoolRange) XXX_DiscardUnknown() {
	xxx_messageInfo_DapsPoolRange.DiscardUnknown(m)
}

var xxx_messageInfo_DapsPoolRange proto.InternalMessageInfo

func (m *DapsPoolRange) GetStartAddress() *IpAddrSt {
	if m != nil {
		return m.StartAddress
	}
	return nil
}

func (m *DapsPoolRange) GetEndAddress() *IpAddrSt {
	if m != nil {
		return m.EndAddress
	}
	return nil
}

func (m *DapsPoolRange) GetUsed() uint32 {
	if m != nil {
		return m.Used
	}
	return 0
}

func (m *DapsPoolRange) GetExcluded() uint32 {
	if m != nil {
		return m.Excluded
	}
	return 0
}

func (m *DapsPoolRange) GetFree() uint32 {
	if m != nil {
		return m.Free
	}
	return 0
}

type DapsPoolInUseAddress struct {
	Address              *IpAddrSt `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	ClientType           string    `protobuf:"bytes,2,opt,name=client_type,json=clientType,proto3" json:"client_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *DapsPoolInUseAddress) Reset()         { *m = DapsPoolInUseAddress{} }
func (m *DapsPoolInUseAddress) String() string { return proto.CompactTextString(m) }
func (*DapsPoolInUseAddress) ProtoMessage()    {}
func (*DapsPoolInUseAddress) Descriptor() ([]byte, []int) {
	return fileDescriptor_3752abc290585142, []int{6}
}

func (m *DapsPoolInUseAddress) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DapsPoolInUseAddress.Unmarshal(m, b)
}
func (m *DapsPoolInUseAddress) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DapsPoolInUseAddress.Marshal(b, m, deterministic)
}
func (m *DapsPoolInUseAddress) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DapsPoolInUseAddress.Merge(m, src)
}
func (m *DapsPoolInUseAddress) XXX_Size() int {
	return xxx_messageInfo_DapsPoolInUseAddress.Size(m)
}
func (m *DapsPoolInUseAddress) XXX_DiscardUnknown() {
	xxx_messageInfo_DapsPoolInUseAddress.DiscardUnknown(m)
}

var xxx_messageInfo_DapsPoolInUseAddress proto.InternalMessageInfo

func (m *DapsPoolInUseAddress) GetAddress() *IpAddrSt {
	if m != nil {
		return m.Address
	}
	return nil
}

func (m *DapsPoolInUseAddress) GetClientType() string {
	if m != nil {
		return m.ClientType
	}
	return ""
}

type DapsPoolDetail struct {
	PoolAllocations      *DapsPoolAllocations    `protobuf:"bytes,50,opt,name=pool_allocations,json=poolAllocations,proto3" json:"pool_allocations,omitempty"`
	AddressRange         []*DapsPoolRange        `protobuf:"bytes,51,rep,name=address_range,json=addressRange,proto3" json:"address_range,omitempty"`
	InUseAddress         []*DapsPoolInUseAddress `protobuf:"bytes,52,rep,name=in_use_address,json=inUseAddress,proto3" json:"in_use_address,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *DapsPoolDetail) Reset()         { *m = DapsPoolDetail{} }
func (m *DapsPoolDetail) String() string { return proto.CompactTextString(m) }
func (*DapsPoolDetail) ProtoMessage()    {}
func (*DapsPoolDetail) Descriptor() ([]byte, []int) {
	return fileDescriptor_3752abc290585142, []int{7}
}

func (m *DapsPoolDetail) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DapsPoolDetail.Unmarshal(m, b)
}
func (m *DapsPoolDetail) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DapsPoolDetail.Marshal(b, m, deterministic)
}
func (m *DapsPoolDetail) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DapsPoolDetail.Merge(m, src)
}
func (m *DapsPoolDetail) XXX_Size() int {
	return xxx_messageInfo_DapsPoolDetail.Size(m)
}
func (m *DapsPoolDetail) XXX_DiscardUnknown() {
	xxx_messageInfo_DapsPoolDetail.DiscardUnknown(m)
}

var xxx_messageInfo_DapsPoolDetail proto.InternalMessageInfo

func (m *DapsPoolDetail) GetPoolAllocations() *DapsPoolAllocations {
	if m != nil {
		return m.PoolAllocations
	}
	return nil
}

func (m *DapsPoolDetail) GetAddressRange() []*DapsPoolRange {
	if m != nil {
		return m.AddressRange
	}
	return nil
}

func (m *DapsPoolDetail) GetInUseAddress() []*DapsPoolInUseAddress {
	if m != nil {
		return m.InUseAddress
	}
	return nil
}

func init() {
	proto.RegisterType((*DapsPoolDetail_KEYS)(nil), "cisco_ios_xr_ip_daps_oper.address_pool_service.nodes.node.pools.pool.allocated_addresses.daps_pool_detail_KEYS")
	proto.RegisterType((*DapsPoolThreshold)(nil), "cisco_ios_xr_ip_daps_oper.address_pool_service.nodes.node.pools.pool.allocated_addresses.daps_pool_threshold")
	proto.RegisterType((*DapsPoolAllocations)(nil), "cisco_ios_xr_ip_daps_oper.address_pool_service.nodes.node.pools.pool.allocated_addresses.daps_pool_allocations")
	proto.RegisterType((*IpAddrUn)(nil), "cisco_ios_xr_ip_daps_oper.address_pool_service.nodes.node.pools.pool.allocated_addresses.ip_addr_un")
	proto.RegisterType((*IpAddrSt)(nil), "cisco_ios_xr_ip_daps_oper.address_pool_service.nodes.node.pools.pool.allocated_addresses.ip_addr_st")
	proto.RegisterType((*DapsPoolRange)(nil), "cisco_ios_xr_ip_daps_oper.address_pool_service.nodes.node.pools.pool.allocated_addresses.daps_pool_range")
	proto.RegisterType((*DapsPoolInUseAddress)(nil), "cisco_ios_xr_ip_daps_oper.address_pool_service.nodes.node.pools.pool.allocated_addresses.daps_pool_in_use_address")
	proto.RegisterType((*DapsPoolDetail)(nil), "cisco_ios_xr_ip_daps_oper.address_pool_service.nodes.node.pools.pool.allocated_addresses.daps_pool_detail")
}

func init() { proto.RegisterFile("daps_pool_detail.proto", fileDescriptor_3752abc290585142) }

var fileDescriptor_3752abc290585142 = []byte{
	// 630 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xc4, 0x56, 0xcb, 0x6a, 0x14, 0x41,
	0x14, 0xa5, 0x32, 0x79, 0x4c, 0xee, 0x4c, 0x27, 0xb1, 0x7c, 0xd0, 0x3e, 0xc0, 0xb1, 0x41, 0x08,
	0x2e, 0x7a, 0x91, 0x84, 0xec, 0x83, 0xe8, 0x46, 0x11, 0x6c, 0x23, 0xe8, 0xaa, 0x28, 0xbb, 0xef,
	0xcc, 0x14, 0xd4, 0x74, 0x35, 0x55, 0x35, 0x93, 0x8c, 0x82, 0x3b, 0x17, 0x82, 0xb8, 0x10, 0x17,
	0xe2, 0xaf, 0xf8, 0x27, 0xfa, 0x05, 0xfe, 0x85, 0x54, 0xf5, 0x6b, 0x12, 0xcc, 0x32, 0x93, 0xcd,
	0xd0, 0x75, 0xee, 0xbd, 0x75, 0xce, 0x7d, 0x15, 0x03, 0xb7, 0x32, 0x5e, 0x18, 0x56, 0x28, 0x25,
	0x59, 0x86, 0x96, 0x0b, 0x19, 0x17, 0x5a, 0x59, 0x45, 0xdf, 0xa4, 0xc2, 0xa4, 0x8a, 0x09, 0x65,
	0xd8, 0xa9, 0x66, 0xa2, 0x60, 0xde, 0x4f, 0x15, 0xa8, 0x63, 0x9e, 0x65, 0x1a, 0x4d, 0x15, 0x64,
	0x50, 0xcf, 0x44, 0x8a, 0x71, 0xae, 0x32, 0x34, 0xfe, 0x37, 0x76, 0xb8, 0xf1, 0xbf, 0x31, 0x97,
	0x52, 0xa5, 0xdc, 0x62, 0xc6, 0xaa, 0x20, 0x34, 0xd1, 0x4b, 0xb8, 0x79, 0x9e, 0x93, 0x3d, 0x7b,
	0xf2, 0xf6, 0x15, 0xbd, 0x0b, 0x9b, 0x2e, 0x9e, 0xe5, 0x7c, 0x82, 0x21, 0x19, 0x90, 0xdd, 0xcd,
	0xa4, 0xeb, 0x80, 0x17, 0x7c, 0x82, 0xce, 0xe8, 0x03, 0xbc, 0x71, 0xa5, 0x34, 0x3a, 0xc0, 0x19,
	0xa3, 0x0f, 0x70, 0xbd, 0xbd, 0xd2, 0x8e, 0x35, 0x9a, 0xb1, 0x92, 0x19, 0xbd, 0x07, 0x9b, 0xcd,
	0xc1, 0x5f, 0x18, 0x24, 0x2d, 0x40, 0xef, 0x40, 0xd7, 0x6a, 0x31, 0x1a, 0xa1, 0x36, 0xfe, 0xc2,
	0x20, 0x69, 0xce, 0xf4, 0x11, 0x5c, 0xb3, 0x62, 0x82, 0x4c, 0x72, 0x63, 0x59, 0xaa, 0x95, 0x31,
	0x98, 0x85, 0x1d, 0xcf, 0xba, 0xed, 0x0c, 0xcf, 0xb9, 0xb1, 0x8f, 0x4b, 0x38, 0xfa, 0xdd, 0x59,
	0x4c, 0xa8, 0xca, 0x58, 0xa8, 0xdc, 0xd0, 0xdb, 0xd0, 0x9d, 0xe9, 0xe1, 0x62, 0x3e, 0x1b, 0x33,
	0x3d, 0xf4, 0xe9, 0x50, 0x58, 0x9d, 0xba, 0x3b, 0x4b, 0x62, 0xff, 0xed, 0x04, 0xe1, 0x69, 0x2a,
	0xa7, 0x59, 0xc5, 0x15, 0x24, 0xcd, 0xd9, 0xf9, 0x0f, 0x35, 0x62, 0xb8, 0x5a, 0xfa, 0xbb, 0x6f,
	0x7a, 0x03, 0xd6, 0xac, 0xb2, 0x5c, 0x86, 0x6b, 0x1e, 0x2c, 0x0f, 0x74, 0x00, 0xbd, 0xa9, 0x15,
	0x52, 0xbc, 0xf7, 0x22, 0xc2, 0x75, 0x6f, 0x5b, 0x84, 0xe8, 0x77, 0x02, 0x5b, 0x63, 0x31, 0x1a,
	0xb7, 0x95, 0x0a, 0x37, 0x06, 0x64, 0xb7, 0xb7, 0x37, 0x89, 0x2f, 0xab, 0xe9, 0xf1, 0x7f, 0xda,
	0x93, 0x04, 0x4e, 0xc4, 0x71, 0xd3, 0x8f, 0x6f, 0x04, 0x02, 0xa9, 0x4e, 0x16, 0x54, 0x75, 0xaf,
	0x42, 0x55, 0x5f, 0xaa, 0x93, 0x46, 0x54, 0x34, 0x07, 0x10, 0x85, 0x8f, 0x60, 0xd3, 0x9c, 0x3e,
	0x84, 0xad, 0x9a, 0x71, 0xc8, 0x27, 0x42, 0xce, 0xab, 0xb6, 0x06, 0x15, 0xfa, 0xd4, 0x83, 0xf4,
	0x01, 0xf4, 0x45, 0x31, 0x3b, 0xa8, 0x89, 0xaa, 0x71, 0xed, 0x39, 0xec, 0xa8, 0x84, 0x2a, 0x97,
	0xc3, 0xc6, 0xa5, 0xd3, 0xb8, 0x1c, 0x56, 0x2e, 0xd1, 0x17, 0xd2, 0x72, 0x1b, 0x4b, 0x3f, 0xc2,
	0x46, 0xed, 0x4c, 0x7c, 0x5d, 0xb2, 0xcb, 0xab, 0x4b, 0x9b, 0x72, 0x52, 0x93, 0x46, 0x7f, 0x57,
	0x60, 0xbb, 0xad, 0x97, 0xe6, 0xf9, 0x08, 0xe9, 0x67, 0x02, 0x81, 0xb1, 0x5c, 0x5b, 0xb6, 0x74,
	0x69, 0xc6, 0x26, 0x7d, 0x4f, 0x5d, 0x57, 0xf4, 0x13, 0x81, 0x1e, 0xe6, 0xd9, 0x99, 0xa2, 0x2f,
	0x4b, 0x09, 0x60, 0x9e, 0xd5, 0x3a, 0xea, 0xcd, 0xee, 0x5c, 0xb0, 0xd9, 0xab, 0x17, 0x6c, 0xf6,
	0x5a, 0xbb, 0xd9, 0xd1, 0x2f, 0x02, 0x61, 0x5b, 0x6b, 0x91, 0xb3, 0xa9, 0xc1, 0x9a, 0xf9, 0x4a,
	0x06, 0xc1, 0xd8, 0x66, 0x10, 0xe8, 0x7d, 0xe8, 0xa5, 0x52, 0x60, 0x6e, 0x99, 0x9d, 0x17, 0xf5,
	0x5b, 0x0c, 0x25, 0x74, 0x3c, 0x2f, 0x30, 0xfa, 0xd3, 0x81, 0x9d, 0xf3, 0x2f, 0x3c, 0xfd, 0x49,
	0x60, 0xe7, 0xfc, 0x03, 0x19, 0xee, 0x79, 0xfd, 0x6a, 0x19, 0x0b, 0xbe, 0x40, 0x9b, 0x6c, 0x3b,
	0xe4, 0x68, 0xe1, 0xa1, 0xfe, 0x4a, 0xa0, 0x5e, 0xe1, 0x72, 0xb2, 0xc3, 0xfd, 0x41, 0x67, 0xb7,
	0xb7, 0x27, 0x96, 0xa1, 0xcc, 0x13, 0x26, 0xfd, 0xca, 0x94, 0xf8, 0xc5, 0xfa, 0x41, 0x60, 0xeb,
	0x6c, 0xdb, 0xc3, 0x03, 0xaf, 0x48, 0x2f, 0x43, 0xd1, 0x59, 0xe6, 0xa4, 0x2f, 0xf2, 0xd7, 0x06,
	0xab, 0xf9, 0x7e, 0xb7, 0xee, 0xff, 0x1f, 0xec, 0xff, 0x0b, 0x00, 0x00, 0xff, 0xff, 0xd1, 0x3f,
	0x79, 0xd4, 0x39, 0x08, 0x00, 0x00,
}
