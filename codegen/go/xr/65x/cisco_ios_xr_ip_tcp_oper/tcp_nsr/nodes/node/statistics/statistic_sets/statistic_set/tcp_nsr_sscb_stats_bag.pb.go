/*
Copyright 2019 Cisco Systems

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: tcp_nsr_sscb_stats_bag.proto

package cisco_ios_xr_ip_tcp_oper_tcp_nsr_nodes_node_statistics_statistic_sets_statistic_set

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type TcpNsrSscbStatsBag_KEYS struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Id_1                 string   `protobuf:"bytes,2,opt,name=id_1,json=id1,proto3" json:"id_1,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TcpNsrSscbStatsBag_KEYS) Reset()         { *m = TcpNsrSscbStatsBag_KEYS{} }
func (m *TcpNsrSscbStatsBag_KEYS) String() string { return proto.CompactTextString(m) }
func (*TcpNsrSscbStatsBag_KEYS) ProtoMessage()    {}
func (*TcpNsrSscbStatsBag_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_8731921c4afa340f, []int{0}
}

func (m *TcpNsrSscbStatsBag_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TcpNsrSscbStatsBag_KEYS.Unmarshal(m, b)
}
func (m *TcpNsrSscbStatsBag_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TcpNsrSscbStatsBag_KEYS.Marshal(b, m, deterministic)
}
func (m *TcpNsrSscbStatsBag_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TcpNsrSscbStatsBag_KEYS.Merge(m, src)
}
func (m *TcpNsrSscbStatsBag_KEYS) XXX_Size() int {
	return xxx_messageInfo_TcpNsrSscbStatsBag_KEYS.Size(m)
}
func (m *TcpNsrSscbStatsBag_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_TcpNsrSscbStatsBag_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_TcpNsrSscbStatsBag_KEYS proto.InternalMessageInfo

func (m *TcpNsrSscbStatsBag_KEYS) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *TcpNsrSscbStatsBag_KEYS) GetId_1() string {
	if m != nil {
		return m.Id_1
	}
	return ""
}

type TcpNsrSscbStatsBag struct {
	Sscb                      uint64   `protobuf:"varint,50,opt,name=sscb,proto3" json:"sscb,omitempty"`
	SetId                     uint32   `protobuf:"varint,51,opt,name=set_id,json=setId,proto3" json:"set_id,omitempty"`
	NumberOfAttemptedInitSync uint32   `protobuf:"varint,52,opt,name=number_of_attempted_init_sync,json=numberOfAttemptedInitSync,proto3" json:"number_of_attempted_init_sync,omitempty"`
	NumberOfSucceededInitSync uint32   `protobuf:"varint,53,opt,name=number_of_succeeded_init_sync,json=numberOfSucceededInitSync,proto3" json:"number_of_succeeded_init_sync,omitempty"`
	NumberOfFailedInitSync    uint32   `protobuf:"varint,54,opt,name=number_of_failed_init_sync,json=numberOfFailedInitSync,proto3" json:"number_of_failed_init_sync,omitempty"`
	NumberOfFailover          uint32   `protobuf:"varint,55,opt,name=number_of_failover,json=numberOfFailover,proto3" json:"number_of_failover,omitempty"`
	NumberOfNsrResets         uint32   `protobuf:"varint,56,opt,name=number_of_nsr_resets,json=numberOfNsrResets,proto3" json:"number_of_nsr_resets,omitempty"`
	LastClearedTime           uint32   `protobuf:"varint,57,opt,name=last_cleared_time,json=lastClearedTime,proto3" json:"last_cleared_time,omitempty"`
	XXX_NoUnkeyedLiteral      struct{} `json:"-"`
	XXX_unrecognized          []byte   `json:"-"`
	XXX_sizecache             int32    `json:"-"`
}

func (m *TcpNsrSscbStatsBag) Reset()         { *m = TcpNsrSscbStatsBag{} }
func (m *TcpNsrSscbStatsBag) String() string { return proto.CompactTextString(m) }
func (*TcpNsrSscbStatsBag) ProtoMessage()    {}
func (*TcpNsrSscbStatsBag) Descriptor() ([]byte, []int) {
	return fileDescriptor_8731921c4afa340f, []int{1}
}

func (m *TcpNsrSscbStatsBag) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TcpNsrSscbStatsBag.Unmarshal(m, b)
}
func (m *TcpNsrSscbStatsBag) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TcpNsrSscbStatsBag.Marshal(b, m, deterministic)
}
func (m *TcpNsrSscbStatsBag) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TcpNsrSscbStatsBag.Merge(m, src)
}
func (m *TcpNsrSscbStatsBag) XXX_Size() int {
	return xxx_messageInfo_TcpNsrSscbStatsBag.Size(m)
}
func (m *TcpNsrSscbStatsBag) XXX_DiscardUnknown() {
	xxx_messageInfo_TcpNsrSscbStatsBag.DiscardUnknown(m)
}

var xxx_messageInfo_TcpNsrSscbStatsBag proto.InternalMessageInfo

func (m *TcpNsrSscbStatsBag) GetSscb() uint64 {
	if m != nil {
		return m.Sscb
	}
	return 0
}

func (m *TcpNsrSscbStatsBag) GetSetId() uint32 {
	if m != nil {
		return m.SetId
	}
	return 0
}

func (m *TcpNsrSscbStatsBag) GetNumberOfAttemptedInitSync() uint32 {
	if m != nil {
		return m.NumberOfAttemptedInitSync
	}
	return 0
}

func (m *TcpNsrSscbStatsBag) GetNumberOfSucceededInitSync() uint32 {
	if m != nil {
		return m.NumberOfSucceededInitSync
	}
	return 0
}

func (m *TcpNsrSscbStatsBag) GetNumberOfFailedInitSync() uint32 {
	if m != nil {
		return m.NumberOfFailedInitSync
	}
	return 0
}

func (m *TcpNsrSscbStatsBag) GetNumberOfFailover() uint32 {
	if m != nil {
		return m.NumberOfFailover
	}
	return 0
}

func (m *TcpNsrSscbStatsBag) GetNumberOfNsrResets() uint32 {
	if m != nil {
		return m.NumberOfNsrResets
	}
	return 0
}

func (m *TcpNsrSscbStatsBag) GetLastClearedTime() uint32 {
	if m != nil {
		return m.LastClearedTime
	}
	return 0
}

func init() {
	proto.RegisterType((*TcpNsrSscbStatsBag_KEYS)(nil), "cisco_ios_xr_ip_tcp_oper.tcp_nsr.nodes.node.statistics.statistic_sets.statistic_set.tcp_nsr_sscb_stats_bag_KEYS")
	proto.RegisterType((*TcpNsrSscbStatsBag)(nil), "cisco_ios_xr_ip_tcp_oper.tcp_nsr.nodes.node.statistics.statistic_sets.statistic_set.tcp_nsr_sscb_stats_bag")
}

func init() { proto.RegisterFile("tcp_nsr_sscb_stats_bag.proto", fileDescriptor_8731921c4afa340f) }

var fileDescriptor_8731921c4afa340f = []byte{
	// 345 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x92, 0x5d, 0x6b, 0xdb, 0x30,
	0x14, 0x86, 0x71, 0x92, 0x05, 0x26, 0xd8, 0x47, 0xc4, 0x16, 0xb4, 0x2f, 0x08, 0xb9, 0x0a, 0x63,
	0x78, 0x64, 0xd9, 0x57, 0x7b, 0x95, 0x52, 0x5a, 0x08, 0x85, 0x16, 0xec, 0xde, 0xf4, 0xea, 0x60,
	0x4b, 0x27, 0xe5, 0x40, 0x6c, 0x19, 0x1d, 0xa5, 0x34, 0x7f, 0xa2, 0xbf, 0xb9, 0x58, 0xa9, 0x93,
	0xba, 0xe4, 0xc6, 0x1c, 0xbf, 0xe7, 0x79, 0x5e, 0x83, 0x25, 0xf1, 0xd5, 0xeb, 0x0a, 0x4a, 0x76,
	0xc0, 0xac, 0x73, 0x60, 0x9f, 0x79, 0x86, 0x3c, 0xbb, 0x8d, 0x2b, 0x67, 0xbd, 0x95, 0xa9, 0x26,
	0xd6, 0x16, 0xc8, 0x32, 0xdc, 0x3b, 0xa0, 0x0a, 0x6a, 0xda, 0x56, 0xe8, 0xe2, 0x27, 0x2d, 0x2e,
	0xad, 0x41, 0x0e, 0xcf, 0xb8, 0x96, 0x89, 0x3d, 0x69, 0xde, 0x8f, 0xc0, 0xe8, 0x5f, 0xbc, 0x8e,
	0xe7, 0xe2, 0xcb, 0xe1, 0x8f, 0xc2, 0xc5, 0xd9, 0x4d, 0x2a, 0xdf, 0x8a, 0x0e, 0x19, 0x15, 0x8d,
	0xa2, 0xc9, 0xeb, 0xa4, 0x43, 0x46, 0x0e, 0x44, 0x8f, 0x0c, 0x4c, 0x55, 0x27, 0x24, 0x5d, 0x32,
	0xd3, 0xf1, 0x43, 0x57, 0x0c, 0x0f, 0x57, 0x48, 0x29, 0x7a, 0x75, 0xa2, 0x7e, 0x8d, 0xa2, 0x49,
	0x2f, 0x09, 0xb3, 0xfc, 0x28, 0xfa, 0x8c, 0x1e, 0xc8, 0xa8, 0xd9, 0x28, 0x9a, 0xbc, 0x49, 0x5e,
	0x31, 0xfa, 0x85, 0x91, 0x73, 0xf1, 0xad, 0x5c, 0x17, 0x39, 0x3a, 0xb0, 0x4b, 0xc8, 0xbc, 0xc7,
	0xa2, 0xf2, 0x68, 0x80, 0x4a, 0xf2, 0xc0, 0x9b, 0x52, 0xab, 0xdf, 0x81, 0xfe, 0xb4, 0x85, 0xae,
	0x96, 0x27, 0x0d, 0xb2, 0x28, 0xc9, 0xa7, 0x9b, 0x52, 0xb7, 0x1b, 0x78, 0xad, 0x35, 0xa2, 0x69,
	0x35, 0xfc, 0x69, 0x37, 0xa4, 0x0d, 0xb2, 0x6b, 0x38, 0x16, 0x9f, 0xf7, 0x0d, 0xcb, 0x8c, 0x56,
	0x2d, 0xfd, 0x6f, 0xd0, 0x87, 0x8d, 0x7e, 0x1e, 0xf6, 0x3b, 0xf7, 0x87, 0x90, 0x6d, 0xd7, 0xde,
	0xa1, 0x53, 0xff, 0x82, 0xf3, 0xfe, 0xb9, 0x53, 0xe7, 0xf2, 0xa7, 0xf8, 0xb0, 0xa7, 0xeb, 0x1f,
	0xe7, 0xb0, 0x3e, 0x1b, 0xf5, 0x3f, 0xf0, 0x83, 0x86, 0xbf, 0x64, 0x97, 0x84, 0x85, 0xfc, 0x2e,
	0x06, 0xab, 0x8c, 0x3d, 0xe8, 0x15, 0x66, 0x0e, 0x0d, 0x78, 0x2a, 0x50, 0x1d, 0x05, 0xfa, 0x5d,
	0xbd, 0x38, 0xdd, 0xe6, 0xd7, 0x54, 0x60, 0xde, 0x0f, 0xd7, 0x65, 0xf6, 0x18, 0x00, 0x00, 0xff,
	0xff, 0xd1, 0x6a, 0xd4, 0x30, 0x4e, 0x02, 0x00, 0x00,
}
