/*
Copyright 2019 Cisco Systems

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: tcp_nsr_ccb_detailed_bag.proto

package cisco_ios_xr_ip_tcp_oper_tcp_nsr_nodes_node_client_detail_clients_detail_client

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type TcpNsrCcbDetailedBag_KEYS struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Id_1                 string   `protobuf:"bytes,2,opt,name=id_1,json=id1,proto3" json:"id_1,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TcpNsrCcbDetailedBag_KEYS) Reset()         { *m = TcpNsrCcbDetailedBag_KEYS{} }
func (m *TcpNsrCcbDetailedBag_KEYS) String() string { return proto.CompactTextString(m) }
func (*TcpNsrCcbDetailedBag_KEYS) ProtoMessage()    {}
func (*TcpNsrCcbDetailedBag_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_9988dfa1a9fab61a, []int{0}
}

func (m *TcpNsrCcbDetailedBag_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TcpNsrCcbDetailedBag_KEYS.Unmarshal(m, b)
}
func (m *TcpNsrCcbDetailedBag_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TcpNsrCcbDetailedBag_KEYS.Marshal(b, m, deterministic)
}
func (m *TcpNsrCcbDetailedBag_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TcpNsrCcbDetailedBag_KEYS.Merge(m, src)
}
func (m *TcpNsrCcbDetailedBag_KEYS) XXX_Size() int {
	return xxx_messageInfo_TcpNsrCcbDetailedBag_KEYS.Size(m)
}
func (m *TcpNsrCcbDetailedBag_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_TcpNsrCcbDetailedBag_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_TcpNsrCcbDetailedBag_KEYS proto.InternalMessageInfo

func (m *TcpNsrCcbDetailedBag_KEYS) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *TcpNsrCcbDetailedBag_KEYS) GetId_1() string {
	if m != nil {
		return m.Id_1
	}
	return ""
}

type TcpNsrCcbDetailedBag struct {
	Ccb                      uint64   `protobuf:"varint,50,opt,name=ccb,proto3" json:"ccb,omitempty"`
	Pid                      uint32   `protobuf:"varint,51,opt,name=pid,proto3" json:"pid,omitempty"`
	ProcessName              []string `protobuf:"bytes,52,rep,name=process_name,json=processName,proto3" json:"process_name,omitempty"`
	JobId                    int32    `protobuf:"zigzag32,53,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"`
	Instance                 uint32   `protobuf:"varint,54,opt,name=instance,proto3" json:"instance,omitempty"`
	NumberofSets             uint32   `protobuf:"varint,55,opt,name=numberof_sets,json=numberofSets,proto3" json:"numberof_sets,omitempty"`
	NumberOfSessions         uint32   `protobuf:"varint,56,opt,name=number_of_sessions,json=numberOfSessions,proto3" json:"number_of_sessions,omitempty"`
	NumberOfUpSessions       uint32   `protobuf:"varint,57,opt,name=number_of_up_sessions,json=numberOfUpSessions,proto3" json:"number_of_up_sessions,omitempty"`
	ConnectedAt              uint32   `protobuf:"varint,58,opt,name=connected_at,json=connectedAt,proto3" json:"connected_at,omitempty"`
	IsNotificationRegistered bool     `protobuf:"varint,59,opt,name=is_notification_registered,json=isNotificationRegistered,proto3" json:"is_notification_registered,omitempty"`
	XXX_NoUnkeyedLiteral     struct{} `json:"-"`
	XXX_unrecognized         []byte   `json:"-"`
	XXX_sizecache            int32    `json:"-"`
}

func (m *TcpNsrCcbDetailedBag) Reset()         { *m = TcpNsrCcbDetailedBag{} }
func (m *TcpNsrCcbDetailedBag) String() string { return proto.CompactTextString(m) }
func (*TcpNsrCcbDetailedBag) ProtoMessage()    {}
func (*TcpNsrCcbDetailedBag) Descriptor() ([]byte, []int) {
	return fileDescriptor_9988dfa1a9fab61a, []int{1}
}

func (m *TcpNsrCcbDetailedBag) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TcpNsrCcbDetailedBag.Unmarshal(m, b)
}
func (m *TcpNsrCcbDetailedBag) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TcpNsrCcbDetailedBag.Marshal(b, m, deterministic)
}
func (m *TcpNsrCcbDetailedBag) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TcpNsrCcbDetailedBag.Merge(m, src)
}
func (m *TcpNsrCcbDetailedBag) XXX_Size() int {
	return xxx_messageInfo_TcpNsrCcbDetailedBag.Size(m)
}
func (m *TcpNsrCcbDetailedBag) XXX_DiscardUnknown() {
	xxx_messageInfo_TcpNsrCcbDetailedBag.DiscardUnknown(m)
}

var xxx_messageInfo_TcpNsrCcbDetailedBag proto.InternalMessageInfo

func (m *TcpNsrCcbDetailedBag) GetCcb() uint64 {
	if m != nil {
		return m.Ccb
	}
	return 0
}

func (m *TcpNsrCcbDetailedBag) GetPid() uint32 {
	if m != nil {
		return m.Pid
	}
	return 0
}

func (m *TcpNsrCcbDetailedBag) GetProcessName() []string {
	if m != nil {
		return m.ProcessName
	}
	return nil
}

func (m *TcpNsrCcbDetailedBag) GetJobId() int32 {
	if m != nil {
		return m.JobId
	}
	return 0
}

func (m *TcpNsrCcbDetailedBag) GetInstance() uint32 {
	if m != nil {
		return m.Instance
	}
	return 0
}

func (m *TcpNsrCcbDetailedBag) GetNumberofSets() uint32 {
	if m != nil {
		return m.NumberofSets
	}
	return 0
}

func (m *TcpNsrCcbDetailedBag) GetNumberOfSessions() uint32 {
	if m != nil {
		return m.NumberOfSessions
	}
	return 0
}

func (m *TcpNsrCcbDetailedBag) GetNumberOfUpSessions() uint32 {
	if m != nil {
		return m.NumberOfUpSessions
	}
	return 0
}

func (m *TcpNsrCcbDetailedBag) GetConnectedAt() uint32 {
	if m != nil {
		return m.ConnectedAt
	}
	return 0
}

func (m *TcpNsrCcbDetailedBag) GetIsNotificationRegistered() bool {
	if m != nil {
		return m.IsNotificationRegistered
	}
	return false
}

func init() {
	proto.RegisterType((*TcpNsrCcbDetailedBag_KEYS)(nil), "cisco_ios_xr_ip_tcp_oper.tcp_nsr.nodes.node.client.detail_clients.detail_client.tcp_nsr_ccb_detailed_bag_KEYS")
	proto.RegisterType((*TcpNsrCcbDetailedBag)(nil), "cisco_ios_xr_ip_tcp_oper.tcp_nsr.nodes.node.client.detail_clients.detail_client.tcp_nsr_ccb_detailed_bag")
}

func init() { proto.RegisterFile("tcp_nsr_ccb_detailed_bag.proto", fileDescriptor_9988dfa1a9fab61a) }

var fileDescriptor_9988dfa1a9fab61a = []byte{
	// 366 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x92, 0xcf, 0x6b, 0xdb, 0x40,
	0x10, 0x85, 0x91, 0x9c, 0x86, 0x64, 0xe3, 0x94, 0x64, 0x21, 0xb0, 0x04, 0x5a, 0x94, 0xf4, 0xa2,
	0x43, 0x11, 0xb8, 0xee, 0xef, 0xf6, 0xd2, 0x42, 0x0f, 0xa5, 0x60, 0x83, 0x4c, 0x0f, 0x3d, 0x0d,
	0xd2, 0xee, 0xd8, 0x8c, 0xb1, 0x77, 0x97, 0x9d, 0x35, 0xf4, 0x7f, 0xef, 0xa5, 0x68, 0x65, 0xcb,
	0xed, 0xc1, 0x17, 0x31, 0xef, 0x9b, 0xef, 0x8d, 0x2e, 0x2b, 0x9e, 0x47, 0xed, 0xc1, 0x72, 0x00,
	0xad, 0x5b, 0x30, 0x18, 0x1b, 0xda, 0xa0, 0x81, 0xb6, 0x59, 0x55, 0x3e, 0xb8, 0xe8, 0xe4, 0x5c,
	0x13, 0x6b, 0x07, 0xe4, 0x18, 0x7e, 0x07, 0x20, 0x0f, 0x9d, 0xef, 0x3c, 0x86, 0x6a, 0x5f, 0xac,
	0xac, 0x33, 0xc8, 0xe9, 0x5b, 0xe9, 0x0d, 0xa1, 0x8d, 0x55, 0x7f, 0x06, 0xfa, 0xc4, 0xff, 0xc7,
	0xc7, 0xaf, 0xe2, 0xd9, 0xa9, 0x5f, 0xc2, 0x8f, 0x6f, 0xbf, 0x16, 0xf2, 0xa9, 0xc8, 0xc9, 0xa8,
	0xac, 0xc8, 0xca, 0xcb, 0x3a, 0x27, 0x23, 0x6f, 0xc5, 0x19, 0x19, 0x98, 0xa8, 0x3c, 0x91, 0x11,
	0x99, 0xc9, 0xe3, 0x9f, 0x5c, 0xa8, 0x53, 0x47, 0xe4, 0x8d, 0x18, 0x69, 0xdd, 0xaa, 0x57, 0x45,
	0x56, 0x9e, 0xd5, 0xdd, 0xd8, 0x11, 0x4f, 0x46, 0x4d, 0x8b, 0xac, 0xbc, 0xae, 0xbb, 0x51, 0x3e,
	0x88, 0xb1, 0x0f, 0x4e, 0x23, 0x33, 0xd8, 0x66, 0x8b, 0xea, 0x75, 0x31, 0x2a, 0x2f, 0xeb, 0xab,
	0x3d, 0x9b, 0x35, 0x5b, 0x94, 0x77, 0xe2, 0x7c, 0xed, 0x5a, 0x20, 0xa3, 0xde, 0x14, 0x59, 0x79,
	0x5b, 0x3f, 0x59, 0xbb, 0xf6, 0xbb, 0x91, 0xf7, 0xe2, 0x82, 0x2c, 0xc7, 0xc6, 0x6a, 0x54, 0x6f,
	0xd3, 0xc1, 0x21, 0xcb, 0x17, 0xe2, 0xda, 0xee, 0xb6, 0x2d, 0x06, 0xb7, 0x04, 0xc6, 0xc8, 0xea,
	0x5d, 0x12, 0xc6, 0x07, 0xb8, 0xc0, 0xc8, 0xf2, 0xa5, 0x90, 0x7d, 0x86, 0x64, 0x31, 0x93, 0xb3,
	0xac, 0xde, 0x27, 0xf3, 0xa6, 0xdf, 0xcc, 0x97, 0x8b, 0x3d, 0x97, 0x13, 0x71, 0x77, 0xb4, 0x77,
	0xfe, 0x58, 0xf8, 0x90, 0x0a, 0xf2, 0x50, 0xf8, 0xe9, 0x87, 0xca, 0x83, 0x18, 0x6b, 0x67, 0x2d,
	0xea, 0x88, 0x06, 0x9a, 0xa8, 0x3e, 0x26, 0xf3, 0x6a, 0x60, 0x5f, 0xa2, 0xfc, 0x2c, 0xee, 0x89,
	0xc1, 0xba, 0x48, 0x4b, 0xd2, 0x4d, 0x24, 0x67, 0x21, 0xe0, 0x8a, 0x38, 0x62, 0x40, 0xa3, 0x3e,
	0x15, 0x59, 0x79, 0x51, 0x2b, 0xe2, 0xd9, 0x3f, 0x42, 0x3d, 0xec, 0xdb, 0xf3, 0xf4, 0x32, 0xa6,
	0x7f, 0x03, 0x00, 0x00, 0xff, 0xff, 0xef, 0x13, 0x1c, 0x10, 0x3b, 0x02, 0x00, 0x00,
}
