/*
Copyright 2019 Cisco Systems

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: ip_tcp.proto

package cisco_ios_xr_ip_tcp_oper_tcp_nodes_node_statistics_ipv4_traffic

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type IpTcp_KEYS struct {
	NodeName             string   `protobuf:"bytes,1,opt,name=node_name,json=nodeName,proto3" json:"node_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IpTcp_KEYS) Reset()         { *m = IpTcp_KEYS{} }
func (m *IpTcp_KEYS) String() string { return proto.CompactTextString(m) }
func (*IpTcp_KEYS) ProtoMessage()    {}
func (*IpTcp_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_31eaae84ea04edbd, []int{0}
}

func (m *IpTcp_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IpTcp_KEYS.Unmarshal(m, b)
}
func (m *IpTcp_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IpTcp_KEYS.Marshal(b, m, deterministic)
}
func (m *IpTcp_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IpTcp_KEYS.Merge(m, src)
}
func (m *IpTcp_KEYS) XXX_Size() int {
	return xxx_messageInfo_IpTcp_KEYS.Size(m)
}
func (m *IpTcp_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_IpTcp_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_IpTcp_KEYS proto.InternalMessageInfo

func (m *IpTcp_KEYS) GetNodeName() string {
	if m != nil {
		return m.NodeName
	}
	return ""
}

type IpTcp struct {
	TcpInputPackets         uint32   `protobuf:"varint,50,opt,name=tcp_input_packets,json=tcpInputPackets,proto3" json:"tcp_input_packets,omitempty"`
	TcpChecksumErrorPackets uint32   `protobuf:"varint,51,opt,name=tcp_checksum_error_packets,json=tcpChecksumErrorPackets,proto3" json:"tcp_checksum_error_packets,omitempty"`
	TcpDroppedPackets       uint32   `protobuf:"varint,52,opt,name=tcp_dropped_packets,json=tcpDroppedPackets,proto3" json:"tcp_dropped_packets,omitempty"`
	TcpOutputPackets        uint32   `protobuf:"varint,53,opt,name=tcp_output_packets,json=tcpOutputPackets,proto3" json:"tcp_output_packets,omitempty"`
	TcpRetransmittedPackets uint32   `protobuf:"varint,54,opt,name=tcp_retransmitted_packets,json=tcpRetransmittedPackets,proto3" json:"tcp_retransmitted_packets,omitempty"`
	XXX_NoUnkeyedLiteral    struct{} `json:"-"`
	XXX_unrecognized        []byte   `json:"-"`
	XXX_sizecache           int32    `json:"-"`
}

func (m *IpTcp) Reset()         { *m = IpTcp{} }
func (m *IpTcp) String() string { return proto.CompactTextString(m) }
func (*IpTcp) ProtoMessage()    {}
func (*IpTcp) Descriptor() ([]byte, []int) {
	return fileDescriptor_31eaae84ea04edbd, []int{1}
}

func (m *IpTcp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IpTcp.Unmarshal(m, b)
}
func (m *IpTcp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IpTcp.Marshal(b, m, deterministic)
}
func (m *IpTcp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IpTcp.Merge(m, src)
}
func (m *IpTcp) XXX_Size() int {
	return xxx_messageInfo_IpTcp.Size(m)
}
func (m *IpTcp) XXX_DiscardUnknown() {
	xxx_messageInfo_IpTcp.DiscardUnknown(m)
}

var xxx_messageInfo_IpTcp proto.InternalMessageInfo

func (m *IpTcp) GetTcpInputPackets() uint32 {
	if m != nil {
		return m.TcpInputPackets
	}
	return 0
}

func (m *IpTcp) GetTcpChecksumErrorPackets() uint32 {
	if m != nil {
		return m.TcpChecksumErrorPackets
	}
	return 0
}

func (m *IpTcp) GetTcpDroppedPackets() uint32 {
	if m != nil {
		return m.TcpDroppedPackets
	}
	return 0
}

func (m *IpTcp) GetTcpOutputPackets() uint32 {
	if m != nil {
		return m.TcpOutputPackets
	}
	return 0
}

func (m *IpTcp) GetTcpRetransmittedPackets() uint32 {
	if m != nil {
		return m.TcpRetransmittedPackets
	}
	return 0
}

func init() {
	proto.RegisterType((*IpTcp_KEYS)(nil), "cisco_ios_xr_ip_tcp_oper.tcp.nodes.node.statistics.ipv4_traffic.ip_tcp_KEYS")
	proto.RegisterType((*IpTcp)(nil), "cisco_ios_xr_ip_tcp_oper.tcp.nodes.node.statistics.ipv4_traffic.ip_tcp")
}

func init() { proto.RegisterFile("ip_tcp.proto", fileDescriptor_31eaae84ea04edbd) }

var fileDescriptor_31eaae84ea04edbd = []byte{
	// 270 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x4c, 0x91, 0x3f, 0x4f, 0xc3, 0x30,
	0x10, 0xc5, 0x15, 0x86, 0x8a, 0x1a, 0x10, 0x10, 0x06, 0x0a, 0x2c, 0x55, 0xa7, 0xaa, 0x42, 0x19,
	0x68, 0x61, 0x80, 0x81, 0x01, 0x3a, 0x20, 0x24, 0x40, 0x61, 0x62, 0xb2, 0xcc, 0xc5, 0x15, 0x56,
	0x95, 0xf8, 0x74, 0xbe, 0x20, 0xbe, 0x03, 0x5f, 0xba, 0x3a, 0xe7, 0x8f, 0xb2, 0x78, 0x78, 0xef,
	0xf7, 0x93, 0x9f, 0x6c, 0x75, 0xe8, 0x50, 0x33, 0x60, 0x86, 0xe4, 0xd9, 0xa7, 0x8f, 0xe0, 0x02,
	0x78, 0xed, 0x7c, 0xd0, 0x7f, 0xa4, 0x9b, 0x4a, 0x7b, 0xb4, 0x94, 0x09, 0x53, 0xf9, 0xc2, 0x86,
	0x78, 0x66, 0x81, 0x0d, 0xbb, 0xc0, 0x0e, 0x42, 0xe6, 0xf0, 0x77, 0xa5, 0x99, 0xcc, 0x66, 0xe3,
	0x60, 0xb6, 0x50, 0x07, 0xad, 0xf5, 0xba, 0xfe, 0xfa, 0x4c, 0xaf, 0xd4, 0x58, 0x70, 0x5d, 0x99,
	0xd2, 0x4e, 0x92, 0x69, 0x32, 0x1f, 0xe7, 0xfb, 0x12, 0xbc, 0x99, 0xd2, 0xce, 0xfe, 0xf7, 0xd4,
	0xa8, 0x81, 0xd3, 0x85, 0x3a, 0x15, 0xc7, 0x55, 0x58, 0xb3, 0x46, 0x03, 0x5b, 0xcb, 0x61, 0x72,
	0x33, 0x4d, 0xe6, 0x47, 0xf9, 0x31, 0x03, 0xbe, 0x48, 0xfe, 0xd1, 0xc4, 0xe9, 0x83, 0xba, 0x14,
	0x16, 0x7e, 0x2c, 0x6c, 0x43, 0x5d, 0x6a, 0x4b, 0xe4, 0xa9, 0x97, 0x96, 0x51, 0x3a, 0x67, 0xc0,
	0xa7, 0x16, 0x58, 0x4b, 0xdf, 0xc9, 0x99, 0x3a, 0x13, 0xb9, 0x20, 0x8f, 0x68, 0x8b, 0xde, 0x5a,
	0x45, 0x4b, 0x36, 0x3c, 0x37, 0x4d, 0xc7, 0x5f, 0xab, 0x34, 0x3e, 0x41, 0xcd, 0xc3, 0x65, 0xb7,
	0x11, 0x3f, 0x61, 0xc0, 0xf7, 0x58, 0x74, 0xf4, 0xbd, 0xba, 0x10, 0x9a, 0x2c, 0x93, 0xa9, 0x42,
	0xe9, 0x98, 0x07, 0x77, 0xdc, 0xf5, 0xcb, 0xf2, 0x61, 0xdf, 0xba, 0xdf, 0xa3, 0xf8, 0x03, 0xcb,
	0x5d, 0x00, 0x00, 0x00, 0xff, 0xff, 0x1f, 0x5c, 0x29, 0x4a, 0x91, 0x01, 0x00, 0x00,
}
