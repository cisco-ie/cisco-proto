/*
Copyright 2019 Cisco Systems

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: l2tp_sess_fwd_stats.proto

package cisco_ios_xr_tunnel_l2tun_oper_l2tpv2_counters_forwarding_sessions_session

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type L2TpSessFwdStats_KEYS struct {
	TunnelId             uint32   `protobuf:"varint,1,opt,name=tunnel_id,json=tunnelId,proto3" json:"tunnel_id,omitempty"`
	SessionId            uint32   `protobuf:"varint,2,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *L2TpSessFwdStats_KEYS) Reset()         { *m = L2TpSessFwdStats_KEYS{} }
func (m *L2TpSessFwdStats_KEYS) String() string { return proto.CompactTextString(m) }
func (*L2TpSessFwdStats_KEYS) ProtoMessage()    {}
func (*L2TpSessFwdStats_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_c9dd6428332837e0, []int{0}
}

func (m *L2TpSessFwdStats_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_L2TpSessFwdStats_KEYS.Unmarshal(m, b)
}
func (m *L2TpSessFwdStats_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_L2TpSessFwdStats_KEYS.Marshal(b, m, deterministic)
}
func (m *L2TpSessFwdStats_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_L2TpSessFwdStats_KEYS.Merge(m, src)
}
func (m *L2TpSessFwdStats_KEYS) XXX_Size() int {
	return xxx_messageInfo_L2TpSessFwdStats_KEYS.Size(m)
}
func (m *L2TpSessFwdStats_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_L2TpSessFwdStats_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_L2TpSessFwdStats_KEYS proto.InternalMessageInfo

func (m *L2TpSessFwdStats_KEYS) GetTunnelId() uint32 {
	if m != nil {
		return m.TunnelId
	}
	return 0
}

func (m *L2TpSessFwdStats_KEYS) GetSessionId() uint32 {
	if m != nil {
		return m.SessionId
	}
	return 0
}

type L2TpSessFwdStats struct {
	RemoteSessionId      uint32   `protobuf:"varint,50,opt,name=remote_session_id,json=remoteSessionId,proto3" json:"remote_session_id,omitempty"`
	InPackets            uint64   `protobuf:"varint,51,opt,name=in_packets,json=inPackets,proto3" json:"in_packets,omitempty"`
	OutPackets           uint64   `protobuf:"varint,52,opt,name=out_packets,json=outPackets,proto3" json:"out_packets,omitempty"`
	InBytes              uint64   `protobuf:"varint,53,opt,name=in_bytes,json=inBytes,proto3" json:"in_bytes,omitempty"`
	OutBytes             uint64   `protobuf:"varint,54,opt,name=out_bytes,json=outBytes,proto3" json:"out_bytes,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *L2TpSessFwdStats) Reset()         { *m = L2TpSessFwdStats{} }
func (m *L2TpSessFwdStats) String() string { return proto.CompactTextString(m) }
func (*L2TpSessFwdStats) ProtoMessage()    {}
func (*L2TpSessFwdStats) Descriptor() ([]byte, []int) {
	return fileDescriptor_c9dd6428332837e0, []int{1}
}

func (m *L2TpSessFwdStats) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_L2TpSessFwdStats.Unmarshal(m, b)
}
func (m *L2TpSessFwdStats) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_L2TpSessFwdStats.Marshal(b, m, deterministic)
}
func (m *L2TpSessFwdStats) XXX_Merge(src proto.Message) {
	xxx_messageInfo_L2TpSessFwdStats.Merge(m, src)
}
func (m *L2TpSessFwdStats) XXX_Size() int {
	return xxx_messageInfo_L2TpSessFwdStats.Size(m)
}
func (m *L2TpSessFwdStats) XXX_DiscardUnknown() {
	xxx_messageInfo_L2TpSessFwdStats.DiscardUnknown(m)
}

var xxx_messageInfo_L2TpSessFwdStats proto.InternalMessageInfo

func (m *L2TpSessFwdStats) GetRemoteSessionId() uint32 {
	if m != nil {
		return m.RemoteSessionId
	}
	return 0
}

func (m *L2TpSessFwdStats) GetInPackets() uint64 {
	if m != nil {
		return m.InPackets
	}
	return 0
}

func (m *L2TpSessFwdStats) GetOutPackets() uint64 {
	if m != nil {
		return m.OutPackets
	}
	return 0
}

func (m *L2TpSessFwdStats) GetInBytes() uint64 {
	if m != nil {
		return m.InBytes
	}
	return 0
}

func (m *L2TpSessFwdStats) GetOutBytes() uint64 {
	if m != nil {
		return m.OutBytes
	}
	return 0
}

func init() {
	proto.RegisterType((*L2TpSessFwdStats_KEYS)(nil), "cisco_ios_xr_tunnel_l2tun_oper.l2tpv2.counters.forwarding.sessions.session.l2tp_sess_fwd_stats_KEYS")
	proto.RegisterType((*L2TpSessFwdStats)(nil), "cisco_ios_xr_tunnel_l2tun_oper.l2tpv2.counters.forwarding.sessions.session.l2tp_sess_fwd_stats")
}

func init() { proto.RegisterFile("l2tp_sess_fwd_stats.proto", fileDescriptor_c9dd6428332837e0) }

var fileDescriptor_c9dd6428332837e0 = []byte{
	// 265 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x90, 0x41, 0x4b, 0xf3, 0x40,
	0x10, 0x86, 0xc9, 0xc7, 0x87, 0x26, 0x2b, 0x22, 0xc6, 0x4b, 0x8a, 0x88, 0xa5, 0xa7, 0xe2, 0x21,
	0x87, 0x54, 0xfd, 0x01, 0x82, 0x87, 0xea, 0x45, 0x5a, 0x10, 0x3c, 0x0d, 0x69, 0x76, 0x2b, 0x8b,
	0x71, 0x26, 0xec, 0xcc, 0x5a, 0xfd, 0x69, 0xfe, 0x3b, 0xd9, 0x4d, 0x22, 0x1e, 0x7a, 0xdb, 0x7d,
	0x9f, 0x7d, 0x9f, 0x61, 0x47, 0x4d, 0xda, 0x4a, 0x3a, 0x60, 0xc3, 0x0c, 0xdb, 0x9d, 0x06, 0x96,
	0x5a, 0xb8, 0xec, 0x1c, 0x09, 0xe5, 0x0f, 0x8d, 0xe5, 0x86, 0xc0, 0x12, 0xc3, 0xa7, 0x03, 0xf1,
	0x88, 0xa6, 0x85, 0xb6, 0x12, 0x8f, 0x40, 0x9d, 0x71, 0x65, 0x68, 0x7e, 0x54, 0x65, 0x43, 0x1e,
	0xc5, 0x38, 0x2e, 0xb7, 0xe4, 0x76, 0xb5, 0xd3, 0x16, 0x5f, 0xcb, 0xe0, 0xb3, 0x84, 0x3c, 0x1e,
	0x66, 0xcf, 0xaa, 0xd8, 0x33, 0x08, 0x1e, 0xef, 0x5f, 0xd6, 0xf9, 0xb9, 0xca, 0x06, 0xb9, 0xd5,
	0x45, 0x32, 0x4d, 0xe6, 0xc7, 0xab, 0xb4, 0x0f, 0x96, 0x3a, 0xbf, 0x50, 0x6a, 0x70, 0x04, 0xfa,
	0x2f, 0xd2, 0x6c, 0x48, 0x96, 0x7a, 0xf6, 0x9d, 0xa8, 0xb3, 0x3d, 0xe2, 0xfc, 0x4a, 0x9d, 0x3a,
	0xf3, 0x4e, 0x62, 0xe0, 0x4f, 0xbb, 0x8a, 0xed, 0x93, 0x1e, 0xac, 0x47, 0x47, 0x18, 0x61, 0x11,
	0xba, 0xba, 0x79, 0x33, 0xc2, 0xc5, 0x62, 0x9a, 0xcc, 0xff, 0xaf, 0x32, 0x8b, 0x4f, 0x7d, 0x90,
	0x5f, 0xaa, 0x23, 0xf2, 0xf2, 0xcb, 0xaf, 0x23, 0x57, 0xe4, 0x65, 0x7c, 0x30, 0x51, 0xa9, 0x45,
	0xd8, 0x7c, 0x89, 0xe1, 0xe2, 0x26, 0xd2, 0x43, 0x8b, 0x77, 0xe1, 0x1a, 0xbe, 0x16, 0xba, 0x3d,
	0xbb, 0x8d, 0x2c, 0x25, 0x2f, 0x11, 0x6e, 0x0e, 0xe2, 0x9a, 0x17, 0x3f, 0x01, 0x00, 0x00, 0xff,
	0xff, 0x41, 0xd9, 0xa1, 0x6e, 0x83, 0x01, 0x00, 0x00,
}
