/*
Copyright 2019 Cisco Systems

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: fpd_show_location_name_list.proto

package cisco_ios_xr_show_fpd_loc_ng_oper_show_fpd_location_help

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type FpdShowLocationNameList_KEYS struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FpdShowLocationNameList_KEYS) Reset()         { *m = FpdShowLocationNameList_KEYS{} }
func (m *FpdShowLocationNameList_KEYS) String() string { return proto.CompactTextString(m) }
func (*FpdShowLocationNameList_KEYS) ProtoMessage()    {}
func (*FpdShowLocationNameList_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_c4d6072cba9196b6, []int{0}
}

func (m *FpdShowLocationNameList_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FpdShowLocationNameList_KEYS.Unmarshal(m, b)
}
func (m *FpdShowLocationNameList_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FpdShowLocationNameList_KEYS.Marshal(b, m, deterministic)
}
func (m *FpdShowLocationNameList_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FpdShowLocationNameList_KEYS.Merge(m, src)
}
func (m *FpdShowLocationNameList_KEYS) XXX_Size() int {
	return xxx_messageInfo_FpdShowLocationNameList_KEYS.Size(m)
}
func (m *FpdShowLocationNameList_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_FpdShowLocationNameList_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_FpdShowLocationNameList_KEYS proto.InternalMessageInfo

type FpdLocationName struct {
	LocationName         string   `protobuf:"bytes,1,opt,name=location_name,json=locationName,proto3" json:"location_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FpdLocationName) Reset()         { *m = FpdLocationName{} }
func (m *FpdLocationName) String() string { return proto.CompactTextString(m) }
func (*FpdLocationName) ProtoMessage()    {}
func (*FpdLocationName) Descriptor() ([]byte, []int) {
	return fileDescriptor_c4d6072cba9196b6, []int{1}
}

func (m *FpdLocationName) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FpdLocationName.Unmarshal(m, b)
}
func (m *FpdLocationName) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FpdLocationName.Marshal(b, m, deterministic)
}
func (m *FpdLocationName) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FpdLocationName.Merge(m, src)
}
func (m *FpdLocationName) XXX_Size() int {
	return xxx_messageInfo_FpdLocationName.Size(m)
}
func (m *FpdLocationName) XXX_DiscardUnknown() {
	xxx_messageInfo_FpdLocationName.DiscardUnknown(m)
}

var xxx_messageInfo_FpdLocationName proto.InternalMessageInfo

func (m *FpdLocationName) GetLocationName() string {
	if m != nil {
		return m.LocationName
	}
	return ""
}

type FpdShowLocationNameList struct {
	LocationName         []*FpdLocationName `protobuf:"bytes,50,rep,name=location_name,json=locationName,proto3" json:"location_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *FpdShowLocationNameList) Reset()         { *m = FpdShowLocationNameList{} }
func (m *FpdShowLocationNameList) String() string { return proto.CompactTextString(m) }
func (*FpdShowLocationNameList) ProtoMessage()    {}
func (*FpdShowLocationNameList) Descriptor() ([]byte, []int) {
	return fileDescriptor_c4d6072cba9196b6, []int{2}
}

func (m *FpdShowLocationNameList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FpdShowLocationNameList.Unmarshal(m, b)
}
func (m *FpdShowLocationNameList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FpdShowLocationNameList.Marshal(b, m, deterministic)
}
func (m *FpdShowLocationNameList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FpdShowLocationNameList.Merge(m, src)
}
func (m *FpdShowLocationNameList) XXX_Size() int {
	return xxx_messageInfo_FpdShowLocationNameList.Size(m)
}
func (m *FpdShowLocationNameList) XXX_DiscardUnknown() {
	xxx_messageInfo_FpdShowLocationNameList.DiscardUnknown(m)
}

var xxx_messageInfo_FpdShowLocationNameList proto.InternalMessageInfo

func (m *FpdShowLocationNameList) GetLocationName() []*FpdLocationName {
	if m != nil {
		return m.LocationName
	}
	return nil
}

func init() {
	proto.RegisterType((*FpdShowLocationNameList_KEYS)(nil), "cisco_ios_xr_show_fpd_loc_ng_oper.show_fpd.location_help.fpd_show_location_name_list_KEYS")
	proto.RegisterType((*FpdLocationName)(nil), "cisco_ios_xr_show_fpd_loc_ng_oper.show_fpd.location_help.fpd_location_name")
	proto.RegisterType((*FpdShowLocationNameList)(nil), "cisco_ios_xr_show_fpd_loc_ng_oper.show_fpd.location_help.fpd_show_location_name_list")
}

func init() { proto.RegisterFile("fpd_show_location_name_list.proto", fileDescriptor_c4d6072cba9196b6) }

var fileDescriptor_c4d6072cba9196b6 = []byte{
	// 171 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x52, 0x4c, 0x2b, 0x48, 0x89,
	0x2f, 0xce, 0xc8, 0x2f, 0x8f, 0xcf, 0xc9, 0x4f, 0x4e, 0x2c, 0xc9, 0xcc, 0xcf, 0x8b, 0xcf, 0x4b,
	0xcc, 0x4d, 0x8d, 0xcf, 0xc9, 0x2c, 0x2e, 0xd1, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xb2, 0x48,
	0xce, 0x2c, 0x4e, 0xce, 0x8f, 0xcf, 0xcc, 0x2f, 0x8e, 0xaf, 0x28, 0x82, 0xa8, 0x05, 0x69, 0xca,
	0xc9, 0x4f, 0x8e, 0xcf, 0x4b, 0x8f, 0xcf, 0x2f, 0x48, 0x2d, 0xd2, 0x83, 0x09, 0xea, 0xc1, 0x0d,
	0xc9, 0x48, 0xcd, 0x29, 0x50, 0x52, 0xe2, 0x52, 0xc0, 0x63, 0x7c, 0xbc, 0xb7, 0x6b, 0x64, 0xb0,
	0x92, 0x05, 0x97, 0x20, 0xd4, 0x34, 0x84, 0xb4, 0x90, 0x32, 0x17, 0x2f, 0x8a, 0x80, 0x04, 0xa3,
	0x02, 0xa3, 0x06, 0x67, 0x10, 0x0f, 0x4c, 0xd0, 0x2f, 0x31, 0x37, 0x55, 0xa9, 0x9f, 0x91, 0x4b,
	0x1a, 0x8f, 0xf1, 0x42, 0x05, 0xe8, 0x86, 0x18, 0x29, 0x30, 0x6b, 0x70, 0x1b, 0x79, 0xeb, 0x91,
	0xeb, 0x1f, 0x3d, 0x0c, 0x87, 0xa2, 0xba, 0x28, 0x89, 0x0d, 0x1c, 0x60, 0xc6, 0x80, 0x00, 0x00,
	0x00, 0xff, 0xff, 0xd5, 0x9f, 0x47, 0x25, 0x55, 0x01, 0x00, 0x00,
}
