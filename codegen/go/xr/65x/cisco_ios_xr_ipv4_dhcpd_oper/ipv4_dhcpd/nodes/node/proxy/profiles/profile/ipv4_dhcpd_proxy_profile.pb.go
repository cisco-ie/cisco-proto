/*
Copyright 2019 Cisco Systems

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: ipv4_dhcpd_proxy_profile.proto

package cisco_ios_xr_ipv4_dhcpd_oper_ipv4_dhcpd_nodes_node_proxy_profiles_profile

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Ipv4DhcpdProxyProfile_KEYS struct {
	Nodeid               string   `protobuf:"bytes,1,opt,name=nodeid,proto3" json:"nodeid,omitempty"`
	ProfileName          string   `protobuf:"bytes,2,opt,name=profile_name,json=profileName,proto3" json:"profile_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Ipv4DhcpdProxyProfile_KEYS) Reset()         { *m = Ipv4DhcpdProxyProfile_KEYS{} }
func (m *Ipv4DhcpdProxyProfile_KEYS) String() string { return proto.CompactTextString(m) }
func (*Ipv4DhcpdProxyProfile_KEYS) ProtoMessage()    {}
func (*Ipv4DhcpdProxyProfile_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_5a2de1d7f2f124fa, []int{0}
}

func (m *Ipv4DhcpdProxyProfile_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Ipv4DhcpdProxyProfile_KEYS.Unmarshal(m, b)
}
func (m *Ipv4DhcpdProxyProfile_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Ipv4DhcpdProxyProfile_KEYS.Marshal(b, m, deterministic)
}
func (m *Ipv4DhcpdProxyProfile_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Ipv4DhcpdProxyProfile_KEYS.Merge(m, src)
}
func (m *Ipv4DhcpdProxyProfile_KEYS) XXX_Size() int {
	return xxx_messageInfo_Ipv4DhcpdProxyProfile_KEYS.Size(m)
}
func (m *Ipv4DhcpdProxyProfile_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_Ipv4DhcpdProxyProfile_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_Ipv4DhcpdProxyProfile_KEYS proto.InternalMessageInfo

func (m *Ipv4DhcpdProxyProfile_KEYS) GetNodeid() string {
	if m != nil {
		return m.Nodeid
	}
	return ""
}

func (m *Ipv4DhcpdProxyProfile_KEYS) GetProfileName() string {
	if m != nil {
		return m.ProfileName
	}
	return ""
}

type Ipv4DhcpdProxyVrfReferenceItem struct {
	ProxyReferenceVrfName string   `protobuf:"bytes,1,opt,name=proxy_reference_vrf_name,json=proxyReferenceVrfName,proto3" json:"proxy_reference_vrf_name,omitempty"`
	XXX_NoUnkeyedLiteral  struct{} `json:"-"`
	XXX_unrecognized      []byte   `json:"-"`
	XXX_sizecache         int32    `json:"-"`
}

func (m *Ipv4DhcpdProxyVrfReferenceItem) Reset()         { *m = Ipv4DhcpdProxyVrfReferenceItem{} }
func (m *Ipv4DhcpdProxyVrfReferenceItem) String() string { return proto.CompactTextString(m) }
func (*Ipv4DhcpdProxyVrfReferenceItem) ProtoMessage()    {}
func (*Ipv4DhcpdProxyVrfReferenceItem) Descriptor() ([]byte, []int) {
	return fileDescriptor_5a2de1d7f2f124fa, []int{1}
}

func (m *Ipv4DhcpdProxyVrfReferenceItem) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Ipv4DhcpdProxyVrfReferenceItem.Unmarshal(m, b)
}
func (m *Ipv4DhcpdProxyVrfReferenceItem) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Ipv4DhcpdProxyVrfReferenceItem.Marshal(b, m, deterministic)
}
func (m *Ipv4DhcpdProxyVrfReferenceItem) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Ipv4DhcpdProxyVrfReferenceItem.Merge(m, src)
}
func (m *Ipv4DhcpdProxyVrfReferenceItem) XXX_Size() int {
	return xxx_messageInfo_Ipv4DhcpdProxyVrfReferenceItem.Size(m)
}
func (m *Ipv4DhcpdProxyVrfReferenceItem) XXX_DiscardUnknown() {
	xxx_messageInfo_Ipv4DhcpdProxyVrfReferenceItem.DiscardUnknown(m)
}

var xxx_messageInfo_Ipv4DhcpdProxyVrfReferenceItem proto.InternalMessageInfo

func (m *Ipv4DhcpdProxyVrfReferenceItem) GetProxyReferenceVrfName() string {
	if m != nil {
		return m.ProxyReferenceVrfName
	}
	return ""
}

type Ipv4DhcpdProxyVrfReferenceEntry struct {
	Ipv4DhcpdProxyVrfReference []*Ipv4DhcpdProxyVrfReferenceItem `protobuf:"bytes,1,rep,name=ipv4_dhcpd_proxy_vrf_reference,json=ipv4DhcpdProxyVrfReference,proto3" json:"ipv4_dhcpd_proxy_vrf_reference,omitempty"`
	XXX_NoUnkeyedLiteral       struct{}                          `json:"-"`
	XXX_unrecognized           []byte                            `json:"-"`
	XXX_sizecache              int32                             `json:"-"`
}

func (m *Ipv4DhcpdProxyVrfReferenceEntry) Reset()         { *m = Ipv4DhcpdProxyVrfReferenceEntry{} }
func (m *Ipv4DhcpdProxyVrfReferenceEntry) String() string { return proto.CompactTextString(m) }
func (*Ipv4DhcpdProxyVrfReferenceEntry) ProtoMessage()    {}
func (*Ipv4DhcpdProxyVrfReferenceEntry) Descriptor() ([]byte, []int) {
	return fileDescriptor_5a2de1d7f2f124fa, []int{2}
}

func (m *Ipv4DhcpdProxyVrfReferenceEntry) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Ipv4DhcpdProxyVrfReferenceEntry.Unmarshal(m, b)
}
func (m *Ipv4DhcpdProxyVrfReferenceEntry) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Ipv4DhcpdProxyVrfReferenceEntry.Marshal(b, m, deterministic)
}
func (m *Ipv4DhcpdProxyVrfReferenceEntry) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Ipv4DhcpdProxyVrfReferenceEntry.Merge(m, src)
}
func (m *Ipv4DhcpdProxyVrfReferenceEntry) XXX_Size() int {
	return xxx_messageInfo_Ipv4DhcpdProxyVrfReferenceEntry.Size(m)
}
func (m *Ipv4DhcpdProxyVrfReferenceEntry) XXX_DiscardUnknown() {
	xxx_messageInfo_Ipv4DhcpdProxyVrfReferenceEntry.DiscardUnknown(m)
}

var xxx_messageInfo_Ipv4DhcpdProxyVrfReferenceEntry proto.InternalMessageInfo

func (m *Ipv4DhcpdProxyVrfReferenceEntry) GetIpv4DhcpdProxyVrfReference() []*Ipv4DhcpdProxyVrfReferenceItem {
	if m != nil {
		return m.Ipv4DhcpdProxyVrfReference
	}
	return nil
}

type Ipv4DhcpdProxyInterfaceReferenceItem struct {
	ProxyReferenceInterfaceName string   `protobuf:"bytes,1,opt,name=proxy_reference_interface_name,json=proxyReferenceInterfaceName,proto3" json:"proxy_reference_interface_name,omitempty"`
	XXX_NoUnkeyedLiteral        struct{} `json:"-"`
	XXX_unrecognized            []byte   `json:"-"`
	XXX_sizecache               int32    `json:"-"`
}

func (m *Ipv4DhcpdProxyInterfaceReferenceItem) Reset()         { *m = Ipv4DhcpdProxyInterfaceReferenceItem{} }
func (m *Ipv4DhcpdProxyInterfaceReferenceItem) String() string { return proto.CompactTextString(m) }
func (*Ipv4DhcpdProxyInterfaceReferenceItem) ProtoMessage()    {}
func (*Ipv4DhcpdProxyInterfaceReferenceItem) Descriptor() ([]byte, []int) {
	return fileDescriptor_5a2de1d7f2f124fa, []int{3}
}

func (m *Ipv4DhcpdProxyInterfaceReferenceItem) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Ipv4DhcpdProxyInterfaceReferenceItem.Unmarshal(m, b)
}
func (m *Ipv4DhcpdProxyInterfaceReferenceItem) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Ipv4DhcpdProxyInterfaceReferenceItem.Marshal(b, m, deterministic)
}
func (m *Ipv4DhcpdProxyInterfaceReferenceItem) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Ipv4DhcpdProxyInterfaceReferenceItem.Merge(m, src)
}
func (m *Ipv4DhcpdProxyInterfaceReferenceItem) XXX_Size() int {
	return xxx_messageInfo_Ipv4DhcpdProxyInterfaceReferenceItem.Size(m)
}
func (m *Ipv4DhcpdProxyInterfaceReferenceItem) XXX_DiscardUnknown() {
	xxx_messageInfo_Ipv4DhcpdProxyInterfaceReferenceItem.DiscardUnknown(m)
}

var xxx_messageInfo_Ipv4DhcpdProxyInterfaceReferenceItem proto.InternalMessageInfo

func (m *Ipv4DhcpdProxyInterfaceReferenceItem) GetProxyReferenceInterfaceName() string {
	if m != nil {
		return m.ProxyReferenceInterfaceName
	}
	return ""
}

type Ipv4DhcpdProxyInterfaceReferenceEntry struct {
	Ipv4DhcpdProxyInterfaceReference []*Ipv4DhcpdProxyInterfaceReferenceItem `protobuf:"bytes,1,rep,name=ipv4_dhcpd_proxy_interface_reference,json=ipv4DhcpdProxyInterfaceReference,proto3" json:"ipv4_dhcpd_proxy_interface_reference,omitempty"`
	XXX_NoUnkeyedLiteral             struct{}                                `json:"-"`
	XXX_unrecognized                 []byte                                  `json:"-"`
	XXX_sizecache                    int32                                   `json:"-"`
}

func (m *Ipv4DhcpdProxyInterfaceReferenceEntry) Reset()         { *m = Ipv4DhcpdProxyInterfaceReferenceEntry{} }
func (m *Ipv4DhcpdProxyInterfaceReferenceEntry) String() string { return proto.CompactTextString(m) }
func (*Ipv4DhcpdProxyInterfaceReferenceEntry) ProtoMessage()    {}
func (*Ipv4DhcpdProxyInterfaceReferenceEntry) Descriptor() ([]byte, []int) {
	return fileDescriptor_5a2de1d7f2f124fa, []int{4}
}

func (m *Ipv4DhcpdProxyInterfaceReferenceEntry) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Ipv4DhcpdProxyInterfaceReferenceEntry.Unmarshal(m, b)
}
func (m *Ipv4DhcpdProxyInterfaceReferenceEntry) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Ipv4DhcpdProxyInterfaceReferenceEntry.Marshal(b, m, deterministic)
}
func (m *Ipv4DhcpdProxyInterfaceReferenceEntry) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Ipv4DhcpdProxyInterfaceReferenceEntry.Merge(m, src)
}
func (m *Ipv4DhcpdProxyInterfaceReferenceEntry) XXX_Size() int {
	return xxx_messageInfo_Ipv4DhcpdProxyInterfaceReferenceEntry.Size(m)
}
func (m *Ipv4DhcpdProxyInterfaceReferenceEntry) XXX_DiscardUnknown() {
	xxx_messageInfo_Ipv4DhcpdProxyInterfaceReferenceEntry.DiscardUnknown(m)
}

var xxx_messageInfo_Ipv4DhcpdProxyInterfaceReferenceEntry proto.InternalMessageInfo

func (m *Ipv4DhcpdProxyInterfaceReferenceEntry) GetIpv4DhcpdProxyInterfaceReference() []*Ipv4DhcpdProxyInterfaceReferenceItem {
	if m != nil {
		return m.Ipv4DhcpdProxyInterfaceReference
	}
	return nil
}

type Ipv4DhcpdProxyProfile struct {
	ProfileHelperAddress         []string                               `protobuf:"bytes,50,rep,name=profile_helper_address,json=profileHelperAddress,proto3" json:"profile_helper_address,omitempty"`
	VrfName                      []string                               `protobuf:"bytes,51,rep,name=vrf_name,json=vrfName,proto3" json:"vrf_name,omitempty"`
	GiAddr                       []string                               `protobuf:"bytes,52,rep,name=gi_addr,json=giAddr,proto3" json:"gi_addr,omitempty"`
	IsRelayOptionEnabled         bool                                   `protobuf:"varint,53,opt,name=is_relay_option_enabled,json=isRelayOptionEnabled,proto3" json:"is_relay_option_enabled,omitempty"`
	RelayPolicy                  string                                 `protobuf:"bytes,54,opt,name=relay_policy,json=relayPolicy,proto3" json:"relay_policy,omitempty"`
	RelayAuthenticate            string                                 `protobuf:"bytes,55,opt,name=relay_authenticate,json=relayAuthenticate,proto3" json:"relay_authenticate,omitempty"`
	IsRelayAllowUntrustedEnabled bool                                   `protobuf:"varint,56,opt,name=is_relay_allow_untrusted_enabled,json=isRelayAllowUntrustedEnabled,proto3" json:"is_relay_allow_untrusted_enabled,omitempty"`
	IsRelayOptionvpnEnabled      bool                                   `protobuf:"varint,57,opt,name=is_relay_optionvpn_enabled,json=isRelayOptionvpnEnabled,proto3" json:"is_relay_optionvpn_enabled,omitempty"`
	RelayOptionvpnEnabledMode    string                                 `protobuf:"bytes,58,opt,name=relay_optionvpn_enabled_mode,json=relayOptionvpnEnabledMode,proto3" json:"relay_optionvpn_enabled_mode,omitempty"`
	IsRelayCheck                 bool                                   `protobuf:"varint,59,opt,name=is_relay_check,json=isRelayCheck,proto3" json:"is_relay_check,omitempty"`
	IsMoveAllowed                bool                                   `protobuf:"varint,60,opt,name=is_move_allowed,json=isMoveAllowed,proto3" json:"is_move_allowed,omitempty"`
	ProxyBroadcastFlagPolicy     string                                 `protobuf:"bytes,61,opt,name=proxy_broadcast_flag_policy,json=proxyBroadcastFlagPolicy,proto3" json:"proxy_broadcast_flag_policy,omitempty"`
	VrfReferences                *Ipv4DhcpdProxyVrfReferenceEntry       `protobuf:"bytes,62,opt,name=vrf_references,json=vrfReferences,proto3" json:"vrf_references,omitempty"`
	InterfaceReferences          *Ipv4DhcpdProxyInterfaceReferenceEntry `protobuf:"bytes,63,opt,name=interface_references,json=interfaceReferences,proto3" json:"interface_references,omitempty"`
	ProxyProfileClientLeaseTime  uint32                                 `protobuf:"varint,64,opt,name=proxy_profile_client_lease_time,json=proxyProfileClientLeaseTime,proto3" json:"proxy_profile_client_lease_time,omitempty"`
	ProxyLeaseLimitType          string                                 `protobuf:"bytes,65,opt,name=proxy_lease_limit_type,json=proxyLeaseLimitType,proto3" json:"proxy_lease_limit_type,omitempty"`
	ProxyLeaseLimitCount         uint32                                 `protobuf:"varint,66,opt,name=proxy_lease_limit_count,json=proxyLeaseLimitCount,proto3" json:"proxy_lease_limit_count,omitempty"`
	XXX_NoUnkeyedLiteral         struct{}                               `json:"-"`
	XXX_unrecognized             []byte                                 `json:"-"`
	XXX_sizecache                int32                                  `json:"-"`
}

func (m *Ipv4DhcpdProxyProfile) Reset()         { *m = Ipv4DhcpdProxyProfile{} }
func (m *Ipv4DhcpdProxyProfile) String() string { return proto.CompactTextString(m) }
func (*Ipv4DhcpdProxyProfile) ProtoMessage()    {}
func (*Ipv4DhcpdProxyProfile) Descriptor() ([]byte, []int) {
	return fileDescriptor_5a2de1d7f2f124fa, []int{5}
}

func (m *Ipv4DhcpdProxyProfile) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Ipv4DhcpdProxyProfile.Unmarshal(m, b)
}
func (m *Ipv4DhcpdProxyProfile) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Ipv4DhcpdProxyProfile.Marshal(b, m, deterministic)
}
func (m *Ipv4DhcpdProxyProfile) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Ipv4DhcpdProxyProfile.Merge(m, src)
}
func (m *Ipv4DhcpdProxyProfile) XXX_Size() int {
	return xxx_messageInfo_Ipv4DhcpdProxyProfile.Size(m)
}
func (m *Ipv4DhcpdProxyProfile) XXX_DiscardUnknown() {
	xxx_messageInfo_Ipv4DhcpdProxyProfile.DiscardUnknown(m)
}

var xxx_messageInfo_Ipv4DhcpdProxyProfile proto.InternalMessageInfo

func (m *Ipv4DhcpdProxyProfile) GetProfileHelperAddress() []string {
	if m != nil {
		return m.ProfileHelperAddress
	}
	return nil
}

func (m *Ipv4DhcpdProxyProfile) GetVrfName() []string {
	if m != nil {
		return m.VrfName
	}
	return nil
}

func (m *Ipv4DhcpdProxyProfile) GetGiAddr() []string {
	if m != nil {
		return m.GiAddr
	}
	return nil
}

func (m *Ipv4DhcpdProxyProfile) GetIsRelayOptionEnabled() bool {
	if m != nil {
		return m.IsRelayOptionEnabled
	}
	return false
}

func (m *Ipv4DhcpdProxyProfile) GetRelayPolicy() string {
	if m != nil {
		return m.RelayPolicy
	}
	return ""
}

func (m *Ipv4DhcpdProxyProfile) GetRelayAuthenticate() string {
	if m != nil {
		return m.RelayAuthenticate
	}
	return ""
}

func (m *Ipv4DhcpdProxyProfile) GetIsRelayAllowUntrustedEnabled() bool {
	if m != nil {
		return m.IsRelayAllowUntrustedEnabled
	}
	return false
}

func (m *Ipv4DhcpdProxyProfile) GetIsRelayOptionvpnEnabled() bool {
	if m != nil {
		return m.IsRelayOptionvpnEnabled
	}
	return false
}

func (m *Ipv4DhcpdProxyProfile) GetRelayOptionvpnEnabledMode() string {
	if m != nil {
		return m.RelayOptionvpnEnabledMode
	}
	return ""
}

func (m *Ipv4DhcpdProxyProfile) GetIsRelayCheck() bool {
	if m != nil {
		return m.IsRelayCheck
	}
	return false
}

func (m *Ipv4DhcpdProxyProfile) GetIsMoveAllowed() bool {
	if m != nil {
		return m.IsMoveAllowed
	}
	return false
}

func (m *Ipv4DhcpdProxyProfile) GetProxyBroadcastFlagPolicy() string {
	if m != nil {
		return m.ProxyBroadcastFlagPolicy
	}
	return ""
}

func (m *Ipv4DhcpdProxyProfile) GetVrfReferences() *Ipv4DhcpdProxyVrfReferenceEntry {
	if m != nil {
		return m.VrfReferences
	}
	return nil
}

func (m *Ipv4DhcpdProxyProfile) GetInterfaceReferences() *Ipv4DhcpdProxyInterfaceReferenceEntry {
	if m != nil {
		return m.InterfaceReferences
	}
	return nil
}

func (m *Ipv4DhcpdProxyProfile) GetProxyProfileClientLeaseTime() uint32 {
	if m != nil {
		return m.ProxyProfileClientLeaseTime
	}
	return 0
}

func (m *Ipv4DhcpdProxyProfile) GetProxyLeaseLimitType() string {
	if m != nil {
		return m.ProxyLeaseLimitType
	}
	return ""
}

func (m *Ipv4DhcpdProxyProfile) GetProxyLeaseLimitCount() uint32 {
	if m != nil {
		return m.ProxyLeaseLimitCount
	}
	return 0
}

func init() {
	proto.RegisterType((*Ipv4DhcpdProxyProfile_KEYS)(nil), "cisco_ios_xr_ipv4_dhcpd_oper.ipv4_dhcpd.nodes.node.proxy.profiles.profile.ipv4_dhcpd_proxy_profile_KEYS")
	proto.RegisterType((*Ipv4DhcpdProxyVrfReferenceItem)(nil), "cisco_ios_xr_ipv4_dhcpd_oper.ipv4_dhcpd.nodes.node.proxy.profiles.profile.ipv4_dhcpd_proxy_vrf_reference_item")
	proto.RegisterType((*Ipv4DhcpdProxyVrfReferenceEntry)(nil), "cisco_ios_xr_ipv4_dhcpd_oper.ipv4_dhcpd.nodes.node.proxy.profiles.profile.ipv4_dhcpd_proxy_vrf_reference_entry")
	proto.RegisterType((*Ipv4DhcpdProxyInterfaceReferenceItem)(nil), "cisco_ios_xr_ipv4_dhcpd_oper.ipv4_dhcpd.nodes.node.proxy.profiles.profile.ipv4_dhcpd_proxy_interface_reference_item")
	proto.RegisterType((*Ipv4DhcpdProxyInterfaceReferenceEntry)(nil), "cisco_ios_xr_ipv4_dhcpd_oper.ipv4_dhcpd.nodes.node.proxy.profiles.profile.ipv4_dhcpd_proxy_interface_reference_entry")
	proto.RegisterType((*Ipv4DhcpdProxyProfile)(nil), "cisco_ios_xr_ipv4_dhcpd_oper.ipv4_dhcpd.nodes.node.proxy.profiles.profile.ipv4_dhcpd_proxy_profile")
}

func init() { proto.RegisterFile("ipv4_dhcpd_proxy_profile.proto", fileDescriptor_5a2de1d7f2f124fa) }

var fileDescriptor_5a2de1d7f2f124fa = []byte{
	// 742 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x55, 0xdb, 0x4e, 0xdc, 0x46,
	0x18, 0x96, 0x8b, 0xc4, 0x61, 0x38, 0x54, 0x1d, 0xb6, 0x30, 0x50, 0x4a, 0x5d, 0x8a, 0xaa, 0x6d,
	0xa5, 0xee, 0x05, 0x87, 0xd2, 0x96, 0x52, 0xba, 0x2c, 0xa0, 0xa0, 0x40, 0x82, 0x1c, 0x82, 0x94,
	0x5c, 0x64, 0x64, 0xec, 0x7f, 0x77, 0x47, 0xb1, 0x3d, 0xd6, 0xcc, 0xac, 0xc3, 0xbe, 0x48, 0x9e,
	0x21, 0xd7, 0x79, 0x86, 0x3c, 0x43, 0x6e, 0xf2, 0x18, 0x79, 0x81, 0xc8, 0xbf, 0xed, 0x3d, 0xaf,
	0xc2, 0x45, 0xc2, 0xcd, 0x6a, 0xfd, 0x7f, 0xdf, 0x7f, 0xfa, 0x3c, 0xdf, 0x98, 0xac, 0x8b, 0x38,
	0xd9, 0xe1, 0x7e, 0xd3, 0x8b, 0x7d, 0x1e, 0x2b, 0x79, 0xdb, 0x4e, 0x7f, 0xeb, 0x22, 0x80, 0x4a,
	0xac, 0xa4, 0x91, 0xf4, 0xcc, 0x13, 0xda, 0x93, 0x5c, 0x48, 0xcd, 0x6f, 0x15, 0xef, 0x21, 0xcb,
	0x18, 0x54, 0xa5, 0xfb, 0x5c, 0x89, 0xa4, 0x0f, 0x1a, 0x7f, 0x2b, 0x58, 0xa7, 0x92, 0xd7, 0xd1,
	0xc5, 0x9f, 0x8d, 0xe7, 0xe4, 0xc7, 0x71, 0xcd, 0xf8, 0xc3, 0x93, 0x67, 0x4f, 0xe8, 0x12, 0x99,
	0x4c, 0xf3, 0x85, 0xcf, 0x2c, 0xdb, 0x2a, 0xcf, 0x38, 0xf9, 0x13, 0xfd, 0x99, 0xcc, 0x15, 0xbc,
	0xc8, 0x0d, 0x81, 0x7d, 0x83, 0xe8, 0x6c, 0x1e, 0x7b, 0xe4, 0x86, 0xb0, 0xf1, 0x82, 0xfc, 0x32,
	0x54, 0x3b, 0x51, 0x75, 0xae, 0xa0, 0x0e, 0x0a, 0x22, 0x0f, 0xb8, 0x30, 0x10, 0xd2, 0x3d, 0xc2,
	0x32, 0xac, 0x1b, 0x4f, 0x59, 0x58, 0x35, 0xeb, 0xf9, 0x3d, 0xe2, 0x4e, 0x01, 0x5f, 0xab, 0x3a,
	0xd6, 0xff, 0x60, 0x91, 0xcd, 0xcf, 0x34, 0x80, 0xc8, 0xa8, 0x36, 0x7d, 0x6b, 0x8d, 0x90, 0xb4,
	0x8f, 0xc8, 0x2c, 0x7b, 0xa2, 0x3c, 0xbb, 0x15, 0x55, 0xbe, 0x98, 0xb2, 0x95, 0x3b, 0xac, 0xee,
	0xac, 0xa6, 0xa4, 0xe3, 0x94, 0x73, 0x99, 0x52, 0xae, 0x55, 0xbd, 0xb3, 0xe4, 0x46, 0x4c, 0x7e,
	0x1b, 0x2a, 0x21, 0x22, 0x03, 0xaa, 0xee, 0x7a, 0x30, 0xa8, 0x61, 0x8d, 0xac, 0x0f, 0x6a, 0xd8,
	0xe5, 0xf6, 0x28, 0xf9, 0x43, 0xbf, 0x92, 0x67, 0x05, 0x07, 0xf5, 0xfc, 0x68, 0x91, 0xdf, 0xef,
	0xd4, 0x32, 0x53, 0xf5, 0xdd, 0x28, 0xf9, 0x47, 0xd0, 0x73, 0x6d, 0xcd, 0xd7, 0xd4, 0x76, 0x9c,
	0x30, 0x8e, 0xdd, 0xaf, 0x70, 0x67, 0xe1, 0xae, 0xce, 0xef, 0xa7, 0x09, 0x1b, 0x67, 0x01, 0xba,
	0x43, 0x96, 0x8a, 0x53, 0xde, 0x84, 0x20, 0x06, 0xc5, 0x5d, 0xdf, 0x57, 0xa0, 0x35, 0xdb, 0xb2,
	0x27, 0xca, 0x33, 0x4e, 0x29, 0x47, 0x1f, 0x20, 0x58, 0xcd, 0x30, 0xba, 0x42, 0xa6, 0x3b, 0x27,
	0x78, 0x1b, 0x79, 0x53, 0x49, 0x76, 0x66, 0xe9, 0x32, 0x99, 0x6a, 0x08, 0x2c, 0xc2, 0x76, 0x10,
	0x99, 0x6c, 0x88, 0x34, 0x8d, 0xee, 0x92, 0x65, 0xa1, 0xb9, 0x82, 0xc0, 0x6d, 0x73, 0x19, 0x1b,
	0x21, 0x23, 0x0e, 0x91, 0x7b, 0x13, 0x80, 0xcf, 0x76, 0x6d, 0xab, 0x3c, 0xed, 0x94, 0x84, 0x76,
	0x52, 0xf4, 0x31, 0x82, 0x27, 0x19, 0x96, 0xda, 0x30, 0xcb, 0x89, 0x65, 0x20, 0xbc, 0x36, 0xfb,
	0x33, 0xb3, 0x21, 0xc6, 0x2e, 0x31, 0x44, 0xff, 0x20, 0x34, 0xa3, 0xb8, 0x2d, 0xd3, 0x84, 0xc8,
	0x08, 0xcf, 0x35, 0xc0, 0xf6, 0x90, 0xf8, 0x1d, 0x22, 0xd5, 0x1e, 0x80, 0x9e, 0x12, 0xbb, 0x33,
	0x88, 0x1b, 0x04, 0xf2, 0x15, 0x6f, 0x45, 0x46, 0xb5, 0xb4, 0x01, 0xbf, 0x33, 0xd1, 0x5f, 0x38,
	0xd1, 0x5a, 0x3e, 0x51, 0x35, 0x65, 0x3d, 0x2d, 0x48, 0xc5, 0x64, 0xfb, 0x64, 0x75, 0x60, 0xa1,
	0x24, 0xee, 0xee, 0xf4, 0x37, 0x56, 0x58, 0xee, 0xdb, 0x29, 0x89, 0x3b, 0x6b, 0x1d, 0x92, 0xb5,
	0x31, 0x99, 0x3c, 0x94, 0x3e, 0xb0, 0x7f, 0x70, 0xfa, 0x15, 0x35, 0x2a, 0xf9, 0x42, 0xfa, 0x40,
	0x37, 0xc9, 0x42, 0xa7, 0xbb, 0xd7, 0x04, 0xef, 0x25, 0xdb, 0xc7, 0x8e, 0x73, 0x79, 0xc7, 0x5a,
	0x1a, 0xa3, 0xbf, 0x92, 0x6f, 0x85, 0xe6, 0xa1, 0x4c, 0x20, 0x5b, 0x15, 0x7c, 0xf6, 0x2f, 0xd2,
	0xe6, 0x85, 0xbe, 0x90, 0x09, 0x54, 0xb3, 0x20, 0x3d, 0x20, 0x99, 0x71, 0xf8, 0x8d, 0x92, 0xae,
	0xef, 0xb9, 0xda, 0xf0, 0x7a, 0xe0, 0x36, 0x0a, 0xd1, 0x0f, 0x70, 0x9a, 0xec, 0x16, 0x3b, 0x2a,
	0x18, 0xa7, 0x81, 0xdb, 0xc8, 0xdf, 0xc0, 0x6b, 0x8b, 0x2c, 0xf4, 0xb9, 0x5f, 0xb3, 0xff, 0x6c,
	0xab, 0x3c, 0xbb, 0x25, 0xef, 0xef, 0xbe, 0x41, 0xcf, 0x3a, 0xf3, 0x49, 0xcf, 0x15, 0xa3, 0xe9,
	0x1b, 0x8b, 0x94, 0x46, 0x58, 0x47, 0xb3, 0x43, 0x1c, 0xaf, 0x75, 0xdf, 0x96, 0xcd, 0x86, 0x5c,
	0x14, 0x43, 0x2e, 0xd5, 0xf4, 0x98, 0xfc, 0xd4, 0xff, 0x75, 0xf2, 0x02, 0x01, 0x91, 0xe1, 0x01,
	0xb8, 0x1a, 0xb8, 0x11, 0x21, 0xb0, 0xff, 0x6d, 0xab, 0x3c, 0x9f, 0x5f, 0x71, 0x97, 0x19, 0xab,
	0x86, 0xa4, 0xf3, 0x94, 0x73, 0x25, 0x42, 0xa0, 0xdb, 0xe8, 0xe7, 0xdb, 0x76, 0x9e, 0x16, 0x88,
	0x50, 0x18, 0x6e, 0xda, 0x31, 0xb0, 0x2a, 0xbe, 0xc3, 0x45, 0x44, 0x91, 0x7f, 0x9e, 0x62, 0x57,
	0xed, 0x18, 0x52, 0x6b, 0x0e, 0x27, 0x79, 0xb2, 0x15, 0x19, 0x76, 0x84, 0x2d, 0x4b, 0x03, 0x59,
	0xb5, 0x14, 0xbb, 0x99, 0xc4, 0x8f, 0xf5, 0xf6, 0xa7, 0x00, 0x00, 0x00, 0xff, 0xff, 0x6d, 0x08,
	0x9e, 0xec, 0xce, 0x07, 0x00, 0x00,
}
