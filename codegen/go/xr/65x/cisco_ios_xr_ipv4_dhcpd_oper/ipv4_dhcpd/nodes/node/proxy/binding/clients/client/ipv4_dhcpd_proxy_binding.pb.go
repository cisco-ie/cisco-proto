/*
Copyright 2019 Cisco Systems

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: ipv4_dhcpd_proxy_binding.proto

package cisco_ios_xr_ipv4_dhcpd_oper_ipv4_dhcpd_nodes_node_proxy_binding_clients_client

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Ipv4DhcpdProxyBinding_KEYS struct {
	Nodeid               string   `protobuf:"bytes,1,opt,name=nodeid,proto3" json:"nodeid,omitempty"`
	ClientId             string   `protobuf:"bytes,2,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Ipv4DhcpdProxyBinding_KEYS) Reset()         { *m = Ipv4DhcpdProxyBinding_KEYS{} }
func (m *Ipv4DhcpdProxyBinding_KEYS) String() string { return proto.CompactTextString(m) }
func (*Ipv4DhcpdProxyBinding_KEYS) ProtoMessage()    {}
func (*Ipv4DhcpdProxyBinding_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_eef22acb6c976c44, []int{0}
}

func (m *Ipv4DhcpdProxyBinding_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Ipv4DhcpdProxyBinding_KEYS.Unmarshal(m, b)
}
func (m *Ipv4DhcpdProxyBinding_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Ipv4DhcpdProxyBinding_KEYS.Marshal(b, m, deterministic)
}
func (m *Ipv4DhcpdProxyBinding_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Ipv4DhcpdProxyBinding_KEYS.Merge(m, src)
}
func (m *Ipv4DhcpdProxyBinding_KEYS) XXX_Size() int {
	return xxx_messageInfo_Ipv4DhcpdProxyBinding_KEYS.Size(m)
}
func (m *Ipv4DhcpdProxyBinding_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_Ipv4DhcpdProxyBinding_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_Ipv4DhcpdProxyBinding_KEYS proto.InternalMessageInfo

func (m *Ipv4DhcpdProxyBinding_KEYS) GetNodeid() string {
	if m != nil {
		return m.Nodeid
	}
	return ""
}

func (m *Ipv4DhcpdProxyBinding_KEYS) GetClientId() string {
	if m != nil {
		return m.ClientId
	}
	return ""
}

type Ipv4DhcpdProxyBinding struct {
	ClientIdXr              string   `protobuf:"bytes,50,opt,name=client_id_xr,json=clientIdXr,proto3" json:"client_id_xr,omitempty"`
	MacAddress              string   `protobuf:"bytes,51,opt,name=mac_address,json=macAddress,proto3" json:"mac_address,omitempty"`
	VrfName                 string   `protobuf:"bytes,52,opt,name=vrf_name,json=vrfName,proto3" json:"vrf_name,omitempty"`
	ServerVrfName           string   `protobuf:"bytes,53,opt,name=server_vrf_name,json=serverVrfName,proto3" json:"server_vrf_name,omitempty"`
	IpAddress               string   `protobuf:"bytes,54,opt,name=ip_address,json=ipAddress,proto3" json:"ip_address,omitempty"`
	ClientGiAddr            string   `protobuf:"bytes,55,opt,name=client_gi_addr,json=clientGiAddr,proto3" json:"client_gi_addr,omitempty"`
	ToServerGiAddr          string   `protobuf:"bytes,56,opt,name=to_server_gi_addr,json=toServerGiAddr,proto3" json:"to_server_gi_addr,omitempty"`
	ServerIpAddress         string   `protobuf:"bytes,57,opt,name=server_ip_address,json=serverIpAddress,proto3" json:"server_ip_address,omitempty"`
	ReplyServerIpAddress    string   `protobuf:"bytes,58,opt,name=reply_server_ip_address,json=replyServerIpAddress,proto3" json:"reply_server_ip_address,omitempty"`
	LeaseTime               uint32   `protobuf:"varint,59,opt,name=lease_time,json=leaseTime,proto3" json:"lease_time,omitempty"`
	RemainingLeaseTime      uint32   `protobuf:"varint,60,opt,name=remaining_lease_time,json=remainingLeaseTime,proto3" json:"remaining_lease_time,omitempty"`
	State                   string   `protobuf:"bytes,61,opt,name=state,proto3" json:"state,omitempty"`
	InterfaceName           string   `protobuf:"bytes,62,opt,name=interface_name,json=interfaceName,proto3" json:"interface_name,omitempty"`
	AccessVrfName           string   `protobuf:"bytes,63,opt,name=access_vrf_name,json=accessVrfName,proto3" json:"access_vrf_name,omitempty"`
	ProxyBindingOuterTag    uint32   `protobuf:"varint,64,opt,name=proxy_binding_outer_tag,json=proxyBindingOuterTag,proto3" json:"proxy_binding_outer_tag,omitempty"`
	ProxyBindingInnerTag    uint32   `protobuf:"varint,65,opt,name=proxy_binding_inner_tag,json=proxyBindingInnerTag,proto3" json:"proxy_binding_inner_tag,omitempty"`
	ProfileName             string   `protobuf:"bytes,66,opt,name=profile_name,json=profileName,proto3" json:"profile_name,omitempty"`
	IsNakNextRenew          bool     `protobuf:"varint,67,opt,name=is_nak_next_renew,json=isNakNextRenew,proto3" json:"is_nak_next_renew,omitempty"`
	SubscriberLabel         uint32   `protobuf:"varint,68,opt,name=subscriber_label,json=subscriberLabel,proto3" json:"subscriber_label,omitempty"`
	OldSubscriberLabel      uint32   `protobuf:"varint,69,opt,name=old_subscriber_label,json=oldSubscriberLabel,proto3" json:"old_subscriber_label,omitempty"`
	SubscriberInterfaceName string   `protobuf:"bytes,70,opt,name=subscriber_interface_name,json=subscriberInterfaceName,proto3" json:"subscriber_interface_name,omitempty"`
	RxCircuitId             string   `protobuf:"bytes,71,opt,name=rx_circuit_id,json=rxCircuitId,proto3" json:"rx_circuit_id,omitempty"`
	TxCircuitId             string   `protobuf:"bytes,72,opt,name=tx_circuit_id,json=txCircuitId,proto3" json:"tx_circuit_id,omitempty"`
	RxRemoteId              string   `protobuf:"bytes,73,opt,name=rx_remote_id,json=rxRemoteId,proto3" json:"rx_remote_id,omitempty"`
	TxRemoteId              string   `protobuf:"bytes,74,opt,name=tx_remote_id,json=txRemoteId,proto3" json:"tx_remote_id,omitempty"`
	RxVsiso                 string   `protobuf:"bytes,75,opt,name=rx_vsiso,json=rxVsiso,proto3" json:"rx_vsiso,omitempty"`
	TxVsiso                 string   `protobuf:"bytes,76,opt,name=tx_vsiso,json=txVsiso,proto3" json:"tx_vsiso,omitempty"`
	IsAuthReceived          bool     `protobuf:"varint,77,opt,name=is_auth_received,json=isAuthReceived,proto3" json:"is_auth_received,omitempty"`
	IsMblSubscriber         bool     `protobuf:"varint,78,opt,name=is_mbl_subscriber,json=isMblSubscriber,proto3" json:"is_mbl_subscriber,omitempty"`
	ParamRequest            string   `protobuf:"bytes,79,opt,name=param_request,json=paramRequest,proto3" json:"param_request,omitempty"`
	ParamResponse           string   `protobuf:"bytes,80,opt,name=param_response,json=paramResponse,proto3" json:"param_response,omitempty"`
	SessionStartTimeEpoch   uint64   `protobuf:"varint,81,opt,name=session_start_time_epoch,json=sessionStartTimeEpoch,proto3" json:"session_start_time_epoch,omitempty"`
	SrgState                uint32   `protobuf:"varint,82,opt,name=srg_state,json=srgState,proto3" json:"srg_state,omitempty"`
	EventHistory            []uint32 `protobuf:"varint,83,rep,packed,name=event_history,json=eventHistory,proto3" json:"event_history,omitempty"`
	XXX_NoUnkeyedLiteral    struct{} `json:"-"`
	XXX_unrecognized        []byte   `json:"-"`
	XXX_sizecache           int32    `json:"-"`
}

func (m *Ipv4DhcpdProxyBinding) Reset()         { *m = Ipv4DhcpdProxyBinding{} }
func (m *Ipv4DhcpdProxyBinding) String() string { return proto.CompactTextString(m) }
func (*Ipv4DhcpdProxyBinding) ProtoMessage()    {}
func (*Ipv4DhcpdProxyBinding) Descriptor() ([]byte, []int) {
	return fileDescriptor_eef22acb6c976c44, []int{1}
}

func (m *Ipv4DhcpdProxyBinding) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Ipv4DhcpdProxyBinding.Unmarshal(m, b)
}
func (m *Ipv4DhcpdProxyBinding) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Ipv4DhcpdProxyBinding.Marshal(b, m, deterministic)
}
func (m *Ipv4DhcpdProxyBinding) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Ipv4DhcpdProxyBinding.Merge(m, src)
}
func (m *Ipv4DhcpdProxyBinding) XXX_Size() int {
	return xxx_messageInfo_Ipv4DhcpdProxyBinding.Size(m)
}
func (m *Ipv4DhcpdProxyBinding) XXX_DiscardUnknown() {
	xxx_messageInfo_Ipv4DhcpdProxyBinding.DiscardUnknown(m)
}

var xxx_messageInfo_Ipv4DhcpdProxyBinding proto.InternalMessageInfo

func (m *Ipv4DhcpdProxyBinding) GetClientIdXr() string {
	if m != nil {
		return m.ClientIdXr
	}
	return ""
}

func (m *Ipv4DhcpdProxyBinding) GetMacAddress() string {
	if m != nil {
		return m.MacAddress
	}
	return ""
}

func (m *Ipv4DhcpdProxyBinding) GetVrfName() string {
	if m != nil {
		return m.VrfName
	}
	return ""
}

func (m *Ipv4DhcpdProxyBinding) GetServerVrfName() string {
	if m != nil {
		return m.ServerVrfName
	}
	return ""
}

func (m *Ipv4DhcpdProxyBinding) GetIpAddress() string {
	if m != nil {
		return m.IpAddress
	}
	return ""
}

func (m *Ipv4DhcpdProxyBinding) GetClientGiAddr() string {
	if m != nil {
		return m.ClientGiAddr
	}
	return ""
}

func (m *Ipv4DhcpdProxyBinding) GetToServerGiAddr() string {
	if m != nil {
		return m.ToServerGiAddr
	}
	return ""
}

func (m *Ipv4DhcpdProxyBinding) GetServerIpAddress() string {
	if m != nil {
		return m.ServerIpAddress
	}
	return ""
}

func (m *Ipv4DhcpdProxyBinding) GetReplyServerIpAddress() string {
	if m != nil {
		return m.ReplyServerIpAddress
	}
	return ""
}

func (m *Ipv4DhcpdProxyBinding) GetLeaseTime() uint32 {
	if m != nil {
		return m.LeaseTime
	}
	return 0
}

func (m *Ipv4DhcpdProxyBinding) GetRemainingLeaseTime() uint32 {
	if m != nil {
		return m.RemainingLeaseTime
	}
	return 0
}

func (m *Ipv4DhcpdProxyBinding) GetState() string {
	if m != nil {
		return m.State
	}
	return ""
}

func (m *Ipv4DhcpdProxyBinding) GetInterfaceName() string {
	if m != nil {
		return m.InterfaceName
	}
	return ""
}

func (m *Ipv4DhcpdProxyBinding) GetAccessVrfName() string {
	if m != nil {
		return m.AccessVrfName
	}
	return ""
}

func (m *Ipv4DhcpdProxyBinding) GetProxyBindingOuterTag() uint32 {
	if m != nil {
		return m.ProxyBindingOuterTag
	}
	return 0
}

func (m *Ipv4DhcpdProxyBinding) GetProxyBindingInnerTag() uint32 {
	if m != nil {
		return m.ProxyBindingInnerTag
	}
	return 0
}

func (m *Ipv4DhcpdProxyBinding) GetProfileName() string {
	if m != nil {
		return m.ProfileName
	}
	return ""
}

func (m *Ipv4DhcpdProxyBinding) GetIsNakNextRenew() bool {
	if m != nil {
		return m.IsNakNextRenew
	}
	return false
}

func (m *Ipv4DhcpdProxyBinding) GetSubscriberLabel() uint32 {
	if m != nil {
		return m.SubscriberLabel
	}
	return 0
}

func (m *Ipv4DhcpdProxyBinding) GetOldSubscriberLabel() uint32 {
	if m != nil {
		return m.OldSubscriberLabel
	}
	return 0
}

func (m *Ipv4DhcpdProxyBinding) GetSubscriberInterfaceName() string {
	if m != nil {
		return m.SubscriberInterfaceName
	}
	return ""
}

func (m *Ipv4DhcpdProxyBinding) GetRxCircuitId() string {
	if m != nil {
		return m.RxCircuitId
	}
	return ""
}

func (m *Ipv4DhcpdProxyBinding) GetTxCircuitId() string {
	if m != nil {
		return m.TxCircuitId
	}
	return ""
}

func (m *Ipv4DhcpdProxyBinding) GetRxRemoteId() string {
	if m != nil {
		return m.RxRemoteId
	}
	return ""
}

func (m *Ipv4DhcpdProxyBinding) GetTxRemoteId() string {
	if m != nil {
		return m.TxRemoteId
	}
	return ""
}

func (m *Ipv4DhcpdProxyBinding) GetRxVsiso() string {
	if m != nil {
		return m.RxVsiso
	}
	return ""
}

func (m *Ipv4DhcpdProxyBinding) GetTxVsiso() string {
	if m != nil {
		return m.TxVsiso
	}
	return ""
}

func (m *Ipv4DhcpdProxyBinding) GetIsAuthReceived() bool {
	if m != nil {
		return m.IsAuthReceived
	}
	return false
}

func (m *Ipv4DhcpdProxyBinding) GetIsMblSubscriber() bool {
	if m != nil {
		return m.IsMblSubscriber
	}
	return false
}

func (m *Ipv4DhcpdProxyBinding) GetParamRequest() string {
	if m != nil {
		return m.ParamRequest
	}
	return ""
}

func (m *Ipv4DhcpdProxyBinding) GetParamResponse() string {
	if m != nil {
		return m.ParamResponse
	}
	return ""
}

func (m *Ipv4DhcpdProxyBinding) GetSessionStartTimeEpoch() uint64 {
	if m != nil {
		return m.SessionStartTimeEpoch
	}
	return 0
}

func (m *Ipv4DhcpdProxyBinding) GetSrgState() uint32 {
	if m != nil {
		return m.SrgState
	}
	return 0
}

func (m *Ipv4DhcpdProxyBinding) GetEventHistory() []uint32 {
	if m != nil {
		return m.EventHistory
	}
	return nil
}

func init() {
	proto.RegisterType((*Ipv4DhcpdProxyBinding_KEYS)(nil), "cisco_ios_xr_ipv4_dhcpd_oper.ipv4_dhcpd.nodes.node.proxy.binding.clients.client.ipv4_dhcpd_proxy_binding_KEYS")
	proto.RegisterType((*Ipv4DhcpdProxyBinding)(nil), "cisco_ios_xr_ipv4_dhcpd_oper.ipv4_dhcpd.nodes.node.proxy.binding.clients.client.ipv4_dhcpd_proxy_binding")
}

func init() { proto.RegisterFile("ipv4_dhcpd_proxy_binding.proto", fileDescriptor_eef22acb6c976c44) }

var fileDescriptor_eef22acb6c976c44 = []byte{
	// 784 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x95, 0x6d, 0x6f, 0x1b, 0x45,
	0x10, 0xc7, 0x65, 0x1e, 0x8a, 0x33, 0x8d, 0x93, 0xe6, 0x14, 0xc8, 0x46, 0x28, 0x60, 0x52, 0x40,
	0x0e, 0x2f, 0x2c, 0x44, 0x1b, 0x0a, 0xe5, 0x31, 0x2d, 0xa1, 0x35, 0x4d, 0x1d, 0x38, 0x47, 0x15,
	0xbc, 0x5a, 0xad, 0xef, 0xc6, 0xf6, 0xaa, 0x77, 0xb7, 0xc7, 0xec, 0xda, 0x5c, 0x3e, 0x2c, 0xdf,
	0xa5, 0xda, 0xd9, 0x3b, 0xdb, 0x89, 0xd5, 0x37, 0xb6, 0xf6, 0xff, 0xff, 0xcd, 0xce, 0x78, 0xe6,
	0xe6, 0x0c, 0x9f, 0xe8, 0x72, 0xf1, 0x50, 0xa6, 0xb3, 0xa4, 0x4c, 0x65, 0x49, 0xa6, 0xba, 0x96,
	0x63, 0x5d, 0xa4, 0xba, 0x98, 0xf6, 0x4b, 0x32, 0xce, 0x44, 0x97, 0x89, 0xb6, 0x89, 0x91, 0xda,
	0x58, 0x59, 0x91, 0x5c, 0x83, 0x4d, 0x89, 0xd4, 0x5f, 0x9d, 0xfb, 0x85, 0x49, 0xd1, 0xf2, 0x67,
	0x9f, 0xef, 0xe9, 0x37, 0xf7, 0x24, 0x99, 0xc6, 0xc2, 0xd9, 0xfa, 0xfb, 0xf8, 0x0a, 0x8e, 0xde,
	0x96, 0x52, 0xbe, 0x38, 0xff, 0x67, 0x14, 0x7d, 0x04, 0x77, 0xfc, 0x2d, 0x3a, 0x15, 0xad, 0x6e,
	0xab, 0xb7, 0x15, 0xd7, 0xa7, 0xe8, 0x63, 0xd8, 0x0a, 0x57, 0x48, 0x9d, 0x8a, 0x77, 0xd8, 0x6a,
	0x07, 0x61, 0x90, 0x1e, 0xff, 0x0f, 0x20, 0xde, 0x76, 0x6d, 0xd4, 0x85, 0xed, 0x65, 0xa4, 0xac,
	0x48, 0x7c, 0xc3, 0xc1, 0xd0, 0x04, 0xff, 0x4d, 0xd1, 0xa7, 0x70, 0x37, 0x57, 0x89, 0x54, 0x69,
	0x4a, 0x68, 0xad, 0x78, 0x10, 0x80, 0x5c, 0x25, 0x67, 0x41, 0x89, 0x0e, 0xa1, 0xbd, 0xa0, 0x89,
	0x2c, 0x54, 0x8e, 0xe2, 0x21, 0xbb, 0x1f, 0x2c, 0x68, 0x32, 0x54, 0x39, 0x46, 0x5f, 0xc2, 0xae,
	0x45, 0x5a, 0x20, 0xc9, 0x25, 0x71, 0xca, 0x44, 0x27, 0xc8, 0xaf, 0x6a, 0xee, 0x08, 0x40, 0x97,
	0xcb, 0x14, 0xdf, 0x32, 0xb2, 0xa5, 0xcb, 0x26, 0xc3, 0xe7, 0xb0, 0x53, 0x17, 0x39, 0xd5, 0x4c,
	0x89, 0x47, 0x8c, 0xd4, 0xa5, 0x3f, 0xd3, 0x1e, 0x8c, 0x4e, 0x60, 0xcf, 0x19, 0x59, 0xe7, 0x6b,
	0xc0, 0xef, 0x18, 0xdc, 0x71, 0x66, 0xc4, 0x7a, 0x8d, 0x7e, 0x05, 0x7b, 0x35, 0xb7, 0x96, 0xf6,
	0x7b, 0x46, 0xeb, 0x82, 0x07, 0xcb, 0xe4, 0xa7, 0x70, 0x40, 0x58, 0x66, 0xd7, 0x72, 0x33, 0xe2,
	0x31, 0x47, 0xec, 0xb3, 0x3d, 0xba, 0x15, 0x76, 0x04, 0x90, 0xa1, 0xb2, 0x28, 0x9d, 0xce, 0x51,
	0xfc, 0xd0, 0x6d, 0xf5, 0x3a, 0xf1, 0x16, 0x2b, 0x57, 0x3a, 0xc7, 0xe8, 0x6b, 0xd8, 0x27, 0xcc,
	0x95, 0x2e, 0xfc, 0x6c, 0xd7, 0xc0, 0x1f, 0x19, 0x8c, 0x96, 0xde, 0xc5, 0x32, 0x62, 0x1f, 0xde,
	0xb7, 0x4e, 0x39, 0x14, 0x3f, 0x71, 0xd6, 0x70, 0x88, 0xbe, 0x80, 0x1d, 0x5d, 0x38, 0xa4, 0x89,
	0x4a, 0x30, 0x34, 0xf8, 0xe7, 0xd0, 0xe0, 0xa5, 0xda, 0x0c, 0x42, 0x25, 0x09, 0x5a, 0xbb, 0x1a,
	0xc4, 0x2f, 0x81, 0x0b, 0x72, 0x33, 0x88, 0x53, 0x38, 0xb8, 0xf9, 0xd8, 0x99, 0xb9, 0x43, 0x92,
	0x4e, 0x4d, 0xc5, 0xaf, 0x5c, 0xd9, 0x3e, 0xdb, 0x4f, 0x82, 0x7b, 0xe9, 0xcd, 0x2b, 0x35, 0xdd,
	0x0c, 0xd3, 0x45, 0x51, 0x87, 0x9d, 0x6d, 0x86, 0x0d, 0xbc, 0xe9, 0xc3, 0x3e, 0x83, 0xed, 0x92,
	0xcc, 0x44, 0x67, 0x75, 0xe9, 0x4f, 0xb8, 0xa4, 0xbb, 0xb5, 0xc6, 0x05, 0x9d, 0xc0, 0x9e, 0xb6,
	0xb2, 0x50, 0xaf, 0x65, 0x81, 0x95, 0x93, 0x84, 0x05, 0xfe, 0x27, 0x9e, 0x76, 0x5b, 0xbd, 0x76,
	0xbc, 0xa3, 0xed, 0x50, 0xbd, 0x1e, 0x62, 0xe5, 0x62, 0xaf, 0x46, 0x27, 0x70, 0xcf, 0xce, 0xc7,
	0x36, 0x21, 0x3d, 0x46, 0x92, 0x99, 0x1a, 0x63, 0x26, 0x7e, 0xe3, 0xec, 0xbb, 0x2b, 0xfd, 0xc2,
	0xcb, 0xbe, 0xfb, 0x26, 0x4b, 0xe5, 0x06, 0x7e, 0x1e, 0xba, 0x6f, 0xb2, 0x74, 0x74, 0x2b, 0xe2,
	0x31, 0x1c, 0xae, 0xd1, 0xb7, 0x5a, 0xfe, 0x3b, 0xd7, 0x7d, 0xb0, 0x02, 0x06, 0x37, 0x9a, 0x7f,
	0x0c, 0x1d, 0xaa, 0x64, 0xa2, 0x29, 0x99, 0x6b, 0xde, 0xd0, 0x67, 0xe1, 0x77, 0x52, 0xf5, 0x34,
	0x68, 0x83, 0xd4, 0x33, 0xee, 0x06, 0xf3, 0x3c, 0x30, 0x6e, 0x8d, 0xe9, 0xc2, 0x36, 0x55, 0x92,
	0x30, 0x37, 0x0e, 0x3d, 0x32, 0x08, 0xab, 0x48, 0x55, 0xcc, 0x52, 0x20, 0xdc, 0x3a, 0xf1, 0x47,
	0x20, 0xdc, 0x8a, 0x38, 0x84, 0x36, 0x55, 0x72, 0x61, 0xb5, 0x35, 0xe2, 0x45, 0x58, 0x56, 0xaa,
	0x5e, 0xf9, 0xa3, 0xb7, 0x5c, 0x63, 0x5d, 0x04, 0xcb, 0xd5, 0x56, 0x0f, 0xee, 0x69, 0x2b, 0xd5,
	0xdc, 0xcd, 0x24, 0x61, 0x82, 0x7a, 0x81, 0xa9, 0x78, 0xd9, 0x0c, 0xe1, 0x6c, 0xee, 0x66, 0x71,
	0xad, 0xfa, 0xcd, 0xd2, 0x56, 0xe6, 0xe3, 0x6c, 0xad, 0xb9, 0x62, 0xc8, 0xe8, 0xae, 0xb6, 0x2f,
	0xc7, 0xd9, 0xaa, 0xb1, 0xd1, 0x7d, 0xe8, 0x94, 0x8a, 0x54, 0x2e, 0x09, 0xff, 0x9d, 0xa3, 0x75,
	0xe2, 0x32, 0x6c, 0x35, 0x8b, 0x71, 0xd0, 0xfc, 0x03, 0xde, 0x40, 0xb6, 0x34, 0x85, 0x45, 0xf1,
	0x67, 0x78, 0x70, 0x6b, 0x2a, 0x88, 0xd1, 0x23, 0x10, 0x16, 0xad, 0xd5, 0xa6, 0x90, 0xd6, 0x29,
	0x72, 0xbc, 0x4d, 0x12, 0x4b, 0x93, 0xcc, 0xc4, 0x5f, 0xdd, 0x56, 0xef, 0xbd, 0xf8, 0xc3, 0xda,
	0x1f, 0x79, 0xdb, 0x6f, 0xd4, 0xb9, 0x37, 0xfd, 0xab, 0xd3, 0xd2, 0x54, 0x86, 0xd5, 0x8a, 0x79,
	0xfe, 0x6d, 0x4b, 0xd3, 0x11, 0x6f, 0xd7, 0x7d, 0xe8, 0xe0, 0xc2, 0xbf, 0x77, 0x66, 0xda, 0x3a,
	0x43, 0xd7, 0x62, 0xd4, 0x7d, 0xb7, 0xd7, 0x89, 0xb7, 0x59, 0x7c, 0x1e, 0xb4, 0xf1, 0x1d, 0xfe,
	0x37, 0x78, 0xf0, 0x26, 0x00, 0x00, 0xff, 0xff, 0x3f, 0x9e, 0x38, 0x45, 0x2f, 0x06, 0x00, 0x00,
}
