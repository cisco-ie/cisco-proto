/*
Copyright 2019 Cisco Systems

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: l2vpn_evpn_evi_bgp_rt.proto

package cisco_ios_xr_evpn_oper_evpn_nodes_node_evi_detail_evi_children_route_targets_route_target

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type L2VpnEvpnEviBgpRt_KEYS struct {
	NodeId               string   `protobuf:"bytes,1,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	Evi                  uint32   `protobuf:"varint,2,opt,name=evi,proto3" json:"evi,omitempty"`
	Encapsulation        uint32   `protobuf:"varint,3,opt,name=encapsulation,proto3" json:"encapsulation,omitempty"`
	Role                 string   `protobuf:"bytes,4,opt,name=role,proto3" json:"role,omitempty"`
	Format               string   `protobuf:"bytes,5,opt,name=format,proto3" json:"format,omitempty"`
	As                   uint32   `protobuf:"varint,6,opt,name=as,proto3" json:"as,omitempty"`
	AsIndex              uint32   `protobuf:"varint,7,opt,name=as_index,json=asIndex,proto3" json:"as_index,omitempty"`
	AddrIndex            uint32   `protobuf:"varint,8,opt,name=addr_index,json=addrIndex,proto3" json:"addr_index,omitempty"`
	Address              string   `protobuf:"bytes,9,opt,name=address,proto3" json:"address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *L2VpnEvpnEviBgpRt_KEYS) Reset()         { *m = L2VpnEvpnEviBgpRt_KEYS{} }
func (m *L2VpnEvpnEviBgpRt_KEYS) String() string { return proto.CompactTextString(m) }
func (*L2VpnEvpnEviBgpRt_KEYS) ProtoMessage()    {}
func (*L2VpnEvpnEviBgpRt_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_54c7229cd1c3513f, []int{0}
}

func (m *L2VpnEvpnEviBgpRt_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_L2VpnEvpnEviBgpRt_KEYS.Unmarshal(m, b)
}
func (m *L2VpnEvpnEviBgpRt_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_L2VpnEvpnEviBgpRt_KEYS.Marshal(b, m, deterministic)
}
func (m *L2VpnEvpnEviBgpRt_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_L2VpnEvpnEviBgpRt_KEYS.Merge(m, src)
}
func (m *L2VpnEvpnEviBgpRt_KEYS) XXX_Size() int {
	return xxx_messageInfo_L2VpnEvpnEviBgpRt_KEYS.Size(m)
}
func (m *L2VpnEvpnEviBgpRt_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_L2VpnEvpnEviBgpRt_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_L2VpnEvpnEviBgpRt_KEYS proto.InternalMessageInfo

func (m *L2VpnEvpnEviBgpRt_KEYS) GetNodeId() string {
	if m != nil {
		return m.NodeId
	}
	return ""
}

func (m *L2VpnEvpnEviBgpRt_KEYS) GetEvi() uint32 {
	if m != nil {
		return m.Evi
	}
	return 0
}

func (m *L2VpnEvpnEviBgpRt_KEYS) GetEncapsulation() uint32 {
	if m != nil {
		return m.Encapsulation
	}
	return 0
}

func (m *L2VpnEvpnEviBgpRt_KEYS) GetRole() string {
	if m != nil {
		return m.Role
	}
	return ""
}

func (m *L2VpnEvpnEviBgpRt_KEYS) GetFormat() string {
	if m != nil {
		return m.Format
	}
	return ""
}

func (m *L2VpnEvpnEviBgpRt_KEYS) GetAs() uint32 {
	if m != nil {
		return m.As
	}
	return 0
}

func (m *L2VpnEvpnEviBgpRt_KEYS) GetAsIndex() uint32 {
	if m != nil {
		return m.AsIndex
	}
	return 0
}

func (m *L2VpnEvpnEviBgpRt_KEYS) GetAddrIndex() uint32 {
	if m != nil {
		return m.AddrIndex
	}
	return 0
}

func (m *L2VpnEvpnEviBgpRt_KEYS) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

type L2VpnEvpnEviSummary struct {
	EthernetVpnId        uint32   `protobuf:"varint,1,opt,name=ethernet_vpn_id,json=ethernetVpnId,proto3" json:"ethernet_vpn_id,omitempty"`
	EncapsulationXr      uint32   `protobuf:"varint,2,opt,name=encapsulation_xr,json=encapsulationXr,proto3" json:"encapsulation_xr,omitempty"`
	BdName               string   `protobuf:"bytes,3,opt,name=bd_name,json=bdName,proto3" json:"bd_name,omitempty"`
	Type                 string   `protobuf:"bytes,4,opt,name=type,proto3" json:"type,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *L2VpnEvpnEviSummary) Reset()         { *m = L2VpnEvpnEviSummary{} }
func (m *L2VpnEvpnEviSummary) String() string { return proto.CompactTextString(m) }
func (*L2VpnEvpnEviSummary) ProtoMessage()    {}
func (*L2VpnEvpnEviSummary) Descriptor() ([]byte, []int) {
	return fileDescriptor_54c7229cd1c3513f, []int{1}
}

func (m *L2VpnEvpnEviSummary) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_L2VpnEvpnEviSummary.Unmarshal(m, b)
}
func (m *L2VpnEvpnEviSummary) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_L2VpnEvpnEviSummary.Marshal(b, m, deterministic)
}
func (m *L2VpnEvpnEviSummary) XXX_Merge(src proto.Message) {
	xxx_messageInfo_L2VpnEvpnEviSummary.Merge(m, src)
}
func (m *L2VpnEvpnEviSummary) XXX_Size() int {
	return xxx_messageInfo_L2VpnEvpnEviSummary.Size(m)
}
func (m *L2VpnEvpnEviSummary) XXX_DiscardUnknown() {
	xxx_messageInfo_L2VpnEvpnEviSummary.DiscardUnknown(m)
}

var xxx_messageInfo_L2VpnEvpnEviSummary proto.InternalMessageInfo

func (m *L2VpnEvpnEviSummary) GetEthernetVpnId() uint32 {
	if m != nil {
		return m.EthernetVpnId
	}
	return 0
}

func (m *L2VpnEvpnEviSummary) GetEncapsulationXr() uint32 {
	if m != nil {
		return m.EncapsulationXr
	}
	return 0
}

func (m *L2VpnEvpnEviSummary) GetBdName() string {
	if m != nil {
		return m.BdName
	}
	return ""
}

func (m *L2VpnEvpnEviSummary) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

type L2VpnRt_2ByteAs struct {
	TwoByteAs            uint32   `protobuf:"varint,1,opt,name=two_byte_as,json=twoByteAs,proto3" json:"two_byte_as,omitempty"`
	FourByteIndex        uint32   `protobuf:"varint,2,opt,name=four_byte_index,json=fourByteIndex,proto3" json:"four_byte_index,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *L2VpnRt_2ByteAs) Reset()         { *m = L2VpnRt_2ByteAs{} }
func (m *L2VpnRt_2ByteAs) String() string { return proto.CompactTextString(m) }
func (*L2VpnRt_2ByteAs) ProtoMessage()    {}
func (*L2VpnRt_2ByteAs) Descriptor() ([]byte, []int) {
	return fileDescriptor_54c7229cd1c3513f, []int{2}
}

func (m *L2VpnRt_2ByteAs) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_L2VpnRt_2ByteAs.Unmarshal(m, b)
}
func (m *L2VpnRt_2ByteAs) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_L2VpnRt_2ByteAs.Marshal(b, m, deterministic)
}
func (m *L2VpnRt_2ByteAs) XXX_Merge(src proto.Message) {
	xxx_messageInfo_L2VpnRt_2ByteAs.Merge(m, src)
}
func (m *L2VpnRt_2ByteAs) XXX_Size() int {
	return xxx_messageInfo_L2VpnRt_2ByteAs.Size(m)
}
func (m *L2VpnRt_2ByteAs) XXX_DiscardUnknown() {
	xxx_messageInfo_L2VpnRt_2ByteAs.DiscardUnknown(m)
}

var xxx_messageInfo_L2VpnRt_2ByteAs proto.InternalMessageInfo

func (m *L2VpnRt_2ByteAs) GetTwoByteAs() uint32 {
	if m != nil {
		return m.TwoByteAs
	}
	return 0
}

func (m *L2VpnRt_2ByteAs) GetFourByteIndex() uint32 {
	if m != nil {
		return m.FourByteIndex
	}
	return 0
}

type L2VpnRt_4ByteAs struct {
	FourByteAs           uint32   `protobuf:"varint,1,opt,name=four_byte_as,json=fourByteAs,proto3" json:"four_byte_as,omitempty"`
	TwoByteIndex         uint32   `protobuf:"varint,2,opt,name=two_byte_index,json=twoByteIndex,proto3" json:"two_byte_index,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *L2VpnRt_4ByteAs) Reset()         { *m = L2VpnRt_4ByteAs{} }
func (m *L2VpnRt_4ByteAs) String() string { return proto.CompactTextString(m) }
func (*L2VpnRt_4ByteAs) ProtoMessage()    {}
func (*L2VpnRt_4ByteAs) Descriptor() ([]byte, []int) {
	return fileDescriptor_54c7229cd1c3513f, []int{3}
}

func (m *L2VpnRt_4ByteAs) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_L2VpnRt_4ByteAs.Unmarshal(m, b)
}
func (m *L2VpnRt_4ByteAs) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_L2VpnRt_4ByteAs.Marshal(b, m, deterministic)
}
func (m *L2VpnRt_4ByteAs) XXX_Merge(src proto.Message) {
	xxx_messageInfo_L2VpnRt_4ByteAs.Merge(m, src)
}
func (m *L2VpnRt_4ByteAs) XXX_Size() int {
	return xxx_messageInfo_L2VpnRt_4ByteAs.Size(m)
}
func (m *L2VpnRt_4ByteAs) XXX_DiscardUnknown() {
	xxx_messageInfo_L2VpnRt_4ByteAs.DiscardUnknown(m)
}

var xxx_messageInfo_L2VpnRt_4ByteAs proto.InternalMessageInfo

func (m *L2VpnRt_4ByteAs) GetFourByteAs() uint32 {
	if m != nil {
		return m.FourByteAs
	}
	return 0
}

func (m *L2VpnRt_4ByteAs) GetTwoByteIndex() uint32 {
	if m != nil {
		return m.TwoByteIndex
	}
	return 0
}

type L2VpnRtV4Addr struct {
	Ipv4Address          string   `protobuf:"bytes,1,opt,name=ipv4_address,json=ipv4Address,proto3" json:"ipv4_address,omitempty"`
	TwoByteIndex         uint32   `protobuf:"varint,2,opt,name=two_byte_index,json=twoByteIndex,proto3" json:"two_byte_index,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *L2VpnRtV4Addr) Reset()         { *m = L2VpnRtV4Addr{} }
func (m *L2VpnRtV4Addr) String() string { return proto.CompactTextString(m) }
func (*L2VpnRtV4Addr) ProtoMessage()    {}
func (*L2VpnRtV4Addr) Descriptor() ([]byte, []int) {
	return fileDescriptor_54c7229cd1c3513f, []int{4}
}

func (m *L2VpnRtV4Addr) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_L2VpnRtV4Addr.Unmarshal(m, b)
}
func (m *L2VpnRtV4Addr) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_L2VpnRtV4Addr.Marshal(b, m, deterministic)
}
func (m *L2VpnRtV4Addr) XXX_Merge(src proto.Message) {
	xxx_messageInfo_L2VpnRtV4Addr.Merge(m, src)
}
func (m *L2VpnRtV4Addr) XXX_Size() int {
	return xxx_messageInfo_L2VpnRtV4Addr.Size(m)
}
func (m *L2VpnRtV4Addr) XXX_DiscardUnknown() {
	xxx_messageInfo_L2VpnRtV4Addr.DiscardUnknown(m)
}

var xxx_messageInfo_L2VpnRtV4Addr proto.InternalMessageInfo

func (m *L2VpnRtV4Addr) GetIpv4Address() string {
	if m != nil {
		return m.Ipv4Address
	}
	return ""
}

func (m *L2VpnRtV4Addr) GetTwoByteIndex() uint32 {
	if m != nil {
		return m.TwoByteIndex
	}
	return 0
}

type L2VpnRtEsImport struct {
	HighBytes            uint32   `protobuf:"varint,1,opt,name=high_bytes,json=highBytes,proto3" json:"high_bytes,omitempty"`
	LowBytes             uint32   `protobuf:"varint,2,opt,name=low_bytes,json=lowBytes,proto3" json:"low_bytes,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *L2VpnRtEsImport) Reset()         { *m = L2VpnRtEsImport{} }
func (m *L2VpnRtEsImport) String() string { return proto.CompactTextString(m) }
func (*L2VpnRtEsImport) ProtoMessage()    {}
func (*L2VpnRtEsImport) Descriptor() ([]byte, []int) {
	return fileDescriptor_54c7229cd1c3513f, []int{5}
}

func (m *L2VpnRtEsImport) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_L2VpnRtEsImport.Unmarshal(m, b)
}
func (m *L2VpnRtEsImport) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_L2VpnRtEsImport.Marshal(b, m, deterministic)
}
func (m *L2VpnRtEsImport) XXX_Merge(src proto.Message) {
	xxx_messageInfo_L2VpnRtEsImport.Merge(m, src)
}
func (m *L2VpnRtEsImport) XXX_Size() int {
	return xxx_messageInfo_L2VpnRtEsImport.Size(m)
}
func (m *L2VpnRtEsImport) XXX_DiscardUnknown() {
	xxx_messageInfo_L2VpnRtEsImport.DiscardUnknown(m)
}

var xxx_messageInfo_L2VpnRtEsImport proto.InternalMessageInfo

func (m *L2VpnRtEsImport) GetHighBytes() uint32 {
	if m != nil {
		return m.HighBytes
	}
	return 0
}

func (m *L2VpnRtEsImport) GetLowBytes() uint32 {
	if m != nil {
		return m.LowBytes
	}
	return 0
}

type L2VpnRt struct {
	Rt                   string           `protobuf:"bytes,1,opt,name=rt,proto3" json:"rt,omitempty"`
	TwoByteAs            *L2VpnRt_2ByteAs `protobuf:"bytes,2,opt,name=two_byte_as,json=twoByteAs,proto3" json:"two_byte_as,omitempty"`
	FourByteAs           *L2VpnRt_4ByteAs `protobuf:"bytes,3,opt,name=four_byte_as,json=fourByteAs,proto3" json:"four_byte_as,omitempty"`
	V4Addr               *L2VpnRtV4Addr   `protobuf:"bytes,4,opt,name=v4_addr,json=v4Addr,proto3" json:"v4_addr,omitempty"`
	EsImport             *L2VpnRtEsImport `protobuf:"bytes,5,opt,name=es_import,json=esImport,proto3" json:"es_import,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *L2VpnRt) Reset()         { *m = L2VpnRt{} }
func (m *L2VpnRt) String() string { return proto.CompactTextString(m) }
func (*L2VpnRt) ProtoMessage()    {}
func (*L2VpnRt) Descriptor() ([]byte, []int) {
	return fileDescriptor_54c7229cd1c3513f, []int{6}
}

func (m *L2VpnRt) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_L2VpnRt.Unmarshal(m, b)
}
func (m *L2VpnRt) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_L2VpnRt.Marshal(b, m, deterministic)
}
func (m *L2VpnRt) XXX_Merge(src proto.Message) {
	xxx_messageInfo_L2VpnRt.Merge(m, src)
}
func (m *L2VpnRt) XXX_Size() int {
	return xxx_messageInfo_L2VpnRt.Size(m)
}
func (m *L2VpnRt) XXX_DiscardUnknown() {
	xxx_messageInfo_L2VpnRt.DiscardUnknown(m)
}

var xxx_messageInfo_L2VpnRt proto.InternalMessageInfo

func (m *L2VpnRt) GetRt() string {
	if m != nil {
		return m.Rt
	}
	return ""
}

func (m *L2VpnRt) GetTwoByteAs() *L2VpnRt_2ByteAs {
	if m != nil {
		return m.TwoByteAs
	}
	return nil
}

func (m *L2VpnRt) GetFourByteAs() *L2VpnRt_4ByteAs {
	if m != nil {
		return m.FourByteAs
	}
	return nil
}

func (m *L2VpnRt) GetV4Addr() *L2VpnRtV4Addr {
	if m != nil {
		return m.V4Addr
	}
	return nil
}

func (m *L2VpnRt) GetEsImport() *L2VpnRtEsImport {
	if m != nil {
		return m.EsImport
	}
	return nil
}

type L2VpnEvpnEviBgpRt struct {
	EvpnInstance         *L2VpnEvpnEviSummary `protobuf:"bytes,50,opt,name=evpn_instance,json=evpnInstance,proto3" json:"evpn_instance,omitempty"`
	RouteTarget          *L2VpnRt             `protobuf:"bytes,51,opt,name=route_target,json=routeTarget,proto3" json:"route_target,omitempty"`
	RouteTargetRole      string               `protobuf:"bytes,52,opt,name=route_target_role,json=routeTargetRole,proto3" json:"route_target_role,omitempty"`
	RouteTargetStitching bool                 `protobuf:"varint,53,opt,name=route_target_stitching,json=routeTargetStitching,proto3" json:"route_target_stitching,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *L2VpnEvpnEviBgpRt) Reset()         { *m = L2VpnEvpnEviBgpRt{} }
func (m *L2VpnEvpnEviBgpRt) String() string { return proto.CompactTextString(m) }
func (*L2VpnEvpnEviBgpRt) ProtoMessage()    {}
func (*L2VpnEvpnEviBgpRt) Descriptor() ([]byte, []int) {
	return fileDescriptor_54c7229cd1c3513f, []int{7}
}

func (m *L2VpnEvpnEviBgpRt) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_L2VpnEvpnEviBgpRt.Unmarshal(m, b)
}
func (m *L2VpnEvpnEviBgpRt) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_L2VpnEvpnEviBgpRt.Marshal(b, m, deterministic)
}
func (m *L2VpnEvpnEviBgpRt) XXX_Merge(src proto.Message) {
	xxx_messageInfo_L2VpnEvpnEviBgpRt.Merge(m, src)
}
func (m *L2VpnEvpnEviBgpRt) XXX_Size() int {
	return xxx_messageInfo_L2VpnEvpnEviBgpRt.Size(m)
}
func (m *L2VpnEvpnEviBgpRt) XXX_DiscardUnknown() {
	xxx_messageInfo_L2VpnEvpnEviBgpRt.DiscardUnknown(m)
}

var xxx_messageInfo_L2VpnEvpnEviBgpRt proto.InternalMessageInfo

func (m *L2VpnEvpnEviBgpRt) GetEvpnInstance() *L2VpnEvpnEviSummary {
	if m != nil {
		return m.EvpnInstance
	}
	return nil
}

func (m *L2VpnEvpnEviBgpRt) GetRouteTarget() *L2VpnRt {
	if m != nil {
		return m.RouteTarget
	}
	return nil
}

func (m *L2VpnEvpnEviBgpRt) GetRouteTargetRole() string {
	if m != nil {
		return m.RouteTargetRole
	}
	return ""
}

func (m *L2VpnEvpnEviBgpRt) GetRouteTargetStitching() bool {
	if m != nil {
		return m.RouteTargetStitching
	}
	return false
}

func init() {
	proto.RegisterType((*L2VpnEvpnEviBgpRt_KEYS)(nil), "cisco_ios_xr_evpn_oper.evpn.nodes.node.evi_detail.evi_children.route_targets.route_target.l2vpn_evpn_evi_bgp_rt_KEYS")
	proto.RegisterType((*L2VpnEvpnEviSummary)(nil), "cisco_ios_xr_evpn_oper.evpn.nodes.node.evi_detail.evi_children.route_targets.route_target.l2vpn_evpn_evi_summary")
	proto.RegisterType((*L2VpnRt_2ByteAs)(nil), "cisco_ios_xr_evpn_oper.evpn.nodes.node.evi_detail.evi_children.route_targets.route_target.l2vpn_rt_2byte_as")
	proto.RegisterType((*L2VpnRt_4ByteAs)(nil), "cisco_ios_xr_evpn_oper.evpn.nodes.node.evi_detail.evi_children.route_targets.route_target.l2vpn_rt_4byte_as")
	proto.RegisterType((*L2VpnRtV4Addr)(nil), "cisco_ios_xr_evpn_oper.evpn.nodes.node.evi_detail.evi_children.route_targets.route_target.l2vpn_rt_v4addr")
	proto.RegisterType((*L2VpnRtEsImport)(nil), "cisco_ios_xr_evpn_oper.evpn.nodes.node.evi_detail.evi_children.route_targets.route_target.l2vpn_rt_es_import")
	proto.RegisterType((*L2VpnRt)(nil), "cisco_ios_xr_evpn_oper.evpn.nodes.node.evi_detail.evi_children.route_targets.route_target.l2vpn_rt")
	proto.RegisterType((*L2VpnEvpnEviBgpRt)(nil), "cisco_ios_xr_evpn_oper.evpn.nodes.node.evi_detail.evi_children.route_targets.route_target.l2vpn_evpn_evi_bgp_rt")
}

func init() { proto.RegisterFile("l2vpn_evpn_evi_bgp_rt.proto", fileDescriptor_54c7229cd1c3513f) }

var fileDescriptor_54c7229cd1c3513f = []byte{
	// 680 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x55, 0xc1, 0x6f, 0xd3, 0x3e,
	0x14, 0x56, 0xda, 0xfd, 0xda, 0xe6, 0xb5, 0x5d, 0x37, 0xeb, 0xc7, 0x08, 0x4c, 0xa0, 0x52, 0x4d,
	0x68, 0x70, 0xc8, 0xa1, 0x2b, 0x7f, 0xc0, 0x90, 0x38, 0x54, 0x48, 0x08, 0x65, 0x08, 0x31, 0x38,
	0x58, 0x6e, 0xe2, 0xb5, 0x46, 0x49, 0x1c, 0x6c, 0xb7, 0x5d, 0xcf, 0x48, 0x1c, 0x10, 0xe2, 0x88,
	0x90, 0xf8, 0x9b, 0xf8, 0x93, 0x90, 0x90, 0xed, 0x24, 0x24, 0x63, 0x07, 0x2e, 0xeb, 0x25, 0xf2,
	0xfb, 0x9e, 0xdf, 0xe7, 0x2f, 0xdf, 0x7b, 0x89, 0xe1, 0x30, 0x1e, 0xaf, 0xb2, 0x14, 0x53, 0xfb,
	0x60, 0x78, 0x36, 0xcf, 0xb0, 0x50, 0x7e, 0x26, 0xb8, 0xe2, 0xe8, 0x3c, 0x64, 0x32, 0xe4, 0x98,
	0x71, 0x89, 0x2f, 0x85, 0xdd, 0xc3, 0x33, 0x2a, 0x7c, 0xbd, 0xf2, 0x53, 0x1e, 0x51, 0x69, 0x9e,
	0xbe, 0x2e, 0x8c, 0xa8, 0x22, 0x2c, 0x36, 0xcb, 0x70, 0xc1, 0xe2, 0x48, 0xd0, 0xd4, 0x17, 0x7c,
	0xa9, 0x28, 0x56, 0x44, 0xcc, 0xa9, 0x92, 0xb5, 0x68, 0xf4, 0xcb, 0x81, 0xbb, 0xd7, 0x1e, 0x8d,
	0x9f, 0x3f, 0x3b, 0x3f, 0x43, 0xb7, 0xa1, 0xad, 0x99, 0x31, 0x8b, 0x3c, 0x67, 0xe8, 0x1c, 0xbb,
	0x41, 0x4b, 0x87, 0xd3, 0x08, 0xed, 0x41, 0x93, 0xae, 0x98, 0xd7, 0x18, 0x3a, 0xc7, 0xfd, 0x40,
	0x2f, 0xd1, 0x11, 0xf4, 0x69, 0x1a, 0x92, 0x4c, 0x2e, 0x63, 0xa2, 0x18, 0x4f, 0xbd, 0xa6, 0xc9,
	0xd5, 0x41, 0x84, 0x60, 0x47, 0xf0, 0x98, 0x7a, 0x3b, 0x86, 0xcd, 0xac, 0xd1, 0x01, 0xb4, 0x2e,
	0xb8, 0x48, 0x88, 0xf2, 0xfe, 0xb3, 0x67, 0xd8, 0x08, 0xed, 0x42, 0x83, 0x48, 0xaf, 0x65, 0x68,
	0x1a, 0x44, 0xa2, 0x3b, 0xd0, 0x21, 0x12, 0xb3, 0x34, 0xa2, 0x97, 0x5e, 0xdb, 0xa0, 0x6d, 0x22,
	0xa7, 0x3a, 0x44, 0xf7, 0x00, 0x48, 0x14, 0x89, 0x3c, 0xd9, 0x31, 0x49, 0x57, 0x23, 0x36, 0xed,
	0x41, 0x5b, 0x07, 0x54, 0x4a, 0xcf, 0x35, 0x47, 0x14, 0xe1, 0xe8, 0xbb, 0x03, 0x07, 0x57, 0xde,
	0x5f, 0x2e, 0x93, 0x84, 0x88, 0x0d, 0x7a, 0x08, 0x03, 0xaa, 0x16, 0x54, 0xa4, 0x54, 0x61, 0x9d,
	0xcb, 0x3d, 0xd0, 0xaf, 0x94, 0xc3, 0xaf, 0xb3, 0x74, 0x1a, 0xa1, 0x47, 0xb0, 0x57, 0x7b, 0x47,
	0x7c, 0x29, 0x72, 0x5f, 0x06, 0x35, 0xfc, 0x8d, 0xd0, 0x76, 0xce, 0x22, 0x9c, 0x92, 0x84, 0x1a,
	0x77, 0xdc, 0xa0, 0x35, 0x8b, 0x5e, 0x90, 0x84, 0x6a, 0x5b, 0xd4, 0x26, 0x2b, 0x6d, 0xd1, 0xeb,
	0xd1, 0x3b, 0xd8, 0xb7, 0xca, 0x84, 0xc2, 0xe3, 0xd9, 0x46, 0x51, 0x4c, 0x24, 0xba, 0x0f, 0x5d,
	0xb5, 0xe6, 0x38, 0x0f, 0x73, 0x41, 0xae, 0x5a, 0xf3, 0xa7, 0x1b, 0x45, 0x4f, 0xa5, 0x16, 0x7d,
	0xc1, 0x97, 0xc2, 0x6e, 0xb0, 0x6e, 0x58, 0x2d, 0x7d, 0x0d, 0xeb, 0x4d, 0xc6, 0x91, 0x1a, 0xf9,
	0xa4, 0x20, 0x1f, 0x42, 0xef, 0x4f, 0x71, 0xc9, 0x0e, 0x45, 0xe5, 0xa9, 0x44, 0x47, 0xb0, 0x5b,
	0x1e, 0x5f, 0x65, 0xef, 0xe5, 0x0a, 0x2c, 0xf9, 0x5b, 0x18, 0x94, 0xe4, 0xab, 0x89, 0xb6, 0x1a,
	0x3d, 0x80, 0x1e, 0xcb, 0x56, 0x13, 0x5c, 0xb4, 0xc1, 0x4e, 0x53, 0x57, 0x63, 0xa7, 0x16, 0xfa,
	0x47, 0xee, 0x97, 0x80, 0x4a, 0x6e, 0x2a, 0x31, 0x4b, 0x32, 0x2e, 0x94, 0xee, 0xff, 0x82, 0xcd,
	0x17, 0xa6, 0xb8, 0x74, 0x45, 0x23, 0xba, 0x50, 0xa2, 0x43, 0x70, 0x63, 0xbe, 0xce, 0xb3, 0x96,
	0xb5, 0x13, 0xf3, 0xb5, 0x49, 0x8e, 0x7e, 0xee, 0x40, 0xa7, 0xa0, 0xd4, 0x33, 0x27, 0x54, 0xae,
	0xae, 0x21, 0x14, 0xfa, 0xe2, 0xd4, 0x0d, 0xd7, 0xc5, 0xdd, 0x71, 0xec, 0xdf, 0xd8, 0x17, 0xe9,
	0xff, 0xd5, 0xf3, 0x6a, 0x7b, 0xbf, 0x3a, 0x57, 0x5a, 0xd4, 0xdc, 0x9e, 0x9e, 0x62, 0x4c, 0x6a,
	0x03, 0xf1, 0xd1, 0x81, 0x76, 0xde, 0x56, 0x33, 0xbc, 0xdd, 0xf1, 0xfb, 0x6d, 0x68, 0xb1, 0x53,
	0x15, 0xb4, 0xec, 0xf4, 0xa0, 0xcf, 0x0e, 0xb8, 0xe5, 0x30, 0x98, 0xbf, 0x48, 0x77, 0x9c, 0x6c,
	0x43, 0x47, 0x79, 0x68, 0xd0, 0xa1, 0x72, 0x6a, 0x56, 0xa3, 0x1f, 0x4d, 0xb8, 0x75, 0xed, 0x2f,
	0x15, 0x7d, 0x73, 0xa0, 0x6f, 0x30, 0x96, 0x4a, 0x45, 0xd2, 0x90, 0x7a, 0x63, 0x23, 0xf5, 0xc3,
	0x8d, 0x4b, 0xbd, 0xfa, 0x73, 0x0b, 0x7a, 0x1a, 0x99, 0xe6, 0x32, 0xd0, 0x27, 0x07, 0x7a, 0xd5,
	0x2a, 0xef, 0xc4, 0xe8, 0x0a, 0xb7, 0x60, 0x61, 0xd0, 0x35, 0xf0, 0x2b, 0x83, 0xa2, 0xc7, 0xb0,
	0x5f, 0xdd, 0x85, 0xcd, 0x5d, 0x31, 0x31, 0x5f, 0xe3, 0xa0, 0xb2, 0x2f, 0xd0, 0xd7, 0xc6, 0x04,
	0x0e, 0x6a, 0x7b, 0xa5, 0x62, 0x2a, 0x5c, 0xb0, 0x74, 0xee, 0x3d, 0x19, 0x3a, 0xc7, 0x9d, 0xe0,
	0xff, 0x4a, 0xc1, 0x59, 0x91, 0x9b, 0xb5, 0xcc, 0x95, 0x7a, 0xf2, 0x3b, 0x00, 0x00, 0xff, 0xff,
	0x6e, 0x52, 0xe3, 0x6e, 0x71, 0x07, 0x00, 0x00,
}
