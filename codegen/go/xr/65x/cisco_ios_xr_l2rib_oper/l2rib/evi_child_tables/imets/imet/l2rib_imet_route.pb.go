/*
Copyright 2019 Cisco Systems

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: l2rib_imet_route.proto

package cisco_ios_xr_l2rib_oper_l2rib_evi_child_tables_imets_imet

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type L2RibImetRoute_KEYS struct {
	Evi                  uint32   `protobuf:"varint,1,opt,name=evi,proto3" json:"evi,omitempty"`
	TagId                uint32   `protobuf:"varint,2,opt,name=tag_id,json=tagId,proto3" json:"tag_id,omitempty"`
	IpAddr               string   `protobuf:"bytes,3,opt,name=ip_addr,json=ipAddr,proto3" json:"ip_addr,omitempty"`
	AdminDist            uint32   `protobuf:"varint,4,opt,name=admin_dist,json=adminDist,proto3" json:"admin_dist,omitempty"`
	ProdId               uint32   `protobuf:"varint,5,opt,name=prod_id,json=prodId,proto3" json:"prod_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *L2RibImetRoute_KEYS) Reset()         { *m = L2RibImetRoute_KEYS{} }
func (m *L2RibImetRoute_KEYS) String() string { return proto.CompactTextString(m) }
func (*L2RibImetRoute_KEYS) ProtoMessage()    {}
func (*L2RibImetRoute_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_214a186d960fa739, []int{0}
}

func (m *L2RibImetRoute_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_L2RibImetRoute_KEYS.Unmarshal(m, b)
}
func (m *L2RibImetRoute_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_L2RibImetRoute_KEYS.Marshal(b, m, deterministic)
}
func (m *L2RibImetRoute_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_L2RibImetRoute_KEYS.Merge(m, src)
}
func (m *L2RibImetRoute_KEYS) XXX_Size() int {
	return xxx_messageInfo_L2RibImetRoute_KEYS.Size(m)
}
func (m *L2RibImetRoute_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_L2RibImetRoute_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_L2RibImetRoute_KEYS proto.InternalMessageInfo

func (m *L2RibImetRoute_KEYS) GetEvi() uint32 {
	if m != nil {
		return m.Evi
	}
	return 0
}

func (m *L2RibImetRoute_KEYS) GetTagId() uint32 {
	if m != nil {
		return m.TagId
	}
	return 0
}

func (m *L2RibImetRoute_KEYS) GetIpAddr() string {
	if m != nil {
		return m.IpAddr
	}
	return ""
}

func (m *L2RibImetRoute_KEYS) GetAdminDist() uint32 {
	if m != nil {
		return m.AdminDist
	}
	return 0
}

func (m *L2RibImetRoute_KEYS) GetProdId() uint32 {
	if m != nil {
		return m.ProdId
	}
	return 0
}

type L2RibImetRoute struct {
	VtepiPaddr           string   `protobuf:"bytes,50,opt,name=vtepi_paddr,json=vtepiPaddr,proto3" json:"vtepi_paddr,omitempty"`
	AdminDistance        uint32   `protobuf:"varint,51,opt,name=admin_distance,json=adminDistance,proto3" json:"admin_distance,omitempty"`
	ProducerId           uint32   `protobuf:"varint,52,opt,name=producer_id,json=producerId,proto3" json:"producer_id,omitempty"`
	TopoId               uint32   `protobuf:"varint,53,opt,name=topo_id,json=topoId,proto3" json:"topo_id,omitempty"`
	EthernetTagId        uint32   `protobuf:"varint,54,opt,name=ethernet_tag_id,json=ethernetTagId,proto3" json:"ethernet_tag_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *L2RibImetRoute) Reset()         { *m = L2RibImetRoute{} }
func (m *L2RibImetRoute) String() string { return proto.CompactTextString(m) }
func (*L2RibImetRoute) ProtoMessage()    {}
func (*L2RibImetRoute) Descriptor() ([]byte, []int) {
	return fileDescriptor_214a186d960fa739, []int{1}
}

func (m *L2RibImetRoute) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_L2RibImetRoute.Unmarshal(m, b)
}
func (m *L2RibImetRoute) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_L2RibImetRoute.Marshal(b, m, deterministic)
}
func (m *L2RibImetRoute) XXX_Merge(src proto.Message) {
	xxx_messageInfo_L2RibImetRoute.Merge(m, src)
}
func (m *L2RibImetRoute) XXX_Size() int {
	return xxx_messageInfo_L2RibImetRoute.Size(m)
}
func (m *L2RibImetRoute) XXX_DiscardUnknown() {
	xxx_messageInfo_L2RibImetRoute.DiscardUnknown(m)
}

var xxx_messageInfo_L2RibImetRoute proto.InternalMessageInfo

func (m *L2RibImetRoute) GetVtepiPaddr() string {
	if m != nil {
		return m.VtepiPaddr
	}
	return ""
}

func (m *L2RibImetRoute) GetAdminDistance() uint32 {
	if m != nil {
		return m.AdminDistance
	}
	return 0
}

func (m *L2RibImetRoute) GetProducerId() uint32 {
	if m != nil {
		return m.ProducerId
	}
	return 0
}

func (m *L2RibImetRoute) GetTopoId() uint32 {
	if m != nil {
		return m.TopoId
	}
	return 0
}

func (m *L2RibImetRoute) GetEthernetTagId() uint32 {
	if m != nil {
		return m.EthernetTagId
	}
	return 0
}

func init() {
	proto.RegisterType((*L2RibImetRoute_KEYS)(nil), "cisco_ios_xr_l2rib_oper.l2rib.evi_child_tables.imets.imet.l2rib_imet_route_KEYS")
	proto.RegisterType((*L2RibImetRoute)(nil), "cisco_ios_xr_l2rib_oper.l2rib.evi_child_tables.imets.imet.l2rib_imet_route")
}

func init() { proto.RegisterFile("l2rib_imet_route.proto", fileDescriptor_214a186d960fa739) }

var fileDescriptor_214a186d960fa739 = []byte{
	// 297 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x5c, 0x91, 0xc1, 0x4a, 0x33, 0x41,
	0x0c, 0xc7, 0xd9, 0xaf, 0x5f, 0x57, 0x1a, 0xa9, 0x96, 0x81, 0xea, 0x5e, 0xc4, 0x52, 0x50, 0x7a,
	0xda, 0x43, 0xab, 0x82, 0x47, 0x41, 0x0f, 0xc5, 0x8b, 0x54, 0x2f, 0x9e, 0xc2, 0x74, 0x27, 0xb4,
	0x81, 0xb6, 0x33, 0xcc, 0xa6, 0xc5, 0xd7, 0xf0, 0x7d, 0x7c, 0x38, 0xc9, 0xac, 0x55, 0xe8, 0x65,
	0x49, 0xfe, 0x49, 0xfe, 0xbf, 0x6c, 0x06, 0xce, 0x56, 0xe3, 0xc8, 0x73, 0xe4, 0x35, 0x09, 0x46,
	0xbf, 0x15, 0x2a, 0x43, 0xf4, 0xe2, 0xcd, 0x7d, 0xc5, 0x75, 0xe5, 0x91, 0x7d, 0x8d, 0x1f, 0x11,
	0x9b, 0x26, 0x1f, 0x28, 0x96, 0x29, 0x2c, 0x69, 0xc7, 0x58, 0x2d, 0x79, 0xe5, 0x50, 0xec, 0x7c,
	0x45, 0x75, 0xa9, 0x06, 0xcd, 0x77, 0xf8, 0x99, 0x41, 0xff, 0xd0, 0x15, 0x9f, 0x9f, 0xde, 0x5f,
	0x4d, 0x0f, 0x5a, 0xb4, 0xe3, 0x22, 0x1b, 0x64, 0xa3, 0xee, 0x4c, 0x43, 0xd3, 0x87, 0x5c, 0xec,
	0x02, 0xd9, 0x15, 0xff, 0x92, 0xd8, 0x16, 0xbb, 0x98, 0x3a, 0x73, 0x0e, 0x47, 0x1c, 0xd0, 0x3a,
	0x17, 0x8b, 0xd6, 0x20, 0x1b, 0x75, 0x66, 0x39, 0x87, 0x07, 0xe7, 0xa2, 0xb9, 0x00, 0xb0, 0x6e,
	0xcd, 0x1b, 0x74, 0x5c, 0x4b, 0xf1, 0x3f, 0xcd, 0x74, 0x92, 0xf2, 0xc8, 0xb5, 0xe8, 0x5c, 0x88,
	0xde, 0xa9, 0x5f, 0x3b, 0xd5, 0x72, 0x4d, 0xa7, 0x6e, 0xf8, 0x95, 0x41, 0xef, 0x70, 0x27, 0x73,
	0x09, 0xc7, 0x3b, 0xa1, 0xc0, 0x18, 0x12, 0x69, 0x9c, 0x48, 0x90, 0xa4, 0x17, 0x55, 0xcc, 0x15,
	0x9c, 0xfc, 0xd1, 0xec, 0xa6, 0xa2, 0x62, 0x92, 0x5c, 0xbb, 0xbf, 0x44, 0x15, 0xd5, 0x47, 0x31,
	0xdb, 0x8a, 0xa2, 0x92, 0x6f, 0x52, 0x0f, 0xec, 0xa5, 0xe6, 0x77, 0xc4, 0x07, 0xaf, 0xc5, 0xdb,
	0x66, 0x2d, 0x4d, 0xa7, 0xce, 0x5c, 0xc3, 0x29, 0xc9, 0x92, 0xe2, 0x86, 0x04, 0x7f, 0xee, 0x70,
	0xd7, 0x10, 0xf6, 0xf2, 0x9b, 0xde, 0x63, 0x9e, 0xa7, 0x47, 0x99, 0x7c, 0x07, 0x00, 0x00, 0xff,
	0xff, 0x04, 0x4c, 0x05, 0xe5, 0xae, 0x01, 0x00, 0x00,
}
