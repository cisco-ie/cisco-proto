/*
Copyright 2019 Cisco Systems

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: xtc_controller_policy_req_bag.proto

package cisco_ios_xr_infra_xtc_agent_oper_xtc_controller_policy_requests_policy_request

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type XtcControllerPolicyReqBag_KEYS struct {
	SourceAddress        string   `protobuf:"bytes,1,opt,name=source_address,json=sourceAddress,proto3" json:"source_address,omitempty"`
	EndPointType         string   `protobuf:"bytes,2,opt,name=end_point_type,json=endPointType,proto3" json:"end_point_type,omitempty"`
	EndPointAddress      string   `protobuf:"bytes,3,opt,name=end_point_address,json=endPointAddress,proto3" json:"end_point_address,omitempty"`
	Color                uint32   `protobuf:"varint,4,opt,name=color,proto3" json:"color,omitempty"`
	RouteDistinguisher   uint32   `protobuf:"varint,5,opt,name=route_distinguisher,json=routeDistinguisher,proto3" json:"route_distinguisher,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *XtcControllerPolicyReqBag_KEYS) Reset()         { *m = XtcControllerPolicyReqBag_KEYS{} }
func (m *XtcControllerPolicyReqBag_KEYS) String() string { return proto.CompactTextString(m) }
func (*XtcControllerPolicyReqBag_KEYS) ProtoMessage()    {}
func (*XtcControllerPolicyReqBag_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_7fb96e9d4a4b50d4, []int{0}
}

func (m *XtcControllerPolicyReqBag_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_XtcControllerPolicyReqBag_KEYS.Unmarshal(m, b)
}
func (m *XtcControllerPolicyReqBag_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_XtcControllerPolicyReqBag_KEYS.Marshal(b, m, deterministic)
}
func (m *XtcControllerPolicyReqBag_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_XtcControllerPolicyReqBag_KEYS.Merge(m, src)
}
func (m *XtcControllerPolicyReqBag_KEYS) XXX_Size() int {
	return xxx_messageInfo_XtcControllerPolicyReqBag_KEYS.Size(m)
}
func (m *XtcControllerPolicyReqBag_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_XtcControllerPolicyReqBag_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_XtcControllerPolicyReqBag_KEYS proto.InternalMessageInfo

func (m *XtcControllerPolicyReqBag_KEYS) GetSourceAddress() string {
	if m != nil {
		return m.SourceAddress
	}
	return ""
}

func (m *XtcControllerPolicyReqBag_KEYS) GetEndPointType() string {
	if m != nil {
		return m.EndPointType
	}
	return ""
}

func (m *XtcControllerPolicyReqBag_KEYS) GetEndPointAddress() string {
	if m != nil {
		return m.EndPointAddress
	}
	return ""
}

func (m *XtcControllerPolicyReqBag_KEYS) GetColor() uint32 {
	if m != nil {
		return m.Color
	}
	return 0
}

func (m *XtcControllerPolicyReqBag_KEYS) GetRouteDistinguisher() uint32 {
	if m != nil {
		return m.RouteDistinguisher
	}
	return 0
}

type XtcIpAddrType struct {
	AfName               string   `protobuf:"bytes,1,opt,name=af_name,json=afName,proto3" json:"af_name,omitempty"`
	Ipv4                 string   `protobuf:"bytes,2,opt,name=ipv4,proto3" json:"ipv4,omitempty"`
	Ipv6                 string   `protobuf:"bytes,3,opt,name=ipv6,proto3" json:"ipv6,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *XtcIpAddrType) Reset()         { *m = XtcIpAddrType{} }
func (m *XtcIpAddrType) String() string { return proto.CompactTextString(m) }
func (*XtcIpAddrType) ProtoMessage()    {}
func (*XtcIpAddrType) Descriptor() ([]byte, []int) {
	return fileDescriptor_7fb96e9d4a4b50d4, []int{1}
}

func (m *XtcIpAddrType) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_XtcIpAddrType.Unmarshal(m, b)
}
func (m *XtcIpAddrType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_XtcIpAddrType.Marshal(b, m, deterministic)
}
func (m *XtcIpAddrType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_XtcIpAddrType.Merge(m, src)
}
func (m *XtcIpAddrType) XXX_Size() int {
	return xxx_messageInfo_XtcIpAddrType.Size(m)
}
func (m *XtcIpAddrType) XXX_DiscardUnknown() {
	xxx_messageInfo_XtcIpAddrType.DiscardUnknown(m)
}

var xxx_messageInfo_XtcIpAddrType proto.InternalMessageInfo

func (m *XtcIpAddrType) GetAfName() string {
	if m != nil {
		return m.AfName
	}
	return ""
}

func (m *XtcIpAddrType) GetIpv4() string {
	if m != nil {
		return m.Ipv4
	}
	return ""
}

func (m *XtcIpAddrType) GetIpv6() string {
	if m != nil {
		return m.Ipv6
	}
	return ""
}

type XtcPrefixSidType struct {
	SidType              string   `protobuf:"bytes,1,opt,name=sid_type,json=sidType,proto3" json:"sid_type,omitempty"`
	Label                uint32   `protobuf:"varint,2,opt,name=label,proto3" json:"label,omitempty"`
	Ipv6                 string   `protobuf:"bytes,3,opt,name=ipv6,proto3" json:"ipv6,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *XtcPrefixSidType) Reset()         { *m = XtcPrefixSidType{} }
func (m *XtcPrefixSidType) String() string { return proto.CompactTextString(m) }
func (*XtcPrefixSidType) ProtoMessage()    {}
func (*XtcPrefixSidType) Descriptor() ([]byte, []int) {
	return fileDescriptor_7fb96e9d4a4b50d4, []int{2}
}

func (m *XtcPrefixSidType) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_XtcPrefixSidType.Unmarshal(m, b)
}
func (m *XtcPrefixSidType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_XtcPrefixSidType.Marshal(b, m, deterministic)
}
func (m *XtcPrefixSidType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_XtcPrefixSidType.Merge(m, src)
}
func (m *XtcPrefixSidType) XXX_Size() int {
	return xxx_messageInfo_XtcPrefixSidType.Size(m)
}
func (m *XtcPrefixSidType) XXX_DiscardUnknown() {
	xxx_messageInfo_XtcPrefixSidType.DiscardUnknown(m)
}

var xxx_messageInfo_XtcPrefixSidType proto.InternalMessageInfo

func (m *XtcPrefixSidType) GetSidType() string {
	if m != nil {
		return m.SidType
	}
	return ""
}

func (m *XtcPrefixSidType) GetLabel() uint32 {
	if m != nil {
		return m.Label
	}
	return 0
}

func (m *XtcPrefixSidType) GetIpv6() string {
	if m != nil {
		return m.Ipv6
	}
	return ""
}

type XtcSrHopType struct {
	SidType              string            `protobuf:"bytes,1,opt,name=sid_type,json=sidType,proto3" json:"sid_type,omitempty"`
	Sid                  *XtcPrefixSidType `protobuf:"bytes,2,opt,name=sid,proto3" json:"sid,omitempty"`
	LocalAddress         *XtcIpAddrType    `protobuf:"bytes,3,opt,name=local_address,json=localAddress,proto3" json:"local_address,omitempty"`
	RemoteAddress        *XtcIpAddrType    `protobuf:"bytes,4,opt,name=remote_address,json=remoteAddress,proto3" json:"remote_address,omitempty"`
	Algorithm            uint32            `protobuf:"varint,5,opt,name=algorithm,proto3" json:"algorithm,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *XtcSrHopType) Reset()         { *m = XtcSrHopType{} }
func (m *XtcSrHopType) String() string { return proto.CompactTextString(m) }
func (*XtcSrHopType) ProtoMessage()    {}
func (*XtcSrHopType) Descriptor() ([]byte, []int) {
	return fileDescriptor_7fb96e9d4a4b50d4, []int{3}
}

func (m *XtcSrHopType) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_XtcSrHopType.Unmarshal(m, b)
}
func (m *XtcSrHopType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_XtcSrHopType.Marshal(b, m, deterministic)
}
func (m *XtcSrHopType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_XtcSrHopType.Merge(m, src)
}
func (m *XtcSrHopType) XXX_Size() int {
	return xxx_messageInfo_XtcSrHopType.Size(m)
}
func (m *XtcSrHopType) XXX_DiscardUnknown() {
	xxx_messageInfo_XtcSrHopType.DiscardUnknown(m)
}

var xxx_messageInfo_XtcSrHopType proto.InternalMessageInfo

func (m *XtcSrHopType) GetSidType() string {
	if m != nil {
		return m.SidType
	}
	return ""
}

func (m *XtcSrHopType) GetSid() *XtcPrefixSidType {
	if m != nil {
		return m.Sid
	}
	return nil
}

func (m *XtcSrHopType) GetLocalAddress() *XtcIpAddrType {
	if m != nil {
		return m.LocalAddress
	}
	return nil
}

func (m *XtcSrHopType) GetRemoteAddress() *XtcIpAddrType {
	if m != nil {
		return m.RemoteAddress
	}
	return nil
}

func (m *XtcSrHopType) GetAlgorithm() uint32 {
	if m != nil {
		return m.Algorithm
	}
	return 0
}

type XtcPolicySlBag struct {
	Name                 string          `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Type                 string          `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	Active               bool            `protobuf:"varint,3,opt,name=active,proto3" json:"active,omitempty"`
	Weight               uint32          `protobuf:"varint,4,opt,name=weight,proto3" json:"weight,omitempty"`
	MetricType           uint32          `protobuf:"varint,5,opt,name=metric_type,json=metricType,proto3" json:"metric_type,omitempty"`
	MetricValue          uint64          `protobuf:"varint,6,opt,name=metric_value,json=metricValue,proto3" json:"metric_value,omitempty"`
	Hops                 []*XtcSrHopType `protobuf:"bytes,7,rep,name=hops,proto3" json:"hops,omitempty"`
	IsValid              bool            `protobuf:"varint,8,opt,name=is_valid,json=isValid,proto3" json:"is_valid,omitempty"`
	PceBasedPath         bool            `protobuf:"varint,9,opt,name=pce_based_path,json=pceBasedPath,proto3" json:"pce_based_path,omitempty"`
	PceAddress           string          `protobuf:"bytes,10,opt,name=pce_address,json=pceAddress,proto3" json:"pce_address,omitempty"`
	Error                string          `protobuf:"bytes,11,opt,name=error,proto3" json:"error,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *XtcPolicySlBag) Reset()         { *m = XtcPolicySlBag{} }
func (m *XtcPolicySlBag) String() string { return proto.CompactTextString(m) }
func (*XtcPolicySlBag) ProtoMessage()    {}
func (*XtcPolicySlBag) Descriptor() ([]byte, []int) {
	return fileDescriptor_7fb96e9d4a4b50d4, []int{4}
}

func (m *XtcPolicySlBag) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_XtcPolicySlBag.Unmarshal(m, b)
}
func (m *XtcPolicySlBag) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_XtcPolicySlBag.Marshal(b, m, deterministic)
}
func (m *XtcPolicySlBag) XXX_Merge(src proto.Message) {
	xxx_messageInfo_XtcPolicySlBag.Merge(m, src)
}
func (m *XtcPolicySlBag) XXX_Size() int {
	return xxx_messageInfo_XtcPolicySlBag.Size(m)
}
func (m *XtcPolicySlBag) XXX_DiscardUnknown() {
	xxx_messageInfo_XtcPolicySlBag.DiscardUnknown(m)
}

var xxx_messageInfo_XtcPolicySlBag proto.InternalMessageInfo

func (m *XtcPolicySlBag) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *XtcPolicySlBag) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *XtcPolicySlBag) GetActive() bool {
	if m != nil {
		return m.Active
	}
	return false
}

func (m *XtcPolicySlBag) GetWeight() uint32 {
	if m != nil {
		return m.Weight
	}
	return 0
}

func (m *XtcPolicySlBag) GetMetricType() uint32 {
	if m != nil {
		return m.MetricType
	}
	return 0
}

func (m *XtcPolicySlBag) GetMetricValue() uint64 {
	if m != nil {
		return m.MetricValue
	}
	return 0
}

func (m *XtcPolicySlBag) GetHops() []*XtcSrHopType {
	if m != nil {
		return m.Hops
	}
	return nil
}

func (m *XtcPolicySlBag) GetIsValid() bool {
	if m != nil {
		return m.IsValid
	}
	return false
}

func (m *XtcPolicySlBag) GetPceBasedPath() bool {
	if m != nil {
		return m.PceBasedPath
	}
	return false
}

func (m *XtcPolicySlBag) GetPceAddress() string {
	if m != nil {
		return m.PceAddress
	}
	return ""
}

func (m *XtcPolicySlBag) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

type XtcControllerPolicyReqBag struct {
	SourceAddressXr      string            `protobuf:"bytes,50,opt,name=source_address_xr,json=sourceAddressXr,proto3" json:"source_address_xr,omitempty"`
	EndPoint             *XtcIpAddrType    `protobuf:"bytes,51,opt,name=end_point,json=endPoint,proto3" json:"end_point,omitempty"`
	BindingSid           uint32            `protobuf:"varint,52,opt,name=binding_sid,json=bindingSid,proto3" json:"binding_sid,omitempty"`
	Preference           uint32            `protobuf:"varint,53,opt,name=preference,proto3" json:"preference,omitempty"`
	ColorXr              uint32            `protobuf:"varint,54,opt,name=color_xr,json=colorXr,proto3" json:"color_xr,omitempty"`
	RouteDistinguisherXr uint32            `protobuf:"varint,55,opt,name=route_distinguisher_xr,json=routeDistinguisherXr,proto3" json:"route_distinguisher_xr,omitempty"`
	SegmentList          []*XtcPolicySlBag `protobuf:"bytes,56,rep,name=segment_list,json=segmentList,proto3" json:"segment_list,omitempty"`
	CreationTime         uint32            `protobuf:"varint,57,opt,name=creation_time,json=creationTime,proto3" json:"creation_time,omitempty"`
	LastUpdatedTime      uint32            `protobuf:"varint,58,opt,name=last_updated_time,json=lastUpdatedTime,proto3" json:"last_updated_time,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *XtcControllerPolicyReqBag) Reset()         { *m = XtcControllerPolicyReqBag{} }
func (m *XtcControllerPolicyReqBag) String() string { return proto.CompactTextString(m) }
func (*XtcControllerPolicyReqBag) ProtoMessage()    {}
func (*XtcControllerPolicyReqBag) Descriptor() ([]byte, []int) {
	return fileDescriptor_7fb96e9d4a4b50d4, []int{5}
}

func (m *XtcControllerPolicyReqBag) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_XtcControllerPolicyReqBag.Unmarshal(m, b)
}
func (m *XtcControllerPolicyReqBag) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_XtcControllerPolicyReqBag.Marshal(b, m, deterministic)
}
func (m *XtcControllerPolicyReqBag) XXX_Merge(src proto.Message) {
	xxx_messageInfo_XtcControllerPolicyReqBag.Merge(m, src)
}
func (m *XtcControllerPolicyReqBag) XXX_Size() int {
	return xxx_messageInfo_XtcControllerPolicyReqBag.Size(m)
}
func (m *XtcControllerPolicyReqBag) XXX_DiscardUnknown() {
	xxx_messageInfo_XtcControllerPolicyReqBag.DiscardUnknown(m)
}

var xxx_messageInfo_XtcControllerPolicyReqBag proto.InternalMessageInfo

func (m *XtcControllerPolicyReqBag) GetSourceAddressXr() string {
	if m != nil {
		return m.SourceAddressXr
	}
	return ""
}

func (m *XtcControllerPolicyReqBag) GetEndPoint() *XtcIpAddrType {
	if m != nil {
		return m.EndPoint
	}
	return nil
}

func (m *XtcControllerPolicyReqBag) GetBindingSid() uint32 {
	if m != nil {
		return m.BindingSid
	}
	return 0
}

func (m *XtcControllerPolicyReqBag) GetPreference() uint32 {
	if m != nil {
		return m.Preference
	}
	return 0
}

func (m *XtcControllerPolicyReqBag) GetColorXr() uint32 {
	if m != nil {
		return m.ColorXr
	}
	return 0
}

func (m *XtcControllerPolicyReqBag) GetRouteDistinguisherXr() uint32 {
	if m != nil {
		return m.RouteDistinguisherXr
	}
	return 0
}

func (m *XtcControllerPolicyReqBag) GetSegmentList() []*XtcPolicySlBag {
	if m != nil {
		return m.SegmentList
	}
	return nil
}

func (m *XtcControllerPolicyReqBag) GetCreationTime() uint32 {
	if m != nil {
		return m.CreationTime
	}
	return 0
}

func (m *XtcControllerPolicyReqBag) GetLastUpdatedTime() uint32 {
	if m != nil {
		return m.LastUpdatedTime
	}
	return 0
}

func init() {
	proto.RegisterType((*XtcControllerPolicyReqBag_KEYS)(nil), "cisco_ios_xr_infra_xtc_agent_oper.xtc.controller.policy_requests.policy_request.xtc_controller_policy_req_bag_KEYS")
	proto.RegisterType((*XtcIpAddrType)(nil), "cisco_ios_xr_infra_xtc_agent_oper.xtc.controller.policy_requests.policy_request.xtc_ip_addr_type")
	proto.RegisterType((*XtcPrefixSidType)(nil), "cisco_ios_xr_infra_xtc_agent_oper.xtc.controller.policy_requests.policy_request.xtc_prefix_sid_type")
	proto.RegisterType((*XtcSrHopType)(nil), "cisco_ios_xr_infra_xtc_agent_oper.xtc.controller.policy_requests.policy_request.xtc_sr_hop_type")
	proto.RegisterType((*XtcPolicySlBag)(nil), "cisco_ios_xr_infra_xtc_agent_oper.xtc.controller.policy_requests.policy_request.xtc_policy_sl_bag")
	proto.RegisterType((*XtcControllerPolicyReqBag)(nil), "cisco_ios_xr_infra_xtc_agent_oper.xtc.controller.policy_requests.policy_request.xtc_controller_policy_req_bag")
}

func init() {
	proto.RegisterFile("xtc_controller_policy_req_bag.proto", fileDescriptor_7fb96e9d4a4b50d4)
}

var fileDescriptor_7fb96e9d4a4b50d4 = []byte{
	// 765 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x55, 0xcd, 0x6e, 0x1b, 0x37,
	0x10, 0xc6, 0x56, 0xff, 0x23, 0xc9, 0xae, 0x69, 0xc1, 0xdd, 0x02, 0xfd, 0x51, 0xe5, 0x16, 0x10,
	0x7a, 0x50, 0x01, 0xd9, 0x75, 0x7f, 0x6e, 0x2d, 0x92, 0x53, 0x82, 0xc4, 0x58, 0x3b, 0x86, 0x93,
	0x0b, 0x43, 0xed, 0x8e, 0x24, 0x02, 0xbb, 0x4b, 0x86, 0xa4, 0x14, 0xf9, 0x92, 0x5b, 0x82, 0xbc,
	0x44, 0x5e, 0x23, 0x8f, 0x92, 0x27, 0xc8, 0x83, 0x04, 0x24, 0x77, 0x23, 0x39, 0x31, 0x9c, 0x4b,
	0xec, 0x1b, 0xe7, 0xe3, 0xec, 0x37, 0x33, 0xe4, 0xc7, 0x6f, 0x61, 0x7f, 0x65, 0x62, 0x1a, 0x8b,
	0xdc, 0x28, 0x91, 0xa6, 0xa8, 0xa8, 0x14, 0x29, 0x8f, 0x2f, 0xa8, 0xc2, 0x67, 0x74, 0xc2, 0x66,
	0x23, 0xa9, 0x84, 0x11, 0xe4, 0x61, 0xcc, 0x75, 0x2c, 0x28, 0x17, 0x9a, 0xae, 0x14, 0xe5, 0xf9,
	0x54, 0x31, 0x6a, 0xbf, 0x63, 0x33, 0xcc, 0x0d, 0x15, 0x12, 0xd5, 0x68, 0x65, 0xe2, 0xd1, 0x9a,
	0x66, 0xb4, 0xa6, 0x59, 0xa0, 0x36, 0xfa, 0x93, 0x78, 0xf0, 0x3e, 0x80, 0xc1, 0xb5, 0x85, 0xe9,
	0xbd, 0xbb, 0x8f, 0x4f, 0xc8, 0x6f, 0xb0, 0xa5, 0xc5, 0x42, 0xc5, 0x48, 0x59, 0x92, 0x28, 0xd4,
	0x3a, 0x0c, 0xfa, 0xc1, 0xb0, 0x15, 0x75, 0x3d, 0xfa, 0x9f, 0x07, 0xc9, 0xaf, 0xb0, 0x85, 0x79,
	0x42, 0xa5, 0xe0, 0xb9, 0xa1, 0xe6, 0x42, 0x62, 0xf8, 0x8d, 0x4b, 0xeb, 0x60, 0x9e, 0x1c, 0x5b,
	0xf0, 0xf4, 0x42, 0x22, 0xf9, 0x1d, 0x76, 0xd6, 0x59, 0x25, 0x5f, 0xc5, 0x25, 0x6e, 0x97, 0x89,
	0x25, 0x63, 0x0f, 0x6a, 0xb1, 0x48, 0x85, 0x0a, 0xab, 0xfd, 0x60, 0xd8, 0x8d, 0x7c, 0x40, 0xfe,
	0x80, 0x5d, 0x25, 0x16, 0x06, 0x69, 0xc2, 0xb5, 0xe1, 0xf9, 0x6c, 0xc1, 0xf5, 0x1c, 0x55, 0x58,
	0x73, 0x39, 0xc4, 0x6d, 0xdd, 0xd9, 0xdc, 0x19, 0x9c, 0xc0, 0xb7, 0x76, 0x4a, 0x2e, 0x5d, 0x3d,
	0xd7, 0x1a, 0xf9, 0x0e, 0x1a, 0x6c, 0x4a, 0x73, 0x96, 0x61, 0x31, 0x4c, 0x9d, 0x4d, 0x1f, 0xb0,
	0x0c, 0x09, 0x81, 0x2a, 0x97, 0xcb, 0xc3, 0xa2, 0x77, 0xb7, 0x2e, 0xb0, 0xa3, 0xa2, 0x4d, 0xb7,
	0x1e, 0x3c, 0x81, 0x5d, 0x4b, 0x2a, 0x15, 0x4e, 0xf9, 0x8a, 0x6a, 0x9e, 0x78, 0xde, 0xef, 0xa1,
	0x59, 0xae, 0x0b, 0xe2, 0x86, 0xe6, 0x89, 0x9b, 0xbc, 0x07, 0xb5, 0x94, 0x4d, 0x30, 0x75, 0xd4,
	0xdd, 0xc8, 0x07, 0x57, 0x72, 0xbf, 0xab, 0xc0, 0xb6, 0x25, 0xd7, 0x8a, 0xce, 0x85, 0xfc, 0x22,
	0xf1, 0x12, 0x2a, 0x9a, 0x27, 0x8e, 0xb6, 0x3d, 0x4e, 0x46, 0x5f, 0x59, 0x25, 0xa3, 0x2b, 0xc6,
	0x8c, 0x6c, 0x41, 0xf2, 0x2a, 0x80, 0x6e, 0x2a, 0x62, 0x96, 0x5e, 0xba, 0xc7, 0xf6, 0x98, 0xdd,
	0x48, 0x0b, 0x9b, 0xd7, 0x17, 0x75, 0x5c, 0xdd, 0x52, 0x27, 0xaf, 0x03, 0xd8, 0x52, 0x98, 0x09,
	0xb3, 0x56, 0x68, 0xf5, 0xb6, 0x3a, 0xe9, 0xfa, 0xc2, 0x65, 0x2b, 0x3f, 0x40, 0x8b, 0xa5, 0x33,
	0xa1, 0xb8, 0x99, 0x67, 0x85, 0x24, 0xd7, 0xc0, 0xe0, 0x4d, 0x05, 0x76, 0xdc, 0x71, 0x7a, 0x52,
	0x9d, 0xda, 0x47, 0x66, 0x25, 0xb0, 0x21, 0x44, 0xb7, 0xb6, 0xd8, 0xc6, 0x13, 0x72, 0x6b, 0xb2,
	0x07, 0x75, 0x16, 0x1b, 0xbe, 0x44, 0x77, 0xce, 0xcd, 0xa8, 0x88, 0x2c, 0xfe, 0x1c, 0xf9, 0x6c,
	0x6e, 0x8a, 0x77, 0x52, 0x44, 0xe4, 0x67, 0x68, 0x67, 0x68, 0x14, 0x8f, 0xbd, 0x6a, 0x7c, 0x37,
	0xe0, 0x21, 0x27, 0x9c, 0x5f, 0xa0, 0x53, 0x24, 0x2c, 0x59, 0xba, 0xc0, 0xb0, 0xde, 0x0f, 0x86,
	0xd5, 0xa8, 0xf8, 0xe8, 0xcc, 0x42, 0xc4, 0x40, 0x75, 0x2e, 0xa4, 0x0e, 0x1b, 0xfd, 0xca, 0xb0,
	0x3d, 0x7e, 0x7a, 0x23, 0xe7, 0xb9, 0x21, 0xf3, 0xc8, 0x55, 0xb3, 0x62, 0xe7, 0xda, 0x36, 0xc5,
	0x93, 0xb0, 0xe9, 0x66, 0x6d, 0x70, 0x7d, 0x66, 0x43, 0xeb, 0x32, 0x32, 0x46, 0x3a, 0x61, 0x1a,
	0x13, 0x2a, 0x99, 0x99, 0x87, 0x2d, 0x97, 0xd0, 0x91, 0x31, 0xfe, 0x6f, 0xc1, 0x63, 0x66, 0xe6,
	0x76, 0x74, 0xb9, 0xe1, 0x57, 0xe0, 0x4e, 0x11, 0xe4, 0xda, 0xac, 0x7a, 0x50, 0x43, 0xa5, 0x84,
	0x0a, 0xdb, 0x6e, 0xcb, 0x07, 0x83, 0xb7, 0x55, 0xf8, 0xf1, 0x5a, 0x43, 0xb4, 0xf6, 0x75, 0xd9,
	0x0b, 0xe9, 0x4a, 0x85, 0x63, 0x6f, 0x5f, 0x97, 0xec, 0xf0, 0x5c, 0x91, 0x17, 0xd0, 0xfa, 0x68,
	0x75, 0xe1, 0xc1, 0x6d, 0x09, 0xb2, 0x59, 0xba, 0xa8, 0x3d, 0x84, 0x09, 0xcf, 0x13, 0x9e, 0xcf,
	0xec, 0xc3, 0x0d, 0x0f, 0xfd, 0xfd, 0x17, 0xd0, 0x09, 0x4f, 0xc8, 0x4f, 0x00, 0xf6, 0x61, 0xa3,
	0xc2, 0x3c, 0xc6, 0xf0, 0x4f, 0xbf, 0xbf, 0x46, 0xec, 0x35, 0x38, 0xcb, 0xb5, 0x33, 0x1e, 0xb9,
	0xdd, 0x86, 0x8b, 0xcf, 0x15, 0x39, 0x84, 0xbd, 0x2b, 0x4c, 0xd8, 0x26, 0xfe, 0xe5, 0x12, 0x7b,
	0x9f, 0xfb, 0xf0, 0xb9, 0x22, 0x2f, 0x03, 0xe8, 0x68, 0x9c, 0x65, 0x76, 0xd6, 0x94, 0x6b, 0x13,
	0xfe, 0xed, 0x64, 0x35, 0xb9, 0x19, 0xcf, 0xda, 0x7c, 0x64, 0x51, 0xbb, 0xa8, 0x7b, 0x9f, 0x6b,
	0x43, 0xf6, 0xa1, 0x1b, 0x2b, 0x64, 0x86, 0x8b, 0x9c, 0x1a, 0x9e, 0x61, 0xf8, 0x8f, 0x6b, 0xba,
	0x53, 0x82, 0xa7, 0x3c, 0x73, 0x7f, 0xaa, 0x94, 0x69, 0x43, 0x17, 0x32, 0x61, 0x06, 0x13, 0x9f,
	0xf8, 0xaf, 0x4b, 0xdc, 0xb6, 0x1b, 0x8f, 0x3c, 0x6e, 0x73, 0x27, 0x75, 0xf7, 0x87, 0x3e, 0xf8,
	0x10, 0x00, 0x00, 0xff, 0xff, 0xa7, 0xe1, 0x5e, 0x32, 0xc8, 0x07, 0x00, 0x00,
}
