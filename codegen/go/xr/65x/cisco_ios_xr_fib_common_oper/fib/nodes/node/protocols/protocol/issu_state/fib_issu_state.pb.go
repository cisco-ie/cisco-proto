/*
Copyright 2019 Cisco Systems

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: fib_issu_state.proto

package cisco_ios_xr_fib_common_oper_fib_nodes_node_protocols_protocol_issu_state

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type FibIssuState_KEYS struct {
	NodeName             string   `protobuf:"bytes,1,opt,name=node_name,json=nodeName,proto3" json:"node_name,omitempty"`
	ProtocolName         string   `protobuf:"bytes,2,opt,name=protocol_name,json=protocolName,proto3" json:"protocol_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FibIssuState_KEYS) Reset()         { *m = FibIssuState_KEYS{} }
func (m *FibIssuState_KEYS) String() string { return proto.CompactTextString(m) }
func (*FibIssuState_KEYS) ProtoMessage()    {}
func (*FibIssuState_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_b2beefbf2a0e9098, []int{0}
}

func (m *FibIssuState_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FibIssuState_KEYS.Unmarshal(m, b)
}
func (m *FibIssuState_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FibIssuState_KEYS.Marshal(b, m, deterministic)
}
func (m *FibIssuState_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FibIssuState_KEYS.Merge(m, src)
}
func (m *FibIssuState_KEYS) XXX_Size() int {
	return xxx_messageInfo_FibIssuState_KEYS.Size(m)
}
func (m *FibIssuState_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_FibIssuState_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_FibIssuState_KEYS proto.InternalMessageInfo

func (m *FibIssuState_KEYS) GetNodeName() string {
	if m != nil {
		return m.NodeName
	}
	return ""
}

func (m *FibIssuState_KEYS) GetProtocolName() string {
	if m != nil {
		return m.ProtocolName
	}
	return ""
}

type FibIssuProtoState struct {
	ProtocolName                string   `protobuf:"bytes,1,opt,name=protocol_name,json=protocolName,proto3" json:"protocol_name,omitempty"`
	AibEodTimeStamp             string   `protobuf:"bytes,2,opt,name=aib_eod_time_stamp,json=aibEodTimeStamp,proto3" json:"aib_eod_time_stamp,omitempty"`
	RsiEodValid                 bool     `protobuf:"varint,3,opt,name=rsi_eod_valid,json=rsiEodValid,proto3" json:"rsi_eod_valid,omitempty"`
	RsiEodTimeStamp             string   `protobuf:"bytes,4,opt,name=rsi_eod_time_stamp,json=rsiEodTimeStamp,proto3" json:"rsi_eod_time_stamp,omitempty"`
	LsdEodValid                 bool     `protobuf:"varint,5,opt,name=lsd_eod_valid,json=lsdEodValid,proto3" json:"lsd_eod_valid,omitempty"`
	LsdEodTimeStamp             string   `protobuf:"bytes,6,opt,name=lsd_eod_time_stamp,json=lsdEodTimeStamp,proto3" json:"lsd_eod_time_stamp,omitempty"`
	LmribEodValid               bool     `protobuf:"varint,7,opt,name=lmrib_eod_valid,json=lmribEodValid,proto3" json:"lmrib_eod_valid,omitempty"`
	LmribEodTimeStamp           string   `protobuf:"bytes,8,opt,name=lmrib_eod_time_stamp,json=lmribEodTimeStamp,proto3" json:"lmrib_eod_time_stamp,omitempty"`
	RibInfoValid                bool     `protobuf:"varint,9,opt,name=rib_info_valid,json=ribInfoValid,proto3" json:"rib_info_valid,omitempty"`
	BcdlTables                  uint32   `protobuf:"varint,10,opt,name=bcdl_tables,json=bcdlTables,proto3" json:"bcdl_tables,omitempty"`
	ConvergedTables             uint32   `protobuf:"varint,11,opt,name=converged_tables,json=convergedTables,proto3" json:"converged_tables,omitempty"`
	RibTablesConvergedTimeStamp string   `protobuf:"bytes,12,opt,name=rib_tables_converged_time_stamp,json=ribTablesConvergedTimeStamp,proto3" json:"rib_tables_converged_time_stamp,omitempty"`
	ProtocolEodValid            bool     `protobuf:"varint,13,opt,name=protocol_eod_valid,json=protocolEodValid,proto3" json:"protocol_eod_valid,omitempty"`
	ProtocolEodTimeStamp        string   `protobuf:"bytes,14,opt,name=protocol_eod_time_stamp,json=protocolEodTimeStamp,proto3" json:"protocol_eod_time_stamp,omitempty"`
	XXX_NoUnkeyedLiteral        struct{} `json:"-"`
	XXX_unrecognized            []byte   `json:"-"`
	XXX_sizecache               int32    `json:"-"`
}

func (m *FibIssuProtoState) Reset()         { *m = FibIssuProtoState{} }
func (m *FibIssuProtoState) String() string { return proto.CompactTextString(m) }
func (*FibIssuProtoState) ProtoMessage()    {}
func (*FibIssuProtoState) Descriptor() ([]byte, []int) {
	return fileDescriptor_b2beefbf2a0e9098, []int{1}
}

func (m *FibIssuProtoState) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FibIssuProtoState.Unmarshal(m, b)
}
func (m *FibIssuProtoState) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FibIssuProtoState.Marshal(b, m, deterministic)
}
func (m *FibIssuProtoState) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FibIssuProtoState.Merge(m, src)
}
func (m *FibIssuProtoState) XXX_Size() int {
	return xxx_messageInfo_FibIssuProtoState.Size(m)
}
func (m *FibIssuProtoState) XXX_DiscardUnknown() {
	xxx_messageInfo_FibIssuProtoState.DiscardUnknown(m)
}

var xxx_messageInfo_FibIssuProtoState proto.InternalMessageInfo

func (m *FibIssuProtoState) GetProtocolName() string {
	if m != nil {
		return m.ProtocolName
	}
	return ""
}

func (m *FibIssuProtoState) GetAibEodTimeStamp() string {
	if m != nil {
		return m.AibEodTimeStamp
	}
	return ""
}

func (m *FibIssuProtoState) GetRsiEodValid() bool {
	if m != nil {
		return m.RsiEodValid
	}
	return false
}

func (m *FibIssuProtoState) GetRsiEodTimeStamp() string {
	if m != nil {
		return m.RsiEodTimeStamp
	}
	return ""
}

func (m *FibIssuProtoState) GetLsdEodValid() bool {
	if m != nil {
		return m.LsdEodValid
	}
	return false
}

func (m *FibIssuProtoState) GetLsdEodTimeStamp() string {
	if m != nil {
		return m.LsdEodTimeStamp
	}
	return ""
}

func (m *FibIssuProtoState) GetLmribEodValid() bool {
	if m != nil {
		return m.LmribEodValid
	}
	return false
}

func (m *FibIssuProtoState) GetLmribEodTimeStamp() string {
	if m != nil {
		return m.LmribEodTimeStamp
	}
	return ""
}

func (m *FibIssuProtoState) GetRibInfoValid() bool {
	if m != nil {
		return m.RibInfoValid
	}
	return false
}

func (m *FibIssuProtoState) GetBcdlTables() uint32 {
	if m != nil {
		return m.BcdlTables
	}
	return 0
}

func (m *FibIssuProtoState) GetConvergedTables() uint32 {
	if m != nil {
		return m.ConvergedTables
	}
	return 0
}

func (m *FibIssuProtoState) GetRibTablesConvergedTimeStamp() string {
	if m != nil {
		return m.RibTablesConvergedTimeStamp
	}
	return ""
}

func (m *FibIssuProtoState) GetProtocolEodValid() bool {
	if m != nil {
		return m.ProtocolEodValid
	}
	return false
}

func (m *FibIssuProtoState) GetProtocolEodTimeStamp() string {
	if m != nil {
		return m.ProtocolEodTimeStamp
	}
	return ""
}

type FibIssuState struct {
	ImdrSupport              bool                 `protobuf:"varint,50,opt,name=imdr_support,json=imdrSupport,proto3" json:"imdr_support,omitempty"`
	SlcSupport               bool                 `protobuf:"varint,51,opt,name=slc_support,json=slcSupport,proto3" json:"slc_support,omitempty"`
	FisIssuRestart           bool                 `protobuf:"varint,52,opt,name=fis_issu_restart,json=fisIssuRestart,proto3" json:"fis_issu_restart,omitempty"`
	ImdrEocImplicit          bool                 `protobuf:"varint,53,opt,name=imdr_eoc_implicit,json=imdrEocImplicit,proto3" json:"imdr_eoc_implicit,omitempty"`
	SlcEocImplicit           bool                 `protobuf:"varint,54,opt,name=slc_eoc_implicit,json=slcEocImplicit,proto3" json:"slc_eoc_implicit,omitempty"`
	EocReceivedImdrTimeStamp string               `protobuf:"bytes,55,opt,name=eoc_received_imdr_time_stamp,json=eocReceivedImdrTimeStamp,proto3" json:"eoc_received_imdr_time_stamp,omitempty"`
	EocReceivedSlcTimeStamp  string               `protobuf:"bytes,56,opt,name=eoc_received_slc_time_stamp,json=eocReceivedSlcTimeStamp,proto3" json:"eoc_received_slc_time_stamp,omitempty"`
	EodReceivedImTimeStamp   string               `protobuf:"bytes,57,opt,name=eod_received_im_time_stamp,json=eodReceivedImTimeStamp,proto3" json:"eod_received_im_time_stamp,omitempty"`
	EodSentImdrTimeStamp     string               `protobuf:"bytes,58,opt,name=eod_sent_imdr_time_stamp,json=eodSentImdrTimeStamp,proto3" json:"eod_sent_imdr_time_stamp,omitempty"`
	EodSentSlcTimeStamp      string               `protobuf:"bytes,59,opt,name=eod_sent_slc_time_stamp,json=eodSentSlcTimeStamp,proto3" json:"eod_sent_slc_time_stamp,omitempty"`
	FisIssuErrorTs           uint64               `protobuf:"varint,60,opt,name=fis_issu_error_ts,json=fisIssuErrorTs,proto3" json:"fis_issu_error_ts,omitempty"`
	FisProtoState            []*FibIssuProtoState `protobuf:"bytes,61,rep,name=fis_proto_state,json=fisProtoState,proto3" json:"fis_proto_state,omitempty"`
	XXX_NoUnkeyedLiteral     struct{}             `json:"-"`
	XXX_unrecognized         []byte               `json:"-"`
	XXX_sizecache            int32                `json:"-"`
}

func (m *FibIssuState) Reset()         { *m = FibIssuState{} }
func (m *FibIssuState) String() string { return proto.CompactTextString(m) }
func (*FibIssuState) ProtoMessage()    {}
func (*FibIssuState) Descriptor() ([]byte, []int) {
	return fileDescriptor_b2beefbf2a0e9098, []int{2}
}

func (m *FibIssuState) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FibIssuState.Unmarshal(m, b)
}
func (m *FibIssuState) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FibIssuState.Marshal(b, m, deterministic)
}
func (m *FibIssuState) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FibIssuState.Merge(m, src)
}
func (m *FibIssuState) XXX_Size() int {
	return xxx_messageInfo_FibIssuState.Size(m)
}
func (m *FibIssuState) XXX_DiscardUnknown() {
	xxx_messageInfo_FibIssuState.DiscardUnknown(m)
}

var xxx_messageInfo_FibIssuState proto.InternalMessageInfo

func (m *FibIssuState) GetImdrSupport() bool {
	if m != nil {
		return m.ImdrSupport
	}
	return false
}

func (m *FibIssuState) GetSlcSupport() bool {
	if m != nil {
		return m.SlcSupport
	}
	return false
}

func (m *FibIssuState) GetFisIssuRestart() bool {
	if m != nil {
		return m.FisIssuRestart
	}
	return false
}

func (m *FibIssuState) GetImdrEocImplicit() bool {
	if m != nil {
		return m.ImdrEocImplicit
	}
	return false
}

func (m *FibIssuState) GetSlcEocImplicit() bool {
	if m != nil {
		return m.SlcEocImplicit
	}
	return false
}

func (m *FibIssuState) GetEocReceivedImdrTimeStamp() string {
	if m != nil {
		return m.EocReceivedImdrTimeStamp
	}
	return ""
}

func (m *FibIssuState) GetEocReceivedSlcTimeStamp() string {
	if m != nil {
		return m.EocReceivedSlcTimeStamp
	}
	return ""
}

func (m *FibIssuState) GetEodReceivedImTimeStamp() string {
	if m != nil {
		return m.EodReceivedImTimeStamp
	}
	return ""
}

func (m *FibIssuState) GetEodSentImdrTimeStamp() string {
	if m != nil {
		return m.EodSentImdrTimeStamp
	}
	return ""
}

func (m *FibIssuState) GetEodSentSlcTimeStamp() string {
	if m != nil {
		return m.EodSentSlcTimeStamp
	}
	return ""
}

func (m *FibIssuState) GetFisIssuErrorTs() uint64 {
	if m != nil {
		return m.FisIssuErrorTs
	}
	return 0
}

func (m *FibIssuState) GetFisProtoState() []*FibIssuProtoState {
	if m != nil {
		return m.FisProtoState
	}
	return nil
}

func init() {
	proto.RegisterType((*FibIssuState_KEYS)(nil), "cisco_ios_xr_fib_common_oper.fib.nodes.node.protocols.protocol.issu_state.fib_issu_state_KEYS")
	proto.RegisterType((*FibIssuProtoState)(nil), "cisco_ios_xr_fib_common_oper.fib.nodes.node.protocols.protocol.issu_state.fib_issu_proto_state")
	proto.RegisterType((*FibIssuState)(nil), "cisco_ios_xr_fib_common_oper.fib.nodes.node.protocols.protocol.issu_state.fib_issu_state")
}

func init() { proto.RegisterFile("fib_issu_state.proto", fileDescriptor_b2beefbf2a0e9098) }

var fileDescriptor_b2beefbf2a0e9098 = []byte{
	// 655 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x94, 0x4b, 0x6f, 0xd4, 0x30,
	0x10, 0xc7, 0x15, 0xfa, 0xa0, 0x9d, 0x7d, 0xb5, 0x69, 0x45, 0x23, 0x8a, 0xd4, 0x65, 0x41, 0x68,
	0x0b, 0x68, 0x91, 0xfa, 0x02, 0x4a, 0xe1, 0x02, 0x7b, 0x58, 0x21, 0x21, 0xb4, 0x5b, 0x81, 0x38,
	0x59, 0x89, 0xed, 0x20, 0x4b, 0x49, 0xbc, 0xf2, 0xa4, 0x15, 0x47, 0x6e, 0x7c, 0x1e, 0xbe, 0x21,
	0xb2, 0x9d, 0x38, 0x0e, 0xcb, 0x91, 0x4b, 0xd5, 0x8c, 0x7f, 0xff, 0xdf, 0xcc, 0x8e, 0xa3, 0xc0,
	0x7e, 0x2a, 0x12, 0x22, 0x10, 0x6f, 0x08, 0x96, 0x71, 0xc9, 0x27, 0x4b, 0x25, 0x4b, 0x19, 0xce,
	0xa8, 0x40, 0x2a, 0x89, 0x90, 0x48, 0x7e, 0x28, 0xa2, 0x11, 0x2a, 0xf3, 0x5c, 0x16, 0x44, 0x2e,
	0xb9, 0x9a, 0xa4, 0x22, 0x99, 0x14, 0x92, 0x71, 0x34, 0x7f, 0x6d, 0x84, 0xca, 0x0c, 0xdd, 0x7f,
	0x93, 0x46, 0x38, 0xfa, 0x0a, 0x7b, 0xed, 0x16, 0xe4, 0xe3, 0xf4, 0xdb, 0x22, 0x3c, 0x84, 0x6d,
	0x1d, 0x26, 0x45, 0x9c, 0xf3, 0x28, 0x18, 0x06, 0xe3, 0xed, 0xf9, 0x96, 0x2e, 0x7c, 0x8a, 0x73,
	0x1e, 0x3e, 0x82, 0x5e, 0xad, 0xb2, 0xc0, 0x1d, 0x03, 0x74, 0xeb, 0xa2, 0x86, 0x46, 0x3f, 0x37,
	0xbc, 0xe1, 0xcd, 0x89, 0xf5, 0xaf, 0xa6, 0x83, 0xd5, 0x74, 0xf8, 0x0c, 0xc2, 0x58, 0x24, 0x84,
	0x4b, 0x46, 0x4a, 0x91, 0x73, 0x1d, 0xcd, 0x97, 0x55, 0x9f, 0x41, 0x2c, 0x92, 0xa9, 0x64, 0xd7,
	0x22, 0xe7, 0x0b, 0x5d, 0x0e, 0x47, 0xd0, 0x53, 0x28, 0x0c, 0x7c, 0x1b, 0x67, 0x82, 0x45, 0x6b,
	0xc3, 0x60, 0xbc, 0x35, 0xef, 0x28, 0x14, 0x53, 0xc9, 0xbe, 0xe8, 0x92, 0x16, 0xd6, 0x8c, 0x27,
	0x5c, 0xb7, 0x42, 0x0b, 0xb6, 0x84, 0x19, 0x32, 0x4f, 0xb8, 0x61, 0x85, 0x19, 0x32, 0x5f, 0x58,
	0x33, 0x9e, 0x70, 0xd3, 0x0a, 0x2d, 0xd8, 0x08, 0x9f, 0xc0, 0x20, 0xcb, 0x55, 0xf5, 0x83, 0xac,
	0xf2, 0xae, 0x51, 0xf6, 0x4c, 0xd9, 0x49, 0x5f, 0xc0, 0x7e, 0xc3, 0x79, 0xda, 0x2d, 0xa3, 0xdd,
	0xad, 0xe1, 0x46, 0xfc, 0x18, 0xfa, 0x1a, 0x17, 0x45, 0x2a, 0x2b, 0xef, 0xb6, 0xf1, 0x76, 0x95,
	0x48, 0x66, 0x45, 0x2a, 0xad, 0xf6, 0x08, 0x3a, 0x09, 0x65, 0x19, 0x29, 0xe3, 0x24, 0xe3, 0x18,
	0xc1, 0x30, 0x18, 0xf7, 0xe6, 0xa0, 0x4b, 0xd7, 0xa6, 0x12, 0x1e, 0xc3, 0x0e, 0x95, 0xc5, 0x2d,
	0x57, 0xdf, 0x39, 0xab, 0xa9, 0x8e, 0xa1, 0x06, 0xae, 0x5e, 0xa1, 0x1f, 0xe0, 0x48, 0x77, 0xb4,
	0x10, 0xf1, 0x52, 0xcd, 0xb4, 0x5d, 0x33, 0xed, 0xa1, 0x12, 0x89, 0xcd, 0xbc, 0x77, 0x0a, 0x37,
	0xf7, 0x73, 0x08, 0xdd, 0x4b, 0xd0, 0xec, 0xa4, 0x67, 0x66, 0xdf, 0xa9, 0x4f, 0xdc, 0x5a, 0xce,
	0xe1, 0xa0, 0x45, 0x7b, 0xbd, 0xfa, 0xa6, 0xd7, 0xbe, 0x17, 0x71, 0x4d, 0x46, 0xbf, 0x37, 0xa0,
	0xdf, 0x7e, 0xb9, 0xc3, 0x87, 0xd0, 0x15, 0x39, 0x53, 0x04, 0x6f, 0x96, 0x4b, 0xa9, 0xca, 0xe8,
	0xc4, 0x5e, 0xac, 0xae, 0x2d, 0x6c, 0x49, 0x2f, 0x0b, 0x33, 0xea, 0x88, 0x53, 0x43, 0x00, 0x66,
	0xb4, 0x06, 0xc6, 0xb0, 0x93, 0x0a, 0xb4, 0x56, 0xc5, 0xb1, 0x8c, 0x55, 0x19, 0x9d, 0x19, 0xaa,
	0x9f, 0x0a, 0x9c, 0x21, 0xde, 0xcc, 0x6d, 0x35, 0x7c, 0x0a, 0xbb, 0xa6, 0x1b, 0x97, 0x94, 0x88,
	0x7c, 0x99, 0x09, 0x2a, 0xca, 0xe8, 0xdc, 0xa0, 0x03, 0x7d, 0x30, 0x95, 0x74, 0x56, 0x95, 0xb5,
	0x55, 0xb7, 0x6d, 0xa1, 0x17, 0xd6, 0x8a, 0x19, 0xf5, 0xc9, 0x77, 0xf0, 0x40, 0x53, 0x8a, 0x53,
	0x2e, 0x6e, 0x39, 0x23, 0xa6, 0x85, 0xb7, 0x92, 0x97, 0x66, 0x25, 0x11, 0x97, 0x74, 0x5e, 0x21,
	0xb3, 0x9c, 0xa9, 0x66, 0xf7, 0x57, 0x70, 0xd8, 0xca, 0xeb, 0xb6, 0x5e, 0xfc, 0x95, 0x89, 0x1f,
	0x78, 0xf1, 0x45, 0x46, 0x9b, 0xf4, 0x25, 0xdc, 0xd7, 0x57, 0xe0, 0x75, 0xf7, 0xc3, 0xaf, 0x4d,
	0xf8, 0x1e, 0x97, 0xac, 0xe9, 0xdd, 0x64, 0x2f, 0x20, 0xd2, 0x59, 0xe4, 0x45, 0xb9, 0x32, 0xf5,
	0xa5, 0xbd, 0x48, 0x2e, 0xd9, 0x82, 0x17, 0x65, 0x7b, 0xe2, 0x33, 0x38, 0x70, 0xb9, 0xbf, 0xa6,
	0x7d, 0x63, 0x62, 0x7b, 0x55, 0xac, 0x35, 0xe9, 0x31, 0xec, 0xba, 0x7b, 0xe2, 0x4a, 0x49, 0x45,
	0x4a, 0x8c, 0xae, 0x86, 0xc1, 0x78, 0xdd, 0x5d, 0xd4, 0x54, 0x97, 0xaf, 0x31, 0xfc, 0x15, 0xc0,
	0x40, 0xb3, 0xde, 0x77, 0x2a, 0x7a, 0x3b, 0x5c, 0x1b, 0x77, 0x4e, 0xc8, 0xe4, 0xbf, 0x7d, 0x6b,
	0x27, 0xff, 0xfa, 0x1c, 0xce, 0x7b, 0xa9, 0xc0, 0xcf, 0xfa, 0x79, 0xa1, 0x1f, 0x93, 0x4d, 0x73,
	0x76, 0xfa, 0x27, 0x00, 0x00, 0xff, 0xff, 0x91, 0x92, 0x49, 0xd9, 0xf9, 0x05, 0x00, 0x00,
}
