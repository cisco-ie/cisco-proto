/*
Copyright 2019 Cisco Systems

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: fib_sh_sum.proto

package cisco_ios_xr_fib_common_oper_fib_nodes_node_protocols_protocol_fib_summaries_fib_summary

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type FibShSum_KEYS struct {
	NodeName             string   `protobuf:"bytes,1,opt,name=node_name,json=nodeName,proto3" json:"node_name,omitempty"`
	ProtocolName         string   `protobuf:"bytes,2,opt,name=protocol_name,json=protocolName,proto3" json:"protocol_name,omitempty"`
	VrfName              string   `protobuf:"bytes,3,opt,name=vrf_name,json=vrfName,proto3" json:"vrf_name,omitempty"`
	TableId              string   `protobuf:"bytes,4,opt,name=table_id,json=tableId,proto3" json:"table_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FibShSum_KEYS) Reset()         { *m = FibShSum_KEYS{} }
func (m *FibShSum_KEYS) String() string { return proto.CompactTextString(m) }
func (*FibShSum_KEYS) ProtoMessage()    {}
func (*FibShSum_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_6b124c48422c0f95, []int{0}
}

func (m *FibShSum_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FibShSum_KEYS.Unmarshal(m, b)
}
func (m *FibShSum_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FibShSum_KEYS.Marshal(b, m, deterministic)
}
func (m *FibShSum_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FibShSum_KEYS.Merge(m, src)
}
func (m *FibShSum_KEYS) XXX_Size() int {
	return xxx_messageInfo_FibShSum_KEYS.Size(m)
}
func (m *FibShSum_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_FibShSum_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_FibShSum_KEYS proto.InternalMessageInfo

func (m *FibShSum_KEYS) GetNodeName() string {
	if m != nil {
		return m.NodeName
	}
	return ""
}

func (m *FibShSum_KEYS) GetProtocolName() string {
	if m != nil {
		return m.ProtocolName
	}
	return ""
}

func (m *FibShSum_KEYS) GetVrfName() string {
	if m != nil {
		return m.VrfName
	}
	return ""
}

func (m *FibShSum_KEYS) GetTableId() string {
	if m != nil {
		return m.TableId
	}
	return ""
}

type FibPlLdiCount struct {
	TotalLoadSharingElementBytes      uint32   `protobuf:"varint,1,opt,name=total_load_sharing_element_bytes,json=totalLoadSharingElementBytes,proto3" json:"total_load_sharing_element_bytes,omitempty"`
	TotalLoadSharingElementReferences uint64   `protobuf:"varint,2,opt,name=total_load_sharing_element_references,json=totalLoadSharingElementReferences,proto3" json:"total_load_sharing_element_references,omitempty"`
	TotalPathListElements             uint32   `protobuf:"varint,3,opt,name=total_path_list_elements,json=totalPathListElements,proto3" json:"total_path_list_elements,omitempty"`
	RecursivePathListElements         uint32   `protobuf:"varint,4,opt,name=recursive_path_list_elements,json=recursivePathListElements,proto3" json:"recursive_path_list_elements,omitempty"`
	PlatformSharedPathListElements    uint32   `protobuf:"varint,5,opt,name=platform_shared_path_list_elements,json=platformSharedPathListElements,proto3" json:"platform_shared_path_list_elements,omitempty"`
	RetryPathListElements             uint32   `protobuf:"varint,6,opt,name=retry_path_list_elements,json=retryPathListElements,proto3" json:"retry_path_list_elements,omitempty"`
	TotalLoadInfoElements             uint32   `protobuf:"varint,7,opt,name=total_load_info_elements,json=totalLoadInfoElements,proto3" json:"total_load_info_elements,omitempty"`
	RecursiveLoadInfoElements         uint32   `protobuf:"varint,8,opt,name=recursive_load_info_elements,json=recursiveLoadInfoElements,proto3" json:"recursive_load_info_elements,omitempty"`
	PlatformSharedLoadInfoElements    uint32   `protobuf:"varint,9,opt,name=platform_shared_load_info_elements,json=platformSharedLoadInfoElements,proto3" json:"platform_shared_load_info_elements,omitempty"`
	XplLoadInfoElements               uint32   `protobuf:"varint,10,opt,name=xpl_load_info_elements,json=xplLoadInfoElements,proto3" json:"xpl_load_info_elements,omitempty"`
	XXX_NoUnkeyedLiteral              struct{} `json:"-"`
	XXX_unrecognized                  []byte   `json:"-"`
	XXX_sizecache                     int32    `json:"-"`
}

func (m *FibPlLdiCount) Reset()         { *m = FibPlLdiCount{} }
func (m *FibPlLdiCount) String() string { return proto.CompactTextString(m) }
func (*FibPlLdiCount) ProtoMessage()    {}
func (*FibPlLdiCount) Descriptor() ([]byte, []int) {
	return fileDescriptor_6b124c48422c0f95, []int{1}
}

func (m *FibPlLdiCount) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FibPlLdiCount.Unmarshal(m, b)
}
func (m *FibPlLdiCount) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FibPlLdiCount.Marshal(b, m, deterministic)
}
func (m *FibPlLdiCount) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FibPlLdiCount.Merge(m, src)
}
func (m *FibPlLdiCount) XXX_Size() int {
	return xxx_messageInfo_FibPlLdiCount.Size(m)
}
func (m *FibPlLdiCount) XXX_DiscardUnknown() {
	xxx_messageInfo_FibPlLdiCount.DiscardUnknown(m)
}

var xxx_messageInfo_FibPlLdiCount proto.InternalMessageInfo

func (m *FibPlLdiCount) GetTotalLoadSharingElementBytes() uint32 {
	if m != nil {
		return m.TotalLoadSharingElementBytes
	}
	return 0
}

func (m *FibPlLdiCount) GetTotalLoadSharingElementReferences() uint64 {
	if m != nil {
		return m.TotalLoadSharingElementReferences
	}
	return 0
}

func (m *FibPlLdiCount) GetTotalPathListElements() uint32 {
	if m != nil {
		return m.TotalPathListElements
	}
	return 0
}

func (m *FibPlLdiCount) GetRecursivePathListElements() uint32 {
	if m != nil {
		return m.RecursivePathListElements
	}
	return 0
}

func (m *FibPlLdiCount) GetPlatformSharedPathListElements() uint32 {
	if m != nil {
		return m.PlatformSharedPathListElements
	}
	return 0
}

func (m *FibPlLdiCount) GetRetryPathListElements() uint32 {
	if m != nil {
		return m.RetryPathListElements
	}
	return 0
}

func (m *FibPlLdiCount) GetTotalLoadInfoElements() uint32 {
	if m != nil {
		return m.TotalLoadInfoElements
	}
	return 0
}

func (m *FibPlLdiCount) GetRecursiveLoadInfoElements() uint32 {
	if m != nil {
		return m.RecursiveLoadInfoElements
	}
	return 0
}

func (m *FibPlLdiCount) GetPlatformSharedLoadInfoElements() uint32 {
	if m != nil {
		return m.PlatformSharedLoadInfoElements
	}
	return 0
}

func (m *FibPlLdiCount) GetXplLoadInfoElements() uint32 {
	if m != nil {
		return m.XplLoadInfoElements
	}
	return 0
}

type FibShPfxMasklenCnt struct {
	MaskLength           uint32   `protobuf:"varint,1,opt,name=mask_length,json=maskLength,proto3" json:"mask_length,omitempty"`
	NumberOfPrefixes     uint32   `protobuf:"varint,2,opt,name=number_of_prefixes,json=numberOfPrefixes,proto3" json:"number_of_prefixes,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FibShPfxMasklenCnt) Reset()         { *m = FibShPfxMasklenCnt{} }
func (m *FibShPfxMasklenCnt) String() string { return proto.CompactTextString(m) }
func (*FibShPfxMasklenCnt) ProtoMessage()    {}
func (*FibShPfxMasklenCnt) Descriptor() ([]byte, []int) {
	return fileDescriptor_6b124c48422c0f95, []int{2}
}

func (m *FibShPfxMasklenCnt) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FibShPfxMasklenCnt.Unmarshal(m, b)
}
func (m *FibShPfxMasklenCnt) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FibShPfxMasklenCnt.Marshal(b, m, deterministic)
}
func (m *FibShPfxMasklenCnt) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FibShPfxMasklenCnt.Merge(m, src)
}
func (m *FibShPfxMasklenCnt) XXX_Size() int {
	return xxx_messageInfo_FibShPfxMasklenCnt.Size(m)
}
func (m *FibShPfxMasklenCnt) XXX_DiscardUnknown() {
	xxx_messageInfo_FibShPfxMasklenCnt.DiscardUnknown(m)
}

var xxx_messageInfo_FibShPfxMasklenCnt proto.InternalMessageInfo

func (m *FibShPfxMasklenCnt) GetMaskLength() uint32 {
	if m != nil {
		return m.MaskLength
	}
	return 0
}

func (m *FibShPfxMasklenCnt) GetNumberOfPrefixes() uint32 {
	if m != nil {
		return m.NumberOfPrefixes
	}
	return 0
}

type FibShPfxMasklenDistrib struct {
	UnicastPrefixe       []*FibShPfxMasklenCnt `protobuf:"bytes,1,rep,name=unicast_prefixe,json=unicastPrefixe,proto3" json:"unicast_prefixe,omitempty"`
	BroadcastPrefixe     []*FibShPfxMasklenCnt `protobuf:"bytes,2,rep,name=broadcast_prefixe,json=broadcastPrefixe,proto3" json:"broadcast_prefixe,omitempty"`
	MulticastPrefix      []*FibShPfxMasklenCnt `protobuf:"bytes,3,rep,name=multicast_prefix,json=multicastPrefix,proto3" json:"multicast_prefix,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *FibShPfxMasklenDistrib) Reset()         { *m = FibShPfxMasklenDistrib{} }
func (m *FibShPfxMasklenDistrib) String() string { return proto.CompactTextString(m) }
func (*FibShPfxMasklenDistrib) ProtoMessage()    {}
func (*FibShPfxMasklenDistrib) Descriptor() ([]byte, []int) {
	return fileDescriptor_6b124c48422c0f95, []int{3}
}

func (m *FibShPfxMasklenDistrib) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FibShPfxMasklenDistrib.Unmarshal(m, b)
}
func (m *FibShPfxMasklenDistrib) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FibShPfxMasklenDistrib.Marshal(b, m, deterministic)
}
func (m *FibShPfxMasklenDistrib) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FibShPfxMasklenDistrib.Merge(m, src)
}
func (m *FibShPfxMasklenDistrib) XXX_Size() int {
	return xxx_messageInfo_FibShPfxMasklenDistrib.Size(m)
}
func (m *FibShPfxMasklenDistrib) XXX_DiscardUnknown() {
	xxx_messageInfo_FibShPfxMasklenDistrib.DiscardUnknown(m)
}

var xxx_messageInfo_FibShPfxMasklenDistrib proto.InternalMessageInfo

func (m *FibShPfxMasklenDistrib) GetUnicastPrefixe() []*FibShPfxMasklenCnt {
	if m != nil {
		return m.UnicastPrefixe
	}
	return nil
}

func (m *FibShPfxMasklenDistrib) GetBroadcastPrefixe() []*FibShPfxMasklenCnt {
	if m != nil {
		return m.BroadcastPrefixe
	}
	return nil
}

func (m *FibShPfxMasklenDistrib) GetMulticastPrefix() []*FibShPfxMasklenCnt {
	if m != nil {
		return m.MulticastPrefix
	}
	return nil
}

type FibShSum struct {
	Prefix                        []byte                  `protobuf:"bytes,50,opt,name=prefix,proto3" json:"prefix,omitempty"`
	SsTblId                       uint32                  `protobuf:"varint,51,opt,name=ss_tbl_id,json=ssTblId,proto3" json:"ss_tbl_id,omitempty"`
	SsTblIdPtr                    uint32                  `protobuf:"varint,52,opt,name=ss_tbl_id_ptr,json=ssTblIdPtr,proto3" json:"ss_tbl_id_ptr,omitempty"`
	SsVrfId                       uint32                  `protobuf:"varint,53,opt,name=ss_vrf_id,json=ssVrfId,proto3" json:"ss_vrf_id,omitempty"`
	SsVrId                        uint32                  `protobuf:"varint,54,opt,name=ss_vr_id,json=ssVrId,proto3" json:"ss_vr_id,omitempty"`
	LoadBalancing                 string                  `protobuf:"bytes,55,opt,name=load_balancing,json=loadBalancing,proto3" json:"load_balancing,omitempty"`
	ForwardingElements            uint32                  `protobuf:"varint,56,opt,name=forwarding_elements,json=forwardingElements,proto3" json:"forwarding_elements,omitempty"`
	Routes                        uint32                  `protobuf:"varint,57,opt,name=routes,proto3" json:"routes,omitempty"`
	PrefixInPlaceModifications    uint32                  `protobuf:"varint,58,opt,name=prefix_in_place_modifications,json=prefixInPlaceModifications,proto3" json:"prefix_in_place_modifications,omitempty"`
	StalePrefixDeletes            uint32                  `protobuf:"varint,59,opt,name=stale_prefix_deletes,json=stalePrefixDeletes,proto3" json:"stale_prefix_deletes,omitempty"`
	LoadSharingElements           uint32                  `protobuf:"varint,60,opt,name=load_sharing_elements,json=loadSharingElements,proto3" json:"load_sharing_elements,omitempty"`
	LoadSharingReferences         uint64                  `protobuf:"varint,61,opt,name=load_sharing_references,json=loadSharingReferences,proto3" json:"load_sharing_references,omitempty"`
	TotalLoadShareElementBytes    uint32                  `protobuf:"varint,62,opt,name=total_load_share_element_bytes,json=totalLoadShareElementBytes,proto3" json:"total_load_share_element_bytes,omitempty"`
	ExclusiveLoadSharingElement   *FibPlLdiCount          `protobuf:"bytes,63,opt,name=exclusive_load_sharing_element,json=exclusiveLoadSharingElement,proto3" json:"exclusive_load_sharing_element,omitempty"`
	SharedLoadSharingElement      *FibPlLdiCount          `protobuf:"bytes,64,opt,name=shared_load_sharing_element,json=sharedLoadSharingElement,proto3" json:"shared_load_sharing_element,omitempty"`
	CrossSharedLoadSharingElement *FibPlLdiCount          `protobuf:"bytes,65,opt,name=cross_shared_load_sharing_element,json=crossSharedLoadSharingElement,proto3" json:"cross_shared_load_sharing_element,omitempty"`
	EncapSharedLoadSharingElement *FibPlLdiCount          `protobuf:"bytes,66,opt,name=encap_shared_load_sharing_element,json=encapSharedLoadSharingElement,proto3" json:"encap_shared_load_sharing_element,omitempty"`
	LeavesUsedBytes               uint32                  `protobuf:"varint,67,opt,name=leaves_used_bytes,json=leavesUsedBytes,proto3" json:"leaves_used_bytes,omitempty"`
	ReresolveEntries              uint32                  `protobuf:"varint,68,opt,name=reresolve_entries,json=reresolveEntries,proto3" json:"reresolve_entries,omitempty"`
	OldUnresolveEntries           uint32                  `protobuf:"varint,69,opt,name=old_unresolve_entries,json=oldUnresolveEntries,proto3" json:"old_unresolve_entries,omitempty"`
	NewUnresolveEntries           uint32                  `protobuf:"varint,70,opt,name=new_unresolve_entries,json=newUnresolveEntries,proto3" json:"new_unresolve_entries,omitempty"`
	UnresolveEntries              uint32                  `protobuf:"varint,71,opt,name=unresolve_entries,json=unresolveEntries,proto3" json:"unresolve_entries,omitempty"`
	CefRouteDrops                 uint32                  `protobuf:"varint,72,opt,name=cef_route_drops,json=cefRouteDrops,proto3" json:"cef_route_drops,omitempty"`
	CefVersionMismatchRouteDrops  uint64                  `protobuf:"varint,73,opt,name=cef_version_mismatch_route_drops,json=cefVersionMismatchRouteDrops,proto3" json:"cef_version_mismatch_route_drops,omitempty"`
	DeleteCacheNumEntries         uint32                  `protobuf:"varint,74,opt,name=delete_cache_num_entries,json=deleteCacheNumEntries,proto3" json:"delete_cache_num_entries,omitempty"`
	ExistingLeavesRevisions       uint32                  `protobuf:"varint,75,opt,name=existing_leaves_revisions,json=existingLeavesRevisions,proto3" json:"existing_leaves_revisions,omitempty"`
	FibDefaultPrefix              uint32                  `protobuf:"varint,76,opt,name=fib_default_prefix,json=fibDefaultPrefix,proto3" json:"fib_default_prefix,omitempty"`
	FibDefaultPrefixMaskLength    uint32                  `protobuf:"varint,77,opt,name=fib_default_prefix_mask_length,json=fibDefaultPrefixMaskLength,proto3" json:"fib_default_prefix_mask_length,omitempty"`
	NextHops                      uint32                  `protobuf:"varint,78,opt,name=next_hops,json=nextHops,proto3" json:"next_hops,omitempty"`
	IncompleteNextHops            uint32                  `protobuf:"varint,79,opt,name=incomplete_next_hops,json=incompleteNextHops,proto3" json:"incomplete_next_hops,omitempty"`
	ResolutionTimer               uint32                  `protobuf:"varint,80,opt,name=resolution_timer,json=resolutionTimer,proto3" json:"resolution_timer,omitempty"`
	SlowProcessTimer              uint32                  `protobuf:"varint,81,opt,name=slow_process_timer,json=slowProcessTimer,proto3" json:"slow_process_timer,omitempty"`
	MaxResolutionTimer            uint32                  `protobuf:"varint,82,opt,name=max_resolution_timer,json=maxResolutionTimer,proto3" json:"max_resolution_timer,omitempty"`
	ImpositionPrefixes            uint32                  `protobuf:"varint,83,opt,name=imposition_prefixes,json=impositionPrefixes,proto3" json:"imposition_prefixes,omitempty"`
	ExtendedPrefixes              uint32                  `protobuf:"varint,84,opt,name=extended_prefixes,json=extendedPrefixes,proto3" json:"extended_prefixes,omitempty"`
	CeflBlRecycledRoutes          uint32                  `protobuf:"varint,85,opt,name=cefl_bl_recycled_routes,json=ceflBlRecycledRoutes,proto3" json:"cefl_bl_recycled_routes,omitempty"`
	LdiBackwalks                  uint32                  `protobuf:"varint,86,opt,name=ldi_backwalks,json=ldiBackwalks,proto3" json:"ldi_backwalks,omitempty"`
	SsProtRouteCount              uint32                  `protobuf:"varint,87,opt,name=ss_prot_route_count,json=ssProtRouteCount,proto3" json:"ss_prot_route_count,omitempty"`
	LispEidPrefixes               uint32                  `protobuf:"varint,88,opt,name=lisp_eid_prefixes,json=lispEidPrefixes,proto3" json:"lisp_eid_prefixes,omitempty"`
	LispEidValidPrefixes          uint32                  `protobuf:"varint,89,opt,name=lisp_eid_valid_prefixes,json=lispEidValidPrefixes,proto3" json:"lisp_eid_valid_prefixes,omitempty"`
	LispRlocObjects               uint32                  `protobuf:"varint,90,opt,name=lisp_rloc_objects,json=lispRlocObjects,proto3" json:"lisp_rloc_objects,omitempty"`
	NumberOfSrLabels              uint32                  `protobuf:"varint,91,opt,name=number_of_sr_labels,json=numberOfSrLabels,proto3" json:"number_of_sr_labels,omitempty"`
	SsVxlanLtepIfh                string                  `protobuf:"bytes,92,opt,name=ss_vxlan_ltep_ifh,json=ssVxlanLtepIfh,proto3" json:"ss_vxlan_ltep_ifh,omitempty"`
	SsDropPlCount                 uint32                  `protobuf:"varint,93,opt,name=ss_drop_pl_count,json=ssDropPlCount,proto3" json:"ss_drop_pl_count,omitempty"`
	PrefixMasklenDistribution     *FibShPfxMasklenDistrib `protobuf:"bytes,94,opt,name=prefix_masklen_distribution,json=prefixMasklenDistribution,proto3" json:"prefix_masklen_distribution,omitempty"`
	XXX_NoUnkeyedLiteral          struct{}                `json:"-"`
	XXX_unrecognized              []byte                  `json:"-"`
	XXX_sizecache                 int32                   `json:"-"`
}

func (m *FibShSum) Reset()         { *m = FibShSum{} }
func (m *FibShSum) String() string { return proto.CompactTextString(m) }
func (*FibShSum) ProtoMessage()    {}
func (*FibShSum) Descriptor() ([]byte, []int) {
	return fileDescriptor_6b124c48422c0f95, []int{4}
}

func (m *FibShSum) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FibShSum.Unmarshal(m, b)
}
func (m *FibShSum) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FibShSum.Marshal(b, m, deterministic)
}
func (m *FibShSum) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FibShSum.Merge(m, src)
}
func (m *FibShSum) XXX_Size() int {
	return xxx_messageInfo_FibShSum.Size(m)
}
func (m *FibShSum) XXX_DiscardUnknown() {
	xxx_messageInfo_FibShSum.DiscardUnknown(m)
}

var xxx_messageInfo_FibShSum proto.InternalMessageInfo

func (m *FibShSum) GetPrefix() []byte {
	if m != nil {
		return m.Prefix
	}
	return nil
}

func (m *FibShSum) GetSsTblId() uint32 {
	if m != nil {
		return m.SsTblId
	}
	return 0
}

func (m *FibShSum) GetSsTblIdPtr() uint32 {
	if m != nil {
		return m.SsTblIdPtr
	}
	return 0
}

func (m *FibShSum) GetSsVrfId() uint32 {
	if m != nil {
		return m.SsVrfId
	}
	return 0
}

func (m *FibShSum) GetSsVrId() uint32 {
	if m != nil {
		return m.SsVrId
	}
	return 0
}

func (m *FibShSum) GetLoadBalancing() string {
	if m != nil {
		return m.LoadBalancing
	}
	return ""
}

func (m *FibShSum) GetForwardingElements() uint32 {
	if m != nil {
		return m.ForwardingElements
	}
	return 0
}

func (m *FibShSum) GetRoutes() uint32 {
	if m != nil {
		return m.Routes
	}
	return 0
}

func (m *FibShSum) GetPrefixInPlaceModifications() uint32 {
	if m != nil {
		return m.PrefixInPlaceModifications
	}
	return 0
}

func (m *FibShSum) GetStalePrefixDeletes() uint32 {
	if m != nil {
		return m.StalePrefixDeletes
	}
	return 0
}

func (m *FibShSum) GetLoadSharingElements() uint32 {
	if m != nil {
		return m.LoadSharingElements
	}
	return 0
}

func (m *FibShSum) GetLoadSharingReferences() uint64 {
	if m != nil {
		return m.LoadSharingReferences
	}
	return 0
}

func (m *FibShSum) GetTotalLoadShareElementBytes() uint32 {
	if m != nil {
		return m.TotalLoadShareElementBytes
	}
	return 0
}

func (m *FibShSum) GetExclusiveLoadSharingElement() *FibPlLdiCount {
	if m != nil {
		return m.ExclusiveLoadSharingElement
	}
	return nil
}

func (m *FibShSum) GetSharedLoadSharingElement() *FibPlLdiCount {
	if m != nil {
		return m.SharedLoadSharingElement
	}
	return nil
}

func (m *FibShSum) GetCrossSharedLoadSharingElement() *FibPlLdiCount {
	if m != nil {
		return m.CrossSharedLoadSharingElement
	}
	return nil
}

func (m *FibShSum) GetEncapSharedLoadSharingElement() *FibPlLdiCount {
	if m != nil {
		return m.EncapSharedLoadSharingElement
	}
	return nil
}

func (m *FibShSum) GetLeavesUsedBytes() uint32 {
	if m != nil {
		return m.LeavesUsedBytes
	}
	return 0
}

func (m *FibShSum) GetReresolveEntries() uint32 {
	if m != nil {
		return m.ReresolveEntries
	}
	return 0
}

func (m *FibShSum) GetOldUnresolveEntries() uint32 {
	if m != nil {
		return m.OldUnresolveEntries
	}
	return 0
}

func (m *FibShSum) GetNewUnresolveEntries() uint32 {
	if m != nil {
		return m.NewUnresolveEntries
	}
	return 0
}

func (m *FibShSum) GetUnresolveEntries() uint32 {
	if m != nil {
		return m.UnresolveEntries
	}
	return 0
}

func (m *FibShSum) GetCefRouteDrops() uint32 {
	if m != nil {
		return m.CefRouteDrops
	}
	return 0
}

func (m *FibShSum) GetCefVersionMismatchRouteDrops() uint64 {
	if m != nil {
		return m.CefVersionMismatchRouteDrops
	}
	return 0
}

func (m *FibShSum) GetDeleteCacheNumEntries() uint32 {
	if m != nil {
		return m.DeleteCacheNumEntries
	}
	return 0
}

func (m *FibShSum) GetExistingLeavesRevisions() uint32 {
	if m != nil {
		return m.ExistingLeavesRevisions
	}
	return 0
}

func (m *FibShSum) GetFibDefaultPrefix() uint32 {
	if m != nil {
		return m.FibDefaultPrefix
	}
	return 0
}

func (m *FibShSum) GetFibDefaultPrefixMaskLength() uint32 {
	if m != nil {
		return m.FibDefaultPrefixMaskLength
	}
	return 0
}

func (m *FibShSum) GetNextHops() uint32 {
	if m != nil {
		return m.NextHops
	}
	return 0
}

func (m *FibShSum) GetIncompleteNextHops() uint32 {
	if m != nil {
		return m.IncompleteNextHops
	}
	return 0
}

func (m *FibShSum) GetResolutionTimer() uint32 {
	if m != nil {
		return m.ResolutionTimer
	}
	return 0
}

func (m *FibShSum) GetSlowProcessTimer() uint32 {
	if m != nil {
		return m.SlowProcessTimer
	}
	return 0
}

func (m *FibShSum) GetMaxResolutionTimer() uint32 {
	if m != nil {
		return m.MaxResolutionTimer
	}
	return 0
}

func (m *FibShSum) GetImpositionPrefixes() uint32 {
	if m != nil {
		return m.ImpositionPrefixes
	}
	return 0
}

func (m *FibShSum) GetExtendedPrefixes() uint32 {
	if m != nil {
		return m.ExtendedPrefixes
	}
	return 0
}

func (m *FibShSum) GetCeflBlRecycledRoutes() uint32 {
	if m != nil {
		return m.CeflBlRecycledRoutes
	}
	return 0
}

func (m *FibShSum) GetLdiBackwalks() uint32 {
	if m != nil {
		return m.LdiBackwalks
	}
	return 0
}

func (m *FibShSum) GetSsProtRouteCount() uint32 {
	if m != nil {
		return m.SsProtRouteCount
	}
	return 0
}

func (m *FibShSum) GetLispEidPrefixes() uint32 {
	if m != nil {
		return m.LispEidPrefixes
	}
	return 0
}

func (m *FibShSum) GetLispEidValidPrefixes() uint32 {
	if m != nil {
		return m.LispEidValidPrefixes
	}
	return 0
}

func (m *FibShSum) GetLispRlocObjects() uint32 {
	if m != nil {
		return m.LispRlocObjects
	}
	return 0
}

func (m *FibShSum) GetNumberOfSrLabels() uint32 {
	if m != nil {
		return m.NumberOfSrLabels
	}
	return 0
}

func (m *FibShSum) GetSsVxlanLtepIfh() string {
	if m != nil {
		return m.SsVxlanLtepIfh
	}
	return ""
}

func (m *FibShSum) GetSsDropPlCount() uint32 {
	if m != nil {
		return m.SsDropPlCount
	}
	return 0
}

func (m *FibShSum) GetPrefixMasklenDistribution() *FibShPfxMasklenDistrib {
	if m != nil {
		return m.PrefixMasklenDistribution
	}
	return nil
}

func init() {
	proto.RegisterType((*FibShSum_KEYS)(nil), "cisco_ios_xr_fib_common_oper.fib.nodes.node.protocols.protocol.fib_summaries.fib_summary.fib_sh_sum_KEYS")
	proto.RegisterType((*FibPlLdiCount)(nil), "cisco_ios_xr_fib_common_oper.fib.nodes.node.protocols.protocol.fib_summaries.fib_summary.fib_pl_ldi_count")
	proto.RegisterType((*FibShPfxMasklenCnt)(nil), "cisco_ios_xr_fib_common_oper.fib.nodes.node.protocols.protocol.fib_summaries.fib_summary.fib_sh_pfx_masklen_cnt")
	proto.RegisterType((*FibShPfxMasklenDistrib)(nil), "cisco_ios_xr_fib_common_oper.fib.nodes.node.protocols.protocol.fib_summaries.fib_summary.fib_sh_pfx_masklen_distrib")
	proto.RegisterType((*FibShSum)(nil), "cisco_ios_xr_fib_common_oper.fib.nodes.node.protocols.protocol.fib_summaries.fib_summary.fib_sh_sum")
}

func init() { proto.RegisterFile("fib_sh_sum.proto", fileDescriptor_6b124c48422c0f95) }

var fileDescriptor_6b124c48422c0f95 = []byte{
	// 1495 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xc4, 0x57, 0x5d, 0x73, 0xd4, 0xbc,
	0x15, 0x9e, 0x25, 0x10, 0x12, 0xc1, 0x92, 0xc4, 0xf9, 0xc0, 0x21, 0x40, 0x43, 0x18, 0xda, 0x50,
	0xda, 0xc0, 0x84, 0x42, 0x5a, 0xfa, 0x41, 0x09, 0x09, 0x65, 0x21, 0x09, 0x5b, 0x07, 0x52, 0xe8,
	0x97, 0x46, 0xb6, 0x8f, 0xb3, 0x02, 0x59, 0xf2, 0x48, 0xf2, 0x66, 0xf3, 0x13, 0xfa, 0x13, 0x3a,
	0x9d, 0xde, 0x76, 0xa6, 0x57, 0xef, 0x0d, 0xff, 0xe2, 0xfd, 0x3f, 0xef, 0xf5, 0x3b, 0x92, 0x6c,
	0xaf, 0xb3, 0xbb, 0xe4, 0x8e, 0x70, 0x93, 0x89, 0xcf, 0xf3, 0x3c, 0xc7, 0xcf, 0xd1, 0x4a, 0xe7,
	0xc8, 0x68, 0x3a, 0xa1, 0x21, 0x56, 0x1d, 0xac, 0xf2, 0x74, 0x2d, 0x93, 0x42, 0x0b, 0xef, 0x7d,
	0x44, 0x55, 0x24, 0x30, 0x15, 0x0a, 0xf7, 0x24, 0x36, 0x70, 0x24, 0xd2, 0x54, 0x70, 0x2c, 0x32,
	0x90, 0x6b, 0x09, 0x0d, 0xd7, 0xb8, 0x88, 0x41, 0xd9, 0xbf, 0x4e, 0x12, 0x09, 0xa6, 0xaa, 0xff,
	0xd6, 0x6c, 0xc2, 0x3c, 0x4d, 0x89, 0xa4, 0xa0, 0x6a, 0x4f, 0xc7, 0x2b, 0xff, 0x6a, 0xa0, 0xa9,
	0xfe, 0xeb, 0xf0, 0xeb, 0xed, 0x0f, 0xfb, 0xde, 0x12, 0x9a, 0x34, 0x89, 0x30, 0x27, 0x29, 0xf8,
	0x8d, 0xe5, 0xc6, 0xea, 0x64, 0x30, 0x61, 0x02, 0x7b, 0x24, 0x05, 0xef, 0x36, 0x6a, 0x96, 0x69,
	0x1d, 0xe1, 0x9c, 0x25, 0x5c, 0x2e, 0x83, 0x96, 0xb4, 0x88, 0x26, 0xba, 0x32, 0x71, 0xf8, 0x98,
	0xc5, 0x2f, 0x76, 0x65, 0x52, 0x42, 0x9a, 0x84, 0x0c, 0x30, 0x8d, 0xfd, 0xf3, 0x0e, 0xb2, 0xcf,
	0xad, 0x78, 0xe5, 0x7f, 0x17, 0x5c, 0xe9, 0x19, 0xc3, 0x2c, 0xa6, 0x38, 0x12, 0x39, 0xd7, 0xde,
	0x0b, 0xb4, 0xac, 0x85, 0x26, 0x0c, 0x33, 0x41, 0x62, 0xac, 0x3a, 0x44, 0x52, 0x7e, 0x88, 0x81,
	0x41, 0x0a, 0x5c, 0xe3, 0xf0, 0x58, 0x83, 0xb2, 0x1e, 0x9b, 0xc1, 0x75, 0xcb, 0xdb, 0x11, 0x24,
	0xde, 0x77, 0xac, 0x6d, 0x47, 0xda, 0x34, 0x1c, 0xaf, 0x8d, 0xee, 0x9c, 0x92, 0x47, 0x42, 0x02,
	0x12, 0x78, 0x04, 0xca, 0xd6, 0x73, 0x3e, 0xb8, 0xf5, 0x85, 0x64, 0x41, 0x45, 0xf4, 0x36, 0x90,
	0xef, 0x32, 0x66, 0x44, 0x77, 0x30, 0xa3, 0x4a, 0x97, 0xe9, 0x94, 0x2d, 0xba, 0x19, 0xcc, 0x5b,
	0xbc, 0x4d, 0x74, 0x67, 0x87, 0x2a, 0x5d, 0x64, 0x50, 0xde, 0x53, 0x74, 0x5d, 0x42, 0x94, 0x4b,
	0x45, 0xbb, 0x30, 0x4a, 0x7c, 0xde, 0x8a, 0x17, 0x2b, 0xce, 0x50, 0x82, 0x57, 0x68, 0x25, 0x63,
	0x44, 0x27, 0x42, 0xa6, 0xb6, 0x12, 0x88, 0x47, 0xa5, 0xb9, 0x60, 0xd3, 0xdc, 0x2c, 0x99, 0xfb,
	0x96, 0x38, 0x94, 0x6b, 0x03, 0xf9, 0x12, 0xb4, 0x3c, 0x1e, 0x95, 0x61, 0xdc, 0x55, 0x61, 0xf1,
	0x51, 0xc2, 0xda, 0x82, 0x52, 0x9e, 0x88, 0xbe, 0xf0, 0x62, 0xad, 0x7c, 0xb3, 0x86, 0x2d, 0x9e,
	0x88, 0xd1, 0xe5, 0x8f, 0x10, 0x4f, 0x0c, 0x94, 0x3f, 0x94, 0x60, 0x44, 0xf9, 0x23, 0xd2, 0x4c,
	0x8e, 0x2a, 0x7f, 0x28, 0xd7, 0x43, 0xb4, 0xd0, 0xcb, 0x46, 0xd6, 0x80, 0xac, 0x7e, 0xb6, 0x97,
	0x0d, 0x55, 0xb0, 0x72, 0x88, 0x16, 0x8a, 0x33, 0x93, 0x25, 0x3d, 0x9c, 0x12, 0xf5, 0x89, 0x01,
	0xc7, 0x11, 0xd7, 0xde, 0x4f, 0xd0, 0x25, 0xf3, 0x88, 0x19, 0xf0, 0x43, 0xdd, 0x29, 0x36, 0x26,
	0x32, 0xa1, 0x1d, 0x1b, 0xf1, 0x7e, 0x81, 0x3c, 0x9e, 0xa7, 0x21, 0x48, 0x2c, 0x12, 0x9c, 0x49,
	0x48, 0x68, 0xaf, 0xd8, 0x73, 0xcd, 0x60, 0xda, 0x21, 0x6f, 0x92, 0x76, 0x11, 0x5f, 0xf9, 0x61,
	0x0c, 0x5d, 0x1b, 0xf1, 0xa6, 0x98, 0x2a, 0x2d, 0x69, 0xe8, 0xfd, 0xbb, 0x81, 0xa6, 0x72, 0x4e,
	0x23, 0xa2, 0x74, 0x99, 0xcb, 0x6f, 0x2c, 0x8f, 0xad, 0x5e, 0x5a, 0xcf, 0xd6, 0xbe, 0x56, 0xc7,
	0x58, 0x1b, 0x5d, 0x79, 0x70, 0xa5, 0x30, 0x52, 0x78, 0xf7, 0xfe, 0xdb, 0x40, 0x33, 0xa1, 0x14,
	0x24, 0x3e, 0xe1, 0xee, 0xdc, 0x37, 0x72, 0x37, 0x5d, 0x59, 0x29, 0xfd, 0xfd, 0xa7, 0x81, 0xa6,
	0xd3, 0x9c, 0xe9, 0xfa, 0xea, 0xf9, 0x63, 0xdf, 0xc8, 0xde, 0x54, 0xe5, 0xc4, 0xd9, 0x5b, 0xf9,
	0x7e, 0x1e, 0xa1, 0x7e, 0x5b, 0xf6, 0x16, 0xd0, 0x78, 0xe1, 0x70, 0x7d, 0xb9, 0xb1, 0x7a, 0x39,
	0x28, 0x9e, 0xbc, 0x6b, 0x68, 0x52, 0x29, 0xac, 0x43, 0x66, 0xba, 0xe9, 0x43, 0xbb, 0x89, 0x2e,
	0x2a, 0xf5, 0x36, 0x64, 0xad, 0xd8, 0xbb, 0x85, 0x9a, 0x15, 0x86, 0x33, 0x2d, 0xfd, 0x5f, 0xb9,
	0xcd, 0x58, 0xe0, 0x6d, 0x2d, 0x0b, 0xb9, 0xe9, 0xd4, 0x34, 0xf6, 0x1f, 0x95, 0xf2, 0x03, 0x99,
	0xb4, 0x62, 0xcf, 0x47, 0x13, 0x16, 0x33, 0xd0, 0x63, 0x0b, 0x8d, 0x1b, 0xa8, 0x15, 0x7b, 0x77,
	0xd0, 0x15, 0x7b, 0x5c, 0x42, 0xc2, 0x08, 0x8f, 0x28, 0x3f, 0xf4, 0x37, 0x6c, 0x1f, 0x6f, 0x9a,
	0xe8, 0x66, 0x19, 0xf4, 0xee, 0xa3, 0xd9, 0x44, 0xc8, 0x23, 0x22, 0xe3, 0x5a, 0xa3, 0x55, 0xfe,
	0xaf, 0x6d, 0x2e, 0xaf, 0x0f, 0x55, 0x47, 0x71, 0x01, 0x8d, 0x4b, 0x91, 0x9b, 0x7e, 0xfe, 0x1b,
	0xf7, 0x3e, 0xf7, 0xe4, 0x3d, 0x43, 0x37, 0x5c, 0xb9, 0x98, 0x72, 0x9c, 0x31, 0x12, 0x01, 0x4e,
	0x45, 0x4c, 0x13, 0x1a, 0x11, 0x4d, 0x05, 0x57, 0xfe, 0x13, 0x4b, 0xbf, 0xe6, 0x48, 0x2d, 0xde,
	0x36, 0x94, 0xdd, 0x3a, 0xc3, 0x7b, 0x80, 0xe6, 0x94, 0x26, 0x0c, 0x8a, 0xdf, 0x19, 0xc7, 0xc0,
	0xc0, 0xbc, 0xe8, 0xb7, 0xce, 0x8c, 0xc5, 0xdc, 0xca, 0x6f, 0x39, 0xc4, 0x5b, 0x47, 0xf3, 0xa3,
	0x06, 0x85, 0xf2, 0x7f, 0xe7, 0xda, 0x02, 0x1b, 0x9a, 0x0c, 0xca, 0x7b, 0x8c, 0xae, 0x9e, 0xd0,
	0xd4, 0x86, 0xca, 0xef, 0xed, 0x50, 0x99, 0xaf, 0xa9, 0x6a, 0x83, 0x64, 0x13, 0xdd, 0x1c, 0x18,
	0x4d, 0x30, 0x30, 0xe0, 0xfe, 0xe0, 0x2a, 0x3c, 0x31, 0x93, 0xe0, 0xc4, 0x78, 0xfb, 0xae, 0x81,
	0x6e, 0x42, 0x2f, 0x62, 0x79, 0xbf, 0xab, 0x0e, 0x58, 0xf7, 0x9f, 0x2e, 0x37, 0x56, 0x2f, 0xad,
	0x7f, 0xfc, 0xba, 0x9b, 0xbb, 0x3e, 0xbb, 0x83, 0xa5, 0xca, 0xd1, 0xf0, 0x20, 0xf5, 0xfe, 0xdf,
	0x40, 0x4b, 0xf5, 0xee, 0x3d, 0x68, 0xf7, 0x8f, 0x67, 0x6e, 0xd7, 0x57, 0xd5, 0x8c, 0x18, 0xf0,
	0xfa, 0xb9, 0x81, 0x6e, 0x45, 0x52, 0x28, 0x85, 0x4f, 0x73, 0xfc, 0xec, 0xcc, 0x1d, 0xdf, 0xb0,
	0xa6, 0xf6, 0x4f, 0xb3, 0x0d, 0x3c, 0x22, 0xd9, 0xa9, 0xb6, 0x37, 0xcf, 0xde, 0xb6, 0x35, 0xf5,
	0x45, 0xdb, 0x3f, 0x47, 0x33, 0x0c, 0x48, 0x17, 0x14, 0xce, 0x15, 0xc4, 0xc5, 0x11, 0x78, 0x6e,
	0x8f, 0xc0, 0x94, 0x03, 0xde, 0x29, 0x88, 0xdd, 0xbe, 0xbf, 0x87, 0x66, 0x24, 0x48, 0x50, 0x82,
	0x75, 0x01, 0x03, 0xd7, 0xe6, 0xe5, 0xfe, 0x96, 0x1b, 0xa7, 0x15, 0xb0, 0xed, 0xe2, 0xe6, 0x50,
	0x0b, 0x16, 0xe3, 0x9c, 0x0f, 0x0a, 0xb6, 0xdd, 0xa1, 0x16, 0x2c, 0x7e, 0xc7, 0x87, 0x35, 0x1c,
	0x8e, 0x46, 0x68, 0x5e, 0x38, 0x0d, 0x87, 0xa3, 0x21, 0xcd, 0x3d, 0x34, 0x33, 0xcc, 0xff, 0x93,
	0x33, 0x95, 0x0f, 0x92, 0x7f, 0x8a, 0xa6, 0x22, 0x48, 0xb0, 0x6d, 0x76, 0x38, 0x96, 0x22, 0x53,
	0xfe, 0x4b, 0x4b, 0x6d, 0x46, 0x90, 0x04, 0x26, 0xba, 0x65, 0x82, 0xe6, 0x22, 0x6c, 0x78, 0x5d,
	0x90, 0x8a, 0x0a, 0x8e, 0x53, 0xaa, 0x52, 0xa2, 0xa3, 0xce, 0x09, 0x61, 0xcb, 0xb6, 0x99, 0xeb,
	0x11, 0x24, 0x07, 0x8e, 0xb6, 0x5b, 0xb0, 0x6a, 0x79, 0x36, 0x90, 0xef, 0xda, 0x1f, 0x8e, 0x48,
	0xd4, 0x01, 0xcc, 0xf3, 0xb4, 0xf2, 0xf8, 0xca, 0xdd, 0xdb, 0x1c, 0xfe, 0xdc, 0xc0, 0x7b, 0x79,
	0x5a, 0x1a, 0x7d, 0x82, 0x16, 0xa1, 0x47, 0x95, 0x36, 0x7b, 0xa7, 0xf8, 0x7d, 0x24, 0x74, 0xa9,
	0xb2, 0x3d, 0xf8, 0xb5, 0x55, 0x5e, 0x2d, 0x09, 0x3b, 0x16, 0x0f, 0x4a, 0xd8, 0x5c, 0x7b, 0xcc,
	0x2e, 0x88, 0x21, 0x21, 0x39, 0xab, 0xc6, 0xed, 0x8e, 0x5b, 0x92, 0x84, 0x86, 0x5b, 0x0e, 0x70,
	0x3d, 0xd8, 0x34, 0xc4, 0x61, 0x36, 0xae, 0x5f, 0xac, 0x76, 0x5d, 0x43, 0x1c, 0x54, 0xee, 0xf6,
	0x2f, 0x5a, 0xe6, 0x23, 0x06, 0x7a, 0x1a, 0x77, 0xcc, 0xba, 0xec, 0x59, 0xfa, 0x84, 0x09, 0xbc,
	0x34, 0x6b, 0xf0, 0x00, 0xcd, 0x51, 0x1e, 0x89, 0x34, 0xb3, 0xeb, 0xd0, 0xe7, 0xbd, 0x71, 0xf3,
	0xa0, 0x8f, 0xed, 0x95, 0x8a, 0xbb, 0x68, 0xda, 0xfe, 0x6e, 0xb9, 0x19, 0x28, 0x58, 0xd3, 0x14,
	0xa4, 0xdf, 0x76, 0x5b, 0xb2, 0x1f, 0x7f, 0x6b, 0xc2, 0xa6, 0x56, 0xc5, 0xc4, 0x11, 0xce, 0xa4,
	0x88, 0xc0, 0x8c, 0x60, 0x4b, 0xfe, 0xb3, 0xab, 0xd5, 0x20, 0x6d, 0x07, 0x38, 0xf6, 0x03, 0x34,
	0x97, 0x92, 0x1e, 0x1e, 0x4a, 0x1e, 0x38, 0x2b, 0x29, 0xe9, 0x05, 0x03, 0xf9, 0xef, 0xa3, 0x59,
	0x9a, 0x66, 0x42, 0x51, 0xcb, 0xae, 0xee, 0x90, 0xfb, 0x85, 0xf7, 0x0a, 0x2a, 0x6f, 0x91, 0x66,
	0x3b, 0x42, 0x4f, 0x03, 0x8f, 0xcd, 0x77, 0x42, 0x49, 0x7f, 0xeb, 0xfc, 0x94, 0x40, 0x45, 0x7e,
	0x84, 0xae, 0x46, 0x90, 0x30, 0x1c, 0x32, 0x2c, 0x21, 0x3a, 0x8e, 0x18, 0xc4, 0xb8, 0x18, 0xcb,
	0xef, 0xac, 0x64, 0xce, 0xc0, 0x9b, 0x2c, 0x28, 0xc0, 0xc0, 0x0d, 0xe9, 0xdb, 0xa8, 0x69, 0xce,
	0x77, 0x48, 0xa2, 0x4f, 0x47, 0x84, 0x7d, 0x52, 0xfe, 0x81, 0x25, 0x5f, 0x66, 0x31, 0xdd, 0x2c,
	0x63, 0xde, 0x2f, 0xd1, 0xac, 0x52, 0x66, 0x5d, 0x74, 0xb1, 0x6b, 0x6d, 0x3b, 0xf0, 0xff, 0x52,
	0x2c, 0x8d, 0x6a, 0x4b, 0xa1, 0x6d, 0xbe, 0xe7, 0xf6, 0xd3, 0xcf, 0xf4, 0x01, 0xaa, 0x32, 0x0c,
	0xb4, 0xe6, 0xfb, 0x7d, 0xd1, 0x07, 0xa8, 0xca, 0xb6, 0xe9, 0x09, 0xdb, 0x15, 0xb7, 0x4b, 0x58,
	0x5d, 0xf1, 0xc1, 0xd9, 0x2e, 0x14, 0x07, 0x06, 0xac, 0x64, 0xe5, 0x2b, 0x24, 0x13, 0x11, 0x16,
	0xe1, 0x47, 0x88, 0xb4, 0xf2, 0xff, 0xda, 0x7f, 0x45, 0xc0, 0x44, 0xf4, 0xc6, 0x85, 0x8d, 0xfb,
	0xfe, 0xd5, 0x5d, 0x49, 0xcc, 0x48, 0x08, 0x4c, 0xf9, 0x7f, 0x3b, 0x79, 0x77, 0xdf, 0x97, 0x3b,
	0x36, 0xee, 0xdd, 0x45, 0x33, 0xe6, 0x02, 0xd5, 0x63, 0x84, 0x63, 0xa6, 0x21, 0xc3, 0x34, 0xe9,
	0xf8, 0x7f, 0xb7, 0x37, 0xa5, 0x2b, 0x4a, 0x1d, 0x98, 0xf8, 0x8e, 0x86, 0xac, 0x95, 0x74, 0xbc,
	0x9f, 0xa1, 0x69, 0xa5, 0xec, 0x11, 0x36, 0x7d, 0xd2, 0x2d, 0xca, 0x3f, 0x5c, 0x0f, 0x50, 0xca,
	0x9c, 0xda, 0x36, 0x73, 0x2b, 0xf2, 0xb9, 0x81, 0x96, 0x6a, 0xa7, 0xa1, 0xf6, 0x2d, 0x60, 0xf7,
	0x87, 0xff, 0x4f, 0xdb, 0xca, 0xf5, 0x99, 0xde, 0x5f, 0x0b, 0x03, 0xc1, 0x62, 0x56, 0x1d, 0x41,
	0x06, 0x7c, 0xab, 0x66, 0x2b, 0x1c, 0xb7, 0x99, 0x1f, 0xfe, 0x18, 0x00, 0x00, 0xff, 0xff, 0x1c,
	0x18, 0x7d, 0x21, 0xd9, 0x10, 0x00, 0x00,
}
