/*
Copyright 2019 Cisco Systems

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: pppoe_ma_disc_history_unique.proto

package cisco_ios_xr_subscriber_pppoe_ma_oper_pppoe_nodes_node_disconnect_history_unique

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type PppoeMaDiscHistoryUnique_KEYS struct {
	NodeName             string   `protobuf:"bytes,1,opt,name=node_name,json=nodeName,proto3" json:"node_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PppoeMaDiscHistoryUnique_KEYS) Reset()         { *m = PppoeMaDiscHistoryUnique_KEYS{} }
func (m *PppoeMaDiscHistoryUnique_KEYS) String() string { return proto.CompactTextString(m) }
func (*PppoeMaDiscHistoryUnique_KEYS) ProtoMessage()    {}
func (*PppoeMaDiscHistoryUnique_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_e8a32c0ba8abb06c, []int{0}
}

func (m *PppoeMaDiscHistoryUnique_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PppoeMaDiscHistoryUnique_KEYS.Unmarshal(m, b)
}
func (m *PppoeMaDiscHistoryUnique_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PppoeMaDiscHistoryUnique_KEYS.Marshal(b, m, deterministic)
}
func (m *PppoeMaDiscHistoryUnique_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PppoeMaDiscHistoryUnique_KEYS.Merge(m, src)
}
func (m *PppoeMaDiscHistoryUnique_KEYS) XXX_Size() int {
	return xxx_messageInfo_PppoeMaDiscHistoryUnique_KEYS.Size(m)
}
func (m *PppoeMaDiscHistoryUnique_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_PppoeMaDiscHistoryUnique_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_PppoeMaDiscHistoryUnique_KEYS proto.InternalMessageInfo

func (m *PppoeMaDiscHistoryUnique_KEYS) GetNodeName() string {
	if m != nil {
		return m.NodeName
	}
	return ""
}

type PppoeMaTagsAleInfo struct {
	DataLink             uint32   `protobuf:"varint,1,opt,name=data_link,json=dataLink,proto3" json:"data_link,omitempty"`
	Encaps1              uint32   `protobuf:"varint,2,opt,name=encaps1,proto3" json:"encaps1,omitempty"`
	Encaps2              uint32   `protobuf:"varint,3,opt,name=encaps2,proto3" json:"encaps2,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PppoeMaTagsAleInfo) Reset()         { *m = PppoeMaTagsAleInfo{} }
func (m *PppoeMaTagsAleInfo) String() string { return proto.CompactTextString(m) }
func (*PppoeMaTagsAleInfo) ProtoMessage()    {}
func (*PppoeMaTagsAleInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_e8a32c0ba8abb06c, []int{1}
}

func (m *PppoeMaTagsAleInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PppoeMaTagsAleInfo.Unmarshal(m, b)
}
func (m *PppoeMaTagsAleInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PppoeMaTagsAleInfo.Marshal(b, m, deterministic)
}
func (m *PppoeMaTagsAleInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PppoeMaTagsAleInfo.Merge(m, src)
}
func (m *PppoeMaTagsAleInfo) XXX_Size() int {
	return xxx_messageInfo_PppoeMaTagsAleInfo.Size(m)
}
func (m *PppoeMaTagsAleInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_PppoeMaTagsAleInfo.DiscardUnknown(m)
}

var xxx_messageInfo_PppoeMaTagsAleInfo proto.InternalMessageInfo

func (m *PppoeMaTagsAleInfo) GetDataLink() uint32 {
	if m != nil {
		return m.DataLink
	}
	return 0
}

func (m *PppoeMaTagsAleInfo) GetEncaps1() uint32 {
	if m != nil {
		return m.Encaps1
	}
	return 0
}

func (m *PppoeMaTagsAleInfo) GetEncaps2() uint32 {
	if m != nil {
		return m.Encaps2
	}
	return 0
}

type PppoeMaInternalTagsInfo struct {
	IsServiceName             int32               `protobuf:"zigzag32,1,opt,name=is_service_name,json=isServiceName,proto3" json:"is_service_name,omitempty"`
	IsMaxPayload              int32               `protobuf:"zigzag32,2,opt,name=is_max_payload,json=isMaxPayload,proto3" json:"is_max_payload,omitempty"`
	IsHostUniq                int32               `protobuf:"zigzag32,3,opt,name=is_host_uniq,json=isHostUniq,proto3" json:"is_host_uniq,omitempty"`
	IsRelaySessionId          int32               `protobuf:"zigzag32,4,opt,name=is_relay_session_id,json=isRelaySessionId,proto3" json:"is_relay_session_id,omitempty"`
	IsVendorSpecific          int32               `protobuf:"zigzag32,5,opt,name=is_vendor_specific,json=isVendorSpecific,proto3" json:"is_vendor_specific,omitempty"`
	IsIwf                     int32               `protobuf:"zigzag32,6,opt,name=is_iwf,json=isIwf,proto3" json:"is_iwf,omitempty"`
	IsRemoteId                int32               `protobuf:"zigzag32,7,opt,name=is_remote_id,json=isRemoteId,proto3" json:"is_remote_id,omitempty"`
	IsCircuitId               int32               `protobuf:"zigzag32,8,opt,name=is_circuit_id,json=isCircuitId,proto3" json:"is_circuit_id,omitempty"`
	IsDslTag                  int32               `protobuf:"zigzag32,9,opt,name=is_dsl_tag,json=isDslTag,proto3" json:"is_dsl_tag,omitempty"`
	ServiceName               string              `protobuf:"bytes,10,opt,name=service_name,json=serviceName,proto3" json:"service_name,omitempty"`
	MaxPayload                uint32              `protobuf:"varint,11,opt,name=max_payload,json=maxPayload,proto3" json:"max_payload,omitempty"`
	HostUniq                  []byte              `protobuf:"bytes,12,opt,name=host_uniq,json=hostUniq,proto3" json:"host_uniq,omitempty"`
	RelaySessionId            []byte              `protobuf:"bytes,13,opt,name=relay_session_id,json=relaySessionId,proto3" json:"relay_session_id,omitempty"`
	RemoteId                  string              `protobuf:"bytes,14,opt,name=remote_id,json=remoteId,proto3" json:"remote_id,omitempty"`
	CircuitId                 string              `protobuf:"bytes,15,opt,name=circuit_id,json=circuitId,proto3" json:"circuit_id,omitempty"`
	IsDslActualUp             int32               `protobuf:"zigzag32,16,opt,name=is_dsl_actual_up,json=isDslActualUp,proto3" json:"is_dsl_actual_up,omitempty"`
	IsDslActualDown           int32               `protobuf:"zigzag32,17,opt,name=is_dsl_actual_down,json=isDslActualDown,proto3" json:"is_dsl_actual_down,omitempty"`
	IsDslMinUp                int32               `protobuf:"zigzag32,18,opt,name=is_dsl_min_up,json=isDslMinUp,proto3" json:"is_dsl_min_up,omitempty"`
	IsDslMinDown              int32               `protobuf:"zigzag32,19,opt,name=is_dsl_min_down,json=isDslMinDown,proto3" json:"is_dsl_min_down,omitempty"`
	IsDslAttainUp             int32               `protobuf:"zigzag32,20,opt,name=is_dsl_attain_up,json=isDslAttainUp,proto3" json:"is_dsl_attain_up,omitempty"`
	IsDslAttainDown           int32               `protobuf:"zigzag32,21,opt,name=is_dsl_attain_down,json=isDslAttainDown,proto3" json:"is_dsl_attain_down,omitempty"`
	IsDslMaxUp                int32               `protobuf:"zigzag32,22,opt,name=is_dsl_max_up,json=isDslMaxUp,proto3" json:"is_dsl_max_up,omitempty"`
	IsDslMaxDown              int32               `protobuf:"zigzag32,23,opt,name=is_dsl_max_down,json=isDslMaxDown,proto3" json:"is_dsl_max_down,omitempty"`
	IsDslMinUpLow             int32               `protobuf:"zigzag32,24,opt,name=is_dsl_min_up_low,json=isDslMinUpLow,proto3" json:"is_dsl_min_up_low,omitempty"`
	IsDslMinDownLow           int32               `protobuf:"zigzag32,25,opt,name=is_dsl_min_down_low,json=isDslMinDownLow,proto3" json:"is_dsl_min_down_low,omitempty"`
	IsDslMaxDelayUp           int32               `protobuf:"zigzag32,26,opt,name=is_dsl_max_delay_up,json=isDslMaxDelayUp,proto3" json:"is_dsl_max_delay_up,omitempty"`
	IsDslActualDelayUp        int32               `protobuf:"zigzag32,27,opt,name=is_dsl_actual_delay_up,json=isDslActualDelayUp,proto3" json:"is_dsl_actual_delay_up,omitempty"`
	IsDslMaxDelayDown         int32               `protobuf:"zigzag32,28,opt,name=is_dsl_max_delay_down,json=isDslMaxDelayDown,proto3" json:"is_dsl_max_delay_down,omitempty"`
	IsDslActualDelayDown      int32               `protobuf:"zigzag32,29,opt,name=is_dsl_actual_delay_down,json=isDslActualDelayDown,proto3" json:"is_dsl_actual_delay_down,omitempty"`
	IsAccessLoopEncapsulation int32               `protobuf:"zigzag32,30,opt,name=is_access_loop_encapsulation,json=isAccessLoopEncapsulation,proto3" json:"is_access_loop_encapsulation,omitempty"`
	DslActualUp               uint32              `protobuf:"varint,31,opt,name=dsl_actual_up,json=dslActualUp,proto3" json:"dsl_actual_up,omitempty"`
	DslActualDown             uint32              `protobuf:"varint,32,opt,name=dsl_actual_down,json=dslActualDown,proto3" json:"dsl_actual_down,omitempty"`
	DslMinUp                  uint32              `protobuf:"varint,33,opt,name=dsl_min_up,json=dslMinUp,proto3" json:"dsl_min_up,omitempty"`
	DslMinDown                uint32              `protobuf:"varint,34,opt,name=dsl_min_down,json=dslMinDown,proto3" json:"dsl_min_down,omitempty"`
	DslAttainUp               uint32              `protobuf:"varint,35,opt,name=dsl_attain_up,json=dslAttainUp,proto3" json:"dsl_attain_up,omitempty"`
	DslAttainDown             uint32              `protobuf:"varint,36,opt,name=dsl_attain_down,json=dslAttainDown,proto3" json:"dsl_attain_down,omitempty"`
	DslMaxUp                  uint32              `protobuf:"varint,37,opt,name=dsl_max_up,json=dslMaxUp,proto3" json:"dsl_max_up,omitempty"`
	DslMaxDown                uint32              `protobuf:"varint,38,opt,name=dsl_max_down,json=dslMaxDown,proto3" json:"dsl_max_down,omitempty"`
	DslMinUpLow               uint32              `protobuf:"varint,39,opt,name=dsl_min_up_low,json=dslMinUpLow,proto3" json:"dsl_min_up_low,omitempty"`
	DslMinDownLow             uint32              `protobuf:"varint,40,opt,name=dsl_min_down_low,json=dslMinDownLow,proto3" json:"dsl_min_down_low,omitempty"`
	DslMaxDelayUp             uint32              `protobuf:"varint,41,opt,name=dsl_max_delay_up,json=dslMaxDelayUp,proto3" json:"dsl_max_delay_up,omitempty"`
	DslActualDelayUp          uint32              `protobuf:"varint,42,opt,name=dsl_actual_delay_up,json=dslActualDelayUp,proto3" json:"dsl_actual_delay_up,omitempty"`
	DslMaxDelayDown           uint32              `protobuf:"varint,43,opt,name=dsl_max_delay_down,json=dslMaxDelayDown,proto3" json:"dsl_max_delay_down,omitempty"`
	DslActualDelayDown        uint32              `protobuf:"varint,44,opt,name=dsl_actual_delay_down,json=dslActualDelayDown,proto3" json:"dsl_actual_delay_down,omitempty"`
	AccessLoopEncapsulation   *PppoeMaTagsAleInfo `protobuf:"bytes,45,opt,name=access_loop_encapsulation,json=accessLoopEncapsulation,proto3" json:"access_loop_encapsulation,omitempty"`
	XXX_NoUnkeyedLiteral      struct{}            `json:"-"`
	XXX_unrecognized          []byte              `json:"-"`
	XXX_sizecache             int32               `json:"-"`
}

func (m *PppoeMaInternalTagsInfo) Reset()         { *m = PppoeMaInternalTagsInfo{} }
func (m *PppoeMaInternalTagsInfo) String() string { return proto.CompactTextString(m) }
func (*PppoeMaInternalTagsInfo) ProtoMessage()    {}
func (*PppoeMaInternalTagsInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_e8a32c0ba8abb06c, []int{2}
}

func (m *PppoeMaInternalTagsInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PppoeMaInternalTagsInfo.Unmarshal(m, b)
}
func (m *PppoeMaInternalTagsInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PppoeMaInternalTagsInfo.Marshal(b, m, deterministic)
}
func (m *PppoeMaInternalTagsInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PppoeMaInternalTagsInfo.Merge(m, src)
}
func (m *PppoeMaInternalTagsInfo) XXX_Size() int {
	return xxx_messageInfo_PppoeMaInternalTagsInfo.Size(m)
}
func (m *PppoeMaInternalTagsInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_PppoeMaInternalTagsInfo.DiscardUnknown(m)
}

var xxx_messageInfo_PppoeMaInternalTagsInfo proto.InternalMessageInfo

func (m *PppoeMaInternalTagsInfo) GetIsServiceName() int32 {
	if m != nil {
		return m.IsServiceName
	}
	return 0
}

func (m *PppoeMaInternalTagsInfo) GetIsMaxPayload() int32 {
	if m != nil {
		return m.IsMaxPayload
	}
	return 0
}

func (m *PppoeMaInternalTagsInfo) GetIsHostUniq() int32 {
	if m != nil {
		return m.IsHostUniq
	}
	return 0
}

func (m *PppoeMaInternalTagsInfo) GetIsRelaySessionId() int32 {
	if m != nil {
		return m.IsRelaySessionId
	}
	return 0
}

func (m *PppoeMaInternalTagsInfo) GetIsVendorSpecific() int32 {
	if m != nil {
		return m.IsVendorSpecific
	}
	return 0
}

func (m *PppoeMaInternalTagsInfo) GetIsIwf() int32 {
	if m != nil {
		return m.IsIwf
	}
	return 0
}

func (m *PppoeMaInternalTagsInfo) GetIsRemoteId() int32 {
	if m != nil {
		return m.IsRemoteId
	}
	return 0
}

func (m *PppoeMaInternalTagsInfo) GetIsCircuitId() int32 {
	if m != nil {
		return m.IsCircuitId
	}
	return 0
}

func (m *PppoeMaInternalTagsInfo) GetIsDslTag() int32 {
	if m != nil {
		return m.IsDslTag
	}
	return 0
}

func (m *PppoeMaInternalTagsInfo) GetServiceName() string {
	if m != nil {
		return m.ServiceName
	}
	return ""
}

func (m *PppoeMaInternalTagsInfo) GetMaxPayload() uint32 {
	if m != nil {
		return m.MaxPayload
	}
	return 0
}

func (m *PppoeMaInternalTagsInfo) GetHostUniq() []byte {
	if m != nil {
		return m.HostUniq
	}
	return nil
}

func (m *PppoeMaInternalTagsInfo) GetRelaySessionId() []byte {
	if m != nil {
		return m.RelaySessionId
	}
	return nil
}

func (m *PppoeMaInternalTagsInfo) GetRemoteId() string {
	if m != nil {
		return m.RemoteId
	}
	return ""
}

func (m *PppoeMaInternalTagsInfo) GetCircuitId() string {
	if m != nil {
		return m.CircuitId
	}
	return ""
}

func (m *PppoeMaInternalTagsInfo) GetIsDslActualUp() int32 {
	if m != nil {
		return m.IsDslActualUp
	}
	return 0
}

func (m *PppoeMaInternalTagsInfo) GetIsDslActualDown() int32 {
	if m != nil {
		return m.IsDslActualDown
	}
	return 0
}

func (m *PppoeMaInternalTagsInfo) GetIsDslMinUp() int32 {
	if m != nil {
		return m.IsDslMinUp
	}
	return 0
}

func (m *PppoeMaInternalTagsInfo) GetIsDslMinDown() int32 {
	if m != nil {
		return m.IsDslMinDown
	}
	return 0
}

func (m *PppoeMaInternalTagsInfo) GetIsDslAttainUp() int32 {
	if m != nil {
		return m.IsDslAttainUp
	}
	return 0
}

func (m *PppoeMaInternalTagsInfo) GetIsDslAttainDown() int32 {
	if m != nil {
		return m.IsDslAttainDown
	}
	return 0
}

func (m *PppoeMaInternalTagsInfo) GetIsDslMaxUp() int32 {
	if m != nil {
		return m.IsDslMaxUp
	}
	return 0
}

func (m *PppoeMaInternalTagsInfo) GetIsDslMaxDown() int32 {
	if m != nil {
		return m.IsDslMaxDown
	}
	return 0
}

func (m *PppoeMaInternalTagsInfo) GetIsDslMinUpLow() int32 {
	if m != nil {
		return m.IsDslMinUpLow
	}
	return 0
}

func (m *PppoeMaInternalTagsInfo) GetIsDslMinDownLow() int32 {
	if m != nil {
		return m.IsDslMinDownLow
	}
	return 0
}

func (m *PppoeMaInternalTagsInfo) GetIsDslMaxDelayUp() int32 {
	if m != nil {
		return m.IsDslMaxDelayUp
	}
	return 0
}

func (m *PppoeMaInternalTagsInfo) GetIsDslActualDelayUp() int32 {
	if m != nil {
		return m.IsDslActualDelayUp
	}
	return 0
}

func (m *PppoeMaInternalTagsInfo) GetIsDslMaxDelayDown() int32 {
	if m != nil {
		return m.IsDslMaxDelayDown
	}
	return 0
}

func (m *PppoeMaInternalTagsInfo) GetIsDslActualDelayDown() int32 {
	if m != nil {
		return m.IsDslActualDelayDown
	}
	return 0
}

func (m *PppoeMaInternalTagsInfo) GetIsAccessLoopEncapsulation() int32 {
	if m != nil {
		return m.IsAccessLoopEncapsulation
	}
	return 0
}

func (m *PppoeMaInternalTagsInfo) GetDslActualUp() uint32 {
	if m != nil {
		return m.DslActualUp
	}
	return 0
}

func (m *PppoeMaInternalTagsInfo) GetDslActualDown() uint32 {
	if m != nil {
		return m.DslActualDown
	}
	return 0
}

func (m *PppoeMaInternalTagsInfo) GetDslMinUp() uint32 {
	if m != nil {
		return m.DslMinUp
	}
	return 0
}

func (m *PppoeMaInternalTagsInfo) GetDslMinDown() uint32 {
	if m != nil {
		return m.DslMinDown
	}
	return 0
}

func (m *PppoeMaInternalTagsInfo) GetDslAttainUp() uint32 {
	if m != nil {
		return m.DslAttainUp
	}
	return 0
}

func (m *PppoeMaInternalTagsInfo) GetDslAttainDown() uint32 {
	if m != nil {
		return m.DslAttainDown
	}
	return 0
}

func (m *PppoeMaInternalTagsInfo) GetDslMaxUp() uint32 {
	if m != nil {
		return m.DslMaxUp
	}
	return 0
}

func (m *PppoeMaInternalTagsInfo) GetDslMaxDown() uint32 {
	if m != nil {
		return m.DslMaxDown
	}
	return 0
}

func (m *PppoeMaInternalTagsInfo) GetDslMinUpLow() uint32 {
	if m != nil {
		return m.DslMinUpLow
	}
	return 0
}

func (m *PppoeMaInternalTagsInfo) GetDslMinDownLow() uint32 {
	if m != nil {
		return m.DslMinDownLow
	}
	return 0
}

func (m *PppoeMaInternalTagsInfo) GetDslMaxDelayUp() uint32 {
	if m != nil {
		return m.DslMaxDelayUp
	}
	return 0
}

func (m *PppoeMaInternalTagsInfo) GetDslActualDelayUp() uint32 {
	if m != nil {
		return m.DslActualDelayUp
	}
	return 0
}

func (m *PppoeMaInternalTagsInfo) GetDslMaxDelayDown() uint32 {
	if m != nil {
		return m.DslMaxDelayDown
	}
	return 0
}

func (m *PppoeMaInternalTagsInfo) GetDslActualDelayDown() uint32 {
	if m != nil {
		return m.DslActualDelayDown
	}
	return 0
}

func (m *PppoeMaInternalTagsInfo) GetAccessLoopEncapsulation() *PppoeMaTagsAleInfo {
	if m != nil {
		return m.AccessLoopEncapsulation
	}
	return nil
}

type PppoeMaVlanTagType struct {
	EtherType            uint32   `protobuf:"varint,1,opt,name=ether_type,json=etherType,proto3" json:"ether_type,omitempty"`
	UserPriority         uint32   `protobuf:"varint,2,opt,name=user_priority,json=userPriority,proto3" json:"user_priority,omitempty"`
	Cfi                  uint32   `protobuf:"varint,3,opt,name=cfi,proto3" json:"cfi,omitempty"`
	VlanId               uint32   `protobuf:"varint,4,opt,name=vlan_id,json=vlanId,proto3" json:"vlan_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PppoeMaVlanTagType) Reset()         { *m = PppoeMaVlanTagType{} }
func (m *PppoeMaVlanTagType) String() string { return proto.CompactTextString(m) }
func (*PppoeMaVlanTagType) ProtoMessage()    {}
func (*PppoeMaVlanTagType) Descriptor() ([]byte, []int) {
	return fileDescriptor_e8a32c0ba8abb06c, []int{3}
}

func (m *PppoeMaVlanTagType) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PppoeMaVlanTagType.Unmarshal(m, b)
}
func (m *PppoeMaVlanTagType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PppoeMaVlanTagType.Marshal(b, m, deterministic)
}
func (m *PppoeMaVlanTagType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PppoeMaVlanTagType.Merge(m, src)
}
func (m *PppoeMaVlanTagType) XXX_Size() int {
	return xxx_messageInfo_PppoeMaVlanTagType.Size(m)
}
func (m *PppoeMaVlanTagType) XXX_DiscardUnknown() {
	xxx_messageInfo_PppoeMaVlanTagType.DiscardUnknown(m)
}

var xxx_messageInfo_PppoeMaVlanTagType proto.InternalMessageInfo

func (m *PppoeMaVlanTagType) GetEtherType() uint32 {
	if m != nil {
		return m.EtherType
	}
	return 0
}

func (m *PppoeMaVlanTagType) GetUserPriority() uint32 {
	if m != nil {
		return m.UserPriority
	}
	return 0
}

func (m *PppoeMaVlanTagType) GetCfi() uint32 {
	if m != nil {
		return m.Cfi
	}
	return 0
}

func (m *PppoeMaVlanTagType) GetVlanId() uint32 {
	if m != nil {
		return m.VlanId
	}
	return 0
}

type PppoeMaSessionIdbInfo struct {
	Interface                        string                   `protobuf:"bytes,1,opt,name=interface,proto3" json:"interface,omitempty"`
	AccessInterface                  string                   `protobuf:"bytes,2,opt,name=access_interface,json=accessInterface,proto3" json:"access_interface,omitempty"`
	SessionId                        uint32                   `protobuf:"varint,3,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	SubLabel                         uint32                   `protobuf:"varint,4,opt,name=sub_label,json=subLabel,proto3" json:"sub_label,omitempty"`
	PeerMacAddress                   string                   `protobuf:"bytes,5,opt,name=peer_mac_address,json=peerMacAddress,proto3" json:"peer_mac_address,omitempty"`
	Tags                             *PppoeMaInternalTagsInfo `protobuf:"bytes,6,opt,name=tags,proto3" json:"tags,omitempty"`
	State                            string                   `protobuf:"bytes,7,opt,name=state,proto3" json:"state,omitempty"`
	CdmObjectHandle                  uint32                   `protobuf:"varint,8,opt,name=cdm_object_handle,json=cdmObjectHandle,proto3" json:"cdm_object_handle,omitempty"`
	ChkptId                          uint32                   `protobuf:"varint,9,opt,name=chkpt_id,json=chkptId,proto3" json:"chkpt_id,omitempty"`
	PuntedCount                      uint32                   `protobuf:"varint,10,opt,name=punted_count,json=puntedCount,proto3" json:"punted_count,omitempty"`
	PortLimit                        uint32                   `protobuf:"varint,11,opt,name=port_limit,json=portLimit,proto3" json:"port_limit,omitempty"`
	IsCounted                        int32                    `protobuf:"zigzag32,12,opt,name=is_counted,json=isCounted,proto3" json:"is_counted,omitempty"`
	IsVlanOuterTag                   int32                    `protobuf:"zigzag32,13,opt,name=is_vlan_outer_tag,json=isVlanOuterTag,proto3" json:"is_vlan_outer_tag,omitempty"`
	VlanOuterTag                     *PppoeMaVlanTagType      `protobuf:"bytes,14,opt,name=vlan_outer_tag,json=vlanOuterTag,proto3" json:"vlan_outer_tag,omitempty"`
	IsVlanInnerTag                   int32                    `protobuf:"zigzag32,15,opt,name=is_vlan_inner_tag,json=isVlanInnerTag,proto3" json:"is_vlan_inner_tag,omitempty"`
	VlanInnerTag                     *PppoeMaVlanTagType      `protobuf:"bytes,16,opt,name=vlan_inner_tag,json=vlanInnerTag,proto3" json:"vlan_inner_tag,omitempty"`
	IsCleanupPending                 int32                    `protobuf:"zigzag32,17,opt,name=is_cleanup_pending,json=isCleanupPending,proto3" json:"is_cleanup_pending,omitempty"`
	IsDisconnectDonePending          int32                    `protobuf:"zigzag32,18,opt,name=is_disconnect_done_pending,json=isDisconnectDonePending,proto3" json:"is_disconnect_done_pending,omitempty"`
	IsDeleteDonePending              int32                    `protobuf:"zigzag32,19,opt,name=is_delete_done_pending,json=isDeleteDonePending,proto3" json:"is_delete_done_pending,omitempty"`
	IsIntfCreateCallbackPending      int32                    `protobuf:"zigzag32,20,opt,name=is_intf_create_callback_pending,json=isIntfCreateCallbackPending,proto3" json:"is_intf_create_callback_pending,omitempty"`
	IsPublishEncapsAttrPending       int32                    `protobuf:"zigzag32,21,opt,name=is_publish_encaps_attr_pending,json=isPublishEncapsAttrPending,proto3" json:"is_publish_encaps_attr_pending,omitempty"`
	IsPublishEncapsAttrCbPending     int32                    `protobuf:"zigzag32,22,opt,name=is_publish_encaps_attr_cb_pending,json=isPublishEncapsAttrCbPending,proto3" json:"is_publish_encaps_attr_cb_pending,omitempty"`
	IsIntfDeleteCallbackPending      int32                    `protobuf:"zigzag32,23,opt,name=is_intf_delete_callback_pending,json=isIntfDeleteCallbackPending,proto3" json:"is_intf_delete_callback_pending,omitempty"`
	IsIntfDeletePending              int32                    `protobuf:"zigzag32,24,opt,name=is_intf_delete_pending,json=isIntfDeletePending,proto3" json:"is_intf_delete_pending,omitempty"`
	IsImOwnedResource                int32                    `protobuf:"zigzag32,25,opt,name=is_im_owned_resource,json=isImOwnedResource,proto3" json:"is_im_owned_resource,omitempty"`
	IsImFinalReceived                int32                    `protobuf:"zigzag32,26,opt,name=is_im_final_received,json=isImFinalReceived,proto3" json:"is_im_final_received,omitempty"`
	IsImOwnedResourceMissing         int32                    `protobuf:"zigzag32,27,opt,name=is_im_owned_resource_missing,json=isImOwnedResourceMissing,proto3" json:"is_im_owned_resource_missing,omitempty"`
	IsAaaStartRequestCallbackPending int32                    `protobuf:"zigzag32,28,opt,name=is_aaa_start_request_callback_pending,json=isAaaStartRequestCallbackPending,proto3" json:"is_aaa_start_request_callback_pending,omitempty"`
	IsAaaOwnedResource               int32                    `protobuf:"zigzag32,29,opt,name=is_aaa_owned_resource,json=isAaaOwnedResource,proto3" json:"is_aaa_owned_resource,omitempty"`
	IsAaaDisconnectRequested         int32                    `protobuf:"zigzag32,30,opt,name=is_aaa_disconnect_requested,json=isAaaDisconnectRequested,proto3" json:"is_aaa_disconnect_requested,omitempty"`
	IsAaaDisconnectReceived          int32                    `protobuf:"zigzag32,31,opt,name=is_aaa_disconnect_received,json=isAaaDisconnectReceived,proto3" json:"is_aaa_disconnect_received,omitempty"`
	IsSubDbActivateCallbackPending   int32                    `protobuf:"zigzag32,32,opt,name=is_sub_db_activate_callback_pending,json=isSubDbActivateCallbackPending,proto3" json:"is_sub_db_activate_callback_pending,omitempty"`
	IsPadsSent                       int32                    `protobuf:"zigzag32,33,opt,name=is_pads_sent,json=isPadsSent,proto3" json:"is_pads_sent,omitempty"`
	IsPadtReceived                   int32                    `protobuf:"zigzag32,34,opt,name=is_padt_received,json=isPadtReceived,proto3" json:"is_padt_received,omitempty"`
	IsInFlight                       int32                    `protobuf:"zigzag32,35,opt,name=is_in_flight,json=isInFlight,proto3" json:"is_in_flight,omitempty"`
	IsRadiusOverride                 int32                    `protobuf:"zigzag32,36,opt,name=is_radius_override,json=isRadiusOverride,proto3" json:"is_radius_override,omitempty"`
	ExpectedNotifications            uint32                   `protobuf:"varint,37,opt,name=expected_notifications,json=expectedNotifications,proto3" json:"expected_notifications,omitempty"`
	ReceivedNotifications            uint32                   `protobuf:"varint,38,opt,name=received_notifications,json=receivedNotifications,proto3" json:"received_notifications,omitempty"`
	SrgState                         string                   `protobuf:"bytes,39,opt,name=srg_state,json=srgState,proto3" json:"srg_state,omitempty"`
	IsSrgDataReceived                int32                    `protobuf:"zigzag32,40,opt,name=is_srg_data_received,json=isSrgDataReceived,proto3" json:"is_srg_data_received,omitempty"`
	IsIedgeDataReceived              int32                    `protobuf:"zigzag32,41,opt,name=is_iedge_data_received,json=isIedgeDataReceived,proto3" json:"is_iedge_data_received,omitempty"`
	XXX_NoUnkeyedLiteral             struct{}                 `json:"-"`
	XXX_unrecognized                 []byte                   `json:"-"`
	XXX_sizecache                    int32                    `json:"-"`
}

func (m *PppoeMaSessionIdbInfo) Reset()         { *m = PppoeMaSessionIdbInfo{} }
func (m *PppoeMaSessionIdbInfo) String() string { return proto.CompactTextString(m) }
func (*PppoeMaSessionIdbInfo) ProtoMessage()    {}
func (*PppoeMaSessionIdbInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_e8a32c0ba8abb06c, []int{4}
}

func (m *PppoeMaSessionIdbInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PppoeMaSessionIdbInfo.Unmarshal(m, b)
}
func (m *PppoeMaSessionIdbInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PppoeMaSessionIdbInfo.Marshal(b, m, deterministic)
}
func (m *PppoeMaSessionIdbInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PppoeMaSessionIdbInfo.Merge(m, src)
}
func (m *PppoeMaSessionIdbInfo) XXX_Size() int {
	return xxx_messageInfo_PppoeMaSessionIdbInfo.Size(m)
}
func (m *PppoeMaSessionIdbInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_PppoeMaSessionIdbInfo.DiscardUnknown(m)
}

var xxx_messageInfo_PppoeMaSessionIdbInfo proto.InternalMessageInfo

func (m *PppoeMaSessionIdbInfo) GetInterface() string {
	if m != nil {
		return m.Interface
	}
	return ""
}

func (m *PppoeMaSessionIdbInfo) GetAccessInterface() string {
	if m != nil {
		return m.AccessInterface
	}
	return ""
}

func (m *PppoeMaSessionIdbInfo) GetSessionId() uint32 {
	if m != nil {
		return m.SessionId
	}
	return 0
}

func (m *PppoeMaSessionIdbInfo) GetSubLabel() uint32 {
	if m != nil {
		return m.SubLabel
	}
	return 0
}

func (m *PppoeMaSessionIdbInfo) GetPeerMacAddress() string {
	if m != nil {
		return m.PeerMacAddress
	}
	return ""
}

func (m *PppoeMaSessionIdbInfo) GetTags() *PppoeMaInternalTagsInfo {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *PppoeMaSessionIdbInfo) GetState() string {
	if m != nil {
		return m.State
	}
	return ""
}

func (m *PppoeMaSessionIdbInfo) GetCdmObjectHandle() uint32 {
	if m != nil {
		return m.CdmObjectHandle
	}
	return 0
}

func (m *PppoeMaSessionIdbInfo) GetChkptId() uint32 {
	if m != nil {
		return m.ChkptId
	}
	return 0
}

func (m *PppoeMaSessionIdbInfo) GetPuntedCount() uint32 {
	if m != nil {
		return m.PuntedCount
	}
	return 0
}

func (m *PppoeMaSessionIdbInfo) GetPortLimit() uint32 {
	if m != nil {
		return m.PortLimit
	}
	return 0
}

func (m *PppoeMaSessionIdbInfo) GetIsCounted() int32 {
	if m != nil {
		return m.IsCounted
	}
	return 0
}

func (m *PppoeMaSessionIdbInfo) GetIsVlanOuterTag() int32 {
	if m != nil {
		return m.IsVlanOuterTag
	}
	return 0
}

func (m *PppoeMaSessionIdbInfo) GetVlanOuterTag() *PppoeMaVlanTagType {
	if m != nil {
		return m.VlanOuterTag
	}
	return nil
}

func (m *PppoeMaSessionIdbInfo) GetIsVlanInnerTag() int32 {
	if m != nil {
		return m.IsVlanInnerTag
	}
	return 0
}

func (m *PppoeMaSessionIdbInfo) GetVlanInnerTag() *PppoeMaVlanTagType {
	if m != nil {
		return m.VlanInnerTag
	}
	return nil
}

func (m *PppoeMaSessionIdbInfo) GetIsCleanupPending() int32 {
	if m != nil {
		return m.IsCleanupPending
	}
	return 0
}

func (m *PppoeMaSessionIdbInfo) GetIsDisconnectDonePending() int32 {
	if m != nil {
		return m.IsDisconnectDonePending
	}
	return 0
}

func (m *PppoeMaSessionIdbInfo) GetIsDeleteDonePending() int32 {
	if m != nil {
		return m.IsDeleteDonePending
	}
	return 0
}

func (m *PppoeMaSessionIdbInfo) GetIsIntfCreateCallbackPending() int32 {
	if m != nil {
		return m.IsIntfCreateCallbackPending
	}
	return 0
}

func (m *PppoeMaSessionIdbInfo) GetIsPublishEncapsAttrPending() int32 {
	if m != nil {
		return m.IsPublishEncapsAttrPending
	}
	return 0
}

func (m *PppoeMaSessionIdbInfo) GetIsPublishEncapsAttrCbPending() int32 {
	if m != nil {
		return m.IsPublishEncapsAttrCbPending
	}
	return 0
}

func (m *PppoeMaSessionIdbInfo) GetIsIntfDeleteCallbackPending() int32 {
	if m != nil {
		return m.IsIntfDeleteCallbackPending
	}
	return 0
}

func (m *PppoeMaSessionIdbInfo) GetIsIntfDeletePending() int32 {
	if m != nil {
		return m.IsIntfDeletePending
	}
	return 0
}

func (m *PppoeMaSessionIdbInfo) GetIsImOwnedResource() int32 {
	if m != nil {
		return m.IsImOwnedResource
	}
	return 0
}

func (m *PppoeMaSessionIdbInfo) GetIsImFinalReceived() int32 {
	if m != nil {
		return m.IsImFinalReceived
	}
	return 0
}

func (m *PppoeMaSessionIdbInfo) GetIsImOwnedResourceMissing() int32 {
	if m != nil {
		return m.IsImOwnedResourceMissing
	}
	return 0
}

func (m *PppoeMaSessionIdbInfo) GetIsAaaStartRequestCallbackPending() int32 {
	if m != nil {
		return m.IsAaaStartRequestCallbackPending
	}
	return 0
}

func (m *PppoeMaSessionIdbInfo) GetIsAaaOwnedResource() int32 {
	if m != nil {
		return m.IsAaaOwnedResource
	}
	return 0
}

func (m *PppoeMaSessionIdbInfo) GetIsAaaDisconnectRequested() int32 {
	if m != nil {
		return m.IsAaaDisconnectRequested
	}
	return 0
}

func (m *PppoeMaSessionIdbInfo) GetIsAaaDisconnectReceived() int32 {
	if m != nil {
		return m.IsAaaDisconnectReceived
	}
	return 0
}

func (m *PppoeMaSessionIdbInfo) GetIsSubDbActivateCallbackPending() int32 {
	if m != nil {
		return m.IsSubDbActivateCallbackPending
	}
	return 0
}

func (m *PppoeMaSessionIdbInfo) GetIsPadsSent() int32 {
	if m != nil {
		return m.IsPadsSent
	}
	return 0
}

func (m *PppoeMaSessionIdbInfo) GetIsPadtReceived() int32 {
	if m != nil {
		return m.IsPadtReceived
	}
	return 0
}

func (m *PppoeMaSessionIdbInfo) GetIsInFlight() int32 {
	if m != nil {
		return m.IsInFlight
	}
	return 0
}

func (m *PppoeMaSessionIdbInfo) GetIsRadiusOverride() int32 {
	if m != nil {
		return m.IsRadiusOverride
	}
	return 0
}

func (m *PppoeMaSessionIdbInfo) GetExpectedNotifications() uint32 {
	if m != nil {
		return m.ExpectedNotifications
	}
	return 0
}

func (m *PppoeMaSessionIdbInfo) GetReceivedNotifications() uint32 {
	if m != nil {
		return m.ReceivedNotifications
	}
	return 0
}

func (m *PppoeMaSessionIdbInfo) GetSrgState() string {
	if m != nil {
		return m.SrgState
	}
	return ""
}

func (m *PppoeMaSessionIdbInfo) GetIsSrgDataReceived() int32 {
	if m != nil {
		return m.IsSrgDataReceived
	}
	return 0
}

func (m *PppoeMaSessionIdbInfo) GetIsIedgeDataReceived() int32 {
	if m != nil {
		return m.IsIedgeDataReceived
	}
	return 0
}

type PppoeMaDiscEntry struct {
	Timestamp            uint64                 `protobuf:"varint,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Ifname               string                 `protobuf:"bytes,2,opt,name=ifname,proto3" json:"ifname,omitempty"`
	SessionIdb           *PppoeMaSessionIdbInfo `protobuf:"bytes,3,opt,name=session_idb,json=sessionIdb,proto3" json:"session_idb,omitempty"`
	Trigger              string                 `protobuf:"bytes,4,opt,name=trigger,proto3" json:"trigger,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *PppoeMaDiscEntry) Reset()         { *m = PppoeMaDiscEntry{} }
func (m *PppoeMaDiscEntry) String() string { return proto.CompactTextString(m) }
func (*PppoeMaDiscEntry) ProtoMessage()    {}
func (*PppoeMaDiscEntry) Descriptor() ([]byte, []int) {
	return fileDescriptor_e8a32c0ba8abb06c, []int{5}
}

func (m *PppoeMaDiscEntry) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PppoeMaDiscEntry.Unmarshal(m, b)
}
func (m *PppoeMaDiscEntry) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PppoeMaDiscEntry.Marshal(b, m, deterministic)
}
func (m *PppoeMaDiscEntry) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PppoeMaDiscEntry.Merge(m, src)
}
func (m *PppoeMaDiscEntry) XXX_Size() int {
	return xxx_messageInfo_PppoeMaDiscEntry.Size(m)
}
func (m *PppoeMaDiscEntry) XXX_DiscardUnknown() {
	xxx_messageInfo_PppoeMaDiscEntry.DiscardUnknown(m)
}

var xxx_messageInfo_PppoeMaDiscEntry proto.InternalMessageInfo

func (m *PppoeMaDiscEntry) GetTimestamp() uint64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *PppoeMaDiscEntry) GetIfname() string {
	if m != nil {
		return m.Ifname
	}
	return ""
}

func (m *PppoeMaDiscEntry) GetSessionIdb() *PppoeMaSessionIdbInfo {
	if m != nil {
		return m.SessionIdb
	}
	return nil
}

func (m *PppoeMaDiscEntry) GetTrigger() string {
	if m != nil {
		return m.Trigger
	}
	return ""
}

type PppoeMaDiscHistoryUnique struct {
	Entry                []*PppoeMaDiscEntry `protobuf:"bytes,50,rep,name=entry,proto3" json:"entry,omitempty"`
	DisconnectCount      []uint32            `protobuf:"varint,51,rep,packed,name=disconnect_count,json=disconnectCount,proto3" json:"disconnect_count,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *PppoeMaDiscHistoryUnique) Reset()         { *m = PppoeMaDiscHistoryUnique{} }
func (m *PppoeMaDiscHistoryUnique) String() string { return proto.CompactTextString(m) }
func (*PppoeMaDiscHistoryUnique) ProtoMessage()    {}
func (*PppoeMaDiscHistoryUnique) Descriptor() ([]byte, []int) {
	return fileDescriptor_e8a32c0ba8abb06c, []int{6}
}

func (m *PppoeMaDiscHistoryUnique) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PppoeMaDiscHistoryUnique.Unmarshal(m, b)
}
func (m *PppoeMaDiscHistoryUnique) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PppoeMaDiscHistoryUnique.Marshal(b, m, deterministic)
}
func (m *PppoeMaDiscHistoryUnique) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PppoeMaDiscHistoryUnique.Merge(m, src)
}
func (m *PppoeMaDiscHistoryUnique) XXX_Size() int {
	return xxx_messageInfo_PppoeMaDiscHistoryUnique.Size(m)
}
func (m *PppoeMaDiscHistoryUnique) XXX_DiscardUnknown() {
	xxx_messageInfo_PppoeMaDiscHistoryUnique.DiscardUnknown(m)
}

var xxx_messageInfo_PppoeMaDiscHistoryUnique proto.InternalMessageInfo

func (m *PppoeMaDiscHistoryUnique) GetEntry() []*PppoeMaDiscEntry {
	if m != nil {
		return m.Entry
	}
	return nil
}

func (m *PppoeMaDiscHistoryUnique) GetDisconnectCount() []uint32 {
	if m != nil {
		return m.DisconnectCount
	}
	return nil
}

func init() {
	proto.RegisterType((*PppoeMaDiscHistoryUnique_KEYS)(nil), "cisco_ios_xr_subscriber_pppoe_ma_oper.pppoe.nodes.node.disconnect_history_unique.pppoe_ma_disc_history_unique_KEYS")
	proto.RegisterType((*PppoeMaTagsAleInfo)(nil), "cisco_ios_xr_subscriber_pppoe_ma_oper.pppoe.nodes.node.disconnect_history_unique.pppoe_ma_tags_ale_info")
	proto.RegisterType((*PppoeMaInternalTagsInfo)(nil), "cisco_ios_xr_subscriber_pppoe_ma_oper.pppoe.nodes.node.disconnect_history_unique.pppoe_ma_internal_tags_info")
	proto.RegisterType((*PppoeMaVlanTagType)(nil), "cisco_ios_xr_subscriber_pppoe_ma_oper.pppoe.nodes.node.disconnect_history_unique.pppoe_ma_vlan_tag_type")
	proto.RegisterType((*PppoeMaSessionIdbInfo)(nil), "cisco_ios_xr_subscriber_pppoe_ma_oper.pppoe.nodes.node.disconnect_history_unique.pppoe_ma_session_idb_info")
	proto.RegisterType((*PppoeMaDiscEntry)(nil), "cisco_ios_xr_subscriber_pppoe_ma_oper.pppoe.nodes.node.disconnect_history_unique.pppoe_ma_disc_entry")
	proto.RegisterType((*PppoeMaDiscHistoryUnique)(nil), "cisco_ios_xr_subscriber_pppoe_ma_oper.pppoe.nodes.node.disconnect_history_unique.pppoe_ma_disc_history_unique")
}

func init() { proto.RegisterFile("pppoe_ma_disc_history_unique.proto", fileDescriptor_e8a32c0ba8abb06c) }

var fileDescriptor_e8a32c0ba8abb06c = []byte{
	// 1905 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xc4, 0x58, 0xcb, 0x72, 0x1b, 0xb9,
	0x15, 0x2d, 0x8e, 0x6d, 0x59, 0x04, 0xf5, 0x20, 0x21, 0x4b, 0x6a, 0x59, 0xb2, 0x4d, 0xd1, 0x63,
	0x5b, 0x1e, 0xdb, 0x4a, 0x2c, 0x57, 0xb2, 0x49, 0xe5, 0xa1, 0x88, 0x33, 0x19, 0xd6, 0xc8, 0x23,
	0x55, 0x6b, 0x3c, 0x55, 0x59, 0xa1, 0xc0, 0x06, 0x48, 0x21, 0x6a, 0x02, 0x6d, 0x00, 0xad, 0x47,
	0x65, 0x95, 0x55, 0x36, 0xa9, 0x2c, 0xf3, 0x05, 0xf9, 0x96, 0x7c, 0x4e, 0x56, 0xf9, 0x80, 0x14,
	0x2e, 0xfa, 0x01, 0x92, 0x1a, 0xaf, 0xe2, 0xca, 0x46, 0xa5, 0xbe, 0x2f, 0x9c, 0x7b, 0xfb, 0xa0,
	0x71, 0x40, 0xd4, 0xcb, 0xb2, 0x4c, 0x71, 0x32, 0xa1, 0x84, 0x09, 0x93, 0x90, 0x73, 0x61, 0xac,
	0xd2, 0x37, 0x24, 0x97, 0xe2, 0x63, 0xce, 0xf7, 0x33, 0xad, 0xac, 0xc2, 0xa7, 0x89, 0x30, 0x89,
	0x22, 0x42, 0x19, 0x72, 0xad, 0x89, 0xc9, 0x87, 0x26, 0xd1, 0x62, 0xc8, 0x35, 0xa9, 0x72, 0x55,
	0xc6, 0xf5, 0x3e, 0x3c, 0xed, 0x4b, 0xc5, 0xb8, 0x81, 0xbf, 0xfb, 0xae, 0xa2, 0x92, 0x92, 0x27,
	0x76, 0xa6, 0x6e, 0xef, 0x77, 0x68, 0xf7, 0x53, 0xeb, 0x92, 0xef, 0xbe, 0xfe, 0xe3, 0x19, 0xde,
	0x46, 0x4d, 0x57, 0x86, 0x48, 0x3a, 0xe1, 0x51, 0xa3, 0xdb, 0xd8, 0x6b, 0xc6, 0x8b, 0xce, 0xf0,
	0x3d, 0x9d, 0xf0, 0x9e, 0x40, 0x1b, 0x55, 0x05, 0x4b, 0xc7, 0x86, 0xd0, 0x94, 0x13, 0x21, 0x47,
	0xca, 0xa5, 0x31, 0x6a, 0x29, 0x49, 0x85, 0xbc, 0x80, 0xb4, 0xe5, 0x78, 0xd1, 0x19, 0x8e, 0x85,
	0xbc, 0xc0, 0x11, 0xba, 0xcf, 0x65, 0x42, 0x33, 0xf3, 0x36, 0xfa, 0x02, 0x5c, 0xe5, 0x63, 0xed,
	0x39, 0x88, 0xee, 0x84, 0x9e, 0x83, 0xde, 0x3f, 0x56, 0xd1, 0x76, 0xb5, 0x96, 0x90, 0x96, 0x6b,
	0x49, 0x53, 0xbf, 0x28, 0x2c, 0xf8, 0x1c, 0xad, 0x0a, 0x43, 0x0c, 0xd7, 0x97, 0x22, 0x09, 0xd0,
	0x76, 0xe2, 0x65, 0x61, 0xce, 0xbc, 0xd5, 0x41, 0xc6, 0x5f, 0xa2, 0x15, 0x61, 0xc8, 0x84, 0x5e,
	0x93, 0x8c, 0xde, 0xa4, 0x8a, 0x32, 0x80, 0xd0, 0x89, 0x97, 0x84, 0x79, 0x4f, 0xaf, 0x4f, 0xbd,
	0x0d, 0x77, 0xd1, 0x92, 0x30, 0xe4, 0x5c, 0x19, 0x0b, 0xc3, 0x00, 0x30, 0x9d, 0x18, 0x09, 0xf3,
	0xad, 0x32, 0xf6, 0x83, 0x14, 0x1f, 0xf1, 0x1b, 0xb4, 0x26, 0x0c, 0xd1, 0x3c, 0xa5, 0x37, 0xc4,
	0x70, 0x63, 0x84, 0x92, 0x44, 0xb0, 0xe8, 0x2e, 0x04, 0xb6, 0x85, 0x89, 0x9d, 0xe7, 0xcc, 0x3b,
	0x06, 0x0c, 0xbf, 0x46, 0x58, 0x18, 0x72, 0xc9, 0x25, 0x53, 0x9a, 0x98, 0x8c, 0x27, 0x62, 0x24,
	0x92, 0xe8, 0x5e, 0x19, 0xfd, 0x23, 0x38, 0xce, 0x0a, 0x3b, 0x5e, 0x47, 0x0b, 0xc2, 0x10, 0x71,
	0x35, 0x8a, 0x16, 0x20, 0xe2, 0x9e, 0x30, 0x83, 0xab, 0x51, 0x81, 0x4a, 0xf3, 0x89, 0xb2, 0xdc,
	0x2d, 0x76, 0xbf, 0x44, 0x15, 0x83, 0x69, 0xc0, 0x70, 0x0f, 0x2d, 0x0b, 0x43, 0x12, 0xa1, 0x93,
	0x5c, 0x58, 0x17, 0xb2, 0x08, 0x21, 0x2d, 0x61, 0x8e, 0xbc, 0x6d, 0xc0, 0xf0, 0x0e, 0x42, 0xc2,
	0x10, 0x66, 0x60, 0x7a, 0x51, 0x13, 0x02, 0x16, 0x85, 0xe9, 0x9b, 0xf4, 0x07, 0x3a, 0xc6, 0xbb,
	0x68, 0x69, 0x6a, 0x88, 0x08, 0x5e, 0x79, 0xcb, 0x04, 0x23, 0x7c, 0x82, 0x5a, 0xe1, 0xfc, 0x5a,
	0xf0, 0xa2, 0xd0, 0xa4, 0x9e, 0xde, 0x36, 0x6a, 0xd6, 0xa3, 0x5b, 0xea, 0x36, 0xf6, 0x96, 0xe2,
	0xc5, 0xf3, 0x72, 0x70, 0x7b, 0xa8, 0x3d, 0x37, 0xb5, 0x65, 0x88, 0x59, 0xd1, 0xd3, 0x33, 0xdb,
	0x46, 0xcd, 0xba, 0xd7, 0x15, 0x4f, 0x3d, 0x5d, 0x76, 0xfa, 0x08, 0xa1, 0xa0, 0xcd, 0x55, 0xf0,
	0x36, 0x93, 0xaa, 0xc9, 0x17, 0xa8, 0x5d, 0x34, 0x49, 0x13, 0x9b, 0xd3, 0x94, 0xe4, 0x59, 0xd4,
	0x2e, 0xf9, 0xd0, 0x37, 0xe9, 0x21, 0x58, 0x3f, 0x64, 0xf8, 0x15, 0xbc, 0x98, 0x20, 0x90, 0xa9,
	0x2b, 0x19, 0x75, 0x20, 0x74, 0x35, 0x08, 0xed, 0xab, 0x2b, 0x89, 0x77, 0x61, 0xbc, 0x2e, 0x78,
	0x22, 0xa4, 0x2b, 0x89, 0xcb, 0x37, 0xd0, 0x37, 0xe9, 0x7b, 0x21, 0x3f, 0x64, 0xf8, 0x19, 0xf0,
	0xb0, 0x0c, 0x81, 0x62, 0x6b, 0x25, 0xc1, 0x7c, 0x10, 0x54, 0x0a, 0xf0, 0x59, 0x4b, 0x7d, 0xb1,
	0x07, 0x21, 0x3e, 0xb0, 0x4e, 0xe3, 0xf3, 0x81, 0x50, 0x72, 0x3d, 0xc4, 0x07, 0xf6, 0x59, 0x7c,
	0xf4, 0xda, 0x95, 0xdc, 0x08, 0xf1, 0xd1, 0xeb, 0x69, 0x7c, 0xf4, 0xda, 0x17, 0xdb, 0x0c, 0xf1,
	0xd1, 0x6b, 0xa8, 0xb4, 0x87, 0x3a, 0x53, 0x9d, 0x92, 0x54, 0x5d, 0x45, 0x51, 0x00, 0x10, 0xba,
	0x3d, 0x56, 0x57, 0xf8, 0x35, 0x6c, 0x84, 0xb0, 0x61, 0x88, 0xdd, 0x0a, 0x10, 0x16, 0x4d, 0xcf,
	0x44, 0xbb, 0xe5, 0x81, 0x08, 0x79, 0x16, 0x3d, 0x0c, 0xa3, 0xe9, 0x75, 0xdf, 0xd9, 0x3f, 0x64,
	0xf8, 0x00, 0x6d, 0xcc, 0xbc, 0x9c, 0x32, 0x61, 0x1b, 0x12, 0x70, 0xf8, 0x82, 0x8a, 0x9c, 0x9f,
	0xa3, 0xf5, 0xb9, 0x15, 0xa0, 0xcd, 0x1d, 0x48, 0xe9, 0x4c, 0xad, 0x01, 0xbd, 0xfe, 0x12, 0x45,
	0xb7, 0xad, 0x02, 0x49, 0x8f, 0x20, 0xe9, 0xc1, 0xec, 0x3a, 0x90, 0xf7, 0x5b, 0xb4, 0x23, 0x0c,
	0xa1, 0x49, 0xc2, 0x8d, 0x21, 0xa9, 0x52, 0x19, 0xf1, 0x1f, 0xab, 0x3c, 0xa5, 0x56, 0x28, 0x19,
	0x3d, 0x86, 0xdc, 0x2d, 0x61, 0x0e, 0x21, 0xe4, 0x58, 0xa9, 0xec, 0xeb, 0x30, 0xc0, 0xed, 0xd6,
	0x69, 0x86, 0x3e, 0x81, 0xad, 0xd4, 0x62, 0x01, 0x3f, 0x9f, 0xa3, 0xd5, 0x59, 0x72, 0x76, 0x21,
	0x6a, 0x99, 0x4d, 0x51, 0x73, 0x07, 0xa1, 0x80, 0x97, 0xbb, 0xc5, 0x17, 0xb7, 0x64, 0x65, 0x17,
	0x2d, 0x4d, 0x51, 0xb2, 0xe7, 0xf7, 0x2c, 0xab, 0x09, 0x59, 0x62, 0xa9, 0xd8, 0xf8, 0xb4, 0xc6,
	0x52, 0x72, 0xb1, 0xc4, 0x12, 0x10, 0xf1, 0xcb, 0x1a, 0x4b, 0x4d, 0xc3, 0x12, 0x8b, 0xe7, 0xe0,
	0xb3, 0x1a, 0x0b, 0x30, 0xb0, 0xc4, 0x52, 0xd2, 0xef, 0x79, 0x8d, 0xa5, 0x20, 0xdf, 0x53, 0xb4,
	0x32, 0xc3, 0xbc, 0x17, 0x15, 0x98, 0x8a, 0x77, 0x2f, 0x50, 0x7b, 0x8e, 0x74, 0x7b, 0x15, 0x9a,
	0x80, 0x72, 0x65, 0x60, 0xc8, 0xb7, 0x97, 0x75, 0x60, 0xcd, 0xb6, 0x37, 0x68, 0xed, 0x36, 0xaa,
	0x7d, 0x05, 0xb1, 0x6d, 0x36, 0x4b, 0xb4, 0x57, 0x08, 0xdf, 0xc2, 0xb2, 0x57, 0x10, 0xbd, 0xca,
	0x66, 0x38, 0xf6, 0x16, 0xad, 0xdf, 0x4e, 0xb0, 0xd7, 0x10, 0x8f, 0xd9, 0x3c, 0xbd, 0xfe, 0xd9,
	0x40, 0x5b, 0x3f, 0x4d, 0xae, 0x37, 0xdd, 0xc6, 0x5e, 0xeb, 0xe0, 0x7c, 0xff, 0x7f, 0xad, 0x0a,
	0xf6, 0x6f, 0x3f, 0xd0, 0xe3, 0x4d, 0x7a, 0x3b, 0x89, 0x7b, 0x7f, 0x6d, 0x04, 0x22, 0xe0, 0x32,
	0xa5, 0xd2, 0x25, 0x12, 0x7b, 0x93, 0x71, 0xf7, 0x8d, 0xe6, 0xf6, 0x9c, 0x6b, 0x78, 0x2a, 0x54,
	0x40, 0x13, 0x2c, 0x3f, 0x38, 0xf7, 0x53, 0xb4, 0x9c, 0x1b, 0x07, 0x55, 0x0b, 0xa5, 0x85, 0xbd,
	0x29, 0xc4, 0xc0, 0x92, 0x33, 0x9e, 0x16, 0x36, 0xdc, 0x46, 0x77, 0x92, 0x91, 0x28, 0xd4, 0x80,
	0xfb, 0x17, 0x6f, 0xa2, 0xfb, 0xb0, 0x4c, 0x71, 0xda, 0x2e, 0xc7, 0x0b, 0xee, 0x71, 0xc0, 0x7a,
	0xff, 0xee, 0xa0, 0xad, 0x0a, 0x49, 0x7d, 0xba, 0x0c, 0xbd, 0x40, 0xd8, 0x41, 0x4d, 0x90, 0x0d,
	0x23, 0x9a, 0x94, 0x42, 0xa6, 0x36, 0xe0, 0x97, 0xa8, 0x5d, 0xcc, 0xba, 0x0e, 0xfa, 0x02, 0x82,
	0x56, 0xbd, 0x7d, 0x50, 0x85, 0x3e, 0x42, 0x28, 0x38, 0xba, 0x3c, 0xb0, 0xa6, 0x09, 0x4f, 0x2d,
	0x93, 0x0f, 0x49, 0x4a, 0x87, 0x3c, 0x2d, 0x00, 0x2e, 0x9a, 0x7c, 0x78, 0xec, 0x9e, 0xdd, 0xe1,
	0x97, 0x71, 0xae, 0xc9, 0x84, 0x26, 0x84, 0x32, 0xa6, 0xb9, 0x31, 0x20, 0x02, 0x9a, 0xf1, 0x8a,
	0xb3, 0xbf, 0xa7, 0xc9, 0xa1, 0xb7, 0xe2, 0xbf, 0x34, 0xd0, 0x5d, 0xf7, 0x06, 0x40, 0x01, 0xb4,
	0x0e, 0x26, 0x9f, 0xf1, 0x45, 0xcf, 0xab, 0xa9, 0x18, 0x96, 0xc6, 0x0f, 0xd0, 0x3d, 0x63, 0xa9,
	0xe5, 0x20, 0x34, 0x9a, 0xb1, 0x7f, 0xc0, 0x5f, 0xa1, 0x4e, 0xc2, 0x26, 0x44, 0x0d, 0xff, 0x04,
	0x45, 0xa9, 0x64, 0x29, 0x07, 0x9d, 0xb1, 0x1c, 0xaf, 0x26, 0x6c, 0x72, 0x02, 0xf6, 0x6f, 0xc1,
	0x8c, 0xb7, 0xd0, 0x62, 0x72, 0x7e, 0x91, 0xc1, 0x19, 0xdd, 0xf4, 0x82, 0x0e, 0x9e, 0x07, 0xcc,
	0x09, 0x8d, 0x2c, 0x97, 0x96, 0x33, 0x92, 0xa8, 0x5c, 0x5a, 0x10, 0x1a, 0xcb, 0x71, 0xcb, 0xdb,
	0x8e, 0x9c, 0xc9, 0x4d, 0x3a, 0x53, 0xda, 0x92, 0x54, 0x4c, 0x84, 0x2d, 0x74, 0x46, 0xd3, 0x59,
	0x8e, 0x9d, 0xc1, 0xb9, 0x9d, 0xd8, 0x51, 0x90, 0x01, 0x3a, 0xa3, 0x13, 0x37, 0x85, 0x39, 0xf2,
	0x06, 0xfc, 0x12, 0x8e, 0x30, 0xa0, 0x8a, 0xca, 0xad, 0x63, 0x21, 0x1d, 0x83, 0xd2, 0xe8, 0xc4,
	0x2b, 0xc2, 0xfc, 0x98, 0x52, 0x79, 0xe2, 0xcc, 0x4e, 0xf4, 0xfc, 0xbd, 0x81, 0x56, 0x66, 0x02,
	0x57, 0x3e, 0xfb, 0xfe, 0x9a, 0xda, 0x2b, 0xf1, 0xd2, 0x65, 0x08, 0x28, 0xc0, 0x2e, 0xa4, 0x2c,
	0x20, 0xad, 0x86, 0xd8, 0x07, 0xce, 0x3c, 0x85, 0xbd, 0x0e, 0x6c, 0xff, 0x3f, 0xb0, 0x57, 0x80,
	0xbc, 0xd4, 0x4d, 0x52, 0x4e, 0x65, 0x9e, 0x91, 0x8c, 0x4b, 0x26, 0xe4, 0xb8, 0x50, 0x54, 0x6d,
	0x61, 0x8e, 0xbc, 0xe3, 0xd4, 0xdb, 0xf1, 0xaf, 0xd0, 0x43, 0x77, 0xf8, 0xd6, 0x4b, 0x32, 0x25,
	0x79, 0x95, 0xe5, 0xf5, 0xd5, 0xa6, 0x30, 0xfd, 0x2a, 0xa0, 0xaf, 0x24, 0x2f, 0x93, 0xdf, 0x79,
	0x7d, 0xc0, 0x53, 0x6e, 0xf9, 0x74, 0xa2, 0xd7, 0x5c, 0x6b, 0xc2, 0xf4, 0xc1, 0x19, 0x26, 0xf5,
	0xd1, 0x13, 0x01, 0xdb, 0x7c, 0x44, 0x12, 0xcd, 0xa9, 0xe5, 0x24, 0xa1, 0x69, 0x3a, 0xa4, 0xc9,
	0x45, 0x95, 0xed, 0x95, 0xd8, 0xb6, 0x70, 0xbb, 0x7e, 0x74, 0x04, 0x41, 0x47, 0x45, 0x4c, 0x59,
	0xe5, 0xf7, 0xe8, 0xb1, 0x30, 0x24, 0xcb, 0x87, 0xa9, 0x30, 0xe7, 0xc5, 0xb7, 0xd9, 0x9d, 0x8c,
	0xba, 0x2a, 0xe2, 0x35, 0xda, 0x43, 0x61, 0x4e, 0x7d, 0x90, 0xff, 0x6c, 0x1e, 0x5a, 0xab, 0xcb,
	0x1a, 0x7f, 0x40, 0xbb, 0x3f, 0x51, 0x23, 0x19, 0x56, 0x65, 0xbc, 0x84, 0xdb, 0xb9, 0xa5, 0xcc,
	0xd1, 0xf0, 0x96, 0x96, 0x8a, 0x61, 0xcc, 0xb5, 0xb4, 0x19, 0xb6, 0xe4, 0x87, 0x32, 0xdb, 0x92,
	0x9f, 0x66, 0x58, 0xa5, 0x4c, 0x8e, 0xca, 0x69, 0xd6, 0xc9, 0x65, 0xd2, 0xcf, 0xd0, 0x03, 0x97,
	0x34, 0x21, 0xea, 0x4a, 0x72, 0x46, 0x34, 0x37, 0x2a, 0xd7, 0x09, 0x2f, 0xf4, 0x5f, 0x47, 0x98,
	0xc1, 0xe4, 0xc4, 0x79, 0xe2, 0xc2, 0x51, 0x27, 0x8c, 0x84, 0xfb, 0xe6, 0x68, 0x9e, 0x70, 0x71,
	0xc9, 0x59, 0x21, 0x01, 0x21, 0xe1, 0x1b, 0xe7, 0x89, 0x0b, 0x07, 0xfe, 0x0d, 0xc8, 0xac, 0xb9,
	0x15, 0xc8, 0x44, 0x18, 0xe3, 0xc0, 0x79, 0x29, 0x18, 0xcd, 0xad, 0xf4, 0xde, 0xfb, 0xf1, 0x09,
	0x7a, 0xe6, 0x64, 0x1a, 0xa5, 0xc4, 0x58, 0xaa, 0x2d, 0xd1, 0xfc, 0x63, 0xce, 0x8d, 0x9d, 0x1f,
	0x91, 0x17, 0x88, 0x5d, 0x61, 0x0e, 0x29, 0x3d, 0x73, 0xa1, 0xb1, 0x8f, 0x9c, 0x9d, 0xd3, 0x5b,
	0x50, 0x98, 0xae, 0xe0, 0x4c, 0xcf, 0x8f, 0x4a, 0x51, 0x7a, 0x48, 0xe9, 0x74, 0xd3, 0xbf, 0x46,
	0xdb, 0x45, 0x4a, 0xc0, 0xf4, 0x02, 0x08, 0x67, 0x85, 0x52, 0x8c, 0x20, 0xb1, 0x66, 0x7a, 0x5c,
	0xfa, 0x8b, 0x4d, 0x32, 0x97, 0x5e, 0x4c, 0xee, 0x49, 0xb9, 0x49, 0x66, 0xb2, 0x8b, 0xf9, 0x7d,
	0x87, 0x9e, 0xba, 0x9b, 0x71, 0x3e, 0x24, 0x6c, 0xe8, 0x04, 0x88, 0xb8, 0xbc, 0x95, 0xf3, 0x5d,
	0xa8, 0xf2, 0x58, 0x98, 0xb3, 0x7c, 0xd8, 0x1f, 0x1e, 0x16, 0x71, 0xb3, 0xbd, 0xfb, 0x2b, 0x68,
	0x46, 0x99, 0xbb, 0x6b, 0x4b, 0x0b, 0x42, 0x13, 0x2e, 0x18, 0xa7, 0x94, 0x99, 0x33, 0x2e, 0xad,
	0x3b, 0xe2, 0x7c, 0x44, 0x80, 0xb0, 0x57, 0x7e, 0xb9, 0x4e, 0x29, 0xab, 0x81, 0xf9, 0x5a, 0x42,
	0x92, 0x51, 0x2a, 0xc6, 0xe7, 0x16, 0x14, 0x27, 0xd4, 0x1a, 0xc8, 0x6f, 0xc0, 0x52, 0x7c, 0x4a,
	0x34, 0x65, 0x22, 0x37, 0x44, 0x5d, 0x72, 0xad, 0x05, 0xe3, 0xa0, 0x39, 0xfd, 0x1d, 0x1b, 0x1c,
	0x27, 0x85, 0x1d, 0xff, 0x02, 0x6d, 0xf0, 0xeb, 0x8c, 0x27, 0xee, 0x4c, 0x91, 0xca, 0xba, 0x9b,
	0x34, 0x48, 0x14, 0x53, 0x48, 0xd0, 0xf5, 0xd2, 0xfb, 0x7d, 0xe8, 0x74, 0x69, 0x25, 0xd0, 0x99,
	0x34, 0xaf, 0x4c, 0xd7, 0x4b, 0xef, 0x74, 0x9a, 0x3b, 0xe7, 0xf5, 0x98, 0xf8, 0x03, 0xf2, 0x85,
	0xbf, 0x9d, 0x1a, 0x3d, 0x3e, 0x83, 0x33, 0xd2, 0x93, 0xdc, 0xf9, 0xe1, 0x57, 0x90, 0x6a, 0x10,
	0x7b, 0x25, 0xc9, 0xcf, 0xf4, 0xb8, 0x4f, 0x2d, 0xad, 0x66, 0x51, 0xec, 0x3d, 0xce, 0xc6, 0x7c,
	0x26, 0xe5, 0x65, 0xb5, 0xf7, 0x9c, 0x33, 0x4c, 0xea, 0xfd, 0xa7, 0x81, 0xd6, 0xa6, 0x7f, 0xc1,
	0xe1, 0xd2, 0xea, 0x1b, 0x27, 0x75, 0xac, 0x98, 0x70, 0x63, 0xe9, 0x24, 0x03, 0xa9, 0x73, 0x37,
	0xae, 0x0d, 0x78, 0x03, 0x2d, 0x88, 0x11, 0xdc, 0xed, 0xbd, 0xc0, 0x29, 0x9e, 0xf0, 0xdf, 0x1a,
	0xa8, 0x15, 0xa8, 0x26, 0x50, 0x36, 0xad, 0x83, 0x8b, 0xcf, 0x78, 0x8a, 0xcc, 0x6a, 0xb4, 0x18,
	0x55, 0x32, 0x6a, 0x88, 0x23, 0x74, 0xdf, 0x6a, 0x31, 0x1e, 0x73, 0x0d, 0x2a, 0xaa, 0x19, 0x97,
	0x8f, 0xbd, 0x7f, 0x35, 0xd0, 0xce, 0xa7, 0x7e, 0xb8, 0xc2, 0x7f, 0x46, 0xf7, 0x60, 0x10, 0xd1,
	0x41, 0xf7, 0xce, 0x5e, 0xeb, 0x80, 0x7f, 0xc6, 0x16, 0xea, 0xa9, 0xc7, 0x7e, 0x4d, 0xa7, 0x24,
	0x83, 0x3c, 0xaf, 0x6d, 0xde, 0x75, 0xef, 0xc0, 0xa5, 0xa0, 0xb2, 0x83, 0x46, 0x19, 0x2e, 0xc0,
	0x2f, 0x7b, 0xef, 0xfe, 0x1b, 0x00, 0x00, 0xff, 0xff, 0x02, 0x0d, 0x90, 0xdd, 0xff, 0x13, 0x00,
	0x00,
}
