/*
Copyright 2019 Cisco Systems

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: rsvp_mgmt_nbr_compact.proto

package cisco_ios_xr_ip_rsvp_oper_rsvp_standby_interface_neighbor_briefs_interface_neighbor_brief

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type RsvpMgmtNbrCompact_KEYS struct {
	NeighborAddress      string   `protobuf:"bytes,1,opt,name=neighbor_address,json=neighborAddress,proto3" json:"neighbor_address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RsvpMgmtNbrCompact_KEYS) Reset()         { *m = RsvpMgmtNbrCompact_KEYS{} }
func (m *RsvpMgmtNbrCompact_KEYS) String() string { return proto.CompactTextString(m) }
func (*RsvpMgmtNbrCompact_KEYS) ProtoMessage()    {}
func (*RsvpMgmtNbrCompact_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_a4353ebbfa3fadb9, []int{0}
}

func (m *RsvpMgmtNbrCompact_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RsvpMgmtNbrCompact_KEYS.Unmarshal(m, b)
}
func (m *RsvpMgmtNbrCompact_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RsvpMgmtNbrCompact_KEYS.Marshal(b, m, deterministic)
}
func (m *RsvpMgmtNbrCompact_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RsvpMgmtNbrCompact_KEYS.Merge(m, src)
}
func (m *RsvpMgmtNbrCompact_KEYS) XXX_Size() int {
	return xxx_messageInfo_RsvpMgmtNbrCompact_KEYS.Size(m)
}
func (m *RsvpMgmtNbrCompact_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_RsvpMgmtNbrCompact_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_RsvpMgmtNbrCompact_KEYS proto.InternalMessageInfo

func (m *RsvpMgmtNbrCompact_KEYS) GetNeighborAddress() string {
	if m != nil {
		return m.NeighborAddress
	}
	return ""
}

type RsvpMgmtIfNbrCompact struct {
	InterfaceNeighborAddress string   `protobuf:"bytes,1,opt,name=interface_neighbor_address,json=interfaceNeighborAddress,proto3" json:"interface_neighbor_address,omitempty"`
	NeighborInterfaceName    string   `protobuf:"bytes,2,opt,name=neighbor_interface_name,json=neighborInterfaceName,proto3" json:"neighbor_interface_name,omitempty"`
	XXX_NoUnkeyedLiteral     struct{} `json:"-"`
	XXX_unrecognized         []byte   `json:"-"`
	XXX_sizecache            int32    `json:"-"`
}

func (m *RsvpMgmtIfNbrCompact) Reset()         { *m = RsvpMgmtIfNbrCompact{} }
func (m *RsvpMgmtIfNbrCompact) String() string { return proto.CompactTextString(m) }
func (*RsvpMgmtIfNbrCompact) ProtoMessage()    {}
func (*RsvpMgmtIfNbrCompact) Descriptor() ([]byte, []int) {
	return fileDescriptor_a4353ebbfa3fadb9, []int{1}
}

func (m *RsvpMgmtIfNbrCompact) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RsvpMgmtIfNbrCompact.Unmarshal(m, b)
}
func (m *RsvpMgmtIfNbrCompact) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RsvpMgmtIfNbrCompact.Marshal(b, m, deterministic)
}
func (m *RsvpMgmtIfNbrCompact) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RsvpMgmtIfNbrCompact.Merge(m, src)
}
func (m *RsvpMgmtIfNbrCompact) XXX_Size() int {
	return xxx_messageInfo_RsvpMgmtIfNbrCompact.Size(m)
}
func (m *RsvpMgmtIfNbrCompact) XXX_DiscardUnknown() {
	xxx_messageInfo_RsvpMgmtIfNbrCompact.DiscardUnknown(m)
}

var xxx_messageInfo_RsvpMgmtIfNbrCompact proto.InternalMessageInfo

func (m *RsvpMgmtIfNbrCompact) GetInterfaceNeighborAddress() string {
	if m != nil {
		return m.InterfaceNeighborAddress
	}
	return ""
}

func (m *RsvpMgmtIfNbrCompact) GetNeighborInterfaceName() string {
	if m != nil {
		return m.NeighborInterfaceName
	}
	return ""
}

type RsvpMgmtNbrCompact struct {
	NodeAddress                  string                  `protobuf:"bytes,50,opt,name=node_address,json=nodeAddress,proto3" json:"node_address,omitempty"`
	InterfaceNeighborListCompact []*RsvpMgmtIfNbrCompact `protobuf:"bytes,51,rep,name=interface_neighbor_list_compact,json=interfaceNeighborListCompact,proto3" json:"interface_neighbor_list_compact,omitempty"`
	XXX_NoUnkeyedLiteral         struct{}                `json:"-"`
	XXX_unrecognized             []byte                  `json:"-"`
	XXX_sizecache                int32                   `json:"-"`
}

func (m *RsvpMgmtNbrCompact) Reset()         { *m = RsvpMgmtNbrCompact{} }
func (m *RsvpMgmtNbrCompact) String() string { return proto.CompactTextString(m) }
func (*RsvpMgmtNbrCompact) ProtoMessage()    {}
func (*RsvpMgmtNbrCompact) Descriptor() ([]byte, []int) {
	return fileDescriptor_a4353ebbfa3fadb9, []int{2}
}

func (m *RsvpMgmtNbrCompact) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RsvpMgmtNbrCompact.Unmarshal(m, b)
}
func (m *RsvpMgmtNbrCompact) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RsvpMgmtNbrCompact.Marshal(b, m, deterministic)
}
func (m *RsvpMgmtNbrCompact) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RsvpMgmtNbrCompact.Merge(m, src)
}
func (m *RsvpMgmtNbrCompact) XXX_Size() int {
	return xxx_messageInfo_RsvpMgmtNbrCompact.Size(m)
}
func (m *RsvpMgmtNbrCompact) XXX_DiscardUnknown() {
	xxx_messageInfo_RsvpMgmtNbrCompact.DiscardUnknown(m)
}

var xxx_messageInfo_RsvpMgmtNbrCompact proto.InternalMessageInfo

func (m *RsvpMgmtNbrCompact) GetNodeAddress() string {
	if m != nil {
		return m.NodeAddress
	}
	return ""
}

func (m *RsvpMgmtNbrCompact) GetInterfaceNeighborListCompact() []*RsvpMgmtIfNbrCompact {
	if m != nil {
		return m.InterfaceNeighborListCompact
	}
	return nil
}

func init() {
	proto.RegisterType((*RsvpMgmtNbrCompact_KEYS)(nil), "cisco_ios_xr_ip_rsvp_oper.rsvp_standby.interface_neighbor_briefs.interface_neighbor_brief.rsvp_mgmt_nbr_compact_KEYS")
	proto.RegisterType((*RsvpMgmtIfNbrCompact)(nil), "cisco_ios_xr_ip_rsvp_oper.rsvp_standby.interface_neighbor_briefs.interface_neighbor_brief.rsvp_mgmt_if_nbr_compact")
	proto.RegisterType((*RsvpMgmtNbrCompact)(nil), "cisco_ios_xr_ip_rsvp_oper.rsvp_standby.interface_neighbor_briefs.interface_neighbor_brief.rsvp_mgmt_nbr_compact")
}

func init() { proto.RegisterFile("rsvp_mgmt_nbr_compact.proto", fileDescriptor_a4353ebbfa3fadb9) }

var fileDescriptor_a4353ebbfa3fadb9 = []byte{
	// 274 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x92, 0x2e, 0x2a, 0x2e, 0x2b,
	0x88, 0xcf, 0x4d, 0xcf, 0x2d, 0x89, 0xcf, 0x4b, 0x2a, 0x8a, 0x4f, 0xce, 0xcf, 0x2d, 0x48, 0x4c,
	0x2e, 0xd1, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x8a, 0x4c, 0xce, 0x2c, 0x4e, 0xce, 0x8f, 0xcf,
	0xcc, 0x2f, 0x8e, 0xaf, 0x28, 0x8a, 0xcf, 0x2c, 0x88, 0x07, 0x2b, 0xce, 0x2f, 0x48, 0x2d, 0xd2,
	0x03, 0xb3, 0x8a, 0x4b, 0x12, 0xf3, 0x52, 0x92, 0x2a, 0xf5, 0x32, 0xf3, 0x4a, 0x52, 0x8b, 0xd2,
	0x12, 0x93, 0x53, 0xe3, 0xf3, 0x52, 0x33, 0xd3, 0x33, 0x92, 0xf2, 0x8b, 0xe2, 0x93, 0x8a, 0x32,
	0x53, 0xd3, 0x8a, 0x71, 0xca, 0x28, 0xb9, 0x73, 0x49, 0x61, 0xb5, 0x39, 0xde, 0xdb, 0x35, 0x32,
	0x58, 0x48, 0x93, 0x4b, 0x00, 0xae, 0x3e, 0x31, 0x25, 0xa5, 0x28, 0xb5, 0xb8, 0x58, 0x82, 0x51,
	0x81, 0x51, 0x83, 0x33, 0x88, 0x1f, 0x26, 0xee, 0x08, 0x11, 0x56, 0x9a, 0xc0, 0xc8, 0x25, 0x81,
	0x30, 0x29, 0x33, 0x0d, 0xd9, 0x30, 0x21, 0x1b, 0x2e, 0x29, 0x2c, 0x2e, 0x40, 0x35, 0x51, 0x02,
	0xae, 0xc2, 0x0f, 0xd5, 0x68, 0x21, 0x33, 0x2e, 0x71, 0xb8, 0x1e, 0x24, 0x63, 0x12, 0x73, 0x53,
	0x25, 0x98, 0xc0, 0x5a, 0x45, 0x61, 0xd2, 0x9e, 0x70, 0x23, 0x12, 0x73, 0x53, 0x95, 0xbe, 0x33,
	0x72, 0x89, 0x62, 0xf5, 0x9c, 0x90, 0x22, 0x17, 0x4f, 0x5e, 0x7e, 0x4a, 0x2a, 0xdc, 0x05, 0x46,
	0x60, 0x63, 0xb8, 0x41, 0x62, 0x30, 0x4b, 0x77, 0x31, 0x72, 0xc9, 0x63, 0x71, 0x73, 0x4e, 0x66,
	0x71, 0x09, 0xcc, 0x18, 0x09, 0x63, 0x05, 0x66, 0x0d, 0x6e, 0xa3, 0x62, 0x3d, 0x9a, 0x45, 0x8f,
	0x1e, 0xae, 0x10, 0x0d, 0x92, 0xc1, 0x08, 0x2d, 0x9f, 0xcc, 0xe2, 0x12, 0x67, 0x88, 0x6c, 0x12,
	0x1b, 0x38, 0xdd, 0x18, 0x03, 0x02, 0x00, 0x00, 0xff, 0xff, 0x57, 0x08, 0x38, 0x30, 0x56, 0x02,
	0x00, 0x00,
}
