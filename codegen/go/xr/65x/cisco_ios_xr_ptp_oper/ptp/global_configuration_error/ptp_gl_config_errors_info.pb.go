/*
Copyright 2019 Cisco Systems

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: ptp_gl_config_errors_info.proto

package cisco_ios_xr_ptp_oper_ptp_global_configuration_error

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type PtpGlConfigErrorsInfo_KEYS struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PtpGlConfigErrorsInfo_KEYS) Reset()         { *m = PtpGlConfigErrorsInfo_KEYS{} }
func (m *PtpGlConfigErrorsInfo_KEYS) String() string { return proto.CompactTextString(m) }
func (*PtpGlConfigErrorsInfo_KEYS) ProtoMessage()    {}
func (*PtpGlConfigErrorsInfo_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_d6e8c5af53e59df1, []int{0}
}

func (m *PtpGlConfigErrorsInfo_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PtpGlConfigErrorsInfo_KEYS.Unmarshal(m, b)
}
func (m *PtpGlConfigErrorsInfo_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PtpGlConfigErrorsInfo_KEYS.Marshal(b, m, deterministic)
}
func (m *PtpGlConfigErrorsInfo_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PtpGlConfigErrorsInfo_KEYS.Merge(m, src)
}
func (m *PtpGlConfigErrorsInfo_KEYS) XXX_Size() int {
	return xxx_messageInfo_PtpGlConfigErrorsInfo_KEYS.Size(m)
}
func (m *PtpGlConfigErrorsInfo_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_PtpGlConfigErrorsInfo_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_PtpGlConfigErrorsInfo_KEYS proto.InternalMessageInfo

type PtpBagGlConfigErrors struct {
	Domain                       bool     `protobuf:"varint,1,opt,name=domain,proto3" json:"domain,omitempty"`
	ProfilePriority1Config       bool     `protobuf:"varint,2,opt,name=profile_priority1_config,json=profilePriority1Config,proto3" json:"profile_priority1_config,omitempty"`
	ProfilePriority2Value        bool     `protobuf:"varint,3,opt,name=profile_priority2_value,json=profilePriority2Value,proto3" json:"profile_priority2_value,omitempty"`
	UtcOffsetChange              bool     `protobuf:"varint,4,opt,name=utc_offset_change,json=utcOffsetChange,proto3" json:"utc_offset_change,omitempty"`
	PhysicalLayerFrequency       bool     `protobuf:"varint,5,opt,name=physical_layer_frequency,json=physicalLayerFrequency,proto3" json:"physical_layer_frequency,omitempty"`
	ProfileVirtualPort           bool     `protobuf:"varint,6,opt,name=profile_virtual_port,json=profileVirtualPort,proto3" json:"profile_virtual_port,omitempty"`
	VirtualPortPriority1Config   bool     `protobuf:"varint,7,opt,name=virtual_port_priority1_config,json=virtualPortPriority1Config,proto3" json:"virtual_port_priority1_config,omitempty"`
	VirtualPortPriority2Value    bool     `protobuf:"varint,8,opt,name=virtual_port_priority2_value,json=virtualPortPriority2Value,proto3" json:"virtual_port_priority2_value,omitempty"`
	VirtualPortProfileClockClass bool     `protobuf:"varint,9,opt,name=virtual_port_profile_clock_class,json=virtualPortProfileClockClass,proto3" json:"virtual_port_profile_clock_class,omitempty"`
	VirtualPortClockAccuracy     bool     `protobuf:"varint,10,opt,name=virtual_port_clock_accuracy,json=virtualPortClockAccuracy,proto3" json:"virtual_port_clock_accuracy,omitempty"`
	VirtualPortOslv              bool     `protobuf:"varint,11,opt,name=virtual_port_oslv,json=virtualPortOslv,proto3" json:"virtual_port_oslv,omitempty"`
	VirtualPortLocalPriority     bool     `protobuf:"varint,12,opt,name=virtual_port_local_priority,json=virtualPortLocalPriority,proto3" json:"virtual_port_local_priority,omitempty"`
	XXX_NoUnkeyedLiteral         struct{} `json:"-"`
	XXX_unrecognized             []byte   `json:"-"`
	XXX_sizecache                int32    `json:"-"`
}

func (m *PtpBagGlConfigErrors) Reset()         { *m = PtpBagGlConfigErrors{} }
func (m *PtpBagGlConfigErrors) String() string { return proto.CompactTextString(m) }
func (*PtpBagGlConfigErrors) ProtoMessage()    {}
func (*PtpBagGlConfigErrors) Descriptor() ([]byte, []int) {
	return fileDescriptor_d6e8c5af53e59df1, []int{1}
}

func (m *PtpBagGlConfigErrors) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PtpBagGlConfigErrors.Unmarshal(m, b)
}
func (m *PtpBagGlConfigErrors) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PtpBagGlConfigErrors.Marshal(b, m, deterministic)
}
func (m *PtpBagGlConfigErrors) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PtpBagGlConfigErrors.Merge(m, src)
}
func (m *PtpBagGlConfigErrors) XXX_Size() int {
	return xxx_messageInfo_PtpBagGlConfigErrors.Size(m)
}
func (m *PtpBagGlConfigErrors) XXX_DiscardUnknown() {
	xxx_messageInfo_PtpBagGlConfigErrors.DiscardUnknown(m)
}

var xxx_messageInfo_PtpBagGlConfigErrors proto.InternalMessageInfo

func (m *PtpBagGlConfigErrors) GetDomain() bool {
	if m != nil {
		return m.Domain
	}
	return false
}

func (m *PtpBagGlConfigErrors) GetProfilePriority1Config() bool {
	if m != nil {
		return m.ProfilePriority1Config
	}
	return false
}

func (m *PtpBagGlConfigErrors) GetProfilePriority2Value() bool {
	if m != nil {
		return m.ProfilePriority2Value
	}
	return false
}

func (m *PtpBagGlConfigErrors) GetUtcOffsetChange() bool {
	if m != nil {
		return m.UtcOffsetChange
	}
	return false
}

func (m *PtpBagGlConfigErrors) GetPhysicalLayerFrequency() bool {
	if m != nil {
		return m.PhysicalLayerFrequency
	}
	return false
}

func (m *PtpBagGlConfigErrors) GetProfileVirtualPort() bool {
	if m != nil {
		return m.ProfileVirtualPort
	}
	return false
}

func (m *PtpBagGlConfigErrors) GetVirtualPortPriority1Config() bool {
	if m != nil {
		return m.VirtualPortPriority1Config
	}
	return false
}

func (m *PtpBagGlConfigErrors) GetVirtualPortPriority2Value() bool {
	if m != nil {
		return m.VirtualPortPriority2Value
	}
	return false
}

func (m *PtpBagGlConfigErrors) GetVirtualPortProfileClockClass() bool {
	if m != nil {
		return m.VirtualPortProfileClockClass
	}
	return false
}

func (m *PtpBagGlConfigErrors) GetVirtualPortClockAccuracy() bool {
	if m != nil {
		return m.VirtualPortClockAccuracy
	}
	return false
}

func (m *PtpBagGlConfigErrors) GetVirtualPortOslv() bool {
	if m != nil {
		return m.VirtualPortOslv
	}
	return false
}

func (m *PtpBagGlConfigErrors) GetVirtualPortLocalPriority() bool {
	if m != nil {
		return m.VirtualPortLocalPriority
	}
	return false
}

type PtpGlConfigErrorsInfo struct {
	ClockProfile             string                `protobuf:"bytes,50,opt,name=clock_profile,json=clockProfile,proto3" json:"clock_profile,omitempty"`
	ClockProfileSet          bool                  `protobuf:"varint,51,opt,name=clock_profile_set,json=clockProfileSet,proto3" json:"clock_profile_set,omitempty"`
	TelecomClockType         string                `protobuf:"bytes,52,opt,name=telecom_clock_type,json=telecomClockType,proto3" json:"telecom_clock_type,omitempty"`
	DomainNumber             uint32                `protobuf:"varint,53,opt,name=domain_number,json=domainNumber,proto3" json:"domain_number,omitempty"`
	Priority2                uint32                `protobuf:"varint,54,opt,name=priority2,proto3" json:"priority2,omitempty"`
	VirtualPortPriority2     uint32                `protobuf:"varint,55,opt,name=virtual_port_priority2,json=virtualPortPriority2,proto3" json:"virtual_port_priority2,omitempty"`
	VirtualPortClockClass    uint32                `protobuf:"varint,56,opt,name=virtual_port_clock_class,json=virtualPortClockClass,proto3" json:"virtual_port_clock_class,omitempty"`
	VirtualPortClockAccuracy uint32                `protobuf:"varint,57,opt,name=virtual_port_clock_accuracy,json=virtualPortClockAccuracy,proto3" json:"virtual_port_clock_accuracy,omitempty"`
	VirtualPortOslv          uint32                `protobuf:"varint,58,opt,name=virtual_port_oslv,json=virtualPortOslv,proto3" json:"virtual_port_oslv,omitempty"`
	ConfigurationErrors      *PtpBagGlConfigErrors `protobuf:"bytes,59,opt,name=configuration_errors,json=configurationErrors,proto3" json:"configuration_errors,omitempty"`
	XXX_NoUnkeyedLiteral     struct{}              `json:"-"`
	XXX_unrecognized         []byte                `json:"-"`
	XXX_sizecache            int32                 `json:"-"`
}

func (m *PtpGlConfigErrorsInfo) Reset()         { *m = PtpGlConfigErrorsInfo{} }
func (m *PtpGlConfigErrorsInfo) String() string { return proto.CompactTextString(m) }
func (*PtpGlConfigErrorsInfo) ProtoMessage()    {}
func (*PtpGlConfigErrorsInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_d6e8c5af53e59df1, []int{2}
}

func (m *PtpGlConfigErrorsInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PtpGlConfigErrorsInfo.Unmarshal(m, b)
}
func (m *PtpGlConfigErrorsInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PtpGlConfigErrorsInfo.Marshal(b, m, deterministic)
}
func (m *PtpGlConfigErrorsInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PtpGlConfigErrorsInfo.Merge(m, src)
}
func (m *PtpGlConfigErrorsInfo) XXX_Size() int {
	return xxx_messageInfo_PtpGlConfigErrorsInfo.Size(m)
}
func (m *PtpGlConfigErrorsInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_PtpGlConfigErrorsInfo.DiscardUnknown(m)
}

var xxx_messageInfo_PtpGlConfigErrorsInfo proto.InternalMessageInfo

func (m *PtpGlConfigErrorsInfo) GetClockProfile() string {
	if m != nil {
		return m.ClockProfile
	}
	return ""
}

func (m *PtpGlConfigErrorsInfo) GetClockProfileSet() bool {
	if m != nil {
		return m.ClockProfileSet
	}
	return false
}

func (m *PtpGlConfigErrorsInfo) GetTelecomClockType() string {
	if m != nil {
		return m.TelecomClockType
	}
	return ""
}

func (m *PtpGlConfigErrorsInfo) GetDomainNumber() uint32 {
	if m != nil {
		return m.DomainNumber
	}
	return 0
}

func (m *PtpGlConfigErrorsInfo) GetPriority2() uint32 {
	if m != nil {
		return m.Priority2
	}
	return 0
}

func (m *PtpGlConfigErrorsInfo) GetVirtualPortPriority2() uint32 {
	if m != nil {
		return m.VirtualPortPriority2
	}
	return 0
}

func (m *PtpGlConfigErrorsInfo) GetVirtualPortClockClass() uint32 {
	if m != nil {
		return m.VirtualPortClockClass
	}
	return 0
}

func (m *PtpGlConfigErrorsInfo) GetVirtualPortClockAccuracy() uint32 {
	if m != nil {
		return m.VirtualPortClockAccuracy
	}
	return 0
}

func (m *PtpGlConfigErrorsInfo) GetVirtualPortOslv() uint32 {
	if m != nil {
		return m.VirtualPortOslv
	}
	return 0
}

func (m *PtpGlConfigErrorsInfo) GetConfigurationErrors() *PtpBagGlConfigErrors {
	if m != nil {
		return m.ConfigurationErrors
	}
	return nil
}

func init() {
	proto.RegisterType((*PtpGlConfigErrorsInfo_KEYS)(nil), "cisco_ios_xr_ptp_oper.ptp.global_configuration_error.ptp_gl_config_errors_info_KEYS")
	proto.RegisterType((*PtpBagGlConfigErrors)(nil), "cisco_ios_xr_ptp_oper.ptp.global_configuration_error.ptp_bag_gl_config_errors")
	proto.RegisterType((*PtpGlConfigErrorsInfo)(nil), "cisco_ios_xr_ptp_oper.ptp.global_configuration_error.ptp_gl_config_errors_info")
}

func init() { proto.RegisterFile("ptp_gl_config_errors_info.proto", fileDescriptor_d6e8c5af53e59df1) }

var fileDescriptor_d6e8c5af53e59df1 = []byte{
	// 577 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x54, 0x5d, 0x6f, 0xd3, 0x3c,
	0x14, 0x56, 0xde, 0x77, 0x1b, 0xab, 0xd7, 0x09, 0x30, 0x5d, 0xf1, 0xa0, 0x40, 0x54, 0x6e, 0x2a,
	0x84, 0x2a, 0xe8, 0xca, 0x36, 0x40, 0x08, 0x4d, 0xd5, 0x76, 0xc3, 0xb4, 0x4d, 0x1d, 0x9a, 0xc4,
	0x95, 0xe5, 0x1a, 0xa7, 0x8b, 0x70, 0xe3, 0x60, 0x3b, 0x15, 0xb9, 0xe4, 0x2f, 0x71, 0xcb, 0x9f,
	0x43, 0x3e, 0x71, 0x58, 0x3f, 0x52, 0x09, 0xb8, 0xcc, 0x79, 0x3e, 0x7c, 0x7c, 0x1e, 0xe7, 0xa0,
	0x27, 0xa9, 0x4d, 0xe9, 0x58, 0x52, 0xae, 0x92, 0x28, 0x1e, 0x53, 0xa1, 0xb5, 0xd2, 0x86, 0xc6,
	0x49, 0xa4, 0xba, 0xa9, 0x56, 0x56, 0xe1, 0x3e, 0x8f, 0x0d, 0x57, 0x34, 0x56, 0x86, 0x7e, 0xd3,
	0xd4, 0xb1, 0x55, 0x2a, 0x74, 0x37, 0xb5, 0x69, 0x77, 0x2c, 0xd5, 0x88, 0x95, 0xd2, 0x4c, 0x33,
	0x1b, 0xab, 0xa4, 0x70, 0x68, 0x87, 0xe8, 0xf1, 0x4a, 0x63, 0xfa, 0xe1, 0xf8, 0xd3, 0x65, 0xfb,
	0xc7, 0x3a, 0x22, 0x8e, 0x32, 0x62, 0xe3, 0x25, 0x1a, 0x6e, 0xa2, 0x8d, 0xcf, 0x6a, 0xc2, 0xe2,
	0x84, 0x04, 0x61, 0xd0, 0xd9, 0x1c, 0xfa, 0x2f, 0x7c, 0x88, 0x48, 0xaa, 0x55, 0x14, 0x4b, 0x41,
	0x53, 0x1d, 0x2b, 0x1d, 0xdb, 0xfc, 0xa5, 0x97, 0x92, 0xff, 0x80, 0xd9, 0xf4, 0xf8, 0x45, 0x09,
	0x0f, 0x00, 0xc5, 0xfb, 0xe8, 0xfe, 0xa2, 0xb2, 0x47, 0xa7, 0x4c, 0x66, 0x82, 0xfc, 0x0f, 0xc2,
	0x9d, 0x05, 0x61, 0xef, 0xca, 0x81, 0xf8, 0x19, 0xba, 0x9b, 0x59, 0x4e, 0x55, 0x14, 0x19, 0x61,
	0x29, 0xbf, 0x66, 0xc9, 0x58, 0x90, 0x35, 0x50, 0xdc, 0xce, 0x2c, 0x3f, 0x87, 0xfa, 0x00, 0xca,
	0xd0, 0xdd, 0x75, 0x6e, 0x62, 0xce, 0x24, 0x95, 0x2c, 0x17, 0x9a, 0x46, 0x5a, 0x7c, 0xcd, 0x44,
	0xc2, 0x73, 0xb2, 0xee, 0xbb, 0xf3, 0xf8, 0xa9, 0x83, 0x4f, 0x4a, 0x14, 0xbf, 0x40, 0x8d, 0xb2,
	0xbb, 0x69, 0xac, 0x6d, 0xc6, 0x24, 0x4d, 0x95, 0xb6, 0x64, 0x03, 0x54, 0xd8, 0x63, 0x57, 0x05,
	0x74, 0xa1, 0xb4, 0xc5, 0x47, 0xe8, 0xd1, 0x2c, 0x73, 0x79, 0x1c, 0xb7, 0x40, 0xfa, 0x60, 0x7a,
	0xa3, 0x59, 0x1c, 0xc9, 0x7b, 0xd4, 0xaa, 0xb4, 0x28, 0xe7, 0xb2, 0x09, 0x0e, 0xbb, 0x15, 0x0e,
	0x7e, 0x36, 0x27, 0x28, 0x5c, 0x30, 0x28, 0xae, 0xc0, 0xa5, 0xe2, 0x5f, 0x28, 0x97, 0xcc, 0x18,
	0x52, 0x03, 0x93, 0xd6, 0x9c, 0x09, 0xb0, 0x06, 0x8e, 0x34, 0x70, 0x1c, 0xfc, 0x0e, 0x3d, 0x9c,
	0xf3, 0x29, 0xf4, 0x8c, 0xf3, 0x4c, 0x33, 0x9e, 0x13, 0x04, 0x16, 0x64, 0xc6, 0x02, 0xb4, 0x47,
	0x1e, 0x77, 0x11, 0xcd, 0xc9, 0x95, 0x91, 0x53, 0xb2, 0x55, 0x44, 0x34, 0x23, 0x3a, 0x37, 0x72,
	0xba, 0x74, 0x94, 0x54, 0x2e, 0xac, 0xf2, 0xe6, 0xa4, 0xbe, 0x74, 0xd4, 0xa9, 0x23, 0x94, 0xf7,
	0x6e, 0xff, 0x5c, 0x43, 0xbb, 0x2b, 0xdf, 0x35, 0x7e, 0x8a, 0xb6, 0x8b, 0xd6, 0xfd, 0x20, 0x48,
	0x2f, 0x0c, 0x3a, 0xb5, 0x61, 0x1d, 0x8a, 0xfe, 0xda, 0xae, 0xdb, 0x39, 0x12, 0x35, 0xc2, 0x92,
	0xbd, 0xa2, 0xdb, 0x59, 0xe2, 0xa5, 0xb0, 0xf8, 0x39, 0xc2, 0x56, 0x48, 0xc1, 0xd5, 0xc4, 0xcf,
	0xc4, 0xe6, 0xa9, 0x20, 0x7d, 0x70, 0xbd, 0xe3, 0x11, 0x98, 0xc5, 0xc7, 0x3c, 0x15, 0xee, 0xf8,
	0xe2, 0x37, 0xa1, 0x49, 0x36, 0x19, 0x09, 0x4d, 0x5e, 0x85, 0x41, 0x67, 0x7b, 0x58, 0x2f, 0x8a,
	0x67, 0x50, 0xc3, 0x2d, 0x54, 0xfb, 0x9d, 0x33, 0xd9, 0x07, 0xc2, 0x4d, 0x01, 0xf7, 0x51, 0xb3,
	0xfa, 0x49, 0x90, 0x03, 0xa0, 0x36, 0xaa, 0x1e, 0x03, 0x3e, 0x40, 0xa4, 0x22, 0xbf, 0x22, 0xff,
	0x43, 0xd0, 0xed, 0x2c, 0x86, 0xf7, 0x47, 0xc1, 0xbf, 0x06, 0xed, 0x5f, 0x06, 0xff, 0x06, 0x44,
	0x4b, 0xc1, 0x7f, 0x0f, 0x50, 0xa3, 0x62, 0x51, 0x19, 0xf2, 0x36, 0x0c, 0x3a, 0x5b, 0xbd, 0xb3,
	0xee, 0xbf, 0xac, 0xb9, 0xee, 0xaa, 0x05, 0x36, 0xbc, 0x37, 0xc7, 0x3e, 0x86, 0xe2, 0x68, 0x03,
	0x36, 0xea, 0xde, 0xaf, 0x00, 0x00, 0x00, 0xff, 0xff, 0x25, 0x19, 0x68, 0xed, 0x74, 0x05, 0x00,
	0x00,
}
