/*
Copyright 2019 Cisco Systems

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: pim_bidir_df_state_bag.proto

package cisco_ios_xr_ipv4_pim_oper_pim_active_vrfs_vrf_bidir_df_states_bidir_df_state

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type PimBidirDfStateBag_KEYS struct {
	VrfName              string   `protobuf:"bytes,1,opt,name=vrf_name,json=vrfName,proto3" json:"vrf_name,omitempty"`
	RpAddress            string   `protobuf:"bytes,2,opt,name=rp_address,json=rpAddress,proto3" json:"rp_address,omitempty"`
	InterfaceName        string   `protobuf:"bytes,3,opt,name=interface_name,json=interfaceName,proto3" json:"interface_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PimBidirDfStateBag_KEYS) Reset()         { *m = PimBidirDfStateBag_KEYS{} }
func (m *PimBidirDfStateBag_KEYS) String() string { return proto.CompactTextString(m) }
func (*PimBidirDfStateBag_KEYS) ProtoMessage()    {}
func (*PimBidirDfStateBag_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_2bd765c293947f0a, []int{0}
}

func (m *PimBidirDfStateBag_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PimBidirDfStateBag_KEYS.Unmarshal(m, b)
}
func (m *PimBidirDfStateBag_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PimBidirDfStateBag_KEYS.Marshal(b, m, deterministic)
}
func (m *PimBidirDfStateBag_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PimBidirDfStateBag_KEYS.Merge(m, src)
}
func (m *PimBidirDfStateBag_KEYS) XXX_Size() int {
	return xxx_messageInfo_PimBidirDfStateBag_KEYS.Size(m)
}
func (m *PimBidirDfStateBag_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_PimBidirDfStateBag_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_PimBidirDfStateBag_KEYS proto.InternalMessageInfo

func (m *PimBidirDfStateBag_KEYS) GetVrfName() string {
	if m != nil {
		return m.VrfName
	}
	return ""
}

func (m *PimBidirDfStateBag_KEYS) GetRpAddress() string {
	if m != nil {
		return m.RpAddress
	}
	return ""
}

func (m *PimBidirDfStateBag_KEYS) GetInterfaceName() string {
	if m != nil {
		return m.InterfaceName
	}
	return ""
}

type PimAddrtype struct {
	AfName               string   `protobuf:"bytes,1,opt,name=af_name,json=afName,proto3" json:"af_name,omitempty"`
	Ipv4Address          string   `protobuf:"bytes,2,opt,name=ipv4_address,json=ipv4Address,proto3" json:"ipv4_address,omitempty"`
	Ipv6Address          string   `protobuf:"bytes,3,opt,name=ipv6_address,json=ipv6Address,proto3" json:"ipv6_address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PimAddrtype) Reset()         { *m = PimAddrtype{} }
func (m *PimAddrtype) String() string { return proto.CompactTextString(m) }
func (*PimAddrtype) ProtoMessage()    {}
func (*PimAddrtype) Descriptor() ([]byte, []int) {
	return fileDescriptor_2bd765c293947f0a, []int{1}
}

func (m *PimAddrtype) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PimAddrtype.Unmarshal(m, b)
}
func (m *PimAddrtype) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PimAddrtype.Marshal(b, m, deterministic)
}
func (m *PimAddrtype) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PimAddrtype.Merge(m, src)
}
func (m *PimAddrtype) XXX_Size() int {
	return xxx_messageInfo_PimAddrtype.Size(m)
}
func (m *PimAddrtype) XXX_DiscardUnknown() {
	xxx_messageInfo_PimAddrtype.DiscardUnknown(m)
}

var xxx_messageInfo_PimAddrtype proto.InternalMessageInfo

func (m *PimAddrtype) GetAfName() string {
	if m != nil {
		return m.AfName
	}
	return ""
}

func (m *PimAddrtype) GetIpv4Address() string {
	if m != nil {
		return m.Ipv4Address
	}
	return ""
}

func (m *PimAddrtype) GetIpv6Address() string {
	if m != nil {
		return m.Ipv6Address
	}
	return ""
}

type PimBidirDfStateBag struct {
	RpAddressXr          *PimAddrtype `protobuf:"bytes,50,opt,name=rp_address_xr,json=rpAddressXr,proto3" json:"rp_address_xr,omitempty"`
	PimInterfaceName     string       `protobuf:"bytes,51,opt,name=pim_interface_name,json=pimInterfaceName,proto3" json:"pim_interface_name,omitempty"`
	ElectionState        string       `protobuf:"bytes,52,opt,name=election_state,json=electionState,proto3" json:"election_state,omitempty"`
	TimeSeconds          uint64       `protobuf:"varint,53,opt,name=time_seconds,json=timeSeconds,proto3" json:"time_seconds,omitempty"`
	TimeNanoSeconds      uint64       `protobuf:"varint,54,opt,name=time_nano_seconds,json=timeNanoSeconds,proto3" json:"time_nano_seconds,omitempty"`
	OurMetric            uint32       `protobuf:"varint,55,opt,name=our_metric,json=ourMetric,proto3" json:"our_metric,omitempty"`
	OurMetricPreference  uint32       `protobuf:"varint,56,opt,name=our_metric_preference,json=ourMetricPreference,proto3" json:"our_metric_preference,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *PimBidirDfStateBag) Reset()         { *m = PimBidirDfStateBag{} }
func (m *PimBidirDfStateBag) String() string { return proto.CompactTextString(m) }
func (*PimBidirDfStateBag) ProtoMessage()    {}
func (*PimBidirDfStateBag) Descriptor() ([]byte, []int) {
	return fileDescriptor_2bd765c293947f0a, []int{2}
}

func (m *PimBidirDfStateBag) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PimBidirDfStateBag.Unmarshal(m, b)
}
func (m *PimBidirDfStateBag) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PimBidirDfStateBag.Marshal(b, m, deterministic)
}
func (m *PimBidirDfStateBag) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PimBidirDfStateBag.Merge(m, src)
}
func (m *PimBidirDfStateBag) XXX_Size() int {
	return xxx_messageInfo_PimBidirDfStateBag.Size(m)
}
func (m *PimBidirDfStateBag) XXX_DiscardUnknown() {
	xxx_messageInfo_PimBidirDfStateBag.DiscardUnknown(m)
}

var xxx_messageInfo_PimBidirDfStateBag proto.InternalMessageInfo

func (m *PimBidirDfStateBag) GetRpAddressXr() *PimAddrtype {
	if m != nil {
		return m.RpAddressXr
	}
	return nil
}

func (m *PimBidirDfStateBag) GetPimInterfaceName() string {
	if m != nil {
		return m.PimInterfaceName
	}
	return ""
}

func (m *PimBidirDfStateBag) GetElectionState() string {
	if m != nil {
		return m.ElectionState
	}
	return ""
}

func (m *PimBidirDfStateBag) GetTimeSeconds() uint64 {
	if m != nil {
		return m.TimeSeconds
	}
	return 0
}

func (m *PimBidirDfStateBag) GetTimeNanoSeconds() uint64 {
	if m != nil {
		return m.TimeNanoSeconds
	}
	return 0
}

func (m *PimBidirDfStateBag) GetOurMetric() uint32 {
	if m != nil {
		return m.OurMetric
	}
	return 0
}

func (m *PimBidirDfStateBag) GetOurMetricPreference() uint32 {
	if m != nil {
		return m.OurMetricPreference
	}
	return 0
}

func init() {
	proto.RegisterType((*PimBidirDfStateBag_KEYS)(nil), "cisco_ios_xr_ipv4_pim_oper.pim.active.vrfs.vrf.bidir_df_states.bidir_df_state.pim_bidir_df_state_bag_KEYS")
	proto.RegisterType((*PimAddrtype)(nil), "cisco_ios_xr_ipv4_pim_oper.pim.active.vrfs.vrf.bidir_df_states.bidir_df_state.pim_addrtype")
	proto.RegisterType((*PimBidirDfStateBag)(nil), "cisco_ios_xr_ipv4_pim_oper.pim.active.vrfs.vrf.bidir_df_states.bidir_df_state.pim_bidir_df_state_bag")
}

func init() { proto.RegisterFile("pim_bidir_df_state_bag.proto", fileDescriptor_2bd765c293947f0a) }

var fileDescriptor_2bd765c293947f0a = []byte{
	// 394 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x92, 0x4f, 0x8b, 0xd4, 0x40,
	0x14, 0xc4, 0x89, 0x23, 0xbb, 0xce, 0xcb, 0x8e, 0x7f, 0x5a, 0xd4, 0x88, 0x2e, 0xc4, 0x01, 0x21,
	0x88, 0xe4, 0x30, 0xbb, 0x8e, 0x5e, 0x3d, 0x78, 0x10, 0xd9, 0x45, 0x32, 0x17, 0xc5, 0x43, 0xd3,
	0xd3, 0x79, 0x91, 0x06, 0xfb, 0x0f, 0xaf, 0x7b, 0xc3, 0x7a, 0xd1, 0xaf, 0xe0, 0x47, 0x96, 0xee,
	0x38, 0xd9, 0x99, 0x61, 0x8e, 0x5e, 0x02, 0xa9, 0xfa, 0xe5, 0x15, 0x55, 0x04, 0x9e, 0x3b, 0xa5,
	0xf9, 0x5a, 0xb5, 0x8a, 0x78, 0xdb, 0x71, 0x1f, 0x44, 0x40, 0xbe, 0x16, 0xdf, 0x6b, 0x47, 0x36,
	0x58, 0x76, 0x21, 0x95, 0x97, 0x96, 0x2b, 0xeb, 0xf9, 0x35, 0x71, 0xe5, 0xfa, 0x73, 0x1e, 0x79,
	0xeb, 0x90, 0x6a, 0xa7, 0x74, 0x2d, 0x64, 0x50, 0x3d, 0xd6, 0x3d, 0x75, 0x3e, 0x3e, 0xea, 0xdd,
	0x43, 0x7e, 0xef, 0x7d, 0xfe, 0x0b, 0x9e, 0x1d, 0x8e, 0xe3, 0x9f, 0x3e, 0x7c, 0x5d, 0xb1, 0xa7,
	0x70, 0xa7, 0xa7, 0x8e, 0x1b, 0xa1, 0xb1, 0xc8, 0xca, 0xac, 0x9a, 0x36, 0xc7, 0x3d, 0x75, 0x97,
	0x42, 0x23, 0x3b, 0x05, 0x20, 0xc7, 0x45, 0xdb, 0x12, 0x7a, 0x5f, 0xdc, 0x4a, 0xe6, 0x94, 0xdc,
	0xfb, 0x41, 0x60, 0x2f, 0xe1, 0xae, 0x32, 0x01, 0xa9, 0x13, 0x12, 0x87, 0xef, 0x27, 0x09, 0x99,
	0x8d, 0x6a, 0xbc, 0x32, 0xd7, 0x70, 0x12, 0xf3, 0xe3, 0x99, 0xf0, 0xd3, 0x21, 0x7b, 0x02, 0xc7,
	0x62, 0x27, 0xef, 0x48, 0x0c, 0x71, 0x2f, 0xe0, 0x24, 0x95, 0xdd, 0x0d, 0xcc, 0xa3, 0xb6, 0x89,
	0x1c, 0x90, 0xe5, 0x88, 0x4c, 0x46, 0x64, 0xf9, 0x0f, 0x99, 0xff, 0x99, 0xc0, 0xe3, 0xc3, 0x7d,
	0xd9, 0x6f, 0x98, 0xdd, 0xf4, 0xe1, 0xd7, 0x54, 0x2c, 0xca, 0xac, 0xca, 0x17, 0xdf, 0xea, 0xff,
	0x3a, 0x78, 0xbd, 0xdd, 0xb6, 0xc9, 0xc7, 0xbd, 0xbe, 0x10, 0x7b, 0x0d, 0x2c, 0x9a, 0x7b, 0xab,
	0x9d, 0xa5, 0x12, 0xf7, 0x9d, 0xd2, 0x1f, 0xb7, 0x87, 0x8b, 0xfb, 0xe2, 0x0f, 0x94, 0x41, 0x59,
	0x33, 0x5c, 0x2e, 0xce, 0x87, 0x7d, 0x37, 0xea, 0x2a, 0x8a, 0x71, 0x93, 0xa0, 0x34, 0x72, 0x8f,
	0xd2, 0x9a, 0xd6, 0x17, 0x6f, 0xca, 0xac, 0xba, 0xdd, 0xe4, 0x51, 0x5b, 0x0d, 0x12, 0x7b, 0x05,
	0x0f, 0x12, 0x62, 0x84, 0xb1, 0x23, 0xb7, 0x4c, 0xdc, 0xbd, 0x68, 0x5c, 0x0a, 0x63, 0x37, 0xec,
	0x29, 0x80, 0xbd, 0x22, 0xae, 0x31, 0x90, 0x92, 0xc5, 0xdb, 0x32, 0xab, 0x66, 0xcd, 0xd4, 0x5e,
	0xd1, 0x45, 0x12, 0xd8, 0x02, 0x1e, 0xdd, 0xd8, 0xdc, 0x11, 0x76, 0x48, 0x68, 0x24, 0x16, 0xef,
	0x12, 0xf9, 0x70, 0x24, 0x3f, 0x8f, 0xd6, 0xfa, 0x28, 0xfd, 0xd7, 0x67, 0x7f, 0x03, 0x00, 0x00,
	0xff, 0xff, 0x73, 0x50, 0x83, 0x90, 0xf7, 0x02, 0x00, 0x00,
}
