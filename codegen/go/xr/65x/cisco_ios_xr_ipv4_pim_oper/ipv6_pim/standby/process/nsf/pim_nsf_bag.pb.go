/*
Copyright 2019 Cisco Systems

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: pim_nsf_bag.proto

package cisco_ios_xr_ipv4_pim_oper_ipv6_pim_standby_process_nsf

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type PimNsfBag_KEYS struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PimNsfBag_KEYS) Reset()         { *m = PimNsfBag_KEYS{} }
func (m *PimNsfBag_KEYS) String() string { return proto.CompactTextString(m) }
func (*PimNsfBag_KEYS) ProtoMessage()    {}
func (*PimNsfBag_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_786656eb2778ccff, []int{0}
}

func (m *PimNsfBag_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PimNsfBag_KEYS.Unmarshal(m, b)
}
func (m *PimNsfBag_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PimNsfBag_KEYS.Marshal(b, m, deterministic)
}
func (m *PimNsfBag_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PimNsfBag_KEYS.Merge(m, src)
}
func (m *PimNsfBag_KEYS) XXX_Size() int {
	return xxx_messageInfo_PimNsfBag_KEYS.Size(m)
}
func (m *PimNsfBag_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_PimNsfBag_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_PimNsfBag_KEYS proto.InternalMessageInfo

type PimNsfBag struct {
	ConfiguredState      bool     `protobuf:"varint,50,opt,name=configured_state,json=configuredState,proto3" json:"configured_state,omitempty"`
	NsfState             bool     `protobuf:"varint,51,opt,name=nsf_state,json=nsfState,proto3" json:"nsf_state,omitempty"`
	NsfTimeout           uint32   `protobuf:"varint,52,opt,name=nsf_timeout,json=nsfTimeout,proto3" json:"nsf_timeout,omitempty"`
	NsfTimeLeft          uint32   `protobuf:"varint,53,opt,name=nsf_time_left,json=nsfTimeLeft,proto3" json:"nsf_time_left,omitempty"`
	WaitingTimer         bool     `protobuf:"varint,54,opt,name=waiting_timer,json=waitingTimer,proto3" json:"waiting_timer,omitempty"`
	WaitingMembership    bool     `protobuf:"varint,55,opt,name=waiting_membership,json=waitingMembership,proto3" json:"waiting_membership,omitempty"`
	RespawnCount         uint32   `protobuf:"varint,56,opt,name=respawn_count,json=respawnCount,proto3" json:"respawn_count,omitempty"`
	LastNsfOn            string   `protobuf:"bytes,57,opt,name=last_nsf_on,json=lastNsfOn,proto3" json:"last_nsf_on,omitempty"`
	LastNsfOff           string   `protobuf:"bytes,58,opt,name=last_nsf_off,json=lastNsfOff,proto3" json:"last_nsf_off,omitempty"`
	LastNsfOnSec         int32    `protobuf:"zigzag32,59,opt,name=last_nsf_on_sec,json=lastNsfOnSec,proto3" json:"last_nsf_on_sec,omitempty"`
	LastNsfOffSec        int32    `protobuf:"zigzag32,60,opt,name=last_nsf_off_sec,json=lastNsfOffSec,proto3" json:"last_nsf_off_sec,omitempty"`
	LastIcdNotifRecv     string   `protobuf:"bytes,61,opt,name=last_icd_notif_recv,json=lastIcdNotifRecv,proto3" json:"last_icd_notif_recv,omitempty"`
	LastIcdNotifRecvSec  int32    `protobuf:"zigzag32,62,opt,name=last_icd_notif_recv_sec,json=lastIcdNotifRecvSec,proto3" json:"last_icd_notif_recv_sec,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PimNsfBag) Reset()         { *m = PimNsfBag{} }
func (m *PimNsfBag) String() string { return proto.CompactTextString(m) }
func (*PimNsfBag) ProtoMessage()    {}
func (*PimNsfBag) Descriptor() ([]byte, []int) {
	return fileDescriptor_786656eb2778ccff, []int{1}
}

func (m *PimNsfBag) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PimNsfBag.Unmarshal(m, b)
}
func (m *PimNsfBag) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PimNsfBag.Marshal(b, m, deterministic)
}
func (m *PimNsfBag) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PimNsfBag.Merge(m, src)
}
func (m *PimNsfBag) XXX_Size() int {
	return xxx_messageInfo_PimNsfBag.Size(m)
}
func (m *PimNsfBag) XXX_DiscardUnknown() {
	xxx_messageInfo_PimNsfBag.DiscardUnknown(m)
}

var xxx_messageInfo_PimNsfBag proto.InternalMessageInfo

func (m *PimNsfBag) GetConfiguredState() bool {
	if m != nil {
		return m.ConfiguredState
	}
	return false
}

func (m *PimNsfBag) GetNsfState() bool {
	if m != nil {
		return m.NsfState
	}
	return false
}

func (m *PimNsfBag) GetNsfTimeout() uint32 {
	if m != nil {
		return m.NsfTimeout
	}
	return 0
}

func (m *PimNsfBag) GetNsfTimeLeft() uint32 {
	if m != nil {
		return m.NsfTimeLeft
	}
	return 0
}

func (m *PimNsfBag) GetWaitingTimer() bool {
	if m != nil {
		return m.WaitingTimer
	}
	return false
}

func (m *PimNsfBag) GetWaitingMembership() bool {
	if m != nil {
		return m.WaitingMembership
	}
	return false
}

func (m *PimNsfBag) GetRespawnCount() uint32 {
	if m != nil {
		return m.RespawnCount
	}
	return 0
}

func (m *PimNsfBag) GetLastNsfOn() string {
	if m != nil {
		return m.LastNsfOn
	}
	return ""
}

func (m *PimNsfBag) GetLastNsfOff() string {
	if m != nil {
		return m.LastNsfOff
	}
	return ""
}

func (m *PimNsfBag) GetLastNsfOnSec() int32 {
	if m != nil {
		return m.LastNsfOnSec
	}
	return 0
}

func (m *PimNsfBag) GetLastNsfOffSec() int32 {
	if m != nil {
		return m.LastNsfOffSec
	}
	return 0
}

func (m *PimNsfBag) GetLastIcdNotifRecv() string {
	if m != nil {
		return m.LastIcdNotifRecv
	}
	return ""
}

func (m *PimNsfBag) GetLastIcdNotifRecvSec() int32 {
	if m != nil {
		return m.LastIcdNotifRecvSec
	}
	return 0
}

func init() {
	proto.RegisterType((*PimNsfBag_KEYS)(nil), "cisco_ios_xr_ipv4_pim_oper.ipv6_pim.standby.process.nsf.pim_nsf_bag_KEYS")
	proto.RegisterType((*PimNsfBag)(nil), "cisco_ios_xr_ipv4_pim_oper.ipv6_pim.standby.process.nsf.pim_nsf_bag")
}

func init() { proto.RegisterFile("pim_nsf_bag.proto", fileDescriptor_786656eb2778ccff) }

var fileDescriptor_786656eb2778ccff = []byte{
	// 386 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x92, 0x4f, 0x8b, 0xd4, 0x30,
	0x18, 0xc6, 0x29, 0x88, 0xec, 0xbc, 0x6d, 0xd9, 0x99, 0xec, 0xc1, 0x80, 0xa0, 0x65, 0x44, 0xac,
	0x87, 0xed, 0xc1, 0x1d, 0x77, 0xfd, 0x7f, 0x11, 0x0f, 0xa2, 0xae, 0xd0, 0x7a, 0xf1, 0x14, 0xda,
	0x34, 0x19, 0x03, 0xd3, 0xa4, 0x24, 0x99, 0x8e, 0x7e, 0x05, 0x3f, 0xb5, 0xe4, 0x9d, 0xce, 0x4c,
	0x91, 0x3d, 0xf6, 0x79, 0x7e, 0xef, 0xef, 0x81, 0x12, 0x58, 0xf4, 0xaa, 0x63, 0xda, 0x49, 0xd6,
	0xd4, 0xeb, 0xa2, 0xb7, 0xc6, 0x1b, 0x72, 0xc3, 0x95, 0xe3, 0x86, 0x29, 0xe3, 0xd8, 0x6f, 0xcb,
	0x54, 0x3f, 0xac, 0x58, 0x80, 0x4c, 0x2f, 0x6c, 0xa1, 0xfa, 0xe1, 0x3a, 0x7c, 0x15, 0xce, 0xd7,
	0xba, 0x6d, 0xfe, 0x84, 0x13, 0x2e, 0x9c, 0x2b, 0xb4, 0x93, 0x4b, 0x02, 0xf3, 0x89, 0x8d, 0x7d,
	0xf9, 0xf4, 0xb3, 0x5a, 0xfe, 0xbd, 0x07, 0xf1, 0x24, 0x24, 0xcf, 0x61, 0xce, 0x8d, 0x96, 0x6a,
	0xbd, 0xb5, 0xa2, 0x65, 0xce, 0xd7, 0x5e, 0xd0, 0x17, 0x59, 0x94, 0x9f, 0x95, 0xe7, 0xa7, 0xbc,
	0x0a, 0x31, 0x79, 0x08, 0xb3, 0x70, 0xb5, 0x67, 0xae, 0x90, 0x39, 0xd3, 0x4e, 0xee, 0xcb, 0xc7,
	0x10, 0x87, 0xd2, 0xab, 0x4e, 0x98, 0xad, 0xa7, 0xab, 0x2c, 0xca, 0xd3, 0x12, 0xb4, 0x93, 0x3f,
	0xf6, 0x09, 0x59, 0x42, 0x7a, 0x00, 0xd8, 0x46, 0x48, 0x4f, 0x5f, 0x22, 0x12, 0x8f, 0xc8, 0x57,
	0x21, 0x3d, 0x79, 0x02, 0xe9, 0xae, 0x56, 0x5e, 0xe9, 0x35, 0x72, 0x96, 0x5e, 0xe3, 0x4a, 0x32,
	0x86, 0x81, 0xb3, 0xe4, 0x12, 0xc8, 0x01, 0xea, 0x44, 0xd7, 0x08, 0xeb, 0x7e, 0xa9, 0x9e, 0xde,
	0x20, 0xb9, 0x18, 0x9b, 0x6f, 0xc7, 0x22, 0x38, 0xad, 0x70, 0x7d, 0xbd, 0xd3, 0x8c, 0x9b, 0xad,
	0xf6, 0xf4, 0x15, 0xee, 0x26, 0x63, 0xf8, 0x31, 0x64, 0xe4, 0x11, 0xc4, 0x9b, 0xda, 0x79, 0xfc,
	0x2b, 0x46, 0xd3, 0xd7, 0x59, 0x94, 0xcf, 0xca, 0x59, 0x88, 0x6e, 0x9d, 0xfc, 0xae, 0x49, 0x06,
	0xc9, 0xa9, 0x97, 0x92, 0xbe, 0x41, 0x00, 0x0e, 0x80, 0x94, 0xe4, 0x29, 0x9c, 0x4f, 0x0c, 0xcc,
	0x09, 0x4e, 0xdf, 0x66, 0x51, 0xbe, 0x28, 0x93, 0xa3, 0xa5, 0x12, 0x9c, 0x3c, 0x83, 0xf9, 0x54,
	0x84, 0xdc, 0x3b, 0xe4, 0xd2, 0x93, 0x2c, 0x80, 0x97, 0x70, 0x81, 0xa0, 0xe2, 0x2d, 0xd3, 0xc6,
	0x2b, 0xc9, 0xac, 0xe0, 0x03, 0x7d, 0x8f, 0xc3, 0xe8, 0xf8, 0xcc, 0xdb, 0xdb, 0x50, 0x94, 0x82,
	0x0f, 0x64, 0x05, 0x0f, 0xee, 0xc0, 0x51, 0xff, 0x01, 0xf5, 0x17, 0xff, 0x9f, 0x54, 0x82, 0x37,
	0xf7, 0xf1, 0x81, 0x5d, 0xfd, 0x0b, 0x00, 0x00, 0xff, 0xff, 0x5c, 0x6d, 0x3d, 0x56, 0x75, 0x02,
	0x00, 0x00,
}
