/*
Copyright 2019 Cisco Systems

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: ac_rule_info_bag.proto

package cisco_ios_xr_infra_correlator_oper_correlator_rules_rule

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type AcRuleInfoBag_KEYS struct {
	RuleName             string   `protobuf:"bytes,1,opt,name=rule_name,json=ruleName,proto3" json:"rule_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AcRuleInfoBag_KEYS) Reset()         { *m = AcRuleInfoBag_KEYS{} }
func (m *AcRuleInfoBag_KEYS) String() string { return proto.CompactTextString(m) }
func (*AcRuleInfoBag_KEYS) ProtoMessage()    {}
func (*AcRuleInfoBag_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_58795209bbeed8b2, []int{0}
}

func (m *AcRuleInfoBag_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AcRuleInfoBag_KEYS.Unmarshal(m, b)
}
func (m *AcRuleInfoBag_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AcRuleInfoBag_KEYS.Marshal(b, m, deterministic)
}
func (m *AcRuleInfoBag_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AcRuleInfoBag_KEYS.Merge(m, src)
}
func (m *AcRuleInfoBag_KEYS) XXX_Size() int {
	return xxx_messageInfo_AcRuleInfoBag_KEYS.Size(m)
}
func (m *AcRuleInfoBag_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_AcRuleInfoBag_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_AcRuleInfoBag_KEYS proto.InternalMessageInfo

func (m *AcRuleInfoBag_KEYS) GetRuleName() string {
	if m != nil {
		return m.RuleName
	}
	return ""
}

type AcMsgCode struct {
	Category             string   `protobuf:"bytes,1,opt,name=category,proto3" json:"category,omitempty"`
	Group                string   `protobuf:"bytes,2,opt,name=group,proto3" json:"group,omitempty"`
	Code                 string   `protobuf:"bytes,3,opt,name=code,proto3" json:"code,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AcMsgCode) Reset()         { *m = AcMsgCode{} }
func (m *AcMsgCode) String() string { return proto.CompactTextString(m) }
func (*AcMsgCode) ProtoMessage()    {}
func (*AcMsgCode) Descriptor() ([]byte, []int) {
	return fileDescriptor_58795209bbeed8b2, []int{1}
}

func (m *AcMsgCode) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AcMsgCode.Unmarshal(m, b)
}
func (m *AcMsgCode) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AcMsgCode.Marshal(b, m, deterministic)
}
func (m *AcMsgCode) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AcMsgCode.Merge(m, src)
}
func (m *AcMsgCode) XXX_Size() int {
	return xxx_messageInfo_AcMsgCode.Size(m)
}
func (m *AcMsgCode) XXX_DiscardUnknown() {
	xxx_messageInfo_AcMsgCode.DiscardUnknown(m)
}

var xxx_messageInfo_AcMsgCode proto.InternalMessageInfo

func (m *AcMsgCode) GetCategory() string {
	if m != nil {
		return m.Category
	}
	return ""
}

func (m *AcMsgCode) GetGroup() string {
	if m != nil {
		return m.Group
	}
	return ""
}

func (m *AcMsgCode) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

type AcRuleInfoBag struct {
	RuleNameXr           string       `protobuf:"bytes,50,opt,name=rule_name_xr,json=ruleNameXr,proto3" json:"rule_name_xr,omitempty"`
	Timeout              uint32       `protobuf:"varint,51,opt,name=timeout,proto3" json:"timeout,omitempty"`
	RuleState            string       `protobuf:"bytes,52,opt,name=rule_state,json=ruleState,proto3" json:"rule_state,omitempty"`
	Codes                []*AcMsgCode `protobuf:"bytes,53,rep,name=codes,proto3" json:"codes,omitempty"`
	ApplyLocation        []string     `protobuf:"bytes,54,rep,name=apply_location,json=applyLocation,proto3" json:"apply_location,omitempty"`
	ApplyContext         []string     `protobuf:"bytes,55,rep,name=apply_context,json=applyContext,proto3" json:"apply_context,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *AcRuleInfoBag) Reset()         { *m = AcRuleInfoBag{} }
func (m *AcRuleInfoBag) String() string { return proto.CompactTextString(m) }
func (*AcRuleInfoBag) ProtoMessage()    {}
func (*AcRuleInfoBag) Descriptor() ([]byte, []int) {
	return fileDescriptor_58795209bbeed8b2, []int{2}
}

func (m *AcRuleInfoBag) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AcRuleInfoBag.Unmarshal(m, b)
}
func (m *AcRuleInfoBag) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AcRuleInfoBag.Marshal(b, m, deterministic)
}
func (m *AcRuleInfoBag) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AcRuleInfoBag.Merge(m, src)
}
func (m *AcRuleInfoBag) XXX_Size() int {
	return xxx_messageInfo_AcRuleInfoBag.Size(m)
}
func (m *AcRuleInfoBag) XXX_DiscardUnknown() {
	xxx_messageInfo_AcRuleInfoBag.DiscardUnknown(m)
}

var xxx_messageInfo_AcRuleInfoBag proto.InternalMessageInfo

func (m *AcRuleInfoBag) GetRuleNameXr() string {
	if m != nil {
		return m.RuleNameXr
	}
	return ""
}

func (m *AcRuleInfoBag) GetTimeout() uint32 {
	if m != nil {
		return m.Timeout
	}
	return 0
}

func (m *AcRuleInfoBag) GetRuleState() string {
	if m != nil {
		return m.RuleState
	}
	return ""
}

func (m *AcRuleInfoBag) GetCodes() []*AcMsgCode {
	if m != nil {
		return m.Codes
	}
	return nil
}

func (m *AcRuleInfoBag) GetApplyLocation() []string {
	if m != nil {
		return m.ApplyLocation
	}
	return nil
}

func (m *AcRuleInfoBag) GetApplyContext() []string {
	if m != nil {
		return m.ApplyContext
	}
	return nil
}

func init() {
	proto.RegisterType((*AcRuleInfoBag_KEYS)(nil), "cisco_ios_xr_infra_correlator_oper.correlator.rules.rule.ac_rule_info_bag_KEYS")
	proto.RegisterType((*AcMsgCode)(nil), "cisco_ios_xr_infra_correlator_oper.correlator.rules.rule.ac_msg_code")
	proto.RegisterType((*AcRuleInfoBag)(nil), "cisco_ios_xr_infra_correlator_oper.correlator.rules.rule.ac_rule_info_bag")
}

func init() { proto.RegisterFile("ac_rule_info_bag.proto", fileDescriptor_58795209bbeed8b2) }

var fileDescriptor_58795209bbeed8b2 = []byte{
	// 311 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x91, 0x4f, 0x4b, 0xf3, 0x40,
	0x10, 0xc6, 0x69, 0xfb, 0xf6, 0xb5, 0x9d, 0xb6, 0x22, 0x8b, 0xca, 0xa2, 0x08, 0xa1, 0x22, 0xe4,
	0x94, 0x43, 0x5b, 0xff, 0xdc, 0xa5, 0x27, 0xc5, 0x43, 0x7a, 0x51, 0x3c, 0x0c, 0xdb, 0x75, 0x0d,
	0x81, 0x24, 0x13, 0x26, 0x5b, 0x68, 0xbf, 0x88, 0x9f, 0x57, 0x32, 0x31, 0x2a, 0x3d, 0x7a, 0x09,
	0x79, 0x7e, 0x33, 0xf3, 0xec, 0xb3, 0xb3, 0x70, 0x6a, 0x2c, 0xf2, 0x26, 0x73, 0x98, 0x16, 0xef,
	0x84, 0x6b, 0x93, 0x44, 0x25, 0x93, 0x27, 0x75, 0x67, 0xd3, 0xca, 0x12, 0xa6, 0x54, 0xe1, 0x96,
	0xeb, 0x22, 0x1b, 0xb4, 0xc4, 0xec, 0x32, 0xe3, 0x89, 0x91, 0x4a, 0xc7, 0xd1, 0x8f, 0x8e, 0x6a,
	0x8b, 0x4a, 0xbe, 0xd3, 0x05, 0x9c, 0xec, 0x7b, 0xe2, 0xc3, 0xf2, 0x65, 0xa5, 0xce, 0x61, 0x28,
	0xb4, 0x30, 0xb9, 0xd3, 0x9d, 0xa0, 0x13, 0x0e, 0xe3, 0x41, 0x0d, 0x9e, 0x4c, 0xee, 0xa6, 0x2b,
	0x18, 0x19, 0x8b, 0x79, 0x95, 0xa0, 0xa5, 0x37, 0xa7, 0xce, 0x60, 0x60, 0x8d, 0x77, 0x09, 0xf1,
	0xae, 0x6d, 0x6d, 0xb5, 0x3a, 0x86, 0x7e, 0xc2, 0xb4, 0x29, 0x75, 0x57, 0x0a, 0x8d, 0x50, 0x0a,
	0xfe, 0xd5, 0x93, 0xba, 0x27, 0x50, 0xfe, 0xa7, 0x1f, 0x5d, 0x38, 0xda, 0xcf, 0xa2, 0x02, 0x18,
	0x7f, 0xc7, 0xc0, 0x2d, 0xeb, 0x99, 0x0c, 0x40, 0x9b, 0xe4, 0x99, 0x95, 0x86, 0x03, 0x9f, 0xe6,
	0x8e, 0x36, 0x5e, 0xcf, 0x83, 0x4e, 0x38, 0x89, 0x5b, 0xa9, 0x2e, 0x40, 0xfa, 0xb0, 0xf2, 0xc6,
	0x3b, 0xbd, 0x90, 0x49, 0xb9, 0xd4, 0xaa, 0x06, 0xea, 0x15, 0xfa, 0xf5, 0xb9, 0x95, 0xbe, 0x0e,
	0x7a, 0xe1, 0x68, 0xb6, 0x8c, 0xfe, 0xba, 0xc4, 0xe8, 0xd7, 0x2e, 0xe2, 0xc6, 0x53, 0x5d, 0xc1,
	0xa1, 0x29, 0xcb, 0x6c, 0x87, 0x19, 0x59, 0xe3, 0x53, 0x2a, 0xf4, 0x4d, 0xd0, 0x0b, 0x87, 0xf1,
	0x44, 0xe8, 0xe3, 0x17, 0x54, 0x97, 0xd0, 0x00, 0xb4, 0x54, 0x78, 0xb7, 0xf5, 0xfa, 0x56, 0xba,
	0xc6, 0x02, 0xef, 0x1b, 0xb6, 0xfe, 0x2f, 0x8f, 0x3c, 0xff, 0x0c, 0x00, 0x00, 0xff, 0xff, 0x6a,
	0x50, 0x6e, 0xaf, 0xfe, 0x01, 0x00, 0x00,
}
