/*
Copyright 2019 Cisco Systems

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: bmd_bag_rg_info_mlacp_counters_rg.proto

package cisco_ios_xr_bundlemgr_oper_bundle_information_mlacp_iccp_group_counters_iccp_groups_iccp_group_iccp_group_ancestor_member

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type BmdBagRgInfoMlacpCountersRg_KEYS struct {
	IccpGroup            uint32   `protobuf:"varint,1,opt,name=iccp_group,json=iccpGroup,proto3" json:"iccp_group,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BmdBagRgInfoMlacpCountersRg_KEYS) Reset()         { *m = BmdBagRgInfoMlacpCountersRg_KEYS{} }
func (m *BmdBagRgInfoMlacpCountersRg_KEYS) String() string { return proto.CompactTextString(m) }
func (*BmdBagRgInfoMlacpCountersRg_KEYS) ProtoMessage()    {}
func (*BmdBagRgInfoMlacpCountersRg_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_8f7c2b600c427571, []int{0}
}

func (m *BmdBagRgInfoMlacpCountersRg_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BmdBagRgInfoMlacpCountersRg_KEYS.Unmarshal(m, b)
}
func (m *BmdBagRgInfoMlacpCountersRg_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BmdBagRgInfoMlacpCountersRg_KEYS.Marshal(b, m, deterministic)
}
func (m *BmdBagRgInfoMlacpCountersRg_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BmdBagRgInfoMlacpCountersRg_KEYS.Merge(m, src)
}
func (m *BmdBagRgInfoMlacpCountersRg_KEYS) XXX_Size() int {
	return xxx_messageInfo_BmdBagRgInfoMlacpCountersRg_KEYS.Size(m)
}
func (m *BmdBagRgInfoMlacpCountersRg_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_BmdBagRgInfoMlacpCountersRg_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_BmdBagRgInfoMlacpCountersRg_KEYS proto.InternalMessageInfo

func (m *BmdBagRgInfoMlacpCountersRg_KEYS) GetIccpGroup() uint32 {
	if m != nil {
		return m.IccpGroup
	}
	return 0
}

type BmdBagMlacpConnectionCounters struct {
	SentConnects            uint32   `protobuf:"varint,1,opt,name=sent_connects,json=sentConnects,proto3" json:"sent_connects,omitempty"`
	ReceivedConnects        uint32   `protobuf:"varint,2,opt,name=received_connects,json=receivedConnects,proto3" json:"received_connects,omitempty"`
	IccpInvalidConnects     uint32   `protobuf:"varint,3,opt,name=iccp_invalid_connects,json=iccpInvalidConnects,proto3" json:"iccp_invalid_connects,omitempty"`
	IccpConfigConnectErrors uint32   `protobuf:"varint,4,opt,name=iccp_config_connect_errors,json=iccpConfigConnectErrors,proto3" json:"iccp_config_connect_errors,omitempty"`
	IccpCountConnectErrors  uint32   `protobuf:"varint,5,opt,name=iccp_count_connect_errors,json=iccpCountConnectErrors,proto3" json:"iccp_count_connect_errors,omitempty"`
	SentWrongVersions       uint32   `protobuf:"varint,6,opt,name=sent_wrong_versions,json=sentWrongVersions,proto3" json:"sent_wrong_versions,omitempty"`
	ReceivedWrongVersions   uint32   `protobuf:"varint,7,opt,name=received_wrong_versions,json=receivedWrongVersions,proto3" json:"received_wrong_versions,omitempty"`
	SentDisconnects         uint32   `protobuf:"varint,8,opt,name=sent_disconnects,json=sentDisconnects,proto3" json:"sent_disconnects,omitempty"`
	ReceivedDisconnects     uint32   `protobuf:"varint,9,opt,name=received_disconnects,json=receivedDisconnects,proto3" json:"received_disconnects,omitempty"`
	IccpInvalidDisconnects  uint32   `protobuf:"varint,10,opt,name=iccp_invalid_disconnects,json=iccpInvalidDisconnects,proto3" json:"iccp_invalid_disconnects,omitempty"`
	XXX_NoUnkeyedLiteral    struct{} `json:"-"`
	XXX_unrecognized        []byte   `json:"-"`
	XXX_sizecache           int32    `json:"-"`
}

func (m *BmdBagMlacpConnectionCounters) Reset()         { *m = BmdBagMlacpConnectionCounters{} }
func (m *BmdBagMlacpConnectionCounters) String() string { return proto.CompactTextString(m) }
func (*BmdBagMlacpConnectionCounters) ProtoMessage()    {}
func (*BmdBagMlacpConnectionCounters) Descriptor() ([]byte, []int) {
	return fileDescriptor_8f7c2b600c427571, []int{1}
}

func (m *BmdBagMlacpConnectionCounters) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BmdBagMlacpConnectionCounters.Unmarshal(m, b)
}
func (m *BmdBagMlacpConnectionCounters) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BmdBagMlacpConnectionCounters.Marshal(b, m, deterministic)
}
func (m *BmdBagMlacpConnectionCounters) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BmdBagMlacpConnectionCounters.Merge(m, src)
}
func (m *BmdBagMlacpConnectionCounters) XXX_Size() int {
	return xxx_messageInfo_BmdBagMlacpConnectionCounters.Size(m)
}
func (m *BmdBagMlacpConnectionCounters) XXX_DiscardUnknown() {
	xxx_messageInfo_BmdBagMlacpConnectionCounters.DiscardUnknown(m)
}

var xxx_messageInfo_BmdBagMlacpConnectionCounters proto.InternalMessageInfo

func (m *BmdBagMlacpConnectionCounters) GetSentConnects() uint32 {
	if m != nil {
		return m.SentConnects
	}
	return 0
}

func (m *BmdBagMlacpConnectionCounters) GetReceivedConnects() uint32 {
	if m != nil {
		return m.ReceivedConnects
	}
	return 0
}

func (m *BmdBagMlacpConnectionCounters) GetIccpInvalidConnects() uint32 {
	if m != nil {
		return m.IccpInvalidConnects
	}
	return 0
}

func (m *BmdBagMlacpConnectionCounters) GetIccpConfigConnectErrors() uint32 {
	if m != nil {
		return m.IccpConfigConnectErrors
	}
	return 0
}

func (m *BmdBagMlacpConnectionCounters) GetIccpCountConnectErrors() uint32 {
	if m != nil {
		return m.IccpCountConnectErrors
	}
	return 0
}

func (m *BmdBagMlacpConnectionCounters) GetSentWrongVersions() uint32 {
	if m != nil {
		return m.SentWrongVersions
	}
	return 0
}

func (m *BmdBagMlacpConnectionCounters) GetReceivedWrongVersions() uint32 {
	if m != nil {
		return m.ReceivedWrongVersions
	}
	return 0
}

func (m *BmdBagMlacpConnectionCounters) GetSentDisconnects() uint32 {
	if m != nil {
		return m.SentDisconnects
	}
	return 0
}

func (m *BmdBagMlacpConnectionCounters) GetReceivedDisconnects() uint32 {
	if m != nil {
		return m.ReceivedDisconnects
	}
	return 0
}

func (m *BmdBagMlacpConnectionCounters) GetIccpInvalidDisconnects() uint32 {
	if m != nil {
		return m.IccpInvalidDisconnects
	}
	return 0
}

type BmdBagMlacpRgTlvCounters struct {
	SentConfig                  uint32   `protobuf:"varint,1,opt,name=sent_config,json=sentConfig,proto3" json:"sent_config,omitempty"`
	ReceivedConfig              uint32   `protobuf:"varint,2,opt,name=received_config,json=receivedConfig,proto3" json:"received_config,omitempty"`
	SentState                   uint32   `protobuf:"varint,3,opt,name=sent_state,json=sentState,proto3" json:"sent_state,omitempty"`
	ReceivedState               uint32   `protobuf:"varint,4,opt,name=received_state,json=receivedState,proto3" json:"received_state,omitempty"`
	SentNaKs                    uint32   `protobuf:"varint,5,opt,name=sent_na_ks,json=sentNaKs,proto3" json:"sent_na_ks,omitempty"`
	ReceivedNaKs                uint32   `protobuf:"varint,6,opt,name=received_na_ks,json=receivedNaKs,proto3" json:"received_na_ks,omitempty"`
	SentSyncRequests            uint32   `protobuf:"varint,7,opt,name=sent_sync_requests,json=sentSyncRequests,proto3" json:"sent_sync_requests,omitempty"`
	ReceivedSyncRequests        uint32   `protobuf:"varint,8,opt,name=received_sync_requests,json=receivedSyncRequests,proto3" json:"received_sync_requests,omitempty"`
	SentStateSyncRequests       uint32   `protobuf:"varint,9,opt,name=sent_state_sync_requests,json=sentStateSyncRequests,proto3" json:"sent_state_sync_requests,omitempty"`
	ReceivedStateSyncRequests   uint32   `protobuf:"varint,10,opt,name=received_state_sync_requests,json=receivedStateSyncRequests,proto3" json:"received_state_sync_requests,omitempty"`
	SentConfigSyncRequests      uint32   `protobuf:"varint,11,opt,name=sent_config_sync_requests,json=sentConfigSyncRequests,proto3" json:"sent_config_sync_requests,omitempty"`
	ReceivedConfigSyncRequests  uint32   `protobuf:"varint,12,opt,name=received_config_sync_requests,json=receivedConfigSyncRequests,proto3" json:"received_config_sync_requests,omitempty"`
	SentSolicitedSyncData       uint32   `protobuf:"varint,13,opt,name=sent_solicited_sync_data,json=sentSolicitedSyncData,proto3" json:"sent_solicited_sync_data,omitempty"`
	ReceivedSolicitedSyncData   uint32   `protobuf:"varint,14,opt,name=received_solicited_sync_data,json=receivedSolicitedSyncData,proto3" json:"received_solicited_sync_data,omitempty"`
	SentUnsolicitedSyncData     uint32   `protobuf:"varint,15,opt,name=sent_unsolicited_sync_data,json=sentUnsolicitedSyncData,proto3" json:"sent_unsolicited_sync_data,omitempty"`
	ReceivedUnsolicitedSyncData uint32   `protobuf:"varint,16,opt,name=received_unsolicited_sync_data,json=receivedUnsolicitedSyncData,proto3" json:"received_unsolicited_sync_data,omitempty"`
	XXX_NoUnkeyedLiteral        struct{} `json:"-"`
	XXX_unrecognized            []byte   `json:"-"`
	XXX_sizecache               int32    `json:"-"`
}

func (m *BmdBagMlacpRgTlvCounters) Reset()         { *m = BmdBagMlacpRgTlvCounters{} }
func (m *BmdBagMlacpRgTlvCounters) String() string { return proto.CompactTextString(m) }
func (*BmdBagMlacpRgTlvCounters) ProtoMessage()    {}
func (*BmdBagMlacpRgTlvCounters) Descriptor() ([]byte, []int) {
	return fileDescriptor_8f7c2b600c427571, []int{2}
}

func (m *BmdBagMlacpRgTlvCounters) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BmdBagMlacpRgTlvCounters.Unmarshal(m, b)
}
func (m *BmdBagMlacpRgTlvCounters) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BmdBagMlacpRgTlvCounters.Marshal(b, m, deterministic)
}
func (m *BmdBagMlacpRgTlvCounters) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BmdBagMlacpRgTlvCounters.Merge(m, src)
}
func (m *BmdBagMlacpRgTlvCounters) XXX_Size() int {
	return xxx_messageInfo_BmdBagMlacpRgTlvCounters.Size(m)
}
func (m *BmdBagMlacpRgTlvCounters) XXX_DiscardUnknown() {
	xxx_messageInfo_BmdBagMlacpRgTlvCounters.DiscardUnknown(m)
}

var xxx_messageInfo_BmdBagMlacpRgTlvCounters proto.InternalMessageInfo

func (m *BmdBagMlacpRgTlvCounters) GetSentConfig() uint32 {
	if m != nil {
		return m.SentConfig
	}
	return 0
}

func (m *BmdBagMlacpRgTlvCounters) GetReceivedConfig() uint32 {
	if m != nil {
		return m.ReceivedConfig
	}
	return 0
}

func (m *BmdBagMlacpRgTlvCounters) GetSentState() uint32 {
	if m != nil {
		return m.SentState
	}
	return 0
}

func (m *BmdBagMlacpRgTlvCounters) GetReceivedState() uint32 {
	if m != nil {
		return m.ReceivedState
	}
	return 0
}

func (m *BmdBagMlacpRgTlvCounters) GetSentNaKs() uint32 {
	if m != nil {
		return m.SentNaKs
	}
	return 0
}

func (m *BmdBagMlacpRgTlvCounters) GetReceivedNaKs() uint32 {
	if m != nil {
		return m.ReceivedNaKs
	}
	return 0
}

func (m *BmdBagMlacpRgTlvCounters) GetSentSyncRequests() uint32 {
	if m != nil {
		return m.SentSyncRequests
	}
	return 0
}

func (m *BmdBagMlacpRgTlvCounters) GetReceivedSyncRequests() uint32 {
	if m != nil {
		return m.ReceivedSyncRequests
	}
	return 0
}

func (m *BmdBagMlacpRgTlvCounters) GetSentStateSyncRequests() uint32 {
	if m != nil {
		return m.SentStateSyncRequests
	}
	return 0
}

func (m *BmdBagMlacpRgTlvCounters) GetReceivedStateSyncRequests() uint32 {
	if m != nil {
		return m.ReceivedStateSyncRequests
	}
	return 0
}

func (m *BmdBagMlacpRgTlvCounters) GetSentConfigSyncRequests() uint32 {
	if m != nil {
		return m.SentConfigSyncRequests
	}
	return 0
}

func (m *BmdBagMlacpRgTlvCounters) GetReceivedConfigSyncRequests() uint32 {
	if m != nil {
		return m.ReceivedConfigSyncRequests
	}
	return 0
}

func (m *BmdBagMlacpRgTlvCounters) GetSentSolicitedSyncData() uint32 {
	if m != nil {
		return m.SentSolicitedSyncData
	}
	return 0
}

func (m *BmdBagMlacpRgTlvCounters) GetReceivedSolicitedSyncData() uint32 {
	if m != nil {
		return m.ReceivedSolicitedSyncData
	}
	return 0
}

func (m *BmdBagMlacpRgTlvCounters) GetSentUnsolicitedSyncData() uint32 {
	if m != nil {
		return m.SentUnsolicitedSyncData
	}
	return 0
}

func (m *BmdBagMlacpRgTlvCounters) GetReceivedUnsolicitedSyncData() uint32 {
	if m != nil {
		return m.ReceivedUnsolicitedSyncData
	}
	return 0
}

type BmdBagMlacpInvalidTlvCounters struct {
	IncorrectLength      uint32   `protobuf:"varint,1,opt,name=incorrect_length,json=incorrectLength,proto3" json:"incorrect_length,omitempty"`
	InvalidType          uint32   `protobuf:"varint,2,opt,name=invalid_type,json=invalidType,proto3" json:"invalid_type,omitempty"`
	InvalidData          uint32   `protobuf:"varint,3,opt,name=invalid_data,json=invalidData,proto3" json:"invalid_data,omitempty"`
	UnknownBundle        uint32   `protobuf:"varint,4,opt,name=unknown_bundle,json=unknownBundle,proto3" json:"unknown_bundle,omitempty"`
	UnknownPort          uint32   `protobuf:"varint,5,opt,name=unknown_port,json=unknownPort,proto3" json:"unknown_port,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BmdBagMlacpInvalidTlvCounters) Reset()         { *m = BmdBagMlacpInvalidTlvCounters{} }
func (m *BmdBagMlacpInvalidTlvCounters) String() string { return proto.CompactTextString(m) }
func (*BmdBagMlacpInvalidTlvCounters) ProtoMessage()    {}
func (*BmdBagMlacpInvalidTlvCounters) Descriptor() ([]byte, []int) {
	return fileDescriptor_8f7c2b600c427571, []int{3}
}

func (m *BmdBagMlacpInvalidTlvCounters) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BmdBagMlacpInvalidTlvCounters.Unmarshal(m, b)
}
func (m *BmdBagMlacpInvalidTlvCounters) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BmdBagMlacpInvalidTlvCounters.Marshal(b, m, deterministic)
}
func (m *BmdBagMlacpInvalidTlvCounters) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BmdBagMlacpInvalidTlvCounters.Merge(m, src)
}
func (m *BmdBagMlacpInvalidTlvCounters) XXX_Size() int {
	return xxx_messageInfo_BmdBagMlacpInvalidTlvCounters.Size(m)
}
func (m *BmdBagMlacpInvalidTlvCounters) XXX_DiscardUnknown() {
	xxx_messageInfo_BmdBagMlacpInvalidTlvCounters.DiscardUnknown(m)
}

var xxx_messageInfo_BmdBagMlacpInvalidTlvCounters proto.InternalMessageInfo

func (m *BmdBagMlacpInvalidTlvCounters) GetIncorrectLength() uint32 {
	if m != nil {
		return m.IncorrectLength
	}
	return 0
}

func (m *BmdBagMlacpInvalidTlvCounters) GetInvalidType() uint32 {
	if m != nil {
		return m.InvalidType
	}
	return 0
}

func (m *BmdBagMlacpInvalidTlvCounters) GetInvalidData() uint32 {
	if m != nil {
		return m.InvalidData
	}
	return 0
}

func (m *BmdBagMlacpInvalidTlvCounters) GetUnknownBundle() uint32 {
	if m != nil {
		return m.UnknownBundle
	}
	return 0
}

func (m *BmdBagMlacpInvalidTlvCounters) GetUnknownPort() uint32 {
	if m != nil {
		return m.UnknownPort
	}
	return 0
}

type BmdBagMlacpIccpMsgCounters struct {
	SentMessages         uint32   `protobuf:"varint,1,opt,name=sent_messages,json=sentMessages,proto3" json:"sent_messages,omitempty"`
	SentBufferMessages   uint32   `protobuf:"varint,2,opt,name=sent_buffer_messages,json=sentBufferMessages,proto3" json:"sent_buffer_messages,omitempty"`
	ReceivedMessages     uint32   `protobuf:"varint,3,opt,name=received_messages,json=receivedMessages,proto3" json:"received_messages,omitempty"`
	TransmissionErrors   uint32   `protobuf:"varint,4,opt,name=transmission_errors,json=transmissionErrors,proto3" json:"transmission_errors,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BmdBagMlacpIccpMsgCounters) Reset()         { *m = BmdBagMlacpIccpMsgCounters{} }
func (m *BmdBagMlacpIccpMsgCounters) String() string { return proto.CompactTextString(m) }
func (*BmdBagMlacpIccpMsgCounters) ProtoMessage()    {}
func (*BmdBagMlacpIccpMsgCounters) Descriptor() ([]byte, []int) {
	return fileDescriptor_8f7c2b600c427571, []int{4}
}

func (m *BmdBagMlacpIccpMsgCounters) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BmdBagMlacpIccpMsgCounters.Unmarshal(m, b)
}
func (m *BmdBagMlacpIccpMsgCounters) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BmdBagMlacpIccpMsgCounters.Marshal(b, m, deterministic)
}
func (m *BmdBagMlacpIccpMsgCounters) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BmdBagMlacpIccpMsgCounters.Merge(m, src)
}
func (m *BmdBagMlacpIccpMsgCounters) XXX_Size() int {
	return xxx_messageInfo_BmdBagMlacpIccpMsgCounters.Size(m)
}
func (m *BmdBagMlacpIccpMsgCounters) XXX_DiscardUnknown() {
	xxx_messageInfo_BmdBagMlacpIccpMsgCounters.DiscardUnknown(m)
}

var xxx_messageInfo_BmdBagMlacpIccpMsgCounters proto.InternalMessageInfo

func (m *BmdBagMlacpIccpMsgCounters) GetSentMessages() uint32 {
	if m != nil {
		return m.SentMessages
	}
	return 0
}

func (m *BmdBagMlacpIccpMsgCounters) GetSentBufferMessages() uint32 {
	if m != nil {
		return m.SentBufferMessages
	}
	return 0
}

func (m *BmdBagMlacpIccpMsgCounters) GetReceivedMessages() uint32 {
	if m != nil {
		return m.ReceivedMessages
	}
	return 0
}

func (m *BmdBagMlacpIccpMsgCounters) GetTransmissionErrors() uint32 {
	if m != nil {
		return m.TransmissionErrors
	}
	return 0
}

type BmdBagMlacpIccpEventCounters struct {
	TransportUp          uint32   `protobuf:"varint,1,opt,name=transport_up,json=transportUp,proto3" json:"transport_up,omitempty"`
	TransportDown        uint32   `protobuf:"varint,2,opt,name=transport_down,json=transportDown,proto3" json:"transport_down,omitempty"`
	TransportUnavailable uint32   `protobuf:"varint,3,opt,name=transport_unavailable,json=transportUnavailable,proto3" json:"transport_unavailable,omitempty"`
	ConfiguredSet        uint32   `protobuf:"varint,4,opt,name=configured_set,json=configuredSet,proto3" json:"configured_set,omitempty"`
	ConfiguredClear      uint32   `protobuf:"varint,5,opt,name=configured_clear,json=configuredClear,proto3" json:"configured_clear,omitempty"`
	ReachabilitySet      uint32   `protobuf:"varint,6,opt,name=reachability_set,json=reachabilitySet,proto3" json:"reachability_set,omitempty"`
	ReachabilityCleared  uint32   `protobuf:"varint,7,opt,name=reachability_cleared,json=reachabilityCleared,proto3" json:"reachability_cleared,omitempty"`
	MemberStatusUp       uint32   `protobuf:"varint,8,opt,name=member_status_up,json=memberStatusUp,proto3" json:"member_status_up,omitempty"`
	MemberStatusDown     uint32   `protobuf:"varint,9,opt,name=member_status_down,json=memberStatusDown,proto3" json:"member_status_down,omitempty"`
	PeIsolated           uint32   `protobuf:"varint,10,opt,name=pe_isolated,json=peIsolated,proto3" json:"pe_isolated,omitempty"`
	PeIsolatedClear      uint32   `protobuf:"varint,11,opt,name=pe_isolated_clear,json=peIsolatedClear,proto3" json:"pe_isolated_clear,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BmdBagMlacpIccpEventCounters) Reset()         { *m = BmdBagMlacpIccpEventCounters{} }
func (m *BmdBagMlacpIccpEventCounters) String() string { return proto.CompactTextString(m) }
func (*BmdBagMlacpIccpEventCounters) ProtoMessage()    {}
func (*BmdBagMlacpIccpEventCounters) Descriptor() ([]byte, []int) {
	return fileDescriptor_8f7c2b600c427571, []int{5}
}

func (m *BmdBagMlacpIccpEventCounters) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BmdBagMlacpIccpEventCounters.Unmarshal(m, b)
}
func (m *BmdBagMlacpIccpEventCounters) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BmdBagMlacpIccpEventCounters.Marshal(b, m, deterministic)
}
func (m *BmdBagMlacpIccpEventCounters) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BmdBagMlacpIccpEventCounters.Merge(m, src)
}
func (m *BmdBagMlacpIccpEventCounters) XXX_Size() int {
	return xxx_messageInfo_BmdBagMlacpIccpEventCounters.Size(m)
}
func (m *BmdBagMlacpIccpEventCounters) XXX_DiscardUnknown() {
	xxx_messageInfo_BmdBagMlacpIccpEventCounters.DiscardUnknown(m)
}

var xxx_messageInfo_BmdBagMlacpIccpEventCounters proto.InternalMessageInfo

func (m *BmdBagMlacpIccpEventCounters) GetTransportUp() uint32 {
	if m != nil {
		return m.TransportUp
	}
	return 0
}

func (m *BmdBagMlacpIccpEventCounters) GetTransportDown() uint32 {
	if m != nil {
		return m.TransportDown
	}
	return 0
}

func (m *BmdBagMlacpIccpEventCounters) GetTransportUnavailable() uint32 {
	if m != nil {
		return m.TransportUnavailable
	}
	return 0
}

func (m *BmdBagMlacpIccpEventCounters) GetConfiguredSet() uint32 {
	if m != nil {
		return m.ConfiguredSet
	}
	return 0
}

func (m *BmdBagMlacpIccpEventCounters) GetConfiguredClear() uint32 {
	if m != nil {
		return m.ConfiguredClear
	}
	return 0
}

func (m *BmdBagMlacpIccpEventCounters) GetReachabilitySet() uint32 {
	if m != nil {
		return m.ReachabilitySet
	}
	return 0
}

func (m *BmdBagMlacpIccpEventCounters) GetReachabilityCleared() uint32 {
	if m != nil {
		return m.ReachabilityCleared
	}
	return 0
}

func (m *BmdBagMlacpIccpEventCounters) GetMemberStatusUp() uint32 {
	if m != nil {
		return m.MemberStatusUp
	}
	return 0
}

func (m *BmdBagMlacpIccpEventCounters) GetMemberStatusDown() uint32 {
	if m != nil {
		return m.MemberStatusDown
	}
	return 0
}

func (m *BmdBagMlacpIccpEventCounters) GetPeIsolated() uint32 {
	if m != nil {
		return m.PeIsolated
	}
	return 0
}

func (m *BmdBagMlacpIccpEventCounters) GetPeIsolatedClear() uint32 {
	if m != nil {
		return m.PeIsolatedClear
	}
	return 0
}

type BmdBagRgInfoMlacpCounters struct {
	Connection           *BmdBagMlacpConnectionCounters `protobuf:"bytes,1,opt,name=connection,proto3" json:"connection,omitempty"`
	TlVs                 *BmdBagMlacpRgTlvCounters      `protobuf:"bytes,2,opt,name=tl_vs,json=tlVs,proto3" json:"tl_vs,omitempty"`
	InvalidTlVs          *BmdBagMlacpInvalidTlvCounters `protobuf:"bytes,3,opt,name=invalid_tl_vs,json=invalidTlVs,proto3" json:"invalid_tl_vs,omitempty"`
	IccpMessages         *BmdBagMlacpIccpMsgCounters    `protobuf:"bytes,4,opt,name=iccp_messages,json=iccpMessages,proto3" json:"iccp_messages,omitempty"`
	IccpEvents           *BmdBagMlacpIccpEventCounters  `protobuf:"bytes,5,opt,name=iccp_events,json=iccpEvents,proto3" json:"iccp_events,omitempty"`
	LastTimeCleared      uint64                         `protobuf:"varint,6,opt,name=last_time_cleared,json=lastTimeCleared,proto3" json:"last_time_cleared,omitempty"`
	TimeSinceCleared     uint64                         `protobuf:"varint,7,opt,name=time_since_cleared,json=timeSinceCleared,proto3" json:"time_since_cleared,omitempty"`
	LastUnexpectedEvent  uint64                         `protobuf:"varint,8,opt,name=last_unexpected_event,json=lastUnexpectedEvent,proto3" json:"last_unexpected_event,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                       `json:"-"`
	XXX_unrecognized     []byte                         `json:"-"`
	XXX_sizecache        int32                          `json:"-"`
}

func (m *BmdBagRgInfoMlacpCounters) Reset()         { *m = BmdBagRgInfoMlacpCounters{} }
func (m *BmdBagRgInfoMlacpCounters) String() string { return proto.CompactTextString(m) }
func (*BmdBagRgInfoMlacpCounters) ProtoMessage()    {}
func (*BmdBagRgInfoMlacpCounters) Descriptor() ([]byte, []int) {
	return fileDescriptor_8f7c2b600c427571, []int{6}
}

func (m *BmdBagRgInfoMlacpCounters) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BmdBagRgInfoMlacpCounters.Unmarshal(m, b)
}
func (m *BmdBagRgInfoMlacpCounters) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BmdBagRgInfoMlacpCounters.Marshal(b, m, deterministic)
}
func (m *BmdBagRgInfoMlacpCounters) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BmdBagRgInfoMlacpCounters.Merge(m, src)
}
func (m *BmdBagRgInfoMlacpCounters) XXX_Size() int {
	return xxx_messageInfo_BmdBagRgInfoMlacpCounters.Size(m)
}
func (m *BmdBagRgInfoMlacpCounters) XXX_DiscardUnknown() {
	xxx_messageInfo_BmdBagRgInfoMlacpCounters.DiscardUnknown(m)
}

var xxx_messageInfo_BmdBagRgInfoMlacpCounters proto.InternalMessageInfo

func (m *BmdBagRgInfoMlacpCounters) GetConnection() *BmdBagMlacpConnectionCounters {
	if m != nil {
		return m.Connection
	}
	return nil
}

func (m *BmdBagRgInfoMlacpCounters) GetTlVs() *BmdBagMlacpRgTlvCounters {
	if m != nil {
		return m.TlVs
	}
	return nil
}

func (m *BmdBagRgInfoMlacpCounters) GetInvalidTlVs() *BmdBagMlacpInvalidTlvCounters {
	if m != nil {
		return m.InvalidTlVs
	}
	return nil
}

func (m *BmdBagRgInfoMlacpCounters) GetIccpMessages() *BmdBagMlacpIccpMsgCounters {
	if m != nil {
		return m.IccpMessages
	}
	return nil
}

func (m *BmdBagRgInfoMlacpCounters) GetIccpEvents() *BmdBagMlacpIccpEventCounters {
	if m != nil {
		return m.IccpEvents
	}
	return nil
}

func (m *BmdBagRgInfoMlacpCounters) GetLastTimeCleared() uint64 {
	if m != nil {
		return m.LastTimeCleared
	}
	return 0
}

func (m *BmdBagRgInfoMlacpCounters) GetTimeSinceCleared() uint64 {
	if m != nil {
		return m.TimeSinceCleared
	}
	return 0
}

func (m *BmdBagRgInfoMlacpCounters) GetLastUnexpectedEvent() uint64 {
	if m != nil {
		return m.LastUnexpectedEvent
	}
	return 0
}

type BmdBagRgInfoMlacpCountersRg struct {
	IccpGroupId          uint32                     `protobuf:"varint,50,opt,name=iccp_group_id,json=iccpGroupId,proto3" json:"iccp_group_id,omitempty"`
	IccpGroupCounters    *BmdBagRgInfoMlacpCounters `protobuf:"bytes,51,opt,name=iccp_group_counters,json=iccpGroupCounters,proto3" json:"iccp_group_counters,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *BmdBagRgInfoMlacpCountersRg) Reset()         { *m = BmdBagRgInfoMlacpCountersRg{} }
func (m *BmdBagRgInfoMlacpCountersRg) String() string { return proto.CompactTextString(m) }
func (*BmdBagRgInfoMlacpCountersRg) ProtoMessage()    {}
func (*BmdBagRgInfoMlacpCountersRg) Descriptor() ([]byte, []int) {
	return fileDescriptor_8f7c2b600c427571, []int{7}
}

func (m *BmdBagRgInfoMlacpCountersRg) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BmdBagRgInfoMlacpCountersRg.Unmarshal(m, b)
}
func (m *BmdBagRgInfoMlacpCountersRg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BmdBagRgInfoMlacpCountersRg.Marshal(b, m, deterministic)
}
func (m *BmdBagRgInfoMlacpCountersRg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BmdBagRgInfoMlacpCountersRg.Merge(m, src)
}
func (m *BmdBagRgInfoMlacpCountersRg) XXX_Size() int {
	return xxx_messageInfo_BmdBagRgInfoMlacpCountersRg.Size(m)
}
func (m *BmdBagRgInfoMlacpCountersRg) XXX_DiscardUnknown() {
	xxx_messageInfo_BmdBagRgInfoMlacpCountersRg.DiscardUnknown(m)
}

var xxx_messageInfo_BmdBagRgInfoMlacpCountersRg proto.InternalMessageInfo

func (m *BmdBagRgInfoMlacpCountersRg) GetIccpGroupId() uint32 {
	if m != nil {
		return m.IccpGroupId
	}
	return 0
}

func (m *BmdBagRgInfoMlacpCountersRg) GetIccpGroupCounters() *BmdBagRgInfoMlacpCounters {
	if m != nil {
		return m.IccpGroupCounters
	}
	return nil
}

func init() {
	proto.RegisterType((*BmdBagRgInfoMlacpCountersRg_KEYS)(nil), "cisco_ios_xr_bundlemgr_oper.bundle_information.mlacp_iccp_group_counters.iccp_groups.iccp_group.iccp_group_ancestor_member.bmd_bag_rg_info_mlacp_counters_rg_KEYS")
	proto.RegisterType((*BmdBagMlacpConnectionCounters)(nil), "cisco_ios_xr_bundlemgr_oper.bundle_information.mlacp_iccp_group_counters.iccp_groups.iccp_group.iccp_group_ancestor_member.bmd_bag_mlacp_connection_counters")
	proto.RegisterType((*BmdBagMlacpRgTlvCounters)(nil), "cisco_ios_xr_bundlemgr_oper.bundle_information.mlacp_iccp_group_counters.iccp_groups.iccp_group.iccp_group_ancestor_member.bmd_bag_mlacp_rg_tlv_counters")
	proto.RegisterType((*BmdBagMlacpInvalidTlvCounters)(nil), "cisco_ios_xr_bundlemgr_oper.bundle_information.mlacp_iccp_group_counters.iccp_groups.iccp_group.iccp_group_ancestor_member.bmd_bag_mlacp_invalid_tlv_counters")
	proto.RegisterType((*BmdBagMlacpIccpMsgCounters)(nil), "cisco_ios_xr_bundlemgr_oper.bundle_information.mlacp_iccp_group_counters.iccp_groups.iccp_group.iccp_group_ancestor_member.bmd_bag_mlacp_iccp_msg_counters")
	proto.RegisterType((*BmdBagMlacpIccpEventCounters)(nil), "cisco_ios_xr_bundlemgr_oper.bundle_information.mlacp_iccp_group_counters.iccp_groups.iccp_group.iccp_group_ancestor_member.bmd_bag_mlacp_iccp_event_counters")
	proto.RegisterType((*BmdBagRgInfoMlacpCounters)(nil), "cisco_ios_xr_bundlemgr_oper.bundle_information.mlacp_iccp_group_counters.iccp_groups.iccp_group.iccp_group_ancestor_member.bmd_bag_rg_info_mlacp_counters")
	proto.RegisterType((*BmdBagRgInfoMlacpCountersRg)(nil), "cisco_ios_xr_bundlemgr_oper.bundle_information.mlacp_iccp_group_counters.iccp_groups.iccp_group.iccp_group_ancestor_member.bmd_bag_rg_info_mlacp_counters_rg")
}

func init() {
	proto.RegisterFile("bmd_bag_rg_info_mlacp_counters_rg.proto", fileDescriptor_8f7c2b600c427571)
}

var fileDescriptor_8f7c2b600c427571 = []byte{
	// 1243 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xcc, 0x57, 0x4f, 0x6f, 0x1b, 0xc5,
	0x1b, 0x96, 0x1b, 0xb7, 0xbf, 0xf6, 0xb5, 0x1d, 0x3b, 0xe3, 0xa6, 0x75, 0xfb, 0x6b, 0x1a, 0x62,
	0x28, 0x6d, 0xa1, 0x32, 0x90, 0x20, 0xa0, 0xea, 0x01, 0x51, 0x27, 0xaa, 0xa2, 0x02, 0x42, 0x76,
	0x53, 0xc4, 0x69, 0xb4, 0x5e, 0x8f, 0xb7, 0xa3, 0xae, 0x67, 0x97, 0xd9, 0x59, 0xa7, 0xe1, 0x7b,
	0x70, 0x00, 0x04, 0x12, 0x9f, 0x80, 0x6f, 0x00, 0x42, 0x1c, 0x7b, 0xe7, 0xca, 0x27, 0xe0, 0xcc,
	0x15, 0xcd, 0x3b, 0x33, 0x3b, 0xbb, 0xae, 0xa1, 0x47, 0x72, 0x4b, 0x9e, 0xf7, 0x79, 0x5e, 0xbf,
	0xff, 0xe6, 0x9d, 0x59, 0xb8, 0x39, 0x99, 0x4f, 0xe9, 0x24, 0x88, 0xa8, 0x8c, 0x28, 0x17, 0xb3,
	0x84, 0xce, 0xe3, 0x20, 0x4c, 0x69, 0x98, 0xe4, 0x42, 0x31, 0x99, 0x51, 0x19, 0x0d, 0x52, 0x99,
	0xa8, 0x84, 0x7c, 0x15, 0xf2, 0x2c, 0x4c, 0x28, 0x4f, 0x32, 0xfa, 0x4c, 0xd2, 0x49, 0x2e, 0xa6,
	0x31, 0x9b, 0x47, 0x92, 0x26, 0x29, 0x93, 0x03, 0xf3, 0x2f, 0x3a, 0x90, 0xf3, 0x40, 0xf1, 0x44,
	0x0c, 0x8c, 0x1f, 0x1e, 0x86, 0x29, 0x8d, 0x64, 0x92, 0x7b, 0x97, 0x03, 0x8f, 0x95, 0xff, 0x2e,
	0xfd, 0x49, 0x03, 0x11, 0xb2, 0x4c, 0x25, 0x92, 0xce, 0xd9, 0x7c, 0xc2, 0x64, 0xff, 0x01, 0xbc,
	0xfe, 0xd2, 0x30, 0xe9, 0xc3, 0x83, 0x2f, 0xc6, 0x64, 0x0b, 0xc0, 0xfb, 0xe9, 0xd5, 0x5e, 0xa9,
	0xdd, 0x6a, 0x8d, 0x2e, 0x68, 0xe4, 0x81, 0x06, 0xfa, 0x3f, 0xd6, 0x61, 0xc7, 0x79, 0x72, 0x1e,
	0x84, 0x60, 0xa1, 0x8e, 0xb8, 0x70, 0x46, 0x5e, 0x85, 0x56, 0xc6, 0x84, 0x72, 0xb6, 0xcc, 0xfa,
	0x69, 0x6a, 0x70, 0x68, 0x31, 0xf2, 0x26, 0x6c, 0x48, 0x16, 0x32, 0xbe, 0x60, 0x53, 0x4f, 0x3c,
	0x83, 0xc4, 0x8e, 0x33, 0x14, 0xe4, 0x5d, 0xd8, 0xc4, 0xb0, 0xb8, 0x58, 0x04, 0x31, 0x2f, 0x09,
	0xd6, 0x50, 0xd0, 0xd5, 0xc6, 0x43, 0x63, 0x2b, 0x34, 0xf7, 0xe0, 0x2a, 0x6a, 0xc2, 0x44, 0xcc,
	0x78, 0xe4, 0x24, 0x94, 0x49, 0x99, 0xc8, 0xac, 0x57, 0x47, 0xe1, 0x65, 0xcd, 0x18, 0x22, 0xc1,
	0xea, 0x0e, 0xd0, 0x4c, 0xee, 0xc2, 0x15, 0x2b, 0xce, 0x7d, 0x22, 0x4e, 0x7b, 0x16, 0xb5, 0x97,
	0x8c, 0x36, 0x2f, 0x72, 0xb2, 0xd2, 0x01, 0x74, 0x31, 0xfb, 0x63, 0x99, 0x88, 0x88, 0x2e, 0x98,
	0xcc, 0x78, 0x22, 0xb2, 0xde, 0x39, 0x14, 0x6d, 0x68, 0xd3, 0xe7, 0xda, 0xf2, 0xd8, 0x1a, 0xc8,
	0x7b, 0x70, 0xb9, 0x28, 0xc4, 0x92, 0xe6, 0x7f, 0xa8, 0xd9, 0x74, 0xe6, 0xaa, 0xee, 0x36, 0x74,
	0xf0, 0x77, 0xa6, 0x7a, 0xae, 0x6c, 0x39, 0xce, 0xa3, 0xa0, 0xad, 0xf1, 0x7d, 0x0f, 0x93, 0x77,
	0xe0, 0x62, 0xf1, 0x13, 0x65, 0xfa, 0x05, 0x53, 0x3d, 0x67, 0x2b, 0x4b, 0x3e, 0x80, 0x5e, 0xa5,
	0xe2, 0x65, 0x19, 0xf8, 0xfc, 0x6d, 0xd1, 0x4b, 0xca, 0xfe, 0xf3, 0x73, 0xb0, 0x55, 0x9d, 0x11,
	0x19, 0x51, 0x15, 0x2f, 0xfc, 0x7c, 0x6c, 0x43, 0xc3, 0xcd, 0xc7, 0x8c, 0x47, 0x76, 0x3a, 0xc0,
	0x4e, 0xc7, 0x8c, 0x47, 0xe4, 0x26, 0xb4, 0xcb, 0xb3, 0xa1, 0x49, 0x66, 0x32, 0xd6, 0x4b, 0x93,
	0xa1, 0x89, 0x5b, 0x80, 0x32, 0x9a, 0xa9, 0x40, 0x31, 0x3b, 0x0c, 0x17, 0x34, 0x32, 0xd6, 0x00,
	0xb9, 0x01, 0x85, 0xc0, 0x52, 0x4c, 0xdb, 0x5b, 0x0e, 0x35, 0xb4, 0x6b, 0xd6, 0x8b, 0x08, 0xe8,
	0x53, 0xd7, 0xdd, 0xf3, 0x1a, 0xf9, 0x34, 0x78, 0x98, 0x91, 0xd7, 0x4a, 0x4e, 0x0c, 0xc3, 0xb4,
	0xb2, 0xe9, 0x50, 0x64, 0xdd, 0x01, 0x62, 0x22, 0x39, 0x11, 0x21, 0x95, 0xec, 0xcb, 0x9c, 0x65,
	0xca, 0x35, 0x10, 0xfb, 0x34, 0x3e, 0x11, 0xe1, 0xc8, 0xe2, 0xe4, 0x5d, 0xb8, 0xe4, 0x03, 0xab,
	0x28, 0x4c, 0x07, 0x8b, 0x76, 0x55, 0x54, 0xef, 0x43, 0xcf, 0x67, 0xbb, 0xa4, 0x33, 0xad, 0xdc,
	0x2c, 0x72, 0xaf, 0x08, 0x3f, 0x84, 0x6b, 0xd5, 0x3a, 0x2c, 0x89, 0x4d, 0x43, 0xaf, 0x54, 0xaa,
	0x52, 0x71, 0x70, 0x17, 0xae, 0x94, 0x3a, 0xb6, 0xa4, 0x6e, 0x98, 0x71, 0xf0, 0xfd, 0xab, 0x48,
	0x3f, 0x82, 0xad, 0xa5, 0x5e, 0x2e, 0xc9, 0x9b, 0x28, 0xbf, 0x5a, 0xed, 0xec, 0xea, 0xbc, 0x93,
	0x98, 0x87, 0x5c, 0xb9, 0x9a, 0x4d, 0x03, 0x15, 0xf4, 0x5a, 0xa5, 0xbc, 0x9d, 0x59, 0x8b, 0xf7,
	0x03, 0x15, 0x54, 0xf3, 0x5e, 0x21, 0x5e, 0x5f, 0xca, 0xfb, 0x05, 0x07, 0xf7, 0xe0, 0x2a, 0xfe,
	0x72, 0x2e, 0x56, 0xc9, 0xdb, 0x66, 0x87, 0x68, 0xc6, 0x91, 0x27, 0x14, 0xe2, 0x21, 0x5c, 0x2f,
	0x7e, 0x7d, 0xb5, 0x83, 0x0e, 0x3a, 0xf8, 0xbf, 0x63, 0xad, 0x70, 0xd2, 0xff, 0xa3, 0x06, 0xfd,
	0xea, 0x69, 0x72, 0x27, 0xb2, 0x72, 0xa4, 0x6e, 0x43, 0x87, 0x8b, 0x30, 0x91, 0x52, 0xaf, 0xa9,
	0x98, 0x89, 0x48, 0x3d, 0xb1, 0xe7, 0xaa, 0x5d, 0xe0, 0x1f, 0x23, 0x4c, 0x76, 0xa0, 0x59, 0xb8,
	0x38, 0x49, 0x99, 0x3d, 0x59, 0x0d, 0x8b, 0x3d, 0x3a, 0x49, 0x59, 0x99, 0x82, 0x71, 0xae, 0x55,
	0x28, 0x98, 0xdc, 0x0d, 0x58, 0xcf, 0xc5, 0x53, 0x91, 0x1c, 0x0b, 0x7b, 0x97, 0xb9, 0xa3, 0x65,
	0xd1, 0xfb, 0x08, 0x6a, 0x4f, 0x8e, 0x96, 0x26, 0x52, 0xd9, 0xc3, 0xd5, 0xb0, 0xd8, 0x67, 0x89,
	0x54, 0xfd, 0xdf, 0x6b, 0xb0, 0xbd, 0x94, 0xa1, 0x5e, 0x3c, 0xf3, 0x2c, 0x7a, 0xf1, 0x46, 0x99,
	0xb3, 0x2c, 0x0b, 0x22, 0x56, 0xb9, 0x51, 0x3e, 0xb1, 0x18, 0x79, 0x1b, 0x2e, 0x22, 0x69, 0x92,
	0xcf, 0x66, 0x4c, 0x7a, 0xae, 0x49, 0x10, 0x8f, 0xe7, 0x7d, 0x34, 0x15, 0x8a, 0xf2, 0x1d, 0x54,
	0xd0, 0xd7, 0xaa, 0x77, 0x50, 0x41, 0x7e, 0x0b, 0xba, 0x4a, 0x06, 0x22, 0x9b, 0xf3, 0x4c, 0x2f,
	0xe0, 0xea, 0x45, 0x42, 0xca, 0x26, 0x73, 0x11, 0xf4, 0xff, 0x5a, 0x5b, 0xbe, 0x2c, 0x31, 0x31,
	0xb6, 0x30, 0x27, 0xc9, 0xa6, 0xb6, 0x03, 0x4d, 0xd4, 0xea, 0xf2, 0xd0, 0xe2, 0xce, 0x6d, 0x14,
	0xd8, 0x51, 0xaa, 0x6b, 0xed, 0x29, 0xd3, 0xe4, 0x58, 0xd8, 0x94, 0x5a, 0x05, 0xba, 0x9f, 0x1c,
	0x0b, 0xb2, 0x07, 0x9b, 0x25, 0x4f, 0x22, 0x58, 0x04, 0x3c, 0x0e, 0x26, 0xb1, 0xdb, 0x8b, 0x17,
	0xbd, 0x4b, 0x6f, 0xd3, 0xbe, 0xcd, 0xa9, 0xcc, 0xa5, 0x1e, 0x4d, 0xa6, 0x5c, 0x1f, 0x3d, 0x3a,
	0x66, 0x4a, 0xcf, 0x57, 0x89, 0x16, 0xc6, 0x2c, 0x90, 0xb6, 0x97, 0x6d, 0x8f, 0x0f, 0x35, 0xac,
	0xa9, 0x92, 0x05, 0xe1, 0x93, 0x60, 0xc2, 0x63, 0xae, 0x4e, 0xd0, 0xa7, 0xd9, 0x98, 0xed, 0x32,
	0xae, 0xbd, 0xe2, 0xbd, 0x54, 0xa2, 0xa2, 0x5f, 0x36, 0xb5, 0x6b, 0xb3, 0x5b, 0xb6, 0x0d, 0x8d,
	0x89, 0xdc, 0x82, 0x8e, 0x79, 0xd4, 0xe0, 0x22, 0xcb, 0x33, 0x5d, 0x32, 0xb3, 0x33, 0xd7, 0x0d,
	0x3e, 0x46, 0xf8, 0x28, 0xd5, 0x1b, 0xb9, 0xca, 0xc4, 0xca, 0x99, 0x3d, 0xd9, 0x29, 0x73, 0xb1,
	0x78, 0xdb, 0xd0, 0x48, 0x19, 0xe5, 0x59, 0x12, 0x07, 0x8a, 0x4d, 0xed, 0x46, 0x84, 0x94, 0x1d,
	0x5a, 0x84, 0xbc, 0x01, 0x1b, 0x25, 0x82, 0x2d, 0x81, 0x59, 0x7d, 0x6d, 0x4f, 0xc3, 0x30, 0xfb,
	0x7f, 0x9e, 0x87, 0xeb, 0xff, 0xfe, 0xe0, 0x22, 0x3f, 0xd7, 0x00, 0xfc, 0xdb, 0x09, 0xbb, 0xde,
	0xd8, 0xfd, 0xbe, 0x36, 0xf8, 0xef, 0x5e, 0x89, 0x83, 0x97, 0x3e, 0xec, 0x46, 0xa5, 0x88, 0xc9,
	0x4f, 0x35, 0x38, 0xab, 0x62, 0xba, 0x30, 0xe7, 0xab, 0xb1, 0xfb, 0xcd, 0x29, 0x8a, 0x7d, 0xe9,
	0xc1, 0x31, 0xaa, 0xab, 0xf8, 0x71, 0x46, 0x7e, 0xab, 0x41, 0xcb, 0x2f, 0x4f, 0x1d, 0xf9, 0x1a,
	0x46, 0xfe, 0xc3, 0x29, 0x8a, 0x7c, 0xd5, 0x72, 0xf7, 0xbb, 0x59, 0x67, 0xf1, 0xab, 0xce, 0x02,
	0x17, 0xa4, 0x5b, 0x58, 0x75, 0xcc, 0xe2, 0xbb, 0xd3, 0x94, 0xc5, 0xf2, 0x02, 0x1f, 0x35, 0x35,
	0x54, 0xac, 0xd2, 0x5f, 0x6a, 0xd0, 0xf0, 0xbb, 0xd0, 0x3c, 0xb9, 0x4e, 0xd7, 0xf4, 0xaf, 0xd8,
	0xd4, 0x23, 0xfc, 0x32, 0x3a, 0xc0, 0x88, 0xf5, 0x36, 0x88, 0x83, 0x4c, 0x51, 0xc5, 0xe7, 0xac,
	0x58, 0x5b, 0x7a, 0xcb, 0xd5, 0x47, 0x6d, 0x6d, 0x78, 0xc4, 0xe7, 0xcc, 0xad, 0xac, 0x3b, 0x40,
	0x90, 0x96, 0x71, 0x11, 0xb2, 0xca, 0x8e, 0xab, 0x8f, 0x3a, 0xda, 0x32, 0xd6, 0x06, 0xc7, 0xde,
	0x85, 0x4d, 0xf4, 0x9c, 0x0b, 0xf6, 0x2c, 0x65, 0xa1, 0xde, 0x35, 0x18, 0x07, 0x6e, 0xb9, 0xfa,
	0xa8, 0xab, 0x8d, 0x47, 0x85, 0x0d, 0xc3, 0xe9, 0x7f, 0x7d, 0xc6, 0xdf, 0x34, 0xff, 0xf8, 0x81,
	0x47, 0xfa, 0x76, 0x70, 0x4c, 0xfe, 0x7c, 0xda, 0xdb, 0xb5, 0xd7, 0xba, 0xfb, 0xbc, 0x3b, 0x9c,
	0x92, 0xe7, 0x35, 0xe8, 0xae, 0xa8, 0x67, 0x6f, 0x0f, 0x3b, 0xf4, 0xed, 0xa9, 0xe8, 0xd0, 0xea,
	0x0c, 0x47, 0x1b, 0x45, 0x1e, 0x43, 0x0b, 0x4d, 0xce, 0xe1, 0xa7, 0xf7, 0xde, 0xdf, 0x01, 0x00,
	0x00, 0xff, 0xff, 0xc9, 0x26, 0xf2, 0xf4, 0xa5, 0x0f, 0x00, 0x00,
}
