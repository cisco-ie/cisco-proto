/*
Copyright 2019 Cisco Systems

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: lacp_drops.proto

package cisco_ios_xr_bundlemgr_oper_lacp_bundle_members_nodes_node_counters

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type LacpDrops_KEYS struct {
	Node                 string   `protobuf:"bytes,1,opt,name=node,proto3" json:"node,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LacpDrops_KEYS) Reset()         { *m = LacpDrops_KEYS{} }
func (m *LacpDrops_KEYS) String() string { return proto.CompactTextString(m) }
func (*LacpDrops_KEYS) ProtoMessage()    {}
func (*LacpDrops_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_f7dcf0915c64a4a2, []int{0}
}

func (m *LacpDrops_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LacpDrops_KEYS.Unmarshal(m, b)
}
func (m *LacpDrops_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LacpDrops_KEYS.Marshal(b, m, deterministic)
}
func (m *LacpDrops_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LacpDrops_KEYS.Merge(m, src)
}
func (m *LacpDrops_KEYS) XXX_Size() int {
	return xxx_messageInfo_LacpDrops_KEYS.Size(m)
}
func (m *LacpDrops_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_LacpDrops_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_LacpDrops_KEYS proto.InternalMessageInfo

func (m *LacpDrops_KEYS) GetNode() string {
	if m != nil {
		return m.Node
	}
	return ""
}

type LacpDrops struct {
	WrongPortCount           uint32   `protobuf:"varint,50,opt,name=wrong_port_count,json=wrongPortCount,proto3" json:"wrong_port_count,omitempty"`
	LastWrongPort            uint32   `protobuf:"varint,51,opt,name=last_wrong_port,json=lastWrongPort,proto3" json:"last_wrong_port,omitempty"`
	UnknownPortCount         uint32   `protobuf:"varint,52,opt,name=unknown_port_count,json=unknownPortCount,proto3" json:"unknown_port_count,omitempty"`
	UndecodablePackets       uint32   `protobuf:"varint,53,opt,name=undecodable_packets,json=undecodablePackets,proto3" json:"undecodable_packets,omitempty"`
	TimeSinceCleared         uint64   `protobuf:"varint,54,opt,name=time_since_cleared,json=timeSinceCleared,proto3" json:"time_since_cleared,omitempty"`
	TimeSinceUnexpectedEvent uint64   `protobuf:"varint,55,opt,name=time_since_unexpected_event,json=timeSinceUnexpectedEvent,proto3" json:"time_since_unexpected_event,omitempty"`
	TimeSinceLastUpdated     uint64   `protobuf:"varint,56,opt,name=time_since_last_updated,json=timeSinceLastUpdated,proto3" json:"time_since_last_updated,omitempty"`
	XXX_NoUnkeyedLiteral     struct{} `json:"-"`
	XXX_unrecognized         []byte   `json:"-"`
	XXX_sizecache            int32    `json:"-"`
}

func (m *LacpDrops) Reset()         { *m = LacpDrops{} }
func (m *LacpDrops) String() string { return proto.CompactTextString(m) }
func (*LacpDrops) ProtoMessage()    {}
func (*LacpDrops) Descriptor() ([]byte, []int) {
	return fileDescriptor_f7dcf0915c64a4a2, []int{1}
}

func (m *LacpDrops) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LacpDrops.Unmarshal(m, b)
}
func (m *LacpDrops) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LacpDrops.Marshal(b, m, deterministic)
}
func (m *LacpDrops) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LacpDrops.Merge(m, src)
}
func (m *LacpDrops) XXX_Size() int {
	return xxx_messageInfo_LacpDrops.Size(m)
}
func (m *LacpDrops) XXX_DiscardUnknown() {
	xxx_messageInfo_LacpDrops.DiscardUnknown(m)
}

var xxx_messageInfo_LacpDrops proto.InternalMessageInfo

func (m *LacpDrops) GetWrongPortCount() uint32 {
	if m != nil {
		return m.WrongPortCount
	}
	return 0
}

func (m *LacpDrops) GetLastWrongPort() uint32 {
	if m != nil {
		return m.LastWrongPort
	}
	return 0
}

func (m *LacpDrops) GetUnknownPortCount() uint32 {
	if m != nil {
		return m.UnknownPortCount
	}
	return 0
}

func (m *LacpDrops) GetUndecodablePackets() uint32 {
	if m != nil {
		return m.UndecodablePackets
	}
	return 0
}

func (m *LacpDrops) GetTimeSinceCleared() uint64 {
	if m != nil {
		return m.TimeSinceCleared
	}
	return 0
}

func (m *LacpDrops) GetTimeSinceUnexpectedEvent() uint64 {
	if m != nil {
		return m.TimeSinceUnexpectedEvent
	}
	return 0
}

func (m *LacpDrops) GetTimeSinceLastUpdated() uint64 {
	if m != nil {
		return m.TimeSinceLastUpdated
	}
	return 0
}

func init() {
	proto.RegisterType((*LacpDrops_KEYS)(nil), "cisco_ios_xr_bundlemgr_oper.lacp_bundle_members.nodes.node.counters.lacp_drops_KEYS")
	proto.RegisterType((*LacpDrops)(nil), "cisco_ios_xr_bundlemgr_oper.lacp_bundle_members.nodes.node.counters.lacp_drops")
}

func init() { proto.RegisterFile("lacp_drops.proto", fileDescriptor_f7dcf0915c64a4a2) }

var fileDescriptor_f7dcf0915c64a4a2 = []byte{
	// 313 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x4c, 0x91, 0x41, 0x4b, 0x2b, 0x31,
	0x14, 0x85, 0x99, 0x47, 0x79, 0xf0, 0x02, 0x7d, 0x0e, 0x51, 0x30, 0xe0, 0xa6, 0x14, 0x94, 0x59,
	0xc8, 0x08, 0xd6, 0xaa, 0x1b, 0x57, 0xa5, 0x2b, 0x5d, 0x94, 0x96, 0x22, 0xae, 0x2e, 0x33, 0xc9,
	0xa5, 0x0c, 0x9d, 0xc9, 0x0d, 0x49, 0xc6, 0xf6, 0xef, 0xfa, 0x4f, 0x24, 0x19, 0xed, 0xcc, 0x26,
	0x84, 0xf3, 0x7d, 0xe7, 0x40, 0x08, 0x4b, 0xeb, 0x42, 0x1a, 0x50, 0x96, 0x8c, 0xcb, 0x8d, 0x25,
	0x4f, 0x7c, 0x21, 0x2b, 0x27, 0x09, 0x2a, 0x72, 0x70, 0xb4, 0x50, 0xb6, 0x5a, 0xd5, 0xd8, 0xec,
	0x2c, 0x90, 0x41, 0x9b, 0x47, 0xbb, 0xcb, 0xa0, 0xc1, 0xa6, 0x44, 0xeb, 0x72, 0x4d, 0x0a, 0xbb,
	0x33, 0x97, 0xd4, 0x6a, 0x8f, 0xd6, 0x4d, 0xaf, 0xd9, 0x59, 0x3f, 0x0c, 0xaf, 0xcb, 0x8f, 0x0d,
	0xe7, 0x6c, 0x14, 0x1c, 0x91, 0x4c, 0x92, 0xec, 0xdf, 0x3a, 0xde, 0xa7, 0x5f, 0x7f, 0x18, 0xeb,
	0x3d, 0x9e, 0xb1, 0xf4, 0x60, 0x49, 0xef, 0xc0, 0x90, 0xf5, 0x10, 0xc7, 0xc4, 0xfd, 0x24, 0xc9,
	0xc6, 0xeb, 0xff, 0x31, 0x5f, 0x91, 0xf5, 0x8b, 0x90, 0xf2, 0x9b, 0xb0, 0xef, 0x3c, 0xf4, 0xba,
	0x98, 0x45, 0x71, 0x1c, 0xe2, 0xf7, 0x5f, 0x99, 0xdf, 0x32, 0xde, 0xea, 0xbd, 0xa6, 0x83, 0x1e,
	0x6e, 0x3e, 0x44, 0x35, 0xfd, 0x21, 0xfd, 0xea, 0x1d, 0x3b, 0x6f, 0xb5, 0x42, 0x49, 0xaa, 0x28,
	0x6b, 0x04, 0x53, 0xc8, 0x3d, 0x7a, 0x27, 0xe6, 0x51, 0xe7, 0x03, 0xb4, 0xea, 0x48, 0x98, 0xf7,
	0x55, 0x83, 0xe0, 0x2a, 0x2d, 0x11, 0x64, 0x8d, 0x85, 0x45, 0x25, 0x1e, 0x27, 0x49, 0x36, 0x5a,
	0xa7, 0x81, 0x6c, 0x02, 0x58, 0x74, 0x39, 0x7f, 0x61, 0x57, 0x03, 0xbb, 0xd5, 0x78, 0x34, 0x28,
	0x3d, 0x2a, 0xc0, 0x4f, 0xd4, 0x5e, 0x3c, 0xc5, 0x9a, 0x38, 0xd5, 0xb6, 0x27, 0x61, 0x19, 0x38,
	0x9f, 0xb3, 0xcb, 0x41, 0x3d, 0x3e, 0xbf, 0x35, 0xaa, 0xf0, 0xa8, 0xc4, 0x73, 0xac, 0x5e, 0x9c,
	0xaa, 0x6f, 0x85, 0xf3, 0xdb, 0x8e, 0x95, 0x7f, 0xe3, 0xb7, 0xce, 0xbe, 0x03, 0x00, 0x00, 0xff,
	0xff, 0xb2, 0xfb, 0xb6, 0xd8, 0xea, 0x01, 0x00, 0x00,
}
