/*
Copyright 2019 Cisco Systems

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: mpls_te_p2mp_lsp.proto

package cisco_ios_xr_mpls_te_oper_mpls_te_p2p_p2mp_tunnel_tunnel_remotes_tunnel_remote

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type MplsTeP2MpLsp_KEYS struct {
	LspId                uint32   `protobuf:"varint,1,opt,name=lsp_id,json=lspId,proto3" json:"lsp_id,omitempty"`
	TunnelId             uint32   `protobuf:"varint,2,opt,name=tunnel_id,json=tunnelId,proto3" json:"tunnel_id,omitempty"`
	ExtendedTunnelId     string   `protobuf:"bytes,3,opt,name=extended_tunnel_id,json=extendedTunnelId,proto3" json:"extended_tunnel_id,omitempty"`
	SourceAddress        string   `protobuf:"bytes,4,opt,name=source_address,json=sourceAddress,proto3" json:"source_address,omitempty"`
	Ctype                string   `protobuf:"bytes,5,opt,name=ctype,proto3" json:"ctype,omitempty"`
	DestinationAddress   string   `protobuf:"bytes,6,opt,name=destination_address,json=destinationAddress,proto3" json:"destination_address,omitempty"`
	P2MpId               uint32   `protobuf:"varint,7,opt,name=p2mp_id,json=p2mpId,proto3" json:"p2mp_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MplsTeP2MpLsp_KEYS) Reset()         { *m = MplsTeP2MpLsp_KEYS{} }
func (m *MplsTeP2MpLsp_KEYS) String() string { return proto.CompactTextString(m) }
func (*MplsTeP2MpLsp_KEYS) ProtoMessage()    {}
func (*MplsTeP2MpLsp_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_566d4710799f1740, []int{0}
}

func (m *MplsTeP2MpLsp_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsTeP2MpLsp_KEYS.Unmarshal(m, b)
}
func (m *MplsTeP2MpLsp_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsTeP2MpLsp_KEYS.Marshal(b, m, deterministic)
}
func (m *MplsTeP2MpLsp_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsTeP2MpLsp_KEYS.Merge(m, src)
}
func (m *MplsTeP2MpLsp_KEYS) XXX_Size() int {
	return xxx_messageInfo_MplsTeP2MpLsp_KEYS.Size(m)
}
func (m *MplsTeP2MpLsp_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsTeP2MpLsp_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_MplsTeP2MpLsp_KEYS proto.InternalMessageInfo

func (m *MplsTeP2MpLsp_KEYS) GetLspId() uint32 {
	if m != nil {
		return m.LspId
	}
	return 0
}

func (m *MplsTeP2MpLsp_KEYS) GetTunnelId() uint32 {
	if m != nil {
		return m.TunnelId
	}
	return 0
}

func (m *MplsTeP2MpLsp_KEYS) GetExtendedTunnelId() string {
	if m != nil {
		return m.ExtendedTunnelId
	}
	return ""
}

func (m *MplsTeP2MpLsp_KEYS) GetSourceAddress() string {
	if m != nil {
		return m.SourceAddress
	}
	return ""
}

func (m *MplsTeP2MpLsp_KEYS) GetCtype() string {
	if m != nil {
		return m.Ctype
	}
	return ""
}

func (m *MplsTeP2MpLsp_KEYS) GetDestinationAddress() string {
	if m != nil {
		return m.DestinationAddress
	}
	return ""
}

func (m *MplsTeP2MpLsp_KEYS) GetP2MpId() uint32 {
	if m != nil {
		return m.P2MpId
	}
	return 0
}

type TeLspFecCtypeDataT struct {
	FecCtype             string   `protobuf:"bytes,1,opt,name=fec_ctype,json=fecCtype,proto3" json:"fec_ctype,omitempty"`
	P2PLspDestination    string   `protobuf:"bytes,2,opt,name=p2p_lsp_destination,json=p2pLspDestination,proto3" json:"p2p_lsp_destination,omitempty"`
	FecDestinationP2MpId uint32   `protobuf:"varint,3,opt,name=fec_destination_p2mp_id,json=fecDestinationP2mpId,proto3" json:"fec_destination_p2mp_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TeLspFecCtypeDataT) Reset()         { *m = TeLspFecCtypeDataT{} }
func (m *TeLspFecCtypeDataT) String() string { return proto.CompactTextString(m) }
func (*TeLspFecCtypeDataT) ProtoMessage()    {}
func (*TeLspFecCtypeDataT) Descriptor() ([]byte, []int) {
	return fileDescriptor_566d4710799f1740, []int{1}
}

func (m *TeLspFecCtypeDataT) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TeLspFecCtypeDataT.Unmarshal(m, b)
}
func (m *TeLspFecCtypeDataT) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TeLspFecCtypeDataT.Marshal(b, m, deterministic)
}
func (m *TeLspFecCtypeDataT) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TeLspFecCtypeDataT.Merge(m, src)
}
func (m *TeLspFecCtypeDataT) XXX_Size() int {
	return xxx_messageInfo_TeLspFecCtypeDataT.Size(m)
}
func (m *TeLspFecCtypeDataT) XXX_DiscardUnknown() {
	xxx_messageInfo_TeLspFecCtypeDataT.DiscardUnknown(m)
}

var xxx_messageInfo_TeLspFecCtypeDataT proto.InternalMessageInfo

func (m *TeLspFecCtypeDataT) GetFecCtype() string {
	if m != nil {
		return m.FecCtype
	}
	return ""
}

func (m *TeLspFecCtypeDataT) GetP2PLspDestination() string {
	if m != nil {
		return m.P2PLspDestination
	}
	return ""
}

func (m *TeLspFecCtypeDataT) GetFecDestinationP2MpId() uint32 {
	if m != nil {
		return m.FecDestinationP2MpId
	}
	return 0
}

type TeLspFecT struct {
	FecLspId             uint32              `protobuf:"varint,1,opt,name=fec_lsp_id,json=fecLspId,proto3" json:"fec_lsp_id,omitempty"`
	FecTunnelId          uint32              `protobuf:"varint,2,opt,name=fec_tunnel_id,json=fecTunnelId,proto3" json:"fec_tunnel_id,omitempty"`
	FecExtendedTunnelId  string              `protobuf:"bytes,3,opt,name=fec_extended_tunnel_id,json=fecExtendedTunnelId,proto3" json:"fec_extended_tunnel_id,omitempty"`
	FecSource            string              `protobuf:"bytes,4,opt,name=fec_source,json=fecSource,proto3" json:"fec_source,omitempty"`
	FecDestinationInfo   *TeLspFecCtypeDataT `protobuf:"bytes,5,opt,name=fec_destination_info,json=fecDestinationInfo,proto3" json:"fec_destination_info,omitempty"`
	FecVrf               string              `protobuf:"bytes,6,opt,name=fec_vrf,json=fecVrf,proto3" json:"fec_vrf,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *TeLspFecT) Reset()         { *m = TeLspFecT{} }
func (m *TeLspFecT) String() string { return proto.CompactTextString(m) }
func (*TeLspFecT) ProtoMessage()    {}
func (*TeLspFecT) Descriptor() ([]byte, []int) {
	return fileDescriptor_566d4710799f1740, []int{2}
}

func (m *TeLspFecT) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TeLspFecT.Unmarshal(m, b)
}
func (m *TeLspFecT) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TeLspFecT.Marshal(b, m, deterministic)
}
func (m *TeLspFecT) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TeLspFecT.Merge(m, src)
}
func (m *TeLspFecT) XXX_Size() int {
	return xxx_messageInfo_TeLspFecT.Size(m)
}
func (m *TeLspFecT) XXX_DiscardUnknown() {
	xxx_messageInfo_TeLspFecT.DiscardUnknown(m)
}

var xxx_messageInfo_TeLspFecT proto.InternalMessageInfo

func (m *TeLspFecT) GetFecLspId() uint32 {
	if m != nil {
		return m.FecLspId
	}
	return 0
}

func (m *TeLspFecT) GetFecTunnelId() uint32 {
	if m != nil {
		return m.FecTunnelId
	}
	return 0
}

func (m *TeLspFecT) GetFecExtendedTunnelId() string {
	if m != nil {
		return m.FecExtendedTunnelId
	}
	return ""
}

func (m *TeLspFecT) GetFecSource() string {
	if m != nil {
		return m.FecSource
	}
	return ""
}

func (m *TeLspFecT) GetFecDestinationInfo() *TeLspFecCtypeDataT {
	if m != nil {
		return m.FecDestinationInfo
	}
	return nil
}

func (m *TeLspFecT) GetFecVrf() string {
	if m != nil {
		return m.FecVrf
	}
	return ""
}

type TeS2LFecT struct {
	S2LFecSubgroupId         uint32   `protobuf:"varint,1,opt,name=s2l_fec_subgroup_id,json=s2lFecSubgroupId,proto3" json:"s2l_fec_subgroup_id,omitempty"`
	S2LFecLspId              uint32   `protobuf:"varint,2,opt,name=s2l_fec_lsp_id,json=s2lFecLspId,proto3" json:"s2l_fec_lsp_id,omitempty"`
	S2LFecTunnelId           uint32   `protobuf:"varint,3,opt,name=s2l_fec_tunnel_id,json=s2lFecTunnelId,proto3" json:"s2l_fec_tunnel_id,omitempty"`
	S2LFecExtendedTunnelId   string   `protobuf:"bytes,4,opt,name=s2l_fec_extended_tunnel_id,json=s2lFecExtendedTunnelId,proto3" json:"s2l_fec_extended_tunnel_id,omitempty"`
	S2LFecSource             string   `protobuf:"bytes,5,opt,name=s2l_fec_source,json=s2lFecSource,proto3" json:"s2l_fec_source,omitempty"`
	S2LFecDest               string   `protobuf:"bytes,6,opt,name=s2l_fec_dest,json=s2lFecDest,proto3" json:"s2l_fec_dest,omitempty"`
	S2LFecP2MpId             uint32   `protobuf:"varint,7,opt,name=s2l_fec_p2mp_id,json=s2lFecP2mpId,proto3" json:"s2l_fec_p2mp_id,omitempty"`
	S2LFecSubgroupOriginator string   `protobuf:"bytes,8,opt,name=s2l_fec_subgroup_originator,json=s2lFecSubgroupOriginator,proto3" json:"s2l_fec_subgroup_originator,omitempty"`
	S2LFecCtype              string   `protobuf:"bytes,9,opt,name=s2l_fec_ctype,json=s2lFecCtype,proto3" json:"s2l_fec_ctype,omitempty"`
	S2LFecVrf                string   `protobuf:"bytes,10,opt,name=s2l_fec_vrf,json=s2lFecVrf,proto3" json:"s2l_fec_vrf,omitempty"`
	XXX_NoUnkeyedLiteral     struct{} `json:"-"`
	XXX_unrecognized         []byte   `json:"-"`
	XXX_sizecache            int32    `json:"-"`
}

func (m *TeS2LFecT) Reset()         { *m = TeS2LFecT{} }
func (m *TeS2LFecT) String() string { return proto.CompactTextString(m) }
func (*TeS2LFecT) ProtoMessage()    {}
func (*TeS2LFecT) Descriptor() ([]byte, []int) {
	return fileDescriptor_566d4710799f1740, []int{3}
}

func (m *TeS2LFecT) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TeS2LFecT.Unmarshal(m, b)
}
func (m *TeS2LFecT) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TeS2LFecT.Marshal(b, m, deterministic)
}
func (m *TeS2LFecT) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TeS2LFecT.Merge(m, src)
}
func (m *TeS2LFecT) XXX_Size() int {
	return xxx_messageInfo_TeS2LFecT.Size(m)
}
func (m *TeS2LFecT) XXX_DiscardUnknown() {
	xxx_messageInfo_TeS2LFecT.DiscardUnknown(m)
}

var xxx_messageInfo_TeS2LFecT proto.InternalMessageInfo

func (m *TeS2LFecT) GetS2LFecSubgroupId() uint32 {
	if m != nil {
		return m.S2LFecSubgroupId
	}
	return 0
}

func (m *TeS2LFecT) GetS2LFecLspId() uint32 {
	if m != nil {
		return m.S2LFecLspId
	}
	return 0
}

func (m *TeS2LFecT) GetS2LFecTunnelId() uint32 {
	if m != nil {
		return m.S2LFecTunnelId
	}
	return 0
}

func (m *TeS2LFecT) GetS2LFecExtendedTunnelId() string {
	if m != nil {
		return m.S2LFecExtendedTunnelId
	}
	return ""
}

func (m *TeS2LFecT) GetS2LFecSource() string {
	if m != nil {
		return m.S2LFecSource
	}
	return ""
}

func (m *TeS2LFecT) GetS2LFecDest() string {
	if m != nil {
		return m.S2LFecDest
	}
	return ""
}

func (m *TeS2LFecT) GetS2LFecP2MpId() uint32 {
	if m != nil {
		return m.S2LFecP2MpId
	}
	return 0
}

func (m *TeS2LFecT) GetS2LFecSubgroupOriginator() string {
	if m != nil {
		return m.S2LFecSubgroupOriginator
	}
	return ""
}

func (m *TeS2LFecT) GetS2LFecCtype() string {
	if m != nil {
		return m.S2LFecCtype
	}
	return ""
}

func (m *TeS2LFecT) GetS2LFecVrf() string {
	if m != nil {
		return m.S2LFecVrf
	}
	return ""
}

type AffinityNameBag struct {
	ConstraintType          uint32   `protobuf:"varint,1,opt,name=constraint_type,json=constraintType,proto3" json:"constraint_type,omitempty"`
	ConstraintValue         uint32   `protobuf:"varint,2,opt,name=constraint_value,json=constraintValue,proto3" json:"constraint_value,omitempty"`
	ForwardRefValue         uint32   `protobuf:"varint,3,opt,name=forward_ref_value,json=forwardRefValue,proto3" json:"forward_ref_value,omitempty"`
	ConstraintExtendedValue []uint32 `protobuf:"varint,4,rep,packed,name=constraint_extended_value,json=constraintExtendedValue,proto3" json:"constraint_extended_value,omitempty"`
	ExtendedForwardRefValue []uint32 `protobuf:"varint,5,rep,packed,name=extended_forward_ref_value,json=extendedForwardRefValue,proto3" json:"extended_forward_ref_value,omitempty"`
	XXX_NoUnkeyedLiteral    struct{} `json:"-"`
	XXX_unrecognized        []byte   `json:"-"`
	XXX_sizecache           int32    `json:"-"`
}

func (m *AffinityNameBag) Reset()         { *m = AffinityNameBag{} }
func (m *AffinityNameBag) String() string { return proto.CompactTextString(m) }
func (*AffinityNameBag) ProtoMessage()    {}
func (*AffinityNameBag) Descriptor() ([]byte, []int) {
	return fileDescriptor_566d4710799f1740, []int{4}
}

func (m *AffinityNameBag) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AffinityNameBag.Unmarshal(m, b)
}
func (m *AffinityNameBag) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AffinityNameBag.Marshal(b, m, deterministic)
}
func (m *AffinityNameBag) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AffinityNameBag.Merge(m, src)
}
func (m *AffinityNameBag) XXX_Size() int {
	return xxx_messageInfo_AffinityNameBag.Size(m)
}
func (m *AffinityNameBag) XXX_DiscardUnknown() {
	xxx_messageInfo_AffinityNameBag.DiscardUnknown(m)
}

var xxx_messageInfo_AffinityNameBag proto.InternalMessageInfo

func (m *AffinityNameBag) GetConstraintType() uint32 {
	if m != nil {
		return m.ConstraintType
	}
	return 0
}

func (m *AffinityNameBag) GetConstraintValue() uint32 {
	if m != nil {
		return m.ConstraintValue
	}
	return 0
}

func (m *AffinityNameBag) GetForwardRefValue() uint32 {
	if m != nil {
		return m.ForwardRefValue
	}
	return 0
}

func (m *AffinityNameBag) GetConstraintExtendedValue() []uint32 {
	if m != nil {
		return m.ConstraintExtendedValue
	}
	return nil
}

func (m *AffinityNameBag) GetExtendedForwardRefValue() []uint32 {
	if m != nil {
		return m.ExtendedForwardRefValue
	}
	return nil
}

type MplsTeTunnelsAffinityInfo struct {
	AffinityBits         uint32             `protobuf:"varint,1,opt,name=affinity_bits,json=affinityBits,proto3" json:"affinity_bits,omitempty"`
	AffinityMask         uint32             `protobuf:"varint,2,opt,name=affinity_mask,json=affinityMask,proto3" json:"affinity_mask,omitempty"`
	NamedAffinity        []*AffinityNameBag `protobuf:"bytes,3,rep,name=named_affinity,json=namedAffinity,proto3" json:"named_affinity,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *MplsTeTunnelsAffinityInfo) Reset()         { *m = MplsTeTunnelsAffinityInfo{} }
func (m *MplsTeTunnelsAffinityInfo) String() string { return proto.CompactTextString(m) }
func (*MplsTeTunnelsAffinityInfo) ProtoMessage()    {}
func (*MplsTeTunnelsAffinityInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_566d4710799f1740, []int{5}
}

func (m *MplsTeTunnelsAffinityInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsTeTunnelsAffinityInfo.Unmarshal(m, b)
}
func (m *MplsTeTunnelsAffinityInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsTeTunnelsAffinityInfo.Marshal(b, m, deterministic)
}
func (m *MplsTeTunnelsAffinityInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsTeTunnelsAffinityInfo.Merge(m, src)
}
func (m *MplsTeTunnelsAffinityInfo) XXX_Size() int {
	return xxx_messageInfo_MplsTeTunnelsAffinityInfo.Size(m)
}
func (m *MplsTeTunnelsAffinityInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsTeTunnelsAffinityInfo.DiscardUnknown(m)
}

var xxx_messageInfo_MplsTeTunnelsAffinityInfo proto.InternalMessageInfo

func (m *MplsTeTunnelsAffinityInfo) GetAffinityBits() uint32 {
	if m != nil {
		return m.AffinityBits
	}
	return 0
}

func (m *MplsTeTunnelsAffinityInfo) GetAffinityMask() uint32 {
	if m != nil {
		return m.AffinityMask
	}
	return 0
}

func (m *MplsTeTunnelsAffinityInfo) GetNamedAffinity() []*AffinityNameBag {
	if m != nil {
		return m.NamedAffinity
	}
	return nil
}

type MplsTeAttributeSetVersion struct {
	AttributeType        string   `protobuf:"bytes,1,opt,name=attribute_type,json=attributeType,proto3" json:"attribute_type,omitempty"`
	Generation           uint32   `protobuf:"varint,2,opt,name=generation,proto3" json:"generation,omitempty"`
	IsDefault            bool     `protobuf:"varint,3,opt,name=is_default,json=isDefault,proto3" json:"is_default,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MplsTeAttributeSetVersion) Reset()         { *m = MplsTeAttributeSetVersion{} }
func (m *MplsTeAttributeSetVersion) String() string { return proto.CompactTextString(m) }
func (*MplsTeAttributeSetVersion) ProtoMessage()    {}
func (*MplsTeAttributeSetVersion) Descriptor() ([]byte, []int) {
	return fileDescriptor_566d4710799f1740, []int{6}
}

func (m *MplsTeAttributeSetVersion) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsTeAttributeSetVersion.Unmarshal(m, b)
}
func (m *MplsTeAttributeSetVersion) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsTeAttributeSetVersion.Marshal(b, m, deterministic)
}
func (m *MplsTeAttributeSetVersion) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsTeAttributeSetVersion.Merge(m, src)
}
func (m *MplsTeAttributeSetVersion) XXX_Size() int {
	return xxx_messageInfo_MplsTeAttributeSetVersion.Size(m)
}
func (m *MplsTeAttributeSetVersion) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsTeAttributeSetVersion.DiscardUnknown(m)
}

var xxx_messageInfo_MplsTeAttributeSetVersion proto.InternalMessageInfo

func (m *MplsTeAttributeSetVersion) GetAttributeType() string {
	if m != nil {
		return m.AttributeType
	}
	return ""
}

func (m *MplsTeAttributeSetVersion) GetGeneration() uint32 {
	if m != nil {
		return m.Generation
	}
	return 0
}

func (m *MplsTeAttributeSetVersion) GetIsDefault() bool {
	if m != nil {
		return m.IsDefault
	}
	return false
}

type MplsTeAttributeSetBfdRevPath struct {
	PathType             string   `protobuf:"bytes,1,opt,name=path_type,json=pathType,proto3" json:"path_type,omitempty"`
	BindingLabel         uint32   `protobuf:"varint,2,opt,name=binding_label,json=bindingLabel,proto3" json:"binding_label,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MplsTeAttributeSetBfdRevPath) Reset()         { *m = MplsTeAttributeSetBfdRevPath{} }
func (m *MplsTeAttributeSetBfdRevPath) String() string { return proto.CompactTextString(m) }
func (*MplsTeAttributeSetBfdRevPath) ProtoMessage()    {}
func (*MplsTeAttributeSetBfdRevPath) Descriptor() ([]byte, []int) {
	return fileDescriptor_566d4710799f1740, []int{7}
}

func (m *MplsTeAttributeSetBfdRevPath) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsTeAttributeSetBfdRevPath.Unmarshal(m, b)
}
func (m *MplsTeAttributeSetBfdRevPath) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsTeAttributeSetBfdRevPath.Marshal(b, m, deterministic)
}
func (m *MplsTeAttributeSetBfdRevPath) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsTeAttributeSetBfdRevPath.Merge(m, src)
}
func (m *MplsTeAttributeSetBfdRevPath) XXX_Size() int {
	return xxx_messageInfo_MplsTeAttributeSetBfdRevPath.Size(m)
}
func (m *MplsTeAttributeSetBfdRevPath) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsTeAttributeSetBfdRevPath.DiscardUnknown(m)
}

var xxx_messageInfo_MplsTeAttributeSetBfdRevPath proto.InternalMessageInfo

func (m *MplsTeAttributeSetBfdRevPath) GetPathType() string {
	if m != nil {
		return m.PathType
	}
	return ""
}

func (m *MplsTeAttributeSetBfdRevPath) GetBindingLabel() uint32 {
	if m != nil {
		return m.BindingLabel
	}
	return 0
}

type MplsTeAttributeSetPathOption struct {
	ConfiguredBandwidth                 uint32                        `protobuf:"varint,1,opt,name=configured_bandwidth,json=configuredBandwidth,proto3" json:"configured_bandwidth,omitempty"`
	CostLimit                           uint32                        `protobuf:"varint,2,opt,name=cost_limit,json=costLimit,proto3" json:"cost_limit,omitempty"`
	DsteClassType                       uint32                        `protobuf:"varint,3,opt,name=dste_class_type,json=dsteClassType,proto3" json:"dste_class_type,omitempty"`
	BandwidthType                       string                        `protobuf:"bytes,4,opt,name=bandwidth_type,json=bandwidthType,proto3" json:"bandwidth_type,omitempty"`
	IsBandwidthConfigured               bool                          `protobuf:"varint,5,opt,name=is_bandwidth_configured,json=isBandwidthConfigured,proto3" json:"is_bandwidth_configured,omitempty"`
	IsCostLimitConfigured               bool                          `protobuf:"varint,6,opt,name=is_cost_limit_configured,json=isCostLimitConfigured,proto3" json:"is_cost_limit_configured,omitempty"`
	Affinity                            *MplsTeTunnelsAffinityInfo    `protobuf:"bytes,7,opt,name=affinity,proto3" json:"affinity,omitempty"`
	IsAffinityConfigured                bool                          `protobuf:"varint,8,opt,name=is_affinity_configured,json=isAffinityConfigured,proto3" json:"is_affinity_configured,omitempty"`
	TunnelId                            []uint32                      `protobuf:"varint,9,rep,packed,name=tunnel_id,json=tunnelId,proto3" json:"tunnel_id,omitempty"`
	Generation                          uint32                        `protobuf:"varint,10,opt,name=generation,proto3" json:"generation,omitempty"`
	VersionInfo                         []*MplsTeAttributeSetVersion  `protobuf:"bytes,11,rep,name=version_info,json=versionInfo,proto3" json:"version_info,omitempty"`
	PathInvalidationTimeout             uint32                        `protobuf:"varint,12,opt,name=path_invalidation_timeout,json=pathInvalidationTimeout,proto3" json:"path_invalidation_timeout,omitempty"`
	PathInvalidationAction              uint32                        `protobuf:"varint,13,opt,name=path_invalidation_action,json=pathInvalidationAction,proto3" json:"path_invalidation_action,omitempty"`
	IsPathInvalidationTimeoutConfigured bool                          `protobuf:"varint,14,opt,name=is_path_invalidation_timeout_configured,json=isPathInvalidationTimeoutConfigured,proto3" json:"is_path_invalidation_timeout_configured,omitempty"`
	IsPathInvalidationActionConfigured  bool                          `protobuf:"varint,15,opt,name=is_path_invalidation_action_configured,json=isPathInvalidationActionConfigured,proto3" json:"is_path_invalidation_action_configured,omitempty"`
	ExcludeListName                     string                        `protobuf:"bytes,16,opt,name=exclude_list_name,json=excludeListName,proto3" json:"exclude_list_name,omitempty"`
	IsExcludeListNameConfigured         bool                          `protobuf:"varint,17,opt,name=is_exclude_list_name_configured,json=isExcludeListNameConfigured,proto3" json:"is_exclude_list_name_configured,omitempty"`
	IsPceConfigured                     bool                          `protobuf:"varint,18,opt,name=is_pce_configured,json=isPceConfigured,proto3" json:"is_pce_configured,omitempty"`
	IsPceDisjSourceConfigured           bool                          `protobuf:"varint,19,opt,name=is_pce_disj_source_configured,json=isPceDisjSourceConfigured,proto3" json:"is_pce_disj_source_configured,omitempty"`
	IsPceDisjTypeConfigured             bool                          `protobuf:"varint,20,opt,name=is_pce_disj_type_configured,json=isPceDisjTypeConfigured,proto3" json:"is_pce_disj_type_configured,omitempty"`
	IsPceDisjGroupIdConfigured          bool                          `protobuf:"varint,21,opt,name=is_pce_disj_group_id_configured,json=isPceDisjGroupIdConfigured,proto3" json:"is_pce_disj_group_id_configured,omitempty"`
	PcedpSourceAddress                  uint32                        `protobuf:"varint,22,opt,name=pcedp_source_address,json=pcedpSourceAddress,proto3" json:"pcedp_source_address,omitempty"`
	PcedpType                           string                        `protobuf:"bytes,23,opt,name=pcedp_type,json=pcedpType,proto3" json:"pcedp_type,omitempty"`
	PcedpGroupId                        uint32                        `protobuf:"varint,24,opt,name=pcedp_group_id,json=pcedpGroupId,proto3" json:"pcedp_group_id,omitempty"`
	IsPcebDjSourceConfigured            bool                          `protobuf:"varint,25,opt,name=is_pceb_dj_source_configured,json=isPcebDjSourceConfigured,proto3" json:"is_pceb_dj_source_configured,omitempty"`
	IsPcebdGroupIdConfigured            bool                          `protobuf:"varint,26,opt,name=is_pcebd_group_id_configured,json=isPcebdGroupIdConfigured,proto3" json:"is_pcebd_group_id_configured,omitempty"`
	PcebdSourceAddress                  uint32                        `protobuf:"varint,27,opt,name=pcebd_source_address,json=pcebdSourceAddress,proto3" json:"pcebd_source_address,omitempty"`
	PcebdGroupId                        uint32                        `protobuf:"varint,28,opt,name=pcebd_group_id,json=pcebdGroupId,proto3" json:"pcebd_group_id,omitempty"`
	BfdReversePath                      *MplsTeAttributeSetBfdRevPath `protobuf:"bytes,29,opt,name=bfd_reverse_path,json=bfdReversePath,proto3" json:"bfd_reverse_path,omitempty"`
	IsBfdReversePatConfigured           bool                          `protobuf:"varint,30,opt,name=is_bfd_reverse_pat_configured,json=isBfdReversePatConfigured,proto3" json:"is_bfd_reverse_pat_configured,omitempty"`
	IsDelayLimitConfigured              bool                          `protobuf:"varint,31,opt,name=is_delay_limit_configured,json=isDelayLimitConfigured,proto3" json:"is_delay_limit_configured,omitempty"`
	DelayLimit                          uint32                        `protobuf:"varint,32,opt,name=delay_limit,json=delayLimit,proto3" json:"delay_limit,omitempty"`
	XXX_NoUnkeyedLiteral                struct{}                      `json:"-"`
	XXX_unrecognized                    []byte                        `json:"-"`
	XXX_sizecache                       int32                         `json:"-"`
}

func (m *MplsTeAttributeSetPathOption) Reset()         { *m = MplsTeAttributeSetPathOption{} }
func (m *MplsTeAttributeSetPathOption) String() string { return proto.CompactTextString(m) }
func (*MplsTeAttributeSetPathOption) ProtoMessage()    {}
func (*MplsTeAttributeSetPathOption) Descriptor() ([]byte, []int) {
	return fileDescriptor_566d4710799f1740, []int{8}
}

func (m *MplsTeAttributeSetPathOption) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsTeAttributeSetPathOption.Unmarshal(m, b)
}
func (m *MplsTeAttributeSetPathOption) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsTeAttributeSetPathOption.Marshal(b, m, deterministic)
}
func (m *MplsTeAttributeSetPathOption) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsTeAttributeSetPathOption.Merge(m, src)
}
func (m *MplsTeAttributeSetPathOption) XXX_Size() int {
	return xxx_messageInfo_MplsTeAttributeSetPathOption.Size(m)
}
func (m *MplsTeAttributeSetPathOption) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsTeAttributeSetPathOption.DiscardUnknown(m)
}

var xxx_messageInfo_MplsTeAttributeSetPathOption proto.InternalMessageInfo

func (m *MplsTeAttributeSetPathOption) GetConfiguredBandwidth() uint32 {
	if m != nil {
		return m.ConfiguredBandwidth
	}
	return 0
}

func (m *MplsTeAttributeSetPathOption) GetCostLimit() uint32 {
	if m != nil {
		return m.CostLimit
	}
	return 0
}

func (m *MplsTeAttributeSetPathOption) GetDsteClassType() uint32 {
	if m != nil {
		return m.DsteClassType
	}
	return 0
}

func (m *MplsTeAttributeSetPathOption) GetBandwidthType() string {
	if m != nil {
		return m.BandwidthType
	}
	return ""
}

func (m *MplsTeAttributeSetPathOption) GetIsBandwidthConfigured() bool {
	if m != nil {
		return m.IsBandwidthConfigured
	}
	return false
}

func (m *MplsTeAttributeSetPathOption) GetIsCostLimitConfigured() bool {
	if m != nil {
		return m.IsCostLimitConfigured
	}
	return false
}

func (m *MplsTeAttributeSetPathOption) GetAffinity() *MplsTeTunnelsAffinityInfo {
	if m != nil {
		return m.Affinity
	}
	return nil
}

func (m *MplsTeAttributeSetPathOption) GetIsAffinityConfigured() bool {
	if m != nil {
		return m.IsAffinityConfigured
	}
	return false
}

func (m *MplsTeAttributeSetPathOption) GetTunnelId() []uint32 {
	if m != nil {
		return m.TunnelId
	}
	return nil
}

func (m *MplsTeAttributeSetPathOption) GetGeneration() uint32 {
	if m != nil {
		return m.Generation
	}
	return 0
}

func (m *MplsTeAttributeSetPathOption) GetVersionInfo() []*MplsTeAttributeSetVersion {
	if m != nil {
		return m.VersionInfo
	}
	return nil
}

func (m *MplsTeAttributeSetPathOption) GetPathInvalidationTimeout() uint32 {
	if m != nil {
		return m.PathInvalidationTimeout
	}
	return 0
}

func (m *MplsTeAttributeSetPathOption) GetPathInvalidationAction() uint32 {
	if m != nil {
		return m.PathInvalidationAction
	}
	return 0
}

func (m *MplsTeAttributeSetPathOption) GetIsPathInvalidationTimeoutConfigured() bool {
	if m != nil {
		return m.IsPathInvalidationTimeoutConfigured
	}
	return false
}

func (m *MplsTeAttributeSetPathOption) GetIsPathInvalidationActionConfigured() bool {
	if m != nil {
		return m.IsPathInvalidationActionConfigured
	}
	return false
}

func (m *MplsTeAttributeSetPathOption) GetExcludeListName() string {
	if m != nil {
		return m.ExcludeListName
	}
	return ""
}

func (m *MplsTeAttributeSetPathOption) GetIsExcludeListNameConfigured() bool {
	if m != nil {
		return m.IsExcludeListNameConfigured
	}
	return false
}

func (m *MplsTeAttributeSetPathOption) GetIsPceConfigured() bool {
	if m != nil {
		return m.IsPceConfigured
	}
	return false
}

func (m *MplsTeAttributeSetPathOption) GetIsPceDisjSourceConfigured() bool {
	if m != nil {
		return m.IsPceDisjSourceConfigured
	}
	return false
}

func (m *MplsTeAttributeSetPathOption) GetIsPceDisjTypeConfigured() bool {
	if m != nil {
		return m.IsPceDisjTypeConfigured
	}
	return false
}

func (m *MplsTeAttributeSetPathOption) GetIsPceDisjGroupIdConfigured() bool {
	if m != nil {
		return m.IsPceDisjGroupIdConfigured
	}
	return false
}

func (m *MplsTeAttributeSetPathOption) GetPcedpSourceAddress() uint32 {
	if m != nil {
		return m.PcedpSourceAddress
	}
	return 0
}

func (m *MplsTeAttributeSetPathOption) GetPcedpType() string {
	if m != nil {
		return m.PcedpType
	}
	return ""
}

func (m *MplsTeAttributeSetPathOption) GetPcedpGroupId() uint32 {
	if m != nil {
		return m.PcedpGroupId
	}
	return 0
}

func (m *MplsTeAttributeSetPathOption) GetIsPcebDjSourceConfigured() bool {
	if m != nil {
		return m.IsPcebDjSourceConfigured
	}
	return false
}

func (m *MplsTeAttributeSetPathOption) GetIsPcebdGroupIdConfigured() bool {
	if m != nil {
		return m.IsPcebdGroupIdConfigured
	}
	return false
}

func (m *MplsTeAttributeSetPathOption) GetPcebdSourceAddress() uint32 {
	if m != nil {
		return m.PcebdSourceAddress
	}
	return 0
}

func (m *MplsTeAttributeSetPathOption) GetPcebdGroupId() uint32 {
	if m != nil {
		return m.PcebdGroupId
	}
	return 0
}

func (m *MplsTeAttributeSetPathOption) GetBfdReversePath() *MplsTeAttributeSetBfdRevPath {
	if m != nil {
		return m.BfdReversePath
	}
	return nil
}

func (m *MplsTeAttributeSetPathOption) GetIsBfdReversePatConfigured() bool {
	if m != nil {
		return m.IsBfdReversePatConfigured
	}
	return false
}

func (m *MplsTeAttributeSetPathOption) GetIsDelayLimitConfigured() bool {
	if m != nil {
		return m.IsDelayLimitConfigured
	}
	return false
}

func (m *MplsTeAttributeSetPathOption) GetDelayLimit() uint32 {
	if m != nil {
		return m.DelayLimit
	}
	return 0
}

type MplsTeAttributeSetSigName struct {
	Name                   string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	SourceType             string   `protobuf:"bytes,2,opt,name=source_type,json=sourceType,proto3" json:"source_type,omitempty"`
	ProtectedInterfaceType string   `protobuf:"bytes,3,opt,name=protected_interface_type,json=protectedInterfaceType,proto3" json:"protected_interface_type,omitempty"`
	IsMpAddresses          bool     `protobuf:"varint,4,opt,name=is_mp_addresses,json=isMpAddresses,proto3" json:"is_mp_addresses,omitempty"`
	XXX_NoUnkeyedLiteral   struct{} `json:"-"`
	XXX_unrecognized       []byte   `json:"-"`
	XXX_sizecache          int32    `json:"-"`
}

func (m *MplsTeAttributeSetSigName) Reset()         { *m = MplsTeAttributeSetSigName{} }
func (m *MplsTeAttributeSetSigName) String() string { return proto.CompactTextString(m) }
func (*MplsTeAttributeSetSigName) ProtoMessage()    {}
func (*MplsTeAttributeSetSigName) Descriptor() ([]byte, []int) {
	return fileDescriptor_566d4710799f1740, []int{9}
}

func (m *MplsTeAttributeSetSigName) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsTeAttributeSetSigName.Unmarshal(m, b)
}
func (m *MplsTeAttributeSetSigName) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsTeAttributeSetSigName.Marshal(b, m, deterministic)
}
func (m *MplsTeAttributeSetSigName) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsTeAttributeSetSigName.Merge(m, src)
}
func (m *MplsTeAttributeSetSigName) XXX_Size() int {
	return xxx_messageInfo_MplsTeAttributeSetSigName.Size(m)
}
func (m *MplsTeAttributeSetSigName) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsTeAttributeSetSigName.DiscardUnknown(m)
}

var xxx_messageInfo_MplsTeAttributeSetSigName proto.InternalMessageInfo

func (m *MplsTeAttributeSetSigName) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *MplsTeAttributeSetSigName) GetSourceType() string {
	if m != nil {
		return m.SourceType
	}
	return ""
}

func (m *MplsTeAttributeSetSigName) GetProtectedInterfaceType() string {
	if m != nil {
		return m.ProtectedInterfaceType
	}
	return ""
}

func (m *MplsTeAttributeSetSigName) GetIsMpAddresses() bool {
	if m != nil {
		return m.IsMpAddresses
	}
	return false
}

type MplsTeLoggingAttributes struct {
	LspState                      bool     `protobuf:"varint,1,opt,name=lsp_state,json=lspState,proto3" json:"lsp_state,omitempty"`
	S2LState                      bool     `protobuf:"varint,2,opt,name=s2l_state,json=s2lState,proto3" json:"s2l_state,omitempty"`
	LspReRoute                    bool     `protobuf:"varint,3,opt,name=lsp_re_route,json=lspReRoute,proto3" json:"lsp_re_route,omitempty"`
	LspReOpt                      bool     `protobuf:"varint,4,opt,name=lsp_re_opt,json=lspReOpt,proto3" json:"lsp_re_opt,omitempty"`
	LspInsufficientBw             bool     `protobuf:"varint,5,opt,name=lsp_insufficient_bw,json=lspInsufficientBw,proto3" json:"lsp_insufficient_bw,omitempty"`
	LspBandwidthChange            bool     `protobuf:"varint,6,opt,name=lsp_bandwidth_change,json=lspBandwidthChange,proto3" json:"lsp_bandwidth_change,omitempty"`
	LspPcalcFailureLoggingEnabled bool     `protobuf:"varint,7,opt,name=lsp_pcalc_failure_logging_enabled,json=lspPcalcFailureLoggingEnabled,proto3" json:"lsp_pcalc_failure_logging_enabled,omitempty"`
	AllLoggingEnabled             bool     `protobuf:"varint,8,opt,name=all_logging_enabled,json=allLoggingEnabled,proto3" json:"all_logging_enabled,omitempty"`
	XXX_NoUnkeyedLiteral          struct{} `json:"-"`
	XXX_unrecognized              []byte   `json:"-"`
	XXX_sizecache                 int32    `json:"-"`
}

func (m *MplsTeLoggingAttributes) Reset()         { *m = MplsTeLoggingAttributes{} }
func (m *MplsTeLoggingAttributes) String() string { return proto.CompactTextString(m) }
func (*MplsTeLoggingAttributes) ProtoMessage()    {}
func (*MplsTeLoggingAttributes) Descriptor() ([]byte, []int) {
	return fileDescriptor_566d4710799f1740, []int{10}
}

func (m *MplsTeLoggingAttributes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsTeLoggingAttributes.Unmarshal(m, b)
}
func (m *MplsTeLoggingAttributes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsTeLoggingAttributes.Marshal(b, m, deterministic)
}
func (m *MplsTeLoggingAttributes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsTeLoggingAttributes.Merge(m, src)
}
func (m *MplsTeLoggingAttributes) XXX_Size() int {
	return xxx_messageInfo_MplsTeLoggingAttributes.Size(m)
}
func (m *MplsTeLoggingAttributes) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsTeLoggingAttributes.DiscardUnknown(m)
}

var xxx_messageInfo_MplsTeLoggingAttributes proto.InternalMessageInfo

func (m *MplsTeLoggingAttributes) GetLspState() bool {
	if m != nil {
		return m.LspState
	}
	return false
}

func (m *MplsTeLoggingAttributes) GetS2LState() bool {
	if m != nil {
		return m.S2LState
	}
	return false
}

func (m *MplsTeLoggingAttributes) GetLspReRoute() bool {
	if m != nil {
		return m.LspReRoute
	}
	return false
}

func (m *MplsTeLoggingAttributes) GetLspReOpt() bool {
	if m != nil {
		return m.LspReOpt
	}
	return false
}

func (m *MplsTeLoggingAttributes) GetLspInsufficientBw() bool {
	if m != nil {
		return m.LspInsufficientBw
	}
	return false
}

func (m *MplsTeLoggingAttributes) GetLspBandwidthChange() bool {
	if m != nil {
		return m.LspBandwidthChange
	}
	return false
}

func (m *MplsTeLoggingAttributes) GetLspPcalcFailureLoggingEnabled() bool {
	if m != nil {
		return m.LspPcalcFailureLoggingEnabled
	}
	return false
}

func (m *MplsTeLoggingAttributes) GetAllLoggingEnabled() bool {
	if m != nil {
		return m.AllLoggingEnabled
	}
	return false
}

type MplsTeProtectedIfNameStr struct {
	ProtectedInterface   string   `protobuf:"bytes,1,opt,name=protected_interface,json=protectedInterface,proto3" json:"protected_interface,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MplsTeProtectedIfNameStr) Reset()         { *m = MplsTeProtectedIfNameStr{} }
func (m *MplsTeProtectedIfNameStr) String() string { return proto.CompactTextString(m) }
func (*MplsTeProtectedIfNameStr) ProtoMessage()    {}
func (*MplsTeProtectedIfNameStr) Descriptor() ([]byte, []int) {
	return fileDescriptor_566d4710799f1740, []int{11}
}

func (m *MplsTeProtectedIfNameStr) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsTeProtectedIfNameStr.Unmarshal(m, b)
}
func (m *MplsTeProtectedIfNameStr) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsTeProtectedIfNameStr.Marshal(b, m, deterministic)
}
func (m *MplsTeProtectedIfNameStr) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsTeProtectedIfNameStr.Merge(m, src)
}
func (m *MplsTeProtectedIfNameStr) XXX_Size() int {
	return xxx_messageInfo_MplsTeProtectedIfNameStr.Size(m)
}
func (m *MplsTeProtectedIfNameStr) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsTeProtectedIfNameStr.DiscardUnknown(m)
}

var xxx_messageInfo_MplsTeProtectedIfNameStr proto.InternalMessageInfo

func (m *MplsTeProtectedIfNameStr) GetProtectedInterface() string {
	if m != nil {
		return m.ProtectedInterface
	}
	return ""
}

type MplsTeAttributeSetAutoBackup struct {
	IsSignalledNameConfigured bool                        `protobuf:"varint,1,opt,name=is_signalled_name_configured,json=isSignalledNameConfigured,proto3" json:"is_signalled_name_configured,omitempty"`
	SignalledName             *MplsTeAttributeSetSigName  `protobuf:"bytes,2,opt,name=signalled_name,json=signalledName,proto3" json:"signalled_name,omitempty"`
	SetupPriority             uint32                      `protobuf:"varint,3,opt,name=setup_priority,json=setupPriority,proto3" json:"setup_priority,omitempty"`
	HoldPriority              uint32                      `protobuf:"varint,4,opt,name=hold_priority,json=holdPriority,proto3" json:"hold_priority,omitempty"`
	IsPriorityConfigured      bool                        `protobuf:"varint,5,opt,name=is_priority_configured,json=isPriorityConfigured,proto3" json:"is_priority_configured,omitempty"`
	PolicyClass               uint32                      `protobuf:"varint,6,opt,name=policy_class,json=policyClass,proto3" json:"policy_class,omitempty"`
	PolicyClassEntry          []uint32                    `protobuf:"varint,7,rep,packed,name=policy_class_entry,json=policyClassEntry,proto3" json:"policy_class_entry,omitempty"`
	IsPolicyclassConfigured   bool                        `protobuf:"varint,8,opt,name=is_policyclass_configured,json=isPolicyclassConfigured,proto3" json:"is_policyclass_configured,omitempty"`
	Affinity                  *MplsTeTunnelsAffinityInfo  `protobuf:"bytes,9,opt,name=affinity,proto3" json:"affinity,omitempty"`
	IsAffinityConfigured      bool                        `protobuf:"varint,10,opt,name=is_affinity_configured,json=isAffinityConfigured,proto3" json:"is_affinity_configured,omitempty"`
	RecordRoute               bool                        `protobuf:"varint,11,opt,name=record_route,json=recordRoute,proto3" json:"record_route,omitempty"`
	Logging                   *MplsTeLoggingAttributes    `protobuf:"bytes,12,opt,name=logging,proto3" json:"logging,omitempty"`
	ProtectedInterface        []*MplsTeProtectedIfNameStr `protobuf:"bytes,13,rep,name=protected_interface,json=protectedInterface,proto3" json:"protected_interface,omitempty"`
	TunnelId                  []uint32                    `protobuf:"varint,14,rep,packed,name=tunnel_id,json=tunnelId,proto3" json:"tunnel_id,omitempty"`
	XXX_NoUnkeyedLiteral      struct{}                    `json:"-"`
	XXX_unrecognized          []byte                      `json:"-"`
	XXX_sizecache             int32                       `json:"-"`
}

func (m *MplsTeAttributeSetAutoBackup) Reset()         { *m = MplsTeAttributeSetAutoBackup{} }
func (m *MplsTeAttributeSetAutoBackup) String() string { return proto.CompactTextString(m) }
func (*MplsTeAttributeSetAutoBackup) ProtoMessage()    {}
func (*MplsTeAttributeSetAutoBackup) Descriptor() ([]byte, []int) {
	return fileDescriptor_566d4710799f1740, []int{12}
}

func (m *MplsTeAttributeSetAutoBackup) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsTeAttributeSetAutoBackup.Unmarshal(m, b)
}
func (m *MplsTeAttributeSetAutoBackup) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsTeAttributeSetAutoBackup.Marshal(b, m, deterministic)
}
func (m *MplsTeAttributeSetAutoBackup) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsTeAttributeSetAutoBackup.Merge(m, src)
}
func (m *MplsTeAttributeSetAutoBackup) XXX_Size() int {
	return xxx_messageInfo_MplsTeAttributeSetAutoBackup.Size(m)
}
func (m *MplsTeAttributeSetAutoBackup) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsTeAttributeSetAutoBackup.DiscardUnknown(m)
}

var xxx_messageInfo_MplsTeAttributeSetAutoBackup proto.InternalMessageInfo

func (m *MplsTeAttributeSetAutoBackup) GetIsSignalledNameConfigured() bool {
	if m != nil {
		return m.IsSignalledNameConfigured
	}
	return false
}

func (m *MplsTeAttributeSetAutoBackup) GetSignalledName() *MplsTeAttributeSetSigName {
	if m != nil {
		return m.SignalledName
	}
	return nil
}

func (m *MplsTeAttributeSetAutoBackup) GetSetupPriority() uint32 {
	if m != nil {
		return m.SetupPriority
	}
	return 0
}

func (m *MplsTeAttributeSetAutoBackup) GetHoldPriority() uint32 {
	if m != nil {
		return m.HoldPriority
	}
	return 0
}

func (m *MplsTeAttributeSetAutoBackup) GetIsPriorityConfigured() bool {
	if m != nil {
		return m.IsPriorityConfigured
	}
	return false
}

func (m *MplsTeAttributeSetAutoBackup) GetPolicyClass() uint32 {
	if m != nil {
		return m.PolicyClass
	}
	return 0
}

func (m *MplsTeAttributeSetAutoBackup) GetPolicyClassEntry() []uint32 {
	if m != nil {
		return m.PolicyClassEntry
	}
	return nil
}

func (m *MplsTeAttributeSetAutoBackup) GetIsPolicyclassConfigured() bool {
	if m != nil {
		return m.IsPolicyclassConfigured
	}
	return false
}

func (m *MplsTeAttributeSetAutoBackup) GetAffinity() *MplsTeTunnelsAffinityInfo {
	if m != nil {
		return m.Affinity
	}
	return nil
}

func (m *MplsTeAttributeSetAutoBackup) GetIsAffinityConfigured() bool {
	if m != nil {
		return m.IsAffinityConfigured
	}
	return false
}

func (m *MplsTeAttributeSetAutoBackup) GetRecordRoute() bool {
	if m != nil {
		return m.RecordRoute
	}
	return false
}

func (m *MplsTeAttributeSetAutoBackup) GetLogging() *MplsTeLoggingAttributes {
	if m != nil {
		return m.Logging
	}
	return nil
}

func (m *MplsTeAttributeSetAutoBackup) GetProtectedInterface() []*MplsTeProtectedIfNameStr {
	if m != nil {
		return m.ProtectedInterface
	}
	return nil
}

func (m *MplsTeAttributeSetAutoBackup) GetTunnelId() []uint32 {
	if m != nil {
		return m.TunnelId
	}
	return nil
}

type MplsTeAttributeSetAutoMesh struct {
	ConfiguredBandwidth      uint32                     `protobuf:"varint,1,opt,name=configured_bandwidth,json=configuredBandwidth,proto3" json:"configured_bandwidth,omitempty"`
	DsteClassType            uint32                     `protobuf:"varint,2,opt,name=dste_class_type,json=dsteClassType,proto3" json:"dste_class_type,omitempty"`
	IsBandwidthConfigured    bool                       `protobuf:"varint,3,opt,name=is_bandwidth_configured,json=isBandwidthConfigured,proto3" json:"is_bandwidth_configured,omitempty"`
	SetupPriority            uint32                     `protobuf:"varint,4,opt,name=setup_priority,json=setupPriority,proto3" json:"setup_priority,omitempty"`
	HoldPriority             uint32                     `protobuf:"varint,5,opt,name=hold_priority,json=holdPriority,proto3" json:"hold_priority,omitempty"`
	IsPriorityConfigured     bool                       `protobuf:"varint,6,opt,name=is_priority_configured,json=isPriorityConfigured,proto3" json:"is_priority_configured,omitempty"`
	PolicyClass              uint32                     `protobuf:"varint,7,opt,name=policy_class,json=policyClass,proto3" json:"policy_class,omitempty"`
	PolicyClassEntry         []uint32                   `protobuf:"varint,8,rep,packed,name=policy_class_entry,json=policyClassEntry,proto3" json:"policy_class_entry,omitempty"`
	IsPolicyclassConfigured  bool                       `protobuf:"varint,9,opt,name=is_policyclass_configured,json=isPolicyclassConfigured,proto3" json:"is_policyclass_configured,omitempty"`
	ForwardClass             uint32                     `protobuf:"varint,10,opt,name=forward_class,json=forwardClass,proto3" json:"forward_class,omitempty"`
	IsForwardClassConfigured bool                       `protobuf:"varint,11,opt,name=is_forward_class_configured,json=isForwardClassConfigured,proto3" json:"is_forward_class_configured,omitempty"`
	Affinity                 *MplsTeTunnelsAffinityInfo `protobuf:"bytes,12,opt,name=affinity,proto3" json:"affinity,omitempty"`
	IsAffinityConfigured     bool                       `protobuf:"varint,13,opt,name=is_affinity_configured,json=isAffinityConfigured,proto3" json:"is_affinity_configured,omitempty"`
	FastReroute              bool                       `protobuf:"varint,14,opt,name=fast_reroute,json=fastReroute,proto3" json:"fast_reroute,omitempty"`
	FrrNodeProtection        bool                       `protobuf:"varint,15,opt,name=frr_node_protection,json=frrNodeProtection,proto3" json:"frr_node_protection,omitempty"`
	FrrBandwidthProtection   bool                       `protobuf:"varint,16,opt,name=frr_bandwidth_protection,json=frrBandwidthProtection,proto3" json:"frr_bandwidth_protection,omitempty"`
	RecordRoute              bool                       `protobuf:"varint,17,opt,name=record_route,json=recordRoute,proto3" json:"record_route,omitempty"`
	AutoBandwidthCollect     bool                       `protobuf:"varint,18,opt,name=auto_bandwidth_collect,json=autoBandwidthCollect,proto3" json:"auto_bandwidth_collect,omitempty"`
	AutoRouteAnnounce        bool                       `protobuf:"varint,19,opt,name=auto_route_announce,json=autoRouteAnnounce,proto3" json:"auto_route_announce,omitempty"`
	SoftPreemptionConfigured bool                       `protobuf:"varint,20,opt,name=soft_preemption_configured,json=softPreemptionConfigured,proto3" json:"soft_preemption_configured,omitempty"`
	Logging                  *MplsTeLoggingAttributes   `protobuf:"bytes,21,opt,name=logging,proto3" json:"logging,omitempty"`
	Bandwidth                uint32                     `protobuf:"varint,22,opt,name=bandwidth,proto3" json:"bandwidth,omitempty"`
	LoadShare                uint32                     `protobuf:"varint,23,opt,name=load_share,json=loadShare,proto3" json:"load_share,omitempty"`
	IsInterfaceBwConfigured  bool                       `protobuf:"varint,24,opt,name=is_interface_bw_configured,json=isInterfaceBwConfigured,proto3" json:"is_interface_bw_configured,omitempty"`
	MeshGroupId              []uint32                   `protobuf:"varint,25,rep,packed,name=mesh_group_id,json=meshGroupId,proto3" json:"mesh_group_id,omitempty"`
	TunnelId                 []uint32                   `protobuf:"varint,26,rep,packed,name=tunnel_id,json=tunnelId,proto3" json:"tunnel_id,omitempty"`
	XXX_NoUnkeyedLiteral     struct{}                   `json:"-"`
	XXX_unrecognized         []byte                     `json:"-"`
	XXX_sizecache            int32                      `json:"-"`
}

func (m *MplsTeAttributeSetAutoMesh) Reset()         { *m = MplsTeAttributeSetAutoMesh{} }
func (m *MplsTeAttributeSetAutoMesh) String() string { return proto.CompactTextString(m) }
func (*MplsTeAttributeSetAutoMesh) ProtoMessage()    {}
func (*MplsTeAttributeSetAutoMesh) Descriptor() ([]byte, []int) {
	return fileDescriptor_566d4710799f1740, []int{13}
}

func (m *MplsTeAttributeSetAutoMesh) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsTeAttributeSetAutoMesh.Unmarshal(m, b)
}
func (m *MplsTeAttributeSetAutoMesh) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsTeAttributeSetAutoMesh.Marshal(b, m, deterministic)
}
func (m *MplsTeAttributeSetAutoMesh) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsTeAttributeSetAutoMesh.Merge(m, src)
}
func (m *MplsTeAttributeSetAutoMesh) XXX_Size() int {
	return xxx_messageInfo_MplsTeAttributeSetAutoMesh.Size(m)
}
func (m *MplsTeAttributeSetAutoMesh) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsTeAttributeSetAutoMesh.DiscardUnknown(m)
}

var xxx_messageInfo_MplsTeAttributeSetAutoMesh proto.InternalMessageInfo

func (m *MplsTeAttributeSetAutoMesh) GetConfiguredBandwidth() uint32 {
	if m != nil {
		return m.ConfiguredBandwidth
	}
	return 0
}

func (m *MplsTeAttributeSetAutoMesh) GetDsteClassType() uint32 {
	if m != nil {
		return m.DsteClassType
	}
	return 0
}

func (m *MplsTeAttributeSetAutoMesh) GetIsBandwidthConfigured() bool {
	if m != nil {
		return m.IsBandwidthConfigured
	}
	return false
}

func (m *MplsTeAttributeSetAutoMesh) GetSetupPriority() uint32 {
	if m != nil {
		return m.SetupPriority
	}
	return 0
}

func (m *MplsTeAttributeSetAutoMesh) GetHoldPriority() uint32 {
	if m != nil {
		return m.HoldPriority
	}
	return 0
}

func (m *MplsTeAttributeSetAutoMesh) GetIsPriorityConfigured() bool {
	if m != nil {
		return m.IsPriorityConfigured
	}
	return false
}

func (m *MplsTeAttributeSetAutoMesh) GetPolicyClass() uint32 {
	if m != nil {
		return m.PolicyClass
	}
	return 0
}

func (m *MplsTeAttributeSetAutoMesh) GetPolicyClassEntry() []uint32 {
	if m != nil {
		return m.PolicyClassEntry
	}
	return nil
}

func (m *MplsTeAttributeSetAutoMesh) GetIsPolicyclassConfigured() bool {
	if m != nil {
		return m.IsPolicyclassConfigured
	}
	return false
}

func (m *MplsTeAttributeSetAutoMesh) GetForwardClass() uint32 {
	if m != nil {
		return m.ForwardClass
	}
	return 0
}

func (m *MplsTeAttributeSetAutoMesh) GetIsForwardClassConfigured() bool {
	if m != nil {
		return m.IsForwardClassConfigured
	}
	return false
}

func (m *MplsTeAttributeSetAutoMesh) GetAffinity() *MplsTeTunnelsAffinityInfo {
	if m != nil {
		return m.Affinity
	}
	return nil
}

func (m *MplsTeAttributeSetAutoMesh) GetIsAffinityConfigured() bool {
	if m != nil {
		return m.IsAffinityConfigured
	}
	return false
}

func (m *MplsTeAttributeSetAutoMesh) GetFastReroute() bool {
	if m != nil {
		return m.FastReroute
	}
	return false
}

func (m *MplsTeAttributeSetAutoMesh) GetFrrNodeProtection() bool {
	if m != nil {
		return m.FrrNodeProtection
	}
	return false
}

func (m *MplsTeAttributeSetAutoMesh) GetFrrBandwidthProtection() bool {
	if m != nil {
		return m.FrrBandwidthProtection
	}
	return false
}

func (m *MplsTeAttributeSetAutoMesh) GetRecordRoute() bool {
	if m != nil {
		return m.RecordRoute
	}
	return false
}

func (m *MplsTeAttributeSetAutoMesh) GetAutoBandwidthCollect() bool {
	if m != nil {
		return m.AutoBandwidthCollect
	}
	return false
}

func (m *MplsTeAttributeSetAutoMesh) GetAutoRouteAnnounce() bool {
	if m != nil {
		return m.AutoRouteAnnounce
	}
	return false
}

func (m *MplsTeAttributeSetAutoMesh) GetSoftPreemptionConfigured() bool {
	if m != nil {
		return m.SoftPreemptionConfigured
	}
	return false
}

func (m *MplsTeAttributeSetAutoMesh) GetLogging() *MplsTeLoggingAttributes {
	if m != nil {
		return m.Logging
	}
	return nil
}

func (m *MplsTeAttributeSetAutoMesh) GetBandwidth() uint32 {
	if m != nil {
		return m.Bandwidth
	}
	return 0
}

func (m *MplsTeAttributeSetAutoMesh) GetLoadShare() uint32 {
	if m != nil {
		return m.LoadShare
	}
	return 0
}

func (m *MplsTeAttributeSetAutoMesh) GetIsInterfaceBwConfigured() bool {
	if m != nil {
		return m.IsInterfaceBwConfigured
	}
	return false
}

func (m *MplsTeAttributeSetAutoMesh) GetMeshGroupId() []uint32 {
	if m != nil {
		return m.MeshGroupId
	}
	return nil
}

func (m *MplsTeAttributeSetAutoMesh) GetTunnelId() []uint32 {
	if m != nil {
		return m.TunnelId
	}
	return nil
}

type TeXroSubobjIpv4 struct {
	Address              string   `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	PrefixLen            uint32   `protobuf:"varint,2,opt,name=prefix_len,json=prefixLen,proto3" json:"prefix_len,omitempty"`
	Attribute            string   `protobuf:"bytes,3,opt,name=attribute,proto3" json:"attribute,omitempty"`
	ExclusionType        string   `protobuf:"bytes,4,opt,name=exclusion_type,json=exclusionType,proto3" json:"exclusion_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TeXroSubobjIpv4) Reset()         { *m = TeXroSubobjIpv4{} }
func (m *TeXroSubobjIpv4) String() string { return proto.CompactTextString(m) }
func (*TeXroSubobjIpv4) ProtoMessage()    {}
func (*TeXroSubobjIpv4) Descriptor() ([]byte, []int) {
	return fileDescriptor_566d4710799f1740, []int{14}
}

func (m *TeXroSubobjIpv4) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TeXroSubobjIpv4.Unmarshal(m, b)
}
func (m *TeXroSubobjIpv4) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TeXroSubobjIpv4.Marshal(b, m, deterministic)
}
func (m *TeXroSubobjIpv4) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TeXroSubobjIpv4.Merge(m, src)
}
func (m *TeXroSubobjIpv4) XXX_Size() int {
	return xxx_messageInfo_TeXroSubobjIpv4.Size(m)
}
func (m *TeXroSubobjIpv4) XXX_DiscardUnknown() {
	xxx_messageInfo_TeXroSubobjIpv4.DiscardUnknown(m)
}

var xxx_messageInfo_TeXroSubobjIpv4 proto.InternalMessageInfo

func (m *TeXroSubobjIpv4) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *TeXroSubobjIpv4) GetPrefixLen() uint32 {
	if m != nil {
		return m.PrefixLen
	}
	return 0
}

func (m *TeXroSubobjIpv4) GetAttribute() string {
	if m != nil {
		return m.Attribute
	}
	return ""
}

func (m *TeXroSubobjIpv4) GetExclusionType() string {
	if m != nil {
		return m.ExclusionType
	}
	return ""
}

type TeXroSubobjIpv6 struct {
	Address              string   `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	PrefixLen            uint32   `protobuf:"varint,2,opt,name=prefix_len,json=prefixLen,proto3" json:"prefix_len,omitempty"`
	Attribute            string   `protobuf:"bytes,3,opt,name=attribute,proto3" json:"attribute,omitempty"`
	ExclusionType        string   `protobuf:"bytes,4,opt,name=exclusion_type,json=exclusionType,proto3" json:"exclusion_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TeXroSubobjIpv6) Reset()         { *m = TeXroSubobjIpv6{} }
func (m *TeXroSubobjIpv6) String() string { return proto.CompactTextString(m) }
func (*TeXroSubobjIpv6) ProtoMessage()    {}
func (*TeXroSubobjIpv6) Descriptor() ([]byte, []int) {
	return fileDescriptor_566d4710799f1740, []int{15}
}

func (m *TeXroSubobjIpv6) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TeXroSubobjIpv6.Unmarshal(m, b)
}
func (m *TeXroSubobjIpv6) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TeXroSubobjIpv6.Marshal(b, m, deterministic)
}
func (m *TeXroSubobjIpv6) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TeXroSubobjIpv6.Merge(m, src)
}
func (m *TeXroSubobjIpv6) XXX_Size() int {
	return xxx_messageInfo_TeXroSubobjIpv6.Size(m)
}
func (m *TeXroSubobjIpv6) XXX_DiscardUnknown() {
	xxx_messageInfo_TeXroSubobjIpv6.DiscardUnknown(m)
}

var xxx_messageInfo_TeXroSubobjIpv6 proto.InternalMessageInfo

func (m *TeXroSubobjIpv6) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *TeXroSubobjIpv6) GetPrefixLen() uint32 {
	if m != nil {
		return m.PrefixLen
	}
	return 0
}

func (m *TeXroSubobjIpv6) GetAttribute() string {
	if m != nil {
		return m.Attribute
	}
	return ""
}

func (m *TeXroSubobjIpv6) GetExclusionType() string {
	if m != nil {
		return m.ExclusionType
	}
	return ""
}

type TeXroSubobjUnnum struct {
	TeRouterId           string   `protobuf:"bytes,1,opt,name=te_router_id,json=teRouterId,proto3" json:"te_router_id,omitempty"`
	InterfaceId          uint32   `protobuf:"varint,2,opt,name=interface_id,json=interfaceId,proto3" json:"interface_id,omitempty"`
	Attribute            string   `protobuf:"bytes,3,opt,name=attribute,proto3" json:"attribute,omitempty"`
	ExclusionType        string   `protobuf:"bytes,4,opt,name=exclusion_type,json=exclusionType,proto3" json:"exclusion_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TeXroSubobjUnnum) Reset()         { *m = TeXroSubobjUnnum{} }
func (m *TeXroSubobjUnnum) String() string { return proto.CompactTextString(m) }
func (*TeXroSubobjUnnum) ProtoMessage()    {}
func (*TeXroSubobjUnnum) Descriptor() ([]byte, []int) {
	return fileDescriptor_566d4710799f1740, []int{16}
}

func (m *TeXroSubobjUnnum) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TeXroSubobjUnnum.Unmarshal(m, b)
}
func (m *TeXroSubobjUnnum) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TeXroSubobjUnnum.Marshal(b, m, deterministic)
}
func (m *TeXroSubobjUnnum) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TeXroSubobjUnnum.Merge(m, src)
}
func (m *TeXroSubobjUnnum) XXX_Size() int {
	return xxx_messageInfo_TeXroSubobjUnnum.Size(m)
}
func (m *TeXroSubobjUnnum) XXX_DiscardUnknown() {
	xxx_messageInfo_TeXroSubobjUnnum.DiscardUnknown(m)
}

var xxx_messageInfo_TeXroSubobjUnnum proto.InternalMessageInfo

func (m *TeXroSubobjUnnum) GetTeRouterId() string {
	if m != nil {
		return m.TeRouterId
	}
	return ""
}

func (m *TeXroSubobjUnnum) GetInterfaceId() uint32 {
	if m != nil {
		return m.InterfaceId
	}
	return 0
}

func (m *TeXroSubobjUnnum) GetAttribute() string {
	if m != nil {
		return m.Attribute
	}
	return ""
}

func (m *TeXroSubobjUnnum) GetExclusionType() string {
	if m != nil {
		return m.ExclusionType
	}
	return ""
}

type TeXroSubobjAs struct {
	AsNumber             uint32   `protobuf:"varint,1,opt,name=as_number,json=asNumber,proto3" json:"as_number,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TeXroSubobjAs) Reset()         { *m = TeXroSubobjAs{} }
func (m *TeXroSubobjAs) String() string { return proto.CompactTextString(m) }
func (*TeXroSubobjAs) ProtoMessage()    {}
func (*TeXroSubobjAs) Descriptor() ([]byte, []int) {
	return fileDescriptor_566d4710799f1740, []int{17}
}

func (m *TeXroSubobjAs) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TeXroSubobjAs.Unmarshal(m, b)
}
func (m *TeXroSubobjAs) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TeXroSubobjAs.Marshal(b, m, deterministic)
}
func (m *TeXroSubobjAs) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TeXroSubobjAs.Merge(m, src)
}
func (m *TeXroSubobjAs) XXX_Size() int {
	return xxx_messageInfo_TeXroSubobjAs.Size(m)
}
func (m *TeXroSubobjAs) XXX_DiscardUnknown() {
	xxx_messageInfo_TeXroSubobjAs.DiscardUnknown(m)
}

var xxx_messageInfo_TeXroSubobjAs proto.InternalMessageInfo

func (m *TeXroSubobjAs) GetAsNumber() uint32 {
	if m != nil {
		return m.AsNumber
	}
	return 0
}

type TeXroSubobjSrlg struct {
	SrlgId               uint32   `protobuf:"varint,1,opt,name=srlg_id,json=srlgId,proto3" json:"srlg_id,omitempty"`
	ExclusionType        string   `protobuf:"bytes,2,opt,name=exclusion_type,json=exclusionType,proto3" json:"exclusion_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TeXroSubobjSrlg) Reset()         { *m = TeXroSubobjSrlg{} }
func (m *TeXroSubobjSrlg) String() string { return proto.CompactTextString(m) }
func (*TeXroSubobjSrlg) ProtoMessage()    {}
func (*TeXroSubobjSrlg) Descriptor() ([]byte, []int) {
	return fileDescriptor_566d4710799f1740, []int{18}
}

func (m *TeXroSubobjSrlg) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TeXroSubobjSrlg.Unmarshal(m, b)
}
func (m *TeXroSubobjSrlg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TeXroSubobjSrlg.Marshal(b, m, deterministic)
}
func (m *TeXroSubobjSrlg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TeXroSubobjSrlg.Merge(m, src)
}
func (m *TeXroSubobjSrlg) XXX_Size() int {
	return xxx_messageInfo_TeXroSubobjSrlg.Size(m)
}
func (m *TeXroSubobjSrlg) XXX_DiscardUnknown() {
	xxx_messageInfo_TeXroSubobjSrlg.DiscardUnknown(m)
}

var xxx_messageInfo_TeXroSubobjSrlg proto.InternalMessageInfo

func (m *TeXroSubobjSrlg) GetSrlgId() uint32 {
	if m != nil {
		return m.SrlgId
	}
	return 0
}

func (m *TeXroSubobjSrlg) GetExclusionType() string {
	if m != nil {
		return m.ExclusionType
	}
	return ""
}

type TeXroSubobjP2PLsp struct {
	Fec                      *TeLspFecT `protobuf:"bytes,1,opt,name=fec,proto3" json:"fec,omitempty"`
	IgnoreLspId              bool       `protobuf:"varint,2,opt,name=ignore_lsp_id,json=ignoreLspId,proto3" json:"ignore_lsp_id,omitempty"`
	ProcessingNodeException  bool       `protobuf:"varint,3,opt,name=processing_node_exception,json=processingNodeException,proto3" json:"processing_node_exception,omitempty"`
	PenultimateNodeException bool       `protobuf:"varint,4,opt,name=penultimate_node_exception,json=penultimateNodeException,proto3" json:"penultimate_node_exception,omitempty"`
	DestinationNodeException bool       `protobuf:"varint,5,opt,name=destination_node_exception,json=destinationNodeException,proto3" json:"destination_node_exception,omitempty"`
	ExclusionType            string     `protobuf:"bytes,6,opt,name=exclusion_type,json=exclusionType,proto3" json:"exclusion_type,omitempty"`
	XXX_NoUnkeyedLiteral     struct{}   `json:"-"`
	XXX_unrecognized         []byte     `json:"-"`
	XXX_sizecache            int32      `json:"-"`
}

func (m *TeXroSubobjP2PLsp) Reset()         { *m = TeXroSubobjP2PLsp{} }
func (m *TeXroSubobjP2PLsp) String() string { return proto.CompactTextString(m) }
func (*TeXroSubobjP2PLsp) ProtoMessage()    {}
func (*TeXroSubobjP2PLsp) Descriptor() ([]byte, []int) {
	return fileDescriptor_566d4710799f1740, []int{19}
}

func (m *TeXroSubobjP2PLsp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TeXroSubobjP2PLsp.Unmarshal(m, b)
}
func (m *TeXroSubobjP2PLsp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TeXroSubobjP2PLsp.Marshal(b, m, deterministic)
}
func (m *TeXroSubobjP2PLsp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TeXroSubobjP2PLsp.Merge(m, src)
}
func (m *TeXroSubobjP2PLsp) XXX_Size() int {
	return xxx_messageInfo_TeXroSubobjP2PLsp.Size(m)
}
func (m *TeXroSubobjP2PLsp) XXX_DiscardUnknown() {
	xxx_messageInfo_TeXroSubobjP2PLsp.DiscardUnknown(m)
}

var xxx_messageInfo_TeXroSubobjP2PLsp proto.InternalMessageInfo

func (m *TeXroSubobjP2PLsp) GetFec() *TeLspFecT {
	if m != nil {
		return m.Fec
	}
	return nil
}

func (m *TeXroSubobjP2PLsp) GetIgnoreLspId() bool {
	if m != nil {
		return m.IgnoreLspId
	}
	return false
}

func (m *TeXroSubobjP2PLsp) GetProcessingNodeException() bool {
	if m != nil {
		return m.ProcessingNodeException
	}
	return false
}

func (m *TeXroSubobjP2PLsp) GetPenultimateNodeException() bool {
	if m != nil {
		return m.PenultimateNodeException
	}
	return false
}

func (m *TeXroSubobjP2PLsp) GetDestinationNodeException() bool {
	if m != nil {
		return m.DestinationNodeException
	}
	return false
}

func (m *TeXroSubobjP2PLsp) GetExclusionType() string {
	if m != nil {
		return m.ExclusionType
	}
	return ""
}

type TeXroSubobj struct {
	Type                 string             `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Ipv4Subobject        *TeXroSubobjIpv4   `protobuf:"bytes,2,opt,name=ipv4_subobject,json=ipv4Subobject,proto3" json:"ipv4_subobject,omitempty"`
	Ipv6Subobject        *TeXroSubobjIpv6   `protobuf:"bytes,3,opt,name=ipv6_subobject,json=ipv6Subobject,proto3" json:"ipv6_subobject,omitempty"`
	UnnumberedSubobject  *TeXroSubobjUnnum  `protobuf:"bytes,4,opt,name=unnumbered_subobject,json=unnumberedSubobject,proto3" json:"unnumbered_subobject,omitempty"`
	AsSubobject          *TeXroSubobjAs     `protobuf:"bytes,5,opt,name=as_subobject,json=asSubobject,proto3" json:"as_subobject,omitempty"`
	SrlgSubobject        *TeXroSubobjSrlg   `protobuf:"bytes,6,opt,name=srlg_subobject,json=srlgSubobject,proto3" json:"srlg_subobject,omitempty"`
	LspSubobject         *TeXroSubobjP2PLsp `protobuf:"bytes,7,opt,name=lsp_subobject,json=lspSubobject,proto3" json:"lsp_subobject,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *TeXroSubobj) Reset()         { *m = TeXroSubobj{} }
func (m *TeXroSubobj) String() string { return proto.CompactTextString(m) }
func (*TeXroSubobj) ProtoMessage()    {}
func (*TeXroSubobj) Descriptor() ([]byte, []int) {
	return fileDescriptor_566d4710799f1740, []int{20}
}

func (m *TeXroSubobj) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TeXroSubobj.Unmarshal(m, b)
}
func (m *TeXroSubobj) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TeXroSubobj.Marshal(b, m, deterministic)
}
func (m *TeXroSubobj) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TeXroSubobj.Merge(m, src)
}
func (m *TeXroSubobj) XXX_Size() int {
	return xxx_messageInfo_TeXroSubobj.Size(m)
}
func (m *TeXroSubobj) XXX_DiscardUnknown() {
	xxx_messageInfo_TeXroSubobj.DiscardUnknown(m)
}

var xxx_messageInfo_TeXroSubobj proto.InternalMessageInfo

func (m *TeXroSubobj) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *TeXroSubobj) GetIpv4Subobject() *TeXroSubobjIpv4 {
	if m != nil {
		return m.Ipv4Subobject
	}
	return nil
}

func (m *TeXroSubobj) GetIpv6Subobject() *TeXroSubobjIpv6 {
	if m != nil {
		return m.Ipv6Subobject
	}
	return nil
}

func (m *TeXroSubobj) GetUnnumberedSubobject() *TeXroSubobjUnnum {
	if m != nil {
		return m.UnnumberedSubobject
	}
	return nil
}

func (m *TeXroSubobj) GetAsSubobject() *TeXroSubobjAs {
	if m != nil {
		return m.AsSubobject
	}
	return nil
}

func (m *TeXroSubobj) GetSrlgSubobject() *TeXroSubobjSrlg {
	if m != nil {
		return m.SrlgSubobject
	}
	return nil
}

func (m *TeXroSubobj) GetLspSubobject() *TeXroSubobjP2PLsp {
	if m != nil {
		return m.LspSubobject
	}
	return nil
}

type TeXro struct {
	XroSubobject         []*TeXroSubobj `protobuf:"bytes,1,rep,name=xro_subobject,json=xroSubobject,proto3" json:"xro_subobject,omitempty"`
	MutualDiversityFlag  bool           `protobuf:"varint,2,opt,name=mutual_diversity_flag,json=mutualDiversityFlag,proto3" json:"mutual_diversity_flag,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *TeXro) Reset()         { *m = TeXro{} }
func (m *TeXro) String() string { return proto.CompactTextString(m) }
func (*TeXro) ProtoMessage()    {}
func (*TeXro) Descriptor() ([]byte, []int) {
	return fileDescriptor_566d4710799f1740, []int{21}
}

func (m *TeXro) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TeXro.Unmarshal(m, b)
}
func (m *TeXro) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TeXro.Marshal(b, m, deterministic)
}
func (m *TeXro) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TeXro.Merge(m, src)
}
func (m *TeXro) XXX_Size() int {
	return xxx_messageInfo_TeXro.Size(m)
}
func (m *TeXro) XXX_DiscardUnknown() {
	xxx_messageInfo_TeXro.DiscardUnknown(m)
}

var xxx_messageInfo_TeXro proto.InternalMessageInfo

func (m *TeXro) GetXroSubobject() []*TeXroSubobj {
	if m != nil {
		return m.XroSubobject
	}
	return nil
}

func (m *TeXro) GetMutualDiversityFlag() bool {
	if m != nil {
		return m.MutualDiversityFlag
	}
	return false
}

type MplsTeAttributeSetXro struct {
	Xro                  *TeXro   `protobuf:"bytes,1,opt,name=xro,proto3" json:"xro,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MplsTeAttributeSetXro) Reset()         { *m = MplsTeAttributeSetXro{} }
func (m *MplsTeAttributeSetXro) String() string { return proto.CompactTextString(m) }
func (*MplsTeAttributeSetXro) ProtoMessage()    {}
func (*MplsTeAttributeSetXro) Descriptor() ([]byte, []int) {
	return fileDescriptor_566d4710799f1740, []int{22}
}

func (m *MplsTeAttributeSetXro) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsTeAttributeSetXro.Unmarshal(m, b)
}
func (m *MplsTeAttributeSetXro) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsTeAttributeSetXro.Marshal(b, m, deterministic)
}
func (m *MplsTeAttributeSetXro) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsTeAttributeSetXro.Merge(m, src)
}
func (m *MplsTeAttributeSetXro) XXX_Size() int {
	return xxx_messageInfo_MplsTeAttributeSetXro.Size(m)
}
func (m *MplsTeAttributeSetXro) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsTeAttributeSetXro.DiscardUnknown(m)
}

var xxx_messageInfo_MplsTeAttributeSetXro proto.InternalMessageInfo

func (m *MplsTeAttributeSetXro) GetXro() *TeXro {
	if m != nil {
		return m.Xro
	}
	return nil
}

type MplsTeAttributeSetP2MpTe struct {
	FastReroute            bool                       `protobuf:"varint,1,opt,name=fast_reroute,json=fastReroute,proto3" json:"fast_reroute,omitempty"`
	FrrBandwidthProtection bool                       `protobuf:"varint,2,opt,name=frr_bandwidth_protection,json=frrBandwidthProtection,proto3" json:"frr_bandwidth_protection,omitempty"`
	SetupPriority          uint32                     `protobuf:"varint,3,opt,name=setup_priority,json=setupPriority,proto3" json:"setup_priority,omitempty"`
	HoldPriority           uint32                     `protobuf:"varint,4,opt,name=hold_priority,json=holdPriority,proto3" json:"hold_priority,omitempty"`
	IsPriorityConfigured   bool                       `protobuf:"varint,5,opt,name=is_priority_configured,json=isPriorityConfigured,proto3" json:"is_priority_configured,omitempty"`
	ConfiguredBandwidth    uint32                     `protobuf:"varint,6,opt,name=configured_bandwidth,json=configuredBandwidth,proto3" json:"configured_bandwidth,omitempty"`
	DsteClassType          uint32                     `protobuf:"varint,7,opt,name=dste_class_type,json=dsteClassType,proto3" json:"dste_class_type,omitempty"`
	IsBandwidthConfigured  bool                       `protobuf:"varint,8,opt,name=is_bandwidth_configured,json=isBandwidthConfigured,proto3" json:"is_bandwidth_configured,omitempty"`
	TunnelId               []uint32                   `protobuf:"varint,9,rep,packed,name=tunnel_id,json=tunnelId,proto3" json:"tunnel_id,omitempty"`
	Affinity               *MplsTeTunnelsAffinityInfo `protobuf:"bytes,10,opt,name=affinity,proto3" json:"affinity,omitempty"`
	IsAffinityConfigured   bool                       `protobuf:"varint,11,opt,name=is_affinity_configured,json=isAffinityConfigured,proto3" json:"is_affinity_configured,omitempty"`
	XXX_NoUnkeyedLiteral   struct{}                   `json:"-"`
	XXX_unrecognized       []byte                     `json:"-"`
	XXX_sizecache          int32                      `json:"-"`
}

func (m *MplsTeAttributeSetP2MpTe) Reset()         { *m = MplsTeAttributeSetP2MpTe{} }
func (m *MplsTeAttributeSetP2MpTe) String() string { return proto.CompactTextString(m) }
func (*MplsTeAttributeSetP2MpTe) ProtoMessage()    {}
func (*MplsTeAttributeSetP2MpTe) Descriptor() ([]byte, []int) {
	return fileDescriptor_566d4710799f1740, []int{23}
}

func (m *MplsTeAttributeSetP2MpTe) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsTeAttributeSetP2MpTe.Unmarshal(m, b)
}
func (m *MplsTeAttributeSetP2MpTe) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsTeAttributeSetP2MpTe.Marshal(b, m, deterministic)
}
func (m *MplsTeAttributeSetP2MpTe) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsTeAttributeSetP2MpTe.Merge(m, src)
}
func (m *MplsTeAttributeSetP2MpTe) XXX_Size() int {
	return xxx_messageInfo_MplsTeAttributeSetP2MpTe.Size(m)
}
func (m *MplsTeAttributeSetP2MpTe) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsTeAttributeSetP2MpTe.DiscardUnknown(m)
}

var xxx_messageInfo_MplsTeAttributeSetP2MpTe proto.InternalMessageInfo

func (m *MplsTeAttributeSetP2MpTe) GetFastReroute() bool {
	if m != nil {
		return m.FastReroute
	}
	return false
}

func (m *MplsTeAttributeSetP2MpTe) GetFrrBandwidthProtection() bool {
	if m != nil {
		return m.FrrBandwidthProtection
	}
	return false
}

func (m *MplsTeAttributeSetP2MpTe) GetSetupPriority() uint32 {
	if m != nil {
		return m.SetupPriority
	}
	return 0
}

func (m *MplsTeAttributeSetP2MpTe) GetHoldPriority() uint32 {
	if m != nil {
		return m.HoldPriority
	}
	return 0
}

func (m *MplsTeAttributeSetP2MpTe) GetIsPriorityConfigured() bool {
	if m != nil {
		return m.IsPriorityConfigured
	}
	return false
}

func (m *MplsTeAttributeSetP2MpTe) GetConfiguredBandwidth() uint32 {
	if m != nil {
		return m.ConfiguredBandwidth
	}
	return 0
}

func (m *MplsTeAttributeSetP2MpTe) GetDsteClassType() uint32 {
	if m != nil {
		return m.DsteClassType
	}
	return 0
}

func (m *MplsTeAttributeSetP2MpTe) GetIsBandwidthConfigured() bool {
	if m != nil {
		return m.IsBandwidthConfigured
	}
	return false
}

func (m *MplsTeAttributeSetP2MpTe) GetTunnelId() []uint32 {
	if m != nil {
		return m.TunnelId
	}
	return nil
}

func (m *MplsTeAttributeSetP2MpTe) GetAffinity() *MplsTeTunnelsAffinityInfo {
	if m != nil {
		return m.Affinity
	}
	return nil
}

func (m *MplsTeAttributeSetP2MpTe) GetIsAffinityConfigured() bool {
	if m != nil {
		return m.IsAffinityConfigured
	}
	return false
}

type TeRevertSchT struct {
	Schedulename         []string `protobuf:"bytes,1,rep,name=schedulename,proto3" json:"schedulename,omitempty"`
	ScheduleDate         uint32   `protobuf:"varint,2,opt,name=schedule_date,json=scheduleDate,proto3" json:"schedule_date,omitempty"`
	ScheduleFrequency    string   `protobuf:"bytes,3,opt,name=schedule_frequency,json=scheduleFrequency,proto3" json:"schedule_frequency,omitempty"`
	Duration             uint32   `protobuf:"varint,4,opt,name=duration,proto3" json:"duration,omitempty"`
	MaxTries             uint32   `protobuf:"varint,5,opt,name=max_tries,json=maxTries,proto3" json:"max_tries,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TeRevertSchT) Reset()         { *m = TeRevertSchT{} }
func (m *TeRevertSchT) String() string { return proto.CompactTextString(m) }
func (*TeRevertSchT) ProtoMessage()    {}
func (*TeRevertSchT) Descriptor() ([]byte, []int) {
	return fileDescriptor_566d4710799f1740, []int{24}
}

func (m *TeRevertSchT) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TeRevertSchT.Unmarshal(m, b)
}
func (m *TeRevertSchT) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TeRevertSchT.Marshal(b, m, deterministic)
}
func (m *TeRevertSchT) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TeRevertSchT.Merge(m, src)
}
func (m *TeRevertSchT) XXX_Size() int {
	return xxx_messageInfo_TeRevertSchT.Size(m)
}
func (m *TeRevertSchT) XXX_DiscardUnknown() {
	xxx_messageInfo_TeRevertSchT.DiscardUnknown(m)
}

var xxx_messageInfo_TeRevertSchT proto.InternalMessageInfo

func (m *TeRevertSchT) GetSchedulename() []string {
	if m != nil {
		return m.Schedulename
	}
	return nil
}

func (m *TeRevertSchT) GetScheduleDate() uint32 {
	if m != nil {
		return m.ScheduleDate
	}
	return 0
}

func (m *TeRevertSchT) GetScheduleFrequency() string {
	if m != nil {
		return m.ScheduleFrequency
	}
	return ""
}

func (m *TeRevertSchT) GetDuration() uint32 {
	if m != nil {
		return m.Duration
	}
	return 0
}

func (m *TeRevertSchT) GetMaxTries() uint32 {
	if m != nil {
		return m.MaxTries
	}
	return 0
}

type MplsTeAttributeSetApsPp struct {
	SncMode              string        `protobuf:"bytes,1,opt,name=snc_mode,json=sncMode,proto3" json:"snc_mode,omitempty"`
	TcmId                uint32        `protobuf:"varint,2,opt,name=tcm_id,json=tcmId,proto3" json:"tcm_id,omitempty"`
	ProtectionType       string        `protobuf:"bytes,3,opt,name=protection_type,json=protectionType,proto3" json:"protection_type,omitempty"`
	ProtectionMode       string        `protobuf:"bytes,4,opt,name=protection_mode,json=protectionMode,proto3" json:"protection_mode,omitempty"`
	WaitToRestoreTime    uint32        `protobuf:"varint,5,opt,name=wait_to_restore_time,json=waitToRestoreTime,proto3" json:"wait_to_restore_time,omitempty"`
	HoldOffTime          uint32        `protobuf:"varint,6,opt,name=hold_off_time,json=holdOffTime,proto3" json:"hold_off_time,omitempty"`
	RevertSchedule       *TeRevertSchT `protobuf:"bytes,7,opt,name=revert_schedule,json=revertSchedule,proto3" json:"revert_schedule,omitempty"`
	PathProtProfileType  string        `protobuf:"bytes,8,opt,name=path_prot_profile_type,json=pathProtProfileType,proto3" json:"path_prot_profile_type,omitempty"`
	RestorationStyle     string        `protobuf:"bytes,9,opt,name=restoration_style,json=restorationStyle,proto3" json:"restoration_style,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *MplsTeAttributeSetApsPp) Reset()         { *m = MplsTeAttributeSetApsPp{} }
func (m *MplsTeAttributeSetApsPp) String() string { return proto.CompactTextString(m) }
func (*MplsTeAttributeSetApsPp) ProtoMessage()    {}
func (*MplsTeAttributeSetApsPp) Descriptor() ([]byte, []int) {
	return fileDescriptor_566d4710799f1740, []int{25}
}

func (m *MplsTeAttributeSetApsPp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsTeAttributeSetApsPp.Unmarshal(m, b)
}
func (m *MplsTeAttributeSetApsPp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsTeAttributeSetApsPp.Marshal(b, m, deterministic)
}
func (m *MplsTeAttributeSetApsPp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsTeAttributeSetApsPp.Merge(m, src)
}
func (m *MplsTeAttributeSetApsPp) XXX_Size() int {
	return xxx_messageInfo_MplsTeAttributeSetApsPp.Size(m)
}
func (m *MplsTeAttributeSetApsPp) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsTeAttributeSetApsPp.DiscardUnknown(m)
}

var xxx_messageInfo_MplsTeAttributeSetApsPp proto.InternalMessageInfo

func (m *MplsTeAttributeSetApsPp) GetSncMode() string {
	if m != nil {
		return m.SncMode
	}
	return ""
}

func (m *MplsTeAttributeSetApsPp) GetTcmId() uint32 {
	if m != nil {
		return m.TcmId
	}
	return 0
}

func (m *MplsTeAttributeSetApsPp) GetProtectionType() string {
	if m != nil {
		return m.ProtectionType
	}
	return ""
}

func (m *MplsTeAttributeSetApsPp) GetProtectionMode() string {
	if m != nil {
		return m.ProtectionMode
	}
	return ""
}

func (m *MplsTeAttributeSetApsPp) GetWaitToRestoreTime() uint32 {
	if m != nil {
		return m.WaitToRestoreTime
	}
	return 0
}

func (m *MplsTeAttributeSetApsPp) GetHoldOffTime() uint32 {
	if m != nil {
		return m.HoldOffTime
	}
	return 0
}

func (m *MplsTeAttributeSetApsPp) GetRevertSchedule() *TeRevertSchT {
	if m != nil {
		return m.RevertSchedule
	}
	return nil
}

func (m *MplsTeAttributeSetApsPp) GetPathProtProfileType() string {
	if m != nil {
		return m.PathProtProfileType
	}
	return ""
}

func (m *MplsTeAttributeSetApsPp) GetRestorationStyle() string {
	if m != nil {
		return m.RestorationStyle
	}
	return ""
}

type MplsTeAttributeSetSrPrependEntry struct {
	Type                 string   `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Index                uint32   `protobuf:"varint,2,opt,name=index,proto3" json:"index,omitempty"`
	NextLabel            uint32   `protobuf:"varint,3,opt,name=next_label,json=nextLabel,proto3" json:"next_label,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MplsTeAttributeSetSrPrependEntry) Reset()         { *m = MplsTeAttributeSetSrPrependEntry{} }
func (m *MplsTeAttributeSetSrPrependEntry) String() string { return proto.CompactTextString(m) }
func (*MplsTeAttributeSetSrPrependEntry) ProtoMessage()    {}
func (*MplsTeAttributeSetSrPrependEntry) Descriptor() ([]byte, []int) {
	return fileDescriptor_566d4710799f1740, []int{26}
}

func (m *MplsTeAttributeSetSrPrependEntry) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsTeAttributeSetSrPrependEntry.Unmarshal(m, b)
}
func (m *MplsTeAttributeSetSrPrependEntry) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsTeAttributeSetSrPrependEntry.Marshal(b, m, deterministic)
}
func (m *MplsTeAttributeSetSrPrependEntry) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsTeAttributeSetSrPrependEntry.Merge(m, src)
}
func (m *MplsTeAttributeSetSrPrependEntry) XXX_Size() int {
	return xxx_messageInfo_MplsTeAttributeSetSrPrependEntry.Size(m)
}
func (m *MplsTeAttributeSetSrPrependEntry) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsTeAttributeSetSrPrependEntry.DiscardUnknown(m)
}

var xxx_messageInfo_MplsTeAttributeSetSrPrependEntry proto.InternalMessageInfo

func (m *MplsTeAttributeSetSrPrependEntry) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *MplsTeAttributeSetSrPrependEntry) GetIndex() uint32 {
	if m != nil {
		return m.Index
	}
	return 0
}

func (m *MplsTeAttributeSetSrPrependEntry) GetNextLabel() uint32 {
	if m != nil {
		return m.NextLabel
	}
	return 0
}

type MplsTeAttributeSetSrPrependList struct {
	PrependEntry         []*MplsTeAttributeSetSrPrependEntry `protobuf:"bytes,1,rep,name=prepend_entry,json=prependEntry,proto3" json:"prepend_entry,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                            `json:"-"`
	XXX_unrecognized     []byte                              `json:"-"`
	XXX_sizecache        int32                               `json:"-"`
}

func (m *MplsTeAttributeSetSrPrependList) Reset()         { *m = MplsTeAttributeSetSrPrependList{} }
func (m *MplsTeAttributeSetSrPrependList) String() string { return proto.CompactTextString(m) }
func (*MplsTeAttributeSetSrPrependList) ProtoMessage()    {}
func (*MplsTeAttributeSetSrPrependList) Descriptor() ([]byte, []int) {
	return fileDescriptor_566d4710799f1740, []int{27}
}

func (m *MplsTeAttributeSetSrPrependList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsTeAttributeSetSrPrependList.Unmarshal(m, b)
}
func (m *MplsTeAttributeSetSrPrependList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsTeAttributeSetSrPrependList.Marshal(b, m, deterministic)
}
func (m *MplsTeAttributeSetSrPrependList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsTeAttributeSetSrPrependList.Merge(m, src)
}
func (m *MplsTeAttributeSetSrPrependList) XXX_Size() int {
	return xxx_messageInfo_MplsTeAttributeSetSrPrependList.Size(m)
}
func (m *MplsTeAttributeSetSrPrependList) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsTeAttributeSetSrPrependList.DiscardUnknown(m)
}

var xxx_messageInfo_MplsTeAttributeSetSrPrependList proto.InternalMessageInfo

func (m *MplsTeAttributeSetSrPrependList) GetPrependEntry() []*MplsTeAttributeSetSrPrependEntry {
	if m != nil {
		return m.PrependEntry
	}
	return nil
}

type MplsTeAttributeSetP2PTe struct {
	TunnelId                                                   []uint32                         `protobuf:"varint,1,rep,packed,name=tunnel_id,json=tunnelId,proto3" json:"tunnel_id,omitempty"`
	Affinity                                                   *MplsTeTunnelsAffinityInfo       `protobuf:"bytes,2,opt,name=affinity,proto3" json:"affinity,omitempty"`
	IsAffinityConfigured                                       bool                             `protobuf:"varint,3,opt,name=is_affinity_configured,json=isAffinityConfigured,proto3" json:"is_affinity_configured,omitempty"`
	PathSelectionSegmentRoutingAdjacencyProtection             string                           `protobuf:"bytes,4,opt,name=path_selection_segment_routing_adjacency_protection,json=pathSelectionSegmentRoutingAdjacencyProtection,proto3" json:"path_selection_segment_routing_adjacency_protection,omitempty"`
	IsPathSelectionSegmentRoutingAdjacencyProtectionConfigured bool                             `protobuf:"varint,5,opt,name=is_path_selection_segment_routing_adjacency_protection_configured,json=isPathSelectionSegmentRoutingAdjacencyProtectionConfigured,proto3" json:"is_path_selection_segment_routing_adjacency_protection_configured,omitempty"`
	PathInvalidationTimeout                                    uint32                           `protobuf:"varint,6,opt,name=path_invalidation_timeout,json=pathInvalidationTimeout,proto3" json:"path_invalidation_timeout,omitempty"`
	PathSelectionInvalidationAction                            string                           `protobuf:"bytes,7,opt,name=path_selection_invalidation_action,json=pathSelectionInvalidationAction,proto3" json:"path_selection_invalidation_action,omitempty"`
	IsPathInvalidationTimeoutConfigured                        bool                             `protobuf:"varint,8,opt,name=is_path_invalidation_timeout_configured,json=isPathInvalidationTimeoutConfigured,proto3" json:"is_path_invalidation_timeout_configured,omitempty"`
	IsPathInvalidationActionConfigured                         bool                             `protobuf:"varint,9,opt,name=is_path_invalidation_action_configured,json=isPathInvalidationActionConfigured,proto3" json:"is_path_invalidation_action_configured,omitempty"`
	PathSelectionMetric                                        string                           `protobuf:"bytes,10,opt,name=path_selection_metric,json=pathSelectionMetric,proto3" json:"path_selection_metric,omitempty"`
	IsPathSelectionMetricConfigured                            bool                             `protobuf:"varint,11,opt,name=is_path_selection_metric_configured,json=isPathSelectionMetricConfigured,proto3" json:"is_path_selection_metric_configured,omitempty"`
	PathSelectionSegmentRoutingMargin                          uint32                           `protobuf:"varint,12,opt,name=path_selection_segment_routing_margin,json=pathSelectionSegmentRoutingMargin,proto3" json:"path_selection_segment_routing_margin,omitempty"`
	IsPathSelectionSegmentRoutingMarginRelative                bool                             `protobuf:"varint,13,opt,name=is_path_selection_segment_routing_margin_relative,json=isPathSelectionSegmentRoutingMarginRelative,proto3" json:"is_path_selection_segment_routing_margin_relative,omitempty"`
	IsPathSelectionSegmentRoutingMarginConfigured              bool                             `protobuf:"varint,14,opt,name=is_path_selection_segment_routing_margin_configured,json=isPathSelectionSegmentRoutingMarginConfigured,proto3" json:"is_path_selection_segment_routing_margin_configured,omitempty"`
	PathSelectionSegmentRoutingSegmentLimit                    uint32                           `protobuf:"varint,15,opt,name=path_selection_segment_routing_segment_limit,json=pathSelectionSegmentRoutingSegmentLimit,proto3" json:"path_selection_segment_routing_segment_limit,omitempty"`
	IsPathSelectionSegmentRoutingSegmentLimitConfigured        bool                             `protobuf:"varint,16,opt,name=is_path_selection_segment_routing_segment_limit_configured,json=isPathSelectionSegmentRoutingSegmentLimitConfigured,proto3" json:"is_path_selection_segment_routing_segment_limit_configured,omitempty"`
	IsPathSelectConfigured                                     bool                             `protobuf:"varint,17,opt,name=is_path_select_configured,json=isPathSelectConfigured,proto3" json:"is_path_select_configured,omitempty"`
	Logging                                                    *MplsTeLoggingAttributes         `protobuf:"bytes,18,opt,name=logging,proto3" json:"logging,omitempty"`
	PrependList                                                *MplsTeAttributeSetSrPrependList `protobuf:"bytes,19,opt,name=prepend_list,json=prependList,proto3" json:"prepend_list,omitempty"`
	IsPrependListConfigured                                    bool                             `protobuf:"varint,20,opt,name=is_prepend_list_configured,json=isPrependListConfigured,proto3" json:"is_prepend_list_configured,omitempty"`
	IsPceConfigured                                            bool                             `protobuf:"varint,21,opt,name=is_pce_configured,json=isPceConfigured,proto3" json:"is_pce_configured,omitempty"`
	IsPceDisjSourceConfigured                                  bool                             `protobuf:"varint,22,opt,name=is_pce_disj_source_configured,json=isPceDisjSourceConfigured,proto3" json:"is_pce_disj_source_configured,omitempty"`
	IsPceDisjTypeConfigured                                    bool                             `protobuf:"varint,23,opt,name=is_pce_disj_type_configured,json=isPceDisjTypeConfigured,proto3" json:"is_pce_disj_type_configured,omitempty"`
	IsPceDisjGroupIdConfigured                                 bool                             `protobuf:"varint,24,opt,name=is_pce_disj_group_id_configured,json=isPceDisjGroupIdConfigured,proto3" json:"is_pce_disj_group_id_configured,omitempty"`
	PcedpSourceAddress                                         uint32                           `protobuf:"varint,25,opt,name=pcedp_source_address,json=pcedpSourceAddress,proto3" json:"pcedp_source_address,omitempty"`
	PcedpType                                                  string                           `protobuf:"bytes,26,opt,name=pcedp_type,json=pcedpType,proto3" json:"pcedp_type,omitempty"`
	PcedpGroupId                                               uint32                           `protobuf:"varint,27,opt,name=pcedp_group_id,json=pcedpGroupId,proto3" json:"pcedp_group_id,omitempty"`
	IsPcebDjSourceConfigured                                   bool                             `protobuf:"varint,28,opt,name=is_pceb_dj_source_configured,json=isPcebDjSourceConfigured,proto3" json:"is_pceb_dj_source_configured,omitempty"`
	IsPcebdGroupIdConfigured                                   bool                             `protobuf:"varint,29,opt,name=is_pcebd_group_id_configured,json=isPcebdGroupIdConfigured,proto3" json:"is_pcebd_group_id_configured,omitempty"`
	PcebdSourceAddress                                         uint32                           `protobuf:"varint,30,opt,name=pcebd_source_address,json=pcebdSourceAddress,proto3" json:"pcebd_source_address,omitempty"`
	PcebdGroupId                                               uint32                           `protobuf:"varint,31,opt,name=pcebd_group_id,json=pcebdGroupId,proto3" json:"pcebd_group_id,omitempty"`
	XXX_NoUnkeyedLiteral                                       struct{}                         `json:"-"`
	XXX_unrecognized                                           []byte                           `json:"-"`
	XXX_sizecache                                              int32                            `json:"-"`
}

func (m *MplsTeAttributeSetP2PTe) Reset()         { *m = MplsTeAttributeSetP2PTe{} }
func (m *MplsTeAttributeSetP2PTe) String() string { return proto.CompactTextString(m) }
func (*MplsTeAttributeSetP2PTe) ProtoMessage()    {}
func (*MplsTeAttributeSetP2PTe) Descriptor() ([]byte, []int) {
	return fileDescriptor_566d4710799f1740, []int{28}
}

func (m *MplsTeAttributeSetP2PTe) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsTeAttributeSetP2PTe.Unmarshal(m, b)
}
func (m *MplsTeAttributeSetP2PTe) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsTeAttributeSetP2PTe.Marshal(b, m, deterministic)
}
func (m *MplsTeAttributeSetP2PTe) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsTeAttributeSetP2PTe.Merge(m, src)
}
func (m *MplsTeAttributeSetP2PTe) XXX_Size() int {
	return xxx_messageInfo_MplsTeAttributeSetP2PTe.Size(m)
}
func (m *MplsTeAttributeSetP2PTe) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsTeAttributeSetP2PTe.DiscardUnknown(m)
}

var xxx_messageInfo_MplsTeAttributeSetP2PTe proto.InternalMessageInfo

func (m *MplsTeAttributeSetP2PTe) GetTunnelId() []uint32 {
	if m != nil {
		return m.TunnelId
	}
	return nil
}

func (m *MplsTeAttributeSetP2PTe) GetAffinity() *MplsTeTunnelsAffinityInfo {
	if m != nil {
		return m.Affinity
	}
	return nil
}

func (m *MplsTeAttributeSetP2PTe) GetIsAffinityConfigured() bool {
	if m != nil {
		return m.IsAffinityConfigured
	}
	return false
}

func (m *MplsTeAttributeSetP2PTe) GetPathSelectionSegmentRoutingAdjacencyProtection() string {
	if m != nil {
		return m.PathSelectionSegmentRoutingAdjacencyProtection
	}
	return ""
}

func (m *MplsTeAttributeSetP2PTe) GetIsPathSelectionSegmentRoutingAdjacencyProtectionConfigured() bool {
	if m != nil {
		return m.IsPathSelectionSegmentRoutingAdjacencyProtectionConfigured
	}
	return false
}

func (m *MplsTeAttributeSetP2PTe) GetPathInvalidationTimeout() uint32 {
	if m != nil {
		return m.PathInvalidationTimeout
	}
	return 0
}

func (m *MplsTeAttributeSetP2PTe) GetPathSelectionInvalidationAction() string {
	if m != nil {
		return m.PathSelectionInvalidationAction
	}
	return ""
}

func (m *MplsTeAttributeSetP2PTe) GetIsPathInvalidationTimeoutConfigured() bool {
	if m != nil {
		return m.IsPathInvalidationTimeoutConfigured
	}
	return false
}

func (m *MplsTeAttributeSetP2PTe) GetIsPathInvalidationActionConfigured() bool {
	if m != nil {
		return m.IsPathInvalidationActionConfigured
	}
	return false
}

func (m *MplsTeAttributeSetP2PTe) GetPathSelectionMetric() string {
	if m != nil {
		return m.PathSelectionMetric
	}
	return ""
}

func (m *MplsTeAttributeSetP2PTe) GetIsPathSelectionMetricConfigured() bool {
	if m != nil {
		return m.IsPathSelectionMetricConfigured
	}
	return false
}

func (m *MplsTeAttributeSetP2PTe) GetPathSelectionSegmentRoutingMargin() uint32 {
	if m != nil {
		return m.PathSelectionSegmentRoutingMargin
	}
	return 0
}

func (m *MplsTeAttributeSetP2PTe) GetIsPathSelectionSegmentRoutingMarginRelative() bool {
	if m != nil {
		return m.IsPathSelectionSegmentRoutingMarginRelative
	}
	return false
}

func (m *MplsTeAttributeSetP2PTe) GetIsPathSelectionSegmentRoutingMarginConfigured() bool {
	if m != nil {
		return m.IsPathSelectionSegmentRoutingMarginConfigured
	}
	return false
}

func (m *MplsTeAttributeSetP2PTe) GetPathSelectionSegmentRoutingSegmentLimit() uint32 {
	if m != nil {
		return m.PathSelectionSegmentRoutingSegmentLimit
	}
	return 0
}

func (m *MplsTeAttributeSetP2PTe) GetIsPathSelectionSegmentRoutingSegmentLimitConfigured() bool {
	if m != nil {
		return m.IsPathSelectionSegmentRoutingSegmentLimitConfigured
	}
	return false
}

func (m *MplsTeAttributeSetP2PTe) GetIsPathSelectConfigured() bool {
	if m != nil {
		return m.IsPathSelectConfigured
	}
	return false
}

func (m *MplsTeAttributeSetP2PTe) GetLogging() *MplsTeLoggingAttributes {
	if m != nil {
		return m.Logging
	}
	return nil
}

func (m *MplsTeAttributeSetP2PTe) GetPrependList() *MplsTeAttributeSetSrPrependList {
	if m != nil {
		return m.PrependList
	}
	return nil
}

func (m *MplsTeAttributeSetP2PTe) GetIsPrependListConfigured() bool {
	if m != nil {
		return m.IsPrependListConfigured
	}
	return false
}

func (m *MplsTeAttributeSetP2PTe) GetIsPceConfigured() bool {
	if m != nil {
		return m.IsPceConfigured
	}
	return false
}

func (m *MplsTeAttributeSetP2PTe) GetIsPceDisjSourceConfigured() bool {
	if m != nil {
		return m.IsPceDisjSourceConfigured
	}
	return false
}

func (m *MplsTeAttributeSetP2PTe) GetIsPceDisjTypeConfigured() bool {
	if m != nil {
		return m.IsPceDisjTypeConfigured
	}
	return false
}

func (m *MplsTeAttributeSetP2PTe) GetIsPceDisjGroupIdConfigured() bool {
	if m != nil {
		return m.IsPceDisjGroupIdConfigured
	}
	return false
}

func (m *MplsTeAttributeSetP2PTe) GetPcedpSourceAddress() uint32 {
	if m != nil {
		return m.PcedpSourceAddress
	}
	return 0
}

func (m *MplsTeAttributeSetP2PTe) GetPcedpType() string {
	if m != nil {
		return m.PcedpType
	}
	return ""
}

func (m *MplsTeAttributeSetP2PTe) GetPcedpGroupId() uint32 {
	if m != nil {
		return m.PcedpGroupId
	}
	return 0
}

func (m *MplsTeAttributeSetP2PTe) GetIsPcebDjSourceConfigured() bool {
	if m != nil {
		return m.IsPcebDjSourceConfigured
	}
	return false
}

func (m *MplsTeAttributeSetP2PTe) GetIsPcebdGroupIdConfigured() bool {
	if m != nil {
		return m.IsPcebdGroupIdConfigured
	}
	return false
}

func (m *MplsTeAttributeSetP2PTe) GetPcebdSourceAddress() uint32 {
	if m != nil {
		return m.PcebdSourceAddress
	}
	return 0
}

func (m *MplsTeAttributeSetP2PTe) GetPcebdGroupId() uint32 {
	if m != nil {
		return m.PcebdGroupId
	}
	return 0
}

type MplsTeAttributeSetUnion struct {
	TunnelAttributeSetType string                        `protobuf:"bytes,1,opt,name=tunnel_attribute_set_type,json=tunnelAttributeSetType,proto3" json:"tunnel_attribute_set_type,omitempty"`
	AttributeSetPathOption *MplsTeAttributeSetPathOption `protobuf:"bytes,2,opt,name=attribute_set_path_option,json=attributeSetPathOption,proto3" json:"attribute_set_path_option,omitempty"`
	AttributeSetAutobackup *MplsTeAttributeSetAutoBackup `protobuf:"bytes,3,opt,name=attribute_set_autobackup,json=attributeSetAutobackup,proto3" json:"attribute_set_autobackup,omitempty"`
	AttributeSetAutomesh   *MplsTeAttributeSetAutoMesh   `protobuf:"bytes,4,opt,name=attribute_set_automesh,json=attributeSetAutomesh,proto3" json:"attribute_set_automesh,omitempty"`
	AttributeSetXro        *MplsTeAttributeSetXro        `protobuf:"bytes,5,opt,name=attribute_set_xro,json=attributeSetXro,proto3" json:"attribute_set_xro,omitempty"`
	AttributeSetP2Mpte     *MplsTeAttributeSetP2MpTe     `protobuf:"bytes,6,opt,name=attribute_set_p2mpte,json=attributeSetP2mpte,proto3" json:"attribute_set_p2mpte,omitempty"`
	AttributeSetApsPp      *MplsTeAttributeSetApsPp      `protobuf:"bytes,7,opt,name=attribute_set_aps_pp,json=attributeSetApsPp,proto3" json:"attribute_set_aps_pp,omitempty"`
	AttributeSetP2PTe      *MplsTeAttributeSetP2PTe      `protobuf:"bytes,8,opt,name=attribute_set_p2p_te,json=attributeSetP2pTe,proto3" json:"attribute_set_p2p_te,omitempty"`
	XXX_NoUnkeyedLiteral   struct{}                      `json:"-"`
	XXX_unrecognized       []byte                        `json:"-"`
	XXX_sizecache          int32                         `json:"-"`
}

func (m *MplsTeAttributeSetUnion) Reset()         { *m = MplsTeAttributeSetUnion{} }
func (m *MplsTeAttributeSetUnion) String() string { return proto.CompactTextString(m) }
func (*MplsTeAttributeSetUnion) ProtoMessage()    {}
func (*MplsTeAttributeSetUnion) Descriptor() ([]byte, []int) {
	return fileDescriptor_566d4710799f1740, []int{29}
}

func (m *MplsTeAttributeSetUnion) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsTeAttributeSetUnion.Unmarshal(m, b)
}
func (m *MplsTeAttributeSetUnion) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsTeAttributeSetUnion.Marshal(b, m, deterministic)
}
func (m *MplsTeAttributeSetUnion) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsTeAttributeSetUnion.Merge(m, src)
}
func (m *MplsTeAttributeSetUnion) XXX_Size() int {
	return xxx_messageInfo_MplsTeAttributeSetUnion.Size(m)
}
func (m *MplsTeAttributeSetUnion) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsTeAttributeSetUnion.DiscardUnknown(m)
}

var xxx_messageInfo_MplsTeAttributeSetUnion proto.InternalMessageInfo

func (m *MplsTeAttributeSetUnion) GetTunnelAttributeSetType() string {
	if m != nil {
		return m.TunnelAttributeSetType
	}
	return ""
}

func (m *MplsTeAttributeSetUnion) GetAttributeSetPathOption() *MplsTeAttributeSetPathOption {
	if m != nil {
		return m.AttributeSetPathOption
	}
	return nil
}

func (m *MplsTeAttributeSetUnion) GetAttributeSetAutobackup() *MplsTeAttributeSetAutoBackup {
	if m != nil {
		return m.AttributeSetAutobackup
	}
	return nil
}

func (m *MplsTeAttributeSetUnion) GetAttributeSetAutomesh() *MplsTeAttributeSetAutoMesh {
	if m != nil {
		return m.AttributeSetAutomesh
	}
	return nil
}

func (m *MplsTeAttributeSetUnion) GetAttributeSetXro() *MplsTeAttributeSetXro {
	if m != nil {
		return m.AttributeSetXro
	}
	return nil
}

func (m *MplsTeAttributeSetUnion) GetAttributeSetP2Mpte() *MplsTeAttributeSetP2MpTe {
	if m != nil {
		return m.AttributeSetP2Mpte
	}
	return nil
}

func (m *MplsTeAttributeSetUnion) GetAttributeSetApsPp() *MplsTeAttributeSetApsPp {
	if m != nil {
		return m.AttributeSetApsPp
	}
	return nil
}

func (m *MplsTeAttributeSetUnion) GetAttributeSetP2PTe() *MplsTeAttributeSetP2PTe {
	if m != nil {
		return m.AttributeSetP2PTe
	}
	return nil
}

type MplsTeAttributeSet struct {
	TunnelAttributeSetName      string                   `protobuf:"bytes,1,opt,name=tunnel_attribute_set_name,json=tunnelAttributeSetName,proto3" json:"tunnel_attribute_set_name,omitempty"`
	TunnelAttributeSetNameCrc32 uint32                   `protobuf:"varint,2,opt,name=tunnel_attribute_set_name_crc32,json=tunnelAttributeSetNameCrc32,proto3" json:"tunnel_attribute_set_name_crc32,omitempty"`
	AttributeSetUnion           *MplsTeAttributeSetUnion `protobuf:"bytes,3,opt,name=attribute_set_union,json=attributeSetUnion,proto3" json:"attribute_set_union,omitempty"`
	XXX_NoUnkeyedLiteral        struct{}                 `json:"-"`
	XXX_unrecognized            []byte                   `json:"-"`
	XXX_sizecache               int32                    `json:"-"`
}

func (m *MplsTeAttributeSet) Reset()         { *m = MplsTeAttributeSet{} }
func (m *MplsTeAttributeSet) String() string { return proto.CompactTextString(m) }
func (*MplsTeAttributeSet) ProtoMessage()    {}
func (*MplsTeAttributeSet) Descriptor() ([]byte, []int) {
	return fileDescriptor_566d4710799f1740, []int{30}
}

func (m *MplsTeAttributeSet) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsTeAttributeSet.Unmarshal(m, b)
}
func (m *MplsTeAttributeSet) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsTeAttributeSet.Marshal(b, m, deterministic)
}
func (m *MplsTeAttributeSet) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsTeAttributeSet.Merge(m, src)
}
func (m *MplsTeAttributeSet) XXX_Size() int {
	return xxx_messageInfo_MplsTeAttributeSet.Size(m)
}
func (m *MplsTeAttributeSet) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsTeAttributeSet.DiscardUnknown(m)
}

var xxx_messageInfo_MplsTeAttributeSet proto.InternalMessageInfo

func (m *MplsTeAttributeSet) GetTunnelAttributeSetName() string {
	if m != nil {
		return m.TunnelAttributeSetName
	}
	return ""
}

func (m *MplsTeAttributeSet) GetTunnelAttributeSetNameCrc32() uint32 {
	if m != nil {
		return m.TunnelAttributeSetNameCrc32
	}
	return 0
}

func (m *MplsTeAttributeSet) GetAttributeSetUnion() *MplsTeAttributeSetUnion {
	if m != nil {
		return m.AttributeSetUnion
	}
	return nil
}

type MplsTeP2MpPcalcError struct {
	ErrorMessage         string   `protobuf:"bytes,1,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	LspMode              string   `protobuf:"bytes,2,opt,name=lsp_mode,json=lspMode,proto3" json:"lsp_mode,omitempty"`
	LogTime              uint32   `protobuf:"varint,3,opt,name=log_time,json=logTime,proto3" json:"log_time,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MplsTeP2MpPcalcError) Reset()         { *m = MplsTeP2MpPcalcError{} }
func (m *MplsTeP2MpPcalcError) String() string { return proto.CompactTextString(m) }
func (*MplsTeP2MpPcalcError) ProtoMessage()    {}
func (*MplsTeP2MpPcalcError) Descriptor() ([]byte, []int) {
	return fileDescriptor_566d4710799f1740, []int{31}
}

func (m *MplsTeP2MpPcalcError) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsTeP2MpPcalcError.Unmarshal(m, b)
}
func (m *MplsTeP2MpPcalcError) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsTeP2MpPcalcError.Marshal(b, m, deterministic)
}
func (m *MplsTeP2MpPcalcError) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsTeP2MpPcalcError.Merge(m, src)
}
func (m *MplsTeP2MpPcalcError) XXX_Size() int {
	return xxx_messageInfo_MplsTeP2MpPcalcError.Size(m)
}
func (m *MplsTeP2MpPcalcError) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsTeP2MpPcalcError.DiscardUnknown(m)
}

var xxx_messageInfo_MplsTeP2MpPcalcError proto.InternalMessageInfo

func (m *MplsTeP2MpPcalcError) GetErrorMessage() string {
	if m != nil {
		return m.ErrorMessage
	}
	return ""
}

func (m *MplsTeP2MpPcalcError) GetLspMode() string {
	if m != nil {
		return m.LspMode
	}
	return ""
}

func (m *MplsTeP2MpPcalcError) GetLogTime() uint32 {
	if m != nil {
		return m.LogTime
	}
	return 0
}

type MplsTeP2MpSigError struct {
	ErrorNode            uint32   `protobuf:"varint,1,opt,name=error_node,json=errorNode,proto3" json:"error_node,omitempty"`
	Error                uint32   `protobuf:"varint,2,opt,name=error,proto3" json:"error,omitempty"`
	SubCode              uint32   `protobuf:"varint,3,opt,name=sub_code,json=subCode,proto3" json:"sub_code,omitempty"`
	LspMode              string   `protobuf:"bytes,4,opt,name=lsp_mode,json=lspMode,proto3" json:"lsp_mode,omitempty"`
	LogTime              uint32   `protobuf:"varint,5,opt,name=log_time,json=logTime,proto3" json:"log_time,omitempty"`
	SignallingLspId      uint32   `protobuf:"varint,6,opt,name=signalling_lsp_id,json=signallingLspId,proto3" json:"signalling_lsp_id,omitempty"`
	ErrorMessage         string   `protobuf:"bytes,7,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	ReverseLsp           bool     `protobuf:"varint,8,opt,name=reverse_lsp,json=reverseLsp,proto3" json:"reverse_lsp,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MplsTeP2MpSigError) Reset()         { *m = MplsTeP2MpSigError{} }
func (m *MplsTeP2MpSigError) String() string { return proto.CompactTextString(m) }
func (*MplsTeP2MpSigError) ProtoMessage()    {}
func (*MplsTeP2MpSigError) Descriptor() ([]byte, []int) {
	return fileDescriptor_566d4710799f1740, []int{32}
}

func (m *MplsTeP2MpSigError) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsTeP2MpSigError.Unmarshal(m, b)
}
func (m *MplsTeP2MpSigError) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsTeP2MpSigError.Marshal(b, m, deterministic)
}
func (m *MplsTeP2MpSigError) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsTeP2MpSigError.Merge(m, src)
}
func (m *MplsTeP2MpSigError) XXX_Size() int {
	return xxx_messageInfo_MplsTeP2MpSigError.Size(m)
}
func (m *MplsTeP2MpSigError) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsTeP2MpSigError.DiscardUnknown(m)
}

var xxx_messageInfo_MplsTeP2MpSigError proto.InternalMessageInfo

func (m *MplsTeP2MpSigError) GetErrorNode() uint32 {
	if m != nil {
		return m.ErrorNode
	}
	return 0
}

func (m *MplsTeP2MpSigError) GetError() uint32 {
	if m != nil {
		return m.Error
	}
	return 0
}

func (m *MplsTeP2MpSigError) GetSubCode() uint32 {
	if m != nil {
		return m.SubCode
	}
	return 0
}

func (m *MplsTeP2MpSigError) GetLspMode() string {
	if m != nil {
		return m.LspMode
	}
	return ""
}

func (m *MplsTeP2MpSigError) GetLogTime() uint32 {
	if m != nil {
		return m.LogTime
	}
	return 0
}

func (m *MplsTeP2MpSigError) GetSignallingLspId() uint32 {
	if m != nil {
		return m.SignallingLspId
	}
	return 0
}

func (m *MplsTeP2MpSigError) GetErrorMessage() string {
	if m != nil {
		return m.ErrorMessage
	}
	return ""
}

func (m *MplsTeP2MpSigError) GetReverseLsp() bool {
	if m != nil {
		return m.ReverseLsp
	}
	return false
}

type MplsTeP2MpPathOption struct {
	OptionIndexIsValid          bool                    `protobuf:"varint,1,opt,name=option_index_is_valid,json=optionIndexIsValid,proto3" json:"option_index_is_valid,omitempty"`
	OptionIndex                 uint32                  `protobuf:"varint,2,opt,name=option_index,json=optionIndex,proto3" json:"option_index,omitempty"`
	PathOptionName              string                  `protobuf:"bytes,3,opt,name=path_option_name,json=pathOptionName,proto3" json:"path_option_name,omitempty"`
	PathOptionType              string                  `protobuf:"bytes,4,opt,name=path_option_type,json=pathOptionType,proto3" json:"path_option_type,omitempty"`
	ExplicitPathName            string                  `protobuf:"bytes,5,opt,name=explicit_path_name,json=explicitPathName,proto3" json:"explicit_path_name,omitempty"`
	ExplicitPathId              uint32                  `protobuf:"varint,6,opt,name=explicit_path_id,json=explicitPathId,proto3" json:"explicit_path_id,omitempty"`
	HolddownDuration            uint32                  `protobuf:"varint,7,opt,name=holddown_duration,json=holddownDuration,proto3" json:"holddown_duration,omitempty"`
	PceAddress                  string                  `protobuf:"bytes,8,opt,name=pce_address,json=pceAddress,proto3" json:"pce_address,omitempty"`
	PathOptionAreaId            string                  `protobuf:"bytes,9,opt,name=path_option_area_id,json=pathOptionAreaId,proto3" json:"path_option_area_id,omitempty"`
	IsStrictExplicitPath        bool                    `protobuf:"varint,10,opt,name=is_strict_explicit_path,json=isStrictExplicitPath,proto3" json:"is_strict_explicit_path,omitempty"`
	IsHelddown                  bool                    `protobuf:"varint,11,opt,name=is_helddown,json=isHelddown,proto3" json:"is_helddown,omitempty"`
	IsLockdown                  bool                    `protobuf:"varint,12,opt,name=is_lockdown,json=isLockdown,proto3" json:"is_lockdown,omitempty"`
	IsVerbatim                  bool                    `protobuf:"varint,13,opt,name=is_verbatim,json=isVerbatim,proto3" json:"is_verbatim,omitempty"`
	IsDisabled                  bool                    `protobuf:"varint,14,opt,name=is_disabled,json=isDisabled,proto3" json:"is_disabled,omitempty"`
	HasAttributeSet             bool                    `protobuf:"varint,15,opt,name=has_attribute_set,json=hasAttributeSet,proto3" json:"has_attribute_set,omitempty"`
	AttributeSet                *MplsTeAttributeSet     `protobuf:"bytes,16,opt,name=attribute_set,json=attributeSet,proto3" json:"attribute_set,omitempty"`
	AttributeSetFound           bool                    `protobuf:"varint,17,opt,name=attribute_set_found,json=attributeSetFound,proto3" json:"attribute_set_found,omitempty"`
	PathCalculationError        []*MplsTeP2MpPcalcError `protobuf:"bytes,18,rep,name=path_calculation_error,json=pathCalculationError,proto3" json:"path_calculation_error,omitempty"`
	RemergeError                []*MplsTeP2MpPcalcError `protobuf:"bytes,19,rep,name=remerge_error,json=remergeError,proto3" json:"remerge_error,omitempty"`
	SignallingError             []*MplsTeP2MpSigError   `protobuf:"bytes,20,rep,name=signalling_error,json=signallingError,proto3" json:"signalling_error,omitempty"`
	HasXroAttributeSet          bool                    `protobuf:"varint,21,opt,name=has_xro_attribute_set,json=hasXroAttributeSet,proto3" json:"has_xro_attribute_set,omitempty"`
	XroAttributeSetFound        bool                    `protobuf:"varint,22,opt,name=xro_attribute_set_found,json=xroAttributeSetFound,proto3" json:"xro_attribute_set_found,omitempty"`
	XroAttributeSet             *MplsTeAttributeSet     `protobuf:"bytes,23,opt,name=xro_attribute_set,json=xroAttributeSet,proto3" json:"xro_attribute_set,omitempty"`
	IsSegmentRouting            bool                    `protobuf:"varint,24,opt,name=is_segment_routing,json=isSegmentRouting,proto3" json:"is_segment_routing,omitempty"`
	ProtectedByPathOptionIndex  uint32                  `protobuf:"varint,25,opt,name=protected_by_path_option_index,json=protectedByPathOptionIndex,proto3" json:"protected_by_path_option_index,omitempty"`
	RestoredFromPathOptionIndex uint32                  `protobuf:"varint,26,opt,name=restored_from_path_option_index,json=restoredFromPathOptionIndex,proto3" json:"restored_from_path_option_index,omitempty"`
	XXX_NoUnkeyedLiteral        struct{}                `json:"-"`
	XXX_unrecognized            []byte                  `json:"-"`
	XXX_sizecache               int32                   `json:"-"`
}

func (m *MplsTeP2MpPathOption) Reset()         { *m = MplsTeP2MpPathOption{} }
func (m *MplsTeP2MpPathOption) String() string { return proto.CompactTextString(m) }
func (*MplsTeP2MpPathOption) ProtoMessage()    {}
func (*MplsTeP2MpPathOption) Descriptor() ([]byte, []int) {
	return fileDescriptor_566d4710799f1740, []int{33}
}

func (m *MplsTeP2MpPathOption) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsTeP2MpPathOption.Unmarshal(m, b)
}
func (m *MplsTeP2MpPathOption) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsTeP2MpPathOption.Marshal(b, m, deterministic)
}
func (m *MplsTeP2MpPathOption) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsTeP2MpPathOption.Merge(m, src)
}
func (m *MplsTeP2MpPathOption) XXX_Size() int {
	return xxx_messageInfo_MplsTeP2MpPathOption.Size(m)
}
func (m *MplsTeP2MpPathOption) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsTeP2MpPathOption.DiscardUnknown(m)
}

var xxx_messageInfo_MplsTeP2MpPathOption proto.InternalMessageInfo

func (m *MplsTeP2MpPathOption) GetOptionIndexIsValid() bool {
	if m != nil {
		return m.OptionIndexIsValid
	}
	return false
}

func (m *MplsTeP2MpPathOption) GetOptionIndex() uint32 {
	if m != nil {
		return m.OptionIndex
	}
	return 0
}

func (m *MplsTeP2MpPathOption) GetPathOptionName() string {
	if m != nil {
		return m.PathOptionName
	}
	return ""
}

func (m *MplsTeP2MpPathOption) GetPathOptionType() string {
	if m != nil {
		return m.PathOptionType
	}
	return ""
}

func (m *MplsTeP2MpPathOption) GetExplicitPathName() string {
	if m != nil {
		return m.ExplicitPathName
	}
	return ""
}

func (m *MplsTeP2MpPathOption) GetExplicitPathId() uint32 {
	if m != nil {
		return m.ExplicitPathId
	}
	return 0
}

func (m *MplsTeP2MpPathOption) GetHolddownDuration() uint32 {
	if m != nil {
		return m.HolddownDuration
	}
	return 0
}

func (m *MplsTeP2MpPathOption) GetPceAddress() string {
	if m != nil {
		return m.PceAddress
	}
	return ""
}

func (m *MplsTeP2MpPathOption) GetPathOptionAreaId() string {
	if m != nil {
		return m.PathOptionAreaId
	}
	return ""
}

func (m *MplsTeP2MpPathOption) GetIsStrictExplicitPath() bool {
	if m != nil {
		return m.IsStrictExplicitPath
	}
	return false
}

func (m *MplsTeP2MpPathOption) GetIsHelddown() bool {
	if m != nil {
		return m.IsHelddown
	}
	return false
}

func (m *MplsTeP2MpPathOption) GetIsLockdown() bool {
	if m != nil {
		return m.IsLockdown
	}
	return false
}

func (m *MplsTeP2MpPathOption) GetIsVerbatim() bool {
	if m != nil {
		return m.IsVerbatim
	}
	return false
}

func (m *MplsTeP2MpPathOption) GetIsDisabled() bool {
	if m != nil {
		return m.IsDisabled
	}
	return false
}

func (m *MplsTeP2MpPathOption) GetHasAttributeSet() bool {
	if m != nil {
		return m.HasAttributeSet
	}
	return false
}

func (m *MplsTeP2MpPathOption) GetAttributeSet() *MplsTeAttributeSet {
	if m != nil {
		return m.AttributeSet
	}
	return nil
}

func (m *MplsTeP2MpPathOption) GetAttributeSetFound() bool {
	if m != nil {
		return m.AttributeSetFound
	}
	return false
}

func (m *MplsTeP2MpPathOption) GetPathCalculationError() []*MplsTeP2MpPcalcError {
	if m != nil {
		return m.PathCalculationError
	}
	return nil
}

func (m *MplsTeP2MpPathOption) GetRemergeError() []*MplsTeP2MpPcalcError {
	if m != nil {
		return m.RemergeError
	}
	return nil
}

func (m *MplsTeP2MpPathOption) GetSignallingError() []*MplsTeP2MpSigError {
	if m != nil {
		return m.SignallingError
	}
	return nil
}

func (m *MplsTeP2MpPathOption) GetHasXroAttributeSet() bool {
	if m != nil {
		return m.HasXroAttributeSet
	}
	return false
}

func (m *MplsTeP2MpPathOption) GetXroAttributeSetFound() bool {
	if m != nil {
		return m.XroAttributeSetFound
	}
	return false
}

func (m *MplsTeP2MpPathOption) GetXroAttributeSet() *MplsTeAttributeSet {
	if m != nil {
		return m.XroAttributeSet
	}
	return nil
}

func (m *MplsTeP2MpPathOption) GetIsSegmentRouting() bool {
	if m != nil {
		return m.IsSegmentRouting
	}
	return false
}

func (m *MplsTeP2MpPathOption) GetProtectedByPathOptionIndex() uint32 {
	if m != nil {
		return m.ProtectedByPathOptionIndex
	}
	return 0
}

func (m *MplsTeP2MpPathOption) GetRestoredFromPathOptionIndex() uint32 {
	if m != nil {
		return m.RestoredFromPathOptionIndex
	}
	return 0
}

type MplsSrlgInfo struct {
	SharedRiskGroup      uint32   `protobuf:"varint,1,opt,name=shared_risk_group,json=sharedRiskGroup,proto3" json:"shared_risk_group,omitempty"`
	SrlgName             string   `protobuf:"bytes,2,opt,name=srlg_name,json=srlgName,proto3" json:"srlg_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MplsSrlgInfo) Reset()         { *m = MplsSrlgInfo{} }
func (m *MplsSrlgInfo) String() string { return proto.CompactTextString(m) }
func (*MplsSrlgInfo) ProtoMessage()    {}
func (*MplsSrlgInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_566d4710799f1740, []int{34}
}

func (m *MplsSrlgInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsSrlgInfo.Unmarshal(m, b)
}
func (m *MplsSrlgInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsSrlgInfo.Marshal(b, m, deterministic)
}
func (m *MplsSrlgInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsSrlgInfo.Merge(m, src)
}
func (m *MplsSrlgInfo) XXX_Size() int {
	return xxx_messageInfo_MplsSrlgInfo.Size(m)
}
func (m *MplsSrlgInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsSrlgInfo.DiscardUnknown(m)
}

var xxx_messageInfo_MplsSrlgInfo proto.InternalMessageInfo

func (m *MplsSrlgInfo) GetSharedRiskGroup() uint32 {
	if m != nil {
		return m.SharedRiskGroup
	}
	return 0
}

func (m *MplsSrlgInfo) GetSrlgName() string {
	if m != nil {
		return m.SrlgName
	}
	return ""
}

type RsvpMgmtEroIpv4Subobj struct {
	IsStrictRoute        bool     `protobuf:"varint,1,opt,name=is_strict_route,json=isStrictRoute,proto3" json:"is_strict_route,omitempty"`
	EroAddress           string   `protobuf:"bytes,2,opt,name=ero_address,json=eroAddress,proto3" json:"ero_address,omitempty"`
	PrefixLength         uint32   `protobuf:"varint,3,opt,name=prefix_length,json=prefixLength,proto3" json:"prefix_length,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RsvpMgmtEroIpv4Subobj) Reset()         { *m = RsvpMgmtEroIpv4Subobj{} }
func (m *RsvpMgmtEroIpv4Subobj) String() string { return proto.CompactTextString(m) }
func (*RsvpMgmtEroIpv4Subobj) ProtoMessage()    {}
func (*RsvpMgmtEroIpv4Subobj) Descriptor() ([]byte, []int) {
	return fileDescriptor_566d4710799f1740, []int{35}
}

func (m *RsvpMgmtEroIpv4Subobj) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RsvpMgmtEroIpv4Subobj.Unmarshal(m, b)
}
func (m *RsvpMgmtEroIpv4Subobj) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RsvpMgmtEroIpv4Subobj.Marshal(b, m, deterministic)
}
func (m *RsvpMgmtEroIpv4Subobj) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RsvpMgmtEroIpv4Subobj.Merge(m, src)
}
func (m *RsvpMgmtEroIpv4Subobj) XXX_Size() int {
	return xxx_messageInfo_RsvpMgmtEroIpv4Subobj.Size(m)
}
func (m *RsvpMgmtEroIpv4Subobj) XXX_DiscardUnknown() {
	xxx_messageInfo_RsvpMgmtEroIpv4Subobj.DiscardUnknown(m)
}

var xxx_messageInfo_RsvpMgmtEroIpv4Subobj proto.InternalMessageInfo

func (m *RsvpMgmtEroIpv4Subobj) GetIsStrictRoute() bool {
	if m != nil {
		return m.IsStrictRoute
	}
	return false
}

func (m *RsvpMgmtEroIpv4Subobj) GetEroAddress() string {
	if m != nil {
		return m.EroAddress
	}
	return ""
}

func (m *RsvpMgmtEroIpv4Subobj) GetPrefixLength() uint32 {
	if m != nil {
		return m.PrefixLength
	}
	return 0
}

type RsvpMgmtEroUnnumSubobj struct {
	IsStrictRoute        bool     `protobuf:"varint,1,opt,name=is_strict_route,json=isStrictRoute,proto3" json:"is_strict_route,omitempty"`
	EroInterfaceId       uint32   `protobuf:"varint,2,opt,name=ero_interface_id,json=eroInterfaceId,proto3" json:"ero_interface_id,omitempty"`
	EroRouterId          string   `protobuf:"bytes,3,opt,name=ero_router_id,json=eroRouterId,proto3" json:"ero_router_id,omitempty"`
	Status               string   `protobuf:"bytes,4,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RsvpMgmtEroUnnumSubobj) Reset()         { *m = RsvpMgmtEroUnnumSubobj{} }
func (m *RsvpMgmtEroUnnumSubobj) String() string { return proto.CompactTextString(m) }
func (*RsvpMgmtEroUnnumSubobj) ProtoMessage()    {}
func (*RsvpMgmtEroUnnumSubobj) Descriptor() ([]byte, []int) {
	return fileDescriptor_566d4710799f1740, []int{36}
}

func (m *RsvpMgmtEroUnnumSubobj) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RsvpMgmtEroUnnumSubobj.Unmarshal(m, b)
}
func (m *RsvpMgmtEroUnnumSubobj) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RsvpMgmtEroUnnumSubobj.Marshal(b, m, deterministic)
}
func (m *RsvpMgmtEroUnnumSubobj) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RsvpMgmtEroUnnumSubobj.Merge(m, src)
}
func (m *RsvpMgmtEroUnnumSubobj) XXX_Size() int {
	return xxx_messageInfo_RsvpMgmtEroUnnumSubobj.Size(m)
}
func (m *RsvpMgmtEroUnnumSubobj) XXX_DiscardUnknown() {
	xxx_messageInfo_RsvpMgmtEroUnnumSubobj.DiscardUnknown(m)
}

var xxx_messageInfo_RsvpMgmtEroUnnumSubobj proto.InternalMessageInfo

func (m *RsvpMgmtEroUnnumSubobj) GetIsStrictRoute() bool {
	if m != nil {
		return m.IsStrictRoute
	}
	return false
}

func (m *RsvpMgmtEroUnnumSubobj) GetEroInterfaceId() uint32 {
	if m != nil {
		return m.EroInterfaceId
	}
	return 0
}

func (m *RsvpMgmtEroUnnumSubobj) GetEroRouterId() string {
	if m != nil {
		return m.EroRouterId
	}
	return ""
}

func (m *RsvpMgmtEroUnnumSubobj) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

type RsvpMgmtEroSubobj struct {
	EroType                string                  `protobuf:"bytes,1,opt,name=ero_type,json=eroType,proto3" json:"ero_type,omitempty"`
	Ipv4EroSubObject       *RsvpMgmtEroIpv4Subobj  `protobuf:"bytes,2,opt,name=ipv4ero_sub_object,json=ipv4eroSubObject,proto3" json:"ipv4ero_sub_object,omitempty"`
	UnnumberedEroSubObject *RsvpMgmtEroUnnumSubobj `protobuf:"bytes,3,opt,name=unnumbered_ero_sub_object,json=unnumberedEroSubObject,proto3" json:"unnumbered_ero_sub_object,omitempty"`
	XXX_NoUnkeyedLiteral   struct{}                `json:"-"`
	XXX_unrecognized       []byte                  `json:"-"`
	XXX_sizecache          int32                   `json:"-"`
}

func (m *RsvpMgmtEroSubobj) Reset()         { *m = RsvpMgmtEroSubobj{} }
func (m *RsvpMgmtEroSubobj) String() string { return proto.CompactTextString(m) }
func (*RsvpMgmtEroSubobj) ProtoMessage()    {}
func (*RsvpMgmtEroSubobj) Descriptor() ([]byte, []int) {
	return fileDescriptor_566d4710799f1740, []int{37}
}

func (m *RsvpMgmtEroSubobj) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RsvpMgmtEroSubobj.Unmarshal(m, b)
}
func (m *RsvpMgmtEroSubobj) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RsvpMgmtEroSubobj.Marshal(b, m, deterministic)
}
func (m *RsvpMgmtEroSubobj) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RsvpMgmtEroSubobj.Merge(m, src)
}
func (m *RsvpMgmtEroSubobj) XXX_Size() int {
	return xxx_messageInfo_RsvpMgmtEroSubobj.Size(m)
}
func (m *RsvpMgmtEroSubobj) XXX_DiscardUnknown() {
	xxx_messageInfo_RsvpMgmtEroSubobj.DiscardUnknown(m)
}

var xxx_messageInfo_RsvpMgmtEroSubobj proto.InternalMessageInfo

func (m *RsvpMgmtEroSubobj) GetEroType() string {
	if m != nil {
		return m.EroType
	}
	return ""
}

func (m *RsvpMgmtEroSubobj) GetIpv4EroSubObject() *RsvpMgmtEroIpv4Subobj {
	if m != nil {
		return m.Ipv4EroSubObject
	}
	return nil
}

func (m *RsvpMgmtEroSubobj) GetUnnumberedEroSubObject() *RsvpMgmtEroUnnumSubobj {
	if m != nil {
		return m.UnnumberedEroSubObject
	}
	return nil
}

type RsvpMgmtRroIpv4SubobjFlags struct {
	IsProtectionAvailable     bool     `protobuf:"varint,1,opt,name=is_protection_available,json=isProtectionAvailable,proto3" json:"is_protection_available,omitempty"`
	IsProtectionInUse         bool     `protobuf:"varint,2,opt,name=is_protection_in_use,json=isProtectionInUse,proto3" json:"is_protection_in_use,omitempty"`
	IsBandwidthProtected      bool     `protobuf:"varint,3,opt,name=is_bandwidth_protected,json=isBandwidthProtected,proto3" json:"is_bandwidth_protected,omitempty"`
	IsNodeProtectionAvailable bool     `protobuf:"varint,4,opt,name=is_node_protection_available,json=isNodeProtectionAvailable,proto3" json:"is_node_protection_available,omitempty"`
	IsNodeId                  bool     `protobuf:"varint,5,opt,name=is_node_id,json=isNodeId,proto3" json:"is_node_id,omitempty"`
	XXX_NoUnkeyedLiteral      struct{} `json:"-"`
	XXX_unrecognized          []byte   `json:"-"`
	XXX_sizecache             int32    `json:"-"`
}

func (m *RsvpMgmtRroIpv4SubobjFlags) Reset()         { *m = RsvpMgmtRroIpv4SubobjFlags{} }
func (m *RsvpMgmtRroIpv4SubobjFlags) String() string { return proto.CompactTextString(m) }
func (*RsvpMgmtRroIpv4SubobjFlags) ProtoMessage()    {}
func (*RsvpMgmtRroIpv4SubobjFlags) Descriptor() ([]byte, []int) {
	return fileDescriptor_566d4710799f1740, []int{38}
}

func (m *RsvpMgmtRroIpv4SubobjFlags) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RsvpMgmtRroIpv4SubobjFlags.Unmarshal(m, b)
}
func (m *RsvpMgmtRroIpv4SubobjFlags) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RsvpMgmtRroIpv4SubobjFlags.Marshal(b, m, deterministic)
}
func (m *RsvpMgmtRroIpv4SubobjFlags) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RsvpMgmtRroIpv4SubobjFlags.Merge(m, src)
}
func (m *RsvpMgmtRroIpv4SubobjFlags) XXX_Size() int {
	return xxx_messageInfo_RsvpMgmtRroIpv4SubobjFlags.Size(m)
}
func (m *RsvpMgmtRroIpv4SubobjFlags) XXX_DiscardUnknown() {
	xxx_messageInfo_RsvpMgmtRroIpv4SubobjFlags.DiscardUnknown(m)
}

var xxx_messageInfo_RsvpMgmtRroIpv4SubobjFlags proto.InternalMessageInfo

func (m *RsvpMgmtRroIpv4SubobjFlags) GetIsProtectionAvailable() bool {
	if m != nil {
		return m.IsProtectionAvailable
	}
	return false
}

func (m *RsvpMgmtRroIpv4SubobjFlags) GetIsProtectionInUse() bool {
	if m != nil {
		return m.IsProtectionInUse
	}
	return false
}

func (m *RsvpMgmtRroIpv4SubobjFlags) GetIsBandwidthProtected() bool {
	if m != nil {
		return m.IsBandwidthProtected
	}
	return false
}

func (m *RsvpMgmtRroIpv4SubobjFlags) GetIsNodeProtectionAvailable() bool {
	if m != nil {
		return m.IsNodeProtectionAvailable
	}
	return false
}

func (m *RsvpMgmtRroIpv4SubobjFlags) GetIsNodeId() bool {
	if m != nil {
		return m.IsNodeId
	}
	return false
}

type RsvpMgmtRroIpv4Subobj struct {
	Flags                *RsvpMgmtRroIpv4SubobjFlags `protobuf:"bytes,1,opt,name=flags,proto3" json:"flags,omitempty"`
	RroAddress           string                      `protobuf:"bytes,2,opt,name=rro_address,json=rroAddress,proto3" json:"rro_address,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *RsvpMgmtRroIpv4Subobj) Reset()         { *m = RsvpMgmtRroIpv4Subobj{} }
func (m *RsvpMgmtRroIpv4Subobj) String() string { return proto.CompactTextString(m) }
func (*RsvpMgmtRroIpv4Subobj) ProtoMessage()    {}
func (*RsvpMgmtRroIpv4Subobj) Descriptor() ([]byte, []int) {
	return fileDescriptor_566d4710799f1740, []int{39}
}

func (m *RsvpMgmtRroIpv4Subobj) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RsvpMgmtRroIpv4Subobj.Unmarshal(m, b)
}
func (m *RsvpMgmtRroIpv4Subobj) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RsvpMgmtRroIpv4Subobj.Marshal(b, m, deterministic)
}
func (m *RsvpMgmtRroIpv4Subobj) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RsvpMgmtRroIpv4Subobj.Merge(m, src)
}
func (m *RsvpMgmtRroIpv4Subobj) XXX_Size() int {
	return xxx_messageInfo_RsvpMgmtRroIpv4Subobj.Size(m)
}
func (m *RsvpMgmtRroIpv4Subobj) XXX_DiscardUnknown() {
	xxx_messageInfo_RsvpMgmtRroIpv4Subobj.DiscardUnknown(m)
}

var xxx_messageInfo_RsvpMgmtRroIpv4Subobj proto.InternalMessageInfo

func (m *RsvpMgmtRroIpv4Subobj) GetFlags() *RsvpMgmtRroIpv4SubobjFlags {
	if m != nil {
		return m.Flags
	}
	return nil
}

func (m *RsvpMgmtRroIpv4Subobj) GetRroAddress() string {
	if m != nil {
		return m.RroAddress
	}
	return ""
}

type RsvpMgmtRroLabelSubobjFlags struct {
	IsGlobalLabel        bool     `protobuf:"varint,1,opt,name=is_global_label,json=isGlobalLabel,proto3" json:"is_global_label,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RsvpMgmtRroLabelSubobjFlags) Reset()         { *m = RsvpMgmtRroLabelSubobjFlags{} }
func (m *RsvpMgmtRroLabelSubobjFlags) String() string { return proto.CompactTextString(m) }
func (*RsvpMgmtRroLabelSubobjFlags) ProtoMessage()    {}
func (*RsvpMgmtRroLabelSubobjFlags) Descriptor() ([]byte, []int) {
	return fileDescriptor_566d4710799f1740, []int{40}
}

func (m *RsvpMgmtRroLabelSubobjFlags) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RsvpMgmtRroLabelSubobjFlags.Unmarshal(m, b)
}
func (m *RsvpMgmtRroLabelSubobjFlags) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RsvpMgmtRroLabelSubobjFlags.Marshal(b, m, deterministic)
}
func (m *RsvpMgmtRroLabelSubobjFlags) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RsvpMgmtRroLabelSubobjFlags.Merge(m, src)
}
func (m *RsvpMgmtRroLabelSubobjFlags) XXX_Size() int {
	return xxx_messageInfo_RsvpMgmtRroLabelSubobjFlags.Size(m)
}
func (m *RsvpMgmtRroLabelSubobjFlags) XXX_DiscardUnknown() {
	xxx_messageInfo_RsvpMgmtRroLabelSubobjFlags.DiscardUnknown(m)
}

var xxx_messageInfo_RsvpMgmtRroLabelSubobjFlags proto.InternalMessageInfo

func (m *RsvpMgmtRroLabelSubobjFlags) GetIsGlobalLabel() bool {
	if m != nil {
		return m.IsGlobalLabel
	}
	return false
}

type RsvpMgmtRroLabelSubobj struct {
	Flags                 *RsvpMgmtRroLabelSubobjFlags `protobuf:"bytes,1,opt,name=flags,proto3" json:"flags,omitempty"`
	Label                 uint32                       `protobuf:"varint,2,opt,name=label,proto3" json:"label,omitempty"`
	IsLabelVariableLength bool                         `protobuf:"varint,3,opt,name=is_label_variable_length,json=isLabelVariableLength,proto3" json:"is_label_variable_length,omitempty"`
	VariableLengthLabel   []uint32                     `protobuf:"varint,4,rep,packed,name=variable_length_label,json=variableLengthLabel,proto3" json:"variable_length_label,omitempty"`
	XXX_NoUnkeyedLiteral  struct{}                     `json:"-"`
	XXX_unrecognized      []byte                       `json:"-"`
	XXX_sizecache         int32                        `json:"-"`
}

func (m *RsvpMgmtRroLabelSubobj) Reset()         { *m = RsvpMgmtRroLabelSubobj{} }
func (m *RsvpMgmtRroLabelSubobj) String() string { return proto.CompactTextString(m) }
func (*RsvpMgmtRroLabelSubobj) ProtoMessage()    {}
func (*RsvpMgmtRroLabelSubobj) Descriptor() ([]byte, []int) {
	return fileDescriptor_566d4710799f1740, []int{41}
}

func (m *RsvpMgmtRroLabelSubobj) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RsvpMgmtRroLabelSubobj.Unmarshal(m, b)
}
func (m *RsvpMgmtRroLabelSubobj) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RsvpMgmtRroLabelSubobj.Marshal(b, m, deterministic)
}
func (m *RsvpMgmtRroLabelSubobj) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RsvpMgmtRroLabelSubobj.Merge(m, src)
}
func (m *RsvpMgmtRroLabelSubobj) XXX_Size() int {
	return xxx_messageInfo_RsvpMgmtRroLabelSubobj.Size(m)
}
func (m *RsvpMgmtRroLabelSubobj) XXX_DiscardUnknown() {
	xxx_messageInfo_RsvpMgmtRroLabelSubobj.DiscardUnknown(m)
}

var xxx_messageInfo_RsvpMgmtRroLabelSubobj proto.InternalMessageInfo

func (m *RsvpMgmtRroLabelSubobj) GetFlags() *RsvpMgmtRroLabelSubobjFlags {
	if m != nil {
		return m.Flags
	}
	return nil
}

func (m *RsvpMgmtRroLabelSubobj) GetLabel() uint32 {
	if m != nil {
		return m.Label
	}
	return 0
}

func (m *RsvpMgmtRroLabelSubobj) GetIsLabelVariableLength() bool {
	if m != nil {
		return m.IsLabelVariableLength
	}
	return false
}

func (m *RsvpMgmtRroLabelSubobj) GetVariableLengthLabel() []uint32 {
	if m != nil {
		return m.VariableLengthLabel
	}
	return nil
}

type RsvpMgmtRroUnnumberedSubobjFlags struct {
	IsProtectionAvailable     bool     `protobuf:"varint,1,opt,name=is_protection_available,json=isProtectionAvailable,proto3" json:"is_protection_available,omitempty"`
	IsProtectionInUse         bool     `protobuf:"varint,2,opt,name=is_protection_in_use,json=isProtectionInUse,proto3" json:"is_protection_in_use,omitempty"`
	IsBandwidthProtected      bool     `protobuf:"varint,3,opt,name=is_bandwidth_protected,json=isBandwidthProtected,proto3" json:"is_bandwidth_protected,omitempty"`
	IsNodeProtectionAvailable bool     `protobuf:"varint,4,opt,name=is_node_protection_available,json=isNodeProtectionAvailable,proto3" json:"is_node_protection_available,omitempty"`
	IsNodeId                  bool     `protobuf:"varint,5,opt,name=is_node_id,json=isNodeId,proto3" json:"is_node_id,omitempty"`
	XXX_NoUnkeyedLiteral      struct{} `json:"-"`
	XXX_unrecognized          []byte   `json:"-"`
	XXX_sizecache             int32    `json:"-"`
}

func (m *RsvpMgmtRroUnnumberedSubobjFlags) Reset()         { *m = RsvpMgmtRroUnnumberedSubobjFlags{} }
func (m *RsvpMgmtRroUnnumberedSubobjFlags) String() string { return proto.CompactTextString(m) }
func (*RsvpMgmtRroUnnumberedSubobjFlags) ProtoMessage()    {}
func (*RsvpMgmtRroUnnumberedSubobjFlags) Descriptor() ([]byte, []int) {
	return fileDescriptor_566d4710799f1740, []int{42}
}

func (m *RsvpMgmtRroUnnumberedSubobjFlags) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RsvpMgmtRroUnnumberedSubobjFlags.Unmarshal(m, b)
}
func (m *RsvpMgmtRroUnnumberedSubobjFlags) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RsvpMgmtRroUnnumberedSubobjFlags.Marshal(b, m, deterministic)
}
func (m *RsvpMgmtRroUnnumberedSubobjFlags) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RsvpMgmtRroUnnumberedSubobjFlags.Merge(m, src)
}
func (m *RsvpMgmtRroUnnumberedSubobjFlags) XXX_Size() int {
	return xxx_messageInfo_RsvpMgmtRroUnnumberedSubobjFlags.Size(m)
}
func (m *RsvpMgmtRroUnnumberedSubobjFlags) XXX_DiscardUnknown() {
	xxx_messageInfo_RsvpMgmtRroUnnumberedSubobjFlags.DiscardUnknown(m)
}

var xxx_messageInfo_RsvpMgmtRroUnnumberedSubobjFlags proto.InternalMessageInfo

func (m *RsvpMgmtRroUnnumberedSubobjFlags) GetIsProtectionAvailable() bool {
	if m != nil {
		return m.IsProtectionAvailable
	}
	return false
}

func (m *RsvpMgmtRroUnnumberedSubobjFlags) GetIsProtectionInUse() bool {
	if m != nil {
		return m.IsProtectionInUse
	}
	return false
}

func (m *RsvpMgmtRroUnnumberedSubobjFlags) GetIsBandwidthProtected() bool {
	if m != nil {
		return m.IsBandwidthProtected
	}
	return false
}

func (m *RsvpMgmtRroUnnumberedSubobjFlags) GetIsNodeProtectionAvailable() bool {
	if m != nil {
		return m.IsNodeProtectionAvailable
	}
	return false
}

func (m *RsvpMgmtRroUnnumberedSubobjFlags) GetIsNodeId() bool {
	if m != nil {
		return m.IsNodeId
	}
	return false
}

type RsvpMgmtRroUnnumberedSubobj struct {
	Flags                *RsvpMgmtRroUnnumberedSubobjFlags `protobuf:"bytes,1,opt,name=flags,proto3" json:"flags,omitempty"`
	InterfaceAddress     string                            `protobuf:"bytes,2,opt,name=interface_address,json=interfaceAddress,proto3" json:"interface_address,omitempty"`
	InterfaceId          uint32                            `protobuf:"varint,3,opt,name=interface_id,json=interfaceId,proto3" json:"interface_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                          `json:"-"`
	XXX_unrecognized     []byte                            `json:"-"`
	XXX_sizecache        int32                             `json:"-"`
}

func (m *RsvpMgmtRroUnnumberedSubobj) Reset()         { *m = RsvpMgmtRroUnnumberedSubobj{} }
func (m *RsvpMgmtRroUnnumberedSubobj) String() string { return proto.CompactTextString(m) }
func (*RsvpMgmtRroUnnumberedSubobj) ProtoMessage()    {}
func (*RsvpMgmtRroUnnumberedSubobj) Descriptor() ([]byte, []int) {
	return fileDescriptor_566d4710799f1740, []int{43}
}

func (m *RsvpMgmtRroUnnumberedSubobj) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RsvpMgmtRroUnnumberedSubobj.Unmarshal(m, b)
}
func (m *RsvpMgmtRroUnnumberedSubobj) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RsvpMgmtRroUnnumberedSubobj.Marshal(b, m, deterministic)
}
func (m *RsvpMgmtRroUnnumberedSubobj) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RsvpMgmtRroUnnumberedSubobj.Merge(m, src)
}
func (m *RsvpMgmtRroUnnumberedSubobj) XXX_Size() int {
	return xxx_messageInfo_RsvpMgmtRroUnnumberedSubobj.Size(m)
}
func (m *RsvpMgmtRroUnnumberedSubobj) XXX_DiscardUnknown() {
	xxx_messageInfo_RsvpMgmtRroUnnumberedSubobj.DiscardUnknown(m)
}

var xxx_messageInfo_RsvpMgmtRroUnnumberedSubobj proto.InternalMessageInfo

func (m *RsvpMgmtRroUnnumberedSubobj) GetFlags() *RsvpMgmtRroUnnumberedSubobjFlags {
	if m != nil {
		return m.Flags
	}
	return nil
}

func (m *RsvpMgmtRroUnnumberedSubobj) GetInterfaceAddress() string {
	if m != nil {
		return m.InterfaceAddress
	}
	return ""
}

func (m *RsvpMgmtRroUnnumberedSubobj) GetInterfaceId() uint32 {
	if m != nil {
		return m.InterfaceId
	}
	return 0
}

type RsvpMgmtRroSrlgSubobj struct {
	SrlGs                []uint32 `protobuf:"varint,1,rep,packed,name=srl_gs,json=srlGs,proto3" json:"srl_gs,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RsvpMgmtRroSrlgSubobj) Reset()         { *m = RsvpMgmtRroSrlgSubobj{} }
func (m *RsvpMgmtRroSrlgSubobj) String() string { return proto.CompactTextString(m) }
func (*RsvpMgmtRroSrlgSubobj) ProtoMessage()    {}
func (*RsvpMgmtRroSrlgSubobj) Descriptor() ([]byte, []int) {
	return fileDescriptor_566d4710799f1740, []int{44}
}

func (m *RsvpMgmtRroSrlgSubobj) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RsvpMgmtRroSrlgSubobj.Unmarshal(m, b)
}
func (m *RsvpMgmtRroSrlgSubobj) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RsvpMgmtRroSrlgSubobj.Marshal(b, m, deterministic)
}
func (m *RsvpMgmtRroSrlgSubobj) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RsvpMgmtRroSrlgSubobj.Merge(m, src)
}
func (m *RsvpMgmtRroSrlgSubobj) XXX_Size() int {
	return xxx_messageInfo_RsvpMgmtRroSrlgSubobj.Size(m)
}
func (m *RsvpMgmtRroSrlgSubobj) XXX_DiscardUnknown() {
	xxx_messageInfo_RsvpMgmtRroSrlgSubobj.DiscardUnknown(m)
}

var xxx_messageInfo_RsvpMgmtRroSrlgSubobj proto.InternalMessageInfo

func (m *RsvpMgmtRroSrlgSubobj) GetSrlGs() []uint32 {
	if m != nil {
		return m.SrlGs
	}
	return nil
}

type RsvpMgmtRroSubobj struct {
	RroType                string                       `protobuf:"bytes,1,opt,name=rro_type,json=rroType,proto3" json:"rro_type,omitempty"`
	Ipv4RroSubObject       *RsvpMgmtRroIpv4Subobj       `protobuf:"bytes,2,opt,name=ipv4rro_sub_object,json=ipv4rroSubObject,proto3" json:"ipv4rro_sub_object,omitempty"`
	LabelRroSubObject      *RsvpMgmtRroLabelSubobj      `protobuf:"bytes,3,opt,name=label_rro_sub_object,json=labelRroSubObject,proto3" json:"label_rro_sub_object,omitempty"`
	UnnumberedRroSubObject *RsvpMgmtRroUnnumberedSubobj `protobuf:"bytes,4,opt,name=unnumbered_rro_sub_object,json=unnumberedRroSubObject,proto3" json:"unnumbered_rro_sub_object,omitempty"`
	SrlgRroSubObject       *RsvpMgmtRroSrlgSubobj       `protobuf:"bytes,5,opt,name=srlg_rro_sub_object,json=srlgRroSubObject,proto3" json:"srlg_rro_sub_object,omitempty"`
	XXX_NoUnkeyedLiteral   struct{}                     `json:"-"`
	XXX_unrecognized       []byte                       `json:"-"`
	XXX_sizecache          int32                        `json:"-"`
}

func (m *RsvpMgmtRroSubobj) Reset()         { *m = RsvpMgmtRroSubobj{} }
func (m *RsvpMgmtRroSubobj) String() string { return proto.CompactTextString(m) }
func (*RsvpMgmtRroSubobj) ProtoMessage()    {}
func (*RsvpMgmtRroSubobj) Descriptor() ([]byte, []int) {
	return fileDescriptor_566d4710799f1740, []int{45}
}

func (m *RsvpMgmtRroSubobj) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RsvpMgmtRroSubobj.Unmarshal(m, b)
}
func (m *RsvpMgmtRroSubobj) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RsvpMgmtRroSubobj.Marshal(b, m, deterministic)
}
func (m *RsvpMgmtRroSubobj) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RsvpMgmtRroSubobj.Merge(m, src)
}
func (m *RsvpMgmtRroSubobj) XXX_Size() int {
	return xxx_messageInfo_RsvpMgmtRroSubobj.Size(m)
}
func (m *RsvpMgmtRroSubobj) XXX_DiscardUnknown() {
	xxx_messageInfo_RsvpMgmtRroSubobj.DiscardUnknown(m)
}

var xxx_messageInfo_RsvpMgmtRroSubobj proto.InternalMessageInfo

func (m *RsvpMgmtRroSubobj) GetRroType() string {
	if m != nil {
		return m.RroType
	}
	return ""
}

func (m *RsvpMgmtRroSubobj) GetIpv4RroSubObject() *RsvpMgmtRroIpv4Subobj {
	if m != nil {
		return m.Ipv4RroSubObject
	}
	return nil
}

func (m *RsvpMgmtRroSubobj) GetLabelRroSubObject() *RsvpMgmtRroLabelSubobj {
	if m != nil {
		return m.LabelRroSubObject
	}
	return nil
}

func (m *RsvpMgmtRroSubobj) GetUnnumberedRroSubObject() *RsvpMgmtRroUnnumberedSubobj {
	if m != nil {
		return m.UnnumberedRroSubObject
	}
	return nil
}

func (m *RsvpMgmtRroSubobj) GetSrlgRroSubObject() *RsvpMgmtRroSrlgSubobj {
	if m != nil {
		return m.SrlgRroSubObject
	}
	return nil
}

type TunnelHopInfo struct {
	HopAddress           string   `protobuf:"bytes,1,opt,name=hop_address,json=hopAddress,proto3" json:"hop_address,omitempty"`
	HopAffinity          uint32   `protobuf:"varint,2,opt,name=hop_affinity,json=hopAffinity,proto3" json:"hop_affinity,omitempty"`
	HopExtendedAffinity  []uint32 `protobuf:"varint,3,rep,packed,name=hop_extended_affinity,json=hopExtendedAffinity,proto3" json:"hop_extended_affinity,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TunnelHopInfo) Reset()         { *m = TunnelHopInfo{} }
func (m *TunnelHopInfo) String() string { return proto.CompactTextString(m) }
func (*TunnelHopInfo) ProtoMessage()    {}
func (*TunnelHopInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_566d4710799f1740, []int{46}
}

func (m *TunnelHopInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TunnelHopInfo.Unmarshal(m, b)
}
func (m *TunnelHopInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TunnelHopInfo.Marshal(b, m, deterministic)
}
func (m *TunnelHopInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TunnelHopInfo.Merge(m, src)
}
func (m *TunnelHopInfo) XXX_Size() int {
	return xxx_messageInfo_TunnelHopInfo.Size(m)
}
func (m *TunnelHopInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_TunnelHopInfo.DiscardUnknown(m)
}

var xxx_messageInfo_TunnelHopInfo proto.InternalMessageInfo

func (m *TunnelHopInfo) GetHopAddress() string {
	if m != nil {
		return m.HopAddress
	}
	return ""
}

func (m *TunnelHopInfo) GetHopAffinity() uint32 {
	if m != nil {
		return m.HopAffinity
	}
	return 0
}

func (m *TunnelHopInfo) GetHopExtendedAffinity() []uint32 {
	if m != nil {
		return m.HopExtendedAffinity
	}
	return nil
}

type BandwidthSpecBag struct {
	AverageRate          uint64   `protobuf:"varint,1,opt,name=average_rate,json=averageRate,proto3" json:"average_rate,omitempty"`
	MaximumBurst         uint64   `protobuf:"varint,2,opt,name=maximum_burst,json=maximumBurst,proto3" json:"maximum_burst,omitempty"`
	PeakRate             uint64   `protobuf:"varint,3,opt,name=peak_rate,json=peakRate,proto3" json:"peak_rate,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BandwidthSpecBag) Reset()         { *m = BandwidthSpecBag{} }
func (m *BandwidthSpecBag) String() string { return proto.CompactTextString(m) }
func (*BandwidthSpecBag) ProtoMessage()    {}
func (*BandwidthSpecBag) Descriptor() ([]byte, []int) {
	return fileDescriptor_566d4710799f1740, []int{47}
}

func (m *BandwidthSpecBag) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BandwidthSpecBag.Unmarshal(m, b)
}
func (m *BandwidthSpecBag) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BandwidthSpecBag.Marshal(b, m, deterministic)
}
func (m *BandwidthSpecBag) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BandwidthSpecBag.Merge(m, src)
}
func (m *BandwidthSpecBag) XXX_Size() int {
	return xxx_messageInfo_BandwidthSpecBag.Size(m)
}
func (m *BandwidthSpecBag) XXX_DiscardUnknown() {
	xxx_messageInfo_BandwidthSpecBag.DiscardUnknown(m)
}

var xxx_messageInfo_BandwidthSpecBag proto.InternalMessageInfo

func (m *BandwidthSpecBag) GetAverageRate() uint64 {
	if m != nil {
		return m.AverageRate
	}
	return 0
}

func (m *BandwidthSpecBag) GetMaximumBurst() uint64 {
	if m != nil {
		return m.MaximumBurst
	}
	return 0
}

func (m *BandwidthSpecBag) GetPeakRate() uint64 {
	if m != nil {
		return m.PeakRate
	}
	return 0
}

type TeMgmtG709OtnTspec struct {
	SignalType           uint32   `protobuf:"varint,1,opt,name=signal_type,json=signalType,proto3" json:"signal_type,omitempty"`
	NmcOrTolerance       uint32   `protobuf:"varint,2,opt,name=nmc_or_tolerance,json=nmcOrTolerance,proto3" json:"nmc_or_tolerance,omitempty"`
	Nvc                  uint32   `protobuf:"varint,3,opt,name=nvc,proto3" json:"nvc,omitempty"`
	Multiplier           uint32   `protobuf:"varint,4,opt,name=multiplier,proto3" json:"multiplier,omitempty"`
	BitRate              uint32   `protobuf:"varint,5,opt,name=bit_rate,json=bitRate,proto3" json:"bit_rate,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TeMgmtG709OtnTspec) Reset()         { *m = TeMgmtG709OtnTspec{} }
func (m *TeMgmtG709OtnTspec) String() string { return proto.CompactTextString(m) }
func (*TeMgmtG709OtnTspec) ProtoMessage()    {}
func (*TeMgmtG709OtnTspec) Descriptor() ([]byte, []int) {
	return fileDescriptor_566d4710799f1740, []int{48}
}

func (m *TeMgmtG709OtnTspec) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TeMgmtG709OtnTspec.Unmarshal(m, b)
}
func (m *TeMgmtG709OtnTspec) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TeMgmtG709OtnTspec.Marshal(b, m, deterministic)
}
func (m *TeMgmtG709OtnTspec) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TeMgmtG709OtnTspec.Merge(m, src)
}
func (m *TeMgmtG709OtnTspec) XXX_Size() int {
	return xxx_messageInfo_TeMgmtG709OtnTspec.Size(m)
}
func (m *TeMgmtG709OtnTspec) XXX_DiscardUnknown() {
	xxx_messageInfo_TeMgmtG709OtnTspec.DiscardUnknown(m)
}

var xxx_messageInfo_TeMgmtG709OtnTspec proto.InternalMessageInfo

func (m *TeMgmtG709OtnTspec) GetSignalType() uint32 {
	if m != nil {
		return m.SignalType
	}
	return 0
}

func (m *TeMgmtG709OtnTspec) GetNmcOrTolerance() uint32 {
	if m != nil {
		return m.NmcOrTolerance
	}
	return 0
}

func (m *TeMgmtG709OtnTspec) GetNvc() uint32 {
	if m != nil {
		return m.Nvc
	}
	return 0
}

func (m *TeMgmtG709OtnTspec) GetMultiplier() uint32 {
	if m != nil {
		return m.Multiplier
	}
	return 0
}

func (m *TeMgmtG709OtnTspec) GetBitRate() uint32 {
	if m != nil {
		return m.BitRate
	}
	return 0
}

type TeMgmtGenericTspec struct {
	TspecType            string              `protobuf:"bytes,1,opt,name=tspec_type,json=tspecType,proto3" json:"tspec_type,omitempty"`
	Otntspec             *TeMgmtG709OtnTspec `protobuf:"bytes,2,opt,name=otntspec,proto3" json:"otntspec,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *TeMgmtGenericTspec) Reset()         { *m = TeMgmtGenericTspec{} }
func (m *TeMgmtGenericTspec) String() string { return proto.CompactTextString(m) }
func (*TeMgmtGenericTspec) ProtoMessage()    {}
func (*TeMgmtGenericTspec) Descriptor() ([]byte, []int) {
	return fileDescriptor_566d4710799f1740, []int{49}
}

func (m *TeMgmtGenericTspec) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TeMgmtGenericTspec.Unmarshal(m, b)
}
func (m *TeMgmtGenericTspec) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TeMgmtGenericTspec.Marshal(b, m, deterministic)
}
func (m *TeMgmtGenericTspec) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TeMgmtGenericTspec.Merge(m, src)
}
func (m *TeMgmtGenericTspec) XXX_Size() int {
	return xxx_messageInfo_TeMgmtGenericTspec.Size(m)
}
func (m *TeMgmtGenericTspec) XXX_DiscardUnknown() {
	xxx_messageInfo_TeMgmtGenericTspec.DiscardUnknown(m)
}

var xxx_messageInfo_TeMgmtGenericTspec proto.InternalMessageInfo

func (m *TeMgmtGenericTspec) GetTspecType() string {
	if m != nil {
		return m.TspecType
	}
	return ""
}

func (m *TeMgmtGenericTspec) GetOtntspec() *TeMgmtG709OtnTspec {
	if m != nil {
		return m.Otntspec
	}
	return nil
}

type TeMgmtG709OtnFspec struct {
	SignalType           uint32   `protobuf:"varint,1,opt,name=signal_type,json=signalType,proto3" json:"signal_type,omitempty"`
	NmcOrTolerance       uint32   `protobuf:"varint,2,opt,name=nmc_or_tolerance,json=nmcOrTolerance,proto3" json:"nmc_or_tolerance,omitempty"`
	Nvc                  uint32   `protobuf:"varint,3,opt,name=nvc,proto3" json:"nvc,omitempty"`
	Multiplier           uint32   `protobuf:"varint,4,opt,name=multiplier,proto3" json:"multiplier,omitempty"`
	BitRate              uint32   `protobuf:"varint,5,opt,name=bit_rate,json=bitRate,proto3" json:"bit_rate,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TeMgmtG709OtnFspec) Reset()         { *m = TeMgmtG709OtnFspec{} }
func (m *TeMgmtG709OtnFspec) String() string { return proto.CompactTextString(m) }
func (*TeMgmtG709OtnFspec) ProtoMessage()    {}
func (*TeMgmtG709OtnFspec) Descriptor() ([]byte, []int) {
	return fileDescriptor_566d4710799f1740, []int{50}
}

func (m *TeMgmtG709OtnFspec) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TeMgmtG709OtnFspec.Unmarshal(m, b)
}
func (m *TeMgmtG709OtnFspec) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TeMgmtG709OtnFspec.Marshal(b, m, deterministic)
}
func (m *TeMgmtG709OtnFspec) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TeMgmtG709OtnFspec.Merge(m, src)
}
func (m *TeMgmtG709OtnFspec) XXX_Size() int {
	return xxx_messageInfo_TeMgmtG709OtnFspec.Size(m)
}
func (m *TeMgmtG709OtnFspec) XXX_DiscardUnknown() {
	xxx_messageInfo_TeMgmtG709OtnFspec.DiscardUnknown(m)
}

var xxx_messageInfo_TeMgmtG709OtnFspec proto.InternalMessageInfo

func (m *TeMgmtG709OtnFspec) GetSignalType() uint32 {
	if m != nil {
		return m.SignalType
	}
	return 0
}

func (m *TeMgmtG709OtnFspec) GetNmcOrTolerance() uint32 {
	if m != nil {
		return m.NmcOrTolerance
	}
	return 0
}

func (m *TeMgmtG709OtnFspec) GetNvc() uint32 {
	if m != nil {
		return m.Nvc
	}
	return 0
}

func (m *TeMgmtG709OtnFspec) GetMultiplier() uint32 {
	if m != nil {
		return m.Multiplier
	}
	return 0
}

func (m *TeMgmtG709OtnFspec) GetBitRate() uint32 {
	if m != nil {
		return m.BitRate
	}
	return 0
}

type TeMgmtGenericFspec struct {
	FspecType            string              `protobuf:"bytes,1,opt,name=fspec_type,json=fspecType,proto3" json:"fspec_type,omitempty"`
	Otnfspec             *TeMgmtG709OtnFspec `protobuf:"bytes,2,opt,name=otnfspec,proto3" json:"otnfspec,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *TeMgmtGenericFspec) Reset()         { *m = TeMgmtGenericFspec{} }
func (m *TeMgmtGenericFspec) String() string { return proto.CompactTextString(m) }
func (*TeMgmtGenericFspec) ProtoMessage()    {}
func (*TeMgmtGenericFspec) Descriptor() ([]byte, []int) {
	return fileDescriptor_566d4710799f1740, []int{51}
}

func (m *TeMgmtGenericFspec) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TeMgmtGenericFspec.Unmarshal(m, b)
}
func (m *TeMgmtGenericFspec) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TeMgmtGenericFspec.Marshal(b, m, deterministic)
}
func (m *TeMgmtGenericFspec) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TeMgmtGenericFspec.Merge(m, src)
}
func (m *TeMgmtGenericFspec) XXX_Size() int {
	return xxx_messageInfo_TeMgmtGenericFspec.Size(m)
}
func (m *TeMgmtGenericFspec) XXX_DiscardUnknown() {
	xxx_messageInfo_TeMgmtGenericFspec.DiscardUnknown(m)
}

var xxx_messageInfo_TeMgmtGenericFspec proto.InternalMessageInfo

func (m *TeMgmtGenericFspec) GetFspecType() string {
	if m != nil {
		return m.FspecType
	}
	return ""
}

func (m *TeMgmtGenericFspec) GetOtnfspec() *TeMgmtG709OtnFspec {
	if m != nil {
		return m.Otnfspec
	}
	return nil
}

type TeAddrTypeIpv4Unnum struct {
	RouterId             string   `protobuf:"bytes,1,opt,name=router_id,json=routerId,proto3" json:"router_id,omitempty"`
	InterfaceIndex       uint32   `protobuf:"varint,2,opt,name=interface_index,json=interfaceIndex,proto3" json:"interface_index,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TeAddrTypeIpv4Unnum) Reset()         { *m = TeAddrTypeIpv4Unnum{} }
func (m *TeAddrTypeIpv4Unnum) String() string { return proto.CompactTextString(m) }
func (*TeAddrTypeIpv4Unnum) ProtoMessage()    {}
func (*TeAddrTypeIpv4Unnum) Descriptor() ([]byte, []int) {
	return fileDescriptor_566d4710799f1740, []int{52}
}

func (m *TeAddrTypeIpv4Unnum) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TeAddrTypeIpv4Unnum.Unmarshal(m, b)
}
func (m *TeAddrTypeIpv4Unnum) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TeAddrTypeIpv4Unnum.Marshal(b, m, deterministic)
}
func (m *TeAddrTypeIpv4Unnum) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TeAddrTypeIpv4Unnum.Merge(m, src)
}
func (m *TeAddrTypeIpv4Unnum) XXX_Size() int {
	return xxx_messageInfo_TeAddrTypeIpv4Unnum.Size(m)
}
func (m *TeAddrTypeIpv4Unnum) XXX_DiscardUnknown() {
	xxx_messageInfo_TeAddrTypeIpv4Unnum.DiscardUnknown(m)
}

var xxx_messageInfo_TeAddrTypeIpv4Unnum proto.InternalMessageInfo

func (m *TeAddrTypeIpv4Unnum) GetRouterId() string {
	if m != nil {
		return m.RouterId
	}
	return ""
}

func (m *TeAddrTypeIpv4Unnum) GetInterfaceIndex() uint32 {
	if m != nil {
		return m.InterfaceIndex
	}
	return 0
}

type Addr struct {
	Type                  string               `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Ipv4Address           string               `protobuf:"bytes,2,opt,name=ipv4_address,json=ipv4Address,proto3" json:"ipv4_address,omitempty"`
	Ipv4UnnumberedAddress *TeAddrTypeIpv4Unnum `protobuf:"bytes,3,opt,name=ipv4_unnumbered_address,json=ipv4UnnumberedAddress,proto3" json:"ipv4_unnumbered_address,omitempty"`
	XXX_NoUnkeyedLiteral  struct{}             `json:"-"`
	XXX_unrecognized      []byte               `json:"-"`
	XXX_sizecache         int32                `json:"-"`
}

func (m *Addr) Reset()         { *m = Addr{} }
func (m *Addr) String() string { return proto.CompactTextString(m) }
func (*Addr) ProtoMessage()    {}
func (*Addr) Descriptor() ([]byte, []int) {
	return fileDescriptor_566d4710799f1740, []int{53}
}

func (m *Addr) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Addr.Unmarshal(m, b)
}
func (m *Addr) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Addr.Marshal(b, m, deterministic)
}
func (m *Addr) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Addr.Merge(m, src)
}
func (m *Addr) XXX_Size() int {
	return xxx_messageInfo_Addr.Size(m)
}
func (m *Addr) XXX_DiscardUnknown() {
	xxx_messageInfo_Addr.DiscardUnknown(m)
}

var xxx_messageInfo_Addr proto.InternalMessageInfo

func (m *Addr) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *Addr) GetIpv4Address() string {
	if m != nil {
		return m.Ipv4Address
	}
	return ""
}

func (m *Addr) GetIpv4UnnumberedAddress() *TeAddrTypeIpv4Unnum {
	if m != nil {
		return m.Ipv4UnnumberedAddress
	}
	return nil
}

type TeAddrT_ struct {
	TeAddr               *Addr    `protobuf:"bytes,1,opt,name=te_addr,json=teAddr,proto3" json:"te_addr,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TeAddrT_) Reset()         { *m = TeAddrT_{} }
func (m *TeAddrT_) String() string { return proto.CompactTextString(m) }
func (*TeAddrT_) ProtoMessage()    {}
func (*TeAddrT_) Descriptor() ([]byte, []int) {
	return fileDescriptor_566d4710799f1740, []int{54}
}

func (m *TeAddrT_) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TeAddrT_.Unmarshal(m, b)
}
func (m *TeAddrT_) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TeAddrT_.Marshal(b, m, deterministic)
}
func (m *TeAddrT_) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TeAddrT_.Merge(m, src)
}
func (m *TeAddrT_) XXX_Size() int {
	return xxx_messageInfo_TeAddrT_.Size(m)
}
func (m *TeAddrT_) XXX_DiscardUnknown() {
	xxx_messageInfo_TeAddrT_.DiscardUnknown(m)
}

var xxx_messageInfo_TeAddrT_ proto.InternalMessageInfo

func (m *TeAddrT_) GetTeAddr() *Addr {
	if m != nil {
		return m.TeAddr
	}
	return nil
}

type TeLspConvergenceInfo struct {
	PathIn               uint64   `protobuf:"varint,1,opt,name=path_in,json=pathIn,proto3" json:"path_in,omitempty"`
	PathOut              uint64   `protobuf:"varint,2,opt,name=path_out,json=pathOut,proto3" json:"path_out,omitempty"`
	ResvIn               uint64   `protobuf:"varint,3,opt,name=resv_in,json=resvIn,proto3" json:"resv_in,omitempty"`
	ResvOut              uint64   `protobuf:"varint,4,opt,name=resv_out,json=resvOut,proto3" json:"resv_out,omitempty"`
	LabelRewrite         uint64   `protobuf:"varint,5,opt,name=label_rewrite,json=labelRewrite,proto3" json:"label_rewrite,omitempty"`
	TunnelRewrite        uint64   `protobuf:"varint,6,opt,name=tunnel_rewrite,json=tunnelRewrite,proto3" json:"tunnel_rewrite,omitempty"`
	CreationTime         uint64   `protobuf:"varint,7,opt,name=creation_time,json=creationTime,proto3" json:"creation_time,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TeLspConvergenceInfo) Reset()         { *m = TeLspConvergenceInfo{} }
func (m *TeLspConvergenceInfo) String() string { return proto.CompactTextString(m) }
func (*TeLspConvergenceInfo) ProtoMessage()    {}
func (*TeLspConvergenceInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_566d4710799f1740, []int{55}
}

func (m *TeLspConvergenceInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TeLspConvergenceInfo.Unmarshal(m, b)
}
func (m *TeLspConvergenceInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TeLspConvergenceInfo.Marshal(b, m, deterministic)
}
func (m *TeLspConvergenceInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TeLspConvergenceInfo.Merge(m, src)
}
func (m *TeLspConvergenceInfo) XXX_Size() int {
	return xxx_messageInfo_TeLspConvergenceInfo.Size(m)
}
func (m *TeLspConvergenceInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_TeLspConvergenceInfo.DiscardUnknown(m)
}

var xxx_messageInfo_TeLspConvergenceInfo proto.InternalMessageInfo

func (m *TeLspConvergenceInfo) GetPathIn() uint64 {
	if m != nil {
		return m.PathIn
	}
	return 0
}

func (m *TeLspConvergenceInfo) GetPathOut() uint64 {
	if m != nil {
		return m.PathOut
	}
	return 0
}

func (m *TeLspConvergenceInfo) GetResvIn() uint64 {
	if m != nil {
		return m.ResvIn
	}
	return 0
}

func (m *TeLspConvergenceInfo) GetResvOut() uint64 {
	if m != nil {
		return m.ResvOut
	}
	return 0
}

func (m *TeLspConvergenceInfo) GetLabelRewrite() uint64 {
	if m != nil {
		return m.LabelRewrite
	}
	return 0
}

func (m *TeLspConvergenceInfo) GetTunnelRewrite() uint64 {
	if m != nil {
		return m.TunnelRewrite
	}
	return 0
}

func (m *TeLspConvergenceInfo) GetCreationTime() uint64 {
	if m != nil {
		return m.CreationTime
	}
	return 0
}

type MplsTeSoftPreemptionLspInfo struct {
	Status                  string   `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	SoftPreemptionTimestamp uint32   `protobuf:"varint,2,opt,name=soft_preemption_timestamp,json=softPreemptionTimestamp,proto3" json:"soft_preemption_timestamp,omitempty"`
	SoftPreemptionLink      string   `protobuf:"bytes,3,opt,name=soft_preemption_link,json=softPreemptionLink,proto3" json:"soft_preemption_link,omitempty"`
	PreemptingLinkAddress   string   `protobuf:"bytes,4,opt,name=preempting_link_address,json=preemptingLinkAddress,proto3" json:"preempting_link_address,omitempty"`
	TimeToHardPreemption    uint32   `protobuf:"varint,5,opt,name=time_to_hard_preemption,json=timeToHardPreemption,proto3" json:"time_to_hard_preemption,omitempty"`
	FrRrewrite              bool     `protobuf:"varint,6,opt,name=fr_rrewrite,json=frRrewrite,proto3" json:"fr_rrewrite,omitempty"`
	FrRrewriteTunnelName    string   `protobuf:"bytes,7,opt,name=fr_rrewrite_tunnel_name,json=frRrewriteTunnelName,proto3" json:"fr_rrewrite_tunnel_name,omitempty"`
	XXX_NoUnkeyedLiteral    struct{} `json:"-"`
	XXX_unrecognized        []byte   `json:"-"`
	XXX_sizecache           int32    `json:"-"`
}

func (m *MplsTeSoftPreemptionLspInfo) Reset()         { *m = MplsTeSoftPreemptionLspInfo{} }
func (m *MplsTeSoftPreemptionLspInfo) String() string { return proto.CompactTextString(m) }
func (*MplsTeSoftPreemptionLspInfo) ProtoMessage()    {}
func (*MplsTeSoftPreemptionLspInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_566d4710799f1740, []int{56}
}

func (m *MplsTeSoftPreemptionLspInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsTeSoftPreemptionLspInfo.Unmarshal(m, b)
}
func (m *MplsTeSoftPreemptionLspInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsTeSoftPreemptionLspInfo.Marshal(b, m, deterministic)
}
func (m *MplsTeSoftPreemptionLspInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsTeSoftPreemptionLspInfo.Merge(m, src)
}
func (m *MplsTeSoftPreemptionLspInfo) XXX_Size() int {
	return xxx_messageInfo_MplsTeSoftPreemptionLspInfo.Size(m)
}
func (m *MplsTeSoftPreemptionLspInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsTeSoftPreemptionLspInfo.DiscardUnknown(m)
}

var xxx_messageInfo_MplsTeSoftPreemptionLspInfo proto.InternalMessageInfo

func (m *MplsTeSoftPreemptionLspInfo) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *MplsTeSoftPreemptionLspInfo) GetSoftPreemptionTimestamp() uint32 {
	if m != nil {
		return m.SoftPreemptionTimestamp
	}
	return 0
}

func (m *MplsTeSoftPreemptionLspInfo) GetSoftPreemptionLink() string {
	if m != nil {
		return m.SoftPreemptionLink
	}
	return ""
}

func (m *MplsTeSoftPreemptionLspInfo) GetPreemptingLinkAddress() string {
	if m != nil {
		return m.PreemptingLinkAddress
	}
	return ""
}

func (m *MplsTeSoftPreemptionLspInfo) GetTimeToHardPreemption() uint32 {
	if m != nil {
		return m.TimeToHardPreemption
	}
	return 0
}

func (m *MplsTeSoftPreemptionLspInfo) GetFrRrewrite() bool {
	if m != nil {
		return m.FrRrewrite
	}
	return false
}

func (m *MplsTeSoftPreemptionLspInfo) GetFrRrewriteTunnelName() string {
	if m != nil {
		return m.FrRrewriteTunnelName
	}
	return ""
}

type MplsTeMgmtWdmFixedGridLabel struct {
	LabelSet             bool     `protobuf:"varint,1,opt,name=label_set,json=labelSet,proto3" json:"label_set,omitempty"`
	Grid                 string   `protobuf:"bytes,2,opt,name=grid,proto3" json:"grid,omitempty"`
	ChannelSpacing       string   `protobuf:"bytes,3,opt,name=channel_spacing,json=channelSpacing,proto3" json:"channel_spacing,omitempty"`
	Identifier           uint32   `protobuf:"varint,4,opt,name=identifier,proto3" json:"identifier,omitempty"`
	Channel              string   `protobuf:"bytes,5,opt,name=channel,proto3" json:"channel,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MplsTeMgmtWdmFixedGridLabel) Reset()         { *m = MplsTeMgmtWdmFixedGridLabel{} }
func (m *MplsTeMgmtWdmFixedGridLabel) String() string { return proto.CompactTextString(m) }
func (*MplsTeMgmtWdmFixedGridLabel) ProtoMessage()    {}
func (*MplsTeMgmtWdmFixedGridLabel) Descriptor() ([]byte, []int) {
	return fileDescriptor_566d4710799f1740, []int{57}
}

func (m *MplsTeMgmtWdmFixedGridLabel) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsTeMgmtWdmFixedGridLabel.Unmarshal(m, b)
}
func (m *MplsTeMgmtWdmFixedGridLabel) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsTeMgmtWdmFixedGridLabel.Marshal(b, m, deterministic)
}
func (m *MplsTeMgmtWdmFixedGridLabel) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsTeMgmtWdmFixedGridLabel.Merge(m, src)
}
func (m *MplsTeMgmtWdmFixedGridLabel) XXX_Size() int {
	return xxx_messageInfo_MplsTeMgmtWdmFixedGridLabel.Size(m)
}
func (m *MplsTeMgmtWdmFixedGridLabel) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsTeMgmtWdmFixedGridLabel.DiscardUnknown(m)
}

var xxx_messageInfo_MplsTeMgmtWdmFixedGridLabel proto.InternalMessageInfo

func (m *MplsTeMgmtWdmFixedGridLabel) GetLabelSet() bool {
	if m != nil {
		return m.LabelSet
	}
	return false
}

func (m *MplsTeMgmtWdmFixedGridLabel) GetGrid() string {
	if m != nil {
		return m.Grid
	}
	return ""
}

func (m *MplsTeMgmtWdmFixedGridLabel) GetChannelSpacing() string {
	if m != nil {
		return m.ChannelSpacing
	}
	return ""
}

func (m *MplsTeMgmtWdmFixedGridLabel) GetIdentifier() uint32 {
	if m != nil {
		return m.Identifier
	}
	return 0
}

func (m *MplsTeMgmtWdmFixedGridLabel) GetChannel() string {
	if m != nil {
		return m.Channel
	}
	return ""
}

type MplsTeMgmtG709OtnFixedSizeLabel struct {
	Tpn                  uint32   `protobuf:"varint,1,opt,name=tpn,proto3" json:"tpn,omitempty"`
	BitMapLength         uint32   `protobuf:"varint,2,opt,name=bit_map_length,json=bitMapLength,proto3" json:"bit_map_length,omitempty"`
	BitMap               []uint32 `protobuf:"varint,3,rep,packed,name=bit_map,json=bitMap,proto3" json:"bit_map,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MplsTeMgmtG709OtnFixedSizeLabel) Reset()         { *m = MplsTeMgmtG709OtnFixedSizeLabel{} }
func (m *MplsTeMgmtG709OtnFixedSizeLabel) String() string { return proto.CompactTextString(m) }
func (*MplsTeMgmtG709OtnFixedSizeLabel) ProtoMessage()    {}
func (*MplsTeMgmtG709OtnFixedSizeLabel) Descriptor() ([]byte, []int) {
	return fileDescriptor_566d4710799f1740, []int{58}
}

func (m *MplsTeMgmtG709OtnFixedSizeLabel) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsTeMgmtG709OtnFixedSizeLabel.Unmarshal(m, b)
}
func (m *MplsTeMgmtG709OtnFixedSizeLabel) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsTeMgmtG709OtnFixedSizeLabel.Marshal(b, m, deterministic)
}
func (m *MplsTeMgmtG709OtnFixedSizeLabel) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsTeMgmtG709OtnFixedSizeLabel.Merge(m, src)
}
func (m *MplsTeMgmtG709OtnFixedSizeLabel) XXX_Size() int {
	return xxx_messageInfo_MplsTeMgmtG709OtnFixedSizeLabel.Size(m)
}
func (m *MplsTeMgmtG709OtnFixedSizeLabel) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsTeMgmtG709OtnFixedSizeLabel.DiscardUnknown(m)
}

var xxx_messageInfo_MplsTeMgmtG709OtnFixedSizeLabel proto.InternalMessageInfo

func (m *MplsTeMgmtG709OtnFixedSizeLabel) GetTpn() uint32 {
	if m != nil {
		return m.Tpn
	}
	return 0
}

func (m *MplsTeMgmtG709OtnFixedSizeLabel) GetBitMapLength() uint32 {
	if m != nil {
		return m.BitMapLength
	}
	return 0
}

func (m *MplsTeMgmtG709OtnFixedSizeLabel) GetBitMap() []uint32 {
	if m != nil {
		return m.BitMap
	}
	return nil
}

type MplsTeMgmtGmplsLabel struct {
	LabelType            string                           `protobuf:"bytes,1,opt,name=label_type,json=labelType,proto3" json:"label_type,omitempty"`
	Wdm                  *MplsTeMgmtWdmFixedGridLabel     `protobuf:"bytes,2,opt,name=wdm,proto3" json:"wdm,omitempty"`
	Otn                  *MplsTeMgmtG709OtnFixedSizeLabel `protobuf:"bytes,3,opt,name=otn,proto3" json:"otn,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                         `json:"-"`
	XXX_unrecognized     []byte                           `json:"-"`
	XXX_sizecache        int32                            `json:"-"`
}

func (m *MplsTeMgmtGmplsLabel) Reset()         { *m = MplsTeMgmtGmplsLabel{} }
func (m *MplsTeMgmtGmplsLabel) String() string { return proto.CompactTextString(m) }
func (*MplsTeMgmtGmplsLabel) ProtoMessage()    {}
func (*MplsTeMgmtGmplsLabel) Descriptor() ([]byte, []int) {
	return fileDescriptor_566d4710799f1740, []int{59}
}

func (m *MplsTeMgmtGmplsLabel) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsTeMgmtGmplsLabel.Unmarshal(m, b)
}
func (m *MplsTeMgmtGmplsLabel) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsTeMgmtGmplsLabel.Marshal(b, m, deterministic)
}
func (m *MplsTeMgmtGmplsLabel) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsTeMgmtGmplsLabel.Merge(m, src)
}
func (m *MplsTeMgmtGmplsLabel) XXX_Size() int {
	return xxx_messageInfo_MplsTeMgmtGmplsLabel.Size(m)
}
func (m *MplsTeMgmtGmplsLabel) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsTeMgmtGmplsLabel.DiscardUnknown(m)
}

var xxx_messageInfo_MplsTeMgmtGmplsLabel proto.InternalMessageInfo

func (m *MplsTeMgmtGmplsLabel) GetLabelType() string {
	if m != nil {
		return m.LabelType
	}
	return ""
}

func (m *MplsTeMgmtGmplsLabel) GetWdm() *MplsTeMgmtWdmFixedGridLabel {
	if m != nil {
		return m.Wdm
	}
	return nil
}

func (m *MplsTeMgmtGmplsLabel) GetOtn() *MplsTeMgmtG709OtnFixedSizeLabel {
	if m != nil {
		return m.Otn
	}
	return nil
}

type MplsTeMgmtGmplsLabels struct {
	PathIngressLabel     *MplsTeMgmtGmplsLabel `protobuf:"bytes,1,opt,name=path_ingress_label,json=pathIngressLabel,proto3" json:"path_ingress_label,omitempty"`
	PathEgressLabel      *MplsTeMgmtGmplsLabel `protobuf:"bytes,2,opt,name=path_egress_label,json=pathEgressLabel,proto3" json:"path_egress_label,omitempty"`
	ResvIngressLabel     *MplsTeMgmtGmplsLabel `protobuf:"bytes,3,opt,name=resv_ingress_label,json=resvIngressLabel,proto3" json:"resv_ingress_label,omitempty"`
	ResvEgressLabel      *MplsTeMgmtGmplsLabel `protobuf:"bytes,4,opt,name=resv_egress_label,json=resvEgressLabel,proto3" json:"resv_egress_label,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *MplsTeMgmtGmplsLabels) Reset()         { *m = MplsTeMgmtGmplsLabels{} }
func (m *MplsTeMgmtGmplsLabels) String() string { return proto.CompactTextString(m) }
func (*MplsTeMgmtGmplsLabels) ProtoMessage()    {}
func (*MplsTeMgmtGmplsLabels) Descriptor() ([]byte, []int) {
	return fileDescriptor_566d4710799f1740, []int{60}
}

func (m *MplsTeMgmtGmplsLabels) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsTeMgmtGmplsLabels.Unmarshal(m, b)
}
func (m *MplsTeMgmtGmplsLabels) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsTeMgmtGmplsLabels.Marshal(b, m, deterministic)
}
func (m *MplsTeMgmtGmplsLabels) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsTeMgmtGmplsLabels.Merge(m, src)
}
func (m *MplsTeMgmtGmplsLabels) XXX_Size() int {
	return xxx_messageInfo_MplsTeMgmtGmplsLabels.Size(m)
}
func (m *MplsTeMgmtGmplsLabels) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsTeMgmtGmplsLabels.DiscardUnknown(m)
}

var xxx_messageInfo_MplsTeMgmtGmplsLabels proto.InternalMessageInfo

func (m *MplsTeMgmtGmplsLabels) GetPathIngressLabel() *MplsTeMgmtGmplsLabel {
	if m != nil {
		return m.PathIngressLabel
	}
	return nil
}

func (m *MplsTeMgmtGmplsLabels) GetPathEgressLabel() *MplsTeMgmtGmplsLabel {
	if m != nil {
		return m.PathEgressLabel
	}
	return nil
}

func (m *MplsTeMgmtGmplsLabels) GetResvIngressLabel() *MplsTeMgmtGmplsLabel {
	if m != nil {
		return m.ResvIngressLabel
	}
	return nil
}

func (m *MplsTeMgmtGmplsLabels) GetResvEgressLabel() *MplsTeMgmtGmplsLabel {
	if m != nil {
		return m.ResvEgressLabel
	}
	return nil
}

type TeOduFlexCbrInfo struct {
	BitRate              uint32   `protobuf:"varint,1,opt,name=bit_rate,json=bitRate,proto3" json:"bit_rate,omitempty"`
	Tolerance            uint32   `protobuf:"varint,2,opt,name=tolerance,proto3" json:"tolerance,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TeOduFlexCbrInfo) Reset()         { *m = TeOduFlexCbrInfo{} }
func (m *TeOduFlexCbrInfo) String() string { return proto.CompactTextString(m) }
func (*TeOduFlexCbrInfo) ProtoMessage()    {}
func (*TeOduFlexCbrInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_566d4710799f1740, []int{61}
}

func (m *TeOduFlexCbrInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TeOduFlexCbrInfo.Unmarshal(m, b)
}
func (m *TeOduFlexCbrInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TeOduFlexCbrInfo.Marshal(b, m, deterministic)
}
func (m *TeOduFlexCbrInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TeOduFlexCbrInfo.Merge(m, src)
}
func (m *TeOduFlexCbrInfo) XXX_Size() int {
	return xxx_messageInfo_TeOduFlexCbrInfo.Size(m)
}
func (m *TeOduFlexCbrInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_TeOduFlexCbrInfo.DiscardUnknown(m)
}

var xxx_messageInfo_TeOduFlexCbrInfo proto.InternalMessageInfo

func (m *TeOduFlexCbrInfo) GetBitRate() uint32 {
	if m != nil {
		return m.BitRate
	}
	return 0
}

func (m *TeOduFlexCbrInfo) GetTolerance() uint32 {
	if m != nil {
		return m.Tolerance
	}
	return 0
}

type TeOduFlexGfpFResInfo struct {
	BitRate              uint32   `protobuf:"varint,1,opt,name=bit_rate,json=bitRate,proto3" json:"bit_rate,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TeOduFlexGfpFResInfo) Reset()         { *m = TeOduFlexGfpFResInfo{} }
func (m *TeOduFlexGfpFResInfo) String() string { return proto.CompactTextString(m) }
func (*TeOduFlexGfpFResInfo) ProtoMessage()    {}
func (*TeOduFlexGfpFResInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_566d4710799f1740, []int{62}
}

func (m *TeOduFlexGfpFResInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TeOduFlexGfpFResInfo.Unmarshal(m, b)
}
func (m *TeOduFlexGfpFResInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TeOduFlexGfpFResInfo.Marshal(b, m, deterministic)
}
func (m *TeOduFlexGfpFResInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TeOduFlexGfpFResInfo.Merge(m, src)
}
func (m *TeOduFlexGfpFResInfo) XXX_Size() int {
	return xxx_messageInfo_TeOduFlexGfpFResInfo.Size(m)
}
func (m *TeOduFlexGfpFResInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_TeOduFlexGfpFResInfo.DiscardUnknown(m)
}

var xxx_messageInfo_TeOduFlexGfpFResInfo proto.InternalMessageInfo

func (m *TeOduFlexGfpFResInfo) GetBitRate() uint32 {
	if m != nil {
		return m.BitRate
	}
	return 0
}

type TeOduFlexGfpFNonResInfo struct {
	BitRate              uint32   `protobuf:"varint,1,opt,name=bit_rate,json=bitRate,proto3" json:"bit_rate,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TeOduFlexGfpFNonResInfo) Reset()         { *m = TeOduFlexGfpFNonResInfo{} }
func (m *TeOduFlexGfpFNonResInfo) String() string { return proto.CompactTextString(m) }
func (*TeOduFlexGfpFNonResInfo) ProtoMessage()    {}
func (*TeOduFlexGfpFNonResInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_566d4710799f1740, []int{63}
}

func (m *TeOduFlexGfpFNonResInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TeOduFlexGfpFNonResInfo.Unmarshal(m, b)
}
func (m *TeOduFlexGfpFNonResInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TeOduFlexGfpFNonResInfo.Marshal(b, m, deterministic)
}
func (m *TeOduFlexGfpFNonResInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TeOduFlexGfpFNonResInfo.Merge(m, src)
}
func (m *TeOduFlexGfpFNonResInfo) XXX_Size() int {
	return xxx_messageInfo_TeOduFlexGfpFNonResInfo.Size(m)
}
func (m *TeOduFlexGfpFNonResInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_TeOduFlexGfpFNonResInfo.DiscardUnknown(m)
}

var xxx_messageInfo_TeOduFlexGfpFNonResInfo proto.InternalMessageInfo

func (m *TeOduFlexGfpFNonResInfo) GetBitRate() uint32 {
	if m != nil {
		return m.BitRate
	}
	return 0
}

type TeOduV3Bw struct {
	OduLevel             string                   `protobuf:"bytes,1,opt,name=odu_level,json=oduLevel,proto3" json:"odu_level,omitempty"`
	OduFlexCbr           *TeOduFlexCbrInfo        `protobuf:"bytes,2,opt,name=odu_flex_cbr,json=oduFlexCbr,proto3" json:"odu_flex_cbr,omitempty"`
	OduFlexGfpFRes       *TeOduFlexGfpFResInfo    `protobuf:"bytes,3,opt,name=odu_flex_gfp_f_res,json=oduFlexGfpFRes,proto3" json:"odu_flex_gfp_f_res,omitempty"`
	OduFlexGfpFNonRes    *TeOduFlexGfpFNonResInfo `protobuf:"bytes,4,opt,name=odu_flex_gfp_f_non_res,json=oduFlexGfpFNonRes,proto3" json:"odu_flex_gfp_f_non_res,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *TeOduV3Bw) Reset()         { *m = TeOduV3Bw{} }
func (m *TeOduV3Bw) String() string { return proto.CompactTextString(m) }
func (*TeOduV3Bw) ProtoMessage()    {}
func (*TeOduV3Bw) Descriptor() ([]byte, []int) {
	return fileDescriptor_566d4710799f1740, []int{64}
}

func (m *TeOduV3Bw) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TeOduV3Bw.Unmarshal(m, b)
}
func (m *TeOduV3Bw) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TeOduV3Bw.Marshal(b, m, deterministic)
}
func (m *TeOduV3Bw) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TeOduV3Bw.Merge(m, src)
}
func (m *TeOduV3Bw) XXX_Size() int {
	return xxx_messageInfo_TeOduV3Bw.Size(m)
}
func (m *TeOduV3Bw) XXX_DiscardUnknown() {
	xxx_messageInfo_TeOduV3Bw.DiscardUnknown(m)
}

var xxx_messageInfo_TeOduV3Bw proto.InternalMessageInfo

func (m *TeOduV3Bw) GetOduLevel() string {
	if m != nil {
		return m.OduLevel
	}
	return ""
}

func (m *TeOduV3Bw) GetOduFlexCbr() *TeOduFlexCbrInfo {
	if m != nil {
		return m.OduFlexCbr
	}
	return nil
}

func (m *TeOduV3Bw) GetOduFlexGfpFRes() *TeOduFlexGfpFResInfo {
	if m != nil {
		return m.OduFlexGfpFRes
	}
	return nil
}

func (m *TeOduV3Bw) GetOduFlexGfpFNonRes() *TeOduFlexGfpFNonResInfo {
	if m != nil {
		return m.OduFlexGfpFNonRes
	}
	return nil
}

type MplsTeS2LOtnInfo struct {
	IncomingController            string                 `protobuf:"bytes,1,opt,name=incoming_controller,json=incomingController,proto3" json:"incoming_controller,omitempty"`
	IncomingControllerState       string                 `protobuf:"bytes,2,opt,name=incoming_controller_state,json=incomingControllerState,proto3" json:"incoming_controller_state,omitempty"`
	IncomingSubController         string                 `protobuf:"bytes,3,opt,name=incoming_sub_controller,json=incomingSubController,proto3" json:"incoming_sub_controller,omitempty"`
	IncomingSubControllerState    string                 `protobuf:"bytes,4,opt,name=incoming_sub_controller_state,json=incomingSubControllerState,proto3" json:"incoming_sub_controller_state,omitempty"`
	OutgoingController            string                 `protobuf:"bytes,5,opt,name=outgoing_controller,json=outgoingController,proto3" json:"outgoing_controller,omitempty"`
	OutgoingControllerState       string                 `protobuf:"bytes,6,opt,name=outgoing_controller_state,json=outgoingControllerState,proto3" json:"outgoing_controller_state,omitempty"`
	OutgoingSubController         string                 `protobuf:"bytes,7,opt,name=outgoing_sub_controller,json=outgoingSubController,proto3" json:"outgoing_sub_controller,omitempty"`
	OutgoingSubControllerState    string                 `protobuf:"bytes,8,opt,name=outgoing_sub_controller_state,json=outgoingSubControllerState,proto3" json:"outgoing_sub_controller_state,omitempty"`
	Bandwidth                     *TeOduV3Bw             `protobuf:"bytes,9,opt,name=bandwidth,proto3" json:"bandwidth,omitempty"`
	Labels                        *MplsTeMgmtGmplsLabels `protobuf:"bytes,10,opt,name=labels,proto3" json:"labels,omitempty"`
	CrossConnectId                uint32                 `protobuf:"varint,11,opt,name=cross_connect_id,json=crossConnectId,proto3" json:"cross_connect_id,omitempty"`
	IsConnected                   bool                   `protobuf:"varint,12,opt,name=is_connected,json=isConnected,proto3" json:"is_connected,omitempty"`
	Uptime                        uint32                 `protobuf:"varint,13,opt,name=uptime,proto3" json:"uptime,omitempty"`
	OutgoingControllerIfhandle    string                 `protobuf:"bytes,14,opt,name=outgoing_controller_ifhandle,json=outgoingControllerIfhandle,proto3" json:"outgoing_controller_ifhandle,omitempty"`
	OutgoingSubControllerIfhandle string                 `protobuf:"bytes,15,opt,name=outgoing_sub_controller_ifhandle,json=outgoingSubControllerIfhandle,proto3" json:"outgoing_sub_controller_ifhandle,omitempty"`
	IncomingControllerIfhandle    string                 `protobuf:"bytes,16,opt,name=incoming_controller_ifhandle,json=incomingControllerIfhandle,proto3" json:"incoming_controller_ifhandle,omitempty"`
	IncomingSubControllerIfhandle string                 `protobuf:"bytes,17,opt,name=incoming_sub_controller_ifhandle,json=incomingSubControllerIfhandle,proto3" json:"incoming_sub_controller_ifhandle,omitempty"`
	Gpid                          uint32                 `protobuf:"varint,18,opt,name=gpid,proto3" json:"gpid,omitempty"`
	XXX_NoUnkeyedLiteral          struct{}               `json:"-"`
	XXX_unrecognized              []byte                 `json:"-"`
	XXX_sizecache                 int32                  `json:"-"`
}

func (m *MplsTeS2LOtnInfo) Reset()         { *m = MplsTeS2LOtnInfo{} }
func (m *MplsTeS2LOtnInfo) String() string { return proto.CompactTextString(m) }
func (*MplsTeS2LOtnInfo) ProtoMessage()    {}
func (*MplsTeS2LOtnInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_566d4710799f1740, []int{65}
}

func (m *MplsTeS2LOtnInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsTeS2LOtnInfo.Unmarshal(m, b)
}
func (m *MplsTeS2LOtnInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsTeS2LOtnInfo.Marshal(b, m, deterministic)
}
func (m *MplsTeS2LOtnInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsTeS2LOtnInfo.Merge(m, src)
}
func (m *MplsTeS2LOtnInfo) XXX_Size() int {
	return xxx_messageInfo_MplsTeS2LOtnInfo.Size(m)
}
func (m *MplsTeS2LOtnInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsTeS2LOtnInfo.DiscardUnknown(m)
}

var xxx_messageInfo_MplsTeS2LOtnInfo proto.InternalMessageInfo

func (m *MplsTeS2LOtnInfo) GetIncomingController() string {
	if m != nil {
		return m.IncomingController
	}
	return ""
}

func (m *MplsTeS2LOtnInfo) GetIncomingControllerState() string {
	if m != nil {
		return m.IncomingControllerState
	}
	return ""
}

func (m *MplsTeS2LOtnInfo) GetIncomingSubController() string {
	if m != nil {
		return m.IncomingSubController
	}
	return ""
}

func (m *MplsTeS2LOtnInfo) GetIncomingSubControllerState() string {
	if m != nil {
		return m.IncomingSubControllerState
	}
	return ""
}

func (m *MplsTeS2LOtnInfo) GetOutgoingController() string {
	if m != nil {
		return m.OutgoingController
	}
	return ""
}

func (m *MplsTeS2LOtnInfo) GetOutgoingControllerState() string {
	if m != nil {
		return m.OutgoingControllerState
	}
	return ""
}

func (m *MplsTeS2LOtnInfo) GetOutgoingSubController() string {
	if m != nil {
		return m.OutgoingSubController
	}
	return ""
}

func (m *MplsTeS2LOtnInfo) GetOutgoingSubControllerState() string {
	if m != nil {
		return m.OutgoingSubControllerState
	}
	return ""
}

func (m *MplsTeS2LOtnInfo) GetBandwidth() *TeOduV3Bw {
	if m != nil {
		return m.Bandwidth
	}
	return nil
}

func (m *MplsTeS2LOtnInfo) GetLabels() *MplsTeMgmtGmplsLabels {
	if m != nil {
		return m.Labels
	}
	return nil
}

func (m *MplsTeS2LOtnInfo) GetCrossConnectId() uint32 {
	if m != nil {
		return m.CrossConnectId
	}
	return 0
}

func (m *MplsTeS2LOtnInfo) GetIsConnected() bool {
	if m != nil {
		return m.IsConnected
	}
	return false
}

func (m *MplsTeS2LOtnInfo) GetUptime() uint32 {
	if m != nil {
		return m.Uptime
	}
	return 0
}

func (m *MplsTeS2LOtnInfo) GetOutgoingControllerIfhandle() string {
	if m != nil {
		return m.OutgoingControllerIfhandle
	}
	return ""
}

func (m *MplsTeS2LOtnInfo) GetOutgoingSubControllerIfhandle() string {
	if m != nil {
		return m.OutgoingSubControllerIfhandle
	}
	return ""
}

func (m *MplsTeS2LOtnInfo) GetIncomingControllerIfhandle() string {
	if m != nil {
		return m.IncomingControllerIfhandle
	}
	return ""
}

func (m *MplsTeS2LOtnInfo) GetIncomingSubControllerIfhandle() string {
	if m != nil {
		return m.IncomingSubControllerIfhandle
	}
	return ""
}

func (m *MplsTeS2LOtnInfo) GetGpid() uint32 {
	if m != nil {
		return m.Gpid
	}
	return 0
}

type TePvtProtObjT struct {
	Sbit                 bool     `protobuf:"varint,1,opt,name=sbit,proto3" json:"sbit,omitempty"`
	Pbit                 bool     `protobuf:"varint,2,opt,name=pbit,proto3" json:"pbit,omitempty"`
	Nbit                 bool     `protobuf:"varint,3,opt,name=nbit,proto3" json:"nbit,omitempty"`
	Obit                 bool     `protobuf:"varint,4,opt,name=obit,proto3" json:"obit,omitempty"`
	ProtectType          string   `protobuf:"bytes,5,opt,name=protect_type,json=protectType,proto3" json:"protect_type,omitempty"`
	IsWtrPresent         bool     `protobuf:"varint,6,opt,name=is_wtr_present,json=isWtrPresent,proto3" json:"is_wtr_present,omitempty"`
	WtrTimeout           uint32   `protobuf:"varint,7,opt,name=wtr_timeout,json=wtrTimeout,proto3" json:"wtr_timeout,omitempty"`
	IsHopresent          bool     `protobuf:"varint,8,opt,name=is_hopresent,json=isHopresent,proto3" json:"is_hopresent,omitempty"`
	HoTimeout            uint32   `protobuf:"varint,9,opt,name=ho_timeout,json=hoTimeout,proto3" json:"ho_timeout,omitempty"`
	IsSncModePresent     bool     `protobuf:"varint,10,opt,name=is_snc_mode_present,json=isSncModePresent,proto3" json:"is_snc_mode_present,omitempty"`
	SncMode              string   `protobuf:"bytes,11,opt,name=snc_mode,json=sncMode,proto3" json:"snc_mode,omitempty"`
	TcmId                uint32   `protobuf:"varint,12,opt,name=tcm_id,json=tcmId,proto3" json:"tcm_id,omitempty"`
	PathProtProfileType  string   `protobuf:"bytes,13,opt,name=path_prot_profile_type,json=pathProtProfileType,proto3" json:"path_prot_profile_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TePvtProtObjT) Reset()         { *m = TePvtProtObjT{} }
func (m *TePvtProtObjT) String() string { return proto.CompactTextString(m) }
func (*TePvtProtObjT) ProtoMessage()    {}
func (*TePvtProtObjT) Descriptor() ([]byte, []int) {
	return fileDescriptor_566d4710799f1740, []int{66}
}

func (m *TePvtProtObjT) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TePvtProtObjT.Unmarshal(m, b)
}
func (m *TePvtProtObjT) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TePvtProtObjT.Marshal(b, m, deterministic)
}
func (m *TePvtProtObjT) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TePvtProtObjT.Merge(m, src)
}
func (m *TePvtProtObjT) XXX_Size() int {
	return xxx_messageInfo_TePvtProtObjT.Size(m)
}
func (m *TePvtProtObjT) XXX_DiscardUnknown() {
	xxx_messageInfo_TePvtProtObjT.DiscardUnknown(m)
}

var xxx_messageInfo_TePvtProtObjT proto.InternalMessageInfo

func (m *TePvtProtObjT) GetSbit() bool {
	if m != nil {
		return m.Sbit
	}
	return false
}

func (m *TePvtProtObjT) GetPbit() bool {
	if m != nil {
		return m.Pbit
	}
	return false
}

func (m *TePvtProtObjT) GetNbit() bool {
	if m != nil {
		return m.Nbit
	}
	return false
}

func (m *TePvtProtObjT) GetObit() bool {
	if m != nil {
		return m.Obit
	}
	return false
}

func (m *TePvtProtObjT) GetProtectType() string {
	if m != nil {
		return m.ProtectType
	}
	return ""
}

func (m *TePvtProtObjT) GetIsWtrPresent() bool {
	if m != nil {
		return m.IsWtrPresent
	}
	return false
}

func (m *TePvtProtObjT) GetWtrTimeout() uint32 {
	if m != nil {
		return m.WtrTimeout
	}
	return 0
}

func (m *TePvtProtObjT) GetIsHopresent() bool {
	if m != nil {
		return m.IsHopresent
	}
	return false
}

func (m *TePvtProtObjT) GetHoTimeout() uint32 {
	if m != nil {
		return m.HoTimeout
	}
	return 0
}

func (m *TePvtProtObjT) GetIsSncModePresent() bool {
	if m != nil {
		return m.IsSncModePresent
	}
	return false
}

func (m *TePvtProtObjT) GetSncMode() string {
	if m != nil {
		return m.SncMode
	}
	return ""
}

func (m *TePvtProtObjT) GetTcmId() uint32 {
	if m != nil {
		return m.TcmId
	}
	return 0
}

func (m *TePvtProtObjT) GetPathProtProfileType() string {
	if m != nil {
		return m.PathProtProfileType
	}
	return ""
}

type MplsTeS2LApsInfo struct {
	ProtectionInfo       *TePvtProtObjT `protobuf:"bytes,1,opt,name=protection_info,json=protectionInfo,proto3" json:"protection_info,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *MplsTeS2LApsInfo) Reset()         { *m = MplsTeS2LApsInfo{} }
func (m *MplsTeS2LApsInfo) String() string { return proto.CompactTextString(m) }
func (*MplsTeS2LApsInfo) ProtoMessage()    {}
func (*MplsTeS2LApsInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_566d4710799f1740, []int{67}
}

func (m *MplsTeS2LApsInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsTeS2LApsInfo.Unmarshal(m, b)
}
func (m *MplsTeS2LApsInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsTeS2LApsInfo.Marshal(b, m, deterministic)
}
func (m *MplsTeS2LApsInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsTeS2LApsInfo.Merge(m, src)
}
func (m *MplsTeS2LApsInfo) XXX_Size() int {
	return xxx_messageInfo_MplsTeS2LApsInfo.Size(m)
}
func (m *MplsTeS2LApsInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsTeS2LApsInfo.DiscardUnknown(m)
}

var xxx_messageInfo_MplsTeS2LApsInfo proto.InternalMessageInfo

func (m *MplsTeS2LApsInfo) GetProtectionInfo() *TePvtProtObjT {
	if m != nil {
		return m.ProtectionInfo
	}
	return nil
}

type MplsTeOtnS2LInfo struct {
	Otn                  *MplsTeS2LOtnInfo `protobuf:"bytes,1,opt,name=otn,proto3" json:"otn,omitempty"`
	Aps                  *MplsTeS2LApsInfo `protobuf:"bytes,2,opt,name=aps,proto3" json:"aps,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *MplsTeOtnS2LInfo) Reset()         { *m = MplsTeOtnS2LInfo{} }
func (m *MplsTeOtnS2LInfo) String() string { return proto.CompactTextString(m) }
func (*MplsTeOtnS2LInfo) ProtoMessage()    {}
func (*MplsTeOtnS2LInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_566d4710799f1740, []int{68}
}

func (m *MplsTeOtnS2LInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsTeOtnS2LInfo.Unmarshal(m, b)
}
func (m *MplsTeOtnS2LInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsTeOtnS2LInfo.Marshal(b, m, deterministic)
}
func (m *MplsTeOtnS2LInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsTeOtnS2LInfo.Merge(m, src)
}
func (m *MplsTeOtnS2LInfo) XXX_Size() int {
	return xxx_messageInfo_MplsTeOtnS2LInfo.Size(m)
}
func (m *MplsTeOtnS2LInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsTeOtnS2LInfo.DiscardUnknown(m)
}

var xxx_messageInfo_MplsTeOtnS2LInfo proto.InternalMessageInfo

func (m *MplsTeOtnS2LInfo) GetOtn() *MplsTeS2LOtnInfo {
	if m != nil {
		return m.Otn
	}
	return nil
}

func (m *MplsTeOtnS2LInfo) GetAps() *MplsTeS2LApsInfo {
	if m != nil {
		return m.Aps
	}
	return nil
}

type MplsTeBfdSessionInfo struct {
	State                string   `protobuf:"bytes,1,opt,name=state,proto3" json:"state,omitempty"`
	StateChangeTime      uint32   `protobuf:"varint,2,opt,name=state_change_time,json=stateChangeTime,proto3" json:"state_change_time,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MplsTeBfdSessionInfo) Reset()         { *m = MplsTeBfdSessionInfo{} }
func (m *MplsTeBfdSessionInfo) String() string { return proto.CompactTextString(m) }
func (*MplsTeBfdSessionInfo) ProtoMessage()    {}
func (*MplsTeBfdSessionInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_566d4710799f1740, []int{69}
}

func (m *MplsTeBfdSessionInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsTeBfdSessionInfo.Unmarshal(m, b)
}
func (m *MplsTeBfdSessionInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsTeBfdSessionInfo.Marshal(b, m, deterministic)
}
func (m *MplsTeBfdSessionInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsTeBfdSessionInfo.Merge(m, src)
}
func (m *MplsTeBfdSessionInfo) XXX_Size() int {
	return xxx_messageInfo_MplsTeBfdSessionInfo.Size(m)
}
func (m *MplsTeBfdSessionInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsTeBfdSessionInfo.DiscardUnknown(m)
}

var xxx_messageInfo_MplsTeBfdSessionInfo proto.InternalMessageInfo

func (m *MplsTeBfdSessionInfo) GetState() string {
	if m != nil {
		return m.State
	}
	return ""
}

func (m *MplsTeBfdSessionInfo) GetStateChangeTime() uint32 {
	if m != nil {
		return m.StateChangeTime
	}
	return 0
}

type MplsTeBfdDeletionHistory struct {
	LspId                  uint32   `protobuf:"varint,1,opt,name=lsp_id,json=lspId,proto3" json:"lsp_id,omitempty"`
	DeletionTime           uint32   `protobuf:"varint,2,opt,name=deletion_time,json=deletionTime,proto3" json:"deletion_time,omitempty"`
	DeletionReason         string   `protobuf:"bytes,3,opt,name=deletion_reason,json=deletionReason,proto3" json:"deletion_reason,omitempty"`
	DeletionDiagnosticCode uint32   `protobuf:"varint,4,opt,name=deletion_diagnostic_code,json=deletionDiagnosticCode,proto3" json:"deletion_diagnostic_code,omitempty"`
	XXX_NoUnkeyedLiteral   struct{} `json:"-"`
	XXX_unrecognized       []byte   `json:"-"`
	XXX_sizecache          int32    `json:"-"`
}

func (m *MplsTeBfdDeletionHistory) Reset()         { *m = MplsTeBfdDeletionHistory{} }
func (m *MplsTeBfdDeletionHistory) String() string { return proto.CompactTextString(m) }
func (*MplsTeBfdDeletionHistory) ProtoMessage()    {}
func (*MplsTeBfdDeletionHistory) Descriptor() ([]byte, []int) {
	return fileDescriptor_566d4710799f1740, []int{70}
}

func (m *MplsTeBfdDeletionHistory) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsTeBfdDeletionHistory.Unmarshal(m, b)
}
func (m *MplsTeBfdDeletionHistory) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsTeBfdDeletionHistory.Marshal(b, m, deterministic)
}
func (m *MplsTeBfdDeletionHistory) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsTeBfdDeletionHistory.Merge(m, src)
}
func (m *MplsTeBfdDeletionHistory) XXX_Size() int {
	return xxx_messageInfo_MplsTeBfdDeletionHistory.Size(m)
}
func (m *MplsTeBfdDeletionHistory) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsTeBfdDeletionHistory.DiscardUnknown(m)
}

var xxx_messageInfo_MplsTeBfdDeletionHistory proto.InternalMessageInfo

func (m *MplsTeBfdDeletionHistory) GetLspId() uint32 {
	if m != nil {
		return m.LspId
	}
	return 0
}

func (m *MplsTeBfdDeletionHistory) GetDeletionTime() uint32 {
	if m != nil {
		return m.DeletionTime
	}
	return 0
}

func (m *MplsTeBfdDeletionHistory) GetDeletionReason() string {
	if m != nil {
		return m.DeletionReason
	}
	return ""
}

func (m *MplsTeBfdDeletionHistory) GetDeletionDiagnosticCode() uint32 {
	if m != nil {
		return m.DeletionDiagnosticCode
	}
	return 0
}

type MplsTeHeadBfdInfo struct {
	CreationTime         uint32                    `protobuf:"varint,1,opt,name=creation_time,json=creationTime,proto3" json:"creation_time,omitempty"`
	SessionInfo          *MplsTeBfdSessionInfo     `protobuf:"bytes,2,opt,name=session_info,json=sessionInfo,proto3" json:"session_info,omitempty"`
	DeletionHistory      *MplsTeBfdDeletionHistory `protobuf:"bytes,3,opt,name=deletion_history,json=deletionHistory,proto3" json:"deletion_history,omitempty"`
	LspbfdType           string                    `protobuf:"bytes,4,opt,name=lspbfd_type,json=lspbfdType,proto3" json:"lspbfd_type,omitempty"`
	IsRedundant          bool                      `protobuf:"varint,5,opt,name=is_redundant,json=isRedundant,proto3" json:"is_redundant,omitempty"`
	BfdReversePathLabel  []uint32                  `protobuf:"varint,6,rep,packed,name=bfd_reverse_path_label,json=bfdReversePathLabel,proto3" json:"bfd_reverse_path_label,omitempty"`
	BfdReversePathStale  bool                      `protobuf:"varint,7,opt,name=bfd_reverse_path_stale,json=bfdReversePathStale,proto3" json:"bfd_reverse_path_stale,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *MplsTeHeadBfdInfo) Reset()         { *m = MplsTeHeadBfdInfo{} }
func (m *MplsTeHeadBfdInfo) String() string { return proto.CompactTextString(m) }
func (*MplsTeHeadBfdInfo) ProtoMessage()    {}
func (*MplsTeHeadBfdInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_566d4710799f1740, []int{71}
}

func (m *MplsTeHeadBfdInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsTeHeadBfdInfo.Unmarshal(m, b)
}
func (m *MplsTeHeadBfdInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsTeHeadBfdInfo.Marshal(b, m, deterministic)
}
func (m *MplsTeHeadBfdInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsTeHeadBfdInfo.Merge(m, src)
}
func (m *MplsTeHeadBfdInfo) XXX_Size() int {
	return xxx_messageInfo_MplsTeHeadBfdInfo.Size(m)
}
func (m *MplsTeHeadBfdInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsTeHeadBfdInfo.DiscardUnknown(m)
}

var xxx_messageInfo_MplsTeHeadBfdInfo proto.InternalMessageInfo

func (m *MplsTeHeadBfdInfo) GetCreationTime() uint32 {
	if m != nil {
		return m.CreationTime
	}
	return 0
}

func (m *MplsTeHeadBfdInfo) GetSessionInfo() *MplsTeBfdSessionInfo {
	if m != nil {
		return m.SessionInfo
	}
	return nil
}

func (m *MplsTeHeadBfdInfo) GetDeletionHistory() *MplsTeBfdDeletionHistory {
	if m != nil {
		return m.DeletionHistory
	}
	return nil
}

func (m *MplsTeHeadBfdInfo) GetLspbfdType() string {
	if m != nil {
		return m.LspbfdType
	}
	return ""
}

func (m *MplsTeHeadBfdInfo) GetIsRedundant() bool {
	if m != nil {
		return m.IsRedundant
	}
	return false
}

func (m *MplsTeHeadBfdInfo) GetBfdReversePathLabel() []uint32 {
	if m != nil {
		return m.BfdReversePathLabel
	}
	return nil
}

func (m *MplsTeHeadBfdInfo) GetBfdReversePathStale() bool {
	if m != nil {
		return m.BfdReversePathStale
	}
	return false
}

type MplsTeTailBfdInfo struct {
	SessionInfo           *MplsTeBfdSessionInfo `protobuf:"bytes,1,opt,name=session_info,json=sessionInfo,proto3" json:"session_info,omitempty"`
	FailureDiagnosticCode uint32                `protobuf:"varint,2,opt,name=failure_diagnostic_code,json=failureDiagnosticCode,proto3" json:"failure_diagnostic_code,omitempty"`
	FailureReason         string                `protobuf:"bytes,3,opt,name=failure_reason,json=failureReason,proto3" json:"failure_reason,omitempty"`
	LocalDiscriminator    uint32                `protobuf:"varint,4,opt,name=local_discriminator,json=localDiscriminator,proto3" json:"local_discriminator,omitempty"`
	RemoteDiscriminator   uint32                `protobuf:"varint,5,opt,name=remote_discriminator,json=remoteDiscriminator,proto3" json:"remote_discriminator,omitempty"`
	MinInterval           uint32                `protobuf:"varint,6,opt,name=min_interval,json=minInterval,proto3" json:"min_interval,omitempty"`
	MinIntervalDefault    bool                  `protobuf:"varint,7,opt,name=min_interval_default,json=minIntervalDefault,proto3" json:"min_interval_default,omitempty"`
	Multiplier            uint32                `protobuf:"varint,8,opt,name=multiplier,proto3" json:"multiplier,omitempty"`
	MultiplierDefault     bool                  `protobuf:"varint,9,opt,name=multiplier_default,json=multiplierDefault,proto3" json:"multiplier_default,omitempty"`
	XXX_NoUnkeyedLiteral  struct{}              `json:"-"`
	XXX_unrecognized      []byte                `json:"-"`
	XXX_sizecache         int32                 `json:"-"`
}

func (m *MplsTeTailBfdInfo) Reset()         { *m = MplsTeTailBfdInfo{} }
func (m *MplsTeTailBfdInfo) String() string { return proto.CompactTextString(m) }
func (*MplsTeTailBfdInfo) ProtoMessage()    {}
func (*MplsTeTailBfdInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_566d4710799f1740, []int{72}
}

func (m *MplsTeTailBfdInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsTeTailBfdInfo.Unmarshal(m, b)
}
func (m *MplsTeTailBfdInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsTeTailBfdInfo.Marshal(b, m, deterministic)
}
func (m *MplsTeTailBfdInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsTeTailBfdInfo.Merge(m, src)
}
func (m *MplsTeTailBfdInfo) XXX_Size() int {
	return xxx_messageInfo_MplsTeTailBfdInfo.Size(m)
}
func (m *MplsTeTailBfdInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsTeTailBfdInfo.DiscardUnknown(m)
}

var xxx_messageInfo_MplsTeTailBfdInfo proto.InternalMessageInfo

func (m *MplsTeTailBfdInfo) GetSessionInfo() *MplsTeBfdSessionInfo {
	if m != nil {
		return m.SessionInfo
	}
	return nil
}

func (m *MplsTeTailBfdInfo) GetFailureDiagnosticCode() uint32 {
	if m != nil {
		return m.FailureDiagnosticCode
	}
	return 0
}

func (m *MplsTeTailBfdInfo) GetFailureReason() string {
	if m != nil {
		return m.FailureReason
	}
	return ""
}

func (m *MplsTeTailBfdInfo) GetLocalDiscriminator() uint32 {
	if m != nil {
		return m.LocalDiscriminator
	}
	return 0
}

func (m *MplsTeTailBfdInfo) GetRemoteDiscriminator() uint32 {
	if m != nil {
		return m.RemoteDiscriminator
	}
	return 0
}

func (m *MplsTeTailBfdInfo) GetMinInterval() uint32 {
	if m != nil {
		return m.MinInterval
	}
	return 0
}

func (m *MplsTeTailBfdInfo) GetMinIntervalDefault() bool {
	if m != nil {
		return m.MinIntervalDefault
	}
	return false
}

func (m *MplsTeTailBfdInfo) GetMultiplier() uint32 {
	if m != nil {
		return m.Multiplier
	}
	return 0
}

func (m *MplsTeTailBfdInfo) GetMultiplierDefault() bool {
	if m != nil {
		return m.MultiplierDefault
	}
	return false
}

type TeS2LSrlgCollectInfo struct {
	SrlgCollectType      string   `protobuf:"bytes,1,opt,name=srlg_collect_type,json=srlgCollectType,proto3" json:"srlg_collect_type,omitempty"`
	DiscoveredSrlg       []uint32 `protobuf:"varint,2,rep,packed,name=discovered_srlg,json=discoveredSrlg,proto3" json:"discovered_srlg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TeS2LSrlgCollectInfo) Reset()         { *m = TeS2LSrlgCollectInfo{} }
func (m *TeS2LSrlgCollectInfo) String() string { return proto.CompactTextString(m) }
func (*TeS2LSrlgCollectInfo) ProtoMessage()    {}
func (*TeS2LSrlgCollectInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_566d4710799f1740, []int{73}
}

func (m *TeS2LSrlgCollectInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TeS2LSrlgCollectInfo.Unmarshal(m, b)
}
func (m *TeS2LSrlgCollectInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TeS2LSrlgCollectInfo.Marshal(b, m, deterministic)
}
func (m *TeS2LSrlgCollectInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TeS2LSrlgCollectInfo.Merge(m, src)
}
func (m *TeS2LSrlgCollectInfo) XXX_Size() int {
	return xxx_messageInfo_TeS2LSrlgCollectInfo.Size(m)
}
func (m *TeS2LSrlgCollectInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_TeS2LSrlgCollectInfo.DiscardUnknown(m)
}

var xxx_messageInfo_TeS2LSrlgCollectInfo proto.InternalMessageInfo

func (m *TeS2LSrlgCollectInfo) GetSrlgCollectType() string {
	if m != nil {
		return m.SrlgCollectType
	}
	return ""
}

func (m *TeS2LSrlgCollectInfo) GetDiscoveredSrlg() []uint32 {
	if m != nil {
		return m.DiscoveredSrlg
	}
	return nil
}

type MplsTeS2LAssociationObject struct {
	S2LAssociationType    uint32   `protobuf:"varint,1,opt,name=s2l_association_type,json=s2lAssociationType,proto3" json:"s2l_association_type,omitempty"`
	S2LAssociationTieRole string   `protobuf:"bytes,2,opt,name=s2l_association_tie_role,json=s2lAssociationTieRole,proto3" json:"s2l_association_tie_role,omitempty"`
	S2LAssociationId      uint32   `protobuf:"varint,3,opt,name=s2l_association_id,json=s2lAssociationId,proto3" json:"s2l_association_id,omitempty"`
	S2LAssociationSource  string   `protobuf:"bytes,4,opt,name=s2l_association_source,json=s2lAssociationSource,proto3" json:"s2l_association_source,omitempty"`
	S2LGlobalSource       uint32   `protobuf:"varint,5,opt,name=s2l_global_source,json=s2lGlobalSource,proto3" json:"s2l_global_source,omitempty"`
	S2LExtendedId         []uint32 `protobuf:"varint,6,rep,packed,name=s2l_extended_id,json=s2lExtendedId,proto3" json:"s2l_extended_id,omitempty"`
	XXX_NoUnkeyedLiteral  struct{} `json:"-"`
	XXX_unrecognized      []byte   `json:"-"`
	XXX_sizecache         int32    `json:"-"`
}

func (m *MplsTeS2LAssociationObject) Reset()         { *m = MplsTeS2LAssociationObject{} }
func (m *MplsTeS2LAssociationObject) String() string { return proto.CompactTextString(m) }
func (*MplsTeS2LAssociationObject) ProtoMessage()    {}
func (*MplsTeS2LAssociationObject) Descriptor() ([]byte, []int) {
	return fileDescriptor_566d4710799f1740, []int{74}
}

func (m *MplsTeS2LAssociationObject) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsTeS2LAssociationObject.Unmarshal(m, b)
}
func (m *MplsTeS2LAssociationObject) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsTeS2LAssociationObject.Marshal(b, m, deterministic)
}
func (m *MplsTeS2LAssociationObject) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsTeS2LAssociationObject.Merge(m, src)
}
func (m *MplsTeS2LAssociationObject) XXX_Size() int {
	return xxx_messageInfo_MplsTeS2LAssociationObject.Size(m)
}
func (m *MplsTeS2LAssociationObject) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsTeS2LAssociationObject.DiscardUnknown(m)
}

var xxx_messageInfo_MplsTeS2LAssociationObject proto.InternalMessageInfo

func (m *MplsTeS2LAssociationObject) GetS2LAssociationType() uint32 {
	if m != nil {
		return m.S2LAssociationType
	}
	return 0
}

func (m *MplsTeS2LAssociationObject) GetS2LAssociationTieRole() string {
	if m != nil {
		return m.S2LAssociationTieRole
	}
	return ""
}

func (m *MplsTeS2LAssociationObject) GetS2LAssociationId() uint32 {
	if m != nil {
		return m.S2LAssociationId
	}
	return 0
}

func (m *MplsTeS2LAssociationObject) GetS2LAssociationSource() string {
	if m != nil {
		return m.S2LAssociationSource
	}
	return ""
}

func (m *MplsTeS2LAssociationObject) GetS2LGlobalSource() uint32 {
	if m != nil {
		return m.S2LGlobalSource
	}
	return 0
}

func (m *MplsTeS2LAssociationObject) GetS2LExtendedId() []uint32 {
	if m != nil {
		return m.S2LExtendedId
	}
	return nil
}

type MplsTeS2LProtectionObject struct {
	S2LSecondary         bool     `protobuf:"varint,1,opt,name=s2l_secondary,json=s2lSecondary,proto3" json:"s2l_secondary,omitempty"`
	S2LProtecting        bool     `protobuf:"varint,2,opt,name=s2l_protecting,json=s2lProtecting,proto3" json:"s2l_protecting,omitempty"`
	S2LNotification      bool     `protobuf:"varint,3,opt,name=s2l_notification,json=s2lNotification,proto3" json:"s2l_notification,omitempty"`
	S2LOperational       bool     `protobuf:"varint,4,opt,name=s2l_operational,json=s2lOperational,proto3" json:"s2l_operational,omitempty"`
	Enhanced             bool     `protobuf:"varint,5,opt,name=enhanced,proto3" json:"enhanced,omitempty"`
	Ded1Plus1            bool     `protobuf:"varint,6,opt,name=ded1_plus1,json=ded1Plus1,proto3" json:"ded1_plus1,omitempty"`
	Ded1To1              bool     `protobuf:"varint,7,opt,name=ded1_to1,json=ded1To1,proto3" json:"ded1_to1,omitempty"`
	Shared               bool     `protobuf:"varint,8,opt,name=shared,proto3" json:"shared,omitempty"`
	LinkUnprotected      bool     `protobuf:"varint,9,opt,name=link_unprotected,json=linkUnprotected,proto3" json:"link_unprotected,omitempty"`
	ExtraTraffic         bool     `protobuf:"varint,10,opt,name=extra_traffic,json=extraTraffic,proto3" json:"extra_traffic,omitempty"`
	Any                  bool     `protobuf:"varint,11,opt,name=any,proto3" json:"any,omitempty"`
	Rerouting            bool     `protobuf:"varint,12,opt,name=rerouting,proto3" json:"rerouting,omitempty"`
	ReroutingNoEt        bool     `protobuf:"varint,13,opt,name=rerouting_no_et,json=reroutingNoEt,proto3" json:"rerouting_no_et,omitempty"`
	OneToNProtectionEt   bool     `protobuf:"varint,14,opt,name=one_to_n_protection_et,json=oneToNProtectionEt,proto3" json:"one_to_n_protection_et,omitempty"`
	OnePlusOneUni        bool     `protobuf:"varint,15,opt,name=one_plus_one_uni,json=onePlusOneUni,proto3" json:"one_plus_one_uni,omitempty"`
	OnePlusOneBi         bool     `protobuf:"varint,16,opt,name=one_plus_one_bi,json=onePlusOneBi,proto3" json:"one_plus_one_bi,omitempty"`
	LspUnprotected       bool     `protobuf:"varint,17,opt,name=lsp_unprotected,json=lspUnprotected,proto3" json:"lsp_unprotected,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MplsTeS2LProtectionObject) Reset()         { *m = MplsTeS2LProtectionObject{} }
func (m *MplsTeS2LProtectionObject) String() string { return proto.CompactTextString(m) }
func (*MplsTeS2LProtectionObject) ProtoMessage()    {}
func (*MplsTeS2LProtectionObject) Descriptor() ([]byte, []int) {
	return fileDescriptor_566d4710799f1740, []int{75}
}

func (m *MplsTeS2LProtectionObject) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsTeS2LProtectionObject.Unmarshal(m, b)
}
func (m *MplsTeS2LProtectionObject) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsTeS2LProtectionObject.Marshal(b, m, deterministic)
}
func (m *MplsTeS2LProtectionObject) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsTeS2LProtectionObject.Merge(m, src)
}
func (m *MplsTeS2LProtectionObject) XXX_Size() int {
	return xxx_messageInfo_MplsTeS2LProtectionObject.Size(m)
}
func (m *MplsTeS2LProtectionObject) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsTeS2LProtectionObject.DiscardUnknown(m)
}

var xxx_messageInfo_MplsTeS2LProtectionObject proto.InternalMessageInfo

func (m *MplsTeS2LProtectionObject) GetS2LSecondary() bool {
	if m != nil {
		return m.S2LSecondary
	}
	return false
}

func (m *MplsTeS2LProtectionObject) GetS2LProtecting() bool {
	if m != nil {
		return m.S2LProtecting
	}
	return false
}

func (m *MplsTeS2LProtectionObject) GetS2LNotification() bool {
	if m != nil {
		return m.S2LNotification
	}
	return false
}

func (m *MplsTeS2LProtectionObject) GetS2LOperational() bool {
	if m != nil {
		return m.S2LOperational
	}
	return false
}

func (m *MplsTeS2LProtectionObject) GetEnhanced() bool {
	if m != nil {
		return m.Enhanced
	}
	return false
}

func (m *MplsTeS2LProtectionObject) GetDed1Plus1() bool {
	if m != nil {
		return m.Ded1Plus1
	}
	return false
}

func (m *MplsTeS2LProtectionObject) GetDed1To1() bool {
	if m != nil {
		return m.Ded1To1
	}
	return false
}

func (m *MplsTeS2LProtectionObject) GetShared() bool {
	if m != nil {
		return m.Shared
	}
	return false
}

func (m *MplsTeS2LProtectionObject) GetLinkUnprotected() bool {
	if m != nil {
		return m.LinkUnprotected
	}
	return false
}

func (m *MplsTeS2LProtectionObject) GetExtraTraffic() bool {
	if m != nil {
		return m.ExtraTraffic
	}
	return false
}

func (m *MplsTeS2LProtectionObject) GetAny() bool {
	if m != nil {
		return m.Any
	}
	return false
}

func (m *MplsTeS2LProtectionObject) GetRerouting() bool {
	if m != nil {
		return m.Rerouting
	}
	return false
}

func (m *MplsTeS2LProtectionObject) GetReroutingNoEt() bool {
	if m != nil {
		return m.ReroutingNoEt
	}
	return false
}

func (m *MplsTeS2LProtectionObject) GetOneToNProtectionEt() bool {
	if m != nil {
		return m.OneToNProtectionEt
	}
	return false
}

func (m *MplsTeS2LProtectionObject) GetOnePlusOneUni() bool {
	if m != nil {
		return m.OnePlusOneUni
	}
	return false
}

func (m *MplsTeS2LProtectionObject) GetOnePlusOneBi() bool {
	if m != nil {
		return m.OnePlusOneBi
	}
	return false
}

func (m *MplsTeS2LProtectionObject) GetLspUnprotected() bool {
	if m != nil {
		return m.LspUnprotected
	}
	return false
}

type MplsTeS2LFlexInfo struct {
	EntryExists          bool       `protobuf:"varint,1,opt,name=entry_exists,json=entryExists,proto3" json:"entry_exists,omitempty"`
	InLabel              uint32     `protobuf:"varint,2,opt,name=in_label,json=inLabel,proto3" json:"in_label,omitempty"`
	BfdCreated           bool       `protobuf:"varint,3,opt,name=bfd_created,json=bfdCreated,proto3" json:"bfd_created,omitempty"`
	BfdUp                bool       `protobuf:"varint,4,opt,name=bfd_up,json=bfdUp,proto3" json:"bfd_up,omitempty"`
	OamCreated           bool       `protobuf:"varint,5,opt,name=oam_created,json=oamCreated,proto3" json:"oam_created,omitempty"`
	FlexFec              *TeS2LFecT `protobuf:"bytes,6,opt,name=flex_fec,json=flexFec,proto3" json:"flex_fec,omitempty"`
	BfdNextHop           string     `protobuf:"bytes,7,opt,name=bfd_next_hop,json=bfdNextHop,proto3" json:"bfd_next_hop,omitempty"`
	BfdTunIfh            string     `protobuf:"bytes,8,opt,name=bfd_tun_ifh,json=bfdTunIfh,proto3" json:"bfd_tun_ifh,omitempty"`
	BfdOutIfh            string     `protobuf:"bytes,9,opt,name=bfd_out_ifh,json=bfdOutIfh,proto3" json:"bfd_out_ifh,omitempty"`
	BfdIntLabel          uint32     `protobuf:"varint,10,opt,name=bfd_int_label,json=bfdIntLabel,proto3" json:"bfd_int_label,omitempty"`
	BfdEgressLabel       uint32     `protobuf:"varint,11,opt,name=bfd_egress_label,json=bfdEgressLabel,proto3" json:"bfd_egress_label,omitempty"`
	FaultLdiLockout      bool       `protobuf:"varint,12,opt,name=fault_ldi_lockout,json=faultLdiLockout,proto3" json:"fault_ldi_lockout,omitempty"`
	FaultLdi             bool       `protobuf:"varint,13,opt,name=fault_ldi,json=faultLdi,proto3" json:"fault_ldi,omitempty"`
	FaultLkr             bool       `protobuf:"varint,14,opt,name=fault_lkr,json=faultLkr,proto3" json:"fault_lkr,omitempty"`
	FaultAis             bool       `protobuf:"varint,15,opt,name=fault_ais,json=faultAis,proto3" json:"fault_ais,omitempty"`
	FaultTime            uint32     `protobuf:"varint,16,opt,name=fault_time,json=faultTime,proto3" json:"fault_time,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *MplsTeS2LFlexInfo) Reset()         { *m = MplsTeS2LFlexInfo{} }
func (m *MplsTeS2LFlexInfo) String() string { return proto.CompactTextString(m) }
func (*MplsTeS2LFlexInfo) ProtoMessage()    {}
func (*MplsTeS2LFlexInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_566d4710799f1740, []int{76}
}

func (m *MplsTeS2LFlexInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsTeS2LFlexInfo.Unmarshal(m, b)
}
func (m *MplsTeS2LFlexInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsTeS2LFlexInfo.Marshal(b, m, deterministic)
}
func (m *MplsTeS2LFlexInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsTeS2LFlexInfo.Merge(m, src)
}
func (m *MplsTeS2LFlexInfo) XXX_Size() int {
	return xxx_messageInfo_MplsTeS2LFlexInfo.Size(m)
}
func (m *MplsTeS2LFlexInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsTeS2LFlexInfo.DiscardUnknown(m)
}

var xxx_messageInfo_MplsTeS2LFlexInfo proto.InternalMessageInfo

func (m *MplsTeS2LFlexInfo) GetEntryExists() bool {
	if m != nil {
		return m.EntryExists
	}
	return false
}

func (m *MplsTeS2LFlexInfo) GetInLabel() uint32 {
	if m != nil {
		return m.InLabel
	}
	return 0
}

func (m *MplsTeS2LFlexInfo) GetBfdCreated() bool {
	if m != nil {
		return m.BfdCreated
	}
	return false
}

func (m *MplsTeS2LFlexInfo) GetBfdUp() bool {
	if m != nil {
		return m.BfdUp
	}
	return false
}

func (m *MplsTeS2LFlexInfo) GetOamCreated() bool {
	if m != nil {
		return m.OamCreated
	}
	return false
}

func (m *MplsTeS2LFlexInfo) GetFlexFec() *TeS2LFecT {
	if m != nil {
		return m.FlexFec
	}
	return nil
}

func (m *MplsTeS2LFlexInfo) GetBfdNextHop() string {
	if m != nil {
		return m.BfdNextHop
	}
	return ""
}

func (m *MplsTeS2LFlexInfo) GetBfdTunIfh() string {
	if m != nil {
		return m.BfdTunIfh
	}
	return ""
}

func (m *MplsTeS2LFlexInfo) GetBfdOutIfh() string {
	if m != nil {
		return m.BfdOutIfh
	}
	return ""
}

func (m *MplsTeS2LFlexInfo) GetBfdIntLabel() uint32 {
	if m != nil {
		return m.BfdIntLabel
	}
	return 0
}

func (m *MplsTeS2LFlexInfo) GetBfdEgressLabel() uint32 {
	if m != nil {
		return m.BfdEgressLabel
	}
	return 0
}

func (m *MplsTeS2LFlexInfo) GetFaultLdiLockout() bool {
	if m != nil {
		return m.FaultLdiLockout
	}
	return false
}

func (m *MplsTeS2LFlexInfo) GetFaultLdi() bool {
	if m != nil {
		return m.FaultLdi
	}
	return false
}

func (m *MplsTeS2LFlexInfo) GetFaultLkr() bool {
	if m != nil {
		return m.FaultLkr
	}
	return false
}

func (m *MplsTeS2LFlexInfo) GetFaultAis() bool {
	if m != nil {
		return m.FaultAis
	}
	return false
}

func (m *MplsTeS2LFlexInfo) GetFaultTime() uint32 {
	if m != nil {
		return m.FaultTime
	}
	return 0
}

type TeS2LSrPathHop struct {
	SidType              string   `protobuf:"bytes,1,opt,name=sid_type,json=sidType,proto3" json:"sid_type,omitempty"`
	HasIpAddresses       bool     `protobuf:"varint,2,opt,name=has_ip_addresses,json=hasIpAddresses,proto3" json:"has_ip_addresses,omitempty"`
	LocalAddr            string   `protobuf:"bytes,3,opt,name=local_addr,json=localAddr,proto3" json:"local_addr,omitempty"`
	RemoteAddr           string   `protobuf:"bytes,4,opt,name=remote_addr,json=remoteAddr,proto3" json:"remote_addr,omitempty"`
	HasMplsLabel         bool     `protobuf:"varint,5,opt,name=has_mpls_label,json=hasMplsLabel,proto3" json:"has_mpls_label,omitempty"`
	MplsLabelValue       uint32   `protobuf:"varint,6,opt,name=mpls_label_value,json=mplsLabelValue,proto3" json:"mpls_label_value,omitempty"`
	HasEntropyLabel      bool     `protobuf:"varint,7,opt,name=has_entropy_label,json=hasEntropyLabel,proto3" json:"has_entropy_label,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TeS2LSrPathHop) Reset()         { *m = TeS2LSrPathHop{} }
func (m *TeS2LSrPathHop) String() string { return proto.CompactTextString(m) }
func (*TeS2LSrPathHop) ProtoMessage()    {}
func (*TeS2LSrPathHop) Descriptor() ([]byte, []int) {
	return fileDescriptor_566d4710799f1740, []int{77}
}

func (m *TeS2LSrPathHop) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TeS2LSrPathHop.Unmarshal(m, b)
}
func (m *TeS2LSrPathHop) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TeS2LSrPathHop.Marshal(b, m, deterministic)
}
func (m *TeS2LSrPathHop) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TeS2LSrPathHop.Merge(m, src)
}
func (m *TeS2LSrPathHop) XXX_Size() int {
	return xxx_messageInfo_TeS2LSrPathHop.Size(m)
}
func (m *TeS2LSrPathHop) XXX_DiscardUnknown() {
	xxx_messageInfo_TeS2LSrPathHop.DiscardUnknown(m)
}

var xxx_messageInfo_TeS2LSrPathHop proto.InternalMessageInfo

func (m *TeS2LSrPathHop) GetSidType() string {
	if m != nil {
		return m.SidType
	}
	return ""
}

func (m *TeS2LSrPathHop) GetHasIpAddresses() bool {
	if m != nil {
		return m.HasIpAddresses
	}
	return false
}

func (m *TeS2LSrPathHop) GetLocalAddr() string {
	if m != nil {
		return m.LocalAddr
	}
	return ""
}

func (m *TeS2LSrPathHop) GetRemoteAddr() string {
	if m != nil {
		return m.RemoteAddr
	}
	return ""
}

func (m *TeS2LSrPathHop) GetHasMplsLabel() bool {
	if m != nil {
		return m.HasMplsLabel
	}
	return false
}

func (m *TeS2LSrPathHop) GetMplsLabelValue() uint32 {
	if m != nil {
		return m.MplsLabelValue
	}
	return 0
}

func (m *TeS2LSrPathHop) GetHasEntropyLabel() bool {
	if m != nil {
		return m.HasEntropyLabel
	}
	return false
}

type TunnelMidpointLspWrapInfoBag struct {
	LspWrapProtectionEnable bool     `protobuf:"varint,1,opt,name=lsp_wrap_protection_enable,json=lspWrapProtectionEnable,proto3" json:"lsp_wrap_protection_enable,omitempty"`
	LspWrapProtectionLabel  uint32   `protobuf:"varint,2,opt,name=lsp_wrap_protection_label,json=lspWrapProtectionLabel,proto3" json:"lsp_wrap_protection_label,omitempty"`
	ReverseEgressInterface  string   `protobuf:"bytes,3,opt,name=reverse_egress_interface,json=reverseEgressInterface,proto3" json:"reverse_egress_interface,omitempty"`
	ReverseLspLabel         uint32   `protobuf:"varint,4,opt,name=reverse_lsp_label,json=reverseLspLabel,proto3" json:"reverse_lsp_label,omitempty"`
	LspWrapProtectionState  string   `protobuf:"bytes,5,opt,name=lsp_wrap_protection_state,json=lspWrapProtectionState,proto3" json:"lsp_wrap_protection_state,omitempty"`
	XXX_NoUnkeyedLiteral    struct{} `json:"-"`
	XXX_unrecognized        []byte   `json:"-"`
	XXX_sizecache           int32    `json:"-"`
}

func (m *TunnelMidpointLspWrapInfoBag) Reset()         { *m = TunnelMidpointLspWrapInfoBag{} }
func (m *TunnelMidpointLspWrapInfoBag) String() string { return proto.CompactTextString(m) }
func (*TunnelMidpointLspWrapInfoBag) ProtoMessage()    {}
func (*TunnelMidpointLspWrapInfoBag) Descriptor() ([]byte, []int) {
	return fileDescriptor_566d4710799f1740, []int{78}
}

func (m *TunnelMidpointLspWrapInfoBag) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TunnelMidpointLspWrapInfoBag.Unmarshal(m, b)
}
func (m *TunnelMidpointLspWrapInfoBag) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TunnelMidpointLspWrapInfoBag.Marshal(b, m, deterministic)
}
func (m *TunnelMidpointLspWrapInfoBag) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TunnelMidpointLspWrapInfoBag.Merge(m, src)
}
func (m *TunnelMidpointLspWrapInfoBag) XXX_Size() int {
	return xxx_messageInfo_TunnelMidpointLspWrapInfoBag.Size(m)
}
func (m *TunnelMidpointLspWrapInfoBag) XXX_DiscardUnknown() {
	xxx_messageInfo_TunnelMidpointLspWrapInfoBag.DiscardUnknown(m)
}

var xxx_messageInfo_TunnelMidpointLspWrapInfoBag proto.InternalMessageInfo

func (m *TunnelMidpointLspWrapInfoBag) GetLspWrapProtectionEnable() bool {
	if m != nil {
		return m.LspWrapProtectionEnable
	}
	return false
}

func (m *TunnelMidpointLspWrapInfoBag) GetLspWrapProtectionLabel() uint32 {
	if m != nil {
		return m.LspWrapProtectionLabel
	}
	return 0
}

func (m *TunnelMidpointLspWrapInfoBag) GetReverseEgressInterface() string {
	if m != nil {
		return m.ReverseEgressInterface
	}
	return ""
}

func (m *TunnelMidpointLspWrapInfoBag) GetReverseLspLabel() uint32 {
	if m != nil {
		return m.ReverseLspLabel
	}
	return 0
}

func (m *TunnelMidpointLspWrapInfoBag) GetLspWrapProtectionState() string {
	if m != nil {
		return m.LspWrapProtectionState
	}
	return ""
}

type MplsTeS2LDiversityInfo struct {
	DiversityType        string   `protobuf:"bytes,1,opt,name=diversity_type,json=diversityType,proto3" json:"diversity_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MplsTeS2LDiversityInfo) Reset()         { *m = MplsTeS2LDiversityInfo{} }
func (m *MplsTeS2LDiversityInfo) String() string { return proto.CompactTextString(m) }
func (*MplsTeS2LDiversityInfo) ProtoMessage()    {}
func (*MplsTeS2LDiversityInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_566d4710799f1740, []int{79}
}

func (m *MplsTeS2LDiversityInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsTeS2LDiversityInfo.Unmarshal(m, b)
}
func (m *MplsTeS2LDiversityInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsTeS2LDiversityInfo.Marshal(b, m, deterministic)
}
func (m *MplsTeS2LDiversityInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsTeS2LDiversityInfo.Merge(m, src)
}
func (m *MplsTeS2LDiversityInfo) XXX_Size() int {
	return xxx_messageInfo_MplsTeS2LDiversityInfo.Size(m)
}
func (m *MplsTeS2LDiversityInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsTeS2LDiversityInfo.DiscardUnknown(m)
}

var xxx_messageInfo_MplsTeS2LDiversityInfo proto.InternalMessageInfo

func (m *MplsTeS2LDiversityInfo) GetDiversityType() string {
	if m != nil {
		return m.DiversityType
	}
	return ""
}

type MplsTePathMetrics struct {
	TeMetric             uint64   `protobuf:"varint,1,opt,name=te_metric,json=teMetric,proto3" json:"te_metric,omitempty"`
	IgpMetric            uint64   `protobuf:"varint,2,opt,name=igp_metric,json=igpMetric,proto3" json:"igp_metric,omitempty"`
	DelayMetric          uint64   `protobuf:"varint,3,opt,name=delay_metric,json=delayMetric,proto3" json:"delay_metric,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MplsTePathMetrics) Reset()         { *m = MplsTePathMetrics{} }
func (m *MplsTePathMetrics) String() string { return proto.CompactTextString(m) }
func (*MplsTePathMetrics) ProtoMessage()    {}
func (*MplsTePathMetrics) Descriptor() ([]byte, []int) {
	return fileDescriptor_566d4710799f1740, []int{80}
}

func (m *MplsTePathMetrics) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsTePathMetrics.Unmarshal(m, b)
}
func (m *MplsTePathMetrics) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsTePathMetrics.Marshal(b, m, deterministic)
}
func (m *MplsTePathMetrics) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsTePathMetrics.Merge(m, src)
}
func (m *MplsTePathMetrics) XXX_Size() int {
	return xxx_messageInfo_MplsTePathMetrics.Size(m)
}
func (m *MplsTePathMetrics) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsTePathMetrics.DiscardUnknown(m)
}

var xxx_messageInfo_MplsTePathMetrics proto.InternalMessageInfo

func (m *MplsTePathMetrics) GetTeMetric() uint64 {
	if m != nil {
		return m.TeMetric
	}
	return 0
}

func (m *MplsTePathMetrics) GetIgpMetric() uint64 {
	if m != nil {
		return m.IgpMetric
	}
	return 0
}

func (m *MplsTePathMetrics) GetDelayMetric() uint64 {
	if m != nil {
		return m.DelayMetric
	}
	return 0
}

type MplsTeP2MpS2L struct {
	S2LFec                                  *TeS2LFecT                    `protobuf:"bytes,1,opt,name=s2l_fec,json=s2lFec,proto3" json:"s2l_fec,omitempty"`
	ActivePathOption                        *MplsTeP2MpPathOption         `protobuf:"bytes,2,opt,name=active_path_option,json=activePathOption,proto3" json:"active_path_option,omitempty"`
	SharedRiskLinkGroup                     []*MplsSrlgInfo               `protobuf:"bytes,3,rep,name=shared_risk_link_group,json=sharedRiskLinkGroup,proto3" json:"shared_risk_link_group,omitempty"`
	PcalcArea                               string                        `protobuf:"bytes,4,opt,name=pcalc_area,json=pcalcArea,proto3" json:"pcalc_area,omitempty"`
	IsExpandedEro                           bool                          `protobuf:"varint,5,opt,name=is_expanded_ero,json=isExpandedEro,proto3" json:"is_expanded_ero,omitempty"`
	PathReevalQueryMid                      uint32                        `protobuf:"varint,6,opt,name=path_reeval_query_mid,json=pathReevalQueryMid,proto3" json:"path_reeval_query_mid,omitempty"`
	TimeSinceLastQueryReceivedMid           uint32                        `protobuf:"varint,7,opt,name=time_since_last_query_received_mid,json=timeSinceLastQueryReceivedMid,proto3" json:"time_since_last_query_received_mid,omitempty"`
	TimeSinceLastPreferredPathExistsSendMid uint32                        `protobuf:"varint,8,opt,name=time_since_last_preferred_path_exists_send_mid,json=timeSinceLastPreferredPathExistsSendMid,proto3" json:"time_since_last_preferred_path_exists_send_mid,omitempty"`
	TimeSinceLastPreferredTreeExistsSendMid uint32                        `protobuf:"varint,9,opt,name=time_since_last_preferred_tree_exists_send_mid,json=timeSinceLastPreferredTreeExistsSendMid,proto3" json:"time_since_last_preferred_tree_exists_send_mid,omitempty"`
	ExpandedEroAreaId                       string                        `protobuf:"bytes,10,opt,name=expanded_ero_area_id,json=expandedEroAreaId,proto3" json:"expanded_ero_area_id,omitempty"`
	ExpandedEroAffinityBits                 uint32                        `protobuf:"varint,11,opt,name=expanded_ero_affinity_bits,json=expandedEroAffinityBits,proto3" json:"expanded_ero_affinity_bits,omitempty"`
	ExpandedEroAffinityMask                 uint32                        `protobuf:"varint,12,opt,name=expanded_ero_affinity_mask,json=expandedEroAffinityMask,proto3" json:"expanded_ero_affinity_mask,omitempty"`
	ExpandedEroMetricType                   string                        `protobuf:"bytes,13,opt,name=expanded_ero_metric_type,json=expandedEroMetricType,proto3" json:"expanded_ero_metric_type,omitempty"`
	ExpandedEroMetric                       uint32                        `protobuf:"varint,14,opt,name=expanded_ero_metric,json=expandedEroMetric,proto3" json:"expanded_ero_metric,omitempty"`
	AbrAutoDiscovered                       string                        `protobuf:"bytes,15,opt,name=abr_auto_discovered,json=abrAutoDiscovered,proto3" json:"abr_auto_discovered,omitempty"`
	IsFrrEnabled                            bool                          `protobuf:"varint,16,opt,name=is_frr_enabled,json=isFrrEnabled,proto3" json:"is_frr_enabled,omitempty"`
	IsNodeProtected                         bool                          `protobuf:"varint,17,opt,name=is_node_protected,json=isNodeProtected,proto3" json:"is_node_protected,omitempty"`
	IsBandwidthProtect                      bool                          `protobuf:"varint,18,opt,name=is_bandwidth_protect,json=isBandwidthProtect,proto3" json:"is_bandwidth_protect,omitempty"`
	PathRroEnabled                          bool                          `protobuf:"varint,19,opt,name=path_rro_enabled,json=pathRroEnabled,proto3" json:"path_rro_enabled,omitempty"`
	OutEro                                  []*RsvpMgmtEroSubobj          `protobuf:"bytes,20,rep,name=out_ero,json=outEro,proto3" json:"out_ero,omitempty"`
	InEro                                   []*RsvpMgmtEroSubobj          `protobuf:"bytes,21,rep,name=in_ero,json=inEro,proto3" json:"in_ero,omitempty"`
	OutXro                                  *TeXro                        `protobuf:"bytes,22,opt,name=out_xro,json=outXro,proto3" json:"out_xro,omitempty"`
	InXro                                   *TeXro                        `protobuf:"bytes,23,opt,name=in_xro,json=inXro,proto3" json:"in_xro,omitempty"`
	PathRro                                 []*RsvpMgmtRroSubobj          `protobuf:"bytes,24,rep,name=path_rro,json=pathRro,proto3" json:"path_rro,omitempty"`
	ResvRro                                 []*RsvpMgmtRroSubobj          `protobuf:"bytes,25,rep,name=resv_rro,json=resvRro,proto3" json:"resv_rro,omitempty"`
	PathAffinityArray                       []*TunnelHopInfo              `protobuf:"bytes,26,rep,name=path_affinity_array,json=pathAffinityArray,proto3" json:"path_affinity_array,omitempty"`
	Tspec                                   *BandwidthSpecBag             `protobuf:"bytes,27,opt,name=tspec,proto3" json:"tspec,omitempty"`
	GenericTspec                            *TeMgmtGenericTspec           `protobuf:"bytes,28,opt,name=generic_tspec,json=genericTspec,proto3" json:"generic_tspec,omitempty"`
	Fspec                                   *BandwidthSpecBag             `protobuf:"bytes,29,opt,name=fspec,proto3" json:"fspec,omitempty"`
	GenericFspec                            *TeMgmtGenericFspec           `protobuf:"bytes,30,opt,name=generic_fspec,json=genericFspec,proto3" json:"generic_fspec,omitempty"`
	Weight                                  uint64                        `protobuf:"varint,31,opt,name=weight,proto3" json:"weight,omitempty"`
	ReverseWeight                           uint64                        `protobuf:"varint,32,opt,name=reverse_weight,json=reverseWeight,proto3" json:"reverse_weight,omitempty"`
	Uptime                                  uint32                        `protobuf:"varint,33,opt,name=uptime,proto3" json:"uptime,omitempty"`
	EgressInterface                         string                        `protobuf:"bytes,34,opt,name=egress_interface,json=egressInterface,proto3" json:"egress_interface,omitempty"`
	EgressInterfaceState                    string                        `protobuf:"bytes,35,opt,name=egress_interface_state,json=egressInterfaceState,proto3" json:"egress_interface_state,omitempty"`
	EgressInterfaceBrief                    string                        `protobuf:"bytes,36,opt,name=egress_interface_brief,json=egressInterfaceBrief,proto3" json:"egress_interface_brief,omitempty"`
	IngressInterface                        string                        `protobuf:"bytes,37,opt,name=ingress_interface,json=ingressInterface,proto3" json:"ingress_interface,omitempty"`
	IngressInterfaceState                   string                        `protobuf:"bytes,38,opt,name=ingress_interface_state,json=ingressInterfaceState,proto3" json:"ingress_interface_state,omitempty"`
	IngressInterfaceBrief                   string                        `protobuf:"bytes,39,opt,name=ingress_interface_brief,json=ingressInterfaceBrief,proto3" json:"ingress_interface_brief,omitempty"`
	S2LLocalLabel                           uint32                        `protobuf:"varint,40,opt,name=s2l_local_label,json=s2lLocalLabel,proto3" json:"s2l_local_label,omitempty"`
	S2LOutLabel                             uint32                        `protobuf:"varint,41,opt,name=s2l_out_label,json=s2lOutLabel,proto3" json:"s2l_out_label,omitempty"`
	OutboundFrrState                        string                        `protobuf:"bytes,42,opt,name=outbound_frr_state,json=outboundFrrState,proto3" json:"outbound_frr_state,omitempty"`
	FrrOutTunnelInterface                   string                        `protobuf:"bytes,43,opt,name=frr_out_tunnel_interface,json=frrOutTunnelInterface,proto3" json:"frr_out_tunnel_interface,omitempty"`
	Role                                    string                        `protobuf:"bytes,44,opt,name=role,proto3" json:"role,omitempty"`
	SignallingStatus                        string                        `protobuf:"bytes,45,opt,name=signalling_status,json=signallingStatus,proto3" json:"signalling_status,omitempty"`
	LocalRouterId                           string                        `protobuf:"bytes,46,opt,name=local_router_id,json=localRouterId,proto3" json:"local_router_id,omitempty"`
	UpstreamRouterId                        string                        `protobuf:"bytes,47,opt,name=upstream_router_id,json=upstreamRouterId,proto3" json:"upstream_router_id,omitempty"`
	DownstreamRouterId                      string                        `protobuf:"bytes,48,opt,name=downstream_router_id,json=downstreamRouterId,proto3" json:"downstream_router_id,omitempty"`
	NextHopAddress                          string                        `protobuf:"bytes,49,opt,name=next_hop_address,json=nextHopAddress,proto3" json:"next_hop_address,omitempty"`
	NextNextHopAddress                      string                        `protobuf:"bytes,50,opt,name=next_next_hop_address,json=nextNextHopAddress,proto3" json:"next_next_hop_address,omitempty"`
	NextHopAddressGeneric                   *TeAddrT_                     `protobuf:"bytes,51,opt,name=next_hop_address_generic,json=nextHopAddressGeneric,proto3" json:"next_hop_address_generic,omitempty"`
	PreviousHopAddress                      string                        `protobuf:"bytes,52,opt,name=previous_hop_address,json=previousHopAddress,proto3" json:"previous_hop_address,omitempty"`
	PreviousHopAddressGeneric               *TeAddrT_                     `protobuf:"bytes,53,opt,name=previous_hop_address_generic,json=previousHopAddressGeneric,proto3" json:"previous_hop_address_generic,omitempty"`
	IncomingAddress                         string                        `protobuf:"bytes,54,opt,name=incoming_address,json=incomingAddress,proto3" json:"incoming_address,omitempty"`
	IncomingAddressGeneric                  *TeAddrT_                     `protobuf:"bytes,55,opt,name=incoming_address_generic,json=incomingAddressGeneric,proto3" json:"incoming_address_generic,omitempty"`
	BackupTunnelInterface                   string                        `protobuf:"bytes,56,opt,name=backup_tunnel_interface,json=backupTunnelInterface,proto3" json:"backup_tunnel_interface,omitempty"`
	NodeHopCount                            uint32                        `protobuf:"varint,57,opt,name=node_hop_count,json=nodeHopCount,proto3" json:"node_hop_count,omitempty"`
	S2LConvergence                          *TeLspConvergenceInfo         `protobuf:"bytes,58,opt,name=s2l_convergence,json=s2lConvergence,proto3" json:"s2l_convergence,omitempty"`
	SoftPreemption                          *MplsTeSoftPreemptionLspInfo  `protobuf:"bytes,59,opt,name=soft_preemption,json=softPreemption,proto3" json:"soft_preemption,omitempty"`
	IsOptical                               bool                          `protobuf:"varint,60,opt,name=is_optical,json=isOptical,proto3" json:"is_optical,omitempty"`
	GmplsLabels                             *MplsTeMgmtGmplsLabels        `protobuf:"bytes,61,opt,name=gmpls_labels,json=gmplsLabels,proto3" json:"gmpls_labels,omitempty"`
	OtnS2L                                  *MplsTeOtnS2LInfo             `protobuf:"bytes,62,opt,name=otn_s2l,json=otnS2l,proto3" json:"otn_s2l,omitempty"`
	HeadEndBfdInfo                          *MplsTeHeadBfdInfo            `protobuf:"bytes,63,opt,name=head_end_bfd_info,json=headEndBfdInfo,proto3" json:"head_end_bfd_info,omitempty"`
	TailEndBfdInfo                          *MplsTeTailBfdInfo            `protobuf:"bytes,64,opt,name=tail_end_bfd_info,json=tailEndBfdInfo,proto3" json:"tail_end_bfd_info,omitempty"`
	SrlgCollection                          *TeS2LSrlgCollectInfo         `protobuf:"bytes,65,opt,name=srlg_collection,json=srlgCollection,proto3" json:"srlg_collection,omitempty"`
	Association                             *MplsTeS2LAssociationObject   `protobuf:"bytes,66,opt,name=association,proto3" json:"association,omitempty"`
	Protection                              *MplsTeS2LProtectionObject    `protobuf:"bytes,67,opt,name=protection,proto3" json:"protection,omitempty"`
	S2LReverseEroObjPresent                 bool                          `protobuf:"varint,68,opt,name=s2l_reverse_ero_obj_present,json=s2lReverseEroObjPresent,proto3" json:"s2l_reverse_ero_obj_present,omitempty"`
	ReverseEroIn                            []*RsvpMgmtEroSubobj          `protobuf:"bytes,69,rep,name=reverse_ero_in,json=reverseEroIn,proto3" json:"reverse_ero_in,omitempty"`
	ReverseLspPresent                       bool                          `protobuf:"varint,70,opt,name=reverse_lsp_present,json=reverseLspPresent,proto3" json:"reverse_lsp_present,omitempty"`
	ReverseLspConnected                     bool                          `protobuf:"varint,71,opt,name=reverse_lsp_connected,json=reverseLspConnected,proto3" json:"reverse_lsp_connected,omitempty"`
	ReverseLspFec                           *TeLspFecT                    `protobuf:"bytes,72,opt,name=reverse_lsp_fec,json=reverseLspFec,proto3" json:"reverse_lsp_fec,omitempty"`
	ReverseLspName                          string                        `protobuf:"bytes,73,opt,name=reverse_lsp_name,json=reverseLspName,proto3" json:"reverse_lsp_name,omitempty"`
	S2LReverseTspecObjPresent               bool                          `protobuf:"varint,74,opt,name=s2l_reverse_tspec_obj_present,json=s2lReverseTspecObjPresent,proto3" json:"s2l_reverse_tspec_obj_present,omitempty"`
	ReverseTspec                            *BandwidthSpecBag             `protobuf:"bytes,75,opt,name=reverse_tspec,json=reverseTspec,proto3" json:"reverse_tspec,omitempty"`
	S2LReverseLspSubObj                     []uint32                      `protobuf:"varint,76,rep,packed,name=s2l_reverse_lsp_sub_obj,json=s2lReverseLspSubObj,proto3" json:"s2l_reverse_lsp_sub_obj,omitempty"`
	FlexInfo                                *MplsTeS2LFlexInfo            `protobuf:"bytes,77,opt,name=flex_info,json=flexInfo,proto3" json:"flex_info,omitempty"`
	S2LSegmentRoutingPath                   []*TeS2LSrPathHop             `protobuf:"bytes,78,rep,name=s2l_segment_routing_path,json=s2lSegmentRoutingPath,proto3" json:"s2l_segment_routing_path,omitempty"`
	LspWrapInfo                             *TunnelMidpointLspWrapInfoBag `protobuf:"bytes,79,opt,name=lsp_wrap_info,json=lspWrapInfo,proto3" json:"lsp_wrap_info,omitempty"`
	PathUsingStrictSpf                      bool                          `protobuf:"varint,80,opt,name=path_using_strict_spf,json=pathUsingStrictSpf,proto3" json:"path_using_strict_spf,omitempty"`
	DiversityInfo                           *MplsTeS2LDiversityInfo       `protobuf:"bytes,81,opt,name=diversity_info,json=diversityInfo,proto3" json:"diversity_info,omitempty"`
	AccumulatedPathMetrics                  *MplsTePathMetrics            `protobuf:"bytes,82,opt,name=accumulated_path_metrics,json=accumulatedPathMetrics,proto3" json:"accumulated_path_metrics,omitempty"`
	AccumulatedReversePathMetrics           *MplsTePathMetrics            `protobuf:"bytes,83,opt,name=accumulated_reverse_path_metrics,json=accumulatedReversePathMetrics,proto3" json:"accumulated_reverse_path_metrics,omitempty"`
	XXX_NoUnkeyedLiteral                    struct{}                      `json:"-"`
	XXX_unrecognized                        []byte                        `json:"-"`
	XXX_sizecache                           int32                         `json:"-"`
}

func (m *MplsTeP2MpS2L) Reset()         { *m = MplsTeP2MpS2L{} }
func (m *MplsTeP2MpS2L) String() string { return proto.CompactTextString(m) }
func (*MplsTeP2MpS2L) ProtoMessage()    {}
func (*MplsTeP2MpS2L) Descriptor() ([]byte, []int) {
	return fileDescriptor_566d4710799f1740, []int{81}
}

func (m *MplsTeP2MpS2L) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsTeP2MpS2L.Unmarshal(m, b)
}
func (m *MplsTeP2MpS2L) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsTeP2MpS2L.Marshal(b, m, deterministic)
}
func (m *MplsTeP2MpS2L) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsTeP2MpS2L.Merge(m, src)
}
func (m *MplsTeP2MpS2L) XXX_Size() int {
	return xxx_messageInfo_MplsTeP2MpS2L.Size(m)
}
func (m *MplsTeP2MpS2L) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsTeP2MpS2L.DiscardUnknown(m)
}

var xxx_messageInfo_MplsTeP2MpS2L proto.InternalMessageInfo

func (m *MplsTeP2MpS2L) GetS2LFec() *TeS2LFecT {
	if m != nil {
		return m.S2LFec
	}
	return nil
}

func (m *MplsTeP2MpS2L) GetActivePathOption() *MplsTeP2MpPathOption {
	if m != nil {
		return m.ActivePathOption
	}
	return nil
}

func (m *MplsTeP2MpS2L) GetSharedRiskLinkGroup() []*MplsSrlgInfo {
	if m != nil {
		return m.SharedRiskLinkGroup
	}
	return nil
}

func (m *MplsTeP2MpS2L) GetPcalcArea() string {
	if m != nil {
		return m.PcalcArea
	}
	return ""
}

func (m *MplsTeP2MpS2L) GetIsExpandedEro() bool {
	if m != nil {
		return m.IsExpandedEro
	}
	return false
}

func (m *MplsTeP2MpS2L) GetPathReevalQueryMid() uint32 {
	if m != nil {
		return m.PathReevalQueryMid
	}
	return 0
}

func (m *MplsTeP2MpS2L) GetTimeSinceLastQueryReceivedMid() uint32 {
	if m != nil {
		return m.TimeSinceLastQueryReceivedMid
	}
	return 0
}

func (m *MplsTeP2MpS2L) GetTimeSinceLastPreferredPathExistsSendMid() uint32 {
	if m != nil {
		return m.TimeSinceLastPreferredPathExistsSendMid
	}
	return 0
}

func (m *MplsTeP2MpS2L) GetTimeSinceLastPreferredTreeExistsSendMid() uint32 {
	if m != nil {
		return m.TimeSinceLastPreferredTreeExistsSendMid
	}
	return 0
}

func (m *MplsTeP2MpS2L) GetExpandedEroAreaId() string {
	if m != nil {
		return m.ExpandedEroAreaId
	}
	return ""
}

func (m *MplsTeP2MpS2L) GetExpandedEroAffinityBits() uint32 {
	if m != nil {
		return m.ExpandedEroAffinityBits
	}
	return 0
}

func (m *MplsTeP2MpS2L) GetExpandedEroAffinityMask() uint32 {
	if m != nil {
		return m.ExpandedEroAffinityMask
	}
	return 0
}

func (m *MplsTeP2MpS2L) GetExpandedEroMetricType() string {
	if m != nil {
		return m.ExpandedEroMetricType
	}
	return ""
}

func (m *MplsTeP2MpS2L) GetExpandedEroMetric() uint32 {
	if m != nil {
		return m.ExpandedEroMetric
	}
	return 0
}

func (m *MplsTeP2MpS2L) GetAbrAutoDiscovered() string {
	if m != nil {
		return m.AbrAutoDiscovered
	}
	return ""
}

func (m *MplsTeP2MpS2L) GetIsFrrEnabled() bool {
	if m != nil {
		return m.IsFrrEnabled
	}
	return false
}

func (m *MplsTeP2MpS2L) GetIsNodeProtected() bool {
	if m != nil {
		return m.IsNodeProtected
	}
	return false
}

func (m *MplsTeP2MpS2L) GetIsBandwidthProtect() bool {
	if m != nil {
		return m.IsBandwidthProtect
	}
	return false
}

func (m *MplsTeP2MpS2L) GetPathRroEnabled() bool {
	if m != nil {
		return m.PathRroEnabled
	}
	return false
}

func (m *MplsTeP2MpS2L) GetOutEro() []*RsvpMgmtEroSubobj {
	if m != nil {
		return m.OutEro
	}
	return nil
}

func (m *MplsTeP2MpS2L) GetInEro() []*RsvpMgmtEroSubobj {
	if m != nil {
		return m.InEro
	}
	return nil
}

func (m *MplsTeP2MpS2L) GetOutXro() *TeXro {
	if m != nil {
		return m.OutXro
	}
	return nil
}

func (m *MplsTeP2MpS2L) GetInXro() *TeXro {
	if m != nil {
		return m.InXro
	}
	return nil
}

func (m *MplsTeP2MpS2L) GetPathRro() []*RsvpMgmtRroSubobj {
	if m != nil {
		return m.PathRro
	}
	return nil
}

func (m *MplsTeP2MpS2L) GetResvRro() []*RsvpMgmtRroSubobj {
	if m != nil {
		return m.ResvRro
	}
	return nil
}

func (m *MplsTeP2MpS2L) GetPathAffinityArray() []*TunnelHopInfo {
	if m != nil {
		return m.PathAffinityArray
	}
	return nil
}

func (m *MplsTeP2MpS2L) GetTspec() *BandwidthSpecBag {
	if m != nil {
		return m.Tspec
	}
	return nil
}

func (m *MplsTeP2MpS2L) GetGenericTspec() *TeMgmtGenericTspec {
	if m != nil {
		return m.GenericTspec
	}
	return nil
}

func (m *MplsTeP2MpS2L) GetFspec() *BandwidthSpecBag {
	if m != nil {
		return m.Fspec
	}
	return nil
}

func (m *MplsTeP2MpS2L) GetGenericFspec() *TeMgmtGenericFspec {
	if m != nil {
		return m.GenericFspec
	}
	return nil
}

func (m *MplsTeP2MpS2L) GetWeight() uint64 {
	if m != nil {
		return m.Weight
	}
	return 0
}

func (m *MplsTeP2MpS2L) GetReverseWeight() uint64 {
	if m != nil {
		return m.ReverseWeight
	}
	return 0
}

func (m *MplsTeP2MpS2L) GetUptime() uint32 {
	if m != nil {
		return m.Uptime
	}
	return 0
}

func (m *MplsTeP2MpS2L) GetEgressInterface() string {
	if m != nil {
		return m.EgressInterface
	}
	return ""
}

func (m *MplsTeP2MpS2L) GetEgressInterfaceState() string {
	if m != nil {
		return m.EgressInterfaceState
	}
	return ""
}

func (m *MplsTeP2MpS2L) GetEgressInterfaceBrief() string {
	if m != nil {
		return m.EgressInterfaceBrief
	}
	return ""
}

func (m *MplsTeP2MpS2L) GetIngressInterface() string {
	if m != nil {
		return m.IngressInterface
	}
	return ""
}

func (m *MplsTeP2MpS2L) GetIngressInterfaceState() string {
	if m != nil {
		return m.IngressInterfaceState
	}
	return ""
}

func (m *MplsTeP2MpS2L) GetIngressInterfaceBrief() string {
	if m != nil {
		return m.IngressInterfaceBrief
	}
	return ""
}

func (m *MplsTeP2MpS2L) GetS2LLocalLabel() uint32 {
	if m != nil {
		return m.S2LLocalLabel
	}
	return 0
}

func (m *MplsTeP2MpS2L) GetS2LOutLabel() uint32 {
	if m != nil {
		return m.S2LOutLabel
	}
	return 0
}

func (m *MplsTeP2MpS2L) GetOutboundFrrState() string {
	if m != nil {
		return m.OutboundFrrState
	}
	return ""
}

func (m *MplsTeP2MpS2L) GetFrrOutTunnelInterface() string {
	if m != nil {
		return m.FrrOutTunnelInterface
	}
	return ""
}

func (m *MplsTeP2MpS2L) GetRole() string {
	if m != nil {
		return m.Role
	}
	return ""
}

func (m *MplsTeP2MpS2L) GetSignallingStatus() string {
	if m != nil {
		return m.SignallingStatus
	}
	return ""
}

func (m *MplsTeP2MpS2L) GetLocalRouterId() string {
	if m != nil {
		return m.LocalRouterId
	}
	return ""
}

func (m *MplsTeP2MpS2L) GetUpstreamRouterId() string {
	if m != nil {
		return m.UpstreamRouterId
	}
	return ""
}

func (m *MplsTeP2MpS2L) GetDownstreamRouterId() string {
	if m != nil {
		return m.DownstreamRouterId
	}
	return ""
}

func (m *MplsTeP2MpS2L) GetNextHopAddress() string {
	if m != nil {
		return m.NextHopAddress
	}
	return ""
}

func (m *MplsTeP2MpS2L) GetNextNextHopAddress() string {
	if m != nil {
		return m.NextNextHopAddress
	}
	return ""
}

func (m *MplsTeP2MpS2L) GetNextHopAddressGeneric() *TeAddrT_ {
	if m != nil {
		return m.NextHopAddressGeneric
	}
	return nil
}

func (m *MplsTeP2MpS2L) GetPreviousHopAddress() string {
	if m != nil {
		return m.PreviousHopAddress
	}
	return ""
}

func (m *MplsTeP2MpS2L) GetPreviousHopAddressGeneric() *TeAddrT_ {
	if m != nil {
		return m.PreviousHopAddressGeneric
	}
	return nil
}

func (m *MplsTeP2MpS2L) GetIncomingAddress() string {
	if m != nil {
		return m.IncomingAddress
	}
	return ""
}

func (m *MplsTeP2MpS2L) GetIncomingAddressGeneric() *TeAddrT_ {
	if m != nil {
		return m.IncomingAddressGeneric
	}
	return nil
}

func (m *MplsTeP2MpS2L) GetBackupTunnelInterface() string {
	if m != nil {
		return m.BackupTunnelInterface
	}
	return ""
}

func (m *MplsTeP2MpS2L) GetNodeHopCount() uint32 {
	if m != nil {
		return m.NodeHopCount
	}
	return 0
}

func (m *MplsTeP2MpS2L) GetS2LConvergence() *TeLspConvergenceInfo {
	if m != nil {
		return m.S2LConvergence
	}
	return nil
}

func (m *MplsTeP2MpS2L) GetSoftPreemption() *MplsTeSoftPreemptionLspInfo {
	if m != nil {
		return m.SoftPreemption
	}
	return nil
}

func (m *MplsTeP2MpS2L) GetIsOptical() bool {
	if m != nil {
		return m.IsOptical
	}
	return false
}

func (m *MplsTeP2MpS2L) GetGmplsLabels() *MplsTeMgmtGmplsLabels {
	if m != nil {
		return m.GmplsLabels
	}
	return nil
}

func (m *MplsTeP2MpS2L) GetOtnS2L() *MplsTeOtnS2LInfo {
	if m != nil {
		return m.OtnS2L
	}
	return nil
}

func (m *MplsTeP2MpS2L) GetHeadEndBfdInfo() *MplsTeHeadBfdInfo {
	if m != nil {
		return m.HeadEndBfdInfo
	}
	return nil
}

func (m *MplsTeP2MpS2L) GetTailEndBfdInfo() *MplsTeTailBfdInfo {
	if m != nil {
		return m.TailEndBfdInfo
	}
	return nil
}

func (m *MplsTeP2MpS2L) GetSrlgCollection() *TeS2LSrlgCollectInfo {
	if m != nil {
		return m.SrlgCollection
	}
	return nil
}

func (m *MplsTeP2MpS2L) GetAssociation() *MplsTeS2LAssociationObject {
	if m != nil {
		return m.Association
	}
	return nil
}

func (m *MplsTeP2MpS2L) GetProtection() *MplsTeS2LProtectionObject {
	if m != nil {
		return m.Protection
	}
	return nil
}

func (m *MplsTeP2MpS2L) GetS2LReverseEroObjPresent() bool {
	if m != nil {
		return m.S2LReverseEroObjPresent
	}
	return false
}

func (m *MplsTeP2MpS2L) GetReverseEroIn() []*RsvpMgmtEroSubobj {
	if m != nil {
		return m.ReverseEroIn
	}
	return nil
}

func (m *MplsTeP2MpS2L) GetReverseLspPresent() bool {
	if m != nil {
		return m.ReverseLspPresent
	}
	return false
}

func (m *MplsTeP2MpS2L) GetReverseLspConnected() bool {
	if m != nil {
		return m.ReverseLspConnected
	}
	return false
}

func (m *MplsTeP2MpS2L) GetReverseLspFec() *TeLspFecT {
	if m != nil {
		return m.ReverseLspFec
	}
	return nil
}

func (m *MplsTeP2MpS2L) GetReverseLspName() string {
	if m != nil {
		return m.ReverseLspName
	}
	return ""
}

func (m *MplsTeP2MpS2L) GetS2LReverseTspecObjPresent() bool {
	if m != nil {
		return m.S2LReverseTspecObjPresent
	}
	return false
}

func (m *MplsTeP2MpS2L) GetReverseTspec() *BandwidthSpecBag {
	if m != nil {
		return m.ReverseTspec
	}
	return nil
}

func (m *MplsTeP2MpS2L) GetS2LReverseLspSubObj() []uint32 {
	if m != nil {
		return m.S2LReverseLspSubObj
	}
	return nil
}

func (m *MplsTeP2MpS2L) GetFlexInfo() *MplsTeS2LFlexInfo {
	if m != nil {
		return m.FlexInfo
	}
	return nil
}

func (m *MplsTeP2MpS2L) GetS2LSegmentRoutingPath() []*TeS2LSrPathHop {
	if m != nil {
		return m.S2LSegmentRoutingPath
	}
	return nil
}

func (m *MplsTeP2MpS2L) GetLspWrapInfo() *TunnelMidpointLspWrapInfoBag {
	if m != nil {
		return m.LspWrapInfo
	}
	return nil
}

func (m *MplsTeP2MpS2L) GetPathUsingStrictSpf() bool {
	if m != nil {
		return m.PathUsingStrictSpf
	}
	return false
}

func (m *MplsTeP2MpS2L) GetDiversityInfo() *MplsTeS2LDiversityInfo {
	if m != nil {
		return m.DiversityInfo
	}
	return nil
}

func (m *MplsTeP2MpS2L) GetAccumulatedPathMetrics() *MplsTePathMetrics {
	if m != nil {
		return m.AccumulatedPathMetrics
	}
	return nil
}

func (m *MplsTeP2MpS2L) GetAccumulatedReversePathMetrics() *MplsTePathMetrics {
	if m != nil {
		return m.AccumulatedReversePathMetrics
	}
	return nil
}

type MplsTeP2MpLsp struct {
	SignaledName         string           `protobuf:"bytes,50,opt,name=signaled_name,json=signaledName,proto3" json:"signaled_name,omitempty"`
	IsFrrFailed          bool             `protobuf:"varint,51,opt,name=is_frr_failed,json=isFrrFailed,proto3" json:"is_frr_failed,omitempty"`
	FrrActiveReason      uint32           `protobuf:"varint,52,opt,name=frr_active_reason,json=frrActiveReason,proto3" json:"frr_active_reason,omitempty"`
	LspBandwidth         uint32           `protobuf:"varint,53,opt,name=lsp_bandwidth,json=lspBandwidth,proto3" json:"lsp_bandwidth,omitempty"`
	LspSetupPriority     uint32           `protobuf:"varint,54,opt,name=lsp_setup_priority,json=lspSetupPriority,proto3" json:"lsp_setup_priority,omitempty"`
	LspHoldPriority      uint32           `protobuf:"varint,55,opt,name=lsp_hold_priority,json=lspHoldPriority,proto3" json:"lsp_hold_priority,omitempty"`
	LspBandwidthType     string           `protobuf:"bytes,56,opt,name=lsp_bandwidth_type,json=lspBandwidthType,proto3" json:"lsp_bandwidth_type,omitempty"`
	DsteClassMatch       bool             `protobuf:"varint,57,opt,name=dste_class_match,json=dsteClassMatch,proto3" json:"dste_class_match,omitempty"`
	DsteClassIndex       uint32           `protobuf:"varint,58,opt,name=dste_class_index,json=dsteClassIndex,proto3" json:"dste_class_index,omitempty"`
	LspFec               *TeLspFecT       `protobuf:"bytes,59,opt,name=lsp_fec,json=lspFec,proto3" json:"lsp_fec,omitempty"`
	Type                 string           `protobuf:"bytes,60,opt,name=type,proto3" json:"type,omitempty"`
	S2L                  []*MplsTeP2MpS2L `protobuf:"bytes,61,rep,name=s2l,proto3" json:"s2l,omitempty"`
	Uptime               uint32           `protobuf:"varint,62,opt,name=uptime,proto3" json:"uptime,omitempty"`
	S2LsUp               uint32           `protobuf:"varint,63,opt,name=s2_ls_up,json=s2LsUp,proto3" json:"s2_ls_up,omitempty"`
	S2LsProceeding       uint32           `protobuf:"varint,64,opt,name=s2_ls_proceeding,json=s2LsProceeding,proto3" json:"s2_ls_proceeding,omitempty"`
	S2LsDown             uint32           `protobuf:"varint,65,opt,name=s2_ls_down,json=s2LsDown,proto3" json:"s2_ls_down,omitempty"`
	ReoptimizeReason     string           `protobuf:"bytes,66,opt,name=reoptimize_reason,json=reoptimizeReason,proto3" json:"reoptimize_reason,omitempty"`
	ReoptimizeTrigger    string           `protobuf:"bytes,67,opt,name=reoptimize_trigger,json=reoptimizeTrigger,proto3" json:"reoptimize_trigger,omitempty"`
	TimerLeft            uint32           `protobuf:"varint,68,opt,name=timer_left,json=timerLeft,proto3" json:"timer_left,omitempty"`
	IsPassive            bool             `protobuf:"varint,69,opt,name=is_passive,json=isPassive,proto3" json:"is_passive,omitempty"`
	IsInterface          bool             `protobuf:"varint,70,opt,name=is_interface,json=isInterface,proto3" json:"is_interface,omitempty"`
	LastPathChange       uint32           `protobuf:"varint,71,opt,name=last_path_change,json=lastPathChange,proto3" json:"last_path_change,omitempty"`
	PersistentBytes      uint64           `protobuf:"varint,72,opt,name=persistent_bytes,json=persistentBytes,proto3" json:"persistent_bytes,omitempty"`
	PersistentPackets    uint64           `protobuf:"varint,73,opt,name=persistent_packets,json=persistentPackets,proto3" json:"persistent_packets,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *MplsTeP2MpLsp) Reset()         { *m = MplsTeP2MpLsp{} }
func (m *MplsTeP2MpLsp) String() string { return proto.CompactTextString(m) }
func (*MplsTeP2MpLsp) ProtoMessage()    {}
func (*MplsTeP2MpLsp) Descriptor() ([]byte, []int) {
	return fileDescriptor_566d4710799f1740, []int{82}
}

func (m *MplsTeP2MpLsp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MplsTeP2MpLsp.Unmarshal(m, b)
}
func (m *MplsTeP2MpLsp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MplsTeP2MpLsp.Marshal(b, m, deterministic)
}
func (m *MplsTeP2MpLsp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MplsTeP2MpLsp.Merge(m, src)
}
func (m *MplsTeP2MpLsp) XXX_Size() int {
	return xxx_messageInfo_MplsTeP2MpLsp.Size(m)
}
func (m *MplsTeP2MpLsp) XXX_DiscardUnknown() {
	xxx_messageInfo_MplsTeP2MpLsp.DiscardUnknown(m)
}

var xxx_messageInfo_MplsTeP2MpLsp proto.InternalMessageInfo

func (m *MplsTeP2MpLsp) GetSignaledName() string {
	if m != nil {
		return m.SignaledName
	}
	return ""
}

func (m *MplsTeP2MpLsp) GetIsFrrFailed() bool {
	if m != nil {
		return m.IsFrrFailed
	}
	return false
}

func (m *MplsTeP2MpLsp) GetFrrActiveReason() uint32 {
	if m != nil {
		return m.FrrActiveReason
	}
	return 0
}

func (m *MplsTeP2MpLsp) GetLspBandwidth() uint32 {
	if m != nil {
		return m.LspBandwidth
	}
	return 0
}

func (m *MplsTeP2MpLsp) GetLspSetupPriority() uint32 {
	if m != nil {
		return m.LspSetupPriority
	}
	return 0
}

func (m *MplsTeP2MpLsp) GetLspHoldPriority() uint32 {
	if m != nil {
		return m.LspHoldPriority
	}
	return 0
}

func (m *MplsTeP2MpLsp) GetLspBandwidthType() string {
	if m != nil {
		return m.LspBandwidthType
	}
	return ""
}

func (m *MplsTeP2MpLsp) GetDsteClassMatch() bool {
	if m != nil {
		return m.DsteClassMatch
	}
	return false
}

func (m *MplsTeP2MpLsp) GetDsteClassIndex() uint32 {
	if m != nil {
		return m.DsteClassIndex
	}
	return 0
}

func (m *MplsTeP2MpLsp) GetLspFec() *TeLspFecT {
	if m != nil {
		return m.LspFec
	}
	return nil
}

func (m *MplsTeP2MpLsp) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *MplsTeP2MpLsp) GetS2L() []*MplsTeP2MpS2L {
	if m != nil {
		return m.S2L
	}
	return nil
}

func (m *MplsTeP2MpLsp) GetUptime() uint32 {
	if m != nil {
		return m.Uptime
	}
	return 0
}

func (m *MplsTeP2MpLsp) GetS2LsUp() uint32 {
	if m != nil {
		return m.S2LsUp
	}
	return 0
}

func (m *MplsTeP2MpLsp) GetS2LsProceeding() uint32 {
	if m != nil {
		return m.S2LsProceeding
	}
	return 0
}

func (m *MplsTeP2MpLsp) GetS2LsDown() uint32 {
	if m != nil {
		return m.S2LsDown
	}
	return 0
}

func (m *MplsTeP2MpLsp) GetReoptimizeReason() string {
	if m != nil {
		return m.ReoptimizeReason
	}
	return ""
}

func (m *MplsTeP2MpLsp) GetReoptimizeTrigger() string {
	if m != nil {
		return m.ReoptimizeTrigger
	}
	return ""
}

func (m *MplsTeP2MpLsp) GetTimerLeft() uint32 {
	if m != nil {
		return m.TimerLeft
	}
	return 0
}

func (m *MplsTeP2MpLsp) GetIsPassive() bool {
	if m != nil {
		return m.IsPassive
	}
	return false
}

func (m *MplsTeP2MpLsp) GetIsInterface() bool {
	if m != nil {
		return m.IsInterface
	}
	return false
}

func (m *MplsTeP2MpLsp) GetLastPathChange() uint32 {
	if m != nil {
		return m.LastPathChange
	}
	return 0
}

func (m *MplsTeP2MpLsp) GetPersistentBytes() uint64 {
	if m != nil {
		return m.PersistentBytes
	}
	return 0
}

func (m *MplsTeP2MpLsp) GetPersistentPackets() uint64 {
	if m != nil {
		return m.PersistentPackets
	}
	return 0
}

func init() {
	proto.RegisterType((*MplsTeP2MpLsp_KEYS)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.p2p_p2mp_tunnel.tunnel_remotes.tunnel_remote.mpls_te_p2mp_lsp_KEYS")
	proto.RegisterType((*TeLspFecCtypeDataT)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.p2p_p2mp_tunnel.tunnel_remotes.tunnel_remote.te_lsp_fec_ctype_data_t")
	proto.RegisterType((*TeLspFecT)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.p2p_p2mp_tunnel.tunnel_remotes.tunnel_remote.te_lsp_fec_t")
	proto.RegisterType((*TeS2LFecT)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.p2p_p2mp_tunnel.tunnel_remotes.tunnel_remote.te_s2l_fec_t")
	proto.RegisterType((*AffinityNameBag)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.p2p_p2mp_tunnel.tunnel_remotes.tunnel_remote.affinity_name_bag")
	proto.RegisterType((*MplsTeTunnelsAffinityInfo)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.p2p_p2mp_tunnel.tunnel_remotes.tunnel_remote.mpls_te_tunnels_affinity_info")
	proto.RegisterType((*MplsTeAttributeSetVersion)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.p2p_p2mp_tunnel.tunnel_remotes.tunnel_remote.mpls_te_attribute_set_version")
	proto.RegisterType((*MplsTeAttributeSetBfdRevPath)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.p2p_p2mp_tunnel.tunnel_remotes.tunnel_remote.mpls_te_attribute_set_bfd_rev_path")
	proto.RegisterType((*MplsTeAttributeSetPathOption)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.p2p_p2mp_tunnel.tunnel_remotes.tunnel_remote.mpls_te_attribute_set_path_option")
	proto.RegisterType((*MplsTeAttributeSetSigName)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.p2p_p2mp_tunnel.tunnel_remotes.tunnel_remote.mpls_te_attribute_set_sig_name")
	proto.RegisterType((*MplsTeLoggingAttributes)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.p2p_p2mp_tunnel.tunnel_remotes.tunnel_remote.mpls_te_logging_attributes")
	proto.RegisterType((*MplsTeProtectedIfNameStr)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.p2p_p2mp_tunnel.tunnel_remotes.tunnel_remote.mpls_te_protected_if_name_str")
	proto.RegisterType((*MplsTeAttributeSetAutoBackup)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.p2p_p2mp_tunnel.tunnel_remotes.tunnel_remote.mpls_te_attribute_set_auto_backup")
	proto.RegisterType((*MplsTeAttributeSetAutoMesh)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.p2p_p2mp_tunnel.tunnel_remotes.tunnel_remote.mpls_te_attribute_set_auto_mesh")
	proto.RegisterType((*TeXroSubobjIpv4)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.p2p_p2mp_tunnel.tunnel_remotes.tunnel_remote.te_xro_subobj_ipv4")
	proto.RegisterType((*TeXroSubobjIpv6)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.p2p_p2mp_tunnel.tunnel_remotes.tunnel_remote.te_xro_subobj_ipv6")
	proto.RegisterType((*TeXroSubobjUnnum)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.p2p_p2mp_tunnel.tunnel_remotes.tunnel_remote.te_xro_subobj_unnum")
	proto.RegisterType((*TeXroSubobjAs)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.p2p_p2mp_tunnel.tunnel_remotes.tunnel_remote.te_xro_subobj_as")
	proto.RegisterType((*TeXroSubobjSrlg)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.p2p_p2mp_tunnel.tunnel_remotes.tunnel_remote.te_xro_subobj_srlg")
	proto.RegisterType((*TeXroSubobjP2PLsp)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.p2p_p2mp_tunnel.tunnel_remotes.tunnel_remote.te_xro_subobj_p2p_lsp")
	proto.RegisterType((*TeXroSubobj)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.p2p_p2mp_tunnel.tunnel_remotes.tunnel_remote.te_xro_subobj")
	proto.RegisterType((*TeXro)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.p2p_p2mp_tunnel.tunnel_remotes.tunnel_remote.te_xro")
	proto.RegisterType((*MplsTeAttributeSetXro)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.p2p_p2mp_tunnel.tunnel_remotes.tunnel_remote.mpls_te_attribute_set_xro")
	proto.RegisterType((*MplsTeAttributeSetP2MpTe)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.p2p_p2mp_tunnel.tunnel_remotes.tunnel_remote.mpls_te_attribute_set_p2mp_te")
	proto.RegisterType((*TeRevertSchT)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.p2p_p2mp_tunnel.tunnel_remotes.tunnel_remote.te_revert_sch_t")
	proto.RegisterType((*MplsTeAttributeSetApsPp)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.p2p_p2mp_tunnel.tunnel_remotes.tunnel_remote.mpls_te_attribute_set_aps_pp")
	proto.RegisterType((*MplsTeAttributeSetSrPrependEntry)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.p2p_p2mp_tunnel.tunnel_remotes.tunnel_remote.mpls_te_attribute_set_sr_prepend_entry")
	proto.RegisterType((*MplsTeAttributeSetSrPrependList)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.p2p_p2mp_tunnel.tunnel_remotes.tunnel_remote.mpls_te_attribute_set_sr_prepend_list")
	proto.RegisterType((*MplsTeAttributeSetP2PTe)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.p2p_p2mp_tunnel.tunnel_remotes.tunnel_remote.mpls_te_attribute_set_p2p_te")
	proto.RegisterType((*MplsTeAttributeSetUnion)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.p2p_p2mp_tunnel.tunnel_remotes.tunnel_remote.mpls_te_attribute_set_union")
	proto.RegisterType((*MplsTeAttributeSet)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.p2p_p2mp_tunnel.tunnel_remotes.tunnel_remote.mpls_te_attribute_set")
	proto.RegisterType((*MplsTeP2MpPcalcError)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.p2p_p2mp_tunnel.tunnel_remotes.tunnel_remote.mpls_te_p2mp_pcalc_error")
	proto.RegisterType((*MplsTeP2MpSigError)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.p2p_p2mp_tunnel.tunnel_remotes.tunnel_remote.mpls_te_p2mp_sig_error")
	proto.RegisterType((*MplsTeP2MpPathOption)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.p2p_p2mp_tunnel.tunnel_remotes.tunnel_remote.mpls_te_p2mp_path_option")
	proto.RegisterType((*MplsSrlgInfo)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.p2p_p2mp_tunnel.tunnel_remotes.tunnel_remote.mpls_srlg_info")
	proto.RegisterType((*RsvpMgmtEroIpv4Subobj)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.p2p_p2mp_tunnel.tunnel_remotes.tunnel_remote.rsvp_mgmt_ero_ipv4_subobj")
	proto.RegisterType((*RsvpMgmtEroUnnumSubobj)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.p2p_p2mp_tunnel.tunnel_remotes.tunnel_remote.rsvp_mgmt_ero_unnum_subobj")
	proto.RegisterType((*RsvpMgmtEroSubobj)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.p2p_p2mp_tunnel.tunnel_remotes.tunnel_remote.rsvp_mgmt_ero_subobj")
	proto.RegisterType((*RsvpMgmtRroIpv4SubobjFlags)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.p2p_p2mp_tunnel.tunnel_remotes.tunnel_remote.rsvp_mgmt_rro_ipv4_subobj_flags")
	proto.RegisterType((*RsvpMgmtRroIpv4Subobj)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.p2p_p2mp_tunnel.tunnel_remotes.tunnel_remote.rsvp_mgmt_rro_ipv4_subobj")
	proto.RegisterType((*RsvpMgmtRroLabelSubobjFlags)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.p2p_p2mp_tunnel.tunnel_remotes.tunnel_remote.rsvp_mgmt_rro_label_subobj_flags")
	proto.RegisterType((*RsvpMgmtRroLabelSubobj)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.p2p_p2mp_tunnel.tunnel_remotes.tunnel_remote.rsvp_mgmt_rro_label_subobj")
	proto.RegisterType((*RsvpMgmtRroUnnumberedSubobjFlags)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.p2p_p2mp_tunnel.tunnel_remotes.tunnel_remote.rsvp_mgmt_rro_unnumbered_subobj_flags")
	proto.RegisterType((*RsvpMgmtRroUnnumberedSubobj)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.p2p_p2mp_tunnel.tunnel_remotes.tunnel_remote.rsvp_mgmt_rro_unnumbered_subobj")
	proto.RegisterType((*RsvpMgmtRroSrlgSubobj)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.p2p_p2mp_tunnel.tunnel_remotes.tunnel_remote.rsvp_mgmt_rro_srlg_subobj")
	proto.RegisterType((*RsvpMgmtRroSubobj)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.p2p_p2mp_tunnel.tunnel_remotes.tunnel_remote.rsvp_mgmt_rro_subobj")
	proto.RegisterType((*TunnelHopInfo)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.p2p_p2mp_tunnel.tunnel_remotes.tunnel_remote.tunnel_hop_info")
	proto.RegisterType((*BandwidthSpecBag)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.p2p_p2mp_tunnel.tunnel_remotes.tunnel_remote.bandwidth_spec_bag")
	proto.RegisterType((*TeMgmtG709OtnTspec)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.p2p_p2mp_tunnel.tunnel_remotes.tunnel_remote.te_mgmt_g709_otn_tspec")
	proto.RegisterType((*TeMgmtGenericTspec)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.p2p_p2mp_tunnel.tunnel_remotes.tunnel_remote.te_mgmt_generic_tspec")
	proto.RegisterType((*TeMgmtG709OtnFspec)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.p2p_p2mp_tunnel.tunnel_remotes.tunnel_remote.te_mgmt_g709_otn_fspec")
	proto.RegisterType((*TeMgmtGenericFspec)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.p2p_p2mp_tunnel.tunnel_remotes.tunnel_remote.te_mgmt_generic_fspec")
	proto.RegisterType((*TeAddrTypeIpv4Unnum)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.p2p_p2mp_tunnel.tunnel_remotes.tunnel_remote.te_addr_type_ipv4_unnum")
	proto.RegisterType((*Addr)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.p2p_p2mp_tunnel.tunnel_remotes.tunnel_remote.addr")
	proto.RegisterType((*TeAddrT_)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.p2p_p2mp_tunnel.tunnel_remotes.tunnel_remote.te_addr_t_")
	proto.RegisterType((*TeLspConvergenceInfo)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.p2p_p2mp_tunnel.tunnel_remotes.tunnel_remote.te_lsp_convergence_info")
	proto.RegisterType((*MplsTeSoftPreemptionLspInfo)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.p2p_p2mp_tunnel.tunnel_remotes.tunnel_remote.mpls_te_soft_preemption_lsp_info")
	proto.RegisterType((*MplsTeMgmtWdmFixedGridLabel)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.p2p_p2mp_tunnel.tunnel_remotes.tunnel_remote.mpls_te_mgmt_wdm_fixed_grid_label")
	proto.RegisterType((*MplsTeMgmtG709OtnFixedSizeLabel)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.p2p_p2mp_tunnel.tunnel_remotes.tunnel_remote.mpls_te_mgmt_g709_otn_fixed_size_label")
	proto.RegisterType((*MplsTeMgmtGmplsLabel)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.p2p_p2mp_tunnel.tunnel_remotes.tunnel_remote.mpls_te_mgmt_gmpls_label")
	proto.RegisterType((*MplsTeMgmtGmplsLabels)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.p2p_p2mp_tunnel.tunnel_remotes.tunnel_remote.mpls_te_mgmt_gmpls_labels")
	proto.RegisterType((*TeOduFlexCbrInfo)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.p2p_p2mp_tunnel.tunnel_remotes.tunnel_remote.te_odu_flex_cbr_info")
	proto.RegisterType((*TeOduFlexGfpFResInfo)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.p2p_p2mp_tunnel.tunnel_remotes.tunnel_remote.te_odu_flex_gfp_f_res_info")
	proto.RegisterType((*TeOduFlexGfpFNonResInfo)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.p2p_p2mp_tunnel.tunnel_remotes.tunnel_remote.te_odu_flex_gfp_f_non_res_info")
	proto.RegisterType((*TeOduV3Bw)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.p2p_p2mp_tunnel.tunnel_remotes.tunnel_remote.te_odu_v3_bw")
	proto.RegisterType((*MplsTeS2LOtnInfo)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.p2p_p2mp_tunnel.tunnel_remotes.tunnel_remote.mpls_te_s2l_otn_info")
	proto.RegisterType((*TePvtProtObjT)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.p2p_p2mp_tunnel.tunnel_remotes.tunnel_remote.te_pvt_prot_obj_t")
	proto.RegisterType((*MplsTeS2LApsInfo)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.p2p_p2mp_tunnel.tunnel_remotes.tunnel_remote.mpls_te_s2l_aps_info")
	proto.RegisterType((*MplsTeOtnS2LInfo)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.p2p_p2mp_tunnel.tunnel_remotes.tunnel_remote.mpls_te_otn_s2l_info")
	proto.RegisterType((*MplsTeBfdSessionInfo)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.p2p_p2mp_tunnel.tunnel_remotes.tunnel_remote.mpls_te_bfd_session_info")
	proto.RegisterType((*MplsTeBfdDeletionHistory)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.p2p_p2mp_tunnel.tunnel_remotes.tunnel_remote.mpls_te_bfd_deletion_history")
	proto.RegisterType((*MplsTeHeadBfdInfo)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.p2p_p2mp_tunnel.tunnel_remotes.tunnel_remote.mpls_te_head_bfd_info")
	proto.RegisterType((*MplsTeTailBfdInfo)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.p2p_p2mp_tunnel.tunnel_remotes.tunnel_remote.mpls_te_tail_bfd_info")
	proto.RegisterType((*TeS2LSrlgCollectInfo)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.p2p_p2mp_tunnel.tunnel_remotes.tunnel_remote.te_s2l_srlg_collect_info")
	proto.RegisterType((*MplsTeS2LAssociationObject)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.p2p_p2mp_tunnel.tunnel_remotes.tunnel_remote.mpls_te_s2l_association_object")
	proto.RegisterType((*MplsTeS2LProtectionObject)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.p2p_p2mp_tunnel.tunnel_remotes.tunnel_remote.mpls_te_s2l_protection_object")
	proto.RegisterType((*MplsTeS2LFlexInfo)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.p2p_p2mp_tunnel.tunnel_remotes.tunnel_remote.mpls_te_s2l_flex_info")
	proto.RegisterType((*TeS2LSrPathHop)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.p2p_p2mp_tunnel.tunnel_remotes.tunnel_remote.te_s2l_sr_path_hop")
	proto.RegisterType((*TunnelMidpointLspWrapInfoBag)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.p2p_p2mp_tunnel.tunnel_remotes.tunnel_remote.tunnel_midpoint_lsp_wrap_info_bag")
	proto.RegisterType((*MplsTeS2LDiversityInfo)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.p2p_p2mp_tunnel.tunnel_remotes.tunnel_remote.mpls_te_s2l_diversity_info")
	proto.RegisterType((*MplsTePathMetrics)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.p2p_p2mp_tunnel.tunnel_remotes.tunnel_remote.mpls_te_path_metrics")
	proto.RegisterType((*MplsTeP2MpS2L)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.p2p_p2mp_tunnel.tunnel_remotes.tunnel_remote.mpls_te_p2mp_s2l")
	proto.RegisterType((*MplsTeP2MpLsp)(nil), "cisco_ios_xr_mpls_te_oper.mpls_te.p2p_p2mp_tunnel.tunnel_remotes.tunnel_remote.mpls_te_p2mp_lsp")
}

func init() { proto.RegisterFile("mpls_te_p2mp_lsp.proto", fileDescriptor_566d4710799f1740) }

var fileDescriptor_566d4710799f1740 = []byte{
	// 9867 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xec, 0x7d, 0x5d, 0x93, 0x24, 0xc7,
	0x71, 0x58, 0xf4, 0x7e, 0xce, 0xe6, 0xce, 0xec, 0x47, 0xef, 0xd7, 0xec, 0x7d, 0xe0, 0xee, 0xe6,
	0x70, 0xf8, 0x22, 0x70, 0xc0, 0x2d, 0x80, 0x03, 0x01, 0x90, 0x14, 0xef, 0x13, 0x58, 0x71, 0xef,
	0x43, 0xbd, 0x0b, 0x90, 0x72, 0x48, 0x6e, 0xf5, 0x74, 0x57, 0xcf, 0x36, 0xae, 0xa7, 0xbb, 0x59,
	0xd5, 0xb3, 0xbb, 0x47, 0x85, 0xc3, 0x36, 0x25, 0x52, 0x24, 0x45, 0x85, 0x49, 0x49, 0xd4, 0x47,
	0xd0, 0x22, 0xc3, 0xe1, 0x60, 0x84, 0x43, 0xb6, 0x23, 0xec, 0x07, 0x5b, 0x8e, 0x90, 0xfd, 0x60,
	0xd9, 0x7e, 0xf1, 0x0f, 0xb0, 0xc3, 0x4f, 0x7e, 0xf1, 0xbb, 0x6d, 0xc9, 0x7e, 0x70, 0xf8, 0x81,
	0x8e, 0xca, 0xac, 0xea, 0xae, 0xee, 0x99, 0xdd, 0x03, 0x40, 0xcc, 0x82, 0x8e, 0xd0, 0xcb, 0xee,
	0x74, 0x56, 0x66, 0x55, 0xd6, 0x57, 0x56, 0x66, 0x55, 0x56, 0x16, 0xac, 0xf7, 0xb3, 0x58, 0xb8,
	0x39, 0x73, 0xb3, 0xad, 0x7e, 0xe6, 0xc6, 0x22, 0xbb, 0x9a, 0xf1, 0x34, 0x4f, 0xed, 0xfb, 0x7e,
	0x24, 0xfc, 0xd4, 0x8d, 0x52, 0xe1, 0x1e, 0x71, 0x57, 0x23, 0xa5, 0x19, 0xe3, 0x57, 0xd5, 0xc7,
	0xd5, 0x6c, 0x2b, 0x23, 0xaa, 0x7c, 0x90, 0x24, 0x2c, 0xbe, 0x4a, 0xff, 0x5c, 0xce, 0xfa, 0x69,
	0xce, 0x44, 0xf5, 0xb3, 0xf3, 0x77, 0x26, 0x60, 0xad, 0x5e, 0x94, 0xfb, 0xa5, 0x3b, 0xbf, 0xbc,
	0x6b, 0xaf, 0xc1, 0x8c, 0xfc, 0x1d, 0x05, 0x6d, 0xeb, 0xa2, 0xf5, 0x5c, 0xcb, 0x99, 0x8e, 0x45,
	0xb6, 0x1d, 0xd8, 0x67, 0x61, 0x4e, 0xe5, 0x10, 0x05, 0xed, 0x09, 0x4c, 0x69, 0x10, 0x60, 0x3b,
	0xb0, 0x5f, 0x04, 0x9b, 0x1d, 0xe5, 0x2c, 0x09, 0x58, 0xe0, 0x96, 0x58, 0x93, 0x17, 0xad, 0xe7,
	0xe6, 0x9c, 0x25, 0x9d, 0xb2, 0xa7, 0xb1, 0xaf, 0xc0, 0x82, 0x48, 0x07, 0xdc, 0x67, 0xae, 0x17,
	0x04, 0x9c, 0x09, 0xd1, 0x9e, 0x42, 0xcc, 0x16, 0x41, 0x6f, 0x10, 0xd0, 0x5e, 0x85, 0x69, 0x3f,
	0x7f, 0x9c, 0xb1, 0xf6, 0x34, 0xa6, 0xd2, 0x87, 0xfd, 0x32, 0xac, 0x04, 0x4c, 0xe4, 0x51, 0xe2,
	0xe5, 0x51, 0x9a, 0x14, 0x39, 0xcc, 0x20, 0x8e, 0x6d, 0x24, 0xe9, 0x6c, 0x36, 0x60, 0x16, 0x2b,
	0x18, 0x05, 0xed, 0x59, 0x64, 0x7b, 0x46, 0x7e, 0x6e, 0x07, 0x9d, 0x3f, 0xb1, 0x60, 0x23, 0x67,
	0x58, 0xf1, 0x90, 0xf9, 0x2e, 0x66, 0xef, 0x06, 0x5e, 0xee, 0xb9, 0xb9, 0xac, 0x6d, 0x01, 0xc3,
	0x76, 0x98, 0x73, 0x1a, 0x21, 0xf3, 0x6f, 0x21, 0x0b, 0x57, 0x61, 0x45, 0xb6, 0xb5, 0x24, 0x34,
	0xca, 0xc3, 0x46, 0x99, 0x73, 0x96, 0xb3, 0xad, 0x6c, 0x47, 0x64, 0xb7, 0xcb, 0x04, 0xfb, 0x75,
	0xd8, 0x90, 0x99, 0x99, 0x6c, 0x6b, 0x8e, 0x26, 0x91, 0xa3, 0xd5, 0x90, 0xf9, 0x06, 0xc1, 0x43,
	0xe2, 0xef, 0xbf, 0x4c, 0x40, 0xd3, 0xe0, 0x2f, 0xb7, 0xcf, 0x01, 0xc8, 0x1f, 0x95, 0xde, 0x91,
	0x5c, 0xed, 0x60, 0x07, 0x75, 0xa0, 0x85, 0x68, 0xb5, 0x4e, 0x9a, 0x0f, 0x99, 0x5f, 0xb4, 0xfc,
	0xab, 0xb0, 0x2e, 0x71, 0x8e, 0xed, 0xab, 0x95, 0x90, 0xf9, 0x77, 0xea, 0xdd, 0x75, 0x9e, 0x8a,
	0xa5, 0xce, 0x51, 0x5d, 0x25, 0x5b, 0x67, 0x17, 0x01, 0xf6, 0x1f, 0x5b, 0xb0, 0x5a, 0xaf, 0x5e,
	0x94, 0x84, 0x29, 0x76, 0xdb, 0xfc, 0x56, 0xef, 0xea, 0x27, 0x3b, 0x72, 0xaf, 0x1e, 0xd3, 0x65,
	0x8e, 0x5d, 0x6d, 0xc4, 0xed, 0x24, 0x4c, 0x65, 0xdf, 0x4b, 0xbc, 0x03, 0x1e, 0xaa, 0x01, 0x32,
	0x13, 0x32, 0xff, 0x7d, 0x1e, 0x76, 0xfe, 0x7c, 0x12, 0xdb, 0x56, 0x6c, 0xc5, 0xaa, 0x6d, 0x5f,
	0x82, 0x15, 0xfd, 0x21, 0x06, 0xdd, 0x1e, 0x4f, 0x07, 0x46, 0x23, 0x2f, 0x89, 0xad, 0xf8, 0x2e,
	0xf3, 0x77, 0x55, 0xc2, 0x76, 0x60, 0x5f, 0x86, 0x05, 0x8d, 0xae, 0xba, 0x43, 0xb5, 0x36, 0x61,
	0x52, 0x8f, 0x3c, 0x0f, 0xcb, 0x45, 0x01, 0x95, 0x86, 0x6e, 0x39, 0x0b, 0x84, 0x57, 0xb4, 0xf1,
	0x5b, 0x70, 0x46, 0xa3, 0x8e, 0xe8, 0x1c, 0x6a, 0xf3, 0x75, 0xa2, 0x19, 0xea, 0x9f, 0xa7, 0x4b,
	0x5e, 0x54, 0x1f, 0xd1, 0x84, 0x69, 0x2a, 0xae, 0xa9, 0x9b, 0x2e, 0x42, 0x53, 0x63, 0xc9, 0x9e,
	0x52, 0xed, 0x01, 0x84, 0x23, 0xdb, 0xcd, 0xbe, 0x02, 0x8b, 0x1a, 0xa3, 0x3a, 0x61, 0x54, 0x46,
	0x34, 0x2c, 0xed, 0xcf, 0xc3, 0xd9, 0xa1, 0x96, 0x4a, 0x79, 0xd4, 0x93, 0xed, 0x9e, 0xf2, 0x76,
	0x03, 0xf3, 0x6d, 0x57, 0x5b, 0xec, 0x41, 0x91, 0x2e, 0x87, 0xa9, 0x26, 0xa7, 0xd9, 0x35, 0x87,
	0x04, 0xaa, 0xe1, 0x68, 0x82, 0x3d, 0x05, 0xf3, 0x1a, 0x47, 0x76, 0x1d, 0xd0, 0x90, 0x23, 0x0c,
	0xd9, 0x7b, 0xdf, 0x9d, 0x80, 0x65, 0x2f, 0x0c, 0xa3, 0x24, 0xca, 0x1f, 0xbb, 0x89, 0xd7, 0x67,
	0x6e, 0xd7, 0xeb, 0xd9, 0xcf, 0xc2, 0xa2, 0x9f, 0x26, 0x22, 0xe7, 0x5e, 0x94, 0xe4, 0x6e, 0x31,
	0x73, 0x5b, 0xce, 0x42, 0x09, 0xde, 0x93, 0xd9, 0x3f, 0x0f, 0x4b, 0x06, 0xe2, 0x81, 0x17, 0x0f,
	0x98, 0xea, 0x3e, 0x23, 0x83, 0xf7, 0x25, 0xd8, 0x7e, 0x01, 0x96, 0xc3, 0x94, 0x1f, 0x7a, 0x3c,
	0x70, 0x39, 0x0b, 0x15, 0x2e, 0x75, 0xe1, 0xa2, 0x4a, 0x70, 0x58, 0x48, 0xb8, 0x6f, 0xc1, 0xa6,
	0x91, 0x6d, 0xd1, 0x8d, 0x44, 0x33, 0x75, 0x71, 0xf2, 0xb9, 0x96, 0xb3, 0x51, 0x22, 0xe8, 0x6e,
	0x24, 0xda, 0xb7, 0xe1, 0x4c, 0x41, 0x30, 0x5c, 0xe0, 0x34, 0x11, 0x6b, 0x8c, 0xbb, 0xd5, 0x82,
	0x3b, 0xff, 0xcb, 0x82, 0xf3, 0x7a, 0x5e, 0xd1, 0xa0, 0x11, 0x6e, 0xd1, 0x3c, 0x72, 0x2a, 0xda,
	0x97, 0xa1, 0x55, 0x00, 0xba, 0x51, 0x2e, 0x54, 0xc3, 0x34, 0x35, 0xf0, 0x66, 0x94, 0x8b, 0x0a,
	0x52, 0xdf, 0x13, 0x8f, 0x54, 0x9b, 0x14, 0x48, 0xf7, 0x3c, 0xf1, 0xc8, 0xfe, 0x96, 0x05, 0x0b,
	0xb2, 0xc5, 0x83, 0xa2, 0x84, 0xf6, 0xe4, 0xc5, 0xc9, 0xe7, 0xe6, 0xb7, 0xbc, 0x4f, 0x7a, 0x9e,
	0x0f, 0x75, 0xb0, 0xd3, 0xc2, 0x82, 0x6f, 0x28, 0x78, 0xe7, 0x1b, 0x46, 0xb5, 0xbd, 0x3c, 0xe7,
	0x51, 0x77, 0x20, 0xa7, 0x34, 0xcb, 0xdd, 0x03, 0xc6, 0x85, 0x14, 0xbc, 0x57, 0x60, 0xa1, 0x4c,
	0x30, 0x44, 0x79, 0xab, 0x80, 0xee, 0xd1, 0x70, 0x83, 0x1e, 0x4b, 0x18, 0x2f, 0xc5, 0x78, 0xcb,
	0x31, 0x20, 0x52, 0x00, 0x46, 0xc2, 0x0d, 0x58, 0xe8, 0x0d, 0xe2, 0x1c, 0x7b, 0xbf, 0xe1, 0xcc,
	0x45, 0xe2, 0x36, 0x01, 0x3a, 0x21, 0x74, 0x46, 0xb3, 0xd1, 0x0d, 0x65, 0x27, 0x1e, 0xb8, 0x99,
	0x97, 0xef, 0xcb, 0x15, 0x45, 0xfe, 0x37, 0xd9, 0x68, 0x48, 0x00, 0x72, 0x70, 0x19, 0x5a, 0xdd,
	0x28, 0x09, 0xa2, 0xa4, 0xe7, 0xc6, 0x5e, 0x97, 0xc5, 0xba, 0xe9, 0x15, 0x70, 0x47, 0xc2, 0x3a,
	0xff, 0x69, 0x11, 0x2e, 0x8d, 0x2e, 0x08, 0x33, 0x4e, 0x33, 0x64, 0xf6, 0x1a, 0xac, 0xfa, 0x69,
	0x12, 0x46, 0xbd, 0x01, 0x67, 0x81, 0xdb, 0xf5, 0x92, 0xe0, 0x30, 0x0a, 0xf2, 0x7d, 0xd5, 0xe3,
	0x2b, 0x65, 0xda, 0x4d, 0x9d, 0x24, 0xeb, 0xe7, 0xa7, 0x22, 0x77, 0xe3, 0xa8, 0x1f, 0xe5, 0xaa,
	0xe8, 0x39, 0x09, 0xd9, 0x91, 0x00, 0xfb, 0x19, 0x58, 0x0c, 0x44, 0xce, 0x5c, 0x3f, 0xf6, 0x84,
	0x20, 0xfe, 0x69, 0x06, 0xb4, 0x24, 0xf8, 0x96, 0x84, 0x62, 0x25, 0xae, 0xc0, 0x42, 0x51, 0x1c,
	0xa1, 0xa9, 0x65, 0xbd, 0x80, 0x22, 0xda, 0x75, 0xd8, 0x88, 0x44, 0xc9, 0x98, 0x5b, 0x72, 0x84,
	0x72, 0xab, 0xe1, 0xac, 0x45, 0xa2, 0xe0, 0xed, 0x56, 0x91, 0x68, 0xbf, 0x01, 0xed, 0x48, 0xb8,
	0x25, 0xa3, 0x26, 0xe1, 0x8c, 0x26, 0xbc, 0xa5, 0xb9, 0x36, 0x08, 0xbf, 0x6d, 0x41, 0xa3, 0x18,
	0xac, 0xb3, 0xb8, 0x28, 0xf5, 0x3f, 0xe9, 0xc1, 0x7a, 0xe2, 0xf4, 0x73, 0x8a, 0xe2, 0xed, 0xd7,
	0x60, 0x3d, 0x32, 0x52, 0x8d, 0x2a, 0x34, 0xb0, 0x0a, 0xab, 0x91, 0xd0, 0xe3, 0xdb, 0xa8, 0x41,
	0x45, 0xf7, 0x9a, 0x43, 0x61, 0x50, 0xea, 0x5e, 0xd5, 0xd1, 0x0b, 0x43, 0xa3, 0xf7, 0x7b, 0x16,
	0x34, 0xd5, 0x84, 0xa0, 0x75, 0x79, 0x1e, 0xe7, 0xeb, 0xd8, 0x9a, 0x60, 0xe4, 0x54, 0x74, 0xe6,
	0xd5, 0x0f, 0x5c, 0x96, 0xdf, 0x82, 0x4d, 0x1c, 0xb2, 0x51, 0x72, 0xe0, 0xc5, 0x51, 0x40, 0x3a,
	0x43, 0x1e, 0xf5, 0x59, 0x3a, 0xc8, 0xdb, 0x4d, 0xac, 0xc1, 0x86, 0x44, 0xd8, 0x36, 0xd2, 0xf7,
	0x28, 0xd9, 0xfe, 0x2c, 0xb4, 0x87, 0x69, 0x3d, 0x1f, 0x2b, 0xdf, 0x42, 0xd2, 0xf5, 0x3a, 0xe9,
	0x0d, 0x4c, 0xb5, 0xf7, 0xe0, 0xd9, 0x48, 0xb8, 0xc7, 0x16, 0x6c, 0x76, 0xc6, 0x02, 0x76, 0xc6,
	0xe5, 0x48, 0x3c, 0x1c, 0xcd, 0x85, 0xd1, 0x37, 0x0e, 0x3c, 0x33, 0x32, 0x57, 0x62, 0xc9, 0xcc,
	0x74, 0x11, 0x33, 0xed, 0x0c, 0x67, 0x4a, 0xfc, 0x19, 0x79, 0xbe, 0x00, 0xcb, 0xec, 0xc8, 0x8f,
	0x07, 0x01, 0x73, 0xe3, 0x48, 0xe4, 0x28, 0x01, 0xdb, 0x4b, 0x38, 0x99, 0x16, 0x55, 0xc2, 0x4e,
	0x24, 0xf2, 0xfb, 0x5e, 0x9f, 0xd9, 0xb7, 0xe1, 0x42, 0x24, 0xdc, 0x21, 0x74, 0xb3, 0xe0, 0x65,
	0x2c, 0xf8, 0x6c, 0x24, 0xee, 0x54, 0x69, 0xab, 0x25, 0xca, 0x5a, 0xf8, 0x15, 0x3a, 0x1b, 0xe9,
	0x16, 0x23, 0xf1, 0xd0, 0x37, 0x71, 0xbf, 0x08, 0xe7, 0x15, 0x6e, 0x10, 0x89, 0x0f, 0x94, 0xce,
	0x61, 0xd2, 0xad, 0x20, 0xdd, 0x26, 0xd2, 0xdd, 0x8e, 0xc4, 0x07, 0xa4, 0x81, 0x18, 0x39, 0x7c,
	0x0e, 0xce, 0x9a, 0x39, 0xa0, 0x16, 0x67, 0xd0, 0xaf, 0x22, 0xfd, 0x46, 0x41, 0x2f, 0xc5, 0x86,
	0x41, 0x7d, 0x0b, 0x6b, 0x5c, 0x50, 0x6b, 0x5d, 0xcd, 0xcc, 0x61, 0x0d, 0x73, 0x38, 0x53, 0xe4,
	0xf0, 0x0e, 0xa9, 0x6d, 0x46, 0x26, 0xaf, 0xc0, 0x6a, 0xe6, 0xb3, 0x20, 0x73, 0x6b, 0x96, 0xc8,
	0x3a, 0x0e, 0x21, 0x1b, 0xd3, 0x76, 0x2b, 0xe6, 0xc8, 0x79, 0x00, 0xa2, 0x40, 0xd1, 0xb6, 0x41,
	0x3a, 0x09, 0x42, 0x50, 0xac, 0x3d, 0x0d, 0x0b, 0x94, 0x5c, 0xe8, 0x8e, 0x6d, 0x92, 0xe1, 0x08,
	0x55, 0x0c, 0xd8, 0x5f, 0x80, 0x73, 0xc4, 0x7b, 0xd7, 0x0d, 0x46, 0x35, 0xdd, 0x26, 0x32, 0xde,
	0x46, 0xc6, 0xbb, 0xb7, 0x87, 0x5b, 0xae, 0xa4, 0x0f, 0x46, 0x56, 0xfc, 0x8c, 0x49, 0x1f, 0x1c,
	0x57, 0xed, 0x6e, 0x50, 0xaf, 0xf6, 0xd9, 0xa2, 0xda, 0xdd, 0xa0, 0x5a, 0x6d, 0xaa, 0x97, 0x51,
	0x5c, 0xfb, 0x5c, 0x51, 0xaf, 0xa2, 0x04, 0xfb, 0xef, 0x5b, 0xb0, 0xa4, 0x96, 0x3b, 0xc6, 0x05,
	0xc3, 0xf9, 0xd0, 0x3e, 0x8f, 0xb2, 0x96, 0x9f, 0x8e, 0xa0, 0x31, 0x17, 0x5b, 0x67, 0xa1, 0x1b,
	0x06, 0x0e, 0xb1, 0x22, 0x27, 0x9b, 0x1a, 0xb2, 0x35, 0x06, 0xcd, 0x76, 0x7b, 0x4a, 0x0f, 0xd9,
	0x9b, 0x26, 0xa1, 0xd1, 0x70, 0x6f, 0xc2, 0x26, 0xea, 0x00, 0xb1, 0xf7, 0x78, 0x78, 0xf9, 0xb9,
	0x80, 0xd4, 0xeb, 0x52, 0x25, 0x88, 0xbd, 0xc7, 0xf5, 0xf5, 0xe7, 0x02, 0xcc, 0x1b, 0x74, 0xed,
	0x8b, 0x24, 0xa1, 0x83, 0x02, 0xb5, 0xf3, 0x67, 0x16, 0x3c, 0x35, 0xba, 0x52, 0x22, 0xea, 0xe1,
	0x6c, 0xb6, 0x6d, 0x98, 0x42, 0x21, 0x40, 0x8a, 0x03, 0xfe, 0x96, 0xf9, 0xaa, 0x5e, 0xc4, 0x11,
	0x39, 0xa1, 0x14, 0x7a, 0x04, 0xe1, 0x90, 0x94, 0xa2, 0x92, 0xa7, 0x39, 0xf3, 0x73, 0x16, 0xb8,
	0x51, 0x92, 0x33, 0x1e, 0x7a, 0x1a, 0x9b, 0xec, 0xbd, 0xf5, 0x22, 0x7d, 0x5b, 0x27, 0x23, 0xe5,
	0x33, 0xb0, 0x18, 0x09, 0xb7, 0x9f, 0xe9, 0xf1, 0xc1, 0xc8, 0x44, 0x6f, 0x38, 0xad, 0x48, 0xdc,
	0xcb, 0x6e, 0x68, 0x60, 0xe7, 0x2f, 0x27, 0xe0, 0x8c, 0xe6, 0x3c, 0x4e, 0x7b, 0x3d, 0xa9, 0xc0,
	0x14, 0x35, 0x10, 0x72, 0xdd, 0x92, 0xd6, 0x91, 0xc8, 0xbd, 0x9c, 0x58, 0x6f, 0x38, 0x8d, 0x58,
	0x64, 0xbb, 0xf2, 0x5b, 0x26, 0x4a, 0x25, 0x9f, 0x12, 0x27, 0x28, 0x51, 0x6c, 0xc5, 0x94, 0x78,
	0x11, 0x9a, 0x92, 0x92, 0x33, 0x97, 0xa7, 0x83, 0x9c, 0x29, 0xa5, 0x0b, 0x62, 0x91, 0x39, 0xcc,
	0x91, 0x10, 0x69, 0x0c, 0x2b, 0x8c, 0x34, 0xcb, 0x15, 0x77, 0x0d, 0x4c, 0x7f, 0x90, 0xe5, 0xd2,
	0x44, 0x47, 0xbb, 0x2c, 0x11, 0x83, 0x30, 0x8c, 0xfc, 0x88, 0x25, 0xb9, 0xdb, 0x3d, 0x54, 0x0a,
	0xc6, 0x72, 0x2c, 0xb2, 0x6d, 0x23, 0xe5, 0xe6, 0xa1, 0x9c, 0x17, 0x12, 0xdf, 0xd0, 0x4a, 0xf6,
	0xbd, 0xa4, 0xc7, 0x94, 0x62, 0x61, 0xc7, 0x22, 0x2b, 0x55, 0x12, 0x4c, 0xb1, 0xdf, 0x85, 0x4b,
	0x92, 0x22, 0xf3, 0xbd, 0xd8, 0x77, 0x43, 0x2f, 0x8a, 0x07, 0xbc, 0x6c, 0x03, 0x96, 0x78, 0xdd,
	0x98, 0x91, 0xfd, 0xd4, 0x70, 0xce, 0xc7, 0x22, 0x7b, 0x28, 0xf1, 0xee, 0x12, 0xda, 0x0e, 0x61,
	0xdd, 0x21, 0x24, 0xc9, 0xab, 0x17, 0xc7, 0x43, 0xb4, 0xa4, 0x10, 0x2c, 0x7b, 0x71, 0x5c, 0xc5,
	0xef, 0x3c, 0x2c, 0xd5, 0x5e, 0xa3, 0x7b, 0x43, 0x12, 0xfb, 0x22, 0xe7, 0xf6, 0xcb, 0xb0, 0x32,
	0xa2, 0xdf, 0xd5, 0xd8, 0xb1, 0x87, 0xbb, 0xbc, 0xf3, 0x2f, 0x1a, 0xc7, 0x69, 0x96, 0xde, 0x20,
	0x4f, 0xdd, 0xae, 0xe7, 0x3f, 0x1a, 0x64, 0xf6, 0x2f, 0xa0, 0xec, 0x11, 0x51, 0x2f, 0xf1, 0xe2,
	0x98, 0x05, 0x43, 0xcb, 0x8c, 0xa5, 0xe7, 0xd0, 0xae, 0x46, 0xa9, 0x2d, 0x32, 0x3f, 0xb0, 0x60,
	0xa1, 0x4a, 0x8e, 0xfd, 0x3e, 0xbf, 0x95, 0x9c, 0x8e, 0x88, 0xd0, 0xb3, 0xc9, 0x69, 0x09, 0x93,
	0x43, 0xdc, 0x8f, 0x62, 0xf9, 0x20, 0x73, 0x33, 0x1e, 0xa5, 0x9c, 0x4c, 0x1a, 0xd4, 0x6f, 0x11,
	0xfa, 0x50, 0x01, 0xa5, 0x92, 0xbe, 0x9f, 0xc6, 0x41, 0x89, 0x35, 0x45, 0x82, 0x50, 0x02, 0x0b,
	0x24, 0x52, 0xf0, 0x34, 0xca, 0xb0, 0x72, 0xbb, 0x1a, 0x09, 0x8d, 0x6b, 0xb4, 0xcc, 0x25, 0x68,
	0x66, 0x69, 0x1c, 0xf9, 0x8f, 0x49, 0xc9, 0xc6, 0x61, 0xd7, 0x72, 0xe6, 0x09, 0x86, 0x1a, 0xb6,
	0xfd, 0x22, 0xd8, 0x26, 0x8a, 0xcb, 0x92, 0x9c, 0x4b, 0x75, 0x56, 0x2a, 0x83, 0x4b, 0x06, 0xe2,
	0x1d, 0x09, 0x97, 0x1a, 0x96, 0x64, 0x03, 0xc1, 0x84, 0x3f, 0xa4, 0x6a, 0xca, 0xf5, 0xb5, 0x4c,
	0x3f, 0x4e, 0x5f, 0x9e, 0xfb, 0x79, 0xd5, 0x97, 0xe1, 0x04, 0x7d, 0xf9, 0x12, 0x34, 0x39, 0xf3,
	0x53, 0x69, 0x43, 0xa3, 0xf4, 0x98, 0x47, 0xdc, 0x79, 0x82, 0x91, 0xf8, 0xf8, 0x4d, 0x0b, 0x66,
	0xd5, 0x8c, 0x43, 0x8d, 0x73, 0x7e, 0xeb, 0x83, 0x71, 0xd5, 0x71, 0x58, 0x30, 0x3a, 0xba, 0x68,
	0xfb, 0x47, 0xd6, 0xe8, 0xb9, 0xda, 0x1a, 0xaf, 0x8e, 0x3e, 0x52, 0x6e, 0x8c, 0x12, 0x0d, 0x55,
	0xd3, 0x63, 0xa1, 0x6a, 0x7a, 0x74, 0x7e, 0x0a, 0x70, 0xe1, 0x04, 0xb9, 0xd1, 0x67, 0x62, 0xff,
	0xe3, 0xd8, 0xa3, 0x23, 0x0c, 0xce, 0x89, 0x51, 0x06, 0xe7, 0x09, 0x96, 0xe4, 0xe4, 0x49, 0x96,
	0xe4, 0xf0, 0x7c, 0x9f, 0xfa, 0x50, 0xf3, 0x7d, 0xfa, 0x23, 0xcd, 0xf7, 0x99, 0x8f, 0x30, 0xdf,
	0x67, 0x3f, 0xec, 0x7c, 0x6f, 0x7c, 0x9c, 0xf9, 0x3e, 0x77, 0xf2, 0x7c, 0xbf, 0x0c, 0x2d, 0xbd,
	0xe5, 0x44, 0xdc, 0x90, 0x0d, 0xd9, 0x54, 0x40, 0x62, 0xe7, 0xf3, 0xa8, 0xb2, 0x57, 0xf0, 0xcc,
	0x22, 0xe6, 0xb5, 0xde, 0x79, 0xd7, 0x20, 0x3a, 0x4e, 0xa6, 0x34, 0x7f, 0x5e, 0x65, 0x4a, 0xeb,
	0x64, 0x99, 0x12, 0x7a, 0x22, 0x77, 0x39, 0x23, 0x99, 0x42, 0x26, 0xe2, 0xbc, 0x84, 0x39, 0x04,
	0x92, 0x0b, 0x79, 0xc8, 0xb9, 0x9b, 0xa4, 0x41, 0x31, 0xc3, 0xa4, 0x55, 0x4a, 0x76, 0xdf, 0x72,
	0xc8, 0xf9, 0xfd, 0x34, 0x60, 0x0f, 0x8b, 0x04, 0xa9, 0x9f, 0x49, 0xfc, 0x72, 0x00, 0x1b, 0x44,
	0x4b, 0xa4, 0x52, 0x86, 0x9c, 0x17, 0x23, 0xd8, 0xa0, 0xac, 0x0b, 0xb8, 0xe5, 0x61, 0x01, 0xf7,
	0x1a, 0xac, 0xab, 0xc5, 0xbb, 0x9c, 0x1e, 0x71, 0xcc, 0xfc, 0x5c, 0x99, 0x75, 0xab, 0x32, 0xd5,
	0x98, 0x1d, 0x98, 0x86, 0xba, 0x88, 0xa4, 0xc2, 0x6c, 0x5d, 0x2f, 0x49, 0xd2, 0x41, 0xe2, 0x33,
	0x65, 0xd1, 0x2d, 0xcb, 0x24, 0xcc, 0xfd, 0x86, 0x4a, 0xb0, 0x3f, 0x07, 0x67, 0x44, 0x1a, 0xe6,
	0x6e, 0xc6, 0x19, 0xeb, 0x67, 0x75, 0x8b, 0x97, 0x0c, 0xb9, 0xb6, 0xc4, 0x78, 0x58, 0x20, 0x18,
	0x6d, 0x6a, 0x0a, 0xe1, 0xb5, 0x4f, 0x4f, 0x08, 0x9f, 0x83, 0xb9, 0x52, 0x2e, 0x91, 0x01, 0x58,
	0x02, 0xa4, 0xdd, 0x17, 0xa7, 0x5e, 0xe0, 0x8a, 0x7d, 0x8f, 0x93, 0xdd, 0xd7, 0x72, 0xe6, 0x24,
	0x64, 0x57, 0x02, 0xec, 0xb7, 0xe1, 0x4c, 0x24, 0x0c, 0xed, 0xba, 0x7b, 0x68, 0xb6, 0x40, 0x5b,
	0x4f, 0xbd, 0x42, 0xa2, 0xde, 0x3c, 0x34, 0x1a, 0xa0, 0x03, 0x2d, 0x29, 0x24, 0x4b, 0xdb, 0x6a,
	0x13, 0xe7, 0xf7, 0xbc, 0x04, 0x6a, 0xd3, 0xaa, 0x22, 0x81, 0xcf, 0xd4, 0x24, 0xf0, 0xef, 0x5a,
	0x60, 0xe7, 0xcc, 0x3d, 0xe2, 0xa9, 0x2b, 0x06, 0xdd, 0xb4, 0xfb, 0x81, 0x1b, 0x65, 0x07, 0xaf,
	0xd9, 0x6d, 0x98, 0xd5, 0x96, 0x1d, 0x69, 0x7d, 0xfa, 0x13, 0xad, 0x58, 0xce, 0xc2, 0xe8, 0xc8,
	0x8d, 0x99, 0xde, 0xeb, 0x9c, 0x23, 0xc8, 0x0e, 0x4b, 0x64, 0x53, 0x14, 0x2d, 0xa4, 0x6c, 0x84,
	0x12, 0x20, 0x05, 0x27, 0x6e, 0x34, 0xe0, 0x5e, 0x92, 0xb9, 0xc3, 0x57, 0x40, 0xa5, 0x5c, 0x1e,
	0xcd, 0xd4, 0xf5, 0x4f, 0x99, 0xa9, 0x1f, 0x5b, 0xb0, 0x52, 0x65, 0x6a, 0x90, 0x24, 0x83, 0xbe,
	0xb4, 0x34, 0x72, 0x65, 0x65, 0x70, 0x7d, 0xe2, 0x33, 0xe7, 0x40, 0x4e, 0x66, 0x06, 0xdf, 0xc6,
	0x99, 0x5f, 0x76, 0x6f, 0x79, 0xd2, 0x53, 0xc0, 0xb6, 0x83, 0x4f, 0x86, 0xc3, 0x97, 0x61, 0xa9,
	0xca, 0xa0, 0x87, 0x16, 0x94, 0x27, 0xdc, 0x64, 0xd0, 0xef, 0x32, 0xae, 0x4f, 0xfc, 0x3c, 0x71,
	0x1f, 0xbf, 0x3b, 0x7b, 0xf5, 0x66, 0x16, 0x3c, 0xee, 0xd9, 0x1b, 0x30, 0x2b, 0xff, 0x97, 0xa7,
	0x57, 0x33, 0xf2, 0x93, 0x8e, 0x5d, 0x6b, 0x6c, 0x4c, 0x8c, 0x62, 0xe3, 0x3b, 0x93, 0xb0, 0x56,
	0xcd, 0x56, 0x1d, 0x76, 0xda, 0x09, 0x4c, 0x86, 0xcc, 0xc7, 0x5c, 0xe7, 0xb7, 0x7e, 0x65, 0x8c,
	0xe7, 0x7a, 0xb9, 0x23, 0x0b, 0x92, 0xb3, 0x23, 0xea, 0x25, 0x29, 0x67, 0xe6, 0x19, 0x5b, 0xc3,
	0x99, 0x27, 0x20, 0x9d, 0xb1, 0xbd, 0x05, 0x9b, 0x19, 0x4f, 0x7d, 0x26, 0x84, 0x9c, 0xdd, 0x28,
	0x7a, 0xd9, 0x91, 0xcf, 0x50, 0xd2, 0x28, 0x2d, 0x60, 0xa3, 0x44, 0x90, 0x02, 0xf8, 0x8e, 0x4e,
	0x96, 0xc2, 0x2b, 0x63, 0xc9, 0x20, 0xce, 0xa3, 0xbe, 0x97, 0xb3, 0x3a, 0x31, 0x99, 0x94, 0x6d,
	0x03, 0x63, 0x88, 0xda, 0x3c, 0xf2, 0xac, 0x51, 0x93, 0xb6, 0xdf, 0x36, 0x30, 0xaa, 0xd4, 0xc3,
	0x9d, 0x31, 0x33, 0xaa, 0x33, 0xfe, 0x6a, 0x06, 0x5a, 0x95, 0xce, 0xb0, 0x6d, 0x98, 0x32, 0x8e,
	0x10, 0xf0, 0xb7, 0x5c, 0x5d, 0x17, 0xe4, 0xbc, 0x57, 0x38, 0x52, 0xc8, 0x93, 0x61, 0xd5, 0x1d,
	0x43, 0x27, 0xd5, 0x64, 0x8d, 0xd3, 0x92, 0x7f, 0x77, 0x75, 0xc1, 0x9a, 0x97, 0xeb, 0x06, 0x2f,
	0x93, 0xa7, 0xc4, 0xcb, 0x75, 0xe4, 0xe5, 0x7a, 0xc9, 0xcb, 0x1f, 0x58, 0xb0, 0x8a, 0xb3, 0xbc,
	0xcb, 0xa4, 0xf2, 0x59, 0x72, 0x34, 0x85, 0x1c, 0xf9, 0xe3, 0xe5, 0x08, 0x4b, 0x76, 0x56, 0x4a,
	0x06, 0x4a, 0xc6, 0x7e, 0xc3, 0x82, 0xa6, 0x27, 0x0c, 0x86, 0xe8, 0xac, 0xfc, 0xd7, 0xc6, 0xcb,
	0x90, 0x27, 0x9c, 0x79, 0x4f, 0x54, 0xbb, 0x0a, 0x45, 0x45, 0xc9, 0xc7, 0xcc, 0x69, 0x74, 0x95,
	0x2c, 0xd3, 0x69, 0xc9, 0xbf, 0x25, 0x2f, 0xdf, 0xb1, 0xa0, 0x85, 0x7b, 0x45, 0x05, 0x2b, 0x74,
	0x52, 0xc3, 0xc6, 0xcb, 0x8a, 0x12, 0x6d, 0x4e, 0x33, 0x16, 0x59, 0xc1, 0x4c, 0xe7, 0xdf, 0x5a,
	0x30, 0x43, 0x78, 0xf6, 0xd7, 0x2d, 0x68, 0x95, 0xf8, 0x92, 0x2f, 0x0b, 0x4d, 0xb3, 0x5f, 0x1d,
	0x2b, 0x5f, 0x4e, 0xf3, 0x88, 0xa7, 0x65, 0xe3, 0x6c, 0xc1, 0x5a, 0x7f, 0x90, 0x0f, 0xbc, 0xd8,
	0x0d, 0x22, 0x3c, 0x47, 0xc9, 0x1f, 0xbb, 0x61, 0xec, 0xf5, 0x94, 0x40, 0x5c, 0xa1, 0xc4, 0xdb,
	0x3a, 0xed, 0x6e, 0xec, 0xf5, 0x3a, 0xdf, 0xb0, 0x60, 0x73, 0xb4, 0x6d, 0x26, 0xab, 0xb5, 0x0f,
	0x93, 0x47, 0x3c, 0x55, 0xa2, 0xfc, 0xfd, 0xf1, 0xd4, 0xc5, 0x91, 0x45, 0x74, 0xfe, 0xc7, 0xd4,
	0x71, 0xa7, 0xb4, 0x94, 0x1d, 0x1b, 0xd2, 0xac, 0xad, 0x61, 0xcd, 0xfa, 0x24, 0x4d, 0x79, 0xe2,
	0x44, 0x4d, 0xf9, 0xd3, 0xdf, 0xdb, 0x39, 0xce, 0x00, 0x9e, 0xf9, 0x48, 0x06, 0xf0, 0xec, 0x47,
	0x34, 0x80, 0x1b, 0x27, 0x19, 0xc0, 0x27, 0x9e, 0x27, 0x56, 0x4c, 0x35, 0xf8, 0x79, 0x35, 0xd5,
	0xe6, 0x8f, 0x37, 0xd5, 0x3a, 0x7f, 0x61, 0xc1, 0xa2, 0xd4, 0xe9, 0xd8, 0x01, 0xe3, 0xb9, 0x2b,
	0xfc, 0x7d, 0x37, 0xb7, 0x3b, 0xd0, 0x14, 0xfe, 0x3e, 0x0b, 0x06, 0x31, 0x53, 0x1b, 0xe9, 0x93,
	0xe8, 0x22, 0x63, 0xc0, 0xe4, 0x20, 0xd0, 0xdf, 0x6e, 0xa0, 0x77, 0xa5, 0x5b, 0x25, 0xd2, 0x6d,
	0x2f, 0x67, 0xf6, 0x4b, 0x60, 0x17, 0x48, 0x21, 0x67, 0x5f, 0x1d, 0xb0, 0xc4, 0x7f, 0xac, 0x74,
	0xbe, 0x65, 0x9d, 0x72, 0x57, 0x27, 0xd8, 0x67, 0xa0, 0x11, 0x0c, 0xd4, 0xd9, 0x2c, 0x8d, 0xa9,
	0xe2, 0x5b, 0x76, 0x43, 0xdf, 0x3b, 0x72, 0x73, 0x1e, 0x31, 0xa1, 0x36, 0x17, 0x1a, 0x7d, 0xef,
	0x68, 0x4f, 0x7e, 0x77, 0xfe, 0xdb, 0x24, 0x9c, 0x3b, 0x66, 0x6f, 0x25, 0x13, 0x6e, 0x96, 0xd9,
	0x9b, 0xd0, 0x10, 0x89, 0xef, 0xf6, 0xd3, 0x40, 0x2b, 0x03, 0xb3, 0x22, 0xf1, 0xef, 0xa5, 0x01,
	0xb3, 0xd7, 0x60, 0x26, 0xf7, 0xfb, 0xa5, 0xae, 0x3a, 0x9d, 0xfb, 0xfd, 0xed, 0xc0, 0x7e, 0x16,
	0x16, 0xcb, 0x79, 0x63, 0x1e, 0x03, 0x2c, 0x94, 0x60, 0x1c, 0x57, 0x55, 0x44, 0x2c, 0x61, 0xaa,
	0x8e, 0x88, 0x05, 0xbd, 0x0c, 0xab, 0x87, 0x5e, 0x94, 0xbb, 0xd2, 0x62, 0x64, 0x22, 0x97, 0xaa,
	0x5a, 0x1e, 0xf5, 0x99, 0xaa, 0xcc, 0xb2, 0x4c, 0xdb, 0x4b, 0x1d, 0x4a, 0xd9, 0x8b, 0xfa, 0x4c,
	0xaa, 0x74, 0x38, 0xcf, 0xd2, 0x30, 0x24, 0x4c, 0xb5, 0xd3, 0x29, 0x81, 0x0f, 0xc2, 0x10, 0x71,
	0xbe, 0x65, 0xc1, 0x62, 0xd9, 0x77, 0xd8, 0x9e, 0x6a, 0x31, 0x70, 0xc7, 0x20, 0xa8, 0xcc, 0x51,
	0xe2, 0x2c, 0xd0, 0xd7, 0xae, 0x2a, 0xd6, 0x7e, 0x15, 0xf0, 0x30, 0x19, 0xc5, 0x8d, 0xfc, 0x13,
	0x46, 0xb1, 0x3a, 0x3f, 0x21, 0x37, 0xa7, 0x15, 0x99, 0x2a, 0xa5, 0xcd, 0x43, 0x4a, 0xc3, 0xd6,
	0xfb, 0x0c, 0x2c, 0x53, 0x63, 0x90, 0x62, 0x28, 0xf2, 0xc7, 0xb1, 0xf6, 0x72, 0x5a, 0x32, 0x12,
	0x76, 0x25, 0xbc, 0xf3, 0x55, 0x78, 0xe6, 0x98, 0xcd, 0x6a, 0x2e, 0x8d, 0xea, 0x8c, 0x25, 0x01,
	0x6d, 0xfd, 0x8c, 0x54, 0xfc, 0x56, 0x61, 0x3a, 0x4a, 0x02, 0x76, 0xa4, 0xfb, 0x19, 0x3f, 0xa4,
	0x39, 0x95, 0xb0, 0xa3, 0x5c, 0xb9, 0x92, 0x90, 0xbc, 0x9b, 0x93, 0x10, 0xf2, 0x23, 0xf9, 0x0f,
	0x16, 0x5c, 0x79, 0x62, 0x99, 0x71, 0x24, 0x72, 0xfb, 0x87, 0x16, 0xb4, 0x2a, 0x4c, 0xa8, 0xc5,
	0xef, 0xe0, 0x94, 0xf6, 0xeb, 0x6b, 0x4d, 0xe0, 0x34, 0xd5, 0x27, 0xee, 0x79, 0x75, 0x7e, 0x6a,
	0x1f, 0x37, 0x43, 0x64, 0xd9, 0x79, 0x6d, 0xef, 0xd2, 0x3a, 0x49, 0xcc, 0x4d, 0xfc, 0xbc, 0x8a,
	0xb9, 0xc9, 0x13, 0x76, 0xa4, 0x1e, 0xc1, 0xab, 0x38, 0x38, 0x05, 0x8b, 0xd5, 0x4c, 0x15, 0xac,
	0xd7, 0x67, 0x49, 0x8e, 0xd6, 0x2c, 0x6e, 0x76, 0x04, 0x1f, 0x78, 0xbe, 0x14, 0x43, 0xe6, 0x7a,
	0x49, 0x33, 0xf9, 0xaa, 0x24, 0xdd, 0xd5, 0x94, 0xbb, 0x44, 0xe8, 0x10, 0xdd, 0x0d, 0x4d, 0x66,
	0xac, 0xa3, 0xdf, 0xb0, 0xe0, 0x86, 0xf6, 0x73, 0xf8, 0x68, 0x05, 0x0e, 0xaf, 0x93, 0x6f, 0x91,
	0x0b, 0xc4, 0x87, 0x2f, 0xdd, 0xa8, 0xf4, 0x89, 0xae, 0x23, 0x33, 0x27, 0xbb, 0x8e, 0x7c, 0x09,
	0x3a, 0x35, 0xfe, 0x47, 0x39, 0x91, 0xcc, 0x62, 0xfb, 0x5c, 0xa8, 0xb4, 0xcf, 0xcf, 0xe6, 0x4d,
	0xd2, 0x18, 0x87, 0x37, 0xc9, 0xdc, 0x87, 0xf6, 0x26, 0xd9, 0x82, 0xb5, 0x5a, 0xb5, 0xfb, 0x2c,
	0xe7, 0x91, 0xaf, 0xfc, 0x2a, 0x57, 0x2a, 0x35, 0xbd, 0x87, 0x49, 0xf6, 0x0e, 0x5c, 0x1e, 0xee,
	0x6d, 0x22, 0x1b, 0x5e, 0x85, 0x2f, 0xd4, 0xfa, 0x93, 0xf2, 0x30, 0x38, 0x78, 0x08, 0x57, 0x9e,
	0x30, 0x70, 0xfa, 0x1e, 0xef, 0x45, 0x89, 0xf2, 0xfd, 0xb9, 0x74, 0xc2, 0xd8, 0xbc, 0x87, 0x88,
	0x76, 0x08, 0xd7, 0x9e, 0x3c, 0x1a, 0x29, 0x53, 0x97, 0xb3, 0xd8, 0xcb, 0xa3, 0x03, 0xa6, 0xb6,
	0x77, 0x3f, 0x73, 0xe2, 0xe8, 0xa3, 0xfc, 0x1d, 0x45, 0x62, 0x7f, 0x00, 0xaf, 0x7e, 0xe8, 0x72,
	0x86, 0xfc, 0x87, 0x5e, 0xfa, 0x10, 0x25, 0x19, 0xad, 0xf4, 0xab, 0xf0, 0xe2, 0x13, 0x0a, 0xd2,
	0xdf, 0xe4, 0x48, 0xb0, 0x88, 0x8d, 0xf5, 0xec, 0x09, 0x8d, 0xa5, 0xbe, 0xc8, 0x8d, 0xef, 0x10,
	0xde, 0x7a, 0x72, 0x55, 0x2a, 0x25, 0x98, 0x35, 0xa2, 0xfd, 0xe8, 0x57, 0x4f, 0xac, 0x91, 0x59,
	0xdc, 0x90, 0xeb, 0x84, 0x51, 0xf0, 0xb0, 0x6f, 0xd2, 0xba, 0x99, 0xef, 0x31, 0x1b, 0xc4, 0xf6,
	0xa7, 0xb7, 0x41, 0xfc, 0x47, 0x16, 0x34, 0xcd, 0x85, 0x11, 0xf7, 0xc3, 0xe7, 0xb7, 0x06, 0xa7,
	0xbe, 0x0c, 0xca, 0xc2, 0x9d, 0x79, 0xf5, 0xb5, 0x23, 0x97, 0x68, 0xda, 0x7e, 0x36, 0xd3, 0x47,
	0x7b, 0x52, 0x95, 0x24, 0x4f, 0xf2, 0xfa, 0x5a, 0xfb, 0x98, 0x5e, 0x5f, 0xeb, 0x3f, 0xa3, 0xd7,
	0xd7, 0xc6, 0xcf, 0xec, 0xf5, 0xd5, 0xfe, 0xd8, 0x5e, 0x5f, 0x9b, 0x1f, 0xd2, 0xeb, 0xeb, 0xcc,
	0x93, 0xbd, 0xbe, 0xce, 0x7e, 0x0c, 0xaf, 0xaf, 0x73, 0x3f, 0xa3, 0xd7, 0xd7, 0xf9, 0x8f, 0xe9,
	0xf5, 0xf5, 0xd4, 0x47, 0xf0, 0xfa, 0xba, 0x30, 0xec, 0xf5, 0xd5, 0xf9, 0xcf, 0x73, 0x70, 0x76,
	0xf4, 0x98, 0x1d, 0x24, 0x72, 0x8d, 0x7c, 0x13, 0x36, 0xd5, 0x00, 0xaf, 0xa6, 0x1a, 0x7a, 0xec,
	0x3a, 0x21, 0xdc, 0xd0, 0xe9, 0xbb, 0x8c, 0x7c, 0xf4, 0xff, 0x89, 0x05, 0x9b, 0xc7, 0x3a, 0x39,
	0x2b, 0x7d, 0xed, 0xab, 0xa7, 0x33, 0xff, 0x8c, 0x82, 0x9d, 0x75, 0xcf, 0x60, 0x54, 0x8a, 0xac,
	0x07, 0xb4, 0x9d, 0xfb, 0x8f, 0x2d, 0x68, 0x0f, 0x9f, 0x80, 0x93, 0xe3, 0x8c, 0xda, 0xff, 0x3c,
	0x25, 0x6e, 0x0d, 0x8f, 0x9d, 0x2a, 0xb7, 0x37, 0x0a, 0x86, 0xec, 0x9f, 0x58, 0xb0, 0x3e, 0x4c,
	0xd5, 0x67, 0x62, 0x5f, 0xed, 0x8c, 0xa6, 0xa7, 0xc8, 0xab, 0x2c, 0xd6, 0x59, 0xad, 0x73, 0x8a,
	0xbe, 0x03, 0x3f, 0xb0, 0x60, 0x79, 0x68, 0xef, 0x4a, 0xed, 0x95, 0x46, 0xa7, 0xc3, 0xe2, 0x11,
	0x4f, 0x9d, 0x45, 0x93, 0xb9, 0xaf, 0xf0, 0xd4, 0xfe, 0xb1, 0x05, 0xab, 0xc3, 0x7b, 0x59, 0x39,
	0x53, 0xdb, 0xa7, 0xa7, 0xe4, 0x5a, 0xad, 0xf6, 0xcf, 0x1c, 0xbb, 0x32, 0x26, 0x91, 0x11, 0xfb,
	0x4f, 0x86, 0x38, 0xa4, 0x5d, 0x03, 0x65, 0x48, 0xc7, 0xa7, 0xd4, 0xbf, 0x58, 0xa6, 0xb3, 0x5c,
	0xe9, 0xdc, 0x4c, 0x3c, 0xcc, 0x46, 0xf0, 0x47, 0x36, 0x1b, 0xea, 0xca, 0xa7, 0xc6, 0x1f, 0x95,
	0x59, 0xe5, 0xef, 0xe1, 0x56, 0xb6, 0xc7, 0x3a, 0xff, 0xd2, 0xb8, 0x1e, 0x59, 0xa1, 0x39, 0x56,
	0xa6, 0x19, 0xee, 0x99, 0x23, 0x64, 0x9a, 0x76, 0xd5, 0x3e, 0x96, 0xd4, 0xf5, 0xb9, 0xff, 0xea,
	0x96, 0xb2, 0xe3, 0xcf, 0x8e, 0xce, 0xe0, 0x96, 0x44, 0x91, 0x46, 0xf9, 0xca, 0x08, 0x61, 0xab,
	0xa4, 0xcc, 0xa3, 0xd3, 0x69, 0x39, 0x2c, 0xb2, 0xda, 0x70, 0xef, 0x49, 0x50, 0x67, 0x00, 0xed,
	0xca, 0xb5, 0x52, 0xf2, 0x8f, 0x64, 0x9c, 0xa7, 0xdc, 0xbe, 0x0c, 0x2d, 0xfc, 0x21, 0xa7, 0xbc,
	0xf0, 0x7a, 0xba, 0xb9, 0x9a, 0x08, 0xbc, 0x47, 0x30, 0x7b, 0x13, 0x1a, 0xb1, 0xc8, 0x68, 0xd3,
	0x89, 0xce, 0x27, 0x67, 0x63, 0x91, 0xe1, 0x6e, 0x93, 0x4c, 0x4a, 0x7b, 0xb4, 0x6f, 0x44, 0xbb,
	0x1a, 0x52, 0x43, 0x93, 0x46, 0x54, 0xe7, 0x7b, 0x13, 0xb5, 0x9b, 0xb3, 0x22, 0xea, 0xa9, 0x52,
	0xcf, 0x03, 0x50, 0xa9, 0x89, 0xde, 0x29, 0x6b, 0x39, 0x73, 0x08, 0xb9, 0x2f, 0x33, 0x5d, 0x85,
	0x69, 0xfc, 0xd0, 0x5b, 0x28, 0x44, 0xb4, 0x09, 0x0d, 0x31, 0xe8, 0xba, 0xbe, 0x24, 0x51, 0x45,
	0x89, 0x41, 0xf7, 0x96, 0xe6, 0x42, 0x33, 0x38, 0x75, 0x3c, 0x83, 0xd3, 0x15, 0x06, 0xa5, 0xaa,
	0xa5, 0x9c, 0x0e, 0xf1, 0x92, 0x0f, 0x9d, 0x67, 0x92, 0xbd, 0xba, 0x58, 0x26, 0xd0, 0x99, 0xe6,
	0x50, 0x3b, 0xcd, 0x8e, 0x68, 0xa7, 0x0b, 0x30, 0xaf, 0x7d, 0x99, 0x63, 0x91, 0x29, 0x1b, 0x13,
	0x14, 0x68, 0x47, 0x64, 0x9d, 0x7f, 0xd5, 0xaa, 0x77, 0x45, 0xe5, 0x96, 0xd0, 0x1a, 0xfd, 0x72,
	0x71, 0xcb, 0xc8, 0x8d, 0x84, 0x8b, 0x16, 0xa4, 0xda, 0x7c, 0xb7, 0x29, 0x71, 0x5b, 0xa6, 0x6d,
	0x8b, 0xf7, 0x65, 0x8a, 0x7d, 0x09, 0x9a, 0x26, 0x89, 0x3e, 0x06, 0x37, 0x30, 0xed, 0xe7, 0x60,
	0xc9, 0x28, 0x84, 0xa6, 0x84, 0xde, 0x61, 0x2c, 0xd6, 0x4a, 0x9c, 0x0a, 0x35, 0x4c, 0xe3, 0x50,
	0xdc, 0xc0, 0x44, 0x45, 0x00, 0xaf, 0x16, 0x67, 0x71, 0xe4, 0x47, 0x6a, 0x25, 0xc6, 0x5c, 0xa7,
	0xf5, 0xd5, 0x62, 0x4a, 0x91, 0x2b, 0xb1, 0xce, 0xb7, 0x8a, 0x5d, 0xb4, 0xf2, 0x82, 0x89, 0xbb,
	0x1d, 0xd8, 0x9f, 0x81, 0xe5, 0xfd, 0x34, 0x0e, 0x82, 0xf4, 0x30, 0x71, 0x8b, 0x1d, 0x5a, 0xda,
	0x65, 0x5f, 0xd2, 0x09, 0xb7, 0xf5, 0x4e, 0xed, 0x05, 0x98, 0xcf, 0x0c, 0xbd, 0x89, 0x36, 0xff,
	0xa4, 0x62, 0xa8, 0xf5, 0xa5, 0x97, 0x60, 0xc5, 0xac, 0x8f, 0xc7, 0x99, 0x47, 0x7b, 0xeb, 0xc8,
	0x66, 0x59, 0xa5, 0x1b, 0x9c, 0x79, 0xdb, 0x81, 0xfd, 0x3a, 0x6e, 0xdc, 0x0b, 0x69, 0x26, 0xe7,
	0x6e, 0x85, 0xe1, 0xd2, 0xaf, 0x71, 0x17, 0x53, 0xef, 0x18, 0x5c, 0x4b, 0x36, 0x22, 0xe1, 0xee,
	0x33, 0xe2, 0x4e, 0x59, 0xdf, 0x10, 0x89, 0x77, 0x15, 0x44, 0x21, 0xc4, 0xa9, 0xff, 0x08, 0x11,
	0x9a, 0x1a, 0x61, 0x47, 0x41, 0x14, 0xc2, 0x01, 0xe3, 0x5d, 0x2f, 0x8f, 0xfa, 0xca, 0x22, 0x86,
	0x48, 0xbc, 0xaf, 0x20, 0x0a, 0x21, 0x88, 0x04, 0x39, 0x21, 0x2f, 0x68, 0x84, 0xdb, 0x0a, 0x22,
	0x07, 0xf2, 0xbe, 0x27, 0xaa, 0xe2, 0x40, 0xb9, 0x38, 0x2d, 0xee, 0x7b, 0xc2, 0x94, 0x59, 0x78,
	0xa8, 0x57, 0x45, 0x5c, 0x1a, 0xcf, 0xa1, 0xde, 0x48, 0x21, 0xe5, 0x34, 0x4d, 0xf1, 0x84, 0xae,
	0x4d, 0x15, 0x19, 0x16, 0xa6, 0x83, 0x44, 0x1b, 0xa0, 0x15, 0x49, 0x76, 0x57, 0x26, 0xd8, 0x3f,
	0xb2, 0xd4, 0xe6, 0xaf, 0x94, 0x60, 0x83, 0x98, 0xf6, 0x61, 0x48, 0x54, 0xd8, 0xb8, 0x0b, 0xba,
	0x3f, 0x36, 0xef, 0xcc, 0x9a, 0xe0, 0x74, 0x56, 0x25, 0x1f, 0xb7, 0x4a, 0x36, 0xee, 0xa0, 0x8c,
	0xfa, 0x1d, 0x0b, 0x5a, 0x9c, 0xf5, 0x19, 0xef, 0x31, 0xc5, 0xd7, 0xca, 0x29, 0xf3, 0xd5, 0x54,
	0xc5, 0x13, 0x3f, 0xdf, 0xb7, 0x60, 0xc9, 0x90, 0x71, 0xc4, 0xd2, 0x2a, 0xb2, 0x14, 0x8e, 0x95,
	0xa5, 0x42, 0xd6, 0x9b, 0xa2, 0x94, 0x78, 0xba, 0x06, 0x6b, 0x72, 0xb4, 0x1e, 0xf1, 0xb4, 0x36,
	0x62, 0xc9, 0xca, 0xb5, 0xf7, 0x3d, 0xf1, 0x15, 0x9e, 0x56, 0x06, 0xed, 0xeb, 0xb0, 0x31, 0x84,
	0xae, 0xc6, 0x0a, 0x99, 0xb8, 0xab, 0x47, 0x55, 0x0a, 0x1a, 0x2e, 0xdf, 0xb7, 0x60, 0x79, 0xb8,
	0x98, 0x8d, 0xd3, 0x1c, 0xef, 0x8b, 0x35, 0xc6, 0xa4, 0xec, 0x94, 0x62, 0xa6, 0xba, 0xc7, 0xa3,
	0xcc, 0xe4, 0xa5, 0x48, 0x54, 0x77, 0x6f, 0xec, 0x9b, 0xf0, 0x54, 0xe9, 0x17, 0xdc, 0x7d, 0x6c,
	0xae, 0x17, 0x4a, 0xe4, 0x93, 0x99, 0x7c, 0xa6, 0xc0, 0xba, 0xf9, 0xb8, 0x34, 0x81, 0x68, 0x05,
	0xb8, 0x0d, 0x17, 0xd4, 0x41, 0x50, 0xe0, 0x86, 0x3c, 0xed, 0x8f, 0xc8, 0xe4, 0x0c, 0xa9, 0x38,
	0x1a, 0xed, 0x2e, 0x4f, 0xfb, 0xb5, 0x5c, 0x3a, 0xbf, 0x0c, 0x0b, 0x58, 0x43, 0xf2, 0x63, 0x4a,
	0xc2, 0x14, 0x97, 0xcf, 0x7d, 0x4f, 0xe6, 0xca, 0x23, 0xf1, 0x88, 0xac, 0x52, 0xb5, 0x96, 0x2f,
	0x52, 0x82, 0x13, 0x89, 0x47, 0x68, 0x97, 0xe2, 0xc5, 0x12, 0x49, 0x58, 0x5c, 0x30, 0x98, 0x73,
	0x1a, 0x12, 0x20, 0x17, 0x88, 0xce, 0xb7, 0x2d, 0xd8, 0xe4, 0xe2, 0x20, 0x73, 0xfb, 0xbd, 0x7e,
	0xee, 0x32, 0x9e, 0xba, 0x86, 0xe3, 0x8c, 0xba, 0xf7, 0xa2, 0xe4, 0xb2, 0x79, 0x1a, 0xdd, 0xd2,
	0xf2, 0x98, 0x9c, 0x2b, 0x2f, 0xc0, 0xbc, 0x24, 0xd5, 0xeb, 0x81, 0xba, 0x7a, 0xc3, 0x78, 0xaa,
	0xd7, 0x83, 0xcb, 0x78, 0x70, 0xa2, 0x3c, 0xda, 0x7a, 0xf9, 0xbe, 0x52, 0x22, 0x9a, 0x85, 0x53,
	0x5b, 0x2f, 0xdf, 0xef, 0xfc, 0xa9, 0x05, 0x67, 0xaa, 0xbc, 0xa0, 0xaf, 0xc8, 0x47, 0x65, 0x46,
	0xae, 0x79, 0xb2, 0x1e, 0xc3, 0x3e, 0x6a, 0x0b, 0x8c, 0xa7, 0xdb, 0x86, 0x9b, 0x5a, 0x47, 0x2a,
	0x16, 0xa9, 0xe1, 0xec, 0x46, 0x8b, 0xb3, 0xac, 0x4b, 0xe1, 0xed, 0xb6, 0x0e, 0x33, 0x22, 0xf7,
	0xf2, 0x81, 0x0e, 0xca, 0xa1, 0xbe, 0x3a, 0x7f, 0x35, 0x01, 0xab, 0x55, 0x66, 0x15, 0x9b, 0x9b,
	0xd0, 0x90, 0x5f, 0x86, 0x4d, 0x3f, 0xcb, 0x78, 0x8a, 0x6b, 0xf7, 0x1f, 0x5a, 0x60, 0xcb, 0xe6,
	0x55, 0xd8, 0x6e, 0xc5, 0x37, 0xe9, 0x13, 0x37, 0xe0, 0x8e, 0xed, 0x56, 0x67, 0x49, 0x31, 0xb1,
	0x3b, 0xe8, 0x3e, 0x20, 0x8f, 0x8a, 0x9f, 0x58, 0xb0, 0x69, 0x78, 0x06, 0xd5, 0x18, 0x9c, 0x1c,
	0xcf, 0x56, 0xe3, 0xf1, 0x7d, 0xed, 0xac, 0x97, 0xcc, 0xdc, 0x31, 0xf8, 0xec, 0xfc, 0x78, 0x02,
	0x2e, 0x94, 0x64, 0xbc, 0x5a, 0x2f, 0xf4, 0x01, 0x11, 0xca, 0x0b, 0xc0, 0x38, 0x70, 0xf1, 0x0e,
	0xbc, 0x28, 0x96, 0xab, 0xb5, 0x1a, 0x2f, 0x6b, 0x91, 0x28, 0xcf, 0x52, 0x6e, 0xe8, 0x44, 0xfb,
	0x65, 0x58, 0xad, 0xd2, 0x45, 0x89, 0x3b, 0x10, 0xfa, 0x2e, 0xd6, 0xb2, 0x49, 0xb4, 0x9d, 0xbc,
	0x27, 0x98, 0x3a, 0xa6, 0x1a, 0x72, 0xc2, 0x30, 0x8f, 0xa9, 0xea, 0x2e, 0x18, 0x2c, 0x50, 0xd7,
	0x86, 0x6a, 0x4e, 0xd1, 0x06, 0x8f, 0x53, 0x7a, 0xdf, 0xb0, 0xea, 0x1d, 0x5d, 0xf2, 0x79, 0x0e,
	0xaf, 0xdf, 0x63, 0x06, 0x91, 0x3e, 0x42, 0x6a, 0x10, 0xfa, 0x76, 0xd0, 0xf9, 0xf7, 0x95, 0x09,
	0x5d, 0x6b, 0x21, 0xfb, 0x1b, 0x16, 0x4c, 0x63, 0x2b, 0x29, 0x57, 0x97, 0x74, 0x7c, 0x7d, 0x3a,
	0xb2, 0x73, 0x1c, 0x2a, 0x1d, 0xb5, 0xf5, 0x61, 0x81, 0xc1, 0x0b, 0x81, 0xd1, 0xf9, 0x45, 0xb8,
	0x58, 0xcd, 0x0a, 0x0f, 0x6f, 0xab, 0x1d, 0x4d, 0x02, 0xa1, 0x17, 0xa7, 0x5d, 0x2f, 0x56, 0x87,
	0xbb, 0x85, 0x40, 0x78, 0x07, 0xa1, 0x74, 0xc0, 0xfb, 0x8f, 0x26, 0x4c, 0xb9, 0x52, 0xcf, 0xcc,
	0xfe, 0x66, 0xad, 0x4d, 0xb2, 0xf1, 0xb6, 0xc9, 0x70, 0x45, 0x74, 0xa3, 0xac, 0xc2, 0xb4, 0x19,
	0xed, 0x80, 0x3e, 0xd4, 0x3d, 0x7f, 0xa2, 0x3a, 0xf0, 0x78, 0x24, 0xc7, 0x80, 0x29, 0x45, 0x71,
	0x3c, 0x63, 0x45, 0xdf, 0x57, 0xa9, 0x24, 0x4e, 0xed, 0x2d, 0x58, 0xab, 0xe1, 0xab, 0x46, 0xa2,
	0xd8, 0x1b, 0x2b, 0x07, 0x15, 0x74, 0x6a, 0xaa, 0x9f, 0x4c, 0xc0, 0x95, 0x2a, 0xbb, 0x43, 0xfe,
	0x82, 0x7f, 0x3d, 0xcb, 0xb6, 0x83, 0xce, 0x4f, 0xad, 0xba, 0x1c, 0x1a, 0x6a, 0x27, 0xfb, 0xb7,
	0x6b, 0xe3, 0x6a, 0x30, 0xde, 0x71, 0x75, 0x4c, 0x47, 0xe9, 0xc1, 0xf5, 0x19, 0x58, 0x2e, 0x57,
	0xc4, 0xea, 0xbc, 0x5b, 0x2a, 0x12, 0xf4, 0x72, 0x5d, 0x77, 0xf1, 0x9e, 0x1c, 0x72, 0xf1, 0xee,
	0x6c, 0xd5, 0xc5, 0x8c, 0xe1, 0x39, 0x69, 0xaf, 0xc1, 0x8c, 0xe0, 0xb1, 0x8b, 0x55, 0x97, 0x63,
	0x6d, 0x5a, 0xf0, 0xf8, 0x1d, 0xd1, 0xf9, 0xe7, 0xd3, 0xe6, 0x9a, 0xc9, 0x2b, 0x6b, 0x26, 0xaf,
	0xad, 0x99, 0xbc, 0xb6, 0x66, 0xf2, 0x53, 0x5e, 0x33, 0xf9, 0xa8, 0x35, 0x93, 0x9b, 0x6b, 0xe6,
	0x0f, 0x2d, 0x58, 0xa5, 0x69, 0xc9, 0x4f, 0x79, 0xb9, 0xac, 0x8b, 0x11, 0x67, 0x19, 0xbf, 0x1c,
	0x93, 0xbb, 0x3f, 0xad, 0xae, 0xe8, 0x35, 0x16, 0xa7, 0x4e, 0x43, 0xfa, 0x0f, 0x8d, 0x48, 0x73,
	0x59, 0xaf, 0x30, 0xfb, 0x47, 0x16, 0xac, 0xe0, 0xf8, 0xa9, 0xb1, 0x39, 0x7d, 0x1a, 0xbd, 0x6c,
	0x0c, 0x5c, 0x67, 0x09, 0x7d, 0x71, 0x4d, 0x8d, 0xe3, 0xdb, 0x16, 0x2c, 0x2a, 0xea, 0xfd, 0x34,
	0x23, 0xed, 0xfb, 0x02, 0xcc, 0xcb, 0xdf, 0xd5, 0xdb, 0x1b, 0xb0, 0x9f, 0x66, 0xc6, 0xfc, 0x41,
	0x04, 0xd3, 0x9f, 0x06, 0xbd, 0xba, 0x32, 0xed, 0xb7, 0x22, 0xa5, 0xb3, 0x44, 0x29, 0xa2, 0x1c,
	0x55, 0xc2, 0x07, 0xb5, 0x9c, 0x95, 0xfd, 0x34, 0xd3, 0x21, 0x91, 0x8a, 0x08, 0x3f, 0x8f, 0xc1,
	0x2e, 0xe5, 0xa0, 0xc8, 0x98, 0x8f, 0x71, 0x9e, 0x2e, 0x41, 0xd3, 0x3b, 0x60, 0xdc, 0xeb, 0x31,
	0x97, 0xeb, 0x8b, 0xe5, 0x53, 0xce, 0xbc, 0x82, 0x39, 0x5e, 0x8e, 0x9e, 0x7c, 0x7d, 0xef, 0x28,
	0xea, 0x0f, 0xfa, 0x6e, 0x77, 0xc0, 0x05, 0x4d, 0x9f, 0x29, 0xa7, 0xa9, 0x80, 0x37, 0x25, 0x0c,
	0x23, 0xf2, 0x30, 0xef, 0x11, 0x65, 0x32, 0x89, 0x08, 0x0d, 0x09, 0x90, 0x39, 0x74, 0xfe, 0x99,
	0x05, 0xeb, 0x39, 0xa3, 0x46, 0xeb, 0xbd, 0xf1, 0xca, 0x9b, 0x6e, 0x9a, 0x27, 0x6e, 0x2e, 0x79,
	0xc0, 0x7b, 0xf7, 0x68, 0x66, 0x9a, 0x31, 0xa6, 0x80, 0x40, 0x38, 0x85, 0x9f, 0x83, 0xa5, 0xa4,
	0xef, 0xbb, 0x29, 0x77, 0xf3, 0x34, 0x66, 0xdc, 0x4b, 0x7c, 0xed, 0x4a, 0xb8, 0x90, 0xf4, 0xfd,
	0x07, 0x7c, 0x4f, 0x43, 0xed, 0x25, 0x98, 0x4c, 0x0e, 0x7c, 0x25, 0x6e, 0xe4, 0x4f, 0xfb, 0x29,
	0x80, 0xfe, 0x20, 0xce, 0xa3, 0x2c, 0x8e, 0x18, 0x57, 0x1e, 0x83, 0x06, 0x44, 0x4a, 0x8e, 0x6e,
	0x94, 0x13, 0xcf, 0x6a, 0x8b, 0xb1, 0x1b, 0xe5, 0xc8, 0xf2, 0x9f, 0x5b, 0x78, 0x71, 0x83, 0x58,
	0x66, 0x09, 0xe3, 0x91, 0xaf, 0x38, 0x3e, 0x0f, 0x80, 0x3f, 0x4c, 0x81, 0x33, 0x87, 0x10, 0xe4,
	0xf7, 0xeb, 0x16, 0x34, 0xd2, 0x3c, 0x41, 0x80, 0x12, 0x34, 0xe1, 0x18, 0x3c, 0xed, 0x46, 0xb4,
	0xa5, 0x53, 0x94, 0x3b, 0xba, 0xc1, 0xc3, 0xff, 0xef, 0x1a, 0x3c, 0xd4, 0x0d, 0x1e, 0x0e, 0x35,
	0x78, 0x58, 0x6f, 0xf0, 0xf0, 0x54, 0x1b, 0x3c, 0x2c, 0x1a, 0x1c, 0x7f, 0x75, 0x5c, 0x8c, 0x7e,
	0x28, 0xe7, 0x34, 0x1d, 0xc5, 0xa3, 0xf0, 0xa7, 0x3b, 0x51, 0x67, 0x61, 0xae, 0x7e, 0x21, 0xaa,
	0xc1, 0xb5, 0x81, 0xf8, 0x2c, 0x2c, 0x1a, 0x6b, 0xa5, 0xb1, 0x15, 0xbc, 0x50, 0x2e, 0x97, 0x68,
	0xc5, 0xff, 0x57, 0x0b, 0xa6, 0x64, 0xf6, 0x23, 0x3d, 0x17, 0xe5, 0x8a, 0x2b, 0x0b, 0xac, 0xae,
	0xcc, 0xf3, 0x12, 0xa6, 0x85, 0xca, 0x8f, 0x2d, 0xd8, 0x28, 0x99, 0x22, 0xb9, 0xaa, 0xd1, 0x27,
	0xc7, 0x16, 0x5b, 0x70, 0x54, 0x83, 0x38, 0x6b, 0xf2, 0xf7, 0x7b, 0x05, 0x1b, 0x5a, 0x69, 0xff,
	0x75, 0x80, 0x82, 0xc2, 0xb5, 0xfb, 0x30, 0xab, 0xbe, 0x94, 0x02, 0xb4, 0xf7, 0x89, 0x87, 0x44,
	0x0b, 0x02, 0xee, 0xcc, 0xe4, 0xa8, 0xb6, 0x74, 0xfe, 0xb2, 0x0c, 0x5f, 0xe9, 0xa7, 0xc9, 0x01,
	0xe3, 0x3d, 0x96, 0x60, 0x8f, 0x50, 0xdc, 0x43, 0xe5, 0x43, 0xa6, 0xa4, 0xe3, 0x0c, 0xf9, 0xc4,
	0xc9, 0xd1, 0x4c, 0x3b, 0x32, 0x03, 0x2d, 0x13, 0x11, 0xf1, 0xc1, 0x20, 0x97, 0x34, 0x9c, 0x89,
	0x03, 0x49, 0x43, 0xc2, 0x70, 0x46, 0x7e, 0x12, 0x0d, 0x26, 0x48, 0x9a, 0x29, 0xa2, 0x91, 0xdf,
	0x92, 0xe6, 0x32, 0xb4, 0x94, 0x46, 0xc0, 0x0e, 0x79, 0xa4, 0x66, 0xc8, 0x94, 0xd3, 0xa4, 0xe5,
	0x99, 0x60, 0xf6, 0x15, 0x58, 0x28, 0xaa, 0x41, 0x58, 0x33, 0x88, 0xd5, 0x22, 0xa8, 0x46, 0xbb,
	0x0c, 0x2d, 0x9f, 0xb3, 0xd2, 0x89, 0x0e, 0x37, 0xe3, 0xa7, 0x9c, 0xa6, 0x06, 0xe2, 0x39, 0xcf,
	0x7f, 0x9f, 0x80, 0x8b, 0xba, 0x1d, 0xeb, 0x17, 0x4f, 0x29, 0xe0, 0x47, 0x98, 0x1a, 0x5b, 0x18,
	0x96, 0xb9, 0x85, 0x61, 0xbf, 0x05, 0x9b, 0x75, 0x1a, 0x59, 0x90, 0xc8, 0xbd, 0x7e, 0xa6, 0xc6,
	0xf0, 0x46, 0xf5, 0xae, 0xea, 0x9e, 0x4e, 0xb6, 0x5f, 0x81, 0xd5, 0xa1, 0xf2, 0xa2, 0xe4, 0x91,
	0xda, 0x41, 0xb1, 0xab, 0x64, 0x3b, 0x51, 0xf2, 0x48, 0x1a, 0x0c, 0x1a, 0x39, 0xe9, 0x21, 0x72,
	0x2d, 0xdc, 0xe9, 0x5a, 0x99, 0x2c, 0x09, 0xf4, 0xb0, 0x7f, 0x1d, 0x36, 0x24, 0x57, 0x6e, 0x9e,
	0xba, 0xfb, 0x1e, 0x0f, 0x8c, 0x12, 0x95, 0xfc, 0x59, 0x95, 0xc9, 0x7b, 0xe9, 0xbb, 0x1e, 0x0f,
	0xca, 0x22, 0xa5, 0x90, 0x0c, 0xb9, 0xcb, 0xcd, 0x26, 0x6e, 0x38, 0x10, 0x72, 0x47, 0x41, 0x30,
	0x0a, 0x69, 0x89, 0xa0, 0xa3, 0x4b, 0xe2, 0x26, 0x19, 0x9d, 0x2f, 0xad, 0x96, 0xc8, 0x14, 0x5b,
	0x12, 0x37, 0xcc, 0xfe, 0xcc, 0x2a, 0x63, 0x83, 0xa0, 0x40, 0x39, 0x0c, 0xfa, 0x6e, 0x18, 0x1d,
	0xb1, 0xc0, 0xed, 0xf1, 0x28, 0x20, 0xbd, 0x0c, 0x23, 0xbd, 0x90, 0x82, 0xc6, 0xf2, 0x22, 0xd2,
	0x8b, 0x04, 0xec, 0xb2, 0x5c, 0xce, 0x7f, 0x89, 0xaa, 0xe6, 0x38, 0xfe, 0xc6, 0x60, 0x8d, 0xfb,
	0x1e, 0xb2, 0x20, 0x32, 0xcf, 0x8f, 0x92, 0x9e, 0x3e, 0x29, 0x52, 0xe0, 0x5d, 0x82, 0x4a, 0xf9,
	0x1c, 0x05, 0x2c, 0xc9, 0xa3, 0xd0, 0x90, 0xcf, 0x25, 0xc4, 0x6e, 0xc3, 0xac, 0xa2, 0x50, 0x87,
	0x42, 0xfa, 0xb3, 0xf3, 0xb8, 0x74, 0xad, 0xae, 0x49, 0x42, 0xe4, 0x5e, 0x44, 0x5f, 0x63, 0x8a,
	0xfb, 0x25, 0x98, 0xcc, 0xb3, 0x44, 0x2d, 0x2c, 0xf2, 0xa7, 0xfd, 0x34, 0x2c, 0x48, 0xa9, 0xdf,
	0xf7, 0x32, 0x6d, 0x7a, 0x16, 0x11, 0xf9, 0xf2, 0x7b, 0x5e, 0xa6, 0x2c, 0xce, 0x0d, 0x98, 0x55,
	0x58, 0x4a, 0x8b, 0x99, 0xa1, 0xe4, 0xce, 0x7f, 0x9c, 0x28, 0xcf, 0xde, 0xa8, 0x6c, 0xfc, 0xa2,
	0xd2, 0xce, 0x03, 0x50, 0x5b, 0x99, 0x8b, 0x03, 0x42, 0x70, 0x71, 0xf8, 0x0d, 0x0b, 0x26, 0x0f,
	0x83, 0xfe, 0xb8, 0x7d, 0x5c, 0x8e, 0xed, 0x4b, 0x47, 0x96, 0x6e, 0x7f, 0xcb, 0x82, 0xc9, 0x34,
	0xd7, 0xa7, 0xca, 0x07, 0x63, 0xe5, 0xe2, 0xd8, 0x8e, 0x71, 0x24, 0x0b, 0x9d, 0xff, 0x3b, 0x55,
	0xde, 0x64, 0xaa, 0x37, 0xa6, 0xb0, 0xff, 0xc0, 0x02, 0x5b, 0xc9, 0xba, 0x9e, 0x9c, 0x3f, 0xc6,
	0xc6, 0xc8, 0x18, 0x8f, 0x42, 0xea, 0x7c, 0xd0, 0x19, 0xdf, 0x36, 0xb1, 0x80, 0x5b, 0x0b, 0xf6,
	0xef, 0x5b, 0xb0, 0x8c, 0x8c, 0x31, 0x93, 0xaf, 0x89, 0x53, 0xe6, 0x6b, 0x51, 0xb2, 0x70, 0xc7,
	0x60, 0x4b, 0xb6, 0x97, 0x92, 0xf3, 0x26, 0x5f, 0x93, 0xa7, 0xdd, 0x5e, 0xb4, 0xb8, 0xd4, 0xda,
	0x0b, 0x19, 0xab, 0xb4, 0xd7, 0xd4, 0x69, 0xb7, 0x97, 0x64, 0xc1, 0x68, 0xaf, 0xce, 0x03, 0x58,
	0x95, 0x25, 0x05, 0x03, 0x37, 0x8c, 0xd9, 0x91, 0xeb, 0x77, 0x39, 0x2d, 0x32, 0xa6, 0x5e, 0x68,
	0x55, 0xf4, 0x42, 0xfb, 0x1c, 0xcc, 0xd5, 0xf5, 0xd0, 0x12, 0xd0, 0x79, 0x03, 0xce, 0x98, 0x19,
	0xf6, 0xc2, 0xcc, 0x0d, 0x5d, 0xce, 0xc4, 0x93, 0xb2, 0xed, 0xbc, 0x0d, 0x4f, 0x0d, 0x13, 0x26,
	0x69, 0xf2, 0xa1, 0x88, 0xff, 0x27, 0x05, 0x3c, 0x96, 0xd4, 0x07, 0xaf, 0xba, 0xdd, 0x43, 0x29,
	0xb1, 0xe5, 0x47, 0xcc, 0x0e, 0xd4, 0x6c, 0x99, 0x73, 0x1a, 0x69, 0x30, 0xd8, 0x91, 0xdf, 0xf6,
	0x37, 0x2d, 0x68, 0x9a, 0x55, 0x56, 0xc3, 0x36, 0x18, 0x83, 0xbe, 0x35, 0xd4, 0xb2, 0x0e, 0xa4,
	0xc1, 0xe0, 0x6e, 0xcc, 0x8e, 0x6e, 0x75, 0x39, 0x8e, 0xd6, 0xe1, 0xa6, 0x1a, 0xd7, 0x8e, 0xc3,
	0xf1, 0xfd, 0xe2, 0x2c, 0x28, 0xa6, 0xde, 0x09, 0xb3, 0xbb, 0x0e, 0x13, 0xf6, 0x3f, 0xb0, 0x60,
	0x7d, 0x74, 0x57, 0xa8, 0x21, 0x9b, 0x8c, 0x9f, 0x39, 0xb3, 0xef, 0x9d, 0x65, 0x83, 0xc1, 0xfb,
	0x69, 0xe2, 0x30, 0xd1, 0xf9, 0xdf, 0x0d, 0x58, 0x2d, 0x94, 0xa5, 0xad, 0x18, 0x45, 0x2c, 0x8e,
	0x93, 0x97, 0x61, 0x25, 0x4a, 0xfc, 0xb4, 0x2f, 0x15, 0x13, 0x3f, 0x4d, 0x72, 0x9e, 0xc6, 0xb1,
	0x8a, 0x2f, 0x30, 0xe7, 0xd8, 0x3a, 0xe9, 0x56, 0x91, 0x82, 0xe1, 0x65, 0x86, 0x09, 0x8c, 0xd8,
	0x6d, 0x73, 0xce, 0xc6, 0x30, 0x19, 0x85, 0x72, 0xbb, 0x0e, 0x45, 0x92, 0x4b, 0x3e, 0x35, 0x45,
	0x81, 0xb4, 0xe2, 0xaf, 0xe9, 0xe4, 0xdd, 0x41, 0xd7, 0x28, 0xf3, 0x06, 0x9c, 0x3f, 0x86, 0x4e,
	0x95, 0x4b, 0x5a, 0xd4, 0x99, 0x91, 0xd4, 0x54, 0xf4, 0xcb, 0xb0, 0x92, 0x0e, 0xf2, 0x5e, 0x5a,
	0xab, 0x27, 0xe9, 0x09, 0xb6, 0x4e, 0xaa, 0xd6, 0x73, 0x04, 0x81, 0x2a, 0x8f, 0x2e, 0xe8, 0x6f,
	0x0c, 0x93, 0x15, 0xf5, 0x2c, 0x68, 0x6b, 0xf5, 0x24, 0xfd, 0x6a, 0x4d, 0x27, 0x0f, 0xd5, 0xf3,
	0x18, 0x3a, 0x55, 0x2e, 0x79, 0x9b, 0x9c, 0x19, 0x49, 0x4d, 0x45, 0x7f, 0xcd, 0x0c, 0x60, 0x32,
	0x37, 0xb6, 0xf0, 0x0c, 0x85, 0xf0, 0x30, 0xc3, 0xa3, 0xfc, 0x5d, 0x0b, 0x66, 0x68, 0x29, 0x56,
	0x97, 0x45, 0xa3, 0xd3, 0x92, 0xd5, 0xc2, 0x51, 0x05, 0x4b, 0xfb, 0xdf, 0xe7, 0x29, 0x45, 0x24,
	0x4a, 0x98, 0x9f, 0x4b, 0xb3, 0x75, 0x5e, 0x85, 0xfe, 0x96, 0xf0, 0x5b, 0x04, 0x56, 0xb1, 0x3c,
	0x0a, 0x34, 0x16, 0x28, 0x0f, 0x99, 0xf9, 0x48, 0xa3, 0x30, 0x3c, 0x00, 0x1d, 0x64, 0x68, 0x80,
	0x50, 0x38, 0x59, 0xf5, 0x65, 0x7f, 0x11, 0xce, 0x8d, 0x1a, 0x1b, 0x51, 0xb8, 0xef, 0x25, 0x41,
	0x4c, 0x01, 0x81, 0x8c, 0x6e, 0x2a, 0xfb, 0x68, 0x5b, 0x61, 0xd8, 0xef, 0xc0, 0xc5, 0xe3, 0x7a,
	0xba, 0xc8, 0x65, 0x11, 0x73, 0x39, 0x3f, 0xb2, 0xb3, 0x8b, 0x8c, 0xbe, 0x08, 0xe7, 0x46, 0x4d,
	0xc7, 0x22, 0x93, 0xa5, 0xea, 0xcc, 0x18, 0xcd, 0xca, 0x71, 0x93, 0xab, 0xc8, 0x65, 0x99, 0x58,
	0x19, 0x39, 0xbf, 0x8a, 0x8c, 0xa4, 0x6e, 0x9f, 0x45, 0x14, 0x2b, 0xb6, 0xe5, 0xe0, 0xef, 0xce,
	0x4f, 0x26, 0x61, 0x39, 0x67, 0x6e, 0x76, 0x90, 0xd3, 0xc5, 0xc9, 0xb4, 0xfb, 0x81, 0x8b, 0x56,
	0x80, 0xe8, 0x46, 0xda, 0x3a, 0xc0, 0xdf, 0x12, 0x96, 0x75, 0x55, 0xcc, 0xe9, 0x86, 0x83, 0xbf,
	0x31, 0xd4, 0xa5, 0x84, 0xd1, 0x69, 0x07, 0xfe, 0x96, 0xb0, 0x54, 0xc2, 0xe8, 0x14, 0x03, 0x7f,
	0x63, 0x0c, 0x2d, 0x3a, 0xc7, 0x70, 0x8d, 0x57, 0x22, 0xe6, 0x15, 0x4c, 0x7b, 0xe7, 0x47, 0xc2,
	0x3d, 0xcc, 0xf1, 0x02, 0x85, 0x60, 0x49, 0xae, 0xcc, 0xa2, 0x66, 0x24, 0xbe, 0x9c, 0xf3, 0x87,
	0x04, 0x93, 0x96, 0x93, 0x44, 0xd1, 0x97, 0xc8, 0xc8, 0x07, 0x0c, 0x0e, 0x73, 0xae, 0xef, 0x8d,
	0xd1, 0xa0, 0xd9, 0x4f, 0x75, 0x26, 0x0d, 0x3d, 0x68, 0xde, 0xd5, 0x20, 0xa9, 0xd3, 0xef, 0xa7,
	0x45, 0x16, 0x73, 0xb4, 0xe6, 0xef, 0xa7, 0x3a, 0x87, 0x97, 0x60, 0x25, 0x12, 0xae, 0xbe, 0xae,
	0x5b, 0x70, 0x03, 0x85, 0x27, 0x06, 0x5d, 0xdc, 0xd5, 0x1c, 0x99, 0x57, 0x7b, 0xe7, 0x8f, 0xbb,
	0xda, 0xdb, 0x34, 0xaf, 0xf6, 0x1e, 0x7f, 0x51, 0xb5, 0x75, 0xec, 0x45, 0xd5, 0xce, 0x3f, 0xb4,
	0xaa, 0xeb, 0x83, 0x97, 0x29, 0x3d, 0xe2, 0x3b, 0x56, 0xe5, 0x02, 0x30, 0x46, 0x8d, 0x26, 0x85,
	0xda, 0x1b, 0x83, 0x58, 0xa9, 0x8e, 0x13, 0xf3, 0x8e, 0xf1, 0x76, 0x12, 0xa6, 0x9d, 0x6f, 0x4e,
	0x94, 0x5c, 0xca, 0x15, 0x4c, 0x72, 0x8a, 0x5c, 0x1e, 0x90, 0x85, 0x62, 0x8d, 0x47, 0x35, 0x19,
	0xb5, 0x70, 0xa2, 0x3d, 0x22, 0xcb, 0xf5, 0x32, 0x31, 0x2e, 0x95, 0x68, 0x54, 0x87, 0x38, 0xb2,
	0xc0, 0xce, 0xaf, 0x94, 0x36, 0x65, 0x37, 0x0c, 0x5c, 0xc1, 0x44, 0x11, 0xd3, 0xdb, 0x5e, 0x85,
	0xe9, 0x32, 0xca, 0xea, 0x9c, 0x43, 0x1f, 0xe8, 0x35, 0x23, 0x7f, 0xa8, 0x68, 0xa6, 0xb4, 0xad,
	0xa2, 0x5e, 0x3a, 0xc0, 0x04, 0x8a, 0x65, 0x8a, 0x3b, 0x2b, 0xff, 0xc6, 0x2a, 0x6f, 0xd3, 0xca,
	0xec, 0x03, 0x16, 0x33, 0xec, 0xfd, 0xfd, 0x48, 0xe4, 0x29, 0x7f, 0x7c, 0xdc, 0xbb, 0x30, 0x97,
	0xa1, 0x55, 0xa0, 0x1a, 0xf9, 0x37, 0x35, 0x10, 0xbd, 0x5f, 0x9f, 0x85, 0xc5, 0x02, 0x89, 0x33,
	0x4f, 0x28, 0x77, 0xe5, 0x39, 0x67, 0x41, 0x83, 0x1d, 0x84, 0xda, 0x9f, 0x85, 0x76, 0x81, 0x18,
	0x44, 0x5e, 0x2f, 0x49, 0x45, 0x8e, 0x57, 0x0e, 0x95, 0xb3, 0x6d, 0xcb, 0x59, 0xd7, 0xe9, 0xb7,
	0x8b, 0xe4, 0x5b, 0x69, 0xc0, 0x3a, 0xbf, 0x3b, 0x55, 0x7a, 0x6c, 0xef, 0x33, 0x2f, 0xc0, 0x4a,
	0xe8, 0xc7, 0x0f, 0xaa, 0x1b, 0x4b, 0xea, 0xf1, 0x03, 0x73, 0x63, 0xc9, 0xfe, 0x6d, 0x0b, 0x9a,
	0x66, 0x8b, 0x8e, 0xdb, 0x50, 0xab, 0xf7, 0xa0, 0x33, 0xaf, 0xbe, 0x30, 0x40, 0xfa, 0x1f, 0x5a,
	0xb0, 0x54, 0xef, 0x00, 0xa5, 0xf4, 0xc6, 0xe3, 0xe4, 0xa8, 0x5e, 0xa6, 0x53, 0x74, 0xdb, 0xbb,
	0x6a, 0x14, 0x5c, 0x80, 0xf9, 0x58, 0x64, 0x12, 0xd7, 0xf0, 0xd9, 0x05, 0x02, 0xed, 0xe9, 0x8d,
	0x5d, 0xe1, 0x72, 0x16, 0x0c, 0x92, 0xc0, 0x4b, 0x72, 0x75, 0x92, 0x3c, 0x1f, 0x09, 0x47, 0x83,
	0xa4, 0xb0, 0xaa, 0xc7, 0x8a, 0x56, 0xd6, 0xde, 0x0c, 0x9d, 0x05, 0x55, 0xa3, 0x37, 0x93, 0x79,
	0x38, 0x8a, 0x48, 0xe4, 0x9e, 0x8a, 0x0d, 0xd0, 0xa8, 0x13, 0xed, 0xca, 0xa4, 0xce, 0x77, 0x8d,
	0x41, 0x91, 0x7b, 0x51, 0x5c, 0x0e, 0x8a, 0xa1, 0xfe, 0xb6, 0x3e, 0xcd, 0xfe, 0xbe, 0x0e, 0x1b,
	0x3a, 0x84, 0x70, 0x7d, 0xd4, 0xd3, 0x74, 0x5a, 0x53, 0xc9, 0xd5, 0x41, 0x6f, 0x5f, 0x81, 0x05,
	0x4d, 0x57, 0x99, 0x56, 0x2d, 0x05, 0x55, 0xb3, 0xea, 0x65, 0x58, 0x89, 0x53, 0x1f, 0xc3, 0xc7,
	0x08, 0x9f, 0x47, 0x7d, 0xf5, 0x54, 0x0b, 0x4d, 0x28, 0x1b, 0x93, 0x6e, 0x9b, 0x29, 0xf6, 0x35,
	0x58, 0x25, 0xfe, 0x6b, 0x14, 0xb4, 0x01, 0xb9, 0x42, 0x69, 0x55, 0x92, 0x4b, 0xd0, 0xec, 0x47,
	0x09, 0x79, 0xa1, 0x1d, 0x78, 0xb1, 0x0e, 0xec, 0xd0, 0x8f, 0x92, 0x6d, 0x05, 0xb2, 0x5f, 0x81,
	0x55, 0x13, 0xa5, 0x78, 0x51, 0x83, 0x3a, 0xd0, 0x36, 0x50, 0xd5, 0xd3, 0x1a, 0xb5, 0xc3, 0x99,
	0xc6, 0xd0, 0xe1, 0xcc, 0x4b, 0x60, 0x97, 0x5f, 0x45, 0x7e, 0x74, 0x35, 0x7a, 0xb9, 0x4c, 0xd1,
	0x2f, 0x75, 0xa4, 0xd0, 0x56, 0x92, 0x15, 0xcf, 0x40, 0x55, 0x40, 0xc4, 0xd2, 0xc3, 0xd0, 0x04,
	0x1a, 0x9b, 0x73, 0x8b, 0x32, 0x41, 0x45, 0x48, 0xd4, 0xf1, 0x31, 0x64, 0xbb, 0xa4, 0x07, 0x74,
	0xd6, 0xcb, 0xe3, 0x5e, 0x7b, 0x02, 0x47, 0xee, 0x42, 0x09, 0xde, 0xe5, 0x71, 0xaf, 0xf3, 0xef,
	0x26, 0xca, 0xc8, 0xde, 0x28, 0xd0, 0x85, 0x48, 0xfd, 0x88, 0x44, 0x91, 0x8a, 0xed, 0xf3, 0x0a,
	0xac, 0xd6, 0x53, 0x8c, 0x53, 0x2e, 0x5b, 0x6c, 0xc5, 0x37, 0xca, 0x24, 0x2c, 0xfd, 0x0d, 0x68,
	0x0f, 0x51, 0x44, 0xcc, 0xe5, 0x69, 0xac, 0x6d, 0xb1, 0xb5, 0x1a, 0x55, 0xc4, 0x9c, 0x34, 0x46,
	0x57, 0xfa, 0x3a, 0x61, 0xe1, 0xeb, 0xb0, 0x54, 0x25, 0xd9, 0x0e, 0xec, 0xd7, 0x60, 0xbd, 0x8e,
	0x5d, 0x79, 0x02, 0x6a, 0xb5, 0x4a, 0xa1, 0x9e, 0x19, 0x7a, 0x81, 0xde, 0x3c, 0x52, 0x4e, 0x4a,
	0xc6, 0x7b, 0x44, 0x72, 0xc9, 0xd9, 0x8a, 0xc9, 0x4d, 0x49, 0xe1, 0x3e, 0x43, 0x0f, 0x0e, 0x15,
	0x47, 0xc2, 0xe8, 0xab, 0x3f, 0x89, 0xc1, 0x79, 0xb6, 0x62, 0x7d, 0x18, 0xbc, 0x1d, 0x74, 0xbe,
	0x3e, 0x5d, 0x86, 0x10, 0x92, 0x04, 0x86, 0x6a, 0xa2, 0x1a, 0xf1, 0x32, 0x3d, 0x2a, 0x24, 0x98,
	0x9f, 0x26, 0x81, 0x87, 0x71, 0x2a, 0x50, 0xcf, 0x13, 0x5b, 0xf1, 0xae, 0x86, 0x61, 0x28, 0x20,
	0x83, 0x3a, 0xd1, 0xe1, 0x93, 0x24, 0xe9, 0xc3, 0x02, 0x68, 0x3f, 0x0f, 0xb2, 0x2d, 0xdc, 0x24,
	0xcd, 0xa3, 0x30, 0xf2, 0x3d, 0x23, 0x90, 0x9c, 0xe4, 0xf6, 0xbe, 0x01, 0x96, 0xe3, 0x00, 0xd5,
	0x83, 0x4c, 0xbd, 0xb5, 0xe1, 0xc5, 0x4a, 0x43, 0x95, 0x05, 0x3d, 0x28, 0xa1, 0xf6, 0x19, 0x68,
	0xb0, 0x64, 0xdf, 0x4b, 0xfc, 0x22, 0x06, 0x42, 0xf1, 0x2d, 0x55, 0xc7, 0x80, 0x05, 0xd7, 0xdc,
	0x2c, 0x1e, 0x88, 0x6b, 0x4a, 0x41, 0x9d, 0x93, 0x90, 0x87, 0x12, 0x20, 0x75, 0x41, 0x4c, 0xce,
	0xd3, 0x6b, 0x6a, 0xa2, 0xcc, 0xca, 0xef, 0xbd, 0xf4, 0x1a, 0x9e, 0x73, 0xa0, 0xef, 0xab, 0xd2,
	0x48, 0xd5, 0x97, 0xac, 0x01, 0x1e, 0x37, 0x0c, 0x92, 0xd2, 0x77, 0x88, 0xe6, 0xc4, 0xa2, 0x84,
	0xbf, 0x57, 0x82, 0xf1, 0xaa, 0xc9, 0x51, 0xce, 0x3d, 0x37, 0xe7, 0x5e, 0x18, 0xaa, 0x98, 0x00,
	0x0d, 0xa7, 0x89, 0xc0, 0x3d, 0x82, 0xd9, 0x4b, 0x30, 0xe9, 0x25, 0x8f, 0xd5, 0x75, 0x03, 0xf9,
	0xd3, 0x3e, 0x07, 0x73, 0x14, 0xad, 0x49, 0x87, 0x4f, 0x6e, 0x38, 0x25, 0x40, 0xf6, 0x6b, 0xf1,
	0xe1, 0x26, 0xa9, 0xcb, 0x72, 0x75, 0xd1, 0xa0, 0x55, 0x80, 0xef, 0xa7, 0x77, 0x72, 0x7b, 0x0b,
	0xd6, 0xd3, 0x04, 0x0f, 0x3a, 0x12, 0xb3, 0x4f, 0x59, 0xae, 0xae, 0x1d, 0xd8, 0x69, 0xc2, 0xf6,
	0xd2, 0xfb, 0xa5, 0xb7, 0xd2, 0x9d, 0xdc, 0x7e, 0x16, 0x96, 0x24, 0x8d, 0x6c, 0x2c, 0x57, 0xfe,
	0x18, 0x24, 0x91, 0xba, 0x7d, 0xd0, 0x4a, 0x13, 0x26, 0x9b, 0xec, 0x41, 0xc2, 0xde, 0x4b, 0x22,
	0xfb, 0x0a, 0x2c, 0x56, 0x10, 0xbb, 0x91, 0xba, 0xc3, 0xde, 0x2c, 0xf1, 0x6e, 0x46, 0xb2, 0x0b,
	0xa5, 0x56, 0x63, 0x36, 0x15, 0xdd, 0x08, 0x58, 0x88, 0x45, 0x66, 0xb4, 0x54, 0xe7, 0xff, 0x18,
	0x4b, 0x09, 0x3e, 0x4e, 0x15, 0xb3, 0x23, 0x92, 0x1c, 0x97, 0xa0, 0x89, 0xe1, 0x49, 0x5c, 0x76,
	0x14, 0x09, 0xf5, 0xb6, 0x52, 0xc3, 0x99, 0x47, 0xd8, 0x1d, 0x04, 0xc9, 0x4e, 0x8c, 0x92, 0xca,
	0xd3, 0x3e, 0xb3, 0x51, 0x42, 0xeb, 0xda, 0x05, 0x98, 0x97, 0x6b, 0x03, 0x2a, 0x23, 0x85, 0x8f,
	0x17, 0x74, 0xc3, 0xe0, 0x16, 0x41, 0xa4, 0xde, 0x25, 0x11, 0x06, 0x99, 0x1a, 0x5b, 0xd3, 0xdd,
	0x30, 0x78, 0x2f, 0x93, 0x74, 0xa9, 0xd7, 0x2f, 0xe8, 0x68, 0x54, 0x41, 0xea, 0xf5, 0x35, 0xdd,
	0x21, 0x34, 0x90, 0xc7, 0x90, 0xf9, 0xea, 0x5e, 0xe2, 0x38, 0xf6, 0x04, 0x8a, 0x07, 0xce, 0x9c,
	0x59, 0x59, 0xda, 0x5d, 0xe6, 0xdb, 0x17, 0xa1, 0x29, 0x19, 0xc6, 0x10, 0x34, 0xfb, 0x69, 0xa6,
	0x76, 0x3f, 0x64, 0x95, 0xee, 0xb3, 0xa3, 0xfc, 0xdd, 0x34, 0xb3, 0x9f, 0xa2, 0x3a, 0xe7, 0x83,
	0x44, 0x5a, 0x9b, 0x6a, 0x83, 0x63, 0x4e, 0x6a, 0x10, 0x83, 0x64, 0x3b, 0xdc, 0xd7, 0xe9, 0xe9,
	0x20, 0xc7, 0xf4, 0xb9, 0x22, 0xfd, 0xc1, 0x20, 0x97, 0xe9, 0x1d, 0x68, 0xd1, 0x42, 0xae, 0x63,
	0xdc, 0x50, 0xc4, 0x62, 0x49, 0xb4, 0x9d, 0x50, 0x94, 0x1b, 0xfb, 0x39, 0x7a, 0x90, 0xa2, 0xb2,
	0x99, 0xac, 0xf6, 0x04, 0xba, 0x61, 0x60, 0xee, 0x88, 0xbf, 0x00, 0xcb, 0xb8, 0x3c, 0xb8, 0x71,
	0x10, 0xe1, 0xdd, 0x19, 0xfd, 0x0a, 0x4d, 0xc3, 0x59, 0xc4, 0x84, 0x9d, 0x20, 0xda, 0x21, 0x30,
	0xbe, 0x0b, 0xa8, 0x71, 0xd5, 0xa0, 0x6e, 0x68, 0x1c, 0x23, 0xf1, 0x11, 0x57, 0x43, 0x58, 0x25,
	0x3e, 0xe2, 0x65, 0xa2, 0x17, 0x09, 0x35, 0x62, 0x29, 0xf1, 0x46, 0x84, 0xb7, 0xcc, 0x29, 0x11,
	0xf5, 0xd3, 0x25, 0x32, 0x1f, 0x11, 0x82, 0xba, 0xf9, 0x0f, 0x26, 0x30, 0xd2, 0x27, 0x2d, 0x5c,
	0xa4, 0xfa, 0xec, 0xa7, 0x14, 0x01, 0x2a, 0x0a, 0x2a, 0x5e, 0x64, 0x22, 0x0a, 0xb4, 0x47, 0xc4,
	0xbe, 0x27, 0xdc, 0xc8, 0x7c, 0xc1, 0x81, 0xa4, 0xdd, 0xc2, 0xbe, 0x27, 0xb6, 0xcb, 0x27, 0x1c,
	0x28, 0xbc, 0xad, 0xd4, 0x0d, 0xf0, 0xe0, 0x5a, 0xc5, 0x2e, 0x45, 0x88, 0xc4, 0xa1, 0x6b, 0x66,
	0xa8, 0x09, 0x60, 0xba, 0xd2, 0xf7, 0x08, 0x84, 0x08, 0x4f, 0x83, 0xcc, 0xd1, 0x2d, 0xb7, 0x65,
	0xd4, 0x50, 0x6c, 0xee, 0x7b, 0xe2, 0x5e, 0x16, 0x8b, 0xa2, 0x37, 0x4a, 0x0c, 0xf5, 0xaa, 0x99,
	0xba, 0x97, 0xd5, 0xd7, 0x48, 0xc5, 0x8b, 0x6b, 0x32, 0x3f, 0x39, 0x7b, 0xd2, 0xec, 0xb1, 0xca,
	0x72, 0xb6, 0xb8, 0x5f, 0x74, 0x87, 0xe0, 0xb4, 0x37, 0xff, 0xaf, 0x27, 0xe0, 0x92, 0x1a, 0x91,
	0xfd, 0x28, 0xc8, 0x52, 0x1c, 0x10, 0x22, 0x73, 0x0f, 0xb9, 0x47, 0x47, 0xc1, 0xe8, 0x2f, 0xf4,
	0x36, 0x9c, 0x29, 0x80, 0xa6, 0x98, 0x49, 0x0c, 0xe7, 0xcd, 0x8d, 0x58, 0x64, 0x5f, 0xe6, 0x5e,
	0x66, 0xc8, 0x1a, 0x4c, 0xb6, 0xdf, 0x84, 0xcd, 0x51, 0xc4, 0xe6, 0x54, 0x5e, 0x1f, 0xa2, 0xa5,
	0x3a, 0x7f, 0x16, 0xda, 0x5a, 0x5b, 0x55, 0xa3, 0xb0, 0x8c, 0xef, 0xae, 0x9e, 0xdf, 0x50, 0xe9,
	0x34, 0x1a, 0xcb, 0xa0, 0xeb, 0x2f, 0xc0, 0xb2, 0x71, 0xb7, 0xcf, 0x38, 0x09, 0x69, 0x39, 0x8b,
	0xe5, 0x0d, 0x3f, 0x2a, 0xe5, 0x18, 0x06, 0xc9, 0x1a, 0xa4, 0x3d, 0x91, 0x61, 0x06, 0x71, 0xdb,
	0xb0, 0x73, 0xab, 0x7c, 0xbc, 0x43, 0x0e, 0xad, 0x32, 0xb6, 0x20, 0x8a, 0xb5, 0x2b, 0xb0, 0x50,
	0x42, 0xcc, 0xc7, 0xd3, 0x0a, 0x28, 0x6e, 0x22, 0x0c, 0x4a, 0xeb, 0x1c, 0x07, 0x26, 0x05, 0x89,
	0xc1, 0xc8, 0xb5, 0x39, 0xd3, 0x91, 0x66, 0xc8, 0x09, 0xa1, 0x91, 0x33, 0x15, 0x5e, 0xe6, 0x3c,
	0x40, 0xd4, 0xcb, 0x74, 0x2a, 0x39, 0x22, 0xcc, 0x45, 0xbd, 0x4c, 0x25, 0x5f, 0x82, 0x26, 0xbd,
	0x98, 0xa2, 0x10, 0xc8, 0x1f, 0x81, 0x5e, 0x51, 0x21, 0x94, 0xce, 0x6f, 0xbd, 0xa9, 0x46, 0x54,
	0x71, 0x09, 0x68, 0x2b, 0xb6, 0x07, 0x30, 0xab, 0xe4, 0xd1, 0x18, 0x83, 0xd4, 0x96, 0x12, 0x6f,
	0x86, 0x5e, 0x24, 0xc4, 0x43, 0x0a, 0xcf, 0xcf, 0xa3, 0x03, 0x36, 0x22, 0x48, 0xc1, 0x98, 0x6f,
	0x63, 0x19, 0xb1, 0x09, 0x96, 0x88, 0x07, 0x23, 0x2a, 0xc1, 0xef, 0x59, 0xb0, 0x6e, 0x5e, 0x9b,
	0x41, 0xad, 0x80, 0xee, 0xce, 0xd0, 0xa3, 0x7d, 0x7f, 0x73, 0x2c, 0xcc, 0x15, 0xd7, 0x76, 0x9c,
	0x95, 0xf2, 0x6e, 0xce, 0x4e, 0x94, 0xa8, 0xfb, 0x39, 0x18, 0x52, 0xc3, 0x8b, 0x7d, 0xbc, 0x25,
	0xa9, 0xdf, 0x13, 0x45, 0xc8, 0x0d, 0xce, 0x3c, 0xe5, 0xe5, 0xce, 0x8e, 0x32, 0x0f, 0x95, 0x42,
	0xa6, 0x6e, 0xfc, 0xa3, 0x97, 0xfb, 0x1d, 0x05, 0xbd, 0xc3, 0x53, 0xfb, 0x9a, 0x0a, 0x6b, 0xc4,
	0x19, 0x93, 0xc6, 0xc4, 0x57, 0x07, 0x8c, 0x3f, 0x96, 0x62, 0x40, 0xc9, 0x15, 0x3c, 0x14, 0x76,
	0x30, 0xed, 0x97, 0x64, 0xd2, 0xbd, 0x28, 0xb0, 0xb7, 0xa1, 0x83, 0xae, 0x15, 0x22, 0x4a, 0x7c,
	0xe6, 0xc6, 0x9e, 0xc8, 0x15, 0x19, 0x67, 0x3e, 0x8b, 0x0e, 0x58, 0x80, 0xf4, 0xb4, 0x01, 0x78,
	0x5e, 0x62, 0xee, 0x4a, 0xc4, 0x1d, 0x4f, 0xe4, 0x98, 0x85, 0xa3, 0xb0, 0x64, 0x56, 0x2e, 0x5c,
	0xad, 0x67, 0x95, 0x71, 0x16, 0x32, 0x2e, 0x1b, 0x9b, 0x8e, 0x7d, 0x71, 0xe9, 0x77, 0x05, 0x4b,
	0x28, 0x5b, 0xb2, 0x5e, 0x9e, 0xad, 0x64, 0xfb, 0x50, 0x93, 0xc8, 0x4e, 0x23, 0x5d, 0x61, 0x97,
	0x25, 0x4f, 0x2e, 0x20, 0xe7, 0x8c, 0x0d, 0x15, 0x30, 0x77, 0x52, 0x01, 0x7b, 0x9c, 0xb1, 0x6a,
	0x01, 0x2f, 0xc3, 0xaa, 0xd9, 0xc8, 0xc5, 0x9d, 0x55, 0x8a, 0x0a, 0xb5, 0xcc, 0xca, 0xa6, 0x56,
	0x97, 0x56, 0xf1, 0x8d, 0x4a, 0x93, 0xa0, 0xf2, 0xa2, 0x24, 0xad, 0xad, 0x1b, 0x26, 0x99, 0xf9,
	0xb8, 0xe4, 0xb1, 0xc4, 0xf8, 0xd2, 0x64, 0xf3, 0x58, 0x62, 0x7c, 0x74, 0xf2, 0x0d, 0x68, 0x57,
	0x88, 0x55, 0x20, 0x2a, 0x63, 0x7f, 0x73, 0xcd, 0x20, 0x25, 0x09, 0xb1, 0xa7, 0x5e, 0xea, 0x1d,
	0x41, 0x88, 0x6b, 0x73, 0xab, 0x52, 0x45, 0x25, 0x78, 0xae, 0xc2, 0x8a, 0xd7, 0xe5, 0x14, 0x97,
	0xa2, 0x34, 0xe5, 0xd4, 0xa6, 0xfc, 0xb2, 0xd7, 0xe5, 0x37, 0x06, 0x79, 0x7a, 0xbb, 0x48, 0x50,
	0x1b, 0xcc, 0x21, 0xe7, 0xc5, 0xab, 0x3d, 0x4b, 0x7a, 0x83, 0xf9, 0x2e, 0xe7, 0xfa, 0x81, 0x1f,
	0x0a, 0xb3, 0x63, 0xfa, 0xe6, 0x17, 0x5a, 0xe6, 0x62, 0xc5, 0x21, 0x9f, 0x42, 0xb5, 0x8c, 0xf2,
	0xfe, 0x57, 0x41, 0xfb, 0xed, 0x61, 0xdf, 0xff, 0xe2, 0x2a, 0x35, 0xe7, 0x69, 0xc1, 0x05, 0xc5,
	0xeb, 0xc7, 0xab, 0xd4, 0x0e, 0x4f, 0x35, 0x1f, 0x7f, 0x0b, 0x66, 0xa5, 0x4a, 0x25, 0x67, 0x14,
	0x5d, 0xcb, 0x0c, 0xc6, 0x7b, 0xc3, 0x49, 0xf9, 0x18, 0xcf, 0xa4, 0x83, 0x5c, 0x4e, 0xd8, 0x5f,
	0x87, 0x99, 0x28, 0xc1, 0xd2, 0xd7, 0x4e, 0xb1, 0xf4, 0xe9, 0x28, 0x91, 0x85, 0xa7, 0x54, 0xf7,
	0x23, 0x9e, 0xe2, 0x2d, 0xce, 0xf1, 0x05, 0xbd, 0x95, 0xb5, 0xfd, 0x0a, 0x4f, 0xed, 0x3e, 0xd6,
	0x56, 0x96, 0xb7, 0x31, 0xd6, 0xf2, 0xa6, 0xa3, 0x44, 0x16, 0xf7, 0xb7, 0x95, 0x63, 0x1f, 0xe7,
	0x69, 0xbb, 0x3d, 0xee, 0xe6, 0x2d, 0x6f, 0x32, 0x90, 0xfb, 0xa0, 0x43, 0x0c, 0xa0, 0xf7, 0x86,
	0x64, 0x60, 0xf3, 0x34, 0x19, 0x90, 0xa5, 0x4a, 0x06, 0xfe, 0x9e, 0xa5, 0xee, 0xe0, 0x17, 0xa2,
	0xc5, 0xe3, 0xdc, 0x7b, 0x8c, 0x4f, 0x26, 0x8c, 0x23, 0x74, 0x68, 0xd5, 0x47, 0xde, 0x41, 0x5f,
	0x1f, 0x2d, 0xb5, 0x6e, 0xc8, 0x92, 0xed, 0x23, 0x98, 0x26, 0x9f, 0xea, 0xb3, 0xe3, 0x89, 0xaa,
	0x3d, 0xec, 0x1b, 0xef, 0x50, 0x81, 0x78, 0xf1, 0xbe, 0xe2, 0x02, 0x8e, 0x21, 0xa6, 0xc6, 0x13,
	0x4d, 0x7b, 0xd8, 0xdf, 0xdc, 0x69, 0xaa, 0xcf, 0x3d, 0x64, 0xe6, 0x08, 0xa6, 0xc9, 0xd3, 0xf9,
	0xfc, 0xe9, 0x35, 0x43, 0x38, 0xd4, 0x0c, 0xc4, 0xc2, 0x53, 0xa7, 0xd3, 0x0c, 0x61, 0xa5, 0x19,
	0xee, 0x22, 0x33, 0xeb, 0x30, 0x73, 0xc8, 0xa2, 0xde, 0x7e, 0x8e, 0xa1, 0xb4, 0xa6, 0x1c, 0xf5,
	0x25, 0xf5, 0x6c, 0xad, 0xec, 0xab, 0xf4, 0x8b, 0xe4, 0x1e, 0xab, 0xa0, 0x5f, 0x26, 0xb4, 0xf2,
	0x58, 0xfa, 0x52, 0xe5, 0x58, 0xfa, 0x79, 0x58, 0x1a, 0xb2, 0x2e, 0x3a, 0xea, 0xa9, 0xd0, 0x9a,
	0x59, 0xf1, 0x1a, 0xac, 0xd7, 0x51, 0x95, 0x9d, 0x70, 0x99, 0x76, 0xf4, 0x6a, 0x04, 0xe4, 0x5c,
	0x30, 0x8a, 0xaa, 0xcb, 0x23, 0x16, 0xb6, 0x9f, 0x1e, 0x49, 0x75, 0x53, 0xa6, 0xd1, 0xf5, 0xab,
	0x3a, 0x5f, 0x57, 0xf4, 0xf5, 0xab, 0x1a, 0x63, 0xe8, 0x22, 0x32, 0x9a, 0xb3, 0x67, 0xb4, 0x8b,
	0xc8, 0x28, 0xd6, 0x46, 0xd2, 0x11, 0x6f, 0xcf, 0x8e, 0xa6, 0x23, 0xe6, 0xd4, 0xc6, 0x23, 0xd9,
	0xbd, 0x64, 0x5d, 0x3d, 0xa7, 0xa2, 0x82, 0x6f, 0xc5, 0x3b, 0x12, 0x4a, 0xb6, 0x95, 0x7a, 0xab,
	0x5c, 0x2e, 0x1c, 0x84, 0xf5, 0x7c, 0xf1, 0xc8, 0xfb, 0x83, 0x81, 0xda, 0x67, 0x78, 0x11, 0xec,
	0x74, 0x90, 0x77, 0xd3, 0x41, 0x12, 0xa0, 0x22, 0x40, 0x6c, 0xbf, 0x40, 0x35, 0xd5, 0x29, 0x77,
	0xb9, 0xf2, 0xd4, 0x78, 0x83, 0x02, 0x99, 0xcb, 0x1c, 0x75, 0x68, 0xda, 0xa2, 0x75, 0x3e, 0x43,
	0x2c, 0x87, 0x9c, 0x3f, 0x18, 0xe4, 0xea, 0x75, 0xf7, 0xa2, 0x89, 0x6c, 0x98, 0xc2, 0x0d, 0xde,
	0x17, 0xc9, 0x87, 0x56, 0xfe, 0x96, 0x6d, 0x6c, 0xc4, 0x5b, 0x50, 0x2e, 0xcf, 0x2f, 0x51, 0xc9,
	0x65, 0xc2, 0x2e, 0x39, 0x3f, 0x3f, 0x03, 0x8b, 0x54, 0xdf, 0xd2, 0xb3, 0xff, 0x2a, 0xd9, 0x73,
	0x08, 0x2e, 0xee, 0x7f, 0xbf, 0x08, 0xf6, 0x20, 0x13, 0x39, 0x67, 0x5e, 0xdf, 0x40, 0x7d, 0x99,
	0x72, 0xd5, 0x29, 0x05, 0xf6, 0x2b, 0xb0, 0x1a, 0xa4, 0x87, 0xc9, 0x10, 0xfe, 0x2b, 0xe4, 0x62,
	0x53, 0xa6, 0x15, 0x14, 0xcf, 0xc1, 0x92, 0xde, 0x19, 0x2a, 0xfc, 0xa1, 0xaf, 0xd1, 0x59, 0x60,
	0x42, 0xdb, 0x43, 0xda, 0x11, 0xfa, 0x1a, 0xac, 0x21, 0xe6, 0x10, 0xfa, 0x16, 0x65, 0x2e, 0xe1,
	0xf7, 0xab, 0x24, 0xbf, 0x67, 0x41, 0xbb, 0x8e, 0xae, 0x27, 0x65, 0xfb, 0x55, 0x9c, 0xfb, 0x7f,
	0x63, 0x6c, 0x77, 0x06, 0x5c, 0x67, 0xad, 0x5a, 0x83, 0x77, 0xa8, 0x60, 0x0c, 0xbf, 0xc7, 0xd9,
	0x41, 0x94, 0x0e, 0x44, 0xa5, 0x1e, 0xaf, 0xe9, 0x07, 0x19, 0x29, 0xcd, 0xa8, 0xc7, 0x0f, 0x2d,
	0x38, 0x37, 0x8a, 0xa4, 0xa8, 0xcb, 0xeb, 0x63, 0xaf, 0xcb, 0xe6, 0x30, 0x5b, 0xba, 0x3e, 0xcf,
	0xc3, 0x52, 0xe1, 0x3c, 0xa2, 0xeb, 0x72, 0x9d, 0x44, 0x8e, 0x86, 0xeb, 0x8a, 0xfc, 0xbe, 0x05,
	0xed, 0x3a, 0x6e, 0x51, 0x89, 0x37, 0xc6, 0x5e, 0x89, 0xf5, 0x1a, 0x3f, 0xba, 0x06, 0xd7, 0x61,
	0x83, 0x42, 0xe1, 0x0d, 0xcf, 0xc2, 0xcf, 0xd2, 0x2c, 0xa4, 0xe4, 0xfa, 0x2c, 0x7c, 0x1a, 0x16,
	0x50, 0x8d, 0x97, 0x5d, 0xe2, 0xa7, 0x83, 0x24, 0x6f, 0xbf, 0x49, 0x67, 0xc9, 0x12, 0xfa, 0x6e,
	0x9a, 0xdd, 0x92, 0x30, 0xfb, 0x7b, 0x16, 0xc9, 0x17, 0xe3, 0x5a, 0x46, 0xfb, 0xad, 0xb1, 0x5d,
	0x58, 0x19, 0x75, 0x01, 0x04, 0x0f, 0x20, 0x6e, 0x95, 0x40, 0xfb, 0x8f, 0x25, 0x4b, 0xd5, 0xfb,
	0x0b, 0xed, 0xb7, 0xc7, 0x73, 0xfb, 0xfb, 0x49, 0xd7, 0x33, 0x9c, 0x85, 0xea, 0x65, 0x09, 0xf5,
	0xbc, 0x7e, 0x9a, 0xe5, 0x91, 0xef, 0xc5, 0xed, 0xcf, 0xe9, 0xe7, 0xf5, 0x1f, 0x10, 0xc0, 0xfe,
	0xae, 0x05, 0x4d, 0xd3, 0xeb, 0xab, 0xfd, 0xf9, 0xd3, 0x76, 0x33, 0x9b, 0xef, 0x15, 0x7b, 0x94,
	0x02, 0x8d, 0x28, 0xf2, 0x42, 0x69, 0x7f, 0x61, 0xbc, 0x1e, 0x20, 0xa6, 0xb3, 0x8b, 0x33, 0x93,
	0xe6, 0xc9, 0xee, 0x56, 0x2c, 0xc7, 0xd6, 0x32, 0xba, 0x37, 0x48, 0xab, 0x5f, 0x9f, 0x66, 0xb7,
	0x7f, 0x61, 0xbc, 0x61, 0x66, 0x2a, 0xfe, 0x14, 0xce, 0x82, 0xfc, 0xbc, 0x93, 0x04, 0x37, 0xc3,
	0x00, 0x0f, 0xaf, 0x25, 0x4b, 0x78, 0xb8, 0x5e, 0x61, 0xe9, 0x8b, 0xe3, 0x65, 0xa9, 0x72, 0x9a,
	0xef, 0x2c, 0xc8, 0x4f, 0x83, 0xa5, 0xef, 0xcb, 0xe1, 0x6e, 0x9c, 0xe6, 0xca, 0xe1, 0x7e, 0x63,
	0x3c, 0xdb, 0x71, 0xc7, 0x1d, 0x28, 0x3b, 0x0b, 0xc6, 0xa9, 0xb1, 0x7a, 0x87, 0x7f, 0xde, 0x38,
	0x4c, 0x6d, 0xdf, 0x1c, 0xef, 0xd3, 0xb7, 0xa3, 0x8f, 0x9b, 0x1d, 0x93, 0x05, 0xfb, 0x77, 0x2c,
	0x00, 0x23, 0x32, 0xfc, 0xad, 0xf1, 0x46, 0xaf, 0x1c, 0x79, 0x74, 0xeb, 0x18, 0x0c, 0xd8, 0x9f,
	0x83, 0xb3, 0x12, 0xa9, 0xd8, 0x35, 0xe7, 0x29, 0xfa, 0x84, 0x69, 0x77, 0xb9, 0xdb, 0xb4, 0x55,
	0x2f, 0xb6, 0x62, 0xe5, 0xe8, 0x71, 0x87, 0xa7, 0x0f, 0xba, 0x1f, 0x68, 0xaf, 0xb9, 0xef, 0x58,
	0xa5, 0x26, 0x4d, 0x01, 0x71, 0xda, 0x77, 0x4e, 0x71, 0xa3, 0xa1, 0xc9, 0x0b, 0xa6, 0xb6, 0x13,
	0xfb, 0x2a, 0xac, 0x98, 0x5b, 0xf8, 0xba, 0x0a, 0x77, 0xc9, 0x35, 0xa1, 0xdc, 0xc4, 0xd7, 0xcc,
	0x6f, 0xc1, 0x9a, 0x89, 0x5f, 0x7a, 0xa8, 0xbe, 0x43, 0xde, 0x2d, 0x25, 0x45, 0xe9, 0xa9, 0xfa,
	0x9b, 0xfa, 0xa1, 0x0c, 0x51, 0x3c, 0x9d, 0xd6, 0x7e, 0xf7, 0x14, 0x1e, 0x67, 0x6b, 0x95, 0xcc,
	0xdc, 0x65, 0xbe, 0xd4, 0xe8, 0x4c, 0x2e, 0xf0, 0x46, 0xd9, 0x36, 0x69, 0x74, 0x25, 0x22, 0x46,
	0xe7, 0xfb, 0x22, 0x9c, 0x37, 0xfb, 0x97, 0xee, 0x24, 0x9b, 0x3d, 0xfc, 0x8b, 0x14, 0xa5, 0xa2,
	0xec, 0x61, 0xb4, 0x20, 0x8d, 0x3e, 0xfe, 0x2d, 0x8c, 0x79, 0x66, 0x90, 0xb7, 0xbf, 0x74, 0x6a,
	0x46, 0xa5, 0xee, 0x60, 0xb2, 0x6a, 0x5f, 0x83, 0x0d, 0xb3, 0x2e, 0xea, 0xed, 0x2a, 0x59, 0x9b,
	0xf6, 0x0e, 0x79, 0x31, 0x95, 0xb5, 0xd8, 0xc1, 0xc7, 0xa5, 0x1e, 0x74, 0x3f, 0xb0, 0xbf, 0x6e,
	0xc1, 0x5c, 0x71, 0x72, 0xdc, 0xbe, 0x37, 0x5e, 0x19, 0x59, 0x39, 0xa6, 0x76, 0xf0, 0x34, 0x18,
	0xa5, 0xe3, 0x0f, 0x2d, 0xf2, 0x20, 0xa9, 0x07, 0x7f, 0xc7, 0xf8, 0x83, 0xf7, 0x71, 0xca, 0x74,
	0xc7, 0x26, 0x26, 0x8b, 0xe3, 0x4b, 0xf4, 0x52, 0xa9, 0x86, 0x20, 0xc3, 0x20, 0x87, 0x3f, 0x50,
	0x2f, 0x81, 0x15, 0x87, 0x78, 0xed, 0x07, 0xe3, 0xb9, 0x09, 0xf7, 0xc4, 0x93, 0x43, 0x67, 0x5e,
	0x1d, 0x9c, 0x61, 0xab, 0xe9, 0xf3, 0x86, 0x81, 0x20, 0x6b, 0x0b, 0xc3, 0x72, 0x89, 0x2c, 0x6c,
	0x3f, 0xa4, 0xad, 0x59, 0x99, 0xf8, 0x9e, 0x40, 0x83, 0x4b, 0x26, 0xed, 0x66, 0xa1, 0x5c, 0x86,
	0x16, 0xaa, 0xa7, 0x6a, 0xed, 0x5f, 0x1a, 0x6f, 0x14, 0xfb, 0xe1, 0x73, 0x3c, 0xe3, 0xbc, 0x0e,
	0xab, 0xf1, 0x23, 0x0b, 0xda, 0x9e, 0xef, 0x0f, 0xfa, 0x83, 0xd8, 0xcb, 0xf5, 0x59, 0x85, 0x3a,
	0xb4, 0x6b, 0x3b, 0xe3, 0xd5, 0x68, 0xcc, 0xb2, 0x9c, 0x75, 0x83, 0x0b, 0xd9, 0xf1, 0xf7, 0xd4,
	0xc1, 0xe1, 0x3f, 0xb5, 0xe0, 0xa2, 0xc9, 0x60, 0xc5, 0xe3, 0x4f, 0x33, 0xba, 0x7b, 0x8a, 0x8c,
	0x9e, 0x37, 0xb8, 0x31, 0x3c, 0x0c, 0x15, 0xbf, 0x9d, 0xbf, 0x68, 0xd4, 0x4e, 0x22, 0x63, 0x91,
	0xa1, 0x43, 0x12, 0x5a, 0xe0, 0xfa, 0xa1, 0x7b, 0xb2, 0x59, 0x9b, 0x1a, 0x88, 0xe2, 0xb0, 0x03,
	0x2d, 0x75, 0x7a, 0x10, 0x7a, 0x51, 0xcc, 0x02, 0xb4, 0x50, 0xd1, 0x57, 0xf2, 0x2e, 0xe7, 0x77,
	0x11, 0x84, 0xce, 0x09, 0x9c, 0xbb, 0xea, 0x78, 0x51, 0x39, 0xf9, 0xbd, 0x46, 0x47, 0xc1, 0x21,
	0xe7, 0x37, 0x10, 0xae, 0xdc, 0xfc, 0x2e, 0xd3, 0xc4, 0x29, 0xaf, 0x82, 0xbc, 0x4e, 0xc6, 0x49,
	0x2c, 0xb2, 0xf2, 0x6d, 0xb1, 0x17, 0xc1, 0x46, 0x59, 0x55, 0x7d, 0x14, 0xed, 0x3a, 0x39, 0x81,
	0xc5, 0x22, 0xdb, 0xad, 0xbc, 0x8b, 0xf6, 0x02, 0x2c, 0x4b, 0xec, 0xea, 0xdb, 0x68, 0x6f, 0x50,
	0xf1, 0xb1, 0xc8, 0xde, 0x35, 0x9f, 0x47, 0x53, 0x39, 0x97, 0x92, 0x13, 0xcf, 0x67, 0xc8, 0x9e,
	0x5a, 0x32, 0x79, 0xd0, 0x1e, 0x0a, 0xc6, 0x1b, 0x67, 0x7d, 0x2f, 0xf7, 0xf7, 0xd1, 0x98, 0x6a,
	0x38, 0x0b, 0xc5, 0x23, 0x67, 0xf7, 0x24, 0xb4, 0x86, 0x49, 0x11, 0x07, 0xde, 0x22, 0xdf, 0x81,
	0x02, 0x93, 0xa2, 0x0f, 0x0e, 0x60, 0x56, 0xaf, 0x83, 0x6f, 0x9f, 0xc2, 0x3a, 0x38, 0x13, 0xd3,
	0x02, 0xa8, 0xe3, 0x1b, 0x7c, 0xce, 0x88, 0x6f, 0xc0, 0x61, 0x52, 0x9a, 0x08, 0x9f, 0x47, 0x69,
	0xfa, 0x6b, 0xe3, 0x0d, 0x7f, 0xb9, 0x15, 0x3b, 0xb2, 0x30, 0x63, 0x8b, 0xf0, 0x0b, 0x95, 0x2d,
	0xc2, 0x36, 0x34, 0xc4, 0x96, 0x1b, 0x0b, 0x77, 0x90, 0xa1, 0xa5, 0xd0, 0x72, 0x66, 0xc4, 0xd6,
	0x8e, 0x78, 0x2f, 0x93, 0x4d, 0x4b, 0x29, 0xf8, 0x44, 0x2a, 0x0b, 0xa2, 0xa4, 0x87, 0x8a, 0x7b,
	0x4b, 0x1a, 0x90, 0x3b, 0xe2, 0x61, 0x01, 0xb5, 0xcf, 0x01, 0x10, 0x26, 0x06, 0x96, 0xbd, 0x41,
	0x8f, 0x95, 0x49, 0x9c, 0xdb, 0xe9, 0x61, 0x42, 0x4f, 0x5e, 0x49, 0x0b, 0xae, 0x1f, 0x7d, 0xad,
	0x18, 0xa5, 0x37, 0xf5, 0x93, 0x57, 0x3a, 0x41, 0x0d, 0xd3, 0x97, 0xc0, 0x36, 0x90, 0x73, 0x1e,
	0xf5, 0x7a, 0x8c, 0xa3, 0xf2, 0x39, 0xe7, 0x18, 0xd9, 0xec, 0x51, 0x02, 0x06, 0x2f, 0x89, 0xfa,
	0x8c, 0xbb, 0x31, 0x0b, 0x49, 0x07, 0x6c, 0x39, 0x73, 0x08, 0xd9, 0x61, 0x61, 0xae, 0xac, 0xc7,
	0xcc, 0x13, 0x22, 0x3a, 0x60, 0xed, 0x3b, 0xda, 0x7a, 0x7c, 0x48, 0x00, 0xe5, 0x8e, 0x5c, 0x9a,
	0xf7, 0x77, 0xf5, 0x14, 0x2b, 0x8d, 0xfa, 0xe7, 0x60, 0x89, 0x8e, 0x57, 0x31, 0xd8, 0x2b, 0x7a,
	0xc4, 0xa3, 0xd6, 0xd5, 0x72, 0x16, 0x24, 0x5c, 0xce, 0x75, 0xf2, 0x93, 0xb7, 0x9f, 0x87, 0xa5,
	0x4c, 0x8a, 0x52, 0x91, 0xcb, 0x65, 0xb3, 0xfb, 0x38, 0x67, 0x02, 0x15, 0xae, 0x29, 0x67, 0xb1,
	0x84, 0xdf, 0x94, 0x60, 0x59, 0x49, 0x03, 0x35, 0xf3, 0xfc, 0x47, 0x2c, 0x17, 0xa8, 0x16, 0x4d,
	0x39, 0xcb, 0x65, 0xca, 0x43, 0x4a, 0xe8, 0xce, 0x48, 0x2d, 0x38, 0x7d, 0xf5, 0xff, 0x05, 0x00,
	0x00, 0xff, 0xff, 0xac, 0x53, 0x50, 0xf7, 0xff, 0x95, 0x00, 0x00,
}
