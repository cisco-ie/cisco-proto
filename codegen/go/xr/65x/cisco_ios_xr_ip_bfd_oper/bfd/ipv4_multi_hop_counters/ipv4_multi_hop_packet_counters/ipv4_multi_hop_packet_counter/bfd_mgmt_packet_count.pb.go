/*
Copyright 2019 Cisco Systems

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: bfd_mgmt_packet_count.proto

package cisco_ios_xr_ip_bfd_oper_bfd_ipv4_multi_hop_counters_ipv4_multi_hop_packet_counters_ipv4_multi_hop_packet_counter

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type BfdMgmtPacketCount_KEYS struct {
	SourceAddress        string   `protobuf:"bytes,1,opt,name=source_address,json=sourceAddress,proto3" json:"source_address,omitempty"`
	DestinationAddress   string   `protobuf:"bytes,2,opt,name=destination_address,json=destinationAddress,proto3" json:"destination_address,omitempty"`
	Location             string   `protobuf:"bytes,3,opt,name=location,proto3" json:"location,omitempty"`
	VrfName              string   `protobuf:"bytes,4,opt,name=vrf_name,json=vrfName,proto3" json:"vrf_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BfdMgmtPacketCount_KEYS) Reset()         { *m = BfdMgmtPacketCount_KEYS{} }
func (m *BfdMgmtPacketCount_KEYS) String() string { return proto.CompactTextString(m) }
func (*BfdMgmtPacketCount_KEYS) ProtoMessage()    {}
func (*BfdMgmtPacketCount_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_448f2d88deed3ba8, []int{0}
}

func (m *BfdMgmtPacketCount_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BfdMgmtPacketCount_KEYS.Unmarshal(m, b)
}
func (m *BfdMgmtPacketCount_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BfdMgmtPacketCount_KEYS.Marshal(b, m, deterministic)
}
func (m *BfdMgmtPacketCount_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BfdMgmtPacketCount_KEYS.Merge(m, src)
}
func (m *BfdMgmtPacketCount_KEYS) XXX_Size() int {
	return xxx_messageInfo_BfdMgmtPacketCount_KEYS.Size(m)
}
func (m *BfdMgmtPacketCount_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_BfdMgmtPacketCount_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_BfdMgmtPacketCount_KEYS proto.InternalMessageInfo

func (m *BfdMgmtPacketCount_KEYS) GetSourceAddress() string {
	if m != nil {
		return m.SourceAddress
	}
	return ""
}

func (m *BfdMgmtPacketCount_KEYS) GetDestinationAddress() string {
	if m != nil {
		return m.DestinationAddress
	}
	return ""
}

func (m *BfdMgmtPacketCount_KEYS) GetLocation() string {
	if m != nil {
		return m.Location
	}
	return ""
}

func (m *BfdMgmtPacketCount_KEYS) GetVrfName() string {
	if m != nil {
		return m.VrfName
	}
	return ""
}

type BfdMgmtPacketCount struct {
	HelloTransmitCount   uint32   `protobuf:"varint,50,opt,name=hello_transmit_count,json=helloTransmitCount,proto3" json:"hello_transmit_count,omitempty"`
	HelloReceiveCount    uint32   `protobuf:"varint,51,opt,name=hello_receive_count,json=helloReceiveCount,proto3" json:"hello_receive_count,omitempty"`
	EchoTransmitCount    uint32   `protobuf:"varint,52,opt,name=echo_transmit_count,json=echoTransmitCount,proto3" json:"echo_transmit_count,omitempty"`
	EchoReceiveCount     uint32   `protobuf:"varint,53,opt,name=echo_receive_count,json=echoReceiveCount,proto3" json:"echo_receive_count,omitempty"`
	DisplayType          string   `protobuf:"bytes,54,opt,name=display_type,json=displayType,proto3" json:"display_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BfdMgmtPacketCount) Reset()         { *m = BfdMgmtPacketCount{} }
func (m *BfdMgmtPacketCount) String() string { return proto.CompactTextString(m) }
func (*BfdMgmtPacketCount) ProtoMessage()    {}
func (*BfdMgmtPacketCount) Descriptor() ([]byte, []int) {
	return fileDescriptor_448f2d88deed3ba8, []int{1}
}

func (m *BfdMgmtPacketCount) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BfdMgmtPacketCount.Unmarshal(m, b)
}
func (m *BfdMgmtPacketCount) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BfdMgmtPacketCount.Marshal(b, m, deterministic)
}
func (m *BfdMgmtPacketCount) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BfdMgmtPacketCount.Merge(m, src)
}
func (m *BfdMgmtPacketCount) XXX_Size() int {
	return xxx_messageInfo_BfdMgmtPacketCount.Size(m)
}
func (m *BfdMgmtPacketCount) XXX_DiscardUnknown() {
	xxx_messageInfo_BfdMgmtPacketCount.DiscardUnknown(m)
}

var xxx_messageInfo_BfdMgmtPacketCount proto.InternalMessageInfo

func (m *BfdMgmtPacketCount) GetHelloTransmitCount() uint32 {
	if m != nil {
		return m.HelloTransmitCount
	}
	return 0
}

func (m *BfdMgmtPacketCount) GetHelloReceiveCount() uint32 {
	if m != nil {
		return m.HelloReceiveCount
	}
	return 0
}

func (m *BfdMgmtPacketCount) GetEchoTransmitCount() uint32 {
	if m != nil {
		return m.EchoTransmitCount
	}
	return 0
}

func (m *BfdMgmtPacketCount) GetEchoReceiveCount() uint32 {
	if m != nil {
		return m.EchoReceiveCount
	}
	return 0
}

func (m *BfdMgmtPacketCount) GetDisplayType() string {
	if m != nil {
		return m.DisplayType
	}
	return ""
}

func init() {
	proto.RegisterType((*BfdMgmtPacketCount_KEYS)(nil), "cisco_ios_xr_ip_bfd_oper.bfd.ipv4_multi_hop_counters.ipv4_multi_hop_packet_counters.ipv4_multi_hop_packet_counter.bfd_mgmt_packet_count_KEYS")
	proto.RegisterType((*BfdMgmtPacketCount)(nil), "cisco_ios_xr_ip_bfd_oper.bfd.ipv4_multi_hop_counters.ipv4_multi_hop_packet_counters.ipv4_multi_hop_packet_counter.bfd_mgmt_packet_count")
}

func init() { proto.RegisterFile("bfd_mgmt_packet_count.proto", fileDescriptor_448f2d88deed3ba8) }

var fileDescriptor_448f2d88deed3ba8 = []byte{
	// 319 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x92, 0xc1, 0x4a, 0xf3, 0x40,
	0x14, 0x85, 0xc9, 0xff, 0x8b, 0xd6, 0xd1, 0x8a, 0x4e, 0x15, 0x62, 0xdd, 0xd4, 0x82, 0xd0, 0x85,
	0x44, 0xb1, 0xd5, 0xbd, 0x88, 0x2b, 0xc1, 0x45, 0xed, 0xc6, 0xd5, 0x65, 0x3a, 0xb9, 0xb1, 0x83,
	0x49, 0x66, 0x9c, 0x99, 0x06, 0xfb, 0x4c, 0xbe, 0xa1, 0x2b, 0xe9, 0x9d, 0x58, 0x5a, 0x2d, 0xb8,
	0xcc, 0xf9, 0xbe, 0x73, 0x72, 0x03, 0x61, 0x27, 0xe3, 0x2c, 0x85, 0xe2, 0xa5, 0xf0, 0x60, 0x84,
	0x7c, 0x45, 0x0f, 0x52, 0x4f, 0x4b, 0x9f, 0x18, 0xab, 0xbd, 0xe6, 0x6f, 0x52, 0x39, 0xa9, 0x41,
	0x69, 0x07, 0xef, 0x16, 0x94, 0x81, 0xb9, 0xac, 0x0d, 0xda, 0x64, 0x9c, 0xa5, 0x89, 0x32, 0xd5,
	0x00, 0x8a, 0x69, 0xee, 0x15, 0x4c, 0xb4, 0x09, 0x45, 0xb4, 0xee, 0x67, 0xbe, 0xbc, 0xfb, 0x27,
	0xee, 0x7e, 0x44, 0xac, 0xbd, 0xf6, 0x24, 0x78, 0xb8, 0x7f, 0x7e, 0xe2, 0x67, 0x6c, 0xcf, 0xe9,
	0xa9, 0x95, 0x08, 0x22, 0x4d, 0x2d, 0x3a, 0x17, 0x47, 0x9d, 0xa8, 0xb7, 0x3d, 0x6c, 0x86, 0xf4,
	0x36, 0x84, 0xfc, 0x82, 0xb5, 0x52, 0x74, 0x5e, 0x95, 0xc2, 0x2b, 0x5d, 0x2e, 0xdc, 0x7f, 0xe4,
	0xf2, 0x25, 0xf4, 0x5d, 0x68, 0xb3, 0x46, 0xae, 0x25, 0x45, 0xf1, 0x7f, 0xb2, 0x16, 0xcf, 0xfc,
	0x98, 0x35, 0x2a, 0x9b, 0x41, 0x29, 0x0a, 0x8c, 0x37, 0x88, 0x6d, 0x55, 0x36, 0x7b, 0x14, 0x05,
	0x76, 0x3f, 0x23, 0x76, 0xb4, 0xf6, 0x5a, 0x7e, 0xc9, 0x0e, 0x27, 0x98, 0xe7, 0x1a, 0xbc, 0x15,
	0xa5, 0x2b, 0x54, 0x9d, 0xc7, 0x57, 0x9d, 0xa8, 0xd7, 0x1c, 0x72, 0x62, 0xa3, 0x1a, 0xdd, 0x51,
	0x23, 0x61, 0xad, 0xd0, 0xb0, 0x28, 0x51, 0x55, 0x58, 0x17, 0xfa, 0x54, 0x38, 0x20, 0x34, 0x0c,
	0x64, 0xe1, 0xa3, 0x9c, 0xfc, 0x7a, 0xc1, 0x20, 0xf8, 0x73, 0xb4, 0xba, 0x7f, 0xce, 0x38, 0xf9,
	0xab, 0xf3, 0xd7, 0xa4, 0xef, 0xcf, 0xc9, 0xca, 0xfa, 0x29, 0xdb, 0x4d, 0x95, 0x33, 0xb9, 0x98,
	0x81, 0x9f, 0x19, 0x8c, 0x6f, 0xe8, 0xc3, 0x77, 0xea, 0x6c, 0x34, 0x33, 0x38, 0xde, 0xa4, 0x9f,
	0xa4, 0xff, 0x15, 0x00, 0x00, 0xff, 0xff, 0xe7, 0xfd, 0x92, 0x63, 0x43, 0x02, 0x00, 0x00,
}
