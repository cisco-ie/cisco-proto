/*
Copyright 2019 Cisco Systems

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: ospfv3_sh_sham_links.proto

package cisco_ios_xr_ipv6_ospfv3_oper_ospfv3_processes_process_vrfs_vrf_sham_link_table

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Ospfv3ShShamLinks_KEYS struct {
	ProcessName          string   `protobuf:"bytes,1,opt,name=process_name,json=processName,proto3" json:"process_name,omitempty"`
	VrfName              string   `protobuf:"bytes,2,opt,name=vrf_name,json=vrfName,proto3" json:"vrf_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Ospfv3ShShamLinks_KEYS) Reset()         { *m = Ospfv3ShShamLinks_KEYS{} }
func (m *Ospfv3ShShamLinks_KEYS) String() string { return proto.CompactTextString(m) }
func (*Ospfv3ShShamLinks_KEYS) ProtoMessage()    {}
func (*Ospfv3ShShamLinks_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_52f61a5a47b843b4, []int{0}
}

func (m *Ospfv3ShShamLinks_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Ospfv3ShShamLinks_KEYS.Unmarshal(m, b)
}
func (m *Ospfv3ShShamLinks_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Ospfv3ShShamLinks_KEYS.Marshal(b, m, deterministic)
}
func (m *Ospfv3ShShamLinks_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Ospfv3ShShamLinks_KEYS.Merge(m, src)
}
func (m *Ospfv3ShShamLinks_KEYS) XXX_Size() int {
	return xxx_messageInfo_Ospfv3ShShamLinks_KEYS.Size(m)
}
func (m *Ospfv3ShShamLinks_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_Ospfv3ShShamLinks_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_Ospfv3ShShamLinks_KEYS proto.InternalMessageInfo

func (m *Ospfv3ShShamLinks_KEYS) GetProcessName() string {
	if m != nil {
		return m.ProcessName
	}
	return ""
}

func (m *Ospfv3ShShamLinks_KEYS) GetVrfName() string {
	if m != nil {
		return m.VrfName
	}
	return ""
}

type Ospfv3EdmNeighborRetrans struct {
	DatabaseDescriptorRetransmissions uint32   `protobuf:"varint,1,opt,name=database_descriptor_retransmissions,json=databaseDescriptorRetransmissions,proto3" json:"database_descriptor_retransmissions,omitempty"`
	AreaFloodIndex                    uint32   `protobuf:"varint,2,opt,name=area_flood_index,json=areaFloodIndex,proto3" json:"area_flood_index,omitempty"`
	AsFloodIndex                      uint32   `protobuf:"varint,3,opt,name=as_flood_index,json=asFloodIndex,proto3" json:"as_flood_index,omitempty"`
	LinkFloodIndex                    uint32   `protobuf:"varint,4,opt,name=link_flood_index,json=linkFloodIndex,proto3" json:"link_flood_index,omitempty"`
	NeighborRetransmissions           uint32   `protobuf:"varint,5,opt,name=neighbor_retransmissions,json=neighborRetransmissions,proto3" json:"neighbor_retransmissions,omitempty"`
	Retransmissions                   uint32   `protobuf:"varint,6,opt,name=retransmissions,proto3" json:"retransmissions,omitempty"`
	AreaFirstFlood                    uint32   `protobuf:"varint,7,opt,name=area_first_flood,json=areaFirstFlood,proto3" json:"area_first_flood,omitempty"`
	AreaFirstFloodIndex               uint32   `protobuf:"varint,8,opt,name=area_first_flood_index,json=areaFirstFloodIndex,proto3" json:"area_first_flood_index,omitempty"`
	AsFirstFlood                      uint32   `protobuf:"varint,9,opt,name=as_first_flood,json=asFirstFlood,proto3" json:"as_first_flood,omitempty"`
	AsFirstFloodIndex                 uint32   `protobuf:"varint,10,opt,name=as_first_flood_index,json=asFirstFloodIndex,proto3" json:"as_first_flood_index,omitempty"`
	LinkFirstFlood                    uint32   `protobuf:"varint,11,opt,name=link_first_flood,json=linkFirstFlood,proto3" json:"link_first_flood,omitempty"`
	LinkFirstFloodIndex               uint32   `protobuf:"varint,12,opt,name=link_first_flood_index,json=linkFirstFloodIndex,proto3" json:"link_first_flood_index,omitempty"`
	AreaNextFlood                     uint32   `protobuf:"varint,13,opt,name=area_next_flood,json=areaNextFlood,proto3" json:"area_next_flood,omitempty"`
	AreaNextFloodIndex                uint32   `protobuf:"varint,14,opt,name=area_next_flood_index,json=areaNextFloodIndex,proto3" json:"area_next_flood_index,omitempty"`
	AsNextFlood                       uint32   `protobuf:"varint,15,opt,name=as_next_flood,json=asNextFlood,proto3" json:"as_next_flood,omitempty"`
	AsNextFloodIndex                  uint32   `protobuf:"varint,16,opt,name=as_next_flood_index,json=asNextFloodIndex,proto3" json:"as_next_flood_index,omitempty"`
	LinkNextFlood                     uint32   `protobuf:"varint,17,opt,name=link_next_flood,json=linkNextFlood,proto3" json:"link_next_flood,omitempty"`
	LinkNextFloodIndex                uint32   `protobuf:"varint,18,opt,name=link_next_flood_index,json=linkNextFloodIndex,proto3" json:"link_next_flood_index,omitempty"`
	LastRetransmissionLength          uint32   `protobuf:"varint,19,opt,name=last_retransmission_length,json=lastRetransmissionLength,proto3" json:"last_retransmission_length,omitempty"`
	MaximumRetransmissionLength       uint32   `protobuf:"varint,20,opt,name=maximum_retransmission_length,json=maximumRetransmissionLength,proto3" json:"maximum_retransmission_length,omitempty"`
	LastRetransmissionTime            uint32   `protobuf:"varint,21,opt,name=last_retransmission_time,json=lastRetransmissionTime,proto3" json:"last_retransmission_time,omitempty"`
	MaximumRetransmissionTime         uint32   `protobuf:"varint,22,opt,name=maximum_retransmission_time,json=maximumRetransmissionTime,proto3" json:"maximum_retransmission_time,omitempty"`
	LsaRetransmissionTimer            uint32   `protobuf:"varint,23,opt,name=lsa_retransmission_timer,json=lsaRetransmissionTimer,proto3" json:"lsa_retransmission_timer,omitempty"`
	XXX_NoUnkeyedLiteral              struct{} `json:"-"`
	XXX_unrecognized                  []byte   `json:"-"`
	XXX_sizecache                     int32    `json:"-"`
}

func (m *Ospfv3EdmNeighborRetrans) Reset()         { *m = Ospfv3EdmNeighborRetrans{} }
func (m *Ospfv3EdmNeighborRetrans) String() string { return proto.CompactTextString(m) }
func (*Ospfv3EdmNeighborRetrans) ProtoMessage()    {}
func (*Ospfv3EdmNeighborRetrans) Descriptor() ([]byte, []int) {
	return fileDescriptor_52f61a5a47b843b4, []int{1}
}

func (m *Ospfv3EdmNeighborRetrans) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Ospfv3EdmNeighborRetrans.Unmarshal(m, b)
}
func (m *Ospfv3EdmNeighborRetrans) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Ospfv3EdmNeighborRetrans.Marshal(b, m, deterministic)
}
func (m *Ospfv3EdmNeighborRetrans) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Ospfv3EdmNeighborRetrans.Merge(m, src)
}
func (m *Ospfv3EdmNeighborRetrans) XXX_Size() int {
	return xxx_messageInfo_Ospfv3EdmNeighborRetrans.Size(m)
}
func (m *Ospfv3EdmNeighborRetrans) XXX_DiscardUnknown() {
	xxx_messageInfo_Ospfv3EdmNeighborRetrans.DiscardUnknown(m)
}

var xxx_messageInfo_Ospfv3EdmNeighborRetrans proto.InternalMessageInfo

func (m *Ospfv3EdmNeighborRetrans) GetDatabaseDescriptorRetransmissions() uint32 {
	if m != nil {
		return m.DatabaseDescriptorRetransmissions
	}
	return 0
}

func (m *Ospfv3EdmNeighborRetrans) GetAreaFloodIndex() uint32 {
	if m != nil {
		return m.AreaFloodIndex
	}
	return 0
}

func (m *Ospfv3EdmNeighborRetrans) GetAsFloodIndex() uint32 {
	if m != nil {
		return m.AsFloodIndex
	}
	return 0
}

func (m *Ospfv3EdmNeighborRetrans) GetLinkFloodIndex() uint32 {
	if m != nil {
		return m.LinkFloodIndex
	}
	return 0
}

func (m *Ospfv3EdmNeighborRetrans) GetNeighborRetransmissions() uint32 {
	if m != nil {
		return m.NeighborRetransmissions
	}
	return 0
}

func (m *Ospfv3EdmNeighborRetrans) GetRetransmissions() uint32 {
	if m != nil {
		return m.Retransmissions
	}
	return 0
}

func (m *Ospfv3EdmNeighborRetrans) GetAreaFirstFlood() uint32 {
	if m != nil {
		return m.AreaFirstFlood
	}
	return 0
}

func (m *Ospfv3EdmNeighborRetrans) GetAreaFirstFloodIndex() uint32 {
	if m != nil {
		return m.AreaFirstFloodIndex
	}
	return 0
}

func (m *Ospfv3EdmNeighborRetrans) GetAsFirstFlood() uint32 {
	if m != nil {
		return m.AsFirstFlood
	}
	return 0
}

func (m *Ospfv3EdmNeighborRetrans) GetAsFirstFloodIndex() uint32 {
	if m != nil {
		return m.AsFirstFloodIndex
	}
	return 0
}

func (m *Ospfv3EdmNeighborRetrans) GetLinkFirstFlood() uint32 {
	if m != nil {
		return m.LinkFirstFlood
	}
	return 0
}

func (m *Ospfv3EdmNeighborRetrans) GetLinkFirstFloodIndex() uint32 {
	if m != nil {
		return m.LinkFirstFloodIndex
	}
	return 0
}

func (m *Ospfv3EdmNeighborRetrans) GetAreaNextFlood() uint32 {
	if m != nil {
		return m.AreaNextFlood
	}
	return 0
}

func (m *Ospfv3EdmNeighborRetrans) GetAreaNextFloodIndex() uint32 {
	if m != nil {
		return m.AreaNextFloodIndex
	}
	return 0
}

func (m *Ospfv3EdmNeighborRetrans) GetAsNextFlood() uint32 {
	if m != nil {
		return m.AsNextFlood
	}
	return 0
}

func (m *Ospfv3EdmNeighborRetrans) GetAsNextFloodIndex() uint32 {
	if m != nil {
		return m.AsNextFloodIndex
	}
	return 0
}

func (m *Ospfv3EdmNeighborRetrans) GetLinkNextFlood() uint32 {
	if m != nil {
		return m.LinkNextFlood
	}
	return 0
}

func (m *Ospfv3EdmNeighborRetrans) GetLinkNextFloodIndex() uint32 {
	if m != nil {
		return m.LinkNextFloodIndex
	}
	return 0
}

func (m *Ospfv3EdmNeighborRetrans) GetLastRetransmissionLength() uint32 {
	if m != nil {
		return m.LastRetransmissionLength
	}
	return 0
}

func (m *Ospfv3EdmNeighborRetrans) GetMaximumRetransmissionLength() uint32 {
	if m != nil {
		return m.MaximumRetransmissionLength
	}
	return 0
}

func (m *Ospfv3EdmNeighborRetrans) GetLastRetransmissionTime() uint32 {
	if m != nil {
		return m.LastRetransmissionTime
	}
	return 0
}

func (m *Ospfv3EdmNeighborRetrans) GetMaximumRetransmissionTime() uint32 {
	if m != nil {
		return m.MaximumRetransmissionTime
	}
	return 0
}

func (m *Ospfv3EdmNeighborRetrans) GetLsaRetransmissionTimer() uint32 {
	if m != nil {
		return m.LsaRetransmissionTimer
	}
	return 0
}

type Ospfv3ShSlinkNeighbor struct {
	ShamLinkSuppressHello  bool                      `protobuf:"varint,1,opt,name=sham_link_suppress_hello,json=shamLinkSuppressHello,proto3" json:"sham_link_suppress_hello,omitempty"`
	ShamLinkState          string                    `protobuf:"bytes,2,opt,name=sham_link_state,json=shamLinkState,proto3" json:"sham_link_state,omitempty"`
	ShamLinkRetransmission *Ospfv3EdmNeighborRetrans `protobuf:"bytes,3,opt,name=sham_link_retransmission,json=shamLinkRetransmission,proto3" json:"sham_link_retransmission,omitempty"`
	XXX_NoUnkeyedLiteral   struct{}                  `json:"-"`
	XXX_unrecognized       []byte                    `json:"-"`
	XXX_sizecache          int32                     `json:"-"`
}

func (m *Ospfv3ShSlinkNeighbor) Reset()         { *m = Ospfv3ShSlinkNeighbor{} }
func (m *Ospfv3ShSlinkNeighbor) String() string { return proto.CompactTextString(m) }
func (*Ospfv3ShSlinkNeighbor) ProtoMessage()    {}
func (*Ospfv3ShSlinkNeighbor) Descriptor() ([]byte, []int) {
	return fileDescriptor_52f61a5a47b843b4, []int{2}
}

func (m *Ospfv3ShSlinkNeighbor) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Ospfv3ShSlinkNeighbor.Unmarshal(m, b)
}
func (m *Ospfv3ShSlinkNeighbor) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Ospfv3ShSlinkNeighbor.Marshal(b, m, deterministic)
}
func (m *Ospfv3ShSlinkNeighbor) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Ospfv3ShSlinkNeighbor.Merge(m, src)
}
func (m *Ospfv3ShSlinkNeighbor) XXX_Size() int {
	return xxx_messageInfo_Ospfv3ShSlinkNeighbor.Size(m)
}
func (m *Ospfv3ShSlinkNeighbor) XXX_DiscardUnknown() {
	xxx_messageInfo_Ospfv3ShSlinkNeighbor.DiscardUnknown(m)
}

var xxx_messageInfo_Ospfv3ShSlinkNeighbor proto.InternalMessageInfo

func (m *Ospfv3ShSlinkNeighbor) GetShamLinkSuppressHello() bool {
	if m != nil {
		return m.ShamLinkSuppressHello
	}
	return false
}

func (m *Ospfv3ShSlinkNeighbor) GetShamLinkState() string {
	if m != nil {
		return m.ShamLinkState
	}
	return ""
}

func (m *Ospfv3ShSlinkNeighbor) GetShamLinkRetransmission() *Ospfv3EdmNeighborRetrans {
	if m != nil {
		return m.ShamLinkRetransmission
	}
	return nil
}

type Ospfv3ShShamLinks struct {
	ShamLinkNeighborId                         string                 `protobuf:"bytes,50,opt,name=sham_link_neighbor_id,json=shamLinkNeighborId,proto3" json:"sham_link_neighbor_id,omitempty"`
	ShamLinkSourceAddress                      string                 `protobuf:"bytes,51,opt,name=sham_link_source_address,json=shamLinkSourceAddress,proto3" json:"sham_link_source_address,omitempty"`
	ShamLinkDestAddress                        string                 `protobuf:"bytes,52,opt,name=sham_link_dest_address,json=shamLinkDestAddress,proto3" json:"sham_link_dest_address,omitempty"`
	ShamLinkState                              string                 `protobuf:"bytes,53,opt,name=sham_link_state,json=shamLinkState,proto3" json:"sham_link_state,omitempty"`
	ShamLinkDemandCircuit                      bool                   `protobuf:"varint,54,opt,name=sham_link_demand_circuit,json=shamLinkDemandCircuit,proto3" json:"sham_link_demand_circuit,omitempty"`
	ShamLinkDcBitlessLsa                       uint32                 `protobuf:"varint,55,opt,name=sham_link_dc_bitless_lsa,json=shamLinkDcBitlessLsa,proto3" json:"sham_link_dc_bitless_lsa,omitempty"`
	ShamLinkIfindex                            uint32                 `protobuf:"varint,56,opt,name=sham_link_ifindex,json=shamLinkIfindex,proto3" json:"sham_link_ifindex,omitempty"`
	ShamLinkArea                               string                 `protobuf:"bytes,57,opt,name=sham_link_area,json=shamLinkArea,proto3" json:"sham_link_area,omitempty"`
	ShamLinkCost                               uint32                 `protobuf:"varint,58,opt,name=sham_link_cost,json=shamLinkCost,proto3" json:"sham_link_cost,omitempty"`
	ShamLinkTransmissionDelay                  uint32                 `protobuf:"varint,59,opt,name=sham_link_transmission_delay,json=shamLinkTransmissionDelay,proto3" json:"sham_link_transmission_delay,omitempty"`
	ShamLinkHelloInterval                      uint32                 `protobuf:"varint,60,opt,name=sham_link_hello_interval,json=shamLinkHelloInterval,proto3" json:"sham_link_hello_interval,omitempty"`
	ShamLinkDeadInterval                       uint32                 `protobuf:"varint,61,opt,name=sham_link_dead_interval,json=shamLinkDeadInterval,proto3" json:"sham_link_dead_interval,omitempty"`
	ShamLinkWaitInterval                       uint32                 `protobuf:"varint,62,opt,name=sham_link_wait_interval,json=shamLinkWaitInterval,proto3" json:"sham_link_wait_interval,omitempty"`
	ShamLinkRetransmissionInterval             uint32                 `protobuf:"varint,63,opt,name=sham_link_retransmission_interval,json=shamLinkRetransmissionInterval,proto3" json:"sham_link_retransmission_interval,omitempty"`
	ShamLinkNextHello                          uint32                 `protobuf:"varint,64,opt,name=sham_link_next_hello,json=shamLinkNextHello,proto3" json:"sham_link_next_hello,omitempty"`
	ShamLinkPassive                            bool                   `protobuf:"varint,65,opt,name=sham_link_passive,json=shamLinkPassive,proto3" json:"sham_link_passive,omitempty"`
	IsShamLinkIpSecurityRequired               bool                   `protobuf:"varint,66,opt,name=is_sham_link_ip_security_required,json=isShamLinkIpSecurityRequired,proto3" json:"is_sham_link_ip_security_required,omitempty"`
	IsShamLinkIpSecurityActive                 bool                   `protobuf:"varint,67,opt,name=is_sham_link_ip_security_active,json=isShamLinkIpSecurityActive,proto3" json:"is_sham_link_ip_security_active,omitempty"`
	IsShamLinkAuthenticationEnabled            bool                   `protobuf:"varint,68,opt,name=is_sham_link_authentication_enabled,json=isShamLinkAuthenticationEnabled,proto3" json:"is_sham_link_authentication_enabled,omitempty"`
	VirtualLinkAuthenticationSpi               uint32                 `protobuf:"varint,69,opt,name=virtual_link_authentication_spi,json=virtualLinkAuthenticationSpi,proto3" json:"virtual_link_authentication_spi,omitempty"`
	ShamLinkAuthenticationTransmit             uint32                 `protobuf:"varint,70,opt,name=sham_link_authentication_transmit,json=shamLinkAuthenticationTransmit,proto3" json:"sham_link_authentication_transmit,omitempty"`
	IsShamLinkEncryptionEnabled                bool                   `protobuf:"varint,71,opt,name=is_sham_link_encryption_enabled,json=isShamLinkEncryptionEnabled,proto3" json:"is_sham_link_encryption_enabled,omitempty"`
	ShamLinkEncryptionSpi                      uint32                 `protobuf:"varint,72,opt,name=sham_link_encryption_spi,json=shamLinkEncryptionSpi,proto3" json:"sham_link_encryption_spi,omitempty"`
	ShamLinkEncryptionTransmitted              uint32                 `protobuf:"varint,73,opt,name=sham_link_encryption_transmitted,json=shamLinkEncryptionTransmitted,proto3" json:"sham_link_encryption_transmitted,omitempty"`
	ShamLinkEncryptedAuthenticationTransmitted uint32                 `protobuf:"varint,74,opt,name=sham_link_encrypted_authentication_transmitted,json=shamLinkEncryptedAuthenticationTransmitted,proto3" json:"sham_link_encrypted_authentication_transmitted,omitempty"`
	ShamLinkGrEnabled                          bool                   `protobuf:"varint,75,opt,name=sham_link_gr_enabled,json=shamLinkGrEnabled,proto3" json:"sham_link_gr_enabled,omitempty"`
	ShamLinkGr                                 bool                   `protobuf:"varint,76,opt,name=sham_link_gr,json=shamLinkGr,proto3" json:"sham_link_gr,omitempty"`
	ShamLinkLastGr                             uint32                 `protobuf:"varint,77,opt,name=sham_link_last_gr,json=shamLinkLastGr,proto3" json:"sham_link_last_gr,omitempty"`
	ShamLinkNeighbor                           *Ospfv3ShSlinkNeighbor `protobuf:"bytes,78,opt,name=sham_link_neighbor,json=shamLinkNeighbor,proto3" json:"sham_link_neighbor,omitempty"`
	XXX_NoUnkeyedLiteral                       struct{}               `json:"-"`
	XXX_unrecognized                           []byte                 `json:"-"`
	XXX_sizecache                              int32                  `json:"-"`
}

func (m *Ospfv3ShShamLinks) Reset()         { *m = Ospfv3ShShamLinks{} }
func (m *Ospfv3ShShamLinks) String() string { return proto.CompactTextString(m) }
func (*Ospfv3ShShamLinks) ProtoMessage()    {}
func (*Ospfv3ShShamLinks) Descriptor() ([]byte, []int) {
	return fileDescriptor_52f61a5a47b843b4, []int{3}
}

func (m *Ospfv3ShShamLinks) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Ospfv3ShShamLinks.Unmarshal(m, b)
}
func (m *Ospfv3ShShamLinks) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Ospfv3ShShamLinks.Marshal(b, m, deterministic)
}
func (m *Ospfv3ShShamLinks) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Ospfv3ShShamLinks.Merge(m, src)
}
func (m *Ospfv3ShShamLinks) XXX_Size() int {
	return xxx_messageInfo_Ospfv3ShShamLinks.Size(m)
}
func (m *Ospfv3ShShamLinks) XXX_DiscardUnknown() {
	xxx_messageInfo_Ospfv3ShShamLinks.DiscardUnknown(m)
}

var xxx_messageInfo_Ospfv3ShShamLinks proto.InternalMessageInfo

func (m *Ospfv3ShShamLinks) GetShamLinkNeighborId() string {
	if m != nil {
		return m.ShamLinkNeighborId
	}
	return ""
}

func (m *Ospfv3ShShamLinks) GetShamLinkSourceAddress() string {
	if m != nil {
		return m.ShamLinkSourceAddress
	}
	return ""
}

func (m *Ospfv3ShShamLinks) GetShamLinkDestAddress() string {
	if m != nil {
		return m.ShamLinkDestAddress
	}
	return ""
}

func (m *Ospfv3ShShamLinks) GetShamLinkState() string {
	if m != nil {
		return m.ShamLinkState
	}
	return ""
}

func (m *Ospfv3ShShamLinks) GetShamLinkDemandCircuit() bool {
	if m != nil {
		return m.ShamLinkDemandCircuit
	}
	return false
}

func (m *Ospfv3ShShamLinks) GetShamLinkDcBitlessLsa() uint32 {
	if m != nil {
		return m.ShamLinkDcBitlessLsa
	}
	return 0
}

func (m *Ospfv3ShShamLinks) GetShamLinkIfindex() uint32 {
	if m != nil {
		return m.ShamLinkIfindex
	}
	return 0
}

func (m *Ospfv3ShShamLinks) GetShamLinkArea() string {
	if m != nil {
		return m.ShamLinkArea
	}
	return ""
}

func (m *Ospfv3ShShamLinks) GetShamLinkCost() uint32 {
	if m != nil {
		return m.ShamLinkCost
	}
	return 0
}

func (m *Ospfv3ShShamLinks) GetShamLinkTransmissionDelay() uint32 {
	if m != nil {
		return m.ShamLinkTransmissionDelay
	}
	return 0
}

func (m *Ospfv3ShShamLinks) GetShamLinkHelloInterval() uint32 {
	if m != nil {
		return m.ShamLinkHelloInterval
	}
	return 0
}

func (m *Ospfv3ShShamLinks) GetShamLinkDeadInterval() uint32 {
	if m != nil {
		return m.ShamLinkDeadInterval
	}
	return 0
}

func (m *Ospfv3ShShamLinks) GetShamLinkWaitInterval() uint32 {
	if m != nil {
		return m.ShamLinkWaitInterval
	}
	return 0
}

func (m *Ospfv3ShShamLinks) GetShamLinkRetransmissionInterval() uint32 {
	if m != nil {
		return m.ShamLinkRetransmissionInterval
	}
	return 0
}

func (m *Ospfv3ShShamLinks) GetShamLinkNextHello() uint32 {
	if m != nil {
		return m.ShamLinkNextHello
	}
	return 0
}

func (m *Ospfv3ShShamLinks) GetShamLinkPassive() bool {
	if m != nil {
		return m.ShamLinkPassive
	}
	return false
}

func (m *Ospfv3ShShamLinks) GetIsShamLinkIpSecurityRequired() bool {
	if m != nil {
		return m.IsShamLinkIpSecurityRequired
	}
	return false
}

func (m *Ospfv3ShShamLinks) GetIsShamLinkIpSecurityActive() bool {
	if m != nil {
		return m.IsShamLinkIpSecurityActive
	}
	return false
}

func (m *Ospfv3ShShamLinks) GetIsShamLinkAuthenticationEnabled() bool {
	if m != nil {
		return m.IsShamLinkAuthenticationEnabled
	}
	return false
}

func (m *Ospfv3ShShamLinks) GetVirtualLinkAuthenticationSpi() uint32 {
	if m != nil {
		return m.VirtualLinkAuthenticationSpi
	}
	return 0
}

func (m *Ospfv3ShShamLinks) GetShamLinkAuthenticationTransmit() uint32 {
	if m != nil {
		return m.ShamLinkAuthenticationTransmit
	}
	return 0
}

func (m *Ospfv3ShShamLinks) GetIsShamLinkEncryptionEnabled() bool {
	if m != nil {
		return m.IsShamLinkEncryptionEnabled
	}
	return false
}

func (m *Ospfv3ShShamLinks) GetShamLinkEncryptionSpi() uint32 {
	if m != nil {
		return m.ShamLinkEncryptionSpi
	}
	return 0
}

func (m *Ospfv3ShShamLinks) GetShamLinkEncryptionTransmitted() uint32 {
	if m != nil {
		return m.ShamLinkEncryptionTransmitted
	}
	return 0
}

func (m *Ospfv3ShShamLinks) GetShamLinkEncryptedAuthenticationTransmitted() uint32 {
	if m != nil {
		return m.ShamLinkEncryptedAuthenticationTransmitted
	}
	return 0
}

func (m *Ospfv3ShShamLinks) GetShamLinkGrEnabled() bool {
	if m != nil {
		return m.ShamLinkGrEnabled
	}
	return false
}

func (m *Ospfv3ShShamLinks) GetShamLinkGr() bool {
	if m != nil {
		return m.ShamLinkGr
	}
	return false
}

func (m *Ospfv3ShShamLinks) GetShamLinkLastGr() uint32 {
	if m != nil {
		return m.ShamLinkLastGr
	}
	return 0
}

func (m *Ospfv3ShShamLinks) GetShamLinkNeighbor() *Ospfv3ShSlinkNeighbor {
	if m != nil {
		return m.ShamLinkNeighbor
	}
	return nil
}

func init() {
	proto.RegisterType((*Ospfv3ShShamLinks_KEYS)(nil), "cisco_ios_xr_ipv6_ospfv3_oper.ospfv3.processes.process.vrfs.vrf.sham_link_table.ospfv3_sh_sham_links_KEYS")
	proto.RegisterType((*Ospfv3EdmNeighborRetrans)(nil), "cisco_ios_xr_ipv6_ospfv3_oper.ospfv3.processes.process.vrfs.vrf.sham_link_table.ospfv3_edm_neighbor_retrans")
	proto.RegisterType((*Ospfv3ShSlinkNeighbor)(nil), "cisco_ios_xr_ipv6_ospfv3_oper.ospfv3.processes.process.vrfs.vrf.sham_link_table.ospfv3_sh_slink_neighbor")
	proto.RegisterType((*Ospfv3ShShamLinks)(nil), "cisco_ios_xr_ipv6_ospfv3_oper.ospfv3.processes.process.vrfs.vrf.sham_link_table.ospfv3_sh_sham_links")
}

func init() { proto.RegisterFile("ospfv3_sh_sham_links.proto", fileDescriptor_52f61a5a47b843b4) }

var fileDescriptor_52f61a5a47b843b4 = []byte{
	// 1181 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x57, 0x6d, 0x6f, 0x1c, 0x35,
	0x10, 0x56, 0x0a, 0xf4, 0xc5, 0xc9, 0xa5, 0x89, 0xf3, 0xe6, 0xbc, 0x94, 0xbc, 0x14, 0xa1, 0x50,
	0x89, 0xab, 0x68, 0x68, 0xda, 0x42, 0x69, 0x49, 0x72, 0x69, 0x7a, 0xf4, 0x08, 0xe8, 0x12, 0x09,
	0xf5, 0xd3, 0xca, 0xb7, 0xeb, 0xcb, 0x59, 0xdd, 0xdb, 0x5d, 0x6c, 0xdf, 0x71, 0xf9, 0x0b, 0xfc,
	0x01, 0xbe, 0xf2, 0x01, 0xf1, 0x3b, 0x91, 0xc7, 0xde, 0x5d, 0x7b, 0x6f, 0xc3, 0x27, 0xf8, 0x12,
	0x9d, 0x66, 0x9e, 0xe7, 0xf1, 0xcc, 0x78, 0x66, 0xbc, 0x41, 0x1b, 0xa9, 0xcc, 0xfa, 0xe3, 0x83,
	0x40, 0x0e, 0x02, 0x39, 0xa0, 0xc3, 0x20, 0xe6, 0xc9, 0x07, 0xd9, 0xcc, 0x44, 0xaa, 0x52, 0xfc,
	0x53, 0xc8, 0x65, 0x98, 0x06, 0x3c, 0x95, 0xc1, 0x44, 0x04, 0x3c, 0x1b, 0x1f, 0x06, 0x16, 0x9d,
	0x66, 0x4c, 0x34, 0xcd, 0x6f, 0x8d, 0x0d, 0x99, 0x94, 0x4c, 0xe6, 0xbf, 0x9a, 0x63, 0xd1, 0x87,
	0x3f, 0xcd, 0x42, 0x31, 0x50, 0xb4, 0x17, 0xb3, 0xbd, 0xf7, 0x68, 0xbd, 0xee, 0xb8, 0xe0, 0xdd,
	0xe9, 0xfb, 0x0b, 0xbc, 0x8b, 0xe6, 0xac, 0x40, 0x90, 0xd0, 0x21, 0x23, 0x33, 0x3b, 0x33, 0xfb,
	0xf7, 0xba, 0xb3, 0xd6, 0x76, 0x4e, 0x87, 0x0c, 0xaf, 0xa3, 0xbb, 0x63, 0xd1, 0x37, 0xee, 0x5b,
	0xe0, 0xbe, 0x33, 0x16, 0x7d, 0xed, 0xda, 0xfb, 0xf3, 0x1e, 0xda, 0xb4, 0xda, 0x2c, 0x1a, 0x06,
	0x09, 0xe3, 0x57, 0x83, 0x5e, 0x2a, 0x02, 0xc1, 0x94, 0xa0, 0x89, 0xc4, 0xe7, 0xe8, 0x61, 0x44,
	0x15, 0xed, 0x51, 0xc9, 0x82, 0x88, 0xc9, 0x50, 0xf0, 0x4c, 0x95, 0xee, 0x21, 0x97, 0x92, 0xa7,
	0x89, 0x84, 0x43, 0x1b, 0xdd, 0xdd, 0x1c, 0xda, 0x2a, 0x90, 0x5d, 0x1f, 0x88, 0xf7, 0xd1, 0x02,
	0x15, 0x8c, 0x06, 0xfd, 0x38, 0x4d, 0xa3, 0x80, 0x27, 0x11, 0x9b, 0x40, 0x48, 0x8d, 0xee, 0xbc,
	0xb6, 0xbf, 0xd1, 0xe6, 0xb6, 0xb6, 0xe2, 0xcf, 0xd0, 0x3c, 0x95, 0x1e, 0xee, 0x23, 0xc0, 0xcd,
	0x51, 0xe9, 0xa0, 0xf6, 0xd1, 0x02, 0x14, 0xca, 0xc5, 0x7d, 0x6c, 0xf4, 0xb4, 0xdd, 0x41, 0xbe,
	0x40, 0xa4, 0x9a, 0x5d, 0x11, 0xfe, 0x27, 0xc0, 0x58, 0xcb, 0xfd, 0xd3, 0x41, 0xdf, 0xaf, 0x32,
	0x6e, 0x03, 0xa3, 0x6a, 0x2e, 0xd3, 0xe3, 0x42, 0x2a, 0x13, 0x14, 0xb9, 0xe3, 0xa4, 0xa7, 0xcd,
	0x10, 0x13, 0x3e, 0x40, 0xab, 0x55, 0xa4, 0x0d, 0xff, 0x2e, 0xe0, 0x97, 0x7c, 0xbc, 0x57, 0x13,
	0x47, 0xfc, 0x5e, 0x51, 0x93, 0x52, 0xfa, 0x31, 0x5a, 0xf6, 0x51, 0x56, 0x18, 0x01, 0x76, 0xd1,
	0xc5, 0x56, 0x8a, 0xe8, 0x08, 0xcf, 0x3a, 0x45, 0xf4, 0xa2, 0xae, 0x22, 0xad, 0xf8, 0x9c, 0x89,
	0xda, 0xc7, 0x1b, 0xf9, 0xcf, 0xd1, 0x7d, 0x48, 0x35, 0x61, 0x93, 0x5c, 0xbd, 0x01, 0xe8, 0x86,
	0x36, 0x9f, 0xb3, 0x89, 0x15, 0xff, 0x0a, 0xad, 0x54, 0x70, 0x56, 0x7b, 0x1e, 0xd0, 0xd8, 0x43,
	0x1b, 0xe9, 0x3d, 0xd4, 0xa0, 0xd2, 0x15, 0xbe, 0x0f, 0xd0, 0x59, 0x2a, 0x4b, 0xd9, 0x2f, 0xd1,
	0x92, 0x87, 0xb1, 0xa2, 0x0b, 0x80, 0x5c, 0x70, 0x90, 0x45, 0xb4, 0x90, 0xa2, 0x23, 0xba, 0x68,
	0xa2, 0xd5, 0x66, 0x2f, 0xda, 0x0a, 0xce, 0x0a, 0x63, 0x13, 0xad, 0x87, 0x36, 0xd2, 0x2f, 0xd1,
	0x46, 0x4c, 0xa5, 0xaa, 0xb4, 0x5f, 0x10, 0xb3, 0xe4, 0x4a, 0x0d, 0xc8, 0x12, 0xf0, 0x88, 0x46,
	0xf8, 0x0d, 0xd8, 0x01, 0x3f, 0x3e, 0x46, 0x0f, 0x86, 0x74, 0xc2, 0x87, 0xa3, 0xe1, 0x0d, 0x02,
	0xcb, 0x20, 0xb0, 0x69, 0x41, 0xb5, 0x1a, 0xcf, 0x11, 0xa9, 0x8b, 0x40, 0xf1, 0x21, 0x23, 0x2b,
	0x40, 0x5f, 0x9d, 0x3e, 0xff, 0x92, 0x0f, 0x19, 0x7e, 0x85, 0x36, 0x6f, 0x38, 0x1d, 0xc8, 0xab,
	0x40, 0x5e, 0xaf, 0x3d, 0x1b, 0xf8, 0xfa, 0x64, 0x49, 0xeb, 0xb8, 0x82, 0xac, 0xd9, 0x93, 0x25,
	0x9d, 0x26, 0x8a, 0xbd, 0xbf, 0x6e, 0x21, 0xe2, 0xac, 0x3f, 0x5b, 0x74, 0x33, 0xa9, 0xf8, 0x19,
	0x22, 0xe5, 0xb6, 0x94, 0xa3, 0x2c, 0x13, 0x7a, 0x11, 0x0e, 0x58, 0x1c, 0xa7, 0xb0, 0x94, 0xee,
	0x76, 0x57, 0xb4, 0xbf, 0xc3, 0x93, 0x0f, 0x17, 0xd6, 0xfb, 0x56, 0x3b, 0xf5, 0x35, 0x3b, 0x44,
	0x45, 0x55, 0xbe, 0x1a, 0x1b, 0x05, 0x5e, 0x1b, 0xf1, 0xdf, 0x33, 0xee, 0x09, 0x7e, 0xf8, 0xb0,
	0x91, 0x66, 0x9f, 0xc4, 0xcd, 0xff, 0x78, 0xe1, 0x37, 0xff, 0x65, 0x23, 0x77, 0x57, 0xf3, 0xf8,
	0xfc, 0x5a, 0xed, 0xfd, 0x3e, 0x8f, 0x96, 0xeb, 0x5e, 0x09, 0xdd, 0xa8, 0xa5, 0x7e, 0x21, 0xc7,
	0x23, 0xf2, 0x04, 0xf2, 0xc5, 0xb9, 0xde, 0xb9, 0x75, 0xb5, 0xa3, 0x4a, 0x55, 0xd3, 0x91, 0x08,
	0x59, 0x40, 0xa3, 0x48, 0x57, 0x8f, 0x1c, 0x00, 0xab, 0xac, 0x2a, 0x78, 0x8f, 0x8c, 0x53, 0xef,
	0x87, 0x92, 0x18, 0x31, 0xa9, 0x0a, 0xda, 0xd7, 0x40, 0x5b, 0xca, 0x69, 0x2d, 0x26, 0x55, 0x4e,
	0xaa, 0xb9, 0x8a, 0xa7, 0x75, 0x57, 0xe1, 0x45, 0x15, 0xb1, 0x21, 0x4d, 0xa2, 0x20, 0xe4, 0x22,
	0x1c, 0x71, 0x45, 0x0e, 0xfd, 0xbb, 0x6e, 0x81, 0xf7, 0xc4, 0x38, 0xf1, 0xa1, 0x47, 0x0c, 0x83,
	0x1e, 0x57, 0xb1, 0x6e, 0x93, 0x58, 0x52, 0xf2, 0x0c, 0x7a, 0x6f, 0xb9, 0x20, 0x86, 0xc7, 0xc6,
	0xd9, 0x91, 0x14, 0x3f, 0x42, 0x8b, 0x25, 0x8f, 0xf7, 0xcd, 0x78, 0x3f, 0x37, 0x9b, 0x3f, 0x27,
	0xb4, 0x8d, 0x59, 0xaf, 0xe6, 0x12, 0xab, 0x37, 0x15, 0x79, 0x01, 0x39, 0xcc, 0xe5, 0xc0, 0x23,
	0xc1, 0xa8, 0x8f, 0x0a, 0x53, 0xa9, 0xc8, 0x37, 0x66, 0x81, 0xe7, 0xa8, 0x93, 0x54, 0x2a, 0xfc,
	0x1a, 0x6d, 0x39, 0x1d, 0xe1, 0xce, 0x4b, 0xc4, 0x62, 0x7a, 0x4d, 0xbe, 0x35, 0xc3, 0x96, 0x73,
	0x2e, 0x1d, 0x44, 0x4b, 0x03, 0xfc, 0x4a, 0xc1, 0x30, 0x04, 0x3c, 0x51, 0x4c, 0x8c, 0x69, 0x4c,
	0x5e, 0x02, 0xb9, 0xa8, 0x14, 0x4c, 0x43, 0xdb, 0x3a, 0xf1, 0x53, 0xb4, 0xe6, 0x96, 0x98, 0x46,
	0x25, 0xef, 0xbb, 0x4a, 0xa1, 0x18, 0x8d, 0xea, 0x69, 0xbf, 0x51, 0xae, 0x4a, 0xda, 0x2b, 0x9f,
	0xf6, 0x0b, 0xe5, 0xaa, 0xa0, 0xb5, 0xd1, 0xee, 0x4d, 0xa3, 0x55, 0x0a, 0xbc, 0x06, 0x81, 0x4f,
	0xeb, 0xbb, 0xbe, 0x90, 0x7a, 0x8c, 0x96, 0xdd, 0x26, 0x9f, 0x28, 0xbb, 0x03, 0xbe, 0x37, 0x6f,
	0x5e, 0xd9, 0xe3, 0x13, 0x65, 0xe6, 0xdf, 0xbb, 0xdb, 0x8c, 0x4a, 0xc9, 0xc7, 0x8c, 0x1c, 0x41,
	0x17, 0x15, 0x77, 0xfb, 0xb3, 0x31, 0xe3, 0x33, 0xb4, 0xcb, 0x65, 0xe0, 0xb4, 0x42, 0x16, 0x48,
	0x16, 0x8e, 0x04, 0x57, 0xd7, 0x81, 0x60, 0xbf, 0x8e, 0xb8, 0x60, 0x11, 0x39, 0x06, 0xee, 0x16,
	0x97, 0x17, 0x79, 0x67, 0x64, 0x17, 0x16, 0xd4, 0xb5, 0x18, 0x7c, 0x82, 0xb6, 0x6f, 0x14, 0xa2,
	0xa1, 0xd2, 0x21, 0x9c, 0x80, 0xcc, 0x46, 0x9d, 0xcc, 0x11, 0x20, 0x70, 0x07, 0x3d, 0xf4, 0x44,
	0xe8, 0x48, 0x0d, 0x58, 0xa2, 0x78, 0x48, 0x95, 0x2e, 0x1c, 0x4b, 0xf4, 0x0a, 0x89, 0x48, 0x0b,
	0x84, 0xb6, 0x4b, 0xa1, 0x23, 0x0f, 0x77, 0x6a, 0x60, 0xf8, 0x14, 0x6d, 0x8f, 0xb9, 0x50, 0x23,
	0x1a, 0xd7, 0xaa, 0xc9, 0x8c, 0x93, 0x53, 0xa8, 0xe1, 0x96, 0x85, 0x4d, 0x4b, 0x5d, 0x64, 0xdc,
	0xbf, 0xca, 0x8a, 0x86, 0xbd, 0x30, 0x45, 0xde, 0xf8, 0x57, 0xe9, 0xab, 0xd8, 0x2e, 0x56, 0xb8,
	0x55, 0x29, 0x12, 0x4b, 0x42, 0x71, 0x9d, 0x79, 0xb9, 0x9d, 0x41, 0x6e, 0x9b, 0x65, 0x6e, 0xa7,
	0x05, 0x26, 0xcf, 0xcb, 0x1b, 0x01, 0x47, 0x42, 0x27, 0xf4, 0xd6, 0x1f, 0x81, 0x92, 0xac, 0x33,
	0x39, 0x43, 0x3b, 0xb5, 0xc4, 0x3c, 0x0b, 0xc5, 0x22, 0xd2, 0x06, 0x81, 0x07, 0xd3, 0x02, 0x97,
	0x25, 0x08, 0xf7, 0x50, 0x73, 0x4a, 0x88, 0x45, 0x37, 0x15, 0x47, 0xcb, 0xfe, 0x00, 0xb2, 0x8f,
	0x2a, 0xb2, 0x2c, 0xaa, 0x2f, 0x94, 0x3e, 0xc3, 0x6b, 0xfb, 0x2b, 0x51, 0x14, 0xe8, 0x1d, 0x14,
	0xa8, 0x68, 0xfb, 0x33, 0x91, 0x97, 0x65, 0x07, 0xcd, 0xb9, 0x04, 0xd2, 0x01, 0x20, 0x2a, 0x81,
	0xf8, 0x0b, 0x77, 0x30, 0xe0, 0x63, 0xe1, 0x4a, 0x90, 0x1f, 0xcd, 0xd7, 0x60, 0x0e, 0xeb, 0x50,
	0xa9, 0xce, 0x04, 0xfe, 0x63, 0x06, 0xe1, 0xe9, 0xa7, 0x85, 0x9c, 0xc3, 0xab, 0xc8, 0xff, 0xaf,
	0x57, 0x71, 0xea, 0x23, 0xa0, 0xbb, 0x50, 0x7d, 0xc2, 0x7a, 0xb7, 0xe1, 0x3f, 0xb1, 0x83, 0x7f,
	0x02, 0x00, 0x00, 0xff, 0xff, 0xae, 0xc4, 0x18, 0xf2, 0xa7, 0x0d, 0x00, 0x00,
}
