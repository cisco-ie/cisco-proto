/*
Copyright 2019 Cisco Systems

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: ospfv3_edm_nsr_stats.proto

package cisco_ios_xr_ipv6_ospfv3_oper_ospfv3_processes_process_statistics_issu_stats

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Ospfv3EdmNsrStats_KEYS struct {
	ProcessName          string   `protobuf:"bytes,1,opt,name=process_name,json=processName,proto3" json:"process_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Ospfv3EdmNsrStats_KEYS) Reset()         { *m = Ospfv3EdmNsrStats_KEYS{} }
func (m *Ospfv3EdmNsrStats_KEYS) String() string { return proto.CompactTextString(m) }
func (*Ospfv3EdmNsrStats_KEYS) ProtoMessage()    {}
func (*Ospfv3EdmNsrStats_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_8fee77c6427e3651, []int{0}
}

func (m *Ospfv3EdmNsrStats_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Ospfv3EdmNsrStats_KEYS.Unmarshal(m, b)
}
func (m *Ospfv3EdmNsrStats_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Ospfv3EdmNsrStats_KEYS.Marshal(b, m, deterministic)
}
func (m *Ospfv3EdmNsrStats_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Ospfv3EdmNsrStats_KEYS.Merge(m, src)
}
func (m *Ospfv3EdmNsrStats_KEYS) XXX_Size() int {
	return xxx_messageInfo_Ospfv3EdmNsrStats_KEYS.Size(m)
}
func (m *Ospfv3EdmNsrStats_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_Ospfv3EdmNsrStats_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_Ospfv3EdmNsrStats_KEYS proto.InternalMessageInfo

func (m *Ospfv3EdmNsrStats_KEYS) GetProcessName() string {
	if m != nil {
		return m.ProcessName
	}
	return ""
}

type OspfShNsrStatsPri struct {
	NsrSchedPri          string   `protobuf:"bytes,1,opt,name=nsr_sched_pri,json=nsrSchedPri,proto3" json:"nsr_sched_pri,omitempty"`
	NsrSchedQuant        uint32   `protobuf:"varint,2,opt,name=nsr_sched_quant,json=nsrSchedQuant,proto3" json:"nsr_sched_quant,omitempty"`
	NsrSchedRemainQuant  uint32   `protobuf:"varint,3,opt,name=nsr_sched_remain_quant,json=nsrSchedRemainQuant,proto3" json:"nsr_sched_remain_quant,omitempty"`
	NsrSchedEvsInQ       uint32   `protobuf:"varint,4,opt,name=nsr_sched_evs_in_q,json=nsrSchedEvsInQ,proto3" json:"nsr_sched_evs_in_q,omitempty"`
	NsrSchedMaxEvs       uint32   `protobuf:"varint,5,opt,name=nsr_sched_max_evs,json=nsrSchedMaxEvs,proto3" json:"nsr_sched_max_evs,omitempty"`
	NsrSchedPeakQLen     uint32   `protobuf:"varint,6,opt,name=nsr_sched_peak_q_len,json=nsrSchedPeakQLen,proto3" json:"nsr_sched_peak_q_len,omitempty"`
	NsrSchedEvsQd        uint64   `protobuf:"varint,7,opt,name=nsr_sched_evs_qd,json=nsrSchedEvsQd,proto3" json:"nsr_sched_evs_qd,omitempty"`
	NsrSchedEnqFails     uint64   `protobuf:"varint,8,opt,name=nsr_sched_enq_fails,json=nsrSchedEnqFails,proto3" json:"nsr_sched_enq_fails,omitempty"`
	NsrSchedEvsDeqd      uint64   `protobuf:"varint,9,opt,name=nsr_sched_evs_deqd,json=nsrSchedEvsDeqd,proto3" json:"nsr_sched_evs_deqd,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OspfShNsrStatsPri) Reset()         { *m = OspfShNsrStatsPri{} }
func (m *OspfShNsrStatsPri) String() string { return proto.CompactTextString(m) }
func (*OspfShNsrStatsPri) ProtoMessage()    {}
func (*OspfShNsrStatsPri) Descriptor() ([]byte, []int) {
	return fileDescriptor_8fee77c6427e3651, []int{1}
}

func (m *OspfShNsrStatsPri) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OspfShNsrStatsPri.Unmarshal(m, b)
}
func (m *OspfShNsrStatsPri) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OspfShNsrStatsPri.Marshal(b, m, deterministic)
}
func (m *OspfShNsrStatsPri) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OspfShNsrStatsPri.Merge(m, src)
}
func (m *OspfShNsrStatsPri) XXX_Size() int {
	return xxx_messageInfo_OspfShNsrStatsPri.Size(m)
}
func (m *OspfShNsrStatsPri) XXX_DiscardUnknown() {
	xxx_messageInfo_OspfShNsrStatsPri.DiscardUnknown(m)
}

var xxx_messageInfo_OspfShNsrStatsPri proto.InternalMessageInfo

func (m *OspfShNsrStatsPri) GetNsrSchedPri() string {
	if m != nil {
		return m.NsrSchedPri
	}
	return ""
}

func (m *OspfShNsrStatsPri) GetNsrSchedQuant() uint32 {
	if m != nil {
		return m.NsrSchedQuant
	}
	return 0
}

func (m *OspfShNsrStatsPri) GetNsrSchedRemainQuant() uint32 {
	if m != nil {
		return m.NsrSchedRemainQuant
	}
	return 0
}

func (m *OspfShNsrStatsPri) GetNsrSchedEvsInQ() uint32 {
	if m != nil {
		return m.NsrSchedEvsInQ
	}
	return 0
}

func (m *OspfShNsrStatsPri) GetNsrSchedMaxEvs() uint32 {
	if m != nil {
		return m.NsrSchedMaxEvs
	}
	return 0
}

func (m *OspfShNsrStatsPri) GetNsrSchedPeakQLen() uint32 {
	if m != nil {
		return m.NsrSchedPeakQLen
	}
	return 0
}

func (m *OspfShNsrStatsPri) GetNsrSchedEvsQd() uint64 {
	if m != nil {
		return m.NsrSchedEvsQd
	}
	return 0
}

func (m *OspfShNsrStatsPri) GetNsrSchedEnqFails() uint64 {
	if m != nil {
		return m.NsrSchedEnqFails
	}
	return 0
}

func (m *OspfShNsrStatsPri) GetNsrSchedEvsDeqd() uint64 {
	if m != nil {
		return m.NsrSchedEvsDeqd
	}
	return 0
}

type OspfShNsrSchedStats struct {
	NsrPulseQuant        int32                `protobuf:"zigzag32,1,opt,name=nsr_pulse_quant,json=nsrPulseQuant,proto3" json:"nsr_pulse_quant,omitempty"`
	NsrEventsInQ         uint32               `protobuf:"varint,2,opt,name=nsr_events_in_q,json=nsrEventsInQ,proto3" json:"nsr_events_in_q,omitempty"`
	NsrEventsTx          uint64               `protobuf:"varint,3,opt,name=nsr_events_tx,json=nsrEventsTx,proto3" json:"nsr_events_tx,omitempty"`
	NsrEventsRx          uint64               `protobuf:"varint,4,opt,name=nsr_events_rx,json=nsrEventsRx,proto3" json:"nsr_events_rx,omitempty"`
	NsrBadPulsesRx       uint64               `protobuf:"varint,5,opt,name=nsr_bad_pulses_rx,json=nsrBadPulsesRx,proto3" json:"nsr_bad_pulses_rx,omitempty"`
	NsrGoodPulsesRx      uint64               `protobuf:"varint,6,opt,name=nsr_good_pulses_rx,json=nsrGoodPulsesRx,proto3" json:"nsr_good_pulses_rx,omitempty"`
	NsrPulsesTx          uint64               `protobuf:"varint,7,opt,name=nsr_pulses_tx,json=nsrPulsesTx,proto3" json:"nsr_pulses_tx,omitempty"`
	NsrPulseTxFails      uint64               `protobuf:"varint,8,opt,name=nsr_pulse_tx_fails,json=nsrPulseTxFails,proto3" json:"nsr_pulse_tx_fails,omitempty"`
	NsrPri               []*OspfShNsrStatsPri `protobuf:"bytes,9,rep,name=nsr_pri,json=nsrPri,proto3" json:"nsr_pri,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *OspfShNsrSchedStats) Reset()         { *m = OspfShNsrSchedStats{} }
func (m *OspfShNsrSchedStats) String() string { return proto.CompactTextString(m) }
func (*OspfShNsrSchedStats) ProtoMessage()    {}
func (*OspfShNsrSchedStats) Descriptor() ([]byte, []int) {
	return fileDescriptor_8fee77c6427e3651, []int{2}
}

func (m *OspfShNsrSchedStats) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OspfShNsrSchedStats.Unmarshal(m, b)
}
func (m *OspfShNsrSchedStats) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OspfShNsrSchedStats.Marshal(b, m, deterministic)
}
func (m *OspfShNsrSchedStats) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OspfShNsrSchedStats.Merge(m, src)
}
func (m *OspfShNsrSchedStats) XXX_Size() int {
	return xxx_messageInfo_OspfShNsrSchedStats.Size(m)
}
func (m *OspfShNsrSchedStats) XXX_DiscardUnknown() {
	xxx_messageInfo_OspfShNsrSchedStats.DiscardUnknown(m)
}

var xxx_messageInfo_OspfShNsrSchedStats proto.InternalMessageInfo

func (m *OspfShNsrSchedStats) GetNsrPulseQuant() int32 {
	if m != nil {
		return m.NsrPulseQuant
	}
	return 0
}

func (m *OspfShNsrSchedStats) GetNsrEventsInQ() uint32 {
	if m != nil {
		return m.NsrEventsInQ
	}
	return 0
}

func (m *OspfShNsrSchedStats) GetNsrEventsTx() uint64 {
	if m != nil {
		return m.NsrEventsTx
	}
	return 0
}

func (m *OspfShNsrSchedStats) GetNsrEventsRx() uint64 {
	if m != nil {
		return m.NsrEventsRx
	}
	return 0
}

func (m *OspfShNsrSchedStats) GetNsrBadPulsesRx() uint64 {
	if m != nil {
		return m.NsrBadPulsesRx
	}
	return 0
}

func (m *OspfShNsrSchedStats) GetNsrGoodPulsesRx() uint64 {
	if m != nil {
		return m.NsrGoodPulsesRx
	}
	return 0
}

func (m *OspfShNsrSchedStats) GetNsrPulsesTx() uint64 {
	if m != nil {
		return m.NsrPulsesTx
	}
	return 0
}

func (m *OspfShNsrSchedStats) GetNsrPulseTxFails() uint64 {
	if m != nil {
		return m.NsrPulseTxFails
	}
	return 0
}

func (m *OspfShNsrSchedStats) GetNsrPri() []*OspfShNsrStatsPri {
	if m != nil {
		return m.NsrPri
	}
	return nil
}

type Ospfv3IssuMilestoneBag struct {
	MilestoneName        string   `protobuf:"bytes,1,opt,name=milestone_name,json=milestoneName,proto3" json:"milestone_name,omitempty"`
	MilestoneStatus      string   `protobuf:"bytes,2,opt,name=milestone_status,json=milestoneStatus,proto3" json:"milestone_status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Ospfv3IssuMilestoneBag) Reset()         { *m = Ospfv3IssuMilestoneBag{} }
func (m *Ospfv3IssuMilestoneBag) String() string { return proto.CompactTextString(m) }
func (*Ospfv3IssuMilestoneBag) ProtoMessage()    {}
func (*Ospfv3IssuMilestoneBag) Descriptor() ([]byte, []int) {
	return fileDescriptor_8fee77c6427e3651, []int{3}
}

func (m *Ospfv3IssuMilestoneBag) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Ospfv3IssuMilestoneBag.Unmarshal(m, b)
}
func (m *Ospfv3IssuMilestoneBag) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Ospfv3IssuMilestoneBag.Marshal(b, m, deterministic)
}
func (m *Ospfv3IssuMilestoneBag) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Ospfv3IssuMilestoneBag.Merge(m, src)
}
func (m *Ospfv3IssuMilestoneBag) XXX_Size() int {
	return xxx_messageInfo_Ospfv3IssuMilestoneBag.Size(m)
}
func (m *Ospfv3IssuMilestoneBag) XXX_DiscardUnknown() {
	xxx_messageInfo_Ospfv3IssuMilestoneBag.DiscardUnknown(m)
}

var xxx_messageInfo_Ospfv3IssuMilestoneBag proto.InternalMessageInfo

func (m *Ospfv3IssuMilestoneBag) GetMilestoneName() string {
	if m != nil {
		return m.MilestoneName
	}
	return ""
}

func (m *Ospfv3IssuMilestoneBag) GetMilestoneStatus() string {
	if m != nil {
		return m.MilestoneStatus
	}
	return ""
}

type Ospfv3EdmTime struct {
	Second               uint32   `protobuf:"varint,1,opt,name=second,proto3" json:"second,omitempty"`
	Nanosecond           uint32   `protobuf:"varint,2,opt,name=nanosecond,proto3" json:"nanosecond,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Ospfv3EdmTime) Reset()         { *m = Ospfv3EdmTime{} }
func (m *Ospfv3EdmTime) String() string { return proto.CompactTextString(m) }
func (*Ospfv3EdmTime) ProtoMessage()    {}
func (*Ospfv3EdmTime) Descriptor() ([]byte, []int) {
	return fileDescriptor_8fee77c6427e3651, []int{4}
}

func (m *Ospfv3EdmTime) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Ospfv3EdmTime.Unmarshal(m, b)
}
func (m *Ospfv3EdmTime) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Ospfv3EdmTime.Marshal(b, m, deterministic)
}
func (m *Ospfv3EdmTime) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Ospfv3EdmTime.Merge(m, src)
}
func (m *Ospfv3EdmTime) XXX_Size() int {
	return xxx_messageInfo_Ospfv3EdmTime.Size(m)
}
func (m *Ospfv3EdmTime) XXX_DiscardUnknown() {
	xxx_messageInfo_Ospfv3EdmTime.DiscardUnknown(m)
}

var xxx_messageInfo_Ospfv3EdmTime proto.InternalMessageInfo

func (m *Ospfv3EdmTime) GetSecond() uint32 {
	if m != nil {
		return m.Second
	}
	return 0
}

func (m *Ospfv3EdmTime) GetNanosecond() uint32 {
	if m != nil {
		return m.Nanosecond
	}
	return 0
}

type Ospfv3NsrErrInfoBag struct {
	ErrCount             int32          `protobuf:"zigzag32,1,opt,name=err_count,json=errCount,proto3" json:"err_count,omitempty"`
	LastErrTime          *Ospfv3EdmTime `protobuf:"bytes,2,opt,name=last_err_time,json=lastErrTime,proto3" json:"last_err_time,omitempty"`
	ErrInfoString        string         `protobuf:"bytes,3,opt,name=err_info_string,json=errInfoString,proto3" json:"err_info_string,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *Ospfv3NsrErrInfoBag) Reset()         { *m = Ospfv3NsrErrInfoBag{} }
func (m *Ospfv3NsrErrInfoBag) String() string { return proto.CompactTextString(m) }
func (*Ospfv3NsrErrInfoBag) ProtoMessage()    {}
func (*Ospfv3NsrErrInfoBag) Descriptor() ([]byte, []int) {
	return fileDescriptor_8fee77c6427e3651, []int{5}
}

func (m *Ospfv3NsrErrInfoBag) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Ospfv3NsrErrInfoBag.Unmarshal(m, b)
}
func (m *Ospfv3NsrErrInfoBag) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Ospfv3NsrErrInfoBag.Marshal(b, m, deterministic)
}
func (m *Ospfv3NsrErrInfoBag) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Ospfv3NsrErrInfoBag.Merge(m, src)
}
func (m *Ospfv3NsrErrInfoBag) XXX_Size() int {
	return xxx_messageInfo_Ospfv3NsrErrInfoBag.Size(m)
}
func (m *Ospfv3NsrErrInfoBag) XXX_DiscardUnknown() {
	xxx_messageInfo_Ospfv3NsrErrInfoBag.DiscardUnknown(m)
}

var xxx_messageInfo_Ospfv3NsrErrInfoBag proto.InternalMessageInfo

func (m *Ospfv3NsrErrInfoBag) GetErrCount() int32 {
	if m != nil {
		return m.ErrCount
	}
	return 0
}

func (m *Ospfv3NsrErrInfoBag) GetLastErrTime() *Ospfv3EdmTime {
	if m != nil {
		return m.LastErrTime
	}
	return nil
}

func (m *Ospfv3NsrErrInfoBag) GetErrInfoString() string {
	if m != nil {
		return m.ErrInfoString
	}
	return ""
}

type Ospfv3NsrErrBlockBag struct {
	NsrRevisionversion   uint32                 `protobuf:"varint,1,opt,name=nsr_revisionversion,json=nsrRevisionversion,proto3" json:"nsr_revisionversion,omitempty"`
	TotalErrors          int32                  `protobuf:"zigzag32,2,opt,name=total_errors,json=totalErrors,proto3" json:"total_errors,omitempty"`
	NsrErrorInfo         []*Ospfv3NsrErrInfoBag `protobuf:"bytes,3,rep,name=nsr_error_info,json=nsrErrorInfo,proto3" json:"nsr_error_info,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *Ospfv3NsrErrBlockBag) Reset()         { *m = Ospfv3NsrErrBlockBag{} }
func (m *Ospfv3NsrErrBlockBag) String() string { return proto.CompactTextString(m) }
func (*Ospfv3NsrErrBlockBag) ProtoMessage()    {}
func (*Ospfv3NsrErrBlockBag) Descriptor() ([]byte, []int) {
	return fileDescriptor_8fee77c6427e3651, []int{6}
}

func (m *Ospfv3NsrErrBlockBag) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Ospfv3NsrErrBlockBag.Unmarshal(m, b)
}
func (m *Ospfv3NsrErrBlockBag) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Ospfv3NsrErrBlockBag.Marshal(b, m, deterministic)
}
func (m *Ospfv3NsrErrBlockBag) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Ospfv3NsrErrBlockBag.Merge(m, src)
}
func (m *Ospfv3NsrErrBlockBag) XXX_Size() int {
	return xxx_messageInfo_Ospfv3NsrErrBlockBag.Size(m)
}
func (m *Ospfv3NsrErrBlockBag) XXX_DiscardUnknown() {
	xxx_messageInfo_Ospfv3NsrErrBlockBag.DiscardUnknown(m)
}

var xxx_messageInfo_Ospfv3NsrErrBlockBag proto.InternalMessageInfo

func (m *Ospfv3NsrErrBlockBag) GetNsrRevisionversion() uint32 {
	if m != nil {
		return m.NsrRevisionversion
	}
	return 0
}

func (m *Ospfv3NsrErrBlockBag) GetTotalErrors() int32 {
	if m != nil {
		return m.TotalErrors
	}
	return 0
}

func (m *Ospfv3NsrErrBlockBag) GetNsrErrorInfo() []*Ospfv3NsrErrInfoBag {
	if m != nil {
		return m.NsrErrorInfo
	}
	return nil
}

type Ospfv3EdmNsrStats struct {
	NsrRevision             int32                     `protobuf:"zigzag32,50,opt,name=nsr_revision,json=nsrRevision,proto3" json:"nsr_revision,omitempty"`
	NsrFsmState             int32                     `protobuf:"zigzag32,51,opt,name=nsr_fsm_state,json=nsrFsmState,proto3" json:"nsr_fsm_state,omitempty"`
	NsrFsmFlag              []string                  `protobuf:"bytes,52,rep,name=nsr_fsm_flag,json=nsrFsmFlag,proto3" json:"nsr_fsm_flag,omitempty"`
	NsrFsmRunningTimer      []string                  `protobuf:"bytes,53,rep,name=nsr_fsm_running_timer,json=nsrFsmRunningTimer,proto3" json:"nsr_fsm_running_timer,omitempty"`
	NsrVersion              uint32                    `protobuf:"varint,54,opt,name=nsr_version,json=nsrVersion,proto3" json:"nsr_version,omitempty"`
	NsrNodeId               uint32                    `protobuf:"varint,55,opt,name=nsr_node_id,json=nsrNodeId,proto3" json:"nsr_node_id,omitempty"`
	NsrPeerVersion          uint32                    `protobuf:"varint,56,opt,name=nsr_peer_version,json=nsrPeerVersion,proto3" json:"nsr_peer_version,omitempty"`
	NsrPeerNodeId           uint32                    `protobuf:"varint,57,opt,name=nsr_peer_node_id,json=nsrPeerNodeId,proto3" json:"nsr_peer_node_id,omitempty"`
	NsrMtu                  uint32                    `protobuf:"varint,58,opt,name=nsr_mtu,json=nsrMtu,proto3" json:"nsr_mtu,omitempty"`
	NsrNbrQadQid            uint32                    `protobuf:"varint,59,opt,name=nsr_nbr_qad_qid,json=nsrNbrQadQid,proto3" json:"nsr_nbr_qad_qid,omitempty"`
	NsrLsaQadQid            uint32                    `protobuf:"varint,60,opt,name=nsr_lsa_qad_qid,json=nsrLsaQadQid,proto3" json:"nsr_lsa_qad_qid,omitempty"`
	NsrNbrQadMdataCount     uint32                    `protobuf:"varint,61,opt,name=nsr_nbr_qad_mdata_count,json=nsrNbrQadMdataCount,proto3" json:"nsr_nbr_qad_mdata_count,omitempty"`
	NsrLsaQadMdataCount     uint32                    `protobuf:"varint,62,opt,name=nsr_lsa_qad_mdata_count,json=nsrLsaQadMdataCount,proto3" json:"nsr_lsa_qad_mdata_count,omitempty"`
	NsrNbrInitSyncPendCount int32                     `protobuf:"zigzag32,63,opt,name=nsr_nbr_init_sync_pend_count,json=nsrNbrInitSyncPendCount,proto3" json:"nsr_nbr_init_sync_pend_count,omitempty"`
	NsrLsaInitSyncPendCount int32                     `protobuf:"zigzag32,64,opt,name=nsr_lsa_init_sync_pend_count,json=nsrLsaInitSyncPendCount,proto3" json:"nsr_lsa_init_sync_pend_count,omitempty"`
	NsrNbrSeqNo             uint32                    `protobuf:"varint,65,opt,name=nsr_nbr_seq_no,json=nsrNbrSeqNo,proto3" json:"nsr_nbr_seq_no,omitempty"`
	NsrIntfSeqNo            uint32                    `protobuf:"varint,66,opt,name=nsr_intf_seq_no,json=nsrIntfSeqNo,proto3" json:"nsr_intf_seq_no,omitempty"`
	NsrTmrQuant             int32                     `protobuf:"zigzag32,67,opt,name=nsr_tmr_quant,json=nsrTmrQuant,proto3" json:"nsr_tmr_quant,omitempty"`
	NsrConnToActiveAttempts uint64                    `protobuf:"varint,68,opt,name=nsr_conn_to_active_attempts,json=nsrConnToActiveAttempts,proto3" json:"nsr_conn_to_active_attempts,omitempty"`
	NsrConnToActiveFails    uint64                    `protobuf:"varint,69,opt,name=nsr_conn_to_active_fails,json=nsrConnToActiveFails,proto3" json:"nsr_conn_to_active_fails,omitempty"`
	NsrConnToActiveOpens    uint64                    `protobuf:"varint,70,opt,name=nsr_conn_to_active_opens,json=nsrConnToActiveOpens,proto3" json:"nsr_conn_to_active_opens,omitempty"`
	NsrConnToActiveCloses   uint64                    `protobuf:"varint,71,opt,name=nsr_conn_to_active_closes,json=nsrConnToActiveCloses,proto3" json:"nsr_conn_to_active_closes,omitempty"`
	NsrConnToActiveErrors   uint64                    `protobuf:"varint,72,opt,name=nsr_conn_to_active_errors,json=nsrConnToActiveErrors,proto3" json:"nsr_conn_to_active_errors,omitempty"`
	NsrThdStats             *OspfShNsrSchedStats      `protobuf:"bytes,73,opt,name=nsr_thd_stats,json=nsrThdStats,proto3" json:"nsr_thd_stats,omitempty"`
	NsrRtrThdSched          *OspfShNsrSchedStats      `protobuf:"bytes,74,opt,name=nsr_rtr_thd_sched,json=nsrRtrThdSched,proto3" json:"nsr_rtr_thd_sched,omitempty"`
	NsrIssuMilestone        []*Ospfv3IssuMilestoneBag `protobuf:"bytes,75,rep,name=nsr_issu_milestone,json=nsrIssuMilestone,proto3" json:"nsr_issu_milestone,omitempty"`
	NsrErrHistory           []*Ospfv3NsrErrBlockBag   `protobuf:"bytes,76,rep,name=nsr_err_history,json=nsrErrHistory,proto3" json:"nsr_err_history,omitempty"`
	XXX_NoUnkeyedLiteral    struct{}                  `json:"-"`
	XXX_unrecognized        []byte                    `json:"-"`
	XXX_sizecache           int32                     `json:"-"`
}

func (m *Ospfv3EdmNsrStats) Reset()         { *m = Ospfv3EdmNsrStats{} }
func (m *Ospfv3EdmNsrStats) String() string { return proto.CompactTextString(m) }
func (*Ospfv3EdmNsrStats) ProtoMessage()    {}
func (*Ospfv3EdmNsrStats) Descriptor() ([]byte, []int) {
	return fileDescriptor_8fee77c6427e3651, []int{7}
}

func (m *Ospfv3EdmNsrStats) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Ospfv3EdmNsrStats.Unmarshal(m, b)
}
func (m *Ospfv3EdmNsrStats) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Ospfv3EdmNsrStats.Marshal(b, m, deterministic)
}
func (m *Ospfv3EdmNsrStats) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Ospfv3EdmNsrStats.Merge(m, src)
}
func (m *Ospfv3EdmNsrStats) XXX_Size() int {
	return xxx_messageInfo_Ospfv3EdmNsrStats.Size(m)
}
func (m *Ospfv3EdmNsrStats) XXX_DiscardUnknown() {
	xxx_messageInfo_Ospfv3EdmNsrStats.DiscardUnknown(m)
}

var xxx_messageInfo_Ospfv3EdmNsrStats proto.InternalMessageInfo

func (m *Ospfv3EdmNsrStats) GetNsrRevision() int32 {
	if m != nil {
		return m.NsrRevision
	}
	return 0
}

func (m *Ospfv3EdmNsrStats) GetNsrFsmState() int32 {
	if m != nil {
		return m.NsrFsmState
	}
	return 0
}

func (m *Ospfv3EdmNsrStats) GetNsrFsmFlag() []string {
	if m != nil {
		return m.NsrFsmFlag
	}
	return nil
}

func (m *Ospfv3EdmNsrStats) GetNsrFsmRunningTimer() []string {
	if m != nil {
		return m.NsrFsmRunningTimer
	}
	return nil
}

func (m *Ospfv3EdmNsrStats) GetNsrVersion() uint32 {
	if m != nil {
		return m.NsrVersion
	}
	return 0
}

func (m *Ospfv3EdmNsrStats) GetNsrNodeId() uint32 {
	if m != nil {
		return m.NsrNodeId
	}
	return 0
}

func (m *Ospfv3EdmNsrStats) GetNsrPeerVersion() uint32 {
	if m != nil {
		return m.NsrPeerVersion
	}
	return 0
}

func (m *Ospfv3EdmNsrStats) GetNsrPeerNodeId() uint32 {
	if m != nil {
		return m.NsrPeerNodeId
	}
	return 0
}

func (m *Ospfv3EdmNsrStats) GetNsrMtu() uint32 {
	if m != nil {
		return m.NsrMtu
	}
	return 0
}

func (m *Ospfv3EdmNsrStats) GetNsrNbrQadQid() uint32 {
	if m != nil {
		return m.NsrNbrQadQid
	}
	return 0
}

func (m *Ospfv3EdmNsrStats) GetNsrLsaQadQid() uint32 {
	if m != nil {
		return m.NsrLsaQadQid
	}
	return 0
}

func (m *Ospfv3EdmNsrStats) GetNsrNbrQadMdataCount() uint32 {
	if m != nil {
		return m.NsrNbrQadMdataCount
	}
	return 0
}

func (m *Ospfv3EdmNsrStats) GetNsrLsaQadMdataCount() uint32 {
	if m != nil {
		return m.NsrLsaQadMdataCount
	}
	return 0
}

func (m *Ospfv3EdmNsrStats) GetNsrNbrInitSyncPendCount() int32 {
	if m != nil {
		return m.NsrNbrInitSyncPendCount
	}
	return 0
}

func (m *Ospfv3EdmNsrStats) GetNsrLsaInitSyncPendCount() int32 {
	if m != nil {
		return m.NsrLsaInitSyncPendCount
	}
	return 0
}

func (m *Ospfv3EdmNsrStats) GetNsrNbrSeqNo() uint32 {
	if m != nil {
		return m.NsrNbrSeqNo
	}
	return 0
}

func (m *Ospfv3EdmNsrStats) GetNsrIntfSeqNo() uint32 {
	if m != nil {
		return m.NsrIntfSeqNo
	}
	return 0
}

func (m *Ospfv3EdmNsrStats) GetNsrTmrQuant() int32 {
	if m != nil {
		return m.NsrTmrQuant
	}
	return 0
}

func (m *Ospfv3EdmNsrStats) GetNsrConnToActiveAttempts() uint64 {
	if m != nil {
		return m.NsrConnToActiveAttempts
	}
	return 0
}

func (m *Ospfv3EdmNsrStats) GetNsrConnToActiveFails() uint64 {
	if m != nil {
		return m.NsrConnToActiveFails
	}
	return 0
}

func (m *Ospfv3EdmNsrStats) GetNsrConnToActiveOpens() uint64 {
	if m != nil {
		return m.NsrConnToActiveOpens
	}
	return 0
}

func (m *Ospfv3EdmNsrStats) GetNsrConnToActiveCloses() uint64 {
	if m != nil {
		return m.NsrConnToActiveCloses
	}
	return 0
}

func (m *Ospfv3EdmNsrStats) GetNsrConnToActiveErrors() uint64 {
	if m != nil {
		return m.NsrConnToActiveErrors
	}
	return 0
}

func (m *Ospfv3EdmNsrStats) GetNsrThdStats() *OspfShNsrSchedStats {
	if m != nil {
		return m.NsrThdStats
	}
	return nil
}

func (m *Ospfv3EdmNsrStats) GetNsrRtrThdSched() *OspfShNsrSchedStats {
	if m != nil {
		return m.NsrRtrThdSched
	}
	return nil
}

func (m *Ospfv3EdmNsrStats) GetNsrIssuMilestone() []*Ospfv3IssuMilestoneBag {
	if m != nil {
		return m.NsrIssuMilestone
	}
	return nil
}

func (m *Ospfv3EdmNsrStats) GetNsrErrHistory() []*Ospfv3NsrErrBlockBag {
	if m != nil {
		return m.NsrErrHistory
	}
	return nil
}

func init() {
	proto.RegisterType((*Ospfv3EdmNsrStats_KEYS)(nil), "cisco_ios_xr_ipv6_ospfv3_oper.ospfv3.processes.process.statistics.issu_stats.ospfv3_edm_nsr_stats_KEYS")
	proto.RegisterType((*OspfShNsrStatsPri)(nil), "cisco_ios_xr_ipv6_ospfv3_oper.ospfv3.processes.process.statistics.issu_stats.ospf_sh_nsr_stats_pri")
	proto.RegisterType((*OspfShNsrSchedStats)(nil), "cisco_ios_xr_ipv6_ospfv3_oper.ospfv3.processes.process.statistics.issu_stats.ospf_sh_nsr_sched_stats")
	proto.RegisterType((*Ospfv3IssuMilestoneBag)(nil), "cisco_ios_xr_ipv6_ospfv3_oper.ospfv3.processes.process.statistics.issu_stats.ospfv3_issu_milestone_bag")
	proto.RegisterType((*Ospfv3EdmTime)(nil), "cisco_ios_xr_ipv6_ospfv3_oper.ospfv3.processes.process.statistics.issu_stats.ospfv3_edm_time")
	proto.RegisterType((*Ospfv3NsrErrInfoBag)(nil), "cisco_ios_xr_ipv6_ospfv3_oper.ospfv3.processes.process.statistics.issu_stats.ospfv3_nsr_err_info_bag")
	proto.RegisterType((*Ospfv3NsrErrBlockBag)(nil), "cisco_ios_xr_ipv6_ospfv3_oper.ospfv3.processes.process.statistics.issu_stats.ospfv3_nsr_err_block_bag")
	proto.RegisterType((*Ospfv3EdmNsrStats)(nil), "cisco_ios_xr_ipv6_ospfv3_oper.ospfv3.processes.process.statistics.issu_stats.ospfv3_edm_nsr_stats")
}

func init() { proto.RegisterFile("ospfv3_edm_nsr_stats.proto", fileDescriptor_8fee77c6427e3651) }

var fileDescriptor_8fee77c6427e3651 = []byte{
	// 1266 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x57, 0x5f, 0x6f, 0x5b, 0x35,
	0x14, 0xd7, 0xa5, 0x5b, 0xb7, 0x38, 0xcb, 0xba, 0x79, 0x7f, 0xea, 0x31, 0x34, 0x4a, 0xd0, 0xb6,
	0x0e, 0x44, 0x10, 0xeb, 0x18, 0x03, 0xb6, 0xc1, 0xd6, 0xa5, 0x5b, 0x58, 0x5b, 0x9a, 0x9b, 0x0a,
	0x89, 0x07, 0x64, 0x39, 0xf7, 0x3a, 0xa9, 0xb5, 0x5c, 0x3b, 0xb1, 0x9d, 0x28, 0x95, 0x78, 0xe1,
	0x11, 0x21, 0x21, 0x5e, 0xf8, 0x06, 0x7c, 0x27, 0xde, 0xf9, 0x06, 0xbc, 0xf3, 0x80, 0x7c, 0xec,
	0x7b, 0x73, 0x93, 0x85, 0xb7, 0x95, 0xa7, 0xe6, 0x1e, 0xff, 0x7e, 0xe7, 0xaf, 0xcf, 0x39, 0x2e,
	0x7a, 0x5b, 0x99, 0x61, 0x6f, 0xb2, 0x45, 0x79, 0x9a, 0x51, 0x69, 0x34, 0x35, 0x96, 0x59, 0xd3,
	0x18, 0x6a, 0x65, 0x15, 0xde, 0x4d, 0x84, 0x49, 0x14, 0x15, 0xca, 0xd0, 0xa9, 0xa6, 0x62, 0x38,
	0xb9, 0x4f, 0x03, 0x5a, 0x0d, 0xb9, 0x6e, 0xf8, 0xdf, 0x0e, 0x9b, 0x70, 0x63, 0xb8, 0xc9, 0x7f,
	0x35, 0x9c, 0x0e, 0x61, 0xac, 0x48, 0x4c, 0x43, 0x18, 0x33, 0xf6, 0x3a, 0xeb, 0x8f, 0xd1, 0xb5,
	0x65, 0xb6, 0xe8, 0xcb, 0xe6, 0xf7, 0x1d, 0xfc, 0x1e, 0x3a, 0x17, 0xd8, 0x54, 0xb2, 0x8c, 0x93,
	0x68, 0x23, 0xda, 0xac, 0xc4, 0xd5, 0x20, 0xdb, 0x67, 0x19, 0xaf, 0xff, 0xb1, 0x82, 0xae, 0x38,
	0x05, 0xd4, 0x1c, 0x95, 0xd8, 0x43, 0x2d, 0x70, 0x1d, 0xd5, 0x40, 0x90, 0x1c, 0xf1, 0xd4, 0x09,
	0x72, 0xb6, 0x34, 0xba, 0xe3, 0x64, 0x07, 0x5a, 0xe0, 0x5b, 0x68, 0x6d, 0x86, 0x19, 0x8d, 0x99,
	0xb4, 0xe4, 0xad, 0x8d, 0x68, 0xb3, 0x16, 0xd7, 0x72, 0x54, 0xdb, 0x09, 0xf1, 0x16, 0xba, 0x3a,
	0xc3, 0x69, 0x9e, 0x31, 0x21, 0x03, 0x7c, 0x05, 0xe0, 0x97, 0x72, 0x78, 0x0c, 0x67, 0x9e, 0xf4,
	0x01, 0xc2, 0x33, 0x12, 0x9f, 0x18, 0xea, 0x48, 0xe4, 0x14, 0x10, 0xce, 0xe7, 0x84, 0xe6, 0xc4,
	0xb4, 0x64, 0x1b, 0xdf, 0x41, 0x17, 0x67, 0xd8, 0x8c, 0x4d, 0x1d, 0x9e, 0x9c, 0x9e, 0x87, 0xee,
	0xb1, 0x69, 0x73, 0x62, 0x70, 0x03, 0x5d, 0x2e, 0xc5, 0xc5, 0xd9, 0x2b, 0x3a, 0xa2, 0x03, 0x2e,
	0xc9, 0x2a, 0xa0, 0x2f, 0x14, 0xe1, 0x71, 0xf6, 0xaa, 0xbd, 0xcb, 0x25, 0xbe, 0x8d, 0x2e, 0xcc,
	0xbb, 0x31, 0x4a, 0xc9, 0x99, 0x8d, 0x68, 0xf3, 0xd4, 0x2c, 0xc8, 0xe6, 0xc4, 0xb4, 0x53, 0xfc,
	0x11, 0xba, 0x54, 0x02, 0xca, 0x11, 0xed, 0x31, 0x31, 0x30, 0xe4, 0x2c, 0x60, 0x0b, 0xbd, 0x4d,
	0x39, 0xda, 0x71, 0x72, 0xfc, 0xe1, 0x62, 0x78, 0x29, 0x1f, 0xa5, 0xa4, 0x02, 0xe8, 0xb5, 0x92,
	0xe6, 0x67, 0x7c, 0x94, 0xd6, 0xff, 0x5c, 0x41, 0xeb, 0x73, 0x65, 0x02, 0x16, 0x14, 0x2b, 0x2f,
	0xc2, 0x70, 0x3c, 0x30, 0x3c, 0x64, 0xd5, 0x95, 0xea, 0x22, 0xf8, 0x77, 0xe0, 0xa4, 0x3e, 0x9f,
	0x37, 0x3d, 0x8e, 0x4f, 0xb8, 0xb4, 0x21, 0x99, 0xbe, 0x58, 0xe7, 0xa4, 0xd1, 0x4d, 0x90, 0xba,
	0x54, 0x86, 0xba, 0x07, 0x98, 0x9d, 0x42, 0x89, 0x4e, 0x41, 0xdd, 0x3d, 0xe8, 0x70, 0xba, 0x80,
	0xd1, 0x53, 0xa8, 0x4a, 0x19, 0x13, 0x4f, 0xf3, 0x92, 0x74, 0x59, 0xea, 0x5d, 0x03, 0xdc, 0x69,
	0xc0, 0xb9, 0x92, 0x3c, 0x65, 0x29, 0xf8, 0xe6, 0xa0, 0x21, 0x15, 0x7d, 0xa5, 0xca, 0xd8, 0xd5,
	0x22, 0x15, 0xcf, 0x95, 0x9a, 0x81, 0x83, 0xed, 0x80, 0xb3, 0xd3, 0x50, 0x8c, 0x6a, 0x1e, 0xac,
	0xf3, 0x2f, 0x28, 0xf4, 0x29, 0xb1, 0xd3, 0xb9, 0x4a, 0xac, 0xe5, 0xc0, 0xc3, 0xa9, 0x2f, 0xc4,
	0x8f, 0xe8, 0x0c, 0x80, 0xb5, 0x20, 0x95, 0x8d, 0x95, 0xcd, 0xea, 0xdd, 0xa4, 0xf1, 0x26, 0x5b,
	0xb4, 0xb1, 0xb4, 0xbd, 0xe2, 0x55, 0xe7, 0x86, 0x16, 0xf5, 0xac, 0x68, 0x60, 0xa0, 0x64, 0x62,
	0xc0, 0x8d, 0x55, 0x92, 0xd3, 0x2e, 0xeb, 0xe3, 0x9b, 0xe8, 0xfc, 0x4c, 0x50, 0x6a, 0xe1, 0x5a,
	0x21, 0x75, 0x4d, 0x8c, 0xef, 0xa0, 0x0b, 0x33, 0x98, 0x33, 0x31, 0x36, 0x50, 0xda, 0x4a, 0xbc,
	0x56, 0xc8, 0x3b, 0x20, 0xae, 0xb7, 0xd0, 0x5a, 0x69, 0x5e, 0x58, 0x91, 0x71, 0x7c, 0x15, 0xad,
	0x1a, 0x9e, 0x28, 0x99, 0x82, 0xf2, 0x5a, 0x1c, 0xbe, 0xf0, 0x0d, 0x84, 0x24, 0x93, 0x2a, 0x9c,
	0xf9, 0xab, 0x52, 0x92, 0xd4, 0xff, 0x8a, 0xfc, 0x9d, 0x9c, 0x6c, 0x41, 0x68, 0x5c, 0x6b, 0x2a,
	0x64, 0x4f, 0x81, 0xe3, 0xd7, 0x51, 0xc5, 0x7d, 0x27, 0x6a, 0x5c, 0xdc, 0xc6, 0xb3, 0x5c, 0xeb,
	0x6d, 0xf7, 0x8d, 0x7f, 0x8a, 0x50, 0x6d, 0xc0, 0x8c, 0x05, 0x8a, 0x73, 0x01, 0x94, 0x57, 0xef,
	0xfe, 0xf0, 0xe6, 0xf3, 0x5e, 0x8a, 0x33, 0xae, 0x3a, 0x9b, 0x4d, 0xad, 0x0f, 0x5d, 0xd0, 0xb7,
	0xd0, 0x5a, 0xe1, 0xb0, 0xb1, 0x5a, 0xc8, 0x3e, 0xdc, 0xf3, 0x4a, 0x5c, 0xe3, 0x5a, 0xb7, 0x64,
	0x4f, 0x75, 0x40, 0x58, 0xff, 0x27, 0x42, 0x64, 0x21, 0xc8, 0xee, 0x40, 0x25, 0xaf, 0x20, 0xca,
	0x8f, 0x7d, 0xc7, 0x6b, 0x3e, 0x11, 0x46, 0x28, 0x39, 0xe1, 0xda, 0xfd, 0x09, 0x69, 0x74, 0x37,
	0x30, 0x9e, 0x3f, 0x71, 0x03, 0xd9, 0x2a, 0xcb, 0x06, 0x4e, 0x8f, 0xd2, 0xbe, 0x48, 0x17, 0xe3,
	0x2a, 0xc8, 0x9a, 0x20, 0xc2, 0xbf, 0x44, 0xe8, 0x7c, 0xb0, 0xa4, 0xbc, 0x7f, 0x64, 0x05, 0x6e,
	0x25, 0x3f, 0x91, 0xec, 0x2c, 0x56, 0xce, 0x0f, 0x03, 0x67, 0xdb, 0x25, 0xa1, 0xfe, 0xf7, 0x39,
	0x74, 0x79, 0xd9, 0x7e, 0x71, 0x91, 0x94, 0x43, 0x27, 0x77, 0x7d, 0x24, 0xa5, 0x98, 0xf3, 0x46,
	0xed, 0x99, 0x0c, 0x38, 0x9c, 0x6c, 0x15, 0x98, 0x1d, 0x93, 0xb9, 0xfb, 0xc8, 0xf1, 0x86, 0x57,
	0xe3, 0x30, 0xbd, 0x01, 0xeb, 0x93, 0x7b, 0x1b, 0x2b, 0x9b, 0x95, 0x18, 0x79, 0xc8, 0xce, 0x80,
	0xf5, 0xf1, 0x27, 0xe8, 0x4a, 0x8e, 0xd0, 0x63, 0x29, 0x85, 0xec, 0x43, 0x35, 0x35, 0xf9, 0x14,
	0xa0, 0xd8, 0x43, 0x63, 0x7f, 0xe4, 0x4a, 0xab, 0xf1, 0xbb, 0xc8, 0xd9, 0xa0, 0x79, 0x39, 0xee,
	0x87, 0x9b, 0x6b, 0xf4, 0x77, 0xa1, 0x0c, 0x37, 0x3c, 0x40, 0xaa, 0x94, 0x53, 0x91, 0x92, 0xcf,
	0x00, 0x50, 0x91, 0x46, 0xef, 0xab, 0x94, 0xb7, 0x52, 0xbc, 0xe9, 0x47, 0xfe, 0x90, 0xf3, 0x99,
	0x96, 0x07, 0xc5, 0x32, 0x39, 0xe0, 0xbc, 0xd0, 0x74, 0xbb, 0x84, 0xcc, 0xd5, 0x7d, 0x5e, 0x6c,
	0x40, 0x87, 0x0c, 0x2a, 0xd7, 0xfd, 0x90, 0xc9, 0xec, 0x98, 0x7c, 0xe1, 0xbb, 0x4c, 0x1a, 0xbd,
	0x67, 0xc7, 0xf9, 0x54, 0x96, 0x5d, 0x4d, 0x47, 0x2c, 0xa5, 0x23, 0x91, 0x92, 0x2f, 0x8b, 0xa9,
	0xbc, 0xdf, 0xd5, 0x6d, 0x96, 0xb6, 0x45, 0x9a, 0xc3, 0x06, 0x86, 0x15, 0xb0, 0x87, 0x05, 0x6c,
	0xd7, 0xb0, 0x00, 0xbb, 0x87, 0xd6, 0xcb, 0xda, 0xb2, 0x94, 0x59, 0x16, 0xba, 0xf0, 0x51, 0xb1,
	0x69, 0xbd, 0xd6, 0x3d, 0x77, 0xe6, 0x1b, 0x32, 0xb0, 0x72, 0xe5, 0x65, 0xd6, 0xe3, 0x82, 0xe5,
	0x8d, 0x94, 0x58, 0x8f, 0xd0, 0x3b, 0xb9, 0x2d, 0x21, 0x85, 0xa5, 0xe6, 0x58, 0x26, 0x74, 0xc8,
	0x65, 0x1a, 0xa8, 0x5f, 0x41, 0xb9, 0xd7, 0xbd, 0xc1, 0x96, 0x14, 0xb6, 0x73, 0x2c, 0x93, 0x03,
	0x2e, 0xd3, 0x39, 0xba, 0x33, 0xba, 0x94, 0xfe, 0x75, 0x41, 0xdf, 0x35, 0xec, 0x75, 0xfa, 0xfb,
	0xbe, 0x4d, 0x9c, 0x75, 0xc3, 0x47, 0x54, 0x2a, 0xf2, 0x04, 0x5c, 0xad, 0x7a, 0x7b, 0x1d, 0x3e,
	0xda, 0x57, 0x79, 0xd6, 0x84, 0xb4, 0xbd, 0x1c, 0xf5, 0xb4, 0xc8, 0x5a, 0x4b, 0xda, 0x9e, 0x87,
	0x85, 0x9b, 0x6a, 0x33, 0x1d, 0xf6, 0xe7, 0x76, 0x71, 0x53, 0x0f, 0x33, 0xed, 0xb7, 0xe7, 0x43,
	0x74, 0xdd, 0x61, 0x12, 0x25, 0x25, 0xb5, 0x8a, 0xb2, 0xc4, 0x8a, 0x09, 0xa7, 0xcc, 0x5a, 0x9e,
	0x0d, 0xad, 0x21, 0xcf, 0x60, 0xb7, 0x38, 0x6f, 0xb7, 0x95, 0x94, 0x87, 0xea, 0x09, 0x9c, 0x3f,
	0x09, 0xc7, 0xf8, 0x3e, 0x22, 0x4b, 0xd8, 0x7e, 0x2d, 0x35, 0x81, 0x7a, 0x79, 0x81, 0xea, 0x77,
	0xd3, 0x72, 0x9e, 0x1a, 0x72, 0x69, 0xc8, 0xce, 0x52, 0xde, 0xb7, 0xee, 0x0c, 0x3f, 0x40, 0xd7,
	0x96, 0xf0, 0x92, 0x81, 0x32, 0xdc, 0x90, 0xe7, 0x40, 0xbc, 0xb2, 0x40, 0xdc, 0x86, 0xc3, 0xff,
	0x60, 0x86, 0x79, 0xf5, 0x62, 0x29, 0x33, 0x4c, 0xae, 0x9f, 0xa3, 0x90, 0xc6, 0xa3, 0xf0, 0x32,
	0x21, 0x2d, 0x18, 0xeb, 0xfc, 0x04, 0xd7, 0xe9, 0xec, 0x19, 0xe4, 0xab, 0x75, 0x94, 0x76, 0x60,
	0x3c, 0xfd, 0x16, 0xf9, 0xd7, 0x87, 0xb6, 0xc1, 0x1f, 0x07, 0x24, 0xdf, 0xfc, 0x9f, 0xfe, 0xb8,
	0xeb, 0x19, 0x5b, 0x70, 0xc9, 0x49, 0xf1, 0xef, 0x91, 0x7f, 0x94, 0xcc, 0xaf, 0x79, 0xf2, 0x12,
	0x86, 0x7b, 0xff, 0x44, 0x86, 0xfb, 0xeb, 0x2f, 0x0a, 0x78, 0x87, 0xb6, 0x8c, 0x19, 0xef, 0xe5,
	0x52, 0xfc, 0x6b, 0x14, 0xde, 0x85, 0x5a, 0xd3, 0x23, 0x61, 0xac, 0xd2, 0xc7, 0x64, 0x17, 0x9c,
	0xea, 0x9d, 0xe8, 0xc6, 0x29, 0xd6, 0x28, 0x8c, 0xca, 0xa6, 0xd6, 0x2f, 0xbc, 0xf1, 0xee, 0x2a,
	0xfc, 0x9f, 0xb4, 0xf5, 0x6f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x45, 0x34, 0xdd, 0x7e, 0x45, 0x0d,
	0x00, 0x00,
}
