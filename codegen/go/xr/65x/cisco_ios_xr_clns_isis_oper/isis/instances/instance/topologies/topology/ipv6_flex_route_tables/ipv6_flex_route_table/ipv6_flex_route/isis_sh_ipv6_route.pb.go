/*
Copyright 2019 Cisco Systems

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: isis_sh_ipv6_route.proto

package cisco_ios_xr_clns_isis_oper_isis_instances_instance_topologies_topology_ipv6_flex_route_tables_ipv6_flex_route_table_ipv6_flex_route

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type IsisShIpv6Route_KEYS struct {
	InstanceName         string   `protobuf:"bytes,1,opt,name=instance_name,json=instanceName,proto3" json:"instance_name,omitempty"`
	AfName               string   `protobuf:"bytes,2,opt,name=af_name,json=afName,proto3" json:"af_name,omitempty"`
	SafName              string   `protobuf:"bytes,3,opt,name=saf_name,json=safName,proto3" json:"saf_name,omitempty"`
	TopologyName         string   `protobuf:"bytes,4,opt,name=topology_name,json=topologyName,proto3" json:"topology_name,omitempty"`
	FlexAlg              uint32   `protobuf:"varint,5,opt,name=flex_alg,json=flexAlg,proto3" json:"flex_alg,omitempty"`
	Prefix               string   `protobuf:"bytes,6,opt,name=prefix,proto3" json:"prefix,omitempty"`
	PrefixLength         uint32   `protobuf:"varint,7,opt,name=prefix_length,json=prefixLength,proto3" json:"prefix_length,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IsisShIpv6Route_KEYS) Reset()         { *m = IsisShIpv6Route_KEYS{} }
func (m *IsisShIpv6Route_KEYS) String() string { return proto.CompactTextString(m) }
func (*IsisShIpv6Route_KEYS) ProtoMessage()    {}
func (*IsisShIpv6Route_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_5729880b73ebcb3c, []int{0}
}

func (m *IsisShIpv6Route_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IsisShIpv6Route_KEYS.Unmarshal(m, b)
}
func (m *IsisShIpv6Route_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IsisShIpv6Route_KEYS.Marshal(b, m, deterministic)
}
func (m *IsisShIpv6Route_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IsisShIpv6Route_KEYS.Merge(m, src)
}
func (m *IsisShIpv6Route_KEYS) XXX_Size() int {
	return xxx_messageInfo_IsisShIpv6Route_KEYS.Size(m)
}
func (m *IsisShIpv6Route_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_IsisShIpv6Route_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_IsisShIpv6Route_KEYS proto.InternalMessageInfo

func (m *IsisShIpv6Route_KEYS) GetInstanceName() string {
	if m != nil {
		return m.InstanceName
	}
	return ""
}

func (m *IsisShIpv6Route_KEYS) GetAfName() string {
	if m != nil {
		return m.AfName
	}
	return ""
}

func (m *IsisShIpv6Route_KEYS) GetSafName() string {
	if m != nil {
		return m.SafName
	}
	return ""
}

func (m *IsisShIpv6Route_KEYS) GetTopologyName() string {
	if m != nil {
		return m.TopologyName
	}
	return ""
}

func (m *IsisShIpv6Route_KEYS) GetFlexAlg() uint32 {
	if m != nil {
		return m.FlexAlg
	}
	return 0
}

func (m *IsisShIpv6Route_KEYS) GetPrefix() string {
	if m != nil {
		return m.Prefix
	}
	return ""
}

func (m *IsisShIpv6Route_KEYS) GetPrefixLength() uint32 {
	if m != nil {
		return m.PrefixLength
	}
	return 0
}

type IsisShRouteConnDetails struct {
	Interface            []string `protobuf:"bytes,1,rep,name=interface,proto3" json:"interface,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IsisShRouteConnDetails) Reset()         { *m = IsisShRouteConnDetails{} }
func (m *IsisShRouteConnDetails) String() string { return proto.CompactTextString(m) }
func (*IsisShRouteConnDetails) ProtoMessage()    {}
func (*IsisShRouteConnDetails) Descriptor() ([]byte, []int) {
	return fileDescriptor_5729880b73ebcb3c, []int{1}
}

func (m *IsisShRouteConnDetails) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IsisShRouteConnDetails.Unmarshal(m, b)
}
func (m *IsisShRouteConnDetails) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IsisShRouteConnDetails.Marshal(b, m, deterministic)
}
func (m *IsisShRouteConnDetails) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IsisShRouteConnDetails.Merge(m, src)
}
func (m *IsisShRouteConnDetails) XXX_Size() int {
	return xxx_messageInfo_IsisShRouteConnDetails.Size(m)
}
func (m *IsisShRouteConnDetails) XXX_DiscardUnknown() {
	xxx_messageInfo_IsisShRouteConnDetails.DiscardUnknown(m)
}

var xxx_messageInfo_IsisShRouteConnDetails proto.InternalMessageInfo

func (m *IsisShRouteConnDetails) GetInterface() []string {
	if m != nil {
		return m.Interface
	}
	return nil
}

type IsisShRouteConnStatus struct {
	IsValid              string                  `protobuf:"bytes,1,opt,name=is_valid,json=isValid,proto3" json:"is_valid,omitempty"`
	ConnectedDetails     *IsisShRouteConnDetails `protobuf:"bytes,2,opt,name=connected_details,json=connectedDetails,proto3" json:"connected_details,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *IsisShRouteConnStatus) Reset()         { *m = IsisShRouteConnStatus{} }
func (m *IsisShRouteConnStatus) String() string { return proto.CompactTextString(m) }
func (*IsisShRouteConnStatus) ProtoMessage()    {}
func (*IsisShRouteConnStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_5729880b73ebcb3c, []int{2}
}

func (m *IsisShRouteConnStatus) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IsisShRouteConnStatus.Unmarshal(m, b)
}
func (m *IsisShRouteConnStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IsisShRouteConnStatus.Marshal(b, m, deterministic)
}
func (m *IsisShRouteConnStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IsisShRouteConnStatus.Merge(m, src)
}
func (m *IsisShRouteConnStatus) XXX_Size() int {
	return xxx_messageInfo_IsisShRouteConnStatus.Size(m)
}
func (m *IsisShRouteConnStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_IsisShRouteConnStatus.DiscardUnknown(m)
}

var xxx_messageInfo_IsisShRouteConnStatus proto.InternalMessageInfo

func (m *IsisShRouteConnStatus) GetIsValid() string {
	if m != nil {
		return m.IsValid
	}
	return ""
}

func (m *IsisShRouteConnStatus) GetConnectedDetails() *IsisShRouteConnDetails {
	if m != nil {
		return m.ConnectedDetails
	}
	return nil
}

type IsisShRedistEntryProto struct {
	Protocol             string   `protobuf:"bytes,1,opt,name=protocol,proto3" json:"protocol,omitempty"`
	IsisInstanceId       string   `protobuf:"bytes,2,opt,name=isis_instance_id,json=isisInstanceId,proto3" json:"isis_instance_id,omitempty"`
	OspfProcessId        string   `protobuf:"bytes,3,opt,name=ospf_process_id,json=ospfProcessId,proto3" json:"ospf_process_id,omitempty"`
	Ospfv3ProcessId      string   `protobuf:"bytes,4,opt,name=ospfv3_process_id,json=ospfv3ProcessId,proto3" json:"ospfv3_process_id,omitempty"`
	BgpAsNumber          string   `protobuf:"bytes,5,opt,name=bgp_as_number,json=bgpAsNumber,proto3" json:"bgp_as_number,omitempty"`
	EigrpAsNumber        string   `protobuf:"bytes,6,opt,name=eigrp_as_number,json=eigrpAsNumber,proto3" json:"eigrp_as_number,omitempty"`
	ApplicationName      string   `protobuf:"bytes,7,opt,name=application_name,json=applicationName,proto3" json:"application_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IsisShRedistEntryProto) Reset()         { *m = IsisShRedistEntryProto{} }
func (m *IsisShRedistEntryProto) String() string { return proto.CompactTextString(m) }
func (*IsisShRedistEntryProto) ProtoMessage()    {}
func (*IsisShRedistEntryProto) Descriptor() ([]byte, []int) {
	return fileDescriptor_5729880b73ebcb3c, []int{3}
}

func (m *IsisShRedistEntryProto) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IsisShRedistEntryProto.Unmarshal(m, b)
}
func (m *IsisShRedistEntryProto) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IsisShRedistEntryProto.Marshal(b, m, deterministic)
}
func (m *IsisShRedistEntryProto) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IsisShRedistEntryProto.Merge(m, src)
}
func (m *IsisShRedistEntryProto) XXX_Size() int {
	return xxx_messageInfo_IsisShRedistEntryProto.Size(m)
}
func (m *IsisShRedistEntryProto) XXX_DiscardUnknown() {
	xxx_messageInfo_IsisShRedistEntryProto.DiscardUnknown(m)
}

var xxx_messageInfo_IsisShRedistEntryProto proto.InternalMessageInfo

func (m *IsisShRedistEntryProto) GetProtocol() string {
	if m != nil {
		return m.Protocol
	}
	return ""
}

func (m *IsisShRedistEntryProto) GetIsisInstanceId() string {
	if m != nil {
		return m.IsisInstanceId
	}
	return ""
}

func (m *IsisShRedistEntryProto) GetOspfProcessId() string {
	if m != nil {
		return m.OspfProcessId
	}
	return ""
}

func (m *IsisShRedistEntryProto) GetOspfv3ProcessId() string {
	if m != nil {
		return m.Ospfv3ProcessId
	}
	return ""
}

func (m *IsisShRedistEntryProto) GetBgpAsNumber() string {
	if m != nil {
		return m.BgpAsNumber
	}
	return ""
}

func (m *IsisShRedistEntryProto) GetEigrpAsNumber() string {
	if m != nil {
		return m.EigrpAsNumber
	}
	return ""
}

func (m *IsisShRedistEntryProto) GetApplicationName() string {
	if m != nil {
		return m.ApplicationName
	}
	return ""
}

type IsisShRouteRedistLevelDetails struct {
	Level                string                  `protobuf:"bytes,1,opt,name=level,proto3" json:"level,omitempty"`
	Owner                *IsisShRedistEntryProto `protobuf:"bytes,2,opt,name=owner,proto3" json:"owner,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *IsisShRouteRedistLevelDetails) Reset()         { *m = IsisShRouteRedistLevelDetails{} }
func (m *IsisShRouteRedistLevelDetails) String() string { return proto.CompactTextString(m) }
func (*IsisShRouteRedistLevelDetails) ProtoMessage()    {}
func (*IsisShRouteRedistLevelDetails) Descriptor() ([]byte, []int) {
	return fileDescriptor_5729880b73ebcb3c, []int{4}
}

func (m *IsisShRouteRedistLevelDetails) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IsisShRouteRedistLevelDetails.Unmarshal(m, b)
}
func (m *IsisShRouteRedistLevelDetails) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IsisShRouteRedistLevelDetails.Marshal(b, m, deterministic)
}
func (m *IsisShRouteRedistLevelDetails) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IsisShRouteRedistLevelDetails.Merge(m, src)
}
func (m *IsisShRouteRedistLevelDetails) XXX_Size() int {
	return xxx_messageInfo_IsisShRouteRedistLevelDetails.Size(m)
}
func (m *IsisShRouteRedistLevelDetails) XXX_DiscardUnknown() {
	xxx_messageInfo_IsisShRouteRedistLevelDetails.DiscardUnknown(m)
}

var xxx_messageInfo_IsisShRouteRedistLevelDetails proto.InternalMessageInfo

func (m *IsisShRouteRedistLevelDetails) GetLevel() string {
	if m != nil {
		return m.Level
	}
	return ""
}

func (m *IsisShRouteRedistLevelDetails) GetOwner() *IsisShRedistEntryProto {
	if m != nil {
		return m.Owner
	}
	return nil
}

type IsisShRouteRedistStatus struct {
	IsValid               string                           `protobuf:"bytes,1,opt,name=is_valid,json=isValid,proto3" json:"is_valid,omitempty"`
	RedistributionDetails []*IsisShRouteRedistLevelDetails `protobuf:"bytes,2,rep,name=redistribution_details,json=redistributionDetails,proto3" json:"redistribution_details,omitempty"`
	XXX_NoUnkeyedLiteral  struct{}                         `json:"-"`
	XXX_unrecognized      []byte                           `json:"-"`
	XXX_sizecache         int32                            `json:"-"`
}

func (m *IsisShRouteRedistStatus) Reset()         { *m = IsisShRouteRedistStatus{} }
func (m *IsisShRouteRedistStatus) String() string { return proto.CompactTextString(m) }
func (*IsisShRouteRedistStatus) ProtoMessage()    {}
func (*IsisShRouteRedistStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_5729880b73ebcb3c, []int{5}
}

func (m *IsisShRouteRedistStatus) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IsisShRouteRedistStatus.Unmarshal(m, b)
}
func (m *IsisShRouteRedistStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IsisShRouteRedistStatus.Marshal(b, m, deterministic)
}
func (m *IsisShRouteRedistStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IsisShRouteRedistStatus.Merge(m, src)
}
func (m *IsisShRouteRedistStatus) XXX_Size() int {
	return xxx_messageInfo_IsisShRouteRedistStatus.Size(m)
}
func (m *IsisShRouteRedistStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_IsisShRouteRedistStatus.DiscardUnknown(m)
}

var xxx_messageInfo_IsisShRouteRedistStatus proto.InternalMessageInfo

func (m *IsisShRouteRedistStatus) GetIsValid() string {
	if m != nil {
		return m.IsValid
	}
	return ""
}

func (m *IsisShRouteRedistStatus) GetRedistributionDetails() []*IsisShRouteRedistLevelDetails {
	if m != nil {
		return m.RedistributionDetails
	}
	return nil
}

type IsisShRepEl struct {
	RepairElementNodeId  string   `protobuf:"bytes,1,opt,name=repair_element_node_id,json=repairElementNodeId,proto3" json:"repair_element_node_id,omitempty"`
	RepairIpv4Addr       string   `protobuf:"bytes,2,opt,name=repair_ipv4_addr,json=repairIpv4Addr,proto3" json:"repair_ipv4_addr,omitempty"`
	RepairIpv6Addr       string   `protobuf:"bytes,3,opt,name=repair_ipv6_addr,json=repairIpv6Addr,proto3" json:"repair_ipv6_addr,omitempty"`
	RepairLabel          uint32   `protobuf:"varint,4,opt,name=repair_label,json=repairLabel,proto3" json:"repair_label,omitempty"`
	RepairElementType    uint32   `protobuf:"varint,5,opt,name=repair_element_type,json=repairElementType,proto3" json:"repair_element_type,omitempty"`
	RepairStrictSpfLabel uint32   `protobuf:"varint,6,opt,name=repair_strict_spf_label,json=repairStrictSpfLabel,proto3" json:"repair_strict_spf_label,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IsisShRepEl) Reset()         { *m = IsisShRepEl{} }
func (m *IsisShRepEl) String() string { return proto.CompactTextString(m) }
func (*IsisShRepEl) ProtoMessage()    {}
func (*IsisShRepEl) Descriptor() ([]byte, []int) {
	return fileDescriptor_5729880b73ebcb3c, []int{6}
}

func (m *IsisShRepEl) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IsisShRepEl.Unmarshal(m, b)
}
func (m *IsisShRepEl) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IsisShRepEl.Marshal(b, m, deterministic)
}
func (m *IsisShRepEl) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IsisShRepEl.Merge(m, src)
}
func (m *IsisShRepEl) XXX_Size() int {
	return xxx_messageInfo_IsisShRepEl.Size(m)
}
func (m *IsisShRepEl) XXX_DiscardUnknown() {
	xxx_messageInfo_IsisShRepEl.DiscardUnknown(m)
}

var xxx_messageInfo_IsisShRepEl proto.InternalMessageInfo

func (m *IsisShRepEl) GetRepairElementNodeId() string {
	if m != nil {
		return m.RepairElementNodeId
	}
	return ""
}

func (m *IsisShRepEl) GetRepairIpv4Addr() string {
	if m != nil {
		return m.RepairIpv4Addr
	}
	return ""
}

func (m *IsisShRepEl) GetRepairIpv6Addr() string {
	if m != nil {
		return m.RepairIpv6Addr
	}
	return ""
}

func (m *IsisShRepEl) GetRepairLabel() uint32 {
	if m != nil {
		return m.RepairLabel
	}
	return 0
}

func (m *IsisShRepEl) GetRepairElementType() uint32 {
	if m != nil {
		return m.RepairElementType
	}
	return 0
}

func (m *IsisShRepEl) GetRepairStrictSpfLabel() uint32 {
	if m != nil {
		return m.RepairStrictSpfLabel
	}
	return 0
}

type IsisShIpv6FrrBackup struct {
	NeighborId                  string         `protobuf:"bytes,1,opt,name=neighbor_id,json=neighborId,proto3" json:"neighbor_id,omitempty"`
	EgressInterface             string         `protobuf:"bytes,2,opt,name=egress_interface,json=egressInterface,proto3" json:"egress_interface,omitempty"`
	NeighborAddress             string         `protobuf:"bytes,3,opt,name=neighbor_address,json=neighborAddress,proto3" json:"neighbor_address,omitempty"`
	TunnelEgressInterface       string         `protobuf:"bytes,4,opt,name=tunnel_egress_interface,json=tunnelEgressInterface,proto3" json:"tunnel_egress_interface,omitempty"`
	NeighborSnpa                string         `protobuf:"bytes,5,opt,name=neighbor_snpa,json=neighborSnpa,proto3" json:"neighbor_snpa,omitempty"`
	RemoteLfaSystemId           string         `protobuf:"bytes,6,opt,name=remote_lfa_system_id,json=remoteLfaSystemId,proto3" json:"remote_lfa_system_id,omitempty"`
	RemoteLfaRouterId           string         `protobuf:"bytes,7,opt,name=remote_lfa_router_id,json=remoteLfaRouterId,proto3" json:"remote_lfa_router_id,omitempty"`
	RemoteLfaSystemPid          string         `protobuf:"bytes,8,opt,name=remote_lfa_system_pid,json=remoteLfaSystemPid,proto3" json:"remote_lfa_system_pid,omitempty"`
	RemoteLfaRouterPid          string         `protobuf:"bytes,9,opt,name=remote_lfa_router_pid,json=remoteLfaRouterPid,proto3" json:"remote_lfa_router_pid,omitempty"`
	TotalBackupDistance         uint32         `protobuf:"varint,10,opt,name=total_backup_distance,json=totalBackupDistance,proto3" json:"total_backup_distance,omitempty"`
	SegmentRoutingSidValue      uint32         `protobuf:"varint,11,opt,name=segment_routing_sid_value,json=segmentRoutingSidValue,proto3" json:"segment_routing_sid_value,omitempty"`
	NumSid                      uint32         `protobuf:"varint,12,opt,name=num_sid,json=numSid,proto3" json:"num_sid,omitempty"`
	SegmentRoutingSidValueEntry []uint32       `protobuf:"varint,13,rep,packed,name=segment_routing_sid_value_entry,json=segmentRoutingSidValueEntry,proto3" json:"segment_routing_sid_value_entry,omitempty"`
	BackupRepairListSize        uint32         `protobuf:"varint,14,opt,name=backup_repair_list_size,json=backupRepairListSize,proto3" json:"backup_repair_list_size,omitempty"`
	TilfaComputation            string         `protobuf:"bytes,15,opt,name=tilfa_computation,json=tilfaComputation,proto3" json:"tilfa_computation,omitempty"`
	BackupRepair                []*IsisShRepEl `protobuf:"bytes,16,rep,name=backup_repair,json=backupRepair,proto3" json:"backup_repair,omitempty"`
	PrefixSourceNodeId          string         `protobuf:"bytes,17,opt,name=prefix_source_node_id,json=prefixSourceNodeId,proto3" json:"prefix_source_node_id,omitempty"`
	IsDownstream                bool           `protobuf:"varint,18,opt,name=is_downstream,json=isDownstream,proto3" json:"is_downstream,omitempty"`
	IsLcDisjoint                bool           `protobuf:"varint,19,opt,name=is_lc_disjoint,json=isLcDisjoint,proto3" json:"is_lc_disjoint,omitempty"`
	IsNodeProtecting            bool           `protobuf:"varint,20,opt,name=is_node_protecting,json=isNodeProtecting,proto3" json:"is_node_protecting,omitempty"`
	IsPrimaryPath               bool           `protobuf:"varint,21,opt,name=is_primary_path,json=isPrimaryPath,proto3" json:"is_primary_path,omitempty"`
	IsSrlgDisjoint              bool           `protobuf:"varint,22,opt,name=is_srlg_disjoint,json=isSrlgDisjoint,proto3" json:"is_srlg_disjoint,omitempty"`
	IsRemoteLfa                 bool           `protobuf:"varint,23,opt,name=is_remote_lfa,json=isRemoteLfa,proto3" json:"is_remote_lfa,omitempty"`
	IsEpcfrrLfa                 bool           `protobuf:"varint,24,opt,name=is_epcfrr_lfa,json=isEpcfrrLfa,proto3" json:"is_epcfrr_lfa,omitempty"`
	IsStrictSpflfa              bool           `protobuf:"varint,25,opt,name=is_strict_spflfa,json=isStrictSpflfa,proto3" json:"is_strict_spflfa,omitempty"`
	IsTunnelRequested           bool           `protobuf:"varint,26,opt,name=is_tunnel_requested,json=isTunnelRequested,proto3" json:"is_tunnel_requested,omitempty"`
	Weight                      uint32         `protobuf:"varint,27,opt,name=weight,proto3" json:"weight,omitempty"`
	OutgoingLabel               uint32         `protobuf:"varint,28,opt,name=outgoing_label,json=outgoingLabel,proto3" json:"outgoing_label,omitempty"`
	XXX_NoUnkeyedLiteral        struct{}       `json:"-"`
	XXX_unrecognized            []byte         `json:"-"`
	XXX_sizecache               int32          `json:"-"`
}

func (m *IsisShIpv6FrrBackup) Reset()         { *m = IsisShIpv6FrrBackup{} }
func (m *IsisShIpv6FrrBackup) String() string { return proto.CompactTextString(m) }
func (*IsisShIpv6FrrBackup) ProtoMessage()    {}
func (*IsisShIpv6FrrBackup) Descriptor() ([]byte, []int) {
	return fileDescriptor_5729880b73ebcb3c, []int{7}
}

func (m *IsisShIpv6FrrBackup) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IsisShIpv6FrrBackup.Unmarshal(m, b)
}
func (m *IsisShIpv6FrrBackup) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IsisShIpv6FrrBackup.Marshal(b, m, deterministic)
}
func (m *IsisShIpv6FrrBackup) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IsisShIpv6FrrBackup.Merge(m, src)
}
func (m *IsisShIpv6FrrBackup) XXX_Size() int {
	return xxx_messageInfo_IsisShIpv6FrrBackup.Size(m)
}
func (m *IsisShIpv6FrrBackup) XXX_DiscardUnknown() {
	xxx_messageInfo_IsisShIpv6FrrBackup.DiscardUnknown(m)
}

var xxx_messageInfo_IsisShIpv6FrrBackup proto.InternalMessageInfo

func (m *IsisShIpv6FrrBackup) GetNeighborId() string {
	if m != nil {
		return m.NeighborId
	}
	return ""
}

func (m *IsisShIpv6FrrBackup) GetEgressInterface() string {
	if m != nil {
		return m.EgressInterface
	}
	return ""
}

func (m *IsisShIpv6FrrBackup) GetNeighborAddress() string {
	if m != nil {
		return m.NeighborAddress
	}
	return ""
}

func (m *IsisShIpv6FrrBackup) GetTunnelEgressInterface() string {
	if m != nil {
		return m.TunnelEgressInterface
	}
	return ""
}

func (m *IsisShIpv6FrrBackup) GetNeighborSnpa() string {
	if m != nil {
		return m.NeighborSnpa
	}
	return ""
}

func (m *IsisShIpv6FrrBackup) GetRemoteLfaSystemId() string {
	if m != nil {
		return m.RemoteLfaSystemId
	}
	return ""
}

func (m *IsisShIpv6FrrBackup) GetRemoteLfaRouterId() string {
	if m != nil {
		return m.RemoteLfaRouterId
	}
	return ""
}

func (m *IsisShIpv6FrrBackup) GetRemoteLfaSystemPid() string {
	if m != nil {
		return m.RemoteLfaSystemPid
	}
	return ""
}

func (m *IsisShIpv6FrrBackup) GetRemoteLfaRouterPid() string {
	if m != nil {
		return m.RemoteLfaRouterPid
	}
	return ""
}

func (m *IsisShIpv6FrrBackup) GetTotalBackupDistance() uint32 {
	if m != nil {
		return m.TotalBackupDistance
	}
	return 0
}

func (m *IsisShIpv6FrrBackup) GetSegmentRoutingSidValue() uint32 {
	if m != nil {
		return m.SegmentRoutingSidValue
	}
	return 0
}

func (m *IsisShIpv6FrrBackup) GetNumSid() uint32 {
	if m != nil {
		return m.NumSid
	}
	return 0
}

func (m *IsisShIpv6FrrBackup) GetSegmentRoutingSidValueEntry() []uint32 {
	if m != nil {
		return m.SegmentRoutingSidValueEntry
	}
	return nil
}

func (m *IsisShIpv6FrrBackup) GetBackupRepairListSize() uint32 {
	if m != nil {
		return m.BackupRepairListSize
	}
	return 0
}

func (m *IsisShIpv6FrrBackup) GetTilfaComputation() string {
	if m != nil {
		return m.TilfaComputation
	}
	return ""
}

func (m *IsisShIpv6FrrBackup) GetBackupRepair() []*IsisShRepEl {
	if m != nil {
		return m.BackupRepair
	}
	return nil
}

func (m *IsisShIpv6FrrBackup) GetPrefixSourceNodeId() string {
	if m != nil {
		return m.PrefixSourceNodeId
	}
	return ""
}

func (m *IsisShIpv6FrrBackup) GetIsDownstream() bool {
	if m != nil {
		return m.IsDownstream
	}
	return false
}

func (m *IsisShIpv6FrrBackup) GetIsLcDisjoint() bool {
	if m != nil {
		return m.IsLcDisjoint
	}
	return false
}

func (m *IsisShIpv6FrrBackup) GetIsNodeProtecting() bool {
	if m != nil {
		return m.IsNodeProtecting
	}
	return false
}

func (m *IsisShIpv6FrrBackup) GetIsPrimaryPath() bool {
	if m != nil {
		return m.IsPrimaryPath
	}
	return false
}

func (m *IsisShIpv6FrrBackup) GetIsSrlgDisjoint() bool {
	if m != nil {
		return m.IsSrlgDisjoint
	}
	return false
}

func (m *IsisShIpv6FrrBackup) GetIsRemoteLfa() bool {
	if m != nil {
		return m.IsRemoteLfa
	}
	return false
}

func (m *IsisShIpv6FrrBackup) GetIsEpcfrrLfa() bool {
	if m != nil {
		return m.IsEpcfrrLfa
	}
	return false
}

func (m *IsisShIpv6FrrBackup) GetIsStrictSpflfa() bool {
	if m != nil {
		return m.IsStrictSpflfa
	}
	return false
}

func (m *IsisShIpv6FrrBackup) GetIsTunnelRequested() bool {
	if m != nil {
		return m.IsTunnelRequested
	}
	return false
}

func (m *IsisShIpv6FrrBackup) GetWeight() uint32 {
	if m != nil {
		return m.Weight
	}
	return 0
}

func (m *IsisShIpv6FrrBackup) GetOutgoingLabel() uint32 {
	if m != nil {
		return m.OutgoingLabel
	}
	return 0
}

type IsisShNnh struct {
	LinkIdSet            bool     `protobuf:"varint,1,opt,name=link_id_set,json=linkIdSet,proto3" json:"link_id_set,omitempty"`
	Ipv4Set              bool     `protobuf:"varint,2,opt,name=ipv4_set,json=ipv4Set,proto3" json:"ipv4_set,omitempty"`
	LinkId               uint32   `protobuf:"varint,3,opt,name=link_id,json=linkId,proto3" json:"link_id,omitempty"`
	Ipv4Address          string   `protobuf:"bytes,4,opt,name=ipv4_address,json=ipv4Address,proto3" json:"ipv4_address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IsisShNnh) Reset()         { *m = IsisShNnh{} }
func (m *IsisShNnh) String() string { return proto.CompactTextString(m) }
func (*IsisShNnh) ProtoMessage()    {}
func (*IsisShNnh) Descriptor() ([]byte, []int) {
	return fileDescriptor_5729880b73ebcb3c, []int{8}
}

func (m *IsisShNnh) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IsisShNnh.Unmarshal(m, b)
}
func (m *IsisShNnh) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IsisShNnh.Marshal(b, m, deterministic)
}
func (m *IsisShNnh) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IsisShNnh.Merge(m, src)
}
func (m *IsisShNnh) XXX_Size() int {
	return xxx_messageInfo_IsisShNnh.Size(m)
}
func (m *IsisShNnh) XXX_DiscardUnknown() {
	xxx_messageInfo_IsisShNnh.DiscardUnknown(m)
}

var xxx_messageInfo_IsisShNnh proto.InternalMessageInfo

func (m *IsisShNnh) GetLinkIdSet() bool {
	if m != nil {
		return m.LinkIdSet
	}
	return false
}

func (m *IsisShNnh) GetIpv4Set() bool {
	if m != nil {
		return m.Ipv4Set
	}
	return false
}

func (m *IsisShNnh) GetLinkId() uint32 {
	if m != nil {
		return m.LinkId
	}
	return 0
}

func (m *IsisShNnh) GetIpv4Address() string {
	if m != nil {
		return m.Ipv4Address
	}
	return ""
}

type IsisShIpv6Path struct {
	NeighborId                 string               `protobuf:"bytes,1,opt,name=neighbor_id,json=neighborId,proto3" json:"neighbor_id,omitempty"`
	EgressInterface            string               `protobuf:"bytes,2,opt,name=egress_interface,json=egressInterface,proto3" json:"egress_interface,omitempty"`
	NeighborAddress            string               `protobuf:"bytes,3,opt,name=neighbor_address,json=neighborAddress,proto3" json:"neighbor_address,omitempty"`
	NeighborSnpa               string               `protobuf:"bytes,4,opt,name=neighbor_snpa,json=neighborSnpa,proto3" json:"neighbor_snpa,omitempty"`
	Tag                        uint32               `protobuf:"varint,5,opt,name=tag,proto3" json:"tag,omitempty"`
	FrrBackup                  *IsisShIpv6FrrBackup `protobuf:"bytes,6,opt,name=frr_backup,json=frrBackup,proto3" json:"frr_backup,omitempty"`
	UloopExplicit              []*IsisShRepEl       `protobuf:"bytes,7,rep,name=uloop_explicit,json=uloopExplicit,proto3" json:"uloop_explicit,omitempty"`
	Nnh                        []*IsisShNnh         `protobuf:"bytes,8,rep,name=nnh,proto3" json:"nnh,omitempty"`
	TunnelInterface            string               `protobuf:"bytes,9,opt,name=tunnel_interface,json=tunnelInterface,proto3" json:"tunnel_interface,omitempty"`
	SegmentRoutingSidValue     uint32               `protobuf:"varint,10,opt,name=segment_routing_sid_value,json=segmentRoutingSidValue,proto3" json:"segment_routing_sid_value,omitempty"`
	Weight                     uint32               `protobuf:"varint,11,opt,name=weight,proto3" json:"weight,omitempty"`
	IsTeTunnelInterface        bool                 `protobuf:"varint,12,opt,name=is_te_tunnel_interface,json=isTeTunnelInterface,proto3" json:"is_te_tunnel_interface,omitempty"`
	IsSrExcludeTunnelInterface bool                 `protobuf:"varint,13,opt,name=is_sr_exclude_tunnel_interface,json=isSrExcludeTunnelInterface,proto3" json:"is_sr_exclude_tunnel_interface,omitempty"`
	OutgoingLabel              uint32               `protobuf:"varint,14,opt,name=outgoing_label,json=outgoingLabel,proto3" json:"outgoing_label,omitempty"`
	XXX_NoUnkeyedLiteral       struct{}             `json:"-"`
	XXX_unrecognized           []byte               `json:"-"`
	XXX_sizecache              int32                `json:"-"`
}

func (m *IsisShIpv6Path) Reset()         { *m = IsisShIpv6Path{} }
func (m *IsisShIpv6Path) String() string { return proto.CompactTextString(m) }
func (*IsisShIpv6Path) ProtoMessage()    {}
func (*IsisShIpv6Path) Descriptor() ([]byte, []int) {
	return fileDescriptor_5729880b73ebcb3c, []int{9}
}

func (m *IsisShIpv6Path) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IsisShIpv6Path.Unmarshal(m, b)
}
func (m *IsisShIpv6Path) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IsisShIpv6Path.Marshal(b, m, deterministic)
}
func (m *IsisShIpv6Path) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IsisShIpv6Path.Merge(m, src)
}
func (m *IsisShIpv6Path) XXX_Size() int {
	return xxx_messageInfo_IsisShIpv6Path.Size(m)
}
func (m *IsisShIpv6Path) XXX_DiscardUnknown() {
	xxx_messageInfo_IsisShIpv6Path.DiscardUnknown(m)
}

var xxx_messageInfo_IsisShIpv6Path proto.InternalMessageInfo

func (m *IsisShIpv6Path) GetNeighborId() string {
	if m != nil {
		return m.NeighborId
	}
	return ""
}

func (m *IsisShIpv6Path) GetEgressInterface() string {
	if m != nil {
		return m.EgressInterface
	}
	return ""
}

func (m *IsisShIpv6Path) GetNeighborAddress() string {
	if m != nil {
		return m.NeighborAddress
	}
	return ""
}

func (m *IsisShIpv6Path) GetNeighborSnpa() string {
	if m != nil {
		return m.NeighborSnpa
	}
	return ""
}

func (m *IsisShIpv6Path) GetTag() uint32 {
	if m != nil {
		return m.Tag
	}
	return 0
}

func (m *IsisShIpv6Path) GetFrrBackup() *IsisShIpv6FrrBackup {
	if m != nil {
		return m.FrrBackup
	}
	return nil
}

func (m *IsisShIpv6Path) GetUloopExplicit() []*IsisShRepEl {
	if m != nil {
		return m.UloopExplicit
	}
	return nil
}

func (m *IsisShIpv6Path) GetNnh() []*IsisShNnh {
	if m != nil {
		return m.Nnh
	}
	return nil
}

func (m *IsisShIpv6Path) GetTunnelInterface() string {
	if m != nil {
		return m.TunnelInterface
	}
	return ""
}

func (m *IsisShIpv6Path) GetSegmentRoutingSidValue() uint32 {
	if m != nil {
		return m.SegmentRoutingSidValue
	}
	return 0
}

func (m *IsisShIpv6Path) GetWeight() uint32 {
	if m != nil {
		return m.Weight
	}
	return 0
}

func (m *IsisShIpv6Path) GetIsTeTunnelInterface() bool {
	if m != nil {
		return m.IsTeTunnelInterface
	}
	return false
}

func (m *IsisShIpv6Path) GetIsSrExcludeTunnelInterface() bool {
	if m != nil {
		return m.IsSrExcludeTunnelInterface
	}
	return false
}

func (m *IsisShIpv6Path) GetOutgoingLabel() uint32 {
	if m != nil {
		return m.OutgoingLabel
	}
	return 0
}

type IsisShIpv6UcmpPath struct {
	NeighborId                 string               `protobuf:"bytes,1,opt,name=neighbor_id,json=neighborId,proto3" json:"neighbor_id,omitempty"`
	EgressInterface            string               `protobuf:"bytes,2,opt,name=egress_interface,json=egressInterface,proto3" json:"egress_interface,omitempty"`
	NeighborAddress            string               `protobuf:"bytes,3,opt,name=neighbor_address,json=neighborAddress,proto3" json:"neighbor_address,omitempty"`
	NeighborSnpa               string               `protobuf:"bytes,4,opt,name=neighbor_snpa,json=neighborSnpa,proto3" json:"neighbor_snpa,omitempty"`
	Tag                        uint32               `protobuf:"varint,5,opt,name=tag,proto3" json:"tag,omitempty"`
	TotalUcmpDistance          uint32               `protobuf:"varint,6,opt,name=total_ucmp_distance,json=totalUcmpDistance,proto3" json:"total_ucmp_distance,omitempty"`
	FrrBackup                  *IsisShIpv6FrrBackup `protobuf:"bytes,7,opt,name=frr_backup,json=frrBackup,proto3" json:"frr_backup,omitempty"`
	SegmentRoutingSidValue     uint32               `protobuf:"varint,8,opt,name=segment_routing_sid_value,json=segmentRoutingSidValue,proto3" json:"segment_routing_sid_value,omitempty"`
	Weight                     uint32               `protobuf:"varint,9,opt,name=weight,proto3" json:"weight,omitempty"`
	IsTeTunnelInterface        bool                 `protobuf:"varint,10,opt,name=is_te_tunnel_interface,json=isTeTunnelInterface,proto3" json:"is_te_tunnel_interface,omitempty"`
	IsSrExcludeTunnelInterface bool                 `protobuf:"varint,11,opt,name=is_sr_exclude_tunnel_interface,json=isSrExcludeTunnelInterface,proto3" json:"is_sr_exclude_tunnel_interface,omitempty"`
	OutgoingLabel              uint32               `protobuf:"varint,12,opt,name=outgoing_label,json=outgoingLabel,proto3" json:"outgoing_label,omitempty"`
	XXX_NoUnkeyedLiteral       struct{}             `json:"-"`
	XXX_unrecognized           []byte               `json:"-"`
	XXX_sizecache              int32                `json:"-"`
}

func (m *IsisShIpv6UcmpPath) Reset()         { *m = IsisShIpv6UcmpPath{} }
func (m *IsisShIpv6UcmpPath) String() string { return proto.CompactTextString(m) }
func (*IsisShIpv6UcmpPath) ProtoMessage()    {}
func (*IsisShIpv6UcmpPath) Descriptor() ([]byte, []int) {
	return fileDescriptor_5729880b73ebcb3c, []int{10}
}

func (m *IsisShIpv6UcmpPath) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IsisShIpv6UcmpPath.Unmarshal(m, b)
}
func (m *IsisShIpv6UcmpPath) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IsisShIpv6UcmpPath.Marshal(b, m, deterministic)
}
func (m *IsisShIpv6UcmpPath) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IsisShIpv6UcmpPath.Merge(m, src)
}
func (m *IsisShIpv6UcmpPath) XXX_Size() int {
	return xxx_messageInfo_IsisShIpv6UcmpPath.Size(m)
}
func (m *IsisShIpv6UcmpPath) XXX_DiscardUnknown() {
	xxx_messageInfo_IsisShIpv6UcmpPath.DiscardUnknown(m)
}

var xxx_messageInfo_IsisShIpv6UcmpPath proto.InternalMessageInfo

func (m *IsisShIpv6UcmpPath) GetNeighborId() string {
	if m != nil {
		return m.NeighborId
	}
	return ""
}

func (m *IsisShIpv6UcmpPath) GetEgressInterface() string {
	if m != nil {
		return m.EgressInterface
	}
	return ""
}

func (m *IsisShIpv6UcmpPath) GetNeighborAddress() string {
	if m != nil {
		return m.NeighborAddress
	}
	return ""
}

func (m *IsisShIpv6UcmpPath) GetNeighborSnpa() string {
	if m != nil {
		return m.NeighborSnpa
	}
	return ""
}

func (m *IsisShIpv6UcmpPath) GetTag() uint32 {
	if m != nil {
		return m.Tag
	}
	return 0
}

func (m *IsisShIpv6UcmpPath) GetTotalUcmpDistance() uint32 {
	if m != nil {
		return m.TotalUcmpDistance
	}
	return 0
}

func (m *IsisShIpv6UcmpPath) GetFrrBackup() *IsisShIpv6FrrBackup {
	if m != nil {
		return m.FrrBackup
	}
	return nil
}

func (m *IsisShIpv6UcmpPath) GetSegmentRoutingSidValue() uint32 {
	if m != nil {
		return m.SegmentRoutingSidValue
	}
	return 0
}

func (m *IsisShIpv6UcmpPath) GetWeight() uint32 {
	if m != nil {
		return m.Weight
	}
	return 0
}

func (m *IsisShIpv6UcmpPath) GetIsTeTunnelInterface() bool {
	if m != nil {
		return m.IsTeTunnelInterface
	}
	return false
}

func (m *IsisShIpv6UcmpPath) GetIsSrExcludeTunnelInterface() bool {
	if m != nil {
		return m.IsSrExcludeTunnelInterface
	}
	return false
}

func (m *IsisShIpv6UcmpPath) GetOutgoingLabel() uint32 {
	if m != nil {
		return m.OutgoingLabel
	}
	return 0
}

type IsisNodalSidType struct {
	SidValue             uint32   `protobuf:"varint,1,opt,name=sid_value,json=sidValue,proto3" json:"sid_value,omitempty"`
	Rflag                uint32   `protobuf:"varint,2,opt,name=rflag,proto3" json:"rflag,omitempty"`
	Nflag                uint32   `protobuf:"varint,3,opt,name=nflag,proto3" json:"nflag,omitempty"`
	Pflag                uint32   `protobuf:"varint,4,opt,name=pflag,proto3" json:"pflag,omitempty"`
	Eflag                uint32   `protobuf:"varint,5,opt,name=eflag,proto3" json:"eflag,omitempty"`
	Vflag                uint32   `protobuf:"varint,6,opt,name=vflag,proto3" json:"vflag,omitempty"`
	Lflag                uint32   `protobuf:"varint,7,opt,name=lflag,proto3" json:"lflag,omitempty"`
	Algorithm            uint32   `protobuf:"varint,8,opt,name=algorithm,proto3" json:"algorithm,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IsisNodalSidType) Reset()         { *m = IsisNodalSidType{} }
func (m *IsisNodalSidType) String() string { return proto.CompactTextString(m) }
func (*IsisNodalSidType) ProtoMessage()    {}
func (*IsisNodalSidType) Descriptor() ([]byte, []int) {
	return fileDescriptor_5729880b73ebcb3c, []int{11}
}

func (m *IsisNodalSidType) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IsisNodalSidType.Unmarshal(m, b)
}
func (m *IsisNodalSidType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IsisNodalSidType.Marshal(b, m, deterministic)
}
func (m *IsisNodalSidType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IsisNodalSidType.Merge(m, src)
}
func (m *IsisNodalSidType) XXX_Size() int {
	return xxx_messageInfo_IsisNodalSidType.Size(m)
}
func (m *IsisNodalSidType) XXX_DiscardUnknown() {
	xxx_messageInfo_IsisNodalSidType.DiscardUnknown(m)
}

var xxx_messageInfo_IsisNodalSidType proto.InternalMessageInfo

func (m *IsisNodalSidType) GetSidValue() uint32 {
	if m != nil {
		return m.SidValue
	}
	return 0
}

func (m *IsisNodalSidType) GetRflag() uint32 {
	if m != nil {
		return m.Rflag
	}
	return 0
}

func (m *IsisNodalSidType) GetNflag() uint32 {
	if m != nil {
		return m.Nflag
	}
	return 0
}

func (m *IsisNodalSidType) GetPflag() uint32 {
	if m != nil {
		return m.Pflag
	}
	return 0
}

func (m *IsisNodalSidType) GetEflag() uint32 {
	if m != nil {
		return m.Eflag
	}
	return 0
}

func (m *IsisNodalSidType) GetVflag() uint32 {
	if m != nil {
		return m.Vflag
	}
	return 0
}

func (m *IsisNodalSidType) GetLflag() uint32 {
	if m != nil {
		return m.Lflag
	}
	return 0
}

func (m *IsisNodalSidType) GetAlgorithm() uint32 {
	if m != nil {
		return m.Algorithm
	}
	return 0
}

type IsisShIpv6RouteNativeSource struct {
	SourceLspId          string              `protobuf:"bytes,1,opt,name=source_lsp_id,json=sourceLspId,proto3" json:"source_lsp_id,omitempty"`
	SourceAddress        string              `protobuf:"bytes,2,opt,name=source_address,json=sourceAddress,proto3" json:"source_address,omitempty"`
	Tags                 []uint32            `protobuf:"varint,3,rep,packed,name=tags,proto3" json:"tags,omitempty"`
	NodalSid             []*IsisNodalSidType `protobuf:"bytes,4,rep,name=nodal_sid,json=nodalSid,proto3" json:"nodal_sid,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *IsisShIpv6RouteNativeSource) Reset()         { *m = IsisShIpv6RouteNativeSource{} }
func (m *IsisShIpv6RouteNativeSource) String() string { return proto.CompactTextString(m) }
func (*IsisShIpv6RouteNativeSource) ProtoMessage()    {}
func (*IsisShIpv6RouteNativeSource) Descriptor() ([]byte, []int) {
	return fileDescriptor_5729880b73ebcb3c, []int{12}
}

func (m *IsisShIpv6RouteNativeSource) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IsisShIpv6RouteNativeSource.Unmarshal(m, b)
}
func (m *IsisShIpv6RouteNativeSource) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IsisShIpv6RouteNativeSource.Marshal(b, m, deterministic)
}
func (m *IsisShIpv6RouteNativeSource) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IsisShIpv6RouteNativeSource.Merge(m, src)
}
func (m *IsisShIpv6RouteNativeSource) XXX_Size() int {
	return xxx_messageInfo_IsisShIpv6RouteNativeSource.Size(m)
}
func (m *IsisShIpv6RouteNativeSource) XXX_DiscardUnknown() {
	xxx_messageInfo_IsisShIpv6RouteNativeSource.DiscardUnknown(m)
}

var xxx_messageInfo_IsisShIpv6RouteNativeSource proto.InternalMessageInfo

func (m *IsisShIpv6RouteNativeSource) GetSourceLspId() string {
	if m != nil {
		return m.SourceLspId
	}
	return ""
}

func (m *IsisShIpv6RouteNativeSource) GetSourceAddress() string {
	if m != nil {
		return m.SourceAddress
	}
	return ""
}

func (m *IsisShIpv6RouteNativeSource) GetTags() []uint32 {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *IsisShIpv6RouteNativeSource) GetNodalSid() []*IsisNodalSidType {
	if m != nil {
		return m.NodalSid
	}
	return nil
}

type IsisShIpv6RouteNativePreference struct {
	Origin                 string                         `protobuf:"bytes,1,opt,name=origin,proto3" json:"origin,omitempty"`
	Metric                 uint32                         `protobuf:"varint,2,opt,name=metric,proto3" json:"metric,omitempty"`
	MulticastMetric        uint32                         `protobuf:"varint,3,opt,name=multicast_metric,json=multicastMetric,proto3" json:"multicast_metric,omitempty"`
	IsExternalMetric       bool                           `protobuf:"varint,4,opt,name=is_external_metric,json=isExternalMetric,proto3" json:"is_external_metric,omitempty"`
	AdministrativeDistance uint32                         `protobuf:"varint,5,opt,name=administrative_distance,json=administrativeDistance,proto3" json:"administrative_distance,omitempty"`
	Paths                  []*IsisShIpv6Path              `protobuf:"bytes,6,rep,name=paths,proto3" json:"paths,omitempty"`
	UcmpNextHop            []*IsisShIpv6UcmpPath          `protobuf:"bytes,7,rep,name=ucmp_next_hop,json=ucmpNextHop,proto3" json:"ucmp_next_hop,omitempty"`
	MulticastPath          []*IsisShIpv6Path              `protobuf:"bytes,8,rep,name=multicast_path,json=multicastPath,proto3" json:"multicast_path,omitempty"`
	SrtePath               []*IsisShIpv6Path              `protobuf:"bytes,9,rep,name=srte_path,json=srtePath,proto3" json:"srte_path,omitempty"`
	ExplicitPath           []*IsisShIpv6Path              `protobuf:"bytes,10,rep,name=explicit_path,json=explicitPath,proto3" json:"explicit_path,omitempty"`
	Source                 []*IsisShIpv6RouteNativeSource `protobuf:"bytes,11,rep,name=source,proto3" json:"source,omitempty"`
	MulticastSource        []*IsisShIpv6RouteNativeSource `protobuf:"bytes,12,rep,name=multicast_source,json=multicastSource,proto3" json:"multicast_source,omitempty"`
	XXX_NoUnkeyedLiteral   struct{}                       `json:"-"`
	XXX_unrecognized       []byte                         `json:"-"`
	XXX_sizecache          int32                          `json:"-"`
}

func (m *IsisShIpv6RouteNativePreference) Reset()         { *m = IsisShIpv6RouteNativePreference{} }
func (m *IsisShIpv6RouteNativePreference) String() string { return proto.CompactTextString(m) }
func (*IsisShIpv6RouteNativePreference) ProtoMessage()    {}
func (*IsisShIpv6RouteNativePreference) Descriptor() ([]byte, []int) {
	return fileDescriptor_5729880b73ebcb3c, []int{13}
}

func (m *IsisShIpv6RouteNativePreference) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IsisShIpv6RouteNativePreference.Unmarshal(m, b)
}
func (m *IsisShIpv6RouteNativePreference) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IsisShIpv6RouteNativePreference.Marshal(b, m, deterministic)
}
func (m *IsisShIpv6RouteNativePreference) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IsisShIpv6RouteNativePreference.Merge(m, src)
}
func (m *IsisShIpv6RouteNativePreference) XXX_Size() int {
	return xxx_messageInfo_IsisShIpv6RouteNativePreference.Size(m)
}
func (m *IsisShIpv6RouteNativePreference) XXX_DiscardUnknown() {
	xxx_messageInfo_IsisShIpv6RouteNativePreference.DiscardUnknown(m)
}

var xxx_messageInfo_IsisShIpv6RouteNativePreference proto.InternalMessageInfo

func (m *IsisShIpv6RouteNativePreference) GetOrigin() string {
	if m != nil {
		return m.Origin
	}
	return ""
}

func (m *IsisShIpv6RouteNativePreference) GetMetric() uint32 {
	if m != nil {
		return m.Metric
	}
	return 0
}

func (m *IsisShIpv6RouteNativePreference) GetMulticastMetric() uint32 {
	if m != nil {
		return m.MulticastMetric
	}
	return 0
}

func (m *IsisShIpv6RouteNativePreference) GetIsExternalMetric() bool {
	if m != nil {
		return m.IsExternalMetric
	}
	return false
}

func (m *IsisShIpv6RouteNativePreference) GetAdministrativeDistance() uint32 {
	if m != nil {
		return m.AdministrativeDistance
	}
	return 0
}

func (m *IsisShIpv6RouteNativePreference) GetPaths() []*IsisShIpv6Path {
	if m != nil {
		return m.Paths
	}
	return nil
}

func (m *IsisShIpv6RouteNativePreference) GetUcmpNextHop() []*IsisShIpv6UcmpPath {
	if m != nil {
		return m.UcmpNextHop
	}
	return nil
}

func (m *IsisShIpv6RouteNativePreference) GetMulticastPath() []*IsisShIpv6Path {
	if m != nil {
		return m.MulticastPath
	}
	return nil
}

func (m *IsisShIpv6RouteNativePreference) GetSrtePath() []*IsisShIpv6Path {
	if m != nil {
		return m.SrtePath
	}
	return nil
}

func (m *IsisShIpv6RouteNativePreference) GetExplicitPath() []*IsisShIpv6Path {
	if m != nil {
		return m.ExplicitPath
	}
	return nil
}

func (m *IsisShIpv6RouteNativePreference) GetSource() []*IsisShIpv6RouteNativeSource {
	if m != nil {
		return m.Source
	}
	return nil
}

func (m *IsisShIpv6RouteNativePreference) GetMulticastSource() []*IsisShIpv6RouteNativeSource {
	if m != nil {
		return m.MulticastSource
	}
	return nil
}

type IsisShIpv6RouteNativeDetails struct {
	Primary              *IsisShIpv6RouteNativePreference   `protobuf:"bytes,1,opt,name=primary,proto3" json:"primary,omitempty"`
	Backup               []*IsisShIpv6RouteNativePreference `protobuf:"bytes,2,rep,name=backup,proto3" json:"backup,omitempty"`
	Priority             string                             `protobuf:"bytes,3,opt,name=priority,proto3" json:"priority,omitempty"`
	LocalLabel           uint32                             `protobuf:"varint,4,opt,name=local_label,json=localLabel,proto3" json:"local_label,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                           `json:"-"`
	XXX_unrecognized     []byte                             `json:"-"`
	XXX_sizecache        int32                              `json:"-"`
}

func (m *IsisShIpv6RouteNativeDetails) Reset()         { *m = IsisShIpv6RouteNativeDetails{} }
func (m *IsisShIpv6RouteNativeDetails) String() string { return proto.CompactTextString(m) }
func (*IsisShIpv6RouteNativeDetails) ProtoMessage()    {}
func (*IsisShIpv6RouteNativeDetails) Descriptor() ([]byte, []int) {
	return fileDescriptor_5729880b73ebcb3c, []int{14}
}

func (m *IsisShIpv6RouteNativeDetails) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IsisShIpv6RouteNativeDetails.Unmarshal(m, b)
}
func (m *IsisShIpv6RouteNativeDetails) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IsisShIpv6RouteNativeDetails.Marshal(b, m, deterministic)
}
func (m *IsisShIpv6RouteNativeDetails) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IsisShIpv6RouteNativeDetails.Merge(m, src)
}
func (m *IsisShIpv6RouteNativeDetails) XXX_Size() int {
	return xxx_messageInfo_IsisShIpv6RouteNativeDetails.Size(m)
}
func (m *IsisShIpv6RouteNativeDetails) XXX_DiscardUnknown() {
	xxx_messageInfo_IsisShIpv6RouteNativeDetails.DiscardUnknown(m)
}

var xxx_messageInfo_IsisShIpv6RouteNativeDetails proto.InternalMessageInfo

func (m *IsisShIpv6RouteNativeDetails) GetPrimary() *IsisShIpv6RouteNativePreference {
	if m != nil {
		return m.Primary
	}
	return nil
}

func (m *IsisShIpv6RouteNativeDetails) GetBackup() []*IsisShIpv6RouteNativePreference {
	if m != nil {
		return m.Backup
	}
	return nil
}

func (m *IsisShIpv6RouteNativeDetails) GetPriority() string {
	if m != nil {
		return m.Priority
	}
	return ""
}

func (m *IsisShIpv6RouteNativeDetails) GetLocalLabel() uint32 {
	if m != nil {
		return m.LocalLabel
	}
	return 0
}

type IsisShIpv6RouteNativeStatus struct {
	IsValid              string                        `protobuf:"bytes,1,opt,name=is_valid,json=isValid,proto3" json:"is_valid,omitempty"`
	NativeDetails        *IsisShIpv6RouteNativeDetails `protobuf:"bytes,2,opt,name=native_details,json=nativeDetails,proto3" json:"native_details,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                      `json:"-"`
	XXX_unrecognized     []byte                        `json:"-"`
	XXX_sizecache        int32                         `json:"-"`
}

func (m *IsisShIpv6RouteNativeStatus) Reset()         { *m = IsisShIpv6RouteNativeStatus{} }
func (m *IsisShIpv6RouteNativeStatus) String() string { return proto.CompactTextString(m) }
func (*IsisShIpv6RouteNativeStatus) ProtoMessage()    {}
func (*IsisShIpv6RouteNativeStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_5729880b73ebcb3c, []int{15}
}

func (m *IsisShIpv6RouteNativeStatus) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IsisShIpv6RouteNativeStatus.Unmarshal(m, b)
}
func (m *IsisShIpv6RouteNativeStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IsisShIpv6RouteNativeStatus.Marshal(b, m, deterministic)
}
func (m *IsisShIpv6RouteNativeStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IsisShIpv6RouteNativeStatus.Merge(m, src)
}
func (m *IsisShIpv6RouteNativeStatus) XXX_Size() int {
	return xxx_messageInfo_IsisShIpv6RouteNativeStatus.Size(m)
}
func (m *IsisShIpv6RouteNativeStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_IsisShIpv6RouteNativeStatus.DiscardUnknown(m)
}

var xxx_messageInfo_IsisShIpv6RouteNativeStatus proto.InternalMessageInfo

func (m *IsisShIpv6RouteNativeStatus) GetIsValid() string {
	if m != nil {
		return m.IsValid
	}
	return ""
}

func (m *IsisShIpv6RouteNativeStatus) GetNativeDetails() *IsisShIpv6RouteNativeDetails {
	if m != nil {
		return m.NativeDetails
	}
	return nil
}

type IsisIpv6PrefixType struct {
	Prefix               string   `protobuf:"bytes,1,opt,name=prefix,proto3" json:"prefix,omitempty"`
	PrefixLength         uint32   `protobuf:"varint,2,opt,name=prefix_length,json=prefixLength,proto3" json:"prefix_length,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IsisIpv6PrefixType) Reset()         { *m = IsisIpv6PrefixType{} }
func (m *IsisIpv6PrefixType) String() string { return proto.CompactTextString(m) }
func (*IsisIpv6PrefixType) ProtoMessage()    {}
func (*IsisIpv6PrefixType) Descriptor() ([]byte, []int) {
	return fileDescriptor_5729880b73ebcb3c, []int{16}
}

func (m *IsisIpv6PrefixType) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IsisIpv6PrefixType.Unmarshal(m, b)
}
func (m *IsisIpv6PrefixType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IsisIpv6PrefixType.Marshal(b, m, deterministic)
}
func (m *IsisIpv6PrefixType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IsisIpv6PrefixType.Merge(m, src)
}
func (m *IsisIpv6PrefixType) XXX_Size() int {
	return xxx_messageInfo_IsisIpv6PrefixType.Size(m)
}
func (m *IsisIpv6PrefixType) XXX_DiscardUnknown() {
	xxx_messageInfo_IsisIpv6PrefixType.DiscardUnknown(m)
}

var xxx_messageInfo_IsisIpv6PrefixType proto.InternalMessageInfo

func (m *IsisIpv6PrefixType) GetPrefix() string {
	if m != nil {
		return m.Prefix
	}
	return ""
}

func (m *IsisIpv6PrefixType) GetPrefixLength() uint32 {
	if m != nil {
		return m.PrefixLength
	}
	return 0
}

type IsisShIpv6RouteSummarizationStatus struct {
	IsValid              string              `protobuf:"bytes,1,opt,name=is_valid,json=isValid,proto3" json:"is_valid,omitempty"`
	SummaryPrefix        *IsisIpv6PrefixType `protobuf:"bytes,2,opt,name=summary_prefix,json=summaryPrefix,proto3" json:"summary_prefix,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *IsisShIpv6RouteSummarizationStatus) Reset()         { *m = IsisShIpv6RouteSummarizationStatus{} }
func (m *IsisShIpv6RouteSummarizationStatus) String() string { return proto.CompactTextString(m) }
func (*IsisShIpv6RouteSummarizationStatus) ProtoMessage()    {}
func (*IsisShIpv6RouteSummarizationStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_5729880b73ebcb3c, []int{17}
}

func (m *IsisShIpv6RouteSummarizationStatus) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IsisShIpv6RouteSummarizationStatus.Unmarshal(m, b)
}
func (m *IsisShIpv6RouteSummarizationStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IsisShIpv6RouteSummarizationStatus.Marshal(b, m, deterministic)
}
func (m *IsisShIpv6RouteSummarizationStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IsisShIpv6RouteSummarizationStatus.Merge(m, src)
}
func (m *IsisShIpv6RouteSummarizationStatus) XXX_Size() int {
	return xxx_messageInfo_IsisShIpv6RouteSummarizationStatus.Size(m)
}
func (m *IsisShIpv6RouteSummarizationStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_IsisShIpv6RouteSummarizationStatus.DiscardUnknown(m)
}

var xxx_messageInfo_IsisShIpv6RouteSummarizationStatus proto.InternalMessageInfo

func (m *IsisShIpv6RouteSummarizationStatus) GetIsValid() string {
	if m != nil {
		return m.IsValid
	}
	return ""
}

func (m *IsisShIpv6RouteSummarizationStatus) GetSummaryPrefix() *IsisIpv6PrefixType {
	if m != nil {
		return m.SummaryPrefix
	}
	return nil
}

type IsisShIpv6RouteAdv struct {
	Level                  string                              `protobuf:"bytes,1,opt,name=level,proto3" json:"level,omitempty"`
	AdvertisingOrigin      string                              `protobuf:"bytes,2,opt,name=advertising_origin,json=advertisingOrigin,proto3" json:"advertising_origin,omitempty"`
	Metric                 uint32                              `protobuf:"varint,3,opt,name=metric,proto3" json:"metric,omitempty"`
	IsPropagated           bool                                `protobuf:"varint,4,opt,name=is_propagated,json=isPropagated,proto3" json:"is_propagated,omitempty"`
	IsExternalMetric       bool                                `protobuf:"varint,5,opt,name=is_external_metric,json=isExternalMetric,proto3" json:"is_external_metric,omitempty"`
	SummarizationStatus    *IsisShIpv6RouteSummarizationStatus `protobuf:"bytes,6,opt,name=summarization_status,json=summarizationStatus,proto3" json:"summarization_status,omitempty"`
	IsExternalReachability bool                                `protobuf:"varint,7,opt,name=is_external_reachability,json=isExternalReachability,proto3" json:"is_external_reachability,omitempty"`
	IsInterarea            bool                                `protobuf:"varint,8,opt,name=is_interarea,json=isInterarea,proto3" json:"is_interarea,omitempty"`
	Tags                   []uint32                            `protobuf:"varint,9,rep,packed,name=tags,proto3" json:"tags,omitempty"`
	NodalSid               []*IsisNodalSidType                 `protobuf:"bytes,10,rep,name=nodal_sid,json=nodalSid,proto3" json:"nodal_sid,omitempty"`
	XXX_NoUnkeyedLiteral   struct{}                            `json:"-"`
	XXX_unrecognized       []byte                              `json:"-"`
	XXX_sizecache          int32                               `json:"-"`
}

func (m *IsisShIpv6RouteAdv) Reset()         { *m = IsisShIpv6RouteAdv{} }
func (m *IsisShIpv6RouteAdv) String() string { return proto.CompactTextString(m) }
func (*IsisShIpv6RouteAdv) ProtoMessage()    {}
func (*IsisShIpv6RouteAdv) Descriptor() ([]byte, []int) {
	return fileDescriptor_5729880b73ebcb3c, []int{18}
}

func (m *IsisShIpv6RouteAdv) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IsisShIpv6RouteAdv.Unmarshal(m, b)
}
func (m *IsisShIpv6RouteAdv) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IsisShIpv6RouteAdv.Marshal(b, m, deterministic)
}
func (m *IsisShIpv6RouteAdv) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IsisShIpv6RouteAdv.Merge(m, src)
}
func (m *IsisShIpv6RouteAdv) XXX_Size() int {
	return xxx_messageInfo_IsisShIpv6RouteAdv.Size(m)
}
func (m *IsisShIpv6RouteAdv) XXX_DiscardUnknown() {
	xxx_messageInfo_IsisShIpv6RouteAdv.DiscardUnknown(m)
}

var xxx_messageInfo_IsisShIpv6RouteAdv proto.InternalMessageInfo

func (m *IsisShIpv6RouteAdv) GetLevel() string {
	if m != nil {
		return m.Level
	}
	return ""
}

func (m *IsisShIpv6RouteAdv) GetAdvertisingOrigin() string {
	if m != nil {
		return m.AdvertisingOrigin
	}
	return ""
}

func (m *IsisShIpv6RouteAdv) GetMetric() uint32 {
	if m != nil {
		return m.Metric
	}
	return 0
}

func (m *IsisShIpv6RouteAdv) GetIsPropagated() bool {
	if m != nil {
		return m.IsPropagated
	}
	return false
}

func (m *IsisShIpv6RouteAdv) GetIsExternalMetric() bool {
	if m != nil {
		return m.IsExternalMetric
	}
	return false
}

func (m *IsisShIpv6RouteAdv) GetSummarizationStatus() *IsisShIpv6RouteSummarizationStatus {
	if m != nil {
		return m.SummarizationStatus
	}
	return nil
}

func (m *IsisShIpv6RouteAdv) GetIsExternalReachability() bool {
	if m != nil {
		return m.IsExternalReachability
	}
	return false
}

func (m *IsisShIpv6RouteAdv) GetIsInterarea() bool {
	if m != nil {
		return m.IsInterarea
	}
	return false
}

func (m *IsisShIpv6RouteAdv) GetTags() []uint32 {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *IsisShIpv6RouteAdv) GetNodalSid() []*IsisNodalSidType {
	if m != nil {
		return m.NodalSid
	}
	return nil
}

type IsisShIpv6Route struct {
	ConnectedStatus           *IsisShRouteConnStatus       `protobuf:"bytes,50,opt,name=connected_status,json=connectedStatus,proto3" json:"connected_status,omitempty"`
	RedistributedStatus       *IsisShRouteRedistStatus     `protobuf:"bytes,51,opt,name=redistributed_status,json=redistributedStatus,proto3" json:"redistributed_status,omitempty"`
	NativeStatus              *IsisShIpv6RouteNativeStatus `protobuf:"bytes,52,opt,name=native_status,json=nativeStatus,proto3" json:"native_status,omitempty"`
	PerLevelAdvertisingDetail []*IsisShIpv6RouteAdv        `protobuf:"bytes,53,rep,name=per_level_advertising_detail,json=perLevelAdvertisingDetail,proto3" json:"per_level_advertising_detail,omitempty"`
	XXX_NoUnkeyedLiteral      struct{}                     `json:"-"`
	XXX_unrecognized          []byte                       `json:"-"`
	XXX_sizecache             int32                        `json:"-"`
}

func (m *IsisShIpv6Route) Reset()         { *m = IsisShIpv6Route{} }
func (m *IsisShIpv6Route) String() string { return proto.CompactTextString(m) }
func (*IsisShIpv6Route) ProtoMessage()    {}
func (*IsisShIpv6Route) Descriptor() ([]byte, []int) {
	return fileDescriptor_5729880b73ebcb3c, []int{19}
}

func (m *IsisShIpv6Route) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IsisShIpv6Route.Unmarshal(m, b)
}
func (m *IsisShIpv6Route) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IsisShIpv6Route.Marshal(b, m, deterministic)
}
func (m *IsisShIpv6Route) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IsisShIpv6Route.Merge(m, src)
}
func (m *IsisShIpv6Route) XXX_Size() int {
	return xxx_messageInfo_IsisShIpv6Route.Size(m)
}
func (m *IsisShIpv6Route) XXX_DiscardUnknown() {
	xxx_messageInfo_IsisShIpv6Route.DiscardUnknown(m)
}

var xxx_messageInfo_IsisShIpv6Route proto.InternalMessageInfo

func (m *IsisShIpv6Route) GetConnectedStatus() *IsisShRouteConnStatus {
	if m != nil {
		return m.ConnectedStatus
	}
	return nil
}

func (m *IsisShIpv6Route) GetRedistributedStatus() *IsisShRouteRedistStatus {
	if m != nil {
		return m.RedistributedStatus
	}
	return nil
}

func (m *IsisShIpv6Route) GetNativeStatus() *IsisShIpv6RouteNativeStatus {
	if m != nil {
		return m.NativeStatus
	}
	return nil
}

func (m *IsisShIpv6Route) GetPerLevelAdvertisingDetail() []*IsisShIpv6RouteAdv {
	if m != nil {
		return m.PerLevelAdvertisingDetail
	}
	return nil
}

func init() {
	proto.RegisterType((*IsisShIpv6Route_KEYS)(nil), "cisco_ios_xr_clns_isis_oper.isis.instances.instance.topologies.topology.ipv6_flex_route_tables.ipv6_flex_route_table.ipv6_flex_route.isis_sh_ipv6_route_KEYS")
	proto.RegisterType((*IsisShRouteConnDetails)(nil), "cisco_ios_xr_clns_isis_oper.isis.instances.instance.topologies.topology.ipv6_flex_route_tables.ipv6_flex_route_table.ipv6_flex_route.isis_sh_route_conn_details")
	proto.RegisterType((*IsisShRouteConnStatus)(nil), "cisco_ios_xr_clns_isis_oper.isis.instances.instance.topologies.topology.ipv6_flex_route_tables.ipv6_flex_route_table.ipv6_flex_route.isis_sh_route_conn_status")
	proto.RegisterType((*IsisShRedistEntryProto)(nil), "cisco_ios_xr_clns_isis_oper.isis.instances.instance.topologies.topology.ipv6_flex_route_tables.ipv6_flex_route_table.ipv6_flex_route.isis_sh_redist_entry_proto")
	proto.RegisterType((*IsisShRouteRedistLevelDetails)(nil), "cisco_ios_xr_clns_isis_oper.isis.instances.instance.topologies.topology.ipv6_flex_route_tables.ipv6_flex_route_table.ipv6_flex_route.isis_sh_route_redist_level_details")
	proto.RegisterType((*IsisShRouteRedistStatus)(nil), "cisco_ios_xr_clns_isis_oper.isis.instances.instance.topologies.topology.ipv6_flex_route_tables.ipv6_flex_route_table.ipv6_flex_route.isis_sh_route_redist_status")
	proto.RegisterType((*IsisShRepEl)(nil), "cisco_ios_xr_clns_isis_oper.isis.instances.instance.topologies.topology.ipv6_flex_route_tables.ipv6_flex_route_table.ipv6_flex_route.isis_sh_rep_el")
	proto.RegisterType((*IsisShIpv6FrrBackup)(nil), "cisco_ios_xr_clns_isis_oper.isis.instances.instance.topologies.topology.ipv6_flex_route_tables.ipv6_flex_route_table.ipv6_flex_route.isis_sh_ipv6_frr_backup")
	proto.RegisterType((*IsisShNnh)(nil), "cisco_ios_xr_clns_isis_oper.isis.instances.instance.topologies.topology.ipv6_flex_route_tables.ipv6_flex_route_table.ipv6_flex_route.isis_sh_nnh")
	proto.RegisterType((*IsisShIpv6Path)(nil), "cisco_ios_xr_clns_isis_oper.isis.instances.instance.topologies.topology.ipv6_flex_route_tables.ipv6_flex_route_table.ipv6_flex_route.isis_sh_ipv6_path")
	proto.RegisterType((*IsisShIpv6UcmpPath)(nil), "cisco_ios_xr_clns_isis_oper.isis.instances.instance.topologies.topology.ipv6_flex_route_tables.ipv6_flex_route_table.ipv6_flex_route.isis_sh_ipv6_ucmp_path")
	proto.RegisterType((*IsisNodalSidType)(nil), "cisco_ios_xr_clns_isis_oper.isis.instances.instance.topologies.topology.ipv6_flex_route_tables.ipv6_flex_route_table.ipv6_flex_route.isis_nodal_sid_type")
	proto.RegisterType((*IsisShIpv6RouteNativeSource)(nil), "cisco_ios_xr_clns_isis_oper.isis.instances.instance.topologies.topology.ipv6_flex_route_tables.ipv6_flex_route_table.ipv6_flex_route.isis_sh_ipv6_route_native_source")
	proto.RegisterType((*IsisShIpv6RouteNativePreference)(nil), "cisco_ios_xr_clns_isis_oper.isis.instances.instance.topologies.topology.ipv6_flex_route_tables.ipv6_flex_route_table.ipv6_flex_route.isis_sh_ipv6_route_native_preference")
	proto.RegisterType((*IsisShIpv6RouteNativeDetails)(nil), "cisco_ios_xr_clns_isis_oper.isis.instances.instance.topologies.topology.ipv6_flex_route_tables.ipv6_flex_route_table.ipv6_flex_route.isis_sh_ipv6_route_native_details")
	proto.RegisterType((*IsisShIpv6RouteNativeStatus)(nil), "cisco_ios_xr_clns_isis_oper.isis.instances.instance.topologies.topology.ipv6_flex_route_tables.ipv6_flex_route_table.ipv6_flex_route.isis_sh_ipv6_route_native_status")
	proto.RegisterType((*IsisIpv6PrefixType)(nil), "cisco_ios_xr_clns_isis_oper.isis.instances.instance.topologies.topology.ipv6_flex_route_tables.ipv6_flex_route_table.ipv6_flex_route.isis_ipv6_prefix_type")
	proto.RegisterType((*IsisShIpv6RouteSummarizationStatus)(nil), "cisco_ios_xr_clns_isis_oper.isis.instances.instance.topologies.topology.ipv6_flex_route_tables.ipv6_flex_route_table.ipv6_flex_route.isis_sh_ipv6_route_summarization_status")
	proto.RegisterType((*IsisShIpv6RouteAdv)(nil), "cisco_ios_xr_clns_isis_oper.isis.instances.instance.topologies.topology.ipv6_flex_route_tables.ipv6_flex_route_table.ipv6_flex_route.isis_sh_ipv6_route_adv")
	proto.RegisterType((*IsisShIpv6Route)(nil), "cisco_ios_xr_clns_isis_oper.isis.instances.instance.topologies.topology.ipv6_flex_route_tables.ipv6_flex_route_table.ipv6_flex_route.isis_sh_ipv6_route")
}

func init() { proto.RegisterFile("isis_sh_ipv6_route.proto", fileDescriptor_5729880b73ebcb3c) }

var fileDescriptor_5729880b73ebcb3c = []byte{
	// 2368 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xd4, 0x5a, 0x4b, 0x8f, 0xe4, 0x48,
	0x11, 0x96, 0xbb, 0xa7, 0xeb, 0x91, 0x55, 0xee, 0x87, 0xfb, 0xe5, 0x79, 0x68, 0x77, 0xb6, 0x66,
	0x81, 0xe6, 0xd5, 0x88, 0x9e, 0xd9, 0xe1, 0x71, 0x9b, 0x65, 0x5a, 0xa2, 0x44, 0x33, 0xb4, 0x5c,
	0xc3, 0x4a, 0x9c, 0xac, 0x6c, 0x3b, 0xab, 0x2a, 0x59, 0x97, 0x6d, 0x9c, 0x59, 0x35, 0xdd, 0x73,
	0x65, 0x11, 0x12, 0x17, 0x84, 0x84, 0x84, 0xd0, 0x82, 0x00, 0x81, 0x78, 0x49, 0xbb, 0x37, 0xb4,
	0x12, 0xb0, 0x5a, 0xa1, 0x15, 0x27, 0x10, 0x48, 0x08, 0xc4, 0x0d, 0xc1, 0x95, 0x03, 0x5c, 0xf8,
	0x01, 0x28, 0x22, 0xd2, 0x76, 0x55, 0x75, 0xf5, 0xcc, 0x0a, 0x0e, 0xeb, 0xbe, 0x55, 0x7e, 0x11,
	0xe9, 0x8c, 0x0c, 0x47, 0x7c, 0x11, 0xe9, 0x2c, 0xe6, 0x4a, 0x25, 0x95, 0xaf, 0x86, 0xbe, 0x4c,
	0x27, 0x77, 0xfd, 0x2c, 0x19, 0x6b, 0xb1, 0x9f, 0x66, 0x89, 0x4e, 0x9c, 0x57, 0xac, 0x40, 0xaa,
	0x20, 0xf1, 0x65, 0xa2, 0xfc, 0xd3, 0xcc, 0x0f, 0xa2, 0x58, 0xf9, 0xa8, 0x9c, 0xa4, 0x22, 0xdb,
	0x87, 0x5f, 0xfb, 0x32, 0x56, 0x9a, 0xc7, 0x81, 0x28, 0x7f, 0xed, 0xeb, 0x24, 0x4d, 0xa2, 0x64,
	0x20, 0x85, 0xca, 0x7f, 0x9e, 0xed, 0xe3, 0xa3, 0xfb, 0x91, 0x38, 0xa5, 0xe7, 0xfb, 0x9a, 0x9f,
	0x44, 0x30, 0x67, 0x11, 0x3c, 0x8f, 0x76, 0xfe, 0x6d, 0xb1, 0xdd, 0xf3, 0x36, 0xfa, 0x9f, 0x39,
	0xfc, 0x42, 0xcf, 0xb9, 0xc5, 0xec, 0x7c, 0x61, 0x3f, 0xe6, 0x23, 0xe1, 0x5a, 0x37, 0xad, 0xbd,
	0xa6, 0xd7, 0xce, 0xc1, 0x07, 0x7c, 0x24, 0x9c, 0x5d, 0x56, 0xe7, 0x7d, 0x12, 0x2f, 0xa1, 0xb8,
	0xc6, 0xfb, 0x28, 0xb8, 0xca, 0x1a, 0x2a, 0x97, 0x2c, 0xa3, 0xa4, 0xae, 0x8c, 0xe8, 0x16, 0xb3,
	0x73, 0xeb, 0x49, 0x7e, 0x85, 0x1e, 0x9c, 0x83, 0xf9, 0x7c, 0xb4, 0x93, 0x47, 0x03, 0x77, 0xe5,
	0xa6, 0xb5, 0x67, 0x7b, 0x75, 0x18, 0xdf, 0x8b, 0x06, 0xce, 0x0e, 0xab, 0xa5, 0x99, 0xe8, 0xcb,
	0x53, 0xb7, 0x46, 0x4b, 0xd2, 0x08, 0x9e, 0x4b, 0xbf, 0xfc, 0x48, 0xc4, 0x03, 0x3d, 0x74, 0xeb,
	0x38, 0xaf, 0x4d, 0xe0, 0x11, 0x62, 0x9d, 0x4f, 0xb2, 0x6b, 0xf9, 0x86, 0x69, 0xaf, 0x41, 0x12,
	0xc7, 0x7e, 0x28, 0x34, 0x97, 0x91, 0x72, 0x6e, 0xb0, 0xa6, 0x8c, 0xb5, 0xc8, 0xfa, 0x3c, 0x80,
	0xfd, 0x2e, 0xef, 0x35, 0xbd, 0x12, 0xe8, 0x7c, 0x75, 0x89, 0x5d, 0x5d, 0x30, 0x59, 0x69, 0xae,
	0xc7, 0x0a, 0x2c, 0x96, 0xca, 0x9f, 0xf0, 0x48, 0x86, 0xc6, 0x55, 0x75, 0xa9, 0x5e, 0x82, 0xa1,
	0xf3, 0x07, 0x8b, 0x6d, 0x80, 0xaa, 0x08, 0xb4, 0x08, 0xf3, 0xc5, 0xd0, 0x61, 0xad, 0x83, 0xef,
	0x5b, 0xfb, 0x55, 0x08, 0x85, 0xfd, 0x8b, 0xbd, 0xe2, 0xad, 0x17, 0xb6, 0xdf, 0x27, 0xa4, 0xf3,
	0xda, 0xd2, 0x94, 0x1b, 0x45, 0x28, 0x95, 0xf6, 0x45, 0xac, 0xb3, 0x33, 0x9f, 0xa2, 0xfb, 0x1a,
	0x6b, 0xe0, 0x8f, 0x20, 0x89, 0x8c, 0x2b, 0x8a, 0xb1, 0xb3, 0xc7, 0xd6, 0x71, 0x66, 0x11, 0x5b,
	0x32, 0x34, 0xa1, 0xb3, 0x0a, 0x78, 0xd7, 0xc0, 0xdd, 0xd0, 0x79, 0x2f, 0x5b, 0x4b, 0x54, 0xda,
	0x87, 0x67, 0x06, 0x42, 0x29, 0x50, 0xa4, 0x48, 0xb2, 0x01, 0x3e, 0x26, 0xb4, 0x1b, 0x3a, 0x1f,
	0x60, 0x1b, 0x00, 0x4c, 0x6e, 0x4f, 0x6b, 0x52, 0x4c, 0xad, 0x91, 0xa0, 0xd4, 0xed, 0x30, 0xfb,
	0x64, 0x90, 0xfa, 0x5c, 0xf9, 0xf1, 0x78, 0x74, 0x22, 0x32, 0x8c, 0xad, 0xa6, 0xd7, 0x3a, 0x19,
	0xa4, 0xf7, 0xd4, 0x03, 0x84, 0x60, 0x5d, 0x21, 0x07, 0xd9, 0xb4, 0x16, 0x05, 0x9a, 0x8d, 0x70,
	0xa1, 0xf7, 0x7e, 0xb6, 0xce, 0xd3, 0x34, 0x92, 0x01, 0xd7, 0x32, 0x89, 0x29, 0x94, 0xeb, 0xb4,
	0xec, 0x14, 0x0e, 0xd1, 0xdc, 0xf9, 0x8f, 0xc5, 0x3a, 0xb3, 0x0e, 0x36, 0x5e, 0x8b, 0xc4, 0x44,
	0x44, 0x45, 0xf8, 0x6d, 0xb1, 0x15, 0x04, 0x8c, 0xd3, 0x68, 0xe0, 0xbc, 0x61, 0xb1, 0x95, 0xe4,
	0x51, 0x2c, 0xb2, 0xaa, 0x46, 0xcc, 0xb9, 0x00, 0xf0, 0xc8, 0xde, 0xce, 0xab, 0x4b, 0xec, 0xfa,
	0xc2, 0x6d, 0x3f, 0x3d, 0x65, 0xfe, 0x6e, 0xb1, 0x1d, 0x52, 0xce, 0xe4, 0xc9, 0x18, 0x1d, 0x5c,
	0xe6, 0xcd, 0xf2, 0x5e, 0xeb, 0xe0, 0xa7, 0x95, 0xcc, 0x9b, 0x45, 0xaf, 0xd5, 0xdb, 0x9e, 0xdd,
	0x48, 0x9e, 0x44, 0x3f, 0x5c, 0x62, 0xab, 0xa5, 0x0f, 0x53, 0x5f, 0x44, 0xce, 0x6d, 0xd8, 0x74,
	0xca, 0x65, 0xe6, 0x8b, 0x48, 0x8c, 0x44, 0xac, 0xfd, 0x38, 0x09, 0x31, 0x45, 0xc8, 0x3d, 0x9b,
	0x24, 0x3d, 0x24, 0xe1, 0x83, 0x24, 0x84, 0x3c, 0xd9, 0x63, 0xeb, 0x66, 0x92, 0x4c, 0x27, 0x77,
	0x7c, 0x1e, 0x86, 0x59, 0x9e, 0x51, 0x84, 0x77, 0xd3, 0xc9, 0x9d, 0x7b, 0x61, 0x98, 0xcd, 0x6a,
	0xde, 0x25, 0xcd, 0xe5, 0x39, 0xcd, 0xbb, 0xa8, 0xf9, 0x1c, 0x6b, 0x1b, 0xcd, 0x88, 0x9f, 0x88,
	0x08, 0xd3, 0xc9, 0xf6, 0x5a, 0x84, 0x1d, 0x01, 0xe4, 0xec, 0xb3, 0xcd, 0x39, 0x5b, 0xf5, 0x59,
	0x2a, 0x0c, 0x59, 0x6f, 0xcc, 0x18, 0xfa, 0xf0, 0x2c, 0x15, 0xce, 0x0b, 0x6c, 0xd7, 0xe8, 0x83,
	0x2b, 0x02, 0xed, 0x43, 0x6e, 0xd3, 0xd3, 0x6b, 0x38, 0x67, 0x8b, 0xc4, 0x3d, 0x94, 0xf6, 0xd2,
	0x3e, 0x2e, 0xd3, 0xf9, 0x72, 0x6b, 0xae, 0x44, 0xf5, 0xb3, 0xcc, 0x3f, 0xe1, 0xc1, 0xcb, 0xe3,
	0xd4, 0x79, 0x96, 0xb5, 0x62, 0x21, 0x07, 0xc3, 0x93, 0x24, 0x2b, 0x7d, 0xc4, 0x72, 0xa8, 0x1b,
	0x42, 0x8a, 0x8a, 0x41, 0x86, 0x94, 0x50, 0xd0, 0x3a, 0xb9, 0x66, 0x8d, 0xf0, 0x6e, 0x0e, 0x83,
	0x6a, 0xf1, 0x2c, 0x70, 0x8c, 0x50, 0xca, 0xf8, 0x66, 0x2d, 0xc7, 0xef, 0x11, 0xec, 0xdc, 0x65,
	0xbb, 0x7a, 0x1c, 0xc7, 0x22, 0xf2, 0xcf, 0x3d, 0x9c, 0x68, 0x67, 0x9b, 0xc4, 0x87, 0x73, 0x4b,
	0xdc, 0x62, 0x76, 0xb1, 0x84, 0x8a, 0x53, 0x6e, 0xc8, 0xa7, 0x9d, 0x83, 0xbd, 0x38, 0xe5, 0xce,
	0x47, 0xd8, 0x56, 0x26, 0x46, 0x89, 0x16, 0x7e, 0xd4, 0xe7, 0xbe, 0x3a, 0x53, 0x5a, 0x8c, 0x60,
	0x73, 0x44, 0x41, 0x1b, 0x24, 0x3b, 0xea, 0xf3, 0x1e, 0x4a, 0xba, 0xe1, 0xdc, 0x04, 0x0c, 0x43,
	0xf4, 0x46, 0x7d, 0x6e, 0x82, 0x87, 0x92, 0x6e, 0xe8, 0x7c, 0x94, 0x6d, 0x9f, 0x5f, 0x21, 0x95,
	0xa1, 0xdb, 0xc0, 0x19, 0xce, 0xdc, 0x12, 0xc7, 0x72, 0x7e, 0x8a, 0x59, 0x03, 0xa6, 0x34, 0xe7,
	0xa6, 0xd0, 0x22, 0x30, 0xe5, 0x80, 0x6d, 0xeb, 0x44, 0xf3, 0xc8, 0xbc, 0x2b, 0x1f, 0x32, 0x00,
	0x32, 0xd0, 0x65, 0xf8, 0xb2, 0x37, 0x51, 0xf8, 0x22, 0xca, 0xee, 0x1b, 0x91, 0xf3, 0x09, 0x76,
	0x55, 0x89, 0x01, 0xc6, 0x12, 0xac, 0x21, 0xe3, 0x81, 0xaf, 0x64, 0x08, 0x04, 0x31, 0x16, 0x6e,
	0x0b, 0xe7, 0xed, 0x18, 0x05, 0x8f, 0xe4, 0x3d, 0x19, 0xbe, 0x04, 0x52, 0x68, 0x44, 0xe2, 0xf1,
	0x08, 0xd4, 0xdd, 0x36, 0x2a, 0xd6, 0xe2, 0xf1, 0xa8, 0x27, 0x43, 0xe7, 0x3e, 0x7b, 0xf6, 0xc2,
	0x67, 0x12, 0x67, 0xb9, 0xf6, 0xcd, 0xe5, 0x3d, 0xdb, 0xbb, 0xbe, 0xf8, 0xc9, 0x87, 0xa0, 0x02,
	0xc1, 0x6b, 0xf6, 0x91, 0xa7, 0x05, 0xd2, 0x98, 0x7c, 0x2c, 0xdc, 0x55, 0x0a, 0x5e, 0x12, 0x7b,
	0x94, 0x20, 0x52, 0xe9, 0x9e, 0x7c, 0x2c, 0x9c, 0x0f, 0xb2, 0x0d, 0x2d, 0xc1, 0x65, 0x41, 0x32,
	0x4a, 0xc7, 0x1a, 0x0b, 0x82, 0xbb, 0x86, 0x3e, 0x5b, 0x47, 0xc1, 0xa7, 0x4a, 0xdc, 0xf9, 0xa5,
	0xc5, 0xec, 0x99, 0x45, 0xdc, 0x75, 0x64, 0xba, 0x6f, 0x56, 0x8e, 0xef, 0x81, 0xab, 0xbc, 0xf6,
	0xf4, 0x8e, 0x21, 0x42, 0x4c, 0xf3, 0xa5, 0x92, 0x71, 0x06, 0x2d, 0xa3, 0x21, 0xae, 0x0d, 0x8a,
	0x10, 0x12, 0xf6, 0x50, 0x66, 0x78, 0x0b, 0x1a, 0x4c, 0xe5, 0x87, 0xc9, 0xa3, 0x58, 0xe9, 0x4c,
	0xf0, 0x91, 0xeb, 0xdc, 0xb4, 0xf6, 0x1a, 0x5e, 0x5b, 0xaa, 0xfb, 0x05, 0xe6, 0x3c, 0x0f, 0x1c,
	0xe9, 0x47, 0x01, 0xc4, 0xcf, 0x17, 0x13, 0x19, 0x6b, 0x77, 0x33, 0xd7, 0x3a, 0x0a, 0xee, 0x1b,
	0xcc, 0xf9, 0x10, 0x73, 0xa4, 0xa2, 0x25, 0xa1, 0x00, 0x89, 0x00, 0xde, 0xa0, 0xbb, 0x85, 0x9a,
	0xeb, 0x52, 0xc1, 0x82, 0xc7, 0x05, 0x0e, 0x05, 0x5e, 0x2a, 0x3f, 0xcd, 0xe4, 0x88, 0x43, 0xc5,
	0xe2, 0x7a, 0xe8, 0x6e, 0xa3, 0xaa, 0x2d, 0xd5, 0x31, 0xa1, 0xc7, 0x5c, 0x0f, 0xa9, 0x55, 0xf1,
	0x55, 0x16, 0x0d, 0xca, 0xd5, 0x77, 0x50, 0x71, 0x55, 0xaa, 0x5e, 0x16, 0x0d, 0x8a, 0xf5, 0x3b,
	0xb8, 0x95, 0x32, 0x45, 0xdc, 0x5d, 0x54, 0x6b, 0x49, 0xe5, 0xe5, 0x99, 0x61, 0x74, 0x44, 0x1a,
	0x00, 0x81, 0x81, 0x8e, 0x9b, 0xeb, 0x1c, 0x22, 0x06, 0x3a, 0x66, 0xc5, 0x82, 0x1f, 0x41, 0xed,
	0x6a, 0xb1, 0x62, 0x4e, 0x8c, 0x51, 0x9f, 0x03, 0xfb, 0x4a, 0xe5, 0x1b, 0x1a, 0xca, 0xc4, 0x97,
	0xc6, 0x42, 0x69, 0x11, 0xba, 0xd7, 0x50, 0x79, 0x43, 0xaa, 0x87, 0x28, 0xf1, 0x72, 0x01, 0x34,
	0xcd, 0x8f, 0x80, 0x66, 0xb4, 0x7b, 0x9d, 0xd2, 0x83, 0x46, 0xce, 0x7b, 0xd8, 0x6a, 0x32, 0xd6,
	0x83, 0x04, 0xf2, 0x82, 0xc8, 0xf8, 0x06, 0xca, 0xed, 0x1c, 0x25, 0x16, 0x7e, 0xc5, 0x62, 0xad,
	0xfc, 0xfd, 0xc7, 0xf1, 0xd0, 0x79, 0x86, 0xb5, 0x22, 0x19, 0xbf, 0xec, 0xcb, 0xd0, 0x57, 0x42,
	0x23, 0xf3, 0x36, 0xbc, 0x26, 0x40, 0xdd, 0xb0, 0x27, 0x34, 0x56, 0x76, 0x28, 0x46, 0x20, 0x5c,
	0x42, 0x61, 0x1d, 0xc6, 0x20, 0xda, 0x65, 0x75, 0x33, 0x15, 0xf9, 0xd5, 0xf6, 0x6a, 0x34, 0x0d,
	0x6a, 0x4e, 0x51, 0xc0, 0x80, 0x7d, 0x89, 0x4b, 0x5b, 0xd2, 0x54, 0x2f, 0xa1, 0x54, 0xe7, 0x2b,
	0x0d, 0xb6, 0x31, 0x53, 0x0c, 0xe0, 0xe5, 0xbd, 0x5b, 0x65, 0xe0, 0x1c, 0x9d, 0x5f, 0x59, 0x40,
	0xe7, 0xeb, 0x6c, 0x59, 0xf3, 0xfc, 0x08, 0x03, 0x3f, 0x9d, 0x37, 0x2d, 0xc6, 0xca, 0x1a, 0x86,
	0xbc, 0xde, 0x3a, 0xf8, 0x6e, 0xc5, 0x72, 0x7c, 0xae, 0xd2, 0x7a, 0xcd, 0x7e, 0x96, 0x11, 0x59,
	0x3b, 0xbf, 0xb6, 0xd8, 0xea, 0x38, 0x4a, 0x92, 0xd4, 0x17, 0xa7, 0xd0, 0xe5, 0x4a, 0xed, 0xd6,
	0xab, 0xcc, 0x53, 0x36, 0x1a, 0x7b, 0x68, 0x6c, 0x75, 0x7e, 0x64, 0xb1, 0xe5, 0x38, 0x1e, 0xba,
	0x0d, 0xb4, 0xf9, 0x1b, 0x15, 0xb3, 0x39, 0x8e, 0x87, 0x1e, 0x98, 0x07, 0x71, 0x68, 0x92, 0xbb,
	0x0c, 0x59, 0x2a, 0xb6, 0x6b, 0x84, 0x97, 0x21, 0xfb, 0xc4, 0xaa, 0xc9, 0x9e, 0x58, 0x35, 0x4b,
	0x56, 0x68, 0xcd, 0xb0, 0xc2, 0x6d, 0xb6, 0x03, 0xec, 0x22, 0xfc, 0x73, 0x36, 0xb4, 0x31, 0x99,
	0x37, 0xa5, 0x7a, 0x28, 0x1e, 0xce, 0xd9, 0xf1, 0x22, 0x7b, 0x06, 0xe9, 0xd2, 0x17, 0xa7, 0x41,
	0x34, 0x0e, 0x17, 0x4c, 0xb6, 0x71, 0xf2, 0x35, 0x20, 0xcf, 0x43, 0xd2, 0x99, 0x7f, 0xc6, 0x79,
	0x3a, 0x5a, 0x5d, 0x44, 0x47, 0x3f, 0x5b, 0x01, 0x03, 0xa7, 0x42, 0x75, 0x1c, 0x8c, 0xd2, 0xcb,
	0x48, 0x06, 0xfb, 0x8c, 0x1a, 0x21, 0xda, 0x40, 0xd1, 0x23, 0x51, 0x43, 0xbc, 0x81, 0xa2, 0xcf,
	0x07, 0xa3, 0xb2, 0x43, 0x9a, 0x23, 0x8f, 0xfa, 0x65, 0x23, 0x8f, 0x27, 0xc6, 0x6a, 0xe3, 0x1d,
	0xc6, 0x6a, 0xf3, 0x1d, 0xc6, 0x2a, 0xfb, 0x7f, 0x62, 0xb5, 0xf5, 0x3f, 0xc4, 0x6a, 0x7b, 0x51,
	0xac, 0xfe, 0xd9, 0x82, 0x52, 0x4d, 0xed, 0x09, 0x8f, 0x70, 0xbb, 0x70, 0x50, 0x72, 0xae, 0xb3,
	0x66, 0xb9, 0x75, 0x0b, 0x67, 0x36, 0x54, 0xbe, 0xd9, 0x2d, 0xb6, 0x92, 0xf5, 0x23, 0x3e, 0xc0,
	0xc8, 0xb4, 0x3d, 0x1a, 0x00, 0x1a, 0x23, 0x4a, 0x85, 0x93, 0x06, 0x80, 0xa6, 0x88, 0xd2, 0x21,
	0x8d, 0x06, 0x80, 0x0a, 0x44, 0x29, 0xda, 0x68, 0x00, 0xe8, 0x04, 0x51, 0x8a, 0x30, 0x1a, 0xe0,
	0x77, 0x07, 0x44, 0xe9, 0x8b, 0x19, 0x0d, 0x9c, 0x1b, 0xac, 0xc9, 0xa3, 0x41, 0x92, 0x49, 0x3d,
	0x1c, 0x99, 0x77, 0x53, 0x02, 0x9d, 0x5f, 0x2d, 0xb1, 0x9b, 0x0b, 0x3e, 0x1d, 0xc6, 0x5c, 0xcb,
	0x89, 0x30, 0x4d, 0x20, 0xf4, 0x3c, 0xa6, 0x1d, 0x8c, 0x54, 0x5a, 0xa6, 0x63, 0x8b, 0xc0, 0x23,
	0x95, 0x76, 0x43, 0x70, 0xa3, 0xd1, 0xc9, 0x53, 0x8c, 0xb2, 0xd1, 0xcc, 0xcc, 0x13, 0xcc, 0x61,
	0x57, 0x34, 0x1f, 0x40, 0xfe, 0x41, 0xb3, 0x8e, 0xbf, 0x9d, 0x37, 0x2c, 0xd6, 0x2c, 0xbc, 0xea,
	0x5e, 0x41, 0x46, 0xff, 0x76, 0x95, 0x92, 0x61, 0xf6, 0x95, 0x7b, 0x0d, 0x1c, 0xf7, 0x64, 0xd8,
	0x79, 0xbd, 0xcd, 0x9e, 0xbf, 0xd8, 0x7b, 0xd0, 0x2c, 0x8b, 0x4c, 0x40, 0xc2, 0xef, 0xb0, 0x5a,
	0x92, 0xc9, 0x81, 0x8c, 0x8d, 0xeb, 0xcc, 0x08, 0xf0, 0x91, 0x80, 0x86, 0xd0, 0x44, 0x88, 0x19,
	0x01, 0x65, 0x8d, 0xc6, 0x91, 0x96, 0x01, 0x57, 0xda, 0x37, 0x1a, 0x14, 0x2d, 0x6b, 0x05, 0xfe,
	0x59, 0x52, 0xa5, 0xa6, 0x59, 0x9c, 0x6a, 0x91, 0xc5, 0x3c, 0xca, 0x95, 0xaf, 0xe4, 0x4d, 0xf3,
	0xa1, 0x11, 0x18, 0xed, 0x8f, 0xb1, 0x5d, 0x1e, 0x8e, 0x64, 0x2c, 0x95, 0xce, 0xc8, 0xca, 0x82,
	0xad, 0x28, 0xc2, 0x76, 0x66, 0xc5, 0x05, 0x65, 0xbd, 0x6e, 0xb1, 0x15, 0x60, 0x66, 0xe5, 0xd6,
	0xf0, 0x05, 0x7d, 0xab, 0x8a, 0x6c, 0x05, 0x06, 0x7a, 0x64, 0xa6, 0xf3, 0x1b, 0x8b, 0xd9, 0x48,
	0xc7, 0xb1, 0x38, 0xd5, 0xfe, 0x30, 0x49, 0x4d, 0x7f, 0xf3, 0x9d, 0x2a, 0x1a, 0x5e, 0x14, 0x3e,
	0xaf, 0x05, 0x3f, 0x1f, 0x88, 0x53, 0xfd, 0xe9, 0x24, 0x75, 0xde, 0xb2, 0xd8, 0x6a, 0x19, 0x07,
	0x78, 0xc4, 0x69, 0x54, 0xdc, 0xfb, 0x76, 0x61, 0x2f, 0x1e, 0xbe, 0x7e, 0x61, 0xb1, 0xa6, 0xca,
	0xb4, 0x20, 0xe3, 0x9b, 0x15, 0x37, 0xbe, 0x01, 0xa6, 0xa2, 0xdd, 0x6f, 0x5a, 0xcc, 0xce, 0x1b,
	0x63, 0xb2, 0x9d, 0x55, 0xdc, 0xf6, 0x76, 0x6e, 0x2e, 0xda, 0xff, 0x96, 0xc5, 0x6a, 0xc4, 0xbc,
	0x6e, 0x0b, 0x0d, 0xff, 0x71, 0x15, 0x0d, 0x5f, 0x50, 0x6c, 0x3c, 0x63, 0xb6, 0xf3, 0x27, 0x6b,
	0x9a, 0x03, 0xcd, 0x5e, 0xda, 0x97, 0x6b, 0x2f, 0x25, 0x59, 0xd3, 0x27, 0x93, 0xce, 0xbf, 0x96,
	0xd9, 0x73, 0x17, 0xcf, 0xca, 0x2f, 0x10, 0x7e, 0x6b, 0xb1, 0xba, 0xf9, 0xae, 0x81, 0xf5, 0xa2,
	0x75, 0xf0, 0xf3, 0xca, 0xef, 0xb8, 0x2c, 0x76, 0x5e, 0x6e, 0xbb, 0xf3, 0xb6, 0xc5, 0x6a, 0xa6,
	0xc5, 0xa5, 0xaf, 0xfd, 0x97, 0x6a, 0x1b, 0xc6, 0x74, 0xba, 0x06, 0x93, 0xd0, 0x2f, 0x9d, 0x99,
	0x63, 0x43, 0x31, 0x86, 0x63, 0x4a, 0x94, 0x04, 0x3c, 0x9a, 0xf9, 0xbe, 0xce, 0x10, 0xa2, 0xb6,
	0xf1, 0xeb, 0x4f, 0xee, 0xaf, 0x9e, 0x7a, 0x81, 0xf2, 0x47, 0x8b, 0xad, 0xce, 0x46, 0x87, 0xb9,
	0x3e, 0xfa, 0x49, 0xe5, 0x5d, 0x99, 0xdf, 0x9b, 0xd8, 0x34, 0xce, 0xef, 0x4b, 0x1e, 0xb2, 0x6d,
	0xba, 0x39, 0x44, 0xe6, 0xa2, 0x8f, 0x8d, 0xd8, 0x49, 0x97, 0x17, 0xc2, 0xd6, 0x93, 0x2f, 0x84,
	0x97, 0x16, 0x5c, 0x08, 0x7f, 0x6d, 0x89, 0xbd, 0x6f, 0x81, 0x29, 0x6a, 0x3c, 0x1a, 0xf1, 0x4c,
	0x3e, 0xa6, 0xbb, 0xbd, 0xa7, 0xbb, 0xfb, 0x6d, 0x8b, 0xad, 0xd2, 0x9c, 0x33, 0x63, 0x9b, 0x71,
	0xf7, 0xab, 0x55, 0x72, 0xf7, 0xbc, 0xeb, 0x3c, 0xdb, 0xd8, 0x7c, 0x8c, 0x58, 0xe7, 0xaf, 0xf3,
	0xe7, 0x6a, 0x7a, 0x22, 0x0f, 0x27, 0x17, 0xdc, 0x4d, 0x7e, 0x98, 0x39, 0x3c, 0x9c, 0x88, 0x4c,
	0x4b, 0x05, 0xc7, 0x20, 0xd3, 0xaa, 0x52, 0x03, 0xbf, 0x31, 0x25, 0xf9, 0xdc, 0x7c, 0xd7, 0xba,
	0x3c, 0xd3, 0xb5, 0xd2, 0xa7, 0xe0, 0x34, 0x4b, 0x52, 0x3e, 0xe0, 0x5a, 0x84, 0xa6, 0x0b, 0x6d,
	0x4b, 0x75, 0x5c, 0x60, 0x17, 0xf4, 0xab, 0x2b, 0x17, 0xf4, 0xab, 0xff, 0xb0, 0xd8, 0xd6, 0xa2,
	0x97, 0x68, 0x3e, 0xb8, 0xbd, 0x56, 0xdd, 0x2c, 0x58, 0x64, 0xb5, 0xb7, 0x39, 0x83, 0xf6, 0x28,
	0x1e, 0x3f, 0xce, 0xdc, 0x69, 0x8f, 0x64, 0x82, 0x07, 0x43, 0x7e, 0x22, 0x23, 0x20, 0x9c, 0x3a,
	0xfa, 0x65, 0xa7, 0xf4, 0x8b, 0x37, 0x25, 0xc5, 0x6f, 0xad, 0xe6, 0x03, 0x08, 0xcf, 0x04, 0xc7,
	0xe3, 0x1d, 0x7e, 0x8b, 0xee, 0xe6, 0x50, 0x71, 0xe0, 0x6a, 0x5e, 0x78, 0xe0, 0x62, 0x97, 0xe8,
	0xc0, 0xf5, 0xcf, 0x1a, 0x44, 0xcf, 0xbc, 0xaf, 0x9d, 0xdf, 0x59, 0xac, 0xfc, 0x77, 0x43, 0x1e,
	0x21, 0x07, 0x18, 0x21, 0xdf, 0xab, 0xee, 0x1f, 0x33, 0x4c, 0x4c, 0xac, 0x15, 0x96, 0x9b, 0x78,
	0xf8, 0x8b, 0xc5, 0xb6, 0xa6, 0xee, 0x9a, 0xcb, 0x1d, 0xdd, 0xc6, 0x1d, 0xfd, 0xa0, 0xca, 0x57,
	0xe6, 0x79, 0x9c, 0xcf, 0xd8, 0x6f, 0xf6, 0xf5, 0x7b, 0x8b, 0xd9, 0x33, 0x85, 0xcf, 0xbd, 0x83,
	0x1b, 0xba, 0x04, 0xed, 0x1c, 0xed, 0xaa, 0x4d, 0x43, 0xb3, 0x9d, 0xbf, 0x59, 0xec, 0x46, 0x2a,
	0x32, 0xf3, 0x2f, 0x81, 0x69, 0xfe, 0xa4, 0xca, 0xe7, 0xbe, 0x50, 0xdd, 0xf3, 0x66, 0x51, 0x10,
	0xbc, 0xab, 0xa9, 0xc8, 0x8e, 0x60, 0x07, 0xf7, 0xca, 0x0d, 0x50, 0xa9, 0x3e, 0xa9, 0xe1, 0xbf,
	0x40, 0x6e, 0xff, 0x37, 0x00, 0x00, 0xff, 0xff, 0xce, 0xe2, 0x0d, 0xfb, 0x00, 0x27, 0x00, 0x00,
}
