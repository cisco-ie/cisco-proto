/*
Copyright 2019 Cisco Systems

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: isis_sh_flex_algo.proto

package cisco_ios_xr_clns_isis_oper_isis_instances_instance_flex_algos_flex_algo

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type IsisShFlexAlgo_KEYS struct {
	InstanceName         string   `protobuf:"bytes,1,opt,name=instance_name,json=instanceName,proto3" json:"instance_name,omitempty"`
	FlexAlg              uint32   `protobuf:"varint,2,opt,name=flex_alg,json=flexAlg,proto3" json:"flex_alg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IsisShFlexAlgo_KEYS) Reset()         { *m = IsisShFlexAlgo_KEYS{} }
func (m *IsisShFlexAlgo_KEYS) String() string { return proto.CompactTextString(m) }
func (*IsisShFlexAlgo_KEYS) ProtoMessage()    {}
func (*IsisShFlexAlgo_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_e9fa4b0681d98aa6, []int{0}
}

func (m *IsisShFlexAlgo_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IsisShFlexAlgo_KEYS.Unmarshal(m, b)
}
func (m *IsisShFlexAlgo_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IsisShFlexAlgo_KEYS.Marshal(b, m, deterministic)
}
func (m *IsisShFlexAlgo_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IsisShFlexAlgo_KEYS.Merge(m, src)
}
func (m *IsisShFlexAlgo_KEYS) XXX_Size() int {
	return xxx_messageInfo_IsisShFlexAlgo_KEYS.Size(m)
}
func (m *IsisShFlexAlgo_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_IsisShFlexAlgo_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_IsisShFlexAlgo_KEYS proto.InternalMessageInfo

func (m *IsisShFlexAlgo_KEYS) GetInstanceName() string {
	if m != nil {
		return m.InstanceName
	}
	return ""
}

func (m *IsisShFlexAlgo_KEYS) GetFlexAlg() uint32 {
	if m != nil {
		return m.FlexAlg
	}
	return 0
}

type IsisShFlexAlgo struct {
	Number               uint32   `protobuf:"varint,50,opt,name=number,proto3" json:"number,omitempty"`
	LocalPriority        uint32   `protobuf:"varint,51,opt,name=local_priority,json=localPriority,proto3" json:"local_priority,omitempty"`
	Disabled             bool     `protobuf:"varint,52,opt,name=disabled,proto3" json:"disabled,omitempty"`
	DefinitionPrioroty   uint32   `protobuf:"varint,53,opt,name=definition_prioroty,json=definitionPrioroty,proto3" json:"definition_prioroty,omitempty"`
	DefinitionLocal      bool     `protobuf:"varint,54,opt,name=definition_local,json=definitionLocal,proto3" json:"definition_local,omitempty"`
	DefinitionEqualLocal bool     `protobuf:"varint,55,opt,name=definition_equal_local,json=definitionEqualLocal,proto3" json:"definition_equal_local,omitempty"`
	DefiniionNodeId      string   `protobuf:"bytes,56,opt,name=definiion_node_id,json=definiionNodeId,proto3" json:"definiion_node_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IsisShFlexAlgo) Reset()         { *m = IsisShFlexAlgo{} }
func (m *IsisShFlexAlgo) String() string { return proto.CompactTextString(m) }
func (*IsisShFlexAlgo) ProtoMessage()    {}
func (*IsisShFlexAlgo) Descriptor() ([]byte, []int) {
	return fileDescriptor_e9fa4b0681d98aa6, []int{1}
}

func (m *IsisShFlexAlgo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IsisShFlexAlgo.Unmarshal(m, b)
}
func (m *IsisShFlexAlgo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IsisShFlexAlgo.Marshal(b, m, deterministic)
}
func (m *IsisShFlexAlgo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IsisShFlexAlgo.Merge(m, src)
}
func (m *IsisShFlexAlgo) XXX_Size() int {
	return xxx_messageInfo_IsisShFlexAlgo.Size(m)
}
func (m *IsisShFlexAlgo) XXX_DiscardUnknown() {
	xxx_messageInfo_IsisShFlexAlgo.DiscardUnknown(m)
}

var xxx_messageInfo_IsisShFlexAlgo proto.InternalMessageInfo

func (m *IsisShFlexAlgo) GetNumber() uint32 {
	if m != nil {
		return m.Number
	}
	return 0
}

func (m *IsisShFlexAlgo) GetLocalPriority() uint32 {
	if m != nil {
		return m.LocalPriority
	}
	return 0
}

func (m *IsisShFlexAlgo) GetDisabled() bool {
	if m != nil {
		return m.Disabled
	}
	return false
}

func (m *IsisShFlexAlgo) GetDefinitionPrioroty() uint32 {
	if m != nil {
		return m.DefinitionPrioroty
	}
	return 0
}

func (m *IsisShFlexAlgo) GetDefinitionLocal() bool {
	if m != nil {
		return m.DefinitionLocal
	}
	return false
}

func (m *IsisShFlexAlgo) GetDefinitionEqualLocal() bool {
	if m != nil {
		return m.DefinitionEqualLocal
	}
	return false
}

func (m *IsisShFlexAlgo) GetDefiniionNodeId() string {
	if m != nil {
		return m.DefiniionNodeId
	}
	return ""
}

func init() {
	proto.RegisterType((*IsisShFlexAlgo_KEYS)(nil), "cisco_ios_xr_clns_isis_oper.isis.instances.instance.flex_algos.flex_algo.isis_sh_flex_algo_KEYS")
	proto.RegisterType((*IsisShFlexAlgo)(nil), "cisco_ios_xr_clns_isis_oper.isis.instances.instance.flex_algos.flex_algo.isis_sh_flex_algo")
}

func init() { proto.RegisterFile("isis_sh_flex_algo.proto", fileDescriptor_e9fa4b0681d98aa6) }

var fileDescriptor_e9fa4b0681d98aa6 = []byte{
	// 308 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x64, 0x91, 0x4f, 0x4f, 0x02, 0x31,
	0x10, 0xc5, 0xb3, 0x1c, 0x10, 0x27, 0x22, 0x52, 0x0d, 0x56, 0x4f, 0x04, 0x63, 0x82, 0x1e, 0xd6,
	0x44, 0xf0, 0xcf, 0xd5, 0x03, 0x89, 0x46, 0x43, 0x08, 0x5e, 0xf4, 0xd4, 0x94, 0x6d, 0xc1, 0x49,
	0x4a, 0x07, 0xdb, 0x25, 0x81, 0xef, 0xe4, 0x87, 0x34, 0x5b, 0x96, 0x5d, 0x12, 0x6e, 0x33, 0xef,
	0xbd, 0xdf, 0x9b, 0xa4, 0x85, 0x73, 0xf4, 0xe8, 0x85, 0xff, 0x11, 0x53, 0xa3, 0x57, 0x42, 0x9a,
	0x19, 0xc5, 0x0b, 0x47, 0x29, 0xb1, 0xd7, 0x04, 0x7d, 0x42, 0x02, 0xc9, 0x8b, 0x95, 0x13, 0x89,
	0xb1, 0x5e, 0x84, 0x28, 0x2d, 0xb4, 0x8b, 0xb3, 0x29, 0x46, 0xeb, 0x53, 0x69, 0x13, 0x5d, 0x4e,
	0x71, 0x51, 0xe2, 0xcb, 0xb1, 0xf3, 0x05, 0xad, 0xbd, 0x23, 0xe2, 0x7d, 0xf0, 0xfd, 0xc9, 0xae,
	0xa0, 0xbe, 0x45, 0x85, 0x95, 0x73, 0xcd, 0xa3, 0x76, 0xd4, 0x3d, 0x1c, 0x1f, 0x6d, 0xc5, 0xa1,
	0x9c, 0x6b, 0x76, 0x01, 0xb5, 0x2d, 0xc6, 0x2b, 0xed, 0xa8, 0x5b, 0x1f, 0x1f, 0x64, 0xfb, 0x8b,
	0x99, 0x75, 0xfe, 0x2a, 0xd0, 0xdc, 0xab, 0x66, 0x2d, 0xa8, 0xda, 0xe5, 0x7c, 0xa2, 0x1d, 0xbf,
	0x0f, 0xf1, 0x7c, 0x63, 0xd7, 0x70, 0x6c, 0x28, 0x91, 0x46, 0x2c, 0x1c, 0x92, 0xc3, 0x74, 0xcd,
	0x7b, 0xc1, 0xaf, 0x07, 0x75, 0x94, 0x8b, 0xec, 0x12, 0x6a, 0x0a, 0xbd, 0x9c, 0x18, 0xad, 0x78,
	0xbf, 0x1d, 0x75, 0x6b, 0xe3, 0x62, 0x67, 0x77, 0x70, 0xaa, 0xf4, 0x14, 0x2d, 0xa6, 0x48, 0x76,
	0xd3, 0x43, 0xe9, 0x9a, 0x3f, 0x84, 0x1e, 0x56, 0x5a, 0xa3, 0xdc, 0x61, 0x37, 0x70, 0xb2, 0x03,
	0x84, 0x43, 0xfc, 0x31, 0x94, 0x36, 0x4a, 0xfd, 0x23, 0x93, 0x59, 0x1f, 0x5a, 0x3b, 0x51, 0xfd,
	0xbb, 0x94, 0x26, 0x07, 0x9e, 0x02, 0x70, 0x56, 0xba, 0x83, 0xcc, 0xdc, 0x50, 0xb7, 0xd0, 0xdc,
	0xe8, 0x19, 0x64, 0x49, 0x69, 0x81, 0x8a, 0x3f, 0x87, 0x67, 0x6c, 0x14, 0xc6, 0x90, 0x94, 0x7e,
	0x53, 0x93, 0x6a, 0xf8, 0xd9, 0xde, 0x7f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x4f, 0x3f, 0x8f, 0x2f,
	0xf4, 0x01, 0x00, 0x00,
}
