/*
Copyright 2019 Cisco Systems

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: isis_sh_nsr_status_global.proto

package cisco_ios_xr_clns_isis_oper_isis_instances_instance_nsr_status

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type IsisShNsrStatusGlobal_KEYS struct {
	InstanceName         string   `protobuf:"bytes,1,opt,name=instance_name,json=instanceName,proto3" json:"instance_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IsisShNsrStatusGlobal_KEYS) Reset()         { *m = IsisShNsrStatusGlobal_KEYS{} }
func (m *IsisShNsrStatusGlobal_KEYS) String() string { return proto.CompactTextString(m) }
func (*IsisShNsrStatusGlobal_KEYS) ProtoMessage()    {}
func (*IsisShNsrStatusGlobal_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_0d348ec9ac5b05fa, []int{0}
}

func (m *IsisShNsrStatusGlobal_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IsisShNsrStatusGlobal_KEYS.Unmarshal(m, b)
}
func (m *IsisShNsrStatusGlobal_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IsisShNsrStatusGlobal_KEYS.Marshal(b, m, deterministic)
}
func (m *IsisShNsrStatusGlobal_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IsisShNsrStatusGlobal_KEYS.Merge(m, src)
}
func (m *IsisShNsrStatusGlobal_KEYS) XXX_Size() int {
	return xxx_messageInfo_IsisShNsrStatusGlobal_KEYS.Size(m)
}
func (m *IsisShNsrStatusGlobal_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_IsisShNsrStatusGlobal_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_IsisShNsrStatusGlobal_KEYS proto.InternalMessageInfo

func (m *IsisShNsrStatusGlobal_KEYS) GetInstanceName() string {
	if m != nil {
		return m.InstanceName
	}
	return ""
}

type NsrStatusGblType struct {
	FullSyncAchieved     []uint32 `protobuf:"varint,1,rep,packed,name=full_sync_achieved,json=fullSyncAchieved,proto3" json:"full_sync_achieved,omitempty"`
	ManSyncCount         []uint32 `protobuf:"varint,2,rep,packed,name=man_sync_count,json=manSyncCount,proto3" json:"man_sync_count,omitempty"`
	NsrChgCount          []uint32 `protobuf:"varint,3,rep,packed,name=nsr_chg_count,json=nsrChgCount,proto3" json:"nsr_chg_count,omitempty"`
	UptimeValid          []bool   `protobuf:"varint,4,rep,packed,name=uptime_valid,json=uptimeValid,proto3" json:"uptime_valid,omitempty"`
	Uptime               []uint32 `protobuf:"varint,5,rep,packed,name=uptime,proto3" json:"uptime,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NsrStatusGblType) Reset()         { *m = NsrStatusGblType{} }
func (m *NsrStatusGblType) String() string { return proto.CompactTextString(m) }
func (*NsrStatusGblType) ProtoMessage()    {}
func (*NsrStatusGblType) Descriptor() ([]byte, []int) {
	return fileDescriptor_0d348ec9ac5b05fa, []int{1}
}

func (m *NsrStatusGblType) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NsrStatusGblType.Unmarshal(m, b)
}
func (m *NsrStatusGblType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NsrStatusGblType.Marshal(b, m, deterministic)
}
func (m *NsrStatusGblType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NsrStatusGblType.Merge(m, src)
}
func (m *NsrStatusGblType) XXX_Size() int {
	return xxx_messageInfo_NsrStatusGblType.Size(m)
}
func (m *NsrStatusGblType) XXX_DiscardUnknown() {
	xxx_messageInfo_NsrStatusGblType.DiscardUnknown(m)
}

var xxx_messageInfo_NsrStatusGblType proto.InternalMessageInfo

func (m *NsrStatusGblType) GetFullSyncAchieved() []uint32 {
	if m != nil {
		return m.FullSyncAchieved
	}
	return nil
}

func (m *NsrStatusGblType) GetManSyncCount() []uint32 {
	if m != nil {
		return m.ManSyncCount
	}
	return nil
}

func (m *NsrStatusGblType) GetNsrChgCount() []uint32 {
	if m != nil {
		return m.NsrChgCount
	}
	return nil
}

func (m *NsrStatusGblType) GetUptimeValid() []bool {
	if m != nil {
		return m.UptimeValid
	}
	return nil
}

func (m *NsrStatusGblType) GetUptime() []uint32 {
	if m != nil {
		return m.Uptime
	}
	return nil
}

type NsrStatusGen struct {
	MyNodeid             uint32   `protobuf:"varint,1,opt,name=my_nodeid,json=myNodeid,proto3" json:"my_nodeid,omitempty"`
	MyProcessId          uint32   `protobuf:"varint,2,opt,name=my_process_id,json=myProcessId,proto3" json:"my_process_id,omitempty"`
	PmIssuRole           uint32   `protobuf:"varint,3,opt,name=pm_issu_role,json=pmIssuRole,proto3" json:"pm_issu_role,omitempty"`
	PmHaRole             uint32   `protobuf:"varint,4,opt,name=pm_ha_role,json=pmHaRole,proto3" json:"pm_ha_role,omitempty"`
	SysmgrHaRole         uint32   `protobuf:"varint,5,opt,name=sysmgr_ha_role,json=sysmgrHaRole,proto3" json:"sysmgr_ha_role,omitempty"`
	NsrSendReady         uint32   `protobuf:"varint,6,opt,name=nsr_send_ready,json=nsrSendReady,proto3" json:"nsr_send_ready,omitempty"`
	NsrSendUnready       uint32   `protobuf:"varint,7,opt,name=nsr_send_unready,json=nsrSendUnready,proto3" json:"nsr_send_unready,omitempty"`
	NsrSendErr           uint32   `protobuf:"varint,8,opt,name=nsr_send_err,json=nsrSendErr,proto3" json:"nsr_send_err,omitempty"`
	NsrRecvErr           uint32   `protobuf:"varint,9,opt,name=nsr_recv_err,json=nsrRecvErr,proto3" json:"nsr_recv_err,omitempty"`
	RetryFlag            uint32   `protobuf:"varint,10,opt,name=retry_flag,json=retryFlag,proto3" json:"retry_flag,omitempty"`
	NsrEnabled           bool     `protobuf:"varint,11,opt,name=nsr_enabled,json=nsrEnabled,proto3" json:"nsr_enabled,omitempty"`
	NsrConfigured        bool     `protobuf:"varint,12,opt,name=nsr_configured,json=nsrConfigured,proto3" json:"nsr_configured,omitempty"`
	NsfConfigured        bool     `protobuf:"varint,13,opt,name=nsf_configured,json=nsfConfigured,proto3" json:"nsf_configured,omitempty"`
	Failover             bool     `protobuf:"varint,14,opt,name=failover,proto3" json:"failover,omitempty"`
	LanidReqNeeded       bool     `protobuf:"varint,15,opt,name=lanid_req_needed,json=lanidReqNeeded,proto3" json:"lanid_req_needed,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NsrStatusGen) Reset()         { *m = NsrStatusGen{} }
func (m *NsrStatusGen) String() string { return proto.CompactTextString(m) }
func (*NsrStatusGen) ProtoMessage()    {}
func (*NsrStatusGen) Descriptor() ([]byte, []int) {
	return fileDescriptor_0d348ec9ac5b05fa, []int{2}
}

func (m *NsrStatusGen) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NsrStatusGen.Unmarshal(m, b)
}
func (m *NsrStatusGen) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NsrStatusGen.Marshal(b, m, deterministic)
}
func (m *NsrStatusGen) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NsrStatusGen.Merge(m, src)
}
func (m *NsrStatusGen) XXX_Size() int {
	return xxx_messageInfo_NsrStatusGen.Size(m)
}
func (m *NsrStatusGen) XXX_DiscardUnknown() {
	xxx_messageInfo_NsrStatusGen.DiscardUnknown(m)
}

var xxx_messageInfo_NsrStatusGen proto.InternalMessageInfo

func (m *NsrStatusGen) GetMyNodeid() uint32 {
	if m != nil {
		return m.MyNodeid
	}
	return 0
}

func (m *NsrStatusGen) GetMyProcessId() uint32 {
	if m != nil {
		return m.MyProcessId
	}
	return 0
}

func (m *NsrStatusGen) GetPmIssuRole() uint32 {
	if m != nil {
		return m.PmIssuRole
	}
	return 0
}

func (m *NsrStatusGen) GetPmHaRole() uint32 {
	if m != nil {
		return m.PmHaRole
	}
	return 0
}

func (m *NsrStatusGen) GetSysmgrHaRole() uint32 {
	if m != nil {
		return m.SysmgrHaRole
	}
	return 0
}

func (m *NsrStatusGen) GetNsrSendReady() uint32 {
	if m != nil {
		return m.NsrSendReady
	}
	return 0
}

func (m *NsrStatusGen) GetNsrSendUnready() uint32 {
	if m != nil {
		return m.NsrSendUnready
	}
	return 0
}

func (m *NsrStatusGen) GetNsrSendErr() uint32 {
	if m != nil {
		return m.NsrSendErr
	}
	return 0
}

func (m *NsrStatusGen) GetNsrRecvErr() uint32 {
	if m != nil {
		return m.NsrRecvErr
	}
	return 0
}

func (m *NsrStatusGen) GetRetryFlag() uint32 {
	if m != nil {
		return m.RetryFlag
	}
	return 0
}

func (m *NsrStatusGen) GetNsrEnabled() bool {
	if m != nil {
		return m.NsrEnabled
	}
	return false
}

func (m *NsrStatusGen) GetNsrConfigured() bool {
	if m != nil {
		return m.NsrConfigured
	}
	return false
}

func (m *NsrStatusGen) GetNsfConfigured() bool {
	if m != nil {
		return m.NsfConfigured
	}
	return false
}

func (m *NsrStatusGen) GetFailover() bool {
	if m != nil {
		return m.Failover
	}
	return false
}

func (m *NsrStatusGen) GetLanidReqNeeded() bool {
	if m != nil {
		return m.LanidReqNeeded
	}
	return false
}

type NsrStatusNcd struct {
	VmIdx                uint32   `protobuf:"varint,1,opt,name=vm_idx,json=vmIdx,proto3" json:"vm_idx,omitempty"`
	ConnUp               bool     `protobuf:"varint,2,opt,name=conn_up,json=connUp,proto3" json:"conn_up,omitempty"`
	EndpHdl              uint32   `protobuf:"varint,3,opt,name=endp_hdl,json=endpHdl,proto3" json:"endp_hdl,omitempty"`
	Chksum               uint32   `protobuf:"varint,4,opt,name=chksum,proto3" json:"chksum,omitempty"`
	SendSeqnum           uint32   `protobuf:"varint,5,opt,name=send_seqnum,json=sendSeqnum,proto3" json:"send_seqnum,omitempty"`
	RecvCnt              uint32   `protobuf:"varint,6,opt,name=recv_cnt,json=recvCnt,proto3" json:"recv_cnt,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NsrStatusNcd) Reset()         { *m = NsrStatusNcd{} }
func (m *NsrStatusNcd) String() string { return proto.CompactTextString(m) }
func (*NsrStatusNcd) ProtoMessage()    {}
func (*NsrStatusNcd) Descriptor() ([]byte, []int) {
	return fileDescriptor_0d348ec9ac5b05fa, []int{3}
}

func (m *NsrStatusNcd) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NsrStatusNcd.Unmarshal(m, b)
}
func (m *NsrStatusNcd) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NsrStatusNcd.Marshal(b, m, deterministic)
}
func (m *NsrStatusNcd) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NsrStatusNcd.Merge(m, src)
}
func (m *NsrStatusNcd) XXX_Size() int {
	return xxx_messageInfo_NsrStatusNcd.Size(m)
}
func (m *NsrStatusNcd) XXX_DiscardUnknown() {
	xxx_messageInfo_NsrStatusNcd.DiscardUnknown(m)
}

var xxx_messageInfo_NsrStatusNcd proto.InternalMessageInfo

func (m *NsrStatusNcd) GetVmIdx() uint32 {
	if m != nil {
		return m.VmIdx
	}
	return 0
}

func (m *NsrStatusNcd) GetConnUp() bool {
	if m != nil {
		return m.ConnUp
	}
	return false
}

func (m *NsrStatusNcd) GetEndpHdl() uint32 {
	if m != nil {
		return m.EndpHdl
	}
	return 0
}

func (m *NsrStatusNcd) GetChksum() uint32 {
	if m != nil {
		return m.Chksum
	}
	return 0
}

func (m *NsrStatusNcd) GetSendSeqnum() uint32 {
	if m != nil {
		return m.SendSeqnum
	}
	return 0
}

func (m *NsrStatusNcd) GetRecvCnt() uint32 {
	if m != nil {
		return m.RecvCnt
	}
	return 0
}

type NsrStatusPm struct {
	Reg                  uint32   `protobuf:"varint,1,opt,name=reg,proto3" json:"reg,omitempty"`
	ConnCb               uint32   `protobuf:"varint,2,opt,name=conn_cb,json=connCb,proto3" json:"conn_cb,omitempty"`
	DisconnCb            uint32   `protobuf:"varint,3,opt,name=disconn_cb,json=disconnCb,proto3" json:"disconn_cb,omitempty"`
	ConnStatus           bool     `protobuf:"varint,4,opt,name=conn_status,json=connStatus,proto3" json:"conn_status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NsrStatusPm) Reset()         { *m = NsrStatusPm{} }
func (m *NsrStatusPm) String() string { return proto.CompactTextString(m) }
func (*NsrStatusPm) ProtoMessage()    {}
func (*NsrStatusPm) Descriptor() ([]byte, []int) {
	return fileDescriptor_0d348ec9ac5b05fa, []int{4}
}

func (m *NsrStatusPm) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NsrStatusPm.Unmarshal(m, b)
}
func (m *NsrStatusPm) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NsrStatusPm.Marshal(b, m, deterministic)
}
func (m *NsrStatusPm) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NsrStatusPm.Merge(m, src)
}
func (m *NsrStatusPm) XXX_Size() int {
	return xxx_messageInfo_NsrStatusPm.Size(m)
}
func (m *NsrStatusPm) XXX_DiscardUnknown() {
	xxx_messageInfo_NsrStatusPm.DiscardUnknown(m)
}

var xxx_messageInfo_NsrStatusPm proto.InternalMessageInfo

func (m *NsrStatusPm) GetReg() uint32 {
	if m != nil {
		return m.Reg
	}
	return 0
}

func (m *NsrStatusPm) GetConnCb() uint32 {
	if m != nil {
		return m.ConnCb
	}
	return 0
}

func (m *NsrStatusPm) GetDisconnCb() uint32 {
	if m != nil {
		return m.DisconnCb
	}
	return 0
}

func (m *NsrStatusPm) GetConnStatus() bool {
	if m != nil {
		return m.ConnStatus
	}
	return false
}

type IsisShTimestampType struct {
	Seconds              uint32   `protobuf:"varint,1,opt,name=seconds,proto3" json:"seconds,omitempty"`
	NanoSeconds          uint32   `protobuf:"varint,2,opt,name=nano_seconds,json=nanoSeconds,proto3" json:"nano_seconds,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IsisShTimestampType) Reset()         { *m = IsisShTimestampType{} }
func (m *IsisShTimestampType) String() string { return proto.CompactTextString(m) }
func (*IsisShTimestampType) ProtoMessage()    {}
func (*IsisShTimestampType) Descriptor() ([]byte, []int) {
	return fileDescriptor_0d348ec9ac5b05fa, []int{5}
}

func (m *IsisShTimestampType) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IsisShTimestampType.Unmarshal(m, b)
}
func (m *IsisShTimestampType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IsisShTimestampType.Marshal(b, m, deterministic)
}
func (m *IsisShTimestampType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IsisShTimestampType.Merge(m, src)
}
func (m *IsisShTimestampType) XXX_Size() int {
	return xxx_messageInfo_IsisShTimestampType.Size(m)
}
func (m *IsisShTimestampType) XXX_DiscardUnknown() {
	xxx_messageInfo_IsisShTimestampType.DiscardUnknown(m)
}

var xxx_messageInfo_IsisShTimestampType proto.InternalMessageInfo

func (m *IsisShTimestampType) GetSeconds() uint32 {
	if m != nil {
		return m.Seconds
	}
	return 0
}

func (m *IsisShTimestampType) GetNanoSeconds() uint32 {
	if m != nil {
		return m.NanoSeconds
	}
	return 0
}

type NsrStatusDs struct {
	Conn                 uint32                 `protobuf:"varint,1,opt,name=conn,proto3" json:"conn,omitempty"`
	ConnTs               *IsisShTimestampType   `protobuf:"bytes,2,opt,name=conn_ts,json=connTs,proto3" json:"conn_ts,omitempty"`
	ConnCb               uint32                 `protobuf:"varint,3,opt,name=conn_cb,json=connCb,proto3" json:"conn_cb,omitempty"`
	ConnCbTs             *IsisShTimestampType   `protobuf:"bytes,4,opt,name=conn_cb_ts,json=connCbTs,proto3" json:"conn_cb_ts,omitempty"`
	Pub                  uint32                 `protobuf:"varint,5,opt,name=pub,proto3" json:"pub,omitempty"`
	PubTs                *IsisShTimestampType   `protobuf:"bytes,6,opt,name=pub_ts,json=pubTs,proto3" json:"pub_ts,omitempty"`
	PubCb                uint32                 `protobuf:"varint,7,opt,name=pub_cb,json=pubCb,proto3" json:"pub_cb,omitempty"`
	PubCbTs              *IsisShTimestampType   `protobuf:"bytes,8,opt,name=pub_cb_ts,json=pubCbTs,proto3" json:"pub_cb_ts,omitempty"`
	Reg                  uint32                 `protobuf:"varint,9,opt,name=reg,proto3" json:"reg,omitempty"`
	RegTs                *IsisShTimestampType   `protobuf:"bytes,10,opt,name=reg_ts,json=regTs,proto3" json:"reg_ts,omitempty"`
	RegCb                uint32                 `protobuf:"varint,11,opt,name=reg_cb,json=regCb,proto3" json:"reg_cb,omitempty"`
	RegCbTs              *IsisShTimestampType   `protobuf:"bytes,12,opt,name=reg_cb_ts,json=regCbTs,proto3" json:"reg_cb_ts,omitempty"`
	Unreg                uint32                 `protobuf:"varint,13,opt,name=unreg,proto3" json:"unreg,omitempty"`
	UnregTs              *IsisShTimestampType   `protobuf:"bytes,14,opt,name=unreg_ts,json=unregTs,proto3" json:"unreg_ts,omitempty"`
	UnregCb              uint32                 `protobuf:"varint,15,opt,name=unreg_cb,json=unregCb,proto3" json:"unreg_cb,omitempty"`
	UnregCbTs            *IsisShTimestampType   `protobuf:"bytes,16,opt,name=unreg_cb_ts,json=unregCbTs,proto3" json:"unreg_cb_ts,omitempty"`
	DisconnCb            uint32                 `protobuf:"varint,17,opt,name=disconn_cb,json=disconnCb,proto3" json:"disconn_cb,omitempty"`
	DisconnCbTs          *IsisShTimestampType   `protobuf:"bytes,18,opt,name=disconn_cb_ts,json=disconnCbTs,proto3" json:"disconn_cb_ts,omitempty"`
	NotifyCb             uint32                 `protobuf:"varint,19,opt,name=notify_cb,json=notifyCb,proto3" json:"notify_cb,omitempty"`
	NotifyCbTs           *IsisShTimestampType   `protobuf:"bytes,20,opt,name=notify_cb_ts,json=notifyCbTs,proto3" json:"notify_cb_ts,omitempty"`
	NotifyPeerXr         []uint32               `protobuf:"varint,21,rep,packed,name=notify_peer_xr,json=notifyPeerXr,proto3" json:"notify_peer_xr,omitempty"`
	NotifyPeer           []*IsisShTimestampType `protobuf:"bytes,22,rep,name=notify_peer,json=notifyPeer,proto3" json:"notify_peer,omitempty"`
	DelCb                uint32                 `protobuf:"varint,23,opt,name=del_cb,json=delCb,proto3" json:"del_cb,omitempty"`
	DelCbTs              *IsisShTimestampType   `protobuf:"bytes,24,opt,name=del_cb_ts,json=delCbTs,proto3" json:"del_cb_ts,omitempty"`
	RemoveSrv            uint32                 `protobuf:"varint,25,opt,name=remove_srv,json=removeSrv,proto3" json:"remove_srv,omitempty"`
	RemoveSrvTs          *IsisShTimestampType   `protobuf:"bytes,26,opt,name=remove_srv_ts,json=removeSrvTs,proto3" json:"remove_srv_ts,omitempty"`
	ConnStatus           bool                   `protobuf:"varint,27,opt,name=conn_status,json=connStatus,proto3" json:"conn_status,omitempty"`
	ConnStatusTs         *IsisShTimestampType   `protobuf:"bytes,28,opt,name=conn_status_ts,json=connStatusTs,proto3" json:"conn_status_ts,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *NsrStatusDs) Reset()         { *m = NsrStatusDs{} }
func (m *NsrStatusDs) String() string { return proto.CompactTextString(m) }
func (*NsrStatusDs) ProtoMessage()    {}
func (*NsrStatusDs) Descriptor() ([]byte, []int) {
	return fileDescriptor_0d348ec9ac5b05fa, []int{6}
}

func (m *NsrStatusDs) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NsrStatusDs.Unmarshal(m, b)
}
func (m *NsrStatusDs) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NsrStatusDs.Marshal(b, m, deterministic)
}
func (m *NsrStatusDs) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NsrStatusDs.Merge(m, src)
}
func (m *NsrStatusDs) XXX_Size() int {
	return xxx_messageInfo_NsrStatusDs.Size(m)
}
func (m *NsrStatusDs) XXX_DiscardUnknown() {
	xxx_messageInfo_NsrStatusDs.DiscardUnknown(m)
}

var xxx_messageInfo_NsrStatusDs proto.InternalMessageInfo

func (m *NsrStatusDs) GetConn() uint32 {
	if m != nil {
		return m.Conn
	}
	return 0
}

func (m *NsrStatusDs) GetConnTs() *IsisShTimestampType {
	if m != nil {
		return m.ConnTs
	}
	return nil
}

func (m *NsrStatusDs) GetConnCb() uint32 {
	if m != nil {
		return m.ConnCb
	}
	return 0
}

func (m *NsrStatusDs) GetConnCbTs() *IsisShTimestampType {
	if m != nil {
		return m.ConnCbTs
	}
	return nil
}

func (m *NsrStatusDs) GetPub() uint32 {
	if m != nil {
		return m.Pub
	}
	return 0
}

func (m *NsrStatusDs) GetPubTs() *IsisShTimestampType {
	if m != nil {
		return m.PubTs
	}
	return nil
}

func (m *NsrStatusDs) GetPubCb() uint32 {
	if m != nil {
		return m.PubCb
	}
	return 0
}

func (m *NsrStatusDs) GetPubCbTs() *IsisShTimestampType {
	if m != nil {
		return m.PubCbTs
	}
	return nil
}

func (m *NsrStatusDs) GetReg() uint32 {
	if m != nil {
		return m.Reg
	}
	return 0
}

func (m *NsrStatusDs) GetRegTs() *IsisShTimestampType {
	if m != nil {
		return m.RegTs
	}
	return nil
}

func (m *NsrStatusDs) GetRegCb() uint32 {
	if m != nil {
		return m.RegCb
	}
	return 0
}

func (m *NsrStatusDs) GetRegCbTs() *IsisShTimestampType {
	if m != nil {
		return m.RegCbTs
	}
	return nil
}

func (m *NsrStatusDs) GetUnreg() uint32 {
	if m != nil {
		return m.Unreg
	}
	return 0
}

func (m *NsrStatusDs) GetUnregTs() *IsisShTimestampType {
	if m != nil {
		return m.UnregTs
	}
	return nil
}

func (m *NsrStatusDs) GetUnregCb() uint32 {
	if m != nil {
		return m.UnregCb
	}
	return 0
}

func (m *NsrStatusDs) GetUnregCbTs() *IsisShTimestampType {
	if m != nil {
		return m.UnregCbTs
	}
	return nil
}

func (m *NsrStatusDs) GetDisconnCb() uint32 {
	if m != nil {
		return m.DisconnCb
	}
	return 0
}

func (m *NsrStatusDs) GetDisconnCbTs() *IsisShTimestampType {
	if m != nil {
		return m.DisconnCbTs
	}
	return nil
}

func (m *NsrStatusDs) GetNotifyCb() uint32 {
	if m != nil {
		return m.NotifyCb
	}
	return 0
}

func (m *NsrStatusDs) GetNotifyCbTs() *IsisShTimestampType {
	if m != nil {
		return m.NotifyCbTs
	}
	return nil
}

func (m *NsrStatusDs) GetNotifyPeerXr() []uint32 {
	if m != nil {
		return m.NotifyPeerXr
	}
	return nil
}

func (m *NsrStatusDs) GetNotifyPeer() []*IsisShTimestampType {
	if m != nil {
		return m.NotifyPeer
	}
	return nil
}

func (m *NsrStatusDs) GetDelCb() uint32 {
	if m != nil {
		return m.DelCb
	}
	return 0
}

func (m *NsrStatusDs) GetDelCbTs() *IsisShTimestampType {
	if m != nil {
		return m.DelCbTs
	}
	return nil
}

func (m *NsrStatusDs) GetRemoveSrv() uint32 {
	if m != nil {
		return m.RemoveSrv
	}
	return 0
}

func (m *NsrStatusDs) GetRemoveSrvTs() *IsisShTimestampType {
	if m != nil {
		return m.RemoveSrvTs
	}
	return nil
}

func (m *NsrStatusDs) GetConnStatus() bool {
	if m != nil {
		return m.ConnStatus
	}
	return false
}

func (m *NsrStatusDs) GetConnStatusTs() *IsisShTimestampType {
	if m != nil {
		return m.ConnStatusTs
	}
	return nil
}

type NsrStatusTe struct {
	Enabled              uint32   `protobuf:"varint,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
	ConnUp               uint32   `protobuf:"varint,2,opt,name=conn_up,json=connUp,proto3" json:"conn_up,omitempty"`
	TeLinkCb             uint32   `protobuf:"varint,3,opt,name=te_link_cb,json=teLinkCb,proto3" json:"te_link_cb,omitempty"`
	TeTunnelCb           uint32   `protobuf:"varint,4,opt,name=te_tunnel_cb,json=teTunnelCb,proto3" json:"te_tunnel_cb,omitempty"`
	AdvSyncData          uint32   `protobuf:"varint,5,opt,name=adv_sync_data,json=advSyncData,proto3" json:"adv_sync_data,omitempty"`
	LinkPurgeTimeOn      uint32   `protobuf:"varint,6,opt,name=link_purge_time_on,json=linkPurgeTimeOn,proto3" json:"link_purge_time_on,omitempty"`
	TunnelPurgeTimeOn    uint32   `protobuf:"varint,7,opt,name=tunnel_purge_time_on,json=tunnelPurgeTimeOn,proto3" json:"tunnel_purge_time_on,omitempty"`
	HasInfoFromTe        uint32   `protobuf:"varint,8,opt,name=has_info_from_te,json=hasInfoFromTe,proto3" json:"has_info_from_te,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NsrStatusTe) Reset()         { *m = NsrStatusTe{} }
func (m *NsrStatusTe) String() string { return proto.CompactTextString(m) }
func (*NsrStatusTe) ProtoMessage()    {}
func (*NsrStatusTe) Descriptor() ([]byte, []int) {
	return fileDescriptor_0d348ec9ac5b05fa, []int{7}
}

func (m *NsrStatusTe) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NsrStatusTe.Unmarshal(m, b)
}
func (m *NsrStatusTe) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NsrStatusTe.Marshal(b, m, deterministic)
}
func (m *NsrStatusTe) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NsrStatusTe.Merge(m, src)
}
func (m *NsrStatusTe) XXX_Size() int {
	return xxx_messageInfo_NsrStatusTe.Size(m)
}
func (m *NsrStatusTe) XXX_DiscardUnknown() {
	xxx_messageInfo_NsrStatusTe.DiscardUnknown(m)
}

var xxx_messageInfo_NsrStatusTe proto.InternalMessageInfo

func (m *NsrStatusTe) GetEnabled() uint32 {
	if m != nil {
		return m.Enabled
	}
	return 0
}

func (m *NsrStatusTe) GetConnUp() uint32 {
	if m != nil {
		return m.ConnUp
	}
	return 0
}

func (m *NsrStatusTe) GetTeLinkCb() uint32 {
	if m != nil {
		return m.TeLinkCb
	}
	return 0
}

func (m *NsrStatusTe) GetTeTunnelCb() uint32 {
	if m != nil {
		return m.TeTunnelCb
	}
	return 0
}

func (m *NsrStatusTe) GetAdvSyncData() uint32 {
	if m != nil {
		return m.AdvSyncData
	}
	return 0
}

func (m *NsrStatusTe) GetLinkPurgeTimeOn() uint32 {
	if m != nil {
		return m.LinkPurgeTimeOn
	}
	return 0
}

func (m *NsrStatusTe) GetTunnelPurgeTimeOn() uint32 {
	if m != nil {
		return m.TunnelPurgeTimeOn
	}
	return 0
}

func (m *NsrStatusTe) GetHasInfoFromTe() uint32 {
	if m != nil {
		return m.HasInfoFromTe
	}
	return 0
}

type NsrStatusNiiIntf struct {
	Exist                bool     `protobuf:"varint,1,opt,name=exist,proto3" json:"exist,omitempty"`
	BroughtUp            bool     `protobuf:"varint,2,opt,name=brought_up,json=broughtUp,proto3" json:"brought_up,omitempty"`
	RetryTimer           bool     `protobuf:"varint,3,opt,name=retry_timer,json=retryTimer,proto3" json:"retry_timer,omitempty"`
	Running              bool     `protobuf:"varint,4,opt,name=running,proto3" json:"running,omitempty"`
	HasAdj               bool     `protobuf:"varint,5,opt,name=has_adj,json=hasAdj,proto3" json:"has_adj,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NsrStatusNiiIntf) Reset()         { *m = NsrStatusNiiIntf{} }
func (m *NsrStatusNiiIntf) String() string { return proto.CompactTextString(m) }
func (*NsrStatusNiiIntf) ProtoMessage()    {}
func (*NsrStatusNiiIntf) Descriptor() ([]byte, []int) {
	return fileDescriptor_0d348ec9ac5b05fa, []int{8}
}

func (m *NsrStatusNiiIntf) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NsrStatusNiiIntf.Unmarshal(m, b)
}
func (m *NsrStatusNiiIntf) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NsrStatusNiiIntf.Marshal(b, m, deterministic)
}
func (m *NsrStatusNiiIntf) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NsrStatusNiiIntf.Merge(m, src)
}
func (m *NsrStatusNiiIntf) XXX_Size() int {
	return xxx_messageInfo_NsrStatusNiiIntf.Size(m)
}
func (m *NsrStatusNiiIntf) XXX_DiscardUnknown() {
	xxx_messageInfo_NsrStatusNiiIntf.DiscardUnknown(m)
}

var xxx_messageInfo_NsrStatusNiiIntf proto.InternalMessageInfo

func (m *NsrStatusNiiIntf) GetExist() bool {
	if m != nil {
		return m.Exist
	}
	return false
}

func (m *NsrStatusNiiIntf) GetBroughtUp() bool {
	if m != nil {
		return m.BroughtUp
	}
	return false
}

func (m *NsrStatusNiiIntf) GetRetryTimer() bool {
	if m != nil {
		return m.RetryTimer
	}
	return false
}

func (m *NsrStatusNiiIntf) GetRunning() bool {
	if m != nil {
		return m.Running
	}
	return false
}

func (m *NsrStatusNiiIntf) GetHasAdj() bool {
	if m != nil {
		return m.HasAdj
	}
	return false
}

type NsrStatusInfraType struct {
	Gen                  *NsrStatusGen       `protobuf:"bytes,1,opt,name=gen,proto3" json:"gen,omitempty"`
	Ncd                  []*NsrStatusNcd     `protobuf:"bytes,2,rep,name=ncd,proto3" json:"ncd,omitempty"`
	Pm                   *NsrStatusPm        `protobuf:"bytes,3,opt,name=pm,proto3" json:"pm,omitempty"`
	Ds                   *NsrStatusDs        `protobuf:"bytes,4,opt,name=ds,proto3" json:"ds,omitempty"`
	Te                   *NsrStatusTe        `protobuf:"bytes,5,opt,name=te,proto3" json:"te,omitempty"`
	NiiIdb               []*NsrStatusNiiIntf `protobuf:"bytes,6,rep,name=nii_idb,json=niiIdb,proto3" json:"nii_idb,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *NsrStatusInfraType) Reset()         { *m = NsrStatusInfraType{} }
func (m *NsrStatusInfraType) String() string { return proto.CompactTextString(m) }
func (*NsrStatusInfraType) ProtoMessage()    {}
func (*NsrStatusInfraType) Descriptor() ([]byte, []int) {
	return fileDescriptor_0d348ec9ac5b05fa, []int{9}
}

func (m *NsrStatusInfraType) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NsrStatusInfraType.Unmarshal(m, b)
}
func (m *NsrStatusInfraType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NsrStatusInfraType.Marshal(b, m, deterministic)
}
func (m *NsrStatusInfraType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NsrStatusInfraType.Merge(m, src)
}
func (m *NsrStatusInfraType) XXX_Size() int {
	return xxx_messageInfo_NsrStatusInfraType.Size(m)
}
func (m *NsrStatusInfraType) XXX_DiscardUnknown() {
	xxx_messageInfo_NsrStatusInfraType.DiscardUnknown(m)
}

var xxx_messageInfo_NsrStatusInfraType proto.InternalMessageInfo

func (m *NsrStatusInfraType) GetGen() *NsrStatusGen {
	if m != nil {
		return m.Gen
	}
	return nil
}

func (m *NsrStatusInfraType) GetNcd() []*NsrStatusNcd {
	if m != nil {
		return m.Ncd
	}
	return nil
}

func (m *NsrStatusInfraType) GetPm() *NsrStatusPm {
	if m != nil {
		return m.Pm
	}
	return nil
}

func (m *NsrStatusInfraType) GetDs() *NsrStatusDs {
	if m != nil {
		return m.Ds
	}
	return nil
}

func (m *NsrStatusInfraType) GetTe() *NsrStatusTe {
	if m != nil {
		return m.Te
	}
	return nil
}

func (m *NsrStatusInfraType) GetNiiIdb() []*NsrStatusNiiIntf {
	if m != nil {
		return m.NiiIdb
	}
	return nil
}

type IsisShNsrStatusGlobal struct {
	IsisVmState          uint32              `protobuf:"varint,50,opt,name=isis_vm_state,json=isisVmState,proto3" json:"isis_vm_state,omitempty"`
	IsisNsrPeer          *NsrStatusGblType   `protobuf:"bytes,51,opt,name=isis_nsr_peer,json=isisNsrPeer,proto3" json:"isis_nsr_peer,omitempty"`
	IsisNsrInfra         *NsrStatusInfraType `protobuf:"bytes,52,opt,name=isis_nsr_infra,json=isisNsrInfra,proto3" json:"isis_nsr_infra,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *IsisShNsrStatusGlobal) Reset()         { *m = IsisShNsrStatusGlobal{} }
func (m *IsisShNsrStatusGlobal) String() string { return proto.CompactTextString(m) }
func (*IsisShNsrStatusGlobal) ProtoMessage()    {}
func (*IsisShNsrStatusGlobal) Descriptor() ([]byte, []int) {
	return fileDescriptor_0d348ec9ac5b05fa, []int{10}
}

func (m *IsisShNsrStatusGlobal) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IsisShNsrStatusGlobal.Unmarshal(m, b)
}
func (m *IsisShNsrStatusGlobal) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IsisShNsrStatusGlobal.Marshal(b, m, deterministic)
}
func (m *IsisShNsrStatusGlobal) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IsisShNsrStatusGlobal.Merge(m, src)
}
func (m *IsisShNsrStatusGlobal) XXX_Size() int {
	return xxx_messageInfo_IsisShNsrStatusGlobal.Size(m)
}
func (m *IsisShNsrStatusGlobal) XXX_DiscardUnknown() {
	xxx_messageInfo_IsisShNsrStatusGlobal.DiscardUnknown(m)
}

var xxx_messageInfo_IsisShNsrStatusGlobal proto.InternalMessageInfo

func (m *IsisShNsrStatusGlobal) GetIsisVmState() uint32 {
	if m != nil {
		return m.IsisVmState
	}
	return 0
}

func (m *IsisShNsrStatusGlobal) GetIsisNsrPeer() *NsrStatusGblType {
	if m != nil {
		return m.IsisNsrPeer
	}
	return nil
}

func (m *IsisShNsrStatusGlobal) GetIsisNsrInfra() *NsrStatusInfraType {
	if m != nil {
		return m.IsisNsrInfra
	}
	return nil
}

func init() {
	proto.RegisterType((*IsisShNsrStatusGlobal_KEYS)(nil), "cisco_ios_xr_clns_isis_oper.isis.instances.instance.nsr_status.isis_sh_nsr_status_global_KEYS")
	proto.RegisterType((*NsrStatusGblType)(nil), "cisco_ios_xr_clns_isis_oper.isis.instances.instance.nsr_status.nsr_status_gbl_type")
	proto.RegisterType((*NsrStatusGen)(nil), "cisco_ios_xr_clns_isis_oper.isis.instances.instance.nsr_status.nsr_status_gen")
	proto.RegisterType((*NsrStatusNcd)(nil), "cisco_ios_xr_clns_isis_oper.isis.instances.instance.nsr_status.nsr_status_ncd")
	proto.RegisterType((*NsrStatusPm)(nil), "cisco_ios_xr_clns_isis_oper.isis.instances.instance.nsr_status.nsr_status_pm")
	proto.RegisterType((*IsisShTimestampType)(nil), "cisco_ios_xr_clns_isis_oper.isis.instances.instance.nsr_status.isis_sh_timestamp_type")
	proto.RegisterType((*NsrStatusDs)(nil), "cisco_ios_xr_clns_isis_oper.isis.instances.instance.nsr_status.nsr_status_ds")
	proto.RegisterType((*NsrStatusTe)(nil), "cisco_ios_xr_clns_isis_oper.isis.instances.instance.nsr_status.nsr_status_te")
	proto.RegisterType((*NsrStatusNiiIntf)(nil), "cisco_ios_xr_clns_isis_oper.isis.instances.instance.nsr_status.nsr_status_nii_intf")
	proto.RegisterType((*NsrStatusInfraType)(nil), "cisco_ios_xr_clns_isis_oper.isis.instances.instance.nsr_status.nsr_status_infra_type")
	proto.RegisterType((*IsisShNsrStatusGlobal)(nil), "cisco_ios_xr_clns_isis_oper.isis.instances.instance.nsr_status.isis_sh_nsr_status_global")
}

func init() { proto.RegisterFile("isis_sh_nsr_status_global.proto", fileDescriptor_0d348ec9ac5b05fa) }

var fileDescriptor_0d348ec9ac5b05fa = []byte{
	// 1488 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x58, 0xdd, 0x6e, 0x1b, 0x37,
	0x16, 0x86, 0x25, 0x5b, 0x96, 0xa8, 0x9f, 0x38, 0x4c, 0x9c, 0x4c, 0x7e, 0x76, 0xe3, 0xd5, 0x66,
	0xb1, 0x06, 0x76, 0xe1, 0x02, 0x4e, 0xaf, 0x0b, 0x04, 0xaa, 0x83, 0x18, 0x6d, 0xdd, 0x60, 0x24,
	0x07, 0xed, 0x45, 0xc1, 0x72, 0x86, 0xd4, 0x68, 0x92, 0x21, 0x67, 0x4c, 0xce, 0x28, 0x56, 0xda,
	0x67, 0x69, 0x9f, 0xa0, 0xe8, 0x55, 0xdf, 0xa1, 0x4f, 0xd2, 0xbb, 0xbe, 0x43, 0x71, 0x0e, 0x39,
	0x92, 0x6c, 0x34, 0x57, 0xb1, 0xee, 0x86, 0xdf, 0xf9, 0x86, 0xe7, 0xe3, 0xe1, 0xe1, 0xe1, 0x99,
	0x21, 0x4f, 0x52, 0x9b, 0x5a, 0x66, 0x67, 0x4c, 0x5b, 0xc3, 0x6c, 0xc9, 0xcb, 0xca, 0xb2, 0x24,
	0xcb, 0x23, 0x9e, 0x1d, 0x15, 0x26, 0x2f, 0x73, 0xfa, 0x59, 0x9c, 0xda, 0x38, 0x67, 0x69, 0x6e,
	0xd9, 0xa5, 0x61, 0x71, 0xa6, 0x2d, 0xc3, 0x57, 0xf2, 0x42, 0x9a, 0x23, 0x78, 0x3a, 0x4a, 0xb5,
	0x2d, 0xb9, 0x8e, 0xe5, 0xea, 0xe9, 0x68, 0x35, 0xd9, 0xf0, 0x84, 0xfc, 0xf3, 0x83, 0x2e, 0xd8,
	0x17, 0x27, 0xdf, 0x8e, 0xe9, 0xbf, 0x49, 0xbf, 0x7e, 0x91, 0x69, 0xae, 0x64, 0xb0, 0x75, 0xb0,
	0x75, 0xd8, 0x09, 0x7b, 0x35, 0x78, 0xc6, 0x95, 0x1c, 0xfe, 0xbe, 0x45, 0xee, 0xac, 0xbf, 0x1f,
	0x65, 0xac, 0x5c, 0x14, 0x92, 0xfe, 0x9f, 0xd0, 0x69, 0x95, 0x65, 0xcc, 0x2e, 0x74, 0xcc, 0x78,
	0x3c, 0x4b, 0xe5, 0x5c, 0x8a, 0x60, 0xeb, 0xa0, 0x79, 0xd8, 0x0f, 0xf7, 0xc0, 0x32, 0x5e, 0xe8,
	0xf8, 0xb9, 0xc7, 0xe9, 0x53, 0x32, 0x50, 0x5c, 0x3b, 0x72, 0x9c, 0x57, 0xba, 0x0c, 0x1a, 0xc8,
	0xec, 0x29, 0xae, 0x81, 0x38, 0x02, 0x8c, 0x0e, 0x49, 0x1f, 0x5c, 0xc5, 0xb3, 0xc4, 0x93, 0x9a,
	0x48, 0xea, 0x6a, 0x6b, 0x46, 0xb3, 0xc4, 0x71, 0xfe, 0x45, 0x7a, 0x55, 0x51, 0xa6, 0x4a, 0xb2,
	0x39, 0xcf, 0x52, 0x11, 0x6c, 0x1f, 0x34, 0x0f, 0xdb, 0x61, 0xd7, 0x61, 0xaf, 0x01, 0xa2, 0xf7,
	0x48, 0xcb, 0x0d, 0x83, 0x1d, 0x7c, 0xdf, 0x8f, 0x86, 0x3f, 0x6f, 0x93, 0xc1, 0xfa, 0x52, 0xa4,
	0xa6, 0x8f, 0x48, 0x47, 0x2d, 0x98, 0xce, 0x85, 0x4c, 0x05, 0x2e, 0xbf, 0x1f, 0xb6, 0xd5, 0xe2,
	0x0c, 0xc7, 0x20, 0x47, 0x2d, 0x58, 0x61, 0xf2, 0x58, 0x5a, 0xcb, 0x52, 0x11, 0x34, 0x90, 0xd0,
	0x55, 0x8b, 0x57, 0x0e, 0x3b, 0x15, 0xf4, 0x80, 0xf4, 0x0a, 0xc5, 0x52, 0x6b, 0x2b, 0x66, 0xf2,
	0x4c, 0x06, 0x4d, 0xa4, 0x90, 0x42, 0x9d, 0x5a, 0x5b, 0x85, 0x79, 0x26, 0xe9, 0x63, 0x42, 0x0a,
	0xc5, 0x66, 0xdc, 0xd9, 0xb7, 0x9d, 0x8f, 0x42, 0xbd, 0xe4, 0x68, 0x7d, 0x4a, 0x06, 0x76, 0x61,
	0x55, 0x62, 0x96, 0x8c, 0x1d, 0x64, 0xf4, 0x1c, 0xba, 0x62, 0xa1, 0x70, 0xa9, 0x05, 0x33, 0x92,
	0x8b, 0x45, 0xd0, 0x72, 0x2c, 0x6d, 0xcd, 0x58, 0x6a, 0x11, 0x02, 0x46, 0x0f, 0xc9, 0xde, 0x92,
	0x55, 0x69, 0xc7, 0xdb, 0x45, 0xde, 0xc0, 0xf3, 0xce, 0x1d, 0x0a, 0xaa, 0x97, 0x4c, 0x69, 0x4c,
	0xd0, 0x76, 0xaa, 0x3d, 0xeb, 0xc4, 0x98, 0x9a, 0x61, 0x64, 0x3c, 0x47, 0x46, 0x67, 0xc9, 0x08,
	0x65, 0x3c, 0x07, 0xc6, 0x3f, 0x08, 0x31, 0xb2, 0x34, 0x0b, 0x36, 0xcd, 0x78, 0x12, 0x10, 0xb4,
	0x77, 0x10, 0x79, 0x91, 0xf1, 0x84, 0x3e, 0x21, 0xb0, 0x6d, 0x4c, 0x6a, 0x1e, 0x65, 0x52, 0x04,
	0xdd, 0x83, 0xad, 0xc3, 0x36, 0xbe, 0x7f, 0xe2, 0x10, 0xfa, 0x1f, 0xb7, 0xa6, 0x38, 0xd7, 0xd3,
	0x34, 0xa9, 0x8c, 0x14, 0x41, 0x0f, 0x39, 0x90, 0x02, 0xa3, 0x25, 0xe8, 0x68, 0xd3, 0x75, 0x5a,
	0xbf, 0xa6, 0x4d, 0xd7, 0x68, 0x0f, 0x49, 0x7b, 0xca, 0xd3, 0x2c, 0x9f, 0x4b, 0x13, 0x0c, 0x90,
	0xb0, 0x1c, 0x43, 0x5c, 0x32, 0xae, 0x53, 0x08, 0xdd, 0x05, 0xd3, 0x52, 0x0a, 0x29, 0x82, 0x5b,
	0xc8, 0x19, 0x20, 0x1e, 0xca, 0x8b, 0x33, 0x44, 0x87, 0xbf, 0x6e, 0x5d, 0xc9, 0x10, 0x1d, 0x0b,
	0xba, 0x4f, 0x5a, 0x73, 0xc5, 0x52, 0x71, 0xe9, 0xd3, 0x63, 0x67, 0xae, 0x4e, 0xc5, 0x25, 0xbd,
	0x4f, 0x76, 0xe3, 0x5c, 0x6b, 0x56, 0x15, 0x98, 0x15, 0xed, 0xb0, 0x05, 0xc3, 0xf3, 0x82, 0x3e,
	0x20, 0x6d, 0xa9, 0x45, 0xc1, 0x66, 0x22, 0xf3, 0xc9, 0xb0, 0x0b, 0xe3, 0x97, 0x22, 0x83, 0xbc,
	0x8c, 0x67, 0x6f, 0x6d, 0xa5, 0x7c, 0x16, 0xf8, 0x11, 0x84, 0x0a, 0x77, 0xc2, 0xca, 0x0b, 0x5d,
	0x29, 0x9f, 0x00, 0x04, 0xa0, 0x31, 0x22, 0x30, 0x27, 0x6e, 0x44, 0xac, 0x4b, 0xbf, 0xf1, 0xbb,
	0x30, 0x1e, 0xe9, 0x72, 0xf8, 0xde, 0x1d, 0x19, 0x2f, 0xb8, 0x50, 0x74, 0x8f, 0x34, 0x8d, 0x4c,
	0xbc, 0x58, 0x78, 0x5c, 0x4a, 0x8d, 0x23, 0x9f, 0xc0, 0x28, 0x75, 0x14, 0xc1, 0x0e, 0x0a, 0xa8,
	0x31, 0xce, 0xe6, 0xc4, 0x76, 0x3c, 0x32, 0x8a, 0x40, 0x16, 0xda, 0xdc, 0xdc, 0xa8, 0xb9, 0x1d,
	0x12, 0x80, 0xc6, 0xae, 0xc2, 0x9c, 0x93, 0x7b, 0x75, 0x85, 0x81, 0xf3, 0x65, 0x4b, 0xae, 0x0a,
	0x57, 0x1c, 0x02, 0xb2, 0x6b, 0x65, 0x9c, 0x6b, 0x61, 0xbd, 0x90, 0x7a, 0x08, 0xc7, 0x57, 0x73,
	0x9d, 0xb3, 0xda, 0xec, 0x8f, 0x14, 0x60, 0x63, 0x07, 0x0d, 0xff, 0xbc, 0x75, 0x65, 0x4d, 0xc2,
	0x52, 0x4a, 0xb6, 0xc1, 0xad, 0x9f, 0x0b, 0x9f, 0x69, 0xee, 0x57, 0x55, 0xba, 0x39, 0xba, 0xc7,
	0xaf, 0x8f, 0x3e, 0xae, 0x60, 0x1e, 0xfd, 0xfd, 0x5a, 0x5c, 0xb4, 0x26, 0x76, 0x3d, 0x8c, 0xcd,
	0x2b, 0x61, 0x2c, 0x09, 0xf1, 0x06, 0x10, 0xb3, 0xbd, 0x51, 0x31, 0x6d, 0xe7, 0x73, 0x62, 0x61,
	0x9f, 0x8b, 0x2a, 0xf2, 0xc9, 0x02, 0x8f, 0x54, 0x91, 0x56, 0x51, 0xa1, 0x86, 0xd6, 0x46, 0x35,
	0xec, 0x14, 0x15, 0x08, 0xd8, 0x77, 0xee, 0xe2, 0xc8, 0xd7, 0x18, 0x80, 0x47, 0x11, 0x35, 0xa4,
	0xe3, 0x60, 0x10, 0xd2, 0xde, 0xa8, 0x90, 0x5d, 0xf4, 0xe8, 0x62, 0x01, 0x39, 0xdf, 0x59, 0xe5,
	0xbc, 0x22, 0x2d, 0x23, 0x13, 0x90, 0x40, 0x36, 0x1b, 0x0b, 0x23, 0x13, 0x17, 0x0b, 0x70, 0x17,
	0x47, 0x58, 0xe7, 0xfa, 0x08, 0xbb, 0x58, 0x38, 0x18, 0x84, 0xf4, 0x36, 0x1b, 0x0b, 0xf4, 0x38,
	0xb1, 0xf4, 0x2e, 0xd9, 0x81, 0xda, 0x9f, 0x60, 0x99, 0xec, 0x87, 0x6e, 0x40, 0x2f, 0x48, 0x1b,
	0x1f, 0x40, 0xc8, 0x60, 0xb3, 0x42, 0xd0, 0xcf, 0xc4, 0x42, 0xd1, 0x72, 0x2e, 0xe3, 0x08, 0xab,
	0x6d, 0xdf, 0x9b, 0x46, 0x11, 0x9d, 0x93, 0x6e, 0x6d, 0x02, 0x41, 0x7b, 0x1b, 0x15, 0xd4, 0xf1,
	0x5e, 0x27, 0xf6, 0x5a, 0xc1, 0xbb, 0x7d, 0xbd, 0xe0, 0xbd, 0x27, 0xfd, 0x95, 0x19, 0x84, 0xd1,
	0x8d, 0x0a, 0xeb, 0x2e, 0x3d, 0x4f, 0x2c, 0x34, 0x22, 0x3a, 0x2f, 0xd3, 0xe9, 0x02, 0x94, 0xdd,
	0x71, 0x4d, 0x82, 0x03, 0x46, 0x11, 0xbd, 0x24, 0xbd, 0xa5, 0x11, 0x74, 0xdd, 0xdd, 0xa8, 0x2e,
	0x52, 0xfb, 0x9d, 0x58, 0x6c, 0x3c, 0x9c, 0xe7, 0x42, 0x4a, 0xc3, 0x2e, 0x4d, 0xb0, 0xef, 0xfa,
	0x36, 0x87, 0xbe, 0x92, 0xd2, 0x7c, 0x63, 0xe8, 0x3b, 0xd2, 0x5d, 0x63, 0x05, 0xf7, 0x0e, 0x9a,
	0x9b, 0x97, 0x07, 0xae, 0xe1, 0xdc, 0x09, 0x99, 0x41, 0xc8, 0xee, 0xbb, 0x6c, 0x17, 0x32, 0x73,
	0xe7, 0xce, 0xc1, 0x10, 0xac, 0x60, 0xb3, 0xe9, 0x8e, 0x1e, 0x5d, 0x6e, 0x19, 0xa9, 0xf2, 0xb9,
	0x64, 0xd6, 0xcc, 0x83, 0x07, 0x75, 0x3b, 0x04, 0xc8, 0xd8, 0xcc, 0x21, 0xb7, 0x56, 0x66, 0x90,
	0xf5, 0x70, 0xb3, 0xb9, 0xb5, 0xf4, 0x3c, 0xb1, 0xd7, 0x2f, 0xf2, 0x47, 0xd7, 0x2f, 0x72, 0xfa,
	0x23, 0x19, 0xac, 0x11, 0x40, 0xdd, 0xe3, 0x8d, 0xaa, 0xeb, 0xad, 0x7c, 0x4f, 0xec, 0xf0, 0x97,
	0xc6, 0x95, 0xfb, 0xbe, 0xc4, 0xf6, 0xa1, 0xee, 0x1b, 0xb7, 0xea, 0x16, 0xca, 0x35, 0x8d, 0xd7,
	0xda, 0xae, 0xfe, 0xb2, 0xed, 0x7a, 0x4c, 0x48, 0x29, 0x59, 0x96, 0xea, 0xb7, 0xab, 0x0b, 0xba,
	0x5d, 0xca, 0x2f, 0x53, 0xfd, 0x76, 0x14, 0x41, 0x37, 0x5b, 0x4a, 0x56, 0x56, 0x5a, 0xbb, 0x6c,
	0x71, 0xfd, 0x17, 0x29, 0xe5, 0x04, 0xa1, 0x51, 0x04, 0xbd, 0x3e, 0x17, 0x73, 0xf7, 0x81, 0x22,
	0x78, 0xc9, 0xfd, 0xc5, 0xda, 0xe5, 0x62, 0x0e, 0xdf, 0x27, 0x9f, 0xf3, 0x92, 0xd3, 0xff, 0x11,
	0x8a, 0x0e, 0x8a, 0xca, 0x24, 0x12, 0xd7, 0xc4, 0x72, 0xed, 0x1b, 0xb2, 0x5b, 0x60, 0x79, 0x05,
	0x86, 0x49, 0xaa, 0xe4, 0xd7, 0x9a, 0x7e, 0x42, 0xee, 0x7a, 0x7f, 0x57, 0xe9, 0xee, 0xb2, 0xbc,
	0xed, 0x6c, 0xeb, 0x2f, 0xfc, 0x97, 0xec, 0xcd, 0xb8, 0x65, 0xa9, 0x9e, 0xe6, 0x6c, 0x6a, 0x72,
	0xc5, 0x4a, 0xe9, 0xfb, 0xf2, 0xfe, 0x8c, 0xdb, 0x53, 0x3d, 0xcd, 0x5f, 0x98, 0x5c, 0x4d, 0xe4,
	0xf0, 0xa7, 0xab, 0x5f, 0x64, 0x3a, 0x4d, 0x59, 0xaa, 0xcb, 0x29, 0x54, 0x7e, 0x79, 0x99, 0xda,
	0x12, 0x63, 0xd6, 0x0e, 0xdd, 0x00, 0xf2, 0x32, 0x32, 0x79, 0x95, 0xcc, 0xca, 0x55, 0xaf, 0xda,
	0xf1, 0xc8, 0x79, 0x01, 0xb9, 0xe1, 0xba, 0x78, 0xd0, 0x67, 0x30, 0x70, 0xed, 0xd0, 0x35, 0xf6,
	0xa0, 0xcb, 0xc0, 0x5e, 0x98, 0x4a, 0xeb, 0x54, 0x27, 0xbe, 0x03, 0xac, 0x87, 0xb0, 0x17, 0x20,
	0x98, 0x8b, 0x37, 0x18, 0xac, 0x76, 0xd8, 0x9a, 0x71, 0xfb, 0x5c, 0xbc, 0x19, 0xfe, 0xb1, 0x4d,
	0xf6, 0xd7, 0x04, 0xa6, 0x7a, 0x6a, 0xb8, 0xeb, 0x0b, 0xbf, 0x27, 0xcd, 0x44, 0xba, 0x3e, 0xae,
	0x7b, 0x7c, 0xf6, 0xb1, 0xd9, 0x75, 0xf5, 0x5b, 0x2e, 0x84, 0xa9, 0xc1, 0x83, 0x8e, 0x05, 0x7e,
	0x5d, 0xde, 0xac, 0x07, 0x1d, 0x8b, 0x10, 0xa6, 0xa6, 0xdf, 0x91, 0x46, 0xa1, 0x30, 0x50, 0xdd,
	0xe3, 0xaf, 0x6e, 0xd0, 0x41, 0xa1, 0xc2, 0x46, 0xa1, 0x60, 0x7a, 0x51, 0x77, 0x91, 0x37, 0x39,
	0xbd, 0xb0, 0x61, 0x43, 0x58, 0x98, 0xbe, 0x74, 0xdf, 0x98, 0x37, 0x3b, 0x7d, 0x29, 0xc3, 0x46,
	0x29, 0x69, 0x46, 0x76, 0x31, 0x1f, 0x45, 0x14, 0xb4, 0x70, 0x0b, 0xc6, 0x37, 0xb9, 0x05, 0x3e,
	0xd3, 0xc3, 0x96, 0x4e, 0xd3, 0x53, 0x11, 0x0d, 0x7f, 0x6b, 0x90, 0x07, 0x1f, 0xfc, 0xc7, 0x01,
	0x47, 0x1a, 0x8d, 0x73, 0x85, 0x06, 0x19, 0x1c, 0xbb, 0x23, 0x0d, 0xe0, 0x6b, 0x05, 0xe5, 0x47,
	0xd2, 0x77, 0x9e, 0x03, 0x6f, 0xe3, 0xdd, 0xf5, 0x0c, 0x23, 0x73, 0x93, 0xaa, 0xeb, 0x3f, 0x26,
	0xce, 0xf1, 0x99, 0x35, 0x78, 0x73, 0xfd, 0x40, 0x06, 0x4b, 0xc7, 0x78, 0x40, 0x82, 0x4f, 0xd1,
	0xf3, 0xf9, 0x0d, 0x7a, 0x5e, 0x1d, 0xbc, 0xb0, 0xe7, 0x7d, 0x9f, 0x02, 0x14, 0xb5, 0xf0, 0x0f,
	0xd3, 0xb3, 0xbf, 0x02, 0x00, 0x00, 0xff, 0xff, 0x0b, 0x97, 0xd5, 0xdf, 0x84, 0x12, 0x00, 0x00,
}
