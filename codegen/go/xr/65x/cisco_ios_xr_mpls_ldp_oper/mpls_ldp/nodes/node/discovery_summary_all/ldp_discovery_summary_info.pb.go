/*
Copyright 2019 Cisco Systems

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: ldp_discovery_summary_info.proto

package cisco_ios_xr_mpls_ldp_oper_mpls_ldp_nodes_node_discovery_summary_all

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type LdpDiscoverySummaryInfo_KEYS struct {
	NodeName             string   `protobuf:"bytes,1,opt,name=node_name,json=nodeName,proto3" json:"node_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LdpDiscoverySummaryInfo_KEYS) Reset()         { *m = LdpDiscoverySummaryInfo_KEYS{} }
func (m *LdpDiscoverySummaryInfo_KEYS) String() string { return proto.CompactTextString(m) }
func (*LdpDiscoverySummaryInfo_KEYS) ProtoMessage()    {}
func (*LdpDiscoverySummaryInfo_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_9ad08bb298a90493, []int{0}
}

func (m *LdpDiscoverySummaryInfo_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LdpDiscoverySummaryInfo_KEYS.Unmarshal(m, b)
}
func (m *LdpDiscoverySummaryInfo_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LdpDiscoverySummaryInfo_KEYS.Marshal(b, m, deterministic)
}
func (m *LdpDiscoverySummaryInfo_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LdpDiscoverySummaryInfo_KEYS.Merge(m, src)
}
func (m *LdpDiscoverySummaryInfo_KEYS) XXX_Size() int {
	return xxx_messageInfo_LdpDiscoverySummaryInfo_KEYS.Size(m)
}
func (m *LdpDiscoverySummaryInfo_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_LdpDiscoverySummaryInfo_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_LdpDiscoverySummaryInfo_KEYS proto.InternalMessageInfo

func (m *LdpDiscoverySummaryInfo_KEYS) GetNodeName() string {
	if m != nil {
		return m.NodeName
	}
	return ""
}

type LdpVrfInfo struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Id                   uint32   `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LdpVrfInfo) Reset()         { *m = LdpVrfInfo{} }
func (m *LdpVrfInfo) String() string { return proto.CompactTextString(m) }
func (*LdpVrfInfo) ProtoMessage()    {}
func (*LdpVrfInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_9ad08bb298a90493, []int{1}
}

func (m *LdpVrfInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LdpVrfInfo.Unmarshal(m, b)
}
func (m *LdpVrfInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LdpVrfInfo.Marshal(b, m, deterministic)
}
func (m *LdpVrfInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LdpVrfInfo.Merge(m, src)
}
func (m *LdpVrfInfo) XXX_Size() int {
	return xxx_messageInfo_LdpVrfInfo.Size(m)
}
func (m *LdpVrfInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_LdpVrfInfo.DiscardUnknown(m)
}

var xxx_messageInfo_LdpVrfInfo proto.InternalMessageInfo

func (m *LdpVrfInfo) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *LdpVrfInfo) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

type LdpDiscoverySummaryInfo struct {
	Vrf                        *LdpVrfInfo `protobuf:"bytes,50,opt,name=vrf,proto3" json:"vrf,omitempty"`
	LocalLdpId                 string      `protobuf:"bytes,51,opt,name=local_ldp_id,json=localLdpId,proto3" json:"local_ldp_id,omitempty"`
	NumOfLdpInterfaces         uint32      `protobuf:"varint,52,opt,name=num_of_ldp_interfaces,json=numOfLdpInterfaces,proto3" json:"num_of_ldp_interfaces,omitempty"`
	NumOfActiveLdpInterfaces   uint32      `protobuf:"varint,53,opt,name=num_of_active_ldp_interfaces,json=numOfActiveLdpInterfaces,proto3" json:"num_of_active_ldp_interfaces,omitempty"`
	NumOfLnkDiscXmit           uint32      `protobuf:"varint,54,opt,name=num_of_lnk_disc_xmit,json=numOfLnkDiscXmit,proto3" json:"num_of_lnk_disc_xmit,omitempty"`
	NumOfTgtDiscXmit           uint32      `protobuf:"varint,55,opt,name=num_of_tgt_disc_xmit,json=numOfTgtDiscXmit,proto3" json:"num_of_tgt_disc_xmit,omitempty"`
	NumOfLnkDiscRecv           uint32      `protobuf:"varint,56,opt,name=num_of_lnk_disc_recv,json=numOfLnkDiscRecv,proto3" json:"num_of_lnk_disc_recv,omitempty"`
	NumOfTgtDiscRecv           uint32      `protobuf:"varint,57,opt,name=num_of_tgt_disc_recv,json=numOfTgtDiscRecv,proto3" json:"num_of_tgt_disc_recv,omitempty"`
	NumOfDiscWithBadAddrRecv   uint32      `protobuf:"varint,58,opt,name=num_of_disc_with_bad_addr_recv,json=numOfDiscWithBadAddrRecv,proto3" json:"num_of_disc_with_bad_addr_recv,omitempty"`
	NumOfDiscWithBadHelloPdu   uint32      `protobuf:"varint,59,opt,name=num_of_disc_with_bad_hello_pdu,json=numOfDiscWithBadHelloPdu,proto3" json:"num_of_disc_with_bad_hello_pdu,omitempty"`
	NumOfDiscWithBadXportAddr  uint32      `protobuf:"varint,60,opt,name=num_of_disc_with_bad_xport_addr,json=numOfDiscWithBadXportAddr,proto3" json:"num_of_disc_with_bad_xport_addr,omitempty"`
	NumOfDiscWithSameRouterId  uint32      `protobuf:"varint,61,opt,name=num_of_disc_with_same_router_id,json=numOfDiscWithSameRouterId,proto3" json:"num_of_disc_with_same_router_id,omitempty"`
	NumOfDiscWithWrongRouterId uint32      `protobuf:"varint,62,opt,name=num_of_disc_with_wrong_router_id,json=numOfDiscWithWrongRouterId,proto3" json:"num_of_disc_with_wrong_router_id,omitempty"`
	XXX_NoUnkeyedLiteral       struct{}    `json:"-"`
	XXX_unrecognized           []byte      `json:"-"`
	XXX_sizecache              int32       `json:"-"`
}

func (m *LdpDiscoverySummaryInfo) Reset()         { *m = LdpDiscoverySummaryInfo{} }
func (m *LdpDiscoverySummaryInfo) String() string { return proto.CompactTextString(m) }
func (*LdpDiscoverySummaryInfo) ProtoMessage()    {}
func (*LdpDiscoverySummaryInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_9ad08bb298a90493, []int{2}
}

func (m *LdpDiscoverySummaryInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LdpDiscoverySummaryInfo.Unmarshal(m, b)
}
func (m *LdpDiscoverySummaryInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LdpDiscoverySummaryInfo.Marshal(b, m, deterministic)
}
func (m *LdpDiscoverySummaryInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LdpDiscoverySummaryInfo.Merge(m, src)
}
func (m *LdpDiscoverySummaryInfo) XXX_Size() int {
	return xxx_messageInfo_LdpDiscoverySummaryInfo.Size(m)
}
func (m *LdpDiscoverySummaryInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_LdpDiscoverySummaryInfo.DiscardUnknown(m)
}

var xxx_messageInfo_LdpDiscoverySummaryInfo proto.InternalMessageInfo

func (m *LdpDiscoverySummaryInfo) GetVrf() *LdpVrfInfo {
	if m != nil {
		return m.Vrf
	}
	return nil
}

func (m *LdpDiscoverySummaryInfo) GetLocalLdpId() string {
	if m != nil {
		return m.LocalLdpId
	}
	return ""
}

func (m *LdpDiscoverySummaryInfo) GetNumOfLdpInterfaces() uint32 {
	if m != nil {
		return m.NumOfLdpInterfaces
	}
	return 0
}

func (m *LdpDiscoverySummaryInfo) GetNumOfActiveLdpInterfaces() uint32 {
	if m != nil {
		return m.NumOfActiveLdpInterfaces
	}
	return 0
}

func (m *LdpDiscoverySummaryInfo) GetNumOfLnkDiscXmit() uint32 {
	if m != nil {
		return m.NumOfLnkDiscXmit
	}
	return 0
}

func (m *LdpDiscoverySummaryInfo) GetNumOfTgtDiscXmit() uint32 {
	if m != nil {
		return m.NumOfTgtDiscXmit
	}
	return 0
}

func (m *LdpDiscoverySummaryInfo) GetNumOfLnkDiscRecv() uint32 {
	if m != nil {
		return m.NumOfLnkDiscRecv
	}
	return 0
}

func (m *LdpDiscoverySummaryInfo) GetNumOfTgtDiscRecv() uint32 {
	if m != nil {
		return m.NumOfTgtDiscRecv
	}
	return 0
}

func (m *LdpDiscoverySummaryInfo) GetNumOfDiscWithBadAddrRecv() uint32 {
	if m != nil {
		return m.NumOfDiscWithBadAddrRecv
	}
	return 0
}

func (m *LdpDiscoverySummaryInfo) GetNumOfDiscWithBadHelloPdu() uint32 {
	if m != nil {
		return m.NumOfDiscWithBadHelloPdu
	}
	return 0
}

func (m *LdpDiscoverySummaryInfo) GetNumOfDiscWithBadXportAddr() uint32 {
	if m != nil {
		return m.NumOfDiscWithBadXportAddr
	}
	return 0
}

func (m *LdpDiscoverySummaryInfo) GetNumOfDiscWithSameRouterId() uint32 {
	if m != nil {
		return m.NumOfDiscWithSameRouterId
	}
	return 0
}

func (m *LdpDiscoverySummaryInfo) GetNumOfDiscWithWrongRouterId() uint32 {
	if m != nil {
		return m.NumOfDiscWithWrongRouterId
	}
	return 0
}

func init() {
	proto.RegisterType((*LdpDiscoverySummaryInfo_KEYS)(nil), "cisco_ios_xr_mpls_ldp_oper.mpls_ldp.nodes.node.discovery_summary_all.ldp_discovery_summary_info_KEYS")
	proto.RegisterType((*LdpVrfInfo)(nil), "cisco_ios_xr_mpls_ldp_oper.mpls_ldp.nodes.node.discovery_summary_all.ldp_vrf_info")
	proto.RegisterType((*LdpDiscoverySummaryInfo)(nil), "cisco_ios_xr_mpls_ldp_oper.mpls_ldp.nodes.node.discovery_summary_all.ldp_discovery_summary_info")
}

func init() { proto.RegisterFile("ldp_discovery_summary_info.proto", fileDescriptor_9ad08bb298a90493) }

var fileDescriptor_9ad08bb298a90493 = []byte{
	// 460 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x93, 0x5d, 0x6b, 0x14, 0x31,
	0x14, 0x86, 0xd9, 0x55, 0x8a, 0x8d, 0x55, 0x24, 0x28, 0xc4, 0x2a, 0x76, 0xd8, 0xab, 0xbd, 0x1a,
	0x70, 0xeb, 0xf7, 0xc7, 0x62, 0xcb, 0x0a, 0x16, 0x45, 0x65, 0x2a, 0xb4, 0x5e, 0x85, 0x74, 0x4e,
	0x66, 0x37, 0x74, 0x92, 0x0c, 0x49, 0x66, 0xba, 0xfd, 0x49, 0xfe, 0x4b, 0xc9, 0xd9, 0x6e, 0x99,
	0x76, 0xa6, 0x5e, 0x79, 0x33, 0xcc, 0x24, 0xcf, 0xfb, 0x9c, 0x93, 0xc3, 0x84, 0x24, 0x25, 0x54,
	0x1c, 0x94, 0xcf, 0x6d, 0x23, 0xdd, 0x39, 0xf7, 0xb5, 0xd6, 0xc2, 0x9d, 0x73, 0x65, 0x0a, 0x9b,
	0x56, 0xce, 0x06, 0x4b, 0x67, 0x79, 0xdc, 0xe5, 0xca, 0x7a, 0xbe, 0x74, 0x5c, 0x57, 0xa5, 0xe7,
	0x31, 0x63, 0x2b, 0xe9, 0xd2, 0xf5, 0x57, 0x6a, 0x2c, 0x48, 0x8f, 0xcf, 0xb4, 0x2b, 0x13, 0x65,
	0x39, 0x9a, 0x92, 0x9d, 0x9b, 0x2b, 0xf1, 0xaf, 0x9f, 0x7f, 0x1f, 0xd2, 0x27, 0x64, 0x33, 0x0a,
	0xb8, 0x11, 0x5a, 0xb2, 0x41, 0x32, 0x18, 0x6f, 0x66, 0x77, 0xe2, 0xc2, 0x77, 0xa1, 0xe5, 0x68,
	0x42, 0xb6, 0x62, 0xbe, 0x71, 0x05, 0x26, 0x28, 0x25, 0xb7, 0x5b, 0x1c, 0xbe, 0xd3, 0xfb, 0x64,
	0xa8, 0x80, 0x0d, 0x93, 0xc1, 0xf8, 0x5e, 0x36, 0x54, 0x30, 0xfa, 0xb3, 0x41, 0xb6, 0x6f, 0x2e,
	0x4a, 0x81, 0xdc, 0x6a, 0x5c, 0xc1, 0x26, 0xc9, 0x60, 0x7c, 0x77, 0x92, 0xa5, 0xff, 0xe3, 0x98,
	0x69, 0xbb, 0xc7, 0x2c, 0xea, 0x69, 0x42, 0xb6, 0x4a, 0x9b, 0x8b, 0x12, 0x6d, 0x0a, 0xd8, 0x2e,
	0x36, 0x4c, 0x70, 0xed, 0x1b, 0x54, 0x07, 0x40, 0x9f, 0x93, 0x47, 0xa6, 0xd6, 0xdc, 0x16, 0x2b,
	0xc4, 0x04, 0xe9, 0x0a, 0x91, 0x4b, 0xcf, 0x5e, 0xe0, 0x49, 0xa8, 0xa9, 0xf5, 0x8f, 0x22, 0xa2,
	0x97, 0x3b, 0x74, 0x4a, 0x9e, 0x5e, 0x44, 0x44, 0x1e, 0x54, 0x23, 0xaf, 0x27, 0x5f, 0x62, 0x92,
	0x61, 0x72, 0x0f, 0x89, 0xab, 0xf9, 0x94, 0x3c, 0x5c, 0x97, 0x34, 0xa7, 0x38, 0x1f, 0xbe, 0xd4,
	0x2a, 0xb0, 0x57, 0x98, 0x7b, 0xb0, 0xaa, 0x68, 0x4e, 0x67, 0xca, 0xe7, 0xc7, 0x5a, 0x85, 0x16,
	0x1f, 0xe6, 0xa1, 0xc5, 0xbf, 0x6e, 0xf1, 0xbf, 0xe6, 0xa1, 0x87, 0xbf, 0xf4, 0x3b, 0x99, 0x37,
	0xec, 0x4d, 0xd7, 0x9f, 0xc9, 0xbc, 0xe9, 0xf3, 0x23, 0xff, 0xb6, 0xeb, 0x47, 0xfe, 0x13, 0x79,
	0x76, 0xc1, 0x23, 0x7b, 0xa6, 0xc2, 0x82, 0x9f, 0x08, 0xe0, 0x02, 0xc0, 0xad, 0x92, 0xef, 0x5a,
	0x13, 0x88, 0xb1, 0x23, 0x15, 0x16, 0xfb, 0x02, 0xf6, 0x00, 0xdc, 0x3f, 0x0d, 0x0b, 0x59, 0x96,
	0x96, 0x57, 0x50, 0xb3, 0xf7, 0xfd, 0x86, 0x2f, 0x11, 0xf8, 0x09, 0x35, 0xdd, 0x27, 0x3b, 0xbd,
	0x86, 0x65, 0x65, 0x5d, 0xc0, 0x4e, 0xd8, 0x07, 0x54, 0x3c, 0xbe, 0xae, 0x38, 0x8e, 0x44, 0xec,
	0xa4, 0xd7, 0xe1, 0x85, 0x96, 0xdc, 0xd9, 0x3a, 0x48, 0x17, 0xff, 0x97, 0x8f, 0x3d, 0x8e, 0x43,
	0xa1, 0x65, 0x86, 0xc4, 0x01, 0xd0, 0x19, 0x49, 0x3a, 0x8e, 0x33, 0x67, 0xcd, 0xbc, 0x25, 0x99,
	0xa2, 0x64, 0xfb, 0x8a, 0xe4, 0x28, 0x32, 0x6b, 0xcb, 0xc9, 0x06, 0x5e, 0xf6, 0xdd, 0xbf, 0x01,
	0x00, 0x00, 0xff, 0xff, 0x12, 0xbd, 0x69, 0x91, 0x10, 0x04, 0x00, 0x00,
}
