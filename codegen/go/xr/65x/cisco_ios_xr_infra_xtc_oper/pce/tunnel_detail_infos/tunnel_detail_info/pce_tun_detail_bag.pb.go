/*
Copyright 2019 Cisco Systems

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: pce_tun_detail_bag.proto

package cisco_ios_xr_infra_xtc_oper_pce_tunnel_detail_infos_tunnel_detail_info

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type PceTunDetailBag_KEYS struct {
	PeerAddress          string   `protobuf:"bytes,1,opt,name=peer_address,json=peerAddress,proto3" json:"peer_address,omitempty"`
	PlspId               uint32   `protobuf:"varint,2,opt,name=plsp_id,json=plspId,proto3" json:"plsp_id,omitempty"`
	TunnelName           string   `protobuf:"bytes,3,opt,name=tunnel_name,json=tunnelName,proto3" json:"tunnel_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PceTunDetailBag_KEYS) Reset()         { *m = PceTunDetailBag_KEYS{} }
func (m *PceTunDetailBag_KEYS) String() string { return proto.CompactTextString(m) }
func (*PceTunDetailBag_KEYS) ProtoMessage()    {}
func (*PceTunDetailBag_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_1931fa0b395d0881, []int{0}
}

func (m *PceTunDetailBag_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PceTunDetailBag_KEYS.Unmarshal(m, b)
}
func (m *PceTunDetailBag_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PceTunDetailBag_KEYS.Marshal(b, m, deterministic)
}
func (m *PceTunDetailBag_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PceTunDetailBag_KEYS.Merge(m, src)
}
func (m *PceTunDetailBag_KEYS) XXX_Size() int {
	return xxx_messageInfo_PceTunDetailBag_KEYS.Size(m)
}
func (m *PceTunDetailBag_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_PceTunDetailBag_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_PceTunDetailBag_KEYS proto.InternalMessageInfo

func (m *PceTunDetailBag_KEYS) GetPeerAddress() string {
	if m != nil {
		return m.PeerAddress
	}
	return ""
}

func (m *PceTunDetailBag_KEYS) GetPlspId() uint32 {
	if m != nil {
		return m.PlspId
	}
	return 0
}

func (m *PceTunDetailBag_KEYS) GetTunnelName() string {
	if m != nil {
		return m.TunnelName
	}
	return ""
}

type PceIpAddrType struct {
	AfName               string   `protobuf:"bytes,1,opt,name=af_name,json=afName,proto3" json:"af_name,omitempty"`
	Ipv4                 string   `protobuf:"bytes,2,opt,name=ipv4,proto3" json:"ipv4,omitempty"`
	Ipv6                 string   `protobuf:"bytes,3,opt,name=ipv6,proto3" json:"ipv6,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PceIpAddrType) Reset()         { *m = PceIpAddrType{} }
func (m *PceIpAddrType) String() string { return proto.CompactTextString(m) }
func (*PceIpAddrType) ProtoMessage()    {}
func (*PceIpAddrType) Descriptor() ([]byte, []int) {
	return fileDescriptor_1931fa0b395d0881, []int{1}
}

func (m *PceIpAddrType) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PceIpAddrType.Unmarshal(m, b)
}
func (m *PceIpAddrType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PceIpAddrType.Marshal(b, m, deterministic)
}
func (m *PceIpAddrType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PceIpAddrType.Merge(m, src)
}
func (m *PceIpAddrType) XXX_Size() int {
	return xxx_messageInfo_PceIpAddrType.Size(m)
}
func (m *PceIpAddrType) XXX_DiscardUnknown() {
	xxx_messageInfo_PceIpAddrType.DiscardUnknown(m)
}

var xxx_messageInfo_PceIpAddrType proto.InternalMessageInfo

func (m *PceIpAddrType) GetAfName() string {
	if m != nil {
		return m.AfName
	}
	return ""
}

func (m *PceIpAddrType) GetIpv4() string {
	if m != nil {
		return m.Ipv4
	}
	return ""
}

func (m *PceIpAddrType) GetIpv6() string {
	if m != nil {
		return m.Ipv6
	}
	return ""
}

type PceLspInfo struct {
	SourceAddress        *PceIpAddrType `protobuf:"bytes,1,opt,name=source_address,json=sourceAddress,proto3" json:"source_address,omitempty"`
	DestinationAddress   *PceIpAddrType `protobuf:"bytes,2,opt,name=destination_address,json=destinationAddress,proto3" json:"destination_address,omitempty"`
	TunnelId             uint32         `protobuf:"varint,3,opt,name=tunnel_id,json=tunnelId,proto3" json:"tunnel_id,omitempty"`
	Lspid                uint32         `protobuf:"varint,4,opt,name=lspid,proto3" json:"lspid,omitempty"`
	BindingSid           uint32         `protobuf:"varint,5,opt,name=binding_sid,json=bindingSid,proto3" json:"binding_sid,omitempty"`
	LspSetupType         string         `protobuf:"bytes,6,opt,name=lsp_setup_type,json=lspSetupType,proto3" json:"lsp_setup_type,omitempty"`
	OperationalState     string         `protobuf:"bytes,7,opt,name=operational_state,json=operationalState,proto3" json:"operational_state,omitempty"`
	AdministrativeState  string         `protobuf:"bytes,8,opt,name=administrative_state,json=administrativeState,proto3" json:"administrative_state,omitempty"`
	Msd                  uint32         `protobuf:"varint,9,opt,name=msd,proto3" json:"msd,omitempty"`
	AbsoluteMargin       uint32         `protobuf:"varint,10,opt,name=absolute_margin,json=absoluteMargin,proto3" json:"absolute_margin,omitempty"`
	RelativeMargin       uint32         `protobuf:"varint,11,opt,name=relative_margin,json=relativeMargin,proto3" json:"relative_margin,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *PceLspInfo) Reset()         { *m = PceLspInfo{} }
func (m *PceLspInfo) String() string { return proto.CompactTextString(m) }
func (*PceLspInfo) ProtoMessage()    {}
func (*PceLspInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_1931fa0b395d0881, []int{2}
}

func (m *PceLspInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PceLspInfo.Unmarshal(m, b)
}
func (m *PceLspInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PceLspInfo.Marshal(b, m, deterministic)
}
func (m *PceLspInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PceLspInfo.Merge(m, src)
}
func (m *PceLspInfo) XXX_Size() int {
	return xxx_messageInfo_PceLspInfo.Size(m)
}
func (m *PceLspInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_PceLspInfo.DiscardUnknown(m)
}

var xxx_messageInfo_PceLspInfo proto.InternalMessageInfo

func (m *PceLspInfo) GetSourceAddress() *PceIpAddrType {
	if m != nil {
		return m.SourceAddress
	}
	return nil
}

func (m *PceLspInfo) GetDestinationAddress() *PceIpAddrType {
	if m != nil {
		return m.DestinationAddress
	}
	return nil
}

func (m *PceLspInfo) GetTunnelId() uint32 {
	if m != nil {
		return m.TunnelId
	}
	return 0
}

func (m *PceLspInfo) GetLspid() uint32 {
	if m != nil {
		return m.Lspid
	}
	return 0
}

func (m *PceLspInfo) GetBindingSid() uint32 {
	if m != nil {
		return m.BindingSid
	}
	return 0
}

func (m *PceLspInfo) GetLspSetupType() string {
	if m != nil {
		return m.LspSetupType
	}
	return ""
}

func (m *PceLspInfo) GetOperationalState() string {
	if m != nil {
		return m.OperationalState
	}
	return ""
}

func (m *PceLspInfo) GetAdministrativeState() string {
	if m != nil {
		return m.AdministrativeState
	}
	return ""
}

func (m *PceLspInfo) GetMsd() uint32 {
	if m != nil {
		return m.Msd
	}
	return 0
}

func (m *PceLspInfo) GetAbsoluteMargin() uint32 {
	if m != nil {
		return m.AbsoluteMargin
	}
	return 0
}

func (m *PceLspInfo) GetRelativeMargin() uint32 {
	if m != nil {
		return m.RelativeMargin
	}
	return 0
}

type PceRsvpHopType struct {
	HopAddress           string   `protobuf:"bytes,1,opt,name=hop_address,json=hopAddress,proto3" json:"hop_address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PceRsvpHopType) Reset()         { *m = PceRsvpHopType{} }
func (m *PceRsvpHopType) String() string { return proto.CompactTextString(m) }
func (*PceRsvpHopType) ProtoMessage()    {}
func (*PceRsvpHopType) Descriptor() ([]byte, []int) {
	return fileDescriptor_1931fa0b395d0881, []int{3}
}

func (m *PceRsvpHopType) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PceRsvpHopType.Unmarshal(m, b)
}
func (m *PceRsvpHopType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PceRsvpHopType.Marshal(b, m, deterministic)
}
func (m *PceRsvpHopType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PceRsvpHopType.Merge(m, src)
}
func (m *PceRsvpHopType) XXX_Size() int {
	return xxx_messageInfo_PceRsvpHopType.Size(m)
}
func (m *PceRsvpHopType) XXX_DiscardUnknown() {
	xxx_messageInfo_PceRsvpHopType.DiscardUnknown(m)
}

var xxx_messageInfo_PceRsvpHopType proto.InternalMessageInfo

func (m *PceRsvpHopType) GetHopAddress() string {
	if m != nil {
		return m.HopAddress
	}
	return ""
}

type PceSrHopType struct {
	SidType              string         `protobuf:"bytes,1,opt,name=sid_type,json=sidType,proto3" json:"sid_type,omitempty"`
	MplsLabel            uint32         `protobuf:"varint,2,opt,name=mpls_label,json=mplsLabel,proto3" json:"mpls_label,omitempty"`
	LocalAddr            *PceIpAddrType `protobuf:"bytes,3,opt,name=local_addr,json=localAddr,proto3" json:"local_addr,omitempty"`
	RemoteAddr           *PceIpAddrType `protobuf:"bytes,4,opt,name=remote_addr,json=remoteAddr,proto3" json:"remote_addr,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *PceSrHopType) Reset()         { *m = PceSrHopType{} }
func (m *PceSrHopType) String() string { return proto.CompactTextString(m) }
func (*PceSrHopType) ProtoMessage()    {}
func (*PceSrHopType) Descriptor() ([]byte, []int) {
	return fileDescriptor_1931fa0b395d0881, []int{4}
}

func (m *PceSrHopType) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PceSrHopType.Unmarshal(m, b)
}
func (m *PceSrHopType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PceSrHopType.Marshal(b, m, deterministic)
}
func (m *PceSrHopType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PceSrHopType.Merge(m, src)
}
func (m *PceSrHopType) XXX_Size() int {
	return xxx_messageInfo_PceSrHopType.Size(m)
}
func (m *PceSrHopType) XXX_DiscardUnknown() {
	xxx_messageInfo_PceSrHopType.DiscardUnknown(m)
}

var xxx_messageInfo_PceSrHopType proto.InternalMessageInfo

func (m *PceSrHopType) GetSidType() string {
	if m != nil {
		return m.SidType
	}
	return ""
}

func (m *PceSrHopType) GetMplsLabel() uint32 {
	if m != nil {
		return m.MplsLabel
	}
	return 0
}

func (m *PceSrHopType) GetLocalAddr() *PceIpAddrType {
	if m != nil {
		return m.LocalAddr
	}
	return nil
}

func (m *PceSrHopType) GetRemoteAddr() *PceIpAddrType {
	if m != nil {
		return m.RemoteAddr
	}
	return nil
}

type PceEroInfo struct {
	ReportedRsvpPath     []*PceRsvpHopType `protobuf:"bytes,1,rep,name=reported_rsvp_path,json=reportedRsvpPath,proto3" json:"reported_rsvp_path,omitempty"`
	ReportedSrPath       []*PceSrHopType   `protobuf:"bytes,2,rep,name=reported_sr_path,json=reportedSrPath,proto3" json:"reported_sr_path,omitempty"`
	ComputedRsvpPath     []*PceRsvpHopType `protobuf:"bytes,3,rep,name=computed_rsvp_path,json=computedRsvpPath,proto3" json:"computed_rsvp_path,omitempty"`
	ComputedSrPath       []*PceSrHopType   `protobuf:"bytes,4,rep,name=computed_sr_path,json=computedSrPath,proto3" json:"computed_sr_path,omitempty"`
	ReportedMetricType   uint32            `protobuf:"varint,5,opt,name=reported_metric_type,json=reportedMetricType,proto3" json:"reported_metric_type,omitempty"`
	ReportedMetricValue  uint32            `protobuf:"varint,6,opt,name=reported_metric_value,json=reportedMetricValue,proto3" json:"reported_metric_value,omitempty"`
	ComputedMetricType   uint32            `protobuf:"varint,7,opt,name=computed_metric_type,json=computedMetricType,proto3" json:"computed_metric_type,omitempty"`
	ComputedMetricValue  uint32            `protobuf:"varint,8,opt,name=computed_metric_value,json=computedMetricValue,proto3" json:"computed_metric_value,omitempty"`
	ComputedHopListTime  uint32            `protobuf:"varint,9,opt,name=computed_hop_list_time,json=computedHopListTime,proto3" json:"computed_hop_list_time,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *PceEroInfo) Reset()         { *m = PceEroInfo{} }
func (m *PceEroInfo) String() string { return proto.CompactTextString(m) }
func (*PceEroInfo) ProtoMessage()    {}
func (*PceEroInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_1931fa0b395d0881, []int{5}
}

func (m *PceEroInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PceEroInfo.Unmarshal(m, b)
}
func (m *PceEroInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PceEroInfo.Marshal(b, m, deterministic)
}
func (m *PceEroInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PceEroInfo.Merge(m, src)
}
func (m *PceEroInfo) XXX_Size() int {
	return xxx_messageInfo_PceEroInfo.Size(m)
}
func (m *PceEroInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_PceEroInfo.DiscardUnknown(m)
}

var xxx_messageInfo_PceEroInfo proto.InternalMessageInfo

func (m *PceEroInfo) GetReportedRsvpPath() []*PceRsvpHopType {
	if m != nil {
		return m.ReportedRsvpPath
	}
	return nil
}

func (m *PceEroInfo) GetReportedSrPath() []*PceSrHopType {
	if m != nil {
		return m.ReportedSrPath
	}
	return nil
}

func (m *PceEroInfo) GetComputedRsvpPath() []*PceRsvpHopType {
	if m != nil {
		return m.ComputedRsvpPath
	}
	return nil
}

func (m *PceEroInfo) GetComputedSrPath() []*PceSrHopType {
	if m != nil {
		return m.ComputedSrPath
	}
	return nil
}

func (m *PceEroInfo) GetReportedMetricType() uint32 {
	if m != nil {
		return m.ReportedMetricType
	}
	return 0
}

func (m *PceEroInfo) GetReportedMetricValue() uint32 {
	if m != nil {
		return m.ReportedMetricValue
	}
	return 0
}

func (m *PceEroInfo) GetComputedMetricType() uint32 {
	if m != nil {
		return m.ComputedMetricType
	}
	return 0
}

func (m *PceEroInfo) GetComputedMetricValue() uint32 {
	if m != nil {
		return m.ComputedMetricValue
	}
	return 0
}

func (m *PceEroInfo) GetComputedHopListTime() uint32 {
	if m != nil {
		return m.ComputedHopListTime
	}
	return 0
}

type PceRroInfo struct {
	RroType              string        `protobuf:"bytes,1,opt,name=rro_type,json=rroType,proto3" json:"rro_type,omitempty"`
	Ipv4Address          string        `protobuf:"bytes,2,opt,name=ipv4_address,json=ipv4Address,proto3" json:"ipv4_address,omitempty"`
	MplsLabel            uint32        `protobuf:"varint,3,opt,name=mpls_label,json=mplsLabel,proto3" json:"mpls_label,omitempty"`
	Flags                uint32        `protobuf:"varint,4,opt,name=flags,proto3" json:"flags,omitempty"`
	SrRro                *PceSrHopType `protobuf:"bytes,5,opt,name=sr_rro,json=srRro,proto3" json:"sr_rro,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *PceRroInfo) Reset()         { *m = PceRroInfo{} }
func (m *PceRroInfo) String() string { return proto.CompactTextString(m) }
func (*PceRroInfo) ProtoMessage()    {}
func (*PceRroInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_1931fa0b395d0881, []int{6}
}

func (m *PceRroInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PceRroInfo.Unmarshal(m, b)
}
func (m *PceRroInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PceRroInfo.Marshal(b, m, deterministic)
}
func (m *PceRroInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PceRroInfo.Merge(m, src)
}
func (m *PceRroInfo) XXX_Size() int {
	return xxx_messageInfo_PceRroInfo.Size(m)
}
func (m *PceRroInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_PceRroInfo.DiscardUnknown(m)
}

var xxx_messageInfo_PceRroInfo proto.InternalMessageInfo

func (m *PceRroInfo) GetRroType() string {
	if m != nil {
		return m.RroType
	}
	return ""
}

func (m *PceRroInfo) GetIpv4Address() string {
	if m != nil {
		return m.Ipv4Address
	}
	return ""
}

func (m *PceRroInfo) GetMplsLabel() uint32 {
	if m != nil {
		return m.MplsLabel
	}
	return 0
}

func (m *PceRroInfo) GetFlags() uint32 {
	if m != nil {
		return m.Flags
	}
	return 0
}

func (m *PceRroInfo) GetSrRro() *PceSrHopType {
	if m != nil {
		return m.SrRro
	}
	return nil
}

type PceLspRsvpErrorBag struct {
	NodeAddress          string   `protobuf:"bytes,1,opt,name=node_address,json=nodeAddress,proto3" json:"node_address,omitempty"`
	ErrorFlags           uint32   `protobuf:"varint,2,opt,name=error_flags,json=errorFlags,proto3" json:"error_flags,omitempty"`
	ErrorCode            uint32   `protobuf:"varint,3,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"`
	ErrorValue           uint32   `protobuf:"varint,4,opt,name=error_value,json=errorValue,proto3" json:"error_value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PceLspRsvpErrorBag) Reset()         { *m = PceLspRsvpErrorBag{} }
func (m *PceLspRsvpErrorBag) String() string { return proto.CompactTextString(m) }
func (*PceLspRsvpErrorBag) ProtoMessage()    {}
func (*PceLspRsvpErrorBag) Descriptor() ([]byte, []int) {
	return fileDescriptor_1931fa0b395d0881, []int{7}
}

func (m *PceLspRsvpErrorBag) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PceLspRsvpErrorBag.Unmarshal(m, b)
}
func (m *PceLspRsvpErrorBag) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PceLspRsvpErrorBag.Marshal(b, m, deterministic)
}
func (m *PceLspRsvpErrorBag) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PceLspRsvpErrorBag.Merge(m, src)
}
func (m *PceLspRsvpErrorBag) XXX_Size() int {
	return xxx_messageInfo_PceLspRsvpErrorBag.Size(m)
}
func (m *PceLspRsvpErrorBag) XXX_DiscardUnknown() {
	xxx_messageInfo_PceLspRsvpErrorBag.DiscardUnknown(m)
}

var xxx_messageInfo_PceLspRsvpErrorBag proto.InternalMessageInfo

func (m *PceLspRsvpErrorBag) GetNodeAddress() string {
	if m != nil {
		return m.NodeAddress
	}
	return ""
}

func (m *PceLspRsvpErrorBag) GetErrorFlags() uint32 {
	if m != nil {
		return m.ErrorFlags
	}
	return 0
}

func (m *PceLspRsvpErrorBag) GetErrorCode() uint32 {
	if m != nil {
		return m.ErrorCode
	}
	return 0
}

func (m *PceLspRsvpErrorBag) GetErrorValue() uint32 {
	if m != nil {
		return m.ErrorValue
	}
	return 0
}

type PcePcepInfo struct {
	Pcepid               uint32              `protobuf:"varint,1,opt,name=pcepid,proto3" json:"pcepid,omitempty"`
	PcepFlagD            bool                `protobuf:"varint,2,opt,name=pcep_flag_d,json=pcepFlagD,proto3" json:"pcep_flag_d,omitempty"`
	PcepFlagS            bool                `protobuf:"varint,3,opt,name=pcep_flag_s,json=pcepFlagS,proto3" json:"pcep_flag_s,omitempty"`
	PcepFlagR            bool                `protobuf:"varint,4,opt,name=pcep_flag_r,json=pcepFlagR,proto3" json:"pcep_flag_r,omitempty"`
	PcepFlagA            bool                `protobuf:"varint,5,opt,name=pcep_flag_a,json=pcepFlagA,proto3" json:"pcep_flag_a,omitempty"`
	PcepFlagO            uint32              `protobuf:"varint,6,opt,name=pcep_flag_o,json=pcepFlagO,proto3" json:"pcep_flag_o,omitempty"`
	PcepFlagC            uint32              `protobuf:"varint,7,opt,name=pcep_flag_c,json=pcepFlagC,proto3" json:"pcep_flag_c,omitempty"`
	RsvpError            *PceLspRsvpErrorBag `protobuf:"bytes,8,opt,name=rsvp_error,json=rsvpError,proto3" json:"rsvp_error,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *PcePcepInfo) Reset()         { *m = PcePcepInfo{} }
func (m *PcePcepInfo) String() string { return proto.CompactTextString(m) }
func (*PcePcepInfo) ProtoMessage()    {}
func (*PcePcepInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_1931fa0b395d0881, []int{8}
}

func (m *PcePcepInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PcePcepInfo.Unmarshal(m, b)
}
func (m *PcePcepInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PcePcepInfo.Marshal(b, m, deterministic)
}
func (m *PcePcepInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PcePcepInfo.Merge(m, src)
}
func (m *PcePcepInfo) XXX_Size() int {
	return xxx_messageInfo_PcePcepInfo.Size(m)
}
func (m *PcePcepInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_PcePcepInfo.DiscardUnknown(m)
}

var xxx_messageInfo_PcePcepInfo proto.InternalMessageInfo

func (m *PcePcepInfo) GetPcepid() uint32 {
	if m != nil {
		return m.Pcepid
	}
	return 0
}

func (m *PcePcepInfo) GetPcepFlagD() bool {
	if m != nil {
		return m.PcepFlagD
	}
	return false
}

func (m *PcePcepInfo) GetPcepFlagS() bool {
	if m != nil {
		return m.PcepFlagS
	}
	return false
}

func (m *PcePcepInfo) GetPcepFlagR() bool {
	if m != nil {
		return m.PcepFlagR
	}
	return false
}

func (m *PcePcepInfo) GetPcepFlagA() bool {
	if m != nil {
		return m.PcepFlagA
	}
	return false
}

func (m *PcePcepInfo) GetPcepFlagO() uint32 {
	if m != nil {
		return m.PcepFlagO
	}
	return 0
}

func (m *PcePcepInfo) GetPcepFlagC() uint32 {
	if m != nil {
		return m.PcepFlagC
	}
	return 0
}

func (m *PcePcepInfo) GetRsvpError() *PceLspRsvpErrorBag {
	if m != nil {
		return m.RsvpError
	}
	return nil
}

type PceAssoInfo struct {
	AssociationType      uint32         `protobuf:"varint,1,opt,name=association_type,json=associationType,proto3" json:"association_type,omitempty"`
	AssociationId        uint32         `protobuf:"varint,2,opt,name=association_id,json=associationId,proto3" json:"association_id,omitempty"`
	AssociationSource    *PceIpAddrType `protobuf:"bytes,3,opt,name=association_source,json=associationSource,proto3" json:"association_source,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *PceAssoInfo) Reset()         { *m = PceAssoInfo{} }
func (m *PceAssoInfo) String() string { return proto.CompactTextString(m) }
func (*PceAssoInfo) ProtoMessage()    {}
func (*PceAssoInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_1931fa0b395d0881, []int{9}
}

func (m *PceAssoInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PceAssoInfo.Unmarshal(m, b)
}
func (m *PceAssoInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PceAssoInfo.Marshal(b, m, deterministic)
}
func (m *PceAssoInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PceAssoInfo.Merge(m, src)
}
func (m *PceAssoInfo) XXX_Size() int {
	return xxx_messageInfo_PceAssoInfo.Size(m)
}
func (m *PceAssoInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_PceAssoInfo.DiscardUnknown(m)
}

var xxx_messageInfo_PceAssoInfo proto.InternalMessageInfo

func (m *PceAssoInfo) GetAssociationType() uint32 {
	if m != nil {
		return m.AssociationType
	}
	return 0
}

func (m *PceAssoInfo) GetAssociationId() uint32 {
	if m != nil {
		return m.AssociationId
	}
	return 0
}

func (m *PceAssoInfo) GetAssociationSource() *PceIpAddrType {
	if m != nil {
		return m.AssociationSource
	}
	return nil
}

type PceLspaInfo struct {
	AffinityExcludeAny   uint32   `protobuf:"varint,1,opt,name=affinity_exclude_any,json=affinityExcludeAny,proto3" json:"affinity_exclude_any,omitempty"`
	AffinityIncludeAny   uint32   `protobuf:"varint,2,opt,name=affinity_include_any,json=affinityIncludeAny,proto3" json:"affinity_include_any,omitempty"`
	AffinityIncludeAll   uint32   `protobuf:"varint,3,opt,name=affinity_include_all,json=affinityIncludeAll,proto3" json:"affinity_include_all,omitempty"`
	SetupPriority        uint32   `protobuf:"varint,4,opt,name=setup_priority,json=setupPriority,proto3" json:"setup_priority,omitempty"`
	HoldPriority         uint32   `protobuf:"varint,5,opt,name=hold_priority,json=holdPriority,proto3" json:"hold_priority,omitempty"`
	LocalProtection      bool     `protobuf:"varint,6,opt,name=local_protection,json=localProtection,proto3" json:"local_protection,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PceLspaInfo) Reset()         { *m = PceLspaInfo{} }
func (m *PceLspaInfo) String() string { return proto.CompactTextString(m) }
func (*PceLspaInfo) ProtoMessage()    {}
func (*PceLspaInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_1931fa0b395d0881, []int{10}
}

func (m *PceLspaInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PceLspaInfo.Unmarshal(m, b)
}
func (m *PceLspaInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PceLspaInfo.Marshal(b, m, deterministic)
}
func (m *PceLspaInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PceLspaInfo.Merge(m, src)
}
func (m *PceLspaInfo) XXX_Size() int {
	return xxx_messageInfo_PceLspaInfo.Size(m)
}
func (m *PceLspaInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_PceLspaInfo.DiscardUnknown(m)
}

var xxx_messageInfo_PceLspaInfo proto.InternalMessageInfo

func (m *PceLspaInfo) GetAffinityExcludeAny() uint32 {
	if m != nil {
		return m.AffinityExcludeAny
	}
	return 0
}

func (m *PceLspaInfo) GetAffinityIncludeAny() uint32 {
	if m != nil {
		return m.AffinityIncludeAny
	}
	return 0
}

func (m *PceLspaInfo) GetAffinityIncludeAll() uint32 {
	if m != nil {
		return m.AffinityIncludeAll
	}
	return 0
}

func (m *PceLspaInfo) GetSetupPriority() uint32 {
	if m != nil {
		return m.SetupPriority
	}
	return 0
}

func (m *PceLspaInfo) GetHoldPriority() uint32 {
	if m != nil {
		return m.HoldPriority
	}
	return 0
}

func (m *PceLspaInfo) GetLocalProtection() bool {
	if m != nil {
		return m.LocalProtection
	}
	return false
}

type PceLspDetailInfo struct {
	BriefLspInformation        *PceLspInfo    `protobuf:"bytes,1,opt,name=brief_lsp_information,json=briefLspInformation,proto3" json:"brief_lsp_information,omitempty"`
	SignaledBandwidthSpecified bool           `protobuf:"varint,2,opt,name=signaled_bandwidth_specified,json=signaledBandwidthSpecified,proto3" json:"signaled_bandwidth_specified,omitempty"`
	SignaledBandwidth          uint64         `protobuf:"varint,3,opt,name=signaled_bandwidth,json=signaledBandwidth,proto3" json:"signaled_bandwidth,omitempty"`
	ActualBandwidthSpecified   bool           `protobuf:"varint,4,opt,name=actual_bandwidth_specified,json=actualBandwidthSpecified,proto3" json:"actual_bandwidth_specified,omitempty"`
	ActualBandwidth            uint64         `protobuf:"varint,5,opt,name=actual_bandwidth,json=actualBandwidth,proto3" json:"actual_bandwidth,omitempty"`
	ErOs                       *PceEroInfo    `protobuf:"bytes,6,opt,name=er_os,json=erOs,proto3" json:"er_os,omitempty"`
	Rro                        []*PceRroInfo  `protobuf:"bytes,7,rep,name=rro,proto3" json:"rro,omitempty"`
	LsppcepInformation         *PcePcepInfo   `protobuf:"bytes,8,opt,name=lsppcep_information,json=lsppcepInformation,proto3" json:"lsppcep_information,omitempty"`
	LspAssociationInfo         *PceAssoInfo   `protobuf:"bytes,9,opt,name=lsp_association_info,json=lspAssociationInfo,proto3" json:"lsp_association_info,omitempty"`
	LspAttributes              *PceLspaInfo   `protobuf:"bytes,10,opt,name=lsp_attributes,json=lspAttributes,proto3" json:"lsp_attributes,omitempty"`
	SrlgInfo                   []uint32       `protobuf:"varint,11,rep,packed,name=srlg_info,json=srlgInfo,proto3" json:"srlg_info,omitempty"`
	LspRole                    uint32         `protobuf:"varint,12,opt,name=lsp_role,json=lspRole,proto3" json:"lsp_role,omitempty"`
	ComputingPce               uint32         `protobuf:"varint,13,opt,name=computing_pce,json=computingPce,proto3" json:"computing_pce,omitempty"`
	SubDelegatedPce            *PceIpAddrType `protobuf:"bytes,14,opt,name=sub_delegated_pce,json=subDelegatedPce,proto3" json:"sub_delegated_pce,omitempty"`
	StateSyncPce               *PceIpAddrType `protobuf:"bytes,15,opt,name=state_sync_pce,json=stateSyncPce,proto3" json:"state_sync_pce,omitempty"`
	ReportingPccAddress        *PceIpAddrType `protobuf:"bytes,16,opt,name=reporting_pcc_address,json=reportingPccAddress,proto3" json:"reporting_pcc_address,omitempty"`
	XXX_NoUnkeyedLiteral       struct{}       `json:"-"`
	XXX_unrecognized           []byte         `json:"-"`
	XXX_sizecache              int32          `json:"-"`
}

func (m *PceLspDetailInfo) Reset()         { *m = PceLspDetailInfo{} }
func (m *PceLspDetailInfo) String() string { return proto.CompactTextString(m) }
func (*PceLspDetailInfo) ProtoMessage()    {}
func (*PceLspDetailInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_1931fa0b395d0881, []int{11}
}

func (m *PceLspDetailInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PceLspDetailInfo.Unmarshal(m, b)
}
func (m *PceLspDetailInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PceLspDetailInfo.Marshal(b, m, deterministic)
}
func (m *PceLspDetailInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PceLspDetailInfo.Merge(m, src)
}
func (m *PceLspDetailInfo) XXX_Size() int {
	return xxx_messageInfo_PceLspDetailInfo.Size(m)
}
func (m *PceLspDetailInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_PceLspDetailInfo.DiscardUnknown(m)
}

var xxx_messageInfo_PceLspDetailInfo proto.InternalMessageInfo

func (m *PceLspDetailInfo) GetBriefLspInformation() *PceLspInfo {
	if m != nil {
		return m.BriefLspInformation
	}
	return nil
}

func (m *PceLspDetailInfo) GetSignaledBandwidthSpecified() bool {
	if m != nil {
		return m.SignaledBandwidthSpecified
	}
	return false
}

func (m *PceLspDetailInfo) GetSignaledBandwidth() uint64 {
	if m != nil {
		return m.SignaledBandwidth
	}
	return 0
}

func (m *PceLspDetailInfo) GetActualBandwidthSpecified() bool {
	if m != nil {
		return m.ActualBandwidthSpecified
	}
	return false
}

func (m *PceLspDetailInfo) GetActualBandwidth() uint64 {
	if m != nil {
		return m.ActualBandwidth
	}
	return 0
}

func (m *PceLspDetailInfo) GetErOs() *PceEroInfo {
	if m != nil {
		return m.ErOs
	}
	return nil
}

func (m *PceLspDetailInfo) GetRro() []*PceRroInfo {
	if m != nil {
		return m.Rro
	}
	return nil
}

func (m *PceLspDetailInfo) GetLsppcepInformation() *PcePcepInfo {
	if m != nil {
		return m.LsppcepInformation
	}
	return nil
}

func (m *PceLspDetailInfo) GetLspAssociationInfo() *PceAssoInfo {
	if m != nil {
		return m.LspAssociationInfo
	}
	return nil
}

func (m *PceLspDetailInfo) GetLspAttributes() *PceLspaInfo {
	if m != nil {
		return m.LspAttributes
	}
	return nil
}

func (m *PceLspDetailInfo) GetSrlgInfo() []uint32 {
	if m != nil {
		return m.SrlgInfo
	}
	return nil
}

func (m *PceLspDetailInfo) GetLspRole() uint32 {
	if m != nil {
		return m.LspRole
	}
	return 0
}

func (m *PceLspDetailInfo) GetComputingPce() uint32 {
	if m != nil {
		return m.ComputingPce
	}
	return 0
}

func (m *PceLspDetailInfo) GetSubDelegatedPce() *PceIpAddrType {
	if m != nil {
		return m.SubDelegatedPce
	}
	return nil
}

func (m *PceLspDetailInfo) GetStateSyncPce() *PceIpAddrType {
	if m != nil {
		return m.StateSyncPce
	}
	return nil
}

func (m *PceLspDetailInfo) GetReportingPccAddress() *PceIpAddrType {
	if m != nil {
		return m.ReportingPccAddress
	}
	return nil
}

type PceEventInfo struct {
	EventId              uint32   `protobuf:"varint,1,opt,name=event_id,json=eventId,proto3" json:"event_id,omitempty"`
	EventMessage         string   `protobuf:"bytes,2,opt,name=event_message,json=eventMessage,proto3" json:"event_message,omitempty"`
	TimeStamp            uint32   `protobuf:"varint,3,opt,name=time_stamp,json=timeStamp,proto3" json:"time_stamp,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PceEventInfo) Reset()         { *m = PceEventInfo{} }
func (m *PceEventInfo) String() string { return proto.CompactTextString(m) }
func (*PceEventInfo) ProtoMessage()    {}
func (*PceEventInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_1931fa0b395d0881, []int{12}
}

func (m *PceEventInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PceEventInfo.Unmarshal(m, b)
}
func (m *PceEventInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PceEventInfo.Marshal(b, m, deterministic)
}
func (m *PceEventInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PceEventInfo.Merge(m, src)
}
func (m *PceEventInfo) XXX_Size() int {
	return xxx_messageInfo_PceEventInfo.Size(m)
}
func (m *PceEventInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_PceEventInfo.DiscardUnknown(m)
}

var xxx_messageInfo_PceEventInfo proto.InternalMessageInfo

func (m *PceEventInfo) GetEventId() uint32 {
	if m != nil {
		return m.EventId
	}
	return 0
}

func (m *PceEventInfo) GetEventMessage() string {
	if m != nil {
		return m.EventMessage
	}
	return ""
}

func (m *PceEventInfo) GetTimeStamp() uint32 {
	if m != nil {
		return m.TimeStamp
	}
	return 0
}

type PceEventBag struct {
	EventBuffer          []*PceEventInfo `protobuf:"bytes,1,rep,name=event_buffer,json=eventBuffer,proto3" json:"event_buffer,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *PceEventBag) Reset()         { *m = PceEventBag{} }
func (m *PceEventBag) String() string { return proto.CompactTextString(m) }
func (*PceEventBag) ProtoMessage()    {}
func (*PceEventBag) Descriptor() ([]byte, []int) {
	return fileDescriptor_1931fa0b395d0881, []int{13}
}

func (m *PceEventBag) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PceEventBag.Unmarshal(m, b)
}
func (m *PceEventBag) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PceEventBag.Marshal(b, m, deterministic)
}
func (m *PceEventBag) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PceEventBag.Merge(m, src)
}
func (m *PceEventBag) XXX_Size() int {
	return xxx_messageInfo_PceEventBag.Size(m)
}
func (m *PceEventBag) XXX_DiscardUnknown() {
	xxx_messageInfo_PceEventBag.DiscardUnknown(m)
}

var xxx_messageInfo_PceEventBag proto.InternalMessageInfo

func (m *PceEventBag) GetEventBuffer() []*PceEventInfo {
	if m != nil {
		return m.EventBuffer
	}
	return nil
}

type PceTunDetailBag struct {
	PccAddress            *PceIpAddrType      `protobuf:"bytes,50,opt,name=pcc_address,json=pccAddress,proto3" json:"pcc_address,omitempty"`
	TunnelNameXr          string              `protobuf:"bytes,51,opt,name=tunnel_name_xr,json=tunnelNameXr,proto3" json:"tunnel_name_xr,omitempty"`
	XtcControlled         bool                `protobuf:"varint,52,opt,name=xtc_controlled,json=xtcControlled,proto3" json:"xtc_controlled,omitempty"`
	DetailLspInformation  []*PceLspDetailInfo `protobuf:"bytes,53,rep,name=detail_lsp_information,json=detailLspInformation,proto3" json:"detail_lsp_information,omitempty"`
	PrivateLspInformation *PceEventBag        `protobuf:"bytes,54,opt,name=private_lsp_information,json=privateLspInformation,proto3" json:"private_lsp_information,omitempty"`
	Color                 uint32              `protobuf:"varint,55,opt,name=color,proto3" json:"color,omitempty"`
	XXX_NoUnkeyedLiteral  struct{}            `json:"-"`
	XXX_unrecognized      []byte              `json:"-"`
	XXX_sizecache         int32               `json:"-"`
}

func (m *PceTunDetailBag) Reset()         { *m = PceTunDetailBag{} }
func (m *PceTunDetailBag) String() string { return proto.CompactTextString(m) }
func (*PceTunDetailBag) ProtoMessage()    {}
func (*PceTunDetailBag) Descriptor() ([]byte, []int) {
	return fileDescriptor_1931fa0b395d0881, []int{14}
}

func (m *PceTunDetailBag) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PceTunDetailBag.Unmarshal(m, b)
}
func (m *PceTunDetailBag) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PceTunDetailBag.Marshal(b, m, deterministic)
}
func (m *PceTunDetailBag) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PceTunDetailBag.Merge(m, src)
}
func (m *PceTunDetailBag) XXX_Size() int {
	return xxx_messageInfo_PceTunDetailBag.Size(m)
}
func (m *PceTunDetailBag) XXX_DiscardUnknown() {
	xxx_messageInfo_PceTunDetailBag.DiscardUnknown(m)
}

var xxx_messageInfo_PceTunDetailBag proto.InternalMessageInfo

func (m *PceTunDetailBag) GetPccAddress() *PceIpAddrType {
	if m != nil {
		return m.PccAddress
	}
	return nil
}

func (m *PceTunDetailBag) GetTunnelNameXr() string {
	if m != nil {
		return m.TunnelNameXr
	}
	return ""
}

func (m *PceTunDetailBag) GetXtcControlled() bool {
	if m != nil {
		return m.XtcControlled
	}
	return false
}

func (m *PceTunDetailBag) GetDetailLspInformation() []*PceLspDetailInfo {
	if m != nil {
		return m.DetailLspInformation
	}
	return nil
}

func (m *PceTunDetailBag) GetPrivateLspInformation() *PceEventBag {
	if m != nil {
		return m.PrivateLspInformation
	}
	return nil
}

func (m *PceTunDetailBag) GetColor() uint32 {
	if m != nil {
		return m.Color
	}
	return 0
}

func init() {
	proto.RegisterType((*PceTunDetailBag_KEYS)(nil), "cisco_ios_xr_infra_xtc_oper.pce.tunnel_detail_infos.tunnel_detail_info.pce_tun_detail_bag_KEYS")
	proto.RegisterType((*PceIpAddrType)(nil), "cisco_ios_xr_infra_xtc_oper.pce.tunnel_detail_infos.tunnel_detail_info.pce_ip_addr_type")
	proto.RegisterType((*PceLspInfo)(nil), "cisco_ios_xr_infra_xtc_oper.pce.tunnel_detail_infos.tunnel_detail_info.pce_lsp_info")
	proto.RegisterType((*PceRsvpHopType)(nil), "cisco_ios_xr_infra_xtc_oper.pce.tunnel_detail_infos.tunnel_detail_info.pce_rsvp_hop_type")
	proto.RegisterType((*PceSrHopType)(nil), "cisco_ios_xr_infra_xtc_oper.pce.tunnel_detail_infos.tunnel_detail_info.pce_sr_hop_type")
	proto.RegisterType((*PceEroInfo)(nil), "cisco_ios_xr_infra_xtc_oper.pce.tunnel_detail_infos.tunnel_detail_info.pce_ero_info")
	proto.RegisterType((*PceRroInfo)(nil), "cisco_ios_xr_infra_xtc_oper.pce.tunnel_detail_infos.tunnel_detail_info.pce_rro_info")
	proto.RegisterType((*PceLspRsvpErrorBag)(nil), "cisco_ios_xr_infra_xtc_oper.pce.tunnel_detail_infos.tunnel_detail_info.pce_lsp_rsvp_error_bag")
	proto.RegisterType((*PcePcepInfo)(nil), "cisco_ios_xr_infra_xtc_oper.pce.tunnel_detail_infos.tunnel_detail_info.pce_pcep_info")
	proto.RegisterType((*PceAssoInfo)(nil), "cisco_ios_xr_infra_xtc_oper.pce.tunnel_detail_infos.tunnel_detail_info.pce_asso_info")
	proto.RegisterType((*PceLspaInfo)(nil), "cisco_ios_xr_infra_xtc_oper.pce.tunnel_detail_infos.tunnel_detail_info.pce_lspa_info")
	proto.RegisterType((*PceLspDetailInfo)(nil), "cisco_ios_xr_infra_xtc_oper.pce.tunnel_detail_infos.tunnel_detail_info.pce_lsp_detail_info")
	proto.RegisterType((*PceEventInfo)(nil), "cisco_ios_xr_infra_xtc_oper.pce.tunnel_detail_infos.tunnel_detail_info.pce_event_info")
	proto.RegisterType((*PceEventBag)(nil), "cisco_ios_xr_infra_xtc_oper.pce.tunnel_detail_infos.tunnel_detail_info.pce_event_bag")
	proto.RegisterType((*PceTunDetailBag)(nil), "cisco_ios_xr_infra_xtc_oper.pce.tunnel_detail_infos.tunnel_detail_info.pce_tun_detail_bag")
}

func init() { proto.RegisterFile("pce_tun_detail_bag.proto", fileDescriptor_1931fa0b395d0881) }

var fileDescriptor_1931fa0b395d0881 = []byte{
	// 1678 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x58, 0xcd, 0x8e, 0x24, 0x47,
	0x11, 0x56, 0xcd, 0xf4, 0xfc, 0x74, 0x74, 0xf7, 0xfc, 0xe4, 0xcc, 0xee, 0x96, 0x0d, 0xc6, 0xeb,
	0xc6, 0x88, 0xb5, 0x10, 0x23, 0x33, 0xbb, 0x98, 0x0b, 0x07, 0xc6, 0xeb, 0xb5, 0x18, 0xb1, 0x8b,
	0x47, 0xd5, 0x8b, 0xb1, 0x85, 0x44, 0x29, 0xbb, 0x2a, 0xbb, 0x27, 0xa5, 0xec, 0xca, 0x54, 0x66,
	0x76, 0x7b, 0x5a, 0xe2, 0x47, 0x48, 0x08, 0x03, 0x82, 0x03, 0x17, 0x4e, 0xfb, 0x06, 0x3c, 0x04,
	0xcf, 0xc0, 0x91, 0x17, 0xe0, 0xc2, 0x89, 0x37, 0x40, 0x11, 0x59, 0x55, 0x53, 0xd5, 0xb3, 0xf2,
	0xa9, 0xfb, 0xd6, 0xf9, 0x45, 0x44, 0x7d, 0x91, 0x11, 0x91, 0x91, 0x91, 0x0d, 0xb1, 0xc9, 0x44,
	0xea, 0xe7, 0x45, 0x9a, 0x0b, 0xcf, 0xa5, 0x4a, 0xc7, 0x7c, 0x7a, 0x66, 0xac, 0xf6, 0x9a, 0x7d,
	0x9c, 0x49, 0x97, 0xe9, 0x54, 0x6a, 0x97, 0xde, 0xd8, 0x54, 0x16, 0x13, 0xcb, 0xd3, 0x1b, 0x9f,
	0xa5, 0xda, 0x08, 0x7b, 0x66, 0x32, 0x71, 0xe6, 0xe7, 0x45, 0x21, 0x54, 0x65, 0x28, 0x8b, 0x89,
	0x76, 0xaf, 0xc1, 0x86, 0x0b, 0x78, 0x70, 0x97, 0x23, 0xfd, 0xc9, 0xb3, 0xcf, 0x47, 0xec, 0x1d,
	0xe8, 0x1b, 0x21, 0x6c, 0xca, 0xf3, 0xdc, 0x0a, 0xe7, 0xe2, 0xe8, 0x61, 0xf4, 0xa8, 0x9b, 0xf4,
	0x10, 0xbb, 0x08, 0x10, 0x7b, 0x00, 0x7b, 0x46, 0x39, 0x93, 0xca, 0x3c, 0xde, 0x7a, 0x18, 0x3d,
	0x1a, 0x24, 0xbb, 0xb8, 0xbc, 0xcc, 0xd9, 0xdb, 0xd0, 0x2b, 0xc9, 0x0a, 0x3e, 0x13, 0xf1, 0x36,
	0x99, 0x42, 0x80, 0x7e, 0xca, 0x67, 0x62, 0x38, 0x82, 0x23, 0xe4, 0x95, 0x86, 0x3e, 0x9f, 0xfa,
	0xa5, 0x11, 0xf8, 0x35, 0x3e, 0x09, 0x06, 0x81, 0x6b, 0x97, 0x4f, 0x50, 0x99, 0x31, 0xe8, 0x48,
	0xb3, 0x78, 0x42, 0x1c, 0xdd, 0x84, 0x7e, 0x97, 0xd8, 0x07, 0xe5, 0xa7, 0xe9, 0xf7, 0xf0, 0xdf,
	0x1d, 0xe8, 0xe3, 0x57, 0xc9, 0xa5, 0x62, 0xa2, 0xd9, 0x6f, 0xe1, 0xc0, 0xe9, 0xb9, 0xcd, 0x44,
	0x6b, 0x13, 0xbd, 0xf3, 0xcf, 0xce, 0xd6, 0x13, 0xbe, 0xb3, 0xd5, 0x3d, 0x24, 0x83, 0xc0, 0x57,
	0x05, 0xe8, 0x4f, 0x11, 0x9c, 0xe4, 0xc2, 0x79, 0x59, 0x70, 0x2f, 0x75, 0x51, 0xbb, 0xb1, 0xb5,
	0x61, 0x37, 0x58, 0x83, 0xb4, 0xf2, 0xe5, 0x6b, 0xd0, 0x2d, 0x4d, 0x65, 0x4e, 0x61, 0x1b, 0x24,
	0xfb, 0x01, 0xb8, 0xcc, 0xd9, 0x29, 0xec, 0x28, 0x67, 0x64, 0x1e, 0x77, 0x48, 0x10, 0x16, 0x98,
	0xc6, 0xb1, 0x2c, 0x72, 0x59, 0x4c, 0x53, 0x27, 0xf3, 0x78, 0x87, 0x64, 0x50, 0x42, 0x23, 0x99,
	0xb3, 0x77, 0xe1, 0x00, 0x83, 0xed, 0x84, 0x9f, 0x1b, 0x62, 0x8e, 0x77, 0x29, 0x1f, 0x7d, 0xe5,
	0xcc, 0x08, 0xc1, 0x97, 0x98, 0xd8, 0xef, 0xc0, 0x31, 0xee, 0x88, 0xbc, 0xe1, 0x2a, 0x75, 0x9e,
	0x7b, 0x11, 0xef, 0x91, 0xe2, 0x51, 0x43, 0x30, 0x42, 0x9c, 0x7d, 0x0f, 0x4e, 0x79, 0x3e, 0x93,
	0x85, 0x74, 0x1e, 0x05, 0x0b, 0x51, 0xea, 0xef, 0x93, 0xfe, 0x49, 0x5b, 0x16, 0x4c, 0x8e, 0x60,
	0x7b, 0xe6, 0xf2, 0xb8, 0x4b, 0xee, 0xe1, 0x4f, 0xf6, 0x6d, 0x38, 0xe4, 0x63, 0xa7, 0xd5, 0xdc,
	0x8b, 0x74, 0xc6, 0xed, 0x54, 0x16, 0x31, 0x90, 0xf4, 0xa0, 0x82, 0x5f, 0x10, 0x8a, 0x8a, 0x56,
	0xa8, 0xc0, 0x53, 0x2a, 0xf6, 0x82, 0x62, 0x05, 0x07, 0xc5, 0xe1, 0x13, 0x38, 0xc6, 0x28, 0x5b,
	0xb7, 0x30, 0xe9, 0xb5, 0x0e, 0x9b, 0xc5, 0xf8, 0xe0, 0xef, 0xf6, 0x09, 0x81, 0x6b, 0x6d, 0xca,
	0x98, 0x0f, 0xff, 0xb9, 0x05, 0x87, 0x68, 0xe6, 0xec, 0xad, 0xd1, 0x1b, 0xb0, 0xef, 0x64, 0x1e,
	0xa2, 0x15, 0x2c, 0xf6, 0x9c, 0xcc, 0x29, 0x50, 0x6f, 0x01, 0xcc, 0x8c, 0x72, 0xa9, 0xe2, 0x63,
	0xa1, 0xca, 0x23, 0xd5, 0x45, 0xe4, 0x39, 0x02, 0xec, 0x0b, 0x00, 0xa5, 0x33, 0xae, 0x88, 0x90,
	0x52, 0xb8, 0xc9, 0x1a, 0xea, 0x12, 0x17, 0xee, 0x84, 0x2d, 0xa1, 0x67, 0xc5, 0x4c, 0xfb, 0x70,
	0x8e, 0xa8, 0x46, 0x36, 0xc9, 0x0c, 0x81, 0x0c, 0xa9, 0x87, 0xff, 0xd8, 0x0d, 0x67, 0x5a, 0x58,
	0x1d, 0xce, 0xf4, 0x97, 0x11, 0x30, 0x2b, 0x8c, 0xb6, 0x5e, 0xe4, 0x21, 0x1d, 0x86, 0xfb, 0xeb,
	0x38, 0x7a, 0xb8, 0xfd, 0xa8, 0x77, 0xfe, 0xf9, 0x3a, 0x7d, 0x6a, 0xe5, 0x3a, 0x39, 0xaa, 0x48,
	0x13, 0xb7, 0x30, 0x57, 0xdc, 0x5f, 0xb3, 0xdf, 0x45, 0x50, 0x83, 0x98, 0x61, 0xf2, 0x63, 0x8b,
	0xfc, 0xf8, 0xf9, 0x3a, 0xfd, 0x68, 0x14, 0x0f, 0x96, 0x65, 0x20, 0x1c, 0x59, 0xf2, 0x01, 0xa3,
	0x91, 0xe9, 0x99, 0x99, 0xb7, 0xa3, 0xb1, 0xbd, 0xf1, 0x68, 0x54, 0xa4, 0xad, 0x68, 0xd4, 0x9e,
	0x54, 0xd1, 0xe8, 0x6c, 0x38, 0x1a, 0x15, 0x61, 0x19, 0x8d, 0xf7, 0xe1, 0xb4, 0x4e, 0xc8, 0x4c,
	0x78, 0x2b, 0xb3, 0x70, 0xcc, 0x42, 0xe3, 0xaa, 0xcb, 0xe6, 0x05, 0x89, 0xe8, 0xc4, 0x9d, 0xc3,
	0xbd, 0x55, 0x8b, 0x05, 0x57, 0xf3, 0xd0, 0xc7, 0x06, 0xc9, 0x49, 0xdb, 0xe4, 0x53, 0x14, 0x21,
	0x4b, 0xbd, 0xd1, 0x26, 0xcb, 0x5e, 0x60, 0xa9, 0x64, 0x6d, 0x96, 0x55, 0x8b, 0xc0, 0xb2, 0x1f,
	0x58, 0xda, 0x26, 0x81, 0xe5, 0x31, 0xdc, 0xaf, 0x6d, 0x70, 0xc3, 0x4a, 0x3a, 0x9f, 0x7a, 0x39,
	0x13, 0x65, 0x9f, 0xab, 0x8d, 0x7e, 0xac, 0xcd, 0x73, 0xe9, 0xfc, 0x4b, 0x39, 0x13, 0xc3, 0xff,
	0x45, 0xe1, 0xb4, 0xd8, 0xea, 0xb4, 0xbc, 0x01, 0xfb, 0xf8, 0xbb, 0xd9, 0x6c, 0xac, 0xd5, 0xe4,
	0xd4, 0x3b, 0xd0, 0xc7, 0x9b, 0xb4, 0x75, 0x27, 0x75, 0x93, 0x1e, 0x62, 0xd5, 0x95, 0xd1, 0xee,
	0x47, 0xdb, 0xab, 0xfd, 0xe8, 0x14, 0x76, 0x26, 0x8a, 0x4f, 0x5d, 0x75, 0x69, 0xd0, 0x82, 0x15,
	0xb0, 0xeb, 0x2c, 0x7a, 0x40, 0x61, 0xdf, 0x60, 0xf6, 0x77, 0x9c, 0x4d, 0xac, 0x1e, 0xbe, 0x8a,
	0xe0, 0x7e, 0x75, 0xeb, 0x53, 0x91, 0x0a, 0x6b, 0xb5, 0xc5, 0x39, 0x06, 0xb7, 0x58, 0xe8, 0x5c,
	0xac, 0x8e, 0x30, 0x88, 0x55, 0x5b, 0x7c, 0x1b, 0x7a, 0x41, 0x3f, 0xec, 0x24, 0xf4, 0x5c, 0x20,
	0xe8, 0x63, 0xda, 0xce, 0x5b, 0x10, 0x56, 0x69, 0xa6, 0x73, 0x51, 0xc5, 0x80, 0x90, 0xa7, 0x3a,
	0x17, 0xb7, 0xf6, 0x21, 0xa1, 0x9d, 0x86, 0x3d, 0xe5, 0x71, 0xf8, 0x9f, 0x2d, 0x18, 0xa0, 0x7b,
	0x26, 0x13, 0xe5, 0x54, 0x72, 0x1f, 0x76, 0x71, 0x21, 0x73, 0xf2, 0x07, 0x87, 0x26, 0x5a, 0xb1,
	0x6f, 0x40, 0x8f, 0x94, 0xd0, 0x93, 0x34, 0x4c, 0x54, 0xfb, 0x49, 0x17, 0x21, 0xf4, 0xe4, 0xa3,
	0xb6, 0xdc, 0x91, 0x2b, 0x0d, 0xf9, 0xa8, 0x2d, 0x0f, 0x5d, 0xba, 0x21, 0x4f, 0xda, 0x72, 0x4e,
	0xd9, 0x69, 0xc8, 0x2f, 0xda, 0x72, 0x5d, 0x9e, 0x80, 0x5a, 0xfe, 0x49, 0x5b, 0x9e, 0x95, 0xe5,
	0x5e, 0xcb, 0x9f, 0xb2, 0x5f, 0x03, 0xdc, 0xc6, 0x9f, 0x4a, 0xbb, 0x77, 0xfe, 0xcb, 0x75, 0x26,
	0xff, 0x6e, 0x86, 0x93, 0x2e, 0xae, 0x9f, 0xe1, 0x72, 0xf8, 0xdf, 0x28, 0x04, 0x9a, 0x3b, 0x57,
	0x16, 0xff, 0x7b, 0x70, 0x84, 0x8b, 0x4c, 0x86, 0xe1, 0xab, 0x3e, 0x04, 0x83, 0xe4, 0xb0, 0x81,
	0xd3, 0x61, 0xf8, 0x16, 0x1c, 0x34, 0x55, 0xeb, 0x81, 0x76, 0xd0, 0x40, 0x2f, 0x73, 0x6a, 0xb7,
	0x4d, 0xbd, 0x30, 0xed, 0x6d, 0xfc, 0x2a, 0x3e, 0x6e, 0x70, 0x8e, 0x88, 0x72, 0xf8, 0xaa, 0x2c,
	0x2b, 0xe5, 0x0c, 0x0f, 0xbb, 0x7d, 0x1f, 0x4e, 0xf9, 0x64, 0x22, 0x0b, 0xe9, 0x97, 0xa9, 0xb8,
	0xc9, 0xd4, 0x1c, 0x0b, 0xbf, 0x58, 0x96, 0x3b, 0x66, 0x95, 0xec, 0x59, 0x10, 0x5d, 0x14, 0xcb,
	0x96, 0x85, 0x2c, 0x6e, 0x2d, 0xb6, 0xda, 0x16, 0x97, 0xc5, 0x57, 0x5b, 0xa8, 0xaa, 0x35, 0xdc,
	0xb1, 0x50, 0x0a, 0x03, 0x1b, 0xa6, 0x43, 0x63, 0xa5, 0xb6, 0xd2, 0x2f, 0xcb, 0x23, 0x32, 0x20,
	0xf4, 0xaa, 0x04, 0xd9, 0x37, 0x61, 0x70, 0xad, 0x55, 0x7e, 0xab, 0x15, 0x5a, 0x76, 0x1f, 0xc1,
	0x5a, 0xe9, 0x3d, 0x38, 0x0a, 0xf3, 0x0f, 0xbe, 0x81, 0x44, 0x86, 0xd1, 0xa0, 0x2a, 0xdd, 0x4f,
	0x0e, 0x09, 0xbf, 0xaa, 0xe1, 0xe1, 0xbf, 0x7a, 0x70, 0x52, 0x95, 0x4c, 0x23, 0xb4, 0xec, 0x8f,
	0x11, 0xdc, 0x1b, 0x5b, 0x29, 0x26, 0xf5, 0x23, 0xc1, 0xce, 0x28, 0xac, 0xe5, 0xcb, 0xe0, 0xe5,
	0xba, 0xeb, 0x15, 0x17, 0xc9, 0x09, 0x51, 0x3e, 0x77, 0xe6, 0xf2, 0x96, 0x90, 0xfd, 0x08, 0xbe,
	0xee, 0xe4, 0xb4, 0xe0, 0x4a, 0xe4, 0xe9, 0x98, 0x17, 0xf9, 0x17, 0x32, 0xf7, 0xd7, 0xa9, 0x33,
	0x22, 0x93, 0x13, 0x29, 0xaa, 0xf3, 0xff, 0x66, 0xa5, 0xf3, 0x61, 0xa5, 0x32, 0xaa, 0x34, 0xd8,
	0x77, 0x81, 0xdd, 0xfd, 0x02, 0xe5, 0xa2, 0x93, 0x1c, 0xdf, 0xb1, 0x63, 0x3f, 0x84, 0x37, 0x79,
	0xe6, 0xe7, 0x5c, 0xbd, 0x96, 0x2e, 0xb4, 0x8b, 0x38, 0x68, 0xbc, 0x86, 0x0c, 0x0f, 0xd3, 0x8a,
	0x35, 0x25, 0xa9, 0x93, 0x1c, 0xae, 0xd8, 0x30, 0x09, 0x3b, 0xc2, 0xa6, 0xda, 0x51, 0x72, 0xd6,
	0x1c, 0xd3, 0x6a, 0x0e, 0x4c, 0x3a, 0xc2, 0x7e, 0xe2, 0xd8, 0x04, 0xb6, 0xf1, 0xa6, 0xd9, 0xa3,
	0x39, 0x63, 0xad, 0x44, 0xd5, 0x15, 0x9a, 0x20, 0x01, 0xfb, 0x43, 0x04, 0x27, 0xca, 0x99, 0xba,
	0x89, 0x57, 0x55, 0x13, 0xba, 0xdc, 0xcf, 0xd6, 0x49, 0x5c, 0x73, 0x24, 0xac, 0x64, 0x6c, 0x56,
	0xcd, 0x97, 0x11, 0x9c, 0x62, 0x5d, 0xb5, 0xba, 0x55, 0x31, 0xd1, 0x34, 0x15, 0xac, 0xd9, 0x93,
	0xba, 0x93, 0x92, 0x27, 0x17, 0x8d, 0x4e, 0x88, 0x47, 0xe9, 0x57, 0xe1, 0xed, 0xc7, 0xbd, 0xb7,
	0x72, 0x3c, 0xf7, 0xc2, 0xd1, 0x13, 0x6b, 0xcd, 0x2e, 0xd4, 0xed, 0x2d, 0x19, 0xa0, 0x0b, 0x35,
	0x17, 0xbe, 0x66, 0x9d, 0x55, 0xd3, 0xb0, 0xf7, 0xde, 0xc3, 0x6d, 0x7c, 0xcd, 0x22, 0x70, 0x59,
	0x4e, 0x3d, 0x74, 0x57, 0x68, 0x25, 0xe2, 0x3e, 0x35, 0x92, 0x3d, 0xe5, 0x4c, 0xa2, 0x95, 0xc0,
	0x46, 0x13, 0x06, 0x27, 0x7c, 0xd4, 0x9a, 0x4c, 0xc4, 0x83, 0xd0, 0x68, 0x6a, 0xf0, 0x2a, 0x13,
	0xec, 0xf7, 0x11, 0x1c, 0xbb, 0xf9, 0x38, 0xcd, 0x85, 0x12, 0x53, 0x8e, 0x13, 0x18, 0x6a, 0x1e,
	0x6c, 0xb8, 0xcb, 0x1f, 0xba, 0xf9, 0xf8, 0xa3, 0x8a, 0x11, 0xdd, 0xf8, 0x0d, 0x1c, 0xd0, 0xdb,
	0x37, 0x75, 0xcb, 0x22, 0x23, 0x17, 0x0e, 0x37, 0xec, 0x42, 0x9f, 0xf8, 0x46, 0xcb, 0x22, 0x43,
	0xfe, 0xbf, 0x44, 0xd5, 0x74, 0x1c, 0x82, 0x95, 0xd5, 0x83, 0xd4, 0xd1, 0x86, 0xfd, 0x38, 0xa9,
	0x69, 0xaf, 0xb2, 0xac, 0x7a, 0x4c, 0x6b, 0x38, 0xa0, 0x0e, 0xb0, 0x10, 0x85, 0xaf, 0xa7, 0xdb,
	0x72, 0x55, 0xcd, 0x52, 0x7b, 0xb4, 0xbe, 0xcc, 0x31, 0xcf, 0x41, 0x34, 0x13, 0xce, 0xf1, 0xa9,
	0x28, 0xc7, 0xdb, 0x3e, 0x81, 0x2f, 0x02, 0x86, 0xb3, 0x1d, 0x4e, 0xd4, 0xa9, 0xf3, 0x7c, 0x66,
	0xaa, 0xd9, 0x0e, 0x91, 0x11, 0x02, 0xc3, 0x3f, 0x97, 0x13, 0x45, 0xf8, 0x10, 0x0e, 0x94, 0x4b,
	0xe8, 0x97, 0x8b, 0xf9, 0x64, 0x22, 0x6c, 0xf9, 0xea, 0xfc, 0x74, 0xad, 0x0d, 0xae, 0xde, 0x5e,
	0xd2, 0xa3, 0xdf, 0x1f, 0x12, 0xd5, 0xf0, 0xef, 0x1d, 0x60, 0x77, 0xff, 0xaa, 0xc3, 0xa7, 0x79,
	0x33, 0x31, 0xe7, 0x9b, 0x7e, 0x9a, 0x9b, 0x3a, 0x1f, 0xec, 0x5d, 0x38, 0x68, 0xfc, 0xc9, 0x97,
	0xde, 0xd8, 0xf8, 0x71, 0x88, 0xf1, 0xed, 0xff, 0x7c, 0x9f, 0x59, 0x1c, 0x00, 0x90, 0x39, 0xd3,
	0x85, 0xb7, 0x5a, 0x29, 0x91, 0xc7, 0x4f, 0xe8, 0xa6, 0x19, 0xdc, 0xf8, 0xec, 0x69, 0x0d, 0xb2,
	0xbf, 0x45, 0x70, 0xbf, 0x64, 0x5e, 0xbd, 0x99, 0xbf, 0x4f, 0x41, 0xfe, 0xc5, 0xba, 0x6f, 0xe6,
	0x06, 0x96, 0x9c, 0x86, 0xc5, 0xca, 0x0d, 0xfd, 0xd7, 0x08, 0x1e, 0x18, 0x2b, 0x17, 0x78, 0x04,
	0x57, 0x9d, 0xfa, 0x60, 0xfd, 0xbd, 0xae, 0x2e, 0xb3, 0xe4, 0x5e, 0xc9, 0xba, 0xe2, 0xcf, 0x29,
	0xec, 0x64, 0x5a, 0x69, 0x1b, 0xff, 0x20, 0xbc, 0xb7, 0x68, 0x31, 0xde, 0xa5, 0x7f, 0x84, 0x1f,
	0xff, 0x3f, 0x00, 0x00, 0xff, 0xff, 0x80, 0x24, 0xe8, 0x83, 0x2d, 0x16, 0x00, 0x00,
}
