/*
Copyright 2019 Cisco Systems

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: pce_sr_mpls_path_list_bag.proto

package cisco_ios_xr_infra_xtc_oper_pce_cspf_sr_mpls_cspf_sr_mpls_paths_cspf_sr_mpls_path

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type PceSrMplsPathListBag_KEYS struct {
	Af                   uint32   `protobuf:"varint,1,opt,name=af,proto3" json:"af,omitempty"`
	Source1              string   `protobuf:"bytes,2,opt,name=source1,proto3" json:"source1,omitempty"`
	Destination1         string   `protobuf:"bytes,3,opt,name=destination1,proto3" json:"destination1,omitempty"`
	MetricType           uint32   `protobuf:"varint,4,opt,name=metric_type,json=metricType,proto3" json:"metric_type,omitempty"`
	Source2              string   `protobuf:"bytes,5,opt,name=source2,proto3" json:"source2,omitempty"`
	Destination2         string   `protobuf:"bytes,6,opt,name=destination2,proto3" json:"destination2,omitempty"`
	DisjointLevel        uint32   `protobuf:"varint,7,opt,name=disjoint_level,json=disjointLevel,proto3" json:"disjoint_level,omitempty"`
	DisjointStrict       uint32   `protobuf:"varint,8,opt,name=disjoint_strict,json=disjointStrict,proto3" json:"disjoint_strict,omitempty"`
	ShortestPath         uint32   `protobuf:"varint,9,opt,name=shortest_path,json=shortestPath,proto3" json:"shortest_path,omitempty"`
	Msd1                 uint32   `protobuf:"varint,10,opt,name=msd1,proto3" json:"msd1,omitempty"`
	Msd2                 uint32   `protobuf:"varint,11,opt,name=msd2,proto3" json:"msd2,omitempty"`
	RelativeMargin       uint32   `protobuf:"varint,12,opt,name=relative_margin,json=relativeMargin,proto3" json:"relative_margin,omitempty"`
	AbsoluteMargin       uint32   `protobuf:"varint,13,opt,name=absolute_margin,json=absoluteMargin,proto3" json:"absolute_margin,omitempty"`
	AffinityIncludeAll   uint32   `protobuf:"varint,14,opt,name=affinity_include_all,json=affinityIncludeAll,proto3" json:"affinity_include_all,omitempty"`
	AffinityIncludeAny   uint32   `protobuf:"varint,15,opt,name=affinity_include_any,json=affinityIncludeAny,proto3" json:"affinity_include_any,omitempty"`
	AffinityExcludeAny   uint32   `protobuf:"varint,16,opt,name=affinity_exclude_any,json=affinityExcludeAny,proto3" json:"affinity_exclude_any,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PceSrMplsPathListBag_KEYS) Reset()         { *m = PceSrMplsPathListBag_KEYS{} }
func (m *PceSrMplsPathListBag_KEYS) String() string { return proto.CompactTextString(m) }
func (*PceSrMplsPathListBag_KEYS) ProtoMessage()    {}
func (*PceSrMplsPathListBag_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_08180a29706d4967, []int{0}
}

func (m *PceSrMplsPathListBag_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PceSrMplsPathListBag_KEYS.Unmarshal(m, b)
}
func (m *PceSrMplsPathListBag_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PceSrMplsPathListBag_KEYS.Marshal(b, m, deterministic)
}
func (m *PceSrMplsPathListBag_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PceSrMplsPathListBag_KEYS.Merge(m, src)
}
func (m *PceSrMplsPathListBag_KEYS) XXX_Size() int {
	return xxx_messageInfo_PceSrMplsPathListBag_KEYS.Size(m)
}
func (m *PceSrMplsPathListBag_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_PceSrMplsPathListBag_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_PceSrMplsPathListBag_KEYS proto.InternalMessageInfo

func (m *PceSrMplsPathListBag_KEYS) GetAf() uint32 {
	if m != nil {
		return m.Af
	}
	return 0
}

func (m *PceSrMplsPathListBag_KEYS) GetSource1() string {
	if m != nil {
		return m.Source1
	}
	return ""
}

func (m *PceSrMplsPathListBag_KEYS) GetDestination1() string {
	if m != nil {
		return m.Destination1
	}
	return ""
}

func (m *PceSrMplsPathListBag_KEYS) GetMetricType() uint32 {
	if m != nil {
		return m.MetricType
	}
	return 0
}

func (m *PceSrMplsPathListBag_KEYS) GetSource2() string {
	if m != nil {
		return m.Source2
	}
	return ""
}

func (m *PceSrMplsPathListBag_KEYS) GetDestination2() string {
	if m != nil {
		return m.Destination2
	}
	return ""
}

func (m *PceSrMplsPathListBag_KEYS) GetDisjointLevel() uint32 {
	if m != nil {
		return m.DisjointLevel
	}
	return 0
}

func (m *PceSrMplsPathListBag_KEYS) GetDisjointStrict() uint32 {
	if m != nil {
		return m.DisjointStrict
	}
	return 0
}

func (m *PceSrMplsPathListBag_KEYS) GetShortestPath() uint32 {
	if m != nil {
		return m.ShortestPath
	}
	return 0
}

func (m *PceSrMplsPathListBag_KEYS) GetMsd1() uint32 {
	if m != nil {
		return m.Msd1
	}
	return 0
}

func (m *PceSrMplsPathListBag_KEYS) GetMsd2() uint32 {
	if m != nil {
		return m.Msd2
	}
	return 0
}

func (m *PceSrMplsPathListBag_KEYS) GetRelativeMargin() uint32 {
	if m != nil {
		return m.RelativeMargin
	}
	return 0
}

func (m *PceSrMplsPathListBag_KEYS) GetAbsoluteMargin() uint32 {
	if m != nil {
		return m.AbsoluteMargin
	}
	return 0
}

func (m *PceSrMplsPathListBag_KEYS) GetAffinityIncludeAll() uint32 {
	if m != nil {
		return m.AffinityIncludeAll
	}
	return 0
}

func (m *PceSrMplsPathListBag_KEYS) GetAffinityIncludeAny() uint32 {
	if m != nil {
		return m.AffinityIncludeAny
	}
	return 0
}

func (m *PceSrMplsPathListBag_KEYS) GetAffinityExcludeAny() uint32 {
	if m != nil {
		return m.AffinityExcludeAny
	}
	return 0
}

type PceIpAddrType struct {
	AfName               string   `protobuf:"bytes,1,opt,name=af_name,json=afName,proto3" json:"af_name,omitempty"`
	Ipv4                 string   `protobuf:"bytes,2,opt,name=ipv4,proto3" json:"ipv4,omitempty"`
	Ipv6                 string   `protobuf:"bytes,3,opt,name=ipv6,proto3" json:"ipv6,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PceIpAddrType) Reset()         { *m = PceIpAddrType{} }
func (m *PceIpAddrType) String() string { return proto.CompactTextString(m) }
func (*PceIpAddrType) ProtoMessage()    {}
func (*PceIpAddrType) Descriptor() ([]byte, []int) {
	return fileDescriptor_08180a29706d4967, []int{1}
}

func (m *PceIpAddrType) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PceIpAddrType.Unmarshal(m, b)
}
func (m *PceIpAddrType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PceIpAddrType.Marshal(b, m, deterministic)
}
func (m *PceIpAddrType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PceIpAddrType.Merge(m, src)
}
func (m *PceIpAddrType) XXX_Size() int {
	return xxx_messageInfo_PceIpAddrType.Size(m)
}
func (m *PceIpAddrType) XXX_DiscardUnknown() {
	xxx_messageInfo_PceIpAddrType.DiscardUnknown(m)
}

var xxx_messageInfo_PceIpAddrType proto.InternalMessageInfo

func (m *PceIpAddrType) GetAfName() string {
	if m != nil {
		return m.AfName
	}
	return ""
}

func (m *PceIpAddrType) GetIpv4() string {
	if m != nil {
		return m.Ipv4
	}
	return ""
}

func (m *PceIpAddrType) GetIpv6() string {
	if m != nil {
		return m.Ipv6
	}
	return ""
}

type PceSrHopType struct {
	SidType              string         `protobuf:"bytes,1,opt,name=sid_type,json=sidType,proto3" json:"sid_type,omitempty"`
	MplsLabel            uint32         `protobuf:"varint,2,opt,name=mpls_label,json=mplsLabel,proto3" json:"mpls_label,omitempty"`
	LocalAddr            *PceIpAddrType `protobuf:"bytes,3,opt,name=local_addr,json=localAddr,proto3" json:"local_addr,omitempty"`
	RemoteAddr           *PceIpAddrType `protobuf:"bytes,4,opt,name=remote_addr,json=remoteAddr,proto3" json:"remote_addr,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *PceSrHopType) Reset()         { *m = PceSrHopType{} }
func (m *PceSrHopType) String() string { return proto.CompactTextString(m) }
func (*PceSrHopType) ProtoMessage()    {}
func (*PceSrHopType) Descriptor() ([]byte, []int) {
	return fileDescriptor_08180a29706d4967, []int{2}
}

func (m *PceSrHopType) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PceSrHopType.Unmarshal(m, b)
}
func (m *PceSrHopType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PceSrHopType.Marshal(b, m, deterministic)
}
func (m *PceSrHopType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PceSrHopType.Merge(m, src)
}
func (m *PceSrHopType) XXX_Size() int {
	return xxx_messageInfo_PceSrHopType.Size(m)
}
func (m *PceSrHopType) XXX_DiscardUnknown() {
	xxx_messageInfo_PceSrHopType.DiscardUnknown(m)
}

var xxx_messageInfo_PceSrHopType proto.InternalMessageInfo

func (m *PceSrHopType) GetSidType() string {
	if m != nil {
		return m.SidType
	}
	return ""
}

func (m *PceSrHopType) GetMplsLabel() uint32 {
	if m != nil {
		return m.MplsLabel
	}
	return 0
}

func (m *PceSrHopType) GetLocalAddr() *PceIpAddrType {
	if m != nil {
		return m.LocalAddr
	}
	return nil
}

func (m *PceSrHopType) GetRemoteAddr() *PceIpAddrType {
	if m != nil {
		return m.RemoteAddr
	}
	return nil
}

type PceSrMplsPathBag struct {
	Hops                 []*PceSrHopType `protobuf:"bytes,1,rep,name=hops,proto3" json:"hops,omitempty"`
	Cost                 uint64          `protobuf:"varint,2,opt,name=cost,proto3" json:"cost,omitempty"`
	Source               *PceIpAddrType  `protobuf:"bytes,3,opt,name=source,proto3" json:"source,omitempty"`
	Destination          *PceIpAddrType  `protobuf:"bytes,4,opt,name=destination,proto3" json:"destination,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *PceSrMplsPathBag) Reset()         { *m = PceSrMplsPathBag{} }
func (m *PceSrMplsPathBag) String() string { return proto.CompactTextString(m) }
func (*PceSrMplsPathBag) ProtoMessage()    {}
func (*PceSrMplsPathBag) Descriptor() ([]byte, []int) {
	return fileDescriptor_08180a29706d4967, []int{3}
}

func (m *PceSrMplsPathBag) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PceSrMplsPathBag.Unmarshal(m, b)
}
func (m *PceSrMplsPathBag) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PceSrMplsPathBag.Marshal(b, m, deterministic)
}
func (m *PceSrMplsPathBag) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PceSrMplsPathBag.Merge(m, src)
}
func (m *PceSrMplsPathBag) XXX_Size() int {
	return xxx_messageInfo_PceSrMplsPathBag.Size(m)
}
func (m *PceSrMplsPathBag) XXX_DiscardUnknown() {
	xxx_messageInfo_PceSrMplsPathBag.DiscardUnknown(m)
}

var xxx_messageInfo_PceSrMplsPathBag proto.InternalMessageInfo

func (m *PceSrMplsPathBag) GetHops() []*PceSrHopType {
	if m != nil {
		return m.Hops
	}
	return nil
}

func (m *PceSrMplsPathBag) GetCost() uint64 {
	if m != nil {
		return m.Cost
	}
	return 0
}

func (m *PceSrMplsPathBag) GetSource() *PceIpAddrType {
	if m != nil {
		return m.Source
	}
	return nil
}

func (m *PceSrMplsPathBag) GetDestination() *PceIpAddrType {
	if m != nil {
		return m.Destination
	}
	return nil
}

type PceSrMplsPathListBag struct {
	OutputPath           []*PceSrMplsPathBag `protobuf:"bytes,50,rep,name=output_path,json=outputPath,proto3" json:"output_path,omitempty"`
	CspfResult           string              `protobuf:"bytes,51,opt,name=cspf_result,json=cspfResult,proto3" json:"cspf_result,omitempty"`
	IterationsDone       uint32              `protobuf:"varint,52,opt,name=iterations_done,json=iterationsDone,proto3" json:"iterations_done,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *PceSrMplsPathListBag) Reset()         { *m = PceSrMplsPathListBag{} }
func (m *PceSrMplsPathListBag) String() string { return proto.CompactTextString(m) }
func (*PceSrMplsPathListBag) ProtoMessage()    {}
func (*PceSrMplsPathListBag) Descriptor() ([]byte, []int) {
	return fileDescriptor_08180a29706d4967, []int{4}
}

func (m *PceSrMplsPathListBag) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PceSrMplsPathListBag.Unmarshal(m, b)
}
func (m *PceSrMplsPathListBag) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PceSrMplsPathListBag.Marshal(b, m, deterministic)
}
func (m *PceSrMplsPathListBag) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PceSrMplsPathListBag.Merge(m, src)
}
func (m *PceSrMplsPathListBag) XXX_Size() int {
	return xxx_messageInfo_PceSrMplsPathListBag.Size(m)
}
func (m *PceSrMplsPathListBag) XXX_DiscardUnknown() {
	xxx_messageInfo_PceSrMplsPathListBag.DiscardUnknown(m)
}

var xxx_messageInfo_PceSrMplsPathListBag proto.InternalMessageInfo

func (m *PceSrMplsPathListBag) GetOutputPath() []*PceSrMplsPathBag {
	if m != nil {
		return m.OutputPath
	}
	return nil
}

func (m *PceSrMplsPathListBag) GetCspfResult() string {
	if m != nil {
		return m.CspfResult
	}
	return ""
}

func (m *PceSrMplsPathListBag) GetIterationsDone() uint32 {
	if m != nil {
		return m.IterationsDone
	}
	return 0
}

func init() {
	proto.RegisterType((*PceSrMplsPathListBag_KEYS)(nil), "cisco_ios_xr_infra_xtc_oper.pce.cspf_sr_mpls.cspf_sr_mpls_paths.cspf_sr_mpls_path.pce_sr_mpls_path_list_bag_KEYS")
	proto.RegisterType((*PceIpAddrType)(nil), "cisco_ios_xr_infra_xtc_oper.pce.cspf_sr_mpls.cspf_sr_mpls_paths.cspf_sr_mpls_path.pce_ip_addr_type")
	proto.RegisterType((*PceSrHopType)(nil), "cisco_ios_xr_infra_xtc_oper.pce.cspf_sr_mpls.cspf_sr_mpls_paths.cspf_sr_mpls_path.pce_sr_hop_type")
	proto.RegisterType((*PceSrMplsPathBag)(nil), "cisco_ios_xr_infra_xtc_oper.pce.cspf_sr_mpls.cspf_sr_mpls_paths.cspf_sr_mpls_path.pce_sr_mpls_path_bag")
	proto.RegisterType((*PceSrMplsPathListBag)(nil), "cisco_ios_xr_infra_xtc_oper.pce.cspf_sr_mpls.cspf_sr_mpls_paths.cspf_sr_mpls_path.pce_sr_mpls_path_list_bag")
}

func init() { proto.RegisterFile("pce_sr_mpls_path_list_bag.proto", fileDescriptor_08180a29706d4967) }

var fileDescriptor_08180a29706d4967 = []byte{
	// 654 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x95, 0xcf, 0x6e, 0xd3, 0x40,
	0x10, 0xc6, 0xe5, 0x34, 0xa4, 0xcd, 0xb8, 0x69, 0xab, 0x55, 0x25, 0xb6, 0x07, 0x68, 0x15, 0x84,
	0xe8, 0x29, 0xa2, 0x6e, 0xc5, 0xbd, 0x12, 0x3d, 0x20, 0x0a, 0x02, 0x97, 0x0b, 0xa7, 0xd5, 0xc6,
	0x5e, 0x27, 0x8b, 0xd6, 0xde, 0xd5, 0xee, 0x26, 0x4a, 0xc4, 0x0d, 0x81, 0xc4, 0x9b, 0xf0, 0x3e,
	0x5c, 0x78, 0x0d, 0x1e, 0x01, 0x79, 0x6c, 0xa7, 0x49, 0xff, 0xdc, 0x68, 0x6e, 0xeb, 0xdf, 0xce,
	0xcc, 0x37, 0xf1, 0x7c, 0x9e, 0xc0, 0xa1, 0x49, 0x04, 0x73, 0x96, 0xe5, 0x46, 0x39, 0x66, 0xb8,
	0x1f, 0x33, 0x25, 0x9d, 0x67, 0x43, 0x3e, 0x1a, 0x18, 0xab, 0xbd, 0x26, 0x1f, 0x13, 0xe9, 0x12,
	0xcd, 0xa4, 0x76, 0x6c, 0x66, 0x99, 0x2c, 0x32, 0xcb, 0xd9, 0xcc, 0x27, 0x4c, 0x1b, 0x61, 0x07,
	0x26, 0x11, 0x83, 0xc4, 0x99, 0xac, 0xa9, 0xb0, 0xf2, 0x80, 0xe5, 0xee, 0x40, 0xfd, 0xdf, 0x6d,
	0x78, 0x7a, 0xaf, 0x2c, 0x7b, 0x7b, 0xf1, 0xf9, 0x8a, 0xec, 0x40, 0x8b, 0x67, 0x34, 0x38, 0x0a,
	0x8e, 0x7b, 0x71, 0x8b, 0x67, 0x84, 0xc2, 0xa6, 0xd3, 0x13, 0x9b, 0x88, 0x13, 0xda, 0x3a, 0x0a,
	0x8e, 0xbb, 0x71, 0xf3, 0x48, 0xfa, 0xb0, 0x9d, 0x0a, 0xe7, 0x65, 0xc1, 0xbd, 0xd4, 0xc5, 0x09,
	0xdd, 0xc0, 0xeb, 0x15, 0x46, 0x0e, 0x21, 0xcc, 0x85, 0xb7, 0x32, 0x61, 0x7e, 0x6e, 0x04, 0x6d,
	0x63, 0x59, 0xa8, 0xd0, 0xa7, 0xb9, 0x11, 0xd7, 0xe5, 0x23, 0xfa, 0x68, 0xb9, 0x7c, 0x74, 0xa3,
	0x7c, 0x44, 0x3b, 0xb7, 0xca, 0x47, 0xe4, 0x39, 0xec, 0xa4, 0xd2, 0x7d, 0xd1, 0xb2, 0xf0, 0x4c,
	0x89, 0xa9, 0x50, 0x74, 0x13, 0x15, 0x7a, 0x0d, 0xbd, 0x2c, 0x21, 0x79, 0x01, 0xbb, 0x8b, 0x30,
	0x57, 0x4a, 0x7b, 0xba, 0x85, 0x71, 0x8b, 0xec, 0x2b, 0xa4, 0xe4, 0x19, 0xf4, 0xdc, 0x58, 0x5b,
	0x2f, 0x9c, 0xc7, 0x77, 0x43, 0xbb, 0x18, 0xb6, 0xdd, 0xc0, 0x0f, 0xdc, 0x8f, 0x09, 0x81, 0x76,
	0xee, 0xd2, 0x13, 0x0a, 0x78, 0x87, 0xe7, 0x9a, 0x45, 0x34, 0x5c, 0xb0, 0xa8, 0x54, 0xb5, 0x42,
	0x71, 0x2f, 0xa7, 0x82, 0xe5, 0xdc, 0x8e, 0x64, 0x41, 0xb7, 0x2b, 0xd5, 0x06, 0xbf, 0x43, 0x5a,
	0x06, 0xf2, 0xa1, 0xd3, 0x6a, 0xe2, 0x17, 0x81, 0xbd, 0x2a, 0xb0, 0xc1, 0x75, 0xe0, 0x4b, 0xd8,
	0xe7, 0x59, 0x26, 0x0b, 0xe9, 0xe7, 0x4c, 0x16, 0x89, 0x9a, 0xa4, 0x82, 0x71, 0xa5, 0xe8, 0x0e,
	0x46, 0x93, 0xe6, 0xee, 0x4d, 0x75, 0x75, 0xae, 0xd4, 0xdd, 0x19, 0xc5, 0x9c, 0xee, 0xde, 0x9d,
	0x51, 0xcc, 0x57, 0x32, 0xc4, 0xec, 0x3a, 0x63, 0x6f, 0x35, 0xe3, 0x62, 0xd6, 0x64, 0xf4, 0xaf,
	0x60, 0xaf, 0xf4, 0x94, 0x34, 0x8c, 0xa7, 0xa9, 0xc5, 0x41, 0x93, 0xc7, 0xb0, 0xc9, 0x33, 0x56,
	0xf0, 0x5c, 0xa0, 0x95, 0xba, 0x71, 0x87, 0x67, 0xef, 0x79, 0x2e, 0xca, 0x17, 0x25, 0xcd, 0xf4,
	0xac, 0xf6, 0x12, 0x9e, 0x6b, 0xf6, 0xaa, 0x36, 0x10, 0x9e, 0xfb, 0x7f, 0x5a, 0xb0, 0x5b, 0x3b,
	0x75, 0xac, 0x4d, 0x55, 0xf4, 0x00, 0xb6, 0x9c, 0x4c, 0x2b, 0x27, 0x05, 0xb5, 0x59, 0x64, 0x8a,
	0x36, 0x7a, 0x02, 0x80, 0x86, 0x56, 0x7c, 0x28, 0x14, 0x16, 0xef, 0xc5, 0xdd, 0x92, 0x5c, 0x96,
	0x80, 0x7c, 0x0b, 0x00, 0x94, 0x4e, 0xb8, 0xc2, 0x16, 0x51, 0x28, 0x8c, 0x92, 0xc1, 0x7f, 0xff,
	0xc0, 0x06, 0x37, 0x5f, 0x44, 0xdc, 0x45, 0xd9, 0xf3, 0x34, 0xb5, 0xe4, 0x7b, 0x00, 0xa1, 0x15,
	0xb9, 0xf6, 0xa2, 0xea, 0xa2, 0xbd, 0xbe, 0x2e, 0xa0, 0xd2, 0x2d, 0xdb, 0xe8, 0xff, 0xda, 0x80,
	0xfd, 0x5b, 0x3b, 0x60, 0xc8, 0x47, 0x64, 0x0a, 0xed, 0xb1, 0x36, 0x8e, 0x06, 0x47, 0x1b, 0xc7,
	0x61, 0x34, 0x7c, 0xa0, 0xbe, 0x96, 0x06, 0x1a, 0xa3, 0x5e, 0x39, 0xfe, 0x44, 0x3b, 0x8f, 0x53,
	0x6b, 0xc7, 0x78, 0x26, 0x5f, 0xa1, 0x53, 0xed, 0x81, 0x75, 0xce, 0xaa, 0x96, 0x24, 0x3f, 0x02,
	0x08, 0x97, 0xd6, 0xcc, 0x3a, 0x07, 0xb5, 0xac, 0xdb, 0xff, 0x1b, 0xc0, 0xc1, 0xbd, 0xdb, 0x9a,
	0xfc, 0x0c, 0x20, 0xd4, 0x13, 0x6f, 0x26, 0xf5, 0xaa, 0x8a, 0x70, 0x6c, 0xa3, 0x87, 0x1b, 0xdb,
	0x8a, 0x5b, 0x62, 0xa8, 0xb4, 0x71, 0x23, 0x1e, 0x42, 0x88, 0x59, 0x56, 0xb8, 0x89, 0xf2, 0xf4,
	0x14, 0xbf, 0x4d, 0x28, 0x51, 0x8c, 0xa4, 0xdc, 0x70, 0xd2, 0x0b, 0x8b, 0x3f, 0xcb, 0xb1, 0x54,
	0x17, 0x82, 0x9e, 0x55, 0x1b, 0xee, 0x1a, 0xbf, 0xd6, 0x85, 0x18, 0x76, 0xf0, 0xaf, 0xef, 0xf4,
	0x5f, 0x00, 0x00, 0x00, 0xff, 0xff, 0xc8, 0xe1, 0x2c, 0x02, 0x1d, 0x07, 0x00, 0x00,
}
