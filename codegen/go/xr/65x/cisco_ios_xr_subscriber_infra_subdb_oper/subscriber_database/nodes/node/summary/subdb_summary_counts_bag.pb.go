/*
Copyright 2019 Cisco Systems

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: subdb_summary_counts_bag.proto

package cisco_ios_xr_subscriber_infra_subdb_oper_subscriber_database_nodes_node_summary

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type SubdbSummaryCountsBag_KEYS struct {
	NodeName             string   `protobuf:"bytes,1,opt,name=node_name,json=nodeName,proto3" json:"node_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SubdbSummaryCountsBag_KEYS) Reset()         { *m = SubdbSummaryCountsBag_KEYS{} }
func (m *SubdbSummaryCountsBag_KEYS) String() string { return proto.CompactTextString(m) }
func (*SubdbSummaryCountsBag_KEYS) ProtoMessage()    {}
func (*SubdbSummaryCountsBag_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_f30212ba9ecac079, []int{0}
}

func (m *SubdbSummaryCountsBag_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubdbSummaryCountsBag_KEYS.Unmarshal(m, b)
}
func (m *SubdbSummaryCountsBag_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubdbSummaryCountsBag_KEYS.Marshal(b, m, deterministic)
}
func (m *SubdbSummaryCountsBag_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubdbSummaryCountsBag_KEYS.Merge(m, src)
}
func (m *SubdbSummaryCountsBag_KEYS) XXX_Size() int {
	return xxx_messageInfo_SubdbSummaryCountsBag_KEYS.Size(m)
}
func (m *SubdbSummaryCountsBag_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_SubdbSummaryCountsBag_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_SubdbSummaryCountsBag_KEYS proto.InternalMessageInfo

func (m *SubdbSummaryCountsBag_KEYS) GetNodeName() string {
	if m != nil {
		return m.NodeName
	}
	return ""
}

type SubdbSummaryCountsBag struct {
	SubdbObjCountsByType       []uint32 `protobuf:"varint,50,rep,packed,name=subdb_obj_counts_by_type,json=subdbObjCountsByType,proto3" json:"subdb_obj_counts_by_type,omitempty"`
	AssocDbEntries             uint32   `protobuf:"varint,51,opt,name=assoc_db_entries,json=assocDbEntries,proto3" json:"assoc_db_entries,omitempty"`
	AssocDbAssociations        uint32   `protobuf:"varint,52,opt,name=assoc_db_associations,json=assocDbAssociations,proto3" json:"assoc_db_associations,omitempty"`
	DerivedDbEntries           uint32   `protobuf:"varint,53,opt,name=derived_db_entries,json=derivedDbEntries,proto3" json:"derived_db_entries,omitempty"`
	ConfigDbEntries            uint32   `protobuf:"varint,54,opt,name=config_db_entries,json=configDbEntries,proto3" json:"config_db_entries,omitempty"`
	InterfaceDbEntries         uint32   `protobuf:"varint,55,opt,name=interface_db_entries,json=interfaceDbEntries,proto3" json:"interface_db_entries,omitempty"`
	NumIpsubDhcp               uint32   `protobuf:"varint,56,opt,name=num_ipsub_dhcp,json=numIpsubDhcp,proto3" json:"num_ipsub_dhcp,omitempty"`
	NumIpsubInband             uint32   `protobuf:"varint,57,opt,name=num_ipsub_inband,json=numIpsubInband,proto3" json:"num_ipsub_inband,omitempty"`
	NumPppoe                   uint32   `protobuf:"varint,58,opt,name=num_pppoe,json=numPppoe,proto3" json:"num_pppoe,omitempty"`
	NumSubscribersInState      []uint32 `protobuf:"varint,59,rep,packed,name=num_subscribers_in_state,json=numSubscribersInState,proto3" json:"num_subscribers_in_state,omitempty"`
	NumTransitionsThroughState []uint32 `protobuf:"varint,60,rep,packed,name=num_transitions_through_state,json=numTransitionsThroughState,proto3" json:"num_transitions_through_state,omitempty"`
	XXX_NoUnkeyedLiteral       struct{} `json:"-"`
	XXX_unrecognized           []byte   `json:"-"`
	XXX_sizecache              int32    `json:"-"`
}

func (m *SubdbSummaryCountsBag) Reset()         { *m = SubdbSummaryCountsBag{} }
func (m *SubdbSummaryCountsBag) String() string { return proto.CompactTextString(m) }
func (*SubdbSummaryCountsBag) ProtoMessage()    {}
func (*SubdbSummaryCountsBag) Descriptor() ([]byte, []int) {
	return fileDescriptor_f30212ba9ecac079, []int{1}
}

func (m *SubdbSummaryCountsBag) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubdbSummaryCountsBag.Unmarshal(m, b)
}
func (m *SubdbSummaryCountsBag) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubdbSummaryCountsBag.Marshal(b, m, deterministic)
}
func (m *SubdbSummaryCountsBag) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubdbSummaryCountsBag.Merge(m, src)
}
func (m *SubdbSummaryCountsBag) XXX_Size() int {
	return xxx_messageInfo_SubdbSummaryCountsBag.Size(m)
}
func (m *SubdbSummaryCountsBag) XXX_DiscardUnknown() {
	xxx_messageInfo_SubdbSummaryCountsBag.DiscardUnknown(m)
}

var xxx_messageInfo_SubdbSummaryCountsBag proto.InternalMessageInfo

func (m *SubdbSummaryCountsBag) GetSubdbObjCountsByType() []uint32 {
	if m != nil {
		return m.SubdbObjCountsByType
	}
	return nil
}

func (m *SubdbSummaryCountsBag) GetAssocDbEntries() uint32 {
	if m != nil {
		return m.AssocDbEntries
	}
	return 0
}

func (m *SubdbSummaryCountsBag) GetAssocDbAssociations() uint32 {
	if m != nil {
		return m.AssocDbAssociations
	}
	return 0
}

func (m *SubdbSummaryCountsBag) GetDerivedDbEntries() uint32 {
	if m != nil {
		return m.DerivedDbEntries
	}
	return 0
}

func (m *SubdbSummaryCountsBag) GetConfigDbEntries() uint32 {
	if m != nil {
		return m.ConfigDbEntries
	}
	return 0
}

func (m *SubdbSummaryCountsBag) GetInterfaceDbEntries() uint32 {
	if m != nil {
		return m.InterfaceDbEntries
	}
	return 0
}

func (m *SubdbSummaryCountsBag) GetNumIpsubDhcp() uint32 {
	if m != nil {
		return m.NumIpsubDhcp
	}
	return 0
}

func (m *SubdbSummaryCountsBag) GetNumIpsubInband() uint32 {
	if m != nil {
		return m.NumIpsubInband
	}
	return 0
}

func (m *SubdbSummaryCountsBag) GetNumPppoe() uint32 {
	if m != nil {
		return m.NumPppoe
	}
	return 0
}

func (m *SubdbSummaryCountsBag) GetNumSubscribersInState() []uint32 {
	if m != nil {
		return m.NumSubscribersInState
	}
	return nil
}

func (m *SubdbSummaryCountsBag) GetNumTransitionsThroughState() []uint32 {
	if m != nil {
		return m.NumTransitionsThroughState
	}
	return nil
}

func init() {
	proto.RegisterType((*SubdbSummaryCountsBag_KEYS)(nil), "cisco_ios_xr_subscriber_infra_subdb_oper.subscriber_database.nodes.node.summary.subdb_summary_counts_bag_KEYS")
	proto.RegisterType((*SubdbSummaryCountsBag)(nil), "cisco_ios_xr_subscriber_infra_subdb_oper.subscriber_database.nodes.node.summary.subdb_summary_counts_bag")
}

func init() { proto.RegisterFile("subdb_summary_counts_bag.proto", fileDescriptor_f30212ba9ecac079) }

var fileDescriptor_f30212ba9ecac079 = []byte{
	// 421 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x92, 0x5d, 0x6b, 0x14, 0x31,
	0x14, 0x86, 0x59, 0x14, 0x69, 0x83, 0xad, 0x35, 0xb6, 0x10, 0x94, 0xca, 0x52, 0xbc, 0x58, 0x44,
	0x16, 0x69, 0xb5, 0xf5, 0xa3, 0x37, 0xd5, 0xf6, 0x62, 0x11, 0xac, 0xec, 0xee, 0x8d, 0x57, 0x87,
	0x24, 0x93, 0xdd, 0x4d, 0x21, 0x27, 0x21, 0x1f, 0xe2, 0xfc, 0x20, 0xff, 0xa7, 0xcc, 0x99, 0xe9,
	0xce, 0xdc, 0xf4, 0x66, 0xd9, 0x79, 0x9f, 0xe7, 0xcd, 0x81, 0x93, 0xb0, 0xd7, 0xa9, 0xa8, 0x4a,
	0x41, 0x2a, 0xce, 0xc9, 0x58, 0x83, 0xf6, 0x05, 0x73, 0x02, 0x25, 0xd7, 0xd3, 0x10, 0x7d, 0xf6,
	0xfc, 0x56, 0xdb, 0xa4, 0x3d, 0x58, 0x9f, 0xe0, 0x6f, 0x84, 0x54, 0x54, 0xd2, 0xd1, 0x2a, 0x13,
	0xc1, 0xe2, 0x2a, 0x4a, 0x68, 0xdb, 0x3e, 0x98, 0x38, 0x1d, 0xb0, 0x4a, 0x66, 0xa9, 0x64, 0x32,
	0x53, 0xf4, 0x95, 0x49, 0xf4, 0x3b, 0xed, 0x26, 0x9c, 0x5c, 0xb2, 0xe3, 0x87, 0x46, 0xc2, 0x8f,
	0x9b, 0xdf, 0x0b, 0xfe, 0x8a, 0xed, 0x36, 0x05, 0x40, 0xe9, 0x8c, 0x18, 0x8d, 0x47, 0x93, 0xdd,
	0xf9, 0x4e, 0x13, 0xfc, 0x94, 0xce, 0x9c, 0xfc, 0x7b, 0xcc, 0xc4, 0x43, 0x75, 0x7e, 0x7e, 0xcf,
	0xbc, 0xba, 0xdb, 0xe6, 0x35, 0xe4, 0x3a, 0x18, 0x71, 0x3a, 0x7e, 0x34, 0xd9, 0x9b, 0x1f, 0x12,
	0xbf, 0x55, 0x77, 0xdf, 0x89, 0x7e, 0xab, 0x97, 0x75, 0x30, 0x7c, 0xc2, 0x0e, 0x64, 0x4a, 0x5e,
	0x43, 0xa5, 0xc0, 0x60, 0x8e, 0xd6, 0x24, 0x71, 0x36, 0x1e, 0x4d, 0xf6, 0xe6, 0xfb, 0x94, 0x5f,
	0xab, 0x9b, 0x36, 0xe5, 0xa7, 0xec, 0x68, 0x6b, 0xd2, 0x1f, 0x2b, 0xb3, 0xf5, 0x98, 0xc4, 0x07,
	0xd2, 0x5f, 0x74, 0xfa, 0xd5, 0x00, 0xf1, 0x77, 0x8c, 0x57, 0x26, 0xda, 0x3f, 0xa6, 0x1a, 0x9e,
	0xff, 0x91, 0x0a, 0x07, 0x1d, 0xe9, 0x27, 0xbc, 0x65, 0xcf, 0xb5, 0xc7, 0x95, 0x5d, 0x0f, 0xe5,
	0x73, 0x92, 0x9f, 0xb5, 0xa0, 0x77, 0xdf, 0xb3, 0x43, 0x8b, 0xd9, 0xc4, 0x95, 0xd4, 0x66, 0xa8,
	0x5f, 0x90, 0xce, 0xb7, 0xac, 0x6f, 0xbc, 0x61, 0xfb, 0x58, 0x1c, 0xd8, 0x90, 0x8a, 0x82, 0x6a,
	0xa3, 0x83, 0xf8, 0x44, 0xee, 0x53, 0x2c, 0x6e, 0xd6, 0x84, 0xd7, 0x1b, 0x1d, 0x9a, 0x7d, 0xf4,
	0x96, 0x45, 0x25, 0xb1, 0x12, 0x9f, 0xdb, 0x7d, 0xdc, 0x7b, 0x33, 0x4a, 0xe9, 0xae, 0x8a, 0x83,
	0x10, 0x82, 0x37, 0xe2, 0x0b, 0x29, 0x3b, 0x58, 0xdc, 0xaf, 0xe6, 0x9b, 0x5f, 0x30, 0xd1, 0xc0,
	0xfe, 0x5d, 0x24, 0xb0, 0x08, 0x29, 0xcb, 0x6c, 0xc4, 0x57, 0xba, 0x8e, 0x23, 0x2c, 0x6e, 0xd1,
	0xe3, 0x19, 0x2e, 0x1a, 0xc8, 0xaf, 0xd8, 0x71, 0x53, 0xcc, 0x51, 0x62, 0xb2, 0xb4, 0x44, 0xc8,
	0x9b, 0xe8, 0xcb, 0x7a, 0xd3, 0xb5, 0x2f, 0xa9, 0xfd, 0x12, 0x8b, 0x5b, 0xf6, 0xce, 0xb2, 0x55,
	0xe8, 0x08, 0xf5, 0x84, 0x5e, 0xef, 0xd9, 0xff, 0x00, 0x00, 0x00, 0xff, 0xff, 0x15, 0x5f, 0x57,
	0xc6, 0xdf, 0x02, 0x00, 0x00,
}
