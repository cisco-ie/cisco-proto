/*
Copyright 2019 Cisco Systems

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: subdb_subscriber_obj.proto

package cisco_ios_xr_subscriber_infra_subdb_oper_subscriber_database_nodes_node_session_labels_label

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type SubdbSubscriberObj_KEYS struct {
	NodeName             string   `protobuf:"bytes,1,opt,name=node_name,json=nodeName,proto3" json:"node_name,omitempty"`
	SubscriberLabel      string   `protobuf:"bytes,2,opt,name=subscriber_label,json=subscriberLabel,proto3" json:"subscriber_label,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SubdbSubscriberObj_KEYS) Reset()         { *m = SubdbSubscriberObj_KEYS{} }
func (m *SubdbSubscriberObj_KEYS) String() string { return proto.CompactTextString(m) }
func (*SubdbSubscriberObj_KEYS) ProtoMessage()    {}
func (*SubdbSubscriberObj_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_c56bd1e1ca73e047, []int{0}
}

func (m *SubdbSubscriberObj_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubdbSubscriberObj_KEYS.Unmarshal(m, b)
}
func (m *SubdbSubscriberObj_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubdbSubscriberObj_KEYS.Marshal(b, m, deterministic)
}
func (m *SubdbSubscriberObj_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubdbSubscriberObj_KEYS.Merge(m, src)
}
func (m *SubdbSubscriberObj_KEYS) XXX_Size() int {
	return xxx_messageInfo_SubdbSubscriberObj_KEYS.Size(m)
}
func (m *SubdbSubscriberObj_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_SubdbSubscriberObj_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_SubdbSubscriberObj_KEYS proto.InternalMessageInfo

func (m *SubdbSubscriberObj_KEYS) GetNodeName() string {
	if m != nil {
		return m.NodeName
	}
	return ""
}

func (m *SubdbSubscriberObj_KEYS) GetSubscriberLabel() string {
	if m != nil {
		return m.SubscriberLabel
	}
	return ""
}

type SubdbSubscriberObj struct {
	SessionState         string   `protobuf:"bytes,50,opt,name=session_state,json=sessionState,proto3" json:"session_state,omitempty"`
	ActivateRequestId    uint32   `protobuf:"varint,51,opt,name=activate_request_id,json=activateRequestId,proto3" json:"activate_request_id,omitempty"`
	TransactionId        int32    `protobuf:"zigzag32,52,opt,name=transaction_id,json=transactionId,proto3" json:"transaction_id,omitempty"`
	ProduceDoneRequestId uint32   `protobuf:"varint,53,opt,name=produce_done_request_id,json=produceDoneRequestId,proto3" json:"produce_done_request_id,omitempty"`
	DestroyReqReceived   bool     `protobuf:"varint,54,opt,name=destroy_req_received,json=destroyReqReceived,proto3" json:"destroy_req_received,omitempty"`
	DestroyRequestId     uint32   `protobuf:"varint,55,opt,name=destroy_request_id,json=destroyRequestId,proto3" json:"destroy_request_id,omitempty"`
	IsConfigChanged      bool     `protobuf:"varint,56,opt,name=is_config_changed,json=isConfigChanged,proto3" json:"is_config_changed,omitempty"`
	IsCreatorGone        bool     `protobuf:"varint,57,opt,name=is_creator_gone,json=isCreatorGone,proto3" json:"is_creator_gone,omitempty"`
	IsDeleteNotifyDone   bool     `protobuf:"varint,58,opt,name=is_delete_notify_done,json=isDeleteNotifyDone,proto3" json:"is_delete_notify_done,omitempty"`
	AddModifyDone        bool     `protobuf:"varint,59,opt,name=add_modify_done,json=addModifyDone,proto3" json:"add_modify_done,omitempty"`
	IsRollbackNeeded     bool     `protobuf:"varint,60,opt,name=is_rollback_needed,json=isRollbackNeeded,proto3" json:"is_rollback_needed,omitempty"`
	IsRollbackInProgress bool     `protobuf:"varint,61,opt,name=is_rollback_in_progress,json=isRollbackInProgress,proto3" json:"is_rollback_in_progress,omitempty"`
	IsServerRestartApply bool     `protobuf:"varint,62,opt,name=is_server_restart_apply,json=isServerRestartApply,proto3" json:"is_server_restart_apply,omitempty"`
	IsRollbackPerformed  bool     `protobuf:"varint,63,opt,name=is_rollback_performed,json=isRollbackPerformed,proto3" json:"is_rollback_performed,omitempty"`
	ReplPending          bool     `protobuf:"varint,64,opt,name=repl_pending,json=replPending,proto3" json:"repl_pending,omitempty"`
	ActivateTimerRunning bool     `protobuf:"varint,65,opt,name=activate_timer_running,json=activateTimerRunning,proto3" json:"activate_timer_running,omitempty"`
	ApplyTimerRunning    bool     `protobuf:"varint,66,opt,name=apply_timer_running,json=applyTimerRunning,proto3" json:"apply_timer_running,omitempty"`
	EventQueueSize       bool     `protobuf:"varint,67,opt,name=event_queue_size,json=eventQueueSize,proto3" json:"event_queue_size,omitempty"`
	Restarts             []byte   `protobuf:"bytes,68,opt,name=restarts,proto3" json:"restarts,omitempty"`
	TemplateInterfaceId  uint32   `protobuf:"varint,69,opt,name=template_interface_id,json=templateInterfaceId,proto3" json:"template_interface_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SubdbSubscriberObj) Reset()         { *m = SubdbSubscriberObj{} }
func (m *SubdbSubscriberObj) String() string { return proto.CompactTextString(m) }
func (*SubdbSubscriberObj) ProtoMessage()    {}
func (*SubdbSubscriberObj) Descriptor() ([]byte, []int) {
	return fileDescriptor_c56bd1e1ca73e047, []int{1}
}

func (m *SubdbSubscriberObj) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubdbSubscriberObj.Unmarshal(m, b)
}
func (m *SubdbSubscriberObj) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubdbSubscriberObj.Marshal(b, m, deterministic)
}
func (m *SubdbSubscriberObj) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubdbSubscriberObj.Merge(m, src)
}
func (m *SubdbSubscriberObj) XXX_Size() int {
	return xxx_messageInfo_SubdbSubscriberObj.Size(m)
}
func (m *SubdbSubscriberObj) XXX_DiscardUnknown() {
	xxx_messageInfo_SubdbSubscriberObj.DiscardUnknown(m)
}

var xxx_messageInfo_SubdbSubscriberObj proto.InternalMessageInfo

func (m *SubdbSubscriberObj) GetSessionState() string {
	if m != nil {
		return m.SessionState
	}
	return ""
}

func (m *SubdbSubscriberObj) GetActivateRequestId() uint32 {
	if m != nil {
		return m.ActivateRequestId
	}
	return 0
}

func (m *SubdbSubscriberObj) GetTransactionId() int32 {
	if m != nil {
		return m.TransactionId
	}
	return 0
}

func (m *SubdbSubscriberObj) GetProduceDoneRequestId() uint32 {
	if m != nil {
		return m.ProduceDoneRequestId
	}
	return 0
}

func (m *SubdbSubscriberObj) GetDestroyReqReceived() bool {
	if m != nil {
		return m.DestroyReqReceived
	}
	return false
}

func (m *SubdbSubscriberObj) GetDestroyRequestId() uint32 {
	if m != nil {
		return m.DestroyRequestId
	}
	return 0
}

func (m *SubdbSubscriberObj) GetIsConfigChanged() bool {
	if m != nil {
		return m.IsConfigChanged
	}
	return false
}

func (m *SubdbSubscriberObj) GetIsCreatorGone() bool {
	if m != nil {
		return m.IsCreatorGone
	}
	return false
}

func (m *SubdbSubscriberObj) GetIsDeleteNotifyDone() bool {
	if m != nil {
		return m.IsDeleteNotifyDone
	}
	return false
}

func (m *SubdbSubscriberObj) GetAddModifyDone() bool {
	if m != nil {
		return m.AddModifyDone
	}
	return false
}

func (m *SubdbSubscriberObj) GetIsRollbackNeeded() bool {
	if m != nil {
		return m.IsRollbackNeeded
	}
	return false
}

func (m *SubdbSubscriberObj) GetIsRollbackInProgress() bool {
	if m != nil {
		return m.IsRollbackInProgress
	}
	return false
}

func (m *SubdbSubscriberObj) GetIsServerRestartApply() bool {
	if m != nil {
		return m.IsServerRestartApply
	}
	return false
}

func (m *SubdbSubscriberObj) GetIsRollbackPerformed() bool {
	if m != nil {
		return m.IsRollbackPerformed
	}
	return false
}

func (m *SubdbSubscriberObj) GetReplPending() bool {
	if m != nil {
		return m.ReplPending
	}
	return false
}

func (m *SubdbSubscriberObj) GetActivateTimerRunning() bool {
	if m != nil {
		return m.ActivateTimerRunning
	}
	return false
}

func (m *SubdbSubscriberObj) GetApplyTimerRunning() bool {
	if m != nil {
		return m.ApplyTimerRunning
	}
	return false
}

func (m *SubdbSubscriberObj) GetEventQueueSize() bool {
	if m != nil {
		return m.EventQueueSize
	}
	return false
}

func (m *SubdbSubscriberObj) GetRestarts() []byte {
	if m != nil {
		return m.Restarts
	}
	return nil
}

func (m *SubdbSubscriberObj) GetTemplateInterfaceId() uint32 {
	if m != nil {
		return m.TemplateInterfaceId
	}
	return 0
}

func init() {
	proto.RegisterType((*SubdbSubscriberObj_KEYS)(nil), "cisco_ios_xr_subscriber_infra_subdb_oper.subscriber_database.nodes.node.session.labels.label.subdb_subscriber_obj_KEYS")
	proto.RegisterType((*SubdbSubscriberObj)(nil), "cisco_ios_xr_subscriber_infra_subdb_oper.subscriber_database.nodes.node.session.labels.label.subdb_subscriber_obj")
}

func init() { proto.RegisterFile("subdb_subscriber_obj.proto", fileDescriptor_c56bd1e1ca73e047) }

var fileDescriptor_c56bd1e1ca73e047 = []byte{
	// 632 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x94, 0x5b, 0x6f, 0x13, 0x3f,
	0x10, 0xc5, 0x95, 0xff, 0xc3, 0x9f, 0xd6, 0x34, 0x6d, 0xe2, 0x06, 0x30, 0xe5, 0x25, 0x80, 0x40,
	0x01, 0x55, 0x11, 0xf4, 0xc2, 0xfd, 0x56, 0xd2, 0x0a, 0x45, 0x40, 0x55, 0x36, 0xbc, 0x20, 0x21,
	0x59, 0xde, 0xf5, 0x24, 0x18, 0x36, 0xf6, 0xd6, 0xe3, 0x44, 0xb4, 0x5f, 0x89, 0x2f, 0x89, 0x3c,
	0xbb, 0xb9, 0x14, 0xf5, 0x25, 0x51, 0xce, 0xef, 0x9c, 0x33, 0x63, 0xcb, 0x0a, 0xdb, 0xc2, 0x49,
	0xaa, 0x53, 0x89, 0x93, 0x14, 0x33, 0x6f, 0x52, 0xf0, 0xd2, 0xa5, 0x3f, 0xbb, 0x85, 0x77, 0xc1,
	0xf1, 0xef, 0x99, 0xc1, 0xcc, 0x49, 0xe3, 0x50, 0xfe, 0xf6, 0xcb, 0x16, 0x63, 0x87, 0x5e, 0xc9,
	0x32, 0xe9, 0x0a, 0xf0, 0xdd, 0x25, 0xa6, 0x55, 0x50, 0xa9, 0x42, 0xe8, 0x5a, 0xa7, 0x01, 0xe9,
	0xb3, 0x8b, 0x80, 0x68, 0x9c, 0xed, 0xe6, 0x2a, 0x85, 0x1c, 0xcb, 0xaf, 0x3b, 0x19, 0xbb, 0x79,
	0xd9, 0x6c, 0xf9, 0xf1, 0xe8, 0xdb, 0x80, 0xdf, 0x62, 0xab, 0x31, 0x29, 0xad, 0x1a, 0x83, 0xa8,
	0xb5, 0x6b, 0x9d, 0xd5, 0x64, 0x25, 0x0a, 0xc7, 0x6a, 0x0c, 0xfc, 0x01, 0x6b, 0x2c, 0x65, 0xa8,
	0x4d, 0xfc, 0x47, 0x9e, 0x8d, 0x85, 0xfe, 0x89, 0x86, 0xfc, 0xb9, 0xc2, 0x5a, 0x97, 0x4d, 0xe1,
	0x77, 0x59, 0xbd, 0xda, 0x4a, 0x62, 0x50, 0x01, 0xc4, 0x0e, 0x15, 0xac, 0x55, 0xe2, 0x20, 0x6a,
	0xbc, 0xcb, 0x36, 0x55, 0x16, 0xcc, 0x54, 0x05, 0x90, 0x1e, 0x4e, 0x27, 0x80, 0x41, 0x1a, 0x2d,
	0x76, 0xdb, 0xb5, 0x4e, 0x3d, 0x69, 0xce, 0x50, 0x52, 0x92, 0xbe, 0xe6, 0xf7, 0xd8, 0x7a, 0xf0,
	0xca, 0x62, 0x24, 0xce, 0x46, 0xeb, 0x5e, 0xbb, 0xd6, 0x69, 0x26, 0xf5, 0x25, 0xb5, 0xaf, 0xf9,
	0x3e, 0xbb, 0x51, 0x78, 0xa7, 0x27, 0x19, 0x48, 0xed, 0xec, 0x85, 0xea, 0x7d, 0xaa, 0x6e, 0x55,
	0xf8, 0xd0, 0xd9, 0xa5, 0xf6, 0x47, 0xac, 0xa5, 0x01, 0x83, 0x77, 0x67, 0x31, 0x21, 0x3d, 0x64,
	0x60, 0xa6, 0xa0, 0xc5, 0x93, 0x76, 0xad, 0xb3, 0x92, 0xf0, 0x8a, 0x25, 0x70, 0x9a, 0x54, 0x84,
	0x6f, 0x33, 0xbe, 0x94, 0x98, 0xcd, 0x78, 0x4a, 0x33, 0x1a, 0x0b, 0x7f, 0xd5, 0xff, 0x90, 0x35,
	0x0d, 0xca, 0xcc, 0xd9, 0xa1, 0x19, 0xc9, 0xec, 0x87, 0xb2, 0x23, 0xd0, 0xe2, 0x19, 0x95, 0x6f,
	0x18, 0xec, 0x91, 0xde, 0x2b, 0x65, 0x7e, 0x9f, 0x6d, 0x44, 0xaf, 0x07, 0x15, 0x9c, 0x97, 0x23,
	0x67, 0x41, 0x3c, 0x27, 0x67, 0xdd, 0x60, 0xaf, 0x54, 0x3f, 0x38, 0x0b, 0xfc, 0x31, 0xbb, 0x66,
	0x50, 0x6a, 0xc8, 0x21, 0x80, 0xb4, 0x2e, 0x98, 0xe1, 0x19, 0x9d, 0x59, 0xbc, 0x28, 0x97, 0x36,
	0x78, 0x48, 0xec, 0x98, 0x50, 0x3c, 0x6f, 0xac, 0x56, 0x5a, 0xcb, 0xb1, 0xd3, 0x73, 0xf3, 0xcb,
	0xb2, 0x5a, 0x69, 0xfd, 0x99, 0x54, 0xf2, 0x6d, 0x33, 0x6e, 0x50, 0x7a, 0x97, 0xe7, 0xa9, 0xca,
	0x7e, 0x49, 0x0b, 0xa0, 0x41, 0x8b, 0x57, 0x64, 0x6d, 0x18, 0x4c, 0x2a, 0x70, 0x4c, 0x7a, 0xbc,
	0xf3, 0x65, 0xb7, 0xb1, 0xb2, 0xf0, 0x6e, 0xe4, 0x01, 0x51, 0xbc, 0xa6, 0x48, 0x6b, 0x11, 0xe9,
	0xdb, 0x93, 0x8a, 0x55, 0x31, 0x04, 0x3f, 0x05, 0x2f, 0x3d, 0x60, 0x50, 0x3e, 0x48, 0x55, 0x14,
	0xf9, 0x99, 0x78, 0x33, 0x8b, 0x0d, 0x88, 0x26, 0x25, 0x3c, 0x88, 0x8c, 0xef, 0xd0, 0xb1, 0xe7,
	0xd3, 0x0a, 0xf0, 0x43, 0xe7, 0xc7, 0xa0, 0xc5, 0x5b, 0x0a, 0x6d, 0x2e, 0x66, 0x9d, 0xcc, 0x10,
	0xbf, 0xcd, 0xd6, 0x3c, 0x14, 0xb9, 0x2c, 0xc0, 0x6a, 0x63, 0x47, 0xe2, 0x1d, 0x59, 0xaf, 0x46,
	0xed, 0xa4, 0x94, 0xf8, 0x1e, 0xbb, 0x3e, 0x7f, 0x8f, 0xc1, 0x8c, 0xe3, 0x4a, 0x13, 0x6b, 0xa3,
	0xf9, 0xa0, 0x5c, 0x66, 0x46, 0xbf, 0x46, 0x98, 0x94, 0x8c, 0x5e, 0x71, 0xdc, 0xea, 0x9f, 0xc8,
	0x7b, 0x8a, 0x34, 0x09, 0x5d, 0xf0, 0x77, 0x58, 0x03, 0xa6, 0x60, 0x83, 0x3c, 0x9d, 0xc0, 0x04,
	0x24, 0x9a, 0x73, 0x10, 0x3d, 0x32, 0xaf, 0x93, 0xfe, 0x25, 0xca, 0x03, 0x73, 0x0e, 0x7c, 0x8b,
	0xad, 0x54, 0x77, 0x82, 0xe2, 0xb0, 0x5d, 0xeb, 0xac, 0x25, 0xf3, 0xdf, 0xf1, 0x0a, 0x02, 0x8c,
	0x8b, 0x3c, 0xee, 0x6a, 0x6c, 0x00, 0x3f, 0x54, 0x19, 0xc4, 0xe7, 0x77, 0x44, 0xcf, 0x6f, 0x73,
	0x06, 0xfb, 0x33, 0xd6, 0xd7, 0xe9, 0xff, 0xf4, 0xbf, 0xb3, 0xfb, 0x37, 0x00, 0x00, 0xff, 0xff,
	0x85, 0xa3, 0x71, 0x2f, 0x95, 0x04, 0x00, 0x00,
}
