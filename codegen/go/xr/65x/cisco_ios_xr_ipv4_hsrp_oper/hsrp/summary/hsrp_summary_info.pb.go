/*
Copyright 2019 Cisco Systems

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: hsrp_summary_info.proto

package cisco_ios_xr_ipv4_hsrp_oper_hsrp_summary

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type HsrpSummaryInfo_KEYS struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HsrpSummaryInfo_KEYS) Reset()         { *m = HsrpSummaryInfo_KEYS{} }
func (m *HsrpSummaryInfo_KEYS) String() string { return proto.CompactTextString(m) }
func (*HsrpSummaryInfo_KEYS) ProtoMessage()    {}
func (*HsrpSummaryInfo_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_dd9cbd13c97a7ef3, []int{0}
}

func (m *HsrpSummaryInfo_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HsrpSummaryInfo_KEYS.Unmarshal(m, b)
}
func (m *HsrpSummaryInfo_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HsrpSummaryInfo_KEYS.Marshal(b, m, deterministic)
}
func (m *HsrpSummaryInfo_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HsrpSummaryInfo_KEYS.Merge(m, src)
}
func (m *HsrpSummaryInfo_KEYS) XXX_Size() int {
	return xxx_messageInfo_HsrpSummaryInfo_KEYS.Size(m)
}
func (m *HsrpSummaryInfo_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_HsrpSummaryInfo_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_HsrpSummaryInfo_KEYS proto.InternalMessageInfo

type HsrpSummaryInfo struct {
	Ipv4SessionsActive                uint32   `protobuf:"varint,50,opt,name=ipv4_sessions_active,json=ipv4SessionsActive,proto3" json:"ipv4_sessions_active,omitempty"`
	Ipv4SessionsStandby               uint32   `protobuf:"varint,51,opt,name=ipv4_sessions_standby,json=ipv4SessionsStandby,proto3" json:"ipv4_sessions_standby,omitempty"`
	Ipv4SessionsSpeak                 uint32   `protobuf:"varint,52,opt,name=ipv4_sessions_speak,json=ipv4SessionsSpeak,proto3" json:"ipv4_sessions_speak,omitempty"`
	Ipv4SessionsListen                uint32   `protobuf:"varint,53,opt,name=ipv4_sessions_listen,json=ipv4SessionsListen,proto3" json:"ipv4_sessions_listen,omitempty"`
	Ipv4SessionsLearn                 uint32   `protobuf:"varint,54,opt,name=ipv4_sessions_learn,json=ipv4SessionsLearn,proto3" json:"ipv4_sessions_learn,omitempty"`
	Ipv4SessionsInit                  uint32   `protobuf:"varint,55,opt,name=ipv4_sessions_init,json=ipv4SessionsInit,proto3" json:"ipv4_sessions_init,omitempty"`
	Ipv4SlavesActive                  uint32   `protobuf:"varint,56,opt,name=ipv4_slaves_active,json=ipv4SlavesActive,proto3" json:"ipv4_slaves_active,omitempty"`
	Ipv4SlavesStandby                 uint32   `protobuf:"varint,57,opt,name=ipv4_slaves_standby,json=ipv4SlavesStandby,proto3" json:"ipv4_slaves_standby,omitempty"`
	Ipv4SlavesSpeak                   uint32   `protobuf:"varint,58,opt,name=ipv4_slaves_speak,json=ipv4SlavesSpeak,proto3" json:"ipv4_slaves_speak,omitempty"`
	Ipv4SlavesListen                  uint32   `protobuf:"varint,59,opt,name=ipv4_slaves_listen,json=ipv4SlavesListen,proto3" json:"ipv4_slaves_listen,omitempty"`
	Ipv4SlavesLearn                   uint32   `protobuf:"varint,60,opt,name=ipv4_slaves_learn,json=ipv4SlavesLearn,proto3" json:"ipv4_slaves_learn,omitempty"`
	Ipv4SlavesInit                    uint32   `protobuf:"varint,61,opt,name=ipv4_slaves_init,json=ipv4SlavesInit,proto3" json:"ipv4_slaves_init,omitempty"`
	Ipv4VirtualIpAddressesActiveUp    uint32   `protobuf:"varint,62,opt,name=ipv4_virtual_ip_addresses_active_up,json=ipv4VirtualIpAddressesActiveUp,proto3" json:"ipv4_virtual_ip_addresses_active_up,omitempty"`
	Ipv4VirtualIpAddressesActiveDown  uint32   `protobuf:"varint,63,opt,name=ipv4_virtual_ip_addresses_active_down,json=ipv4VirtualIpAddressesActiveDown,proto3" json:"ipv4_virtual_ip_addresses_active_down,omitempty"`
	Ipv4VirtualIpAddressesStandbyUp   uint32   `protobuf:"varint,64,opt,name=ipv4_virtual_ip_addresses_standby_up,json=ipv4VirtualIpAddressesStandbyUp,proto3" json:"ipv4_virtual_ip_addresses_standby_up,omitempty"`
	Ipv4VirtualIpAddressesStandbyDown uint32   `protobuf:"varint,65,opt,name=ipv4_virtual_ip_addresses_standby_down,json=ipv4VirtualIpAddressesStandbyDown,proto3" json:"ipv4_virtual_ip_addresses_standby_down,omitempty"`
	Ipv4VirtualIpAddressesSpeakUp     uint32   `protobuf:"varint,66,opt,name=ipv4_virtual_ip_addresses_speak_up,json=ipv4VirtualIpAddressesSpeakUp,proto3" json:"ipv4_virtual_ip_addresses_speak_up,omitempty"`
	Ipv4VirtualIpAddressesSpeakDown   uint32   `protobuf:"varint,67,opt,name=ipv4_virtual_ip_addresses_speak_down,json=ipv4VirtualIpAddressesSpeakDown,proto3" json:"ipv4_virtual_ip_addresses_speak_down,omitempty"`
	Ipv4VirtualIpAddressesListenUp    uint32   `protobuf:"varint,68,opt,name=ipv4_virtual_ip_addresses_listen_up,json=ipv4VirtualIpAddressesListenUp,proto3" json:"ipv4_virtual_ip_addresses_listen_up,omitempty"`
	Ipv4VirtualIpAddressesListenDown  uint32   `protobuf:"varint,69,opt,name=ipv4_virtual_ip_addresses_listen_down,json=ipv4VirtualIpAddressesListenDown,proto3" json:"ipv4_virtual_ip_addresses_listen_down,omitempty"`
	Ipv4VirtualIpAddressesLearnUp     uint32   `protobuf:"varint,70,opt,name=ipv4_virtual_ip_addresses_learn_up,json=ipv4VirtualIpAddressesLearnUp,proto3" json:"ipv4_virtual_ip_addresses_learn_up,omitempty"`
	Ipv4VirtualIpAddressesLearnDown   uint32   `protobuf:"varint,71,opt,name=ipv4_virtual_ip_addresses_learn_down,json=ipv4VirtualIpAddressesLearnDown,proto3" json:"ipv4_virtual_ip_addresses_learn_down,omitempty"`
	Ipv4VirtualIpAddressesInitUp      uint32   `protobuf:"varint,72,opt,name=ipv4_virtual_ip_addresses_init_up,json=ipv4VirtualIpAddressesInitUp,proto3" json:"ipv4_virtual_ip_addresses_init_up,omitempty"`
	Ipv4VirtualIpAddressesInitDown    uint32   `protobuf:"varint,73,opt,name=ipv4_virtual_ip_addresses_init_down,json=ipv4VirtualIpAddressesInitDown,proto3" json:"ipv4_virtual_ip_addresses_init_down,omitempty"`
	Ipv6SessionsActive                uint32   `protobuf:"varint,74,opt,name=ipv6_sessions_active,json=ipv6SessionsActive,proto3" json:"ipv6_sessions_active,omitempty"`
	Ipv6SessionsStandby               uint32   `protobuf:"varint,75,opt,name=ipv6_sessions_standby,json=ipv6SessionsStandby,proto3" json:"ipv6_sessions_standby,omitempty"`
	Ipv6SessionsSpeak                 uint32   `protobuf:"varint,76,opt,name=ipv6_sessions_speak,json=ipv6SessionsSpeak,proto3" json:"ipv6_sessions_speak,omitempty"`
	Ipv6SessionsListen                uint32   `protobuf:"varint,77,opt,name=ipv6_sessions_listen,json=ipv6SessionsListen,proto3" json:"ipv6_sessions_listen,omitempty"`
	Ipv6SessionsLearn                 uint32   `protobuf:"varint,78,opt,name=ipv6_sessions_learn,json=ipv6SessionsLearn,proto3" json:"ipv6_sessions_learn,omitempty"`
	Ipv6SessionsInit                  uint32   `protobuf:"varint,79,opt,name=ipv6_sessions_init,json=ipv6SessionsInit,proto3" json:"ipv6_sessions_init,omitempty"`
	Ipv6SlavesActive                  uint32   `protobuf:"varint,80,opt,name=ipv6_slaves_active,json=ipv6SlavesActive,proto3" json:"ipv6_slaves_active,omitempty"`
	Ipv6SlavesStandby                 uint32   `protobuf:"varint,81,opt,name=ipv6_slaves_standby,json=ipv6SlavesStandby,proto3" json:"ipv6_slaves_standby,omitempty"`
	Ipv6SlavesSpeak                   uint32   `protobuf:"varint,82,opt,name=ipv6_slaves_speak,json=ipv6SlavesSpeak,proto3" json:"ipv6_slaves_speak,omitempty"`
	Ipv6SlavesListen                  uint32   `protobuf:"varint,83,opt,name=ipv6_slaves_listen,json=ipv6SlavesListen,proto3" json:"ipv6_slaves_listen,omitempty"`
	Ipv6SlavesLearn                   uint32   `protobuf:"varint,84,opt,name=ipv6_slaves_learn,json=ipv6SlavesLearn,proto3" json:"ipv6_slaves_learn,omitempty"`
	Ipv6SlavesInit                    uint32   `protobuf:"varint,85,opt,name=ipv6_slaves_init,json=ipv6SlavesInit,proto3" json:"ipv6_slaves_init,omitempty"`
	Ipv6VirtualIpAddressesActiveUp    uint32   `protobuf:"varint,86,opt,name=ipv6_virtual_ip_addresses_active_up,json=ipv6VirtualIpAddressesActiveUp,proto3" json:"ipv6_virtual_ip_addresses_active_up,omitempty"`
	Ipv6VirtualIpAddressesActiveDown  uint32   `protobuf:"varint,87,opt,name=ipv6_virtual_ip_addresses_active_down,json=ipv6VirtualIpAddressesActiveDown,proto3" json:"ipv6_virtual_ip_addresses_active_down,omitempty"`
	Ipv6VirtualIpAddressesStandbyUp   uint32   `protobuf:"varint,88,opt,name=ipv6_virtual_ip_addresses_standby_up,json=ipv6VirtualIpAddressesStandbyUp,proto3" json:"ipv6_virtual_ip_addresses_standby_up,omitempty"`
	Ipv6VirtualIpAddressesStandbyDown uint32   `protobuf:"varint,89,opt,name=ipv6_virtual_ip_addresses_standby_down,json=ipv6VirtualIpAddressesStandbyDown,proto3" json:"ipv6_virtual_ip_addresses_standby_down,omitempty"`
	Ipv6VirtualIpAddressesSpeakUp     uint32   `protobuf:"varint,90,opt,name=ipv6_virtual_ip_addresses_speak_up,json=ipv6VirtualIpAddressesSpeakUp,proto3" json:"ipv6_virtual_ip_addresses_speak_up,omitempty"`
	Ipv6VirtualIpAddressesSpeakDown   uint32   `protobuf:"varint,91,opt,name=ipv6_virtual_ip_addresses_speak_down,json=ipv6VirtualIpAddressesSpeakDown,proto3" json:"ipv6_virtual_ip_addresses_speak_down,omitempty"`
	Ipv6VirtualIpAddressesListenUp    uint32   `protobuf:"varint,92,opt,name=ipv6_virtual_ip_addresses_listen_up,json=ipv6VirtualIpAddressesListenUp,proto3" json:"ipv6_virtual_ip_addresses_listen_up,omitempty"`
	Ipv6VirtualIpAddressesListenDown  uint32   `protobuf:"varint,93,opt,name=ipv6_virtual_ip_addresses_listen_down,json=ipv6VirtualIpAddressesListenDown,proto3" json:"ipv6_virtual_ip_addresses_listen_down,omitempty"`
	Ipv6VirtualIpAddressesLearnUp     uint32   `protobuf:"varint,94,opt,name=ipv6_virtual_ip_addresses_learn_up,json=ipv6VirtualIpAddressesLearnUp,proto3" json:"ipv6_virtual_ip_addresses_learn_up,omitempty"`
	Ipv6VirtualIpAddressesLearnDown   uint32   `protobuf:"varint,95,opt,name=ipv6_virtual_ip_addresses_learn_down,json=ipv6VirtualIpAddressesLearnDown,proto3" json:"ipv6_virtual_ip_addresses_learn_down,omitempty"`
	Ipv6VirtualIpAddressesInitUp      uint32   `protobuf:"varint,96,opt,name=ipv6_virtual_ip_addresses_init_up,json=ipv6VirtualIpAddressesInitUp,proto3" json:"ipv6_virtual_ip_addresses_init_up,omitempty"`
	Ipv6VirtualIpAddressesInitDown    uint32   `protobuf:"varint,97,opt,name=ipv6_virtual_ip_addresses_init_down,json=ipv6VirtualIpAddressesInitDown,proto3" json:"ipv6_virtual_ip_addresses_init_down,omitempty"`
	InterfacesIpv4StateUp             uint32   `protobuf:"varint,98,opt,name=interfaces_ipv4_state_up,json=interfacesIpv4StateUp,proto3" json:"interfaces_ipv4_state_up,omitempty"`
	InterfacesIpv4StateDown           uint32   `protobuf:"varint,99,opt,name=interfaces_ipv4_state_down,json=interfacesIpv4StateDown,proto3" json:"interfaces_ipv4_state_down,omitempty"`
	TrackedInterfacesIpv4StateUp      uint32   `protobuf:"varint,100,opt,name=tracked_interfaces_ipv4_state_up,json=trackedInterfacesIpv4StateUp,proto3" json:"tracked_interfaces_ipv4_state_up,omitempty"`
	TrackedInterfacesIpv4StateDown    uint32   `protobuf:"varint,101,opt,name=tracked_interfaces_ipv4_state_down,json=trackedInterfacesIpv4StateDown,proto3" json:"tracked_interfaces_ipv4_state_down,omitempty"`
	TrackedObjectsUp                  uint32   `protobuf:"varint,102,opt,name=tracked_objects_up,json=trackedObjectsUp,proto3" json:"tracked_objects_up,omitempty"`
	TrackedObjectsDown                uint32   `protobuf:"varint,103,opt,name=tracked_objects_down,json=trackedObjectsDown,proto3" json:"tracked_objects_down,omitempty"`
	InterfacesIpv6StateUp             uint32   `protobuf:"varint,104,opt,name=interfaces_ipv6_state_up,json=interfacesIpv6StateUp,proto3" json:"interfaces_ipv6_state_up,omitempty"`
	InterfacesIpv6StateDown           uint32   `protobuf:"varint,105,opt,name=interfaces_ipv6_state_down,json=interfacesIpv6StateDown,proto3" json:"interfaces_ipv6_state_down,omitempty"`
	TrackedInterfacesIpv6StateUp      uint32   `protobuf:"varint,106,opt,name=tracked_interfaces_ipv6_state_up,json=trackedInterfacesIpv6StateUp,proto3" json:"tracked_interfaces_ipv6_state_up,omitempty"`
	TrackedInterfacesIpv6StateDown    uint32   `protobuf:"varint,107,opt,name=tracked_interfaces_ipv6_state_down,json=trackedInterfacesIpv6StateDown,proto3" json:"tracked_interfaces_ipv6_state_down,omitempty"`
	BfdSessionsUp                     uint32   `protobuf:"varint,108,opt,name=bfd_sessions_up,json=bfdSessionsUp,proto3" json:"bfd_sessions_up,omitempty"`
	BfdSessionsDown                   uint32   `protobuf:"varint,109,opt,name=bfd_sessions_down,json=bfdSessionsDown,proto3" json:"bfd_sessions_down,omitempty"`
	BfdSessionInactive                uint32   `protobuf:"varint,110,opt,name=bfd_session_inactive,json=bfdSessionInactive,proto3" json:"bfd_session_inactive,omitempty"`
	XXX_NoUnkeyedLiteral              struct{} `json:"-"`
	XXX_unrecognized                  []byte   `json:"-"`
	XXX_sizecache                     int32    `json:"-"`
}

func (m *HsrpSummaryInfo) Reset()         { *m = HsrpSummaryInfo{} }
func (m *HsrpSummaryInfo) String() string { return proto.CompactTextString(m) }
func (*HsrpSummaryInfo) ProtoMessage()    {}
func (*HsrpSummaryInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_dd9cbd13c97a7ef3, []int{1}
}

func (m *HsrpSummaryInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HsrpSummaryInfo.Unmarshal(m, b)
}
func (m *HsrpSummaryInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HsrpSummaryInfo.Marshal(b, m, deterministic)
}
func (m *HsrpSummaryInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HsrpSummaryInfo.Merge(m, src)
}
func (m *HsrpSummaryInfo) XXX_Size() int {
	return xxx_messageInfo_HsrpSummaryInfo.Size(m)
}
func (m *HsrpSummaryInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_HsrpSummaryInfo.DiscardUnknown(m)
}

var xxx_messageInfo_HsrpSummaryInfo proto.InternalMessageInfo

func (m *HsrpSummaryInfo) GetIpv4SessionsActive() uint32 {
	if m != nil {
		return m.Ipv4SessionsActive
	}
	return 0
}

func (m *HsrpSummaryInfo) GetIpv4SessionsStandby() uint32 {
	if m != nil {
		return m.Ipv4SessionsStandby
	}
	return 0
}

func (m *HsrpSummaryInfo) GetIpv4SessionsSpeak() uint32 {
	if m != nil {
		return m.Ipv4SessionsSpeak
	}
	return 0
}

func (m *HsrpSummaryInfo) GetIpv4SessionsListen() uint32 {
	if m != nil {
		return m.Ipv4SessionsListen
	}
	return 0
}

func (m *HsrpSummaryInfo) GetIpv4SessionsLearn() uint32 {
	if m != nil {
		return m.Ipv4SessionsLearn
	}
	return 0
}

func (m *HsrpSummaryInfo) GetIpv4SessionsInit() uint32 {
	if m != nil {
		return m.Ipv4SessionsInit
	}
	return 0
}

func (m *HsrpSummaryInfo) GetIpv4SlavesActive() uint32 {
	if m != nil {
		return m.Ipv4SlavesActive
	}
	return 0
}

func (m *HsrpSummaryInfo) GetIpv4SlavesStandby() uint32 {
	if m != nil {
		return m.Ipv4SlavesStandby
	}
	return 0
}

func (m *HsrpSummaryInfo) GetIpv4SlavesSpeak() uint32 {
	if m != nil {
		return m.Ipv4SlavesSpeak
	}
	return 0
}

func (m *HsrpSummaryInfo) GetIpv4SlavesListen() uint32 {
	if m != nil {
		return m.Ipv4SlavesListen
	}
	return 0
}

func (m *HsrpSummaryInfo) GetIpv4SlavesLearn() uint32 {
	if m != nil {
		return m.Ipv4SlavesLearn
	}
	return 0
}

func (m *HsrpSummaryInfo) GetIpv4SlavesInit() uint32 {
	if m != nil {
		return m.Ipv4SlavesInit
	}
	return 0
}

func (m *HsrpSummaryInfo) GetIpv4VirtualIpAddressesActiveUp() uint32 {
	if m != nil {
		return m.Ipv4VirtualIpAddressesActiveUp
	}
	return 0
}

func (m *HsrpSummaryInfo) GetIpv4VirtualIpAddressesActiveDown() uint32 {
	if m != nil {
		return m.Ipv4VirtualIpAddressesActiveDown
	}
	return 0
}

func (m *HsrpSummaryInfo) GetIpv4VirtualIpAddressesStandbyUp() uint32 {
	if m != nil {
		return m.Ipv4VirtualIpAddressesStandbyUp
	}
	return 0
}

func (m *HsrpSummaryInfo) GetIpv4VirtualIpAddressesStandbyDown() uint32 {
	if m != nil {
		return m.Ipv4VirtualIpAddressesStandbyDown
	}
	return 0
}

func (m *HsrpSummaryInfo) GetIpv4VirtualIpAddressesSpeakUp() uint32 {
	if m != nil {
		return m.Ipv4VirtualIpAddressesSpeakUp
	}
	return 0
}

func (m *HsrpSummaryInfo) GetIpv4VirtualIpAddressesSpeakDown() uint32 {
	if m != nil {
		return m.Ipv4VirtualIpAddressesSpeakDown
	}
	return 0
}

func (m *HsrpSummaryInfo) GetIpv4VirtualIpAddressesListenUp() uint32 {
	if m != nil {
		return m.Ipv4VirtualIpAddressesListenUp
	}
	return 0
}

func (m *HsrpSummaryInfo) GetIpv4VirtualIpAddressesListenDown() uint32 {
	if m != nil {
		return m.Ipv4VirtualIpAddressesListenDown
	}
	return 0
}

func (m *HsrpSummaryInfo) GetIpv4VirtualIpAddressesLearnUp() uint32 {
	if m != nil {
		return m.Ipv4VirtualIpAddressesLearnUp
	}
	return 0
}

func (m *HsrpSummaryInfo) GetIpv4VirtualIpAddressesLearnDown() uint32 {
	if m != nil {
		return m.Ipv4VirtualIpAddressesLearnDown
	}
	return 0
}

func (m *HsrpSummaryInfo) GetIpv4VirtualIpAddressesInitUp() uint32 {
	if m != nil {
		return m.Ipv4VirtualIpAddressesInitUp
	}
	return 0
}

func (m *HsrpSummaryInfo) GetIpv4VirtualIpAddressesInitDown() uint32 {
	if m != nil {
		return m.Ipv4VirtualIpAddressesInitDown
	}
	return 0
}

func (m *HsrpSummaryInfo) GetIpv6SessionsActive() uint32 {
	if m != nil {
		return m.Ipv6SessionsActive
	}
	return 0
}

func (m *HsrpSummaryInfo) GetIpv6SessionsStandby() uint32 {
	if m != nil {
		return m.Ipv6SessionsStandby
	}
	return 0
}

func (m *HsrpSummaryInfo) GetIpv6SessionsSpeak() uint32 {
	if m != nil {
		return m.Ipv6SessionsSpeak
	}
	return 0
}

func (m *HsrpSummaryInfo) GetIpv6SessionsListen() uint32 {
	if m != nil {
		return m.Ipv6SessionsListen
	}
	return 0
}

func (m *HsrpSummaryInfo) GetIpv6SessionsLearn() uint32 {
	if m != nil {
		return m.Ipv6SessionsLearn
	}
	return 0
}

func (m *HsrpSummaryInfo) GetIpv6SessionsInit() uint32 {
	if m != nil {
		return m.Ipv6SessionsInit
	}
	return 0
}

func (m *HsrpSummaryInfo) GetIpv6SlavesActive() uint32 {
	if m != nil {
		return m.Ipv6SlavesActive
	}
	return 0
}

func (m *HsrpSummaryInfo) GetIpv6SlavesStandby() uint32 {
	if m != nil {
		return m.Ipv6SlavesStandby
	}
	return 0
}

func (m *HsrpSummaryInfo) GetIpv6SlavesSpeak() uint32 {
	if m != nil {
		return m.Ipv6SlavesSpeak
	}
	return 0
}

func (m *HsrpSummaryInfo) GetIpv6SlavesListen() uint32 {
	if m != nil {
		return m.Ipv6SlavesListen
	}
	return 0
}

func (m *HsrpSummaryInfo) GetIpv6SlavesLearn() uint32 {
	if m != nil {
		return m.Ipv6SlavesLearn
	}
	return 0
}

func (m *HsrpSummaryInfo) GetIpv6SlavesInit() uint32 {
	if m != nil {
		return m.Ipv6SlavesInit
	}
	return 0
}

func (m *HsrpSummaryInfo) GetIpv6VirtualIpAddressesActiveUp() uint32 {
	if m != nil {
		return m.Ipv6VirtualIpAddressesActiveUp
	}
	return 0
}

func (m *HsrpSummaryInfo) GetIpv6VirtualIpAddressesActiveDown() uint32 {
	if m != nil {
		return m.Ipv6VirtualIpAddressesActiveDown
	}
	return 0
}

func (m *HsrpSummaryInfo) GetIpv6VirtualIpAddressesStandbyUp() uint32 {
	if m != nil {
		return m.Ipv6VirtualIpAddressesStandbyUp
	}
	return 0
}

func (m *HsrpSummaryInfo) GetIpv6VirtualIpAddressesStandbyDown() uint32 {
	if m != nil {
		return m.Ipv6VirtualIpAddressesStandbyDown
	}
	return 0
}

func (m *HsrpSummaryInfo) GetIpv6VirtualIpAddressesSpeakUp() uint32 {
	if m != nil {
		return m.Ipv6VirtualIpAddressesSpeakUp
	}
	return 0
}

func (m *HsrpSummaryInfo) GetIpv6VirtualIpAddressesSpeakDown() uint32 {
	if m != nil {
		return m.Ipv6VirtualIpAddressesSpeakDown
	}
	return 0
}

func (m *HsrpSummaryInfo) GetIpv6VirtualIpAddressesListenUp() uint32 {
	if m != nil {
		return m.Ipv6VirtualIpAddressesListenUp
	}
	return 0
}

func (m *HsrpSummaryInfo) GetIpv6VirtualIpAddressesListenDown() uint32 {
	if m != nil {
		return m.Ipv6VirtualIpAddressesListenDown
	}
	return 0
}

func (m *HsrpSummaryInfo) GetIpv6VirtualIpAddressesLearnUp() uint32 {
	if m != nil {
		return m.Ipv6VirtualIpAddressesLearnUp
	}
	return 0
}

func (m *HsrpSummaryInfo) GetIpv6VirtualIpAddressesLearnDown() uint32 {
	if m != nil {
		return m.Ipv6VirtualIpAddressesLearnDown
	}
	return 0
}

func (m *HsrpSummaryInfo) GetIpv6VirtualIpAddressesInitUp() uint32 {
	if m != nil {
		return m.Ipv6VirtualIpAddressesInitUp
	}
	return 0
}

func (m *HsrpSummaryInfo) GetIpv6VirtualIpAddressesInitDown() uint32 {
	if m != nil {
		return m.Ipv6VirtualIpAddressesInitDown
	}
	return 0
}

func (m *HsrpSummaryInfo) GetInterfacesIpv4StateUp() uint32 {
	if m != nil {
		return m.InterfacesIpv4StateUp
	}
	return 0
}

func (m *HsrpSummaryInfo) GetInterfacesIpv4StateDown() uint32 {
	if m != nil {
		return m.InterfacesIpv4StateDown
	}
	return 0
}

func (m *HsrpSummaryInfo) GetTrackedInterfacesIpv4StateUp() uint32 {
	if m != nil {
		return m.TrackedInterfacesIpv4StateUp
	}
	return 0
}

func (m *HsrpSummaryInfo) GetTrackedInterfacesIpv4StateDown() uint32 {
	if m != nil {
		return m.TrackedInterfacesIpv4StateDown
	}
	return 0
}

func (m *HsrpSummaryInfo) GetTrackedObjectsUp() uint32 {
	if m != nil {
		return m.TrackedObjectsUp
	}
	return 0
}

func (m *HsrpSummaryInfo) GetTrackedObjectsDown() uint32 {
	if m != nil {
		return m.TrackedObjectsDown
	}
	return 0
}

func (m *HsrpSummaryInfo) GetInterfacesIpv6StateUp() uint32 {
	if m != nil {
		return m.InterfacesIpv6StateUp
	}
	return 0
}

func (m *HsrpSummaryInfo) GetInterfacesIpv6StateDown() uint32 {
	if m != nil {
		return m.InterfacesIpv6StateDown
	}
	return 0
}

func (m *HsrpSummaryInfo) GetTrackedInterfacesIpv6StateUp() uint32 {
	if m != nil {
		return m.TrackedInterfacesIpv6StateUp
	}
	return 0
}

func (m *HsrpSummaryInfo) GetTrackedInterfacesIpv6StateDown() uint32 {
	if m != nil {
		return m.TrackedInterfacesIpv6StateDown
	}
	return 0
}

func (m *HsrpSummaryInfo) GetBfdSessionsUp() uint32 {
	if m != nil {
		return m.BfdSessionsUp
	}
	return 0
}

func (m *HsrpSummaryInfo) GetBfdSessionsDown() uint32 {
	if m != nil {
		return m.BfdSessionsDown
	}
	return 0
}

func (m *HsrpSummaryInfo) GetBfdSessionInactive() uint32 {
	if m != nil {
		return m.BfdSessionInactive
	}
	return 0
}

func init() {
	proto.RegisterType((*HsrpSummaryInfo_KEYS)(nil), "cisco_ios_xr_ipv4_hsrp_oper.hsrp.summary.hsrp_summary_info_KEYS")
	proto.RegisterType((*HsrpSummaryInfo)(nil), "cisco_ios_xr_ipv4_hsrp_oper.hsrp.summary.hsrp_summary_info")
}

func init() { proto.RegisterFile("hsrp_summary_info.proto", fileDescriptor_dd9cbd13c97a7ef3) }

var fileDescriptor_dd9cbd13c97a7ef3 = []byte{
	// 924 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x97, 0x6b, 0x4f, 0xd4, 0x4e,
	0x18, 0xc5, 0xf3, 0x7f, 0xf3, 0x7f, 0x31, 0x09, 0x02, 0x45, 0xa4, 0x31, 0xa2, 0xb0, 0x2a, 0x21,
	0x86, 0x6c, 0x0c, 0xe0, 0x83, 0x8a, 0x37, 0x94, 0x8b, 0xcb, 0x45, 0x84, 0xb5, 0x28, 0xde, 0x6a,
	0x77, 0xdb, 0x95, 0xc2, 0xd2, 0x4e, 0xda, 0xee, 0x22, 0x1f, 0xd0, 0xef, 0x65, 0xe6, 0x99, 0xee,
	0x6c, 0x3b, 0x6d, 0x67, 0xf6, 0x1d, 0xc9, 0x73, 0xe6, 0xcc, 0xe9, 0x99, 0xf6, 0x37, 0x0b, 0x99,
	0x39, 0x8b, 0x23, 0x6a, 0xc7, 0xbd, 0xcb, 0x4b, 0x27, 0xba, 0xb6, 0xfd, 0xa0, 0x13, 0xd6, 0x69,
	0x14, 0x26, 0xa1, 0xb1, 0xd8, 0xf6, 0xe3, 0x76, 0x68, 0xfb, 0x61, 0x6c, 0xff, 0x89, 0x6c, 0x9f,
	0xf6, 0x57, 0x6d, 0x94, 0x86, 0xd4, 0x8b, 0xea, 0xec, 0xaf, 0x7a, 0xba, 0xa8, 0x66, 0x92, 0x5b,
	0x05, 0x13, 0x7b, 0x6f, 0xeb, 0xb4, 0x59, 0xfb, 0x3b, 0x4b, 0x26, 0x0b, 0x23, 0xe3, 0x31, 0xb9,
	0x89, 0x76, 0xb1, 0x17, 0xc7, 0x7e, 0x18, 0xc4, 0xb6, 0xd3, 0x4e, 0xfc, 0xbe, 0x67, 0x2e, 0xcf,
	0xfd, 0xb7, 0x38, 0x76, 0x6c, 0xb0, 0x59, 0x33, 0x1d, 0x6d, 0xe0, 0xc4, 0x58, 0x26, 0xd3, 0xf9,
	0x15, 0x71, 0xe2, 0x04, 0x6e, 0xeb, 0xda, 0x5c, 0xc1, 0x25, 0x53, 0xd9, 0x25, 0x4d, 0x3e, 0x32,
	0xea, 0x64, 0x4a, 0x5a, 0x43, 0x3d, 0xe7, 0xc2, 0x5c, 0xc5, 0x15, 0x93, 0xb9, 0x15, 0x6c, 0x50,
	0x4c, 0xd5, 0xf5, 0xe3, 0xc4, 0x0b, 0xcc, 0x27, 0xc5, 0x54, 0xfb, 0x38, 0x29, 0xee, 0xd0, 0xf5,
	0x9c, 0x28, 0x30, 0xa1, 0xb8, 0xc3, 0x3e, 0x1b, 0x18, 0x4b, 0xc4, 0xc8, 0xeb, 0xfd, 0xc0, 0x4f,
	0xcc, 0x35, 0x94, 0x4f, 0x64, 0xe5, 0x8d, 0xc0, 0x4f, 0x86, 0xea, 0xae, 0xd3, 0xf7, 0x44, 0x47,
	0x4f, 0x33, 0x6a, 0x1c, 0xa4, 0x0d, 0x89, 0x2c, 0x5c, 0x3d, 0xe8, 0xe7, 0x59, 0x26, 0x0b, 0x4e,
	0x06, 0xed, 0x3c, 0x22, 0x93, 0x39, 0x3d, 0x76, 0xf3, 0x1c, 0xd5, 0xe3, 0x19, 0x35, 0x36, 0x23,
	0x25, 0x49, 0x7b, 0x59, 0x97, 0x93, 0xa4, 0xad, 0x48, 0xce, 0xbc, 0x93, 0x17, 0xb2, 0x33, 0x6f,
	0x64, 0x91, 0x4c, 0x64, 0xb5, 0xd8, 0xc7, 0x4b, 0x94, 0xde, 0x18, 0x4a, 0xb1, 0x8d, 0x3d, 0x72,
	0x1f, 0x95, 0x7d, 0x3f, 0x4a, 0x7a, 0x4e, 0xd7, 0xf6, 0xa9, 0xed, 0xb8, 0x6e, 0xe4, 0xc5, 0xb1,
	0xe8, 0xc6, 0xee, 0x51, 0xf3, 0x15, 0x2e, 0xbe, 0xcb, 0xa4, 0x27, 0x5c, 0xd9, 0xa0, 0x1b, 0x03,
	0x1d, 0xaf, 0xca, 0xa2, 0xc6, 0x21, 0x79, 0xa8, 0x35, 0x73, 0xc3, 0xab, 0xc0, 0x7c, 0x8d, 0x76,
	0x73, 0x2a, 0xbb, 0xcd, 0xf0, 0x2a, 0x30, 0x0e, 0xc8, 0x83, 0x6a, 0xc3, 0xf4, 0x2c, 0x58, 0xbc,
	0x37, 0xe8, 0x77, 0xaf, 0xdc, 0x2f, 0x3d, 0x1a, 0x8b, 0x1a, 0x47, 0x64, 0x41, 0x6f, 0x87, 0x01,
	0x37, 0xd0, 0x70, 0x5e, 0x69, 0x88, 0x09, 0x1b, 0xa4, 0xa6, 0xb0, 0x64, 0xc7, 0xcc, 0xf2, 0xbd,
	0x45, 0xbb, 0xd9, 0x0a, 0x3b, 0xa6, 0xb2, 0xa8, 0xe6, 0x61, 0xd1, 0x0a, 0xb3, 0xbd, 0x53, 0x3e,
	0x2c, 0xd3, 0x61, 0x32, 0xe5, 0xc9, 0xf2, 0x77, 0x8d, 0x45, 0xdb, 0x54, 0x9d, 0x2c, 0x7f, 0xf5,
	0x74, 0x27, 0x9b, 0x9a, 0x61, 0xb8, 0x2d, 0xd5, 0xc9, 0x72, 0x3b, 0x7d, 0x6f, 0xf8, 0x6e, 0xb3,
	0x70, 0xdb, 0xaa, 0xde, 0xf0, 0x55, 0xd7, 0xf5, 0xc6, 0xad, 0x30, 0xda, 0x8e, 0xaa, 0x37, 0x34,
	0xc3, 0x64, 0x3b, 0x64, 0xbe, 0xda, 0x8e, 0x7d, 0x49, 0x2c, 0xd8, 0x7b, 0xf4, 0xba, 0x53, 0xee,
	0xc5, 0x3e, 0x2c, 0x8b, 0xaa, 0x0f, 0x00, 0x8d, 0x30, 0x56, 0x43, 0x75, 0x00, 0xcc, 0x0a, 0x53,
	0x71, 0x8a, 0x42, 0x81, 0xed, 0xbb, 0x82, 0xa2, 0x50, 0xca, 0x76, 0x28, 0xb2, 0x7d, 0x4f, 0xb0,
	0x1d, 0xca, 0xd9, 0x0e, 0x32, 0xdb, 0xf7, 0x05, 0xed, 0xa0, 0x8c, 0xed, 0x50, 0x60, 0xfb, 0x41,
	0x31, 0x55, 0x8e, 0xed, 0x20, 0xb3, 0xfd, 0x43, 0x71, 0x87, 0x2c, 0xdb, 0x41, 0x62, 0xfb, 0xa1,
	0x60, 0x24, 0x94, 0xb0, 0x1d, 0x24, 0xb6, 0x7f, 0xcc, 0xa8, 0x8b, 0x6c, 0x07, 0x99, 0xed, 0x47,
	0x99, 0x2c, 0x25, 0x6c, 0x87, 0x3c, 0xdb, 0x8f, 0x05, 0x81, 0xa1, 0xc8, 0x76, 0x90, 0xd8, 0xde,
	0x94, 0x93, 0xe4, 0xd8, 0x0e, 0x79, 0xb6, 0x7f, 0x92, 0x9d, 0xb3, 0x6c, 0x87, 0x1c, 0xdb, 0x2d,
	0xc1, 0x76, 0x28, 0xb0, 0x1d, 0x74, 0x6c, 0x3f, 0x11, 0x2f, 0x20, 0x68, 0xd9, 0x0e, 0x7a, 0xb6,
	0x7f, 0x16, 0x04, 0x80, 0x11, 0xd8, 0x0e, 0x5a, 0xb6, 0x7f, 0x11, 0x9f, 0x2d, 0xe8, 0xd9, 0x0e,
	0x23, 0xb0, 0xfd, 0x54, 0xb0, 0x1d, 0x46, 0x61, 0x3b, 0x68, 0xd8, 0xfe, 0x55, 0x30, 0x0a, 0x74,
	0x6c, 0x07, 0x2d, 0xdb, 0xbf, 0x29, 0x1f, 0x56, 0x62, 0x3b, 0xe8, 0xd8, 0xfe, 0x5d, 0x75, 0xb2,
	0x12, 0xdb, 0x41, 0xcf, 0xf6, 0x1f, 0xaa, 0x93, 0x2d, 0xb0, 0x1d, 0x34, 0x6c, 0xff, 0xa9, 0xea,
	0x2d, 0xcf, 0x76, 0xd0, 0xb2, 0xdd, 0x56, 0xf5, 0x26, 0xb3, 0x1d, 0xd4, 0x6c, 0xff, 0x25, 0xd8,
	0x0e, 0x1a, 0xb6, 0x83, 0x8e, 0xed, 0x8e, 0xea, 0x00, 0x04, 0xdb, 0xd7, 0x88, 0xe9, 0x07, 0x89,
	0x17, 0x75, 0x9c, 0x36, 0x5b, 0x8d, 0x3f, 0xdc, 0x12, 0x27, 0xc1, 0x8f, 0xb3, 0x85, 0x0e, 0xd3,
	0xc3, 0x79, 0x83, 0xfd, 0x7e, 0x63, 0x53, 0x8b, 0x1a, 0xeb, 0xe4, 0x76, 0xf9, 0x42, 0xdc, 0xbc,
	0x8d, 0x4b, 0x67, 0x4a, 0x96, 0xe2, 0xae, 0xdb, 0x64, 0x2e, 0x89, 0x9c, 0xf6, 0x85, 0xe7, 0xda,
	0x95, 0xbb, 0xbb, 0xbc, 0x8a, 0x54, 0xd7, 0x28, 0x0d, 0xb1, 0x4b, 0x6a, 0x6a, 0x1f, 0x0c, 0xe3,
	0xf1, 0x26, 0xaa, 0x9d, 0x30, 0xd3, 0x12, 0x31, 0x06, 0x5e, 0x61, 0xeb, 0xdc, 0x6b, 0x27, 0x31,
	0x4b, 0xd1, 0xe1, 0xd4, 0x4c, 0x27, 0x87, 0x7c, 0x60, 0x51, 0x76, 0xfb, 0xc8, 0x6a, 0xdc, 0xeb,
	0x37, 0xbf, 0x7d, 0xf2, 0xfa, 0xf2, 0xa6, 0x61, 0xf8, 0xac, 0x67, 0x25, 0x4d, 0x43, 0x65, 0xd3,
	0x90, 0x7d, 0x38, 0xbf, 0xa4, 0x69, 0x18, 0xa1, 0xe9, 0xcc, 0xee, 0xe7, 0xd5, 0x4d, 0x83, 0xb6,
	0xe9, 0x5c, 0x98, 0x8b, 0xea, 0xa6, 0x33, 0x99, 0x16, 0xc8, 0x78, 0xab, 0xe3, 0x0e, 0xaf, 0xd5,
	0x1e, 0x35, 0xbb, 0xb8, 0x70, 0xac, 0xd5, 0x71, 0x07, 0x77, 0xaa, 0x45, 0xd9, 0xcd, 0x94, 0xd3,
	0xe1, 0x16, 0x97, 0xfc, 0x66, 0xca, 0x28, 0x07, 0xbf, 0x51, 0x32, 0x5a, 0xdb, 0x0f, 0xd2, 0xfb,
	0x37, 0xe0, 0xe7, 0x31, 0x94, 0x37, 0xd2, 0x49, 0xeb, 0x7f, 0xfc, 0x97, 0x78, 0xe5, 0x5f, 0x00,
	0x00, 0x00, 0xff, 0xff, 0x88, 0x28, 0xac, 0x81, 0x2d, 0x0f, 0x00, 0x00,
}
