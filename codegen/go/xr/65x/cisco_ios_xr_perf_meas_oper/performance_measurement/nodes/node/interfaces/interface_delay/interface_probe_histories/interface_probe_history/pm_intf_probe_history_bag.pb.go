/*
Copyright 2019 Cisco Systems

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: pm_intf_probe_history_bag.proto

package cisco_ios_xr_perf_meas_oper_performance_measurement_nodes_node_interfaces_interface_delay_interface_probe_histories_interface_probe_history

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type PmIntfProbeHistoryBag_KEYS struct {
	Node                 string   `protobuf:"bytes,1,opt,name=node,proto3" json:"node,omitempty"`
	InterfaceName        string   `protobuf:"bytes,2,opt,name=interface_name,json=interfaceName,proto3" json:"interface_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PmIntfProbeHistoryBag_KEYS) Reset()         { *m = PmIntfProbeHistoryBag_KEYS{} }
func (m *PmIntfProbeHistoryBag_KEYS) String() string { return proto.CompactTextString(m) }
func (*PmIntfProbeHistoryBag_KEYS) ProtoMessage()    {}
func (*PmIntfProbeHistoryBag_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_77683e4354d1068e, []int{0}
}

func (m *PmIntfProbeHistoryBag_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PmIntfProbeHistoryBag_KEYS.Unmarshal(m, b)
}
func (m *PmIntfProbeHistoryBag_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PmIntfProbeHistoryBag_KEYS.Marshal(b, m, deterministic)
}
func (m *PmIntfProbeHistoryBag_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PmIntfProbeHistoryBag_KEYS.Merge(m, src)
}
func (m *PmIntfProbeHistoryBag_KEYS) XXX_Size() int {
	return xxx_messageInfo_PmIntfProbeHistoryBag_KEYS.Size(m)
}
func (m *PmIntfProbeHistoryBag_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_PmIntfProbeHistoryBag_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_PmIntfProbeHistoryBag_KEYS proto.InternalMessageInfo

func (m *PmIntfProbeHistoryBag_KEYS) GetNode() string {
	if m != nil {
		return m.Node
	}
	return ""
}

func (m *PmIntfProbeHistoryBag_KEYS) GetInterfaceName() string {
	if m != nil {
		return m.InterfaceName
	}
	return ""
}

type PmValuesBag struct {
	Average              uint32   `protobuf:"varint,1,opt,name=average,proto3" json:"average,omitempty"`
	Minimum              uint32   `protobuf:"varint,2,opt,name=minimum,proto3" json:"minimum,omitempty"`
	Maximum              uint32   `protobuf:"varint,3,opt,name=maximum,proto3" json:"maximum,omitempty"`
	Variance             uint32   `protobuf:"varint,4,opt,name=variance,proto3" json:"variance,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PmValuesBag) Reset()         { *m = PmValuesBag{} }
func (m *PmValuesBag) String() string { return proto.CompactTextString(m) }
func (*PmValuesBag) ProtoMessage()    {}
func (*PmValuesBag) Descriptor() ([]byte, []int) {
	return fileDescriptor_77683e4354d1068e, []int{1}
}

func (m *PmValuesBag) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PmValuesBag.Unmarshal(m, b)
}
func (m *PmValuesBag) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PmValuesBag.Marshal(b, m, deterministic)
}
func (m *PmValuesBag) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PmValuesBag.Merge(m, src)
}
func (m *PmValuesBag) XXX_Size() int {
	return xxx_messageInfo_PmValuesBag.Size(m)
}
func (m *PmValuesBag) XXX_DiscardUnknown() {
	xxx_messageInfo_PmValuesBag.DiscardUnknown(m)
}

var xxx_messageInfo_PmValuesBag proto.InternalMessageInfo

func (m *PmValuesBag) GetAverage() uint32 {
	if m != nil {
		return m.Average
	}
	return 0
}

func (m *PmValuesBag) GetMinimum() uint32 {
	if m != nil {
		return m.Minimum
	}
	return 0
}

func (m *PmValuesBag) GetMaximum() uint32 {
	if m != nil {
		return m.Maximum
	}
	return 0
}

func (m *PmValuesBag) GetVariance() uint32 {
	if m != nil {
		return m.Variance
	}
	return 0
}

type PmProbeSampleBag struct {
	ProbeStartTimestamp  uint64       `protobuf:"varint,1,opt,name=probe_start_timestamp,json=probeStartTimestamp,proto3" json:"probe_start_timestamp,omitempty"`
	PacketsSent          uint32       `protobuf:"varint,2,opt,name=packets_sent,json=packetsSent,proto3" json:"packets_sent,omitempty"`
	PacketsReceived      uint32       `protobuf:"varint,3,opt,name=packets_received,json=packetsReceived,proto3" json:"packets_received,omitempty"`
	ProbeValues          *PmValuesBag `protobuf:"bytes,4,opt,name=probe_values,json=probeValues,proto3" json:"probe_values,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *PmProbeSampleBag) Reset()         { *m = PmProbeSampleBag{} }
func (m *PmProbeSampleBag) String() string { return proto.CompactTextString(m) }
func (*PmProbeSampleBag) ProtoMessage()    {}
func (*PmProbeSampleBag) Descriptor() ([]byte, []int) {
	return fileDescriptor_77683e4354d1068e, []int{2}
}

func (m *PmProbeSampleBag) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PmProbeSampleBag.Unmarshal(m, b)
}
func (m *PmProbeSampleBag) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PmProbeSampleBag.Marshal(b, m, deterministic)
}
func (m *PmProbeSampleBag) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PmProbeSampleBag.Merge(m, src)
}
func (m *PmProbeSampleBag) XXX_Size() int {
	return xxx_messageInfo_PmProbeSampleBag.Size(m)
}
func (m *PmProbeSampleBag) XXX_DiscardUnknown() {
	xxx_messageInfo_PmProbeSampleBag.DiscardUnknown(m)
}

var xxx_messageInfo_PmProbeSampleBag proto.InternalMessageInfo

func (m *PmProbeSampleBag) GetProbeStartTimestamp() uint64 {
	if m != nil {
		return m.ProbeStartTimestamp
	}
	return 0
}

func (m *PmProbeSampleBag) GetPacketsSent() uint32 {
	if m != nil {
		return m.PacketsSent
	}
	return 0
}

func (m *PmProbeSampleBag) GetPacketsReceived() uint32 {
	if m != nil {
		return m.PacketsReceived
	}
	return 0
}

func (m *PmProbeSampleBag) GetProbeValues() *PmValuesBag {
	if m != nil {
		return m.ProbeValues
	}
	return nil
}

type PmIntfProbeHistoryBag struct {
	InterfaceNameXr      string              `protobuf:"bytes,50,opt,name=interface_name_xr,json=interfaceNameXr,proto3" json:"interface_name_xr,omitempty"`
	InterfaceHandle      uint32              `protobuf:"varint,51,opt,name=interface_handle,json=interfaceHandle,proto3" json:"interface_handle,omitempty"`
	History              []*PmProbeSampleBag `protobuf:"bytes,52,rep,name=history,proto3" json:"history,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *PmIntfProbeHistoryBag) Reset()         { *m = PmIntfProbeHistoryBag{} }
func (m *PmIntfProbeHistoryBag) String() string { return proto.CompactTextString(m) }
func (*PmIntfProbeHistoryBag) ProtoMessage()    {}
func (*PmIntfProbeHistoryBag) Descriptor() ([]byte, []int) {
	return fileDescriptor_77683e4354d1068e, []int{3}
}

func (m *PmIntfProbeHistoryBag) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PmIntfProbeHistoryBag.Unmarshal(m, b)
}
func (m *PmIntfProbeHistoryBag) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PmIntfProbeHistoryBag.Marshal(b, m, deterministic)
}
func (m *PmIntfProbeHistoryBag) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PmIntfProbeHistoryBag.Merge(m, src)
}
func (m *PmIntfProbeHistoryBag) XXX_Size() int {
	return xxx_messageInfo_PmIntfProbeHistoryBag.Size(m)
}
func (m *PmIntfProbeHistoryBag) XXX_DiscardUnknown() {
	xxx_messageInfo_PmIntfProbeHistoryBag.DiscardUnknown(m)
}

var xxx_messageInfo_PmIntfProbeHistoryBag proto.InternalMessageInfo

func (m *PmIntfProbeHistoryBag) GetInterfaceNameXr() string {
	if m != nil {
		return m.InterfaceNameXr
	}
	return ""
}

func (m *PmIntfProbeHistoryBag) GetInterfaceHandle() uint32 {
	if m != nil {
		return m.InterfaceHandle
	}
	return 0
}

func (m *PmIntfProbeHistoryBag) GetHistory() []*PmProbeSampleBag {
	if m != nil {
		return m.History
	}
	return nil
}

func init() {
	proto.RegisterType((*PmIntfProbeHistoryBag_KEYS)(nil), "cisco_ios_xr_perf_meas_oper.performance_measurement.nodes.node.interfaces.interface_delay.interface_probe_histories.interface_probe_history.pm_intf_probe_history_bag_KEYS")
	proto.RegisterType((*PmValuesBag)(nil), "cisco_ios_xr_perf_meas_oper.performance_measurement.nodes.node.interfaces.interface_delay.interface_probe_histories.interface_probe_history.pm_values_bag")
	proto.RegisterType((*PmProbeSampleBag)(nil), "cisco_ios_xr_perf_meas_oper.performance_measurement.nodes.node.interfaces.interface_delay.interface_probe_histories.interface_probe_history.pm_probe_sample_bag")
	proto.RegisterType((*PmIntfProbeHistoryBag)(nil), "cisco_ios_xr_perf_meas_oper.performance_measurement.nodes.node.interfaces.interface_delay.interface_probe_histories.interface_probe_history.pm_intf_probe_history_bag")
}

func init() { proto.RegisterFile("pm_intf_probe_history_bag.proto", fileDescriptor_77683e4354d1068e) }

var fileDescriptor_77683e4354d1068e = []byte{
	// 431 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xcc, 0x53, 0x4d, 0x8a, 0xd4, 0x40,
	0x18, 0x25, 0x3d, 0x8d, 0xa3, 0xd5, 0xd3, 0x8e, 0xd6, 0x20, 0x44, 0x17, 0x3a, 0x06, 0x84, 0xd1,
	0x45, 0x16, 0x19, 0xaf, 0x20, 0x08, 0x82, 0x8b, 0xb4, 0x88, 0xe2, 0xa2, 0xf8, 0x3a, 0xf9, 0x7a,
	0xa6, 0x30, 0xf5, 0x43, 0x55, 0x75, 0xe8, 0x3e, 0x83, 0x37, 0x70, 0xe5, 0x11, 0xdc, 0x0b, 0x9e,
	0xc3, 0xe3, 0x48, 0xbe, 0x54, 0xba, 0x27, 0x03, 0xb3, 0xef, 0x4d, 0xa8, 0xf7, 0x5e, 0xf1, 0x7d,
	0x2f, 0x2f, 0x2f, 0xec, 0x85, 0x55, 0x42, 0xea, 0xb0, 0x12, 0xd6, 0x99, 0x25, 0x8a, 0x6b, 0xe9,
	0x83, 0x71, 0x5b, 0xb1, 0x84, 0xab, 0xdc, 0x3a, 0x13, 0x0c, 0xff, 0x91, 0x54, 0xd2, 0x57, 0x46,
	0x48, 0xe3, 0xc5, 0xc6, 0x09, 0x8b, 0x6e, 0x25, 0x14, 0x82, 0x17, 0xc6, 0xa2, 0xcb, 0x3b, 0x68,
	0x9c, 0x02, 0x5d, 0x21, 0xb1, 0x6b, 0x87, 0x0a, 0x75, 0xc8, 0xb5, 0xa9, 0xd1, 0xd3, 0x33, 0x97,
	0x3a, 0xa0, 0x5b, 0x41, 0x85, 0x7e, 0x7f, 0x14, 0x35, 0x36, 0xb0, 0xbd, 0x81, 0x6f, 0x6e, 0x97,
	0xa3, 0x9b, 0x23, 0x5f, 0xd9, 0x37, 0xf6, 0xfc, 0x4e, 0xc3, 0xe2, 0xc3, 0xbb, 0xaf, 0x0b, 0xce,
	0xd9, 0xb4, 0x5b, 0x9b, 0x26, 0xe7, 0xc9, 0xc5, 0x83, 0x92, 0xce, 0xfc, 0x15, 0x7b, 0xb8, 0x1f,
	0xa8, 0x41, 0x61, 0x3a, 0x21, 0x75, 0xbe, 0x63, 0x3f, 0x82, 0xc2, 0x6c, 0xcb, 0xe6, 0x56, 0x89,
	0x16, 0x9a, 0x35, 0xfa, 0x6e, 0x20, 0x4f, 0xd9, 0x31, 0xb4, 0xe8, 0xe0, 0xaa, 0x1f, 0x37, 0x2f,
	0x07, 0xd8, 0x29, 0x4a, 0x6a, 0xa9, 0xd6, 0x8a, 0x46, 0xcd, 0xcb, 0x01, 0x92, 0x02, 0x1b, 0x52,
	0x8e, 0xa2, 0xd2, 0x43, 0xfe, 0x8c, 0xdd, 0x6f, 0xc1, 0xc9, 0x2e, 0xab, 0x74, 0x4a, 0xd2, 0x0e,
	0x67, 0xff, 0x26, 0xec, 0xcc, 0xaa, 0xf8, 0x4e, 0x1e, 0x94, 0x6d, 0x90, 0x1c, 0x14, 0xec, 0x49,
	0xe4, 0x02, 0xb8, 0x20, 0x82, 0x54, 0xe8, 0x03, 0x28, 0x4b, 0x7e, 0xa6, 0xe5, 0x19, 0x89, 0x8b,
	0x4e, 0xfb, 0x34, 0x48, 0xfc, 0x25, 0x3b, 0xb1, 0x50, 0x7d, 0xc7, 0xe0, 0x85, 0x47, 0x1d, 0xa2,
	0xc1, 0x59, 0xe4, 0x16, 0xa8, 0x03, 0x7f, 0xcd, 0x1e, 0x0d, 0x57, 0x1c, 0x56, 0x28, 0x5b, 0xac,
	0xa3, 0xdb, 0xd3, 0xc8, 0x97, 0x91, 0xe6, 0x7f, 0x13, 0x76, 0xd2, 0x5b, 0xe8, 0x83, 0x21, 0xeb,
	0xb3, 0xe2, 0x67, 0x92, 0x1f, 0x50, 0x2f, 0xf2, 0xd1, 0x77, 0x2b, 0x67, 0x24, 0x7e, 0x26, 0x22,
	0xfb, 0x3d, 0x61, 0x4f, 0xef, 0xec, 0x0c, 0x7f, 0xc3, 0x1e, 0x8f, 0xab, 0x21, 0x36, 0x2e, 0x2d,
	0xa8, 0x1d, 0xa7, 0xa3, 0x76, 0x7c, 0x71, 0x5d, 0x6a, 0xfb, 0xbb, 0xd7, 0xa0, 0xeb, 0x06, 0xd3,
	0xcb, 0x3e, 0xb5, 0x1d, 0xff, 0x9e, 0x68, 0xfe, 0x27, 0x61, 0xc7, 0x71, 0x4d, 0xfa, 0xf6, 0xfc,
	0xe8, 0x62, 0x56, 0xfc, 0x3a, 0xb8, 0xc0, 0x6e, 0x97, 0xad, 0x1c, 0x1c, 0x2f, 0xef, 0xd1, 0xaf,
	0x7f, 0xf9, 0x3f, 0x00, 0x00, 0xff, 0xff, 0x36, 0x12, 0x9a, 0x7b, 0x1d, 0x04, 0x00, 0x00,
}
