/*
Copyright 2019 Cisco Systems

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: pm_resp_intf_bag.proto

package cisco_ios_xr_perf_meas_oper_performance_measurement_responder_nodes_node_interfaces_interface

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type PmRespIntfBag_KEYS struct {
	Node                 string   `protobuf:"bytes,1,opt,name=node,proto3" json:"node,omitempty"`
	InterfaceName        string   `protobuf:"bytes,2,opt,name=interface_name,json=interfaceName,proto3" json:"interface_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PmRespIntfBag_KEYS) Reset()         { *m = PmRespIntfBag_KEYS{} }
func (m *PmRespIntfBag_KEYS) String() string { return proto.CompactTextString(m) }
func (*PmRespIntfBag_KEYS) ProtoMessage()    {}
func (*PmRespIntfBag_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_4eb2915ad2ee6bee, []int{0}
}

func (m *PmRespIntfBag_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PmRespIntfBag_KEYS.Unmarshal(m, b)
}
func (m *PmRespIntfBag_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PmRespIntfBag_KEYS.Marshal(b, m, deterministic)
}
func (m *PmRespIntfBag_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PmRespIntfBag_KEYS.Merge(m, src)
}
func (m *PmRespIntfBag_KEYS) XXX_Size() int {
	return xxx_messageInfo_PmRespIntfBag_KEYS.Size(m)
}
func (m *PmRespIntfBag_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_PmRespIntfBag_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_PmRespIntfBag_KEYS proto.InternalMessageInfo

func (m *PmRespIntfBag_KEYS) GetNode() string {
	if m != nil {
		return m.Node
	}
	return ""
}

func (m *PmRespIntfBag_KEYS) GetInterfaceName() string {
	if m != nil {
		return m.InterfaceName
	}
	return ""
}

type PmCounterRespBag struct {
	ReplyPacketSent                               uint64   `protobuf:"varint,1,opt,name=reply_packet_sent,json=replyPacketSent,proto3" json:"reply_packet_sent,omitempty"`
	ReplyPacketSentError                          uint64   `protobuf:"varint,2,opt,name=reply_packet_sent_error,json=replyPacketSentError,proto3" json:"reply_packet_sent_error,omitempty"`
	QueryPacketReceived                           uint64   `protobuf:"varint,3,opt,name=query_packet_received,json=queryPacketReceived,proto3" json:"query_packet_received,omitempty"`
	ReceivedPacketErrorUrotlvNotPresent           uint64   `protobuf:"varint,4,opt,name=received_packet_error_urotlv_not_present,json=receivedPacketErrorUrotlvNotPresent,proto3" json:"received_packet_error_urotlv_not_present,omitempty"`
	ReceivedPacketErrorInvalidSourcePortNumber    uint64   `protobuf:"varint,5,opt,name=received_packet_error_invalid_source_port_number,json=receivedPacketErrorInvalidSourcePortNumber,proto3" json:"received_packet_error_invalid_source_port_number,omitempty"`
	ReceivedPacketErrorNoSourceAddress            uint64   `protobuf:"varint,6,opt,name=received_packet_error_no_source_address,json=receivedPacketErrorNoSourceAddress,proto3" json:"received_packet_error_no_source_address,omitempty"`
	ReceivedPacketErrorNoReturnPath               uint64   `protobuf:"varint,7,opt,name=received_packet_error_no_return_path,json=receivedPacketErrorNoReturnPath,proto3" json:"received_packet_error_no_return_path,omitempty"`
	ReceivedPacketErrorInvalidQuerierControlCode  uint64   `protobuf:"varint,8,opt,name=received_packet_error_invalid_querier_control_code,json=receivedPacketErrorInvalidQuerierControlCode,proto3" json:"received_packet_error_invalid_querier_control_code,omitempty"`
	ReceivedPacketErrorUnsupportedTimestampFormat uint64   `protobuf:"varint,9,opt,name=received_packet_error_unsupported_timestamp_format,json=receivedPacketErrorUnsupportedTimestampFormat,proto3" json:"received_packet_error_unsupported_timestamp_format,omitempty"`
	ReceivedPacketErrorTimestampNotAvailable      uint64   `protobuf:"varint,10,opt,name=received_packet_error_timestamp_not_available,json=receivedPacketErrorTimestampNotAvailable,proto3" json:"received_packet_error_timestamp_not_available,omitempty"`
	ReceivedPacketErrorUnsupportedMandatoryTlv    uint64   `protobuf:"varint,11,opt,name=received_packet_error_unsupported_mandatory_tlv,json=receivedPacketErrorUnsupportedMandatoryTlv,proto3" json:"received_packet_error_unsupported_mandatory_tlv,omitempty"`
	ReceivedPacketErrorInvalidPacket              uint64   `protobuf:"varint,12,opt,name=received_packet_error_invalid_packet,json=receivedPacketErrorInvalidPacket,proto3" json:"received_packet_error_invalid_packet,omitempty"`
	XXX_NoUnkeyedLiteral                          struct{} `json:"-"`
	XXX_unrecognized                              []byte   `json:"-"`
	XXX_sizecache                                 int32    `json:"-"`
}

func (m *PmCounterRespBag) Reset()         { *m = PmCounterRespBag{} }
func (m *PmCounterRespBag) String() string { return proto.CompactTextString(m) }
func (*PmCounterRespBag) ProtoMessage()    {}
func (*PmCounterRespBag) Descriptor() ([]byte, []int) {
	return fileDescriptor_4eb2915ad2ee6bee, []int{1}
}

func (m *PmCounterRespBag) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PmCounterRespBag.Unmarshal(m, b)
}
func (m *PmCounterRespBag) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PmCounterRespBag.Marshal(b, m, deterministic)
}
func (m *PmCounterRespBag) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PmCounterRespBag.Merge(m, src)
}
func (m *PmCounterRespBag) XXX_Size() int {
	return xxx_messageInfo_PmCounterRespBag.Size(m)
}
func (m *PmCounterRespBag) XXX_DiscardUnknown() {
	xxx_messageInfo_PmCounterRespBag.DiscardUnknown(m)
}

var xxx_messageInfo_PmCounterRespBag proto.InternalMessageInfo

func (m *PmCounterRespBag) GetReplyPacketSent() uint64 {
	if m != nil {
		return m.ReplyPacketSent
	}
	return 0
}

func (m *PmCounterRespBag) GetReplyPacketSentError() uint64 {
	if m != nil {
		return m.ReplyPacketSentError
	}
	return 0
}

func (m *PmCounterRespBag) GetQueryPacketReceived() uint64 {
	if m != nil {
		return m.QueryPacketReceived
	}
	return 0
}

func (m *PmCounterRespBag) GetReceivedPacketErrorUrotlvNotPresent() uint64 {
	if m != nil {
		return m.ReceivedPacketErrorUrotlvNotPresent
	}
	return 0
}

func (m *PmCounterRespBag) GetReceivedPacketErrorInvalidSourcePortNumber() uint64 {
	if m != nil {
		return m.ReceivedPacketErrorInvalidSourcePortNumber
	}
	return 0
}

func (m *PmCounterRespBag) GetReceivedPacketErrorNoSourceAddress() uint64 {
	if m != nil {
		return m.ReceivedPacketErrorNoSourceAddress
	}
	return 0
}

func (m *PmCounterRespBag) GetReceivedPacketErrorNoReturnPath() uint64 {
	if m != nil {
		return m.ReceivedPacketErrorNoReturnPath
	}
	return 0
}

func (m *PmCounterRespBag) GetReceivedPacketErrorInvalidQuerierControlCode() uint64 {
	if m != nil {
		return m.ReceivedPacketErrorInvalidQuerierControlCode
	}
	return 0
}

func (m *PmCounterRespBag) GetReceivedPacketErrorUnsupportedTimestampFormat() uint64 {
	if m != nil {
		return m.ReceivedPacketErrorUnsupportedTimestampFormat
	}
	return 0
}

func (m *PmCounterRespBag) GetReceivedPacketErrorTimestampNotAvailable() uint64 {
	if m != nil {
		return m.ReceivedPacketErrorTimestampNotAvailable
	}
	return 0
}

func (m *PmCounterRespBag) GetReceivedPacketErrorUnsupportedMandatoryTlv() uint64 {
	if m != nil {
		return m.ReceivedPacketErrorUnsupportedMandatoryTlv
	}
	return 0
}

func (m *PmCounterRespBag) GetReceivedPacketErrorInvalidPacket() uint64 {
	if m != nil {
		return m.ReceivedPacketErrorInvalidPacket
	}
	return 0
}

type PmRespIntfBag struct {
	InterfaceNameXr         string            `protobuf:"bytes,50,opt,name=interface_name_xr,json=interfaceNameXr,proto3" json:"interface_name_xr,omitempty"`
	InterfaceHandle         uint32            `protobuf:"varint,51,opt,name=interface_handle,json=interfaceHandle,proto3" json:"interface_handle,omitempty"`
	SourceAddress           string            `protobuf:"bytes,52,opt,name=source_address,json=sourceAddress,proto3" json:"source_address,omitempty"`
	SourceV6Address         string            `protobuf:"bytes,53,opt,name=source_v6_address,json=sourceV6Address,proto3" json:"source_v6_address,omitempty"`
	PacketRate              uint32            `protobuf:"varint,54,opt,name=packet_rate,json=packetRate,proto3" json:"packet_rate,omitempty"`
	PacketRateHighWaterMark uint32            `protobuf:"varint,55,opt,name=packet_rate_high_water_mark,json=packetRateHighWaterMark,proto3" json:"packet_rate_high_water_mark,omitempty"`
	CleanupTimeRemaining    uint32            `protobuf:"varint,56,opt,name=cleanup_time_remaining,json=cleanupTimeRemaining,proto3" json:"cleanup_time_remaining,omitempty"`
	InterfaceCounters       *PmCounterRespBag `protobuf:"bytes,57,opt,name=interface_counters,json=interfaceCounters,proto3" json:"interface_counters,omitempty"`
	XXX_NoUnkeyedLiteral    struct{}          `json:"-"`
	XXX_unrecognized        []byte            `json:"-"`
	XXX_sizecache           int32             `json:"-"`
}

func (m *PmRespIntfBag) Reset()         { *m = PmRespIntfBag{} }
func (m *PmRespIntfBag) String() string { return proto.CompactTextString(m) }
func (*PmRespIntfBag) ProtoMessage()    {}
func (*PmRespIntfBag) Descriptor() ([]byte, []int) {
	return fileDescriptor_4eb2915ad2ee6bee, []int{2}
}

func (m *PmRespIntfBag) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PmRespIntfBag.Unmarshal(m, b)
}
func (m *PmRespIntfBag) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PmRespIntfBag.Marshal(b, m, deterministic)
}
func (m *PmRespIntfBag) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PmRespIntfBag.Merge(m, src)
}
func (m *PmRespIntfBag) XXX_Size() int {
	return xxx_messageInfo_PmRespIntfBag.Size(m)
}
func (m *PmRespIntfBag) XXX_DiscardUnknown() {
	xxx_messageInfo_PmRespIntfBag.DiscardUnknown(m)
}

var xxx_messageInfo_PmRespIntfBag proto.InternalMessageInfo

func (m *PmRespIntfBag) GetInterfaceNameXr() string {
	if m != nil {
		return m.InterfaceNameXr
	}
	return ""
}

func (m *PmRespIntfBag) GetInterfaceHandle() uint32 {
	if m != nil {
		return m.InterfaceHandle
	}
	return 0
}

func (m *PmRespIntfBag) GetSourceAddress() string {
	if m != nil {
		return m.SourceAddress
	}
	return ""
}

func (m *PmRespIntfBag) GetSourceV6Address() string {
	if m != nil {
		return m.SourceV6Address
	}
	return ""
}

func (m *PmRespIntfBag) GetPacketRate() uint32 {
	if m != nil {
		return m.PacketRate
	}
	return 0
}

func (m *PmRespIntfBag) GetPacketRateHighWaterMark() uint32 {
	if m != nil {
		return m.PacketRateHighWaterMark
	}
	return 0
}

func (m *PmRespIntfBag) GetCleanupTimeRemaining() uint32 {
	if m != nil {
		return m.CleanupTimeRemaining
	}
	return 0
}

func (m *PmRespIntfBag) GetInterfaceCounters() *PmCounterRespBag {
	if m != nil {
		return m.InterfaceCounters
	}
	return nil
}

func init() {
	proto.RegisterType((*PmRespIntfBag_KEYS)(nil), "cisco_ios_xr_perf_meas_oper.performance_measurement_responder.nodes.node.interfaces.interface.pm_resp_intf_bag_KEYS")
	proto.RegisterType((*PmCounterRespBag)(nil), "cisco_ios_xr_perf_meas_oper.performance_measurement_responder.nodes.node.interfaces.interface.pm_counter_resp_bag")
	proto.RegisterType((*PmRespIntfBag)(nil), "cisco_ios_xr_perf_meas_oper.performance_measurement_responder.nodes.node.interfaces.interface.pm_resp_intf_bag")
}

func init() { proto.RegisterFile("pm_resp_intf_bag.proto", fileDescriptor_4eb2915ad2ee6bee) }

var fileDescriptor_4eb2915ad2ee6bee = []byte{
	// 724 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x55, 0xdd, 0x4f, 0xe3, 0x46,
	0x10, 0x57, 0x4a, 0x0a, 0x65, 0x29, 0x05, 0x96, 0xaf, 0x95, 0xfa, 0x40, 0x94, 0xb6, 0x6a, 0x8a,
	0x4a, 0x5a, 0x85, 0x8f, 0xb6, 0x52, 0x5f, 0x10, 0xa2, 0xa2, 0xaa, 0x88, 0x52, 0x07, 0xfa, 0xf1,
	0x70, 0x1a, 0x6d, 0xec, 0x21, 0xb1, 0xb0, 0x77, 0x7d, 0xe3, 0x75, 0x0e, 0xfe, 0x9c, 0xfb, 0x23,
	0x4f, 0xba, 0xc7, 0x93, 0xc7, 0x71, 0x02, 0x39, 0xe7, 0xee, 0xe9, 0x5e, 0x22, 0x67, 0xe6, 0xf7,
	0x61, 0xef, 0x8c, 0x7f, 0x16, 0x7b, 0x49, 0x0c, 0x84, 0x69, 0x02, 0xa1, 0x71, 0x77, 0x30, 0xd0,
	0xc3, 0x76, 0x42, 0xd6, 0x59, 0xf9, 0xc2, 0x0f, 0x53, 0xdf, 0x42, 0x68, 0x53, 0x78, 0x20, 0x48,
	0x90, 0xee, 0x20, 0x46, 0x9d, 0x82, 0x4d, 0x90, 0xda, 0xf9, 0x5f, 0x4b, 0xb1, 0x36, 0x3e, 0x72,
	0x35, 0x23, 0x8c, 0xd1, 0x38, 0x16, 0xb2, 0x26, 0x40, 0x6a, 0x1b, 0x1b, 0x60, 0xca, 0xbf, 0xed,
	0xd0, 0x38, 0xa4, 0x3b, 0xed, 0x63, 0x3a, 0xbb, 0x6c, 0x7a, 0x62, 0x77, 0xde, 0x18, 0xfe, 0xba,
	0xfc, 0xbf, 0x2f, 0xa5, 0xa8, 0xe7, 0x2c, 0x55, 0x6b, 0xd4, 0x5a, 0xab, 0x1e, 0x5f, 0xcb, 0xef,
	0xc4, 0x57, 0x53, 0x26, 0x18, 0x1d, 0xa3, 0xfa, 0x8c, 0xbb, 0xeb, 0xd3, 0x6a, 0x57, 0xc7, 0xd8,
	0x7c, 0xbb, 0x22, 0xb6, 0x93, 0x18, 0x7c, 0x9b, 0xe5, 0xe5, 0x42, 0x7c, 0xa0, 0x87, 0xf2, 0x50,
	0x6c, 0x11, 0x26, 0xd1, 0x23, 0x24, 0xda, 0xbf, 0x47, 0x07, 0x29, 0x1a, 0xc7, 0xfa, 0x75, 0x6f,
	0x83, 0x1b, 0x3d, 0xae, 0xf7, 0xd1, 0x38, 0x79, 0x2a, 0xf6, 0xdf, 0xc3, 0x02, 0x12, 0x59, 0x62,
	0xcf, 0xba, 0xb7, 0x33, 0xc7, 0xb8, 0xcc, 0x7b, 0xb2, 0x23, 0x76, 0x5f, 0x66, 0x48, 0x53, 0x1a,
	0xa1, 0x8f, 0xe1, 0x18, 0x03, 0xb5, 0xc4, 0xa4, 0x6d, 0x6e, 0x16, 0x24, 0x6f, 0xd2, 0x92, 0xb7,
	0xa2, 0x55, 0xc2, 0x4a, 0x1a, 0x1b, 0x41, 0x46, 0xd6, 0x45, 0x63, 0x30, 0xd6, 0x41, 0x42, 0xc8,
	0x77, 0x5b, 0x67, 0x99, 0x6f, 0x4a, 0x7c, 0xa1, 0xc4, 0xd6, 0xb7, 0x0c, 0xee, 0x5a, 0xd7, 0x2b,
	0xa0, 0x32, 0x10, 0x3f, 0x57, 0xcb, 0x86, 0x66, 0xac, 0xa3, 0x30, 0x80, 0xd4, 0x66, 0xe4, 0x23,
	0x24, 0x96, 0x1c, 0x98, 0x2c, 0x1e, 0x20, 0xa9, 0xcf, 0x59, 0xfe, 0xb0, 0x42, 0xfe, 0xcf, 0x82,
	0xd4, 0x67, 0x4e, 0xcf, 0x92, 0xeb, 0x32, 0x43, 0xf6, 0xc5, 0xf7, 0xd5, 0x2e, 0xc6, 0x96, 0x06,
	0x3a, 0x08, 0x08, 0xd3, 0x54, 0x2d, 0xb3, 0x78, 0xb3, 0x42, 0xbc, 0x6b, 0x0b, 0xdd, 0xf3, 0x02,
	0x29, 0xaf, 0xc5, 0xb7, 0x0b, 0x45, 0x09, 0x5d, 0x46, 0x06, 0x12, 0xed, 0x46, 0x6a, 0x85, 0x15,
	0x0f, 0x2a, 0x15, 0x3d, 0xc6, 0xf5, 0xb4, 0x1b, 0xc9, 0x91, 0xe8, 0x7c, 0xf8, 0x24, 0xf2, 0xa9,
	0x84, 0x48, 0xe0, 0x5b, 0xe3, 0xc8, 0x46, 0xe0, 0xe7, 0x8b, 0xf7, 0x05, 0x8b, 0xff, 0xb8, 0xf8,
	0x2c, 0xfe, 0x2e, 0x58, 0x17, 0x05, 0xe9, 0x22, 0x5f, 0xd0, 0x70, 0x91, 0x53, 0x66, 0xd2, 0x2c,
	0xc9, 0x4f, 0x1a, 0x03, 0x70, 0x61, 0x8c, 0xa9, 0xd3, 0x71, 0x02, 0xfc, 0xee, 0x38, 0xb5, 0xca,
	0x4e, 0x47, 0x55, 0x43, 0x9d, 0xd1, 0x6e, 0x4a, 0xd6, 0x1f, 0x4c, 0x92, 0x20, 0x8e, 0xaa, 0xad,
	0x66, 0xf2, 0xf9, 0xe2, 0xe8, 0xb1, 0x0e, 0x23, 0x3d, 0x88, 0x50, 0x09, 0x76, 0x69, 0x55, 0xb8,
	0x4c, 0xa5, 0xbb, 0xd6, 0x9d, 0x97, 0x78, 0xe9, 0x8b, 0x9f, 0x3e, 0xfe, 0x2c, 0xb1, 0x36, 0x81,
	0x76, 0x96, 0x1e, 0xc1, 0x45, 0x63, 0xb5, 0xb6, 0x70, 0x7d, 0x9e, 0x3c, 0xc8, 0x75, 0x49, 0xb9,
	0x89, 0xc6, 0xb2, 0xbb, 0x68, 0xd2, 0xe5, 0x68, 0x8a, 0xa2, 0xfa, 0x92, 0x95, 0x1b, 0x8b, 0x87,
	0x51, 0x54, 0x9a, 0x6f, 0x96, 0xc4, 0xe6, 0x7c, 0x9e, 0xe4, 0xef, 0xfd, 0xf3, 0xd8, 0x80, 0x07,
	0x52, 0x1d, 0x4e, 0x8e, 0x8d, 0x67, 0xc9, 0xf1, 0x1f, 0xc9, 0x1f, 0xc4, 0xe6, 0x0c, 0x3b, 0xd2,
	0x26, 0x88, 0x50, 0x1d, 0x37, 0x6a, 0xad, 0xf5, 0x27, 0xd0, 0x2b, 0x2e, 0xe7, 0x69, 0x34, 0xb7,
	0xe1, 0x27, 0x45, 0x1a, 0xa5, 0xcf, 0x96, 0xf9, 0x50, 0x6c, 0x4d, 0x60, 0xe3, 0xb3, 0x29, 0xf2,
	0xb4, 0x70, 0x2f, 0x1a, 0xff, 0x9c, 0x95, 0xd8, 0x03, 0xb1, 0x56, 0x06, 0x87, 0x76, 0xa8, 0xce,
	0xd8, 0x58, 0x14, 0x25, 0x4f, 0x3b, 0x94, 0xbf, 0x8b, 0xaf, 0x9f, 0x00, 0x60, 0x14, 0x0e, 0x47,
	0xf0, 0x4a, 0xe7, 0x29, 0x17, 0x6b, 0xba, 0x57, 0xbf, 0x30, 0x61, 0x7f, 0x46, 0xb8, 0x0a, 0x87,
	0xa3, 0x7f, 0xf3, 0xfe, 0xb5, 0xa6, 0x7b, 0x79, 0x22, 0xf6, 0xfc, 0x08, 0xb5, 0xc9, 0x12, 0xde,
	0x12, 0x20, 0x8c, 0x75, 0x68, 0x42, 0x33, 0x54, 0xbf, 0x32, 0x71, 0x67, 0xd2, 0xcd, 0x17, 0xc2,
	0x2b, 0x7b, 0xf2, 0x75, 0x4d, 0xc8, 0xd9, 0x99, 0x4c, 0x52, 0x35, 0x55, 0xbf, 0x35, 0x6a, 0xad,
	0xb5, 0x0e, 0xb5, 0x3f, 0xe9, 0xf7, 0xa1, 0x5d, 0x91, 0xe3, 0xde, 0x6c, 0x9a, 0x17, 0x93, 0x9b,
	0x19, 0x2c, 0xf3, 0xc7, 0xea, 0xf8, 0x5d, 0x00, 0x00, 0x00, 0xff, 0xff, 0x4d, 0xdf, 0x70, 0x76,
	0xc6, 0x06, 0x00, 0x00,
}
