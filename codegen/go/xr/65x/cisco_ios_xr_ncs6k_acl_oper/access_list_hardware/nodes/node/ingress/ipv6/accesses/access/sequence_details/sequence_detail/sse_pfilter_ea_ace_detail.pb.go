/*
Copyright 2019 Cisco Systems

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: sse_pfilter_ea_ace_detail.proto

package cisco_ios_xr_ncs6k_acl_oper_access_list_hardware_nodes_node_ingress_ipv6_accesses_access_sequence_details_sequence_detail

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type SsePfilterEaAceDetail_KEYS struct {
	NodeName             string   `protobuf:"bytes,1,opt,name=node_name,json=nodeName,proto3" json:"node_name,omitempty"`
	AccessListName       string   `protobuf:"bytes,2,opt,name=access_list_name,json=accessListName,proto3" json:"access_list_name,omitempty"`
	SequenceNumber       uint32   `protobuf:"varint,3,opt,name=sequence_number,json=sequenceNumber,proto3" json:"sequence_number,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SsePfilterEaAceDetail_KEYS) Reset()         { *m = SsePfilterEaAceDetail_KEYS{} }
func (m *SsePfilterEaAceDetail_KEYS) String() string { return proto.CompactTextString(m) }
func (*SsePfilterEaAceDetail_KEYS) ProtoMessage()    {}
func (*SsePfilterEaAceDetail_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_896cfd0ea4cbeffc, []int{0}
}

func (m *SsePfilterEaAceDetail_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SsePfilterEaAceDetail_KEYS.Unmarshal(m, b)
}
func (m *SsePfilterEaAceDetail_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SsePfilterEaAceDetail_KEYS.Marshal(b, m, deterministic)
}
func (m *SsePfilterEaAceDetail_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SsePfilterEaAceDetail_KEYS.Merge(m, src)
}
func (m *SsePfilterEaAceDetail_KEYS) XXX_Size() int {
	return xxx_messageInfo_SsePfilterEaAceDetail_KEYS.Size(m)
}
func (m *SsePfilterEaAceDetail_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_SsePfilterEaAceDetail_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_SsePfilterEaAceDetail_KEYS proto.InternalMessageInfo

func (m *SsePfilterEaAceDetail_KEYS) GetNodeName() string {
	if m != nil {
		return m.NodeName
	}
	return ""
}

func (m *SsePfilterEaAceDetail_KEYS) GetAccessListName() string {
	if m != nil {
		return m.AccessListName
	}
	return ""
}

func (m *SsePfilterEaAceDetail_KEYS) GetSequenceNumber() uint32 {
	if m != nil {
		return m.SequenceNumber
	}
	return 0
}

type SsePfilterNextHopAddrType struct {
	AddressType          string   `protobuf:"bytes,1,opt,name=address_type,json=addressType,proto3" json:"address_type,omitempty"`
	Ipv4Address          string   `protobuf:"bytes,2,opt,name=ipv4_address,json=ipv4Address,proto3" json:"ipv4_address,omitempty"`
	Ipv6Address          string   `protobuf:"bytes,3,opt,name=ipv6_address,json=ipv6Address,proto3" json:"ipv6_address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SsePfilterNextHopAddrType) Reset()         { *m = SsePfilterNextHopAddrType{} }
func (m *SsePfilterNextHopAddrType) String() string { return proto.CompactTextString(m) }
func (*SsePfilterNextHopAddrType) ProtoMessage()    {}
func (*SsePfilterNextHopAddrType) Descriptor() ([]byte, []int) {
	return fileDescriptor_896cfd0ea4cbeffc, []int{1}
}

func (m *SsePfilterNextHopAddrType) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SsePfilterNextHopAddrType.Unmarshal(m, b)
}
func (m *SsePfilterNextHopAddrType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SsePfilterNextHopAddrType.Marshal(b, m, deterministic)
}
func (m *SsePfilterNextHopAddrType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SsePfilterNextHopAddrType.Merge(m, src)
}
func (m *SsePfilterNextHopAddrType) XXX_Size() int {
	return xxx_messageInfo_SsePfilterNextHopAddrType.Size(m)
}
func (m *SsePfilterNextHopAddrType) XXX_DiscardUnknown() {
	xxx_messageInfo_SsePfilterNextHopAddrType.DiscardUnknown(m)
}

var xxx_messageInfo_SsePfilterNextHopAddrType proto.InternalMessageInfo

func (m *SsePfilterNextHopAddrType) GetAddressType() string {
	if m != nil {
		return m.AddressType
	}
	return ""
}

func (m *SsePfilterNextHopAddrType) GetIpv4Address() string {
	if m != nil {
		return m.Ipv4Address
	}
	return ""
}

func (m *SsePfilterNextHopAddrType) GetIpv6Address() string {
	if m != nil {
		return m.Ipv6Address
	}
	return ""
}

type SsePfilterEaAceDataBrief struct {
	Grant                 string                     `protobuf:"bytes,1,opt,name=grant,proto3" json:"grant,omitempty"`
	LoggingEnabled        bool                       `protobuf:"varint,2,opt,name=logging_enabled,json=loggingEnabled,proto3" json:"logging_enabled,omitempty"`
	PerAceIcmpEnabled     bool                       `protobuf:"varint,3,opt,name=per_ace_icmp_enabled,json=perAceIcmpEnabled,proto3" json:"per_ace_icmp_enabled,omitempty"`
	NextHopEnabled        bool                       `protobuf:"varint,4,opt,name=next_hop_enabled,json=nextHopEnabled,proto3" json:"next_hop_enabled,omitempty"`
	DefaultNextHopEnabled bool                       `protobuf:"varint,5,opt,name=default_next_hop_enabled,json=defaultNextHopEnabled,proto3" json:"default_next_hop_enabled,omitempty"`
	TotalTcamEntries      uint32                     `protobuf:"varint,6,opt,name=total_tcam_entries,json=totalTcamEntries,proto3" json:"total_tcam_entries,omitempty"`
	Hits                  uint64                     `protobuf:"varint,7,opt,name=hits,proto3" json:"hits,omitempty"`
	NextHopAddress        *SsePfilterNextHopAddrType `protobuf:"bytes,8,opt,name=next_hop_address,json=nextHopAddress,proto3" json:"next_hop_address,omitempty"`
	NpuId                 uint32                     `protobuf:"varint,9,opt,name=npu_id,json=npuId,proto3" json:"npu_id,omitempty"`
	XXX_NoUnkeyedLiteral  struct{}                   `json:"-"`
	XXX_unrecognized      []byte                     `json:"-"`
	XXX_sizecache         int32                      `json:"-"`
}

func (m *SsePfilterEaAceDataBrief) Reset()         { *m = SsePfilterEaAceDataBrief{} }
func (m *SsePfilterEaAceDataBrief) String() string { return proto.CompactTextString(m) }
func (*SsePfilterEaAceDataBrief) ProtoMessage()    {}
func (*SsePfilterEaAceDataBrief) Descriptor() ([]byte, []int) {
	return fileDescriptor_896cfd0ea4cbeffc, []int{2}
}

func (m *SsePfilterEaAceDataBrief) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SsePfilterEaAceDataBrief.Unmarshal(m, b)
}
func (m *SsePfilterEaAceDataBrief) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SsePfilterEaAceDataBrief.Marshal(b, m, deterministic)
}
func (m *SsePfilterEaAceDataBrief) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SsePfilterEaAceDataBrief.Merge(m, src)
}
func (m *SsePfilterEaAceDataBrief) XXX_Size() int {
	return xxx_messageInfo_SsePfilterEaAceDataBrief.Size(m)
}
func (m *SsePfilterEaAceDataBrief) XXX_DiscardUnknown() {
	xxx_messageInfo_SsePfilterEaAceDataBrief.DiscardUnknown(m)
}

var xxx_messageInfo_SsePfilterEaAceDataBrief proto.InternalMessageInfo

func (m *SsePfilterEaAceDataBrief) GetGrant() string {
	if m != nil {
		return m.Grant
	}
	return ""
}

func (m *SsePfilterEaAceDataBrief) GetLoggingEnabled() bool {
	if m != nil {
		return m.LoggingEnabled
	}
	return false
}

func (m *SsePfilterEaAceDataBrief) GetPerAceIcmpEnabled() bool {
	if m != nil {
		return m.PerAceIcmpEnabled
	}
	return false
}

func (m *SsePfilterEaAceDataBrief) GetNextHopEnabled() bool {
	if m != nil {
		return m.NextHopEnabled
	}
	return false
}

func (m *SsePfilterEaAceDataBrief) GetDefaultNextHopEnabled() bool {
	if m != nil {
		return m.DefaultNextHopEnabled
	}
	return false
}

func (m *SsePfilterEaAceDataBrief) GetTotalTcamEntries() uint32 {
	if m != nil {
		return m.TotalTcamEntries
	}
	return 0
}

func (m *SsePfilterEaAceDataBrief) GetHits() uint64 {
	if m != nil {
		return m.Hits
	}
	return 0
}

func (m *SsePfilterEaAceDataBrief) GetNextHopAddress() *SsePfilterNextHopAddrType {
	if m != nil {
		return m.NextHopAddress
	}
	return nil
}

func (m *SsePfilterEaAceDataBrief) GetNpuId() uint32 {
	if m != nil {
		return m.NpuId
	}
	return 0
}

type SsePfilterTcpFlags struct {
	Urgent               uint32   `protobuf:"varint,1,opt,name=urgent,proto3" json:"urgent,omitempty"`
	Acknowledge          uint32   `protobuf:"varint,2,opt,name=acknowledge,proto3" json:"acknowledge,omitempty"`
	Push                 uint32   `protobuf:"varint,3,opt,name=push,proto3" json:"push,omitempty"`
	Reset_               uint32   `protobuf:"varint,4,opt,name=reset,proto3" json:"reset,omitempty"`
	Synchronization      uint32   `protobuf:"varint,5,opt,name=synchronization,proto3" json:"synchronization,omitempty"`
	Finish               uint32   `protobuf:"varint,6,opt,name=finish,proto3" json:"finish,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SsePfilterTcpFlags) Reset()         { *m = SsePfilterTcpFlags{} }
func (m *SsePfilterTcpFlags) String() string { return proto.CompactTextString(m) }
func (*SsePfilterTcpFlags) ProtoMessage()    {}
func (*SsePfilterTcpFlags) Descriptor() ([]byte, []int) {
	return fileDescriptor_896cfd0ea4cbeffc, []int{3}
}

func (m *SsePfilterTcpFlags) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SsePfilterTcpFlags.Unmarshal(m, b)
}
func (m *SsePfilterTcpFlags) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SsePfilterTcpFlags.Marshal(b, m, deterministic)
}
func (m *SsePfilterTcpFlags) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SsePfilterTcpFlags.Merge(m, src)
}
func (m *SsePfilterTcpFlags) XXX_Size() int {
	return xxx_messageInfo_SsePfilterTcpFlags.Size(m)
}
func (m *SsePfilterTcpFlags) XXX_DiscardUnknown() {
	xxx_messageInfo_SsePfilterTcpFlags.DiscardUnknown(m)
}

var xxx_messageInfo_SsePfilterTcpFlags proto.InternalMessageInfo

func (m *SsePfilterTcpFlags) GetUrgent() uint32 {
	if m != nil {
		return m.Urgent
	}
	return 0
}

func (m *SsePfilterTcpFlags) GetAcknowledge() uint32 {
	if m != nil {
		return m.Acknowledge
	}
	return 0
}

func (m *SsePfilterTcpFlags) GetPush() uint32 {
	if m != nil {
		return m.Push
	}
	return 0
}

func (m *SsePfilterTcpFlags) GetReset_() uint32 {
	if m != nil {
		return m.Reset_
	}
	return 0
}

func (m *SsePfilterTcpFlags) GetSynchronization() uint32 {
	if m != nil {
		return m.Synchronization
	}
	return 0
}

func (m *SsePfilterTcpFlags) GetFinish() uint32 {
	if m != nil {
		return m.Finish
	}
	return 0
}

type SsePfilterIpv4Tcam struct {
	AclId                 uint32              `protobuf:"varint,1,opt,name=acl_id,json=aclId,proto3" json:"acl_id,omitempty"`
	TcpFlags              *SsePfilterTcpFlags `protobuf:"bytes,2,opt,name=tcp_flags,json=tcpFlags,proto3" json:"tcp_flags,omitempty"`
	SourceRangeId         uint32              `protobuf:"varint,3,opt,name=source_range_id,json=sourceRangeId,proto3" json:"source_range_id,omitempty"`
	DestinationRangeId    uint32              `protobuf:"varint,4,opt,name=destination_range_id,json=destinationRangeId,proto3" json:"destination_range_id,omitempty"`
	SourceAddress         string              `protobuf:"bytes,5,opt,name=source_address,json=sourceAddress,proto3" json:"source_address,omitempty"`
	Protocol              uint32              `protobuf:"varint,6,opt,name=protocol,proto3" json:"protocol,omitempty"`
	Fragment              uint32              `protobuf:"varint,7,opt,name=fragment,proto3" json:"fragment,omitempty"`
	Dscp                  uint32              `protobuf:"varint,8,opt,name=dscp,proto3" json:"dscp,omitempty"`
	Ttl                   uint32              `protobuf:"varint,9,opt,name=ttl,proto3" json:"ttl,omitempty"`
	Layer4SourcePort      uint32              `protobuf:"varint,10,opt,name=layer4_source_port,json=layer4SourcePort,proto3" json:"layer4_source_port,omitempty"`
	DestinationAddress    string              `protobuf:"bytes,11,opt,name=destination_address,json=destinationAddress,proto3" json:"destination_address,omitempty"`
	Layer4DestinationPort uint32              `protobuf:"varint,12,opt,name=layer4_destination_port,json=layer4DestinationPort,proto3" json:"layer4_destination_port,omitempty"`
	PacketLengthRange     uint32              `protobuf:"varint,13,opt,name=packet_length_range,json=packetLengthRange,proto3" json:"packet_length_range,omitempty"`
	XXX_NoUnkeyedLiteral  struct{}            `json:"-"`
	XXX_unrecognized      []byte              `json:"-"`
	XXX_sizecache         int32               `json:"-"`
}

func (m *SsePfilterIpv4Tcam) Reset()         { *m = SsePfilterIpv4Tcam{} }
func (m *SsePfilterIpv4Tcam) String() string { return proto.CompactTextString(m) }
func (*SsePfilterIpv4Tcam) ProtoMessage()    {}
func (*SsePfilterIpv4Tcam) Descriptor() ([]byte, []int) {
	return fileDescriptor_896cfd0ea4cbeffc, []int{4}
}

func (m *SsePfilterIpv4Tcam) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SsePfilterIpv4Tcam.Unmarshal(m, b)
}
func (m *SsePfilterIpv4Tcam) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SsePfilterIpv4Tcam.Marshal(b, m, deterministic)
}
func (m *SsePfilterIpv4Tcam) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SsePfilterIpv4Tcam.Merge(m, src)
}
func (m *SsePfilterIpv4Tcam) XXX_Size() int {
	return xxx_messageInfo_SsePfilterIpv4Tcam.Size(m)
}
func (m *SsePfilterIpv4Tcam) XXX_DiscardUnknown() {
	xxx_messageInfo_SsePfilterIpv4Tcam.DiscardUnknown(m)
}

var xxx_messageInfo_SsePfilterIpv4Tcam proto.InternalMessageInfo

func (m *SsePfilterIpv4Tcam) GetAclId() uint32 {
	if m != nil {
		return m.AclId
	}
	return 0
}

func (m *SsePfilterIpv4Tcam) GetTcpFlags() *SsePfilterTcpFlags {
	if m != nil {
		return m.TcpFlags
	}
	return nil
}

func (m *SsePfilterIpv4Tcam) GetSourceRangeId() uint32 {
	if m != nil {
		return m.SourceRangeId
	}
	return 0
}

func (m *SsePfilterIpv4Tcam) GetDestinationRangeId() uint32 {
	if m != nil {
		return m.DestinationRangeId
	}
	return 0
}

func (m *SsePfilterIpv4Tcam) GetSourceAddress() string {
	if m != nil {
		return m.SourceAddress
	}
	return ""
}

func (m *SsePfilterIpv4Tcam) GetProtocol() uint32 {
	if m != nil {
		return m.Protocol
	}
	return 0
}

func (m *SsePfilterIpv4Tcam) GetFragment() uint32 {
	if m != nil {
		return m.Fragment
	}
	return 0
}

func (m *SsePfilterIpv4Tcam) GetDscp() uint32 {
	if m != nil {
		return m.Dscp
	}
	return 0
}

func (m *SsePfilterIpv4Tcam) GetTtl() uint32 {
	if m != nil {
		return m.Ttl
	}
	return 0
}

func (m *SsePfilterIpv4Tcam) GetLayer4SourcePort() uint32 {
	if m != nil {
		return m.Layer4SourcePort
	}
	return 0
}

func (m *SsePfilterIpv4Tcam) GetDestinationAddress() string {
	if m != nil {
		return m.DestinationAddress
	}
	return ""
}

func (m *SsePfilterIpv4Tcam) GetLayer4DestinationPort() uint32 {
	if m != nil {
		return m.Layer4DestinationPort
	}
	return 0
}

func (m *SsePfilterIpv4Tcam) GetPacketLengthRange() uint32 {
	if m != nil {
		return m.PacketLengthRange
	}
	return 0
}

type SsePfilterTcamEntryIpv4 struct {
	Value                *SsePfilterIpv4Tcam `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	Mask                 *SsePfilterIpv4Tcam `protobuf:"bytes,2,opt,name=mask,proto3" json:"mask,omitempty"`
	Result               *SsePfilterIpv4Tcam `protobuf:"bytes,3,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *SsePfilterTcamEntryIpv4) Reset()         { *m = SsePfilterTcamEntryIpv4{} }
func (m *SsePfilterTcamEntryIpv4) String() string { return proto.CompactTextString(m) }
func (*SsePfilterTcamEntryIpv4) ProtoMessage()    {}
func (*SsePfilterTcamEntryIpv4) Descriptor() ([]byte, []int) {
	return fileDescriptor_896cfd0ea4cbeffc, []int{5}
}

func (m *SsePfilterTcamEntryIpv4) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SsePfilterTcamEntryIpv4.Unmarshal(m, b)
}
func (m *SsePfilterTcamEntryIpv4) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SsePfilterTcamEntryIpv4.Marshal(b, m, deterministic)
}
func (m *SsePfilterTcamEntryIpv4) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SsePfilterTcamEntryIpv4.Merge(m, src)
}
func (m *SsePfilterTcamEntryIpv4) XXX_Size() int {
	return xxx_messageInfo_SsePfilterTcamEntryIpv4.Size(m)
}
func (m *SsePfilterTcamEntryIpv4) XXX_DiscardUnknown() {
	xxx_messageInfo_SsePfilterTcamEntryIpv4.DiscardUnknown(m)
}

var xxx_messageInfo_SsePfilterTcamEntryIpv4 proto.InternalMessageInfo

func (m *SsePfilterTcamEntryIpv4) GetValue() *SsePfilterIpv4Tcam {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *SsePfilterTcamEntryIpv4) GetMask() *SsePfilterIpv4Tcam {
	if m != nil {
		return m.Mask
	}
	return nil
}

func (m *SsePfilterTcamEntryIpv4) GetResult() *SsePfilterIpv4Tcam {
	if m != nil {
		return m.Result
	}
	return nil
}

type SseIpv4PfilterTcam struct {
	TcamEntry            *SsePfilterTcamEntryIpv4 `protobuf:"bytes,1,opt,name=tcam_entry,json=tcamEntry,proto3" json:"tcam_entry,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *SseIpv4PfilterTcam) Reset()         { *m = SseIpv4PfilterTcam{} }
func (m *SseIpv4PfilterTcam) String() string { return proto.CompactTextString(m) }
func (*SseIpv4PfilterTcam) ProtoMessage()    {}
func (*SseIpv4PfilterTcam) Descriptor() ([]byte, []int) {
	return fileDescriptor_896cfd0ea4cbeffc, []int{6}
}

func (m *SseIpv4PfilterTcam) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SseIpv4PfilterTcam.Unmarshal(m, b)
}
func (m *SseIpv4PfilterTcam) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SseIpv4PfilterTcam.Marshal(b, m, deterministic)
}
func (m *SseIpv4PfilterTcam) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SseIpv4PfilterTcam.Merge(m, src)
}
func (m *SseIpv4PfilterTcam) XXX_Size() int {
	return xxx_messageInfo_SseIpv4PfilterTcam.Size(m)
}
func (m *SseIpv4PfilterTcam) XXX_DiscardUnknown() {
	xxx_messageInfo_SseIpv4PfilterTcam.DiscardUnknown(m)
}

var xxx_messageInfo_SseIpv4PfilterTcam proto.InternalMessageInfo

func (m *SseIpv4PfilterTcam) GetTcamEntry() *SsePfilterTcamEntryIpv4 {
	if m != nil {
		return m.TcamEntry
	}
	return nil
}

type SsePfilterIpv6Tcam struct {
	AclId                      uint32              `protobuf:"varint,1,opt,name=acl_id,json=aclId,proto3" json:"acl_id,omitempty"`
	Protocol                   uint32              `protobuf:"varint,2,opt,name=protocol,proto3" json:"protocol,omitempty"`
	Layer4SourcePort           uint32              `protobuf:"varint,3,opt,name=layer4_source_port,json=layer4SourcePort,proto3" json:"layer4_source_port,omitempty"`
	Layer4DestinationPort      uint32              `protobuf:"varint,4,opt,name=layer4_destination_port,json=layer4DestinationPort,proto3" json:"layer4_destination_port,omitempty"`
	SourceRangeId              uint32              `protobuf:"varint,5,opt,name=source_range_id,json=sourceRangeId,proto3" json:"source_range_id,omitempty"`
	DestinationRangeId         uint32              `protobuf:"varint,6,opt,name=destination_range_id,json=destinationRangeId,proto3" json:"destination_range_id,omitempty"`
	TcpFlags                   *SsePfilterTcpFlags `protobuf:"bytes,7,opt,name=tcp_flags,json=tcpFlags,proto3" json:"tcp_flags,omitempty"`
	DestinationHeader          uint32              `protobuf:"varint,8,opt,name=destination_header,json=destinationHeader,proto3" json:"destination_header,omitempty"`
	ReceiveTransitionGapHeader uint32              `protobuf:"varint,9,opt,name=receive_transition_gap_header,json=receiveTransitionGapHeader,proto3" json:"receive_transition_gap_header,omitempty"`
	AuthenticationHeader       uint32              `protobuf:"varint,10,opt,name=authentication_header,json=authenticationHeader,proto3" json:"authentication_header,omitempty"`
	Fragment                   uint32              `protobuf:"varint,11,opt,name=fragment,proto3" json:"fragment,omitempty"`
	Tos                        uint32              `protobuf:"varint,12,opt,name=tos,proto3" json:"tos,omitempty"`
	PacketLengthRange          uint32              `protobuf:"varint,13,opt,name=packet_length_range,json=packetLengthRange,proto3" json:"packet_length_range,omitempty"`
	XXX_NoUnkeyedLiteral       struct{}            `json:"-"`
	XXX_unrecognized           []byte              `json:"-"`
	XXX_sizecache              int32               `json:"-"`
}

func (m *SsePfilterIpv6Tcam) Reset()         { *m = SsePfilterIpv6Tcam{} }
func (m *SsePfilterIpv6Tcam) String() string { return proto.CompactTextString(m) }
func (*SsePfilterIpv6Tcam) ProtoMessage()    {}
func (*SsePfilterIpv6Tcam) Descriptor() ([]byte, []int) {
	return fileDescriptor_896cfd0ea4cbeffc, []int{7}
}

func (m *SsePfilterIpv6Tcam) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SsePfilterIpv6Tcam.Unmarshal(m, b)
}
func (m *SsePfilterIpv6Tcam) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SsePfilterIpv6Tcam.Marshal(b, m, deterministic)
}
func (m *SsePfilterIpv6Tcam) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SsePfilterIpv6Tcam.Merge(m, src)
}
func (m *SsePfilterIpv6Tcam) XXX_Size() int {
	return xxx_messageInfo_SsePfilterIpv6Tcam.Size(m)
}
func (m *SsePfilterIpv6Tcam) XXX_DiscardUnknown() {
	xxx_messageInfo_SsePfilterIpv6Tcam.DiscardUnknown(m)
}

var xxx_messageInfo_SsePfilterIpv6Tcam proto.InternalMessageInfo

func (m *SsePfilterIpv6Tcam) GetAclId() uint32 {
	if m != nil {
		return m.AclId
	}
	return 0
}

func (m *SsePfilterIpv6Tcam) GetProtocol() uint32 {
	if m != nil {
		return m.Protocol
	}
	return 0
}

func (m *SsePfilterIpv6Tcam) GetLayer4SourcePort() uint32 {
	if m != nil {
		return m.Layer4SourcePort
	}
	return 0
}

func (m *SsePfilterIpv6Tcam) GetLayer4DestinationPort() uint32 {
	if m != nil {
		return m.Layer4DestinationPort
	}
	return 0
}

func (m *SsePfilterIpv6Tcam) GetSourceRangeId() uint32 {
	if m != nil {
		return m.SourceRangeId
	}
	return 0
}

func (m *SsePfilterIpv6Tcam) GetDestinationRangeId() uint32 {
	if m != nil {
		return m.DestinationRangeId
	}
	return 0
}

func (m *SsePfilterIpv6Tcam) GetTcpFlags() *SsePfilterTcpFlags {
	if m != nil {
		return m.TcpFlags
	}
	return nil
}

func (m *SsePfilterIpv6Tcam) GetDestinationHeader() uint32 {
	if m != nil {
		return m.DestinationHeader
	}
	return 0
}

func (m *SsePfilterIpv6Tcam) GetReceiveTransitionGapHeader() uint32 {
	if m != nil {
		return m.ReceiveTransitionGapHeader
	}
	return 0
}

func (m *SsePfilterIpv6Tcam) GetAuthenticationHeader() uint32 {
	if m != nil {
		return m.AuthenticationHeader
	}
	return 0
}

func (m *SsePfilterIpv6Tcam) GetFragment() uint32 {
	if m != nil {
		return m.Fragment
	}
	return 0
}

func (m *SsePfilterIpv6Tcam) GetTos() uint32 {
	if m != nil {
		return m.Tos
	}
	return 0
}

func (m *SsePfilterIpv6Tcam) GetPacketLengthRange() uint32 {
	if m != nil {
		return m.PacketLengthRange
	}
	return 0
}

type SsePfilterTcamEntryIpv6 struct {
	SourceAddress          string              `protobuf:"bytes,1,opt,name=source_address,json=sourceAddress,proto3" json:"source_address,omitempty"`
	SourceAddressMask      string              `protobuf:"bytes,2,opt,name=source_address_mask,json=sourceAddressMask,proto3" json:"source_address_mask,omitempty"`
	DestinationAddress     string              `protobuf:"bytes,3,opt,name=destination_address,json=destinationAddress,proto3" json:"destination_address,omitempty"`
	DestinationAddressMask string              `protobuf:"bytes,4,opt,name=destination_address_mask,json=destinationAddressMask,proto3" json:"destination_address_mask,omitempty"`
	Value                  *SsePfilterIpv6Tcam `protobuf:"bytes,5,opt,name=value,proto3" json:"value,omitempty"`
	Mask                   *SsePfilterIpv6Tcam `protobuf:"bytes,6,opt,name=mask,proto3" json:"mask,omitempty"`
	Result                 *SsePfilterIpv6Tcam `protobuf:"bytes,7,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral   struct{}            `json:"-"`
	XXX_unrecognized       []byte              `json:"-"`
	XXX_sizecache          int32               `json:"-"`
}

func (m *SsePfilterTcamEntryIpv6) Reset()         { *m = SsePfilterTcamEntryIpv6{} }
func (m *SsePfilterTcamEntryIpv6) String() string { return proto.CompactTextString(m) }
func (*SsePfilterTcamEntryIpv6) ProtoMessage()    {}
func (*SsePfilterTcamEntryIpv6) Descriptor() ([]byte, []int) {
	return fileDescriptor_896cfd0ea4cbeffc, []int{8}
}

func (m *SsePfilterTcamEntryIpv6) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SsePfilterTcamEntryIpv6.Unmarshal(m, b)
}
func (m *SsePfilterTcamEntryIpv6) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SsePfilterTcamEntryIpv6.Marshal(b, m, deterministic)
}
func (m *SsePfilterTcamEntryIpv6) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SsePfilterTcamEntryIpv6.Merge(m, src)
}
func (m *SsePfilterTcamEntryIpv6) XXX_Size() int {
	return xxx_messageInfo_SsePfilterTcamEntryIpv6.Size(m)
}
func (m *SsePfilterTcamEntryIpv6) XXX_DiscardUnknown() {
	xxx_messageInfo_SsePfilterTcamEntryIpv6.DiscardUnknown(m)
}

var xxx_messageInfo_SsePfilterTcamEntryIpv6 proto.InternalMessageInfo

func (m *SsePfilterTcamEntryIpv6) GetSourceAddress() string {
	if m != nil {
		return m.SourceAddress
	}
	return ""
}

func (m *SsePfilterTcamEntryIpv6) GetSourceAddressMask() string {
	if m != nil {
		return m.SourceAddressMask
	}
	return ""
}

func (m *SsePfilterTcamEntryIpv6) GetDestinationAddress() string {
	if m != nil {
		return m.DestinationAddress
	}
	return ""
}

func (m *SsePfilterTcamEntryIpv6) GetDestinationAddressMask() string {
	if m != nil {
		return m.DestinationAddressMask
	}
	return ""
}

func (m *SsePfilterTcamEntryIpv6) GetValue() *SsePfilterIpv6Tcam {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *SsePfilterTcamEntryIpv6) GetMask() *SsePfilterIpv6Tcam {
	if m != nil {
		return m.Mask
	}
	return nil
}

func (m *SsePfilterTcamEntryIpv6) GetResult() *SsePfilterIpv6Tcam {
	if m != nil {
		return m.Result
	}
	return nil
}

type SseIpv6PfilterTcam struct {
	TcamEntry            *SsePfilterTcamEntryIpv6 `protobuf:"bytes,1,opt,name=tcam_entry,json=tcamEntry,proto3" json:"tcam_entry,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *SseIpv6PfilterTcam) Reset()         { *m = SseIpv6PfilterTcam{} }
func (m *SseIpv6PfilterTcam) String() string { return proto.CompactTextString(m) }
func (*SseIpv6PfilterTcam) ProtoMessage()    {}
func (*SseIpv6PfilterTcam) Descriptor() ([]byte, []int) {
	return fileDescriptor_896cfd0ea4cbeffc, []int{9}
}

func (m *SseIpv6PfilterTcam) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SseIpv6PfilterTcam.Unmarshal(m, b)
}
func (m *SseIpv6PfilterTcam) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SseIpv6PfilterTcam.Marshal(b, m, deterministic)
}
func (m *SseIpv6PfilterTcam) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SseIpv6PfilterTcam.Merge(m, src)
}
func (m *SseIpv6PfilterTcam) XXX_Size() int {
	return xxx_messageInfo_SseIpv6PfilterTcam.Size(m)
}
func (m *SseIpv6PfilterTcam) XXX_DiscardUnknown() {
	xxx_messageInfo_SseIpv6PfilterTcam.DiscardUnknown(m)
}

var xxx_messageInfo_SseIpv6PfilterTcam proto.InternalMessageInfo

func (m *SseIpv6PfilterTcam) GetTcamEntry() *SsePfilterTcamEntryIpv6 {
	if m != nil {
		return m.TcamEntry
	}
	return nil
}

type SsePfilterEaAce struct {
	EntryId              int32               `protobuf:"zigzag32,1,opt,name=entry_id,json=entryId,proto3" json:"entry_id,omitempty"`
	Ipv4Tcam             *SseIpv4PfilterTcam `protobuf:"bytes,2,opt,name=ipv4tcam,proto3" json:"ipv4tcam,omitempty"`
	Ipv6Tcam             *SseIpv6PfilterTcam `protobuf:"bytes,3,opt,name=ipv6tcam,proto3" json:"ipv6tcam,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *SsePfilterEaAce) Reset()         { *m = SsePfilterEaAce{} }
func (m *SsePfilterEaAce) String() string { return proto.CompactTextString(m) }
func (*SsePfilterEaAce) ProtoMessage()    {}
func (*SsePfilterEaAce) Descriptor() ([]byte, []int) {
	return fileDescriptor_896cfd0ea4cbeffc, []int{10}
}

func (m *SsePfilterEaAce) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SsePfilterEaAce.Unmarshal(m, b)
}
func (m *SsePfilterEaAce) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SsePfilterEaAce.Marshal(b, m, deterministic)
}
func (m *SsePfilterEaAce) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SsePfilterEaAce.Merge(m, src)
}
func (m *SsePfilterEaAce) XXX_Size() int {
	return xxx_messageInfo_SsePfilterEaAce.Size(m)
}
func (m *SsePfilterEaAce) XXX_DiscardUnknown() {
	xxx_messageInfo_SsePfilterEaAce.DiscardUnknown(m)
}

var xxx_messageInfo_SsePfilterEaAce proto.InternalMessageInfo

func (m *SsePfilterEaAce) GetEntryId() int32 {
	if m != nil {
		return m.EntryId
	}
	return 0
}

func (m *SsePfilterEaAce) GetIpv4Tcam() *SseIpv4PfilterTcam {
	if m != nil {
		return m.Ipv4Tcam
	}
	return nil
}

func (m *SsePfilterEaAce) GetIpv6Tcam() *SseIpv6PfilterTcam {
	if m != nil {
		return m.Ipv6Tcam
	}
	return nil
}

type SsePfilterEaAceDataDetail struct {
	AceBrief             *SsePfilterEaAceDataBrief `protobuf:"bytes,1,opt,name=ace_brief,json=aceBrief,proto3" json:"ace_brief,omitempty"`
	AceDetail            []*SsePfilterEaAce        `protobuf:"bytes,2,rep,name=ace_detail,json=aceDetail,proto3" json:"ace_detail,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *SsePfilterEaAceDataDetail) Reset()         { *m = SsePfilterEaAceDataDetail{} }
func (m *SsePfilterEaAceDataDetail) String() string { return proto.CompactTextString(m) }
func (*SsePfilterEaAceDataDetail) ProtoMessage()    {}
func (*SsePfilterEaAceDataDetail) Descriptor() ([]byte, []int) {
	return fileDescriptor_896cfd0ea4cbeffc, []int{11}
}

func (m *SsePfilterEaAceDataDetail) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SsePfilterEaAceDataDetail.Unmarshal(m, b)
}
func (m *SsePfilterEaAceDataDetail) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SsePfilterEaAceDataDetail.Marshal(b, m, deterministic)
}
func (m *SsePfilterEaAceDataDetail) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SsePfilterEaAceDataDetail.Merge(m, src)
}
func (m *SsePfilterEaAceDataDetail) XXX_Size() int {
	return xxx_messageInfo_SsePfilterEaAceDataDetail.Size(m)
}
func (m *SsePfilterEaAceDataDetail) XXX_DiscardUnknown() {
	xxx_messageInfo_SsePfilterEaAceDataDetail.DiscardUnknown(m)
}

var xxx_messageInfo_SsePfilterEaAceDataDetail proto.InternalMessageInfo

func (m *SsePfilterEaAceDataDetail) GetAceBrief() *SsePfilterEaAceDataBrief {
	if m != nil {
		return m.AceBrief
	}
	return nil
}

func (m *SsePfilterEaAceDataDetail) GetAceDetail() []*SsePfilterEaAce {
	if m != nil {
		return m.AceDetail
	}
	return nil
}

type SsePfilterEaAceDetail struct {
	CommonAclDetail      []*SsePfilterEaAceDataDetail `protobuf:"bytes,50,rep,name=common_acl_detail,json=commonAclDetail,proto3" json:"common_acl_detail,omitempty"`
	InterfaceAclDetail   []*SsePfilterEaAceDataDetail `protobuf:"bytes,51,rep,name=interface_acl_detail,json=interfaceAclDetail,proto3" json:"interface_acl_detail,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                     `json:"-"`
	XXX_unrecognized     []byte                       `json:"-"`
	XXX_sizecache        int32                        `json:"-"`
}

func (m *SsePfilterEaAceDetail) Reset()         { *m = SsePfilterEaAceDetail{} }
func (m *SsePfilterEaAceDetail) String() string { return proto.CompactTextString(m) }
func (*SsePfilterEaAceDetail) ProtoMessage()    {}
func (*SsePfilterEaAceDetail) Descriptor() ([]byte, []int) {
	return fileDescriptor_896cfd0ea4cbeffc, []int{12}
}

func (m *SsePfilterEaAceDetail) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SsePfilterEaAceDetail.Unmarshal(m, b)
}
func (m *SsePfilterEaAceDetail) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SsePfilterEaAceDetail.Marshal(b, m, deterministic)
}
func (m *SsePfilterEaAceDetail) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SsePfilterEaAceDetail.Merge(m, src)
}
func (m *SsePfilterEaAceDetail) XXX_Size() int {
	return xxx_messageInfo_SsePfilterEaAceDetail.Size(m)
}
func (m *SsePfilterEaAceDetail) XXX_DiscardUnknown() {
	xxx_messageInfo_SsePfilterEaAceDetail.DiscardUnknown(m)
}

var xxx_messageInfo_SsePfilterEaAceDetail proto.InternalMessageInfo

func (m *SsePfilterEaAceDetail) GetCommonAclDetail() []*SsePfilterEaAceDataDetail {
	if m != nil {
		return m.CommonAclDetail
	}
	return nil
}

func (m *SsePfilterEaAceDetail) GetInterfaceAclDetail() []*SsePfilterEaAceDataDetail {
	if m != nil {
		return m.InterfaceAclDetail
	}
	return nil
}

func init() {
	proto.RegisterType((*SsePfilterEaAceDetail_KEYS)(nil), "cisco_ios_xr_ncs6k_acl_oper.access_list_hardware.nodes.node.ingress.ipv6.accesses.access.sequence_details.sequence_detail.sse_pfilter_ea_ace_detail_KEYS")
	proto.RegisterType((*SsePfilterNextHopAddrType)(nil), "cisco_ios_xr_ncs6k_acl_oper.access_list_hardware.nodes.node.ingress.ipv6.accesses.access.sequence_details.sequence_detail.sse_pfilter_next_hop_addr_type")
	proto.RegisterType((*SsePfilterEaAceDataBrief)(nil), "cisco_ios_xr_ncs6k_acl_oper.access_list_hardware.nodes.node.ingress.ipv6.accesses.access.sequence_details.sequence_detail.sse_pfilter_ea_ace_data_brief")
	proto.RegisterType((*SsePfilterTcpFlags)(nil), "cisco_ios_xr_ncs6k_acl_oper.access_list_hardware.nodes.node.ingress.ipv6.accesses.access.sequence_details.sequence_detail.sse_pfilter_tcp_flags")
	proto.RegisterType((*SsePfilterIpv4Tcam)(nil), "cisco_ios_xr_ncs6k_acl_oper.access_list_hardware.nodes.node.ingress.ipv6.accesses.access.sequence_details.sequence_detail.sse_pfilter_ipv4_tcam")
	proto.RegisterType((*SsePfilterTcamEntryIpv4)(nil), "cisco_ios_xr_ncs6k_acl_oper.access_list_hardware.nodes.node.ingress.ipv6.accesses.access.sequence_details.sequence_detail.sse_pfilter_tcam_entry_ipv4")
	proto.RegisterType((*SseIpv4PfilterTcam)(nil), "cisco_ios_xr_ncs6k_acl_oper.access_list_hardware.nodes.node.ingress.ipv6.accesses.access.sequence_details.sequence_detail.sse_ipv4_pfilter_tcam")
	proto.RegisterType((*SsePfilterIpv6Tcam)(nil), "cisco_ios_xr_ncs6k_acl_oper.access_list_hardware.nodes.node.ingress.ipv6.accesses.access.sequence_details.sequence_detail.sse_pfilter_ipv6_tcam")
	proto.RegisterType((*SsePfilterTcamEntryIpv6)(nil), "cisco_ios_xr_ncs6k_acl_oper.access_list_hardware.nodes.node.ingress.ipv6.accesses.access.sequence_details.sequence_detail.sse_pfilter_tcam_entry_ipv6")
	proto.RegisterType((*SseIpv6PfilterTcam)(nil), "cisco_ios_xr_ncs6k_acl_oper.access_list_hardware.nodes.node.ingress.ipv6.accesses.access.sequence_details.sequence_detail.sse_ipv6_pfilter_tcam")
	proto.RegisterType((*SsePfilterEaAce)(nil), "cisco_ios_xr_ncs6k_acl_oper.access_list_hardware.nodes.node.ingress.ipv6.accesses.access.sequence_details.sequence_detail.sse_pfilter_ea_ace")
	proto.RegisterType((*SsePfilterEaAceDataDetail)(nil), "cisco_ios_xr_ncs6k_acl_oper.access_list_hardware.nodes.node.ingress.ipv6.accesses.access.sequence_details.sequence_detail.sse_pfilter_ea_ace_data_detail")
	proto.RegisterType((*SsePfilterEaAceDetail)(nil), "cisco_ios_xr_ncs6k_acl_oper.access_list_hardware.nodes.node.ingress.ipv6.accesses.access.sequence_details.sequence_detail.sse_pfilter_ea_ace_detail")
}

func init() { proto.RegisterFile("sse_pfilter_ea_ace_detail.proto", fileDescriptor_896cfd0ea4cbeffc) }

var fileDescriptor_896cfd0ea4cbeffc = []byte{
	// 1271 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xd4, 0x58, 0xcd, 0x6f, 0x1b, 0x45,
	0x14, 0xd7, 0xd6, 0x1f, 0xb1, 0xc7, 0x75, 0x12, 0x4f, 0x92, 0xe2, 0xb6, 0x2a, 0x18, 0x4b, 0x80,
	0x0f, 0xe0, 0xa2, 0xa4, 0x5a, 0xb8, 0x06, 0x35, 0xd0, 0x88, 0x12, 0xa1, 0x6d, 0x2e, 0x9c, 0x46,
	0x93, 0xd9, 0xf1, 0x7a, 0x94, 0xf5, 0xec, 0x32, 0x33, 0x4e, 0x6b, 0xee, 0x1c, 0x7a, 0x40, 0x54,
	0x1c, 0x10, 0x15, 0x67, 0x84, 0x38, 0x94, 0x0b, 0x12, 0x37, 0x24, 0x0e, 0x88, 0x13, 0x07, 0xfe,
	0x01, 0xfe, 0x17, 0x34, 0x1f, 0xbb, 0x5e, 0xc7, 0x76, 0xa4, 0x9e, 0x58, 0x2e, 0xd1, 0xce, 0xfb,
	0x98, 0xf9, 0xbd, 0x37, 0xef, 0xfd, 0x9e, 0x33, 0xe0, 0x35, 0x29, 0x29, 0x4a, 0x47, 0x2c, 0x56,
	0x54, 0x20, 0x8a, 0x11, 0x26, 0x14, 0x85, 0x54, 0x61, 0x16, 0x0f, 0x53, 0x91, 0xa8, 0x04, 0xce,
	0x08, 0x93, 0x24, 0x41, 0x2c, 0x91, 0xe8, 0x89, 0x40, 0x9c, 0x48, 0xff, 0x1c, 0x61, 0x12, 0xa3,
	0x24, 0xa5, 0x62, 0x88, 0x09, 0xa1, 0x52, 0xa2, 0x98, 0x49, 0x85, 0xc6, 0x58, 0x84, 0x8f, 0xb1,
	0xa0, 0x43, 0x9e, 0x84, 0x54, 0x9a, 0xbf, 0x43, 0xc6, 0x23, 0x41, 0xa5, 0x1c, 0xb2, 0xf4, 0xc2,
	0x77, 0xc6, 0x54, 0xba, 0x8f, 0xa1, 0xa4, 0x9f, 0x4f, 0x29, 0xcf, 0xcf, 0x5b, 0x12, 0xf4, 0x9f,
	0x79, 0xe0, 0xd5, 0xb5, 0xf0, 0xd0, 0xc7, 0x47, 0x9f, 0x3d, 0x82, 0xb7, 0x41, 0x53, 0x1f, 0x84,
	0x38, 0x9e, 0xd0, 0xae, 0xd7, 0xf3, 0x06, 0xcd, 0xa0, 0xa1, 0x05, 0x27, 0x78, 0x42, 0xe1, 0x00,
	0x6c, 0x17, 0x01, 0x1a, 0x9b, 0x6b, 0xc6, 0x66, 0xd3, 0xca, 0x1f, 0x32, 0xa9, 0x8c, 0xe5, 0x5b,
	0x60, 0x2b, 0x3f, 0x9c, 0x4f, 0x27, 0x67, 0x54, 0x74, 0x2b, 0x3d, 0x6f, 0xd0, 0x0e, 0x36, 0x33,
	0xf1, 0x89, 0x91, 0xf6, 0x9f, 0x5e, 0x82, 0xc4, 0xe9, 0x13, 0x85, 0xc6, 0x49, 0x8a, 0x70, 0x18,
	0x0a, 0xa4, 0x66, 0x29, 0x85, 0xaf, 0x83, 0xeb, 0x7a, 0xa1, 0x8f, 0xd5, 0x6b, 0x87, 0xaa, 0xe5,
	0x64, 0xa7, 0xce, 0x84, 0xa5, 0x17, 0xf7, 0x90, 0x93, 0x39, 0x50, 0x2d, 0x2d, 0x3b, 0xb4, 0x22,
	0x67, 0xe2, 0xe7, 0x26, 0x95, 0xdc, 0xc4, 0x77, 0x26, 0xfd, 0x6f, 0xaa, 0xe0, 0xce, 0xaa, 0xf4,
	0x60, 0x85, 0xd1, 0x99, 0x60, 0x74, 0x04, 0x77, 0x41, 0x2d, 0x12, 0x98, 0x2b, 0x87, 0xc1, 0x2e,
	0x74, 0xb0, 0x71, 0x12, 0x45, 0x8c, 0x47, 0x88, 0x72, 0x7c, 0x16, 0xd3, 0xd0, 0x00, 0x68, 0x04,
	0x9b, 0x4e, 0x7c, 0x64, 0xa5, 0xf0, 0x2e, 0xd8, 0x4d, 0xa9, 0x30, 0x9b, 0x32, 0x32, 0x49, 0x73,
	0xeb, 0x8a, 0xb1, 0xee, 0xa4, 0x54, 0x1c, 0x12, 0x7a, 0x4c, 0x26, 0x69, 0xe6, 0x30, 0x00, 0xdb,
	0x79, 0x42, 0x32, 0xe3, 0xaa, 0xdd, 0x5a, 0xcb, 0x1f, 0x24, 0xb9, 0xe5, 0x7b, 0xa0, 0x1b, 0xd2,
	0x11, 0x9e, 0xc6, 0x0a, 0x2d, 0x79, 0xd4, 0x8c, 0xc7, 0x9e, 0xd3, 0x9f, 0x2c, 0x3a, 0xbe, 0x0d,
	0xa0, 0x4a, 0x14, 0x8e, 0x91, 0x22, 0x78, 0x82, 0x28, 0x57, 0x82, 0x51, 0xd9, 0xad, 0x9b, 0xcb,
	0xda, 0x36, 0x9a, 0x53, 0x82, 0x27, 0x47, 0x56, 0x0e, 0x21, 0xa8, 0x8e, 0x99, 0x92, 0xdd, 0x8d,
	0x9e, 0x37, 0xa8, 0x06, 0xe6, 0x1b, 0xfe, 0xe1, 0x15, 0x50, 0x66, 0xe9, 0x6d, 0xf4, 0xbc, 0x41,
	0x6b, 0xff, 0xb9, 0x37, 0xfc, 0xcf, 0xaa, 0x7d, 0x78, 0x75, 0x59, 0xe5, 0x19, 0xcc, 0x0a, 0x64,
	0x0f, 0xd4, 0x79, 0x3a, 0x45, 0x2c, 0xec, 0x36, 0x4d, 0xf0, 0x35, 0x9e, 0x4e, 0x8f, 0xc3, 0xfe,
	0x6f, 0x1e, 0xd8, 0x2b, 0xee, 0xa4, 0x48, 0x8a, 0x46, 0x31, 0x8e, 0x24, 0xbc, 0x01, 0xea, 0x53,
	0x11, 0x51, 0x57, 0x0d, 0xed, 0xc0, 0xad, 0x60, 0x0f, 0xb4, 0x30, 0x39, 0xe7, 0xc9, 0xe3, 0x98,
	0x86, 0x91, 0x6d, 0x90, 0x76, 0x50, 0x14, 0xe9, 0x2c, 0xa6, 0x53, 0x39, 0x76, 0x2d, 0x61, 0xbe,
	0x75, 0x69, 0x09, 0x2a, 0xa9, 0x32, 0xf7, 0xdb, 0x0e, 0xec, 0x02, 0x0e, 0xc0, 0x96, 0x9c, 0x71,
	0x32, 0x16, 0x09, 0x67, 0x5f, 0x60, 0xc5, 0x12, 0x6e, 0x6e, 0xb3, 0x1d, 0x5c, 0x16, 0x6b, 0x34,
	0x23, 0xc6, 0x99, 0x1c, 0xbb, 0xbb, 0x73, 0xab, 0xfe, 0x97, 0xb5, 0x45, 0xfc, 0xa6, 0x4f, 0xf4,
	0x5d, 0xeb, 0x80, 0xf5, 0x4d, 0xb0, 0xd0, 0xe1, 0xaf, 0x61, 0x12, 0x1f, 0x87, 0xf0, 0x67, 0x0f,
	0x34, 0xf3, 0x20, 0x0d, 0xfa, 0xd6, 0xfe, 0xb3, 0xb2, 0xdc, 0x63, 0x0e, 0x2c, 0x68, 0x28, 0x92,
	0x7e, 0x68, 0xee, 0xe1, 0x4d, 0xb0, 0x25, 0x93, 0xa9, 0x20, 0x14, 0x09, 0xcc, 0x23, 0xaa, 0x03,
	0xb2, 0x89, 0x6d, 0x5b, 0x71, 0xa0, 0xa5, 0xc7, 0x21, 0x7c, 0x17, 0xec, 0x86, 0x54, 0x2a, 0xc6,
	0x4d, 0xc2, 0xe6, 0xc6, 0x36, 0xe1, 0xb0, 0xa0, 0xcb, 0x3c, 0xde, 0x00, 0x9b, 0x6e, 0xe7, 0xac,
	0xac, 0x6b, 0xa6, 0xef, 0xdd, 0xc6, 0x59, 0xe5, 0xdc, 0x02, 0x0d, 0x43, 0xed, 0x24, 0x89, 0x5d,
	0xf2, 0xf3, 0xb5, 0xd6, 0x8d, 0x04, 0x8e, 0x26, 0xba, 0x4c, 0x36, 0xac, 0x2e, 0x5b, 0xeb, 0x32,
	0x08, 0x25, 0x49, 0x4d, 0xaf, 0xb4, 0x03, 0xf3, 0x0d, 0xb7, 0x41, 0x45, 0xa9, 0xd8, 0x95, 0xa0,
	0xfe, 0xd4, 0x0d, 0x1a, 0xe3, 0x19, 0x15, 0xf7, 0x90, 0xc3, 0x92, 0x26, 0x42, 0x75, 0x81, 0x6d,
	0x50, 0xab, 0x79, 0x64, 0x14, 0x9f, 0x26, 0x42, 0xc1, 0xbb, 0x60, 0xa7, 0x18, 0x64, 0x86, 0xbb,
	0x65, 0x70, 0x17, 0x63, 0xcc, 0xc0, 0xfb, 0xe0, 0x15, 0xb7, 0x7d, 0xd1, 0xcf, 0x9c, 0x71, 0xdd,
	0x9c, 0xb1, 0x67, 0xd5, 0xf7, 0xe7, 0x5a, 0x73, 0xd0, 0x10, 0xec, 0xa4, 0x98, 0x9c, 0x53, 0x85,
	0x62, 0xca, 0x23, 0x35, 0xb6, 0xf9, 0xec, 0xb6, 0x8d, 0x4f, 0xc7, 0xaa, 0x1e, 0x1a, 0x8d, 0xc9,
	0x66, 0xff, 0xfb, 0x2a, 0xb8, 0xbd, 0x78, 0x93, 0x8e, 0x6e, 0x66, 0xa6, 0x24, 0xe1, 0x8f, 0x1e,
	0xa8, 0x5d, 0xe0, 0x78, 0x6a, 0xf9, 0xbd, 0x44, 0x25, 0x97, 0x37, 0x4c, 0x60, 0xf1, 0xc1, 0x1f,
	0x3c, 0x50, 0x9d, 0x60, 0x79, 0x5e, 0xb6, 0xde, 0x98, 0x03, 0x35, 0xf0, 0xe0, 0x4f, 0x1e, 0xa8,
	0x0b, 0x2a, 0xa7, 0xb1, 0x32, 0xfd, 0x50, 0x4a, 0xa4, 0x0e, 0x60, 0xff, 0x6f, 0xc7, 0xb2, 0x46,
	0x53, 0x2c, 0x11, 0xf8, 0xab, 0x07, 0xc0, 0xbc, 0x56, 0x5c, 0x71, 0x7c, 0x5b, 0x1e, 0x3e, 0x5a,
	0xa8, 0xe2, 0xa0, 0xa9, 0xdc, 0xb0, 0x9c, 0xf5, 0x7f, 0x5f, 0x26, 0x5e, 0xff, 0x4a, 0xe2, 0x2d,
	0xd2, 0xc8, 0xb5, 0x4b, 0x34, 0xb2, 0x9a, 0x04, 0x2a, 0x6b, 0x48, 0xe0, 0x8a, 0x9e, 0xae, 0x5e,
	0xd5, 0xd3, 0x2b, 0x98, 0xb4, 0xf6, 0x32, 0x4c, 0x5a, 0x5f, 0xcb, 0xa4, 0x8b, 0x43, 0x65, 0xa3,
	0xfc, 0x43, 0xe5, 0x1d, 0x50, 0x0c, 0x03, 0x8d, 0x29, 0x0e, 0xa9, 0x70, 0x4c, 0xdd, 0x29, 0x68,
	0x1e, 0x18, 0x05, 0x3c, 0x04, 0x77, 0x04, 0x25, 0x94, 0x5d, 0x50, 0xa4, 0x04, 0xe6, 0x92, 0x19,
	0xaf, 0x08, 0xa7, 0x99, 0xa7, 0x25, 0xf4, 0x5b, 0xce, 0xe8, 0x34, 0xb7, 0xf9, 0x08, 0xa7, 0x6e,
	0x8b, 0x03, 0xb0, 0x87, 0xa7, 0x6a, 0x4c, 0xb9, 0x62, 0x64, 0xe1, 0x50, 0x4b, 0xf5, 0xbb, 0x8b,
	0x4a, 0xe7, 0x54, 0x1c, 0x2f, 0xad, 0x4b, 0xe3, 0x45, 0x8f, 0x92, 0x44, 0x3a, 0x16, 0xd7, 0x9f,
	0x2f, 0xcd, 0xd9, 0xff, 0xd4, 0xae, 0xe2, 0x6c, 0x7f, 0xc5, 0x7c, 0xf4, 0x56, 0xcd, 0xc7, 0x21,
	0xd8, 0x59, 0x34, 0x43, 0x39, 0x7d, 0x36, 0x83, 0xce, 0x82, 0xed, 0x27, 0x9a, 0xb8, 0xd6, 0xcc,
	0xb0, 0xca, 0xda, 0x19, 0xf6, 0xbe, 0xfe, 0xf1, 0xbb, 0xe4, 0x60, 0x4f, 0xa9, 0x1a, 0xaf, 0x1b,
	0xcb, 0x5e, 0xe6, 0xa8, 0xf9, 0xd4, 0xa9, 0x95, 0x8e, 0x22, 0xfd, 0xd5, 0x53, 0xa7, 0x5e, 0x56,
	0xa0, 0x4b, 0x53, 0x67, 0xa3, 0xac, 0x48, 0x57, 0x4c, 0x1d, 0xff, 0xff, 0x3b, 0x75, 0xfc, 0xe2,
	0xd4, 0xf9, 0xba, 0x02, 0xe0, 0xf2, 0xff, 0xb0, 0xf0, 0x26, 0x68, 0x38, 0x7b, 0x3b, 0x74, 0x3a,
	0xc1, 0x86, 0x59, 0x1f, 0x87, 0xf0, 0x85, 0x07, 0x1a, 0x7a, 0x76, 0xe9, 0x3d, 0xca, 0xf2, 0x93,
	0x66, 0xe9, 0x67, 0x40, 0x90, 0x43, 0xcc, 0xf0, 0xfa, 0x06, 0x6f, 0xa5, 0x34, 0x78, 0xfd, 0x65,
	0xbc, 0x06, 0x62, 0xff, 0x69, 0x65, 0xf5, 0xa3, 0x0b, 0x56, 0xd8, 0x6d, 0xa1, 0xab, 0xad, 0xa9,
	0x65, 0xe6, 0x91, 0xc1, 0x15, 0xdb, 0x77, 0x65, 0x29, 0xb6, 0xa5, 0x57, 0x90, 0xa0, 0x81, 0x09,
	0xfd, 0xc0, 0xbc, 0x87, 0xbc, 0xf0, 0x00, 0x98, 0xbf, 0x20, 0x75, 0xaf, 0xf5, 0x2a, 0x83, 0xd6,
	0xfe, 0x57, 0xe5, 0x42, 0x1e, 0xe8, 0xd4, 0xde, 0xb7, 0x0f, 0x60, 0xbf, 0x54, 0xc0, 0xcd, 0xb5,
	0x0f, 0x60, 0xf0, 0x4f, 0x0f, 0x74, 0x48, 0x32, 0x99, 0xe8, 0x11, 0x42, 0xe2, 0x2c, 0xa8, 0x7d,
	0x13, 0xd4, 0xf3, 0x32, 0x5e, 0x87, 0x55, 0x07, 0x5b, 0x16, 0xf4, 0x21, 0x89, 0x6d, 0x98, 0xf0,
	0x2f, 0x0f, 0xec, 0x32, 0xae, 0xa8, 0x18, 0x69, 0xd3, 0x42, 0x2c, 0x07, 0xa5, 0x8f, 0x05, 0xe6,
	0xb8, 0xf3, 0x70, 0xce, 0xea, 0xe6, 0x67, 0xf0, 0xc1, 0xbf, 0x01, 0x00, 0x00, 0xff, 0xff, 0xa9,
	0x86, 0x37, 0x04, 0x5b, 0x15, 0x00, 0x00,
}
