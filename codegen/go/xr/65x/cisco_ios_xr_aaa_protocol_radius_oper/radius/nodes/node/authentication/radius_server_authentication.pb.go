/*
Copyright 2019 Cisco Systems

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: radius_server_authentication.proto

package cisco_ios_xr_aaa_protocol_radius_oper_radius_nodes_node_authentication

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type RadiusServerAuthentication_KEYS struct {
	NodeName             string   `protobuf:"bytes,1,opt,name=node_name,json=nodeName,proto3" json:"node_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RadiusServerAuthentication_KEYS) Reset()         { *m = RadiusServerAuthentication_KEYS{} }
func (m *RadiusServerAuthentication_KEYS) String() string { return proto.CompactTextString(m) }
func (*RadiusServerAuthentication_KEYS) ProtoMessage()    {}
func (*RadiusServerAuthentication_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_c83c3bc73b2dc8be, []int{0}
}

func (m *RadiusServerAuthentication_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RadiusServerAuthentication_KEYS.Unmarshal(m, b)
}
func (m *RadiusServerAuthentication_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RadiusServerAuthentication_KEYS.Marshal(b, m, deterministic)
}
func (m *RadiusServerAuthentication_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RadiusServerAuthentication_KEYS.Merge(m, src)
}
func (m *RadiusServerAuthentication_KEYS) XXX_Size() int {
	return xxx_messageInfo_RadiusServerAuthentication_KEYS.Size(m)
}
func (m *RadiusServerAuthentication_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_RadiusServerAuthentication_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_RadiusServerAuthentication_KEYS proto.InternalMessageInfo

func (m *RadiusServerAuthentication_KEYS) GetNodeName() string {
	if m != nil {
		return m.NodeName
	}
	return ""
}

type RadiusAuthenticationData struct {
	AccessRequests              uint32   `protobuf:"varint,1,opt,name=access_requests,json=accessRequests,proto3" json:"access_requests,omitempty"`
	PendingAccessRequests       uint32   `protobuf:"varint,2,opt,name=pending_access_requests,json=pendingAccessRequests,proto3" json:"pending_access_requests,omitempty"`
	AccessRequestRetransmits    uint32   `protobuf:"varint,3,opt,name=access_request_retransmits,json=accessRequestRetransmits,proto3" json:"access_request_retransmits,omitempty"`
	AccessAccepts               uint32   `protobuf:"varint,4,opt,name=access_accepts,json=accessAccepts,proto3" json:"access_accepts,omitempty"`
	AccessRejects               uint32   `protobuf:"varint,5,opt,name=access_rejects,json=accessRejects,proto3" json:"access_rejects,omitempty"`
	AccessChallenges            uint32   `protobuf:"varint,6,opt,name=access_challenges,json=accessChallenges,proto3" json:"access_challenges,omitempty"`
	AccessTimeouts              uint32   `protobuf:"varint,7,opt,name=access_timeouts,json=accessTimeouts,proto3" json:"access_timeouts,omitempty"`
	BadAccessResponses          uint32   `protobuf:"varint,8,opt,name=bad_access_responses,json=badAccessResponses,proto3" json:"bad_access_responses,omitempty"`
	BadAccessAuthenticators     uint32   `protobuf:"varint,9,opt,name=bad_access_authenticators,json=badAccessAuthenticators,proto3" json:"bad_access_authenticators,omitempty"`
	UnknownAccessTypes          uint32   `protobuf:"varint,10,opt,name=unknown_access_types,json=unknownAccessTypes,proto3" json:"unknown_access_types,omitempty"`
	DroppedAccessResponses      uint32   `protobuf:"varint,11,opt,name=dropped_access_responses,json=droppedAccessResponses,proto3" json:"dropped_access_responses,omitempty"`
	Rtt                         uint32   `protobuf:"varint,12,opt,name=rtt,proto3" json:"rtt,omitempty"`
	AuthenTransactionSuccessess uint32   `protobuf:"varint,13,opt,name=authen_transaction_successess,json=authenTransactionSuccessess,proto3" json:"authen_transaction_successess,omitempty"`
	AuthenTransactionFailure    uint32   `protobuf:"varint,14,opt,name=authen_transaction_failure,json=authenTransactionFailure,proto3" json:"authen_transaction_failure,omitempty"`
	AuthenUnexpectedResponses   uint32   `protobuf:"varint,15,opt,name=authen_unexpected_responses,json=authenUnexpectedResponses,proto3" json:"authen_unexpected_responses,omitempty"`
	AuthenServerErrorResponses  uint32   `protobuf:"varint,16,opt,name=authen_server_error_responses,json=authenServerErrorResponses,proto3" json:"authen_server_error_responses,omitempty"`
	AuthenIncorrectResponses    uint32   `protobuf:"varint,17,opt,name=authen_incorrect_responses,json=authenIncorrectResponses,proto3" json:"authen_incorrect_responses,omitempty"`
	AuthThrottledTransactions   uint32   `protobuf:"varint,18,opt,name=auth_throttled_transactions,json=authThrottledTransactions,proto3" json:"auth_throttled_transactions,omitempty"`
	AuthMaxTransactions         uint32   `protobuf:"varint,19,opt,name=auth_max_transactions,json=authMaxTransactions,proto3" json:"auth_max_transactions,omitempty"`
	TotalTestAuthReqs           uint32   `protobuf:"varint,20,opt,name=total_test_auth_reqs,json=totalTestAuthReqs,proto3" json:"total_test_auth_reqs,omitempty"`
	TotalTestAuthTimeouts       uint32   `protobuf:"varint,21,opt,name=total_test_auth_timeouts,json=totalTestAuthTimeouts,proto3" json:"total_test_auth_timeouts,omitempty"`
	TotalTestAuthResponse       uint32   `protobuf:"varint,22,opt,name=total_test_auth_response,json=totalTestAuthResponse,proto3" json:"total_test_auth_response,omitempty"`
	TotalTestAuthPending        uint32   `protobuf:"varint,23,opt,name=total_test_auth_pending,json=totalTestAuthPending,proto3" json:"total_test_auth_pending,omitempty"`
	XXX_NoUnkeyedLiteral        struct{} `json:"-"`
	XXX_unrecognized            []byte   `json:"-"`
	XXX_sizecache               int32    `json:"-"`
}

func (m *RadiusAuthenticationData) Reset()         { *m = RadiusAuthenticationData{} }
func (m *RadiusAuthenticationData) String() string { return proto.CompactTextString(m) }
func (*RadiusAuthenticationData) ProtoMessage()    {}
func (*RadiusAuthenticationData) Descriptor() ([]byte, []int) {
	return fileDescriptor_c83c3bc73b2dc8be, []int{1}
}

func (m *RadiusAuthenticationData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RadiusAuthenticationData.Unmarshal(m, b)
}
func (m *RadiusAuthenticationData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RadiusAuthenticationData.Marshal(b, m, deterministic)
}
func (m *RadiusAuthenticationData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RadiusAuthenticationData.Merge(m, src)
}
func (m *RadiusAuthenticationData) XXX_Size() int {
	return xxx_messageInfo_RadiusAuthenticationData.Size(m)
}
func (m *RadiusAuthenticationData) XXX_DiscardUnknown() {
	xxx_messageInfo_RadiusAuthenticationData.DiscardUnknown(m)
}

var xxx_messageInfo_RadiusAuthenticationData proto.InternalMessageInfo

func (m *RadiusAuthenticationData) GetAccessRequests() uint32 {
	if m != nil {
		return m.AccessRequests
	}
	return 0
}

func (m *RadiusAuthenticationData) GetPendingAccessRequests() uint32 {
	if m != nil {
		return m.PendingAccessRequests
	}
	return 0
}

func (m *RadiusAuthenticationData) GetAccessRequestRetransmits() uint32 {
	if m != nil {
		return m.AccessRequestRetransmits
	}
	return 0
}

func (m *RadiusAuthenticationData) GetAccessAccepts() uint32 {
	if m != nil {
		return m.AccessAccepts
	}
	return 0
}

func (m *RadiusAuthenticationData) GetAccessRejects() uint32 {
	if m != nil {
		return m.AccessRejects
	}
	return 0
}

func (m *RadiusAuthenticationData) GetAccessChallenges() uint32 {
	if m != nil {
		return m.AccessChallenges
	}
	return 0
}

func (m *RadiusAuthenticationData) GetAccessTimeouts() uint32 {
	if m != nil {
		return m.AccessTimeouts
	}
	return 0
}

func (m *RadiusAuthenticationData) GetBadAccessResponses() uint32 {
	if m != nil {
		return m.BadAccessResponses
	}
	return 0
}

func (m *RadiusAuthenticationData) GetBadAccessAuthenticators() uint32 {
	if m != nil {
		return m.BadAccessAuthenticators
	}
	return 0
}

func (m *RadiusAuthenticationData) GetUnknownAccessTypes() uint32 {
	if m != nil {
		return m.UnknownAccessTypes
	}
	return 0
}

func (m *RadiusAuthenticationData) GetDroppedAccessResponses() uint32 {
	if m != nil {
		return m.DroppedAccessResponses
	}
	return 0
}

func (m *RadiusAuthenticationData) GetRtt() uint32 {
	if m != nil {
		return m.Rtt
	}
	return 0
}

func (m *RadiusAuthenticationData) GetAuthenTransactionSuccessess() uint32 {
	if m != nil {
		return m.AuthenTransactionSuccessess
	}
	return 0
}

func (m *RadiusAuthenticationData) GetAuthenTransactionFailure() uint32 {
	if m != nil {
		return m.AuthenTransactionFailure
	}
	return 0
}

func (m *RadiusAuthenticationData) GetAuthenUnexpectedResponses() uint32 {
	if m != nil {
		return m.AuthenUnexpectedResponses
	}
	return 0
}

func (m *RadiusAuthenticationData) GetAuthenServerErrorResponses() uint32 {
	if m != nil {
		return m.AuthenServerErrorResponses
	}
	return 0
}

func (m *RadiusAuthenticationData) GetAuthenIncorrectResponses() uint32 {
	if m != nil {
		return m.AuthenIncorrectResponses
	}
	return 0
}

func (m *RadiusAuthenticationData) GetAuthThrottledTransactions() uint32 {
	if m != nil {
		return m.AuthThrottledTransactions
	}
	return 0
}

func (m *RadiusAuthenticationData) GetAuthMaxTransactions() uint32 {
	if m != nil {
		return m.AuthMaxTransactions
	}
	return 0
}

func (m *RadiusAuthenticationData) GetTotalTestAuthReqs() uint32 {
	if m != nil {
		return m.TotalTestAuthReqs
	}
	return 0
}

func (m *RadiusAuthenticationData) GetTotalTestAuthTimeouts() uint32 {
	if m != nil {
		return m.TotalTestAuthTimeouts
	}
	return 0
}

func (m *RadiusAuthenticationData) GetTotalTestAuthResponse() uint32 {
	if m != nil {
		return m.TotalTestAuthResponse
	}
	return 0
}

func (m *RadiusAuthenticationData) GetTotalTestAuthPending() uint32 {
	if m != nil {
		return m.TotalTestAuthPending
	}
	return 0
}

type RadiusAuthentication struct {
	Port                 uint32                    `protobuf:"varint,1,opt,name=port,proto3" json:"port,omitempty"`
	Authentication       *RadiusAuthenticationData `protobuf:"bytes,2,opt,name=authentication,proto3" json:"authentication,omitempty"`
	IpAddress            string                    `protobuf:"bytes,3,opt,name=ip_address,json=ipAddress,proto3" json:"ip_address,omitempty"`
	Family               string                    `protobuf:"bytes,4,opt,name=family,proto3" json:"family,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *RadiusAuthentication) Reset()         { *m = RadiusAuthentication{} }
func (m *RadiusAuthentication) String() string { return proto.CompactTextString(m) }
func (*RadiusAuthentication) ProtoMessage()    {}
func (*RadiusAuthentication) Descriptor() ([]byte, []int) {
	return fileDescriptor_c83c3bc73b2dc8be, []int{2}
}

func (m *RadiusAuthentication) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RadiusAuthentication.Unmarshal(m, b)
}
func (m *RadiusAuthentication) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RadiusAuthentication.Marshal(b, m, deterministic)
}
func (m *RadiusAuthentication) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RadiusAuthentication.Merge(m, src)
}
func (m *RadiusAuthentication) XXX_Size() int {
	return xxx_messageInfo_RadiusAuthentication.Size(m)
}
func (m *RadiusAuthentication) XXX_DiscardUnknown() {
	xxx_messageInfo_RadiusAuthentication.DiscardUnknown(m)
}

var xxx_messageInfo_RadiusAuthentication proto.InternalMessageInfo

func (m *RadiusAuthentication) GetPort() uint32 {
	if m != nil {
		return m.Port
	}
	return 0
}

func (m *RadiusAuthentication) GetAuthentication() *RadiusAuthenticationData {
	if m != nil {
		return m.Authentication
	}
	return nil
}

func (m *RadiusAuthentication) GetIpAddress() string {
	if m != nil {
		return m.IpAddress
	}
	return ""
}

func (m *RadiusAuthentication) GetFamily() string {
	if m != nil {
		return m.Family
	}
	return ""
}

type RadiusServerAuthentication struct {
	AuthenticationGroup  []*RadiusAuthentication `protobuf:"bytes,50,rep,name=authentication_group,json=authenticationGroup,proto3" json:"authentication_group,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *RadiusServerAuthentication) Reset()         { *m = RadiusServerAuthentication{} }
func (m *RadiusServerAuthentication) String() string { return proto.CompactTextString(m) }
func (*RadiusServerAuthentication) ProtoMessage()    {}
func (*RadiusServerAuthentication) Descriptor() ([]byte, []int) {
	return fileDescriptor_c83c3bc73b2dc8be, []int{3}
}

func (m *RadiusServerAuthentication) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RadiusServerAuthentication.Unmarshal(m, b)
}
func (m *RadiusServerAuthentication) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RadiusServerAuthentication.Marshal(b, m, deterministic)
}
func (m *RadiusServerAuthentication) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RadiusServerAuthentication.Merge(m, src)
}
func (m *RadiusServerAuthentication) XXX_Size() int {
	return xxx_messageInfo_RadiusServerAuthentication.Size(m)
}
func (m *RadiusServerAuthentication) XXX_DiscardUnknown() {
	xxx_messageInfo_RadiusServerAuthentication.DiscardUnknown(m)
}

var xxx_messageInfo_RadiusServerAuthentication proto.InternalMessageInfo

func (m *RadiusServerAuthentication) GetAuthenticationGroup() []*RadiusAuthentication {
	if m != nil {
		return m.AuthenticationGroup
	}
	return nil
}

func init() {
	proto.RegisterType((*RadiusServerAuthentication_KEYS)(nil), "cisco_ios_xr_aaa_protocol_radius_oper.radius.nodes.node.authentication.radius_server_authentication_KEYS")
	proto.RegisterType((*RadiusAuthenticationData)(nil), "cisco_ios_xr_aaa_protocol_radius_oper.radius.nodes.node.authentication.radius_authentication_data")
	proto.RegisterType((*RadiusAuthentication)(nil), "cisco_ios_xr_aaa_protocol_radius_oper.radius.nodes.node.authentication.radius_authentication")
	proto.RegisterType((*RadiusServerAuthentication)(nil), "cisco_ios_xr_aaa_protocol_radius_oper.radius.nodes.node.authentication.radius_server_authentication")
}

func init() { proto.RegisterFile("radius_server_authentication.proto", fileDescriptor_c83c3bc73b2dc8be) }

var fileDescriptor_c83c3bc73b2dc8be = []byte{
	// 725 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x95, 0xdb, 0x6e, 0x13, 0x3d,
	0x10, 0xc7, 0x95, 0x2f, 0xfd, 0x4a, 0xe3, 0xd2, 0x93, 0x9b, 0x34, 0x6e, 0x4b, 0xa5, 0x12, 0x09,
	0x51, 0x09, 0x29, 0xa0, 0x20, 0x0e, 0x42, 0x08, 0x11, 0x50, 0x8b, 0x10, 0x02, 0xa1, 0x6d, 0xb8,
	0xe0, 0x02, 0x59, 0xce, 0xee, 0xb4, 0x5d, 0x48, 0xec, 0xad, 0xed, 0x85, 0xf4, 0x15, 0xb8, 0xe2,
	0x55, 0x78, 0x1f, 0xde, 0x81, 0x57, 0x40, 0x3b, 0x76, 0xb2, 0x07, 0x42, 0xaf, 0xe0, 0x26, 0xda,
	0x9d, 0xf9, 0xff, 0x66, 0x3c, 0xb3, 0x9e, 0x09, 0xe9, 0x68, 0x11, 0xc5, 0xa9, 0xe1, 0x06, 0xf4,
	0x67, 0xd0, 0x5c, 0xa4, 0xf6, 0x0c, 0xa4, 0x8d, 0x43, 0x61, 0x63, 0x25, 0xbb, 0x89, 0x56, 0x56,
	0xd1, 0xa3, 0x30, 0x36, 0xa1, 0xe2, 0xb1, 0x32, 0x7c, 0xa2, 0xb9, 0x10, 0x82, 0xa3, 0x3d, 0x54,
	0x23, 0xee, 0x69, 0x95, 0x80, 0xee, 0xba, 0xe7, 0xae, 0x54, 0x11, 0xb8, 0xdf, 0x6e, 0x39, 0x5a,
	0xe7, 0x29, 0xb9, 0x7e, 0x59, 0x36, 0xfe, 0xea, 0xf0, 0xfd, 0x31, 0xdd, 0x25, 0x8d, 0x8c, 0xe5,
	0x52, 0x8c, 0x81, 0xd5, 0xf6, 0x6b, 0x07, 0x8d, 0x60, 0x29, 0x33, 0xbc, 0x11, 0x63, 0xe8, 0xfc,
	0x68, 0x90, 0x1d, 0x1f, 0xa2, 0xc2, 0x46, 0xc2, 0x0a, 0x7a, 0x93, 0xac, 0x89, 0x30, 0x04, 0x63,
	0xb8, 0x86, 0xf3, 0x14, 0x8c, 0x35, 0x18, 0x61, 0x25, 0x58, 0x75, 0xe6, 0xc0, 0x5b, 0xe9, 0x7d,
	0xd2, 0x4e, 0x40, 0x46, 0xb1, 0x3c, 0xe5, 0x55, 0xe0, 0x3f, 0x04, 0x5a, 0xde, 0xdd, 0x2f, 0x73,
	0x8f, 0xc9, 0x4e, 0x59, 0xcf, 0x35, 0x58, 0x2d, 0xa4, 0x19, 0xc7, 0xd6, 0xb0, 0x3a, 0xa2, 0xac,
	0x94, 0x2b, 0xc8, 0xfd, 0xf4, 0x06, 0xf1, 0xe7, 0xc0, 0xa4, 0x89, 0x35, 0x6c, 0x01, 0x89, 0x15,
	0x67, 0xed, 0x3b, 0x63, 0x41, 0xa6, 0xe1, 0x23, 0x84, 0xd6, 0xb0, 0xff, 0x8b, 0xb2, 0xc0, 0x19,
	0xe9, 0x2d, 0xb2, 0xe1, 0x65, 0xe1, 0x99, 0x18, 0x8d, 0x40, 0x9e, 0x82, 0x61, 0x8b, 0xa8, 0x5c,
	0x77, 0x8e, 0xe7, 0x33, 0x7b, 0xa1, 0x33, 0x36, 0x1e, 0x83, 0x4a, 0xad, 0x61, 0x57, 0x8a, 0x9d,
	0x19, 0x78, 0x2b, 0xbd, 0x43, 0x9a, 0x43, 0x11, 0xe5, 0x5d, 0x31, 0x89, 0x92, 0x06, 0x0c, 0x5b,
	0x42, 0x35, 0x1d, 0x8a, 0x68, 0xda, 0x12, 0xef, 0xa1, 0x8f, 0xc8, 0x76, 0x81, 0x28, 0x7c, 0x16,
	0xa5, 0x0d, 0x6b, 0x20, 0xd6, 0x9e, 0x61, 0xfd, 0x92, 0x3b, 0xcb, 0x96, 0xca, 0x4f, 0x52, 0x7d,
	0x91, 0x53, 0xde, 0x5e, 0x24, 0x60, 0x18, 0x71, 0xd9, 0xbc, 0xcf, 0xa1, 0x83, 0xcc, 0x43, 0x1f,
	0x12, 0x16, 0x69, 0x95, 0x24, 0x30, 0xe7, 0x8c, 0xcb, 0x48, 0x6d, 0x79, 0x7f, 0xf5, 0x9c, 0xeb,
	0xa4, 0xae, 0xad, 0x65, 0x57, 0x51, 0x94, 0x3d, 0xd2, 0x67, 0x64, 0xcf, 0x1d, 0x97, 0xe3, 0x37,
	0x12, 0x21, 0xde, 0x24, 0x93, 0x22, 0x08, 0xc6, 0xb0, 0x15, 0xd4, 0xee, 0x3a, 0xd1, 0x20, 0xd7,
	0x1c, 0xcf, 0x24, 0x78, 0x23, 0x7e, 0x8f, 0x71, 0x22, 0xe2, 0x51, 0xaa, 0x81, 0xad, 0xfa, 0x1b,
	0x51, 0x0d, 0x70, 0xe4, 0xfc, 0xf4, 0x09, 0xf1, 0xc1, 0x79, 0x2a, 0x61, 0x92, 0x40, 0x68, 0x21,
	0x2a, 0x14, 0xb4, 0x86, 0xf8, 0xb6, 0x93, 0xbc, 0x9b, 0x29, 0xf2, 0x9a, 0xfa, 0xb3, 0x0a, 0xfc,
	0x44, 0x81, 0xd6, 0x4a, 0x17, 0x22, 0xac, 0x63, 0x04, 0x7f, 0xc4, 0x63, 0xd4, 0x1c, 0x66, 0x92,
	0x3c, 0x44, 0x5e, 0x40, 0x2c, 0x43, 0xa5, 0x35, 0x84, 0xb6, 0xc0, 0x6f, 0x14, 0x0b, 0x78, 0x39,
	0x15, 0xe4, 0xb4, 0x2f, 0x80, 0xdb, 0x33, 0xad, 0xac, 0x1d, 0x41, 0x54, 0x6c, 0x83, 0x61, 0x34,
	0x2f, 0x60, 0x30, 0x55, 0x14, 0xda, 0x60, 0x68, 0x8f, 0xb4, 0x90, 0x1f, 0x8b, 0x49, 0x99, 0xdc,
	0x44, 0x72, 0x33, 0x73, 0xbe, 0x16, 0x93, 0x12, 0x73, 0x9b, 0x34, 0xad, 0xb2, 0x62, 0xc4, 0x6d,
	0x36, 0x80, 0x88, 0x6b, 0x38, 0x37, 0xac, 0x89, 0xc8, 0x06, 0xfa, 0x06, 0x60, 0x6c, 0x76, 0xd7,
	0x02, 0x38, 0x37, 0xf4, 0x01, 0x61, 0x55, 0x60, 0x36, 0x05, 0x2d, 0x37, 0xee, 0x25, 0x68, 0x36,
	0x0c, 0x73, 0xc0, 0x69, 0x6b, 0xd8, 0xd6, 0x1c, 0x70, 0xda, 0x17, 0x7a, 0x8f, 0xb4, 0xab, 0xa0,
	0x5f, 0x28, 0xac, 0x8d, 0x5c, 0xb3, 0xc4, 0xbd, 0x75, 0xbe, 0xce, 0xcf, 0x1a, 0x69, 0xcd, 0x5d,
	0x6f, 0x94, 0x92, 0x85, 0x44, 0x69, 0xeb, 0xd7, 0x19, 0x3e, 0xd3, 0xaf, 0x35, 0xb2, 0x5a, 0x96,
	0xe1, 0xf2, 0x5a, 0xee, 0x0d, 0xbb, 0x7f, 0x67, 0x61, 0x77, 0xff, 0xbc, 0x6a, 0x83, 0x4a, 0x66,
	0xba, 0x47, 0x48, 0x9c, 0x70, 0x11, 0x45, 0x3a, 0x1b, 0x9c, 0x3a, 0xee, 0xed, 0x46, 0x9c, 0xf4,
	0x9d, 0x81, 0x6e, 0x91, 0xc5, 0x13, 0x31, 0x8e, 0x47, 0x17, 0xb8, 0xf2, 0x1a, 0x81, 0x7f, 0xeb,
	0x7c, 0xaf, 0x91, 0x6b, 0x97, 0xfd, 0x27, 0xd0, 0x6f, 0x35, 0xd2, 0xac, 0xe4, 0x3f, 0xd5, 0x2a,
	0x4d, 0x58, 0x6f, 0xbf, 0x7e, 0xb0, 0xdc, 0xfb, 0xf0, 0x4f, 0x4b, 0x75, 0xf7, 0x2f, 0x7f, 0x7f,
	0x91, 0x65, 0x1e, 0x2e, 0x62, 0x86, 0xbb, 0xbf, 0x02, 0x00, 0x00, 0xff, 0xff, 0xd2, 0x08, 0xbc,
	0xa3, 0x3b, 0x07, 0x00, 0x00,
}
