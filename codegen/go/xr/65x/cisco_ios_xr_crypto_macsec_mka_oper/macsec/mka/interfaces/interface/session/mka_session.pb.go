/*
Copyright 2019 Cisco Systems

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: mka_session.proto

package cisco_ios_xr_crypto_macsec_mka_oper_macsec_mka_interfaces_interface_session

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type MkaSession_KEYS struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MkaSession_KEYS) Reset()         { *m = MkaSession_KEYS{} }
func (m *MkaSession_KEYS) String() string { return proto.CompactTextString(m) }
func (*MkaSession_KEYS) ProtoMessage()    {}
func (*MkaSession_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_87216119eb3785c3, []int{0}
}

func (m *MkaSession_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MkaSession_KEYS.Unmarshal(m, b)
}
func (m *MkaSession_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MkaSession_KEYS.Marshal(b, m, deterministic)
}
func (m *MkaSession_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MkaSession_KEYS.Merge(m, src)
}
func (m *MkaSession_KEYS) XXX_Size() int {
	return xxx_messageInfo_MkaSession_KEYS.Size(m)
}
func (m *MkaSession_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_MkaSession_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_MkaSession_KEYS proto.InternalMessageInfo

func (m *MkaSession_KEYS) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type MkaVlanTag struct {
	EtherType            uint32   `protobuf:"varint,1,opt,name=ether_type,json=etherType,proto3" json:"ether_type,omitempty"`
	Priority             uint32   `protobuf:"varint,2,opt,name=priority,proto3" json:"priority,omitempty"`
	Cfi                  uint32   `protobuf:"varint,3,opt,name=cfi,proto3" json:"cfi,omitempty"`
	VlanId               uint32   `protobuf:"varint,4,opt,name=vlan_id,json=vlanId,proto3" json:"vlan_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MkaVlanTag) Reset()         { *m = MkaVlanTag{} }
func (m *MkaVlanTag) String() string { return proto.CompactTextString(m) }
func (*MkaVlanTag) ProtoMessage()    {}
func (*MkaVlanTag) Descriptor() ([]byte, []int) {
	return fileDescriptor_87216119eb3785c3, []int{1}
}

func (m *MkaVlanTag) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MkaVlanTag.Unmarshal(m, b)
}
func (m *MkaVlanTag) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MkaVlanTag.Marshal(b, m, deterministic)
}
func (m *MkaVlanTag) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MkaVlanTag.Merge(m, src)
}
func (m *MkaVlanTag) XXX_Size() int {
	return xxx_messageInfo_MkaVlanTag.Size(m)
}
func (m *MkaVlanTag) XXX_DiscardUnknown() {
	xxx_messageInfo_MkaVlanTag.DiscardUnknown(m)
}

var xxx_messageInfo_MkaVlanTag proto.InternalMessageInfo

func (m *MkaVlanTag) GetEtherType() uint32 {
	if m != nil {
		return m.EtherType
	}
	return 0
}

func (m *MkaVlanTag) GetPriority() uint32 {
	if m != nil {
		return m.Priority
	}
	return 0
}

func (m *MkaVlanTag) GetCfi() uint32 {
	if m != nil {
		return m.Cfi
	}
	return 0
}

func (m *MkaVlanTag) GetVlanId() uint32 {
	if m != nil {
		return m.VlanId
	}
	return 0
}

type MkaSessionSummary struct {
	InterfaceName               string      `protobuf:"bytes,1,opt,name=interface_name,json=interfaceName,proto3" json:"interface_name,omitempty"`
	InheritedPolicy             bool        `protobuf:"varint,2,opt,name=inherited_policy,json=inheritedPolicy,proto3" json:"inherited_policy,omitempty"`
	Policy                      string      `protobuf:"bytes,3,opt,name=policy,proto3" json:"policy,omitempty"`
	Priority                    uint32      `protobuf:"varint,4,opt,name=priority,proto3" json:"priority,omitempty"`
	MyMac                       string      `protobuf:"bytes,5,opt,name=my_mac,json=myMac,proto3" json:"my_mac,omitempty"`
	DelayProtection             bool        `protobuf:"varint,6,opt,name=delay_protection,json=delayProtection,proto3" json:"delay_protection,omitempty"`
	ReplayProtect               bool        `protobuf:"varint,7,opt,name=replay_protect,json=replayProtect,proto3" json:"replay_protect,omitempty"`
	WindowSize                  uint32      `protobuf:"varint,8,opt,name=window_size,json=windowSize,proto3" json:"window_size,omitempty"`
	IncludeIcvIndicator         bool        `protobuf:"varint,9,opt,name=include_icv_indicator,json=includeIcvIndicator,proto3" json:"include_icv_indicator,omitempty"`
	ConfidentialityOffset       uint32      `protobuf:"varint,10,opt,name=confidentiality_offset,json=confidentialityOffset,proto3" json:"confidentiality_offset,omitempty"`
	AlgoAgility                 uint32      `protobuf:"varint,11,opt,name=algo_agility,json=algoAgility,proto3" json:"algo_agility,omitempty"`
	Capability                  uint32      `protobuf:"varint,12,opt,name=capability,proto3" json:"capability,omitempty"`
	MkaCipherSuite              string      `protobuf:"bytes,13,opt,name=mka_cipher_suite,json=mkaCipherSuite,proto3" json:"mka_cipher_suite,omitempty"`
	ConfiguredMacSecCipherSuite string      `protobuf:"bytes,14,opt,name=configured_mac_sec_cipher_suite,json=configuredMacSecCipherSuite,proto3" json:"configured_mac_sec_cipher_suite,omitempty"`
	MacSecDesired               bool        `protobuf:"varint,15,opt,name=mac_sec_desired,json=macSecDesired,proto3" json:"mac_sec_desired,omitempty"`
	OuterTag                    *MkaVlanTag `protobuf:"bytes,16,opt,name=outer_tag,json=outerTag,proto3" json:"outer_tag,omitempty"`
	InnerTag                    *MkaVlanTag `protobuf:"bytes,17,opt,name=inner_tag,json=innerTag,proto3" json:"inner_tag,omitempty"`
	XXX_NoUnkeyedLiteral        struct{}    `json:"-"`
	XXX_unrecognized            []byte      `json:"-"`
	XXX_sizecache               int32       `json:"-"`
}

func (m *MkaSessionSummary) Reset()         { *m = MkaSessionSummary{} }
func (m *MkaSessionSummary) String() string { return proto.CompactTextString(m) }
func (*MkaSessionSummary) ProtoMessage()    {}
func (*MkaSessionSummary) Descriptor() ([]byte, []int) {
	return fileDescriptor_87216119eb3785c3, []int{2}
}

func (m *MkaSessionSummary) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MkaSessionSummary.Unmarshal(m, b)
}
func (m *MkaSessionSummary) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MkaSessionSummary.Marshal(b, m, deterministic)
}
func (m *MkaSessionSummary) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MkaSessionSummary.Merge(m, src)
}
func (m *MkaSessionSummary) XXX_Size() int {
	return xxx_messageInfo_MkaSessionSummary.Size(m)
}
func (m *MkaSessionSummary) XXX_DiscardUnknown() {
	xxx_messageInfo_MkaSessionSummary.DiscardUnknown(m)
}

var xxx_messageInfo_MkaSessionSummary proto.InternalMessageInfo

func (m *MkaSessionSummary) GetInterfaceName() string {
	if m != nil {
		return m.InterfaceName
	}
	return ""
}

func (m *MkaSessionSummary) GetInheritedPolicy() bool {
	if m != nil {
		return m.InheritedPolicy
	}
	return false
}

func (m *MkaSessionSummary) GetPolicy() string {
	if m != nil {
		return m.Policy
	}
	return ""
}

func (m *MkaSessionSummary) GetPriority() uint32 {
	if m != nil {
		return m.Priority
	}
	return 0
}

func (m *MkaSessionSummary) GetMyMac() string {
	if m != nil {
		return m.MyMac
	}
	return ""
}

func (m *MkaSessionSummary) GetDelayProtection() bool {
	if m != nil {
		return m.DelayProtection
	}
	return false
}

func (m *MkaSessionSummary) GetReplayProtect() bool {
	if m != nil {
		return m.ReplayProtect
	}
	return false
}

func (m *MkaSessionSummary) GetWindowSize() uint32 {
	if m != nil {
		return m.WindowSize
	}
	return 0
}

func (m *MkaSessionSummary) GetIncludeIcvIndicator() bool {
	if m != nil {
		return m.IncludeIcvIndicator
	}
	return false
}

func (m *MkaSessionSummary) GetConfidentialityOffset() uint32 {
	if m != nil {
		return m.ConfidentialityOffset
	}
	return 0
}

func (m *MkaSessionSummary) GetAlgoAgility() uint32 {
	if m != nil {
		return m.AlgoAgility
	}
	return 0
}

func (m *MkaSessionSummary) GetCapability() uint32 {
	if m != nil {
		return m.Capability
	}
	return 0
}

func (m *MkaSessionSummary) GetMkaCipherSuite() string {
	if m != nil {
		return m.MkaCipherSuite
	}
	return ""
}

func (m *MkaSessionSummary) GetConfiguredMacSecCipherSuite() string {
	if m != nil {
		return m.ConfiguredMacSecCipherSuite
	}
	return ""
}

func (m *MkaSessionSummary) GetMacSecDesired() bool {
	if m != nil {
		return m.MacSecDesired
	}
	return false
}

func (m *MkaSessionSummary) GetOuterTag() *MkaVlanTag {
	if m != nil {
		return m.OuterTag
	}
	return nil
}

func (m *MkaSessionSummary) GetInnerTag() *MkaVlanTag {
	if m != nil {
		return m.InnerTag
	}
	return nil
}

type PeerStatusDataInternal struct {
	Mi                   string   `protobuf:"bytes,1,opt,name=mi,proto3" json:"mi,omitempty"`
	IcvStatus            string   `protobuf:"bytes,2,opt,name=icv_status,json=icvStatus,proto3" json:"icv_status,omitempty"`
	IcvCheckTimestamp    string   `protobuf:"bytes,3,opt,name=icv_check_timestamp,json=icvCheckTimestamp,proto3" json:"icv_check_timestamp,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PeerStatusDataInternal) Reset()         { *m = PeerStatusDataInternal{} }
func (m *PeerStatusDataInternal) String() string { return proto.CompactTextString(m) }
func (*PeerStatusDataInternal) ProtoMessage()    {}
func (*PeerStatusDataInternal) Descriptor() ([]byte, []int) {
	return fileDescriptor_87216119eb3785c3, []int{3}
}

func (m *PeerStatusDataInternal) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PeerStatusDataInternal.Unmarshal(m, b)
}
func (m *PeerStatusDataInternal) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PeerStatusDataInternal.Marshal(b, m, deterministic)
}
func (m *PeerStatusDataInternal) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PeerStatusDataInternal.Merge(m, src)
}
func (m *PeerStatusDataInternal) XXX_Size() int {
	return xxx_messageInfo_PeerStatusDataInternal.Size(m)
}
func (m *PeerStatusDataInternal) XXX_DiscardUnknown() {
	xxx_messageInfo_PeerStatusDataInternal.DiscardUnknown(m)
}

var xxx_messageInfo_PeerStatusDataInternal proto.InternalMessageInfo

func (m *PeerStatusDataInternal) GetMi() string {
	if m != nil {
		return m.Mi
	}
	return ""
}

func (m *PeerStatusDataInternal) GetIcvStatus() string {
	if m != nil {
		return m.IcvStatus
	}
	return ""
}

func (m *PeerStatusDataInternal) GetIcvCheckTimestamp() string {
	if m != nil {
		return m.IcvCheckTimestamp
	}
	return ""
}

type PeerStatusData struct {
	Sci                  string                  `protobuf:"bytes,1,opt,name=sci,proto3" json:"sci,omitempty"`
	PeerData             *PeerStatusDataInternal `protobuf:"bytes,2,opt,name=peer_data,json=peerData,proto3" json:"peer_data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *PeerStatusData) Reset()         { *m = PeerStatusData{} }
func (m *PeerStatusData) String() string { return proto.CompactTextString(m) }
func (*PeerStatusData) ProtoMessage()    {}
func (*PeerStatusData) Descriptor() ([]byte, []int) {
	return fileDescriptor_87216119eb3785c3, []int{4}
}

func (m *PeerStatusData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PeerStatusData.Unmarshal(m, b)
}
func (m *PeerStatusData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PeerStatusData.Marshal(b, m, deterministic)
}
func (m *PeerStatusData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PeerStatusData.Merge(m, src)
}
func (m *PeerStatusData) XXX_Size() int {
	return xxx_messageInfo_PeerStatusData.Size(m)
}
func (m *PeerStatusData) XXX_DiscardUnknown() {
	xxx_messageInfo_PeerStatusData.DiscardUnknown(m)
}

var xxx_messageInfo_PeerStatusData proto.InternalMessageInfo

func (m *PeerStatusData) GetSci() string {
	if m != nil {
		return m.Sci
	}
	return ""
}

func (m *PeerStatusData) GetPeerData() *PeerStatusDataInternal {
	if m != nil {
		return m.PeerData
	}
	return nil
}

type PeersStatusData struct {
	TxMkpduTimestamp     string            `protobuf:"bytes,1,opt,name=tx_mkpdu_timestamp,json=txMkpduTimestamp,proto3" json:"tx_mkpdu_timestamp,omitempty"`
	PeerCount            uint32            `protobuf:"varint,2,opt,name=peer_count,json=peerCount,proto3" json:"peer_count,omitempty"`
	Peer                 []*PeerStatusData `protobuf:"bytes,3,rep,name=peer,proto3" json:"peer,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *PeersStatusData) Reset()         { *m = PeersStatusData{} }
func (m *PeersStatusData) String() string { return proto.CompactTextString(m) }
func (*PeersStatusData) ProtoMessage()    {}
func (*PeersStatusData) Descriptor() ([]byte, []int) {
	return fileDescriptor_87216119eb3785c3, []int{5}
}

func (m *PeersStatusData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PeersStatusData.Unmarshal(m, b)
}
func (m *PeersStatusData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PeersStatusData.Marshal(b, m, deterministic)
}
func (m *PeersStatusData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PeersStatusData.Merge(m, src)
}
func (m *PeersStatusData) XXX_Size() int {
	return xxx_messageInfo_PeersStatusData.Size(m)
}
func (m *PeersStatusData) XXX_DiscardUnknown() {
	xxx_messageInfo_PeersStatusData.DiscardUnknown(m)
}

var xxx_messageInfo_PeersStatusData proto.InternalMessageInfo

func (m *PeersStatusData) GetTxMkpduTimestamp() string {
	if m != nil {
		return m.TxMkpduTimestamp
	}
	return ""
}

func (m *PeersStatusData) GetPeerCount() uint32 {
	if m != nil {
		return m.PeerCount
	}
	return 0
}

func (m *PeersStatusData) GetPeer() []*PeerStatusData {
	if m != nil {
		return m.Peer
	}
	return nil
}

type FallbackKeepaliveData struct {
	Ckn                  string           `protobuf:"bytes,1,opt,name=ckn,proto3" json:"ckn,omitempty"`
	Mi                   string           `protobuf:"bytes,2,opt,name=mi,proto3" json:"mi,omitempty"`
	Mn                   uint32           `protobuf:"varint,3,opt,name=mn,proto3" json:"mn,omitempty"`
	PeersStatus          *PeersStatusData `protobuf:"bytes,4,opt,name=peers_status,json=peersStatus,proto3" json:"peers_status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *FallbackKeepaliveData) Reset()         { *m = FallbackKeepaliveData{} }
func (m *FallbackKeepaliveData) String() string { return proto.CompactTextString(m) }
func (*FallbackKeepaliveData) ProtoMessage()    {}
func (*FallbackKeepaliveData) Descriptor() ([]byte, []int) {
	return fileDescriptor_87216119eb3785c3, []int{6}
}

func (m *FallbackKeepaliveData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FallbackKeepaliveData.Unmarshal(m, b)
}
func (m *FallbackKeepaliveData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FallbackKeepaliveData.Marshal(b, m, deterministic)
}
func (m *FallbackKeepaliveData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FallbackKeepaliveData.Merge(m, src)
}
func (m *FallbackKeepaliveData) XXX_Size() int {
	return xxx_messageInfo_FallbackKeepaliveData.Size(m)
}
func (m *FallbackKeepaliveData) XXX_DiscardUnknown() {
	xxx_messageInfo_FallbackKeepaliveData.DiscardUnknown(m)
}

var xxx_messageInfo_FallbackKeepaliveData proto.InternalMessageInfo

func (m *FallbackKeepaliveData) GetCkn() string {
	if m != nil {
		return m.Ckn
	}
	return ""
}

func (m *FallbackKeepaliveData) GetMi() string {
	if m != nil {
		return m.Mi
	}
	return ""
}

func (m *FallbackKeepaliveData) GetMn() uint32 {
	if m != nil {
		return m.Mn
	}
	return 0
}

func (m *FallbackKeepaliveData) GetPeersStatus() *PeersStatusData {
	if m != nil {
		return m.PeersStatus
	}
	return nil
}

type VpData struct {
	MySci                string                   `protobuf:"bytes,1,opt,name=my_sci,json=mySci,proto3" json:"my_sci,omitempty"`
	VirtualPortId        uint32                   `protobuf:"varint,2,opt,name=virtual_port_id,json=virtualPortId,proto3" json:"virtual_port_id,omitempty"`
	LatestRx             bool                     `protobuf:"varint,3,opt,name=latest_rx,json=latestRx,proto3" json:"latest_rx,omitempty"`
	LatestTx             bool                     `protobuf:"varint,4,opt,name=latest_tx,json=latestTx,proto3" json:"latest_tx,omitempty"`
	LatestAn             uint32                   `protobuf:"varint,5,opt,name=latest_an,json=latestAn,proto3" json:"latest_an,omitempty"`
	LatestKi             string                   `protobuf:"bytes,6,opt,name=latest_ki,json=latestKi,proto3" json:"latest_ki,omitempty"`
	LatestKn             uint32                   `protobuf:"varint,7,opt,name=latest_kn,json=latestKn,proto3" json:"latest_kn,omitempty"`
	OldRx                bool                     `protobuf:"varint,8,opt,name=old_rx,json=oldRx,proto3" json:"old_rx,omitempty"`
	OldTx                bool                     `protobuf:"varint,9,opt,name=old_tx,json=oldTx,proto3" json:"old_tx,omitempty"`
	OldAn                uint32                   `protobuf:"varint,10,opt,name=old_an,json=oldAn,proto3" json:"old_an,omitempty"`
	OldKi                string                   `protobuf:"bytes,11,opt,name=old_ki,json=oldKi,proto3" json:"old_ki,omitempty"`
	OldKn                uint32                   `protobuf:"varint,12,opt,name=old_kn,json=oldKn,proto3" json:"old_kn,omitempty"`
	WaitTime             uint32                   `protobuf:"varint,13,opt,name=wait_time,json=waitTime,proto3" json:"wait_time,omitempty"`
	RetireTime           uint32                   `protobuf:"varint,14,opt,name=retire_time,json=retireTime,proto3" json:"retire_time,omitempty"`
	MacsecCipherSuite    string                   `protobuf:"bytes,15,opt,name=macsec_cipher_suite,json=macsecCipherSuite,proto3" json:"macsec_cipher_suite,omitempty"`
	Ssci                 uint32                   `protobuf:"varint,16,opt,name=ssci,proto3" json:"ssci,omitempty"`
	TimeToSakRekey       string                   `protobuf:"bytes,17,opt,name=time_to_sak_rekey,json=timeToSakRekey,proto3" json:"time_to_sak_rekey,omitempty"`
	FallbackKeepalive    []*FallbackKeepaliveData `protobuf:"bytes,18,rep,name=fallback_keepalive,json=fallbackKeepalive,proto3" json:"fallback_keepalive,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *VpData) Reset()         { *m = VpData{} }
func (m *VpData) String() string { return proto.CompactTextString(m) }
func (*VpData) ProtoMessage()    {}
func (*VpData) Descriptor() ([]byte, []int) {
	return fileDescriptor_87216119eb3785c3, []int{7}
}

func (m *VpData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VpData.Unmarshal(m, b)
}
func (m *VpData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VpData.Marshal(b, m, deterministic)
}
func (m *VpData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VpData.Merge(m, src)
}
func (m *VpData) XXX_Size() int {
	return xxx_messageInfo_VpData.Size(m)
}
func (m *VpData) XXX_DiscardUnknown() {
	xxx_messageInfo_VpData.DiscardUnknown(m)
}

var xxx_messageInfo_VpData proto.InternalMessageInfo

func (m *VpData) GetMySci() string {
	if m != nil {
		return m.MySci
	}
	return ""
}

func (m *VpData) GetVirtualPortId() uint32 {
	if m != nil {
		return m.VirtualPortId
	}
	return 0
}

func (m *VpData) GetLatestRx() bool {
	if m != nil {
		return m.LatestRx
	}
	return false
}

func (m *VpData) GetLatestTx() bool {
	if m != nil {
		return m.LatestTx
	}
	return false
}

func (m *VpData) GetLatestAn() uint32 {
	if m != nil {
		return m.LatestAn
	}
	return 0
}

func (m *VpData) GetLatestKi() string {
	if m != nil {
		return m.LatestKi
	}
	return ""
}

func (m *VpData) GetLatestKn() uint32 {
	if m != nil {
		return m.LatestKn
	}
	return 0
}

func (m *VpData) GetOldRx() bool {
	if m != nil {
		return m.OldRx
	}
	return false
}

func (m *VpData) GetOldTx() bool {
	if m != nil {
		return m.OldTx
	}
	return false
}

func (m *VpData) GetOldAn() uint32 {
	if m != nil {
		return m.OldAn
	}
	return 0
}

func (m *VpData) GetOldKi() string {
	if m != nil {
		return m.OldKi
	}
	return ""
}

func (m *VpData) GetOldKn() uint32 {
	if m != nil {
		return m.OldKn
	}
	return 0
}

func (m *VpData) GetWaitTime() uint32 {
	if m != nil {
		return m.WaitTime
	}
	return 0
}

func (m *VpData) GetRetireTime() uint32 {
	if m != nil {
		return m.RetireTime
	}
	return 0
}

func (m *VpData) GetMacsecCipherSuite() string {
	if m != nil {
		return m.MacsecCipherSuite
	}
	return ""
}

func (m *VpData) GetSsci() uint32 {
	if m != nil {
		return m.Ssci
	}
	return 0
}

func (m *VpData) GetTimeToSakRekey() string {
	if m != nil {
		return m.TimeToSakRekey
	}
	return ""
}

func (m *VpData) GetFallbackKeepalive() []*FallbackKeepaliveData {
	if m != nil {
		return m.FallbackKeepalive
	}
	return nil
}

type PeerData struct {
	Mi                   string   `protobuf:"bytes,1,opt,name=mi,proto3" json:"mi,omitempty"`
	Sci                  string   `protobuf:"bytes,2,opt,name=sci,proto3" json:"sci,omitempty"`
	Mn                   uint32   `protobuf:"varint,3,opt,name=mn,proto3" json:"mn,omitempty"`
	Priority             uint32   `protobuf:"varint,4,opt,name=priority,proto3" json:"priority,omitempty"`
	Ssci                 uint32   `protobuf:"varint,5,opt,name=ssci,proto3" json:"ssci,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PeerData) Reset()         { *m = PeerData{} }
func (m *PeerData) String() string { return proto.CompactTextString(m) }
func (*PeerData) ProtoMessage()    {}
func (*PeerData) Descriptor() ([]byte, []int) {
	return fileDescriptor_87216119eb3785c3, []int{8}
}

func (m *PeerData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PeerData.Unmarshal(m, b)
}
func (m *PeerData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PeerData.Marshal(b, m, deterministic)
}
func (m *PeerData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PeerData.Merge(m, src)
}
func (m *PeerData) XXX_Size() int {
	return xxx_messageInfo_PeerData.Size(m)
}
func (m *PeerData) XXX_DiscardUnknown() {
	xxx_messageInfo_PeerData.DiscardUnknown(m)
}

var xxx_messageInfo_PeerData proto.InternalMessageInfo

func (m *PeerData) GetMi() string {
	if m != nil {
		return m.Mi
	}
	return ""
}

func (m *PeerData) GetSci() string {
	if m != nil {
		return m.Sci
	}
	return ""
}

func (m *PeerData) GetMn() uint32 {
	if m != nil {
		return m.Mn
	}
	return 0
}

func (m *PeerData) GetPriority() uint32 {
	if m != nil {
		return m.Priority
	}
	return 0
}

func (m *PeerData) GetSsci() uint32 {
	if m != nil {
		return m.Ssci
	}
	return 0
}

type CaData struct {
	IsKeyServer           bool             `protobuf:"varint,1,opt,name=is_key_server,json=isKeyServer,proto3" json:"is_key_server,omitempty"`
	Status                uint32           `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
	NumLivePeers          uint32           `protobuf:"varint,3,opt,name=num_live_peers,json=numLivePeers,proto3" json:"num_live_peers,omitempty"`
	FirstCa               bool             `protobuf:"varint,4,opt,name=first_ca,json=firstCa,proto3" json:"first_ca,omitempty"`
	PeerSci               string           `protobuf:"bytes,5,opt,name=peer_sci,json=peerSci,proto3" json:"peer_sci,omitempty"`
	NumLivePeersResponded uint32           `protobuf:"varint,6,opt,name=num_live_peers_responded,json=numLivePeersResponded,proto3" json:"num_live_peers_responded,omitempty"`
	Ckn                   string           `protobuf:"bytes,7,opt,name=ckn,proto3" json:"ckn,omitempty"`
	MyMi                  string           `protobuf:"bytes,8,opt,name=my_mi,json=myMi,proto3" json:"my_mi,omitempty"`
	MyMn                  uint32           `protobuf:"varint,9,opt,name=my_mn,json=myMn,proto3" json:"my_mn,omitempty"`
	Authenticator         bool             `protobuf:"varint,10,opt,name=authenticator,proto3" json:"authenticator,omitempty"`
	LivePeer              []*PeerData      `protobuf:"bytes,11,rep,name=live_peer,json=livePeer,proto3" json:"live_peer,omitempty"`
	PotentialPeer         []*PeerData      `protobuf:"bytes,12,rep,name=potential_peer,json=potentialPeer,proto3" json:"potential_peer,omitempty"`
	DormantPeer           []*PeerData      `protobuf:"bytes,13,rep,name=dormant_peer,json=dormantPeer,proto3" json:"dormant_peer,omitempty"`
	StatusDescription     string           `protobuf:"bytes,14,opt,name=status_description,json=statusDescription,proto3" json:"status_description,omitempty"`
	AuthenticationMode    string           `protobuf:"bytes,15,opt,name=authentication_mode,json=authenticationMode,proto3" json:"authentication_mode,omitempty"`
	KeyChain              string           `protobuf:"bytes,16,opt,name=key_chain,json=keyChain,proto3" json:"key_chain,omitempty"`
	PeersStatus           *PeersStatusData `protobuf:"bytes,17,opt,name=peers_status,json=peersStatus,proto3" json:"peers_status,omitempty"`
	XXX_NoUnkeyedLiteral  struct{}         `json:"-"`
	XXX_unrecognized      []byte           `json:"-"`
	XXX_sizecache         int32            `json:"-"`
}

func (m *CaData) Reset()         { *m = CaData{} }
func (m *CaData) String() string { return proto.CompactTextString(m) }
func (*CaData) ProtoMessage()    {}
func (*CaData) Descriptor() ([]byte, []int) {
	return fileDescriptor_87216119eb3785c3, []int{9}
}

func (m *CaData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CaData.Unmarshal(m, b)
}
func (m *CaData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CaData.Marshal(b, m, deterministic)
}
func (m *CaData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CaData.Merge(m, src)
}
func (m *CaData) XXX_Size() int {
	return xxx_messageInfo_CaData.Size(m)
}
func (m *CaData) XXX_DiscardUnknown() {
	xxx_messageInfo_CaData.DiscardUnknown(m)
}

var xxx_messageInfo_CaData proto.InternalMessageInfo

func (m *CaData) GetIsKeyServer() bool {
	if m != nil {
		return m.IsKeyServer
	}
	return false
}

func (m *CaData) GetStatus() uint32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *CaData) GetNumLivePeers() uint32 {
	if m != nil {
		return m.NumLivePeers
	}
	return 0
}

func (m *CaData) GetFirstCa() bool {
	if m != nil {
		return m.FirstCa
	}
	return false
}

func (m *CaData) GetPeerSci() string {
	if m != nil {
		return m.PeerSci
	}
	return ""
}

func (m *CaData) GetNumLivePeersResponded() uint32 {
	if m != nil {
		return m.NumLivePeersResponded
	}
	return 0
}

func (m *CaData) GetCkn() string {
	if m != nil {
		return m.Ckn
	}
	return ""
}

func (m *CaData) GetMyMi() string {
	if m != nil {
		return m.MyMi
	}
	return ""
}

func (m *CaData) GetMyMn() uint32 {
	if m != nil {
		return m.MyMn
	}
	return 0
}

func (m *CaData) GetAuthenticator() bool {
	if m != nil {
		return m.Authenticator
	}
	return false
}

func (m *CaData) GetLivePeer() []*PeerData {
	if m != nil {
		return m.LivePeer
	}
	return nil
}

func (m *CaData) GetPotentialPeer() []*PeerData {
	if m != nil {
		return m.PotentialPeer
	}
	return nil
}

func (m *CaData) GetDormantPeer() []*PeerData {
	if m != nil {
		return m.DormantPeer
	}
	return nil
}

func (m *CaData) GetStatusDescription() string {
	if m != nil {
		return m.StatusDescription
	}
	return ""
}

func (m *CaData) GetAuthenticationMode() string {
	if m != nil {
		return m.AuthenticationMode
	}
	return ""
}

func (m *CaData) GetKeyChain() string {
	if m != nil {
		return m.KeyChain
	}
	return ""
}

func (m *CaData) GetPeersStatus() *PeersStatusData {
	if m != nil {
		return m.PeersStatus
	}
	return nil
}

type MkaSession struct {
	SessionSummary       *MkaSessionSummary `protobuf:"bytes,50,opt,name=session_summary,json=sessionSummary,proto3" json:"session_summary,omitempty"`
	Vp                   *VpData            `protobuf:"bytes,51,opt,name=vp,proto3" json:"vp,omitempty"`
	Ca                   []*CaData          `protobuf:"bytes,52,rep,name=ca,proto3" json:"ca,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *MkaSession) Reset()         { *m = MkaSession{} }
func (m *MkaSession) String() string { return proto.CompactTextString(m) }
func (*MkaSession) ProtoMessage()    {}
func (*MkaSession) Descriptor() ([]byte, []int) {
	return fileDescriptor_87216119eb3785c3, []int{10}
}

func (m *MkaSession) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MkaSession.Unmarshal(m, b)
}
func (m *MkaSession) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MkaSession.Marshal(b, m, deterministic)
}
func (m *MkaSession) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MkaSession.Merge(m, src)
}
func (m *MkaSession) XXX_Size() int {
	return xxx_messageInfo_MkaSession.Size(m)
}
func (m *MkaSession) XXX_DiscardUnknown() {
	xxx_messageInfo_MkaSession.DiscardUnknown(m)
}

var xxx_messageInfo_MkaSession proto.InternalMessageInfo

func (m *MkaSession) GetSessionSummary() *MkaSessionSummary {
	if m != nil {
		return m.SessionSummary
	}
	return nil
}

func (m *MkaSession) GetVp() *VpData {
	if m != nil {
		return m.Vp
	}
	return nil
}

func (m *MkaSession) GetCa() []*CaData {
	if m != nil {
		return m.Ca
	}
	return nil
}

func init() {
	proto.RegisterType((*MkaSession_KEYS)(nil), "cisco_ios_xr_crypto_macsec_mka_oper.macsec.mka.interfaces.interface.session.mka_session_KEYS")
	proto.RegisterType((*MkaVlanTag)(nil), "cisco_ios_xr_crypto_macsec_mka_oper.macsec.mka.interfaces.interface.session.mka_vlan_tag")
	proto.RegisterType((*MkaSessionSummary)(nil), "cisco_ios_xr_crypto_macsec_mka_oper.macsec.mka.interfaces.interface.session.mka_session_summary")
	proto.RegisterType((*PeerStatusDataInternal)(nil), "cisco_ios_xr_crypto_macsec_mka_oper.macsec.mka.interfaces.interface.session.peer_status_data_internal")
	proto.RegisterType((*PeerStatusData)(nil), "cisco_ios_xr_crypto_macsec_mka_oper.macsec.mka.interfaces.interface.session.peer_status_data")
	proto.RegisterType((*PeersStatusData)(nil), "cisco_ios_xr_crypto_macsec_mka_oper.macsec.mka.interfaces.interface.session.peers_status_data")
	proto.RegisterType((*FallbackKeepaliveData)(nil), "cisco_ios_xr_crypto_macsec_mka_oper.macsec.mka.interfaces.interface.session.fallback_keepalive_data")
	proto.RegisterType((*VpData)(nil), "cisco_ios_xr_crypto_macsec_mka_oper.macsec.mka.interfaces.interface.session.vp_data")
	proto.RegisterType((*PeerData)(nil), "cisco_ios_xr_crypto_macsec_mka_oper.macsec.mka.interfaces.interface.session.peer_data")
	proto.RegisterType((*CaData)(nil), "cisco_ios_xr_crypto_macsec_mka_oper.macsec.mka.interfaces.interface.session.ca_data")
	proto.RegisterType((*MkaSession)(nil), "cisco_ios_xr_crypto_macsec_mka_oper.macsec.mka.interfaces.interface.session.mka_session")
}

func init() { proto.RegisterFile("mka_session.proto", fileDescriptor_87216119eb3785c3) }

var fileDescriptor_87216119eb3785c3 = []byte{
	// 1384 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x57, 0xcf, 0x6f, 0xdb, 0xb6,
	0x17, 0x87, 0x9d, 0x1f, 0xb6, 0x9e, 0x63, 0x27, 0x66, 0x90, 0x56, 0xfd, 0x16, 0xdf, 0xb5, 0x33,
	0xba, 0x22, 0x05, 0x36, 0x0f, 0x48, 0x37, 0xec, 0x5c, 0x24, 0x3b, 0x04, 0x59, 0xb6, 0x40, 0x36,
	0x06, 0xf4, 0xb0, 0x71, 0x2c, 0x45, 0x27, 0x84, 0x24, 0x52, 0x93, 0x68, 0xd7, 0x2a, 0xb0, 0xc3,
	0xb0, 0xd3, 0x4e, 0x3b, 0xec, 0xbf, 0x18, 0xf6, 0xbf, 0xec, 0xb0, 0xe3, 0xce, 0xfb, 0x3f, 0x06,
	0x3e, 0x4a, 0xb2, 0x9c, 0xa2, 0x3b, 0x39, 0xbb, 0x89, 0x9f, 0xf7, 0xc8, 0xcf, 0x7b, 0xe4, 0x7b,
	0x1f, 0x52, 0x30, 0x4c, 0x22, 0x46, 0x73, 0x91, 0xe7, 0x52, 0xab, 0x71, 0x9a, 0x69, 0xa3, 0xc9,
	0x05, 0x97, 0x39, 0xd7, 0x54, 0xea, 0x9c, 0x2e, 0x33, 0xca, 0xb3, 0x22, 0x35, 0x9a, 0x26, 0x8c,
	0xe7, 0x82, 0x53, 0xeb, 0xad, 0x53, 0x91, 0x8d, 0xdd, 0x78, 0x9c, 0x44, 0x6c, 0x2c, 0x95, 0x11,
	0xd9, 0x8c, 0x71, 0x91, 0xaf, 0x3e, 0xc7, 0xe5, 0x92, 0xa3, 0xa7, 0x70, 0xd0, 0x60, 0xa0, 0x17,
	0x9f, 0xbf, 0x9c, 0x10, 0x02, 0xdb, 0x8a, 0x25, 0xc2, 0x6f, 0x3d, 0x6e, 0x1d, 0x7b, 0x01, 0x7e,
	0x8f, 0x0c, 0xec, 0x59, 0xbf, 0x45, 0xcc, 0x14, 0x35, 0xec, 0x9a, 0xfc, 0x1f, 0x40, 0x98, 0x1b,
	0x91, 0x51, 0x53, 0xa4, 0xce, 0xb3, 0x1f, 0x78, 0x88, 0x4c, 0x8b, 0x54, 0x90, 0xff, 0x41, 0x37,
	0xcd, 0xa4, 0xce, 0xa4, 0x29, 0xfc, 0x36, 0x1a, 0xeb, 0x31, 0x39, 0x80, 0x2d, 0x3e, 0x93, 0xfe,
	0x16, 0xc2, 0xf6, 0x93, 0xdc, 0x87, 0x0e, 0x2e, 0x2c, 0x43, 0x7f, 0x1b, 0xd1, 0x5d, 0x3b, 0x3c,
	0x0f, 0x47, 0x7f, 0xed, 0xc2, 0x61, 0x33, 0xbc, 0x7c, 0x9e, 0x24, 0x2c, 0x2b, 0xc8, 0x07, 0x30,
	0xa8, 0x53, 0xa1, 0x8d, 0x58, 0xfb, 0x35, 0xfa, 0x25, 0x4b, 0x04, 0x79, 0x06, 0x07, 0x52, 0xdd,
	0x88, 0x4c, 0x1a, 0x11, 0xd2, 0x54, 0xc7, 0x92, 0xbb, 0x68, 0xba, 0xc1, 0x7e, 0x8d, 0x5f, 0x21,
	0x4c, 0xee, 0xc1, 0x6e, 0xe9, 0xb0, 0x85, 0x2b, 0x95, 0xa3, 0xb5, 0x44, 0xb6, 0x6f, 0x25, 0x72,
	0x04, 0xbb, 0x49, 0x61, 0x77, 0xde, 0xdf, 0xc1, 0x39, 0x3b, 0x49, 0x71, 0xc9, 0xb8, 0x65, 0x0d,
	0x45, 0xcc, 0x0a, 0x6a, 0x8f, 0x4b, 0x70, 0x23, 0xb5, 0xf2, 0x77, 0x1d, 0x2b, 0xe2, 0x57, 0x35,
	0x6c, 0xf3, 0xc8, 0x44, 0xda, 0xf0, 0xf5, 0x3b, 0xe8, 0xd8, 0x77, 0x68, 0xe9, 0x49, 0x1e, 0x41,
	0xef, 0xb5, 0x54, 0xa1, 0x7e, 0x4d, 0x73, 0xf9, 0x46, 0xf8, 0x5d, 0x8c, 0x03, 0x1c, 0x34, 0x91,
	0x6f, 0x04, 0x39, 0x81, 0x23, 0xa9, 0x78, 0x3c, 0x0f, 0x05, 0x95, 0x7c, 0x41, 0xa5, 0x0a, 0x25,
	0x67, 0x46, 0x67, 0xbe, 0x87, 0xcb, 0x1d, 0x96, 0xc6, 0x73, 0xbe, 0x38, 0xaf, 0x4c, 0xe4, 0x53,
	0xb8, 0xc7, 0xb5, 0x9a, 0xc9, 0x50, 0x28, 0x23, 0x59, 0x2c, 0x4d, 0x41, 0xf5, 0x6c, 0x96, 0x0b,
	0xe3, 0x03, 0xae, 0x7f, 0x74, 0xcb, 0xfa, 0x15, 0x1a, 0xc9, 0xfb, 0xb0, 0xc7, 0xe2, 0x6b, 0x4d,
	0xd9, 0xb5, 0xb4, 0xa8, 0xdf, 0x43, 0xe7, 0x9e, 0xc5, 0x5e, 0x38, 0x88, 0xbc, 0x07, 0xc0, 0x59,
	0xca, 0x5e, 0x39, 0x87, 0x3d, 0x17, 0xed, 0x0a, 0x21, 0xc7, 0xae, 0xe6, 0xb8, 0x4c, 0x6d, 0x01,
	0xe5, 0x73, 0x69, 0x84, 0xdf, 0xc7, 0x1d, 0x1c, 0x24, 0x11, 0x3b, 0x45, 0x78, 0x62, 0x51, 0x72,
	0x06, 0x8f, 0x30, 0x8a, 0xeb, 0x79, 0x26, 0x42, 0xbb, 0xd3, 0xd4, 0x16, 0xf9, 0xda, 0xc4, 0x01,
	0x4e, 0x7c, 0xb8, 0x72, 0xbb, 0x64, 0x7c, 0x22, 0x78, 0x73, 0x95, 0xa7, 0xb0, 0x5f, 0x4d, 0x0d,
	0x45, 0x2e, 0x33, 0x11, 0xfa, 0xfb, 0x6e, 0x9b, 0x13, 0xf4, 0x3d, 0x73, 0x20, 0x59, 0x80, 0xa7,
	0xe7, 0xc6, 0xd6, 0x34, 0xbb, 0xf6, 0x0f, 0x1e, 0xb7, 0x8e, 0x7b, 0x27, 0x2f, 0xc7, 0x1b, 0x6c,
	0xb6, 0x71, 0xb3, 0x83, 0x82, 0x2e, 0x72, 0x4d, 0xd9, 0xb5, 0xe5, 0x95, 0x4a, 0x95, 0xbc, 0xc3,
	0x3b, 0xe7, 0x45, 0xae, 0x29, 0xbb, 0x1e, 0xbd, 0x81, 0x07, 0xa9, 0xb0, 0x1b, 0x69, 0x98, 0x99,
	0xe7, 0x34, 0x64, 0x86, 0x51, 0x9c, 0xac, 0x58, 0x4c, 0x06, 0xd0, 0x4e, 0x64, 0xd9, 0x56, 0xed,
	0x44, 0xda, 0x86, 0xb7, 0xa5, 0xe5, 0x7c, 0xb1, 0x8b, 0xbc, 0xc0, 0x93, 0x7c, 0x31, 0x41, 0x80,
	0x8c, 0xe1, 0xd0, 0x9a, 0xf9, 0x8d, 0xe0, 0x11, 0x35, 0x32, 0x11, 0xb9, 0x61, 0x49, 0x5a, 0x36,
	0xd3, 0x50, 0xf2, 0xc5, 0xa9, 0xb5, 0x4c, 0x2b, 0xc3, 0xe8, 0xb7, 0x16, 0x1c, 0xdc, 0x26, 0xb7,
	0xca, 0x90, 0xf3, 0x8a, 0xd4, 0x7e, 0x92, 0x9f, 0x5a, 0xe0, 0xa1, 0x9b, 0xb5, 0x23, 0x6b, 0xef,
	0x64, 0xb6, 0xd1, 0xbd, 0x79, 0xe7, 0x0e, 0x04, 0x5d, 0x6b, 0x3a, 0x63, 0x86, 0x8d, 0xfe, 0x6c,
	0xc1, 0xd0, 0x0e, 0xf2, 0xb5, 0x68, 0x3f, 0x04, 0x62, 0x96, 0x34, 0x89, 0xd2, 0x70, 0xde, 0xc8,
	0xd8, 0x05, 0x7f, 0x60, 0x96, 0x97, 0xd6, 0x50, 0x27, 0x6c, 0xf7, 0x0f, 0xa9, 0xb8, 0x9e, 0x2b,
	0x53, 0x6a, 0x22, 0xa6, 0x76, 0x6a, 0x01, 0xf2, 0x3d, 0x6c, 0xdb, 0x81, 0xbf, 0xf5, 0x78, 0xeb,
	0xb8, 0x77, 0xf2, 0xcd, 0x9d, 0xa6, 0x18, 0x20, 0xd5, 0xe8, 0x8f, 0x16, 0xdc, 0x9f, 0xb1, 0x38,
	0x7e, 0xc5, 0x78, 0x44, 0x23, 0x21, 0x52, 0x16, 0xcb, 0x85, 0xa8, 0x4f, 0x82, 0x47, 0xaa, 0x3a,
	0x09, 0x1e, 0xa9, 0xb2, 0x1e, 0xda, 0x75, 0x3d, 0xd8, 0xb1, 0x2a, 0x45, 0xbc, 0x9d, 0x28, 0xf2,
	0x63, 0x0b, 0xf6, 0x9a, 0x7b, 0x84, 0x6a, 0xd9, 0x3b, 0xf9, 0x76, 0xe3, 0x99, 0xac, 0x1d, 0x42,
	0xd0, 0x43, 0xc8, 0x15, 0xe1, 0xe8, 0x97, 0x1d, 0xe8, 0x2c, 0x52, 0x97, 0x81, 0x13, 0xe7, 0x55,
	0x39, 0xed, 0x24, 0xc5, 0x84, 0x4b, 0xab, 0x05, 0x0b, 0x99, 0x99, 0x39, 0x8b, 0x69, 0xaa, 0x33,
	0x63, 0xaf, 0x1c, 0x77, 0x16, 0xfd, 0x12, 0xbe, 0xd2, 0x99, 0x39, 0x0f, 0xc9, 0x43, 0xf0, 0x62,
	0x66, 0x44, 0x6e, 0x68, 0xb6, 0xc4, 0x2c, 0xbb, 0x41, 0xd7, 0x01, 0xc1, 0xb2, 0x61, 0x34, 0x4b,
	0xcc, 0xb3, 0x36, 0x4e, 0x9b, 0x46, 0xa6, 0xf0, 0x62, 0xe8, 0x57, 0xc6, 0x17, 0xaa, 0x61, 0x8c,
	0x24, 0x5e, 0x0a, 0x5e, 0x65, 0xbc, 0x90, 0x4d, 0xa3, 0xc2, 0x8b, 0xa0, 0x9e, 0x79, 0xa1, 0x6c,
	0x3e, 0x3a, 0x0e, 0x6d, 0x34, 0x5d, 0x24, 0xdc, 0xd1, 0x71, 0x18, 0x2c, 0x2b, 0xd8, 0x2c, 0x4b,
	0xa9, 0xb7, 0xf0, 0xb4, 0x86, 0x99, 0x2a, 0xc5, 0xdc, 0xc2, 0x2f, 0xea, 0x45, 0x22, 0x89, 0xb2,
	0xed, 0x21, 0x7c, 0x21, 0x6b, 0x58, 0x95, 0x62, 0x8d, 0x30, 0x06, 0xfb, 0x9a, 0x49, 0x83, 0xc5,
	0x8d, 0x02, 0xdd, 0x0f, 0xba, 0x16, 0xb0, 0x45, 0x6d, 0xef, 0xa4, 0x4c, 0x18, 0x99, 0x09, 0x67,
	0x1e, 0x38, 0x95, 0x77, 0x10, 0x3a, 0x8c, 0xe1, 0xb0, 0x3c, 0xe6, 0x35, 0xbd, 0xde, 0x77, 0x8a,
	0xe0, 0x4c, 0x4d, 0x95, 0x26, 0xb0, 0x9d, 0xdb, 0xe3, 0x3a, 0xc0, 0x95, 0xf0, 0x9b, 0x3c, 0x83,
	0xa1, 0x5d, 0x9d, 0x1a, 0x4d, 0x73, 0x16, 0xd1, 0x4c, 0x44, 0xa2, 0x40, 0x85, 0xf4, 0x82, 0x81,
	0x35, 0x4c, 0xf5, 0x84, 0x45, 0x81, 0x45, 0xc9, 0xaf, 0x2d, 0x20, 0x6f, 0x57, 0xb3, 0x4f, 0xb0,
	0x9f, 0xc2, 0x8d, 0x56, 0xe1, 0x3b, 0x9a, 0x26, 0x18, 0x56, 0x86, 0x8b, 0x0a, 0x1f, 0x25, 0x0d,
	0xf9, 0x7a, 0x4b, 0x52, 0x4b, 0xb9, 0x6b, 0xaf, 0xe4, 0xee, 0x76, 0x53, 0xfd, 0xdb, 0xeb, 0xa3,
	0xda, 0xaf, 0x9d, 0xd5, 0x7e, 0x8d, 0x7e, 0xef, 0x40, 0x87, 0x33, 0xc7, 0x36, 0x82, 0xbe, 0xcc,
	0x69, 0x24, 0x0a, 0x9a, 0x8b, 0x6c, 0x21, 0x32, 0x24, 0xee, 0x06, 0x3d, 0x99, 0x5f, 0x88, 0x62,
	0x82, 0x90, 0x7d, 0xf5, 0x34, 0x04, 0xbd, 0x1f, 0x94, 0x23, 0xf2, 0x04, 0x06, 0x6a, 0x9e, 0x50,
	0x4c, 0x0d, 0x1b, 0xac, 0x8c, 0x69, 0x4f, 0xcd, 0x93, 0x2f, 0xe4, 0x42, 0x5c, 0x59, 0x8c, 0x3c,
	0x80, 0xee, 0x4c, 0x66, 0xb9, 0xa1, 0x9c, 0x95, 0x5d, 0xd0, 0xc1, 0xf1, 0x29, 0xb3, 0x26, 0xa7,
	0x3a, 0x65, 0x80, 0x5e, 0xd0, 0xb1, 0x63, 0xdb, 0x81, 0x9f, 0x81, 0xbf, 0xbe, 0x36, 0xcd, 0x44,
	0x9e, 0x6a, 0x15, 0x8a, 0x10, 0x3b, 0xa2, 0x1f, 0x1c, 0x35, 0x59, 0x82, 0xca, 0x58, 0x69, 0x52,
	0x67, 0xa5, 0x49, 0x87, 0xb0, 0x63, 0x1f, 0x60, 0x12, 0x5b, 0xc2, 0x0b, 0xb6, 0x93, 0xe2, 0x52,
	0x56, 0xa0, 0xc2, 0x86, 0xe8, 0x23, 0xa8, 0xc8, 0x13, 0xe8, 0xb3, 0xb9, 0xb9, 0xb1, 0x8f, 0x19,
	0xf7, 0x30, 0x02, 0xf7, 0x00, 0x58, 0x03, 0x49, 0x0e, 0x5e, 0x1d, 0x96, 0xdf, 0xc3, 0xca, 0xf9,
	0x7a, 0xf3, 0x4a, 0x8c, 0xb5, 0xd2, 0x8d, 0xcb, 0x04, 0xc9, 0x0f, 0x30, 0x48, 0xb5, 0x71, 0xcf,
	0x2c, 0xc7, 0xbc, 0x77, 0xa7, 0xcc, 0xfd, 0x9a, 0x0d, 0xe9, 0x0b, 0xd8, 0x0b, 0x75, 0x96, 0x30,
	0x65, 0x1c, 0x79, 0xff, 0x4e, 0xc9, 0x7b, 0x25, 0x17, 0x52, 0x7f, 0x04, 0xa4, 0x92, 0x72, 0x91,
	0xf3, 0x4c, 0xa6, 0xf8, 0x54, 0x76, 0x0f, 0xba, 0xa1, 0xb3, 0x9c, 0xad, 0x0c, 0xe4, 0x63, 0x38,
	0x6c, 0x1c, 0x97, 0xfd, 0x1d, 0x48, 0x74, 0x58, 0x09, 0x0a, 0x59, 0x37, 0x5d, 0xea, 0x50, 0x58,
	0xfd, 0xb2, 0xe5, 0xcf, 0x6f, 0x98, 0x54, 0x28, 0x2b, 0x5e, 0xd0, 0x8d, 0x44, 0x71, 0x6a, 0xc7,
	0x6f, 0xdf, 0x57, 0xc3, 0xff, 0xfe, 0xbe, 0xfa, 0xbb, 0x0d, 0xbd, 0xc6, 0xef, 0x0d, 0xf9, 0xb9,
	0x05, 0xfb, 0xb7, 0x7e, 0x75, 0xfc, 0x13, 0x0c, 0xeb, 0xbb, 0x8d, 0xbf, 0x07, 0x6f, 0xf1, 0x04,
	0x83, 0x12, 0x98, 0x94, 0xbf, 0x58, 0x21, 0xb4, 0x17, 0xa9, 0xff, 0x1c, 0xd9, 0xa7, 0x1b, 0x65,
	0x2f, 0x6f, 0xe8, 0xa0, 0xbd, 0x48, 0x2d, 0x0b, 0x67, 0xfe, 0x27, 0x58, 0x73, 0x9b, 0x65, 0x29,
	0x65, 0x30, 0x68, 0x73, 0xf6, 0x6a, 0x17, 0x7f, 0x9c, 0x9f, 0xff, 0x13, 0x00, 0x00, 0xff, 0xff,
	0x4f, 0x87, 0x61, 0xce, 0x4d, 0x0f, 0x00, 0x00,
}
