/*
Copyright 2019 Cisco Systems

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: l2vpn_mp2mp_xc.proto

package cisco_ios_xr_l2vpn_oper_l2vpnv2_active_xconnect_mp2mps_xconnect_mp2mp

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type L2VpnMp2MpXc_KEYS struct {
	GroupName            string   `protobuf:"bytes,1,opt,name=group_name,json=groupName,proto3" json:"group_name,omitempty"`
	Mp2MpName            string   `protobuf:"bytes,2,opt,name=mp2_mp_name,json=mp2MpName,proto3" json:"mp2_mp_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *L2VpnMp2MpXc_KEYS) Reset()         { *m = L2VpnMp2MpXc_KEYS{} }
func (m *L2VpnMp2MpXc_KEYS) String() string { return proto.CompactTextString(m) }
func (*L2VpnMp2MpXc_KEYS) ProtoMessage()    {}
func (*L2VpnMp2MpXc_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_60f1c5dc6a27dd31, []int{0}
}

func (m *L2VpnMp2MpXc_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_L2VpnMp2MpXc_KEYS.Unmarshal(m, b)
}
func (m *L2VpnMp2MpXc_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_L2VpnMp2MpXc_KEYS.Marshal(b, m, deterministic)
}
func (m *L2VpnMp2MpXc_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_L2VpnMp2MpXc_KEYS.Merge(m, src)
}
func (m *L2VpnMp2MpXc_KEYS) XXX_Size() int {
	return xxx_messageInfo_L2VpnMp2MpXc_KEYS.Size(m)
}
func (m *L2VpnMp2MpXc_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_L2VpnMp2MpXc_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_L2VpnMp2MpXc_KEYS proto.InternalMessageInfo

func (m *L2VpnMp2MpXc_KEYS) GetGroupName() string {
	if m != nil {
		return m.GroupName
	}
	return ""
}

func (m *L2VpnMp2MpXc_KEYS) GetMp2MpName() string {
	if m != nil {
		return m.Mp2MpName
	}
	return ""
}

type L2VpnRdAuto struct {
	RouterId             string   `protobuf:"bytes,1,opt,name=router_id,json=routerId,proto3" json:"router_id,omitempty"`
	AutoIndex            uint32   `protobuf:"varint,2,opt,name=auto_index,json=autoIndex,proto3" json:"auto_index,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *L2VpnRdAuto) Reset()         { *m = L2VpnRdAuto{} }
func (m *L2VpnRdAuto) String() string { return proto.CompactTextString(m) }
func (*L2VpnRdAuto) ProtoMessage()    {}
func (*L2VpnRdAuto) Descriptor() ([]byte, []int) {
	return fileDescriptor_60f1c5dc6a27dd31, []int{1}
}

func (m *L2VpnRdAuto) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_L2VpnRdAuto.Unmarshal(m, b)
}
func (m *L2VpnRdAuto) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_L2VpnRdAuto.Marshal(b, m, deterministic)
}
func (m *L2VpnRdAuto) XXX_Merge(src proto.Message) {
	xxx_messageInfo_L2VpnRdAuto.Merge(m, src)
}
func (m *L2VpnRdAuto) XXX_Size() int {
	return xxx_messageInfo_L2VpnRdAuto.Size(m)
}
func (m *L2VpnRdAuto) XXX_DiscardUnknown() {
	xxx_messageInfo_L2VpnRdAuto.DiscardUnknown(m)
}

var xxx_messageInfo_L2VpnRdAuto proto.InternalMessageInfo

func (m *L2VpnRdAuto) GetRouterId() string {
	if m != nil {
		return m.RouterId
	}
	return ""
}

func (m *L2VpnRdAuto) GetAutoIndex() uint32 {
	if m != nil {
		return m.AutoIndex
	}
	return 0
}

type L2VpnRd_2ByteAs struct {
	TwoByteAs            uint32   `protobuf:"varint,1,opt,name=two_byte_as,json=twoByteAs,proto3" json:"two_byte_as,omitempty"`
	FourByteIndex        uint32   `protobuf:"varint,2,opt,name=four_byte_index,json=fourByteIndex,proto3" json:"four_byte_index,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *L2VpnRd_2ByteAs) Reset()         { *m = L2VpnRd_2ByteAs{} }
func (m *L2VpnRd_2ByteAs) String() string { return proto.CompactTextString(m) }
func (*L2VpnRd_2ByteAs) ProtoMessage()    {}
func (*L2VpnRd_2ByteAs) Descriptor() ([]byte, []int) {
	return fileDescriptor_60f1c5dc6a27dd31, []int{2}
}

func (m *L2VpnRd_2ByteAs) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_L2VpnRd_2ByteAs.Unmarshal(m, b)
}
func (m *L2VpnRd_2ByteAs) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_L2VpnRd_2ByteAs.Marshal(b, m, deterministic)
}
func (m *L2VpnRd_2ByteAs) XXX_Merge(src proto.Message) {
	xxx_messageInfo_L2VpnRd_2ByteAs.Merge(m, src)
}
func (m *L2VpnRd_2ByteAs) XXX_Size() int {
	return xxx_messageInfo_L2VpnRd_2ByteAs.Size(m)
}
func (m *L2VpnRd_2ByteAs) XXX_DiscardUnknown() {
	xxx_messageInfo_L2VpnRd_2ByteAs.DiscardUnknown(m)
}

var xxx_messageInfo_L2VpnRd_2ByteAs proto.InternalMessageInfo

func (m *L2VpnRd_2ByteAs) GetTwoByteAs() uint32 {
	if m != nil {
		return m.TwoByteAs
	}
	return 0
}

func (m *L2VpnRd_2ByteAs) GetFourByteIndex() uint32 {
	if m != nil {
		return m.FourByteIndex
	}
	return 0
}

type L2VpnRd_4ByteAs struct {
	FourByteAs           uint32   `protobuf:"varint,1,opt,name=four_byte_as,json=fourByteAs,proto3" json:"four_byte_as,omitempty"`
	TwoByteIndex         uint32   `protobuf:"varint,2,opt,name=two_byte_index,json=twoByteIndex,proto3" json:"two_byte_index,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *L2VpnRd_4ByteAs) Reset()         { *m = L2VpnRd_4ByteAs{} }
func (m *L2VpnRd_4ByteAs) String() string { return proto.CompactTextString(m) }
func (*L2VpnRd_4ByteAs) ProtoMessage()    {}
func (*L2VpnRd_4ByteAs) Descriptor() ([]byte, []int) {
	return fileDescriptor_60f1c5dc6a27dd31, []int{3}
}

func (m *L2VpnRd_4ByteAs) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_L2VpnRd_4ByteAs.Unmarshal(m, b)
}
func (m *L2VpnRd_4ByteAs) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_L2VpnRd_4ByteAs.Marshal(b, m, deterministic)
}
func (m *L2VpnRd_4ByteAs) XXX_Merge(src proto.Message) {
	xxx_messageInfo_L2VpnRd_4ByteAs.Merge(m, src)
}
func (m *L2VpnRd_4ByteAs) XXX_Size() int {
	return xxx_messageInfo_L2VpnRd_4ByteAs.Size(m)
}
func (m *L2VpnRd_4ByteAs) XXX_DiscardUnknown() {
	xxx_messageInfo_L2VpnRd_4ByteAs.DiscardUnknown(m)
}

var xxx_messageInfo_L2VpnRd_4ByteAs proto.InternalMessageInfo

func (m *L2VpnRd_4ByteAs) GetFourByteAs() uint32 {
	if m != nil {
		return m.FourByteAs
	}
	return 0
}

func (m *L2VpnRd_4ByteAs) GetTwoByteIndex() uint32 {
	if m != nil {
		return m.TwoByteIndex
	}
	return 0
}

type L2VpnRdV4Addr struct {
	Ipv4Address          string   `protobuf:"bytes,1,opt,name=ipv4_address,json=ipv4Address,proto3" json:"ipv4_address,omitempty"`
	TwoByteIndex         uint32   `protobuf:"varint,2,opt,name=two_byte_index,json=twoByteIndex,proto3" json:"two_byte_index,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *L2VpnRdV4Addr) Reset()         { *m = L2VpnRdV4Addr{} }
func (m *L2VpnRdV4Addr) String() string { return proto.CompactTextString(m) }
func (*L2VpnRdV4Addr) ProtoMessage()    {}
func (*L2VpnRdV4Addr) Descriptor() ([]byte, []int) {
	return fileDescriptor_60f1c5dc6a27dd31, []int{4}
}

func (m *L2VpnRdV4Addr) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_L2VpnRdV4Addr.Unmarshal(m, b)
}
func (m *L2VpnRdV4Addr) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_L2VpnRdV4Addr.Marshal(b, m, deterministic)
}
func (m *L2VpnRdV4Addr) XXX_Merge(src proto.Message) {
	xxx_messageInfo_L2VpnRdV4Addr.Merge(m, src)
}
func (m *L2VpnRdV4Addr) XXX_Size() int {
	return xxx_messageInfo_L2VpnRdV4Addr.Size(m)
}
func (m *L2VpnRdV4Addr) XXX_DiscardUnknown() {
	xxx_messageInfo_L2VpnRdV4Addr.DiscardUnknown(m)
}

var xxx_messageInfo_L2VpnRdV4Addr proto.InternalMessageInfo

func (m *L2VpnRdV4Addr) GetIpv4Address() string {
	if m != nil {
		return m.Ipv4Address
	}
	return ""
}

func (m *L2VpnRdV4Addr) GetTwoByteIndex() uint32 {
	if m != nil {
		return m.TwoByteIndex
	}
	return 0
}

type L2VpnRd struct {
	Rd                   string           `protobuf:"bytes,1,opt,name=rd,proto3" json:"rd,omitempty"`
	Auto                 *L2VpnRdAuto     `protobuf:"bytes,2,opt,name=auto,proto3" json:"auto,omitempty"`
	TwoByteAs            *L2VpnRd_2ByteAs `protobuf:"bytes,3,opt,name=two_byte_as,json=twoByteAs,proto3" json:"two_byte_as,omitempty"`
	FourByteAs           *L2VpnRd_4ByteAs `protobuf:"bytes,4,opt,name=four_byte_as,json=fourByteAs,proto3" json:"four_byte_as,omitempty"`
	V4Addr               *L2VpnRdV4Addr   `protobuf:"bytes,5,opt,name=v4_addr,json=v4Addr,proto3" json:"v4_addr,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *L2VpnRd) Reset()         { *m = L2VpnRd{} }
func (m *L2VpnRd) String() string { return proto.CompactTextString(m) }
func (*L2VpnRd) ProtoMessage()    {}
func (*L2VpnRd) Descriptor() ([]byte, []int) {
	return fileDescriptor_60f1c5dc6a27dd31, []int{5}
}

func (m *L2VpnRd) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_L2VpnRd.Unmarshal(m, b)
}
func (m *L2VpnRd) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_L2VpnRd.Marshal(b, m, deterministic)
}
func (m *L2VpnRd) XXX_Merge(src proto.Message) {
	xxx_messageInfo_L2VpnRd.Merge(m, src)
}
func (m *L2VpnRd) XXX_Size() int {
	return xxx_messageInfo_L2VpnRd.Size(m)
}
func (m *L2VpnRd) XXX_DiscardUnknown() {
	xxx_messageInfo_L2VpnRd.DiscardUnknown(m)
}

var xxx_messageInfo_L2VpnRd proto.InternalMessageInfo

func (m *L2VpnRd) GetRd() string {
	if m != nil {
		return m.Rd
	}
	return ""
}

func (m *L2VpnRd) GetAuto() *L2VpnRdAuto {
	if m != nil {
		return m.Auto
	}
	return nil
}

func (m *L2VpnRd) GetTwoByteAs() *L2VpnRd_2ByteAs {
	if m != nil {
		return m.TwoByteAs
	}
	return nil
}

func (m *L2VpnRd) GetFourByteAs() *L2VpnRd_4ByteAs {
	if m != nil {
		return m.FourByteAs
	}
	return nil
}

func (m *L2VpnRd) GetV4Addr() *L2VpnRdV4Addr {
	if m != nil {
		return m.V4Addr
	}
	return nil
}

type L2VpnRt_2ByteAs struct {
	TwoByteAs            uint32   `protobuf:"varint,1,opt,name=two_byte_as,json=twoByteAs,proto3" json:"two_byte_as,omitempty"`
	FourByteIndex        uint32   `protobuf:"varint,2,opt,name=four_byte_index,json=fourByteIndex,proto3" json:"four_byte_index,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *L2VpnRt_2ByteAs) Reset()         { *m = L2VpnRt_2ByteAs{} }
func (m *L2VpnRt_2ByteAs) String() string { return proto.CompactTextString(m) }
func (*L2VpnRt_2ByteAs) ProtoMessage()    {}
func (*L2VpnRt_2ByteAs) Descriptor() ([]byte, []int) {
	return fileDescriptor_60f1c5dc6a27dd31, []int{6}
}

func (m *L2VpnRt_2ByteAs) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_L2VpnRt_2ByteAs.Unmarshal(m, b)
}
func (m *L2VpnRt_2ByteAs) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_L2VpnRt_2ByteAs.Marshal(b, m, deterministic)
}
func (m *L2VpnRt_2ByteAs) XXX_Merge(src proto.Message) {
	xxx_messageInfo_L2VpnRt_2ByteAs.Merge(m, src)
}
func (m *L2VpnRt_2ByteAs) XXX_Size() int {
	return xxx_messageInfo_L2VpnRt_2ByteAs.Size(m)
}
func (m *L2VpnRt_2ByteAs) XXX_DiscardUnknown() {
	xxx_messageInfo_L2VpnRt_2ByteAs.DiscardUnknown(m)
}

var xxx_messageInfo_L2VpnRt_2ByteAs proto.InternalMessageInfo

func (m *L2VpnRt_2ByteAs) GetTwoByteAs() uint32 {
	if m != nil {
		return m.TwoByteAs
	}
	return 0
}

func (m *L2VpnRt_2ByteAs) GetFourByteIndex() uint32 {
	if m != nil {
		return m.FourByteIndex
	}
	return 0
}

type L2VpnRt_4ByteAs struct {
	FourByteAs           uint32   `protobuf:"varint,1,opt,name=four_byte_as,json=fourByteAs,proto3" json:"four_byte_as,omitempty"`
	TwoByteIndex         uint32   `protobuf:"varint,2,opt,name=two_byte_index,json=twoByteIndex,proto3" json:"two_byte_index,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *L2VpnRt_4ByteAs) Reset()         { *m = L2VpnRt_4ByteAs{} }
func (m *L2VpnRt_4ByteAs) String() string { return proto.CompactTextString(m) }
func (*L2VpnRt_4ByteAs) ProtoMessage()    {}
func (*L2VpnRt_4ByteAs) Descriptor() ([]byte, []int) {
	return fileDescriptor_60f1c5dc6a27dd31, []int{7}
}

func (m *L2VpnRt_4ByteAs) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_L2VpnRt_4ByteAs.Unmarshal(m, b)
}
func (m *L2VpnRt_4ByteAs) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_L2VpnRt_4ByteAs.Marshal(b, m, deterministic)
}
func (m *L2VpnRt_4ByteAs) XXX_Merge(src proto.Message) {
	xxx_messageInfo_L2VpnRt_4ByteAs.Merge(m, src)
}
func (m *L2VpnRt_4ByteAs) XXX_Size() int {
	return xxx_messageInfo_L2VpnRt_4ByteAs.Size(m)
}
func (m *L2VpnRt_4ByteAs) XXX_DiscardUnknown() {
	xxx_messageInfo_L2VpnRt_4ByteAs.DiscardUnknown(m)
}

var xxx_messageInfo_L2VpnRt_4ByteAs proto.InternalMessageInfo

func (m *L2VpnRt_4ByteAs) GetFourByteAs() uint32 {
	if m != nil {
		return m.FourByteAs
	}
	return 0
}

func (m *L2VpnRt_4ByteAs) GetTwoByteIndex() uint32 {
	if m != nil {
		return m.TwoByteIndex
	}
	return 0
}

type L2VpnRtV4Addr struct {
	Ipv4Address          string   `protobuf:"bytes,1,opt,name=ipv4_address,json=ipv4Address,proto3" json:"ipv4_address,omitempty"`
	TwoByteIndex         uint32   `protobuf:"varint,2,opt,name=two_byte_index,json=twoByteIndex,proto3" json:"two_byte_index,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *L2VpnRtV4Addr) Reset()         { *m = L2VpnRtV4Addr{} }
func (m *L2VpnRtV4Addr) String() string { return proto.CompactTextString(m) }
func (*L2VpnRtV4Addr) ProtoMessage()    {}
func (*L2VpnRtV4Addr) Descriptor() ([]byte, []int) {
	return fileDescriptor_60f1c5dc6a27dd31, []int{8}
}

func (m *L2VpnRtV4Addr) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_L2VpnRtV4Addr.Unmarshal(m, b)
}
func (m *L2VpnRtV4Addr) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_L2VpnRtV4Addr.Marshal(b, m, deterministic)
}
func (m *L2VpnRtV4Addr) XXX_Merge(src proto.Message) {
	xxx_messageInfo_L2VpnRtV4Addr.Merge(m, src)
}
func (m *L2VpnRtV4Addr) XXX_Size() int {
	return xxx_messageInfo_L2VpnRtV4Addr.Size(m)
}
func (m *L2VpnRtV4Addr) XXX_DiscardUnknown() {
	xxx_messageInfo_L2VpnRtV4Addr.DiscardUnknown(m)
}

var xxx_messageInfo_L2VpnRtV4Addr proto.InternalMessageInfo

func (m *L2VpnRtV4Addr) GetIpv4Address() string {
	if m != nil {
		return m.Ipv4Address
	}
	return ""
}

func (m *L2VpnRtV4Addr) GetTwoByteIndex() uint32 {
	if m != nil {
		return m.TwoByteIndex
	}
	return 0
}

type L2VpnRtEsImport struct {
	HighBytes            uint32   `protobuf:"varint,1,opt,name=high_bytes,json=highBytes,proto3" json:"high_bytes,omitempty"`
	LowBytes             uint32   `protobuf:"varint,2,opt,name=low_bytes,json=lowBytes,proto3" json:"low_bytes,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *L2VpnRtEsImport) Reset()         { *m = L2VpnRtEsImport{} }
func (m *L2VpnRtEsImport) String() string { return proto.CompactTextString(m) }
func (*L2VpnRtEsImport) ProtoMessage()    {}
func (*L2VpnRtEsImport) Descriptor() ([]byte, []int) {
	return fileDescriptor_60f1c5dc6a27dd31, []int{9}
}

func (m *L2VpnRtEsImport) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_L2VpnRtEsImport.Unmarshal(m, b)
}
func (m *L2VpnRtEsImport) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_L2VpnRtEsImport.Marshal(b, m, deterministic)
}
func (m *L2VpnRtEsImport) XXX_Merge(src proto.Message) {
	xxx_messageInfo_L2VpnRtEsImport.Merge(m, src)
}
func (m *L2VpnRtEsImport) XXX_Size() int {
	return xxx_messageInfo_L2VpnRtEsImport.Size(m)
}
func (m *L2VpnRtEsImport) XXX_DiscardUnknown() {
	xxx_messageInfo_L2VpnRtEsImport.DiscardUnknown(m)
}

var xxx_messageInfo_L2VpnRtEsImport proto.InternalMessageInfo

func (m *L2VpnRtEsImport) GetHighBytes() uint32 {
	if m != nil {
		return m.HighBytes
	}
	return 0
}

func (m *L2VpnRtEsImport) GetLowBytes() uint32 {
	if m != nil {
		return m.LowBytes
	}
	return 0
}

type L2VpnRt struct {
	Rt                   string           `protobuf:"bytes,1,opt,name=rt,proto3" json:"rt,omitempty"`
	TwoByteAs            *L2VpnRt_2ByteAs `protobuf:"bytes,2,opt,name=two_byte_as,json=twoByteAs,proto3" json:"two_byte_as,omitempty"`
	FourByteAs           *L2VpnRt_4ByteAs `protobuf:"bytes,3,opt,name=four_byte_as,json=fourByteAs,proto3" json:"four_byte_as,omitempty"`
	V4Addr               *L2VpnRtV4Addr   `protobuf:"bytes,4,opt,name=v4_addr,json=v4Addr,proto3" json:"v4_addr,omitempty"`
	EsImport             *L2VpnRtEsImport `protobuf:"bytes,5,opt,name=es_import,json=esImport,proto3" json:"es_import,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *L2VpnRt) Reset()         { *m = L2VpnRt{} }
func (m *L2VpnRt) String() string { return proto.CompactTextString(m) }
func (*L2VpnRt) ProtoMessage()    {}
func (*L2VpnRt) Descriptor() ([]byte, []int) {
	return fileDescriptor_60f1c5dc6a27dd31, []int{10}
}

func (m *L2VpnRt) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_L2VpnRt.Unmarshal(m, b)
}
func (m *L2VpnRt) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_L2VpnRt.Marshal(b, m, deterministic)
}
func (m *L2VpnRt) XXX_Merge(src proto.Message) {
	xxx_messageInfo_L2VpnRt.Merge(m, src)
}
func (m *L2VpnRt) XXX_Size() int {
	return xxx_messageInfo_L2VpnRt.Size(m)
}
func (m *L2VpnRt) XXX_DiscardUnknown() {
	xxx_messageInfo_L2VpnRt.DiscardUnknown(m)
}

var xxx_messageInfo_L2VpnRt proto.InternalMessageInfo

func (m *L2VpnRt) GetRt() string {
	if m != nil {
		return m.Rt
	}
	return ""
}

func (m *L2VpnRt) GetTwoByteAs() *L2VpnRt_2ByteAs {
	if m != nil {
		return m.TwoByteAs
	}
	return nil
}

func (m *L2VpnRt) GetFourByteAs() *L2VpnRt_4ByteAs {
	if m != nil {
		return m.FourByteAs
	}
	return nil
}

func (m *L2VpnRt) GetV4Addr() *L2VpnRtV4Addr {
	if m != nil {
		return m.V4Addr
	}
	return nil
}

func (m *L2VpnRt) GetEsImport() *L2VpnRtEsImport {
	if m != nil {
		return m.EsImport
	}
	return nil
}

type L2VpnXcDisco struct {
	AdMethod              uint32     `protobuf:"varint,1,opt,name=ad_method,json=adMethod,proto3" json:"ad_method,omitempty"`
	VpnAdded              bool       `protobuf:"varint,2,opt,name=vpn_added,json=vpnAdded,proto3" json:"vpn_added,omitempty"`
	AdServiceConnected    bool       `protobuf:"varint,3,opt,name=ad_service_connected,json=adServiceConnected,proto3" json:"ad_service_connected,omitempty"`
	RdValue               *L2VpnRd   `protobuf:"bytes,4,opt,name=rd_value,json=rdValue,proto3" json:"rd_value,omitempty"`
	ImportRt              []*L2VpnRt `protobuf:"bytes,5,rep,name=import_rt,json=importRt,proto3" json:"import_rt,omitempty"`
	ExportRt              []*L2VpnRt `protobuf:"bytes,6,rep,name=export_rt,json=exportRt,proto3" json:"export_rt,omitempty"`
	AdSignallingMethod    uint32     `protobuf:"varint,7,opt,name=ad_signalling_method,json=adSignallingMethod,proto3" json:"ad_signalling_method,omitempty"`
	CeRange               uint32     `protobuf:"varint,8,opt,name=ce_range,json=ceRange,proto3" json:"ce_range,omitempty"`
	ExportRoutePolicy     string     `protobuf:"bytes,9,opt,name=export_route_policy,json=exportRoutePolicy,proto3" json:"export_route_policy,omitempty"`
	NumberACsUp           uint32     `protobuf:"varint,10,opt,name=number_a_cs_up,json=numberACsUp,proto3" json:"number_a_cs_up,omitempty"`
	NumberPWsUp           uint32     `protobuf:"varint,11,opt,name=number_p_ws_up,json=numberPWsUp,proto3" json:"number_p_ws_up,omitempty"`
	NumberCe2CeAdvertised uint32     `protobuf:"varint,12,opt,name=number_ce2ce_advertised,json=numberCe2ceAdvertised,proto3" json:"number_ce2ce_advertised,omitempty"`
	NumberACs             uint32     `protobuf:"varint,13,opt,name=number_a_cs,json=numberACs,proto3" json:"number_a_cs,omitempty"`
	NumberPseudowires     uint32     `protobuf:"varint,14,opt,name=number_pseudowires,json=numberPseudowires,proto3" json:"number_pseudowires,omitempty"`
	NumberCe2CEs          uint32     `protobuf:"varint,15,opt,name=number_ce2c_es,json=numberCe2cEs,proto3" json:"number_ce2c_es,omitempty"`
	XXX_NoUnkeyedLiteral  struct{}   `json:"-"`
	XXX_unrecognized      []byte     `json:"-"`
	XXX_sizecache         int32      `json:"-"`
}

func (m *L2VpnXcDisco) Reset()         { *m = L2VpnXcDisco{} }
func (m *L2VpnXcDisco) String() string { return proto.CompactTextString(m) }
func (*L2VpnXcDisco) ProtoMessage()    {}
func (*L2VpnXcDisco) Descriptor() ([]byte, []int) {
	return fileDescriptor_60f1c5dc6a27dd31, []int{11}
}

func (m *L2VpnXcDisco) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_L2VpnXcDisco.Unmarshal(m, b)
}
func (m *L2VpnXcDisco) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_L2VpnXcDisco.Marshal(b, m, deterministic)
}
func (m *L2VpnXcDisco) XXX_Merge(src proto.Message) {
	xxx_messageInfo_L2VpnXcDisco.Merge(m, src)
}
func (m *L2VpnXcDisco) XXX_Size() int {
	return xxx_messageInfo_L2VpnXcDisco.Size(m)
}
func (m *L2VpnXcDisco) XXX_DiscardUnknown() {
	xxx_messageInfo_L2VpnXcDisco.DiscardUnknown(m)
}

var xxx_messageInfo_L2VpnXcDisco proto.InternalMessageInfo

func (m *L2VpnXcDisco) GetAdMethod() uint32 {
	if m != nil {
		return m.AdMethod
	}
	return 0
}

func (m *L2VpnXcDisco) GetVpnAdded() bool {
	if m != nil {
		return m.VpnAdded
	}
	return false
}

func (m *L2VpnXcDisco) GetAdServiceConnected() bool {
	if m != nil {
		return m.AdServiceConnected
	}
	return false
}

func (m *L2VpnXcDisco) GetRdValue() *L2VpnRd {
	if m != nil {
		return m.RdValue
	}
	return nil
}

func (m *L2VpnXcDisco) GetImportRt() []*L2VpnRt {
	if m != nil {
		return m.ImportRt
	}
	return nil
}

func (m *L2VpnXcDisco) GetExportRt() []*L2VpnRt {
	if m != nil {
		return m.ExportRt
	}
	return nil
}

func (m *L2VpnXcDisco) GetAdSignallingMethod() uint32 {
	if m != nil {
		return m.AdSignallingMethod
	}
	return 0
}

func (m *L2VpnXcDisco) GetCeRange() uint32 {
	if m != nil {
		return m.CeRange
	}
	return 0
}

func (m *L2VpnXcDisco) GetExportRoutePolicy() string {
	if m != nil {
		return m.ExportRoutePolicy
	}
	return ""
}

func (m *L2VpnXcDisco) GetNumberACsUp() uint32 {
	if m != nil {
		return m.NumberACsUp
	}
	return 0
}

func (m *L2VpnXcDisco) GetNumberPWsUp() uint32 {
	if m != nil {
		return m.NumberPWsUp
	}
	return 0
}

func (m *L2VpnXcDisco) GetNumberCe2CeAdvertised() uint32 {
	if m != nil {
		return m.NumberCe2CeAdvertised
	}
	return 0
}

func (m *L2VpnXcDisco) GetNumberACs() uint32 {
	if m != nil {
		return m.NumberACs
	}
	return 0
}

func (m *L2VpnXcDisco) GetNumberPseudowires() uint32 {
	if m != nil {
		return m.NumberPseudowires
	}
	return 0
}

func (m *L2VpnXcDisco) GetNumberCe2CEs() uint32 {
	if m != nil {
		return m.NumberCe2CEs
	}
	return 0
}

type L2VpnMp2MpXc struct {
	GroupNameXr          string        `protobuf:"bytes,50,opt,name=group_name_xr,json=groupNameXr,proto3" json:"group_name_xr,omitempty"`
	Mp2MpName            string        `protobuf:"bytes,51,opt,name=mp2mp_name,json=mp2mpName,proto3" json:"mp2mp_name,omitempty"`
	Mp2Mpid              uint32        `protobuf:"varint,52,opt,name=mp2mpid,proto3" json:"mp2mpid,omitempty"`
	VpnId                uint32        `protobuf:"varint,53,opt,name=vpn_id,json=vpnId,proto3" json:"vpn_id,omitempty"`
	VpnMtu               uint32        `protobuf:"varint,54,opt,name=vpn_mtu,json=vpnMtu,proto3" json:"vpn_mtu,omitempty"`
	L2Encapsulation      string        `protobuf:"bytes,55,opt,name=l2_encapsulation,json=l2Encapsulation,proto3" json:"l2_encapsulation,omitempty"`
	Discovery            *L2VpnXcDisco `protobuf:"bytes,56,opt,name=discovery,proto3" json:"discovery,omitempty"`
	XconnectShutdown     bool          `protobuf:"varint,57,opt,name=xconnect_shutdown,json=xconnectShutdown,proto3" json:"xconnect_shutdown,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *L2VpnMp2MpXc) Reset()         { *m = L2VpnMp2MpXc{} }
func (m *L2VpnMp2MpXc) String() string { return proto.CompactTextString(m) }
func (*L2VpnMp2MpXc) ProtoMessage()    {}
func (*L2VpnMp2MpXc) Descriptor() ([]byte, []int) {
	return fileDescriptor_60f1c5dc6a27dd31, []int{12}
}

func (m *L2VpnMp2MpXc) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_L2VpnMp2MpXc.Unmarshal(m, b)
}
func (m *L2VpnMp2MpXc) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_L2VpnMp2MpXc.Marshal(b, m, deterministic)
}
func (m *L2VpnMp2MpXc) XXX_Merge(src proto.Message) {
	xxx_messageInfo_L2VpnMp2MpXc.Merge(m, src)
}
func (m *L2VpnMp2MpXc) XXX_Size() int {
	return xxx_messageInfo_L2VpnMp2MpXc.Size(m)
}
func (m *L2VpnMp2MpXc) XXX_DiscardUnknown() {
	xxx_messageInfo_L2VpnMp2MpXc.DiscardUnknown(m)
}

var xxx_messageInfo_L2VpnMp2MpXc proto.InternalMessageInfo

func (m *L2VpnMp2MpXc) GetGroupNameXr() string {
	if m != nil {
		return m.GroupNameXr
	}
	return ""
}

func (m *L2VpnMp2MpXc) GetMp2MpName() string {
	if m != nil {
		return m.Mp2MpName
	}
	return ""
}

func (m *L2VpnMp2MpXc) GetMp2Mpid() uint32 {
	if m != nil {
		return m.Mp2Mpid
	}
	return 0
}

func (m *L2VpnMp2MpXc) GetVpnId() uint32 {
	if m != nil {
		return m.VpnId
	}
	return 0
}

func (m *L2VpnMp2MpXc) GetVpnMtu() uint32 {
	if m != nil {
		return m.VpnMtu
	}
	return 0
}

func (m *L2VpnMp2MpXc) GetL2Encapsulation() string {
	if m != nil {
		return m.L2Encapsulation
	}
	return ""
}

func (m *L2VpnMp2MpXc) GetDiscovery() *L2VpnXcDisco {
	if m != nil {
		return m.Discovery
	}
	return nil
}

func (m *L2VpnMp2MpXc) GetXconnectShutdown() bool {
	if m != nil {
		return m.XconnectShutdown
	}
	return false
}

func init() {
	proto.RegisterType((*L2VpnMp2MpXc_KEYS)(nil), "cisco_ios_xr_l2vpn_oper.l2vpnv2.active.xconnect_mp2mps.xconnect_mp2mp.l2vpn_mp2mp_xc_KEYS")
	proto.RegisterType((*L2VpnRdAuto)(nil), "cisco_ios_xr_l2vpn_oper.l2vpnv2.active.xconnect_mp2mps.xconnect_mp2mp.l2vpn_rd_auto")
	proto.RegisterType((*L2VpnRd_2ByteAs)(nil), "cisco_ios_xr_l2vpn_oper.l2vpnv2.active.xconnect_mp2mps.xconnect_mp2mp.l2vpn_rd_2byte_as")
	proto.RegisterType((*L2VpnRd_4ByteAs)(nil), "cisco_ios_xr_l2vpn_oper.l2vpnv2.active.xconnect_mp2mps.xconnect_mp2mp.l2vpn_rd_4byte_as")
	proto.RegisterType((*L2VpnRdV4Addr)(nil), "cisco_ios_xr_l2vpn_oper.l2vpnv2.active.xconnect_mp2mps.xconnect_mp2mp.l2vpn_rd_v4addr")
	proto.RegisterType((*L2VpnRd)(nil), "cisco_ios_xr_l2vpn_oper.l2vpnv2.active.xconnect_mp2mps.xconnect_mp2mp.l2vpn_rd")
	proto.RegisterType((*L2VpnRt_2ByteAs)(nil), "cisco_ios_xr_l2vpn_oper.l2vpnv2.active.xconnect_mp2mps.xconnect_mp2mp.l2vpn_rt_2byte_as")
	proto.RegisterType((*L2VpnRt_4ByteAs)(nil), "cisco_ios_xr_l2vpn_oper.l2vpnv2.active.xconnect_mp2mps.xconnect_mp2mp.l2vpn_rt_4byte_as")
	proto.RegisterType((*L2VpnRtV4Addr)(nil), "cisco_ios_xr_l2vpn_oper.l2vpnv2.active.xconnect_mp2mps.xconnect_mp2mp.l2vpn_rt_v4addr")
	proto.RegisterType((*L2VpnRtEsImport)(nil), "cisco_ios_xr_l2vpn_oper.l2vpnv2.active.xconnect_mp2mps.xconnect_mp2mp.l2vpn_rt_es_import")
	proto.RegisterType((*L2VpnRt)(nil), "cisco_ios_xr_l2vpn_oper.l2vpnv2.active.xconnect_mp2mps.xconnect_mp2mp.l2vpn_rt")
	proto.RegisterType((*L2VpnXcDisco)(nil), "cisco_ios_xr_l2vpn_oper.l2vpnv2.active.xconnect_mp2mps.xconnect_mp2mp.l2vpn_xc_disco")
	proto.RegisterType((*L2VpnMp2MpXc)(nil), "cisco_ios_xr_l2vpn_oper.l2vpnv2.active.xconnect_mp2mps.xconnect_mp2mp.l2vpn_mp2mp_xc")
}

func init() { proto.RegisterFile("l2vpn_mp2mp_xc.proto", fileDescriptor_60f1c5dc6a27dd31) }

var fileDescriptor_60f1c5dc6a27dd31 = []byte{
	// 928 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x57, 0x5d, 0x6f, 0xdb, 0x36,
	0x14, 0x45, 0x93, 0xd4, 0x96, 0xae, 0x63, 0xa7, 0x61, 0x5b, 0x54, 0xc3, 0xb0, 0xa1, 0xf3, 0x86,
	0x61, 0xc3, 0x30, 0x63, 0x50, 0xb3, 0x6e, 0x7b, 0xf4, 0x82, 0x3c, 0x04, 0x45, 0xb6, 0x40, 0x69,
	0xbb, 0x76, 0x7b, 0x20, 0x18, 0x91, 0xb3, 0x35, 0x48, 0xa2, 0x40, 0x52, 0xb2, 0xb3, 0x5f, 0xb6,
	0xdf, 0xb4, 0xfd, 0x82, 0xbd, 0x0d, 0xbc, 0xa4, 0x64, 0x25, 0x7b, 0x68, 0x1f, 0xec, 0x37, 0xf1,
	0x9e, 0xc3, 0x73, 0x18, 0xde, 0x8f, 0xd0, 0xf0, 0x28, 0x8f, 0x9b, 0xaa, 0xa4, 0x45, 0x15, 0x17,
	0x15, 0x5d, 0xa7, 0xb3, 0x4a, 0x49, 0x23, 0xc9, 0x59, 0x9a, 0xe9, 0x54, 0xd2, 0x4c, 0x6a, 0xba,
	0x56, 0xd4, 0x51, 0x64, 0x25, 0xd4, 0x0c, 0x3f, 0x9b, 0x78, 0xc6, 0x52, 0x93, 0x35, 0x62, 0xb6,
	0x4e, 0x65, 0x59, 0x8a, 0xd4, 0xb8, 0xfd, 0xfa, 0xce, 0x7a, 0xfa, 0x12, 0x1e, 0xde, 0x96, 0xa7,
	0x2f, 0xce, 0xde, 0x5e, 0x91, 0x8f, 0x00, 0x16, 0x4a, 0xd6, 0x15, 0x2d, 0x59, 0x21, 0xa2, 0x7b,
	0x4f, 0xef, 0x7d, 0x11, 0x26, 0x21, 0x46, 0x7e, 0x62, 0x85, 0x20, 0x1f, 0xc3, 0xa8, 0xa8, 0x62,
	0x5a, 0x78, 0x7c, 0xcf, 0xe1, 0x45, 0x15, 0x5f, 0x20, 0x3e, 0x7d, 0x01, 0x63, 0xa7, 0xaa, 0x38,
	0x65, 0xb5, 0x91, 0xe4, 0x43, 0x08, 0x95, 0xac, 0x8d, 0x50, 0x34, 0xe3, 0x5e, 0x2e, 0x70, 0x81,
	0x73, 0x6e, 0xcd, 0x2c, 0x89, 0x66, 0x25, 0x17, 0x6b, 0x14, 0x1b, 0x27, 0xa1, 0x8d, 0x9c, 0xdb,
	0xc0, 0xf4, 0x37, 0x38, 0xee, 0xc4, 0xe2, 0xeb, 0x1b, 0x23, 0x28, 0xd3, 0xf6, 0x04, 0x66, 0x25,
	0xa9, 0x5f, 0xa2, 0xe4, 0x38, 0x09, 0xcd, 0x4a, 0xfe, 0x78, 0x63, 0xc4, 0x5c, 0x93, 0xcf, 0xe1,
	0xe8, 0x77, 0x59, 0x2b, 0x47, 0xe8, 0x0b, 0x8f, 0x6d, 0xd8, 0x92, 0xfe, 0x2f, 0x7e, 0xd2, 0x8a,
	0x3f, 0x85, 0xc3, 0xcd, 0xe6, 0x4e, 0x1d, 0xda, 0x9d, 0x73, 0x4d, 0x3e, 0x83, 0x49, 0x67, 0xdf,
	0x57, 0x3f, 0xf4, 0x27, 0x70, 0xe2, 0xbf, 0xc2, 0x51, 0x27, 0xde, 0x9c, 0x30, 0xce, 0x15, 0xf9,
	0x04, 0x0e, 0xb3, 0xaa, 0x39, 0xa1, 0x76, 0x21, 0xb4, 0xf6, 0x77, 0x31, 0xb2, 0xb1, 0xb9, 0x0b,
	0xbd, 0xa7, 0xf6, 0x3f, 0xfb, 0x10, 0xb4, 0xe2, 0x64, 0x02, 0x7b, 0xaa, 0xbd, 0xd7, 0x3d, 0xc5,
	0xc9, 0x12, 0x0e, 0xec, 0xfd, 0xe1, 0xc6, 0x51, 0xfc, 0x72, 0xb6, 0x95, 0x5a, 0x99, 0xdd, 0x4a,
	0x69, 0x82, 0x0e, 0x64, 0x7d, 0x3b, 0x0f, 0xfb, 0x68, 0xf8, 0x66, 0xdb, 0x86, 0x6d, 0xda, 0xfb,
	0x19, 0xfe, 0xf3, 0x4e, 0x92, 0x0e, 0x76, 0x63, 0xdd, 0x16, 0xc5, 0xad, 0xf4, 0x4b, 0x18, 0xfa,
	0x1c, 0x46, 0xf7, 0xd1, 0xf6, 0xf5, 0xb6, 0x6d, 0x5d, 0xb9, 0x24, 0x03, 0x57, 0x16, 0xbd, 0x32,
	0x35, 0xbb, 0xec, 0x01, 0xb3, 0xcb, 0x1e, 0x30, 0x5b, 0xef, 0x81, 0x4b, 0x20, 0x9d, 0xb6, 0xd0,
	0x34, 0x2b, 0x2a, 0xa9, 0x8c, 0x1d, 0x27, 0xcb, 0x6c, 0xb1, 0xc4, 0xcd, 0xdd, 0xad, 0xd8, 0x88,
	0xdd, 0xa8, 0xed, 0x28, 0xca, 0xe5, 0xca, 0xa3, 0x4e, 0x35, 0xc8, 0xe5, 0x0a, 0xc1, 0xe9, 0xbf,
	0x9b, 0xae, 0x32, 0xd8, 0x55, 0xa6, 0xeb, 0x2a, 0x73, 0xb7, 0xd6, 0xf7, 0x76, 0x51, 0x70, 0xe6,
	0xbd, 0x6a, 0x7d, 0x7f, 0x37, 0xd6, 0xef, 0xaa, 0xf5, 0x83, 0x5d, 0xd4, 0xba, 0xb9, 0x53, 0xeb,
	0xa4, 0x81, 0xb0, 0x4b, 0xa6, 0x6f, 0xaf, 0xb7, 0xdb, 0xb6, 0xec, 0x0c, 0x92, 0x40, 0xe8, 0x73,
	0xfc, 0x9a, 0xfe, 0x35, 0x80, 0x89, 0x23, 0xac, 0x53, 0xca, 0xad, 0x9f, 0xad, 0x15, 0xc6, 0x69,
	0x21, 0xcc, 0x52, 0x72, 0x5f, 0x49, 0x01, 0xe3, 0x17, 0xb8, 0xb6, 0xa0, 0x25, 0x33, 0xce, 0x05,
	0xc7, 0x62, 0x08, 0x92, 0xa0, 0xa9, 0xca, 0xb9, 0x5d, 0x93, 0x6f, 0xe0, 0x11, 0xe3, 0x54, 0x0b,
	0xd5, 0x64, 0xa9, 0xa0, 0xfe, 0x14, 0x82, 0x63, 0xe6, 0x82, 0x84, 0x30, 0x7e, 0xe5, 0xa0, 0xd3,
	0x16, 0x21, 0x7f, 0x40, 0x60, 0xfb, 0x9e, 0xe5, 0xb5, 0xf0, 0x17, 0xfd, 0xf3, 0x96, 0x87, 0x4a,
	0x32, 0x54, 0xfc, 0xb5, 0xd5, 0x27, 0x39, 0x84, 0xee, 0xcf, 0xa7, 0x78, 0xc5, 0xfb, 0xdb, 0x37,
	0x33, 0x49, 0xe0, 0x2f, 0xd8, 0x58, 0x37, 0xb1, 0x6e, 0xdd, 0x06, 0x3b, 0x72, 0x73, 0x0e, 0x89,
	0x69, 0x6f, 0x3e, 0x5b, 0x94, 0x2c, 0xcf, 0xb3, 0x72, 0xd1, 0xa6, 0x6f, 0x88, 0xe9, 0xb3, 0x37,
	0xdf, 0x41, 0x3e, 0x91, 0x1f, 0x40, 0x90, 0x0a, 0xaa, 0x58, 0xb9, 0x10, 0x51, 0x80, 0xac, 0x61,
	0x2a, 0x12, 0xbb, 0x24, 0x33, 0x78, 0xd8, 0x1e, 0xdd, 0xbe, 0x56, 0x68, 0x25, 0xf3, 0x2c, 0xbd,
	0x89, 0x42, 0x9c, 0x09, 0xc7, 0xde, 0xd3, 0x22, 0x97, 0x08, 0x90, 0x4f, 0x61, 0x52, 0xd6, 0xc5,
	0xb5, 0x50, 0x94, 0xd1, 0x54, 0xd3, 0xba, 0x8a, 0x00, 0x05, 0x47, 0x2e, 0x3a, 0x3f, 0xd5, 0xaf,
	0xaa, 0x1e, 0xa9, 0xa2, 0x2b, 0x24, 0x8d, 0xfa, 0xa4, 0xcb, 0x5f, 0x2c, 0xe9, 0x39, 0x3c, 0xf1,
	0xa4, 0x54, 0xc4, 0xa9, 0xa0, 0x8c, 0x37, 0x42, 0x99, 0x4c, 0x0b, 0x1e, 0x1d, 0x22, 0xfb, 0xb1,
	0x83, 0x4f, 0x2d, 0x3a, 0xef, 0x40, 0xfb, 0x4f, 0xa1, 0x77, 0x82, 0x68, 0xec, 0xc6, 0x5f, 0x67,
	0x4f, 0xbe, 0x06, 0xd2, 0x9a, 0x6b, 0x51, 0x73, 0xb9, 0xca, 0x94, 0xd0, 0xd1, 0x04, 0x69, 0xc7,
	0xfe, 0x00, 0x1b, 0xc0, 0x0e, 0xe2, 0xde, 0x31, 0xa8, 0xd0, 0xd1, 0x91, 0x1b, 0xc4, 0x1b, 0xf7,
	0x33, 0x3d, 0xfd, 0x7b, 0xaf, 0x6d, 0x9d, 0xf6, 0x19, 0x49, 0xa6, 0x30, 0xde, 0xbc, 0x20, 0xe9,
	0x5a, 0x45, 0xb1, 0x9b, 0xf2, 0xdd, 0x23, 0xf2, 0x8d, 0xb2, 0x93, 0xda, 0xf1, 0xf1, 0x15, 0xf9,
	0xac, 0x7b, 0x45, 0x16, 0xee, 0x95, 0x19, 0xc1, 0x10, 0x17, 0x19, 0x8f, 0x4e, 0x5c, 0x5a, 0xfc,
	0x92, 0x3c, 0x86, 0x81, 0x35, 0xcb, 0x78, 0xf4, 0x2d, 0x02, 0xf7, 0x9b, 0xaa, 0x3c, 0xe7, 0xe4,
	0x09, 0x0c, 0xf1, 0x0c, 0xa6, 0x8e, 0x9e, 0x63, 0xdc, 0xb2, 0x2e, 0x4c, 0x4d, 0xbe, 0x84, 0x07,
	0x79, 0x4c, 0x45, 0x99, 0xb2, 0x4a, 0xd7, 0x39, 0x33, 0x99, 0x2c, 0xa3, 0xef, 0xd0, 0xee, 0x28,
	0x8f, 0xcf, 0xfa, 0x61, 0xa2, 0x21, 0xc4, 0xde, 0x6f, 0x84, 0xba, 0x89, 0xbe, 0xc7, 0x3e, 0x7c,
	0xb5, 0xd5, 0x62, 0x6d, 0x87, 0x4b, 0xb2, 0xf1, 0x21, 0x5f, 0xc1, 0x71, 0xc7, 0xd5, 0xcb, 0xda,
	0x70, 0xb9, 0x2a, 0xa3, 0x1f, 0x70, 0x54, 0x3c, 0x68, 0x81, 0x2b, 0x1f, 0xbf, 0x1e, 0xe0, 0x0f,
	0x80, 0x67, 0xff, 0x05, 0x00, 0x00, 0xff, 0xff, 0xe5, 0x65, 0x32, 0x28, 0x18, 0x0c, 0x00, 0x00,
}
