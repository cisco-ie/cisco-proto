/*
Copyright 2019 Cisco Systems

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: ipsla_application_bag.proto

package cisco_ios_xr_man_ipsla_oper_ipsla_application_info

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type IpslaApplicationBag_KEYS struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IpslaApplicationBag_KEYS) Reset()         { *m = IpslaApplicationBag_KEYS{} }
func (m *IpslaApplicationBag_KEYS) String() string { return proto.CompactTextString(m) }
func (*IpslaApplicationBag_KEYS) ProtoMessage()    {}
func (*IpslaApplicationBag_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_de8e3ac5654a6ec0, []int{0}
}

func (m *IpslaApplicationBag_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IpslaApplicationBag_KEYS.Unmarshal(m, b)
}
func (m *IpslaApplicationBag_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IpslaApplicationBag_KEYS.Marshal(b, m, deterministic)
}
func (m *IpslaApplicationBag_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IpslaApplicationBag_KEYS.Merge(m, src)
}
func (m *IpslaApplicationBag_KEYS) XXX_Size() int {
	return xxx_messageInfo_IpslaApplicationBag_KEYS.Size(m)
}
func (m *IpslaApplicationBag_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_IpslaApplicationBag_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_IpslaApplicationBag_KEYS proto.InternalMessageInfo

type IpslaApplicationBag struct {
	Version              string   `protobuf:"bytes,50,opt,name=version,proto3" json:"version,omitempty"`
	MaxEntries           uint32   `protobuf:"varint,51,opt,name=max_entries,json=maxEntries,proto3" json:"max_entries,omitempty"`
	EntriesConfigured    uint32   `protobuf:"varint,52,opt,name=entries_configured,json=entriesConfigured,proto3" json:"entries_configured,omitempty"`
	ActiveEntries        uint32   `protobuf:"varint,53,opt,name=active_entries,json=activeEntries,proto3" json:"active_entries,omitempty"`
	PendingEntries       uint32   `protobuf:"varint,54,opt,name=pending_entries,json=pendingEntries,proto3" json:"pending_entries,omitempty"`
	InactiveEntries      uint32   `protobuf:"varint,55,opt,name=inactive_entries,json=inactiveEntries,proto3" json:"inactive_entries,omitempty"`
	ConfigurableProbes   uint32   `protobuf:"varint,56,opt,name=configurable_probes,json=configurableProbes,proto3" json:"configurable_probes,omitempty"`
	MinMemory            uint32   `protobuf:"varint,57,opt,name=min_memory,json=minMemory,proto3" json:"min_memory,omitempty"`
	OperationType        []string `protobuf:"bytes,58,rep,name=operation_type,json=operationType,proto3" json:"operation_type,omitempty"`
	HwTimestampDisabled  bool     `protobuf:"varint,59,opt,name=hw_timestamp_disabled,json=hwTimestampDisabled,proto3" json:"hw_timestamp_disabled,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IpslaApplicationBag) Reset()         { *m = IpslaApplicationBag{} }
func (m *IpslaApplicationBag) String() string { return proto.CompactTextString(m) }
func (*IpslaApplicationBag) ProtoMessage()    {}
func (*IpslaApplicationBag) Descriptor() ([]byte, []int) {
	return fileDescriptor_de8e3ac5654a6ec0, []int{1}
}

func (m *IpslaApplicationBag) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IpslaApplicationBag.Unmarshal(m, b)
}
func (m *IpslaApplicationBag) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IpslaApplicationBag.Marshal(b, m, deterministic)
}
func (m *IpslaApplicationBag) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IpslaApplicationBag.Merge(m, src)
}
func (m *IpslaApplicationBag) XXX_Size() int {
	return xxx_messageInfo_IpslaApplicationBag.Size(m)
}
func (m *IpslaApplicationBag) XXX_DiscardUnknown() {
	xxx_messageInfo_IpslaApplicationBag.DiscardUnknown(m)
}

var xxx_messageInfo_IpslaApplicationBag proto.InternalMessageInfo

func (m *IpslaApplicationBag) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func (m *IpslaApplicationBag) GetMaxEntries() uint32 {
	if m != nil {
		return m.MaxEntries
	}
	return 0
}

func (m *IpslaApplicationBag) GetEntriesConfigured() uint32 {
	if m != nil {
		return m.EntriesConfigured
	}
	return 0
}

func (m *IpslaApplicationBag) GetActiveEntries() uint32 {
	if m != nil {
		return m.ActiveEntries
	}
	return 0
}

func (m *IpslaApplicationBag) GetPendingEntries() uint32 {
	if m != nil {
		return m.PendingEntries
	}
	return 0
}

func (m *IpslaApplicationBag) GetInactiveEntries() uint32 {
	if m != nil {
		return m.InactiveEntries
	}
	return 0
}

func (m *IpslaApplicationBag) GetConfigurableProbes() uint32 {
	if m != nil {
		return m.ConfigurableProbes
	}
	return 0
}

func (m *IpslaApplicationBag) GetMinMemory() uint32 {
	if m != nil {
		return m.MinMemory
	}
	return 0
}

func (m *IpslaApplicationBag) GetOperationType() []string {
	if m != nil {
		return m.OperationType
	}
	return nil
}

func (m *IpslaApplicationBag) GetHwTimestampDisabled() bool {
	if m != nil {
		return m.HwTimestampDisabled
	}
	return false
}

func init() {
	proto.RegisterType((*IpslaApplicationBag_KEYS)(nil), "cisco_ios_xr_man_ipsla_oper.ipsla.application_info.ipsla_application_bag_KEYS")
	proto.RegisterType((*IpslaApplicationBag)(nil), "cisco_ios_xr_man_ipsla_oper.ipsla.application_info.ipsla_application_bag")
}

func init() { proto.RegisterFile("ipsla_application_bag.proto", fileDescriptor_de8e3ac5654a6ec0) }

var fileDescriptor_de8e3ac5654a6ec0 = []byte{
	// 330 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x92, 0x49, 0x4b, 0x33, 0x31,
	0x18, 0xc7, 0x29, 0x85, 0xf7, 0xb5, 0x8f, 0xb4, 0xd5, 0x94, 0x42, 0x70, 0xc1, 0xa1, 0x20, 0x8e,
	0x07, 0x2b, 0xb4, 0xee, 0x1e, 0xb5, 0x27, 0x11, 0x64, 0xec, 0xc5, 0x53, 0xc8, 0xcc, 0xa4, 0xed,
	0x03, 0xcd, 0x42, 0x32, 0x76, 0xf9, 0x44, 0x7e, 0x4d, 0x69, 0x66, 0xa1, 0x48, 0x6f, 0x33, 0xff,
	0xdf, 0x2f, 0xff, 0xac, 0x70, 0x8c, 0xc6, 0xcd, 0x39, 0xe3, 0xc6, 0xcc, 0x31, 0xe1, 0x19, 0x6a,
	0xc5, 0x62, 0x3e, 0xed, 0x1b, 0xab, 0x33, 0x4d, 0x06, 0x09, 0xba, 0x44, 0x33, 0xd4, 0x8e, 0xad,
	0x2c, 0x93, 0x5c, 0xb1, 0xdc, 0xd6, 0x46, 0xd8, 0xbe, 0xff, 0xec, 0x6f, 0x0f, 0x44, 0x35, 0xd1,
	0xbd, 0x13, 0x38, 0xda, 0x59, 0xc9, 0xde, 0x46, 0x5f, 0x9f, 0xbd, 0x9f, 0x3a, 0x74, 0x77, 0x62,
	0x42, 0xe1, 0xff, 0x42, 0x58, 0x87, 0x5a, 0xd1, 0x41, 0x50, 0x0b, 0x1b, 0x51, 0xf9, 0x4b, 0xce,
	0x60, 0x5f, 0xf2, 0x15, 0x13, 0x2a, 0xb3, 0x28, 0x1c, 0x1d, 0x06, 0xb5, 0xb0, 0x19, 0x81, 0xe4,
	0xab, 0x51, 0x9e, 0x90, 0x2b, 0x20, 0x05, 0x64, 0x89, 0x56, 0x13, 0x9c, 0x7e, 0x5b, 0x91, 0xd2,
	0x1b, 0xef, 0x1d, 0x16, 0xe4, 0xa5, 0x02, 0xe4, 0x1c, 0x5a, 0x3c, 0xc9, 0x70, 0x21, 0xaa, 0xca,
	0x5b, 0xaf, 0x36, 0xf3, 0xb4, 0x6c, 0xbd, 0x80, 0xb6, 0x11, 0x2a, 0x45, 0x35, 0xad, 0xbc, 0x3b,
	0xef, 0xb5, 0x8a, 0xb8, 0x14, 0x2f, 0xe1, 0x00, 0xd5, 0x9f, 0xc6, 0x7b, 0x6f, 0xb6, 0xcb, 0xbc,
	0x54, 0xaf, 0xa1, 0x53, 0xae, 0x90, 0xc7, 0x73, 0xc1, 0x8c, 0xd5, 0xb1, 0x70, 0xf4, 0xc1, 0xdb,
	0x64, 0x1b, 0x7d, 0x78, 0x42, 0x4e, 0x01, 0x24, 0x2a, 0x26, 0x85, 0xd4, 0x76, 0x4d, 0x1f, 0xbd,
	0xd7, 0x90, 0xa8, 0xde, 0x7d, 0xb0, 0xd9, 0xca, 0xe6, 0x2e, 0xf2, 0x53, 0xcc, 0xd6, 0x46, 0xd0,
	0xa7, 0xa0, 0x1e, 0x36, 0xa2, 0x66, 0x95, 0x8e, 0xd7, 0x46, 0x90, 0x01, 0x74, 0x67, 0x4b, 0x96,
	0xa1, 0x14, 0x2e, 0xe3, 0xd2, 0xb0, 0x14, 0xdd, 0x66, 0x8e, 0x94, 0x3e, 0x07, 0xb5, 0x70, 0x2f,
	0xea, 0xcc, 0x96, 0xe3, 0x92, 0xbd, 0x16, 0x28, 0xfe, 0xe7, 0x9f, 0xc0, 0xf0, 0x37, 0x00, 0x00,
	0xff, 0xff, 0x4d, 0x00, 0x4c, 0xd3, 0x21, 0x02, 0x00, 0x00,
}
