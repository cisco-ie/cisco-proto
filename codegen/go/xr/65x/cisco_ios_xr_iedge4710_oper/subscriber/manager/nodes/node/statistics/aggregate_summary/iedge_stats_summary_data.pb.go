/*
Copyright 2019 Cisco Systems

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: iedge_stats_summary_data.proto

package cisco_ios_xr_iedge4710_oper_subscriber_manager_nodes_node_statistics_aggregate_summary

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type IedgeStatsSummaryData_KEYS struct {
	NodeName             string   `protobuf:"bytes,1,opt,name=node_name,json=nodeName,proto3" json:"node_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IedgeStatsSummaryData_KEYS) Reset()         { *m = IedgeStatsSummaryData_KEYS{} }
func (m *IedgeStatsSummaryData_KEYS) String() string { return proto.CompactTextString(m) }
func (*IedgeStatsSummaryData_KEYS) ProtoMessage()    {}
func (*IedgeStatsSummaryData_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_986893773b2c5cf2, []int{0}
}

func (m *IedgeStatsSummaryData_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IedgeStatsSummaryData_KEYS.Unmarshal(m, b)
}
func (m *IedgeStatsSummaryData_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IedgeStatsSummaryData_KEYS.Marshal(b, m, deterministic)
}
func (m *IedgeStatsSummaryData_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IedgeStatsSummaryData_KEYS.Merge(m, src)
}
func (m *IedgeStatsSummaryData_KEYS) XXX_Size() int {
	return xxx_messageInfo_IedgeStatsSummaryData_KEYS.Size(m)
}
func (m *IedgeStatsSummaryData_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_IedgeStatsSummaryData_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_IedgeStatsSummaryData_KEYS proto.InternalMessageInfo

func (m *IedgeStatsSummaryData_KEYS) GetNodeName() string {
	if m != nil {
		return m.NodeName
	}
	return ""
}

type IedgeStatsSummaryData struct {
	NoSubscriberControlPolicyOnInterface        uint64   `protobuf:"varint,50,opt,name=no_subscriber_control_policy_on_interface,json=noSubscriberControlPolicyOnInterface,proto3" json:"no_subscriber_control_policy_on_interface,omitempty"`
	NoClassMatchInStartRequest                  uint64   `protobuf:"varint,51,opt,name=no_class_match_in_start_request,json=noClassMatchInStartRequest,proto3" json:"no_class_match_in_start_request,omitempty"`
	NasPortAttributeFormatWarnings              uint64   `protobuf:"varint,52,opt,name=nas_port_attribute_format_warnings,json=nasPortAttributeFormatWarnings,proto3" json:"nas_port_attribute_format_warnings,omitempty"`
	NasPortIdAttributeFormatWarnings            uint64   `protobuf:"varint,53,opt,name=nas_port_id_attribute_format_warnings,json=nasPortIdAttributeFormatWarnings,proto3" json:"nas_port_id_attribute_format_warnings,omitempty"`
	DestinationStationIdAttributeFormatWarnings uint64   `protobuf:"varint,54,opt,name=destination_station_id_attribute_format_warnings,json=destinationStationIdAttributeFormatWarnings,proto3" json:"destination_station_id_attribute_format_warnings,omitempty"`
	CallingStationIdAttributeFormatWarnings     uint64   `protobuf:"varint,55,opt,name=calling_station_id_attribute_format_warnings,json=callingStationIdAttributeFormatWarnings,proto3" json:"calling_station_id_attribute_format_warnings,omitempty"`
	UsernameAttributeFormatWarnings             uint64   `protobuf:"varint,56,opt,name=username_attribute_format_warnings,json=usernameAttributeFormatWarnings,proto3" json:"username_attribute_format_warnings,omitempty"`
	InstallUserProfiles                         uint64   `protobuf:"varint,57,opt,name=install_user_profiles,json=installUserProfiles,proto3" json:"install_user_profiles,omitempty"`
	UserProfileInstallErrors                    uint64   `protobuf:"varint,58,opt,name=user_profile_install_errors,json=userProfileInstallErrors,proto3" json:"user_profile_install_errors,omitempty"`
	UserProfileRemovals                         uint64   `protobuf:"varint,59,opt,name=user_profile_removals,json=userProfileRemovals,proto3" json:"user_profile_removals,omitempty"`
	UserProfileErrors                           uint64   `protobuf:"varint,60,opt,name=user_profile_errors,json=userProfileErrors,proto3" json:"user_profile_errors,omitempty"`
	SessDiscQuotaExhausts                       uint64   `protobuf:"varint,61,opt,name=sess_disc_quota_exhausts,json=sessDiscQuotaExhausts,proto3" json:"sess_disc_quota_exhausts,omitempty"`
	SessDiscNoQuota                             uint64   `protobuf:"varint,62,opt,name=sess_disc_no_quota,json=sessDiscNoQuota,proto3" json:"sess_disc_no_quota,omitempty"`
	SessDiscQuotaAvail                          uint64   `protobuf:"varint,63,opt,name=sess_disc_quota_avail,json=sessDiscQuotaAvail,proto3" json:"sess_disc_quota_avail,omitempty"`
	SessDiscReconIp                             uint64   `protobuf:"varint,64,opt,name=sess_disc_recon_ip,json=sessDiscReconIp,proto3" json:"sess_disc_recon_ip,omitempty"`
	SessDiscNoneStarted                         uint64   `protobuf:"varint,65,opt,name=sess_disc_none_started,json=sessDiscNoneStarted,proto3" json:"sess_disc_none_started,omitempty"`
	SessDiscQuota                               uint32   `protobuf:"varint,66,opt,name=sess_disc_quota,json=sessDiscQuota,proto3" json:"sess_disc_quota,omitempty"`
	SessDiscQuotaRemaining                      uint32   `protobuf:"varint,67,opt,name=sess_disc_quota_remaining,json=sessDiscQuotaRemaining,proto3" json:"sess_disc_quota_remaining,omitempty"`
	SessDiscQCount                              uint32   `protobuf:"varint,68,opt,name=sess_disc_q_count,json=sessDiscQCount,proto3" json:"sess_disc_q_count,omitempty"`
	XXX_NoUnkeyedLiteral                        struct{} `json:"-"`
	XXX_unrecognized                            []byte   `json:"-"`
	XXX_sizecache                               int32    `json:"-"`
}

func (m *IedgeStatsSummaryData) Reset()         { *m = IedgeStatsSummaryData{} }
func (m *IedgeStatsSummaryData) String() string { return proto.CompactTextString(m) }
func (*IedgeStatsSummaryData) ProtoMessage()    {}
func (*IedgeStatsSummaryData) Descriptor() ([]byte, []int) {
	return fileDescriptor_986893773b2c5cf2, []int{1}
}

func (m *IedgeStatsSummaryData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IedgeStatsSummaryData.Unmarshal(m, b)
}
func (m *IedgeStatsSummaryData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IedgeStatsSummaryData.Marshal(b, m, deterministic)
}
func (m *IedgeStatsSummaryData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IedgeStatsSummaryData.Merge(m, src)
}
func (m *IedgeStatsSummaryData) XXX_Size() int {
	return xxx_messageInfo_IedgeStatsSummaryData.Size(m)
}
func (m *IedgeStatsSummaryData) XXX_DiscardUnknown() {
	xxx_messageInfo_IedgeStatsSummaryData.DiscardUnknown(m)
}

var xxx_messageInfo_IedgeStatsSummaryData proto.InternalMessageInfo

func (m *IedgeStatsSummaryData) GetNoSubscriberControlPolicyOnInterface() uint64 {
	if m != nil {
		return m.NoSubscriberControlPolicyOnInterface
	}
	return 0
}

func (m *IedgeStatsSummaryData) GetNoClassMatchInStartRequest() uint64 {
	if m != nil {
		return m.NoClassMatchInStartRequest
	}
	return 0
}

func (m *IedgeStatsSummaryData) GetNasPortAttributeFormatWarnings() uint64 {
	if m != nil {
		return m.NasPortAttributeFormatWarnings
	}
	return 0
}

func (m *IedgeStatsSummaryData) GetNasPortIdAttributeFormatWarnings() uint64 {
	if m != nil {
		return m.NasPortIdAttributeFormatWarnings
	}
	return 0
}

func (m *IedgeStatsSummaryData) GetDestinationStationIdAttributeFormatWarnings() uint64 {
	if m != nil {
		return m.DestinationStationIdAttributeFormatWarnings
	}
	return 0
}

func (m *IedgeStatsSummaryData) GetCallingStationIdAttributeFormatWarnings() uint64 {
	if m != nil {
		return m.CallingStationIdAttributeFormatWarnings
	}
	return 0
}

func (m *IedgeStatsSummaryData) GetUsernameAttributeFormatWarnings() uint64 {
	if m != nil {
		return m.UsernameAttributeFormatWarnings
	}
	return 0
}

func (m *IedgeStatsSummaryData) GetInstallUserProfiles() uint64 {
	if m != nil {
		return m.InstallUserProfiles
	}
	return 0
}

func (m *IedgeStatsSummaryData) GetUserProfileInstallErrors() uint64 {
	if m != nil {
		return m.UserProfileInstallErrors
	}
	return 0
}

func (m *IedgeStatsSummaryData) GetUserProfileRemovals() uint64 {
	if m != nil {
		return m.UserProfileRemovals
	}
	return 0
}

func (m *IedgeStatsSummaryData) GetUserProfileErrors() uint64 {
	if m != nil {
		return m.UserProfileErrors
	}
	return 0
}

func (m *IedgeStatsSummaryData) GetSessDiscQuotaExhausts() uint64 {
	if m != nil {
		return m.SessDiscQuotaExhausts
	}
	return 0
}

func (m *IedgeStatsSummaryData) GetSessDiscNoQuota() uint64 {
	if m != nil {
		return m.SessDiscNoQuota
	}
	return 0
}

func (m *IedgeStatsSummaryData) GetSessDiscQuotaAvail() uint64 {
	if m != nil {
		return m.SessDiscQuotaAvail
	}
	return 0
}

func (m *IedgeStatsSummaryData) GetSessDiscReconIp() uint64 {
	if m != nil {
		return m.SessDiscReconIp
	}
	return 0
}

func (m *IedgeStatsSummaryData) GetSessDiscNoneStarted() uint64 {
	if m != nil {
		return m.SessDiscNoneStarted
	}
	return 0
}

func (m *IedgeStatsSummaryData) GetSessDiscQuota() uint32 {
	if m != nil {
		return m.SessDiscQuota
	}
	return 0
}

func (m *IedgeStatsSummaryData) GetSessDiscQuotaRemaining() uint32 {
	if m != nil {
		return m.SessDiscQuotaRemaining
	}
	return 0
}

func (m *IedgeStatsSummaryData) GetSessDiscQCount() uint32 {
	if m != nil {
		return m.SessDiscQCount
	}
	return 0
}

func init() {
	proto.RegisterType((*IedgeStatsSummaryData_KEYS)(nil), "cisco_ios_xr_iedge4710_oper.subscriber.manager.nodes.node.statistics.aggregate_summary.iedge_stats_summary_data_KEYS")
	proto.RegisterType((*IedgeStatsSummaryData)(nil), "cisco_ios_xr_iedge4710_oper.subscriber.manager.nodes.node.statistics.aggregate_summary.iedge_stats_summary_data")
}

func init() { proto.RegisterFile("iedge_stats_summary_data.proto", fileDescriptor_986893773b2c5cf2) }

var fileDescriptor_986893773b2c5cf2 = []byte{
	// 638 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x94, 0x6d, 0x4f, 0x53, 0x31,
	0x14, 0xc7, 0xb3, 0xc4, 0x18, 0x69, 0x82, 0x84, 0x12, 0x48, 0x95, 0x08, 0xcb, 0xe2, 0x03, 0x04,
	0xb3, 0xf0, 0xa4, 0x88, 0x82, 0x8a, 0x03, 0x93, 0x49, 0x04, 0xdc, 0xa2, 0xc4, 0x17, 0xe6, 0xa4,
	0xeb, 0x3d, 0x8c, 0x26, 0xf7, 0xb6, 0xa3, 0xa7, 0x17, 0xe1, 0x1b, 0xfa, 0xb1, 0x4c, 0x7b, 0xef,
	0xd8, 0x46, 0x32, 0xf4, 0xcd, 0x96, 0xf4, 0xfc, 0x7f, 0xbf, 0xff, 0xd9, 0xd2, 0x7b, 0xd9, 0x82,
	0xc6, 0xa4, 0x8b, 0x40, 0x5e, 0x7a, 0x02, 0xca, 0xb3, 0x4c, 0xba, 0x6b, 0x48, 0xa4, 0x97, 0xf5,
	0x9e, 0xb3, 0xde, 0xf2, 0x1f, 0x4a, 0x93, 0xb2, 0xa0, 0x2d, 0xc1, 0x95, 0x83, 0x18, 0xde, 0xdc,
	0x5a, 0x5b, 0x05, 0xdb, 0x43, 0x57, 0xa7, 0xbc, 0x43, 0xca, 0xe9, 0x0e, 0xba, 0x7a, 0x26, 0x8d,
	0xec, 0xa2, 0xab, 0x1b, 0x9b, 0x20, 0xc5, 0xcf, 0x7a, 0x70, 0x6a, 0xf2, 0x5a, 0x51, 0x5d, 0x76,
	0xbb, 0x0e, 0xbb, 0xd2, 0x63, 0xbf, 0xa2, 0xb6, 0xc3, 0x9e, 0x8c, 0x6b, 0x86, 0xc3, 0x83, 0x9f,
	0x6d, 0x3e, 0xcf, 0x26, 0x82, 0x05, 0x8c, 0xcc, 0x50, 0x54, 0xaa, 0x95, 0xa5, 0x89, 0xd6, 0x83,
	0x70, 0x70, 0x24, 0x33, 0xac, 0xfd, 0x99, 0x60, 0x62, 0x1c, 0xce, 0x4f, 0xd9, 0xb2, 0xb1, 0x30,
	0xd8, 0x0d, 0x94, 0x35, 0xde, 0xd9, 0x14, 0x7a, 0x36, 0xd5, 0xea, 0x1a, 0xac, 0x01, 0x6d, 0x3c,
	0xba, 0x33, 0xa9, 0x50, 0xac, 0x57, 0x2b, 0x4b, 0xf7, 0x5a, 0x4f, 0x8d, 0x6d, 0xdf, 0xe4, 0x1b,
	0x45, 0xfc, 0x24, 0xa6, 0x8f, 0x4d, 0xb3, 0x9f, 0xe5, 0x0d, 0xb6, 0x68, 0x2c, 0xa8, 0x54, 0x12,
	0x41, 0x26, 0xbd, 0x3a, 0x07, 0x6d, 0xc2, 0x02, 0xce, 0x83, 0xc3, 0x8b, 0x1c, 0xc9, 0x8b, 0x8d,
	0xa8, 0x7b, 0x6c, 0x6c, 0x23, 0xa4, 0xbe, 0x86, 0x50, 0xd3, 0xb4, 0x43, 0xa4, 0x55, 0x24, 0xf8,
	0x17, 0x56, 0x33, 0x92, 0xa0, 0x67, 0x9d, 0x07, 0xe9, 0xbd, 0xd3, 0x9d, 0xdc, 0x23, 0x9c, 0x59,
	0x97, 0x49, 0x0f, 0xbf, 0xa5, 0x33, 0xda, 0x74, 0x49, 0x6c, 0x46, 0xcf, 0x82, 0x91, 0x74, 0x62,
	0x9d, 0xdf, 0xeb, 0xe7, 0x3e, 0xc7, 0xd8, 0x69, 0x99, 0xe2, 0xc7, 0xec, 0xd9, 0x8d, 0x4b, 0x27,
	0x77, 0xe8, 0x5e, 0x45, 0x5d, 0xb5, 0xd4, 0x35, 0x93, 0x71, 0x42, 0x64, 0xab, 0x09, 0x92, 0xd7,
	0x46, 0x7a, 0x6d, 0xe3, 0x6f, 0x8b, 0xdf, 0x77, 0xba, 0x5f, 0x47, 0xf7, 0xca, 0x10, 0xd7, 0x2e,
	0xb0, 0xf1, 0x35, 0xbf, 0xd8, 0x4b, 0x25, 0xd3, 0x54, 0x9b, 0xee, 0xff, 0x55, 0x6c, 0xc5, 0x8a,
	0x17, 0x25, 0xf3, 0x4f, 0xfd, 0x21, 0xab, 0xe5, 0x84, 0x2e, 0xdc, 0x9c, 0x3b, 0xa4, 0x6f, 0xa2,
	0x74, 0xb1, 0x9f, 0x1c, 0x27, 0x5b, 0x67, 0xb3, 0xda, 0x90, 0x97, 0x69, 0x0a, 0x21, 0x0a, 0x3d,
	0x67, 0xcf, 0x74, 0x8a, 0x24, 0xb6, 0x23, 0x3f, 0x53, 0x0e, 0xbf, 0x13, 0xba, 0x93, 0x72, 0xc4,
	0x77, 0xd9, 0xfc, 0x70, 0x16, 0xfa, 0x02, 0x74, 0xce, 0x3a, 0x12, 0x6f, 0x23, 0x29, 0xf2, 0x01,
	0xd2, 0x2c, 0x02, 0x07, 0x71, 0x1e, 0x2a, 0x47, 0x70, 0x87, 0x99, 0xbd, 0x94, 0x29, 0x89, 0x77,
	0x45, 0xe5, 0x10, 0xd8, 0x2a, 0x47, 0xbc, 0xce, 0x66, 0x46, 0x98, 0xb2, 0x6a, 0x27, 0x12, 0xd3,
	0x43, 0x44, 0xd9, 0xb1, 0xc5, 0x04, 0x21, 0x11, 0x24, 0x9a, 0x14, 0x5c, 0xe4, 0xd6, 0x4b, 0xc0,
	0xab, 0x73, 0x99, 0x93, 0x27, 0xb1, 0x1b, 0xa1, 0xd9, 0x30, 0xdf, 0xd7, 0xa4, 0xbe, 0x85, 0xe9,
	0x41, 0x39, 0xe4, 0x2b, 0x8c, 0x0f, 0x40, 0x63, 0x0b, 0x56, 0xbc, 0x8f, 0xc8, 0x54, 0x1f, 0x39,
	0xb2, 0x11, 0xe2, 0x6b, 0x6c, 0xf6, 0x76, 0x8b, 0xbc, 0x94, 0x3a, 0x15, 0x1f, 0x62, 0x9e, 0x8f,
	0x54, 0xec, 0x85, 0xc9, 0xa8, 0xdf, 0xa1, 0x0a, 0x77, 0xa3, 0x27, 0x3e, 0x8e, 0xfa, 0x5b, 0xe1,
	0xbc, 0xd9, 0xe3, 0x1b, 0x6c, 0x6e, 0x78, 0x19, 0x83, 0xc5, 0xe3, 0x88, 0x89, 0xd8, 0x2b, 0xfe,
	0xaa, 0xc1, 0x42, 0x06, 0xdb, 0xc5, 0x88, 0x3f, 0x67, 0x53, 0xb7, 0x96, 0x12, 0x9f, 0xaa, 0x95,
	0xa5, 0xc9, 0xd6, 0xe4, 0xc8, 0x3a, 0x7c, 0x9b, 0x3d, 0xba, 0xbd, 0xbc, 0xc3, 0x4c, 0xea, 0x70,
	0x2f, 0x44, 0x23, 0x12, 0x73, 0x23, 0x44, 0xab, 0x3f, 0xe5, 0xcb, 0x6c, 0x7a, 0x08, 0x05, 0x65,
	0x73, 0xe3, 0xc5, 0x7e, 0x44, 0x1e, 0xde, 0x20, 0x8d, 0x70, 0xda, 0xb9, 0x1f, 0xdf, 0xb3, 0x1b,
	0x7f, 0x03, 0x00, 0x00, 0xff, 0xff, 0xf6, 0x8d, 0x1d, 0xf5, 0x89, 0x05, 0x00, 0x00,
}
