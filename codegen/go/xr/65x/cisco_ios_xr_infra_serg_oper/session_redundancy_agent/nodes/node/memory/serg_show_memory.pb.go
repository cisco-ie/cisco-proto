/*
Copyright 2019 Cisco Systems

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: serg_show_memory.proto

package cisco_ios_xr_infra_serg_oper_session_redundancy_agent_nodes_node_memory

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type SergShowMemory_KEYS struct {
	NodeName             string   `protobuf:"bytes,1,opt,name=node_name,json=nodeName,proto3" json:"node_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SergShowMemory_KEYS) Reset()         { *m = SergShowMemory_KEYS{} }
func (m *SergShowMemory_KEYS) String() string { return proto.CompactTextString(m) }
func (*SergShowMemory_KEYS) ProtoMessage()    {}
func (*SergShowMemory_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_5c57f54f8d690df5, []int{0}
}

func (m *SergShowMemory_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SergShowMemory_KEYS.Unmarshal(m, b)
}
func (m *SergShowMemory_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SergShowMemory_KEYS.Marshal(b, m, deterministic)
}
func (m *SergShowMemory_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SergShowMemory_KEYS.Merge(m, src)
}
func (m *SergShowMemory_KEYS) XXX_Size() int {
	return xxx_messageInfo_SergShowMemory_KEYS.Size(m)
}
func (m *SergShowMemory_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_SergShowMemory_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_SergShowMemory_KEYS proto.InternalMessageInfo

func (m *SergShowMemory_KEYS) GetNodeName() string {
	if m != nil {
		return m.NodeName
	}
	return ""
}

type SergShowMemoryInfo struct {
	StructureName        string   `protobuf:"bytes,1,opt,name=structure_name,json=structureName,proto3" json:"structure_name,omitempty"`
	Size                 uint32   `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
	CurrentCount         uint32   `protobuf:"varint,3,opt,name=current_count,json=currentCount,proto3" json:"current_count,omitempty"`
	AllocFails           uint32   `protobuf:"varint,4,opt,name=alloc_fails,json=allocFails,proto3" json:"alloc_fails,omitempty"`
	AllocCount           uint32   `protobuf:"varint,5,opt,name=alloc_count,json=allocCount,proto3" json:"alloc_count,omitempty"`
	FreedCount           uint32   `protobuf:"varint,6,opt,name=freed_count,json=freedCount,proto3" json:"freed_count,omitempty"`
	MemoryType           string   `protobuf:"bytes,7,opt,name=memory_type,json=memoryType,proto3" json:"memory_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SergShowMemoryInfo) Reset()         { *m = SergShowMemoryInfo{} }
func (m *SergShowMemoryInfo) String() string { return proto.CompactTextString(m) }
func (*SergShowMemoryInfo) ProtoMessage()    {}
func (*SergShowMemoryInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_5c57f54f8d690df5, []int{1}
}

func (m *SergShowMemoryInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SergShowMemoryInfo.Unmarshal(m, b)
}
func (m *SergShowMemoryInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SergShowMemoryInfo.Marshal(b, m, deterministic)
}
func (m *SergShowMemoryInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SergShowMemoryInfo.Merge(m, src)
}
func (m *SergShowMemoryInfo) XXX_Size() int {
	return xxx_messageInfo_SergShowMemoryInfo.Size(m)
}
func (m *SergShowMemoryInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_SergShowMemoryInfo.DiscardUnknown(m)
}

var xxx_messageInfo_SergShowMemoryInfo proto.InternalMessageInfo

func (m *SergShowMemoryInfo) GetStructureName() string {
	if m != nil {
		return m.StructureName
	}
	return ""
}

func (m *SergShowMemoryInfo) GetSize() uint32 {
	if m != nil {
		return m.Size
	}
	return 0
}

func (m *SergShowMemoryInfo) GetCurrentCount() uint32 {
	if m != nil {
		return m.CurrentCount
	}
	return 0
}

func (m *SergShowMemoryInfo) GetAllocFails() uint32 {
	if m != nil {
		return m.AllocFails
	}
	return 0
}

func (m *SergShowMemoryInfo) GetAllocCount() uint32 {
	if m != nil {
		return m.AllocCount
	}
	return 0
}

func (m *SergShowMemoryInfo) GetFreedCount() uint32 {
	if m != nil {
		return m.FreedCount
	}
	return 0
}

func (m *SergShowMemoryInfo) GetMemoryType() string {
	if m != nil {
		return m.MemoryType
	}
	return ""
}

type SergShowEdmMemoryInfo struct {
	Size                 uint32   `protobuf:"varint,1,opt,name=size,proto3" json:"size,omitempty"`
	Total                uint32   `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
	Success              uint32   `protobuf:"varint,3,opt,name=success,proto3" json:"success,omitempty"`
	Failure              uint32   `protobuf:"varint,4,opt,name=failure,proto3" json:"failure,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SergShowEdmMemoryInfo) Reset()         { *m = SergShowEdmMemoryInfo{} }
func (m *SergShowEdmMemoryInfo) String() string { return proto.CompactTextString(m) }
func (*SergShowEdmMemoryInfo) ProtoMessage()    {}
func (*SergShowEdmMemoryInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_5c57f54f8d690df5, []int{2}
}

func (m *SergShowEdmMemoryInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SergShowEdmMemoryInfo.Unmarshal(m, b)
}
func (m *SergShowEdmMemoryInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SergShowEdmMemoryInfo.Marshal(b, m, deterministic)
}
func (m *SergShowEdmMemoryInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SergShowEdmMemoryInfo.Merge(m, src)
}
func (m *SergShowEdmMemoryInfo) XXX_Size() int {
	return xxx_messageInfo_SergShowEdmMemoryInfo.Size(m)
}
func (m *SergShowEdmMemoryInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_SergShowEdmMemoryInfo.DiscardUnknown(m)
}

var xxx_messageInfo_SergShowEdmMemoryInfo proto.InternalMessageInfo

func (m *SergShowEdmMemoryInfo) GetSize() uint32 {
	if m != nil {
		return m.Size
	}
	return 0
}

func (m *SergShowEdmMemoryInfo) GetTotal() uint32 {
	if m != nil {
		return m.Total
	}
	return 0
}

func (m *SergShowEdmMemoryInfo) GetSuccess() uint32 {
	if m != nil {
		return m.Success
	}
	return 0
}

func (m *SergShowEdmMemoryInfo) GetFailure() uint32 {
	if m != nil {
		return m.Failure
	}
	return 0
}

type SergShowStringMemoryInfo struct {
	Size                 uint32   `protobuf:"varint,1,opt,name=size,proto3" json:"size,omitempty"`
	Total                uint32   `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
	Success              uint32   `protobuf:"varint,3,opt,name=success,proto3" json:"success,omitempty"`
	Failure              uint32   `protobuf:"varint,4,opt,name=failure,proto3" json:"failure,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SergShowStringMemoryInfo) Reset()         { *m = SergShowStringMemoryInfo{} }
func (m *SergShowStringMemoryInfo) String() string { return proto.CompactTextString(m) }
func (*SergShowStringMemoryInfo) ProtoMessage()    {}
func (*SergShowStringMemoryInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_5c57f54f8d690df5, []int{3}
}

func (m *SergShowStringMemoryInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SergShowStringMemoryInfo.Unmarshal(m, b)
}
func (m *SergShowStringMemoryInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SergShowStringMemoryInfo.Marshal(b, m, deterministic)
}
func (m *SergShowStringMemoryInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SergShowStringMemoryInfo.Merge(m, src)
}
func (m *SergShowStringMemoryInfo) XXX_Size() int {
	return xxx_messageInfo_SergShowStringMemoryInfo.Size(m)
}
func (m *SergShowStringMemoryInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_SergShowStringMemoryInfo.DiscardUnknown(m)
}

var xxx_messageInfo_SergShowStringMemoryInfo proto.InternalMessageInfo

func (m *SergShowStringMemoryInfo) GetSize() uint32 {
	if m != nil {
		return m.Size
	}
	return 0
}

func (m *SergShowStringMemoryInfo) GetTotal() uint32 {
	if m != nil {
		return m.Total
	}
	return 0
}

func (m *SergShowStringMemoryInfo) GetSuccess() uint32 {
	if m != nil {
		return m.Success
	}
	return 0
}

func (m *SergShowStringMemoryInfo) GetFailure() uint32 {
	if m != nil {
		return m.Failure
	}
	return 0
}

type SergShowMemory struct {
	MemoryInfo           []*SergShowMemoryInfo       `protobuf:"bytes,50,rep,name=memory_info,json=memoryInfo,proto3" json:"memory_info,omitempty"`
	EdmMemoryInfo        []*SergShowEdmMemoryInfo    `protobuf:"bytes,51,rep,name=edm_memory_info,json=edmMemoryInfo,proto3" json:"edm_memory_info,omitempty"`
	StringMemoryInfo     []*SergShowStringMemoryInfo `protobuf:"bytes,52,rep,name=string_memory_info,json=stringMemoryInfo,proto3" json:"string_memory_info,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *SergShowMemory) Reset()         { *m = SergShowMemory{} }
func (m *SergShowMemory) String() string { return proto.CompactTextString(m) }
func (*SergShowMemory) ProtoMessage()    {}
func (*SergShowMemory) Descriptor() ([]byte, []int) {
	return fileDescriptor_5c57f54f8d690df5, []int{4}
}

func (m *SergShowMemory) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SergShowMemory.Unmarshal(m, b)
}
func (m *SergShowMemory) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SergShowMemory.Marshal(b, m, deterministic)
}
func (m *SergShowMemory) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SergShowMemory.Merge(m, src)
}
func (m *SergShowMemory) XXX_Size() int {
	return xxx_messageInfo_SergShowMemory.Size(m)
}
func (m *SergShowMemory) XXX_DiscardUnknown() {
	xxx_messageInfo_SergShowMemory.DiscardUnknown(m)
}

var xxx_messageInfo_SergShowMemory proto.InternalMessageInfo

func (m *SergShowMemory) GetMemoryInfo() []*SergShowMemoryInfo {
	if m != nil {
		return m.MemoryInfo
	}
	return nil
}

func (m *SergShowMemory) GetEdmMemoryInfo() []*SergShowEdmMemoryInfo {
	if m != nil {
		return m.EdmMemoryInfo
	}
	return nil
}

func (m *SergShowMemory) GetStringMemoryInfo() []*SergShowStringMemoryInfo {
	if m != nil {
		return m.StringMemoryInfo
	}
	return nil
}

func init() {
	proto.RegisterType((*SergShowMemory_KEYS)(nil), "cisco_ios_xr_infra_serg_oper.session_redundancy_agent.nodes.node.memory.serg_show_memory_KEYS")
	proto.RegisterType((*SergShowMemoryInfo)(nil), "cisco_ios_xr_infra_serg_oper.session_redundancy_agent.nodes.node.memory.serg_show_memory_info")
	proto.RegisterType((*SergShowEdmMemoryInfo)(nil), "cisco_ios_xr_infra_serg_oper.session_redundancy_agent.nodes.node.memory.serg_show_edm_memory_info")
	proto.RegisterType((*SergShowStringMemoryInfo)(nil), "cisco_ios_xr_infra_serg_oper.session_redundancy_agent.nodes.node.memory.serg_show_string_memory_info")
	proto.RegisterType((*SergShowMemory)(nil), "cisco_ios_xr_infra_serg_oper.session_redundancy_agent.nodes.node.memory.serg_show_memory")
}

func init() { proto.RegisterFile("serg_show_memory.proto", fileDescriptor_5c57f54f8d690df5) }

var fileDescriptor_5c57f54f8d690df5 = []byte{
	// 416 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x54, 0x4d, 0x8b, 0xd5, 0x30,
	0x14, 0xa5, 0xbe, 0xf9, 0x70, 0xee, 0x58, 0x1d, 0x82, 0x4a, 0x44, 0xc1, 0x47, 0x45, 0x78, 0xab,
	0x2e, 0x66, 0xe6, 0x1f, 0x88, 0x8a, 0x88, 0x2e, 0xaa, 0x1b, 0x37, 0x86, 0x4c, 0x7a, 0xfb, 0x0c,
	0xb4, 0x49, 0x49, 0x52, 0xb4, 0x22, 0xb8, 0x77, 0xeb, 0x7f, 0xf1, 0xcf, 0xb9, 0x91, 0xa4, 0x5f,
	0xf3, 0xfa, 0xde, 0xd2, 0x37, 0x9b, 0xd2, 0x7b, 0x72, 0x72, 0xcf, 0x39, 0xb9, 0x21, 0xf0, 0xd0,
	0xa2, 0x59, 0x33, 0xfb, 0x45, 0x7f, 0x65, 0x15, 0x56, 0xda, 0xb4, 0x69, 0x6d, 0xb4, 0xd3, 0xe4,
	0xb5, 0x90, 0x56, 0x68, 0x26, 0xb5, 0x65, 0xdf, 0x0c, 0x93, 0xaa, 0x30, 0x9c, 0x05, 0xaa, 0xae,
	0xd1, 0xa4, 0x16, 0xad, 0x95, 0x5a, 0x31, 0x83, 0x79, 0xa3, 0x72, 0xae, 0x44, 0xcb, 0xf8, 0x1a,
	0x95, 0x4b, 0x95, 0xce, 0xd1, 0x86, 0x6f, 0xda, 0xb5, 0x4b, 0x2e, 0xe1, 0xc1, 0x5c, 0x82, 0xbd,
	0x7d, 0xf9, 0xe9, 0x03, 0x79, 0x0c, 0x27, 0x9e, 0xc7, 0x14, 0xaf, 0x90, 0x46, 0xcb, 0x68, 0x75,
	0x92, 0xdd, 0xf6, 0xc0, 0x7b, 0x5e, 0x61, 0xf2, 0x37, 0xda, 0xb1, 0x4d, 0xaa, 0x42, 0x93, 0xe7,
	0x70, 0xd7, 0x3a, 0xd3, 0x08, 0xd7, 0x98, 0x8d, 0xbd, 0xf1, 0x88, 0xfa, 0x06, 0x84, 0xc0, 0x81,
	0x95, 0xdf, 0x91, 0xde, 0x5a, 0x46, 0xab, 0x38, 0x0b, 0xff, 0xe4, 0x19, 0xc4, 0xa2, 0x31, 0x06,
	0x95, 0x63, 0x42, 0x37, 0xca, 0xd1, 0x45, 0x58, 0xbc, 0xd3, 0x83, 0x2f, 0x3c, 0x46, 0x9e, 0xc2,
	0x29, 0x2f, 0x4b, 0x2d, 0x58, 0xc1, 0x65, 0x69, 0xe9, 0x41, 0xa0, 0x40, 0x80, 0x5e, 0x79, 0x64,
	0x22, 0x74, 0x3d, 0x0e, 0xaf, 0x11, 0xc6, 0x0e, 0x85, 0x41, 0xcc, 0x7b, 0xc2, 0x51, 0x47, 0x08,
	0xd0, 0x48, 0xe8, 0x13, 0xb9, 0xb6, 0x46, 0x7a, 0x1c, 0xfc, 0x43, 0x07, 0x7d, 0x6c, 0x6b, 0x4c,
	0x5a, 0x78, 0x34, 0x85, 0xc7, 0xbc, 0xda, 0x38, 0x80, 0x21, 0x59, 0x74, 0x2d, 0xd9, 0x7d, 0x38,
	0x74, 0xda, 0xf1, 0xb2, 0x8f, 0xdb, 0x15, 0x84, 0xc2, 0xb1, 0x6d, 0x84, 0x40, 0x6b, 0xfb, 0xa4,
	0x43, 0xe9, 0x57, 0x7c, 0xbc, 0xc6, 0x60, 0x1f, 0x70, 0x28, 0x93, 0x1f, 0xf0, 0x64, 0x92, 0xb6,
	0xce, 0x48, 0xb5, 0xbe, 0x41, 0xf5, 0x3f, 0x0b, 0x38, 0x9b, 0x8f, 0x9d, 0xfc, 0x1c, 0x8f, 0xcb,
	0x3b, 0xa0, 0xe7, 0xcb, 0xc5, 0xea, 0xf4, 0xfc, 0x73, 0xfa, 0x9f, 0x2e, 0x68, 0xba, 0xf3, 0x9a,
	0x0d, 0xe3, 0x78, 0xe3, 0x33, 0xff, 0x8a, 0xe0, 0xde, 0x6c, 0x0a, 0xf4, 0x22, 0xb8, 0xb8, 0xda,
	0x83, 0x8b, 0x99, 0x52, 0x16, 0x63, 0x5e, 0xbd, 0x9b, 0xcc, 0xfc, 0x8e, 0x80, 0x6c, 0xcf, 0x85,
	0x5e, 0x06, 0x3f, 0xb8, 0x07, 0x3f, 0xdb, 0x62, 0xd9, 0x59, 0x87, 0x4d, 0xae, 0xae, 0x8e, 0xc2,
	0xab, 0x71, 0xf1, 0x2f, 0x00, 0x00, 0xff, 0xff, 0x92, 0x91, 0x38, 0xff, 0x4f, 0x04, 0x00, 0x00,
}
