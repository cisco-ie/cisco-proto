/*
Copyright 2019 Cisco Systems

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: diameter_gy_stats.proto

package cisco_ios_xr_aaa_diameter_oper_augment_diameter_gy_statistics

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type DiameterGyStats_KEYS struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DiameterGyStats_KEYS) Reset()         { *m = DiameterGyStats_KEYS{} }
func (m *DiameterGyStats_KEYS) String() string { return proto.CompactTextString(m) }
func (*DiameterGyStats_KEYS) ProtoMessage()    {}
func (*DiameterGyStats_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_7b56a11b0d00868e, []int{0}
}

func (m *DiameterGyStats_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DiameterGyStats_KEYS.Unmarshal(m, b)
}
func (m *DiameterGyStats_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DiameterGyStats_KEYS.Marshal(b, m, deterministic)
}
func (m *DiameterGyStats_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DiameterGyStats_KEYS.Merge(m, src)
}
func (m *DiameterGyStats_KEYS) XXX_Size() int {
	return xxx_messageInfo_DiameterGyStats_KEYS.Size(m)
}
func (m *DiameterGyStats_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_DiameterGyStats_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_DiameterGyStats_KEYS proto.InternalMessageInfo

type DiameterGyStats struct {
	CcrInitMessages           uint32   `protobuf:"varint,50,opt,name=ccr_init_messages,json=ccrInitMessages,proto3" json:"ccr_init_messages,omitempty"`
	CcrInitFailedMessages     uint32   `protobuf:"varint,51,opt,name=ccr_init_failed_messages,json=ccrInitFailedMessages,proto3" json:"ccr_init_failed_messages,omitempty"`
	CcrInitTimedOutMessages   uint32   `protobuf:"varint,52,opt,name=ccr_init_timed_out_messages,json=ccrInitTimedOutMessages,proto3" json:"ccr_init_timed_out_messages,omitempty"`
	CcrInitRetryMessages      uint32   `protobuf:"varint,53,opt,name=ccr_init_retry_messages,json=ccrInitRetryMessages,proto3" json:"ccr_init_retry_messages,omitempty"`
	CcrUpdateMessages         uint32   `protobuf:"varint,54,opt,name=ccr_update_messages,json=ccrUpdateMessages,proto3" json:"ccr_update_messages,omitempty"`
	CcrUpdateFailedMessages   uint32   `protobuf:"varint,55,opt,name=ccr_update_failed_messages,json=ccrUpdateFailedMessages,proto3" json:"ccr_update_failed_messages,omitempty"`
	CcrUpdateTimedOutMessages uint32   `protobuf:"varint,56,opt,name=ccr_update_timed_out_messages,json=ccrUpdateTimedOutMessages,proto3" json:"ccr_update_timed_out_messages,omitempty"`
	CcrUpdateRetryMessages    uint32   `protobuf:"varint,57,opt,name=ccr_update_retry_messages,json=ccrUpdateRetryMessages,proto3" json:"ccr_update_retry_messages,omitempty"`
	CcrFinalMessages          uint32   `protobuf:"varint,58,opt,name=ccr_final_messages,json=ccrFinalMessages,proto3" json:"ccr_final_messages,omitempty"`
	CcrFinalFailedMessages    uint32   `protobuf:"varint,59,opt,name=ccr_final_failed_messages,json=ccrFinalFailedMessages,proto3" json:"ccr_final_failed_messages,omitempty"`
	CcrFinalTimedOutMessages  uint32   `protobuf:"varint,60,opt,name=ccr_final_timed_out_messages,json=ccrFinalTimedOutMessages,proto3" json:"ccr_final_timed_out_messages,omitempty"`
	CcrFinalRetryMessages     uint32   `protobuf:"varint,61,opt,name=ccr_final_retry_messages,json=ccrFinalRetryMessages,proto3" json:"ccr_final_retry_messages,omitempty"`
	CcaInitMessages           uint32   `protobuf:"varint,62,opt,name=cca_init_messages,json=ccaInitMessages,proto3" json:"cca_init_messages,omitempty"`
	CcaInitErrorMessages      uint32   `protobuf:"varint,63,opt,name=cca_init_error_messages,json=ccaInitErrorMessages,proto3" json:"cca_init_error_messages,omitempty"`
	CcaUpdateMessages         uint32   `protobuf:"varint,64,opt,name=cca_update_messages,json=ccaUpdateMessages,proto3" json:"cca_update_messages,omitempty"`
	CcaUpdateErrorMessages    uint32   `protobuf:"varint,65,opt,name=cca_update_error_messages,json=ccaUpdateErrorMessages,proto3" json:"cca_update_error_messages,omitempty"`
	CcaFinalMessages          uint32   `protobuf:"varint,66,opt,name=cca_final_messages,json=ccaFinalMessages,proto3" json:"cca_final_messages,omitempty"`
	CcaFinalErrorMessages     uint32   `protobuf:"varint,67,opt,name=cca_final_error_messages,json=ccaFinalErrorMessages,proto3" json:"cca_final_error_messages,omitempty"`
	RarReceivedMessages       uint32   `protobuf:"varint,68,opt,name=rar_received_messages,json=rarReceivedMessages,proto3" json:"rar_received_messages,omitempty"`
	RarReceivedErrorMessages  uint32   `protobuf:"varint,69,opt,name=rar_received_error_messages,json=rarReceivedErrorMessages,proto3" json:"rar_received_error_messages,omitempty"`
	RaaSentMessages           uint32   `protobuf:"varint,70,opt,name=raa_sent_messages,json=raaSentMessages,proto3" json:"raa_sent_messages,omitempty"`
	RaaSentErrorMessages      uint32   `protobuf:"varint,71,opt,name=raa_sent_error_messages,json=raaSentErrorMessages,proto3" json:"raa_sent_error_messages,omitempty"`
	AsrReceivedMessages       uint32   `protobuf:"varint,72,opt,name=asr_received_messages,json=asrReceivedMessages,proto3" json:"asr_received_messages,omitempty"`
	AsrReceivedErrorMessages  uint32   `protobuf:"varint,73,opt,name=asr_received_error_messages,json=asrReceivedErrorMessages,proto3" json:"asr_received_error_messages,omitempty"`
	AsaSentMessages           uint32   `protobuf:"varint,74,opt,name=asa_sent_messages,json=asaSentMessages,proto3" json:"asa_sent_messages,omitempty"`
	AsaSentErrorMessages      uint32   `protobuf:"varint,75,opt,name=asa_sent_error_messages,json=asaSentErrorMessages,proto3" json:"asa_sent_error_messages,omitempty"`
	UnknownRequestMessages    uint32   `protobuf:"varint,76,opt,name=unknown_request_messages,json=unknownRequestMessages,proto3" json:"unknown_request_messages,omitempty"`
	RestoreSessions           uint32   `protobuf:"varint,77,opt,name=restore_sessions,json=restoreSessions,proto3" json:"restore_sessions,omitempty"`
	OpenSessions              uint32   `protobuf:"varint,78,opt,name=open_sessions,json=openSessions,proto3" json:"open_sessions,omitempty"`
	CloseSessions             uint32   `protobuf:"varint,79,opt,name=close_sessions,json=closeSessions,proto3" json:"close_sessions,omitempty"`
	ActiveSessions            uint32   `protobuf:"varint,80,opt,name=active_sessions,json=activeSessions,proto3" json:"active_sessions,omitempty"`
	XXX_NoUnkeyedLiteral      struct{} `json:"-"`
	XXX_unrecognized          []byte   `json:"-"`
	XXX_sizecache             int32    `json:"-"`
}

func (m *DiameterGyStats) Reset()         { *m = DiameterGyStats{} }
func (m *DiameterGyStats) String() string { return proto.CompactTextString(m) }
func (*DiameterGyStats) ProtoMessage()    {}
func (*DiameterGyStats) Descriptor() ([]byte, []int) {
	return fileDescriptor_7b56a11b0d00868e, []int{1}
}

func (m *DiameterGyStats) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DiameterGyStats.Unmarshal(m, b)
}
func (m *DiameterGyStats) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DiameterGyStats.Marshal(b, m, deterministic)
}
func (m *DiameterGyStats) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DiameterGyStats.Merge(m, src)
}
func (m *DiameterGyStats) XXX_Size() int {
	return xxx_messageInfo_DiameterGyStats.Size(m)
}
func (m *DiameterGyStats) XXX_DiscardUnknown() {
	xxx_messageInfo_DiameterGyStats.DiscardUnknown(m)
}

var xxx_messageInfo_DiameterGyStats proto.InternalMessageInfo

func (m *DiameterGyStats) GetCcrInitMessages() uint32 {
	if m != nil {
		return m.CcrInitMessages
	}
	return 0
}

func (m *DiameterGyStats) GetCcrInitFailedMessages() uint32 {
	if m != nil {
		return m.CcrInitFailedMessages
	}
	return 0
}

func (m *DiameterGyStats) GetCcrInitTimedOutMessages() uint32 {
	if m != nil {
		return m.CcrInitTimedOutMessages
	}
	return 0
}

func (m *DiameterGyStats) GetCcrInitRetryMessages() uint32 {
	if m != nil {
		return m.CcrInitRetryMessages
	}
	return 0
}

func (m *DiameterGyStats) GetCcrUpdateMessages() uint32 {
	if m != nil {
		return m.CcrUpdateMessages
	}
	return 0
}

func (m *DiameterGyStats) GetCcrUpdateFailedMessages() uint32 {
	if m != nil {
		return m.CcrUpdateFailedMessages
	}
	return 0
}

func (m *DiameterGyStats) GetCcrUpdateTimedOutMessages() uint32 {
	if m != nil {
		return m.CcrUpdateTimedOutMessages
	}
	return 0
}

func (m *DiameterGyStats) GetCcrUpdateRetryMessages() uint32 {
	if m != nil {
		return m.CcrUpdateRetryMessages
	}
	return 0
}

func (m *DiameterGyStats) GetCcrFinalMessages() uint32 {
	if m != nil {
		return m.CcrFinalMessages
	}
	return 0
}

func (m *DiameterGyStats) GetCcrFinalFailedMessages() uint32 {
	if m != nil {
		return m.CcrFinalFailedMessages
	}
	return 0
}

func (m *DiameterGyStats) GetCcrFinalTimedOutMessages() uint32 {
	if m != nil {
		return m.CcrFinalTimedOutMessages
	}
	return 0
}

func (m *DiameterGyStats) GetCcrFinalRetryMessages() uint32 {
	if m != nil {
		return m.CcrFinalRetryMessages
	}
	return 0
}

func (m *DiameterGyStats) GetCcaInitMessages() uint32 {
	if m != nil {
		return m.CcaInitMessages
	}
	return 0
}

func (m *DiameterGyStats) GetCcaInitErrorMessages() uint32 {
	if m != nil {
		return m.CcaInitErrorMessages
	}
	return 0
}

func (m *DiameterGyStats) GetCcaUpdateMessages() uint32 {
	if m != nil {
		return m.CcaUpdateMessages
	}
	return 0
}

func (m *DiameterGyStats) GetCcaUpdateErrorMessages() uint32 {
	if m != nil {
		return m.CcaUpdateErrorMessages
	}
	return 0
}

func (m *DiameterGyStats) GetCcaFinalMessages() uint32 {
	if m != nil {
		return m.CcaFinalMessages
	}
	return 0
}

func (m *DiameterGyStats) GetCcaFinalErrorMessages() uint32 {
	if m != nil {
		return m.CcaFinalErrorMessages
	}
	return 0
}

func (m *DiameterGyStats) GetRarReceivedMessages() uint32 {
	if m != nil {
		return m.RarReceivedMessages
	}
	return 0
}

func (m *DiameterGyStats) GetRarReceivedErrorMessages() uint32 {
	if m != nil {
		return m.RarReceivedErrorMessages
	}
	return 0
}

func (m *DiameterGyStats) GetRaaSentMessages() uint32 {
	if m != nil {
		return m.RaaSentMessages
	}
	return 0
}

func (m *DiameterGyStats) GetRaaSentErrorMessages() uint32 {
	if m != nil {
		return m.RaaSentErrorMessages
	}
	return 0
}

func (m *DiameterGyStats) GetAsrReceivedMessages() uint32 {
	if m != nil {
		return m.AsrReceivedMessages
	}
	return 0
}

func (m *DiameterGyStats) GetAsrReceivedErrorMessages() uint32 {
	if m != nil {
		return m.AsrReceivedErrorMessages
	}
	return 0
}

func (m *DiameterGyStats) GetAsaSentMessages() uint32 {
	if m != nil {
		return m.AsaSentMessages
	}
	return 0
}

func (m *DiameterGyStats) GetAsaSentErrorMessages() uint32 {
	if m != nil {
		return m.AsaSentErrorMessages
	}
	return 0
}

func (m *DiameterGyStats) GetUnknownRequestMessages() uint32 {
	if m != nil {
		return m.UnknownRequestMessages
	}
	return 0
}

func (m *DiameterGyStats) GetRestoreSessions() uint32 {
	if m != nil {
		return m.RestoreSessions
	}
	return 0
}

func (m *DiameterGyStats) GetOpenSessions() uint32 {
	if m != nil {
		return m.OpenSessions
	}
	return 0
}

func (m *DiameterGyStats) GetCloseSessions() uint32 {
	if m != nil {
		return m.CloseSessions
	}
	return 0
}

func (m *DiameterGyStats) GetActiveSessions() uint32 {
	if m != nil {
		return m.ActiveSessions
	}
	return 0
}

func init() {
	proto.RegisterType((*DiameterGyStats_KEYS)(nil), "cisco_ios_xr_aaa_diameter_oper.augment.diameter.gy_statistics.diameter_gy_stats_KEYS")
	proto.RegisterType((*DiameterGyStats)(nil), "cisco_ios_xr_aaa_diameter_oper.augment.diameter.gy_statistics.diameter_gy_stats")
}

func init() { proto.RegisterFile("diameter_gy_stats.proto", fileDescriptor_7b56a11b0d00868e) }

var fileDescriptor_7b56a11b0d00868e = []byte{
	// 613 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x95, 0x4d, 0x6f, 0x13, 0x3d,
	0x14, 0x85, 0xf5, 0x6e, 0xde, 0x85, 0xd5, 0xcf, 0x94, 0x36, 0x53, 0x0a, 0x12, 0x2a, 0x42, 0x40,
	0x85, 0xb2, 0x68, 0x29, 0x6d, 0x69, 0x53, 0xca, 0x47, 0x02, 0xa5, 0x94, 0xa2, 0x04, 0x16, 0xac,
	0xac, 0x8b, 0xe3, 0x46, 0x16, 0xc9, 0x38, 0xd8, 0x9e, 0x42, 0xff, 0x37, 0x3f, 0x00, 0xcd, 0xb5,
	0xc7, 0x63, 0x7b, 0xb2, 0xbd, 0xf7, 0x3c, 0x73, 0x72, 0x7c, 0x8f, 0x14, 0xd2, 0x1e, 0x09, 0x98,
	0x72, 0xc3, 0x15, 0x1d, 0xdf, 0x52, 0x6d, 0xc0, 0xe8, 0xce, 0x4c, 0x49, 0x23, 0x5b, 0x5d, 0x26,
	0x34, 0x93, 0x54, 0x48, 0x4d, 0xff, 0x28, 0x0a, 0x00, 0xd4, 0x2b, 0xe5, 0x8c, 0xab, 0x0e, 0x14,
	0xe3, 0x29, 0xcf, 0x4d, 0xa7, 0x9a, 0x76, 0x1c, 0x2f, 0xb4, 0x11, 0x4c, 0x6f, 0x67, 0x64, 0xa3,
	0xf1, 0x65, 0x7a, 0xd1, 0xfb, 0x3e, 0xdc, 0xfe, 0xbb, 0x40, 0x56, 0x1b, 0xab, 0xd6, 0x0e, 0x59,
	0x65, 0x4c, 0x51, 0x91, 0x0b, 0x43, 0xa7, 0x5c, 0x6b, 0x18, 0x73, 0x9d, 0xed, 0x3e, 0xf8, 0xef,
	0xc9, 0xe2, 0x60, 0x99, 0x31, 0x75, 0x9e, 0x0b, 0x73, 0xe9, 0xc6, 0xad, 0x03, 0x92, 0x79, 0xed,
	0x35, 0x88, 0x09, 0x1f, 0xd5, 0xc8, 0x1e, 0x22, 0xeb, 0x0e, 0xe9, 0xe3, 0xd6, 0x83, 0x27, 0x64,
	0xcb, 0x83, 0x46, 0x4c, 0xf9, 0x88, 0xca, 0x22, 0xb0, 0x7b, 0x8e, 0x6c, 0xdb, 0xb1, 0x5f, 0x4b,
	0xc1, 0x55, 0x51, 0xdb, 0xee, 0x93, 0xb6, 0xa7, 0x15, 0x37, 0xea, 0xb6, 0x26, 0xf7, 0x91, 0xbc,
	0xe3, 0xc8, 0x41, 0xb9, 0xf4, 0x58, 0x87, 0xac, 0x95, 0x58, 0x31, 0x1b, 0x81, 0xe1, 0x35, 0xf2,
	0x02, 0x91, 0x32, 0xf4, 0x37, 0xdc, 0x78, 0xfd, 0x31, 0xb9, 0x1b, 0xe8, 0xd3, 0x7c, 0x07, 0xfe,
	0x37, 0x5a, 0x2c, 0x49, 0x78, 0x46, 0xee, 0x07, 0xf0, 0x9c, 0x8c, 0x87, 0xc8, 0x6f, 0x7a, 0xbe,
	0x91, 0xf2, 0x88, 0x6c, 0x06, 0x5f, 0x48, 0x72, 0x1e, 0x21, 0xbd, 0xe1, 0xe9, 0x38, 0xe9, 0x33,
	0xd2, 0x2a, 0xd1, 0x6b, 0x91, 0xc3, 0xa4, 0x66, 0x5e, 0x22, 0xb3, 0xc2, 0x98, 0xea, 0x97, 0x8b,
	0xd4, 0xc8, 0xaa, 0xd3, 0x98, 0xc7, 0xde, 0x08, 0xa1, 0x24, 0xe5, 0x29, 0xb9, 0x57, 0xa3, 0x73,
	0x42, 0x9e, 0x20, 0x9d, 0x55, 0x74, 0x23, 0xa3, 0x2b, 0x90, 0xe5, 0x93, 0x88, 0x5d, 0x5f, 0x20,
	0x64, 0xe3, 0x84, 0xd8, 0x52, 0x48, 0x5a, 0x7a, 0x5a, 0xb5, 0x14, 0xa2, 0x96, 0x62, 0x5d, 0x9c,
	0x96, 0x2b, 0x25, 0x55, 0x4d, 0xbc, 0xaa, 0xea, 0x82, 0x44, 0xaf, 0x5c, 0xc6, 0x75, 0x81, 0x46,
	0x5d, 0xce, 0xaa, 0xba, 0x40, 0x52, 0x17, 0x7c, 0x46, 0xaf, 0x4f, 0x8c, 0x5e, 0x57, 0xcf, 0xe8,
	0xa8, 0xd8, 0x0a, 0xef, 0x05, 0xe9, 0xbd, 0xde, 0x54, 0xf7, 0x82, 0xf8, 0x5e, 0xf8, 0x68, 0x95,
	0x3a, 0xf1, 0x79, 0x5b, 0x3d, 0x9a, 0x65, 0x62, 0x9b, 0x5d, 0xb2, 0xae, 0x40, 0x51, 0xc5, 0x19,
	0x17, 0x37, 0xe1, 0x91, 0xdf, 0x21, 0xb5, 0xa6, 0x40, 0x0d, 0xdc, 0xce, 0x33, 0x5d, 0xb2, 0x15,
	0x31, 0x89, 0x5f, 0xcf, 0x1e, 0x38, 0x20, 0x63, 0xcb, 0x1d, 0xb2, 0xaa, 0x00, 0xa8, 0xe6, 0x79,
	0x70, 0xa7, 0xbe, 0xbd, 0x93, 0x02, 0x18, 0xf2, 0x3c, 0xba, 0x93, 0xd7, 0x26, 0x36, 0xef, 0xed,
	0x9d, 0x1c, 0xd1, 0x48, 0x05, 0x7a, 0x5e, 0xaa, 0x0f, 0x36, 0x15, 0xe8, 0xb9, 0xa9, 0x22, 0x26,
	0xb1, 0x3b, 0xb7, 0xa9, 0x02, 0xb2, 0x91, 0x0a, 0x74, 0x9a, 0xea, 0xa3, 0x4d, 0x05, 0xba, 0x91,
	0xca, 0x6b, 0x13, 0x9b, 0x0b, 0x9b, 0xca, 0x11, 0xb1, 0xc5, 0x21, 0xc9, 0x8a, 0xfc, 0x67, 0x2e,
	0x7f, 0xe7, 0x54, 0xf1, 0x5f, 0x05, 0xd7, 0x81, 0xd3, 0x27, 0x5b, 0x26, 0xb7, 0x1f, 0xd8, 0xb5,
	0x27, 0x9f, 0x92, 0x15, 0xc5, 0xb5, 0x91, 0x8a, 0x53, 0xcd, 0xb5, 0x16, 0x32, 0xd7, 0xd9, 0xa5,
	0x7b, 0x71, 0x3b, 0x1f, 0xba, 0x71, 0xeb, 0x21, 0x59, 0x94, 0x33, 0x9e, 0xd7, 0xba, 0xcf, 0xa8,
	0x5b, 0x28, 0x87, 0x5e, 0xf4, 0x88, 0x2c, 0xb1, 0x89, 0xd4, 0xc1, 0xd7, 0xae, 0x50, 0xb5, 0x88,
	0x53, 0x2f, 0x7b, 0x4c, 0x96, 0x81, 0x19, 0x71, 0x13, 0xe8, 0xbe, 0xa0, 0x6e, 0xc9, 0x8e, 0x2b,
	0xe1, 0x8f, 0xff, 0xf1, 0x6f, 0x6d, 0xef, 0x5f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x56, 0x6b, 0x8c,
	0x47, 0xf1, 0x06, 0x00, 0x00,
}
