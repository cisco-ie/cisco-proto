/*
Copyright 2019 Cisco Systems

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: ipv6_nd_slaac_intfs_info.proto

package cisco_ios_xr_ipv6_nd_oper_ipv6_node_discovery_nodes_node_slaac_interfaces_slaac_interface_router_advert_detail

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Ipv6NdSlaacIntfsInfo_KEYS struct {
	NodeName             string   `protobuf:"bytes,1,opt,name=node_name,json=nodeName,proto3" json:"node_name,omitempty"`
	InterfaceName        string   `protobuf:"bytes,2,opt,name=interface_name,json=interfaceName,proto3" json:"interface_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Ipv6NdSlaacIntfsInfo_KEYS) Reset()         { *m = Ipv6NdSlaacIntfsInfo_KEYS{} }
func (m *Ipv6NdSlaacIntfsInfo_KEYS) String() string { return proto.CompactTextString(m) }
func (*Ipv6NdSlaacIntfsInfo_KEYS) ProtoMessage()    {}
func (*Ipv6NdSlaacIntfsInfo_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_c9726b8ef3a5596e, []int{0}
}

func (m *Ipv6NdSlaacIntfsInfo_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Ipv6NdSlaacIntfsInfo_KEYS.Unmarshal(m, b)
}
func (m *Ipv6NdSlaacIntfsInfo_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Ipv6NdSlaacIntfsInfo_KEYS.Marshal(b, m, deterministic)
}
func (m *Ipv6NdSlaacIntfsInfo_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Ipv6NdSlaacIntfsInfo_KEYS.Merge(m, src)
}
func (m *Ipv6NdSlaacIntfsInfo_KEYS) XXX_Size() int {
	return xxx_messageInfo_Ipv6NdSlaacIntfsInfo_KEYS.Size(m)
}
func (m *Ipv6NdSlaacIntfsInfo_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_Ipv6NdSlaacIntfsInfo_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_Ipv6NdSlaacIntfsInfo_KEYS proto.InternalMessageInfo

func (m *Ipv6NdSlaacIntfsInfo_KEYS) GetNodeName() string {
	if m != nil {
		return m.NodeName
	}
	return ""
}

func (m *Ipv6NdSlaacIntfsInfo_KEYS) GetInterfaceName() string {
	if m != nil {
		return m.InterfaceName
	}
	return ""
}

type BagTimespec struct {
	Seconds              uint32   `protobuf:"varint,1,opt,name=seconds,proto3" json:"seconds,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BagTimespec) Reset()         { *m = BagTimespec{} }
func (m *BagTimespec) String() string { return proto.CompactTextString(m) }
func (*BagTimespec) ProtoMessage()    {}
func (*BagTimespec) Descriptor() ([]byte, []int) {
	return fileDescriptor_c9726b8ef3a5596e, []int{1}
}

func (m *BagTimespec) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BagTimespec.Unmarshal(m, b)
}
func (m *BagTimespec) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BagTimespec.Marshal(b, m, deterministic)
}
func (m *BagTimespec) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BagTimespec.Merge(m, src)
}
func (m *BagTimespec) XXX_Size() int {
	return xxx_messageInfo_BagTimespec.Size(m)
}
func (m *BagTimespec) XXX_DiscardUnknown() {
	xxx_messageInfo_BagTimespec.DiscardUnknown(m)
}

var xxx_messageInfo_BagTimespec proto.InternalMessageInfo

func (m *BagTimespec) GetSeconds() uint32 {
	if m != nil {
		return m.Seconds
	}
	return 0
}

type Ipv6NdPrefixQ struct {
	PrefixAddress        string   `protobuf:"bytes,1,opt,name=prefix_address,json=prefixAddress,proto3" json:"prefix_address,omitempty"`
	Eui64                string   `protobuf:"bytes,2,opt,name=eui64,proto3" json:"eui64,omitempty"`
	ValidLifeTime        uint32   `protobuf:"varint,3,opt,name=valid_life_time,json=validLifeTime,proto3" json:"valid_life_time,omitempty"`
	PreferredLifeTime    uint32   `protobuf:"varint,4,opt,name=preferred_life_time,json=preferredLifeTime,proto3" json:"preferred_life_time,omitempty"`
	PrefixLen            uint32   `protobuf:"varint,5,opt,name=prefix_len,json=prefixLen,proto3" json:"prefix_len,omitempty"`
	Flags                uint32   `protobuf:"varint,6,opt,name=flags,proto3" json:"flags,omitempty"`
	PfxFlags             uint32   `protobuf:"varint,7,opt,name=pfx_flags,json=pfxFlags,proto3" json:"pfx_flags,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Ipv6NdPrefixQ) Reset()         { *m = Ipv6NdPrefixQ{} }
func (m *Ipv6NdPrefixQ) String() string { return proto.CompactTextString(m) }
func (*Ipv6NdPrefixQ) ProtoMessage()    {}
func (*Ipv6NdPrefixQ) Descriptor() ([]byte, []int) {
	return fileDescriptor_c9726b8ef3a5596e, []int{2}
}

func (m *Ipv6NdPrefixQ) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Ipv6NdPrefixQ.Unmarshal(m, b)
}
func (m *Ipv6NdPrefixQ) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Ipv6NdPrefixQ.Marshal(b, m, deterministic)
}
func (m *Ipv6NdPrefixQ) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Ipv6NdPrefixQ.Merge(m, src)
}
func (m *Ipv6NdPrefixQ) XXX_Size() int {
	return xxx_messageInfo_Ipv6NdPrefixQ.Size(m)
}
func (m *Ipv6NdPrefixQ) XXX_DiscardUnknown() {
	xxx_messageInfo_Ipv6NdPrefixQ.DiscardUnknown(m)
}

var xxx_messageInfo_Ipv6NdPrefixQ proto.InternalMessageInfo

func (m *Ipv6NdPrefixQ) GetPrefixAddress() string {
	if m != nil {
		return m.PrefixAddress
	}
	return ""
}

func (m *Ipv6NdPrefixQ) GetEui64() string {
	if m != nil {
		return m.Eui64
	}
	return ""
}

func (m *Ipv6NdPrefixQ) GetValidLifeTime() uint32 {
	if m != nil {
		return m.ValidLifeTime
	}
	return 0
}

func (m *Ipv6NdPrefixQ) GetPreferredLifeTime() uint32 {
	if m != nil {
		return m.PreferredLifeTime
	}
	return 0
}

func (m *Ipv6NdPrefixQ) GetPrefixLen() uint32 {
	if m != nil {
		return m.PrefixLen
	}
	return 0
}

func (m *Ipv6NdPrefixQ) GetFlags() uint32 {
	if m != nil {
		return m.Flags
	}
	return 0
}

func (m *Ipv6NdPrefixQ) GetPfxFlags() uint32 {
	if m != nil {
		return m.PfxFlags
	}
	return 0
}

type Ipv6NdRaInfo struct {
	Address              string           `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	ElapsedRaTime        *BagTimespec     `protobuf:"bytes,2,opt,name=elapsed_ra_time,json=elapsedRaTime,proto3" json:"elapsed_ra_time,omitempty"`
	Hops                 uint32           `protobuf:"varint,3,opt,name=hops,proto3" json:"hops,omitempty"`
	Flags                uint32           `protobuf:"varint,4,opt,name=flags,proto3" json:"flags,omitempty"`
	LifeTime             uint32           `protobuf:"varint,5,opt,name=life_time,json=lifeTime,proto3" json:"life_time,omitempty"`
	ReachableTime        *BagTimespec     `protobuf:"bytes,6,opt,name=reachable_time,json=reachableTime,proto3" json:"reachable_time,omitempty"`
	RetransTime          *BagTimespec     `protobuf:"bytes,7,opt,name=retrans_time,json=retransTime,proto3" json:"retrans_time,omitempty"`
	Mtu                  uint32           `protobuf:"varint,8,opt,name=mtu,proto3" json:"mtu,omitempty"`
	ErrMsg               bool             `protobuf:"varint,9,opt,name=err_msg,json=errMsg,proto3" json:"err_msg,omitempty"`
	VrfId                uint32           `protobuf:"varint,10,opt,name=vrf_id,json=vrfId,proto3" json:"vrf_id,omitempty"`
	U6TblId              uint32           `protobuf:"varint,11,opt,name=u6_tbl_id,json=u6TblId,proto3" json:"u6_tbl_id,omitempty"`
	RibProtoid           uint32           `protobuf:"varint,12,opt,name=rib_protoid,json=ribProtoid,proto3" json:"rib_protoid,omitempty"`
	DefaultRouter        bool             `protobuf:"varint,13,opt,name=default_router,json=defaultRouter,proto3" json:"default_router,omitempty"`
	Reachability         uint32           `protobuf:"varint,14,opt,name=reachability,proto3" json:"reachability,omitempty"`
	PrefixQ              []*Ipv6NdPrefixQ `protobuf:"bytes,15,rep,name=prefix_q,json=prefixQ,proto3" json:"prefix_q,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *Ipv6NdRaInfo) Reset()         { *m = Ipv6NdRaInfo{} }
func (m *Ipv6NdRaInfo) String() string { return proto.CompactTextString(m) }
func (*Ipv6NdRaInfo) ProtoMessage()    {}
func (*Ipv6NdRaInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_c9726b8ef3a5596e, []int{3}
}

func (m *Ipv6NdRaInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Ipv6NdRaInfo.Unmarshal(m, b)
}
func (m *Ipv6NdRaInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Ipv6NdRaInfo.Marshal(b, m, deterministic)
}
func (m *Ipv6NdRaInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Ipv6NdRaInfo.Merge(m, src)
}
func (m *Ipv6NdRaInfo) XXX_Size() int {
	return xxx_messageInfo_Ipv6NdRaInfo.Size(m)
}
func (m *Ipv6NdRaInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_Ipv6NdRaInfo.DiscardUnknown(m)
}

var xxx_messageInfo_Ipv6NdRaInfo proto.InternalMessageInfo

func (m *Ipv6NdRaInfo) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *Ipv6NdRaInfo) GetElapsedRaTime() *BagTimespec {
	if m != nil {
		return m.ElapsedRaTime
	}
	return nil
}

func (m *Ipv6NdRaInfo) GetHops() uint32 {
	if m != nil {
		return m.Hops
	}
	return 0
}

func (m *Ipv6NdRaInfo) GetFlags() uint32 {
	if m != nil {
		return m.Flags
	}
	return 0
}

func (m *Ipv6NdRaInfo) GetLifeTime() uint32 {
	if m != nil {
		return m.LifeTime
	}
	return 0
}

func (m *Ipv6NdRaInfo) GetReachableTime() *BagTimespec {
	if m != nil {
		return m.ReachableTime
	}
	return nil
}

func (m *Ipv6NdRaInfo) GetRetransTime() *BagTimespec {
	if m != nil {
		return m.RetransTime
	}
	return nil
}

func (m *Ipv6NdRaInfo) GetMtu() uint32 {
	if m != nil {
		return m.Mtu
	}
	return 0
}

func (m *Ipv6NdRaInfo) GetErrMsg() bool {
	if m != nil {
		return m.ErrMsg
	}
	return false
}

func (m *Ipv6NdRaInfo) GetVrfId() uint32 {
	if m != nil {
		return m.VrfId
	}
	return 0
}

func (m *Ipv6NdRaInfo) GetU6TblId() uint32 {
	if m != nil {
		return m.U6TblId
	}
	return 0
}

func (m *Ipv6NdRaInfo) GetRibProtoid() uint32 {
	if m != nil {
		return m.RibProtoid
	}
	return 0
}

func (m *Ipv6NdRaInfo) GetDefaultRouter() bool {
	if m != nil {
		return m.DefaultRouter
	}
	return false
}

func (m *Ipv6NdRaInfo) GetReachability() uint32 {
	if m != nil {
		return m.Reachability
	}
	return 0
}

func (m *Ipv6NdRaInfo) GetPrefixQ() []*Ipv6NdPrefixQ {
	if m != nil {
		return m.PrefixQ
	}
	return nil
}

type Ipv6NdSlaacIntfsInfo struct {
	Idb                  string          `protobuf:"bytes,50,opt,name=idb,proto3" json:"idb,omitempty"`
	Ra                   []*Ipv6NdRaInfo `protobuf:"bytes,51,rep,name=ra,proto3" json:"ra,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *Ipv6NdSlaacIntfsInfo) Reset()         { *m = Ipv6NdSlaacIntfsInfo{} }
func (m *Ipv6NdSlaacIntfsInfo) String() string { return proto.CompactTextString(m) }
func (*Ipv6NdSlaacIntfsInfo) ProtoMessage()    {}
func (*Ipv6NdSlaacIntfsInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_c9726b8ef3a5596e, []int{4}
}

func (m *Ipv6NdSlaacIntfsInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Ipv6NdSlaacIntfsInfo.Unmarshal(m, b)
}
func (m *Ipv6NdSlaacIntfsInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Ipv6NdSlaacIntfsInfo.Marshal(b, m, deterministic)
}
func (m *Ipv6NdSlaacIntfsInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Ipv6NdSlaacIntfsInfo.Merge(m, src)
}
func (m *Ipv6NdSlaacIntfsInfo) XXX_Size() int {
	return xxx_messageInfo_Ipv6NdSlaacIntfsInfo.Size(m)
}
func (m *Ipv6NdSlaacIntfsInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_Ipv6NdSlaacIntfsInfo.DiscardUnknown(m)
}

var xxx_messageInfo_Ipv6NdSlaacIntfsInfo proto.InternalMessageInfo

func (m *Ipv6NdSlaacIntfsInfo) GetIdb() string {
	if m != nil {
		return m.Idb
	}
	return ""
}

func (m *Ipv6NdSlaacIntfsInfo) GetRa() []*Ipv6NdRaInfo {
	if m != nil {
		return m.Ra
	}
	return nil
}

func init() {
	proto.RegisterType((*Ipv6NdSlaacIntfsInfo_KEYS)(nil), "cisco_ios_xr_ipv6_nd_oper.ipv6_node_discovery.nodes.node.slaac_interfaces.slaac_interface.router_advert_detail.ipv6_nd_slaac_intfs_info_KEYS")
	proto.RegisterType((*BagTimespec)(nil), "cisco_ios_xr_ipv6_nd_oper.ipv6_node_discovery.nodes.node.slaac_interfaces.slaac_interface.router_advert_detail.bag_timespec")
	proto.RegisterType((*Ipv6NdPrefixQ)(nil), "cisco_ios_xr_ipv6_nd_oper.ipv6_node_discovery.nodes.node.slaac_interfaces.slaac_interface.router_advert_detail.ipv6_nd_prefixQ")
	proto.RegisterType((*Ipv6NdRaInfo)(nil), "cisco_ios_xr_ipv6_nd_oper.ipv6_node_discovery.nodes.node.slaac_interfaces.slaac_interface.router_advert_detail.ipv6_nd_ra_info")
	proto.RegisterType((*Ipv6NdSlaacIntfsInfo)(nil), "cisco_ios_xr_ipv6_nd_oper.ipv6_node_discovery.nodes.node.slaac_interfaces.slaac_interface.router_advert_detail.ipv6_nd_slaac_intfs_info")
}

func init() { proto.RegisterFile("ipv6_nd_slaac_intfs_info.proto", fileDescriptor_c9726b8ef3a5596e) }

var fileDescriptor_c9726b8ef3a5596e = []byte{
	// 620 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xcc, 0x54, 0x4d, 0x6f, 0xd4, 0x30,
	0x10, 0x55, 0xfa, 0xb1, 0x1f, 0xde, 0xa6, 0x0b, 0x06, 0x84, 0x05, 0x2a, 0x54, 0x2b, 0x81, 0xf6,
	0x94, 0x43, 0x8b, 0xf6, 0xce, 0x01, 0xa4, 0x8a, 0x82, 0x20, 0xf4, 0xc2, 0xc9, 0x72, 0xe2, 0xc9,
	0xd6, 0x92, 0x37, 0x09, 0xe3, 0xec, 0x6a, 0x2b, 0x21, 0xf1, 0x13, 0xb8, 0x73, 0xe1, 0x00, 0xbf,
	0x83, 0x33, 0x3f, 0x89, 0x23, 0xf2, 0x38, 0xbb, 0xfd, 0x90, 0x7a, 0x2d, 0xbd, 0x44, 0x33, 0x6f,
	0x9e, 0xc6, 0x6f, 0xde, 0xc4, 0x66, 0x4f, 0x4c, 0xbd, 0x98, 0xc8, 0x52, 0x4b, 0x67, 0x95, 0xca,
	0xa5, 0x29, 0x9b, 0xc2, 0x49, 0x53, 0x16, 0x55, 0x52, 0x63, 0xd5, 0x54, 0xbc, 0xcc, 0x8d, 0xcb,
	0x2b, 0x69, 0x2a, 0x27, 0x97, 0x28, 0x57, 0xe4, 0xaa, 0x06, 0x4c, 0x42, 0x52, 0x69, 0x90, 0xda,
	0x73, 0x16, 0x80, 0x67, 0x89, 0x4f, 0x1d, 0x7d, 0x93, 0x75, 0x43, 0xc0, 0x42, 0xe5, 0xe0, 0xae,
	0x02, 0x09, 0x56, 0xf3, 0x06, 0x50, 0x2a, 0xbd, 0x00, 0x6c, 0xa4, 0x86, 0x46, 0x19, 0x3b, 0xca,
	0xd9, 0xde, 0x75, 0x8a, 0xe4, 0x9b, 0x57, 0x9f, 0x3e, 0xf2, 0xc7, 0xac, 0x4f, 0x67, 0x96, 0x6a,
	0x06, 0x22, 0xda, 0x8f, 0xc6, 0xfd, 0xb4, 0xe7, 0x81, 0x77, 0x6a, 0x06, 0xfc, 0x19, 0xdb, 0x5d,
	0xf7, 0x0f, 0x8c, 0x0d, 0x62, 0xc4, 0x6b, 0xd4, 0xd3, 0x46, 0x63, 0xb6, 0x93, 0xa9, 0xa9, 0x6c,
	0xcc, 0x0c, 0x5c, 0x0d, 0x39, 0x17, 0xac, 0xeb, 0x20, 0xaf, 0x4a, 0xed, 0xa8, 0x63, 0x9c, 0xae,
	0xd2, 0xd1, 0xdf, 0x88, 0x0d, 0x57, 0x7a, 0x6a, 0x84, 0xc2, 0x2c, 0x3f, 0xf8, 0x43, 0x42, 0x28,
	0x95, 0xd6, 0x08, 0xce, 0xb5, 0x32, 0xe2, 0x80, 0xbe, 0x0c, 0x20, 0xbf, 0xcf, 0xb6, 0x61, 0x6e,
	0x26, 0x2f, 0x5a, 0x09, 0x21, 0xe1, 0xcf, 0xd9, 0x70, 0xa1, 0xac, 0xd1, 0xd2, 0x9a, 0x02, 0x48,
	0x81, 0xd8, 0xa4, 0x23, 0x63, 0x82, 0x8f, 0x4d, 0x01, 0x27, 0x66, 0x06, 0x3c, 0x61, 0xf7, 0x7c,
	0x3b, 0x40, 0x84, 0x8b, 0xdc, 0x2d, 0xe2, 0xde, 0x5d, 0x97, 0xd6, 0xfc, 0x3d, 0xc6, 0x5a, 0x51,
	0x16, 0x4a, 0xb1, 0x4d, 0xb4, 0x7e, 0x40, 0x8e, 0xa1, 0xf4, 0x62, 0x0a, 0xab, 0xa6, 0x4e, 0x74,
	0xa8, 0x12, 0x12, 0xef, 0x65, 0x5d, 0x2c, 0x65, 0xa8, 0x74, 0xa9, 0xd2, 0xab, 0x8b, 0xe5, 0x6b,
	0x9f, 0x8f, 0xfe, 0x74, 0xcf, 0x47, 0x47, 0x45, 0x1b, 0xf0, 0x46, 0x5d, 0x9e, 0x79, 0x95, 0xf2,
	0x5f, 0x11, 0x1b, 0x82, 0x55, 0xb5, 0x03, 0x62, 0x93, 0x58, 0x3f, 0xf8, 0xe0, 0xe0, 0x4b, 0x72,
	0xb3, 0xbf, 0x50, 0x72, 0x71, 0xb5, 0x69, 0xdc, 0x8a, 0x4a, 0x15, 0xd9, 0xc4, 0xd9, 0xd6, 0x69,
	0x55, 0xbb, 0xd6, 0x73, 0x8a, 0xcf, 0xbd, 0xd9, 0xba, 0xe2, 0xcd, 0xb9, 0xed, 0xc1, 0xcf, 0x9e,
	0x5d, 0xb9, 0xfd, 0x33, 0x62, 0xbb, 0x08, 0x2a, 0x3f, 0x55, 0x99, 0x6d, 0x29, 0x9d, 0xdb, 0x30,
	0xec, 0x5a, 0x13, 0xa9, 0xfc, 0x11, 0xb1, 0x1d, 0x84, 0x06, 0x55, 0xe9, 0x82, 0xc6, 0xee, 0x2d,
	0xd0, 0x38, 0x68, 0x15, 0x91, 0xc2, 0x3b, 0x6c, 0x73, 0xd6, 0xcc, 0x45, 0x8f, 0xec, 0xf5, 0x21,
	0x7f, 0xc8, 0xba, 0x80, 0x28, 0x67, 0x6e, 0x2a, 0xfa, 0xfb, 0xd1, 0xb8, 0x97, 0x76, 0x00, 0xf1,
	0xad, 0x9b, 0xf2, 0x07, 0xac, 0xb3, 0xc0, 0x42, 0x1a, 0x2d, 0x58, 0x58, 0xd3, 0x02, 0x8b, 0x23,
	0xcd, 0x1f, 0xb1, 0xfe, 0x7c, 0x22, 0x9b, 0xcc, 0xfa, 0xca, 0x20, 0x5c, 0xde, 0xf9, 0xe4, 0x24,
	0xb3, 0x47, 0x9a, 0x3f, 0x65, 0x03, 0x34, 0x99, 0xa4, 0x87, 0xcc, 0x68, 0xb1, 0x43, 0x55, 0x86,
	0x26, 0x7b, 0x1f, 0x10, 0x7f, 0x93, 0x35, 0x14, 0x6a, 0x6e, 0x1b, 0x19, 0x84, 0x8b, 0x98, 0xce,
	0x8c, 0x5b, 0x34, 0x25, 0x90, 0x8f, 0xbc, 0x8d, 0x64, 0xac, 0xb1, 0xa6, 0x39, 0x13, 0xbb, 0xd4,
	0xe8, 0x12, 0xc6, 0xbf, 0x47, 0xac, 0xd7, 0x5e, 0xc0, 0xcf, 0x62, 0xb8, 0xbf, 0x39, 0x1e, 0x1c,
	0x7c, 0xbd, 0x69, 0x9f, 0xaf, 0x3c, 0x54, 0x69, 0xb7, 0x0d, 0x46, 0xbf, 0x23, 0x26, 0xae, 0x7b,
	0x55, 0xfd, 0x0e, 0x8c, 0xce, 0xc4, 0x01, 0xdd, 0x67, 0x1f, 0xf2, 0x6f, 0x11, 0xdb, 0x40, 0x25,
	0x0e, 0xff, 0xef, 0x14, 0xed, 0x9b, 0x93, 0x6e, 0xa0, 0xca, 0x3a, 0xb4, 0xc3, 0xc3, 0x7f, 0x01,
	0x00, 0x00, 0xff, 0xff, 0x8a, 0xd9, 0x7e, 0xbc, 0xae, 0x06, 0x00, 0x00,
}
