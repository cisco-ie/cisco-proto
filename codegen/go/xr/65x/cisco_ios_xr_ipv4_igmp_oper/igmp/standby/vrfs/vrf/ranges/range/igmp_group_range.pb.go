/*
Copyright 2019 Cisco Systems

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: igmp_group_range.proto

package cisco_ios_xr_ipv4_igmp_oper_igmp_standby_vrfs_vrf_ranges_range

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type IgmpGroupRange_KEYS struct {
	VrfName              string   `protobuf:"bytes,1,opt,name=vrf_name,json=vrfName,proto3" json:"vrf_name,omitempty"`
	GroupAddress         string   `protobuf:"bytes,2,opt,name=group_address,json=groupAddress,proto3" json:"group_address,omitempty"`
	GroupMask            uint32   `protobuf:"varint,3,opt,name=group_mask,json=groupMask,proto3" json:"group_mask,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IgmpGroupRange_KEYS) Reset()         { *m = IgmpGroupRange_KEYS{} }
func (m *IgmpGroupRange_KEYS) String() string { return proto.CompactTextString(m) }
func (*IgmpGroupRange_KEYS) ProtoMessage()    {}
func (*IgmpGroupRange_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_41fc09d7bbd7746f, []int{0}
}

func (m *IgmpGroupRange_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IgmpGroupRange_KEYS.Unmarshal(m, b)
}
func (m *IgmpGroupRange_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IgmpGroupRange_KEYS.Marshal(b, m, deterministic)
}
func (m *IgmpGroupRange_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IgmpGroupRange_KEYS.Merge(m, src)
}
func (m *IgmpGroupRange_KEYS) XXX_Size() int {
	return xxx_messageInfo_IgmpGroupRange_KEYS.Size(m)
}
func (m *IgmpGroupRange_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_IgmpGroupRange_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_IgmpGroupRange_KEYS proto.InternalMessageInfo

func (m *IgmpGroupRange_KEYS) GetVrfName() string {
	if m != nil {
		return m.VrfName
	}
	return ""
}

func (m *IgmpGroupRange_KEYS) GetGroupAddress() string {
	if m != nil {
		return m.GroupAddress
	}
	return ""
}

func (m *IgmpGroupRange_KEYS) GetGroupMask() uint32 {
	if m != nil {
		return m.GroupMask
	}
	return 0
}

type IgmpAddrtype struct {
	AfName               string   `protobuf:"bytes,1,opt,name=af_name,json=afName,proto3" json:"af_name,omitempty"`
	Ipv4Address          string   `protobuf:"bytes,2,opt,name=ipv4_address,json=ipv4Address,proto3" json:"ipv4_address,omitempty"`
	Ipv6Address          string   `protobuf:"bytes,3,opt,name=ipv6_address,json=ipv6Address,proto3" json:"ipv6_address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IgmpAddrtype) Reset()         { *m = IgmpAddrtype{} }
func (m *IgmpAddrtype) String() string { return proto.CompactTextString(m) }
func (*IgmpAddrtype) ProtoMessage()    {}
func (*IgmpAddrtype) Descriptor() ([]byte, []int) {
	return fileDescriptor_41fc09d7bbd7746f, []int{1}
}

func (m *IgmpAddrtype) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IgmpAddrtype.Unmarshal(m, b)
}
func (m *IgmpAddrtype) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IgmpAddrtype.Marshal(b, m, deterministic)
}
func (m *IgmpAddrtype) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IgmpAddrtype.Merge(m, src)
}
func (m *IgmpAddrtype) XXX_Size() int {
	return xxx_messageInfo_IgmpAddrtype.Size(m)
}
func (m *IgmpAddrtype) XXX_DiscardUnknown() {
	xxx_messageInfo_IgmpAddrtype.DiscardUnknown(m)
}

var xxx_messageInfo_IgmpAddrtype proto.InternalMessageInfo

func (m *IgmpAddrtype) GetAfName() string {
	if m != nil {
		return m.AfName
	}
	return ""
}

func (m *IgmpAddrtype) GetIpv4Address() string {
	if m != nil {
		return m.Ipv4Address
	}
	return ""
}

func (m *IgmpAddrtype) GetIpv6Address() string {
	if m != nil {
		return m.Ipv6Address
	}
	return ""
}

type IgmpGroupRange struct {
	GroupAddressXr       *IgmpAddrtype `protobuf:"bytes,50,opt,name=group_address_xr,json=groupAddressXr,proto3" json:"group_address_xr,omitempty"`
	PrefixLength         uint32        `protobuf:"varint,51,opt,name=prefix_length,json=prefixLength,proto3" json:"prefix_length,omitempty"`
	Protocol             string        `protobuf:"bytes,52,opt,name=protocol,proto3" json:"protocol,omitempty"`
	IsStale              bool          `protobuf:"varint,53,opt,name=is_stale,json=isStale,proto3" json:"is_stale,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *IgmpGroupRange) Reset()         { *m = IgmpGroupRange{} }
func (m *IgmpGroupRange) String() string { return proto.CompactTextString(m) }
func (*IgmpGroupRange) ProtoMessage()    {}
func (*IgmpGroupRange) Descriptor() ([]byte, []int) {
	return fileDescriptor_41fc09d7bbd7746f, []int{2}
}

func (m *IgmpGroupRange) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IgmpGroupRange.Unmarshal(m, b)
}
func (m *IgmpGroupRange) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IgmpGroupRange.Marshal(b, m, deterministic)
}
func (m *IgmpGroupRange) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IgmpGroupRange.Merge(m, src)
}
func (m *IgmpGroupRange) XXX_Size() int {
	return xxx_messageInfo_IgmpGroupRange.Size(m)
}
func (m *IgmpGroupRange) XXX_DiscardUnknown() {
	xxx_messageInfo_IgmpGroupRange.DiscardUnknown(m)
}

var xxx_messageInfo_IgmpGroupRange proto.InternalMessageInfo

func (m *IgmpGroupRange) GetGroupAddressXr() *IgmpAddrtype {
	if m != nil {
		return m.GroupAddressXr
	}
	return nil
}

func (m *IgmpGroupRange) GetPrefixLength() uint32 {
	if m != nil {
		return m.PrefixLength
	}
	return 0
}

func (m *IgmpGroupRange) GetProtocol() string {
	if m != nil {
		return m.Protocol
	}
	return ""
}

func (m *IgmpGroupRange) GetIsStale() bool {
	if m != nil {
		return m.IsStale
	}
	return false
}

func init() {
	proto.RegisterType((*IgmpGroupRange_KEYS)(nil), "cisco_ios_xr_ipv4_igmp_oper.igmp.standby.vrfs.vrf.ranges.range.igmp_group_range_KEYS")
	proto.RegisterType((*IgmpAddrtype)(nil), "cisco_ios_xr_ipv4_igmp_oper.igmp.standby.vrfs.vrf.ranges.range.igmp_addrtype")
	proto.RegisterType((*IgmpGroupRange)(nil), "cisco_ios_xr_ipv4_igmp_oper.igmp.standby.vrfs.vrf.ranges.range.igmp_group_range")
}

func init() { proto.RegisterFile("igmp_group_range.proto", fileDescriptor_41fc09d7bbd7746f) }

var fileDescriptor_41fc09d7bbd7746f = []byte{
	// 320 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x91, 0x3f, 0x4f, 0xc3, 0x30,
	0x14, 0xc4, 0x65, 0x2a, 0xf5, 0x8f, 0xdb, 0xa2, 0xca, 0x12, 0x60, 0x90, 0x90, 0x42, 0x59, 0x32,
	0x79, 0x68, 0x4b, 0x47, 0x24, 0x06, 0x26, 0x28, 0x43, 0xba, 0xc0, 0x64, 0xb9, 0xad, 0x13, 0xac,
	0x36, 0xb1, 0x65, 0x87, 0xd0, 0x7e, 0x62, 0xbe, 0x06, 0xf2, 0x33, 0x44, 0xa4, 0x2b, 0x4b, 0x12,
	0x5f, 0x7e, 0x7e, 0xa7, 0xbb, 0x87, 0xcf, 0x55, 0x96, 0x1b, 0x9e, 0x59, 0xfd, 0x61, 0xb8, 0x15,
	0x45, 0x26, 0x99, 0xb1, 0xba, 0xd4, 0xe4, 0x7e, 0xad, 0xdc, 0x5a, 0x73, 0xa5, 0x1d, 0xdf, 0x5b,
	0xae, 0x4c, 0x35, 0xe3, 0x40, 0x6a, 0x23, 0x2d, 0xf3, 0x5f, 0xcc, 0x95, 0xa2, 0xd8, 0xac, 0x0e,
	0xac, 0xb2, 0xa9, 0xf3, 0x0f, 0x06, 0xd7, 0x5d, 0x78, 0x8d, 0x2b, 0x7c, 0x76, 0x3c, 0x99, 0x3f,
	0x3d, 0xbe, 0x2d, 0xc9, 0x25, 0xee, 0x56, 0x36, 0xe5, 0x85, 0xc8, 0x25, 0x45, 0x11, 0x8a, 0x7b,
	0x49, 0xa7, 0xb2, 0xe9, 0x8b, 0xc8, 0x25, 0xb9, 0xc5, 0xc3, 0x80, 0x8b, 0xcd, 0xc6, 0x4a, 0xe7,
	0xe8, 0x09, 0xfc, 0x1f, 0x80, 0xf8, 0x10, 0x34, 0x72, 0x8d, 0x71, 0x80, 0x72, 0xe1, 0xb6, 0xb4,
	0x15, 0xa1, 0x78, 0x98, 0xf4, 0x40, 0x59, 0x08, 0xb7, 0x1d, 0x17, 0x78, 0x08, 0xbe, 0x7e, 0x44,
	0x79, 0x30, 0x92, 0x5c, 0xe0, 0x8e, 0x68, 0xd8, 0xb5, 0x45, 0x70, 0xbb, 0xc1, 0x03, 0x88, 0xd5,
	0x34, 0xeb, 0x7b, 0xed, 0xd7, 0x2b, 0x20, 0xf3, 0x1a, 0x69, 0xd5, 0xc8, 0xfc, 0x07, 0x19, 0x7f,
	0x21, 0x3c, 0x3a, 0x0e, 0x4a, 0x3e, 0xf1, 0xa8, 0x11, 0x84, 0xef, 0x2d, 0x9d, 0x44, 0x28, 0xee,
	0x4f, 0x16, 0xec, 0x7f, 0xbd, 0xb2, 0x46, 0xb8, 0xe4, 0xf4, 0x6f, 0x35, 0xaf, 0xd6, 0x37, 0x68,
	0xac, 0x4c, 0xd5, 0x9e, 0xef, 0x64, 0x91, 0x95, 0xef, 0x74, 0x0a, 0xfd, 0x0c, 0x82, 0xf8, 0x0c,
	0x1a, 0xb9, 0xc2, 0x5d, 0xd8, 0xf1, 0x5a, 0xef, 0xe8, 0x0c, 0x12, 0xd5, 0x67, 0xbf, 0x1d, 0xe5,
	0xb8, 0x2b, 0xc5, 0x4e, 0xd2, 0xbb, 0x08, 0xc5, 0xdd, 0xa4, 0xa3, 0xdc, 0xd2, 0x1f, 0x57, 0x6d,
	0x80, 0xa6, 0xdf, 0x01, 0x00, 0x00, 0xff, 0xff, 0xd4, 0xb3, 0x0f, 0x70, 0x32, 0x02, 0x00, 0x00,
}
