/*
Copyright 2019 Cisco Systems

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: igmp_edm_i2q_stats_bag.proto

package cisco_ios_xr_ipv4_igmp_oper_mld_standby_process_unicast_qos_adjust_stats

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type IgmpEdmI2QStatsBag_KEYS struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IgmpEdmI2QStatsBag_KEYS) Reset()         { *m = IgmpEdmI2QStatsBag_KEYS{} }
func (m *IgmpEdmI2QStatsBag_KEYS) String() string { return proto.CompactTextString(m) }
func (*IgmpEdmI2QStatsBag_KEYS) ProtoMessage()    {}
func (*IgmpEdmI2QStatsBag_KEYS) Descriptor() ([]byte, []int) {
	return fileDescriptor_2f973884b2a458f3, []int{0}
}

func (m *IgmpEdmI2QStatsBag_KEYS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IgmpEdmI2QStatsBag_KEYS.Unmarshal(m, b)
}
func (m *IgmpEdmI2QStatsBag_KEYS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IgmpEdmI2QStatsBag_KEYS.Marshal(b, m, deterministic)
}
func (m *IgmpEdmI2QStatsBag_KEYS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IgmpEdmI2QStatsBag_KEYS.Merge(m, src)
}
func (m *IgmpEdmI2QStatsBag_KEYS) XXX_Size() int {
	return xxx_messageInfo_IgmpEdmI2QStatsBag_KEYS.Size(m)
}
func (m *IgmpEdmI2QStatsBag_KEYS) XXX_DiscardUnknown() {
	xxx_messageInfo_IgmpEdmI2QStatsBag_KEYS.DiscardUnknown(m)
}

var xxx_messageInfo_IgmpEdmI2QStatsBag_KEYS proto.InternalMessageInfo

type IgmpEdmI2QStatsBag struct {
	Queues                 uint32   `protobuf:"varint,50,opt,name=queues,proto3" json:"queues,omitempty"`
	Batches                uint32   `protobuf:"varint,51,opt,name=batches,proto3" json:"batches,omitempty"`
	AddToBatches           uint32   `protobuf:"varint,52,opt,name=add_to_batches,json=addToBatches,proto3" json:"add_to_batches,omitempty"`
	DeleteToBatches        uint32   `protobuf:"varint,53,opt,name=delete_to_batches,json=deleteToBatches,proto3" json:"delete_to_batches,omitempty"`
	SendSuccess            uint32   `protobuf:"varint,54,opt,name=send_success,json=sendSuccess,proto3" json:"send_success,omitempty"`
	SendErrors             uint32   `protobuf:"varint,55,opt,name=send_errors,json=sendErrors,proto3" json:"send_errors,omitempty"`
	SendCommErrors         uint32   `protobuf:"varint,56,opt,name=send_comm_errors,json=sendCommErrors,proto3" json:"send_comm_errors,omitempty"`
	SendPartialErrors      uint32   `protobuf:"varint,57,opt,name=send_partial_errors,json=sendPartialErrors,proto3" json:"send_partial_errors,omitempty"`
	ReceivedResyncRequests uint32   `protobuf:"varint,58,opt,name=received_resync_requests,json=receivedResyncRequests,proto3" json:"received_resync_requests,omitempty"`
	SentResyncBulks        uint32   `protobuf:"varint,59,opt,name=sent_resync_bulks,json=sentResyncBulks,proto3" json:"sent_resync_bulks,omitempty"`
	IsResyncReceived       bool     `protobuf:"varint,60,opt,name=is_resync_received,json=isResyncReceived,proto3" json:"is_resync_received,omitempty"`
	IsResyncRequired       bool     `protobuf:"varint,61,opt,name=is_resync_required,json=isResyncRequired,proto3" json:"is_resync_required,omitempty"`
	IsResyncStartSent      bool     `protobuf:"varint,62,opt,name=is_resync_start_sent,json=isResyncStartSent,proto3" json:"is_resync_start_sent,omitempty"`
	IsQosSSweeped          bool     `protobuf:"varint,63,opt,name=is_qos_s_sweeped,json=isQosSSweeped,proto3" json:"is_qos_s_sweeped,omitempty"`
	LastSweepTime          uint64   `protobuf:"varint,64,opt,name=last_sweep_time,json=lastSweepTime,proto3" json:"last_sweep_time,omitempty"`
	LastDownloadTime       uint64   `protobuf:"varint,65,opt,name=last_download_time,json=lastDownloadTime,proto3" json:"last_download_time,omitempty"`
	XXX_NoUnkeyedLiteral   struct{} `json:"-"`
	XXX_unrecognized       []byte   `json:"-"`
	XXX_sizecache          int32    `json:"-"`
}

func (m *IgmpEdmI2QStatsBag) Reset()         { *m = IgmpEdmI2QStatsBag{} }
func (m *IgmpEdmI2QStatsBag) String() string { return proto.CompactTextString(m) }
func (*IgmpEdmI2QStatsBag) ProtoMessage()    {}
func (*IgmpEdmI2QStatsBag) Descriptor() ([]byte, []int) {
	return fileDescriptor_2f973884b2a458f3, []int{1}
}

func (m *IgmpEdmI2QStatsBag) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IgmpEdmI2QStatsBag.Unmarshal(m, b)
}
func (m *IgmpEdmI2QStatsBag) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IgmpEdmI2QStatsBag.Marshal(b, m, deterministic)
}
func (m *IgmpEdmI2QStatsBag) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IgmpEdmI2QStatsBag.Merge(m, src)
}
func (m *IgmpEdmI2QStatsBag) XXX_Size() int {
	return xxx_messageInfo_IgmpEdmI2QStatsBag.Size(m)
}
func (m *IgmpEdmI2QStatsBag) XXX_DiscardUnknown() {
	xxx_messageInfo_IgmpEdmI2QStatsBag.DiscardUnknown(m)
}

var xxx_messageInfo_IgmpEdmI2QStatsBag proto.InternalMessageInfo

func (m *IgmpEdmI2QStatsBag) GetQueues() uint32 {
	if m != nil {
		return m.Queues
	}
	return 0
}

func (m *IgmpEdmI2QStatsBag) GetBatches() uint32 {
	if m != nil {
		return m.Batches
	}
	return 0
}

func (m *IgmpEdmI2QStatsBag) GetAddToBatches() uint32 {
	if m != nil {
		return m.AddToBatches
	}
	return 0
}

func (m *IgmpEdmI2QStatsBag) GetDeleteToBatches() uint32 {
	if m != nil {
		return m.DeleteToBatches
	}
	return 0
}

func (m *IgmpEdmI2QStatsBag) GetSendSuccess() uint32 {
	if m != nil {
		return m.SendSuccess
	}
	return 0
}

func (m *IgmpEdmI2QStatsBag) GetSendErrors() uint32 {
	if m != nil {
		return m.SendErrors
	}
	return 0
}

func (m *IgmpEdmI2QStatsBag) GetSendCommErrors() uint32 {
	if m != nil {
		return m.SendCommErrors
	}
	return 0
}

func (m *IgmpEdmI2QStatsBag) GetSendPartialErrors() uint32 {
	if m != nil {
		return m.SendPartialErrors
	}
	return 0
}

func (m *IgmpEdmI2QStatsBag) GetReceivedResyncRequests() uint32 {
	if m != nil {
		return m.ReceivedResyncRequests
	}
	return 0
}

func (m *IgmpEdmI2QStatsBag) GetSentResyncBulks() uint32 {
	if m != nil {
		return m.SentResyncBulks
	}
	return 0
}

func (m *IgmpEdmI2QStatsBag) GetIsResyncReceived() bool {
	if m != nil {
		return m.IsResyncReceived
	}
	return false
}

func (m *IgmpEdmI2QStatsBag) GetIsResyncRequired() bool {
	if m != nil {
		return m.IsResyncRequired
	}
	return false
}

func (m *IgmpEdmI2QStatsBag) GetIsResyncStartSent() bool {
	if m != nil {
		return m.IsResyncStartSent
	}
	return false
}

func (m *IgmpEdmI2QStatsBag) GetIsQosSSweeped() bool {
	if m != nil {
		return m.IsQosSSweeped
	}
	return false
}

func (m *IgmpEdmI2QStatsBag) GetLastSweepTime() uint64 {
	if m != nil {
		return m.LastSweepTime
	}
	return 0
}

func (m *IgmpEdmI2QStatsBag) GetLastDownloadTime() uint64 {
	if m != nil {
		return m.LastDownloadTime
	}
	return 0
}

func init() {
	proto.RegisterType((*IgmpEdmI2QStatsBag_KEYS)(nil), "cisco_ios_xr_ipv4_igmp_oper.mld.standby.process.unicast_qos_adjust_stats.igmp_edm_i2q_stats_bag_KEYS")
	proto.RegisterType((*IgmpEdmI2QStatsBag)(nil), "cisco_ios_xr_ipv4_igmp_oper.mld.standby.process.unicast_qos_adjust_stats.igmp_edm_i2q_stats_bag")
}

func init() { proto.RegisterFile("igmp_edm_i2q_stats_bag.proto", fileDescriptor_2f973884b2a458f3) }

var fileDescriptor_2f973884b2a458f3 = []byte{
	// 462 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0xd3, 0xdf, 0x6a, 0x14, 0x31,
	0x14, 0x06, 0x70, 0x16, 0xb4, 0x4a, 0xec, 0xb6, 0xbb, 0x51, 0x96, 0x80, 0x8a, 0x6b, 0x11, 0x5d,
	0x44, 0x56, 0x68, 0xab, 0xd6, 0xff, 0x5a, 0x2d, 0x08, 0xde, 0xe8, 0x4e, 0x6f, 0xbc, 0x3a, 0x64,
	0x26, 0x87, 0x1a, 0x9d, 0x99, 0xcc, 0xe4, 0x64, 0x5a, 0xfb, 0x4e, 0x3e, 0xa4, 0xe4, 0x64, 0x86,
	0x95, 0xd2, 0xcb, 0x7c, 0xdf, 0x2f, 0x27, 0xbb, 0x21, 0x23, 0xee, 0xd8, 0x93, 0xaa, 0x01, 0x34,
	0x15, 0xd8, 0xdd, 0x16, 0x28, 0xe8, 0x40, 0x90, 0xeb, 0x93, 0x65, 0xe3, 0x5d, 0x70, 0xf2, 0x4b,
	0x61, 0xa9, 0x70, 0x60, 0x1d, 0xc1, 0x1f, 0x0f, 0xb6, 0x39, 0xdd, 0x07, 0xf6, 0xae, 0x41, 0xbf,
	0xac, 0x4a, 0xb3, 0xa4, 0xa0, 0x6b, 0x93, 0x9f, 0x47, 0x5e, 0x20, 0xd1, 0xb2, 0xab, 0x6d, 0xa1,
	0x29, 0x40, 0xeb, 0x08, 0xb4, 0xf9, 0xd5, 0x51, 0x48, 0x33, 0x77, 0xee, 0x8a, 0xdb, 0x97, 0x9f,
	0x04, 0x5f, 0x8f, 0x7e, 0x64, 0x3b, 0x7f, 0xaf, 0x8a, 0xd9, 0xe5, 0xbd, 0x9c, 0x89, 0x8d, 0xb6,
	0xc3, 0x0e, 0x49, 0xed, 0xce, 0x47, 0x8b, 0xf1, 0xaa, 0x5f, 0x49, 0x25, 0xae, 0xe5, 0x3a, 0x14,
	0x3f, 0x91, 0xd4, 0x1e, 0x17, 0xc3, 0x52, 0x3e, 0x10, 0x5b, 0xda, 0x18, 0x08, 0x0e, 0x06, 0xb0,
	0xcf, 0x60, 0x53, 0x1b, 0x73, 0xec, 0x0e, 0x7b, 0xf5, 0x58, 0x4c, 0x0d, 0x96, 0x18, 0xf0, 0x7f,
	0xf8, 0x8c, 0xe1, 0x76, 0x2a, 0xd6, 0xf6, 0xbe, 0xd8, 0x24, 0xac, 0x0d, 0x50, 0x57, 0xc4, 0xbf,
	0xa9, 0x9e, 0x33, 0xbb, 0x11, 0xb3, 0x2c, 0x45, 0xf2, 0x9e, 0xe0, 0x25, 0xa0, 0xf7, 0xce, 0x93,
	0x7a, 0xc1, 0x42, 0xc4, 0xe8, 0x88, 0x13, 0xb9, 0x10, 0x13, 0x06, 0x85, 0xab, 0xaa, 0x41, 0x1d,
	0xb0, 0xda, 0x8a, 0xf9, 0x27, 0x57, 0x55, 0xbd, 0x5c, 0x8a, 0x9b, 0x2c, 0x1b, 0xed, 0x83, 0xd5,
	0xe5, 0x80, 0x5f, 0x32, 0x9e, 0xc6, 0xea, 0x5b, 0x6a, 0x7a, 0x7f, 0x20, 0x94, 0xc7, 0x02, 0xed,
	0x29, 0x1a, 0xf0, 0x48, 0xe7, 0x75, 0x01, 0x1e, 0xdb, 0x0e, 0x29, 0x90, 0x7a, 0xc5, 0x9b, 0x66,
	0x43, 0xbf, 0xe2, 0x7a, 0xd5, 0xb7, 0xf1, 0x0e, 0x08, 0xeb, 0x30, 0xec, 0xca, 0xbb, 0xf2, 0x37,
	0xa9, 0xd7, 0xe9, 0x0e, 0x62, 0x91, 0xf8, 0x61, 0x8c, 0xe5, 0x13, 0x21, 0x2d, 0xad, 0xe7, 0xa7,
	0x79, 0xea, 0xcd, 0x7c, 0xb4, 0xb8, 0xbe, 0x9a, 0x58, 0x1a, 0x26, 0xa7, 0xfc, 0xa2, 0x6e, 0x3b,
	0xeb, 0xd1, 0xa8, 0xb7, 0x17, 0x75, 0xca, 0xe5, 0x53, 0x71, 0x6b, 0xad, 0x29, 0x68, 0x1f, 0x20,
	0x1e, 0xaf, 0xde, 0xb1, 0x9f, 0x0e, 0x3e, 0x8b, 0x4d, 0x86, 0x75, 0x90, 0x8f, 0xc4, 0xc4, 0x12,
	0xbf, 0x32, 0x02, 0x3a, 0x43, 0x6c, 0xd0, 0xa8, 0xf7, 0x8c, 0xc7, 0x96, 0xbe, 0x3b, 0xca, 0xb2,
	0x14, 0xca, 0x87, 0x62, 0xbb, 0x8c, 0x0f, 0x92, 0x11, 0x04, 0x5b, 0xa1, 0xfa, 0x30, 0x1f, 0x2d,
	0xae, 0xac, 0xc6, 0x31, 0x66, 0x75, 0x6c, 0x2b, 0x8c, 0xbf, 0x97, 0x9d, 0x71, 0x67, 0x75, 0xe9,
	0xb4, 0x49, 0xf4, 0x23, 0xd3, 0x49, 0x6c, 0x3e, 0xf7, 0x45, 0xd4, 0xf9, 0x06, 0x7f, 0x1e, 0x7b,
	0xff, 0x02, 0x00, 0x00, 0xff, 0xff, 0xf1, 0xa8, 0x0e, 0xb3, 0x3e, 0x03, 0x00, 0x00,
}
